1
00:00:00,000 --> 00:00:03,000
That's weird kernel panic the whole system just crashed

2
00:00:15,000 --> 00:00:18,000
That's weird kernel panic the whole system just crashed

3
00:00:20,000 --> 00:00:21,000
欢迎收听

4
00:00:23,000 --> 00:00:26,000
没有旗下的 IT 技术主题娱乐节目内核空荒

5
00:00:26,000 --> 00:00:28,000
我们号称 Hotcore 但是也没有干货

6
00:00:28,000 --> 00:00:30,000
想听人听不想听人就别听

7
00:00:30,000 --> 00:00:33,000
本节目的网址是 kernelpanic.fm

8
00:00:33,000 --> 00:00:35,000
我们推荐大家使用 Podcast 可无段订阅节目

9
00:00:35,000 --> 00:00:39,000
详情请访问 kernelpanic.fm

10
00:00:39,000 --> 00:00:41,000
欢迎你为本节目捐款

11
00:00:41,000 --> 00:00:43,000
捐款地址是 kernelpanic.fm slash donate

12
00:00:43,000 --> 00:00:46,000
捐款金额随意只要是 8 了正等数倍就可以

13
00:00:46,000 --> 00:00:49,000
捐款不会为你带什么不捐也不会让你失去什么

14
00:00:51,000 --> 00:00:52,000
这一期还是没有口号

15
00:00:52,000 --> 00:00:55,000
今年我们已经跟过一期了

16
00:00:55,000 --> 00:01:00,000
所以今年的第二期已经不算是年根节目了

17
00:01:00,000 --> 00:01:02,000
对这已经算是一个馈赠了

18
00:01:03,000 --> 00:01:04,000
满意赠益

19
00:01:06,000 --> 00:01:07,000
今年今年还出了两期

20
00:01:07,000 --> 00:01:09,000
对太了不起

21
00:01:09,000 --> 00:01:12,000
而且夏天还没到就已经出了两期了

22
00:01:13,000 --> 00:01:18,000
对当然也是因为赶在刚好下周我们两个都要出去玩对吧

23
00:01:18,000 --> 00:01:22,000
所以行前再录一期

24
00:01:22,000 --> 00:01:24,000
然后争取能够发出来

25
00:01:24,000 --> 00:01:25,000
真的吗

26
00:01:25,000 --> 00:01:28,000
之前咱们出去玩之前怎么从来没有想过这件事

27
00:01:29,000 --> 00:01:30,000
找个借口

28
00:01:34,000 --> 00:01:35,000
最近发生什么大事了吗

29
00:01:35,000 --> 00:01:42,000
你在远在德国知道我们伟大的祖国发生了什么翻天覆地的事情

30
00:01:43,000 --> 00:01:44,000
我当然欣喜祖国

31
00:01:44,000 --> 00:01:49,000
这中美围绕中国和世界的两级

32
00:01:49,000 --> 00:01:52,000
你现在说这种祖国这感觉到应该是指哪里呢

33
00:01:52,000 --> 00:01:54,000
对于你这么一个身份的人来讲

34
00:01:54,000 --> 00:01:55,000
我觉得是这样的

35
00:01:55,000 --> 00:01:59,000
你在中国你可以叫中国为你国对吧

36
00:02:00,000 --> 00:02:03,000
对我在德国我可以叫德国为你国

37
00:02:04,000 --> 00:02:06,000
那么我应该叫中国什么呢

38
00:02:06,000 --> 00:02:07,000
我觉得可以叫他国

39
00:02:08,000 --> 00:02:10,000
但是他国就是很犯吗

40
00:02:11,000 --> 00:02:14,000
这么说吧就是你觉得为什么最开始人们要说你国

41
00:02:14,000 --> 00:02:16,000
就是言下之意是我生活在这里

42
00:02:16,000 --> 00:02:18,000
但是这是你的国家

43
00:02:18,000 --> 00:02:21,000
这个梗最开始是从我记得是从北大来的

44
00:02:22,000 --> 00:02:24,000
还是从清华来的

45
00:02:24,000 --> 00:02:25,000
他觉得没有参与感的意思吗

46
00:02:25,000 --> 00:02:29,000
对就是就好像你父母吵架

47
00:02:29,000 --> 00:02:30,000
我不知道你父母会不会这样

48
00:02:30,000 --> 00:02:31,000
比如说我父母吵架的时候

49
00:02:32,000 --> 00:02:34,000
或说我犯了错的时候

50
00:02:34,000 --> 00:02:35,000
我妈会对

51
00:02:35,000 --> 00:02:37,000
看你们家谁又做什么事了对

52
00:02:38,000 --> 00:02:40,000
其实就是这种观点

53
00:02:40,000 --> 00:02:45,000
就是要把自己最深室外对一种跟自己撇清关系的态度对吧

54
00:02:46,000 --> 00:02:50,000
你包括那个时候最开始应该是清华说跪笑

55
00:02:50,000 --> 00:02:51,000
跪笑怎么怎么样

56
00:02:51,000 --> 00:02:53,000
但是像他自己也是清华学生

57
00:02:53,000 --> 00:02:56,000
然后到了你国这个点

58
00:02:56,000 --> 00:02:57,000
就也有这种感觉

59
00:02:58,000 --> 00:03:01,000
你会觉得这个国家发生的事情好像跟你没什么关联

60
00:03:01,000 --> 00:03:05,000
或者说你觉得这些发生的事情对于你来说实在是太难以接受了

61
00:03:05,000 --> 00:03:08,000
你情愿自己不是这个国家的一份子

62
00:03:09,000 --> 00:03:15,000
我觉得这个词给我的感觉可能最大的是那种就是 out of control 的感觉

63
00:03:15,000 --> 00:03:17,000
就是 beyond your control 的感觉

64
00:03:17,000 --> 00:03:23,000
对而且但我觉得在你国这个层面这种感受实际上是正确的

65
00:03:23,000 --> 00:03:25,000
尤其是在他国你知道吧

66
00:03:25,000 --> 00:03:28,000
就是人们其实对自己的国家是没有什么掌控的

67
00:03:28,000 --> 00:03:36,000
但是我在你国就我现在德国对于中国发生的事情同样没有掌控

68
00:03:36,000 --> 00:03:38,000
而且是更没有掌控

69
00:03:38,000 --> 00:03:40,000
所以这就是说一个他国的感觉

70
00:03:40,000 --> 00:03:43,000
但是就你连名义上的投票权都没有了

71
00:03:43,000 --> 00:03:48,000
对然后对用脚投票就再也不要妄想用手投票

72
00:03:48,000 --> 00:03:52,000
然后然后现在我也没有用手投过

73
00:03:53,000 --> 00:03:55,000
其实我在大学是投过一次票的

74
00:03:55,000 --> 00:03:58,000
就选人的代表之类的一件事情

75
00:03:58,000 --> 00:04:00,000
然后因为两个人

76
00:04:00,000 --> 00:04:02,000
但是这两个候选人谁也不认识

77
00:04:02,000 --> 00:04:05,000
所以大家就选说好谁的笔画谁的名字笔画都要投给谁好

78
00:04:08,000 --> 00:04:10,000
这是一个什么排序逻辑

79
00:04:10,000 --> 00:04:11,000
笔画排序

80
00:04:13,000 --> 00:04:17,000
排序是我一生中在中国唯一一次投票

81
00:04:17,000 --> 00:04:22,000
好像我也是我大学里面就是应该是选一个就是那个片区的还是什么的

82
00:04:22,000 --> 00:04:26,000
一个人大代表的区的代表应该是

83
00:04:26,000 --> 00:04:29,000
然后那个时候投过之后就再也没有发生过这种事情

84
00:04:29,000 --> 00:04:30,000
对等着扯远了

85
00:04:30,000 --> 00:04:37,000
然后问题现在是现在这个世界的这样一个情况就是比如说

86
00:04:37,000 --> 00:04:41,000
对于我来说其实最直接的影响就是股票是啥对吧

87
00:04:41,000 --> 00:04:46,000
你买了股票然后中国和美国这边一呛沙

88
00:04:46,000 --> 00:04:50,000
然后股市就跌下去了

89
00:04:50,000 --> 00:04:54,000
或者是美国总统在推荐上发谣推

90
00:04:54,000 --> 00:04:58,000
然后某条股市要么现在股价就掉下去了

91
00:04:58,000 --> 00:05:01,000
这种事情是非常自在的

92
00:05:01,000 --> 00:05:04,000
然后你会觉得对

93
00:05:04,000 --> 00:05:07,000
所以暴露了你在长美股

94
00:05:08,000 --> 00:05:11,000
我我买了都有吧

95
00:05:11,000 --> 00:05:12,000
我没有买中国股股票

96
00:05:12,000 --> 00:05:16,000
但是欧股美股都有你不能你不能买一只股票对吧

97
00:05:16,000 --> 00:05:18,000
你也不能专注于一个市场

98
00:05:18,000 --> 00:05:19,000
你得分散一下风险

99
00:05:19,000 --> 00:05:23,000
就是你参与了这个欧洲市场和美国市场

100
00:05:23,000 --> 00:05:26,000
对欧洲市场相对来说波兰不行一点

101
00:05:26,000 --> 00:05:31,000
反正就是就就一直在跌了这么这么理解好了

102
00:05:31,000 --> 00:05:34,000
欧洲股市是哪个法拉克福还是这个

103
00:05:34,000 --> 00:05:37,000
欧洲股市有很多很多个证交所

104
00:05:37,000 --> 00:05:40,000
然后德国就是你你你他们之间是互通的吗

105
00:05:40,000 --> 00:05:41,000
他们之间互通的

106
00:05:41,000 --> 00:05:43,000
然后我一般是买对

107
00:05:43,000 --> 00:05:45,000
每个国家呢会有一个自己的指数

108
00:05:45,000 --> 00:05:49,000
但基本上某一只股票如果同时在德国交易所交易的话

109
00:05:49,000 --> 00:05:51,000
股价其实同步的

110
00:05:51,000 --> 00:05:54,000
所以你也想起老师那个中国的才智新闻里面

111
00:05:54,000 --> 00:05:56,000
会有什么德国工业指数什么什么

112
00:05:56,000 --> 00:05:58,000
DAX 对 DAX

113
00:05:58,000 --> 00:06:00,000
然后瑞士有一个瑞士的指数

114
00:06:00,000 --> 00:06:04,000
瑞士的指数英国有英国英国 FTSE

115
00:06:04,000 --> 00:06:06,000
我都不太自己反正是对

116
00:06:06,000 --> 00:06:07,000
每个国家有自己的指数

117
00:06:07,000 --> 00:06:12,000
然后就像美国也有什么纳斯达克啊

118
00:06:12,000 --> 00:06:15,000
那个扭交所吗

119
00:06:15,000 --> 00:06:17,000
标准与穷 500 之类的这样

120
00:06:17,000 --> 00:06:21,000
SP

121
00:06:21,000 --> 00:06:23,000
好吧

122
00:06:23,000 --> 00:06:26,000
所以你也是深度参与这个全球经济

123
00:06:26,000 --> 00:06:30,000
然后虽然远在我国的事情

124
00:06:30,000 --> 00:06:31,000
你也得关心一下

125
00:06:31,000 --> 00:06:34,000
他也会影响到

126
00:06:34,000 --> 00:06:37,000
你国以及我

127
00:06:37,000 --> 00:06:41,000
币国贵国

128
00:06:41,000 --> 00:06:44,000
对

129
00:06:44,000 --> 00:06:46,000
德意志斯坦

130
00:06:46,000 --> 00:06:51,000
但最近可能就发生了大家关注点比较大的

131
00:06:51,000 --> 00:06:55,000
就是这个中芯被美国商务部制裁这件事情

132
00:06:55,000 --> 00:06:58,000
我不知道大家有没有看相关的报道

133
00:06:58,000 --> 00:07:02,000
你有看相关的一些这个 context 吗

134
00:07:02,000 --> 00:07:03,000
上下文

135
00:07:03,000 --> 00:07:05,000
上下文我大概看了一下

136
00:07:05,000 --> 00:07:07,000
我主要觉得就是

137
00:07:07,000 --> 00:07:13,000
你要把这件事情放在大环境下的一个链条来看的话

138
00:07:13,000 --> 00:07:15,000
还是比较

139
00:07:15,000 --> 00:07:19,000
我还是更觉得就是就好像两个人

140
00:07:19,000 --> 00:07:21,000
中美两国在贸易战

141
00:07:21,000 --> 00:07:23,000
然后

142
00:07:23,000 --> 00:07:24,000
美国首先发难

143
00:07:24,000 --> 00:07:25,000
然后中国还了一下

144
00:07:25,000 --> 00:07:26,000
然后还了一下

145
00:07:26,000 --> 00:07:30,000
还的时候大家就说我靠这个什么下了王炸之类的

146
00:07:30,000 --> 00:07:33,000
然后你看然后美国一来就王炸了

147
00:07:33,000 --> 00:07:34,000
对

148
00:07:34,000 --> 00:07:36,000
然后美国还了一下这样子

149
00:07:36,000 --> 00:07:39,000
没有人能做出任何的对策

150
00:07:39,000 --> 00:07:41,000
我觉得这点是非常的

151
00:07:43,000 --> 00:07:44,000
让人难过的

152
00:07:44,000 --> 00:07:46,000
就这个事我觉得现在就大家

153
00:07:46,000 --> 00:07:48,000
现在要说一下现在时间点可能之后

154
00:07:48,000 --> 00:07:51,000
会有新的这个新闻爆出来

155
00:07:51,000 --> 00:07:55,000
现在的我们聊这件事的时间是这个 4 月 21 日

156
00:07:55,000 --> 00:07:59,000
如果之后发生什么新闻我们现在是没有办法知道的

157
00:07:59,000 --> 00:08:03,000
虽然你听到这个节目的时候可能你知道的 more information

158
00:08:03,000 --> 00:08:05,000
但是就目前来看的话

159
00:08:05,000 --> 00:08:10,000
我觉得国内的对这件事情的有两个主要的声音吧

160
00:08:10,000 --> 00:08:11,000
或者两个主要的流派

161
00:08:11,000 --> 00:08:16,000
一种就是说这个认为这个中心这个事情是这个贸易战的一部分

162
00:08:16,000 --> 00:08:21,000
或者说它是美国这个对中国进行这个贸易保护

163
00:08:21,000 --> 00:08:24,000
或者贸易这个壁垒的一个措施之一

164
00:08:24,000 --> 00:08:31,000
然后另外一派则倾向于认为中心被制裁这个事情是一个个案

165
00:08:31,000 --> 00:08:33,000
是因为中心公司本身的问题

166
00:08:33,000 --> 00:08:37,000
而不是而不是这个从于从政治因素的考虑

167
00:08:37,000 --> 00:08:43,000
当然肯定就是说从我们看到的这个中心高层的这个讲话的角度来

168
00:08:43,000 --> 00:08:45,000
他肯定是想把这个责任

169
00:08:45,000 --> 00:08:52,000
就他想把这个整这个这个绑绑在这个中美贸易战的这么一个大环境下面去撇清自己这个管理层的一些责任

170
00:08:52,000 --> 00:08:53,000
就说这不是我们的错

171
00:08:53,000 --> 00:08:54,000
这个是因为政治原因

172
00:08:54,000 --> 00:08:59,000
但是其实从目前公开的资料能够判断的信息来看

173
00:08:59,000 --> 00:09:05,000
我比较倾向于还是说这个是因为中心公司自己的一个过失造成的

174
00:09:05,000 --> 00:09:09,000
跟这个贸易战本身的这个大背景关联并不是特别大

175
00:09:09,000 --> 00:09:12,000
那只是一个巧合发生在同一个时间点而已

176
00:09:12,000 --> 00:09:14,000
你觉得这是一个巧合吗

177
00:09:14,000 --> 00:09:19,000
我认为就是就是也不叫巧合吧

178
00:09:19,000 --> 00:09:23,000
就是这件事情肯定就主要的原因还是因为中心自己的问题

179
00:09:23,000 --> 00:09:27,000
而不是说因为有这个贸易战所以要拿他们出来做典型这个意思

180
00:09:27,000 --> 00:09:29,000
因为因为如果是这样的话

181
00:09:29,000 --> 00:09:37,000
其实那我觉得更典型代表反而是应该是美国美国拒绝这个华为在美国出售这个就智能手机啊网络设备啊

182
00:09:37,000 --> 00:09:43,000
或者是就是美国政府不孤立就是禁止联邦政府和这些其他这个去购买华为的这个网络设备

183
00:09:43,000 --> 00:09:45,000
我觉得这个是贸易战的一部分

184
00:09:45,000 --> 00:09:50,000
但距离到制裁中心这件事本身我觉得是因为中心自己的问题

185
00:09:50,000 --> 00:09:53,000
嗯 OK

186
00:09:53,000 --> 00:09:58,000
我一直感觉这件事情就是你可以早罚或者可以晚罚

187
00:09:58,000 --> 00:10:01,000
但是你挑这样一个点罚的话

188
00:10:01,000 --> 00:10:02,000
嗯

189
00:10:02,000 --> 00:10:07,000
就你在时间点选择我觉得时间点非常的排除这个关系是吧

190
00:10:07,000 --> 00:10:11,000
这里有一个问题就是说他我认为他是巧合的地方

191
00:10:11,000 --> 00:10:14,000
就是说是因为他这个制裁是之前就已经做出了

192
00:10:14,000 --> 00:10:18,000
只是说他他现在是激活了这么一个一个一个惩罚措施

193
00:10:18,000 --> 00:10:25,000
是由于这个中心公司自己本身在这个整改期没有达到这个商务部的和解

194
00:10:25,000 --> 00:10:31,000
他跟商务部的和解的这个这个协议里面所承诺的这个协议

195
00:10:31,000 --> 00:10:33,000
里面所承诺的事情

196
00:10:33,000 --> 00:10:37,000
对但是这么一个结果这样的事情肯定已经不是第一次了

197
00:10:37,000 --> 00:10:42,000
然后因为首先我们可以说我们可以说国家的

198
00:10:42,000 --> 00:10:49,000
我我的意思是说就是预期没有完成一个指定的要求这件事情肯定不是第一次了

199
00:10:49,000 --> 00:10:51,000
就或者说不是中心会有这样的事情

200
00:10:51,000 --> 00:11:00,000
而是说任何一个遭到商务部调查的企业都有可能发生这种预期没有完成指定的整改要求的

201
00:11:00,000 --> 00:11:07,000
事情对对但是商务部就商务部其实永远可以给你一个延缓

202
00:11:07,000 --> 00:11:12,000
就是说说说他可以他可以在一个时间点决定处罚你还是不处罚

203
00:11:12,000 --> 00:11:17,000
然后在这个时间点呢他可以说好吧你虽然这段时间里面没有达到我这个要求

204
00:11:17,000 --> 00:11:25,000
但是我觉得你做到这些证明你有做到的意图或者是你有一些客观条件

205
00:11:26,000 --> 00:11:31,000
他如果愿意放过你的话还是就是依法是可以放过你的

206
00:11:31,000 --> 00:11:37,000
或者依法可以让你在苟延残喘一段时间但是呢他选择不放过

207
00:11:37,000 --> 00:11:42,000
然后这不是而且这不是一个比如说第三方总裁机构的决策

208
00:11:42,000 --> 00:11:46,000
他是美国商务部的决策商务部毕竟是政府一部分

209
00:11:46,000 --> 00:11:54,000
你政府要做一件什么事情的话肯定是要看就是这个会在外交或者是会在经济上产生什么影响的

210
00:11:55,000 --> 00:11:59,000
我是这么意味着的意思对对对就我不是说他是完全没有关系

211
00:11:59,000 --> 00:12:02,000
这个事情肯定是他的一个会有一些就是部分的影响

212
00:12:02,000 --> 00:12:07,000
但我认为他不是一个主要的原因 OK 就这个事情已经是既成事实了

213
00:12:07,000 --> 00:12:12,000
他罚与不罚或者说按什么当中罚只是说他考虑说这个政治影响而已

214
00:12:12,000 --> 00:12:15,000
那他说刚好你又被我逮到这个把柄

215
00:12:15,000 --> 00:12:23,000
然后我趁机罚你一下也表示我配合一下这个政府的一些这个大的这个政策措施

216
00:12:23,000 --> 00:12:25,000
我觉得也可以理解对吧

217
00:12:25,000 --> 00:12:31,000
但是中兴的原罪就是他犯了这些错然后被别人可以拿来当枪使的吧

218
00:12:31,000 --> 00:12:33,000
这这就是他自己的问题

219
00:12:33,000 --> 00:12:38,000
他把柄在外面吗他做的那些就从就就先说这么点

220
00:12:38,000 --> 00:12:42,000
我并不反对就是说怎么说这里好像也不太对

221
00:12:42,000 --> 00:12:48,000
就是我并不反对说中兴作为一个中国公司去卖这个网络设备

222
00:12:48,000 --> 00:12:54,000
给中国的一些战略上有有这个某某有关系的国家

223
00:12:54,000 --> 00:12:56,000
虽然这些国家是处于在美国禁运的名单里面

224
00:12:56,000 --> 00:13:00,000
因为这个国家利益是摆在更高的一个位置上面去的吗对吧对

225
00:13:00,000 --> 00:13:06,000
但是他的他中心他自己的问题是他们做这件事情的时候太愚蠢了

226
00:13:06,000 --> 00:13:08,000
就是被人逮到了很多把柄了

227
00:13:08,000 --> 00:13:12,000
而且在整改期里面你泥目张胆的去你好歹做个样子嘛对吧

228
00:13:12,000 --> 00:13:20,000
你好歹你好歹要收敛一点不要让人就好像那个什么华尔街很多公司会被审计做假账什么样子是一样的

229
00:13:20,000 --> 00:13:26,000
那起码人家查到你这个调查期间你要做的做做什么作样你要搞一下对吧

230
00:13:26,000 --> 00:13:34,000
但是你连在这个时间你都不做你就是不是太就是有点公然秒秒是美国思法的感觉了对对对

231
00:13:34,000 --> 00:13:38,000
但这个跟他的这个国企属性和他一贯的这个管理层的一种关心思维

232
00:13:38,000 --> 00:13:40,000
我觉得是不关系的

233
00:13:40,000 --> 00:13:44,000
包括你这次看他们前几天发有个有个叫什么新闻发布会吧

234
00:13:44,000 --> 00:13:50,000
就真的这个这个事情说明他的里面错词就是是一种全面的这种对抗性的

235
00:13:50,000 --> 00:14:01,000
然后就是没有很好的去真的反思自己的这个这个至少表面上装出反思自己的这个就是错误的地方

236
00:14:01,000 --> 00:14:04,000
那这样就让人家很难放过你了对吧

237
00:14:04,000 --> 00:14:09,000
人家本来想那个缓和一下的但是你长人家都没有一个台阶下了嘛

238
00:14:09,000 --> 00:14:13,000
除了搞那就搞下去吧那也没法只能中法了

239
00:14:13,000 --> 00:14:15,000
你自找的你就这样吧

240
00:14:15,000 --> 00:14:18,000
对啊所以就这不做不会死嘛他自己给自己做死了

241
00:14:18,000 --> 00:14:29,000
但这也是这次也就反映出两个问题一个是从小的微观层面来讲就是中国企业在面临全球化的时候如何去白正自己的一些心态

242
00:14:29,000 --> 00:14:46,000
因为其实我是觉得跟很多国内的这种适应国内这种生存环境的这这这创业者也好这个企业家也好可能都很多没有没有这个意识或者说他怎么说就不是很讲规则吧

243
00:14:46,000 --> 00:14:52,000
因为在国内特别是从比如说从九十年代开始兴旺起来的很多成功的企业

244
00:14:53,000 --> 00:15:02,000
因为你要在国内这个比较混乱的和险恶的这个转型的这个环境里面生存你肯定不能严格按照规章办事不然你就死掉了对吧

245
00:15:02,000 --> 00:15:05,000
因为所有人都不按照规章办事只有你按你的效率一定是比别人低的

246
00:15:05,000 --> 00:15:16,000
但是你到了一个更加成熟的这个按更讲规则的市场你必须得按规则办事对吧你必须在别人的地盘上做做事情

247
00:15:16,000 --> 00:15:24,000
或者说你需要依赖别人的这个战略资源输出给你你才可以做事情你还是要有这个这个思维嘛

248
00:15:24,000 --> 00:15:29,000
所以这次这个事情我觉得也是给中国的很多这个企业提了一个醒就是

249
00:15:29,000 --> 00:15:35,000
但肯定也是有做的很多合规做得比较好的企业或者是在表面上合作的很多好的企业

250
00:15:35,000 --> 00:15:42,000
他但是他就是把一些不合规的地方通过一些第三方或者什么方式就强调的掩盖过去而不会出现明面上的问题嘛

251
00:15:42,000 --> 00:15:50,000
就是大家都就是你要不要么你只是真的合规要么你是违合规但是你你做得很漂亮没人查不到你这也是可以的对吧

252
00:15:50,000 --> 00:16:00,000
但是就不要玩了就玩的好一点吧对吧对对对对就是你你需要 upgrade 你需要也要升级你的这个策略

253
00:16:00,000 --> 00:16:07,000
但很多就是说还停留在中国市场的规则可以拿到全球去玩我觉得这个已经不是这么一个状况

254
00:16:07,000 --> 00:16:19,000
对还是那种有恃无恐然后对就基本上就是这样一个状况我觉得是哎但这个我觉得就其实其实也也也不是说局部或者是个个别企业的问题

255
00:16:19,000 --> 00:16:28,000
我觉得这个是这个中国的我们就是可能是就是六七十年代出生的这些甚至八十年出生的人我觉得都有这个问题

256
00:16:28,000 --> 00:16:40,000
就是包括包括我不知道你们那种感觉啊我在国外上学的时候我接触很多这个所以中国留学生嘛他在他的那个思维逻辑形式逻辑是非常奇怪的

257
00:16:40,000 --> 00:16:46,000
就是在在在那种欧美这种大的环境里面他那个思维逻辑是框架是有问题的

258
00:16:46,000 --> 00:16:53,000
所以导致他们在就觉得处处都是在这个针对针对他然后他觉得他受到了这个歧视和排挤

259
00:16:53,000 --> 00:17:04,000
但其实你你换一个角度从那个欧美人的这个这个逻辑体系里面去看他其实完全不是这么一回事是你自己破坏了规则或者你自己不讲规则导致的吗

260
00:17:04,000 --> 00:17:18,000
就是我觉得很多人就是缺乏一种所谓的叫做基本的尊重吧就是对这个规则对法律对这个就是或者或者更广一点对别人的尊重对他人的尊重这个是很多人

261
00:17:18,000 --> 00:17:29,000
中国的这种这个这个出去比较容易犯的一个问题对是这样啊就好像有一件事情总是中国人喜欢干然后就专门用中文写一个告示牌

262
00:17:29,000 --> 00:17:41,000
然后反过来中方又会觉得哦这是在歧视我对对但其实就是那少数人这个导致的嘛就好像这次中兴这个事情大家也说呃就是支持中兴那一派其实

263
00:17:42,000 --> 00:17:54,000
其实这个是一个对中国制造的一个非常负面的一个典型因为中国制造或者说 made in china 这个品牌要想走出国门走向世界一个很重要的你还是要有一个品牌形象对不对

264
00:17:54,000 --> 00:18:03,000
但中兴这个事情出来之后就导致就本来 made in china 这个形象其实是非常负面不好的嘛就由于过去的一些原因有历史原因导致我们就不展开

265
00:18:03,000 --> 00:18:32,000
我说他现在正在一个上升起就是 made in china 的一面正在变得越来越好就是你就是就举一个例子就是我以前的样子是上面看就是看东西特别喜欢买写评论有东西就是一个评论可以写上那么几千个单词然后呃十年前基本上什么东西 made in china 他们就会说什么呃都有一个咽语就是买便宜的东西注定你要买两遍然后如果什么东西是中国制造的话你很有可能会在他下面看到这样一个

266
00:18:33,000 --> 00:18:40,000
评论就是不要买这个便宜的东西便宜没好货然后你买便宜你就得买两遍但是现在呢基本上

267
00:18:40,000 --> 00:18:53,000
人们已经不提这个东西是中国制造的了一方面是因为没有什么选择第二方面是中国制造其实要比什么孟加拉或者是越南或者是菲律宾制造或者是什么老郭制造要好很多

268
00:18:53,000 --> 00:18:57,000
然后比如说那个

269
00:18:58,000 --> 00:19:26,000
我冲先去什么牌子安克对安克安克这个这个这个品牌现在德国非常的火然后你美为很火啊对你比如说亚马逊第一品牌中兴华为啊但是华为华为可能华为在欧洲影响应该要比在北美大就是对对欧洲至少没有目前还没有限制他去销售嘛对所以像

270
00:19:26,000 --> 00:19:32,000
华为手机我爸上次来的时候说我靠这里到时候是华为的店就有点震惊

271
00:19:32,000 --> 00:19:36,000
现在的这个品牌形象已经提升上来了但是中兴这件事情

272
00:19:37,000 --> 00:19:42,000
但是目前我们又在德国看到什么太负面的影响我觉得大部分德国人也会觉得这是

273
00:19:42,000 --> 00:19:58,000
但是贸易战利部分或者是就只是把他孤立的当成一个一个公司受罚这样一个但是他暗含的影响实际上还是就是在一个上升期上打了一个

274
00:19:59,000 --> 00:20:00,000
的负面打了一巴掌对

275
00:20:01,000 --> 00:20:11,000
对我觉得他最大的原因就是说本来说中国企业是顶着很多这个负面的一些成见虽然也是有些历史原因我们确实有些问题但这个逐渐在变好然后

276
00:20:12,000 --> 00:20:21,000
他这个非常不好的案例就其实是得很多本来就是反对或者指责中国制造的这些人就得到了一个把柄吗其实是对

277
00:20:22,000 --> 00:20:32,000
所以就这个就是其实挺挺挺挺不好的那问题在于就是你刚才说到国内的反应但是我比较感兴趣的实际上是国内对于

278
00:20:33,000 --> 00:20:37,000
芯片产业的反应就是就好像我把这件事情跟

279
00:20:38,000 --> 00:20:44,000
女朋友说了一下之后她说这件事情难道我们砸钱砸人做不出来吗做不好吗

280
00:20:45,000 --> 00:20:58,000
然后我说反正就是我大意就是说这个芯片如果真的就是假如说今天一个极端的情况美国不卖给我们芯片了我们 2025 我们中国制造 2025 绝对是实现不了的

281
00:20:58,000 --> 00:21:07,000
说为什么就是我们砸钱砸人他的原话是分房子分房子分钱

282
00:21:08,000 --> 00:21:14,000
从国外引进学过的高薪人才我们自己做为什么做不出来

283
00:21:15,000 --> 00:21:17,000
你来说说为什么做不出来

284
00:21:20,000 --> 00:21:22,000
这个我们也都不是半导体行业的

285
00:21:22,000 --> 00:21:29,000
对这个行业大多多少少都清楚一点的关注吧知道我们有多差我觉得

286
00:21:30,000 --> 00:21:38,000
因为这个行业其实涉及到非常两个核心的问题一个是基础材料对吧基础这个精密制造的设备对中国都是没有的

287
00:21:38,000 --> 00:21:46,000
所以不可能搞得出来吗就是在这物理层面啊然后就是在这个就是 ip 这个就是所谓的这个知识产权设计这一块

288
00:21:46,000 --> 00:21:51,000
我们也没有很多这种所谓的核心专利嘛那两头硬件软件都卡住你怎么做得出来

289
00:21:51,000 --> 00:21:59,000
对最大的问题就是这个东西我们不是不想要而是根本拿不到啊这个是非常大的一个制约啊

290
00:22:00,000 --> 00:22:09,000
你说是拿不到是指什么就是瓦斯纳协议嘛就是限制出口对就是我你说荷兰的光刻机我们是买不到的

291
00:22:09,000 --> 00:22:14,000
最好的这一代是不许卖给我们的这一点是没有法让他有一些限制出口吗

292
00:22:14,000 --> 00:22:22,000
然后呢我说为什么不卖光刻机光刻机我们造不出来这个真的没什么办法真的没有任何办法

293
00:22:22,000 --> 00:22:32,000
不是说你现在砸钱就可以生产出来你可能好吧这感觉就有点像 80 年代的时候要造坦克一样 80 年代的时候咱们有一点钱对吧

294
00:22:32,000 --> 00:22:40,000
但是还是什么都造不出来啊你虽然砸了很多钱进去但是这底子在那摆着呢

295
00:22:40,000 --> 00:22:58,000
中国的坦克可能到 99 改是哪一年出的反正一直到最近这段时间就是军方有了钱才终于有点什么模样的问题是你举国去举国去网站里面砸钱你还是要砸上砸了

296
00:22:58,000 --> 00:23:01,000
你想从 80 年代砸到现在砸到 20 多年才砸出来的吗

297
00:23:01,000 --> 00:23:11,000
如果说美国今天就不卖我们的芯片了我们不可能在 2025 年之前这才 7 年的时间里面搞出人家 20 年前的芯片

298
00:23:11,000 --> 00:23:15,000
你可能解释一下那个协议是怎么一回事这个可能很多人不知道

299
00:23:15,000 --> 00:23:27,000
OK 瓦森纳是荷兰应该是荷兰一个城市然后呢大概是 90 年的时候在这里开过一个会

300
00:23:28,000 --> 00:23:37,000
然后这个会议上就决定了说有些国家是我们不能卖给他们特定的军用产品和军民两用产品

301
00:23:37,000 --> 00:23:40,000
这个是我们是谁

302
00:23:40,000 --> 00:23:43,000
就是与会者其中不包括中国对吧

303
00:23:43,000 --> 00:23:44,000
有哪些人

304
00:23:44,000 --> 00:23:47,000
我靠这个我要查一下了 OK

305
00:23:47,000 --> 00:23:59,000
有 42 个国家然后呢其中包含了欧盟的所有的国家北美的所有的国家墨西哥然后南美有这个啥跟挺吧

306
00:23:59,000 --> 00:24:08,000
然后南非澳大利亚印度俄罗斯和中亚的土耳其土耳其北约的就基本上所有的北约成员国加上

307
00:24:08,000 --> 00:24:14,000
加上俄罗斯加上印度加上阿根廷这样

308
00:24:14,000 --> 00:24:24,000
然后这个协议的主要内容这个协议内容非常非常的复杂然后它基本上核心内容就是它定了一个名单

309
00:24:24,000 --> 00:24:33,000
这个名单包括九项第一项是特别材料第二项是材料处理技术第三项是 Electronics 第四项是 Computer

310
00:24:33,000 --> 00:24:46,000
然后是什么信息安全通讯传感器激光导航技术航海技术空天技术和推进技术这些技术呢

311
00:24:46,000 --> 00:24:57,000
你要卖给一些特定国家的时候你一定要限制或者说你要报备给谁报备给这个组织报备

312
00:24:58,000 --> 00:25:04,000
就是这些等于说这些国家组成一个同盟然后控制说我们的高新技术只能在这个同盟之内流动

313
00:25:04,000 --> 00:25:11,000
你要负责在这个同盟内部之内维护一个技术优势

314
00:25:11,000 --> 00:25:23,000
然后你要把你只能把下一代甚至更差的技术传给第三国就好像回到那个造坦克这件事情上就是我们 80 年的时候可能要造坦克需要某种机床我记得

315
00:25:23,000 --> 00:25:37,000
然后这个机床当时就是要从日本买但是日本当时比如说已经有一个他们可能已经有五个自由轴甚至是四个自由轴了这么一个精密加工机床了

316
00:25:37,000 --> 00:25:46,000
但是卖给中国呢因为那时候只有一个叫做巴黎统筹委员会这样的一个阿斯纳的前身在控制这件事情

317
00:25:47,000 --> 00:25:57,000
但是那个时候这个协会就规定了说你如果你有比如说你有五轴的技术你最多只能把三轴的技术卖给中国然后还要卖一个天价

318
00:25:57,000 --> 00:26:06,000
现在芯片我们中国芯片就面临着这个问题就是最好的光刻机是不许卖给我们的就是因为这个瓦斯纳协议的存在

319
00:26:09,000 --> 00:26:13,000
所以这个是什么就是帝国主义永恒之心不死是对的是吧

320
00:26:14,000 --> 00:26:25,000
对其实这么说吧我们有时候会说中国的观点是一个非常的啊丛林社会的观点就是

321
00:26:26,000 --> 00:26:33,000
我们总会批评说中国政府会在社会会在国际社会上扮演一个就是所有人要欺负我这么一个角色

322
00:26:34,000 --> 00:26:38,000
就是会持有一种所有人要欺负我这样一个心理所有人都在抱团欺负我

323
00:26:38,000 --> 00:26:43,000
但事实上就瓦斯纳协议这难道不是别人在抱团估计你吗

324
00:26:43,000 --> 00:26:49,000
就确实也是这样的别人就是要的确是我们处在一个围栏里面对吧

325
00:26:50,000 --> 00:26:55,000
但这里有一个有一个点就是说他们这个抱团的这个逻辑是什么

326
00:26:55,000 --> 00:26:59,000
里面其实也有比如说这个俄罗斯和美国抱一块是不是也挺奇怪的

327
00:27:00,000 --> 00:27:02,000
俄罗斯为什么要参与到这个

328
00:27:02,000 --> 00:27:09,000
或者说就是就是说比如说俄罗斯也没有没有造自己的芯片就是他他能买到这些高端光刻机吗

329
00:27:11,000 --> 00:27:12,000
我不知道

330
00:27:13,000 --> 00:27:19,000
所以就这个其实挺奇怪的一个一个有我就是相信他背后肯定有很多这个政治的一些原因啊

331
00:27:20,000 --> 00:27:28,000
这里不直接来谈但是从这个协议的内容或者说协议的规定的限制来看是有这么一个一个一个一个判读的结果的吗

332
00:27:29,000 --> 00:27:35,000
对就是他们在这个瓦森纳协议里面有特别要制裁的一个国家

333
00:27:37,000 --> 00:27:45,000
就是就是什么基本上就是北朝鲜然后什么伊朗之类的这些国家被被制裁是可以理解的

334
00:27:45,000 --> 00:27:49,000
或者说你站在西方的人的角度上是可以理解的但是

335
00:27:53,000 --> 00:27:57,000
你就觉得你觉得在西方联谊我们跟北朝鲜区别大吗

336
00:27:58,000 --> 00:28:00,000
就在西方人的

337
00:28:03,000 --> 00:28:08,000
谁是好人还是谁是坏人的这样的提动里面我们还是离坏人那边比较近我是这样觉得

338
00:28:09,000 --> 00:28:15,000
但因为你毕竟你的那个就是从他的那个道德体是吧叫什么政治逻辑判断你是一个

339
00:28:17,000 --> 00:28:18,000
威权国家

340
00:28:18,000 --> 00:28:19,000
对

341
00:28:19,000 --> 00:28:20,000
对

342
00:28:20,000 --> 00:28:23,000
我们不要聊这个有可能导致节目

343
00:28:23,000 --> 00:28:24,000
危险

344
00:28:24,000 --> 00:28:29,000
然后回到你大家知道这个一个逻辑就行了

345
00:28:29,000 --> 00:28:37,000
对这就回到技术层面上来说就是限于这个东西的存在我们没有办法获得这样的技术

346
00:28:37,000 --> 00:28:39,000
然后我们自己研发上成本又太高

347
00:28:39,000 --> 00:28:44,000
因为芯片不像核弹头两弹一星砸人砸钱是能造出来的

348
00:28:44,000 --> 00:28:50,000
不管有多难虽然你也从国内国外搞的专家来但是芯片这个东西是哪怕你有国外的专家

349
00:28:50,000 --> 00:28:52,000
哪怕你有国内砸钱做出来

350
00:28:52,000 --> 00:28:59,000
但是你在研究所里面研究出来的跟他最终能够大规模的铺向市场去使用两中间一个非常大的鸿沟

351
00:28:59,000 --> 00:29:01,000
因为我们不我们不需要买核弹头对吧

352
00:29:01,000 --> 00:29:03,000
但是每个人都要买芯片

353
00:29:04,000 --> 00:29:08,000
你的手机里面可能有 15 块 20 块芯片

354
00:29:08,000 --> 00:29:13,000
然后其中可能只有两块是中国有能力造出来的

355
00:29:13,000 --> 00:29:16,000
那中国要是说要自己做芯片

356
00:29:16,000 --> 00:29:21,000
然后出到说所有的手机 2025 的那个计划里面

357
00:29:21,000 --> 00:29:30,000
2020 年中国的芯片要国有比重国有化本国产的比重要提升到 40%

358
00:29:30,000 --> 00:29:33,000
然后 2025 年的事要提升到 70%

359
00:29:33,000 --> 00:29:36,000
这实际上是不现实的

360
00:29:36,000 --> 00:29:38,000
哪怕现在的发展就是美国不制裁我们

361
00:29:38,000 --> 00:29:43,000
然后这个中心还是可以继续买芯片达到这个目标也是非常不现实的

362
00:29:43,000 --> 00:29:45,000
如果他继续买肯定达不到

363
00:29:45,000 --> 00:29:46,000
如果不能继续买

364
00:29:46,000 --> 00:29:47,000
如果不能继续买的话

365
00:29:47,000 --> 00:29:49,000
你要靠自己的产能

366
00:29:49,000 --> 00:29:52,000
然后要把他整个市场化要成熟起来

367
00:29:52,000 --> 00:29:53,000
还是不可能

368
00:29:54,000 --> 00:29:57,000
我觉得其实有一些别的方法

369
00:29:57,000 --> 00:30:00,000
我觉得也不见得就非常不现实

370
00:30:01,000 --> 00:30:05,000
我说这件事情如果你给予足够的时间应该是可以的

371
00:30:05,000 --> 00:30:08,000
但是 2020 年 2020 年的到底行不行

372
00:30:08,000 --> 00:30:10,000
2020 年就是后年

373
00:30:11,000 --> 00:30:16,000
后年达到 40%的自由的半导体产品

374
00:30:16,000 --> 00:30:19,000
这是我觉得你要是说

375
00:30:19,000 --> 00:30:23,000
比如说你说 1990 年我想不到 2010 年的时候

376
00:30:23,000 --> 00:30:26,000
中国会是中国科技会有多发达

377
00:30:26,000 --> 00:30:27,000
这是可以理解的

378
00:30:27,000 --> 00:30:31,000
但是后年我还没有到 40 岁

379
00:30:32,000 --> 00:30:35,000
芯片国产率可以达到 40%

380
00:30:35,000 --> 00:30:36,000
这是绝对不现实的

381
00:30:36,000 --> 00:30:45,000
所以这也是回到刚才这次我们在中国中美贸易战里面扯皮的一个很核心的点

382
00:30:45,000 --> 00:30:52,000
最主要就是美国指责我们指责中国政府说是强迫外国公司进行技术转移

383
00:30:53,000 --> 00:31:01,000
比如通过合资设厂或者说限制外商直接投资的这么一个市场准物质的一些门槛

384
00:31:02,000 --> 00:31:10,000
来用市场逼迫外国企业交出它的一些专利技术

385
00:31:11,000 --> 00:31:15,000
其实我觉得这也是变相的应对这个瓦森纳协议的一些约束

386
00:31:15,000 --> 00:31:17,000
我觉得反正你不让他卖给我的

387
00:31:17,000 --> 00:31:18,000
那也可以啊

388
00:31:18,000 --> 00:31:19,000
我不就不买呗

389
00:31:19,000 --> 00:31:21,000
你要来这里卖

390
00:31:21,000 --> 00:31:23,000
那你就必须得把这个技术先交出来

391
00:31:23,000 --> 00:31:30,000
对瓦森纳协议本质上也是在损害参与国的商业公司的利益的

392
00:31:30,000 --> 00:31:33,000
比如说假如说瓦森纳协议不起效

393
00:31:33,000 --> 00:31:43,000
然后荷兰国他们要卖 SML 的光刻机给我们

394
00:31:43,000 --> 00:31:46,000
中国可能别国出什么样的价钱

395
00:31:46,000 --> 00:31:48,000
我们出五倍的价钱卖

396
00:31:48,000 --> 00:31:49,000
他们难道不爽吗

397
00:31:49,000 --> 00:31:50,000
全收了

398
00:31:50,000 --> 00:31:51,000
他们也是爽的对吧

399
00:31:51,000 --> 00:31:56,000
所以他们也是在对抗着自己国家本身的商业公司的利益

400
00:31:56,000 --> 00:31:59,000
然后这些商业公司为了利润也会停而走险

401
00:31:59,000 --> 00:32:02,000
就是说偷偷卖给中国一些什么样的技术

402
00:32:02,000 --> 00:32:05,000
对所以瓦森纳协议实际上也是在限制他们自己的国家

403
00:32:05,000 --> 00:32:11,000
我觉得这就是一个传统经济学里面的一些讨论的问题

404
00:32:11,000 --> 00:32:14,000
到底要不要搞国际贸易

405
00:32:14,000 --> 00:32:18,000
要不要互相发挥

406
00:32:18,000 --> 00:32:21,000
绝对自由的自由市场

407
00:32:21,000 --> 00:32:23,000
一个叫比较优势

408
00:32:23,000 --> 00:32:26,000
你个人干自己擅长的那些大概这么理解

409
00:32:27,000 --> 00:32:30,000
这是另外一个想法就是说

410
00:32:30,000 --> 00:32:33,000
对于一些小国家来讲

411
00:32:33,000 --> 00:32:35,000
如果别人都把你的活干了

412
00:32:35,000 --> 00:32:36,000
那你干啥

413
00:32:36,000 --> 00:32:37,000
对

414
00:32:37,000 --> 00:32:39,000
就短期利益和长期利益

415
00:32:39,000 --> 00:32:41,000
它是要有一个取舍的

416
00:32:41,000 --> 00:32:42,000
是这样的

417
00:32:42,000 --> 00:32:45,000
这里面其实我觉得要强调一点

418
00:32:45,000 --> 00:32:48,000
就是我们在探讨这件事情的时候

419
00:32:48,000 --> 00:32:54,000
就是把自己的这么一个民族主义色彩要去掉

420
00:32:54,000 --> 00:32:56,000
你要客观的去看这个问题

421
00:32:56,000 --> 00:32:59,000
这个里面的对错其实没有那么明显的

422
00:32:59,000 --> 00:33:01,000
国际政治没有什么对错

423
00:33:01,000 --> 00:33:02,000
咱家都是

424
00:33:02,000 --> 00:33:03,000
都讲利益

425
00:33:03,000 --> 00:33:05,000
当然有一些道德的成分

426
00:33:05,000 --> 00:33:07,000
道德的东西在里面

427
00:33:07,000 --> 00:33:10,000
或者说它的根源仍旧是在伦理和道德上面

428
00:33:10,000 --> 00:33:12,000
但是你具体某件事情

429
00:33:12,000 --> 00:33:14,000
其实连道德这个事情

430
00:33:14,000 --> 00:33:18,000
我觉得在国际关系里面都相对来说尺度是比较模糊的

431
00:33:18,000 --> 00:33:22,000
首先每个国家民族的价值观很多是不一样的

432
00:33:22,000 --> 00:33:24,000
相信道德尺度也是不一样的

433
00:33:24,000 --> 00:33:26,000
第二就是说在这个核心

434
00:33:26,000 --> 00:33:30,000
这种国家利益面前道德能到底摆到多高的位置

435
00:33:30,000 --> 00:33:31,000
其实也是在考的

436
00:33:31,000 --> 00:33:32,000
我觉得

437
00:33:32,000 --> 00:33:34,000
就好像刚才我说这个你说

438
00:33:34,000 --> 00:33:37,000
按照美国的逻辑看中国强迫外国公司进行技术转移

439
00:33:37,000 --> 00:33:41,000
算不算也是一种不道德的行为

440
00:33:41,000 --> 00:33:43,000
但是你反过来看

441
00:33:43,000 --> 00:33:47,000
马斯纳协议本身是否是一个不道德的一个约定呢

442
00:33:47,000 --> 00:33:48,000
所以对吧

443
00:33:48,000 --> 00:33:50,000
对吧 这里面其实是

444
00:33:50,000 --> 00:33:54,000
我觉得没有那么是非黑白是那么清楚的

445
00:33:54,000 --> 00:33:55,000
对

446
00:33:55,000 --> 00:33:58,000
就是从伦理上从道德的角度来讲

447
00:33:58,000 --> 00:34:03,000
你一个国家政府以政策行为来约束外国国家

448
00:34:03,000 --> 00:34:06,000
外国厂商的准入

449
00:34:06,000 --> 00:34:10,000
使得外国厂商必须以牺牲技术来获取利润

450
00:34:10,000 --> 00:34:11,000
这件事情可能是不道德的

451
00:34:11,000 --> 00:34:13,000
问题是如果你从

452
00:34:13,000 --> 00:34:16,000
如果你更往深一步讲的话

453
00:34:16,000 --> 00:34:18,000
中国如果永远不获得这些技术

454
00:34:18,000 --> 00:34:19,000
永远只能买的话

455
00:34:19,000 --> 00:34:24,000
那中国会成为一个附庸于其他国家的经济体

456
00:34:24,000 --> 00:34:29,000
中国的自己制造和研发能力

457
00:34:29,000 --> 00:34:31,000
都会维持在一个非常低的水平上面

458
00:34:31,000 --> 00:34:32,000
那么时间一长的话

459
00:34:32,000 --> 00:34:37,000
这对中国人的生存质量也会有所影响

460
00:34:37,000 --> 00:34:39,000
这你就不能产业升级吗

461
00:34:39,000 --> 00:34:40,000
对

462
00:34:40,000 --> 00:34:41,000
就简单来说这样一来

463
00:34:41,000 --> 00:34:43,000
中国人不就一直会很悲惨吗

464
00:34:43,000 --> 00:34:44,000
这让一个国家一直很悲惨

465
00:34:44,000 --> 00:34:46,000
这难道不也是不道德吗

466
00:34:46,000 --> 00:34:47,000
对

467
00:34:47,000 --> 00:34:50,000
所以就说没有那么是非黑白

468
00:34:50,000 --> 00:34:51,000
就这个事情我觉得

469
00:34:51,000 --> 00:34:54,000
虽然我们刚才讲了一堆可能有一些

470
00:34:54,000 --> 00:34:58,000
听众会误解我们的个人的一个感受

471
00:34:58,000 --> 00:35:01,000
但是这个一定要脱离开

472
00:35:01,000 --> 00:35:04,000
从第三方的视角来讨论这件事情才有意义

473
00:35:04,000 --> 00:35:08,000
不然的话你永远没有办法去和一个美国人去争这个事情

474
00:35:08,000 --> 00:35:09,000
到底谁对谁错

475
00:35:09,000 --> 00:35:10,000
对

476
00:35:10,000 --> 00:35:11,000
因为你们屁股不一样

477
00:35:11,000 --> 00:35:12,000
你们屁股坐的地方不一样

478
00:35:12,000 --> 00:35:15,000
屁股不一样就不要希望脑袋能够一样

479
00:35:15,000 --> 00:35:16,000
没错

480
00:35:16,000 --> 00:35:18,000
就这么简单

481
00:35:18,000 --> 00:35:20,000
好吧

482
00:35:20,000 --> 00:35:22,000
这个事情算是翻篇了

483
00:35:22,000 --> 00:35:24,000
我们可以进入今天的正题了

484
00:35:24,000 --> 00:35:30,000
这一期节目的录音的动机实际上是 Rail 提出来的

485
00:35:30,000 --> 00:35:35,000
Rail 对于最近发生了一件在业界内的新闻

486
00:35:35,000 --> 00:35:37,000
而且是发生在 4 月 1 号的新闻

487
00:35:37,000 --> 00:35:39,000
非常的感兴趣

488
00:35:39,000 --> 00:35:40,000
愚人节的是

489
00:35:40,000 --> 00:35:44,000
其实这个是愚人节之前他们就已经网站已经录出来

490
00:35:44,000 --> 00:35:47,000
就是 Cloudflare 跟 APNIC

491
00:35:47,000 --> 00:35:51,000
Cloudflare 大家可能很多做互联网朋友知道

492
00:35:51,000 --> 00:35:54,000
它是全球最大的 CDN 的网络公司

493
00:35:54,000 --> 00:35:55,000
对

494
00:35:55,000 --> 00:35:58,000
应该是信息安全

495
00:35:58,000 --> 00:36:00,000
他们起压

496
00:36:00,000 --> 00:36:02,000
它的产品是一个 CDN

497
00:36:02,000 --> 00:36:05,000
然后是附带很多信息安全和加速的一些

498
00:36:05,000 --> 00:36:08,000
他们最开始杨明立万靠的是信息安全

499
00:36:08,000 --> 00:36:10,000
然后做信息安全之后

500
00:36:10,000 --> 00:36:13,000
因为他们信息安全他们防 DDoS 做得很好

501
00:36:13,000 --> 00:36:18,000
所以做了一个相当于一个网络基础建设的什么一个东西

502
00:36:18,000 --> 00:36:19,000
对

503
00:36:19,000 --> 00:36:20,000
GlobalCDN

504
00:36:20,000 --> 00:36:21,000
对

505
00:36:21,000 --> 00:36:23,000
然后他们和 APNIC

506
00:36:23,000 --> 00:36:27,000
APNIC 叫做 Asian Pacific Network

507
00:36:27,000 --> 00:36:28,000
I 是什么

508
00:36:28,000 --> 00:36:29,000
什么 Center 来的

509
00:36:29,000 --> 00:36:31,000
Internet 吧

510
00:36:31,000 --> 00:36:32,000
Internet

511
00:36:32,000 --> 00:36:33,000
OK

512
00:36:33,000 --> 00:36:34,000
就是不对

513
00:36:34,000 --> 00:36:35,000
N 是什么

514
00:36:35,000 --> 00:36:36,000
N 是 Network

515
00:36:36,000 --> 00:36:37,000
Network Information

516
00:36:37,000 --> 00:36:38,000
Information 是什么

517
00:36:38,000 --> 00:36:41,000
就是亚太网络信息中心

518
00:36:41,000 --> 00:36:42,000
对

519
00:36:42,000 --> 00:36:44,000
这个机构是干嘛的

520
00:36:44,000 --> 00:36:45,000
总不在澳大利亚吧

521
00:36:45,000 --> 00:36:46,000
应该是

522
00:36:46,000 --> 00:36:47,000
好像是在澳大利亚

523
00:36:47,000 --> 00:36:51,000
这是一个负责分派 AP 地址的机构

524
00:36:51,000 --> 00:36:52,000
对

525
00:36:52,000 --> 00:36:56,000
这个机构全球五个 APNIC 其中一个

526
00:36:56,000 --> 00:36:57,000
亚太是一个

527
00:36:57,000 --> 00:36:58,000
北美有一个

528
00:36:58,000 --> 00:36:59,000
欧洲有一个

529
00:36:59,000 --> 00:37:00,000
北美是什么

530
00:37:00,000 --> 00:37:03,000
北美是 N

531
00:37:03,000 --> 00:37:04,000
就是 A

532
00:37:04,000 --> 00:37:06,000
就是 American

533
00:37:06,000 --> 00:37:08,000
叫 A 吗

534
00:37:08,000 --> 00:37:11,000
应该就叫 ANIC

535
00:37:11,000 --> 00:37:12,000
OK

536
00:37:12,000 --> 00:37:13,000
拉美有一个

537
00:37:13,000 --> 00:37:14,000
拉美有一个

538
00:37:14,000 --> 00:37:16,000
欧洲有一个

539
00:37:16,000 --> 00:37:18,000
对然后非洲有一个

540
00:37:18,000 --> 00:37:19,000
非洲有一个

541
00:37:19,000 --> 00:37:20,000
一共五个

542
00:37:20,000 --> 00:37:22,000
大洲差不多 Cover 掉了

543
00:37:22,000 --> 00:37:23,000
对

544
00:37:23,000 --> 00:37:30,000
他们两个合作搞了一个 DNS 的公共解析服务器

545
00:37:30,000 --> 00:37:32,000
那个 IPT 值是 1.1.1

546
00:37:32,000 --> 00:37:35,000
背后那个是 1.0.0.1

547
00:37:35,000 --> 00:37:36,000
就四个 1

548
00:37:36,000 --> 00:37:37,000
所以是 4 月 1 号

549
00:37:37,000 --> 00:37:40,000
就是语言节那天正式发布的

550
00:37:40,000 --> 00:37:41,000
双 11

551
00:37:45,000 --> 00:37:47,000
Quadriple once

552
00:37:47,000 --> 00:37:48,000
对

553
00:37:48,000 --> 00:37:50,000
就他这个 DNS

554
00:37:50,000 --> 00:37:53,000
其实在这之前也有一个大厂做过这种 DNS

555
00:37:53,000 --> 00:37:54,000
有好几家

556
00:37:54,000 --> 00:37:55,000
也就是 Google 那种

557
00:37:55,000 --> 00:37:57,000
8888 是属于谁的

558
00:37:57,000 --> 00:37:59,000
那好像是 Google 自己的

559
00:37:59,000 --> 00:38:02,000
他自己的刚刚有那个 IP 端

560
00:38:02,000 --> 00:38:04,000
OK

561
00:38:04,000 --> 00:38:05,000
对他画到了

562
00:38:05,000 --> 00:38:07,000
然后那个 1.1.1 是那个 IP 端

563
00:38:07,000 --> 00:38:10,000
目前是属于那个 APNSA 没有划分出去的

564
00:38:10,000 --> 00:38:13,000
待会会聊为什么会没有划分出去

565
00:38:13,000 --> 00:38:16,000
然后还有几个就是国外比较知名的

566
00:38:16,000 --> 00:38:17,000
像那个叫做 OpenDNS

567
00:38:17,000 --> 00:38:19,000
后来好像是被 SysCore 的

568
00:38:19,000 --> 00:38:21,000
然后还有一个叫做 SyScore 的

569
00:38:21,000 --> 00:38:23,000
还有几个就是国外比较知名的

570
00:38:23,000 --> 00:38:24,000
像那个叫做 OpenDNS

571
00:38:24,000 --> 00:38:26,000
后来好像是被 SysCore 收购了

572
00:38:26,000 --> 00:38:27,000
应该是

573
00:38:27,000 --> 00:38:28,000
应该是被 SysCore

574
00:38:28,000 --> 00:38:29,000
对他不在 Open

575
00:38:29,000 --> 00:38:30,000
对

576
00:38:30,000 --> 00:38:33,000
他主力运作好像还是

577
00:38:33,000 --> 00:38:35,000
我们假设他是吧

578
00:38:35,000 --> 00:38:36,000
对

579
00:38:36,000 --> 00:38:38,000
然后然后就国内的

580
00:38:38,000 --> 00:38:40,000
国内其实也有几家比较知名的

581
00:38:40,000 --> 00:38:42,000
比如说叫 114 DNS

582
00:38:42,000 --> 00:38:45,000
他的那个 IP 就是四个 114

583
00:38:45,000 --> 00:38:46,000
你用过吗

584
00:38:46,000 --> 00:38:47,000
还有

585
00:38:47,000 --> 00:38:51,000
我在国内用的就是 114 和那个叫什么

586
00:38:51,000 --> 00:38:53,000
DNSPod

587
00:38:53,000 --> 00:38:56,000
就是后来被 DNSPod 是一个

588
00:38:56,000 --> 00:38:59,000
这个是他是一个独立的 DNS 的域名解析服务商

589
00:38:59,000 --> 00:39:01,000
后来是被腾讯收购了

590
00:39:01,000 --> 00:39:04,000
又被腾讯爸爸收购了好吧

591
00:39:04,000 --> 00:39:05,000
对对

592
00:39:05,000 --> 00:39:08,000
然后 Ali 有一个 AliDNS

593
00:39:08,000 --> 00:39:11,000
就是也是这种公共解析服务器

594
00:39:11,000 --> 00:39:13,000
他那个网址是

595
00:39:13,000 --> 00:39:14,000
网址上来的

596
00:39:14,000 --> 00:39:17,000
119.2929.29 好像是这样

597
00:39:17,000 --> 00:39:18,000
如果我没记错的话

598
00:39:18,000 --> 00:39:19,000
Anyway

599
00:39:19,000 --> 00:39:21,000
然后还有一个叫做百度 DNS

600
00:39:21,000 --> 00:39:22,000
也是有这个服务

601
00:39:22,000 --> 00:39:24,000
其实 BIT 就等于是各自有一个了

602
00:39:24,000 --> 00:39:28,000
所以为什么每个公司都要买 BITDNS 呢

603
00:39:28,000 --> 00:39:31,000
这个你说他为什么这些公司

604
00:39:31,000 --> 00:39:33,000
都要做一个自己的公共的 DNS

605
00:39:33,000 --> 00:39:35,000
为什么每个公司都要有一个这个东西

606
00:39:35,000 --> 00:39:38,000
因为其实就以我一个比较

607
00:39:38,000 --> 00:39:40,000
因为这些话题我本身不是非常的了解

608
00:39:40,000 --> 00:39:41,000
就是以我一个非常

609
00:39:41,000 --> 00:39:44,000
负前浅薄的这样一个理解

610
00:39:44,000 --> 00:39:46,000
就是 DNS 有一个不就好了吗

611
00:39:46,000 --> 00:39:48,000
为什么每个公司都要有一个自己呢

612
00:39:48,000 --> 00:39:49,000
对

613
00:39:49,000 --> 00:39:51,000
因为传统上 DNS 这个解析服务

614
00:39:51,000 --> 00:39:54,000
是就是我们家庭用户的

615
00:39:54,000 --> 00:39:56,000
直接访问的那个 DNS 服务器

616
00:39:56,000 --> 00:39:58,000
其实是用通常是运营商就 ISP 提供的

617
00:39:58,000 --> 00:40:00,000
对就是你比如说你用这个家里用那个

618
00:40:00,000 --> 00:40:02,000
拨号上网对吧

619
00:40:02,000 --> 00:40:03,000
拨完之后你会得到几个东西

620
00:40:03,000 --> 00:40:06,000
一个是你的这个 IP 地址

621
00:40:06,000 --> 00:40:07,000
然后你的网关地址

622
00:40:07,000 --> 00:40:10,000
然后就是这个 ISP 的这个 DNS 服务器的地址

623
00:40:10,000 --> 00:40:11,000
对

624
00:40:11,000 --> 00:40:13,000
为什么要用 ISP 的 DNS 服务器

625
00:40:13,000 --> 00:40:14,000
因为它通常迷你最近

626
00:40:14,000 --> 00:40:16,000
对吧通常就一跳或者两跳

627
00:40:16,000 --> 00:40:17,000
对

628
00:40:17,000 --> 00:40:20,000
然后它因为它跟你是同

629
00:40:20,000 --> 00:40:23,000
基本上在同一个这个子网端里面

630
00:40:23,000 --> 00:40:25,000
就它解释出来的结果通常是说

631
00:40:25,000 --> 00:40:28,000
是比较适合你那种你的那个那个

632
00:40:28,000 --> 00:40:29,000
对你来说访问最优的

633
00:40:29,000 --> 00:40:30,000
对

634
00:40:30,000 --> 00:40:36,000
但是呢 ISP 提供的 DNS 经常有很多问题

635
00:40:36,000 --> 00:40:38,000
比如说它有可能

636
00:40:38,000 --> 00:40:40,000
因为有些小 ISP 它的服务质量

637
00:40:40,000 --> 00:40:41,000
根本上它不稳定

638
00:40:41,000 --> 00:40:43,000
或者是它负载过高

639
00:40:43,000 --> 00:40:45,000
就响应很慢

640
00:40:45,000 --> 00:40:46,000
但这个都不是核心问题

641
00:40:46,000 --> 00:40:49,000
最核心问题是 ISP 经常去

642
00:40:49,000 --> 00:40:51,000
劫持这个 DNS 的结果

643
00:40:51,000 --> 00:40:53,000
比如说你解释一个域名

644
00:40:53,000 --> 00:40:54,000
它可能没有这个结果

645
00:40:54,000 --> 00:40:57,000
就是就是这个空的不存在的地址

646
00:40:57,000 --> 00:40:58,000
它跟你说解释到 ISP

647
00:40:58,000 --> 00:41:00,000
它自己的一个比如导航网址上面去

648
00:41:00,000 --> 00:41:01,000
对吧

649
00:41:01,000 --> 00:41:02,000
这个很多人接受不了

650
00:41:02,000 --> 00:41:05,000
但其实我觉得这个倒还好

651
00:41:05,000 --> 00:41:07,000
另外一种的劫持是比较严重

652
00:41:07,000 --> 00:41:09,000
这个特别是在这个 HTTPS

653
00:41:09,000 --> 00:41:13,000
就是加密的那个通讯 HTTPS 普及之前

654
00:41:13,000 --> 00:41:17,000
很多 ISP 厂商为了

655
00:41:17,000 --> 00:41:18,000
为了什么说了

656
00:41:18,000 --> 00:41:19,000
为了利益

657
00:41:19,000 --> 00:41:21,000
就是为了利益

658
00:41:21,000 --> 00:41:22,000
为了利益

659
00:41:22,000 --> 00:41:23,000
也有可能是为了

660
00:41:23,000 --> 00:41:25,000
也有可能这我不去猜测它的动机

661
00:41:25,000 --> 00:41:26,000
因为我不是它

662
00:41:26,000 --> 00:41:27,000
我不知道它背后怎么运作的

663
00:41:27,000 --> 00:41:30,000
所以它会把某一个这个网站的这个域名

664
00:41:30,000 --> 00:41:32,000
劫持到另外一个网站去

665
00:41:32,000 --> 00:41:34,000
因为互联网是一个

666
00:41:34,000 --> 00:41:35,000
至少目前来看还是一个

667
00:41:35,000 --> 00:41:38,000
很大程度上靠流量和广告点击

668
00:41:38,000 --> 00:41:40,000
做收入的地方

669
00:41:40,000 --> 00:41:42,000
它这样劫持其实就会影响到

670
00:41:42,000 --> 00:41:43,000
很多网站的利益

671
00:41:43,000 --> 00:41:46,000
所以大家也对用户的体验比较差

672
00:41:46,000 --> 00:41:49,000
所以大家就还是比较怨声载道的

673
00:41:49,000 --> 00:41:52,000
但是我觉得对于国内用户来讲

674
00:41:52,000 --> 00:41:53,000
国外我不太清楚

675
00:41:53,000 --> 00:41:54,000
但对于国内用户来讲

676
00:41:54,000 --> 00:41:56,000
最主要的还是说有之前

677
00:41:56,000 --> 00:41:58,000
应该是 2000 年

678
00:41:58,000 --> 00:42:01,000
200 几年的时候出现过几次

679
00:42:01,000 --> 00:42:04,000
比较大型的因为这个 ISP 的 DNS 的

680
00:42:04,000 --> 00:42:06,000
系统导致的大面积的断网

681
00:42:06,000 --> 00:42:08,000
就导致的攻击导致断网

682
00:42:08,000 --> 00:42:10,000
这个后面会讲是什么类型的攻击

683
00:42:10,000 --> 00:42:12,000
然后使得大家会在考虑说

684
00:42:12,000 --> 00:42:15,000
那我们是不是不要用这个 ISP 提供的 DNS 服务了

685
00:42:15,000 --> 00:42:17,000
然后转用这个

686
00:42:17,000 --> 00:42:20,000
就是说第三方提供的 DNS 服务

687
00:42:20,000 --> 00:42:22,000
然后那要反过来就要看为什么

688
00:42:22,000 --> 00:42:24,000
第三方愿意来提供这个东西了

689
00:42:24,000 --> 00:42:25,000
其实很简单嘛

690
00:42:25,000 --> 00:42:27,000
如果单从这个信息的这个

691
00:42:27,000 --> 00:42:29,000
价值这个角度来讲

692
00:42:29,000 --> 00:42:34,000
DNS 解析能够给到第三方很多有用的信息

693
00:42:34,000 --> 00:42:35,000
比如说

694
00:42:35,000 --> 00:42:37,000
假设你是这个阿里

695
00:42:37,000 --> 00:42:40,000
你肯定希望所有人都通过你的 DNS 解析

696
00:42:40,000 --> 00:42:44,000
这样你可以看到哪些人在访问什么网站

697
00:42:44,000 --> 00:42:46,000
然后你可以知道有没有比较竞争对手啊

698
00:42:46,000 --> 00:42:47,000
这些事情对吧

699
00:42:47,000 --> 00:42:48,000
对

700
00:42:48,000 --> 00:42:51,000
实际上就是相当于每个人都希望

701
00:42:51,000 --> 00:42:53,000
自己能够掌握对于

702
00:42:53,000 --> 00:42:54,000
更多的信息

703
00:42:54,000 --> 00:42:57,000
对于地址

704
00:42:57,000 --> 00:42:58,000
地址

705
00:42:58,000 --> 00:43:01,000
电话本的这样一个控制权

706
00:43:01,000 --> 00:43:02,000
然后这个电话本

707
00:43:02,000 --> 00:43:05,000
它最大的妙处就在于所有人

708
00:43:05,000 --> 00:43:07,000
打电话给某一个特定人的时候

709
00:43:07,000 --> 00:43:08,000
一定要查你的电话本

710
00:43:08,000 --> 00:43:09,000
然后就可以查

711
00:43:09,000 --> 00:43:14,000
你就可以通过所有人查电话本的这样一个 Patton

712
00:43:14,000 --> 00:43:17,000
来获得一定的统计数据

713
00:43:17,000 --> 00:43:19,000
而这个统计数据在

714
00:43:19,000 --> 00:43:22,000
尤其是在今天在 Facebook 的这个

715
00:43:22,000 --> 00:43:28,000
这个隐私的系统事件出现之后

716
00:43:28,000 --> 00:43:29,000
我们会意识到

717
00:43:29,000 --> 00:43:33,000
大众的行为的模式实际上是一个非常具有

718
00:43:33,000 --> 00:43:36,000
价值的东西

719
00:43:36,000 --> 00:43:39,000
然后如果你掌握了

720
00:43:39,000 --> 00:43:43,000
那你就实际上相当于给自己开了个矿

721
00:43:43,000 --> 00:43:45,000
没算没算

722
00:43:45,000 --> 00:43:48,000
刚我们讲了半天其实没有讲 DNS 是干嘛的

723
00:43:48,000 --> 00:43:51,000
其实对于普通用户来讲

724
00:43:51,000 --> 00:43:55,000
DNS 最核心的一个功能就是把一个字符串

725
00:43:55,000 --> 00:43:57,000
映射成一个 IP 地址

726
00:43:57,000 --> 00:43:59,000
或者反过来

727
00:43:59,000 --> 00:44:01,000
反过来其实普通用户都用不到

728
00:44:01,000 --> 00:44:02,000
Reverse DNS 好吧

729
00:44:02,000 --> 00:44:04,000
就是单向的

730
00:44:04,000 --> 00:44:06,000
因为我刚才想说

731
00:44:06,000 --> 00:44:07,000
如果你不知道 DNS 是什么

732
00:44:07,000 --> 00:44:10,000
就不要听我们节目

733
00:44:10,000 --> 00:44:12,000
还是解释一下

734
00:44:12,000 --> 00:44:15,000
降低点门槛好不好

735
00:44:15,000 --> 00:44:16,000
对主要是这个功能

736
00:44:16,000 --> 00:44:18,000
当然 DNS 是一个其实非常庞大复杂系统

737
00:44:18,000 --> 00:44:22,000
有些细枝末节的事我们就不在这里

738
00:44:22,000 --> 00:44:24,000
啰啰嗦嗦讲了

739
00:44:24,000 --> 00:44:25,000
回过头来讲

740
00:44:25,000 --> 00:44:33,000
为什么 CloudFlare 出 DNS 会让我比较关注这件事情

741
00:44:33,000 --> 00:44:34,000
对吧

742
00:44:34,000 --> 00:44:36,000
其实之前 Google 也出了很多

743
00:44:36,000 --> 00:44:38,000
包括 OpenDS 也出了很多事情

744
00:44:38,000 --> 00:44:41,000
并没有太让我去关注这个事

745
00:44:41,000 --> 00:44:42,000
一个是说

746
00:44:42,000 --> 00:44:43,000
首先对于我来讲

747
00:44:43,000 --> 00:44:45,000
CloudFlare 是一个

748
00:44:45,000 --> 00:44:46,000
在目前所有的大公司里面

749
00:44:46,000 --> 00:44:48,000
我相对来说比较信得过的

750
00:44:48,000 --> 00:44:51,000
Google 推出 DNS 的时候

751
00:44:51,000 --> 00:44:53,000
我们的节目还没有成立吧

752
00:44:53,000 --> 00:44:54,000
好像

753
00:44:54,000 --> 00:44:56,000
8 点 8 什么时候出

754
00:44:56,000 --> 00:44:57,000
很久了我觉得

755
00:44:57,000 --> 00:45:00,000
应该是几年前了至少是

756
00:45:00,000 --> 00:45:01,000
对

757
00:45:01,000 --> 00:45:05,000
刚才讲 DNS 可以暴露很多的讯息

758
00:45:05,000 --> 00:45:08,000
其实如果你作为你对你的隐私

759
00:45:08,000 --> 00:45:10,000
或者是讯息比较关注的人

760
00:45:10,000 --> 00:45:13,000
你尽可能少的暴露这个东西

761
00:45:13,000 --> 00:45:14,000
然后其实从目前来看

762
00:45:14,000 --> 00:45:17,000
所有的这种公开可访问的 DNS 里面

763
00:45:17,000 --> 00:45:20,000
至少从承诺这个角度来讲

764
00:45:20,000 --> 00:45:23,000
CloudFlare 做的最好的

765
00:45:23,000 --> 00:45:25,000
它承诺几件事情

766
00:45:25,000 --> 00:45:29,000
它除了用于跟 APNIC 作为研究的

767
00:45:29,000 --> 00:45:32,000
保存一些记录用于分析

768
00:45:32,000 --> 00:45:34,000
然后分析完就删掉之外

769
00:45:34,000 --> 00:45:37,000
它不会保留任何的 Log

770
00:45:37,000 --> 00:45:42,000
然后它在 DNS 解析的过程中

771
00:45:42,000 --> 00:45:46,000
它也会尽可能减少你的个人信息的暴露

772
00:45:46,000 --> 00:45:48,000
反正这个跟系统有关我们待会会解释

773
00:45:48,000 --> 00:45:50,000
其实这里我有一个问题

774
00:45:50,000 --> 00:45:51,000
不好意思白脏一下

775
00:45:51,000 --> 00:45:55,000
就是为什么 DNS 这么重要的东西

776
00:45:55,000 --> 00:45:58,000
政府一直没有插手

777
00:46:00,000 --> 00:46:01,000
好问题

778
00:46:01,000 --> 00:46:03,000
其实从一个思想

779
00:46:03,000 --> 00:46:05,000
CNIC 是有一个

780
00:46:05,000 --> 00:46:08,000
刚刚我说 CNIC 是中国的那个

781
00:46:08,000 --> 00:46:10,000
官网网络那个 IP 地址分配的机构

782
00:46:10,000 --> 00:46:14,000
它是有一个公用的 DNS 服务器的

783
00:46:14,000 --> 00:46:16,000
那为什么大家不用它

784
00:46:16,000 --> 00:46:18,000
或者说为什么

785
00:46:18,000 --> 00:46:21,000
为什么在这一层 DNS 的服务器下面

786
00:46:21,000 --> 00:46:27,000
要有这么多的商业公司来做一个转程

787
00:46:27,000 --> 00:46:32,000
其实这是一个非常重要的网络的核心组件

788
00:46:32,000 --> 00:46:34,000
那么你要

789
00:46:34,000 --> 00:46:38,000
如果说你这个东西如此的重要

790
00:46:38,000 --> 00:46:40,000
以至于人们需要公信力的话

791
00:46:40,000 --> 00:46:44,000
那么甚至在一些政府公信力比较好的国家

792
00:46:44,000 --> 00:46:46,000
我没有特别排除中国

793
00:46:46,000 --> 00:46:50,000
在一些政府公信力特别好的国家

794
00:46:50,000 --> 00:46:53,000
DNS 也是有商业公司的运作

795
00:46:53,000 --> 00:46:56,000
这个可能是互联网的一个传统还是怎么

796
00:46:56,000 --> 00:46:57,000
我没想过这个问题

797
00:46:57,000 --> 00:46:59,000
因为但其实你从现在整个 DNS 体系来看

798
00:46:59,000 --> 00:47:02,000
它整个起码在底层的运作里面

799
00:47:02,000 --> 00:47:04,000
是没有政府机构的影子的

800
00:47:04,000 --> 00:47:07,000
都是一些这种就是非商业机构

801
00:47:07,000 --> 00:47:17,000
包括跟那 13 个服务器应该也是有一个商业公司运作的

802
00:47:17,000 --> 00:47:19,000
但是它不是一个政府机构

803
00:47:19,000 --> 00:47:23,000
它至少是一个非盈利的国际公司

804
00:47:23,000 --> 00:47:26,000
Verison 好像是个盈利的商业公司

805
00:47:26,000 --> 00:47:29,000
其实说到这个问题就是

806
00:47:29,000 --> 00:47:31,000
我很久以来就在想说

807
00:47:31,000 --> 00:47:35,000
我们经常会把互联网比作一个信息高速公路

808
00:47:35,000 --> 00:47:36,000
信息高速公路

809
00:47:36,000 --> 00:47:39,000
但是高速公路这个东西

810
00:47:39,000 --> 00:47:42,000
就是现实活动的高速公路永远是国家控制的

811
00:47:42,000 --> 00:47:44,000
哪怕你是一个铸路公司

812
00:47:44,000 --> 00:47:45,000
你是修路公司

813
00:47:45,000 --> 00:47:47,000
这个路最终的运营也是有

814
00:47:47,000 --> 00:47:50,000
或者说这个路的铺设的决策

815
00:47:50,000 --> 00:47:51,000
也永远是有

816
00:47:51,000 --> 00:47:53,000
地是不一定

817
00:47:53,000 --> 00:47:55,000
地有可能是私有的

818
00:47:55,000 --> 00:47:56,000
但是从哪修

819
00:47:56,000 --> 00:47:58,000
看土地的这个有没有私有制

820
00:47:58,000 --> 00:48:00,000
从哪往哪修一条路这件事情

821
00:48:00,000 --> 00:48:02,000
永远是由政府决定的

822
00:48:02,000 --> 00:48:03,000
规划吧

823
00:48:03,000 --> 00:48:04,000
对

824
00:48:04,000 --> 00:48:06,000
那么为什么规划的时候没有

825
00:48:06,000 --> 00:48:09,000
或者说现在我们没有把互联网的规划

826
00:48:09,000 --> 00:48:11,000
作为政府的一个

827
00:48:11,000 --> 00:48:12,000
可以控制的事情

828
00:48:12,000 --> 00:48:13,000
或者说好吧

829
00:48:13,000 --> 00:48:14,000
也是有

830
00:48:14,000 --> 00:48:16,000
至少在

831
00:48:16,000 --> 00:48:17,000
中国是

832
00:48:17,000 --> 00:48:18,000
中国是政府控制的

833
00:48:18,000 --> 00:48:19,000
德国其实也是

834
00:48:19,000 --> 00:48:22,000
德国你要想在某一个小区铺宽带的话

835
00:48:22,000 --> 00:48:24,000
德国电信算是一个半政府组织了吧

836
00:48:24,000 --> 00:48:25,000
半政府控股

837
00:48:25,000 --> 00:48:27,000
但是政府不会直接影响他的

838
00:48:27,000 --> 00:48:28,000
政府只会

839
00:48:28,000 --> 00:48:29,000
比如说市政府会说

840
00:48:29,000 --> 00:48:30,000
这边修一新城区

841
00:48:30,000 --> 00:48:33,000
比如说所有新城区都需要铺设光碗

842
00:48:33,000 --> 00:48:36,000
那么哪个新城区先铺设光碗

843
00:48:36,000 --> 00:48:38,000
或者是光碗推进的过程

844
00:48:38,000 --> 00:48:41,000
这个决策的确是由政府来做

845
00:48:44,000 --> 00:48:45,000
但是 anyway

846
00:48:45,000 --> 00:48:46,000
这个问题我不知道答案

847
00:48:46,000 --> 00:48:49,000
但是至少目前不是这样子的

848
00:48:50,000 --> 00:48:53,000
但我不排除在不远的将来

849
00:48:53,000 --> 00:48:55,000
会在某些局部地区变成这样子

850
00:48:55,000 --> 00:48:56,000
对

851
00:48:56,000 --> 00:48:59,000
因为毕竟回网是一个越来越重要的

852
00:49:00,000 --> 00:49:03,000
一个国家的核心组织

853
00:49:04,000 --> 00:49:05,000
就像路一样

854
00:49:05,000 --> 00:49:06,000
就像真的就像路一样

855
00:49:08,000 --> 00:49:09,000
刚讲哪了

856
00:49:12,000 --> 00:49:15,000
为什么 Cloudflare 这个事情相对来说

857
00:49:15,000 --> 00:49:16,000
比较值得信赖

858
00:49:16,000 --> 00:49:18,000
就是他的商业模式

859
00:49:18,000 --> 00:49:21,000
我认为是能够对他做这件事情

860
00:49:21,000 --> 00:49:23,000
是可以自圆其说的

861
00:49:24,000 --> 00:49:26,000
比如说 Google 做 DNS 和他的商业逻辑

862
00:49:26,000 --> 00:49:27,000
我觉得这件事

863
00:49:27,000 --> 00:49:29,000
我没有办法去让他自圆其说

864
00:49:29,000 --> 00:49:31,000
他一定是这个数据他有价值

865
00:49:32,000 --> 00:49:34,000
但你可以说他不看重这个数据的价值

866
00:49:34,000 --> 00:49:36,000
只是想做一个纯粹的公共服务

867
00:49:36,000 --> 00:49:38,000
也是存在这种可能性的

868
00:49:38,000 --> 00:49:43,000
但是你毕竟没有办法去完全相信这件事情

869
00:49:43,000 --> 00:49:44,000
你只能相信他的人品

870
00:49:44,000 --> 00:49:46,000
但因为 Cloudflare 本身他是一个做

871
00:49:46,000 --> 00:49:48,000
本质上他是一个做安防的公司

872
00:49:48,000 --> 00:49:51,000
然后他的很多客户的 DNS

873
00:49:51,000 --> 00:49:52,000
比如说我的个人网站的 DNS

874
00:49:52,000 --> 00:49:54,000
就是放在 Cloudflare 的

875
00:49:54,000 --> 00:49:55,000
对吧

876
00:49:55,000 --> 00:49:58,000
他做公共服务其实是跟他的

877
00:49:58,000 --> 00:50:00,000
付费的客户是有好处的

878
00:50:00,000 --> 00:50:02,000
就是越多人用他的 Cloudflare

879
00:50:02,000 --> 00:50:05,000
这个 4 个 1 的 DNS

880
00:50:05,000 --> 00:50:07,000
是可以直接加快他

881
00:50:08,000 --> 00:50:11,000
就是那些 host 在 Cloudflare 的客户的

882
00:50:11,000 --> 00:50:13,000
域名的解析速度的

883
00:50:13,000 --> 00:50:14,000
你们有我的意思吗

884
00:50:14,000 --> 00:50:17,000
就是他的付费用户的利益

885
00:50:17,000 --> 00:50:20,000
是和他做公共 DNS 是一致的

886
00:50:20,000 --> 00:50:21,000
不矛盾

887
00:50:21,000 --> 00:50:22,000
然后他和我的

888
00:50:22,000 --> 00:50:23,000
他不需要知道我的隐私

889
00:50:23,000 --> 00:50:25,000
他只需要给他的这个付费用户提供

890
00:50:25,000 --> 00:50:27,000
更快的这个解析速度就可以了

891
00:50:28,000 --> 00:50:30,000
而且他可以通过 DNS 的访问模式

892
00:50:30,000 --> 00:50:33,000
来更来去优化自己的

893
00:50:33,000 --> 00:50:34,000
对对对

894
00:50:35,000 --> 00:50:37,000
而且在很多就是从目前的

895
00:50:37,000 --> 00:50:38,000
这个实测数据来看

896
00:50:38,000 --> 00:50:41,000
Cloudflare 的这个 DNS 的平均访问延迟

897
00:50:41,000 --> 00:50:43,000
是要比 Google 那个要快的

898
00:50:43,000 --> 00:50:45,000
就是这个延迟是要低的

899
00:50:45,000 --> 00:50:47,000
目前测还太早点吧

900
00:50:47,000 --> 00:50:48,000
因为毕竟他

901
00:50:48,000 --> 00:50:49,000
不不不

902
00:50:49,000 --> 00:50:50,000
这个目前他要打个影

903
00:50:50,000 --> 00:50:52,000
就是 Cloudflare 的全球大概有 200 多个节点

904
00:50:52,000 --> 00:50:54,000
但是就是他是从一个

905
00:50:54,000 --> 00:50:56,000
从一个就是互联网流量平均的角度去看

906
00:50:56,000 --> 00:50:59,000
但是针对到比如说中国用户直接去访问

907
00:50:59,000 --> 00:51:00,000
他肯定是不合适的

908
00:51:00,000 --> 00:51:02,000
因为要要绕路

909
00:51:02,000 --> 00:51:04,000
要那个不是没有直连的吗

910
00:51:04,000 --> 00:51:07,000
虽然 Cloudflare 在香港和澳门

911
00:51:07,000 --> 00:51:08,000
都是有这个节点的

912
00:51:08,000 --> 00:51:11,000
那 Cloudflare 在大陆也是通过跟百度云的合作

913
00:51:11,000 --> 00:51:12,000
也是有节点的

914
00:51:12,000 --> 00:51:14,000
但是作为中国一个普通用户

915
00:51:14,000 --> 00:51:16,000
是直接访问不了那些节点的

916
00:51:16,000 --> 00:51:17,000
是

917
00:51:17,000 --> 00:51:18,000
OK

918
00:51:18,000 --> 00:51:19,000
所以刚才讲那个平均访问数

919
00:51:19,000 --> 00:51:21,000
只是针对就是 Cloudflare 服务的

920
00:51:21,000 --> 00:51:23,000
中国大陆以外的全球其他市场来看

921
00:51:23,000 --> 00:51:26,000
他是目前是最快的一个公共的 DNS

922
00:51:26,000 --> 00:51:29,000
然后他还支持一些比较

923
00:51:29,000 --> 00:51:31,000
我觉得比较有意思的特性

924
00:51:31,000 --> 00:51:34,000
比如他支持 DNS 加密的 DNS

925
00:51:34,000 --> 00:51:38,000
叫 DNS over TLS 和 DNS over HTTPS

926
00:51:38,000 --> 00:51:41,000
但是这两个都非常慢不是吗

927
00:51:41,000 --> 00:51:45,000
这里后面要解释他们的优劣点是什么

928
00:51:45,000 --> 00:51:47,000
OK

929
00:51:47,000 --> 00:51:48,000
OK

930
00:51:48,000 --> 00:51:50,000
大家要一步一步说起

931
00:51:50,000 --> 00:51:53,000
就是 DNS 的技术架构是什么

932
00:51:53,000 --> 00:51:55,000
听 Ryo 老师讲课

933
00:51:55,000 --> 00:51:58,000
这个课程就长了

934
00:51:58,000 --> 00:52:00,000
尽量简单吧

935
00:52:00,000 --> 00:52:03,000
可能一次讲完还可能分两期讲

936
00:52:03,000 --> 00:52:06,000
其实 DNS 最本质跟他讲的是完成一个什么呢

937
00:52:06,000 --> 00:52:09,000
完成一个从自负串就域名

938
00:52:09,000 --> 00:52:12,000
翻译成这个 IP 地址这么一个功能

939
00:52:12,000 --> 00:52:13,000
这是他最核心的功能

940
00:52:13,000 --> 00:52:17,000
那么他传统通过一个 UDP 的协议来实现的

941
00:52:17,000 --> 00:52:20,000
就是你发一个 UDP 的包给比如说这个

942
00:52:20,000 --> 00:52:24,000
1.1.1.1 然后 53 53 端口的 UDP 的包

943
00:52:24,000 --> 00:52:26,000
然后里面写说我要问这个

944
00:52:26,000 --> 00:52:30,000
www.qq.com 这个地址的这个 IP 地址是多少

945
00:52:30,000 --> 00:52:31,000
你把这个问题发出去

946
00:52:31,000 --> 00:52:34,000
然后你再去监听这个 UDP 的这个回报

947
00:52:34,000 --> 00:52:37,000
如果网络正常的情况下大概一秒之内吧

948
00:52:37,000 --> 00:52:40,000
几十几百毫秒之内根据你的网络情况

949
00:52:40,000 --> 00:52:43,000
就是你在输入网址之后到打开网页之间

950
00:52:43,000 --> 00:52:44,000
你等的就是 DNS

951
00:52:44,000 --> 00:52:47,000
对你等那一段有一段是因为就最开始那段是这个

952
00:52:47,000 --> 00:52:50,000
就他会他会收到一个回报

953
00:52:50,000 --> 00:52:53,000
回报里面就说啊这个 www.3 w.qq.com

954
00:52:53,000 --> 00:52:56,000
他对应的网址是比如说 A.B.C.D

955
00:52:56,000 --> 00:52:59,000
对吧你就知道了这个 IP 地址

956
00:52:59,000 --> 00:53:04,000
让你这个电脑在通过这个 IP 地址和 QQ 的服务器建立连接

957
00:53:04,000 --> 00:53:05,000
让你才完成这个

958
00:53:05,000 --> 00:53:09,000
因为因为在就是互联网的 IP 的底层是没有没有域名这个概念的

959
00:53:09,000 --> 00:53:12,000
域名是一个更上层的一个就是

960
00:53:12,000 --> 00:53:14,000
应用层的一个概念嘛

961
00:53:15,000 --> 00:53:19,000
传统的 UDP 的 DNS 用了很多年

962
00:53:19,000 --> 00:53:23,000
也还好但是也有很多各种各样的问题

963
00:53:23,000 --> 00:53:26,000
最核心的一个问题就是他是一个

964
00:53:26,000 --> 00:53:29,000
就大部分的 UDP 的协议都会

965
00:53:29,000 --> 00:53:33,000
或多或少有这个问题就是他会导致这个 DDoS 攻击

966
00:53:33,000 --> 00:53:34,000
对

967
00:53:34,000 --> 00:53:37,000
这实际上是一个比较严重问题

968
00:53:37,000 --> 00:53:40,000
对对因为其实很多这种所谓的 DDoS 攻击都是

969
00:53:40,000 --> 00:53:44,000
设计到 DNS 这个服务器这里可能就展开解释为什么

970
00:53:44,000 --> 00:53:45,000
好

971
00:53:45,000 --> 00:53:49,000
就在 DDoS 服务器 DDoS 攻击里面最核心的一点就是

972
00:53:49,000 --> 00:53:52,000
你要用产生你要尽可能小的成本

973
00:53:52,000 --> 00:53:57,000
对你的目标的服务器产生尽可能大的流量的访问

974
00:53:57,000 --> 00:54:01,000
这样只要你的访问他流量大过他的这个可用带宽

975
00:54:01,000 --> 00:54:02,000
承受范围

976
00:54:02,000 --> 00:54:05,000
你就把他打你就把他打下打打打掉了

977
00:54:05,000 --> 00:54:07,000
因为他没法接受正常的服务了对吧

978
00:54:07,000 --> 00:54:08,000
对

979
00:54:08,000 --> 00:54:13,000
但是你真的要提供一个超级大的带宽成本是非常贵的

980
00:54:13,000 --> 00:54:19,000
所以在这个 DDoS 这个就是就是分布式拒绝法拒绝服务工资金里面

981
00:54:19,000 --> 00:54:24,000
就是这个全程叫什么 distributed denial of service attack 对吧

982
00:54:24,000 --> 00:54:25,000
对

983
00:54:25,000 --> 00:54:29,000
这里面最核心的一个技巧就对工资者来说最核心的一个就是叫做放大

984
00:54:29,000 --> 00:54:34,000
什么放大呢就是假设你只有一兆 BPS 的这么一个带宽

985
00:54:34,000 --> 00:54:36,000
你想办法把它放大成十兆

986
00:54:36,000 --> 00:54:39,000
你就有一个 1 比 10 的一个放大比例了对不对

987
00:54:39,000 --> 00:54:44,000
你用这个你用这个就打假设你只有一兆的带宽打你可能打不动他

988
00:54:44,000 --> 00:54:45,000
但是你十兆你刚刚就打动他

989
00:54:45,000 --> 00:54:49,000
比如说很多国内那种什么阿里云的服务器的带宽只有两兆的对吧

990
00:54:49,000 --> 00:54:53,000
你是小水果对那些把他打趴掉了

991
00:54:53,000 --> 00:54:56,000
然后如果你还能分布式的去放大

992
00:54:56,000 --> 00:54:59,000
假设你就就是怎么说就是你控制了

993
00:54:59,000 --> 00:55:01,000
假设你控制一万个肉鸡对吧

994
00:55:01,000 --> 00:55:04,000
每个肉鸡能产生一兆的一个上行带宽

995
00:55:04,000 --> 00:55:06,000
你不是就有一万兆的上行带宽吗

996
00:55:06,000 --> 00:55:10,000
如果你再能把这个一万兆的上行带宽放大十倍

997
00:55:10,000 --> 00:55:12,000
你就有一个十万兆的上行带宽对吧

998
00:55:12,000 --> 00:55:14,000
十万兆上行带宽等于多少个鸡啊

999
00:55:14,000 --> 00:55:18,000
就等于 100 鸡对吧

1000
00:55:18,000 --> 00:55:20,000
是不是

1001
00:55:20,000 --> 00:55:21,000
差不多对

1002
00:55:21,000 --> 00:55:22,000
100 鸡的带宽

1003
00:55:22,000 --> 00:55:26,000
100 鸡的刀刊足以让你打掉世界上 99%的服务器

1004
00:55:26,000 --> 00:55:27,000
对

1005
00:55:27,000 --> 00:55:28,000
对

1006
00:55:28,000 --> 00:55:32,000
对所以就是放大就是一个非常重要的一个技巧

1007
00:55:32,000 --> 00:55:34,000
所以具体怎么放大呢

1008
00:55:34,000 --> 00:55:39,000
就是你发出的流量要导到那个地方

1009
00:55:39,000 --> 00:55:42,000
就是有经过一个放大器 amplifier

1010
00:55:42,000 --> 00:55:45,000
然后这个放大器再发送给你的目标服务器

1011
00:55:45,000 --> 00:55:47,000
这个过程中就会产生一个放大

1012
00:55:47,000 --> 00:55:48,000
这个就有意思

1013
00:55:48,000 --> 00:55:51,000
就是你正常情况下你想不出为什么发生这种情况对吧

1014
00:55:51,000 --> 00:55:54,000
但 DNS 里面就碰巧有具备这么一个特征

1015
00:55:54,000 --> 00:55:58,000
你想你问一个 DNS 服务器一个问题

1016
00:55:58,000 --> 00:56:00,000
你去问 QQ.com 的时候你的问题直接是很短

1017
00:56:00,000 --> 00:56:04,000
就是可能二三四个字节的一个 UTB 包对吧

1018
00:56:04,000 --> 00:56:06,000
但是它可能返回你一个比较多

1019
00:56:06,000 --> 00:56:08,000
比如说假设 QQ 有一百个 IP 里面

1020
00:56:08,000 --> 00:56:10,000
或者你可以问一些比较复杂的问题

1021
00:56:10,000 --> 00:56:14,000
因为 DNS 里面那种有各种各样的这种所谓的记录结构

1022
00:56:14,000 --> 00:56:15,000
或者记录的类型

1023
00:56:15,000 --> 00:56:19,000
它可以产生一个比较大的一个 reply 一个回应

1024
00:56:19,000 --> 00:56:23,000
就是说你用一个比如说 50 个字节的

1025
00:56:23,000 --> 00:56:28,000
一个字节的请求产生了 500 个字节的回复

1026
00:56:28,000 --> 00:56:30,000
你不就产生了十倍的放大效果了吗

1027
00:56:30,000 --> 00:56:31,000
是

1028
00:56:31,000 --> 00:56:35,000
但是这里 trick 的点在于那个回文是回给你本人的

1029
00:56:35,000 --> 00:56:39,000
你怎么把它导到对方的那个你需要攻击的那个服务器那里去对吧

1030
00:56:39,000 --> 00:56:43,000
这里面就牵涉 UDP 协议本身的一个特性

1031
00:56:43,000 --> 00:56:50,000
就是 UDP 协议的那个协议头里面是有一个叫做 source address

1032
00:56:50,000 --> 00:56:52,000
就是这个包的发送者是谁的

1033
00:56:52,000 --> 00:56:57,000
比如说我的 IP 地址是比如说是 1.2.3.4

1034
00:56:57,000 --> 00:56:58,000
这是我的 IP 地址

1035
00:56:58,000 --> 00:57:03,000
然后我发给 1.1.1 这个服务器的 DNS 服务器的请求的时候

1036
00:57:03,000 --> 00:57:08,000
我会在我的那个 UDP 包的那个 source address

1037
00:57:08,000 --> 00:57:11,000
就是来源地址里面写是我是 1.2.3.4 对吧

1038
00:57:11,000 --> 00:57:15,000
这是好像你寄一封信然后把寄送人的发件人

1039
00:57:15,000 --> 00:57:16,000
对吧

1040
00:57:16,000 --> 00:57:18,000
发件人的地址填给别人

1041
00:57:18,000 --> 00:57:20,000
然后他就会反过

1042
00:57:20,000 --> 00:57:25,000
但是如果我 1.2.3.4 这个机器发出的 UDP 的包

1043
00:57:25,000 --> 00:57:31,000
写的那个来源地址是比如说 6.7.8.9 对吧

1044
00:57:31,000 --> 00:57:35,000
那 1.1.1 这个服务器他傻傻的收到这个包之后

1045
00:57:35,000 --> 00:57:39,000
他会认为这个请求来自于 6.7.8.9 那个机器

1046
00:57:39,000 --> 00:57:41,000
那个就是你的目标对吧

1047
00:57:41,000 --> 00:57:45,000
他就会把这个他就把那个 500 个 BIT 的回应

1048
00:57:45,000 --> 00:57:49,000
发给 6.7.8.9 的那个那个服务器

1049
00:57:49,000 --> 00:57:51,000
这样你就得产生攻击嘛

1050
00:57:51,000 --> 00:57:52,000
就这边就是有两个技巧

1051
00:57:52,000 --> 00:57:56,000
一个叫做放大一个叫做这个叫做 source address spoofing

1052
00:57:56,000 --> 00:57:58,000
就是伪造发件地址

1053
00:57:58,000 --> 00:58:00,000
发包地址

1054
00:58:00,000 --> 00:58:01,000
这个就是牵涉到另外一个问题

1055
00:58:01,000 --> 00:58:03,000
就为什么发包地址可以伪造

1056
00:58:03,000 --> 00:58:06,000
这个协议层他没有一个手段可以

1057
00:58:06,000 --> 00:58:07,000
回溯

1058
00:58:07,000 --> 00:58:09,000
可以回溯到真正发件的事情

1059
00:58:09,000 --> 00:58:13,000
对因为他的 UDP 协议是一个无状

1060
00:58:13,000 --> 00:58:15,000
叫什么 connectionless 就是无连接的嘛

1061
00:58:15,000 --> 00:58:17,000
就好像我们在上那个网络课的时候

1062
00:58:17,000 --> 00:58:19,000
一定会说 UDP 就好像写信一样

1063
00:58:19,000 --> 00:58:23,000
你写信的人你把信扔进邮筒里面之后

1064
00:58:23,000 --> 00:58:26,000
邮局是没有办法真正知道你是不是

1065
00:58:26,000 --> 00:58:29,000
就真的这封信是由机件人对吧

1066
00:58:29,000 --> 00:58:30,000
机件人写出的

1067
00:58:30,000 --> 00:58:31,000
对对对

1068
00:58:31,000 --> 00:58:35,000
所以现在很多那个发快递都要先验证发件人身份证嘛

1069
00:58:35,000 --> 00:58:36,000
对

1070
00:58:36,000 --> 00:58:40,000
所以就这个是 UDP 的一个很核心的问题

1071
00:58:40,000 --> 00:58:43,000
就是你可以看到目前很多这个网

1072
00:58:43,000 --> 00:58:47,000
互联网出现的这种 DDoS 协议的攻击里面

1073
00:58:47,000 --> 00:58:50,000
或多或少都会牵涉到这两个技巧对吧

1074
00:58:50,000 --> 00:58:54,000
一个是放大一个就是刚才那个就是伪造发发包地址

1075
00:58:54,000 --> 00:58:58,000
就 DNS 碰角是有这么一个

1076
00:58:58,000 --> 00:59:01,000
是给攻击者听了一个比较好的

1077
00:59:01,000 --> 00:59:03,000
反射和放大的这么一个机制吧

1078
00:59:03,000 --> 00:59:08,000
因为巨统就全球好像有几万个这种公开可以访问的 DNS 服务器

1079
00:59:08,000 --> 00:59:13,000
就等于有几万个这个放大器在那里等着攻击者去用了

1080
00:59:13,000 --> 00:59:14,000
好恐怖啊

1081
00:59:14,000 --> 00:59:18,000
这个还是非常非常恐怖的一件事情

1082
00:59:18,000 --> 00:59:20,000
但怎么解决这个问题呢

1083
00:59:20,000 --> 00:59:22,000
其实也比较也比较简单

1084
00:59:22,000 --> 00:59:24,000
就是有几种方案

1085
00:59:24,000 --> 00:59:26,000
就如果还是坚持用 UDP 的话

1086
00:59:26,000 --> 00:59:30,000
就解决这个发包地址伪造的问题相对来说容易一点

1087
00:59:30,000 --> 00:59:34,000
要求 ISP 就是这个互联网提供服务的商

1088
00:59:34,000 --> 00:59:36,000
他要过滤你的那个地址

1089
00:59:36,000 --> 00:59:37,000
就简单来说

1090
00:59:37,000 --> 00:59:40,000
比如说我是这个中国电信

1091
00:59:40,000 --> 00:59:44,000
比如说是这个深圳这个这个分公司

1092
00:59:44,000 --> 00:59:45,000
他的网络里面

1093
00:59:45,000 --> 00:59:49,000
他的那个网络的就网络结构里面会牵涉到一个叫做 AS

1094
00:59:49,000 --> 00:59:54,000
叫自治域是吧

1095
00:59:54,000 --> 00:59:55,000
网络那个 AS

1096
00:59:55,000 --> 00:59:57,000
我知道我也想不成

1097
00:59:57,000 --> 00:59:59,000
我也想不成叫 AS

1098
00:59:59,000 --> 01:00:00,000
我也想不成叫 AS

1099
01:00:00,000 --> 01:00:01,000
什么来的

1100
01:00:01,000 --> 01:00:02,000
anyway 就是回头查一下

1101
01:00:02,000 --> 01:00:03,000
就是网络里面

1102
01:00:03,000 --> 01:00:05,000
他有一个叫自治域的一个概念

1103
01:00:05,000 --> 01:00:06,000
就是你这个是比如说

1104
01:00:06,000 --> 01:00:09,000
就是中国电信深圳分公司管的这么一个网络里面

1105
01:00:09,000 --> 01:00:14,000
从这个网络里面去到别的网络的这个数据包

1106
01:00:14,000 --> 01:00:17,000
中国电信在出口的时候

1107
01:00:17,000 --> 01:00:21,000
是有义务去过滤掉那些来源

1108
01:00:21,000 --> 01:00:23,000
不是来自你这个网络里面的

1109
01:00:23,000 --> 01:00:24,000
对

1110
01:00:24,000 --> 01:00:27,000
就是使得你这个网络里面的这些数据

1111
01:00:27,000 --> 01:00:32,000
机器不能伪造非来自于这个网络内部的数据包

1112
01:00:32,000 --> 01:00:33,000
对

1113
01:00:33,000 --> 01:00:35,000
也就是说他把

1114
01:00:35,000 --> 01:00:40,000
他把这个有可能被攻击的人的范围限定到了

1115
01:00:40,000 --> 01:00:42,000
发现人所在的这个区域之内

1116
01:00:42,000 --> 01:00:43,000
对

1117
01:00:43,000 --> 01:00:45,000
就缩小了这个影响的区域

1118
01:00:45,000 --> 01:00:47,000
其实这样如果所有的 ISP

1119
01:00:47,000 --> 01:00:52,000
或所有的自治域都采用了这种叫做这个过滤的话

1120
01:00:52,000 --> 01:00:56,000
其实 90%的这个 DDoS 攻击是可以被避免的

1121
01:00:56,000 --> 01:00:59,000
因为他都涉及到这个伪造地址这么一个事情

1122
01:00:59,000 --> 01:01:00,000
对

1123
01:01:00,000 --> 01:01:05,000
而且这件事情要比比如说每个油桶都只能限定周围的小区来寄信要简单的多

1124
01:01:05,000 --> 01:01:08,000
其实这件事也挺难的

1125
01:01:08,000 --> 01:01:10,000
其实我觉得从网络公权的角度来讲

1126
01:01:10,000 --> 01:01:14,000
所以很多营业商其实没有做这件事情

1127
01:01:14,000 --> 01:01:16,000
但是它是一个有必要的

1128
01:01:16,000 --> 01:01:19,000
为了未来的这个网络的信息安全的话

1129
01:01:19,000 --> 01:01:22,000
我觉得这个事情是有必要做的

1130
01:01:23,000 --> 01:01:26,000
另外一个解决方案就是

1131
01:01:26,000 --> 01:01:32,000
所有的这种公开的这个 DNS 服务器都不使用 UDP

1132
01:01:32,000 --> 01:01:35,000
或者说限制 UDP 回复的那个包的大小

1133
01:01:35,000 --> 01:01:38,000
就限制那个放大比例嘛

1134
01:01:38,000 --> 01:01:39,000
简单来说

1135
01:01:39,000 --> 01:01:43,000
比如说你不能用 50 个字节的请求得到 500 个字节的回复

1136
01:01:43,000 --> 01:01:45,000
你可能最多得到 200 个字节的回复

1137
01:01:45,000 --> 01:01:47,000
那就成为只是一个 1 比 4 的攻击

1138
01:01:47,000 --> 01:01:49,000
可能就还 somehow 还小一点点对吧

1139
01:01:49,000 --> 01:01:52,000
但这也并不能根治这个问题

1140
01:01:52,000 --> 01:01:55,000
最好的方法就是说你还是换成那种就是有连接状态的协议

1141
01:01:55,000 --> 01:01:56,000
比如 TCP

1142
01:01:56,000 --> 01:02:00,000
因为 TCP 的话是没有办法伪造来源的

1143
01:02:00,000 --> 01:02:01,000
因为有三次握手嘛

1144
01:02:01,000 --> 01:02:03,000
它会骄验这个事情

1145
01:02:05,000 --> 01:02:06,000
但 TCP 呢就会有

1146
01:02:06,000 --> 01:02:11,000
DNS 换用 TCP 协议的话就会有带来额外的问题

1147
01:02:11,000 --> 01:02:13,000
主要是体积太重了嘛

1148
01:02:13,000 --> 01:02:15,000
对有几个问题

1149
01:02:15,000 --> 01:02:18,000
这个就是说 DNS 服务器它其实承受的访问量是非常巨大的

1150
01:02:18,000 --> 01:02:21,000
它可能 DNS 服务器通常不会有很多台嘛

1151
01:02:21,000 --> 01:02:24,000
但是它要承受的解析量是非常巨大的

1152
01:02:24,000 --> 01:02:26,000
因为所有人都在向它发

1153
01:02:26,000 --> 01:02:29,000
如果用 UDP 的话它不用维护状态

1154
01:02:29,000 --> 01:02:32,000
那就不用在每个就是它在那个

1155
01:02:32,000 --> 01:02:37,000
计算机的那个那个网络站那里是不用维护很多连接的嘛

1156
01:02:37,000 --> 01:02:40,000
因为每个连接都是消耗内存和那些资源的嘛

1157
01:02:40,000 --> 01:02:43,000
那 UDP 其实就不用消耗那么多嘛

1158
01:02:43,000 --> 01:02:45,000
它是个简单的问答就可以了

1159
01:02:45,000 --> 01:02:47,000
但如果大家要维护 TCP 的话

1160
01:02:47,000 --> 01:02:50,000
就相对来说你要做一个就是资源消耗会更大

1161
01:02:50,000 --> 01:02:56,000
而且就是因为 TCP 这个三次握手建立连接的速度比较慢嘛

1162
01:02:56,000 --> 01:02:59,000
三次握手的话至少有两个这个 Runtrip 的延迟对吧

1163
01:02:59,000 --> 01:03:00,000
对

1164
01:03:00,000 --> 01:03:04,000
所以很多就在传统来看这样做是不合适的

1165
01:03:04,000 --> 01:03:07,000
但是我觉得在 2018 年这个时候

1166
01:03:07,000 --> 01:03:11,000
在像我相信在绝大部分的这种发达的网络条件的地区

1167
01:03:11,000 --> 01:03:12,000
这个都不是问题了

1168
01:03:12,000 --> 01:03:15,000
因为现在的这个所谓的这种云服务的普及

1169
01:03:15,000 --> 01:03:21,000
使得这种所谓大规模的高音发的服务器的设计和维护

1170
01:03:21,000 --> 01:03:25,000
都变得可行而且经济

1171
01:03:25,000 --> 01:03:26,000
是的

1172
01:03:26,000 --> 01:03:28,000
就成本上成本上我觉得不再是一个问题了

1173
01:03:28,000 --> 01:03:29,000
对

1174
01:03:29,000 --> 01:03:32,000
我现在就是说延迟的问题怎么解决

1175
01:03:32,000 --> 01:03:34,000
那也有一些替代的手段

1176
01:03:34,000 --> 01:03:39,000
比如说有那个什么 TCP 那个叫做 0 RTT 的那个叫做 FastOpen

1177
01:03:39,000 --> 01:03:41,000
一些一些一些手段可以解决这个问题嘛

1178
01:03:41,000 --> 01:03:42,000
这是干嘛

1179
01:03:42,000 --> 01:03:46,000
TCP FastOpen 其实是一个解决

1180
01:03:46,000 --> 01:03:50,000
TCP 的三次所有两次延迟是因为

1181
01:03:50,000 --> 01:03:55,000
两个 RoundTrip 的延迟是因为你必须到就是发送方你必须收到我想想

1182
01:03:55,000 --> 01:04:00,000
你必须到第一个 ACK 的时候你才能够发送有用的真实数据

1183
01:04:00,000 --> 01:04:02,000
因为你第一个握手包是不能含数据的嘛

1184
01:04:02,000 --> 01:04:03,000
OK

1185
01:04:03,000 --> 01:04:04,000
对吧

1186
01:04:04,000 --> 01:04:05,000
是

1187
01:04:05,000 --> 01:04:08,000
那那个 FastOpen 其实就是说它允许你在第一个握手包的时候

1188
01:04:08,000 --> 01:04:10,000
就附带一小部分数据过去

1189
01:04:10,000 --> 01:04:11,000
OK

1190
01:04:11,000 --> 01:04:12,000
那对 DNS

1191
01:04:12,000 --> 01:04:13,000
这能提供多大的

1192
01:04:13,000 --> 01:04:16,000
那就是 0 延迟了就是 0 延迟了

1193
01:04:16,000 --> 01:04:18,000
就就不会有两个 RTT 了

1194
01:04:18,000 --> 01:04:20,000
一个 RTT 一个 RTT

1195
01:04:20,000 --> 01:04:22,000
你想吧因为三次握手是这样嘛

1196
01:04:22,000 --> 01:04:28,000
就是你你连接发起者是先发起一个这个 Sync 对吧

1197
01:04:28,000 --> 01:04:31,000
给接收方回一个 SyncACK

1198
01:04:31,000 --> 01:04:34,000
然后你这个时候发送方再回 ACK

1199
01:04:34,000 --> 01:04:37,000
这个 ACK 其实已经可以带数据包了嘛

1200
01:04:38,000 --> 01:04:40,000
就带你的那个 Payload 实际用数据

1201
01:04:40,000 --> 01:04:41,000
OK

1202
01:04:41,000 --> 01:04:44,000
所以你其实要等至少要等一个 RTT

1203
01:04:44,000 --> 01:04:47,000
就是一个一个叫什么一个来往返程的一个延迟了

1204
01:04:47,000 --> 01:04:48,000
对

1205
01:04:48,000 --> 01:04:49,000
对吧

1206
01:04:49,000 --> 01:04:55,000
但 FastOpen 就可以说在某些条件下你可以在第一个 Sync 的时候就可以带上

1207
01:04:55,000 --> 01:04:56,000
对

1208
01:04:56,000 --> 01:04:58,000
但这个有有有限制条件

1209
01:04:58,000 --> 01:05:02,000
就是它其实本质上是要在服务器端的一个 Cookie

1210
01:05:02,000 --> 01:05:04,000
对服务器和客户端都要支持

1211
01:05:04,000 --> 01:05:06,000
服务器端申请 Cookie 给你

1212
01:05:06,000 --> 01:05:09,000
使得你下一次在向这个服务器建立连接的时候

1213
01:05:09,000 --> 01:05:15,000
就不用等那个那个一个一个一个往返程的延迟了嘛

1214
01:05:16,000 --> 01:05:21,000
但是目前就是这个 FastOpen 是 Linux 上是支持的比较好的

1215
01:05:21,000 --> 01:05:25,000
我听说这个 MacOS 和这个 iOS 上面是

1216
01:05:25,000 --> 01:05:26,000
好像有点 Bug 的

1217
01:05:26,000 --> 01:05:29,000
就是因为这个牵涉到系统的那个核心层的一些问题

1218
01:05:29,000 --> 01:05:33,000
而且最严重的问题是中间有一些这个网络层的这个路由和网关

1219
01:05:33,000 --> 01:05:34,000
它是会拦截在这种包

1220
01:05:34,000 --> 01:05:35,000
因为它认为这个不合法

1221
01:05:35,000 --> 01:05:40,000
它认为这是一个就是就是不合法的这个数据包

1222
01:05:40,000 --> 01:05:42,000
就是第一个 Sync 带数据的东西

1223
01:05:42,000 --> 01:05:43,000
对

1224
01:05:45,000 --> 01:05:49,000
对对对这个就是慢慢慢慢之后再慢慢普及的一个一个一个技术

1225
01:05:49,000 --> 01:05:54,000
对你以后自己早期单独讲这个事情还比较有意思

1226
01:05:55,000 --> 01:05:58,000
DNS 的另外一个问题就是说

1227
01:05:58,000 --> 01:06:01,000
DNS 采用 UDP 协议的协议的另外一个问题就是

1228
01:06:01,000 --> 01:06:06,000
它会导致这个它会导致另外一种形式的攻击叫做就是就是投毒

1229
01:06:06,000 --> 01:06:08,000
就是 poisoning

1230
01:06:08,000 --> 01:06:13,000
投毒是什么意思呢就是你这么说还是还是刚才那个逻辑

1231
01:06:13,000 --> 01:06:14,000
就是

1232
01:06:15,000 --> 01:06:17,000
我不是云莲我是控制一个

1233
01:06:18,000 --> 01:06:19,000
假设小黄片网站的人

1234
01:06:19,000 --> 01:06:23,000
我想让我想让我想让更多人来上我的网站

1235
01:06:23,000 --> 01:06:25,000
像我的小黄片网站怎么办

1236
01:06:25,000 --> 01:06:31,000
假设我能够把 QQ.com 的 DNS 的 IP 指向我的那个网站

1237
01:06:31,000 --> 01:06:33,000
不就可以得到 QQ.com 那些流量了吗

1238
01:06:33,000 --> 01:06:35,000
Dream Big 也好

1239
01:06:36,000 --> 01:06:38,000
对就是思考方式这样子没错

1240
01:06:39,000 --> 01:06:41,000
这无端让我想到了 whitehouse.com

1241
01:06:43,000 --> 01:06:46,000
这算是早期的这叫什么社会工程学的投毒

1242
01:06:47,000 --> 01:06:48,000
对对对对对

1243
01:06:48,000 --> 01:06:51,000
那这个是真正一个一个技术上的攻击我要我要投毒

1244
01:06:51,000 --> 01:06:52,000
就是到底比较简单

1245
01:06:52,000 --> 01:06:58,000
因为因为最早期的 DNS 其实很蠢的就是他只用 UDP 从一个固定的端口就是 53

1246
01:06:58,000 --> 01:07:00,000
就是发出请求对对吧

1247
01:07:00,000 --> 01:07:03,000
然后他在 53 端口 53 又接受请求对吧

1248
01:07:03,000 --> 01:07:08,000
那假设我知道无涛你要访问这个 QQ.com

1249
01:07:09,000 --> 01:07:14,000
然后你的你从你的这个 UDP 53 的那个你的 IP 地址是 6.7

1250
01:07:14,000 --> 01:07:16,000
假设随便说假设你的 IP 地址 1.2.3.4

1251
01:07:16,000 --> 01:07:20,000
然后你的那个请求那个发出 UDP 的端口是 53

1252
01:07:20,000 --> 01:07:29,000
你就向那个你的那个公共解决服务器发出了一个一个一个 DNS 请求对吧

1253
01:07:30,000 --> 01:07:35,000
他在那你的那个公共服务器返回你的请求的同时

1254
01:07:35,000 --> 01:07:38,000
我向你发送一个一包我知道你的 IP 地址 1.2.3.4

1255
01:07:38,000 --> 01:07:41,000
然后我知道你的那个那个端口是 53

1256
01:07:41,000 --> 01:07:47,000
我向你发一个包解释说 QQ.com 的那个 IP 地址其实是其实是多少

1257
01:07:47,000 --> 01:07:53,000
其实是多少是是 6.7.8.9.8.7.6.5 对吧

1258
01:07:53,000 --> 01:07:55,000
是他的小黄飘的网站的地址

1259
01:07:55,000 --> 01:07:58,000
这是我的小黄飘的网站的那个那个服务器的 IP 地址

1260
01:07:58,000 --> 01:08:00,000
然后我只要满足一定的条件

1261
01:08:00,000 --> 01:08:04,000
然后我的包比你的那个解冯器更快到达你的话

1262
01:08:04,000 --> 01:08:09,000
我不就可以骗到你说你来 QQ.com 其实上了我的网站上了我的服务器吗

1263
01:08:10,000 --> 01:08:11,000
对吧

1264
01:08:11,000 --> 01:08:18,000
好啊就是这个就是这个 DNS 协议里面比较做的比较就是设计当初没有考虑很多安防的一个原因

1265
01:08:18,000 --> 01:08:21,000
他最开始的时候就说他是一个固定 IP 对吧

1266
01:08:21,000 --> 01:08:23,000
你只要知道那个的公网的 IP 就可以了

1267
01:08:23,000 --> 01:08:31,000
然后他只是在那个前面的两个字节就是一个一个 16 个比特长的一个随机 ID 里面

1268
01:08:31,000 --> 01:08:33,000
都不一定是随机的有可能是顺序的对

1269
01:08:33,000 --> 01:08:36,000
就那个有一个序列我只要猜对那个序列

1270
01:08:36,000 --> 01:08:42,000
我只要猜对那个序列并且我的那个回报时间比你拿到那个从服务器拿到那个正确的回报时间要快的话

1271
01:08:42,000 --> 01:08:44,000
我就能骗到你对吧

1272
01:08:44,000 --> 01:08:47,000
这让我想起了那个西安什么假的冰马俑

1273
01:08:47,000 --> 01:08:49,000
对对对差不多就是那个意思

1274
01:08:49,000 --> 01:08:54,000
我要去冰马俑冰马俑在这然后带你去一个假的冰马俑

1275
01:08:54,000 --> 01:08:56,000
这是太模化了

1276
01:08:56,000 --> 01:09:00,000
对对对但其实我骗你一个人其实成本很大

1277
01:09:00,000 --> 01:09:03,000
就是我的得到的收益是很小的

1278
01:09:03,000 --> 01:09:07,000
我其实就真正的 BNS 投赌 DNS 投赌是不会投赌到你这个人又不上面去的

1279
01:09:07,000 --> 01:09:11,000
而是我会考虑投赌到你要去解析的那个公共服务器

1280
01:09:11,000 --> 01:09:15,000
比如说把整个这个冰马俑售票处都给投赌过

1281
01:09:15,000 --> 01:09:21,000
就是你你你你会比较解释你自己是 1.1.1 这个公共服务器解析对吧

1282
01:09:21,000 --> 01:09:25,000
那 1.1.1 他自己并不是一个叫做 authoritative name server

1283
01:09:25,000 --> 01:09:26,000
他不是一个全门服务器

1284
01:09:26,000 --> 01:09:30,000
他也不知道那个那个 Q.com 到底是哪个他得去问别人

1285
01:09:30,000 --> 01:09:34,000
他得去问点康然后再去问 QQ 才知道他得到那个地址

1286
01:09:34,000 --> 01:09:38,000
所以说我投赌的对象其实应该是那个 1.1.1

1287
01:09:38,000 --> 01:09:44,000
但我只要骗到他所有使用 1.1.1 的人在请求这个 Q.com 的时候

1288
01:09:44,000 --> 01:09:48,000
都会得到一个我投赌过后的一个结果对吧

1289
01:09:48,000 --> 01:09:53,000
所以为了解决这个问题呢就是后面有很多所谓大不定的方案嘛对吧

1290
01:09:54,000 --> 01:09:59,000
刚才那个 DNS 投赌的攻击有一个是一个研究者发现了他叫做 Kaminsky

1291
01:09:59,000 --> 01:10:02,000
这个关节的 Kaminsky 攻击大家有兴趣可以查一下

1292
01:10:02,000 --> 01:10:05,000
我们之后会把这个连结放到这个 show notes 里面

1293
01:10:05,000 --> 01:10:08,000
大家可以理解一下这个过程挺有意思的

1294
01:10:08,000 --> 01:10:11,000
这个名字很有名吧好像

1295
01:10:11,000 --> 01:10:15,000
他是一个比较知名的对他做过很多的安全研究

1296
01:10:15,000 --> 01:10:20,000
DNS 就是投赌的话就是我刚才说就是他是那个原理

1297
01:10:20,000 --> 01:10:22,000
大概是原理是刚才那样子

1298
01:10:22,000 --> 01:10:24,000
但是现在我们看怎么去防范他

1299
01:10:24,000 --> 01:10:29,000
首先就是说你要增大投赌攻击的这种成本吧

1300
01:10:29,000 --> 01:10:33,000
那他的成本就是他的发报量和他的这个这个时间嘛对不对

1301
01:10:33,000 --> 01:10:36,000
就是说那有几个方法就是第一个

1302
01:10:36,000 --> 01:10:40,000
首先你要使用完全随机的那个 DNS 的那个请求的 ID

1303
01:10:40,000 --> 01:10:44,000
这样他猜对你的那个 ID 的概率就小嘛就是 16 个比特

1304
01:10:44,000 --> 01:10:48,000
是 65535 分之 1 嘛

1305
01:10:48,000 --> 01:10:51,000
6553535 分之 1 对吧

1306
01:10:51,000 --> 01:10:55,000
我是第一次听到有人把这个数字念出来

1307
01:10:55,000 --> 01:10:56,000
因为我最近用的比较多嘛

1308
01:10:56,000 --> 01:11:00,000
所以我记得住那几个常见的那个数字

1309
01:11:00,000 --> 01:11:04,000
第二个方法就是我再增大一些其他的随机量

1310
01:11:04,000 --> 01:11:06,000
就是我再增大一些其他的随机量

1311
01:11:07,000 --> 01:11:10,000
第二个方法就是我再增大一些其他的随机量

1312
01:11:10,000 --> 01:11:14,000
比如说我会去随机我发送 UDB 请求那个端口

1313
01:11:14,000 --> 01:11:18,000
我就不要用固定的 53 请求那个端口发送你的请求

1314
01:11:18,000 --> 01:11:19,000
你要用一个随机的端口

1315
01:11:19,000 --> 01:11:23,000
端口刚好也是一个 16 比特的一个数嘛

1316
01:11:23,000 --> 01:11:26,000
所以就变成一个 32 个比特的随机量了对不对

1317
01:11:26,000 --> 01:11:27,000
但肯定不是完全 30

1318
01:11:27,000 --> 01:11:30,000
因为有些就是 low ports 你是不用的吧

1319
01:11:30,000 --> 01:11:32,000
你这种是一些 high ports 对吧

1320
01:11:32,000 --> 01:11:34,000
就是数字比较大的那些那些包

1321
01:11:34,000 --> 01:11:36,000
实际上没有 32 位那么长

1322
01:11:36,000 --> 01:11:38,000
但是目前我们就按理想情况下

1323
01:11:38,000 --> 01:11:40,000
你就有 32 位的随机量了对吧

1324
01:11:40,000 --> 01:11:46,000
那就是多少是 32 位的话是 40 亿对不对

1325
01:11:46,000 --> 01:11:48,000
对 32 次吧对

1326
01:11:48,000 --> 01:11:50,000
应该是 40 多亿吧

1327
01:11:50,000 --> 01:11:55,000
还有一个方法就是你请求的不是一个自负串嘛对吧

1328
01:11:55,000 --> 01:11:57,000
就是域名嘛你请的是个域名嘛

1329
01:11:57,000 --> 01:11:59,000
域名但其实是不分大小写的对不对

1330
01:11:59,000 --> 01:12:00,000
对

1331
01:12:00,000 --> 01:12:05,000
所以还有一种就是增加这个随机量的一个方法就是

1332
01:12:05,000 --> 01:12:09,000
你随机调一下你请求那个自负

1333
01:12:09,000 --> 01:12:12,000
域名自负串的字母的大小写

1334
01:12:12,000 --> 01:12:15,000
这也可以 OK

1335
01:12:15,000 --> 01:12:17,000
对吧就是比如说你放上 qq.com

1336
01:12:17,000 --> 01:12:22,000
你可以是小姐 q 大姐 q 点小姐小姐 com

1337
01:12:22,000 --> 01:12:26,000
那你可以就是 qq.com 点是没有大小写嘛

1338
01:12:26,000 --> 01:12:28,000
就是 qq.com 一共有 5 个字母对不对

1339
01:12:28,000 --> 01:12:33,000
那你可以多少就是你每个字母都可以调大小写

1340
01:12:33,000 --> 01:12:35,000
你排列组合一下就会有机制

1341
01:12:35,000 --> 01:12:38,000
这个的那个叫什么

1342
01:12:38,000 --> 01:12:41,000
随机量实际上是跟着域名的长度来的

1343
01:12:41,000 --> 01:12:43,000
对就跟你请求的那个域名的长度

1344
01:12:43,000 --> 01:12:46,000
假设你请求 qq.com 的话就有 5 个 bit 的随机量对不对

1345
01:12:46,000 --> 01:12:48,000
每个字母都可以大小或小小写嘛

1346
01:12:48,000 --> 01:12:49,000
每个 byte

1347
01:12:49,000 --> 01:12:50,000
对对对

1348
01:12:50,000 --> 01:12:51,000
对吧

1349
01:12:51,000 --> 01:12:55,000
所以你假设你的请求的字母那个域名的字母数的

1350
01:12:55,000 --> 01:12:58,000
随机量就会增大你的这个

1351
01:12:58,000 --> 01:13:02,000
点一下请求的那个不可以被不被猜到的概率嘛

1352
01:13:02,000 --> 01:13:03,000
所以在有体

1353
01:13:03,000 --> 01:13:05,000
所以如果是一个 unicode 的域名的话

1354
01:13:05,000 --> 01:13:07,000
这还是一个招摆

1355
01:13:07,000 --> 01:13:08,000
是吧

1356
01:13:08,000 --> 01:13:10,000
就是如果你是没有 unicode 的域名

1357
01:13:10,000 --> 01:13:13,000
unicode 的域名在那个在

1358
01:13:13,000 --> 01:13:15,000
就是就是叫做什么来的

1359
01:13:15,000 --> 01:13:17,000
就是本地化域名就是所谓中文域名

1360
01:13:17,000 --> 01:13:20,000
比如说之前那个 CNNIC 搞那个中文域名

1361
01:13:20,000 --> 01:13:22,000
它其实是通过一个转写规则

1362
01:13:22,000 --> 01:13:24,000
转换成一个拉丁字符串的

1363
01:13:25,000 --> 01:13:27,000
哦问题是

1364
01:13:27,000 --> 01:13:30,000
转换这一步是在本集上发生的还是在

1365
01:13:30,000 --> 01:13:32,000
是发请求之前

1366
01:13:32,000 --> 01:13:33,000
是在发请求之前

1367
01:13:33,000 --> 01:13:34,000
ok 对对对

1368
01:13:34,000 --> 01:13:35,000
它会有一个转写规则

1369
01:13:35,000 --> 01:13:37,000
这个到时候也可以写到 shaunos 里面

1370
01:13:37,000 --> 01:13:40,000
就转写之后的那个大概也是可以也是可以调的嘛

1371
01:13:41,000 --> 01:13:44,000
其实就是你用那个的它的那个随机量还大一点

1372
01:13:44,000 --> 01:13:46,000
因为它转写出来的那个冲长会比较长

1373
01:13:46,000 --> 01:13:47,000
对

1374
01:13:47,000 --> 01:13:49,000
所以反而是短的域名

1375
01:13:49,000 --> 01:13:50,000
比如说是什么什么

1376
01:13:50,000 --> 01:13:52,000
什么那个什么什么

1377
01:13:53,000 --> 01:13:55,000
G 1.com 这种反而是比较危险的

1378
01:13:55,000 --> 01:13:56,000
对

1379
01:13:57,000 --> 01:13:58,000
对对对

1380
01:13:58,000 --> 01:14:00,000
就这个是一个通常的一个手段

1381
01:14:03,000 --> 01:14:06,000
刚才讲了这个 DNS 用 UDP 协议的一些诸多问题

1382
01:14:06,000 --> 01:14:09,000
所以后来大家想就是说怎么去解决这个问题

1383
01:14:10,000 --> 01:14:12,000
还有一些问题就是说

1384
01:14:12,000 --> 01:14:14,000
就是我们也想对 DNS 的那个结果

1385
01:14:14,000 --> 01:14:16,000
刚才讲那个

1386
01:14:16,000 --> 01:14:17,000
DNS 请求我们请求

1387
01:14:17,000 --> 01:14:19,000
1.1.1 也好 8.8.8.8.8

1388
01:14:19,000 --> 01:14:21,000
它都所谓的不是一个

1389
01:14:21,000 --> 01:14:22,000
就是权威服务器嘛

1390
01:14:22,000 --> 01:14:23,000
就是它并不

1391
01:14:23,000 --> 01:14:25,000
并不确切的知道

1392
01:14:25,000 --> 01:14:27,000
哪个域名对应的什么 IP 地址

1393
01:14:27,000 --> 01:14:29,000
它得去问所谓的一些权威的服务器

1394
01:14:30,000 --> 01:14:32,000
最权威的所谓的所谓全球有 13 个

1395
01:14:32,000 --> 01:14:33,000
叫根服务器嘛

1396
01:14:34,000 --> 01:14:35,000
就是那个点

1397
01:14:35,000 --> 01:14:36,000
最后那个点

1398
01:14:37,000 --> 01:14:39,000
就这个服务器负责解释什么

1399
01:14:39,000 --> 01:14:40,000
它是负责解释

1400
01:14:40,000 --> 01:14:43,000
.com 这个这个这个域名

1401
01:14:43,000 --> 01:14:44,000
TLD 对

1402
01:14:45,000 --> 01:14:47,000
是 TLD 就是 Top Level Domain 嘛

1403
01:14:47,000 --> 01:14:49,000
就顶级域是这次去问谁

1404
01:14:49,000 --> 01:14:51,000
.com 比如说还有像那个

1405
01:14:51,000 --> 01:14:53,000
什么 Net 啊

1406
01:14:53,000 --> 01:14:54,000
Org 啊

1407
01:14:54,000 --> 01:14:56,000
还有最近新出了一堆什么 XYZ 啊

1408
01:14:57,000 --> 01:14:58,000
什么 XXX

1409
01:14:59,000 --> 01:15:00,000
对 XXX 对对

1410
01:15:00,000 --> 01:15:01,000
还像我们那边什么.fm 啊

1411
01:15:01,000 --> 01:15:03,000
这这就是所谓就是根服务器

1412
01:15:03,000 --> 01:15:04,000
要解决的问题

1413
01:15:04,000 --> 01:15:05,000
然后我们找到了

1414
01:15:05,000 --> 01:15:06,000
通过根服务器问到了

1415
01:15:06,000 --> 01:15:07,000
.com 是谁解析的

1416
01:15:07,000 --> 01:15:09,000
那是哪个服务器解析的

1417
01:15:09,000 --> 01:15:11,000
我们再去问 qq.com

1418
01:15:11,000 --> 01:15:13,000
因为它是属于.com 下面的嘛对吧

1419
01:15:13,000 --> 01:15:16,000
我们来去问.com 这个服务器

1420
01:15:16,000 --> 01:15:19,000
这个 DNS 服务器 qq 这个

1421
01:15:19,000 --> 01:15:20,000
指域名是谁的

1422
01:15:20,000 --> 01:15:22,000
然后一次再往再问 3 w.qq

1423
01:15:22,000 --> 01:15:23,000
就是谁的

1424
01:15:23,000 --> 01:15:24,000
一层一层往下问嘛对

1425
01:15:24,000 --> 01:15:26,000
整个它叫做一个 reversive 的

1426
01:15:26,000 --> 01:15:28,000
一个查询就是地归查询嘛

1427
01:15:30,000 --> 01:15:31,000
对吧对但是

1428
01:15:31,000 --> 01:15:33,000
就是就是这些

1429
01:15:33,000 --> 01:15:35,000
就一点一点一怎么能够确切的

1430
01:15:35,000 --> 01:15:37,000
除了刚才讲的通过通过

1431
01:15:37,000 --> 01:15:39,000
这种增加这个请求的随机量

1432
01:15:39,000 --> 01:15:41,000
使得它不太可能被误整之外

1433
01:15:41,000 --> 01:15:43,000
有没有一种方法可以确切的保证

1434
01:15:43,000 --> 01:15:45,000
我得到结果一定是正确的

1435
01:15:46,000 --> 01:15:49,000
这需要整个查询链的每一

1436
01:15:49,000 --> 01:15:51,000
一个环节都配合才能

1437
01:15:52,000 --> 01:15:55,000
对所以就需要做一个有一个签名嘛

1438
01:15:55,000 --> 01:15:57,000
就跟我们那个就是数字证书的

1439
01:15:57,000 --> 01:15:58,000
还是要到 Certificate

1440
01:15:58,000 --> 01:16:01,000
对就是要根域名要签名对吧

1441
01:16:01,000 --> 01:16:03,000
就是比如说.com 根域名签

1442
01:16:03,000 --> 01:16:06,000
谁是点谁是.com 这个

1443
01:16:06,000 --> 01:16:07,000
这个顶级域的

1444
01:16:07,000 --> 01:16:09,000
那个就是全服务器

1445
01:16:09,000 --> 01:16:11,000
他要在跟那里签个名

1446
01:16:11,000 --> 01:16:13,000
然后你去查询 com 这个

1447
01:16:13,000 --> 01:16:14,000
这个顶级服务器的时候

1448
01:16:14,000 --> 01:16:15,000
他要证明说

1449
01:16:15,000 --> 01:16:17,000
我确实是这个 com 这个服务器的

1450
01:16:17,000 --> 01:16:19,000
这个合法的这个运营者

1451
01:16:19,000 --> 01:16:22,000
我返回的这个结果是你应该是相信的

1452
01:16:22,000 --> 01:16:24,000
然后他再去查这个

1453
01:16:24,000 --> 01:16:26,000
qq.com 这个运营的时候

1454
01:16:26,000 --> 01:16:27,000
他产生的结果

1455
01:16:27,000 --> 01:16:29,000
他会加一个签名在那个

1456
01:16:29,000 --> 01:16:32,000
UDP 的这个协议返回里面

1457
01:16:32,000 --> 01:16:34,000
然后你拿到一个你也可以去验证

1458
01:16:34,000 --> 01:16:36,000
就是组成验证这个东西嘛

1459
01:16:36,000 --> 01:16:37,000
这个具体过程有点复杂

1460
01:16:37,000 --> 01:16:39,000
这个整个体系叫 DNSSEC

1461
01:16:39,000 --> 01:16:41,000
叫做 DNS Security

1462
01:16:41,000 --> 01:16:42,000
安全的 DNS

1463
01:16:42,000 --> 01:16:43,000
他完成了什么事情呢

1464
01:16:43,000 --> 01:16:47,000
就是他可以确保你拿到一个结果之后

1465
01:16:47,000 --> 01:16:49,000
包括你追踪客户端也可以验证

1466
01:16:49,000 --> 01:16:50,000
你可以验证这个结果

1467
01:16:50,000 --> 01:16:53,000
是不是由这个域名的所有者签发的

1468
01:16:53,000 --> 01:16:55,000
就一层一层往上去验证这个东西

1469
01:16:55,000 --> 01:16:57,000
OK

1470
01:16:57,000 --> 01:16:59,000
但是这个验证他并不

1471
01:16:59,000 --> 01:17:01,000
他就是他传输的过程是明文的

1472
01:17:01,000 --> 01:17:03,000
就是他传输的这个验证结果也好

1473
01:17:03,000 --> 01:17:05,000
这些签名都是在明文传输的

1474
01:17:05,000 --> 01:17:07,000
就是中间的网络的任何一个

1475
01:17:07,000 --> 01:17:09,000
还是有可能被篡改

1476
01:17:09,000 --> 01:17:11,000
不会被篡改没有用

1477
01:17:11,000 --> 01:17:12,000
被篡改的话你会验证失败

1478
01:17:12,000 --> 01:17:13,000
你就丢弃那个包了

1479
01:17:13,000 --> 01:17:14,000
OK

1480
01:17:14,000 --> 01:17:17,000
但是他是会暴露你查了什么域名的

1481
01:17:17,000 --> 01:17:19,000
就另外一个安全的角度就是说

1482
01:17:19,000 --> 01:17:22,000
能不能在整个链认中把传输的任务加密

1483
01:17:22,000 --> 01:17:24,000
就除了验证结果之外

1484
01:17:24,000 --> 01:17:25,000
就是加密和传输两个事情

1485
01:17:25,000 --> 01:17:27,000
就是 Ecryption 和 Sanication

1486
01:17:27,000 --> 01:17:31,000
他解决了是两个不同的一个任务

1487
01:17:31,000 --> 01:17:32,000
Sanication 觉得是我得到结果

1488
01:17:32,000 --> 01:17:33,000
是不是出了一个问题

1489
01:17:33,000 --> 01:17:35,000
Sanication 觉得是我得到结果是不是对的

1490
01:17:35,000 --> 01:17:39,000
Ecryption 解决的是我在整个过程中

1491
01:17:39,000 --> 01:17:42,000
我有没有被除了被查询那个人之外

1492
01:17:42,000 --> 01:17:44,000
第三方知道我们在说什么

1493
01:17:44,000 --> 01:17:45,000
对吧

1494
01:17:45,000 --> 01:17:50,000
所以后来最开始的查试是叫做一个 DNS crypt

1495
01:17:50,000 --> 01:17:52,000
DNSSEC 解决签名的问题

1496
01:17:52,000 --> 01:17:55,000
DNS crypt 解决是加密的问题

1497
01:17:55,000 --> 01:17:56,000
DNS crypt

1498
01:17:56,000 --> 01:17:58,000
OK

1499
01:17:58,000 --> 01:17:59,000
就是加密的那个

1500
01:17:59,000 --> 01:18:01,000
Ecrypt 的后面那个 crypt

1501
01:18:01,000 --> 01:18:05,000
这个是基于 UDP

1502
01:18:05,000 --> 01:18:09,000
最开始他主要是基于 UDP 协议做的一个改进版

1503
01:18:09,000 --> 01:18:12,000
就是做了一些用一些现代的这种公钥

1504
01:18:12,000 --> 01:18:13,000
私钥加密的方式

1505
01:18:13,000 --> 01:18:15,000
直接加密 UDP 的包

1506
01:18:15,000 --> 01:18:17,000
对对对给做了

1507
01:18:17,000 --> 01:18:19,000
加密 UDP 的包

1508
01:18:19,000 --> 01:18:20,000
但是他有一个问题就是

1509
01:18:20,000 --> 01:18:23,000
他并不是一个所谓的 IETF 的标准

1510
01:18:23,000 --> 01:18:25,000
也没有一个 FC 对应权

1511
01:18:25,000 --> 01:18:28,000
他只是一个第三方的一个实现

1512
01:18:28,000 --> 01:18:30,000
虽然实现的人就是支持的人也不多

1513
01:18:30,000 --> 01:18:34,000
我印象中知名的支持 DNS crypt

1514
01:18:34,000 --> 01:18:37,000
这个公共解决服务器只有 OpenDNS

1515
01:18:37,000 --> 01:18:38,000
就是被 Cisco 买的那个

1516
01:18:38,000 --> 01:18:42,000
然后他有一堆这种所谓的这种 client

1517
01:18:42,000 --> 01:18:44,000
他有一些客户端让你去用

1518
01:18:44,000 --> 01:18:47,000
但是因为 OpenDNS 的服务

1519
01:18:47,000 --> 01:18:49,000
他服务器不是太多

1520
01:18:49,000 --> 01:18:53,000
他的那个服务好像不是很多人用

1521
01:18:53,000 --> 01:18:55,000
用的人比较少

1522
01:18:55,000 --> 01:18:57,000
因为他的那个他最开始是一个

1523
01:18:58,000 --> 01:19:00,000
好像是一个第三方公司

1524
01:19:00,000 --> 01:19:02,000
商业公司他做的

1525
01:19:02,000 --> 01:19:04,000
他也没有说有很清晰的盈利模式

1526
01:19:04,000 --> 01:19:05,000
他的资源也不足

1527
01:19:05,000 --> 01:19:06,000
他不可能做得非常庞大

1528
01:19:06,000 --> 01:19:10,000
OpenDNS 从一开始是一个非常理想化的这么一个项目

1529
01:19:10,000 --> 01:19:11,000
对对对对对

1530
01:19:11,000 --> 01:19:12,000
没错没错

1531
01:19:12,000 --> 01:19:16,000
所以后来像 Google 出了 8.8.8 之后

1532
01:19:16,000 --> 01:19:17,000
大家都觉得他那个好那个快

1533
01:19:17,000 --> 01:19:19,000
全球敌人有多大家都用他

1534
01:19:19,000 --> 01:19:21,000
所以其实没有很多人支持 OpenDNS

1535
01:19:21,000 --> 01:19:25,000
所以也使得真正 DNS crypt 这个协议的

1536
01:19:25,000 --> 01:19:27,000
被支持的人也比较少

1537
01:19:30,000 --> 01:19:33,000
所以后来就是说又就是就是

1538
01:19:33,000 --> 01:19:36,000
就 IETF 又出了一些其他东西

1539
01:19:36,000 --> 01:19:38,000
就对两个最知名的

1540
01:19:38,000 --> 01:19:39,000
OpenDNS 其实只有一个其实

1541
01:19:39,000 --> 01:19:41,000
因为还在草案中

1542
01:19:41,000 --> 01:19:43,000
就刚刚我们讲的 DNS over TLS

1543
01:19:43,000 --> 01:19:47,000
就是 HTTP 用加密的 HTTP

1544
01:19:47,000 --> 01:19:50,000
S 就是 TLS 的一个一个一个所

1545
01:19:50,000 --> 01:19:51,000
security 嘛对吧

1546
01:19:51,000 --> 01:19:52,000
就是用那个传输层加密

1547
01:19:52,000 --> 01:19:55,000
来解决这个 HTTP 这个名言文传输的问题

1548
01:19:55,000 --> 01:19:58,000
那 DNS over TLS 其实本身也是一样的

1549
01:19:58,000 --> 01:20:01,000
就是它是用通过 TLS 协议去

1550
01:20:01,000 --> 01:20:07,000
通过 TLS 加密去传输一个 TCP 的 DNS 请求

1551
01:20:07,000 --> 01:20:10,000
但这里就是有一个问题就是

1552
01:20:10,000 --> 01:20:13,000
TLS 是刚才讲的

1553
01:20:13,000 --> 01:20:15,000
TCP 有三次握手对不对

1554
01:20:15,000 --> 01:20:17,000
但 TLS 为了在 TCP

1555
01:20:17,000 --> 01:20:21,000
TCP 的三次握手

1556
01:20:21,000 --> 01:20:24,000
的三次握手之外

1557
01:20:24,000 --> 01:20:27,000
还有顶上的 TLS 的这个握手

1558
01:20:27,000 --> 01:20:30,000
TLS 是第一步是要先通过公钥

1559
01:20:30,000 --> 01:20:34,000
来交换一个来交换一个密

1560
01:20:34,000 --> 01:20:36,000
先通过公钥和私钥的加密协议

1561
01:20:36,000 --> 01:20:40,000
来交换一个对制密码的密码

1562
01:20:40,000 --> 01:20:41,000
对对对

1563
01:20:41,000 --> 01:20:42,000
就这个过程是挺复杂

1564
01:20:42,000 --> 01:20:45,000
就是要有三个 round trip 应该是

1565
01:20:45,000 --> 01:20:47,000
就是我记得是谁在推上说了一句

1566
01:20:47,000 --> 01:20:50,000
那个 DNS over TLS 非常慢的

1567
01:20:51,000 --> 01:20:53,000
不记得是谁

1568
01:20:56,000 --> 01:20:58,000
是什么

1569
01:20:58,000 --> 01:21:01,000
他说 TLS 他试了一下 DNS

1570
01:21:01,000 --> 01:21:05,000
TLS 的整个解析过程是非常慢的

1571
01:21:05,000 --> 01:21:06,000
慢了一个数量的级

1572
01:21:06,000 --> 01:21:09,000
对啊就是因为你要有三个 warrant term

1573
01:21:09,000 --> 01:21:11,000
TLS 建立联系之后

1574
01:21:11,000 --> 01:21:14,000
然后你再发送 DNS 请求对不对

1575
01:21:14,000 --> 01:21:16,000
所以这个是比较慢的一个事情

1576
01:21:16,000 --> 01:21:19,000
但也有一些方法去解决这个问题

1577
01:21:19,000 --> 01:21:22,000
但我们这里就会逐个展开来讲

1578
01:21:22,000 --> 01:21:25,000
就是解决这个 TLS 慢的问题

1579
01:21:25,000 --> 01:21:26,000
有几种方案

1580
01:21:26,000 --> 01:21:28,000
最开始就是从 TCP 那层开始解决对吧

1581
01:21:28,000 --> 01:21:32,000
我们先把这个 FastOpen 用上

1582
01:21:32,000 --> 01:21:35,000
就可以不用等第一个 TCP 的那个

1583
01:21:35,000 --> 01:21:37,000
那个 warrant term 的延迟了对吧

1584
01:21:37,000 --> 01:21:39,000
然后 TLS 这个层

1585
01:21:39,000 --> 01:21:43,000
TELU 本身有一些这个叫做 False Start

1586
01:21:43,000 --> 01:21:45,000
就是叫做什么来的

1587
01:21:45,000 --> 01:21:48,000
一些技巧可以使得加快 TLS 连接的建立

1588
01:21:48,000 --> 01:21:49,000
就理想情况下

1589
01:21:49,000 --> 01:21:50,000
其实可以用一个 warrant term

1590
01:21:50,000 --> 01:21:52,000
可以建立 TLS 连接的

1591
01:21:56,000 --> 01:21:58,000
就还可以接受对吧

1592
01:22:00,000 --> 01:22:02,000
然后在这个一个 warrant term

1593
01:22:02,000 --> 01:22:04,000
建立 TLS 连接的技术上

1594
01:22:04,000 --> 01:22:07,000
还可以用管道化就是 Pipe Planning

1595
01:22:07,000 --> 01:22:10,000
就是多个请一次发多个 DNS 请求

1596
01:22:10,000 --> 01:22:12,000
然后一次就是他

1597
01:22:12,000 --> 01:22:15,000
你发后一个请求的时候

1598
01:22:15,000 --> 01:22:17,000
不用等前一个请求的响应

1599
01:22:17,000 --> 01:22:19,000
你就可以先发对吧

1600
01:22:19,000 --> 01:22:21,000
比如你打开一个页面

1601
01:22:21,000 --> 01:22:23,000
他页面已经用了 10 个域名

1602
01:22:23,000 --> 01:22:25,000
你把 10 个都发出去

1603
01:22:25,000 --> 01:22:27,000
然后再一起等他的查询回来

1604
01:22:27,000 --> 01:22:28,000
对吧

1605
01:22:28,000 --> 01:22:30,000
然后而且这个查询

1606
01:22:30,000 --> 01:22:32,000
这个 Pipe Planning

1607
01:22:32,000 --> 01:22:35,000
Pipe Planning 中的管道化还是叫什么

1608
01:22:35,000 --> 01:22:36,000
流水线还是叫什么

1609
01:22:36,000 --> 01:22:38,000
流水线对对流水线操作

1610
01:22:38,000 --> 01:22:39,000
而且他还是乱序的

1611
01:22:39,000 --> 01:22:41,000
他不像 HTP 1.1 的流水线

1612
01:22:41,000 --> 01:22:43,000
他是一个顺序的流水线

1613
01:22:43,000 --> 01:22:44,000
他是一个 automotive

1614
01:22:44,000 --> 01:22:46,000
就是你可以发 1 2 3 4 5 请求

1615
01:22:46,000 --> 01:22:49,000
回到的结果可能是 5 3 4 1 2

1616
01:22:49,000 --> 01:22:50,000
这种一个顺序

1617
01:22:50,000 --> 01:22:51,000
这个顺序是可以乱的

1618
01:22:51,000 --> 01:22:54,000
就如果你符合 RFC 7 8 5 8 的

1619
01:22:54,000 --> 01:22:56,000
一个约定的话

1620
01:22:56,000 --> 01:22:58,000
你是可以得到这么一个结果的

1621
01:22:58,000 --> 01:22:59,000
就是理论上

1622
01:22:59,000 --> 01:23:01,000
其实也只用等一个

1623
01:23:01,000 --> 01:23:03,000
一个王返成的延迟

1624
01:23:03,000 --> 01:23:05,000
就可以得到比较好的一个性能提显了

1625
01:23:05,000 --> 01:23:07,000
但是问题是目前为止

1626
01:23:07,000 --> 01:23:10,000
在公共的支持

1627
01:23:10,000 --> 01:23:12,000
就是公共解析的 DNS 服务器

1628
01:23:12,000 --> 01:23:14,000
只有 Cloudflare 这个 1.1.1

1629
01:23:14,000 --> 01:23:16,000
是支持 DNS over TLS 的

1630
01:23:16,000 --> 01:23:18,000
就比较少

1631
01:23:18,000 --> 01:23:20,000
国内基本上没有人支持了

1632
01:23:20,000 --> 01:23:21,000
就是什么 114 啊

1633
01:23:21,000 --> 01:23:23,000
阿里戴度什么腾讯都不支持

1634
01:23:23,000 --> 01:23:25,000
其实你说到这

1635
01:23:25,000 --> 01:23:26,000
我忽然想起来

1636
01:23:26,000 --> 01:23:31,000
那个 IPsec 不也是用来保护 UDP TCB 的吗

1637
01:23:31,000 --> 01:23:33,000
为什么不能做一个

1638
01:23:33,000 --> 01:23:34,000
层次不一样

1639
01:23:34,000 --> 01:23:37,000
那个 IPsec 是在 Layer 3

1640
01:23:37,000 --> 01:23:40,000
是在第三网络 IP 层

1641
01:23:40,000 --> 01:23:43,000
但是 IPsec 本身是一个非常庞大的

1642
01:23:43,000 --> 01:23:45,000
不太可能会被支持的

1643
01:23:45,000 --> 01:23:47,000
现在包括都在讲

1644
01:23:47,000 --> 01:23:50,000
大家要用 WireGuard 取代

1645
01:23:50,000 --> 01:23:52,000
Linux 内核里面的 IPsec 实现了

1646
01:23:52,000 --> 01:23:55,000
所以不可能用这个更复杂的方式

1647
01:23:55,000 --> 01:23:57,000
就 TLS 大家已经觉得很坑爹了

1648
01:23:57,000 --> 01:23:58,000
对

1649
01:23:58,000 --> 01:24:00,000
但 TSS 是一个更高的层次

1650
01:24:00,000 --> 01:24:01,000
我就觉得如果说

1651
01:24:01,000 --> 01:24:02,000
以我理解的话

1652
01:24:02,000 --> 01:24:05,000
如果要保护一个基于 UDP 的协议

1653
01:24:05,000 --> 01:24:08,000
我为什么不在更底层的协议去保护

1654
01:24:08,000 --> 01:24:10,000
然后这样不就

1655
01:24:10,000 --> 01:24:12,000
不过这样吧

1656
01:24:12,000 --> 01:24:13,000
不过这样的话

1657
01:24:13,000 --> 01:24:15,000
好像还是没有办法避免

1658
01:24:16,000 --> 01:24:17,000
在 DNS 这方面

1659
01:24:17,000 --> 01:24:20,000
在这个层级上产生的重容攻击

1660
01:24:20,000 --> 01:24:21,000
对

1661
01:24:21,000 --> 01:24:23,000
你还是不能避免 UDP 的

1662
01:24:23,000 --> 01:24:26,000
可以的

1663
01:24:26,000 --> 01:24:27,000
但是有个问题

1664
01:24:27,000 --> 01:24:30,000
IPsec 其实是要在双方建立

1665
01:24:30,000 --> 01:24:31,000
叫做 Association

1666
01:24:31,000 --> 01:24:32,000
Secure Association SA

1667
01:24:32,000 --> 01:24:34,000
那个成本是非常高的

1668
01:24:34,000 --> 01:24:37,000
而且是要在收发双方

1669
01:24:37,000 --> 01:24:38,000
在维持状态

1670
01:24:38,000 --> 01:24:39,000
成本其实是比较

1671
01:24:39,000 --> 01:24:40,000
不比 TLS 低

1672
01:24:40,000 --> 01:24:42,000
而且是时间前更麻烦的

1673
01:24:42,000 --> 01:24:43,000
好

1674
01:24:43,000 --> 01:24:44,000
至少我们目前来看

1675
01:24:44,000 --> 01:24:45,000
都是一些应用层的解决方案

1676
01:24:45,000 --> 01:24:46,000
没有到网络层解决这个问题

1677
01:24:48,000 --> 01:24:49,000
OK

1678
01:24:49,000 --> 01:24:50,000
你有意思吗

1679
01:24:50,000 --> 01:24:51,000
明白

1680
01:24:51,000 --> 01:24:52,000
OK

1681
01:24:52,000 --> 01:24:55,000
这个就是 TLS 的一个方案

1682
01:24:55,000 --> 01:24:56,000
还有一个就是

1683
01:24:56,000 --> 01:24:58,000
之前 Google 最开始出的

1684
01:24:58,000 --> 01:24:59,000
包括 Cloudflare

1685
01:24:59,000 --> 01:25:03,000
它也支持了叫做 DNS over HTTPS

1686
01:25:03,000 --> 01:25:05,000
这个就大家可能做前段开发的朋友

1687
01:25:05,000 --> 01:25:06,000
就比较能够理解了

1688
01:25:06,000 --> 01:25:08,000
本质上你是发了一个 HTTP 请求

1689
01:25:08,000 --> 01:25:10,000
HTTP 请求给 DNS 服务器

1690
01:25:10,000 --> 01:25:11,000
然后你请求里面你加说

1691
01:25:11,000 --> 01:25:13,000
我要问这个查 QQ.com 是谁

1692
01:25:13,000 --> 01:25:15,000
然后他给我反回你一个请求

1693
01:25:15,000 --> 01:25:16,000
对吧

1694
01:25:16,000 --> 01:25:17,000
Google 那个是做得最极致的

1695
01:25:17,000 --> 01:25:19,000
它那个请求的格式是一个 Jason

1696
01:25:19,000 --> 01:25:22,000
就是你发一个请求过去

1697
01:25:22,000 --> 01:25:23,000
原用可读的

1698
01:25:23,000 --> 01:25:26,000
是一个人工可读的

1699
01:25:26,000 --> 01:25:28,000
然后你得到的一个反回结果

1700
01:25:28,000 --> 01:25:29,000
是一个 Jason 对象

1701
01:25:29,000 --> 01:25:30,000
然后 Jason 对象里面就会说

1702
01:25:30,000 --> 01:25:32,000
这个地址是多少

1703
01:25:32,000 --> 01:25:35,000
一些 DNS 附加信息

1704
01:25:35,000 --> 01:25:40,000
然后 Cloudflare 的 DNS over HTTPS

1705
01:25:40,000 --> 01:25:44,000
它还支持另外一种数据格式

1706
01:25:44,000 --> 01:25:48,000
就是原生的 UDP 的 DNS 的数据格式

1707
01:25:48,000 --> 01:25:53,000
直接放到 Post 请求的 Body 证文里面去

1708
01:25:53,000 --> 01:25:55,000
然后你得到的响应也是在证文里面

1709
01:25:55,000 --> 01:26:00,000
是 Body 是 UDP 的 DNS

1710
01:26:00,000 --> 01:26:03,000
DNS 写的数据格式的原文

1711
01:26:03,000 --> 01:26:06,000
这个就兼容性可能就已经好一点

1712
01:26:06,000 --> 01:26:08,000
不用再 Jason 转一遍

1713
01:26:08,000 --> 01:26:09,000
但它是

1714
01:26:09,000 --> 01:26:11,000
为什么 Google 会做那么多东西

1715
01:26:11,000 --> 01:26:13,000
它的逻辑其实是

1716
01:26:13,000 --> 01:26:15,000
它有别的应用场景的

1717
01:26:15,000 --> 01:26:18,000
包括腾讯其实也搞过一套类似的东西

1718
01:26:18,000 --> 01:26:20,000
它的场景是说

1719
01:26:20,000 --> 01:26:21,000
我有一个 Web 应用

1720
01:26:21,000 --> 01:26:24,000
然后我的 Web 应用我要假设

1721
01:26:24,000 --> 01:26:26,000
因为 Web 应用它不能直接发 UDP 的

1722
01:26:26,000 --> 01:26:28,000
它不能直接发 TCP 的连接

1723
01:26:28,000 --> 01:26:30,000
所以它获得了 IP 地址之后

1724
01:26:30,000 --> 01:26:32,000
它就可以直接朝 IP 地址发请求

1725
01:26:32,000 --> 01:26:36,000
对它就可以直接在 JavaScript 这个层面去请求

1726
01:26:36,000 --> 01:26:37,000
一次性知道了

1727
01:26:37,000 --> 01:26:39,000
接下来我有可能解析的

1728
01:26:39,000 --> 01:26:41,000
域名的 IT 地址

1729
01:26:41,000 --> 01:26:42,000
然后我直接用就好

1730
01:26:42,000 --> 01:26:46,000
对就是 DNS over HTTPS 有的是这个问题

1731
01:26:46,000 --> 01:26:49,000
有一些应用场景是不可以

1732
01:26:49,000 --> 01:26:53,000
不可以直接建立 UDP 或者是 TCP 连接的

1733
01:26:53,000 --> 01:26:56,000
这个时候我要去解析域名怎么办

1734
01:26:56,000 --> 01:26:59,000
包括很多所谓的移动端应用

1735
01:26:59,000 --> 01:27:03,000
像国内不是 ISP 的 DNS 污染很严重吗

1736
01:27:03,000 --> 01:27:05,000
这就会困得很多手机应用

1737
01:27:05,000 --> 01:27:07,000
它会说我用那个

1738
01:27:07,000 --> 01:27:10,000
比如腾讯他们就自己搞了一套方案

1739
01:27:10,000 --> 01:27:13,000
自己在请求他们的一个运营服务器

1740
01:27:13,000 --> 01:27:14,000
是做 HTTP 的

1741
01:27:14,000 --> 01:27:15,000
然后得到一个结果

1742
01:27:15,000 --> 01:27:17,000
它在内部去直接连接

1743
01:27:17,000 --> 01:27:20,000
不依赖运营商的 DNS 服务器

1744
01:27:20,000 --> 01:27:22,000
我还真是从来没有想过这件事情

1745
01:27:22,000 --> 01:27:24,000
你看它这样搞也可以

1746
01:27:24,000 --> 01:27:26,000
因为你在德国生存环境是比较好的

1747
01:27:26,000 --> 01:27:28,000
国内比较艰难

1748
01:27:28,000 --> 01:27:31,000
你是这个问世里面的花朵

1749
01:27:33,000 --> 01:27:35,000
所以它就虽然说看起来非常

1750
01:27:35,000 --> 01:27:37,000
就是 DNS over HTTPS 用 Jason 格式

1751
01:27:37,000 --> 01:27:39,000
非常多余和沉重的一个方案

1752
01:27:39,000 --> 01:27:41,000
但是它在某一些特点领域下

1753
01:27:41,000 --> 01:27:44,000
它是唯一的可选的方案

1754
01:27:46,000 --> 01:27:49,000
但是这个目前还没有成为一个

1755
01:27:49,000 --> 01:27:51,000
它还没有一个 RFC 号

1756
01:27:51,000 --> 01:27:53,000
它只是一个 ITF 的一个草案

1757
01:27:53,000 --> 01:27:55,000
如果不出意外的话

1758
01:27:55,000 --> 01:27:57,000
它肯定会成为的

1759
01:27:57,000 --> 01:28:00,000
因为目前至少有两个大厂都已经支持这个了

1760
01:28:00,000 --> 01:28:04,000
然后就是一个既成事实变成一个规范

1761
01:28:06,000 --> 01:28:08,000
非常不幸的是

1762
01:28:08,000 --> 01:28:11,000
好像国内的那几个

1763
01:28:11,000 --> 01:28:12,000
我想想

1764
01:28:12,000 --> 01:28:13,000
腾讯有一个这个方案

1765
01:28:13,000 --> 01:28:18,000
但不是在它的 DNSPort 的公共服务器上实现的

1766
01:28:18,000 --> 01:28:21,000
是在腾讯云的一个什么上面实现的

1767
01:28:21,000 --> 01:28:22,000
RT 好像有一个类似的

1768
01:28:22,000 --> 01:28:24,000
但是也不是在它的那个

1769
01:28:24,000 --> 01:28:27,000
.2929.29 的那个服务器上实现的

1770
01:28:27,000 --> 01:28:28,000
所以国内还用不了

1771
01:28:28,000 --> 01:28:30,000
所以其实国内也用不了

1772
01:28:31,000 --> 01:28:33,000
但是如果国内一些做应用开发的人

1773
01:28:33,000 --> 01:28:35,000
应该有用过腾讯和阿里克他那样

1774
01:28:35,000 --> 01:28:37,000
它就是自制的那个系统

1775
01:28:37,000 --> 01:28:42,000
但是就希望说这个 DNS over HTTPS 成为一个

1776
01:28:42,000 --> 01:28:47,000
ITF 的正式的一个 RFC 协议规范之后

1777
01:28:47,000 --> 01:28:49,000
大家都能转上用这个上面去

1778
01:28:49,000 --> 01:28:50,000
去避免那个问题

1779
01:28:53,000 --> 01:28:54,000
我想起来了

1780
01:28:54,000 --> 01:28:55,000
国内是那两个东西

1781
01:28:55,000 --> 01:28:57,000
阿里与腾讯都是要付费的

1782
01:28:57,000 --> 01:29:00,000
这两个东西是针对 B 端用户的一个付费服务

1783
01:29:00,000 --> 01:29:02,000
这是个目前还在请求

1784
01:29:02,000 --> 01:29:03,000
对是一个企业服务

1785
01:29:03,000 --> 01:29:05,000
不是一个公共免费的一个服务

1786
01:29:08,000 --> 01:29:11,000
其实就有这个挺坑的问题

1787
01:29:13,000 --> 01:29:14,000
刚就讲到 DNS

1788
01:29:14,000 --> 01:29:16,000
还有一些非常独特的一个特性

1789
01:29:16,000 --> 01:29:19,000
就是要谈一些网络结构上面的

1790
01:29:19,000 --> 01:29:21,000
有意思的问题了

1791
01:29:24,000 --> 01:29:25,000
你知道 CDN 是什么吗

1792
01:29:27,000 --> 01:29:28,000
Contact Deliver Network

1793
01:29:29,000 --> 01:29:32,000
它的作用是加速这个内容分发

1794
01:29:32,000 --> 01:29:33,000
它的内容分发网络

1795
01:29:33,000 --> 01:29:35,000
它的作用就是说

1796
01:29:35,000 --> 01:29:36,000
比如说我要上一个

1797
01:29:37,000 --> 01:29:38,000
我要上一个 APN

1798
01:29:39,000 --> 01:29:40,000
我们不说小放图的

1799
01:29:41,000 --> 01:29:42,000
上一个视频网站

1800
01:29:42,000 --> 01:29:43,000
其实很多公司都有在用

1801
01:29:43,000 --> 01:29:47,000
包括我之前工作的赌博网站也是要用 CDN

1802
01:29:47,000 --> 01:29:49,000
其实就是有很多东西

1803
01:29:49,000 --> 01:29:50,000
很多人都需要用到

1804
01:29:50,000 --> 01:29:51,000
然后为了避免

1805
01:29:52,000 --> 01:29:55,000
这个在国内其实是比较严重的一个事情

1806
01:29:55,000 --> 01:29:58,000
因为你看国内那些什么阿里与腾讯的服务

1807
01:29:58,000 --> 01:29:59,000
就是所谓的应用服务器

1808
01:29:59,000 --> 01:30:00,000
带筐很小

1809
01:30:00,000 --> 01:30:01,000
只有几兆的

1810
01:30:02,000 --> 01:30:03,000
你不可能通话拿来下图片

1811
01:30:03,000 --> 01:30:05,000
你下图片你整个机器就挂掉了

1812
01:30:05,000 --> 01:30:06,000
就被带筐堵死了

1813
01:30:06,000 --> 01:30:08,000
CDN 实际上是一个策略

1814
01:30:08,000 --> 01:30:10,000
就是分配资源策略

1815
01:30:10,000 --> 01:30:12,000
把静态资源和动态资源分开

1816
01:30:12,000 --> 01:30:15,000
然后静态资源你到别的地方去调用就好了

1817
01:30:15,000 --> 01:30:17,000
然后动态只有核心的这一部分

1818
01:30:17,000 --> 01:30:18,000
最重要的这部分有我的体容

1819
01:30:19,000 --> 01:30:20,000
没错没错

1820
01:30:21,000 --> 01:30:23,000
所以 CDN 解决的是那些大的

1821
01:30:23,000 --> 01:30:25,000
体系比较大的像图片视频音频

1822
01:30:25,000 --> 01:30:27,000
这种静态文件的分发对吧

1823
01:30:27,000 --> 01:30:31,000
它的逻辑就是说建很多这种小的数据中心

1824
01:30:31,000 --> 01:30:34,000
尽可能离用户的终端网络比较近

1825
01:30:34,000 --> 01:30:36,000
比如说我是电信的用户

1826
01:30:37,000 --> 01:30:40,000
我在比如说生成电信的机房附近的一个节点

1827
01:30:40,000 --> 01:30:42,000
搞一个服务器

1828
01:30:42,000 --> 01:30:44,000
那深圳的电信用户访问的时候

1829
01:30:44,000 --> 01:30:45,000
就可以直接从这里找

1830
01:30:45,000 --> 01:30:47,000
他不用去到北京或者是美国对吧

1831
01:30:49,000 --> 01:30:50,000
就这 CDN 要干的事情

1832
01:30:51,000 --> 01:30:53,000
但 CDN 它怎么能够实现

1833
01:30:53,000 --> 01:30:57,000
把深圳电信的用户导到那个服务中心

1834
01:30:57,000 --> 01:31:01,000
同时把北京联通的动物导到北京联通附近的地方

1835
01:31:01,000 --> 01:31:02,000
同时把美国

1836
01:31:02,000 --> 01:31:07,000
比如说 Varizon 的一个用户导到美国 Varizon 附近的一个地方

1837
01:31:07,000 --> 01:31:08,000
就是 DNS

1838
01:31:08,000 --> 01:31:11,000
看了就是 DNS 这么一个多解析的一个方案

1839
01:31:11,000 --> 01:31:15,000
就是同一个比如说请求 CDN.QQ.com 这个域名

1840
01:31:15,000 --> 01:31:18,000
深圳用户得到的 IP 和北京用户得到的 IP

1841
01:31:18,000 --> 01:31:19,000
和美国用户得到的 IP

1842
01:31:19,000 --> 01:31:20,000
它是不一样的

1843
01:31:20,000 --> 01:31:22,000
就各自得到对应自己的

1844
01:31:23,000 --> 01:31:26,000
靠近自己的数据中心的 IP 地址

1845
01:31:27,000 --> 01:31:28,000
对吧

1846
01:31:28,000 --> 01:31:31,000
我发现 Rail 老师还是非常善于启发式教学

1847
01:31:31,000 --> 01:31:32,000
寻寻善用

1848
01:31:34,000 --> 01:31:35,000
应该一开课讲课了是不是

1849
01:31:39,000 --> 01:31:42,000
就是他有一个基本假设

1850
01:31:42,000 --> 01:31:47,000
就是说用户请求 DNS 的 DNS 服务器

1851
01:31:47,000 --> 01:31:49,000
和用户自己终端的那个

1852
01:31:49,000 --> 01:31:52,000
是应该在同一个或者是相对比较近的网络里面的

1853
01:31:53,000 --> 01:31:55,000
这样的话 DNS 请求的那个

1854
01:31:55,000 --> 01:31:58,000
因为其实 CDN 说到 DNS 请求是来自于 DNS 服务器

1855
01:31:58,000 --> 01:32:00,000
就是来自 1.1.1 的

1856
01:32:00,000 --> 01:32:04,000
而不是来自于我的自己的上的电信的一个网

1857
01:32:04,000 --> 01:32:05,000
对吧

1858
01:32:05,000 --> 01:32:06,000
对

1859
01:32:06,000 --> 01:32:09,000
所以这个假设在过去是成立的

1860
01:32:09,000 --> 01:32:12,000
因为大家都用 ISP 提供的这个 IP 地址

1861
01:32:13,000 --> 01:32:15,000
但是如果大家都用这个 1.1.1

1862
01:32:15,000 --> 01:32:17,000
或者大家都用这个 144

1863
01:32:17,000 --> 01:32:19,000
国内 14 或者是什么程迅 DNS

1864
01:32:19,000 --> 01:32:20,000
阿里 DNS

1865
01:32:20,000 --> 01:32:21,000
这个假设不就不成立了吗

1866
01:32:21,000 --> 01:32:22,000
是

1867
01:32:22,000 --> 01:32:23,000
对

1868
01:32:23,000 --> 01:32:25,000
所以就有一个扩展的机制

1869
01:32:25,000 --> 01:32:26,000
就是在

1870
01:32:26,000 --> 01:32:28,000
不是我是 1.1.1

1871
01:32:29,000 --> 01:32:30,000
不是

1872
01:32:30,000 --> 01:32:31,000
我是 8.8.8

1873
01:32:31,000 --> 01:32:32,000
Google 那个对吧

1874
01:32:32,000 --> 01:32:33,000
好

1875
01:32:33,000 --> 01:32:36,000
就是它在向别人请

1876
01:32:36,000 --> 01:32:40,000
像 CDN 那个边请求这个这个 UDP

1877
01:32:40,000 --> 01:32:41,000
发送 UDP 请求的时候

1878
01:32:41,000 --> 01:32:44,000
它会在 UDP 请求里面包含一个来自于

1879
01:32:45,000 --> 01:32:46,000
你的就是

1880
01:32:46,000 --> 01:32:51,000
比如说吴涛你请求 8.8.8 去问 CDN.co.com 的 IP 是什么时候

1881
01:32:52,000 --> 01:32:54,000
就是 8.8.8 向 co.com

1882
01:32:55,000 --> 01:32:58,000
的那个域名服务器发送这个请求的时候

1883
01:32:58,000 --> 01:33:00,000
它会包含你的那个 IP 网段

1884
01:33:00,000 --> 01:33:01,000
对

1885
01:33:01,000 --> 01:33:02,000
这样的话

1886
01:33:02,000 --> 01:33:06,000
就是 CDN 就 QQ 那边的讯评服务器

1887
01:33:06,000 --> 01:33:07,000
就可以得到从

1888
01:33:08,000 --> 01:33:10,000
得到这个从 8.8.8 来的请求的时候

1889
01:33:10,000 --> 01:33:11,000
它会知道这个请求是为

1890
01:33:11,000 --> 01:33:15,000
吴涛比如说是 4.5.6.7 的这个网段

1891
01:33:16,000 --> 01:33:17,000
待发的对

1892
01:33:17,000 --> 01:33:18,000
对吧

1893
01:33:18,000 --> 01:33:19,000
所以它会

1894
01:33:19,000 --> 01:33:24,000
它会反回一个结果是更加靠近 4.6.7 的对

1895
01:33:24,000 --> 01:33:26,000
然后然后我去请求它会反回

1896
01:33:26,000 --> 01:33:27,000
又更加靠近靠近我的

1897
01:33:27,000 --> 01:33:30,000
这个这个特性叫做 ECS

1898
01:33:30,000 --> 01:33:33,000
叫做 EDNS 0 Client Subnet

1899
01:33:33,000 --> 01:33:36,000
就是客户端子网的这么一个扩展

1900
01:33:36,000 --> 01:33:38,000
这是好像 119

1901
01:33:38,000 --> 01:33:39,000
10 出警一样

1902
01:33:39,000 --> 01:33:41,000
找一个离你近的警察派给你

1903
01:33:42,000 --> 01:33:44,000
对对对就是划分

1904
01:33:44,000 --> 01:33:45,000
就像是火警一样

1905
01:33:45,000 --> 01:33:48,000
找一个离你比较近的那个片区的这个火警

1906
01:33:48,000 --> 01:33:51,000
或者是 10 的警察来来救你是一样的

1907
01:33:51,000 --> 01:33:54,000
虽然你都打的是 10 或 129 这个号码

1908
01:33:54,000 --> 01:33:56,000
它会有一个这个分派的一个过程

1909
01:33:56,000 --> 01:33:58,000
但是就这个东西

1910
01:33:58,000 --> 01:34:00,000
这个东西其实是有一个潜在问题的

1911
01:34:00,000 --> 01:34:02,000
什么就是它虽然提高了这个数据

1912
01:34:02,000 --> 01:34:06,000
它暴露了你的那个物理的这个客户来卷

1913
01:34:06,000 --> 01:34:07,000
就是你暴露了你的子网

1914
01:34:07,000 --> 01:34:10,000
就算比如说 8.8.8 它不会暴露你直接的 IP

1915
01:34:10,000 --> 01:34:14,000
它会帮你那个到 24 的那个 Bit 的一个网段对吧

1916
01:34:14,000 --> 01:34:16,000
网段适合物理相关的吧

1917
01:34:16,000 --> 01:34:20,000
所以实际上网段的话在中国大致可以划到中国

1918
01:34:20,000 --> 01:34:24,000
某一个城市的一个区域级的这个这个这个精细度吧

1919
01:34:24,000 --> 01:34:26,000
对就是 CDN 是够了

1920
01:34:26,000 --> 01:34:29,000
但是看你要不要考虑说你要不要暴露这个信息

1921
01:34:29,000 --> 01:34:33,000
所以刚才我说那个 1.1.1 不太恰当这个例子

1922
01:34:33,000 --> 01:34:35,000
是因为 1.1.1 它为了保护这个用户的这个隐私

1923
01:34:35,000 --> 01:34:37,000
它是不支持这个扩展的

1924
01:34:39,000 --> 01:34:44,000
所以就有一个后果就是有可能你用 1.1.1 得到的

1925
01:34:44,000 --> 01:34:46,000
CDN 解析的结果不是最优的

1926
01:34:46,000 --> 01:34:47,000
对

1927
01:34:47,000 --> 01:34:49,000
所以 Clarifle 怎么解决这个问题呢

1928
01:34:49,000 --> 01:34:50,000
他说哈哈这个问题很简单

1929
01:34:50,000 --> 01:34:53,000
我只要铺了足够多的节点就可以解决这个问题了

1930
01:34:53,000 --> 01:35:02,000
我只要保证我只要保证我有足够多节点能够 cover 到世界上主要的这些网段不就完了吗

1931
01:35:02,000 --> 01:35:03,000
这是好像暴力啊

1932
01:35:03,000 --> 01:35:05,000
如果暴力不能解决问题是你用的不够

1933
01:35:05,000 --> 01:35:08,000
非常暴力的对不对

1934
01:35:08,000 --> 01:35:09,000
对

1935
01:35:09,000 --> 01:35:15,000
所以这个事情我觉得但是就是这件事情 Clarifle 是有底气去说他去干的

1936
01:35:15,000 --> 01:35:19,000
因为他现在据称他是全球最大的这个私有网络这个网

1937
01:35:19,000 --> 01:35:21,000
就私有网的节点

1938
01:35:21,000 --> 01:35:27,000
他就是他现在在狂扑他比如今天我看他在光加加拿大都开了 5 个节点

1939
01:35:27,000 --> 01:35:31,000
就覆盖加拿大几个主要大核心城市群

1940
01:35:31,000 --> 01:35:32,000
就这样就 cover 完了

1941
01:35:32,000 --> 01:35:36,000
加拿大这么一个小国都有 5 个节点恐怖吧对吧

1942
01:35:36,000 --> 01:35:38,000
就非常的惊人

1943
01:35:38,000 --> 01:35:41,000
他全球有 200 多他今天好像扩展到 400 多了

1944
01:35:41,000 --> 01:35:42,000
OK

1945
01:35:42,000 --> 01:35:45,000
就就就就就就就就就这个方法来解决这个问题

1946
01:35:45,000 --> 01:35:47,000
全国主要全球主要城市有 400 个

1947
01:35:47,000 --> 01:35:49,000
城市应该有但是他是按取诺来吗

1948
01:35:49,000 --> 01:35:52,000
他不是说比如珠三角他不会每个城市都不过他会全球

1949
01:35:52,000 --> 01:35:54,000
我想到一个问题就是全球所有这些

1950
01:35:54,000 --> 01:35:59,000
或者说你我知名你我都能列叫上名字来的全球知名的城市

1951
01:35:59,000 --> 01:36:02,000
或者或者应该不超过 200 吧

1952
01:36:02,000 --> 01:36:04,000
应该不超过 200 个我觉得

1953
01:36:04,000 --> 01:36:06,000
OK

1954
01:36:06,000 --> 01:36:08,000
喝口水

1955
01:36:08,000 --> 01:36:13,000
就这个是 DNS 的一些很粗略的我们过了一下这个原理啊

1956
01:36:13,000 --> 01:36:15,000
就现在我要

1957
01:36:15,000 --> 01:36:17,000
聊一些比较好玩就是我们日常用的东西

1958
01:36:17,000 --> 01:36:20,000
就是我想问一下吴涛你现在家里现在网络结构是怎么样子

1959
01:36:20,000 --> 01:36:22,000
什么叫网络结构

1960
01:36:22,000 --> 01:36:25,000
就是你自己家里的这个网络的 TOP 结构是怎么样

1961
01:36:25,000 --> 01:36:27,000
就一个路由器一堆

1962
01:36:27,000 --> 01:36:29,000
就很简单的一个一个

1963
01:36:29,000 --> 01:36:32,000
新型网络一个路由器

1964
01:36:32,000 --> 01:36:35,000
就是你的那个路由器是自己买的还是运行提供给你的

1965
01:36:35,000 --> 01:36:37,000
就是然后你的路由器是拨号上网对吧

1966
01:36:37,000 --> 01:36:40,000
对路由器连到这个 modem 上面然后

1967
01:36:40,000 --> 01:36:44,000
然后他他这个路由器是自己买的

1968
01:36:44,000 --> 01:36:49,000
然后他就是路由器是你的这个也是你的 DNS 服务器

1969
01:36:49,000 --> 01:36:51,000
是这样的

1970
01:36:51,000 --> 01:36:53,000
比如你这是 192.168.1.1 对吧

1971
01:36:53,000 --> 01:36:54,000
通常通常是这个嘛

1972
01:36:54,000 --> 01:36:56,000
然后他会开一个 53 的端口

1973
01:36:56,000 --> 01:36:58,000
来来来做这个事情

1974
01:36:58,000 --> 01:37:00,000
对

1975
01:37:00,000 --> 01:37:02,000
就在这个

1976
01:37:02,000 --> 01:37:05,000
因为你在国外没有没有这个需求嘛

1977
01:37:05,000 --> 01:37:09,000
在中国其实是你要考虑一些这个 DNS 污染的问题

1978
01:37:09,000 --> 01:37:12,000
比如说你在中国的国内的你你发一个

1979
01:37:12,000 --> 01:37:16,000
你你发到运营商的那个那个叫什么 DNS 请求

1980
01:37:16,000 --> 01:37:19,000
你去请求推特点抗你得到结果一定是被污染的

1981
01:37:19,000 --> 01:37:21,000
对吧

1982
01:37:21,000 --> 01:37:23,000
推特在中国不是被封了吗

1983
01:37:23,000 --> 01:37:24,000
对啊

1984
01:37:24,000 --> 01:37:27,000
所以就是他被封是通过很多这种技术措施来实现的嘛

1985
01:37:27,000 --> 01:37:29,000
我意思是不会得到任何的

1986
01:37:29,000 --> 01:37:30,000
难道不是这样的

1987
01:37:30,000 --> 01:37:33,000
会你会得到一个假的你会得到一个假的

1988
01:37:33,000 --> 01:37:36,000
不是不是假的就是你会得到一个

1989
01:37:36,000 --> 01:37:39,000
国外的某一个某一个随机的一个 IP 地址

1990
01:37:39,000 --> 01:37:42,000
我真的吗

1991
01:37:42,000 --> 01:37:48,000
是这样的我以为是就是就直接没有没有不会反悔任何结果

1992
01:37:48,000 --> 01:37:50,000
会会会会反悔结果

1993
01:37:50,000 --> 01:37:51,000
好吧

1994
01:37:51,000 --> 01:37:53,000
但会反悔一个假的结果

1995
01:37:53,000 --> 01:37:55,000
但我不知道这个用意何在啊

1996
01:37:55,000 --> 01:37:56,000
只能去猜

1997
01:37:56,000 --> 01:38:01,000
为什么我印象里面就是虽然我从我自从就是强足够强大之后

1998
01:38:01,000 --> 01:38:04,000
我就再也没有在国内试图这样做过了

1999
01:38:04,000 --> 01:38:05,000
但我不知道

2000
01:38:05,000 --> 01:38:08,000
或者说我的印象里面在最早期就你输入一个

2001
01:38:08,000 --> 01:38:13,000
比如说推特他就不会反悔就是直接很简单的

2002
01:38:13,000 --> 01:38:15,000
就是直接直接就是拒绝嘛对吧

2003
01:38:15,000 --> 01:38:20,000
但我猜想是这样就是他需要去监控一下谁在解析这个东西

2004
01:38:20,000 --> 01:38:23,000
可是他要监控谁在解析东西

2005
01:38:23,000 --> 01:38:26,000
他不需要不就是不一定要反悔一个结果

2006
01:38:26,000 --> 01:38:27,000
就反悔一个乱序结果

2007
01:38:27,000 --> 01:38:29,000
你就是直接做不掉也可以

2008
01:38:29,000 --> 01:38:32,000
好问题

2009
01:38:32,000 --> 01:38:34,000
我也不知道为什么他要反悔一个假的结果

2010
01:38:34,000 --> 01:38:36,000
反正就是这个是一个事实

2011
01:38:36,000 --> 01:38:41,000
好吧这对于我来说是全新的我以前从来都不认识到这一点

2012
01:38:41,000 --> 01:38:42,000
对

2013
01:38:42,000 --> 01:38:48,000
所以就是在某些情况下你假设你需要得到一个正确的解析结果的时候

2014
01:38:48,000 --> 01:38:50,000
你需要做一些特殊的处理你就要分别对吧

2015
01:38:50,000 --> 01:38:53,000
就某一些域名你要去查询国外的嘛

2016
01:38:53,000 --> 01:38:58,000
你要查询国外的比如说 1.1.1 这个服务器

2017
01:38:58,000 --> 01:39:00,000
然后你才得到一个正确的一个结果

2018
01:39:00,000 --> 01:39:05,000
但是至于说你怎么能够访问到一点一点一点

2019
01:39:05,000 --> 01:39:07,000
那就是你要去想的问题了

2020
01:39:07,000 --> 01:39:09,000
此处不可描述

2021
01:39:15,000 --> 01:39:18,000
所以你其实在自己家里为了实现这个目的

2022
01:39:18,000 --> 01:39:21,000
家里要自己架一些服务器

2023
01:39:21,000 --> 01:39:24,000
架一些 DNS 客户端

2024
01:39:24,000 --> 01:39:26,000
实际上是 DNSK 纸

2025
01:39:26,000 --> 01:39:27,000
对

2026
01:39:27,000 --> 01:39:28,000
对对对

2027
01:39:28,000 --> 01:39:30,000
所以其实你包括你现在录制器里面

2028
01:39:30,000 --> 01:39:35,000
最常用的是一个叫做 DNS Mask 的一个 DNS 客户端

2029
01:39:35,000 --> 01:39:41,000
它同时也提供你的这个 DHCP 的这个就是内网域名的分发和管理这么一个功能

2030
01:39:44,000 --> 01:39:48,000
但是 DNS Mask 其实不支持 TLS 也不支持 HTPS

2031
01:39:48,000 --> 01:39:49,000
那怎么办

2032
01:39:49,000 --> 01:39:50,000
就是请求的

2033
01:39:50,000 --> 01:39:55,000
你是在上面再加一个代理或者是一个中介让他去转换一下

2034
01:39:55,000 --> 01:40:01,000
就是 DNS Mask 它只支持传统的 UDP 和 TCP 协议的 DNS 请求

2035
01:40:01,000 --> 01:40:02,000
OK

2036
01:40:02,000 --> 01:40:05,000
然后如果你要用它 TLS 的话你自己再加一层

2037
01:40:05,000 --> 01:40:08,000
最笨的方法就是用那个叫什么

2038
01:40:08,000 --> 01:40:10,000
SOCAT 那个工具

2039
01:40:10,000 --> 01:40:12,000
两头建一下

2040
01:40:12,000 --> 01:40:14,000
中间用 TLS 转一下

2041
01:40:14,000 --> 01:40:15,000
实在是

2042
01:40:15,000 --> 01:40:17,000
然后 HTPS 就没办法了

2043
01:40:17,000 --> 01:40:21,000
你得找一个网上的这个叫什么

2044
01:40:21,000 --> 01:40:24,000
网上的这个现成的一个客户

2045
01:40:24,000 --> 01:40:26,000
DNS HTP 客户端

2046
01:40:26,000 --> 01:40:28,000
或者是你自己写一个也很简单

2047
01:40:28,000 --> 01:40:31,000
就是等于是把 DNS UDP 请求拿到解析一下

2048
01:40:31,000 --> 01:40:33,000
换成 HTDP 请求发出去

2049
01:40:33,000 --> 01:40:35,000
得到一个节省结果或是 UDP 的结果

2050
01:40:35,000 --> 01:40:36,000
它再发回来

2051
01:40:36,000 --> 01:40:37,000
对

2052
01:40:37,000 --> 01:40:39,000
我最近就在玩这个东西

2053
01:40:39,000 --> 01:40:41,000
所以才有这期节目

2054
01:40:41,000 --> 01:40:43,000
原来你又在闭门造车

2055
01:40:43,000 --> 01:40:44,000
开门造车

2056
01:40:44,000 --> 01:40:47,000
就是为了保持技术的敏感性

2057
01:40:47,000 --> 01:40:48,000
OK

2058
01:40:48,000 --> 01:40:51,000
一个风险投资人不辞辛苦闭门造车

2059
01:40:51,000 --> 01:40:53,000
就是为了保持技术敏感性

2060
01:40:53,000 --> 01:40:54,000
太不容易了

2061
01:40:54,000 --> 01:40:56,000
多么的敬业

2062
01:40:56,000 --> 01:40:58,000
刚说错了

2063
01:40:58,000 --> 01:41:01,000
那个 119.29.29 这个是腾讯的 DNS POD

2064
01:41:01,000 --> 01:41:04,000
阿里 DNS 223.5.5.5

2065
01:41:04,000 --> 01:41:05,000
35 盘

2066
01:41:05,000 --> 01:41:07,000
所以你现在进展到哪一步

2067
01:41:07,000 --> 01:41:08,000
我写完了

2068
01:41:08,000 --> 01:41:09,000
已经写完了

2069
01:41:09,000 --> 01:41:10,000
对

2070
01:41:10,000 --> 01:41:15,000
自己写了一个带这种分网段查询

2071
01:41:15,000 --> 01:41:19,000
然后在双向过滤的这么一个 DNS 的解析器

2072
01:41:19,000 --> 01:41:21,000
就是 STOPS RESOLVER

2073
01:41:21,000 --> 01:41:23,000
其实刚才没有展开讲

2074
01:41:23,000 --> 01:41:25,000
包括什么什么叫 STOPS RESOLVER

2075
01:41:25,000 --> 01:41:27,000
什么叫 RECURSIVE RESOLVER

2076
01:41:27,000 --> 01:41:29,000
什么叫 ITUATIVE RESOLVER

2077
01:41:29,000 --> 01:41:30,000
太多了

2078
01:41:30,000 --> 01:41:31,000
所以有很多技术细节

2079
01:41:31,000 --> 01:41:34,000
通通略过

2080
01:41:34,000 --> 01:41:35,000
你有开源吗

2081
01:41:35,000 --> 01:41:38,000
你有放在 GitHub 上面吗

2082
01:41:38,000 --> 01:41:39,000
还没放

2083
01:41:39,000 --> 01:41:41,000
还有一些西斯莫解的问题

2084
01:41:41,000 --> 01:41:43,000
还在等一些东西

2085
01:41:43,000 --> 01:41:44,000
还不着急

2086
01:41:44,000 --> 01:41:45,000
OK

2087
01:41:45,000 --> 01:41:46,000
好

2088
01:41:46,000 --> 01:41:47,000
之后会放上去的

2089
01:41:47,000 --> 01:41:48,000
大家可以去玩一下

2090
01:41:48,000 --> 01:41:49,000
其实非常简单

2091
01:41:49,000 --> 01:41:50,000
没多少

2092
01:41:50,000 --> 01:41:51,000
好像有 200 行代码就写完了

2093
01:41:51,000 --> 01:41:53,000
主要是我觉得最大的问题就是

2094
01:41:53,000 --> 01:41:54,000
你首先要明白这个东西

2095
01:41:54,000 --> 01:41:56,000
这个工具试图解决问题是什么

2096
01:41:56,000 --> 01:41:57,000
然后

2097
01:41:57,000 --> 01:41:58,000
对

2098
01:41:58,000 --> 01:42:00,000
因为如果你不明白整个体系结构

2099
01:42:00,000 --> 01:42:03,000
你是没有办法去 formulate

2100
01:42:03,000 --> 01:42:04,000
构成这个问题

2101
01:42:04,000 --> 01:42:05,000
你构不成这个问题

2102
01:42:05,000 --> 01:42:07,000
你没办法提供解决思路

2103
01:42:07,000 --> 01:42:08,000
今天讲这很多就是解决

2104
01:42:08,000 --> 01:42:10,000
到底存在什么样的问题

2105
01:42:10,000 --> 01:42:11,000
对

2106
01:42:11,000 --> 01:42:12,000
这个角度出发

2107
01:42:12,000 --> 01:42:13,000
很有意思

2108
01:42:14,000 --> 01:42:17,000
有一个小花絮可以讲一下

2109
01:42:17,000 --> 01:42:18,000
你知道为什么

2110
01:42:18,000 --> 01:42:21,000
APNIC 不把 1.1.1 这个地址

2111
01:42:21,000 --> 01:42:22,000
这个网段之前放出去吗

2112
01:42:22,000 --> 01:42:24,000
这个非常好记的一个网段

2113
01:42:24,000 --> 01:42:25,000
对

2114
01:42:25,000 --> 01:42:26,000
为什么呢

2115
01:42:27,000 --> 01:42:28,000
它是一个公共

2116
01:42:28,000 --> 01:42:30,000
你也要扯到另外一个问题

2117
01:42:30,000 --> 01:42:32,000
就是 IPv 4

2118
01:42:32,000 --> 01:42:36,000
就是传统的 IP 地址池

2119
01:42:36,000 --> 01:42:38,000
它是有一个叫做网段的概念的

2120
01:42:39,000 --> 01:42:40,000
说到 IPv 4

2121
01:42:40,000 --> 01:42:41,000
我想到一个梗

2122
01:42:41,000 --> 01:42:42,000
就是有很多

2123
01:42:42,000 --> 01:42:44,000
在计算机发展历史上

2124
01:42:44,000 --> 01:42:45,000
有很多东西是

2125
01:42:45,000 --> 01:42:47,000
一开始出来的时候

2126
01:42:47,000 --> 01:42:48,000
人们会说这样够了

2127
01:42:48,000 --> 01:42:49,000
比如说

2128
01:42:49,000 --> 01:42:50,000
虽然不是 Bill Gates 说的

2129
01:42:50,000 --> 01:42:52,000
什么 640 K 内存永远是够的

2130
01:42:53,000 --> 01:42:54,000
然后

2131
01:42:54,000 --> 01:42:56,000
32 个 bit 是够了

2132
01:42:56,000 --> 01:42:58,000
可能是唯一一个

2133
01:42:58,000 --> 01:43:01,000
一直在说这个不够了

2134
01:43:01,000 --> 01:43:04,000
但是实际上一直到今天都一直足够的这样一个资源

2135
01:43:04,000 --> 01:43:05,000
这还是很有意思的

2136
01:43:06,000 --> 01:43:08,000
其实真的不够了

2137
01:43:08,000 --> 01:43:11,000
就是它耗尽的或说是这样的

2138
01:43:11,000 --> 01:43:13,000
它就好像石油一样

2139
01:43:13,000 --> 01:43:15,000
70 年代就说石油不够了

2140
01:43:15,000 --> 01:43:16,000
到现在还是

2141
01:43:16,000 --> 01:43:17,000
永远是挖不完的

2142
01:43:17,000 --> 01:43:19,000
就是宁愿不会挖到最后一滴石油

2143
01:43:19,000 --> 01:43:21,000
对 IPv 4

2144
01:43:21,000 --> 01:43:22,000
也有点类似

2145
01:43:22,000 --> 01:43:25,000
说 IPv 4 不够的呼声其实很早就有了

2146
01:43:25,000 --> 01:43:27,000
但是后来人们一直在想办法

2147
01:43:27,000 --> 01:43:29,000
就像 Friking 一样去

2148
01:43:29,000 --> 01:43:32,000
榨干 IPv 4 的最后一滴价值

2149
01:43:33,000 --> 01:43:35,000
对

2150
01:43:35,000 --> 01:43:36,000
OK 回到这个

2151
01:43:36,000 --> 01:43:38,000
它为什么没有分发呢问题上

2152
01:43:39,000 --> 01:43:43,000
IPv 4 其实有几个网站是不能

2153
01:43:43,000 --> 01:43:44,000
就是说私有的

2154
01:43:44,000 --> 01:43:46,000
比如说我们知道的 10 点

2155
01:43:46,000 --> 01:43:50,000
10 点几开头的都是内网

2156
01:43:50,000 --> 01:43:52,000
不可供网路由的

2157
01:43:52,000 --> 01:43:54,000
还有比如说刚才讲的 192.168

2158
01:43:54,000 --> 01:43:56,000
然后后面这个点

2159
01:43:56,000 --> 01:43:57,000
都是所谓的这个

2160
01:43:57,000 --> 01:43:59,000
对 C 的网络

2161
01:43:59,000 --> 01:44:02,000
但是 1.1.1 所在的网

2162
01:44:02,000 --> 01:44:05,000
它是一个公开可以路由的一个网段

2163
01:44:05,000 --> 01:44:07,000
但是为什么一直没有被分出去呢

2164
01:44:09,000 --> 01:44:10,000
为什么

2165
01:44:10,000 --> 01:44:12,000
就是因为这个地址太好记了

2166
01:44:12,000 --> 01:44:16,000
所以很多路由器设置的时候

2167
01:44:16,000 --> 01:44:18,000
或者说他会把这个东西

2168
01:44:18,000 --> 01:44:20,000
他设置为

2169
01:44:20,000 --> 01:44:21,000
或者网关

2170
01:44:21,000 --> 01:44:22,000
他会把它设置为自己的地址

2171
01:44:22,000 --> 01:44:24,000
或者是一个测试用的

2172
01:44:24,000 --> 01:44:25,000
或者配置用的地址

2173
01:44:25,000 --> 01:44:27,000
导致这个地址在很多地方

2174
01:44:27,000 --> 01:44:28,000
是不可以被路由的

2175
01:44:28,000 --> 01:44:31,000
好像你去网上搜 1.1.1.1

2176
01:44:31,000 --> 01:44:32,000
你会发现很多

2177
01:44:32,000 --> 01:44:34,000
什么 Stack Overflow 之类的

2178
01:44:34,000 --> 01:44:35,000
就是很古老的问题

2179
01:44:35,000 --> 01:44:37,000
说这个王子老是干嘛的

2180
01:44:37,000 --> 01:44:40,000
网上的很多这个所谓例子

2181
01:44:40,000 --> 01:44:42,000
配置的这个教程里面

2182
01:44:42,000 --> 01:44:44,000
都会把这个地址当成一个假地址来用

2183
01:44:44,000 --> 01:44:46,000
但其实它是一个真正的可以用的地址

2184
01:44:46,000 --> 01:44:48,000
它只不过没有备用而已

2185
01:44:48,000 --> 01:44:49,000
它就是没有备用

2186
01:44:49,000 --> 01:44:51,000
所以就是因为这个既成事实导致

2187
01:44:51,000 --> 01:44:54,000
这个网站如果一旦被分配出去

2188
01:44:54,000 --> 01:44:56,000
被分配的那个人会发现

2189
01:44:56,000 --> 01:44:57,000
他这个网站其实是

2190
01:44:57,000 --> 01:44:59,000
很多地方是不可访问的

2191
01:44:59,000 --> 01:45:00,000
那你就不能把它分出去

2192
01:45:00,000 --> 01:45:01,000
就没有用嘛对不对

2193
01:45:01,000 --> 01:45:02,000
所以这次为什么

2194
01:45:02,000 --> 01:45:04,000
APNIC 和 Cloudflare 做这个实验

2195
01:45:04,000 --> 01:45:06,000
他们就是想通过 DNS

2196
01:45:06,000 --> 01:45:10,000
非常常用的高频的这么一个服务来看

2197
01:45:10,000 --> 01:45:13,000
到底哪些地方不能访问

2198
01:45:13,000 --> 01:45:16,000
1.1.1 这个网站的地址

2199
01:45:16,000 --> 01:45:20,000
然后倒逼那些错误配置的路由器

2200
01:45:20,000 --> 01:45:23,000
这个管理员去把它赶过来

2201
01:45:23,000 --> 01:45:26,000
这真是一个宏大的构想

2202
01:45:27,000 --> 01:45:30,000
所以就是一个研究的主要目的

2203
01:45:31,000 --> 01:45:34,000
所以其实为什么我挺支持这件事情

2204
01:45:34,000 --> 01:45:36,000
就是因为我确实我发现

2205
01:45:36,000 --> 01:45:38,000
比如说我在深圳联通

2206
01:45:38,000 --> 01:45:41,000
你如果你去 Trace Route 一点一点一点的话

2207
01:45:41,000 --> 01:45:44,000
就是在第三条还是第四条的时候就会断掉

2208
01:45:44,000 --> 01:45:46,000
就是在中间某一个路由器

2209
01:45:46,000 --> 01:45:49,000
把它当成一个内网地址给绿掉了

2210
01:45:50,000 --> 01:45:51,000
傻逼吧

2211
01:45:51,000 --> 01:45:55,000
太无言以对

2212
01:45:56,000 --> 01:45:58,000
或者说从他们的角度来看

2213
01:45:58,000 --> 01:46:01,000
这样也是或者说在这个 DNS 出现之前也是正常的

2214
01:46:01,000 --> 01:46:03,000
因为这没有任何意义

2215
01:46:04,000 --> 01:46:10,000
对其实这个就是我在 Hacker News 上面有一个评论

2216
01:46:10,000 --> 01:46:11,000
就讲这件事情的

2217
01:46:11,000 --> 01:46:16,000
就是其实是留了三段地址专门用来做这个就是 demo

2218
01:46:16,000 --> 01:46:20,000
就是文档就是说明或者演示用的三段地址

2219
01:46:21,000 --> 01:46:23,000
就是本来比如说我们写一点一点一点

2220
01:46:23,000 --> 01:46:27,000
文章里面说明里面其实应该用那三段地址的某一个网址来做实验

2221
01:46:27,000 --> 01:46:28,000
就不会出现这个问题了

2222
01:46:30,000 --> 01:46:33,000
但是那三段地址没有任何人记的是多少

2223
01:46:35,000 --> 01:46:38,000
所以一判当然是一点一点一点一个更好记

2224
01:46:38,000 --> 01:46:41,000
刚刚我们举例的时候为了不好说也是说一点一点一点

2225
01:46:41,000 --> 01:46:43,000
或者是一点二点三点四这种假的地址

2226
01:46:44,000 --> 01:46:47,000
但其实也是一个公网可以路由的地址

2227
01:46:47,000 --> 01:46:49,000
包括 5.6.7.8 也是

2228
01:46:49,000 --> 01:46:50,000
对吧

2229
01:46:50,000 --> 01:46:53,000
所以其实这件事情应该是在互联网上一开始就做的

2230
01:46:53,000 --> 01:46:54,000
就是先把这个

2231
01:46:54,000 --> 01:46:57,000
所以就是最开始的那个决定就是这个其实是一个问题

2232
01:46:57,000 --> 01:47:01,000
就是我们在做很多设计的时候没有考虑这个人的因素

2233
01:47:01,000 --> 01:47:03,000
对没有考虑到人的愚蠢性

2234
01:47:03,000 --> 01:47:04,000
很懒惰

2235
01:47:04,000 --> 01:47:06,000
就是懒惰对懒惰

2236
01:47:06,000 --> 01:47:11,000
大家都想我写个文章我还可以查哪三段那个 IPP 的地址

2237
01:47:11,000 --> 01:47:13,000
是用于这个演示用不可公网路由

2238
01:47:13,000 --> 01:47:14,000
但是用起来是安全的对吧

2239
01:47:14,000 --> 01:47:15,000
没有啊

2240
01:47:15,000 --> 01:47:17,000
不会有人干这件事情吗

2241
01:47:17,000 --> 01:47:19,000
你肯定就是自己去查一遍

2242
01:47:19,000 --> 01:47:21,000
就自己想一个一点二点三点四一看就是假的对不对

2243
01:47:21,000 --> 01:47:22,000
对

2244
01:47:22,000 --> 01:47:25,000
就好像我在那个评论里说了吗

2245
01:47:25,000 --> 01:47:29,000
就好像比如说你要现在不是很多地方要将你填这个填表

2246
01:47:29,000 --> 01:47:31,000
让你说你这个手机号码是多少

2247
01:47:31,000 --> 01:47:32,000
对吧

2248
01:47:32,000 --> 01:47:34,000
很多人不是不想写自己这种手机号码

2249
01:47:34,000 --> 01:47:36,000
那写个什么 12345678 呗

2250
01:47:36,000 --> 01:47:37,000
对我每次都这么干

2251
01:47:37,000 --> 01:47:43,000
对你一看到 12345678 这个手机号码和电话号码

2252
01:47:43,000 --> 01:47:44,000
本来就是假的对吧

2253
01:47:44,000 --> 01:47:45,000
他是假的对吧

2254
01:47:45,000 --> 01:47:46,000
但其实他可能是真的呀

2255
01:47:46,000 --> 01:47:47,000
对

2256
01:47:47,000 --> 01:47:48,000
对吧

2257
01:47:50,000 --> 01:47:54,000
让我想到就是什么网站上面会有什么命名规则

2258
01:47:54,000 --> 01:47:57,000
什么名和姓不能一样之类的

2259
01:47:57,000 --> 01:47:58,000
感觉好像你是个假的

2260
01:47:58,000 --> 01:48:00,000
有些中国人就是这样的好吗

2261
01:48:00,000 --> 01:48:01,000
名和姓是一模一样的

2262
01:48:02,000 --> 01:48:03,000
再举个例子

2263
01:48:03,000 --> 01:48:05,000
就像你说之前中国是电信

2264
01:48:05,000 --> 01:48:07,000
应该是移动还是电信我忘了

2265
01:48:07,000 --> 01:48:09,000
就是中国电话号码手机号码不都是

2266
01:48:09,000 --> 01:48:12,000
1 多少 3 位数然后后面是 8 位数

2267
01:48:12,000 --> 01:48:13,000
就是 3 加 8 这么一个结构

2268
01:48:13,000 --> 01:48:17,000
对然后中间大大中国的不是什么 6666888 结尾的吗

2269
01:48:17,000 --> 01:48:18,000
对对吧

2270
01:48:18,000 --> 01:48:21,000
有一个身价价值上亿的号码

2271
01:48:21,000 --> 01:48:24,000
要是 1188 后面 8 高 8

2272
01:48:24,000 --> 01:48:26,000
我忘了是电信还是移动的了

2273
01:48:26,000 --> 01:48:27,000
就是那个东西

2274
01:48:27,000 --> 01:48:29,000
那个是个真实存在的号码对吧

2275
01:48:29,000 --> 01:48:31,000
那个有被拍卖了一个多亿拍出去了

2276
01:48:31,000 --> 01:48:33,000
好像是被一个什么土豪给拍了我记得

2277
01:48:33,000 --> 01:48:36,000
但是如果你在生活中看这个号码

2278
01:48:36,000 --> 01:48:38,000
你会相信他是真的一个号码吗

2279
01:48:38,000 --> 01:48:41,000
我觉得大概率你碰不到那个

2280
01:48:41,000 --> 01:48:44,000
跟上下没有关不过大部分神仙我还是觉得

2281
01:48:44,000 --> 01:48:45,000
但你如果你碰到一个土豪

2282
01:48:45,000 --> 01:48:48,000
他拿那个纯金名片给你上面写的是 1888888 这个号码

2283
01:48:48,000 --> 01:48:49,000
你会相信他真的对吧

2284
01:48:49,000 --> 01:48:50,000
但是说你给一个屌丝

2285
01:48:50,000 --> 01:48:53,000
或者他在一个表上填了一个 1888888 这个号码

2286
01:48:53,000 --> 01:48:55,000
你肯定不会相信他真的吧

2287
01:48:55,000 --> 01:48:57,000
我会多看他一眼高号

2288
01:48:57,000 --> 01:48:59,000
Are you sure

2289
01:49:02,000 --> 01:49:05,000
对啊所以这个世界我觉得是挺好玩的

2290
01:49:05,000 --> 01:49:08,000
一个就是一个算是一个

2291
01:49:08,000 --> 01:49:09,000
什么去意识吧

2292
01:49:09,000 --> 01:49:13,000
就当时做的一个错误决定使得现在出现这么一个问题

2293
01:49:13,000 --> 01:49:16,000
对吧非常的坑

2294
01:49:16,000 --> 01:49:19,000
技术设计实际上是非常难的

2295
01:49:19,000 --> 01:49:22,000
尤其是你在不知道这个东西将来会这么火的时候

2296
01:49:22,000 --> 01:49:25,000
做出一些非常狗血的随意的设计

2297
01:49:25,000 --> 01:49:27,000
将来可能会被人吐槽好多年

2298
01:49:27,000 --> 01:49:31,000
而且花费非常大的成本去去解决它

2299
01:49:31,000 --> 01:49:35,000
所以是的如果我们的听众里面有谁要做一个

2300
01:49:35,000 --> 01:49:39,000
有志于成为全球未来标准的东西

2301
01:49:39,000 --> 01:49:42,000
一定要考虑到不要

2302
01:49:42,000 --> 01:49:45,000
一定要考虑到人类的懒惰

2303
01:49:45,000 --> 01:49:51,000
所有的工不是那些工业家居设计都要考虑这个问题

2304
01:49:51,000 --> 01:49:55,000
人到底会在这个东西怎么用它怎么反应它

2305
01:49:55,000 --> 01:49:58,000
但其实我们做的这种技术的时候就完全忽略

2306
01:49:58,000 --> 01:50:00,000
就纯理性的忽略了这个问题

2307
01:50:00,000 --> 01:50:02,000
对

2308
01:50:02,000 --> 01:50:05,000
好吧

2309
01:50:05,000 --> 01:50:08,000
今天差不多啰啰嗦嗦讲了这么久

2310
01:50:08,000 --> 01:50:11,000
下次我们可以聊聊别的

2311
01:50:11,000 --> 01:50:14,000
NameCore 下次可以讲一下

2312
01:50:14,000 --> 01:50:17,000
NameCore

2313
01:50:17,000 --> 01:50:19,000
这可以插一个嘴

2314
01:50:19,000 --> 01:50:21,000
现在我们 DNS 还是一个中心化的结构

2315
01:50:21,000 --> 01:50:22,000
要插这个

2316
01:50:22,000 --> 01:50:24,000
就是分模式 DNS

2317
01:50:24,000 --> 01:50:26,000
分模式 DNS 未来是怎么样的

2318
01:50:26,000 --> 01:50:27,000
假设如果互联网都是分模式的

2319
01:50:27,000 --> 01:50:30,000
没有理由 DNS 还是一个集中式的

2320
01:50:30,000 --> 01:50:31,000
有道理

2321
01:50:31,000 --> 01:50:32,000
我们再讲吧

2322
01:50:32,000 --> 01:50:34,000
区块链结合 DNS

2323
01:50:34,000 --> 01:50:36,000
请进行等待下一期节目

2324
01:50:36,000 --> 01:50:38,000
等下一期更新

2325
01:50:38,000 --> 01:50:41,000
不知道是猴年马月

2326
01:50:41,000 --> 01:50:45,000
向各位宣布一个消息

2327
01:50:45,000 --> 01:50:48,000
你们听到这一期的时候 Rail 已经过完生日了

2328
01:50:48,000 --> 01:50:50,000
所以

2329
01:50:50,000 --> 01:50:53,000
祝 Rail 生日快乐

2330
01:50:53,000 --> 01:50:55,000
能不能打点赏

2331
01:50:55,000 --> 01:50:56,000
对

2332
01:50:56,000 --> 01:50:57,000
快给 Rail 捐生日压岁钱

2333
01:50:57,000 --> 01:51:00,000
我要贴个文码可不可以

2334
01:51:00,000 --> 01:51:03,000
好的

2335
01:51:03,000 --> 01:51:05,000
你结下尾了

2336
01:51:05,000 --> 01:51:10,000
您刚才收听到的是这一期的

2337
01:51:10,000 --> 01:51:15,000
ID 技术属于娱乐节目内核恐慌

2338
01:51:15,000 --> 01:51:16,000
我们号称 Hardcore

2339
01:51:16,000 --> 01:51:17,000
但谁都关货

2340
01:51:17,000 --> 01:51:18,000
想听人听不想听人别听

2341
01:51:18,000 --> 01:51:22,000
您可以为 Rail 捐赠压岁钱

2342
01:51:22,000 --> 01:51:25,000
地址是 kernelpanic.fm.donate

2343
01:51:25,000 --> 01:51:26,000
捐款金顿随意

2344
01:51:26,000 --> 01:51:28,000
只要是 8 的生日数倍就可以

2345
01:51:28,000 --> 01:51:29,000
Rail 多少岁

2346
01:51:29,000 --> 01:51:32,000
要不要 8 乘以你的年龄

2347
01:51:32,000 --> 01:51:33,000
好像还蛮多

2348
01:51:33,000 --> 01:51:35,000
那就有点多了

2349
01:51:35,000 --> 01:51:36,000
捐款不会为你带来什么

2350
01:51:36,000 --> 01:51:37,000
不捐也不会让你

2351
01:51:37,000 --> 01:51:39,000
不捐会让你失去 Rail 的喜爱

2352
01:51:39,000 --> 01:51:42,000
我们的口号是 No Hard Feelings

2353
01:51:42,000 --> 01:51:43,000
如果你有任何反馈

2354
01:51:43,000 --> 01:51:47,000
可以发一个电子邮件到 kernelpanic.fm.donate

2355
01:51:47,000 --> 01:51:48,000
不对

2356
01:51:48,000 --> 01:51:51,000
这个电子邮件是什么来着

2357
01:51:51,000 --> 01:51:53,000
上次说过一遍了

2358
01:51:53,000 --> 01:51:56,000
我们的邮件是什么

2359
01:51:56,000 --> 01:51:59,000
hi at

2360
01:51:59,000 --> 01:52:01,000
如果你有任何反馈

2361
01:52:01,000 --> 01:52:05,000
可以发电子邮件到 hi at kernelpanic.fm.

2362
01:52:05,000 --> 01:52:09,000
同时欢迎你收听 Rail 主持的风头圈

2363
01:52:09,000 --> 01:52:11,000
我们下期节目

