1
00:00:00,000 --> 00:00:12,000
从协调世界时 1970 年 1 月 1 日 0 时 0 分 0 秒期现在已经过去了 1427400128 秒

2
00:00:12,000 --> 00:00:14,000
欢迎收听

3
00:00:14,000 --> 00:00:16,000
这么精确

4
00:00:16,000 --> 00:00:20,000
对这样其实就可以反对出来我们的录音时间是什么时候

5
00:00:20,000 --> 00:00:22,000
没关系啊

6
00:00:22,000 --> 00:00:23,000
反正我们要提前录的嘛

7
00:00:23,000 --> 00:00:24,000
是

8
00:00:24,000 --> 00:00:30,000
这期是提前录的因为我下周开始就是各位听到这期的时候我应该已经在国内

9
00:00:30,000 --> 00:00:30,000
对

10
00:00:30,000 --> 00:00:34,000
有没有什么国内粉丝可以见面

11
00:00:34,000 --> 00:00:40,000
还是算了吧大家吃鸡蛋就好不要见那只下蛋的鸡

12
00:00:40,000 --> 00:00:43,000
见了就不想吃鸡蛋了

13
00:00:43,000 --> 00:00:47,000
没错影响食语

14
00:00:48,000 --> 00:00:54,000
您现在收听的是 ipnpodcast 旗下的 it 技术主题节目内核恐慌

15
00:00:54,000 --> 00:00:56,000
我们号称 hardcore 但是也没有干货

16
00:00:56,000 --> 00:00:59,000
想听人听不想听就不要听

17
00:00:59,000 --> 00:01:03,000
内核恐慌的网址是 ipn.li.kernelpanic

18
00:01:03,000 --> 00:01:06,000
我们推荐大家使用 podcast 客户端订阅我们的节目

19
00:01:06,000 --> 00:01:11,000
如果您不知道该用什么客户端欢迎划文 ipn.li.faq

20
00:01:11,000 --> 00:01:14,000
如果你非常喜欢我们的节目或者说

21
00:01:14,000 --> 00:01:16,000
不管你是不是喜欢我们的节目

22
00:01:16,000 --> 00:01:18,000
都欢迎你为我们捐款

23
00:01:18,000 --> 00:01:24,000
我们的捐款地址是 kernelpanic.fm.donate

24
00:01:24,000 --> 00:01:28,000
捐款金额随意只要是能被 8 整出的正整数就可以

25
00:01:28,000 --> 00:01:30,000
捐款不会为你带来什么

26
00:01:30,000 --> 00:01:33,000
不捐也不会让你失去什么

27
00:01:33,000 --> 00:01:39,000
这个罐口活变得越来越长了

28
00:01:39,000 --> 00:01:41,000
你多念几次你就顺溜了

29
00:01:41,000 --> 00:01:45,000
对我现在每天晚上睡觉之前没事都背这个

30
00:01:45,000 --> 00:01:48,000
所以今天节目正式开始之前

31
00:01:48,000 --> 00:01:49,000
我们还是做一下

32
00:01:49,000 --> 00:01:52,000
有几个事情要说一下

33
00:01:52,000 --> 00:01:54,000
对首先是我们废了正音班

34
00:01:54,000 --> 00:01:56,000
这个要给大家知会一下

35
00:01:56,000 --> 00:02:00,000
其实我们从上一期开始就没有再说正音班的内容了

36
00:02:00,000 --> 00:02:05,000
因为出于某些原因我们两个都觉得有点厌倦了

37
00:02:05,000 --> 00:02:07,000
就何必呢是吧

38
00:02:07,000 --> 00:02:11,000
不管虽然我们英语很烂中文也开始退化了

39
00:02:11,000 --> 00:02:14,000
但大家都明白我们在说什么不是吗

40
00:02:14,000 --> 00:02:15,000
所以就

41
00:02:15,000 --> 00:02:17,000
将就了是吧

42
00:02:17,000 --> 00:02:18,000
放过我们吧

43
00:02:18,000 --> 00:02:20,000
当然还是欢迎大家

44
00:02:20,000 --> 00:02:22,000
知道总比不知道好

45
00:02:22,000 --> 00:02:24,000
你提了我们下次就改了

46
00:02:24,000 --> 00:02:25,000
你告诉我们就是了

47
00:02:25,000 --> 00:02:27,000
我们虚心接受

48
00:02:27,000 --> 00:02:28,000
但是改不改

49
00:02:28,000 --> 00:02:29,000
想起来的话就改吧

50
00:02:29,000 --> 00:02:31,000
想不起来没办法

51
00:02:31,000 --> 00:02:33,000
比如说什么粘贴还是粘贴

52
00:02:33,000 --> 00:02:35,000
我现在忘了应该是粘贴还是粘贴

53
00:02:35,000 --> 00:02:36,000
粘贴

54
00:02:36,000 --> 00:02:37,000
OK

55
00:02:37,000 --> 00:02:39,000
Good to know

56
00:02:42,000 --> 00:02:44,000
再就是捐款

57
00:02:44,000 --> 00:02:45,000
这件事情

58
00:02:47,000 --> 00:02:47,000
对

59
00:02:47,000 --> 00:02:51,000
我不知道你怎么看待捐款这件事情

60
00:02:51,000 --> 00:02:52,000
或者说

61
00:02:52,000 --> 00:02:54,000
我假设我知道你知道

62
00:02:55,000 --> 00:02:59,000
假设我知道你怎么看待捐款这件事情

63
00:02:59,000 --> 00:03:02,000
但是我觉得可能还是有必要在这边说一下

64
00:03:02,000 --> 00:03:03,000
就是

65
00:03:05,000 --> 00:03:06,000
这不算 rant

66
00:03:06,000 --> 00:03:09,000
但也的确是

67
00:03:09,000 --> 00:03:15,000
看了几位朋友的反馈之后

68
00:03:15,000 --> 00:03:17,000
有一些感想

69
00:03:17,000 --> 00:03:20,000
就是我们的 podcast 对于

70
00:03:20,000 --> 00:03:21,000
对于你来说

71
00:03:21,000 --> 00:03:23,000
就是对于正在听这个节目的你来说

72
00:03:23,000 --> 00:03:27,000
应该是某种完全可以没有

73
00:03:27,000 --> 00:03:30,000
但是有的话不是一件好事的存在

74
00:03:30,000 --> 00:03:31,000
这叫什么

75
00:03:31,000 --> 00:03:32,000
Something nice to have

76
00:03:32,000 --> 00:03:33,000
Yeah nice to have

77
00:03:33,000 --> 00:03:34,000
因为

78
00:03:34,000 --> 00:03:37,000
因为如果你觉得我们两个 podcast 对于你来说

79
00:03:37,000 --> 00:03:39,000
是一个必要的生存条件的话

80
00:03:39,000 --> 00:03:42,000
那你一定会不惜一切代价

81
00:03:42,000 --> 00:03:44,000
砸锅卖铁供奉我们

82
00:03:44,000 --> 00:03:44,000
对吧

83
00:03:44,000 --> 00:03:47,000
确保我们两个生存

84
00:03:47,000 --> 00:03:49,000
有这种类型的节目存在吗

85
00:03:49,000 --> 00:03:49,000
对

86
00:03:49,000 --> 00:03:50,000
所以没有

87
00:03:50,000 --> 00:03:50,000
对吧

88
00:03:50,000 --> 00:03:52,000
所以从这个意义上来说

89
00:03:52,000 --> 00:03:56,000
其实没有任何一个节目是完全

90
00:03:56,000 --> 00:03:57,000
对

91
00:03:57,000 --> 00:03:59,000
是完全不能没有的

92
00:03:59,000 --> 00:03:59,000
对吧

93
00:03:59,000 --> 00:04:00,000
所以我们两个

94
00:04:00,000 --> 00:04:02,000
既然我们两个还是要自视其理

95
00:04:02,000 --> 00:04:06,000
所以我们的节目肯定不是对你来说必要的

96
00:04:06,000 --> 00:04:09,000
但是如果你觉得我们的节目对于你来说不是什么好事的话

97
00:04:09,000 --> 00:04:10,000
那你何必要听呢

98
00:04:10,000 --> 00:04:11,000
对吧

99
00:04:11,000 --> 00:04:12,000
所以

100
00:04:12,000 --> 00:04:14,000
It's something nice to have

101
00:04:14,000 --> 00:04:16,000
而对于我们两个人来说

102
00:04:16,000 --> 00:04:17,000
来自于听众的捐款

103
00:04:17,000 --> 00:04:19,000
其实同样也是完全可以没有

104
00:04:19,000 --> 00:04:21,000
但是有的话不失为一件好事的东西

105
00:04:21,000 --> 00:04:24,000
但是这样这句话说起来可能

106
00:04:24,000 --> 00:04:24,000
怎么说

107
00:04:24,000 --> 00:04:25,000
Snob

108
00:04:25,000 --> 00:04:26,000
就是

109
00:04:26,000 --> 00:04:27,000
自命不凡

110
00:04:27,000 --> 00:04:28,000
但的确是这样

111
00:04:28,000 --> 00:04:30,000
因为我们两个做这个是副业对吧

112
00:04:30,000 --> 00:04:32,000
这谈不上副业

113
00:04:32,000 --> 00:04:34,000
只能说是兴趣吧

114
00:04:34,000 --> 00:04:34,000
对

115
00:04:34,000 --> 00:04:34,000
就是

116
00:04:34,000 --> 00:04:36,000
那你副业你好歹有个什么

117
00:04:36,000 --> 00:04:39,000
你就觉得还能够补充你的主业的收入是吧

118
00:04:39,000 --> 00:04:40,000
你像

119
00:04:40,000 --> 00:04:42,000
按我们这种收入水平

120
00:04:42,000 --> 00:04:43,000
就

121
00:04:43,000 --> 00:04:44,000
其实不需要

122
00:04:44,000 --> 00:04:47,000
就也不可能靠这个捐款过活

123
00:04:47,000 --> 00:04:48,000
对

124
00:04:48,000 --> 00:04:50,000
而且甚至我们内红恐慌这个节目

125
00:04:50,000 --> 00:04:52,000
不可能像 IT 工论那样

126
00:04:52,000 --> 00:04:54,000
推出一个会员计划说什么

127
00:04:54,000 --> 00:04:56,000
请捐款支持吴涛和

128
00:04:56,000 --> 00:05:00,000
吴涛和 Rail 把内红恐慌做成最好的编程 podcast

129
00:05:00,000 --> 00:05:02,000
我们说不出来

130
00:05:02,000 --> 00:05:04,000
这样一个 motivation 对于我们来说是假的

131
00:05:04,000 --> 00:05:05,000
因为

132
00:05:05,000 --> 00:05:06,000
因为

133
00:05:06,000 --> 00:05:08,000
我说实话把 podcast 做成目前这个样子

134
00:05:08,000 --> 00:05:10,000
已经是我们能做的最好的一个状态

135
00:05:10,000 --> 00:05:11,000
就我们没有更多的资历

136
00:05:11,000 --> 00:05:14,000
可以给大家讲述更专业的内容

137
00:05:14,000 --> 00:05:17,000
我们也没有人脉可以去请到

138
00:05:17,000 --> 00:05:20,000
能够给大家讲述更专业的内容的人

139
00:05:20,000 --> 00:05:21,000
至少现在也不能对吧

140
00:05:21,000 --> 00:05:23,000
当然我们可能会即将请到一个重要级人物

141
00:05:23,000 --> 00:05:25,000
但是我们现在先

142
00:05:25,000 --> 00:05:26,000
先卖个关子

143
00:05:29,000 --> 00:05:29,000
对

144
00:05:29,000 --> 00:05:32,000
所以其实我们现在是做一个好比在做的一件事情

145
00:05:32,000 --> 00:05:33,000
那么

146
00:05:33,000 --> 00:05:37,000
然后就在有限的时间头上

147
00:05:37,000 --> 00:05:40,000
我们能做到什么程度就尽力而为吧

148
00:05:40,000 --> 00:05:41,000
没错

149
00:05:41,000 --> 00:05:43,000
所以在这个前提之下

150
00:05:43,000 --> 00:05:46,000
我们开放捐款的 motivation 就只能是

151
00:05:46,000 --> 00:05:49,000
像 Porto 里面的炮塔说那句话

152
00:05:49,000 --> 00:05:52,000
no hard feelings

153
00:05:52,000 --> 00:05:55,000
然后书科贝塔历验机里面

154
00:05:55,000 --> 00:05:57,000
书科和贝塔办了一份报纸免费发放

155
00:05:57,000 --> 00:05:58,000
报纸要说我忘了

156
00:05:58,000 --> 00:06:00,000
但是创刊词我一直记得

157
00:06:00,000 --> 00:06:02,000
就是我很小的时候看的那童话

158
00:06:02,000 --> 00:06:03,000
我觉得印象非常深刻

159
00:06:03,000 --> 00:06:05,000
就是我们想办一份报纸

160
00:06:05,000 --> 00:06:05,000
我们就办了

161
00:06:05,000 --> 00:06:07,000
想看的人看不想看的人就不要看

162
00:06:07,000 --> 00:06:09,000
所以这句话是来自于那里是吧

163
00:06:09,000 --> 00:06:10,000
对

164
00:06:10,000 --> 00:06:11,000
这其实是正元节的

165
00:06:11,000 --> 00:06:12,000
Triple 都正元节

166
00:06:12,000 --> 00:06:13,000
OK

167
00:06:13,000 --> 00:06:15,000
我觉得这句话非常诚恳

168
00:06:15,000 --> 00:06:16,000
就是

169
00:06:16,000 --> 00:06:19,000
所以就抄来做本节目的介绍了

170
00:06:19,000 --> 00:06:22,000
所以同样也可以作为我们捐款的一个主旨

171
00:06:22,000 --> 00:06:23,000
就是你想捐就捐

172
00:06:23,000 --> 00:06:25,000
捐了不会得到什么

173
00:06:25,000 --> 00:06:26,000
不想捐就不要捐

174
00:06:26,000 --> 00:06:27,000
不捐也不会失去什么

175
00:06:27,000 --> 00:06:30,000
有人说这个

176
00:06:30,000 --> 00:06:31,000
这个什么

177
00:06:31,000 --> 00:06:33,000
你这个态度是不是太屌了

178
00:06:35,000 --> 00:06:36,000
也有人认为我的态度很诚恳

179
00:06:36,000 --> 00:06:37,000
不是

180
00:06:37,000 --> 00:06:38,000
对

181
00:06:38,000 --> 00:06:41,000
所以其实这里面就有两种

182
00:06:41,000 --> 00:06:42,000
这个看法吧

183
00:06:42,000 --> 00:06:45,000
就是说你既然是来伸手要钱的

184
00:06:45,000 --> 00:06:46,000
你还那么屌

185
00:06:46,000 --> 00:06:47,000
搞什么

186
00:06:47,000 --> 00:06:47,000
是吧

187
00:06:47,000 --> 00:06:49,000
但反过来我也觉得就是

188
00:06:49,000 --> 00:06:50,000
比如说有一个

189
00:06:51,000 --> 00:06:53,000
我没有恶言

190
00:06:53,000 --> 00:06:56,000
就是我觉得有一位听众说什么

191
00:06:56,000 --> 00:06:58,000
如果我们使用什么打赏之类的词

192
00:06:58,000 --> 00:07:00,000
可能捐钱的人会更多一点

193
00:07:00,000 --> 00:07:02,000
但我就觉得

194
00:07:02,000 --> 00:07:03,000
我们又不是卖艺

195
00:07:03,000 --> 00:07:05,000
我们打什么赏

196
00:07:05,000 --> 00:07:06,000
也不给算了

197
00:07:08,000 --> 00:07:08,000
不是的

198
00:07:11,000 --> 00:07:14,000
然后虽然我们非常

199
00:07:14,000 --> 00:07:17,000
漏骨的诚恳的在捐款页面上写说

200
00:07:17,000 --> 00:07:22,000
这笔钱我会拿来给 Rail 这个郭凡买一台 Retina iMac

201
00:07:22,000 --> 00:07:23,000
然后给我买一台摩托车

202
00:07:23,000 --> 00:07:25,000
但实际上

203
00:07:25,000 --> 00:07:27,000
我们还是有一些成本需要支出的

204
00:07:27,000 --> 00:07:30,000
比如说 kernelpanic.fm 这个域名

205
00:07:30,000 --> 00:07:31,000
我们是要续费的

206
00:07:31,000 --> 00:07:35,000
然后 IPN 作为我们的东家

207
00:07:36,000 --> 00:07:37,000
也一直是

208
00:07:37,000 --> 00:07:40,000
就是免费支持我们的运营

209
00:07:40,000 --> 00:07:43,000
但我觉得将来这件事情如果要走上正轨的话

210
00:07:43,000 --> 00:07:46,000
那肯定 IPN 的运营费用我们也是要出一部分

211
00:07:46,000 --> 00:07:46,000
对

212
00:07:46,000 --> 00:07:48,000
就其实现在是

213
00:07:48,000 --> 00:07:51,000
是有些固定成本要支出的不多

214
00:07:51,000 --> 00:07:52,000
但是还是有的

215
00:07:52,000 --> 00:07:55,000
而且就假设我们的时间不算钱的话

216
00:07:55,000 --> 00:07:59,000
还是有一些我们需要每月固定支出的东西

217
00:07:59,000 --> 00:07:59,000
对

218
00:08:00,000 --> 00:08:04,000
当然我们也并不真的指望说

219
00:08:04,000 --> 00:08:06,000
捐款页面上的两个目标都能实现

220
00:08:06,000 --> 00:08:12,000
因为我们现在获得的捐款金额一周

221
00:08:12,000 --> 00:08:12,000
就是

222
00:08:12,000 --> 00:08:13,000
等等

223
00:08:13,000 --> 00:08:16,000
到现在是大概两周了吧

224
00:08:16,000 --> 00:08:17,000
10 天吧

225
00:08:17,000 --> 00:08:18,000
不到两周

226
00:08:18,000 --> 00:08:19,000
对

227
00:08:19,000 --> 00:08:23,000
10 天里面我们凑齐了一个 5 福号的 Char 类型

228
00:08:23,000 --> 00:08:26,000
在大部分处理器上所能存储的最大值

229
00:08:29,000 --> 00:08:32,000
所以其实从这个角度来讲

230
00:08:32,000 --> 00:08:36,000
像我们这种可有可无的捐款项目能筹到的钱

231
00:08:36,000 --> 00:08:38,000
还是好于平均数的

232
00:08:40,000 --> 00:08:41,000
应该是吧

233
00:08:41,000 --> 00:08:44,000
我觉得至少其实在这么短的时间之内

234
00:08:44,000 --> 00:08:49,000
居然能让一个安三 Char 一出其实挺好的

235
00:08:49,000 --> 00:08:50,000
也不错

236
00:08:50,000 --> 00:08:52,000
我之前的期待要比这个低很多

237
00:08:52,000 --> 00:08:53,000
说实话

238
00:08:53,000 --> 00:08:53,000
OK

239
00:08:54,000 --> 00:08:57,000
就是如果你要我们就是叫什么

240
00:08:57,000 --> 00:09:00,000
希望姿态低一点其实也可以

241
00:09:00,000 --> 00:09:02,000
各位大爷该给钱的就给钱吧

242
00:09:03,000 --> 00:09:05,000
有钱的捧个钱场

243
00:09:05,000 --> 00:09:06,000
没钱的捧个人

244
00:09:06,000 --> 00:09:07,000
是这么说的吧

245
00:09:07,000 --> 00:09:08,000
好像是吧

246
00:09:08,000 --> 00:09:09,000
我有忘了

247
00:09:11,000 --> 00:09:12,000
那是开玩笑

248
00:09:13,000 --> 00:09:23,000
然后有听众说为什么我们不能支持用支付宝加扫码

249
00:09:24,000 --> 00:09:26,000
这个是有技术限制

250
00:09:26,000 --> 00:09:29,000
我们用的这个 Stripe 它是不支持这个技术

251
00:09:30,000 --> 00:09:32,000
不过我们可以单独再开一个

252
00:09:32,000 --> 00:09:37,000
就如果真的这样对你来说是比较好的一个方法的话

253
00:09:37,000 --> 00:09:40,000
也可以考虑加一个码

254
00:09:40,000 --> 00:09:41,000
然后你直接扫也行

255
00:09:42,000 --> 00:09:44,000
不过那样一来好像就比较难

256
00:09:44,000 --> 00:09:47,000
需要怎么难道你要动态生成一个 QR Code

257
00:09:47,000 --> 00:09:48,000
然后

258
00:09:48,000 --> 00:09:48,000
不用

259
00:09:49,000 --> 00:09:52,000
把你的支付宝的钱包的地址生成的一块

260
00:09:52,000 --> 00:09:54,000
可以贴在网页上就可以了

261
00:09:54,000 --> 00:09:55,000
金额怎么办

262
00:09:56,000 --> 00:09:58,000
那就没有办法限制随意

263
00:09:58,000 --> 00:10:01,000
对我的意思就是难道不能动态生成一个 QR Code

264
00:10:01,000 --> 00:10:02,000
然后

265
00:10:03,000 --> 00:10:04,000
支付宝的 AP 好像不能这样

266
00:10:04,000 --> 00:10:07,000
就起码给开放给个人那是不能这样

267
00:10:07,000 --> 00:10:08,000
金额永远是横定的

268
00:10:08,000 --> 00:10:11,000
不是就是你没有办法指定金额

269
00:10:13,000 --> 00:10:14,000
那谁来指定金额

270
00:10:14,000 --> 00:10:15,000
支付者指定金额

271
00:10:15,000 --> 00:10:16,000
对对没错

272
00:10:16,000 --> 00:10:17,000
就是他扫过了之后

273
00:10:17,000 --> 00:10:18,000
他会让你输入一个金额

274
00:10:19,000 --> 00:10:19,000
可以这样

275
00:10:20,000 --> 00:10:24,000
这个可能比较适合国内的使用习惯

276
00:10:24,000 --> 00:10:27,000
但对于我们管理或者统计起来就会有一点麻烦

277
00:10:27,000 --> 00:10:27,000
因为

278
00:10:28,000 --> 00:10:31,000
由于众所知的原因

279
00:10:31,000 --> 00:10:34,000
我觉得国内那些服务的 API 都做得不是特别好

280
00:10:34,000 --> 00:10:35,000
我觉得

281
00:10:36,000 --> 00:10:38,000
你太太顽转了

282
00:10:40,000 --> 00:10:41,000
也还是有待提高

283
00:10:41,000 --> 00:10:43,000
一大坨一塌坨的屎

284
00:10:44,000 --> 00:10:46,000
还有就是我们可以考虑开一个什么比特币

285
00:10:48,000 --> 00:10:49,000
对这倒是可以做

286
00:10:51,000 --> 00:10:52,000
下次吧有空慢慢搞

287
00:10:52,000 --> 00:10:53,000
这个也本来也是

288
00:10:54,000 --> 00:10:54,000
叫什么

289
00:10:55,000 --> 00:10:57,000
业余时间搞的东西

290
00:10:57,000 --> 00:10:58,000
嗯没错

291
00:10:59,000 --> 00:11:00,000
好

292
00:11:00,000 --> 00:11:02,000
所以关于节目本身的事情我们就说到这

293
00:11:02,000 --> 00:11:06,000
还有人问为什么你要你喜欢那个摩托车

294
00:11:07,000 --> 00:11:09,000
啊 Ducati Scrambler

295
00:11:09,000 --> 00:11:10,000
啊哈

296
00:11:11,000 --> 00:11:12,000
So what's so special about it

297
00:11:13,000 --> 00:11:20,000
好大家知道 Ducati 在摩托车界就有点像 Lamborghini 在汽车界

298
00:11:21,000 --> 00:11:22,000
呃

299
00:11:23,000 --> 00:11:25,000
当然这个类比不是非常准确

300
00:11:25,000 --> 00:11:29,000
因为摩托车本身不是一个非常能够凸显

301
00:11:29,000 --> 00:11:30,000
人的社会地位的东西

302
00:11:30,000 --> 00:11:32,000
就是很少有人会把

303
00:11:32,000 --> 00:11:35,000
高冷摩托车当作社会地位的体现

304
00:11:35,000 --> 00:11:37,000
哎你这么说不一定哦

305
00:11:38,000 --> 00:11:39,000
你看那个好玩

306
00:11:39,000 --> 00:11:43,000
你看那个纯香节目的青年他晚上那也轰进去摩托车

307
00:11:43,000 --> 00:11:43,000
他肯定不是这么想

308
00:11:47,000 --> 00:11:48,000
对

309
00:11:48,000 --> 00:11:49,000
但那种

310
00:11:50,000 --> 00:11:53,000
就是你不能说他们所宣称的那样一种

311
00:11:53,000 --> 00:11:55,000
呃社会地位是社会的顶层

312
00:11:56,000 --> 00:12:01,000
或者说他们他们不会认为这是一种呃宣扬自己有多么富有

313
00:12:01,000 --> 00:12:02,000
或者是多么

314
00:12:03,000 --> 00:12:06,000
呃我花了些个钱这个这个 status

315
00:12:06,000 --> 00:12:06,000
OK

316
00:12:07,000 --> 00:12:10,000
因为我也不知道就是作为文化符号的摩托车

317
00:12:10,000 --> 00:12:12,000
其实更多的是偏向于

318
00:12:13,000 --> 00:12:16,000
人性的不羁或者是叛逆的那一面

319
00:12:16,000 --> 00:12:19,000
比如说以前那个马龙白兰度

320
00:12:19,000 --> 00:12:21,000
的电影叫叫什么来着

321
00:12:21,000 --> 00:12:24,000
反正就是讲一群马头龙人骑摩托车多么

322
00:12:26,000 --> 00:12:26,000
呃

323
00:12:27,000 --> 00:12:28,000
离经叛道的

324
00:12:29,000 --> 00:12:31,000
他塑造一离经叛道的骑摩托车人的形象

325
00:12:31,000 --> 00:12:32,000
或者是

326
00:12:32,000 --> 00:12:35,000
以前日本的什么包走包走族

327
00:12:35,000 --> 00:12:36,000
包走族就是

328
00:12:37,000 --> 00:12:40,000
在深夜里面骑着摩托车在

329
00:12:40,000 --> 00:12:43,000
呃限速高速公路上

330
00:12:44,000 --> 00:12:45,000
去去飙车的这两群人

331
00:12:45,000 --> 00:12:47,000
这个全全球各地都一样了

332
00:12:48,000 --> 00:12:50,000
但现在已经这两群人都已经消失了

333
00:12:50,000 --> 00:12:53,000
马头风云和暴走族里面的那群

334
00:12:54,000 --> 00:12:56,000
狂放的骑摩托车的

335
00:12:56,000 --> 00:12:58,000
叛逆的年轻人都已经消失了

336
00:12:58,000 --> 00:12:59,000
中国还有啊

337
00:13:01,000 --> 00:13:02,000
中国洛亏史

338
00:13:03,000 --> 00:13:04,000
而且中国禁摩

339
00:13:04,000 --> 00:13:06,000
所以中国摩托车文化从来没有发展过起来

340
00:13:07,000 --> 00:13:08,000
呃还好吧

341
00:13:08,000 --> 00:13:10,000
也就中小车是还没有禁这个东西

342
00:13:11,000 --> 00:13:14,000
就 anyway 回到杜卡蒂这个问题上就是

343
00:13:14,000 --> 00:13:15,000
杜卡蒂是

344
00:13:16,000 --> 00:13:19,000
在摩托车爱好者的心目中比较

345
00:13:20,000 --> 00:13:21,000
高大上的一个品牌

346
00:13:21,000 --> 00:13:24,000
呃就和意大利的其他

347
00:13:24,000 --> 00:13:25,000
呃机械

348
00:13:26,000 --> 00:13:27,000
呃内衡机品牌一样

349
00:13:28,000 --> 00:13:29,000
我不知道听说是不是正确

350
00:13:30,000 --> 00:13:30,000
比如说

351
00:13:31,000 --> 00:13:31,000
呃

352
00:13:32,000 --> 00:13:33,000
法拉利啊

353
00:13:33,000 --> 00:13:34,000
呃 Lamagini 啊

354
00:13:34,000 --> 00:13:35,000
还有什么

355
00:13:36,000 --> 00:13:37,000
意大利的名车还有什么

356
00:13:38,000 --> 00:13:38,000
就这两个吧

357
00:13:38,000 --> 00:13:39,000
还有什么我不知道

358
00:13:41,000 --> 00:13:42,000
对咱俩都不是很懂车

359
00:13:42,000 --> 00:13:43,000
算了

360
00:13:43,000 --> 00:13:44,000
然后

361
00:13:44,000 --> 00:13:45,000
呃

362
00:13:46,000 --> 00:13:49,000
杜卡蒂和比如说意大利的其他牌子

363
00:13:49,000 --> 00:13:51,000
有一叫 MV Augusta

364
00:13:51,000 --> 00:13:53,000
或者是 Motoguzi 都是

365
00:13:54,000 --> 00:13:57,000
算是在摩托车界里面比较顶级的车

366
00:13:57,000 --> 00:13:59,000
然后杜卡蒂特别之处在于什么呢

367
00:13:59,000 --> 00:14:02,000
就是呃杜卡蒂的创始人非常喜欢吃西红柿

368
00:14:03,000 --> 00:14:06,000
所以杜卡蒂的几乎每一辆车都是红色的

369
00:14:07,000 --> 00:14:10,000
因为因为西红柿的关系吗

370
00:14:11,000 --> 00:14:12,000
然后呢

371
00:14:13,000 --> 00:14:15,000
杜卡蒂在 70 年代的时候

372
00:14:15,000 --> 00:14:17,000
有一个离京叛道的设计师

373
00:14:17,000 --> 00:14:18,000
非常喜欢吃鸡蛋

374
00:14:19,000 --> 00:14:20,000
然后他设计出了一款车

375
00:14:21,000 --> 00:14:22,000
呃

376
00:14:23,000 --> 00:14:24,000
居然是黄色的

377
00:14:25,000 --> 00:14:25,000
然后

378
00:14:26,000 --> 00:14:27,000
这款车在

379
00:14:27,000 --> 00:14:28,000
喜欢吃蛋黄色的

380
00:14:30,000 --> 00:14:32,000
这款车在 30 年之后被杜卡蒂复刻

381
00:14:32,000 --> 00:14:33,000
OK

382
00:14:33,000 --> 00:14:35,000
就有了我们今天的杜卡蒂 Scrambler

383
00:14:35,000 --> 00:14:38,000
然后这款杜卡蒂 Scrambler 实际上是在像 19

384
00:14:39,000 --> 00:14:42,000
76 年还是 72 年的原版的

385
00:14:43,000 --> 00:14:44,000
单缸发动机的 Scrambler 致敬

386
00:14:45,000 --> 00:14:48,000
就是如果你找出当初 70 年代那款车来看的话

387
00:14:48,000 --> 00:14:50,000
两辆车造型其实是非常神似的

388
00:14:52,000 --> 00:14:53,000
所以从这个意义上来说

389
00:14:53,000 --> 00:14:55,000
Scrambler 实际上是复刻了

390
00:14:55,000 --> 00:14:56,000
就像就像

391
00:14:56,000 --> 00:14:58,000
菲亚特复刻了

392
00:14:58,000 --> 00:14:59,000
旧的

393
00:14:59,000 --> 00:15:00,000
菲亚特 500

394
00:15:01,000 --> 00:15:03,000
呃重新做了一辆菲亚特 500

395
00:15:03,000 --> 00:15:05,000
然后在世界上大卖

396
00:15:05,000 --> 00:15:06,000
一样

397
00:15:06,000 --> 00:15:08,000
呃杜卡蒂也重新复刻了

398
00:15:08,000 --> 00:15:10,000
Scrambler 然后在

399
00:15:11,000 --> 00:15:11,000
呃

400
00:15:12,000 --> 00:15:13,000
即将迎来一个大卖

401
00:15:13,000 --> 00:15:14,000
因为

402
00:15:14,000 --> 00:15:15,000
杜卡蒂 Scrambler

403
00:15:16,000 --> 00:15:18,000
杜卡蒂一年的产量大概有四万五千台

404
00:15:18,000 --> 00:15:21,000
然后 Scrambler 预计的目前已经的

405
00:15:21,000 --> 00:15:23,000
目前已经出现的定数是一万辆

406
00:15:23,000 --> 00:15:24,000
也就是说

407
00:15:24,000 --> 00:15:28,000
他们明年他们今年 2015 年上市这款 Scrambler 可能会占到

408
00:15:29,000 --> 00:15:31,000
全厂产量的四分之一

409
00:15:32,000 --> 00:15:32,000
这么多

410
00:15:33,000 --> 00:15:33,000
对

411
00:15:33,000 --> 00:15:33,000
OK

412
00:15:34,000 --> 00:15:35,000
然后这就宣告了

413
00:15:35,000 --> 00:15:38,000
可能杜卡蒂要告别西红柿时代迎来见识

414
00:15:39,000 --> 00:15:39,000
OK

415
00:15:41,000 --> 00:15:41,000
呃

416
00:15:41,000 --> 00:15:42,000
所以

417
00:15:42,000 --> 00:15:44,000
那个杜卡蒂

418
00:15:45,000 --> 00:15:47,000
和这个叫什么那个叫什么哈雷

419
00:15:47,000 --> 00:15:49,000
是吧哈雷摩托哈雷

420
00:15:49,000 --> 00:15:49,000
哈雷达维森

421
00:15:50,000 --> 00:15:50,000
嗯哼

422
00:15:51,000 --> 00:15:53,000
他们之间是一个就是作为品牌的话

423
00:15:53,000 --> 00:15:55,000
是大概是一个什么样的关系

424
00:15:55,000 --> 00:15:57,000
呃哈雷达维森

425
00:15:57,000 --> 00:15:58,000
是

426
00:15:59,000 --> 00:15:59,000
怎么说的

427
00:15:59,000 --> 00:16:01,000
哈雷达维森使用着 1912 年的技术

428
00:16:01,000 --> 00:16:03,000
卖的却是 2012 年的价钱

429
00:16:04,000 --> 00:16:05,000
哈哈哈哈

430
00:16:05,000 --> 00:16:07,000
就哪个贵呢

431
00:16:07,000 --> 00:16:09,000
就一般来就平均来看

432
00:16:09,000 --> 00:16:11,000
就哪个高档一点

433
00:16:11,000 --> 00:16:13,000
一般来说是杜卡蒂要贵一点

434
00:16:13,000 --> 00:16:13,000
但是

435
00:16:14,000 --> 00:16:14,000
呃

436
00:16:14,000 --> 00:16:15,000
Scrambler 出版

437
00:16:15,000 --> 00:16:17,000
Scrambler 上市价格

438
00:16:17,000 --> 00:16:19,000
就是 Scrambler 有四个版本

439
00:16:19,000 --> 00:16:20,000
嗯

440
00:16:22,000 --> 00:16:22,000
怎么说呢

441
00:16:23,000 --> 00:16:24,000
摩托车分为很多种

442
00:16:24,000 --> 00:16:25,000
跑车

443
00:16:25,000 --> 00:16:28,000
就杜卡蒂之前以做跑车为主

444
00:16:28,000 --> 00:16:29,000
然后他们还有一个比较

445
00:16:30,000 --> 00:16:30,000
比较

446
00:16:30,000 --> 00:16:31,000
嗯

447
00:16:32,000 --> 00:16:32,000
特别一点的

448
00:16:32,000 --> 00:16:33,000
就

449
00:16:33,000 --> 00:16:35,000
摩托车还有一个类型叫 Naked Bike

450
00:16:35,000 --> 00:16:38,000
Naked Bike 可以类别为

451
00:16:38,000 --> 00:16:38,000
嗯

452
00:16:38,000 --> 00:16:39,000
汽车里面的

453
00:16:39,000 --> 00:16:40,000
吉普车吧

454
00:16:41,000 --> 00:16:42,000
嗯

455
00:16:42,000 --> 00:16:45,000
然后 Naked Bike 他们有一款叫做

456
00:16:45,000 --> 00:16:46,000
嗯

457
00:16:46,000 --> 00:16:47,000
Diablo

458
00:16:48,000 --> 00:16:49,000
然后

459
00:16:50,000 --> 00:16:51,000
那个 Diablo

460
00:16:51,000 --> 00:16:53,000
Diablo 就是

461
00:16:53,000 --> 00:16:54,000
也是恶魔的意思

462
00:16:54,000 --> 00:16:56,000
但是是那个

463
00:16:57,000 --> 00:16:58,000
B 被写成了 V

464
00:16:58,000 --> 00:16:59,000
因为

465
00:16:59,000 --> 00:17:00,000
嗯

466
00:17:00,000 --> 00:17:00,000
OK

467
00:17:01,000 --> 00:17:02,000
这两个字母本来就是

468
00:17:02,000 --> 00:17:03,000
同一个音味

469
00:17:03,000 --> 00:17:04,000
哦

470
00:17:04,000 --> 00:17:05,000
我为什么喜欢 Scrambler

471
00:17:05,000 --> 00:17:06,000
就是因为

472
00:17:06,000 --> 00:17:06,000
嗯

473
00:17:06,000 --> 00:17:08,000
因为 Scrambler 是

474
00:17:08,000 --> 00:17:09,000
杜卡蒂的一种

475
00:17:09,000 --> 00:17:10,000
转型的尝试吧

476
00:17:10,000 --> 00:17:11,000
我觉得就是杜卡蒂

477
00:17:11,000 --> 00:17:13,000
他最有名的

478
00:17:13,000 --> 00:17:14,000
车是跑车

479
00:17:14,000 --> 00:17:16,000
比如说 1196 或者是 848

480
00:17:17,000 --> 00:17:18,000
以及他的 Naked Bike

481
00:17:18,000 --> 00:17:19,000
嗯

482
00:17:20,000 --> 00:17:21,000
但是

483
00:17:22,000 --> 00:17:23,000
Scrambler 可以说是

484
00:17:23,000 --> 00:17:25,000
杜卡蒂试图向

485
00:17:25,000 --> 00:17:27,000
终端市场

486
00:17:27,000 --> 00:17:29,000
转型的一个尝试

487
00:17:29,000 --> 00:17:31,000
因为这款车卖的非常便宜

488
00:17:31,000 --> 00:17:31,000
就是和

489
00:17:31,000 --> 00:17:33,000
当然非常是要加以好的

490
00:17:33,000 --> 00:17:34,000
因为要和

491
00:17:34,000 --> 00:17:34,000
嗯

492
00:17:34,000 --> 00:17:36,000
杜卡蒂的其他车比起来

493
00:17:36,000 --> 00:17:36,000
比如说其他的其他车

494
00:17:36,000 --> 00:17:37,000
可能会卖到 16000

495
00:17:37,000 --> 00:17:38,000
18000

496
00:17:38,000 --> 00:17:39,000
甚至 2 万以上

497
00:17:39,000 --> 00:17:41,000
但是 Scrambler 的

498
00:17:41,000 --> 00:17:42,000
四个版本里面

499
00:17:42,000 --> 00:17:44,000
最便宜那个版本只要 8000

500
00:17:44,000 --> 00:17:45,000
多欧元

501
00:17:46,000 --> 00:17:47,000
就以现在的欧元

502
00:17:47,000 --> 00:17:48,000
对人民币的汇率来说

503
00:17:48,000 --> 00:17:50,000
简直是白菜价的一款杜卡蒂

504
00:17:50,000 --> 00:17:51,000
嗯

505
00:17:51,000 --> 00:17:51,000
甚至很多

506
00:17:51,000 --> 00:17:53,000
甚至很多二手杜卡蒂

507
00:17:53,000 --> 00:17:55,000
都没有这个价格

508
00:17:55,000 --> 00:17:57,000
而哈利戴维森

509
00:17:57,000 --> 00:17:58,000
在另外一只手上

510
00:17:58,000 --> 00:17:59,000
则是

511
00:18:00,000 --> 00:18:01,000
则是一种

512
00:18:01,000 --> 00:18:03,000
美式文化的体现

513
00:18:03,000 --> 00:18:05,000
就是哈利戴维森骑士

514
00:18:05,000 --> 00:18:07,000
并不强调他们的车有多漂亮

515
00:18:07,000 --> 00:18:08,000
当然他们自己觉得他们车多漂亮

516
00:18:09,000 --> 00:18:09,000
呃

517
00:18:09,000 --> 00:18:11,000
而是强调他们骑车的时候

518
00:18:11,000 --> 00:18:12,000
是非常酷的一群人

519
00:18:14,000 --> 00:18:14,000
就

520
00:18:15,000 --> 00:18:15,000
这么说吧

521
00:18:15,000 --> 00:18:16,000
世界上最

522
00:18:16,000 --> 00:18:18,000
发达的摩托车科技

523
00:18:18,000 --> 00:18:19,000
实际上在日本

524
00:18:19,000 --> 00:18:19,000
因为

525
00:18:20,000 --> 00:18:20,000
呃

526
00:18:20,000 --> 00:18:21,000
或者说在德国

527
00:18:21,000 --> 00:18:22,000
如果一定要大言不惭

528
00:18:22,000 --> 00:18:23,000
那怎么说的话

529
00:18:23,000 --> 00:18:25,000
就是在去年

530
00:18:26,000 --> 00:18:26,000
呃

531
00:18:26,000 --> 00:18:27,000
世界上最快的摩托车

532
00:18:27,000 --> 00:18:28,000
就是德国的

533
00:18:29,000 --> 00:18:29,000
呃

534
00:18:31,000 --> 00:18:32,000
宝马座的

535
00:18:33,000 --> 00:18:34,000
HP 4

536
00:18:35,000 --> 00:18:35,000
OK

537
00:18:36,000 --> 00:18:36,000
对

538
00:18:36,000 --> 00:18:37,000
然后去年

539
00:18:37,000 --> 00:18:38,000
呃

540
00:18:38,000 --> 00:18:40,000
日本的 Kawasaki

541
00:18:40,000 --> 00:18:43,000
做了一款带涡轮增压的摩托车

542
00:18:43,000 --> 00:18:44,000
350 马力

543
00:18:44,000 --> 00:18:45,000
呃

544
00:18:46,000 --> 00:18:47,000
这比很多汽车都要

545
00:18:47,000 --> 00:18:48,000
比很多汽车都要

546
00:18:48,000 --> 00:18:49,000
都要

547
00:18:49,000 --> 00:18:51,000
都要夸张一万倍

548
00:18:51,000 --> 00:18:51,000
然后

549
00:18:51,000 --> 00:18:52,000
呃

550
00:18:52,000 --> 00:18:54,000
时速可能是 350 公里以上不封顶

551
00:18:54,000 --> 00:18:55,000
OK

552
00:18:55,000 --> 00:18:56,000
是非常非常恐怖的一款车

553
00:18:57,000 --> 00:18:58,000
那不得飞起来

554
00:18:58,000 --> 00:18:58,000
对

555
00:18:58,000 --> 00:18:59,000
使用探浅 VIA

556
00:18:59,000 --> 00:19:00,000
然后增压发动机

557
00:19:00,000 --> 00:19:03,000
都是一些前五古人的技术

558
00:19:03,000 --> 00:19:04,000
至少用在摩托车上非常

559
00:19:05,000 --> 00:19:05,000
对

560
00:19:06,000 --> 00:19:06,000
非常非常轻

561
00:19:07,000 --> 00:19:09,000
但是不管是意大利还是

562
00:19:09,000 --> 00:19:11,000
美国都没有人在做这样的上市

563
00:19:11,000 --> 00:19:13,000
就是他们还是在卖

564
00:19:13,000 --> 00:19:13,000
怎么说呢

565
00:19:13,000 --> 00:19:15,000
意大利人主要是卖设计吧

566
00:19:15,000 --> 00:19:17,000
然后美国人主要是卖情怀

567
00:19:21,000 --> 00:19:22,000
所以叫什么

568
00:19:22,000 --> 00:19:23,000
就是

569
00:19:23,000 --> 00:19:23,000
日

570
00:19:23,000 --> 00:19:24,000
呃

571
00:19:24,000 --> 00:19:26,000
得日厂商卖技术是吧

572
00:19:27,000 --> 00:19:27,000
呃

573
00:19:27,000 --> 00:19:28,000
可以这么说吧

574
00:19:28,000 --> 00:19:30,000
因为德国的厂商一直在强调

575
00:19:30,000 --> 00:19:30,000
怎么说呢

576
00:19:30,000 --> 00:19:31,000
德国

577
00:19:31,000 --> 00:19:33,000
至少德国人最喜欢买的一款摩托车

578
00:19:33,000 --> 00:19:35,000
就是 BMW 出的一款越野车

579
00:19:35,000 --> 00:19:37,000
然后这款车在整个欧洲卖的也很好

580
00:19:38,000 --> 00:19:38,000
呃

581
00:19:38,000 --> 00:19:40,000
英国人有英国的戴恩芬

582
00:19:40,000 --> 00:19:41,000
或者说

583
00:19:42,000 --> 00:19:43,000
不是那个凶兆的戴恩芬

584
00:19:43,000 --> 00:19:44,000
是

585
00:19:44,000 --> 00:19:45,000
也叫 Triumph

586
00:19:45,000 --> 00:19:46,000
但是

587
00:19:46,000 --> 00:19:46,000
呃

588
00:19:46,000 --> 00:19:49,000
中文我相信一般翻译成凯旋

589
00:19:49,000 --> 00:19:50,000
就是英国凯旋摩托车

590
00:19:50,000 --> 00:19:52,000
凯旋摩托车也有一款叫做

591
00:19:52,000 --> 00:19:53,000
Scrambler

592
00:19:53,000 --> 00:19:55,000
但是要比 Cardia Scrambler 贵一些

593
00:19:56,000 --> 00:19:56,000
OK

594
00:19:56,000 --> 00:19:59,000
Scrambler 这个摩托车最大的特点就是它

595
00:20:00,000 --> 00:20:01,000
呃

596
00:20:01,000 --> 00:20:02,000
强调

597
00:20:02,000 --> 00:20:04,000
一定的越野能力

598
00:20:04,000 --> 00:20:05,000
就是它本质上还是一款

599
00:20:06,000 --> 00:20:06,000
街道车

600
00:20:07,000 --> 00:20:09,000
但是你可以骑着它去上

601
00:20:09,000 --> 00:20:11,000
土地或者是沙滩这样的地方

602
00:20:11,000 --> 00:20:12,000
呃

603
00:20:12,000 --> 00:20:13,000
然后它

604
00:20:14,000 --> 00:20:15,000
主要还是设计非常漂亮嘛

605
00:20:17,000 --> 00:20:17,000
对

606
00:20:18,000 --> 00:20:19,000
就喜欢那个调调

607
00:20:19,000 --> 00:20:20,000
怎么说呢

608
00:20:20,000 --> 00:20:20,000
OK

609
00:20:21,000 --> 00:20:23,000
我也很难解释为什么一定是

610
00:20:23,000 --> 00:20:24,000
Ducati Scrambler

611
00:20:24,000 --> 00:20:25,000
因为其实还有其他的选择

612
00:20:25,000 --> 00:20:26,000
比如说 Yamaha 的一些

613
00:20:27,000 --> 00:20:28,000
Naked Bike 看起来也很帅

614
00:20:28,000 --> 00:20:29,000
但是

615
00:20:30,000 --> 00:20:31,000
Somehow someway 我觉得

616
00:20:31,000 --> 00:20:32,000
Scrambler

617
00:20:33,000 --> 00:20:34,000
呃

618
00:20:35,000 --> 00:20:37,000
在一个 sweet spot

619
00:20:37,000 --> 00:20:38,000
就很漂亮

620
00:20:38,000 --> 00:20:40,000
而且又不是特别贵

621
00:20:40,000 --> 00:20:41,000
而且是

622
00:20:41,000 --> 00:20:43,000
不是日本车也不是德国车

623
00:20:44,000 --> 00:20:45,000
对

624
00:20:45,000 --> 00:20:45,000
所以是它

625
00:20:46,000 --> 00:20:46,000
OK

626
00:20:47,000 --> 00:20:47,000
没问题

627
00:20:48,000 --> 00:20:49,000
我希望这个解释让大家满意

628
00:20:49,000 --> 00:20:50,000
因为

629
00:20:50,000 --> 00:20:51,000
呃

630
00:20:51,000 --> 00:20:53,000
我其实也没有仔细想过为什么这个问题

631
00:20:53,000 --> 00:20:55,000
因为有时候你喜欢一个东西

632
00:20:55,000 --> 00:20:57,000
不是特别容易说出为什么的

633
00:20:58,000 --> 00:21:00,000
我觉得大部分时候都是这样吧

634
00:21:00,000 --> 00:21:00,000
对

635
00:21:00,000 --> 00:21:02,000
就比如说你为什么喜欢一门语言

636
00:21:03,000 --> 00:21:04,000
可是有时候也很难理解

637
00:21:05,000 --> 00:21:08,000
然后接下来是我们的读者反馈时间

638
00:21:09,000 --> 00:21:10,000
那吧

639
00:21:11,000 --> 00:21:11,000
呃

640
00:21:11,000 --> 00:21:12,000
我来念吧

641
00:21:13,000 --> 00:21:13,000
呃

642
00:21:13,000 --> 00:21:14,000
对

643
00:21:14,000 --> 00:21:15,000
就是我们

644
00:21:16,000 --> 00:21:18,000
上期节目播出之后收到了

645
00:21:18,000 --> 00:21:21,000
至少三封热情洋溢的来信

646
00:21:21,000 --> 00:21:21,000
然后

647
00:21:22,000 --> 00:21:23,000
呃

648
00:21:24,000 --> 00:21:25,000
有一封是写给我们两个的

649
00:21:25,000 --> 00:21:27,000
另外一封是写给 Ryo 的

650
00:21:27,000 --> 00:21:30,000
那 Ryo 你要不要先念写给你的那一篇

651
00:21:30,000 --> 00:21:31,000
OK

652
00:21:31,000 --> 00:21:32,000
呃

653
00:21:34,000 --> 00:21:35,000
等一下这个怎么念我想想

654
00:21:36,000 --> 00:21:38,000
你就节选里面没有个人宠慢的那些念

655
00:21:38,000 --> 00:21:39,000
OK

656
00:21:41,000 --> 00:21:43,000
呃

657
00:21:43,000 --> 00:21:44,000
我得总结一下吧

658
00:21:44,000 --> 00:21:45,000
好像有点长

659
00:21:49,000 --> 00:21:49,000
OK 这样吧

660
00:21:50,000 --> 00:21:50,000
呃

661
00:21:50,000 --> 00:21:51,000
这是一位

662
00:21:51,000 --> 00:21:53,000
啊也是在加拿大的一个

663
00:21:54,000 --> 00:21:54,000
呃

664
00:21:54,000 --> 00:21:55,000
女听众

665
00:21:55,000 --> 00:21:57,000
哎不容易我们节目期下多了那么多女听众

666
00:21:57,000 --> 00:21:59,000
真的感谢沐瑶老师

667
00:21:59,000 --> 00:22:00,000
啊

668
00:22:00,000 --> 00:22:02,000
然后他是在一个

669
00:22:03,000 --> 00:22:03,000
应该是

670
00:22:04,000 --> 00:22:05,000
制药厂做这个统计吧

671
00:22:05,000 --> 00:22:07,000
就是之前我们跟沐瑶讲的那些

672
00:22:07,000 --> 00:22:08,000
讲的很多这个

673
00:22:08,000 --> 00:22:11,000
学统计的同学最后都去了可能制药厂的

674
00:22:12,000 --> 00:22:14,000
然后他说诶为什么会有听

675
00:22:14,000 --> 00:22:17,000
呃我们这个内核恐慌还有 IT 公论呢

676
00:22:17,000 --> 00:22:18,000
啊

677
00:22:18,000 --> 00:22:19,000
因为他有一科

678
00:22:19,000 --> 00:22:21,000
因为我用第一人称的角度来念

679
00:22:21,000 --> 00:22:23,000
因为我有一颗崇拜 IT 人士的心

680
00:22:23,000 --> 00:22:26,000
一想到几行代码就解决很多问题

681
00:22:26,000 --> 00:22:27,000
就感到很酷炫

682
00:22:27,000 --> 00:22:31,000
但无奈自己本科和研究生学都是统计

683
00:22:31,000 --> 00:22:33,000
所以其实你们在播客里面提到的很多东西

684
00:22:34,000 --> 00:22:36,000
自己并不是太能听懂

685
00:22:36,000 --> 00:22:39,000
但是总觉得多听听其实吸收不到技术内容

686
00:22:39,000 --> 00:22:41,000
科普性质的东西还是有所收获的

687
00:22:41,000 --> 00:22:44,000
哎这个其实我觉得我们节目的目的就达到了

688
00:22:44,000 --> 00:22:47,000
就是非常 constructive 的心态

689
00:22:47,000 --> 00:22:50,000
对就是有时候你并不一定收获的是

690
00:22:50,000 --> 00:22:52,000
某一个实质性的东西

691
00:22:52,000 --> 00:22:54,000
你知道你知道有一种东西的存在

692
00:22:54,000 --> 00:22:57,000
或者说有一个概念的存在能够

693
00:22:57,000 --> 00:22:59,000
跟你日常生活中相关或者不那么相关

694
00:22:59,000 --> 00:23:00,000
你能想得到

695
00:23:00,000 --> 00:23:02,000
其实也是我们一个

696
00:23:03,000 --> 00:23:06,000
我们节目的一个成就或者目的之一吧

697
00:23:06,000 --> 00:23:07,000
对

698
00:23:07,000 --> 00:23:08,000
OK 我接着念哈

699
00:23:08,000 --> 00:23:11,000
然后他说呃我两期节目都提到了统计

700
00:23:11,000 --> 00:23:13,000
所以我就想就想跟你们分享一下

701
00:23:14,000 --> 00:23:16,000
如果硬要把统计和编程联系起来

702
00:23:16,000 --> 00:23:18,000
那么我现在的职业就是完美的结合

703
00:23:18,000 --> 00:23:22,000
他这个 job title 就是职位的名称叫做

704
00:23:22,000 --> 00:23:23,000
statistical programmer

705
00:23:24,000 --> 00:23:26,000
或者叫做 sas programmer

706
00:23:26,000 --> 00:23:28,000
呃 clinical

707
00:23:28,000 --> 00:23:28,000
clinical programmer

708
00:23:28,000 --> 00:23:29,000
这个应该是

709
00:23:29,000 --> 00:23:31,000
SIS 应该是一个软件吧

710
00:23:31,000 --> 00:23:33,000
是一个统计用的专业是一个统计软件

711
00:23:33,000 --> 00:23:34,000
对啊对没错

712
00:23:35,000 --> 00:23:37,000
然后这些都是对相关职位的不同说法

713
00:23:37,000 --> 00:23:39,000
虽然我们叫 programmer

714
00:23:39,000 --> 00:23:41,000
但其实一般药厂或者是

715
00:23:41,000 --> 00:23:44,000
呃我不知道这个 CRO 公司是什么东西

716
00:23:44,000 --> 00:23:44,000
anyway

717
00:23:45,000 --> 00:23:47,000
或者是这个公司的程序员的 sas

718
00:23:47,000 --> 00:23:49,000
编程的技能只是工作了一部分

719
00:23:50,000 --> 00:23:52,000
对统计知识的了解和一些这个

720
00:23:52,000 --> 00:23:55,000
呃就是 clinical 的知识的了解是需要

721
00:23:55,000 --> 00:23:58,000
这就是我们今天讲的所谓的专业知识嘛

722
00:23:58,000 --> 00:23:59,000
啊 domain knowledge

723
00:24:00,000 --> 00:24:01,000
然后他就接着说哈

724
00:24:01,000 --> 00:24:04,000
他说很多项目里面数据集需要十几个 G

725
00:24:04,000 --> 00:24:06,000
是很正常的是很常见的事情

726
00:24:07,000 --> 00:24:10,000
但是我作为一个刚工作不久的程序员来说

727
00:24:10,000 --> 00:24:13,000
貌似对如何优化程序考虑的还不是很多

728
00:24:13,000 --> 00:24:16,000
对就是说他的工作中的一些情况

729
00:24:16,000 --> 00:24:18,000
其实还挺有意思的

730
00:24:18,000 --> 00:24:21,000
就是说我们之前想的说啊那学统计的

731
00:24:21,000 --> 00:24:24,000
这个同学到了药厂去工作的时候用些什么东西

732
00:24:24,000 --> 00:24:27,000
他就提到了像 sas 啊这些东西去做分析

733
00:24:27,000 --> 00:24:28,000
嗯哼

734
00:24:28,000 --> 00:24:30,000
其实他这个也反映出来一个问题啊

735
00:24:30,000 --> 00:24:32,000
就是说像他们学统计的话

736
00:24:32,000 --> 00:24:35,000
并没有一个从像这种就是 computer science

737
00:24:35,000 --> 00:24:36,000
这种训练

738
00:24:36,000 --> 00:24:38,000
这样他们在很多时候对这个工具

739
00:24:38,000 --> 00:24:41,000
底层的一些实现可能不是特别了解

740
00:24:41,000 --> 00:24:42,000
然后他提到如果你的数据集

741
00:24:42,000 --> 00:24:44,000
比较大的话他现在还好

742
00:24:44,000 --> 00:24:46,000
可能是十几个 G 还行

743
00:24:46,000 --> 00:24:49,000
如果你到了以后假设我们有更多的

744
00:24:49,000 --> 00:24:51,000
像什么有 research kit 这种东西来

745
00:24:51,000 --> 00:24:53,000
统计是更大量的样本的时候

746
00:24:54,000 --> 00:24:56,000
可能这个数据就是 TB 级别了

747
00:24:56,000 --> 00:24:59,000
到时候他们用一些传统的这种统计工具来做

748
00:24:59,000 --> 00:25:00,000
可能就不是特别现实嘛

749
00:25:00,000 --> 00:25:04,000
所以这种人其实也展现也就提现出一个趋势

750
00:25:04,000 --> 00:25:07,000
好就说大数据时代对包括

751
00:25:07,000 --> 00:25:10,000
呃传统的这个学统计或做统计人员

752
00:25:10,000 --> 00:25:11,000
也是有挺大挑战的

753
00:25:11,000 --> 00:25:13,000
他们要去理解什么叫做

754
00:25:13,000 --> 00:25:16,000
我们讲用烂的词就是大数据怎么怎么弄

755
00:25:17,000 --> 00:25:18,000
然后应该要学会各种

756
00:25:18,000 --> 00:25:21,000
处理大数据的工具还是挺

757
00:25:21,000 --> 00:25:23,000
就是还是蛮多挑战的我觉得

758
00:25:23,000 --> 00:25:24,000
对

759
00:25:24,000 --> 00:25:28,000
呃 CRO 是 contract research organization 的所谓

760
00:25:29,000 --> 00:25:31,000
啊就是什么外包研发机构是

761
00:25:31,000 --> 00:25:35,000
对一个 organization that provides support to the

762
00:25:35,000 --> 00:25:39,000
就是对制药厂和生化技术公司

763
00:25:39,000 --> 00:25:41,000
提供外包研究的这么一个机构

764
00:25:42,000 --> 00:25:42,000
嗯哼嗯哼

765
00:25:42,000 --> 00:25:45,000
然后其实刚好我不知道你又听上期那个

766
00:25:45,000 --> 00:25:47,000
IT 工人刚刚讲到这个 research kit

767
00:25:48,000 --> 00:25:51,000
我听到我听到他那个声音好好激动

768
00:25:51,000 --> 00:25:54,000
哈哈哈哈这个等一下再说

769
00:25:54,000 --> 00:25:57,000
呃就他们那期提到我我其实改想还蛮多的

770
00:25:57,000 --> 00:26:01,000
其实从呃这个我们从这个技术角度来看

771
00:26:01,000 --> 00:26:03,000
还是蛮多挑战刚才讲了没蛮多挑战

772
00:26:03,000 --> 00:26:06,000
比如说以后要有更多的这种

773
00:26:06,000 --> 00:26:09,000
就是 IT 技术的介入去做这些像他们叫做什么

774
00:26:09,000 --> 00:26:10,000
clinical trial 叫什么

775
00:26:10,000 --> 00:26:12,000
呃要的实验对吧

776
00:26:12,000 --> 00:26:14,000
临床实验对临床实验

777
00:26:14,000 --> 00:26:17,000
那么你要去制定相关的软件啊

778
00:26:17,000 --> 00:26:19,000
那可能传统上你用一些什么表格

779
00:26:19,000 --> 00:26:21,000
或者这种那个传统的统计工具就能够实现了

780
00:26:21,000 --> 00:26:23,000
那现在你要你要做一个 app

781
00:26:23,000 --> 00:26:25,000
然后 app 你要收集数据

782
00:26:25,000 --> 00:26:27,000
然后后台要在某一个

783
00:26:27,000 --> 00:26:29,000
什么可能云服务的平台里面上去跑

784
00:26:29,000 --> 00:26:31,000
跑完结果你要存储起来

785
00:26:31,000 --> 00:26:33,000
然后再怎么利用对吧

786
00:26:33,000 --> 00:26:36,000
其实就可能可以很明显的看到

787
00:26:36,000 --> 00:26:40,000
这方面的就对这个能够监头叫什么

788
00:26:40,000 --> 00:26:43,000
金同时精通这种计算机

789
00:26:43,000 --> 00:26:46,000
和这种跟一个串的那种专业知识的人才的时候

790
00:26:46,000 --> 00:26:48,000
肯定是一个呃

791
00:26:48,000 --> 00:26:49,000
缺口吧

792
00:26:49,000 --> 00:26:50,000
对

793
00:26:50,000 --> 00:26:54,000
但是从另外一个侧面我又想起了莫洋那期说到了

794
00:26:55,000 --> 00:26:57,000
我们这是每一期都可以说的莫洋那期

795
00:26:58,000 --> 00:26:59,000
就是

796
00:27:00,000 --> 00:27:01,000
工具不好用这个问题

797
00:27:01,000 --> 00:27:02,000
我觉得

798
00:27:02,000 --> 00:27:06,000
如果说一个人可以

799
00:27:06,000 --> 00:27:09,000
使用一种类似于嗯

800
00:27:09,000 --> 00:27:11,000
gameify 的

801
00:27:11,000 --> 00:27:14,000
编程工具来完成这一切的话

802
00:27:14,000 --> 00:27:15,000
可能会让事情容易很多

803
00:27:16,000 --> 00:27:16,000
嗯哼

804
00:27:16,000 --> 00:27:17,000
呃

805
00:27:17,000 --> 00:27:18,000
比如说

806
00:27:18,000 --> 00:27:21,000
有些游戏真的就好像在编程一样

807
00:27:21,000 --> 00:27:21,000
比如说

808
00:27:21,000 --> 00:27:22,000
呃

809
00:27:22,000 --> 00:27:24,000
有曾经有个游戏叫什么

810
00:27:24,000 --> 00:27:25,000
不可思议的机器

811
00:27:26,000 --> 00:27:27,000
这是干嘛

812
00:27:27,000 --> 00:27:27,000
呃

813
00:27:27,000 --> 00:27:29,000
impossible machine 应该是叫

814
00:27:29,000 --> 00:27:31,000
就是他给你一大堆

815
00:27:31,000 --> 00:27:31,000
呃

816
00:27:31,000 --> 00:27:33,000
预制的

817
00:27:33,000 --> 00:27:34,000
组件

818
00:27:34,000 --> 00:27:35,000
比如说什么

819
00:27:35,000 --> 00:27:36,000
呃

820
00:27:36,000 --> 00:27:37,000
导轨啊

821
00:27:37,000 --> 00:27:38,000
球啊

822
00:27:38,000 --> 00:27:39,000
气球啊

823
00:27:39,000 --> 00:27:40,000
锤子啊

824
00:27:40,000 --> 00:27:42,000
或者什么笼子里的老鼠啊之类的

825
00:27:42,000 --> 00:27:44,000
然后你把它们以某种形式

826
00:27:45,000 --> 00:27:45,000
呃

827
00:27:45,000 --> 00:27:46,000
连接起来

828
00:27:46,000 --> 00:27:48,000
比如说让球滚过导轨

829
00:27:48,000 --> 00:27:50,000
砸到一个什么东西上

830
00:27:50,000 --> 00:27:51,000
然后那东西连着一个剪刀

831
00:27:51,000 --> 00:27:53,000
剪刀把线剪断

832
00:27:53,000 --> 00:27:54,000
然后呃

833
00:27:55,000 --> 00:27:57,000
线本来拴着一个笼子

834
00:27:57,000 --> 00:27:59,000
然后笼子里的老鼠被惊动开始跑

835
00:27:59,000 --> 00:28:01,000
会带着笼子一起跑

836
00:28:01,000 --> 00:28:02,000
然后这笼子转了什么东西

837
00:28:02,000 --> 00:28:04,000
很多动画片里面的场景啊那种

838
00:28:04,000 --> 00:28:05,000
对

839
00:28:05,000 --> 00:28:07,000
有一个专门的词来形容这种

840
00:28:07,000 --> 00:28:07,000
呃

841
00:28:07,000 --> 00:28:08,000
花费很多

842
00:28:09,000 --> 00:28:13,000
费劲周章来完成一些微不足道的事情的

843
00:28:13,000 --> 00:28:15,000
就是说这种装置是什么装置

844
00:28:15,000 --> 00:28:16,000
忘了

845
00:28:16,000 --> 00:28:16,000
忘了一次

846
00:28:16,000 --> 00:28:17,000
但是

847
00:28:17,000 --> 00:28:18,000
大概是这样一种东西

848
00:28:18,000 --> 00:28:19,000
就是

849
00:28:19,000 --> 00:28:21,000
我的意思是如果有一种

850
00:28:21,000 --> 00:28:25,000
编程工具能够让人们以类似的方式

851
00:28:25,000 --> 00:28:25,000
把

852
00:28:26,000 --> 00:28:27,000
逻辑组件拼装在一起

853
00:28:27,000 --> 00:28:28,000
然后

854
00:28:29,000 --> 00:28:30,000
以某种可视化

855
00:28:30,000 --> 00:28:32,000
乃至于可以触碰和

856
00:28:33,000 --> 00:28:35,000
视觉化的方式来

857
00:28:35,000 --> 00:28:37,000
处理他们的数据的话

858
00:28:37,000 --> 00:28:41,000
嗯可能整个工作效率和

859
00:28:41,000 --> 00:28:42,000
呃

860
00:28:43,000 --> 00:28:44,000
工作效率和提升

861
00:28:44,000 --> 00:28:47,000
然后随时曲线会会急速下降

862
00:28:47,000 --> 00:28:48,000
就我不太

863
00:28:48,000 --> 00:28:51,000
我不知道啊刚刚你说那种可能对于教学还可以

864
00:28:51,000 --> 00:28:53,000
但是你一旦到了实际生产应用的时候

865
00:28:53,000 --> 00:28:54,000
你要考虑

866
00:28:54,000 --> 00:28:55,000
这个效率的问题

867
00:28:55,000 --> 00:28:56,000
有可能很多

868
00:28:57,000 --> 00:28:59,000
这个所谓的底层底层的抽象

869
00:28:59,000 --> 00:29:02,000
你是没有办法真正的

870
00:29:02,000 --> 00:29:03,000
隐藏起来的

871
00:29:03,000 --> 00:29:04,000
就是就像

872
00:29:04,000 --> 00:29:06,000
就像我以前说过就是有些可能

873
00:29:07,000 --> 00:29:08,000
非常

874
00:29:08,000 --> 00:29:09,000
呃

875
00:29:09,000 --> 00:29:10,000
不能

876
00:29:10,000 --> 00:29:13,000
图像化的东西是没有办法强迫他去图像化

877
00:29:13,000 --> 00:29:14,000
但是反过来说比如说

878
00:29:15,000 --> 00:29:16,000
呃 maclab

879
00:29:16,000 --> 00:29:18,000
sim-link

880
00:29:18,000 --> 00:29:20,000
那个里面已经有很多拖拖拽拽

881
00:29:20,000 --> 00:29:23,000
然后就可以完成一系列硬件设计的工作的

882
00:29:23,000 --> 00:29:24,000
嗯哼

883
00:29:24,000 --> 00:29:25,000
这样一种可能性了

884
00:29:25,000 --> 00:29:26,000
那

885
00:29:26,000 --> 00:29:29,000
我看不出什么理由在至少你那些比较

886
00:29:30,000 --> 00:29:32,000
低级的什么打开文件或者是

887
00:29:33,000 --> 00:29:33,000
把文件

888
00:29:33,000 --> 00:29:34,000
呃

889
00:29:34,000 --> 00:29:36,000
叫什么洗净文件

890
00:29:36,000 --> 00:29:37,000
洗净数据这个过程

891
00:29:37,000 --> 00:29:37,000
嗯

892
00:29:37,000 --> 00:29:38,000
是可以

893
00:29:38,000 --> 00:29:40,000
可以某种方式

894
00:29:40,000 --> 00:29:41,000
呃

895
00:29:41,000 --> 00:29:41,000
视觉化的

896
00:29:42,000 --> 00:29:42,000
嗯

897
00:29:42,000 --> 00:29:45,000
其实现在我觉得看起码你说这个工具

898
00:29:45,000 --> 00:29:48,000
就对面对大数据这个理念

899
00:29:48,000 --> 00:29:49,000
他工具的不成熟

900
00:29:49,000 --> 00:29:51,000
其实也是蛮显而易见的吧

901
00:29:51,000 --> 00:29:54,000
呃之前大家用了很久那个什么 MapReduce

902
00:29:54,000 --> 00:29:56,000
那种框架什么 Hadoop 之类的

903
00:29:56,000 --> 00:29:57,000
现在有什么叫 Spark

904
00:29:57,000 --> 00:30:00,000
我看到有一个新的比较火热的东西

905
00:30:00,000 --> 00:30:01,000
啊 Patch Spark 还是

906
00:30:02,000 --> 00:30:03,000
对对就那个

907
00:30:03,000 --> 00:30:03,000
OK

908
00:30:03,000 --> 00:30:05,000
对但其实这些来说

909
00:30:05,000 --> 00:30:08,000
你从不管他本来也是自己自己在不断演进中

910
00:30:08,000 --> 00:30:10,000
然后对于对于使用者来讲

911
00:30:10,000 --> 00:30:12,000
还是要看很多这种东西才能够理解

912
00:30:12,000 --> 00:30:15,000
甚至能才能够搭建这么一个平台起来

913
00:30:15,000 --> 00:30:16,000
呃

914
00:30:16,000 --> 00:30:18,000
所以也说不好可能以后的

915
00:30:18,000 --> 00:30:21,000
途径是类似于像那个

916
00:30:21,000 --> 00:30:22,000
像类似于 Amazon

917
00:30:22,000 --> 00:30:25,000
他提供那种 AWS 里面有这种类似的服务嘛

918
00:30:25,000 --> 00:30:27,000
你就不用花钱去

919
00:30:27,000 --> 00:30:29,000
呃你不用去想他底层是怎么去构建这个系统的

920
00:30:29,000 --> 00:30:30,000
你只要

921
00:30:30,000 --> 00:30:33,000
按这个处理能力来花费这个

922
00:30:33,000 --> 00:30:34,000
处理数据就好了

923
00:30:34,000 --> 00:30:36,000
可能这也是一种一种解吧我觉得

924
00:30:37,000 --> 00:30:37,000
OK

925
00:30:37,000 --> 00:30:39,000
呃但不管怎么说

926
00:30:39,000 --> 00:30:40,000
这里面始终是一个

927
00:30:40,000 --> 00:30:43,000
呃相对来说比较新鲜的领域嘛

928
00:30:43,000 --> 00:30:44,000
那么他的

929
00:30:44,000 --> 00:30:45,000
各种不成熟啊

930
00:30:45,000 --> 00:30:46,000
各种范式的

931
00:30:46,000 --> 00:30:47,000
不清晰

932
00:30:47,000 --> 00:30:49,000
我觉得是一个可能

933
00:30:49,000 --> 00:30:50,000
在这个阶段

934
00:30:51,000 --> 00:30:52,000
难免的事情

935
00:30:52,000 --> 00:30:52,000
嗯

936
00:30:53,000 --> 00:30:56,000
嗯呃新兴领域总是会遇到这样的问题

937
00:30:56,000 --> 00:30:57,000
对

938
00:30:57,000 --> 00:30:57,000
没错

939
00:30:58,000 --> 00:31:01,000
那接下来我再读另外一篇读者来信

940
00:31:01,000 --> 00:31:03,000
呃这篇稍微长一点

941
00:31:03,000 --> 00:31:04,000
嗨

942
00:31:04,000 --> 00:31:04,000
瑞无涛

943
00:31:04,000 --> 00:31:08,000
今天听到 kernel panic 要做一期数据的 podcast

944
00:31:08,000 --> 00:31:08,000
很是激动

945
00:31:09,000 --> 00:31:11,000
因为从做博士到现在博士后

946
00:31:11,000 --> 00:31:14,000
还都是一直在做数据挖掘和机器学习

947
00:31:14,000 --> 00:31:17,000
所以也算是一直在跟数据打交道

948
00:31:17,000 --> 00:31:18,000
和你们分享一下自己的见解吧

949
00:31:18,000 --> 00:31:21,000
不知道会不会有两两千两百次我经历

950
00:31:22,000 --> 00:31:23,000
呃

951
00:31:24,000 --> 00:31:26,000
我的博士是在大连海市大学读的

952
00:31:26,000 --> 00:31:27,000
读了有五年吧

953
00:31:27,000 --> 00:31:29,000
因为花了很长时间给老板做项目

954
00:31:29,000 --> 00:31:30,000
而且老板也不给定题目

955
00:31:30,000 --> 00:31:34,000
所以花了很长时间学习机器学习的方方面面

956
00:31:34,000 --> 00:31:36,000
最后选定了当时

957
00:31:36,000 --> 00:31:38,000
也就是 2009 年很热门的一个题目

958
00:31:38,000 --> 00:31:39,000
topic model

959
00:31:39,000 --> 00:31:41,000
作为博士题目

960
00:31:41,000 --> 00:31:43,000
topic model 简单简单的说

961
00:31:43,000 --> 00:31:46,000
就是能从大规模的文本数据之中

962
00:31:46,000 --> 00:31:49,000
自动找到涉及的主题的一类算法

963
00:31:49,000 --> 00:31:51,000
因为是 unsupervised 的算法

964
00:31:51,000 --> 00:31:52,000
也就是说

965
00:31:52,000 --> 00:31:55,000
在没有任何人工鲜艳知识加入的情况下

966
00:31:55,000 --> 00:31:57,000
就会学习到的一些知识

967
00:31:57,000 --> 00:31:58,000
所以当时我觉得还是很酷的

968
00:31:59,000 --> 00:32:01,000
可以说在 topic model 之前

969
00:32:01,000 --> 00:32:04,000
机器学习领域对于 supervised 的模型

970
00:32:04,000 --> 00:32:05,000
研究的比较多

971
00:32:05,000 --> 00:32:07,000
也产生了很多经典算法

972
00:32:07,000 --> 00:32:08,000
比如神经网络啊

973
00:32:08,000 --> 00:32:10,000
支持向亮机啊

974
00:32:10,000 --> 00:32:11,000
集成学习啊

975
00:32:11,000 --> 00:32:12,000
等等等等

976
00:32:12,000 --> 00:32:16,000
这些都是用来分类数据或者做预测的

977
00:32:16,000 --> 00:32:18,000
需要训练数据

978
00:32:18,000 --> 00:32:22,000
都带有人工事先标好的类标才能 work

979
00:32:22,000 --> 00:32:23,000
anyway

980
00:32:23,000 --> 00:32:24,000
好像有些扯远了

981
00:32:24,000 --> 00:32:27,000
我想说的是数据还是很有类的

982
00:32:27,000 --> 00:32:28,000
很有很有

983
00:32:29,000 --> 00:32:30,000
等等

984
00:32:32,000 --> 00:32:32,000
anyway

985
00:32:32,000 --> 00:32:34,000
好像有点扯远了

986
00:32:34,000 --> 00:32:37,000
我想说的是数据还是很有趣的一类研究

987
00:32:37,000 --> 00:32:39,000
不管是文字还是视觉

988
00:32:39,000 --> 00:32:41,000
想必你们每天也多少

989
00:32:42,000 --> 00:32:43,000
会感受到

990
00:32:43,000 --> 00:32:46,000
而且在上一期大神上过节目之后

991
00:32:46,000 --> 00:32:47,000
这个感受会更加的明显

992
00:32:48,000 --> 00:32:50,000
对于数据和编程方面

993
00:32:50,000 --> 00:32:53,000
我觉得尤其是数据挖掘和机器学习

994
00:32:53,000 --> 00:32:56,000
包括自然语言处理以及机器视觉

995
00:32:56,000 --> 00:32:58,000
其实在编程方面都比较初级

996
00:32:58,000 --> 00:33:02,000
一般人在选择编程语言上都是 follow suit

997
00:33:02,000 --> 00:33:04,000
如果一个实验室的传统是 matlab

998
00:33:04,000 --> 00:33:05,000
那么就有 matlab

999
00:33:05,000 --> 00:33:08,000
一来有问题能够找到人问

1000
00:33:08,000 --> 00:33:10,000
二来师兄师姐的代码可以参考

1001
00:33:11,000 --> 00:33:13,000
这个情况在国内仍旧非常普遍

1002
00:33:13,000 --> 00:33:16,000
还有一个原因就是国内对于盗版的纵容态度

1003
00:33:16,000 --> 00:33:18,000
我觉得国内大学里面的实验室

1004
00:33:18,000 --> 00:33:21,000
没有几个会花钱买 matlab 死柜的授权

1005
00:33:22,000 --> 00:33:24,000
而这个状况将会一直持续着

1006
00:33:24,000 --> 00:33:26,000
我的依据就是到现在为止

1007
00:33:26,000 --> 00:33:29,000
每天在知乎上邀请我回答 matlab 的问题还是很多

1008
00:33:30,000 --> 00:33:31,000
这个话题应该就很活跃

1009
00:33:32,000 --> 00:33:34,000
话说 matlab 并不是一个很好的语言

1010
00:33:34,000 --> 00:33:36,000
而且作为一个碧源厂商的

1011
00:33:36,000 --> 00:33:39,000
产品代码本身并不适合流传

1012
00:33:39,000 --> 00:33:41,000
但是在最近几年在文本领域

1013
00:33:41,000 --> 00:33:43,000
使用 python 的越来越多了

1014
00:33:43,000 --> 00:33:45,000
因为毕竟 This is the right thing to do

1015
00:33:46,000 --> 00:33:48,000
当然 java 和 ce 也有一定的规模

1016
00:33:49,000 --> 00:33:53,000
不过最近 python 在学术领域是一天天活起来了

1017
00:33:53,000 --> 00:33:56,000
其实在学术圈里面对于编程语言的选择

1018
00:33:56,000 --> 00:33:58,000
除非有特别的偏好

1019
00:33:58,000 --> 00:33:59,000
基本上都是一种被动的态度

1020
00:34:00,000 --> 00:34:03,000
要么是某些 project 要求使用某种编程语言

1021
00:34:03,000 --> 00:34:06,000
某些是沿袭的习惯而已

1022
00:34:07,000 --> 00:34:07,000
OK

1023
00:34:07,000 --> 00:34:11,000
the point is 编程语言对于解决学术问题的影响

1024
00:34:11,000 --> 00:34:13,000
可以说是几乎没有影响

1025
00:34:14,000 --> 00:34:19,000
这个有一个因素是评价学术论文的体系是 peer review

1026
00:34:19,000 --> 00:34:21,000
而 peer review 很少会去看代码

1027
00:34:21,000 --> 00:34:24,000
最近倒是很多论文会在 github 上开源自己的代码

1028
00:34:24,000 --> 00:34:27,000
在有 github 之前都是给作者发邮件

1029
00:34:27,000 --> 00:34:28,000
第三下四的求

1030
00:34:28,000 --> 00:34:30,000
至于给不给完全是看作者的心情

1031
00:34:31,000 --> 00:34:35,000
不给咱也不能爬过网线去掐死人就不是

1032
00:34:37,000 --> 00:34:41,000
well 上面的简解都是来自于一所国内二流大学的博士

1033
00:34:41,000 --> 00:34:43,000
这个听众你实在是太险俱了

1034
00:34:43,000 --> 00:34:50,000
我看你的邮箱是 mtu.edu.sg

1035
00:34:50,000 --> 00:34:52,000
所以应该是南洋理工的朋友

1036
00:34:53,000 --> 00:34:59,000
这位听众在来信里面提到一些可以推荐上我们节目的嘉宾

1037
00:35:01,000 --> 00:35:02,000
就像我们已经说了

1038
00:35:02,000 --> 00:35:05,000
我们可能没有人脉能请到这些人

1039
00:35:05,000 --> 00:35:08,000
但是至少现在还没有

1040
00:35:08,000 --> 00:35:12,000
也许等到我们能够做出点名声来了

1041
00:35:13,000 --> 00:35:16,000
也许邀请的时候门卡会低一些

1042
00:35:17,000 --> 00:35:20,000
不过他里面来信里面提到一些事情就还挺有意思的

1043
00:35:20,000 --> 00:35:23,000
比如说他说技术的路径依赖的事情

1044
00:35:23,000 --> 00:35:24,000
我觉得还挺有意思

1045
00:35:26,000 --> 00:35:28,000
就好像其实你任何一个公司一样

1046
00:35:28,000 --> 00:35:28,000
对吧

1047
00:35:28,000 --> 00:35:31,000
你公司的技术选型很多时候还是得靠

1048
00:35:31,000 --> 00:35:34,000
你看你现有的人的技术水平

1049
00:35:34,000 --> 00:35:38,000
或者说他熟悉的技术叫做 tech stack 是怎么样子

1050
00:35:38,000 --> 00:35:41,000
然后另外就是看你有没有什么所谓历史一流的代码

1051
00:35:41,000 --> 00:35:44,000
是一个什么样的环境或者语言写的

1052
00:35:44,000 --> 00:35:48,000
很大程度上你也会受那个的影响或者说是绑架

1053
00:35:49,000 --> 00:35:50,000
make sense

1054
00:35:50,000 --> 00:35:51,000
就是我觉得有时候可能我们

1055
00:35:53,000 --> 00:35:56,000
大学毕业的时候已经懂那么两三百人远的人

1056
00:35:56,000 --> 00:36:00,000
会有一种莫名其妙的成见

1057
00:36:00,000 --> 00:36:03,000
就是完全没有在业界摸爬滚打过的人

1058
00:36:04,000 --> 00:36:10,000
一离开学院就开始脏痞别人使用的工具

1059
00:36:11,000 --> 00:36:14,000
可能我不知道这是不是学技能积累的特例

1060
00:36:15,000 --> 00:36:19,000
但我觉得这种态度其实是有时候是需要反省一下

1061
00:36:19,000 --> 00:36:21,000
我先提个小问题

1062
00:36:21,000 --> 00:36:25,000
吴涛同学作为你这种长期的 Java 黑你怎么看这件事

1063
00:36:31,000 --> 00:36:31,000
这边有个问题

1064
00:36:32,000 --> 00:36:32,000
张文问这个的

1065
00:36:32,000 --> 00:36:37,000
就说我们这个节目或者是包括 IT 功能对安卓

1066
00:36:37,000 --> 00:36:39,000
或者对 Java 都有这个成见你怎么看

1067
00:36:40,000 --> 00:36:40,000
来

1068
00:36:41,000 --> 00:36:42,000
袁芳你怎么看

1069
00:36:45,000 --> 00:36:53,000
我觉得我对这样的成见不是在踏出校门的时候就有了

1070
00:36:53,000 --> 00:36:56,000
我对这样的成见是正儿八经的

1071
00:36:56,000 --> 00:37:02,000
用它赚过一段时间的工资之后才开始有的

1072
00:37:03,000 --> 00:37:06,000
所以是毕业后就工作中形成的

1073
00:37:07,000 --> 00:37:07,000
对

1074
00:37:11,000 --> 00:37:13,000
当然也有一个可能就是我

1075
00:37:14,000 --> 00:37:22,000
在我入门的 object-oriented 语言是 C-sharp

1076
00:37:23,000 --> 00:37:34,000
而 Java 在语言的特性层面上是完全不如 C-sharp

1077
00:37:35,000 --> 00:37:36,000
我觉得这点可以是公认的

1078
00:37:36,000 --> 00:37:39,000
就是 C-sharp 作为从语言设计的一个角度来讲

1079
00:37:39,000 --> 00:37:42,000
它是一个比 Java 好得多的一个语言

1080
00:37:42,000 --> 00:37:43,000
对

1081
00:37:43,000 --> 00:37:49,000
就是 Java 程序员基本上最能作为反驳的一条论句就是

1082
00:37:49,000 --> 00:37:50,000
学 Java 有工作

1083
00:37:50,000 --> 00:37:53,000
不管你说什么他都可以说学 Java 有工作

1084
00:37:54,000 --> 00:37:55,000
没错这是事实

1085
00:37:57,000 --> 00:38:01,000
但是公平的好吧

1086
00:38:01,000 --> 00:38:02,000
公平是没有标准的

1087
00:38:03,000 --> 00:38:10,000
我觉得我们节目对于 Java 的成见是一种非常

1088
00:38:13,000 --> 00:38:18,000
不管你怎么说就是要成见的成见

1089
00:38:18,000 --> 00:38:22,000
我刚才想说李克忠但是何必呢

1090
00:38:22,000 --> 00:38:24,000
我觉得节目是要有见解的

1091
00:38:25,000 --> 00:38:30,000
我不能说因为反正我又没有拿 Oracle 的钱

1092
00:38:30,000 --> 00:38:32,000
为什么一定要替他说好话呢

1093
00:38:32,000 --> 00:38:34,000
我就是觉得他长得丑对吧

1094
00:38:34,000 --> 00:38:34,000
对

1095
00:38:36,000 --> 00:38:40,000
你喜欢或者讨厌美语言你可以完全没有理由

1096
00:38:40,000 --> 00:38:41,000
而更何况我们是有理由的

1097
00:38:43,000 --> 00:38:44,000
不喜欢就不喜欢呗

1098
00:38:44,000 --> 00:38:49,000
那有那么多人拿着 Java 显着的程序

1099
00:38:49,000 --> 00:38:54,000
有那么多巨大的公司拿 Java 做那么伟大的事情

1100
00:38:55,000 --> 00:38:58,000
我们可以反过来说 so what

1101
00:39:00,000 --> 00:39:02,000
Facebook 还是用 PHP 写出来的

1102
00:39:02,000 --> 00:39:03,000
so what

1103
00:39:03,000 --> 00:39:05,000
Php 照样是一名蠢得要死的人

1104
00:39:06,000 --> 00:39:07,000
还是有人会站出来说

1105
00:39:07,000 --> 00:39:12,000
你没有看到 Php 的人的社区有多努力

1106
00:39:12,000 --> 00:39:12,000
是啊

1107
00:39:12,000 --> 00:39:14,000
他们多努力 so what

1108
00:39:14,000 --> 00:39:15,000
补坑

1109
00:39:16,000 --> 00:39:17,000
人长得丑努力有什么用

1110
00:39:17,000 --> 00:39:22,000
不是人长得丑就要后天多努力吗

1111
00:39:22,000 --> 00:39:24,000
你这样多打击人家的信息

1112
00:39:27,000 --> 00:39:29,000
反正 Php 和 Java 的流行程度

1113
00:39:29,000 --> 00:39:33,000
不会因为我们在这边说几句疯狂话就消退对吧

1114
00:39:33,000 --> 00:39:34,000
然后

1115
00:39:35,000 --> 00:39:36,000
你该用还得用

1116
00:39:36,000 --> 00:39:37,000
你没事吐吐槽

1117
00:39:37,000 --> 00:39:39,000
我们没事吐吐槽就受伤

1118
00:39:39,000 --> 00:39:44,000
无论我们说多么酸多么激愤多么咽语的话

1119
00:39:44,000 --> 00:39:46,000
照样还是有人会冷笑一声

1120
00:39:46,000 --> 00:39:48,000
然后继续学着他吃饭对吧

1121
00:39:49,000 --> 00:39:51,000
我们也不能懒着你

1122
00:39:52,000 --> 00:39:54,000
就刚才听众来信里面他还提到说

1123
00:39:54,000 --> 00:39:59,000
最近几年在文本处理这个领域使用 Python 做研究

1124
00:39:59,000 --> 00:40:00,000
越来越多了

1125
00:40:00,000 --> 00:40:02,000
他说毕竟这是对的事

1126
00:40:02,000 --> 00:40:03,000
其实这点我还挺好奇的

1127
00:40:03,000 --> 00:40:06,000
为什么这个会是一个对的事

1128
00:40:06,000 --> 00:40:07,000
因为在文本处理

1129
00:40:08,000 --> 00:40:09,000
如果说错了各位听众

1130
00:40:09,000 --> 00:40:12,000
我欢迎你纠正我就是在 NLP 这一块

1131
00:40:12,000 --> 00:40:15,000
因为我当时曾经想要去考

1132
00:40:15,000 --> 00:40:18,000
再考 NLP 的硕士

1133
00:40:19,000 --> 00:40:20,000
所以我大概看过一阵

1134
00:40:20,000 --> 00:40:22,000
就是 NLP 这个领域

1135
00:40:22,000 --> 00:40:26,000
在 2008 年左右

1136
00:40:27,000 --> 00:40:30,000
基本上 de facto 的工具只有两种

1137
00:40:30,000 --> 00:40:32,000
就是 Pearl 或者 Python

1138
00:40:34,000 --> 00:40:36,000
如果你要两害相权去齐清的话

1139
00:40:36,000 --> 00:40:39,000
我觉得任何一个理智的人都会选 Python

1140
00:40:39,000 --> 00:40:42,000
Python 现在基本上已经快死粉了

1141
00:40:42,000 --> 00:40:43,000
我觉得

1142
00:40:43,000 --> 00:40:44,000
对

1143
00:40:44,000 --> 00:40:48,000
我很少有看到新项目还是在用 Pearl 写

1144
00:40:48,000 --> 00:40:51,000
Pearl 基本上是在你没有得选的时候

1145
00:40:51,000 --> 00:40:55,000
我之前可能说过有一个电源厂商

1146
00:40:55,000 --> 00:40:56,000
送了一个电源来

1147
00:40:56,000 --> 00:40:58,000
然后这个电源的 API 是用

1148
00:40:58,000 --> 00:41:01,000
这个电源的接口是 Pearl 接口

1149
00:41:02,000 --> 00:41:03,000
然后除此之外

1150
00:41:03,000 --> 00:41:06,000
我再也没有在过去的五年里面接触过

1151
00:41:06,000 --> 00:41:07,000
任何其他 Pearl 程序

1152
00:41:10,000 --> 00:41:12,000
好像算是接触到一个 Linux 的

1153
00:41:12,000 --> 00:41:14,000
它的 API 的客户端件是用 Pearl 写的

1154
00:41:15,000 --> 00:41:18,000
然后安装过程就酸爽

1155
00:41:19,000 --> 00:41:22,000
装一下要装可能一两百个 Elay

1156
00:41:24,000 --> 00:41:25,000
Pearl 有时候还是很有用的

1157
00:41:25,000 --> 00:41:26,000
比如说什么

1158
00:41:26,000 --> 00:41:28,000
它那个 Cpan 吧

1159
00:41:28,000 --> 00:41:30,000
那个还是很厉害的

1160
00:41:30,000 --> 00:41:33,000
但我觉得 Pearl 对于我来说最常用的

1161
00:41:33,000 --> 00:41:35,000
最大的用处就是替换

1162
00:41:35,000 --> 00:41:40,000
那个 Linux 平台下面

1163
00:41:40,000 --> 00:41:41,000
就是作为 Linux 平台下面

1164
00:41:41,000 --> 00:41:45,000
最托手的一个文本

1165
00:41:45,000 --> 00:41:47,000
查找替换工具

1166
00:41:47,000 --> 00:41:51,000
因为 Pearl 振作表达是很好

1167
00:41:51,000 --> 00:41:52,000
然后

1168
00:41:52,000 --> 00:41:52,000
开玩笑

1169
00:41:52,000 --> 00:41:54,000
那个大部分的振作表达的标准

1170
00:41:54,000 --> 00:41:55,000
都是从那里来的

1171
00:41:57,000 --> 00:41:59,000
叫什么 Pearl Compatible Regular Expression

1172
00:41:59,000 --> 00:42:00,000
对

1173
00:42:01,000 --> 00:42:02,000
PCRE

1174
00:42:02,000 --> 00:42:03,000
对 PCRE

1175
00:42:04,000 --> 00:42:06,000
说哪

1176
00:42:06,000 --> 00:42:07,000
对

1177
00:42:07,000 --> 00:42:14,000
说 Python 在学术圈是 Rest In To Do

1178
00:42:14,000 --> 00:42:15,000
我觉得是可以理解的

1179
00:42:15,000 --> 00:42:17,000
因为学术圈里面有很多人都在用 Python

1180
00:42:18,000 --> 00:42:20,000
只是自然元素处理

1181
00:42:20,000 --> 00:42:21,000
还包括统计

1182
00:42:22,000 --> 00:42:23,000
包括物理学

1183
00:42:23,000 --> 00:42:24,000
包括生物学

1184
00:42:24,000 --> 00:42:28,000
比如说那个

1185
00:42:29,000 --> 00:42:30,000
就不说名字了

1186
00:42:30,000 --> 00:42:32,000
反正就是在这边读过是一个

1187
00:42:33,000 --> 00:42:34,000
生物学女博士

1188
00:42:34,000 --> 00:42:37,000
说她去参加 Metalab 的培训

1189
00:42:37,000 --> 00:42:38,000
然后她们导师说

1190
00:42:38,000 --> 00:42:39,000
你要去就去吧

1191
00:42:42,000 --> 00:42:45,000
是给他们培训 Metalab 的导师

1192
00:42:45,000 --> 00:42:46,000
跟他们说

1193
00:42:46,000 --> 00:42:48,000
虽然我在教你们 Metalab

1194
00:42:49,000 --> 00:42:51,000
但是平时如果真的要遇到这件事情

1195
00:42:51,000 --> 00:42:52,000
我都是用 Python 的

1196
00:42:55,000 --> 00:42:55,000
对

1197
00:42:55,000 --> 00:42:57,000
就 Python 在学术领域

1198
00:42:58,000 --> 00:43:02,000
特别是在这种非 CSS 这个专业方向上

1199
00:43:02,000 --> 00:43:04,000
用的还是蛮多的

1200
00:43:04,000 --> 00:43:06,000
我感觉可能一个是它比较好上手

1201
00:43:06,000 --> 00:43:08,000
与 SAT 相对来说

1202
00:43:08,000 --> 00:43:10,000
比较直观

1203
00:43:10,000 --> 00:43:13,000
不像沐阳老师说的那么多奇怪的分号

1204
00:43:13,000 --> 00:43:15,000
什么的问题

1205
00:43:15,000 --> 00:43:16,000
它靠一个缩进来实现

1206
00:43:17,000 --> 00:43:20,000
然后可能会起码从视觉上

1207
00:43:20,000 --> 00:43:21,000
可能很多人更习惯这一点

1208
00:43:21,000 --> 00:43:25,000
然后他在刚刚也有个路径依赖的问题

1209
00:43:25,000 --> 00:43:27,000
就是最开始那波人用的是这个

1210
00:43:27,000 --> 00:43:32,000
导致后来他有用的一些包裤都是这个写的

1211
00:43:32,000 --> 00:43:34,000
从而久而久之就形成了滚雪球的效应

1212
00:43:35,000 --> 00:43:36,000
对

1213
00:43:36,000 --> 00:43:38,000
再有就是

1214
00:43:39,000 --> 00:43:40,000
Python 在这个领域

1215
00:43:40,000 --> 00:43:42,000
其实以 Python 的角色

1216
00:43:42,000 --> 00:43:44,000
或者说以其特性来说

1217
00:43:44,000 --> 00:43:46,000
和它最相近的可能是 Ruby

1218
00:43:46,000 --> 00:43:51,000
而 Ruby 基本上只是在 Web 应用的圈子里面比较火

1219
00:43:52,000 --> 00:43:56,000
Mats 好像说过

1220
00:43:56,000 --> 00:44:00,000
他希望 Ruby 可以在学术界有所建树

1221
00:44:00,000 --> 00:44:06,000
但是至少我最近没有读到相关的新闻

1222
00:44:06,000 --> 00:44:10,000
就是说 Ruby somehow 能够在学术界

1223
00:44:10,000 --> 00:44:11,000
因为学术界的惰性是很大的

1224
00:44:11,000 --> 00:44:17,000
我不太相信 Ruby 可以仅仅靠其创始人的呼吁

1225
00:44:17,000 --> 00:44:21,000
能够在学术圈这么强烈路径一带的

1226
00:44:21,000 --> 00:44:25,000
这个市场加以后里面获得一定分

1227
00:44:25,000 --> 00:44:27,000
反正我是没有看到

1228
00:44:27,000 --> 00:44:32,000
就是经常就是系里面会给就是 Faces 的人开一些那种

1229
00:44:32,000 --> 00:44:33,000
就入门课

1230
00:44:33,000 --> 00:44:35,000
然后基本上还是一项

1231
00:44:35,000 --> 00:44:37,000
所以我是动态这种 scripting language 的话

1232
00:44:37,000 --> 00:44:38,000
还是以 Python 为主的

1233
00:44:39,000 --> 00:44:39,000
对

1234
00:44:39,000 --> 00:44:41,000
然后 TCL 都有时候教过

1235
00:44:41,000 --> 00:44:42,000
现在好像少了

1236
00:44:42,000 --> 00:44:43,000
哇

1237
00:44:43,000 --> 00:44:44,000
TCL

1238
00:44:45,000 --> 00:44:49,000
还有一个听众反馈要说一下

1239
00:44:49,000 --> 00:44:50,000
就上期我们

1240
00:44:50,000 --> 00:44:52,000
这个是这位叫

1241
00:44:52,000 --> 00:44:55,000
他以前我们也经常来信的一位听众李旭

1242
00:44:55,000 --> 00:44:57,000
他在 Twitter 上跟我们说

1243
00:44:57,000 --> 00:45:02,000
上期我们不是提到了 Windows 3 的并发那一块吗

1244
00:45:02,000 --> 00:45:03,000
对

1245
00:45:03,000 --> 00:45:07,000
这个事实也是给我们提个醒

1246
00:45:07,000 --> 00:45:08,000
我先读一下他的反馈

1247
00:45:08,000 --> 00:45:12,000
他说 Windows 3 开始并发那几分钟

1248
00:45:12,000 --> 00:45:14,000
累得槽点也太多了点

1249
00:45:14,000 --> 00:45:17,000
首先你把多任务 OS 的概念给混进去了

1250
00:45:17,000 --> 00:45:20,000
其次虽然概念不清

1251
00:45:20,000 --> 00:45:24,000
但是如果你把边听歌边看图判断并行 OS

1252
00:45:24,000 --> 00:45:26,000
那 DOS 也能办到

1253
00:45:26,000 --> 00:45:29,000
然后多线程之前的多进程就不算了吗

1254
00:45:29,000 --> 00:45:31,000
最后没有 Hyperthreading

1255
00:45:31,000 --> 00:45:33,000
没有 Hyperthreading 就没有多线程了吗

1256
00:45:33,000 --> 00:45:35,000
这个你要不要解释一下

1257
00:45:37,000 --> 00:45:38,000
他说的时候我也解释不清楚

1258
00:45:38,000 --> 00:45:42,000
因为我承认在讲那个东西的时候

1259
00:45:42,000 --> 00:45:43,000
我基本上不知道自己在说什么

1260
00:45:43,000 --> 00:45:45,000
或者说不确定自己在说什么

1261
00:45:45,000 --> 00:45:49,000
后来我就查了一下 Windows 3.2 或者 Windows 3

1262
00:45:49,000 --> 00:45:53,000
他的基本机制其实是一个

1263
00:45:53,000 --> 00:45:56,000
Windows 3 本质上是一个虚拟机管理器

1264
00:45:56,000 --> 00:45:58,000
他自己跑一个

1265
00:45:58,000 --> 00:46:01,000
Windows 3 有三种执行模式给人家宣布说

1266
00:46:01,000 --> 00:46:03,000
然后在最理想的那种执行模式之下

1267
00:46:03,000 --> 00:46:06,000
他自己是一个虚拟机管理器

1268
00:46:06,000 --> 00:46:07,000
Supriser

1269
00:46:07,000 --> 00:46:10,000
然后他在下面跑几个 DOS 虚拟机

1270
00:46:11,000 --> 00:46:15,000
这种情况下的确不能算是

1271
00:46:15,000 --> 00:46:19,000
我们当时所试图解释的一种

1272
00:46:19,000 --> 00:46:22,000
多进多进程

1273
00:46:22,000 --> 00:46:25,000
实现的多任务

1274
00:46:25,000 --> 00:46:30,000
而是 Something totally different

1275
00:46:30,000 --> 00:46:34,000
但是我觉得这件事情的细节不重要

1276
00:46:34,000 --> 00:46:37,000
就是

1277
00:46:37,000 --> 00:46:40,000
我觉得他带给我们最大的教训就是

1278
00:46:40,000 --> 00:46:44,000
以后还是不要说微软相关的东西

1279
00:46:44,000 --> 00:46:45,000
不懂你就别逼逼

1280
00:46:45,000 --> 00:46:46,000
对

1281
00:46:46,000 --> 00:46:47,000
除非我们

1282
00:46:47,000 --> 00:46:49,000
百分之一千的确定自己在

1283
00:46:49,000 --> 00:46:52,000
确定自己知道自己在说什么

1284
00:46:52,000 --> 00:46:52,000
Oh please

1285
00:46:52,000 --> 00:46:53,000
Do you know what you're talking about

1286
00:46:53,000 --> 00:46:55,000
Because I don't think you know what you're talking about

1287
00:46:55,000 --> 00:46:58,000
否则我们在接下来的节目里面

1288
00:46:58,000 --> 00:47:02,000
尽量不提及和微软有关的任何东西

1289
00:47:02,000 --> 00:47:04,000
我觉得这是一个

1290
00:47:04,000 --> 00:47:05,000
比较可取的

1291
00:47:05,000 --> 00:47:07,000
那你最喜欢的 C-Sharp 你怎么办

1292
00:47:11,000 --> 00:47:12,000
同样吧

1293
00:47:12,000 --> 00:47:15,000
反正只有在我确切知道自己在说什么的时候

1294
00:47:15,000 --> 00:47:18,000
比如说我上次说什么.net 跑在 OS X 上

1295
00:47:18,000 --> 00:47:20,000
这种东西我是确切知道自己在说什么

1296
00:47:20,000 --> 00:47:23,000
只有在这种情况下才说

1297
00:47:23,000 --> 00:47:24,000
否则还是算了

1298
00:47:24,000 --> 00:47:26,000
而且 Windows 这个东西

1299
00:47:26,000 --> 00:47:29,000
我不知道

1300
00:47:29,000 --> 00:47:30,000
各位是什么感受

1301
00:47:30,000 --> 00:47:32,000
就是我是觉得

1302
00:47:32,000 --> 00:47:34,000
你对操作性感兴趣的话

1303
00:47:34,000 --> 00:47:37,000
你是不可能不离开 Windows

1304
00:47:37,000 --> 00:47:39,000
因为你不知道

1305
00:47:39,000 --> 00:47:39,000
你不是

1306
00:47:39,000 --> 00:47:41,000
除非你在微软工作

1307
00:47:41,000 --> 00:47:42,000
并且你做 OS 相关的东西的话

1308
00:47:42,000 --> 00:47:45,000
你不知道这个操作性是怎么实现的好吗

1309
00:47:45,000 --> 00:47:49,000
就如果你对系统级别的编程感兴趣的话

1310
00:47:49,000 --> 00:47:53,000
又想看看一个真实的操作性是怎样被搭建起来的

1311
00:47:53,000 --> 00:47:54,000
想要了解其内部的构造

1312
00:47:54,000 --> 00:47:57,000
那 Linux 简直是要

1313
00:47:57,000 --> 00:47:59,000
没有其他的选择了

1314
00:47:59,000 --> 00:48:02,000
就除非你去做一些什么更 Hardcore 的 FreeBSD 之类的

1315
00:48:02,000 --> 00:48:07,000
但那已经是至少是你在了解 Linux 之后才会发生的事情

1316
00:48:07,000 --> 00:48:09,000
对于一个生活在现代的人来说

1317
00:48:09,000 --> 00:48:12,000
除非你是 70 年代的 Hacker

1318
00:48:12,000 --> 00:48:13,000
否则

1319
00:48:15,000 --> 00:48:16,000
你怎么能不去了解一下 Linux

1320
00:48:19,000 --> 00:48:21,000
从这个角度来说

1321
00:48:21,000 --> 00:48:23,000
讨论 Windows 到底有什么意思

1322
00:48:23,000 --> 00:48:25,000
所以我觉得还是有意义的

1323
00:48:25,000 --> 00:48:28,000
就起码现在有很多人

1324
00:48:28,000 --> 00:48:31,000
就绝大部分的桌面用户还是在用这个吧

1325
00:48:32,000 --> 00:48:36,000
但是因为我们都算不得对这个平台的了解

1326
00:48:36,000 --> 00:48:37,000
我的意思是

1327
00:48:37,000 --> 00:48:39,000
咱们的节目号称内核恐慌

1328
00:48:39,000 --> 00:48:40,000
对吧

1329
00:48:40,000 --> 00:48:43,000
所以是要比较系统向一点

1330
00:48:43,000 --> 00:48:46,000
而不是用户英文再向一点

1331
00:48:46,000 --> 00:48:47,000
就如果你想想

1332
00:48:47,000 --> 00:48:48,000
你想讨论 Application 的话

1333
00:48:48,000 --> 00:48:50,000
欢迎你去收听 ID 公论

1334
00:48:54,000 --> 00:48:56,000
我们内核恐慌这边讲的都是一些比较

1335
00:49:00,000 --> 00:49:01,000
我也不知道

1336
00:49:01,000 --> 00:49:02,000
不管怎么说

1337
00:49:02,000 --> 00:49:05,000
还是就非常感谢李旭哥我们的反应

1338
00:49:05,000 --> 00:49:06,000
这个题的非常好

1339
00:49:06,000 --> 00:49:08,000
就是一针见血的指出

1340
00:49:08,000 --> 00:49:10,000
我们这个不懂别瞎逼

1341
00:49:10,000 --> 00:49:11,000
这一点

1342
00:49:11,000 --> 00:49:12,000
不懂不要瞎

1343
00:49:12,000 --> 00:49:14,000
我希望就说还是

1344
00:49:15,000 --> 00:49:19,000
不影响整体讨论的内容

1345
00:49:19,000 --> 00:49:21,000
就是为这个原则为好

1346
00:49:21,000 --> 00:49:22,000
其他的

1347
00:49:22,000 --> 00:49:24,000
就是我们以后会谨慎一点

1348
00:49:24,000 --> 00:49:26,000
然后确认之后再说

1349
00:49:26,000 --> 00:49:26,000
对

1350
00:49:27,000 --> 00:49:27,000
对

1351
00:49:27,000 --> 00:49:28,000
Anyway

1352
00:49:28,000 --> 00:49:29,000
No hard feelings

1353
00:49:29,000 --> 00:49:32,000
内核恐慌的 Slogan

1354
00:49:32,000 --> 00:49:33,000
No hard feelings

1355
00:49:33,000 --> 00:49:35,000
摆事实讲道理

1356
00:49:36,000 --> 00:49:36,000
对

1357
00:49:37,000 --> 00:49:38,000
OK

1358
00:49:38,000 --> 00:49:41,000
那么我们反馈暂时做到这里

1359
00:49:41,000 --> 00:49:46,000
然后这周有什么新闻发生的事

1360
00:49:47,000 --> 00:49:48,000
还有假新闻

1361
00:49:48,000 --> 00:49:49,000
对

1362
00:49:49,000 --> 00:49:50,000
还有假新闻

1363
00:49:50,000 --> 00:49:51,000
对

1364
00:49:51,000 --> 00:49:53,000
其实

1365
00:49:54,000 --> 00:49:56,000
首先是一个服务

1366
00:49:57,000 --> 00:49:58,000
这是你发现的

1367
00:49:58,000 --> 00:50:00,000
就 I like rabbits

1368
00:50:00,000 --> 00:50:01,000
我上看到了

1369
00:50:01,000 --> 00:50:02,000
对

1370
00:50:02,000 --> 00:50:03,000
我看一下

1371
00:50:03,000 --> 00:50:04,000
我觉得当时就震惊了

1372
00:50:06,000 --> 00:50:06,000
这叫什么

1373
00:50:06,000 --> 00:50:09,000
你知道我脑子里面冒出来的第一反是什么吗

1374
00:50:09,000 --> 00:50:11,000
要失业了

1375
00:50:11,000 --> 00:50:11,000
不是

1376
00:50:11,000 --> 00:50:13,000
这样做道德吗

1377
00:50:13,000 --> 00:50:14,000
这样做道德吗

1378
00:50:14,000 --> 00:50:16,000
为什么不道德呢

1379
00:50:18,000 --> 00:50:20,000
这个也像代写论文

1380
00:50:20,000 --> 00:50:20,000
我觉得

1381
00:50:21,000 --> 00:50:22,000
你还是先解释

1382
00:50:22,000 --> 00:50:23,000
我来解释一下这个是什么东西

1383
00:50:23,000 --> 00:50:24,000
你先说一下他是干嘛的

1384
00:50:24,000 --> 00:50:25,000
OK

1385
00:50:25,000 --> 00:50:26,000
它这个网址叫做

1386
00:50:26,000 --> 00:50:28,000
i like rabbits.com

1387
00:50:28,000 --> 00:50:31,000
我爱兔子们点 com

1388
00:50:32,000 --> 00:50:33,000
兔子就是 rabbit

1389
00:50:33,000 --> 00:50:35,000
R-A-B-B-I-T-S

1390
00:50:35,000 --> 00:50:36,000
就是我爱

1391
00:50:36,000 --> 00:50:37,000
i like rabbits.com

1392
00:50:38,000 --> 00:50:39,000
它是一个服务

1393
00:50:40,000 --> 00:50:42,000
这个服务是干嘛呢

1394
00:50:42,000 --> 00:50:45,000
就是它这个服务的唯一的一个接口

1395
00:50:45,000 --> 00:50:46,000
就是一个邮箱地址

1396
00:50:47,000 --> 00:50:49,000
然后你给这个邮箱地址发一个信

1397
00:50:49,000 --> 00:50:51,000
信里面你用简短的一两段话

1398
00:50:51,000 --> 00:50:53,000
能够解释清楚一个编程的

1399
00:50:53,000 --> 00:50:54,000
相对简单的

1400
00:50:54,000 --> 00:50:56,000
或者简单或者这个比较明确

1401
00:50:57,000 --> 00:50:59,000
定义的这个编程的任务

1402
00:51:00,000 --> 00:51:01,000
然后他会给你回一封信

1403
00:51:01,000 --> 00:51:04,000
他会回一封说这个大概需要

1404
00:51:04,000 --> 00:51:05,000
花多长时间

1405
00:51:05,000 --> 00:51:06,000
然后花多少钱

1406
00:51:06,000 --> 00:51:08,000
然后问你愿是否愿意接受

1407
00:51:08,000 --> 00:51:09,000
如果你接受的话

1408
00:51:09,000 --> 00:51:10,000
他就去做了

1409
00:51:10,000 --> 00:51:10,000
然后他在

1410
00:51:11,000 --> 00:51:12,000
约定的时间内

1411
00:51:12,000 --> 00:51:14,000
把这个你要的这个结果

1412
00:51:14,000 --> 00:51:15,000
它可能是一段代码

1413
00:51:15,000 --> 00:51:16,000
或者是一段数据片段

1414
00:51:16,000 --> 00:51:17,000
是你需要的一个东西

1415
00:51:18,000 --> 00:51:19,000
然后给你发回来

1416
00:51:20,000 --> 00:51:23,000
然后你在按之前约定好的这个价钱

1417
00:51:23,000 --> 00:51:24,000
支付酬劳

1418
00:51:24,000 --> 00:51:25,000
就可以了

1419
00:51:26,000 --> 00:51:27,000
对简单来说

1420
00:51:28,000 --> 00:51:29,000
这个就是叫做

1421
00:51:29,000 --> 00:51:33,000
我们姑且称之为把程序员 API 化了吧

1422
00:51:35,000 --> 00:51:37,000
我是这么理解的

1423
00:51:37,000 --> 00:51:38,000
就是在我眼里

1424
00:51:38,000 --> 00:51:39,000
它是一个

1425
00:51:40,000 --> 00:51:43,000
二级的外包网站

1426
00:51:45,000 --> 00:51:47,000
比如说有一个网站叫 ODESK

1427
00:51:48,000 --> 00:51:50,000
你如果你是一个

1428
00:51:50,000 --> 00:51:52,000
比如说你是一个艺术家

1429
00:51:52,000 --> 00:51:53,000
然后你想要给自己

1430
00:51:53,000 --> 00:51:54,000
做的东西做一个网站

1431
00:51:55,000 --> 00:51:56,000
但是你不会写程序

1432
00:51:56,000 --> 00:51:58,000
你可以选择学编程

1433
00:51:59,000 --> 00:52:02,000
或者选择去 ODESK.COM 上面

1434
00:52:02,000 --> 00:52:04,000
找一个程序员为你做这些事情

1435
00:52:04,000 --> 00:52:06,000
你需要做的就是

1436
00:52:07,000 --> 00:52:08,000
描述清楚说你要干什么

1437
00:52:09,000 --> 00:52:10,000
然后

1438
00:52:11,000 --> 00:52:14,000
去找有没有人来愿意为你做这件事情

1439
00:52:14,000 --> 00:52:16,000
然后你们两个讨价还价

1440
00:52:16,000 --> 00:52:17,000
然后那个人帮你做出来

1441
00:52:19,000 --> 00:52:21,000
就是说在 ODESK 这样网站上面

1442
00:52:22,000 --> 00:52:24,000
买方是完全不懂写程序的人

1443
00:52:24,000 --> 00:52:26,000
或者说买方是一个

1444
00:52:27,000 --> 00:52:28,000
项目的

1445
00:52:28,000 --> 00:52:29,000
Product Owner

1446
00:52:30,000 --> 00:52:31,000
然后你呢

1447
00:52:31,000 --> 00:52:33,000
你则要身兼 Product Manager 和

1448
00:52:33,000 --> 00:52:34,000
Programmer

1449
00:52:34,000 --> 00:52:35,000
Developer 这两个角色

1450
00:52:37,000 --> 00:52:38,000
倾听对方的需求

1451
00:52:38,000 --> 00:52:40,000
并且替对方把东西做出来

1452
00:52:41,000 --> 00:52:44,000
而 iLikeRabbits.com 这个网站

1453
00:52:44,000 --> 00:52:45,000
提供的则是

1454
00:52:45,000 --> 00:52:47,000
你作为一个

1455
00:52:49,000 --> 00:52:50,000
包工头

1456
00:52:50,000 --> 00:52:52,000
要把你手下的这个活儿

1457
00:52:52,000 --> 00:52:54,000
再外包出去

1458
00:52:55,000 --> 00:52:56,000
这么一个网站

1459
00:52:57,000 --> 00:52:59,000
它相当于叫什么 Second Level Support

1460
00:53:04,000 --> 00:53:05,000
你说

1461
00:53:05,000 --> 00:53:07,000
然后它这个居然有点意思

1462
00:53:07,000 --> 00:53:07,000
就是说它

1463
00:53:08,000 --> 00:53:09,000
它有一个下面一个 FAQ

1464
00:53:09,000 --> 00:53:10,000
就常见问题解答

1465
00:53:10,000 --> 00:53:13,000
它会说他们接受哪些类型的任务

1466
00:53:13,000 --> 00:53:15,000
然后大概是一个什么样的社会标准

1467
00:53:15,000 --> 00:53:17,000
当然就是说会有一些限制

1468
00:53:17,000 --> 00:53:17,000
比如说你不能说

1469
00:53:17,000 --> 00:53:18,000
哎

1470
00:53:18,000 --> 00:53:20,000
来你给我做个 Google 吧

1471
00:53:20,000 --> 00:53:22,000
你这种是跟你说不现实的

1472
00:53:22,000 --> 00:53:24,000
它有给一些这种范例

1473
00:53:24,000 --> 00:53:25,000
比如说他要写个模块

1474
00:53:25,000 --> 00:53:27,000
然后排一个什么数据

1475
00:53:27,000 --> 00:53:28,000
这种是可以做的

1476
00:53:28,000 --> 00:53:29,000
然后

1477
00:53:29,000 --> 00:53:31,000
它要有一个什么 URL

1478
00:53:31,000 --> 00:53:32,000
上面有一些有一些连接

1479
00:53:32,000 --> 00:53:34,000
它要全部给它抓回来

1480
00:53:34,000 --> 00:53:35,000
做到一个那个

1481
00:53:36,000 --> 00:53:36,000
电子表格里面

1482
00:53:36,000 --> 00:53:38,000
这种事情它也可以帮你做

1483
00:53:38,000 --> 00:53:40,000
然后它现在的价格是说它

1484
00:53:40,000 --> 00:53:41,000
不接

1485
00:53:41,000 --> 00:53:42,000
就一般的这种收费

1486
00:53:42,000 --> 00:53:44,000
不会就从来就一定不会超过 300 美元

1487
00:53:44,000 --> 00:53:47,000
就根据难以程度花费的时间

1488
00:53:47,000 --> 00:53:49,000
不一样的有所不同吗

1489
00:53:49,000 --> 00:53:49,000
哈

1490
00:53:49,000 --> 00:53:51,000
但我这个其实

1491
00:53:51,000 --> 00:53:53,000
这个其实还是挺有意思的一个事情

1492
00:53:53,000 --> 00:53:53,000
就是很多

1493
00:53:54,000 --> 00:53:55,000
就其实刚才解决了那种

1494
00:53:56,000 --> 00:53:56,000
啊

1495
00:53:56,000 --> 00:53:58,000
你有那种一些比较重复性的劳动

1496
00:53:58,000 --> 00:54:00,000
可以被计算机解决

1497
00:54:00,000 --> 00:54:00,000
但是

1498
00:54:01,000 --> 00:54:01,000
啊

1499
00:54:01,000 --> 00:54:03,000
你自己又一下没有那个时间

1500
00:54:03,000 --> 00:54:04,000
或者是没有那个

1501
00:54:05,000 --> 00:54:06,000
支支储备去自己做的话

1502
00:54:07,000 --> 00:54:08,000
用这种服务我觉得还是蛮好的

1503
00:54:09,000 --> 00:54:11,000
呃或者可以这么说吧

1504
00:54:11,000 --> 00:54:12,000
就是如果你

1505
00:54:12,000 --> 00:54:14,000
你需要做一个

1506
00:54:14,000 --> 00:54:15,000
比较大的项目

1507
00:54:15,000 --> 00:54:16,000
然后因为某种

1508
00:54:17,000 --> 00:54:17,000
某种

1509
00:54:17,000 --> 00:54:19,000
缘故你耽搁了

1510
00:54:19,000 --> 00:54:20,000
然后你可以

1511
00:54:21,000 --> 00:54:22,000
利用这个网站来救救急

1512
00:54:23,000 --> 00:54:25,000
然后我之所以说

1513
00:54:25,000 --> 00:54:27,000
他像一个代写论文的就是

1514
00:54:27,000 --> 00:54:27,000
就是这个

1515
00:54:27,000 --> 00:54:30,000
就是我我 party 太厉害了

1516
00:54:30,000 --> 00:54:32,000
然后我现在需要急需交一个小论文

1517
00:54:33,000 --> 00:54:33,000
嗯哼

1518
00:54:33,000 --> 00:54:34,000
呃

1519
00:54:34,000 --> 00:54:35,000
否则不能毕业

1520
00:54:35,000 --> 00:54:36,000
那我去找了枪手网

1521
00:54:36,000 --> 00:54:37,000
枪手网站

1522
00:54:37,000 --> 00:54:39,000
这这这这有

1523
00:54:39,000 --> 00:54:40,000
这有道德上的问题吗

1524
00:54:40,000 --> 00:54:41,000
呃

1525
00:54:42,000 --> 00:54:43,000
应该有吧

1526
00:54:43,000 --> 00:54:45,000
一般的学术机构都不会

1527
00:54:45,000 --> 00:54:47,000
都都不会认可这种事情

1528
00:54:48,000 --> 00:54:48,000
对

1529
00:54:49,000 --> 00:54:50,000
呃但是反过来

1530
00:54:51,000 --> 00:54:51,000
仔细想一下

1531
00:54:51,000 --> 00:54:53,000
好像放在软件上面

1532
00:54:53,000 --> 00:54:54,000
这一点就不成了

1533
00:54:54,000 --> 00:54:55,000
因为

1534
00:54:57,000 --> 00:54:57,000
呃

1535
00:54:58,000 --> 00:54:59,000
你可以看到这网站

1536
00:54:59,000 --> 00:55:01,000
要要会给你做的事情

1537
00:55:01,000 --> 00:55:03,000
比如说他提供那什么

1538
00:55:03,000 --> 00:55:04,000
把 PDF 转什么

1539
00:55:04,000 --> 00:55:06,000
把 PSD 转成 HTML 4 SS

1540
00:55:07,000 --> 00:55:09,000
这些东西是完全没有研究性质

1541
00:55:09,000 --> 00:55:10,000
或者说完全没有

1542
00:55:10,000 --> 00:55:12,000
创造那价值在里面的

1543
00:55:13,000 --> 00:55:14,000
就就我们做这种事情

1544
00:55:14,000 --> 00:55:17,000
不会什么劳动密集型的部分

1545
00:55:17,000 --> 00:55:19,000
对就是

1546
00:55:19,000 --> 00:55:20,000
软件这个

1547
00:55:20,000 --> 00:55:23,000
伪白领功课里面最蓝领的那部分

1548
00:55:24,000 --> 00:55:25,000
你可以在这个网站上完成

1549
00:55:26,000 --> 00:55:29,000
呃然后他在他开车的价格是多少

1550
00:55:29,000 --> 00:55:31,000
他说一个任务一般不应该超过 6 小时

1551
00:55:32,000 --> 00:55:33,000
然后他收费不应该

1552
00:55:33,000 --> 00:55:35,000
一般不会超过 300

1553
00:55:35,000 --> 00:55:36,000
所以也就是他在

1554
00:55:36,000 --> 00:55:39,000
在暗示就是他大概一个小时的

1555
00:55:40,000 --> 00:55:41,000
成本是 50 美元

1556
00:55:41,000 --> 00:55:44,000
而如果你的人力成本

1557
00:55:45,000 --> 00:55:47,000
在一个向样点的公司里面

1558
00:55:47,000 --> 00:55:49,000
超过了 50 美元每个小时

1559
00:55:49,000 --> 00:55:50,000
这还是很有可能对吧

1560
00:55:50,000 --> 00:55:51,000
嗯哼

1561
00:55:51,000 --> 00:55:53,000
但大部分大部分的这种

1562
00:55:53,000 --> 00:55:55,000
所以就比如说你就拿北美来说吧

1563
00:55:55,000 --> 00:55:59,000
你这个人力成本都不止那么一个小时五十

1564
00:56:00,000 --> 00:56:02,000
对就是你找一个传统外包公司

1565
00:56:02,000 --> 00:56:03,000
那至少可能是 100 以上

1566
00:56:04,000 --> 00:56:04,000
对

1567
00:56:04,000 --> 00:56:07,000
然后在这个情况下用这个网站其实是

1568
00:56:07,000 --> 00:56:08,000
无可厚非的一件事情

1569
00:56:08,000 --> 00:56:09,000
当然你可能会

1570
00:56:09,000 --> 00:56:11,000
另外有另外一些时间成本在里面

1571
00:56:11,000 --> 00:56:13,000
比如说你要

1572
00:56:13,000 --> 00:56:15,000
跟对方讲清楚需求

1573
00:56:15,000 --> 00:56:16,000
然后你要

1574
00:56:16,000 --> 00:56:18,000
花一点时间去验收

1575
00:56:18,000 --> 00:56:21,000
然后去理解对方具体做了什么

1576
00:56:21,000 --> 00:56:23,000
然后这个东西可能不符合你的想象

1577
00:56:23,000 --> 00:56:25,000
然后你要自己去改一下什么的

1578
00:56:25,000 --> 00:56:27,000
但这些成本应该来

1579
00:56:27,000 --> 00:56:31,000
应该最多最多不会超过你在上面

1580
00:56:31,000 --> 00:56:35,000
投入就是对方在上面投入的时间本身

1581
00:56:35,000 --> 00:56:37,000
否则你就是一个

1582
00:56:37,000 --> 00:56:39,000
否则你就可以去申诉嘛

1583
00:56:39,000 --> 00:56:40,000
就说你做这个东西

1584
00:56:40,000 --> 00:56:42,000
完全不符合我的需求之类的

1585
00:56:43,000 --> 00:56:48,000
对所以他对任务的要求限制还是挺大的

1586
00:56:48,000 --> 00:56:53,000
就是说他需要你能够在相对简短的文字里面

1587
00:56:53,000 --> 00:56:55,000
能够描述清楚的这么一种

1588
00:56:55,000 --> 00:56:56,000
就是叫我们叫做

1589
00:56:57,000 --> 00:56:59,000
well defined problems

1590
00:56:59,000 --> 00:56:59,000
对

1591
00:57:00,000 --> 00:57:03,000
我觉得这个网站最聪明一点就是

1592
00:57:04,000 --> 00:57:09,000
他的目标客户群是一群知道自己要解决什么问题的人

1593
00:57:09,000 --> 00:57:12,000
其实这个就蛮难的了

1594
00:57:12,000 --> 00:57:14,000
就怎么说他们不经常讲吗

1595
00:57:14,000 --> 00:57:19,000
解决问题的一大部分工作其实在定义问题

1596
00:57:19,000 --> 00:57:22,000
就如果你能把这个问题定义得非常清楚了

1597
00:57:22,000 --> 00:57:24,000
就其实是你有自己一定的水

1598
00:57:24,000 --> 00:57:26,000
一定的就是去自己动手做的话

1599
00:57:26,000 --> 00:57:29,000
其实有一半多的工作就已经完成了

1600
00:57:29,000 --> 00:57:31,000
但是其实我很怀疑

1601
00:57:31,000 --> 00:57:34,000
就很多这种没有这个编程基础的人

1602
00:57:35,000 --> 00:57:36,000
去描述这么一个问题的时候

1603
00:57:36,000 --> 00:57:38,000
他可能是描述不清楚的

1604
00:57:39,000 --> 00:57:39,000
对

1605
00:57:39,000 --> 00:57:41,000
我觉得这就是网站最聪明的地方

1606
00:57:41,000 --> 00:57:43,000
我觉得在 ODESK 这样的地方

1607
00:57:43,000 --> 00:57:45,000
你会遇到很多

1608
00:57:45,000 --> 00:57:47,000
根本不知道自己想要什么的人

1609
00:57:47,000 --> 00:57:50,000
你看他们的需求描述就是

1610
00:57:50,000 --> 00:57:52,000
Hi, I want to make a website

1611
00:57:54,000 --> 00:57:56,000
with this and that function and blah blah

1612
00:57:56,000 --> 00:58:01,000
and I have like 200 dollar budget

1613
00:58:01,000 --> 00:58:02,000
然后就删掉两半了

1614
00:58:03,000 --> 00:58:03,000
就是

1615
00:58:05,000 --> 00:58:07,000
就好像很多人会讨论说

1616
00:58:07,000 --> 00:58:08,000
我要做个 APP

1617
00:58:08,000 --> 00:58:14,000
然后把交互和特性想得非常详细

1618
00:58:14,000 --> 00:58:15,000
然后你问他说

1619
00:58:16,000 --> 00:58:17,000
服务器怎么办

1620
00:58:17,000 --> 00:58:19,000
让他瞪大眼睛瞪着你

1621
00:58:19,000 --> 00:58:20,000
说服务器是什么

1622
00:58:21,000 --> 00:58:23,000
这还算好的

1623
00:58:23,000 --> 00:58:25,000
他们至少能把交互能给你想明白

1624
00:58:25,000 --> 00:58:26,000
就好像之前

1625
00:58:27,000 --> 00:58:29,000
就不管在软件行业有这个问题

1626
00:58:29,000 --> 00:58:30,000
硬件行业有这个问题

1627
00:58:30,000 --> 00:58:32,000
之前不是有那个

1628
00:58:32,000 --> 00:58:33,000
是谁说吗

1629
00:58:33,000 --> 00:58:34,000
是

1630
00:58:35,000 --> 00:58:38,000
那个 Frog Design 还是哪家公司我忘了

1631
00:58:38,000 --> 00:58:39,000
就苹果 iPhone 出来之后

1632
00:58:39,000 --> 00:58:40,000
不是当时有一个

1633
00:58:40,000 --> 00:58:43,000
应该是 3 C 去找工业设计公司

1634
00:58:43,000 --> 00:58:46,000
就是他们专门给人外包做工业设计的时候

1635
00:58:46,000 --> 00:58:47,000
我们要做一个类似的手机

1636
00:58:47,000 --> 00:58:49,000
你们看半年能不能搞定

1637
00:58:50,000 --> 00:58:51,000
然后这点

1638
00:58:52,000 --> 00:58:56,000
人家那边花了很多年的时间做技术研究

1639
00:58:56,000 --> 00:58:59,000
而且那些人都是这个业界的最顶尖的人

1640
00:58:59,000 --> 00:59:01,000
你要我们半年搞出来就搞笑吧

1641
00:59:02,000 --> 00:59:04,000
对就这之类的事情是一个挺麻烦的

1642
00:59:05,000 --> 00:59:06,000
就让我想起那个

1643
00:59:06,000 --> 00:59:10,000
叫什么 XKCD 上面有一个漫画

1644
00:59:11,000 --> 00:59:12,000
他说这个漫画大概是这样子的

1645
00:59:12,000 --> 00:59:14,000
我平脑子记可能有点不准

1646
00:59:14,000 --> 00:59:15,000
但大概意思应该是这样

1647
00:59:16,000 --> 00:59:17,000
他就说

1648
00:59:18,000 --> 00:59:19,000
有两个人

1649
00:59:19,000 --> 00:59:22,000
一个人他跑来找那个人给他做一个软件算法

1650
00:59:22,000 --> 00:59:24,000
他说我们要做一个 App

1651
00:59:24,000 --> 00:59:26,000
这个 App 的功能就是你

1652
00:59:26,000 --> 00:59:29,000
首先你要判断他人在拍照的地点

1653
00:59:29,000 --> 00:59:30,000
是在一个叫什么

1654
00:59:30,000 --> 00:59:32,000
国家森林公园里面

1655
00:59:32,000 --> 00:59:34,000
OK 我知道这一副

1656
00:59:34,000 --> 00:59:37,000
他说好那边那个人说好没问题

1657
00:59:37,000 --> 00:59:40,000
我可以用手机自带的 GPS

1658
00:59:40,000 --> 00:59:44,000
再加上常见的地理信息数据库就可以解决了

1659
00:59:44,000 --> 00:59:47,000
他说的好像是给我一台电脑和两晚上时间

1660
00:59:47,000 --> 00:59:49,000
大概这样一个周末加一台电脑

1661
00:59:49,000 --> 00:59:50,000
对

1662
00:59:50,000 --> 00:59:51,000
就可以做出来

1663
00:59:51,000 --> 00:59:52,000
然后他说

1664
00:59:52,000 --> 00:59:54,000
就是那个过来提需求的人就说了

1665
00:59:54,000 --> 00:59:55,000
然后他就接着说

1666
00:59:55,000 --> 00:59:56,000
然后第二

1667
00:59:57,000 --> 00:59:58,000
他要判断

1668
00:59:58,000 --> 01:00:03,000
这个在国家森林公园里面拍了一张照

1669
01:00:03,000 --> 01:00:04,000
这个照片是不是一只鸟

1670
01:00:05,000 --> 01:00:06,000
对

1671
01:00:06,000 --> 01:00:10,000
然后一开始说我只需要一台电脑和一个半晚上的人

1672
01:00:10,000 --> 01:00:13,000
一个周末的人说

1673
01:00:14,000 --> 01:00:15,000
点点点

1674
01:00:15,000 --> 01:00:19,000
我需要一个国家实验室和几十个博士生

1675
01:00:19,000 --> 01:00:20,000
再给我五年的时间

1676
01:00:20,000 --> 01:00:21,000
然后五年时间

1677
01:00:22,000 --> 01:00:26,000
然后我记得那个副漫画的 title

1678
01:00:26,000 --> 01:00:32,000
就是你 hover text 是学计算机最大的难题之一

1679
01:00:32,000 --> 01:00:35,000
就是怎么向一个外行人解释复杂度

1680
01:00:35,000 --> 01:00:39,000
为什么看起来相似的任务复杂度会差这么多

1681
01:00:39,000 --> 01:00:40,000
对

1682
01:00:40,000 --> 01:00:42,000
所以其实我就很好奇

1683
01:00:42,000 --> 01:00:44,000
就说这个东西

1684
01:00:44,000 --> 01:00:47,000
如果你拿就刚刚我们讲这个 I like rabbits 这个服务

1685
01:00:47,000 --> 01:00:49,000
你开放给公众来讲

1686
01:00:49,000 --> 01:00:53,000
他能够真的理解哪些是你能做哪些是不能做的吗

1687
01:00:53,000 --> 01:00:54,000
所以

1688
01:00:54,000 --> 01:00:54,000
不

1689
01:00:55,000 --> 01:00:57,000
我觉得这个网站聪明之处就在于

1690
01:00:57,000 --> 01:01:02,000
他可以很简单的回卷你说这个东西我们做不了

1691
01:01:02,000 --> 01:01:03,000
然后就完了

1692
01:01:03,000 --> 01:01:04,000
OK

1693
01:01:04,000 --> 01:01:09,000
而他所面向的客户群是那些知道自己要做什么

1694
01:01:09,000 --> 01:01:10,000
只会没有时间做的人

1695
01:01:12,000 --> 01:01:14,000
我觉得他其实就像我说的

1696
01:01:14,000 --> 01:01:15,000
是一个 second-line support

1697
01:01:15,000 --> 01:01:19,000
然后他主要面向的对象是那些知道自己要做什么的程序员

1698
01:01:20,000 --> 01:01:20,000
OK

1699
01:01:21,000 --> 01:01:24,000
所以其实从这个角度来说

1700
01:01:24,000 --> 01:01:29,000
你可以看到以后假设这种类型的服务流行起来

1701
01:01:29,000 --> 01:01:30,000
或者多起来之后

1702
01:01:30,000 --> 01:01:35,000
那些所谓的底层低端的工种就可能会被逐渐淘汰掉了吧

1703
01:01:35,000 --> 01:01:36,000
我也不知道

1704
01:01:36,000 --> 01:01:40,000
我其实比较希望人工智能发展到一天

1705
01:01:40,000 --> 01:01:43,000
人工智能可以自动完成这些 subtask

1706
01:01:43,000 --> 01:01:45,000
那我们人干嘛

1707
01:01:45,000 --> 01:01:48,000
就人只做 grand design

1708
01:01:48,000 --> 01:01:53,000
如果人工智能都发展到能够做出这种 design 了

1709
01:01:53,000 --> 01:01:55,000
那你觉得他不可以去 design

1710
01:01:55,000 --> 01:01:56,000
我意思是

1711
01:01:56,000 --> 01:02:00,000
我意思是 ilikerabbits.com 这个网站上的工作

1712
01:02:00,000 --> 01:02:02,000
可以交由人工智能去做

1713
01:02:02,000 --> 01:02:04,000
就是基础的那种比较蠢的工作是吧

1714
01:02:04,000 --> 01:02:05,000
对

1715
01:02:05,000 --> 01:02:09,000
就像你说的 well-defined 问题

1716
01:02:09,000 --> 01:02:10,000
可以交由人工智能去做

1717
01:02:10,000 --> 01:02:12,000
然后人类程序员只做 grand design

1718
01:02:13,000 --> 01:02:14,000
OK

1719
01:02:14,000 --> 01:02:14,000
这也不错

1720
01:02:14,000 --> 01:02:16,000
所以其实从这个角度来讲

1721
01:02:16,000 --> 01:02:18,000
这个就属于叫什么

1722
01:02:18,000 --> 01:02:20,000
如果可以类比的话

1723
01:02:20,000 --> 01:02:24,000
这个就是编程界的 Siri

1724
01:02:24,000 --> 01:02:26,000
对

1725
01:02:26,000 --> 01:02:28,000
你给他一个简单的 task

1726
01:02:28,000 --> 01:02:30,000
他能给你返回一个结果这样

1727
01:02:31,000 --> 01:02:32,000
我不知道以后

1728
01:02:32,000 --> 01:02:36,000
这个东西能够在多大程度上被智能的解决

1729
01:02:36,000 --> 01:02:39,000
不知道 IBM 的 Watson 能不能够做到类似的事情

1730
01:02:39,000 --> 01:02:42,000
其实就是那个 Tony Stark 的那个

1731
01:02:42,000 --> 01:02:47,000
J.Janis

1732
01:02:47,000 --> 01:02:50,000
对那个超级计算机

1733
01:02:50,000 --> 01:02:51,000
对

1734
01:02:51,000 --> 01:02:52,000
我忘了他叫什么

1735
01:02:52,000 --> 01:02:55,000
但是那个超级计算机其实就是一个这样的角色

1736
01:02:55,000 --> 01:02:56,000
Tony Stark 只做 grand design

1737
01:02:56,000 --> 01:02:59,000
然后他负责做粗活和类化

1738
01:03:00,000 --> 01:03:03,000
这其实就好像回到之前有一个

1739
01:03:03,000 --> 01:03:04,000
基础教育上面的一个问题了

1740
01:03:04,000 --> 01:03:05,000
就是说

1741
01:03:06,000 --> 01:03:10,000
在计算机如此普及这种

1742
01:03:10,000 --> 01:03:12,000
就随处可得的这种现代

1743
01:03:12,000 --> 01:03:15,000
我们还有必要要求每个小学生就背得到

1744
01:03:15,000 --> 01:03:17,000
背得下那个叫什么

1745
01:03:17,000 --> 01:03:17,000
四德运算吗

1746
01:03:17,000 --> 01:03:19,000
还是这个救救生发表

1747
01:03:21,000 --> 01:03:23,000
我觉得 10 以内的惩罚

1748
01:03:23,000 --> 01:03:25,000
除非你是法国人

1749
01:03:25,000 --> 01:03:26,000
否则还是背一背吧

1750
01:03:26,000 --> 01:03:27,000
为什么是背

1751
01:03:28,000 --> 01:03:30,000
为什么法国人又被黑了

1752
01:03:31,000 --> 01:03:33,000
法国人不是念数字非常困难吧

1753
01:03:33,000 --> 01:03:36,000
什么 90 要说成 50 加 40 之类的

1754
01:03:36,000 --> 01:03:37,000
不是实境制的

1755
01:03:38,000 --> 01:03:40,000
就他们有一些

1756
01:03:40,000 --> 01:03:43,000
20 的数字

1757
01:03:43,000 --> 01:03:44,000
Wait a second

1758
01:03:44,000 --> 01:03:45,000
他们应该是

1759
01:03:46,000 --> 01:03:48,000
反正是类似什么 70

1760
01:03:48,000 --> 01:03:49,000
要不说 70

1761
01:03:49,000 --> 01:03:50,000
就没有 70 这个数字

1762
01:03:50,000 --> 01:03:52,000
要说 40 加 30

1763
01:03:52,000 --> 01:03:57,000
然后法国的法语和瑞士的法语

1764
01:03:57,000 --> 01:03:59,000
念数字方法还不一样之类

1765
01:03:59,000 --> 01:04:00,000
是吗

1766
01:04:00,000 --> 01:04:00,000
对

1767
01:04:00,000 --> 01:04:01,000
天哪

1768
01:04:01,000 --> 01:04:02,000
不知道他们和加拿大

1769
01:04:02,000 --> 01:04:04,000
魁北克法语有没有什么不一样

1770
01:04:07,000 --> 01:04:07,000
对

1771
01:04:07,000 --> 01:04:08,000
还是蛮单纯的

1772
01:04:08,000 --> 01:04:09,000
我的观点是

1773
01:04:09,000 --> 01:04:10,000
就算

1774
01:04:10,000 --> 01:04:11,000
要说都不会好了

1775
01:04:11,000 --> 01:04:13,000
沐阳写过一篇 blog

1776
01:04:13,000 --> 01:04:14,000
就是说

1777
01:04:15,000 --> 01:04:16,000
因为他当时做助教

1778
01:04:16,000 --> 01:04:17,000
教维基分二

1779
01:04:18,000 --> 01:04:19,000
然后他说

1780
01:04:20,000 --> 01:04:24,000
美国的大学生学维基分的时候

1781
01:04:24,000 --> 01:04:25,000
面对的一些问题

1782
01:04:25,000 --> 01:04:26,000
都是什么

1783
01:04:26,000 --> 01:04:27,000
比如说

1784
01:04:27,000 --> 01:04:28,000
给得

1785
01:04:28,000 --> 01:04:31,000
有一个形容什么什么什么什么的函数

1786
01:04:31,000 --> 01:04:34,000
求词函数在什么什么什么地方的什么什么

1787
01:04:35,000 --> 01:04:36,000
然后他说

1788
01:04:36,000 --> 01:04:40,000
人们怎么能不痛恨这门学科

1789
01:04:40,000 --> 01:04:41,000
乃至

1790
01:04:41,000 --> 01:04:43,000
在通过考试之后

1791
01:04:43,000 --> 01:04:45,000
就立刻想办法把它忘掉

1792
01:04:46,000 --> 01:04:49,000
数学为什么一定要用这样的方法教

1793
01:04:49,000 --> 01:04:49,000
就人们

1794
01:04:49,000 --> 01:04:51,000
我们凭什么逼迫所有人

1795
01:04:51,000 --> 01:04:53,000
都像数学家一样

1796
01:04:53,000 --> 01:04:54,000
去学习数学

1797
01:04:54,000 --> 01:04:54,000
因为

1798
01:04:54,000 --> 01:04:56,000
数学家学习数学

1799
01:04:56,000 --> 01:04:58,000
就是因为数学本身

1800
01:04:58,000 --> 01:05:00,000
就数学家不会去想这个东西有什么用

1801
01:05:00,000 --> 01:05:00,000
他反正

1802
01:05:00,000 --> 01:05:01,000
没错

1803
01:05:01,000 --> 01:05:02,000
就是这么想的

1804
01:05:02,000 --> 01:05:03,000
如果我来

1805
01:05:03,000 --> 01:05:04,000
就是他说

1806
01:05:04,000 --> 01:05:05,000
如果他来

1807
01:05:06,000 --> 01:05:07,000
编写数学

1808
01:05:07,000 --> 01:05:08,000
叫数学课本的话

1809
01:05:08,000 --> 01:05:09,000
他一定会

1810
01:05:12,000 --> 01:05:13,000
从比如说

1811
01:05:13,000 --> 01:05:15,000
他举了一些数学在现实时候

1812
01:05:15,000 --> 01:05:16,000
现实时候的例子

1813
01:05:16,000 --> 01:05:18,000
可能比如说什么密码学或者是

1814
01:05:19,000 --> 01:05:21,000
人们为什么可以预测

1815
01:05:21,000 --> 01:05:22,000
三天之内的天气

1816
01:05:22,000 --> 01:05:24,000
但不能预测一个月的

1817
01:05:24,000 --> 01:05:26,000
之类的这样一些

1818
01:05:26,000 --> 01:05:28,000
就是和数学息息相关的大问题

1819
01:05:29,000 --> 01:05:30,000
他会

1820
01:05:30,000 --> 01:05:30,000
他会

1821
01:05:30,000 --> 01:05:32,000
他说他更愿意从这些问题入手

1822
01:05:32,000 --> 01:05:35,000
然后尽量避免让人去学一些

1823
01:05:35,000 --> 01:05:38,000
可以靠机器或者是计算器解出来的问题

1824
01:05:38,000 --> 01:05:40,000
比如说你要求一个什么函数

1825
01:05:40,000 --> 01:05:42,000
在某一点的值或者是

1826
01:05:42,000 --> 01:05:43,000
是否收

1827
01:05:43,000 --> 01:05:44,000
判断一个基数是否收敛

1828
01:05:45,000 --> 01:05:47,000
你去 Walphram Alpha 搜一下就好了

1829
01:05:48,000 --> 01:05:49,000
为什么一定要是用手算的

1830
01:05:49,000 --> 01:05:52,000
为什么要学习那些复杂的求老技巧

1831
01:05:54,000 --> 01:05:55,000
他大概是这样一个观点

1832
01:05:55,000 --> 01:05:56,000
就我觉得

1833
01:05:57,000 --> 01:05:58,000
的确也是这样

1834
01:05:58,000 --> 01:05:59,000
就是你在学编程的时候可能

1835
01:06:00,000 --> 01:06:01,000
与其去像

1836
01:06:01,000 --> 01:06:03,000
谭浩强一样追求

1837
01:06:03,000 --> 01:06:04,000
但是我不是要黑谭浩强

1838
01:06:04,000 --> 01:06:04,000
但

1839
01:06:05,000 --> 01:06:07,000
因为他的教材之所以会那么流行

1840
01:06:07,000 --> 01:06:09,000
也是跟时代相关

1841
01:06:09,000 --> 01:06:10,000
就是

1842
01:06:10,000 --> 01:06:12,000
在他写 C 教材的时代

1843
01:06:12,000 --> 01:06:14,000
我们对 C 的认识还不像今天这样

1844
01:06:15,000 --> 01:06:16,000
但是

1845
01:06:16,000 --> 01:06:18,000
如果你要一定要去钻研

1846
01:06:18,000 --> 01:06:20,000
比如说从左到右一堆加号

1847
01:06:20,000 --> 01:06:22,000
然后最终求出来的值是什么样子

1848
01:06:22,000 --> 01:06:23,000
你去钻研这种

1849
01:06:24,000 --> 01:06:27,000
这种细节回乡字的写法到底有什么意义

1850
01:06:29,000 --> 01:06:30,000
可能教学里面

1851
01:06:30,000 --> 01:06:32,000
就是编程教学里面也的确存在着这四个问题

1852
01:06:33,000 --> 01:06:34,000
对

1853
01:06:34,000 --> 01:06:35,000
其实就应用题

1854
01:06:35,000 --> 01:06:37,000
你得先告诉他们你这个东西

1855
01:06:38,000 --> 01:06:39,000
就对于大多数人来讲

1856
01:06:40,000 --> 01:06:42,000
你教学的意义是让他们

1857
01:06:42,000 --> 01:06:44,000
能够觉得这个东西是有用的

1858
01:06:44,000 --> 01:06:46,000
这样他们才有动力

1859
01:06:46,000 --> 01:06:47,000
有所谓的 incentive 去学

1860
01:06:48,000 --> 01:06:49,000
所以很多

1861
01:06:49,000 --> 01:06:51,000
其实不光是数学教育

1862
01:06:51,000 --> 01:06:53,000
其实现在的编程教育也有这个问题

1863
01:06:53,000 --> 01:06:55,000
很多人都在抱怨说

1864
01:06:55,000 --> 01:06:57,000
我在大学本科学那么一堆

1865
01:06:57,000 --> 01:06:58,000
什么算法

1866
01:06:58,000 --> 01:06:59,000
什么一堆乱七八糟的东西

1867
01:06:59,000 --> 01:07:00,000
为什么

1868
01:07:00,000 --> 01:07:01,000
就是

1869
01:07:01,000 --> 01:07:02,000
你不告诉他的意义何在

1870
01:07:02,000 --> 01:07:04,000
他不明白中间的重要性怎么样

1871
01:07:05,000 --> 01:07:08,000
很多人反而是在可能毕业很多年工作之后

1872
01:07:08,000 --> 01:07:09,000
然后

1873
01:07:10,000 --> 01:07:11,000
才突然间意识到

1874
01:07:11,000 --> 01:07:13,000
哦原来当初学的东西是这么的有用

1875
01:07:13,000 --> 01:07:14,000
但是你也看当时没学好

1876
01:07:14,000 --> 01:07:15,000
现在来又好像觉得

1877
01:07:16,000 --> 01:07:17,000
悔之晚矣的感觉

1878
01:07:18,000 --> 01:07:18,000
对

1879
01:07:18,000 --> 01:07:20,000
就是好像你要教一个人

1880
01:07:21,000 --> 01:07:22,000
和汽车有关的东西

1881
01:07:22,000 --> 01:07:24,000
你不教他

1882
01:07:24,000 --> 01:07:25,000
怎么去

1883
01:07:27,000 --> 01:07:29,000
甚至不说不教他怎么开车的

1884
01:07:29,000 --> 01:07:32,000
你甚至不教他去辨认这辆车是

1885
01:07:32,000 --> 01:07:34,000
是是是是宝马还是

1886
01:07:35,000 --> 01:07:36,000
还是比亚迪

1887
01:07:36,000 --> 01:07:38,000
你就先给他讲内燃机的原理

1888
01:07:39,000 --> 01:07:40,000
这有意义吗

1889
01:07:41,000 --> 01:07:42,000
但

1890
01:07:42,000 --> 01:07:44,000
在编程教育领域

1891
01:07:44,000 --> 01:07:46,000
可能很多时候我们做的就是这样的事情

1892
01:07:46,000 --> 01:07:47,000
就是

1893
01:07:47,000 --> 01:07:47,000
没错

1894
01:07:48,000 --> 01:07:49,000
不会先去教他

1895
01:07:50,000 --> 01:07:51,000
怎么样

1896
01:07:51,000 --> 01:07:52,000
写程序

1897
01:07:52,000 --> 01:07:55,000
把自己需要

1898
01:07:55,000 --> 01:07:57,000
每天去刷的网站

1899
01:07:58,000 --> 01:07:59,000
上面的东西

1900
01:08:00,000 --> 01:08:00,000
抠下来

1901
01:08:00,000 --> 01:08:01,000
然后

1902
01:08:02,000 --> 01:08:04,000
把每天不一样的内容发给自己

1903
01:08:04,000 --> 01:08:06,000
或者是比如说我也不知道

1904
01:08:07,000 --> 01:08:09,000
自己写一个屏幕保护程序之类的

1905
01:08:09,000 --> 01:08:11,000
而先要教他什么是对象

1906
01:08:11,000 --> 01:08:12,000
什么是指针

1907
01:08:14,000 --> 01:08:16,000
当然你也可以反过来说

1908
01:08:16,000 --> 01:08:18,000
可是我们目前的编程语言就是这样的

1909
01:08:18,000 --> 01:08:20,000
你不懂得什么是对象和指针

1910
01:08:20,000 --> 01:08:21,000
你就是

1911
01:08:21,000 --> 01:08:23,000
你是写不出来一个屏幕保护

1912
01:08:23,000 --> 01:08:24,000
但

1913
01:08:24,000 --> 01:08:25,000
但也不尽然吧

1914
01:08:25,000 --> 01:08:27,000
我觉得如果要我来

1915
01:08:28,000 --> 01:08:30,000
设计编程课的话

1916
01:08:30,000 --> 01:08:31,000
我可能会从比如说什么

1917
01:08:31,000 --> 01:08:33,000
Arduino 之类的地方入手

1918
01:08:33,000 --> 01:08:34,000
就是先

1919
01:08:34,000 --> 01:08:37,000
你先用一个语言叫什么

1920
01:08:38,000 --> 01:08:39,000
processing

1921
01:08:40,000 --> 01:08:42,000
用 processing 的集成环境写一个

1922
01:08:43,000 --> 01:08:48,000
可以让 Arduino 的 LED 亮起来的类 C 的程序

1923
01:08:51,000 --> 01:08:52,000
这不是很有成就感吗

1924
01:08:52,000 --> 01:08:53,000
而且

1925
01:08:53,000 --> 01:08:55,000
加上一个小马达或者是一个小探测器

1926
01:08:56,000 --> 01:08:57,000
立刻可以做出来一些

1927
01:08:57,000 --> 01:09:01,000
不管说它究竟有什么样真实的使用性质

1928
01:09:02,000 --> 01:09:02,000
但至少可以

1929
01:09:02,000 --> 01:09:04,000
就像精工实习

1930
01:09:04,000 --> 01:09:05,000
不是精工实习

1931
01:09:05,000 --> 01:09:06,000
电子实习

1932
01:09:06,000 --> 01:09:07,000
会让你做一个收音机一样

1933
01:09:08,000 --> 01:09:08,000
你只能听个响

1934
01:09:10,000 --> 01:09:11,000
但是很多人

1935
01:09:11,000 --> 01:09:13,000
花了很多时间去学编程

1936
01:09:13,000 --> 01:09:14,000
最后连响都听不了

1937
01:09:14,000 --> 01:09:15,000
就

1938
01:09:15,000 --> 01:09:16,000
你要写程序

1939
01:09:16,000 --> 01:09:18,000
然后坑之坑之的打开命令行

1940
01:09:18,000 --> 01:09:18,000
然后

1941
01:09:19,000 --> 01:09:20,000
让为官妹妹都失望了

1942
01:09:22,000 --> 01:09:23,000
对

1943
01:09:23,000 --> 01:09:23,000
所以其实

1944
01:09:24,000 --> 01:09:27,000
我觉得真的就是我们的教学的思想也好

1945
01:09:27,000 --> 01:09:28,000
这个理念也好

1946
01:09:28,000 --> 01:09:29,000
可能很多时候要

1947
01:09:29,000 --> 01:09:30,000
要转过来

1948
01:09:30,000 --> 01:09:31,000
要从一个

1949
01:09:31,000 --> 01:09:32,000
考虑到

1950
01:09:32,000 --> 01:09:35,000
绝大多数人应该从兴趣或者实用主义的

1951
01:09:35,000 --> 01:09:36,000
导向出手

1952
01:09:36,000 --> 01:09:37,000
你得先告诉他

1953
01:09:37,000 --> 01:09:39,000
我们为什么要做这么一件事情

1954
01:09:39,000 --> 01:09:41,000
然后我们如果要做这件事情需要什么样的

1955
01:09:42,000 --> 01:09:44,000
工具或者什么样的条件才能够实现

1956
01:09:44,000 --> 01:09:46,000
然后你告诉他这些解释清楚之后

1957
01:09:46,000 --> 01:09:47,000
你再去说

1958
01:09:47,000 --> 01:09:49,000
我们现在开始学这工具

1959
01:09:49,000 --> 01:09:51,000
然后你在学这过程中你还得不断的强化说

1960
01:09:51,000 --> 01:09:52,000
你看

1961
01:09:52,000 --> 01:09:56,000
我们今天学了指针和宿主这个概念

1962
01:09:56,000 --> 01:09:57,000
那么你可以做些什么样的事情

1963
01:09:57,000 --> 01:09:59,000
可以解决一部分

1964
01:09:59,000 --> 01:10:00,000
但我们之前要

1965
01:10:00,000 --> 01:10:03,000
也要实现了一个大目标中间的一小部分

1966
01:10:03,000 --> 01:10:04,000
对吧

1967
01:10:04,000 --> 01:10:05,000
这样才可以有一种

1968
01:10:06,000 --> 01:10:08,000
激励机制去不断的

1969
01:10:08,000 --> 01:10:10,000
去让那些人有更多的这种

1970
01:10:11,000 --> 01:10:12,000
对知识的渴求

1971
01:10:13,000 --> 01:10:14,000
不是说像现在

1972
01:10:14,000 --> 01:10:17,000
或者是过去我们学习的时候

1973
01:10:17,000 --> 01:10:20,000
先告诉你一堆悔色难懂的什么公式概念

1974
01:10:20,000 --> 01:10:21,000
然后

1975
01:10:21,000 --> 01:10:23,000
你也不知道到底是为什么要学这么东西

1976
01:10:23,000 --> 01:10:25,000
很盲目的这种方式吗

1977
01:10:25,000 --> 01:10:26,000
对

1978
01:10:26,000 --> 01:10:27,000
其实这样我想起来

1979
01:10:28,000 --> 01:10:29,000
还是回到

1980
01:10:30,000 --> 01:10:32,000
节目最开始说的要把

1981
01:10:33,000 --> 01:10:36,000
数据领域或者是应用领域的编程

1982
01:10:37,000 --> 01:10:39,000
gameify 的这样一个理念

1983
01:10:40,000 --> 01:10:42,000
有时候人们会问说

1984
01:10:42,000 --> 01:10:44,000
为什么小孩不愿意读书

1985
01:10:44,000 --> 01:10:46,000
而更愿意打游戏

1986
01:10:47,000 --> 01:10:48,000
你会想说这不是废话吗

1987
01:10:48,000 --> 01:10:49,000
因为游戏不好

1988
01:10:49,000 --> 01:10:51,000
可是那我进一步追问

1989
01:10:51,000 --> 01:10:52,000
为什么游戏这么好玩

1990
01:10:53,000 --> 01:10:55,000
就是因为有那么成千上万的人

1991
01:10:56,000 --> 01:10:58,000
literally 成千上万的人

1992
01:10:59,000 --> 01:11:01,000
花了成千上万个小时

1993
01:11:01,000 --> 01:11:03,000
认真的去设计

1994
01:11:03,000 --> 01:11:07,000
把这个系统设计的让你沉迷其中不能自拔

1995
01:11:07,000 --> 01:11:08,000
对啊

1996
01:11:08,000 --> 01:11:11,000
人家有各种综合的什么心理学的因素

1997
01:11:11,000 --> 01:11:14,000
去提高我们叫什么可玩性嘛

1998
01:11:14,000 --> 01:11:14,000
对吧

1999
01:11:14,000 --> 01:11:15,000
对啊

2000
01:11:15,000 --> 01:11:18,000
而反过来一个写教材的人可能是

2001
01:11:19,000 --> 01:11:20,000
我没有恶意

2002
01:11:20,000 --> 01:11:22,000
但是可能就只是一个想要平之称

2003
01:11:22,000 --> 01:11:25,000
然后赶紧东拼西走

2004
01:11:25,000 --> 01:11:26,000
搞出一本教材来

2005
01:11:26,000 --> 01:11:28,000
超超国外的教材来

2006
01:11:29,000 --> 01:11:32,000
的一个国内大学的什么副教授之类的人

2007
01:11:32,000 --> 01:11:32,000
不是吗

2008
01:11:32,000 --> 01:11:35,000
你看这种书怎么可能产生兴趣

2009
01:11:36,000 --> 01:11:36,000
没错

2010
01:11:37,000 --> 01:11:40,000
我记得我觉得最烂的一个

2011
01:11:40,000 --> 01:11:41,000
最好的一个例子就是

2012
01:11:42,000 --> 01:11:44,000
最好的一个环片就是例子就是

2013
01:11:45,000 --> 01:11:47,000
我上大学的时候学的《信心怠恕》那本书

2014
01:11:47,000 --> 01:11:49,000
我觉得简直是 bullshit

2015
01:11:49,000 --> 01:11:50,000
那个教材我忘了是谁写的

2016
01:11:50,000 --> 01:11:51,000
但

2017
01:11:51,000 --> 01:11:52,000
就

2018
01:11:52,000 --> 01:11:53,000
看得云里雾里

2019
01:11:53,000 --> 01:11:55,000
就直到我

2020
01:11:55,000 --> 01:11:56,000
到了德国

2021
01:11:56,000 --> 01:11:57,000
开始接触

2022
01:11:57,000 --> 01:11:59,000
就是德国人他非常喜欢写信心怠恕

2023
01:11:59,000 --> 01:12:02,000
喜欢《行列室》剧真到一个无可复简的地步

2024
01:12:03,000 --> 01:12:04,000
无以复加的地步

2025
01:12:04,000 --> 01:12:05,000
sorry

2026
01:12:05,000 --> 01:12:05,000
然后

2027
01:12:06,000 --> 01:12:08,000
我才意识到原来《行列室》是这么用的

2028
01:12:08,000 --> 01:12:11,000
或者说《行列室》其实是有内在规律和关联的

2029
01:12:11,000 --> 01:12:12,000
比如说他描述的空间

2030
01:12:12,000 --> 01:12:13,000
或者是

2031
01:12:13,000 --> 01:12:14,000
我那是什么东西

2032
01:12:14,000 --> 01:12:17,000
它是对于我们现实世界的一种转换

2033
01:12:17,000 --> 01:12:18,000
就是那个东西

2034
01:12:18,000 --> 01:12:19,000
直到写成那个形式

2035
01:12:19,000 --> 01:12:22,000
就是因为它写成那个形式最有效最有用

2036
01:12:22,000 --> 01:12:25,000
可是我在大学里面读那本博博的《信心怠恕》的时候

2037
01:12:25,000 --> 01:12:27,000
我是完全没有意识到这个

2038
01:12:27,000 --> 01:12:28,000
对

2039
01:12:28,000 --> 01:12:29,000
我这个印象也特别深刻

2040
01:12:29,000 --> 01:12:31,000
我上大学的时候这一块

2041
01:12:31,000 --> 01:12:32,000
当时我读的这个

2042
01:12:32,000 --> 01:12:34,000
当时好像学校分几个等级

2043
01:12:34,000 --> 01:12:36,000
就是说我们读的都是那种比较难的

2044
01:12:37,000 --> 01:12:39,000
有一种是面向文科院系

2045
01:12:39,000 --> 01:12:41,000
开的那个《信心怠恕》的课要稍微简单一点

2046
01:12:41,000 --> 01:12:44,000
但我们那个当时还算一个理科的院系

2047
01:12:45,000 --> 01:12:46,000
或者工程类的

2048
01:12:46,000 --> 01:12:47,000
然后

2049
01:12:49,000 --> 01:12:50,000
就觉得就很难

2050
01:12:50,000 --> 01:12:52,000
但是那个书就觉得写得很实

2051
01:12:52,000 --> 01:12:53,000
因为通篇你发完一看

2052
01:12:53,000 --> 01:12:56,000
没有一个例子这个东西到底是干嘛用的

2053
01:12:56,000 --> 01:12:58,000
然后全部都要告诉你一些公式定理

2054
01:12:58,000 --> 01:12:59,000
让你去证明怎么怎么样

2055
01:12:59,000 --> 01:13:00,000
让你去变换

2056
01:13:00,000 --> 01:13:01,000
他们就觉得

2057
01:13:02,000 --> 01:13:05,000
why why why am i doing a lot of this

2058
01:13:05,000 --> 01:13:06,000
对

2059
01:13:06,000 --> 01:13:06,000
对吧

2060
01:13:06,000 --> 01:13:07,000
有那种感觉

2061
01:13:07,000 --> 01:13:09,000
其实挺糟糕的

2062
01:13:09,000 --> 01:13:11,000
但是如果你能让我在第一节课里面

2063
01:13:11,000 --> 01:13:13,000
就了解这个行列式

2064
01:13:13,000 --> 01:13:15,000
或者说这个矩阵的变换

2065
01:13:15,000 --> 01:13:18,000
可以在比如说写游戏的时候用到

2066
01:13:18,000 --> 01:13:19,000
对啊

2067
01:13:19,000 --> 01:13:19,000
对啊

2068
01:13:19,000 --> 01:13:20,000
然后举个例子

2069
01:13:21,000 --> 01:13:23,000
那也许我就会眼睛一亮

2070
01:13:23,000 --> 01:13:24,000
然后开始拼命学这门课了

2071
01:13:24,000 --> 01:13:25,000
对啊

2072
01:13:25,000 --> 01:13:26,000
我也是后来在

2073
01:13:26,000 --> 01:13:30,000
后来其实在编程的时候做那个叫什么

2074
01:13:31,000 --> 01:13:31,000
位图

2075
01:13:31,000 --> 01:13:34,000
不是叫做向向图的那个构造的时候

2076
01:13:34,000 --> 01:13:34,000
比如说向向图

2077
01:13:34,000 --> 01:13:36,000
假设你有一个图形

2078
01:13:36,000 --> 01:13:38,000
在一个二维的做到系里面

2079
01:13:38,000 --> 01:13:40,000
你要去变换它的形状

2080
01:13:40,000 --> 01:13:40,000
对吧

2081
01:13:40,000 --> 01:13:42,000
你要去改变它的位置

2082
01:13:42,000 --> 01:13:43,000
然后你发现所有的这种操作

2083
01:13:43,000 --> 01:13:46,000
都可以转换成一个矩阵运算

2084
01:13:46,000 --> 01:13:48,000
你发现原来这个东西可就这么神奇了

2085
01:13:48,000 --> 01:13:49,000
还可以叠加

2086
01:13:49,000 --> 01:13:51,000
就是你可以通过矩阵运算的方法

2087
01:13:51,000 --> 01:13:52,000
把各种一些什么

2088
01:13:52,000 --> 01:13:53,000
你要先位移

2089
01:13:53,000 --> 01:13:54,000
然后再翻转

2090
01:13:54,000 --> 01:13:55,000
然后再扩大

2091
01:13:55,000 --> 01:13:57,000
再放大或者再缩小的这种

2092
01:13:57,000 --> 01:13:59,000
或者是拉伸或者怎么样的一个变化

2093
01:13:59,000 --> 01:14:01,000
你可以把它累加成一个

2094
01:14:01,000 --> 01:14:02,000
一个所谓的什么一个什么

2095
01:14:02,000 --> 01:14:04,000
特征矩阵之类的玩意儿

2096
01:14:04,000 --> 01:14:06,000
然后你再运用一次

2097
01:14:06,000 --> 01:14:07,000
这样就可以大大提高的

2098
01:14:07,000 --> 01:14:09,000
这个什么编程的效率

2099
01:14:09,000 --> 01:14:10,000
然后你会发现

2100
01:14:10,000 --> 01:14:12,000
矩阵运算可以并行

2101
01:14:12,000 --> 01:14:13,000
就什么并发执行

2102
01:14:13,000 --> 01:14:16,000
叫做 Single Instruction Naughty Data

2103
01:14:16,000 --> 01:14:17,000
这种方式来实行

2104
01:14:17,000 --> 01:14:20,000
你会发现原来这个东西这么的有用

2105
01:14:20,000 --> 01:14:22,000
你这种东西你就是在

2106
01:14:23,000 --> 01:14:25,000
技术教育的时候觉得

2107
01:14:25,000 --> 01:14:27,000
完全不会体会到的这种感受

2108
01:14:28,000 --> 01:14:28,000
没错

2109
01:14:28,000 --> 01:14:30,000
而且这个时候就更反映出来

2110
01:14:30,000 --> 01:14:32,000
就是这些东西其实都可以用计算机完成

2111
01:14:32,000 --> 01:14:35,000
没错

2112
01:14:36,000 --> 01:14:38,000
我还在那里找一条数对角线

2113
01:14:38,000 --> 01:14:39,000
对

2114
01:14:39,000 --> 01:14:41,000
所以其实我觉得很多时候有在想

2115
01:14:41,000 --> 01:14:43,000
现在我们技术和知识的进步

2116
01:14:44,000 --> 01:14:46,000
这么的加速的膨胀

2117
01:14:46,000 --> 01:14:49,000
整个知识体系也不断的扩展

2118
01:14:49,000 --> 01:14:51,000
假设我以后教育小孩的时候

2119
01:14:52,000 --> 01:14:53,000
会不会说还是按照这种

2120
01:14:53,000 --> 01:14:55,000
我们以前接受教育的时候

2121
01:14:55,000 --> 01:14:57,000
那种很愚蠢的模式在一步一步学

2122
01:14:57,000 --> 01:14:59,000
还是说好像不用学

2123
01:14:59,000 --> 01:15:01,000
不用花时间背那么多的

2124
01:15:01,000 --> 01:15:02,000
这种什么四则运算

2125
01:15:02,000 --> 01:15:04,000
或者是背成法表之类的

2126
01:15:04,000 --> 01:15:05,000
给你个计算器

2127
01:15:05,000 --> 01:15:07,000
你先明白里面的原理

2128
01:15:07,000 --> 01:15:08,000
然后之后你用就好了

2129
01:15:08,000 --> 01:15:10,000
如果你原理记不清楚了

2130
01:15:10,000 --> 01:15:11,000
然后说你回来再来去研究一下

2131
01:15:11,000 --> 01:15:12,000
到底是为什么

2132
01:15:12,000 --> 01:15:14,000
我觉得这样可能是一个更加

2133
01:15:14,000 --> 01:15:16,000
有效的一个方法

2134
01:15:17,000 --> 01:15:17,000
没错

2135
01:15:17,000 --> 01:15:19,000
或者说从某一个角度来讲

2136
01:15:19,000 --> 01:15:21,000
有一些我们过去觉得

2137
01:15:21,000 --> 01:15:24,000
你必须要学会举证

2138
01:15:24,000 --> 01:15:25,000
那些变换的一些基础的技巧

2139
01:15:25,000 --> 01:15:27,000
或者推导什么

2140
01:15:27,000 --> 01:15:28,000
微积分的技术技巧

2141
01:15:28,000 --> 01:15:29,000
你才能够做的事情

2142
01:15:29,000 --> 01:15:30,000
其实也不是特别必要

2143
01:15:30,000 --> 01:15:31,000
就说我们

2144
01:15:31,000 --> 01:15:33,000
就好像我们现在写软件一样

2145
01:15:33,000 --> 01:15:36,000
你不可能有任何一个程序员说

2146
01:15:36,000 --> 01:15:37,000
我这个软件

2147
01:15:37,000 --> 01:15:39,000
我从它的顶层应用到底层时间

2148
01:15:39,000 --> 01:15:41,000
每一个细节我都知道的一清二楚

2149
01:15:41,000 --> 01:15:43,000
我能够知道它是怎么去实现的

2150
01:15:43,000 --> 01:15:45,000
中间你始终是有一些

2151
01:15:46,000 --> 01:15:48,000
概念的这种误区

2152
01:15:48,000 --> 01:15:50,000
最终是你是当做黑盒来处理的

2153
01:15:50,000 --> 01:15:53,000
你就记住它的能做什么样的事

2154
01:15:53,000 --> 01:15:55,000
然后能实现什么样的功能

2155
01:15:55,000 --> 01:15:58,000
至于说它具体内部的原理或者实现

2156
01:15:58,000 --> 01:15:59,000
你不清楚

2157
01:15:59,000 --> 01:16:02,000
其实短期内影响也不是那么大

2158
01:16:02,000 --> 01:16:04,000
就等你真的有把它弄清楚

2159
01:16:04,000 --> 01:16:05,000
需要的时候

2160
01:16:05,000 --> 01:16:06,000
再去弄清楚也不晚

2161
01:16:06,000 --> 01:16:07,000
没错

2162
01:16:07,000 --> 01:16:10,000
所以可能在面临这种知识爆炸的

2163
01:16:10,000 --> 01:16:12,000
这么一个时代

2164
01:16:12,000 --> 01:16:14,000
需要去缩短我们去

2165
01:16:15,000 --> 01:16:18,000
能够学习致用的能力的这种方法

2166
01:16:18,000 --> 01:16:19,000
可能很可能就是说

2167
01:16:20,000 --> 01:16:22,000
我们过去觉得是一定要打捞基础的东西

2168
01:16:22,000 --> 01:16:25,000
其实也不一定非得在那个时候

2169
01:16:25,000 --> 01:16:28,000
一一从底层一个往上学

2170
01:16:28,000 --> 01:16:29,000
对吧

2171
01:16:29,000 --> 01:16:31,000
就好像现在我觉得很多这种

2172
01:16:31,000 --> 01:16:33,000
像 CS 的教育

2173
01:16:33,000 --> 01:16:36,000
你也很难说你真的会从会编

2174
01:16:36,000 --> 01:16:37,000
或者从机器语言

2175
01:16:37,000 --> 01:16:39,000
一行一行的往上教着走

2176
01:16:39,000 --> 01:16:39,000
对吧

2177
01:16:39,000 --> 01:16:41,000
可能他学到一半就已经丧失掉了

2178
01:16:41,000 --> 01:16:42,000
全部的兴趣了

2179
01:16:43,000 --> 01:16:46,000
那反而是说我们来先从应用的角度出发

2180
01:16:46,000 --> 01:16:48,000
我们来先写个简单的游戏

2181
01:16:48,000 --> 01:16:49,000
然后告诉你一些

2182
01:16:49,000 --> 01:16:50,000
你要为了达成这个游戏

2183
01:16:50,000 --> 01:16:52,000
你要先学会

2184
01:16:52,000 --> 01:16:56,000
怎么操作图像上的一些图形 API

2185
01:16:56,000 --> 01:16:59,000
你要怎么去操作一个结构

2186
01:16:59,000 --> 01:17:00,000
把这个游戏表达出来

2187
01:17:00,000 --> 01:17:03,000
然后至于说中中天女王一时的算法

2188
01:17:03,000 --> 01:17:04,000
可以以后一步一步再去学

2189
01:17:04,000 --> 01:17:07,000
就是一个叫什么 top down 的 approach

2190
01:17:07,000 --> 01:17:08,000
你先学会

2191
01:17:08,000 --> 01:17:09,000
零部件怎么样

2192
01:17:09,000 --> 01:17:12,000
不是先学会某一个模块怎么样

2193
01:17:12,000 --> 01:17:14,000
然后再把模块拆成零部件

2194
01:17:14,000 --> 01:17:15,000
然后直到这样无处反复

2195
01:17:15,000 --> 01:17:18,000
直到拆成最后的不可再分的一个东西

2196
01:17:18,000 --> 01:17:20,000
可能这是一个更好的促销的方式

2197
01:17:21,000 --> 01:17:24,000
对就好像你不去弄明白画游戏是怎么运作的

2198
01:17:24,000 --> 01:17:25,000
也是可以寄过个车辆

2199
01:17:25,000 --> 01:17:26,000
对

2200
01:17:26,000 --> 01:17:27,000
没错

2201
01:17:27,000 --> 01:17:29,000
就是像到现在为止我学

2202
01:17:29,000 --> 01:17:31,000
当时我学开车的时候

2203
01:17:31,000 --> 01:17:34,000
我一个我叔叔他教我开车

2204
01:17:34,000 --> 01:17:36,000
然后就是说要先学一些什么

2205
01:17:36,000 --> 01:17:38,000
什么画游戏什么是什么

2206
01:17:38,000 --> 01:17:39,000
然后发动机是怎么运转

2207
01:17:39,000 --> 01:17:41,000
其实到现在为止我对发动机的工作原理

2208
01:17:41,000 --> 01:17:43,000
就还是觉得很神奇

2209
01:17:43,000 --> 01:17:45,000
特别是看那个什么行星齿轮那些东西

2210
01:17:45,000 --> 01:17:48,000
我觉得我脑子完全想不出来为什么会这样

2211
01:17:49,000 --> 01:17:51,000
但是它不影响你开这个车

2212
01:17:51,000 --> 01:17:52,000
对吧

2213
01:17:52,000 --> 01:17:54,000
所以我觉得可能对于很多人来说

2214
01:17:54,000 --> 01:17:56,000
就除非你真的要去学这么机械工程

2215
01:17:56,000 --> 01:17:57,000
你要造一个车

2216
01:17:57,000 --> 01:17:59,000
那你对于一个普通人来讲

2217
01:17:59,000 --> 01:18:00,000
你学会开车可能也就够了

2218
01:18:00,000 --> 01:18:03,000
不一定真的要学会为什么

2219
01:18:03,000 --> 01:18:05,000
这个行星齿轮这个工作原理是怎么样

2220
01:18:05,000 --> 01:18:08,000
怎么才能什么传动笔又怎么怎么样那些东西

2221
01:18:08,000 --> 01:18:09,000
对

2222
01:18:10,000 --> 01:18:10,000
OK

2223
01:18:11,000 --> 01:18:11,000
OK

2224
01:18:11,000 --> 01:18:12,000
我怎么从

2225
01:18:12,000 --> 01:18:16,000
好像扯的有点远

2226
01:18:16,000 --> 01:18:17,000
对

2227
01:18:17,000 --> 01:18:19,000
好回到回到新闻环节

2228
01:18:19,000 --> 01:18:20,000
我们居然还在新闻环节

2229
01:18:21,000 --> 01:18:23,000
就是下条新闻是

2230
01:18:24,000 --> 01:18:26,000
Apple 买了一个公司

2231
01:18:29,000 --> 01:18:32,000
中国公司叫做 FoundationDB

2232
01:18:32,000 --> 01:18:33,000
我好像用过他们的服务

2233
01:18:33,000 --> 01:18:35,000
是一个在线的

2234
01:18:36,000 --> 01:18:40,000
在线数据库提供商

2235
01:18:43,000 --> 01:18:45,000
所以其实这件事情还是挺好奇的

2236
01:18:45,000 --> 01:18:49,000
我之前没有听说过这家公司

2237
01:18:49,000 --> 01:18:50,000
说你有用过他们

2238
01:18:50,000 --> 01:18:50,000
你可能简单介绍一下

2239
01:18:50,000 --> 01:18:52,000
它这是一个什么样的产品吗

2240
01:18:53,000 --> 01:18:54,000
其实就是一个

2241
01:18:54,000 --> 01:18:57,000
FoundationDB 其实就是一个在线的 Data Store

2242
01:18:57,000 --> 01:18:58,000
你可以

2243
01:18:59,000 --> 01:19:00,000
注册一个账户

2244
01:19:00,000 --> 01:19:00,000
申请个 API

2245
01:19:00,000 --> 01:19:03,000
然后它同时提供 Node Sequel 和 SQL

2246
01:19:04,000 --> 01:19:05,000
数据库

2247
01:19:05,000 --> 01:19:05,000
OK

2248
01:19:05,000 --> 01:19:07,000
我没有用过它的 SQL 服务

2249
01:19:07,000 --> 01:19:09,000
然后它的 Node Sequel 服务就是一个

2250
01:19:09,000 --> 01:19:10,000
它等于它给你一个网址

2251
01:19:10,000 --> 01:19:12,000
然后你可以往这个网址上存数据

2252
01:19:12,000 --> 01:19:13,000
然后你就可以使用这个网址

2253
01:19:13,000 --> 01:19:17,000
作为你的应用程序的后台

2254
01:19:17,000 --> 01:19:18,000
然后的数据仓库

2255
01:19:18,000 --> 01:19:20,000
然后往里面存东西或取东西

2256
01:19:20,000 --> 01:19:22,000
然后一直很稳定

2257
01:19:23,000 --> 01:19:24,000
没有什么疤痒之类的

2258
01:19:24,000 --> 01:19:26,000
我用过很多很多件事

2259
01:19:26,000 --> 01:19:27,000
因为我其实也没有什么具体

2260
01:19:27,000 --> 01:19:29,000
其实的需求需要用到它

2261
01:19:30,000 --> 01:19:31,000
他们不是说有一个什么

2262
01:19:31,000 --> 01:19:33,000
可以下载回来在自己机器上用的

2263
01:19:33,000 --> 01:19:35,000
就不一定是一个网络服务吧

2264
01:19:35,000 --> 01:19:36,000
那我还真没有

2265
01:19:37,000 --> 01:19:37,000
OK

2266
01:19:39,000 --> 01:19:41,000
然后我就大概去看一下它的报道

2267
01:19:41,000 --> 01:19:42,000
因为我自己也没有听说

2268
01:19:42,000 --> 01:19:43,000
或者接触过这个产品

2269
01:19:43,000 --> 01:19:45,000
就是我看它的报道就说

2270
01:19:45,000 --> 01:19:47,000
它的这个卖点

2271
01:19:47,000 --> 01:19:48,000
是说它的性能很好

2272
01:19:48,000 --> 01:19:50,000
就是特别是写入的性能

2273
01:19:50,000 --> 01:19:51,000
非常非常的惊人

2274
01:19:51,000 --> 01:19:52,000
好像是比

2275
01:19:52,000 --> 01:19:54,000
同类产品要高

2276
01:19:54,000 --> 01:19:55,000
有数量级的提高吧好像是

2277
01:19:56,000 --> 01:19:58,000
听起来和 B 公司相似

2278
01:19:59,000 --> 01:20:00,000
什么情况

2279
01:20:00,000 --> 01:20:01,000
Anyway

2280
01:20:02,000 --> 01:20:04,000
其实我想说的就是

2281
01:20:04,000 --> 01:20:06,000
苹果的公司买这个

2282
01:20:06,000 --> 01:20:10,000
公司的动机是想要提供更好的

2283
01:20:10,000 --> 01:20:11,000
云端服务吗

2284
01:20:12,000 --> 01:20:13,000
这个不奇怪

2285
01:20:13,000 --> 01:20:15,000
我们不是老土子和苹果云端服务不好吗

2286
01:20:15,000 --> 01:20:18,000
那它如果自己短期内不能

2287
01:20:19,000 --> 01:20:21,000
原生的研发出

2288
01:20:22,000 --> 01:20:23,000
靠谱的服务

2289
01:20:23,000 --> 01:20:24,000
那买这种

2290
01:20:24,000 --> 01:20:26,000
市场上现有的靠谱的服务也可以啊

2291
01:20:26,000 --> 01:20:27,000
挺好的

2292
01:20:27,000 --> 01:20:29,000
所以这是一个 Aqua Hire

2293
01:20:30,000 --> 01:20:30,000
OK

2294
01:20:31,000 --> 01:20:33,000
然后我看到那个 Hacker News 上面

2295
01:20:33,000 --> 01:20:35,000
很多人是对这个吐槽

2296
01:20:35,000 --> 01:20:35,000
就是说

2297
01:20:36,000 --> 01:20:37,000
因为它之前是有一个

2298
01:20:38,000 --> 01:20:40,000
它不是它是必然的产品

2299
01:20:40,000 --> 01:20:41,000
但是它有一个免费的

2300
01:20:41,000 --> 01:20:42,000
可以试用的版本

2301
01:20:42,000 --> 01:20:42,000
我记得

2302
01:20:43,000 --> 01:20:44,000
然后很多人说

2303
01:20:44,000 --> 01:20:48,000
就拿回去之前用这个 FoundationDB 做了产品

2304
01:20:48,000 --> 01:20:50,000
然后现在苹果把它这家公司买下来之后

2305
01:20:51,000 --> 01:20:52,000
就不再提供下载了

2306
01:20:52,000 --> 01:20:53,000
当然也可以想见

2307
01:20:53,000 --> 01:20:54,000
以后也不会有

2308
01:20:54,000 --> 01:20:56,000
按照苹果一贯的调性

2309
01:20:56,000 --> 01:20:58,000
它买了之后是肯定不会把这个东西

2310
01:20:58,000 --> 01:21:00,000
拿出来给大家免费的用的

2311
01:21:00,000 --> 01:21:02,000
所以就变成苹果私有的一个技术

2312
01:21:03,000 --> 01:21:06,000
那之前买了这个产品或者是

2313
01:21:06,000 --> 01:21:07,000
用了这个服务

2314
01:21:07,000 --> 01:21:09,000
然后购借了自己产品的人

2315
01:21:09,000 --> 01:21:11,000
现在就得想怎么去赶快转型吧

2316
01:21:12,000 --> 01:21:14,000
这个是一个挺头大的一个事情

2317
01:21:16,000 --> 01:21:17,000
我觉得不一定

2318
01:21:19,000 --> 01:21:20,000
你觉得苹果会

2319
01:21:22,000 --> 01:21:23,000
苹果是这样调性的吗

2320
01:21:24,000 --> 01:21:25,000
你看它买过什么样的服务

2321
01:21:25,000 --> 01:21:27,000
它最终会开放给

2322
01:21:27,000 --> 01:21:29,000
可是之前基本上都是

2323
01:21:30,000 --> 01:21:32,000
比如说 TESFLIGHT

2324
01:21:33,000 --> 01:21:35,000
TESFLIGHT 不是一个很好按的

2325
01:21:36,000 --> 01:21:36,000
对呀

2326
01:21:36,000 --> 01:21:39,000
TESFLIGHT 现在不就只能在 IOS 上面用了吗

2327
01:21:39,000 --> 01:21:41,000
可是 TESFLIGHT 之前就只能在 IOS 上面

2328
01:21:42,000 --> 01:21:43,000
它不是安卓版吗

2329
01:21:43,000 --> 01:21:44,000
TESFLIGHT 有安卓的

2330
01:21:44,000 --> 01:21:45,000
对

2331
01:21:45,000 --> 01:21:48,000
所以其实还是会有一些问题的

2332
01:21:48,000 --> 01:21:50,000
当然你从商业的角度上讲

2333
01:21:50,000 --> 01:21:51,000
这样无可厚非

2334
01:21:51,000 --> 01:21:51,000
对呀

2335
01:21:51,000 --> 01:21:52,000
谁要你要用一个

2336
01:21:53,000 --> 01:21:55,000
没有自己文件的盈利能力

2337
01:21:55,000 --> 01:21:57,000
或者盈利历史的独立的公司

2338
01:21:57,000 --> 01:22:00,000
要用一个什么小公司的

2339
01:22:00,000 --> 01:22:02,000
创业团队的做的东西

2340
01:22:02,000 --> 01:22:05,000
那就是会有这种状况

2341
01:22:05,000 --> 01:22:05,000
没有办法

2342
01:22:07,000 --> 01:22:08,000
嗯

2343
01:22:08,000 --> 01:22:09,000
说也是

2344
01:22:09,000 --> 01:22:09,000
所以

2345
01:22:09,000 --> 01:22:11,000
现在我从来没有想过这个

2346
01:22:11,000 --> 01:22:12,000
就这也是一个教训

2347
01:22:12,000 --> 01:22:15,000
就是说你做一个创业公司也好

2348
01:22:15,000 --> 01:22:18,000
如果你得这个某一样的技术

2349
01:22:18,000 --> 01:22:19,000
对你来说很重要

2350
01:22:19,000 --> 01:22:19,000
你要确保

2351
01:22:19,000 --> 01:22:22,000
要不你用的是一个很成熟而开放的一个技术

2352
01:22:22,000 --> 01:22:23,000
就不会出现

2353
01:22:23,000 --> 01:22:27,000
这么某一个公司收购之后

2354
01:22:27,000 --> 01:22:29,000
你这个东西就以后再没法用了

2355
01:22:29,000 --> 01:22:31,000
这种比较尴尬的局面

2356
01:22:31,000 --> 01:22:31,000
嗯

2357
01:22:32,000 --> 01:22:33,000
嗯

2358
01:22:33,000 --> 01:22:35,000
但是反过来也有一个 argument

2359
01:22:35,000 --> 01:22:36,000
就是

2360
01:22:37,000 --> 01:22:39,000
前公司的

2361
01:22:40,000 --> 01:22:42,000
前公司在决定某一个

2362
01:22:43,000 --> 01:22:46,000
项目的技术的时候会说

2363
01:22:46,000 --> 01:22:49,000
如果可以选择的话

2364
01:22:49,000 --> 01:22:52,000
尽量选择那些背后有个公司在支持的

2365
01:22:53,000 --> 01:22:54,000
闭源产品

2366
01:22:54,000 --> 01:22:55,000
不可能没有说闭源产品

2367
01:22:55,000 --> 01:22:57,000
就是说至少公司

2368
01:22:57,000 --> 01:22:59,000
他这个产品背后有一个公司在支持

2369
01:22:59,000 --> 01:23:00,000
这样你出了问题的时候你可以

2370
01:23:02,000 --> 01:23:03,000
用钱解决问题

2371
01:23:03,000 --> 01:23:05,000
你能用钱解决问题就是小问题

2372
01:23:05,000 --> 01:23:07,000
就是基本上是这样的理念

2373
01:23:07,000 --> 01:23:08,000
就是

2374
01:23:08,000 --> 01:23:09,000
因为如果你使用一些开源产品的话

2375
01:23:09,000 --> 01:23:10,000
有可能

2376
01:23:10,000 --> 01:23:10,000
一

2377
01:23:10,000 --> 01:23:13,000
你必须自己投注很多时间去解决一个

2378
01:23:13,000 --> 01:23:14,000
可能非常 critical 的问题

2379
01:23:15,000 --> 01:23:15,000
嗯

2380
01:23:15,000 --> 01:23:18,000
二也许这个开源社区渐渐的滑了

2381
01:23:19,000 --> 01:23:21,000
所以他现在就说要找那种

2382
01:23:21,000 --> 01:23:23,000
就刚才讲你那个是一种模式吗

2383
01:23:23,000 --> 01:23:25,000
现在很多这种开源的技术

2384
01:23:25,000 --> 01:23:27,000
他也是走的这么一种方式

2385
01:23:27,000 --> 01:23:28,000
开源加服务

2386
01:23:28,000 --> 01:23:29,000
对开源

2387
01:23:29,000 --> 01:23:32,000
就是这个技术产品可能最核心的

2388
01:23:32,000 --> 01:23:34,000
就起码大部分是开源的

2389
01:23:34,000 --> 01:23:35,000
就是你可以拿一个免费版本

2390
01:23:35,000 --> 01:23:37,000
自己回去 downton 自己用

2391
01:23:37,000 --> 01:23:40,000
但他同时也买付费咨询的服务

2392
01:23:40,000 --> 01:23:42,000
就是如果你有遇到什么实际的问题

2393
01:23:42,000 --> 01:23:43,000
自己解决不了了

2394
01:23:43,000 --> 01:23:45,000
那你可以付费给这个公司做

2395
01:23:45,000 --> 01:23:45,000
他们会

2396
01:23:45,000 --> 01:23:47,000
因为他们是这个

2397
01:23:47,000 --> 01:23:49,000
开源项目的主要的开发者

2398
01:23:49,000 --> 01:23:52,000
然后他们对这个也有更深刻的了解

2399
01:23:52,000 --> 01:23:54,000
那么他能够帮你去解决

2400
01:23:54,000 --> 01:23:55,000
你自己在短时间

2401
01:23:55,000 --> 01:23:56,000
没有办法自己解决的问题

2402
01:23:56,000 --> 01:23:58,000
这也是一个很好的方案

2403
01:23:59,000 --> 01:24:00,000
但问题就是说这个时候

2404
01:24:00,000 --> 01:24:01,000
你还是得小心

2405
01:24:01,000 --> 01:24:02,000
你要去选那种

2406
01:24:02,000 --> 01:24:05,000
不会被突然被收购掉的这种公司

2407
01:24:05,000 --> 01:24:07,000
那像 FoundationDB 这个很不幸

2408
01:24:07,000 --> 01:24:09,000
就不属于这个类型

2409
01:24:09,000 --> 01:24:11,000
那之前用的人现在就可能就

2410
01:24:11,000 --> 01:24:13,000
这些就自认倒霉了呗

2411
01:24:16,000 --> 01:24:17,000
好吧

2412
01:24:17,000 --> 01:24:17,000
OK

2413
01:24:19,000 --> 01:24:21,000
今天我们终于要进入正题了

2414
01:24:21,000 --> 01:24:22,000
已经说了一个万小时

2415
01:24:24,000 --> 01:24:25,000
今天的正题就是

2416
01:24:26,000 --> 01:24:27,000
类型系统

2417
01:24:29,000 --> 01:24:30,000
此处加入回忆若干

2418
01:24:30,000 --> 01:24:31,000
类型系统

2419
01:24:33,000 --> 01:24:34,000
你这个自带回忆

2420
01:24:36,000 --> 01:24:36,000
对

2421
01:24:36,000 --> 01:24:39,000
我其实这个主题

2422
01:24:39,000 --> 01:24:41,000
我必须承认选得有点仓促

2423
01:24:41,000 --> 01:24:44,000
因为我下周就要回国了

2424
01:24:44,000 --> 01:24:45,000
所以

2425
01:24:45,000 --> 01:24:46,000
没有很

2426
01:24:46,000 --> 01:24:48,000
就我们录这一期跟录上一期

2427
01:24:48,000 --> 01:24:49,000
其实没有隔几天

2428
01:24:49,000 --> 01:24:50,000
就是

2429
01:24:51,000 --> 01:24:51,000
没有

2430
01:24:52,000 --> 01:24:54,000
非常充裕的时间来准备这件事情

2431
01:24:54,000 --> 01:24:56,000
我只能说这个话题其实是我

2432
01:24:57,000 --> 01:24:59,000
隐隐约约已经想了有一阵子的

2433
01:24:59,000 --> 01:25:01,000
就是有时候我经常会想要跟

2434
01:25:01,000 --> 01:25:04,000
而且我已经跟一些人聊过这些事情

2435
01:25:04,000 --> 01:25:05,000
OK

2436
01:25:07,000 --> 01:25:10,000
但是我觉得类型系统其实是一个

2437
01:25:10,000 --> 01:25:12,000
很少被人提起来

2438
01:25:12,000 --> 01:25:13,000
至少在程序员圈子里面

2439
01:25:13,000 --> 01:25:14,000
你会觉得它是一个

2440
01:25:14,000 --> 01:25:16,000
天经地义就像吃饭睡觉一样

2441
01:25:16,000 --> 01:25:17,000
正常的存在

2442
01:25:18,000 --> 01:25:19,000
但是

2443
01:25:19,000 --> 01:25:22,000
却很容易成为一个

2444
01:25:22,000 --> 01:25:24,000
学习变成过程之中

2445
01:25:25,000 --> 01:25:27,000
绊脚石或者说

2446
01:25:27,000 --> 01:25:30,000
屋子里面的大象一样的

2447
01:25:30,000 --> 01:25:31,000
这样一个问题

2448
01:25:31,000 --> 01:25:31,000
就是

2449
01:25:31,000 --> 01:25:32,000
它明明就在那儿

2450
01:25:32,000 --> 01:25:34,000
但是很少有人讨论

2451
01:25:34,000 --> 01:25:35,000
没错

2452
01:25:36,000 --> 01:25:37,000
你说没错

2453
01:25:37,000 --> 01:25:39,000
是不是你被类型系统折磨过吗

2454
01:25:39,000 --> 01:25:42,000
我觉得至少你任何一个

2455
01:25:42,000 --> 01:25:45,000
就起码你想在学这种所谓强类型的语言

2456
01:25:45,000 --> 01:25:48,000
像什么 Java 啊这类的

2457
01:25:48,000 --> 01:25:49,000
很多人都会被折腾过

2458
01:25:49,000 --> 01:25:54,000
把这个变样的声明的类型又不对了

2459
01:25:54,000 --> 01:25:54,000
或者说

2460
01:25:54,000 --> 01:25:55,000
包括很多

2461
01:25:55,000 --> 01:25:58,000
现在不是很多语言在搞那种类型推导吗

2462
01:25:58,000 --> 01:26:01,000
就是你不用显示的声明很多地方的语言

2463
01:26:01,000 --> 01:26:01,000
但是

2464
01:26:02,000 --> 01:26:04,000
对它这个 Compiler 编译器

2465
01:26:04,000 --> 01:26:06,000
它会帮你在编译的时候

2466
01:26:06,000 --> 01:26:07,000
去推导出你那些东西的

2467
01:26:07,000 --> 01:26:09,000
哪些应该是哪些类型的

2468
01:26:09,000 --> 01:26:10,000
如果它推导不出来

2469
01:26:10,000 --> 01:26:11,000
那么它就会报错

2470
01:26:11,000 --> 01:26:12,000
这个时候你才可以

2471
01:26:12,000 --> 01:26:14,000
想想为什么会报错

2472
01:26:14,000 --> 01:26:16,000
想这个是不是我想错了

2473
01:26:16,000 --> 01:26:17,000
还有怎么样

2474
01:26:17,000 --> 01:26:17,000
然后

2475
01:26:17,000 --> 01:26:21,000
包括在日常的使用中

2476
01:26:21,000 --> 01:26:24,000
我们用到很多这种所谓的动态类型的语言

2477
01:26:24,000 --> 01:26:26,000
那就坑就更多了

2478
01:26:26,000 --> 01:26:28,000
你可能指望着写了一个函数

2479
01:26:28,000 --> 01:26:30,000
指望着传两个参数进来

2480
01:26:30,000 --> 01:26:32,000
都是一个是整数

2481
01:26:32,000 --> 01:26:33,000
一个是浮点数

2482
01:26:33,000 --> 01:26:35,000
然后这边突然传两个字符转过来

2483
01:26:35,000 --> 01:26:35,000
你怎么办

2484
01:26:36,000 --> 01:26:36,000
对吧

2485
01:26:37,000 --> 01:26:39,000
所以其实在现实中还是要

2486
01:26:39,000 --> 01:26:43,000
就很大程度上是要跟这个类型系统搏斗的

2487
01:26:43,000 --> 01:26:46,000
但其实你刚才描述的这些问题

2488
01:26:47,000 --> 01:26:48,000
我想说的就是

2489
01:26:49,000 --> 01:26:50,000
你仍旧在把它当做一个

2490
01:26:50,000 --> 01:26:52,000
司空见关的东西来处理

2491
01:26:52,000 --> 01:26:53,000
你知道它在哪

2492
01:26:53,000 --> 01:26:55,000
你知道你要跟它打交道

2493
01:26:56,000 --> 01:26:57,000
我想说的是就是

2494
01:26:57,000 --> 01:27:00,000
我之所以会产生这样

2495
01:27:00,000 --> 01:27:02,000
对这个话题产生兴趣是因为我

2496
01:27:03,000 --> 01:27:05,000
想起了一件事就是

2497
01:27:07,000 --> 01:27:08,000
因为我学变成很早了

2498
01:27:08,000 --> 01:27:09,000
就是从

2499
01:27:11,000 --> 01:27:12,000
自处加入年龄的

2500
01:27:12,000 --> 01:27:13,000
OK

2501
01:27:13,000 --> 01:27:14,000
我就不透露自己年龄了

2502
01:27:15,000 --> 01:27:16,000
我在上大学的时候

2503
01:27:17,000 --> 01:27:20,000
教我的同学

2504
01:27:21,000 --> 01:27:23,000
一些就是编程的基本概念

2505
01:27:23,000 --> 01:27:24,000
我发现

2506
01:27:25,000 --> 01:27:27,000
比如说一个非常简单的事情

2507
01:27:27,000 --> 01:27:29,000
就是字符串这个东西

2508
01:27:30,000 --> 01:27:32,000
你需要跟它解释很久

2509
01:27:33,000 --> 01:27:36,000
就是一个没有受过编程

2510
01:27:37,000 --> 01:27:38,000
一个没有写过程序的人

2511
01:27:40,000 --> 01:27:43,000
很有可能不明白为什么

2512
01:27:44,000 --> 01:27:46,000
一个数字

2513
01:27:46,000 --> 01:27:46,000
比如说一个数字

2514
01:27:49,000 --> 01:27:49,000
2 吧

2515
01:27:50,000 --> 01:27:51,000
数字 2 为什么

2516
01:27:52,000 --> 01:27:53,000
单独写出来

2517
01:27:53,000 --> 01:27:56,000
和写在两个引号之间的时候

2518
01:27:58,000 --> 01:27:59,000
差别就是这么大的

2519
01:27:59,000 --> 01:28:00,000
对

2520
01:28:00,000 --> 01:28:02,000
就是对一个正常人来说

2521
01:28:02,000 --> 01:28:03,000
对一个不写程序的人来说

2522
01:28:03,000 --> 01:28:06,000
你把一个数字 2 写在一张纸上

2523
01:28:06,000 --> 01:28:08,000
你对它说

2524
01:28:08,000 --> 01:28:10,000
或者说你从一个程序的角度讲

2525
01:28:10,000 --> 01:28:11,000
请问这个数字是整形的

2526
01:28:11,000 --> 01:28:13,000
还是字符类型

2527
01:28:13,000 --> 01:28:14,000
你说得出来吗

2528
01:28:14,000 --> 01:28:15,000
你说不出来

2529
01:28:15,000 --> 01:28:16,000
但是

2530
01:28:16,000 --> 01:28:17,000
但是

2531
01:28:17,000 --> 01:28:20,000
为什么突然学编程的时候

2532
01:28:20,000 --> 01:28:21,000
这件事情就

2533
01:28:22,000 --> 01:28:23,000
一下子变得这么重要

2534
01:28:23,000 --> 01:28:24,000
就是

2535
01:28:25,000 --> 01:28:29,000
为什么我不加引号的 2

2536
01:28:29,000 --> 01:28:32,000
对于计算机来说就是 10

2537
01:28:32,000 --> 01:28:36,000
而加了双引号的 2 对计算机来说就是

2538
01:28:38,000 --> 01:28:39,000
2 的

2539
01:28:39,000 --> 01:28:40,000
Ask you my word

2540
01:28:41,000 --> 01:28:43,000
0 是 48

2541
01:28:43,000 --> 01:28:44,000
20

2542
01:28:45,000 --> 01:28:46,000
50

2543
01:28:46,000 --> 01:28:48,000
为什么加上双引号之后

2544
01:28:48,000 --> 01:28:49,000
它就变成 50 了

2545
01:28:50,000 --> 01:28:53,000
就是对于当时学 C 语言的同学来说

2546
01:28:53,000 --> 01:28:55,000
为什么这件事情

2547
01:28:57,000 --> 01:29:01,000
是很难一时用字眼办语解释清楚

2548
01:29:01,000 --> 01:29:01,000
就是

2549
01:29:01,000 --> 01:29:03,000
为什么我们在写程序的时候

2550
01:29:03,000 --> 01:29:04,000
就要产生这样的差别呢

2551
01:29:06,000 --> 01:29:07,000
我觉得这是一个

2552
01:29:07,000 --> 01:29:10,000
这是一个很有可能折磨一些人的问题

2553
01:29:10,000 --> 01:29:10,000
所以

2554
01:29:13,000 --> 01:29:13,000
我还是

2555
01:29:13,000 --> 01:29:16,000
我想要从这一点上说开始

2556
01:29:18,000 --> 01:29:20,000
大概就是这样一个话题来源

2557
01:29:20,000 --> 01:29:22,000
就是我觉得就是

2558
01:29:22,000 --> 01:29:24,000
我想要解释清楚的一件事情

2559
01:29:24,000 --> 01:29:24,000
就是

2560
01:29:24,000 --> 01:29:26,000
为什么计算机要有类型系统

2561
01:29:26,000 --> 01:29:28,000
为什么我们作为程序员

2562
01:29:28,000 --> 01:29:29,000
作为一个

2563
01:29:30,000 --> 01:29:31,000
作为一个

2564
01:29:32,000 --> 01:29:34,000
介于完全不需要理会

2565
01:29:35,000 --> 01:29:37,000
类型系统的人

2566
01:29:37,000 --> 01:29:42,000
和完全不知道什么是类型系统的计算机之间

2567
01:29:42,000 --> 01:29:43,000
的这么一个

2568
01:29:44,000 --> 01:29:44,000
中间人

2569
01:29:45,000 --> 01:29:47,000
会一定要跟类型系统

2570
01:29:48,000 --> 01:29:49,000
天天打交道

2571
01:29:49,000 --> 01:29:51,000
然后把自己折磨的痛痛一生的

2572
01:29:54,000 --> 01:29:55,000
对吧

2573
01:29:55,000 --> 01:29:56,000
OK

2574
01:29:59,000 --> 01:30:00,000
什么是类型系统

2575
01:30:01,000 --> 01:30:02,000
我刚才说了

2576
01:30:02,000 --> 01:30:03,000
比如说

2577
01:30:03,000 --> 01:30:04,000
一个数字 2

2578
01:30:05,000 --> 01:30:07,000
在不加引号的时候

2579
01:30:07,000 --> 01:30:08,000
它是一个

2580
01:30:09,000 --> 01:30:10,000
它是一个数字类型

2581
01:30:10,000 --> 01:30:11,000
而加了引号之后

2582
01:30:11,000 --> 01:30:13,000
它变成了一个字符类型

2583
01:30:14,000 --> 01:30:17,000
那么字符类型和数字类型的差别是什么呢

2584
01:30:17,000 --> 01:30:18,000
就是

2585
01:30:18,000 --> 01:30:19,000
字符类型

2586
01:30:19,000 --> 01:30:21,000
和数字类型

2587
01:30:21,000 --> 01:30:22,000
在

2588
01:30:22,000 --> 01:30:24,000
计算机上的

2589
01:30:24,000 --> 01:30:25,000
存储方式是不一样的

2590
01:30:26,000 --> 01:30:27,000
比如说

2591
01:30:27,000 --> 01:30:28,000
我刚才写的那个例子

2592
01:30:29,000 --> 01:30:31,000
2 被两个引号引起来的时候

2593
01:30:32,000 --> 01:30:35,000
它的实际的数值是 50

2594
01:30:36,000 --> 01:30:37,000
这是一个什么意思呢

2595
01:30:37,000 --> 01:30:38,000
就是

2596
01:30:38,000 --> 01:30:38,000
如果你

2597
01:30:38,000 --> 01:30:40,000
因为我们知道计算机只能处理数字

2598
01:30:41,000 --> 01:30:44,000
那么你就必须存在这样一种映射关系

2599
01:30:45,000 --> 01:30:46,000
告诉他们

2600
01:30:46,000 --> 01:30:48,000
这些数字所代表的意义

2601
01:30:48,000 --> 01:30:51,000
跟那些数字代表的意义是完全不一样的

2602
01:30:52,000 --> 01:30:53,000
比如说

2603
01:30:54,000 --> 01:30:56,000
一个数一个类型系统

2604
01:30:57,000 --> 01:30:59,000
在这里面给我们带来的意义就是

2605
01:30:59,000 --> 01:31:00,000
我们可以以一种

2606
01:31:01,000 --> 01:31:03,000
用我们的大脑能够理解的方式

2607
01:31:04,000 --> 01:31:05,000
去组织

2608
01:31:05,000 --> 01:31:08,000
计算机里面的纯数字的世界

2609
01:31:08,000 --> 01:31:10,000
同时让这个世界跟我们

2610
01:31:10,000 --> 01:31:12,000
所要处理的实际问题有所关联

2611
01:31:14,000 --> 01:31:16,000
所以其实从这个意义上来讲

2612
01:31:16,000 --> 01:31:18,000
类系统简单的做了一件

2613
01:31:19,000 --> 01:31:19,000
有用的事情

2614
01:31:19,000 --> 01:31:21,000
就是它告诉我们

2615
01:31:21,000 --> 01:31:22,000
规定了一个

2616
01:31:23,000 --> 01:31:24,000
数字和我们要

2617
01:31:25,000 --> 01:31:27,000
表达的那个符号也好

2618
01:31:28,000 --> 01:31:30,000
或者是其他一些什么类型的数据也好

2619
01:31:30,000 --> 01:31:32,000
他们之间的一种映射关系

2620
01:31:34,000 --> 01:31:35,000
我们可以说

2621
01:31:35,000 --> 01:31:36,000
比如说最简单的就是

2622
01:31:37,000 --> 01:31:39,000
这 8 个比特组成了这一个 bytes

2623
01:31:41,000 --> 01:31:43,000
这个字节所代表的是一个数字

2624
01:31:43,000 --> 01:31:45,000
而另外一个比特

2625
01:31:46,000 --> 01:31:51,000
或者另外 1000 个比特所代表的是一个

2626
01:31:51,000 --> 01:31:52,000
比如说

2627
01:31:53,000 --> 01:31:54,000
参观的预定信息

2628
01:31:55,000 --> 01:31:57,000
或者是一张美女图

2629
01:31:58,000 --> 01:32:01,000
美女图可能几百个 bytes 是存不下的

2630
01:32:01,000 --> 01:32:01,000
不过

2631
01:32:03,000 --> 01:32:04,000
有 similar point

2632
01:32:05,000 --> 01:32:05,000
对

2633
01:32:05,000 --> 01:32:06,000
所以

2634
01:32:08,000 --> 01:32:09,000
我们可以说

2635
01:32:10,000 --> 01:32:13,000
有了这样的一个类型系统

2636
01:32:13,000 --> 01:32:15,000
我们就可以更好的思考

2637
01:32:16,000 --> 01:32:19,000
同时又可以让计算机

2638
01:32:20,000 --> 01:32:22,000
把我们的思考转换成为

2639
01:32:22,000 --> 01:32:24,000
相应的数字处理问题

2640
01:32:24,000 --> 01:32:25,000
大家也处理

2641
01:32:26,000 --> 01:32:31,000
然后加入了类型系统之后

2642
01:32:31,000 --> 01:32:36,000
它就可以让我们在使用计算机的时候

2643
01:32:36,000 --> 01:32:42,000
用一种类似于人类更接近人类的方式去思考

2644
01:32:43,000 --> 01:32:44,000
同时又可以避免一些错误

2645
01:32:45,000 --> 01:32:50,000
我记得维基百科的 typesystem 的词条上面

2646
01:32:50,000 --> 01:32:52,000
大概是第二句还是第三句就说

2647
01:32:52,000 --> 01:32:55,000
类型系统存在的主要原因之一

2648
01:32:55,000 --> 01:32:57,000
就是可以帮助人们排除一些 bug

2649
01:33:00,000 --> 01:33:01,000
但是

2650
01:33:02,000 --> 01:33:03,000
其实反例也是存在的

2651
01:33:03,000 --> 01:33:05,000
就是因为类型系统存在

2652
01:33:05,000 --> 01:33:09,000
我们也会面临一些同样是

2653
01:33:09,000 --> 01:33:12,000
在普通人在不解释的看来

2654
01:33:12,000 --> 01:33:14,000
会比较难以理解的问题

2655
01:33:17,000 --> 01:33:18,000
比如

2656
01:33:20,000 --> 01:33:21,000
比如为什么

2657
01:33:23,000 --> 01:33:24,000
会有千年虫问题

2658
01:33:26,000 --> 01:33:26,000
我知道

2659
01:33:26,000 --> 01:33:28,000
这是一个挺好的问题

2660
01:33:28,000 --> 01:33:30,000
这又是一个暴露年龄的

2661
01:33:31,000 --> 01:33:34,000
可能我相信也许我们会不会有

2662
01:33:34,000 --> 01:33:36,000
2000 年之后出生听懂

2663
01:33:39,000 --> 01:33:42,000
现在有 15 岁可能会有

2664
01:33:43,000 --> 01:33:43,000
好吧

2665
01:33:43,000 --> 01:33:48,000
假如你是在 2000 年之后出生

2666
01:33:48,000 --> 01:33:49,000
并且在听我的节目的话

2667
01:33:49,000 --> 01:33:54,000
你可能不会想到在上世纪

2668
01:33:54,000 --> 01:33:56,000
在你出生之前的几年

2669
01:33:56,000 --> 01:33:58,000
人类曾经有过一场

2670
01:34:00,000 --> 01:34:01,000
类似于现在你看什么

2671
01:34:01,000 --> 01:34:02,000
《僵尸片》或者是

2672
01:34:02,000 --> 01:34:05,000
核战争爆发之后的景象的

2673
01:34:05,000 --> 01:34:06,000
这么一种恐慌感

2674
01:34:06,000 --> 01:34:08,000
就好像会心要撞地桥了

2675
01:34:08,000 --> 01:34:09,000
说

2676
01:34:11,000 --> 01:34:13,000
我们的计算机系统有一个非常大的设计缺陷

2677
01:34:13,000 --> 01:34:14,000
就是

2678
01:34:14,000 --> 01:34:16,000
在上世纪发明计算机的时候

2679
01:34:19,000 --> 01:34:21,000
人们写年份

2680
01:34:21,000 --> 01:34:22,000
只写后两位

2681
01:34:23,000 --> 01:34:24,000
可是 19

2682
01:34:24,000 --> 01:34:26,000
很难想象吧

2683
01:34:26,000 --> 01:34:27,000
对

2684
01:34:27,000 --> 01:34:28,000
很难想象吧

2685
01:34:28,000 --> 01:34:29,000
但是那个时候我们就是做

2686
01:34:30,000 --> 01:34:32,000
比如说我是 1983 年出生的

2687
01:34:32,000 --> 01:34:33,000
我有暴露年

2688
01:34:33,000 --> 01:34:34,000
而且这么直接

2689
01:34:34,000 --> 01:34:37,000
我基本上就只写 83

2690
01:34:37,000 --> 01:34:39,000
然后那个时候出的日历

2691
01:34:39,000 --> 01:34:40,000
上面都写

2692
01:34:40,000 --> 01:34:41,000
89

2693
01:34:43,000 --> 01:34:45,000
6 月 3 日后的一天

2694
01:34:45,000 --> 01:34:46,000
出此类的

2695
01:34:46,000 --> 01:34:47,000
然后

2696
01:34:49,000 --> 01:34:51,000
而计算机发明的那个时代

2697
01:34:51,000 --> 01:34:52,000
人们觉得

2698
01:34:53,000 --> 01:34:55,000
干嘛要存四位数的年份

2699
01:34:56,000 --> 01:34:57,000
既然大家都只说两个数

2700
01:34:57,000 --> 01:34:58,000
反正开头都是 19 多少

2701
01:34:58,000 --> 01:34:59,000
对吧

2702
01:34:59,000 --> 01:34:59,000
对

2703
01:34:59,000 --> 01:35:00,000
那就存两位数

2704
01:35:00,000 --> 01:35:01,000
而且计算机内存很贵

2705
01:35:01,000 --> 01:35:04,000
能省两个比特就省两个比特

2706
01:35:04,000 --> 01:35:05,000
结果

2707
01:35:06,000 --> 01:35:07,000
大概在

2708
01:35:07,000 --> 01:35:08,000
两个拜腾

2709
01:35:08,000 --> 01:35:08,000
对应该要

2710
01:35:10,000 --> 01:35:10,000
等一下

2711
01:35:10,000 --> 01:35:11,000
它不是以这个

2712
01:35:11,000 --> 01:35:11,000
对

2713
01:35:11,000 --> 01:35:12,000
它是两个拜腾

2714
01:35:12,000 --> 01:35:14,000
它是用自缚串的形式这样

2715
01:35:14,000 --> 01:35:15,000
它是叉里型

2716
01:35:15,000 --> 01:35:16,000
对

2717
01:35:17,000 --> 01:35:18,000
然后

2718
01:35:18,000 --> 01:35:19,000
那时候就说

2719
01:35:19,000 --> 01:35:21,000
能省两个字就省两个字

2720
01:35:21,000 --> 01:35:21,000
然后

2721
01:35:22,000 --> 01:35:23,000
大家只存两位数

2722
01:35:23,000 --> 01:35:25,000
然后在 90 年代

2723
01:35:25,000 --> 01:35:27,000
千千虫最严重的是什么

2724
01:35:27,000 --> 01:35:27,000
95 年

2725
01:35:28,000 --> 01:35:30,000
就是在至少在舆论上面

2726
01:35:30,000 --> 01:35:32,000
在媒体上面闹得最凶的年份

2727
01:35:32,000 --> 01:35:33,000
应该是 99

2728
01:35:34,000 --> 01:35:35,000
不是 99

2729
01:35:35,000 --> 01:35:36,000
99 年的时候

2730
01:35:36,000 --> 01:35:37,000
人们已经预见到

2731
01:35:37,000 --> 01:35:38,000
就是这个问题没有那么严重

2732
01:35:38,000 --> 01:35:39,000
OK

2733
01:35:39,000 --> 01:35:41,000
但是在 92、93 年的时候

2734
01:35:41,000 --> 01:35:42,000
我印象里面

2735
01:35:42,000 --> 01:35:43,000
千千虫吵得特别凶

2736
01:35:43,000 --> 01:35:44,000
就说

2737
01:35:44,000 --> 01:35:45,000
2000 年的时候

2738
01:35:45,000 --> 01:35:47,000
飞机飞着航航航就掉下来了

2739
01:35:47,000 --> 01:35:49,000
或者是银行

2740
01:35:49,000 --> 01:35:50,000
你的存款全都变废纸了

2741
01:35:51,000 --> 01:35:52,000
当时有很多这种什么

2742
01:35:53,000 --> 01:35:55,000
漠视预言嘛

2743
01:35:55,000 --> 01:35:57,000
就是最终是因为千千虫倒的

2744
01:35:57,000 --> 01:35:58,000
对

2745
01:35:58,000 --> 01:36:01,000
就说我们现在的人类系统已经如此的

2746
01:36:01,000 --> 01:36:03,000
深深的依赖于计算机

2747
01:36:06,000 --> 01:36:08,000
这个问题一旦爆发的时候

2748
01:36:08,000 --> 01:36:11,000
对于人类社会的打击是毁灭性的

2749
01:36:13,000 --> 01:36:14,000
然后这个问题具体就是

2750
01:36:14,000 --> 01:36:16,000
这个问题其实发生起来的

2751
01:36:17,000 --> 01:36:18,000
状况其实也很简单

2752
01:36:18,000 --> 01:36:19,000
就是有些计算机

2753
01:36:19,000 --> 01:36:22,000
就如果你的计算机只用两位数来处分年份的话

2754
01:36:22,000 --> 01:36:23,000
到 2000 年的时候

2755
01:36:23,000 --> 01:36:26,000
你的年份会从 99 变成 00

2756
01:36:26,000 --> 01:36:27,000
然后系统会出一些

2757
01:36:28,000 --> 01:36:28,000
对

2758
01:36:28,000 --> 01:36:29,000
系统会出一些问题

2759
01:36:29,000 --> 01:36:30,000
系统会认为

2760
01:36:30,000 --> 01:36:32,000
比如说你这个人明明只有

2761
01:36:36,000 --> 01:36:37,000
明明才刚出生

2762
01:36:37,000 --> 01:36:39,000
然后系统认为你已经是一个

2763
01:36:39,000 --> 01:36:40,000
几百岁

2764
01:36:40,000 --> 01:36:41,000
不是

2765
01:36:41,000 --> 01:36:42,000
快 100 岁的老人

2766
01:36:42,000 --> 01:36:43,000
这样事情出现

2767
01:36:44,000 --> 01:36:45,000
或者是

2768
01:36:46,000 --> 01:36:47,000
对

2769
01:36:47,000 --> 01:36:47,000
一直想

2770
01:36:47,000 --> 01:36:48,000
我一直反而举出来例子

2771
01:36:48,000 --> 01:36:50,000
就是很难想象那个时候

2772
01:36:50,000 --> 01:36:51,000
人们会因为这样的问题

2773
01:36:51,000 --> 01:36:51,000
计算年龄

2774
01:36:51,000 --> 01:36:53,000
比如说我们常见你

2775
01:36:53,000 --> 01:36:54,000
比如你 83 年出生

2776
01:36:54,000 --> 01:36:55,000
我们 93 年的时候计算

2777
01:36:55,000 --> 01:36:57,000
就 93-83

2778
01:36:57,000 --> 01:36:58,000
你一年 10 岁对吧

2779
01:36:59,000 --> 01:37:01,000
但是如果到了 2000 年的时候

2780
01:37:01,000 --> 01:37:02,000
你发现这个清零了

2781
01:37:02,000 --> 01:37:05,000
然后这个就是 00-83

2782
01:37:05,000 --> 01:37:06,000
就变成一个负数

2783
01:37:08,000 --> 01:37:09,000
对

2784
01:37:10,000 --> 01:37:11,000
当时我记得还有什么说什么

2785
01:37:11,000 --> 01:37:14,000
核武器的倒计时也是

2786
01:37:14,000 --> 01:37:15,000
会受到千年虫的影响

2787
01:37:15,000 --> 01:37:17,000
然后千年虫一旦发作的时候

2788
01:37:17,000 --> 01:37:18,000
核武器说

2789
01:37:18,000 --> 01:37:18,000
哎呦

2790
01:37:18,000 --> 01:37:19,000
怎么着

2791
01:37:20,000 --> 01:37:21,000
回到解放前了

2792
01:37:21,000 --> 01:37:22,000
赶紧射核弹

2793
01:37:22,000 --> 01:37:23,000
原始射

2794
01:37:23,000 --> 01:37:24,000
对

2795
01:37:24,000 --> 01:37:26,000
就把核弹发射出去了

2796
01:37:26,000 --> 01:37:26,000
诸如此类的

2797
01:37:26,000 --> 01:37:28,000
很可笑的一些预演

2798
01:37:28,000 --> 01:37:30,000
但事实上证明

2799
01:37:30,000 --> 01:37:31,000
因为可能也是因为发现的早

2800
01:37:31,000 --> 01:37:32,000
或者说

2801
01:37:33,000 --> 01:37:34,000
人们有所预警

2802
01:37:34,000 --> 01:37:36,000
所以实际上千年虫的问题

2803
01:37:37,000 --> 01:37:38,000
可能个别有发生

2804
01:37:38,000 --> 01:37:41,000
但基本上没有任何影响

2805
01:37:41,000 --> 01:37:42,000
对于人类社会的正常运作来说

2806
01:37:43,000 --> 01:37:44,000
绝大部分

2807
01:37:45,000 --> 01:37:47,000
可能遭到影响的

2808
01:37:47,000 --> 01:37:48,000
机构都已经

2809
01:37:48,000 --> 01:37:50,000
及时为其

2810
01:37:52,000 --> 01:37:53,000
做出了调整

2811
01:37:53,000 --> 01:37:55,000
比如说银行系统呀

2812
01:37:55,000 --> 01:37:56,000
或者航空系统呀

2813
01:37:58,000 --> 01:37:59,000
基本上没有人受到影响

2814
01:38:01,000 --> 01:38:01,000
还是说

2815
01:38:01,000 --> 01:38:03,000
我错过了什么

2816
01:38:03,000 --> 01:38:04,000
非常严重的千年虫灾害

2817
01:38:04,000 --> 01:38:04,000
没有吧

2818
01:38:04,000 --> 01:38:06,000
应该是没有的

2819
01:38:06,000 --> 01:38:09,000
就我们起码平安的度过了 2000 年

2820
01:38:09,000 --> 01:38:10,000
然后毕竟没有对吧

2821
01:38:11,000 --> 01:38:11,000
对

2822
01:38:11,000 --> 01:38:14,000
而千年虫问题实际上

2823
01:38:14,000 --> 01:38:16,000
就是某种意义上的一个

2824
01:38:16,000 --> 01:38:18,000
类型系统导致的问题

2825
01:38:18,000 --> 01:38:19,000
没错

2826
01:38:19,000 --> 01:38:21,000
那个类型就是代表

2827
01:38:21,000 --> 01:38:24,000
年份的这个类型设计的太

2828
01:38:24,000 --> 01:38:25,000
太窄了

2829
01:38:25,000 --> 01:38:26,000
对

2830
01:38:26,000 --> 01:38:26,000
对

2831
01:38:26,000 --> 01:38:29,000
如果那个时候能把年份设成四个

2832
01:38:29,000 --> 01:38:32,000
四个字节的话

2833
01:38:32,000 --> 01:38:33,000
也许就不会有这个问题

2834
01:38:34,000 --> 01:38:34,000
错

2835
01:38:35,000 --> 01:38:36,000
但是

2836
01:38:36,000 --> 01:38:37,000
反过来说

2837
01:38:38,000 --> 01:38:40,000
你会说那为什么要

2838
01:38:40,000 --> 01:38:42,000
用一个

2839
01:38:43,000 --> 01:38:44,000
字符串来存时间

2840
01:38:44,000 --> 01:38:46,000
字符串来代表时间的不是很麻烦吗

2841
01:38:46,000 --> 01:38:47,000
对

2842
01:38:47,000 --> 01:38:50,000
有些人就是不用字符串来代表时间

2843
01:38:50,000 --> 01:38:51,000
但是他会遇到其他的问题

2844
01:38:51,000 --> 01:38:52,000
比如说

2845
01:38:54,000 --> 01:38:57,000
2038 问题

2846
01:39:00,000 --> 01:39:02,000
我们现在使用的 32 位操作系统

2847
01:39:02,000 --> 01:39:05,000
会用一个 32 位的整数

2848
01:39:05,000 --> 01:39:09,000
32 位的二经常数来存放一个年份

2849
01:39:10,000 --> 01:39:11,000
来存放一些时间

2850
01:39:11,000 --> 01:39:12,000
对

2851
01:39:12,000 --> 01:39:14,000
这个时间就开始我们节目开始的时候

2852
01:39:14,000 --> 01:39:16,000
报的那个时间叫做 Unix time

2853
01:39:16,000 --> 01:39:19,000
它的定义是从 1970 年

2854
01:39:19,000 --> 01:39:20,000
1 月 1 日

2855
01:39:20,000 --> 01:39:23,000
这个隔离位置时间 0 时开始

2856
01:39:24,000 --> 01:39:26,000
从那一刻起到现在为止

2857
01:39:26,000 --> 01:39:28,000
一共经过了多少秒

2858
01:39:31,000 --> 01:39:32,000
不确切

2859
01:39:32,000 --> 01:39:33,000
就不算润秒的话

2860
01:39:33,000 --> 01:39:34,000
经过了多少秒

2861
01:39:34,000 --> 01:39:35,000
对

2862
01:39:35,000 --> 01:39:36,000
润秒也是经过多少秒

2863
01:39:36,000 --> 01:39:38,000
它这个并不规定

2864
01:39:38,000 --> 01:39:41,000
就它跟日历的关系没有直接的关系

2865
01:39:42,000 --> 01:39:43,000
我怎么记得它会跳一下

2866
01:39:44,000 --> 01:39:44,000
它是会跳

2867
01:39:44,000 --> 01:39:45,000
但是就是说它

2868
01:39:45,000 --> 01:39:48,000
就是你要从这个换算成日历的时间

2869
01:39:48,000 --> 01:39:51,000
是要考虑润年润秒那些东西的吗

2870
01:39:51,000 --> 01:39:53,000
但是这个时间本身是一个相对来说

2871
01:39:53,000 --> 01:39:54,000
是一个

2872
01:39:55,000 --> 01:39:56,000
它是一个 Diff

2873
01:39:56,000 --> 01:39:59,000
就是跟那一刻的一个差值

2874
01:39:59,000 --> 01:39:59,000
对吧

2875
01:40:00,000 --> 01:40:02,000
就我们理想模型下应该是这样子

2876
01:40:02,000 --> 01:40:02,000
对

2877
01:40:02,000 --> 01:40:05,000
但我的意思是这个差值并不是

2878
01:40:07,000 --> 01:40:08,000
unique

2879
01:40:08,000 --> 01:40:09,000
就是它并不是唯一的

2880
01:40:09,000 --> 01:40:12,000
就是有些在润秒那些的时刻

2881
01:40:13,000 --> 01:40:15,000
实际上有可能会代表

2882
01:40:15,000 --> 01:40:18,000
前两个日期里面的两个时间

2883
01:40:18,000 --> 01:40:18,000
不

2884
01:40:18,000 --> 01:40:19,000
你应该是反了

2885
01:40:19,000 --> 01:40:23,000
就是它这个时间对应的日历上的时间

2886
01:40:23,000 --> 01:40:24,000
可能不止一个

2887
01:40:25,000 --> 01:40:28,000
就以某一个这个 unique 的秒数

2888
01:40:28,000 --> 01:40:30,000
它反算回忆的日历上的时间

2889
01:40:30,000 --> 01:40:34,000
可能对应的不是你想象的那么一对一的关系

2890
01:40:34,000 --> 01:40:34,000
没错

2891
01:40:34,000 --> 01:40:35,000
Anyway

2892
01:40:36,000 --> 01:40:37,000
又跑题了

2893
01:40:38,000 --> 01:40:39,000
重点就是说

2894
01:40:39,000 --> 01:40:42,000
如果用 32 位的一个整数

2895
01:40:43,000 --> 01:40:45,000
二进制整数来存放秒数的话

2896
01:40:45,000 --> 01:40:50,000
那么到 2038 年 1 月 19 日 3 点 14 分 07 秒

2897
01:40:52,000 --> 01:40:54,000
32 位的系统

2898
01:40:54,000 --> 01:40:57,000
上面的时间会全都变成 1

2899
01:40:57,000 --> 01:40:59,000
然后下一秒

2900
01:41:00,000 --> 01:41:01,000
就会全都变成 0

2901
01:41:02,000 --> 01:41:05,000
所以在这个时候系统就疯了

2902
01:41:05,000 --> 01:41:08,000
就回到 1970 年

2903
01:41:08,000 --> 01:41:09,000
1970 年了

2904
01:41:09,000 --> 01:41:09,000
对

2905
01:41:10,000 --> 01:41:11,000
对

2906
01:41:11,000 --> 01:41:14,000
这就是我们紧接着要面对的下一个

2907
01:41:14,000 --> 01:41:18,000
因为类型系统而引入的一个人为的限制

2908
01:41:18,000 --> 01:41:19,000
或者说一个

2909
01:41:20,000 --> 01:41:21,000
从某种意义上讲是一个 bug 的问题

2910
01:41:22,000 --> 01:41:22,000
不过还早

2911
01:41:22,000 --> 01:41:23,000
现在还有 38 年

2912
01:41:24,000 --> 01:41:24,000
这是 15 年

2913
01:41:24,000 --> 01:41:27,000
还有 23 年的时间

2914
01:41:27,000 --> 01:41:28,000
对

2915
01:41:28,000 --> 01:41:30,000
我们就像 1970 年发明机枪机那些人一样

2916
01:41:30,000 --> 01:41:31,000
就是

2917
01:41:31,000 --> 01:41:33,000
或者说推广机枪机的人一样

2918
01:41:34,000 --> 01:41:35,000
说反正还早

2919
01:41:35,000 --> 01:41:36,000
两千年还早

2920
01:41:36,000 --> 01:41:37,000
谁管到时候再说

2921
01:41:37,000 --> 01:41:38,000
是吧

2922
01:41:38,000 --> 01:41:39,000
传道桥头自然值

2923
01:41:39,000 --> 01:41:42,000
肯定会有人采取措施

2924
01:41:42,000 --> 01:41:45,000
反正到时候要修这个 bug 又不是我管它

2925
01:41:46,000 --> 01:41:47,000
对

2926
01:41:47,000 --> 01:41:47,000
make sense

2927
01:41:47,000 --> 01:41:49,000
我相信 32 位系统到 2038 年

2928
01:41:49,000 --> 01:41:52,000
应该还是会继续再大量使用

2929
01:41:53,000 --> 01:41:53,000
应该会吧

2930
01:41:53,000 --> 01:41:56,000
特别是那些什么小的那种 V 型的设备

2931
01:41:56,000 --> 01:41:58,000
里面可能还是会有这种

2932
01:41:58,000 --> 01:42:00,000
考虑低功耗的时候

2933
01:42:01,000 --> 01:42:02,000
甚至可能还有 16 位的系统

2934
01:42:02,000 --> 01:42:03,000
你知道吗

2935
01:42:03,000 --> 01:42:03,000
现在还有很多

2936
01:42:03,000 --> 01:42:04,000
对

2937
01:42:04,000 --> 01:42:05,000
16 位的系统到现在

2938
01:42:06,000 --> 01:42:07,000
还是大兴其道

2939
01:42:07,000 --> 01:42:07,000
对

2940
01:42:08,000 --> 01:42:08,000
对

2941
01:42:12,000 --> 01:42:13,000
然后

2942
01:42:15,000 --> 01:42:16,000
而且

2943
01:42:16,000 --> 01:42:19,000
而且据说早期的 unix 系统甚至是

2944
01:42:19,000 --> 01:42:19,000
就是

2945
01:42:20,000 --> 01:42:21,000
有一个

2946
01:42:21,000 --> 01:42:23,000
他们的那个时钟振荡器

2947
01:42:23,000 --> 01:42:27,000
就是每一秒钟振荡 60 次

2948
01:42:27,000 --> 01:42:28,000
就振荡频率是 60 赫兹

2949
01:42:29,000 --> 01:42:34,000
然后他们用一个 32 位的二进式整数来存放这个赫兹振动的频率

2950
01:42:34,000 --> 01:42:35,000
就是说他

2951
01:42:36,000 --> 01:42:37,000
这用这个数来算

2952
01:42:38,000 --> 01:42:40,000
已经过去了多少个 60 分之 1 秒

2953
01:42:41,000 --> 01:42:42,000
然后

2954
01:42:42,000 --> 01:42:43,000
这种系统上

2955
01:42:43,000 --> 01:42:46,000
系统时间两年多一点就要重置一次

2956
01:42:46,000 --> 01:42:49,000
这不是很多单片机就是这样做这种样子的吗

2957
01:42:49,000 --> 01:42:51,000
我知道现在好像很多还是这样子

2958
01:42:52,000 --> 01:42:55,000
单片机里面放

2959
01:42:55,000 --> 01:42:57,000
时间的

2960
01:42:57,000 --> 01:42:58,000
对

2961
01:42:58,000 --> 01:43:02,000
就是他那个他自己的那个时间发生器只能存一个精度比较

2962
01:43:03,000 --> 01:43:04,000
然后他整个这个硬件限制

2963
01:43:05,000 --> 01:43:06,000
他就只能这样

2964
01:43:08,000 --> 01:43:08,000
OK

2965
01:43:08,000 --> 01:43:09,000
但是他

2966
01:43:09,000 --> 01:43:10,000
OK 好吧

2967
01:43:10,000 --> 01:43:12,000
但他存的其实不是年份

2968
01:43:12,000 --> 01:43:14,000
他只是存一个就是已经振荡多少次

2969
01:43:15,000 --> 01:43:15,000
对对对

2970
01:43:15,000 --> 01:43:16,000
对别人的时间相关

2971
01:43:16,000 --> 01:43:18,000
相对自己的一个时间

2972
01:43:18,000 --> 01:43:19,000
一个技术器技术器一处

2973
01:43:20,000 --> 01:43:20,000
OK

2974
01:43:25,000 --> 01:43:25,000
对

2975
01:43:25,000 --> 01:43:27,000
诸如此类的 bug 其实还是有一些的

2976
01:43:27,000 --> 01:43:32,000
就是 VKB 大量的列表叫做 time formatting and storage box

2977
01:43:32,000 --> 01:43:34,000
然后大家可以

2978
01:43:34,000 --> 01:43:36,000
我们会把这个链接放在 show notes 里面

2979
01:43:36,000 --> 01:43:38,000
大家可以看看就是

2980
01:43:38,000 --> 01:43:41,000
诸如此类的一些问题还是

2981
01:43:42,000 --> 01:43:43,000
不能说层出不穷

2982
01:43:43,000 --> 01:43:44,000
但绝对不是孤立

2983
01:43:44,000 --> 01:43:45,000
就是

2984
01:43:45,000 --> 01:43:49,000
这就是人们引入类型系统之后所产生的一个副作用

2985
01:43:49,000 --> 01:43:50,000
没错

2986
01:43:50,000 --> 01:43:52,000
然后还有一个比较

2987
01:43:54,000 --> 01:43:55,000
重大的问题

2988
01:43:55,000 --> 01:43:58,000
或者说一个同样会让

2989
01:43:58,000 --> 01:44:00,000
出血者感到困扰的问题

2990
01:44:01,000 --> 01:44:03,000
就是辅点数的问题

2991
01:44:04,000 --> 01:44:07,000
这个我觉得很多人都不理解这个原理

2992
01:44:07,000 --> 01:44:11,000
包括到现在我对他原理还是就是处于一知半解的状态

2993
01:44:11,000 --> 01:44:12,000
对我只能

2994
01:44:13,000 --> 01:44:14,000
当遇到这个问题的时候

2995
01:44:14,000 --> 01:44:15,000
再去查这个 menu

2996
01:44:15,000 --> 01:44:17,000
大声喊一声

2997
01:44:17,000 --> 01:44:19,000
大声喊一声是 IE 754

2998
01:44:19,000 --> 01:44:20,000
哈哈哈

2999
01:44:22,000 --> 01:44:25,000
再去看他的那个是那个标准规范怎么样

3000
01:44:26,000 --> 01:44:26,000
对

3001
01:44:27,000 --> 01:44:29,000
所以辅点数的最大问题

3002
01:44:29,000 --> 01:44:30,000
最大的问题

3003
01:44:30,000 --> 01:44:32,000
或者说其具体表现是什么呢

3004
01:44:33,000 --> 01:44:34,000
就是

3005
01:44:34,000 --> 01:44:35,000
正零和负零

3006
01:44:36,000 --> 01:44:38,000
知道不是重要的

3007
01:44:38,000 --> 01:44:40,000
就是在有些情况之下

3008
01:44:40,000 --> 01:44:47,000
比如说 0.3 加上 0.1

3009
01:44:48,000 --> 01:44:48,000
对

3010
01:44:48,000 --> 01:44:49,000
他不能

3011
01:44:49,000 --> 01:44:56,000
会得到一个 0.4000001 之类的这样一个数

3012
01:44:58,000 --> 01:44:58,000
对

3013
01:44:58,000 --> 01:45:02,000
他不能精确的表示一些运算

3014
01:45:03,000 --> 01:45:03,000
对

3015
01:45:03,000 --> 01:45:05,000
就是在某些时候

3016
01:45:06,000 --> 01:45:06,000
没错

3017
01:45:06,000 --> 01:45:07,000
在某些时候

3018
01:45:07,000 --> 01:45:10,000
对于二进制数来说

3019
01:45:11,000 --> 01:45:12,000
有些数字是可以被精确表示

3020
01:45:12,000 --> 01:45:13,000
而有另外一些不能

3021
01:45:13,000 --> 01:45:14,000
比如说

3022
01:45:16,000 --> 01:45:19,000
以二进制数的 0.1 来说

3023
01:45:19,000 --> 01:45:21,000
0.1 代表其实是 1%

3024
01:45:21,000 --> 01:45:23,000
然后 0.01

3025
01:45:24,000 --> 01:45:26,000
代表的其实是 1%

3026
01:45:26,000 --> 01:45:28,000
所以 1%和 1%

3027
01:45:28,000 --> 01:45:29,000
也就是 0.5 和 0.25

3028
01:45:29,000 --> 01:45:31,000
都是可以被精确表示

3029
01:45:31,000 --> 01:45:32,000
但是

3030
01:45:32,000 --> 01:45:35,000
介于两者之间的数字就很难表示

3031
01:45:35,000 --> 01:45:35,000
对

3032
01:45:35,000 --> 01:45:40,000
所以只能用在精度允许的范围内

3033
01:45:40,000 --> 01:45:42,000
尽量去逼近他吧

3034
01:45:42,000 --> 01:45:43,000
没错

3035
01:45:43,000 --> 01:45:47,000
而我们刚才说到的 AE 754 标准

3036
01:45:47,000 --> 01:45:48,000
它所规定的

3037
01:45:48,000 --> 01:45:49,000
就是

3038
01:45:49,000 --> 01:45:54,000
假如我有一个 32 位或者是 64 位的二进制数

3039
01:45:54,000 --> 01:45:57,000
我应该怎么样用它来代表一个

3040
01:45:58,000 --> 01:46:02,000
带有小数位数的辅点数

3041
01:46:02,000 --> 01:46:03,000
嗯

3042
01:46:03,000 --> 01:46:04,000
对

3043
01:46:04,000 --> 01:46:06,000
然后它规定的内容就是

3044
01:46:06,000 --> 01:46:07,000
比如说

3045
01:46:07,000 --> 01:46:08,000
首先

3046
01:46:08,000 --> 01:46:11,000
如果我是一个 32 位的二进制数的话

3047
01:46:11,000 --> 01:46:12,000
我最左的那边

3048
01:46:12,000 --> 01:46:15,000
最左的那一位是叫做

3049
01:46:16,000 --> 01:46:17,000
sine bit

3050
01:46:18,000 --> 01:46:19,000
如果它是 0 的话

3051
01:46:19,000 --> 01:46:21,000
整个数字就是一个正数

3052
01:46:21,000 --> 01:46:22,000
如果它是 1 的话

3053
01:46:22,000 --> 01:46:24,000
整个数字就是一个负数

3054
01:46:25,000 --> 01:46:26,000
然后接下来的 8 位

3055
01:46:27,000 --> 01:46:31,000
代表整个数字的指数

3056
01:46:33,000 --> 01:46:33,000
也就是说

3057
01:46:33,000 --> 01:46:35,000
这个 8 位所代表的

3058
01:46:35,000 --> 01:46:38,000
就是如果大家用科学技术法来写的话

3059
01:46:38,000 --> 01:46:39,000
它所代表的是

3060
01:46:40,000 --> 01:46:41,000
十的多少次方

3061
01:46:41,000 --> 01:46:42,000
科学技术法上面科学

3062
01:46:42,000 --> 01:46:45,000
对十的多少次方那个方次

3063
01:46:45,000 --> 01:46:47,000
而接下来的 23 个比特

3064
01:46:47,000 --> 01:46:51,000
则是小数点后面的那些为主

3065
01:46:51,000 --> 01:46:54,000
就所谓的叫做有效数字的部分

3066
01:46:54,000 --> 01:46:55,000
对

3067
01:46:56,000 --> 01:46:57,000
比如说

3068
01:47:00,000 --> 01:47:01,000
0.15625

3069
01:47:01,000 --> 01:47:04,000
这是 VKP 在上举的一个例子

3070
01:47:04,000 --> 01:47:06,000
它的表示方式就是

3071
01:47:08,000 --> 01:47:09,000
符号位是 0

3072
01:47:09,000 --> 01:47:11,000
然后位数

3073
01:47:11,000 --> 01:47:16,000
指数这一个部分是 01

3074
01:47:17,000 --> 01:47:18,000
我好像发了很长的印

3075
01:47:19,000 --> 01:47:21,000
它有 05 个 1

3076
01:47:21,000 --> 01:47:22,000
然后两个 0

3077
01:47:22,000 --> 01:47:24,000
然后接下来 23 位是 01

3078
01:47:24,000 --> 01:47:25,000
然后后面是

3079
01:47:27,000 --> 01:47:28,000
21 个 0

3080
01:47:28,000 --> 01:47:30,000
然后 0.15625

3081
01:47:30,000 --> 01:47:33,000
这个数字就可以这样被精确地表示出来

3082
01:47:33,000 --> 01:47:35,000
然后 64 位的时候

3083
01:47:35,000 --> 01:47:36,000
基本上也是一样

3084
01:47:36,000 --> 01:47:38,000
只不过指数位扩展到 11 位

3085
01:47:38,000 --> 01:47:42,000
然后小数位扩展到了 52 位

3086
01:47:46,000 --> 01:47:49,000
然后这个规定

3087
01:47:50,000 --> 01:47:55,000
或者说这个规范所指定这样的表示小数的方式

3088
01:47:55,000 --> 01:47:58,000
在许许多多的编程语言里面都被拿来用

3089
01:47:58,000 --> 01:47:59,000
比如说 Java 有

3090
01:47:59,000 --> 01:48:00,000
然后 Syshub 有

3091
01:48:01,000 --> 01:48:02,000
C 也有

3092
01:48:02,000 --> 01:48:03,000
然后 JavaScript 也有

3093
01:48:04,000 --> 01:48:08,000
然后当你在作为一个编程初学者

3094
01:48:08,000 --> 01:48:09,000
毫不知情的情况之下

3095
01:48:09,000 --> 01:48:13,000
选择了使用这样一种的

3096
01:48:13,000 --> 01:48:17,000
这样一种表示小数的方式来进行数学运算的时候

3097
01:48:17,000 --> 01:48:19,000
往往就会产生这样或者那样的问题

3098
01:48:19,000 --> 01:48:23,000
比如说你判断两个数相乘

3099
01:48:23,000 --> 01:48:24,000
或者相加的结果

3100
01:48:24,000 --> 01:48:25,000
是不是大于

3101
01:48:25,000 --> 01:48:27,000
是不是精确的等于另外一个数

3102
01:48:27,000 --> 01:48:30,000
然后就像你总是说不等于

3103
01:48:30,000 --> 01:48:32,000
然后你不知道为什么

3104
01:48:33,000 --> 01:48:34,000
这是一个很坑的一件事情

3105
01:48:35,000 --> 01:48:38,000
因为他通常判断是否等于

3106
01:48:38,000 --> 01:48:41,000
他是检查他的所谓的比特位

3107
01:48:41,000 --> 01:48:42,000
是不是一样的对不对

3108
01:48:42,000 --> 01:48:43,000
对

3109
01:48:43,000 --> 01:48:47,000
然后这就导致了经常会有一些所谓

3110
01:48:47,000 --> 01:48:51,000
很多人都会说变成很容易之类的

3111
01:48:51,000 --> 01:48:53,000
但是只口不提这些

3112
01:48:53,000 --> 01:48:56,000
其实相当 dark corner 的一些

3113
01:48:57,000 --> 01:48:59,000
非常容易把你扳倒的一些部分

3114
01:49:01,000 --> 01:49:03,000
我觉得和浮点数相关的内容

3115
01:49:03,000 --> 01:49:06,000
其实就是非常重要的现象之一

3116
01:49:06,000 --> 01:49:08,000
然后网上流传一篇帖子叫做

3117
01:49:10,000 --> 01:49:14,000
关于浮点数每个成员都需要知道的一些事情

3118
01:49:15,000 --> 01:49:17,000
应该也是比较推荐大家看一看

3119
01:49:17,000 --> 01:49:21,000
当然我已经不太记得里面写什么了

3120
01:49:21,000 --> 01:49:22,000
但基本上

3121
01:49:22,000 --> 01:49:25,000
大意就是千万不要信任你所使用的类型系统

3122
01:49:27,000 --> 01:49:29,000
对

3123
01:49:29,000 --> 01:49:30,000
然后

3124
01:49:32,000 --> 01:49:37,000
所以有一些编程语言也会试图说解决这个问题

3125
01:49:37,000 --> 01:49:38,000
或者说绕过这个问题

3126
01:49:38,000 --> 01:49:41,000
或者说至少说对于使用者来说

3127
01:49:41,000 --> 01:49:43,000
把这个问题抽象掉

3128
01:49:43,000 --> 01:49:47,000
让使用者不会去注意到底层

3129
01:49:47,000 --> 01:49:50,000
其实有这么一个坑爹东西的存在

3130
01:49:50,000 --> 01:49:53,000
他直接就支持比如说

3131
01:49:53,000 --> 01:49:55,000
decimal 类型

3132
01:49:55,000 --> 01:49:56,000
我记得

3133
01:49:57,000 --> 01:49:59,000
decimal 是谁先提出来的

3134
01:49:59,000 --> 01:50:00,000
但是

3135
01:50:01,000 --> 01:50:02,000
至少 c-sharp 里面是有的

3136
01:50:02,000 --> 01:50:04,000
现在我能想到的例子只有 c-sharp

3137
01:50:04,000 --> 01:50:06,000
就是它可以做任意精度的

3138
01:50:07,000 --> 01:50:10,000
实境值的运算

3139
01:50:10,000 --> 01:50:10,000
对

3140
01:50:11,000 --> 01:50:13,000
可能也不是任意精度

3141
01:50:13,000 --> 01:50:16,000
但是要比浮点数精度高得多的

3142
01:50:16,000 --> 01:50:18,000
随意的

3143
01:50:19,000 --> 01:50:20,000
浮点数运算

3144
01:50:20,000 --> 01:50:24,000
但代价也是比较大的

3145
01:50:24,000 --> 01:50:26,000
就是你在使用 decimal 的时候

3146
01:50:26,000 --> 01:50:28,000
其性能会非常的差

3147
01:50:29,000 --> 01:50:30,000
至少在那个时候是非常差的

3148
01:50:30,000 --> 01:50:31,000
就是

3149
01:50:32,000 --> 01:50:34,000
我记得那时候读 MSDA 说

3150
01:50:34,000 --> 01:50:37,000
提醒你说除非你在金融领域

3151
01:50:37,000 --> 01:50:40,000
否则轻易不要用这个类型

3152
01:50:40,000 --> 01:50:41,000
但我不知道现在是不是还是这样

3153
01:50:41,000 --> 01:50:43,000
因为现在应该已经改善很多了

3154
01:50:43,000 --> 01:50:45,000
但还是你绕不开这个问题

3155
01:50:45,000 --> 01:50:46,000
因为你像这种浮点数

3156
01:50:46,000 --> 01:50:50,000
它可以在 CPU 里面有硬件级别的指令的支持

3157
01:50:50,000 --> 01:50:50,000
对吧

3158
01:50:51,000 --> 01:50:53,000
但是你要做这种

3159
01:50:53,000 --> 01:50:56,000
任意精度的数的表达的话

3160
01:50:56,000 --> 01:50:58,000
你就只能通过软件去模拟了吗

3161
01:50:59,000 --> 01:51:01,000
这个时候的性能那可想而知了

3162
01:51:01,000 --> 01:51:03,000
你传统加减乘除可能人家

3163
01:51:03,000 --> 01:51:05,000
一两个指令就解决的问题

3164
01:51:05,000 --> 01:51:09,000
你要化为几十个或上百个指令

3165
01:51:09,000 --> 01:51:11,000
然后还要循环判断分支之类的

3166
01:51:11,000 --> 01:51:12,000
你就很麻烦

3167
01:51:13,000 --> 01:51:14,000
没错

3168
01:51:14,000 --> 01:51:18,000
所以这也就从另外一个侧面说明了

3169
01:51:18,000 --> 01:51:20,000
类型系统的一个重大的用途

3170
01:51:20,000 --> 01:51:23,000
就是它可以帮助我们

3171
01:51:23,000 --> 01:51:26,000
指导机端机去正确的使用

3172
01:51:28,000 --> 01:51:30,000
比如说我们勤知

3173
01:51:31,000 --> 01:51:32,000
接下来进行了这个运算

3174
01:51:32,000 --> 01:51:34,000
比如说两个年份的相减

3175
01:51:35,000 --> 01:51:39,000
它在 99%到 99%的可能性之下

3176
01:51:39,000 --> 01:51:41,000
都不会超过 4 位数

3177
01:51:41,000 --> 01:51:45,000
那我们为什么要使用一个

3178
01:51:46,000 --> 01:51:47,000
decimal 类型

3179
01:51:47,000 --> 01:51:50,000
就是一个支持任意长度和任意大小的

3180
01:51:50,000 --> 01:51:53,000
浮点类型来做这个运算

3181
01:51:53,000 --> 01:51:54,000
对吧

3182
01:51:54,000 --> 01:51:55,000
所以我们在这种情况下

3183
01:51:55,000 --> 01:51:57,000
就可以相对安全的

3184
01:51:57,000 --> 01:52:00,000
使用一个短整数来存储

3185
01:52:00,000 --> 01:52:04,000
也就是一个 16 比特的二进制数来存储年份

3186
01:52:05,000 --> 01:52:07,000
来存储年份之间的差异

3187
01:52:07,000 --> 01:52:08,000
对吧

3188
01:52:10,000 --> 01:52:14,000
但是这种情况也却又不是一直成立的

3189
01:52:14,000 --> 01:52:15,000
比如说

3190
01:52:16,000 --> 01:52:21,000
假如你的两个年份是用长整

3191
01:52:22,000 --> 01:52:23,000
来存储的

3192
01:52:23,000 --> 01:52:26,000
而你偏偏要选择一个短整的数来存储

3193
01:52:26,000 --> 01:52:28,000
他们之间的差异

3194
01:52:28,000 --> 01:52:32,000
那可能对于性能又不是一个特别好的影响

3195
01:52:33,000 --> 01:52:35,000
就是你反倒不如说

3196
01:52:35,000 --> 01:52:35,000
好

3197
01:52:35,000 --> 01:52:39,000
那我也把它们的差用一个长整数来存储好了

3198
01:52:39,000 --> 01:52:42,000
这样在具体做运算的时候

3199
01:52:42,000 --> 01:52:44,000
CPU 可能反而会去省一些力

3200
01:52:44,000 --> 01:52:47,000
因为每个类型都是一样的

3201
01:52:47,000 --> 01:52:47,000
不用长号了

3202
01:52:47,000 --> 01:52:49,000
更懂得怎么去优化

3203
01:52:49,000 --> 01:52:49,000
对

3204
01:52:49,000 --> 01:52:53,000
所以类型系统其实是一个非常

3205
01:52:54,000 --> 01:52:56,000
相对来说复杂

3206
01:52:56,000 --> 01:53:01,000
但是又很少人会告诉你说这东西一定要弄清楚的这么一套东西

3207
01:53:04,000 --> 01:53:04,000
对

3208
01:53:05,000 --> 01:53:06,000
然后

3209
01:53:08,000 --> 01:53:08,000
还有什么

3210
01:53:10,000 --> 01:53:13,000
类型系统还曾经给我带来的困扰

3211
01:53:13,000 --> 01:53:13,000
就是

3212
01:53:14,000 --> 01:53:15,000
或者让我思考的一些地方

3213
01:53:15,000 --> 01:53:16,000
就是比如说

3214
01:53:17,000 --> 01:53:18,000
在不同语言里面

3215
01:53:19,000 --> 01:53:22,000
对于不同类型之间的

3216
01:53:23,000 --> 01:53:24,000
数据

3217
01:53:26,000 --> 01:53:27,000
是否应该相互转换

3218
01:53:27,000 --> 01:53:30,000
以及怎样相互转换

3219
01:53:30,000 --> 01:53:32,000
的设计哲学上面也是不一样的

3220
01:53:33,000 --> 01:53:33,000
对

3221
01:53:33,000 --> 01:53:36,000
这 typecasting 是一个很大的一个问题

3222
01:53:37,000 --> 01:53:40,000
而且有很多这种不同的思路

3223
01:53:40,000 --> 01:53:43,000
比如说我们常用的语言里面有个很坑爹的

3224
01:53:43,000 --> 01:53:43,000
这个

3225
01:53:44,000 --> 01:53:47,000
JavaScript 的类型转换就非常的诡异

3226
01:53:47,000 --> 01:53:48,000
对

3227
01:53:48,000 --> 01:53:49,000
我记得

3228
01:53:49,000 --> 01:53:53,000
JavaScript 里面

3229
01:53:54,000 --> 01:53:56,000
对 JavaScript 首先非常坑的一点就是

3230
01:53:58,000 --> 01:54:00,000
字符串的连接和

3231
01:54:00,000 --> 01:54:02,000
数字的相加

3232
01:54:02,000 --> 01:54:03,000
都是用加号

3233
01:54:03,000 --> 01:54:05,000
这个很多语言里面都是这样子的

3234
01:54:05,000 --> 01:54:06,000
就是

3235
01:54:06,000 --> 01:54:08,000
他通过这个运算符

3236
01:54:08,000 --> 01:54:09,000
运算符重载

3237
01:54:10,000 --> 01:54:11,000
然后把这个

3238
01:54:11,000 --> 01:54:13,000
叫做 String concatenation

3239
01:54:13,000 --> 01:54:14,000
就是字符串的拼接

3240
01:54:15,000 --> 01:54:17,000
和这个数值运算的

3241
01:54:17,000 --> 01:54:19,000
我们传统加成重那个加

3242
01:54:19,000 --> 01:54:23,000
是用同一个十字符号来表达的

3243
01:54:24,000 --> 01:54:26,000
但是在一般的语言里面

3244
01:54:26,000 --> 01:54:28,000
你通常会报错

3245
01:54:28,000 --> 01:54:32,000
因为你用一个数字加一个字符串什么意思

3246
01:54:32,000 --> 01:54:33,000
这个

3247
01:54:33,000 --> 01:54:36,000
定义是就是他所说的这个 Synaptic 是很不明朗的

3248
01:54:37,000 --> 01:54:39,000
但是像 JavaScript 这种比较坑爹的语言

3249
01:54:40,000 --> 01:54:41,000
他就会帮你自动来

3250
01:54:41,000 --> 01:54:41,000
我帮你

3251
01:54:42,000 --> 01:54:42,000
我很聪明的

3252
01:54:42,000 --> 01:54:44,000
我能猜出你在想什么

3253
01:54:44,000 --> 01:54:46,000
你肯定在把这个数字相加对吧

3254
01:54:46,000 --> 01:54:47,000
那我先把这个

3255
01:54:49,000 --> 01:54:49,000
对不对

3256
01:54:50,000 --> 01:54:52,000
他先把这个数字变成一个字符串拼一起

3257
01:54:52,000 --> 01:54:53,000
或者说是

3258
01:54:54,000 --> 01:54:56,000
他先把这个字符串转化成一个数字

3259
01:54:56,000 --> 01:54:57,000
再把这个结果

3260
01:54:57,000 --> 01:54:58,000
这个求和的结果给你

3261
01:54:58,000 --> 01:55:01,000
就这个其实有很多这种坑爹的变化在里面

3262
01:55:02,000 --> 01:55:02,000
没错

3263
01:55:03,000 --> 01:55:04,000
就比如说

3264
01:55:05,000 --> 01:55:07,000
而且我觉得 JavaScript 更坑的一点是

3265
01:55:07,000 --> 01:55:09,000
不仅仅是数字和字符串是这样的

3266
01:55:10,000 --> 01:55:10,000
在

3267
01:55:11,000 --> 01:55:12,000
很多其他地方也是这样的

3268
01:55:12,000 --> 01:55:14,000
比如说你给他一个矩阵

3269
01:55:14,000 --> 01:55:16,000
他会把矩阵转换成

3270
01:55:16,000 --> 01:55:17,000
嗯

3271
01:55:18,000 --> 01:55:20,000
数字或者字符串来找

3272
01:55:21,000 --> 01:55:22,000
我想说 A

3273
01:55:22,000 --> 01:55:23,000
对

3274
01:55:23,000 --> 01:55:24,000
有数组

3275
01:55:24,000 --> 01:55:26,000
他会把数组转化成字符串

3276
01:55:26,000 --> 01:55:28,000
然后把字符串给你的

3277
01:55:28,000 --> 01:55:29,000
另外一个东西相

3278
01:55:30,000 --> 01:55:31,000
相拼接

3279
01:55:31,000 --> 01:55:33,000
或者说你给他一个 object

3280
01:55:33,000 --> 01:55:35,000
他也会把这个 object 转成一个

3281
01:55:36,000 --> 01:55:38,000
数字或者字符串来给你

3282
01:55:38,000 --> 01:55:40,000
加号前面的那个相拼接

3283
01:55:40,000 --> 01:55:42,000
而且这种拼接规则是不满足交换率的

3284
01:55:42,000 --> 01:55:44,000
可能 A 加 B 是一种结果

3285
01:55:44,000 --> 01:55:45,000
B 加 A 是另外一种结果

3286
01:55:46,000 --> 01:55:47,000
一切都是如此的不可预测

3287
01:55:48,000 --> 01:55:50,000
以至于网上专门有做过一些

3288
01:55:50,000 --> 01:55:54,000
非常搞笑的视频来嘲笑这种现象

3289
01:55:54,000 --> 01:55:57,000
所以你不能指望一个什么

3290
01:55:57,000 --> 01:55:59,000
这两个星期里面设计出来的语言

3291
01:55:59,000 --> 01:56:01,000
有一个很合理的类型系统对吧

3292
01:56:01,000 --> 01:56:02,000
这个是没有办法的

3293
01:56:02,000 --> 01:56:04,000
但我们可以回过头来看一下

3294
01:56:04,000 --> 01:56:05,000
那些所谓

3295
01:56:05,000 --> 01:56:07,000
正儿八经设计的语言的类型系统

3296
01:56:07,000 --> 01:56:09,000
会是一个怎么样子的

3297
01:56:10,000 --> 01:56:10,000
但

3298
01:56:10,000 --> 01:56:12,000
当然这件事情

3299
01:56:12,000 --> 01:56:13,000
还有另外一种思路就是

3300
01:56:13,000 --> 01:56:14,000
既然

3301
01:56:14,000 --> 01:56:18,000
相加和字符串相连

3302
01:56:18,000 --> 01:56:20,000
其实是两种操作

3303
01:56:20,000 --> 01:56:24,000
那我为什么不干脆就设计两种操作符给他们呢

3304
01:56:24,000 --> 01:56:25,000
比如说

3305
01:56:25,000 --> 01:56:26,000
Purl

3306
01:56:27,000 --> 01:56:28,000
Purl 是用点

3307
01:56:30,000 --> 01:56:31,000
PHP 也是用点

3308
01:56:32,000 --> 01:56:33,000
Lua 是用点点

3309
01:56:34,000 --> 01:56:36,000
就是用点点

3310
01:56:36,000 --> 01:56:38,000
才可以把两个字符串拼接起来

3311
01:56:38,000 --> 01:56:39,000
而你用加的时候

3312
01:56:40,000 --> 01:56:42,000
是只能算数的

3313
01:56:42,000 --> 01:56:45,000
这就是避免了操作符重载的问题

3314
01:56:46,000 --> 01:56:46,000
对

3315
01:56:46,000 --> 01:56:47,000
而且在这种情况之下

3316
01:56:47,000 --> 01:56:48,000
你说他啥也好

3317
01:56:48,000 --> 01:56:50,000
说他精明也好

3318
01:56:50,000 --> 01:56:57,000
语言会更加有信心的去帮你做类型转换

3319
01:56:57,000 --> 01:56:58,000
比如说你写

3320
01:56:58,000 --> 01:56:59,000
至少在 Purl 里面

3321
01:56:59,000 --> 01:57:02,000
我百分百敢说在 Purl 里面

3322
01:57:02,000 --> 01:57:07,000
你如果写一个字符串的三

3323
01:57:07,000 --> 01:57:09,000
就是双语号三双语号

3324
01:57:09,000 --> 01:57:11,000
加上一个字符串的二

3325
01:57:11,000 --> 01:57:14,000
双语号二双语号

3326
01:57:15,000 --> 01:57:17,000
最终的结果出来会是五

3327
01:57:17,000 --> 01:57:19,000
因为 Purl 如此聪明

3328
01:57:19,000 --> 01:57:20,000
他猜到了你

3329
01:57:21,000 --> 01:57:22,000
虽然给他两个字符串

3330
01:57:23,000 --> 01:57:25,000
但你实际想要做的是一种加法

3331
01:57:25,000 --> 01:57:27,000
因为你只能加这个符号

3332
01:57:27,000 --> 01:57:27,000
对吧

3333
01:57:27,000 --> 01:57:30,000
但是在 JavaScript 里面

3334
01:57:30,000 --> 01:57:32,000
你写一个字符串的三

3335
01:57:32,000 --> 01:57:34,000
再加一个字符串的二

3336
01:57:34,000 --> 01:57:36,000
你最终的结果肯定是三二

3337
01:57:36,000 --> 01:57:39,000
在这种情况之下

3338
01:57:40,000 --> 01:57:42,000
如果你可以分别使用

3339
01:57:42,000 --> 01:57:43,000
两个不同操作符的话

3340
01:57:43,000 --> 01:57:46,000
那么自动类型转换

3341
01:57:46,000 --> 01:57:50,000
实际上有可能从中获得益处

3342
01:57:51,000 --> 01:57:53,000
但是可能获得益处也仅限于此

3343
01:57:55,000 --> 01:57:57,000
我觉得可能很多人

3344
01:57:57,000 --> 01:57:59,000
对这个事情的想法还是不太一样

3345
01:57:59,000 --> 01:58:00,000
就是说有几种思路

3346
01:58:00,000 --> 01:58:01,000
起码我们看到

3347
01:58:01,000 --> 01:58:02,000
就刚刚你讲

3348
01:58:02,000 --> 01:58:04,000
那么我们就避免操作符存在

3349
01:58:04,000 --> 01:58:06,000
一个操作符就只做一件事情

3350
01:58:06,000 --> 01:58:08,000
语意明确绝对不会出错对吧

3351
01:58:09,000 --> 01:58:10,000
他这样的话就是说

3352
01:58:10,000 --> 01:58:13,000
有些所谓约定俗成的东西

3353
01:58:13,000 --> 01:58:17,000
可能就不是那么的直观了

3354
01:58:17,000 --> 01:58:18,000
特别是有些人喜欢写什么

3355
01:58:18,000 --> 01:58:19,000
DSL 的情况下

3356
01:58:21,000 --> 01:58:21,000
Domain Specific

3357
01:58:21,000 --> 01:58:22,000
那个就像这样

3358
01:58:22,000 --> 01:58:26,000
如果你不能重载这个运算符的话

3359
01:58:26,000 --> 01:58:27,000
它很多这种

3360
01:58:28,000 --> 01:58:30,000
看起来那个语言就会很丑

3361
01:58:33,000 --> 01:58:34,000
但这就是两个不同的

3362
01:58:35,000 --> 01:58:36,000
那种什么思潮

3363
01:58:36,000 --> 01:58:38,000
我觉得这个也很难说

3364
01:58:38,000 --> 01:58:39,000
哪个好哪个不好

3365
01:58:39,000 --> 01:58:40,000
就是你就是说

3366
01:58:40,000 --> 01:58:41,000
你是选择了语言

3367
01:58:41,000 --> 01:58:42,000
你没有办法

3368
01:58:42,000 --> 01:58:44,000
你只能接受这门现实

3369
01:58:45,000 --> 01:58:46,000
没错

3370
01:58:48,000 --> 01:58:51,000
比如说 Zhanya 里面有一些操作

3371
01:58:51,000 --> 01:58:53,000
其实明明应该用

3372
01:58:54,000 --> 01:58:55,000
也不能说明明

3373
01:58:55,000 --> 01:58:57,000
就是其实是可以用

3374
01:58:58,000 --> 01:59:01,000
一个单个的运算符来做的

3375
01:59:01,000 --> 01:59:03,000
但是它偏偏要写成一个方法

3376
01:59:03,000 --> 01:59:05,000
比如说著名的.equals

3377
01:59:06,000 --> 01:59:08,000
它对两个字符串相等

3378
01:59:08,000 --> 01:59:09,000
我们要使用.equals

3379
01:59:09,000 --> 01:59:10,000
而不能使用等号

3380
01:59:12,000 --> 01:59:14,000
它没有重载操作符

3381
01:59:14,000 --> 01:59:18,000
其实它就有所谓的中间路线主义者

3382
01:59:18,000 --> 01:59:20,000
就是它并不是严格的说

3383
01:59:20,000 --> 01:59:22,000
我们这个操作符不完全重载

3384
01:59:22,000 --> 01:59:24,000
比如说它里面好像是那个

3385
01:59:24,000 --> 01:59:26,000
字符串的添加还是用加号吧

3386
01:59:26,000 --> 01:59:27,000
我记得

3387
01:59:28,000 --> 01:59:29,000
现在是用加号

3388
01:59:29,000 --> 01:59:29,000
对

3389
01:59:29,000 --> 01:59:31,000
但是它相等就不用等号

3390
01:59:31,000 --> 01:59:32,000
对

3391
01:59:32,000 --> 01:59:35,000
它就是一个 mixed

3392
01:59:35,000 --> 01:59:36,000
那种两种思路都会有

3393
01:59:36,000 --> 01:59:38,000
你就觉得很诡异

3394
01:59:38,000 --> 01:59:40,000
你会觉得这个语言不够 consistent

3395
01:59:41,000 --> 01:59:42,000
对

3396
01:59:42,000 --> 01:59:46,000
而事实上就是这样一些核类型系统

3397
01:59:46,000 --> 01:59:48,000
乃至于类型系统本身的存在

3398
01:59:51,000 --> 01:59:54,000
会深深的引用来的什么

3399
01:59:54,000 --> 01:59:55,000
什么什么主意

3400
01:59:56,000 --> 02:00:00,000
所以实际上一种编程语言的类型系统

3401
02:00:00,000 --> 02:00:03,000
乃至于和类型系统相关的这一系列 utilities

3402
02:00:03,000 --> 02:00:05,000
是会影响我们

3403
02:00:07,000 --> 02:00:09,000
思考乃至于写程序的方式

3404
02:00:09,000 --> 02:00:10,000
没错

3405
02:00:10,000 --> 02:00:12,000
所以就是说如果你是一个渣滥程序员的话

3406
02:00:12,000 --> 02:00:14,000
你把现实领域里面的一些问题

3407
02:00:14,000 --> 02:00:17,000
转化成对应的渣滥程序的时候

3408
02:00:18,000 --> 02:00:22,000
因为你的思考会受到渣滥的类型系统的限制

3409
02:00:22,000 --> 02:00:27,000
你最终思考过程乃至于你的路径

3410
02:00:27,000 --> 02:00:31,000
都可能会跟一个类型系统和渣滥完全不一样的

3411
02:00:31,000 --> 02:00:39,000
比如说 Lisp 或者是 JavaScript 的程序是完全不一样

3412
02:00:44,000 --> 02:00:48,000
所以这就涉及到了一个语言

3413
02:00:49,000 --> 02:00:51,000
它对于类型系统的选择

3414
02:00:52,000 --> 02:00:56,000
或者说设计哲学也是可以有所不同的

3415
02:00:56,000 --> 02:01:00,000
比如说最常见的两个概念就是强类型和弱类型

3416
02:01:01,000 --> 02:01:05,000
strong type and weak type

3417
02:01:06,000 --> 02:01:11,000
强类型其实就是说

3418
02:01:11,000 --> 02:01:13,000
在这种语言里面

3419
02:01:14,000 --> 02:01:22,000
一个类型是比较容易或者说比较重要的

3420
02:01:23,000 --> 02:01:25,000
是比较容易一眼看出来的

3421
02:01:26,000 --> 02:01:28,000
如果要一个比较直观的解释

3422
02:01:28,000 --> 02:01:31,000
就是在这个语言里面

3423
02:01:31,000 --> 02:01:32,000
你所写下来的每一项程序

3424
02:01:32,000 --> 02:01:34,000
你所遇到的每个数据

3425
02:01:34,000 --> 02:01:36,000
你都可以很直观的

3426
02:01:37,000 --> 02:01:40,000
至少是在生命的时候看出来它是一个什么样的类型

3427
02:01:40,000 --> 02:01:47,000
比如说 C++是一个强类型的语言

3428
02:01:47,000 --> 02:01:48,000
我可以这么说吧

3429
02:01:49,000 --> 02:01:52,000
而 C++是强类型的

3430
02:01:53,000 --> 02:01:58,000
因为强类型弱类型其实并不是一个非常科学的定义

3431
02:01:58,000 --> 02:02:00,000
没有一个非常准确的定义说

3432
02:02:00,000 --> 02:02:02,000
是一个相对的概念吗我觉得

3433
02:02:03,000 --> 02:02:05,000
对只有一种语言是比较强类型的

3434
02:02:05,000 --> 02:02:07,000
然后另外一种语言是比较弱类型的

3435
02:02:08,000 --> 02:02:10,000
但是我们这个划分的依据是什么

3436
02:02:10,000 --> 02:02:11,000
这个可能要搞清楚

3437
02:02:12,000 --> 02:02:17,000
在生命一个变量的时候

3438
02:02:17,000 --> 02:02:20,000
需要写出这个变量的类型

3439
02:02:20,000 --> 02:02:22,000
算是强类型的一种体现吗

3440
02:02:24,000 --> 02:02:25,000
不一定现在不是有类型推导了吗

3441
02:02:25,000 --> 02:02:27,000
有时候可以是被推导出来的

3442
02:02:30,000 --> 02:02:33,000
带有类型推导语言仍旧可能是强类型语言

3443
02:02:35,000 --> 02:02:36,000
对没错

3444
02:02:41,000 --> 02:02:46,000
那么我们可不可以从是否进行自动类型转换的角度讨论

3445
02:02:47,000 --> 02:02:57,000
如果一种语言会非常严格的处理你所声明的数据类型

3446
02:02:57,000 --> 02:03:01,000
以及你在实际运行之中给它的数据类型

3447
02:03:02,000 --> 02:03:04,000
我们就可以说它是一种强类型语言

3448
02:03:04,000 --> 02:03:15,000
比如说 Husco 会拒绝在一个接受整数的函数上面

3449
02:03:17,000 --> 02:03:20,000
处理一个辅典数的输入

3450
02:03:20,000 --> 02:03:22,000
我们就可以说 Husco 是一门强类型语言

3451
02:03:23,000 --> 02:03:28,000
我觉得这个分法可能是会明确更加清晰一点的一个标准

3452
02:03:29,000 --> 02:03:29,000
对

3453
02:03:29,000 --> 02:03:35,000
而像比如说 Lua 这种只有一个 Number 类型的语言

3454
02:03:35,000 --> 02:03:38,000
就是相对来说更弱类型的语言

3455
02:03:40,000 --> 02:03:44,000
然后像 JavaScore 的这种语言更是弱的一大户

3456
02:03:45,000 --> 02:03:46,000
就弱机

3457
02:03:47,000 --> 02:03:50,000
对它会自动帮你做很多的类型转换

3458
02:03:50,000 --> 02:03:51,000
而且不会报错

3459
02:03:51,000 --> 02:03:53,000
所以其实这里区分的一个标准就是说

3460
02:03:54,000 --> 02:03:57,000
如果你的类型写得不是很严谨

3461
02:03:57,000 --> 02:03:58,000
编译器会不会报错

3462
02:03:59,000 --> 02:04:01,000
这个时候就可以来判断它是一个

3463
02:04:01,000 --> 02:04:04,000
乃至于是强类型还是弱类型

3464
02:04:04,000 --> 02:04:05,000
对

3465
02:04:05,000 --> 02:04:07,000
或者更强更弱还是怎么样子

3466
02:04:07,000 --> 02:04:08,000
对

3467
02:04:08,000 --> 02:04:10,000
这里有一个概念要解释一下

3468
02:04:10,000 --> 02:04:13,000
就是为什么类型自动转换会有什么问题

3469
02:04:13,000 --> 02:04:14,000
刚刚的没有讲

3470
02:04:15,000 --> 02:04:18,000
自动类型转换会引入一些错误

3471
02:04:18,000 --> 02:04:21,000
而这些错误有时候有可能是致命的

3472
02:04:21,000 --> 02:04:21,000
对

3473
02:04:21,000 --> 02:04:24,000
比如说最核心的一个问题就是说

3474
02:04:24,000 --> 02:04:29,000
你要假设你要取盖你年份相减的问题

3475
02:04:29,000 --> 02:04:30,000
就是很好的一个例子

3476
02:04:31,000 --> 02:04:36,000
假设你要求两个 64 位诊数的差对吧

3477
02:04:36,000 --> 02:04:38,000
但是如果你的存储的结果

3478
02:04:38,000 --> 02:04:40,000
你的声明的时候只用了 32 位

3479
02:04:40,000 --> 02:04:41,000
那很可能就会一出

3480
02:04:41,000 --> 02:04:42,000
到这个结果就是错误的

3481
02:04:43,000 --> 02:04:46,000
比如说你用 64 位的最大值

3482
02:04:46,000 --> 02:04:48,000
减掉 64 位的最小值

3483
02:04:48,000 --> 02:04:50,000
它的差值就甚至会超过自己本身

3484
02:04:50,000 --> 02:04:51,000
对不对

3485
02:04:51,000 --> 02:04:51,000
对

3486
02:04:51,000 --> 02:04:53,000
而且虽然你可以阿咎说

3487
02:04:53,000 --> 02:04:55,000
如果这两个 64 位的程序

3488
02:04:56,000 --> 02:04:57,000
这两个 64 位的变量

3489
02:04:58,000 --> 02:05:00,000
其包含的值真的只是一个年份而已

3490
02:05:00,000 --> 02:05:03,000
它不可能超过 9999

3491
02:05:03,000 --> 02:05:03,000
比如说

3492
02:05:04,000 --> 02:05:06,000
或者说不会超过

3493
02:05:06,000 --> 02:05:10,000
在我的有生之年它不会超过 2099

3494
02:05:10,000 --> 02:05:16,000
但是反过来你可以说有那种

3495
02:05:16,000 --> 02:05:16,000
对啊

3496
02:05:16,000 --> 02:05:18,000
你要做什么考古或者你要做什么

3497
02:05:19,000 --> 02:05:22,000
历史或者对未来的一些预测的时候

3498
02:05:22,000 --> 02:05:24,000
你很难讲你可以超过哪个值

3499
02:05:24,000 --> 02:05:29,000
这个时候就要很小心的去选择数值的类型

3500
02:05:29,000 --> 02:05:30,000
然后你要看你的编程

3501
02:05:31,000 --> 02:05:32,000
就每一步执行的时候

3502
02:05:32,000 --> 02:05:36,000
会可能产生哪些类型错误

3503
02:05:36,000 --> 02:05:37,000
比如说一出

3504
02:05:37,000 --> 02:05:39,000
或者主要就是一出

3505
02:05:39,000 --> 02:05:39,000
对

3506
02:05:39,000 --> 02:05:40,000
对

3507
02:05:40,000 --> 02:05:50,000
而且这种错误很可能是在你测试阶段很难发现的

3508
02:05:50,000 --> 02:05:54,000
就是虽然说当程序上的一个必要条件

3509
02:05:54,000 --> 02:05:56,000
就是你必须不停地去考虑去边界条件

3510
02:05:56,000 --> 02:05:58,000
但是有时候你是

3511
02:05:59,000 --> 02:05:59,000
你是会

3512
02:05:59,000 --> 02:06:05,000
你的思想模型会导致了你认为这种边界条件

3513
02:06:05,000 --> 02:06:07,000
根本就不是边界条件

3514
02:06:07,000 --> 02:06:08,000
而是不可能

3515
02:06:08,000 --> 02:06:09,000
不可能发生的事就是不可能发生

3516
02:06:09,000 --> 02:06:13,000
所以你不会在你的测试率里面这么写

3517
02:06:13,000 --> 02:06:15,000
但实际上最后它也许就是这么发生了

3518
02:06:20,000 --> 02:06:23,000
与此类似的有一个问题就是

3519
02:06:23,000 --> 02:06:25,000
有一些系统里面

3520
02:06:25,000 --> 02:06:31,000
在上世纪七八十年代有些系统里面会用 9999 来代替一个

3521
02:06:32,000 --> 02:06:33,000
不合法或者是

3522
02:06:35,000 --> 02:06:37,000
还不知道确切日期的日期

3523
02:06:38,000 --> 02:06:40,000
有些人就会直接输入 9999

3524
02:06:40,000 --> 02:06:43,000
然后到 99 年 99 日的那一天

3525
02:06:43,000 --> 02:06:45,000
有好多数字都变成了 9999

3526
02:06:45,000 --> 02:06:50,000
然后在尤其是在一些转换的过程中试图把一个

3527
02:06:51,000 --> 02:06:55,000
输入的数字转换成系统内在时间的时候

3528
02:06:55,000 --> 02:06:57,000
很多程序都因此崩溃

3529
02:06:57,000 --> 02:06:59,000
他们认为 9999 是一个

3530
02:07:00,000 --> 02:07:04,000
错误的或者不合理的日期

3531
02:07:04,000 --> 02:07:05,000
不合理的日期

3532
02:07:05,000 --> 02:07:10,000
当然这个地方是因为它没有正确的区分日和年

3533
02:07:11,000 --> 02:07:14,000
日月和年之间的界限而导致的

3534
02:07:14,000 --> 02:07:19,000
但是这也是一个你没有想到的一个 H-case 的例子

3535
02:07:19,000 --> 02:07:22,000
所以强类型既然有好处的话

3536
02:07:22,000 --> 02:07:23,000
那弱类型有没有好处

3537
02:07:24,000 --> 02:07:26,000
其实我觉得弱类型就不能

3538
02:07:26,000 --> 02:07:30,000
它的好处我觉得可能要从另外一个角度去看它

3539
02:07:30,000 --> 02:07:30,000
就是说

3540
02:07:31,000 --> 02:07:34,000
它可以让这个表达的

3541
02:07:34,000 --> 02:07:36,000
让人表达的逻辑更清晰

3542
02:07:36,000 --> 02:07:39,000
因为你不用太考虑更多的细致末节的问题

3543
02:07:39,000 --> 02:07:45,000
你觉得这个在其实就是给了人这个程序员更多的

3544
02:07:45,000 --> 02:07:46,000
这个容错的空间

3545
02:07:46,000 --> 02:07:49,000
然后你大概想这个地方应该是个数吧

3546
02:07:49,000 --> 02:07:50,000
但距离是个什么数

3547
02:07:50,000 --> 02:07:51,000
我也不去指定它

3548
02:07:51,000 --> 02:07:55,000
到时候只要大部分时候运行的没问题就可以了

3549
02:07:55,000 --> 02:07:59,000
但其实从这个严谨和正确性的角度来讲

3550
02:07:59,000 --> 02:08:00,000
我觉得弱类型是不好的

3551
02:08:00,000 --> 02:08:02,000
就是它的语意

3552
02:08:02,000 --> 02:08:05,000
对于机器来说语意是一个很模糊的一个概念

3553
02:08:05,000 --> 02:08:06,000
我觉得

3554
02:08:08,000 --> 02:08:09,000
所以弱类型和强类型

3555
02:08:09,000 --> 02:08:13,000
其实最大的区别就在于它到底是对机器更有善

3556
02:08:13,000 --> 02:08:14,000
还是对人更有善

3557
02:08:15,000 --> 02:08:15,000
对

3558
02:08:15,000 --> 02:08:15,000
没错

3559
02:08:15,000 --> 02:08:17,000
我觉得这个是很重要一个东西

3560
02:08:17,000 --> 02:08:19,000
然后在实际使用的时候

3561
02:08:19,000 --> 02:08:26,000
我觉得可能判断一个最主要的一个相对来说比较明显的标志

3562
02:08:26,000 --> 02:08:29,000
就是说有没有所谓隐世的类型转换

3563
02:08:29,000 --> 02:08:32,000
就是说假设你有两个数

3564
02:08:34,000 --> 02:08:36,000
假设你有一个 32 位的正准数

3565
02:08:36,000 --> 02:08:37,000
64 个正准数

3566
02:08:37,000 --> 02:08:39,000
你要加它这个编辑器会不会报错

3567
02:08:39,000 --> 02:08:41,000
这个时候可以是一个比较明显的

3568
02:08:41,000 --> 02:08:45,000
检验它是强类型还是弱类型系统的一个标志

3569
02:08:45,000 --> 02:08:47,000
就是弱类型系统通常会允许你怎么改

3570
02:08:47,000 --> 02:08:50,000
然后它大部分情况下也不会抱怨什么

3571
02:08:50,000 --> 02:08:53,000
但强类型系统它会一定告诉你说这里可能

3572
02:08:53,000 --> 02:08:56,000
这里是一个你需要显示的做一下类型转换才可以

3573
02:08:56,000 --> 02:08:58,000
编辑器才不会

3574
02:08:58,000 --> 02:08:59,000
就不逼逼你对吧

3575
02:09:01,000 --> 02:09:05,000
实际使用中比如说我现在在用的勾语言

3576
02:09:05,000 --> 02:09:06,000
它就是一个非常强的

3577
02:09:06,000 --> 02:09:08,000
它默认是不进行任何类型转换的

3578
02:09:10,000 --> 02:09:13,000
所以你要加两个不同长不同宽度

3579
02:09:13,000 --> 02:09:17,000
甚至是不同就有一个所谓的无符号有符号的同样宽度的数

3580
02:09:17,000 --> 02:09:19,000
它都是不会自动帮你去做这个转换

3581
02:09:19,000 --> 02:09:21,000
你要手工声明

3582
02:09:21,000 --> 02:09:23,000
你要先把哪个数转换到哪个数

3583
02:09:24,000 --> 02:09:25,000
哪个类型转换到哪个类型之后

3584
02:09:25,000 --> 02:09:28,000
两个类型一致之后你才可以做相应的操作

3585
02:09:28,000 --> 02:09:32,000
对而比如说 C 元就是介于两者之间的

3586
02:09:32,000 --> 02:09:36,000
就是 C 元里面大部分时候你是需要做强制类型转换

3587
02:09:36,000 --> 02:09:38,000
但是很多时候也可以不做

3588
02:09:38,000 --> 02:09:40,000
很多时候你也可以不做

3589
02:09:40,000 --> 02:09:42,000
比如说尤其是在数字相加或者是

3590
02:09:44,000 --> 02:09:48,000
主要是在不同类型的整形之间的四则运算的时候

3591
02:09:48,000 --> 02:09:50,000
它可以让你模糊一点

3592
02:09:51,000 --> 02:09:54,000
对它会自动帮你提升到最合适的宽度

3593
02:09:54,000 --> 02:09:56,000
或者说自动选择最宽的那个

3594
02:09:58,000 --> 02:10:00,000
所以这个里面选择无非就是在

3595
02:10:00,000 --> 02:10:01,000
我们叫做 Verbose

3596
02:10:01,000 --> 02:10:02,000
这个叫什么

3597
02:10:02,000 --> 02:10:03,000
中文叫什么

3598
02:10:03,000 --> 02:10:04,000
Versus

3599
02:10:04,000 --> 02:10:06,000
啰嗦和捞刀

3600
02:10:06,000 --> 02:10:09,000
这个详细写起来是不是很麻烦

3601
02:10:09,000 --> 02:10:12,000
看起来是不是觉得很多噪音的情况

3602
02:10:12,000 --> 02:10:16,000
和程序的正确性之间做一个取舍

3603
02:10:16,000 --> 02:10:22,000
我觉得对于一些所谓系统级别的应用来讲

3604
02:10:22,000 --> 02:10:24,000
我觉得强类型是一个更好的选择

3605
02:10:24,000 --> 02:10:26,000
但你说像那种什么脚本语言或者什么

3606
02:10:26,000 --> 02:10:27,000
连你说什么

3607
02:10:27,000 --> 02:10:30,000
需要脚本你写一次就扔了

3608
02:10:30,000 --> 02:10:31,000
那你肯定是会心想

3609
02:10:31,000 --> 02:10:33,000
你说那不要烦我那么多细节

3610
02:10:33,000 --> 02:10:36,000
我就加两个数别逼逼

3611
02:10:36,000 --> 02:10:37,000
就就是这么一个选择

3612
02:10:37,000 --> 02:10:41,000
但是很可惜的就是可能有些语言

3613
02:10:41,000 --> 02:10:44,000
其设计初衷是让你拿来当脚本语言用的

3614
02:10:44,000 --> 02:10:50,000
但是最后阴差阳和成为一个业界重量级的工程语言

3615
02:10:50,000 --> 02:10:52,000
JavaScribe 就是这个例子

3616
02:10:52,000 --> 02:10:54,000
对或者 PHP

3617
02:10:54,000 --> 02:10:58,000
类型系统其实是不敷使用的

3618
02:10:58,000 --> 02:11:00,000
但是就是如果到了不敷使用的地步

3619
02:11:00,000 --> 02:11:04,000
但是人们不得不捏着鼻子去用它

3620
02:11:05,000 --> 02:11:05,000
没错

3621
02:11:08,000 --> 02:11:12,000
所以强类型弱类型是相对来说比较

3622
02:11:12,000 --> 02:11:13,000
怎么说

3623
02:11:13,000 --> 02:11:16,000
比较主观或者说比较随意的判断标准

3624
02:11:17,000 --> 02:11:17,000
但是反过来

3625
02:11:18,000 --> 02:11:22,000
接下来说的动态类型和静态类型的区分就比较

3626
02:11:23,000 --> 02:11:25,000
有一个明显的界限

3627
02:11:25,000 --> 02:11:27,000
虽然也并不是 100%

3628
02:11:27,000 --> 02:11:29,000
但至少我们的界限是比较

3629
02:11:29,000 --> 02:11:32,000
就是至少标尺是比较清晰的

3630
02:11:32,000 --> 02:11:32,000
没错

3631
02:11:34,000 --> 02:11:38,000
所以什么是动态类型的

3632
02:11:38,000 --> 02:11:39,000
动态类型就是

3633
02:11:42,000 --> 02:11:43,000
如果说错的话一定要纠正我

3634
02:11:43,000 --> 02:11:46,000
动态类型也就是意味着

3635
02:11:47,000 --> 02:11:48,000
我有一个名字

3636
02:11:48,000 --> 02:11:49,000
然后我有样东西

3637
02:11:50,000 --> 02:11:52,000
我把这个名字也就是变量名

3638
02:11:53,000 --> 02:11:55,000
加到这个东西上面

3639
02:11:55,000 --> 02:11:58,000
说这样东西有这个名字

3640
02:11:58,000 --> 02:12:03,000
那么如果我对名字的类型有所限制

3641
02:12:04,000 --> 02:12:07,000
那我就可以说它是一种静态类型

3642
02:12:07,000 --> 02:12:13,000
也就是说类型这个属性是归于名字的

3643
02:12:13,000 --> 02:12:15,000
同时也要归于物品

3644
02:12:15,000 --> 02:12:19,000
但是如果在这个过程之中

3645
02:12:19,000 --> 02:12:21,000
只有被指名的那样东西有类型

3646
02:12:21,000 --> 02:12:23,000
而名字本身是不但类型的

3647
02:12:23,000 --> 02:12:26,000
我就可以说它是一种动态的形语

3648
02:12:26,000 --> 02:12:27,000
这样说对吗

3649
02:12:28,000 --> 02:12:29,000
或者是这样说

3650
02:12:29,000 --> 02:12:31,000
足够容易理解吗

3651
02:12:33,000 --> 02:12:34,000
我还没反应过来这句话

3652
02:12:34,000 --> 02:12:37,000
对 因为我是不太想使用什么

3653
02:12:37,000 --> 02:12:38,000
比如说运行时绑定

3654
02:12:38,000 --> 02:12:41,000
或者是编译器绑定这样的术语

3655
02:12:41,000 --> 02:12:43,000
我觉得我以另外一个角度来说

3656
02:12:43,000 --> 02:12:44,000
可能比较清楚的方法

3657
02:12:44,000 --> 02:12:47,000
就是说你先不考虑它到底具体语言

3658
02:12:47,000 --> 02:12:49,000
怎么实现值复值

3659
02:12:50,000 --> 02:12:52,000
你就考虑一个单纯意义上的

3660
02:12:52,000 --> 02:12:53,000
所谓一个变量

3661
02:12:53,000 --> 02:12:55,000
它是否是具备一个类型的

3662
02:12:55,000 --> 02:12:57,000
就是说你这个变量

3663
02:12:57,000 --> 02:12:59,000
你复语它一个类型的值之后

3664
02:12:59,000 --> 02:13:02,000
你还可以复语它另外一种类型的值吗

3665
02:13:02,000 --> 02:13:03,000
就如果不能的话

3666
02:13:03,000 --> 02:13:04,000
这种通常我们就把它

3667
02:13:06,000 --> 02:13:08,000
可以很安全地说它是一个静态类型的语言

3668
02:13:08,000 --> 02:13:09,000
但相反

3669
02:13:10,000 --> 02:13:11,000
如果你复语

3670
02:13:11,000 --> 02:13:15,000
你先复语一个类型的值

3671
02:13:15,000 --> 02:13:17,000
然后你之后再复语另外一个类型的值的话

3672
02:13:17,000 --> 02:13:18,000
这个变量本身就可以

3673
02:13:19,000 --> 02:13:21,000
可以具备在不同时刻

3674
02:13:21,000 --> 02:13:22,000
它可能具备多种类型

3675
02:13:22,000 --> 02:13:23,000
这个时候我们可以认为

3676
02:13:23,000 --> 02:13:25,000
它是一个动态类型的语言

3677
02:13:27,000 --> 02:13:28,000
对 其实就是我刚才那段

3678
02:13:28,000 --> 02:13:30,000
啰里吧唆的话想表达一个

3679
02:13:30,000 --> 02:13:31,000
我就想说

3680
02:13:31,000 --> 02:13:33,000
如果一种语言的名字

3681
02:13:33,000 --> 02:13:35,000
如果一种语言的声名变量的时候

3682
02:13:35,000 --> 02:13:37,000
其名字本身是不带类型的

3683
02:13:37,000 --> 02:13:39,000
我们就可以说它是一种动态语言

3684
02:13:40,000 --> 02:13:43,000
然后动态语言和静态语言

3685
02:13:43,000 --> 02:13:49,000
之间其实也并不是完全有一个界限清晰的划分

3686
02:13:49,000 --> 02:13:49,000
就像

3687
02:13:51,000 --> 02:13:53,000
虽然我们刚才说的这个概念

3688
02:13:53,000 --> 02:13:56,000
看起来好像是非常明晰的

3689
02:13:56,000 --> 02:14:00,000
但是实际上我们会遇到这样一个问题

3690
02:14:00,000 --> 02:14:00,000
就是

3691
02:14:04,000 --> 02:14:05,000
尤其是在面向对象的时候

3692
02:14:05,000 --> 02:14:06,000
面向对象变成的时候

3693
02:14:06,000 --> 02:14:07,000
我们会说

3694
02:14:09,000 --> 02:14:14,000
一个名字或者一个变量名

3695
02:14:15,000 --> 02:14:21,000
所带有的类型是它所指向的

3696
02:14:21,000 --> 02:14:25,000
那一个直的类型的超级

3697
02:14:26,000 --> 02:14:26,000
也就是说

3698
02:14:27,000 --> 02:14:29,000
一种语言越静态

3699
02:14:29,000 --> 02:14:33,000
它在运行时所知道的

3700
02:14:34,000 --> 02:14:35,000
关于类型的信息就越少

3701
02:14:36,000 --> 02:14:39,000
而反过来用类型语言越动态

3702
02:14:40,000 --> 02:14:42,000
它在运行时所知道的和类型相关的

3703
02:14:44,000 --> 02:14:47,000
所谓 bookkeeping 机制就越复杂

3704
02:14:51,000 --> 02:14:52,000
所以说

3705
02:14:52,000 --> 02:14:56,000
我们可以在静态和动态的轴上面

3706
02:14:56,000 --> 02:14:58,000
标出几种语言来说

3707
02:14:58,000 --> 02:15:02,000
这种语言要比那种语言更动态

3708
02:15:02,000 --> 02:15:03,000
但是与此同时

3709
02:15:04,000 --> 02:15:05,000
还有其他种语言

3710
02:15:05,000 --> 02:15:07,000
比这种动态语言更为动态

3711
02:15:07,000 --> 02:15:08,000
可以这样说吗

3712
02:15:10,000 --> 02:15:12,000
就是会有一个什么叫做一个

3713
02:15:12,000 --> 02:15:12,000
一个 spectrum

3714
02:15:12,000 --> 02:15:15,000
就是从非常动态的语言

3715
02:15:15,000 --> 02:15:16,000
到非常静态的语言之间

3716
02:15:16,000 --> 02:15:18,000
它是有这么一个连续的

3717
02:15:18,000 --> 02:15:21,000
不连续变化的这么一个进度条

3718
02:15:22,000 --> 02:15:22,000
对

3719
02:15:22,000 --> 02:15:24,000
动态和静态的光谱的

3720
02:15:24,000 --> 02:15:25,000
比较靠近动态的一端

3721
02:15:25,000 --> 02:15:27,000
我们有 loop 或者是 lisp

3722
02:15:27,000 --> 02:15:29,000
这样一些比较动态语言

3723
02:15:30,000 --> 02:15:32,000
而反过来另外一端

3724
02:15:32,000 --> 02:15:32,000
我们有比如说

3725
02:15:35,000 --> 02:15:37,000
相当静态语言是什么呢

3726
02:15:37,000 --> 02:15:38,000
C++是比较静态的

3727
02:15:40,000 --> 02:15:40,000
因为

3728
02:15:40,000 --> 02:15:41,000
我不怎么用

3729
02:15:41,000 --> 02:15:43,000
这个你得清楚

3730
02:15:44,000 --> 02:15:45,000
对

3731
02:15:45,000 --> 02:15:46,000
我必须比较小心的时候

3732
02:15:46,000 --> 02:15:50,000
就是我的理解是在 C++的编译期

3733
02:15:50,000 --> 02:15:53,000
编译时会剥离很多和类型相关的东西

3734
02:15:55,000 --> 02:15:58,000
所以它的运行是实际上是不知道

3735
02:15:58,000 --> 02:15:59,000
比如说它是不知道

3736
02:16:02,000 --> 02:16:05,000
它所真正处理的类型是什么类型

3737
02:16:05,000 --> 02:16:12,000
就是 C++会在运行时失去一切和类型相关的信息

3738
02:16:12,000 --> 02:16:14,000
这实际上是非常静态的一个特性

3739
02:16:14,000 --> 02:16:14,000
OK

3740
02:16:15,000 --> 02:16:19,000
然后 object C 可能就会好一些

3741
02:16:19,000 --> 02:16:23,000
因为 object C 在虽然和 C++几乎一样

3742
02:16:23,000 --> 02:16:24,000
也是相当静态的一种语言

3743
02:16:24,000 --> 02:16:29,000
但是它在运行时能够得到的类型信息

3744
02:16:29,000 --> 02:16:30,000
要比 C++多一些

3745
02:16:30,000 --> 02:16:34,000
比如说你在 object C 里面可以询问

3746
02:16:34,000 --> 02:16:36,000
你要发消息的那个对象

3747
02:16:36,000 --> 02:16:40,000
是不是能够对这个消息做出反应

3748
02:16:40,000 --> 02:16:41,000
这实际上是需要知道

3749
02:16:42,000 --> 02:16:45,000
那个对象所持有的具体类型

3750
02:16:45,000 --> 02:16:48,000
就凡是具有运行时的系统

3751
02:16:48,000 --> 02:16:50,000
它的动态的属性都会更强

3752
02:16:51,000 --> 02:16:51,000
对

3753
02:16:56,000 --> 02:16:56,000
然后

3754
02:16:56,000 --> 02:17:02,000
我前两天看了一篇 PayPal 的程序文写的 blog

3755
02:17:02,000 --> 02:17:08,000
标题大概是关于 Python 的若干迷思之类的这样一个文章

3756
02:17:08,000 --> 02:17:09,000
它里面提到一个观点说

3757
02:17:09,000 --> 02:17:18,000
Python 的类型系统实际上要比 Java 更强

3758
02:17:18,000 --> 02:17:20,000
这是一个很幸运的观点

3759
02:17:20,000 --> 02:17:21,000
对

3760
02:17:21,000 --> 02:17:24,000
而且 Python 是一个动态类型的系统

3761
02:17:24,000 --> 02:17:26,000
Java 或者是 JVM

3762
02:17:26,000 --> 02:17:30,000
其本身也是一个动态类型的虚拟机

3763
02:17:30,000 --> 02:17:36,000
因为其根源可以追溯到一个 small talk 的 virtual machine

3764
02:17:36,000 --> 02:17:38,000
我觉得这个观点还是蛮吸引的

3765
02:17:38,000 --> 02:17:39,000
OK

3766
02:17:39,000 --> 02:17:48,000
等着我还没有时间去具体弄明白它所说的 JVM itself

3767
02:17:48,000 --> 02:17:50,000
是一个动态类型的系统

3768
02:17:50,000 --> 02:17:56,000
具体弄明白它所说的 JVM itself is more dynamically typed

3769
02:17:56,000 --> 02:17:57,000
到底是什么意思

3770
02:17:57,000 --> 02:17:59,000
但我觉得这是一个还挺有趣的观点

3771
02:17:59,000 --> 02:18:02,000
说完动态和静态

3772
02:18:02,000 --> 02:18:10,000
我想再讨论一下用户所自己创建的类型和系统本身类型之间的关系

3773
02:18:10,000 --> 02:18:13,000
就所谓的原生类型和用户类型

3774
02:18:13,000 --> 02:18:14,000
对

3775
02:18:14,000 --> 02:18:17,000
我的印象里面或者说我的感触里面是

3776
02:18:17,000 --> 02:18:20,000
有些语言会刻意把两者分得非常清楚

3777
02:18:20,000 --> 02:18:24,000
大部分语言里面都是有分别的

3778
02:18:24,000 --> 02:18:25,000
对

3779
02:18:25,000 --> 02:18:30,000
当然说刻意可能也不是特别的准确

3780
02:18:30,000 --> 02:18:33,000
只能说有些语言在设计的时候

3781
02:18:33,000 --> 02:18:39,000
它就考虑到了我本身必须和计算机所原生支持的一些

3782
02:18:39,000 --> 02:18:42,000
最纯粹最基础数据结构联系起来

3783
02:18:42,000 --> 02:18:49,000
比如说我至少要支持什么刚才说到的短整长整

3784
02:18:49,000 --> 02:18:50,000
幅点

3785
02:18:50,000 --> 02:18:53,000
而且幅点可能还有西分为 32 位和 64 位的

3786
02:18:53,000 --> 02:18:54,000
对

3787
02:18:54,000 --> 02:19:02,000
而与此同时我还要在这些所谓的基础类型的基础之上加一些附加类型

3788
02:19:02,000 --> 02:19:08,000
而这些附加类型一般来说是会通过语言的一个库来实现的

3789
02:19:08,000 --> 02:19:11,000
或者语言所自带的那些

3790
02:19:14,000 --> 02:19:17,000
Standard Library 里面所提供的一些

3791
02:19:17,000 --> 02:19:19,000
尤其是容器类

3792
02:19:19,000 --> 02:19:21,000
以这种方式来体现

3793
02:19:21,000 --> 02:19:24,000
然后使用者

3794
02:19:24,000 --> 02:19:25,000
只用语言的用户

3795
02:19:25,000 --> 02:19:29,000
所能做的也就是利用其内建的基础类型

3796
02:19:29,000 --> 02:19:34,000
以及这些可能在库里面已经实现好的类型

3797
02:19:34,000 --> 02:19:37,000
来拼出一个自己所需要的类型来

3798
02:19:38,000 --> 02:19:42,000
可以说绝大多数现在的主流语言都是这样

3799
02:19:42,000 --> 02:19:50,000
然后加完它就分这个所谓的 Primitive Type 和 Boxed Type

3800
02:19:50,000 --> 02:19:55,000
然后它的 Primitive Type 其实是你用户没办法自己去实现或者修改的

3801
02:19:55,000 --> 02:19:56,000
也不能继承

3802
02:19:56,000 --> 02:19:57,000
也不能做任何事情

3803
02:19:57,000 --> 02:19:58,000
你就只能用它

3804
02:19:59,000 --> 02:20:04,000
但是比这样限制

3805
02:20:04,000 --> 02:20:07,000
这样严格的限制更好一点的

3806
02:20:07,000 --> 02:20:14,000
就是比如说 Ruby 或者是 Objective-C

3807
02:20:14,000 --> 02:20:18,000
他们就支持说用户可以自己去定义这样一种类型

3808
02:20:18,000 --> 02:20:23,000
或者用户自己可以去扩展系统所提供的那些类型

3809
02:20:23,000 --> 02:20:26,000
当然 Object-C 可能不是一个非常好的例子

3810
02:20:26,000 --> 02:20:31,000
因为 Objective-C 所支持你做的

3811
02:20:31,000 --> 02:20:36,000
实际上是给系统所充现出来的一个 Boxed Type

3812
02:20:36,000 --> 02:20:38,000
加一些扩展

3813
02:20:38,000 --> 02:20:41,000
然后把它当成原生类型的扩展来用

3814
02:20:41,000 --> 02:20:43,000
但是至少在 Ruby 里面

3815
02:20:43,000 --> 02:20:46,000
因为 Ruby 有句话就是它提倡说一切皆对象

3816
02:20:46,000 --> 02:20:48,000
那整数也是对象

3817
02:20:48,000 --> 02:20:52,000
所以你可以在比如说一个数字 3 后面加一个点

3818
02:20:52,000 --> 02:20:54,000
然后写一个方法之类的

3819
02:20:55,000 --> 02:21:01,000
而且它还可以允许你之后再添加新的方法

3820
02:21:01,000 --> 02:21:03,000
然后你这个数字 3 点什么什么方法

3821
02:21:03,000 --> 02:21:05,000
就可以是你新添加的那个对吧

3822
02:21:08,000 --> 02:21:12,000
所以这也是一个非常有意思的事情

3823
02:21:12,000 --> 02:21:15,000
就是如果你从来没有驶入过这样的远的话

3824
02:21:15,000 --> 02:21:17,000
你可能会完全不会去想到

3825
02:21:17,000 --> 02:21:19,000
我还可以做这样的事情

3826
02:21:20,000 --> 02:21:26,000
也许在你看来 Premative 的类型

3827
02:21:26,000 --> 02:21:29,000
和你自己写的数学结构之间

3828
02:21:29,000 --> 02:21:31,000
是完全不同的两样东西

3829
02:21:31,000 --> 02:21:33,000
前者是砖瓦

3830
02:21:33,000 --> 02:21:35,000
后者则是你盖出来的建筑

3831
02:21:35,000 --> 02:21:36,000
但是在另外一些语言里面

3832
02:21:36,000 --> 02:21:39,000
你可能会发现两者其实根本没有那么大差别

3833
02:21:39,000 --> 02:21:42,000
你可以自由自在的去修改既有的砖瓦

3834
02:21:42,000 --> 02:21:46,000
把它们变成我也不知道可以变形的砖瓦

3835
02:21:46,000 --> 02:21:50,000
然后用它来拼出更加特别的建筑

3836
02:21:50,000 --> 02:21:52,000
Swift 算是这种吧

3837
02:21:52,000 --> 02:21:55,000
就 Swift 它里面连这个所谓的 Premative Type

3838
02:21:55,000 --> 02:22:02,000
都是自己可以就同一套酷里面实现的

3839
02:22:02,000 --> 02:22:03,000
就是说其实应该是可以改的

3840
02:22:03,000 --> 02:22:05,000
这五处理解没错的话

3841
02:22:05,000 --> 02:22:07,000
对是这样的

3842
02:22:07,000 --> 02:22:10,000
但是它可能还不是像比如说 List 一样

3843
02:22:10,000 --> 02:22:13,000
那么离经翻到那么逆天的

3844
02:22:13,000 --> 02:22:14,000
所有的部分都可以修改

3845
02:22:14,000 --> 02:22:17,000
但是基本上是没错

3846
02:22:17,000 --> 02:22:18,000
OK

3847
02:22:18,000 --> 02:22:18,000
对

3848
02:22:18,000 --> 02:22:21,000
当然然后就讲到 List

3849
02:22:21,000 --> 02:22:25,000
List 里面可能根本就不存在什么系统定义的

3850
02:22:25,000 --> 02:22:28,000
原始类型的东西

3851
02:22:28,000 --> 02:22:30,000
这个说法可能也不对

3852
02:22:30,000 --> 02:22:32,000
但是估计这么认为

3853
02:22:32,000 --> 02:22:38,000
就是 List 可能在以 List 最基础简单的形式来看

3854
02:22:38,000 --> 02:22:41,000
类型根本就是一种你需要自己去造出来的东西

3855
02:22:41,000 --> 02:22:43,000
对

3856
02:22:43,000 --> 02:22:48,000
所以实际上如果我们在写程序的时候

3857
02:22:48,000 --> 02:22:50,000
能够意识到类型系统

3858
02:22:50,000 --> 02:22:54,000
或者说编程语言所内置的类型系统

3859
02:22:54,000 --> 02:22:58,000
和我写出来的数据结构

3860
02:22:58,000 --> 02:23:03,000
在概念上实际上是没有太大差别的时候

3861
02:23:03,000 --> 02:23:08,000
或者说我写出来的数据结构实际上是系统的

3862
02:23:08,000 --> 02:23:14,000
实际上是编程语言的类型系统的一种复杂化的底线

3863
02:23:14,000 --> 02:23:19,000
那可能有很多问题就比较容易想明白

3864
02:23:19,000 --> 02:23:20,000
好吧

3865
02:23:20,000 --> 02:23:23,000
所以今天我们讲的一些有的没的

3866
02:23:23,000 --> 02:23:25,000
效果也不是非常的好

3867
02:23:25,000 --> 02:23:29,000
就至少我觉得还是没有讲明白

3868
02:23:29,000 --> 02:23:32,000
当然也是因为一方面准备比较仓促

3869
02:23:32,000 --> 02:23:36,000
另外一方面是这个话题太大

3870
02:23:36,000 --> 02:23:41,000
下次应该选小讲一个部分一个部分的讲

3871
02:23:41,000 --> 02:23:44,000
比如说其实动态和静态之间

3872
02:23:44,000 --> 02:23:47,000
我们就可以说很多事情

3873
02:23:47,000 --> 02:23:51,000
但是好像扯不到两个小时这么长

3874
02:23:51,000 --> 02:23:53,000
我也不知道

3875
02:23:53,000 --> 02:23:56,000
你有没有觉得现在两个小时好像已经成了某种

3876
02:23:56,000 --> 02:23:58,000
某种仪式化的东西

3877
02:23:58,000 --> 02:24:03,000
就是包括已经也会有读者会也会有听众会说

3878
02:24:03,000 --> 02:24:06,000
这一期的节目居然没有到两个小时

3879
02:24:06,000 --> 02:24:08,000
听得爽

3880
02:24:08,000 --> 02:24:12,000
好像没有过这个卡我们就是在骗钱

3881
02:24:12,000 --> 02:24:16,000
毕竟我们两周才出一次

3882
02:24:16,000 --> 02:24:21,000
他们还是希望每一期有足够的分量

3883
02:24:21,000 --> 02:24:22,000
对说得没错

3884
02:24:22,000 --> 02:24:25,000
所以当时这一期也是特殊情况

3885
02:24:25,000 --> 02:24:27,000
我要在国内待两周

3886
02:24:27,000 --> 02:24:31,000
我不是很想在国内录节目

3887
02:24:31,000 --> 02:24:33,000
因为网络不太好

3888
02:24:33,000 --> 02:24:35,000
可能录起来没有什么

3889
02:24:35,000 --> 02:24:39,000
但是上传的时候要传装保鲜

3890
02:24:39,000 --> 02:24:41,000
我要回国我还没有搞那一天

3891
02:24:41,000 --> 02:24:43,000
我心里好虚

3892
02:24:43,000 --> 02:24:47,000
没关系现在国内的网盘也挺方便的

3893
02:24:47,000 --> 02:24:51,000
但是没有账号没有什么都没有

3894
02:24:51,000 --> 02:24:57,000
我没有支付宝没有淘宝账户

3895
02:24:57,000 --> 02:25:02,000
淘宝账户好像曾经有过原来是已经 10 年没有用过了

3896
02:25:03,000 --> 02:25:05,000
就是一种我也不知道

3897
02:25:05,000 --> 02:25:11,000
就是一种要失去自我认同那种飞机感

3898
02:25:11,000 --> 02:25:14,000
我反正想起来就是

3899
02:25:14,000 --> 02:25:20,000
德国前两天法轮功夫地方法院宣布

3900
02:25:20,000 --> 02:25:22,000
Uber 在全德是违法的

3901
02:25:22,000 --> 02:25:25,000
那你们就说没法做了

3902
02:25:25,000 --> 02:25:28,000
我从来没有做过 Uber 说实话

3903
02:25:28,000 --> 02:25:30,000
但是我觉得这是一个

3904
02:25:30,000 --> 02:25:31,000
这是一件很有意义的事情

3905
02:25:31,000 --> 02:25:32,000
你开一个 Uber 的 App

3906
02:25:32,000 --> 02:25:34,000
你看你周围有那种 Uber 的车吗

3907
02:25:36,000 --> 02:25:39,000
我没有下载过 Uber 开了过

3908
02:25:39,000 --> 02:25:40,000
OK

3909
02:25:40,000 --> 02:25:42,000
等下可以试试

3910
02:25:42,000 --> 02:25:44,000
但是也许回国可以试试 Uber

3911
02:25:44,000 --> 02:25:47,000
不过你什么德国公交那么发达

3912
02:25:47,000 --> 02:25:49,000
打 Uber 的需求还是挺少的

3913
02:25:49,000 --> 02:25:50,000
我觉得也不一定

3914
02:25:50,000 --> 02:25:54,000
就比如说女朋友车坏了

3915
02:25:54,000 --> 02:25:58,000
然后也是你可以找一个 Uber 去接她

3916
02:25:59,000 --> 02:26:00,000
之类的

3917
02:26:00,000 --> 02:26:01,000
这样的 UseCat 还是有

3918
02:26:01,000 --> 02:26:02,000
但是我也不知道

3919
02:26:02,000 --> 02:26:05,000
就德国人在有些事情上非常让我无法理解

3920
02:26:05,000 --> 02:26:07,000
比如说在德国的 Google Map

3921
02:26:07,000 --> 02:26:10,000
你可以去找 Google 投诉说

3922
02:26:10,000 --> 02:26:12,000
我不要我的房子出现在 Google Maps 上

3923
02:26:12,000 --> 02:26:18,000
然后 Google 就会在 Google Map 街景上

3924
02:26:18,000 --> 02:26:19,000
把你的房子抹掉

3925
02:26:19,000 --> 02:26:21,000
不是这样把你都抹掉

3926
02:26:21,000 --> 02:26:24,000
而是把你房子正立面

3927
02:26:24,000 --> 02:26:27,000
用一个虚化的图盖住

3928
02:26:27,000 --> 02:26:28,000
这是非常二的一件事情

3929
02:26:28,000 --> 02:26:31,000
但是 Somehow someway 这样的法律在德国就可以通过

3930
02:26:31,000 --> 02:26:35,000
然后德国人还非常自豪

3931
02:26:37,000 --> 02:26:40,000
所以现在是从协调世界时

3932
02:26:40,000 --> 02:26:43,000
1970 年 1 月 1 日零时零分零秒起

3933
02:26:43,000 --> 02:26:47,000
到现在已经过去了 1427409864 秒

3934
02:26:47,000 --> 02:26:52,000
您正在收听的是 IPM Podcast 网络旗下的 IT 技术节目

3935
02:26:52,000 --> 02:26:55,000
内核恐慌

3936
02:26:55,000 --> 02:26:56,000
想说 IT 功论

3937
02:26:56,000 --> 02:26:59,000
对我刚才想说 IT 功论

3938
02:26:59,000 --> 02:27:01,000
我说的太爱你们节目了

3939
02:27:01,000 --> 02:27:06,000
内核恐慌的网址是 ipm.li.co.uk

3940
02:27:07,000 --> 02:27:09,000
欢迎你为我们捐款

3941
02:27:09,000 --> 02:27:13,000
我们捐款的意义是 co.fm.fm.gov

3942
02:27:13,000 --> 02:27:17,000
也欢迎你收听 IPM 旗下的其他六档 Podcast

3943
02:27:17,000 --> 02:27:21,000
包括技术主题节目 IT 功论

3944
02:27:21,000 --> 02:27:23,000
医疗主题节目太一来了

3945
02:27:23,000 --> 02:27:25,000
美食主题节目未知道

3946
02:27:25,000 --> 02:27:28,000
艺术主题节目流行东西

3947
02:27:28,000 --> 02:27:30,000
无主题节目无词源

3948
02:27:30,000 --> 02:27:33,000
以及新进上线的故事主题节目 Hi Sorry

3949
02:27:35,000 --> 02:27:36,000
OK 就这样吧

