1
00:00:00,000 --> 00:00:03,000
欢迎收听 ipnpodcast 的网络旗下的

2
00:00:03,000 --> 00:00:05,000
IT 技术主题娱乐节目内核恐慌

3
00:00:05,000 --> 00:00:07,000
我们号称 hardcore 但是也没有干货

4
00:00:07,000 --> 00:00:10,000
想听人听不想听人都别听

5
00:00:10,000 --> 00:00:13,000
本节目的网址是 kernelpanic.fm

6
00:00:13,000 --> 00:00:15,000
我们推荐大家使用 podcast

7
00:00:15,000 --> 00:00:16,000
可户端订阅节目

8
00:00:16,000 --> 00:00:20,000
相请请访问 ipn.ly.faq

9
00:00:20,000 --> 00:00:22,000
欢迎你为本节目捐款

10
00:00:22,000 --> 00:00:27,000
捐款地址是 kernelpanic.fm.donate

11
00:00:27,000 --> 00:00:28,000
捐款金项随意

12
00:00:28,000 --> 00:00:30,000
只要是 8 的正整数倍就可以

13
00:00:30,000 --> 00:00:32,000
捐款不会为你带来什么

14
00:00:32,000 --> 00:00:34,000
不捐也不会让你失去什么

15
00:00:34,000 --> 00:00:35,000
我们口号是

16
00:00:35,000 --> 00:00:37,000
programming is like sex

17
00:00:37,000 --> 00:00:38,000
one mistake

18
00:00:38,000 --> 00:00:39,000
and you have to support it

19
00:00:39,000 --> 00:00:42,000
for the rest of your life

20
00:00:42,000 --> 00:00:43,000
这个叫什么

21
00:00:43,000 --> 00:00:47,000
accidental baby 吗

22
00:00:47,000 --> 00:00:51,000
就是 execution

23
00:00:51,000 --> 00:00:55,000
应该叫保护级别机器

24
00:00:55,000 --> 00:00:56,000
保护级别限制很多

25
00:00:58,000 --> 00:01:01,000
但是不会怀孕

26
00:01:01,000 --> 00:01:03,000
不会触及到 kernel

27
00:01:03,000 --> 00:01:04,000
好吧

28
00:01:06,000 --> 00:01:08,000
大家还是小心心

29
00:01:08,000 --> 00:01:10,000
最近好像国内开放什么二胎了

30
00:01:11,000 --> 00:01:12,000
是

31
00:01:12,000 --> 00:01:14,000
与时俱进我们要讨论一下这个

32
00:01:14,000 --> 00:01:16,000
算了还是太阴来了

33
00:01:16,000 --> 00:01:19,000
我觉得我们好像也扯不出什么独子

34
00:01:20,000 --> 00:01:23,000
其实二胎之前就是对于双方

35
00:01:23,000 --> 00:01:26,000
都是独生子女的家长开放的吧

36
00:01:27,000 --> 00:01:30,000
以前是开放叫什么单独二胎吗

37
00:01:30,000 --> 00:01:31,000
就是

38
00:01:31,000 --> 00:01:33,000
什么叫单独二胎这个词怎么解释来的

39
00:01:33,000 --> 00:01:35,000
反正就是如果两方父母都是

40
00:01:35,000 --> 00:01:37,000
独生子女的话就可以生两个

41
00:01:37,000 --> 00:01:38,000
然后现在是

42
00:01:38,000 --> 00:01:40,000
就是没有任何限制

43
00:01:40,000 --> 00:01:41,000
想生两个就生

44
00:01:41,000 --> 00:01:43,000
就 up to two

45
00:01:43,000 --> 00:01:43,000
OK

46
00:01:45,000 --> 00:01:47,000
但也有人在扯这个事情

47
00:01:47,000 --> 00:01:49,000
就说为什么还有 up to two 这个限制对吧

48
00:01:49,000 --> 00:01:51,000
对其实现在是人们的生

49
00:01:51,000 --> 00:01:54,000
至少城市人口的生育欲望已经非常低了

50
00:01:55,000 --> 00:01:56,000
嗯

51
00:01:56,000 --> 00:01:58,000
是吧我也觉得是这样

52
00:01:58,000 --> 00:01:59,000
起码我的生育欲望是很低的

53
00:02:02,000 --> 00:02:05,000
好吧但我相信也许二线城市

54
00:02:05,000 --> 00:02:07,000
还是会有一个增长

55
00:02:07,000 --> 00:02:08,000
农村吧主要还是可能

56
00:02:08,000 --> 00:02:10,000
可是农村现在

57
00:02:10,000 --> 00:02:11,000
农村大量

58
00:02:11,000 --> 00:02:14,000
前两天经济学人上还

59
00:02:14,000 --> 00:02:16,000
封面故事就是讲中国的

60
00:02:17,000 --> 00:02:19,000
农村出现大量留守儿童

61
00:02:19,000 --> 00:02:20,000
然后

62
00:02:21,000 --> 00:02:22,000
农村已经没有年轻人了

63
00:02:22,000 --> 00:02:26,000
所以其实农村的生育率也是相当低的

64
00:02:26,000 --> 00:02:27,000
这个还有点意思

65
00:02:27,000 --> 00:02:28,000
我一直不知道怎么算

66
00:02:28,000 --> 00:02:30,000
比如说两个一对儿农民工

67
00:02:30,000 --> 00:02:34,000
去从农村去到一线城市打工

68
00:02:34,000 --> 00:02:35,000
然后他在那生的两个小孩

69
00:02:35,000 --> 00:02:37,000
算哪边的出生呢

70
00:02:37,000 --> 00:02:37,000
他上不了户口

71
00:02:38,000 --> 00:02:41,000
所以我说他算哪里的出生

72
00:02:41,000 --> 00:02:42,000
算城市的吗

73
00:02:42,000 --> 00:02:44,000
应该是算户籍所在地的出生

74
00:02:45,000 --> 00:02:46,000
就永远是统计

75
00:02:46,000 --> 00:02:47,000
如果你要拿统计资料的话

76
00:02:47,000 --> 00:02:49,000
永远是在户籍所在地

77
00:02:49,000 --> 00:02:51,000
那他们要是想给

78
00:02:51,000 --> 00:02:55,000
如果要是想给孩子上户口的话

79
00:02:55,000 --> 00:02:58,000
只能回到户籍所在地上

80
00:02:58,000 --> 00:02:59,000
如果不上的话

81
00:02:59,000 --> 00:03:00,000
就是黑空你统计不到

82
00:03:00,000 --> 00:03:00,000
对吧

83
00:03:00,000 --> 00:03:01,000
但如果上了的话

84
00:03:01,000 --> 00:03:02,000
那只能是在户籍所在地

85
00:03:02,000 --> 00:03:04,000
所以你统计的是户籍所在地的出生率

86
00:03:08,000 --> 00:03:09,000
System failure

87
00:03:10,000 --> 00:03:11,000
sucks

88
00:03:12,000 --> 00:03:12,000
好吧

89
00:03:12,000 --> 00:03:14,000
我们今天这一期是 27 期

90
00:03:14,000 --> 00:03:17,000
然后做一下听众反馈

91
00:03:17,000 --> 00:03:19,000
但听众反馈是 24 期的

92
00:03:19,000 --> 00:03:21,000
因为上了两期我们都请到了嘉宾

93
00:03:21,000 --> 00:03:21,000
对吧

94
00:03:22,000 --> 00:03:22,000
对

95
00:03:22,000 --> 00:03:24,000
就采访嘉宾

96
00:03:24,000 --> 00:03:26,000
然后没有对我们两个的吐槽

97
00:03:27,000 --> 00:03:31,000
为什么上一期 Limit 没有反馈

98
00:03:31,000 --> 00:03:32,000
下载量很高

99
00:03:34,000 --> 00:03:36,000
他们都去 V 2 EX 反馈

100
00:03:38,000 --> 00:03:38,000
对

101
00:03:38,000 --> 00:03:41,000
这个非常合乎其理

102
00:03:41,000 --> 00:03:44,000
因为我忘了说

103
00:03:44,000 --> 00:03:45,000
就是说我们每期 Cronoplinic

104
00:03:45,000 --> 00:03:49,000
都会在 V 2 EX 的 Podcast 节点更新

105
00:03:50,000 --> 00:03:53,000
下一个会有点击或者是去评论

106
00:03:53,000 --> 00:03:54,000
然后看了一下数字

107
00:03:54,000 --> 00:03:57,000
就是采访 Limit 那期

108
00:03:58,000 --> 00:04:01,000
在那里有大概 4000 多次点击

109
00:04:01,000 --> 00:04:03,000
然后我们平时大概是在

110
00:04:04,000 --> 00:04:04,000
几百次吧

111
00:04:04,000 --> 00:04:05,000
点击

112
00:04:05,000 --> 00:04:07,000
所以是有数量级的区别

113
00:04:07,000 --> 00:04:11,000
然后当然相应的评论也是比较多的

114
00:04:11,000 --> 00:04:12,000
一共有

115
00:04:12,000 --> 00:04:14,000
我现在看到有 55 条评论

116
00:04:14,000 --> 00:04:16,000
应该是对

117
00:04:16,000 --> 00:04:19,000
还是比较活跃的一个讨论组在下面

118
00:04:20,000 --> 00:04:21,000
我看成了

119
00:04:21,000 --> 00:04:22,000
好多反馈

120
00:04:22,000 --> 00:04:23,000
其实都值得念

121
00:04:23,000 --> 00:04:25,000
网站实在有点慢

122
00:04:25,000 --> 00:04:26,000
Limit 的经济学很厉害

123
00:04:26,000 --> 00:04:28,000
Rail 请走向我的铜币

124
00:04:28,000 --> 00:04:30,000
所以 Rail 你是靠这个贴字收很多铜币

125
00:04:31,000 --> 00:04:31,000
对

126
00:04:31,000 --> 00:04:33,000
我的铜币已经翻翻了

127
00:04:33,000 --> 00:04:35,000
因为我的银币已经翻翻了

128
00:04:35,000 --> 00:04:36,000
我之前是 20 多个银币

129
00:04:36,000 --> 00:04:38,000
我现在已经 50 多个银币了

130
00:04:39,000 --> 00:04:40,000
致富新途径

131
00:04:41,000 --> 00:04:43,000
对于 L 大经历比较熟悉的朋友

132
00:04:43,000 --> 00:04:47,000
可以从 1 小时 32 分左右开始点

133
00:04:47,000 --> 00:04:49,000
前面 1 万小时就这样没跳过

134
00:04:49,000 --> 00:04:52,000
所以前面 1 个半小时我们在扯什么带

135
00:04:52,000 --> 00:04:54,000
就下面有一个人说听完了

136
00:04:54,000 --> 00:04:56,000
为什么我感觉几乎 70%以上聊天内容

137
00:04:56,000 --> 00:04:58,000
都曾经在 Limit 的博客里面看过呢

138
00:04:58,000 --> 00:05:01,000
比如 V 2 X 从顾客平等迁移

139
00:05:01,000 --> 00:05:02,000
Limit 的三个问题

140
00:05:02,000 --> 00:05:06,000
以及 KGG 六间房和后来去家人工作

141
00:05:06,000 --> 00:05:07,000
这不是很正常吗

142
00:05:07,000 --> 00:05:10,000
我觉得这个还是有原因的

143
00:05:10,000 --> 00:05:12,000
你之前只是看过对吧

144
00:05:12,000 --> 00:05:14,000
这次你听过了还是有点不一样

145
00:05:14,000 --> 00:05:15,000
没错

146
00:05:15,000 --> 00:05:19,000
而且我们节目的意图不就是让没有看过的人

147
00:05:19,000 --> 00:05:23,000
可以要能听到 70%的内容

148
00:05:23,000 --> 00:05:26,000
就知道 Limit 曾经在 blog 里面写过什么的

149
00:05:28,000 --> 00:05:31,000
29.6 有个吐槽挺好的

150
00:05:32,000 --> 00:05:34,000
IPN 买过最不值得的一名

151
00:05:34,000 --> 00:05:36,000
大概就是 Colonelpanic.fm 了

152
00:05:36,000 --> 00:05:40,000
因为吴涛被 IPN.li.colonelpanic

153
00:05:40,000 --> 00:05:41,000
被习惯了

154
00:05:41,000 --> 00:05:43,000
这次我们已经改过来这个稿子了

155
00:05:43,000 --> 00:05:44,000
耶

156
00:05:44,000 --> 00:05:47,000
Colonelpanic.fm 还是蛮贵的

157
00:05:47,000 --> 00:05:48,000
好贵

158
00:05:48,000 --> 00:05:51,000
一年上 70 兜的续费的钱

159
00:05:51,000 --> 00:05:52,000
对

160
00:05:52,000 --> 00:05:56,000
所以我们捐款如果有点用处的话就用到这

161
00:05:56,000 --> 00:05:58,000
但可能连这个都不够用

162
00:05:59,000 --> 00:06:02,000
你干嘛这么悲观

163
00:06:02,000 --> 00:06:02,000
其实是够的

164
00:06:03,000 --> 00:06:04,000
Good to know

165
00:06:04,000 --> 00:06:05,000
More than that

166
00:06:05,000 --> 00:06:07,000
我还有人非常怀旧的

167
00:06:07,000 --> 00:06:15,000
Limit 把当初 Bad Company 2 的 APP 的截图发上来

168
00:06:16,000 --> 00:06:19,000
我们把这个连接贴到 Show Notes 里

169
00:06:19,000 --> 00:06:21,000
大家有兴趣可以去看一下

170
00:06:21,000 --> 00:06:22,000
OK

171
00:06:23,000 --> 00:06:23,000
好吧

172
00:06:24,000 --> 00:06:26,000
正儿八经的听众反馈

173
00:06:26,000 --> 00:06:31,000
有一条是来自陈正的朋友

174
00:06:31,000 --> 00:06:33,000
他里面提到了几个问题

175
00:06:33,000 --> 00:06:34,000
这个就是说

176
00:06:34,000 --> 00:06:36,000
这当然是对我们 24 期节目

177
00:06:36,000 --> 00:06:37,000
也是 27 吧

178
00:06:37,000 --> 00:06:39,000
有个换专业的事情

179
00:06:39,000 --> 00:06:40,000
说到

180
00:06:40,000 --> 00:06:41,000
对

181
00:06:42,000 --> 00:06:45,000
他说我和反馈的听众

182
00:06:45,000 --> 00:06:47,000
有很有相似的情况和想法

183
00:06:47,000 --> 00:06:49,000
当然也做出一些让人惊讶的事情

184
00:06:49,000 --> 00:06:52,000
我本科和研究生都是工程专业

185
00:06:52,000 --> 00:06:54,000
但是一直心碎计算机

186
00:06:54,000 --> 00:06:58,000
所以尝试考博试到这个 Computer Science

187
00:06:59,000 --> 00:07:00,000
好像不是很现实

188
00:07:00,000 --> 00:07:03,000
但目前结果还未知

189
00:07:03,000 --> 00:07:05,000
但是应该希望秒

190
00:07:05,000 --> 00:07:08,000
所以未来大概只能继续将计算机当做兴趣爱好

191
00:07:08,000 --> 00:07:10,000
做个学术的爱好者

192
00:07:10,000 --> 00:07:13,000
去工程专业考去计算机

193
00:07:14,000 --> 00:07:14,000
我觉得还好

194
00:07:15,000 --> 00:07:16,000
对

195
00:07:16,000 --> 00:07:18,000
我觉得要比 The other way around 容易

196
00:07:19,000 --> 00:07:20,000
比什么

197
00:07:20,000 --> 00:07:22,000
就是比反过来要容易点

198
00:07:22,000 --> 00:07:22,000
对

199
00:07:22,000 --> 00:07:25,000
因为其实现在我觉得很缺这种

200
00:07:25,000 --> 00:07:28,000
具备足够的计算机的知识

201
00:07:28,000 --> 00:07:31,000
然后同时又精通某一个专业

202
00:07:31,000 --> 00:07:34,000
因为这样你才可以去帮助专业的人

203
00:07:34,000 --> 00:07:36,000
去改善他们的工作状况

204
00:07:36,000 --> 00:07:38,000
一些比如说对应的软件

205
00:07:38,000 --> 00:07:41,000
或者一些工具这样的东西出现

206
00:07:41,000 --> 00:07:43,000
所以其实我觉得这个还是很好的一件事情

207
00:07:43,000 --> 00:07:43,000
没错

208
00:07:43,000 --> 00:07:46,000
我觉得计算机就好像英语一样

209
00:07:46,000 --> 00:07:47,000
有专业英语

210
00:07:47,000 --> 00:07:47,000
对吧

211
00:07:47,000 --> 00:07:48,000
也有专业计算机

212
00:07:48,000 --> 00:07:50,000
你专门去学计算机

213
00:07:50,000 --> 00:07:55,000
反而不太可能写出某一个 Domain 的 Application

214
00:07:55,000 --> 00:07:57,000
只有 Domain 的人来写才比较靠谱

215
00:07:58,000 --> 00:07:59,000
没错

216
00:08:00,000 --> 00:08:01,000
接着念他的反馈

217
00:08:01,000 --> 00:08:05,000
就说节目最后提到了微积分学习的事情

218
00:08:05,000 --> 00:08:06,000
因为我是工程专业的

219
00:08:06,000 --> 00:08:09,000
大概可以略微说一些自己的看法

220
00:08:09,000 --> 00:08:13,000
工程专业或者所有和力学相关的专业

221
00:08:13,000 --> 00:08:14,000
应该都会发现

222
00:08:14,000 --> 00:08:16,000
微积分的知识是必不可少的

223
00:08:16,000 --> 00:08:18,000
更广义的揣测

224
00:08:18,000 --> 00:08:21,000
所有和连续物理世界相关的领域

225
00:08:21,000 --> 00:08:22,000
都离不开微积分

226
00:08:22,000 --> 00:08:25,000
其实统计学如果没记错的话

227
00:08:25,000 --> 00:08:26,000
很多概率模型都要用到

228
00:08:26,000 --> 00:08:28,000
并不简单的微积分运算

229
00:08:28,000 --> 00:08:30,000
微分运算和积分运算

230
00:08:30,000 --> 00:08:32,000
作为一种和加减乘除并列的

231
00:08:32,000 --> 00:08:34,000
更高级的运算手段

232
00:08:34,000 --> 00:08:36,000
对于大部分领域的后续研究

233
00:08:36,000 --> 00:08:37,000
都是基本的工具

234
00:08:38,000 --> 00:08:39,000
所以本科学习中

235
00:08:39,000 --> 00:08:40,000
较大比重的微积分

236
00:08:40,000 --> 00:08:42,000
个人以为并没有问题

237
00:08:42,000 --> 00:08:44,000
至于大多数人觉得在日常生活中

238
00:08:44,000 --> 00:08:45,000
没有什么作用

239
00:08:45,000 --> 00:08:47,000
这个没必要提

240
00:08:47,000 --> 00:08:48,000
为什么没必要提

241
00:08:49,000 --> 00:08:51,000
他意思是我们在那一期里面

242
00:08:51,000 --> 00:08:53,000
说大多数人觉得日常生活中

243
00:08:53,000 --> 00:08:54,000
没什么作用这件事情

244
00:08:54,000 --> 00:08:55,000
其实没有什么必要说

245
00:08:55,000 --> 00:08:58,000
因为大多数人的感觉又有什么用

246
00:08:58,000 --> 00:09:00,000
又有什么意义

247
00:09:02,000 --> 00:09:03,000
二位主播有同感的原因

248
00:09:03,000 --> 00:09:05,000
大概是计算机科学中

249
00:09:05,000 --> 00:09:07,000
完全没有微积分应用

250
00:09:07,000 --> 00:09:09,000
毕竟计算机是离散的世界

251
00:09:09,000 --> 00:09:13,000
是数学中非常深入狭窄的一个分支

252
00:09:13,000 --> 00:09:14,000
当然我也完全同意

253
00:09:14,000 --> 00:09:17,000
概率论和统计的学习的确不太够

254
00:09:17,000 --> 00:09:19,000
虽然当年是被略了四期后来

255
00:09:21,000 --> 00:09:22,000
这个是怎么说呢

256
00:09:22,000 --> 00:09:22,000
我觉得是这样子

257
00:09:22,000 --> 00:09:23,000
就是说

258
00:09:24,000 --> 00:09:25,000
我的观点是说

259
00:09:25,000 --> 00:09:29,000
不是说微积分不应该重点学

260
00:09:29,000 --> 00:09:32,000
而是说概率统计学的还不够

261
00:09:32,000 --> 00:09:33,000
嗯

262
00:09:33,000 --> 00:09:34,000
就是是个相对的概念对吧

263
00:09:34,000 --> 00:09:36,000
就是说如果说你一个微积

264
00:09:36,000 --> 00:09:38,000
然后当然他说这个日常生活中没有什么作用

265
00:09:38,000 --> 00:09:39,000
所以怎么这样

266
00:09:39,000 --> 00:09:40,000
这个我觉得可能是对这个

267
00:09:41,000 --> 00:09:42,000
这个什么

268
00:09:42,000 --> 00:09:45,000
通识教育的一个认知吧

269
00:09:45,000 --> 00:09:45,000
就是说

270
00:09:46,000 --> 00:09:48,000
从这个实用主义的观点出发

271
00:09:48,000 --> 00:09:49,000
就是说

272
00:09:49,000 --> 00:09:53,000
如果一个东西在现实生活中是更加有广泛应用场景的

273
00:09:54,000 --> 00:09:56,000
而另外一个东西在现实生活中

274
00:09:56,000 --> 00:09:58,000
可能很多人用不太到

275
00:09:58,000 --> 00:10:00,000
那么作为一个通识教育里面

276
00:10:00,000 --> 00:10:03,000
你去强调那个平时更加用不到的知识

277
00:10:03,000 --> 00:10:06,000
是不是有点奇怪

278
00:10:06,000 --> 00:10:07,000
或者说至少

279
00:10:07,000 --> 00:10:11,000
应该把那个概率统计放到和微积分同等重要的地位

280
00:10:11,000 --> 00:10:15,000
去讲教授和这个去教学呢

281
00:10:15,000 --> 00:10:15,000
对吧

282
00:10:16,000 --> 00:10:16,000
对

283
00:10:16,000 --> 00:10:18,000
我觉得可能对计算机专业来说

284
00:10:18,000 --> 00:10:19,000
这个

285
00:10:19,000 --> 00:10:23,000
微积分学学学第一就可以了

286
00:10:23,000 --> 00:10:28,000
然后那个概率和离散数学应该在比较多一点

287
00:10:28,000 --> 00:10:29,000
对

288
00:10:29,000 --> 00:10:29,000
对

289
00:10:29,000 --> 00:10:31,000
差不多是这个意思吧

290
00:10:31,000 --> 00:10:32,000
当然这个什么

291
00:10:32,000 --> 00:10:33,000
各个专业各个专业

292
00:10:33,000 --> 00:10:36,000
你记得这个

293
00:10:36,000 --> 00:10:37,000
特殊的需求吧

294
00:10:37,000 --> 00:10:38,000
没什么

295
00:10:38,000 --> 00:10:42,000
或者说你是不是说觉得国内那种就是理工科技术教育

296
00:10:42,000 --> 00:10:43,000
一刀切的方法不是很好

297
00:10:44,000 --> 00:10:48,000
还是要针对专业有自己的偏重和擅长

298
00:10:48,000 --> 00:10:49,000
我觉得还是应该考虑一下这种问题

299
00:10:50,000 --> 00:10:50,000
对

300
00:10:51,000 --> 00:10:53,000
教育是个大问题

301
00:10:53,000 --> 00:10:54,000
对

302
00:10:55,000 --> 00:10:58,000
下一条听众反馈是一位叫做 Gary 的听众的来信

303
00:10:59,000 --> 00:11:01,000
他是吐槽我们说那个

304
00:11:01,000 --> 00:11:03,000
说程序员的那个职业选择的

305
00:11:04,000 --> 00:11:06,000
他说这个题目可以聊一天

306
00:11:07,000 --> 00:11:09,000
你们高校的解决了听众反馈后

307
00:11:09,000 --> 00:11:10,000
花了一个小时聊游戏

308
00:11:12,000 --> 00:11:13,000
最后聊了半个小时这个题目

309
00:11:13,000 --> 00:11:15,000
然后说意犹未尽

310
00:11:18,000 --> 00:11:20,000
这个我们之后再找机会聊吧

311
00:11:20,000 --> 00:11:22,000
我觉得还是有很多事情可以讲的

312
00:11:22,000 --> 00:11:22,000
对

313
00:11:23,000 --> 00:11:24,000
毕竟这个是一个

314
00:11:25,000 --> 00:11:27,000
这是一个很水很湿的问题

315
00:11:27,000 --> 00:11:29,000
然后就说还有很多这种

316
00:11:30,000 --> 00:11:31,000
你想象一个场景

317
00:11:31,000 --> 00:11:34,000
两个什么加班过渡

318
00:11:34,000 --> 00:11:37,000
然后两眼不满血色的程序员

319
00:11:37,000 --> 00:11:38,000
对作者

320
00:11:38,000 --> 00:11:41,000
什么相对无言唯有泪千行

321
00:11:41,000 --> 00:11:43,000
在聊各自的心酸史

322
00:11:44,000 --> 00:11:45,000
你老婆睡了吗

323
00:11:46,000 --> 00:11:47,000
我老婆睡了

324
00:11:48,000 --> 00:11:50,000
万管好了吗

325
00:11:50,000 --> 00:11:50,000
对吧

326
00:11:51,000 --> 00:11:53,000
还有你的这个背痛的

327
00:11:53,000 --> 00:11:54,000
挺好的

328
00:11:54,000 --> 00:11:55,000
你的背痛问题解决了没

329
00:11:57,000 --> 00:11:59,000
鼠标手是不是还是依旧是吧

330
00:11:59,000 --> 00:12:03,000
还是一种那么虚寒无暖的关切的感觉

331
00:12:03,000 --> 00:12:03,000
立刻开始说

332
00:12:03,000 --> 00:12:07,000
我为了改善症状买了一个轨迹球

333
00:12:07,000 --> 00:12:08,000
跟另外一个说

334
00:12:08,000 --> 00:12:09,000
不是有那种竖起来的鼠标吗

335
00:12:09,000 --> 00:12:11,000
然后就开始套回应劲

336
00:12:14,000 --> 00:12:17,000
最后又闯到了什么人体工学建防上面去

337
00:12:17,000 --> 00:12:17,000
对吧

338
00:12:17,000 --> 00:12:18,000
对

339
00:12:18,000 --> 00:12:20,000
这就是死宅

340
00:12:23,000 --> 00:12:25,000
下一条听众反馈

341
00:12:25,000 --> 00:12:26,000
伍德老师

342
00:12:26,000 --> 00:12:27,000
瑞欧老师

343
00:12:27,000 --> 00:12:28,000
你才是老师

344
00:12:29,000 --> 00:12:30,000
你们好

345
00:12:30,000 --> 00:12:32,000
首先恭喜节目复播

346
00:12:32,000 --> 00:12:34,000
若有幸被朗读

347
00:12:34,000 --> 00:12:35,000
恳请匿名写信

348
00:12:35,000 --> 00:12:36,000
第一次给你们写信

349
00:12:36,000 --> 00:12:39,000
其实跟本期的内容没有太大的关系

350
00:12:39,000 --> 00:12:43,000
这一次又在节目听到了两个本该如雷冠的名字

351
00:12:43,000 --> 00:12:47,000
Daniel J. Bernstein 和 Kate Thompson

352
00:12:49,000 --> 00:12:53,000
然而身为即将毕业的计算机系学生

353
00:12:53,000 --> 00:12:55,000
一心想要成为成学的我

354
00:12:55,000 --> 00:12:58,000
却如以往一样对这两个名字义无所知

355
00:12:58,000 --> 00:13:00,000
或许是由于课业压力较大

356
00:13:00,000 --> 00:13:03,000
平时在学习密码学和 C 语言的时候

357
00:13:04,000 --> 00:13:05,000
所以他是学性相选的

358
00:13:06,000 --> 00:13:10,000
没有多余的精力去关注其背后的发展和历史

359
00:13:10,000 --> 00:13:11,000
事实上

360
00:13:11,000 --> 00:13:16,000
不知道这些故事也未必会阻碍我们写出优秀的程序

361
00:13:16,000 --> 00:13:19,000
但我总觉得如果想要深入研究某一个领域

362
00:13:19,000 --> 00:13:22,000
一定应该了解到它的方方面面

363
00:13:22,000 --> 00:13:24,000
从而接触到这些故事

364
00:13:24,000 --> 00:13:26,000
他们并非是通往某一领域的钥匙

365
00:13:26,000 --> 00:13:28,000
而是征服这一领域之后

366
00:13:28,000 --> 00:13:31,000
能证明自身能力的勋章

367
00:13:31,000 --> 00:13:33,000
或许是比较糟糕的比喻

368
00:13:33,000 --> 00:13:34,000
很好的一个比喻

369
00:13:35,000 --> 00:13:36,000
是很好的一个比喻

370
00:13:37,000 --> 00:13:41,000
就好像告白不是发起冲锋的号角

371
00:13:41,000 --> 00:13:45,000
而是获得芳心的

372
00:13:46,000 --> 00:13:47,000
叫什么来着

373
00:13:48,000 --> 00:13:49,000
这句话是哪里的

374
00:13:49,000 --> 00:13:50,000
礼炮

375
00:13:50,000 --> 00:13:53,000
对这是知乎上面的还是哪里一句话说

376
00:13:53,000 --> 00:13:55,000
我应该跟一个女孩子告白吗

377
00:13:55,000 --> 00:14:00,000
答案是告白不是拿来告诉对方我要追你的

378
00:14:00,000 --> 00:14:04,000
而是追到了之后宣告战国的

379
00:14:05,000 --> 00:14:05,000
OK

380
00:14:06,000 --> 00:14:07,000
Back to the feedback

381
00:14:10,000 --> 00:14:11,000
这也让我再次体会到

382
00:14:11,000 --> 00:14:13,000
仅凭学校的知识

383
00:14:13,000 --> 00:14:15,000
很难对于某个领域有深入的了解

384
00:14:16,000 --> 00:14:17,000
我相信这并非只是我一个人的情况

385
00:14:17,000 --> 00:14:20,000
身在一所国内扩号大多数情况下

386
00:14:20,000 --> 00:14:22,000
排名 top 5 的学校

387
00:14:23,000 --> 00:14:26,000
很多周围的同学没有 github 的账号

388
00:14:26,000 --> 00:14:28,000
喜欢用 QQ 传代码

389
00:14:28,000 --> 00:14:30,000
写几十行的程序要开 visual studio

390
00:14:31,000 --> 00:14:33,000
翻墙只为上 facebook

391
00:14:34,000 --> 00:14:37,000
很可能也没有听说过那几个入类罐的名字

392
00:14:37,000 --> 00:14:40,000
扩号更不太可能收听贵节目

393
00:14:40,000 --> 00:14:46,000
虽然也有较强的理论基础作为支撑

394
00:14:46,000 --> 00:14:49,000
写出来的程序一般也能够达到要求

395
00:14:49,000 --> 00:14:51,000
但总觉得这样以后会越来越困难

396
00:14:51,000 --> 00:14:55,000
不过很多同学可能会专注于计算机科学的研究

397
00:14:55,000 --> 00:14:58,000
这些问题未必严重

398
00:14:59,000 --> 00:15:01,000
但是对于以后想要专心写代码就会头疼了

399
00:15:02,000 --> 00:15:04,000
之前几年一直没有认识到这些问题

400
00:15:04,000 --> 00:15:08,000
也很少在课外拓展知识积累实际经验

401
00:15:09,000 --> 00:15:13,000
工作以后说不定就会变成 V 2 EX 上面被吐槽的奇葩程序

402
00:15:14,000 --> 00:15:17,000
不知道两位老师有没有这样经历过这样的阶段呢

403
00:15:17,000 --> 00:15:19,000
如果有又是如何突破这一阶段

404
00:15:21,000 --> 00:15:22,000
怎么说呢

405
00:15:23,000 --> 00:15:24,000
Everyone used to be a noob

406
00:15:27,000 --> 00:15:28,000
总会有一个

407
00:15:28,000 --> 00:15:31,000
起码我觉得他起码意识到这个东西是有点意思

408
00:15:31,000 --> 00:15:32,000
可以怎么说

409
00:15:32,000 --> 00:15:35,000
如果说我们这个 IT 行业还有点人文精神的话

410
00:15:35,000 --> 00:15:38,000
可能这就是所谓这种东西

411
00:15:38,000 --> 00:15:39,000
是不是

412
00:15:40,000 --> 00:15:43,000
我觉得其实就是一个 Law 传承的问题

413
00:15:43,000 --> 00:15:45,000
就你 Law 这个东西相遥

414
00:15:45,000 --> 00:15:47,000
就你不去

415
00:15:48,000 --> 00:15:48,000
对 Folk Law

416
00:15:48,000 --> 00:15:51,000
你要不去主动的去接触的话

417
00:15:51,000 --> 00:15:53,000
你是不会知道的

418
00:15:53,000 --> 00:15:56,000
或者说你是需要有人去给你传承的

419
00:15:56,000 --> 00:15:58,000
如果你前人没有告诉你这个东西

420
00:15:58,000 --> 00:16:02,000
或者说你所处的圈子不对

421
00:16:02,000 --> 00:16:03,000
你接触不到这些

422
00:16:03,000 --> 00:16:05,000
我觉得也是挺正常的一件事情

423
00:16:06,000 --> 00:16:08,000
或者就是你根本就是

424
00:16:08,000 --> 00:16:10,000
你在中文圈子里面

425
00:16:10,000 --> 00:16:12,000
就的确是很难接触到这个

426
00:16:13,000 --> 00:16:15,000
Bernstein 或者是 Thompson 这种名

427
00:16:15,000 --> 00:16:17,000
教材里面不会讲吗

428
00:16:18,000 --> 00:16:18,000
对

429
00:16:19,000 --> 00:16:24,000
然后其实可能跟中文技术资料的匮乏

430
00:16:24,000 --> 00:16:25,000
可能也有点关系

431
00:16:25,000 --> 00:16:25,000
就是说

432
00:16:26,000 --> 00:16:28,000
中文的教科书里面基本上就是

433
00:16:28,000 --> 00:16:30,000
续论前言讲一下

434
00:16:30,000 --> 00:16:32,000
然后后面就再也不设计了

435
00:16:32,000 --> 00:16:34,000
纯干货不讲花边的

436
00:16:34,000 --> 00:16:38,000
后面就是把 index 或者是 user manual 给你翻译一遍

437
00:16:38,000 --> 00:16:41,000
就不会有什么外观教材旁边有个小条

438
00:16:41,000 --> 00:16:43,000
告诉你谁你知道吗

439
00:16:43,000 --> 00:16:44,000
这个谁是干嘛的

440
00:16:44,000 --> 00:16:45,000
还做过什么事

441
00:16:45,000 --> 00:16:46,000
Signal

442
00:16:46,000 --> 00:16:49,000
我觉得最开始看英文书的时候

443
00:16:49,000 --> 00:16:50,000
其实很讨厌 Signal

444
00:16:50,000 --> 00:16:51,000
因为 Signal 是一个

445
00:16:52,000 --> 00:16:53,000
是一个

446
00:16:54,000 --> 00:16:56,000
会打断你的阅读 flow 的一个东西

447
00:16:56,000 --> 00:16:58,000
哪儿

448
00:16:58,000 --> 00:16:59,000
我觉得是的

449
00:17:01,000 --> 00:17:03,000
你正在读正文

450
00:17:03,000 --> 00:17:04,000
然后旁边突然出来一个

451
00:17:04,000 --> 00:17:07,000
尤其是那种不占据整个

452
00:17:07,000 --> 00:17:08,000
页面宽度的 Signal

453
00:17:08,000 --> 00:17:11,000
就他在旁边那个小测栏

454
00:17:11,000 --> 00:17:13,000
就写的刘白那边小条有一个那种

455
00:17:13,000 --> 00:17:14,000
对

456
00:17:14,000 --> 00:17:15,000
然后我就会特别纠结

457
00:17:15,000 --> 00:17:18,000
我说我是应该先把这一段正文读完

458
00:17:18,000 --> 00:17:19,000
再去跳 Signals

459
00:17:19,000 --> 00:17:21,000
还是根据 Signals 的物理位置

460
00:17:21,000 --> 00:17:24,000
实体位置去先读 Signals 再跳回去读正文

461
00:17:25,000 --> 00:17:27,000
所以其实我还蛮喜欢有这种 Signals

462
00:17:27,000 --> 00:17:28,000
我记得好像

463
00:17:29,000 --> 00:17:30,000
我现在挺喜欢的

464
00:17:30,000 --> 00:17:32,000
但是就那个时候可能有一种

465
00:17:33,000 --> 00:17:34,000
还是喜欢读干货是吧

466
00:17:34,000 --> 00:17:35,000
你说

467
00:17:35,000 --> 00:17:36,000
对

468
00:17:36,000 --> 00:17:37,000
其实

469
00:17:38,000 --> 00:17:39,000
如果有 Signals 的话

470
00:17:39,000 --> 00:17:40,000
你是可以选择的

471
00:17:40,000 --> 00:17:41,000
就你时间不够的话就不要读 Signals

472
00:17:41,000 --> 00:17:43,000
Signals 之所以是 Signals

473
00:17:43,000 --> 00:17:44,000
因为他没有那么重要

474
00:17:44,000 --> 00:17:45,000
这是 Optional Content

475
00:17:45,000 --> 00:17:46,000
做这儿就对

476
00:17:47,000 --> 00:17:48,000
我觉得这个其实蛮重要的

477
00:17:48,000 --> 00:17:49,000
就是说

478
00:17:49,000 --> 00:17:51,000
起码可能我印象中

479
00:17:51,000 --> 00:17:53,000
大学的教材里面

480
00:17:53,000 --> 00:17:55,000
可能这种干货会比较满满

481
00:17:55,000 --> 00:17:58,000
就至少国产教材里面干货会比较满满的

482
00:17:58,000 --> 00:18:00,000
然后像一些洋教材

483
00:18:00,000 --> 00:18:01,000
可能就会把这种

484
00:18:02,000 --> 00:18:05,000
这些一些施获混进去

485
00:18:05,000 --> 00:18:06,000
其实我还蛮喜欢看那些施获的

486
00:18:06,000 --> 00:18:07,000
这样有一个

487
00:18:08,000 --> 00:18:09,000
别的不说

488
00:18:09,000 --> 00:18:11,000
你起码有一个谈资了

489
00:18:11,000 --> 00:18:11,000
对吧

490
00:18:12,000 --> 00:18:13,000
对

491
00:18:13,000 --> 00:18:15,000
就国外的教材比较接近教学的教材

492
00:18:15,000 --> 00:18:17,000
国内教材更像是考试的教材

493
00:18:18,000 --> 00:18:19,000
好残酷

494
00:18:19,000 --> 00:18:20,000
要不要这么直白

495
00:18:21,000 --> 00:18:23,000
这是鸡精和鸡汤的差别好吗

496
00:18:23,000 --> 00:18:26,000
就是你吃国内的鸡精的话

497
00:18:26,000 --> 00:18:27,000
你得自己掺水进去

498
00:18:27,000 --> 00:18:29,000
不然又能会大便干燥了

499
00:18:36,000 --> 00:18:37,000
Perfect analogy

500
00:18:39,000 --> 00:18:41,000
然后如何说

501
00:18:41,000 --> 00:18:43,000
怎么突破这个

502
00:18:43,000 --> 00:18:44,000
不用吉他

503
00:18:44,000 --> 00:18:45,000
等一下他说

504
00:18:45,000 --> 00:18:48,000
大多数情况下排名 Top 的学校是哪一间

505
00:18:51,000 --> 00:18:52,000
只有前二是确定的

506
00:18:52,000 --> 00:18:53,000
后面三个一直在换

507
00:18:53,000 --> 00:18:54,000
我想想

508
00:18:54,000 --> 00:18:55,000
教打

509
00:18:55,000 --> 00:18:56,000
复旦

510
00:18:56,000 --> 00:18:57,000
这俩谁排第三

511
00:18:58,000 --> 00:18:59,000
不一定

512
00:18:59,000 --> 00:19:01,000
有时候也有经常这种大学参谋起来

513
00:19:01,000 --> 00:19:02,000
什么浙大

514
00:19:02,000 --> 00:19:03,000
好吧

515
00:19:03,000 --> 00:19:05,000
没有某长者的话

516
00:19:05,000 --> 00:19:07,000
可能教打应该还是要靠着

517
00:19:07,000 --> 00:19:09,000
然后复旦之后

518
00:19:09,000 --> 00:19:10,000
南京我觉得

519
00:19:11,000 --> 00:19:12,000
对

520
00:19:12,000 --> 00:19:13,000
像我们这种

521
00:19:13,000 --> 00:19:16,000
十名左右的学校就没有这种担忧了

522
00:19:16,000 --> 00:19:19,000
我可以说大多数情况下 Top 是

523
00:19:19,000 --> 00:19:20,000
知道吗

524
00:19:22,000 --> 00:19:24,000
中山大学还是要比中南大学高

525
00:19:24,000 --> 00:19:25,000
不论如何

526
00:19:25,000 --> 00:19:27,000
那你是不是更不担忧这个问题了

527
00:19:27,000 --> 00:19:28,000
对

528
00:19:28,000 --> 00:19:29,000
Who cares

529
00:19:29,000 --> 00:19:30,000
I don't give a fuck

530
00:19:31,000 --> 00:19:32,000
Bitch

531
00:19:33,000 --> 00:19:34,000
完了这一期要 Expand

532
00:19:36,000 --> 00:19:39,000
他说做的同学很多没用 github

533
00:19:41,000 --> 00:19:43,000
这怎么说

534
00:19:44,000 --> 00:19:45,000
文化吧还是

535
00:19:45,000 --> 00:19:48,000
因为现在好像学校教作业还是 SVN 比较多

536
00:19:48,000 --> 00:19:50,000
主要是有一个非常讨厌的

537
00:19:51,000 --> 00:19:52,000
不可

538
00:19:53,000 --> 00:19:55,000
需要语乐的东西在那

539
00:19:55,000 --> 00:19:56,000
不可说的因素是吧

540
00:19:56,000 --> 00:19:57,000
对

541
00:19:57,000 --> 00:19:58,000
有一个不可说的因素在那边

542
00:19:58,000 --> 00:19:59,000
然后另外一个就是

543
00:19:59,000 --> 00:20:00,000
所以现在还好

544
00:20:00,000 --> 00:20:01,000
也不一定

545
00:20:02,000 --> 00:20:05,000
github 的学习曲线还是比较陡峭

546
00:20:07,000 --> 00:20:08,000
上手还蛮简单的吧

547
00:20:08,000 --> 00:20:08,000
至少

548
00:20:09,000 --> 00:20:12,000
XKCD 不是有一个原版的话

549
00:20:12,000 --> 00:20:13,000
是最清楚的吧

550
00:20:13,000 --> 00:20:14,000
还是忘了

551
00:20:14,000 --> 00:20:14,000
反正就

552
00:20:14,000 --> 00:20:16,000
等等我明白了

553
00:20:16,000 --> 00:20:18,000
因为可能跟后面那个有关系

554
00:20:18,000 --> 00:20:19,000
他说写几十张成绩都要

555
00:20:19,000 --> 00:20:22,000
开 Visual Studio 说明是在 Windows 上面对吧

556
00:20:23,000 --> 00:20:25,000
Git 在 Windows 上面是一坨湿

557
00:20:25,000 --> 00:20:26,000
说点事

558
00:20:26,000 --> 00:20:26,000
对

559
00:20:26,000 --> 00:20:28,000
所以可能跟系统的选择

560
00:20:28,000 --> 00:20:30,000
或者工具链的选择还是有一定的关系

561
00:20:30,000 --> 00:20:31,000
其实一个

562
00:20:31,000 --> 00:20:33,000
其实一个

563
00:20:34,000 --> 00:20:35,000
就这么说吧

564
00:20:35,000 --> 00:20:37,000
你不喜欢命令行的话

565
00:20:37,000 --> 00:20:39,000
基本上就没有可能用 git 了吧

566
00:20:40,000 --> 00:20:41,000
对

567
00:20:41,000 --> 00:20:42,000
我们节目之前

568
00:20:43,000 --> 00:20:46,000
不是说这一期开始已经没有什么主题了

569
00:20:46,000 --> 00:20:48,000
我们只是胡扯而已

570
00:20:48,000 --> 00:20:48,000
但是

571
00:20:49,000 --> 00:20:50,000
被选的主题其实还是有

572
00:20:50,000 --> 00:20:51,000
比如说

573
00:20:51,000 --> 00:20:52,000
Command Line

574
00:20:52,000 --> 00:20:54,000
可以讨论一下各种 Share

575
00:20:54,000 --> 00:20:55,000
然后讨论一下 Command Line

576
00:20:55,000 --> 00:20:56,000
为什么一直

577
00:20:57,000 --> 00:20:58,000
为什么一直

578
00:20:58,000 --> 00:21:00,000
赶快写到下期的提供里面

579
00:21:00,000 --> 00:21:01,000
不然下期又没提说了

580
00:21:02,000 --> 00:21:03,000
说点事

581
00:21:03,000 --> 00:21:03,000
对

582
00:21:03,000 --> 00:21:06,000
然后 git 其实是一个很奇葩的东西

583
00:21:06,000 --> 00:21:08,000
就是如果你习惯了 Command Line 的话

584
00:21:08,000 --> 00:21:11,000
你会发现 git 没有一个

585
00:21:11,000 --> 00:21:13,000
那很有意思

586
00:21:14,000 --> 00:21:14,000
对

587
00:21:14,000 --> 00:21:16,000
没有一个需要用到的

588
00:21:16,000 --> 00:21:17,000
故意

589
00:21:17,000 --> 00:21:18,000
故意

590
00:21:18,000 --> 00:21:18,000
对

591
00:21:19,000 --> 00:21:20,000
唯一一个故意

592
00:21:20,000 --> 00:21:22,000
甚至也是在 Command Line 下实现比较

593
00:21:22,000 --> 00:21:24,000
我想了一下 git 的故意

594
00:21:24,000 --> 00:21:29,000
可能唯一就是考试看 Commit History

595
00:21:29,000 --> 00:21:30,000
TIG

596
00:21:30,000 --> 00:21:30,000
对

597
00:21:30,000 --> 00:21:31,000
就你只需要一个 TIG

598
00:21:32,000 --> 00:21:33,000
TIG 的工具

599
00:21:33,000 --> 00:21:34,000
然后就够了

600
00:21:35,000 --> 00:21:38,000
然后用 QQ 传代码就什么样的精神

601
00:21:39,000 --> 00:21:39,000
因为

602
00:21:40,000 --> 00:21:43,000
不是说现在所有的大学生最常用的

603
00:21:43,000 --> 00:21:45,000
我忘了我在什么地方看到的时候

604
00:21:46,000 --> 00:21:47,000
现在 90 后

605
00:21:47,000 --> 00:21:49,000
老胡林最常用的东西是 QQ

606
00:21:49,000 --> 00:21:51,000
我明白用 QQ 聊天

607
00:21:51,000 --> 00:21:52,000
我完全没有意见

608
00:21:52,000 --> 00:21:53,000
我也用了之前

609
00:21:53,000 --> 00:21:54,000
我上大学的时候

610
00:21:54,000 --> 00:21:55,000
问题是说

611
00:21:55,000 --> 00:21:58,000
用 QQ 传代码是为了哪般

612
00:21:59,000 --> 00:22:00,000
因为 QQ 可以传文件

613
00:22:00,000 --> 00:22:02,000
而且所有人都开始 QQ

614
00:22:02,000 --> 00:22:02,000
不

615
00:22:02,000 --> 00:22:03,000
我知道

616
00:22:03,000 --> 00:22:06,000
但为什么要传这个文件

617
00:22:06,000 --> 00:22:06,000
这个文件是代码

618
00:22:07,000 --> 00:22:07,000
why

619
00:22:10,000 --> 00:22:11,000
让我看看你的程序怎么写

620
00:22:11,000 --> 00:22:12,000
不然你放哪了

621
00:22:12,000 --> 00:22:14,000
你直接贴代码片段

622
00:22:16,000 --> 00:22:17,000
如果太长

623
00:22:18,000 --> 00:22:20,000
QQ 的传输有限制吗

624
00:22:20,000 --> 00:22:21,000
而且还有一个问题就是

625
00:22:21,000 --> 00:22:22,000
你就多个文件的时候是吧

626
00:22:22,000 --> 00:22:23,000
而且还有一个问题就是

627
00:22:23,000 --> 00:22:26,000
你我会觉得在

628
00:22:27,000 --> 00:22:29,000
而且有些人会用奇葩的字体

629
00:22:29,000 --> 00:22:29,000
不是吗

630
00:22:29,000 --> 00:22:31,000
就是非等宽的字体在 QQ 里面

631
00:22:32,000 --> 00:22:33,000
然后

632
00:22:33,000 --> 00:22:35,000
所以 Pastebin 还是很有用的

633
00:22:37,000 --> 00:22:38,000
但国内没有 Pastebin

634
00:22:38,000 --> 00:22:39,000
但 Pastebin 也不太好用

635
00:22:39,000 --> 00:22:40,000
如果说多个文件的话

636
00:22:40,000 --> 00:22:41,000
它是 Pastebin 单个文件

637
00:22:41,000 --> 00:22:42,000
可能还行

638
00:22:43,000 --> 00:22:45,000
所以其实还是这个

639
00:22:45,000 --> 00:22:46,000
就邮件

640
00:22:46,000 --> 00:22:47,000
或者说就是

641
00:22:47,000 --> 00:22:48,000
纯文本邮件

642
00:22:48,000 --> 00:22:50,000
用的还不够熟练的原因

643
00:22:50,000 --> 00:22:53,000
因为其实在据我所知道

644
00:22:53,000 --> 00:22:55,000
就是 Git 出现之前

645
00:22:55,000 --> 00:22:56,000
Linux kernel 上面

646
00:22:56,000 --> 00:22:57,000
他们做那个

647
00:22:57,000 --> 00:22:58,000
patch 的时候

648
00:22:58,000 --> 00:22:59,000
都是通过邮件发 Deaf

649
00:23:00,000 --> 00:23:03,000
所以中国的问题是

650
00:23:03,000 --> 00:23:04,000
不会用 Deaf

651
00:23:06,000 --> 00:23:08,000
中国是 Email never took off

652
00:23:09,000 --> 00:23:10,000
大学里面还好吧

653
00:23:10,000 --> 00:23:11,000
你这么觉得吗

654
00:23:11,000 --> 00:23:12,000
我上大学的时候

655
00:23:12,000 --> 00:23:15,000
可是四年发过 40 多年邮件就不错了

656
00:23:15,000 --> 00:23:16,000
Holy shit

657
00:23:16,000 --> 00:23:17,000
怎么可能

658
00:23:18,000 --> 00:23:19,000
差不多

659
00:23:19,000 --> 00:23:20,000
就除了申请学校的时候

660
00:23:20,000 --> 00:23:21,000
发了很多之外

661
00:23:22,000 --> 00:23:23,000
你平时都不发吗

662
00:23:23,000 --> 00:23:24,000
我上大学的时候

663
00:23:24,000 --> 00:23:26,000
2003

664
00:23:26,000 --> 00:23:27,000
2004 年

665
00:23:28,000 --> 00:23:28,000
我发邮件给谁

666
00:23:30,000 --> 00:23:30,000
同学

667
00:23:31,000 --> 00:23:33,000
我发邮件给老爸过

668
00:23:33,000 --> 00:23:33,000
对

669
00:23:33,000 --> 00:23:37,000
我跟家书是用邮件发的

670
00:23:37,000 --> 00:23:37,000
这么先进

671
00:23:37,000 --> 00:23:37,000
可是

672
00:23:38,000 --> 00:23:41,000
可是邮同学

673
00:23:41,000 --> 00:23:42,000
我们是

674
00:23:42,000 --> 00:23:43,000
我也不知道

675
00:23:43,000 --> 00:23:44,000
我的同班同学

676
00:23:44,000 --> 00:23:45,000
因为我们是学

677
00:23:46,000 --> 00:23:46,000
新鲜者的

678
00:23:46,000 --> 00:23:47,000
然后

679
00:23:49,000 --> 00:23:51,000
你们觉得邮件不安全吗

680
00:23:51,000 --> 00:23:52,000
不是

681
00:23:52,000 --> 00:23:54,000
80%的人买了电脑之后

682
00:23:54,000 --> 00:23:57,000
我们就手工把所有的请示

683
00:23:57,000 --> 00:23:58,000
用局域网连起来了

684
00:23:59,000 --> 00:24:00,000
然后

685
00:24:00,000 --> 00:24:01,000
你们学校没有校园网

686
00:24:01,000 --> 00:24:02,000
没有校园网

687
00:24:02,000 --> 00:24:02,000
What

688
00:24:03,000 --> 00:24:05,000
校园网是一个

689
00:24:05,000 --> 00:24:08,000
我们只有自己拨号的上网宽带

690
00:24:08,000 --> 00:24:10,000
但没有校园内部的局域网

691
00:24:11,000 --> 00:24:13,000
Don't ask me why

692
00:24:13,000 --> 00:24:13,000
对

693
00:24:13,000 --> 00:24:14,000
但事实就是

694
00:24:14,000 --> 00:24:16,000
Seriously

695
00:24:16,000 --> 00:24:16,000
不会吧

696
00:24:16,000 --> 00:24:17,000
你们什么

697
00:24:17,000 --> 00:24:20,000
你们什么在校园网上传 APN 这种事情

698
00:24:20,000 --> 00:24:21,000
我都只听过

699
00:24:21,000 --> 00:24:21,000
从来没有见过

700
00:24:21,000 --> 00:24:22,000
你们有 BBS 吗

701
00:24:23,000 --> 00:24:25,000
我们的 BBS 是一个 PHP 系统

702
00:24:26,000 --> 00:24:26,000
没有

703
00:24:26,000 --> 00:24:27,000
Discuss

704
00:24:27,000 --> 00:24:28,000
Tell them

705
00:24:28,000 --> 00:24:29,000
没有那个 Tenets

706
00:24:31,000 --> 00:24:32,000
好像曾经有吧

707
00:24:32,000 --> 00:24:33,000
云录园我也忘了

708
00:24:33,000 --> 00:24:33,000
但

709
00:24:34,000 --> 00:24:34,000
不会吧

710
00:24:34,000 --> 00:24:35,000
真的假的

711
00:24:36,000 --> 00:24:36,000
对

712
00:24:39,000 --> 00:24:40,000
当然已经学校过

713
00:24:40,000 --> 00:24:42,000
因为我最开始在的那个校区是一个

714
00:24:42,000 --> 00:24:44,000
被后来被合并的校区

715
00:24:44,000 --> 00:24:46,000
所以他本身的基建并没有

716
00:24:46,000 --> 00:24:48,000
不是亲生子

717
00:24:48,000 --> 00:24:49,000
爹不爱是吧

718
00:24:49,000 --> 00:24:49,000
对

719
00:24:49,000 --> 00:24:50,000
对

720
00:24:50,000 --> 00:24:50,000
好吧

721
00:24:50,000 --> 00:24:51,000
要不疼

722
00:24:52,000 --> 00:24:53,000
我摸头

723
00:24:54,000 --> 00:24:56,000
我上学的时候

724
00:24:56,000 --> 00:24:58,000
校园网还是蛮普及的起码

725
00:24:58,000 --> 00:25:00,000
第一年的时候

726
00:25:02,000 --> 00:25:03,000
校区是新的

727
00:25:03,000 --> 00:25:04,000
在珠海那边

728
00:25:04,000 --> 00:25:05,000
然后

729
00:25:05,000 --> 00:25:07,000
宿舍也是新的

730
00:25:07,000 --> 00:25:08,000
校园网都还接得可以

731
00:25:08,000 --> 00:25:09,000
百兆接入

732
00:25:09,000 --> 00:25:10,000
应该是

733
00:25:10,000 --> 00:25:13,000
然后但初校区就起码无比了

734
00:25:13,000 --> 00:25:15,000
因为出口带宽比较窄

735
00:25:15,000 --> 00:25:17,000
但是在校园内部的话

736
00:25:17,000 --> 00:25:18,000
有各种服务器

737
00:25:18,000 --> 00:25:19,000
有机房

738
00:25:19,000 --> 00:25:21,000
然后内部资源互相访问

739
00:25:21,000 --> 00:25:23,000
当时用什么飞鸽传输

740
00:25:23,000 --> 00:25:26,000
QQ 内部就是各种内网传文件的工具

741
00:25:26,000 --> 00:25:27,000
用的还蛮火的

742
00:25:27,000 --> 00:25:28,000
然后电子邮件

743
00:25:28,000 --> 00:25:30,000
用的也是应该是蛮多的

744
00:25:30,000 --> 00:25:31,000
然后

745
00:25:31,000 --> 00:25:33,000
所以你看你那个时候也用 QQ 传文件

746
00:25:35,000 --> 00:25:36,000
会有

747
00:25:36,000 --> 00:25:37,000
对也会有

748
00:25:37,000 --> 00:25:39,000
那个时候 QQ 好像有出群组的功能

749
00:25:40,000 --> 00:25:40,000
就那个时候是

750
00:25:41,000 --> 00:25:44,000
就在学校里面发一些东西还是可以

751
00:25:44,000 --> 00:25:45,000
但是用邮件的也不少

752
00:25:45,000 --> 00:25:47,000
就可能有三分之一用邮件

753
00:25:47,000 --> 00:25:48,000
三分之二用 QQ

754
00:25:48,000 --> 00:25:49,000
大概是每个

755
00:25:49,000 --> 00:25:50,000
不对

756
00:25:50,000 --> 00:25:50,000
应该是

757
00:25:51,000 --> 00:25:52,000
就小文件

758
00:25:52,000 --> 00:25:54,000
三分之一用邮件

759
00:25:54,000 --> 00:25:54,000
三分之二用 QQ

760
00:25:54,000 --> 00:25:56,000
大文件的话可能还是本地什么

761
00:25:56,000 --> 00:25:58,000
就是有个叫飞鸽传输的还比较多一些

762
00:25:59,000 --> 00:26:00,000
没有

763
00:26:00,000 --> 00:26:01,000
对然后

764
00:26:01,000 --> 00:26:05,000
然后还有一个飞鸽传输和 FTP

765
00:26:06,000 --> 00:26:07,000
就是校园内网的 FTP 也多一点

766
00:26:07,000 --> 00:26:09,000
我们有一个公众 FTP

767
00:26:09,000 --> 00:26:10,000
对然后就是上次我说那个故事

768
00:26:11,000 --> 00:26:13,000
有个哥们在自己的 PC 上面

769
00:26:14,000 --> 00:26:14,000
搞了一个

770
00:26:15,000 --> 00:26:16,000
开了个 FTP Server

771
00:26:16,000 --> 00:26:18,000
然后开放毛片资源贡献

772
00:26:19,000 --> 00:26:20,000
对

773
00:26:20,000 --> 00:26:22,000
这些传说都是我们听说的

774
00:26:22,000 --> 00:26:23,000
就像也不是听说

775
00:26:23,000 --> 00:26:24,000
我在浙大也见过

776
00:26:24,000 --> 00:26:24,000
他们那边的

777
00:26:25,000 --> 00:26:28,000
APN ad hoc 共享网络是多么的昌盛

778
00:26:29,000 --> 00:26:30,000
我们学校从来没有发生过

779
00:26:30,000 --> 00:26:32,000
所以你看训雷还是有群众基础的

780
00:26:33,000 --> 00:26:34,000
嗯

781
00:26:35,000 --> 00:26:37,000
对然后

782
00:26:37,000 --> 00:26:40,000
所以说就是说你如果邮件的需求还是

783
00:26:41,000 --> 00:26:41,000
等一下

784
00:26:41,000 --> 00:26:43,000
那你们毕业之后不用邮件吗

785
00:26:43,000 --> 00:26:44,000
在工作的时候

786
00:26:45,000 --> 00:26:47,000
毕业之后当然很多

787
00:26:47,000 --> 00:26:48,000
我毕业就出国了

788
00:26:48,000 --> 00:26:50,000
你当然是一直用邮件

789
00:26:50,000 --> 00:26:52,000
对我的印象就是说哪怕毕业之后

790
00:26:52,000 --> 00:26:53,000
那我当然读商科

791
00:26:53,000 --> 00:26:54,000
就是很多同学他们

792
00:26:54,000 --> 00:26:57,000
不管是申请工作简历也好

793
00:26:57,000 --> 00:26:59,000
还是说日常这个同事之间

794
00:26:59,000 --> 00:27:01,000
或者跟客户之间沟通也好

795
00:27:01,000 --> 00:27:03,000
他们用邮件的情况还是蛮多的

796
00:27:03,000 --> 00:27:05,000
就 business business

797
00:27:06,000 --> 00:27:09,000
所以我不觉得在

798
00:27:09,000 --> 00:27:11,000
起码我接触那群人里面邮件

799
00:27:11,000 --> 00:27:13,000
是一个很陌生的事情

800
00:27:14,000 --> 00:27:16,000
所以我就在想为什么会用 QQ 传达吗

801
00:27:16,000 --> 00:27:19,000
而不是用邮件发 DIF

802
00:27:20,000 --> 00:27:22,000
可能跟那个工具链的交手有关系

803
00:27:22,000 --> 00:27:25,000
因为大学就至少我们所谓的这种

804
00:27:25,000 --> 00:27:26,000
综合性大学

805
00:27:26,000 --> 00:27:28,000
而不是叫什么来的大专

806
00:27:28,000 --> 00:27:31,000
它可能会偏向于说理论多一些

807
00:27:31,000 --> 00:27:33,000
对工具的就比较

808
00:27:33,000 --> 00:27:33,000
这怎么说呢

809
00:27:33,000 --> 00:27:34,000
比较看不起

810
00:27:35,000 --> 00:27:38,000
但其实如果 Visual Studio 有一个一键

811
00:27:38,000 --> 00:27:41,000
把 DIF 导出为文本文件的功能

812
00:27:41,000 --> 00:27:43,000
我想也许会用的人多一点

813
00:27:43,000 --> 00:27:44,000
I doubt it

814
00:27:45,000 --> 00:27:46,000
不可能

815
00:27:46,000 --> 00:27:48,000
这种事情怎么可能发生在 Visual Studio

816
00:27:48,000 --> 00:27:49,000
我也觉得是这样

817
00:27:49,000 --> 00:27:50,000
所以还是一个

818
00:27:50,000 --> 00:27:52,000
其实 Client-Line 和 GUI 的争端

819
00:27:53,000 --> 00:27:54,000
就是分歧

820
00:27:54,000 --> 00:27:55,000
然后碰巧

821
00:27:55,000 --> 00:27:59,000
大多数人可能还选择 Windows 平台

822
00:27:59,000 --> 00:28:01,000
所以路径依赖

823
00:28:01,000 --> 00:28:01,000
对

824
00:28:01,000 --> 00:28:03,000
这个路径依赖

825
00:28:04,000 --> 00:28:06,000
所以这位同学不用特别的在意

826
00:28:06,000 --> 00:28:08,000
这个什么工具链的事情

827
00:28:08,000 --> 00:28:10,000
碰巧遇到两个比较规模

828
00:28:10,000 --> 00:28:12,000
用那个 Client-Line 的人

829
00:28:13,000 --> 00:28:13,000
对

830
00:28:14,000 --> 00:28:16,000
然后如果你有志于继续发展的话

831
00:28:16,000 --> 00:28:18,000
将来其实你也会

832
00:28:20,000 --> 00:28:22,000
用该用的东西

833
00:28:22,000 --> 00:28:24,000
谁年轻的时候没有荒唐过

834
00:28:24,000 --> 00:28:25,000
不是

835
00:28:26,000 --> 00:28:27,000
OK

836
00:28:27,000 --> 00:28:28,000
OK

837
00:28:29,000 --> 00:28:31,000
另外搭车想问一个不相关的问题

838
00:28:31,000 --> 00:28:31,000
Rail 老师

839
00:28:31,000 --> 00:28:33,000
接着念他的反馈吗

840
00:28:33,000 --> 00:28:33,000
这里是

841
00:28:33,000 --> 00:28:33,000
对

842
00:28:34,000 --> 00:28:35,000
Rail 老师

843
00:28:36,000 --> 00:28:38,000
提到自己在不同网站的账号

844
00:28:38,000 --> 00:28:39,000
是用不同邮箱注册的

845
00:28:39,000 --> 00:28:40,000
我自己也想效仿

846
00:28:40,000 --> 00:28:41,000
但不清楚该如何管理

847
00:28:42,000 --> 00:28:44,000
以及如何选择个人邮箱的服务商

848
00:28:45,000 --> 00:28:48,000
很多账号似乎不能更改邮箱

849
00:28:48,000 --> 00:28:50,000
那 Rail 老师都是重新注册的吗

850
00:28:50,000 --> 00:28:52,000
望赐教不胜感激

851
00:28:52,000 --> 00:28:53,000
好吧

852
00:28:53,000 --> 00:28:54,000
请赐教

853
00:28:54,000 --> 00:28:58,000
如何选择个人邮箱服务商

854
00:28:58,000 --> 00:28:58,000
很简单

855
00:28:58,000 --> 00:28:59,000
不用选了

856
00:28:59,000 --> 00:28:59,000
就 Gmail

857
00:29:01,000 --> 00:29:02,000
因为 Gmail 有个 Hack

858
00:29:02,000 --> 00:29:03,000
就是比如说假设

859
00:29:04,000 --> 00:29:06,000
你的 Gmail 账号是

860
00:29:06,000 --> 00:29:09,000
for at gmail.com

861
00:29:09,000 --> 00:29:11,000
然后你用 for 一个加号

862
00:29:11,000 --> 00:29:13,000
后面是比如说 bar

863
00:29:13,000 --> 00:29:14,000
at gmail.com

864
00:29:14,000 --> 00:29:15,000
发到这个地址的

865
00:29:15,000 --> 00:29:17,000
还是会进到你 for 的邮箱里面去

866
00:29:17,000 --> 00:29:19,000
然后你说 for 加 spam

867
00:29:20,000 --> 00:29:21,000
at gmail.com

868
00:29:21,000 --> 00:29:23,000
也是会进到你 for 里面

869
00:29:23,000 --> 00:29:23,000
就加号里面

870
00:29:23,000 --> 00:29:24,000
你填任何东西

871
00:29:24,000 --> 00:29:26,000
都会进到你的邮箱里面去

872
00:29:26,000 --> 00:29:27,000
就是一个 Hack

873
00:29:27,000 --> 00:29:28,000
所以你注册的时候

874
00:29:28,000 --> 00:29:29,000
就只要填 for

875
00:29:29,000 --> 00:29:30,000
然后加加号

876
00:29:30,000 --> 00:29:32,000
然后再加上这种人的名字

877
00:29:32,000 --> 00:29:35,000
或者是你随机生成的一个代码

878
00:29:35,000 --> 00:29:36,000
如果你不想被人猜出来的话

879
00:29:37,000 --> 00:29:37,000
对

880
00:29:37,000 --> 00:29:41,000
然后你下一次在 spam 里面看到

881
00:29:41,000 --> 00:29:44,000
是 for 加上比如说

882
00:29:44,000 --> 00:29:46,000
美团给你发的

883
00:29:48,000 --> 00:29:50,000
某网站给你发的垃圾邮件

884
00:29:50,000 --> 00:29:52,000
你就知道这个网站把你的邮件卖了

885
00:29:52,000 --> 00:29:52,000
对

886
00:29:52,000 --> 00:29:55,000
不过这东西也有点缺陷

887
00:29:55,000 --> 00:29:57,000
就是说有一些网站的邮件

888
00:29:57,000 --> 00:29:59,000
地址的验证

889
00:29:59,000 --> 00:30:02,000
政策表达是不支持前面有加号的

890
00:30:02,000 --> 00:30:04,000
他会说你这个不是一个合法的

891
00:30:04,000 --> 00:30:05,000
邮件地址

892
00:30:05,000 --> 00:30:06,000
没错

893
00:30:06,000 --> 00:30:07,000
因为一个合法邮件地址的

894
00:30:07,000 --> 00:30:10,000
政策表达是非常难以写出来

895
00:30:10,000 --> 00:30:12,000
其实是政策表达是不能表达出来

896
00:30:12,000 --> 00:30:13,000
一个合法的

897
00:30:14,000 --> 00:30:15,000
错了

898
00:30:15,000 --> 00:30:18,000
政策表达甚至于法限制了

899
00:30:18,000 --> 00:30:21,000
它不能表达所有可能邮件地址

900
00:30:21,000 --> 00:30:22,000
OK

901
00:30:22,000 --> 00:30:23,000
然后因为大部分人

902
00:30:23,000 --> 00:30:24,000
对

903
00:30:24,000 --> 00:30:27,000
在写一个邮件判断的时候

904
00:30:27,000 --> 00:30:29,000
就写一个非常难以的判断

905
00:30:30,000 --> 00:30:31,000
而这种判断就会导致一个

906
00:30:31,000 --> 00:30:33,000
明明 value 的邮件

907
00:30:33,000 --> 00:30:34,000
比如说 for 加 bar

908
00:30:34,000 --> 00:30:35,000
at gmail.com

909
00:30:35,000 --> 00:30:36,000
对

910
00:30:36,000 --> 00:30:36,000
比如说

911
00:30:36,000 --> 00:30:38,000
比如说那个邮件的前面那部分

912
00:30:38,000 --> 00:30:39,000
就邮件地址前面

913
00:30:39,000 --> 00:30:40,000
at for 前面那部分

914
00:30:40,000 --> 00:30:41,000
就可以是中文

915
00:30:42,000 --> 00:30:43,000
但是很多人说

916
00:30:44,000 --> 00:30:44,000
没见过

917
00:30:45,000 --> 00:30:45,000
不合法

918
00:30:45,000 --> 00:30:46,000
对吧

919
00:30:46,000 --> 00:30:46,000
他觉得不好法

920
00:30:46,000 --> 00:30:48,000
他就说限制前面部分

921
00:30:48,000 --> 00:30:49,000
只能是 A 到 Z

922
00:30:49,000 --> 00:30:50,000
0 到 9

923
00:30:50,000 --> 00:30:53,000
横线和下滑线

924
00:30:53,000 --> 00:30:55,000
然后再至少一个

925
00:30:55,000 --> 00:30:55,000
对吧

926
00:30:56,000 --> 00:30:58,000
这其实就很简单粗暴

927
00:30:59,000 --> 00:31:00,000
但是你遇到了你也没办法

928
00:31:00,000 --> 00:31:01,000
你也不可能说

929
00:31:01,000 --> 00:31:02,000
你每个真的遇到就去改

930
00:31:02,000 --> 00:31:03,000
但是

931
00:31:03,000 --> 00:31:04,000
所以怎么解决这个问题

932
00:31:04,000 --> 00:31:05,000
也有了

933
00:31:05,000 --> 00:31:06,000
像我们这么高阶用户

934
00:31:06,000 --> 00:31:08,000
怎么可能会满足于用

935
00:31:08,000 --> 00:31:09,000
gmail 这种后续的域名

936
00:31:09,000 --> 00:31:10,000
对吧

937
00:31:10,000 --> 00:31:11,000
你自己注册一个域名

938
00:31:12,000 --> 00:31:13,000
然后你可以找一个服务商

939
00:31:13,000 --> 00:31:15,000
比如说那个 Google Apps

940
00:31:15,000 --> 00:31:17,000
你可以把那个 wildcard

941
00:31:17,000 --> 00:31:19,000
wildcard

942
00:31:19,000 --> 00:31:20,000
域名打开

943
00:31:20,000 --> 00:31:21,000
就是简单说新号

944
00:31:21,000 --> 00:31:22,000
通配服

945
00:31:22,000 --> 00:31:23,000
对通配服

946
00:31:23,000 --> 00:31:25,000
就发到任何

947
00:31:26,000 --> 00:31:27,000
at 你邮件

948
00:31:28,000 --> 00:31:28,000
不是

949
00:31:28,000 --> 00:31:30,000
at 你域名的邮件

950
00:31:30,000 --> 00:31:32,000
都会进入到你指定的一个邮箱

951
00:31:33,000 --> 00:31:33,000
也可以

952
00:31:33,000 --> 00:31:35,000
这样你就有无限数量的邮箱

953
00:31:35,000 --> 00:31:35,000
可以用了

954
00:31:35,000 --> 00:31:36,000
你想用什么用什么

955
00:31:37,000 --> 00:31:39,000
然后他提到说

956
00:31:39,000 --> 00:31:41,000
很多账号似乎不能更改邮箱

957
00:31:41,000 --> 00:31:43,000
其实大部分是可以改的

958
00:31:43,000 --> 00:31:45,000
只是不能改的时间都比较少了

959
00:31:46,000 --> 00:31:47,000
比如说我们目前为止吐槽

960
00:31:47,000 --> 00:31:48,000
最多就是微博了

961
00:31:48,000 --> 00:31:48,000
这变态

962
00:31:48,000 --> 00:31:49,000
为什么不能改邮箱

963
00:31:49,000 --> 00:31:50,000
邮箱掉了

964
00:31:50,000 --> 00:31:51,000
或者换工作了

965
00:31:51,000 --> 00:31:52,000
对吧

966
00:31:54,000 --> 00:31:54,000
对

967
00:31:55,000 --> 00:31:58,000
所以我是不是重新注册的

968
00:31:58,000 --> 00:31:58,000
我不用

969
00:31:58,000 --> 00:31:59,000
因为我注册的时候

970
00:31:59,000 --> 00:32:01,000
就是用的这种方法做的

971
00:32:01,000 --> 00:32:03,000
然后遇到那些不能改的

972
00:32:04,000 --> 00:32:05,000
就

973
00:32:05,000 --> 00:32:06,000
特事特办

974
00:32:07,000 --> 00:32:07,000
对

975
00:32:07,000 --> 00:32:09,000
反正锐老师的邮箱就是

976
00:32:10,000 --> 00:32:11,000
随机生成

977
00:32:11,000 --> 00:32:13,000
随便发什么都可以

978
00:32:14,000 --> 00:32:14,000
对

979
00:32:15,000 --> 00:32:16,000
OK

980
00:32:16,000 --> 00:32:18,000
今天的听众反馈环节

981
00:32:18,000 --> 00:32:19,000
到这里结束

982
00:32:19,000 --> 00:32:22,000
我们现在进入新闻时间

983
00:32:22,000 --> 00:32:25,000
此处插入新闻联播片头曲

984
00:32:28,000 --> 00:32:29,000
其实我好多年没看的

985
00:32:29,000 --> 00:32:29,000
还是一个曲子

986
00:32:29,000 --> 00:32:30,000
应该不一样了

987
00:32:30,000 --> 00:32:31,000
应该是

988
00:32:31,000 --> 00:32:31,000
应该是吧

989
00:32:31,000 --> 00:32:32,000
这不过可能从

990
00:32:33,000 --> 00:32:34,000
这是不是中国

991
00:32:34,000 --> 00:32:36,000
中国境内

992
00:32:36,000 --> 00:32:37,000
除了国歌之外

993
00:32:37,000 --> 00:32:40,000
第二元素的音乐

994
00:32:42,000 --> 00:32:42,000
低元素是什么

995
00:32:42,000 --> 00:32:43,000
国歌

996
00:32:43,000 --> 00:32:44,000
对

997
00:32:45,000 --> 00:32:45,000
不一定

998
00:32:45,000 --> 00:32:46,000
还有解放军进行曲子

999
00:32:48,000 --> 00:32:49,000
难说

1000
00:32:49,000 --> 00:32:50,000
Top 3 吧至少

1001
00:32:50,000 --> 00:32:50,000
对

1002
00:32:53,000 --> 00:32:54,000
新闻 No.1

1003
00:32:54,000 --> 00:32:55,000
最近出了一个

1004
00:32:55,000 --> 00:32:57,000
就是 iOS 上出了一个

1005
00:32:57,000 --> 00:32:59,000
很好用的网络调试工具

1006
00:33:00,000 --> 00:33:01,000
怎么这么说了

1007
00:33:01,000 --> 00:33:02,000
叫 Search

1008
00:33:02,000 --> 00:33:03,000
S-U-R-G-E

1009
00:33:04,000 --> 00:33:07,000
它除了能够列出你的程序

1010
00:33:07,000 --> 00:33:09,000
曾经试图访问过那些网址之外

1011
00:33:09,000 --> 00:33:12,000
还可以做一些不可言说的事情

1012
00:33:12,000 --> 00:33:14,000
两网络请求改写

1013
00:33:14,000 --> 00:33:14,000
变更

1014
00:33:15,000 --> 00:33:17,000
很多叫做 proxy 的一些业务

1015
00:33:18,000 --> 00:33:20,000
从而达成一些不可告人的目的

1016
00:33:21,000 --> 00:33:22,000
可以告人

1017
00:33:23,000 --> 00:33:23,000
可以告人

1018
00:33:23,000 --> 00:33:24,000
可以告人

1019
00:33:25,000 --> 00:33:25,000
对

1020
00:33:25,000 --> 00:33:26,000
但我们不会告诉你

1021
00:33:26,000 --> 00:33:27,000
你自己去想

1022
00:33:28,000 --> 00:33:29,000
那个什么

1023
00:33:30,000 --> 00:33:32,000
然后它的开发者

1024
00:33:32,000 --> 00:33:35,000
最近叫刘亚成

1025
00:33:35,000 --> 00:33:36,000
你也不知道是几声怎么念了

1026
00:33:36,000 --> 00:33:37,000
都念轻声吧

1027
00:33:37,000 --> 00:33:39,000
刘亚成吧

1028
00:33:39,000 --> 00:33:40,000
可能是

1029
00:33:40,000 --> 00:33:42,000
然后他在 media

1030
00:33:42,000 --> 00:33:43,000
median 上面

1031
00:33:43,000 --> 00:33:44,000
这个网站发了一篇文章

1032
00:33:44,000 --> 00:33:46,000
讲 search 的原理与实现

1033
00:33:46,000 --> 00:33:48,000
但是这个大致可以说一下

1034
00:33:48,000 --> 00:33:54,000
它是基于 iOS 9 和 iOS 10.11

1035
00:33:54,000 --> 00:33:56,000
应该里面出现了一个新特性

1036
00:33:56,000 --> 00:33:58,000
叫做 Network Extension

1037
00:33:58,000 --> 00:34:00,000
这机制去做的一些

1038
00:34:00,000 --> 00:34:05,000
底层的网络请求的网络的一些处理

1039
00:34:06,000 --> 00:34:07,000
然后他在这篇文章里面

1040
00:34:07,000 --> 00:34:10,000
大致的描述一下 search 的主要的构成部件

1041
00:34:11,000 --> 00:34:12,000
还有它里面的一些

1042
00:34:12,000 --> 00:34:13,000
每个部件是干嘛用的

1043
00:34:13,000 --> 00:34:17,000
就是如果说你对这个东西有兴趣

1044
00:34:17,000 --> 00:34:19,000
想知道它能干嘛

1045
00:34:19,000 --> 00:34:20,000
知道它原理的话

1046
00:34:20,000 --> 00:34:21,000
这是一篇非常

1047
00:34:22,000 --> 00:34:23,000
很好的一个文章

1048
00:34:23,000 --> 00:34:24,000
推荐大家去阅读一下

1049
00:34:24,000 --> 00:34:25,000
当然了

1050
00:34:25,000 --> 00:34:27,000
顺便也顺手给 search

1051
00:34:27,000 --> 00:34:28,000
打一个广告

1052
00:34:28,000 --> 00:34:29,000
毕竟是咱们国人自己写的一个

1053
00:34:29,000 --> 00:34:30,000
很有用的工具

1054
00:34:30,000 --> 00:34:31,000
对吧

1055
00:34:31,000 --> 00:34:33,000
所以 search 跟 VPN 的区别在哪

1056
00:34:35,000 --> 00:34:36,000
你还是问了这个问题

1057
00:34:37,000 --> 00:34:40,000
search 是一个通用的网络层的工具

1058
00:34:41,000 --> 00:34:44,000
然后实现 VPN 是其中它一部分的功能

1059
00:34:44,000 --> 00:34:45,000
大概我可以这么解释吧

1060
00:34:46,000 --> 00:34:48,000
那么它实现的 VPN 跟比如说

1061
00:34:48,000 --> 00:34:50,000
从某网站买来的 VPN 有什么差别

1062
00:34:51,000 --> 00:34:53,000
它可能跟 iOS 9 里面

1063
00:34:53,000 --> 00:34:57,000
它能做到举步代理

1064
00:34:57,000 --> 00:34:59,000
因为过去是全局代理

1065
00:34:59,000 --> 00:35:00,000
你要么用 VPN

1066
00:35:00,000 --> 00:35:01,000
要不不用 VPN

1067
00:35:01,000 --> 00:35:01,000
对吧

1068
00:35:02,000 --> 00:35:03,000
但现在它用 search 这个方式

1069
00:35:03,000 --> 00:35:05,000
它可以做得更精细的控制

1070
00:35:05,000 --> 00:35:06,000
比如说

1071
00:35:06,000 --> 00:35:08,000
某些 IP 端用 VPN

1072
00:35:08,000 --> 00:35:10,000
某些 IP 端不用 VPN

1073
00:35:10,000 --> 00:35:12,000
或者有些某些域名用 VPN

1074
00:35:12,000 --> 00:35:13,000
某些域名不走 VPN

1075
00:35:13,000 --> 00:35:14,000
这个规则是可以很灵活的

1076
00:35:16,000 --> 00:35:18,000
不用一直去手动维护 VPN

1077
00:35:18,000 --> 00:35:19,000
对

1078
00:35:19,000 --> 00:35:21,000
然后当然这么好的应用

1079
00:35:22,000 --> 00:35:23,000
我们自然而然要给它打广告

1080
00:35:23,000 --> 00:35:24,000
推荐一下了

1081
00:35:24,000 --> 00:35:25,000
对吧

1082
00:35:25,000 --> 00:35:27,000
当然这个设计不算便宜

1083
00:35:27,000 --> 00:35:29,000
在 App Store 里面卖石刀

1084
00:35:30,000 --> 00:35:31,000
无有所知

1085
00:35:31,000 --> 00:35:32,000
对比较贵的应用

1086
00:35:32,000 --> 00:35:33,000
但是考虑到

1087
00:35:33,000 --> 00:35:37,000
东西的复杂性和有用性

1088
00:35:38,000 --> 00:35:39,000
推荐大家支持一下

1089
00:35:39,000 --> 00:35:41,000
我们国产开发者的一个小工具

1090
00:35:42,000 --> 00:35:43,000
对

1091
00:35:43,000 --> 00:35:44,000
再强的一面

1092
00:35:44,000 --> 00:35:45,000
我们没有收到赞助

1093
00:35:46,000 --> 00:35:47,000
这是完全

1094
00:35:48,000 --> 00:35:48,000
纯有情

1095
00:35:48,000 --> 00:35:49,000
内心的

1096
00:35:49,000 --> 00:35:50,000
对

1097
00:35:50,000 --> 00:35:51,000
也是希望说

1098
00:35:51,000 --> 00:35:53,000
有更多的开发者

1099
00:35:53,000 --> 00:35:54,000
能够提供一些更好的工具

1100
00:35:54,000 --> 00:35:58,000
帮助我们实现一些日常的业务

1101
00:36:00,000 --> 00:36:02,000
下一条新闻是

1102
00:36:03,000 --> 00:36:04,000
一个挺好玩的东西

1103
00:36:04,000 --> 00:36:06,000
叫做一个新的图片格式

1104
00:36:06,000 --> 00:36:07,000
图像格式

1105
00:36:07,000 --> 00:36:10,000
叫做 Free Lossless Image Format

1106
00:36:10,000 --> 00:36:11,000
Fleet

1107
00:36:11,000 --> 00:36:13,000
就是无损的格式的话

1108
00:36:14,000 --> 00:36:16,000
就 PNG 是现在主流的应用的

1109
00:36:16,000 --> 00:36:17,000
无损无损压缩的格式

1110
00:36:18,000 --> 00:36:19,000
然后这个叫做 Fleet

1111
00:36:19,000 --> 00:36:19,000
Fleet

1112
00:36:21,000 --> 00:36:21,000
Fleet

1113
00:36:22,000 --> 00:36:23,000
Free Lossless Image Format

1114
00:36:24,000 --> 00:36:25,000
它的牛逼之处

1115
00:36:25,000 --> 00:36:28,000
在于它压出来的文件比 PNG 要小

1116
00:36:31,000 --> 00:36:31,000
它甚至

1117
00:36:31,000 --> 00:36:34,000
它甚至连比一个

1118
00:36:34,000 --> 00:36:35,000
它比你很多都小

1119
00:36:35,000 --> 00:36:37,000
它比 PNG 小

1120
00:36:37,000 --> 00:36:39,000
大概 2% 30%

1121
00:36:42,000 --> 00:36:43,000
然后比其他的那些无损格式

1122
00:36:43,000 --> 00:36:44,000
也是大概小

1123
00:36:44,000 --> 00:36:46,000
最多 30%左右

1124
00:36:47,000 --> 00:36:47,000
还挺有意思的

1125
00:36:48,000 --> 00:36:49,000
因为无损的话

1126
00:36:49,000 --> 00:36:51,000
就是压缩的比例不是太高吗

1127
00:36:52,000 --> 00:36:55,000
35%小于平常的 PNG 图片

1128
00:36:59,000 --> 00:37:01,000
你说在网络越来越快的时代

1129
00:37:03,000 --> 00:37:06,000
压缩变小有非常大的意义吗

1130
00:37:07,000 --> 00:37:08,000
有啊

1131
00:37:08,000 --> 00:37:10,000
特别是在移动设备上面

1132
00:37:10,000 --> 00:37:12,000
这个带宽还是不太够的

1133
00:37:13,000 --> 00:37:15,000
因为主要网络情况不稳定

1134
00:37:15,000 --> 00:37:16,000
你说在家用宽带

1135
00:37:16,000 --> 00:37:18,000
可能体会不到这种区别

1136
00:37:18,000 --> 00:37:21,000
但是你在 3 G 4 G 上

1137
00:37:21,000 --> 00:37:22,000
特殊信号不太好的时候

1138
00:37:22,000 --> 00:37:25,000
能小一点还是挺有用的

1139
00:37:26,000 --> 00:37:29,000
而且对于 CDN 来说

1140
00:37:29,000 --> 00:37:30,000
就直接是浅

1141
00:37:31,000 --> 00:37:33,000
因为现在很多比如说图片网站

1142
00:37:33,000 --> 00:37:35,000
要花一很大一部分钱

1143
00:37:35,000 --> 00:37:36,000
到 CDN 的流量上面去

1144
00:37:38,000 --> 00:37:42,000
如果说你能够平平小个 20%的话

1145
00:37:42,000 --> 00:37:43,000
等于你 CDN 的费用

1146
00:37:43,000 --> 00:37:45,000
大了八折了

1147
00:37:45,000 --> 00:37:47,000
这还是很大一笔钱的

1148
00:37:47,000 --> 00:37:48,000
游戏也是

1149
00:37:48,000 --> 00:37:49,000
但这东西

1150
00:37:49,000 --> 00:37:53,000
游戏里面的材质采用更小的

1151
00:37:54,000 --> 00:37:56,000
更高压缩比的压缩算法的话

1152
00:37:56,000 --> 00:37:59,000
整个游戏蓝装文件就少了很多

1153
00:38:00,000 --> 00:38:00,000
没错

1154
00:38:02,000 --> 00:38:04,000
但这种问题的麻烦之处

1155
00:38:04,000 --> 00:38:05,000
在于它是一个新的格式

1156
00:38:06,000 --> 00:38:08,000
可能这个就是 compatibility 不是很好

1157
00:38:08,000 --> 00:38:10,000
就是设备的支持都会有点问题

1158
00:38:11,000 --> 00:38:12,000
之前那个

1159
00:38:12,000 --> 00:38:15,000
Google 不是做了一个叫做 webP 的格式吗

1160
00:38:15,000 --> 00:38:17,000
就用于替代 JPG 和 PNG

1161
00:38:17,000 --> 00:38:21,000
因为 webP 它是可以从无损到有损之间是可以调的

1162
00:38:22,000 --> 00:38:23,000
然后就出现一个问题

1163
00:38:24,000 --> 00:38:27,000
比如说你用 Chrome 浏览器访问 Google 的很多网站

1164
00:38:27,000 --> 00:38:31,000
它会默认去给你提供 webP 格式的图片

1165
00:38:32,000 --> 00:38:35,000
那么你点右键令称为图片的时候

1166
00:38:35,000 --> 00:38:36,000
就会发现

1167
00:38:36,000 --> 00:38:38,000
存下的文件其他东西打不开

1168
00:38:39,000 --> 00:38:40,000
你就比较尴尬了

1169
00:38:40,000 --> 00:38:42,000
你想在其他地方里面用的话

1170
00:38:43,000 --> 00:38:43,000
对吧

1171
00:38:43,000 --> 00:38:45,000
其实 flip 也有这个问题

1172
00:38:45,000 --> 00:38:46,000
没错

1173
00:38:46,000 --> 00:38:46,000
对

1174
00:38:46,000 --> 00:38:47,000
就会有同样的问题

1175
00:38:47,000 --> 00:38:50,000
所以我觉得可能它的应用场景还是在

1176
00:38:50,000 --> 00:38:54,000
比如说你写这个 iOS 或者是这个安卓的这个

1177
00:38:55,000 --> 00:38:55,000
App 的时候

1178
00:38:56,000 --> 00:38:57,000
你可以控制解码器那一段

1179
00:38:58,000 --> 00:39:02,000
你说你为了减小你这个资源文件的大小

1180
00:39:02,000 --> 00:39:05,000
那说你可以用这种自定义的这种格式

1181
00:39:05,000 --> 00:39:07,000
然后你自己再做一个解压的

1182
00:39:08,000 --> 00:39:10,000
但这就引入另外一个问题了

1183
00:39:10,000 --> 00:39:13,000
就说一般说像 PNG 这种标准格式的

1184
00:39:13,000 --> 00:39:16,000
就这种比较流行的格式的解码器可能系统自带了

1185
00:39:16,000 --> 00:39:16,000
对吧

1186
00:39:16,000 --> 00:39:17,000
对

1187
00:39:17,000 --> 00:39:18,000
你不用自己再写一个

1188
00:39:18,000 --> 00:39:19,000
但如果你用 flip 的话

1189
00:39:19,000 --> 00:39:22,000
你现在再搭一个 Decoder 进去

1190
00:39:22,000 --> 00:39:23,000
或者再等 50 年

1191
00:39:24,000 --> 00:39:24,000
对

1192
00:39:25,000 --> 00:39:28,000
这就可能就有点问题了

1193
00:39:28,000 --> 00:39:28,000
对

1194
00:39:29,000 --> 00:39:33,000
下一则新闻是 163

1195
00:39:33,000 --> 00:39:35,000
就网易邮箱好像最近出大事了

1196
00:39:35,000 --> 00:39:36,000
吴涛你你知道怎么回事吗

1197
00:39:36,000 --> 00:39:38,000
有很多朋友的重招

1198
00:39:38,000 --> 00:39:39,000
就是

1199
00:39:39,000 --> 00:39:43,000
但是具体的情况我们其实并不很清楚

1200
00:39:43,000 --> 00:39:44,000
因为这是一次比较

1201
00:39:45,000 --> 00:39:46,000
友善加引号的行为

1202
00:39:46,000 --> 00:39:49,000
就是在邮箱

1203
00:39:50,000 --> 00:39:52,000
在这个事故发生的第一时间

1204
00:39:52,000 --> 00:39:54,000
被厂商得到通报

1205
00:39:54,000 --> 00:39:57,000
然后集中的具体技术细节并没有被披露出来

1206
00:39:57,000 --> 00:39:59,000
当然如果你费心去找的话

1207
00:39:59,000 --> 00:39:59,000
肯定是可以找到的

1208
00:39:59,000 --> 00:40:01,000
但我们两个没有费心去找

1209
00:40:01,000 --> 00:40:01,000
所以

1210
00:40:02,000 --> 00:40:06,000
仅就知道的情况来看是 163.com

1211
00:40:08,000 --> 00:40:12,000
为域名的免费邮箱被泄露了大概 1 亿

1212
00:40:13,000 --> 00:40:19,000
I repeat 1 亿个账号的用户名和密码

1213
00:40:19,000 --> 00:40:21,000
当然密码不是名闻

1214
00:40:21,000 --> 00:40:24,000
而是一个 MD 5 hash

1215
00:40:24,000 --> 00:40:26,000
等于名闻没什么区别

1216
00:40:26,000 --> 00:40:28,000
没有加 sort

1217
00:40:28,000 --> 00:40:29,000
这是最大的问题

1218
00:40:29,000 --> 00:40:32,000
就是又没加 sort

1219
00:40:32,000 --> 00:40:33,000
就是 MD 5

1220
00:40:33,000 --> 00:40:34,000
那基本上等于名闻了

1221
00:40:34,000 --> 00:40:35,000
没错

1222
00:40:36,000 --> 00:40:37,000
如果各位不知道的话

1223
00:40:37,000 --> 00:40:40,000
MD 5 虽然是一个

1224
00:40:40,000 --> 00:40:42,000
Hash 算法

1225
00:40:42,000 --> 00:40:45,000
虽然理论上是单向的

1226
00:40:45,000 --> 00:40:46,000
但是

1227
00:40:46,000 --> 00:40:50,000
如果你在网上比如搜 reverseMD 5

1228
00:40:50,000 --> 00:40:52,000
就可以搜到一大堆彩虹表的网站

1229
00:40:52,000 --> 00:40:53,000
就是

1230
00:40:54,000 --> 00:40:56,000
事先已经把 MD 5 算出来

1231
00:40:56,000 --> 00:40:57,000
然后你输入一个 MD 5

1232
00:40:57,000 --> 00:41:02,000
就可以找到对应的原来的名闻的这么一个网站

1233
00:41:02,000 --> 00:41:07,000
就算什么叫做 MD 5 cracking as a service

1234
00:41:07,000 --> 00:41:08,000
对

1235
00:41:08,000 --> 00:41:08,000
没错

1236
00:41:09,000 --> 00:41:11,000
就是一个硕大无缝的 Dictionary

1237
00:41:11,000 --> 00:41:13,000
一个硕大无缝的哈希表

1238
00:41:14,000 --> 00:41:14,000
逆向哈希表

1239
00:41:14,000 --> 00:41:15,000
对

1240
00:41:17,000 --> 00:41:18,000
然后很多朋友就中招了

1241
00:41:18,000 --> 00:41:22,000
因为 163 作为一个历史

1242
00:41:22,000 --> 00:41:25,000
在中文互联网世界历史最为悠久的

1243
00:41:26,000 --> 00:41:27,000
免费外部邮件服务

1244
00:41:27,000 --> 00:41:30,000
并且迄今还在活跃的免费外部邮件服务

1245
00:41:30,000 --> 00:41:32,000
是很多很多用户

1246
00:41:32,000 --> 00:41:33,000
国内用户都在用的

1247
00:41:35,000 --> 00:41:36,000
可能没有 KQ 多吧

1248
00:41:36,000 --> 00:41:37,000
但

1249
00:41:38,000 --> 00:41:38,000
没有

1250
00:41:38,000 --> 00:41:41,000
KQ 是目前国内第一大邮件服务商

1251
00:41:41,000 --> 00:41:42,000
应该没有 QQ 多

1252
00:41:42,000 --> 00:41:44,000
但是仍旧是非常大的用户群

1253
00:41:44,000 --> 00:41:50,000
因为那个时候 QQ 还叫 IoicQ 的时代

1254
00:41:51,000 --> 00:41:52,000
163 就已经推出邮箱了

1255
00:41:52,000 --> 00:41:54,000
我还记得 163 是

1256
00:41:54,000 --> 00:41:57,000
当时中国电信最常见的拨号上网号码

1257
00:41:57,000 --> 00:41:59,000
当然我一般都是拨 169

1258
00:42:00,000 --> 00:42:03,000
163 的费用要比 169 高

1259
00:42:03,000 --> 00:42:04,000
是这样吗

1260
00:42:05,000 --> 00:42:08,000
对 163 更贵 169 便宜一些

1261
00:42:08,000 --> 00:42:08,000
没错

1262
00:42:09,000 --> 00:42:09,000
但问题是

1263
00:42:09,000 --> 00:42:11,000
但这两个不是一回事

1264
00:42:11,000 --> 00:42:15,000
169 的是 163 网易的 163 是 163.com

1265
00:42:15,000 --> 00:42:15,000
对

1266
00:42:15,000 --> 00:42:18,000
然后你说 163 电信是 163.net

1267
00:42:18,000 --> 00:42:19,000
不是

1268
00:42:19,000 --> 00:42:21,000
我的意思是 163.com

1269
00:42:21,000 --> 00:42:22,000
为什么会被人记住

1270
00:42:22,000 --> 00:42:24,000
就是因为那个时候中国电信

1271
00:42:25,000 --> 00:42:26,000
用 163 作为上网号码

1272
00:42:26,000 --> 00:42:30,000
然后网易就非常机制地注册 163.com

1273
00:42:30,000 --> 00:42:31,000
然后

1274
00:42:31,000 --> 00:42:32,000
它不是注册的

1275
00:42:32,000 --> 00:42:34,000
我听说它是丁三十很

1276
00:42:34,000 --> 00:42:37,000
他那里连哄带骗弄来的

1277
00:42:37,000 --> 00:42:38,000
对就他好吧

1278
00:42:38,000 --> 00:42:39,000
那是 reference

1279
00:42:39,000 --> 00:42:41,000
他弄来的 163.com

1280
00:42:41,000 --> 00:42:42,000
对

1281
00:42:42,000 --> 00:42:42,000
弄死

1282
00:42:42,000 --> 00:42:46,000
做为他的网易的主力域名

1283
00:42:46,000 --> 00:42:47,000
他当时还有好多

1284
00:42:47,000 --> 00:42:49,000
他有什么 126.com 的

1285
00:42:49,000 --> 00:42:49,000
对

1286
00:42:49,000 --> 00:42:51,000
什么 yea.net

1287
00:42:51,000 --> 00:42:51,000
对

1288
00:42:51,000 --> 00:42:51,000
好像是这样

1289
00:42:51,000 --> 00:42:52,000
对

1290
00:42:52,000 --> 00:42:53,000
那他搞了一堆

1291
00:42:53,000 --> 00:42:54,000
一大堆

1292
00:42:55,000 --> 00:42:55,000
对

1293
00:42:55,000 --> 00:42:57,000
他搞了一个邮箱服务集群

1294
00:42:57,000 --> 00:42:57,000
对

1295
00:42:57,000 --> 00:42:58,000
这个意思

1296
00:42:58,000 --> 00:43:00,000
他还是非常会押宝的

1297
00:43:01,000 --> 00:43:03,000
把鸡蛋分散的放在了

1298
00:43:03,000 --> 00:43:04,000
他买了很多篮子

1299
00:43:04,000 --> 00:43:06,000
拿来尽可能的搜刮鸡蛋

1300
00:43:07,000 --> 00:43:10,000
但是 163.com 无论如何是被人

1301
00:43:10,000 --> 00:43:12,000
作为名记的一个人

1302
00:43:12,000 --> 00:43:14,000
因为那个时候你一上网就要播 163.com

1303
00:43:14,000 --> 00:43:15,000
然后你就

1304
00:43:15,000 --> 00:43:18,000
163.com 就非常理顺承当地

1305
00:43:18,000 --> 00:43:18,000
control

1306
00:43:18,000 --> 00:43:20,000
control 再 enter 就进去了

1307
00:43:20,000 --> 00:43:20,000
对吧

1308
00:43:21,000 --> 00:43:22,000
对

1309
00:43:22,000 --> 00:43:23,000
当然了

1310
00:43:23,000 --> 00:43:27,000
他们光辉的历史也成为他现在一个

1311
00:43:27,000 --> 00:43:29,000
光辉的历史变成了历史的包袱

1312
00:43:31,000 --> 00:43:33,000
现在因为用户量这么大

1313
00:43:33,000 --> 00:43:35,000
然后他当时做什么网易通行证

1314
00:43:36,000 --> 00:43:37,000
还是把这个打通了

1315
00:43:38,000 --> 00:43:38,000
打通了

1316
00:43:38,000 --> 00:43:40,000
但是我不知道他们内部怎么样

1317
00:43:40,000 --> 00:43:42,000
但是可以一个比较合理的猜测

1318
00:43:42,000 --> 00:43:45,000
是因为网易通行证是一个比较古老的系统

1319
00:43:46,000 --> 00:43:49,000
他可能比说他以前依赖的像 MD 5 单向

1320
00:43:49,000 --> 00:43:51,000
这个 HASH 不加盐的价格

1321
00:43:51,000 --> 00:43:52,000
他可能就改不过来了

1322
00:43:52,000 --> 00:43:53,000
对

1323
00:43:53,000 --> 00:43:56,000
就给之后的安全造成了隐患

1324
00:43:56,000 --> 00:43:58,000
一切问题都是历史医的问题

1325
00:43:59,000 --> 00:44:00,000
是不是

1326
00:44:00,000 --> 00:44:02,000
这个有时候还是要狠下心来把

1327
00:44:03,000 --> 00:44:04,000
legacy 干掉的

1328
00:44:04,000 --> 00:44:05,000
因为当时

1329
00:44:05,000 --> 00:44:08,000
因为之后的数据库里面的这一块

1330
00:44:08,000 --> 00:44:10,000
我自认为还挺安全的

1331
00:44:10,000 --> 00:44:10,000
我做的

1332
00:44:11,000 --> 00:44:12,000
原来如此

1333
00:44:12,000 --> 00:44:13,000
原来这一块是知乎的

1334
00:44:13,000 --> 00:44:14,000
知乎

1335
00:44:14,000 --> 00:44:15,000
好吧

1336
00:44:15,000 --> 00:44:16,000
海口夸在这了

1337
00:44:16,000 --> 00:44:16,000
各位

1338
00:44:16,000 --> 00:44:18,000
将来知乎如果被脱裤的话

1339
00:44:18,000 --> 00:44:20,000
各位可以来找个路算财

1340
00:44:20,000 --> 00:44:21,000
我就可以明确的说

1341
00:44:21,000 --> 00:44:23,000
知乎的数据密码是

1342
00:44:23,000 --> 00:44:26,000
shar 1 之后再有一层 bcraft

1343
00:44:26,000 --> 00:44:26,000
啊

1344
00:44:27,000 --> 00:44:29,000
然后脱裤就脱裤吧

1345
00:44:29,000 --> 00:44:31,000
反正算不出密码来无所谓

1346
00:44:31,000 --> 00:44:31,000
awesome

1347
00:44:31,000 --> 00:44:34,000
I just got a nerdgasm

1348
00:44:34,000 --> 00:44:37,000
所以我每次都很开心

1349
00:44:37,000 --> 00:44:39,000
知乎我不知道有没有被脱裤

1350
00:44:39,000 --> 00:44:40,000
也可能有人拿过了

1351
00:44:41,000 --> 00:44:42,000
但是燃病了是吧

1352
00:44:42,000 --> 00:44:43,000
脱裤卸也没用

1353
00:44:43,000 --> 00:44:44,000
对燃病了

1354
00:44:44,000 --> 00:44:46,000
你解不出来有什么用呢

1355
00:44:46,000 --> 00:44:47,000
忽然之间

1356
00:44:49,000 --> 00:44:51,000
耳机里传来了某种自豪感

1357
00:44:52,000 --> 00:44:57,000
自豪感扬一个房间

1358
00:44:58,000 --> 00:44:59,000
好吧

1359
00:44:59,000 --> 00:45:01,000
下一条新闻是

1360
00:45:02,000 --> 00:45:05,000
Windows 7 这么老的石头还有什么问题

1361
00:45:05,000 --> 00:45:07,000
Windows 7 老吗

1362
00:45:07,000 --> 00:45:08,000
很老了

1363
00:45:08,000 --> 00:45:10,000
都 8.1

1364
00:45:10,000 --> 00:45:11,000
9 先都 10 了

1365
00:45:11,000 --> 00:45:12,000
我靠

1366
00:45:12,000 --> 00:45:13,000
没有 9 是吧

1367
00:45:13,000 --> 00:45:13,000
有 9 吗

1368
00:45:13,000 --> 00:45:14,000
没有 9

1369
00:45:15,000 --> 00:45:15,000
跳过了 9

1370
00:45:15,000 --> 00:45:17,000
Windows 7 8 9

1371
00:45:17,000 --> 00:45:18,000
有没有

1372
00:45:18,000 --> 00:45:19,000
7 8 9 吃了

1373
00:45:19,000 --> 00:45:21,000
所以没有 9

1374
00:45:22,000 --> 00:45:22,000
好吧

1375
00:45:22,000 --> 00:45:23,000
没有 9

1376
00:45:25,000 --> 00:45:26,000
他出了什么问题

1377
00:45:26,000 --> 00:45:27,000
Windows 7

1378
00:45:27,000 --> 00:45:30,000
Windows 7 在前一阵子出了一个非常大的幺蛾子

1379
00:45:31,000 --> 00:45:32,000
一堆人

1380
00:45:32,000 --> 00:45:34,000
比较听话

1381
00:45:34,000 --> 00:45:38,000
老实与时之近注重安全的 Windows 用户

1382
00:45:41,000 --> 00:45:43,000
把自动升级打开了

1383
00:45:43,000 --> 00:45:43,000
然后

1384
00:45:44,000 --> 00:45:47,000
猛然发现今天的自动升级有点不一样

1385
00:45:47,000 --> 00:45:48,000
就是

1386
00:45:48,000 --> 00:45:50,000
标题是一串乱码

1387
00:45:50,000 --> 00:45:52,000
下载离职也是一串乱码

1388
00:45:53,000 --> 00:45:57,000
Booting 的内容描述更是一大堆乱码

1389
00:45:57,000 --> 00:45:58,000
然后人们就开始慌张了

1390
00:45:58,000 --> 00:45:59,000
因为

1391
00:46:00,000 --> 00:46:01,000
有些人是在

1392
00:46:01,000 --> 00:46:03,000
Booting 已经自动被打好之后才发现的

1393
00:46:04,000 --> 00:46:05,000
然后

1394
00:46:05,000 --> 00:46:07,000
坊间留言四起就说

1395
00:46:07,000 --> 00:46:08,000
Windows 已经被攻陷了

1396
00:46:08,000 --> 00:46:09,000
我们

1397
00:46:09,000 --> 00:46:10,000
Everyone is doomed

1398
00:46:11,000 --> 00:46:12,000
那种感觉

1399
00:46:12,000 --> 00:46:13,000
然后

1400
00:46:13,000 --> 00:46:14,000
就有这么严重吗

1401
00:46:15,000 --> 00:46:16,000
什么意思

1402
00:46:17,000 --> 00:46:18,000
实际上到底影响怎么样

1403
00:46:18,000 --> 00:46:21,000
最终结果其实是

1404
00:46:22,000 --> 00:46:23,000
微软也找了一个替兑

1405
00:46:23,000 --> 00:46:26,000
就是说我们一个搞测试的实习生

1406
00:46:26,000 --> 00:46:29,000
把一个内部测试

1407
00:46:29,000 --> 00:46:32,000
升级系统的 Booting 放了出来

1408
00:46:32,000 --> 00:46:33,000
这个 Booting 是完全无害的

1409
00:46:33,000 --> 00:46:34,000
就是一个

1410
00:46:34,000 --> 00:46:35,000
就之所以说

1411
00:46:35,000 --> 00:46:38,000
因为那些东西只是站位服而已

1412
00:46:38,000 --> 00:46:40,000
所以实际上没有什么伤害

1413
00:46:41,000 --> 00:46:43,000
然后这个 Booting 也很快被从网站上撤掉了

1414
00:46:43,000 --> 00:46:45,000
所以它没有造成任何实际伤害

1415
00:46:45,000 --> 00:46:46,000
只不过

1416
00:46:47,000 --> 00:46:48,000
这个

1417
00:46:48,000 --> 00:46:50,000
The moral of the story 就是

1418
00:46:50,000 --> 00:46:52,000
这件事情带给我们的思考

1419
00:46:52,000 --> 00:46:55,000
就是如果这件事情不甚是一个

1420
00:46:56,000 --> 00:46:58,000
真正的实际发生了的

1421
00:46:59,000 --> 00:47:01,000
安全灾难的话

1422
00:47:01,000 --> 00:47:01,000
那

1423
00:47:02,000 --> 00:47:04,000
其后果可能是非常非常严重

1424
00:47:06,000 --> 00:47:09,000
所以现在要有大面积有效的杀伤力

1425
00:47:09,000 --> 00:47:11,000
就是想办法把 Windows 再 update

1426
00:47:11,000 --> 00:47:12,000
这东西搞下来是吧

1427
00:47:12,000 --> 00:47:13,000
没错

1428
00:47:13,000 --> 00:47:16,000
如果你想要真正的让全世界陷入团化的话

1429
00:47:17,000 --> 00:47:20,000
可以试一试把 Windows 的 update 黑掉

1430
00:47:20,000 --> 00:47:22,000
这感觉是 Sky Night 要做的事情

1431
00:47:22,000 --> 00:47:23,000
说不定 Sky Night 已经做了

1432
00:47:25,000 --> 00:47:26,000
我们不知道而已

1433
00:47:26,000 --> 00:47:27,000
今天是万圣节

1434
00:47:27,000 --> 00:47:30,000
我们可以讲一点鬼故事

1435
00:47:30,000 --> 00:47:31,000
spooky 的东西

1436
00:47:31,000 --> 00:47:32,000
想看看这个世界

1437
00:47:32,000 --> 00:47:35,000
就我们所熟知的这个电

1438
00:47:35,000 --> 00:47:38,000
计算机世界将以如何方式终结

1439
00:47:39,000 --> 00:47:39,000
错了错了

1440
00:47:39,000 --> 00:47:41,000
我们今天录制的时候是万圣节

1441
00:47:41,000 --> 00:47:42,000
发布的时候就不是

1442
00:47:42,000 --> 00:47:43,000
啊 OK

1443
00:47:44,000 --> 00:47:44,000
嗯

1444
00:47:44,000 --> 00:47:45,000
我已经过期了

1445
00:47:45,000 --> 00:47:46,000
无效

1446
00:47:47,000 --> 00:47:48,000
好忧伤

1447
00:47:50,000 --> 00:47:53,000
说这件事的一个主要的原因是因为

1448
00:47:53,000 --> 00:47:55,000
提一个点就是做我们

1449
00:47:55,000 --> 00:47:57,000
就是做这个系统设计也好

1450
00:47:57,000 --> 00:47:58,000
做价格也好

1451
00:48:00,000 --> 00:48:02,000
你永远永远要假设这个网络是

1452
00:48:02,000 --> 00:48:03,000
不可靠不可信的

1453
00:48:03,000 --> 00:48:04,000
对

1454
00:48:05,000 --> 00:48:05,000
对

1455
00:48:05,000 --> 00:48:07,000
那么你之后要做的一些事情就很重要了

1456
00:48:07,000 --> 00:48:08,000
比如说

1457
00:48:08,000 --> 00:48:09,000
你可以

1458
00:48:09,000 --> 00:48:11,000
你要得假设你下回来的

1459
00:48:11,000 --> 00:48:12,000
就是通过

1460
00:48:12,000 --> 00:48:14,000
网络传回来的文件是被搞过的

1461
00:48:14,000 --> 00:48:15,000
那你必须要缓缓验证

1462
00:48:16,000 --> 00:48:17,000
你必须要有这个什么

1463
00:48:17,000 --> 00:48:18,000
Verification

1464
00:48:18,000 --> 00:48:20,000
就是哈希通过哈希的方式也好

1465
00:48:20,000 --> 00:48:22,000
还是什么别的签名的方式也好

1466
00:48:22,000 --> 00:48:23,000
对吧

1467
00:48:23,000 --> 00:48:23,000
没错

1468
00:48:23,000 --> 00:48:25,000
你得有这么一个过程

1469
00:48:25,000 --> 00:48:26,000
永远不要说

1470
00:48:26,000 --> 00:48:29,000
因为我这个文件是通过 HTCPS 下载的

1471
00:48:29,000 --> 00:48:31,000
所以它就没有问题了

1472
00:48:31,000 --> 00:48:32,000
嗯

1473
00:48:32,000 --> 00:48:32,000
这很难讲

1474
00:48:34,000 --> 00:48:34,000
对

1475
00:48:34,000 --> 00:48:35,000
但

1476
00:48:36,000 --> 00:48:37,000
其实反过来说

1477
00:48:37,000 --> 00:48:40,000
这个信任链是一换套一换的

1478
00:48:40,000 --> 00:48:43,000
如果你说每一换都可能出问题的话

1479
00:48:43,000 --> 00:48:46,000
那最终的结果就是回到我们

1480
00:48:46,000 --> 00:48:49,000
上上上期的那个

1481
00:48:50,000 --> 00:48:54,000
口号就是 Trust no one even your compiler

1482
00:48:54,000 --> 00:48:56,000
你可能连硬件都不能相信的

1483
00:48:56,000 --> 00:48:57,000
最后你要相信谁

1484
00:48:57,000 --> 00:48:59,000
你总要在一个地方终结说

1485
00:48:59,000 --> 00:49:01,000
这个地方我没有办法

1486
00:49:01,000 --> 00:49:02,000
我只能选择相信

1487
00:49:03,000 --> 00:49:04,000
但

1488
00:49:04,000 --> 00:49:05,000
不能

1489
00:49:06,000 --> 00:49:07,000
对

1490
00:49:07,000 --> 00:49:08,000
这没办法

1491
00:49:08,000 --> 00:49:09,000
但你能说尽可能

1492
00:49:09,000 --> 00:49:09,000
但是你

1493
00:49:09,000 --> 00:49:11,000
至少可以避免的情况下

1494
00:49:11,000 --> 00:49:11,000
对

1495
00:49:11,000 --> 00:49:14,000
这些非常明显的可能出幺蛾子的信源

1496
00:49:14,000 --> 00:49:15,000
一定要加以警惕

1497
00:49:16,000 --> 00:49:17,000
没错

1498
00:49:17,000 --> 00:49:17,000
对

1499
00:49:18,000 --> 00:49:20,000
但是 Windows 7 的 update

1500
00:49:20,000 --> 00:49:22,000
就所谓 Misfire 事件

1501
00:49:22,000 --> 00:49:23,000
也还是

1502
00:49:25,000 --> 00:49:26,000
给我们提了个醒

1503
00:49:26,000 --> 00:49:27,000
就是这种

1504
00:49:27,000 --> 00:49:31,000
单一的升级的源头

1505
00:49:32,000 --> 00:49:34,000
如果真的出了灾难

1506
00:49:34,000 --> 00:49:36,000
是有可能非常灾难性的

1507
00:49:37,000 --> 00:49:37,000
打击好广

1508
00:49:38,000 --> 00:49:39,000
App Store 被打中了

1509
00:49:39,000 --> 00:49:40,000
然后那个什么

1510
00:49:40,000 --> 00:49:42,000
APT 的 source 也被你搞了

1511
00:49:42,000 --> 00:49:43,000
对

1512
00:49:43,000 --> 00:49:47,000
这就是为什么我们要提倡反托拉斯

1513
00:49:47,000 --> 00:49:49,000
为什么要加速加快市场竞争

1514
00:49:49,000 --> 00:49:52,000
为什么要提供鼓励自由市场

1515
00:49:52,000 --> 00:49:54,000
就是要尽量减少这种单点

1516
00:49:57,000 --> 00:49:59,000
Single point failure 的出现

1517
00:49:59,000 --> 00:50:01,000
最好你是坚持是什么

1518
00:50:01,000 --> 00:50:03,000
就是分裂派的

1519
00:50:03,000 --> 00:50:03,000
没错

1520
00:50:03,000 --> 00:50:04,000
去中心化

1521
00:50:04,000 --> 00:50:05,000
这个应该是

1522
00:50:05,000 --> 00:50:05,000
对

1523
00:50:05,000 --> 00:50:08,000
你现在叫什么来着

1524
00:50:08,000 --> 00:50:11,000
Decentralized

1525
00:50:12,000 --> 00:50:12,000
比如说 Git

1526
00:50:12,000 --> 00:50:13,000
对吧

1527
00:50:13,000 --> 00:50:15,000
如果你用 SVN 的话

1528
00:50:15,000 --> 00:50:16,000
你的 reportal 垮了

1529
00:50:16,000 --> 00:50:17,000
你就完蛋了

1530
00:50:17,000 --> 00:50:19,000
用 Git 的话就没有这个问题

1531
00:50:19,000 --> 00:50:20,000
还在

1532
00:50:20,000 --> 00:50:20,000
对吧

1533
00:50:20,000 --> 00:50:21,000
没错

1534
00:50:21,000 --> 00:50:22,000
然后如果你

1535
00:50:23,000 --> 00:50:26,000
如果我们人类多用几个操作系统的话

1536
00:50:26,000 --> 00:50:29,000
不要说什么一个操作系统统一天下

1537
00:50:29,000 --> 00:50:32,000
也许如果真的出了什么非常大的幺蛾子

1538
00:50:32,000 --> 00:50:34,000
也许还是有一部分人可以

1539
00:50:35,000 --> 00:50:37,000
继续正常的从容使用他们的电脑

1540
00:50:37,000 --> 00:50:38,000
对吧

1541
00:50:38,000 --> 00:50:39,000
或者反过来

1542
00:50:39,000 --> 00:50:40,000
也许

1543
00:50:41,000 --> 00:50:43,000
补丁的发布过程

1544
00:50:43,000 --> 00:50:47,000
如果要减少补丁发布过程的危险性的话

1545
00:50:47,000 --> 00:50:49,000
也可以把发布的服务器洒落在世界各地

1546
00:50:50,000 --> 00:50:51,000
这样比较

1547
00:50:52,000 --> 00:50:55,000
但是如果攻击者从补丁的源头

1548
00:50:55,000 --> 00:50:56,000
源在马上

1549
00:50:56,000 --> 00:50:57,000
hate 的话

1550
00:50:57,000 --> 00:50:58,000
那还是

1551
00:50:58,000 --> 00:50:59,000
无计于是

1552
00:51:00,000 --> 00:51:00,000
对

1553
00:51:00,000 --> 00:51:02,000
你只要有 spoff

1554
00:51:02,000 --> 00:51:04,000
single point failure

1555
00:51:04,000 --> 00:51:06,000
总是会有这种安全隐患出现

1556
00:51:06,000 --> 00:51:06,000
对

1557
00:51:06,000 --> 00:51:07,000
没错

1558
00:51:08,000 --> 00:51:09,000
所以没办法

1559
00:51:10,000 --> 00:51:13,000
我忽然想到一个就是我们公司在搞一个叫做

1560
00:51:13,000 --> 00:51:14,000
spot 运动

1561
00:51:14,000 --> 00:51:16,000
single point of truth

1562
00:51:16,000 --> 00:51:18,000
就是要把

1563
00:51:18,000 --> 00:51:20,000
因为我公司有一个非常复杂的 ticket system

1564
00:51:20,000 --> 00:51:23,000
那个面向用户有一套 ticket

1565
00:51:23,000 --> 00:51:25,000
然后面向内部有一套 ticket

1566
00:51:26,000 --> 00:51:26,000
对

1567
00:51:28,000 --> 00:51:30,000
然后面向程序员又有一套 ticket

1568
00:51:30,000 --> 00:51:33,000
这三个 ticket system 是彼此不通的

1569
00:51:33,000 --> 00:51:34,000
然后有一个叫做

1570
00:51:35,000 --> 00:51:36,000
spot 的运动

1571
00:51:36,000 --> 00:51:37,000
就是要把所有的

1572
00:51:38,000 --> 00:51:42,000
这个 ticket 汇总到同一个平台上

1573
00:51:42,000 --> 00:51:44,000
然后只在一个 ticket 里面

1574
00:51:44,000 --> 00:51:47,000
追踪所有整个项目的进程和文档什么的

1575
00:51:48,000 --> 00:51:48,000
这个 spot 是

1576
00:51:48,000 --> 00:51:49,000
怎么做呢

1577
00:51:49,000 --> 00:51:51,000
single point of truth

1578
00:51:51,000 --> 00:51:57,000
其实就是把人手工把所有 ticket 汇总到一起

1579
00:51:57,000 --> 00:51:59,000
是一个非常浩瀚的工程

1580
00:51:59,000 --> 00:51:59,000
但是

1581
00:52:00,000 --> 00:52:01,000
已经做了三五周了

1582
00:52:02,000 --> 00:52:04,000
还可能只完成一半了

1583
00:52:04,000 --> 00:52:04,000
但我觉得

1584
00:52:06,000 --> 00:52:06,000
很快了

1585
00:52:06,000 --> 00:52:08,000
三五周都完成了一半了

1586
00:52:09,000 --> 00:52:10,000
毕竟是小公司

1587
00:52:10,000 --> 00:52:11,000
然后

1588
00:52:12,000 --> 00:52:13,000
agile 一点

1589
00:52:13,000 --> 00:52:13,000
对

1590
00:52:13,000 --> 00:52:15,000
然后这个让我想到的是

1591
00:52:15,000 --> 00:52:21,000
跟刚才要避免单一点失败的思路

1592
00:52:21,000 --> 00:52:23,000
其实是相反的

1593
00:52:23,000 --> 00:52:24,000
就是信息要尽量集中起来

1594
00:52:24,000 --> 00:52:28,000
但是安全性要尽量分散开

1595
00:52:29,000 --> 00:52:30,000
对

1596
00:52:30,000 --> 00:52:31,000
下次不知道新闻

1597
00:52:31,000 --> 00:52:33,000
下次讨论是这个 Lcap 10

1598
00:52:33,000 --> 00:52:35,000
就是 OS 10 10.11

1599
00:52:35,000 --> 00:52:37,000
它出了也挺久了

1600
00:52:37,000 --> 00:52:37,000
我们都装

1601
00:52:37,000 --> 00:52:38,000
你装上了吧

1602
00:52:38,000 --> 00:52:39,000
当然装了

1603
00:52:39,000 --> 00:52:40,000
对

1604
00:52:40,000 --> 00:52:40,000
我也装

1605
00:52:40,000 --> 00:52:42,000
然后其中一个对开发者来说

1606
00:52:42,000 --> 00:52:44,000
对我们这种经常使命令行的人来说

1607
00:52:44,000 --> 00:52:45,000
有一个比较大的改动

1608
00:52:46,000 --> 00:52:49,000
就是它的人称叫做 Rootless

1609
00:52:49,000 --> 00:52:50,000
无根的特性

1610
00:52:50,000 --> 00:52:51,000
无根特性

1611
00:52:51,000 --> 00:52:53,000
也叫做

1612
00:52:53,000 --> 00:52:56,000
System Integrity Protection

1613
00:52:56,000 --> 00:52:58,000
系统完整性保护

1614
00:52:58,000 --> 00:52:58,000
对

1615
00:52:58,000 --> 00:52:59,000
对

1616
00:52:59,000 --> 00:53:00,000
这个翻译的还是挺好的

1617
00:53:01,000 --> 00:53:02,000
简单来说

1618
00:53:04,000 --> 00:53:07,000
在 OS 10 10.11 里面默认情况下

1619
00:53:07,000 --> 00:53:11,000
系统的一些根目录的东西

1620
00:53:11,000 --> 00:53:13,000
就是用户是不能改的

1621
00:53:13,000 --> 00:53:14,000
哪怕是你用 Studio

1622
00:53:14,000 --> 00:53:16,000
用 Root User 的上面

1623
00:53:16,000 --> 00:53:18,000
也是不能改动那些目录的

1624
00:53:18,000 --> 00:53:19,000
里面的内容的

1625
00:53:19,000 --> 00:53:21,000
比如说根下面的 User

1626
00:53:21,000 --> 00:53:23,000
跟下面的 Bin

1627
00:53:23,000 --> 00:53:25,000
这些比较系统核心的营友

1628
00:53:25,000 --> 00:53:26,000
你是没有办法去改动它的

1629
00:53:27,000 --> 00:53:29,000
主要是四个地方

1630
00:53:29,000 --> 00:53:30,000
Slash System

1631
00:53:30,000 --> 00:53:31,000
Slash Bin

1632
00:53:31,000 --> 00:53:31,000
Slash User

1633
00:53:31,000 --> 00:53:32,000
Slash Sbin

1634
00:53:33,000 --> 00:53:36,000
如果你对 Posix 系统的标准命令数

1635
00:53:36,000 --> 00:53:37,000
比较熟悉的话

1636
00:53:37,000 --> 00:53:38,000
基本上就是 Bin User

1637
00:53:38,000 --> 00:53:40,000
Sbin 三个被保护起来

1638
00:53:40,000 --> 00:53:40,000
然后

1639
00:53:40,000 --> 00:53:42,000
Slash System 是

1640
00:53:42,000 --> 00:53:44,000
OS 10 自由的一个

1641
00:53:45,000 --> 00:53:48,000
放 System 本间的地方

1642
00:53:48,000 --> 00:53:49,000
对

1643
00:53:50,000 --> 00:53:53,000
所以其实我们上次有聊到过

1644
00:53:53,000 --> 00:53:55,000
应该是在本主上前几期

1645
00:53:55,000 --> 00:53:57,000
有一期聊到过这个事

1646
00:53:57,000 --> 00:53:59,000
不然吴涛你怎么看这个特性

1647
00:54:02,000 --> 00:54:03,000
我觉得这是

1648
00:54:05,000 --> 00:54:07,000
苹果自

1649
00:54:08,000 --> 00:54:09,000
把这个

1650
00:54:09,000 --> 00:54:11,000
Slash User

1651
00:54:11,000 --> 00:54:11,000
Slash Local

1652
00:54:11,000 --> 00:54:12,000
Slash Bin

1653
00:54:13,000 --> 00:54:15,000
改名为 Slash Application 之后

1654
00:54:15,000 --> 00:54:17,000
做了第二件好事

1655
00:54:18,000 --> 00:54:20,000
这一图就是防止用户轰掉自己的脚

1656
00:54:21,000 --> 00:54:21,000
对

1657
00:54:21,000 --> 00:54:24,000
你一不小心来个

1658
00:54:24,000 --> 00:54:26,000
RM 空格斜杠

1659
00:54:26,000 --> 00:54:27,000
就回车

1660
00:54:28,000 --> 00:54:30,000
或者是更凶狠一点

1661
00:54:30,000 --> 00:54:31,000
RM 空格横线

1662
00:54:31,000 --> 00:54:34,000
RF 空格斜杠回车

1663
00:54:34,000 --> 00:54:35,000
你就挂了

1664
00:54:35,000 --> 00:54:36,000
对

1665
00:54:37,000 --> 00:54:38,000
其实

1666
00:54:38,000 --> 00:54:41,000
以上两个语句请不要在家尝试

1667
00:54:41,000 --> 00:54:42,000
对

1668
00:54:44,000 --> 00:54:45,000
不要随便听那个功课

1669
00:54:46,000 --> 00:54:47,000
不要在家听那个功课

1670
00:54:48,000 --> 00:54:50,000
你用 10.11 就无所谓了

1671
00:54:51,000 --> 00:54:51,000
对

1672
00:54:51,000 --> 00:54:52,000
然后

1673
00:54:52,000 --> 00:54:56,000
其实归根结的原因还是早期 Unix 的用户

1674
00:54:59,000 --> 00:55:01,000
在吃他们自己的狗粮的时候

1675
00:55:01,000 --> 00:55:04,000
采用一种非常实用主义者的态度

1676
00:55:04,000 --> 00:55:04,000
就是

1677
00:55:06,000 --> 00:55:08,000
一个非常简单的原则

1678
00:55:08,000 --> 00:55:09,000
就是

1679
00:55:10,000 --> 00:55:11,000
用户只有两级

1680
00:55:11,000 --> 00:55:12,000
一个是

1681
00:55:13,000 --> 00:55:13,000
一个是

1682
00:55:14,000 --> 00:55:16,000
非常普通的用户

1683
00:55:16,000 --> 00:55:17,000
另外一个就是 root 用户

1684
00:55:17,000 --> 00:55:19,000
然后 root 用户就是可以做一切事情

1685
00:55:21,000 --> 00:55:21,000
句号

1686
00:55:21,000 --> 00:55:24,000
就没有再详细的层级了

1687
00:55:24,000 --> 00:55:26,000
在没有 ACL 时代

1688
00:55:27,000 --> 00:55:28,000
没有什么

1689
00:55:29,000 --> 00:55:31,000
一个复杂的窗口

1690
00:55:31,000 --> 00:55:33,000
可以让你选这个用户

1691
00:55:33,000 --> 00:55:33,000
可以干什么

1692
00:55:33,000 --> 00:55:35,000
可以具体的做哪些的时代

1693
00:55:36,000 --> 00:55:36,000
基本上

1694
00:55:37,000 --> 00:55:40,000
这个文件的权限加上 root

1695
00:55:40,000 --> 00:55:43,000
就是你能对系统做的最好的保护

1696
00:55:43,000 --> 00:55:45,000
然后这一套东西被

1697
00:55:47,000 --> 00:55:49,000
OS X 搬过来之后

1698
00:55:49,000 --> 00:55:51,000
基本上还是

1699
00:55:52,000 --> 00:55:53,000
保持现状一直到现在

1700
00:55:53,000 --> 00:55:56,000
而绝大多数用户来说

1701
00:55:57,000 --> 00:55:59,000
他们是不会意识到这一点的

1702
00:55:59,000 --> 00:56:01,000
但是只要你稍微折腾一下这个系统

1703
00:56:03,000 --> 00:56:04,000
你会觉得它

1704
00:56:04,000 --> 00:56:08,000
还是相对来说比较 fragile

1705
00:56:08,000 --> 00:56:09,000
就是

1706
00:56:09,000 --> 00:56:10,000
如果你对

1707
00:56:11,000 --> 00:56:13,000
使用 root 之后会干什么

1708
00:56:14,000 --> 00:56:16,000
会可能造出什么样的危害

1709
00:56:16,000 --> 00:56:17,000
没有一个清醒的认识的话

1710
00:56:17,000 --> 00:56:19,000
你还是很容易封掉自己的脚

1711
00:56:19,000 --> 00:56:22,000
而这个新的特性的话就是

1712
00:56:23,000 --> 00:56:26,000
更进一步帮助用户来杜绝这一点

1713
00:56:26,000 --> 00:56:27,000
对

1714
00:56:27,000 --> 00:56:31,000
其实我觉得这个特性最大的一个好处

1715
00:56:31,000 --> 00:56:33,000
就像我在 24 期里面讨论过的

1716
00:56:33,000 --> 00:56:35,000
叫做 immutable system

1717
00:56:35,000 --> 00:56:36,000
就是不可变的系统

1718
00:56:37,000 --> 00:56:38,000
什么意思呢

1719
00:56:38,000 --> 00:56:40,000
就是说整个系统的那些文件

1720
00:56:40,000 --> 00:56:41,000
经常都是不可变的

1721
00:56:41,000 --> 00:56:43,000
就是你不可以修改它的

1722
00:56:43,000 --> 00:56:44,000
你唯一能做的

1723
00:56:44,000 --> 00:56:45,000
比如说你系统升级的时候

1724
00:56:45,000 --> 00:56:47,000
就是替换掉整个系统的镜像

1725
00:56:47,000 --> 00:56:48,000
从而可以保证

1726
00:56:48,000 --> 00:56:50,000
因为类似有点像 chrome OS 那种

1727
00:56:51,000 --> 00:56:52,000
就系统是整个本身是非常安全的

1728
00:56:52,000 --> 00:56:54,000
因为过去像 Windows 也好

1729
00:56:54,000 --> 00:56:56,000
还是之前的 OS 也好

1730
00:56:56,000 --> 00:56:59,000
一个最大的不安全因素

1731
00:56:59,000 --> 00:57:00,000
刚才说你说用户

1732
00:57:01,000 --> 00:57:03,000
不小心操作失误

1733
00:57:03,000 --> 00:57:05,000
删掉核心的文件

1734
00:57:05,000 --> 00:57:06,000
导致系统无法使用之外

1735
00:57:06,000 --> 00:57:08,000
这种可能也只有我们这种

1736
00:57:09,000 --> 00:57:10,000
人才会干得出来

1737
00:57:10,000 --> 00:57:12,000
但是对于

1738
00:57:12,000 --> 00:57:13,000
普通用户来讲

1739
00:57:13,000 --> 00:57:14,000
可能最重要的是一个

1740
00:57:14,000 --> 00:57:15,000
反而是安全性的考虑

1741
00:57:15,000 --> 00:57:17,000
就是说一些恶意软件

1742
00:57:17,000 --> 00:57:19,000
能不能通过修改

1743
00:57:19,000 --> 00:57:21,000
你系统一些重要文件的方式

1744
00:57:22,000 --> 00:57:24,000
隐藏在你的系统里面去

1745
00:57:24,000 --> 00:57:25,000
比如说一开机就启动一个什么东西

1746
00:57:25,000 --> 00:57:27,000
然后你没有办法知道

1747
00:57:27,000 --> 00:57:29,000
或者没办法删除它对吧

1748
00:57:29,000 --> 00:57:29,000
对

1749
00:57:29,000 --> 00:57:33,000
但有了 SIP 的保护的话

1750
00:57:33,000 --> 00:57:35,000
就可以杜绝这种事情发生

1751
00:57:35,000 --> 00:57:38,000
也可以说某种程度上说

1752
00:57:39,000 --> 00:57:40,000
没有通过沙盒机制

1753
00:57:41,000 --> 00:57:45,000
实现了系统核心部件的安全性

1754
00:57:45,000 --> 00:57:46,000
没错

1755
00:57:47,000 --> 00:57:49,000
从今以后如果一个用户

1756
00:57:49,000 --> 00:57:52,000
一个程序在要做什么的时候

1757
00:57:52,000 --> 00:57:53,000
跳出来让你输入 root 密码

1758
00:57:54,000 --> 00:57:57,000
99%的人包括程序员都会

1759
00:57:58,000 --> 00:58:02,000
不加思索地直接输入自己的用户密码

1760
00:58:02,000 --> 00:58:02,000
对吧

1761
00:58:02,000 --> 00:58:04,000
但是在 SIP 出来之前

1762
00:58:04,000 --> 00:58:06,000
这个其实是一个非常危险的举动

1763
00:58:06,000 --> 00:58:07,000
因为

1764
00:58:08,000 --> 00:58:09,000
随时肯定给你中了什么密码

1765
00:58:09,000 --> 00:58:10,000
你不知道他要干什么

1766
00:58:10,000 --> 00:58:11,000
对吧

1767
00:58:11,000 --> 00:58:13,000
OS X 并不会告诉你他具体要干嘛

1768
00:58:13,000 --> 00:58:15,000
而 OS X 自己也不知道

1769
00:58:15,000 --> 00:58:16,000
他具体要干嘛

1770
00:58:16,000 --> 00:58:18,000
他只是在说这个玩意要权限

1771
00:58:18,000 --> 00:58:20,000
那我问给不给权限吗

1772
00:58:20,000 --> 00:58:21,000
用户说给

1773
00:58:21,000 --> 00:58:22,000
然后我靠

1774
00:58:22,000 --> 00:58:23,000
机器挂了

1775
00:58:24,000 --> 00:58:24,000
对吧

1776
00:58:25,000 --> 00:58:26,000
其实 Windows 上面也有这个问题

1777
00:58:26,000 --> 00:58:28,000
就是 Windows 叫什么 UAF

1778
00:58:28,000 --> 00:58:29,000
还是叫什么玩意

1779
00:58:29,000 --> 00:58:30,000
UAF

1780
00:58:30,000 --> 00:58:31,000
对

1781
00:58:31,000 --> 00:58:32,000
它跳出来

1782
00:58:32,000 --> 00:58:33,000
Windows 比较

1783
00:58:34,000 --> 00:58:35,000
怎么说比较啰嗦的一点

1784
00:58:35,000 --> 00:58:38,000
在这里它会有一个 details

1785
00:58:38,000 --> 00:58:39,000
你可以点

1786
00:58:39,000 --> 00:58:40,000
一点 details

1787
00:58:40,000 --> 00:58:41,000
然后它会说这个程序

1788
00:58:41,000 --> 00:58:42,000
它位于哪个

1789
00:58:43,000 --> 00:58:45,000
路径之下

1790
00:58:45,000 --> 00:58:46,000
想要干嘛

1791
00:58:46,000 --> 00:58:47,000
或者它想要改什么

1792
00:58:47,000 --> 00:58:48,000
它会跟你说一句

1793
00:58:49,000 --> 00:58:51,000
但是也许一开始你会点

1794
00:58:51,000 --> 00:58:52,000
如果你是一个程序员的话

1795
00:58:52,000 --> 00:58:53,000
或者如果你是一个

1796
00:58:54,000 --> 00:58:55,000
会读所有

1797
00:58:55,000 --> 00:58:56,000
会读用户学习里面

1798
00:58:56,000 --> 00:58:58,000
每一句话的德国人的话

1799
00:58:58,000 --> 00:58:59,000
你可能会去读

1800
00:58:59,000 --> 00:59:00,000
这个里面到底写了什么

1801
00:59:00,000 --> 00:59:02,000
但是在一段时间之后

1802
00:59:02,000 --> 00:59:03,000
你还是会 no brainer 的

1803
00:59:03,000 --> 00:59:05,000
直接点一下允许

1804
00:59:05,000 --> 00:59:05,000
对吧

1805
00:59:06,000 --> 00:59:07,000
对

1806
00:59:07,000 --> 00:59:10,000
所以这是一个典型的技术

1807
00:59:10,000 --> 00:59:12,000
技术思维没有考虑

1808
00:59:13,000 --> 00:59:16,000
心理人的本性的一些东西的设计

1809
00:59:16,000 --> 00:59:18,000
是一个非常失败的产品设计

1810
00:59:18,000 --> 00:59:19,000
但是

1811
00:59:20,000 --> 00:59:21,000
但是好像没什么更好的解决方案

1812
00:59:21,000 --> 00:59:22,000
anyway

1813
00:59:23,000 --> 00:59:24,000
其实我有一个很好

1814
00:59:24,000 --> 00:59:25,000
我有一个很大的问题

1815
00:59:25,000 --> 00:59:28,000
就在 OSX 有了 SIP 特性之后

1816
00:59:29,000 --> 00:59:30,000
我们还要 root 账号干嘛

1817
00:59:30,000 --> 00:59:31,000
没什么用了

1818
00:59:32,000 --> 00:59:34,000
所以应该搞一个 rootless 账号是吧

1819
00:59:34,000 --> 00:59:36,000
rootless 系统

1820
00:59:36,000 --> 00:59:38,000
所以它应该是 rootless 系统

1821
00:59:38,000 --> 00:59:39,000
但是那还要 sudo 干嘛

1822
00:59:41,000 --> 00:59:43,000
好问题

1823
00:59:44,000 --> 00:59:45,000
对吧

1824
00:59:45,000 --> 00:59:46,000
因为其实你用那个

1825
00:59:47,000 --> 00:59:48,000
你本来一个账号

1826
00:59:48,000 --> 00:59:50,000
就只分叫做 administrator

1827
00:59:50,000 --> 00:59:52,000
和 normal user

1828
00:59:52,000 --> 00:59:53,000
两种类型的账号

1829
00:59:53,000 --> 00:59:54,000
对吧

1830
00:59:56,000 --> 00:59:58,000
root 反正也不能做什么

1831
00:59:58,000 --> 01:00:00,000
administrator 干不了的事情

1832
01:00:00,000 --> 01:00:02,000
要它有什么用

1833
01:00:02,000 --> 01:00:04,000
你就直接做一个普通的

1834
01:00:07,000 --> 01:00:08,000
账号系统

1835
01:00:08,000 --> 01:00:09,000
然后不要 sudo 好了

1836
01:00:11,000 --> 01:00:12,000
我觉得可能还是在

1837
01:00:13,000 --> 01:00:15,000
多用户的场景之下

1838
01:00:15,000 --> 01:00:16,000
有一定用途

1839
01:00:16,000 --> 01:00:18,000
就你多用户的情况下

1840
01:00:18,000 --> 01:00:20,000
你用自己账号去做自己的事情

1841
01:00:20,000 --> 01:00:21,000
但你不需要 sudo

1842
01:00:21,000 --> 01:00:25,000
你 sudo 之后才可以去管理别人文件

1843
01:00:25,000 --> 01:00:27,000
如果你是一个管理员的话

1844
01:00:27,000 --> 01:00:29,000
就假如我就说这个问题

1845
01:00:29,000 --> 01:00:32,000
就说 sudo 不是说你变成别的账号吗

1846
01:00:32,000 --> 01:00:33,000
你是变成 root 吗

1847
01:00:33,000 --> 01:00:33,000
对

1848
01:00:34,000 --> 01:00:35,000
但 sudo 也可以变成别的

1849
01:00:35,000 --> 01:00:38,000
就 sudo is another user

1850
01:00:38,000 --> 01:00:40,000
对但基本来说是 sudo

1851
01:00:40,000 --> 01:00:43,000
不加参数的话是 sudo as root

1852
01:00:43,000 --> 01:00:43,000
对吧

1853
01:00:44,000 --> 01:00:45,000
但我就问

1854
01:00:45,000 --> 01:00:46,000
好我的问题就在于

1855
01:00:46,000 --> 01:00:48,000
root 本身还有意义吗

1856
01:00:50,000 --> 01:00:51,000
所以像伍奔图那样

1857
01:00:51,000 --> 01:00:53,000
就完全不适合 root 账号了

1858
01:00:55,000 --> 01:00:57,000
它也有

1859
01:00:57,000 --> 01:00:58,000
只是说默认是

1860
01:00:58,000 --> 01:00:59,000
它没有一个不准登录的

1861
01:00:59,000 --> 01:01:01,000
不准登

1862
01:01:01,000 --> 01:01:03,000
然后你还是可以 sudo 成 root 的

1863
01:01:03,000 --> 01:01:04,000
我就只是好奇

1864
01:01:04,000 --> 01:01:06,000
在有 SIP 的情况下

1865
01:01:06,000 --> 01:01:08,000
要 root 账号本身有什么用

1866
01:01:08,000 --> 01:01:09,000
好像没有什么用

1867
01:01:10,000 --> 01:01:11,000
backward compatibility

1868
01:01:12,000 --> 01:01:13,000
有可能

1869
01:01:13,000 --> 01:01:15,000
因为毕竟它是一个 PostEx 系统

1870
01:01:15,000 --> 01:01:15,000
对没错

1871
01:01:17,000 --> 01:01:20,000
然后还有一个挺好玩的问题

1872
01:01:20,000 --> 01:01:22,000
就是说如果这个系统本来是 emuted 过的话

1873
01:01:23,000 --> 01:01:25,000
其实可以有一个事情可以做就是节省空间

1874
01:01:25,000 --> 01:01:27,000
因为你知道 os 10

1875
01:01:27,000 --> 01:01:29,000
包括现在 windows 也一样

1876
01:01:29,000 --> 01:01:31,000
它是有一个叫做所谓的 recovery partition

1877
01:01:31,000 --> 01:01:32,000
就是恢复

1878
01:01:32,000 --> 01:01:34,000
恢复分区

1879
01:01:34,000 --> 01:01:35,000
对这四个字

1880
01:01:36,000 --> 01:01:39,000
恢复分区

1881
01:01:39,000 --> 01:01:41,000
挥发挥化肥

1882
01:01:41,000 --> 01:01:42,000
挥发挥发之后出现

1883
01:01:42,000 --> 01:01:44,000
恢复分区

1884
01:01:45,000 --> 01:01:47,000
恢复分区

1885
01:01:48,000 --> 01:01:50,000
的一个主要作用就在于你的

1886
01:01:50,000 --> 01:01:52,000
之前在没有 SIP 的情况下

1887
01:01:52,000 --> 01:01:54,000
你把自己脚轰掉

1888
01:01:54,000 --> 01:01:55,000
删掉了这个

1889
01:01:55,000 --> 01:01:57,000
跟系统里面的重要文件之后

1890
01:01:57,000 --> 01:01:59,000
你可以通过 recover partition

1891
01:01:59,000 --> 01:02:01,000
把系统回复到一个可以用的状态

1892
01:02:01,000 --> 01:02:03,000
像前面它有一些可能系统的一些

1893
01:02:04,000 --> 01:02:05,000
核心的文件

1894
01:02:05,000 --> 01:02:07,000
它是在那里还会有个备份的

1895
01:02:07,000 --> 01:02:08,000
对吧

1896
01:02:08,000 --> 01:02:11,000
但如果本身是启用了 SIP

1897
01:02:11,000 --> 01:02:13,000
就是系统的核心部件是不可修改的话

1898
01:02:13,000 --> 01:02:17,000
其实恢复分区就没什么实际的意义了

1899
01:02:18,000 --> 01:02:20,000
因为你可以保证系统本体是不被修改的

1900
01:02:21,000 --> 01:02:25,000
然后就可以把恢复分区干掉

1901
01:02:25,000 --> 01:02:26,000
或者至少重用一部分空间

1902
01:02:27,000 --> 01:02:29,000
通过 hardlink 的方式

1903
01:02:29,000 --> 01:02:29,000
对吧

1904
01:02:29,000 --> 01:02:30,000
这倒是

1905
01:02:30,000 --> 01:02:31,000
hardlink

1906
01:02:32,000 --> 01:02:34,000
不是 hardlink 好像不能跨区

1907
01:02:34,000 --> 01:02:34,000
是吧

1908
01:02:34,000 --> 01:02:35,000
不能跨 partition

1909
01:02:35,000 --> 01:02:39,000
应该是不

1910
01:02:39,000 --> 01:02:41,000
你得先 mount 才能 hardlink

1911
01:02:42,000 --> 01:02:44,000
我不太清楚具体实现方式怎么样子

1912
01:02:45,000 --> 01:02:47,000
但是起码恢复分区是在正常情况下

1913
01:02:47,000 --> 01:02:49,000
是在系统里面看不见的

1914
01:02:49,000 --> 01:02:49,000
对

1915
01:02:49,000 --> 01:02:50,000
所以我在想你问办法

1916
01:02:50,000 --> 01:02:52,000
就是两个重用一下系统

1917
01:02:52,000 --> 01:02:55,000
因为毕竟恢复分区应该还是有个

1918
01:02:55,000 --> 01:02:56,000
几分距大吧

1919
01:02:56,000 --> 01:02:58,000
恢复分区默认不会被 mount 上

1920
01:02:58,000 --> 01:03:00,000
所以其实在系统使用过程中

1921
01:03:00,000 --> 01:03:01,000
它是看不到的

1922
01:03:01,000 --> 01:03:03,000
它是不会被系统看到的

1923
01:03:03,000 --> 01:03:05,000
如果说这个系统本身是保证

1924
01:03:05,000 --> 01:03:06,000
可以不被修改的

1925
01:03:06,000 --> 01:03:08,000
还要那种恢复分区来干嘛

1926
01:03:08,000 --> 01:03:08,000
对

1927
01:03:08,000 --> 01:03:10,000
我又在想这个问题

1928
01:03:10,000 --> 01:03:12,000
是不是就没有什么必要性

1929
01:03:12,000 --> 01:03:14,000
就把恢复分区里面那种放回

1930
01:03:14,000 --> 01:03:15,000
这个更新系统里面就好了

1931
01:03:15,000 --> 01:03:16,000
嗯

1932
01:03:17,000 --> 01:03:18,000
因为恢复分区一个最主要作用

1933
01:03:18,000 --> 01:03:20,000
就是说如果那个

1934
01:03:20,000 --> 01:03:21,000
还有一个就是软件升级的时候

1935
01:03:21,000 --> 01:03:23,000
你可以直接从那安装系统

1936
01:03:23,000 --> 01:03:23,000
对

1937
01:03:23,000 --> 01:03:25,000
这现在好像也没有什么实际的意义

1938
01:03:25,000 --> 01:03:28,000
那个软件是骨丁挂掉的话

1939
01:03:28,000 --> 01:03:29,000
就是说骨丁是一个

1940
01:03:30,000 --> 01:03:30,000
破掉了

1941
01:03:30,000 --> 01:03:31,000
坏骨丁的话

1942
01:03:31,000 --> 01:03:33,000
那你可以通过恢复分区来恢复

1943
01:03:35,000 --> 01:03:36,000
Anyway 这还是一个挺

1944
01:03:36,000 --> 01:03:37,000
对比较 detail 的

1945
01:03:37,000 --> 01:03:38,000
但

1946
01:03:38,000 --> 01:03:39,000
对

1947
01:03:41,000 --> 01:03:42,000
对

1948
01:03:42,000 --> 01:03:46,000
当然在这个 SIP 的保护下面

1949
01:03:46,000 --> 01:03:49,000
还是有几个地方是可以被改动的

1950
01:03:49,000 --> 01:03:50,000
他们仍旧是系统一部分

1951
01:03:50,000 --> 01:03:52,000
只不过这部分就是系统特意流出来

1952
01:03:52,000 --> 01:03:53,000
让你去改的

1953
01:03:53,000 --> 01:03:54,000
就如果你给

1954
01:03:54,000 --> 01:03:55,000
User 那一块吗

1955
01:03:55,000 --> 01:03:55,000
对

1956
01:03:55,000 --> 01:03:57,000
如果你的程序员

1957
01:03:57,000 --> 01:03:57,000
是 User 对

1958
01:03:57,000 --> 01:03:58,000
User 那一块

1959
01:03:58,000 --> 01:03:59,000
呃

1960
01:03:59,000 --> 01:04:00,000
是 User Local

1961
01:04:00,000 --> 01:04:01,000
只有 User Local

1962
01:04:01,000 --> 01:04:02,000
User Local 对

1963
01:04:02,000 --> 01:04:03,000
sorry

1964
01:04:03,000 --> 01:04:04,000
然后

1965
01:04:04,000 --> 01:04:06,000
这其实要涉及到另外一个概念

1966
01:04:06,000 --> 01:04:09,000
叫做 File System Hierarchy Standard

1967
01:04:09,000 --> 01:04:09,000
对吧

1968
01:04:09,000 --> 01:04:10,000
对

1969
01:04:11,000 --> 01:04:12,000
这其实是一个很扯的事情

1970
01:04:12,000 --> 01:04:13,000
就是说

1971
01:04:13,000 --> 01:04:14,000
起码在 Linux 上面

1972
01:04:14,000 --> 01:04:17,000
它是有这么一个规范的

1973
01:04:17,000 --> 01:04:17,000
规范就是说

1974
01:04:17,000 --> 01:04:20,000
整个系统的根目录下面这些文件

1975
01:04:20,000 --> 01:04:21,000
数应该是长什么样

1976
01:04:21,000 --> 01:04:24,000
然后各个目录里面放什么东西

1977
01:04:24,000 --> 01:04:25,000
比如说就常常我们刚刚提到

1978
01:04:25,000 --> 01:04:27,000
像跟下 bin

1979
01:04:27,000 --> 01:04:28,000
跟下 boot

1980
01:04:29,000 --> 01:04:31,000
跟下 etc etc

1981
01:04:32,000 --> 01:04:33,000
跟下这个

1982
01:04:34,000 --> 01:04:35,000
espin 啊

1983
01:04:35,000 --> 01:04:36,000
这些东西

1984
01:04:36,000 --> 01:04:37,000
boot 是 Sandaloo

1985
01:04:37,000 --> 01:04:37,000
不是吧

1986
01:04:39,000 --> 01:04:40,000
boot

1987
01:04:40,000 --> 01:04:41,000
可能是 Linux 才有吧

1988
01:04:41,000 --> 01:04:42,000
这个有一个

1989
01:04:42,000 --> 01:04:43,000
其实

1990
01:04:43,000 --> 01:04:45,000
有一本书叫做 Linux Haters Manual

1991
01:04:45,000 --> 01:04:46,000
如果各位有兴趣的话

1992
01:04:46,000 --> 01:04:47,000
一定要去看一看

1993
01:04:47,000 --> 01:04:49,000
里面对这个标准

1994
01:04:49,000 --> 01:04:51,000
所谓的这个

1995
01:04:51,000 --> 01:04:54,000
命目录数标准

1996
01:04:54,000 --> 01:04:55,000
大家吐槽

1997
01:04:55,000 --> 01:04:57,000
就是虽然有这么一个标准存在

1998
01:04:57,000 --> 01:04:58,000
它名字叫标准

1999
01:04:58,000 --> 01:04:59,000
它名字叫标准

2000
01:04:59,000 --> 01:05:00,000
不叫标准

2001
01:05:00,000 --> 01:05:01,000
但反正

2002
01:05:01,000 --> 01:05:02,000
是叫 standard

2003
01:05:02,000 --> 01:05:03,000
有这么一个 standard 的存在

2004
01:05:03,000 --> 01:05:06,000
但所有人都只是把它当作 reference 来用

2005
01:05:06,000 --> 01:05:06,000
就是

2006
01:05:08,000 --> 01:05:10,000
你只是模糊地知道这个

2007
01:05:10,000 --> 01:05:13,000
目录大概可以拿来干什么

2008
01:05:13,000 --> 01:05:14,000
但现在的实际情况就是

2009
01:05:14,000 --> 01:05:17,000
没有两个 Linux 发行板的

2010
01:05:18,000 --> 01:05:21,000
这个目录数的形状是一模一样

2011
01:05:22,000 --> 01:05:23,000
这是一个非常

2012
01:05:23,000 --> 01:05:26,000
但有些很扯的一些问题

2013
01:05:26,000 --> 01:05:27,000
比如说像那个

2014
01:05:27,000 --> 01:05:28,000
我问你一下

2015
01:05:28,000 --> 01:05:30,000
你知不知道 Bin 和 Sbin 的区别是什么

2016
01:05:30,000 --> 01:05:31,000
Sbin 是 Super Bin

2017
01:05:31,000 --> 01:05:33,000
只有 Super User 可以用 Bin

2018
01:05:34,000 --> 01:05:35,000
他们两个哪些

2019
01:05:35,000 --> 01:05:38,000
放哪些界限是什么

2020
01:05:38,000 --> 01:05:40,000
Sbin 里面比如说

2021
01:05:41,000 --> 01:05:42,000
reboot 在 Sbin 里面

2022
01:05:44,000 --> 01:05:47,000
然后 Bin 里面是什么 VIA 之类的东西

2023
01:05:50,000 --> 01:05:51,000
如果你用起来

2024
01:05:51,000 --> 01:05:53,000
可能脚被轰掉的东西

2025
01:05:53,000 --> 01:05:54,000
都在 Sbin 里面

2026
01:05:54,000 --> 01:05:55,000
理论上是这样的

2027
01:05:55,000 --> 01:05:56,000
但是实际上也并不是这样的

2028
01:05:56,000 --> 01:05:59,000
就是 Bin 里面还是有很多非常危险的工具

2029
01:06:00,000 --> 01:06:00,000
但

2030
01:06:02,000 --> 01:06:04,000
然后再问你一个

2031
01:06:04,000 --> 01:06:05,000
Bin 和 User Bin 有什么区别

2032
01:06:07,000 --> 01:06:10,000
你应该问 User Bin 和 User Local Bin 有什么区别

2033
01:06:13,000 --> 01:06:15,000
Bin 里面就是 slashbin 里面

2034
01:06:15,000 --> 01:06:18,000
应该是系统的核心工具

2035
01:06:18,000 --> 01:06:21,000
而 User slash user slash bin 里面则是

2036
01:06:22,000 --> 01:06:24,000
就是在

2037
01:06:24,000 --> 01:06:25,000
比较不那么

2038
01:06:26,000 --> 01:06:28,000
其实在 BSD 上比较分的清楚

2039
01:06:28,000 --> 01:06:28,000
就是在

2040
01:06:29,000 --> 01:06:33,000
kernel space 里面的工具都在 slashbin

2041
01:06:33,000 --> 01:06:36,000
在 User space 里面都在 User slash bin

2042
01:06:36,000 --> 01:06:38,000
然后 User 是还是蛮好的区分

2043
01:06:38,000 --> 01:06:41,000
然后 User slash Local slash bin

2044
01:06:41,000 --> 01:06:45,000
才是用户自己装的第三方应用程序应该去的

2045
01:06:46,000 --> 01:06:47,000
对

2046
01:06:47,000 --> 01:06:48,000
如果你要去说的话

2047
01:06:48,000 --> 01:06:51,000
其实这个东西还是比较可以理解的

2048
01:06:51,000 --> 01:06:53,000
但是在执行的时候

2049
01:06:53,000 --> 01:06:54,000
就会出现各种边界模糊的

2050
01:06:54,000 --> 01:06:56,000
非常多的幺蛾子

2051
01:06:57,000 --> 01:07:00,000
然后你完全不明白你这样分完之后有什么好处

2052
01:07:04,000 --> 01:07:05,000
治愈了处女座

2053
01:07:08,000 --> 01:07:11,000
或者说最开始的设计者是个处女座

2054
01:07:11,000 --> 01:07:14,000
然后他的设计导致了后来的所有的处女座

2055
01:07:14,000 --> 01:07:16,000
Linux user 都转向了 Windows

2056
01:07:18,000 --> 01:07:20,000
因为你会觉得我靠最开始

2057
01:07:21,000 --> 01:07:23,000
你看我刚才说的这三个分类是不是很有逻辑

2058
01:07:24,000 --> 01:07:27,000
但是你去看任何一个实际系统

2059
01:07:27,000 --> 01:07:29,000
你会觉得我靠怎么每一个工具都

2060
01:07:30,000 --> 01:07:33,000
每一个地方都放一些不该放的那种工具

2061
01:07:33,000 --> 01:07:33,000
对吧

2062
01:07:33,000 --> 01:07:35,000
就乱七八糟的

2063
01:07:35,000 --> 01:07:36,000
这是一个阴谋

2064
01:07:36,000 --> 01:07:40,000
这是 Linux 使用者希望处女座别用来给他用的系统

2065
01:07:42,000 --> 01:07:45,000
不过早期他还是有他一定的客观的硬件基础

2066
01:07:45,000 --> 01:07:48,000
早期像 Linux 那些磁盘空间很小

2067
01:07:48,000 --> 01:07:50,000
几百 K 的磁盘空间

2068
01:07:51,000 --> 01:07:52,000
几兆的是很大的

2069
01:07:52,000 --> 01:07:56,000
后来有些应用他就没有办法在

2070
01:07:57,000 --> 01:08:00,000
第一个驱动的 first drive 放下所有的 bin 那些东西

2071
01:08:00,000 --> 01:08:01,000
对

2072
01:08:01,000 --> 01:08:03,000
被迫把一些像后来才出现 user bin

2073
01:08:03,000 --> 01:08:07,000
它可以挂载到不同的一个磁盘驱动器上面去

2074
01:08:07,000 --> 01:08:09,000
所以才导致今天这个局面

2075
01:08:09,000 --> 01:08:12,000
后来我的理解就是很后

2076
01:08:12,000 --> 01:08:14,000
之后觉得说我们要这样来区分一下

2077
01:08:14,000 --> 01:08:16,000
因为过去是这样的

2078
01:08:16,000 --> 01:08:17,000
其实变得很奇怪

2079
01:08:17,000 --> 01:08:19,000
所以现在有一些发行

2080
01:08:19,000 --> 01:08:20,000
就是那个发行板

2081
01:08:20,000 --> 01:08:22,000
他们在做一个 unify 的趋势

2082
01:08:22,000 --> 01:08:27,000
就是简化像刚才讲的 bin 和 user bin 的区别

2083
01:08:27,000 --> 01:08:29,000
因为觉得没什么必要了

2084
01:08:29,000 --> 01:08:30,000
因为现在磁盘空间都很大

2085
01:08:30,000 --> 01:08:31,000
对吧

2086
01:08:31,000 --> 01:08:33,000
其实 OS 10 就是做了这件事情

2087
01:08:33,000 --> 01:08:36,000
他非常勇敢的把 bin 这种非常反二进制

2088
01:08:36,000 --> 01:08:39,000
这种非常反正常人非常 geek 的名字

2089
01:08:40,000 --> 01:08:42,000
换成了 applications

2090
01:08:42,000 --> 01:08:43,000
对吧

2091
01:08:43,000 --> 01:08:45,000
这个就更大的改变了

2092
01:08:45,000 --> 01:08:47,000
因为过去说我们像 Linux 上去

2093
01:08:47,000 --> 01:08:50,000
一个应用一个 software package

2094
01:08:50,000 --> 01:08:55,000
他是要拆成好多小组件分到不同的地方

2095
01:08:55,000 --> 01:08:59,000
比如说你可执行的 Binary 的文件

2096
01:08:59,000 --> 01:09:01,000
会放在 bin 或者 user bin 或者 local bin

2097
01:09:01,000 --> 01:09:03,000
根据你安装的来源不同

2098
01:09:03,000 --> 01:09:07,000
然后他的文档会放在这个什么 Main 里面

2099
01:09:07,000 --> 01:09:08,000
是什么

2100
01:09:08,000 --> 01:09:09,000
没给我公布来的

2101
01:09:09,000 --> 01:09:11,000
文档是

2102
01:09:11,000 --> 01:09:13,000
user slash share

2103
01:09:13,000 --> 01:09:15,000
应该是 share 和 main

2104
01:09:16,000 --> 01:09:17,000
之类的

2105
01:09:17,000 --> 01:09:17,000
对

2106
01:09:17,000 --> 01:09:17,000
user share

2107
01:09:17,000 --> 01:09:20,000
他的什么 log 文件

2108
01:09:21,000 --> 01:09:23,000
又是像 var 的 log 里面

2109
01:09:23,000 --> 01:09:25,000
然后他的一些其他配置文件

2110
01:09:25,000 --> 01:09:30,000
是在 ADTC 下面 slash 什么一些目录里面

2111
01:09:30,000 --> 01:09:32,000
就非常就分得很散

2112
01:09:32,000 --> 01:09:33,000
像现在像 debian

2113
01:09:33,000 --> 01:09:36,000
wbunt 都是坚持这种做法

2114
01:09:36,000 --> 01:09:38,000
其实像 OS 10 这种说

2115
01:09:38,000 --> 01:09:40,000
我不要你们分这么散

2116
01:09:40,000 --> 01:09:42,000
你一个应用就老老实实成一个 package

2117
01:09:42,000 --> 01:09:42,000
对吧

2118
01:09:42,000 --> 01:09:43,000
一个 app

2119
01:09:43,000 --> 01:09:43,000
bundle

2120
01:09:43,000 --> 01:09:46,000
一个目录就是一个应用

2121
01:09:46,000 --> 01:09:48,000
然后一个应用就一个 bundle 这样

2122
01:09:48,000 --> 01:09:50,000
这也有他的优点

2123
01:09:50,000 --> 01:09:50,000
就各有好处

2124
01:09:51,000 --> 01:09:53,000
就是说从应用性的角度来讲

2125
01:09:53,000 --> 01:09:56,000
肯定可能觉得后一种会比较高级一点

2126
01:09:56,000 --> 01:10:00,000
但是从系统重用和处理做的角度来看

2127
01:10:00,000 --> 01:10:03,000
可能觉得前一种会好一些是吧

2128
01:10:03,000 --> 01:10:03,000
对

2129
01:10:04,000 --> 01:10:05,000
你是按照他的用途分类

2130
01:10:06,000 --> 01:10:10,000
还是按照他的使用的主题分类

2131
01:10:10,000 --> 01:10:12,000
不过其实我自己在

2132
01:10:12,000 --> 01:10:16,000
就我自己在像 vps 上面的做法

2133
01:10:16,000 --> 01:10:18,000
也是经过了很多变迁

2134
01:10:19,000 --> 01:10:22,000
最开始的时候可能遵循 Linux

2135
01:10:22,000 --> 01:10:24,000
file system 和 RK standard 的方式

2136
01:10:24,000 --> 01:10:26,000
会把一些自己编译的

2137
01:10:26,000 --> 01:10:27,000
或者说空安装的软件放在比如说

2138
01:10:27,000 --> 01:10:29,000
user local 里面

2139
01:10:29,000 --> 01:10:30,000
各个包里面是吧

2140
01:10:30,000 --> 01:10:32,000
bin 或者是 etc 里面去

2141
01:10:33,000 --> 01:10:34,000
但其实后来发现

2142
01:10:34,000 --> 01:10:36,000
就是不行

2143
01:10:36,000 --> 01:10:37,000
太麻烦了

2144
01:10:37,000 --> 01:10:40,000
我就放那个 slash opt

2145
01:10:40,000 --> 01:10:41,000
就是 optional

2146
01:10:41,000 --> 01:10:43,000
然后每一个应用

2147
01:10:43,000 --> 01:10:45,000
建一个目录把东西都塞在里面去

2148
01:10:45,000 --> 01:10:47,000
这样发现管理起来是更加简单的

2149
01:10:47,000 --> 01:10:49,000
其实我刚才就想吐槽说

2150
01:10:49,000 --> 01:10:51,000
我靠还有两个

2151
01:10:51,000 --> 01:10:55,000
我们之前说了这个 userbin

2152
01:10:55,000 --> 01:10:56,000
bin 和 user localbin

2153
01:10:56,000 --> 01:10:58,000
都还听起来像模像样

2154
01:10:58,000 --> 01:11:02,000
etc 和 opt 是什么鬼

2155
01:11:02,000 --> 01:11:02,000
对吧

2156
01:11:03,000 --> 01:11:04,000
什么是 etc

2157
01:11:04,000 --> 01:11:06,000
optional 我靠

2158
01:11:06,000 --> 01:11:10,000
难道 user localbin 里面的东西不是 optional 的吗

2159
01:11:10,000 --> 01:11:11,000
难道

2160
01:11:12,000 --> 01:11:13,000
而且难道什么

2161
01:11:14,000 --> 01:11:16,000
对于 apache configuration

2162
01:11:17,000 --> 01:11:19,000
不应该有一个 dedicated location 吗

2163
01:11:19,000 --> 01:11:21,000
为什么要把它放在 etc 里面

2164
01:11:21,000 --> 01:11:23,000
就一种 what the fuck 的感觉

2165
01:11:26,000 --> 01:11:26,000
对

2166
01:11:26,000 --> 01:11:29,000
整个 fhs 它规约

2167
01:11:29,000 --> 01:11:31,000
其实都很是一个 avatory 的东西

2168
01:11:31,000 --> 01:11:31,000
对

2169
01:11:31,000 --> 01:11:32,000
然后就是说因为

2170
01:11:33,000 --> 01:11:36,000
历史严格或者是过去遵守了这么多年

2171
01:11:36,000 --> 01:11:39,000
约定俗成变成了这么一个很奇怪的

2172
01:11:39,000 --> 01:11:41,000
没有什么逻辑和理由的怪胎

2173
01:11:42,000 --> 01:11:44,000
我还蛮支持很多现在很多发行板

2174
01:11:44,000 --> 01:11:45,000
在做一些尝试

2175
01:11:45,000 --> 01:11:46,000
把它这个东西尽量简化

2176
01:11:46,000 --> 01:11:49,000
像那边说像 OS 10 的方式去看齐

2177
01:11:49,000 --> 01:11:50,000
没错

2178
01:11:52,000 --> 01:11:56,000
说回这个 aptime 的 sip

2179
01:11:56,000 --> 01:12:00,000
它所给你的官方推荐的四个

2180
01:12:00,000 --> 01:12:03,000
放你自己写的程序的地方是

2181
01:12:03,000 --> 01:12:05,000
一个是 applications

2182
01:12:05,000 --> 01:12:06,000
slash applications

2183
01:12:08,000 --> 01:12:10,000
跟目录下面的 applications

2184
01:12:11,000 --> 01:12:15,000
而不是用户自己的目录下面的 applications

2185
01:12:16,000 --> 01:12:18,000
对这经常造成一个问题

2186
01:12:18,000 --> 01:12:19,000
比如说你这个账号

2187
01:12:19,000 --> 01:12:21,000
这个电脑不是你一个人用

2188
01:12:21,000 --> 01:12:23,000
或者说你这个电脑有两个账号的话

2189
01:12:23,000 --> 01:12:23,000
对

2190
01:12:23,000 --> 01:12:25,000
你是安装给大多数用户

2191
01:12:25,000 --> 01:12:27,000
还是安装给所有用户的差别

2192
01:12:28,000 --> 01:12:30,000
不是它没有这个选项

2193
01:12:30,000 --> 01:12:31,000
你只能安装给

2194
01:12:32,000 --> 01:12:33,000
我现在 applications

2195
01:12:33,000 --> 01:12:36,000
就 slash applications 里面的那些 bundle

2196
01:12:36,000 --> 01:12:37,000
只能有两种情况

2197
01:12:37,000 --> 01:12:40,000
属于某一个安装时候它的账户

2198
01:12:41,000 --> 01:12:42,000
和属于 root

2199
01:12:44,000 --> 01:12:45,000
对

2200
01:12:45,000 --> 01:12:46,000
不我的意思是

2201
01:12:48,000 --> 01:12:51,000
官方推荐的四个安装 app 的地方

2202
01:12:51,000 --> 01:12:56,000
并不包括自己的 home

2203
01:12:56,000 --> 01:12:58,000
目录下面的 slash applications

2204
01:12:59,000 --> 01:13:01,000
但其实你是可以这么干的

2205
01:13:01,000 --> 01:13:02,000
但是如果你这么干的话

2206
01:13:02,000 --> 01:13:06,000
你这个 app 只有当前用户可以用

2207
01:13:08,000 --> 01:13:09,000
你都可以用

2208
01:13:09,000 --> 01:13:12,000
都是 global readable 的

2209
01:13:12,000 --> 01:13:14,000
只是说不可以删掉而已

2210
01:13:14,000 --> 01:13:15,000
OK

2211
01:13:16,000 --> 01:13:16,000
对

2212
01:13:17,000 --> 01:13:19,000
不这个 SIP 还有一个事

2213
01:13:19,000 --> 01:13:23,000
就是对于我们用 homebrew 的用户来讲

2214
01:13:23,000 --> 01:13:24,000
有超级坑爹的事情

2215
01:13:24,000 --> 01:13:25,000
就是如果你之前用的 homebrew

2216
01:13:26,000 --> 01:13:28,000
你是升级安装的 10.11

2217
01:13:28,000 --> 01:13:29,000
而不是覆盖安装的话

2218
01:13:29,000 --> 01:13:31,000
你可能之前都有 user local 目录了

2219
01:13:32,000 --> 01:13:33,000
然后就可以把它全新改一下

2220
01:13:33,000 --> 01:13:35,000
不太可能出现问题

2221
01:13:36,000 --> 01:13:37,000
就不用 studio 了

2222
01:13:37,000 --> 01:13:39,000
但如果你是全新安装的一个 10.11

2223
01:13:39,000 --> 01:13:41,000
默认是没有 user local 目录的

2224
01:13:41,000 --> 01:13:41,000
对

2225
01:13:41,000 --> 01:13:42,000
然后如果你这样的话

2226
01:13:42,000 --> 01:13:44,000
提示你不能建

2227
01:13:45,000 --> 01:13:45,000
对

2228
01:13:45,000 --> 01:13:48,000
然后他听到会提醒说你不能修改 user

2229
01:13:48,000 --> 01:13:48,000
对

2230
01:13:48,000 --> 01:13:50,000
因为你添加一个 user local 等于是修改 user

2231
01:13:50,000 --> 01:13:51,000
对吧

2232
01:13:52,000 --> 01:13:52,000
然后

2233
01:13:53,000 --> 01:13:54,000
你就不得不很坑爹的说

2234
01:13:55,000 --> 01:13:57,000
手工关掉 SIP 的特性

2235
01:13:57,000 --> 01:13:59,000
把 user local 建好之后再把 SIP 打开

2236
01:13:59,000 --> 01:14:00,000
对

2237
01:14:00,000 --> 01:14:03,000
然后这个过程牵扯到两次重启动

2238
01:14:04,000 --> 01:14:05,000
但就还好吧

2239
01:14:05,000 --> 01:14:08,000
你为了使用这样这么一个

2240
01:14:08,000 --> 01:14:10,000
full of awesomeness 的操作系统

2241
01:14:10,000 --> 01:14:12,000
重启动两次还是可以

2242
01:14:13,000 --> 01:14:14,000
不过他们也有说

2243
01:14:14,000 --> 01:14:18,000
其实 homebrew 不用装到 user local 里面也可以用

2244
01:14:18,000 --> 01:14:20,000
就是说里面有些可能软件包

2245
01:14:20,000 --> 01:14:22,000
它的默认的路径是这么设置的

2246
01:14:22,000 --> 01:14:27,000
他可能会假设某一些 E-Line 的软件也好

2247
01:14:27,000 --> 01:14:28,000
这个 library 也好

2248
01:14:28,000 --> 01:14:30,000
它是已经在 user local 里面的了

2249
01:14:30,000 --> 01:14:32,000
这个时候你就比较坑

2250
01:14:32,000 --> 01:14:35,000
所以可能另外一种方式就是说

2251
01:14:35,000 --> 01:14:37,000
我们去做一下清洁工作

2252
01:14:37,000 --> 01:14:40,000
把 homebrew 里面的一些软件包

2253
01:14:40,000 --> 01:14:45,000
对 user local 的一个 hardcoded 的 E-Line

2254
01:14:45,000 --> 01:14:46,000
把它改成一个可配置的东西

2255
01:14:46,000 --> 01:14:48,000
可能会好一点

2256
01:14:48,000 --> 01:14:52,000
brew 是可以在编译期的时候

2257
01:14:52,000 --> 01:14:57,000
告诉当前的 brew 的路径在哪儿

2258
01:14:57,000 --> 01:15:00,000
对但不是所有的 formula 都是这么的

2259
01:15:00,000 --> 01:15:02,000
都有灵活性

2260
01:15:02,000 --> 01:15:05,000
所以才说刚才要做清理工作

2261
01:15:05,000 --> 01:15:08,000
一个一个去检查那些 formula

2262
01:15:08,000 --> 01:15:11,000
有没有 hardcoded 的 E-Line

2263
01:15:13,000 --> 01:15:14,000
我在公司的电脑上

2264
01:15:14,000 --> 01:15:16,000
其实因为我没有 user local 的权限

2265
01:15:16,000 --> 01:15:19,000
我就把 linuxbrew

2266
01:15:19,000 --> 01:15:21,000
你知道 homebrew 有一个 linux 的 branch

2267
01:15:23,000 --> 01:15:24,000
你为什么这么坑

2268
01:15:24,000 --> 01:15:25,000
因为我没有 root

2269
01:15:28,000 --> 01:15:28,000
这么可怜

2270
01:15:28,000 --> 01:15:29,000
对

2271
01:15:29,000 --> 01:15:32,000
然后就把他们一个 rootless 的人

2272
01:15:32,000 --> 01:15:35,000
对把他们全都装在 dollarpwd

2273
01:15:35,000 --> 01:15:37,000
slashuserslashlocal

2274
01:15:39,000 --> 01:15:39,000
能用吗

2275
01:15:39,000 --> 01:15:40,000
可以啊

2276
01:15:41,000 --> 01:15:41,000
OK

2277
01:15:42,000 --> 01:15:42,000
还 OK 吧

2278
01:15:45,000 --> 01:15:45,000
好吧

2279
01:15:45,000 --> 01:15:49,000
那个 SIP 的还有这个叫做 rootless 的特性说完了

2280
01:15:49,000 --> 01:15:51,000
下一则有点意思的事情是

2281
01:15:52,000 --> 01:15:53,000
这算是难产吧

2282
01:15:53,000 --> 01:15:55,000
千呼万唤是出来

2283
01:15:55,000 --> 01:15:56,000
perl 6 发布了

2284
01:15:56,000 --> 01:15:57,000
还没出来呢

2285
01:15:57,000 --> 01:15:58,000
其实对

2286
01:15:58,000 --> 01:15:58,000
还没吧

2287
01:15:58,000 --> 01:15:59,000
还是说已经发布了

2288
01:15:59,000 --> 01:16:01,000
忧爆批发半遮面的状况

2289
01:16:01,000 --> 01:16:05,000
说是其实是正确的新闻的说法应该是这样的

2290
01:16:06,000 --> 01:16:09,000
Larry Wall 在 10 月初的时候

2291
01:16:10,000 --> 01:16:12,000
10 月 8 号是几号的时候终于说了一句

2292
01:16:14,000 --> 01:16:16,000
大家圣诞节的时候就可以收到 perl 6 了

2293
01:16:18,000 --> 01:16:19,000
圣诞节是吧

2294
01:16:19,000 --> 01:16:19,000
那还快了

2295
01:16:19,000 --> 01:16:22,000
他说了一个 release date 是今年圣诞节

2296
01:16:23,000 --> 01:16:23,000
OK

2297
01:16:23,000 --> 01:16:24,000
所以

2298
01:16:24,000 --> 01:16:26,000
所以你期待这件事情吗

2299
01:16:28,000 --> 01:16:28,000
我也不知道

2300
01:16:28,000 --> 01:16:30,000
这就好像是

2301
01:16:31,000 --> 01:16:34,000
有人 15 年前给你许了一个诺言

2302
01:16:34,000 --> 01:16:35,000
然后今天中午要时下

2303
01:16:36,000 --> 01:16:38,000
感觉你已经没有感觉了

2304
01:16:38,000 --> 01:16:38,000
可能

2305
01:16:39,000 --> 01:16:41,000
已然不用了是吧

2306
01:16:41,000 --> 01:16:41,000
对啊

2307
01:16:41,000 --> 01:16:43,000
我记得那个时候还

2308
01:16:44,000 --> 01:16:47,000
2000 年的时候还对 perl 这种

2309
01:16:48,000 --> 01:16:49,000
这种有句话怎么说来着

2310
01:16:49,000 --> 01:16:52,000
PHP 是一种邪恶语

2311
01:16:52,000 --> 01:16:53,000
但它只是一个

2312
01:16:54,000 --> 01:16:55,000
比较小的邪恶

2313
01:16:55,000 --> 01:16:56,000
因为它是一个

2314
01:16:57,000 --> 01:17:00,000
诚实的业余爱好者写出来的

2315
01:17:00,000 --> 01:17:01,000
分号

2316
01:17:02,000 --> 01:17:02,000
对

2317
01:17:02,000 --> 01:17:03,000
PHP 是小恶

2318
01:17:03,000 --> 01:17:04,000
因为它只是一个

2319
01:17:05,000 --> 01:17:08,000
incompetent 的业余爱好者写出来的

2320
01:17:08,000 --> 01:17:08,000
分号

2321
01:17:10,000 --> 01:17:11,000
perl 是个大恶

2322
01:17:11,000 --> 01:17:12,000
因为它是一个

2323
01:17:13,000 --> 01:17:15,000
技巧贤熟的

2324
01:17:15,000 --> 01:17:16,000
但是

2325
01:17:16,000 --> 01:17:17,000
非常

2326
01:17:17,000 --> 01:17:20,000
混蛋的专业程序写出来

2327
01:17:22,000 --> 01:17:23,000
get gag

2328
01:17:23,000 --> 01:17:23,000
OK

2329
01:17:26,000 --> 01:17:27,000
对

2330
01:17:27,000 --> 01:17:27,000
就是这种感觉

2331
01:17:28,000 --> 01:17:30,000
那个时候 perl 还是一种

2332
01:17:31,000 --> 01:17:32,000
因为那时候

2333
01:17:33,000 --> 01:17:34,000
不是写

2334
01:17:34,000 --> 01:17:35,000
没有写过很多程序

2335
01:17:35,000 --> 01:17:36,000
也没有那么

2336
01:17:38,000 --> 01:17:39,000
设计过很多语言

2337
01:17:39,000 --> 01:17:41,000
总觉得 perl 这种看起来是

2338
01:17:43,000 --> 01:17:46,000
连滚锅键盘写出来的东西

2339
01:17:46,000 --> 01:17:47,000
还挺有意思的

2340
01:17:48,000 --> 01:17:52,000
那个时候觉得不知道 perl 6 又会有什么

2341
01:17:52,000 --> 01:17:53,000
了不起的东西

2342
01:17:53,000 --> 01:17:54,000
对吧

2343
01:17:54,000 --> 01:17:55,000
但是 15 年之后

2344
01:17:55,000 --> 01:17:57,000
就 2000 年的时候

2345
01:17:57,000 --> 01:17:58,000
就说我们要做 perl 6

2346
01:17:58,000 --> 01:18:00,000
就 2000 年时候 perl 6 的

2347
01:18:01,000 --> 01:18:02,000
specification 已经出来了

2348
01:18:03,000 --> 01:18:04,000
还是已经开始 draft 了

2349
01:18:04,000 --> 01:18:06,000
然后一直 15 年之后才说

2350
01:18:06,000 --> 01:18:08,000
perl 6 的 1.0 可能要出来了

2351
01:18:09,000 --> 01:18:10,000
这是一种什么样的

2352
01:18:11,000 --> 01:18:13,000
其实 perl 这个语言怎么说

2353
01:18:13,000 --> 01:18:15,000
对它感觉还挺复杂的

2354
01:18:15,000 --> 01:18:16,000
就是基本上这么说吧

2355
01:18:16,000 --> 01:18:18,000
就是它我觉得它是一种属于叫做

2356
01:18:20,000 --> 01:18:24,000
convenience over simplicity 的设计

2357
01:18:24,000 --> 01:18:26,000
perl 是一种

2358
01:18:28,000 --> 01:18:30,000
易于写但不易于读的语言

2359
01:18:31,000 --> 01:18:35,000
就语言有些语言容易读又容易写

2360
01:18:35,000 --> 01:18:36,000
比如说 Python

2361
01:18:36,000 --> 01:18:38,000
有些语言容易读

2362
01:18:38,000 --> 01:18:39,000
但是不容易写

2363
01:18:39,000 --> 01:18:40,000
比如说 Pasco

2364
01:18:42,000 --> 01:18:43,000
或者 Fortran

2365
01:18:44,000 --> 01:18:46,000
Fortran 不算容易读吧

2366
01:18:47,000 --> 01:18:49,000
但是现在的观点 Fortran 不是非常容易读

2367
01:18:49,000 --> 01:18:52,000
然后有些语言是非常容易写

2368
01:18:52,000 --> 01:18:54,000
但是一周之后你在读的时候

2369
01:18:54,000 --> 01:18:56,000
如果你之前没有写文档的话

2370
01:18:56,000 --> 01:18:58,000
你就会想要回到一周之前杀了

2371
01:18:58,000 --> 01:18:59,000
what the fuck

2372
01:18:59,000 --> 01:18:59,000
对

2373
01:19:00,000 --> 01:19:03,000
比如说 brainfuck 和 perl

2374
01:19:03,000 --> 01:19:04,000
就这种感觉

2375
01:19:05,000 --> 01:19:07,000
想不到已经降到这么低的等级

2376
01:19:07,000 --> 01:19:08,000
没错

2377
01:19:09,000 --> 01:19:12,000
不但说到其实 perl 这种语法的这种便利性

2378
01:19:12,000 --> 01:19:14,000
还是挺激励了很多人

2379
01:19:14,000 --> 01:19:17,000
可能 Ruby 算是极大成者

2380
01:19:18,000 --> 01:19:18,000
对

2381
01:19:18,000 --> 01:19:20,000
而且 perl 其实也不是一个始作俑者

2382
01:19:20,000 --> 01:19:22,000
因为在 perl 出现的时候

2383
01:19:22,000 --> 01:19:23,000
什么 Badshare 之类的

2384
01:19:23,000 --> 01:19:28,000
Shale 已经有了很多非常奇怪的符号

2385
01:19:30,000 --> 01:19:31,000
如果你不知道的话

2386
01:19:31,000 --> 01:19:32,000
你就是猜不出来的 convention

2387
01:19:34,000 --> 01:19:36,000
只不过 perl 把它们都发扬光大了

2388
01:19:36,000 --> 01:19:39,000
并且让 perl 变成了层级合十最流行的语言

2389
01:19:39,000 --> 01:19:42,000
就像那时候 perl 2000 年左右的

2390
01:19:42,000 --> 01:19:43,000
甚至不用 2000 年

2391
01:19:43,000 --> 01:19:45,000
90 年左右 perl 的 hype 的程度

2392
01:19:45,000 --> 01:19:47,000
就像现在的 Ruby

2393
01:19:47,000 --> 01:19:49,000
可能比 Ruby 还要甚一些

2394
01:19:50,000 --> 01:19:51,000
对

2395
01:19:52,000 --> 01:19:53,000
back in the heydays ofperl

2396
01:19:54,000 --> 01:19:55,000
你会觉得我靠

2397
01:19:55,000 --> 01:19:58,000
不会写两句 perl 都不好意思跟人打招呼

2398
01:19:58,000 --> 01:20:00,000
那个时候还没有 php 呢

2399
01:20:00,000 --> 01:20:01,000
就你写网页

2400
01:20:01,000 --> 01:20:02,000
你要么用 C

2401
01:20:03,000 --> 01:20:04,000
用 C

2402
01:20:05,000 --> 01:20:08,000
要么用 perl

2403
01:20:08,000 --> 01:20:13,000
直到后来才有什么 php 或者 sp 这种

2404
01:20:13,000 --> 01:20:16,000
让 aml 都可以去写网页的东西出现

2405
01:20:16,000 --> 01:20:24,000
然后 perl 在那个时候也是 CGI 和一些比较常见的

2406
01:20:24,000 --> 01:20:27,000
daily automation 的最得力的工具

2407
01:20:28,000 --> 01:20:30,000
当时我也是因为这个动机才去学的

2408
01:20:30,000 --> 01:20:32,000
就是觉得我靠这是一个 hacker 语言

2409
01:20:33,000 --> 01:20:33,000
which is true

2410
01:20:33,000 --> 01:20:34,000
which is still true

2411
01:20:34,000 --> 01:20:36,000
只不过你看 15 年后

2412
01:20:36,000 --> 01:20:38,000
当初的 perl 的 hacker

2413
01:20:40,000 --> 01:20:41,000
比如谁唐汉宗你知道这个人吗

2414
01:20:42,000 --> 01:20:42,000
不是

2415
01:20:42,000 --> 01:20:45,000
唐汉宗是中文圈里面非常台湾人

2416
01:20:45,000 --> 01:20:49,000
中文圈里面对 perl 非常有贡献的一个人

2417
01:20:49,000 --> 01:20:51,000
但是具体贡献是什么我不记得了

2418
01:20:51,000 --> 01:20:52,000
但你看 15 年过去

2419
01:20:52,000 --> 01:20:55,000
唐汉宗已经变性了

2420
01:20:56,000 --> 01:20:59,000
唐汉宗已经去做变性手术

2421
01:20:59,000 --> 01:21:00,000
感觉叫唐燕了

2422
01:21:00,000 --> 01:21:03,000
然后 perl 还没有出来呢

2423
01:21:04,000 --> 01:21:05,000
就是这种感觉

2424
01:21:05,000 --> 01:21:07,000
不仅沧海桑田

2425
01:21:07,000 --> 01:21:12,000
连人都已经不在

2426
01:21:12,000 --> 01:21:15,000
所以 perl 就已经不算是一个新语言了

2427
01:21:16,000 --> 01:21:17,000
perl 绝对不新

2428
01:21:17,000 --> 01:21:19,000
perl 是 perl 6

2429
01:21:19,000 --> 01:21:21,000
perl 6 好吧

2430
01:21:21,000 --> 01:21:24,000
因为他的 spec 已经出了那么久了

2431
01:21:24,000 --> 01:21:26,000
大家都该激动过了

2432
01:21:26,000 --> 01:21:30,000
对就好像一个怀胎 10 年的孩子生出来了

2433
01:21:30,000 --> 01:21:32,000
你说他是一个婴儿呢

2434
01:21:32,000 --> 01:21:34,000
还是说他是一个怪胎

2435
01:21:35,000 --> 01:21:36,000
他是哪家

2436
01:21:36,000 --> 01:21:40,000
第二个语言对不对

2437
01:21:43,000 --> 01:21:45,000
好吧这个就过一下

2438
01:21:45,000 --> 01:21:46,000
反正我们也不怎么用了

2439
01:21:46,000 --> 01:21:49,000
其实如果你写过 perl

2440
01:21:49,000 --> 01:21:50,000
我相信我们的听众里面

2441
01:21:50,000 --> 01:21:52,000
可能没有什么人写着 perl 长大的

2442
01:21:52,000 --> 01:21:54,000
但如果假设竟然有的话

2443
01:21:54,000 --> 01:21:56,000
就是你年少时写的 perl

2444
01:21:56,000 --> 01:21:58,000
在 perl 6 里面

2445
01:21:58,000 --> 01:22:00,000
很多地方都不一样了

2446
01:22:00,000 --> 01:22:02,000
然后比如说一些 perl 6 里面

2447
01:22:02,000 --> 01:22:06,000
之前 perl 里面一些比较奇怪的语意

2448
01:22:06,000 --> 01:22:09,000
在 perl 6 里面都被改过来了

2449
01:22:09,000 --> 01:22:11,000
比如说什么 array 的 index

2450
01:22:12,000 --> 01:22:14,000
我不记得具体是什么

2451
01:22:14,000 --> 01:22:16,000
就比如说我想想

2452
01:22:16,000 --> 01:22:21,000
perl 里面 array 要用 at 做前缀

2453
01:22:24,000 --> 01:22:29,000
然后如果你要去 index 里面的一个 item 的时候

2454
01:22:29,000 --> 01:22:31,000
你要把前缀变成 dollar

2455
01:22:32,000 --> 01:22:39,000
因为 Larry 我认为在你去 indexarray 里面

2456
01:22:39,000 --> 01:22:42,000
那一个单一的量的时候

2457
01:22:42,000 --> 01:22:43,000
他是一个 scala

2458
01:22:43,000 --> 01:22:45,000
所以要用 dollar

2459
01:22:45,000 --> 01:22:48,000
就有很多这种 what the fuck 的地方

2460
01:22:48,000 --> 01:22:50,000
在 perl 6 里面都被修复了

2461
01:22:52,000 --> 01:22:54,000
就已经姗姗来迟了

2462
01:22:54,000 --> 01:22:57,000
让你觉得我靠这还比较好理解

2463
01:22:58,000 --> 01:22:59,000
但除此之外

2464
01:22:59,000 --> 01:23:00,000
我又不知道

2465
01:23:00,000 --> 01:23:02,000
这个语言会重新兴起来吗

2466
01:23:02,000 --> 01:23:03,000
我觉得不太可能

2467
01:23:06,000 --> 01:23:08,000
反正我对他其实个人没什么好感

2468
01:23:08,000 --> 01:23:10,000
我觉得他有个设计理念

2469
01:23:10,000 --> 01:23:13,000
跟我的很难接受

2470
01:23:13,000 --> 01:23:13,000
真的说是

2471
01:23:13,000 --> 01:23:14,000
嗯

2472
01:23:14,000 --> 01:23:19,000
但 perl 的好处就是有非常多的 one liner

2473
01:23:21,000 --> 01:23:23,000
就如果你去花一些时间

2474
01:23:23,000 --> 01:23:24,000
投资在 perl 上面的话

2475
01:23:24,000 --> 01:23:26,000
还是比较值得的

2476
01:23:27,000 --> 01:23:29,000
一问题就是在于你经常记不住

2477
01:23:29,000 --> 01:23:30,000
到底在干嘛

2478
01:23:31,000 --> 01:23:32,000
对你就得去搜

2479
01:23:32,000 --> 01:23:34,000
然后搜一个 perl 6 的 one liner

2480
01:23:34,000 --> 01:23:36,000
perl 的 one liner 就可以解决很多问题

2481
01:23:36,000 --> 01:23:38,000
而且在很多操作系统上面

2482
01:23:39,000 --> 01:23:41,000
不一定有 ruby

2483
01:23:41,000 --> 01:23:45,000
但是基本上不会没有 perl 这种感觉

2484
01:23:48,000 --> 01:23:49,000
差不多就这样吧

2485
01:23:49,000 --> 01:23:52,000
那个 perl 6 的新闻就到此为止了

2486
01:23:52,000 --> 01:23:53,000
大家有兴趣的去

2487
01:23:53,000 --> 01:23:55,000
去缅怀一下就去看一下

2488
01:23:56,000 --> 01:23:57,000
这个有一个

2489
01:23:57,000 --> 01:23:58,000
下面新闻是个大事

2490
01:23:59,000 --> 01:24:01,000
叫做 lets encrypt

2491
01:24:03,000 --> 01:24:05,000
就算 API 还是一个服务

2492
01:24:05,000 --> 01:24:09,000
它的证书已经被交叉的

2493
01:24:10,000 --> 01:24:12,000
sign 的中文叫什么

2494
01:24:12,000 --> 01:24:13,000
签名过了

2495
01:24:13,000 --> 01:24:15,000
这可能要解释一下什么是

2496
01:24:15,000 --> 01:24:17,000
应该说已经被 trusted

2497
01:24:17,000 --> 01:24:19,000
就是已经被信任

2498
01:24:19,000 --> 01:24:21,000
主流的浏览器 trust

2499
01:24:21,000 --> 01:24:22,000
就是信任了

2500
01:24:22,000 --> 01:24:23,000
对

2501
01:24:25,000 --> 01:24:26,000
这怎么说

2502
01:24:26,000 --> 01:24:28,000
先说 lets encrypt 是个啥

2503
01:24:28,000 --> 01:24:30,000
lets encrypt 是一个

2504
01:24:31,000 --> 01:24:32,000
一套服务

2505
01:24:32,000 --> 01:24:35,000
一套开源的软件和服务

2506
01:24:36,000 --> 01:24:37,000
它可以使得你

2507
01:24:37,000 --> 01:24:40,000
部署到一个客户端到你的服务器之后

2508
01:24:40,000 --> 01:24:42,000
它自动帮你去配置服务器的

2509
01:24:42,000 --> 01:24:44,000
SSL 证书

2510
01:24:44,000 --> 01:24:44,000
对

2511
01:24:45,000 --> 01:24:46,000
和那个

2512
01:24:46,000 --> 01:24:47,000
包括这个

2513
01:24:49,000 --> 01:24:50,000
证书的签发

2514
01:24:50,000 --> 01:24:52,000
这个 key 的生成

2515
01:24:53,000 --> 01:24:54,000
还有包括这个证书的过期

2516
01:24:55,000 --> 01:24:56,000
自动升级

2517
01:24:56,000 --> 01:25:00,000
自动重新申请

2518
01:25:00,000 --> 01:25:02,000
整套的流程都完了

2519
01:25:02,000 --> 01:25:03,000
可能要说起来比较奇怪

2520
01:25:03,000 --> 01:25:05,000
为什么会是这个能够存在

2521
01:25:05,000 --> 01:25:07,000
一开始要解释

2522
01:25:07,000 --> 01:25:08,000
存在一个什么样的问题

2523
01:25:08,000 --> 01:25:09,000
或者它的愿景是什么

2524
01:25:09,000 --> 01:25:10,000
对

2525
01:25:10,000 --> 01:25:13,000
其实问题也是一两句话

2526
01:25:13,000 --> 01:25:14,000
就可以概括了

2527
01:25:14,000 --> 01:25:17,000
就是现在大家上的网

2528
01:25:18,000 --> 01:25:19,000
每一个请求

2529
01:25:19,000 --> 01:25:21,000
如果你不做特殊要求的话

2530
01:25:21,000 --> 01:25:22,000
都是明信片

2531
01:25:22,000 --> 01:25:26,000
就 HTTP 这些是明文的

2532
01:25:26,000 --> 01:25:27,000
任何就是

2533
01:25:27,000 --> 01:25:30,000
你在和别的电脑谈话的时候

2534
01:25:30,000 --> 01:25:32,000
你和那个电脑之间的任何

2535
01:25:33,000 --> 01:25:37,000
内容都可以被中间经历的所有电脑看到

2536
01:25:38,000 --> 01:25:40,000
而 HTPS 的

2537
01:25:40,000 --> 01:25:42,000
或者 Let's Encrypt 的愿景

2538
01:25:42,000 --> 01:25:44,000
就是希望把所有这些明信片

2539
01:25:44,000 --> 01:25:45,000
都变成信件

2540
01:25:45,000 --> 01:25:48,000
就是默认上面是要盖层信封的

2541
01:25:48,000 --> 01:25:50,000
如果你不去拆的话

2542
01:25:50,000 --> 01:25:52,000
或者说如果你不实点进的话

2543
01:25:52,000 --> 01:25:53,000
你是看不到内容的

2544
01:25:53,000 --> 01:25:54,000
这愿景就是这个

2545
01:25:54,000 --> 01:25:56,000
但是此前存在一个什么问题

2546
01:25:56,000 --> 01:25:58,000
就是作为一个普通的站长

2547
01:25:58,000 --> 01:26:00,000
而说你要去

2548
01:26:01,000 --> 01:26:02,000
首先得花钱

2549
01:26:02,000 --> 01:26:04,000
这是最大的门槛

2550
01:26:04,000 --> 01:26:05,000
但也不一定

2551
01:26:05,000 --> 01:26:06,000
也有免费的

2552
01:26:06,000 --> 01:26:07,000
对

2553
01:26:07,000 --> 01:26:10,000
但是你在买服务的时候是花了钱的

2554
01:26:10,000 --> 01:26:10,000
对吧

2555
01:26:10,000 --> 01:26:12,000
如果你用一个免费空间的话

2556
01:26:12,000 --> 01:26:13,000
它是

2557
01:26:14,000 --> 01:26:15,000
不是 证书也有免费的

2558
01:26:15,000 --> 01:26:16,000
但是限制比较多

2559
01:26:16,000 --> 01:26:19,000
但是前提是你得去买一个什么

2560
01:26:19,000 --> 01:26:20,000
DOMAIN 之类的东西

2561
01:26:20,000 --> 01:26:20,000
对吧

2562
01:26:22,000 --> 01:26:23,000
不是 签发证书跟 DOMAIN

2563
01:26:25,000 --> 01:26:26,000
如果你没有独立 DOMAIN 的话

2564
01:26:26,000 --> 01:26:27,000
你怎么对

2565
01:26:27,000 --> 01:26:29,000
这个没有区别

2566
01:26:29,000 --> 01:26:33,000
你用 HTPS 也要买 DOMAIN 的

2567
01:26:33,000 --> 01:26:34,000
要买域名的

2568
01:26:35,000 --> 01:26:36,000
所以这大问题就是说

2569
01:26:36,000 --> 01:26:38,000
大部分的 SSL 证书

2570
01:26:38,000 --> 01:26:39,000
就是好用的

2571
01:26:39,000 --> 01:26:41,000
或者说兼容性比较好的

2572
01:26:42,000 --> 01:26:43,000
会比较贵

2573
01:26:43,000 --> 01:26:44,000
对

2574
01:26:44,000 --> 01:26:46,000
而且可能跟域名还有点关系

2575
01:26:46,000 --> 01:26:47,000
比如说

2576
01:26:47,000 --> 01:26:50,000
现在免费中一般都只有单一域名的证书

2577
01:26:50,000 --> 01:26:52,000
比如说 IPN 的话

2578
01:26:52,000 --> 01:26:55,000
就只能买比如 3 W.IPN.LI

2579
01:26:55,000 --> 01:26:56,000
这个域名的证书

2580
01:26:56,000 --> 01:26:57,000
那可能 OK 免费

2581
01:26:57,000 --> 01:26:58,000
但我想说比如说

2582
01:26:58,000 --> 01:26:59,000
我要 XXX

2583
01:26:59,000 --> 01:27:01,000
就是前面 X 可以替换成任意的

2584
01:27:01,000 --> 01:27:02,000
.IPN.LI

2585
01:27:02,000 --> 01:27:04,000
这个域名都可以用的话

2586
01:27:04,000 --> 01:27:05,000
就叫做 Wildcard 证书的话

2587
01:27:05,000 --> 01:27:08,000
一年就得好几十刀到几百刀

2588
01:27:08,000 --> 01:27:10,000
根据你验证的程度不一样

2589
01:27:10,000 --> 01:27:12,000
所以还是有经济

2590
01:27:12,000 --> 01:27:14,000
对 价钱倒好说了

2591
01:27:14,000 --> 01:27:16,000
最主要的是这个

2592
01:27:17,000 --> 01:27:19,000
配置非常非常复杂

2593
01:27:19,000 --> 01:27:21,000
因为首先申请这个

2594
01:27:21,000 --> 01:27:22,000
数字证书

2595
01:27:22,000 --> 01:27:23,000
你要做几件事情

2596
01:27:23,000 --> 01:27:24,000
首先你得验证你是这个

2597
01:27:25,000 --> 01:27:26,000
域名的实质控制人

2598
01:27:26,000 --> 01:27:28,000
这事情他就要做几件事了

2599
01:27:28,000 --> 01:27:29,000
比如有一些比较

2600
01:27:29,000 --> 01:27:31,000
简单的他可以说你在

2601
01:27:31,000 --> 01:27:33,000
域名上放一个什么特殊的指令文件

2602
01:27:33,000 --> 01:27:35,000
他可以验证你的也可以

2603
01:27:35,000 --> 01:27:37,000
但一般来说就是给你的

2604
01:27:37,000 --> 01:27:38,000
比如说

2605
01:27:38,000 --> 01:27:40,000
可能比方是给 webmaster at

2606
01:27:40,000 --> 01:27:42,000
这个域名的一个邮箱

2607
01:27:42,000 --> 01:27:43,000
他发一封这个信

2608
01:27:43,000 --> 01:27:45,000
然后里面有一个 code

2609
01:27:45,000 --> 01:27:47,000
你收到 code 证明说

2610
01:27:47,000 --> 01:27:48,000
你确实是这个

2611
01:27:48,000 --> 01:27:50,000
域名的实质控制者

2612
01:27:50,000 --> 01:27:51,000
因为你是 webmaster 这个账号

2613
01:27:52,000 --> 01:27:54,000
但这不过是挺坑爹的

2614
01:27:55,000 --> 01:27:56,000
完了之后你还得生成

2615
01:27:57,000 --> 01:27:58,000
相应的公钥和私钥

2616
01:27:58,000 --> 01:28:00,000
对 要敲一大堆命令

2617
01:28:00,000 --> 01:28:06,000
然后用你的私钥去生成一个

2618
01:28:06,000 --> 01:28:07,000
公钥还是私钥

2619
01:28:07,000 --> 01:28:11,000
应该是用公钥去生成一个

2620
01:28:11,000 --> 01:28:12,000
certification request

2621
01:28:12,000 --> 01:28:13,000
对然后证明

2622
01:28:13,000 --> 01:28:15,000
然后你再把 certification request

2623
01:28:15,000 --> 01:28:19,000
签发你的 SL 证书的机构

2624
01:28:19,000 --> 01:28:20,000
对

2625
01:28:20,000 --> 01:28:21,000
就是一般叫做 CA

2626
01:28:22,000 --> 01:28:24,000
然后他会根据你的情况

2627
01:28:24,000 --> 01:28:27,000
再给你签一份证书回来

2628
01:28:27,000 --> 01:28:29,000
然后你再把证书打包

2629
01:28:29,000 --> 01:28:32,000
到你一个正确的格式

2630
01:28:33,000 --> 01:28:35,000
然后让配置你的 web

2631
01:28:35,000 --> 01:28:37,000
浮屏伺服器 web server

2632
01:28:37,000 --> 01:28:39,000
去 load 证书

2633
01:28:39,000 --> 01:28:40,000
然后使得当

2634
01:28:40,000 --> 01:28:42,000
那些访问 43 段可能时候

2635
01:28:42,000 --> 01:28:44,000
能够正确的读取到这个证书

2636
01:28:44,000 --> 01:28:46,000
这过程相当繁琐和麻烦

2637
01:28:46,000 --> 01:28:48,000
因为我维护 IPN 旗下的

2638
01:28:48,000 --> 01:28:49,000
现在比如说我们十档节目

2639
01:28:50,000 --> 01:28:51,000
每档节目都有自己的

2640
01:28:51,000 --> 01:28:52,000
独立的域名

2641
01:28:52,000 --> 01:28:55,000
然后 IPN 自己还有一个域名

2642
01:28:55,000 --> 01:28:56,000
就有十一个域名了对吧

2643
01:28:56,000 --> 01:28:57,000
然后十个域名

2644
01:28:57,000 --> 01:28:58,000
还有 APAFOX

2645
01:28:59,000 --> 01:29:00,000
对那个也是

2646
01:29:00,000 --> 01:29:02,000
还有我个人自己的对吧

2647
01:29:02,000 --> 01:29:04,000
就十几一大堆的域名

2648
01:29:04,000 --> 01:29:05,000
我得要去每一个

2649
01:29:05,000 --> 01:29:07,000
都得走这么一个流程

2650
01:29:07,000 --> 01:29:09,000
这过程是很坑爹的

2651
01:29:09,000 --> 01:29:10,000
Railmasterencryption

2652
01:29:11,000 --> 01:29:13,000
所以其实如果能一套

2653
01:29:13,000 --> 01:29:14,000
自动化的工具

2654
01:29:14,000 --> 01:29:15,000
或者工具料也好

2655
01:29:15,000 --> 01:29:16,000
还是一个服务也好

2656
01:29:16,000 --> 01:29:17,000
能够把这个构成减

2657
01:29:18,000 --> 01:29:20,000
减轻一下负担其实蛮好的

2658
01:29:20,000 --> 01:29:21,000
并且免费

2659
01:29:22,000 --> 01:29:23,000
对如果能免费就更好了

2660
01:29:24,000 --> 01:29:26,000
Letsencrypt 就是干这么一件事

2661
01:29:26,000 --> 01:29:27,000
所以简而言之

2662
01:29:27,000 --> 01:29:28,000
Letsencrypt 就相当于

2663
01:29:28,000 --> 01:29:30,000
轰不入之于

2664
01:29:30,000 --> 01:29:32,000
Letsencrypt 之于 SSL

2665
01:29:32,000 --> 01:29:35,000
就相当于轰不入之于下载

2666
01:29:35,000 --> 01:29:36,000
config make

2667
01:29:36,000 --> 01:29:37,000
make install 这一段

2668
01:29:38,000 --> 01:29:40,000
这个比喻还挺好

2669
01:29:41,000 --> 01:29:42,000
是一件非常好的事情

2670
01:29:43,000 --> 01:29:45,000
然后 10 月 19 号的时候

2671
01:29:45,000 --> 01:29:46,000
Letsencrypt 的根证书

2672
01:29:46,000 --> 01:29:49,000
终于被所有的软件

2673
01:29:49,000 --> 01:29:50,000
所信了

2674
01:29:51,000 --> 01:29:54,000
这个过程讲起来比较复杂

2675
01:29:54,000 --> 01:29:56,000
对 Letsencrypt 已经有几年

2676
01:29:56,000 --> 01:29:58,000
四五年了吧至少

2677
01:29:58,000 --> 01:29:59,000
没有吧

2678
01:29:59,000 --> 01:30:01,000
他是去年才开始做的

2679
01:30:01,000 --> 01:30:02,000
What

2680
01:30:02,000 --> 01:30:03,000
OK

2681
01:30:03,000 --> 01:30:05,000
对这个东西的主要的

2682
01:30:05,000 --> 01:30:07,000
幕后推手是 Mozilla

2683
01:30:08,000 --> 01:30:08,000
嗯

2684
01:30:09,000 --> 01:30:10,000
是谁来的

2685
01:30:10,000 --> 01:30:11,000
对

2686
01:30:12,000 --> 01:30:13,000
current sponsors

2687
01:30:13,000 --> 01:30:14,000
Mozilla

2688
01:30:14,000 --> 01:30:16,000
然后这个全球最大的

2689
01:30:16,000 --> 01:30:17,000
CDN

2690
01:30:17,000 --> 01:30:18,000
阿卡马尔

2691
01:30:19,000 --> 01:30:21,000
然后还有司科

2692
01:30:21,000 --> 01:30:22,000
还有 EFF

2693
01:30:23,000 --> 01:30:25,000
还有 University of Michigan

2694
01:30:25,000 --> 01:30:26,000
What

2695
01:30:26,000 --> 01:30:26,000
我就没看到

2696
01:30:27,000 --> 01:30:28,000
这是 Founder

2697
01:30:28,000 --> 01:30:30,000
密歇根周力大学

2698
01:30:31,000 --> 01:30:33,000
嗯有点意思

2699
01:30:33,000 --> 01:30:34,000
嗯

2700
01:30:35,000 --> 01:30:37,000
就有了这套系统之后

2701
01:30:37,000 --> 01:30:38,000
刚才我说的那些繁琐的事情

2702
01:30:38,000 --> 01:30:39,000
就可以解决了

2703
01:30:39,000 --> 01:30:41,000
但是有一个问题

2704
01:30:41,000 --> 01:30:42,000
就回到刚才我们讲的 SPOF

2705
01:30:43,000 --> 01:30:44,000
Singaporean failure

2706
01:30:44,000 --> 01:30:46,000
如果谁把 Letsencrypt 黑了

2707
01:30:47,000 --> 01:30:49,000
所有用的 Letsencrypt

2708
01:30:49,000 --> 01:30:51,000
都傻逼了

2709
01:30:51,000 --> 01:30:52,000
对

2710
01:30:53,000 --> 01:30:54,000
其实还有一点就是说

2711
01:30:54,000 --> 01:30:55,000
这个

2712
01:30:56,000 --> 01:30:58,000
我们 SSL 用的 CA 体系

2713
01:30:58,000 --> 01:30:59,000
就是 Certificate Authority

2714
01:30:59,000 --> 01:31:01,000
这个体系是相当脆弱的

2715
01:31:02,000 --> 01:31:02,000
嗯

2716
01:31:02,000 --> 01:31:03,000
因为现在也就说

2717
01:31:03,000 --> 01:31:05,000
那个这可能要先扯一下

2718
01:31:05,000 --> 01:31:07,000
读者就是这个 CA 体系

2719
01:31:07,000 --> 01:31:08,000
到底是怎么一回事

2720
01:31:08,000 --> 01:31:09,000
简单来说就是说

2721
01:31:09,000 --> 01:31:10,000
你在你的这个电脑里面

2722
01:31:10,000 --> 01:31:11,000
操作系统也好

2723
01:31:11,000 --> 01:31:12,000
浏览器也好

2724
01:31:12,000 --> 01:31:13,000
它有对默认的

2725
01:31:13,000 --> 01:31:15,000
所谓的 CA 证书

2726
01:31:15,000 --> 01:31:15,000
对

2727
01:31:15,000 --> 01:31:17,000
这些 CA 证书本身是

2728
01:31:18,000 --> 01:31:19,000
就是一个

2729
01:31:19,000 --> 01:31:20,000
怎么说来的

2730
01:31:22,000 --> 01:31:23,000
它本身是受信任的

2731
01:31:23,000 --> 01:31:25,000
它信任是跟

2732
01:31:25,000 --> 01:31:27,000
是因为你操作系统的发行商

2733
01:31:27,000 --> 01:31:29,000
觉得认为这些系统

2734
01:31:29,000 --> 01:31:32,000
这些 CA 机构是可以信赖的

2735
01:31:32,000 --> 01:31:33,000
然后

2736
01:31:33,000 --> 01:31:36,000
这些 CA 机构在签发二级证书

2737
01:31:38,000 --> 01:31:40,000
然后这些证书再去签发三级证书

2738
01:31:40,000 --> 01:31:41,000
给我们这些

2739
01:31:41,000 --> 01:31:43,000
这个实际的域名的所有人

2740
01:31:44,000 --> 01:31:44,000
然后

2741
01:31:44,000 --> 01:31:45,000
就是等于是

2742
01:31:45,000 --> 01:31:48,000
他们这些 CA 证书证明

2743
01:31:48,000 --> 01:31:51,000
我们是假设是 IPN.LI

2744
01:31:51,000 --> 01:31:52,000
这个域名的实际所有者

2745
01:31:52,000 --> 01:31:55,000
然后这个证书是合法的

2746
01:31:55,000 --> 01:31:56,000
但是问题在于哪里呢

2747
01:31:56,000 --> 01:31:59,000
就 CA 证书和 CA 证书之间

2748
01:31:59,000 --> 01:32:01,000
是没有功能区别的

2749
01:32:01,000 --> 01:32:02,000
就是说

2750
01:32:02,000 --> 01:32:06,000
CA 就是 Certificate Authority 机构 A

2751
01:32:06,000 --> 01:32:08,000
就是 A 签发者

2752
01:32:08,000 --> 01:32:11,000
是可以签发 IPN.LI 这个证书的

2753
01:32:11,000 --> 01:32:14,000
B 签发者也可以签发 IPN.LI 的证书

2754
01:32:14,000 --> 01:32:16,000
那么你会发现

2755
01:32:16,000 --> 01:32:19,000
就是说在浏览器或操作系统内置的

2756
01:32:19,000 --> 01:32:21,000
大概二三十个还是三四十个

2757
01:32:21,000 --> 01:32:22,000
这种 CA 证书里面

2758
01:32:23,000 --> 01:32:25,000
有任何一家 CA 证书的

2759
01:32:25,000 --> 01:32:28,000
这个根证书的持有的机构

2760
01:32:28,000 --> 01:32:29,000
出了问题

2761
01:32:30,000 --> 01:32:32,000
那么全世界的 SSL 证书

2762
01:32:33,000 --> 01:32:35,000
都不会不靠谱

2763
01:32:36,000 --> 01:32:36,000
对

2764
01:32:36,000 --> 01:32:38,000
比如说各位

2765
01:32:39,000 --> 01:32:40,000
非常喜欢删除的

2766
01:32:40,000 --> 01:32:42,000
这个 CNNIC 证书

2767
01:32:43,000 --> 01:32:46,000
是一个臭名昭著的流氓证书

2768
01:32:47,000 --> 01:32:48,000
或者说流氓的国度

2769
01:32:49,000 --> 01:32:50,000
当然是流氓的证书

2770
01:32:51,000 --> 01:32:53,000
就变成了一个木桶原理了

2771
01:32:53,000 --> 01:32:55,000
比如说你所有的 CA 证书

2772
01:32:55,000 --> 01:32:57,000
组成一个源头

2773
01:32:57,000 --> 01:32:59,000
然后你的安全就是里面的水

2774
01:32:59,000 --> 01:33:02,000
那你的安全就完全取决于里面最水

2775
01:33:02,000 --> 01:33:03,000
就最差的那一块

2776
01:33:03,000 --> 01:33:05,000
那个安全性怎么样

2777
01:33:05,000 --> 01:33:07,000
其实这整个体系是非常脆弱的

2778
01:33:07,000 --> 01:33:08,000
对

2779
01:33:08,000 --> 01:33:11,000
就是它本质上还是一个信任链的问题

2780
01:33:11,000 --> 01:33:11,000
就是

2781
01:33:12,000 --> 01:33:13,000
好吧

2782
01:33:13,000 --> 01:33:14,000
你弄了台电脑

2783
01:33:14,000 --> 01:33:16,000
在上面做一些计算

2784
01:33:16,000 --> 01:33:17,000
然后计算结果

2785
01:33:17,000 --> 01:33:19,000
我要去信任你的话

2786
01:33:20,000 --> 01:33:21,000
我要依赖谁呢

2787
01:33:22,000 --> 01:33:23,000
只能依赖你的机构

2788
01:33:23,000 --> 01:33:25,000
那你的机构要去找谁来为你背书呢

2789
01:33:25,000 --> 01:33:27,000
可能要去找一个主管部门

2790
01:33:27,000 --> 01:33:29,000
然后主管部门又要去找谁背书呢

2791
01:33:29,000 --> 01:33:30,000
然后这样一层一层追究

2792
01:33:31,000 --> 01:33:34,000
追根结底还是要回到国家机器上面

2793
01:33:34,000 --> 01:33:34,000
对吧

2794
01:33:34,000 --> 01:33:37,000
但是如果国家机器本身就是不可信任的

2795
01:33:37,000 --> 01:33:40,000
那你这个系统不就是完蛋了吗

2796
01:33:41,000 --> 01:33:41,000
对

2797
01:33:41,000 --> 01:33:43,000
而且它这个完蛋还不在于

2798
01:33:43,000 --> 01:33:45,000
危害还不仅仅在于这里

2799
01:33:45,000 --> 01:33:46,000
就算说假设

2800
01:33:46,000 --> 01:33:48,000
如果你说中国的国家机构不可信

2801
01:33:48,000 --> 01:33:51,000
那你只影响中国的证书都还好是吧

2802
01:33:51,000 --> 01:33:54,000
或者是说中国的证书不可信

2803
01:33:54,000 --> 01:33:56,000
会影响到所有其他国家的所有网站

2804
01:33:56,000 --> 01:33:57,000
cross domain 的问题

2805
01:33:57,000 --> 01:33:58,000
那是非常非常

2806
01:33:59,000 --> 01:33:59,000
对

2807
01:33:59,000 --> 01:34:00,000
然后

2808
01:34:01,000 --> 01:34:03,000
最近赛文铁克就出了这么一个妖儿子

2809
01:34:05,000 --> 01:34:07,000
就是那个 Google

2810
01:34:07,000 --> 01:34:10,000
发现赛文铁克签发了一堆

2811
01:34:10,000 --> 01:34:12,000
根本不存在的域名的

2812
01:34:13,000 --> 01:34:15,000
这个证书或者是

2813
01:34:15,000 --> 01:34:18,000
就是就不该他签发的那些

2814
01:34:18,000 --> 01:34:20,000
这些证书他也在签发了

2815
01:34:20,000 --> 01:34:22,000
这就会有问题了

2816
01:34:22,000 --> 01:34:22,000
对

2817
01:34:22,000 --> 01:34:25,000
这是好像一个一个一个外交官在卖护照一样

2818
01:34:25,000 --> 01:34:27,000
是一个非常恐怖的事情

2819
01:34:28,000 --> 01:34:28,000
对

2820
01:34:28,000 --> 01:34:32,000
然后在 Google 跟赛文铁克提出这个问题之后

2821
01:34:32,000 --> 01:34:34,000
赛文铁克做了一次审计

2822
01:34:34,000 --> 01:34:35,000
就是 security audit

2823
01:34:35,000 --> 01:34:37,000
然后说解决了大概

2824
01:34:37,000 --> 01:34:38,000
好像是 5 个

2825
01:34:39,000 --> 01:34:41,000
错误签发了证书之后

2826
01:34:41,000 --> 01:34:43,000
Google 说没有

2827
01:34:43,000 --> 01:34:44,000
Google 说又发现

2828
01:34:44,000 --> 01:34:46,000
我说不止 5 个

2829
01:34:46,000 --> 01:34:48,000
差不多有 100 多个证书

2830
01:34:48,000 --> 01:34:51,000
是你赛文铁克签发有问题的

2831
01:34:52,000 --> 01:34:54,000
这就把 Google 惹毛了

2832
01:34:54,000 --> 01:34:55,000
因为 Google

2833
01:34:56,000 --> 01:34:59,000
这种级别的服务很容易被这种来搞

2834
01:34:59,000 --> 01:34:59,000
对吧

2835
01:34:59,000 --> 01:35:01,000
所以他对这件事情是很介意的

2836
01:35:02,000 --> 01:35:04,000
所以后来他们做了一个完全的审计发现

2837
01:35:04,000 --> 01:35:07,000
一共有 160 几个证书

2838
01:35:07,000 --> 01:35:09,000
被错误的签发了

2839
01:35:09,000 --> 01:35:13,000
还有将近 2500 个证书

2840
01:35:13,000 --> 01:35:15,000
给签发给那些根本就没有被注册过的域名

2841
01:35:15,000 --> 01:35:16,000
就完全是有问题的

2842
01:35:17,000 --> 01:35:20,000
就说明赛文铁克内部的安全管理

2843
01:35:20,000 --> 01:35:22,000
那个路程是一塌糊涂的

2844
01:35:22,000 --> 01:35:24,000
然后就那个律师

2845
01:35:24,000 --> 01:35:26,000
Google 就毫不犹豫的直接打脸了

2846
01:35:26,000 --> 01:35:28,000
就警告赛文铁克

2847
01:35:28,000 --> 01:35:29,000
然后要求赛文铁克

2848
01:35:29,000 --> 01:35:32,000
今后就从明年

2849
01:35:32,000 --> 01:35:33,000
2010 年 6 月 1 号开始的

2850
01:35:33,000 --> 01:35:35,000
所有的签发过程都必须公开

2851
01:35:37,000 --> 01:35:39,000
就这个是一个非常严格的

2852
01:35:39,000 --> 01:35:41,000
也非常严厉的一个要求

2853
01:35:42,000 --> 01:35:43,000
对一个惩罚

2854
01:35:43,000 --> 01:35:45,000
就说你赛文铁克更不靠谱

2855
01:35:45,000 --> 01:35:46,000
就还有更有可能

2856
01:35:46,000 --> 01:35:48,000
就是说如果你这种事情再发

2857
01:35:48,000 --> 01:35:50,000
就直接吊销你的 CA 的权限了

2858
01:35:50,000 --> 01:35:50,000
对吧

2859
01:35:51,000 --> 01:35:52,000
就好像我们在

2860
01:35:53,000 --> 01:35:54,000
我们的系统里面默默的

2861
01:35:54,000 --> 01:35:57,000
关键了 CNIC 的 CA 证书一样

2862
01:35:57,000 --> 01:35:57,000
对吧

2863
01:35:58,000 --> 01:36:00,000
是基于一些基础的信任的问题

2864
01:36:00,000 --> 01:36:00,000
对

2865
01:36:03,000 --> 01:36:04,000
所以其实

2866
01:36:04,000 --> 01:36:05,000
就很多人在思考

2867
01:36:05,000 --> 01:36:07,000
怎么去能够干掉

2868
01:36:07,000 --> 01:36:09,000
CA 就是 Certificate Authority

2869
01:36:09,000 --> 01:36:10,000
这套 CA 这套系统

2870
01:36:10,000 --> 01:36:12,000
因为确实太脆弱了

2871
01:36:13,000 --> 01:36:14,000
而且在现在这种

2872
01:36:15,000 --> 01:36:17,000
政治环境又不太稳定的情况下

2873
01:36:18,000 --> 01:36:20,000
是很容易被拿来搞别的事情

2874
01:36:21,000 --> 01:36:23,000
访问环境是越来越恶劣

2875
01:36:24,000 --> 01:36:25,000
是

2876
01:36:25,000 --> 01:36:29,000
因为暂时还没有什么更好的替代的

2877
01:36:29,000 --> 01:36:32,000
就简单好用的替代的方法

2878
01:36:33,000 --> 01:36:34,000
所以目前为止也就只能说

2879
01:36:34,000 --> 01:36:37,000
首先说加快这 HTPS 的普及

2880
01:36:37,000 --> 01:36:38,000
然后就说

2881
01:36:39,000 --> 01:36:40,000
想一些替代的方法

2882
01:36:41,000 --> 01:36:43,000
比如说这个叫 Certificate Pinnin

2883
01:36:43,000 --> 01:36:45,000
就是证书

2884
01:36:45,000 --> 01:36:46,000
固定证书

2885
01:36:47,000 --> 01:36:49,000
我之前访问过一次之后

2886
01:36:49,000 --> 01:36:51,000
我就在浏览这边记住这个网站的证书

2887
01:36:51,000 --> 01:36:52,000
下次访问这个网站的时候

2888
01:36:52,000 --> 01:36:53,000
如果发现它证书改变了

2889
01:36:54,000 --> 01:36:55,000
就会提醒用户说

2890
01:36:55,000 --> 01:36:56,000
这个网站的证书突然改了

2891
01:36:57,000 --> 01:36:58,000
因为一般情况下这个是

2892
01:37:00,000 --> 01:37:01,000
就不应该这样

2893
01:37:01,000 --> 01:37:03,000
不会出现证书突然改变的这种情况

2894
01:37:03,000 --> 01:37:05,000
如果说你要小心是什么问题

2895
01:37:05,000 --> 01:37:07,000
就像 SSH 的 GoPrint 那样

2896
01:37:08,000 --> 01:37:08,000
对

2897
01:37:08,000 --> 01:37:09,000
有点那个意思

2898
01:37:10,000 --> 01:37:12,000
然后还要加强审计

2899
01:37:12,000 --> 01:37:13,000
比如说 Google 的那种 Crop 软件软件

2900
01:37:13,000 --> 01:37:16,000
它会向 Google 发送这些

2901
01:37:16,000 --> 01:37:18,000
证书的一些记录

2902
01:37:18,000 --> 01:37:21,000
Google 可以通过一些技术方法去分析

2903
01:37:21,000 --> 01:37:24,000
是不是某一个网站的证书被恶意替换了

2904
01:37:25,000 --> 01:37:25,000
对吧

2905
01:37:25,000 --> 01:37:26,000
对

2906
01:37:27,000 --> 01:37:28,000
但是总的来说

2907
01:37:28,000 --> 01:37:30,000
我觉得这套体系还是不靠谱的

2908
01:37:30,000 --> 01:37:32,000
那么替代的方案

2909
01:37:33,000 --> 01:37:35,000
比如说像我们叫 Web of Trust

2910
01:37:35,000 --> 01:37:36,000
就是说如果我们不信任任何

2911
01:37:36,000 --> 01:37:40,000
不信任单一这个跟证书的情况下

2912
01:37:40,000 --> 01:37:43,000
我们怎么去构建一个更加可靠的系统

2913
01:37:43,000 --> 01:37:45,000
去解决这个问题

2914
01:37:46,000 --> 01:37:47,000
这工程还是蛮复杂的

2915
01:37:47,000 --> 01:37:49,000
我也不是专业人士

2916
01:37:49,000 --> 01:37:51,000
那就不吓 BB 了

2917
01:37:51,000 --> 01:37:53,000
就留给各位听众作为今天的作业题

2918
01:37:54,000 --> 01:37:56,000
脑力练习对吧

2919
01:37:56,000 --> 01:37:58,000
如何在不信任任何人的情况下

2920
01:37:58,000 --> 01:38:00,000
开始信任所有人

2921
01:38:00,000 --> 01:38:02,000
内核恐慌之脑洞大开环节

2922
01:38:04,000 --> 01:38:06,000
我感觉我们的邮箱要爆了

2923
01:38:06,000 --> 01:38:08,000
其实可以做一个 IMBB 或者

2924
01:38:08,000 --> 01:38:08,000
这个

2925
01:38:09,000 --> 01:38:12,000
Rotten Tomato for Websites

2926
01:38:13,000 --> 01:38:14,000
那你怎么保证这个

2927
01:38:14,000 --> 01:38:16,000
website 本身的可信

2928
01:38:16,000 --> 01:38:18,000
就由这个

2929
01:38:18,000 --> 01:38:20,000
这个 Rotten Tomato for Websites

2930
01:38:20,000 --> 01:38:21,000
来办法诊书

2931
01:38:23,000 --> 01:38:24,000
一般我就说你

2932
01:38:24,000 --> 01:38:25,000
那你怎么保证这个

2933
01:38:25,000 --> 01:38:27,000
这个站点本身的安全性

2934
01:38:28,000 --> 01:38:30,000
就是来办法他自己的诊书

2935
01:38:30,000 --> 01:38:31,000
去中心玩

2936
01:38:32,000 --> 01:38:33,000
我也不知道怎么办

2937
01:38:33,000 --> 01:38:34,000
你还是要有一个

2938
01:38:34,000 --> 01:38:36,000
你说我们讲 Web of Trust

2939
01:38:36,000 --> 01:38:38,000
你始终是要一个起点的对吧

2940
01:38:38,000 --> 01:38:40,000
可以利用比特币类似的原理

2941
01:38:40,000 --> 01:38:41,000
就是每一台计算机

2942
01:38:41,000 --> 01:38:43,000
要生成一个信任

2943
01:38:43,000 --> 01:38:45,000
信任 token 的时候

2944
01:38:45,000 --> 01:38:48,000
都必须依赖所有其他的计算机

2945
01:38:48,000 --> 01:38:49,000
然后你

2946
01:38:49,000 --> 01:38:52,000
你在这也是一个突破的点

2947
01:38:52,000 --> 01:38:53,000
但是现在大家就觉得

2948
01:38:53,000 --> 01:38:54,000
首先一个问题就是说

2949
01:38:54,000 --> 01:38:55,000
这个延迟太高了

2950
01:38:55,000 --> 01:38:57,000
因为比特币的传播

2951
01:38:57,000 --> 01:38:58,000
对它不是实时的

2952
01:38:58,000 --> 01:38:58,000
对

2953
01:39:00,000 --> 01:39:02,000
怎么就协调这件事情

2954
01:39:02,000 --> 01:39:03,000
还是挺头痛的

2955
01:39:03,000 --> 01:39:04,000
嗯

2956
01:39:06,000 --> 01:39:06,000
anyway

2957
01:39:06,000 --> 01:39:07,000
这个就算是家庭作业

2958
01:39:08,000 --> 01:39:10,000
我们今天扯独子也就扯到这里

2959
01:39:10,000 --> 01:39:11,000
差不多了

2960
01:39:11,000 --> 01:39:13,000
节目时间好像比往前短了一些

2961
01:39:13,000 --> 01:39:17,000
但是我们也没有什么主题可以再讲了

2962
01:39:18,000 --> 01:39:19,000
对

2963
01:39:19,000 --> 01:39:21,000
所以刚才的 moral of the story

2964
01:39:21,000 --> 01:39:22,000
就是审计是重要的

2965
01:39:24,000 --> 01:39:25,000
信任是重要的

2966
01:39:25,000 --> 01:39:27,000
安全问题是重要的

2967
01:39:27,000 --> 01:39:28,000
对

2968
01:39:28,000 --> 01:39:30,000
其实审计的重要性我还是

2969
01:39:31,000 --> 01:39:32,000
我女朋友是个审计

2970
01:39:32,000 --> 01:39:35,000
所以才还是在最近两年才意识到

2971
01:39:35,000 --> 01:39:36,000
此前我总觉得

2972
01:39:36,000 --> 01:39:37,000
这个

2973
01:39:37,000 --> 01:39:39,000
企业的自律或者是

2974
01:39:41,000 --> 01:39:44,000
这个由外部审计数所的他律

2975
01:39:44,000 --> 01:39:45,000
是一个可有可无的东西

2976
01:39:45,000 --> 01:39:46,000
但

2977
01:39:47,000 --> 01:39:48,000
和女朋友在一起之后才发现

2978
01:39:48,000 --> 01:39:49,000
我靠

2979
01:39:49,000 --> 01:39:50,000
原来这个玩意真的是

2980
01:39:50,000 --> 01:39:51,000
然而必非如此

2981
01:39:51,000 --> 01:39:52,000
对

2982
01:39:52,000 --> 01:39:53,000
非常非常重要的一个东西

2983
01:39:54,000 --> 01:39:55,000
对

2984
01:39:56,000 --> 01:39:57,000
我们所有人的身家性命

2985
01:39:57,000 --> 01:39:59,000
其实都压在

2986
01:39:59,000 --> 01:40:00,000
比如说 Google 或者是

2987
01:40:02,000 --> 01:40:04,000
微软的内部审计上

2988
01:40:05,000 --> 01:40:06,000
所以想内部审计致敬一点

2989
01:40:07,000 --> 01:40:07,000
还有外部审计

2990
01:40:09,000 --> 01:40:09,000
好吧

2991
01:40:10,000 --> 01:40:13,000
感谢收听 IPM Podcast 网络旗下的

2992
01:40:13,000 --> 01:40:14,000
IT 技术主题娱乐节目

2993
01:40:14,000 --> 01:40:16,000
内核恐慌

2994
01:40:16,000 --> 01:40:17,000
我们号称 Hardcore

2995
01:40:17,000 --> 01:40:18,000
但是也没有什么干货

2996
01:40:18,000 --> 01:40:19,000
想听的人听

2997
01:40:19,000 --> 01:40:21,000
不想听的人就别听

2998
01:40:21,000 --> 01:40:23,000
您可以为本节目捐款

2999
01:40:23,000 --> 01:40:26,000
捐款地址是 kernelpanic.fm

3000
01:40:26,000 --> 01:40:27,000
slash donate

3001
01:40:28,000 --> 01:40:29,000
捐款金额随意

3002
01:40:29,000 --> 01:40:31,000
只要是 8 的正整数

3003
01:40:31,000 --> 01:40:32,000
就可以

3004
01:40:33,000 --> 01:40:34,000
正整数倍

3005
01:40:35,000 --> 01:40:35,000
对

3006
01:40:35,000 --> 01:40:37,000
只要是 8 的正整数倍就可以

3007
01:40:37,000 --> 01:40:39,000
捐款不会给你带来什么

3008
01:40:39,000 --> 01:40:41,000
不捐也不会让你失去什么

3009
01:40:41,000 --> 01:40:43,000
我们的口号是 No Hard Feelings

3010
01:40:44,000 --> 01:40:45,000
如果你有任何反馈

3011
01:40:45,000 --> 01:40:48,000
可以发电子邮件到 kernelpanic.fm

3012
01:40:48,000 --> 01:40:50,000
at ipm.li

3013
01:40:50,000 --> 01:40:51,000
同时也欢迎您收听

3014
01:40:51,000 --> 01:40:53,000
IPM 旗下其他类型的节目

3015
01:40:53,000 --> 01:40:54,000
IT 公论

3016
01:40:54,000 --> 01:40:55,000
未知道

3017
01:40:55,000 --> 01:40:56,000
太一来了

3018
01:40:56,000 --> 01:40:58,000
流行通信

3019
01:40:58,000 --> 01:40:59,000
Hi story

3020
01:40:59,000 --> 01:40:59,000
印象

3021
01:41:00,000 --> 01:41:01,000
无次元

3022
01:41:02,000 --> 01:41:04,000
印象

3023
01:41:04,000 --> 01:41:05,000
无次元

3024
01:41:05,000 --> 01:41:08,000
上次我们在跟 Livvyd 做节目的时候

3025
01:41:08,000 --> 01:41:09,000
最后我说

3026
01:41:09,000 --> 01:41:10,000
我们只念了 7 个

3027
01:41:10,000 --> 01:41:11,000
然后问说

3028
01:41:11,000 --> 01:41:13,000
我念完了吗

3029
01:41:13,000 --> 01:41:16,000
然后说念完了

3030
01:41:16,000 --> 01:41:18,000
然后漏了这个

3031
01:41:18,000 --> 01:41:21,000
Hilal 是新开的博物制和选美

3032
01:41:22,000 --> 01:41:23,000
我们下期节目再会

3033
01:41:23,000 --> 01:41:25,000
我们下期节目再会

3034
01:41:25,000 --> 01:41:25,000
拜拜

