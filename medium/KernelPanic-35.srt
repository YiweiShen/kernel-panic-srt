1
00:00:00,000 --> 00:00:04,000
欢迎收听 ipnpodcast 网络旗下的 IT 技术主题娱乐节目内核恐慌

2
00:00:04,000 --> 00:00:05,000
我们号称 Hardcore

3
00:00:05,000 --> 00:00:07,000
但是也没有干货

4
00:00:07,000 --> 00:00:09,000
想听人听不想听的人就别听

5
00:00:09,000 --> 00:00:11,000
本节目的网址是 kernelpanic.fm

6
00:00:11,000 --> 00:00:14,000
我们推荐大家使用 podcast 客户端订阅节目

7
00:00:14,000 --> 00:00:18,000
详情请访问 ipn.li.faq

8
00:00:18,000 --> 00:00:19,000
欢迎未经本节目捐款

9
00:00:19,000 --> 00:00:23,000
捐款地址是 kernelpanic.fm.donate

10
00:00:23,000 --> 00:00:23,000
捐款结合随意

11
00:00:23,000 --> 00:00:25,000
只要是 8 个正正数倍就可以

12
00:00:25,000 --> 00:00:27,000
捐款不会为你带来什么

13
00:00:27,000 --> 00:00:29,000
不捐也不会失去什么

14
00:00:29,000 --> 00:00:30,000
我们口号是

15
00:00:30,000 --> 00:00:33,000
That's the thing about people who think they hate computers

16
00:00:33,000 --> 00:00:35,000
What they really hate is

17
00:00:35,000 --> 00:00:37,000
losey programmers

18
00:00:39,000 --> 00:00:40,000
我问你个问题

19
00:00:41,000 --> 00:00:42,000
你在德国吗

20
00:00:43,000 --> 00:00:45,000
然后如果你买一些那种

21
00:00:45,000 --> 00:00:46,000
我们叫做 gargets

22
00:00:46,000 --> 00:00:47,000
就是这些小的硬件产品

23
00:00:48,000 --> 00:00:49,000
各种一些

24
00:00:49,000 --> 00:00:51,000
就是不是那种太主流的

25
00:00:51,000 --> 00:00:53,000
比较小众的电子产品的时候

26
00:00:53,000 --> 00:00:54,000
你一般会去哪里买

27
00:00:55,000 --> 00:00:56,000
亚马逊吧

28
00:00:57,000 --> 00:00:58,000
亚马逊德国

29
00:00:59,000 --> 00:01:00,000
基本上是亚马逊德国

30
00:01:00,000 --> 00:01:01,000
就取决于你说

31
00:01:02,000 --> 00:01:04,000
得以一词实现 gargets

32
00:01:06,000 --> 00:01:07,000
取决于你说这个东西的

33
00:01:08,000 --> 00:01:09,000
稀缺程度

34
00:01:09,000 --> 00:01:10,000
或者说它的

35
00:01:11,000 --> 00:01:12,000
小众程度

36
00:01:12,000 --> 00:01:14,000
那亚马逊亿上可能没有卖的

37
00:01:14,000 --> 00:01:15,000
但绝大部分时候

38
00:01:16,000 --> 00:01:18,000
如果你是在某一个广告上看到的话

39
00:01:18,000 --> 00:01:20,000
那基本上亚马逊应该有卖

40
00:01:21,000 --> 00:01:24,000
但比如说如果是比如说像类似于这种

41
00:01:24,000 --> 00:01:26,000
kickstarter 上面那种提到的

42
00:01:26,000 --> 00:01:27,000
那就非常大的一种

43
00:01:27,000 --> 00:01:29,000
什么 indiegogo kickstarter

44
00:01:29,000 --> 00:01:30,000
这上面都像卖的东西

45
00:01:30,000 --> 00:01:31,000
都是非常难的

46
00:01:31,000 --> 00:01:32,000
就是

47
00:01:32,000 --> 00:01:34,000
当然也取决于这个开源项目

48
00:01:34,000 --> 00:01:37,000
就是这个 kickstarter 的项目的地点

49
00:01:37,000 --> 00:01:38,000
比如说前一阵子有一个

50
00:01:39,000 --> 00:01:40,000
自行车还是什么东西

51
00:01:40,000 --> 00:01:43,000
它开的那个是西班牙的

52
00:01:43,000 --> 00:01:45,000
那欧洲来说发货就还可以

53
00:01:46,000 --> 00:01:48,000
但是就是欧洲本土的都还好的

54
00:01:48,000 --> 00:01:50,000
如果在美国的话就非常非常

55
00:01:51,000 --> 00:01:51,000
那个

56
00:01:53,000 --> 00:01:55,000
那你平时比如说有没有买什么小的需求

57
00:01:55,000 --> 00:01:56,000
一些小的电子产品

58
00:01:56,000 --> 00:01:58,000
是在亚马逊都不想买不到的

59
00:01:59,000 --> 00:02:00,000
其实还挺多

60
00:02:01,000 --> 00:02:03,000
比如说尤其是一些

61
00:02:03,000 --> 00:02:04,000
Arduino 方面的

62
00:02:05,000 --> 00:02:06,000
开发板什么的

63
00:02:06,000 --> 00:02:09,000
这个其实亚马逊还是挺少见的

64
00:02:09,000 --> 00:02:11,000
即便有的话可能也比较贵

65
00:02:11,000 --> 00:02:13,000
所以还有一些替代方案

66
00:02:13,000 --> 00:02:15,000
但就没有什么特别

67
00:02:16,000 --> 00:02:18,000
好的可以一下子说得上名字来的

68
00:02:19,000 --> 00:02:21,000
那么现在我给你隆重推荐一个

69
00:02:21,000 --> 00:02:22,000
很好的去处

70
00:02:22,000 --> 00:02:23,000
Dun Dun Dun Dun

71
00:02:24,000 --> 00:02:25,000
Aliexpress

72
00:02:26,000 --> 00:02:26,000
天哪

73
00:02:27,000 --> 00:02:27,000
好吧

74
00:02:27,000 --> 00:02:28,000
这个是我后来

75
00:02:29,000 --> 00:02:30,000
发现的一个挺好玩的

76
00:02:30,000 --> 00:02:33,000
我现在后面会说为什么会发现这个东西

77
00:02:35,000 --> 00:02:36,000
就 Aliexpress 是那个阿里巴巴的

78
00:02:36,000 --> 00:02:38,000
面向那种海外的

79
00:02:38,000 --> 00:02:39,000
你可以类似于它像

80
00:02:40,000 --> 00:02:42,000
就是阿里面向外国人的淘宝

81
00:02:43,000 --> 00:02:43,000
对

82
00:02:43,000 --> 00:02:45,000
就像逆向

83
00:02:46,000 --> 00:02:47,000
Reverse proxy 一样

84
00:02:47,000 --> 00:02:48,000
那是一个逆向淘宝

85
00:02:48,000 --> 00:02:49,000
逆向海淘应该说

86
00:02:50,000 --> 00:02:51,000
对因为我发现很多那种

87
00:02:51,000 --> 00:02:52,000
那些电子产品

88
00:02:52,000 --> 00:02:54,000
现在深圳那边很多在那边生产组装的

89
00:02:55,000 --> 00:02:55,000
对吧

90
00:02:55,000 --> 00:02:57,000
但是你想在国外的话

91
00:02:57,000 --> 00:02:58,000
你买它有些很多那种

92
00:02:59,000 --> 00:03:00,000
就不知名厂牌的

93
00:03:00,000 --> 00:03:01,000
但是就比较廉价的

94
00:03:02,000 --> 00:03:03,000
就性价比比较高的那些电子产品

95
00:03:03,000 --> 00:03:04,000
其实还挺难的

96
00:03:05,000 --> 00:03:07,000
后来发现这个 Aliexpress 上面卖的还挺多的

97
00:03:07,000 --> 00:03:08,000
然后我就悲剧了

98
00:03:08,000 --> 00:03:11,000
因为 Aliexpress 是不卖到中国的

99
00:03:12,000 --> 00:03:13,000
真的吗

100
00:03:13,000 --> 00:03:15,000
所以 Aliexpress 上面这些商品到底是什么

101
00:03:15,000 --> 00:03:16,000
只出口

102
00:03:17,000 --> 00:03:19,000
就是它那些卖家只是从中国

103
00:03:19,000 --> 00:03:20,000
就是深圳那些地方

104
00:03:20,000 --> 00:03:22,000
它往国外卖

105
00:03:22,000 --> 00:03:24,000
但是它一般不发往国内

106
00:03:25,000 --> 00:03:26,000
OK

107
00:03:27,000 --> 00:03:30,000
所以宁卖洋鬼子不予加农

108
00:03:30,000 --> 00:03:31,000
因为国内的话

109
00:03:31,000 --> 00:03:32,000
你就直接上淘宝买

110
00:03:32,000 --> 00:03:33,000
一般是这样

111
00:03:34,000 --> 00:03:36,000
但是那你为什么会有

112
00:03:37,000 --> 00:03:38,000
Aliexpress 买到的东西

113
00:03:38,000 --> 00:03:40,000
国内买不到的困扰

114
00:03:41,000 --> 00:03:43,000
就是一个 selection 的问题

115
00:03:43,000 --> 00:03:44,000
我发现有些东西

116
00:03:44,000 --> 00:03:45,000
Aliexpress 上面卖的

117
00:03:46,000 --> 00:03:46,000
它的那个

118
00:03:47,000 --> 00:03:48,000
卖相还有价格

119
00:03:48,000 --> 00:03:49,000
还有那些选择

120
00:03:49,000 --> 00:03:51,000
都竟然比淘宝上高

121
00:03:53,000 --> 00:03:55,000
这或许说明了一些问题

122
00:03:55,000 --> 00:03:58,000
这个好像是个挺常见的状况

123
00:03:59,000 --> 00:04:00,000
有些制造业的

124
00:04:00,000 --> 00:04:03,000
也是如果这东西是出口的话

125
00:04:03,000 --> 00:04:06,000
那它什么 QA 什么包装

126
00:04:06,000 --> 00:04:07,000
都要比给国内的好一点

127
00:04:07,000 --> 00:04:08,000
对

128
00:04:08,000 --> 00:04:10,000
而且有个很那个的问题

129
00:04:10,000 --> 00:04:10,000
就是你

130
00:04:10,000 --> 00:04:12,000
如果你上两个网站对比一下

131
00:04:12,000 --> 00:04:13,000
就 Aliexpress 和淘宝

132
00:04:13,000 --> 00:04:16,000
就那个同样同类商品的介绍

133
00:04:16,000 --> 00:04:18,000
它整个页面的设计也好

134
00:04:18,000 --> 00:04:19,000
还有它的这个

135
00:04:20,000 --> 00:04:22,000
就是商品的介绍

136
00:04:22,000 --> 00:04:24,000
它会 Aliexpress 上面会干净很多

137
00:04:26,000 --> 00:04:27,000
就淘宝上你知道吗

138
00:04:27,000 --> 00:04:29,000
就是那种乱七八糟的那些店家自己发的

139
00:04:29,000 --> 00:04:32,000
那种就是很花里胡哨的东西对吧

140
00:04:32,000 --> 00:04:34,000
但是同样的卖家

141
00:04:34,000 --> 00:04:36,000
你如果再找他在 Aliexpress 上面卖的

142
00:04:36,000 --> 00:04:37,000
或者同类产品的话

143
00:04:37,000 --> 00:04:39,000
它整个页面会

144
00:04:40,000 --> 00:04:42,000
就做的会非常的干净

145
00:04:42,000 --> 00:04:44,000
我觉得 Aliexpress 上面的东西

146
00:04:44,000 --> 00:04:45,000
可能有可能是有一个

147
00:04:45,000 --> 00:04:46,000
统一的

148
00:04:46,000 --> 00:04:47,000
阿里内部的

149
00:04:48,000 --> 00:04:48,000
不是

150
00:04:48,000 --> 00:04:51,000
他也是那些卖家自己去发布的

151
00:04:51,000 --> 00:04:52,000
真的吗

152
00:04:52,000 --> 00:04:54,000
为什么我觉得好像上面英文都还蛮正多

153
00:04:55,000 --> 00:04:55,000
对

154
00:04:55,000 --> 00:04:58,000
所以我后来留意到这个事情

155
00:04:58,000 --> 00:05:00,000
是我那天在某一个

156
00:05:00,000 --> 00:05:01,000
一个这种

157
00:05:01,000 --> 00:05:03,000
一个什么机缘巧合的关系

158
00:05:03,000 --> 00:05:05,000
看到有一堆人在那里开讲座

159
00:05:05,000 --> 00:05:07,000
然后讲座那种是如何在

160
00:05:08,000 --> 00:05:11,000
亚马逊美国上做营销

161
00:05:11,000 --> 00:05:14,000
他们会专门去培训那些

162
00:05:14,000 --> 00:05:17,000
就会有一个什么讲诗一样的人去培训那些

163
00:05:17,000 --> 00:05:20,000
那些国内的卖家在亚马逊上去做营销

164
00:05:20,000 --> 00:05:22,000
怎么去设计那些折扣点

165
00:05:22,000 --> 00:05:24,000
什么怎么选择那个

166
00:05:24,000 --> 00:05:27,000
这个推销的时间点那些

167
00:05:27,000 --> 00:05:28,000
而且还包括这个页面的设计

168
00:05:29,000 --> 00:05:30,000
那个产品的描述

169
00:05:31,000 --> 00:05:32,000
他们都非常专业的

170
00:05:32,000 --> 00:05:34,000
这个我发现就跟淘宝上那些卖家的那种

171
00:05:35,000 --> 00:05:36,000
透露出来的感觉

172
00:05:36,000 --> 00:05:39,000
就是专业的和业余的区别

173
00:05:39,000 --> 00:05:40,000
OK

174
00:05:40,000 --> 00:05:43,000
人家国际中都有国际中都有需要培训

175
00:05:43,000 --> 00:05:44,000
对对对

176
00:05:44,000 --> 00:05:45,000
所以我就觉得有时候觉得挺尴尬的

177
00:05:45,000 --> 00:05:46,000
就是

178
00:05:46,000 --> 00:05:48,000
虽然说这个货源都是来自这里

179
00:05:48,000 --> 00:05:51,000
都是可能是同样的一拨人在做这个事情

180
00:05:51,000 --> 00:05:53,000
但是因为卖区的地方不同

181
00:05:53,000 --> 00:05:55,000
他那个做事的态度完全不一样

182
00:05:56,000 --> 00:05:58,000
是吧是尴尬还是悲哀

183
00:05:58,000 --> 00:05:59,000
我觉得好像挺悲哀

184
00:06:00,000 --> 00:06:02,000
这个怎么说可能市场就这样吧

185
00:06:02,000 --> 00:06:03,000
我现在这种事情

186
00:06:04,000 --> 00:06:05,000
就主观色彩其实挺少

187
00:06:05,000 --> 00:06:07,000
我会去想

188
00:06:07,000 --> 00:06:08,000
为什么会是这么一种结果

189
00:06:08,000 --> 00:06:10,000
它是什么样的一种客观因素

190
00:06:11,000 --> 00:06:11,000
造成的

191
00:06:11,000 --> 00:06:13,000
那可能就是市场就是这样对吧

192
00:06:13,000 --> 00:06:15,000
比如同样的一个页面

193
00:06:15,000 --> 00:06:17,000
那话里胡说的淘宝那种

194
00:06:17,000 --> 00:06:18,000
那种商品介绍

195
00:06:18,000 --> 00:06:19,000
大家也应该有印象吧

196
00:06:19,000 --> 00:06:20,000
看到过

197
00:06:20,000 --> 00:06:21,000
你会觉得

198
00:06:21,000 --> 00:06:22,000
就这样习以为常了

199
00:06:22,000 --> 00:06:23,000
对吧

200
00:06:23,000 --> 00:06:25,000
但是你把那个拿去给那种什么

201
00:06:25,000 --> 00:06:26,000
洋人能用

202
00:06:26,000 --> 00:06:29,000
他们就不就不待见了这个吧

203
00:06:29,000 --> 00:06:30,000
他就觉得你这个

204
00:06:30,000 --> 00:06:32,000
不靠谱不在那边买了

205
00:06:32,000 --> 00:06:33,000
你逼得你掉

206
00:06:33,000 --> 00:06:36,000
去做的那种非常涉及的好一点的

207
00:06:36,000 --> 00:06:36,000
对吧

208
00:06:36,000 --> 00:06:40,000
就是有时候你也不能怪那些什么中国公司

209
00:06:40,000 --> 00:06:41,000
不给力

210
00:06:41,000 --> 00:06:43,000
其实他们还是怎么说来的

211
00:06:43,000 --> 00:06:45,000
就是是被市场选择的结果

212
00:06:45,000 --> 00:06:47,000
就是你市场本身你都不在乎这种事情

213
00:06:48,000 --> 00:06:49,000
那他为什么在乎这种事情

214
00:06:51,000 --> 00:06:53,000
这个是机身带人带生机的问题吧

215
00:06:53,000 --> 00:06:57,000
就是因为这个不重视设计的产品太多了

216
00:06:57,000 --> 00:07:02,000
所以市场产生了一种不重视设计的

217
00:07:03,000 --> 00:07:04,000
不有可能

218
00:07:04,000 --> 00:07:05,000
有可能是这么一个结果

219
00:07:05,000 --> 00:07:07,000
就是说这个中国市场相对的太多了

220
00:07:07,000 --> 00:07:08,000
对吧

221
00:07:08,000 --> 00:07:08,000
总有

222
00:07:09,000 --> 00:07:10,000
就绝大多数的还是

223
00:07:10,000 --> 00:07:12,000
不管你做的多大你都有人买是吧

224
00:07:12,000 --> 00:07:12,000
对

225
00:07:12,000 --> 00:07:13,000
没错

226
00:07:13,000 --> 00:07:15,000
只要你东西够便宜

227
00:07:15,000 --> 00:07:15,000
然后就是

228
00:07:15,000 --> 00:07:17,000
甚至不一定要便宜

229
00:07:17,000 --> 00:07:17,000
你知道吧

230
00:07:17,000 --> 00:07:18,000
现在我发现那个情况就是

231
00:07:18,000 --> 00:07:19,000
有时候你东西不便宜

232
00:07:19,000 --> 00:07:20,000
但是还是有缘分

233
00:07:20,000 --> 00:07:22,000
因为你那个差异可能也就是 5%左右

234
00:07:22,000 --> 00:07:23,000
对吧

235
00:07:23,000 --> 00:07:25,000
要是觉得那我就能找到买了就算了

236
00:07:25,000 --> 00:07:26,000
他也不在乎那些东西

237
00:07:26,000 --> 00:07:27,000
他不会去说

238
00:07:28,000 --> 00:07:29,000
进行一个选择

239
00:07:29,000 --> 00:07:29,000
而且市场足够大

240
00:07:30,000 --> 00:07:31,000
总会有生存下来的空间

241
00:07:32,000 --> 00:07:34,000
但如果说你市场是现在只有 1%

242
00:07:34,000 --> 00:07:35,000
那你可能要想办法去

243
00:07:36,000 --> 00:07:38,000
想更多的办法去说

244
00:07:38,000 --> 00:07:39,000
怎么去提高自己的竞争力

245
00:07:39,000 --> 00:07:41,000
可能会想提高产品的设计

246
00:07:41,000 --> 00:07:43,000
提高介绍页面的

247
00:07:43,000 --> 00:07:45,000
Landing page 的设计感之类的

248
00:07:45,000 --> 00:07:46,000
对吧

249
00:07:46,000 --> 00:07:47,000
所以

250
00:07:49,000 --> 00:07:50,000
有什么样的市场

251
00:07:50,000 --> 00:07:51,000
就有什么样的商家吧

252
00:07:51,000 --> 00:07:52,000
我觉得另一方面也有可能

253
00:07:53,000 --> 00:07:55,000
中国的设计成本太低了

254
00:07:55,000 --> 00:07:57,000
就你请一个设计师

255
00:07:57,000 --> 00:07:58,000
你可能给他的

256
00:07:58,000 --> 00:08:01,000
你期待会给他的薪水是非常低的

257
00:08:01,000 --> 00:08:03,000
然后在这种情况下

258
00:08:03,000 --> 00:08:05,000
其实没有什么好设计能够拿出来

259
00:08:05,000 --> 00:08:06,000
而且很多

260
00:08:06,000 --> 00:08:08,000
就是产品的

261
00:08:09,000 --> 00:08:11,000
拥有者会觉得自己是产品拥有者

262
00:08:11,000 --> 00:08:14,000
所以对整个的设计有最终决定权

263
00:08:14,000 --> 00:08:15,000
然后

264
00:08:15,000 --> 00:08:16,000
但是我觉得不是这样的

265
00:08:16,000 --> 00:08:17,000
因为我后来仔细比较过

266
00:08:17,000 --> 00:08:19,000
像这个 Alekspress 的卖的价钱

267
00:08:19,000 --> 00:08:21,000
和这个在淘宝上卖的

268
00:08:21,000 --> 00:08:22,000
同类商品的价钱

269
00:08:22,000 --> 00:08:24,000
其实很多时候淘宝是要更贵的

270
00:08:25,000 --> 00:08:27,000
也就是说他卖同样东西

271
00:08:27,000 --> 00:08:27,000
他在淘宝上

272
00:08:27,000 --> 00:08:29,000
理论上他应该赚的更多

273
00:08:29,000 --> 00:08:29,000
因为你算一下

274
00:08:29,000 --> 00:08:31,000
我不是说他针对

275
00:08:31,000 --> 00:08:32,000
专门针对 Alekspress

276
00:08:32,000 --> 00:08:33,000
会有一个设计团队

277
00:08:33,000 --> 00:08:35,000
我只是说真的就是有

278
00:08:35,000 --> 00:08:37,000
在中国做一个产品的话

279
00:08:37,000 --> 00:08:38,000
他有可能

280
00:08:39,000 --> 00:08:41,000
不是会那么重视

281
00:08:41,000 --> 00:08:42,000
不管是包装设计也好

282
00:08:42,000 --> 00:08:44,000
还是文案设计也好

283
00:08:44,000 --> 00:08:45,000
或者

284
00:08:45,000 --> 00:08:46,000
而且很多时候卖东西的人

285
00:08:46,000 --> 00:08:48,000
根本就不是商品的经销商

286
00:08:48,000 --> 00:08:49,000
所以

287
00:08:50,000 --> 00:08:52,000
但是 Alekspress 那些卖家

288
00:08:52,000 --> 00:08:54,000
他也一般也不是这个商品经销商

289
00:08:54,000 --> 00:08:56,000
他也只是说做一个渠道而已

290
00:08:57,000 --> 00:08:57,000
你懂我意思吗

291
00:08:57,000 --> 00:08:59,000
就是两个东西

292
00:08:59,000 --> 00:09:00,000
他同样就是

293
00:09:00,000 --> 00:09:04,000
经营者和产品都是同一拨人

294
00:09:04,000 --> 00:09:04,000
同一拨产品

295
00:09:04,000 --> 00:09:06,000
只是说因为市场面对的市场不一样

296
00:09:06,000 --> 00:09:09,000
他们做出来东西的结果是完全不同

297
00:09:11,000 --> 00:09:13,000
你觉得这是一种什么样的

298
00:09:13,000 --> 00:09:14,000
就是成熟市场不成熟市场

299
00:09:15,000 --> 00:09:17,000
但我会觉得此时会

300
00:09:17,000 --> 00:09:20,000
就有些听众的脑海里面会飘来

301
00:09:21,000 --> 00:09:22,000
六个字

302
00:09:24,000 --> 00:09:25,000
中国使用习惯

303
00:09:26,000 --> 00:09:27,000
或者是

304
00:09:27,000 --> 00:09:29,000
whatever 的类似的一个概念就是

305
00:09:30,000 --> 00:09:32,000
在中国就必须是这样的

306
00:09:32,000 --> 00:09:33,000
就他不是一个

307
00:09:34,000 --> 00:09:35,000
你刚才的这个

308
00:09:35,000 --> 00:09:36,000
陈述有价值判断在里面

309
00:09:36,000 --> 00:09:37,000
可是

310
00:09:38,000 --> 00:09:39,000
他会觉得中国市场就是这样的

311
00:09:39,000 --> 00:09:40,000
不是因为不成熟

312
00:09:40,000 --> 00:09:41,000
而是因为

313
00:09:41,000 --> 00:09:43,000
中国有这些审美习惯或者是

314
00:09:44,000 --> 00:09:47,000
你是说中国人的审美习惯就是偏下于丑吗

315
00:09:47,000 --> 00:09:48,000
我觉得不是这样子的

316
00:09:48,000 --> 00:09:48,000
不是

317
00:09:48,000 --> 00:09:50,000
我觉得有一个很有意思的说法

318
00:09:50,000 --> 00:09:52,000
就是不是有一句话说

319
00:09:52,000 --> 00:09:54,000
自然界厌恶真空

320
00:09:56,000 --> 00:09:59,000
中国用户厌恶版面的空白

321
00:09:59,000 --> 00:10:01,000
所以有一点缝隙

322
00:10:01,000 --> 00:10:03,000
一定要填字上去对吧

323
00:10:04,000 --> 00:10:06,000
然后因为

324
00:10:07,000 --> 00:10:09,000
因为所有的地方都充实着所有

325
00:10:09,000 --> 00:10:11,000
所有样式广告不管

326
00:10:11,000 --> 00:10:14,000
其实网络上的设计也是

327
00:10:14,000 --> 00:10:17,000
从这个现实生活

328
00:10:17,000 --> 00:10:20,000
也是对现实生活的一种投射

329
00:10:20,000 --> 00:10:21,000
假如你在一个

330
00:10:23,000 --> 00:10:26,000
连什么公车的背板

331
00:10:26,000 --> 00:10:28,000
或者是

332
00:10:28,000 --> 00:10:31,000
那个发动机的整流罩上都要贴广告的国家

333
00:10:32,000 --> 00:10:33,000
你很有可能是习惯了

334
00:10:33,000 --> 00:10:36,000
在网页上面见缝插针到处飘过高的

335
00:10:37,000 --> 00:10:39,000
但我说的不是广告的这种区别

336
00:10:39,000 --> 00:10:41,000
只是说在他的文案上面

337
00:10:41,000 --> 00:10:43,000
他这只是一个方面

338
00:10:43,000 --> 00:10:44,000
对吧

339
00:10:44,000 --> 00:10:46,000
然后再转换到文案上面

340
00:10:46,000 --> 00:10:48,000
那也就是说能扯多少就扯多少

341
00:10:48,000 --> 00:10:49,000
不管扯这个东西是不是真的

342
00:10:49,000 --> 00:10:50,000
然后或者说

343
00:10:51,000 --> 00:10:54,000
有些卖家会把某一段字加粗

344
00:10:54,000 --> 00:10:55,000
然后加个下滑线

345
00:10:55,000 --> 00:10:57,000
然后写底什么的

346
00:10:57,000 --> 00:10:58,000
这其实都是

347
00:10:58,000 --> 00:10:59,000
都是同一种

348
00:11:00,000 --> 00:11:01,000
同一种习惯的各个方面对吧

349
00:11:01,000 --> 00:11:02,000
你不会去

350
00:11:02,000 --> 00:11:04,000
因为你没有

351
00:11:04,000 --> 00:11:07,000
在一个简洁

352
00:11:07,000 --> 00:11:08,000
直接的

353
00:11:09,000 --> 00:11:11,000
现实世界里面生存过

354
00:11:11,000 --> 00:11:14,000
你会觉得网上这种到处

355
00:11:14,000 --> 00:11:16,000
乌烟瘴气的状况也是可以忍受

356
00:11:16,000 --> 00:11:19,000
或者说乃至你觉得默认就应该是这样

357
00:11:20,000 --> 00:11:22,000
那你这个的假设是他说

358
00:11:22,000 --> 00:11:23,000
他们没有对这个进行一个

359
00:11:24,000 --> 00:11:25,000
叫什么 AB test 吗

360
00:11:25,000 --> 00:11:26,000
就对比判断

361
00:11:26,000 --> 00:11:28,000
就是说他只是说

362
00:11:29,000 --> 00:11:30,000
就刚你说那句话的暗含的

363
00:11:30,000 --> 00:11:31,000
假设就是所有的

364
00:11:31,000 --> 00:11:33,000
就大多数卖家说随波左右的

365
00:11:33,000 --> 00:11:34,000
看别人怎么写他怎么写

366
00:11:35,000 --> 00:11:36,000
就他们没有对这个

367
00:11:36,000 --> 00:11:37,000
他写某一段东西

368
00:11:37,000 --> 00:11:40,000
对他的销售情况做任何一种

369
00:11:40,000 --> 00:11:42,000
测试看哪种效果更好

370
00:11:42,000 --> 00:11:44,000
但是我想说的就是

371
00:11:44,000 --> 00:11:46,000
其实这些人从我那天

372
00:11:46,000 --> 00:11:47,000
我在那里培训他们

373
00:11:47,000 --> 00:11:48,000
他们那个现场

374
00:11:48,000 --> 00:11:49,000
我看了大概半个小时

375
00:11:50,000 --> 00:11:51,000
他们是对这种东西

376
00:11:51,000 --> 00:11:52,000
就是这帮卖东西的人

377
00:11:52,000 --> 00:11:54,000
但我不知道他是不是

378
00:11:54,000 --> 00:11:55,000
淘宝上也是有这种培训

379
00:11:55,000 --> 00:11:56,000
但是起码他在

380
00:11:57,000 --> 00:11:58,000
杨柏学校去卖的时候

381
00:11:58,000 --> 00:11:59,000
他会去考虑很多这种

382
00:11:59,000 --> 00:12:01,000
数据的结果

383
00:12:01,000 --> 00:12:02,000
他会去做测试

384
00:12:03,000 --> 00:12:05,000
我觉得能够用心去参加

385
00:12:05,000 --> 00:12:06,000
这种培训班的人

386
00:12:06,000 --> 00:12:08,000
应该都不会

387
00:12:08,000 --> 00:12:10,000
不屑去做淘宝

388
00:12:10,000 --> 00:12:12,000
就不会蠢到回随波主流

389
00:12:14,000 --> 00:12:14,000
有些人

390
00:12:14,000 --> 00:12:16,000
我觉得这可能也是商业头脑

391
00:12:16,000 --> 00:12:16,000
一部分

392
00:12:17,000 --> 00:12:19,000
有些人会去想说

393
00:12:19,000 --> 00:12:20,000
怎么样做

394
00:12:20,000 --> 00:12:20,000
怎么样写

395
00:12:20,000 --> 00:12:23,000
才能让我的东西卖得好一点

396
00:12:23,000 --> 00:12:24,000
或者说每个人都会去想

397
00:12:24,000 --> 00:12:25,000
但是有些人

398
00:12:26,000 --> 00:12:28,000
搞出来的东西就比较高

399
00:12:28,000 --> 00:12:29,000
感人

400
00:12:31,000 --> 00:12:32,000
就没有那么

401
00:12:32,000 --> 00:12:33,000
就没有那么 low

402
00:12:33,000 --> 00:12:34,000
我觉得

403
00:12:36,000 --> 00:12:37,000
我就在想

404
00:12:37,000 --> 00:12:39,000
就说像淘宝这种面向

405
00:12:39,000 --> 00:12:41,000
主要面向中国市场的这种平台

406
00:12:41,000 --> 00:12:42,000
什么时候能变得

407
00:12:43,000 --> 00:12:43,000
不说别的了

408
00:12:44,000 --> 00:12:45,000
就说能变得像 AliExpress 那种

409
00:12:45,000 --> 00:12:47,000
相对来说没有那么

410
00:12:48,000 --> 00:12:49,000
五种颜色的文字

411
00:12:49,000 --> 00:12:51,000
在同一段话里面出现这种情况

412
00:12:52,000 --> 00:12:54,000
但也不是说 AliExpress 做得多好

413
00:12:54,000 --> 00:12:56,000
但就是说相比来看

414
00:12:56,000 --> 00:12:58,000
同一家集团下面的

415
00:12:58,000 --> 00:13:00,000
两个同类的产品

416
00:13:00,000 --> 00:13:02,000
然后就仅仅是因为面向的市场不一样

417
00:13:02,000 --> 00:13:04,000
它就有如此大的这种变化

418
00:13:05,000 --> 00:13:05,000
对

419
00:13:05,000 --> 00:13:09,000
我觉得我给 AliExpress 最高的一个评价

420
00:13:09,000 --> 00:13:10,000
就是它非常不像中国的

421
00:13:10,000 --> 00:13:12,000
但是我已经有一阵没上它了

422
00:13:12,000 --> 00:13:14,000
你当时印象应该是这样

423
00:13:14,000 --> 00:13:15,000
对

424
00:13:15,000 --> 00:13:16,000
如果你最近有什么买那么小

425
00:13:16,000 --> 00:13:17,000
电子产品的需求

426
00:13:17,000 --> 00:13:18,000
你跟他点去试试

427
00:13:18,000 --> 00:13:20,000
我觉得应该会有惊喜

428
00:13:22,000 --> 00:13:23,000
其实

429
00:13:24,000 --> 00:13:24,000
其实这么说

430
00:13:24,000 --> 00:13:26,000
就是我最近

431
00:13:26,000 --> 00:13:28,000
或者我一段时间以来

432
00:13:28,000 --> 00:13:29,000
都没有什么特别需要

433
00:13:29,000 --> 00:13:32,000
从觉得这个东西只有国内才能买到的

434
00:13:32,000 --> 00:13:33,000
的欲望

435
00:13:33,000 --> 00:13:34,000
或者感觉

436
00:13:35,000 --> 00:13:37,000
可能唯一比较觉得

437
00:13:37,000 --> 00:13:39,000
有时候会想买的就是书

438
00:13:41,000 --> 00:13:42,000
有基本上

439
00:13:42,000 --> 00:13:45,000
而且不是国内的书这个概念

440
00:13:45,000 --> 00:13:46,000
而是中文书

441
00:13:46,000 --> 00:13:48,000
就是不管是什么台湾机师堂

442
00:13:48,000 --> 00:13:49,000
波克莱之类的

443
00:13:49,000 --> 00:13:50,000
还是中国的

444
00:13:51,000 --> 00:13:52,000
各种各样的新书

445
00:13:52,000 --> 00:13:54,000
在这个需求是比较

446
00:13:54,000 --> 00:13:55,000
比较严重的

447
00:13:56,000 --> 00:13:57,000
这个没办法

448
00:13:57,000 --> 00:13:57,000
你在德国

449
00:13:57,000 --> 00:13:59,000
不与这个语言环境都不一样

450
00:13:59,000 --> 00:14:01,000
那这个自然是很难的

451
00:14:02,000 --> 00:14:04,000
但是其他的非

452
00:14:04,000 --> 00:14:05,000
就是非这种

453
00:14:05,000 --> 00:14:06,000
怎么说非精神消费品

454
00:14:06,000 --> 00:14:09,000
就好像没有什么特别需要从国内买的

455
00:14:10,000 --> 00:14:11,000
而且或者说国内买不是特别便宜

456
00:14:11,000 --> 00:14:12,000
除非

457
00:14:13,000 --> 00:14:15,000
是我们在讨论水货

458
00:14:15,000 --> 00:14:16,000
或者是

459
00:14:18,000 --> 00:14:19,000
山寨品

460
00:14:21,000 --> 00:14:23,000
水货这个东西是这样的

461
00:14:23,000 --> 00:14:23,000
就是

462
00:14:24,000 --> 00:14:25,000
你要是说

463
00:14:25,000 --> 00:14:27,000
你要是说在国内买

464
00:14:27,000 --> 00:14:28,000
比如说一个日本的

465
00:14:28,000 --> 00:14:31,000
什么 Sony RX 100 相机

466
00:14:31,000 --> 00:14:32,000
在国内特别便宜

467
00:14:33,000 --> 00:14:34,000
我无话可说

468
00:14:34,000 --> 00:14:35,000
它是水货对吧

469
00:14:35,000 --> 00:14:36,000
中国

470
00:14:36,000 --> 00:14:39,000
你要是说我通过偷逃税的方式

471
00:14:39,000 --> 00:14:41,000
来获得更便宜的东西是正义的话

472
00:14:41,000 --> 00:14:41,000
那我觉得

473
00:14:42,000 --> 00:14:43,000
也没有什么可以讨论的

474
00:14:43,000 --> 00:14:44,000
但是

475
00:14:44,000 --> 00:14:45,000
反过来说

476
00:14:47,000 --> 00:14:51,000
到底有什么东西是在国内合法渠道可以获得

477
00:14:51,000 --> 00:14:52,000
我在德国没有办法买到

478
00:14:52,000 --> 00:14:54,000
好像没有特别多

479
00:14:55,000 --> 00:14:57,000
就在物质产品上面应该是差不多

480
00:14:57,000 --> 00:14:58,000
毕竟是发达国家对吧

481
00:14:59,000 --> 00:14:59,000
对

482
00:15:00,000 --> 00:15:01,000
而反过来

483
00:15:01,000 --> 00:15:03,000
对正乎要说乐天商城你知道吗

484
00:15:03,000 --> 00:15:04,000
就是日本的

485
00:15:05,000 --> 00:15:06,000
乐天不是韩国的吗

486
00:15:07,000 --> 00:15:08,000
乐天是日本的哥哥

487
00:15:09,000 --> 00:15:09,000
是吗

488
00:15:09,000 --> 00:15:09,000
OK

489
00:15:09,000 --> 00:15:11,000
我意思是一不是韩国的

490
00:15:12,000 --> 00:15:15,000
阿里克斯的 UI 要比乐天商城好

491
00:15:16,000 --> 00:15:17,000
对

492
00:15:17,000 --> 00:15:17,000
这也还

493
00:15:18,000 --> 00:15:21,000
日本的电商不发达

494
00:15:21,000 --> 00:15:22,000
这个是

495
00:15:23,000 --> 00:15:24,000
应该是很多人知道的吧

496
00:15:25,000 --> 00:15:25,000
不

497
00:15:25,000 --> 00:15:27,000
但日本的很多

498
00:15:27,000 --> 00:15:32,000
至少在我脸里面是一个比较注重设计的

499
00:15:33,000 --> 00:15:34,000
但这点我觉得其实

500
00:15:35,000 --> 00:15:36,000
对我这个也是挺意外的

501
00:15:36,000 --> 00:15:38,000
但是其实我们看的现象来看

502
00:15:38,000 --> 00:15:41,000
日本在互联网这块其实挺落后的

503
00:15:41,000 --> 00:15:43,000
就是在相比他在发达国家里面的地位来讲

504
00:15:46,000 --> 00:15:47,000
好吧

505
00:15:47,000 --> 00:15:50,000
就跟他独特的这种地理人口环境

506
00:15:50,000 --> 00:15:52,000
日本有点像一个

507
00:15:52,000 --> 00:15:54,000
电商的科摩多岛

508
00:15:54,000 --> 00:15:55,000
台湾也是这样子

509
00:15:56,000 --> 00:15:58,000
台湾还好啊

510
00:15:58,000 --> 00:16:00,000
台湾跟日本在这方面其实非常像

511
00:16:00,000 --> 00:16:01,000
他都面临着这个

512
00:16:02,000 --> 00:16:03,000
因为他本身那种

513
00:16:03,000 --> 00:16:06,000
就是前电商时代的时候他已经很发达了

514
00:16:08,000 --> 00:16:09,000
就是没有一个舵型

515
00:16:09,000 --> 00:16:15,000
因为他没有读入大的市场的增量去使得这些

516
00:16:15,000 --> 00:16:17,000
这些厂商去愿意在上面做投入

517
00:16:17,000 --> 00:16:20,000
所以你看到很多这种日本台湾的这种网站也好

518
00:16:20,000 --> 00:16:21,000
还有这个电商也好

519
00:16:21,000 --> 00:16:24,000
感觉中国可能 2000 年

520
00:16:24,000 --> 00:16:28,000
或者 90 年代那种设计感觉就很稀松平常

521
00:16:29,000 --> 00:16:30,000
等等我们说的是

522
00:16:31,000 --> 00:16:33,000
电商网站的设计还是说电商模式

523
00:16:34,000 --> 00:16:35,000
是整体

524
00:16:35,000 --> 00:16:37,000
就整体来说都是这样

525
00:16:37,000 --> 00:16:39,000
就网站设计可能只是一种比较集中的表象吧

526
00:16:41,000 --> 00:16:41,000
好吧

527
00:16:41,000 --> 00:16:42,000
我觉得可能还是体量问题

528
00:16:42,000 --> 00:16:44,000
就是这两个国家都太小了

529
00:16:44,000 --> 00:16:45,000
然后

530
00:16:46,000 --> 00:16:50,000
你不管欧洲美国还是中国都是一个比较

531
00:16:50,000 --> 00:16:51,000
大国是吧

532
00:16:51,000 --> 00:16:52,000
比较

533
00:16:52,000 --> 00:16:53,000
比较对

534
00:16:54,000 --> 00:16:55,000
有足够大的

535
00:16:56,000 --> 00:16:57,000
好了我们不说这些了

536
00:16:57,000 --> 00:17:00,000
这些话题实在是太 ID 公论了

537
00:17:00,000 --> 00:17:00,000
我们

538
00:17:02,000 --> 00:17:02,000
没有

539
00:17:02,000 --> 00:17:05,000
其实我说到刚才讲那么一大堆

540
00:17:05,000 --> 00:17:08,000
就是有个挺巧的事

541
00:17:08,000 --> 00:17:10,000
最近那个 Codenhawr

542
00:17:10,000 --> 00:17:11,000
那个叫什么

543
00:17:11,000 --> 00:17:12,000
Jeff 对吧

544
00:17:13,000 --> 00:17:13,000
对

545
00:17:13,000 --> 00:17:14,000
Jeff Edward

546
00:17:14,000 --> 00:17:15,000
对 Jeff Edward

547
00:17:15,000 --> 00:17:18,000
他是 Stack Overflow 的创始人

548
00:17:18,000 --> 00:17:21,000
他在他的个人博客上写了一篇文章

549
00:17:21,000 --> 00:17:24,000
叫做 The Scooter Computer

550
00:17:24,000 --> 00:17:25,000
Scooter 是一个

551
00:17:25,000 --> 00:17:27,000
就是那个小朋友玩的一个

552
00:17:27,000 --> 00:17:28,000
这东西叫什么

553
00:17:28,000 --> 00:17:30,000
这里是指滑板车

554
00:17:30,000 --> 00:17:31,000
不是指速可达

555
00:17:32,000 --> 00:17:33,000
就是滑板车是那种

556
00:17:33,000 --> 00:17:35,000
就是有一个小杆

557
00:17:35,000 --> 00:17:36,000
下面有一个小平板

558
00:17:36,000 --> 00:17:37,000
然后两楼一车

559
00:17:37,000 --> 00:17:38,000
踩在上面

560
00:17:38,000 --> 00:17:39,000
然后蹬地的那种东西

561
00:17:40,000 --> 00:17:42,000
然后他讲了一个什么事

562
00:17:42,000 --> 00:17:43,000
他就说他想买一个

563
00:17:44,000 --> 00:17:46,000
小型的这种

564
00:17:47,000 --> 00:17:49,000
就 VPN 网关简单来说是这样

565
00:17:49,000 --> 00:17:50,000
他过去他是刷了一台

566
00:17:50,000 --> 00:17:53,000
那个华硕的 RTN 16 的路由器

567
00:17:53,000 --> 00:17:55,000
刷那个应该是 OpenWRT

568
00:17:55,000 --> 00:17:56,000
还有 TOMATO

569
00:17:57,000 --> 00:17:58,000
刷了 TOMATO 之后

570
00:17:58,000 --> 00:17:59,000
他就用一个 VPN

571
00:17:59,000 --> 00:18:01,000
就连到他的机房里面去

572
00:18:01,000 --> 00:18:04,000
他们机房还挺传统的

573
00:18:04,000 --> 00:18:05,000
他们不是用云服务

574
00:18:05,000 --> 00:18:08,000
他们还是用那个叫做 Colocation

575
00:18:08,000 --> 00:18:09,000
Colocation 中文叫什么来的

576
00:18:09,000 --> 00:18:11,000
就是自己买服务器

577
00:18:11,000 --> 00:18:14,000
放到一个机房的架子

578
00:18:14,000 --> 00:18:15,000
机房托网吗

579
00:18:15,000 --> 00:18:16,000
租空间对

580
00:18:16,000 --> 00:18:17,000
主机托网这一块

581
00:18:18,000 --> 00:18:20,000
所以他有一个 VPN 的需求

582
00:18:20,000 --> 00:18:22,000
但后来他想那个 VPN 太慢了

583
00:18:22,000 --> 00:18:24,000
OpenSS 版本比较低

584
00:18:24,000 --> 00:18:25,000
然后他想换一个

585
00:18:25,000 --> 00:18:27,000
就是这种 Full Blur Linux

586
00:18:27,000 --> 00:18:28,000
就是他以前

587
00:18:28,000 --> 00:18:30,000
跑的是一个精简版的 Linux

588
00:18:30,000 --> 00:18:31,000
觉得不太行

589
00:18:31,000 --> 00:18:32,000
版本也很旧也不方便

590
00:18:32,000 --> 00:18:35,000
他想换一个全功能的 Linux 放不进

591
00:18:35,000 --> 00:18:38,000
就想跑一个 X 86 的处理器

592
00:18:38,000 --> 00:18:39,000
然后找了半天

593
00:18:39,000 --> 00:18:40,000
跑去那个 AliExpress

594
00:18:40,000 --> 00:18:41,000
找了一个那种

595
00:18:42,000 --> 00:18:44,000
没有厂牌的盒子

596
00:18:45,000 --> 00:18:46,000
然后那个一个就是那种

597
00:18:46,000 --> 00:18:47,000
之前我们提到过一个

598
00:18:47,000 --> 00:18:49,000
叫做 Intel 的叫 NUC

599
00:18:49,000 --> 00:18:52,000
Intel 的叫做 NX Unit of Computing

600
00:18:52,000 --> 00:18:53,000
就是一个大概是 5 寸

601
00:18:53,000 --> 00:18:56,000
乘以 5 寸的一个小方行

602
00:18:56,000 --> 00:18:57,000
然后里面有一个超小的那种

603
00:18:57,000 --> 00:18:59,000
叫做 Mini ITX 主板

604
00:18:59,000 --> 00:19:01,000
然后要整合一个 I 3

605
00:19:01,000 --> 00:19:03,000
或者是 I 5 的这种 CPU

606
00:19:03,000 --> 00:19:05,000
对可以挂在显示器的后面什么的

607
00:19:05,000 --> 00:19:06,000
对对可以

608
00:19:06,000 --> 00:19:07,000
他有一个

609
00:19:07,000 --> 00:19:09,000
他刚好是那个叫做 V 3 Mount

610
00:19:09,000 --> 00:19:10,000
那个大小标准

611
00:19:10,000 --> 00:19:10,000
可以挂显示器后面

612
00:19:11,000 --> 00:19:12,000
就那种所谓的小电脑

613
00:19:13,000 --> 00:19:14,000
然后他就买了这么

614
00:19:15,000 --> 00:19:17,000
从 AliExpress 买了这么一个小电脑

615
00:19:17,000 --> 00:19:18,000
然后他的配置

616
00:19:18,000 --> 00:19:21,000
其实我们看下其实还挺惊人的

617
00:19:21,000 --> 00:19:22,000
这小电脑 350 导码

618
00:19:22,000 --> 00:19:23,000
他说

619
00:19:23,000 --> 00:19:24,000
然后是一个 I 5 的

620
00:19:24,000 --> 00:19:26,000
5200 Brawlwell

621
00:19:26,000 --> 00:19:29,000
双核四线程的 2.2 G 的 CPU

622
00:19:29,000 --> 00:19:32,000
16 兆的 DDR 3 内侧

623
00:19:32,000 --> 00:19:35,000
128 兆的这个 M.2 接口的 SSD

624
00:19:35,000 --> 00:19:37,000
然后有两个这个千兆的

625
00:19:37,000 --> 00:19:40,000
Realtek 8168 的网口

626
00:19:40,000 --> 00:19:42,000
还有这个显示输出这无所谓的

627
00:19:42,000 --> 00:19:43,000
因为他是用来做

628
00:19:43,000 --> 00:19:44,000
那个服务器

629
00:19:44,000 --> 00:19:45,000
这样有网卡就可以了

630
00:19:45,000 --> 00:19:47,000
然后这个事情就刚好

631
00:19:47,000 --> 00:19:49,000
就触到我了

632
00:19:49,000 --> 00:19:50,000
因为我之前

633
00:19:50,000 --> 00:19:52,000
我最近一直在找一台这种

634
00:19:53,000 --> 00:19:55,000
家里的那种网关

635
00:19:55,000 --> 00:19:57,000
因为我之前都用路由器跑那些东西

636
00:19:57,000 --> 00:19:58,000
就是他说

637
00:19:58,000 --> 00:20:00,000
我有一个非常小的

638
00:20:00,000 --> 00:20:01,000
那个 TP-Link 的

639
00:20:01,000 --> 00:20:04,000
WR 703 N 的那个小盒子

640
00:20:04,000 --> 00:20:06,000
他当时买 99 块钱

641
00:20:06,000 --> 00:20:07,000
很多年前买的

642
00:20:07,000 --> 00:20:09,000
他是一个 400 兆盒子

643
00:20:09,000 --> 00:20:10,000
这种 Etherus 的处理器

644
00:20:10,000 --> 00:20:13,000
然后当时可以刷了那个 OpenWRT 之后

645
00:20:13,000 --> 00:20:14,000
可以跑那个

646
00:20:16,000 --> 00:20:17,000
什么 DLS

647
00:20:17,000 --> 00:20:17,000
DHCP

648
00:20:18,000 --> 00:20:20,000
还有一些什么 VPN 的服务

649
00:20:21,000 --> 00:20:23,000
他说那个东西性能实在太差了

650
00:20:24,000 --> 00:20:24,000
因为只有

651
00:20:25,000 --> 00:20:27,000
只有 32 兆的内存对吧

652
00:20:27,000 --> 00:20:30,000
然后 400 兆赫兹的这个

653
00:20:30,000 --> 00:20:31,000
是 MIPS 的处理器

654
00:20:32,000 --> 00:20:33,000
应该是 MIPS 价格

655
00:20:33,000 --> 00:20:34,000
就很弱

656
00:20:34,000 --> 00:20:38,000
就跑一个什么 10 兆左右的带宽

657
00:20:38,000 --> 00:20:40,000
差不多就把 CPU 充满了

658
00:20:40,000 --> 00:20:41,000
就 VPN

659
00:20:41,000 --> 00:20:44,000
然后但是我家的那个宽带室

660
00:20:44,000 --> 00:20:45,000
那光纤是百兆的嘛

661
00:20:46,000 --> 00:20:47,000
就是说经常就是不够用

662
00:20:47,000 --> 00:20:49,000
然后我想后来这个 Wired

663
00:20:49,000 --> 00:20:51,000
不是是那个

664
00:20:52,000 --> 00:20:54,000
是那个 Ars Technica 上面有一

665
00:20:54,000 --> 00:20:56,000
就一月份的时候他们发了篇文章

666
00:20:56,000 --> 00:20:59,000
就比较了一个还算不错的路由器吧

667
00:20:59,000 --> 00:21:00,000
几款

668
00:21:00,000 --> 00:21:01,000
有一款是那个 Buffalo 的

669
00:21:01,000 --> 00:21:04,000
就是这个跟 G 300 N 跟我那个

670
00:21:04,000 --> 00:21:07,000
TP-Link 的那个 703 N 是差不多性能的

671
00:21:07,000 --> 00:21:09,000
和一个就是相对来说好一点的

672
00:21:11,000 --> 00:21:15,000
这个 Nixos 的算是中档的路由器吧

673
00:21:15,000 --> 00:21:16,000
还有一个现在目前来说比较高端的

674
00:21:16,000 --> 00:21:20,000
Netgear 的那个 Nethawk X 6 的那个路由器

675
00:21:20,000 --> 00:21:22,000
然后比较了他们的这个路由的性能

676
00:21:22,000 --> 00:21:24,000
你发现其实你看那张表

677
00:21:24,000 --> 00:21:28,000
它在那个就是低运运运发数的时候

678
00:21:28,000 --> 00:21:31,000
就是可能比如说 1000 的连接以下的时候

679
00:21:31,000 --> 00:21:33,000
就就就 100 兆的话

680
00:21:33,000 --> 00:21:34,000
你连这几个都还没问题

681
00:21:34,000 --> 00:21:36,000
但是如果你放到一个千兆的环境里面去

682
00:21:36,000 --> 00:21:39,000
你可以发现明显就就那个

683
00:21:39,000 --> 00:21:40,000
那些中低端的路由器

684
00:21:40,000 --> 00:21:42,000
基本上就没有什么性能可言了

685
00:21:42,000 --> 00:21:43,000
就是不说百兆了

686
00:21:43,000 --> 00:21:44,000
可能十兆都很悬

687
00:21:44,000 --> 00:21:46,000
就是高必发的情况下

688
00:21:46,000 --> 00:21:48,000
但是你看一下那个 X 86 的

689
00:21:48,000 --> 00:21:50,000
就是它跑了一个非常旧的

690
00:21:50,000 --> 00:21:51,000
一个 Evebridge 的一个一个

691
00:21:51,000 --> 00:21:52,000
X 86 的处理器吧

692
00:21:52,000 --> 00:21:53,000
还是 Atom 的

693
00:21:53,000 --> 00:21:55,000
就是还不是那种什么 I 3 I 5

694
00:21:56,000 --> 00:21:58,000
它的那个路由的性能

695
00:21:58,000 --> 00:22:00,000
就是做 NAT 嘛对吧

696
00:22:00,000 --> 00:22:02,000
那个 Network 就是地质转换的一个性能

697
00:22:02,000 --> 00:22:04,000
其实是非常非常高的

698
00:22:04,000 --> 00:22:05,000
它在高必发的情况下

699
00:22:05,000 --> 00:22:06,000
也能达到可能差不多

700
00:22:07,000 --> 00:22:09,000
七八百兆的这种一种性能

701
00:22:10,000 --> 00:22:13,000
然后我就就勾起我了

702
00:22:13,000 --> 00:22:13,000
那个什么

703
00:22:14,000 --> 00:22:16,000
就想买一个

704
00:22:16,000 --> 00:22:17,000
这就是被人安利了

705
00:22:17,000 --> 00:22:19,000
被人中草了

706
00:22:19,000 --> 00:22:20,000
没错

707
00:22:20,000 --> 00:22:21,000
对对对

708
00:22:21,000 --> 00:22:24,000
因为因为就是路由性能

709
00:22:24,000 --> 00:22:25,000
其实很多人都觉得

710
00:22:27,000 --> 00:22:28,000
就这东西是挺难去

711
00:22:29,000 --> 00:22:30,000
对于普通消费者很难去度量的

712
00:22:30,000 --> 00:22:31,000
就是说

713
00:22:31,000 --> 00:22:33,000
相对来说我们这种比较要求比较高

714
00:22:33,000 --> 00:22:35,000
然后也挺挑剔的

715
00:22:35,000 --> 00:22:37,000
这种人才会去琢磨这个事

716
00:22:37,000 --> 00:22:39,000
我觉得主要是对于普通消费者来说

717
00:22:39,000 --> 00:22:39,000
这个东西

718
00:22:39,000 --> 00:22:42,000
它能够给自己带来什么样的注意

719
00:22:42,000 --> 00:22:44,000
好像特别的模糊

720
00:22:44,000 --> 00:22:46,000
不是那么直观

721
00:22:46,000 --> 00:22:48,000
主要是感受

722
00:22:48,000 --> 00:22:50,000
他们感受得到就是可能家里网慢

723
00:22:50,000 --> 00:22:51,000
特别是有时候可能

724
00:22:51,000 --> 00:22:52,000
你觉得网慢但是

725
00:22:52,000 --> 00:22:53,000
你找不到原因

726
00:22:53,000 --> 00:22:54,000
你不知道为什么

727
00:22:54,000 --> 00:22:55,000
通常会直接说

728
00:22:55,000 --> 00:22:56,000
直接 blame 运营商说

729
00:22:56,000 --> 00:22:58,000
我靠这个连通的网太慢

730
00:22:58,000 --> 00:22:59,000
或者是

731
00:22:59,000 --> 00:23:01,000
卧蓝风的网太慢了对吧

732
00:23:01,000 --> 00:23:02,000
但对对对

733
00:23:02,000 --> 00:23:02,000
但是人会说

734
00:23:02,000 --> 00:23:05,000
会去说这会不会是我路由器比较差什么的

735
00:23:06,000 --> 00:23:07,000
对对对

736
00:23:07,000 --> 00:23:09,000
所以就很多人就说一直在

737
00:23:09,000 --> 00:23:10,000
就是被这个

738
00:23:10,000 --> 00:23:11,000
就其实可能现在很多

739
00:23:11,000 --> 00:23:13,000
这个中国在搞光纤进入普及吗

740
00:23:14,000 --> 00:23:15,000
很多家里装的很快的那光纤

741
00:23:15,000 --> 00:23:17,000
但其实并没有用的多少

742
00:23:17,000 --> 00:23:18,000
特别是家里人稍微多一点

743
00:23:18,000 --> 00:23:20,000
或者设备稍微多一点时候

744
00:23:20,000 --> 00:23:22,000
还有一些人在家里加 BT 的时候

745
00:23:23,000 --> 00:23:24,000
那个就完全不能用了

746
00:23:25,000 --> 00:23:27,000
但就就就路由性的

747
00:23:27,000 --> 00:23:29,000
其实是一个挺那个的

748
00:23:29,000 --> 00:23:30,000
挺难去

749
00:23:31,000 --> 00:23:32,000
普通消费者挺能判断的一个话题

750
00:23:32,000 --> 00:23:35,000
现在国内不是也在炒各种什么

751
00:23:35,000 --> 00:23:36,000
智能路由器在卖吗

752
00:23:36,000 --> 00:23:38,000
但是他们新的机身都不咋地

753
00:23:39,000 --> 00:23:39,000
就刚刚我们看

754
00:23:39,000 --> 00:23:41,000
2%那种所谓 1000 多块钱的

755
00:23:41,000 --> 00:23:43,000
所谓高端的家用路由器

756
00:23:43,000 --> 00:23:45,000
在那种高大快乐情况下

757
00:23:45,000 --> 00:23:46,000
其实也挺糟糕的

758
00:23:46,000 --> 00:23:48,000
所以我就一直在想搞一个这种

759
00:23:48,000 --> 00:23:49,000
X 86 的盒子

760
00:23:49,000 --> 00:23:50,000
然后我就去看

761
00:23:50,000 --> 00:23:52,000
那个又在国内

762
00:23:52,000 --> 00:23:54,000
就京东上买的话其实还是

763
00:23:54,000 --> 00:23:56,000
我记得买京东还挺方便的

764
00:23:56,000 --> 00:23:57,000
淘宝上就经常

765
00:23:57,000 --> 00:23:59,000
觉得有时候不是很放心

766
00:23:59,000 --> 00:24:01,000
然后如果退货也挺麻烦的

767
00:24:01,000 --> 00:24:02,000
京东上面很多就可以是七天

768
00:24:02,000 --> 00:24:03,000
淘宝退货很麻烦

769
00:24:05,000 --> 00:24:05,000
因为他小卖家

770
00:24:06,000 --> 00:24:08,000
你也得跟他去商量那些乱七八糟的事情

771
00:24:08,000 --> 00:24:10,000
但是如果你在京东上买那个什么

772
00:24:10,000 --> 00:24:11,000
京东自营的文化

773
00:24:11,000 --> 00:24:13,000
你挑好那个什么

774
00:24:13,000 --> 00:24:14,000
就七天无理由退货的话

775
00:24:14,000 --> 00:24:16,000
你根本不用讲他直接来上面取

776
00:24:16,000 --> 00:24:17,000
他也不会问你任何问题对吧

777
00:24:18,000 --> 00:24:19,000
很养顺一样的

778
00:24:19,000 --> 00:24:20,000
对

779
00:24:20,000 --> 00:24:22,000
所以我在京东上买了很多这种东西

780
00:24:22,000 --> 00:24:23,000
就去看

781
00:24:23,000 --> 00:24:24,000
就发现

782
00:24:25,000 --> 00:24:26,000
京东上面买那种

783
00:24:27,000 --> 00:24:30,000
大品牌的那些热卖款息还可以

784
00:24:30,000 --> 00:24:33,000
但是一旦遇到这种需求量比较小众的产品

785
00:24:33,000 --> 00:24:35,000
就挺糟糕的了

786
00:24:37,000 --> 00:24:39,000
然后我就想去买这种盒子

787
00:24:39,000 --> 00:24:40,000
因为如果你要做路由的话

788
00:24:40,000 --> 00:24:44,000
那个盒子它最好是有两个网口对吧

789
00:24:45,000 --> 00:24:47,000
因为一个插那个光纤的猫码

790
00:24:47,000 --> 00:24:49,000
一个插那边的

791
00:24:50,000 --> 00:24:53,000
那边的无线交换机或者怎么样

792
00:24:53,000 --> 00:24:54,000
你就不用

793
00:24:54,000 --> 00:24:57,000
你就不用用无线路由做他的路由功能

794
00:24:57,000 --> 00:24:58,000
因为反正不好

795
00:24:58,000 --> 00:25:00,000
对可以直接用小电脑做路由功能

796
00:25:00,000 --> 00:25:05,000
然后无线就只做无线的转发和交换机的功能

797
00:25:06,000 --> 00:25:09,000
然后发现就是还这种品牌的带双

798
00:25:10,000 --> 00:25:13,000
双网卡的这种小电脑盒子还挺少的

799
00:25:14,000 --> 00:25:17,000
我觉得这种电脑被设计出来的时候

800
00:25:17,000 --> 00:25:20,000
可能其设计者就会说这个东西

801
00:25:20,000 --> 00:25:23,000
应该能够拿来被人当路由

802
00:25:23,000 --> 00:25:24,000
否则他不会

803
00:25:24,000 --> 00:25:25,000
应该我觉得

804
00:25:25,000 --> 00:25:28,000
不会专门设计出两个网卡接口来

805
00:25:29,000 --> 00:25:31,000
就是小众嘛

806
00:25:34,000 --> 00:25:35,000
对好你继续

807
00:25:35,000 --> 00:25:38,000
对所以当时我就想各种办法

808
00:25:38,000 --> 00:25:40,000
我也想了其他一些的方法

809
00:25:40,000 --> 00:25:41,000
就是如果说你只有

810
00:25:41,000 --> 00:25:42,000
因为还有一个问题就是说

811
00:25:42,000 --> 00:25:43,000
你去淘宝上买那些品牌

812
00:25:43,000 --> 00:25:44,000
他都没有品牌

813
00:25:44,000 --> 00:25:45,000
你也不知道质量怎么样对吧

814
00:25:45,000 --> 00:25:46,000
有时候什么不一定

815
00:25:46,000 --> 00:25:47,000
你也挺

816
00:25:47,000 --> 00:25:48,000
可是 AliExpress 不就是

817
00:25:49,000 --> 00:25:51,000
相当于你在 AliExpress 上买

818
00:25:51,000 --> 00:25:53,000
和在淘宝上买有什么差别吗

819
00:25:53,000 --> 00:25:55,000
对这就是牵涉到那个问题

820
00:25:56,000 --> 00:25:59,000
你会发现他们 AliExpress 上面同样的东西

821
00:26:00,000 --> 00:26:01,000
就是因为那个页面的问题

822
00:26:01,000 --> 00:26:04,000
你会觉得这东西卖的东西会更靠谱一点

823
00:26:05,000 --> 00:26:07,000
所以这完全是个迈向给你带来的

824
00:26:07,000 --> 00:26:09,000
可靠性的印象产品

825
00:26:09,000 --> 00:26:10,000
就是迈向不够好

826
00:26:10,000 --> 00:26:12,000
淘宝上的迈向就很差

827
00:26:12,000 --> 00:26:13,000
好吧

828
00:26:14,000 --> 00:26:14,000
对

829
00:26:14,000 --> 00:26:15,000
所以说

830
00:26:16,000 --> 00:26:18,000
而且就产品的选择上面

831
00:26:18,000 --> 00:26:18,000
其实你可以看到

832
00:26:18,000 --> 00:26:20,000
它的用心程度完全不一样的

833
00:26:20,000 --> 00:26:21,000
比如说 AliExpress 他同样卖

834
00:26:22,000 --> 00:26:23,000
它是一个无缝散的

835
00:26:23,000 --> 00:26:25,000
就是全个那个机身是一个铝合金的

836
00:26:25,000 --> 00:26:27,000
被动散热的

837
00:26:28,000 --> 00:26:29,000
你在淘宝上找就很难找

838
00:26:29,000 --> 00:26:30,000
就走到找出来的时候

839
00:26:30,000 --> 00:26:32,000
你怎么不知道到底能不能散热

840
00:26:33,000 --> 00:26:34,000
还是那个迈向

841
00:26:35,000 --> 00:26:36,000
对 AliExpress 他就会讲得很清楚

842
00:26:36,000 --> 00:26:37,000
这个怎么样

843
00:26:37,000 --> 00:26:41,000
然后刚好 Jeff 他那篇文章也他买了

844
00:26:41,000 --> 00:26:42,000
他也拍了这个照片给我们看

845
00:26:42,000 --> 00:26:43,000
然后他还拆开

846
00:26:43,000 --> 00:26:44,000
一部一部的一部的一部

847
00:26:44,000 --> 00:26:46,000
我觉得这个迈向还挺好的

848
00:26:46,000 --> 00:26:48,000
虽然说做工也不怎么

849
00:26:48,000 --> 00:26:50,000
就外观也不怎么漂亮

850
00:26:50,000 --> 00:26:52,000
但是基本上就觉得他做工还是挺

851
00:26:52,000 --> 00:26:53,000
挺扎实的

852
00:26:53,000 --> 00:26:55,000
很厚的一个铝合金的盒子

853
00:26:55,000 --> 00:26:55,000
对吧

854
00:26:55,000 --> 00:26:58,000
然后炸一条是 Unibody

855
00:26:58,000 --> 00:27:00,000
对炸一看好像是那种

856
00:27:00,000 --> 00:27:01,000
苹果的 Unibody 的盒子一样

857
00:27:01,000 --> 00:27:02,000
对吧

858
00:27:02,000 --> 00:27:03,000
还挺不错

859
00:27:03,000 --> 00:27:07,000
Anyway 又扯回这篇文章里面讲的东西

860
00:27:07,000 --> 00:27:07,000
对

861
00:27:07,000 --> 00:27:08,000
你看

862
00:27:08,000 --> 00:27:10,000
发现你 350 刀大概多少钱

863
00:27:11,000 --> 00:27:12,000
2000 多人民币

864
00:27:12,000 --> 00:27:15,000
就可以买个性能相当不赞的

865
00:27:17,000 --> 00:27:19,000
最新一款的处理小电脑了

866
00:27:19,000 --> 00:27:23,000
然后到录制的话其实还挺不错的

867
00:27:24,000 --> 00:27:24,000
对

868
00:27:25,000 --> 00:27:26,000
我其实有点不明白

869
00:27:26,000 --> 00:27:28,000
所谓 Scooter Computer

870
00:27:28,000 --> 00:27:31,000
它跟 Scooter 的共同点到底在哪

871
00:27:31,000 --> 00:27:32,000
小吗

872
00:27:33,000 --> 00:27:33,000
除了小

873
00:27:33,000 --> 00:27:35,000
那为什么不叫

874
00:27:35,000 --> 00:27:36,000
Onever Mini Computer

875
00:27:36,000 --> 00:27:37,000
或者是

876
00:27:38,000 --> 00:27:39,000
像一个小的东西

877
00:27:39,000 --> 00:27:40,000
这个有个比喻

878
00:27:40,000 --> 00:27:42,000
之前不是谁来的

879
00:27:42,000 --> 00:27:44,000
谁说是一个 Bicycle 来的

880
00:27:45,000 --> 00:27:45,000
OK

881
00:27:45,000 --> 00:27:46,000
乔布斯

882
00:27:47,000 --> 00:27:48,000
好像是

883
00:27:48,000 --> 00:27:48,000
对

884
00:27:48,000 --> 00:27:49,000
是乔布斯吧

885
00:27:51,000 --> 00:27:51,000
对

886
00:27:51,000 --> 00:27:52,000
乔布斯说

887
00:27:52,000 --> 00:27:54,000
PC 是一个 Truck

888
00:27:54,000 --> 00:27:55,000
是一个卡车

889
00:27:55,000 --> 00:27:57,000
然后那些小电脑是一个

890
00:27:57,000 --> 00:27:58,000
不是

891
00:27:58,000 --> 00:27:59,000
那句话原话什么

892
00:28:00,000 --> 00:28:01,000
Computer is a bicycle for a mind

893
00:28:01,000 --> 00:28:02,000
对吧

894
00:28:02,000 --> 00:28:02,000
对

895
00:28:02,000 --> 00:28:03,000
Mind bicycle

896
00:28:03,000 --> 00:28:06,000
就个人电脑是你头脑的一个自行车

897
00:28:06,000 --> 00:28:07,000
可以帮你

898
00:28:07,000 --> 00:28:08,000
辅助你的功能

899
00:28:11,000 --> 00:28:12,000
是

900
00:28:12,000 --> 00:28:15,000
但其实乔布斯这话我也没有特别理解

901
00:28:15,000 --> 00:28:17,000
就为什么是自行车

902
00:28:17,000 --> 00:28:22,000
因为你需要用自己的脑力去驱动它吗

903
00:28:22,000 --> 00:28:22,000
还是

904
00:28:25,000 --> 00:28:25,000
还是说他

905
00:28:25,000 --> 00:28:27,000
你还得做点什么吧

906
00:28:27,000 --> 00:28:28,000
他说这句话的意思

907
00:28:28,000 --> 00:28:29,000
还是只是说这个东西

908
00:28:29,000 --> 00:28:32,000
它比你走步要快

909
00:28:34,000 --> 00:28:38,000
有时候这些东西是有点

910
00:28:39,000 --> 00:28:40,000
不是细思极恐

911
00:28:40,000 --> 00:28:41,000
但有点

912
00:28:42,000 --> 00:28:44,000
越想越想不明白的一种说法

913
00:28:44,000 --> 00:28:46,000
不管是所谓 Scooter

914
00:28:46,000 --> 00:28:46,000
Computer

915
00:28:46,000 --> 00:28:50,000
还是 Computer is the bicycle for your mind

916
00:28:53,000 --> 00:28:55,000
说回 Scooter 这件事情

917
00:28:55,000 --> 00:28:56,000
Scooter 是个什么东西

918
00:28:56,000 --> 00:28:58,000
Scooter 就是一个非常原始的

919
00:28:58,000 --> 00:29:00,000
它可能比自行车还原始一点

920
00:29:00,000 --> 00:29:01,000
比如说自行车还有什么

921
00:29:01,000 --> 00:29:02,000
链条

922
00:29:02,000 --> 00:29:03,000
还有什么这种

923
00:29:03,000 --> 00:29:04,000
就不说辨识

924
00:29:04,000 --> 00:29:06,000
就算那种最简单的自行车

925
00:29:06,000 --> 00:29:06,000
它还是有

926
00:29:06,000 --> 00:29:08,000
它结构还相当于说比较复杂

927
00:29:08,000 --> 00:29:08,000
对吧

928
00:29:10,000 --> 00:29:11,000
结果简单肯定

929
00:29:11,000 --> 00:29:12,000
但是原始到为比

930
00:29:12,000 --> 00:29:13,000
因为自行车毕竟是一个

931
00:29:13,000 --> 00:29:15,000
18 世纪就出现的东西

932
00:29:15,000 --> 00:29:17,000
在那之前是不可能 Scooter

933
00:29:18,000 --> 00:29:20,000
但是你如果你比较一个

934
00:29:20,000 --> 00:29:21,000
现代的自行车

935
00:29:21,000 --> 00:29:22,000
现代的一个 Scooter

936
00:29:22,000 --> 00:29:23,000
你觉得哪个更简单一点

937
00:29:25,000 --> 00:29:26,000
我刚才说的就是 Scooter

938
00:29:26,000 --> 00:29:27,000
的确更简单一点

939
00:29:27,000 --> 00:29:29,000
但它并不一定更原始

940
00:29:29,000 --> 00:29:29,000
就那样

941
00:29:34,000 --> 00:29:35,000
所以 Scooter

942
00:29:35,000 --> 00:29:37,000
Computer 叫什么

943
00:29:38,000 --> 00:29:39,000
你刚才说 Scooter 中文叫什么来着

944
00:29:39,000 --> 00:29:40,000
滑板车是吧

945
00:29:40,000 --> 00:29:41,000
对

946
00:29:41,000 --> 00:29:43,000
滑板车这种东西就是那种

947
00:29:43,000 --> 00:29:44,000
你可以买一个

948
00:29:44,000 --> 00:29:45,000
然后你需要用一下的时候

949
00:29:45,000 --> 00:29:46,000
就用一下

950
00:29:46,000 --> 00:29:47,000
然后你不需要用的时候

951
00:29:47,000 --> 00:29:48,000
就是

952
00:29:48,000 --> 00:29:50,000
就是一个专用设备

953
00:29:50,000 --> 00:29:50,000
吧

954
00:29:50,000 --> 00:29:51,000
你可以这么说

955
00:29:51,000 --> 00:29:52,000
我觉得 Scooter 的隐喻

956
00:29:52,000 --> 00:29:53,000
可能是在这儿

957
00:29:53,000 --> 00:29:55,000
就是 Scooter 它是一个

958
00:29:56,000 --> 00:29:58,000
供你短途代物的工具

959
00:29:58,000 --> 00:30:00,000
就是有这一段距离

960
00:30:00,000 --> 00:30:02,000
我记得 JFAT 在文章里面

961
00:30:02,000 --> 00:30:04,000
写应该是一到三英里

962
00:30:04,000 --> 00:30:05,000
对

963
00:30:05,000 --> 00:30:07,000
然后要求地面是平的

964
00:30:07,000 --> 00:30:08,000
水泥路面

965
00:30:08,000 --> 00:30:08,000
对

966
00:30:08,000 --> 00:30:09,000
五公里之内的距离

967
00:30:09,000 --> 00:30:11,000
你可能走回去太远

968
00:30:11,000 --> 00:30:12,000
就可能要一小时

969
00:30:12,000 --> 00:30:13,000
走人的步行速度

970
00:30:13,000 --> 00:30:14,000
应该是每小时五公里吧

971
00:30:14,000 --> 00:30:16,000
那你可能走五公里要一小时

972
00:30:16,000 --> 00:30:17,000
但如果你踩滑板车的话

973
00:30:17,000 --> 00:30:18,000
那可能就

974
00:30:18,000 --> 00:30:20,000
五公里还是有点太长

975
00:30:20,000 --> 00:30:20,000
因为

976
00:30:20,000 --> 00:30:21,000
3.3 公里

977
00:30:21,000 --> 00:30:23,000
我骑车上边都觉得

978
00:30:23,000 --> 00:30:23,000
稍微有点远

979
00:30:23,000 --> 00:30:24,000
但是

980
00:30:25,000 --> 00:30:26,000
我用滑板车应该是可以接受的

981
00:30:26,000 --> 00:30:27,000
安理为

982
00:30:27,000 --> 00:30:28,000
滑板车比如说在展会里面

983
00:30:28,000 --> 00:30:30,000
就是这个展会可能特别大

984
00:30:31,000 --> 00:30:32,000
有十几个展厅

985
00:30:32,000 --> 00:30:34,000
然后你可能需要从一端到另一端

986
00:30:34,000 --> 00:30:35,000
每天

987
00:30:35,000 --> 00:30:36,000
就比如说你是在展厅工作人员

988
00:30:36,000 --> 00:30:38,000
你可能每天往返几十次

989
00:30:38,000 --> 00:30:39,000
在这个情况下

990
00:30:39,000 --> 00:30:41,000
走路是非常不经济的

991
00:30:41,000 --> 00:30:42,000
但是你又没办法开车

992
00:30:42,000 --> 00:30:43,000
那用一个滑板车

993
00:30:43,000 --> 00:30:44,000
其实是非常非常方便的

994
00:30:45,000 --> 00:30:47,000
所以很多展会的工作人员

995
00:30:47,000 --> 00:30:48,000
都会用滑板车

996
00:30:48,000 --> 00:30:49,000
而且滑板车它的优点

997
00:30:49,000 --> 00:30:51,000
是不像憨冰鞋或者滑板那样

998
00:30:52,000 --> 00:30:53,000
你需要学

999
00:30:53,000 --> 00:30:54,000
需要一定技巧

1000
00:30:54,000 --> 00:30:55,000
滑板车基本上你学

1001
00:30:55,000 --> 00:30:58,000
只需要半分钟就可以学会

1002
00:30:58,000 --> 00:30:58,000
对

1003
00:30:58,000 --> 00:31:01,000
而且它那个就是

1004
00:31:01,000 --> 00:31:03,000
hop on and hop off 都比较简单了

1005
00:31:03,000 --> 00:31:03,000
对

1006
00:31:03,000 --> 00:31:04,000
你用的憨冰鞋

1007
00:31:04,000 --> 00:31:06,000
你还得穿一脱脱一下的吧

1008
00:31:06,000 --> 00:31:06,000
对

1009
00:31:06,000 --> 00:31:08,000
这个引誉可能就是

1010
00:31:08,000 --> 00:31:10,000
这个小的电脑用起来简单

1011
00:31:10,000 --> 00:31:12,000
然后

1012
00:31:12,000 --> 00:31:15,000
就不用你麻烦你去专门

1013
00:31:15,000 --> 00:31:17,000
穿一台 PC 来搞这种事情

1014
00:31:17,000 --> 00:31:18,000
只要买过来就可以

1015
00:31:18,000 --> 00:31:19,000
对

1016
00:31:19,000 --> 00:31:20,000
但我想说的是

1017
00:31:20,000 --> 00:31:21,000
他虽然说这个 scooter

1018
00:31:21,000 --> 00:31:23,000
scooter 这个 computer 非常的

1019
00:31:25,000 --> 00:31:25,000
好用

1020
00:31:26,000 --> 00:31:27,000
但其实它一点也不如我小

1021
00:31:27,000 --> 00:31:28,000
你发现刚才我念的配置

1022
00:31:29,000 --> 00:31:31,000
他买的两千块钱左右的配置

1023
00:31:31,000 --> 00:31:33,000
其实是相当强大的

1024
00:31:33,000 --> 00:31:34,000
它只是不在十毛了

1025
00:31:34,000 --> 00:31:35,000
或者它不在顶尖了

1026
00:31:35,000 --> 00:31:37,000
但它绝对是一个 solid 的

1027
00:31:38,000 --> 00:31:39,000
就是甚至可以说它

1028
00:31:40,000 --> 00:31:42,000
两千块钱的小电脑的性能

1029
00:31:43,000 --> 00:31:46,000
是要好于我觉得可能

1030
00:31:47,000 --> 00:31:48,000
大多数人家里

1031
00:31:48,000 --> 00:31:50,000
可能两三年前的台式 PC

1032
00:31:50,000 --> 00:31:53,000
或者是甚至笔记本的这种性能

1033
00:31:54,000 --> 00:31:54,000
对

1034
00:31:54,000 --> 00:31:55,000
没错

1035
00:31:55,000 --> 00:31:55,000
对

1036
00:31:55,000 --> 00:31:57,000
但我一直就有一件事情

1037
00:31:57,000 --> 00:31:59,000
我一直就不能释怀

1038
00:31:59,000 --> 00:32:00,000
我问你一件事

1039
00:32:00,000 --> 00:32:01,000
我现在给你一个任务

1040
00:32:01,000 --> 00:32:02,000
就是说

1041
00:32:02,000 --> 00:32:05,000
因为做这种路由器这种设备

1042
00:32:05,000 --> 00:32:07,000
你不需要它有任何显示的功能

1043
00:32:07,000 --> 00:32:08,000
对吧

1044
00:32:09,000 --> 00:32:10,000
但是

1045
00:32:12,000 --> 00:32:14,000
请给我一个

1046
00:32:15,000 --> 00:32:17,000
列表或者是几个选择

1047
00:32:17,000 --> 00:32:20,000
使得那种就是它的 CPU 的处理能力很强

1048
00:32:20,000 --> 00:32:21,000
但是不需要有 GPU

1049
00:32:22,000 --> 00:32:24,000
然后它同时又价格比较便宜的

1050
00:32:24,000 --> 00:32:28,000
这种硬件配置的这种选择

1051
00:32:28,000 --> 00:32:29,000
就发现其实没有

1052
00:32:29,000 --> 00:32:30,000
找不到

1053
00:32:30,000 --> 00:32:32,000
这个你基本上必须去买一台服务器

1054
00:32:33,000 --> 00:32:33,000
不服务器很贵

1055
00:32:34,000 --> 00:32:35,000
这其实是对服务器的要求

1056
00:32:36,000 --> 00:32:38,000
我的意思就是你所需要的是一个

1057
00:32:40,000 --> 00:32:42,000
个人使用的微星服务器

1058
00:32:42,000 --> 00:32:43,000
对

1059
00:32:43,000 --> 00:32:44,000
没错

1060
00:32:44,000 --> 00:32:45,000
就其实这种处理器

1061
00:32:45,000 --> 00:32:46,000
首先从处理器的角度来讲

1062
00:32:46,000 --> 00:32:47,000
已经很难找

1063
00:32:47,000 --> 00:32:48,000
就一般来说

1064
00:32:48,000 --> 00:32:49,000
那个英特尔处理器

1065
00:32:49,000 --> 00:32:50,000
它虽然说性能很强大

1066
00:32:50,000 --> 00:32:51,000
但是它的价格比较贵

1067
00:32:52,000 --> 00:32:56,000
你现在看你这个 i 5 处理器的芯片

1068
00:32:56,000 --> 00:32:58,000
大概就是至少是 100 多刀

1069
00:32:59,000 --> 00:32:59,000
就成本

1070
00:32:59,000 --> 00:33:00,000
就厂商的成本是 100 多刀

1071
00:33:00,000 --> 00:33:01,000
就价格 6、700 块钱

1072
00:33:02,000 --> 00:33:03,000
但其实里面有很多钱

1073
00:33:03,000 --> 00:33:05,000
其实你根本用不到

1074
00:33:05,000 --> 00:33:08,000
因为现在特别像英特尔出的那种集成的处理器

1075
00:33:08,000 --> 00:33:11,000
而且它可能也很大一部分是用做 GPU 的

1076
00:33:13,000 --> 00:33:14,000
但是你 GPU 你完全用不到

1077
00:33:14,000 --> 00:33:17,000
你做这种丢到角落里面

1078
00:33:17,000 --> 00:33:19,000
也不管它的那种用途的话

1079
00:33:20,000 --> 00:33:21,000
对吧

1080
00:33:21,000 --> 00:33:23,000
你就找不到那种

1081
00:33:23,000 --> 00:33:25,000
那你再回去找

1082
00:33:25,000 --> 00:33:26,000
就只能找那种

1083
00:33:26,000 --> 00:33:27,000
比如说基于 ARM 的对吧

1084
00:33:27,000 --> 00:33:29,000
但你现在基于 ARM 的处理器的话

1085
00:33:30,000 --> 00:33:32,000
它的 CPU 的性能

1086
00:33:32,000 --> 00:33:34,000
好像又跟不上英特尔的最新的

1087
00:33:34,000 --> 00:33:35,000
像什么 Brawlwell

1088
00:33:35,000 --> 00:33:35,000
对

1089
00:33:35,000 --> 00:33:36,000
它功耗低

1090
00:33:36,000 --> 00:33:38,000
但是性能又不好

1091
00:33:38,000 --> 00:33:39,000
对

1092
00:33:39,000 --> 00:33:42,000
比如说我现在都没有找到比较合适的

1093
00:33:42,000 --> 00:33:46,000
能够跑满一个千兆口的基于 ARM 的处理

1094
00:33:46,000 --> 00:33:47,000
这边 SoC

1095
00:33:49,000 --> 00:33:51,000
所以就挺尴尬的

1096
00:33:51,000 --> 00:33:53,000
你有看什么惠普

1097
00:33:53,000 --> 00:33:56,000
或者是我还有其他厂商戴尔的

1098
00:33:56,000 --> 00:33:57,000
戴尔做作

1099
00:33:57,000 --> 00:33:58,000
我看过没有任何一款

1100
00:33:58,000 --> 00:34:00,000
他们的 Micro Server

1101
00:34:00,000 --> 00:34:00,000
你有看

1102
00:34:00,000 --> 00:34:01,000
没有

1103
00:34:01,000 --> 00:34:03,000
惠普有一款是作为那种 NAS 的

1104
00:34:03,000 --> 00:34:05,000
就是做网络存储的 Micro Server

1105
00:34:06,000 --> 00:34:09,000
它是可以给你选择用那个是 I 5

1106
00:34:09,000 --> 00:34:11,000
还是还有一个是智强的处理器

1107
00:34:12,000 --> 00:34:14,000
但是那个东西起家是就光是那个壳子

1108
00:34:14,000 --> 00:34:16,000
它是有一个小机箱的

1109
00:34:16,000 --> 00:34:17,000
然后带一个主板

1110
00:34:17,000 --> 00:34:19,000
然后有一个选择是没有

1111
00:34:19,000 --> 00:34:20,000
就是

1112
00:34:20,000 --> 00:34:21,000
它有几个配置

1113
00:34:21,000 --> 00:34:22,000
最低那个就是 BearBond

1114
00:34:22,000 --> 00:34:24,000
就是小机箱加主板

1115
00:34:24,000 --> 00:34:25,000
但是不带处理器

1116
00:34:25,000 --> 00:34:26,000
不带硬盘的

1117
00:34:26,000 --> 00:34:28,000
大概都是 4000 多块钱

1118
00:34:28,000 --> 00:34:29,000
OK

1119
00:34:29,000 --> 00:34:30,000
所以要不要

1120
00:34:30,000 --> 00:34:33,000
那有想过买一个旧的

1121
00:34:34,000 --> 00:34:34,000
版本

1122
00:34:35,000 --> 00:34:36,000
没有

1123
00:34:36,000 --> 00:34:36,000
就是没有

1124
00:34:38,000 --> 00:34:41,000
不过好像国内的旧的服务器

1125
00:34:41,000 --> 00:34:42,000
也不知道从哪买

1126
00:34:43,000 --> 00:34:46,000
你是说买那种机房用的服务器吗

1127
00:34:46,000 --> 00:34:46,000
对

1128
00:34:46,000 --> 00:34:47,000
机房的旧服务器

1129
00:34:47,000 --> 00:34:49,000
然后自己有一个很大的问题是

1130
00:34:49,000 --> 00:34:51,000
它的首先功耗非常大

1131
00:34:51,000 --> 00:34:52,000
是吧

1132
00:34:52,000 --> 00:34:54,000
那个都是就是几百瓦的功耗的

1133
00:34:54,000 --> 00:34:55,000
就是如果全开的话

1134
00:34:55,000 --> 00:34:57,000
就带机的话也有七八十瓦吧

1135
00:34:57,000 --> 00:34:58,000
你不可能一直 24 小时开着

1136
00:34:59,000 --> 00:34:59,000
第二个

1137
00:34:59,000 --> 00:35:00,000
你不能把它放家里

1138
00:35:00,000 --> 00:35:01,000
所以它因为非常大

1139
00:35:02,000 --> 00:35:03,000
哪怕说是 EU 的话

1140
00:35:03,000 --> 00:35:04,000
它也比我们通常的那个

1141
00:35:04,000 --> 00:35:05,000
它它它

1142
00:35:05,000 --> 00:35:06,000
薄嘛

1143
00:35:06,000 --> 00:35:08,000
但是它很很宽

1144
00:35:08,000 --> 00:35:09,000
它就是一个很大的链接的东西

1145
00:35:10,000 --> 00:35:12,000
然后非常的潮

1146
00:35:13,000 --> 00:35:14,000
因为它是那个小风扇

1147
00:35:14,000 --> 00:35:15,000
高速的小风扇

1148
00:35:15,000 --> 00:35:17,000
非常的噪音非常大

1149
00:35:17,000 --> 00:35:18,000
就不可能放在家里的

1150
00:35:18,000 --> 00:35:19,000
你要找那种

1151
00:35:20,000 --> 00:35:21,000
刚才还有一个需求没有说

1152
00:35:21,000 --> 00:35:22,000
就是它要静音对吧

1153
00:35:22,000 --> 00:35:24,000
你看它提及要小要静音

1154
00:35:24,000 --> 00:35:25,000
你找到后就发现

1155
00:35:25,000 --> 00:35:26,000
基本上没有什么可选的

1156
00:35:26,000 --> 00:35:28,000
就只有这种就是这种

1157
00:35:29,000 --> 00:35:30,000
被动散热的

1158
00:35:30,000 --> 00:35:32,000
基于英特尔的这种移动处理器的

1159
00:35:32,000 --> 00:35:33,000
那种小电脑才适合

1160
00:35:33,000 --> 00:35:35,000
但是他们的价钱

1161
00:35:35,000 --> 00:35:36,000
这也不算特别便宜

1162
00:35:36,000 --> 00:35:37,000
就没有 1000 块钱以下的

1163
00:35:38,000 --> 00:35:38,000
嗯

1164
00:35:39,000 --> 00:35:40,000
但是其实你用到的

1165
00:35:40,000 --> 00:35:41,000
可能就只有一千块钱

1166
00:35:41,000 --> 00:35:42,000
左右的部件而已

1167
00:35:43,000 --> 00:35:45,000
我前两天是在看谁

1168
00:35:45,000 --> 00:35:48,000
在推特上说他买了一个 HP 的

1169
00:35:50,000 --> 00:35:50,000
呃

1170
00:35:50,000 --> 00:35:51,000
micro server 叫什么

1171
00:35:51,000 --> 00:35:52,000
Gen 8

1172
00:35:52,000 --> 00:35:53,000
就是对

1173
00:35:53,000 --> 00:35:54,000
就刚刚我说的那个东西

1174
00:35:55,000 --> 00:35:55,000
OK

1175
00:35:55,000 --> 00:35:57,000
然后它是一个 File Server

1176
00:35:57,000 --> 00:36:00,000
好像也是四五百刀一个吧

1177
00:36:00,000 --> 00:36:00,000
对啊对啊

1178
00:36:01,000 --> 00:36:03,000
然后那个玩意看起来还不错

1179
00:36:03,000 --> 00:36:04,000
而且

1180
00:36:04,000 --> 00:36:05,000
体也挺大的

1181
00:36:05,000 --> 00:36:07,000
其实它跟一个普通的小小

1182
00:36:07,000 --> 00:36:08,000
就小机箱的那种不是小电脑

1183
00:36:08,000 --> 00:36:09,000
那个不是 NUC 这么小

1184
00:36:09,000 --> 00:36:10,000
它是一个

1185
00:36:10,000 --> 00:36:12,000
呃相对来说比较大一点的

1186
00:36:12,000 --> 00:36:13,000
一个

1187
00:36:13,000 --> 00:36:15,000
呃那种盒子嘛

1188
00:36:15,000 --> 00:36:16,000
OK

1189
00:36:16,000 --> 00:36:16,000
呃

1190
00:36:17,000 --> 00:36:18,000
就放的问题是一个

1191
00:36:18,000 --> 00:36:21,000
然后它的那个功耗和价钱

1192
00:36:21,000 --> 00:36:22,000
都不是太理想

1193
00:36:22,000 --> 00:36:23,000
就不是那种

1194
00:36:23,000 --> 00:36:24,000
就你绝对不会认为

1195
00:36:24,000 --> 00:36:25,000
它是一个 scooter computer

1196
00:36:26,000 --> 00:36:27,000
这是肯定的

1197
00:36:27,000 --> 00:36:28,000
这是肯定的

1198
00:36:28,000 --> 00:36:30,000
我我在我讲的这么的

1199
00:36:30,000 --> 00:36:31,000
买一个什么

1200
00:36:31,000 --> 00:36:32,000
Motorcycle Computer

1201
00:36:36,000 --> 00:36:38,000
但如果你家里没有那个网络存储的话

1202
00:36:38,000 --> 00:36:39,000
用一个那个来自己搭一个

1203
00:36:39,000 --> 00:36:40,000
基于

1204
00:36:40,000 --> 00:36:41,000
呃 FreeBSD

1205
00:36:41,000 --> 00:36:43,000
然后跑 ZFS 的

1206
00:36:43,000 --> 00:36:43,000
其实挺好的

1207
00:36:44,000 --> 00:36:44,000
嗯

1208
00:36:45,000 --> 00:36:45,000
对

1209
00:36:45,000 --> 00:36:46,000
我觉得对

1210
00:36:46,000 --> 00:36:47,000
首先还是得置个业吧

1211
00:36:47,000 --> 00:36:49,000
然后就可以在家里面

1212
00:36:49,000 --> 00:36:49,000
想怎么搞怎么搞

1213
00:36:50,000 --> 00:36:51,000
就还是得买房子

1214
00:36:52,000 --> 00:36:52,000
对

1215
00:36:54,000 --> 00:36:56,000
像我这种租房租就比较比较尴尬了

1216
00:36:56,000 --> 00:36:56,000
对吧

1217
00:36:57,000 --> 00:36:58,000
你没有买房子的计划吗

1218
00:36:58,000 --> 00:37:00,000
还是这个话题太 previte 了

1219
00:37:00,000 --> 00:37:01,000
太私人了

1220
00:37:02,000 --> 00:37:03,000
暂无暂无吧

1221
00:37:04,000 --> 00:37:05,000
我这个想的挺开的

1222
00:37:05,000 --> 00:37:07,000
所以深圳留不住你

1223
00:37:07,000 --> 00:37:08,000
倒不是这个意思

1224
00:37:08,000 --> 00:37:09,000
我是觉得

1225
00:37:09,000 --> 00:37:11,000
因为现在中国租售比那么低

1226
00:37:11,000 --> 00:37:11,000
对吧

1227
00:37:11,000 --> 00:37:12,000
你何必呢

1228
00:37:13,000 --> 00:37:14,000
嗯

1229
00:37:14,000 --> 00:37:14,000
说得也是

1230
00:37:15,000 --> 00:37:15,000
嗯

1231
00:37:16,000 --> 00:37:17,000
anyway 说回我要找这个

1232
00:37:17,000 --> 00:37:19,000
这个小电脑的一个终极的原因

1233
00:37:19,000 --> 00:37:21,000
其实我得去比如说跑 VPN 嘛

1234
00:37:21,000 --> 00:37:23,000
因为那个

1235
00:37:23,000 --> 00:37:25,000
Open up 就是那种路由器

1236
00:37:25,000 --> 00:37:26,000
就是那种家用路由器刷起来

1237
00:37:26,000 --> 00:37:28,000
那个 CPU 不管再牛逼

1238
00:37:28,000 --> 00:37:29,000
你其实发现

1239
00:37:29,000 --> 00:37:32,000
它那个性能感差八六还是挺远的

1240
00:37:32,000 --> 00:37:33,000
对特别是跑到那个 VPN

1241
00:37:33,000 --> 00:37:35,000
它对那个计算有要求的时候

1242
00:37:36,000 --> 00:37:38,000
就非常糟糕了

1243
00:37:38,000 --> 00:37:39,000
然后

1244
00:37:40,000 --> 00:37:41,000
我自己在琢磨写一个 VPN

1245
00:37:43,000 --> 00:37:44,000
因为之前我

1246
00:37:44,000 --> 00:37:46,000
当然用一个比较

1247
00:37:47,000 --> 00:37:48,000
知名的一款嘛

1248
00:37:48,000 --> 00:37:49,000
然后来因为一些原因

1249
00:37:49,000 --> 00:37:52,000
那个它的圆满被删掉了

1250
00:37:53,000 --> 00:37:53,000
OK

1251
00:37:55,000 --> 00:37:56,000
刚好之前我就

1252
00:37:56,000 --> 00:37:58,000
我看我之前 fork 了一份

1253
00:37:58,000 --> 00:37:59,000
然后我应该在研究

1254
00:37:59,000 --> 00:38:01,000
然后也找了 github 上面

1255
00:38:01,000 --> 00:38:03,000
还是 github 是个很好的社交工具

1256
00:38:03,000 --> 00:38:04,000
你可以找到很多类似的东西

1257
00:38:04,000 --> 00:38:06,000
可以学习他们背后的原理

1258
00:38:06,000 --> 00:38:08,000
那发现只是还挺简单的

1259
00:38:08,000 --> 00:38:09,000
然后我就自己动手写了一个

1260
00:38:09,000 --> 00:38:11,000
然后是用那个 go 写的

1261
00:38:12,000 --> 00:38:13,000
OK

1262
00:38:13,000 --> 00:38:15,000
然后用 go 写就有一个很明显的后果

1263
00:38:15,000 --> 00:38:17,000
我猜那个被

1264
00:38:17,000 --> 00:38:19,000
被一出某种原因删掉的那个东西

1265
00:38:19,000 --> 00:38:20,000
是有什么原因写的

1266
00:38:21,000 --> 00:38:22,000
呃 C 写的

1267
00:38:22,000 --> 00:38:23,000
就目前能是

1268
00:38:23,000 --> 00:38:25,000
我就是大家用的比较多的

1269
00:38:25,000 --> 00:38:26,000
那还都是 C 原写的

1270
00:38:27,000 --> 00:38:29,000
这个东西的 fork 现在在 github 上

1271
00:38:29,000 --> 00:38:30,000
还好找

1272
00:38:30,000 --> 00:38:31,000
很好找

1273
00:38:31,000 --> 00:38:32,000
因为很多人 fork

1274
00:38:32,000 --> 00:38:33,000
所以很多人都在趁它

1275
00:38:34,000 --> 00:38:36,000
被那个什么被删掉之前

1276
00:38:36,000 --> 00:38:38,000
去 fork 里面是吧

1277
00:38:38,000 --> 00:38:40,000
应该说是在

1278
00:38:40,000 --> 00:38:41,000
就有这个事情发生之前

1279
00:38:41,000 --> 00:38:42,000
很多人就 fork 了一遍

1280
00:38:42,000 --> 00:38:43,000
然后出了这个事情

1281
00:38:43,000 --> 00:38:44,000
fork 的人就更多了嘛

1282
00:38:45,000 --> 00:38:45,000
OK

1283
00:38:46,000 --> 00:38:47,000
对 anyway 这个东西就是反正就是

1284
00:38:47,000 --> 00:38:49,000
就是删不掉了嘛已经

1285
00:38:49,000 --> 00:38:50,000
很多人都有

1286
00:38:51,000 --> 00:38:51,000
对

1287
00:38:52,000 --> 00:38:52,000
然后

1288
00:38:53,000 --> 00:38:54,000
他那个是 C 写的非常小小

1289
00:38:54,000 --> 00:38:55,000
就是说

1290
00:38:55,000 --> 00:38:56,000
不到 100 k 吧

1291
00:38:56,000 --> 00:38:57,000
编译出来

1292
00:38:57,000 --> 00:38:59,000
回去放到那个路由器上的话

1293
00:38:59,000 --> 00:39:00,000
就没问题

1294
00:39:00,000 --> 00:39:01,000
但是我们用勾写的话

1295
00:39:01,000 --> 00:39:02,000
你知道勾编出来一个 Banner

1296
00:39:02,000 --> 00:39:04,000
大概就是几兆了

1297
00:39:05,000 --> 00:39:05,000
放路由器

1298
00:39:05,000 --> 00:39:06,000
Better inclusive

1299
00:39:06,000 --> 00:39:07,000
问题在哪里

1300
00:39:07,000 --> 00:39:09,000
他带一个那个 Runtime 嘛

1301
00:39:09,000 --> 00:39:10,000
所以他带一个 GC

1302
00:39:10,000 --> 00:39:12,000
所以会比较大一些

1303
00:39:12,000 --> 00:39:12,000
OK

1304
00:39:13,000 --> 00:39:14,000
然后这样放

1305
00:39:14,000 --> 00:39:16,000
那个我之前那个

1306
00:39:16,000 --> 00:39:17,000
703 上就比较

1307
00:39:17,000 --> 00:39:18,000
就不太够了

1308
00:39:19,000 --> 00:39:21,000
因为那个整个内存的只有 32 兆

1309
00:39:21,000 --> 00:39:23,000
你放一个 Banner 都有几兆

1310
00:39:23,000 --> 00:39:24,000
在运行的话就

1311
00:39:24,000 --> 00:39:25,000
对就

1312
00:39:25,000 --> 00:39:27,000
out of memory

1313
00:39:27,000 --> 00:39:28,000
OK

1314
00:39:28,000 --> 00:39:30,000
就会触发那个 OM 的 killer

1315
00:39:31,000 --> 00:39:33,000
然后性能也是一方面

1316
00:39:33,000 --> 00:39:33,000
因为

1317
00:39:34,000 --> 00:39:37,000
勾 BG 还是不如 C 那么轻量级嘛

1318
00:39:38,000 --> 00:39:40,000
所以就有更强大的动力

1319
00:39:40,000 --> 00:39:42,000
去找一个 X 86 的电脑来跑它

1320
00:39:42,000 --> 00:39:44,000
anyway 这个就是说刚才那话题

1321
00:39:44,000 --> 00:39:46,000
就是写一个 VPN 其实还挺有意思

1322
00:39:46,000 --> 00:39:47,000
你知道怎么弄吗

1323
00:39:47,000 --> 00:39:48,000
怎么弄

1324
00:39:48,000 --> 00:39:50,000
就是原理很简单

1325
00:39:50,000 --> 00:39:51,000
就是

1326
00:39:51,000 --> 00:39:52,000
你需要先在

1327
00:39:52,000 --> 00:39:53,000
要实现一个协议战吧

1328
00:39:53,000 --> 00:39:54,000
我觉得

1329
00:39:54,000 --> 00:39:56,000
不用没有没有那么复杂

1330
00:39:56,000 --> 00:39:57,000
其实现在超新都把你做了很多事情

1331
00:39:58,000 --> 00:39:59,000
OK

1332
00:39:59,000 --> 00:40:01,000
等下你要做一个最基本的问题

1333
00:40:01,000 --> 00:40:03,000
你要需要在你的那个

1334
00:40:03,000 --> 00:40:03,000
电脑里面

1335
00:40:03,000 --> 00:40:05,000
超新里面模拟出一块

1336
00:40:07,000 --> 00:40:08,000
网卡

1337
00:40:08,000 --> 00:40:08,000
虚拟网卡

1338
00:40:09,000 --> 00:40:10,000
然后在 Linux 上面

1339
00:40:10,000 --> 00:40:11,000
这里一般叫做

1340
00:40:11,000 --> 00:40:12,000
叫做 Town device

1341
00:40:12,000 --> 00:40:14,000
Town device

1342
00:40:15,000 --> 00:40:16,000
然后

1343
00:40:16,000 --> 00:40:17,000
OS X 上也支持这个东西

1344
00:40:17,000 --> 00:40:18,000
DARWIN 有一个

1345
00:40:18,000 --> 00:40:22,000
就是 10.6 还是 10.8 开始

1346
00:40:22,000 --> 00:40:23,000
它有一个

1347
00:40:23,000 --> 00:40:26,000
内核就 DARWIN 那个内核级别的支持

1348
00:40:26,000 --> 00:40:27,000
叫做 U-Town

1349
00:40:27,000 --> 00:40:28,000
U-Town

1350
00:40:28,000 --> 00:40:29,000
你可以建这个东西

1351
00:40:29,000 --> 00:40:30,000
然后建这个 U-Town 有什么用途呢

1352
00:40:30,000 --> 00:40:31,000
它就会在你的

1353
00:40:32,000 --> 00:40:32,000
操作系统里面

1354
00:40:32,000 --> 00:40:33,000
训练出一块网卡

1355
00:40:33,000 --> 00:40:34,000
也可以这么理解

1356
00:40:34,000 --> 00:40:35,000
然后你可以绑定 IP 地址

1357
00:40:35,000 --> 00:40:36,000
做路由规则

1358
00:40:37,000 --> 00:40:37,000
完了之后

1359
00:40:38,000 --> 00:40:41,000
任何写入这个网卡的这个 IP 包

1360
00:40:41,000 --> 00:40:45,000
你可以转发到一个

1361
00:40:45,000 --> 00:40:46,000
用户竞争里面去

1362
00:40:46,000 --> 00:40:47,000
去读写它

1363
00:40:48,000 --> 00:40:50,000
然后你在用户竞争里面去做一些

1364
00:40:50,000 --> 00:40:51,000
包装的

1365
00:40:51,000 --> 00:40:54,000
加密或者是压缩

1366
00:40:54,000 --> 00:40:55,000
或者是变形

1367
00:40:55,000 --> 00:40:56,000
任何处理都可以

1368
00:40:56,000 --> 00:40:57,000
就随便你想怎么弄了

1369
00:40:57,000 --> 00:40:59,000
然后你再通过一些其他方式转发到

1370
00:40:59,000 --> 00:41:01,000
你对应的这个目标服务器上

1371
00:41:01,000 --> 00:41:03,000
就可以设成一个简易的 VPN 了

1372
00:41:03,000 --> 00:41:03,000
OK

1373
00:41:03,000 --> 00:41:05,000
所以没有那么

1374
00:41:05,000 --> 00:41:09,000
没有之前想象的那么低级

1375
00:41:09,000 --> 00:41:09,000
对

1376
00:41:09,000 --> 00:41:10,000
你不需要通过到

1377
00:41:10,000 --> 00:41:12,000
你实现一个整个这个实战

1378
00:41:12,000 --> 00:41:14,000
你只要实现一个用户竞争的程序就可以了

1379
00:41:15,000 --> 00:41:15,000
对

1380
00:41:15,000 --> 00:41:15,000
对

1381
00:41:15,000 --> 00:41:16,000
非常简单其实

1382
00:41:17,000 --> 00:41:17,000
然后

1383
00:41:17,000 --> 00:41:19,000
那个写一个 Guardian 没什么差别

1384
00:41:19,000 --> 00:41:20,000
啊

1385
00:41:20,000 --> 00:41:20,000
对吧

1386
00:41:20,000 --> 00:41:22,000
就写一个守护竞争没什么差别

1387
00:41:22,000 --> 00:41:23,000
感觉好像

1388
00:41:23,000 --> 00:41:25,000
但你都不需要写一个

1389
00:41:25,000 --> 00:41:26,000
这种 Demo

1390
00:41:26,000 --> 00:41:27,000
你直接写个前台程序

1391
00:41:27,000 --> 00:41:28,000
然后用那些

1392
00:41:29,000 --> 00:41:30,000
那个什么 SystemD

1393
00:41:30,000 --> 00:41:32,000
还有 LunchD 来管理就好了

1394
00:41:32,000 --> 00:41:33,000
对

1395
00:41:34,000 --> 00:41:35,000
就过程还是蛮简单的

1396
00:41:35,000 --> 00:41:36,000
然后我后来去

1397
00:41:36,000 --> 00:41:38,000
就理解了这个逻辑之后

1398
00:41:38,000 --> 00:41:40,000
动手写其实还挺有意思的

1399
00:41:41,000 --> 00:41:43,000
有一些那种 Low Level 的东西

1400
00:41:43,000 --> 00:41:45,000
就还挺好玩的

1401
00:41:45,000 --> 00:41:45,000
然后

1402
00:41:45,000 --> 00:41:46,000
因为 Go 一般

1403
00:41:46,000 --> 00:41:47,000
你要去

1404
00:41:47,000 --> 00:41:48,000
那个

1405
00:41:48,000 --> 00:41:50,000
在超多系统里面创建

1406
00:41:50,000 --> 00:41:50,000
那个

1407
00:41:51,000 --> 00:41:52,000
Tunnel Device 的话

1408
00:41:52,000 --> 00:41:55,000
你需要调用那个一些系统

1409
00:41:55,000 --> 00:41:55,000
那个就是

1410
00:41:55,000 --> 00:41:56,000
系统那边

1411
00:41:56,000 --> 00:41:57,000
System Core

1412
00:41:57,000 --> 00:41:58,000
对

1413
00:41:59,000 --> 00:42:00,000
然后这几个 System Core

1414
00:42:00,000 --> 00:42:02,000
直接在 Go 里面其实是没有的

1415
00:42:02,000 --> 00:42:04,000
你要用 Sys Core 的这个

1416
00:42:04,000 --> 00:42:04,000
那个 Package

1417
00:42:04,000 --> 00:42:06,000
去自己去做一些处理

1418
00:42:07,000 --> 00:42:07,000
然后

1419
00:42:08,000 --> 00:42:09,000
就发现这个

1420
00:42:09,000 --> 00:42:10,000
其实我之前想的

1421
00:42:10,000 --> 00:42:12,000
Go 可能做一些非常底层的事情

1422
00:42:12,000 --> 00:42:13,000
还有点难度

1423
00:42:13,000 --> 00:42:13,000
因为

1424
00:42:14,000 --> 00:42:15,000
毕竟包了一层

1425
00:42:15,000 --> 00:42:16,000
不是直接有那些 C 的

1426
00:42:16,000 --> 00:42:18,000
那些 Halor 可以引用

1427
00:42:18,000 --> 00:42:19,000
但其实你发现

1428
00:42:19,000 --> 00:42:20,000
做完之后还是挺简单的

1429
00:42:20,000 --> 00:42:21,000
你直接把那些

1430
00:42:21,000 --> 00:42:22,000
那些长量

1431
00:42:23,000 --> 00:42:24,000
从那个

1432
00:42:24,000 --> 00:42:26,000
那个 User Included 里面

1433
00:42:26,000 --> 00:42:27,000
抄过来

1434
00:42:27,000 --> 00:42:29,000
然后再用那个 Sys Core 包一下

1435
00:42:29,000 --> 00:42:30,000
其实也

1436
00:42:30,000 --> 00:42:31,000
也不难

1437
00:42:32,000 --> 00:42:33,000
就是在很多程度上

1438
00:42:33,000 --> 00:42:34,000
没有比什么 Python

1439
00:42:34,000 --> 00:42:36,000
或者是 Swift 难

1440
00:42:36,000 --> 00:42:36,000
难

1441
00:42:36,000 --> 00:42:38,000
应该比他们简单吧

1442
00:42:38,000 --> 00:42:38,000
可能

1443
00:42:38,000 --> 00:42:39,000
对

1444
00:42:39,000 --> 00:42:40,000
就其实挺直接的

1445
00:42:40,000 --> 00:42:41,000
然后

1446
00:42:41,000 --> 00:42:42,000
甚至说你在 Go 里面

1447
00:42:42,000 --> 00:42:44,000
直接调用一个 C 的

1448
00:42:45,000 --> 00:42:46,000
酷也挺容易的

1449
00:42:46,000 --> 00:42:49,000
就没有我之前想象的那么麻烦

1450
00:42:49,000 --> 00:42:51,000
所以你把这东西开源了吗

1451
00:42:52,000 --> 00:42:52,000
没有

1452
00:42:52,000 --> 00:42:53,000
这个

1453
00:42:53,000 --> 00:42:55,000
我自己写来玩

1454
00:42:55,000 --> 00:42:56,000
这个开源没什么意思

1455
00:42:56,000 --> 00:42:58,000
因为 Guitar 上面已经有

1456
00:42:59,000 --> 00:43:00,000
超多的同类的实现

1457
00:43:00,000 --> 00:43:01,000
那你可能是 C 写的

1458
00:43:01,000 --> 00:43:02,000
没有 Go 写的

1459
00:43:02,000 --> 00:43:04,000
Go 有一个吧

1460
00:43:04,000 --> 00:43:04,000
好像

1461
00:43:04,000 --> 00:43:05,000
个吧

1462
00:43:05,000 --> 00:43:06,000
但是就原理上差不多

1463
00:43:06,000 --> 00:43:07,000
你知道

1464
00:43:07,000 --> 00:43:08,000
掌握了这套原理之后

1465
00:43:08,000 --> 00:43:10,000
你用 Python 写也是一样的

1466
00:43:10,000 --> 00:43:10,000
其实

1467
00:43:12,000 --> 00:43:14,000
就只是说效率的问题而已

1468
00:43:14,000 --> 00:43:16,000
但是其实就还好

1469
00:43:16,000 --> 00:43:17,000
如果你在 X 86 的服务器上把

1470
00:43:18,000 --> 00:43:19,000
这种级别的应该

1471
00:43:19,000 --> 00:43:21,000
感觉不到任何性能上的差异

1472
00:43:23,000 --> 00:43:25,000
所以过年的时间就拿来写

1473
00:43:25,000 --> 00:43:26,000
这个 VP 的吗

1474
00:43:26,000 --> 00:43:28,000
那就学习一下

1475
00:43:28,000 --> 00:43:31,000
因为我一直在这块就挺好奇的

1476
00:43:31,000 --> 00:43:32,000
之前

1477
00:43:33,000 --> 00:43:34,000
我想提一些需求

1478
00:43:34,000 --> 00:43:36,000
发现是 C 写的不太好改

1479
00:43:36,000 --> 00:43:37,000
然后顺便

1480
00:43:38,000 --> 00:43:39,000
为了去读懂那几个代码

1481
00:43:39,000 --> 00:43:41,000
还复习了一遍 C 的

1482
00:43:41,000 --> 00:43:43,000
和用 C 来做网络编程的一些知识

1483
00:43:44,000 --> 00:43:47,000
等于还那个

1484
00:43:47,000 --> 00:43:48,000
还

1485
00:43:48,000 --> 00:43:50,000
就因为 C 好多年以前学了

1486
00:43:50,000 --> 00:43:51,000
其实基本没怎么用过

1487
00:43:52,000 --> 00:43:53,000
然后现在去看了去

1488
00:43:53,000 --> 00:43:55,000
觉得还能写一些

1489
00:43:56,000 --> 00:43:57,000
就最开始我是直接

1490
00:43:58,000 --> 00:44:00,000
用 C 写了一个最基础的版本

1491
00:44:00,000 --> 00:44:01,000
然后发现其实

1492
00:44:01,000 --> 00:44:02,000
好像改用 Go 写也可以

1493
00:44:02,000 --> 00:44:03,000
然后就 Go 的话

1494
00:44:03,000 --> 00:44:05,000
就整个安全性也好很多

1495
00:44:05,000 --> 00:44:06,000
然后也容易一些

1496
00:44:07,000 --> 00:44:09,000
说太容易太多了我觉得

1497
00:44:11,000 --> 00:44:11,000
对好吧

1498
00:44:11,000 --> 00:44:12,000
你可以走

1499
00:44:12,000 --> 00:44:13,000
就像在 Mental Model 上面

1500
00:44:13,000 --> 00:44:14,000
然后容易太多

1501
00:44:14,000 --> 00:44:15,000
我最近在写

1502
00:44:16,000 --> 00:44:18,000
我最近在做一件

1503
00:44:18,000 --> 00:44:19,000
把一个

1504
00:44:21,000 --> 00:44:23,000
操作系统性质的东西

1505
00:44:23,000 --> 00:44:26,000
整合进一个 Docker Container 的事情

1506
00:44:26,000 --> 00:44:29,000
好多地方要重写

1507
00:44:29,000 --> 00:44:32,000
然后用 Python 写的部分还好

1508
00:44:32,000 --> 00:44:33,000
用 C 写的部分真的是

1509
00:44:33,000 --> 00:44:34,000
改起来太麻了

1510
00:44:35,000 --> 00:44:35,000
这个时候要做什么

1511
00:44:35,000 --> 00:44:37,000
为什么会这个需求

1512
00:44:40,000 --> 00:44:42,000
你想很多知名数据库产品

1513
00:44:42,000 --> 00:44:43,000
它现在基本上都提供一个

1514
00:44:43,000 --> 00:44:45,000
官方的 Docker Image

1515
00:44:46,000 --> 00:44:48,000
然后我们也想做一个同样的事情

1516
00:44:48,000 --> 00:44:51,000
但是你在一个 Docker Container 里面

1517
00:44:51,000 --> 00:44:52,000
跑一个

1518
00:44:54,000 --> 00:44:54,000
跑一个

1519
00:44:55,000 --> 00:44:57,000
师库进程的一个问题

1520
00:44:57,000 --> 00:45:00,000
就是你需要把数据和配置

1521
00:45:01,000 --> 00:45:02,000
独立出来对吧

1522
00:45:02,000 --> 00:45:04,000
因为 Container 它本身是

1523
00:45:05,000 --> 00:45:05,000
Standardless

1524
00:45:06,000 --> 00:45:06,000
对

1525
00:45:07,000 --> 00:45:08,000
是用完机器的应该这么说

1526
00:45:08,000 --> 00:45:10,000
然后可能会希望说

1527
00:45:10,000 --> 00:45:13,000
我需要把数据和原数据和配置

1528
00:45:13,000 --> 00:45:14,000
和

1529
00:45:16,000 --> 00:45:17,000
Log 之类的所有的

1530
00:45:18,000 --> 00:45:20,000
volume 都挂到 Container 里面

1531
00:45:21,000 --> 00:45:23,000
但是根据服务器的

1532
00:45:23,000 --> 00:45:25,000
实现策略的不同

1533
00:45:26,000 --> 00:45:27,000
这个东西

1534
00:45:27,000 --> 00:45:29,000
可能光挂你是不够的

1535
00:45:29,000 --> 00:45:31,000
你要给很多其他的东西

1536
00:45:31,000 --> 00:45:32,000
总之

1537
00:45:33,000 --> 00:45:35,000
所以你怎么解决这个问题

1538
00:45:36,000 --> 00:45:38,000
这不存在什么要解决的问题

1539
00:45:38,000 --> 00:45:39,000
就是你如果你

1540
00:45:39,000 --> 00:45:42,000
很多东西都要改成一个被挂到

1541
00:45:42,000 --> 00:45:44,000
Container 里面的 volume 的话

1542
00:45:44,000 --> 00:45:47,000
那你就需要改原始的很多

1543
00:45:47,000 --> 00:45:48,000
逻辑

1544
00:45:48,000 --> 00:45:51,000
比如说这个东西它默认说我要写到一个

1545
00:45:52,000 --> 00:45:52,000
slashdev

1546
00:45:52,000 --> 00:45:56,000
slash 什么 htd 00 data 之类的

1547
00:45:56,000 --> 00:45:56,000
这么一个文件里面

1548
00:45:56,000 --> 00:45:58,000
或者这么一个 block device 里面

1549
00:45:58,000 --> 00:46:00,000
然后现在我只有一个 volume 可以用了

1550
00:46:00,000 --> 00:46:01,000
那这个东西就得改

1551
00:46:02,000 --> 00:46:04,000
是一非常细琢而繁大的东西

1552
00:46:04,000 --> 00:46:06,000
而且散布于大马各个地方

1553
00:46:06,000 --> 00:46:07,000
OK

1554
00:46:08,000 --> 00:46:09,000
是一个比较

1555
00:46:11,000 --> 00:46:12,000
折磨心智的工作

1556
00:46:13,000 --> 00:46:14,000
然后这个时候你就会觉得

1557
00:46:14,000 --> 00:46:17,000
这种情况下我还要去看这个东西

1558
00:46:17,000 --> 00:46:18,000
仔细看这个东西是不是

1559
00:46:19,000 --> 00:46:20,000
是不是个指针

1560
00:46:20,000 --> 00:46:22,000
是不是个什么

1561
00:46:22,000 --> 00:46:22,000
whatever

1562
00:46:22,000 --> 00:46:24,000
是个 struct

1563
00:46:24,000 --> 00:46:25,000
或者是

1564
00:46:26,000 --> 00:46:27,000
而且部分

1565
00:46:27,000 --> 00:46:29,000
有一部分它是用 sathum 来写的

1566
00:46:29,000 --> 00:46:31,000
就是 cpython

1567
00:46:32,000 --> 00:46:34,000
然后就要去

1568
00:46:34,000 --> 00:46:36,000
等等用 sathum 写不是比

1569
00:46:36,000 --> 00:46:37,000
用直接选 c 要来的

1570
00:46:38,000 --> 00:46:40,000
就是至少看起来更好一些

1571
00:46:40,000 --> 00:46:41,000
但是如果你发现你要改的东西

1572
00:46:41,000 --> 00:46:43,000
同时存在于两者之中的话

1573
00:46:45,000 --> 00:46:45,000
你就会觉得

1574
00:46:45,000 --> 00:46:47,000
我靠为什么不只有一种原型

1575
00:46:49,000 --> 00:46:50,000
好吧

1576
00:46:50,000 --> 00:46:52,000
那存在一个 mental model 转换

1577
00:46:52,000 --> 00:46:52,000
对吧

1578
00:46:53,000 --> 00:46:54,000
我觉得就这种感觉

1579
00:46:54,000 --> 00:46:55,000
就是你可能

1580
00:46:56,000 --> 00:46:59,000
如果你一天要改三四种

1581
00:46:59,000 --> 00:47:00,000
三四个地方的代码

1582
00:47:00,000 --> 00:47:03,000
然后每个地方的代码是用不同的原型的

1583
00:47:03,000 --> 00:47:03,000
比如说

1584
00:47:04,000 --> 00:47:07,000
我可能要先改一个 bash

1585
00:47:07,000 --> 00:47:08,000
改了 bash 之后发现

1586
00:47:08,000 --> 00:47:09,000
哎这个地方

1587
00:47:09,000 --> 00:47:10,000
呼叫了一个

1588
00:47:12,000 --> 00:47:12,000
python script

1589
00:47:12,000 --> 00:47:13,000
然后改了 python script

1590
00:47:13,000 --> 00:47:14,000
发现这个东西

1591
00:47:14,000 --> 00:47:17,000
才 import 那个东西是用 sathum 写的

1592
00:47:17,000 --> 00:47:19,000
然后进了 sathum 的时候

1593
00:47:19,000 --> 00:47:21,000
发现呼叫的这个函数是用 c 写的

1594
00:47:21,000 --> 00:47:22,000
你会觉得有那种

1595
00:47:22,000 --> 00:47:24,000
就是我刚刚在开飞机

1596
00:47:24,000 --> 00:47:24,000
然后

1597
00:47:26,000 --> 00:47:27,000
一下子改开火车

1598
00:47:27,000 --> 00:47:29,000
然后过一会又跑去

1599
00:47:30,000 --> 00:47:30,000
骑自行车

1600
00:47:30,000 --> 00:47:31,000
然后要

1601
00:47:32,000 --> 00:47:34,000
到最后要去推一个独轮车那种感觉

1602
00:47:37,000 --> 00:47:39,000
可能一个优秀程序员的

1603
00:47:39,000 --> 00:47:41,000
一个优秀程序员的特征之一

1604
00:47:41,000 --> 00:47:43,000
就是他的 comfortable zone

1605
00:47:43,000 --> 00:47:44,000
特别的广

1606
00:47:44,000 --> 00:47:45,000
对吧

1607
00:47:45,000 --> 00:47:47,000
他不会觉得写这个东西太低级

1608
00:47:47,000 --> 00:47:48,000
写这个东西太高级

1609
00:47:48,000 --> 00:47:49,000
写这个东西多简单

1610
00:47:49,000 --> 00:47:51,000
然后写那个东西就特别的

1611
00:47:51,000 --> 00:47:52,000
just get it done

1612
00:47:53,000 --> 00:47:53,000
对

1613
00:47:54,000 --> 00:47:55,000
但是

1614
00:47:55,000 --> 00:47:57,000
如果你真的要一天到晚在这个

1615
00:47:58,000 --> 00:47:59,000
不同的

1616
00:47:59,000 --> 00:48:01,000
抽象层级之间

1617
00:48:01,000 --> 00:48:02,000
怎么说

1618
00:48:02,000 --> 00:48:02,000
就

1619
00:48:03,000 --> 00:48:04,000
量子物理学

1620
00:48:04,000 --> 00:48:06,000
量子物理学你们能及月签是吧

1621
00:48:06,000 --> 00:48:08,000
你从一个轨道月签到另外一个轨道

1622
00:48:08,000 --> 00:48:09,000
是需要能量的

1623
00:48:09,000 --> 00:48:10,000
是不是觉得脑子有点乱

1624
00:48:11,000 --> 00:48:11,000
对

1625
00:48:11,000 --> 00:48:13,000
然后一天之后你就特别累

1626
00:48:13,000 --> 00:48:13,000
我觉得

1627
00:48:15,000 --> 00:48:16,000
因为你需要

1628
00:48:16,000 --> 00:48:18,000
就在脑子里面构建出一个

1629
00:48:18,000 --> 00:48:20,000
这个层级的

1630
00:48:20,000 --> 00:48:21,000
模型

1631
00:48:21,000 --> 00:48:22,000
然后毁掉

1632
00:48:22,000 --> 00:48:23,000
然后去另外一个层级

1633
00:48:23,000 --> 00:48:24,000
然后再毁掉

1634
00:48:27,000 --> 00:48:27,000
好吧

1635
00:48:28,000 --> 00:48:28,000
对

1636
00:48:28,000 --> 00:48:29,000
那最后你

1637
00:48:29,000 --> 00:48:31,000
最后你是怎么解

1638
00:48:31,000 --> 00:48:31,000
就

1639
00:48:31,000 --> 00:48:32,000
没有解决啊

1640
00:48:32,000 --> 00:48:32,000
就

1641
00:48:32,000 --> 00:48:33,000
这孩子没有

1642
00:48:33,000 --> 00:48:35,000
这就是我一日复一日的工作

1643
00:48:35,000 --> 00:48:36,000
这就是

1644
00:48:36,000 --> 00:48:37,000
我目前在做的事情

1645
00:48:38,000 --> 00:48:38,000
就只要最后

1646
00:48:38,000 --> 00:48:39,000
Scratch your head

1647
00:48:40,000 --> 00:48:41,000
对

1648
00:48:41,000 --> 00:48:42,000
而且

1649
00:48:42,000 --> 00:48:43,000
有一个很大的问题就是

1650
00:48:43,000 --> 00:48:45,000
如果说你要保证一套原来码

1651
00:48:45,000 --> 00:48:47,000
同时给出两个发行板

1652
00:48:47,000 --> 00:48:48,000
就是一个正常安装板

1653
00:48:48,000 --> 00:48:50,000
和一个 Docker Image 的话

1654
00:48:51,000 --> 00:48:52,000
就有很多

1655
00:48:52,000 --> 00:48:53,000
目前

1656
00:48:53,000 --> 00:48:55,000
可能还有很多这个

1657
00:48:55,000 --> 00:48:56,000
编译过程

1658
00:48:56,000 --> 00:48:58,000
build 过程的坑需要去填

1659
00:48:59,000 --> 00:49:00,000
就你在 build 的时候

1660
00:49:00,000 --> 00:49:02,000
你需要说这个东西是 build 的一个 image

1661
00:49:02,000 --> 00:49:03,000
然后

1662
00:49:04,000 --> 00:49:05,000
接下来还有测试方面的坑

1663
00:49:05,000 --> 00:49:06,000
就是你可能

1664
00:49:06,000 --> 00:49:08,000
同一个功能在

1665
00:49:08,000 --> 00:49:10,000
普通安装情况下是可以用的

1666
00:49:10,000 --> 00:49:11,000
在 image

1667
00:49:11,000 --> 00:49:12,000
在 Docker Container 里面就不行

1668
00:49:12,000 --> 00:49:14,000
这还要专门去测

1669
00:49:14,000 --> 00:49:15,000
然后

1670
00:49:15,000 --> 00:49:16,000
对

1671
00:49:16,000 --> 00:49:19,000
总之这是一个牵一把动全身的这种

1672
00:49:19,000 --> 00:49:21,000
这么一个项目就

1673
00:49:22,000 --> 00:49:23,000
挺累的

1674
00:49:24,000 --> 00:49:27,000
所以你们那个产品是用 C 和 Python 混合写的

1675
00:49:28,000 --> 00:49:30,000
Engine 是用 C++写的

1676
00:49:31,000 --> 00:49:31,000
然后

1677
00:49:32,000 --> 00:49:34,000
一个数据柱系统

1678
00:49:34,000 --> 00:49:35,000
基本上可以切分为

1679
00:49:35,000 --> 00:49:38,000
或者在我们公司是切分为 Engine 和

1680
00:49:38,000 --> 00:49:40,000
所谓 Cluster OS 两部分

1681
00:49:40,000 --> 00:49:43,000
最重要的两个是这两个切分

1682
00:49:43,000 --> 00:49:44,000
然后还有一些一堆周边的

1683
00:49:45,000 --> 00:49:47,000
什么一个专门的开发工具之类的

1684
00:49:47,000 --> 00:49:49,000
然后 Engine 是用 C++写的

1685
00:49:50,000 --> 00:49:51,000
就是因为性命的原因是吧

1686
00:49:51,000 --> 00:49:52,000
对

1687
00:49:52,000 --> 00:49:52,000
然后

1688
00:49:53,000 --> 00:49:54,000
Cluster OS 和

1689
00:49:54,000 --> 00:49:57,000
Cluster OS 基本上是用 Python 和 C 写的

1690
00:49:57,000 --> 00:49:58,000
OK

1691
00:50:00,000 --> 00:50:02,000
然后还有一大堆什么 Driver

1692
00:50:02,000 --> 00:50:03,000
就是什么 JDBC

1693
00:50:03,000 --> 00:50:06,000
ODBC 那个.NET 的那个

1694
00:50:06,000 --> 00:50:07,000
那就是根据那个

1695
00:50:07,000 --> 00:50:08,000
那个要 Driver

1696
00:50:08,000 --> 00:50:10,000
要 Driver 它的语言来决定了

1697
00:50:10,000 --> 00:50:10,000
对

1698
00:50:10,000 --> 00:50:11,000
也拿不得

1699
00:50:11,000 --> 00:50:11,000
对

1700
00:50:13,000 --> 00:50:14,000
也是难为你了

1701
00:50:15,000 --> 00:50:16,000
不过还挺有意思的

1702
00:50:16,000 --> 00:50:18,000
就是你可能在

1703
00:50:18,000 --> 00:50:19,000
在离开公司那一刹那

1704
00:50:19,000 --> 00:50:22,000
你会觉得自己做的东西还是挺有意思的

1705
00:50:22,000 --> 00:50:23,000
或者挺有意义的

1706
00:50:23,000 --> 00:50:24,000
上升到一个

1707
00:50:24,000 --> 00:50:26,000
上升到一个形式上的

1708
00:50:26,000 --> 00:50:27,000
在你死的那天

1709
00:50:27,000 --> 00:50:28,000
你也说

1710
00:50:28,000 --> 00:50:29,000
我也是做过

1711
00:50:29,000 --> 00:50:29,000
对

1712
00:50:29,000 --> 00:50:31,000
我为人类做出了一些贡献

1713
00:50:31,000 --> 00:50:31,000
对吧

1714
00:50:31,000 --> 00:50:33,000
不像你在做

1715
00:50:33,000 --> 00:50:34,000
这 seriously

1716
00:50:34,000 --> 00:50:35,000
不像你在做赌球网站的时候

1717
00:50:35,000 --> 00:50:36,000
你会说我靠

1718
00:50:36,000 --> 00:50:37,000
我今天做的这个东西

1719
00:50:37,000 --> 00:50:40,000
不知道要毁灭了多少家庭

1720
00:50:44,000 --> 00:50:44,000
好吧

1721
00:50:46,000 --> 00:50:48,000
所以还是可以说是够

1722
00:50:48,000 --> 00:50:50,000
会感觉会清爽一些

1723
00:50:50,000 --> 00:50:50,000
对

1724
00:50:50,000 --> 00:50:52,000
回到刚才说的这件事情

1725
00:50:52,000 --> 00:50:53,000
就是我觉得如果你能写一个东西

1726
00:50:53,000 --> 00:50:55,000
然后只用这一种语言来写

1727
00:50:55,000 --> 00:50:57,000
然后只用一个

1728
00:50:57,000 --> 00:50:59,000
就是你有一个比较清晰的

1729
00:51:01,000 --> 00:51:02,000
割裂的

1730
00:51:02,000 --> 00:51:04,000
独立的模块

1731
00:51:04,000 --> 00:51:05,000
画的层级

1732
00:51:05,000 --> 00:51:07,000
是一个比较好的事情

1733
00:51:07,000 --> 00:51:10,000
其实这是不是要求语言具备更好的什么

1734
00:51:10,000 --> 00:51:11,000
什么的试用性

1735
00:51:11,000 --> 00:51:12,000
就是

1736
00:51:12,000 --> 00:51:14,000
他就能够写底层的东西

1737
00:51:14,000 --> 00:51:15,000
也能写高层的东西

1738
00:51:15,000 --> 00:51:15,000
并且

1739
00:51:16,000 --> 00:51:19,000
他对应的抽象层级不会特别

1740
00:51:21,000 --> 00:51:22,000
就不会特别低

1741
00:51:22,000 --> 00:51:23,000
或者特别高

1742
00:51:23,000 --> 00:51:23,000
影响性能

1743
00:51:23,000 --> 00:51:25,000
或者说是不太好

1744
00:51:25,000 --> 00:51:26,000
理解

1745
00:51:26,000 --> 00:51:27,000
你要找一个 SWIFT SPOT

1746
00:51:29,000 --> 00:51:31,000
SWIFT 算是这样的一种语言

1747
00:51:32,000 --> 00:51:33,000
当时设计的时候就这么考虑

1748
00:51:33,000 --> 00:51:34,000
又能写超多系统

1749
00:51:34,000 --> 00:51:36,000
又能写上层应用

1750
00:51:36,000 --> 00:51:38,000
我经常觉得应该是

1751
00:51:38,000 --> 00:51:39,000
因为

1752
00:51:39,000 --> 00:51:42,000
SWIFT 现在基本上是苹果把宝都压在 SWIFT 上

1753
00:51:43,000 --> 00:51:43,000
对

1754
00:51:43,000 --> 00:51:44,000
因为这也是大家在炒

1755
00:51:44,000 --> 00:51:47,000
又在苹果的软件质量的问题又出来了

1756
00:51:47,000 --> 00:51:49,000
然后前段还在

1757
00:51:49,000 --> 00:51:52,000
他们高管还去节目上

1758
00:51:52,000 --> 00:51:53,000
播客节目上去讲

1759
00:51:54,000 --> 00:51:55,000
我们怎么如何努力

1760
00:51:55,000 --> 00:51:56,000
什么

1761
00:51:56,000 --> 00:51:57,000
其实我在想

1762
00:51:57,000 --> 00:51:59,000
其实从软件工程的一点来看

1763
00:51:59,000 --> 00:51:59,000
不就是因为

1764
00:52:01,000 --> 00:52:03,000
软件的复杂度提升了吗

1765
00:52:03,000 --> 00:52:04,000
现在需求越来越多

1766
00:52:04,000 --> 00:52:04,000
对吧

1767
00:52:04,000 --> 00:52:04,000
各种什么

1768
00:52:04,000 --> 00:52:07,000
而且还处在一个技术转型期

1769
00:52:07,000 --> 00:52:08,000
他们之前一直用的

1770
00:52:09,000 --> 00:52:10,000
objective C

1771
00:52:10,000 --> 00:52:11,000
它其实

1772
00:52:11,000 --> 00:52:12,000
是一个

1773
00:52:12,000 --> 00:52:14,000
比较过时的技术

1774
00:52:14,000 --> 00:52:17,000
它的适用性是比较窄的

1775
00:52:19,000 --> 00:52:22,000
它不能用来写内核

1776
00:52:22,000 --> 00:52:23,000
因为它不够高效

1777
00:52:23,000 --> 00:52:26,000
它是一个有 round time 的系统

1778
00:52:26,000 --> 00:52:26,000
对吧

1779
00:52:26,000 --> 00:52:28,000
它在 C 上面加了一层 round time

1780
00:52:28,000 --> 00:52:29,000
对

1781
00:52:29,000 --> 00:52:29,000
是这样

1782
00:52:29,000 --> 00:52:29,000
对

1783
00:52:29,000 --> 00:52:32,000
但是也可以

1784
00:52:32,000 --> 00:52:33,000
但是直播没有这样做

1785
00:52:33,000 --> 00:52:36,000
或者说以前的电脑性能不允许什么这样做

1786
00:52:36,000 --> 00:52:37,000
那就是性能不够好

1787
00:52:38,000 --> 00:52:38,000
对

1788
00:52:39,000 --> 00:52:41,000
然后另外一个方面

1789
00:52:41,000 --> 00:52:43,000
它写那种非常复杂的应用

1790
00:52:43,000 --> 00:52:44,000
它的抽象层级又不够

1791
00:52:44,000 --> 00:52:45,000
对吧

1792
00:52:45,000 --> 00:52:46,000
它毕竟是一个 C 的语法

1793
00:52:46,000 --> 00:52:47,000
然后各种

1794
00:52:47,000 --> 00:52:50,000
我也看到了连传统参数都那么坑爹

1795
00:52:51,000 --> 00:52:51,000
对

1796
00:52:51,000 --> 00:52:53,000
我觉得 objective C 最大的一个问题

1797
00:52:53,000 --> 00:52:54,000
可能是它要求

1798
00:52:54,000 --> 00:52:57,000
就是一个好 objective C 的程序员必须能够

1799
00:52:59,000 --> 00:53:02,000
熟练的在两种编程范式之间跳来跳去

1800
00:53:03,000 --> 00:53:03,000
就是

1801
00:53:04,000 --> 00:53:06,000
它在打出一个 at 符号的时候

1802
00:53:06,000 --> 00:53:08,000
它可能就跳成了一个

1803
00:53:08,000 --> 00:53:09,000
O 的模式

1804
00:53:09,000 --> 00:53:11,000
对

1805
00:53:11,000 --> 00:53:12,000
跳进了 small talk 模式

1806
00:53:13,000 --> 00:53:14,000
然后它开始打什么 void

1807
00:53:14,000 --> 00:53:16,000
星之类乱七八糟的时候

1808
00:53:16,000 --> 00:53:17,000
就又回到了 C 模式

1809
00:53:18,000 --> 00:53:21,000
然后你必须在两种模式之间转来转去

1810
00:53:21,000 --> 00:53:22,000
就有点像一个

1811
00:53:22,000 --> 00:53:22,000
怎么说

1812
00:53:22,000 --> 00:53:24,000
就有点像瑞士人

1813
00:53:24,000 --> 00:53:25,000
工作的时候说高等德语

1814
00:53:25,000 --> 00:53:27,000
回家了开始说土德语

1815
00:53:27,000 --> 00:53:31,000
然后这样完成一个身份转换

1816
00:53:32,000 --> 00:53:33,000
但是 Swift 就没有这个

1817
00:53:33,000 --> 00:53:35,000
就没有这个坑爹的地方了

1818
00:53:36,000 --> 00:53:37,000
所以

1819
00:53:38,000 --> 00:53:39,000
也许在不久的将来

1820
00:53:39,000 --> 00:53:41,000
优秀的所有的程序员要比

1821
00:53:41,000 --> 00:53:43,000
会

1822
00:53:43,000 --> 00:53:46,000
或者说成为一个优秀的程序员的成本

1823
00:53:46,000 --> 00:53:47,000
应该要比

1824
00:53:47,000 --> 00:53:49,000
objective C 的程序员高一点

1825
00:53:49,000 --> 00:53:50,000
不低一点

1826
00:53:50,000 --> 00:53:51,000
对

1827
00:53:52,000 --> 00:53:53,000
因为我最近在琢磨这个事

1828
00:53:53,000 --> 00:53:55,000
就是因为我最近

1829
00:53:55,000 --> 00:53:57,000
寫够写的比较多一点

1830
00:53:57,000 --> 00:53:58,000
然后也觉得挺爽的

1831
00:53:58,000 --> 00:54:00,000
但是我还是知道它的短板在哪里

1832
00:54:00,000 --> 00:54:01,000
因为它是一个有 GC 的语言

1833
00:54:01,000 --> 00:54:02,000
对吧

1834
00:54:02,000 --> 00:54:04,000
有很多厂商其实它是不适用的

1835
00:54:04,000 --> 00:54:05,000
非常底层的

1836
00:54:05,000 --> 00:54:06,000
而且它写出来那个 banner 也比较大

1837
00:54:06,000 --> 00:54:07,000
对吧

1838
00:54:07,000 --> 00:54:07,000
然后说

1839
00:54:08,000 --> 00:54:08,000
最小的一个

1840
00:54:08,000 --> 00:54:11,000
你就 printf 一个 Hello World 出来

1841
00:54:11,000 --> 00:54:11,000
也有

1842
00:54:11,000 --> 00:54:13,000
可能一兆多还是两兆

1843
00:54:13,000 --> 00:54:16,000
这个时候也不够那么的轻量级

1844
00:54:17,000 --> 00:54:17,000
然后

1845
00:54:18,000 --> 00:54:21,000
就做一些我觉得网络层的网络级别的

1846
00:54:21,000 --> 00:54:22,000
就是

1847
00:54:22,000 --> 00:54:23,000
就是我们怎么定义

1848
00:54:23,000 --> 00:54:24,000
就是中等程度的

1849
00:54:24,000 --> 00:54:25,000
中等复杂度的应用

1850
00:54:25,000 --> 00:54:26,000
我觉得还是非常好的

1851
00:54:26,000 --> 00:54:28,000
但是再复杂一些

1852
00:54:28,000 --> 00:54:29,000
比如说

1853
00:54:29,000 --> 00:54:30,000
这个

1854
00:54:30,000 --> 00:54:31,000
一些就是 DSL

1855
00:54:31,000 --> 00:54:32,000
它可能不太适合写

1856
00:54:32,000 --> 00:54:32,000
对吧

1857
00:54:32,000 --> 00:54:33,000
但底层的

1858
00:54:33,000 --> 00:54:35,000
最简单的一个就是你用 Go 来写

1859
00:54:35,000 --> 00:54:36,000
Android Go

1860
00:54:36,000 --> 00:54:37,000
你怎么写

1861
00:54:37,000 --> 00:54:39,000
好像没有什么特别好的

1862
00:54:39,000 --> 00:54:40,000
那那个是包的问题

1863
00:54:40,000 --> 00:54:41,000
那个还好

1864
00:54:41,000 --> 00:54:43,000
我就说它的语言的

1865
00:54:43,000 --> 00:54:46,000
语法的抽象程度一般化

1866
00:54:46,000 --> 00:54:48,000
就是你写一些非常复杂的高层的应用

1867
00:54:48,000 --> 00:54:49,000
就不太现实了

1868
00:54:49,000 --> 00:54:50,000
对

1869
00:54:50,000 --> 00:54:51,000
我的点就是说

1870
00:54:51,000 --> 00:54:54,000
Gi 程序实际上是有时候是非常复杂的

1871
00:54:54,000 --> 00:54:54,000
对吧

1872
00:54:55,000 --> 00:54:56,000
你跟自己用 Java 不也写了吗

1873
00:54:58,000 --> 00:55:00,000
但是 Java 在另一种

1874
00:55:00,000 --> 00:55:01,000
Java

1875
00:55:01,000 --> 00:55:04,000
可是 Java 和 OptiC 都是相当啰嗦的语言

1876
00:55:04,000 --> 00:55:06,000
啰嗦的语言来写故意是比较

1877
00:55:07,000 --> 00:55:07,000
脑残的事

1878
00:55:07,000 --> 00:55:08,000
我觉得

1879
00:55:08,000 --> 00:55:09,000
对吧

1880
00:55:09,000 --> 00:55:10,000
故意这个东西是

1881
00:55:11,000 --> 00:55:13,000
最好的故意是你描述式的

1882
00:55:13,000 --> 00:55:14,000
对吧

1883
00:55:14,000 --> 00:55:16,000
但是如果你不得不用一种编程语言去写

1884
00:55:16,000 --> 00:55:18,000
去

1885
00:55:18,000 --> 00:55:20,000
以编程的方式来生成它的话

1886
00:55:20,000 --> 00:55:22,000
那我觉得其实啰嗦不失为一种好处

1887
00:55:23,000 --> 00:55:25,000
因为你能控制的地方或者能

1888
00:55:27,000 --> 00:55:29,000
但是会影响那个效率

1889
00:55:29,000 --> 00:55:29,000
就理解起来

1890
00:55:29,000 --> 00:55:29,000
就

1891
00:55:30,000 --> 00:55:30,000
就有

1892
00:55:30,000 --> 00:55:33,000
我一直坚信这么一种理论

1893
00:55:33,000 --> 00:55:35,000
就是那个人的这个

1894
00:55:35,000 --> 00:55:36,000
这个大脑

1895
00:55:36,000 --> 00:55:37,000
这个 processing power

1896
00:55:37,000 --> 00:55:39,000
它的那个

1897
00:55:39,000 --> 00:55:41,000
它的处理能力是有上限的

1898
00:55:41,000 --> 00:55:43,000
如果说你东西太

1899
00:55:43,000 --> 00:55:44,000
底层了

1900
00:55:44,000 --> 00:55:46,000
或者说这个太 verbose

1901
00:55:46,000 --> 00:55:48,000
就是太啰嗦的话

1902
00:55:48,000 --> 00:55:50,000
其实你一次在头脑中

1903
00:55:50,000 --> 00:55:51,000
你就看一瓶代码

1904
00:55:51,000 --> 00:55:52,000
你能知道它要做什么事情

1905
00:55:52,000 --> 00:55:55,000
你能在 hold 住的那个短时机

1906
00:55:55,000 --> 00:55:57,000
能够理解它的量是有限的

1907
00:55:57,000 --> 00:55:58,000
这样的话你就不能理解

1908
00:55:58,000 --> 00:56:00,000
非常多那种高层次的概念

1909
00:56:00,000 --> 00:56:03,000
也就会使得你这个整个的复杂度

1910
00:56:03,000 --> 00:56:05,000
就你能够可管理的复杂度是有限度的

1911
00:56:05,000 --> 00:56:06,000
这样的话

1912
00:56:06,000 --> 00:56:07,000
如果有一些更加复杂的用过来

1913
00:56:07,000 --> 00:56:09,000
其实你就不能

1914
00:56:09,000 --> 00:56:10,000
很好的去理解它

1915
00:56:10,000 --> 00:56:12,000
这个时候就会出现各种各样的软件的

1916
00:56:12,000 --> 00:56:13,000
质量的问题

1917
00:56:15,000 --> 00:56:16,000
没错

1918
00:56:16,000 --> 00:56:18,000
所以我为什么讲那个

1919
00:56:18,000 --> 00:56:19,000
说为什么现在

1920
00:56:19,000 --> 00:56:21,000
一直在炒这个苹果的软件质量下降

1921
00:56:21,000 --> 00:56:22,000
我觉得就是这个东西的一个

1922
00:56:22,000 --> 00:56:24,000
一个一个结果

1923
00:56:24,000 --> 00:56:26,000
就是 RMGhc 导致的这个原因

1924
00:56:26,000 --> 00:56:26,000
对吧

1925
00:56:26,000 --> 00:56:28,000
可能安卓也会遇到类似的问题

1926
00:56:28,000 --> 00:56:29,000
因为 Java 也都在谈判

1927
00:56:29,000 --> 00:56:30,000
可表达器也就只有那样

1928
00:56:31,000 --> 00:56:32,000
当然

1929
00:56:32,000 --> 00:56:33,000
安卓

1930
00:56:33,000 --> 00:56:35,000
不,Java 可能还有一些什么救命的稻草

1931
00:56:35,000 --> 00:56:36,000
什么可以用 scala 来写啊

1932
00:56:36,000 --> 00:56:38,000
反正编程 GPM 都差不多对吧

1933
00:56:38,000 --> 00:56:39,000
Java 吧

1934
00:56:40,000 --> 00:56:41,000
Java

1935
00:56:41,000 --> 00:56:42,000
Java

1936
00:56:43,000 --> 00:56:43,000
OK

1937
00:56:44,000 --> 00:56:46,000
但是就是够的话

1938
00:56:46,000 --> 00:56:48,000
其实我也看不到它作为上层应用

1939
00:56:48,000 --> 00:56:51,000
在这方面有什么有任何独到的一个

1940
00:56:51,000 --> 00:56:52,000
什么方法

1941
00:56:52,000 --> 00:56:54,000
就是它的那个

1942
00:56:54,000 --> 00:56:57,000
这个适用性还是相对来说窄一点点吧

1943
00:56:57,000 --> 00:56:59,000
然后大家还要回到就是刚才写底层的

1944
00:56:59,000 --> 00:57:00,000
这些东西

1945
00:57:00,000 --> 00:57:01,000
比较偏向 c

1946
00:57:01,000 --> 00:57:02,000
更接近于

1947
00:57:03,000 --> 00:57:05,000
硬件底层的那些东西

1948
00:57:05,000 --> 00:57:06,000
就

1949
00:57:06,000 --> 00:57:08,000
给我也不是特别适合

1950
00:57:08,000 --> 00:57:09,000
虽然是刚才有说写 VPM 的那些东西

1951
00:57:09,000 --> 00:57:11,000
也可以再凑合一下对吧

1952
00:57:11,000 --> 00:57:11,000
对

1953
00:57:11,000 --> 00:57:15,000
还没有像 Swift 的那个下限那么低

1954
00:57:15,000 --> 00:57:15,000
我觉得

1955
00:57:17,000 --> 00:57:19,000
修下限的时候

1956
00:57:19,000 --> 00:57:19,000
对

1957
00:57:19,000 --> 00:57:20,000
我觉得够

1958
00:57:20,000 --> 00:57:20,000
对

1959
00:57:20,000 --> 00:57:22,000
就是一个适用的下限

1960
00:57:22,000 --> 00:57:22,000
适用的上限

1961
00:57:23,000 --> 00:57:24,000
一定要这个

1962
00:57:24,000 --> 00:57:25,000
这个叫什么

1963
00:57:25,000 --> 00:57:26,000
Dynamic Range

1964
00:57:26,000 --> 00:57:27,000
这个一定要广

1965
00:57:27,000 --> 00:57:28,000
对

1966
00:57:28,000 --> 00:57:30,000
这个一定要够广

1967
00:57:30,000 --> 00:57:30,000
对

1968
00:57:30,000 --> 00:57:32,000
Swift 是一种 HDR 而已

1969
00:57:33,000 --> 00:57:33,000
对

1970
00:57:33,000 --> 00:57:35,000
因为这个是回答你刚才你说的那个问题

1971
00:57:35,000 --> 00:57:36,000
就是说如果你

1972
00:57:36,000 --> 00:57:38,000
只想用一套语言去解决

1973
00:57:38,000 --> 00:57:39,000
一个非常底层

1974
00:57:39,000 --> 00:57:42,000
同时又有非常上层应用需求的

1975
00:57:42,000 --> 00:57:44,000
这个一个问题的话

1976
00:57:44,000 --> 00:57:45,000
好像就只有这么一个方案了

1977
00:57:45,000 --> 00:57:47,000
不然的话就只能混合语言了

1978
00:57:47,000 --> 00:57:47,000
然后

1979
00:57:47,000 --> 00:57:49,000
混合语言就会出现刚才说那种不断的

1980
00:57:49,000 --> 00:57:50,000
JavaScript

1981
00:57:50,000 --> 00:57:50,000
对

1982
00:57:50,000 --> 00:57:52,000
范式迁移的问题

1983
00:57:52,000 --> 00:57:54,000
跟 JavaScript 有什么关系

1984
00:57:54,000 --> 00:57:56,000
JavaScript 现在不也是

1985
00:57:56,000 --> 00:57:58,000
就是前端用后端也用吗

1986
00:57:58,000 --> 00:57:59,000
你说

1987
00:57:59,000 --> 00:58:01,000
一套语言包揽

1988
00:58:01,000 --> 00:58:01,000
就是

1989
00:58:01,000 --> 00:58:02,000
不不

1990
00:58:02,000 --> 00:58:02,000
它那个

1991
00:58:02,000 --> 00:58:03,000
我理解 JavaScript

1992
00:58:03,000 --> 00:58:04,000
其实也是一种

1993
00:58:04,000 --> 00:58:07,000
现在被当做 HDR 来用语言

1994
00:58:08,000 --> 00:58:09,000
不那个是一种产生语言

1995
00:58:09,000 --> 00:58:10,000
那还不是说高地层

1996
00:58:10,000 --> 00:58:12,000
它还是写一个非常高层的语言

1997
00:58:12,000 --> 00:58:14,000
前端写那个 Gui 后端也是写那个

1998
00:58:15,000 --> 00:58:16,000
就是 Logic 那一部分

1999
00:58:16,000 --> 00:58:18,000
它不是说用来写这个什么

2000
00:58:18,000 --> 00:58:20,000
Web Server 本身

2001
00:58:20,000 --> 00:58:22,000
对不能用 JavaScript 来写一个操作手

2002
00:58:23,000 --> 00:58:24,000
有人不看过吗

2003
00:58:24,000 --> 00:58:25,000
还是有人这样干过

2004
00:58:25,000 --> 00:58:26,000
我靠

2005
00:58:26,000 --> 00:58:28,000
对有人这样干过

2006
00:58:28,000 --> 00:58:28,000
对

2007
00:58:28,000 --> 00:58:30,000
它在它是用那个什么

2008
00:58:30,000 --> 00:58:32,000
它是用那个 LVM compile 过来

2009
00:58:32,000 --> 00:58:33,000
然后在 JavaScript 里面

2010
00:58:33,000 --> 00:58:35,000
就是把 C 编译成 JavaScript

2011
00:58:35,000 --> 00:58:36,000
然后在浏览器里面跑了

2012
00:58:36,000 --> 00:58:38,000
好像是 Modular 的 Boss 还是什么来的

2013
00:58:38,000 --> 00:58:42,000
JavaScript as ESM

2014
00:58:43,000 --> 00:58:43,000
对

2015
00:58:43,000 --> 00:58:44,000
当作会编来用

2016
00:58:45,000 --> 00:58:45,000
这个不算

2017
00:58:45,000 --> 00:58:47,000
这个太太科技了

2018
00:58:47,000 --> 00:58:47,000
没错

2019
00:58:47,000 --> 00:58:48,000
是的

2020
00:58:48,000 --> 00:58:50,000
这有点像就是把一个

2021
00:58:50,000 --> 00:58:51,000
光谱的某一段

2022
00:58:51,000 --> 00:58:54,000
然后把它放大到其他的范围

2023
00:58:57,000 --> 00:58:57,000
说到那个

2024
00:58:58,000 --> 00:58:59,000
最近有个小新闻

2025
00:58:59,000 --> 00:59:00,000
就是那个 Go 1.6

2026
00:59:00,000 --> 00:59:01,000
因为昨天发布的吧

2027
00:59:01,000 --> 00:59:02,000
2 月 10

2028
00:59:03,000 --> 00:59:03,000
还是前几天

2029
00:59:03,000 --> 00:59:04,000
前几天

2030
00:59:04,000 --> 00:59:05,000
2 月 17 号

2031
00:59:05,000 --> 00:59:05,000
应该是

2032
00:59:05,000 --> 00:59:07,000
17 号是三天前的

2033
00:59:07,000 --> 00:59:08,000
三天前

2034
00:59:08,000 --> 00:59:10,000
然后那个 1.6

2035
00:59:10,000 --> 00:59:13,000
它有一个非常大的提升

2036
00:59:13,000 --> 00:59:15,000
是把那个 Garbage Collector 的

2037
00:59:15,000 --> 00:59:16,000
就是 GC pause

2038
00:59:16,000 --> 00:59:17,000
GC 暂停

2039
00:59:18,000 --> 00:59:19,000
对那种特别大的

2040
00:59:19,000 --> 00:59:21,000
那个

2041
00:59:21,000 --> 00:59:22,000
堆的

2042
00:59:22,000 --> 00:59:23,000
堆

2043
00:59:23,000 --> 00:59:23,000
不是堆

2044
00:59:23,000 --> 00:59:24,000
对的时候

2045
00:59:25,000 --> 00:59:27,000
GC pause

2046
00:59:27,000 --> 00:59:29,000
就降低到了可能 10 个毫秒以内

2047
00:59:29,000 --> 00:59:30,000
其实还挺惊人的

2048
00:59:30,000 --> 00:59:31,000
我觉得

2049
00:59:32,000 --> 00:59:33,000
虽然不是完全的那种

2050
00:59:34,000 --> 00:59:34,000
所谓 Pauseless

2051
00:59:34,000 --> 00:59:36,000
就是无暂停的 GC

2052
00:59:36,000 --> 00:59:37,000
但是其实已经对

2053
00:59:37,000 --> 00:59:38,000
绝大多数的那种

2054
00:59:38,000 --> 00:59:39,000
对实时性要求

2055
00:59:39,000 --> 00:59:40,000
没有那么高的应用

2056
00:59:40,000 --> 00:59:41,000
我觉得已经够用了

2057
00:59:41,000 --> 00:59:43,000
再加上你做一些

2058
00:59:43,000 --> 00:59:46,000
稍微基础的内存管理

2059
00:59:46,000 --> 00:59:47,000
就不要散射那么多垃圾的话

2060
00:59:47,000 --> 00:59:48,000
我觉得

2061
00:59:48,000 --> 00:59:49,000
很多应用

2062
00:59:49,000 --> 00:59:50,000
用那个构写

2063
00:59:50,000 --> 00:59:53,000
不会比用 JVM 调优过的那个

2064
00:59:53,000 --> 00:59:55,000
就比调优过的 JVM 的 GC 的

2065
00:59:55,000 --> 00:59:56,000
来的要弱我觉得

2066
00:59:57,000 --> 00:59:59,000
主要是开发效果要好很多

2067
00:59:59,000 --> 01:00:00,000
因为我之前也挺

2068
01:00:00,000 --> 01:00:02,000
我看到有些人在做那个

2069
01:00:03,000 --> 01:00:03,000
你知道有个

2070
01:00:03,000 --> 01:00:04,000
叫什么来的

2071
01:00:05,000 --> 01:00:06,000
广告实时竞价

2072
01:00:07,000 --> 01:00:09,000
广告实时竞价

2073
01:00:09,000 --> 01:00:10,000
就是这样

2074
01:00:10,000 --> 01:00:11,000
就是你有很多广告位

2075
01:00:11,000 --> 01:00:12,000
你要去

2076
01:00:12,000 --> 01:00:14,000
根据你们的用户跑过来的

2077
01:00:14,000 --> 01:00:15,000
那个他的那个用户的

2078
01:00:15,000 --> 01:00:16,000
这个 user profile

2079
01:00:16,000 --> 01:00:18,000
你要决定他给他展示哪个广告

2080
01:00:18,000 --> 01:00:18,000
会效果最好

2081
01:00:18,000 --> 01:00:20,000
然后你能收到更多的钱

2082
01:00:20,000 --> 01:00:21,000
然后能卖出更多的广告

2083
01:00:21,000 --> 01:00:22,000
就是对广告

2084
01:00:22,000 --> 01:00:23,000
有个排名

2085
01:00:23,000 --> 01:00:25,000
他会要在多少毫秒内要完成

2086
01:00:25,000 --> 01:00:26,000
这个

2087
01:00:26,000 --> 01:00:28,000
你可能有几万个广告

2088
01:00:28,000 --> 01:00:29,000
你要选出可能三个

2089
01:00:29,000 --> 01:00:29,000
对吧

2090
01:00:29,000 --> 01:00:30,000
排到这个前面

2091
01:00:30,000 --> 01:00:31,000
展示给你的用户

2092
01:00:31,000 --> 01:00:33,000
他对这个实时性要求还是挺高的

2093
01:00:33,000 --> 01:00:34,000
就把他

2094
01:00:34,000 --> 01:00:35,000
我看到有人在用那个

2095
01:00:35,000 --> 01:00:36,000
很多国内的这种

2096
01:00:37,000 --> 01:00:38,000
这种这种

2097
01:00:38,000 --> 01:00:39,000
就叫什么

2098
01:00:39,000 --> 01:00:40,000
叫做 ad exchange

2099
01:00:40,000 --> 01:00:43,000
就是广告的集中地

2100
01:00:44,000 --> 01:00:45,000
他们会用这个来写

2101
01:00:45,000 --> 01:00:46,000
然后还挺吃惊的

2102
01:00:48,000 --> 01:00:48,000
OK

2103
01:00:49,000 --> 01:00:49,000
对

2104
01:00:49,000 --> 01:00:51,000
因为之前他们一般的

2105
01:00:51,000 --> 01:00:53,000
我听说的一般的做法是开一个那个 JVM

2106
01:00:53,000 --> 01:00:55,000
然后开一个很大很大的一个 hip

2107
01:00:55,000 --> 01:00:56,000
比如说 8 个

2108
01:00:56,000 --> 01:00:58,000
GP 或者 16 个 GP 的 hip

2109
01:00:58,000 --> 01:00:59,000
然后就不管他了

2110
01:00:59,000 --> 01:01:01,000
就不用考虑这个 GC 的问题

2111
01:01:01,000 --> 01:01:01,000
对吧

2112
01:01:01,000 --> 01:01:02,000
反正只要够大对吧

2113
01:01:02,000 --> 01:01:04,000
我们这样说一天再重启一下就好了

2114
01:01:04,000 --> 01:01:04,000
最多

2115
01:01:06,000 --> 01:01:06,000
对

2116
01:01:06,000 --> 01:01:08,000
这其实也是从一个侧面反映

2117
01:01:08,000 --> 01:01:10,000
目前 JVM 是一个非常

2118
01:01:10,000 --> 01:01:11,000
robots 的东西

2119
01:01:11,000 --> 01:01:11,000
其实

2120
01:01:12,000 --> 01:01:13,000
那个很好的

2121
01:01:13,000 --> 01:01:14,000
就只是说他太重了

2122
01:01:14,000 --> 01:01:15,000
就是有些

2123
01:01:15,000 --> 01:01:16,000
像我们写那种

2124
01:01:17,000 --> 01:01:19,000
utility 工作什么也有

2125
01:01:19,000 --> 01:01:20,000
你就不希望

2126
01:01:20,000 --> 01:01:21,000
因为 JVM 起头很慢

2127
01:01:21,000 --> 01:01:22,000
吧

2128
01:01:23,000 --> 01:01:24,000
取决于

2129
01:01:24,000 --> 01:01:25,000
好吧

2130
01:01:25,000 --> 01:01:25,000
对没错

2131
01:01:26,000 --> 01:01:28,000
在企业级服务器上肯定是非常

2132
01:01:28,000 --> 01:01:29,000
庞大的东西

2133
01:01:29,000 --> 01:01:30,000
你不管怎么样

2134
01:01:30,000 --> 01:01:31,000
你就不打怕

2135
01:01:31,000 --> 01:01:33,000
你就写一个简单的 Hello 或者

2136
01:01:33,000 --> 01:01:34,000
用 JVM 跑一下

2137
01:01:34,000 --> 01:01:35,000
他那个 JVM 起头本身

2138
01:01:35,000 --> 01:01:37,000
可能要耗掉可能几百毫秒

2139
01:01:37,000 --> 01:01:38,000
你感觉到他不是那种

2140
01:01:39,000 --> 01:01:40,000
那种 instant 的感觉你知道吧

2141
01:01:40,000 --> 01:01:42,000
就不是你输入这个命令点一下

2142
01:01:42,000 --> 01:01:43,000
马上就要执行完了

2143
01:01:43,000 --> 01:01:44,000
那种感觉

2144
01:01:44,000 --> 01:01:45,000
还是要顿一下的那种

2145
01:01:47,000 --> 01:01:49,000
对还是分具体实现吧

2146
01:01:49,000 --> 01:01:51,000
不过大大部分情况下是这样

2147
01:01:52,000 --> 01:01:52,000
这是一个

2148
01:01:53,000 --> 01:01:55,000
就这个什么目前用那个叫什么呢

2149
01:01:55,000 --> 01:01:56,000
OpenJDK 吧

2150
01:01:56,000 --> 01:01:57,000
还有那个叫 HotSpot

2151
01:01:57,000 --> 01:01:59,000
对 HotSpot 都是那种比较重的

2152
01:01:59,000 --> 01:02:00,000
好像轻量级的也有

2153
01:02:00,000 --> 01:02:02,000
我不知道安卓那个 Double

2154
01:02:02,000 --> 01:02:03,000
那肯定是啊

2155
01:02:03,000 --> 01:02:06,000
那个是个 JIT 吗

2156
01:02:06,000 --> 01:02:08,000
但 Double 可没有人在 PC 上用

2157
01:02:08,000 --> 01:02:09,000
只是在那个安卓上跑

2158
01:02:10,000 --> 01:02:12,000
Google 不干这件事情的话

2159
01:02:12,000 --> 01:02:12,000
不会有人干

2160
01:02:13,000 --> 01:02:13,000
对

2161
01:02:14,000 --> 01:02:15,000
还说到语言

2162
01:02:15,000 --> 01:02:16,000
刚才也提了 Swift

2163
01:02:16,000 --> 01:02:18,000
Swift 最近有什么新东西吗

2164
01:02:19,000 --> 01:02:21,000
Swift 最近开

2165
01:02:22,000 --> 01:02:24,000
Swiftorg 上面最近的新闻就是

2166
01:02:25,000 --> 01:02:29,000
跟 Go 这个比较底层的一个更新

2167
01:02:29,000 --> 01:02:32,000
来比 Swift 目前在做一些面子路程

2168
01:02:32,000 --> 01:02:34,000
就是 FaceLifting

2169
01:02:34,000 --> 01:02:36,000
就是因为我们都知道

2170
01:02:36,000 --> 01:02:39,000
Swift 是跟这个 CocoAPI 绑定在一起的

2171
01:02:39,000 --> 01:02:41,000
对至少目前是绑定在一起的

2172
01:02:41,000 --> 01:02:42,000
虽然开源之后

2173
01:02:42,000 --> 01:02:43,000
它肯定会做出一些

2174
01:02:43,000 --> 01:02:46,000
比如说在跟这个就解绑

2175
01:02:46,000 --> 01:02:47,000
然后去搞一些

2176
01:02:49,000 --> 01:02:51,000
直接呼叫 Linux 原生酷

2177
01:02:51,000 --> 01:02:52,000
之类的一些工作

2178
01:02:52,000 --> 01:02:55,000
但是目前它做的一件事情就是

2179
01:02:55,000 --> 01:02:57,000
它有一个所谓 API Design Guideline

2180
01:02:58,000 --> 01:02:59,000
这个肯定要介绍一下背景

2181
01:02:59,000 --> 01:03:02,000
因为之前 CocoAPI 的 APS 机

2182
01:03:02,000 --> 01:03:05,000
是因为那个 Abstract C 定制的

2183
01:03:06,000 --> 01:03:06,000
等于是

2184
01:03:07,000 --> 01:03:08,000
然后它的有些设计

2185
01:03:08,000 --> 01:03:09,000
对是一个非常

2186
01:03:09,000 --> 01:03:12,000
有些痕迹是非常非常古老的

2187
01:03:12,000 --> 01:03:14,000
来自于七八十年代

2188
01:03:14,000 --> 01:03:15,000
对

2189
01:03:16,000 --> 01:03:17,000
然后它的其实我们

2190
01:03:17,000 --> 01:03:20,000
我之前 Swift 是 1.0 吗

2191
01:03:20,000 --> 01:03:22,000
是 1.0 上次发布的那个

2192
01:03:23,000 --> 01:03:24,000
对现在已经

2193
01:03:25,000 --> 01:03:27,000
现在 2.1 了

2194
01:03:27,000 --> 01:03:28,000
OK 2.0

2195
01:03:28,000 --> 01:03:30,000
你说开源的那一版本吗

2196
01:03:30,000 --> 01:03:31,000
开源的那一版本是 2.1

2197
01:03:31,000 --> 01:03:32,000
对 2.1

2198
01:03:32,000 --> 01:03:33,000
对它发布的

2199
01:03:33,000 --> 01:03:33,000
我就看了一下

2200
01:03:33,000 --> 01:03:34,000
它那个就标准酷

2201
01:03:35,000 --> 01:03:36,000
其实挺

2202
01:03:37,000 --> 01:03:38,000
挺没什么

2203
01:03:38,000 --> 01:03:38,000
就是基本上

2204
01:03:38,000 --> 01:03:40,000
非常地贫瘠

2205
01:03:40,000 --> 01:03:41,000
对什么都做不了

2206
01:03:41,000 --> 01:03:43,000
然后它说你稍微要做点事

2207
01:03:43,000 --> 01:03:44,000
你得去用那个叫什么

2208
01:03:44,000 --> 01:03:46,000
那个 Coco 那套东西对吧

2209
01:03:46,000 --> 01:03:47,000
对

2210
01:03:47,000 --> 01:03:49,000
你稍微做一点

2211
01:03:49,000 --> 01:03:52,000
比较 non-trivial 的事情

2212
01:03:52,000 --> 01:03:54,000
就基本上 Beyond the Hello World

2213
01:03:54,000 --> 01:03:56,000
你就得去钻 Coco 的东西

2214
01:03:57,000 --> 01:03:58,000
对然后你一看 Coco

2215
01:03:58,000 --> 01:04:00,000
那个标准酷

2216
01:04:00,000 --> 01:04:00,000
一看

2217
01:04:00,000 --> 01:04:00,000
哇

2218
01:04:00,000 --> 01:04:02,000
那个风格就跟 Swift 语言

2219
01:04:02,000 --> 01:04:04,000
就完全不是一个风格了

2220
01:04:04,000 --> 01:04:05,000
就觉得

2221
01:04:05,000 --> 01:04:06,000
你会觉得这个

2222
01:04:06,000 --> 01:04:07,000
这简直就是八十年代那种

2223
01:04:07,000 --> 01:04:08,000
等宽字体的

2224
01:04:08,000 --> 01:04:10,000
牵引的操作策略

2225
01:04:10,000 --> 01:04:13,000
然后你的内容放一个比较新的

2226
01:04:13,000 --> 01:04:15,000
放在了一个非常精美的

2227
01:04:15,000 --> 01:04:17,000
非常现代的前面音乐上的感觉

2228
01:04:17,000 --> 01:04:18,000
因为当时

2229
01:04:18,000 --> 01:04:19,000
它不是说出了那个

2230
01:04:20,000 --> 01:04:21,000
对那个 Bound to 的支持

2231
01:04:21,000 --> 01:04:21,000
我想说

2232
01:04:21,000 --> 01:04:23,000
那你这个写服务端和客户端

2233
01:04:23,000 --> 01:04:24,000
都可以搞定的对吧

2234
01:04:24,000 --> 01:04:26,000
还挺好我想学一下

2235
01:04:26,000 --> 01:04:27,000
但一看哇标准酷怎么长这样

2236
01:04:27,000 --> 01:04:28,000
算了

2237
01:04:28,000 --> 01:04:30,000
就跟那个 Go 的区别很大

2238
01:04:30,000 --> 01:04:31,000
因为 Go 的标准酷是

2239
01:04:31,000 --> 01:04:32,000
它是就是

2240
01:04:32,000 --> 01:04:33,000
本来就被 Go 定制的标准酷

2241
01:04:34,000 --> 01:04:35,000
然后功能都挺齐全的

2242
01:04:35,000 --> 01:04:36,000
大部分我现在我

2243
01:04:36,000 --> 01:04:37,000
我现在写的很多英雄

2244
01:04:37,000 --> 01:04:38,000
就基本上

2245
01:04:38,000 --> 01:04:40,000
就基本上用不到标准酷以外的东西

2246
01:04:40,000 --> 01:04:41,000
就可以搞定

2247
01:04:41,000 --> 01:04:42,000
就还觉得挺爽的

2248
01:04:42,000 --> 01:04:43,000
然后一看 Swift 的这个

2249
01:04:43,000 --> 01:04:44,000
哇

2250
01:04:44,000 --> 01:04:45,000
完全无法接受

2251
01:04:46,000 --> 01:04:47,000
所以他们这个做面子工程

2252
01:04:47,000 --> 01:04:48,000
我觉得还挺有必要的

2253
01:04:48,000 --> 01:04:51,000
就等于是一个迁移

2254
01:04:51,000 --> 01:04:54,000
对他们先是出了一个 API Design Guidelines

2255
01:04:54,000 --> 01:04:56,000
就是你要为这个

2256
01:04:56,000 --> 01:04:59,000
不管是 Send Library 设计 API

2257
01:04:59,000 --> 01:05:02,000
还是你要自己开发 Swift API

2258
01:05:03,000 --> 01:05:06,000
都最好都应该遵循这个 Design Guidelines

2259
01:05:06,000 --> 01:05:09,000
就是比如说里面有一些非常细小的

2260
01:05:09,000 --> 01:05:10,000
比如说应该怎么命名

2261
01:05:10,000 --> 01:05:11,000
那个命名你的方法呀

2262
01:05:11,000 --> 01:05:13,000
怎么要一致

2263
01:05:14,000 --> 01:05:18,000
对去使用一些特定的 Convention 之类的

2264
01:05:18,000 --> 01:05:20,000
就他那还是为那个 Swift

2265
01:05:20,000 --> 01:05:21,000
就下一个版本

2266
01:05:21,000 --> 01:05:22,000
应该是今年年末的时候

2267
01:05:22,000 --> 01:05:23,000
还是明年年初的时候

2268
01:05:23,000 --> 01:05:24,000
Swift 3 吧可能是

2269
01:05:24,000 --> 01:05:24,000
对

2270
01:05:24,000 --> 01:05:26,000
还是说是 2016 年年底吧是不是

2271
01:05:26,000 --> 01:05:27,000
去年说的时候是什么

2272
01:05:27,000 --> 01:05:31,000
应该没有没有去年说

2273
01:05:31,000 --> 01:05:32,000
3

2274
01:05:32,000 --> 01:05:34,000
不是 16 年年底吗

2275
01:05:34,000 --> 01:05:35,000
那是 2.2 吧

2276
01:05:35,000 --> 01:05:36,000
那应该是 2.2

2277
01:05:36,000 --> 01:05:38,000
就 3 还要遥遥无期

2278
01:05:38,000 --> 01:05:38,000
3 还要有一段时间

2279
01:05:38,000 --> 01:05:39,000
不是遥遥无期

2280
01:05:39,000 --> 01:05:40,000
但是

2281
01:05:40,000 --> 01:05:41,000
17 年

2282
01:05:41,000 --> 01:05:43,000
对应该是明年

2283
01:05:43,000 --> 01:05:44,000
所以往后想了一下

2284
01:05:44,000 --> 01:05:47,000
还是等他们把这个 API 的这个

2285
01:05:47,000 --> 01:05:50,000
这个重购做完

2286
01:05:50,000 --> 01:05:52,000
然后那个 3 发布之后才学的

2287
01:05:52,000 --> 01:05:53,000
也来得及

2288
01:05:53,000 --> 01:05:54,000
中间没有

2289
01:05:55,000 --> 01:05:57,000
因为现在即便苹果内部

2290
01:05:57,000 --> 01:05:59,000
都不是非常的依赖 Swift

2291
01:05:59,000 --> 01:06:00,000
就是基本上

2292
01:06:00,000 --> 01:06:03,000
你看 IOS 那些原生程序里面

2293
01:06:03,000 --> 01:06:04,000
没有几个是用 Swift 的

2294
01:06:04,000 --> 01:06:06,000
可能计算器是用 Swift 的

2295
01:06:06,000 --> 01:06:07,000
但是他们在那个

2296
01:06:07,000 --> 01:06:09,000
WMDC 上面给出的展示箱里

2297
01:06:09,000 --> 01:06:10,000
全部都是用 Swift 的

2298
01:06:11,000 --> 01:06:12,000
是但是

2299
01:06:12,000 --> 01:06:14,000
那只是一个展示

2300
01:06:14,000 --> 01:06:16,000
对内部他们怎么样

2301
01:06:16,000 --> 01:06:16,000
还不知道是吧

2302
01:06:16,000 --> 01:06:18,000
这我觉得他们那边也在做

2303
01:06:18,000 --> 01:06:19,000
这个迁移

2304
01:06:19,000 --> 01:06:21,000
说好像现在苹果里面有

2305
01:06:21,000 --> 01:06:23,000
能有一成的

2306
01:06:23,000 --> 01:06:26,000
就是在生产中的代码

2307
01:06:26,000 --> 01:06:26,000
是用 Swift 的

2308
01:06:26,000 --> 01:06:27,000
写的就已经不错了

2309
01:06:27,000 --> 01:06:29,000
尤其是 IOS 上面

2310
01:06:29,000 --> 01:06:32,000
大部分人还是依赖着 Swift

2311
01:06:32,000 --> 01:06:34,000
而且那个什么 iTunes 之类的

2312
01:06:34,000 --> 01:06:37,000
还一直全都是 OBJC 写的

2313
01:06:37,000 --> 01:06:40,000
因为 Swift 处在一个比较

2314
01:06:40,000 --> 01:06:42,000
变化中

2315
01:06:42,000 --> 01:06:44,000
处在一个净化中的状态

2316
01:06:44,000 --> 01:06:45,000
对

2317
01:06:45,000 --> 01:06:46,000
有些东西

2318
01:06:46,000 --> 01:06:47,000
可能今天能用明天就坏了

2319
01:06:47,000 --> 01:06:48,000
对吧

2320
01:06:48,000 --> 01:06:48,000
但是

2321
01:06:49,000 --> 01:06:51,000
你在一个这个体量的公司

2322
01:06:51,000 --> 01:06:53,000
里面是不能依赖这种

2323
01:06:53,000 --> 01:06:54,000
非常 cutting edge 的东西

2324
01:06:54,000 --> 01:06:56,000
虽然它版本号已经二转进了

2325
01:06:56,000 --> 01:06:58,000
它还是有反向后部兼容

2326
01:06:58,000 --> 01:06:59,000
对吧

2327
01:07:00,000 --> 01:07:00,000
Anyway

2328
01:07:00,000 --> 01:07:02,000
然后这个 guideline 的点

2329
01:07:02,000 --> 01:07:04,000
就是说它有一个比较

2330
01:07:06,000 --> 01:07:08,000
重大的一个决策

2331
01:07:08,000 --> 01:07:10,000
就是它要做到

2332
01:07:10,000 --> 01:07:13,000
去 OBJC 化

2333
01:07:13,000 --> 01:07:14,000
就是 less verbose

2334
01:07:14,000 --> 01:07:17,000
然后两个点是什么

2335
01:07:17,000 --> 01:07:18,000
不要

2336
01:07:18,000 --> 01:07:21,000
所谓什么 don't surprise an expert

2337
01:07:21,000 --> 01:07:23,000
然后 don't confuse a beginner

2338
01:07:25,000 --> 01:07:28,000
就是老手不会觉得惊奇

2339
01:07:28,000 --> 01:07:30,000
然后新手也不会觉得困惑

2340
01:07:33,000 --> 01:07:35,000
在之前的 OBJC 世界里面

2341
01:07:35,000 --> 01:07:36,000
这两件事情

2342
01:07:36,000 --> 01:07:37,000
我觉得是经常发生的

2343
01:07:37,000 --> 01:07:39,000
就是你写的

2344
01:07:39,000 --> 01:07:41,000
就像我可能写了一段时间

2345
01:07:41,000 --> 01:07:43,000
然后再去看一个什么新的 API

2346
01:07:43,000 --> 01:07:43,000
你会说

2347
01:07:44,000 --> 01:07:45,000
我靠

2348
01:07:45,000 --> 01:07:47,000
这地方居然要这样

2349
01:07:47,000 --> 01:07:48,000
然后

2350
01:07:48,000 --> 01:07:49,000
那新手就更没说完

2351
01:07:49,000 --> 01:07:50,000
新手可能会说

2352
01:07:50,000 --> 01:07:51,000
我靠这些

2353
01:07:51,000 --> 01:07:52,000
为什么有些地方要用 ad

2354
01:07:52,000 --> 01:07:54,000
有些地方不要用 ad 之类的

2355
01:07:54,000 --> 01:07:56,000
但是如果这个

2356
01:07:56,000 --> 01:07:59,000
新的 swept API design guideline

2357
01:07:59,000 --> 01:08:00,000
可以被

2358
01:08:04,000 --> 01:08:06,000
想不出那个词是什么

2359
01:08:06,000 --> 01:08:07,000
就可以被完全应用到

2360
01:08:08,000 --> 01:08:10,000
现有的 coco 酷战的话

2361
01:08:10,000 --> 01:08:12,000
或者说应用到现有的 swept

2362
01:08:12,000 --> 01:08:14,000
和 coco 之间的绑定上的话

2363
01:08:14,000 --> 01:08:15,000
那可能这些事情都会好很多

2364
01:08:16,000 --> 01:08:17,000
嗯

2365
01:08:18,000 --> 01:08:20,000
主要是用起来更舒服了

2366
01:08:20,000 --> 01:08:22,000
然后要打的字更少了

2367
01:08:22,000 --> 01:08:24,000
读起来也就更流畅了

2368
01:08:24,000 --> 01:08:26,000
比如说有些非常细小的地方

2369
01:08:26,000 --> 01:08:27,000
但是我觉得最值得一提的

2370
01:08:27,000 --> 01:08:29,000
就是很多 API 的

2371
01:08:29,000 --> 01:08:32,000
或是部分 API 和方法的

2372
01:08:32,000 --> 01:08:34,000
ns 前缀都要被去掉

2373
01:08:35,000 --> 01:08:36,000
这个其实还有点

2374
01:08:36,000 --> 01:08:38,000
有可以探讨一下

2375
01:08:38,000 --> 01:08:40,000
它出现 ns 前缀

2376
01:08:40,000 --> 01:08:41,000
是因为那个 c 没有

2377
01:08:41,000 --> 01:08:42,000
那个

2378
01:08:42,000 --> 01:08:42,000
就 namescope

2379
01:08:42,000 --> 01:08:45,000
OBJC 没有 namespacing

2380
01:08:45,000 --> 01:08:47,000
但 OBJC 没有

2381
01:08:47,000 --> 01:08:48,000
是因为 c 没有

2382
01:08:48,000 --> 01:08:49,000
它不能加一个上去

2383
01:08:49,000 --> 01:08:50,000
它可以加一个上去

2384
01:08:50,000 --> 01:08:51,000
但是没有这么做

2385
01:08:52,000 --> 01:08:53,000
嗯 anyway 好吧

2386
01:08:53,000 --> 01:08:54,000
对它没有 namespacing

2387
01:08:55,000 --> 01:08:56,000
然后 swept 是有的

2388
01:08:56,000 --> 01:08:58,000
所以它不需要前缀了

2389
01:08:58,000 --> 01:08:58,000
对

2390
01:08:59,000 --> 01:09:00,000
所以我一直很好奇

2391
01:09:00,000 --> 01:09:01,000
那个事反正之前

2392
01:09:01,000 --> 01:09:02,000
我不是在写那个影片

2393
01:09:02,000 --> 01:09:04,000
我会在左边写一些 c 的

2394
01:09:04,000 --> 01:09:05,000
一些样本的代码来写

2395
01:09:05,000 --> 01:09:07,000
但 c 里面就真的只有加前

2396
01:09:07,000 --> 01:09:09,000
这种方式来做 namespace 吗

2397
01:09:09,000 --> 01:09:10,000
怎么说呢

2398
01:09:10,000 --> 01:09:13,000
就是 c 隐藏局部变量

2399
01:09:13,000 --> 01:09:14,000
或者局部方法的

2400
01:09:16,000 --> 01:09:20,000
的策略是把它放在一个文件里面

2401
01:09:20,000 --> 01:09:21,000
就是如果你不希望这个东西

2402
01:09:21,000 --> 01:09:22,000
被别人看到

2403
01:09:22,000 --> 01:09:23,000
那你就不要把它放在

2404
01:09:23,000 --> 01:09:26,000
那个可以被别人 include 的东西里面

2405
01:09:26,000 --> 01:09:27,000
不但是你

2406
01:09:27,000 --> 01:09:29,000
你那个但是你那个是对

2407
01:09:29,000 --> 01:09:30,000
对外部调整

2408
01:09:30,000 --> 01:09:31,000
但你对自己使用的

2409
01:09:31,000 --> 01:09:31,000
你没有办法

2410
01:09:31,000 --> 01:09:33,000
在 c 的同一个这个程序里面

2411
01:09:33,000 --> 01:09:36,000
你自己造一个不同的 namespace 出来吧

2412
01:09:36,000 --> 01:09:37,000
嗯

2413
01:09:37,000 --> 01:09:38,000
基本上没有什么太

2414
01:09:38,000 --> 01:09:39,000
太好

2415
01:09:39,000 --> 01:09:40,000
所以就只能加前缀了

2416
01:09:40,000 --> 01:09:42,000
对它有点像

2417
01:09:44,000 --> 01:09:45,000
这个比例不差的应该

2418
01:09:45,000 --> 01:09:47,000
就是它比比比比比比比较像

2419
01:09:48,000 --> 01:09:50,000
比较像 Python 的同一个文件里面

2420
01:09:51,000 --> 01:09:52,000
你是没有办法

2421
01:09:52,000 --> 01:09:54,000
通过一个语言的机制来限制

2422
01:09:54,000 --> 01:09:55,000
自己说这个东西

2423
01:09:55,000 --> 01:09:56,000
不要被别人访问到

2424
01:09:56,000 --> 01:09:58,000
或者说这个东西不要跟别人撞名的

2425
01:09:59,000 --> 01:10:00,000
Python 可以啊

2426
01:10:00,000 --> 01:10:01,000
Python 是机器文件

2427
01:10:01,000 --> 01:10:02,000
每个文件就是一个

2428
01:10:02,000 --> 01:10:03,000
我刚才就说了

2429
01:10:03,000 --> 01:10:05,000
它在同一个文件里面

2430
01:10:05,000 --> 01:10:06,000
啊啊啊

2431
01:10:06,000 --> 01:10:07,000
就对 c 来说

2432
01:10:07,000 --> 01:10:09,000
它不分区不区分文件吗

2433
01:10:10,000 --> 01:10:10,000
对

2434
01:10:10,000 --> 01:10:11,000
就文件不是一个边界

2435
01:10:11,000 --> 01:10:13,000
对它诞生了撞

2436
01:10:13,000 --> 01:10:14,000
它诞生那个年代

2437
01:10:14,000 --> 01:10:15,000
它没有这个需求嘛

2438
01:10:15,000 --> 01:10:17,000
所以它也没办法预见到这一点

2439
01:10:17,000 --> 01:10:20,000
所以现在就只能加前就这种最蠢的方法

2440
01:10:20,000 --> 01:10:22,000
导致那些名字都看起来挺奇怪的

2441
01:10:22,000 --> 01:10:24,000
或者不干净嘛至少

2442
01:10:24,000 --> 01:10:25,000
对

2443
01:10:25,000 --> 01:10:26,000
而且另外一个原因

2444
01:10:26,000 --> 01:10:27,000
我觉得可能也是

2445
01:10:27,000 --> 01:10:30,000
没有人试图用 c 的这种

2446
01:10:30,000 --> 01:10:34,000
没有命没有 name space 的

2447
01:10:35,000 --> 01:10:36,000
语言来构建一个

2448
01:10:37,000 --> 01:10:39,000
如此超大型的一种的

2449
01:10:39,000 --> 01:10:41,000
操作系统级别的 framework

2450
01:10:41,000 --> 01:10:41,000
对吧

2451
01:10:41,000 --> 01:10:43,000
因为系统 API 本质上

2452
01:10:43,000 --> 01:10:46,000
它是一个非常巨大的软件工程产品

2453
01:10:46,000 --> 01:10:49,000
而目前现有方寸上没

2454
01:10:50,000 --> 01:10:54,000
几乎只有苹果在用这个没有 name space 的东西吧

2455
01:10:55,000 --> 01:10:58,000
那个 csharp 也有 name space

2456
01:10:58,000 --> 01:11:00,000
对 csharp 之前

2457
01:11:00,000 --> 01:11:02,000
csharp 肯定有

2458
01:11:04,000 --> 01:11:05,000
那个非常

2459
01:11:06,000 --> 01:11:07,000
sorry

2460
01:11:07,000 --> 01:11:09,000
我不是要吐槽 csharp 这里

2461
01:11:09,000 --> 01:11:10,000
是要说那个

2462
01:11:11,000 --> 01:11:12,000
两个

2463
01:11:13,000 --> 01:11:14,000
冒号

2464
01:11:14,000 --> 01:11:14,000
对

2465
01:11:14,000 --> 01:11:15,000
两个冒号

2466
01:11:15,000 --> 01:11:16,000
操作服

2467
01:11:16,000 --> 01:11:16,000
std 吗

2468
01:11:16,000 --> 01:11:18,000
standard 的冒号什么什么

2469
01:11:18,000 --> 01:11:19,000
对

2470
01:11:19,000 --> 01:11:20,000
它是 name space 的分个服

2471
01:11:20,000 --> 01:11:21,000
但我想说的不是这个

2472
01:11:21,000 --> 01:11:21,000
是

2473
01:11:21,000 --> 01:11:23,000
而是 php 里面这个

2474
01:11:24,000 --> 01:11:26,000
东西有一个专门的称呼

2475
01:11:26,000 --> 01:11:26,000
叫什么来着

2476
01:11:27,000 --> 01:11:28,000
是希波莱语写的

2477
01:11:29,000 --> 01:11:30,000
就是

2478
01:11:30,000 --> 01:11:34,000
如果你在 php 里面打错了两个冒号

2479
01:11:35,000 --> 01:11:37,000
我很有可能记错了

2480
01:11:37,000 --> 01:11:37,000
但是

2481
01:11:37,000 --> 01:11:39,000
就会出一个

2482
01:11:40,000 --> 01:11:42,000
就是那个出来的错误提示里面

2483
01:11:42,000 --> 01:11:45,000
管两个冒号的

2484
01:11:45,000 --> 01:11:46,000
称呼

2485
01:11:46,000 --> 01:11:47,000
是一个很奇怪的名字

2486
01:11:47,000 --> 01:11:48,000
然后去查的话

2487
01:11:48,000 --> 01:11:49,000
你会发现它是希波莱语

2488
01:11:50,000 --> 01:11:53,000
就是两个冒号这个符号是一个专有名词的

2489
01:11:53,000 --> 01:11:54,000
对

2490
01:11:55,000 --> 01:11:55,000
好吧

2491
01:11:56,000 --> 01:11:56,000
我还是想到了

2492
01:11:56,000 --> 01:11:57,000
对

2493
01:11:57,000 --> 01:11:57,000
我知道

2494
01:11:57,000 --> 01:11:59,000
是骰子的四点

2495
01:12:01,000 --> 01:12:02,000
四饼

2496
01:12:02,000 --> 01:12:03,000
四饼

2497
01:12:04,000 --> 01:12:05,000
然后

2498
01:12:06,000 --> 01:12:07,000
然后

2499
01:12:08,000 --> 01:12:09,000
有四饼符

2500
01:12:12,000 --> 01:12:12,000
好的

2501
01:12:12,000 --> 01:12:13,000
我来查一下

2502
01:12:13,000 --> 01:12:14,000
您给您叫什么

2503
01:12:14,000 --> 01:12:15,000
你查

2504
01:12:17,000 --> 01:12:18,000
这个东西叫做

2505
01:12:19,000 --> 01:12:22,000
php expects t

2506
01:12:22,000 --> 01:12:27,000
pamayin nekudotayin

2507
01:12:27,000 --> 01:12:28,000
what the fuck

2508
01:12:28,000 --> 01:12:29,000
怎么写

2509
01:12:31,000 --> 01:12:32,000
p-a-a-m

2510
01:12:33,000 --> 01:12:34,000
pa

2511
01:12:34,000 --> 01:12:35,000
对

2512
01:12:35,000 --> 01:12:35,000
p-a-a-m

2513
01:12:35,000 --> 01:12:37,000
a-y-i-m

2514
01:12:37,000 --> 01:12:39,000
然后空格

2515
01:12:39,000 --> 01:12:39,000
对

2516
01:12:39,000 --> 01:12:42,000
nekudotayin

2517
01:12:53,000 --> 01:12:53,000
对

2518
01:12:53,000 --> 01:12:56,000
然后这个东西是希波莱语的

2519
01:12:57,000 --> 01:12:58,000
两个

2520
01:12:59,000 --> 01:13:00,000
两个冒号的

2521
01:13:00,000 --> 01:13:01,000
希波莱语的四饼

2522
01:13:01,000 --> 01:13:02,000
没错

2523
01:13:02,000 --> 01:13:04,000
为什么会是希波莱语

2524
01:13:04,000 --> 01:13:06,000
那个谁是希波莱语人吗

2525
01:13:06,000 --> 01:13:07,000
对

2526
01:13:07,000 --> 01:13:08,000
谁

2527
01:13:09,000 --> 01:13:10,000
那个发明者叫什么

2528
01:13:12,000 --> 01:13:13,000
作者是希波莱语

2529
01:13:13,000 --> 01:13:14,000
犹太人

2530
01:13:14,000 --> 01:13:14,000
作者是犹太人

2531
01:13:14,000 --> 01:13:15,000
对

2532
01:13:15,000 --> 01:13:16,000
OK

2533
01:13:16,000 --> 01:13:16,000
对

2534
01:13:16,000 --> 01:13:17,000
然后这个东西

2535
01:13:17,000 --> 01:13:19,000
学名叫 Scope Resolution Operator

2536
01:13:19,000 --> 01:13:21,000
其实跟 CZN 是一样的

2537
01:13:22,000 --> 01:13:24,000
所以我们做一个中文版本

2538
01:13:24,000 --> 01:13:27,000
我们要 t si 写杠 bin 这个错误

2539
01:13:28,000 --> 01:13:29,000
四饼错误

2540
01:13:31,000 --> 01:13:32,000
没错

2541
01:13:34,000 --> 01:13:35,000
好了不扯它

2542
01:13:36,000 --> 01:13:37,000
我们赶紧翻篇吧

2543
01:13:39,000 --> 01:13:40,000
好翻篇

2544
01:13:40,000 --> 01:13:42,000
翻篇是那个 Parse

2545
01:13:42,000 --> 01:13:44,000
是一个

2546
01:13:45,000 --> 01:13:48,000
移动应用的后端程序服务

2547
01:13:49,000 --> 01:13:51,000
Reddit 上有一个版块叫做

2548
01:13:51,000 --> 01:13:53,000
Explain things like

2549
01:13:53,000 --> 01:13:55,000
As I am 5 years old

2550
01:13:55,000 --> 01:13:55,000
那是

2551
01:13:56,000 --> 01:13:58,000
假设我只有 5 岁

2552
01:13:58,000 --> 01:14:00,000
然后请用 5 岁小孩能懂的语言

2553
01:14:00,000 --> 01:14:02,000
来给我解释这是什么东西

2554
01:14:03,000 --> 01:14:03,000
我放弃了

2555
01:14:03,000 --> 01:14:04,000
你来解释

2556
01:14:06,000 --> 01:14:08,000
Parse 是个

2557
01:14:09,000 --> 01:14:10,000
怎么说呢

2558
01:14:10,000 --> 01:14:10,000
就是

2559
01:14:14,000 --> 01:14:16,000
你在写一个移动应用的时候

2560
01:14:16,000 --> 01:14:17,000
你会有这样的一个需求

2561
01:14:17,000 --> 01:14:18,000
就是你会需要说

2562
01:14:18,000 --> 01:14:19,000
我需要给

2563
01:14:20,000 --> 01:14:22,000
我需要有一台在网上的服务器

2564
01:14:22,000 --> 01:14:22,000
给

2565
01:14:24,000 --> 01:14:27,000
我的用户发送 Push Notification

2566
01:14:27,000 --> 01:14:27,000
对

2567
01:14:27,000 --> 01:14:28,000
这个词是它其中一个功能

2568
01:14:28,000 --> 01:14:30,000
它有很多其他功能

2569
01:14:30,000 --> 01:14:31,000
比如说

2570
01:14:31,000 --> 01:14:33,000
存那个用户数据

2571
01:14:33,000 --> 01:14:33,000
对

2572
01:14:33,000 --> 01:14:34,000
然后与此同时

2573
01:14:34,000 --> 01:14:36,000
我还需要把用户的一些

2574
01:14:37,000 --> 01:14:38,000
传上来的数据

2575
01:14:38,000 --> 01:14:39,000
存在某一个特色的地方

2576
01:14:39,000 --> 01:14:41,000
然后所有这些我

2577
01:14:42,000 --> 01:14:43,000
比较传统或者比较

2578
01:14:46,000 --> 01:14:48,000
正常的实现方式

2579
01:14:48,000 --> 01:14:49,000
是我自己去买一台服务器

2580
01:14:49,000 --> 01:14:51,000
然后自己在这个服务器上

2581
01:14:51,000 --> 01:14:52,000
写一些

2582
01:14:52,000 --> 01:14:54,000
提供完成这些功能的程序

2583
01:14:54,000 --> 01:14:55,000
对吧

2584
01:14:55,000 --> 01:14:56,000
所谓的服务端

2585
01:14:57,000 --> 01:14:57,000
对

2586
01:14:57,000 --> 01:14:58,000
然后 Parse 这个东西

2587
01:14:58,000 --> 01:14:59,000
就是把这一块

2588
01:14:59,000 --> 01:15:01,000
给你做成一个服务了

2589
01:15:03,000 --> 01:15:04,000
可能之前你

2590
01:15:04,000 --> 01:15:06,000
用烤披萨来打比方

2591
01:15:06,000 --> 01:15:07,000
你可能之前需要去自己和面

2592
01:15:07,000 --> 01:15:10,000
自己去弄烤炉什么的

2593
01:15:10,000 --> 01:15:12,000
然后 Parse 这个东西

2594
01:15:12,000 --> 01:15:13,000
就是披萨

2595
01:15:13,000 --> 01:15:14,000
披萨店

2596
01:15:14,000 --> 01:15:14,000
对吧

2597
01:15:14,000 --> 01:15:15,000
你只说进去

2598
01:15:15,000 --> 01:15:16,000
然后就拿披萨出来就对了

2599
01:15:17,000 --> 01:15:18,000
然后披萨就是一个

2600
01:15:18,000 --> 01:15:20,000
专门给用户用的一个服务

2601
01:15:21,000 --> 01:15:21,000
对

2602
01:15:21,000 --> 01:15:22,000
对

2603
01:15:24,000 --> 01:15:24,000
它怎么了

2604
01:15:25,000 --> 01:15:26,000
它之前是一个独立的服务

2605
01:15:27,000 --> 01:15:27,000
很多人用它觉得

2606
01:15:27,000 --> 01:15:28,000
就很多那个前段

2607
01:15:28,000 --> 01:15:30,000
那个应用开发者

2608
01:15:30,000 --> 01:15:31,000
他不具备这个

2609
01:15:32,000 --> 01:15:33,000
或者不想去自己维护一套

2610
01:15:33,000 --> 01:15:34,000
后端

2611
01:15:34,000 --> 01:15:35,000
因为挺麻烦的对吧

2612
01:15:35,000 --> 01:15:36,000
你要考虑什么扣转性

2613
01:15:36,000 --> 01:15:38,000
稳定性维护的问题

2614
01:15:38,000 --> 01:15:40,000
你就怎么两个人的小作坊

2615
01:15:40,000 --> 01:15:41,000
你写一个前段

2616
01:15:41,000 --> 01:15:42,000
也有已经够哭哈哈的

2617
01:15:42,000 --> 01:15:42,000
你还要再去

2618
01:15:42,000 --> 01:15:43,000
自己维护后端

2619
01:15:43,000 --> 01:15:44,000
就很想死

2620
01:15:45,000 --> 01:15:46,000
就找这么一个

2621
01:15:46,000 --> 01:15:49,000
劳心又伤害钱包的

2622
01:15:49,000 --> 01:15:50,000
对

2623
01:15:50,000 --> 01:15:51,000
所以就有这么一个

2624
01:15:51,000 --> 01:15:52,000
第三方的服务把说

2625
01:15:52,000 --> 01:15:53,000
我帮你的后端搞定

2626
01:15:53,000 --> 01:15:54,000
我提供一个

2627
01:15:54,000 --> 01:15:56,000
同一个 API 的接口

2628
01:15:56,000 --> 01:15:57,000
你直接发问就可以了

2629
01:15:57,000 --> 01:15:57,000
对吧

2630
01:15:57,000 --> 01:15:59,000
那国内也有人在做这个事情的

2631
01:15:59,000 --> 01:16:00,000
然后待会再说

2632
01:16:01,000 --> 01:16:02,000
然后后来这个服务

2633
01:16:02,000 --> 01:16:03,000
被 Facebook 买了

2634
01:16:04,000 --> 01:16:06,000
就这个团队被 Facebook 收购了

2635
01:16:07,000 --> 01:16:10,000
然后最近 Facebook 决定把他关掉

2636
01:16:11,000 --> 01:16:12,000
然后他们就关门了

2637
01:16:12,000 --> 01:16:14,000
还没有吧

2638
01:16:14,000 --> 01:16:15,000
应该是到几月

2639
01:16:15,000 --> 01:16:16,000
就是今年还要

2640
01:16:16,000 --> 01:16:17,000
他们就宣布自己要关门了

2641
01:16:18,000 --> 01:16:18,000
对

2642
01:16:19,000 --> 01:16:21,000
因为这个不是核心应用嘛

2643
01:16:21,000 --> 01:16:21,000
毕竟

2644
01:16:23,000 --> 01:16:24,000
然后很多

2645
01:16:24,000 --> 01:16:24,000
这就是为什么

2646
01:16:24,000 --> 01:16:26,000
不要把自己的公司卖给 Facebook

2647
01:16:27,000 --> 01:16:29,000
对这个公司肯定是赚到了

2648
01:16:30,000 --> 01:16:32,000
从那个财务上来讲

2649
01:16:32,000 --> 01:16:33,000
还是出路来讲都是好的

2650
01:16:33,000 --> 01:16:36,000
但是对那些用了这个 PaaS 服务的

2651
01:16:37,000 --> 01:16:39,000
这些应用开发者来说就比较苦逼了

2652
01:16:40,000 --> 01:16:41,000
好吧

2653
01:16:41,000 --> 01:16:41,000
这换一个说法

2654
01:16:41,000 --> 01:16:43,000
这就是为什么你不应该

2655
01:16:43,000 --> 01:16:45,000
就这就是为什么开发者

2656
01:16:45,000 --> 01:16:47,000
不希望看到自己使用的服务

2657
01:16:47,000 --> 01:16:48,000
被卖给他的大公司

2658
01:16:49,000 --> 01:16:49,000
对

2659
01:16:49,000 --> 01:16:50,000
不要卖给任何大公司

2660
01:16:51,000 --> 01:16:52,000
Facebook、Google 都不要卖

2661
01:16:53,000 --> 01:16:53,000
明白了

2662
01:16:53,000 --> 01:16:54,000
基本上正常情况

2663
01:16:54,000 --> 01:16:56,000
一年就交到别人手里了

2664
01:16:56,000 --> 01:16:57,000
正常情况

2665
01:16:57,000 --> 01:16:59,000
两年真的就用不了了

2666
01:16:59,000 --> 01:16:59,000
对

2667
01:17:00,000 --> 01:17:03,000
其实这个点回到一个事儿

2668
01:17:03,000 --> 01:17:03,000
就是说

2669
01:17:04,000 --> 01:17:05,000
这怎么 PaaS 这个算是

2670
01:17:05,000 --> 01:17:06,000
怎么说

2671
01:17:06,000 --> 01:17:07,000
算是一个

2672
01:17:07,000 --> 01:17:09,000
算是一个 Software 的 Service

2673
01:17:09,000 --> 01:17:10,000
它是一个 SaaS

2674
01:17:10,000 --> 01:17:10,000
对吧

2675
01:17:10,000 --> 01:17:12,000
对于这个应用开发者来讲

2676
01:17:12,000 --> 01:17:15,000
因为过去你要可能要搭

2677
01:17:15,000 --> 01:17:16,000
你去租那个公用云

2678
01:17:16,000 --> 01:17:18,000
你算是租一个 Ice 的平台

2679
01:17:18,000 --> 01:17:19,000
然后自己搭一套东西

2680
01:17:20,000 --> 01:17:21,000
或者说你用这个

2681
01:17:21,000 --> 01:17:22,000
它算是 PaaS

2682
01:17:22,000 --> 01:17:23,000
Planformer Service

2683
01:17:25,000 --> 01:17:26,000
或者说你是租那个像那个

2684
01:17:26,000 --> 01:17:28,000
其实之前也很火的那个

2685
01:17:28,000 --> 01:17:29,000
就是 App Engine

2686
01:17:29,000 --> 01:17:30,000
就是 Google 出的 App Engine

2687
01:17:31,000 --> 01:17:32,000
国内不是有一大堆在

2688
01:17:32,000 --> 01:17:33,000
在模仿的吗

2689
01:17:33,000 --> 01:17:35,000
什么什么新浪的 App Engine

2690
01:17:36,000 --> 01:17:37,000
什么美团

2691
01:17:37,000 --> 01:17:38,000
也在搞这个

2692
01:17:38,000 --> 01:17:39,000
我也不知道为什么

2693
01:17:39,000 --> 01:17:41,000
还有什么腾讯

2694
01:17:42,000 --> 01:17:42,000
都在

2695
01:17:43,000 --> 01:17:44,000
还有那个都在做这方面的

2696
01:17:44,000 --> 01:17:45,000
还有阿里

2697
01:17:45,000 --> 01:17:46,000
现在阿里也在做这个事情

2698
01:17:46,000 --> 01:17:48,000
就是你用这些

2699
01:17:48,000 --> 01:17:49,000
第三方的 PaaS 的时候

2700
01:17:49,000 --> 01:17:50,000
都会形成一种

2701
01:17:51,000 --> 01:17:51,000
绑定关系

2702
01:17:51,000 --> 01:17:52,000
对吧

2703
01:17:52,000 --> 01:17:53,000
你那个接口就能

2704
01:17:53,000 --> 01:17:54,000
如果它

2705
01:17:54,000 --> 01:17:56,000
它那个接口或者它那个功能

2706
01:17:56,000 --> 01:17:58,000
别家没有提供的

2707
01:17:58,000 --> 01:17:59,000
以后你就不能迁移

2708
01:17:59,000 --> 01:18:00,000
或者不能很方便的迁移

2709
01:18:00,000 --> 01:18:01,000
但是说

2710
01:18:02,000 --> 01:18:03,000
如果你自己搭的话

2711
01:18:03,000 --> 01:18:04,000
就不存在这个问题

2712
01:18:04,000 --> 01:18:05,000
因为那个 Ice 层

2713
01:18:05,000 --> 01:18:06,000
那个服务器它都一样

2714
01:18:06,000 --> 01:18:06,000
对吧

2715
01:18:06,000 --> 01:18:07,000
都是跑的一个

2716
01:18:07,000 --> 01:18:08,000
那个是发行板

2717
01:18:08,000 --> 01:18:09,000
然后你自己装

2718
01:18:09,000 --> 01:18:10,000
什么 GX 啊

2719
01:18:10,000 --> 01:18:11,000
你自己写

2720
01:18:11,000 --> 01:18:12,000
Code 啊

2721
01:18:12,000 --> 01:18:13,000
就那些是一个标准的

2722
01:18:13,000 --> 01:18:14,000
但是 PaaS 很多都是一个

2723
01:18:14,000 --> 01:18:15,000
非标准的

2724
01:18:15,000 --> 01:18:16,000
的东西嘛

2725
01:18:16,000 --> 01:18:18,000
然后这个时候你作为一个

2726
01:18:18,000 --> 01:18:19,000
这个开发者

2727
01:18:19,000 --> 01:18:21,000
你就要在这两个之前

2728
01:18:21,000 --> 01:18:22,000
做一个艰难的选择

2729
01:18:22,000 --> 01:18:24,000
就是说想省时间

2730
01:18:24,000 --> 01:18:25,000
然后省事

2731
01:18:25,000 --> 01:18:27,000
去用一个非标准的东西

2732
01:18:27,000 --> 01:18:28,000
以后跟男生迁移呢

2733
01:18:28,000 --> 01:18:29,000
还是说你从头的

2734
01:18:29,000 --> 01:18:30,000
从开始就说我以后

2735
01:18:30,000 --> 01:18:31,000
就为了我的这个

2736
01:18:31,000 --> 01:18:33,000
这个自己的独立安全着想

2737
01:18:33,000 --> 01:18:36,000
我要选择一个很标准的

2738
01:18:36,000 --> 01:18:37,000
就是很多时候就是 Ice

2739
01:18:37,000 --> 01:18:38,000
然后自己在协服端

2740
01:18:38,000 --> 01:18:39,000
然后自己去维护

2741
01:18:40,000 --> 01:18:41,000
这么一个两难的选择

2742
01:18:41,000 --> 01:18:42,000
嗯

2743
01:18:43,000 --> 01:18:45,000
就其实我觉得没有那么

2744
01:18:46,000 --> 01:18:46,000
呃

2745
01:18:47,000 --> 01:18:48,000
那么那么容易这个选择

2746
01:18:48,000 --> 01:18:49,000
因为很多

2747
01:18:49,000 --> 01:18:50,000
就不同的这个资源

2748
01:18:50,000 --> 01:18:51,000
约束情况下不一样

2749
01:18:51,000 --> 01:18:52,000
有些是说你

2750
01:18:52,000 --> 01:18:53,000
你不差钱对吧

2751
01:18:53,000 --> 01:18:54,000
你你差的是时间

2752
01:18:54,000 --> 01:18:55,000
那你可能说呢

2753
01:18:55,000 --> 01:18:56,000
我用一些第三贯付

2754
01:18:56,000 --> 01:18:57,000
能够尽快虽然可能贵一点

2755
01:18:57,000 --> 01:18:59,000
以后签起来可能麻烦一点

2756
01:18:59,000 --> 01:19:00,000
但是我现在能够

2757
01:19:00,000 --> 01:19:02,000
呃很快速的把我这应用上线

2758
01:19:02,000 --> 01:19:04,000
验证我这个市场到底行不行

2759
01:19:04,000 --> 01:19:05,000
如果不行

2760
01:19:05,000 --> 01:19:06,000
我就赶快转型做别的了

2761
01:19:06,000 --> 01:19:06,000
对吧

2762
01:19:07,000 --> 01:19:08,000
但又就是说你是

2763
01:19:09,000 --> 01:19:10,000
觉得这个我以后

2764
01:19:10,000 --> 01:19:12,000
可能要签的可能性很大

2765
01:19:12,000 --> 01:19:13,000
我这个要一定要

2766
01:19:13,000 --> 01:19:14,000
要保持自己的独立

2767
01:19:14,000 --> 01:19:15,000
不要被某一个运营商

2768
01:19:15,000 --> 01:19:17,000
那个服务商锁死

2769
01:19:17,000 --> 01:19:19,000
那你可能就要开始就要去

2770
01:19:19,000 --> 01:19:20,000
考虑这些服务的问题

2771
01:19:20,000 --> 01:19:21,000
但是呢

2772
01:19:21,000 --> 01:19:22,000
就会耽搁你的这个

2773
01:19:22,000 --> 01:19:23,000
产品的开发进度对吧

2774
01:19:23,000 --> 01:19:25,000
你可能本来就人手有限的情况下

2775
01:19:25,000 --> 01:19:27,000
你还得分时间分精力

2776
01:19:28,000 --> 01:19:29,000
去开发这个服务端

2777
01:19:29,000 --> 01:19:31,000
还要自己去维护

2778
01:19:31,000 --> 01:19:33,000
还要去考虑这种扩展的问题

2779
01:19:33,000 --> 01:19:33,000
对吧

2780
01:19:33,000 --> 01:19:34,000
所以对

2781
01:19:34,000 --> 01:19:37,000
所以我觉得很多人说这个

2782
01:19:37,000 --> 01:19:38,000
就不要用这种第三贯付

2783
01:19:38,000 --> 01:19:39,000
我觉得也不是一个

2784
01:19:40,000 --> 01:19:42,000
不是一个负责任的一个一个

2785
01:19:43,000 --> 01:19:43,000
一个说法吧

2786
01:19:43,000 --> 01:19:45,000
就是你还是要分起共讨论吧

2787
01:19:45,000 --> 01:19:46,000
其实就跟对对对

2788
01:19:46,000 --> 01:19:48,000
对其实就跟怎么说过日子

2789
01:19:48,000 --> 01:19:49,000
你要一个人的话

2790
01:19:49,000 --> 01:19:50,000
你可能每天下管子

2791
01:19:50,000 --> 01:19:51,000
无所无所为

2792
01:19:51,000 --> 01:19:52,000
但是如果你有七八口人的话

2793
01:19:52,000 --> 01:19:54,000
那可能还是每天自己在家里

2794
01:19:54,000 --> 01:19:55,000
给大家做饭

2795
01:19:55,000 --> 01:19:57,000
比较就专门有人来做饭

2796
01:19:57,000 --> 01:19:58,000
或者人家给我饭来

2797
01:19:58,000 --> 01:19:59,000
来要来的经济一点

2798
01:19:59,000 --> 01:20:00,000
对

2799
01:20:00,000 --> 01:20:01,000
就还是一个体量的问题

2800
01:20:01,000 --> 01:20:03,000
就是你你在乎的什么点

2801
01:20:03,000 --> 01:20:03,000
当然了

2802
01:20:03,000 --> 01:20:05,000
这个就是说

2803
01:20:06,000 --> 01:20:08,000
答案并非那么显然

2804
01:20:08,000 --> 01:20:08,000
不过

2805
01:20:09,000 --> 01:20:10,000
一个很显然的问题就是

2806
01:20:10,000 --> 01:20:13,000
现在那些用了 Parse 的服务

2807
01:20:13,000 --> 01:20:13,000
那些应用

2808
01:20:13,000 --> 01:20:16,000
但是又没有人在继续维护的那些应用

2809
01:20:16,000 --> 01:20:17,000
一旦 Parse 停掉的话

2810
01:20:17,000 --> 01:20:19,000
那些应用就基本上就死掉了

2811
01:20:19,000 --> 01:20:20,000
就没办法再用了

2812
01:20:20,000 --> 01:20:21,000
然后

2813
01:20:21,000 --> 01:20:22,000
据我了解

2814
01:20:22,000 --> 01:20:26,000
像 App Store 里面的管理政策

2815
01:20:26,000 --> 01:20:27,000
就是你一旦

2816
01:20:27,000 --> 01:20:28,000
比如说你作为开发者

2817
01:20:28,000 --> 01:20:30,000
你一旦上了一个应用之后

2818
01:20:30,000 --> 01:20:32,000
你不去管他会怎么样

2819
01:20:34,000 --> 01:20:35,000
比如我不会把你下架对吧

2820
01:20:35,000 --> 01:20:38,000
好像是只要你的用户

2821
01:20:38,000 --> 01:20:39,000
只要你的 Developer

2822
01:20:40,000 --> 01:20:41,000
就你的开发者每天接着交换

2823
01:20:41,000 --> 01:20:42,000
100 刀

2824
01:20:42,000 --> 01:20:43,000
开发者身份还在

2825
01:20:43,000 --> 01:20:44,000
他就不会被下架

2826
01:20:44,000 --> 01:20:46,000
除非他和

2827
01:20:46,000 --> 01:20:48,000
就是他里面已经

2828
01:20:48,000 --> 01:20:50,000
他已经不能在新版的 IOS 上跑

2829
01:20:50,000 --> 01:20:53,000
但是这种基于服务端挂掉了

2830
01:20:53,000 --> 01:20:54,000
然后肯定应用端还是可以

2831
01:20:54,000 --> 01:20:55,000
就不受影响的

2832
01:20:56,000 --> 01:20:56,000
不一定

2833
01:20:58,000 --> 01:20:59,000
大部分来说是应该是不受影响的

2834
01:21:00,000 --> 01:21:01,000
他还是可以

2835
01:21:01,000 --> 01:21:02,000
那个应用本身可以运行的

2836
01:21:02,000 --> 01:21:04,000
就在 IOS 上是可以运行

2837
01:21:04,000 --> 01:21:05,000
但是只是因为服务端

2838
01:21:05,000 --> 01:21:06,000
所以应用变成了一个

2839
01:21:08,000 --> 01:21:08,000
鸡肋了

2840
01:21:08,000 --> 01:21:08,000
没有用了

2841
01:21:08,000 --> 01:21:09,000
壳子对

2842
01:21:10,000 --> 01:21:11,000
所以我就在想

2843
01:21:12,000 --> 01:21:12,000
我们怎么

2844
01:21:12,000 --> 01:21:15,000
就比如我不是老是喜欢吹嘘他

2845
01:21:15,000 --> 01:21:17,000
自己的应用上里面有多少的

2846
01:21:17,000 --> 01:21:19,000
几百万几千万的应用对吧

2847
01:21:19,000 --> 01:21:20,000
高质量的应用主要是

2848
01:21:21,000 --> 01:21:22,000
重点是高质量的

2849
01:21:22,000 --> 01:21:24,000
他说总数的时候

2850
01:21:24,000 --> 01:21:25,000
他没有说有高质量的

2851
01:21:25,000 --> 01:21:26,000
OK 好吧

2852
01:21:26,000 --> 01:21:26,000
对

2853
01:21:27,000 --> 01:21:27,000
但是

2854
01:21:28,000 --> 01:21:29,000
我就在想

2855
01:21:29,000 --> 01:21:30,000
其实里面很多都是这种

2856
01:21:30,000 --> 01:21:31,000
所谓的这种垃圾应用

2857
01:21:31,000 --> 01:21:33,000
就没有办法在那个了

2858
01:21:33,000 --> 01:21:35,000
这个时候怎么办呢

2859
01:21:36,000 --> 01:21:37,000
还站到一个坑位

2860
01:21:38,000 --> 01:21:38,000
没错

2861
01:21:39,000 --> 01:21:40,000
所以就是一个比较

2862
01:21:40,000 --> 01:21:41,000
其实我觉得

2863
01:21:41,000 --> 01:21:42,000
App Store 还是有一种

2864
01:21:42,000 --> 01:21:42,000
应该有一种那种

2865
01:21:42,000 --> 01:21:44,000
因为你审核的时候

2866
01:21:44,000 --> 01:21:47,000
你其实是要去验证服务能不能用

2867
01:21:47,000 --> 01:21:48,000
那个审核语言

2868
01:21:48,000 --> 01:21:49,000
但是我就说

2869
01:21:49,000 --> 01:21:50,000
那是不是可以说

2870
01:21:50,000 --> 01:21:53,000
你这个应用每隔一年要 review 一下

2871
01:21:53,000 --> 01:21:55,000
看他到底还能不能用

2872
01:21:55,000 --> 01:21:56,000
如果没有用那种僵尸应用

2873
01:21:56,000 --> 01:21:57,000
是不是就可以该

2874
01:21:57,000 --> 01:21:59,000
吓掉就吓掉了

2875
01:21:59,000 --> 01:22:00,000
然后把那个名字

2876
01:22:00,000 --> 01:22:02,000
那个位置空出来让别人接着用

2877
01:22:02,000 --> 01:22:03,000
还是怎么样

2878
01:22:04,000 --> 01:22:06,000
主要是个测试比较困难

2879
01:22:08,000 --> 01:22:09,000
不就是他测试困难

2880
01:22:09,000 --> 01:22:10,000
倒不是困难

2881
01:22:10,000 --> 01:22:11,000
就是审核这个机制已经有现成了

2882
01:22:11,000 --> 01:22:13,000
只是说成本的问题对吧

2883
01:22:13,000 --> 01:22:14,000
你本来现场就忙不过来了

2884
01:22:14,000 --> 01:22:15,000
我说的就是这个

2885
01:22:15,000 --> 01:22:17,000
就是你不可能说以每一个应用

2886
01:22:17,000 --> 01:22:19,000
每隔一段时间都要让审核员

2887
01:22:19,000 --> 01:22:20,000
自己手动去点一遍

2888
01:22:21,000 --> 01:22:22,000
三年省一下可不可以

2889
01:22:23,000 --> 01:22:24,000
我觉得这个应该是用

2890
01:22:24,000 --> 01:22:26,000
用户可以直接反馈

2891
01:22:26,000 --> 01:22:28,000
就最好能有一个比较简单的反馈功能

2892
01:22:28,000 --> 01:22:30,000
然后用户发现说这个应用不能用了

2893
01:22:30,000 --> 01:22:31,000
反应一下

2894
01:22:31,000 --> 01:22:31,000
对

2895
01:22:31,000 --> 01:22:32,000
然后就等

2896
01:22:32,000 --> 01:22:33,000
然后那边就直接挂起来

2897
01:22:34,000 --> 01:22:34,000
就那个什么

2898
01:22:34,000 --> 01:22:36,000
这个苹果给开发者提一个

2899
01:22:36,000 --> 01:22:38,000
提一个这个通知

2900
01:22:38,000 --> 01:22:40,000
说你最好在什么半年之内

2901
01:22:40,000 --> 01:22:41,000
是解决这个问题

2902
01:22:41,000 --> 01:22:42,000
不然就下了

2903
01:22:43,000 --> 01:22:43,000
对

2904
01:22:44,000 --> 01:22:45,000
这是一个比较好的方法

2905
01:22:45,000 --> 01:22:47,000
而且其实这个这个

2906
01:22:47,000 --> 01:22:50,000
这个问题并不仅仅是对于

2907
01:22:50,000 --> 01:22:53,000
使用 PaaS 这样的服务的应用存在

2908
01:22:53,000 --> 01:22:54,000
可能有些服务

2909
01:22:54,000 --> 01:22:56,000
它是使用一个自己搭建的后代服务器

2910
01:22:56,000 --> 01:22:57,000
但是这个后代服务器也就没了

2911
01:22:57,000 --> 01:22:58,000
公司倒闭

2912
01:22:59,000 --> 01:22:59,000
对吧

2913
01:22:59,000 --> 01:23:01,000
它也就那样了

2914
01:23:01,000 --> 01:23:01,000
对

2915
01:23:03,000 --> 01:23:03,000
对

2916
01:23:03,000 --> 01:23:05,000
所以这其实是一个

2917
01:23:06,000 --> 01:23:07,000
这个是个管理问题

2918
01:23:07,000 --> 01:23:07,000
我觉得

2919
01:23:08,000 --> 01:23:08,000
对

2920
01:23:08,000 --> 01:23:10,000
但是需要去那些这些应用商店的

2921
01:23:11,000 --> 01:23:13,000
管理者就需要去把它解决好

2922
01:23:13,000 --> 01:23:16,000
然后给一个用户相对来说干净的

2923
01:23:16,000 --> 01:23:17,000
但是这样的话

2924
01:23:17,000 --> 01:23:17,000
他就不能去

2925
01:23:18,000 --> 01:23:19,000
去 Boss 的

2926
01:23:19,000 --> 01:23:20,000
就不能去吹噓他的那个应用商

2927
01:23:20,000 --> 01:23:21,000
那边应用数量的

2928
01:23:21,000 --> 01:23:22,000
因为你看

2929
01:23:22,000 --> 01:23:23,000
可能如果真的这么一干

2930
01:23:23,000 --> 01:23:25,000
发现一大半都已经没有了

2931
01:23:26,000 --> 01:23:26,000
嗯

2932
01:23:27,000 --> 01:23:28,000
数量毕竟怎么说呢

2933
01:23:28,000 --> 01:23:30,000
就是你分母足够大

2934
01:23:30,000 --> 01:23:31,000
那分子就是你

2935
01:23:31,000 --> 01:23:33,000
你基数在那呢

2936
01:23:33,000 --> 01:23:34,000
那你可能

2937
01:23:34,000 --> 01:23:37,000
存活下来的好应用的概率就比较高嘛

2938
01:23:37,000 --> 01:23:38,000
所以基数还是有意义的

2939
01:23:39,000 --> 01:23:39,000
嗯

2940
01:23:40,000 --> 01:23:41,000
可以给

2941
01:23:42,000 --> 01:23:44,000
什么苹果提个这个建议是吧

2942
01:23:44,000 --> 01:23:44,000
对

2943
01:23:45,000 --> 01:23:46,000
嗯

2944
01:23:46,000 --> 01:23:46,000
对

2945
01:23:46,000 --> 01:23:48,000
PaaS 这件事情有一道好处就是

2946
01:23:48,000 --> 01:23:51,000
他在关门之前还是给了一个

2947
01:23:52,000 --> 01:23:54,000
给你给了你一个善后方案

2948
01:23:54,000 --> 01:23:56,000
就是你自己去弄一个服务器

2949
01:23:56,000 --> 01:23:58,000
然后把他的那个

2950
01:23:58,000 --> 01:24:00,000
这一套东西跑到你的服务器上

2951
01:24:00,000 --> 01:24:02,000
然后可以用比较小的成本

2952
01:24:02,000 --> 01:24:03,000
来迁移

2953
01:24:04,000 --> 01:24:06,000
因为之前 PaaS 的那个接口做的还是不错的

2954
01:24:06,000 --> 01:24:09,000
就是基本上没有什么太

2955
01:24:09,000 --> 01:24:12,000
跟 PaaS 本身相依赖的东西

2956
01:24:12,000 --> 01:24:15,000
所以就是基本上你最理想的情况下

2957
01:24:15,000 --> 01:24:16,000
你只要在自己的

2958
01:24:16,000 --> 01:24:18,000
前端换一个那个服务器的

2959
01:24:19,000 --> 01:24:19,000
地址

2960
01:24:19,000 --> 01:24:22,000
然后整个也就迁移过去

2961
01:24:22,000 --> 01:24:24,000
等于自己在自己的服务器上

2962
01:24:24,000 --> 01:24:26,000
serve 了一个 PaaS 的那个 app

2963
01:24:27,000 --> 01:24:30,000
然后专门用来服务你的这个

2964
01:24:32,000 --> 01:24:32,000
对

2965
01:24:33,000 --> 01:24:34,000
他们那个这个他们叫做

2966
01:24:34,000 --> 01:24:35,000
呃

2967
01:24:35,000 --> 01:24:37,000
PaaS open source server 吧

2968
01:24:37,000 --> 01:24:38,000
就是 PaaS 的开源服务器

2969
01:24:39,000 --> 01:24:40,000
然后他是用那个勾写的

2970
01:24:40,000 --> 01:24:42,000
然后就还部署起来一枪

2971
01:24:42,000 --> 01:24:44,000
还挺我看了一下还挺简单的

2972
01:24:44,000 --> 01:24:47,000
反正就是一个 Binary 丢上去

2973
01:24:47,000 --> 01:24:47,000
what

2974
01:24:48,000 --> 01:24:50,000
PaaS server 是 Java script 写的吧

2975
01:24:50,000 --> 01:24:51,000
不是吗

2976
01:24:51,000 --> 01:24:52,000
不是

2977
01:24:52,000 --> 01:24:53,000
PaaS 这个 open source server 是勾写的

2978
01:24:55,000 --> 01:24:56,000
OK

2979
01:24:56,000 --> 01:24:59,000
然后他你在搭上什么 MySQL

2980
01:24:59,000 --> 01:25:00,000
然后那个 Maredis 之后

2981
01:25:00,000 --> 01:25:01,000
反正也凑合能用嘛

2982
01:25:01,000 --> 01:25:03,000
能够让你在弄

2983
01:25:03,000 --> 01:25:05,000
但就没有那些 PaaS 的

2984
01:25:05,000 --> 01:25:06,000
比如说自动伸缩啊

2985
01:25:06,000 --> 01:25:09,000
然后那个就是有人帮你维护啊

2986
01:25:09,000 --> 01:25:10,000
这种事情你就自己解决啊

2987
01:25:11,000 --> 01:25:12,000
OK

2988
01:25:12,000 --> 01:25:13,000
所以

2989
01:25:14,000 --> 01:25:15,000
就并不是那么美好

2990
01:25:15,000 --> 01:25:16,000
但是至少给了你一条出路

2991
01:25:16,000 --> 01:25:18,000
不像有些服务关了就关了

2992
01:25:18,000 --> 01:25:19,000
你也没什么

2993
01:25:19,000 --> 01:25:21,000
没给你什么替代的方案

2994
01:25:22,000 --> 01:25:23,000
你只能在那边哭诉什么

2995
01:25:23,000 --> 01:25:25,000
老板黄鹤不是这样的是吧

2996
01:25:25,000 --> 01:25:28,000
那怎么老板怎么捐款跑了

2997
01:25:28,000 --> 01:25:29,000
他不管我们

2998
01:25:29,000 --> 01:25:30,000
清仓大帅

2999
01:25:31,000 --> 01:25:31,000
对

3000
01:25:32,000 --> 01:25:32,000
好吧

3001
01:25:32,000 --> 01:25:34,000
那个 PaaS 那个时候就讲到这

3002
01:25:34,000 --> 01:25:36,000
还有一个事儿是

3003
01:25:36,000 --> 01:25:37,000
也是一个程序员

3004
01:25:37,000 --> 01:25:38,000
我们常用的一个东西啊

3005
01:25:39,000 --> 01:25:40,000
GitHub 最近又怎么了

3006
01:25:40,000 --> 01:25:41,000
这是一个

3007
01:25:42,000 --> 01:25:43,000
隐忧啊

3008
01:25:43,000 --> 01:25:43,000
悲伤的故事

3009
01:25:43,000 --> 01:25:45,000
悲伤的故事

3010
01:25:45,000 --> 01:25:46,000
他不是一个怎么说呢

3011
01:25:46,000 --> 01:25:47,000
悲伤也没有

3012
01:25:47,000 --> 01:25:49,000
但是他会让你觉得

3013
01:25:49,000 --> 01:25:50,000
呃

3014
01:25:51,000 --> 01:25:54,000
记就是怎么说有一个非常

3015
01:25:54,000 --> 01:25:56,000
中文里面有个非常经典的

3016
01:25:56,000 --> 01:25:57,000
Expression

3017
01:25:59,000 --> 01:25:59,000
叫什么

3018
01:25:59,000 --> 01:26:02,000
Anyway 就是类似就是你被别人牵着走

3019
01:26:02,000 --> 01:26:04,000
或者说你把自己的身家性命

3020
01:26:04,000 --> 01:26:06,000
托付在别人身上是比较

3021
01:26:06,000 --> 01:26:07,000
呃

3022
01:26:08,000 --> 01:26:08,000
呃

3023
01:26:08,000 --> 01:26:10,000
撤走的一件事情就是

3024
01:26:10,000 --> 01:26:11,000
你你

3025
01:26:12,000 --> 01:26:13,000
就反正先说这些新闻吧

3026
01:26:13,000 --> 01:26:15,000
就是 GitHub 最近

3027
01:26:15,000 --> 01:26:16,000
有一个

3028
01:26:17,000 --> 01:26:19,000
呃管理层面的新闻就是

3029
01:26:19,000 --> 01:26:20,000
他们

3030
01:26:21,000 --> 01:26:22,000
中层管理

3031
01:26:22,000 --> 01:26:24,000
把他们的中层管理被搭建起来的

3032
01:26:24,000 --> 01:26:25,000
然后高层

3033
01:26:26,000 --> 01:26:28,000
管理人员有一部分在出逃

3034
01:26:28,000 --> 01:26:29,000
呃

3035
01:26:29,000 --> 01:26:30,000
然后底层也有很多人辞职了

3036
01:26:31,000 --> 01:26:33,000
原因就是 GitHub 因为现在体量越来越大

3037
01:26:33,000 --> 01:26:36,000
就是它它不再是一个早期那种

3038
01:26:36,000 --> 01:26:37,000
像

3039
01:26:37,000 --> 01:26:40,000
像一个西部牛仔的这么一个公司了

3040
01:26:40,000 --> 01:26:40,000
它现在已经

3041
01:26:41,000 --> 01:26:43,000
不是有几亿美元的那个

3042
01:26:43,000 --> 01:26:45,000
我再跟他说说太多了

3043
01:26:45,000 --> 01:26:48,000
就反正它应该是现在是一个身价非常高的

3044
01:26:48,000 --> 01:26:49,000
啊二 billion

3045
01:26:49,000 --> 01:26:50,000
对

3046
01:26:50,000 --> 01:26:51,000
2 billion 美元的

3047
01:26:51,000 --> 01:26:52,000
20

3048
01:26:52,000 --> 01:26:53,000
公司

3049
01:26:54,000 --> 01:26:54,000
对吧

3050
01:26:54,000 --> 01:26:55,000
然后

3051
01:26:56,000 --> 01:26:56,000
呃

3052
01:26:56,000 --> 01:26:58,000
在这种情况之下其一

3053
01:26:58,000 --> 01:27:00,000
这创始人叫什么

3054
01:27:00,000 --> 01:27:01,000
Vance Truss

3055
01:27:02,000 --> 01:27:04,000
他想要 Chris

3056
01:27:04,000 --> 01:27:06,000
Chris 他想要

3057
01:27:06,000 --> 01:27:08,000
让公司保持

3058
01:27:08,000 --> 01:27:09,000
效率

3059
01:27:09,000 --> 01:27:11,000
所以他就请了一个顾问来

3060
01:27:11,000 --> 01:27:12,000
顾问叫什么来着

3061
01:27:12,000 --> 01:27:13,000
是不是好像是个印度名字

3062
01:27:13,000 --> 01:27:15,000
然后这个顾问呃

3063
01:27:15,000 --> 01:27:18,000
就帮助他设计一套全新的管理结构

3064
01:27:18,000 --> 01:27:21,000
然后就就管理结构里面最重要的一点就是

3065
01:27:21,000 --> 01:27:22,000
引入了中层管理人员

3066
01:27:22,000 --> 01:27:24,000
我们知道 GitHub 之前是一个比较

3067
01:27:24,000 --> 01:27:27,000
所谓 flats 的一个一个管理结构

3068
01:27:27,000 --> 01:27:28,000
就是基本上大部分人都是平等的

3069
01:27:28,000 --> 01:27:29,000
你

3070
01:27:29,000 --> 01:27:30,000
汇报的话

3071
01:27:30,000 --> 01:27:32,000
你可以直接去找什么 CTO 或者是 CEO 汇报

3072
01:27:32,000 --> 01:27:33,000
对吧

3073
01:27:33,000 --> 01:27:35,000
但是现在他要引入中层管理的话

3074
01:27:35,000 --> 01:27:36,000
你就意味着现在有

3075
01:27:36,000 --> 01:27:38,000
就像一个军队一样会有指挥层级

3076
01:27:39,000 --> 01:27:41,000
然后这一点就让很多人不爽

3077
01:27:41,000 --> 01:27:42,000
呃

3078
01:27:42,000 --> 01:27:44,000
不管是原来的

3079
01:27:44,000 --> 01:27:45,000
顶层的管理员还是

3080
01:27:45,000 --> 01:27:47,000
呃管理员还是底层的开发员

3081
01:27:48,000 --> 01:27:48,000
嗯

3082
01:27:48,000 --> 01:27:49,000
呃

3083
01:27:49,000 --> 01:27:51,000
然后很多人就走了

3084
01:27:52,000 --> 01:27:55,000
其实这就是一个典型的一个什么创业公司

3085
01:27:55,000 --> 01:27:56,000
转向成熟公司

3086
01:27:57,000 --> 01:27:59,000
由那个创始人创始团队

3087
01:27:59,000 --> 01:28:02,000
转向那种成熟的这种职业经理人的

3088
01:28:03,000 --> 01:28:03,000
一个过程嘛

3089
01:28:03,000 --> 01:28:04,000
就是

3090
01:28:04,000 --> 01:28:05,000
就是青春期嘛我觉得就是

3091
01:28:05,000 --> 01:28:07,000
这基本上就是叫企业青春期嘛

3092
01:28:07,000 --> 01:28:10,000
你从一个小企业成长到一个大企业

3093
01:28:10,000 --> 01:28:13,000
然后你会发现你不得不应对一些

3094
01:28:13,000 --> 01:28:14,000
城市世界里面才有困扰

3095
01:28:14,000 --> 01:28:16,000
你倒是你以前

3096
01:28:16,000 --> 01:28:18,000
就假装这些困扰不存在

3097
01:28:19,000 --> 01:28:21,000
然后就要搞这么一套

3098
01:28:21,000 --> 01:28:21,000
对

3099
01:28:21,000 --> 01:28:24,000
但就在这个过程中很容易就是那些

3100
01:28:24,000 --> 01:28:26,000
这种这种所谓的创始

3101
01:28:26,000 --> 01:28:27,000
其实我们觉得他是一个小团队

3102
01:28:27,000 --> 01:28:29,000
还是一种有种锐气

3103
01:28:29,000 --> 01:28:32,000
但其实你会逐渐看到他不管在产品的

3104
01:28:32,000 --> 01:28:34,000
发布上面还是在公司的这个管理上面

3105
01:28:34,000 --> 01:28:35,000
都逐渐

3106
01:28:35,000 --> 01:28:36,000
就是迈入

3107
01:28:37,000 --> 01:28:38,000
中年那种

3108
01:28:38,000 --> 01:28:40,000
感觉就很多人觉得不爽

3109
01:28:40,000 --> 01:28:42,000
然后就让我们创始人团队走了

3110
01:28:42,000 --> 01:28:44,000
然后用这些核心用户也逐渐去

3111
01:28:44,000 --> 01:28:45,000
就离开了

3112
01:28:45,000 --> 01:28:47,000
前段时间还出了一个什么事

3113
01:28:47,000 --> 01:28:49,000
是有一对有一个什么公开信

3114
01:28:50,000 --> 01:28:51,000
啊公开信说是要

3115
01:28:51,000 --> 01:28:52,000
是要这个

3116
01:28:52,000 --> 01:28:55,000
那些开源的那些大的开源软件的

3117
01:28:55,000 --> 01:28:58,000
集体测出那个 github 转去别的地方

3118
01:28:58,000 --> 01:29:01,000
因为他们提出的要解决他们这种开源软件

3119
01:29:01,000 --> 01:29:04,000
因为大开源软件和管理方式和那种小公司的

3120
01:29:04,000 --> 01:29:05,000
那种私有代码还是不一样的

3121
01:29:05,000 --> 01:29:06,000
对吧

3122
01:29:06,000 --> 01:29:07,000
包括这种在 issue

3123
01:29:07,000 --> 01:29:09,000
tk 上面的管理上都不一样

3124
01:29:09,000 --> 01:29:11,000
然后他们提出很多这种

3125
01:29:11,000 --> 01:29:12,000
需要改进产品上需要改进的点

3126
01:29:12,000 --> 01:29:14,000
那个 github 都没有响应

3127
01:29:14,000 --> 01:29:15,000
然后都觉得我靠

3128
01:29:15,000 --> 01:29:16,000
我们不在这里玩了对吧

3129
01:29:16,000 --> 01:29:17,000
我们这个就是开源的

3130
01:29:17,000 --> 01:29:18,000
你自己

3131
01:29:18,000 --> 01:29:19,000
你自己又不开源

3132
01:29:19,000 --> 01:29:21,000
然后我们提的问题你又不改

3133
01:29:21,000 --> 01:29:22,000
我们去别的地方不和你玩了

3134
01:29:22,000 --> 01:29:25,000
然后最近他们又出了一个什么回应说

3135
01:29:25,000 --> 01:29:26,000
我们都听到你们意见

3136
01:29:26,000 --> 01:29:28,000
我们要痛改钱费

3137
01:29:28,000 --> 01:29:29,000
我们要改

3138
01:29:30,000 --> 01:29:31,000
又出这么一个事

3139
01:29:31,000 --> 01:29:31,000
其实

3140
01:29:32,000 --> 01:29:34,000
有时候不是特别好的征兆吧

3141
01:29:34,000 --> 01:29:35,000
对这个平台来讲

3142
01:29:36,000 --> 01:29:39,000
github 公众形象其实一直

3143
01:29:39,000 --> 01:29:40,000
还好我觉得

3144
01:29:40,000 --> 01:29:41,000
不是那么

3145
01:29:41,000 --> 01:29:43,000
虽然不是那么的

3146
01:29:44,000 --> 01:29:44,000
清明

3147
01:29:44,000 --> 01:29:46,000
但至少还 ok 吧

3148
01:29:46,000 --> 01:29:47,000
至少在开发者眼里面

3149
01:29:47,000 --> 01:29:49,000
github 是一个非常酷的公司

3150
01:29:49,000 --> 01:29:52,000
但是最近的确有了几件不酷的事情

3151
01:29:52,000 --> 01:29:54,000
然后你就会心里面会有一个隐忧

3152
01:29:54,000 --> 01:29:56,000
就是会说我靠

3153
01:29:56,000 --> 01:29:58,000
如果明天 github 不好用了

3154
01:29:58,000 --> 01:29:59,000
我应该去哪

3155
01:29:59,000 --> 01:30:01,000
好像放眼

3156
01:30:01,000 --> 01:30:03,000
整个会要没有什么

3157
01:30:03,000 --> 01:30:04,000
更好的地方

3158
01:30:04,000 --> 01:30:06,000
有挺多的

3159
01:30:06,000 --> 01:30:07,000
你觉得是这样吗

3160
01:30:08,000 --> 01:30:09,000
除了这个

3161
01:30:10,000 --> 01:30:10,000
Bitbucket

3162
01:30:10,000 --> 01:30:13,000
然后 gitlab 最近也开了类似的

3163
01:30:13,000 --> 01:30:14,000
gitlab 是一个

3164
01:30:15,000 --> 01:30:15,000
什么 gitlab

3165
01:30:15,000 --> 01:30:16,000
我知道

3166
01:30:16,000 --> 01:30:17,000
它是它最开始的时候

3167
01:30:17,000 --> 01:30:18,000
是你要自己自己

3168
01:30:18,000 --> 01:30:19,000
就是 selfhost

3169
01:30:19,000 --> 01:30:20,000
你知道自己装那个

3170
01:30:20,000 --> 01:30:23,000
现在也开了那种公开的托管平台了

3171
01:30:23,000 --> 01:30:23,000
真的吗

3172
01:30:23,000 --> 01:30:24,000
免费的

3173
01:30:24,000 --> 01:30:24,000
对

3174
01:30:24,000 --> 01:30:26,000
其实你可以去试一下

3175
01:30:26,000 --> 01:30:27,000
他们说那个还不错

3176
01:30:27,000 --> 01:30:29,000
我上次看了一下就来挺好的

3177
01:30:29,000 --> 01:30:31,000
反正如果等 github 玩不下去了

3178
01:30:31,000 --> 01:30:32,000
就迁到那边去呗

3179
01:30:32,000 --> 01:30:34,000
那个又没什么太大影响

3180
01:30:34,000 --> 01:30:37,000
但是苦了我们这些用勾语言的人了

3181
01:30:37,000 --> 01:30:39,000
说那个 inport 路径要改一遍

3182
01:30:42,000 --> 01:30:43,000
这就是对

3183
01:30:43,000 --> 01:30:45,000
其实我总觉得这个勾吧

3184
01:30:45,000 --> 01:30:46,000
github 做到

3185
01:30:46,000 --> 01:30:48,000
就做到原生支持

3186
01:30:48,000 --> 01:30:50,000
专门那这么一个私有公司的网站

3187
01:30:50,000 --> 01:30:52,000
还是有点过

3188
01:30:52,000 --> 01:30:53,000
不是它不是

3189
01:30:53,000 --> 01:30:55,000
就它这个要解释一下

3190
01:30:55,000 --> 01:30:58,000
它其实也不是说把 github 做到原生支持

3191
01:30:58,000 --> 01:31:00,000
它是说把那个

3192
01:31:00,000 --> 01:31:01,000
就它把那个概念

3193
01:31:01,000 --> 01:31:04,000
就怎么简化你的 import

3194
01:31:04,000 --> 01:31:07,000
就有两个有两个正交的概念

3195
01:31:07,000 --> 01:31:08,000
一个就是说

3196
01:31:08,000 --> 01:31:11,000
你的 import 名字和 import 东西

3197
01:31:11,000 --> 01:31:13,000
它所在的物理位置

3198
01:31:13,000 --> 01:31:14,000
它们两个合一了

3199
01:31:14,000 --> 01:31:15,000
但其实在一般情况下

3200
01:31:15,000 --> 01:31:16,000
这两个应该是

3201
01:31:16,000 --> 01:31:16,000
应该是分开来的

3202
01:31:16,000 --> 01:31:17,000
对吧

3203
01:31:17,000 --> 01:31:18,000
你 import 了一个 package

3204
01:31:18,000 --> 01:31:20,000
但是你不应该去考虑说

3205
01:31:20,000 --> 01:31:22,000
这个 package 是 host 在哪里

3206
01:31:22,000 --> 01:31:24,000
但是勾的设计者觉得

3207
01:31:24,000 --> 01:31:27,000
他做了一件非常自作聪明的东西

3208
01:31:27,000 --> 01:31:28,000
他会帮你去猜这个

3209
01:31:28,000 --> 01:31:30,000
但你觉得这个是自作聪明

3210
01:31:30,000 --> 01:31:32,000
其实我觉得它还是有点合理性的

3211
01:31:33,000 --> 01:31:33,000
好吧

3212
01:31:34,000 --> 01:31:35,000
我觉得它合理性在这里

3213
01:31:35,000 --> 01:31:36,000
就是说如果说你

3214
01:31:36,000 --> 01:31:37,000
你不把这两个合一的话

3215
01:31:37,000 --> 01:31:39,000
你就会引入一个单独的问题

3216
01:31:39,000 --> 01:31:39,000
就是说

3217
01:31:40,000 --> 01:31:43,000
谁最终决定你 import

3218
01:31:43,000 --> 01:31:46,000
那个内串自缚串的唯一性呢

3219
01:31:47,000 --> 01:31:48,000
UR 是不正常

3220
01:31:48,000 --> 01:31:49,000
这里是一个

3221
01:31:49,000 --> 01:31:51,000
这是另外一种形式的

3222
01:31:51,000 --> 01:31:52,000
所谓 conversion or configuration

3223
01:31:52,000 --> 01:31:53,000
就是如果你

3224
01:31:53,000 --> 01:31:53,000
没错

3225
01:31:53,000 --> 01:31:54,000
对

3226
01:31:54,000 --> 01:31:55,000
如果你不

3227
01:31:55,000 --> 01:31:57,000
如果你不让他自己去做这件事情的话

3228
01:31:57,000 --> 01:32:00,000
那你就必须手动的显示了声明说

3229
01:32:00,000 --> 01:32:01,000
你要去 github 找这个东西

3230
01:32:01,000 --> 01:32:03,000
而这一步实际上是非常的讨厌

3231
01:32:05,000 --> 01:32:05,000
对啊

3232
01:32:05,000 --> 01:32:08,000
就是很多包管理就卡在这里

3233
01:32:08,000 --> 01:32:10,000
你要解决各种麻烦的

3234
01:32:10,000 --> 01:32:12,000
就去选择到底在哪里找这个包

3235
01:32:12,000 --> 01:32:14,000
会不会要有一个集中的一个包管理

3236
01:32:14,000 --> 01:32:15,000
比如说我们现在看

3237
01:32:16,000 --> 01:32:17,000
比如 Python 有那个叫什么

3238
01:32:17,000 --> 01:32:18,000
拍

3239
01:32:18,000 --> 01:32:19,000
拍拍吧

3240
01:32:19,000 --> 01:32:20,000
批批拍拍

3241
01:32:20,000 --> 01:32:21,000
拍批

3242
01:32:22,000 --> 01:32:24,000
Python package index

3243
01:32:24,000 --> 01:32:24,000
对吧

3244
01:32:24,000 --> 01:32:25,000
这个是一个集中的服务

3245
01:32:26,000 --> 01:32:28,000
然后 Ruby 有那个叫

3246
01:32:28,000 --> 01:32:29,000
Jim 那套吧

3247
01:32:29,000 --> 01:32:30,000
也是这样子的

3248
01:32:30,000 --> 01:32:32,000
甚至你说像 Mac 我们常用那个 Homebrew

3249
01:32:32,000 --> 01:32:34,000
他也是他虽然是用 github

3250
01:32:34,000 --> 01:32:36,000
但是他还是有一个集中的一个包管理

3251
01:32:36,000 --> 01:32:38,000
就会有一个中心化的东西

3252
01:32:38,000 --> 01:32:39,000
但是 Go 那样的话

3253
01:32:39,000 --> 01:32:40,000
它其实有个好处

3254
01:32:40,000 --> 01:32:41,000
就是它可以就是去中心化

3255
01:32:41,000 --> 01:32:42,000
它不存在一个

3256
01:32:42,000 --> 01:32:44,000
所谓的唯一的或者叫做 official

3257
01:32:44,000 --> 01:32:48,000
就官方的一个包的一个列表

3258
01:32:49,000 --> 01:32:49,000
对吧

3259
01:32:49,000 --> 01:32:51,000
所以就是我觉得说只能说是

3260
01:32:51,000 --> 01:32:53,000
在这个设计上

3261
01:32:53,000 --> 01:32:54,000
这个哲学上不一样

3262
01:32:54,000 --> 01:32:55,000
各有缺点吧

3263
01:32:55,000 --> 01:32:57,000
但是就是会产生一些实际的

3264
01:32:57,000 --> 01:32:58,000
complication

3265
01:32:58,000 --> 01:32:58,000
比如说

3266
01:32:59,000 --> 01:33:00,000
跟我的 complication 就是如果说你

3267
01:33:00,000 --> 01:33:02,000
那你这个包的那个管理的地址变了

3268
01:33:02,000 --> 01:33:04,000
那你可能要重新改一下你的一波路径

3269
01:33:05,000 --> 01:33:08,000
但是好处就是说你不用受制于这个

3270
01:33:08,000 --> 01:33:09,000
一个集中化的那个

3271
01:33:09,000 --> 01:33:11,000
那个包列表的可用性

3272
01:33:11,000 --> 01:33:13,000
比如说那个 PyP 经常

3273
01:33:13,000 --> 01:33:15,000
有一段时间经常用不了

3274
01:33:16,000 --> 01:33:16,000
就挂掉了

3275
01:33:16,000 --> 01:33:17,000
就是在国内

3276
01:33:17,000 --> 01:33:18,000
国内好多 E-Line

3277
01:33:18,000 --> 01:33:20,000
Python 公司都搭建自己的 PyP 员

3278
01:33:20,000 --> 01:33:21,000
对

3279
01:33:21,000 --> 01:33:22,000
所以我觉得这个是一个

3280
01:33:22,000 --> 01:33:24,000
也是一个不是那么

3281
01:33:24,000 --> 01:33:26,000
那么黑白分明的事情

3282
01:33:26,000 --> 01:33:28,000
是你做的不同选择

3283
01:33:28,000 --> 01:33:28,000
对

3284
01:33:28,000 --> 01:33:30,000
这方面也是要建核取舍

3285
01:33:31,000 --> 01:33:31,000
对

3286
01:33:31,000 --> 01:33:32,000
承担不同的后果

3287
01:33:33,000 --> 01:33:33,000
对

3288
01:33:33,000 --> 01:33:34,000
我想说的就是

3289
01:33:34,000 --> 01:33:36,000
其实 Facebook 在几年前

3290
01:33:36,000 --> 01:33:38,000
也有这么一次转型

3291
01:33:38,000 --> 01:33:39,000
Facebook 目前活得挺好的

3292
01:33:40,000 --> 01:33:41,000
希望 GitHub 也能

3293
01:33:42,000 --> 01:33:43,000
就是

3294
01:33:43,000 --> 01:33:44,000
虽然它可能背弃了一些

3295
01:33:44,000 --> 01:33:46,000
开源早期小创业公司

3296
01:33:46,000 --> 01:33:47,000
青春期的理念

3297
01:33:48,000 --> 01:33:50,000
但是还是希望它能活得好一点

3298
01:33:50,000 --> 01:33:50,000
这样

3299
01:33:51,000 --> 01:33:53,000
你我的生活也会继续

3300
01:33:53,000 --> 01:33:55,000
保持一个比较高的水准

3301
01:33:55,000 --> 01:33:56,000
我很难想象说

3302
01:33:56,000 --> 01:33:58,000
将来要找一个开源项目

3303
01:33:58,000 --> 01:34:01,000
还要去适应不同的开源

3304
01:34:02,000 --> 01:34:03,000
版本

3305
01:34:03,000 --> 01:34:04,000
开源

3306
01:34:04,000 --> 01:34:06,000
hosting 网站的 UI 什么的

3307
01:34:06,000 --> 01:34:08,000
我想想在投入

3308
01:34:08,000 --> 01:34:08,000
对

3309
01:34:08,000 --> 01:34:09,000
起码我上次

3310
01:34:09,000 --> 01:34:10,000
比如说我写这个

3311
01:34:10,000 --> 01:34:12,000
学写 VPN 的时候

3312
01:34:12,000 --> 01:34:14,000
可以在 GitHub 直接搜一下

3313
01:34:14,000 --> 01:34:16,000
然后有相应的关键词

3314
01:34:16,000 --> 01:34:18,000
就可以找到所谓的

3315
01:34:18,000 --> 01:34:19,000
系列项目

3316
01:34:19,000 --> 01:34:20,000
然后可以学习它们怎么用

3317
01:34:20,000 --> 01:34:21,000
对吧

3318
01:34:21,000 --> 01:34:22,000
对

3319
01:34:22,000 --> 01:34:25,000
不用再换了五个不同的地方去找

3320
01:34:25,000 --> 01:34:25,000
然后

3321
01:34:26,000 --> 01:34:27,000
不一定好用

3322
01:34:29,000 --> 01:34:30,000
行吧

3323
01:34:30,000 --> 01:34:32,000
今天扯了一多小时

3324
01:34:32,000 --> 01:34:33,000
虽然

3325
01:34:34,000 --> 01:34:35,000
这期的主题是什么

3326
01:34:36,000 --> 01:34:36,000
主题

3327
01:34:36,000 --> 01:34:38,000
从 VPN 开始是吧

3328
01:34:38,000 --> 01:34:40,000
从 rightoVPN 开始

3329
01:34:41,000 --> 01:34:43,000
感谢收听 IPN Podcast 网络

3330
01:34:43,000 --> 01:34:45,000
旗下的 IT 技术主题娱乐节目内容

3331
01:34:45,000 --> 01:34:47,000
我们号称 hardcore

3332
01:34:47,000 --> 01:34:48,000
但是也没关系

3333
01:34:48,000 --> 01:34:49,000
想听人听

3334
01:34:49,000 --> 01:34:49,000
不想听人也别听

3335
01:34:49,000 --> 01:34:52,000
您可以为本节目捐款

3336
01:34:52,000 --> 01:34:54,000
捐款地址是 kernelpanic.fm

3337
01:34:54,000 --> 01:34:55,000
slashdonate

3338
01:34:55,000 --> 01:34:55,000
捐款结合

3339
01:34:55,000 --> 01:34:57,000
随意只要是 8 个正正数倍的可以

3340
01:34:57,000 --> 01:34:59,000
捐款不会给您带来什么

3341
01:34:59,000 --> 01:35:00,000
不捐也不会让你失去什么

3342
01:35:00,000 --> 01:35:01,000
我的口号是

3343
01:35:01,000 --> 01:35:02,000
no hard feelings

3344
01:35:03,000 --> 01:35:04,000
如果你任何反馈

3345
01:35:04,000 --> 01:35:09,000
可以发电子邮件到 kernelpanicatipn.li

3346
01:35:09,000 --> 01:35:12,000
同時也歡迎你收聽愛編旗下的其他幾檔節目

3347
01:35:12,000 --> 01:35:13,000
ID 公文為之道

3348
01:35:13,000 --> 01:35:14,000
他一來了流行同性

3349
01:35:14,000 --> 01:35:16,000
Hi Sorry 硬影像 無資源

3350
01:35:16,000 --> 01:35:18,000
博物誌 選美和畢下官

3351
01:35:20,000 --> 01:35:21,000
應該說一句新年快樂吧

3352
01:35:22,000 --> 01:35:23,000
有點晚了

3353
01:35:24,000 --> 01:35:24,000
好吧

3354
01:35:24,000 --> 01:35:25,000
給大家拜個晚年

3355
01:35:25,000 --> 01:35:26,000
還沒有出 15 呢

3356
01:35:27,000 --> 01:35:28,000
這叫猴年吧

3357
01:35:28,000 --> 01:35:30,000
Code Monkey 新年好

3358
01:35:30,000 --> 01:35:30,000
對

3359
01:35:31,000 --> 01:35:32,000
我們下期節目再會

3360
01:35:32,000 --> 01:35:33,000
Bye bye

