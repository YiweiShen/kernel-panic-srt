1
00:00:00,000 --> 00:00:23,000
大家好,今天是 2018 年 1 月 9 号,自弹自唱的第 64 期。

2
00:00:24,000 --> 00:00:26,000
也是内核恐慌第 49 期。

3
00:00:27,000 --> 00:00:30,000
这是自弹自唱与内核恐慌串台的第 6 期。

4
00:00:31,000 --> 00:00:34,000
自弹自唱是全球首家用华语制作的自体翻译主题播客节目。

5
00:00:35,000 --> 00:00:37,000
我是主播,文川西半动员剧 Eric。

6
00:00:38,000 --> 00:00:40,000
我是主播,黄浦江明秦真宇。

7
00:00:42,000 --> 00:00:45,000
您正在收听 IT 技术主题娱乐节目内核恐慌。

8
00:00:46,000 --> 00:00:50,000
我号称 Hotcore,但是没有干活,想听就听,不想听就别听。我是吴涛。

9
00:00:50,000 --> 00:00:51,000
我是 Rail。

10
00:00:52,000 --> 00:00:55,000
太好了,我们又来串台了,2018 年新年快乐。

11
00:00:56,000 --> 00:00:57,000
新年快乐。

12
00:00:58,000 --> 00:01:02,000
怎么样,吴涛,你在瑞士滑雪还开心吗?

13
00:01:03,000 --> 00:01:08,000
挺好的,这次滑得非常爽,而且我们赶上了,仅有了两个好天气。

14
00:01:09,000 --> 00:01:14,000
回来之后就完全完蛋了,下雨了,把那个雪都冲了,乱七八糟的。

15
00:01:15,000 --> 00:01:16,000
你们怎么过来?

16
00:01:16,000 --> 00:01:22,000
我回家了,我好久没回家了。我时隔三年回到了文川西半。

17
00:01:23,000 --> 00:01:24,000
哦,恭喜。

18
00:01:25,000 --> 00:01:29,000
你说查祖谱查得怎么样?认祖归宗。

19
00:01:30,000 --> 00:01:31,000
衣锦还乡。

20
00:01:32,000 --> 00:01:39,000
我不发推了嘛,因为我上次看那个祖谱是我高中的时候,特地这次又重新翻出来。

21
00:01:39,000 --> 00:01:42,000
原来我们那个是一个箱子,12 本。

22
00:01:43,000 --> 00:01:48,000
但是里面大概就是四五本都是人的名字嘛,家谱嘛。

23
00:01:49,000 --> 00:01:50,000
家谱都是山吗?

24
00:01:51,000 --> 00:01:56,000
四五本都是坟墓,就是祖先的坟在哪座山里面都是那些东西。

25
00:01:57,000 --> 00:02:00,000
然后真正实质性的东西就是只有两本。

26
00:02:01,000 --> 00:02:04,000
然后就翻了一下家里的名称啊,什么乱七八糟的。

27
00:02:04,000 --> 00:02:07,000
我终于查到了我们老家那个字背。

28
00:02:08,000 --> 00:02:10,000
你们有字背吗?就起名字的时候。

29
00:02:11,000 --> 00:02:13,000
你应该排什么背份?

30
00:02:14,000 --> 00:02:15,000
我妈是御字背。

31
00:02:16,000 --> 00:02:20,000
就是排一个字背嘛,然后我们那个字背理论上讲应该是可以拎成一首诗的。

32
00:02:21,000 --> 00:02:23,000
我终于查到了那首诗。

33
00:02:24,000 --> 00:02:26,000
狗立国家生死一生。

34
00:02:28,000 --> 00:02:30,000
不会用这么常用的。

35
00:02:30,000 --> 00:02:32,000
其实没有你想象的那么高端。

36
00:02:33,000 --> 00:02:37,000
然后就是什么李毅传家宝、师叔御后珍之类的。

37
00:02:38,000 --> 00:02:42,000
但你是单名啊,所以你就不按那个来起名字。

38
00:02:43,000 --> 00:02:45,000
咱们这一代其实全都没有了。

39
00:02:46,000 --> 00:02:47,000
就大部分都没有了。

40
00:02:48,000 --> 00:02:53,000
有这样的规定,但是你是不是按这个规定起呢,就是各家各房就是。

41
00:02:54,000 --> 00:02:56,000
哦,所以 Ryo 你是光字背的。

42
00:02:56,000 --> 00:02:57,000
光字背的。

43
00:02:58,000 --> 00:03:00,000
哇,你们都是那个名门厨师。

44
00:03:01,000 --> 00:03:07,000
我连我,就我爷爷那边往上数三倍就没有,就不知道谁是谁。

45
00:03:08,000 --> 00:03:12,000
你是珍字背,下一辈应该是煮的炸的。

46
00:03:19,000 --> 00:03:21,000
等一下,那个什么烹饪方法,你这个顺序怎么来的?

47
00:03:22,000 --> 00:03:23,000
降暴字背。

48
00:03:24,000 --> 00:03:25,000
从草字开始吗?

49
00:03:26,000 --> 00:03:27,000
古老字背。

50
00:03:28,000 --> 00:03:29,000
还是靠。

51
00:03:30,000 --> 00:03:36,000
就是说 Ala Hong Kong,Ala Sichuan,Ala Sichuan 字背。

52
00:03:37,000 --> 00:03:39,000
不扯了。

53
00:03:40,000 --> 00:03:42,000
珍宇是你怎么过的?

54
00:03:43,000 --> 00:03:47,000
我就在上海附近,我元旦去了下杭州。

55
00:03:48,000 --> 00:03:54,000
我就参观了一下,参观下中国美院传说中王树先生的那个作品群。

56
00:03:54,000 --> 00:03:57,000
哦,那个建筑是吧?中文美院建筑好像挺有名的。

57
00:03:58,000 --> 00:04:04,000
对,就是那个象山校区的,是王树的作品群,整个校区都是他一首稿。

58
00:04:05,000 --> 00:04:07,000
Ryo 就一直待在深圳吗?

59
00:04:08,000 --> 00:04:17,000
对,春节,新年就是在家里休假嘛,因为上个月,就 12 月都一直在出差,挺累的,然后就在家里休息了一段时间。

60
00:04:18,000 --> 00:04:19,000
好吧。

61
00:04:20,000 --> 00:04:22,000
那看来大家休息都挺好。

62
00:04:23,000 --> 00:04:29,000
我们这里的话,因为是串台节目嘛,就不说太多的新闻了,但是我还是忍不住想说两条。

63
00:04:30,000 --> 00:04:35,000
一条呢是古德隆查普夫老奶奶的字体终于被数字化了。

64
00:04:36,000 --> 00:04:43,000
大家知道查普夫先生,但是查普夫夫人其实也是一位特别有名的书法家。

65
00:04:44,000 --> 00:04:50,000
他的名字其实叫古德隆查普夫逢黑色,黑色其实是他的娘家姓是吧?

66
00:04:51,000 --> 00:04:57,000
如果他有贵族封地,他有贵族头衔的话,很有可能是会延续下来的。

67
00:04:58,000 --> 00:05:01,000
就不管是男女,哪怕结了婚也会延续。

68
00:05:02,000 --> 00:05:09,000
他呢是 1918 年的 1 月 2 号的生日,所以呢他刚刚迎来他的百年诞生。

69
00:05:10,000 --> 00:05:19,000
然后为了庆祝他的百年生日呢,他的那款字体终于被数码化了。

70
00:05:20,000 --> 00:05:22,000
这个字体的名字就叫 Hesse Antiqua。

71
00:05:23,000 --> 00:05:26,000
德语里面这个 Antiqua 是就相当于那个称心体的意思还是?

72
00:05:27,000 --> 00:05:30,000
就是古典体的。Antiqua 的意思就是古典。

73
00:05:33,000 --> 00:05:38,000
然后大家可以去看一下我们那个链接在 Fontshop 里面。

74
00:05:39,000 --> 00:05:47,000
这次负责这个数码化的这位小帅哥呢叫 Ferdinand Ulrich。

75
00:05:48,000 --> 00:05:50,000
我刚好 10 月份的时候碰到他。

76
00:05:51,000 --> 00:05:52,000
Ferdinand 是吗?

77
00:05:53,000 --> 00:05:56,000
Ferdinand,Urlich 是吧?

78
00:05:57,000 --> 00:06:04,000
Urlich,Ferdinand Ulrich。念起来比较扯,有点难念了。

79
00:06:04,000 --> 00:06:17,000
他现在正在雷丁读博士学位,一直跟着那个 Eric Spieckman 在那个就是活字印刷的工作室叫做 P 98 A。

80
00:06:18,000 --> 00:06:29,000
我们 10 月份 Type Tour 和栗志健刚一起去访问 P 98 A 的时候,刚好他在这个工作室里面,所以他带我们到工作室走了一圈。

81
00:06:30,000 --> 00:06:32,000
哦,OK。感觉如何?

82
00:06:32,000 --> 00:06:40,000
特别好。然后他本人是一个身材特别高大,将近两米吧,我估计他的身高。

83
00:06:41,000 --> 00:06:42,000
真的?

84
00:06:42,000 --> 00:06:43,000
对,对,对,个子特别高。

85
00:06:44,000 --> 00:06:53,000
那时候他刚开完会回来嘛,特别特别困,但是呢,顶着疲劳的身体来带我们看一下。

86
00:06:53,000 --> 00:06:59,000
因为他那个工作坊呢,更多的是那个木活字,就是相对来讲比较大的那个活字。

87
00:06:59,000 --> 00:07:05,000
大家知道吗,在欧洲的话,小的签字的话是用金属的,那大的都是用木活字。

88
00:07:06,000 --> 00:07:09,000
那他们在那边印了很多什么海报啊什么什么的。

89
00:07:11,000 --> 00:07:12,000
OK。

90
00:07:12,000 --> 00:07:16,000
好,那这款字呢,已经在线上了,所以大家有空可以去看一下。

91
00:07:16,000 --> 00:07:25,000
非常符合,因为古德隆他夫人他本人是书法家嘛,可以看一下。

92
00:07:26,000 --> 00:07:31,000
其实很有那个雕铜嘛,就是他原来第一款那个字体的感觉。

93
00:07:32,000 --> 00:07:39,000
那这次的复刻出来的数目啊版呢,也是没有小写字母,只有大写字母和小型大写字母。

94
00:07:40,000 --> 00:07:44,000
这样排出来非常古典的感觉,就非常符合这个 Antiqua 这个名字。

95
00:07:44,000 --> 00:07:52,000
所以是他开始做这个字体,就是拿来做展示用的什么。

96
00:07:53,000 --> 00:07:54,000
对。

97
00:07:55,000 --> 00:07:58,000
雕刻的什么,什么碑文字体感觉下。

98
00:07:59,000 --> 00:08:00,000
对。

99
00:08:01,000 --> 00:08:09,000
这款字,他自己其实当年很早了,就是原来是有签字版本的,但是呢就一直都没有这个数码版。

100
00:08:11,000 --> 00:08:12,000
嗯,明白了。

101
00:08:12,000 --> 00:08:17,000
那我们在此呢也遥祝查伯夫夫人身体健康。

102
00:08:18,000 --> 00:08:20,000
活了 100 岁,可以继续活下去。

103
00:08:21,000 --> 00:08:22,000
一定要好好活下去。

104
00:08:23,000 --> 00:08:24,000
一定要好活下去。

105
00:08:25,000 --> 00:08:31,000
好,下面一条消息呢,就热烈庆祝新版的 ISO IEC 的 10646 发布啦。

106
00:08:32,000 --> 00:08:38,000
这次发布的时间呢特别有意思,是在 12 月的 24 号,也就是圣诞节前夜。

107
00:08:38,000 --> 00:08:40,000
那这次发布的是第五个版本。

108
00:08:41,000 --> 00:08:47,000
其实这次发布的一个目的就是为了和半年前发布的那个 Unicode 10.0 的版本进行一个同步。

109
00:08:48,000 --> 00:08:57,000
如果有收听我们上次就是两海来参加的那期 Unicode,和大家介绍 Unicode 的节目就知道。

110
00:08:57,000 --> 00:09:02,000
Unicode 和 ISO 的 10646 是有一个非常复杂的一个同步的关系。

111
00:09:03,000 --> 00:09:09,000
因为两个文件是分别是两个组织,所以它们并不是同步的。

112
00:09:10,000 --> 00:09:15,000
那 Unicode 呢是事先 10.0 就已经在大半年前就已经发布了。

113
00:09:16,000 --> 00:09:22,000
那这次呢就是落实到 ISO,落实到 ISO 的 10646 发布以后,这个就是变成。

114
00:09:22,000 --> 00:09:30,000
因为 ISO 是国际标准组织嘛,那这个新的标准就是官方性的,就会要由各国的标准化组织继续的接受和在各国里面执行。

115
00:09:31,000 --> 00:09:37,000
那实际内容其实就是跟那个 Unicode 10.0 是差不多的。

116
00:09:37,000 --> 00:09:41,000
有一些细细微微的不同,但是我觉得已经没有必要在节目里面讲了。

117
00:09:42,000 --> 00:09:44,000
有兴趣的同学可以去看文档。

118
00:09:45,000 --> 00:09:47,000
好吧,那我们是不是赶快可以进入正题了?

119
00:09:49,000 --> 00:09:50,000
嗯哼。

120
00:09:51,000 --> 00:09:54,000
那我们现在就开始我们的节目了。

121
00:09:55,000 --> 00:09:57,000
我们现在就开始我们的节目了。

122
00:09:58,000 --> 00:10:00,000
那我们现在就开始我们的节目了。

123
00:10:00,000 --> 00:10:03,000
好吧,那我们是不是赶快可以进入正题了?

124
00:10:06,000 --> 00:10:07,000
嗯哼。

125
00:10:08,000 --> 00:10:09,000
咱们捧根都要热情一点好吗?

126
00:10:10,000 --> 00:10:11,000
对呀。

127
00:10:12,000 --> 00:10:14,000
你们都睡着了吗?同学们。

128
00:10:15,000 --> 00:10:16,000
新年第一次捧根,你们这么。

129
00:10:17,000 --> 00:10:20,000
今天有三个捧的,三个捧的,大家互相等。

130
00:10:21,000 --> 00:10:22,000
好吧。

131
00:10:23,000 --> 00:10:26,000
今天我们的主题是 Emoji 再一次拯救了世界。

132
00:10:26,000 --> 00:10:33,000
对,其实上次我们其实这个自弹自串节目啊,今天也是第六期了。

133
00:10:34,000 --> 00:10:42,000
但是呢,就是目前为止就是收听率和这个这个好评最高的,还是那期关于 Emoji 的那期。

134
00:10:43,000 --> 00:10:49,000
所以大家还是虽然看不到 Emoji 本身,还是会希望在会很喜欢的 Podcast 没听到这个事情。

135
00:10:49,000 --> 00:10:59,000
对,但是呢,其实上次呢,我们也是觉得时间不够嘛,然后 Emoji 其实背后还有很多更多的那个技术方面的东西还没有跟大家聊透。

136
00:11:00,000 --> 00:11:06,000
所以呢,我们今天决定再花一期的时间和大家聊 Emoji 背后的一些技术的内容。

137
00:11:07,000 --> 00:11:08,000
嗯哼。

138
00:11:09,000 --> 00:11:14,000
那首先呢,就是要跟大家扯一扯就是那个 Soran Gate Pairs 这个事情。

139
00:11:14,000 --> 00:11:18,000
这个东西,就中文叫什么代理队是吗?

140
00:11:19,000 --> 00:11:22,000
不知道怎么翻,就姑且这么翻译吧。

141
00:11:23,000 --> 00:11:26,000
嗯,你直译的话 Soran Gate 就是代理嘛,Pairs 就是队嘛。

142
00:11:27,000 --> 00:11:28,000
Soran Gate Pairs。

143
00:11:29,000 --> 00:11:42,000
因为最近啊,就是在日本有人写的文章就就讲说,哎呀,感谢 Emoji 加速了这个很多环境对这个代理队的支持。

144
00:11:42,000 --> 00:11:48,000
因为说实话,以前就是一直都有这个东西,但是呢,很多环境都支持的不好。

145
00:11:49,000 --> 00:12:05,000
而且呢,但是因为它并不是非常常用,因为如果你要使用这个代理队的那些字啊,就是 unicode 那些字啊,就是你放在那 UTF 16 都是很后面就非常坦用的那些字。

146
00:12:06,000 --> 00:12:08,000
所以呢,即使你有 bug,大家也不去修。

147
00:12:09,000 --> 00:12:12,000
然后呢,或者说有些 bug 根本就没有体现出来。

148
00:12:13,000 --> 00:12:25,000
结果现在呢,Emoji 大家经常常用了,大家发现,哎呦,我要赶快去能 support,就支持 Emoji 才发现,哎,这一些乱七八糟的东西都翻出来了。

149
00:12:26,000 --> 00:12:34,000
所以我觉得还是有必要和大家再讲讲这个 UTF 16 和这个 Soran Gate 代理队的事情。

150
00:12:35,000 --> 00:12:36,000
OK。

151
00:12:37,000 --> 00:12:44,000
因为最早来讲的话,就首先 Java,JavaScript 和那个 Windows 的 API 好像都不支持吧。

152
00:12:45,000 --> 00:12:54,000
因为最开始的时候是没有 UTF 16 的,最开始用的是那个 UCSR,就是那个是早于 unicode 的标准的。

153
00:12:55,000 --> 00:12:57,000
实际上是个历史遗漏问题嘛。

154
00:12:57,000 --> 00:13:06,000
对,就是在 unicode 正式这个标准出现之前,当时就已经有这么一个需求,就是说要表达多个文字了嘛。

155
00:13:07,000 --> 00:13:13,000
就是对于宽字节的需求导致那个,其实跟 GBR 32 那个历史原流是一样的。

156
00:13:14,000 --> 00:13:16,000
对,就实践早于规范。

157
00:13:16,000 --> 00:13:25,000
对,Windows API 直到现在都是两套,一套是宽字节的 API,然后是窄字节的 API。

158
00:13:26,000 --> 00:13:32,000
一个是 W 节位,另外一个是 C 节位吧,分别代表 Y 的,corrector。

159
00:13:33,000 --> 00:13:39,000
这个宽字节这个词是不是 Windows 他们用的这个术语啊?

160
00:13:40,000 --> 00:13:51,000
对,所以就像刚刚 API 的那个,如果有一个 API,比如说 API 叫 Open Window,然后 API 它实际上只是一个,这个函数名实际上是虚的,

161
00:13:52,000 --> 00:14:00,000
然后它实际的实现有两个,一个是 Open Window 比如说 underline C,然后这个就是标准的,

162
00:14:01,000 --> 00:14:07,000
然后另外一个是 Open Window underline W,然后 W 代表 W,就是 Y 的,就是宽字节。

163
00:14:08,000 --> 00:14:16,000
甚至什么 Python 之类的也是,我不知道是不是受到影响,也有一个什么宽字节版本,或者是指的是。

164
00:14:17,000 --> 00:14:24,000
对,但那个 Python 2 的时候它是可以让你编译的时候选是默认是 UCS 2 还是 UCS 4。

165
00:14:24,000 --> 00:14:25,000
对。

166
00:14:26,000 --> 00:14:41,000
所以现在就其实还是要跟大家整理一下,就是首先是有 UCS 2,UCS 4 对吧,然后这一头有 UTF 8,UTF 16 和 UTF 32。

167
00:14:41,000 --> 00:14:42,000
对。

168
00:14:42,000 --> 00:14:54,000
然后他们的对应关系是 UCS 2 是 UTF 16 的一个子极,然后 UCS 4 是和 UTF 32 等价的。

169
00:14:55,000 --> 00:14:57,000
然后 UTF 8 是另外一个东西。

170
00:14:57,000 --> 00:14:58,000
另外一个东西,对。

171
00:15:00,000 --> 00:15:09,000
就是很早很早以前都是单字节,后来发现单字节不能用了,就是大家用双字节,然后 UCS 2 是固定双字节对吧。

172
00:15:09,000 --> 00:15:10,000
对。

173
00:15:10,000 --> 00:15:14,000
嗯,固定的,所有东西都是用两个字节来表,双字节表示。

174
00:15:15,000 --> 00:15:19,000
结果发现这肯定不够用啊,所以把这个 UCS 2。

175
00:15:19,000 --> 00:15:20,000
他们以为够了,但其实。

176
00:15:21,000 --> 00:15:24,000
怎么可能够用,你想。

177
00:15:24,000 --> 00:15:25,000
预见历史。

178
00:15:25,000 --> 00:15:26,000
对啊。

179
00:15:26,000 --> 00:15:27,000
预见历史失败了。

180
00:15:27,000 --> 00:15:32,000
2 的 16 字方的话才多少,才 65,536。

181
00:15:32,000 --> 00:15:33,000
65,000 多个。

182
00:15:33,000 --> 00:15:40,000
所以这个就是所谓的,我们就是在 unicode 里面,就摆位置的话,就是那个基本多文种平面嘛。

183
00:15:41,000 --> 00:15:50,000
所以在那时候才 1991 年的时候,就所谓的我们第 0 平面嘛,平面它分 0、1、2、3、4、5 好多个面嘛。

184
00:15:50,000 --> 00:15:55,000
第 0 个平面,最基本的那个面,那才 6 万多个码位肯定是不够用的呀。

185
00:15:55,000 --> 00:16:02,000
但是呢,当时觉得够用,然后呢,就用了一个固定的双字节的,就我们现在叫的 UCS 2。

186
00:16:02,000 --> 00:16:05,000
然后发现不够用了怎么办呢,就是拿去扩展。

187
00:16:05,000 --> 00:16:13,000
这个扩展就特别坑,就开始用了一个 UTF 16,就是它是个变长的对吧。

188
00:16:14,000 --> 00:16:16,000
UTF 16 是。

189
00:16:17,000 --> 00:16:18,000
大部分是定长的。

190
00:16:18,000 --> 00:16:20,000
对,大部分是定长的。

191
00:16:20,000 --> 00:16:21,000
这可以变长。

192
00:16:21,000 --> 00:16:25,000
就它的,我们常用的那部分就是 UCS 2 嘛,就是定长两个字节。

193
00:16:25,000 --> 00:16:33,000
但是它留了一个,刚才讲的那个 Saragadepair 代理队的方式,来支持一个扩展,然后让它变成一个更长的支持。

194
00:16:33,000 --> 00:16:40,000
Saragadepair 主要是代运嘛,就是我需要这个东西,然后我需要这个东西,但是我自己。

195
00:16:40,000 --> 00:16:41,000
把它包起来。

196
00:16:41,000 --> 00:16:48,000
我自己干不出来,所以我要找别的东西来帮我生出来,这种感觉。

197
00:16:48,000 --> 00:16:51,000
为什么被你说的那么奇怪听起来。

198
00:16:52,000 --> 00:17:00,000
Saragadepair 这个词,因为它没有用 agent 或者是 broker 之类的这样一个词,它用 saragadepair。

199
00:17:00,000 --> 00:17:02,000
saragadepair 这个词最常见的不就是代运嘛。

200
00:17:05,000 --> 00:17:06,000
是的。

201
00:17:07,000 --> 00:17:14,000
因为我们大部分常用的 emoji,就是比如说大家想象的就是比如说那个脸蛋笑脸。

202
00:17:14,000 --> 00:17:23,000
那些 emoji 原来排的码位都不在这个基本多文种平面,而都在第一平面上。

203
00:17:23,000 --> 00:17:31,000
所以呢,如果按那个 unicode 码位的话,大家可以看都是在 1000000,五位数了都已经。

204
00:17:31,000 --> 00:17:39,000
因此呢,如果用普通的那个 ucs 2 是没办法弄的,双字节是没办法弄的。

205
00:17:39,000 --> 00:18:01,000
那就要用变长,那在 utf 16 里面就要通过这个代运的 saragadepairs,代理队去用这个临时的两个组合去给它拓展成,就是这也不叫拓展,这叫什么呀。

206
00:18:01,000 --> 00:18:09,000
就代替成就是换成其他的那个代码,用两个字节加起来。

207
00:18:09,000 --> 00:18:11,000
嗯,对啊。

208
00:18:11,000 --> 00:18:22,000
所以这样就说当它这个字这个码位是在基本在基本的多文种平面的话,它就直接用它就不用这样搞来搞去的嘛。

209
00:18:22,000 --> 00:18:26,000
就是超过这平面了,它没办法弄了,所以它就开始用代理队了。

210
00:18:26,000 --> 00:18:27,000
对。

211
00:18:27,000 --> 00:18:35,000
嗯,所以这样一个结果就变成 utf 16 的话,它就是一个变长的东西嘛,它可能是单字节,也可能是双字节,也可能是四字节。

212
00:18:35,000 --> 00:18:43,000
如果你要用后面那些超过那些基本文学面范围的东西,结果呢,emoji 全部都是超过范围的。

213
00:18:43,000 --> 00:18:51,000
所以你用,如果你想用 emoji 的码位,那你编码如果又都是 utf 16 的话,你就必须要用这个代理队。

214
00:18:51,000 --> 00:18:52,000
对。

215
00:18:52,000 --> 00:19:00,000
然后,所以代理队他们就一直讲,utf 16 为什么要搞这么复杂的机制?

216
00:19:00,000 --> 00:19:05,000
它这个复杂性是来自于历史嘛,它不是一开始就要。

217
00:19:05,000 --> 00:19:17,000
本来它也不想的嘛,它本来是搞个 ucs 2 觉得够用了,然后不够用了只能修修补补又不能大改吧,就只能在 ucs 2 上多做文章搞出这么一个混合的一个东西。

218
00:19:17,000 --> 00:19:19,000
对,一个怪胎来。

219
00:19:19,000 --> 00:19:26,000
而且我觉得这个还会有个问题,你说照现在这个 emoji 这个帧数的话,我觉得四字结很快也不够用了吧。

220
00:19:26,000 --> 00:19:28,000
四字结不至于吧,我觉得。

221
00:19:28,000 --> 00:19:30,000
四字结也够用。

222
00:19:30,000 --> 00:19:32,000
四字结有多少也就才。

223
00:19:32,000 --> 00:19:34,000
也就才,四字结很多了。

224
00:19:34,000 --> 00:19:38,000
够啊,因为这是那个秘啊,所以还好。

225
00:19:38,000 --> 00:19:40,000
还早是吧?

226
00:19:40,000 --> 00:19:41,000
还早呢。

227
00:19:41,000 --> 00:19:43,000
好吧。

228
00:19:44,000 --> 00:19:53,000
但是如果大家都用那个 ucs 4 或者都用那个 utf 32 的话,就所有的东西都用四字结,都好浪费嘛,不是。

229
00:19:58,000 --> 00:20:04,000
所以大家想来想去,大家还是用 utf 8 吧,大家都来用 utf 8 吧,这个世界多美好。

230
00:20:04,000 --> 00:20:08,000
utf 8 也比较浪费啊,如果你真要揪这个的话。

231
00:20:08,000 --> 00:20:10,000
那对我们中国人来讲是比较浪费。

232
00:20:10,000 --> 00:20:15,000
utf 8 最大的优势是比较灵活吧,我觉得。

233
00:20:15,000 --> 00:20:18,000
它最大的优势是没有奇异。

234
00:20:18,000 --> 00:20:19,000
对。

235
00:20:19,000 --> 00:20:22,000
就是它可以随意在中间断开是没有问题的。

236
00:20:22,000 --> 00:20:23,000
对。

237
00:20:23,000 --> 00:20:27,000
它可以就是自己揪,就是那个叫什么来的。

238
00:20:27,000 --> 00:20:34,000
就是给一个任意文本,它可以在任意一个字结中间断开,去找到下一个那个 code 是从哪里开始的。

239
00:20:34,000 --> 00:20:35,000
但是。

240
00:20:35,000 --> 00:20:36,000
断的出来。

241
00:20:36,000 --> 00:20:41,000
就 utf 32,utf 16,uses 也都做不到嘛,你必须知道开头在哪里了。

242
00:20:41,000 --> 00:20:43,000
而且还有这个 byteorder 的问题。

243
00:20:43,000 --> 00:20:45,000
对,有大头小头的问题。

244
00:20:45,000 --> 00:20:50,000
不过 32 也有大头小头的问题。

245
00:20:50,000 --> 00:20:57,000
所以这里有两个事情,就是一个是说在传输中,就存储过程中肯定是用 utf 8 比较合理。

246
00:20:57,000 --> 00:21:09,000
不管是从它的编码的效率和它的这个部分大小端,然后也可以自究错的这么一个属性来说肯定是存储和传输的时候是 utf 8 比较合适。

247
00:21:09,000 --> 00:21:18,000
但是在就是这张机内部它运算和处理的时候,它最好是一个定长或者是绝大部分是定长的时候更加有效率嘛。

248
00:21:18,000 --> 00:21:19,000
嗯。

249
00:21:20,000 --> 00:21:31,000
所以就为什么导致现在的结果就是大家那些,你看那些软件系统在内部的 internal representation 的时候要不就是选择 utf 16,要不就是选择 utf 32 来做这个事情。

250
00:21:31,000 --> 00:21:34,000
对,方便对齐嘛,最主要。

251
00:21:34,000 --> 00:21:36,000
嗯,对方便对齐可以 random seek 嘛,对吧。

252
00:21:36,000 --> 00:21:37,000
嗯。

253
00:21:37,000 --> 00:21:38,000
比较简单一些。

254
00:21:38,000 --> 00:21:39,000
嗯。

255
00:21:39,000 --> 00:21:51,000
因为 utf,如果用 utf 8 的话,就是只要马位即使是基本文平面,只是只要马位在 800 以上呢,都要用三个字节来表示。

256
00:21:51,000 --> 00:21:56,000
所以就是还是很浪费的,就相和那个 utf 16 比的话。

257
00:21:56,000 --> 00:22:05,000
而且它在那个变长的时候,你你没有办法在轮本中说我跳到 1000 个字符以外,中间就可能跳得很歪了嘛。

258
00:22:05,000 --> 00:22:06,000
嗯。

259
00:22:06,000 --> 00:22:07,000
嗯,嗯。

260
00:22:07,000 --> 00:22:08,000
32 就不存在这个问题。

261
00:22:08,000 --> 00:22:09,000
对。

262
00:22:09,000 --> 00:22:15,000
哎呀,那些如果是欧美国家的,他们一清到晚都在 ask 自己的人们。

263
00:22:15,000 --> 00:22:19,000
他们,所以他们就不想不想用 32 嘛,他们就想。

264
00:22:19,000 --> 00:22:20,000
对啊。

265
00:22:20,000 --> 00:22:21,000
用个简单一点的。

266
00:22:21,000 --> 00:22:22,000
对,对,对。

267
00:22:22,000 --> 00:22:24,000
但是他们又想用 emoji 啊。

268
00:22:26,000 --> 00:22:31,000
所以现在有跟我们一样的痛苦啦,所以对吧,还不如用 32,简单。

269
00:22:31,000 --> 00:22:34,000
还是很浪费的呀。

270
00:22:34,000 --> 00:22:35,000
嗯。

271
00:22:35,000 --> 00:22:44,000
所以啊,以前就很多很多那种那些原来 windows api 嘛,对吧,原来是只当只能正确处理双字节的。

272
00:22:44,000 --> 00:22:51,000
像那个 C++那时候就对吧,Y chart 的那个定义就是 16 个比特的嘛,所以。

273
00:22:51,000 --> 00:22:52,000
嗯。

274
00:22:52,000 --> 00:22:59,000
他会把那个,他是不是如果用那他支持 utf 16 吧。

275
00:23:00,000 --> 00:23:01,000
还是说。

276
00:23:01,000 --> 00:23:04,000
要看具体什么实现,这个就比较复杂了。

277
00:23:04,000 --> 00:23:15,000
我看一个说法就是说他能显示这个四字节的字符,但是呢,由于那个 ap 不能处理,会把它给他当成两个那个双字节的字符。

278
00:23:15,000 --> 00:23:22,000
对啊,就所以所以要看他在所在的那个运行环境和 ap 怎么支持了嘛,就这个东西这个纯是个坑啊。

279
00:23:22,000 --> 00:23:23,000
啊,对啊。

280
00:23:23,000 --> 00:23:25,000
因为谁干谁偷坑。

281
00:23:25,000 --> 00:23:30,000
具体会有什么毛病呢?就是乱麻。

282
00:23:30,000 --> 00:23:33,000
那比如说你算那个总数数字数的时候就不对嘛。

283
00:23:33,000 --> 00:23:34,000
啊,那肯定。

284
00:23:34,000 --> 00:23:37,000
嗯,这就本来一个字就在就算上两个字了嘛。

285
00:23:37,000 --> 00:23:39,000
然后显示也可能会有问题。

286
00:23:39,000 --> 00:23:40,000
嗯。

287
00:23:40,000 --> 00:23:44,000
就传输的时候就会有问题吗?然后。

288
00:23:44,000 --> 00:23:51,000
传输现在我觉得还好,传输现在基本上至少我看见了就是现现代系统都是用 utf 8 来变嘛。

289
00:23:51,000 --> 00:23:52,000
对。

290
00:23:52,000 --> 00:23:53,000
嗯嗯嗯。

291
00:23:53,000 --> 00:23:58,000
对,就问题还是处在就是内部的 internal representation 的时候会有这个问题。

292
00:23:58,000 --> 00:24:04,000
哎,他传输的时候用 utf 8 的话,他到内部他得把 8 转成 16,他得转一次。

293
00:24:04,000 --> 00:24:06,000
对,有个边解码的一个过程。

294
00:24:06,000 --> 00:24:07,000
嗯。

295
00:24:07,000 --> 00:24:13,000
而且这个是非常,这是几乎日常一定要做的一个工作,所以目前的库也比较成熟。

296
00:24:13,000 --> 00:24:14,000
嗯。

297
00:24:14,000 --> 00:24:18,000
就你不要自己去弄就好了,就一定要用现有的解决方案。

298
00:24:18,000 --> 00:24:20,000
啊,千万不要自己造轮子。

299
00:24:20,000 --> 00:24:21,000
对。

300
00:24:21,000 --> 00:24:22,000
嗯。

301
00:24:22,000 --> 00:24:28,000
那好吧,那所以呢就是,嗯现在就,因为 java 现在的坑都解决了是吗?

302
00:24:28,000 --> 00:24:34,000
呃,java 从 java 5 之后就改用 utf 16 了吧,然后。

303
00:24:34,000 --> 00:24:39,000
反正还是有一些问题的据说,但不太清楚具体是什么。

304
00:24:39,000 --> 00:24:41,000
不是那么严重吗?基本上可以。

305
00:24:41,000 --> 00:24:46,000
就是,就是因为开始用 utf 16 了,所以就开始有坑了嘛。

306
00:24:46,000 --> 00:24:47,000
嗯。

307
00:24:47,000 --> 00:24:48,000
这个代理。

308
00:24:48,000 --> 00:24:49,000
就是一个变畅的问题。

309
00:24:49,000 --> 00:24:52,000
啊,对,要,要处理代理,代理队的问题嘛。

310
00:24:54,000 --> 00:24:55,000
嗯。

311
00:24:55,000 --> 00:24:56,000
这个过不去。

312
00:24:56,000 --> 00:25:00,000
不是我的问题,是你们实现的问题。

313
00:25:00,000 --> 00:25:01,000
嗯,对。

314
00:25:01,000 --> 00:25:18,000
不管怎么样,就是用 emoji 这样的用,以前这些喊用字嘛,就是这些这个 800,800 年用不到的这个码位用出来了以后,还是督促了好多这些旧的环境,要加强对这个 utf 16 的支持。

315
00:25:18,000 --> 00:25:19,000
嗯。

316
00:25:19,000 --> 00:25:20,000
对。

317
00:25:20,000 --> 00:25:21,000
嗯。

318
00:25:21,000 --> 00:25:22,000
这倒是。

319
00:25:22,000 --> 00:25:23,000
嗯。

320
00:25:24,000 --> 00:25:30,000
好,然后下面一个问题就是我们上次没怎么讲那个 emoji 的字体问题。

321
00:25:30,000 --> 00:25:31,000
其实上。

322
00:25:32,000 --> 00:25:33,000
嗯,对。

323
00:25:33,000 --> 00:25:37,000
emoji 的字体问题听起来有点奇怪,不过的确。

324
00:25:37,000 --> 00:25:38,000
对啊。

325
00:25:38,000 --> 00:25:44,000
首先,emoji 的字体默认是彩色字体,这本身其实在字体技术上就是一个很重要的一步。

326
00:25:44,000 --> 00:25:51,000
因为大家都知道,大家默认的字体,白底黑字啊,就就不带颜色的,本来。

327
00:25:51,000 --> 00:25:52,000
对。

328
00:25:52,000 --> 00:25:53,000
嗯。

329
00:25:53,000 --> 00:26:00,000
那现在大家最常用的,比如说,如果你安卓手机用的就是这个 noto color emoji。

330
00:26:00,000 --> 00:26:06,000
那如果是苹果的设备的话,用的都是叫什么 apple color emoji。

331
00:26:06,000 --> 00:26:11,000
大家一看就知道,这名字里面就有个 color 嘛,就是颜色嘛,就是彩色的。

332
00:26:11,000 --> 00:26:12,000
彩色。

333
00:26:12,000 --> 00:26:17,000
所以呢,就是现在呢,我们的字体技术呢,都已经支持这个彩色字体了。

334
00:26:17,000 --> 00:26:27,000
可是大家仔细再如果哈,稍微翻一下就会知道,我们其实无论是苹果的这个还是安卓的他这个 noto。

335
00:26:27,000 --> 00:26:32,000
他其实里面内嵌的都是位图,就是都是 png 的图片。

336
00:26:32,000 --> 00:26:33,000
对。

337
00:26:33,000 --> 00:26:34,000
嗯。

338
00:26:34,000 --> 00:26:38,000
他其实就是把一个个图片嵌到那个字体文件里头吃。

339
00:26:38,000 --> 00:26:40,000
所以如果大家。

340
00:26:40,000 --> 00:26:41,000
noto 也是这么做的吗?

341
00:26:41,000 --> 00:26:42,000
对。noto 也是。

342
00:26:42,000 --> 00:26:43,000
对。

343
00:26:43,000 --> 00:26:44,000
所以呢,如果。

344
00:26:44,000 --> 00:26:48,000
这个是谁家是用谁家是用 pngsvg 的。

345
00:26:48,000 --> 00:26:49,000
对。

346
00:26:49,000 --> 00:26:50,000
那好像是用 svg 的。

347
00:26:50,000 --> 00:26:51,000
嗯。

348
00:26:51,000 --> 00:26:54,000
好像是那个什么 windows 是吧。

349
00:26:54,000 --> 00:26:56,000
就 svg 是那个嘛。

350
00:26:56,000 --> 00:27:00,000
这个我们之前讲过啊,就是在那个我们讲 emoji 的那一期。

351
00:27:00,000 --> 00:27:01,000
第三期吧。

352
00:27:01,000 --> 00:27:04,000
那个 adobe 和 firefox 吧,还能说的是。

353
00:27:04,000 --> 00:27:05,000
对。

354
00:27:05,000 --> 00:27:07,000
就是 adobe 和 firefox 他们。

355
00:27:07,000 --> 00:27:10,000
他们定了那个 open type 的 svg 的。

356
00:27:10,000 --> 00:27:12,000
其实就是应该是 adobe 主导的吧。

357
00:27:12,000 --> 00:27:15,000
然后 firefox 最先是实现了这个。

358
00:27:15,000 --> 00:27:16,000
嗯。

359
00:27:16,000 --> 00:27:17,000
对啊。

360
00:27:17,000 --> 00:27:18,000
对。

361
00:27:18,000 --> 00:27:23,000
然后现在 adobe 的 photoshop 和 illustrator 都能支持这个 open type 的 svg 字体。

362
00:27:23,000 --> 00:27:26,000
然后他们自己也做了几个实验性的字体陆续在发布。

363
00:27:26,000 --> 00:27:27,000
对。

364
00:27:27,000 --> 00:27:32,000
所以这个的话就是大家如果装了那个 adobe 最新版的 cc 的话。

365
00:27:32,000 --> 00:27:35,000
他就默认给你装那个彩色字体。

366
00:27:35,000 --> 00:27:39,000
他那个彩色字体的 emoji 呢就是实量的。

367
00:27:39,000 --> 00:27:41,000
啊对。

368
00:27:41,000 --> 00:27:44,000
他其实就是一个 svg 的实量图。

369
00:27:44,000 --> 00:27:45,000
svg 的实量图。

370
00:27:45,000 --> 00:27:46,000
嗯。

371
00:27:46,000 --> 00:27:47,000
对。

372
00:27:47,000 --> 00:27:48,000
但 google 是用 png 的吗?

373
00:27:48,000 --> 00:27:51,000
png 我一直以为是 apple 的私有技术。

374
00:27:51,000 --> 00:27:52,000
noto 也是。

375
00:27:52,000 --> 00:27:54,000
google 用的就是 noto 嘛。

376
00:27:54,000 --> 00:27:56,000
noto 的那个 emoji 就是。

377
00:27:56,000 --> 00:27:57,000
现在都是 png 的。

378
00:27:57,000 --> 00:27:58,000
对。

379
00:27:58,000 --> 00:27:59,000
所以大家就知道。

380
00:27:59,000 --> 00:28:00,000
因为大家。

381
00:28:00,000 --> 00:28:04,000
现在的那个字体文件都是那个 open type 格式嘛。

382
00:28:04,000 --> 00:28:09,000
其实 open type 格式里面他既支持就是 bitmap 这个位图的彩色字体。

383
00:28:09,000 --> 00:28:12,000
也支持就实量图的 sv。

384
00:28:12,000 --> 00:28:14,000
要不然你可以欠那个 svg。

385
00:28:14,000 --> 00:28:18,000
或者呢现在 open type 他有个叫 cpal 的东西。

386
00:28:18,000 --> 00:28:19,000
啊。

387
00:28:19,000 --> 00:28:21,000
那个叫什么?

388
00:28:21,000 --> 00:28:22,000
叫什么?

389
00:28:22,000 --> 00:28:24,000
color palette table。

390
00:28:24,000 --> 00:28:25,000
嗯。

391
00:28:25,000 --> 00:28:26,000
就颜色。

392
00:28:26,000 --> 00:28:27,000
对。

393
00:28:27,000 --> 00:28:28,000
一个叫 color palette。

394
00:28:28,000 --> 00:28:29,000
对。

395
00:28:29,000 --> 00:28:33,000
这个是微软做的那种 emoji 的实现方式之一吧。

396
00:28:33,000 --> 00:28:35,000
他的作用原理就是说。

397
00:28:35,000 --> 00:28:38,000
他必须要分色来管理这个图层。

398
00:28:38,000 --> 00:28:40,000
就他是图层的概念。

399
00:28:40,000 --> 00:28:43,000
比如说我一个 emoji 如果有三种颜色构成的话。

400
00:28:43,000 --> 00:28:46,000
我得把这三种颜色分开做成三层。

401
00:28:46,000 --> 00:28:48,000
然后这三层分别存储。

402
00:28:48,000 --> 00:28:50,000
然后再用一个表来存他们的颜色。

403
00:28:50,000 --> 00:28:52,000
最后就把他们叠加起来。

404
00:28:52,000 --> 00:28:53,000
嗯。

405
00:28:53,000 --> 00:28:55,000
为什么要做这么复杂呢?

406
00:28:55,000 --> 00:28:56,000
对。

407
00:28:56,000 --> 00:28:57,000
这其实是个折中吧。

408
00:28:57,000 --> 00:29:00,000
我觉得可能在这个图形处理上的效率会高一些。

409
00:29:00,000 --> 00:29:05,000
因为如果你要做一个 svg 这样子的矢量的 emoji 的话。

410
00:29:05,000 --> 00:29:07,000
你就得支持渐变色。

411
00:29:07,000 --> 00:29:08,000
嗯。

412
00:29:08,000 --> 00:29:10,000
然后 windows 那个就是他不需要支持渐变色。

413
00:29:10,000 --> 00:29:12,000
另外他有个好处就是。

414
00:29:12,000 --> 00:29:17,000
他应该某种程度上很容易跟原来那种单色的字体直接兼容。

415
00:29:17,000 --> 00:29:18,000
嗯。

416
00:29:18,000 --> 00:29:19,000
对。

417
00:29:19,000 --> 00:29:24,000
因为他每一个每一个层本质上还是一个单色的这个矢量轮廓。

418
00:29:24,000 --> 00:29:25,000
就跟传统的字体是一样的。

419
00:29:25,000 --> 00:29:26,000
只是汇制三遍而已。

420
00:29:26,000 --> 00:29:27,000
可能比如说。

421
00:29:27,000 --> 00:29:28,000
对对对。

422
00:29:28,000 --> 00:29:29,000
如果你有三种颜色,

423
00:29:29,000 --> 00:29:31,000
你只要三遍然后叠加起来就可以了。

424
00:29:31,000 --> 00:29:33,000
那不就感觉还不如再用 png 算了。

425
00:29:33,000 --> 00:29:34,000
对。

426
00:29:34,000 --> 00:29:40,000
因为 png 是之前是 apple 基于那个 true type 直接扩展的一个私有实现。

427
00:29:40,000 --> 00:29:43,000
但我不知道他现在有没有开放这个专利给别人。

428
00:29:43,000 --> 00:29:46,000
现在现在已经变成了一个普通的 open type 的格式了。

429
00:29:46,000 --> 00:29:49,000
他说不定写进 open type 标准了。

430
00:29:49,000 --> 00:29:50,000
对,写进去了。

431
00:29:50,000 --> 00:29:51,000
对。

432
00:29:51,000 --> 00:29:55,000
他他之前实现了一个表叫 sbix 吗?

433
00:29:55,000 --> 00:29:58,000
我们当然还讨论过这个表是代表了什么意思。

434
00:29:58,000 --> 00:30:06,000
就他那个缩写一直没有一个就没有一个官方的说明这个 sbix 这四个字母代表的是哪个缩写。

435
00:30:07,000 --> 00:30:09,000
其实应该是 extend 吧。

436
00:30:10,000 --> 00:30:11,000
嗯。

437
00:30:13,000 --> 00:30:14,000
bi 是什么?

438
00:30:14,000 --> 00:30:15,000
bit。

439
00:30:15,000 --> 00:30:17,000
是什么?bit 什么什么东西。

440
00:30:17,000 --> 00:30:19,000
bit index 之类的。

441
00:30:20,000 --> 00:30:22,000
你是说苹果的那个啊?

442
00:30:23,000 --> 00:30:26,000
对,苹果之前用的一个叫 sbix 的一个表。

443
00:30:26,000 --> 00:30:32,000
来实现这个 emoji 的 png 的实现方式。

444
00:30:32,000 --> 00:30:35,000
其实他不止不止支持 png 吧,他支持很多位图。

445
00:30:35,000 --> 00:30:38,000
像什么 jpeg 什么 tiff。

446
00:30:38,000 --> 00:30:42,000
还有 apple 最喜欢用的 pdf 他也是支持。

447
00:30:42,000 --> 00:30:43,000
嗯。

448
00:30:45,000 --> 00:30:56,000
因为那个他有一个彩色字体的话他有个 cbdt 的表叫 color bitmap data table。

449
00:30:56,000 --> 00:31:04,000
啊这个这个是之前那个 google 就是这个是 oven type 最早的那个自己定的一个公共标准。

450
00:31:04,000 --> 00:31:09,000
对就是有两个表一个 cbdt 一个 cblc 是吧。

451
00:31:09,000 --> 00:31:10,000
对。

452
00:31:10,000 --> 00:31:12,000
对然后两个表合起来。

453
00:31:12,000 --> 00:31:13,000
嗯。

454
00:31:14,000 --> 00:31:18,000
啊对 cblc 那个也是支持位图的是吧。

455
00:31:18,000 --> 00:31:23,000
因为 cb 的 b 就是 bitmap。

456
00:31:23,000 --> 00:31:27,000
啊所以这种也是一种位图的那个技术。

457
00:31:27,000 --> 00:31:30,000
对对都是位图的这俩都是位图。

458
00:31:30,000 --> 00:31:31,000
对对。

459
00:31:31,000 --> 00:31:35,000
那就跟那个 apple 的还不一样 apple 那个还是私有的。

460
00:31:35,000 --> 00:31:36,000
嗯。

461
00:31:36,000 --> 00:31:40,000
但是不管怎么样你可以塞这个表嘛对吧。

462
00:31:40,000 --> 00:31:42,000
对对对。

463
00:31:42,000 --> 00:31:43,000
对。

464
00:31:43,000 --> 00:31:48,000
试量图的话刚才说就是用那个 cpal 嘛就是 color palette。

465
00:31:48,000 --> 00:31:55,000
我现在在看那个文档他那个颜色是用那个叫就是 bgra。

466
00:31:55,000 --> 00:32:01,000
bgr 就是那个红绿蓝嘛就是三原色嘛。

467
00:32:01,000 --> 00:32:02,000
rgb。

468
00:32:02,000 --> 00:32:03,000
rgb。

469
00:32:03,000 --> 00:32:04,000
rgb 而已吧。

470
00:32:04,000 --> 00:32:06,000
啊随便吧。

471
00:32:06,000 --> 00:32:08,000
然后呢 a 就是那个 alpha 吧。

472
00:32:08,000 --> 00:32:10,000
好吧 rgb。

473
00:32:10,000 --> 00:32:19,000
我还是第一次意识到你呢你在你的思想里面你一直是在那脑海里面你是把 rgb 你继承 bgr 的吗。

474
00:32:19,000 --> 00:32:20,000
没有。

475
00:32:20,000 --> 00:32:23,000
因为我一直在读 rgb。

476
00:32:23,000 --> 00:32:26,000
但是对我现在照的这个文档念的。

477
00:32:26,000 --> 00:32:27,000
他是 bgr。

478
00:32:27,000 --> 00:32:28,000
他写的。

479
00:32:28,000 --> 00:32:31,000
他按字母去。

480
00:32:31,000 --> 00:32:34,000
吓我一跳。

481
00:32:34,000 --> 00:32:36,000
我也觉得念的怪怪的。

482
00:32:36,000 --> 00:32:38,000
但是他那文档里面就是这样写的。

483
00:32:38,000 --> 00:32:39,000
bgra 值。

484
00:32:39,000 --> 00:32:40,000
所以他还有一个。

485
00:32:40,000 --> 00:32:42,000
他就这样排这个色号。

486
00:32:42,000 --> 00:32:43,000
对对对。

487
00:32:43,000 --> 00:32:44,000
还有一个 alpha 通道嘛。

488
00:32:44,000 --> 00:32:45,000
我想说的是。

489
00:32:45,000 --> 00:32:51,000
就除了那个三原色那个 rgb 的话还有一个 alpha 通道就透明的嘛。

490
00:32:51,000 --> 00:32:52,000
嗯。

491
00:32:52,000 --> 00:32:59,000
所以呢就是现在呢总的来讲就是你虽然虽然在说的是字体的问题。

492
00:32:59,000 --> 00:33:05,000
可是你现在为了用 emoji 其实其实我们在讲图像和图形的问题。

493
00:33:05,000 --> 00:33:10,000
就比如说我们要讲他到底是个位图还是一个实量图的问题吗。

494
00:33:10,000 --> 00:33:11,000
对。

495
00:33:11,000 --> 00:33:14,000
所以这个东西都绞在一起了。

496
00:33:14,000 --> 00:33:17,000
以前来讲文字是文字图形是图形。

497
00:33:17,000 --> 00:33:20,000
但是这个 emoji 呢就是因为他就是一个。

498
00:33:20,000 --> 00:33:22,000
他其实是个展现形式是一个图。

499
00:33:22,000 --> 00:33:23,000
所以呢现在呢。

500
00:33:23,000 --> 00:33:29,000
在一个 open type 特性的一个字体文件里我们还要再考虑他是实量图还是。

501
00:33:29,000 --> 00:33:30,000
这印证了什么?

502
00:33:30,000 --> 00:33:33,000
这印证了中国的一句古话书画不分家。

503
00:33:42,000 --> 00:33:46,000
我觉得这个是 unicode 的一个一个贪念吧。

504
00:33:46,000 --> 00:33:50,000
就是他们太贪了他们想把什么东西都文字。

505
00:33:50,000 --> 00:33:57,000
所以没有就当年就是 emoji 要不要进 unicode 这个事情本身的话就是吵得很厉害嘛。

506
00:33:57,000 --> 00:34:01,000
就是这一个潘多拉的盒子一打开的话就就。

507
00:34:01,000 --> 00:34:08,000
无穷尽了嘛就这个也是在我们上次这个事情我们上次第一次就我觉得 unicode 吧。

508
00:34:08,000 --> 00:34:11,000
unicode 他毕竟是个 code 啊。

509
00:34:11,000 --> 00:34:17,000
这个 emoji 他不是个 code 这是这是一个非常 fundamental 的东西我觉得。

510
00:34:19,000 --> 00:34:21,000
你可以说是一种 code。

511
00:34:21,000 --> 00:34:24,000
对啊就看你什么对象来 code 啊。

512
00:34:24,000 --> 00:34:26,000
他不叫 unicode。

513
00:34:26,000 --> 00:34:29,000
对他不是一个书写系统啊。

514
00:34:29,000 --> 00:34:35,000
最典型的一个特征就是 unicode 是没有读音的。

515
00:34:35,000 --> 00:34:36,000
对。

516
00:34:36,000 --> 00:34:37,000
对吧。

517
00:34:39,000 --> 00:34:42,000
但很多符号也没有读音。

518
00:34:42,000 --> 00:34:44,000
对啊你也讲不清楚啊。

519
00:34:44,000 --> 00:34:47,000
他就是一种 code 我觉得。

520
00:34:47,000 --> 00:34:49,000
他能归到 code 里。

521
00:34:49,000 --> 00:34:51,000
他不叫 unicode。

522
00:34:51,000 --> 00:34:53,000
他就能把这个 code。

523
00:34:55,000 --> 00:34:57,000
好吧这个。

524
00:34:57,000 --> 00:34:59,000
已经他已经既成事实了。

525
00:34:59,000 --> 00:35:01,000
而且大家这么喜欢我们现在没有办法。

526
00:35:01,000 --> 00:35:04,000
再翻回去翻案展这个视频。

527
00:35:07,000 --> 00:35:13,000
然后呢现在我们再来讲另外一个问题就是很烦的一点就是有一些东西。

528
00:35:13,000 --> 00:35:19,000
他既可能是以文本形状出现又可能是以这个 emoji 形状出现的。

529
00:35:19,000 --> 00:35:21,000
比如说。

530
00:35:21,000 --> 00:35:23,000
沙漏。

531
00:35:23,000 --> 00:35:26,000
或者像那个箭头上下左右的箭头吗。

532
00:35:26,000 --> 00:35:32,000
就是原来 unicode 他已经有一部分就是文本样子的东西。

533
00:35:32,000 --> 00:35:34,000
但是呢。

534
00:35:34,000 --> 00:35:37,000
我们现在又有这个。

535
00:35:37,000 --> 00:35:39,000
表情符号版本。

536
00:35:39,000 --> 00:35:41,000
所以有时候会混在一起。

537
00:35:41,000 --> 00:35:47,000
那就要就要搞一个优先顺序和指定说啊这时候我希望他是以 emoji 的样子出现。

538
00:35:47,000 --> 00:35:50,000
或者这时候我希望他是以文本的样式实现。

539
00:35:50,000 --> 00:35:55,000
然后这个实现方式居然有很多很神奇的用法。

540
00:35:55,000 --> 00:35:58,000
我去翻了一下那个。

541
00:35:58,000 --> 00:36:01,000
这个文档啊才发现说如果你要去用这个。

542
00:36:02,000 --> 00:36:04,000
我去翻了一下那个。

543
00:36:04,000 --> 00:36:11,000
这个文档啊才发现说如果你要去指定其实是有三种做法。

544
00:36:11,000 --> 00:36:12,000
然后呢。

545
00:36:12,000 --> 00:36:17,000
其中有两种做法是特别神奇的是要去指定这个语言。

546
00:36:19,000 --> 00:36:22,000
其实说那个说到语言的话就是 language。

547
00:36:22,000 --> 00:36:25,000
大家可能如果熟悉这 htm 大家都知道吧。

548
00:36:25,000 --> 00:36:27,000
大家要进行网页的语言声明吗。

549
00:36:27,000 --> 00:36:29,000
说这个语言是什么样的。

550
00:36:29,000 --> 00:36:39,000
然后然后现在才发现 iso 就是这个 unicode 和这个国际组织居然造了一个语言。

551
00:36:39,000 --> 00:36:43,000
就是一个语言代码这个是给 emoji 的。

552
00:36:43,000 --> 00:36:44,000
哦专门给 emoji。

553
00:36:44,000 --> 00:36:46,000
对没错。

554
00:36:46,000 --> 00:36:51,000
Zsye 和 Zsym。

555
00:36:51,000 --> 00:36:54,000
这两个分别代表什么呢。

556
00:36:54,000 --> 00:36:56,000
Zsye 呢就是就是 emoji。

557
00:36:56,000 --> 00:36:58,000
emoji 那个 e 就代表 emoji。

558
00:36:58,000 --> 00:37:02,000
所以这都展示出来就是那个 emoji 符号的。

559
00:37:02,000 --> 00:37:06,000
那 Zsym 呢就是就是用文本形式。

560
00:37:06,000 --> 00:37:07,000
所以。

561
00:37:07,000 --> 00:37:08,000
Zsye 是什么意思啊。

562
00:37:08,000 --> 00:37:10,000
它没什么意思啊。

563
00:37:10,000 --> 00:37:12,000
不可能。

564
00:37:12,000 --> 00:37:13,000
啊。

565
00:37:13,000 --> 00:37:14,000
快查出来什么意思。

566
00:37:14,000 --> 00:37:15,000
没什么。

567
00:37:15,000 --> 00:37:16,000
因为什么呢。

568
00:37:16,000 --> 00:37:21,000
首先它那个 Z 后面都是一些就是就是零散用的东西。

569
00:37:21,000 --> 00:37:25,000
对那个 sy 指的是 symbol。

570
00:37:25,000 --> 00:37:29,000
那个 Z 是不是为了把它排到这个表的最最末。

571
00:37:29,000 --> 00:37:31,000
垃圾桶那堆对不对。

572
00:37:31,000 --> 00:37:32,000
对对对。

573
00:37:32,000 --> 00:37:33,000
Z 就是最最后面嘛。

574
00:37:33,000 --> 00:37:36,000
那所以呢原来的 symbolsym。

575
00:37:36,000 --> 00:37:39,000
symbol 的拼写不就是 symbol。

576
00:37:39,000 --> 00:37:40,000
对对对。

577
00:37:40,000 --> 00:37:43,000
所以那个 Zsym 呢就是。

578
00:37:43,000 --> 00:37:48,000
所以这个这个很早以前就是加入到这个规范里面来了。

579
00:37:48,000 --> 00:37:49,000
但是呢它因为是 symbol。

580
00:37:49,000 --> 00:37:52,000
它就虽然说是符号它就还是以文本形式。

581
00:37:52,000 --> 00:37:53,000
就黑白形式出现的。

582
00:37:53,000 --> 00:37:55,000
就是像像字一样的。

583
00:37:55,000 --> 00:37:58,000
然后它的那个 Zsye 呢就是 emoji。

584
00:37:58,000 --> 00:38:00,000
就像图形。

585
00:38:00,000 --> 00:38:02,000
所以呢就说你如果把这样。

586
00:38:02,000 --> 00:38:05,000
按这个表演与与跟它并列的是什么。

587
00:38:05,000 --> 00:38:07,000
比如说是汉语。

588
00:38:07,000 --> 00:38:09,000
比如说日语啊。

589
00:38:09,000 --> 00:38:11,000
日语不是 jp 吗之类的。

590
00:38:11,000 --> 00:38:13,000
你 jajp 吗。

591
00:38:13,000 --> 00:38:16,000
你把它指定成这个语言的话啊。

592
00:38:16,000 --> 00:38:17,000
它是它是日语。

593
00:38:17,000 --> 00:38:20,000
然后如果把它指定成那个。

594
00:38:20,000 --> 00:38:21,000
Zsye。

595
00:38:21,000 --> 00:38:22,000
就是 e 的话。

596
00:38:22,000 --> 00:38:24,000
它就会表演 emogie。

597
00:38:24,000 --> 00:38:25,000
对。

598
00:38:25,000 --> 00:38:27,000
你看我们的 emoji 已经。

599
00:38:27,000 --> 00:38:29,000
堂而皇之的成为一个语言了。

600
00:38:29,000 --> 00:38:32,000
所以将来要是有人拿这个。

601
00:38:32,000 --> 00:38:36,000
傻不大精拿这个语言列表来写一个 dropdown list。

602
00:38:36,000 --> 00:38:37,000
你会发现里面你可以变。

603
00:38:37,000 --> 00:38:41,000
你可以声明自己是一个 native emoji speaker。

604
00:38:41,000 --> 00:38:42,000
对啊。

605
00:38:44,000 --> 00:38:46,000
其中可能和人交流。

606
00:38:46,000 --> 00:38:49,000
不是一会说一大堆 emoji 是吧。

607
00:38:50,000 --> 00:38:51,000
怎么说嘛。

608
00:38:51,000 --> 00:38:52,000
没法说啊。

609
00:38:54,000 --> 00:38:55,000
就像盲文一样。

610
00:38:55,000 --> 00:38:57,000
盲文不是也没法说出来吗。

611
00:38:58,000 --> 00:38:59,000
这只是在那比划。

612
00:38:59,000 --> 00:39:00,000
不是不是。

613
00:39:00,000 --> 00:39:01,000
不是盲文。

614
00:39:01,000 --> 00:39:02,000
不是盲文。

615
00:39:02,000 --> 00:39:03,000
就是手语。

616
00:39:03,000 --> 00:39:04,000
手语是比划的。

617
00:39:05,000 --> 00:39:06,000
还有那个。

618
00:39:06,000 --> 00:39:07,000
那个不来页。

619
00:39:07,000 --> 00:39:08,000
不来页点。

620
00:39:08,000 --> 00:39:09,000
点字嘛。

621
00:39:09,000 --> 00:39:10,000
点点点。

622
00:39:12,000 --> 00:39:14,000
肯定大家应该可以想象。

623
00:39:14,000 --> 00:39:16,000
比如说你这样变成这个。

624
00:39:16,000 --> 00:39:19,000
如果你写到那个语言声明里面去肯定不好用。

625
00:39:19,000 --> 00:39:21,000
比如说你整个网页的网页声明。

626
00:39:21,000 --> 00:39:23,000
语言都变这个 emoji。

627
00:39:23,000 --> 00:39:24,000
它可以局部声明。

628
00:39:24,000 --> 00:39:25,000
它可以局部声明。

629
00:39:25,000 --> 00:39:26,000
对啊。

630
00:39:26,000 --> 00:39:27,000
对。

631
00:39:27,000 --> 00:39:28,000
不好用嘛。

632
00:39:28,000 --> 00:39:29,000
所以呢。

633
00:39:29,000 --> 00:39:30,000
后来才发现。

634
00:39:30,000 --> 00:39:31,000
其实呢。

635
00:39:31,000 --> 00:39:32,000
还有另外一个机制。

636
00:39:32,000 --> 00:39:33,000
那就是说。

637
00:39:33,000 --> 00:39:34,000
叫。

638
00:39:34,000 --> 00:39:39,000
unicode 它有个叫 emoji 的 locale 的 extension。

639
00:39:39,000 --> 00:39:41,000
大家知道 locale。

640
00:39:41,000 --> 00:39:42,000
我们中文。

641
00:39:42,000 --> 00:39:43,000
locale 中文叫什么。

642
00:39:43,000 --> 00:39:44,000
本地设置。

643
00:39:44,000 --> 00:39:45,000
本地化。

644
00:39:45,000 --> 00:39:48,000
本地设置的扩展。

645
00:39:48,000 --> 00:39:51,000
然后这个扩展呢。

646
00:39:51,000 --> 00:39:52,000
是。

647
00:39:52,000 --> 00:39:53,000
是。

648
00:39:53,000 --> 00:39:54,000
横杠 em。

649
00:39:54,000 --> 00:39:56,000
来进行扩展。

650
00:39:56,000 --> 00:39:57,000
所以呢。

651
00:39:57,000 --> 00:39:58,000
你可以用一个。

652
00:39:58,000 --> 00:39:59,000
比如说在一个语言里面。

653
00:39:59,000 --> 00:40:01,000
比如说是美国英语。

654
00:40:01,000 --> 00:40:02,000
英语不是 em 嘛。

655
00:40:02,000 --> 00:40:03,000
然后 hyphen。

656
00:40:03,000 --> 00:40:04,000
美国。

657
00:40:04,000 --> 00:40:06,000
然后再 hyphen。

658
00:40:06,000 --> 00:40:07,000
写个 em 就扩展。

659
00:40:07,000 --> 00:40:09,000
然后再 hyphen。

660
00:40:09,000 --> 00:40:10,000
text。

661
00:40:10,000 --> 00:40:11,000
然后就说明。

662
00:40:11,000 --> 00:40:12,000
啊。

663
00:40:12,000 --> 00:40:13,000
我这时候用的是文本文。

664
00:40:13,000 --> 00:40:14,000
文本状态的。

665
00:40:14,000 --> 00:40:16,000
那那意思是所有的这个 emoji 的符号。

666
00:40:16,000 --> 00:40:18,000
都有一个对应的文本形态的。

667
00:40:18,000 --> 00:40:19,000
这个。

668
00:40:19,000 --> 00:40:20,000
不一定。

669
00:40:20,000 --> 00:40:21,000
这个形态。

670
00:40:21,000 --> 00:40:22,000
这是有定义的。

671
00:40:22,000 --> 00:40:23,000
有些有。

672
00:40:23,000 --> 00:40:24,000
有的有的没有。

673
00:40:24,000 --> 00:40:27,000
那它这个转化规则是怎么样。

674
00:40:27,000 --> 00:40:28,000
有定义的。

675
00:40:28,000 --> 00:40:29,000
就是。

676
00:40:29,000 --> 00:40:30,000
都有定义。

677
00:40:30,000 --> 00:40:31,000
不是我的意思就是。

678
00:40:31,000 --> 00:40:35,000
比如说你看你列的这个 emusememoji。

679
00:40:35,000 --> 00:40:36,000
然后如果我要切换成。

680
00:40:36,000 --> 00:40:37,000
下面那个 text 的话。

681
00:40:37,000 --> 00:40:39,000
那哪些会被转化成。

682
00:40:39,000 --> 00:40:41,000
那种黑白的这种情况。

683
00:40:41,000 --> 00:40:42,000
啊。

684
00:40:42,000 --> 00:40:43,000
都是有定义的。

685
00:40:43,000 --> 00:40:44,000
你去看那个码表里面。

686
00:40:44,000 --> 00:40:45,000
它都写着的。

687
00:40:45,000 --> 00:40:46,000
对。

688
00:40:46,000 --> 00:40:47,000
其实就是。

689
00:40:47,000 --> 00:40:48,000
嗯。

690
00:40:48,000 --> 00:40:49,000
简单来说。

691
00:40:49,000 --> 00:40:50,000
那些。

692
00:40:50,000 --> 00:40:51,000
嗯。

693
00:40:51,000 --> 00:40:52,000
emoji 的码位。

694
00:40:52,000 --> 00:40:53,000
跟那个。

695
00:40:53,000 --> 00:40:55,000
只有纯 text 形式的这个。

696
00:40:55,000 --> 00:40:56,000
符号的码位。

697
00:40:56,000 --> 00:40:57,000
其实。

698
00:40:57,000 --> 00:40:58,000
并不是完全一样的。

699
00:40:58,000 --> 00:40:59,000
嗯。

700
00:40:59,000 --> 00:41:00,000
他们。

701
00:41:00,000 --> 00:41:03,000
实际上他们后面要多加一个。

702
00:41:03,000 --> 00:41:04,000
unicode 的一个符号。

703
00:41:04,000 --> 00:41:05,000
来区分它。

704
00:41:05,000 --> 00:41:06,000
但。

705
00:41:06,000 --> 00:41:08,000
但其实它我觉得是个历史遗留吧。

706
00:41:08,000 --> 00:41:09,000
比如说像箭头。

707
00:41:09,000 --> 00:41:10,000
这个。

708
00:41:10,000 --> 00:41:11,000
它肯定在 emoji 产生之前。

709
00:41:11,000 --> 00:41:12,000
它已经有。

710
00:41:12,000 --> 00:41:13,000
就已经有了。

711
00:41:13,000 --> 00:41:14,000
可能已经给它编码了。

712
00:41:14,000 --> 00:41:15,000
对。

713
00:41:15,000 --> 00:41:16,000
对。

714
00:41:16,000 --> 00:41:17,000
所以那个时候。

715
00:41:17,000 --> 00:41:18,000
它本来就是 text 形式的。

716
00:41:18,000 --> 00:41:19,000
那么后来。

717
00:41:19,000 --> 00:41:20,000
新加了一些 emoji 进来。

718
00:41:20,000 --> 00:41:21,000
然后发现。

719
00:41:21,000 --> 00:41:22,000
我也可以做一个 emoji 的箭头。

720
00:41:22,000 --> 00:41:23,000
然后。

721
00:41:23,000 --> 00:41:24,000
所以。

722
00:41:24,000 --> 00:41:25,000
我不知道它是不是为了节省码位。

723
00:41:25,000 --> 00:41:26,000
所以就重用了那个码位。

724
00:41:26,000 --> 00:41:27,000
再加一个。

725
00:41:27,000 --> 00:41:28,000
再加一个标志符来区分。

726
00:41:28,000 --> 00:41:29,000
它是 emoji 还是不是 emoji 的。

727
00:41:29,000 --> 00:41:30,000
那那那这里还有一个问题。

728
00:41:30,000 --> 00:41:31,000
就是说。

729
00:41:31,000 --> 00:41:32,000
如果有这个。

730
00:41:32,000 --> 00:41:33,000
有一些这个对应关系。

731
00:41:33,000 --> 00:41:34,000
它是一个一一映射呢。

732
00:41:34,000 --> 00:41:35,000
还是说。

733
00:41:35,000 --> 00:41:36,000
是一个。

734
00:41:36,000 --> 00:41:37,000
就是。

735
00:41:37,000 --> 00:41:38,000
不能。

736
00:41:38,000 --> 00:41:39,000
不可逆的一个操作。

737
00:41:39,000 --> 00:41:40,000
就是。

738
00:41:40,000 --> 00:41:41,000
我从那个 emoji。

739
00:41:41,000 --> 00:41:42,000
就是。

740
00:41:42,000 --> 00:41:43,000
就。

741
00:41:43,000 --> 00:41:44,000
干 emoji。

742
00:41:44,000 --> 00:41:45,000
这个。

743
00:41:45,000 --> 00:41:46,000
这种。

744
00:41:46,000 --> 00:41:47,000
语言的 extension。

745
00:41:47,000 --> 00:41:48,000
切换成这个 text 之后。

746
00:41:48,000 --> 00:41:49,000
还能再切回来吗。

747
00:41:49,000 --> 00:41:50,000
嗯。

748
00:41:50,000 --> 00:41:51,000
只要你的这个软件可以处理。

749
00:41:51,000 --> 00:41:52,000
然后你有相应的字体。

750
00:41:52,000 --> 00:41:53,000
就可以。

751
00:41:53,000 --> 00:41:54,000
对。

752
00:41:54,000 --> 00:41:55,000
不是我这个问题吗。

753
00:41:55,000 --> 00:41:56,000
比如说就好像那个中文的这个。

754
00:41:56,000 --> 00:41:57,000
反简的这个。

755
00:41:57,000 --> 00:41:58,000
这个转化。

756
00:41:58,000 --> 00:41:59,000
这个。

757
00:41:59,000 --> 00:42:00,000
这个。

758
00:42:00,000 --> 00:42:01,000
这个。

759
00:42:01,000 --> 00:42:02,000
这个。

760
00:42:02,000 --> 00:42:03,000
这个。

761
00:42:03,000 --> 00:42:04,000
这个。

762
00:42:04,000 --> 00:42:05,000
这个。

763
00:42:05,000 --> 00:42:06,000
这个。

764
00:42:06,000 --> 00:42:07,000
转化。

765
00:42:07,000 --> 00:42:08,000
它是不可逆的吗。

766
00:42:08,000 --> 00:42:09,000
啊。

767
00:42:09,000 --> 00:42:10,000
对。

768
00:42:10,000 --> 00:42:11,000
它这个。

769
00:42:11,000 --> 00:42:12,000
它这个其实是。

770
00:42:12,000 --> 00:42:13,000
从这个角度上来说。

771
00:42:13,000 --> 00:42:14,000
它应该是可逆的。

772
00:42:14,000 --> 00:42:15,000
它是可逆的。

773
00:42:15,000 --> 00:42:16,000
就它不会丢失信息。

774
00:42:16,000 --> 00:42:17,000
对。

775
00:42:17,000 --> 00:42:18,000
对。

776
00:42:18,000 --> 00:42:20,000
我觉得它的语意信息并没有丢失。

777
00:42:20,000 --> 00:42:21,000
因为这些东西。

778
00:42:21,000 --> 00:42:22,000
在那个。

779
00:42:22,000 --> 00:42:23,000
unicode。

780
00:42:23,000 --> 00:42:24,000
它的码位上。

781
00:42:24,000 --> 00:42:25,000
里面原来都有定义的。

782
00:42:25,000 --> 00:42:26,000
如果大家去翻。

783
00:42:26,000 --> 00:42:27,000
就是比如说那个箭头。

784
00:42:27,000 --> 00:42:28,000
啊。

785
00:42:28,000 --> 00:42:29,000
那个箭头。

786
00:42:29,000 --> 00:42:30,000
它们都会写。

787
00:42:30,000 --> 00:42:31,000
比如说。

788
00:42:31,000 --> 00:42:32,000
左箭头。

789
00:42:32,000 --> 00:42:33,000
右箭头。

790
00:42:33,000 --> 00:42:34,000
它都会有一个。

791
00:42:34,000 --> 00:42:35,000
它是什么样的。

792
00:42:35,000 --> 00:42:36,000
它是什么样的。

793
00:42:36,000 --> 00:42:37,000
它。

794
00:42:37,000 --> 00:42:38,000
嗯。

795
00:42:38,000 --> 00:42:39,000
本来在 unicode。

796
00:42:39,000 --> 00:42:40,000
码位的时候。

797
00:42:40,000 --> 00:42:41,000
它就有定义了。

798
00:42:41,000 --> 00:42:42,000
那。

799
00:42:42,000 --> 00:42:43,000
然后你在。

800
00:42:43,000 --> 00:42:44,000
在这边。

801
00:42:44,000 --> 00:42:45,000
在进行。

802
00:42:45,000 --> 00:42:46,000
这个选择的时候。

803
00:42:46,000 --> 00:42:47,000
它就依照那个定义去显示。

804
00:42:47,000 --> 00:42:48,000
就完了。

805
00:42:48,000 --> 00:42:49,000
OK。

806
00:42:49,000 --> 00:42:50,000
那也就是说。

807
00:42:50,000 --> 00:42:51,000
是一个。

808
00:42:51,000 --> 00:42:52,000
就怎么说。

809
00:42:52,000 --> 00:42:53,000
我可以这么理解吗。

810
00:42:53,000 --> 00:42:54,000
就是 emoji 的那个码位。

811
00:42:54,000 --> 00:42:56,000
对应成那种文本的形式的时候。

812
00:42:56,000 --> 00:42:57,000
它是一个。

813
00:42:57,000 --> 00:42:58,000
一对一的。

814
00:42:58,000 --> 00:42:59,000
但是有些是。

815
00:42:59,000 --> 00:43:00,000
哎。

816
00:43:00,000 --> 00:43:01,000
比较一对一。

817
00:43:01,000 --> 00:43:02,000
这叫什么来的。

818
00:43:02,000 --> 00:43:03,000
那不数学里面有一个性质。

819
00:43:03,000 --> 00:43:04,000
全硬设。

820
00:43:04,000 --> 00:43:05,000
你想说这个是吗。

821
00:43:05,000 --> 00:43:06,000
但是也不是。

822
00:43:06,000 --> 00:43:07,000
因为它有些。

823
00:43:07,000 --> 00:43:08,000
不叫全硬设。

824
00:43:08,000 --> 00:43:09,000
对应的。

825
00:43:09,000 --> 00:43:10,000
我知道。

826
00:43:10,000 --> 00:43:11,000
我知道你的这个意思。

827
00:43:11,000 --> 00:43:12,000
就是我想怎么解释这个概念。

828
00:43:12,000 --> 00:43:13,000
就是。

829
00:43:13,000 --> 00:43:14,000
有一些那种 emoji 的图案。

830
00:43:14,000 --> 00:43:15,000
图案是没有。

831
00:43:15,000 --> 00:43:16,000
没有的。

832
00:43:16,000 --> 00:43:17,000
对应的。

833
00:43:17,000 --> 00:43:18,000
文本形态的。

834
00:43:18,000 --> 00:43:19,000
但是。

835
00:43:19,000 --> 00:43:20,000
如果它有的话。

836
00:43:20,000 --> 00:43:21,000
它一定是一个一对一的关系。

837
00:43:21,000 --> 00:43:22,000
是。

838
00:43:22,000 --> 00:43:23,000
对。

839
00:43:23,000 --> 00:43:24,000
嗯。

840
00:43:24,000 --> 00:43:25,000
啊。

841
00:43:25,000 --> 00:43:26,000
明白了。

842
00:43:26,000 --> 00:43:27,000
OK。

843
00:43:27,000 --> 00:43:28,000
就现有的情况来看。

844
00:43:28,000 --> 00:43:29,000
是这样的。

845
00:43:29,000 --> 00:43:30,000
是的。

846
00:43:30,000 --> 00:43:31,000
嗯。

847
00:43:31,000 --> 00:43:32,000
嗯。

848
00:43:32,000 --> 00:43:35,000
像比如说你有一个什么西兰花的一个 emoji 的形式吗。

849
00:43:35,000 --> 00:43:38,000
但是你就没有西兰花这个这个文本形式吗。

850
00:43:38,000 --> 00:43:39,000
就是原来的那个。

851
00:43:39,000 --> 00:43:40,000
西兰花。

852
00:43:40,000 --> 00:43:41,000
对。

853
00:43:41,000 --> 00:43:42,000
它不是有西兰花吗。

854
00:43:42,000 --> 00:43:43,000
那。

855
00:43:43,000 --> 00:43:44,000
那。

856
00:43:44,000 --> 00:43:45,000
那。

857
00:43:45,000 --> 00:43:46,000
我再问一个问题啊。

858
00:43:46,000 --> 00:43:47,000
就是那个什么。

859
00:43:47,000 --> 00:43:49,000
现在 emoji 上一版不是出了各种各种肤色人种吗。

860
00:43:49,000 --> 00:43:50,000
对吧。

861
00:43:50,000 --> 00:43:51,000
啊。

862
00:43:51,000 --> 00:43:52,000
对。

863
00:43:52,000 --> 00:43:55,000
它要做成这个文本形式怎么办。

864
00:43:55,000 --> 00:43:56,000
首先。

865
00:43:56,000 --> 00:43:57,000
那个。

866
00:43:57,000 --> 00:43:58,000
啊。

867
00:43:58,000 --> 00:43:59,000
这个我们后面会讲吧。

868
00:43:59,000 --> 00:44:00,000
就是。

869
00:44:00,000 --> 00:44:01,000
就是肤色的话。

870
00:44:01,000 --> 00:44:03,000
它其实是一个肤色定义符嘛。

871
00:44:03,000 --> 00:44:04,000
我知道。

872
00:44:04,000 --> 00:44:08,000
但是就是它转化成文本之后就没有颜色这个这个表达形式了嘛。

873
00:44:08,000 --> 00:44:09,000
对吧。

874
00:44:09,000 --> 00:44:10,000
啊。

875
00:44:10,000 --> 00:44:11,000
所以它会退化成。

876
00:44:11,000 --> 00:44:12,000
呃。

877
00:44:12,000 --> 00:44:13,000
这显示出来的。

878
00:44:13,000 --> 00:44:14,000
它就变成两个两个符号。

879
00:44:14,000 --> 00:44:15,000
就是原来。

880
00:44:15,000 --> 00:44:16,000
呃。

881
00:44:16,000 --> 00:44:17,000
一个人。

882
00:44:17,000 --> 00:44:18,000
然后一个那个。

883
00:44:18,000 --> 00:44:19,000
带。

884
00:44:19,000 --> 00:44:20,000
带那个。

885
00:44:20,000 --> 00:44:21,000
啊。

886
00:44:21,000 --> 00:44:22,000
肤色符它其实就是阴影嘛。

887
00:44:22,000 --> 00:44:23,000
就是不同浓度的阴影。

888
00:44:23,000 --> 00:44:24,000
它会显示成两个。

889
00:44:24,000 --> 00:44:25,000
啊。

890
00:44:25,000 --> 00:44:26,000
啊。

891
00:44:26,000 --> 00:44:27,000
嗯。

892
00:44:27,000 --> 00:44:28,000
这这这这。

893
00:44:28,000 --> 00:44:29,000
当然也要看环境了。

894
00:44:29,000 --> 00:44:30,000
但要看环境看。

895
00:44:30,000 --> 00:44:31,000
对。

896
00:44:31,000 --> 00:44:32,000
实际上。

897
00:44:32,000 --> 00:44:33,000
实际上新造的 emoji。

898
00:44:33,000 --> 00:44:36,000
它们通常不会再特意造一个文本形式了。

899
00:44:36,000 --> 00:44:37,000
对。

900
00:44:37,000 --> 00:44:38,000
嗯。

901
00:44:38,000 --> 00:44:39,000
就那种有文本形式的。

902
00:44:39,000 --> 00:44:42,000
多半都是因为它本来是个文本符号。

903
00:44:42,000 --> 00:44:45,000
然后后来 emoji 也把它做了一个 emoji 的版本。

904
00:44:45,000 --> 00:44:46,000
嗯。

905
00:44:46,000 --> 00:44:47,000
嗯。

906
00:44:47,000 --> 00:44:48,000
所以这时候就是。

907
00:44:48,000 --> 00:44:49,000
刚发了一个页面。

908
00:44:49,000 --> 00:44:51,000
这个是我们经常会遇到的一个。

909
00:44:51,000 --> 00:44:52,000
嗯。

910
00:44:52,000 --> 00:44:53,000
符号。

911
00:44:53,000 --> 00:44:55,000
就是它原来是有这样一个纯文本形态的符号。

912
00:44:55,000 --> 00:44:57,000
但是 emoji 进到 unicode 之后。

913
00:44:57,000 --> 00:44:59,000
emoji 的部分里面也有这样一个符号。

914
00:44:59,000 --> 00:45:01,000
然后那个符号是一个图像形式的。

915
00:45:01,000 --> 00:45:02,000
嗯。

916
00:45:02,000 --> 00:45:03,000
就重了嘛。

917
00:45:03,000 --> 00:45:04,000
嗯。

918
00:45:04,000 --> 00:45:05,000
像比如说圆圈啊。

919
00:45:05,000 --> 00:45:06,000
方块啊。

920
00:45:06,000 --> 00:45:08,000
还有比如说那个上下左右箭头啊。

921
00:45:08,000 --> 00:45:09,000
就是就是重塞区嘛。

922
00:45:09,000 --> 00:45:11,000
就是都都会有这种问题。

923
00:45:11,000 --> 00:45:12,000
嗯。

924
00:45:12,000 --> 00:45:13,000
嗯。

925
00:45:13,000 --> 00:45:15,000
然后再接着讲就是。

926
00:45:15,000 --> 00:45:19,000
然后大家发现说如果我要切换这个普通字符和 emoji。

927
00:45:19,000 --> 00:45:21,000
都要靠语言来讲的话。

928
00:45:21,000 --> 00:45:22,000
的确是太坑了。

929
00:45:22,000 --> 00:45:24,000
于是大家就想出了第三种办法。

930
00:45:24,000 --> 00:45:25,000
就是。

931
00:45:25,000 --> 00:45:26,000
就是。

932
00:45:26,000 --> 00:45:28,000
应该乖乖的用 vs。

933
00:45:28,000 --> 00:45:30,000
vs 是叫什么?

934
00:45:30,000 --> 00:45:32,000
叫 variation sequence。

935
00:45:32,000 --> 00:45:33,000
叫什么?

936
00:45:33,000 --> 00:45:35,000
变体序列。

937
00:45:35,000 --> 00:45:36,000
变体序列。

938
00:45:36,000 --> 00:45:37,000
没错。

939
00:45:37,000 --> 00:45:38,000
对。

940
00:45:38,000 --> 00:45:39,000
嗯。

941
00:45:39,000 --> 00:45:40,000
所以呢。

942
00:45:40,000 --> 00:45:41,000
就不能切换语言。

943
00:45:41,000 --> 00:45:43,000
那它就另外再加个变体序列。

944
00:45:43,000 --> 00:45:45,000
它之后是要序列。

945
00:45:45,000 --> 00:45:48,000
就是说我在这个原来这个码位后面再加一个码位。

946
00:45:48,000 --> 00:45:50,000
让它变成一个序列。

947
00:45:50,000 --> 00:45:52,000
然后补充说明说。

948
00:45:52,000 --> 00:45:54,000
我这时候要的是。

949
00:45:55,000 --> 00:45:56,000
普通字符的形状。

950
00:45:56,000 --> 00:45:57,000
或者说。

951
00:45:57,000 --> 00:46:00,000
我规定要用这个 emoji 的形状。

952
00:46:00,000 --> 00:46:01,000
为此。

953
00:46:01,000 --> 00:46:04,000
这个 unicode 专门指定的。

954
00:46:04,000 --> 00:46:07,000
在 unicode 有好多好多的变体序列符。

955
00:46:07,000 --> 00:46:08,000
符号。

956
00:46:08,000 --> 00:46:10,000
然后有好多的 vs。

957
00:46:10,000 --> 00:46:11,000
然后它就指定。

958
00:46:11,000 --> 00:46:13,000
第 15 号的 vs。

959
00:46:13,000 --> 00:46:15,000
用来指定。

960
00:46:15,000 --> 00:46:16,000
代表。

961
00:46:16,000 --> 00:46:19,000
是来指定用文本形式显示。

962
00:46:19,000 --> 00:46:22,000
第 16 号的 vs 是用表情符号显示。

963
00:46:22,000 --> 00:46:23,000
所以你只要这样。

964
00:46:23,000 --> 00:46:24,000
比如说一个。

965
00:46:24,000 --> 00:46:26,000
在一个左箭头里面。

966
00:46:26,000 --> 00:46:27,000
后面再补一个。

967
00:46:27,000 --> 00:46:29,000
加一个 15 号的这个。

968
00:46:29,000 --> 00:46:32,000
这个变体序列的话。

969
00:46:32,000 --> 00:46:33,000
那最后就是。

970
00:46:33,000 --> 00:46:34,000
强制说啊。

971
00:46:34,000 --> 00:46:36,000
我这前面这个码位。

972
00:46:36,000 --> 00:46:38,000
一定要有文本形式来显示。

973
00:46:38,000 --> 00:46:40,000
那其实就是说我后面补充说明。

974
00:46:40,000 --> 00:46:42,000
加了一个码位吗?

975
00:46:42,000 --> 00:46:44,000
所有这些加码位会变成什么样子呢?

976
00:46:44,000 --> 00:46:47,000
在这个 unicode 的这个码位表里面。

977
00:46:47,000 --> 00:46:49,000
也都是有定义的。

978
00:46:49,000 --> 00:46:51,000
OK。

979
00:46:51,000 --> 00:46:55,000
这个其实我们 tib 的网站上也出了好多这个问题。

980
00:46:55,000 --> 00:46:56,000
对吧?

981
00:46:56,000 --> 00:47:00,000
这个就是我刚刚给你们发了一个。

982
00:47:00,000 --> 00:47:02,000
那个网页链接里。

983
00:47:02,000 --> 00:47:03,000
这是我们在这个。

984
00:47:03,000 --> 00:47:06,000
我们经常写博客可能会用到的这样一个字符。

985
00:47:06,000 --> 00:47:07,000
比如说。

986
00:47:07,000 --> 00:47:09,000
你用一些 markdown 的编辑词。

987
00:47:09,000 --> 00:47:11,000
如果你写一个角柱。

988
00:47:11,000 --> 00:47:12,000
他帮你自动生成那个。

989
00:47:12,000 --> 00:47:15,000
角柱的那个跳转回去的。

990
00:47:15,000 --> 00:47:17,000
那个符号他会加上这个符号。

991
00:47:17,000 --> 00:47:19,000
然后这个符号恰好就是。

992
00:47:19,000 --> 00:47:20,000
回车吗?

993
00:47:20,000 --> 00:47:22,000
就像那个回车的那个。

994
00:47:22,000 --> 00:47:24,000
他是一个返回符号。

995
00:47:24,000 --> 00:47:25,000
就是一个返回箭头。

996
00:47:25,000 --> 00:47:26,000
类似这样一个。

997
00:47:26,000 --> 00:47:28,000
然后这个符号恰好就是。

998
00:47:28,000 --> 00:47:30,000
就是我们遇到的那种。

999
00:47:30,000 --> 00:47:33,000
他本身有一个 text 形式的。

1000
00:47:33,000 --> 00:47:36,000
但是他也有一个 emoji 形式的这样一个符号。

1001
00:47:36,000 --> 00:47:37,000
然后。

1002
00:47:37,000 --> 00:47:38,000
这种符号。

1003
00:47:38,000 --> 00:47:43,000
如果我们用了这个正确的 vs 来指定他强制显示哪一种形式的话。

1004
00:47:43,000 --> 00:47:46,000
那么现代的操作系统和浏览器都会显示的对。

1005
00:47:46,000 --> 00:47:48,000
但如果你没有加这个 vs。

1006
00:47:48,000 --> 00:47:50,000
也就是我只放了这个。

1007
00:47:50,000 --> 00:47:51,000
马位。

1008
00:47:51,000 --> 00:47:52,000
马位的。

1009
00:47:52,000 --> 00:47:53,000
对对对。

1010
00:47:53,000 --> 00:47:55,000
就没有后面加更多的东西。

1011
00:47:55,000 --> 00:47:59,000
那么在不同的环境中有的时候会显示的不一致。

1012
00:47:59,000 --> 00:48:01,000
谁知道他会变成什么样子。

1013
00:48:01,000 --> 00:48:03,000
就是如果你不指定的话。

1014
00:48:03,000 --> 00:48:05,000
其实这应该算是一个。

1015
00:48:05,000 --> 00:48:07,000
应该算是一个实现的错误吧。

1016
00:48:07,000 --> 00:48:08,000
我觉得。

1017
00:48:08,000 --> 00:48:10,000
就是我们现在发现不一致的。

1018
00:48:10,000 --> 00:48:11,000
最明显的就是。

1019
00:48:11,000 --> 00:48:12,000
iOS 的这个 safari。

1020
00:48:12,000 --> 00:48:14,000
或者说他的 webview 上面。

1021
00:48:14,000 --> 00:48:15,000
会出现这个。

1022
00:48:15,000 --> 00:48:17,000
优先显示 emoji 形态的这种情况。

1023
00:48:17,000 --> 00:48:20,000
那么按照 unicode 标准的这个定义来说。

1024
00:48:20,000 --> 00:48:23,000
他应该是优先显示成文本形式的。

1025
00:48:24,000 --> 00:48:26,000
但这个可能是当时。

1026
00:48:26,000 --> 00:48:27,000
我不知道是不是。

1027
00:48:27,000 --> 00:48:28,000
苹果。

1028
00:48:28,000 --> 00:48:30,000
苹果为了秀他的这个 emoji 字体。

1029
00:48:30,000 --> 00:48:33,000
所以将尽可能能显示成 emoji 符号的。

1030
00:48:33,000 --> 00:48:35,000
字符都显示成。

1031
00:48:35,000 --> 00:48:36,000
对。

1032
00:48:36,000 --> 00:48:37,000
就是在 iOS 嘛。

1033
00:48:37,000 --> 00:48:39,000
在移动端的话就尽量都。

1034
00:48:39,000 --> 00:48:41,000
都显示成这个 emoji 了吗。

1035
00:48:41,000 --> 00:48:42,000
对。

1036
00:48:42,000 --> 00:48:45,000
但 Mac 上的这个 safari 就没有这个问题。

1037
00:48:45,000 --> 00:48:46,000
嗯。

1038
00:48:46,000 --> 00:48:48,000
所以我。

1039
00:48:48,000 --> 00:48:49,000
与其这样。

1040
00:48:49,000 --> 00:48:51,000
不可控我还不如说。

1041
00:48:51,000 --> 00:48:53,000
硬加上这个指定符。

1042
00:48:53,000 --> 00:48:55,000
让他强制指定变成。

1043
00:48:55,000 --> 00:48:57,000
我所要的样子。

1044
00:48:57,000 --> 00:48:58,000
对。

1045
00:48:58,000 --> 00:49:00,000
所以加的这个东西就叫 vs。

1046
00:49:00,000 --> 00:49:02,000
就叫变体序列。

1047
00:49:02,000 --> 00:49:03,000
而且呢。

1048
00:49:03,000 --> 00:49:05,000
注意这个变体序列。

1049
00:49:05,000 --> 00:49:07,000
他也是一个特殊的控制符。

1050
00:49:07,000 --> 00:49:10,000
对于可能熟悉。

1051
00:49:10,000 --> 00:49:13,000
什么中汉字什么一体字的朋友。

1052
00:49:13,000 --> 00:49:15,000
就经常会想到那个什么。

1053
00:49:15,000 --> 00:49:17,000
我们叫什么一体字的变。

1054
00:49:17,000 --> 00:49:18,000
表意字的。

1055
00:49:18,000 --> 00:49:19,000
一体字序列。

1056
00:49:19,000 --> 00:49:21,000
那个就是 Ivs。

1057
00:49:21,000 --> 00:49:22,000
就是这个。

1058
00:49:22,000 --> 00:49:24,000
ideographic。

1059
00:49:24,000 --> 00:49:25,000
表意字的。

1060
00:49:25,000 --> 00:49:26,000
变体序列。

1061
00:49:26,000 --> 00:49:28,000
就经常比如说。

1062
00:49:28,000 --> 00:49:31,000
比如说回字有四种写法。

1063
00:49:31,000 --> 00:49:32,000
那现在呢。

1064
00:49:32,000 --> 00:49:33,000
就有这个 Ivs。

1065
00:49:33,000 --> 00:49:35,000
在一个汉字后面。

1066
00:49:35,000 --> 00:49:36,000
补上。

1067
00:49:36,000 --> 00:49:38,000
各种各样的给他编号。

1068
00:49:38,000 --> 00:49:39,000
一号。

1069
00:49:39,000 --> 00:49:40,000
一号回字。

1070
00:49:40,000 --> 00:49:41,000
二号回字。

1071
00:49:41,000 --> 00:49:42,000
三号回字。

1072
00:49:42,000 --> 00:49:43,000
四号回字。

1073
00:49:43,000 --> 00:49:45,000
强制指定让他显示成。

1074
00:49:45,000 --> 00:49:47,000
这个某个一体字的样子。

1075
00:49:47,000 --> 00:49:48,000
这个东西的话。

1076
00:49:48,000 --> 00:49:50,000
其实在现在。

1077
00:49:50,000 --> 00:49:52,000
因为在日本的需求是。

1078
00:49:52,000 --> 00:49:53,000
非常大的。

1079
00:49:53,000 --> 00:49:54,000
现在呢。

1080
00:49:54,000 --> 00:49:56,000
就新的这个操作平台。

1081
00:49:56,000 --> 00:49:58,000
和环境里面都可以实现了。

1082
00:49:58,000 --> 00:50:00,000
反正在中国国内的话。

1083
00:50:00,000 --> 00:50:02,000
因为对一体字的要求不是很多。

1084
00:50:02,000 --> 00:50:03,000
所以呢。

1085
00:50:03,000 --> 00:50:04,000
倒不是。

1086
00:50:04,000 --> 00:50:06,000
支持的。

1087
00:50:06,000 --> 00:50:07,000
很广泛。

1088
00:50:07,000 --> 00:50:09,000
我插一个问题。

1089
00:50:09,000 --> 00:50:10,000
就是。

1090
00:50:10,000 --> 00:50:13,000
你日人民最喜欢用的 MG 是哪一个?

1091
00:50:14,000 --> 00:50:16,000
这问题好难哦。

1092
00:50:16,000 --> 00:50:18,000
之前不是评选过吗?

1093
00:50:18,000 --> 00:50:20,000
就是全球有什么?

1094
00:50:20,000 --> 00:50:22,000
苹果是那个笑哭的。

1095
00:50:22,000 --> 00:50:24,000
笑哭是全球。

1096
00:50:24,000 --> 00:50:25,000
全球的是吧?

1097
00:50:25,000 --> 00:50:27,000
全球最喜欢用的。

1098
00:50:27,000 --> 00:50:29,000
我也是高评用那个。

1099
00:50:30,000 --> 00:50:31,000
日本的。

1100
00:50:31,000 --> 00:50:32,000
有吗?

1101
00:50:32,000 --> 00:50:33,000
我不知道。

1102
00:50:33,000 --> 00:50:35,000
他好像有专门评论。

1103
00:50:35,000 --> 00:50:38,000
就是选那个全球每个国家的。

1104
00:50:38,000 --> 00:50:39,000
就是。

1105
00:50:40,000 --> 00:50:41,000
哪一个国家是。

1106
00:50:41,000 --> 00:50:42,000
最喜欢用那个拜。

1107
00:50:42,000 --> 00:50:44,000
用手拜拜的那个姿势。

1108
00:50:44,000 --> 00:50:45,000
哦。

1109
00:50:45,000 --> 00:50:46,000
那不是太国吗?

1110
00:50:46,000 --> 00:50:47,000
中国吗?

1111
00:50:47,000 --> 00:50:48,000
好像不是太国。

1112
00:50:48,000 --> 00:50:49,000
到拜拜。

1113
00:50:49,000 --> 00:50:52,000
就是说太国人不是每说一句话都要合掌吗?

1114
00:50:52,000 --> 00:50:53,000
你打感谢会出来那个。

1115
00:50:54,000 --> 00:50:55,000
所有。

1116
00:50:55,000 --> 00:50:57,000
太国人说话都必须要合掌。

1117
00:50:57,000 --> 00:51:00,000
我不觉得那肯定是太国或者东南亚人民。

1118
00:51:00,000 --> 00:51:01,000
自己。

1119
00:51:01,000 --> 00:51:02,000
对。

1120
00:51:02,000 --> 00:51:03,000
就是太国看新闻。

1121
00:51:03,000 --> 00:51:04,000
他们那个。

1122
00:51:04,000 --> 00:51:06,000
主持人结束之后都要拜拜一下。

1123
00:51:06,000 --> 00:51:07,000
双手合声。

1124
00:51:07,000 --> 00:51:09,000
那普通人说话就是必须的。

1125
00:51:09,000 --> 00:51:12,000
平时有时候两个太国人在街上。

1126
00:51:12,000 --> 00:51:14,000
你不说也是还还蛮正常的。

1127
00:51:14,000 --> 00:51:17,000
理论上讲就必须得要的。

1128
00:51:17,000 --> 00:51:20,000
就是你说但是不合掌的话。

1129
00:51:20,000 --> 00:51:22,000
这个就就等于就。

1130
00:51:22,000 --> 00:51:23,000
不在意。

1131
00:51:23,000 --> 00:51:24,000
不礼貌是吧?

1132
00:51:24,000 --> 00:51:26,000
就是没有在打招呼。

1133
00:51:26,000 --> 00:51:27,000
其实就是感觉。

1134
00:51:27,000 --> 00:51:28,000
OK。

1135
00:51:28,000 --> 00:51:29,000
对于太国人来讲。

1136
00:51:29,000 --> 00:51:30,000
就是。

1137
00:51:31,000 --> 00:51:32,000
我为什么说这个。

1138
00:51:32,000 --> 00:51:34,000
所以你查到那个。

1139
00:51:34,000 --> 00:51:35,000
我忽然想到那个。

1140
00:51:35,000 --> 00:51:36,000
对。

1141
00:51:36,000 --> 00:51:37,000
最受欢迎的 A-MOD。

1142
00:51:37,000 --> 00:51:38,000
对。

1143
00:51:38,000 --> 00:51:39,000
最受欢迎的 A-MOD。

1144
00:51:39,000 --> 00:51:40,000
日本最受欢迎。

1145
00:51:40,000 --> 00:51:41,000
因为你刚才说到那个。

1146
00:51:41,000 --> 00:51:44,000
日本人对 A-MOD 的需求很高吗?

1147
00:51:44,000 --> 00:51:46,000
我刚才说的是。

1148
00:51:46,000 --> 00:51:49,000
日本人对那个一体字的需求很高。

1149
00:51:49,000 --> 00:51:50,000
一体字。

1150
00:51:50,000 --> 00:51:51,000
Sorry。

1151
00:51:53,000 --> 00:51:55,000
日本现在都都流行用那个。

1152
00:51:55,000 --> 00:51:56,000
各种贴纸。

1153
00:51:56,000 --> 00:51:57,000
是吧?

1154
00:51:57,000 --> 00:51:58,000
已经不用 MOD。

1155
00:51:58,000 --> 00:51:59,000
如果那样你看了。

1156
00:51:59,000 --> 00:52:00,000
如果你用 LINE 的话。

1157
00:52:00,000 --> 00:52:02,000
那大家都是还是用贴纸。

1158
00:52:02,000 --> 00:52:03,000
对吧?

1159
00:52:03,000 --> 00:52:05,000
就是就像。

1160
00:52:05,000 --> 00:52:08,000
用微信的同学都都用贴图吗?

1161
00:52:09,000 --> 00:52:10,000
对。

1162
00:52:11,000 --> 00:52:12,000
表情包。

1163
00:52:12,000 --> 00:52:14,000
我一度是从来不贴图。

1164
00:52:14,000 --> 00:52:15,000
好烦。

1165
00:52:16,000 --> 00:52:17,000
好吧。

1166
00:52:17,000 --> 00:52:19,000
我们还是说回 A-MOD。

1167
00:52:19,000 --> 00:52:20,000
那我们下一个话题呢。

1168
00:52:20,000 --> 00:52:23,000
就是合成 A-MOD 的问题。

1169
00:52:23,000 --> 00:52:24,000
就是说不是。

1170
00:52:24,000 --> 00:52:27,000
并不是一个 A-MOD 就对应一个码位。

1171
00:52:27,000 --> 00:52:28,000
而且呢。

1172
00:52:28,000 --> 00:52:30,000
这个 A-MOD 的合成还有各种各样的问题。

1173
00:52:30,000 --> 00:52:33,000
我们上次并没有就说清楚。

1174
00:52:33,000 --> 00:52:35,000
所以这次再跟大家总的来讲一下。

1175
00:52:35,000 --> 00:52:37,000
因为上次说的零零碎碎的。

1176
00:52:39,000 --> 00:52:40,000
首先呢。

1177
00:52:40,000 --> 00:52:41,000
就是 A-MOD 里面有单体。

1178
00:52:41,000 --> 00:52:43,000
然后就是还有这合成。

1179
00:52:43,000 --> 00:52:45,000
就是所谓的 A-MODSEQUENCE。

1180
00:52:45,000 --> 00:52:46,000
就是有序列。

1181
00:52:46,000 --> 00:52:47,000
那序列里面呢。

1182
00:52:47,000 --> 00:52:49,000
基本的常用的序列。

1183
00:52:49,000 --> 00:52:51,000
常用的话是有三个。

1184
00:52:51,000 --> 00:52:52,000
一个呢。

1185
00:52:52,000 --> 00:52:54,000
是叫做 Combining Sequence。

1186
00:52:54,000 --> 00:52:55,000
叫组合序列。

1187
00:52:55,000 --> 00:52:57,000
那就比如说那个键位。

1188
00:52:57,000 --> 00:52:59,000
比如说那个键帽。

1189
00:52:59,000 --> 00:53:02,000
比如说这个键盘。

1190
00:53:02,000 --> 00:53:05,000
比如说像那个电话的键盘。

1191
00:53:05,000 --> 00:53:08,000
数字 12356789 还有锦号。

1192
00:53:08,000 --> 00:53:12,000
如果后面加上那个 2013。

1193
00:53:12,000 --> 00:53:13,000
2013。

1194
00:53:13,000 --> 00:53:14,000
2013。

1195
00:53:14,000 --> 00:53:15,000
2013。

1196
00:53:15,000 --> 00:53:16,000
2013。

1197
00:53:16,000 --> 00:53:17,000
2013。

1198
00:53:17,000 --> 00:53:18,000
这个键。

1199
00:53:18,000 --> 00:53:19,000
它叫 Keycap。

1200
00:53:19,000 --> 00:53:20,000
就是那个键帽。

1201
00:53:20,000 --> 00:53:21,000
这个码位。

1202
00:53:21,000 --> 00:53:23,000
它会自动组合成。

1203
00:53:23,000 --> 00:53:25,000
一个就比如 1 号键。

1204
00:53:25,000 --> 00:53:27,000
的这样的一个 A-MODSEQUENCE。

1205
00:53:27,000 --> 00:53:28,000
所以呢。

1206
00:53:28,000 --> 00:53:31,000
你看上去是一个 1 号键的一个 A-MODSEQUENCE。

1207
00:53:31,000 --> 00:53:32,000
可是它实际上呢。

1208
00:53:32,000 --> 00:53:34,000
它是一个数字 1 的一个码位。

1209
00:53:34,000 --> 00:53:35,000
和键帽。

1210
00:53:35,000 --> 00:53:36,000
这两个码位。

1211
00:53:36,000 --> 00:53:38,000
组合而成的。

1212
00:53:39,000 --> 00:53:42,000
这个是这个所谓的组合 sequence。

1213
00:53:42,000 --> 00:53:43,000
第二个呢。

1214
00:53:43,000 --> 00:53:46,000
就是大家经常常见的这 MODIFSEQUENCE。

1215
00:53:46,000 --> 00:53:48,000
就是比如说那个肤色。

1216
00:53:48,000 --> 00:53:51,000
会在凡是和这个人脸有关系的。

1217
00:53:51,000 --> 00:53:52,000
这个图。

1218
00:53:52,000 --> 00:53:53,000
后面呢。

1219
00:53:53,000 --> 00:53:54,000
可以加。

1220
00:53:54,000 --> 00:53:55,000
肤色的话。

1221
00:53:55,000 --> 00:53:57,000
可以加一个人脸。

1222
00:53:57,000 --> 00:53:58,000
这个图。

1223
00:53:58,000 --> 00:53:59,000
后面呢。

1224
00:53:59,000 --> 00:54:00,000
可以加。

1225
00:54:00,000 --> 00:54:01,000
肤色的话。

1226
00:54:01,000 --> 00:54:03,000
是现在有几层啊。

1227
00:54:03,000 --> 00:54:04,000
123456。

1228
00:54:04,000 --> 00:54:06,000
6 个层度。

1229
00:54:06,000 --> 00:54:07,000
6 个层度是吧。

1230
00:54:07,000 --> 00:54:08,000
好像。

1231
00:54:08,000 --> 00:54:09,000
6 个黑度。

1232
00:54:09,000 --> 00:54:10,000
好吧。

1233
00:54:10,000 --> 00:54:11,000
6 个黑度。

1234
00:54:11,000 --> 00:54:13,000
FITZPATRICK。

1235
00:54:14,000 --> 00:54:16,000
定义的 6 个层度。

1236
00:54:16,000 --> 00:54:18,000
由白到黑。

1237
00:54:18,000 --> 00:54:19,000
所以呢。

1238
00:54:19,000 --> 00:54:20,000
甚至呢。

1239
00:54:20,000 --> 00:54:21,000
就是这个人。

1240
00:54:21,000 --> 00:54:22,000
不仅是人的脸。

1241
00:54:22,000 --> 00:54:24,000
包括人的各种器官。

1242
00:54:24,000 --> 00:54:25,000
包括手啊。

1243
00:54:25,000 --> 00:54:26,000
腿啊。

1244
00:54:26,000 --> 00:54:27,000
比如说鼓掌。

1245
00:54:27,000 --> 00:54:29,000
那个也可以的。

1246
00:54:29,000 --> 00:54:30,000
哪些可以加。

1247
00:54:30,000 --> 00:54:31,000
哪些可以不加。

1248
00:54:31,000 --> 00:54:32,000
在这个 UNICODE。

1249
00:54:32,000 --> 00:54:34,000
也是有定义的。

1250
00:54:34,000 --> 00:54:37,000
就是说这个范围内的。

1251
00:54:37,000 --> 00:54:40,000
东西是可以配合这个肤色。

1252
00:54:40,000 --> 00:54:42,000
肤色定义服的。

1253
00:54:42,000 --> 00:54:43,000
所以呢。

1254
00:54:43,000 --> 00:54:44,000
你可以。

1255
00:54:44,000 --> 00:54:46,000
所以圣诞老人好像。

1256
00:54:46,000 --> 00:54:47,000
老人也是可以的嘛。

1257
00:54:47,000 --> 00:54:48,000
因此呢。

1258
00:54:48,000 --> 00:54:49,000
圣诞老人。

1259
00:54:49,000 --> 00:54:51,000
也有各种各样的肤色的版本。

1260
00:54:51,000 --> 00:54:53,000
黑人圣诞老人。

1261
00:54:53,000 --> 00:54:55,000
但是梅花露就没有啊。

1262
00:54:55,000 --> 00:54:56,000
对不对。

1263
00:54:56,000 --> 00:54:57,000
那个露的话。

1264
00:54:57,000 --> 00:55:00,000
是不能配合这个人的肤色的版本。

1265
00:55:00,000 --> 00:55:01,000
所以呢。

1266
00:55:01,000 --> 00:55:02,000
有的是可以加。

1267
00:55:02,000 --> 00:55:03,000
有的不能加。

1268
00:55:03,000 --> 00:55:04,000
能不能加。

1269
00:55:04,000 --> 00:55:05,000
是事先有定义的。

1270
00:55:05,000 --> 00:55:06,000
然后呢。

1271
00:55:06,000 --> 00:55:07,000
然后。

1272
00:55:07,000 --> 00:55:08,000
太坑。

1273
00:55:08,000 --> 00:55:09,000
第三个主要。

1274
00:55:09,000 --> 00:55:10,000
为什么你们笑那么奇怪。

1275
00:55:10,000 --> 00:55:11,000
第三个。

1276
00:55:11,000 --> 00:55:12,000
笑点是什么。

1277
00:55:12,000 --> 00:55:13,000
你解释一下。

1278
00:55:13,000 --> 00:55:14,000
我以为我只能上下。

1279
00:55:14,000 --> 00:55:15,000
没有没有。

1280
00:55:15,000 --> 00:55:16,000
自行自行。

1281
00:55:16,000 --> 00:55:17,000
因为我刚才举例的不好。

1282
00:55:17,000 --> 00:55:18,000
我应该说。

1283
00:55:18,000 --> 00:55:19,000
我刚才举例的不好。

1284
00:55:19,000 --> 00:55:20,000
我应该说。

1285
00:55:20,000 --> 00:55:21,000
我刚才举例的不好。

1286
00:55:21,000 --> 00:55:22,000
我刚才举例的不好。

1287
00:55:22,000 --> 00:55:23,000
我刚才举例的不好。

1288
00:55:23,000 --> 00:55:24,000
我刚才举例的不好。

1289
00:55:24,000 --> 00:55:25,000
我该说。

1290
00:55:25,000 --> 00:55:28,000
比如说鱼也是不能加上肤色的。

1291
00:55:28,000 --> 00:55:29,000
比如说黑鱼就变成烤鱼。

1292
00:55:30,000 --> 00:55:31,000
是吧。

1293
00:55:32,000 --> 00:55:33,000
对啊。

1294
00:55:33,000 --> 00:55:34,000
其实。

1295
00:55:34,000 --> 00:55:35,000
如果我们仔细想想。

1296
00:55:35,000 --> 00:55:36,000
这个问题。

1297
00:55:36,000 --> 00:55:37,000
还蛮可笑的。

1298
00:55:37,000 --> 00:55:38,000
就是。

1299
00:55:38,000 --> 00:55:39,000
凭什么 unicode 规定了。

1300
00:55:39,000 --> 00:55:41,000
哪个东西能加肤色。

1301
00:55:41,000 --> 00:55:42,000
哪个东西不能加肤色。

1302
00:55:43,000 --> 00:55:44,000
就实际上。

1303
00:55:44,000 --> 00:55:45,000
如果我有一个私有的识识。

1304
00:55:45,000 --> 00:55:46,000
unicode 最终掌握。

1305
00:55:46,000 --> 00:55:48,000
所有的种族问题的生杀大权。

1306
00:55:50,000 --> 00:55:51,000
而且肤色没有。

1307
00:55:51,000 --> 00:55:52,000
不是啊。

1308
00:55:52,000 --> 00:55:53,000
出血拳就是坏拳

1309
00:55:53,000 --> 00:55:56,000
对,就这个肤色而且没有任何的意义

1310
00:55:56,000 --> 00:55:58,000
你肤色也不能区分种族什么的

1311
00:55:58,000 --> 00:56:01,000
对,就是你不能严格的用肤色来区分种族

1312
00:56:01,000 --> 00:56:03,000
嗯,所以就没有任何的意义

1313
00:56:03,000 --> 00:56:05,000
嗯,反正这个事情很扯的啊

1314
00:56:06,000 --> 00:56:10,000
然后接着讲第三种就是 emoji 的 flag sequence

1315
00:56:10,000 --> 00:56:12,000
flag 就是旗帜啊

1316
00:56:12,000 --> 00:56:14,000
这次这个好像我们上次没说过

1317
00:56:14,000 --> 00:56:16,000
比如说我们看起来啊

1318
00:56:16,000 --> 00:56:20,000
比如说中国的国旗是一个 emoji

1319
00:56:20,000 --> 00:56:24,000
但是它的背后其实是至少是三个码位

1320
00:56:25,000 --> 00:56:27,000
首先是一个旗,一个空旗

1321
00:56:28,000 --> 00:56:30,000
就代表一个旗帜的一个码位

1322
00:56:30,000 --> 00:56:33,000
然后加上比如说中国是 CN 对吧

1323
00:56:33,000 --> 00:56:36,000
就是这个区,它有个专门

1324
00:56:36,000 --> 00:56:38,000
ISO 的那个国家代码

1325
00:56:38,000 --> 00:56:42,000
对,对,它有专门的一个叫 regional indicator

1326
00:56:43,000 --> 00:56:47,000
这叫什么区域指示符的这样一个东西

1327
00:56:47,000 --> 00:56:50,000
其实这个区域指示符就是 26 个字母

1328
00:56:51,000 --> 00:56:57,000
然后就专用的就是这个专门用在旗帜上的这种组合的

1329
00:56:57,000 --> 00:57:01,000
那比如说这个旗帜

1330
00:57:01,000 --> 00:57:03,000
然后旗帜专用的 C,旗帜专用的 N

1331
00:57:03,000 --> 00:57:06,000
那就是 CN 的旗,也就是中国的旗

1332
00:57:06,000 --> 00:57:11,000
然后呢这三个码位拼在一起的话

1333
00:57:11,000 --> 00:57:13,000
显示出来是中国的国旗

1334
00:57:13,000 --> 00:57:15,000
但是它背后是三个码位

1335
00:57:16,000 --> 00:57:17,000
那你说第三个是什么来着

1336
00:57:18,000 --> 00:57:18,000
第三个是什么

1337
00:57:19,000 --> 00:57:19,000
嗯?

1338
00:57:20,000 --> 00:57:22,000
就开始是一个空旗嘛,然后是国家代码嘛

1339
00:57:22,000 --> 00:57:23,000
第三个是什么

1340
00:57:23,000 --> 00:57:27,000
国家代表是两个数,两个拉丁字母

1341
00:57:27,000 --> 00:57:30,000
比如说 CN,三个,三个,哦明白

1342
00:57:30,000 --> 00:57:32,000
也不够用啊

1343
00:57:33,000 --> 00:57:35,000
所以这个也是有定义的

1344
00:57:35,000 --> 00:57:38,000
也的确是不够用,但是还是有定义的

1345
00:57:38,000 --> 00:57:39,000
好吧

1346
00:57:40,000 --> 00:57:43,000
然后这还会涉及到后面的东西

1347
00:57:44,000 --> 00:57:50,000
然后就是主要的常用的 Emoji 就是这三种了

1348
00:57:50,000 --> 00:57:53,000
然后还有字要的就是各种扩展型的

1349
00:57:53,000 --> 00:57:55,000
扩展型的就比如说最近的 AOC

1350
00:57:55,000 --> 00:58:00,000
它现在经常加的比如说各种家族

1351
00:58:00,000 --> 00:58:03,000
和各种家庭还有职业的这种 Emoji

1352
00:58:04,000 --> 00:58:05,000
这种 Emoji 是自由组合的

1353
00:58:05,000 --> 00:58:09,000
所以有的字体有,有的字体没有

1354
00:58:10,000 --> 00:58:14,000
比如说现在这些家的各种各样的家庭

1355
00:58:14,000 --> 00:58:18,000
不是现在奇怪的家庭组合

1356
00:58:18,000 --> 00:58:23,000
两个男人和一个男孩组成的家庭

1357
00:58:23,000 --> 00:58:25,000
所以大家去翻那个家庭不有各种样组合吗

1358
00:58:26,000 --> 00:58:29,000
一个男人和一个女人组合

1359
00:58:29,000 --> 00:58:32,000
然后带两个男孩就这样子

1360
00:58:32,000 --> 00:58:33,000
因为各有各种各样的家庭

1361
00:58:33,000 --> 00:58:35,000
所以给它拼合起来

1362
00:58:35,000 --> 00:58:39,000
这个拼合用的是一个 ZWJ

1363
00:58:39,000 --> 00:58:42,000
就是我们所说的那个叫什么

1364
00:58:42,000 --> 00:58:46,000
宁宽组合宁宽集合器是吧

1365
00:58:46,000 --> 00:58:49,000
Zero-Wiz Joiner

1366
00:58:49,000 --> 00:58:51,000
Joiner

1367
00:58:51,000 --> 00:58:54,000
所以呢像比如说我刚才说的

1368
00:58:54,000 --> 00:58:57,000
比如说两个男人和一个孩子三口之家

1369
00:58:57,000 --> 00:59:01,000
我们看起来是三口之家这样一个 Emoji

1370
00:59:01,000 --> 00:59:02,000
但是实际上它的背后呢

1371
00:59:03,000 --> 00:59:09,000
是一个男人

1372
00:59:09,000 --> 00:59:15,000
然后加上这个加号就必须要用那个 ZWJ

1373
00:59:15,000 --> 00:59:17,000
加上一个男人

1374
00:59:17,000 --> 00:59:19,000
再加上一个小孩

1375
00:59:19,000 --> 00:59:21,000
所以你看起来表面上是一个 Emoji

1376
00:59:21,000 --> 00:59:24,000
可是背后呢是五个马位

1377
00:59:27,000 --> 00:59:29,000
就是比如说就是家庭

1378
00:59:29,000 --> 00:59:30,000
还比如说职业

1379
00:59:30,000 --> 00:59:32,000
比如说职业的话

1380
00:59:33,000 --> 00:59:36,000
一个女性的山地车运动员

1381
00:59:38,000 --> 00:59:39,000
女性而止

1382
00:59:40,000 --> 00:59:41,000
OK

1383
00:59:41,000 --> 00:59:43,000
听起来像某种语言的单词练习

1384
00:59:44,000 --> 00:59:47,000
他们终于发明了中国的部首啊

1385
00:59:47,000 --> 00:59:48,000
偏旁部首

1386
00:59:48,000 --> 00:59:49,000
这样呢

1387
00:59:49,000 --> 00:59:52,000
所以你看起来这是一个女性的

1388
00:59:52,000 --> 00:59:55,000
女性的那个山地车运动员的这样一个图

1389
00:59:55,000 --> 00:59:57,000
可是它背后呢是首先呢

1390
00:59:57,000 --> 01:00:00,000
它是一个山地车手的一个图

1391
01:00:01,000 --> 01:00:02,000
然后呢

1392
01:00:02,000 --> 01:00:03,000
有一个女性符号

1393
01:00:05,000 --> 01:00:05,000
然后

1394
01:00:05,000 --> 01:00:07,000
而且呢还有一个

1395
01:00:07,000 --> 01:00:08,000
因为它是女性

1396
01:00:08,000 --> 01:00:09,000
人嘛

1397
01:00:09,000 --> 01:00:10,000
所以它还有肤色

1398
01:00:10,000 --> 01:00:11,000
还可以加上肤色

1399
01:00:12,000 --> 01:00:17,000
中间还要再用这个 ZWJ 给它给捏起来

1400
01:00:19,000 --> 01:00:20,000
然后呢你还要

1401
01:00:20,000 --> 01:00:23,000
如果你在印这样的话

1402
01:00:23,000 --> 01:00:26,000
至少后面是有四个到五个的马位

1403
01:00:26,000 --> 01:00:27,000
才能实现这样的一个图

1404
01:00:28,000 --> 01:00:29,000
OK

1405
01:00:32,000 --> 01:00:35,000
这是目前上已经定义下来的

1406
01:00:35,000 --> 01:00:37,000
定义下来的这个序列

1407
01:00:37,000 --> 01:00:38,000
另外呢

1408
01:00:38,000 --> 01:00:40,000
还有一个叫 Emoji 的 Tag 序列

1409
01:00:40,000 --> 01:00:41,000
就是加标签

1410
01:00:41,000 --> 01:00:42,000
这个标签

1411
01:00:42,000 --> 01:00:44,000
加标签这个事情呢

1412
01:00:44,000 --> 01:00:46,000
Uniqlo 的草案其实已经有提交了

1413
01:00:46,000 --> 01:00:48,000
但是前段时间被撤回

1414
01:00:49,000 --> 01:00:52,000
所以目前来讲还不是

1415
01:00:52,000 --> 01:00:53,000
它只是一个提案

1416
01:00:53,000 --> 01:00:54,000
还没有实现

1417
01:00:55,000 --> 01:00:57,000
我把这个链接发给大家

1418
01:00:57,000 --> 01:01:00,000
是在 UTS 的第 52 号提案

1419
01:01:00,000 --> 01:01:01,000
大家可以去看

1420
01:01:02,000 --> 01:01:03,000
然后这里面很扯

1421
01:01:03,000 --> 01:01:05,000
它就是加一个标签

1422
01:01:05,000 --> 01:01:08,000
那意思是比如说我可以显示人的头发

1423
01:01:10,000 --> 01:01:15,000
从白头发到黄头发到红头发到黑头发

1424
01:01:15,000 --> 01:01:16,000
以致禿头

1425
01:01:16,000 --> 01:01:25,000
因为他给每种头发都加了一个标签

1426
01:01:25,000 --> 01:01:26,000
首先呢

1427
01:01:26,000 --> 01:01:29,000
他有个有个有个 Base

1428
01:01:29,000 --> 01:01:30,000
有个 Base

1429
01:01:30,000 --> 01:01:32,000
就是说我这是头发标签

1430
01:01:32,000 --> 01:01:36,000
然后在这个标签上面写贴上程度

1431
01:01:36,000 --> 01:01:39,000
比如说是黄头发或者是禿头

1432
01:01:39,000 --> 01:01:42,000
然后就是这样的接下来

1433
01:01:42,000 --> 01:01:43,000
在一个序列

1434
01:01:43,000 --> 01:01:45,000
所以你可能要在一个

1435
01:01:45,000 --> 01:01:51,000
比如说是男孩的头发上面标签

1436
01:01:51,000 --> 01:01:53,000
加上一个黄颜色

1437
01:01:53,000 --> 01:01:59,000
来体现一个就是金黄色头发的男孩的一个 Emoji

1438
01:02:00,000 --> 01:02:02,000
也是可以实现的

1439
01:02:02,000 --> 01:02:03,000
然后刚才还有说

1440
01:02:04,000 --> 01:02:08,000
可以用于改变目前的 Emoji 的方向

1441
01:02:09,000 --> 01:02:11,000
一些 Emoji 它画出来是有方向的

1442
01:02:11,000 --> 01:02:14,000
最有名的就比如说手枪

1443
01:02:14,000 --> 01:02:16,000
目前的手枪好像是

1444
01:02:17,000 --> 01:02:17,000
只能朝右

1445
01:02:18,000 --> 01:02:19,000
只能朝右是吗

1446
01:02:19,000 --> 01:02:20,000
还只能朝左好像

1447
01:02:22,000 --> 01:02:27,000
就是被改成在 OS 上被改成似水枪

1448
01:02:27,000 --> 01:02:28,000
是水枪

1449
01:02:29,000 --> 01:02:31,000
好像只有只能朝左

1450
01:02:31,000 --> 01:02:35,000
这样的话有时候你在表示谁射杀谁的时候

1451
01:02:35,000 --> 01:02:39,000
谁打谁的时候就会有方向性的错误

1452
01:02:39,000 --> 01:02:39,000
对

1453
01:02:39,000 --> 01:02:43,000
因此在这个提案里面

1454
01:02:43,000 --> 01:02:46,000
它先加一个方向标签

1455
01:02:46,000 --> 01:02:49,000
然后在这个方向标签里面写上具体的直

1456
01:02:49,000 --> 01:02:51,000
比如说我是向左直还是向右

1457
01:02:53,000 --> 01:02:57,000
就不能向右上方 72 度的方式打

1458
01:02:59,000 --> 01:02:59,000
对

1459
01:02:59,000 --> 01:03:01,000
这个方向的直应该怎么射呢

1460
01:03:01,000 --> 01:03:01,000
对吧

1461
01:03:02,000 --> 01:03:06,000
还有刚才说的就是像刚才 Ryo 比较担心的国旗不够用

1462
01:03:06,000 --> 01:03:11,000
其实现在已经可以实现

1463
01:03:11,000 --> 01:03:13,000
比如说英格兰旗

1464
01:03:13,000 --> 01:03:15,000
大家要知道英格兰它不是一个国家吗

1465
01:03:15,000 --> 01:03:16,000
它是个地区

1466
01:03:18,000 --> 01:03:20,000
英格兰这个旗是什么实现的

1467
01:03:20,000 --> 01:03:22,000
你小心英格兰人来找你拼命

1468
01:03:22,000 --> 01:03:23,000
它只是一个地区

1469
01:03:23,000 --> 01:03:27,000
所以如果像比如说旗的话国旗的话

1470
01:03:27,000 --> 01:03:29,000
像英国的国旗我们刚才说了

1471
01:03:29,000 --> 01:03:32,000
你看看是一个英国国旗

1472
01:03:32,000 --> 01:03:35,000
可是它背面的首先是旗帜的一个码位

1473
01:03:35,000 --> 01:03:39,000
然后加上旗帜的 U 旗帜的 K

1474
01:03:39,000 --> 01:03:40,000
就是 UK 的旗

1475
01:03:40,000 --> 01:03:41,000
就是英国的国旗

1476
01:03:43,000 --> 01:03:45,000
新的加上 Tag 以后

1477
01:03:45,000 --> 01:03:46,000
它可以

1478
01:03:46,000 --> 01:03:47,000
对不起

1479
01:03:47,000 --> 01:03:49,000
不是 UK 是 GB Great Britain

1480
01:03:50,000 --> 01:03:56,000
所以英格兰是旗加上 GBENG

1481
01:03:56,000 --> 01:03:58,000
就是 Great Britain England

1482
01:03:59,000 --> 01:04:03,000
所以一共是这六个码位一串加起来

1483
01:04:03,000 --> 01:04:05,000
就是英格兰的旗

1484
01:04:06,000 --> 01:04:09,000
所以这是一个草案

1485
01:04:09,000 --> 01:04:12,000
大家还在讨论

1486
01:04:12,000 --> 01:04:14,000
但是目前已经有些实作是可以出来了

1487
01:04:15,000 --> 01:04:17,000
我真的不敢想象

1488
01:04:17,000 --> 01:04:22,000
比如说刚才那个男士变成秃头的那样的一个 Emoji

1489
01:04:22,000 --> 01:04:24,000
会被画成什么样子

1490
01:04:24,000 --> 01:04:28,000
然后想那以后是不是应该还对胡子也应该进行定义一下

1491
01:04:32,000 --> 01:04:34,000
这进一步的凸显了

1492
01:04:34,000 --> 01:04:38,000
这帮人想把 Unicode 用来做任何事情

1493
01:04:40,000 --> 01:04:42,000
就用来表示任何可见的东西

1494
01:04:42,000 --> 01:04:43,000
一端

1495
01:04:44,000 --> 01:04:45,000
你在想了吗

1496
01:04:45,000 --> 01:04:47,000
Unicode Unicode 什么意思吗

1497
01:04:47,000 --> 01:04:48,000
Unicode Virtual

1498
01:04:49,000 --> 01:04:50,000
野心太大了

1499
01:04:50,000 --> 01:04:53,000
不过作为一个技术来讲的话

1500
01:04:53,000 --> 01:04:56,000
就是说我这个技术只要规范定出来以后

1501
01:04:56,000 --> 01:04:59,000
它可以实现的功能是强大的

1502
01:04:59,000 --> 01:05:02,000
它的意思就是说我这个技术很好说明

1503
01:05:03,000 --> 01:05:05,000
为了炫耀这个技术也不至于搞成这样吧

1504
01:05:05,000 --> 01:05:05,000
我觉得

1505
01:05:06,000 --> 01:05:08,000
所以你们知道八别塔多难造了吗

1506
01:05:08,000 --> 01:05:09,000
是这样的

1507
01:05:09,000 --> 01:05:13,000
但是刚才说的就是没有通过的草案

1508
01:05:14,000 --> 01:05:18,000
再通过加标签的这个想法

1509
01:05:18,000 --> 01:05:20,000
其实这个思路倒是很普通

1510
01:05:21,000 --> 01:05:23,000
你先做一个 Tag

1511
01:05:23,000 --> 01:05:25,000
然后再定义这个 Tag 的值

1512
01:05:25,000 --> 01:05:26,000
对吧

1513
01:05:26,000 --> 01:05:28,000
这是很正常的一个思路

1514
01:05:28,000 --> 01:05:32,000
其实有点鸡贼

1515
01:05:32,000 --> 01:05:34,000
他还是想审码位

1516
01:05:34,000 --> 01:05:36,000
他没有霸气到说你来一个

1517
01:05:36,000 --> 01:05:37,000
我给你个新码位

1518
01:05:38,000 --> 01:05:40,000
你还得用一些东西给他组合起来

1519
01:05:40,000 --> 01:05:41,000
这样可以

1520
01:05:43,000 --> 01:05:46,000
我觉得 Unicode 迟早有一天说

1521
01:05:46,000 --> 01:05:46,000
好吧

1522
01:05:46,000 --> 01:05:51,000
我把这码位继续的扩增到你想用多少就用多少

1523
01:05:53,000 --> 01:05:55,000
他还是想用那个偏旁部首的

1524
01:05:56,000 --> 01:05:58,000
老祖宗的办法

1525
01:05:59,000 --> 01:06:00,000
中国人早在几万

1526
01:06:00,000 --> 01:06:02,000
就几七四有文字的时候

1527
01:06:02,000 --> 01:06:03,000
文字是什么时候

1528
01:06:03,000 --> 01:06:04,000
2000 年

1529
01:06:05,000 --> 01:06:05,000
5000 年

1530
01:06:05,000 --> 01:06:06,000
谁知道

1531
01:06:06,000 --> 01:06:07,000
没有

1532
01:06:07,000 --> 01:06:08,000
中国人有 5000 年

1533
01:06:09,000 --> 01:06:10,000
发明文字是什么

1534
01:06:10,000 --> 01:06:11,000
就有案可查

1535
01:06:11,000 --> 01:06:12,000
第一个甲骨文

1536
01:06:12,000 --> 01:06:13,000
在这个时候就已经想到这个问题了

1537
01:06:16,000 --> 01:06:17,000
公元前一下就有了

1538
01:06:18,000 --> 01:06:18,000
那当然有了

1539
01:06:19,000 --> 01:06:20,000
公元太晚了

1540
01:06:20,000 --> 01:06:21,000
你就不用想公元了

1541
01:06:21,000 --> 01:06:22,000
公元太晚了

1542
01:06:22,000 --> 01:06:23,000
公元前多少年

1543
01:06:24,000 --> 01:06:26,000
就已经想不出这个问题了

1544
01:06:29,000 --> 01:06:30,000
你看那个什么

1545
01:06:30,000 --> 01:06:32,000
要是艾斯基摩人爷爷来搞这个 Unicode

1546
01:06:32,000 --> 01:06:36,000
他起码把这个雪片要搞成 50 种不同类型的雪

1547
01:06:38,000 --> 01:06:39,000
这是个 miss 吧

1548
01:06:39,000 --> 01:06:39,000
这是个 miss

1549
01:06:39,000 --> 01:06:42,000
好像就是这件事情并不存在

1550
01:06:43,000 --> 01:06:46,000
但是艾斯基摩人其实没有那么多语言来描述雪

1551
01:06:47,000 --> 01:06:50,000
但是阿拉伯语语里面有很多种骆驼

1552
01:06:50,000 --> 01:06:51,000
对吧

1553
01:06:51,000 --> 01:06:54,000
古汉语里面有很多马

1554
01:06:54,000 --> 01:06:55,000
对吧

1555
01:06:55,000 --> 01:06:56,000
还有很多语

1556
01:06:56,000 --> 01:06:57,000
对吧

1557
01:06:57,000 --> 01:07:01,000
而且其实这东西艾斯基摩人语言里并不重要

1558
01:07:01,000 --> 01:07:04,000
像日本人发明的 emoji 他们也没想到那么多

1559
01:07:06,000 --> 01:07:08,000
但是现在还是可以搞出那么多

1560
01:07:08,000 --> 01:07:12,000
所以全球人民的智慧是可以让这个东西无限多下去的

1561
01:07:14,000 --> 01:07:15,000
不管怎么样

1562
01:07:15,000 --> 01:07:17,000
反正现在的技术已经达到这个水平了

1563
01:07:17,000 --> 01:07:20,000
所以大家往往看上去是一个简单的 emoji

1564
01:07:20,000 --> 01:07:22,000
可是它的背后谁知道

1565
01:07:22,000 --> 01:07:24,000
它可能是一个马尾

1566
01:07:24,000 --> 01:07:27,000
也可能是五六七八个马尾组合而成的

1567
01:07:30,000 --> 01:07:34,000
所以下面就涉及到下一个问题了

1568
01:07:34,000 --> 01:07:36,000
就是所谓的自喂醋的问题的

1569
01:07:36,000 --> 01:07:37,000
对吧

1570
01:07:37,000 --> 01:07:40,000
这个翻译叫自喂醋吗

1571
01:07:40,000 --> 01:07:41,000
可能大家都听不懂

1572
01:07:41,000 --> 01:07:42,000
cluster

1573
01:07:42,000 --> 01:07:46,000
cluster 中文一般被翻译成醋

1574
01:07:46,000 --> 01:07:48,000
醋就是一团东西

1575
01:07:49,000 --> 01:07:51,000
然后 grapheme

1576
01:07:51,000 --> 01:07:54,000
grapheme 一般来讲我们翻译成自喂

1577
01:07:55,000 --> 01:07:58,000
像因为在语音学里面

1578
01:07:58,000 --> 01:08:02,000
区别意思的音才是有叫一个音位

1579
01:08:02,000 --> 01:08:03,000
对

1580
01:08:03,000 --> 01:08:06,000
那就在文字里面就是有区别

1581
01:08:07,000 --> 01:08:11,000
在书写语言里面的一个最小单位

1582
01:08:11,000 --> 01:08:13,000
我们就叫它自喂

1583
01:08:13,000 --> 01:08:15,000
那么自喂醋

1584
01:08:16,000 --> 01:08:17,000
听起来好奇怪

1585
01:08:18,000 --> 01:08:19,000
grapheme cluster

1586
01:08:20,000 --> 01:08:22,000
抱歉我邪恶了

1587
01:08:23,000 --> 01:08:25,000
就是你要看起来

1588
01:08:25,000 --> 01:08:27,000
就是人看起来是一个字

1589
01:08:27,000 --> 01:08:27,000
机器

1590
01:08:27,000 --> 01:08:28,000
因为刚才有说了吗

1591
01:08:28,000 --> 01:08:32,000
我们一个人看起来是一个 emoji

1592
01:08:32,000 --> 01:08:35,000
但是机器它后面认的可能是一个马尾

1593
01:08:35,000 --> 01:08:36,000
或者是五六个马尾

1594
01:08:37,000 --> 01:08:40,000
比如说在数数的时候到底是几个字

1595
01:08:40,000 --> 01:08:42,000
这个东西的话都说不清楚

1596
01:08:43,000 --> 01:08:46,000
因此其实在 unicode 里面

1597
01:08:46,000 --> 01:08:49,000
unicode 有个标准附件的第 29 号

1598
01:08:49,000 --> 01:08:53,000
它这个名字叫 unicode text segmentation

1599
01:08:53,000 --> 01:08:55,000
就叫文本分割法

1600
01:08:56,000 --> 01:08:57,000
专门来规定

1601
01:08:57,000 --> 01:09:00,000
你怎么样看起来就算是一个字

1602
01:09:00,000 --> 01:09:06,000
怎么来定义词的界限和字的界限

1603
01:09:06,000 --> 01:09:07,000
这是考虑什么

1604
01:09:07,000 --> 01:09:08,000
这是为了分词吗

1605
01:09:08,000 --> 01:09:09,000
还是为了什么

1606
01:09:09,000 --> 01:09:12,000
其实应该是给 unicode 的实现

1607
01:09:12,000 --> 01:09:14,000
给的一个文档

1608
01:09:14,000 --> 01:09:15,000
就是你怎样来实现这个东西

1609
01:09:15,000 --> 01:09:16,000
给一个 reference

1610
01:09:17,000 --> 01:09:17,000
对

1611
01:09:17,000 --> 01:09:22,000
其实最早是为了给那些泰文

1612
01:09:22,000 --> 01:09:26,000
和比如说印度的那些文字来做的

1613
01:09:26,000 --> 01:09:29,000
因为还有比如说藏文大家也知道

1614
01:09:29,000 --> 01:09:31,000
泰文的话它可能是在中间一个字

1615
01:09:31,000 --> 01:09:33,000
中间一个基本字母以后

1616
01:09:33,000 --> 01:09:37,000
它可能会在这个字的上下左右添加各种东西

1617
01:09:38,000 --> 01:09:38,000
对

1618
01:09:39,000 --> 01:09:41,000
所以对于泰文来讲

1619
01:09:41,000 --> 01:09:44,000
即使它添加了上下左右的东西

1620
01:09:44,000 --> 01:09:47,000
但是它对于泰文来讲这依然是一个字

1621
01:09:49,000 --> 01:09:51,000
那马位的话它是好多马位

1622
01:09:51,000 --> 01:09:54,000
而且你已经给它认成一个字以后

1623
01:09:54,000 --> 01:09:56,000
比如说你在删除的时候

1624
01:09:56,000 --> 01:09:58,000
你要必须把它认成一个字吗

1625
01:09:58,000 --> 01:10:01,000
你在选中的时候你必须要给它整个选中

1626
01:10:01,000 --> 01:10:05,000
或者你让不让它选中部分去修改

1627
01:10:05,000 --> 01:10:06,000
或者怎么样

1628
01:10:06,000 --> 01:10:08,000
或者你删除的时候你必须要整个删除

1629
01:10:08,000 --> 01:10:09,000
还怎么样

1630
01:10:10,000 --> 01:10:12,000
就是不能删除一个字的部首对吧

1631
01:10:13,000 --> 01:10:14,000
你删了半个字

1632
01:10:14,000 --> 01:10:15,000
这个是什么鬼

1633
01:10:15,000 --> 01:10:17,000
就是有时候对

1634
01:10:18,000 --> 01:10:19,000
好滴滴

1635
01:10:23,000 --> 01:10:31,000
所以这东西其实都是还要有定义的

1636
01:10:31,000 --> 01:10:33,000
要首先在马位这边

1637
01:10:33,000 --> 01:10:35,000
在 unicode 的层面要有定义

1638
01:10:35,000 --> 01:10:37,000
然后再让这个

1639
01:10:38,000 --> 01:10:38,000
这个什么

1640
01:10:38,000 --> 01:10:41,000
user engine 的去依照这个定义来进行

1641
01:10:41,000 --> 01:10:42,000
持作

1642
01:10:42,000 --> 01:10:44,000
要不然的话大家会乱七八糟的

1643
01:10:45,000 --> 01:10:45,000
对

1644
01:10:46,000 --> 01:10:49,000
然后另外一个比较典型的

1645
01:10:49,000 --> 01:10:52,000
比如说韩文可能大家会比较清楚

1646
01:10:52,000 --> 01:10:56,000
韩文其实它是一个生母孕母这样拼起来的

1647
01:10:58,000 --> 01:11:00,000
因此其实在韩文音节里面

1648
01:11:00,000 --> 01:11:00,000
它

1649
01:11:02,000 --> 01:11:04,000
和韩比如说那个韩字

1650
01:11:05,000 --> 01:11:07,000
一个 him 一个 a 一个 nyin

1651
01:11:07,000 --> 01:11:09,000
它可以是三个字拼在一起

1652
01:11:09,000 --> 01:11:10,000
一旦拼起来的话

1653
01:11:10,000 --> 01:11:11,000
韩这个

1654
01:11:12,000 --> 01:11:13,000
那这就是一个字了

1655
01:11:14,000 --> 01:11:16,000
你不能就是选择

1656
01:11:16,000 --> 01:11:18,000
但这会涉及到什么

1657
01:11:18,000 --> 01:11:20,000
我是觉得韩文其实挺神奇的

1658
01:11:20,000 --> 01:11:22,000
就是它明明是

1659
01:11:23,000 --> 01:11:24,000
它其实是字母

1660
01:11:24,000 --> 01:11:27,000
然后它组合方式就是第一样的汉字的方式

1661
01:11:27,000 --> 01:11:28,000
对

1662
01:11:28,000 --> 01:11:31,000
所以 unicode 为了解决韩文问题

1663
01:11:31,000 --> 01:11:33,000
发生了很大的波折

1664
01:11:33,000 --> 01:11:38,000
一开始就说你韩文就不要占一个马位了

1665
01:11:38,000 --> 01:11:40,000
你就组合的就不要占组合的马位

1666
01:11:40,000 --> 01:11:42,000
你就一个一个拼吧

1667
01:11:42,000 --> 01:11:45,000
然后又出现了很大的问题

1668
01:11:46,000 --> 01:11:48,000
就来一个拼一个

1669
01:11:49,000 --> 01:11:51,000
这样会有一个很大的问题是什么

1670
01:11:51,000 --> 01:11:53,000
就是在检索的时候会有问题

1671
01:11:53,000 --> 01:11:55,000
比如说你搜索的时候对吧

1672
01:11:56,000 --> 01:12:00,000
你韩文那你肯定要以整个字去搜

1673
01:12:00,000 --> 01:12:02,000
你不能以一个生母去搜

1674
01:12:02,000 --> 01:12:03,000
那个一生母搜出来

1675
01:12:03,000 --> 01:12:04,000
对不对

1676
01:12:04,000 --> 01:12:07,000
全篇到处都选中了就变成了

1677
01:12:07,000 --> 01:12:07,000
对

1678
01:12:08,000 --> 01:12:09,000
但我们也有不守简字法

1679
01:12:10,000 --> 01:12:11,000
对

1680
01:12:11,000 --> 01:12:13,000
但是比如说我在一篇文章里面

1681
01:12:13,000 --> 01:12:14,000
我要搜

1682
01:12:15,000 --> 01:12:16,000
问题是韩文没有不守

1683
01:12:17,000 --> 01:12:19,000
它是一个拼音

1684
01:12:19,000 --> 01:12:20,000
它是一个拼音

1685
01:12:20,000 --> 01:12:23,000
它是把拼音用不守方式组合在一起

1686
01:12:23,000 --> 01:12:24,000
我觉得这个太神奇了

1687
01:12:26,000 --> 01:12:28,000
这样会给它这个检索

1688
01:12:28,000 --> 01:12:32,000
检索会造成很大的问题

1689
01:12:33,000 --> 01:12:33,000
因为

1690
01:12:34,000 --> 01:12:35,000
退一万步来讲

1691
01:12:35,000 --> 01:12:39,000
我们所谓的信息化处理是一个

1692
01:12:39,000 --> 01:12:40,000
信息交换的一个过程

1693
01:12:41,000 --> 01:12:42,000
你再交换来交换去

1694
01:12:42,000 --> 01:12:45,000
不能会有错误和遗漏

1695
01:12:45,000 --> 01:12:47,000
这完全没有达到目的

1696
01:12:48,000 --> 01:12:50,000
搞来搞去的信息就变了

1697
01:12:50,000 --> 01:12:52,000
或者有遗失了

1698
01:12:52,000 --> 01:12:54,000
然后传递有问题了

1699
01:12:54,000 --> 01:12:55,000
这个是很大的问题

1700
01:12:57,000 --> 01:13:00,000
所以它就必须要有规定

1701
01:13:00,000 --> 01:13:02,000
就是你人看起来

1702
01:13:03,000 --> 01:13:05,000
一团东西认成是一个字

1703
01:13:05,000 --> 01:13:07,000
那么你机器要怎么处理

1704
01:13:09,000 --> 01:13:09,000
对

1705
01:13:11,000 --> 01:13:14,000
具体到我们的 Emoji 里面的话

1706
01:13:14,000 --> 01:13:16,000
就是像刚才说的话

1707
01:13:16,000 --> 01:13:17,000
因为 Emoji 它可能

1708
01:13:17,000 --> 01:13:19,000
我们看起来是一个 Emoji

1709
01:13:19,000 --> 01:13:22,000
但是它后面可能是三个码位

1710
01:13:22,000 --> 01:13:23,000
或者四个码位

1711
01:13:23,000 --> 01:13:28,000
比如说在数字的时候

1712
01:13:29,000 --> 01:13:31,000
到底是几个字的时候就会有问题

1713
01:13:32,000 --> 01:13:32,000
嗯

1714
01:13:34,000 --> 01:13:38,000
我今天看一个资料

1715
01:13:38,000 --> 01:13:39,000
我对 Ruby 不熟

1716
01:13:39,000 --> 01:13:41,000
Ruby 语言它那个 String

1717
01:13:42,000 --> 01:13:45,000
它在数量子的时候

1718
01:13:45,000 --> 01:13:47,000
它就是用码位来数字数

1719
01:13:47,000 --> 01:13:48,000
这显然就不对

1720
01:13:48,000 --> 01:13:51,000
大部分的语言里面都是这么干的

1721
01:13:51,000 --> 01:13:53,000
一个码位就不是一个数

1722
01:13:53,000 --> 01:13:57,000
它只会数这个

1723
01:13:58,000 --> 01:14:00,000
更高级的信息它没有

1724
01:14:00,000 --> 01:14:02,000
或者说更高信息更麻烦

1725
01:14:03,000 --> 01:14:05,000
需要专门的酷来实现

1726
01:14:06,000 --> 01:14:08,000
所以现在不是

1727
01:14:08,000 --> 01:14:11,000
像 Twitter 它现在数数它不是也变了

1728
01:14:11,000 --> 01:14:11,000
不是

1729
01:14:12,000 --> 01:14:15,000
它前段时间把那个 140 变成 280 了

1730
01:14:15,000 --> 01:14:18,000
像英语可以写 280 个字了

1731
01:14:18,000 --> 01:14:22,000
可是中日韩还是 140 个字

1732
01:14:24,000 --> 01:14:25,000
地狱骑士

1733
01:14:27,000 --> 01:14:28,000
我真很好奇

1734
01:14:28,000 --> 01:14:34,000
他还特地为中日韩开了一个例外

1735
01:14:34,000 --> 01:14:35,000
这个太扯了

1736
01:14:36,000 --> 01:14:37,000
也不是专门为中日韩

1737
01:14:37,000 --> 01:14:39,000
应该是西方中心主义

1738
01:14:39,000 --> 01:14:43,000
就是把他们认为应该扩展的部分扩展了

1739
01:14:43,000 --> 01:14:45,000
其他的部分就统统是做两个

1740
01:14:47,000 --> 01:14:51,000
就是要以大家能表达的总的信息量来数

1741
01:14:52,000 --> 01:14:53,000
那你信息量来数的话

1742
01:14:53,000 --> 01:14:56,000
本来 140 字的中文

1743
01:14:56,000 --> 01:14:58,000
就是可以一篇小段落了

1744
01:14:58,000 --> 01:14:59,000
一大段落了

1745
01:15:02,000 --> 01:15:04,000
所以我觉得像什么微博

1746
01:15:04,000 --> 01:15:07,000
就学什么 140 个字

1747
01:15:07,000 --> 01:15:10,000
140 个字学过来用汉字写的话

1748
01:15:10,000 --> 01:15:14,000
本来就跟英文的 140 根本不是一个层面上的东西

1749
01:15:14,000 --> 01:15:16,000
在信息量上来讲的话

1750
01:15:16,000 --> 01:15:17,000
对

1751
01:15:17,000 --> 01:15:18,000
对

1752
01:15:18,000 --> 01:15:18,000
这是一个

1753
01:15:18,000 --> 01:15:20,000
谁让我们自负极大呢

1754
01:15:21,000 --> 01:15:23,000
他在 265 玩儿玩儿学习那么点

1755
01:15:23,000 --> 01:15:25,000
这完全是一个历史遗留

1756
01:15:25,000 --> 01:15:26,000
我们表意自负的话

1757
01:15:26,000 --> 01:15:28,000
就是本来信息量就是很大

1758
01:15:29,000 --> 01:15:33,000
你不可能通过字数来衡量信息量

1759
01:15:33,000 --> 01:15:36,000
就这个方式是非常不科学的

1760
01:15:36,000 --> 01:15:39,000
你算不出来英语究竟能有多少伤

1761
01:15:39,000 --> 01:15:40,000
对

1762
01:15:40,000 --> 01:15:42,000
比如说你这个汉语简单来说

1763
01:15:42,000 --> 01:15:44,000
我们知道文言的汉语

1764
01:15:44,000 --> 01:15:45,000
显然这个长度更短

1765
01:15:45,000 --> 01:15:47,000
他用的字数更少

1766
01:15:47,000 --> 01:15:50,000
那你这个白话文的汉语就用的字数更多

1767
01:15:50,000 --> 01:15:53,000
所以你单纯用字数来限制信息量

1768
01:15:53,000 --> 01:15:56,000
其实是一个非常没有道理的事情

1769
01:15:56,000 --> 01:15:58,000
就在其实是在同一种语言当中

1770
01:15:58,000 --> 01:16:01,000
推特早期他限制这个字数纯粹是一个技术原因

1771
01:16:02,000 --> 01:16:05,000
或者说是一个模拟的短信

1772
01:16:05,000 --> 01:16:08,000
他只是模拟了短信时代的

1773
01:16:08,000 --> 01:16:09,000
短信也不是技术原因

1774
01:16:09,000 --> 01:16:13,000
短信是所有这 144 这个公筹

1775
01:16:13,000 --> 01:16:16,000
就是为什么我们现在很多东西都是 144

1776
01:16:16,000 --> 01:16:18,000
或者为什么推特今天 144

1777
01:16:18,000 --> 01:16:19,000
全都源自于一个德国人

1778
01:16:20,000 --> 01:16:26,000
当初设计短信标准的那个人

1779
01:16:26,000 --> 01:16:28,000
他在科隆还不是什么地方

1780
01:16:28,000 --> 01:16:30,000
杜塞尔洛夫附近有一个实验室

1781
01:16:30,000 --> 01:16:34,000
他在那边做了大概几个月的研究

1782
01:16:34,000 --> 01:16:39,000
就是给别人写便签

1783
01:16:39,000 --> 01:16:42,000
或者给别人发短的电子邮件之类的

1784
01:16:42,000 --> 01:16:44,000
然后最终得出一个结论说 140 个字

1785
01:16:44,000 --> 01:16:46,000
对于德语来说

1786
01:16:46,000 --> 01:16:49,000
可以满足 90%以上的短消息的要求

1787
01:16:49,000 --> 01:16:56,000
然后他就把短信标准定成了 160 个字符

1788
01:16:56,000 --> 01:16:56,000
应该是对

1789
01:16:56,000 --> 01:16:57,000
够吗德国人

1790
01:16:58,000 --> 01:16:59,000
家人不够了

1791
01:16:59,000 --> 01:17:02,000
德文单词那么长

1792
01:17:03,000 --> 01:17:06,000
真的这不是什么 urban legend

1793
01:17:06,000 --> 01:17:09,000
这是一个就是我记得在哪个地方看过报道

1794
01:17:09,000 --> 01:17:12,000
我回头把那个链接发到那个收到字里面

1795
01:17:12,000 --> 01:17:14,000
这一切都要怪一个德国人

1796
01:17:17,000 --> 01:17:23,000
然后现在就搞得推特他算字数的方式很奇怪

1797
01:17:23,000 --> 01:17:27,000
现在就比如我们今天讲的 emoji

1798
01:17:27,000 --> 01:17:32,000
他虽然说英文是允许 280 个字了

1799
01:17:32,000 --> 01:17:34,000
但是 emoji 的话

1800
01:17:34,000 --> 01:17:38,000
他还是把一个 emoji 当成两个字来算

1801
01:17:39,000 --> 01:17:42,000
所以比如说你一个笑脸只能打 140 个笑脸

1802
01:17:42,000 --> 01:17:44,000
不能打 280 个

1803
01:17:46,000 --> 01:17:50,000
280 个笑脸

1804
01:17:51,000 --> 01:17:56,000
所以推特这个事情的考虑点其实不是为了存储对吧

1805
01:17:57,000 --> 01:17:57,000
对

1806
01:17:58,000 --> 01:18:04,000
而且他这个数数肯定还是首先是列了一个白名单

1807
01:18:04,000 --> 01:18:07,000
就是从马位开始考虑

1808
01:18:07,000 --> 01:18:09,000
要么他肯定是要首先认这个字

1809
01:18:11,000 --> 01:18:15,000
然后再根据这个字来数这个数

1810
01:18:15,000 --> 01:18:16,000
他数数肯定是用 java 数的

1811
01:18:18,000 --> 01:18:20,000
为什么是用 java 数

1812
01:18:21,000 --> 01:18:23,000
他肯定是要前端先 java 数不能写

1813
01:18:23,000 --> 01:18:26,000
然后后台 API 的时候再审一遍

1814
01:18:26,000 --> 01:18:29,000
对啊要不然的话你现在一边数的话

1815
01:18:29,000 --> 01:18:31,000
他就会写你还够写几个字

1816
01:18:31,000 --> 01:18:33,000
就必须要有动态的算

1817
01:18:36,000 --> 01:18:37,000
所以就很扯

1818
01:18:37,000 --> 01:18:38,000
他有个 indicate

1819
01:18:39,000 --> 01:18:47,000
所以现在我们才发现原来数字数也是一个非常难的试试

1820
01:18:49,000 --> 01:18:51,000
我觉得取决于你想要花多少的决心在里面

1821
01:18:51,000 --> 01:18:55,000
就比如说你可以按那个 unicode 的那个

1822
01:18:55,000 --> 01:18:56,000
我们上次介绍过的那个 cluster

1823
01:18:56,000 --> 01:18:58,000
就算 cluster 的方法来

1824
01:18:58,000 --> 01:18:59,000
就是均一化

1825
01:18:59,000 --> 01:19:00,000
先把它均一化

1826
01:19:00,000 --> 01:19:04,000
然后算了被均一化出来之后的东西是多少个字

1827
01:19:04,000 --> 01:19:05,000
那就是多少个字

1828
01:19:06,000 --> 01:19:08,000
均一化你怎么均一化呀

1829
01:19:08,000 --> 01:19:12,000
我们上次不是介绍了那个用 unicode 规范化的方法

1830
01:19:12,000 --> 01:19:13,000
规范化

1831
01:19:15,000 --> 01:19:19,000
然后我们再说到这次就是有一个那个

1832
01:19:20,000 --> 01:19:22,000
因为刚才说了有组合字

1833
01:19:22,000 --> 01:19:25,000
它经常会引出一个 bug

1834
01:19:26,000 --> 01:19:30,000
像刚才说的 emoji 有一个刚才说的键帽

1835
01:19:30,000 --> 01:19:33,000
比如说电话号码的 1 号键

1836
01:19:34,000 --> 01:19:43,000
1 号键的问题就是和字位处的定义就有问题

1837
01:19:44,000 --> 01:19:46,000
比如说我在输入的时候

1838
01:19:46,000 --> 01:19:48,000
我先输入数字 1

1839
01:19:48,000 --> 01:19:50,000
然后再输入那个键帽

1840
01:19:50,000 --> 01:19:51,000
根据 unicode 规定

1841
01:19:51,000 --> 01:19:55,000
它会自动会缩合成 1 的 emoji

1842
01:19:56,000 --> 01:20:00,000
然后你再输入一个键帽

1843
01:20:00,000 --> 01:20:04,000
就单纯的键帽没有键的话

1844
01:20:05,000 --> 01:20:06,000
这三个码位摆在一起

1845
01:20:06,000 --> 01:20:09,000
其实是不符合 unicode 的标准的

1846
01:20:09,000 --> 01:20:10,000
这是一个错的序列

1847
01:20:11,000 --> 01:20:11,000
但是不管怎么样

1848
01:20:12,000 --> 01:20:16,000
用户看起来就是前面两个缩合成了一个 emoji

1849
01:20:16,000 --> 01:20:20,000
后面是一个空的键

1850
01:20:21,000 --> 01:20:23,000
用户看起来是两个东西

1851
01:20:23,000 --> 01:20:26,000
然后这时候用户按下删除键的时候

1852
01:20:27,000 --> 01:20:29,000
理论上讲就是说后面的空的键帽是删除

1853
01:20:30,000 --> 01:20:33,000
但是根据 unicode 的定义

1854
01:20:33,000 --> 01:20:39,000
这个键帽是必须要和前面看成一团东西的

1855
01:20:39,000 --> 01:20:40,000
是认成一个字的

1856
01:20:41,000 --> 01:20:43,000
所以只要你一删除

1857
01:20:43,000 --> 01:20:47,000
连并前面的 1 号键一起都被删掉了

1858
01:20:47,000 --> 01:20:49,000
OK 我好像遇到过这个问题

1859
01:20:51,000 --> 01:20:55,000
所以就会有各种各样的问题

1860
01:20:55,000 --> 01:21:01,000
我在那个就咱们这个 show notes

1861
01:21:02,000 --> 01:21:04,000
在我们的 outline 里面我打了几个键帽

1862
01:21:04,000 --> 01:21:06,000
你们可以试着删除一下

1863
01:21:06,000 --> 01:21:10,000
你以为是会把最后一个字删除

1864
01:21:10,000 --> 01:21:15,000
结果是一团字一整个这个 cluster 全被删掉了

1865
01:21:15,000 --> 01:21:16,000
OK

1866
01:21:19,000 --> 01:21:23,000
还有时候根据不同的环境

1867
01:21:23,000 --> 01:21:25,000
有的可以复信有的不能复信

1868
01:21:25,000 --> 01:21:26,000
比如说国籍

1869
01:21:27,000 --> 01:21:30,000
所有的国籍至少是后面背后是三个码位

1870
01:21:31,000 --> 01:21:35,000
如果你码位都是连续的话

1871
01:21:35,000 --> 01:21:40,000
可能在删除的时候删错的话就会出现显示错误

1872
01:21:41,000 --> 01:21:45,000
可能也看你这个文本编辑器的本身的处理能力

1873
01:21:45,000 --> 01:21:46,000
对

1874
01:21:46,000 --> 01:21:50,000
有的会原地删好多次才能删掉一个

1875
01:21:50,000 --> 01:21:51,000
对

1876
01:21:51,000 --> 01:21:54,000
如果文本编辑器比较难易度的话就做不到

1877
01:21:57,000 --> 01:22:01,000
这个就是因为大家用的这个 API 用的那个库不一样

1878
01:22:01,000 --> 01:22:03,000
你很难统一的

1879
01:22:03,000 --> 01:22:04,000
这就比较麻烦

1880
01:22:05,000 --> 01:22:05,000
对

1881
01:22:05,000 --> 01:22:09,000
所以还是建议大家说不要自己造轮子

1882
01:22:09,000 --> 01:22:10,000
不要自己去搞这个东西

1883
01:22:10,000 --> 01:22:13,000
你以为好像你解决了你手头目前的这个问题

1884
01:22:13,000 --> 01:22:18,000
但是你肯定没有想到可能会漏掉的其他的东西

1885
01:22:19,000 --> 01:22:20,000
对

1886
01:22:20,000 --> 01:22:22,000
而且说回刚刚推特那个事情

1887
01:22:22,000 --> 01:22:24,000
就是我们说推特它数这个字数

1888
01:22:24,000 --> 01:22:29,000
其实它数字数它有很多很复杂的其他逻辑在里面

1889
01:22:29,000 --> 01:22:34,000
比如说它会把 UIL 当成一个固定长度的字符串来记数

1890
01:22:34,000 --> 01:22:36,000
无论这个 UIL 有多长知道它是合法的 UIL

1891
01:22:36,000 --> 01:22:37,000
嗯

1892
01:22:37,000 --> 01:22:39,000
它就是一团东西对吧

1893
01:22:39,000 --> 01:22:40,000
对

1894
01:22:40,000 --> 01:22:44,000
就是它不会根据 UIL 实际的字符数量来记数

1895
01:22:44,000 --> 01:22:46,000
它是记成一个固定的数字

1896
01:22:46,000 --> 01:22:47,000
图片链接也是一样吗

1897
01:22:48,000 --> 01:22:49,000
对

1898
01:22:49,000 --> 01:22:53,000
就是所有的这种媒体多媒体性的这种链接

1899
01:22:53,000 --> 01:22:59,000
然后还有 UIL 它都会用一个固定长度的字符串来跟你替代

1900
01:22:59,000 --> 01:23:01,000
就作为它的这个字符串的长度

1901
01:23:03,000 --> 01:23:07,000
所以你也可以把你的文字信息伪装成一个 UIL 往里面写

1902
01:23:08,000 --> 01:23:13,000
像中文这种不需要分词的 UIL 也是支持汉字的吧应该

1903
01:23:13,000 --> 01:23:14,000
是的

1904
01:23:14,000 --> 01:23:15,000
UIL 的长度也有限制

1905
01:23:15,000 --> 01:23:16,000
UIL 最长的

1906
01:23:16,000 --> 01:23:17,000
对

1907
01:23:17,000 --> 01:23:22,000
但你这样就可以远远超过现有的 140 汉字的限制

1908
01:23:22,000 --> 01:23:23,000
问题是你表达不出来

1909
01:23:24,000 --> 01:23:27,000
因为 UIL 在很多推特客户端里面它不会完全展示的

1910
01:23:28,000 --> 01:23:28,000
也是

1911
01:23:28,000 --> 01:23:30,000
它会缩

1912
01:23:30,000 --> 01:23:31,000
对

1913
01:23:31,000 --> 01:23:32,000
而且有可能会被生成

1914
01:23:32,000 --> 01:23:32,000
对

1915
01:23:35,000 --> 01:23:41,000
所以刚才也说你这会可以想到会有各种各样的隐藏的方法

1916
01:23:41,000 --> 01:23:44,000
或者各样的说耍赖皮的方法

1917
01:23:45,000 --> 01:23:47,000
这个就很可能会被利用

1918
01:23:47,000 --> 01:23:53,000
而且有时候往往会被利用发生安全漏洞的问题

1919
01:23:53,000 --> 01:23:57,000
所以这个东西的话还是大家千万不要自己乱搞

1920
01:23:57,000 --> 01:24:03,000
干脆其实目前来讲的话最稳妥的一个办法还是交让 OS 处理

1921
01:24:03,000 --> 01:24:06,000
就用最标准用最新的 API

1922
01:24:06,000 --> 01:24:09,000
不过 web 的好像还就得自己处理

1923
01:24:09,000 --> 01:24:10,000
web 方面

1924
01:24:11,000 --> 01:24:14,000
所以还是要多多测试

1925
01:24:15,000 --> 01:24:18,000
不过今天又回到主题

1926
01:24:18,000 --> 01:24:22,000
就是因为现在大家在以前可能有一些问题

1927
01:24:22,000 --> 01:24:26,000
并放的也是放的 bug 留在那也是留在那

1928
01:24:26,000 --> 01:24:33,000
就因为为了实现 emoji 后面需要有这么多个支持

1929
01:24:33,000 --> 01:24:37,000
所以大家再一次的把这些技术再重新再整一遍

1930
01:24:37,000 --> 01:24:40,000
本来自己再看一下自己写的软件

1931
01:24:40,000 --> 01:24:44,000
自己的环境是不是都按标准的 uni code 去做

1932
01:24:47,000 --> 01:24:49,000
像刚才说的国旗

1933
01:24:50,000 --> 01:24:55,000
国旗对字位处

1934
01:24:55,000 --> 01:24:55,000
好难念

1935
01:24:56,000 --> 01:24:58,000
就是 cluster 的定义

1936
01:24:58,000 --> 01:25:04,000
它其实 uni code 的 8.0 版本和 9.0 版本是有改进的

1937
01:25:05,000 --> 01:25:07,000
因为在国旗原来定义

1938
01:25:07,000 --> 01:25:09,000
就是说凡是国旗

1939
01:25:09,000 --> 01:25:10,000
其和其

1940
01:25:11,000 --> 01:25:14,000
其一凡是两个国旗连在一起

1941
01:25:14,000 --> 01:25:17,000
都是被都会被认成一个字的

1942
01:25:17,000 --> 01:25:19,000
就是按照原来的定义

1943
01:25:19,000 --> 01:25:23,000
后来发现好像这样的一团国旗都被认成一个字

1944
01:25:23,000 --> 01:25:25,000
这肯定是不合适的

1945
01:25:25,000 --> 01:25:28,000
所以现在的 9.0 的版本

1946
01:25:28,000 --> 01:25:29,000
就是最新的版本现在就是说

1947
01:25:29,000 --> 01:25:32,000
就在基数个是可以被断开

1948
01:25:32,000 --> 01:25:34,000
偶数个是不能被断开

1949
01:25:36,000 --> 01:25:37,000
这样能保证就是国旗

1950
01:25:38,000 --> 01:25:41,000
对现在就是这样写的

1951
01:25:41,000 --> 01:25:43,000
刚才说一个旗

1952
01:25:43,000 --> 01:25:45,000
然后给这个旗的区

1953
01:25:45,000 --> 01:25:47,000
它叫 original indicator

1954
01:25:47,000 --> 01:25:51,000
就是都是两个字母代表

1955
01:25:51,000 --> 01:25:53,000
组合成一个区域的图

1956
01:25:54,000 --> 01:25:54,000
但不对

1957
01:25:54,000 --> 01:25:58,000
ISO 的国家代码有三位数组合的

1958
01:25:58,000 --> 01:26:02,000
没有它现在定义都是就是两两组合定义

1959
01:26:02,000 --> 01:26:05,000
那个标志有两个

1960
01:26:05,000 --> 01:26:07,000
那个标志有两个一个十三位一个两位的

1961
01:26:07,000 --> 01:26:08,000
对

1962
01:26:08,000 --> 01:26:12,000
就是因为两位的有不够用的时候

1963
01:26:13,000 --> 01:26:16,000
是 regional indicator 不是 country indicator

1964
01:26:16,000 --> 01:26:19,000
就是这个也是个政治的概念

1965
01:26:19,000 --> 01:26:21,000
就是区域和国家

1966
01:26:21,000 --> 01:26:22,000
比如中国台湾你怎么办

1967
01:26:22,000 --> 01:26:22,000
对吧

1968
01:26:22,000 --> 01:26:29,000
对国航的手机国航的 iPhone 是没有那个

1969
01:26:30,000 --> 01:26:31,000
中华民国的国旗的

1970
01:26:33,000 --> 01:26:35,000
这就就就就很奇怪了

1971
01:26:35,000 --> 01:26:36,000
对吧

1972
01:26:36,000 --> 01:26:38,000
这个都是可以回避的

1973
01:26:38,000 --> 01:26:43,000
不过这些都是有那个 unicode 的文档可以引用的

1974
01:26:43,000 --> 01:26:44,000
关于刚才那个区域

1975
01:26:44,000 --> 01:26:48,000
甚至比如说那个引用的那个语言代码也是

1976
01:26:48,000 --> 01:26:50,000
而且语言代码有两位也有三位

1977
01:26:51,000 --> 01:26:53,000
也是也是 ISO 也有很多层次以的

1978
01:26:54,000 --> 01:26:55,000
对

1979
01:26:55,000 --> 01:26:55,000
对

1980
01:26:55,000 --> 01:26:59,000
也要看它这个 unicode 它引用的是哪一个

1981
01:27:03,000 --> 01:27:03,000
太坑了

1982
01:27:04,000 --> 01:27:05,000
太坑了

1983
01:27:05,000 --> 01:27:08,000
所以大家看了发现其实 unicode 里面有更多的坑

1984
01:27:08,000 --> 01:27:10,000
欢迎大家往里跳

1985
01:27:15,000 --> 01:27:20,000
不过我好像那天看就是下一版本的 unicode 好像就是有光头

1986
01:27:20,000 --> 01:27:22,000
就是 emoji 就更新

1987
01:27:22,000 --> 01:27:24,000
不知道它是怎么实现的

1988
01:27:24,000 --> 01:27:26,000
这个什么红头发的男孩什么什么的

1989
01:27:28,000 --> 01:27:33,000
估计下一版的那个 iOS 更新的话就会上了

1990
01:27:33,000 --> 01:27:34,000
大家可以看了

1991
01:27:34,000 --> 01:27:36,000
你给我实现一个红头发的光头男孩出来

1992
01:27:38,000 --> 01:27:42,000
所以我在想他那个头发就是那个 tag

1993
01:27:43,000 --> 01:27:45,000
那个标签被虽然那个提议被否决了

1994
01:27:45,000 --> 01:27:46,000
可是很多实作

1995
01:27:47,000 --> 01:27:49,000
字体它可以先出来

1996
01:27:49,000 --> 01:27:53,000
后面怎么调由那个是它机制后面怎么改的问题

1997
01:27:56,000 --> 01:27:56,000
好吧

1998
01:27:56,000 --> 01:27:59,000
那今天我们的主题就差不多了

1999
01:28:00,000 --> 01:28:01,000
对

2000
01:28:02,000 --> 01:28:06,000
虽然不太清楚这个拯救世界的点是什么

2001
01:28:06,000 --> 01:28:07,000
不过还是蛮有意思的

2002
01:28:09,000 --> 01:28:12,000
with atlask land 又学到一些东西

2003
01:28:12,000 --> 01:28:18,000
而且还能拉出你们来做一期节目多不容易

2004
01:28:18,000 --> 01:28:23,000
对我们这个就靠你们续命了

2005
01:28:23,000 --> 01:28:23,000
这就是

2006
01:28:28,000 --> 01:28:28,000
好了

2007
01:28:28,000 --> 01:28:30,000
你们可以收尾了

2008
01:28:30,000 --> 01:28:31,000
OK

2009
01:28:31,000 --> 01:28:33,000
感谢收听 IT 技术主题娱乐节目内核魂魂

2010
01:28:33,000 --> 01:28:35,000
我们号称 Hardcore 但是也没有干货

2011
01:28:35,000 --> 01:28:37,000
想听人听不想听人就别听

2012
01:28:37,000 --> 01:28:39,000
您可以为本节目捐款

2013
01:28:39,000 --> 01:28:40,000
地址是 kernelpanic.fm

2014
01:28:41,000 --> 01:28:44,000
捐款结合随意只要是 8 的正常数倍就可以

2015
01:28:44,000 --> 01:28:45,000
捐款不会给你带来什么

2016
01:28:45,000 --> 01:28:46,000
不捐也不会要你

2017
01:28:46,000 --> 01:28:48,000
说句什么我们的口号是 No Hard Feelings

2018
01:28:48,000 --> 01:28:51,000
如果你有任何反馈可以发电子电脑

2019
01:28:53,000 --> 01:28:56,000
hi at kernelpanic.fm

2020
01:28:56,000 --> 01:28:59,000
同时也欢迎你收听 Rail 主持的风头圈

2021
01:29:01,000 --> 01:29:02,000
我们下期节目再会

2022
01:29:04,000 --> 01:29:06,000
别呀 真语你也收个尾

2023
01:29:07,000 --> 01:29:08,000
到我们了

2024
01:29:09,000 --> 01:29:10,000
好吧

2025
01:29:11,000 --> 01:29:12,000
那也感谢大家

2026
01:29:13,000 --> 01:29:14,000
也再次感谢大家收听

2027
01:29:14,000 --> 01:29:17,000
真语这个捧格子今天一直不在状态

2028
01:29:17,000 --> 01:29:19,000
没有我刚刚在看一些 Unicore 的码位

2029
01:29:19,000 --> 01:29:20,000
我在看那个 flag 的

2030
01:29:20,000 --> 01:29:24,000
我刚发现那个英格兰的那个国旗

2031
01:29:24,000 --> 01:29:25,000
叫国旗吗

2032
01:29:25,000 --> 01:29:31,000
它居然要非常长的一组这个 secondary 才能实现

2033
01:29:31,000 --> 01:29:33,000
它为什么要这么长

2034
01:29:34,000 --> 01:29:36,000
就是 GBENG

2035
01:29:36,000 --> 01:29:38,000
GB 是 Great Britain

2036
01:29:38,000 --> 01:29:44,000
它在前面还要加一个黑色飘动旗帜的符号

2037
01:29:44,000 --> 01:29:45,000
对啊

2038
01:29:45,000 --> 01:29:46,000
就是你不加那个的话

2039
01:29:46,000 --> 01:29:48,000
那个旗帜就不是飘动的

2040
01:29:48,000 --> 01:29:49,000
就是一个方形

2041
01:29:49,000 --> 01:29:51,000
我觉得这个其实就是

2042
01:29:51,000 --> 01:29:52,000
英格兰是个地区旗

2043
01:29:52,000 --> 01:29:56,000
就好像我猜如果有巴能浮东堡洲旗的话也是一样的

2044
01:29:56,000 --> 01:29:57,000
对

2045
01:29:57,000 --> 01:29:59,000
甚至如果你要加一个什么市旗的话

2046
01:29:59,000 --> 01:30:01,000
有可能会更复杂

2047
01:30:03,000 --> 01:30:04,000
所以它可能就是

2048
01:30:04,000 --> 01:30:08,000
因此它首先飘动的旗的那个旗标

2049
01:30:08,000 --> 01:30:11,000
就是和国旗的那个旗是不一样的

2050
01:30:11,000 --> 01:30:13,000
而且它不仅用了两位

2051
01:30:13,000 --> 01:30:16,000
它肯定就是后面有金融是要有三位

2052
01:30:16,000 --> 01:30:18,000
然后先用国家

2053
01:30:18,000 --> 01:30:19,000
然后再用地区

2054
01:30:19,000 --> 01:30:20,000
这样的避免冲招

2055
01:30:20,000 --> 01:30:23,000
对它不是说要用那个什么 tag 来实现吗

2056
01:30:23,000 --> 01:30:23,000
对吧

2057
01:30:24,000 --> 01:30:25,000
它是用那个什么 tag

2058
01:30:25,000 --> 01:30:28,000
这个也算是一种 tag

2059
01:30:28,000 --> 01:30:28,000
好像

2060
01:30:29,000 --> 01:30:29,000
对

2061
01:30:29,000 --> 01:30:31,000
就是它并不是用那个

2062
01:30:32,000 --> 01:30:34,000
单纯的那个国旗的那个

2063
01:30:35,000 --> 01:30:38,000
就它不算在国旗的那个规范里面

2064
01:30:38,000 --> 01:30:40,000
它算在那个 tag 的那个规范里面

2065
01:30:40,000 --> 01:30:40,000
对吧

2066
01:30:40,000 --> 01:30:42,000
就是它后面加了一个 tag

2067
01:30:42,000 --> 01:30:49,000
这个 tag 用来标明除了这个国家后面的一个具体的地区这样子的一个组合

2068
01:30:49,000 --> 01:30:50,000
对

2069
01:30:50,000 --> 01:30:51,000
它是这样实现的吧

2070
01:30:51,000 --> 01:30:51,000
对

2071
01:30:51,000 --> 01:30:52,000
是

2072
01:30:52,000 --> 01:30:53,000
应该是这样

2073
01:30:53,000 --> 01:30:53,000
是的

2074
01:30:55,000 --> 01:30:56,000
对

2075
01:30:56,000 --> 01:30:58,000
所以这也可以解决刚才 Ryo 的那个问题吧

2076
01:30:58,000 --> 01:31:01,000
就说万一两位的这个国家 tag 不够用的问题

2077
01:31:01,000 --> 01:31:02,000
我们节目不是结束了吗

2078
01:31:02,000 --> 01:31:03,000
陈正元

2079
01:31:11,000 --> 01:31:11,000
OK

2080
01:31:12,000 --> 01:31:16,000
好那也再次感谢大家收听自然自创的第一

2081
01:31:21,000 --> 01:31:22,000
为什么

2082
01:31:23,000 --> 01:31:23,000
蒙你一下

2083
01:31:25,000 --> 01:31:27,000
第 64 期节目

2084
01:31:28,000 --> 01:31:31,000
那也欢迎大家来信跟我们交流和反馈

2085
01:31:31,000 --> 01:31:38,000
我们的邮箱地址是 podcst.com

2086
01:31:38,000 --> 01:31:42,000
同时大家也可以通过这个邮箱地址在 PayPal 和支付宝上给我们捐赠

2087
01:31:42,000 --> 01:31:45,000
那么如果大家想在社交网络上关注我们

2088
01:31:45,000 --> 01:31:50,000
我们在新浪微博推特和微信上的 ID 都是 the type

2089
01:31:50,000 --> 01:31:54,000
在 Facebook 上搜索 type is beautiful 也可以找到我们

2090
01:31:54,000 --> 01:31:55,000
好就到这里

2091
01:31:55,000 --> 01:31:56,000
感谢大家收听

2092
01:31:56,000 --> 01:31:58,000
我们下次节目再见

2093
01:31:58,000 --> 01:31:58,000
拜拜

2094
01:31:59,000 --> 01:32:00,000
拜拜

