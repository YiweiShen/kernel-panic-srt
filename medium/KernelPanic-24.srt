1
00:00:00,000 --> 00:00:05,000
欢迎收听 IPN Podcast 网络旗下的 IT 技术主题娱乐节目内核恐慌

2
00:00:05,000 --> 00:00:06,000
我们又回来了

3
00:00:06,000 --> 00:00:08,000
我们号称 Hardcore 但是没有干货

4
00:00:08,000 --> 00:00:10,000
想听的人听不想听的人就别听

5
00:00:10,000 --> 00:00:13,000
本节目的网址是 ipn.li.kernelpanic

6
00:00:13,000 --> 00:00:16,000
我们推荐大家使用 Podcast 客户端订阅节目

7
00:00:16,000 --> 00:00:20,000
详情请访问 ipn.li.faq

8
00:00:20,000 --> 00:00:21,000
欢迎你为本节目捐款

9
00:00:21,000 --> 00:00:25,000
捐款地址是 ipn.li.kernelpanic.donate

10
00:00:25,000 --> 00:00:26,000
捐款金额随意

11
00:00:26,000 --> 00:00:28,000
只要是 8 个证人数位也可以

12
00:00:29,000 --> 00:00:30,000
捐款不会为你带来什么

13
00:00:30,000 --> 00:00:31,000
不捐也不会让你失去什么

14
00:00:31,000 --> 00:00:34,000
我们的口号是 trust no one

15
00:00:34,000 --> 00:00:35,000
even your compiler

16
00:00:38,000 --> 00:00:39,000
好久没有念这句话了

17
00:00:40,000 --> 00:00:41,000
还可以挺流畅的

18
00:00:42,000 --> 00:00:45,000
所以你一个月玩的可好

19
00:00:45,000 --> 00:00:46,000
还不错

20
00:00:46,000 --> 00:00:49,000
带着爸妈妈去了

21
00:00:49,000 --> 00:00:54,000
以前我学习过生活过工作过

22
00:00:54,000 --> 00:00:55,000
战斗过的地方

23
00:00:55,000 --> 00:00:56,000
然后去了些

24
00:00:56,000 --> 00:01:01,000
我觉得德语区还比较满

25
00:01:01,000 --> 00:01:02,000
还比较漂亮的一些地方

26
00:01:02,000 --> 00:01:04,000
没有去更远的地方

27
00:01:05,000 --> 00:01:06,000
OK

28
00:01:06,000 --> 00:01:07,000
所以这一站是什么

29
00:01:08,000 --> 00:01:10,000
重走长征路

30
00:01:10,000 --> 00:01:10,000
对

31
00:01:10,000 --> 00:01:13,000
因为过去的

32
00:01:13,000 --> 00:01:15,000
我在德国有九年了

33
00:01:15,000 --> 00:01:17,000
然后过去九年里面

34
00:01:17,000 --> 00:01:19,000
一般都是他们只能从电话

35
00:01:19,000 --> 00:01:20,000
或者是照片里面

36
00:01:20,000 --> 00:01:22,000
知道我曾经在什么地方待过

37
00:01:22,000 --> 00:01:24,000
然后这一次可以身临其境的看一看

38
00:01:24,000 --> 00:01:25,000
我觉得还是挺有意义的

39
00:01:26,000 --> 00:01:28,000
他们过去从那里去过是吧

40
00:01:28,000 --> 00:01:28,000
对

41
00:01:28,000 --> 00:01:29,000
这是第一次来

42
00:01:29,000 --> 00:01:31,000
甚至之前二老连护照都没有

43
00:01:31,000 --> 00:01:33,000
所以这是第一次出国

44
00:01:34,000 --> 00:01:35,000
你也是不孝子孙

45
00:01:37,000 --> 00:01:39,000
所以另尊另头去过加拿大

46
00:01:39,000 --> 00:01:40,000
其实也并没有

47
00:01:41,000 --> 00:01:43,000
他们也没有护照

48
00:01:45,000 --> 00:01:46,000
不过他们有比较忙

49
00:01:46,000 --> 00:01:49,000
所以也不太可能走得开现在

50
00:01:50,000 --> 00:01:51,000
我父母也是

51
00:01:51,000 --> 00:01:53,000
其实刚刚才退休

52
00:01:53,000 --> 00:01:55,000
所以也是刚刚解决了

53
00:01:56,000 --> 00:01:57,000
对挺好的

54
00:01:57,000 --> 00:01:59,000
上次因为你家在天津

55
00:01:59,000 --> 00:02:01,000
所以还是要关心一下

56
00:02:02,000 --> 00:02:03,000
爆炸对你家印象怎么样

57
00:02:05,000 --> 00:02:07,000
我们家距离爆炸现场的直线距离

58
00:02:07,000 --> 00:02:09,000
是 30 多公里

59
00:02:09,000 --> 00:02:12,000
所以算是幸免遇到

60
00:02:12,000 --> 00:02:15,000
但如果和其他各位比起来的话

61
00:02:15,000 --> 00:02:17,000
那还是比较近的

62
00:02:17,000 --> 00:02:19,000
然后之前也是比较担心说

63
00:02:19,000 --> 00:02:23,000
如果有泄漏的毒害物质

64
00:02:23,000 --> 00:02:23,000
在外面

65
00:02:25,000 --> 00:02:26,000
要不要考虑先去

66
00:02:26,000 --> 00:02:27,000
因为我们家是浙江人

67
00:02:27,000 --> 00:02:30,000
其实就是要先回老家避一避风头

68
00:02:30,000 --> 00:02:31,000
所以

69
00:02:31,000 --> 00:02:33,000
但目前看来还好

70
00:02:33,000 --> 00:02:34,000
然后我爸妈又特别

71
00:02:36,000 --> 00:02:36,000
我也不知道

72
00:02:36,000 --> 00:02:37,000
他们两个都是化工

73
00:02:37,000 --> 00:02:39,000
所以不把这个当事

74
00:02:39,000 --> 00:02:42,000
总觉得无所谓

75
00:02:43,000 --> 00:02:46,000
那我暂时也没有什么特别的影响

76
00:02:49,000 --> 00:02:50,000
所以这个时候你需要

77
00:02:50,000 --> 00:02:52,000
特别需要散工资的保护

78
00:02:54,000 --> 00:02:55,000
Umbrella 你说

79
00:02:56,000 --> 00:02:57,000
对就是那个

80
00:02:57,000 --> 00:02:58,000
What? 幻熊症

81
00:02:59,000 --> 00:03:01,000
保护人们的健康

82
00:03:02,000 --> 00:03:04,000
Umbrella 的摩托

83
00:03:06,000 --> 00:03:07,000
Avatar Science

84
00:03:08,000 --> 00:03:10,000
那个也可以

85
00:03:11,000 --> 00:03:12,000
这个是一个什么

86
00:03:13,000 --> 00:03:16,000
前面那个散工资是那个生化危机的梗

87
00:03:16,000 --> 00:03:17,000
对

88
00:03:17,000 --> 00:03:19,000
那个还挺奇怪的

89
00:03:20,000 --> 00:03:21,000
因为我现在在深圳

90
00:03:22,000 --> 00:03:23,000
我现在在路上

91
00:03:23,000 --> 00:03:24,000
我今天看到两次了

92
00:03:24,000 --> 00:03:28,000
别人在那个车上贴了散工资的那个标识那些

93
00:03:29,000 --> 00:03:30,000
这是某种

94
00:03:30,000 --> 00:03:31,000
Codes 吗

95
00:03:31,000 --> 00:03:32,000
就是

96
00:03:32,000 --> 00:03:33,000
邪教吗

97
00:03:34,000 --> 00:03:36,000
就我还挺吃惊的

98
00:03:36,000 --> 00:03:36,000
说

99
00:03:37,000 --> 00:03:37,000
这个

100
00:03:38,000 --> 00:03:39,000
还有珍爱

101
00:03:40,000 --> 00:03:40,000
遍地在

102
00:03:40,000 --> 00:03:42,000
还有人在搞这个梗是吧

103
00:03:43,000 --> 00:03:43,000
没错没错

104
00:03:44,000 --> 00:03:45,000
回头我去贴一个

105
00:03:45,000 --> 00:03:47,000
回去我去贴一个 Avatar Science

106
00:03:47,000 --> 00:03:48,000
在车厢后

107
00:03:48,000 --> 00:03:52,000
其实是个蛮好的点子

108
00:03:52,000 --> 00:03:53,000
可以买得到

109
00:03:53,000 --> 00:03:55,000
你可以直接买来贴在车上就好了

110
00:03:55,000 --> 00:03:55,000
对

111
00:03:55,000 --> 00:03:58,000
而且 Valve 好像还有 T 恤之类的卖

112
00:03:59,000 --> 00:04:01,000
全套主题都有的

113
00:04:01,000 --> 00:04:01,000
对

114
00:04:01,000 --> 00:04:03,000
还有的是 jinx.com

115
00:04:03,000 --> 00:04:06,000
在卖那个 Portal 相关的主题

116
00:04:07,000 --> 00:04:09,000
这就是你之前买你那个什么

117
00:04:09,000 --> 00:04:10,000
Port of Arcraft

118
00:04:12,000 --> 00:04:13,000
那个东西有学名吗

119
00:04:13,000 --> 00:04:16,000
就是贴那个笔记本垫

120
00:04:16,000 --> 00:04:18,000
笔记本电脑背壳表面那个纸

121
00:04:19,000 --> 00:04:20,000
就是 sticker

122
00:04:20,000 --> 00:04:21,000
就叫 sticker

123
00:04:21,000 --> 00:04:22,000
没有什么其他的

124
00:04:22,000 --> 00:04:23,000
没有什么特别的

125
00:04:23,000 --> 00:04:25,000
因为能贴笔记本电脑的表面

126
00:04:25,000 --> 00:04:27,000
还可以贴别的

127
00:04:27,000 --> 00:04:29,000
也可以贴别的东西的表面

128
00:04:30,000 --> 00:04:34,000
因为之前苹果出过一个系列广告片

129
00:04:34,000 --> 00:04:34,000
一个广告片

130
00:04:35,000 --> 00:04:37,000
他的 MacBook Air 上面

131
00:04:38,000 --> 00:04:39,000
贴了一大堆 sticker

132
00:04:39,000 --> 00:04:39,000
一大堆 sticker

133
00:04:39,000 --> 00:04:40,000
他每一个做了一个

134
00:04:40,000 --> 00:04:41,000
这个叫什么

135
00:04:41,000 --> 00:04:42,000
这叫 slow motion

136
00:04:42,000 --> 00:04:43,000
也不叫 slow motion

137
00:04:43,000 --> 00:04:44,000
这个叫什么来的

138
00:04:44,000 --> 00:04:45,000
一个专门的梳理这种拍法

139
00:04:46,000 --> 00:04:47,000
黏土动画

140
00:04:47,000 --> 00:04:48,000
对对对

141
00:04:48,000 --> 00:04:50,000
黏土动画就是他每一张拍一个

142
00:04:50,000 --> 00:04:51,000
然后做成一帧一帧

143
00:04:51,000 --> 00:04:52,000
然后串起来播的

144
00:04:53,000 --> 00:04:53,000
对

145
00:04:53,000 --> 00:04:54,000
还挺有意思

146
00:04:54,000 --> 00:04:54,000
我看过

147
00:04:54,000 --> 00:04:55,000
对

148
00:04:55,000 --> 00:04:55,000
但是

149
00:04:59,000 --> 00:05:01,000
苹果官网不卖 sticker 真的太亏了

150
00:05:01,000 --> 00:05:04,000
我今天看了那个周五我好想买

151
00:05:05,000 --> 00:05:06,000
不过我觉得这个是

152
00:05:06,000 --> 00:05:07,000
迟早的事

153
00:05:07,000 --> 00:05:08,000
他们都已经卖

154
00:05:08,000 --> 00:05:09,000
就做手机壳了

155
00:05:09,000 --> 00:05:11,000
下一步不就是 sticker 了

156
00:05:12,000 --> 00:05:13,000
这很难说

157
00:05:13,000 --> 00:05:13,000
我觉得

158
00:05:13,000 --> 00:05:15,000
其实一般公司是不太愿意

159
00:05:15,000 --> 00:05:19,000
让 sticker 去修改自己的 logo

160
00:05:19,000 --> 00:05:20,000
就好像

161
00:05:22,000 --> 00:05:25,000
提供改装车选项的车厂

162
00:05:25,000 --> 00:05:28,000
不会让你把他的 logo 弄成别的颜色一样

163
00:05:29,000 --> 00:05:31,000
他这个 sticker 还不算修改

164
00:05:31,000 --> 00:05:34,000
他只是说就在边缘做一些发挥了

165
00:05:35,000 --> 00:05:35,000
发散

166
00:05:36,000 --> 00:05:37,000
比如说我特别印象是一个

167
00:05:38,000 --> 00:05:39,000
钢铁侠的手上不是一个

168
00:05:39,000 --> 00:05:41,000
亮灯的喷东西的那个东西

169
00:05:41,000 --> 00:05:42,000
胸前

170
00:05:42,000 --> 00:05:42,000
对

171
00:05:42,000 --> 00:05:43,000
他就直接把它装到

172
00:05:44,000 --> 00:05:46,000
用苹果图标

173
00:05:46,000 --> 00:05:47,000
它在

174
00:05:48,000 --> 00:05:49,000
MacBook Pro 上是可以发光的

175
00:05:50,000 --> 00:05:50,000
对

176
00:05:51,000 --> 00:05:51,000
挺有意思的

177
00:05:51,000 --> 00:05:54,000
不过现在新出的 MacBook

178
00:05:54,000 --> 00:05:55,000
12 寸的就没写了

179
00:05:56,000 --> 00:05:57,000
为什么太小了

180
00:05:57,000 --> 00:05:58,000
不发光

181
00:05:59,000 --> 00:06:00,000
真的这还蛮遗憾的

182
00:06:01,000 --> 00:06:01,000
对

183
00:06:02,000 --> 00:06:02,000
好吧

184
00:06:02,000 --> 00:06:04,000
我们做一下

185
00:06:04,000 --> 00:06:07,000
上一期也就是差不多一个多月以前的 follow up

186
00:06:08,000 --> 00:06:08,000
对

187
00:06:10,000 --> 00:06:11,000
当时说什么来着

188
00:06:11,000 --> 00:06:12,000
好久了

189
00:06:12,000 --> 00:06:14,000
我又不记得上一期说过什么

190
00:06:14,000 --> 00:06:15,000
怎么觉得

191
00:06:15,000 --> 00:06:16,000
对我也忘了说什么

192
00:06:16,000 --> 00:06:18,000
我把 note 写在那里

193
00:06:18,000 --> 00:06:20,000
但是我已经想不起来是怎么一回事了

194
00:06:20,000 --> 00:06:22,000
但是提到这么一个概念

195
00:06:22,000 --> 00:06:23,000
我想起当时说是一个什么

196
00:06:23,000 --> 00:06:25,000
近视开发

197
00:06:26,000 --> 00:06:28,000
应该应用叫做 clean room

198
00:06:29,000 --> 00:06:30,000
的方法

199
00:06:30,000 --> 00:06:31,000
干净的房子

200
00:06:31,000 --> 00:06:33,000
当时我记得莫名其妙说成了

201
00:06:33,000 --> 00:06:34,000
clean box

202
00:06:35,000 --> 00:06:36,000
white room

203
00:06:36,000 --> 00:06:36,000
对

204
00:06:36,000 --> 00:06:40,000
后来想想应该是和 black box 混在一起

205
00:06:40,000 --> 00:06:42,000
对比较久

206
00:06:43,000 --> 00:06:44,000
anyway

207
00:06:45,000 --> 00:06:45,000
小口误

208
00:06:45,000 --> 00:06:46,000
无所谓

209
00:06:47,000 --> 00:06:51,000
然后有几位热心听众给我们写来的来信

210
00:06:51,000 --> 00:06:53,000
然后

211
00:06:55,000 --> 00:06:58,000
则其中几段念一下

212
00:06:58,000 --> 00:07:03,000
首先要为一位不愿透露姓名的朋友道个歉

213
00:07:03,000 --> 00:07:05,000
就是有一次我们

214
00:07:05,000 --> 00:07:06,000
念了他的信

215
00:07:06,000 --> 00:07:09,000
虽然他解信强烈要求不要念

216
00:07:09,000 --> 00:07:10,000
但我们还是念了

217
00:07:10,000 --> 00:07:14,000
然后某种意义上讲我们侵犯了叫什么著作权法

218
00:07:14,000 --> 00:07:14,000
是吧

219
00:07:15,000 --> 00:07:17,000
在这边给你道个歉

220
00:07:17,000 --> 00:07:18,000
非常不幸

221
00:07:18,000 --> 00:07:21,000
不过我觉得那封信写的还是蛮好的

222
00:07:21,000 --> 00:07:22,000
不念真的挺可惜

223
00:07:22,000 --> 00:07:25,000
这就是一个借口

224
00:07:25,000 --> 00:07:29,000
所以你去支付商那个问题下面自己付金请罪吧

225
00:07:29,000 --> 00:07:31,000
我已经答了

226
00:07:31,000 --> 00:07:32,000
我觉得就是他问的

227
00:07:32,000 --> 00:07:33,000
OK 好吧

228
00:07:35,000 --> 00:07:36,000
OK

229
00:07:36,000 --> 00:07:38,000
然后上一期节目之后

230
00:07:38,000 --> 00:07:41,000
有一位读者写信来说

231
00:07:41,000 --> 00:07:42,000
这期节目还是老样子

232
00:07:42,000 --> 00:07:43,000
软就软吧

233
00:07:43,000 --> 00:07:46,000
刚刚说到一点让我心动的内容就戛然而止了

234
00:07:47,000 --> 00:07:50,000
看来中老年程序员是得认真关注一下自己的前线问题了

235
00:07:51,000 --> 00:07:53,000
这内容便是吴涛说的

236
00:07:53,000 --> 00:07:56,000
中老年程序员工作了五六年是所处的境地

237
00:07:56,000 --> 00:07:58,000
我个人就处在这样一个境遇里

238
00:07:58,000 --> 00:07:59,000
积累不好

239
00:07:59,000 --> 00:08:00,000
很难有突破

240
00:08:00,000 --> 00:08:01,000
又不想转管理

241
00:08:01,000 --> 00:08:03,000
不上不下

242
00:08:03,000 --> 00:08:06,000
锐我又说要可能要告别专业程序员了

243
00:08:06,000 --> 00:08:08,000
更是让我内心难以平静

244
00:08:08,000 --> 00:08:10,000
这样的

245
00:08:10,000 --> 00:08:14,000
桑苏都觉得自己距离大牛太遥远

246
00:08:14,000 --> 00:08:15,000
是自取其辱

247
00:08:15,000 --> 00:08:18,000
我等鼠辈还怎么狗活下去

248
00:08:19,000 --> 00:08:20,000
祝两位一切顺利

249
00:08:20,000 --> 00:08:21,000
吴涛有一个好假期

250
00:08:21,000 --> 00:08:22,000
桑苏是什么

251
00:08:23,000 --> 00:08:25,000
桑苏是

252
00:08:27,000 --> 00:08:28,000
我想想如果我没理解错的话

253
00:08:28,000 --> 00:08:30,000
指的是非常有成就的人

254
00:08:31,000 --> 00:08:32,000
What

255
00:08:32,000 --> 00:08:33,000
这是说我们吗

256
00:08:34,000 --> 00:08:37,000
说你确切的说

257
00:08:37,000 --> 00:08:37,000
天哪

258
00:08:37,000 --> 00:08:38,000
桑苏

259
00:08:38,000 --> 00:08:39,000
这是什么语言

260
00:08:40,000 --> 00:08:41,000
不知道

261
00:08:41,000 --> 00:08:44,000
这难道是什么

262
00:08:44,000 --> 00:08:47,000
这个古文里的梗吗

263
00:08:48,000 --> 00:08:51,000
又凸显我们暴露自己没有文化

264
00:08:51,000 --> 00:08:52,000
怎么办

265
00:08:54,000 --> 00:08:55,000
不知道

266
00:08:55,000 --> 00:08:55,000
Anyway

267
00:08:55,000 --> 00:08:59,000
反正我觉得就

268
00:08:59,000 --> 00:09:01,000
对自己的资质有一个正确的认识

269
00:09:01,000 --> 00:09:02,000
我觉得

270
00:09:02,000 --> 00:09:04,000
但是我觉得这个世界也不一定

271
00:09:04,000 --> 00:09:06,000
非要就大牛才需要

272
00:09:07,000 --> 00:09:09,000
不然正常人的生活该怎么过

273
00:09:10,000 --> 00:09:13,000
好像那本叫什么 Rework

274
00:09:13,000 --> 00:09:15,000
讲 startup 的书

275
00:09:15,000 --> 00:09:16,000
或者一句话

276
00:09:16,000 --> 00:09:17,000
就在讲什么

277
00:09:17,000 --> 00:09:19,000
讲工作方法的书里面提到说

278
00:09:19,000 --> 00:09:21,000
你不一定要成为一个

279
00:09:23,000 --> 00:09:25,000
了不起的企业才算成功

280
00:09:25,000 --> 00:09:26,000
如果你能成立一个小的

281
00:09:26,000 --> 00:09:28,000
能够自己维持下去

282
00:09:28,000 --> 00:09:30,000
并且活得很好的小公司

283
00:09:30,000 --> 00:09:31,000
同样是一种成功

284
00:09:33,000 --> 00:09:33,000
对

285
00:09:33,000 --> 00:09:35,000
对刚好前面有一个

286
00:09:35,000 --> 00:09:37,000
就前几天那个

287
00:09:37,000 --> 00:09:40,000
Backblaze 的博客发了篇文章

288
00:09:41,000 --> 00:09:44,000
叫做 Don't build a billion dollar

289
00:09:44,000 --> 00:09:45,000
company 还是什么来的

290
00:09:46,000 --> 00:09:49,000
Backblaze 就是现在我在用的一个备份软件

291
00:09:49,000 --> 00:09:50,000
自相机能力跟他们打广告

292
00:09:50,000 --> 00:09:52,000
就是他的那个客户端写的非常不错

293
00:09:52,000 --> 00:09:53,000
然后也很便宜

294
00:09:53,000 --> 00:09:55,000
他就说

295
00:09:55,000 --> 00:09:56,000
其实

296
00:09:57,000 --> 00:09:58,000
因为现在很多这个风头模式

297
00:09:58,000 --> 00:10:00,000
就是说你一定要成为一个

298
00:10:00,000 --> 00:10:02,000
就是 the next big thing 对吧

299
00:10:03,000 --> 00:10:04,000
你一定要成为 unicore

300
00:10:04,000 --> 00:10:06,000
对对不然就没有意思了

301
00:10:06,000 --> 00:10:08,000
当然从风险投资的角度来说

302
00:10:08,000 --> 00:10:09,000
确实是这样子的

303
00:10:09,000 --> 00:10:10,000
但是

304
00:10:11,000 --> 00:10:13,000
你可以考虑开一个叫做

305
00:10:13,000 --> 00:10:15,000
叫做 lifestyle business

306
00:10:15,000 --> 00:10:18,000
就是不一定要拿风头的钱

307
00:10:18,000 --> 00:10:19,000
然后只要能够营收平衡

308
00:10:19,000 --> 00:10:21,000
做一个简单单的这个生意

309
00:10:21,000 --> 00:10:22,000
其实也是可以的

310
00:10:22,000 --> 00:10:25,000
做一个职业或者人生的选择

311
00:10:26,000 --> 00:10:28,000
就不是一定要奔着那个什么

312
00:10:28,000 --> 00:10:30,000
市值十亿一百亿

313
00:10:30,000 --> 00:10:32,000
一千亿美元的公司去这种情况

314
00:10:33,000 --> 00:10:36,000
话是这样说吧

315
00:10:36,000 --> 00:10:38,000
就是我们当然永远可以说

316
00:10:38,000 --> 00:10:41,000
在这个世俗的

317
00:10:41,000 --> 00:10:44,000
衡量成功的观念里面

318
00:10:44,000 --> 00:10:47,000
你只有做到最大最强才是最成功的

319
00:10:47,000 --> 00:10:48,000
但与此同时

320
00:10:48,000 --> 00:10:51,000
其实你做一个能够自谋其力的

321
00:10:52,000 --> 00:10:54,000
自食其力

322
00:10:54,000 --> 00:10:57,000
自食其力的自谋职业好像也不错

323
00:10:57,000 --> 00:11:00,000
但是我觉得在程序员这个群体里面

324
00:11:00,000 --> 00:11:01,000
可能

325
00:11:02,000 --> 00:11:05,000
就因为普遍来说都不会太笨

326
00:11:05,000 --> 00:11:08,000
因为智商是个

327
00:11:08,000 --> 00:11:10,000
做写程序的门槛是吧

328
00:11:10,000 --> 00:11:12,000
那可能在聪明人里面

329
00:11:12,000 --> 00:11:15,000
会更有这样一种追求

330
00:11:15,000 --> 00:11:17,000
追求

331
00:11:17,000 --> 00:11:19,000
去试着要追寻

332
00:11:19,000 --> 00:11:22,000
让自己的事业变得最了不起

333
00:11:22,000 --> 00:11:25,000
或者是非大公司不进

334
00:11:25,000 --> 00:11:30,000
或者是非大的这种点子

335
00:11:30,000 --> 00:11:32,000
不去想的一种倾向

336
00:11:32,000 --> 00:11:34,000
这种倾向是确实存在的

337
00:11:34,000 --> 00:11:34,000
我觉得

338
00:11:34,000 --> 00:11:37,000
据说就是雄心荷尔蒙

339
00:11:37,000 --> 00:11:38,000
分泌过剩的结果

340
00:11:40,000 --> 00:11:41,000
也就是说

341
00:11:41,000 --> 00:11:44,000
如果我们找一个

342
00:11:44,000 --> 00:11:47,000
因为某种原因失去了

343
00:11:47,000 --> 00:11:51,000
这个激素分泌器官的程序

344
00:11:51,000 --> 00:11:53,000
他就不会有这样的倾向是吧

345
00:11:53,000 --> 00:11:54,000
这很难说

346
00:11:54,000 --> 00:11:55,000
这只是一个说法

347
00:11:55,000 --> 00:11:57,000
我觉得也很难去证明它了

348
00:11:57,000 --> 00:11:59,000
但是我觉得

349
00:11:59,000 --> 00:12:00,000
就好像

350
00:12:00,000 --> 00:12:01,000
不是所有的成功

351
00:12:01,000 --> 00:12:02,000
都是一定要什么

352
00:12:02,000 --> 00:12:03,000
所谓出人头地

353
00:12:03,000 --> 00:12:05,000
你能有一份安稳的生活

354
00:12:05,000 --> 00:12:06,000
开心的工作

355
00:12:06,000 --> 00:12:08,000
然后这个叫做 work life balance

356
00:12:08,000 --> 00:12:11,000
就生活工作平衡都很好

357
00:12:11,000 --> 00:12:13,000
其实我觉得也是一种选择

358
00:12:13,000 --> 00:12:15,000
就不一定真的要像

359
00:12:15,000 --> 00:12:16,000
那个说的一样

360
00:12:16,000 --> 00:12:18,000
要成为在某一个领域

361
00:12:18,000 --> 00:12:21,000
或者是在某一个人生阶段

362
00:12:21,000 --> 00:12:22,000
令人望其向背的大牛

363
00:12:22,000 --> 00:12:25,000
其实这也不是大多数人的选择吧

364
00:12:25,000 --> 00:12:26,000
我觉得

365
00:12:27,000 --> 00:12:29,000
我觉得可能成为大牛

366
00:12:29,000 --> 00:12:32,000
更多的是凭借天赋

367
00:12:32,000 --> 00:12:33,000
就一起努力

368
00:12:33,000 --> 00:12:35,000
如果你真的能够成为大牛的话

369
00:12:35,000 --> 00:12:38,000
你就不会去费力想要成为大牛

370
00:12:38,000 --> 00:12:40,000
而如果你不能成为大牛的话

371
00:12:40,000 --> 00:12:43,000
那不如就接受自己的命运

372
00:12:43,000 --> 00:12:44,000
那有什么办法

373
00:12:44,000 --> 00:12:45,000
就好像颜值一样

374
00:12:45,000 --> 00:12:47,000
颜值就是没有别人高

375
00:12:47,000 --> 00:12:48,000
你又能有什么办法

376
00:12:50,000 --> 00:12:53,000
而且这世界上有整容手术

377
00:12:53,000 --> 00:12:55,000
但没有智商提高手术

378
00:12:56,000 --> 00:12:57,000
不过也不一定

379
00:12:57,000 --> 00:12:58,000
据说有一些叫做

380
00:13:00,000 --> 00:13:02,000
一些药物可以提高智商

381
00:13:02,000 --> 00:13:03,000
据说

382
00:13:04,000 --> 00:13:05,000
你是刺激脑细胞发展吗

383
00:13:05,000 --> 00:13:06,000
还是

384
00:13:06,000 --> 00:13:09,000
这是 smart drug 这次类的东西

385
00:13:09,000 --> 00:13:11,000
但我不知道这个靠谱程度怎么样

386
00:13:11,000 --> 00:13:12,000
就是代考

387
00:13:12,000 --> 00:13:13,000
OK 节目录完了

388
00:13:13,000 --> 00:13:15,000
你告诉我拿牛吗

389
00:13:15,000 --> 00:13:17,000
你就不用了吧

390
00:13:19,000 --> 00:13:23,000
所以 Rail 现在不仅仅是

391
00:13:23,000 --> 00:13:25,000
可能要告别专业程序员了

392
00:13:25,000 --> 00:13:27,000
Rail 目前已经真的告别专业程序了

393
00:13:27,000 --> 00:13:29,000
Rail 迎来了他人生中的

394
00:13:29,000 --> 00:13:30,000
另一个新的阶段

395
00:13:30,000 --> 00:13:33,000
那么你要不要谈一谈感想

396
00:13:34,000 --> 00:13:37,000
我就是想说每个行业都不容易

397
00:13:38,000 --> 00:13:39,000
就这么简单吗

398
00:13:39,000 --> 00:13:40,000
没有别的吗

399
00:13:41,000 --> 00:13:41,000
没有了

400
00:13:41,000 --> 00:13:43,000
因为也刚开始做

401
00:13:43,000 --> 00:13:44,000
就是还是有一个

402
00:13:44,000 --> 00:13:46,000
我还有一个学习的过程

403
00:13:46,000 --> 00:13:46,000
我觉得

404
00:13:47,000 --> 00:13:49,000
所以你现在的工作是完全不用写的吗

405
00:13:50,000 --> 00:13:51,000
其实也不是

406
00:13:51,000 --> 00:13:52,000
我还是希望说

407
00:13:52,000 --> 00:13:54,000
就我现在是这么想的

408
00:13:54,000 --> 00:13:55,000
我觉得写程序这一点

409
00:13:55,000 --> 00:13:58,000
可以帮助我提升在其他领域的工作效率

410
00:13:58,000 --> 00:13:59,000
比如说

411
00:13:59,000 --> 00:14:01,000
别人要苦哈哈的做一点事

412
00:14:01,000 --> 00:14:03,000
我可以写一些小程序

413
00:14:03,000 --> 00:14:05,000
可以帮助我能够更好地完成我的工作

414
00:14:05,000 --> 00:14:06,000
这还挺开心的其实

415
00:14:08,000 --> 00:14:12,000
你会觉得自己之前过去这 10 年

416
00:14:12,000 --> 00:14:15,000
有 10 年接受到了编程

417
00:14:15,000 --> 00:14:16,000
专业的科班的编程教育

418
00:14:16,000 --> 00:14:19,000
对你接下来的工作有什么影响

419
00:14:20,000 --> 00:14:21,000
还蛮有影响

420
00:14:21,000 --> 00:14:23,000
起码可以和程序聊得来

421
00:14:24,000 --> 00:14:25,000
OK

422
00:14:25,000 --> 00:14:27,000
这是一个比较大的 part

423
00:14:27,000 --> 00:14:30,000
就是程序员在很多时候

424
00:14:30,000 --> 00:14:32,000
是不愿意跟不愿意一些程序的人聊天的

425
00:14:32,000 --> 00:14:33,000
尤其是同性的

426
00:14:33,000 --> 00:14:33,000
对

427
00:14:33,000 --> 00:14:35,000
因为思维方式不一样

428
00:14:35,000 --> 00:14:36,000
聊不到一块去

429
00:14:37,000 --> 00:14:41,000
所以至少我觉得以我现在的知识储备

430
00:14:41,000 --> 00:14:44,000
和套词的能力

431
00:14:44,000 --> 00:14:45,000
应该还能

432
00:14:45,000 --> 00:14:47,000
在别人没有发现我

433
00:14:48,000 --> 00:14:50,000
彻底的门外汉之前能够先撑一会

434
00:14:51,000 --> 00:14:53,000
你怎么可能是彻底门外汉呢

435
00:14:53,000 --> 00:14:54,000
你在主持这样一档节目

436
00:14:54,000 --> 00:14:56,000
然后说自己是一个彻底门外汉

437
00:14:56,000 --> 00:14:58,000
你不怕这个

438
00:14:58,000 --> 00:14:59,000
听中了要求

439
00:14:59,000 --> 00:15:01,000
摔耳机就不听了是吧

440
00:15:01,000 --> 00:15:02,000
对

441
00:15:05,000 --> 00:15:06,000
好吧

442
00:15:06,000 --> 00:15:08,000
那接下来念下一封信

443
00:15:09,000 --> 00:15:10,000
如果有幸被念

444
00:15:10,000 --> 00:15:12,000
求不念出名字和邮箱地址

445
00:15:12,000 --> 00:15:12,000
多谢

446
00:15:13,000 --> 00:15:14,000
吴涛和锐友你们好

447
00:15:14,000 --> 00:15:15,000
终于有机会提起电脑

448
00:15:15,000 --> 00:15:16,000
写一些反馈

449
00:15:16,000 --> 00:15:18,000
之前许多次听节目有感

450
00:15:18,000 --> 00:15:20,000
甚至做了笔记准备回复

451
00:15:20,000 --> 00:15:21,000
无奈下一次播出的时候

452
00:15:21,000 --> 00:15:23,000
才想起来外汉未曾写成

453
00:15:23,000 --> 00:15:25,000
这也是拖延症

454
00:15:27,000 --> 00:15:28,000
听了这次成学生

455
00:15:28,000 --> 00:15:29,000
士病得治

456
00:15:30,000 --> 00:15:31,000
别这样了

457
00:15:31,000 --> 00:15:32,000
不要再逼人家了

458
00:15:32,000 --> 00:15:33,000
好吧

459
00:15:33,000 --> 00:15:34,000
开玩笑

460
00:15:34,000 --> 00:15:35,000
听了这一次成学生之路

461
00:15:35,000 --> 00:15:36,000
很有感慨

462
00:15:36,000 --> 00:15:38,000
我的情况可能跟锐友有点相似

463
00:15:38,000 --> 00:15:40,000
本科绣外语和金融

464
00:15:40,000 --> 00:15:41,000
无奈真的放不下

465
00:15:41,000 --> 00:15:42,000
这些计算机的热爱

466
00:15:42,000 --> 00:15:43,000
曾经自学 Java

467
00:15:44,000 --> 00:15:46,000
尝试过科技媒体

468
00:15:46,000 --> 00:15:47,000
中学不够深入

469
00:15:47,000 --> 00:15:49,000
于是决定考研 CS

470
00:15:50,000 --> 00:15:54,000
也考虑过把计算机当做兴趣爱好

471
00:15:54,000 --> 00:15:55,000
但实在是放不下

472
00:15:55,000 --> 00:15:56,000
加上头脑发热

473
00:15:56,000 --> 00:15:57,000
选的专业不尽如人意

474
00:15:57,000 --> 00:15:59,000
语言就不容讲了

475
00:15:59,000 --> 00:16:01,000
我学的还可能是最令人

476
00:16:02,000 --> 00:16:03,000
最令人民讨厌的语言

477
00:16:04,000 --> 00:16:06,000
什么语言最令最令人民讨厌

478
00:16:07,000 --> 00:16:07,000
日语了

479
00:16:07,000 --> 00:16:08,000
那就是是不是

480
00:16:08,000 --> 00:16:09,000
What

481
00:16:09,000 --> 00:16:11,000
最令人民讨厌的语言

482
00:16:12,000 --> 00:16:13,000
阿拉伯语吧

483
00:16:14,000 --> 00:16:16,000
为什么会令人民讨厌呢

484
00:16:17,000 --> 00:16:19,000
最令人民讨厌的语言

485
00:16:19,000 --> 00:16:20,000
嗯

486
00:16:20,000 --> 00:16:20,000
不知道

487
00:16:20,000 --> 00:16:21,000
好奇

488
00:16:23,000 --> 00:16:24,000
印地鱼

489
00:16:25,000 --> 00:16:26,000
令让两海跟你拼命

490
00:16:28,000 --> 00:16:28,000
Sorry

491
00:16:29,000 --> 00:16:33,000
金融越学也觉得

492
00:16:33,000 --> 00:16:35,000
这玩意也好意思叫科学

493
00:16:35,000 --> 00:16:36,000
不知道 Rail 放弃商科

494
00:16:36,000 --> 00:16:38,000
有没有类似的原因

495
00:16:38,000 --> 00:16:39,000
右击

496
00:16:39,000 --> 00:16:40,000
翻转二叉数

497
00:16:40,000 --> 00:16:41,000
是说交换二叉数

498
00:16:41,000 --> 00:16:43,000
所有子数的左右节点

499
00:16:43,000 --> 00:16:44,000
这是一道很简单的题

500
00:16:44,000 --> 00:16:46,000
在考验题里也算常规题

501
00:16:46,000 --> 00:16:48,000
但就像吴涛说的

502
00:16:48,000 --> 00:16:49,000
会默写快排

503
00:16:49,000 --> 00:16:50,000
又对开发有什么用呢

504
00:16:51,000 --> 00:16:52,000
针对 Rail 说的商科指教计算器

505
00:16:52,000 --> 00:16:54,000
我们金融有一门课

506
00:16:54,000 --> 00:16:57,000
全程交用 Excel 模拟交易组合模型

507
00:16:57,000 --> 00:17:00,000
期货考试是用 Excel 模拟期权组合

508
00:17:00,000 --> 00:17:02,000
可能情况也在变吧

509
00:17:02,000 --> 00:17:03,000
但是这里也可以问一句

510
00:17:03,000 --> 00:17:05,000
这又能有什么用呢

511
00:17:05,000 --> 00:17:06,000
特别是在有现成工具的情况下

512
00:17:07,000 --> 00:17:09,000
我想这两个问题的答案

513
00:17:09,000 --> 00:17:11,000
可能只是简单的帮助理解

514
00:17:11,000 --> 00:17:12,000
会不会

515
00:17:12,000 --> 00:17:15,000
会不用参考的默写一段程度

516
00:17:15,000 --> 00:17:17,000
会不用参考的默写

517
00:17:17,000 --> 00:17:20,000
一定程度上代表这透彻的理解

518
00:17:20,000 --> 00:17:22,000
特别是对于初学者来说

519
00:17:22,000 --> 00:17:25,000
只是需要透彻理解的原理

520
00:17:25,000 --> 00:17:28,000
和只需要记住如何使用工具

521
00:17:28,000 --> 00:17:29,000
和参考的界限

522
00:17:29,000 --> 00:17:30,000
是随着时代领域

523
00:17:30,000 --> 00:17:33,000
乃至于工具的获取成本而不断变化的

524
00:17:33,000 --> 00:17:36,000
毕竟没有人不允许你只用惩罚

525
00:17:36,000 --> 00:17:38,000
不用用惩罚

526
00:17:38,000 --> 00:17:38,000
只用加罚了

527
00:17:38,000 --> 00:17:39,000
不是

528
00:17:41,000 --> 00:17:42,000
这句话什么意思

529
00:17:43,000 --> 00:17:43,000
就是

530
00:17:44,000 --> 00:17:45,000
惩罚是加罚

531
00:17:45,000 --> 00:17:48,000
没有人不允许你用惩罚

532
00:17:48,000 --> 00:17:49,000
只用加罚了

533
00:17:49,000 --> 00:17:49,000
不是

534
00:17:50,000 --> 00:17:52,000
惩罚可以用加罚来实现吗

535
00:17:52,000 --> 00:17:52,000
是啊

536
00:17:52,000 --> 00:17:52,000
是吗

537
00:17:53,000 --> 00:17:55,000
最后不管 Ryo 如何选择未来的路

538
00:17:55,000 --> 00:17:56,000
住好

539
00:17:56,000 --> 00:17:57,000
吴涛听起来生活很舒服

540
00:17:57,000 --> 00:17:59,000
同样住生活有趣

541
00:17:59,000 --> 00:18:01,000
希望贵节目生生不息

542
00:18:03,000 --> 00:18:05,000
这个是暗示我们要换鼠吃人了

543
00:18:05,000 --> 00:18:06,000
是吧

544
00:18:11,000 --> 00:18:11,000
这个特别有意思

545
00:18:12,000 --> 00:18:13,000
刚刚我讲有一点

546
00:18:13,000 --> 00:18:15,000
他那其实挺好

547
00:18:15,000 --> 00:18:18,000
就是说起码在初衷上

548
00:18:18,000 --> 00:18:20,000
我认为说你能够在黑板上默写出来

549
00:18:21,000 --> 00:18:23,000
这基本可以等同于你是透彻的理解

550
00:18:23,000 --> 00:18:25,000
这个我觉得还是有一定的道理的

551
00:18:26,000 --> 00:18:26,000
就是说

552
00:18:27,000 --> 00:18:29,000
有些事情如果你理解它的原理

553
00:18:29,000 --> 00:18:31,000
你是可以叫做推敲出来的

554
00:18:31,000 --> 00:18:34,000
就是从一个基本的原则推敲出来

555
00:18:34,000 --> 00:18:36,000
一些它要让你实现的功能

556
00:18:37,000 --> 00:18:38,000
但是

557
00:18:39,000 --> 00:18:40,000
怎么说呢

558
00:18:41,000 --> 00:18:43,000
也不是所有人都能真的有这个能力

559
00:18:43,000 --> 00:18:44,000
我觉得

560
00:18:45,000 --> 00:18:46,000
说得也是

561
00:18:46,000 --> 00:18:47,000
就其实我觉得

562
00:18:48,000 --> 00:18:51,000
先不说前面那个用什么

563
00:18:52,000 --> 00:18:53,000
默写快排之类的

564
00:18:53,000 --> 00:18:56,000
就是你在写一段程序的时候

565
00:18:56,000 --> 00:18:58,000
如果一个函数

566
00:18:59,000 --> 00:19:02,000
你记住的函数的

567
00:19:03,000 --> 00:19:05,000
用途以及函数的签名越多

568
00:19:05,000 --> 00:19:06,000
你写程序的时候

569
00:19:06,000 --> 00:19:08,000
被打断的概率就越小

570
00:19:09,000 --> 00:19:11,000
这句话我再念再说一遍

571
00:19:11,000 --> 00:19:11,000
就是

572
00:19:13,000 --> 00:19:15,000
如果你在写程序的时候

573
00:19:15,000 --> 00:19:17,000
不停地去查一个函数的用法

574
00:19:17,000 --> 00:19:18,000
以及这个函数的签名的话

575
00:19:19,000 --> 00:19:22,000
你流畅写程序的过程

576
00:19:22,000 --> 00:19:24,000
就会被打断对吧

577
00:19:24,000 --> 00:19:26,000
这不就是 IDE 大放光彩的时候吗

578
00:19:29,000 --> 00:19:30,000
autocomplete

579
00:19:31,000 --> 00:19:33,000
但即便如此

580
00:19:36,000 --> 00:19:37,000
IDE

581
00:19:38,000 --> 00:19:39,000
我还真的没有办法反驳

582
00:19:40,000 --> 00:19:42,000
你竟然无言以对

583
00:19:42,000 --> 00:19:43,000
对我竟然无言以对

584
00:19:43,000 --> 00:19:45,000
但是可能是因为目前的状况

585
00:19:46,000 --> 00:19:48,000
我基本上不会用 IDE 来写

586
00:19:48,000 --> 00:19:49,000
需要写的东西

587
00:19:49,000 --> 00:19:50,000
所以

588
00:19:51,000 --> 00:19:52,000
会有这样感觉

589
00:19:53,000 --> 00:19:54,000
如果我可以

590
00:19:54,000 --> 00:19:57,000
减少去看文档的次数的话

591
00:19:57,000 --> 00:19:59,000
我写程序的效率会变快

592
00:20:00,000 --> 00:20:02,000
对其实就是说

593
00:20:02,000 --> 00:20:04,000
这里就两个层次的一个用法

594
00:20:04,000 --> 00:20:05,000
像我们这种苦行僧

595
00:20:05,000 --> 00:20:06,000
他就说

596
00:20:06,000 --> 00:20:07,000
记住这个函数

597
00:20:07,000 --> 00:20:08,000
下次你写的时候

598
00:20:08,000 --> 00:20:09,000
就不会忘记它了对吧

599
00:20:09,000 --> 00:20:10,000
但也有说

600
00:20:12,000 --> 00:20:14,000
像 objectsce 里面的

601
00:20:14,000 --> 00:20:15,000
函数面那么长

602
00:20:15,000 --> 00:20:16,000
我就算记住了

603
00:20:16,000 --> 00:20:18,000
我光打字也要很久

604
00:20:18,000 --> 00:20:19,000
这个时候 autocomplete

605
00:20:19,000 --> 00:20:20,000
还是挺有用的

606
00:20:22,000 --> 00:20:23,000
对

607
00:20:23,000 --> 00:20:24,000
当然这个问题

608
00:20:24,000 --> 00:20:25,000
如果生成下去的话

609
00:20:25,000 --> 00:20:27,000
还是会和语言

610
00:20:27,000 --> 00:20:29,000
和具体所使用的环境

611
00:20:29,000 --> 00:20:32,000
以及你开发的程序的

612
00:20:32,000 --> 00:20:33,000
复杂程度

613
00:20:33,000 --> 00:20:36,000
相是无一是有关系的

614
00:20:36,000 --> 00:20:37,000
就好像

615
00:20:37,000 --> 00:20:39,000
建宗和弃宗的差别对吧

616
00:20:39,000 --> 00:20:41,000
就可能会觉得

617
00:20:43,000 --> 00:20:45,000
因为是做后端

618
00:20:45,000 --> 00:20:46,000
或者是做一些

619
00:20:46,000 --> 00:20:47,000
不需要

620
00:20:48,000 --> 00:20:50,000
特别复杂的东西的

621
00:20:50,000 --> 00:20:52,000
不需要使用

622
00:20:52,000 --> 00:20:53,000
特别啰嗦的语言的时候

623
00:20:53,000 --> 00:20:54,000
你会觉得

624
00:20:54,000 --> 00:20:56,000
记一些常用的函数

625
00:20:56,000 --> 00:20:57,000
以及他们的用法

626
00:20:57,000 --> 00:20:58,000
其实是很自然的事情

627
00:20:58,000 --> 00:21:01,000
但是如果你处理的东西的复杂程度

628
00:21:01,000 --> 00:21:02,000
真的摆在那了

629
00:21:02,000 --> 00:21:04,000
然后你又不可能脱离 Idea 的话

630
00:21:04,000 --> 00:21:06,000
那可能不去记也是

631
00:21:07,000 --> 00:21:08,000
也是一个理性的选择

632
00:21:10,000 --> 00:21:10,000
对

633
00:21:10,000 --> 00:21:11,000
下一条

634
00:21:12,000 --> 00:21:14,000
一位叫做 Jerry Lin 的朋友说

635
00:21:15,000 --> 00:21:16,000
提到高能物理

636
00:21:16,000 --> 00:21:18,000
我就默认是高能实验物理

637
00:21:19,000 --> 00:21:20,000
实验高能物理

638
00:21:20,000 --> 00:21:21,000
我们什么时候提到过高能物理

639
00:21:23,000 --> 00:21:24,000
我也忘了

640
00:21:24,000 --> 00:21:26,000
有点年份了

641
00:21:26,000 --> 00:21:26,000
对

642
00:21:27,000 --> 00:21:29,000
这是过了一个月怎么就

643
00:21:31,000 --> 00:21:32,000
忘了这么多

644
00:21:32,000 --> 00:21:33,000
然后他提到了 SIREN

645
00:21:33,000 --> 00:21:36,000
就是欧洲原子能中心 CERN

646
00:21:36,000 --> 00:21:38,000
SIREN 肯定都很熟悉

647
00:21:38,000 --> 00:21:39,000
毕竟是在欧洲

648
00:21:39,000 --> 00:21:43,000
而且同时又是 WWW 的发源地

649
00:21:44,000 --> 00:21:45,000
括号

650
00:21:45,000 --> 00:21:48,000
WWW 某种意义上说

651
00:21:48,000 --> 00:21:52,000
是为了解决高能物理的分布式计算而发明的

652
00:21:53,000 --> 00:21:54,000
这个倒是第一次听说

653
00:21:55,000 --> 00:21:59,000
SIREN 有一个叫做 ROOT 的 CPP 计算框架

654
00:21:59,000 --> 00:22:01,000
同时带有 interactive 的环境

655
00:22:01,000 --> 00:22:02,000
类似于 IPython

656
00:22:02,000 --> 00:22:05,000
这个框架有各种数据处理和 plotting 的功能

657
00:22:05,000 --> 00:22:06,000
还蛮好的

658
00:22:06,000 --> 00:22:07,000
就是文档比较 shit

659
00:22:08,000 --> 00:22:11,000
配合他们最近的数据开放项目还是蛮有趣的

660
00:22:15,000 --> 00:22:16,000
我还真的不知道

661
00:22:17,000 --> 00:22:21,000
WWW 是为了解决高能物理的分布式计算而发明的

662
00:22:22,000 --> 00:22:23,000
我就记得是写论文

663
00:22:23,000 --> 00:22:24,000
他们要引用东西

664
00:22:24,000 --> 00:22:25,000
然后这个

665
00:22:26,000 --> 00:22:26,000
等一下

666
00:22:26,000 --> 00:22:29,000
他说是 WW 不是 HTML 是吧

667
00:22:29,000 --> 00:22:36,000
可是 WW 不就的基本要素不就是一个 web 服务器吗

668
00:22:37,000 --> 00:22:38,000
我去过 SIREN

669
00:22:38,000 --> 00:22:40,000
我去了 SIREN 参观

670
00:22:40,000 --> 00:22:42,000
然后我还见到了那台电脑

671
00:22:42,000 --> 00:22:43,000
然后我去去了

672
00:22:46,000 --> 00:22:46,000
Timberley 的

673
00:22:47,000 --> 00:22:50,000
他开发出 web 的实验室

674
00:22:50,000 --> 00:22:50,000
是在地下

675
00:22:50,000 --> 00:22:53,000
很难想象是在地下的一个实验室里面

676
00:22:54,000 --> 00:22:55,000
然后

677
00:22:56,000 --> 00:22:58,000
我印象里面

678
00:22:58,000 --> 00:23:02,000
他只是为了把 hypertext 呈现给

679
00:23:03,000 --> 00:23:05,000
大家一边翻阅

680
00:23:05,000 --> 00:23:10,000
而研发出在 SGML 的基础上开发出了 HTML

681
00:23:10,000 --> 00:23:11,000
然后

682
00:23:11,000 --> 00:23:15,000
把它做成一个 web 服务器

683
00:23:15,000 --> 00:23:16,000
这样所有人都

684
00:23:16,000 --> 00:23:18,000
所有其他人都会去访问他的页面

685
00:23:18,000 --> 00:23:19,000
大概这个样子

686
00:23:20,000 --> 00:23:21,000
你这么一问

687
00:23:21,000 --> 00:23:22,000
我也卡住了

688
00:23:22,000 --> 00:23:23,000
这个追根溯源到底是为了啥

689
00:23:25,000 --> 00:23:27,000
总之这个化石贷的东西外打正招的

690
00:23:27,000 --> 00:23:30,000
就在 SIREN 的一台 Nex 的电脑上

691
00:23:30,000 --> 00:23:31,000
被研发出来了

692
00:23:32,000 --> 00:23:36,000
然后 SIREN 现在有这样一个叫做 ROOT 的 CPB 计算框架

693
00:23:39,000 --> 00:23:39,000
快去研究一下

694
00:23:39,000 --> 00:23:42,000
不过 CPB 你有兴趣吗

695
00:23:43,000 --> 00:23:44,000
Nope

696
00:23:45,000 --> 00:23:47,000
所以这一封来信的

697
00:23:47,000 --> 00:23:49,000
我们的反馈就是 good no

698
00:23:51,000 --> 00:23:51,000
不是

699
00:23:51,000 --> 00:23:52,000
呵呵

700
00:23:52,000 --> 00:23:55,000
呵呵太有贬义了

701
00:23:55,000 --> 00:23:56,000
我觉得

702
00:23:56,000 --> 00:23:56,000
没有吧

703
00:23:56,000 --> 00:23:57,000
呵呵是中性的

704
00:23:58,000 --> 00:23:59,000
你确定吗

705
00:23:59,000 --> 00:24:00,000
为什么我总觉得

706
00:24:02,000 --> 00:24:03,000
好吧

707
00:24:03,000 --> 00:24:04,000
那可能我理解不太对

708
00:24:05,000 --> 00:24:08,000
我总觉得呵呵的语意是

709
00:24:09,000 --> 00:24:12,000
我知道了

710
00:24:12,000 --> 00:24:13,000
但是

711
00:24:13,000 --> 00:24:15,000
就所以呢

712
00:24:15,000 --> 00:24:16,000
也没有什么兴趣

713
00:24:16,000 --> 00:24:17,000
所以就呵呵了

714
00:24:17,000 --> 00:24:18,000
所以他是中性的

715
00:24:18,000 --> 00:24:18,000
没有错

716
00:24:19,000 --> 00:24:24,000
而且呵呵更多的时候被使用的场合是

717
00:24:24,000 --> 00:24:26,000
你这种想法真蠢

718
00:24:26,000 --> 00:24:27,000
我懒得跟你辩论

719
00:24:30,000 --> 00:24:32,000
比如说什么对方说

720
00:24:32,000 --> 00:24:34,000
PHP 是最好的语言

721
00:24:34,000 --> 00:24:35,000
然后你说呵呵

722
00:24:36,000 --> 00:24:38,000
就那种不屑的感觉

723
00:24:40,000 --> 00:24:41,000
好吧走了

724
00:24:41,000 --> 00:24:41,000
对

725
00:24:41,000 --> 00:24:42,000
OK

726
00:24:42,000 --> 00:24:43,000
那就我们不呵呵

727
00:24:43,000 --> 00:24:44,000
谢谢

728
00:24:44,000 --> 00:24:45,000
谢谢

729
00:24:45,000 --> 00:24:48,000
Good to know 就是谢谢了

730
00:24:49,000 --> 00:24:52,000
因为 plotting 这个事情其实还要讲一下

731
00:24:52,000 --> 00:24:53,000
我觉得

732
00:24:53,000 --> 00:24:55,000
因为之前我上学的时候还经常用

733
00:24:55,000 --> 00:24:57,000
叫什么

734
00:24:57,000 --> 00:24:58,000
group plot

735
00:24:59,000 --> 00:25:00,000
OK

736
00:25:00,000 --> 00:25:05,000
然后通过自己写个 python 去输出那个点

737
00:25:05,000 --> 00:25:07,000
然后去用 group plot 这东西画

738
00:25:07,000 --> 00:25:09,000
但是画出来的那个

739
00:25:09,000 --> 00:25:11,000
真的是惨不忍睹

740
00:25:12,000 --> 00:25:15,000
可是你都在用 python 了

741
00:25:15,000 --> 00:25:18,000
为什么不用叫什么 matplotting

742
00:25:18,000 --> 00:25:20,000
matplotlib 还是叫什么

743
00:25:20,000 --> 00:25:22,000
那个 python

744
00:25:22,000 --> 00:25:23,000
为什么

745
00:25:23,000 --> 00:25:24,000
因为当时好像

746
00:25:25,000 --> 00:25:27,000
那个在 linux 上面有吗

747
00:25:28,000 --> 00:25:29,000
有啊

748
00:25:29,000 --> 00:25:30,000
这是一个跨平台的库尔

749
00:25:31,000 --> 00:25:31,000
OK

750
00:25:31,000 --> 00:25:33,000
可能当时比较幼稚

751
00:25:33,000 --> 00:25:36,000
就只知道用那个 group plot

752
00:25:36,000 --> 00:25:36,000
OK

753
00:25:36,000 --> 00:25:38,000
然后还用过那个

754
00:25:38,000 --> 00:25:44,000
还考虑过用 metapost 来做 plotting

755
00:25:44,000 --> 00:25:45,000
我也是淡碎了

756
00:25:46,000 --> 00:25:47,000
metapost

757
00:25:47,000 --> 00:25:48,000
好古老

758
00:25:48,000 --> 00:25:51,000
我已经有三年没有听到过这种东西了

759
00:25:51,000 --> 00:25:51,000
至少

760
00:25:51,000 --> 00:25:53,000
因为这些已经淘汰

761
00:25:53,000 --> 00:25:54,000
基本上没有什么人在用了

762
00:25:54,000 --> 00:25:58,000
所以哪怕是在 latech 这个社区

763
00:25:58,000 --> 00:26:01,000
大家要转用那个什么 pikz 去画图了

764
00:26:01,000 --> 00:26:05,000
所以 metapost 这种比较落后的东西

765
00:26:05,000 --> 00:26:07,000
就让它过去吧

766
00:26:07,000 --> 00:26:07,000
随风而去

767
00:26:08,000 --> 00:26:09,000
嗯哼

768
00:26:10,000 --> 00:26:10,000
OK

769
00:26:10,000 --> 00:26:14,000
然后是新闻环节

770
00:26:14,000 --> 00:26:17,000
这个事情还插入新闻联播的音效

771
00:26:17,000 --> 00:26:18,000
这些都

772
00:26:18,000 --> 00:26:22,000
嘣嘣嘣

773
00:26:22,000 --> 00:26:23,000
我好久没看电视了

774
00:26:23,000 --> 00:26:24,000
那个音效改了

775
00:26:24,000 --> 00:26:25,000
我好怀念这个音效

776
00:26:25,000 --> 00:26:26,000
我已经

777
00:26:27,000 --> 00:26:28,000
好多年没有听过了

778
00:26:28,000 --> 00:26:29,000
对

779
00:26:30,000 --> 00:26:32,000
观众朋友们

780
00:26:32,000 --> 00:26:33,000
我们本期播报第一则新闻是

781
00:26:33,000 --> 00:26:35,000
看看别人家的小孩

782
00:26:35,000 --> 00:26:36,000
其实这些都不是新闻了

783
00:26:36,000 --> 00:26:38,000
这些新闻都已经过去

784
00:26:38,000 --> 00:26:41,000
上个月的三到五周了至少

785
00:26:41,000 --> 00:26:44,000
然后感兴趣的朋友们其实都已经

786
00:26:44,000 --> 00:26:46,000
都已经听过了

787
00:26:46,000 --> 00:26:49,000
所以我们就算是最近发生的要闻的评论

788
00:26:49,000 --> 00:26:50,000
嗯哼

789
00:26:50,000 --> 00:26:51,000
好

790
00:26:51,000 --> 00:26:52,000
今年第一则新闻是

791
00:26:52,000 --> 00:26:56,000
今年 10 岁的 Ryan 是 Doom 和 Quick 的主程序员

792
00:26:56,000 --> 00:26:59,000
Oculus RIP 的 CTO John Carmack 的儿子

793
00:26:59,000 --> 00:27:01,000
好上次节目我们说到了那个 John Carmack

794
00:27:01,000 --> 00:27:04,000
在没在他那个 Oculus VR 的

795
00:27:04,000 --> 00:27:08,000
开发环境里面使用 Skim 作为教本语言

796
00:27:08,000 --> 00:27:09,000
嗯哼

797
00:27:09,000 --> 00:27:10,000
然后

798
00:27:11,000 --> 00:27:14,000
作为一个 eat your own dog food 的实践家

799
00:27:15,000 --> 00:27:18,000
他让自己的 10 岁的儿子开始学 Skim

800
00:27:18,000 --> 00:27:21,000
然后用在 Racket 这个开发环境里面

801
00:27:21,000 --> 00:27:22,000
写了一款游戏

802
00:27:23,000 --> 00:27:25,000
叫做 Mr.Bar

803
00:27:26,000 --> 00:27:30,000
空格 B.Q and Angry Face

804
00:27:31,000 --> 00:27:35,000
呃不应该是他这款游戏叫 Fly

805
00:27:36,000 --> 00:27:39,000
然后这个 Fly 的主角一看就没玩了

806
00:27:39,000 --> 00:27:42,000
我玩了我还没过来的

807
00:27:43,000 --> 00:27:45,000
就是他那个这个主角

808
00:27:45,000 --> 00:27:49,000
就是里面那个飞行的小人叫做 Mr.Barbecue

809
00:27:49,000 --> 00:27:50,000
嗯听出来了

810
00:27:50,000 --> 00:27:51,000
Barbecue

811
00:27:52,000 --> 00:27:55,000
呃然后他其实这个游戏就是很冷的那个

812
00:27:55,000 --> 00:27:56,000
对烧烤歌

813
00:27:56,000 --> 00:28:00,000
就是你控制烧烤先生在云里面飞

814
00:28:00,000 --> 00:28:03,000
如果撞到好像逻辑是撞到云就死是吧

815
00:28:03,000 --> 00:28:05,000
反正撞到后掉下去都是死了

816
00:28:05,000 --> 00:28:07,000
对其实就是一个 Flappy Bird 的 copy

817
00:28:07,000 --> 00:28:10,000
但是无论如何让人惊讶的是

818
00:28:10,000 --> 00:28:12,000
这是一个小孩写出来

819
00:28:12,000 --> 00:28:14,000
10 岁的小朋友写的

820
00:28:14,000 --> 00:28:16,000
对一个 10 岁的小朋友写出来的 Flappy Bird

821
00:28:17,000 --> 00:28:19,000
我我一生中都没有写过一个 Flappy Bird

822
00:28:20,000 --> 00:28:20,000
You know

823
00:28:22,000 --> 00:28:24,000
而且你的日程太不完整了

824
00:28:24,000 --> 00:28:26,000
你就写一个吧

825
00:28:27,000 --> 00:28:31,000
不真的那个我感觉那个 Flappy Bird 这个游戏就好像

826
00:28:31,000 --> 00:28:34,000
呃你做游戏的话就好像他的一个 Hello World 一样

827
00:28:36,000 --> 00:28:39,000
做游戏的 Hello World 不应该是 Blood's Fond of Heart 吗

828
00:28:39,000 --> 00:28:40,000
你没写过 Blood's Fond of Heart 吗

829
00:28:40,000 --> 00:28:44,000
呃好吧做手游的 Hello World

830
00:28:45,000 --> 00:28:48,000
好吧立刻无言一对

831
00:28:49,000 --> 00:28:51,000
贪食蛇呀贪食蛇也比

832
00:28:51,000 --> 00:28:53,000
Flappy Bird 应该比贪食蛇简单一些

833
00:28:54,000 --> 00:28:57,000
嗯也难说难说

834
00:28:57,000 --> 00:28:58,000
差不多吧

835
00:28:58,000 --> 00:29:00,000
我还是觉得贪食蛇更简单一点

836
00:29:00,000 --> 00:29:02,000
因为现在贪食蛇如果你做一个

837
00:29:02,000 --> 00:29:04,000
静态场景的话

838
00:29:04,000 --> 00:29:05,000
图形内开会简单一些

839
00:29:06,000 --> 00:29:07,000
逻辑也简单呀

840
00:29:07,000 --> 00:29:08,000
贪食蛇有什么逻辑

841
00:29:08,000 --> 00:29:10,000
贪食蛇基本上就是

842
00:29:11,000 --> 00:29:13,000
贪食蛇不用考虑场景生成的问题

843
00:29:14,000 --> 00:29:15,000
只需要随机生产一个苹果就可以了

844
00:29:16,000 --> 00:29:16,000
好啊

845
00:29:17,000 --> 00:29:18,000
但

846
00:29:19,000 --> 00:29:21,000
不过所以不管就说这个十岁的小孩

847
00:29:21,000 --> 00:29:24,000
写出一个 Flappy Bird 的 Copy 也是非常非常了不起

848
00:29:24,000 --> 00:29:25,000
对

849
00:29:25,000 --> 00:29:27,000
他用的开发环节挺有意思的

850
00:29:27,000 --> 00:29:28,000
Rocket 你用过吗

851
00:29:28,000 --> 00:29:29,000
用过呀

852
00:29:29,000 --> 00:29:33,000
就没记错是 Lay Scheme Lay Lisp

853
00:29:33,000 --> 00:29:34,000
不是吗

854
00:29:34,000 --> 00:29:37,000
呃 Rocket 是 Scheme 的一个实现

855
00:29:38,000 --> 00:29:38,000
对

856
00:29:39,000 --> 00:29:42,000
他叫 R 6 什么 S 几我忘了

857
00:29:42,000 --> 00:29:43,000
还有一个版本号挺奇怪的

858
00:29:44,000 --> 00:29:44,000
OK

859
00:29:44,000 --> 00:29:45,000
对

860
00:29:45,000 --> 00:29:47,000
我只是指的那个 reference 的版本号

861
00:29:47,000 --> 00:29:49,000
然后他把那个 reference

862
00:29:49,000 --> 00:29:51,000
对 Rocket 是他一个具体的实现

863
00:29:51,000 --> 00:29:52,000
然后现在

864
00:29:52,000 --> 00:29:54,000
他有一个叫做 Dr.Rocket

865
00:29:54,000 --> 00:29:55,000
这么一个一套套件

866
00:29:56,000 --> 00:29:57,000
里面包含各种工具

867
00:29:57,000 --> 00:29:58,000
他那个比较方便

868
00:29:58,000 --> 00:30:00,000
就可以直接生成一个跨平台的应用

869
00:30:00,000 --> 00:30:01,000
就是可以生成

870
00:30:02,000 --> 00:30:04,000
Linux 和 Windows 和 Mac

871
00:30:04,000 --> 00:30:06,000
都可以运行的 Binary

872
00:30:07,000 --> 00:30:08,000
为什么他这个

873
00:30:09,000 --> 00:30:14,000
Ryan 没有把 Linux 平台的包释放出来

874
00:30:14,000 --> 00:30:17,000
他之前只放出了 Mac 和 Windows 版本

875
00:30:17,000 --> 00:30:19,000
好问题我也不知道

876
00:30:19,000 --> 00:30:19,000
嗯

877
00:30:19,000 --> 00:30:20,000
可他不用吧

878
00:30:21,000 --> 00:30:21,000
对

879
00:30:22,000 --> 00:30:28,000
然后他写的这个 Fly 的游戏里面有三种模式

880
00:30:28,000 --> 00:30:29,000
一种是 Granny 模式

881
00:30:29,000 --> 00:30:30,000
就是非常非常慢

882
00:30:31,000 --> 00:30:32,000
然后是

883
00:30:32,000 --> 00:30:33,000
好像四种模式

884
00:30:33,000 --> 00:30:34,000
老

885
00:30:36,000 --> 00:30:38,000
老奶奶模式好困难

886
00:30:39,000 --> 00:30:40,000
祖母模式

887
00:30:40,000 --> 00:30:43,000
然后是正常模式

888
00:30:43,000 --> 00:30:44,000
还有一个专家模式

889
00:30:44,000 --> 00:30:46,000
好像还有一个叫什么 Hyper Sonic 模式

890
00:30:46,000 --> 00:30:47,000
Hyper Mode

891
00:30:48,000 --> 00:30:48,000
就是那个 Mode 里面

892
00:30:48,000 --> 00:30:51,000
如果你选择以那个 Mode 开始游戏的话

893
00:30:52,000 --> 00:30:53,000
一开场就会死

894
00:30:53,000 --> 00:30:56,000
翻译成这么叫做顺暗的

895
00:30:56,000 --> 00:30:57,000
就坚持 10 秒

896
00:30:57,000 --> 00:30:58,000
模式

897
00:30:58,000 --> 00:30:59,000
OK

898
00:30:59,000 --> 00:31:01,000
我可能 0.5 秒都坚持不了

899
00:31:02,000 --> 00:31:03,000
因为一上来

900
00:31:03,000 --> 00:31:04,000
你只有两个选择

901
00:31:04,000 --> 00:31:05,000
按空格键

902
00:31:05,000 --> 00:31:06,000
或者不按空格键

903
00:31:06,000 --> 00:31:06,000
不按空格键的话

904
00:31:06,000 --> 00:31:08,000
就会撞到下方的云

905
00:31:08,000 --> 00:31:09,000
按空格键的话

906
00:31:09,000 --> 00:31:10,000
就会撞到上方的云

907
00:31:10,000 --> 00:31:11,000
所以

908
00:31:11,000 --> 00:31:11,000
OK

909
00:31:11,000 --> 00:31:12,000
有没有

910
00:31:13,000 --> 00:31:15,000
所以你在这事情怎么看小朋友

911
00:31:18,000 --> 00:31:20,000
前两次在沙滩上

912
00:31:21,000 --> 00:31:22,000
已经死了

913
00:31:23,000 --> 00:31:24,000
我也不知道

914
00:31:24,000 --> 00:31:27,000
可是 10 岁写的游戏是

915
00:31:28,000 --> 00:31:30,000
非常了不起的事情吗

916
00:31:31,000 --> 00:31:32,000
我不知道

917
00:31:32,000 --> 00:31:32,000
但是它的这个

918
00:31:32,000 --> 00:31:34,000
就是我们先不说这个品

919
00:31:34,000 --> 00:31:36,000
就是这个效果怎么样

920
00:31:36,000 --> 00:31:38,000
但是我觉得完成度和这个流程

921
00:31:38,000 --> 00:31:38,000
还是挺

922
00:31:38,000 --> 00:31:40,000
挺让我吃惊的

923
00:31:41,000 --> 00:31:43,000
因为你看到他里他有个介绍

924
00:31:43,000 --> 00:31:45,000
他说他怎么会写这么一个游戏

925
00:31:45,000 --> 00:31:46,000
他让他弟弟还是哥哥

926
00:31:46,000 --> 00:31:48,000
帮他做什么配乐

927
00:31:48,000 --> 00:31:49,000
那些乱七八糟的

928
00:31:50,000 --> 00:31:51,000
OK 他们有个 Team

929
00:31:51,000 --> 00:31:52,000
是那个

930
00:31:52,000 --> 00:31:53,000
那个 Angry Face

931
00:31:53,000 --> 00:31:54,000
就是他

932
00:31:54,000 --> 00:31:56,000
他之前的另外一款游戏里面

933
00:31:57,000 --> 00:31:57,000
的那个

934
00:31:57,000 --> 00:31:59,000
Angry Face 的这个笑脸

935
00:31:59,000 --> 00:32:00,000
就是胡胡说的

936
00:32:00,000 --> 00:32:02,000
怒脸是他妈给他画的

937
00:32:02,000 --> 00:32:04,000
然后他用

938
00:32:05,000 --> 00:32:06,000
G-AMP

939
00:32:06,000 --> 00:32:08,000
GIMP 把那个

940
00:32:08,000 --> 00:32:09,000
笑脸抠出来

941
00:32:09,000 --> 00:32:10,000
我觉得这个很了不起

942
00:32:10,000 --> 00:32:13,000
而且他还学

943
00:32:13,000 --> 00:32:15,000
在这个作者游戏中学会了

944
00:32:15,000 --> 00:32:17,000
用那个 Blender 做 3 D 模型

945
00:32:18,000 --> 00:32:19,000
还学会用那个

946
00:32:19,000 --> 00:32:20,000
还用那个 Adacity

947
00:32:20,000 --> 00:32:21,000
就是我们

948
00:32:21,000 --> 00:32:22,000
你也用那个来编辑金屏吗

949
00:32:22,000 --> 00:32:24,000
对我此刻正在用 Adacity 来录音

950
00:32:24,000 --> 00:32:26,000
对游戏的那个声音

951
00:32:26,000 --> 00:32:27,000
真是

952
00:32:28,000 --> 00:32:29,000
太强了

953
00:32:29,000 --> 00:32:31,000
这是 10 岁的小孩

954
00:32:31,000 --> 00:32:32,000
这个是

955
00:32:32,000 --> 00:32:34,000
这个的确是应该承认的确很强

956
00:32:34,000 --> 00:32:35,000
所以这个什么

957
00:32:35,000 --> 00:32:37,000
记忆好还是不一样

958
00:32:37,000 --> 00:32:37,000
对吧

959
00:32:38,000 --> 00:32:40,000
有家父熏陶

960
00:32:40,000 --> 00:32:41,000
关键是

961
00:32:41,000 --> 00:32:43,000
这个小孩长得逆天的可爱

962
00:32:44,000 --> 00:32:45,000
这倒是

963
00:32:45,000 --> 00:32:46,000
就是打开

964
00:32:46,000 --> 00:32:47,000
打开主页的话

965
00:32:47,000 --> 00:32:49,000
这颜值真的是逼人的

966
00:32:49,000 --> 00:32:50,000
爆表简直

967
00:32:51,000 --> 00:32:52,000
他的那个网址

968
00:32:52,000 --> 00:32:52,000
我一直没想到

969
00:32:52,000 --> 00:32:53,000
名字什么意思

970
00:32:53,000 --> 00:32:53,000
E

971
00:32:53,000 --> 00:32:55,000
他的网址是 EK 31

972
00:32:55,000 --> 00:32:56,000
就是数字 1

973
00:32:56,000 --> 00:32:57,000
然后字母 K

974
00:32:57,000 --> 00:32:58,000
数字 3

975
00:32:58,000 --> 00:32:59,000
字母 C.com

976
00:32:59,000 --> 00:33:00,000
我不知道什么意思

977
00:33:00,000 --> 00:33:01,000
1003

978
00:33:01,000 --> 00:33:02,000
C

979
00:33:02,000 --> 00:33:06,000
因为四个字母和数字组合的网址

980
00:33:06,000 --> 00:33:07,000
是非常非常难找

981
00:33:07,000 --> 00:33:09,000
我有点怀疑这个网址

982
00:33:09,000 --> 00:33:09,000
其实没有

983
00:33:09,000 --> 00:33:11,000
四个字母还蛮常见的

984
00:33:13,000 --> 00:33:13,000
不

985
00:33:13,000 --> 00:33:14,000
已经卖光了

986
00:33:14,000 --> 00:33:15,000
就现在你去

987
00:33:15,000 --> 00:33:17,000
三个都卖光了

988
00:33:17,000 --> 00:33:17,000
我知道

989
00:33:17,000 --> 00:33:18,000
四个应该还有吧

990
00:33:19,000 --> 00:33:20,000
你确定吗

991
00:33:21,000 --> 00:33:22,000
EK 3 C

992
00:33:23,000 --> 00:33:24,000
他是.com

993
00:33:24,000 --> 00:33:25,000
OK

994
00:33:25,000 --> 00:33:25,000
啊 maybe

995
00:33:25,000 --> 00:33:25,000
对

996
00:33:25,000 --> 00:33:26,000
有可能

997
00:33:26,000 --> 00:33:28,000
因为我有一个三个字母的.net

998
00:33:28,000 --> 00:33:29,000
.net 好像不太值钱

999
00:33:31,000 --> 00:33:31,000
对

1000
00:33:32,000 --> 00:33:32,000
anyway

1001
00:33:33,000 --> 00:33:33,000
好啦

1002
00:33:33,000 --> 00:33:34,000
这就是

1003
00:33:35,000 --> 00:33:36,000
这个什么

1004
00:33:36,000 --> 00:33:38,000
大人口中别人家

1005
00:33:39,000 --> 00:33:40,000
闪闪牛逼的闪闪发光

1006
00:33:40,000 --> 00:33:43,000
让你无限自卑的小孩

1007
00:33:43,000 --> 00:33:44,000
到此结束

1008
00:33:45,000 --> 00:33:47,000
不过他 DAB 竟是做游戏的

1009
00:33:47,000 --> 00:33:47,000
然后

1010
00:33:47,000 --> 00:33:48,000
不不不

1011
00:33:48,000 --> 00:33:50,000
这个描述太那个了吧

1012
00:33:51,000 --> 00:33:53,000
他 DAB 竟是一个做游戏的鼻祖

1013
00:33:53,000 --> 00:33:54,000
所以

1014
00:33:54,000 --> 00:33:57,000
他在 About Me 的界面里面

1015
00:33:57,000 --> 00:33:59,000
也写到了他特别喜欢玩

1016
00:34:00,000 --> 00:34:01,000
Dragon Dungeon

1017
00:34:02,000 --> 00:34:04,000
然后还列出了自己的阵营

1018
00:34:05,000 --> 00:34:05,000
You know

1019
00:34:07,000 --> 00:34:08,000
你会觉得我靠

1020
00:34:08,000 --> 00:34:09,000
一个 10 岁的小孩已经开始

1021
00:34:09,000 --> 00:34:11,000
研究阵营之类的

1022
00:34:14,000 --> 00:34:15,000
不过也难说

1023
00:34:15,000 --> 00:34:17,000
我相信 70 年代的时候

1024
00:34:17,000 --> 00:34:18,000
DND 作为

1025
00:34:19,000 --> 00:34:19,000
纸油

1026
00:34:19,000 --> 00:34:21,000
就桌面纸油最流行的时候

1027
00:34:21,000 --> 00:34:22,000
也许

1028
00:34:23,000 --> 00:34:24,000
那时候的小孩也是这样的

1029
00:34:24,000 --> 00:34:27,000
就还会自己做数字卡

1030
00:34:27,000 --> 00:34:29,000
然后自己去算那些莫名其妙的

1031
00:34:30,000 --> 00:34:31,000
就好像我们小时候玩那个什么

1032
00:34:32,000 --> 00:34:32,000
黑白旗

1033
00:34:32,000 --> 00:34:34,000
五子旗之类的那种常态

1034
00:34:34,000 --> 00:34:36,000
豁免减定之类的

1035
00:34:36,000 --> 00:34:38,000
而且他还列出一大堆

1036
00:34:38,000 --> 00:34:39,000
自己喜欢玩的游戏

1037
00:34:39,000 --> 00:34:40,000
其中包括 Minecraft

1038
00:34:41,000 --> 00:34:43,000
Monster Hunter

1039
00:34:44,000 --> 00:34:45,000
Destiny

1040
00:34:45,000 --> 00:34:47,000
还有 Summoners War

1041
00:34:47,000 --> 00:34:48,000
可是我有点奇怪就是

1042
00:34:49,000 --> 00:34:51,000
Destiny 难道不是一个

1043
00:34:52,000 --> 00:34:53,000
至少是 Teen 的游戏吧

1044
00:34:55,000 --> 00:34:56,000
他没有到那个年龄

1045
00:34:56,000 --> 00:34:57,000
他这样赤裸裸的

1046
00:34:57,000 --> 00:34:58,000
列出来

1047
00:34:58,000 --> 00:35:00,000
那如果有人去告他爹说

1048
00:35:00,000 --> 00:35:02,000
你让这个小孩玩

1049
00:35:02,000 --> 00:35:04,000
不符合他年龄游戏

1050
00:35:04,000 --> 00:35:04,000
他怎么办

1051
00:35:05,000 --> 00:35:06,000
游戏有分级吗

1052
00:35:06,000 --> 00:35:07,000
有啊

1053
00:35:07,000 --> 00:35:08,000
我靠

1054
00:35:08,000 --> 00:35:09,000
天哪

1055
00:35:09,000 --> 00:35:10,000
好玩

1056
00:35:11,000 --> 00:35:13,000
你之前是收到那块石头下去吗

1057
00:35:17,000 --> 00:35:19,000
我身后家一块石头上去

1058
00:35:23,000 --> 00:35:23,000
不管怎么说

1059
00:35:23,000 --> 00:35:26,000
刚才就是编家小孩的故事

1060
00:35:27,000 --> 00:35:29,000
下一则新闻是特别搞笑的

1061
00:35:30,000 --> 00:35:31,000
上一次节目我们提到

1062
00:35:32,000 --> 00:35:34,000
Homebrew 的作者

1063
00:35:34,000 --> 00:35:35,000
叫做 Max Hallwell

1064
00:35:36,000 --> 00:35:38,000
去谷歌面试

1065
00:35:38,000 --> 00:35:40,000
由于未能在白板上手工

1066
00:35:40,000 --> 00:35:42,000
完成翻转二叉数的算法

1067
00:35:43,000 --> 00:35:44,000
被谷歌拒了

1068
00:35:44,000 --> 00:35:46,000
我相信谷歌招他的人

1069
00:35:46,000 --> 00:35:47,000
一定觉得 WTF

1070
00:35:47,000 --> 00:35:48,000
然后他自己也说 WTF

1071
00:35:50,000 --> 00:35:52,000
然后他就去了苹果

1072
00:35:52,000 --> 00:35:54,000
对他很狠说了句

1073
00:35:54,000 --> 00:35:55,000
此处不留爷

1074
00:35:55,000 --> 00:35:56,000
自有留爷处

1075
00:35:56,000 --> 00:35:57,000
然后就去了苹果

1076
00:35:57,000 --> 00:35:59,000
他在推特上发了一个图

1077
00:36:00,000 --> 00:36:02,000
背景是苹果的总部

1078
00:36:02,000 --> 00:36:04,000
叫做 Walapple campus

1079
00:36:04,000 --> 00:36:05,000
at one infinite loop

1080
00:36:06,000 --> 00:36:07,000
然后写了两个字

1081
00:36:07,000 --> 00:36:08,000
first day

1082
00:36:10,000 --> 00:36:12,000
自己的半个脸

1083
00:36:13,000 --> 00:36:14,000
然后我也不知道什么意思

1084
00:36:14,000 --> 00:36:15,000
反正我觉得这个事情

1085
00:36:15,000 --> 00:36:17,000
还挺有意思的给大家分享一下

1086
00:36:18,000 --> 00:36:20,000
所以你猜他在苹果做什么

1087
00:36:21,000 --> 00:36:22,000
不知道搬家了

1088
00:36:22,000 --> 00:36:26,000
因为他在回复别人的问题的时候

1089
00:36:26,000 --> 00:36:28,000
说你最近怎么样

1090
00:36:28,000 --> 00:36:31,000
你是通勤还是搬过去了

1091
00:36:32,000 --> 00:36:33,000
然后他回说

1092
00:36:33,000 --> 00:36:34,000
I had to move

1093
00:36:34,000 --> 00:36:36,000
所以应该是忙着搬家

1094
00:36:36,000 --> 00:36:38,000
所以他肯定是入职了

1095
00:36:38,000 --> 00:36:38,000
搬过去了

1096
00:36:38,000 --> 00:36:39,000
然后我在想他去

1097
00:36:39,000 --> 00:36:42,000
难道在写一个苹果的

1098
00:36:42,000 --> 00:36:46,000
就是 the official package manager for OS X

1099
00:36:48,000 --> 00:36:49,000
不是 F store

1100
00:36:50,000 --> 00:36:52,000
也有可能不知道

1101
00:36:52,000 --> 00:36:54,000
问题是我觉得

1102
00:36:54,000 --> 00:36:55,000
就是这样一个人

1103
00:36:55,000 --> 00:36:56,000
你把他拉到苹果去

1104
00:36:56,000 --> 00:36:59,000
你即便让他继续在那做

1105
00:36:59,000 --> 00:37:00,000
叫什么

1106
00:37:01,000 --> 00:37:03,000
third level support

1107
00:37:03,000 --> 00:37:06,000
就是为程序员解决程序员的需求

1108
00:37:06,000 --> 00:37:08,000
也已经非常有意义了

1109
00:37:08,000 --> 00:37:09,000
不是吗

1110
00:37:09,000 --> 00:37:11,000
就是哪怕只在苹果内部

1111
00:37:11,000 --> 00:37:14,000
让他为苹果内部的程序员服务已经

1112
00:37:15,000 --> 00:37:16,000
他不需要去开发什么

1113
00:37:16,000 --> 00:37:17,000
面向于最终用户的产品

1114
00:37:18,000 --> 00:37:19,000
没错

1115
00:37:20,000 --> 00:37:21,000
好吧

1116
00:37:21,000 --> 00:37:22,000
这个小新闻也就到此为止

1117
00:37:22,000 --> 00:37:24,000
还有一个最后一则小新闻是

1118
00:37:25,000 --> 00:37:27,000
Reactive for Android 最近发布了

1119
00:37:29,000 --> 00:37:31,000
然后有一个

1120
00:37:31,000 --> 00:37:33,000
跨时代的理想

1121
00:37:33,000 --> 00:37:34,000
可能终于要实现了

1122
00:37:34,000 --> 00:37:35,000
就是在同一台电脑上

1123
00:37:35,000 --> 00:37:38,000
边改写一套 JS 的代码

1124
00:37:39,000 --> 00:37:42,000
然后同时在 iPhone 和安卓上

1125
00:37:42,000 --> 00:37:44,000
选出两个原生的界面

1126
00:37:44,000 --> 00:37:45,000
这个还是蛮酷的

1127
00:37:46,000 --> 00:37:48,000
一次边写到处运行

1128
00:37:48,000 --> 00:37:49,000
为什么感觉像 Java

1129
00:37:50,000 --> 00:37:51,000
script

1130
00:37:54,000 --> 00:37:56,000
Java 和 Java script 最终输得同规

1131
00:37:58,000 --> 00:38:01,000
他们之间不是问 Java 和 Java script 的区别是什么吗

1132
00:38:03,000 --> 00:38:04,000
就像雷锋和雷锋塔的区别

1133
00:38:04,000 --> 00:38:06,000
其实我没问那么远

1134
00:38:07,000 --> 00:38:08,000
怎么说

1135
00:38:08,000 --> 00:38:14,000
我觉得 Java 当初搞 swing 和另一套叫什么

1136
00:38:16,000 --> 00:38:18,000
JavaFX 还是什么

1137
00:38:19,000 --> 00:38:20,000
对之类的

1138
00:38:21,000 --> 00:38:23,000
其实也是想要跨平台

1139
00:38:23,000 --> 00:38:28,000
但最终历史的选择是

1140
00:38:29,000 --> 00:38:31,000
有限度的接受他们

1141
00:38:31,000 --> 00:38:33,000
但是很大程度上还是抛弃他们

1142
00:38:34,000 --> 00:38:36,000
对现在 Reactive 的方法

1143
00:38:36,000 --> 00:38:41,000
其实在我看来好像不好说

1144
00:38:42,000 --> 00:38:44,000
你说它是 Right once around everywhere

1145
00:38:44,000 --> 00:38:47,000
好像也说得过去

1146
00:38:47,000 --> 00:38:50,000
不过他们自己的官方口号是 Learn once right everywhere

1147
00:38:50,000 --> 00:38:52,000
所以 hard to know

1148
00:38:53,000 --> 00:38:57,000
我相信这个技术所解决的一个痛点

1149
00:38:57,000 --> 00:38:58,000
是开发人员的痛点

1150
00:38:58,000 --> 00:39:01,000
但并不是市场的痛点

1151
00:39:01,000 --> 00:39:09,000
每一个平台的用户都希望自己使用的 App 是最快的

1152
00:39:09,000 --> 00:39:10,000
是最经过优化的

1153
00:39:10,000 --> 00:39:11,000
对

1154
00:39:13,000 --> 00:39:22,000
只有资金和时间不足的公司才会想要通过这种一次书写

1155
00:39:24,000 --> 00:39:27,000
到处运行的方式来完成用户交互的部分

1156
00:39:28,000 --> 00:39:30,000
我觉得它有一个好处

1157
00:39:30,000 --> 00:39:32,000
就是说至少可以

1158
00:39:32,000 --> 00:39:34,000
如果卖一个经典的 MVC 的结构来讲

1159
00:39:34,000 --> 00:39:37,000
它至少可以实现 model 和 controller

1160
00:39:38,000 --> 00:39:40,000
可以用同一套 js 代码来做

1161
00:39:41,000 --> 00:39:45,000
然后 view 的话就是各平台用各自然自己原生的那些接口了

1162
00:39:46,000 --> 00:39:46,000
嗯

1163
00:39:47,000 --> 00:39:48,000
还好吧反正

1164
00:39:49,000 --> 00:39:49,000
ok

1165
00:39:50,000 --> 00:39:51,000
我也很难说

1166
00:39:51,000 --> 00:39:55,000
我觉得内心里是抗拒这种东西的

1167
00:39:56,000 --> 00:40:00,000
但是如果跨平台的需求一直在那

1168
00:40:00,000 --> 00:40:02,000
换句话说

1169
00:40:02,000 --> 00:40:09,000
如果 Android 和 Apple 阵营的这种互相竞争

1170
00:40:09,000 --> 00:40:14,000
互相良性竞争的状况还能持续比如说 10 年

1171
00:40:14,000 --> 00:40:17,000
那这一套东西还是大有所谓的

1172
00:40:17,000 --> 00:40:19,000
但是任何一方

1173
00:40:20,000 --> 00:40:23,000
如果流露出了被打败的姿态

1174
00:40:23,000 --> 00:40:26,000
那我觉得这种跨平台的技术也很宽卷了

1175
00:40:27,000 --> 00:40:29,000
也很快就失去它的价值

1176
00:40:29,000 --> 00:40:32,000
所以说只能走着瞧

1177
00:40:33,000 --> 00:40:33,000
对

1178
00:40:34,000 --> 00:40:36,000
但不管怎么说

1179
00:40:36,000 --> 00:40:38,000
它的学习成本至少不是那么高

1180
00:40:38,000 --> 00:40:41,000
所以学习也没什么太大的问题

1181
00:40:41,000 --> 00:40:41,000
就是

1182
00:40:44,000 --> 00:40:44,000
好

1183
00:40:44,000 --> 00:40:48,000
今天最后一则新闻是也是前两天才发生的事

1184
00:40:48,000 --> 00:40:50,000
对

1185
00:40:50,000 --> 00:40:53,000
美国有一个叫做阿函的小男孩

1186
00:40:54,000 --> 00:41:00,000
做了听这个名字就知道他是中东后裔

1187
00:41:00,000 --> 00:41:00,000
对

1188
00:41:01,000 --> 00:41:06,000
他做了一个用那些什么各种名气件

1189
00:41:06,000 --> 00:41:07,000
元气件

1190
00:41:07,000 --> 00:41:08,000
做了一块表

1191
00:41:08,000 --> 00:41:09,000
电子表

1192
00:41:10,000 --> 00:41:11,000
穷玩车富玩表

1193
00:41:13,000 --> 00:41:17,000
放在这里忽然觉得好为和

1194
00:41:17,000 --> 00:41:20,000
然后他把这个表带到学校去玩

1195
00:41:20,000 --> 00:41:22,000
然后被老师认为是一个炸弹

1196
00:41:23,000 --> 00:41:23,000
对

1197
00:41:23,000 --> 00:41:25,000
被老师误认为是一个炸弹

1198
00:41:25,000 --> 00:41:26,000
然后叫了警察

1199
00:41:27,000 --> 00:41:30,000
然后他被在一个看守所里面待了一段时间

1200
00:41:30,000 --> 00:41:31,000
对

1201
00:41:32,000 --> 00:41:35,000
然后这个新闻就报道出来了

1202
00:41:35,000 --> 00:41:37,000
他叫阿函的是他的名字

1203
00:41:37,000 --> 00:41:38,000
他姓

1204
00:41:38,000 --> 00:41:39,000
Mohamed

1205
00:41:40,000 --> 00:41:41,000
你看阿函的 Mohamed

1206
00:41:41,000 --> 00:41:43,000
这是一个很典型的回照名字

1207
00:41:43,000 --> 00:41:46,000
就是伊斯兰的名字

1208
00:41:46,000 --> 00:41:47,000
对

1209
00:41:48,000 --> 00:41:48,000
非常典型

1210
00:41:49,000 --> 00:41:52,000
然后这件事情在美国就引起了轩然大波

1211
00:41:53,000 --> 00:41:53,000
各种各样的事

1212
00:41:53,000 --> 00:41:55,000
我之前看到的最新消息是

1213
00:41:56,000 --> 00:41:58,000
Zuckerberg 已经给他说

1214
00:41:58,000 --> 00:42:00,000
亲自邀请他说

1215
00:42:00,000 --> 00:42:01,000
你可以来 Facebook

1216
00:42:02,000 --> 00:42:05,000
然后说好像最近又接受什么

1217
00:42:06,000 --> 00:42:08,000
奥巴马总统的邀请又 blabla 了

1218
00:42:08,000 --> 00:42:10,000
反正这个是个挺搞笑的事

1219
00:42:10,000 --> 00:42:12,000
美国政治我们就不去评头论足了

1220
00:42:12,000 --> 00:42:13,000
这个是我们

1221
00:42:13,000 --> 00:42:13,000
对

1222
00:42:13,000 --> 00:42:17,000
IPN 旗下进行开了一档节目选美的事情

1223
00:42:17,000 --> 00:42:18,000
对

1224
00:42:18,000 --> 00:42:19,000
但是

1225
00:42:19,000 --> 00:42:20,000
反正这件事情挺好玩的

1226
00:42:20,000 --> 00:42:23,000
如果这个事情在中国发生会怎么样

1227
00:42:25,000 --> 00:42:26,000
你说好玩吗

1228
00:42:26,000 --> 00:42:28,000
我觉得其实是很

1229
00:42:29,000 --> 00:42:30,000
让人哭笑

1230
00:42:30,000 --> 00:42:30,000
让人

1231
00:42:32,000 --> 00:42:33,000
让人想要哭笑的一件事情

1232
00:42:34,000 --> 00:42:37,000
在这个星球上

1233
00:42:38,000 --> 00:42:41,000
这种说法非常左派

1234
00:42:41,000 --> 00:42:45,000
就是这种族裔和血统带来的问题

1235
00:42:45,000 --> 00:42:46,000
居然会影响到你

1236
00:42:47,000 --> 00:42:50,000
再去做这种

1237
00:42:51,000 --> 00:42:53,000
完全跟政治活动无关的

1238
00:42:54,000 --> 00:42:56,000
hobby 行为的行为

1239
00:42:56,000 --> 00:42:58,000
居然会影响你做这件事情

1240
00:42:58,000 --> 00:43:01,000
就你因为你的肤色

1241
00:43:01,000 --> 00:43:02,000
或者是你的姓名

1242
00:43:02,000 --> 00:43:03,000
或者是你的长相

1243
00:43:03,000 --> 00:43:07,000
会导致你在做某件特定事情的时候

1244
00:43:11,000 --> 00:43:13,000
忽然蒙受这种不白之冤

1245
00:43:13,000 --> 00:43:15,000
我觉得还是挺让人悲伤的一件事情

1246
00:43:16,000 --> 00:43:17,000
对这件事情

1247
00:43:17,000 --> 00:43:19,000
其实刚刚我说这个事情

1248
00:43:19,000 --> 00:43:22,000
离听起来可能是阿拉伯人或者是穆斯林

1249
00:43:23,000 --> 00:43:24,000
感觉离我们挺远的

1250
00:43:24,000 --> 00:43:26,000
其实这件事情离我们并不远

1251
00:43:26,000 --> 00:43:29,000
因为前段时间刚好有另外一个事发生了

1252
00:43:29,000 --> 00:43:30,000
就是美国有一个

1253
00:43:31,000 --> 00:43:32,000
我忘了是大学教授

1254
00:43:32,000 --> 00:43:34,000
还是一个什么样的研究员

1255
00:43:34,000 --> 00:43:35,000
一个很资深的一个人

1256
00:43:36,000 --> 00:43:38,000
他被 CIA

1257
00:43:38,000 --> 00:43:41,000
九州情报局指控为是中国的

1258
00:43:41,000 --> 00:43:43,000
中国政府的间谍

1259
00:43:43,000 --> 00:43:46,000
就在窃取帮中国政府窃取美国的

1260
00:43:46,000 --> 00:43:48,000
这个研究机密研究机密

1261
00:43:48,000 --> 00:43:51,000
后来证明他其实是无罪的

1262
00:43:52,000 --> 00:43:55,000
所以其实那 CIA 的指控

1263
00:43:55,000 --> 00:43:57,000
无非很多时候也是基于这个

1264
00:43:58,000 --> 00:44:01,000
种族和肤色

1265
00:44:01,000 --> 00:44:03,000
其实也有一点这个种族歧视的成分在里面

1266
00:44:05,000 --> 00:44:07,000
我不知道这件事情

1267
00:44:08,000 --> 00:44:10,000
在中国发生会怎么样

1268
00:44:10,000 --> 00:44:13,000
我觉得中国没有这么敏感吧

1269
00:44:14,000 --> 00:44:16,000
其实并不是

1270
00:44:16,000 --> 00:44:18,000
只是说你可能没有太留意到

1271
00:44:18,000 --> 00:44:19,000
比如说我举个很简单的例子

1272
00:44:19,000 --> 00:44:20,000
大家

1273
00:44:21,000 --> 00:44:22,000
你们听到这句话

1274
00:44:22,000 --> 00:44:25,000
你自己在中国的人想一下

1275
00:44:25,000 --> 00:44:28,000
你在晚上街头碰见一个黑人

1276
00:44:28,000 --> 00:44:29,000
你会怎么样

1277
00:44:33,000 --> 00:44:34,000
我在玩好吧

1278
00:44:36,000 --> 00:44:37,000
如果我没出国的话

1279
00:44:37,000 --> 00:44:38,000
一定会觉得有点恐怖

1280
00:44:41,000 --> 00:44:43,000
出了国更加恐怖

1281
00:44:43,000 --> 00:44:45,000
出了国还要看在哪

1282
00:44:45,000 --> 00:44:46,000
比如说如果是在巴黎的话

1283
00:44:46,000 --> 00:44:48,000
可能也会在皇后区

1284
00:44:48,000 --> 00:44:50,000
纽约的皇后区

1285
00:44:50,000 --> 00:44:51,000
还是布鲁克林

1286
00:44:51,000 --> 00:44:52,000
这个太正常了

1287
00:44:53,000 --> 00:44:55,000
就还是要跟你

1288
00:44:55,000 --> 00:44:58,000
你会我们这种

1289
00:44:58,000 --> 00:45:02,000
结合当前的场景来

1290
00:45:02,000 --> 00:45:05,000
去做出 stereotype 的能力

1291
00:45:05,000 --> 00:45:07,000
实际上是一种生存的本能

1292
00:45:08,000 --> 00:45:13,000
就如果我们在动物园的

1293
00:45:13,000 --> 00:45:16,000
观鸟区看到一只老虎

1294
00:45:16,000 --> 00:45:18,000
那肯定会吓到死

1295
00:45:18,000 --> 00:45:19,000
但是在老虎区看到老虎

1296
00:45:19,000 --> 00:45:21,000
就会觉得是正常的

1297
00:45:21,000 --> 00:45:24,000
所以你会觉得这个地方是危险的地方

1298
00:45:24,000 --> 00:45:26,000
所以这个地方出现一个危险的人物

1299
00:45:26,000 --> 00:45:29,000
那代表我可能会产生危险

1300
00:45:29,000 --> 00:45:32,000
这是一个很自然的反应

1301
00:45:33,000 --> 00:45:37,000
所以你不再为种族主义开脱了

1302
00:45:41,000 --> 00:45:43,000
我只能说我理解

1303
00:45:43,000 --> 00:45:46,000
我能理解种族主义为什么存在

1304
00:45:47,000 --> 00:45:49,000
但是并不代表着

1305
00:45:49,000 --> 00:45:51,000
我就赞同这种

1306
00:45:53,000 --> 00:45:55,000
根据肤色来划定

1307
00:45:55,000 --> 00:45:58,000
其潜在可能性的方法

1308
00:45:59,000 --> 00:46:00,000
这个我也说不好

1309
00:46:00,000 --> 00:46:03,000
其实就穆斯林这件事情来说

1310
00:46:03,000 --> 00:46:05,000
德国目前开放大量难民

1311
00:46:06,000 --> 00:46:07,000
涌入境内

1312
00:46:07,000 --> 00:46:11,000
其实里面也是以穆斯林为压倒性多数

1313
00:46:12,000 --> 00:46:15,000
但不能就因此会认为说

1314
00:46:15,000 --> 00:46:17,000
这个会冲击到德国的

1315
00:46:19,000 --> 00:46:24,000
宗教组成或者说影响治安之类的事情

1316
00:46:27,000 --> 00:46:29,000
即便你有这样的恐慌

1317
00:46:29,000 --> 00:46:30,000
这样的担忧

1318
00:46:30,000 --> 00:46:33,000
但是这种事情确实不一定会发生的

1319
00:46:33,000 --> 00:46:36,000
我觉得这个跟我

1320
00:46:36,000 --> 00:46:38,000
本节目说的有点远

1321
00:46:39,000 --> 00:46:40,000
不过刚我说那个阿姨

1322
00:46:41,000 --> 00:46:43,000
这个案子是想提另外一个事

1323
00:46:43,000 --> 00:46:46,000
就是说就是一般在中国有两个含义

1324
00:46:46,000 --> 00:46:48,000
一个是说一个有种族

1325
00:46:49,000 --> 00:46:52,000
明显种族特征的一个小孩在做这么一件事

1326
00:46:52,000 --> 00:46:54,000
明天就被认为是危险的事

1327
00:46:54,000 --> 00:46:55,000
会在中国会怎么样

1328
00:46:55,000 --> 00:46:56,000
另外一个就是说其实

1329
00:46:57,000 --> 00:46:59,000
哪怕是一个就正常的中国小孩

1330
00:46:59,000 --> 00:47:01,000
自己用电子元器家做了一块表

1331
00:47:01,000 --> 00:47:02,000
被带到学校去

1332
00:47:02,000 --> 00:47:04,000
大家会认为它是个炸弹吗

1333
00:47:05,000 --> 00:47:06,000
肯定不会

1334
00:47:06,000 --> 00:47:07,000
我觉得其实会被

1335
00:47:07,000 --> 00:47:09,000
在中国反而是会被鼓励的

1336
00:47:09,000 --> 00:47:11,000
我觉得动手能力强什么的

1337
00:47:11,000 --> 00:47:12,000
对吧

1338
00:47:12,000 --> 00:47:12,000
会被打的

1339
00:47:12,000 --> 00:47:14,000
你不写作业搞这些破文

1340
00:47:16,000 --> 00:47:18,000
你这是什么样的童年

1341
00:47:20,000 --> 00:47:20,000
你不是吗

1342
00:47:20,000 --> 00:47:23,000
我觉得我小时候想要做一点跟

1343
00:47:23,000 --> 00:47:24,000
考试无关的事情

1344
00:47:24,000 --> 00:47:26,000
基本上都是会不会说的

1345
00:47:26,000 --> 00:47:26,000
不是

1346
00:47:26,000 --> 00:47:29,000
我觉得我感觉小时候的学校还是挺

1347
00:47:29,000 --> 00:47:30,000
就是至少父母也好

1348
00:47:30,000 --> 00:47:32,000
老师还是挺鼓励这种

1349
00:47:32,000 --> 00:47:34,000
发明创造动手能力的

1350
00:47:34,000 --> 00:47:36,000
虽然说在

1351
00:47:37,000 --> 00:47:38,000
技校考核上

1352
00:47:38,000 --> 00:47:40,000
他们并不是真的是这么想的

1353
00:47:40,000 --> 00:47:42,000
但是起码在

1354
00:47:42,000 --> 00:47:43,000
舆论上

1355
00:47:43,000 --> 00:47:44,000
他们还是会坚持这么说

1356
00:47:46,000 --> 00:47:48,000
所谓技校考就是情报考试了

1357
00:47:50,000 --> 00:47:50,000
说得也是

1358
00:47:51,000 --> 00:47:54,000
我小时候去航模组

1359
00:47:55,000 --> 00:47:56,000
然后

1360
00:47:57,000 --> 00:47:59,000
我是把飞机的尾巴粘到了还是什么

1361
00:47:59,000 --> 00:48:00,000
粘一架

1362
00:48:01,000 --> 00:48:02,000
什么飞机

1363
00:48:02,000 --> 00:48:04,000
B 29 之类的一个飞机

1364
00:48:04,000 --> 00:48:07,000
然后把尾翼给粘到了

1365
00:48:07,000 --> 00:48:11,000
然后航模老师说了很长一段话

1366
00:48:11,000 --> 00:48:12,000
说什么大意识

1367
00:48:12,000 --> 00:48:15,000
你在这件事情上花费时间太多了

1368
00:48:15,000 --> 00:48:16,000
什么还是要

1369
00:48:16,000 --> 00:48:19,000
好好去学习

1370
00:48:19,000 --> 00:48:21,000
然后同样的事情

1371
00:48:21,000 --> 00:48:23,000
在我上高中的时候又发生了一遍

1372
00:48:23,000 --> 00:48:27,000
我高中的时候在围棋社还是什么地方

1373
00:48:27,000 --> 00:48:28,000
应该是围棋社

1374
00:48:28,000 --> 00:48:29,000
跟老师下棋

1375
00:48:29,000 --> 00:48:35,000
然后有一个同学来找我去什么物理奥赛组

1376
00:48:35,000 --> 00:48:35,000
还是什么

1377
00:48:35,000 --> 00:48:37,000
然后我就说我下完棋再去

1378
00:48:37,000 --> 00:48:40,000
然后下棋老师非常惊讶瞪着我说

1379
00:48:40,000 --> 00:48:41,000
奥赛比较重要

1380
00:48:41,000 --> 00:48:45,000
你怎么能他这下棋不去参加奥赛

1381
00:48:45,000 --> 00:48:46,000
完了赶紧去

1382
00:48:47,000 --> 00:48:49,000
他是教围棋的老师

1383
00:48:49,000 --> 00:48:50,000
他都说出这样的话

1384
00:48:50,000 --> 00:48:50,000
我觉得

1385
00:48:50,000 --> 00:48:52,000
说明他他们在人们心目中

1386
00:48:52,000 --> 00:48:55,000
还是下意识的给这个行当分了个 369 等

1387
00:48:56,000 --> 00:48:58,000
然后其实人种也是

1388
00:48:58,000 --> 00:49:04,000
或者说族医也是就莫名其妙被分出了 369 等

1389
00:49:05,000 --> 00:49:08,000
其实我们看来离真正的自由还挺远的

1390
00:49:09,000 --> 00:49:09,000
对

1391
00:49:09,000 --> 00:49:11,000
左派还需要努力

1392
00:49:11,000 --> 00:49:14,000
这世界上左棍上心努力

1393
00:49:14,000 --> 00:49:18,000
右棍还是牢牢的把持这个世界

1394
00:49:20,000 --> 00:49:21,000
虽然我也是个右棍

1395
00:49:21,000 --> 00:49:25,000
今天我就不讨论我们的政治倾向了

1396
00:49:25,000 --> 00:49:27,000
我们今天的新闻环节

1397
00:49:28,000 --> 00:49:29,000
新闻联播到此结束

1398
00:49:29,000 --> 00:49:31,000
科技新闻联播到此结束

1399
00:49:32,000 --> 00:49:34,000
科技社会新闻到此结束

1400
00:49:34,000 --> 00:49:36,000
今天的正题是什么

1401
00:49:38,000 --> 00:49:40,000
其实今天的正题是我们没有正题

1402
00:49:40,000 --> 00:49:45,000
我觉得应该是时候把兔子从帽子里面揪出来了

1403
00:49:45,000 --> 00:49:46,000
我们的

1404
00:49:46,000 --> 00:49:48,000
这个我有个梗

1405
00:49:50,000 --> 00:49:51,000
Ghost in the X-Code

1406
00:49:53,000 --> 00:49:54,000
Come on

1407
00:49:56,000 --> 00:49:57,000
不

1408
00:49:57,000 --> 00:49:58,000
我刚才想说的是

1409
00:49:58,000 --> 00:49:59,000
从本期节目开始

1410
00:49:59,000 --> 00:50:01,000
我们不会再专门的找一个

1411
00:50:02,000 --> 00:50:06,000
编程领域里面的话题

1412
00:50:06,000 --> 00:50:07,000
就不会刻意找

1413
00:50:07,000 --> 00:50:09,000
当然有的话也可以讲

1414
00:50:09,000 --> 00:50:11,000
来贯穿整个节目

1415
00:50:11,000 --> 00:50:13,000
我们之前找话题找得非常辛苦

1416
00:50:13,000 --> 00:50:14,000
所以也造成了

1417
00:50:15,000 --> 00:50:17,000
我们在录节目的时候

1418
00:50:17,000 --> 00:50:18,000
每次都非常的

1419
00:50:21,000 --> 00:50:21,000
应该怎么说

1420
00:50:22,000 --> 00:50:23,000
觉得投入和铲除不成正比

1421
00:50:24,000 --> 00:50:26,000
就是跟报

1422
00:50:26,000 --> 00:50:28,000
以前报纸编辑不一样

1423
00:50:28,000 --> 00:50:29,000
一个选题会

1424
00:50:29,000 --> 00:50:30,000
对吧

1425
00:50:30,000 --> 00:50:30,000
对

1426
00:50:30,000 --> 00:50:33,000
我们已经什么无狼才进了

1427
00:50:34,000 --> 00:50:35,000
为什么是无狼才进

1428
00:50:36,000 --> 00:50:38,000
你是说韬狼才进

1429
00:50:38,000 --> 00:50:41,000
所以你是还没才进是吧

1430
00:50:41,000 --> 00:50:42,000
没

1431
00:50:42,000 --> 00:50:43,000
我是捧

1432
00:50:43,000 --> 00:50:44,000
所以你是主

1433
00:50:46,000 --> 00:50:47,000
我记得

1434
00:50:48,000 --> 00:50:49,000
我记得我听谁说

1435
00:50:49,000 --> 00:50:50,000
有人在 IT 功论

1436
00:50:50,000 --> 00:50:52,000
好像是在现场

1437
00:50:52,000 --> 00:50:53,000
说

1438
00:50:54,000 --> 00:50:56,000
IT 功论是 Lawrence 的节目

1439
00:50:56,000 --> 00:50:57,000
Rail 只是一个捧杆

1440
00:50:58,000 --> 00:50:59,000
我觉得 IT 功论

1441
00:50:59,000 --> 00:51:01,000
不那个是 Rail 的节目

1442
00:51:01,000 --> 00:51:02,000
然后我是一个捧杆

1443
00:51:02,000 --> 00:51:03,000
反了

1444
00:51:04,000 --> 00:51:05,000
反了

1445
00:51:06,000 --> 00:51:06,000
Come on

1446
00:51:08,000 --> 00:51:09,000
不扯这个了

1447
00:51:09,000 --> 00:51:11,000
其实这个事

1448
00:51:11,000 --> 00:51:14,000
今天我们上午录的 IT 功论

1449
00:51:14,000 --> 00:51:16,000
已经大概讲过了

1450
00:51:16,000 --> 00:51:19,000
就是 Exco Ghost 安全事故

1451
00:51:20,000 --> 00:51:22,000
来龙去脉就不交代了

1452
00:51:22,000 --> 00:51:24,000
大家听到这个词

1453
00:51:24,000 --> 00:51:25,000
如果你不明白是什么

1454
00:51:25,000 --> 00:51:26,000
我估计也就没有必要再

1455
00:51:27,000 --> 00:51:30,000
你可以去先看一下报道

1456
00:51:30,000 --> 00:51:31,000
我们就接着往下讲了

1457
00:51:32,000 --> 00:51:32,000
对

1458
00:51:35,000 --> 00:51:37,000
简单来说就是 Exco 的

1459
00:51:37,000 --> 00:51:39,000
有人下了一个什么

1460
00:51:39,000 --> 00:51:41,000
这台我还是又讲了

1461
00:51:41,000 --> 00:51:43,000
简单来说就是 Exco

1462
00:51:43,000 --> 00:51:45,000
就因为苹果 CDN 不给力

1463
00:51:45,000 --> 00:51:47,000
很多开发者顺手下了一个

1464
00:51:47,000 --> 00:51:49,000
从什么迅雷

1465
00:51:49,000 --> 00:51:50,000
下了一个 Exco 的回来

1466
00:51:50,000 --> 00:51:52,000
然后发现编译出来的软件

1467
00:51:53,000 --> 00:51:54,000
被装了后门

1468
00:51:54,000 --> 00:51:57,000
究其原因是因为下的编辑器有问题

1469
00:51:57,000 --> 00:51:58,000
Exco 的就可以搞过

1470
00:51:59,000 --> 00:51:59,000
对

1471
00:52:01,000 --> 00:52:03,000
所以这件事情我们先揪一下

1472
00:52:03,000 --> 00:52:05,000
你觉得苹果有责任吗

1473
00:52:06,000 --> 00:52:09,000
我觉得从技术上来讲

1474
00:52:09,000 --> 00:52:11,000
苹果关苹果屁事

1475
00:52:12,000 --> 00:52:18,000
但是从一个比较

1476
00:52:19,000 --> 00:52:21,000
Metaphysical 的角度来讲

1477
00:52:21,000 --> 00:52:23,000
苹果采用了这种模式

1478
00:52:23,000 --> 00:52:24,000
导致了会有今天这个下场

1479
00:52:26,000 --> 00:52:28,000
所以这个问题在哪里

1480
00:52:29,000 --> 00:52:31,000
Centralized

1481
00:52:33,000 --> 00:52:34,000
这样一种

1482
00:52:34,000 --> 00:52:36,000
独此一家的工具

1483
00:52:37,000 --> 00:52:39,000
导致了这种情况的发生

1484
00:52:39,000 --> 00:52:40,000
我觉得

1485
00:52:41,000 --> 00:52:44,000
这种情况为什么不会在其他的世界里发生

1486
00:52:44,000 --> 00:52:45,000
就是因为其他世界

1487
00:52:45,000 --> 00:52:47,000
或者说为什么不会在

1488
00:52:47,000 --> 00:52:48,000
比如说 C 世界里面发生

1489
00:52:48,000 --> 00:52:50,000
是因为 C 世界里面

1490
00:52:51,000 --> 00:52:53,000
你有很多编辑器可以选择

1491
00:52:53,000 --> 00:52:56,000
而且你也有很多下载点可以选择

1492
00:52:58,000 --> 00:52:58,000
不对

1493
00:52:58,000 --> 00:53:00,000
我觉得这个问题就是说

1494
00:53:00,000 --> 00:53:01,000
正确答案是不知道

1495
00:53:01,000 --> 00:53:03,000
你不知道其他地方有没有弄错问题

1496
00:53:03,000 --> 00:53:05,000
他们好像就很多人说

1497
00:53:06,000 --> 00:53:08,000
你们下的安卓的开发环境

1498
00:53:08,000 --> 00:53:09,000
会不会有这个问题

1499
00:53:09,000 --> 00:53:10,000
没有人知道

1500
00:53:10,000 --> 00:53:11,000
安卓是另外一件事

1501
00:53:14,000 --> 00:53:17,000
安卓的情况其实要比苹果严重很多

1502
00:53:17,000 --> 00:53:18,000
因为安卓的比如说

1503
00:53:18,000 --> 00:53:19,000
钓鱼平台

1504
00:53:19,000 --> 00:53:20,000
什么钓鱼平台

1505
00:53:20,000 --> 00:53:23,000
支付平台是你强制你要去

1506
00:53:23,000 --> 00:53:24,000
或者也不是强制

1507
00:53:24,000 --> 00:53:25,000
就是

1508
00:53:26,000 --> 00:53:27,000
在安卓里面

1509
00:53:27,000 --> 00:53:28,000
如果你把一个支付平台

1510
00:53:28,000 --> 00:53:30,000
连入你的 APP 的话

1511
00:53:30,000 --> 00:53:33,000
你是完全可以去读写

1512
00:53:33,000 --> 00:53:35,000
说支付平台里面到底输入了什么信息

1513
00:53:35,000 --> 00:53:36,000
但是

1514
00:53:37,000 --> 00:53:37,000
对

1515
00:53:37,000 --> 00:53:38,000
就是因为

1516
00:53:38,000 --> 00:53:41,000
你在安卓上面别说画对话框了

1517
00:53:41,000 --> 00:53:42,000
你只需要去

1518
00:53:42,000 --> 00:53:44,000
你甚至都不需要去钓鱼

1519
00:53:44,000 --> 00:53:45,000
去画一个假的对话框

1520
00:53:45,000 --> 00:53:47,000
你可以直接去读跳出来的

1521
00:53:47,000 --> 00:53:49,000
支付平台的对话框里面写什么

1522
00:53:50,000 --> 00:53:51,000
他没有进程分离吗

1523
00:53:52,000 --> 00:53:55,000
你都把对方的支付平台的 SDK

1524
00:53:55,000 --> 00:53:56,000
集成到你的 APP 里面了

1525
00:53:56,000 --> 00:53:58,000
你要去搞什么进程分离

1526
00:53:59,000 --> 00:54:01,000
这个是应用内部的问题

1527
00:54:02,000 --> 00:54:03,000
我觉得没有办法

1528
00:54:03,000 --> 00:54:05,000
肯定是这样子的

1529
00:54:05,000 --> 00:54:07,000
如果你都不信任这个

1530
00:54:07,000 --> 00:54:08,000
就没有问题

1531
00:54:08,000 --> 00:54:10,000
但我的问题是说

1532
00:54:10,000 --> 00:54:12,000
你怎么知道

1533
00:54:12,000 --> 00:54:14,000
你用的安卓的编辑器也好

1534
00:54:14,000 --> 00:54:15,000
或者 C 的编辑器也好

1535
00:54:15,000 --> 00:54:16,000
没有被人搞过

1536
00:54:17,000 --> 00:54:18,000
我没有办法知道自己的

1537
00:54:18,000 --> 00:54:20,000
所以我觉得这个事情

1538
00:54:20,000 --> 00:54:22,000
苹果和其他厂商是一样

1539
00:54:22,000 --> 00:54:24,000
就跟他的分发方式

1540
00:54:24,000 --> 00:54:25,000
就是这个

1541
00:54:25,000 --> 00:54:27,000
组织方式是没有关系的

1542
00:54:27,000 --> 00:54:29,000
我的理解就是

1543
00:54:29,000 --> 00:54:31,000
假如是在其他的

1544
00:54:31,000 --> 00:54:31,000
比如说一个

1545
00:54:31,000 --> 00:54:33,000
我们想象另外一种

1546
00:54:33,000 --> 00:54:34,000
软件分发的方式

1547
00:54:35,000 --> 00:54:36,000
就是

1548
00:54:36,000 --> 00:54:38,000
在

1549
00:54:40,000 --> 00:54:40,000
苹果这边

1550
00:54:40,000 --> 00:54:42,000
他只给出一个

1551
00:54:43,000 --> 00:54:44,000
编辑器的

1552
00:54:45,000 --> 00:54:46,000
编辑器的 specification

1553
00:54:46,000 --> 00:54:47,000
然后

1554
00:54:47,000 --> 00:54:49,000
每个国家

1555
00:54:49,000 --> 00:54:51,000
或者说每一个不同的厂商

1556
00:54:51,000 --> 00:54:53,000
都可以写出自己的

1557
00:54:53,000 --> 00:54:58,000
为 iOS 开发程序的编辑器

1558
00:54:58,000 --> 00:54:59,000
和编辑器

1559
00:54:59,000 --> 00:55:01,000
然后你可以任选其中一家

1560
00:55:01,000 --> 00:55:03,000
来写出自己的程序来

1561
00:55:03,000 --> 00:55:04,000
就比如说

1562
00:55:04,000 --> 00:55:05,000
现在在 Windows 上面

1563
00:55:05,000 --> 00:55:06,000
你要写一个 Windows 程序

1564
00:55:06,000 --> 00:55:08,000
除了微软的

1565
00:55:08,000 --> 00:55:09,000
VriOS Vivo 可以用之外

1566
00:55:09,000 --> 00:55:09,000
你还有很多

1567
00:55:09,000 --> 00:55:11,000
一大批其他的东西可以用

1568
00:55:12,000 --> 00:55:13,000
其实在 90 年代的时候

1569
00:55:13,000 --> 00:55:15,000
这个状况是非常好的

1570
00:55:15,000 --> 00:55:17,000
就是百家齐放

1571
00:55:17,000 --> 00:55:18,000
等等

1572
00:55:18,000 --> 00:55:18,000
叫什么来着

1573
00:55:18,000 --> 00:55:19,000
百家成名队

1574
00:55:20,000 --> 00:55:22,000
什么 Bowland

1575
00:55:22,000 --> 00:55:23,000
什么 Cold Warrior

1576
00:55:23,000 --> 00:55:26,000
什么 Turbo C 之类的

1577
00:55:26,000 --> 00:55:28,000
你可以用各种各样的编辑器

1578
00:55:28,000 --> 00:55:31,000
和编辑器和编译器来书写

1579
00:55:31,000 --> 00:55:32,000
一个平台上的

1580
00:55:33,000 --> 00:55:33,000
没有

1581
00:55:33,000 --> 00:55:34,000
我觉得

1582
00:55:34,000 --> 00:55:35,000
你并没有解决这个问题

1583
00:55:35,000 --> 00:55:37,000
你只是把这个问题的皮球

1584
00:55:37,000 --> 00:55:38,000
踢给了另外一拨人

1585
00:55:38,000 --> 00:55:39,000
就是说

1586
00:55:39,000 --> 00:55:40,000
你说不会有一个

1587
00:55:40,000 --> 00:55:41,000
编辑器出了问题

1588
00:55:41,000 --> 00:55:43,000
所有人都中招

1589
00:55:43,000 --> 00:55:44,000
而是说

1590
00:55:44,000 --> 00:55:45,000
因为有 10 个编辑器

1591
00:55:45,000 --> 00:55:47,000
可能只有 3 个有问题

1592
00:55:47,000 --> 00:55:49,000
这不已经是很好了吗

1593
00:55:49,000 --> 00:55:49,000
不是

1594
00:55:49,000 --> 00:55:50,000
但我觉得这并不从

1595
00:55:50,000 --> 00:55:51,000
根本上解决这个问题

1596
00:55:51,000 --> 00:55:53,000
所以这个问题是没有办法

1597
00:55:53,000 --> 00:55:55,000
从根本上被解决的

1598
00:55:55,000 --> 00:55:56,000
为什么你会这么认为呢

1599
00:55:59,000 --> 00:56:02,000
我有什么办法去验证一个

1600
00:56:02,000 --> 00:56:07,000
B 元的单一发布者的编辑器

1601
00:56:07,000 --> 00:56:10,000
编译器是安全没有问题的

1602
00:56:11,000 --> 00:56:12,000
但至少你可以说

1603
00:56:12,000 --> 00:56:14,000
你相信如果这个编辑器

1604
00:56:14,000 --> 00:56:15,000
是苹果原

1605
00:56:15,000 --> 00:56:17,000
就是

1606
00:56:17,000 --> 00:56:19,000
原始苹果官方的那一个

1607
00:56:20,000 --> 00:56:21,000
你可以至少相信

1608
00:56:21,000 --> 00:56:22,000
它不会来搞你对吧

1609
00:56:22,000 --> 00:56:24,000
所以你还是要选择相信

1610
00:56:24,000 --> 00:56:25,000
你刚才还是使用了

1611
00:56:25,000 --> 00:56:26,000
相信这个词不是吗

1612
00:56:26,000 --> 00:56:26,000
对

1613
00:56:26,000 --> 00:56:28,000
所以说底层的信任

1614
00:56:28,000 --> 00:56:30,000
你还说你至少要信任一家

1615
00:56:30,000 --> 00:56:31,000
不管是信任哪家

1616
00:56:31,000 --> 00:56:32,000
现在的问题就是说

1617
00:56:33,000 --> 00:56:35,000
那个开发者因为下载

1618
00:56:35,000 --> 00:56:37,000
因为都有网络的问题

1619
00:56:37,000 --> 00:56:38,000
或者 CDN 的问题

1620
00:56:38,000 --> 00:56:40,000
它不能从苹果的官方服务器

1621
00:56:40,000 --> 00:56:42,000
直接下载到一个原始的版本

1622
00:56:43,000 --> 00:56:44,000
或者说它下载过程中

1623
00:56:44,000 --> 00:56:47,000
不是用的 HTPS 而是用的 HTPS

1624
00:56:47,000 --> 00:56:49,000
然后被上次我们的节目一样

1625
00:56:49,000 --> 00:56:50,000
被那个缓存服务器

1626
00:56:50,000 --> 00:56:52,000
那个运营商的缓存搞了

1627
00:56:52,000 --> 00:56:53,000
它也不能保证

1628
00:56:53,000 --> 00:56:55,000
它下载到了一定就是苹果

1629
00:56:55,000 --> 00:56:56,000
发布的那一个

1630
00:56:57,000 --> 00:56:58,000
所以这种面其实我觉得唯一可以

1631
00:56:58,000 --> 00:57:00,000
就唯一可以做的就是验证

1632
00:57:00,000 --> 00:57:03,000
那个那个哈试验证嘛

1633
00:57:07,000 --> 00:57:07,000
好吧

1634
00:57:07,000 --> 00:57:09,000
所以其实我们两个有点

1635
00:57:09,000 --> 00:57:12,000
就是在不同的层次上讨论这个问题

1636
00:57:12,000 --> 00:57:13,000
我是觉得

1637
00:57:13,000 --> 00:57:16,000
如果你要既然你要分而治之

1638
00:57:16,000 --> 00:57:17,000
对你要分而治

1639
00:57:17,000 --> 00:57:20,000
就你既然选择一个单一发布商的话

1640
00:57:20,000 --> 00:57:23,000
你无论如何是会面对这个问题的

1641
00:57:23,000 --> 00:57:24,000
因为就像你刚才说的

1642
00:57:24,000 --> 00:57:26,000
你只是选择相信苹果而已

1643
00:57:27,000 --> 00:57:28,000
你没有办法确认说苹果

1644
00:57:28,000 --> 00:57:31,000
就没有在自己的编辑里面也做手脚

1645
00:57:31,000 --> 00:57:31,000
对吧

1646
00:57:31,000 --> 00:57:33,000
当然我也相信苹果

1647
00:57:33,000 --> 00:57:35,000
对这个它在自己编辑所做手脚

1648
00:57:35,000 --> 00:57:36,000
对它没有好处啊

1649
00:57:36,000 --> 00:57:37,000
对吧

1650
00:57:37,000 --> 00:57:37,000
对

1651
00:57:39,000 --> 00:57:41,000
就我们从利益的角度去出发

1652
00:57:41,000 --> 00:57:42,000
就想这件事情

1653
00:57:42,000 --> 00:57:44,000
我们至少相信它从

1654
00:57:44,000 --> 00:57:45,000
资源方面

1655
00:57:45,000 --> 00:57:47,000
它不会去给自己的编辑去做手脚

1656
00:57:48,000 --> 00:57:49,000
但是

1657
00:57:49,000 --> 00:57:51,000
事情总有一个但是对吧

1658
00:57:51,000 --> 00:57:53,000
就好像当初我

1659
00:57:53,000 --> 00:57:54,000
你无论你还是我都不会相信

1660
00:57:54,000 --> 00:57:56,000
希杰会在自己的硬盘的

1661
00:57:56,000 --> 00:57:58,000
Bios 上面放一个木马的不是吗

1662
00:57:59,000 --> 00:58:02,000
但迫于 CIA 的淫威

1663
00:58:02,000 --> 00:58:03,000
他就是这么做的

1664
00:58:03,000 --> 00:58:04,000
你有什么办法吗

1665
00:58:04,000 --> 00:58:04,000
对

1666
00:58:04,000 --> 00:58:05,000
所以

1667
00:58:05,000 --> 00:58:07,000
从一个我也不知道

1668
00:58:07,000 --> 00:58:09,000
你做一个非常困惑的人

1669
00:58:09,000 --> 00:58:10,000
你居然会选择说

1670
00:58:10,000 --> 00:58:12,000
我就是相信不然也没有办法

1671
00:58:12,000 --> 00:58:15,000
这其实是一个很分裂的行为

1672
00:58:15,000 --> 00:58:16,000
不是吗

1673
00:58:16,000 --> 00:58:16,000
对

1674
00:58:16,000 --> 00:58:17,000
这个就是

1675
00:58:17,000 --> 00:58:18,000
我觉得这个就是问题所在了

1676
00:58:18,000 --> 00:58:19,000
就是说在

1677
00:58:19,000 --> 00:58:21,000
存在的 Closed source

1678
00:58:21,000 --> 00:58:26,000
Program 的情况下

1679
00:58:26,000 --> 00:58:27,000
我觉得这个东西

1680
00:58:27,000 --> 00:58:28,000
都是没有办法去

1681
00:58:28,000 --> 00:58:29,000
彻底相信的

1682
00:58:30,000 --> 00:58:32,000
就好像上次我们讲的

1683
00:58:32,000 --> 00:58:33,000
我记不记得是在哪里讲的一样

1684
00:58:33,000 --> 00:58:34,000
如果

1685
00:58:35,000 --> 00:58:36,000
就像 Richard Stovart 的说法

1686
00:58:36,000 --> 00:58:38,000
如果这个软件

1687
00:58:38,000 --> 00:58:39,000
不是你从头到脚写起来的

1688
00:58:39,000 --> 00:58:42,000
如果这个意见里面跑到所有的固件

1689
00:58:42,000 --> 00:58:43,000
不是开源的

1690
00:58:43,000 --> 00:58:44,000
不是你从头到脚被验过的

1691
00:58:45,000 --> 00:58:46,000
都是不可以被信任的

1692
00:58:47,000 --> 00:58:48,000
不可以被彻底信任之中

1693
00:58:49,000 --> 00:58:49,000
好吧

1694
00:58:49,000 --> 00:58:51,000
就如果我们在 RMS

1695
00:58:51,000 --> 00:58:53,000
和一个完全对计算机

1696
00:58:53,000 --> 00:58:55,000
一无所知的

1697
00:58:55,000 --> 00:58:56,000
Granny 之间

1698
00:58:56,000 --> 00:58:57,000
化一个 Scale 的话

1699
00:58:58,000 --> 00:58:59,000
我觉得在这一点的看法上

1700
00:58:59,000 --> 00:59:01,000
我是比你更接近 RMS 的

1701
00:59:04,000 --> 00:59:07,000
我觉得如果真的要彻底解决这个问题

1702
00:59:07,000 --> 00:59:10,000
你只能说所有人的

1703
00:59:11,000 --> 00:59:14,000
你必须为平台的编辑市场

1704
00:59:14,000 --> 00:59:16,000
你必须开放平台的编辑市场

1705
00:59:16,000 --> 00:59:17,000
做到一个

1706
00:59:19,000 --> 00:59:20,000
非垄断的状态

1707
00:59:20,000 --> 00:59:22,000
至少有一个开源的实现对吧

1708
00:59:22,000 --> 00:59:22,000
对

1709
00:59:22,000 --> 00:59:24,000
然后才可以保证说

1710
00:59:24,000 --> 00:59:26,000
如果出现了类似的事情

1711
00:59:27,000 --> 00:59:27,000
你所影响的

1712
00:59:27,000 --> 00:59:30,000
只是选择了那一个编辑器的这些人

1713
00:59:31,000 --> 00:59:32,000
然后

1714
00:59:32,000 --> 00:59:35,000
其实类似的事情早就出现过了

1715
00:59:35,000 --> 00:59:36,000
就是这并不是什么

1716
00:59:36,000 --> 00:59:39,000
第一次出现这种非常苟且的事情

1717
00:59:40,000 --> 00:59:42,000
以前在 09 年的时候

1718
00:59:42,000 --> 00:59:44,000
曾经有一个病毒叫做

1719
00:59:44,000 --> 00:59:46,000
Win 32 Indoc A

1720
00:59:46,000 --> 00:59:47,000
我查到了

1721
00:59:47,000 --> 00:59:48,000
对

1722
00:59:48,000 --> 00:59:51,000
这个病毒的机理就是感染 Delphi

1723
00:59:52,000 --> 00:59:53,000
2019 年的时候

1724
00:59:53,000 --> 00:59:54,000
Delphi 还有人用

1725
00:59:54,000 --> 00:59:55,000
对

1726
00:59:56,000 --> 00:59:59,000
它感染 Delphi 5-7 版本的 ID

1727
00:59:59,000 --> 01:00:04,000
然后它会使得使用被感染的

1728
01:00:05,000 --> 01:00:08,000
ID 所写出来的程序都带有一个

1729
01:00:08,000 --> 01:00:10,000
带有这个病毒本身应该是

1730
01:00:11,000 --> 01:00:14,000
但是为什么这个病毒没有造成任何

1731
01:00:14,000 --> 01:00:16,000
今天还有人想起来的伤害

1732
01:00:16,000 --> 01:00:17,000
就是因为

1733
01:00:18,000 --> 01:00:19,000
用 Delphi 的人

1734
01:00:19,000 --> 01:00:21,000
在 09 年的时候已经非常非常少了

1735
01:00:21,000 --> 01:00:23,000
而且 5-7 也是一个

1736
01:00:23,000 --> 01:00:24,000
相对来说比较古老的版本

1737
01:00:25,000 --> 01:00:26,000
但

1738
01:00:26,000 --> 01:00:28,000
但假如苹果

1739
01:00:28,000 --> 01:00:30,000
在苹果平台上你除了 Xcode

1740
01:00:30,000 --> 01:00:31,000
还有别的选择的话

1741
01:00:31,000 --> 01:00:32,000
那我觉得

1742
01:00:32,000 --> 01:00:34,000
可能这件事情闹的没有那么大

1743
01:00:35,000 --> 01:00:37,000
至少你说波及面会小一点点是吧

1744
01:00:37,000 --> 01:00:38,000
对

1745
01:00:38,000 --> 01:00:38,000
没错

1746
01:00:40,000 --> 01:00:41,000
对这单位我也同意

1747
01:00:41,000 --> 01:00:43,000
只是说我觉得还是不能

1748
01:00:43,000 --> 01:00:46,000
至少从我的角度来讲去相信这件事情

1749
01:00:46,000 --> 01:00:47,000
我觉得还是要有一些技术手段

1750
01:00:47,000 --> 01:00:49,000
因为你看说只是一个

1751
01:00:49,000 --> 01:00:51,000
怎么说政治手段来保证

1752
01:00:51,000 --> 01:00:52,000
它减少它的波及面

1753
01:00:53,000 --> 01:00:55,000
通过分割的方法

1754
01:00:56,000 --> 01:00:58,000
但我觉得其实有一些技术端是可以探讨的

1755
01:00:58,000 --> 01:01:00,000
比如说最简单的方法

1756
01:01:01,000 --> 01:01:03,000
假设我们相信苹果不会给自己的编辑器

1757
01:01:03,000 --> 01:01:07,000
主动添加这个后门的情况下

1758
01:01:07,000 --> 01:01:08,000
我们说怎么保证

1759
01:01:08,000 --> 01:01:11,000
我们拿到的 Xcode 编辑器是

1760
01:01:11,000 --> 01:01:13,000
苹果发布的那一个

1761
01:01:13,000 --> 01:01:15,000
其实最简单我们方法都有对吧

1762
01:01:15,000 --> 01:01:17,000
做一个 SHA-1 的哈希

1763
01:01:17,000 --> 01:01:19,000
然后对比一下苹果官方发布

1764
01:01:19,000 --> 01:01:21,000
通过一个安全的平台

1765
01:01:21,000 --> 01:01:23,000
安全就是 HTPS 的方法

1766
01:01:23,000 --> 01:01:29,000
去发布一个某一个固定版本的 Xcode 的哈希

1767
01:01:29,000 --> 01:01:31,000
然后去那个就好了

1768
01:01:31,000 --> 01:01:32,000
还有就是说

1769
01:01:33,000 --> 01:01:35,000
他苹果上面不是有 code sign 吗

1770
01:01:35,000 --> 01:01:36,000
就是代码签名

1771
01:01:37,000 --> 01:01:39,000
其实可以说代码签名

1772
01:01:39,000 --> 01:01:42,000
然后运行的时候苹果系统会报错

1773
01:01:42,000 --> 01:01:44,000
就签名失败的那些都是不被执行的

1774
01:01:45,000 --> 01:01:46,000
对

1775
01:01:46,000 --> 01:01:49,000
我记得以前我下载 Python 的时候

1776
01:01:49,000 --> 01:01:51,000
还一定要去看下载下载安装包

1777
01:01:51,000 --> 01:01:55,000
跟官网上提供的哈希是不是一样的

1778
01:01:55,000 --> 01:01:58,000
现在早已不会去做这件事情了

1779
01:01:58,000 --> 01:01:58,000
对

1780
01:01:59,000 --> 01:02:03,000
你看就算你我这么狗血人

1781
01:02:03,000 --> 01:02:06,000
也不是所有的时候都要去做这件事情的

1782
01:02:06,000 --> 01:02:09,000
所以我觉得这里面还是有一个机制

1783
01:02:09,000 --> 01:02:10,000
和习惯的培养的过程

1784
01:02:11,000 --> 01:02:13,000
然后但话又说回来另一方面

1785
01:02:13,000 --> 01:02:15,000
就假设哪怕我们能保证

1786
01:02:16,000 --> 01:02:18,000
我们下载的 Xcode 也好

1787
01:02:18,000 --> 01:02:19,000
还是其他的编译器也好

1788
01:02:19,000 --> 01:02:23,000
都是通过一个安全的可靠的管道

1789
01:02:23,000 --> 01:02:26,000
用一个来源和正确来源下载到的原始

1790
01:02:26,000 --> 01:02:28,000
没有被搞过的版本

1791
01:02:28,000 --> 01:02:31,000
我们还得保证我们机器本

1792
01:02:31,000 --> 01:02:32,000
就是开发用这个机器本身

1793
01:02:33,000 --> 01:02:36,000
它是没有病毒和后盘的

1794
01:02:36,000 --> 01:02:37,000
或者其他木马的

1795
01:02:37,000 --> 01:02:38,000
因为这样的话

1796
01:02:39,000 --> 01:02:40,000
你装上之后你的编辑

1797
01:02:40,000 --> 01:02:42,000
也是可以被改写的

1798
01:02:44,000 --> 01:02:45,000
好吧

1799
01:02:45,000 --> 01:02:47,000
其实从一个比较极端的角度来讲

1800
01:02:47,000 --> 01:02:50,000
你只能相信你所做的这些措施

1801
01:02:50,000 --> 01:02:53,000
会保证你的开发机器是没有受到影响

1802
01:02:53,000 --> 01:02:55,000
但是真实的情况是你永远查不过来

1803
01:02:56,000 --> 01:02:59,000
但其实我还是想

1804
01:02:59,000 --> 01:03:01,000
就是说其实有没有任何方法

1805
01:03:01,000 --> 01:03:03,000
一些可以做这件事情的

1806
01:03:03,000 --> 01:03:05,000
我觉得还是会有一些机制

1807
01:03:05,000 --> 01:03:09,000
最简单我们目前的一个要点

1808
01:03:09,000 --> 01:03:11,000
就是说防窜改

1809
01:03:11,000 --> 01:03:11,000
对吧

1810
01:03:12,000 --> 01:03:15,000
其实防窜改有个很简单的机制就可以做了

1811
01:03:15,000 --> 01:03:19,000
比如说我们用哈希数的方法来做

1812
01:03:19,000 --> 01:03:20,000
比如说因为

1813
01:03:21,000 --> 01:03:24,000
你任何一个软件放在磁盘里面

1814
01:03:24,000 --> 01:03:25,000
都是在文件系统里面的

1815
01:03:25,000 --> 01:03:26,000
对吧

1816
01:03:26,000 --> 01:03:29,000
那么我怎么保证

1817
01:03:29,000 --> 01:03:32,000
当然对应到底整个操作系统的

1818
01:03:32,000 --> 01:03:34,000
也是一个巨大的文件数

1819
01:03:35,000 --> 01:03:37,000
整个磁盘文件数

1820
01:03:37,000 --> 01:03:38,000
其实我们是可以

1821
01:03:38,000 --> 01:03:41,000
因为像软件就是这些应用程序

1822
01:03:41,000 --> 01:03:42,000
它有一个特质

1823
01:03:42,000 --> 01:03:44,000
就是说它基本是一个 immutable 的东西

1824
01:03:44,000 --> 01:03:48,000
就是它不应该就安装好以后

1825
01:03:48,000 --> 01:03:49,000
它的绝大部分是不应该

1826
01:03:49,000 --> 01:03:50,000
就是程序那部分

1827
01:03:50,000 --> 01:03:52,000
我们把程序和数据分开

1828
01:03:52,000 --> 01:03:55,000
你要修改的东西肯定是数据的那一部分

1829
01:03:55,000 --> 01:03:57,000
但是编辑器本身

1830
01:03:57,000 --> 01:03:59,000
就你 compiler 本身那些东西

1831
01:03:59,000 --> 01:04:01,000
它应该是不变的

1832
01:04:01,000 --> 01:04:02,000
它不应该被改变

1833
01:04:02,000 --> 01:04:03,000
除非你升级对吧

1834
01:04:04,000 --> 01:04:06,000
那么我们可不可以说

1835
01:04:07,000 --> 01:04:09,000
对每一个不变的部分

1836
01:04:09,000 --> 01:04:13,000
就程序的那部分的文件做一个哈希

1837
01:04:13,000 --> 01:04:17,000
然后我们按文件数的结构去组织这些哈希

1838
01:04:17,000 --> 01:04:20,000
然后我们在每一个目录那一层

1839
01:04:21,000 --> 01:04:24,000
在对那个目录里面的文件的哈希做一次哈希

1840
01:04:24,000 --> 01:04:27,000
以此类推会得到一条根

1841
01:04:28,000 --> 01:04:31,000
root 就是数的根部的一个哈希

1842
01:04:31,000 --> 01:04:34,000
然后我们知道一旦这个哈希被改变了的话

1843
01:04:34,000 --> 01:04:38,000
说明这个文件系统中间某一部分是被改变了

1844
01:04:38,000 --> 01:04:41,000
咱们可以沿着对比每一个 root

1845
01:04:41,000 --> 01:04:44,000
就每一个叫什么

1846
01:04:44,000 --> 01:04:47,000
因为每一个数的根都可以是一个 root 对吧

1847
01:04:47,000 --> 01:04:49,000
我们对比一个 root 的哈希

1848
01:04:49,000 --> 01:04:51,000
可以找到哪一个文件被改变了

1849
01:04:52,000 --> 01:04:53,000
对吧

1850
01:04:53,000 --> 01:04:54,000
其实通过这种方式

1851
01:04:54,000 --> 01:04:58,000
我们就可以完全能够探知得到

1852
01:04:59,000 --> 01:05:04,000
你的程序有没有被叫未授权篡改过

1853
01:05:05,000 --> 01:05:06,000
怎么感觉像 git

1854
01:05:07,000 --> 01:05:10,000
git 其实不就是差不多在做类似的事情

1855
01:05:10,000 --> 01:05:11,000
本质上就是在做这件事情

1856
01:05:11,000 --> 01:05:13,000
不过说 git 它是一个链状的结构

1857
01:05:13,000 --> 01:05:17,000
然后文件数的哈希是一个数状的结构

1858
01:05:18,000 --> 01:05:21,000
而这一点恰恰是在一些比较高级的文件

1859
01:05:21,000 --> 01:05:22,000
系统里面已经实现了

1860
01:05:22,000 --> 01:05:24,000
就像 ZFS 里面

1861
01:05:24,000 --> 01:05:28,000
但它不是为了保证说你的文件不篡改

1862
01:05:28,000 --> 01:05:29,000
而是说它是要保证

1863
01:05:29,000 --> 01:05:33,000
因为硬盘本身可能会发生一些硬件错误

1864
01:05:33,000 --> 01:05:34,000
导致你的文件被篡改

1865
01:05:34,000 --> 01:05:37,000
它需要能够侦测得到篡改

1866
01:05:37,000 --> 01:05:39,000
然后同时同时一样的东西

1867
01:05:39,000 --> 01:05:39,000
对

1868
01:05:39,000 --> 01:05:44,000
但它在算法和思路上是一致的

1869
01:05:44,000 --> 01:05:48,000
就通过一些方法能够记录一些

1870
01:05:49,000 --> 01:05:51,000
能生成一堆数据的指纹

1871
01:05:51,000 --> 01:05:53,000
而且并且能够快速的探测的

1872
01:05:53,000 --> 01:05:54,000
通过这些指纹

1873
01:05:54,000 --> 01:05:57,000
能够快速的探测到哪一个文件的

1874
01:05:57,000 --> 01:06:01,000
哪一部分是被不经意的修改过了

1875
01:06:01,000 --> 01:06:03,000
发生了变动

1876
01:06:04,000 --> 01:06:05,000
对吧

1877
01:06:05,000 --> 01:06:06,000
所以其实从这种角度来讲

1878
01:06:06,000 --> 01:06:08,000
我觉得是完全有技术措施

1879
01:06:09,000 --> 01:06:12,000
可能虽然当然要花费一点计算能力

1880
01:06:12,000 --> 01:06:14,000
CPU 要多算一会

1881
01:06:14,000 --> 01:06:17,000
但是其实完全是有能力去实现

1882
01:06:17,000 --> 01:06:19,000
说这个文件

1883
01:06:20,000 --> 01:06:21,000
就是这个软件是

1884
01:06:21,000 --> 01:06:24,000
至少是按照原始意图来的

1885
01:06:25,000 --> 01:06:26,000
当然这个念一方面说

1886
01:06:26,000 --> 01:06:30,000
这次 OS X 升级以后 10.11 CAP 10

1887
01:06:30,000 --> 01:06:32,000
里面自带了一个功能叫做 Rootless

1888
01:06:33,000 --> 01:06:34,000
Rootless 什么意思

1889
01:06:34,000 --> 01:06:34,000
就是说

1890
01:06:34,000 --> 01:06:36,000
因为以前就刚才讲的那个问题

1891
01:06:36,000 --> 01:06:38,000
就是苹果的操作系统里面

1892
01:06:38,000 --> 01:06:41,000
一些系统的核心部件的文件

1893
01:06:41,000 --> 01:06:44,000
是可以被超级用户所更改的

1894
01:06:45,000 --> 01:06:45,000
对

1895
01:06:45,000 --> 01:06:47,000
然后大家虽然说我们有这个速度

1896
01:06:47,000 --> 01:06:50,000
超级用户和普通权用户隔离

1897
01:06:50,000 --> 01:06:54,000
但是因为很多实际使用的原因

1898
01:06:54,000 --> 01:06:56,000
大家还是用速度用的比较烂

1899
01:06:57,000 --> 01:06:57,000
对吧

1900
01:06:57,000 --> 01:06:59,000
现在要速度这样速度那样

1901
01:06:59,000 --> 01:07:01,000
有些是很蠢的事情

1902
01:07:01,000 --> 01:07:03,000
就是你要试图用

1903
01:07:03,000 --> 01:07:05,000
你在试图装一个软件

1904
01:07:05,000 --> 01:07:07,000
然后这个软件的安装指南上

1905
01:07:07,000 --> 01:07:09,000
赫然写着速度速度那个

1906
01:07:09,000 --> 01:07:09,000
对

1907
01:07:09,000 --> 01:07:10,000
然后让你

1908
01:07:10,000 --> 01:07:12,000
唐二皇之的叫你输入关于密码

1909
01:07:12,000 --> 01:07:14,000
就基本上

1910
01:07:14,000 --> 01:07:14,000
对

1911
01:07:14,000 --> 01:07:16,000
这从来不会告诫

1912
01:07:16,000 --> 01:07:16,000
你说你这样做

1913
01:07:16,000 --> 01:07:19,000
可能会对你的系统产生危害

1914
01:07:19,000 --> 01:07:20,000
当然也告

1915
01:07:20,000 --> 01:07:22,000
其实告诫了也没有用

1916
01:07:22,000 --> 01:07:23,000
就好像 Windows

1917
01:07:23,000 --> 01:07:28,000
好像说从 XP 还是 Windows Vista 开始

1918
01:07:29,000 --> 01:07:30,000
它每次要

1919
01:07:30,000 --> 01:07:32,000
就有程序或应用

1920
01:07:32,000 --> 01:07:34,000
要做出对系统修改的时候

1921
01:07:34,000 --> 01:07:35,000
它会弹出一个框

1922
01:07:35,000 --> 01:07:35,000
问你要不要做这个

1923
01:07:35,000 --> 01:07:36,000
要不要做那个

1924
01:07:36,000 --> 01:07:36,000
对

1925
01:07:36,000 --> 01:07:38,000
叫什么 UAC 之类的

1926
01:07:38,000 --> 01:07:39,000
对

1927
01:07:39,000 --> 01:07:41,000
但是你提示做了之后

1928
01:07:41,000 --> 01:07:42,000
用户也就疲劳了

1929
01:07:42,000 --> 01:07:43,000
对这种东西也是

1930
01:07:43,000 --> 01:07:45,000
10 个用户有 9 个会试图在第一时间

1931
01:07:45,000 --> 01:07:47,000
让对号框赶紧消失

1932
01:07:48,000 --> 01:07:49,000
对没错

1933
01:07:49,000 --> 01:07:50,000
根本不会去读上面写什么

1934
01:07:50,000 --> 01:07:52,000
所以其实你看这个东西

1935
01:07:52,000 --> 01:07:55,000
你靠提示用户是没有用的

1936
01:07:55,000 --> 01:08:02,000
因为首先用户并不一定具备能力去判断

1937
01:08:02,000 --> 01:08:03,000
这到底是可以还是不可以

1938
01:08:03,000 --> 01:08:03,000
对吧

1939
01:08:03,000 --> 01:08:04,000
它不具备

1940
01:08:04,000 --> 01:08:07,000
它不是 technical 的一个知识

1941
01:08:07,000 --> 01:08:08,000
而且说

1942
01:08:08,000 --> 01:08:10,000
即便是对于这种具备这种能力

1943
01:08:10,000 --> 01:08:12,000
和知识的用户

1944
01:08:12,000 --> 01:08:14,000
你也不可能每次都去问他

1945
01:08:14,000 --> 01:08:17,000
因为这个会反正人会产生疲劳的

1946
01:08:17,000 --> 01:08:19,000
就是说你问他 100 次

1947
01:08:19,000 --> 01:08:20,000
他肯定不会再想这个事情了

1948
01:08:20,000 --> 01:08:21,000
对吧

1949
01:08:22,000 --> 01:08:22,000
对

1950
01:08:22,000 --> 01:08:24,000
所以我觉得这不是一个

1951
01:08:25,000 --> 01:08:28,000
就是如果你解决全新问题的方案

1952
01:08:28,000 --> 01:08:30,000
是询问用户的话

1953
01:08:30,000 --> 01:08:32,000
你就其实已经认输了

1954
01:08:33,000 --> 01:08:34,000
你就说这个问题我解决不了

1955
01:08:34,000 --> 01:08:35,000
你自己想办法吧

1956
01:08:35,000 --> 01:08:37,000
但是其实我觉得是完全通过

1957
01:08:37,000 --> 01:08:39,000
通过设计是可以改变一些

1958
01:08:39,000 --> 01:08:40,000
就可以做出更好的设计的

1959
01:08:41,000 --> 01:08:43,000
比如刚才讲的哈士树的方法

1960
01:08:43,000 --> 01:08:44,000
你可以精确的告诉

1961
01:08:44,000 --> 01:08:46,000
说哪个文件出了问题

1962
01:08:46,000 --> 01:08:47,000
这样肯定会有什么后果

1963
01:08:47,000 --> 01:08:47,000
对吧

1964
01:08:48,000 --> 01:08:48,000
对

1965
01:08:48,000 --> 01:08:49,000
可以去做一些事情

1966
01:08:49,000 --> 01:08:50,000
然后就是说

1967
01:08:51,000 --> 01:08:53,000
在设计系统的时候

1968
01:08:53,000 --> 01:08:57,000
不是我们目前那种非黑即白的

1969
01:08:57,000 --> 01:09:00,000
这种比较简单粗暴的权限的方式

1970
01:09:00,000 --> 01:09:03,000
是不太够用的

1971
01:09:04,000 --> 01:09:06,000
然后这里就涉及到我们要讲的

1972
01:09:06,000 --> 01:09:09,000
一个非常重要的一个人了

1973
01:09:09,000 --> 01:09:12,000
这个人叫 Daniel J. Bernstein

1974
01:09:12,000 --> 01:09:14,000
Bernstein

1975
01:09:14,000 --> 01:09:16,000
Bernstein 先生

1976
01:09:16,000 --> 01:09:16,000
对

1977
01:09:16,000 --> 01:09:18,000
他所谓叫 DJB

1978
01:09:18,000 --> 01:09:20,000
如果这个时候你都

1979
01:09:20,000 --> 01:09:21,000
你听到这三个字

1980
01:09:21,000 --> 01:09:23,000
你看那三个字母缩写名字的时候

1981
01:09:23,000 --> 01:09:26,000
你都没有一种如雷挂的感觉的话

1982
01:09:26,000 --> 01:09:27,000
说明你的安全

1983
01:09:27,000 --> 01:09:30,000
安全词词还不太到位

1984
01:09:31,000 --> 01:09:32,000
对

1985
01:09:32,000 --> 01:09:33,000
先普及一下

1986
01:09:33,000 --> 01:09:35,000
DJB 是那个

1987
01:09:35,000 --> 01:09:37,000
他有一个个人网站叫做 Krypto

1988
01:09:37,000 --> 01:09:40,000
是 cr.yp.to

1989
01:09:40,000 --> 01:09:42,000
你就可以看一下他那些什么样的事

1990
01:09:42,000 --> 01:09:45,000
Krypto 这个单词分列成三半

1991
01:09:45,000 --> 01:09:47,000
就像当初 Delicious

1992
01:09:47,000 --> 01:09:47,000
对

1993
01:09:48,000 --> 01:09:50,000
他是哪个

1994
01:09:50,000 --> 01:09:51,000
爱丁堡大学的还是

1995
01:09:51,000 --> 01:09:51,000
不是

1996
01:09:51,000 --> 01:09:57,000
他是伊利诺伊斯大学芝加哥分校的教授

1997
01:09:57,000 --> 01:09:57,000
对

1998
01:09:57,000 --> 01:09:58,000
OK

1999
01:09:58,000 --> 01:10:01,000
是在数学统计和计算机科学系

2000
01:10:02,000 --> 01:10:03,000
你这好长

2001
01:10:04,000 --> 01:10:04,000
anyway

2002
01:10:04,000 --> 01:10:07,000
他有一些著名的作品

2003
01:10:07,000 --> 01:10:09,000
最简单的大家可能比较哄好的

2004
01:10:09,000 --> 01:10:11,000
一个叫 NACL 的酷

2005
01:10:11,000 --> 01:10:14,000
叫做 Networking and Kreatography Library

2006
01:10:16,000 --> 01:10:19,000
然后还有一些像这个 library 的重要程度

2007
01:10:19,000 --> 01:10:20,000
是怎么样子的

2008
01:10:21,000 --> 01:10:24,000
基本上今天互联网一些应用的基石

2009
01:10:24,000 --> 01:10:26,000
是依赖于酷的

2010
01:10:26,000 --> 01:10:27,000
就是安全的

2011
01:10:27,000 --> 01:10:30,000
安全的网络通信的基石是依赖于酷的

2012
01:10:30,000 --> 01:10:32,000
为什么他在 CV 上写了他是德国人

2013
01:10:33,000 --> 01:10:35,000
他的 citizenship

2014
01:10:35,000 --> 01:10:36,000
就是他跟我同一年生的

2015
01:10:36,000 --> 01:10:37,000
首先

2016
01:10:38,000 --> 01:10:40,000
10 月 29 日出生

2017
01:10:40,000 --> 01:10:42,000
他出生在美国纽约

2018
01:10:42,000 --> 01:10:46,000
但是他的 citizenship 写了 USA 和 Germany

2019
01:10:48,000 --> 01:10:48,000
这是为什么

2020
01:10:50,000 --> 01:10:51,000
好问题

2021
01:10:51,000 --> 01:10:52,000
我也不知道

2022
01:10:53,000 --> 01:10:54,000
OK 你接着说

2023
01:10:54,000 --> 01:10:55,000
我刚才沉浸在

2024
01:10:55,000 --> 01:10:57,000
他是德国和美国双国籍

2025
01:10:57,000 --> 01:10:58,000
有可能他是这个

2026
01:10:58,000 --> 01:10:59,000
他是 by birth

2027
01:10:59,000 --> 01:11:01,000
就是 by 血缘关系的德国公民

2028
01:11:01,000 --> 01:11:03,000
因为他父母一方是德国人

2029
01:11:04,000 --> 01:11:05,000
他在美国出生

2030
01:11:05,000 --> 01:11:07,000
然后 by birth 又是美国人

2031
01:11:07,000 --> 01:11:08,000
就是落地

2032
01:11:08,000 --> 01:11:09,000
落地在美国

2033
01:11:09,000 --> 01:11:11,000
所以又是美国公民

2034
01:11:11,000 --> 01:11:14,000
他是有双重公民身份

2035
01:11:15,000 --> 01:11:15,000
anyway

2036
01:11:16,000 --> 01:11:17,000
他还有一些其他的作品

2037
01:11:17,000 --> 01:11:19,000
比如说 DNS Curve

2038
01:11:20,000 --> 01:11:21,000
对吧

2039
01:11:21,000 --> 01:11:22,000
DNS Curve

2040
01:11:22,000 --> 01:11:23,000
DNS Curve 是干嘛的

2041
01:11:23,000 --> 01:11:25,000
就是一个

2042
01:11:25,000 --> 01:11:30,000
这个说起来比较麻烦

2043
01:11:30,000 --> 01:11:33,000
加密的 DNS

2044
01:11:33,000 --> 01:11:35,000
对加密的 DNS 协议可以这么说

2045
01:11:36,000 --> 01:11:38,000
然后 Linux

2046
01:11:38,000 --> 01:11:39,000
或者 Linux 上面用户

2047
01:11:39,000 --> 01:11:41,000
可能用的比较多的 Demon Tools

2048
01:11:43,000 --> 01:11:43,000
是他写的

2049
01:11:44,000 --> 01:11:46,000
好像其他的

2050
01:11:46,000 --> 01:11:47,000
Qmail 也是他写的

2051
01:11:49,000 --> 01:11:49,000
对

2052
01:11:49,000 --> 01:11:51,000
所以当然我都说了

2053
01:11:51,000 --> 01:11:54,000
如果你没觉得这 DJP 三个字母

2054
01:11:54,000 --> 01:11:55,000
入类罐儿的话

2055
01:11:55,000 --> 01:11:57,000
你可能要反思一下自己了

2056
01:11:59,000 --> 01:12:02,000
他在 2007 年的时候

2057
01:12:02,000 --> 01:12:04,000
发表了一篇论文

2058
01:12:04,000 --> 01:12:07,000
叫做 Some thoughts on security

2059
01:12:07,000 --> 01:12:09,000
after 10 years of Qmail 1.0

2060
01:12:09,000 --> 01:12:14,000
就是写 Qmail 1.010 年后

2061
01:12:14,000 --> 01:12:15,000
关于安全的一些想法

2062
01:12:16,000 --> 01:12:19,000
虽然原来标题没有关于安全这件事情

2063
01:12:19,000 --> 01:12:20,000
oh sorry

2064
01:12:20,000 --> 01:12:21,000
some thoughts on security

2065
01:12:21,000 --> 01:12:22,000
on security

2066
01:12:22,000 --> 01:12:23,000
对

2067
01:12:25,000 --> 01:12:28,000
里面他用了大概多少

2068
01:12:30,000 --> 01:12:31,000
5 个章节

2069
01:12:31,000 --> 01:12:34,000
讲了一下他在写 Qmail 这款以安全

2070
01:12:34,000 --> 01:12:37,000
著称的邮件的 Demon

2071
01:12:37,000 --> 01:12:38,000
Demon 中文翻译成什么

2072
01:12:38,000 --> 01:12:39,000
我又忘了

2073
01:12:39,000 --> 01:12:42,000
守护进程

2074
01:12:42,000 --> 01:12:47,000
这么一套工具的一些想法和措施

2075
01:12:48,000 --> 01:12:49,000
就是简单来说

2076
01:12:50,000 --> 01:12:53,000
怎么去写出一个安全可合的软件

2077
01:12:53,000 --> 01:12:54,000
这篇论文

2078
01:12:54,000 --> 01:12:57,000
我们会贴在本期节目的 notes 里面

2079
01:12:58,000 --> 01:12:59,000
也不是很长

2080
01:12:59,000 --> 01:13:02,000
如果不去看 reference 的话

2081
01:13:02,000 --> 01:13:04,000
基本上只有八页纸的样子

2082
01:13:04,000 --> 01:13:05,000
对

2083
01:13:05,000 --> 01:13:07,000
而且它里面其实 technical detail

2084
01:13:07,000 --> 01:13:08,000
其实并不多

2085
01:13:08,000 --> 01:13:14,000
大部分其实是在讨论一些思路和架构的问题

2086
01:13:14,000 --> 01:13:16,000
原则上的问题

2087
01:13:16,000 --> 01:13:16,000
对

2088
01:13:16,000 --> 01:13:17,000
principle

2089
01:13:19,000 --> 01:13:21,000
他说怎么写一个安全的程序

2090
01:13:21,000 --> 01:13:23,000
有一些通常的思路

2091
01:13:23,000 --> 01:13:27,000
叫做首先我们要减少 bug

2092
01:13:27,000 --> 01:13:28,000
对吧

2093
01:13:28,000 --> 01:13:30,000
因为这些安全楼等通常

2094
01:13:30,000 --> 01:13:32,000
所有的安全楼等都是 bug

2095
01:13:33,000 --> 01:13:36,000
所以我们怎么样解决 bug

2096
01:13:36,000 --> 01:13:39,000
然后第二个思路就是说

2097
01:13:40,000 --> 01:13:43,000
如果我们假定出 bug 的概率是

2098
01:13:43,000 --> 01:13:45,000
相对来说差不多的

2099
01:13:45,000 --> 01:13:47,000
那么这个程序的代码量越少

2100
01:13:47,000 --> 01:13:50,000
它的 bug 的总量是不是可能就越低了

2101
01:13:50,000 --> 01:13:51,000
一个复杂的程序

2102
01:13:51,000 --> 01:13:54,000
总是可能比一个简单的程序

2103
01:13:55,000 --> 01:13:58,000
其他条件一定的情况下

2104
01:13:58,000 --> 01:14:00,000
肯定是一个更复杂的程序

2105
01:14:00,000 --> 01:14:01,000
可能还有更多的 bug

2106
01:14:01,000 --> 01:14:02,000
对吧

2107
01:14:02,000 --> 01:14:03,000
没错

2108
01:14:03,000 --> 01:14:06,000
然后第三个一个措施就是说

2109
01:14:07,000 --> 01:14:08,000
叫做什么来的

2110
01:14:08,000 --> 01:14:10,000
减少被信任的代码

2111
01:14:10,000 --> 01:14:10,000
对

2112
01:14:10,000 --> 01:14:12,000
这里其他有一个概念

2113
01:14:12,000 --> 01:14:14,000
什么叫做信任的代码和不被信任的代码

2114
01:14:14,000 --> 01:14:15,000
就是说

2115
01:14:15,000 --> 01:14:18,000
信任的代码可以做一些更高权限的事儿

2116
01:14:18,000 --> 01:14:19,000
然后不被信任的代码

2117
01:14:19,000 --> 01:14:21,000
就必须只能做一些很低权限

2118
01:14:21,000 --> 01:14:23,000
甚至不需要权限的事儿

2119
01:14:23,000 --> 01:14:25,000
然后这样的好处是什么呢

2120
01:14:25,000 --> 01:14:28,000
就是说哪怕不被信任代码出了 bug

2121
01:14:28,000 --> 01:14:33,000
它的结果也不会导致系统出现安全漏洞

2122
01:14:33,000 --> 01:14:34,000
对

2123
01:14:34,000 --> 01:14:37,000
所以说我们能够把代码分成可信任的部分

2124
01:14:37,000 --> 01:14:38,000
和不可信任的部分

2125
01:14:38,000 --> 01:14:41,000
并且把不可信任的部分放在一些

2126
01:14:41,000 --> 01:14:43,000
特殊的受限制的环境里面去执行

2127
01:14:43,000 --> 01:14:44,000
比如说沙盒模型对吧

2128
01:14:44,000 --> 01:14:45,000
对

2129
01:14:45,000 --> 01:14:47,000
那么这样也可以在一定程度上

2130
01:14:48,000 --> 01:14:51,000
减低安全漏洞的隐化

2131
01:14:51,000 --> 01:14:54,000
因为跟前面那个情况一样

2132
01:14:54,000 --> 01:14:57,000
就是受信任的代码

2133
01:14:57,000 --> 01:14:57,000
就是受限代码

2134
01:14:57,000 --> 01:15:00,000
就是需要允许在更高权限级别的代码

2135
01:15:00,000 --> 01:15:01,000
的总量减少了

2136
01:15:01,000 --> 01:15:05,000
然后如果我们假设代码出现漏洞的概率

2137
01:15:05,000 --> 01:15:06,000
是差不多的话

2138
01:15:06,000 --> 01:15:07,000
那肯定代码总量也会减

2139
01:15:07,000 --> 01:15:10,000
就是至少安全漏洞的隐化会减少了

2140
01:15:10,000 --> 01:15:10,000
对吧

2141
01:15:11,000 --> 01:15:12,000
当然

2142
01:15:12,000 --> 01:15:15,000
还有一些就是他认为是没有

2143
01:15:15,000 --> 01:15:17,000
什么就是燃病卵的

2144
01:15:18,000 --> 01:15:20,000
就并没有什么用处的

2145
01:15:22,000 --> 01:15:24,000
提升软件安全的办法

2146
01:15:24,000 --> 01:15:24,000
对

2147
01:15:24,000 --> 01:15:26,000
第一个方法就是

2148
01:15:26,000 --> 01:15:27,000
Chasing Attack

2149
01:15:27,000 --> 01:15:27,000
对

2150
01:15:27,000 --> 01:15:29,000
就跟着

2151
01:15:29,000 --> 01:15:32,000
就你也是叫被攻击者牵着鼻子走

2152
01:15:32,000 --> 01:15:32,000
对

2153
01:15:33,000 --> 01:15:34,000
我觉得这个翻译好一点

2154
01:15:35,000 --> 01:15:35,000
OK

2155
01:15:35,000 --> 01:15:36,000
就简单来说

2156
01:15:36,000 --> 01:15:37,000
就是我们说的

2157
01:15:37,000 --> 01:15:38,000
中文叫做头痛一头

2158
01:15:38,000 --> 01:15:39,000
一头

2159
01:15:39,000 --> 01:15:41,000
脚痛一脚的方法

2160
01:15:41,000 --> 01:15:42,000
就是说攻击者过来了

2161
01:15:42,000 --> 01:15:43,000
发现哪里漏了

2162
01:15:43,000 --> 01:15:44,000
就扑过去

2163
01:15:44,000 --> 01:15:46,000
把漏洞扑上

2164
01:15:46,000 --> 01:15:47,000
然后他攻击者又攻击另外一个地方了

2165
01:15:47,000 --> 01:15:48,000
你又扑上去

2166
01:15:48,000 --> 01:15:50,000
把漏洞堵上

2167
01:15:50,000 --> 01:15:53,000
始终是处于一个相对被动的方法

2168
01:15:53,000 --> 01:15:54,000
GGB 认为

2169
01:15:55,000 --> 01:15:57,000
这个是不靠谱的

2170
01:15:57,000 --> 01:16:00,000
因为没有从根源上解决问题了

2171
01:16:01,000 --> 01:16:01,000
对

2172
01:16:01,000 --> 01:16:03,000
他又顺便黑了一下 Firewall

2173
01:16:03,000 --> 01:16:05,000
然后什么防病毒软件

2174
01:16:05,000 --> 01:16:07,000
或者什么

2175
01:16:07,000 --> 01:16:09,000
Intrusion Detection System 之类的东西

2176
01:16:09,000 --> 01:16:10,000
对

2177
01:16:10,000 --> 01:16:12,000
他觉得这些东西也都是燃病卵

2178
01:16:12,000 --> 01:16:13,000
当然这个地方

2179
01:16:13,000 --> 01:16:14,000
我觉得还是可以反对一下

2180
01:16:14,000 --> 01:16:16,000
至少 Intrusion Detection System

2181
01:16:16,000 --> 01:16:20,000
可以让你对于正在进行的攻击有所反应

2182
01:16:20,000 --> 01:16:21,000
这已经是一个

2183
01:16:22,000 --> 01:16:30,000
至少你在维护一些不可能被修正的漏洞的时候

2184
01:16:30,000 --> 01:16:30,000
会

2185
01:16:31,000 --> 01:16:32,000
这个东西还是很有用

2186
01:16:32,000 --> 01:16:32,000
比如说 DDoS

2187
01:16:32,000 --> 01:16:35,000
DDoS 攻击本质上是没有

2188
01:16:35,000 --> 01:16:37,000
根本根本跟漏洞没有关系对吧

2189
01:16:37,000 --> 01:16:37,000
他

2190
01:16:37,000 --> 01:16:38,000
就是

2191
01:16:39,000 --> 01:16:41,000
就是这是一个物理条件

2192
01:16:41,000 --> 01:16:43,000
所导致的一个安全隐患

2193
01:16:43,000 --> 01:16:44,000
你在这种情况之下

2194
01:16:44,000 --> 01:16:47,000
有一个 Intrusion Detection System 还是很有用

2195
01:16:49,000 --> 01:16:50,000
当然

2196
01:16:50,000 --> 01:16:50,000
对

2197
01:16:50,000 --> 01:16:52,000
这个在软件工程的环节上是

2198
01:16:52,000 --> 01:16:54,000
的确是可以像他说的一样

2199
01:16:54,000 --> 01:16:56,000
做任务是没有什么事

2200
01:16:56,000 --> 01:16:57,000
的确是没有什么漏洞

2201
01:16:57,000 --> 01:16:57,000
对

2202
01:16:57,000 --> 01:17:00,000
因为他本质上并没有修正

2203
01:17:00,000 --> 01:17:00,000
就是

2204
01:17:01,000 --> 01:17:04,000
就改变这个系统是一个千舱百孔的事实

2205
01:17:04,000 --> 01:17:05,000
对吧

2206
01:17:05,000 --> 01:17:05,000
对

2207
01:17:05,000 --> 01:17:06,000
没错

2208
01:17:07,000 --> 01:17:11,000
然后下一条他觉得燃病卵的方法叫做

2209
01:17:11,000 --> 01:17:13,000
减少权限

2210
01:17:13,000 --> 01:17:15,000
这个其实可能跟很多

2211
01:17:15,000 --> 01:17:19,000
刚才我们讲的速度这个情况有点关系

2212
01:17:19,000 --> 01:17:21,000
就是说你降低权限

2213
01:17:21,000 --> 01:17:23,000
或者权限分离的

2214
01:17:24,000 --> 01:17:26,000
其实在他看来并没有什么用

2215
01:17:27,000 --> 01:17:27,000
没错

2216
01:17:27,000 --> 01:17:32,000
这其实有点叫什么 contrary to popular belief

2217
01:17:32,000 --> 01:17:32,000
就是

2218
01:17:32,000 --> 01:17:34,000
minimize privilege

2219
01:17:34,000 --> 01:17:36,000
在他看来是没有太多用处

2220
01:17:36,000 --> 01:17:37,000
因为

2221
01:17:38,000 --> 01:17:40,000
毕竟你有

2222
01:17:40,000 --> 01:17:43,000
你再怎么 minimize privilege

2223
01:17:43,000 --> 01:17:43,000
那个 private

2224
01:17:43,000 --> 01:17:44,000
如果你需要的话

2225
01:17:44,000 --> 01:17:46,000
还是在那的

2226
01:17:46,000 --> 01:17:47,000
对吧

2227
01:17:47,000 --> 01:17:48,000
对

2228
01:17:48,000 --> 01:17:51,000
你只有说我要把这些

2229
01:17:51,000 --> 01:17:54,000
需要被 trust code 减到最少

2230
01:17:54,000 --> 01:17:56,000
你这个 minimize privilege

2231
01:17:56,000 --> 01:17:58,000
才有那么一点点的用

2232
01:17:58,000 --> 01:18:01,000
但如果你在 minimize privilege 的同时

2233
01:18:01,000 --> 01:18:03,000
没有去减少需要被 trust code

2234
01:18:03,000 --> 01:18:06,000
那你只要给你那一点点 private

2235
01:18:06,000 --> 01:18:08,000
你就已经可以为所欲为了

2236
01:18:09,000 --> 01:18:09,000
对

2237
01:18:09,000 --> 01:18:11,000
所以其实逻辑上他觉得

2238
01:18:12,000 --> 01:18:14,000
减少权限的

2239
01:18:14,000 --> 01:18:17,000
并不解决实际问题的根本原因

2240
01:18:17,000 --> 01:18:19,000
就是因为减少权限

2241
01:18:19,000 --> 01:18:21,000
只是说减少了

2242
01:18:21,000 --> 01:18:25,000
一旦出现软件 bug 或者是安全漏洞

2243
01:18:25,000 --> 01:18:27,000
造成的损失

2244
01:18:27,000 --> 01:18:30,000
而并没有解决安全漏洞本身

2245
01:18:30,000 --> 01:18:31,000
对

2246
01:18:31,000 --> 01:18:31,000
对

2247
01:18:31,000 --> 01:18:32,000
所以其实从这个我讲

2248
01:18:32,000 --> 01:18:34,000
他的思路是正确的

2249
01:18:34,000 --> 01:18:36,000
因为确实并没有减少

2250
01:18:37,000 --> 01:18:38,000
软件漏洞的数量本身

2251
01:18:39,000 --> 01:18:41,000
他只是说减少了软件漏洞

2252
01:18:41,000 --> 01:18:44,000
可能产生的影响

2253
01:18:45,000 --> 01:18:47,000
其实这个事情是值得说的

2254
01:18:47,000 --> 01:18:49,000
比如说很简单一个例子

2255
01:18:49,000 --> 01:18:51,000
他说 minimize 就是减少权限

2256
01:18:51,000 --> 01:18:52,000
比如说现在很多

2257
01:18:54,000 --> 01:18:56,000
iOS 的应用也好

2258
01:18:56,000 --> 01:18:57,000
还是安卓应用也好

2259
01:18:57,000 --> 01:18:57,000
他会说

2260
01:18:58,000 --> 01:19:00,000
我要你的通讯路访问权限对吧

2261
01:19:01,000 --> 01:19:02,000
但其实你知道

2262
01:19:02,000 --> 01:19:04,000
他是有可能会把这个

2263
01:19:04,000 --> 01:19:06,000
偷偷上传到他的云端

2264
01:19:06,000 --> 01:19:08,000
然后去做一些

2265
01:19:08,000 --> 01:19:10,000
这种打着你的旗号

2266
01:19:10,000 --> 01:19:12,000
去骚扰你的朋友的事儿

2267
01:19:12,000 --> 01:19:12,000
对

2268
01:19:12,000 --> 01:19:14,000
这个时候你有两种做法

2269
01:19:14,000 --> 01:19:15,000
你要不就拒绝他

2270
01:19:15,000 --> 01:19:17,000
对你拒绝他显示那个

2271
01:19:17,000 --> 01:19:18,000
然后那个时候就减少了权限了

2272
01:19:19,000 --> 01:19:21,000
这样哪怕他是一个恶意的程序

2273
01:19:21,000 --> 01:19:22,000
他也不会说拿到你的通讯

2274
01:19:22,000 --> 01:19:23,000
运动会怎么样

2275
01:19:23,000 --> 01:19:25,000
但是假设这个软件

2276
01:19:25,000 --> 01:19:27,000
刚好有这么一小撮功能

2277
01:19:27,000 --> 01:19:29,000
是必须得访问通讯运动

2278
01:19:29,000 --> 01:19:30,000
才能正常使用的

2279
01:19:30,000 --> 01:19:32,000
但这个只是随便举个例子

2280
01:19:32,000 --> 01:19:33,000
你又不得不授权他的时候

2281
01:19:33,000 --> 01:19:35,000
这个时候你就很纠结了

2282
01:19:35,000 --> 01:19:37,000
你说我到底要不要

2283
01:19:37,000 --> 01:19:39,000
为了这个功能选择相信他呢

2284
01:19:39,000 --> 01:19:40,000
这个我觉得就是一个

2285
01:19:40,000 --> 01:19:42,000
挺考验人心的时刻

2286
01:19:43,000 --> 01:19:43,000
没错

2287
01:19:45,000 --> 01:19:47,000
我觉得其实 minimize and privilege

2288
01:19:47,000 --> 01:19:48,000
并不是一个错的举措

2289
01:19:48,000 --> 01:19:50,000
至少你做

2290
01:19:50,000 --> 01:19:53,000
比如说你是一个 IT and straighter

2291
01:19:53,000 --> 01:19:56,000
然后你必须给不同用户

2292
01:19:56,000 --> 01:19:57,000
分配权限的时候

2293
01:19:57,000 --> 01:19:58,000
minimize and privilege

2294
01:19:58,000 --> 01:20:00,000
是一个非常正确的策略

2295
01:20:00,000 --> 01:20:02,000
但是我相信作者的意思

2296
01:20:02,000 --> 01:20:04,000
只是说 minimize and privilege

2297
01:20:04,000 --> 01:20:06,000
并不能减少软件中的 bug

2298
01:20:06,000 --> 01:20:07,000
对

2299
01:20:07,000 --> 01:20:09,000
所以这是两个层面的问题

2300
01:20:09,000 --> 01:20:11,000
我们还是要把这个分得清楚了

2301
01:20:11,000 --> 01:20:12,000
一个是说

2302
01:20:12,000 --> 01:20:16,000
就减少软件 bug 这个事情

2303
01:20:16,000 --> 01:20:18,000
本身来讲确实减少权限

2304
01:20:18,000 --> 01:20:20,000
并没有什么用

2305
01:20:20,000 --> 01:20:23,000
但是我们毕竟

2306
01:20:23,000 --> 01:20:24,000
在实际案中还是说

2307
01:20:24,000 --> 01:20:26,000
因为不可能保证

2308
01:20:26,000 --> 01:20:27,000
所有的 bug 都被修复

2309
01:20:27,000 --> 01:20:29,000
所以我们只能说

2310
01:20:29,000 --> 01:20:32,000
除了在通过措施减少 bug 同时

2311
01:20:32,000 --> 01:20:33,000
还要尽量矫正

2312
01:20:33,000 --> 01:20:35,000
尽量保证如果 bug 发生

2313
01:20:35,000 --> 01:20:38,000
也要减少它的可能产生的负面影响

2314
01:20:39,000 --> 01:20:40,000
对

2315
01:20:40,000 --> 01:20:44,000
一个是从工程学的角度来理解的

2316
01:20:44,000 --> 01:20:45,000
另外一个则是从

2317
01:20:45,000 --> 01:20:47,000
administration 的角度来讲

2318
01:20:47,000 --> 01:20:48,000
对

2319
01:20:48,000 --> 01:20:51,000
然后他说第三条并没有什么

2320
01:20:53,000 --> 01:20:55,000
这并没有什么用

2321
01:20:55,000 --> 01:20:56,000
而是说

2322
01:20:56,000 --> 01:20:58,000
一个很常见的因素

2323
01:20:58,000 --> 01:20:59,000
会导致大家会放弃

2324
01:20:59,000 --> 01:21:02,000
对软件安全的追求

2325
01:21:02,000 --> 01:21:04,000
这个理由通常就是性能或者叫速度

2326
01:21:05,000 --> 01:21:06,000
对我们可能为了

2327
01:21:06,000 --> 01:21:08,000
追求软件的性能或者是一些速度

2328
01:21:08,000 --> 01:21:11,000
去采用一些不那么安全靠谱的

2329
01:21:11,000 --> 01:21:13,000
这个方案

2330
01:21:13,000 --> 01:21:14,000
或者说这个写法

2331
01:21:15,000 --> 01:21:17,000
一个最简单的例子

2332
01:21:17,000 --> 01:21:18,000
可能可能这么对比比较好

2333
01:21:18,000 --> 01:21:19,000
比如说

2334
01:21:20,000 --> 01:21:21,000
这个当然我们是自己举的例子

2335
01:21:21,000 --> 01:21:22,000
并不是他文章说的一个例子

2336
01:21:22,000 --> 01:21:24,000
我们说进程和现成的关系

2337
01:21:25,000 --> 01:21:26,000
就通常在

2338
01:21:26,000 --> 01:21:28,000
可能在 mila 上这是不成立

2339
01:21:28,000 --> 01:21:29,000
比如在 windows 上面

2340
01:21:29,000 --> 01:21:31,000
你开一个新的现成

2341
01:21:31,000 --> 01:21:33,000
比开一个新的进程

2342
01:21:33,000 --> 01:21:34,000
是要开下来的低的

2343
01:21:35,000 --> 01:21:36,000
对

2344
01:21:36,000 --> 01:21:37,000
没错吧

2345
01:21:37,000 --> 01:21:37,000
对

2346
01:21:37,000 --> 01:21:38,000
但是

2347
01:21:38,000 --> 01:21:40,000
现成与现成之间

2348
01:21:40,000 --> 01:21:41,000
并不能实现内存隔离

2349
01:21:41,000 --> 01:21:41,000
对吧

2350
01:21:41,000 --> 01:21:45,000
因为他在现成之间是共享内存区域的

2351
01:21:45,000 --> 01:21:46,000
不受操作系统其他保护

2352
01:21:47,000 --> 01:21:47,000
这样的话

2353
01:21:48,000 --> 01:21:50,000
在一个现成里面出现的软件 bug

2354
01:21:50,000 --> 01:21:52,000
或者是漏洞

2355
01:21:52,000 --> 01:21:54,000
使得他可能

2356
01:21:56,000 --> 01:21:58,000
造成共享的内存区域泄漏

2357
01:21:58,000 --> 01:21:59,000
然后这样的话

2358
01:21:59,000 --> 01:22:02,000
一个现成的 bug 会波及到其他现成

2359
01:22:03,000 --> 01:22:05,000
但是如果你不为了

2360
01:22:06,000 --> 01:22:08,000
性能或者是方便的考虑

2361
01:22:08,000 --> 01:22:11,000
而采用多进程的模型的话

2362
01:22:11,000 --> 01:22:12,000
进程与进程之间的通信

2363
01:22:12,000 --> 01:22:14,000
是一个明确接口的

2364
01:22:14,000 --> 01:22:16,000
然后他进程之间

2365
01:22:17,000 --> 01:22:19,000
除非你做特殊的操作

2366
01:22:19,000 --> 01:22:20,000
不然你是没有办法共享内存的

2367
01:22:21,000 --> 01:22:24,000
所以一个进程的被 compromise

2368
01:22:24,000 --> 01:22:26,000
是不会影响到

2369
01:22:26,000 --> 01:22:27,000
另外一个进程的安全性的

2370
01:22:28,000 --> 01:22:28,000
对

2371
01:22:28,000 --> 01:22:29,000
对

2372
01:22:29,000 --> 01:22:33,000
这就是为什么沙盒模型

2373
01:22:33,000 --> 01:22:35,000
然后进程隔离能够

2374
01:22:36,000 --> 01:22:40,000
使得一些比较失败的程序

2375
01:22:40,000 --> 01:22:42,000
所产生的一些灾难性的后果

2376
01:22:42,000 --> 01:22:44,000
不会扩展到其他

2377
01:22:45,000 --> 01:22:46,000
运行的程序上面的原因

2378
01:22:48,000 --> 01:22:50,000
他在文章中举的倒是一个例子

2379
01:22:50,000 --> 01:22:51,000
我觉得挺有意思

2380
01:22:51,000 --> 01:22:53,000
就是说可以用一个解释器的方法

2381
01:22:53,000 --> 01:22:58,000
去实现一个简单的限制性的环境

2382
01:22:58,000 --> 01:22:59,000
去做一些基础的处理

2383
01:23:00,000 --> 01:23:02,000
而不是说你直接用比如说用 C 语言

2384
01:23:02,000 --> 01:23:07,000
写一个邮件地址的解析器

2385
01:23:07,000 --> 01:23:08,000
因为这样的话你很容易

2386
01:23:08,000 --> 01:23:09,000
因为 C 是这种就是什么

2387
01:23:10,000 --> 01:23:12,000
内存不安全的语言

2388
01:23:12,000 --> 01:23:14,000
很容易轰掉脚的语言

2389
01:23:14,000 --> 01:23:15,000
对很容易

2390
01:23:15,000 --> 01:23:20,000
叫做 shoot yourself in the foot

2391
01:23:20,000 --> 01:23:23,000
就是拿把枪把自己脚也打一枪

2392
01:23:23,000 --> 01:23:23,000
对

2393
01:23:24,000 --> 01:23:26,000
因为有内存越界

2394
01:23:26,000 --> 01:23:28,000
找知各种那样的问题

2395
01:23:28,000 --> 01:23:30,000
是使得你可能会出现错误

2396
01:23:30,000 --> 01:23:33,000
但是如果你写一个简单的解释器

2397
01:23:34,000 --> 01:23:37,000
就一个很简单的虚拟的

2398
01:23:37,000 --> 01:23:41,000
迷你语言去做地质解析的话

2399
01:23:41,000 --> 01:23:42,000
可能会好一些对吧

2400
01:23:42,000 --> 01:23:43,000
但是这样很多人会觉得

2401
01:23:43,000 --> 01:23:46,000
这完全是什么杀鸡用牛刀

2402
01:23:46,000 --> 01:23:47,000
何必呢

2403
01:23:47,000 --> 01:23:47,000
对吧

2404
01:23:47,000 --> 01:23:48,000
没错

2405
01:23:48,000 --> 01:23:51,000
所以为了性能或者实现效率来讲

2406
01:23:52,000 --> 01:23:55,000
就采取了一些没有那么安全的方法

2407
01:23:56,000 --> 01:23:58,000
反正这篇论文是非常具有研究价值的

2408
01:23:58,000 --> 01:24:00,000
我觉得如果任何一个

2409
01:24:00,000 --> 01:24:02,000
因为这件事情

2410
01:24:02,000 --> 01:24:04,000
或者是因为之前

2411
01:24:04,000 --> 01:24:07,000
乃至将以后将会发生的其他事情

2412
01:24:08,000 --> 01:24:10,000
想要让自己写的东西比较安全的

2413
01:24:10,000 --> 01:24:11,000
朋友的话

2414
01:24:11,000 --> 01:24:13,000
一定要读一读这篇文章

2415
01:24:14,000 --> 01:24:15,000
其实他这篇文章

2416
01:24:15,000 --> 01:24:16,000
我觉得他最有价值的是

2417
01:24:16,000 --> 01:24:20,000
那个叫做第四部分和第五部分

2418
01:24:20,000 --> 01:24:22,000
第四部分叫做

2419
01:24:22,000 --> 01:24:25,000
就如何减少代码量

2420
01:24:25,000 --> 01:24:26,000
这个是我最喜欢干的事

2421
01:24:26,000 --> 01:24:29,000
因为我总觉得现在我们很多人写

2422
01:24:29,000 --> 01:24:32,000
这个代码的习惯就是

2423
01:24:33,000 --> 01:24:34,000
越多越好

2424
01:24:34,000 --> 01:24:36,000
他其实有一个概念

2425
01:24:36,000 --> 01:24:36,000
我觉得非常

2426
01:24:36,000 --> 01:24:38,000
当然这不是他自己原创的

2427
01:24:38,000 --> 01:24:40,000
是那个 Dexter 说的

2428
01:24:40,000 --> 01:24:41,000
就是说

2429
01:24:42,000 --> 01:24:43,000
叫什么

2430
01:24:43,000 --> 01:24:45,000
愚蠢的软件经理

2431
01:24:45,000 --> 01:24:49,000
通常用程序员的生产效率去衡量一个

2432
01:24:49,000 --> 01:24:50,000
一个程序员的

2433
01:24:50,000 --> 01:24:52,000
通常用这个

2434
01:24:52,000 --> 01:24:53,000
代码量去衡量

2435
01:24:53,000 --> 01:24:54,000
专写的代码行数

2436
01:24:54,000 --> 01:24:55,000
对

2437
01:24:55,000 --> 01:24:56,000
用一个代码

2438
01:24:56,000 --> 01:24:57,000
对

2439
01:24:57,000 --> 01:24:58,000
再说一遍

2440
01:24:58,000 --> 01:25:01,000
就是一个愚蠢的软件的经理

2441
01:25:01,000 --> 01:25:03,000
又或者是这个产品项目经理会用

2442
01:25:03,000 --> 01:25:05,000
代码行数

2443
01:25:05,000 --> 01:25:07,000
去衡量一个程序员的生产力

2444
01:25:07,000 --> 01:25:08,000
也就是说

2445
01:25:08,000 --> 01:25:09,000
潜在的含义

2446
01:25:09,000 --> 01:25:10,000
就是说代码写的越多

2447
01:25:10,000 --> 01:25:12,000
这个程序员越高效

2448
01:25:12,000 --> 01:25:14,000
或者说越高产对吧

2449
01:25:14,000 --> 01:25:15,000
对

2450
01:25:15,000 --> 01:25:16,000
因为高产肯定是产出的

2451
01:25:17,000 --> 01:25:18,000
但其实上

2452
01:25:18,000 --> 01:25:19,000
这个概念是完全错误的

2453
01:25:19,000 --> 01:25:20,000
应该是用

2454
01:25:20,000 --> 01:25:23,000
消耗的代码量去衡量一个代码

2455
01:25:23,000 --> 01:25:24,000
这个程序员的

2456
01:25:25,000 --> 01:25:26,000
生产力

2457
01:25:26,000 --> 01:25:27,000
就是说

2458
01:25:28,000 --> 01:25:29,000
为了实现同样的功能

2459
01:25:29,000 --> 01:25:30,000
或者同样的 specification

2460
01:25:31,000 --> 01:25:33,000
一个程序员用的代码量越少

2461
01:25:33,000 --> 01:25:34,000
才应该是越好的

2462
01:25:35,000 --> 01:25:36,000
但这句话也不太对

2463
01:25:37,000 --> 01:25:38,000
因为毕竟还是要考虑的这种

2464
01:25:38,000 --> 01:25:39,000
这个什么

2465
01:25:39,000 --> 01:25:40,000
可维护性

2466
01:25:40,000 --> 01:25:41,000
易读性

2467
01:25:41,000 --> 01:25:42,000
怎么怎么样对吧

2468
01:25:42,000 --> 01:25:43,000
这个深究的

2469
01:25:43,000 --> 01:25:44,000
我觉得这个是

2470
01:25:44,000 --> 01:25:45,000
但前面他提出这个概念

2471
01:25:45,000 --> 01:25:48,000
就是编写的代码量和消耗的代码量

2472
01:25:48,000 --> 01:25:50,000
是两个完全不同的

2473
01:25:51,000 --> 01:25:52,000
思路去看这个问题

2474
01:25:53,000 --> 01:25:54,000
没错

2475
01:25:54,000 --> 01:25:54,000
对

2476
01:25:54,000 --> 01:25:56,000
所以当第四节里面这篇

2477
01:25:56,000 --> 01:25:58,000
内容讲的一个很好的一个

2478
01:25:58,000 --> 01:25:59,000
几个点

2479
01:25:59,000 --> 01:26:00,000
就说我们说

2480
01:26:01,000 --> 01:26:02,000
消减代码的量

2481
01:26:02,000 --> 01:26:02,000
第一个就是说

2482
01:26:04,000 --> 01:26:06,000
把重复的部分

2483
01:26:06,000 --> 01:26:08,000
做成一个通用的函数了

2484
01:26:08,000 --> 01:26:10,000
哪怕它再小再 trivial

2485
01:26:10,000 --> 01:26:11,000
对吧

2486
01:26:11,000 --> 01:26:13,000
你那用的重复次数过多

2487
01:26:13,000 --> 01:26:15,000
够多的话也是值得的

2488
01:26:15,000 --> 01:26:17,000
当然这东西也是有一定的副作用的

2489
01:26:17,000 --> 01:26:19,000
就是说在一些这种

2490
01:26:19,000 --> 01:26:21,000
比较愚蠢的语言里面

2491
01:26:21,000 --> 01:26:22,000
你调用的函数过多

2492
01:26:22,000 --> 01:26:23,000
其实是会影响你的性能的

2493
01:26:23,000 --> 01:26:24,000
对吧

2494
01:26:24,000 --> 01:26:26,000
它不会帮你去应赖这些东西

2495
01:26:26,000 --> 01:26:28,000
当然这个就跟刚才提到的

2496
01:26:28,000 --> 01:26:30,000
为了为了为了这种微不足道的性能

2497
01:26:30,000 --> 01:26:31,000
去牺牲了

2498
01:26:32,000 --> 01:26:34,000
其他东西是点了

2499
01:26:35,000 --> 01:26:36,000
芝麻丢了西瓜

2500
01:26:36,000 --> 01:26:36,000
对

2501
01:26:36,000 --> 01:26:37,000
没错

2502
01:26:37,000 --> 01:26:40,000
然后 4.2 他提到了一个就是说

2503
01:26:41,000 --> 01:26:43,000
如何去处理临时错误

2504
01:26:43,000 --> 01:26:44,000
这个是非常重要的

2505
01:26:44,000 --> 01:26:46,000
其实所有的程序里面

2506
01:26:46,000 --> 01:26:48,000
最麻烦的就是错误处理

2507
01:26:48,000 --> 01:26:50,000
而是说很多人会能很多人

2508
01:26:50,000 --> 01:26:52,000
但这个回到我们之前说的

2509
01:26:53,000 --> 01:26:54,000
exception 机制的问题

2510
01:26:55,000 --> 01:26:57,000
这好像我们第一期的那种

2511
01:26:57,000 --> 01:26:57,000
对

2512
01:26:57,000 --> 01:26:59,000
exception 机制是假设

2513
01:26:59,000 --> 01:27:02,000
程序的正常模细是一个

2514
01:27:03,000 --> 01:27:04,000
正常运行的

2515
01:27:04,000 --> 01:27:06,000
然后错误是或者说

2516
01:27:07,000 --> 01:27:08,000
异常是需要特别处理的

2517
01:27:08,000 --> 01:27:10,000
但是其实应该是反过来的

2518
01:27:10,000 --> 01:27:11,000
我觉得就是说

2519
01:27:11,000 --> 01:27:13,000
你默认这个程序是跑不了的

2520
01:27:13,000 --> 01:27:13,000
对

2521
01:27:13,000 --> 01:27:15,000
默认程序是会出各种各样的问题的

2522
01:27:15,000 --> 01:27:17,000
你只能一步一步去处理的问题

2523
01:27:17,000 --> 01:27:19,000
然后当你把所有的

2524
01:27:19,000 --> 01:27:21,000
可能出错的都覆盖到了

2525
01:27:21,000 --> 01:27:23,000
你这个程序才是安全无错的

2526
01:27:23,000 --> 01:27:23,000
对吧

2527
01:27:23,000 --> 01:27:26,000
所以为什么要用 exception 机制

2528
01:27:26,000 --> 01:27:27,000
从本质上来说

2529
01:27:27,000 --> 01:27:28,000
是一个非常靠谱

2530
01:27:28,000 --> 01:27:30,000
安全的一个方法

2531
01:27:31,000 --> 01:27:32,000
听到这里

2532
01:27:32,000 --> 01:27:34,000
go 程序员和 C 程序员

2533
01:27:34,000 --> 01:27:36,000
一定会觉得非常有理

2534
01:27:36,000 --> 01:27:38,000
然后其他所有程序员都觉得

2535
01:27:38,000 --> 01:27:40,000
我靠是在说什么邪教

2536
01:27:43,000 --> 01:27:43,000
我也不知道

2537
01:27:43,000 --> 01:27:45,000
我觉得有时候你使用的

2538
01:27:45,000 --> 01:27:47,000
这种语言的错误处理机制

2539
01:27:47,000 --> 01:27:50,000
会让你产生某种特定的性格

2540
01:27:50,000 --> 01:27:51,000
就是

2541
01:27:51,000 --> 01:27:54,000
我觉得写 C 的人一般都会比较

2542
01:27:55,000 --> 01:27:56,000
悲观

2543
01:27:56,000 --> 01:27:59,000
觉得这个东西是很有可能失败的

2544
01:27:59,000 --> 01:28:01,000
就是不管干什么都会说

2545
01:28:01,000 --> 01:28:03,000
这个玩意错了怎么办

2546
01:28:03,000 --> 01:28:03,000
错了怎么办

2547
01:28:03,000 --> 01:28:04,000
错了怎么办

2548
01:28:04,000 --> 01:28:04,000
对

2549
01:28:05,000 --> 01:28:07,000
然后写 java 的可能就不会想那么多

2550
01:28:07,000 --> 01:28:08,000
总是会假设说

2551
01:28:08,000 --> 01:28:10,000
这个世界会完美运行

2552
01:28:10,000 --> 01:28:11,000
出了错的再去想

2553
01:28:11,000 --> 01:28:12,000
应该怎么办

2554
01:28:13,000 --> 01:28:14,000
anyway

2555
01:28:14,000 --> 01:28:16,000
就 4.3 节他讲了另外一个

2556
01:28:16,000 --> 01:28:17,000
我觉得挺重要的事

2557
01:28:17,000 --> 01:28:19,000
就是还是叫做重用网络工具

2558
01:28:20,000 --> 01:28:22,000
但这里举的一个例子

2559
01:28:22,000 --> 01:28:24,000
其实我一直很想吐槽的

2560
01:28:24,000 --> 01:28:25,000
对还有一个另外相关的事情

2561
01:28:25,000 --> 01:28:26,000
我们可以自己聊一聊

2562
01:28:27,000 --> 01:28:28,000
他聊到一个例子

2563
01:28:28,000 --> 01:28:29,000
就是 unix 系统里面

2564
01:28:29,000 --> 01:28:30,000
以前有一个很通用的工具

2565
01:28:30,000 --> 01:28:32,000
叫做 inetd

2566
01:28:33,000 --> 01:28:34,000
inetdemon

2567
01:28:35,000 --> 01:28:35,000
这个 demon 有什么用呢

2568
01:28:35,000 --> 01:28:37,000
就是它的作用简单

2569
01:28:37,000 --> 01:28:38,000
它会去

2570
01:28:39,000 --> 01:28:41,000
监听一个端口

2571
01:28:41,000 --> 01:28:42,000
或者有几个端口

2572
01:28:42,000 --> 01:28:44,000
然后去接受连接

2573
01:28:44,000 --> 01:28:45,000
然后一旦他接受

2574
01:28:45,000 --> 01:28:46,000
指定端口

2575
01:28:46,000 --> 01:28:47,000
有没有个指定连接

2576
01:28:47,000 --> 01:28:50,000
它会启动一个进程

2577
01:28:50,000 --> 01:28:51,000
然后把进程的输入

2578
01:28:51,000 --> 01:28:53,000
套到连接上

2579
01:28:53,000 --> 01:28:55,000
然后输出套到连接的

2580
01:28:55,000 --> 01:28:56,000
你看就是有输出

2581
01:28:56,000 --> 01:28:56,000
对吧

2582
01:28:57,000 --> 01:28:57,000
对

2583
01:28:57,000 --> 01:28:59,000
它把跟程序的输出对接起来

2584
01:28:59,000 --> 01:29:00,000
这样的话

2585
01:29:01,000 --> 01:29:03,000
其实这个程序本身

2586
01:29:03,000 --> 01:29:04,000
就不用考虑

2587
01:29:04,000 --> 01:29:07,000
它的输出是从哪里来的

2588
01:29:07,000 --> 01:29:08,000
它只用考虑去处理

2589
01:29:08,000 --> 01:29:10,000
这个输出就好了

2590
01:29:10,000 --> 01:29:11,000
就其他网络的事情也好

2591
01:29:11,000 --> 01:29:12,000
还是说从一个管道过来

2592
01:29:12,000 --> 01:29:15,000
对这个程序来说是透明的

2593
01:29:15,000 --> 01:29:17,000
这样它就可以重用

2594
01:29:17,000 --> 01:29:18,000
inetd

2595
01:29:18,000 --> 01:29:20,000
里面已经实现过的那些网络的

2596
01:29:20,000 --> 01:29:21,000
机制了

2597
01:29:21,000 --> 01:29:21,000
对吧

2598
01:29:22,000 --> 01:29:23,000
当然他也说了一下

2599
01:29:23,000 --> 01:29:24,000
原因为什么其他的一些程序

2600
01:29:24,000 --> 01:29:26,000
不能直接使用这个方法

2601
01:29:27,000 --> 01:29:29,000
但是其实仔细看来

2602
01:29:29,000 --> 01:29:31,000
就是可以通过某些方法去

2603
01:29:32,000 --> 01:29:33,000
去就从架构上的改进

2604
01:29:33,000 --> 01:29:35,000
是可以重用这一点的

2605
01:29:35,000 --> 01:29:36,000
就想到我在当然

2606
01:29:36,000 --> 01:29:37,000
这个 inetd 现在用的也不是

2607
01:29:37,000 --> 01:29:38,000
特别多好

2608
01:29:38,000 --> 01:29:40,000
我想说的是另外一件事

2609
01:29:40,000 --> 01:29:42,000
就是现在不是有什么 systemd

2610
01:29:42,000 --> 01:29:44,000
之前在无邦图里面用的比较多的

2611
01:29:44,000 --> 01:29:46,000
那个叫 upstart

2612
01:29:47,000 --> 01:29:50,000
他们本身有一个功能叫做

2613
01:29:50,000 --> 01:29:51,000
就是 demonization 这件事情

2614
01:29:51,000 --> 01:29:53,000
其实是一个非常诡异的事情

2615
01:29:53,000 --> 01:29:55,000
就是你要让一个程序成为一个守护进程

2616
01:29:56,000 --> 01:29:57,000
在 unix 系统里面

2617
01:29:57,000 --> 01:29:58,000
你要做很多事情

2618
01:29:58,000 --> 01:29:58,000
对吧

2619
01:29:58,000 --> 01:29:59,000
你要把它输出

2620
01:29:59,000 --> 01:30:00,000
跟它去调好

2621
01:30:00,000 --> 01:30:01,000
那个

2622
01:30:01,000 --> 01:30:02,000
谁找本

2623
01:30:02,000 --> 01:30:03,000
谁打对找本

2624
01:30:03,000 --> 01:30:04,000
你还得 double fork

2625
01:30:04,000 --> 01:30:04,000
对吧

2626
01:30:04,000 --> 01:30:05,000
防止这样

2627
01:30:05,000 --> 01:30:07,000
因为要存 pie

2628
01:30:07,000 --> 01:30:09,000
被收割掉什么之类的事情

2629
01:30:09,000 --> 01:30:11,000
然后也是因为这个

2630
01:30:11,000 --> 01:30:13,000
所以 djp 才写了 demon tool

2631
01:30:13,000 --> 01:30:15,000
这套工具去完成这个事情

2632
01:30:15,000 --> 01:30:15,000
对吧

2633
01:30:16,000 --> 01:30:18,000
但其实这个事情是完全没有必要去做的

2634
01:30:18,000 --> 01:30:20,000
因为在现代的操作系统里面

2635
01:30:20,000 --> 01:30:21,000
基本上都有这种自带的工具

2636
01:30:21,000 --> 01:30:26,000
去帮你做进程的监控和管理

2637
01:30:26,000 --> 01:30:28,000
使得你根本其实不需要写一个

2638
01:30:28,000 --> 01:30:31,000
传统意义上的 demon 进程

2639
01:30:31,000 --> 01:30:32,000
就是守护进程

2640
01:30:32,000 --> 01:30:33,000
就不需要注流后台

2641
01:30:33,000 --> 01:30:35,000
你只要那个程序注流前台就可以了

2642
01:30:35,000 --> 01:30:38,000
然后前台的程序会被像 systemd

2643
01:30:39,000 --> 01:30:40,000
还是 app start

2644
01:30:40,000 --> 01:30:44,000
这种管理工具去管理

2645
01:30:44,000 --> 01:30:48,000
使得它能够实现 demon 进程同样的功能

2646
01:30:48,000 --> 01:30:49,000
甚至更好的实现这个功能

2647
01:30:49,000 --> 01:30:52,000
所以应该把这个东西交出去

2648
01:30:52,000 --> 01:30:54,000
让更专业更专注的工具来完成这个事儿

2649
01:30:54,000 --> 01:30:57,000
而不是说所有人写一个

2650
01:30:58,000 --> 01:30:59,000
那种 server 的时候

2651
01:30:59,000 --> 01:31:01,000
都需要去做一个 double fork

2652
01:31:01,000 --> 01:31:02,000
就变成 demon 这种形式

2653
01:31:03,000 --> 01:31:03,000
对

2654
01:31:04,000 --> 01:31:05,000
这个主要吐槽的一个事情

2655
01:31:06,000 --> 01:31:07,000
然后 4.4 节讲了

2656
01:31:07,000 --> 01:31:09,000
另外一个可以重新的部分叫 access control

2657
01:31:09,000 --> 01:31:11,000
就是访问控制

2658
01:31:11,000 --> 01:31:13,000
就在一般的 unix 系统里面

2659
01:31:13,000 --> 01:31:15,000
文件的权限

2660
01:31:15,000 --> 01:31:16,000
权系统是一个比较

2661
01:31:16,000 --> 01:31:19,000
简单和常用的访问控制的基础

2662
01:31:19,000 --> 01:31:21,000
当然也有很多人说

2663
01:31:21,000 --> 01:31:25,000
一个简单的用户组和其他这种分类的

2664
01:31:25,000 --> 01:31:28,000
方法并不能解决所有的问题

2665
01:31:28,000 --> 01:31:29,000
所以后来又叫做 accel

2666
01:31:30,000 --> 01:31:31,000
access control list

2667
01:31:31,000 --> 01:31:32,000
这种更高级的方式来做

2668
01:31:32,000 --> 01:31:34,000
但是 access control list

2669
01:31:34,000 --> 01:31:35,000
其实现在在 windows 里面

2670
01:31:35,000 --> 01:31:40,000
在 unix 里面已经不比 windows 里面少了

2671
01:31:40,000 --> 01:31:40,000
对

2672
01:31:40,000 --> 01:31:42,000
比如说 OS X 就是用的这个

2673
01:31:42,000 --> 01:31:43,000
对

2674
01:31:43,000 --> 01:31:44,000
但 anyway

2675
01:31:44,000 --> 01:31:46,000
这个是具体实现的问题

2676
01:31:46,000 --> 01:31:48,000
就是说这个要点是说

2677
01:31:48,000 --> 01:31:51,000
如果系统已经有一个 access control 的工具了

2678
01:31:51,000 --> 01:31:53,000
不管是文件系统的权限也好

2679
01:31:53,000 --> 01:31:54,000
还是 accel 也好

2680
01:31:54,000 --> 01:31:56,000
所以我们应该尽可能去重用它

2681
01:31:57,000 --> 01:32:00,000
因为没有编写的代码是最少的代码

2682
01:32:00,000 --> 01:32:02,000
因为如果一个代码量是 0 的话

2683
01:32:02,000 --> 01:32:04,000
它的 bug 量肯定是 0 的

2684
01:32:04,000 --> 01:32:05,000
对吧

2685
01:32:05,000 --> 01:32:06,000
所以怎么去重用它

2686
01:32:06,000 --> 01:32:07,000
就是一个非常要紧的事情

2687
01:32:08,000 --> 01:32:11,000
很多人就愿意去重新发明轮子

2688
01:32:11,000 --> 01:32:13,000
要自己搞一套自己的用户账号

2689
01:32:13,000 --> 01:32:14,000
或者权限系统

2690
01:32:14,000 --> 01:32:17,000
但其实往往是适得其反的

2691
01:32:18,000 --> 01:32:18,000
对

2692
01:32:19,000 --> 01:32:21,000
然后 4.5 到另外一个重用就是文件系统

2693
01:32:22,000 --> 01:32:25,000
很多人说我要自己写一个自己的 storage layer

2694
01:32:25,000 --> 01:32:27,000
就是存储层怎么地

2695
01:32:27,000 --> 01:32:28,000
要做什么事

2696
01:32:28,000 --> 01:32:30,000
但其实现代的文件系统

2697
01:32:30,000 --> 01:32:31,000
是可以做非常丰富很多的事

2698
01:32:31,000 --> 01:32:34,000
就完成一些基本的存储功能

2699
01:32:34,000 --> 01:32:35,000
都是没有问题的

2700
01:32:35,000 --> 01:32:42,000
没有必要在特别早期或者没有那么明确

2701
01:32:42,000 --> 01:32:45,000
性能平静的时候去开发自己的文件

2702
01:32:45,000 --> 01:32:46,000
存储的系统

2703
01:32:46,000 --> 01:32:46,000
对吧

2704
01:32:47,000 --> 01:32:47,000
对

2705
01:32:48,000 --> 01:32:51,000
所以总体来说 4.4 的一个核心要求

2706
01:32:51,000 --> 01:32:53,000
就是如何降低代码

2707
01:32:53,000 --> 01:32:54,000
刚才讲的那个就是重用

2708
01:32:54,000 --> 01:32:57,000
简单说重用代码或重用功能

2709
01:32:58,000 --> 01:33:02,000
比如说用函数去写通用的功能

2710
01:33:02,000 --> 01:33:04,000
然后重用网络工具

2711
01:33:04,000 --> 01:33:06,000
重用防污权限控制

2712
01:33:06,000 --> 01:33:07,000
重用文件系统

2713
01:33:07,000 --> 01:33:08,000
对吧

2714
01:33:08,000 --> 01:33:08,000
这都是一些比较

2715
01:33:08,000 --> 01:33:10,000
基本上都是在教你怎么样

2716
01:33:10,000 --> 01:33:12,000
不要去重新发明文件

2717
01:33:12,000 --> 01:33:13,000
没错

2718
01:33:14,000 --> 01:33:16,000
然后第 5 节其实还是挺有意思的

2719
01:33:16,000 --> 01:33:17,000
就刚才讲的我们讲的

2720
01:33:17,000 --> 01:33:20,000
那个叫做如何去减少 trusted code

2721
01:33:20,000 --> 01:33:22,000
受信任代码的部分

2722
01:33:22,000 --> 01:33:25,000
这当然就是从一个架构的方法来做了

2723
01:33:25,000 --> 01:33:27,000
但这里又细节比较多

2724
01:33:27,000 --> 01:33:29,000
我们不就一一过了

2725
01:33:29,000 --> 01:33:29,000
有兴趣的朋友

2726
01:33:29,000 --> 01:33:32,000
可以去看一下里面的细节

2727
01:33:32,000 --> 01:33:33,000
因为这篇文章

2728
01:33:33,000 --> 01:33:35,000
总体来说还是不难懂的

2729
01:33:35,000 --> 01:33:37,000
然后只要具备一些基础的

2730
01:33:37,000 --> 01:33:38,000
unix 相关的知识

2731
01:33:38,000 --> 01:33:40,000
就是能够看个 80%

2732
01:33:40,000 --> 01:33:40,000
80% 90%的

2733
01:33:42,000 --> 01:33:44,000
然后我相信看了这篇文章以后

2734
01:33:44,000 --> 01:33:47,000
对你以后编写程序也好

2735
01:33:47,000 --> 01:33:48,000
做系统架构也好

2736
01:33:48,000 --> 01:33:50,000
会有一个非常大的改观

2737
01:33:51,000 --> 01:33:51,000
对

2738
01:33:53,000 --> 01:33:57,000
另外我觉得也可以从软件用户的角度来讲

2739
01:33:57,000 --> 01:34:00,000
来谈一谈怎么样才能避免再

2740
01:34:00,000 --> 01:34:03,000
中类似于 xcode ghost 这样一种

2741
01:34:04,000 --> 01:34:07,000
陷入这种窘境里面

2742
01:34:09,000 --> 01:34:10,000
我觉得最重要的一点就是

2743
01:34:10,000 --> 01:34:11,000
远离国家人间

2744
01:34:12,000 --> 01:34:15,000
或者远离国内的互联网环境

2745
01:34:15,000 --> 01:34:18,000
你说这件事情中招的人

2746
01:34:19,000 --> 01:34:21,000
最大的一个问题不都是

2747
01:34:21,000 --> 01:34:23,000
贪图省事吗

2748
01:34:24,000 --> 01:34:27,000
当然一方面也跟

2749
01:34:27,000 --> 01:34:30,000
强的存在不可分离

2750
01:34:31,000 --> 01:34:33,000
在网速非常慢的情况下

2751
01:34:33,000 --> 01:34:35,000
你要连美国的一个服务器下载东西

2752
01:34:35,000 --> 01:34:37,000
的确是很痛苦这件事情

2753
01:34:37,000 --> 01:34:38,000
我记得在

2754
01:34:39,000 --> 01:34:41,000
好像不是升级 xcode

2755
01:34:41,000 --> 01:34:43,000
而是在升级新的

2756
01:34:45,000 --> 01:34:48,000
在下载一个新的 iOS 10 升级包的时候

2757
01:34:49,000 --> 01:34:52,000
两个退友同时给出了

2758
01:34:52,000 --> 01:34:54,000
下载升级包的截图

2759
01:34:54,000 --> 01:34:55,000
一在国内一在国外

2760
01:34:55,000 --> 01:34:57,000
然后在国内还有 4 个小时

2761
01:34:57,000 --> 01:34:59,000
然后在国外

2762
01:34:59,000 --> 01:35:01,000
还有两分钟

2763
01:35:02,000 --> 01:35:04,000
其实这个我觉得反而是苹果的责任

2764
01:35:05,000 --> 01:35:06,000
就是说

2765
01:35:06,000 --> 01:35:08,000
因为它毕竟是要在中国市场

2766
01:35:08,000 --> 01:35:11,000
长期存在的一间公司

2767
01:35:12,000 --> 01:35:14,000
它为什么不在中国市场多

2768
01:35:14,000 --> 01:35:16,000
在中国搞个 CDN 是吧

2769
01:35:16,000 --> 01:35:17,000
它是有 CDN 的

2770
01:35:17,000 --> 01:35:19,000
我的好奇在于

2771
01:35:19,000 --> 01:35:22,000
为什么在有 CDN 的情况下还这么慢

2772
01:35:22,000 --> 01:35:26,000
这个是我觉得是不能够接受的

2773
01:35:26,000 --> 01:35:28,000
这难道不是 CDN 的责任吗

2774
01:35:29,000 --> 01:35:30,000
这个是 CDN 的责任没错

2775
01:35:30,000 --> 01:35:32,000
但是这个 CDN 是苹果买的

2776
01:35:32,000 --> 01:35:35,000
或者它去花钱找的

2777
01:35:35,000 --> 01:35:36,000
当然你可以说

2778
01:35:38,000 --> 01:35:39,000
中国的网络就是不如美国

2779
01:35:39,000 --> 01:35:41,000
中国网络环境的确是非常复杂的

2780
01:35:41,000 --> 01:35:43,000
你说中国的网络

2781
01:35:43,000 --> 01:35:45,000
投放做的好的厂家

2782
01:35:45,000 --> 01:35:48,000
其实也只有那几家真正的巨头能做好

2783
01:35:49,000 --> 01:35:50,000
但是就是找那些合作

2784
01:35:50,000 --> 01:35:52,000
这个有什么关系呢

2785
01:35:52,000 --> 01:35:53,000
对吧

2786
01:35:53,000 --> 01:35:54,000
我觉得是苹果的责任

2787
01:35:54,000 --> 01:35:56,000
它应该把这件事情做好的

2788
01:35:56,000 --> 01:35:57,000
但是它并没有做好

2789
01:35:59,000 --> 01:36:01,000
我们就不去吐槽阵阵

2790
01:36:01,000 --> 01:36:02,000
我们毕竟是一个技术性的节目

2791
01:36:03,000 --> 01:36:05,000
其实有一件事我觉得还可以探讨一下

2792
01:36:05,000 --> 01:36:06,000
就是说

2793
01:36:06,000 --> 01:36:07,000
刚才我们讲了一些

2794
01:36:08,000 --> 01:36:11,000
常见的一些技术手段去解决这个问题

2795
01:36:11,000 --> 01:36:15,000
但是其实有一个细节是在今年早些时候

2796
01:36:15,000 --> 01:36:18,000
我在勾烂的语言中里面问过了个问题

2797
01:36:18,000 --> 01:36:20,000
就是说我问你这个意思

2798
01:36:21,000 --> 01:36:24,000
给定你同一个编译器

2799
01:36:24,000 --> 01:36:26,000
就是这个 Band-Aid 是一样的

2800
01:36:26,000 --> 01:36:30,000
然后给定你同一套这个语言代码

2801
01:36:31,000 --> 01:36:32,000
你能否保证

2802
01:36:33,000 --> 01:36:37,000
在不同的机器上去执行同样的编译器

2803
01:36:37,000 --> 01:36:41,000
编译同样的代码得出来的结果

2804
01:36:41,000 --> 01:36:44,000
是叫做 Bite to byte identical

2805
01:36:44,000 --> 01:36:46,000
就是每一个字节都是相同的

2806
01:36:47,000 --> 01:36:49,000
我叫做 deterministic build

2807
01:36:49,000 --> 01:36:51,000
就是可预测的 build

2808
01:36:52,000 --> 01:36:53,000
这跟编译器的 Positive 有关吗

2809
01:36:53,000 --> 01:36:56,000
有些编译器是不可能给出这样

2810
01:36:56,000 --> 01:36:57,000
哪怕你在同一台机器上

2811
01:36:57,000 --> 01:37:00,000
只相差一微秒去编译

2812
01:37:00,000 --> 01:37:01,000
它也不一样

2813
01:37:01,000 --> 01:37:03,000
就它会打个 Stamp Slam 在里面

2814
01:37:03,000 --> 01:37:05,000
对这就是问题所在了

2815
01:37:05,000 --> 01:37:05,000
其实说

2816
01:37:05,000 --> 01:37:07,000
因为首先说我先说一下

2817
01:37:07,000 --> 01:37:09,000
为什么我觉得这个是一个

2818
01:37:09,000 --> 01:37:12,000
就 deterministic build 是一个非常好的特性

2819
01:37:12,000 --> 01:37:15,000
因为我们可以很负责

2820
01:37:15,000 --> 01:37:16,000
就是 reproducible

2821
01:37:16,000 --> 01:37:18,000
就是我可以重现这件事情

2822
01:37:18,000 --> 01:37:20,000
因为我说

2823
01:37:21,000 --> 01:37:23,000
如果我的同一套原代码

2824
01:37:23,000 --> 01:37:25,000
就是原代码本身可以用 Git

2825
01:37:25,000 --> 01:37:27,000
就刚才我讲的那个 Hash 的方式

2826
01:37:27,000 --> 01:37:28,000
去验证它的等同性

2827
01:37:29,000 --> 01:37:29,000
对吧

2828
01:37:29,000 --> 01:37:30,000
对

2829
01:37:30,000 --> 01:37:31,000
但是我并不知道

2830
01:37:32,000 --> 01:37:34,000
如果我每次同一套原代码

2831
01:37:34,000 --> 01:37:35,000
同一个编译器编出来的结果

2832
01:37:35,000 --> 01:37:37,000
都是不可

2833
01:37:37,000 --> 01:37:38,000
都不一样的话

2834
01:37:38,000 --> 01:37:40,000
我是没有办法建立

2835
01:37:40,000 --> 01:37:42,000
原代码和编译器

2836
01:37:42,000 --> 01:37:44,000
结果之间的一个意识的关系的

2837
01:37:45,000 --> 01:37:46,000
你才有很多其他编量是不在

2838
01:37:48,000 --> 01:37:50,000
函数的描述中的

2839
01:37:50,000 --> 01:37:50,000
对吧

2840
01:37:51,000 --> 01:37:52,000
所以说

2841
01:37:53,000 --> 01:37:56,000
后来我就去做了一个

2842
01:37:56,000 --> 01:37:57,000
很不

2843
01:37:57,000 --> 01:37:59,000
全面很多靠谱的小调查

2844
01:37:59,000 --> 01:38:02,000
其实大部分的编译与研划人工具

2845
01:38:02,000 --> 01:38:03,000
都不能做到这一点

2846
01:38:03,000 --> 01:38:04,000
但原因

2847
01:38:04,000 --> 01:38:04,000
对

2848
01:38:04,000 --> 01:38:07,000
因为你要实现你的说

2849
01:38:08,000 --> 01:38:11,000
deterministic compiling 的功能的话

2850
01:38:11,000 --> 01:38:13,000
那你需要

2851
01:38:13,000 --> 01:38:15,000
任何一个 compiler 的设计者

2852
01:38:15,000 --> 01:38:17,000
都需要在设计的初期

2853
01:38:17,000 --> 01:38:21,000
把它当做一个 fundamental 的 goal

2854
01:38:21,000 --> 01:38:24,000
就是编辑器的设计目标来做

2855
01:38:24,000 --> 01:38:25,000
才可以

2856
01:38:26,000 --> 01:38:29,000
在最终编辑器的结果上实现这个

2857
01:38:29,000 --> 01:38:32,000
因为我觉得实现这个目的

2858
01:38:33,000 --> 01:38:34,000
有一个很明确的要求

2859
01:38:34,000 --> 01:38:38,000
就是要明确的区分哪些是可变的

2860
01:38:39,000 --> 01:38:42,000
哪些是可变的变异条件

2861
01:38:42,000 --> 01:38:45,000
另外哪些是不可变的变异条件

2862
01:38:45,000 --> 01:38:46,000
他在编译的时候

2863
01:38:46,000 --> 01:38:48,000
他必须确定说比如说

2864
01:38:50,000 --> 01:38:52,000
比如说我给出一个优化的 flag

2865
01:38:52,000 --> 01:38:55,000
O 1 还是 O 0 还是 O 3

2866
01:38:56,000 --> 01:38:58,000
给出 O 0 的时候

2867
01:38:58,000 --> 01:39:00,000
所包含的

2868
01:39:01,000 --> 01:39:02,000
会被编译的部分

2869
01:39:02,000 --> 01:39:04,000
和 O 3 会被编译的部分

2870
01:39:04,000 --> 01:39:05,000
其实是不一样的对吧

2871
01:39:06,000 --> 01:39:07,000
这个问题我能够理解

2872
01:39:07,000 --> 01:39:10,000
但是我觉得这个可能要加一个限制条件

2873
01:39:10,000 --> 01:39:11,000
就是说编译的参数

2874
01:39:11,000 --> 01:39:13,000
和编译的环境得是相同的

2875
01:39:15,000 --> 01:39:15,000
对吧

2876
01:39:15,000 --> 01:39:18,000
如果我们把这个编译的过程

2877
01:39:18,000 --> 01:39:20,000
想想象成一个数学的函数

2878
01:39:20,000 --> 01:39:21,000
叫做 F 的话

2879
01:39:22,000 --> 01:39:23,000
它的输入应该包含哪些部分

2880
01:39:23,000 --> 01:39:24,000
我们可以想一下

2881
01:39:24,000 --> 01:39:26,000
包括元代码是吧

2882
01:39:26,000 --> 01:39:28,000
最大的问题就是这个函数里面

2883
01:39:28,000 --> 01:39:33,000
所要给出给入的变量实在是太多了

2884
01:39:33,000 --> 01:39:35,000
然后你必须在设计函数的时候

2885
01:39:35,000 --> 01:39:39,000
就明确的知道哪些变量是可以被

2886
01:39:41,000 --> 01:39:44,000
包在一个额外的信息里面

2887
01:39:44,000 --> 01:39:47,000
作为整个最终所要递交的

2888
01:39:47,000 --> 01:39:50,000
这个 Binary 的原信息给出去的

2889
01:39:50,000 --> 01:39:51,000
比如说编译时间

2890
01:39:51,000 --> 01:39:53,000
编译时间你可以不包含在

2891
01:39:53,000 --> 01:39:54,000
最终的 Binary 里面

2892
01:39:54,000 --> 01:39:57,000
你只把它放在一个 Binary 的

2893
01:39:58,000 --> 01:40:00,000
附加包里面给用户

2894
01:40:03,000 --> 01:40:03,000
对啊

2895
01:40:03,000 --> 01:40:07,000
就要求你明确的区分哪些是可编的

2896
01:40:07,000 --> 01:40:08,000
哪些是不可编的

2897
01:40:08,000 --> 01:40:08,000
对

2898
01:40:08,000 --> 01:40:10,000
所以我就想说这件事情

2899
01:40:10,000 --> 01:40:13,000
我觉得在技术上应该是可以做到的

2900
01:40:13,000 --> 01:40:14,000
就是如果我们不做

2901
01:40:15,000 --> 01:40:16,000
哪怕是我们对元代码做一些

2902
01:40:16,000 --> 01:40:19,000
比较疯狂的 Transform

2903
01:40:19,000 --> 01:40:21,000
就是变形

2904
01:40:21,000 --> 01:40:22,000
应该也是可以做到

2905
01:40:22,000 --> 01:40:23,000
因为只要就我说

2906
01:40:24,000 --> 01:40:27,000
如果我们把编译过程想成一个

2907
01:40:27,000 --> 01:40:28,000
定义为一个函数的话

2908
01:40:28,000 --> 01:40:31,000
它的输入一个函数的输入应该是什么

2909
01:40:31,000 --> 01:40:32,000
应该是这个元代码

2910
01:40:32,000 --> 01:40:32,000
对

2911
01:40:32,000 --> 01:40:35,000
然后一个就是文本的形态

2912
01:40:35,000 --> 01:40:38,000
我们可以直接通过算哈系的方法

2913
01:40:38,000 --> 01:40:39,000
算出它的一个

2914
01:40:39,000 --> 01:40:42,000
可以比较它的一个不变性

2915
01:40:43,000 --> 01:40:44,000
然后是说各种编译的参数

2916
01:40:44,000 --> 01:40:46,000
我们可以按一个方法给出

2917
01:40:46,000 --> 01:40:48,000
编译参数应该是相同的

2918
01:40:48,000 --> 01:40:49,000
然后就是编译环境的

2919
01:40:49,000 --> 01:40:51,000
然后环境其实在某种

2920
01:40:51,000 --> 01:40:53,000
自动程度上就扯得比较远

2921
01:40:53,000 --> 01:40:54,000
应该可能会牵涉到这个

2922
01:40:54,000 --> 01:40:55,000
想要操作系统

2923
01:40:55,000 --> 01:40:57,000
是不是应该一个是可以叫做

2924
01:40:57,000 --> 01:40:58,000
immutable 的系统对吧

2925
01:40:59,000 --> 01:41:02,000
理论上如果我们不考虑时间的因素的话

2926
01:41:02,000 --> 01:41:05,000
是有办法把编译过程做成一个函数的

2927
01:41:05,000 --> 01:41:05,000
是一个所谓一个

2928
01:41:05,000 --> 01:41:07,000
这个是一个数学意义上的函数

2929
01:41:07,000 --> 01:41:10,000
就是它的给定一个输入

2930
01:41:10,000 --> 01:41:11,000
它的输出是很定的

2931
01:41:11,000 --> 01:41:12,000
输出是很定的

2932
01:41:12,000 --> 01:41:13,000
就是 fx 一定等于

2933
01:41:13,000 --> 01:41:15,000
它是一个函数编程以上的函数

2934
01:41:16,000 --> 01:41:16,000
对对对

2935
01:41:16,000 --> 01:41:19,000
它不是一个我们 programming 的函数

2936
01:41:19,000 --> 01:41:21,000
而是一个 mathematical function

2937
01:41:22,000 --> 01:41:23,000
对吧

2938
01:41:23,000 --> 01:41:27,000
然后我的这个问题在 google

2939
01:41:27,000 --> 01:41:28,000
line 的 groups 里面

2940
01:41:28,000 --> 01:41:30,000
就还挺多人在下面回复的

2941
01:41:31,000 --> 01:41:33,000
然后后来是说有一个

2942
01:41:34,000 --> 01:41:36,000
go 的就 go 语言的开发者

2943
01:41:36,000 --> 01:41:39,000
他说他其实在尝试做这件事

2944
01:41:39,000 --> 01:41:42,000
但是我不知道后来怎么样了

2945
01:41:42,000 --> 01:41:44,000
但他的说法不是用能够描述

2946
01:41:44,000 --> 01:41:46,000
叫 deterministic build

2947
01:41:46,000 --> 01:41:49,000
而是说叫做 repeatable build

2948
01:41:49,000 --> 01:41:51,000
所以这件事情还是蛮期待的

2949
01:41:51,000 --> 01:41:54,000
不知道他们会在一点几还是二点几

2950
01:41:54,000 --> 01:41:56,000
里面把这件事情变成现实

2951
01:41:57,000 --> 01:41:57,000
好吧

2952
01:41:58,000 --> 01:42:00,000
这是一个其实来

2953
01:42:00,000 --> 01:42:01,000
我觉得是一个相对来说

2954
01:42:01,000 --> 01:42:03,000
比较小众的需求

2955
01:42:03,000 --> 01:42:05,000
或者说它是一个很明确的需求

2956
01:42:05,000 --> 01:42:08,000
但是相对于编译器

2957
01:42:08,000 --> 01:42:12,000
所要完成的许多其他需求来说

2958
01:42:12,000 --> 01:42:15,000
没有那么高优先级的一个需求

2959
01:42:16,000 --> 01:42:17,000
但如果你是说

2960
01:42:18,000 --> 01:42:19,000
你对这个安全有追求

2961
01:42:19,000 --> 01:42:22,000
你从安全专家的角度来讲

2962
01:42:22,000 --> 01:42:25,000
这个需求毫无疑问是非常重要的

2963
01:42:25,000 --> 01:42:25,000
对

2964
01:42:26,000 --> 01:42:27,000
可是

2965
01:42:27,000 --> 01:42:30,000
如果市场不是那么

2966
01:42:30,000 --> 01:42:32,000
市场不是这么决策的是吧

2967
01:42:32,000 --> 01:42:33,000
对

2968
01:42:33,000 --> 01:42:34,000
比如说你是一个写 shader 的人

2969
01:42:34,000 --> 01:42:37,000
或者是你是一个写 whatever UI 的人

2970
01:42:37,000 --> 01:42:39,000
你可能会觉得这些事情没有那么重要

2971
01:42:41,000 --> 01:42:44,000
速度或者是优化程度

2972
01:42:44,000 --> 01:42:45,000
才是

2973
01:42:45,000 --> 01:42:49,000
乃至于什么前端后端的清晰分离

2974
01:42:49,000 --> 01:42:52,000
静态分析才是编译器最重要的部分

2975
01:42:53,000 --> 01:42:56,000
不 anyway 我们这里还是要提一篇

2976
01:42:56,000 --> 01:42:57,000
跟刚才那个没关系

2977
01:42:57,000 --> 01:43:00,000
跟提一个神级一样的论文

2978
01:43:00,000 --> 01:43:02,000
这个是 King Thompson 在

2979
01:43:02,000 --> 01:43:06,000
1984 年发表的一篇简短的一个

2980
01:43:07,000 --> 01:43:08,000
他 1984 年得了图灵奖

2981
01:43:08,000 --> 01:43:10,000
然后他在图灵奖的

2982
01:43:11,000 --> 01:43:12,000
班奖里说的这些

2983
01:43:12,000 --> 01:43:14,000
对这是一段

2984
01:43:14,000 --> 01:43:15,000
一个小的 paper

2985
01:43:16,000 --> 01:43:18,000
只有很少三页纸

2986
01:43:18,000 --> 01:43:19,000
非常简单

2987
01:43:19,000 --> 01:43:20,000
他讲了这么一个事

2988
01:43:20,000 --> 01:43:21,000
就是说因为

2989
01:43:21,000 --> 01:43:23,000
King Thompson 这个人可能还是要

2990
01:43:23,000 --> 01:43:24,000
如果大家名字

2991
01:43:24,000 --> 01:43:26,000
如果这个名字你都没听过的话

2992
01:43:26,000 --> 01:43:27,000
如果你是程序员的话

2993
01:43:27,000 --> 01:43:28,000
你应该去面壁死过

2994
01:43:30,000 --> 01:43:31,000
如果你是 Winless 程序员的话

2995
01:43:31,000 --> 01:43:32,000
情有愧

2996
01:43:33,000 --> 01:43:34,000
哪怕是 Winless 程序员

2997
01:43:34,000 --> 01:43:35,000
我觉得都不是情愧

2998
01:43:35,000 --> 01:43:37,000
因为这是 C 的 B 组

2999
01:43:39,000 --> 01:43:40,000
对好吧

3000
01:43:40,000 --> 01:43:44,000
King Thompson 是 Unix 的作者之一

3001
01:43:44,000 --> 01:43:45,000
当年在贝尔实验室的时候

3002
01:43:46,000 --> 01:43:50,000
然后他当然也是 C 的作者

3003
01:43:51,000 --> 01:43:54,000
然后到现在他在 Google

3004
01:43:54,000 --> 01:43:57,000
是 Go 语言的作者之一

3005
01:43:58,000 --> 01:43:59,000
对有这么多官方

3006
01:43:59,000 --> 01:44:00,000
我觉得已经够那个了

3007
01:44:00,000 --> 01:44:02,000
就不用再说别的了

3008
01:44:02,000 --> 01:44:03,000
对

3009
01:44:03,000 --> 01:44:05,000
他写这一篇其实

3010
01:44:05,000 --> 01:44:06,000
其实这个篇比刚才那篇

3011
01:44:06,000 --> 01:44:08,000
就更加基础性了

3012
01:44:08,000 --> 01:44:09,000
因为有没有几个

3013
01:44:10,000 --> 01:44:11,000
比较 tricky 的一些概念

3014
01:44:11,000 --> 01:44:12,000
其实我到现在为止

3015
01:44:12,000 --> 01:44:14,000
还不是特别理解

3016
01:44:14,000 --> 01:44:15,000
那我们武当你来解释一下

3017
01:44:18,000 --> 01:44:19,000
Xcode Ghost 的这件事情

3018
01:44:19,000 --> 01:44:21,000
其实并不是什么特别新鲜的事情

3019
01:44:21,000 --> 01:44:23,000
就比如说往回说

3020
01:44:23,000 --> 01:44:27,000
有一在 2012 年的时候

3021
01:44:27,000 --> 01:44:31,000
有一件事件就是 Pooty 的中文版

3022
01:44:31,000 --> 01:44:32,000
你看又是中文版

3023
01:44:33,000 --> 01:44:35,000
在被人植入了后门

3024
01:44:35,000 --> 01:44:38,000
就是你在使用中文版的 Pooty 的时候

3025
01:44:38,000 --> 01:44:43,000
你的 SSH 的公钥和私钥

3026
01:44:43,000 --> 01:44:44,000
都会被上传到一个服务器上

3027
01:44:44,000 --> 01:44:48,000
然后你要连接的机器

3028
01:44:48,000 --> 01:44:50,000
也会被上传到服务器上

3029
01:44:50,000 --> 01:44:51,000
所以如果你使用了

3030
01:44:51,000 --> 01:44:53,000
这个被感染的版本的 Pooty

3031
01:44:53,000 --> 01:44:57,000
那也就等于把你自己的服务器的

3032
01:44:57,000 --> 01:45:01,000
钥匙拱手送给了感染者

3033
01:45:01,000 --> 01:45:03,000
然后更古早的

3034
01:45:03,000 --> 01:45:05,000
就是我们之前提到的

3035
01:45:05,000 --> 01:45:06,000
Delphi 7 的 virus

3036
01:45:06,000 --> 01:45:08,000
然后而这一切

3037
01:45:08,000 --> 01:45:11,000
其实早在 80 年代

3038
01:45:11,000 --> 01:45:13,000
在 84 年

3039
01:45:13,000 --> 01:45:15,000
在 Kentomson 的论文里面

3040
01:45:15,000 --> 01:45:17,000
就已经提到这件事情

3041
01:45:17,000 --> 01:45:19,000
就是他那一年他去

3042
01:45:21,000 --> 01:45:23,000
接受 ACM 的图灵奖

3043
01:45:24,000 --> 01:45:26,000
然后他在图灵奖上就讲了

3044
01:45:26,000 --> 01:45:29,000
自己在当时的 CC Compiler

3045
01:45:29,000 --> 01:45:32,000
就是 CC 在 UNIX 的 CC Compiler 里面

3046
01:45:32,000 --> 01:45:34,000
执着后门的这件事情

3047
01:45:34,000 --> 01:45:36,000
所以这实际上是一件非常古老的事情

3048
01:45:36,000 --> 01:45:41,000
然后有兴趣的同学也可以去看一看

3049
01:45:42,000 --> 01:45:43,000
Kentomson 的这篇论文

3050
01:45:44,000 --> 01:45:45,000
非常短就三页

3051
01:45:45,000 --> 01:45:46,000
但是特别 treaty

3052
01:45:46,000 --> 01:45:48,000
因为它毕竟它只是一个讲话

3053
01:45:48,000 --> 01:45:50,000
它只是从这个讲话上来的

3054
01:45:51,000 --> 01:45:53,000
其实那篇论文的最后结尾那一段

3055
01:45:53,000 --> 01:45:55,000
其实还挺有意思的

3056
01:45:55,000 --> 01:45:59,000
就是他在 80 年代对安全和法律

3057
01:45:59,000 --> 01:46:01,000
还有责任的鉴定

3058
01:46:01,000 --> 01:46:03,000
其实跟我们现在的一些想法

3059
01:46:03,000 --> 01:46:05,000
还比较超前

3060
01:46:05,000 --> 01:46:06,000
至少说

3061
01:46:08,000 --> 01:46:11,000
这个具体就不再去描述了

3062
01:46:11,000 --> 01:46:12,000
大家可以自己有兴趣看这篇文章

3063
01:46:12,000 --> 01:46:13,000
对

3064
01:46:13,000 --> 01:46:14,000
而且很有趣的是

3065
01:46:14,000 --> 01:46:16,000
他在文章里面还提到说

3066
01:46:16,000 --> 01:46:19,000
其实这也不是他原创的这种

3067
01:46:21,000 --> 01:46:23,000
这样一种手段

3068
01:46:23,000 --> 01:46:27,000
他最开始读到这种可能性的攻击的

3069
01:46:27,000 --> 01:46:32,000
是在一个空军的杂志上面

3070
01:46:33,000 --> 01:46:38,000
一个 unknown 的未知的空军的文档上面

3071
01:46:38,000 --> 01:46:42,000
他读到了这样一种攻击的可能性

3072
01:46:43,000 --> 01:46:46,000
所以可能整个事情的想法

3073
01:46:46,000 --> 01:46:49,000
还要比我们所知道的追术的更早

3074
01:46:50,000 --> 01:46:52,000
但直到今天这样一种

3075
01:46:52,000 --> 01:46:53,000
怎么说呢

3076
01:46:54,000 --> 01:46:56,000
安全漏洞还是在危害着我

3077
01:46:57,000 --> 01:46:58,000
他那句话

3078
01:46:58,000 --> 01:47:00,000
他那个文章的标题叫做

3079
01:47:00,000 --> 01:47:02,000
reflection on trust in trust

3080
01:47:03,000 --> 01:47:05,000
其实可以对应到

3081
01:47:05,000 --> 01:47:06,000
刚才我们节目开始的时候

3082
01:47:06,000 --> 01:47:08,000
就关于这个讨论开始的时候

3083
01:47:08,000 --> 01:47:09,000
你提到那个问题

3084
01:47:09,000 --> 01:47:12,000
你如何真的信赖你的工具呢

3085
01:47:12,000 --> 01:47:15,000
他那边最后结尾的那一段的

3086
01:47:15,000 --> 01:47:18,000
章节的第一段话是这么说的

3087
01:47:19,000 --> 01:47:20,000
叫做

3088
01:47:22,000 --> 01:47:26,000
You can't trust code that you did not totally create yourself

3089
01:47:26,000 --> 01:47:28,000
RMS 嘛

3090
01:47:28,000 --> 01:47:28,000
这就对

3091
01:47:28,000 --> 01:47:30,000
RMS 是一样的

3092
01:47:30,000 --> 01:47:32,000
所以也比较巧了

3093
01:47:32,000 --> 01:47:34,000
他还提到有一个

3094
01:47:34,000 --> 01:47:36,000
其实我在现在认为

3095
01:47:36,000 --> 01:47:37,000
就说刚刚你说

3096
01:47:37,000 --> 01:47:39,000
如果你真的偏激一点的话

3097
01:47:39,000 --> 01:47:40,000
真的是没有真正的安全的

3098
01:47:40,000 --> 01:47:42,000
因为比如说

3099
01:47:42,000 --> 01:47:44,000
A well-installed microcode bug

3100
01:47:44,000 --> 01:47:47,000
will be almost impossible to detect

3101
01:47:47,000 --> 01:47:50,000
就是一个安装的非常精巧的这种

3102
01:47:50,000 --> 01:47:51,000
就是微代码

3103
01:47:51,000 --> 01:47:53,000
微代码就是像什么

3104
01:47:53,000 --> 01:47:55,000
就是硬件里面驱动我一个

3105
01:47:56,000 --> 01:47:58,000
小硬件的驱程

3106
01:47:58,000 --> 01:48:00,000
或者是一个驱动的那个 bug

3107
01:48:00,000 --> 01:48:02,000
基本上不可能被发现的

3108
01:48:02,000 --> 01:48:04,000
因为实在是太难太低层了

3109
01:48:05,000 --> 01:48:07,000
就越底层的 bug 越难发现

3110
01:48:07,000 --> 01:48:09,000
如果你更进一步的话

3111
01:48:09,000 --> 01:48:13,000
在硬件层面上植入的病毒

3112
01:48:13,000 --> 01:48:13,000
或者是后门

3113
01:48:13,000 --> 01:48:14,000
就在什么

3114
01:48:14,000 --> 01:48:14,000
不可能

3115
01:48:15,000 --> 01:48:17,000
IC 电路板级别的 bug 是吧

3116
01:48:17,000 --> 01:48:18,000
对啊

3117
01:48:18,000 --> 01:48:19,000
这个据说是有的

3118
01:48:19,000 --> 01:48:20,000
听说那个

3119
01:48:20,000 --> 01:48:21,000
但是小道消息

3120
01:48:21,000 --> 01:48:23,000
也没有经过确认

3121
01:48:23,000 --> 01:48:24,000
英特尔的芯片里面

3122
01:48:25,000 --> 01:48:27,000
据说是只有 NSA 的后门的

3123
01:48:27,000 --> 01:48:28,000
但是不知道到底怎么

3124
01:48:28,000 --> 01:48:30,000
如何实现这一点

3125
01:48:30,000 --> 01:48:31,000
对啊

3126
01:48:32,000 --> 01:48:35,000
所以其实有时候我们嘲笑一些

3127
01:48:35,000 --> 01:48:38,000
龙芯或者是国产 CPU

3128
01:48:38,000 --> 01:48:40,000
机箱机国产化的知识者们

3129
01:48:40,000 --> 01:48:42,000
会说这简直是

3130
01:48:42,000 --> 01:48:44,000
毫无道理

3131
01:48:45,000 --> 01:48:45,000
对

3132
01:48:45,000 --> 01:48:47,000
为什么说这么强调

3133
01:48:47,000 --> 01:48:48,000
自主知识产权

3134
01:48:48,000 --> 01:48:49,000
其实也说的本账

3135
01:48:49,000 --> 01:48:51,000
就自己这么一件事

3136
01:48:51,000 --> 01:48:52,000
就是说他说

3137
01:48:52,000 --> 01:48:53,000
You can't trust software

3138
01:48:53,000 --> 01:48:55,000
You didn't write yourself

3139
01:48:55,000 --> 01:48:57,000
那你也不可能说

3140
01:48:57,000 --> 01:48:59,000
如果你不能信任

3141
01:48:59,000 --> 01:49:00,000
不是你自己写的软件

3142
01:49:00,000 --> 01:49:01,000
当然更不可能信任

3143
01:49:01,000 --> 01:49:02,000
不是你自己造的硬件了

3144
01:49:02,000 --> 01:49:03,000
对吧

3145
01:49:03,000 --> 01:49:04,000
没错

3146
01:49:04,000 --> 01:49:06,000
所以从这一点上来说

3147
01:49:06,000 --> 01:49:07,000
这个

3148
01:49:08,000 --> 01:49:10,000
机箱机国产化是有其意义的

3149
01:49:10,000 --> 01:49:11,000
或者说按照

3150
01:49:12,000 --> 01:49:13,000
那个话说

3151
01:49:13,000 --> 01:49:15,000
如果你对你的软件

3152
01:49:16,000 --> 01:49:17,000
安全足够介意的话

3153
01:49:17,000 --> 01:49:19,000
你一定要从硬件造起

3154
01:49:20,000 --> 01:49:20,000
对

3155
01:49:20,000 --> 01:49:22,000
而如果你要足够

3156
01:49:22,000 --> 01:49:24,000
在意你的国家安全的话

3157
01:49:24,000 --> 01:49:26,000
你必须要注意你的信息安全

3158
01:49:28,000 --> 01:49:28,000
好吧

3159
01:49:29,000 --> 01:49:32,000
今天的节目就到此为止了

3160
01:49:32,000 --> 01:49:34,000
感谢收听 IPN Podcast

3161
01:49:34,000 --> 01:49:36,000
网络旗下的 IT 技术主题

3162
01:49:36,000 --> 01:49:38,000
娱乐节目内核恐慌

3163
01:49:38,000 --> 01:49:39,000
我们号称 Hardcore

3164
01:49:39,000 --> 01:49:40,000
但是也没有干货

3165
01:49:40,000 --> 01:49:42,000
想听人听

3166
01:49:42,000 --> 01:49:43,000
不想听的人就别听

3167
01:49:44,000 --> 01:49:45,000
你可以为本节目捐款

3168
01:49:45,000 --> 01:49:48,000
捐款地址是 ipn.li

3169
01:49:48,000 --> 01:49:50,000
slash kernelpanic

3170
01:49:50,000 --> 01:49:52,000
slash donate

3171
01:49:52,000 --> 01:49:53,000
捐款金额随意

3172
01:49:53,000 --> 01:49:55,000
只要是能被扒

3173
01:49:55,000 --> 01:49:56,000
整除的正整数就可以

3174
01:49:57,000 --> 01:49:59,000
捐款不会给你带来什么

3175
01:49:59,000 --> 01:50:00,000
不捐也不会让你失去什么

3176
01:50:00,000 --> 01:50:03,000
我们的口号是 no hard feelings

3177
01:50:03,000 --> 01:50:05,000
本期口号不是这个

3178
01:50:06,000 --> 01:50:06,000
对

3179
01:50:06,000 --> 01:50:08,000
本期口号是 trust no one

3180
01:50:08,000 --> 01:50:10,000
even your compiler

3181
01:50:10,000 --> 01:50:11,000
and your computer

3182
01:50:13,000 --> 01:50:14,000
and your civil chip

3183
01:50:15,000 --> 01:50:16,000
and your government

3184
01:50:18,000 --> 01:50:19,000
and yourself

3185
01:50:19,000 --> 01:50:20,000
and yourself

3186
01:50:21,000 --> 01:50:22,000
如果你有任何反馈

3187
01:50:22,000 --> 01:50:24,000
可以发电子邮件到

3188
01:50:24,000 --> 01:50:27,000
kernelpanic at ipn.li

3189
01:50:27,000 --> 01:50:29,000
同时也欢迎您收听

3190
01:50:29,000 --> 01:50:32,000
IPN 旗下其他几档节目

3191
01:50:32,000 --> 01:50:33,000
IT 公论

3192
01:50:33,000 --> 01:50:34,000
未知到

3193
01:50:34,000 --> 01:50:35,000
太一来了

3194
01:50:35,000 --> 01:50:36,000
流行通讯

3195
01:50:36,000 --> 01:50:37,000
Hi story

3196
01:50:37,000 --> 01:50:39,000
博物主题节目博物制

3197
01:50:39,000 --> 01:50:41,000
美国大选主题节目

3198
01:50:41,000 --> 01:50:43,000
这件事情看的叫做选美

3199
01:50:43,000 --> 01:50:44,000
我们下期节目再会

3200
01:50:45,000 --> 01:50:47,000
对我们下期节目一定会来的

3201
01:50:47,000 --> 01:50:49,000
虽然这次停了两周

3202
01:50:49,000 --> 01:50:51,000
然后让很多听众朋友们

3203
01:50:51,000 --> 01:50:52,000
也觉得非常的

3204
01:50:54,000 --> 01:50:55,000
用一个什么形容词

3205
01:50:55,000 --> 01:50:57,000
难过或者是觉得

3206
01:50:57,000 --> 01:50:59,000
翘首以盼

3207
01:50:59,000 --> 01:51:00,000
翘首以待

3208
01:51:01,000 --> 01:51:02,000
对其实这期节目

3209
01:51:02,000 --> 01:51:03,000
差点就没录成

3210
01:51:03,000 --> 01:51:05,000
兄弟们各位听众

3211
01:51:05,000 --> 01:51:06,000
我本来

3212
01:51:07,000 --> 01:51:09,000
今天是要去木尼黑的

3213
01:51:09,000 --> 01:51:11,000
然后我女朋友说

3214
01:51:11,000 --> 01:51:12,000
如果不录节目的话

3215
01:51:12,000 --> 01:51:13,000
就不让我出门

3216
01:51:13,000 --> 01:51:14,000
所以我只好

3217
01:51:15,000 --> 01:51:16,000
在这里录了这些节目

3218
01:51:16,000 --> 01:51:19,000
感谢无糖女朋友大无畏的牺牲

3219
01:51:19,000 --> 01:51:21,000
让本次节目死灰复燃

3220
01:51:21,000 --> 01:51:22,000
不对

3221
01:51:22,000 --> 01:51:23,000
如果没有她的话

3222
01:51:23,000 --> 01:51:25,000
各位可能还要再等

3223
01:51:25,000 --> 01:51:26,000
不想要做

3224
01:51:27,000 --> 01:51:27,000
对

3225
01:51:29,000 --> 01:51:29,000
好吧

3226
01:51:29,000 --> 01:51:31,000
那我们虽然这一期

3227
01:51:31,000 --> 01:51:33,000
也没有那么精彩

3228
01:51:33,000 --> 01:51:33,000
但

3229
01:51:34,000 --> 01:51:37,000
我们还是会继续录下去

3230
01:51:37,000 --> 01:51:39,000
其实这期我们发现一个挺好的

3231
01:51:39,000 --> 01:51:41,000
把节目做下去的方法

3232
01:51:41,000 --> 01:51:42,000
什么方法

3233
01:51:42,000 --> 01:51:44,000
每期找一篇论文来讲

3234
01:51:45,000 --> 01:51:45,000
哦

3235
01:51:46,000 --> 01:51:47,000
倒也是可以

3236
01:51:48,000 --> 01:51:50,000
反正不是有什么计算机

3237
01:51:50,000 --> 01:51:52,000
程序员必读的

3238
01:51:52,000 --> 01:51:54,000
20 篇论文之类的文章

3239
01:51:54,000 --> 01:51:56,000
我们可以去下载

3240
01:51:56,000 --> 01:51:58,000
这样这样确实要讲那么深度

3241
01:52:01,000 --> 01:52:02,000
还是可以的吧

3242
01:52:02,000 --> 01:52:03,000
就基本上

3243
01:52:03,000 --> 01:52:05,000
如果听完我们这 20 期节目的话

3244
01:52:05,000 --> 01:52:07,000
就可以完成应该叫什么

3245
01:52:08,000 --> 01:52:10,000
韩寿课程

3246
01:52:10,000 --> 01:52:13,000
对韩寿课程的视频

3247
01:52:14,000 --> 01:52:16,000
其实我最近刚刚开始了一门

3248
01:52:17,000 --> 01:52:18,000
开源的课程

3249
01:52:18,000 --> 01:52:21,000
而且是每写完一个 quiz

3250
01:52:21,000 --> 01:52:22,000
就要拍一张照片

3251
01:52:22,000 --> 01:52:23,000
然后要

3252
01:52:25,000 --> 01:52:26,000
敲一段字来证明

3253
01:52:26,000 --> 01:52:27,000
是你刚刚做这个 quiz

3254
01:52:28,000 --> 01:52:29,000
是什么方向

3255
01:52:30,000 --> 01:52:32,000
Data science

3256
01:52:33,000 --> 01:52:35,000
这个是哪一块

3257
01:52:36,000 --> 01:52:37,000
具体叫做什么

3258
01:52:37,000 --> 01:52:39,000
是 Corsair 出的

3259
01:52:39,000 --> 01:52:40,000
叫

3260
01:52:41,000 --> 01:52:45,000
Data analyze and statistical inference

3261
01:52:46,000 --> 01:52:47,000
就讲数据分析

3262
01:52:48,000 --> 01:52:50,000
所以你是重修统计学了

3263
01:52:51,000 --> 01:52:52,000
有一点吧

3264
01:52:52,000 --> 01:52:53,000
就我对他感兴趣

3265
01:52:53,000 --> 01:52:56,000
主要是因为他会讲 R

3266
01:52:56,000 --> 01:52:58,000
然后我们公司的产品里面也会

3267
01:52:59,000 --> 01:53:00,000
也支持 R

3268
01:53:00,000 --> 01:53:01,000
所以我想

3269
01:53:01,000 --> 01:53:03,000
反正可能将来用得上

3270
01:53:03,000 --> 01:53:04,000
就不如学一学

3271
01:53:04,000 --> 01:53:06,000
而且最后是有证书的

3272
01:53:06,000 --> 01:53:07,000
如果你

3273
01:53:07,000 --> 01:53:08,000
就学完这个

3274
01:53:08,000 --> 01:53:09,000
你就可以给自己贴个标签

3275
01:53:09,000 --> 01:53:11,000
叫做 I'm a data scientist

3276
01:53:12,000 --> 01:53:14,000
那还是离他远了

3277
01:53:14,000 --> 01:53:16,000
要真正成为 Data scientist 的话

3278
01:53:16,000 --> 01:53:19,000
可能要上另外几门比较深的课

3279
01:53:20,000 --> 01:53:21,000
这一门课非常浅显了

3280
01:53:21,000 --> 01:53:22,000
感觉

3281
01:53:22,000 --> 01:53:23,000
他会讲些什么内容

3282
01:53:23,000 --> 01:53:25,000
大概就提纲是什么

3283
01:53:25,000 --> 01:53:27,000
objective 是

3284
01:53:27,000 --> 01:53:30,000
以上来是讲

3285
01:53:31,000 --> 01:53:33,000
intro statistics

3286
01:53:33,000 --> 01:53:36,000
然后后面会讲什么

3287
01:53:37,000 --> 01:53:38,000
scatter plot

3288
01:53:38,000 --> 01:53:40,000
然后后面会讲什么

3289
01:53:40,000 --> 01:53:42,000
experimental design

3290
01:53:42,000 --> 01:53:44,000
就是如果你要设计一个

3291
01:53:44,000 --> 01:53:47,000
experiment 来验证一些

3292
01:53:47,000 --> 01:53:48,000
同学们观点的话

3293
01:53:48,000 --> 01:53:48,000
会需要

3294
01:53:49,000 --> 01:53:50,000
会需要注意什么

3295
01:53:51,000 --> 01:53:53,000
然后会有什么

3296
01:53:54,000 --> 01:53:55,000
就是使用 R 里面的

3297
01:53:56,000 --> 01:53:57,000
各种各样的 plot 功能

3298
01:53:57,000 --> 01:53:59,000
来建立图表

3299
01:54:00,000 --> 01:54:02,000
来建立 bar plot

3300
01:54:02,000 --> 01:54:03,000
然后告诉你各种 plot

3301
01:54:03,000 --> 01:54:05,000
有什么样的方法

3302
01:54:05,000 --> 01:54:07,000
其实比较 intro 的一门课

3303
01:54:09,000 --> 01:54:09,000
不错

3304
01:54:09,000 --> 01:54:12,000
所以我想起上次是谁说的

3305
01:54:12,000 --> 01:54:15,000
说我们高中大学数学

3306
01:54:15,000 --> 01:54:17,000
学那么多什么微积分

3307
01:54:17,000 --> 01:54:18,000
其实并没有什么

3308
01:54:18,000 --> 01:54:20,000
鸟用对日常生活

3309
01:54:21,000 --> 01:54:22,000
反而是应该把这个

3310
01:54:23,000 --> 01:54:24,000
还数统计学

3311
01:54:24,000 --> 01:54:27,000
数理统计做教的比较深刻

3312
01:54:27,000 --> 01:54:28,000
反而对日常说了

3313
01:54:28,000 --> 01:54:30,000
应该是吧

3314
01:54:30,000 --> 01:54:31,000
应该是木耀说的

3315
01:54:31,000 --> 01:54:31,000
对

3316
01:54:32,000 --> 01:54:34,000
我再次深刻表示认同

3317
01:54:36,000 --> 01:54:36,000
好吧

3318
01:54:36,000 --> 01:54:39,000
所以这门课刚刚开了两个礼拜

3319
01:54:39,000 --> 01:54:40,000
如果你们有兴趣的话

3320
01:54:40,000 --> 01:54:42,000
你还是可以跟进来

3321
01:54:42,000 --> 01:54:44,000
然后还挺有意思的

3322
01:54:44,000 --> 01:54:46,000
跟吴涛一起学习进步

3323
01:54:49,000 --> 01:54:49,000
对

3324
01:54:50,000 --> 01:54:51,000
OK

3325
01:54:51,000 --> 01:54:52,000
那就到这吧

3326
01:54:53,000 --> 01:54:54,000
刚好两个小时

3327
01:54:54,000 --> 01:54:55,000
我们两周之后再见

