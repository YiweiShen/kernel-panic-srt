1
00:00:00,000 --> 00:00:03,000
321 开始

2
00:00:03,000 --> 00:00:06,000
321 开始

3
00:00:06,000 --> 00:00:11,000
你来开场

4
00:00:11,000 --> 00:00:15,000
OK

5
00:00:15,000 --> 00:00:17,000
这次说到你也失去了

6
00:00:21,000 --> 00:00:27,000
全球协调时

7
00:00:28,000 --> 00:00:29,000
不对不对

8
00:00:29,000 --> 00:00:31,000
UTC 是什么来着协调世界史

9
00:00:31,000 --> 00:00:33,000
我不知道它中文名字叫什么

10
00:00:33,000 --> 00:00:35,000
Universal Coordinated Time

11
00:00:38,000 --> 00:00:42,000
这是法语

12
00:00:46,000 --> 00:00:48,000
现在是协调世界史 UTC

13
00:00:48,000 --> 00:00:50,000
百分号 H 点百分号 M 分

14
00:00:50,000 --> 00:00:51,000
您正在收听的

15
00:00:52,000 --> 00:00:54,000
或正在反复一听再听的是

16
00:00:54,000 --> 00:00:55,000
内核恐慌一档

17
00:00:56,000 --> 00:00:57,000
IT 的 Podcast 节目

18
00:00:57,000 --> 00:00:59,000
主持人是我武汤

19
00:00:59,000 --> 00:01:00,000
还有 Ryo

20
00:01:01,000 --> 00:01:04,000
OK 在今天的节目正式开始之前

21
00:01:04,000 --> 00:01:06,000
我们做一个什么 Follow up

22
00:01:07,000 --> 00:01:08,000
简称 FU

23
00:01:09,000 --> 00:01:12,000
对在扩别了两周之后

24
00:01:12,000 --> 00:01:14,000
大家要听到我们声音的

25
00:01:14,000 --> 00:01:15,000
这两周之间也有一些反馈

26
00:01:15,000 --> 00:01:17,000
但实际上我们这期录制节目

27
00:01:17,000 --> 00:01:21,000
不是在真正的您听到这期节目的

28
00:01:21,000 --> 00:01:23,000
前一天或者前两天录制

29
00:01:23,000 --> 00:01:25,000
具体什么时候我们就保密了

30
00:01:25,000 --> 00:01:29,000
但目前我们所得到一些反馈是

31
00:01:30,000 --> 00:01:32,000
一位也是姓吴的推友

32
00:01:32,000 --> 00:01:33,000
在推特上告诉我说

33
00:01:34,000 --> 00:01:39,000
如果想要在 Hapkacken Keyboard 上面使用

34
00:01:40,000 --> 00:01:42,000
HJKL 做方向键的话

35
00:01:42,000 --> 00:01:45,000
可以去加装一个叫做

36
00:01:45,000 --> 00:01:47,000
TMK Analyne Keyboard Mod

37
00:01:47,000 --> 00:01:49,000
然后这个 Mod 的

38
00:01:49,000 --> 00:01:51,000
我记得我以前应该看到过这个东西

39
00:01:51,000 --> 00:01:53,000
它的根本的理念就是

40
00:01:54,000 --> 00:01:58,000
在这个 HXKB 上面加装一块

41
00:01:58,000 --> 00:02:01,000
使用 ARM 处理器的开发板

42
00:02:01,000 --> 00:02:03,000
然后在这个开发板上烧录一个

43
00:02:04,000 --> 00:02:07,000
烧录一个控制器

44
00:02:07,000 --> 00:02:09,000
然后通过这个控制器做这个

45
00:02:09,000 --> 00:02:12,000
键盘和主机之间的传输

46
00:02:13,000 --> 00:02:15,000
传输 Convert 可以这么说

47
00:02:16,000 --> 00:02:16,000
然后就可以让

48
00:02:16,000 --> 00:02:18,000
给你翻译了一下对吧

49
00:02:19,000 --> 00:02:20,000
对然后这样就可以让

50
00:02:20,000 --> 00:02:22,000
这样就可以自定义

51
00:02:22,000 --> 00:02:25,000
Hapkacken Keyboard 上面的一些键有哪些功能比如说

52
00:02:25,000 --> 00:02:27,000
它有一个比较经典的 Mod 是

53
00:02:27,000 --> 00:02:29,000
用空格键做的当做 Fn

54
00:02:29,000 --> 00:02:31,000
也就是说在你按下空格键的时候

55
00:02:31,000 --> 00:02:33,000
你就可以去按 123

56
00:02:33,000 --> 00:02:35,000
然后这个时候 123 就是 FefRf 3

57
00:02:37,000 --> 00:02:40,000
但是我是觉得要在上面加一个

58
00:02:41,000 --> 00:02:43,000
TZ 开发板就是它推荐了

59
00:02:43,000 --> 00:02:45,000
一个开发板叫 TZ 开发板

60
00:02:45,000 --> 00:02:48,000
这个开发板足够小并且可以塞进这个键盘的内部

61
00:02:48,000 --> 00:02:50,000
可我觉得

62
00:02:50,000 --> 00:02:53,000
拆开键盘塞一个开发板进去

63
00:02:53,000 --> 00:02:55,000
然后焊什么的还是太麻烦了

64
00:02:55,000 --> 00:02:57,000
这你就不够硬核了

65
00:02:57,000 --> 00:02:58,000
人家都自己组装

66
00:02:58,000 --> 00:02:59,000
从那个什么

67
00:02:59,000 --> 00:03:02,000
从零部件开始组装键盘了

68
00:03:03,000 --> 00:03:04,000
对没错

69
00:03:04,000 --> 00:03:06,000
就是说明我还是硬核精神不够

70
00:03:06,000 --> 00:03:07,000
需要

71
00:03:08,000 --> 00:03:10,000
还是需要来试一试这件事情

72
00:03:11,000 --> 00:03:14,000
嗯而且你守着离那个 Cherry 厂那么近对吧

73
00:03:16,000 --> 00:03:17,000
这个跟他们没关系

74
00:03:17,000 --> 00:03:18,000
我总不能去他们要这个

75
00:03:19,000 --> 00:03:20,000
我总不能去跟他们要这个

76
00:03:20,000 --> 00:03:22,000
你意思是我买一堆招来

77
00:03:22,000 --> 00:03:23,000
然后自己做一个键盘是吧

78
00:03:23,000 --> 00:03:25,000
对啊这两天前天那个什么

79
00:03:25,000 --> 00:03:27,000
Hacker News 上不是有个人就这么干了吗

80
00:03:29,000 --> 00:03:29,000
这个还真

81
00:03:29,000 --> 00:03:30,000
你做我一个 3 D 打印机

82
00:03:30,000 --> 00:03:33,000
这才是真正的硬核好吧

83
00:03:34,000 --> 00:03:37,000
对其实开源的键盘项目我以前也见过一个

84
00:03:37,000 --> 00:03:40,000
就是完全 DIY 的制作

85
00:03:40,000 --> 00:03:42,000
而且网上可以买到它的图纸

86
00:03:42,000 --> 00:03:45,000
而且我相信那个键盘的壳子就是用 3 D 打印机

87
00:03:46,000 --> 00:03:50,000
哈这样出来的那个就是手感和这个做工

88
00:03:51,000 --> 00:03:52,000
会存疑吧

89
00:03:54,000 --> 00:03:55,000
很难说啊

90
00:03:55,000 --> 00:03:58,000
我是比较相信现在的 3 D 打印机

91
00:03:58,000 --> 00:04:02,000
还没能达到我们一个键盘需要的模具的精度

92
00:04:02,000 --> 00:04:05,000
对这个是一个挺挺麻烦的事情

93
00:04:05,000 --> 00:04:08,000
而且就如果 3 D 打印真的能做到这个精度

94
00:04:08,000 --> 00:04:10,000
我就想打的还是上次我们说那个

95
00:04:10,000 --> 00:04:12,000
Key Cup

96
00:04:12,000 --> 00:04:14,000
Keyboard Kup

97
00:04:14,000 --> 00:04:15,000
Keyboard Kup

98
00:04:15,000 --> 00:04:18,000
我现在想想 Kupboard 是厨房板吗

99
00:04:18,000 --> 00:04:20,000
就是不是是叫什么

100
00:04:20,000 --> 00:04:22,000
搁板不是储柜的意思

101
00:04:22,000 --> 00:04:25,000
Kupboard 就搁板放 Kupboard

102
00:04:27,000 --> 00:04:31,000
OK 另外一个 Follow up 是有人说

103
00:04:31,000 --> 00:04:35,000
这个这是我们第一期的时候讲到说

104
00:04:35,000 --> 00:04:37,000
这个德国的很多车

105
00:04:37,000 --> 00:04:39,000
还有加拿大很多车的油箱盖是没法锁的

106
00:04:39,000 --> 00:04:40,000
然后他说是

107
00:04:40,000 --> 00:04:43,000
油箱盖的锁是由中控所控制的

108
00:04:43,000 --> 00:04:46,000
锁之后应该就打不开了

109
00:04:46,000 --> 00:04:48,000
对这个就是他应该是这样的

110
00:04:48,000 --> 00:04:49,000
可是他就不是这样的

111
00:04:50,000 --> 00:04:51,000
你确定吗

112
00:04:51,000 --> 00:04:52,000
对啊我确定

113
00:04:52,000 --> 00:04:53,000
当你用遥控

114
00:04:53,000 --> 00:04:54,000
就是你下车

115
00:04:54,000 --> 00:04:56,000
然后用遥控钥匙把车锁了之后

116
00:04:56,000 --> 00:04:57,000
你真的可以打开油箱盖

117
00:04:57,000 --> 00:04:58,000
对的

118
00:04:59,000 --> 00:04:59,000
Holy shit

119
00:04:59,000 --> 00:05:00,000
不难的话

120
00:05:00,000 --> 00:05:01,000
如果中控所锁住之后

121
00:05:01,000 --> 00:05:03,000
这个事情就不存在这个问题了

122
00:05:03,000 --> 00:05:03,000
对吧

123
00:05:03,000 --> 00:05:05,000
这个就是 Secure design

124
00:05:05,000 --> 00:05:07,000
但是为什么要吐槽他

125
00:05:07,000 --> 00:05:09,000
就是因为他不是这样的

126
00:05:09,000 --> 00:05:10,000
OK

127
00:05:10,000 --> 00:05:13,000
所以这个真的是一个挺严重的问题

128
00:05:13,000 --> 00:05:16,000
而且我觉得好像日系车都没什么这个问题

129
00:05:16,000 --> 00:05:18,000
就是 Jeep 这个系列

130
00:05:18,000 --> 00:05:19,000
发现全部都是这样

131
00:05:19,000 --> 00:05:20,000
不知道为什么

132
00:05:20,000 --> 00:05:21,000
美国人比较信任别人

133
00:05:22,000 --> 00:05:23,000
可能是当初美国人

134
00:05:23,000 --> 00:05:26,000
即便现在美国油价也是非常便宜

135
00:05:27,000 --> 00:05:29,000
这个偷油都算了

136
00:05:29,000 --> 00:05:31,000
万一有点什么三畅那样的

137
00:05:31,000 --> 00:05:32,000
你看那个什么电影里面

138
00:05:32,000 --> 00:05:34,000
最常见的一个什么镜头

139
00:05:34,000 --> 00:05:36,000
什么男主角

140
00:05:36,000 --> 00:05:37,000
或者是一个坏

141
00:05:37,000 --> 00:05:38,000
这个是坏对吧

142
00:05:38,000 --> 00:05:40,000
坏一号

143
00:05:40,000 --> 00:05:42,000
跑道路街边去要制造一起什么

144
00:05:42,000 --> 00:05:43,000
Destruction 的时候

145
00:05:43,000 --> 00:05:45,000
就把油箱给拧开

146
00:05:45,000 --> 00:05:46,000
然后丢个什么烟头进去

147
00:05:46,000 --> 00:05:47,000
然后自己很潇洒地走

148
00:05:47,000 --> 00:05:48,000
然后过了十几秒

149
00:05:48,000 --> 00:05:50,000
就爆炸了

150
00:05:50,000 --> 00:05:54,000
Breaking Bad 里面老白就把车的车这样烧了

151
00:05:55,000 --> 00:05:56,000
对啊

152
00:05:56,000 --> 00:05:57,000
你就觉得这个事情

153
00:05:57,000 --> 00:05:58,000
这是多么一个

154
00:05:58,000 --> 00:06:01,000
多明显的一个 Security fault

155
00:06:01,000 --> 00:06:02,000
也是

156
00:06:03,000 --> 00:06:03,000
的确

157
00:06:03,000 --> 00:06:05,000
应该是库尔尔之类的地方问一问

158
00:06:05,000 --> 00:06:06,000
到底是为什么

159
00:06:06,000 --> 00:06:07,000
他们说的怎么想

160
00:06:07,000 --> 00:06:08,000
就好像其实还有一个问题

161
00:06:08,000 --> 00:06:09,000
就是

162
00:06:10,000 --> 00:06:11,000
包括很多

163
00:06:12,000 --> 00:06:13,000
非常现代的车

164
00:06:13,000 --> 00:06:14,000
就是

165
00:06:14,000 --> 00:06:15,000
大众的车

166
00:06:16,000 --> 00:06:17,000
它的车灯

167
00:06:17,000 --> 00:06:20,000
在你离开驾驶舱拔了小时之后

168
00:06:20,000 --> 00:06:21,000
如果你不拔

169
00:06:21,000 --> 00:06:23,000
如果你不在驾驶舱里面把车灯关掉

170
00:06:23,000 --> 00:06:24,000
车灯会一直亮着

171
00:06:24,000 --> 00:06:25,000
直到电池耗尽为止

172
00:06:25,000 --> 00:06:26,000
不会吧

173
00:06:26,000 --> 00:06:28,000
这个现代车还这样吗

174
00:06:29,000 --> 00:06:30,000
有些有很多车都是这样的

175
00:06:30,000 --> 00:06:32,000
我们在冰岛就看到一辆这样的车

176
00:06:32,000 --> 00:06:33,000
直到它电池

177
00:06:33,000 --> 00:06:35,000
就是看到那个灯一点点熄灭

178
00:06:35,000 --> 00:06:37,000
都没有人知道那辆车是谁的

179
00:06:37,000 --> 00:06:38,000
我还以为

180
00:06:38,000 --> 00:06:40,000
就至少是可能最近几年

181
00:06:41,000 --> 00:06:42,000
就是这个坐的车

182
00:06:42,000 --> 00:06:43,000
它有那个功能

183
00:06:43,000 --> 00:06:45,000
就是延时关灯

184
00:06:46,000 --> 00:06:46,000
对

185
00:06:46,000 --> 00:06:49,000
有些车在你下车之后拔钥匙的时候

186
00:06:49,000 --> 00:06:50,000
如果你忘了关车灯

187
00:06:50,000 --> 00:06:52,000
它会滴滴滴报警

188
00:06:52,000 --> 00:06:53,000
但是

189
00:06:53,000 --> 00:06:55,000
如果你不理它的话

190
00:06:55,000 --> 00:06:56,000
它就会让灯一直开着

191
00:06:57,000 --> 00:06:58,000
我怀疑这是有什么用意的

192
00:06:58,000 --> 00:06:59,000
对

193
00:06:59,000 --> 00:06:59,000
这个我知道

194
00:06:59,000 --> 00:07:01,000
我自己现在那个车

195
00:07:01,000 --> 00:07:02,000
就是它会

196
00:07:03,000 --> 00:07:04,000
你拔的钥匙

197
00:07:04,000 --> 00:07:05,000
你能下车

198
00:07:05,000 --> 00:07:05,000
锁上车灯

199
00:07:05,000 --> 00:07:06,000
就灯会亮一会儿

200
00:07:06,000 --> 00:07:08,000
然后它的用意是说

201
00:07:08,000 --> 00:07:10,000
很多的车

202
00:07:10,000 --> 00:07:11,000
都是停车库里面

203
00:07:12,000 --> 00:07:12,000
对吧

204
00:07:13,000 --> 00:07:14,000
然后如果晚上的话

205
00:07:14,000 --> 00:07:15,000
比较黑的情况下

206
00:07:15,000 --> 00:07:17,000
它可以照着你回去

207
00:07:17,000 --> 00:07:18,000
离开那个地方

208
00:07:18,000 --> 00:07:20,000
然后它再把那个灯熄掉

209
00:07:21,000 --> 00:07:21,000
对

210
00:07:21,000 --> 00:07:22,000
我的车有这个功能

211
00:07:22,000 --> 00:07:24,000
但是只需要在

212
00:07:24,000 --> 00:07:25,000
钥匙上按一个键

213
00:07:25,000 --> 00:07:26,000
这个灯就会亮

214
00:07:26,000 --> 00:07:27,000
然后亮大概 40 秒 50 秒

215
00:07:27,000 --> 00:07:28,000
它就会自动熄灭

216
00:07:28,000 --> 00:07:29,000
对

217
00:07:29,000 --> 00:07:29,000
不到

218
00:07:29,000 --> 00:07:30,000
它不会一直亮着

219
00:07:32,000 --> 00:07:32,000
还是有个选项

220
00:07:32,000 --> 00:07:34,000
可以把这个东西关掉

221
00:07:34,000 --> 00:07:35,000
还是一定要忘

222
00:07:36,000 --> 00:07:36,000
就是 3 号

223
00:07:36,000 --> 00:07:39,000
这绝对是一个很傻逼的设计之一

224
00:07:39,000 --> 00:07:40,000
而且或者这么讲

225
00:07:40,000 --> 00:07:44,000
就算是你又需要把车灯一直亮着

226
00:07:44,000 --> 00:07:45,000
比如说你在野外

227
00:07:45,000 --> 00:07:46,000
你要做什么事情

228
00:07:46,000 --> 00:07:47,000
对吧

229
00:07:47,000 --> 00:07:48,000
把车灯当做一个照明来用

230
00:07:48,000 --> 00:07:49,000
也可以

231
00:07:49,000 --> 00:07:50,000
但是起码

232
00:07:50,000 --> 00:07:52,000
你这个车要做一个什么

233
00:07:53,000 --> 00:07:54,000
备用电源

234
00:07:54,000 --> 00:07:56,000
保证能够下一次能点着

235
00:07:56,000 --> 00:07:56,000
对吧

236
00:07:56,000 --> 00:07:56,000
对

237
00:07:56,000 --> 00:08:00,000
你至少应该在电量即将消耗到

238
00:08:00,000 --> 00:08:02,000
只够一次或者两次打火的时候

239
00:08:02,000 --> 00:08:04,000
把车灯切断

240
00:08:04,000 --> 00:08:04,000
对

241
00:08:04,000 --> 00:08:07,000
结果 3 号它就还不管

242
00:08:07,000 --> 00:08:07,000
接着用

243
00:08:07,000 --> 00:08:09,000
用烧光为止

244
00:08:09,000 --> 00:08:12,000
我甚至有可能自动关灯的

245
00:08:12,000 --> 00:08:14,000
功能是一个选项

246
00:08:14,000 --> 00:08:14,000
去加钱

247
00:08:14,000 --> 00:08:15,000
没有钱就没有

248
00:08:16,000 --> 00:08:17,000
也不是没有可能

249
00:08:17,000 --> 00:08:18,000
因为很多德国厂商非常黑心

250
00:08:18,000 --> 00:08:20,000
就一定要这样

251
00:08:20,000 --> 00:08:21,000
对我讲个笑话好了

252
00:08:21,000 --> 00:08:22,000
反正已经说到很远了

253
00:08:22,000 --> 00:08:23,000
就

254
00:08:23,000 --> 00:08:26,000
我之前工作的公司有一个德国人

255
00:08:26,000 --> 00:08:28,000
是我们的门房大爷

256
00:08:30,000 --> 00:08:31,000
德国几乎每栋建筑都有一个人

257
00:08:31,000 --> 00:08:33,000
专门负责维护这栋建筑

258
00:08:33,000 --> 00:08:34,000
这种设施

259
00:08:34,000 --> 00:08:34,000
对

260
00:08:35,000 --> 00:08:35,000
Janitor

261
00:08:36,000 --> 00:08:37,000
Janitor 先生有一天跟我说

262
00:08:37,000 --> 00:08:39,000
他觉得德国的

263
00:08:40,000 --> 00:08:41,000
汽车厂商都是 up talk

264
00:08:41,000 --> 00:08:42,000
骗子

265
00:08:42,000 --> 00:08:44,000
说要价太高了

266
00:08:44,000 --> 00:08:45,000
然后他说

267
00:08:45,000 --> 00:08:46,000
我觉得日本车挺好

268
00:08:46,000 --> 00:08:48,000
我说您觉得哪辆日本车

269
00:08:48,000 --> 00:08:50,000
哪个日本车的牌子好呢

270
00:08:50,000 --> 00:08:51,000
他想想说

271
00:08:51,000 --> 00:08:52,000
现代

272
00:08:56,000 --> 00:08:57,000
不会差不多

273
00:08:57,000 --> 00:08:58,000
反正

274
00:08:58,000 --> 00:08:59,000
True story

275
00:08:59,000 --> 00:09:00,000
日本韩国傻傻分不清楚

276
00:09:00,000 --> 00:09:01,000
也还不错

277
00:09:01,000 --> 00:09:02,000
不过他这个事情

278
00:09:02,000 --> 00:09:03,000
我觉得反映了一个现实

279
00:09:03,000 --> 00:09:05,000
就是日系

280
00:09:05,000 --> 00:09:07,000
还有特别像韩系厂商

281
00:09:07,000 --> 00:09:08,000
在

282
00:09:08,000 --> 00:09:10,000
人性化这方面

283
00:09:10,000 --> 00:09:11,000
当然人性化就体现在

284
00:09:11,000 --> 00:09:13,000
就车内的一些电子装备

285
00:09:13,000 --> 00:09:14,000
一些

286
00:09:14,000 --> 00:09:15,000
怎么让你

287
00:09:15,000 --> 00:09:16,000
省心和舒坦的

288
00:09:16,000 --> 00:09:18,000
这么一些小配件上

289
00:09:18,000 --> 00:09:19,000
还做得挺好的

290
00:09:19,000 --> 00:09:20,000
本来其实这东西

291
00:09:20,000 --> 00:09:21,000
也花不了多少钱

292
00:09:21,000 --> 00:09:22,000
对吧

293
00:09:22,000 --> 00:09:23,000
比如说他给你搞个什么

294
00:09:23,000 --> 00:09:24,000
我想是最

295
00:09:24,000 --> 00:09:27,000
前几年还比较火的蓝牙

296
00:09:27,000 --> 00:09:28,000
你知道很多蓝牙是

297
00:09:28,000 --> 00:09:29,000
就现在的车

298
00:09:29,000 --> 00:09:30,000
可能都没有这个问题

299
00:09:30,000 --> 00:09:31,000
前几年的车

300
00:09:31,000 --> 00:09:32,000
蓝牙它是分两种的

301
00:09:32,000 --> 00:09:35,000
一种是就只能联手机打电话

302
00:09:36,000 --> 00:09:37,000
然后另外一种是可以

303
00:09:37,000 --> 00:09:38,000
联立体声音乐

304
00:09:39,000 --> 00:09:42,000
然后就有很多这种

305
00:09:42,000 --> 00:09:43,000
协议级别

306
00:09:43,000 --> 00:09:45,000
是不同的协议

307
00:09:45,000 --> 00:09:46,000
蓝牙那个叫什么

308
00:09:46,000 --> 00:09:47,000
协议级别

309
00:09:47,000 --> 00:09:49,000
对他会传输的要求会高一点

310
00:09:49,000 --> 00:09:50,000
但是这个东西成本

311
00:09:50,000 --> 00:09:51,000
也就是几美元的事情

312
00:09:51,000 --> 00:09:52,000
对吧

313
00:09:52,000 --> 00:09:52,000
对

314
00:09:52,000 --> 00:09:54,000
但是你会发现很多这种

315
00:09:54,000 --> 00:09:55,000
就是日韩系的厂商

316
00:09:55,000 --> 00:09:57,000
他会把这两个功能

317
00:09:57,000 --> 00:09:58,000
都给做进去

318
00:09:58,000 --> 00:09:59,000
就是 for free

319
00:09:59,000 --> 00:10:00,000
你就有了

320
00:10:00,000 --> 00:10:01,000
然后你看很多这种

321
00:10:01,000 --> 00:10:02,000
特别是德系

322
00:10:03,000 --> 00:10:03,000
他就会

323
00:10:04,000 --> 00:10:06,000
标配是没有蓝牙功能的

324
00:10:06,000 --> 00:10:08,000
然后稍微有点什么

325
00:10:08,000 --> 00:10:10,000
再加一千美元

326
00:10:10,000 --> 00:10:12,000
给你一个通话的功能

327
00:10:12,000 --> 00:10:13,000
再加一千美元

328
00:10:13,000 --> 00:10:16,000
给你一个播放多媒体

329
00:10:16,000 --> 00:10:17,000
蓝牙播放多媒体的功能

330
00:10:17,000 --> 00:10:18,000
你会觉得

331
00:10:19,000 --> 00:10:20,000
就是什么

332
00:10:21,000 --> 00:10:22,000
你会觉得这个就是完全

333
00:10:22,000 --> 00:10:23,000
你作为他的一个用户

334
00:10:23,000 --> 00:10:24,000
但很多人说

335
00:10:24,000 --> 00:10:27,000
买得起什么奔驰保马的人

336
00:10:27,000 --> 00:10:29,000
根本不 care 这种事情

337
00:10:29,000 --> 00:10:29,000
对吧

338
00:10:29,000 --> 00:10:29,000
但是

339
00:10:30,000 --> 00:10:31,000
你能

340
00:10:32,000 --> 00:10:33,000
对

341
00:10:33,000 --> 00:10:35,000
所以也无怪乎

342
00:10:35,000 --> 00:10:36,000
像北美你可以看到

343
00:10:36,000 --> 00:10:37,000
德国的例子就不说

344
00:10:37,000 --> 00:10:39,000
德国是个特殊的国家

345
00:10:39,000 --> 00:10:40,000
但你看北美的话

346
00:10:40,000 --> 00:10:41,000
街上跑的

347
00:10:41,000 --> 00:10:42,000
大部分还是日系车

348
00:10:42,000 --> 00:10:44,000
这个还是有一定的道理的

349
00:10:45,000 --> 00:10:45,000
对

350
00:10:46,000 --> 00:10:47,000
德国人

351
00:10:48,000 --> 00:10:48,000
对

352
00:10:49,000 --> 00:10:50,000
太果获了

353
00:10:50,000 --> 00:10:51,000
只能这么理解

354
00:10:53,000 --> 00:10:54,000
好

355
00:10:54,000 --> 00:10:55,000
两个 full up 之后

356
00:10:55,000 --> 00:10:57,000
我们转入今天的正题

357
00:10:57,000 --> 00:10:59,000
所以今天我们要讲的

358
00:10:59,000 --> 00:11:00,000
一个题目叫做

359
00:11:01,000 --> 00:11:04,000
Static Side Generators

360
00:11:04,000 --> 00:11:04,000
对

361
00:11:05,000 --> 00:11:06,000
静态网站生成器

362
00:11:07,000 --> 00:11:08,000
听起来就比上次的键盘

363
00:11:08,000 --> 00:11:10,000
要 Hot Call 一点

364
00:11:10,000 --> 00:11:13,000
为了弥补我们上次不够 Hot Call 的

365
00:11:13,000 --> 00:11:15,000
不过上期节目的反响好像挺好

366
00:11:15,000 --> 00:11:17,000
至少我女朋友听了很开心

367
00:11:17,000 --> 00:11:18,000
她说她要换新键盘

368
00:11:18,000 --> 00:11:20,000
哎呀惨了你

369
00:11:23,000 --> 00:11:27,000
所以什么是静态网站生成器

370
00:11:27,000 --> 00:11:29,000
这其实并不是所有人都知道这个概念

371
00:11:30,000 --> 00:11:30,000
对

372
00:11:31,000 --> 00:11:32,000
虽然我有点不住想要说

373
00:11:32,000 --> 00:11:34,000
不知道这个概念就不适合定

374
00:11:35,000 --> 00:11:38,000
我发现我们每期都因为种种原因

375
00:11:38,000 --> 00:11:39,000
流失了一部分观众

376
00:11:40,000 --> 00:11:40,000
听众

377
00:11:43,000 --> 00:11:44,000
对

378
00:11:44,000 --> 00:11:45,000
还是解释一下吧

379
00:11:45,000 --> 00:11:49,000
其实静态网站生成器的理念非常简单

380
00:11:49,000 --> 00:11:55,000
就是生成一些静态网络

381
00:11:56,000 --> 00:11:57,000
不对

382
00:11:57,000 --> 00:11:57,000
不对

383
00:11:57,000 --> 00:11:58,000
其实反了

384
00:11:58,000 --> 00:12:00,000
应该是先过来

385
00:12:00,000 --> 00:12:02,000
就这开始我们做个人主页的时候

386
00:12:02,000 --> 00:12:03,000
大家都应该还记得挺清楚

387
00:12:03,000 --> 00:12:07,000
就是用什么 Dreamweaver

388
00:12:07,000 --> 00:12:10,000
还是手工写一个 HTML 的代码

389
00:12:10,000 --> 00:12:13,000
然后秘密成 index.html

390
00:12:13,000 --> 00:12:16,000
或者 index.htm 这个文件

391
00:12:16,000 --> 00:12:20,000
然后放在网页服务器的某一个

392
00:12:21,000 --> 00:12:22,000
你的 user 目录里面

393
00:12:22,000 --> 00:12:26,000
然后那个时候大家很多人还没有私有服务器的概念

394
00:12:26,000 --> 00:12:28,000
很多人放到是一个共享的服务器

395
00:12:28,000 --> 00:12:32,000
有一个 tild 你的用户名这么一个目录下面

396
00:12:32,000 --> 00:12:32,000
对吧

397
00:12:32,000 --> 00:12:33,000
对

398
00:12:33,000 --> 00:12:34,000
波浪线

399
00:12:34,000 --> 00:12:35,000
然后用户名

400
00:12:35,000 --> 00:12:36,000
对

401
00:12:36,000 --> 00:12:38,000
然后你去访问王者

402
00:12:38,000 --> 00:12:39,000
比如说我记得我大学的时候

403
00:12:39,000 --> 00:12:43,000
比如说学校名字是 sysu.edu.sen

404
00:12:43,000 --> 00:12:46,000
然后有个斜杠 tild 我的选择的用户名

405
00:12:46,000 --> 00:12:50,000
访问那个地址就可以打开我的个人主页了

406
00:12:50,000 --> 00:12:55,000
即便现在还是有非常多的计算机大纽

407
00:12:55,000 --> 00:13:01,000
尤其是那些在学校里面拿教授

408
00:13:01,000 --> 00:13:03,000
叫 tenor

409
00:13:03,000 --> 00:13:04,000
终身教授

410
00:13:04,000 --> 00:13:07,000
终身教职奖

411
00:13:07,000 --> 00:13:08,000
终身教职奖金

412
00:13:08,000 --> 00:13:10,000
终身教职心

413
00:13:10,000 --> 00:13:11,000
就是终身

414
00:13:11,000 --> 00:13:12,000
这段抹去吧我求你

415
00:13:12,000 --> 00:13:13,000
这段抹去吧

416
00:13:13,000 --> 00:13:14,000
tenor position

417
00:13:14,000 --> 00:13:16,000
对 tenor position

418
00:13:16,000 --> 00:13:17,000
OK 重录

419
00:13:17,000 --> 00:13:22,000
即便现在很多大学的教授也在

420
00:13:22,000 --> 00:13:28,000
他们拿到他们的终身薪水的同时

421
00:13:28,000 --> 00:13:31,000
一直使用着大学的一个账号

422
00:13:31,000 --> 00:13:33,000
来做他们的个人主义

423
00:13:33,000 --> 00:13:35,000
比如我没记错的话

424
00:13:35,000 --> 00:13:38,000
Cnut 高德纳应该就是一直是这样的

425
00:13:38,000 --> 00:13:39,000
很多人都是吧

426
00:13:39,000 --> 00:13:41,000
就是在学术圈子很少

427
00:13:41,000 --> 00:13:43,000
就他会这样会显得比较

428
00:13:43,000 --> 00:13:45,000
我不知道可能成为一种约定俗成

429
00:13:45,000 --> 00:13:47,000
比较 time on it

430
00:13:47,000 --> 00:13:51,000
应该说你打开别人的那些新潮

431
00:13:51,000 --> 00:13:53,000
弄潮而来的网页

432
00:13:53,000 --> 00:13:54,000
一个一个美丽的跟神秘一样

433
00:13:54,000 --> 00:13:55,000
然后打开他们的网页

434
00:13:55,000 --> 00:13:58,000
我靠一股七成爱的互联网风格

435
00:13:58,000 --> 00:14:00,000
铺面而来

436
00:14:00,000 --> 00:14:00,000
对

437
00:14:00,000 --> 00:14:02,000
这是其实正儿八经的第一代的

438
00:14:02,000 --> 00:14:04,000
static site

439
00:14:04,000 --> 00:14:04,000
对

440
00:14:04,000 --> 00:14:07,000
但是他们不一定是用 generator generate 出来的

441
00:14:07,000 --> 00:14:08,000
可能是手

442
00:14:08,000 --> 00:14:10,000
他其实也有

443
00:14:10,000 --> 00:14:12,000
其实他是有用那个什么

444
00:14:12,000 --> 00:14:14,000
就是你说 Dreamweaver 算不算一个 generator

445
00:14:14,000 --> 00:14:15,000
算其实

446
00:14:15,000 --> 00:14:16,000
我觉得不算

447
00:14:16,000 --> 00:14:18,000
Dreamweaver 只能算一个

448
00:14:18,000 --> 00:14:18,000
editor

449
00:14:18,000 --> 00:14:20,000
other software

450
00:14:20,000 --> 00:14:21,000
好吧

451
00:14:21,000 --> 00:14:23,000
然后他会把这个网页放到服务器上

452
00:14:23,000 --> 00:14:24,000
就可以访问了

453
00:14:24,000 --> 00:14:27,000
然后你就访问那个网址

454
00:14:27,000 --> 00:14:27,000
千年不变

455
00:14:27,000 --> 00:14:28,000
都是那个网页长那个样

456
00:14:28,000 --> 00:14:29,000
就叫静态

457
00:14:29,000 --> 00:14:30,000
它不会变

458
00:14:31,000 --> 00:14:31,000
对

459
00:14:31,000 --> 00:14:33,000
这就是一个所谓的 static site

460
00:14:33,000 --> 00:14:37,000
然后后来的趋势是变成了动态网站

461
00:14:37,000 --> 00:14:39,000
这个大概是在

462
00:14:39,000 --> 00:14:40,000
00 年左右

463
00:14:41,000 --> 00:14:44,000
00 年到 10 年这段时间

464
00:14:44,000 --> 00:14:46,000
随着改革开放的这段生活

465
00:14:46,000 --> 00:14:49,000
以及互联网技术日新月异

466
00:14:49,000 --> 00:14:50,000
人们发现

467
00:14:50,000 --> 00:14:52,000
很多内容其实是可以

468
00:14:53,000 --> 00:14:54,000
当有人问的时候

469
00:14:54,000 --> 00:14:57,000
我才生成出来送给他看的

470
00:14:57,000 --> 00:15:00,000
其实这就是动态网站的根本意义

471
00:15:00,000 --> 00:15:02,000
就是动态网站上

472
00:15:02,000 --> 00:15:04,000
一般也许会有一个数据库

473
00:15:04,000 --> 00:15:05,000
然后有一堆程序

474
00:15:05,000 --> 00:15:08,000
然后有一堆一些写好的模板

475
00:15:08,000 --> 00:15:12,000
然后当一个来访客来访问你的网站的时候

476
00:15:12,000 --> 00:15:14,000
这些程序从数据库里面取出数据

477
00:15:14,000 --> 00:15:16,000
然后把这些数据填进模板里面

478
00:15:16,000 --> 00:15:18,000
然后动态生成一个网页

479
00:15:18,000 --> 00:15:20,000
对来给访客看

480
00:15:20,000 --> 00:15:21,000
这就是动态网站

481
00:15:21,000 --> 00:15:23,000
对这有些人就可能解释了

482
00:15:23,000 --> 00:15:24,000
什么是动态和静态

483
00:15:24,000 --> 00:15:27,000
但是最近这两三年

484
00:15:28,000 --> 00:15:31,000
以某什么叫 Jekyll 为代表的

485
00:15:32,000 --> 00:15:34,000
静态网站生成器又崛起了

486
00:15:34,000 --> 00:15:35,000
然后这个时候来无论你解释

487
00:15:35,000 --> 00:15:38,000
你觉得什么才叫一个生成器

488
00:15:41,000 --> 00:15:43,000
所谓生成器

489
00:15:43,000 --> 00:15:47,000
其实就是能够按照你预先定义的一组规则

490
00:15:47,000 --> 00:15:51,000
然后自动为你写好的一些

491
00:15:52,000 --> 00:15:55,000
通常是某种纯文文格式的内容

492
00:15:56,000 --> 00:15:58,000
生成一大堆静态网页

493
00:15:58,000 --> 00:16:02,000
然后就像最古老的那种静态网站一样

494
00:16:02,000 --> 00:16:03,000
供你可以

495
00:16:04,000 --> 00:16:06,000
让你可以不需要任何动态的程序

496
00:16:06,000 --> 00:16:09,000
然后放在网上某一个地方供人浏览的工具

497
00:16:09,000 --> 00:16:12,000
就叫做动态网站生成器

498
00:16:12,000 --> 00:16:14,000
所以

499
00:16:14,000 --> 00:16:16,000
这就从你个人的角度来讲

500
00:16:16,000 --> 00:16:17,000
你觉得

501
00:16:17,000 --> 00:16:20,000
你现在博客站点是用什么写的

502
00:16:20,000 --> 00:16:21,000
Wordpress 还是

503
00:16:22,000 --> 00:16:23,000
Jekyll

504
00:16:23,000 --> 00:16:23,000
Jekyll OK

505
00:16:23,000 --> 00:16:27,000
所以但是我记得你之前是用 Wordpress 写的

506
00:16:27,000 --> 00:16:27,000
对吧

507
00:16:27,000 --> 00:16:28,000
搬家之前

508
00:16:28,000 --> 00:16:31,000
我之前是用一个自己写的 CMS

509
00:16:31,000 --> 00:16:33,000
甚至不算 CMS

510
00:16:33,000 --> 00:16:35,000
是一个自己写的 Blog 系统

511
00:16:35,000 --> 00:16:36,000
是用 Lua 写的

512
00:16:36,000 --> 00:16:37,000
是动态的吗

513
00:16:37,000 --> 00:16:37,000
还是静态的

514
00:16:37,000 --> 00:16:39,000
是半动态

515
00:16:39,000 --> 00:16:40,000
因为它没有数据库

516
00:16:40,000 --> 00:16:42,000
就是文件里面拿吗

517
00:16:42,000 --> 00:16:42,000
对吧

518
00:16:42,000 --> 00:16:44,000
就是我有一堆纯文文件

519
00:16:44,000 --> 00:16:46,000
然后你访问的时候

520
00:16:46,000 --> 00:16:50,000
他把这些纯文文件和 Template 结合在一起

521
00:16:50,000 --> 00:16:50,000
OK

522
00:16:50,000 --> 00:16:52,000
所以这里有个很关键的问题

523
00:16:52,000 --> 00:16:54,000
我觉得可能一定要解释清楚

524
00:16:54,000 --> 00:16:55,000
也是很多人在纠结

525
00:16:55,000 --> 00:16:57,000
就是我相信听众里面

526
00:16:57,000 --> 00:16:58,000
如果你是程序员的话

527
00:16:58,000 --> 00:17:00,000
或多或少会有这种纠结的事情

528
00:17:01,000 --> 00:17:05,000
当初你是怎么决定要从一个动态

529
00:17:05,000 --> 00:17:07,000
或者是半动态的系统

530
00:17:07,000 --> 00:17:11,000
变成一个完全静态的博客来做呢

531
00:17:12,000 --> 00:17:15,000
其实我觉得在我身上很简单就是跟风

532
00:17:16,000 --> 00:17:18,000
OK

533
00:17:18,000 --> 00:17:20,000
或者是其实有两方面的原因

534
00:17:20,000 --> 00:17:22,000
一方面是跟风

535
00:17:22,000 --> 00:17:26,000
因为这个 Jco 这个东西是由 Tom Preston-Vaner 写的

536
00:17:26,000 --> 00:17:29,000
就是 GitHub 的创始人

537
00:17:29,000 --> 00:17:32,000
前创始人以及前总裁

538
00:17:32,000 --> 00:17:32,000
对

539
00:17:34,000 --> 00:17:35,000
因为他写的

540
00:17:35,000 --> 00:17:36,000
所以就引起了很多人的注意

541
00:17:36,000 --> 00:17:39,000
然后在程序员圈子里面就渐渐流畅开来

542
00:17:39,000 --> 00:17:42,000
然后几乎有一段时间是未然成风

543
00:17:42,000 --> 00:17:44,000
就好多好多人都换了

544
00:17:44,000 --> 00:17:46,000
然后一方面是因为这个

545
00:17:46,000 --> 00:17:52,000
另一方面是当时我想要把那个 Lua 的站点程序

546
00:17:52,000 --> 00:17:54,000
捡起来写的时候

547
00:17:54,000 --> 00:17:56,000
我发现 Lua 已经改的有点

548
00:17:56,000 --> 00:17:58,000
当时我依赖的那个包

549
00:17:58,000 --> 00:18:01,000
因为它 0.2 还是那个版本

550
00:18:01,000 --> 00:18:04,000
然后当我捡起来的时候已经变成 0.8 了

551
00:18:04,000 --> 00:18:07,000
然后就中间已经变得面目全非

552
00:18:07,000 --> 00:18:11,000
我所有几乎用到的函数全都变了

553
00:18:11,000 --> 00:18:12,000
OK

554
00:18:12,000 --> 00:18:14,000
然后再捡起来写

555
00:18:14,000 --> 00:18:16,000
我觉得有点力不同心

556
00:18:16,000 --> 00:18:18,000
就想说干脆转吧

557
00:18:18,000 --> 00:18:21,000
反正我的所有文章都已经是纯的

558
00:18:21,000 --> 00:18:24,000
就相当于一个半径开的状态在了

559
00:18:24,000 --> 00:18:27,000
所以插一个这里的教训是

560
00:18:27,000 --> 00:18:29,000
一定要做好版本管理对吧

561
00:18:30,000 --> 00:18:32,000
这版本管理没关系

562
00:18:32,000 --> 00:18:32,000
依赖管理

563
00:18:32,000 --> 00:18:34,000
Dependency Management

564
00:18:36,000 --> 00:18:39,000
这个教训是 Lua 要做好它的这个

565
00:18:39,000 --> 00:18:40,000
你自己也没有做好

566
00:18:40,000 --> 00:18:41,000
包系统

567
00:18:41,000 --> 00:18:42,000
你做好这个不就没有这事了吗

568
00:18:42,000 --> 00:18:44,000
我的最大的失误就在于

569
00:18:44,000 --> 00:18:47,000
我没有及时跟进每个依赖的酷的开发进度

570
00:18:47,000 --> 00:18:51,000
因为我并不是什么 Lua 痴迷者

571
00:18:51,000 --> 00:18:52,000
我是 Polyglot

572
00:18:52,000 --> 00:18:54,000
我要保持 Polyglot 的尊严

573
00:18:54,000 --> 00:18:59,000
我不能一直去死追某某一个原步方法

574
00:19:01,000 --> 00:19:02,000
怎么说呢

575
00:19:02,000 --> 00:19:04,000
就是如果一定要说有什么教训的话

576
00:19:04,000 --> 00:19:08,000
就是不要用太不成熟的技术

577
00:19:08,000 --> 00:19:10,000
尤其是在你想要做一个比较大的东西的时候

578
00:19:11,000 --> 00:19:13,000
我也不是说我的 Blog 系统有多大

579
00:19:13,000 --> 00:19:15,000
就是你想做一个比较

580
00:19:15,000 --> 00:19:17,000
长时间经营的东西

581
00:19:17,000 --> 00:19:19,000
所谓 Build to last 的东西的时候

582
00:19:19,000 --> 00:19:21,000
你不要用太新的技术

583
00:19:21,000 --> 00:19:24,000
尤其不要用版本号还是零段技术

584
00:19:24,000 --> 00:19:24,000
不然下场

585
00:19:24,000 --> 00:19:26,000
这就是为什么

586
00:19:26,000 --> 00:19:28,000
这就是为什么 Java 可以活到现在的原因

587
00:19:28,000 --> 00:19:31,000
就是很多很多很多很多

588
00:19:31,000 --> 00:19:33,000
希望能够长时间运行的网端会选择 Java

589
00:19:33,000 --> 00:19:35,000
因为 Java 它已经死了

590
00:19:35,000 --> 00:19:39,000
死的东西是不会变的

591
00:19:39,000 --> 00:19:42,000
人家不是马上要出 1.7 还是 1.8 了吗

592
00:19:42,000 --> 00:19:43,000
1.8

593
00:19:43,000 --> 00:19:45,000
已经不是 1.8 了

594
00:19:45,000 --> 00:19:46,000
就现在改从 Java

595
00:19:46,000 --> 00:19:47,000
你太过时了

596
00:19:47,000 --> 00:19:49,000
1.5 开始就直接要 Java 5

597
00:19:49,000 --> 00:19:50,000
然后 6 7 8

598
00:19:50,000 --> 00:19:51,000
现在是 8

599
00:19:51,000 --> 00:19:53,000
它不打算开始到 2 点几了对吧

600
00:19:54,000 --> 00:19:55,000
对

601
00:19:55,000 --> 00:19:55,000
OK

602
00:19:55,000 --> 00:19:57,000
Java 8 里面有 Generics

603
00:19:57,000 --> 00:19:58,000
不不不 sorry

604
00:19:58,000 --> 00:20:00,000
Java 8 里面有匿名函数 Lambda

605
00:20:01,000 --> 00:20:02,000
Too late

606
00:20:03,000 --> 00:20:05,000
Too late way too late

607
00:20:05,000 --> 00:20:05,000
OK

608
00:20:06,000 --> 00:20:09,000
所以在迁移过程中

609
00:20:09,000 --> 00:20:11,000
你觉得整个体验怎么样

610
00:20:12,000 --> 00:20:13,000
一开始挺好

611
00:20:13,000 --> 00:20:16,000
就是刚刚转到 Java 的时候挺好

612
00:20:16,000 --> 00:20:19,000
但是后来 Java 升了几次级

613
00:20:19,000 --> 00:20:20,000
我记得有一次是

614
00:20:22,000 --> 00:20:26,000
从 1.7 级

615
00:20:26,000 --> 00:20:30,000
从 E-Line 从 Ruby 1.7 级升到 1.8 级的时候

616
00:20:30,000 --> 00:20:33,000
不停的弹出一个 encoding 的错误

617
00:20:33,000 --> 00:20:35,000
我记得那个错误好像

618
00:20:35,000 --> 00:20:36,000
不止我一个人

619
00:20:36,000 --> 00:20:38,000
很多很多人都受到影响

620
00:20:39,000 --> 00:20:40,000
但是持续的时间很短

621
00:20:40,000 --> 00:20:41,000
但是那是第一次不爽

622
00:20:41,000 --> 00:20:44,000
然后但是随之之后就很多很多次不爽

623
00:20:45,000 --> 00:20:48,000
但你现在还坚持在用的 Jekyll 在上面跑吗

624
00:20:49,000 --> 00:20:50,000
主要是不怎么写了

625
00:20:50,000 --> 00:20:54,000
上一次写好像 Jekyll 还给了我一些脸

626
00:20:54,000 --> 00:20:55,000
面子还是跑起来了

627
00:20:55,000 --> 00:20:57,000
所以暂时还没有换

628
00:20:57,000 --> 00:21:00,000
诶等一下你现在这个这个 setup 是怎么样子的

629
00:21:00,000 --> 00:21:02,000
是在本机跑同步过去

630
00:21:02,000 --> 00:21:03,000
还是在服务机上架了这个

631
00:21:03,000 --> 00:21:05,000
我是

632
00:21:05,000 --> 00:21:08,000
把 repoxy 共享在 GitHub 上

633
00:21:08,000 --> 00:21:12,000
然后从远程一个 pool

634
00:21:13,000 --> 00:21:15,000
然后在远程 build 吧应该是

635
00:21:15,000 --> 00:21:18,000
这个 build 的是你自己服务器上 build 的

636
00:21:18,000 --> 00:21:19,000
还是那个 GitHub

637
00:21:19,000 --> 00:21:20,000
应该是在服务器上 build 的

638
00:21:20,000 --> 00:21:21,000
应该是在服务器上 build 的

639
00:21:22,000 --> 00:21:24,000
什么叫应该已经不进了

640
00:21:24,000 --> 00:21:26,000
对我已经很久没有写 blog 了

641
00:21:26,000 --> 00:21:29,000
我现在我之前 blog 总觉得

642
00:21:29,000 --> 00:21:31,000
再怎么样一个月一篇吧

643
00:21:31,000 --> 00:21:33,000
后来上次写什么一年以前

644
00:21:33,000 --> 00:21:37,000
上一篇和上上篇的间隔是一年

645
00:21:37,000 --> 00:21:38,000
不过你比我好

646
00:21:38,000 --> 00:21:40,000
我的 blog 就写过几篇

647
00:21:40,000 --> 00:21:42,000
然后再也没碰过

648
00:21:44,000 --> 00:21:46,000
对 blog 程序

649
00:21:46,000 --> 00:21:49,000
从最开始我是用什么

650
00:21:54,000 --> 00:21:57,000
blogger.cn 还是

651
00:21:57,000 --> 00:21:58,000
blogger 啊

652
00:21:58,000 --> 00:22:00,000
就 blogspot 对吧

653
00:22:00,000 --> 00:22:02,000
不是不是 blogspot

654
00:22:02,000 --> 00:22:03,000
我那个时候还没有 blogspot

655
00:22:03,000 --> 00:22:05,000
203 年的时候

656
00:22:05,000 --> 00:22:06,000
国内的国外的

657
00:22:06,000 --> 00:22:07,000
国内的

658
00:22:07,000 --> 00:22:09,000
第一刚开始当时在国外国内

659
00:22:09,000 --> 00:22:09,000
那个时候

660
00:22:10,000 --> 00:22:10,000
博客大巴

661
00:22:10,000 --> 00:22:11,000
用

662
00:22:12,000 --> 00:22:12,000
不是博客大巴

663
00:22:12,000 --> 00:22:14,000
博客大巴出来要晚多了

664
00:22:16,000 --> 00:22:17,000
我在荣树下写我东西

665
00:22:19,000 --> 00:22:20,000
对

666
00:22:20,000 --> 00:22:23,000
然后我逆青年啊

667
00:22:23,000 --> 00:22:23,000
就是

668
00:22:24,000 --> 00:22:25,000
太文艺了那个时候

669
00:22:25,000 --> 00:22:27,000
后来转到一个

670
00:22:28,000 --> 00:22:30,000
后来自己出了国之后

671
00:22:30,000 --> 00:22:32,000
转到一个自己搭建的

672
00:22:36,000 --> 00:22:37,000
不对不对

673
00:22:37,000 --> 00:22:38,000
出国之前先

674
00:22:38,000 --> 00:22:39,000
有一阵子转到了 DoNews

675
00:22:39,000 --> 00:22:41,000
你知道 DoNews 吗

676
00:22:41,000 --> 00:22:42,000
这个什么东西

677
00:22:42,000 --> 00:22:42,000
什么什么什么

678
00:22:42,000 --> 00:22:43,000
DoNews

679
00:22:43,000 --> 00:22:45,000
D-O-A-W-S

680
00:22:45,000 --> 00:22:46,000
以前那个 Cursor

681
00:22:47,000 --> 00:22:47,000
对对对

682
00:22:47,000 --> 00:22:49,000
Cursor 的上面写的

683
00:22:49,000 --> 00:22:52,000
然后那个 blog 程序是一个.net 写的

684
00:22:53,000 --> 00:22:54,000
而且当时我很喜欢它

685
00:22:56,000 --> 00:22:58,000
后来从那转到了

686
00:22:58,000 --> 00:23:00,000
一个自己搭建的 wordpress 上

687
00:23:00,000 --> 00:23:02,000
然后第一次有了自己的域名

688
00:23:02,000 --> 00:23:04,000
叫做 Biden Fenster

689
00:23:04,000 --> 00:23:05,000
Biden Fenster

690
00:23:05,000 --> 00:23:06,000
就是在窗子旁边

691
00:23:06,000 --> 00:23:08,000
当时是我和一个曾经很好的朋友一起写

692
00:23:09,000 --> 00:23:10,000
对

693
00:23:10,000 --> 00:23:11,000
然后后来

694
00:23:11,000 --> 00:23:12,000
我们两个分

695
00:23:12,000 --> 00:23:13,000
劳宴分飞之后

696
00:23:14,000 --> 00:23:16,000
分别单飞之后

697
00:23:16,000 --> 00:23:17,000
我搬到了另外一个

698
00:23:17,000 --> 00:23:18,000
就是现在的域名

699
00:23:18,000 --> 00:23:19,000
是吧

700
00:23:19,000 --> 00:23:19,000
Metafox

701
00:23:19,000 --> 00:23:21,000
一开始是 Metafox 的 Name

702
00:23:21,000 --> 00:23:22,000
因为.name 是

703
00:23:23,000 --> 00:23:24,000
supposed to be

704
00:23:24,000 --> 00:23:26,000
私人的

705
00:23:26,000 --> 00:23:26,000
对

706
00:23:26,000 --> 00:23:27,000
personal website

707
00:23:27,000 --> 00:23:29,000
但我发现没有人扭它

708
00:23:29,000 --> 00:23:29,000
基本上

709
00:23:29,000 --> 00:23:31,000
稍微有一点

710
00:23:31,000 --> 00:23:34,000
稍微有点钱的人都会去买.com

711
00:23:34,000 --> 00:23:35,000
.com 便宜啊

712
00:23:35,000 --> 00:23:37,000
.com 10 块钱一年

713
00:23:37,000 --> 00:23:39,000
对我现在就是 metafox.com

714
00:23:39,000 --> 00:23:40,000
你既然注册到了

715
00:23:40,000 --> 00:23:41,000
你当初干嘛去

716
00:23:42,000 --> 00:23:43,000
不

717
00:23:43,000 --> 00:23:46,000
我在我注册到 metafox.name 的

718
00:23:47,000 --> 00:23:50,000
三五年时间之内.com 其实一直都在

719
00:23:50,000 --> 00:23:51,000
但是我就是没有注册

720
00:23:52,000 --> 00:23:54,000
Epic Billiard

721
00:23:54,000 --> 00:23:55,000
对我只能这么理解

722
00:23:55,000 --> 00:23:56,000
他一直在等我

723
00:23:56,000 --> 00:23:58,000
然后我前两天上智功

724
00:23:58,000 --> 00:23:59,000
发现自己 2001 年的时候

725
00:23:59,000 --> 00:24:01,000
写的答案留当时的网址

726
00:24:02,000 --> 00:24:03,000
metafox.name

727
00:24:03,000 --> 00:24:05,000
还被人翻出来说

728
00:24:06,000 --> 00:24:07,000
链接差评

729
00:24:07,000 --> 00:24:09,000
因为断了

730
00:24:09,000 --> 00:24:10,000
你没有续费了吗

731
00:24:11,000 --> 00:24:13,000
.name 又没有在续费了

732
00:24:13,000 --> 00:24:14,000
就没有意义啊

733
00:24:14,000 --> 00:24:15,000
说实话

734
00:24:15,000 --> 00:24:16,000
没有人会记得

735
00:24:16,000 --> 00:24:17,000
这样不好啊

736
00:24:17,000 --> 00:24:18,000
不我记

737
00:24:18,000 --> 00:24:19,000
我觉得有一句谚语说什么

738
00:24:19,000 --> 00:24:21,000
你把东西传上网

739
00:24:21,000 --> 00:24:22,000
它就会永远不会消失

740
00:24:22,000 --> 00:24:23,000
这句话是错的

741
00:24:23,000 --> 00:24:24,000
我觉得太多太多东西

742
00:24:24,000 --> 00:24:26,000
这已经永远找到了

743
00:24:26,000 --> 00:24:26,000
对啊

744
00:24:27,000 --> 00:24:27,000
不过还好

745
00:24:27,000 --> 00:24:28,000
有个那个什么

746
00:24:29,000 --> 00:24:30,000
The Internet Archive

747
00:24:31,000 --> 00:24:32,000
可以帮你救

748
00:24:32,000 --> 00:24:33,000
Internet Time

749
00:24:33,000 --> 00:24:35,000
The so called Internet Time Machine

750
00:24:35,000 --> 00:24:35,000
对

751
00:24:35,000 --> 00:24:36,000
那可以帮你救回来

752
00:24:38,000 --> 00:24:38,000
你还在那儿

753
00:24:38,000 --> 00:24:39,000
从哪里去了

754
00:24:39,000 --> 00:24:39,000
有点远了

755
00:24:40,000 --> 00:24:40,000
说回来

756
00:24:40,000 --> 00:24:41,000
回到 J.com

757
00:24:41,000 --> 00:24:42,000
静态

758
00:24:42,000 --> 00:24:42,000
静态

759
00:24:43,000 --> 00:24:44,000
网站生成纪

760
00:24:44,000 --> 00:24:45,000
我在推特上封了一个人

761
00:24:45,000 --> 00:24:46,000
他的名字叫做

762
00:24:46,000 --> 00:24:47,000
Horse Manse

763
00:24:47,000 --> 00:24:48,000
就是

764
00:24:48,000 --> 00:24:50,000
Horse Ma

765
00:24:50,000 --> 00:24:51,000
然后 Mance

766
00:24:51,000 --> 00:24:52,000
不是 Mane

767
00:24:52,000 --> 00:24:53,000
而是 Mance

768
00:24:53,000 --> 00:24:54,000
就是 M-A-N-S

769
00:24:54,000 --> 00:24:56,000
我不知道这是复述还是故意恶搞

770
00:24:56,000 --> 00:24:58,000
总之他是一个非常有趣的人

771
00:24:58,000 --> 00:24:59,000
他的很多的

772
00:24:59,000 --> 00:25:01,000
他的很多推都

773
00:25:01,000 --> 00:25:02,000
非常恶搞

774
00:25:02,000 --> 00:25:03,000
你得看一阵子

775
00:25:03,000 --> 00:25:04,000
才明白他在讲什么

776
00:25:04,000 --> 00:25:06,000
但是看懂了之后就哈哈大笑

777
00:25:07,000 --> 00:25:08,000
这个 Horse Manse

778
00:25:08,000 --> 00:25:10,000
他在大概两周之前

779
00:25:10,000 --> 00:25:13,000
就是你们听到这一期 Podcast

780
00:25:13,000 --> 00:25:14,000
两周之前

781
00:25:14,000 --> 00:25:15,000
他发过这么一条推说

782
00:25:16,000 --> 00:25:18,000
It takes one Git repository

783
00:25:19,000 --> 00:25:20,000
two sub modules

784
00:25:20,000 --> 00:25:22,000
one virtual environment

785
00:25:22,000 --> 00:25:24,000
five direct Python dependencies

786
00:25:25,000 --> 00:25:27,000
one node virtual machine

787
00:25:27,000 --> 00:25:29,000
NVM 是什么

788
00:25:29,000 --> 00:25:32,000
node virtual machine

789
00:25:32,000 --> 00:25:34,000
好像就切换 node 的版本

790
00:25:34,000 --> 00:25:35,000
对 anyway

791
00:25:35,000 --> 00:25:37,000
one NVM environment

792
00:25:37,000 --> 00:25:38,000
and one node package

793
00:25:38,000 --> 00:25:40,000
to build my blog

794
00:25:41,000 --> 00:25:41,000
and oh

795
00:25:41,000 --> 00:25:45,000
oh and four Emacs packages

796
00:25:45,000 --> 00:25:46,000
被踩的

797
00:25:46,000 --> 00:25:47,000
对

798
00:25:47,000 --> 00:25:47,000
我相信

799
00:25:47,000 --> 00:25:48,000
他说的是 J.com

800
00:25:49,000 --> 00:25:50,000
我觉得他应该说的是 J.com

801
00:25:50,000 --> 00:25:52,000
就是他

802
00:25:52,000 --> 00:25:54,000
然后我就看了一遍他的 blog

803
00:25:54,000 --> 00:25:56,000
他的 blog 是很短

804
00:25:56,000 --> 00:25:58,000
然后最新一篇帖子

805
00:25:58,000 --> 00:26:00,000
好像是在讲这个 Emacs 的

806
00:26:01,000 --> 00:26:02,000
某个 package

807
00:26:02,000 --> 00:26:05,000
他可以在直接的 Emacs 里面写 blog

808
00:26:05,000 --> 00:26:08,000
然后一键就会把 blog 部署啊什么的

809
00:26:10,000 --> 00:26:12,000
这似乎是所有程序员的通病啊

810
00:26:12,000 --> 00:26:13,000
花了

811
00:26:14,000 --> 00:26:15,000
72 个小时

812
00:26:16,000 --> 00:26:18,000
连续不断的去琢磨出了

813
00:26:18,000 --> 00:26:19,000
最佳的写博客

814
00:26:19,000 --> 00:26:21,000
然后完成这个 publish

815
00:26:21,000 --> 00:26:23,000
这整个 workflow

816
00:26:23,000 --> 00:26:25,000
然后从此再也不写了

817
00:26:26,000 --> 00:26:27,000
对然后写一个 Hello world

818
00:26:27,000 --> 00:26:30,000
I will write my blog

819
00:26:30,000 --> 00:26:31,000
and that's it

820
00:26:32,000 --> 00:26:33,000
and that's it

821
00:26:35,000 --> 00:26:35,000
对

822
00:26:35,000 --> 00:26:36,000
所以你也是这样吗

823
00:26:36,000 --> 00:26:37,000
你转换成节目

824
00:26:37,000 --> 00:26:38,000
我不是这样的

825
00:26:38,000 --> 00:26:39,000
我不是这样的

826
00:26:39,000 --> 00:26:40,000
还写了几篇是吧

827
00:26:40,000 --> 00:26:42,000
我的 blog 还是有

828
00:26:42,000 --> 00:26:43,000
从

829
00:26:44,000 --> 00:26:46,000
可能最早的一篇是 2005 年到现在

830
00:26:46,000 --> 00:26:47,000
不过他

831
00:26:47,000 --> 00:26:48,000
积攒了一些

832
00:26:48,000 --> 00:26:51,000
不过他那个说了也反映了一个问题啊

833
00:26:51,000 --> 00:26:52,000
就是现在的

834
00:26:53,000 --> 00:26:54,000
很多这种

835
00:26:54,000 --> 00:26:56,000
非常 hippie 的这种软件的

836
00:26:57,000 --> 00:26:59,000
依赖真是太多了

837
00:26:59,000 --> 00:27:00,000
让我想起了

838
00:27:00,000 --> 00:27:03,000
曾经的所谓 Windows 7 的 DLL 地域

839
00:27:04,000 --> 00:27:07,000
就是一个新的软件

840
00:27:07,000 --> 00:27:09,000
可能要依赖其他几个 DLL

841
00:27:09,000 --> 00:27:11,000
这些 DLL 要依赖更多的 DLL

842
00:27:11,000 --> 00:27:13,000
然后所有 DLL 的版本

843
00:27:13,000 --> 00:27:15,000
都有区别

844
00:27:16,000 --> 00:27:19,000
对然后就会产生类似的状况

845
00:27:19,000 --> 00:27:21,000
对其实这个 Ruby 我自己

846
00:27:21,000 --> 00:27:22,000
并不会啊

847
00:27:22,000 --> 00:27:25,000
然后我不知道他的包管理系统怎么样

848
00:27:25,000 --> 00:27:26,000
但是我看听

849
00:27:26,000 --> 00:27:27,000
你太谦虚了

850
00:27:27,000 --> 00:27:28,000
你所谓的不会就是

851
00:27:28,000 --> 00:27:31,000
没有用他写过大型程序的意思吗

852
00:27:31,000 --> 00:27:31,000
我还真没用他

853
00:27:31,000 --> 00:27:33,000
用他写过任何东西去

854
00:27:33,000 --> 00:27:35,000
对这就是所谓不会是吧

855
00:27:35,000 --> 00:27:36,000
但是你

856
00:27:37,000 --> 00:27:39,000
你读起 Ruby 来感觉比我快

857
00:27:39,000 --> 00:27:40,000
我给你相信

858
00:27:40,000 --> 00:27:41,000
但那个语法很接近嘛

859
00:27:41,000 --> 00:27:43,000
也没什么特别难懂的地方啊

860
00:27:45,000 --> 00:27:46,000
所以还是懂的

861
00:27:46,000 --> 00:27:47,000
这个什么出了一旁通啊

862
00:27:47,000 --> 00:27:49,000
我觉得稍微编过一段时间程

863
00:27:49,000 --> 00:27:51,000
都能达到这个效果

864
00:27:51,000 --> 00:27:52,000
anyway 扯远了

865
00:27:52,000 --> 00:27:54,000
我想问的一点就是

866
00:27:54,000 --> 00:27:55,000
Ruby 的包管理系统

867
00:27:55,000 --> 00:27:57,000
我感觉还可以啊

868
00:27:57,000 --> 00:27:59,000
但那个 GEM 系统

869
00:28:01,000 --> 00:28:04,000
其实算是所有的包管理系统里面

870
00:28:04,000 --> 00:28:07,000
就是最好的机构之一了吧

871
00:28:08,000 --> 00:28:09,000
对我觉得这

872
00:28:09,000 --> 00:28:10,000
我觉得目前看

873
00:28:10,000 --> 00:28:12,000
就是在 scripting languages 里面

874
00:28:13,000 --> 00:28:14,000
GEM 不错

875
00:28:14,000 --> 00:28:16,000
然后那个就是 NPM

876
00:28:16,000 --> 00:28:17,000
Node 那个我觉得还挺好的

877
00:28:18,000 --> 00:28:21,000
然后 B 人最开始

878
00:28:21,000 --> 00:28:23,000
之前最喜欢的剿本语言

879
00:28:23,000 --> 00:28:24,000
Python 的包管理系统就是

880
00:28:24,000 --> 00:28:25,000
啊

881
00:28:26,000 --> 00:28:27,000
Piss off

882
00:28:28,000 --> 00:28:29,000
算了不伤感情

883
00:28:31,000 --> 00:28:32,000
不刺激大家了

884
00:28:32,000 --> 00:28:33,000
接着说这个事情

885
00:28:34,000 --> 00:28:37,000
为什么会需要这么多东西

886
00:28:38,000 --> 00:28:41,000
我觉得设计哲学就是

887
00:28:41,000 --> 00:28:43,000
Battery not included

888
00:28:45,000 --> 00:28:46,000
自备电池要

889
00:28:47,000 --> 00:28:49,000
对你得自备电池

890
00:28:49,000 --> 00:28:50,000
或者说它试图

891
00:28:50,000 --> 00:28:54,000
把中心的核心的功能做的尽量的

892
00:28:56,000 --> 00:28:57,000
简短

893
00:28:57,000 --> 00:28:59,000
导致它有非常多的外部依赖

894
00:29:01,000 --> 00:29:05,000
但是这样对使用和配置的话

895
00:29:05,000 --> 00:29:07,000
其实还是蛮大影响的我觉得

896
00:29:08,000 --> 00:29:09,000
对就是

897
00:29:10,000 --> 00:29:13,000
我觉得现在的 DevOps 越来越流行

898
00:29:14,000 --> 00:29:15,000
当然 DevOps

899
00:29:15,000 --> 00:29:18,000
我们可能也会专门找起来讲就是

900
00:29:18,000 --> 00:29:19,000
就一方面的原因

901
00:29:19,000 --> 00:29:22,000
也是现在的软件部署

902
00:29:22,000 --> 00:29:24,000
的确是越来越多的

903
00:29:25,000 --> 00:29:28,000
牵扯到了开发人员的 knowhow

904
00:29:28,000 --> 00:29:29,000
或者说你要

905
00:29:29,000 --> 00:29:30,000
想要开发一个东西

906
00:29:30,000 --> 00:29:32,000
你必须先要弄明白

907
00:29:32,000 --> 00:29:34,000
这个东西会怎样部署

908
00:29:34,000 --> 00:29:38,000
所以就从一个侧面推进了 DevOps

909
00:29:38,000 --> 00:29:41,000
这个交叉行业的涌现

910
00:29:42,000 --> 00:29:44,000
我觉得本来就是应该是立体的

911
00:29:44,000 --> 00:29:45,000
为什么要很

912
00:29:45,000 --> 00:29:47,000
以前很残忍的要分成

913
00:29:47,000 --> 00:29:49,000
Dev 和 Op 这两个工种呢

914
00:29:49,000 --> 00:29:51,000
就是很奇怪的一件事情

915
00:29:51,000 --> 00:29:53,000
我觉得是出于正交

916
00:29:53,000 --> 00:29:54,000
就是职能正交的考量

917
00:29:54,000 --> 00:29:56,000
因为你不能期待一个程序员

918
00:29:56,000 --> 00:29:59,000
每天写完程序还要去

919
00:29:59,000 --> 00:30:01,000
业里面 uncall

920
00:30:01,000 --> 00:30:03,000
随便随时静待着

921
00:30:03,000 --> 00:30:04,000
服务器要是出了问题

922
00:30:04,000 --> 00:30:07,000
还要爬下来去解服务器的问题

923
00:30:08,000 --> 00:30:09,000
而且人的经历毕竟是有限的

924
00:30:09,000 --> 00:30:13,000
我觉得 DevOps 的工作

925
00:30:13,000 --> 00:30:16,000
在你我看来好像没有那么复杂

926
00:30:16,000 --> 00:30:17,000
但其实很多人

927
00:30:19,000 --> 00:30:21,000
对于开发没有什么经验

928
00:30:21,000 --> 00:30:23,000
但是对于配置服务器的很在行

929
00:30:23,000 --> 00:30:24,000
而反过来也有

930
00:30:24,000 --> 00:30:26,000
也一样有很多人

931
00:30:28,000 --> 00:30:28,000
好吧

932
00:30:28,000 --> 00:30:29,000
这个事情留到下次

933
00:30:29,000 --> 00:30:31,000
专门讲这个事情再吐槽了

934
00:30:35,000 --> 00:30:36,000
但是这么多包的话

935
00:30:36,000 --> 00:30:38,000
你如果装在服务器上

936
00:30:38,000 --> 00:30:39,000
要遇到升级的话

937
00:30:39,000 --> 00:30:40,000
你怎么办

938
00:30:40,000 --> 00:30:41,000
比如上次你自己就遇到这个问题

939
00:30:43,000 --> 00:30:45,000
自己写的都会有这个问题

940
00:30:45,000 --> 00:30:46,000
然后你如果依赖别人的

941
00:30:47,000 --> 00:30:50,000
我觉得如果一个比较大的 Ruby 网站

942
00:30:50,000 --> 00:30:54,000
真的要面临依赖包升级的话

943
00:30:54,000 --> 00:30:55,000
可能是一个比较浩大的工程

944
00:30:55,000 --> 00:30:56,000
我的网站无所谓

945
00:30:56,000 --> 00:30:57,000
反正没有什么人看

946
00:30:58,000 --> 00:31:00,000
就直接把 NGX 停了就好了

947
00:31:00,000 --> 00:31:02,000
甚至 NGX 不用停

948
00:31:02,000 --> 00:31:04,000
看见屎就看见屎呗

949
00:31:05,000 --> 00:31:07,000
但是对于一个相对大的工程来说

950
00:31:07,000 --> 00:31:09,000
这可能是个比较大的问题

951
00:31:09,000 --> 00:31:10,000
OK

952
00:31:12,000 --> 00:31:15,000
说到这个静态网站升级

953
00:31:15,000 --> 00:31:18,000
其实我之前也在尝试

954
00:31:18,000 --> 00:31:20,000
然后试了这个接口

955
00:31:20,000 --> 00:31:21,000
大家可能不知道

956
00:31:21,000 --> 00:31:25,000
我还在维护 AppleForUs.com 那个网站

957
00:31:26,000 --> 00:31:27,000
有人不知道吗

958
00:31:27,000 --> 00:31:28,000
我不确定

959
00:31:28,000 --> 00:31:29,000
所以先声明一下

960
00:31:30,000 --> 00:31:35,000
我们 Rail 同学是 AppleForUs.com 的

961
00:31:35,000 --> 00:31:35,000
OP

962
00:31:35,000 --> 00:31:37,000
首席技术官

963
00:31:37,000 --> 00:31:37,000
OP

964
00:31:38,000 --> 00:31:40,000
然后我觉得上次 Lawrence 说什么

965
00:31:40,000 --> 00:31:43,000
Lawrence 在 IPD 工里面说我是

966
00:31:44,000 --> 00:31:46,000
Type is beautiful 的 CTO

967
00:31:46,000 --> 00:31:48,000
我听了差点把水噴出来

968
00:31:50,000 --> 00:31:52,000
算吧

969
00:31:53,000 --> 00:31:54,000
不算

970
00:31:54,000 --> 00:31:56,000
因为即便算也不能算

971
00:31:56,000 --> 00:31:58,000
因为什么叫即便算也不能算

972
00:31:58,000 --> 00:32:00,000
到底是算还是不算

973
00:32:00,000 --> 00:32:01,000
即便真的是 CTO

974
00:32:01,000 --> 00:32:03,000
也不能拿 CTO 这个头衔

975
00:32:03,000 --> 00:32:05,000
因为 Type is beautiful

976
00:32:05,000 --> 00:32:07,000
更像一个协作社群

977
00:32:07,000 --> 00:32:09,000
AppleForUs 也是

978
00:32:10,000 --> 00:32:13,000
但社群的存在其实是非常

979
00:32:13,000 --> 00:32:14,000
不是说非常

980
00:32:14,000 --> 00:32:20,000
但是在形式上是有排斥这种公司式的职务分配和管理的

981
00:32:20,000 --> 00:32:20,000
对

982
00:32:20,000 --> 00:32:22,000
那是开玩笑

983
00:32:22,000 --> 00:32:23,000
不用太当真

984
00:32:23,000 --> 00:32:24,000
我知道

985
00:32:24,000 --> 00:32:26,000
但我这次来回赠一款帽子

986
00:32:28,000 --> 00:32:30,000
然后那个站点

987
00:32:30,000 --> 00:32:34,000
其实最开始的时候是跑在一个叫做

988
00:32:34,000 --> 00:32:35,000
我不知道你还记不记得

989
00:32:35,000 --> 00:32:36,000
Moveable Type

990
00:32:37,000 --> 00:32:38,000
我当然记得

991
00:32:38,000 --> 00:32:39,000
我还记得

992
00:32:39,000 --> 00:32:42,000
是一个 Pearl 写的静态网站生存期

993
00:32:42,000 --> 00:32:43,000
对

994
00:32:43,000 --> 00:32:45,000
我还记得张亮还是谁

995
00:32:45,000 --> 00:32:52,000
曾经说过你们的贵网站的 Theme 创作是多么多么的复杂

996
00:32:52,000 --> 00:32:55,000
或者我反正这么一段描述你们

997
00:32:55,000 --> 00:32:56,000
一苦思甜的这么一段文字

998
00:32:56,000 --> 00:32:57,000
我还记得

999
00:32:57,000 --> 00:32:57,000
对

1000
00:32:57,000 --> 00:33:01,000
然后那个大概是 2010 年还是 2011 年的时候

1001
00:33:01,000 --> 00:33:02,000
然后当时

1002
00:33:02,000 --> 00:33:07,000
那是我刚刚就加入地下组织

1003
00:33:07,000 --> 00:33:09,000
然后他们就说

1004
00:33:09,000 --> 00:33:12,000
要不我们想想这个 Moveable Type 实在是救不活了

1005
00:33:12,000 --> 00:33:15,000
然后 Pearl 又是一个没人爱的孩子

1006
00:33:15,000 --> 00:33:15,000
对吧

1007
00:33:15,000 --> 00:33:21,000
对 Pearl 的消沉其实也可以专门找一期节目来做

1008
00:33:21,000 --> 00:33:23,000
说实话我觉得 Pearl 这个语言还挺有感情的

1009
00:33:24,000 --> 00:33:25,000
天哪

1010
00:33:25,000 --> 00:33:25,000
好吧

1011
00:33:25,000 --> 00:33:28,000
留待下次

1012
00:33:28,000 --> 00:33:28,000
这次我们专讲

1013
00:33:28,000 --> 00:33:30,000
是不是随着逐渐做节目

1014
00:33:30,000 --> 00:33:32,000
你发现我是一个有点变态的家伙

1015
00:33:32,000 --> 00:33:33,000
没有

1016
00:33:33,000 --> 00:33:34,000
这个什么萝卜青菜各有所爱

1017
00:33:34,000 --> 00:33:35,000
这个没什么

1018
00:33:37,000 --> 00:33:39,000
然后就把它

1019
00:33:39,000 --> 00:33:40,000
这当时也是随大流氓

1020
00:33:40,000 --> 00:33:42,000
跟你现在转接口情况实际上是一样

1021
00:33:42,000 --> 00:33:45,000
当时就是我们要做一个动态程序

1022
00:33:46,000 --> 00:33:47,000
然后就改成了 Wordpress

1023
00:33:48,000 --> 00:33:50,000
改成二年级好像是

1024
00:33:51,000 --> 00:33:54,000
我还记得爬上你们的站点去写一个

1025
00:33:54,000 --> 00:33:57,000
把所有的帖子导出来的工具

1026
00:33:59,000 --> 00:34:00,000
都是什么时候的事

1027
00:34:00,000 --> 00:34:00,000
对

1028
00:34:00,000 --> 00:34:01,000
很多年前

1029
00:34:01,000 --> 00:34:03,000
考古这件事情实在

1030
00:34:03,000 --> 00:34:06,000
然后很多年以后发现

1031
00:34:06,000 --> 00:34:09,000
Wordpress 很多插件的

1032
00:34:09,000 --> 00:34:11,000
经常升级的时候这样说不能用

1033
00:34:11,000 --> 00:34:14,000
然后就导致根本就不敢点那个升级

1034
00:34:14,000 --> 00:34:16,000
然后也其实说我去在那里维护

1035
00:34:16,000 --> 00:34:17,000
其实也就是办掉

1036
00:34:17,000 --> 00:34:19,000
让那个网站来能用

1037
00:34:19,000 --> 00:34:20,000
不要挂掉就好了

1038
00:34:20,000 --> 00:34:21,000
其实也没怎么过

1039
00:34:21,000 --> 00:34:21,000
不要挂掉

1040
00:34:21,000 --> 00:34:22,000
不要被注入

1041
00:34:22,000 --> 00:34:23,000
对

1042
00:34:23,000 --> 00:34:23,000
其实也没怎么

1043
00:34:23,000 --> 00:34:24,000
注入

1044
00:34:24,000 --> 00:34:26,000
有没有被注入我都不知道

1045
00:34:26,000 --> 00:34:27,000
Type is beautiful 曾经被注入

1046
00:34:27,000 --> 00:34:29,000
挺惨的

1047
00:34:29,000 --> 00:34:31,000
几乎每一个 PHP 文件

1048
00:34:31,000 --> 00:34:32,000
都遭到了那个

1049
00:34:33,000 --> 00:34:34,000
一段病毒的战刃

1050
00:34:34,000 --> 00:34:38,000
然后不得不让 Rex 上 SSH

1051
00:34:38,000 --> 00:34:39,000
去一点点删掉

1052
00:34:40,000 --> 00:34:42,000
天哪你这样你这样为难 Rex 那好吗

1053
00:34:43,000 --> 00:34:44,000
我不在电脑前

1054
00:34:44,000 --> 00:34:44,000
好吧

1055
00:34:46,000 --> 00:34:48,000
然后就变成一个所谓

1056
00:34:48,000 --> 00:34:50,000
年久失修的一个网站

1057
00:34:50,000 --> 00:34:52,000
然后就也没有办法去改

1058
00:34:52,000 --> 00:34:54,000
然后 PHP 也不想去碰了

1059
00:34:54,000 --> 00:34:56,000
PHP 是一个超丑的东西

1060
00:34:56,000 --> 00:34:58,000
要专门吐槽一起这个

1061
00:34:58,000 --> 00:34:58,000
对

1062
00:34:58,000 --> 00:34:59,000
It's pain in the ass

1063
00:34:59,000 --> 00:35:00,000
对

1064
00:35:00,000 --> 00:35:01,000
然后终于

1065
00:35:01,000 --> 00:35:03,000
如果原有 Pain in the ass 指数的话

1066
00:35:03,000 --> 00:35:05,000
PHP 绝对是超过十了

1067
00:35:08,000 --> 00:35:11,000
然后终于在上个月吧

1068
00:35:11,000 --> 00:35:12,000
不对

1069
00:35:12,000 --> 00:35:15,000
应该是前周还是上周我忘了

1070
00:35:15,000 --> 00:35:19,000
我终于下定决心把它整个导出来

1071
00:35:19,000 --> 00:35:20,000
做成一个静态博客

1072
00:35:20,000 --> 00:35:21,000
静态站点

1073
00:35:21,000 --> 00:35:22,000
这样的好处就是

1074
00:35:22,000 --> 00:35:23,000
我再也不用维护它了

1075
00:35:25,000 --> 00:35:27,000
所以其实出发点也蛮奇怪的

1076
00:35:27,000 --> 00:35:28,000
就是为了不维护

1077
00:35:28,000 --> 00:35:29,000
然后现在这个工作

1078
00:35:29,000 --> 00:35:30,000
出发点其实很正常

1079
00:35:30,000 --> 00:35:32,000
这不就是懒惰推进人类文明的进步吗

1080
00:35:32,000 --> 00:35:33,000
对

1081
00:35:33,000 --> 00:35:33,000
这个有道理

1082
00:35:34,000 --> 00:35:36,000
然后现在如果你现在去访问

1083
00:35:37,000 --> 00:35:38,000
apple 4 us.com

1084
00:35:38,000 --> 00:35:41,000
它现在是已经是有一个静态

1085
00:35:42,000 --> 00:35:44,000
就 Static Site Generator 生成的网站

1086
00:35:44,000 --> 00:35:45,000
它再也不是跑在 World Press

1087
00:35:45,000 --> 00:35:47,000
通过 PHP 跑的东西了

1088
00:35:47,000 --> 00:35:49,000
然后随之而来的好处就是

1089
00:35:49,000 --> 00:35:52,000
我可以把 Massico 也干掉了

1090
00:35:52,000 --> 00:35:53,000
不用维护 Massico 了

1091
00:35:53,000 --> 00:35:55,000
又少了一个东西可以管它

1092
00:35:55,000 --> 00:35:57,000
而且没有安全隐患

1093
00:35:57,000 --> 00:35:59,000
不再有什么安全隐患

1094
00:35:59,000 --> 00:36:00,000
只要 Ngine X 不出问题

1095
00:36:00,000 --> 00:36:02,000
然后 SSH 不出问题

1096
00:36:02,000 --> 00:36:04,000
我这个站点应该没有什么可以出问题的地方

1097
00:36:05,000 --> 00:36:05,000
对

1098
00:36:06,000 --> 00:36:08,000
然后顺便改了一下那个模仿样式

1099
00:36:08,000 --> 00:36:10,000
然后之前那个也已经太有点古老了

1100
00:36:12,000 --> 00:36:13,000
对

1101
00:36:13,000 --> 00:36:16,000
所以你是曾经用过 JCore 来生成 apple 4 us.com

1102
00:36:16,000 --> 00:36:17,000
还是说

1103
00:36:17,000 --> 00:36:17,000
对

1104
00:36:17,000 --> 00:36:19,000
我理解为你曾经使用 JCore

1105
00:36:20,000 --> 00:36:22,000
现在 apple 4 us.com 不是用 JCore 生成的

1106
00:36:22,000 --> 00:36:24,000
待会是用另外一款工具生成

1107
00:36:24,000 --> 00:36:24,000
待会讲

1108
00:36:24,000 --> 00:36:26,000
但是最开始的时候

1109
00:36:26,000 --> 00:36:28,000
想做这件事情其实已经想了很久了

1110
00:36:28,000 --> 00:36:32,000
第一次尝试把 Wordpress 改成静态的

1111
00:36:32,000 --> 00:36:32,000
就是用 JCore

1112
00:36:32,000 --> 00:36:33,000
然后是在

1113
00:36:34,000 --> 00:36:35,000
2013 年吧

1114
00:36:35,000 --> 00:36:36,000
去年的上半年应该是

1115
00:36:38,000 --> 00:36:39,000
然后发现一个很严重的问题

1116
00:36:40,000 --> 00:36:42,000
apple 4 us.com 一共历史

1117
00:36:42,000 --> 00:36:43,000
有从 07 年开始发的帖

1118
00:36:43,000 --> 00:36:45,000
我看了一下到现在为止

1119
00:36:46,000 --> 00:36:49,000
有差不多 2500 多篇帖子

1120
00:36:51,000 --> 00:36:52,000
你猜一下用 JCore 生成

1121
00:36:52,000 --> 00:36:55,000
就用 JCore 的 plugin free

1122
00:36:55,000 --> 00:36:56,000
就是什么插件都不装的情况下

1123
00:36:56,000 --> 00:36:58,000
生成一遍这个网站要多长时间

1124
00:37:00,000 --> 00:37:02,000
你的生成是指你已经把

1125
00:37:02,000 --> 00:37:04,000
MySQL 里面的资料

1126
00:37:04,000 --> 00:37:04,000
对对对

1127
00:37:04,000 --> 00:37:07,000
就是 build 一遍需要多长时间

1128
00:37:09,000 --> 00:37:10,000
5 分钟

1129
00:37:11,000 --> 00:37:11,000
差不多

1130
00:37:11,000 --> 00:37:15,000
在我的 2.6 GHz

1131
00:37:16,000 --> 00:37:18,000
core i 7 上

1132
00:37:18,000 --> 00:37:19,000
就是它可以

1133
00:37:20,000 --> 00:37:21,000
如果是单核

1134
00:37:21,000 --> 00:37:22,000
你是在本地 build

1135
00:37:22,000 --> 00:37:22,000
对

1136
00:37:22,000 --> 00:37:23,000
就在本地测试

1137
00:37:24,000 --> 00:37:25,000
本地 build 的就是它可以

1138
00:37:25,000 --> 00:37:28,000
好像 3.2 GHz 的 i 7 上

1139
00:37:28,000 --> 00:37:30,000
我 build 的一遍这个帖子需要 3 分钟

1140
00:37:31,000 --> 00:37:32,000
1 分钟还是 3 分钟

1141
00:37:32,000 --> 00:37:33,000
3 分钟好像是

1142
00:37:34,000 --> 00:37:36,000
真的相当长了

1143
00:37:36,000 --> 00:37:38,000
我想想这完全不能够忍

1144
00:37:39,000 --> 00:37:41,000
这个就好像那个 XCD 漫画一样

1145
00:37:41,000 --> 00:37:42,000
两个人在

1146
00:37:42,000 --> 00:37:44,000
踩在椅子上拼件

1147
00:37:44,000 --> 00:37:45,000
然后有人说 go back to work

1148
00:37:45,000 --> 00:37:47,000
然后其中一个人说 compiling

1149
00:37:47,000 --> 00:37:47,000
对

1150
00:37:47,000 --> 00:37:48,000
然后

1151
00:37:48,000 --> 00:37:49,000
对

1152
00:37:49,000 --> 00:37:50,000
oh go on

1153
00:37:51,000 --> 00:37:52,000
这你完全不能够

1154
00:37:53,000 --> 00:37:54,000
完全不能够想象

1155
00:37:54,000 --> 00:37:56,000
在你生成一个静态站点

1156
00:37:56,000 --> 00:37:57,000
需要这么久吗

1157
00:37:57,000 --> 00:37:59,000
然后觉得这个事情完全不能忍

1158
00:37:59,000 --> 00:38:00,000
后来

1159
00:38:01,000 --> 00:38:02,000
就去看了一下

1160
00:38:02,000 --> 00:38:02,000
一搜

1161
00:38:02,000 --> 00:38:04,000
发现这不是我一个人的问题

1162
00:38:04,000 --> 00:38:06,000
就很多人都有抱怨

1163
00:38:06,000 --> 00:38:08,000
然后追根溯源

1164
00:38:08,000 --> 00:38:09,000
不非就两点

1165
00:38:09,000 --> 00:38:11,000
一个是 ruby 这个语言

1166
00:38:11,000 --> 00:38:13,000
应该是本身太慢了

1167
00:38:13,000 --> 00:38:14,000
对

1168
00:38:14,000 --> 00:38:16,000
就它的官方实现太慢了

1169
00:38:16,000 --> 00:38:16,000
当然可能有快的

1170
00:38:16,000 --> 00:38:17,000
那 Jruby

1171
00:38:17,000 --> 00:38:19,000
但没试过这么奇异的

1172
00:38:19,000 --> 00:38:20,000
Jruby 比 Cruby 快吗

1173
00:38:20,000 --> 00:38:21,000
不可能吧

1174
00:38:21,000 --> 00:38:23,000
我猜应该是吧

1175
00:38:23,000 --> 00:38:24,000
hopefully 我不知道

1176
00:38:24,000 --> 00:38:25,000
我没试过

1177
00:38:25,000 --> 00:38:27,000
Jruby 比 Cruby 快

1178
00:38:27,000 --> 00:38:27,000
我不相信

1179
00:38:27,000 --> 00:38:28,000
好吧

1180
00:38:28,000 --> 00:38:29,000
我没试过

1181
00:38:29,000 --> 00:38:30,000
我只是在想

1182
00:38:30,000 --> 00:38:30,000
对

1183
00:38:30,000 --> 00:38:31,000
不对

1184
00:38:31,000 --> 00:38:32,000
那个官方 Ruby 应该是什么

1185
00:38:32,000 --> 00:38:33,000
Mruby

1186
00:38:33,000 --> 00:38:34,000
MRI

1187
00:38:34,000 --> 00:38:34,000
对

1188
00:38:34,000 --> 00:38:35,000
MRI

1189
00:38:35,000 --> 00:38:35,000
对

1190
00:38:35,000 --> 00:38:36,000
然后

1191
00:38:37,000 --> 00:38:38,000
我也没试过各种奇异组合

1192
00:38:38,000 --> 00:38:41,000
我就用 MacWestern 自带 ruby

1193
00:38:41,000 --> 00:38:42,000
然后去跑一下

1194
00:38:42,000 --> 00:38:43,000
然后我网上搜一下

1195
00:38:43,000 --> 00:38:44,000
发现这个是通病

1196
00:38:44,000 --> 00:38:45,000
我现在这个是肯定

1197
00:38:45,000 --> 00:38:47,000
就我自己是一己之力

1198
00:38:47,000 --> 00:38:48,000
是没得救了

1199
00:38:48,000 --> 00:38:49,000
就想想算了

1200
00:38:49,000 --> 00:38:51,000
然后后来我就想

1201
00:38:51,000 --> 00:38:53,000
那要不自己写一个吧

1202
00:38:53,000 --> 00:38:54,000
就没有这么麻烦

1203
00:38:54,000 --> 00:38:56,000
然后当时就用 Python

1204
00:38:56,000 --> 00:38:57,000
写了一个

1205
00:38:58,000 --> 00:38:59,000
我觉得这个应该所有程序员

1206
00:38:59,000 --> 00:39:01,000
应该是必经之路吧

1207
00:39:01,000 --> 00:39:02,000
就至少要写一到两个

1208
00:39:02,000 --> 00:39:04,000
这个 static site generator

1209
00:39:04,000 --> 00:39:05,000
才甘心的

1210
00:39:06,000 --> 00:39:08,000
对其实我应该是写过这么一关

1211
00:39:08,000 --> 00:39:11,000
就是在大学做网站的时候

1212
00:39:11,000 --> 00:39:13,000
但是当时那个时候没有意识到

1213
00:39:13,000 --> 00:39:15,000
这是一个 static site generator

1214
00:39:15,000 --> 00:39:17,000
但它实际上就是一个 static site generator

1215
00:39:17,000 --> 00:39:19,000
就是我们

1216
00:39:19,000 --> 00:39:22,000
对我在校网站打工的时候

1217
00:39:23,000 --> 00:39:26,000
要给当时的美工

1218
00:39:26,000 --> 00:39:29,000
当时美工还不是一个带有贬义的词

1219
00:39:29,000 --> 00:39:31,000
我不知道为什么现在好像说

1220
00:39:31,000 --> 00:39:32,000
设计师是美工

1221
00:39:32,000 --> 00:39:34,000
他们会感到被侮辱

1222
00:39:35,000 --> 00:39:36,000
但那个时候说美工

1223
00:39:36,000 --> 00:39:39,000
就是我们学校网站是真的招美工的

1224
00:39:39,000 --> 00:39:41,000
所以他们的职位就写美工

1225
00:39:41,000 --> 00:39:42,000
然后他们美工

1226
00:39:42,000 --> 00:39:44,000
那个时候流行切图

1227
00:39:44,000 --> 00:39:46,000
你对切图是什么概念

1228
00:39:46,000 --> 00:39:47,000
你对切图这个东西有概念

1229
00:39:47,000 --> 00:39:50,000
就是给一个 photoshop 的

1230
00:39:50,000 --> 00:39:50,000
对吧

1231
00:39:50,000 --> 00:39:54,000
psd 切成 table 布局的静态 html

1232
00:39:55,000 --> 00:40:00,000
然后当时他们想要在没有后端

1233
00:40:00,000 --> 00:40:03,000
工程师的协作的情况之下

1234
00:40:03,000 --> 00:40:05,000
自己测试一下

1235
00:40:05,000 --> 00:40:07,000
整个站点跑起来大概是什么样子

1236
00:40:07,000 --> 00:40:10,000
然后我就写了这么一个工具

1237
00:40:10,000 --> 00:40:12,000
把它们切好的静态图

1238
00:40:13,000 --> 00:40:15,000
利用某种到现在已经记不起来的

1239
00:40:15,000 --> 00:40:16,000
当时自己发明的

1240
00:40:16,000 --> 00:40:19,000
相当于 template engine 这么一个东西

1241
00:40:19,000 --> 00:40:22,000
把一些之前定好的什么网站介绍

1242
00:40:22,000 --> 00:40:25,000
学工部介绍之类的灌进去

1243
00:40:25,000 --> 00:40:27,000
然后生成这么一个静态的网站的结果

1244
00:40:28,000 --> 00:40:30,000
所以你其实也已经写过了

1245
00:40:30,000 --> 00:40:31,000
很多年以前

1246
00:40:31,000 --> 00:40:32,000
只不过

1247
00:40:32,000 --> 00:40:32,000
对

1248
00:40:32,000 --> 00:40:36,000
在不知不觉的情况下已经写了

1249
00:40:36,000 --> 00:40:37,000
而且是用 php 写的

1250
00:40:37,000 --> 00:40:38,000
天哪

1251
00:40:40,000 --> 00:40:41,000
人生的心境

1252
00:40:41,000 --> 00:40:43,000
曾经我也是软贩

1253
00:40:44,000 --> 00:40:45,000
所以这是你最写

1254
00:40:45,000 --> 00:40:47,000
然后你之后没有再写过另外的吗

1255
00:40:48,000 --> 00:40:49,000
我之后没有

1256
00:40:49,000 --> 00:40:52,000
因为那个时候我觉得这玩意没有什么技术排量

1257
00:40:52,000 --> 00:40:53,000
确实也是

1258
00:40:53,000 --> 00:40:57,000
然后后来唯一一个写过类似的东西

1259
00:40:57,000 --> 00:41:00,000
就是我说过的那个路

1260
00:41:00,000 --> 00:41:02,000
半自动化半动态的

1261
00:41:02,000 --> 00:41:04,000
半动态的这么一个 sms

1262
00:41:05,000 --> 00:41:06,000
blog system

1263
00:41:06,000 --> 00:41:06,000
对

1264
00:41:07,000 --> 00:41:10,000
然后这个 blog system 会把所有的那个

1265
00:41:11,000 --> 00:41:15,000
评论之类的也都生成静态的

1266
00:41:16,000 --> 00:41:17,000
静态的

1267
00:41:17,000 --> 00:41:18,000
搞不好还是 txt 各式

1268
00:41:18,000 --> 00:41:23,000
因为 Lua 的一个好处之一就是

1269
00:41:23,000 --> 00:41:25,000
你可以它的那个数组

1270
00:41:25,000 --> 00:41:26,000
就是它不是数组

1271
00:41:26,000 --> 00:41:27,000
就是 Lua 里面只有一种数字

1272
00:41:27,000 --> 00:41:28,000
table

1273
00:41:29,000 --> 00:41:30,000
然后这个 table 的语法

1274
00:41:30,000 --> 00:41:33,000
其实几乎是和 Jason 非常像

1275
00:41:33,000 --> 00:41:36,000
是几乎是半 human readable

1276
00:41:36,000 --> 00:41:40,000
所以我就把那个评论直接存成

1277
00:41:40,000 --> 00:41:42,000
它的原生数据果实

1278
00:41:42,000 --> 00:41:44,000
然后就每个评论就是一个 Lua 文件

1279
00:41:45,000 --> 00:41:46,000
然后人可以读机器也可以读

1280
00:41:46,000 --> 00:41:47,000
好有地方

1281
00:41:49,000 --> 00:41:52,000
其实我觉得你说的这个其实是正确

1282
00:41:52,000 --> 00:41:55,000
就是也许如果你在学研程

1283
00:41:55,000 --> 00:41:56,000
然后你有点不知道要干嘛

1284
00:41:56,000 --> 00:41:59,000
那你可以写一个静态网站生成器出来

1285
00:41:59,000 --> 00:42:04,000
这个其实就有点像一个所谓的 kata

1286
00:42:04,000 --> 00:42:10,000
就是就一本书叫做 Pragmatic Program

1287
00:42:10,000 --> 00:42:12,000
应该是这本书里面提出的这么一个概念

1288
00:42:12,000 --> 00:42:18,000
就是程序员应该准备几个任务

1289
00:42:18,000 --> 00:42:19,000
然后这些任务

1290
00:42:20,000 --> 00:42:23,000
可以供他不停的锻炼自己的编程技巧

1291
00:42:23,000 --> 00:42:25,000
然后这种任务就叫做 kata

1292
00:42:26,000 --> 00:42:27,000
或者叫 coran

1293
00:42:27,000 --> 00:42:28,000
然后有很多不同名字

1294
00:42:28,000 --> 00:42:32,000
但大意就是 kata 这个

1295
00:42:32,000 --> 00:42:37,000
kata 的日语就是日文的汉字形

1296
00:42:37,000 --> 00:42:38,000
就是形状的形

1297
00:42:38,000 --> 00:42:40,000
这个字叫做 kata

1298
00:42:40,000 --> 00:42:46,000
然后他这个词一般用来描述空手道

1299
00:42:46,000 --> 00:42:49,000
或者是书法之中的套路

1300
00:42:49,000 --> 00:42:52,000
或者招数或者定式围棋的定式

1301
00:42:52,000 --> 00:42:53,000
就可以叫做 kata

1302
00:42:54,000 --> 00:42:56,000
但是 programming kata

1303
00:42:56,000 --> 00:42:59,000
又和这些招式的 kata 不一样

1304
00:42:59,000 --> 00:43:00,000
就是 programming kata 要

1305
00:43:01,000 --> 00:43:03,000
比如说我自己比较喜欢的 kata

1306
00:43:03,000 --> 00:43:09,000
就是把实境之的阿拉伯数字

1307
00:43:09,000 --> 00:43:11,000
转成罗马数字

1308
00:43:12,000 --> 00:43:13,000
如果我遇到一门新的语言

1309
00:43:13,000 --> 00:43:17,000
我会想要先试试用这个语言做这件事

1310
00:43:17,000 --> 00:43:19,000
其实这就是 kata

1311
00:43:19,000 --> 00:43:21,000
我觉得写一个动态网

1312
00:43:21,000 --> 00:43:22,000
写一个静态网的支撑器

1313
00:43:22,000 --> 00:43:23,000
其实也可以做一种 kata

1314
00:43:23,000 --> 00:43:27,000
就是你可以用你刚刚学到语言去写这么一个东西

1315
00:43:27,000 --> 00:43:29,000
然后试着去解决你的问题

1316
00:43:29,000 --> 00:43:30,000
而且你可以写一个

1317
00:43:30,000 --> 00:43:32,000
然后扔了再写一个

1318
00:43:33,000 --> 00:43:34,000
如果你有兴趣的话

1319
00:43:35,000 --> 00:43:37,000
然后每一次尝试不同的解决方案

1320
00:43:37,000 --> 00:43:42,000
然后其实对于编程也是一个很大的助理

1321
00:43:42,000 --> 00:43:43,000
对

1322
00:43:43,000 --> 00:43:46,000
就是类似这种编程任务

1323
00:43:46,000 --> 00:43:48,000
还有很多比如说

1324
00:43:48,000 --> 00:43:50,000
你刚才想要写个静态网

1325
00:43:50,000 --> 00:43:51,000
那其实是一种

1326
00:43:51,000 --> 00:43:52,000
你可以尝试写个动态的

1327
00:43:53,000 --> 00:43:53,000
对吧

1328
00:43:54,000 --> 00:43:55,000
还可以做一些七七八八的事情

1329
00:43:55,000 --> 00:43:56,000
对写一个动态的

1330
00:43:56,000 --> 00:43:59,000
就更有时候可能会觉得更复难的

1331
00:43:59,000 --> 00:44:02,000
我当时觉得这应该更复难的

1332
00:44:02,000 --> 00:44:04,000
现在想想两个复难度其实差不多

1333
00:44:04,000 --> 00:44:07,000
只不过可能动态的需要你去掌握一些

1334
00:44:07,000 --> 00:44:10,000
比如说怎么样设立一个数据库

1335
00:44:10,000 --> 00:44:15,000
怎么样把所有的该装的东西装起来之类的

1336
00:44:15,000 --> 00:44:19,000
而静态网站生成器的任务相对来说就更纯粹一点

1337
00:44:20,000 --> 00:44:21,000
对

1338
00:44:22,000 --> 00:44:22,000
刚刚讲哪里了

1339
00:44:22,000 --> 00:44:23,000
对

1340
00:44:23,000 --> 00:44:25,000
说到后来我写了一个

1341
00:44:25,000 --> 00:44:26,000
你写了一个

1342
00:44:26,000 --> 00:44:28,000
你说什么用拍子写的

1343
00:44:29,000 --> 00:44:30,000
对啊用拍子写的

1344
00:44:30,000 --> 00:44:31,000
你是用拍子写的

1345
00:44:31,000 --> 00:44:31,000
对

1346
00:44:31,000 --> 00:44:32,000
然后用拍子写了一个

1347
00:44:32,000 --> 00:44:36,000
然后当时我看 Jekyll 生成 AppleFox 那网站

1348
00:44:36,000 --> 00:44:37,000
漫的一个最主要原因

1349
00:44:37,000 --> 00:44:38,000
它是单核的

1350
00:44:39,000 --> 00:44:41,000
就它只有一个进程在跑

1351
00:44:41,000 --> 00:44:43,000
然后我看 CPU 占用的时候

1352
00:44:43,000 --> 00:44:44,000
就在它 build 过程中

1353
00:44:44,000 --> 00:44:46,000
100%一直在那里卡住

1354
00:44:46,000 --> 00:44:50,000
然后我就想那能不能够多核呢

1355
00:44:50,000 --> 00:44:52,000
然后我在拍子写的时候

1356
00:44:52,000 --> 00:44:56,000
我就把就 Multi-Processing 那个模块

1357
00:44:56,000 --> 00:44:58,000
就用多核核来处理

1358
00:44:58,000 --> 00:44:59,000
然后后来做到是

1359
00:45:01,000 --> 00:45:04,000
build 一个 AppleFox 同样效果的站

1360
00:45:04,000 --> 00:45:06,000
大概是需要 10 秒左右

1361
00:45:07,000 --> 00:45:10,000
就在通常是开 4 个核的情况下

1362
00:45:10,000 --> 00:45:11,000
12 秒多少篇文章在这

1363
00:45:11,000 --> 00:45:12,000
2500 多

1364
00:45:13,000 --> 00:45:15,000
2500 多 12 秒

1365
00:45:15,000 --> 00:45:15,000
对

1366
00:45:15,000 --> 00:45:17,000
就是但我也没有做特别的优化

1367
00:45:17,000 --> 00:45:20,000
就只是简单的开了一下多核而已

1368
00:45:20,000 --> 00:45:21,000
Multi-Processing

1369
00:45:21,000 --> 00:45:22,000
对

1370
00:45:22,000 --> 00:45:25,000
因为这个可能要扯到另外 Global Interpreter Lock

1371
00:45:25,000 --> 00:45:26,000
那件事情

1372
00:45:26,000 --> 00:45:28,000
但是想留待下次

1373
00:45:29,000 --> 00:45:29,000
但是就

1374
00:45:29,000 --> 00:45:30,000
Time stop

1375
00:45:30,000 --> 00:45:31,000
对

1376
00:45:31,000 --> 00:45:33,000
有一个这么技巧可以去做

1377
00:45:33,000 --> 00:45:34,000
做到它可以 share

1378
00:45:34,000 --> 00:45:37,000
但是觉得还是不够快

1379
00:45:38,000 --> 00:45:41,000
就又放了那么小半年

1380
00:45:42,000 --> 00:45:44,000
然后直到前一段时间

1381
00:45:45,000 --> 00:45:48,000
今年开始我迷上写 Go 那个语言

1382
00:45:48,000 --> 00:45:49,000
然后前段时间发现

1383
00:45:49,000 --> 00:45:52,000
有人用 Go 写了一个竞赛生成器叫做

1384
00:45:53,000 --> 00:45:54,000
鱼狗

1385
00:45:54,000 --> 00:45:54,000
对

1386
00:45:54,000 --> 00:45:55,000
H-U-G-O

1387
00:45:55,000 --> 00:45:56,000
H 应该是不法语的吧

1388
00:45:56,000 --> 00:45:57,000
对吧

1389
00:45:57,000 --> 00:45:58,000
鱼狗

1390
00:45:58,000 --> 00:46:00,000
如果您按法语念法的鱼狗

1391
00:46:00,000 --> 00:46:01,000
就是鱼果

1392
00:46:01,000 --> 00:46:03,000
大作家鱼果的名字

1393
00:46:03,000 --> 00:46:03,000
对

1394
00:46:04,000 --> 00:46:06,000
然后我就试了一下

1395
00:46:07,000 --> 00:46:09,000
然后发现它

1396
00:46:09,000 --> 00:46:11,000
Build 整个 2000 多篇文章

1397
00:46:11,000 --> 00:46:13,000
只需要不到一秒钟在我电脑上

1398
00:46:13,000 --> 00:46:14,000
而且只用一个核

1399
00:46:15,000 --> 00:46:16,000
顿时就败了

1400
00:46:16,000 --> 00:46:17,000
顿时就给它贵了

1401
00:46:19,000 --> 00:46:19,000
是啊

1402
00:46:19,000 --> 00:46:21,000
然后我发现你现在已经是

1403
00:46:21,000 --> 00:46:22,000
成了半个 Go 的

1404
00:46:22,000 --> 00:46:23,000
叫什么

1405
00:46:23,000 --> 00:46:24,000
传福音者

1406
00:46:24,000 --> 00:46:25,000
Evangelist

1407
00:46:25,000 --> 00:46:26,000
对

1408
00:46:26,000 --> 00:46:28,000
传教士

1409
00:46:28,000 --> 00:46:29,000
对传教士

1410
00:46:30,000 --> 00:46:31,000
就确实性能

1411
00:46:31,000 --> 00:46:32,000
这个性能不得了

1412
00:46:32,000 --> 00:46:34,000
就其他的那些

1413
00:46:35,000 --> 00:46:35,000
不管

1414
00:46:35,000 --> 00:46:37,000
就其他用脚本语言写的

1415
00:46:37,000 --> 00:46:39,000
肯定跟这个效能是没有办法比的

1416
00:46:39,000 --> 00:46:40,000
而且

1417
00:46:41,000 --> 00:46:41,000
Go 这个

1418
00:46:41,000 --> 00:46:42,000
就鱼狗

1419
00:46:42,000 --> 00:46:43,000
就任何用 Go 写的程序

1420
00:46:43,000 --> 00:46:44,000
都有这个好处

1421
00:46:44,000 --> 00:46:46,000
它的部署相当容易

1422
00:46:46,000 --> 00:46:47,000
这跟它的那个

1423
00:46:48,000 --> 00:46:50,000
它最终生成的程序

1424
00:46:50,000 --> 00:46:51,000
是一个

1425
00:46:51,000 --> 00:46:52,000
Banary

1426
00:46:52,000 --> 00:46:55,000
单一一个不需要外部依赖

1427
00:46:55,000 --> 00:46:57,000
除了 Glib C

1428
00:46:58,000 --> 00:46:59,000
这个肯定每个系统都有的

1429
00:46:59,000 --> 00:47:01,000
它不需要任何外部依赖

1430
00:47:01,000 --> 00:47:01,000
不需要装依赖

1431
00:47:01,000 --> 00:47:03,000
然后你所要做的事情

1432
00:47:03,000 --> 00:47:05,000
就是说你要在服务器上部署

1433
00:47:05,000 --> 00:47:06,000
你就把那个 Banary

1434
00:47:06,000 --> 00:47:07,000
复制到服务器上

1435
00:47:08,000 --> 00:47:09,000
就搞定了

1436
00:47:10,000 --> 00:47:11,000
所以就不会出现

1437
00:47:11,000 --> 00:47:13,000
刚才你说那个人讲的什么

1438
00:47:13,000 --> 00:47:14,000
一个 Git repo

1439
00:47:14,000 --> 00:47:16,000
然后 2 SAR modules

1440
00:47:16,000 --> 00:47:17,000
那一堆乱七八糟的事情

1441
00:47:17,000 --> 00:47:19,000
就是相当简单容易

1442
00:47:19,000 --> 00:47:20,000
然后性能好

1443
00:47:21,000 --> 00:47:21,000
对

1444
00:47:21,000 --> 00:47:23,000
它从一个看起来

1445
00:47:23,000 --> 00:47:24,000
似模似样的这么一个

1446
00:47:25,000 --> 00:47:26,000
大工具

1447
00:47:27,000 --> 00:47:28,000
进演化到了

1448
00:47:28,000 --> 00:47:30,000
有点像一个 standalone 的

1449
00:47:30,000 --> 00:47:31,000
这么一个

1450
00:47:31,000 --> 00:47:34,000
就是待在 Local Bin 下面

1451
00:47:34,000 --> 00:47:35,000
一个单一工具

1452
00:47:35,000 --> 00:47:37,000
好像忽然之间

1453
00:47:37,000 --> 00:47:38,000
这么复杂的任务

1454
00:47:38,000 --> 00:47:40,000
变得这么简单

1455
00:47:40,000 --> 00:47:41,000
而且这么

1456
00:47:41,000 --> 00:47:42,000
Battery included

1457
00:47:42,000 --> 00:47:43,000
对

1458
00:47:43,000 --> 00:47:44,000
就感觉是蛮爽

1459
00:47:44,000 --> 00:47:45,000
对

1460
00:47:46,000 --> 00:47:48,000
当然这个也有代价的

1461
00:47:48,000 --> 00:47:49,000
代价就是

1462
00:47:49,000 --> 00:47:51,000
你丧失了灵活性

1463
00:47:51,000 --> 00:47:52,000
因为起码按目前

1464
00:47:52,000 --> 00:47:53,000
Go 的这种方法

1465
00:47:53,000 --> 00:47:55,000
它是没有办法动态加载

1466
00:47:55,000 --> 00:47:56,000
其他代码进去执行的

1467
00:47:56,000 --> 00:47:58,000
当然你要非要说

1468
00:47:58,000 --> 00:48:00,000
你要自己用 Go 实现一个

1469
00:48:00,000 --> 00:48:02,000
JS 的什么 interpreter

1470
00:48:02,000 --> 00:48:04,000
然后你再 load 的

1471
00:48:04,000 --> 00:48:05,000
JS 文件

1472
00:48:05,000 --> 00:48:06,000
或其他脚本文件进去

1473
00:48:06,000 --> 00:48:07,000
那是另外一说

1474
00:48:07,000 --> 00:48:09,000
但是就是标准的情况下

1475
00:48:09,000 --> 00:48:10,000
你是没有办法再

1476
00:48:10,000 --> 00:48:12,000
去扩展这个程序本身

1477
00:48:12,000 --> 00:48:14,000
所以这和刚才那些

1478
00:48:14,000 --> 00:48:15,000
像 Jekyll

1479
00:48:15,000 --> 00:48:16,000
还有包括

1480
00:48:16,000 --> 00:48:17,000
现在也可能有

1481
00:48:17,000 --> 00:48:19,000
就市面上

1482
00:48:19,000 --> 00:48:20,000
常见的

1483
00:48:20,000 --> 00:48:21,000
主流的都有可能

1484
00:48:21,000 --> 00:48:22,000
十几二十个

1485
00:48:22,000 --> 00:48:23,000
这种精彩战略生存器了吧

1486
00:48:24,000 --> 00:48:26,000
对我做功课的时候

1487
00:48:26,000 --> 00:48:27,000
找到一个网站

1488
00:48:27,000 --> 00:48:28,000
GitHub

1489
00:48:28,000 --> 00:48:29,000
上面的一个列表

1490
00:48:29,000 --> 00:48:32,000
叫做 Static Site Generators 的列表

1491
00:48:32,000 --> 00:48:33,000
上面

1492
00:48:34,000 --> 00:48:35,000
我数了一下

1493
00:48:35,000 --> 00:48:37,000
有 278 个

1494
00:48:37,000 --> 00:48:38,000
包括

1495
00:48:38,000 --> 00:48:39,000
YouGo 在内的

1496
00:48:39,000 --> 00:48:40,000
Static Site Generators

1497
00:48:40,000 --> 00:48:42,000
各种各样的语言写出来的

1498
00:48:42,000 --> 00:48:43,000
什么

1499
00:48:43,000 --> 00:48:44,000
连什么 Bash 都有

1500
00:48:44,000 --> 00:48:46,000
然后还有一些

1501
00:48:47,000 --> 00:48:48,000
可能严格意义上

1502
00:48:48,000 --> 00:48:50,000
不算是精彩战略生存器的东西

1503
00:48:50,000 --> 00:48:51,000
比如说 Library Load

1504
00:48:52,000 --> 00:48:53,000
它也算在里面了

1505
00:48:53,000 --> 00:48:56,000
你这个列表不好

1506
00:48:56,000 --> 00:48:58,000
对你有可比性不强

1507
00:48:58,000 --> 00:49:00,000
我待会有一个

1508
00:49:00,000 --> 00:49:01,000
有人专门做了一个

1509
00:49:01,000 --> 00:49:02,000
就因为市面上

1510
00:49:02,000 --> 00:49:04,000
有太多精彩战略生存器

1511
00:49:04,000 --> 00:49:05,000
然后你知道

1512
00:49:05,000 --> 00:49:07,000
你说的这个是带投票的是吧

1513
00:49:07,000 --> 00:49:08,000
我好像也看到了

1514
00:49:08,000 --> 00:49:10,000
它有一个很漂亮的功能的

1515
00:49:10,000 --> 00:49:11,000
还有一个简单的

1516
00:49:11,000 --> 00:49:12,000
一个就是论述判断

1517
00:49:12,000 --> 00:49:14,000
比如它用的什么模板语言

1518
00:49:14,000 --> 00:49:15,000
它这个什么样的方式

1519
00:49:15,000 --> 00:49:16,000
这个协议怎么样的

1520
00:49:16,000 --> 00:49:18,000
就是有人做了一个很漂亮的网站

1521
00:49:18,000 --> 00:49:20,000
去比较市面上

1522
00:49:20,000 --> 00:49:23,000
就是已有的这些精彩战略生存器

1523
00:49:23,000 --> 00:49:24,000
由此可见

1524
00:49:24,000 --> 00:49:26,000
这个什么选择困难症

1525
00:49:26,000 --> 00:49:28,000
严重到了什么样的程度

1526
00:49:30,000 --> 00:49:31,000
对

1527
00:49:31,000 --> 00:49:33,000
但是我就是我说的

1528
00:49:33,000 --> 00:49:34,000
刚另外一个战点上面

1529
00:49:34,000 --> 00:49:36,000
有一个投票功能

1530
00:49:36,000 --> 00:49:38,000
就是选你最喜欢的

1531
00:49:38,000 --> 00:49:41,000
或者说选你最熟悉的

1532
00:49:41,000 --> 00:49:42,000
精彩网站生存器

1533
00:49:42,000 --> 00:49:44,000
JCOW 远远领先于

1534
00:49:44,000 --> 00:49:45,000
所有其他的

1535
00:49:45,000 --> 00:49:47,000
他是笔组吗

1536
00:49:48,000 --> 00:49:48,000
对

1537
00:49:48,000 --> 00:49:49,000
就是这个

1538
00:49:49,000 --> 00:49:51,000
我们不翻来简单说一下

1539
00:49:51,000 --> 00:49:52,000
Tom Patterson

1540
00:49:52,000 --> 00:49:53,000
President

1541
00:49:53,000 --> 00:49:54,000
Vanen 这些八卦好了

1542
00:49:54,000 --> 00:49:54,000
你说

1543
00:49:54,000 --> 00:49:57,000
就是他是一个很知名

1544
00:49:57,000 --> 00:49:59,000
和很强大的 Ruby 程序

1545
00:49:59,000 --> 00:50:02,000
他创立了 GitHub

1546
00:50:02,000 --> 00:50:04,000
然后后来做了很长时间的 President

1547
00:50:05,000 --> 00:50:06,000
然后后来前两天

1548
00:50:06,000 --> 00:50:09,000
他发了一条推还是什么的

1549
00:50:09,000 --> 00:50:12,000
说 Goodbye GitHub

1550
00:50:12,000 --> 00:50:14,000
Hello Octolux Rift

1551
00:50:14,000 --> 00:50:18,000
就是他去做 VR 眼镜的

1552
00:50:18,000 --> 00:50:20,000
他去做 VR 眼镜的公司

1553
00:50:20,000 --> 00:50:22,000
Facebook 买下来了吗那一家

1554
00:50:23,000 --> 00:50:24,000
对

1555
00:50:24,000 --> 00:50:27,000
但是风传说八卦说

1556
00:50:27,000 --> 00:50:30,000
他离职并不是因为他想离职

1557
00:50:30,000 --> 00:50:32,000
而是因为他有一个女下属

1558
00:50:32,000 --> 00:50:35,000
状告他 harassment

1559
00:50:36,000 --> 00:50:36,000
你不知道吗

1560
00:50:36,000 --> 00:50:37,000
这个事情之间闹得很大的

1561
00:50:39,000 --> 00:50:40,000
这不过我知道

1562
00:50:41,000 --> 00:50:42,000
不然我干嘛要说呢

1563
00:50:42,000 --> 00:50:44,000
不不我只是来八卦一下

1564
00:50:44,000 --> 00:50:46,000
然后这故事其实还蛮那个的

1565
00:50:46,000 --> 00:50:49,000
而且说他和他的妻子

1566
00:50:49,000 --> 00:50:50,000
对

1567
00:50:50,000 --> 00:50:52,000
同时一起 harass 这个人

1568
00:50:52,000 --> 00:50:53,000
我觉得还挺夸张的

1569
00:50:55,000 --> 00:50:55,000
对

1570
00:50:55,000 --> 00:50:57,000
就之前有一个 GitHub 的女员工

1571
00:50:57,000 --> 00:50:59,000
去网上发了这个说

1572
00:50:59,000 --> 00:51:01,000
就说 Tom Patterson

1573
00:51:01,000 --> 00:51:02,000
和他老婆

1574
00:51:03,000 --> 00:51:04,000
一个是性别歧视吧

1575
00:51:04,000 --> 00:51:06,000
一个是然后还是什么 harassment

1576
00:51:06,000 --> 00:51:07,000
sexual harassment

1577
00:51:07,000 --> 00:51:10,000
说一个是基于性别歧视

1578
00:51:10,000 --> 00:51:14,000
然后另外一个是在办公室里边 stalked

1579
00:51:14,000 --> 00:51:15,000
就是跟踪他什么的

1580
00:51:19,000 --> 00:51:20,000
挺不可思议的

1581
00:51:20,000 --> 00:51:20,000
对

1582
00:51:20,000 --> 00:51:22,000
然后后来那个什么 Tom Patterson

1583
00:51:22,000 --> 00:51:24,000
Winner 就走路了嘛

1584
00:51:24,000 --> 00:51:25,000
然后他

1585
00:51:26,000 --> 00:51:28,000
我不知道他去了那个 Occulus Rift

1586
00:51:29,000 --> 00:51:33,000
他名义上说有一个调查组

1587
00:51:33,000 --> 00:51:35,000
调查团来查这件事情

1588
00:51:35,000 --> 00:51:41,000
但是这个被欺负的这个女员工

1589
00:51:41,000 --> 00:51:42,000
说其实根本就没有什么调查团

1590
00:51:42,000 --> 00:51:45,000
他们只是关起门来谈了谈

1591
00:51:45,000 --> 00:51:48,000
觉得这件事情对公司影响太坏

1592
00:51:48,000 --> 00:51:50,000
然后说 Tom 你还是走吧

1593
00:51:50,000 --> 00:51:51,000
然后 Tom 就走

1594
00:51:53,000 --> 00:51:54,000
对

1595
00:51:54,000 --> 00:51:55,000
anyway

1596
00:51:56,000 --> 00:51:58,000
J.Co 其实他

1597
00:51:58,000 --> 00:51:59,000
因为他是个鼻祖

1598
00:51:59,000 --> 00:52:01,000
然后他发明的就比较早

1599
00:52:01,000 --> 00:52:05,000
由此就生成了很多周边产品吧

1600
00:52:05,000 --> 00:52:06,000
或者说衍生产品

1601
00:52:06,000 --> 00:52:08,000
也是很多人用

1602
00:52:08,000 --> 00:52:10,000
比如说 J.Co Bootstrap

1603
00:52:11,000 --> 00:52:14,000
最开始是用 Twitter Bootstrap 的主题

1604
00:52:14,000 --> 00:52:15,000
去包装一个 J.Co

1605
00:52:16,000 --> 00:52:19,000
然后让你直接可以替换主题

1606
00:52:19,000 --> 00:52:20,000
不用自己去定制模板了

1607
00:52:20,000 --> 00:52:23,000
后来又出了一个产品叫做 Octopress

1608
00:52:24,000 --> 00:52:26,000
Octopress 出来的一段时间之内

1609
00:52:26,000 --> 00:52:28,000
好像我认识的所有

1610
00:52:28,000 --> 00:52:29,000
稍微有点

1611
00:52:30,000 --> 00:52:31,000
稍微有点名气

1612
00:52:31,000 --> 00:52:35,000
稍微能够坚持那么写两天 blog 的人

1613
00:52:35,000 --> 00:52:37,000
全都把他们的 World Press 换成 Octopress

1614
00:52:39,000 --> 00:52:39,000
对

1615
00:52:39,000 --> 00:52:41,000
就好像那个时候就好像你不用 Octopress

1616
00:52:41,000 --> 00:52:44,000
你就不是程序员那种感觉

1617
00:52:46,000 --> 00:52:51,000
所以 Octopress 就是 J.Co 的一个皮

1618
00:52:53,000 --> 00:52:55,000
对一个叫什么

1619
00:52:55,000 --> 00:53:00,000
加了插件的爱好者定制 Deluxe 白金版

1620
00:53:01,000 --> 00:53:01,000
我想起来了

1621
00:53:01,000 --> 00:53:02,000
对

1622
00:53:02,000 --> 00:53:05,000
我是用原生的 J.Co 裸奔

1623
00:53:05,000 --> 00:53:06,000
就啥也不装

1624
00:53:06,000 --> 00:53:08,000
能跑 BuildAppleFox 那样

1625
00:53:08,000 --> 00:53:10,000
那个站是一分钟

1626
00:53:10,000 --> 00:53:12,000
然后装了 OctopressBuild 出来是五分钟

1627
00:53:12,000 --> 00:53:14,000
然后我就果断的放弃了

1628
00:53:16,000 --> 00:53:16,000
对

1629
00:53:16,000 --> 00:53:19,000
而且 Octopress 我觉得最大的问题是很多

1630
00:53:21,000 --> 00:53:23,000
我相信姜姜也说过这问题

1631
00:53:23,000 --> 00:53:26,000
就是他的默认主题其实非常难看

1632
00:53:26,000 --> 00:53:30,000
就比那个和 World Press 默认主题有过之而无不及

1633
00:53:31,000 --> 00:53:32,000
但是非常多的人在用

1634
00:53:32,000 --> 00:53:36,000
所以就让人觉得很汉言

1635
00:53:36,000 --> 00:53:38,000
默认主题没有哪个好看的吧

1636
00:53:38,000 --> 00:53:39,000
我觉得

1637
00:53:40,000 --> 00:53:42,000
Designed by Programmer

1638
00:53:42,000 --> 00:53:43,000
默认主题有好看的

1639
00:53:43,000 --> 00:53:44,000
我觉得

1640
00:53:44,000 --> 00:53:48,000
哪个什么 SMS 软件有个默认主题好看的

1641
00:53:50,000 --> 00:53:50,000
哎呀

1642
00:53:50,000 --> 00:53:52,000
我回去做两天功课

1643
00:53:52,000 --> 00:53:53,000
我再给你答吧

1644
00:53:53,000 --> 00:53:54,000
你肯定想不出来

1645
00:53:55,000 --> 00:53:55,000
Anyway

1646
00:53:55,000 --> 00:53:57,000
反正

1647
00:53:57,000 --> 00:53:57,000
我指导

1648
00:53:58,000 --> 00:54:01,000
苹果的网站生成器叫什么

1649
00:54:03,000 --> 00:54:03,000
iWeb

1650
00:54:04,000 --> 00:54:05,000
对

1651
00:54:05,000 --> 00:54:06,000
iWeb 不错

1652
00:54:08,000 --> 00:54:10,000
做一个果粉不敢反驳了

1653
00:54:10,000 --> 00:54:11,000
好吧

1654
00:54:11,000 --> 00:54:12,000
无力

1655
00:54:15,000 --> 00:54:15,000
不过你还别说

1656
00:54:15,000 --> 00:54:16,000
真有用

1657
00:54:16,000 --> 00:54:18,000
我之前就刚刚讲了

1658
00:54:18,000 --> 00:54:20,000
我的导师

1659
00:54:21,000 --> 00:54:22,000
他自己有一个

1660
00:54:23,000 --> 00:54:25,000
在学校挂的个人网站要给学生

1661
00:54:25,000 --> 00:54:26,000
他要教那门课

1662
00:54:26,000 --> 00:54:28,000
他要布置一些作业

1663
00:54:28,000 --> 00:54:29,000
或者一些什么相关的资料

1664
00:54:29,000 --> 00:54:30,000
他会放上去

1665
00:54:30,000 --> 00:54:32,000
他之前还真的是用 iWeb 写的

1666
00:54:33,000 --> 00:54:36,000
我相信其实个人主页生成器

1667
00:54:36,000 --> 00:54:39,000
就个人主页创作软件这种东西

1668
00:54:39,000 --> 00:54:40,000
一直都有市场

1669
00:54:40,000 --> 00:54:42,000
就像早期微软的

1670
00:54:42,000 --> 00:54:44,000
那个 Front page 也是想要

1671
00:54:44,000 --> 00:54:45,000
抓到这一块

1672
00:54:45,000 --> 00:54:47,000
但是没有一个能做的

1673
00:54:47,000 --> 00:54:49,000
真正让不懂电脑的人

1674
00:54:49,000 --> 00:54:50,000
也可以做出一个漂亮的网页来

1675
00:54:50,000 --> 00:54:52,000
即便 iWeb 也是有这个问题

1676
00:54:52,000 --> 00:54:52,000
对

1677
00:54:53,000 --> 00:54:56,000
可能最接近的应该是那个什么叫

1678
00:54:56,000 --> 00:54:57,000
就叫 Front page 吧

1679
00:54:59,000 --> 00:54:59,000
就从一

1680
00:54:59,000 --> 00:55:00,000
你说微软的 Front page

1681
00:55:00,000 --> 00:55:02,000
就从易用心的角度来讲

1682
00:55:02,000 --> 00:55:03,000
因为据说

1683
00:55:03,000 --> 00:55:04,000
我不觉得

1684
00:55:04,000 --> 00:55:05,000
对肯定但是不好用

1685
00:55:05,000 --> 00:55:07,000
但是就算在所有不好用的里面

1686
00:55:07,000 --> 00:55:10,000
它是还算还可以的那种

1687
00:55:10,000 --> 00:55:11,000
就是

1688
00:55:11,000 --> 00:55:13,000
the least worst

1689
00:55:14,000 --> 00:55:15,000
对

1690
00:55:15,000 --> 00:55:15,000
鸡蛋里面

1691
00:55:15,000 --> 00:55:18,000
锅子里面把将军弄完

1692
00:55:18,000 --> 00:55:18,000
只能选他

1693
00:55:18,000 --> 00:55:19,000
对

1694
00:55:20,000 --> 00:55:24,000
然后因为就很多什么办公室的那种

1695
00:55:24,000 --> 00:55:25,000
小秘书

1696
00:55:25,000 --> 00:55:26,000
不是老秘书

1697
00:55:26,000 --> 00:55:27,000
就是大妈

1698
00:55:27,000 --> 00:55:30,000
她可能学学也能搞懂

1699
00:55:30,000 --> 00:55:32,000
然后能做出一个页面来

1700
00:55:32,000 --> 00:55:33,000
虽然不好看

1701
00:55:33,000 --> 00:55:35,000
但起码该有的信息都有了

1702
00:55:35,000 --> 00:55:36,000
你就凑合着用吧

1703
00:55:37,000 --> 00:55:37,000
对

1704
00:55:37,000 --> 00:55:39,000
大妈 Userability

1705
00:55:39,000 --> 00:55:40,000
你这是承诺一个软件

1706
00:55:40,000 --> 00:55:42,000
易用性的非常重要的标准

1707
00:55:42,000 --> 00:55:43,000
对

1708
00:55:43,000 --> 00:55:46,000
我记得早期苹果还在那边吹嘘

1709
00:55:46,000 --> 00:55:46,000
也不是吹嘘

1710
00:55:46,000 --> 00:55:48,000
就是那个时候的确是实情

1711
00:55:48,000 --> 00:55:51,000
就是七老八十的大妈也可以

1712
00:55:51,000 --> 00:55:53,000
不经指引就使用 iPad

1713
00:55:53,000 --> 00:55:55,000
可是现在苹果已经在 iPad 里面

1714
00:55:55,000 --> 00:55:59,000
内置什么 iOS Tips 这种 2 D 程序了

1715
00:55:59,000 --> 00:56:02,000
它已经投降了

1716
00:56:02,000 --> 00:56:03,000
它已经不再简单了

1717
00:56:03,000 --> 00:56:06,000
任何系统复杂的程度

1718
00:56:06,000 --> 00:56:09,000
都不可能再劳太婆又死奔了

1719
00:56:09,000 --> 00:56:09,000
对

1720
00:56:09,000 --> 00:56:11,000
不过 Front Page 它好用

1721
00:56:11,000 --> 00:56:13,000
其实有一个最核心的一点

1722
00:56:13,000 --> 00:56:15,000
就是它也不叫好用

1723
00:56:15,000 --> 00:56:17,000
它应该是 Pick it back

1724
00:56:17,000 --> 00:56:18,000
到另外一个东西上面

1725
00:56:18,000 --> 00:56:18,000
就是那个 word

1726
00:56:19,000 --> 00:56:20,000
因为很多人都学

1727
00:56:20,000 --> 00:56:22,000
就如果你是在办公室工作

1728
00:56:22,000 --> 00:56:23,000
word 是你跑不掉

1729
00:56:23,000 --> 00:56:24,000
一定要用到一个东西

1730
00:56:24,000 --> 00:56:26,000
然后那个 Front Page

1731
00:56:26,000 --> 00:56:27,000
它做得很像那个 word

1732
00:56:27,000 --> 00:56:30,000
所以其实就学习门槛肯定还是有的

1733
00:56:30,000 --> 00:56:32,000
但是因为你学过 word 之后

1734
00:56:32,000 --> 00:56:33,000
再转过来就没有那么逗了

1735
00:56:33,000 --> 00:56:36,000
对当时让我非常感动

1736
00:56:36,000 --> 00:56:39,000
现在想起来非常汗颜的一件事情

1737
00:56:39,000 --> 00:56:43,000
是我发现当时我装了 Dreamweaver

1738
00:56:43,000 --> 00:56:44,000
装了 Front Page

1739
00:56:44,000 --> 00:56:46,000
还装了另外一个什么东西

1740
00:56:46,000 --> 00:56:51,000
应该是 Adobe 的 Go Live

1741
00:56:51,000 --> 00:56:52,000
是叫 Go Live

1742
00:56:52,000 --> 00:56:53,000
什么东西

1743
00:56:56,000 --> 00:56:58,000
不行这个东西我一样搜一下

1744
00:56:58,000 --> 00:57:01,000
就是 Adobe 曾经在收购这个

1745
00:57:01,000 --> 00:57:02,000
Micromedia

1746
00:57:02,000 --> 00:57:07,000
Micromedia 之前有一款自己的那个

1747
00:57:07,000 --> 00:57:08,000
叫什么

1748
00:57:09,000 --> 00:57:10,000
主页创作软件

1749
00:57:10,000 --> 00:57:12,000
对 Adobe Go Live

1750
00:57:12,000 --> 00:57:14,000
这个东西实际上

1751
00:57:14,000 --> 00:57:15,000
我在很长一段时间里面

1752
00:57:15,000 --> 00:57:17,000
都认为它比 Dreamweaver 好用太多了

1753
00:57:18,000 --> 00:57:20,000
但是在那时候我

1754
00:57:20,000 --> 00:57:23,000
在 Front Page

1755
00:57:23,000 --> 00:57:23,000
Go Live

1756
00:57:23,000 --> 00:57:26,000
还有 Dreamweaver 里面同时做了一件事情

1757
00:57:26,000 --> 00:57:28,000
就是我想把一行字

1758
00:57:28,000 --> 00:57:30,000
缩进一段距离

1759
00:57:31,000 --> 00:57:35,000
还是做想要达成某一个目的的时候

1760
00:57:35,000 --> 00:57:37,000
我发现长按着空格键

1761
00:57:37,000 --> 00:57:38,000
并不能让字

1762
00:57:38,000 --> 00:57:40,000
在所有编辑器里面

1763
00:57:40,000 --> 00:57:41,000
长按空格键

1764
00:57:41,000 --> 00:57:44,000
并不能让字移动到我想要的地方

1765
00:57:44,000 --> 00:57:45,000
Front Page 可以

1766
00:57:45,000 --> 00:57:47,000
只有 Front Page 可以

1767
00:57:47,000 --> 00:57:49,000
因为在里面插入一大堆

1768
00:57:49,000 --> 00:57:50,000
NBSP

1769
00:57:50,000 --> 00:57:51,000
Non-Breakable Space

1770
00:57:53,000 --> 00:57:54,000
所以看意用性还是很不一样

1771
00:57:54,000 --> 00:57:55,000
Intuitive

1772
00:57:55,000 --> 00:57:56,000
对

1773
00:57:57,000 --> 00:57:58,000
Very intuitive

1774
00:57:58,000 --> 00:57:59,000
对我要说

1775
00:57:59,000 --> 00:58:00,000
还是要夸他一下

1776
00:58:02,000 --> 00:58:05,000
在那些久远的想要砸电脑的年代

1777
00:58:05,000 --> 00:58:07,000
有这样让人耳目一新的软件出现

1778
00:58:07,000 --> 00:58:10,000
真的挺感动

1779
00:58:10,000 --> 00:58:12,000
微小而确定的幸福

1780
00:58:15,000 --> 00:58:16,000
要扯远了

1781
00:58:16,000 --> 00:58:18,000
刚才扯了那几个

1782
00:58:18,000 --> 00:58:22,000
Python 其实还有一个比较知名的生成机

1783
00:58:22,000 --> 00:58:23,000
叫做 Pelikan

1784
00:58:23,000 --> 00:58:24,000
这个应该是在

1785
00:58:24,000 --> 00:58:25,000
对

1786
00:58:25,000 --> 00:58:27,000
它最早应该有个叫 Hide

1787
00:58:27,000 --> 00:58:27,000
对不对

1788
00:58:29,000 --> 00:58:30,000
对

1789
00:58:30,000 --> 00:58:33,000
Hide 是所谓 Jekyll's Evil Twin

1790
00:58:33,000 --> 00:58:33,000
对

1791
00:58:33,000 --> 00:58:36,000
几乎是仿 Jekyll 做的

1792
00:58:36,000 --> 00:58:38,000
对就有一个是一个印度人做的东西

1793
00:58:38,000 --> 00:58:39,000
是吗

1794
00:58:39,000 --> 00:58:39,000
嗯

1795
00:58:40,000 --> 00:58:41,000
然后还有

1796
00:58:41,000 --> 00:58:41,000
对

1797
00:58:41,000 --> 00:58:44,000
那 Pelikan 是一个法国人

1798
00:58:44,000 --> 00:58:49,000
叫做 Alexis Métairou

1799
00:58:49,000 --> 00:58:50,000
Monsur Métairou

1800
00:58:50,000 --> 00:58:51,000
对

1801
00:58:51,000 --> 00:58:52,000
是一个法国人

1802
00:58:52,000 --> 00:58:53,000
然后

1803
00:58:54,000 --> 00:58:56,000
他应该是给莫子大工作的

1804
00:58:56,000 --> 00:58:56,000
我觉得

1805
00:58:56,000 --> 00:58:57,000
我记得

1806
00:58:57,000 --> 00:59:00,000
然后他的之所以叫 Pelikan

1807
00:59:00,000 --> 00:59:00,000
并不是因为叫

1808
00:59:00,000 --> 00:59:02,000
Pelikan 是孔雀的意思

1809
00:59:03,000 --> 00:59:04,000
Anyway

1810
00:59:04,000 --> 00:59:06,000
反正 Pelikan 他说是一个

1811
00:59:06,000 --> 00:59:09,000
Kalapind 的 Anagram

1812
00:59:09,000 --> 00:59:10,000
Kalapong

1813
00:59:10,000 --> 00:59:10,000
不知道

1814
00:59:10,000 --> 00:59:11,000
这法语不知道什么

1815
00:59:11,000 --> 00:59:13,000
就法语的笔记本的意思

1816
00:59:13,000 --> 00:59:14,000
我相信应该是 Kalapong

1817
00:59:14,000 --> 00:59:15,000
对

1818
00:59:15,000 --> 00:59:17,000
然后法语里面是笔记本的意思

1819
00:59:18,000 --> 00:59:19,000
然后取名的 Pelikan

1820
00:59:19,000 --> 00:59:22,000
当然还有一个

1821
00:59:23,000 --> 00:59:25,000
在 Jekyll 之后开发的

1822
00:59:25,000 --> 00:59:26,000
也是基于 Ruby 的

1823
00:59:28,000 --> 00:59:29,000
生成器叫做 Middleman

1824
00:59:30,000 --> 00:59:32,000
Middleman 最大的卖点是

1825
00:59:32,000 --> 00:59:35,000
他支持的插件比 Jekyll 还要多

1826
00:59:36,000 --> 00:59:39,000
对可扩展性比 Jekyll 还要强

1827
00:59:39,000 --> 00:59:41,000
但也很有可能也比 Jekyll 还要慢

1828
00:59:42,000 --> 00:59:42,000
对

1829
00:59:42,000 --> 00:59:44,000
我觉得我们不能挨个介绍这个

1830
00:59:44,000 --> 00:59:46,000
我觉得要介绍那个 300 多项

1831
00:59:46,000 --> 00:59:47,000
的书到明年的讲目

1832
00:59:47,000 --> 00:59:49,000
278 对

1833
00:59:49,000 --> 00:59:49,000
有点太多

1834
00:59:49,000 --> 00:59:51,000
这个类似已经有 342 个了

1835
00:59:52,000 --> 00:59:54,000
好历史

1836
00:59:54,000 --> 00:59:56,000
对你不觉得这很可疑吗

1837
00:59:56,000 --> 00:59:58,000
你说一帮不怎么写字的程序员

1838
00:59:58,000 --> 01:00:01,000
他天天费喇啦劲写那么多东西

1839
01:00:02,000 --> 01:00:02,000
就像我说的

1840
01:00:02,000 --> 01:00:03,000
他是一个 Cut

1841
01:00:03,000 --> 01:00:04,000
而且他是一个很好 Cut

1842
01:00:04,000 --> 01:00:06,000
所以你用的是

1843
01:00:06,000 --> 01:00:07,000
如果你要用别人的

1844
01:00:07,000 --> 01:00:08,000
你一定要小心

1845
01:00:08,000 --> 01:00:09,000
你要很容易被坑

1846
01:00:09,000 --> 01:00:10,000
对

1847
01:00:10,000 --> 01:00:12,000
所谓 NIH 情节

1848
01:00:12,000 --> 01:00:14,000
Not invented here

1849
01:00:14,000 --> 01:00:14,000
对

1850
01:00:14,000 --> 01:00:15,000
不是我写的

1851
01:00:15,000 --> 01:00:16,000
所以我一定要自己写一个

1852
01:00:16,000 --> 01:00:17,000
他为什么不好

1853
01:00:17,000 --> 01:00:18,000
因为他不是我写的

1854
01:00:18,000 --> 01:00:20,000
不过我现在心态变了

1855
01:00:21,000 --> 01:00:22,000
你看我为什么

1856
01:00:22,000 --> 01:00:23,000
对有什么样的

1857
01:00:23,000 --> 01:00:24,000
我自己已经写了一个了

1858
01:00:24,000 --> 01:00:26,000
就性能应该还凑合了吧

1859
01:00:26,000 --> 01:00:27,000
但是

1860
01:00:27,000 --> 01:00:29,000
觉得还是用别人写的比较简单

1861
01:00:29,000 --> 01:00:30,000
懒得去麻烦

1862
01:00:31,000 --> 01:00:33,000
这叫过来人心态

1863
01:00:33,000 --> 01:00:34,000
就是大爷已经写过一个了

1864
01:00:34,000 --> 01:00:35,000
我现在有资格

1865
01:00:35,000 --> 01:00:37,000
扎执你们这帮人的写的东西

1866
01:00:37,000 --> 01:00:38,000
我可以挑一个顺手

1867
01:00:38,000 --> 01:00:39,000
现在的处置者就是什么

1868
01:00:39,000 --> 01:00:41,000
Less code is good code

1869
01:00:43,000 --> 01:00:44,000
No code is gray code

1870
01:00:44,000 --> 01:00:45,000
No code is best code

1871
01:00:45,000 --> 01:00:46,000
对

1872
01:00:46,000 --> 01:00:47,000
对就这样

1873
01:00:48,000 --> 01:00:50,000
所以就能不写自己代码

1874
01:00:50,000 --> 01:00:51,000
就不写自己代码

1875
01:00:51,000 --> 01:00:52,000
然后刚才扯的

1876
01:00:52,000 --> 01:00:54,000
那七七八八的生成器本身

1877
01:00:54,000 --> 01:00:55,000
其实那个东西

1878
01:00:55,000 --> 01:00:56,000
大家有兴趣

1879
01:00:56,000 --> 01:00:58,000
我们会把列表贴在那里

1880
01:00:58,000 --> 01:00:59,000
大家自己去看

1881
01:00:59,000 --> 01:01:00,000
我现在没在讲

1882
01:01:00,000 --> 01:01:01,000
另外一件事情就是

1883
01:01:01,000 --> 01:01:02,000
不数

1884
01:01:02,000 --> 01:01:03,000
刚才讲了一半天

1885
01:01:03,000 --> 01:01:05,000
Dev 现在讲 OP 这一块了

1886
01:01:06,000 --> 01:01:06,000
对

1887
01:01:07,000 --> 01:01:08,000
刚刚我在问

1888
01:01:09,000 --> 01:01:11,000
你也说你在服务器上部署了

1889
01:01:11,000 --> 01:01:11,000
然后

1890
01:01:11,000 --> 01:01:13,000
其实最开始的时候

1891
01:01:13,000 --> 01:01:14,000
大家还不是这么玩的

1892
01:01:14,000 --> 01:01:15,000
最开始是在自己的

1893
01:01:16,000 --> 01:01:18,000
本地生成一个

1894
01:01:18,000 --> 01:01:19,000
就 public 目录

1895
01:01:19,000 --> 01:01:21,000
就是然后直接通过

1896
01:01:21,000 --> 01:01:22,000
比如说 Rsync

1897
01:01:22,000 --> 01:01:23,000
或者 SCP 的方式

1898
01:01:23,000 --> 01:01:25,000
复制到远程服务器上去

1899
01:01:25,000 --> 01:01:25,000
然后

1900
01:01:26,000 --> 01:01:27,000
搞定对吧

1901
01:01:28,000 --> 01:01:28,000
然后后来

1902
01:01:28,000 --> 01:01:30,000
或者直接像我这样

1903
01:01:30,000 --> 01:01:32,000
git share 然后 git pull

1904
01:01:32,000 --> 01:01:34,000
对其实这个已经是

1905
01:01:34,000 --> 01:01:35,000
比较高端的一个方法

1906
01:01:35,000 --> 01:01:37,000
或者说比较麻烦的一个方法

1907
01:01:37,000 --> 01:01:38,000
你得

1908
01:01:38,000 --> 01:01:40,000
你得 pull 来 pull 去

1909
01:01:40,000 --> 01:01:42,000
然后搞来搞去还是挺头痛的对吧

1910
01:01:42,000 --> 01:01:43,000
对就愿意的话

1911
01:01:43,000 --> 01:01:46,000
其实 git 可以完全拿来当 SCP 用

1912
01:01:47,000 --> 01:01:48,000
直接 gitpush 到远端的

1913
01:01:48,000 --> 01:01:51,000
对但是你还得去用命令行

1914
01:01:51,000 --> 01:01:52,000
还是得去麻烦一下

1915
01:01:52,000 --> 01:01:53,000
就是刚刚我讲过

1916
01:01:53,000 --> 01:01:55,000
现在已经变得很懒的一个人

1917
01:01:55,000 --> 01:01:57,000
可是你生成难道不需要微微娘

1918
01:01:59,000 --> 01:02:00,000
对这就是要讲的事情

1919
01:02:01,000 --> 01:02:02,000
其实你也不用了

1920
01:02:02,000 --> 01:02:03,000
你生成的时候

1921
01:02:03,000 --> 01:02:04,000
你是 push 到上面去

1922
01:02:04,000 --> 01:02:05,000
然后

1923
01:02:06,000 --> 01:02:08,000
就服务器这边自动完成了吗

1924
01:02:10,000 --> 01:02:11,000
不是吗

1925
01:02:13,000 --> 01:02:13,000
不

1926
01:02:13,000 --> 01:02:14,000
我的意思是

1927
01:02:14,000 --> 01:02:16,000
你在生成这个站点的时候

1928
01:02:16,000 --> 01:02:17,000
会使用命令行

1929
01:02:17,000 --> 01:02:18,000
那你为什么会害怕

1930
01:02:19,000 --> 01:02:20,000
或者说为什么会觉得

1931
01:02:20,000 --> 01:02:23,000
用命令行发布显得多余呢

1932
01:02:23,000 --> 01:02:24,000
就因为我不想

1933
01:02:24,000 --> 01:02:25,000
因为你知道写作的时候

1934
01:02:25,000 --> 01:02:27,000
和在敲命令操作的时候

1935
01:02:27,000 --> 01:02:29,000
我觉得是两种完全不同的心态

1936
01:02:29,000 --> 01:02:30,000
所以我不想在

1937
01:02:31,000 --> 01:02:32,000
写作的时候还要去想

1938
01:02:33,000 --> 01:02:34,000
还要再执行一个命令

1939
01:02:34,000 --> 01:02:34,000
才能够发布

1940
01:02:34,000 --> 01:02:35,000
为什么不能写

1941
01:02:35,000 --> 01:02:36,000
存在那个地方

1942
01:02:37,000 --> 01:02:38,000
它就自动给我发布了呢

1943
01:02:39,000 --> 01:02:41,000
因为你不知道自己有没有写好

1944
01:02:41,000 --> 01:02:43,000
它不是有 draft 的目录吗

1945
01:02:43,000 --> 01:02:44,000
就草稿那个目录吗

1946
01:02:45,000 --> 01:02:46,000
什么有 draft 的目录

1947
01:02:46,000 --> 01:02:48,000
Jekyll 有 draft 的目录

1948
01:02:49,000 --> 01:02:50,000
Jekyll 有 draft 的目录

1949
01:02:50,000 --> 01:02:51,000
你又落后了

1950
01:02:52,000 --> 01:02:52,000
有啊

1951
01:02:53,000 --> 01:02:54,000
我用版本还没有呢

1952
01:02:54,000 --> 01:02:55,000
我对天发射

1953
01:02:55,000 --> 01:02:56,000
可能是后来加的吧

1954
01:02:56,000 --> 01:02:57,000
anyway

1955
01:02:57,000 --> 01:02:58,000
对应该是后来加的

1956
01:02:58,000 --> 01:03:02,000
对后来就出现过这么一群用

1957
01:03:02,000 --> 01:03:03,000
因为 Drawbox

1958
01:03:03,000 --> 01:03:04,000
不是后来不是出来 API 吗

1959
01:03:05,000 --> 01:03:07,000
不对 Drawbox 没出 API 之前

1960
01:03:07,000 --> 01:03:07,000
就有人想这么干

1961
01:03:07,000 --> 01:03:09,000
就是他注册了两个

1962
01:03:09,000 --> 01:03:11,000
单独注册了一个 Drawbox 账号

1963
01:03:12,000 --> 01:03:13,000
那个账号在服务器上跑

1964
01:03:13,000 --> 01:03:14,000
然后他把

1965
01:03:15,000 --> 01:03:17,000
他的静态目录的 source

1966
01:03:17,000 --> 01:03:18,000
那个 directory

1967
01:03:18,000 --> 01:03:19,000
source 那个目录

1968
01:03:19,000 --> 01:03:22,000
跟服务器上 Drawbox 的账号共享

1969
01:03:22,000 --> 01:03:24,000
然后这样服务器那边就会同步

1970
01:03:25,000 --> 01:03:26,000
然后用一种

1971
01:03:26,000 --> 01:03:27,000
在 Ninux 上你可以

1972
01:03:27,000 --> 01:03:28,000
要么你就 po

1973
01:03:28,000 --> 01:03:30,000
你就去去轮循那个目录

1974
01:03:30,000 --> 01:03:31,000
看有没有文件更改

1975
01:03:31,000 --> 01:03:33,000
要么用那个叫什么

1976
01:03:35,000 --> 01:03:36,000
什么 notification 来的

1977
01:03:37,000 --> 01:03:38,000
Fnotify 还是什么来的

1978
01:03:38,000 --> 01:03:39,000
FSnotify

1979
01:03:39,000 --> 01:03:40,000
Inotification

1980
01:03:41,000 --> 01:03:42,000
Iknownotification

1981
01:03:42,000 --> 01:03:43,000
对 Inotify 对对对

1982
01:03:43,000 --> 01:03:44,000
那个系统

1983
01:03:44,000 --> 01:03:46,000
Ninux 有这么一个系统

1984
01:03:46,000 --> 01:03:48,000
2.6 还是 2.0 里面开始搭载的

1985
01:03:48,000 --> 01:03:50,000
就它可以通知你说

1986
01:03:50,000 --> 01:03:52,000
你可以 watch

1987
01:03:52,000 --> 01:03:53,000
你可以监

1988
01:03:53,000 --> 01:03:54,000
就是叫什么

1989
01:03:54,000 --> 01:03:55,000
观察某一个目录

1990
01:03:55,000 --> 01:03:57,000
然后有变动时间

1991
01:03:57,000 --> 01:03:58,000
那个系统内核会提醒你

1992
01:03:58,000 --> 01:03:59,000
然后你可以再跑一遍

1993
01:03:59,000 --> 01:04:01,000
然后就有人这么干过

1994
01:04:01,000 --> 01:04:02,000
我也这么干过

1995
01:04:03,000 --> 01:04:03,000
我觉得在

1996
01:04:03,000 --> 01:04:05,000
对监控

1997
01:04:05,000 --> 01:04:06,000
对 watch

1998
01:04:06,000 --> 01:04:09,000
对监控文件目录的更改

1999
01:04:09,000 --> 01:04:10,000
对对

2000
01:04:10,000 --> 01:04:11,000
文件系统的更改

2001
01:04:11,000 --> 01:04:12,000
就是 file

2002
01:04:12,000 --> 01:04:13,000
实际上是一个非常

2003
01:04:13,000 --> 01:04:13,000
file event

2004
01:04:13,000 --> 01:04:15,000
对是一个非常 generic 的需求

2005
01:04:15,000 --> 01:04:16,000
对

2006
01:04:16,000 --> 01:04:17,000
我有时候好奇

2007
01:04:17,000 --> 01:04:18,000
为什么这么晚才出现这种目录呢

2008
01:04:21,000 --> 01:04:22,000
其实在

2009
01:04:22,000 --> 01:04:23,000
好像是 Windows 上先有这个吧

2010
01:04:23,000 --> 01:04:24,000
我觉得还是

2011
01:04:26,000 --> 01:04:28,000
还是 BSD 上面先有这个东西我忘了

2012
01:04:29,000 --> 01:04:30,000
你说监视一个

2013
01:04:30,000 --> 01:04:31,000
对对对

2014
01:04:31,000 --> 01:04:32,000
文件系统的改变

2015
01:04:32,000 --> 01:04:33,000
对

2016
01:04:33,000 --> 01:04:34,000
Windows 我印象里面没有

2017
01:04:34,000 --> 01:04:35,000
有有有

2018
01:04:35,000 --> 01:04:36,000
Mac 其实是一直有的

2019
01:04:36,000 --> 01:04:38,000
BSD 那个

2020
01:04:38,000 --> 01:04:39,000
好像一直都有

2021
01:04:39,000 --> 01:04:40,000
那个 KQ 嘛

2022
01:04:40,000 --> 01:04:41,000
好像一直都有这个东西

2023
01:04:43,000 --> 01:04:43,000
anyway 说远了

2024
01:04:44,000 --> 01:04:45,000
就有人这么干嘛

2025
01:04:45,000 --> 01:04:46,000
然后但是那个东西

2026
01:04:46,000 --> 01:04:48,000
有一个比较麻烦就是

2027
01:04:48,000 --> 01:04:51,000
Dropbox 在 Linux 上面的客户端

2028
01:04:51,000 --> 01:04:53,000
比较死

2029
01:04:53,000 --> 01:04:54,000
有很多 bug

2030
01:04:54,000 --> 01:04:56,000
真的会死掉

2031
01:04:56,000 --> 01:04:57,000
然后也不知道为什么

2032
01:04:57,000 --> 01:04:58,000
我从来没用过

2033
01:04:58,000 --> 01:05:01,000
我从来没用过 Dropbox

2034
01:05:01,000 --> 01:05:02,000
Linux 客户端

2035
01:05:02,000 --> 01:05:02,000
是命令行的价格吗

2036
01:05:02,000 --> 01:05:04,000
还是设备器

2037
01:05:04,000 --> 01:05:05,000
它有两个

2038
01:05:05,000 --> 01:05:06,000
如果你是 Linux

2039
01:05:06,000 --> 01:05:07,000
你是有这个客户端

2040
01:05:07,000 --> 01:05:09,000
它是有那个故意的

2041
01:05:09,000 --> 01:05:10,000
如果你没有的话

2042
01:05:10,000 --> 01:05:11,000
它有一个命令行的工具

2043
01:05:11,000 --> 01:05:12,000
你还得再设置一遍

2044
01:05:12,000 --> 01:05:13,000
它怎么去

2045
01:05:14,000 --> 01:05:15,000
那个叫什么

2046
01:05:16,000 --> 01:05:18,000
就后台运行

2047
01:05:18,000 --> 01:05:19,000
后台运行

2048
01:05:19,000 --> 01:05:20,000
都很合

2049
01:05:20,000 --> 01:05:21,000
就那个都可以惹那个一次性的

2050
01:05:21,000 --> 01:05:23,000
就是你要先运行它启动它

2051
01:05:23,000 --> 01:05:24,000
它会生成一个连接

2052
01:05:24,000 --> 01:05:25,000
然后你再把连接

2053
01:05:25,000 --> 01:05:27,000
复制到你流浪器里面

2054
01:05:27,000 --> 01:05:28,000
你要授权

2055
01:05:28,000 --> 01:05:29,000
然后有一堆事情挺麻烦的

2056
01:05:30,000 --> 01:05:32,000
但是就那个一次性的都还好

2057
01:05:32,000 --> 01:05:35,000
但是主要是 DropboxLinux 的客户端

2058
01:05:35,000 --> 01:05:36,000
就是 Compoundline 那个版本

2059
01:05:36,000 --> 01:05:37,000
就比较不稳定

2060
01:05:37,000 --> 01:05:39,000
经常会隔山岔岛出问题

2061
01:05:39,000 --> 01:05:42,000
然后同步也不是很及时吧

2062
01:05:42,000 --> 01:05:44,000
因为之前我记得那个 Marco Amund

2063
01:05:44,000 --> 01:05:46,000
他也是这么干的

2064
01:05:46,000 --> 01:05:47,000
然后经常会出现

2065
01:05:49,000 --> 01:05:50,000
就你在本地

2066
01:05:50,000 --> 01:05:51,000
已经把那个文章放上去

2067
01:05:51,000 --> 01:05:52,000
然后本地的 Dropbox

2068
01:05:52,000 --> 01:05:53,000
已经显示同步了

2069
01:05:53,000 --> 01:05:54,000
但是服务器方面

2070
01:05:54,000 --> 01:05:56,000
可能要等五分钟才会同步

2071
01:05:57,000 --> 01:05:58,000
就体验

2072
01:05:58,000 --> 01:05:59,000
现在还是这样吗

2073
01:06:00,000 --> 01:06:01,000
现在我不太清楚

2074
01:06:01,000 --> 01:06:02,000
就是有一段时间

2075
01:06:02,000 --> 01:06:03,000
很多人抱怨你这个问题

2076
01:06:03,000 --> 01:06:04,000
因为我也遇到过

2077
01:06:04,000 --> 01:06:06,000
所以就不是很稳定

2078
01:06:06,000 --> 01:06:07,000
后来大家都不是很爽

2079
01:06:08,000 --> 01:06:10,000
当然后来 Dropbox 开放的 API

2080
01:06:10,000 --> 01:06:11,000
可以直接

2081
01:06:11,000 --> 01:06:13,000
就是它给你一个 callback

2082
01:06:13,000 --> 01:06:15,000
就是你不用再在服务器端

2083
01:06:15,000 --> 01:06:17,000
装 Dropbox 客户端

2084
01:06:17,000 --> 01:06:21,000
你只能开一个 web 的端

2085
01:06:21,000 --> 01:06:22,000
然后它那边同步了

2086
01:06:22,000 --> 01:06:23,000
Dropbox 服务器会自动给你

2087
01:06:23,000 --> 01:06:25,000
发一条 Http 请求

2088
01:06:25,000 --> 01:06:26,000
然后你再去

2089
01:06:27,000 --> 01:06:28,000
Dropbox 那个 API 去请求

2090
01:06:28,000 --> 01:06:29,000
更新的数据就好

2091
01:06:29,000 --> 01:06:31,000
这样的话就可以绕过

2092
01:06:31,000 --> 01:06:33,000
你不用使用 Dropbox 的客户端了

2093
01:06:33,000 --> 01:06:34,000
就还好一点

2094
01:06:34,000 --> 01:06:35,000
对

2095
01:06:35,000 --> 01:06:36,000
变成模型变成

2096
01:06:36,000 --> 01:06:38,000
变成 Event Driven

2097
01:06:38,000 --> 01:06:38,000
对

2098
01:06:38,000 --> 01:06:39,000
其实之前也是 Event Driven

2099
01:06:39,000 --> 01:06:40,000
但是有一个是

2100
01:06:40,000 --> 01:06:42,000
你要在运行一个 Dropbox

2101
01:06:42,000 --> 01:06:43,000
那个 B 原的私有的客户端

2102
01:06:43,000 --> 01:06:44,000
然后又写得不好

2103
01:06:45,000 --> 01:06:47,000
所以现在其实更加的好

2104
01:06:47,000 --> 01:06:49,000
然后后来大家觉得

2105
01:06:49,000 --> 01:06:49,000
哎呀

2106
01:06:49,000 --> 01:06:51,000
Dropbox 不是那年出过那个事吗

2107
01:06:51,000 --> 01:06:53,000
出过一个事就是

2108
01:06:53,000 --> 01:06:53,000
有一段时间

2109
01:06:53,000 --> 01:06:54,000
大家的所有账号

2110
01:06:54,000 --> 01:06:55,000
可以随便都可以访问

2111
01:06:56,000 --> 01:06:57,000
那个系统的漏洞

2112
01:06:58,000 --> 01:06:59,000
对

2113
01:06:59,000 --> 01:07:00,000
然后后来就觉得

2114
01:07:00,000 --> 01:07:01,000
这个不靠谱啊

2115
01:07:01,000 --> 01:07:02,000
这个信不过怎么办

2116
01:07:03,000 --> 01:07:04,000
后来那个 BitTorrent

2117
01:07:04,000 --> 01:07:06,000
就做 BT 那间公司

2118
01:07:06,000 --> 01:07:08,000
出了一个叫 BitTorrent Sync

2119
01:07:08,000 --> 01:07:08,000
这么一个方案

2120
01:07:09,000 --> 01:07:09,000
怎么理解呢

2121
01:07:09,000 --> 01:07:11,000
它就是一个 Dropbox

2122
01:07:11,000 --> 01:07:13,000
但是没有中央服务器的

2123
01:07:13,000 --> 01:07:15,000
就它是一个完全分布式的一个系统

2124
01:07:15,000 --> 01:07:16,000
去中心化

2125
01:07:16,000 --> 01:07:16,000
对

2126
01:07:16,000 --> 01:07:17,000
Dropbox 替代

2127
01:07:17,000 --> 01:07:18,000
对

2128
01:07:18,000 --> 01:07:19,000
Decentralize Dropbox

2129
01:07:19,000 --> 01:07:20,000
基本上

2130
01:07:20,000 --> 01:07:21,000
就是你可以在你的服务器上

2131
01:07:21,000 --> 01:07:23,000
装一个它的客户端

2132
01:07:23,000 --> 01:07:24,000
然后你集装一个客户端

2133
01:07:24,000 --> 01:07:25,000
本身客户端就跟 Dropbox

2134
01:07:25,000 --> 01:07:26,000
刚刚长得一样

2135
01:07:26,000 --> 01:07:27,000
你可以选择一个目录

2136
01:07:27,000 --> 01:07:28,000
它会同步

2137
01:07:28,000 --> 01:07:29,000
然后你把这个

2138
01:07:29,000 --> 01:07:30,000
这个目录的选择

2139
01:07:30,000 --> 01:07:32,000
同步到你服务器上去

2140
01:07:32,000 --> 01:07:32,000
然后就可以运行

2141
01:07:32,000 --> 01:07:33,000
然后这个

2142
01:07:33,000 --> 01:07:34,000
就还不

2143
01:07:34,000 --> 01:07:35,000
就

2144
01:07:35,000 --> 01:07:36,000
我觉得我试了过

2145
01:07:36,000 --> 01:07:37,000
相当长一段时间吧

2146
01:07:37,000 --> 01:07:38,000
性能还可以

2147
01:07:38,000 --> 01:07:39,000
就是我的个人主

2148
01:07:39,000 --> 01:07:40,000
个人网站之前

2149
01:07:40,000 --> 01:07:42,000
就用这种方式来实现的

2150
01:07:42,000 --> 01:07:44,000
性能还就是速度还行

2151
01:07:44,000 --> 01:07:45,000
然后同步速度也可以

2152
01:07:45,000 --> 01:07:47,000
然后也没有像 Dropbox 客户端那种

2153
01:07:47,000 --> 01:07:49,000
就隔三岔我不能同步的情况

2154
01:07:49,000 --> 01:07:49,000
不过它那个

2155
01:07:49,000 --> 01:07:51,000
因为是去中心化的嘛

2156
01:07:51,000 --> 01:07:52,000
就是我必须得保证

2157
01:07:54,000 --> 01:07:56,000
我的服务器是在线

2158
01:07:56,000 --> 01:07:57,000
但是我的本机

2159
01:07:57,000 --> 01:07:57,000
一定要

2160
01:07:57,000 --> 01:07:59,000
完成同步之后

2161
01:07:59,000 --> 01:07:59,000
我才能够下线

2162
01:07:59,000 --> 01:08:01,000
不然的话就可能同步到半截

2163
01:08:02,000 --> 01:08:03,000
然后那边还是

2164
01:08:03,000 --> 01:08:04,000
就服务器端还是用那个

2165
01:08:04,000 --> 01:08:05,000
iNotify 那个接口

2166
01:08:05,000 --> 01:08:08,000
去侦测有文件的更新

2167
01:08:08,000 --> 01:08:09,000
然后再去重新

2168
01:08:09,000 --> 01:08:11,000
重新 Rebuild 这个整个

2169
01:08:11,000 --> 01:08:12,000
整个 Site 嘛

2170
01:08:12,000 --> 01:08:14,000
这些都是一个技术层面的问题

2171
01:08:14,000 --> 01:08:15,000
但是

2172
01:08:15,000 --> 01:08:17,000
这里有一个共用性

2173
01:08:17,000 --> 01:08:19,000
就是它的是等文件系统

2174
01:08:19,000 --> 01:08:21,000
或者是某种方式来

2175
01:08:21,000 --> 01:08:23,000
来更新东西的

2176
01:08:23,000 --> 01:08:24,000
这里有个问题就是

2177
01:08:24,000 --> 01:08:25,000
你可能它会

2178
01:08:25,000 --> 01:08:26,000
更新到一半

2179
01:08:26,000 --> 01:08:27,000
比如说你同时改了五个文件

2180
01:08:27,000 --> 01:08:28,000
对吧

2181
01:08:28,000 --> 01:08:28,000
它只

2182
01:08:29,000 --> 01:08:30,000
但是你那个文件系统是

2183
01:08:30,000 --> 01:08:32,000
每次都要出发一个事件的嘛

2184
01:08:33,000 --> 01:08:34,000
就可能你

2185
01:08:34,000 --> 01:08:35,000
你在

2186
01:08:35,000 --> 01:08:37,000
所以会导致多次 build

2187
01:08:37,000 --> 01:08:38,000
多次 build 的本身

2188
01:08:38,000 --> 01:08:39,000
倒是没有什么问题

2189
01:08:39,000 --> 01:08:40,000
如果速度快的话

2190
01:08:40,000 --> 01:08:42,000
但是因为首先速度不快

2191
01:08:42,000 --> 01:08:42,000
特别是大战点

2192
01:08:42,000 --> 01:08:43,000
多次 build 就很慢

2193
01:08:43,000 --> 01:08:45,000
很费这个服务器的资源

2194
01:08:45,000 --> 01:08:47,000
有如果你是单核的一个 VPS

2195
01:08:47,000 --> 01:08:48,000
可能会直接卡死

2196
01:08:48,000 --> 01:08:49,000
但这个都不是最核心的问题

2197
01:08:49,000 --> 01:08:50,000
最核心的问题是它

2198
01:08:50,000 --> 01:08:51,000
如果你是改了一半

2199
01:08:51,000 --> 01:08:53,000
它可能中间状态是不稳定的

2200
01:08:53,000 --> 01:08:53,000
对吧

2201
01:08:54,000 --> 01:08:55,000
就是它不是一个

2202
01:08:56,000 --> 01:08:57,000
比如你改了模板

2203
01:08:57,000 --> 01:08:58,000
就给个例子

2204
01:08:58,000 --> 01:09:00,000
你可能你改了三个模板文件

2205
01:09:00,000 --> 01:09:01,000
它只同步到一个模板文件

2206
01:09:01,000 --> 01:09:02,000
然后你会可能中间

2207
01:09:02,000 --> 01:09:03,000
那些引用就会是错的

2208
01:09:04,000 --> 01:09:05,000
build 的失败

2209
01:09:05,000 --> 01:09:06,000
就会 build 的失败

2210
01:09:06,000 --> 01:09:07,000
这不是什么大问题吗

2211
01:09:09,000 --> 01:09:09,000
depends

2212
01:09:09,000 --> 01:09:10,000
就如果 build 失败

2213
01:09:10,000 --> 01:09:13,000
就有人会可能看到中间的

2214
01:09:13,000 --> 01:09:13,000
一个中间状态

2215
01:09:13,000 --> 01:09:14,000
然后

2216
01:09:14,000 --> 01:09:16,000
如果它刚好被缓存下来的话

2217
01:09:16,000 --> 01:09:18,000
就会很 ugly

2218
01:09:18,000 --> 01:09:20,000
就不是一个很优雅的方案其实

2219
01:09:20,000 --> 01:09:21,000
对

2220
01:09:21,000 --> 01:09:23,000
不小心把密码或者情书写上去了

2221
01:09:23,000 --> 01:09:25,000
然后不会这么惨

2222
01:09:25,000 --> 01:09:26,000
临时终止

2223
01:09:27,000 --> 01:09:28,000
不会这么惨

2224
01:09:28,000 --> 01:09:29,000
但但是就是这个我觉得

2225
01:09:29,000 --> 01:09:31,000
它这不是一个优雅的方案

2226
01:09:31,000 --> 01:09:32,000
然后还有一个问题

2227
01:09:32,000 --> 01:09:33,000
就是刚才讲的

2228
01:09:33,000 --> 01:09:34,000
要命令行去同步

2229
01:09:34,000 --> 01:09:36,000
它其实始终是一个

2230
01:09:36,000 --> 01:09:36,000
我觉得

2231
01:09:37,000 --> 01:09:39,000
不够用户友好的一个方案

2232
01:09:39,000 --> 01:09:41,000
所以在

2233
01:09:41,000 --> 01:09:42,000
Apple 5.3 的版本

2234
01:09:42,000 --> 01:09:44,000
我是用了另外一种方法

2235
01:09:44,000 --> 01:09:45,000
就是用 git 来同步

2236
01:09:45,000 --> 01:09:48,000
然后我是在 github 上面

2237
01:09:48,000 --> 01:09:50,000
装了去建了一个那个 reportory

2238
01:09:50,000 --> 01:09:53,000
然后用 github 有一个 webhook

2239
01:09:54,000 --> 01:09:55,000
这个接口

2240
01:09:55,000 --> 01:09:57,000
就是它可以等你每次 commit

2241
01:09:58,000 --> 01:09:59,000
它会

2242
01:09:59,000 --> 01:10:00,000
它会给你

2243
01:10:00,000 --> 01:10:02,000
其实就是 git 自己的 hook

2244
01:10:02,000 --> 01:10:04,000
在 github 上面的延伸

2245
01:10:05,000 --> 01:10:06,000
对

2246
01:10:07,000 --> 01:10:07,000
对

2247
01:10:07,000 --> 01:10:08,000
就是大概就是说

2248
01:10:08,000 --> 01:10:09,000
你可以自己建一个

2249
01:10:10,000 --> 01:10:13,000
你在服务器上建一个 web server

2250
01:10:13,000 --> 01:10:15,000
然后征听 github

2251
01:10:15,000 --> 01:10:17,000
发过来的这个事件

2252
01:10:18,000 --> 01:10:19,000
然后你就会知道

2253
01:10:19,000 --> 01:10:20,000
有一个完完整整的

2254
01:10:20,000 --> 01:10:21,000
这个 commit 已经过来了

2255
01:10:21,000 --> 01:10:22,000
比如说你不会出现

2256
01:10:22,000 --> 01:10:24,000
你一个 commit 改了五个文件

2257
01:10:24,000 --> 01:10:26,000
你不会说只修改到三个文件

2258
01:10:26,000 --> 01:10:28,000
因为你整个 commit 铺下来

2259
01:10:28,000 --> 01:10:29,000
肯定是就三五个文件

2260
01:10:29,000 --> 01:10:30,000
全部都改过了

2261
01:10:30,000 --> 01:10:30,000
对吧

2262
01:10:31,000 --> 01:10:31,000
对

2263
01:10:31,000 --> 01:10:33,000
它就是解决了第一个问题

2264
01:10:33,000 --> 01:10:36,000
然后 git 你铺回来之后

2265
01:10:36,000 --> 01:10:38,000
它不是有一个 postmerge

2266
01:10:38,000 --> 01:10:40,000
这个 hook 本地的

2267
01:10:40,000 --> 01:10:41,000
而且在那里写一个脚本

2268
01:10:41,000 --> 01:10:43,000
然后在那里运行一下生成就好

2269
01:10:43,000 --> 01:10:45,000
这个整个过程还是蛮优雅的

2270
01:10:45,000 --> 01:10:47,000
然后 postmerge 还是 postcommit

2271
01:10:47,000 --> 01:10:49,000
postmerge 这个东西

2272
01:10:49,000 --> 01:10:51,000
postmerge 是在 postcommit

2273
01:10:51,000 --> 01:10:54,000
应该是 postcommit postreceive

2274
01:10:54,000 --> 01:10:57,000
postmerge 是发生在

2275
01:10:57,000 --> 01:10:58,000
就是比如说

2276
01:10:58,000 --> 01:10:59,000
因为你在服务器上

2277
01:10:59,000 --> 01:11:02,000
你肯定要把整个 reports 抓下来

2278
01:11:02,000 --> 01:11:03,000
那个元对吧

2279
01:11:04,000 --> 01:11:06,000
可是不是每一次都会发生 merge

2280
01:11:06,000 --> 01:11:07,000
你 git pull 的话

2281
01:11:07,000 --> 01:11:10,000
有可能只是 force forward

2282
01:11:10,000 --> 01:11:12,000
不是你是 git pull

2283
01:11:12,000 --> 01:11:14,000
git pull 的话有可能是 force forward

2284
01:11:14,000 --> 01:11:16,000
force forward 不会产生 merge

2285
01:11:18,000 --> 01:11:18,000
你确定吗

2286
01:11:18,000 --> 01:11:21,000
我记得 git pull 好像默认是 git pull

2287
01:11:21,000 --> 01:11:24,000
就是 git pull 是等于 git fetch 加 git merge

2288
01:11:25,000 --> 01:11:27,000
然后 force forward 是在 merge 过程中实现的

2289
01:11:28,000 --> 01:11:29,000
不但是这个 merge

2290
01:11:29,000 --> 01:11:32,000
不你的 merge 是指会产生 merge commit merge

2291
01:11:32,000 --> 01:11:32,000
不不不不不

2292
01:11:32,000 --> 01:11:33,000
就只是

2293
01:11:33,000 --> 01:11:35,000
就是只是 git merge

2294
01:11:35,000 --> 01:11:36,000
就是把那个 head 加了

2295
01:11:36,000 --> 01:11:38,000
就是只是把当前的 local branch

2296
01:11:39,000 --> 01:11:41,000
同步到 remote branch 上

2297
01:11:41,000 --> 01:11:42,000
这叫 merge

2298
01:11:43,000 --> 01:11:43,000
对

2299
01:11:43,000 --> 01:11:44,000
对对对对

2300
01:11:44,000 --> 01:11:45,000
应该是这样子

2301
01:11:46,000 --> 01:11:48,000
如果我读那个文档没理解错的话

2302
01:11:48,000 --> 01:11:49,000
但可能我理解错的话

2303
01:11:49,000 --> 01:11:50,000
你去看一遍

2304
01:11:52,000 --> 01:11:53,000
整个过程就是说

2305
01:11:53,000 --> 01:11:57,000
就是在 git post merge 那个勾字里面

2306
01:11:58,000 --> 01:12:01,000
调用这个金层代理生成器跑一遍就完成了

2307
01:12:01,000 --> 01:12:03,000
然后也不会出现这种很诡异的状况

2308
01:12:04,000 --> 01:12:06,000
然后还有一个比较优雅的地方

2309
01:12:06,000 --> 01:12:07,000
就是我可以

2310
01:12:07,000 --> 01:12:08,000
因为你知道 github 的 web 界面

2311
01:12:08,000 --> 01:12:09,000
其实做得还不错

2312
01:12:09,000 --> 01:12:12,000
然后你可以直接在上面添加文件

2313
01:12:12,000 --> 01:12:13,000
或者编辑文件

2314
01:12:14,000 --> 01:12:17,000
所以其实我是把 github 的 web interface

2315
01:12:17,000 --> 01:12:19,000
当成了一个 CMS 来用

2316
01:12:22,000 --> 01:12:24,000
现在 github 上面可以创建新文件了吗

2317
01:12:24,000 --> 01:12:25,000
可以啊

2318
01:12:25,000 --> 01:12:27,000
你是那个在上面有个路径

2319
01:12:27,000 --> 01:12:29,000
那个栏有一个加号

2320
01:12:29,000 --> 01:12:30,000
就是创建文件或者目录

2321
01:12:30,000 --> 01:12:34,000
因为我记得以前我好像想要做同样的事情的时候

2322
01:12:34,000 --> 01:12:35,000
我懊恼的发现

2323
01:12:35,000 --> 01:12:37,000
github 虽然可以改文件

2324
01:12:37,000 --> 01:12:38,000
但是不能产生新文件

2325
01:12:38,000 --> 01:12:41,000
因为它那个不是太显眼

2326
01:12:41,000 --> 01:12:42,000
你要去在那个

2327
01:12:42,000 --> 01:12:45,000
就你开一个任意开一个 github repository 的话

2328
01:12:45,000 --> 01:12:46,000
它会在那叫什么位置

2329
01:12:47,000 --> 01:12:50,000
就它会显示一堆文件列表的顶上

2330
01:12:50,000 --> 01:12:52,000
不是有一个当前那个路径吗

2331
01:12:53,000 --> 01:12:55,000
那那个墨有一个加号

2332
01:12:55,000 --> 01:12:55,000
你点那个加号

2333
01:12:55,000 --> 01:12:57,000
就是可以添加新文件

2334
01:12:59,000 --> 01:13:01,000
然后如果你要在添个目录的话

2335
01:13:01,000 --> 01:13:03,000
你就加个斜杠就好了

2336
01:13:05,000 --> 01:13:07,000
对行下次可以试一试

2337
01:13:07,000 --> 01:13:11,000
我是很久没有在 github 上直接修改文件

2338
01:13:11,000 --> 01:13:13,000
好像只有有一两次

2339
01:13:13,000 --> 01:13:15,000
要去改一个笔物的时候用过

2340
01:13:15,000 --> 01:13:18,000
对我觉得这个用力就特别好

2341
01:13:18,000 --> 01:13:21,000
就刚刚我讲了我不喜欢去碰

2342
01:13:22,000 --> 01:13:22,000
这样不对

2343
01:13:22,000 --> 01:13:23,000
其实我还是蛮喜欢碰命令

2344
01:13:23,000 --> 01:13:26,000
就是在写作东西的时候

2345
01:13:26,000 --> 01:13:27,000
我不想去碰命令

2346
01:13:27,000 --> 01:13:28,000
现在知道这个整个

2347
01:13:28,000 --> 01:13:30,000
就是在写作的时候

2348
01:13:30,000 --> 01:13:31,000
写 blog 本身的时候

2349
01:13:31,000 --> 01:13:34,000
我觉得可能最大的痛苦

2350
01:13:34,000 --> 01:13:35,000
就在于用 wim 的时候

2351
01:13:35,000 --> 01:13:36,000
输入法实在是太糟糕了

2352
01:13:38,000 --> 01:13:40,000
wim 不适合写文章

2353
01:13:40,000 --> 01:13:41,000
只适合写程序

2354
01:13:41,000 --> 01:13:45,000
对其实 wim 和输入法

2355
01:13:45,000 --> 01:13:48,000
是有一曲也不是一曲痛苦

2356
01:13:48,000 --> 01:13:49,000
就是他们的运作机理其实一样的

2357
01:13:49,000 --> 01:13:51,000
输入法在中文是一种 mode

2358
01:13:51,000 --> 01:13:52,000
对

2359
01:13:52,000 --> 01:13:53,000
英文是一种 mode

2360
01:13:53,000 --> 01:13:55,000
然后 wim 要在你英文的 mode 上

2361
01:13:55,000 --> 01:13:58,000
加入 command mode 和 edit mode

2362
01:13:58,000 --> 01:14:02,000
所以你大脑要维护这三个 mode 之间的状态机器

2363
01:14:02,000 --> 01:14:03,000
其实还是挺累的

2364
01:14:03,000 --> 01:14:04,000
对

2365
01:14:04,000 --> 01:14:07,000
所以在唯一一个在写 blog 的时候

2366
01:14:07,000 --> 01:14:08,000
没有办法维护

2367
01:14:08,000 --> 01:14:08,000
对

2368
01:14:09,000 --> 01:14:12,000
就现在那个 AppleFoas 的状态

2369
01:14:12,000 --> 01:14:17,000
比如说我直接把 git repository

2370
01:14:17,000 --> 01:14:19,000
跟别人共享

2371
01:14:19,000 --> 01:14:21,000
就是把它加入成 collaborator

2372
01:14:21,000 --> 01:14:22,000
它就可以直接在那边写东西

2373
01:14:22,000 --> 01:14:24,000
然后就可以发布

2374
01:14:24,000 --> 01:14:26,000
整个过程就很简单

2375
01:14:26,000 --> 01:14:28,000
就是 git 上面添加一个新文件

2376
01:14:28,000 --> 01:14:29,000
或修改一个文件

2377
01:14:29,000 --> 01:14:32,000
然后那边产生一个 commit 的事件

2378
01:14:32,000 --> 01:14:37,000
然后 github 发一个 webhook 的请求

2379
01:14:37,000 --> 01:14:38,000
到我的服务器

2380
01:14:38,000 --> 01:14:40,000
我的服务器把那个改动铺回来

2381
01:14:40,000 --> 01:14:43,000
就跑一遍 post merge 的钩子

2382
01:14:43,000 --> 01:14:45,000
然后在那边再跑一遍

2383
01:14:45,000 --> 01:14:47,000
生成竞争战点的程序

2384
01:14:47,000 --> 01:14:48,000
好

2385
01:14:48,000 --> 01:14:50,000
这个过程就完成了

2386
01:14:50,000 --> 01:14:52,000
整个过程我不需要去接触命令行

2387
01:14:52,000 --> 01:14:53,000
我也不需要维护

2388
01:14:53,000 --> 01:14:54,000
我不需要维护自己

2389
01:14:54,000 --> 01:14:55,000
And automation

2390
01:14:55,000 --> 01:14:56,000
对

2391
01:14:56,000 --> 01:14:58,000
就感觉超爽现在

2392
01:14:59,000 --> 01:15:03,000
你知道一个网站叫 devopsreactions

2393
01:15:03,000 --> 01:15:03,000
不知道

2394
01:15:03,000 --> 01:15:06,000
devopsreactions.tumblr.com

2395
01:15:06,000 --> 01:15:07,000
不知道

2396
01:15:07,000 --> 01:15:08,000
你可去看一下

2397
01:15:08,000 --> 01:15:10,000
这上面有非常非常搞笑的 gif

2398
01:15:10,000 --> 01:15:12,000
GIF 动画

2399
01:15:12,000 --> 01:15:13,000
然后有一个就是

2400
01:15:16,000 --> 01:15:19,000
Demonstrating end to end automation

2401
01:15:19,000 --> 01:15:21,000
to new employees

2402
01:15:21,000 --> 01:15:22,000
然后对

2403
01:15:22,000 --> 01:15:23,000
我现在把这个链接发给你

2404
01:15:23,000 --> 01:15:25,000
然后你到时候我们一定要把这个

2405
01:15:26,000 --> 01:15:29,000
贴在节目的链接里面

2406
01:15:29,000 --> 01:15:31,000
是这个非常精确的描述了

2407
01:15:31,000 --> 01:15:33,000
一个不知道你的整个工作流程的人

2408
01:15:33,000 --> 01:15:36,000
第一次听到你的整个工作流程之后的感受

2409
01:15:38,000 --> 01:15:40,000
但是有一点我觉得不得不承认

2410
01:15:40,000 --> 01:15:43,000
就是我把整个 workflow 设置好之后

2411
01:15:45,000 --> 01:15:46,000
你会

2412
01:15:46,000 --> 01:15:47,000
就怎么讲

2413
01:15:48,000 --> 01:15:50,000
就刚才我为什么讲

2414
01:15:50,000 --> 01:15:51,000
我不喜欢去跑命令行

2415
01:15:51,000 --> 01:15:53,000
去生成一遍这个东西的一个最主要的原因

2416
01:15:53,000 --> 01:15:54,000
就是因为

2417
01:15:55,000 --> 01:15:57,000
它会添加一个叫做摩擦力

2418
01:15:57,000 --> 01:15:58,000
Friction 在里面

2419
01:15:59,000 --> 01:16:00,000
就会让我觉得

2420
01:16:00,000 --> 01:16:01,000
还有一个步骤没跑完好吗

2421
01:16:01,000 --> 01:16:03,000
如果我要反复去做这个事情就很麻烦

2422
01:16:04,000 --> 01:16:06,000
但是一旦把这个东西

2423
01:16:06,000 --> 01:16:07,000
整个流程自动化以后

2424
01:16:07,000 --> 01:16:08,000
你不需要操心这种事情

2425
01:16:08,000 --> 01:16:10,000
你就只需要去写或者去改

2426
01:16:10,000 --> 01:16:12,000
你会很愿意去改

2427
01:16:12,000 --> 01:16:14,000
它的这个比如改错别字

2428
01:16:14,000 --> 01:16:15,000
改标点符号

2429
01:16:15,000 --> 01:16:17,000
或者改一些模板上的小调整

2430
01:16:17,000 --> 01:16:17,000
你会很愿意去做

2431
01:16:17,000 --> 01:16:19,000
因为整个事情就很简单

2432
01:16:19,000 --> 01:16:22,000
你只用在 github 上编辑一个

2433
01:16:22,000 --> 01:16:24,000
打编辑一个页面保存就可以了

2434
01:16:25,000 --> 01:16:27,000
现在就是非常

2435
01:16:27,000 --> 01:16:28,000
Frictionless

2436
01:16:28,000 --> 01:16:30,000
非常 smooth 的一个过程

2437
01:16:32,000 --> 01:16:34,000
这个词也经常被用于形容

2438
01:16:34,000 --> 01:16:37,000
一个理想的软件发布流程的

2439
01:16:38,000 --> 01:16:39,000
这么一个状态

2440
01:16:39,000 --> 01:16:42,000
就是程序员只需要写好

2441
01:16:42,000 --> 01:16:43,000
git push 就可以了

2442
01:16:43,000 --> 01:16:44,000
写好一个测试

2443
01:16:44,000 --> 01:16:45,000
写好一个功能

2444
01:16:45,000 --> 01:16:48,000
然后只需要 commit push

2445
01:16:49,000 --> 01:16:51,000
然后所有的一切都会自动的被部署

2446
01:16:51,000 --> 01:16:53,000
自动的被测试

2447
01:16:53,000 --> 01:16:55,000
自动的执行回归测试

2448
01:16:55,000 --> 01:16:56,000
自动生成一个 nightly build

2449
01:16:56,000 --> 01:16:59,000
然后告诉你软件是不是正常运行

2450
01:16:59,000 --> 01:17:00,000
你还能自动上线

2451
01:17:00,000 --> 01:17:01,000
这个是最好

2452
01:17:01,000 --> 01:17:02,000
对

2453
01:17:02,000 --> 01:17:03,000
其实你的

2454
01:17:03,000 --> 01:17:03,000
对

2455
01:17:03,000 --> 01:17:08,000
其实你写 blog 的过程非常像某种软件的发布流程

2456
01:17:08,000 --> 01:17:08,000
对

2457
01:17:08,000 --> 01:17:08,000
对

2458
01:17:09,000 --> 01:17:12,000
发布一个静态站点

2459
01:17:12,000 --> 01:17:13,000
对

2460
01:17:13,000 --> 01:17:16,000
但我觉得其实这也恰恰是一个门槛

2461
01:17:16,000 --> 01:17:17,000
就是

2462
01:17:18,000 --> 01:17:19,000
为什么

2463
01:17:20,000 --> 01:17:22,000
换用 static

2464
01:17:22,000 --> 01:17:24,000
static 这种的人都是程序员

2465
01:17:24,000 --> 01:17:25,000
因为太麻烦了

2466
01:17:26,000 --> 01:17:29,000
因为程序员只有不怕麻烦的人才会搞这么麻烦的事情

2467
01:17:30,000 --> 01:17:32,000
或者反过来说

2468
01:17:32,000 --> 01:17:33,000
我觉得

2469
01:17:33,000 --> 01:17:34,000
普通人

2470
01:17:34,000 --> 01:17:36,000
且不论普通人有没有这个动机

2471
01:17:38,000 --> 01:17:40,000
普通人之所以不会去用这种 static

2472
01:17:40,000 --> 01:17:42,000
static 那种原因之一就是因为

2473
01:17:43,000 --> 01:17:47,000
迄今为止没有一个 static

2474
01:17:47,000 --> 01:17:50,000
这 static 就是支持所谓的锁建机做得编辑吧

2475
01:17:51,000 --> 01:17:52,000
还是有

2476
01:17:52,000 --> 01:17:53,000
我只不过 google 了

2477
01:17:54,000 --> 01:17:55,000
generator 肯定是不可以

2478
01:17:55,000 --> 01:17:56,000
如果你是 editor 肯定是有的

2479
01:17:56,000 --> 01:17:58,000
之前那些什么 front page

2480
01:17:58,000 --> 01:17:58,000
不

2481
01:17:58,000 --> 01:17:59,000
或者说

2482
01:17:59,000 --> 01:18:00,000
因为绝大多数

2483
01:18:00,000 --> 01:18:02,000
比如说我们刚才讨论的这几个

2484
01:18:03,000 --> 01:18:04,000
jk 也好

2485
01:18:04,000 --> 01:18:05,000
middleman 也好

2486
01:18:05,000 --> 01:18:06,000
pelican 也好

2487
01:18:06,000 --> 01:18:07,000
还是 hide 也好

2488
01:18:07,000 --> 01:18:08,000
还是

2489
01:18:08,000 --> 01:18:09,000
包括没有提到什么

2490
01:18:09,000 --> 01:18:13,000
clay 很 hexl 这种

2491
01:18:13,000 --> 01:18:14,000
其中每一个

2492
01:18:14,000 --> 01:18:15,000
包括包括 uGo 在内

2493
01:18:15,000 --> 01:18:16,000
都只支持 markdown

2494
01:18:16,000 --> 01:18:19,000
或者是另外一种什么样的

2495
01:18:19,000 --> 01:18:21,000
就是制标语言写成的

2496
01:18:21,000 --> 01:18:22,000
半

2497
01:18:23,000 --> 01:18:26,000
半原代码式的文档

2498
01:18:26,000 --> 01:18:27,000
对

2499
01:18:27,000 --> 01:18:30,000
然后把它转换成静态页面

2500
01:18:30,000 --> 01:18:33,000
有没有一种生成器支持

2501
01:18:33,000 --> 01:18:35,000
就是或者说是更小白友好的

2502
01:18:35,000 --> 01:18:36,000
可以让用户

2503
01:18:37,000 --> 01:18:38,000
通过某种方式

2504
01:18:38,000 --> 01:18:39,000
sample house and 位来

2505
01:18:39,000 --> 01:18:42,000
写出这种锁建机做得的东西呢

2506
01:18:42,000 --> 01:18:44,000
有啊

2507
01:18:44,000 --> 01:18:44,000
tumblr

2508
01:18:46,000 --> 01:18:48,000
tumblr 不是一个静态生成器

2509
01:18:48,000 --> 01:18:49,000
这就是问题所在

2510
01:18:49,000 --> 01:18:50,000
为什么小白用户他不懂这些

2511
01:18:50,000 --> 01:18:52,000
他为什么需要去区分

2512
01:18:52,000 --> 01:18:53,000
什么是静态

2513
01:18:53,000 --> 01:18:53,000
什么是动态

2514
01:18:53,000 --> 01:18:55,000
他根本没有关系

2515
01:18:57,000 --> 01:18:57,000
对吧

2516
01:18:57,000 --> 01:18:57,000
好吧

2517
01:18:57,000 --> 01:18:59,000
我刚才想的是

2518
01:18:59,000 --> 01:19:00,000
如果一定要

2519
01:19:00,000 --> 01:19:02,000
一定有一位某位小白用户

2520
01:19:02,000 --> 01:19:04,000
勇敢的听我们的节目

2521
01:19:04,000 --> 01:19:06,000
然后想要去试试静态生成器

2522
01:19:06,000 --> 01:19:08,000
却苦于没有办法

2523
01:19:08,000 --> 01:19:10,000
大概知道自己的网站

2524
01:19:10,000 --> 01:19:11,000
跑出来是什么样子的话

2525
01:19:11,000 --> 01:19:13,000
我觉得其实有一个比较好的方案

2526
01:19:13,000 --> 01:19:15,000
就是用 mode 之类的

2527
01:19:16,000 --> 01:19:18,000
markdown 编辑器来写

2528
01:19:18,000 --> 01:19:19,000
markdown

2529
01:19:19,000 --> 01:19:21,000
然后在 mode 里面看到

2530
01:19:21,000 --> 01:19:24,000
这个即时生成出来的

2531
01:19:24,000 --> 01:19:27,000
基本上带了格式这么一个

2532
01:19:27,000 --> 01:19:28,000
预览

2533
01:19:28,000 --> 01:19:30,000
然后在保存之后

2534
01:19:30,000 --> 01:19:32,000
很多静态网站生成器

2535
01:19:32,000 --> 01:19:33,000
都非常贴心提供了

2536
01:19:33,000 --> 01:19:35,000
即时预览功能

2537
01:19:35,000 --> 01:19:37,000
如果有什么源代码

2538
01:19:37,000 --> 01:19:39,000
比如如果你某一个原文件

2539
01:19:40,000 --> 01:19:40,000
有修改

2540
01:19:40,000 --> 01:19:42,000
它会自动把整个网站生成一遍

2541
01:19:42,000 --> 01:19:45,000
然后在你的本地跑一个流感器

2542
01:19:45,000 --> 01:19:47,000
来把生成好的网站展现给你看

2543
01:19:48,000 --> 01:19:48,000
感觉有点

2544
01:19:48,000 --> 01:19:50,000
其实这也算是某种意义上

2545
01:19:50,000 --> 01:19:52,000
但是我所见其所得

2546
01:19:52,000 --> 01:19:53,000
感觉好绕

2547
01:19:53,000 --> 01:19:54,000
不过刚才你词要有一点

2548
01:19:54,000 --> 01:19:55,000
我觉得很好

2549
01:19:55,000 --> 01:19:55,000
就是

2550
01:19:56,000 --> 01:19:58,000
普通用户用的话

2551
01:19:58,000 --> 01:19:59,000
你刚才讲的

2552
01:19:59,000 --> 01:20:02,000
显然能去用 github 做编辑器的人

2553
01:20:02,000 --> 01:20:04,000
还是多少有点 geek 范儿的

2554
01:20:06,000 --> 01:20:07,000
对

2555
01:20:07,000 --> 01:20:08,000
你不能指望一个

2556
01:20:08,000 --> 01:20:09,000
普通人

2557
01:20:09,000 --> 01:20:10,000
一个刚刚

2558
01:20:10,000 --> 01:20:11,000
什么是 geek

2559
01:20:11,000 --> 01:20:13,000
不能指望某些人去

2560
01:20:13,000 --> 01:20:14,000
只会用这个

2561
01:20:14,000 --> 01:20:16,000
只他能登录 wordpress 就不错了

2562
01:20:16,000 --> 01:20:18,000
然后能在 wordpress 后台里面

2563
01:20:19,000 --> 01:20:22,000
利用所见其所得的编辑器

2564
01:20:22,000 --> 01:20:25,000
把自己的文章大概格式一下

2565
01:20:25,000 --> 01:20:26,000
这已经非常不错了

2566
01:20:26,000 --> 01:20:28,000
你要强迫他去用 github 这种东西

2567
01:20:28,000 --> 01:20:29,000
让他理解什么叫

2568
01:20:30,000 --> 01:20:30,000
merge commit

2569
01:20:32,000 --> 01:20:34,000
就还是太强而所难

2570
01:20:35,000 --> 01:20:35,000
对

2571
01:20:35,000 --> 01:20:36,000
不过

2572
01:20:37,000 --> 01:20:38,000
这其实又反而变成了

2573
01:20:39,000 --> 01:20:41,000
动态站点的一个强项

2574
01:20:41,000 --> 01:20:41,000
你知道

2575
01:20:42,000 --> 01:20:44,000
wordpress 是有一个叫

2576
01:20:45,000 --> 01:20:46,000
叫什么

2577
01:20:46,000 --> 01:20:48,000
publish 接口的

2578
01:20:48,000 --> 01:20:49,000
就还有一个接口

2579
01:20:49,000 --> 01:20:51,000
可以让第三方程序通过那个接口

2580
01:20:51,000 --> 01:20:53,000
给他发布网站

2581
01:20:54,000 --> 01:20:55,000
然后有个叫什么

2582
01:20:57,000 --> 01:20:58,000
什么通过第三方接口

2583
01:20:58,000 --> 01:21:00,000
xmlrpc 吗

2584
01:21:00,000 --> 01:21:01,000
就是开始的那个

2585
01:21:01,000 --> 01:21:03,000
xmlrpc.php

2586
01:21:03,000 --> 01:21:05,000
好多漏洞都是从哪来的

2587
01:21:05,000 --> 01:21:06,000
对不管

2588
01:21:06,000 --> 01:21:07,000
但是就是从

2589
01:21:07,000 --> 01:21:09,000
我们先不讲他的底层实现

2590
01:21:09,000 --> 01:21:09,000
漂漂亮

2591
01:21:10,000 --> 01:21:10,000
他有这么一个功能

2592
01:21:10,000 --> 01:21:12,000
然后很多人会

2593
01:21:12,000 --> 01:21:12,000
比如说

2594
01:21:12,000 --> 01:21:13,000
就刚刚我们讲

2595
01:21:13,000 --> 01:21:14,000
你如果金台网站生产的话

2596
01:21:14,000 --> 01:21:17,000
你还是在本地编辑一个 markdown 文件

2597
01:21:17,000 --> 01:21:18,000
放进那个对应的目录

2598
01:21:18,000 --> 01:21:21,000
或者是你要在 github 上编辑一个东西

2599
01:21:21,000 --> 01:21:24,000
这种事情在非

2600
01:21:24,000 --> 01:21:26,000
pc 或者 markdown 是做不到的

2601
01:21:26,000 --> 01:21:28,000
你比如你在手机上就很麻烦

2602
01:21:28,000 --> 01:21:30,000
你在这个 ipad 上也做不到这件事情

2603
01:21:30,000 --> 01:21:31,000
但是

2604
01:21:32,000 --> 01:21:34,000
如果你有那种像 wordpress 的接口的话

2605
01:21:34,000 --> 01:21:36,000
你反而是可以做到这件事情的

2606
01:21:36,000 --> 01:21:38,000
你可以再用一个 app

2607
01:21:38,000 --> 01:21:39,000
然后再编辑文章

2608
01:21:39,000 --> 01:21:40,000
然后点 publish

2609
01:21:40,000 --> 01:21:44,000
这才是对普通用户友好的一个方式

2610
01:21:44,000 --> 01:21:48,000
我相信很多曾经的所谓

2611
01:21:48,000 --> 01:21:48,000
blog

2612
01:21:49,000 --> 01:21:52,000
publish software

2613
01:21:52,000 --> 01:21:55,000
也支持一键保存之后

2614
01:21:55,000 --> 01:21:57,000
同时发布到多个 blog 平台

2615
01:21:58,000 --> 01:21:59,000
还有这种

2616
01:21:59,000 --> 01:22:00,000
其中就包括 wordpress

2617
01:22:00,000 --> 01:22:01,000
还有这种神奇

2618
01:22:01,000 --> 01:22:01,000
有不这样的东西

2619
01:22:02,000 --> 01:22:03,000
对 blog

2620
01:22:03,000 --> 01:22:05,000
就是写 blog 用的本机软件

2621
01:22:05,000 --> 01:22:06,000
可是这样意义很在呢

2622
01:22:06,000 --> 01:22:08,000
一定一个人会同时写很多个 blog

2623
01:22:10,000 --> 01:22:12,000
这种很简直存在

2624
01:22:12,000 --> 01:22:13,000
就是没意义

2625
01:22:13,000 --> 01:22:14,000
所以现在没有人用

2626
01:22:14,000 --> 01:22:16,000
没有人再提起这种事

2627
01:22:16,000 --> 01:22:18,000
但是我是或人家使用过这种东西

2628
01:22:18,000 --> 01:22:19,000
好吧

2629
01:22:19,000 --> 01:22:22,000
而且当时非常按人神伤的

2630
01:22:22,000 --> 01:22:24,000
觉得我自己写的 blog 系统

2631
01:22:24,000 --> 01:22:25,000
不能支持这种远程平台

2632
01:22:25,000 --> 01:22:26,000
实在是太废了

2633
01:22:29,000 --> 01:22:31,000
其实如果你现在做一个这种接口

2634
01:22:31,000 --> 01:22:32,000
也不是很复杂

2635
01:22:32,000 --> 01:22:33,000
你把接口写一弄一下

2636
01:22:33,000 --> 01:22:37,000
然后这边写一个 web server

2637
01:22:37,000 --> 01:22:38,000
然后接收请求

2638
01:22:38,000 --> 01:22:40,000
然后把请求做成一个文件

2639
01:22:40,000 --> 01:22:41,000
放到本地目录

2640
01:22:41,000 --> 01:22:42,000
然后再跑一遍

2641
01:22:42,000 --> 01:22:44,000
你想到应该不是特别难的一件事情

2642
01:22:45,000 --> 01:22:47,000
对 也可以做一个 cutter 说

2643
01:22:47,000 --> 01:22:49,000
对 又是一个 cutter

2644
01:22:49,000 --> 01:22:51,000
only problem is XML

2645
01:22:51,000 --> 01:22:52,000
你又可以用 json

2646
01:22:54,000 --> 01:22:55,000
还不错

2647
01:22:55,000 --> 01:22:56,000
但是你还得

2648
01:22:56,000 --> 01:22:59,000
但是你得去说服那些

2649
01:22:59,000 --> 01:23:01,000
第三方的那个 app

2650
01:23:01,000 --> 01:23:05,000
就是什么博客软件的

2651
01:23:05,000 --> 01:23:06,000
作者支持你这个协议

2652
01:23:06,000 --> 01:23:07,000
那是另外一回事

2653
01:23:07,000 --> 01:23:10,000
所以最好还是实现一个既有的协议

2654
01:23:10,000 --> 01:23:11,000
会比较兼容性好一点

2655
01:23:13,000 --> 01:23:15,000
但是从应用性来讲

2656
01:23:15,000 --> 01:23:19,000
肯定那种是对普通用户更友好的

2657
01:23:19,000 --> 01:23:21,000
但是这种事情我们肯定是不 care 了

2658
01:23:21,000 --> 01:23:21,000
我们是谁

2659
01:23:21,000 --> 01:23:23,000
我们不是普通用户

2660
01:23:29,000 --> 01:23:31,000
所以我们现在是要推荐一下

2661
01:23:31,000 --> 01:23:36,000
所有对静态网站生成器的人

2662
01:23:36,000 --> 01:23:39,000
所有对静态网站生成器感兴趣的人

2663
01:23:39,000 --> 01:23:40,000
用一下预购

2664
01:23:43,000 --> 01:23:44,000
其实我还不确定

2665
01:23:44,000 --> 01:23:45,000
那个真的是适合所有人

2666
01:23:45,000 --> 01:23:47,000
因为他没有插件这一点

2667
01:23:47,000 --> 01:23:50,000
真的是挺大的一个局限

2668
01:23:50,000 --> 01:23:51,000
但是他的模板

2669
01:23:51,000 --> 01:23:53,000
我觉得对于喜欢折腾的人来说

2670
01:23:53,000 --> 01:23:55,000
或者说对于有对于

2671
01:23:55,000 --> 01:23:56,000
不管这个功能有没有用

2672
01:23:56,000 --> 01:23:58,000
先要问这有没有这个功能的人来说

2673
01:23:58,000 --> 01:24:01,000
预购可能并不是非常适合

2674
01:24:01,000 --> 01:24:01,000
对

2675
01:24:01,000 --> 01:24:03,000
而且他上手也不太容易

2676
01:24:03,000 --> 01:24:05,000
他的那个模板语言

2677
01:24:05,000 --> 01:24:06,000
因为是用了 Go 的

2678
01:24:06,000 --> 01:24:07,000
自带那个

2679
01:24:07,000 --> 01:24:09,000
那个就 Go 的标准库

2680
01:24:09,000 --> 01:24:10,000
自带的那个模板语言

2681
01:24:10,000 --> 01:24:13,000
也不是特别的

2682
01:24:13,000 --> 01:24:13,000
这没有名字

2683
01:24:13,000 --> 01:24:17,000
就叫 HTML slash template

2684
01:24:18,000 --> 01:24:19,000
OK

2685
01:24:19,000 --> 01:24:21,000
但是他那个语法

2686
01:24:22,000 --> 01:24:23,000
就不是非常 intuitive

2687
01:24:23,000 --> 01:24:25,000
语法比较简单

2688
01:24:25,000 --> 01:24:26,000
但是他那个数据

2689
01:24:26,000 --> 01:24:28,000
那个 Data Model 比较奇怪

2690
01:24:28,000 --> 01:24:30,000
可能不是那么直观吧

2691
01:24:30,000 --> 01:24:31,000
我觉得

2692
01:24:32,000 --> 01:24:33,000
就特别是如果你习惯了

2693
01:24:33,000 --> 01:24:35,000
像什么 Ginja

2694
01:24:35,000 --> 01:24:36,000
还有 Ruby 那些什么 Liquor

2695
01:24:36,000 --> 01:24:37,000
那些 Template 的时候

2696
01:24:37,000 --> 01:24:38,000
你在用这个

2697
01:24:38,000 --> 01:24:39,000
可能会觉得有点奇怪

2698
01:24:40,000 --> 01:24:42,000
而且 Rugo 的 Document

2699
01:24:42,000 --> 01:24:44,000
是稍微有点差的

2700
01:24:45,000 --> 01:24:46,000
OK

2701
01:24:46,000 --> 01:24:47,000
我用一下 Ginja

2702
01:24:47,000 --> 01:24:49,000
如果你只会这个 PHP

2703
01:24:49,000 --> 01:24:50,000
就不要来碰一碰

2704
01:24:51,000 --> 01:24:52,000
我用那个纯粹

2705
01:24:52,000 --> 01:24:55,000
就只是因为 Apple Force 的

2706
01:24:56,000 --> 01:24:59,000
就是你到这个量级

2707
01:24:59,000 --> 01:25:00,000
其他的那些机遇

2708
01:25:00,000 --> 01:25:03,000
解释脚本的生成期

2709
01:25:03,000 --> 01:25:04,000
都是没有办法

2710
01:25:04,000 --> 01:25:06,000
在几秒之内搞定的嘛

2711
01:25:06,000 --> 01:25:08,000
所以就这招了

2712
01:25:08,000 --> 01:25:09,000
然后就是

2713
01:25:09,000 --> 01:25:12,000
我自从对爱上勾烂

2714
01:25:12,000 --> 01:25:14,000
勾这个语言之后

2715
01:25:14,000 --> 01:25:16,000
对单个文件

2716
01:25:16,000 --> 01:25:17,000
单个可直接文件

2717
01:25:17,000 --> 01:25:20,000
即可部署这一点是非常的赞

2718
01:25:20,000 --> 01:25:21,000
因为我是一个很懒的人

2719
01:25:21,000 --> 01:25:23,000
我不想去操作服务器

2720
01:25:25,000 --> 01:25:26,000
爱上了原子化

2721
01:25:26,000 --> 01:25:29,000
虽然我是一直在操纵各种服务器

2722
01:25:29,000 --> 01:25:31,000
但是我非常讨厌这一点

2723
01:25:31,000 --> 01:25:32,000
所以什么

2724
01:25:32,000 --> 01:25:34,000
干一行恨一行非常正常

2725
01:25:34,000 --> 01:25:36,000
对什么依赖管理

2726
01:25:36,000 --> 01:25:38,000
什么部署的

2727
01:25:38,000 --> 01:25:39,000
版本管理

2728
01:25:40,000 --> 01:25:41,000
Not my style

2729
01:25:41,000 --> 01:25:42,000
对

2730
01:25:42,000 --> 01:25:44,000
知道越多就越痛恨他

2731
01:25:45,000 --> 01:25:46,000
当然我觉得勾烂这个特性

2732
01:25:46,000 --> 01:25:48,000
可能也跟那个作者有关

2733
01:25:48,000 --> 01:25:50,000
作者叫 Steve Francia

2734
01:25:50,000 --> 01:25:53,000
他是我去搜这个

2735
01:25:53,000 --> 01:25:54,000
预购这个工具的时候

2736
01:25:54,000 --> 01:25:58,000
才知道作者原来就是大名鼎鼎的 SPF 13

2737
01:25:58,000 --> 01:26:00,000
我知道这个名字最早是因为他的

2738
01:26:00,000 --> 01:26:03,000
那个 The Ultimate Vim Distribution

2739
01:26:03,000 --> 01:26:05,000
就是他在比较早的时候

2740
01:26:05,000 --> 01:26:07,000
推出了一个

2741
01:26:07,000 --> 01:26:11,000
就算是 Vim 的爱好者

2742
01:26:12,000 --> 01:26:14,000
爱好者所做的这么一个

2743
01:26:14,000 --> 01:26:16,000
多插件

2744
01:26:16,000 --> 01:26:19,000
白金 Platinum 点仓版这种感觉

2745
01:26:19,000 --> 01:26:21,000
但是我一直不明白这个的 point

2746
01:26:21,000 --> 01:26:24,000
和在这种东西的意义在哪里

2747
01:26:24,000 --> 01:26:28,000
他向你展示了一个大牛所定制出来的

2748
01:26:28,000 --> 01:26:30,000
Vim 能有多定期

2749
01:26:30,000 --> 01:26:31,000
好吧

2750
01:26:31,000 --> 01:26:32,000
但是这样学习成本好高

2751
01:26:33,000 --> 01:26:34,000
对我曾经用过一段

2752
01:26:34,000 --> 01:26:35,000
我曾经用过他一段时间

2753
01:26:35,000 --> 01:26:37,000
但是毕竟 Vim 这种

2754
01:26:37,000 --> 01:26:40,000
如果既然你是一个会敢于

2755
01:26:40,000 --> 01:26:42,000
或者说已经沦落到要用 Vim 的人

2756
01:26:42,000 --> 01:26:45,000
肯定是一个需求非常特别

2757
01:26:45,000 --> 01:26:49,000
非常没有一种所谓

2758
01:26:49,000 --> 01:26:51,000
那个叫什么 stop version

2759
01:26:51,000 --> 01:26:52,000
就是没有一个

2760
01:26:52,000 --> 01:26:55,000
从货架上直接拿下来的产品

2761
01:26:55,000 --> 01:26:57,000
能够完全满足需求的人

2762
01:26:57,000 --> 01:27:00,000
所以你肯定要把这东西各种摆弄

2763
01:27:00,000 --> 01:27:04,000
而 SPF 13 摆弄出来的这么一个 Ultimate Vim

2764
01:27:04,000 --> 01:27:08,000
最多起到的作用是

2765
01:27:08,000 --> 01:27:11,000
不是让小白能够更快的上手 Vim

2766
01:27:11,000 --> 01:27:14,000
而是让喜欢折腾的人可以看到这个东西

2767
01:27:14,000 --> 01:27:15,000
怎么可以被折腾

2768
01:27:15,000 --> 01:27:20,000
包括他组织 Vim 配置文件的方式

2769
01:27:20,000 --> 01:27:21,000
包括管理插线的方式

2770
01:27:22,000 --> 01:27:23,000
包括他配置插线的方式

2771
01:27:23,000 --> 01:27:25,000
包括他写的一些非常实用的小程序

2772
01:27:26,000 --> 01:27:28,000
所以它是一个标杆的作用

2773
01:27:28,000 --> 01:27:32,000
并不是让你直接真的去用这个东西本身

2774
01:27:33,000 --> 01:27:36,000
我相信他还是希望有人能用的

2775
01:27:36,000 --> 01:27:39,000
但我也觉得如果真的有人

2776
01:27:39,000 --> 01:27:42,000
需要用到他所提供的那些所有功能

2777
01:27:42,000 --> 01:27:46,000
那这个人绝对不会满足于就这么用这些功能

2778
01:27:46,000 --> 01:27:47,000
一定会去定制

2779
01:27:47,000 --> 01:27:48,000
有些拗口啊

2780
01:27:49,000 --> 01:27:50,000
一定会手痒

2781
01:27:50,000 --> 01:27:51,000
会去折腾他

2782
01:27:52,000 --> 01:27:52,000
对

2783
01:27:53,000 --> 01:27:55,000
这个人毕竟他也是个很牛的人

2784
01:27:55,000 --> 01:27:57,000
他是 MongoDB 的

2785
01:27:57,000 --> 01:27:59,000
所谓 Developer Advocate

2786
01:27:59,000 --> 01:28:00,000
就是

2787
01:28:01,000 --> 01:28:03,000
怎么读成说死者代言人

2788
01:28:04,000 --> 01:28:06,000
是一部科幻小说里面的

2789
01:28:07,000 --> 01:28:08,000
Developer Advocate

2790
01:28:09,000 --> 01:28:10,000
开发者代言人

2791
01:28:10,000 --> 01:28:12,000
然后搜一下这个职位

2792
01:28:12,000 --> 01:28:14,000
Evangelist 的意思吗

2793
01:28:14,000 --> 01:28:15,000
对

2794
01:28:15,000 --> 01:28:16,000
这个职位到底是什么意思

2795
01:28:16,000 --> 01:28:20,000
就是他是为本公司的开发者

2796
01:28:20,000 --> 01:28:21,000
说话的这么一个人

2797
01:28:21,000 --> 01:28:24,000
就是他会向外面的人们

2798
01:28:24,000 --> 01:28:26,000
宣称本公司的产品多么好

2799
01:28:26,000 --> 01:28:27,000
就忽悠

2800
01:28:27,000 --> 01:28:29,000
忽悠开发者的人

2801
01:28:29,000 --> 01:28:29,000
对

2802
01:28:29,000 --> 01:28:30,000
开发者大呼应

2803
01:28:30,000 --> 01:28:31,000
可以这么理解

2804
01:28:31,000 --> 01:28:34,000
但是能够做到这种位置的人

2805
01:28:34,000 --> 01:28:36,000
基本上都非常牛

2806
01:28:38,000 --> 01:28:38,000
对

2807
01:28:38,000 --> 01:28:40,000
所以大家可以去尝试一下

2808
01:28:40,000 --> 01:28:42,000
但是痛苦程度

2809
01:28:43,000 --> 01:28:45,000
你们我已经给你们打过预防针了

2810
01:28:45,000 --> 01:28:47,000
你们自己想清楚

2811
01:28:47,000 --> 01:28:49,000
如果 PITA 指数

2812
01:28:49,000 --> 01:28:51,000
就是 Pay in Ass 指数太高的话

2813
01:28:51,000 --> 01:28:52,000
本站该不负责

2814
01:28:56,000 --> 01:28:58,000
所以你有兴趣把你的

2815
01:28:59,000 --> 01:29:00,000
BOK 战点切过来吗

2816
01:29:01,000 --> 01:29:03,000
其实我一直在想

2817
01:29:03,000 --> 01:29:05,000
我要不要把 Type Spiffle

2818
01:29:05,000 --> 01:29:07,000
切到静态生成

2819
01:29:07,000 --> 01:29:09,000
他们还是在 WorkPress 上面跑的

2820
01:29:09,000 --> 01:29:09,000
因为

2821
01:29:10,000 --> 01:29:11,000
对现在还跑到 WorkPress

2822
01:29:11,000 --> 01:29:13,000
而且比较

2823
01:29:14,000 --> 01:29:16,000
我的安全问题我都不回答

2824
01:29:16,000 --> 01:29:18,000
有可能造成安全疑问

2825
01:29:18,000 --> 01:29:20,000
真正的答案是我不知道

2826
01:29:21,000 --> 01:29:22,000
肯定不是 4

2827
01:29:22,000 --> 01:29:23,000
我觉得

2828
01:29:23,000 --> 01:29:25,000
不过这个版本问题没有任何区别

2829
01:29:25,000 --> 01:29:26,000
你做 WorkPress 234

2830
01:29:26,000 --> 01:29:27,000
都是有安全的动作

2831
01:29:27,000 --> 01:29:29,000
你说出来又有什么关系

2832
01:29:30,000 --> 01:29:33,000
我觉得最大问题可能是

2833
01:29:33,000 --> 01:29:34,000
在迁移过程中

2834
01:29:34,000 --> 01:29:36,000
会有很多什么图片

2835
01:29:36,000 --> 01:29:37,000
烂七八糟的

2836
01:29:37,000 --> 01:29:38,000
需要是

2837
01:29:38,000 --> 01:29:39,000
这是一个最核心的问题

2838
01:29:39,000 --> 01:29:41,000
把绝对地值改成相对

2839
01:29:41,000 --> 01:29:41,000
因为

2840
01:29:44,000 --> 01:29:46,000
我不知道你是怎么在你的 Blog

2841
01:29:46,000 --> 01:29:47,000
或者是 Apple Fast

2842
01:29:47,000 --> 01:29:49,000
是怎么在 Blog 上插入图片的

2843
01:29:49,000 --> 01:29:52,000
至少我是所有图片都放在 Flicker 上

2844
01:29:52,000 --> 01:29:53,000
但是 Flicker 被国内封了

2845
01:29:53,000 --> 01:29:54,000
但我也无所谓

2846
01:29:54,000 --> 01:29:54,000
所以

2847
01:29:55,000 --> 01:29:56,000
对于我来说不是什么大问题

2848
01:29:56,000 --> 01:29:58,000
我就把所有图片传到 Flicker 上

2849
01:29:58,000 --> 01:30:00,000
然后用 Flicker 的共享功能

2850
01:30:00,000 --> 01:30:02,000
得到那个

2851
01:30:02,000 --> 01:30:04,000
把这个图片嵌入网址

2852
01:30:04,000 --> 01:30:05,000
一串 HTML

2853
01:30:05,000 --> 01:30:06,000
然后把这串 HTML

2854
01:30:06,000 --> 01:30:07,000
嵌入到我的文章里面

2855
01:30:07,000 --> 01:30:08,000
所有的文章

2856
01:30:08,000 --> 01:30:09,000
所以说我的文章基本上

2857
01:30:09,000 --> 01:30:11,000
全都是天生可依制的

2858
01:30:11,000 --> 01:30:15,000
但是如果你要把 WorkPress 里面的文章导出来

2859
01:30:15,000 --> 01:30:17,000
那就必然涉及到一个

2860
01:30:17,000 --> 01:30:18,000
Asset Management 的问题

2861
01:30:18,000 --> 01:30:21,000
就是你要把这些图片放去哪

2862
01:30:21,000 --> 01:30:22,000
你传到

2863
01:30:22,000 --> 01:30:23,000
等一下

2864
01:30:23,000 --> 01:30:25,000
Apple Fast 之前在 WorkPress 的时候

2865
01:30:25,000 --> 01:30:26,000
那些文章都是上传到 WorkPress

2866
01:30:26,000 --> 01:30:29,000
有个什么 wp-content

2867
01:30:29,000 --> 01:30:30,000
然后有一个

2868
01:30:30,000 --> 01:30:31,000
对

2869
01:30:31,000 --> 01:30:32,000
Upload 还是什么

2870
01:30:32,000 --> 01:30:33,000
Images

2871
01:30:33,000 --> 01:30:33,000
对

2872
01:30:33,000 --> 01:30:33,000
一个

2873
01:30:33,000 --> 01:30:34,000
Upload images

2874
01:30:34,000 --> 01:30:35,000
在一个目的里面

2875
01:30:35,000 --> 01:30:36,000
然后其实很简单

2876
01:30:36,000 --> 01:30:37,000
你就保留那个路径

2877
01:30:38,000 --> 01:30:39,000
你在那个静态

2878
01:30:39,000 --> 01:30:40,000
正点生成器

2879
01:30:40,000 --> 01:30:41,000
它不是大部分都会有一个

2880
01:30:41,000 --> 01:30:42,000
这个 Static

2881
01:30:42,000 --> 01:30:43,000
或者是类似的这种

2882
01:30:43,000 --> 01:30:44,000
或者是 Publish 这种目录

2883
01:30:44,000 --> 01:30:45,000
让你放那种

2884
01:30:45,000 --> 01:30:46,000
不需要经过它处理

2885
01:30:46,000 --> 01:30:48,000
你直接复制过去那堆文件

2886
01:30:49,000 --> 01:30:50,000
你就把整个那个

2887
01:30:50,000 --> 01:30:51,000
WP-content

2888
01:30:51,000 --> 01:30:52,000
WorkPress

2889
01:30:52,000 --> 01:30:53,000
-wp-content

2890
01:30:53,000 --> 01:30:53,000
然后

2891
01:30:53,000 --> 01:30:55,000
-upload

2892
01:30:55,000 --> 01:30:56,000
这个目录复制过去就好了

2893
01:30:56,000 --> 01:30:57,000
搞定

2894
01:30:57,000 --> 01:30:59,000
不需要做任何修改

2895
01:30:59,000 --> 01:31:00,000
好吧

2896
01:31:00,000 --> 01:31:02,000
那我和 Rex 商量一下

2897
01:31:02,000 --> 01:31:05,000
因为我相信现在的

2898
01:31:05,000 --> 01:31:07,000
评论也已经被转到了 Discourses 上

2899
01:31:07,000 --> 01:31:08,000
所以评论这个

2900
01:31:08,000 --> 01:31:08,000
对啊

2901
01:31:08,000 --> 01:31:10,000
我们没有讲这个评论

2902
01:31:10,000 --> 01:31:11,000
这个要补充一下

2903
01:31:11,000 --> 01:31:11,000
对

2904
01:31:11,000 --> 01:31:13,000
其实从动态网站

2905
01:31:13,000 --> 01:31:15,000
迁移到静态网站生成器

2906
01:31:15,000 --> 01:31:16,000
最大的两个问题

2907
01:31:16,000 --> 01:31:18,000
我们刚才就已经都说到了

2908
01:31:18,000 --> 01:31:19,000
一个是

2909
01:31:19,000 --> 01:31:20,000
Asset Management

2910
01:31:20,000 --> 01:31:23,000
就是你之前上传的那些图片怎么办

2911
01:31:23,000 --> 01:31:24,000
另外一个就是

2912
01:31:24,000 --> 01:31:26,000
你之前那些评论怎么办

2913
01:31:26,000 --> 01:31:26,000
对

2914
01:31:27,000 --> 01:31:29,000
所以你知道我怎么处理了吗

2915
01:31:29,000 --> 01:31:31,000
基本上已经都有

2916
01:31:31,000 --> 01:31:31,000
你怎么处理

2917
01:31:31,000 --> 01:31:32,000
就不要评论了

2918
01:31:34,000 --> 01:31:36,000
这个我说出这句话

2919
01:31:36,000 --> 01:31:38,000
Lawrence 一定很高兴

2920
01:31:40,000 --> 01:31:42,000
我可以理解 Lawrence 是这样的人

2921
01:31:42,000 --> 01:31:44,000
这是他的审美曲线

2922
01:31:44,000 --> 01:31:45,000
而且我发现有这么一个问题

2923
01:31:45,000 --> 01:31:47,000
就是之前 WorkPress 那个评论

2924
01:31:47,000 --> 01:31:49,000
是可以发到我们自己站点上面

2925
01:31:49,000 --> 01:31:50,000
后来

2926
01:31:50,000 --> 01:31:53,000
已经被叫什么 Spanbot 自动化了

2927
01:31:53,000 --> 01:31:55,000
就所有的最近

2928
01:31:55,000 --> 01:31:56,000
因为

2929
01:31:56,000 --> 01:31:58,000
按摩法治也有好长一段时间没有更新了

2930
01:31:58,000 --> 01:32:00,000
就最近一两年的新增评论

2931
01:32:00,000 --> 01:32:02,000
就基本上全是 Span

2932
01:32:03,000 --> 01:32:05,000
所以就关掉就关掉呗

2933
01:32:05,000 --> 01:32:06,000
也已经无所谓

2934
01:32:06,000 --> 01:32:07,000
对

2935
01:32:07,000 --> 01:32:09,000
这种态度也是可以理解的

2936
01:32:09,000 --> 01:32:12,000
就你作为一个内容的产出者

2937
01:32:12,000 --> 01:32:14,000
如果你知道自己的内容足够

2938
01:32:14,000 --> 01:32:17,000
如果你对自己的内容足够有信心

2939
01:32:17,000 --> 01:32:19,000
那么其实是不需要

2940
01:32:19,000 --> 01:32:20,000
开一天早上开始评论

2941
01:32:20,000 --> 01:32:23,000
让一个莫名其妙的人

2942
01:32:23,000 --> 01:32:24,000
可以非常

2943
01:32:25,000 --> 01:32:27,000
通过非常极低的成本抢到沙发

2944
01:32:27,000 --> 01:32:30,000
真正想要跟你打交道的人

2945
01:32:30,000 --> 01:32:32,000
会想方设法的把信息传染给你

2946
01:32:32,000 --> 01:32:33,000
对

2947
01:32:33,000 --> 01:32:35,000
而且现在不怎么想要告诉你的人

2948
01:32:35,000 --> 01:32:37,000
那就不让他们评论好

2949
01:32:37,000 --> 01:32:37,000
对

2950
01:32:37,000 --> 01:32:39,000
我觉得这个是很重要的一点

2951
01:32:39,000 --> 01:32:40,000
就是要通过某种方法

2952
01:32:40,000 --> 01:32:42,000
提高评论的成本

2953
01:32:42,000 --> 01:32:45,000
这样才可以有效地降低那种

2954
01:32:45,000 --> 01:32:46,000
什么沙发啊

2955
01:32:46,000 --> 01:32:47,000
Span 凳啊

2956
01:32:47,000 --> 01:32:48,000
Span

2957
01:32:48,000 --> 01:32:49,000
都不说 Span

2958
01:32:49,000 --> 01:32:51,000
那个是一个技术问题

2959
01:32:51,000 --> 01:32:52,000
I don't like spam

2960
01:32:52,000 --> 01:32:54,000
就现在其实

2961
01:32:54,000 --> 01:32:56,000
有很多渠道可以给作者提出反馈了

2962
01:32:56,000 --> 01:32:58,000
比如说

2963
01:32:58,000 --> 01:32:59,000
Twitter 是一个渠道

2964
01:32:59,000 --> 01:33:00,000
微博是个渠道

2965
01:33:00,000 --> 01:33:01,000
就在远古一点

2966
01:33:01,000 --> 01:33:02,000
没有这些东西的时候

2967
01:33:02,000 --> 01:33:03,000
你还可以写邮件

2968
01:33:03,000 --> 01:33:04,000
对吧

2969
01:33:04,000 --> 01:33:04,000
所以

2970
01:33:04,000 --> 01:33:05,000
就

2971
01:33:05,000 --> 01:33:07,000
真正想要给你反馈

2972
01:33:07,000 --> 01:33:08,000
想要跟你讨论

2973
01:33:08,000 --> 01:33:09,000
是一个

2974
01:33:09,000 --> 01:33:11,000
就是有这种正确姿态的人

2975
01:33:11,000 --> 01:33:14,000
他肯定会有各种方法找到你

2976
01:33:14,000 --> 01:33:14,000
但是

2977
01:33:14,000 --> 01:33:16,000
你没有必要

2978
01:33:16,000 --> 01:33:18,000
要把这个评论做得那么易用

2979
01:33:18,000 --> 01:33:18,000
或者易读

2980
01:33:18,000 --> 01:33:19,000
而且反过来

2981
01:33:19,000 --> 01:33:21,000
从用户的角度来讲

2982
01:33:21,000 --> 01:33:22,000
其实

2983
01:33:22,000 --> 01:33:25,000
很多年以前那种各种什么网站也好

2984
01:33:25,000 --> 01:33:26,000
还有什么

2985
01:33:26,000 --> 01:33:28,000
个人博客也好

2986
01:33:28,000 --> 01:33:29,000
下面都有一个评论

2987
01:33:29,000 --> 01:33:30,000
你就贴了个评论

2988
01:33:30,000 --> 01:33:32,000
你也不大可能会记得回去看

2989
01:33:32,000 --> 01:33:33,000
那个博主给你回复了什么

2990
01:33:33,000 --> 01:33:34,000
对吧

2991
01:33:37,000 --> 01:33:38,000
是吧

2992
01:33:38,000 --> 01:33:41,000
我觉得还是跟目前沟通的渠道多起来

2993
01:33:41,000 --> 01:33:43,000
有所关联

2994
01:33:43,000 --> 01:33:44,000
因为比如说

2995
01:33:44,000 --> 01:33:46,000
我在德国有一个

2996
01:33:46,000 --> 01:33:48,000
挺好的朋友叫做

2997
01:33:48,000 --> 01:33:49,000
可能网名叫做问浩瑜

2998
01:33:49,000 --> 01:33:50,000
点问浩瑜

2999
01:33:50,000 --> 01:33:51,000
一定要讲一个点

3000
01:33:51,000 --> 01:33:52,000
点问浩瑜

3001
01:33:52,000 --> 01:33:54,000
他就是在我

3002
01:33:54,000 --> 01:33:55,000
在读我的 blog

3003
01:33:55,000 --> 01:33:56,000
从

3004
01:33:57,000 --> 01:33:58,000
当时我在德国

3005
01:33:58,000 --> 01:33:59,000
他在中国

3006
01:33:59,000 --> 01:34:01,000
读一直读到他也来德国念书

3007
01:34:01,000 --> 01:34:04,000
然后后来我们两个

3008
01:34:04,000 --> 01:34:06,000
在德国见面什么的

3009
01:34:06,000 --> 01:34:09,000
这一系列都是通过他在我的 blog 留言开始

3010
01:34:09,000 --> 01:34:11,000
所以

3011
01:34:11,000 --> 01:34:12,000
当然这也是只是个例吧

3012
01:34:12,000 --> 01:34:13,000
因为我可能通过这种方式

3013
01:34:13,000 --> 01:34:16,000
以这种方式认识的朋友只有他一个人

3014
01:34:17,000 --> 01:34:19,000
这肯定也是一种方式

3015
01:34:19,000 --> 01:34:21,000
不管怎么说

3016
01:34:21,000 --> 01:34:24,000
这种形式已经变得越来越不重要

3017
01:34:24,000 --> 01:34:25,000
对

3018
01:34:25,000 --> 01:34:25,000
而且就是

3019
01:34:25,000 --> 01:34:28,000
而且现在基本上那种

3020
01:34:28,000 --> 01:34:31,000
每个赛的自己的那种评论功能

3021
01:34:31,000 --> 01:34:33,000
都沦为了这个 spam 的战场

3022
01:34:33,000 --> 01:34:35,000
所以很多人就把它彻底关掉

3023
01:34:35,000 --> 01:34:37,000
然后就像刚刚我讲的

3024
01:34:37,000 --> 01:34:38,000
你要找到我很简单

3025
01:34:38,000 --> 01:34:40,000
去社交媒体上

3026
01:34:40,000 --> 01:34:42,000
找我或者给我发邮件

3027
01:34:42,000 --> 01:34:43,000
然后邮件的话

3028
01:34:43,000 --> 01:34:45,000
只要你愿意找到我

3029
01:34:45,000 --> 01:34:46,000
你总是可以找到我

3030
01:34:46,000 --> 01:34:48,000
邮件地址就在什么最顶上

3031
01:34:48,000 --> 01:34:50,000
其实也很简单的一件事

3032
01:34:51,000 --> 01:34:52,000
还有一个就是

3033
01:34:52,000 --> 01:34:54,000
如果你确实想要评论的话

3034
01:34:54,000 --> 01:34:55,000
也有一些方法

3035
01:34:55,000 --> 01:34:57,000
就国外的话有那个叫

3036
01:34:58,000 --> 01:34:58,000
你叫什么来的

3037
01:34:59,000 --> 01:35:00,000
discuss

3038
01:35:00,000 --> 01:35:00,000
还有什么

3039
01:35:01,000 --> 01:35:03,000
就是有个第三方的评论的

3040
01:35:03,000 --> 01:35:05,000
支持的一个平台叫什么

3041
01:35:06,000 --> 01:35:06,000
对

3042
01:35:06,000 --> 01:35:07,000
就是 discuss

3043
01:35:07,000 --> 01:35:08,000
discuss

3044
01:35:08,000 --> 01:35:08,000
对吧

3045
01:35:08,000 --> 01:35:09,000
这个是一个

3046
01:35:09,000 --> 01:35:11,000
然后上次我们讲键盘

3047
01:35:11,000 --> 01:35:12,000
那时候也提到了

3048
01:35:12,000 --> 01:35:14,000
那个 stack overflow 的创始人

3049
01:35:15,000 --> 01:35:17,000
去后来做了一个叫 discourse 的

3050
01:35:17,000 --> 01:35:18,000
这么一个平台

3051
01:35:18,000 --> 01:35:19,000
然后它

3052
01:35:20,000 --> 01:35:21,000
可以说是一个增强版的 discourse

3053
01:35:21,000 --> 01:35:23,000
就是增强版的 discourse

3054
01:35:24,000 --> 01:35:26,000
就当你可以集中的去

3055
01:35:26,000 --> 01:35:27,000
就作为

3056
01:35:27,000 --> 01:35:29,000
你说作为这个内容的提供方也好

3057
01:35:29,000 --> 01:35:31,000
还是内容的消费方也好

3058
01:35:31,000 --> 01:35:32,000
你们都可以在一个统一的地方

3059
01:35:32,000 --> 01:35:35,000
去完成评论和回复的功能

3060
01:35:35,000 --> 01:35:37,000
就不是像之前那种

3061
01:35:37,000 --> 01:35:39,000
你可能上了五个博客站点

3062
01:35:39,000 --> 01:35:40,000
你都留了评论

3063
01:35:40,000 --> 01:35:41,000
你还得挨个去看

3064
01:35:41,000 --> 01:35:43,000
这就显然太不用

3065
01:35:43,000 --> 01:35:44,000
用户友好了

3066
01:35:44,000 --> 01:35:46,000
对于真正想要跟你交流的人来讲

3067
01:35:47,000 --> 01:35:48,000
所以这也是一个可以考虑的方法

3068
01:35:48,000 --> 01:35:50,000
然后他们的那个就很简单了

3069
01:35:51,000 --> 01:35:52,000
就是你在你的这个

3070
01:35:52,000 --> 01:35:55,000
金泰博客的页面上嵌入

3071
01:35:56,000 --> 01:35:57,000
一个这个 java 的脚本

3072
01:35:57,000 --> 01:35:58,000
java script 的脚本

3073
01:35:59,000 --> 01:36:01,000
然后这个 java script 会动态的生成

3074
01:36:02,000 --> 01:36:04,000
一个评论的界面

3075
01:36:04,000 --> 01:36:06,000
然后他可以写评论之后

3076
01:36:06,000 --> 01:36:07,000
就会直接发到那个

3077
01:36:07,000 --> 01:36:10,000
像 discourse 或者 discuss 这种

3078
01:36:10,000 --> 01:36:11,000
第三方的评论平台上去

3079
01:36:11,000 --> 01:36:13,000
这也是一种玩法

3080
01:36:13,000 --> 01:36:14,000
不过我不知道国内有没有

3081
01:36:14,000 --> 01:36:15,000
这种类似的东西

3082
01:36:15,000 --> 01:36:16,000
好像国内这个

3083
01:36:18,000 --> 01:36:19,000
环境不太好

3084
01:36:19,000 --> 01:36:22,000
在网页上内嵌微博

3085
01:36:23,000 --> 01:36:24,000
环境不太好

3086
01:36:24,000 --> 01:36:25,000
现在反过来

3087
01:36:25,000 --> 01:36:27,000
反过来现在还基本上都是一个

3088
01:36:27,000 --> 01:36:30,000
都是说你要在微博上给我留言

3089
01:36:30,000 --> 01:36:31,000
然后你得先粉我对吧

3090
01:36:32,000 --> 01:36:33,000
这种方式来做的

3091
01:36:33,000 --> 01:36:34,000
其实也蛮好的

3092
01:36:34,000 --> 01:36:36,000
这样粉丝数也上去了

3093
01:36:36,000 --> 01:36:38,000
这个什么 spam 也控制住了

3094
01:36:38,000 --> 01:36:38,000
大家都蛮开心的

3095
01:36:38,000 --> 01:36:39,000
我觉得也是好事

3096
01:36:41,000 --> 01:36:41,000
对

3097
01:36:42,000 --> 01:36:44,000
而且国内也是很多

3098
01:36:44,000 --> 01:36:46,000
还是有很多人在用什么

3099
01:36:46,000 --> 01:36:47,000
新浪博客或者是

3100
01:36:48,000 --> 01:36:49,000
天哪真的吗

3101
01:36:49,000 --> 01:36:49,000
还有人在用

3102
01:36:50,000 --> 01:36:51,000
真的

3103
01:36:51,000 --> 01:36:51,000
真的

3104
01:36:52,000 --> 01:36:53,000
还有 QQ 空间

3105
01:36:53,000 --> 01:36:55,000
博客大巴还在吗

3106
01:36:55,000 --> 01:36:58,000
QQ 空间更是一战式体验

3107
01:36:58,000 --> 01:36:59,000
你只要 QQ 登陆了

3108
01:36:59,000 --> 01:37:00,000
你在上面干什么都是互动

3109
01:37:01,000 --> 01:37:03,000
那个都不叫博客评价

3110
01:37:03,000 --> 01:37:04,000
那个是社交

3111
01:37:04,000 --> 01:37:06,000
生态环境还是差太多

3112
01:37:06,000 --> 01:37:07,000
对

3113
01:37:07,000 --> 01:37:09,000
所以你说小白写博客

3114
01:37:09,000 --> 01:37:12,000
那肯定上什么 Facebook 之类的写的

3115
01:37:12,000 --> 01:37:13,000
Q 空间里面写的

3116
01:37:15,000 --> 01:37:16,000
对

3117
01:37:16,000 --> 01:37:17,000
这才是正途

3118
01:37:17,000 --> 01:37:18,000
我们谈论的东西

3119
01:37:18,000 --> 01:37:20,000
有点还是有点太脱离现实

3120
01:37:20,000 --> 01:37:22,000
不脱离现实

3121
01:37:22,000 --> 01:37:25,000
这个什么 Our world is a reality

3122
01:37:26,000 --> 01:37:28,000
别人的世界都不是现实

3123
01:37:33,000 --> 01:37:35,000
这个磕钥匙

3124
01:37:36,000 --> 01:37:36,000
对

3125
01:37:37,000 --> 01:37:39,000
行天就这样

3126
01:37:40,000 --> 01:37:40,000
行

3127
01:37:40,000 --> 01:37:41,000
差不多就这样

3128
01:37:41,000 --> 01:37:42,000
感觉好乱

3129
01:37:42,000 --> 01:37:43,000
对不起

3130
01:37:44,000 --> 01:37:45,000
对

3131
01:37:45,000 --> 01:37:47,000
我上一期录的时候是深夜

3132
01:37:47,000 --> 01:37:50,000
我觉得好像头脑都看清楚

3133
01:37:50,000 --> 01:37:51,000
这一次又是深夜录了

3134
01:37:51,000 --> 01:37:51,000
所以

3135
01:37:51,000 --> 01:37:53,000
下次我们改白天好吧

3136
01:37:53,000 --> 01:37:54,000
对

3137
01:37:54,000 --> 01:37:55,000
下次尽量改个白天吧

3138
01:37:56,000 --> 01:37:58,000
但不管怎么说这一期完成了

3139
01:37:58,000 --> 01:38:01,000
那希望大家能够喜欢

3140
01:38:02,000 --> 01:38:05,000
现在是 Zulu time

3141
01:38:06,000 --> 01:38:08,000
百分之百分号

3142
01:38:08,000 --> 01:38:10,000
H 点的反正您正在收听

3143
01:38:10,000 --> 01:38:12,000
或者正在反复一听再听的是

3144
01:38:12,000 --> 01:38:14,000
在内核广告里抗议当

3145
01:38:14,000 --> 01:38:16,000
由我和 Rail 主持的 Portcast 节目

3146
01:38:16,000 --> 01:38:18,000
今天您听到的是第三期

3147
01:38:18,000 --> 01:38:21,000
我们讲的主题是

3148
01:38:22,000 --> 01:38:24,000
静态网站生成系

3149
01:38:25,000 --> 01:38:27,000
我们目前已经改成了两周一期

3150
01:38:27,000 --> 01:38:29,000
所以下一期的话

3151
01:38:29,000 --> 01:38:31,000
将是两周之后

3152
01:38:31,000 --> 01:38:32,000
还有星期天播出

3153
01:38:34,000 --> 01:38:34,000
感谢您的收听

3154
01:38:36,000 --> 01:38:37,000
就这样吧

3155
01:38:37,000 --> 01:38:37,000
拜拜

3156
01:38:37,000 --> 01:38:39,000
你去找人编辑

3157
01:38:40,000 --> 01:38:42,000
你知道在勾里面

3158
01:38:42,000 --> 01:38:43,000
就是

3159
01:38:43,000 --> 01:38:44,000
就是格式化时间

3160
01:38:44,000 --> 01:38:46,000
不是通过这种方式来实现的吗

3161
01:38:49,000 --> 01:38:49,000
那是怎么实现的

3162
01:38:50,000 --> 01:38:52,000
它那个方法很机制的

3163
01:38:52,000 --> 01:38:55,000
就它规定了一个时间点

3164
01:38:55,000 --> 01:38:57,000
就是一个特别时间点

3165
01:38:57,000 --> 01:38:59,000
然后你直接照着

3166
01:38:59,000 --> 01:39:01,000
你想要的格式书写

3167
01:39:01,000 --> 01:39:02,000
那个时间点就好

3168
01:39:03,000 --> 01:39:04,000
你有没有我意思吗

3169
01:39:04,000 --> 01:39:05,000
就是比如说

3170
01:39:05,000 --> 01:39:06,000
你想要格式化是 200

3171
01:39:06,000 --> 01:39:07,000
比较近 2014

3172
01:39:07,000 --> 01:39:08,000
横杠

3173
01:39:09,000 --> 01:39:11,000
10 月就是 10 杠

3174
01:39:11,000 --> 01:39:12,000
然后 20

3175
01:39:12,000 --> 01:39:13,000
然后杠几点几分

3176
01:39:13,000 --> 01:39:13,000
对吧

3177
01:39:14,000 --> 01:39:16,000
然后你就按你想

3178
01:39:16,000 --> 01:39:18,000
你脑海中想象的这个格式

3179
01:39:18,000 --> 01:39:20,000
把它给定的那个时间点

3180
01:39:20,000 --> 01:39:21,000
给你写出来

3181
01:39:21,000 --> 01:39:22,000
然后你用那个作为一个格式串

3182
01:39:22,000 --> 01:39:24,000
去 format 的那个制服

3183
01:39:24,000 --> 01:39:26,000
那个时间就可以变成你想要的格式

3184
01:39:26,000 --> 01:39:29,000
问题在于那个 format 的制服串怎么写

3185
01:39:29,000 --> 01:39:30,000
你刚才说的是

3186
01:39:30,000 --> 01:39:32,000
你有一个知道的时间点

3187
01:39:32,000 --> 01:39:35,000
然后你要把这个知道的时间点

3188
01:39:35,000 --> 01:39:37,000
格式化成某一个特定的时间

3189
01:39:37,000 --> 01:39:37,000
不对

3190
01:39:37,000 --> 01:39:39,000
就是某一个特定的格式

3191
01:39:39,000 --> 01:39:40,000
你现在的问题就是

3192
01:39:40,000 --> 01:39:41,000
你有一个任意时间的

3193
01:39:41,000 --> 01:39:45,000
一个 daytime 的一个变量

3194
01:39:45,000 --> 01:39:47,000
你要把它变成一个

3195
01:39:47,000 --> 01:39:48,000
叫什么

3196
01:39:49,000 --> 01:39:50,000
一个制服串

3197
01:39:50,000 --> 01:39:50,000
对吧

3198
01:39:51,000 --> 01:39:51,000
这个制服串

3199
01:39:51,000 --> 01:39:53,000
你心目中是有一个指定的格式

3200
01:39:53,000 --> 01:39:54,000
长的样子的

3201
01:39:55,000 --> 01:39:57,000
然后它在我们比如说 C 系的

3202
01:39:57,000 --> 01:39:59,000
或者像 Python Ruby 这些语言

3203
01:39:59,000 --> 01:40:00,000
也好就是有一种那种

3204
01:40:00,000 --> 01:40:01,000
就是 placeholder

3205
01:40:01,000 --> 01:40:02,000
刚我们讲的百分号

3206
01:40:02,000 --> 01:40:03,000
H 百分号 M 这种方式

3207
01:40:03,000 --> 01:40:06,000
来指代某一种类型的时间的

3208
01:40:07,000 --> 01:40:09,000
制服串的形式对吧

3209
01:40:10,000 --> 01:40:10,000
对

3210
01:40:10,000 --> 01:40:12,000
然后但是沟里面他就说

3211
01:40:13,000 --> 01:40:15,000
这个太麻烦太不直观了

3212
01:40:15,000 --> 01:40:18,000
比较难你还去查手册怎么看

3213
01:40:18,000 --> 01:40:20,000
这个你只要记住一件事情

3214
01:40:20,000 --> 01:40:21,000
就是你记住一个时间点

3215
01:40:21,000 --> 01:40:23,000
就是 2006 年 1 月 2 号

3216
01:40:24,000 --> 01:40:27,000
的 3.4 分 5 秒

3217
01:40:27,000 --> 01:40:28,000
这个时间点

3218
01:40:29,000 --> 01:40:32,000
然后你用你希望的那个

3219
01:40:32,000 --> 01:40:34,000
格式把这个时间写出来

3220
01:40:35,000 --> 01:40:37,000
就叫成一个制服串对吧

3221
01:40:38,000 --> 01:40:39,000
然后你把这个制服串

3222
01:40:39,000 --> 01:40:40,000
作为这个格式化

3223
01:40:40,000 --> 01:40:42,000
你任意时间的制服串

3224
01:40:42,000 --> 01:40:45,000
它就得到你需要的一个格式

3225
01:40:47,000 --> 01:40:48,000
解释

3226
01:40:48,000 --> 01:40:49,000
可是他怎么知道这个

3227
01:40:49,000 --> 01:40:50,000
没有解释清楚

3228
01:40:50,000 --> 01:40:52,000
就是他怎么知道这个制服串里面的

3229
01:40:52,000 --> 01:40:55,000
哪一部分是需要被用目标时间替换掉的

3230
01:40:55,000 --> 01:40:57,000
所以你听刚才我讲的那段是

3231
01:40:57,000 --> 01:41:02,000
2006 年 1 月 2 日 34 分 5 秒

3232
01:41:04,000 --> 01:41:05,000
你看就是

3233
01:41:07,000 --> 01:41:08,000
每一个都是独特的

3234
01:41:08,000 --> 01:41:10,000
我大概理解了

3235
01:41:10,000 --> 01:41:11,000
就是你在这里面

3236
01:41:11,000 --> 01:41:14,000
你给了一个样例制服串

3237
01:41:14,000 --> 01:41:16,000
然后它可以自动的三号智能推导出

3238
01:41:16,000 --> 01:41:18,000
这里面哪一部分是哪一个时间

3239
01:41:18,000 --> 01:41:19,000
对

3240
01:41:19,000 --> 01:41:20,000
是哪一个时间

3241
01:41:20,000 --> 01:41:21,000
可是现在的问题是

3242
01:41:21,000 --> 01:41:24,000
比如说我要实现这么一个功能

3243
01:41:24,000 --> 01:41:29,000
每当你执行到这一个语句的时候

3244
01:41:29,000 --> 01:41:33,000
它就会打印出当前时间

3245
01:41:33,000 --> 01:41:38,000
然后当前时间必须是现在是几几点几几几分

3246
01:41:38,000 --> 01:41:39,000
应该怎么实现

3247
01:41:40,000 --> 01:41:41,000
你就是当前时间

3248
01:41:41,000 --> 01:41:43,000
你是只是取 now 那个函数

3249
01:41:43,000 --> 01:41:44,000
对吧

3250
01:41:44,000 --> 01:41:47,000
你就是 now 那个函数得到当前时间的一个变量

3251
01:41:47,000 --> 01:41:50,000
但是这个变量它的内部是一个

3252
01:41:50,000 --> 01:41:51,000
比如说是一个整数来表示

3253
01:41:51,000 --> 01:41:52,000
从一个 unix time 的方式来表示

3254
01:41:52,000 --> 01:41:53,000
举个例子

3255
01:41:53,000 --> 01:41:55,000
但是它跟它怎么格式化

3256
01:41:55,000 --> 01:41:57,000
这个过程并没有关系

3257
01:41:57,000 --> 01:41:58,000
你还是用这个方式来格式化

3258
01:41:58,000 --> 01:42:00,000
比如说你只要当前时间

3259
01:42:00,000 --> 01:42:03,000
比如说你要 10 点 10 分的话

3260
01:42:03,000 --> 01:42:04,000
你就写个

3261
01:42:06,000 --> 01:42:07,000
我看 3 分 4 秒

3262
01:42:07,000 --> 01:42:10,000
就是 03 冒号 04 就可以了

3263
01:42:10,000 --> 01:42:14,000
你可以看一下它那个实现方式

3264
01:42:14,000 --> 01:42:14,000
非常神奇

3265
01:42:14,000 --> 01:42:15,000
很不一样

3266
01:42:15,000 --> 01:42:16,000
跟

3267
01:42:16,000 --> 01:42:19,000
就这个好像是我只有在这里面见过这种实现方式

3268
01:42:19,000 --> 01:42:21,000
就 go 里面这种方式来实现

3269
01:42:21,000 --> 01:42:22,000
其他的都是用那种

3270
01:42:22,000 --> 01:42:24,000
placeholder 的方式来实现

3271
01:42:25,000 --> 01:42:26,000
这么说吧

3272
01:42:26,000 --> 01:42:27,000
我在那个

3273
01:42:28,000 --> 01:42:28,000
咱们已经

3274
01:42:28,000 --> 01:42:30,000
我现在挺录了

3275
01:42:30,000 --> 01:42:32,000
这段应该没有办法录进去

3276
01:42:32,000 --> 01:42:32,000
你录进去没关系

3277
01:42:32,000 --> 01:42:34,000
等 lore 仔细剪就好

3278
01:42:35,000 --> 01:42:35,000
OK

3279
01:42:36,000 --> 01:42:37,000
好我给你发一段那个

3280
01:42:37,000 --> 01:42:39,000
format 读出来

3281
01:42:39,000 --> 01:42:42,000
你最简单的方法就是你把这一段

3282
01:42:42,000 --> 01:42:45,000
python 代码转换成 go 的方式告诉我

3283
01:42:45,000 --> 01:42:46,000
叫 go 怎么写出来

3284
01:42:46,000 --> 01:42:47,000
好

3285
01:42:47,000 --> 01:42:48,000
你把它打给我

3286
01:42:52,000 --> 01:43:03,000
Skype

3287
01:43:12,000 --> 01:43:13,000
就是这样

3288
01:43:15,000 --> 01:43:16,000
我自己已经破那些语句

3289
01:43:16,000 --> 01:43:17,000
我就不写了

3290
01:43:18,000 --> 01:43:19,000
我就直接写了

3291
01:43:20,000 --> 01:43:24,000
time.now.format

3292
01:43:37,000 --> 01:43:38,000
你把我意思弄完

3293
01:43:39,000 --> 01:43:42,000
可是他怎么知道这不是 0304 分

3294
01:43:42,000 --> 01:43:43,000
而不是 0304 秒

3295
01:43:43,000 --> 01:43:44,000
03 分 04 秒

3296
01:43:44,000 --> 01:43:46,000
因为他的指定时间是这个

3297
01:43:49,000 --> 01:43:54,000
就是这里面的 3 和 4

3298
01:43:54,000 --> 01:43:58,000
就是对应的是 34 分

3299
01:43:59,000 --> 01:44:02,000
所以这里面每一部分都必须是独一无二的

3300
01:44:02,000 --> 01:44:05,000
就他的指定的时间是特别强

3301
01:44:05,000 --> 01:44:06,000
我现在明白了

3302
01:44:06,000 --> 01:44:07,000
对

3303
01:44:07,000 --> 01:44:08,000
就非常强

3304
01:44:08,000 --> 01:44:10,000
就等于选一个 standard format

3305
01:44:10,000 --> 01:44:13,000
然后让每一个 standard format

3306
01:44:13,000 --> 01:44:14,000
都具有独一无二性

3307
01:44:14,000 --> 01:44:15,000
然后你总能找

3308
01:44:15,000 --> 01:44:19,000
他可以自动通过这个 format 来推导出

3309
01:44:19,000 --> 01:44:20,000
我靠

3310
01:44:20,000 --> 01:44:22,000
这算 over 之间而言

3311
01:44:22,000 --> 01:44:25,000
但是你不觉得这个很直观吗

3312
01:44:25,000 --> 01:44:26,000
不需要看

3313
01:44:26,000 --> 01:44:27,000
你只需要记这个

3314
01:44:27,000 --> 01:44:28,000
说实话我不觉得

3315
01:44:28,000 --> 01:44:29,000
我觉得这个很好记

3316
01:44:29,000 --> 01:44:32,000
我觉得第一次看到这个肯定会非常晕

3317
01:44:32,000 --> 01:44:33,000
对

3318
01:44:33,000 --> 01:44:34,000
我第一次看的时候

3319
01:44:34,000 --> 01:44:36,000
我也觉得这什么好奇怪

3320
01:44:36,000 --> 01:44:37,000
但是用过几次发现

3321
01:44:37,000 --> 01:44:39,000
每次都不需要去查手册

3322
01:44:39,000 --> 01:44:40,000
超好

3323
01:44:42,000 --> 01:44:43,000
好吧

3324
01:44:43,000 --> 01:44:45,000
也是真的是如同所有

3325
01:44:45,000 --> 01:44:47,000
所有像我这个传

3326
01:44:48,000 --> 01:44:50,000
GoLang 浮云的人说的一样

3327
01:44:50,000 --> 01:44:52,000
GoLang 真的是一个经过深思熟虑的

3328
01:44:52,000 --> 01:44:55,000
需要解决切实问题才发明出来的

3329
01:44:56,000 --> 01:44:58,000
这种方式解决切实问题

3330
01:44:58,000 --> 01:45:00,000
切实的问题的确比较好

3331
01:45:01,000 --> 01:45:01,000
对

3332
01:45:01,000 --> 01:45:03,000
我觉得这个好

3333
01:45:03,000 --> 01:45:04,000
下次我可以说

3334
01:45:04,000 --> 01:45:05,000
你可以随便说了

3335
01:45:05,000 --> 01:45:07,000
现在是

3336
01:45:08,000 --> 01:45:14,000
GMT 隔离位置标准时 1.54 分 48 秒

3337
01:45:17,000 --> 01:45:19,000
您现在收听到的是卧台本

3338
01:45:19,000 --> 01:45:19,000
好了

3339
01:45:19,000 --> 01:45:20,000
这期节目就这样了

3340
01:45:21,000 --> 01:45:22,000
拜拜

3341
01:45:24,000 --> 01:45:24,000
拜拜

3342
01:45:24,000 --> 01:45:25,000
暂停录

