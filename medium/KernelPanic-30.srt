1
00:00:00,000 --> 00:00:03,000
欢迎收听 ipin podcast 网络旗下的 IT 技术题

2
00:00:03,000 --> 00:00:04,000
娱乐节目内核恐慌

3
00:00:04,000 --> 00:00:05,000
我们号称 hardcore

4
00:00:05,000 --> 00:00:06,000
但谁没有干货

5
00:00:06,000 --> 00:00:07,000
想听的人听

6
00:00:07,000 --> 00:00:08,000
不想听的人就别听

7
00:00:09,000 --> 00:00:11,000
本节目的网址是 kernelpanic.fm

8
00:00:11,000 --> 00:00:14,000
我们推荐大家使用 podcast 客户端订阅节目

9
00:00:14,000 --> 00:00:18,000
详情请访问 ipin.li.faq

10
00:00:19,000 --> 00:00:20,000
欢迎你为节目捐款

11
00:00:20,000 --> 00:00:24,000
捐款地址是 kernelpanic.fm.donate

12
00:00:24,000 --> 00:00:25,000
捐款性和随意

13
00:00:25,000 --> 00:00:27,000
只要是 8 个正常数位就可以

14
00:00:27,000 --> 00:00:29,000
捐款不会为你带来什么

15
00:00:29,000 --> 00:00:30,000
不捐也不会让你失去什么

16
00:00:30,000 --> 00:00:36,000
我们的口号是 show me a pull request or stfu

17
00:00:37,000 --> 00:00:42,000
这个是我今天早上在一个 T 恤上看到的

18
00:00:43,000 --> 00:00:44,000
上面是大大的一行字

19
00:00:44,000 --> 00:00:48,000
show me the pull request or shut f**k up

20
00:00:49,000 --> 00:00:51,000
应该是 send me the pull request

21
00:00:54,000 --> 00:00:54,000
说得也是

22
00:00:55,000 --> 00:00:56,000
为什么不是 send

23
00:00:56,000 --> 00:00:56,000
还是我看错了

24
00:00:56,000 --> 00:00:57,000
对

25
00:00:57,000 --> 00:00:58,000
anyway

26
00:00:58,000 --> 00:00:58,000
有可能

27
00:00:58,000 --> 00:00:59,000
有可能

28
00:01:00,000 --> 00:01:01,000
好吧

29
00:01:01,000 --> 00:01:05,000
我们进入听众反馈环节

30
00:01:05,000 --> 00:01:10,000
上一期我们讲了 Windows 上面的一些问题

31
00:01:10,000 --> 00:01:15,000
我们只是随口提了一下 min-gw 的问题

32
00:01:15,000 --> 00:01:19,000
结果就收到了至少两封相关的反馈

33
00:01:19,000 --> 00:01:21,000
电台最喜欢用的词叫什么来着

34
00:01:22,000 --> 00:01:24,000
听众反馈如雪片般飞来的

35
00:01:25,000 --> 00:01:29,000
我们是听众反馈如铁板般飒来

36
00:01:30,000 --> 00:01:35,000
我们选择性的念两个相关的事

37
00:01:35,000 --> 00:01:37,000
第一个不全是有一小节

38
00:01:37,000 --> 00:01:37,000
对

39
00:01:38,000 --> 00:01:40,000
你来还是我来念

40
00:01:40,000 --> 00:01:40,000
先我来念

41
00:01:41,000 --> 00:01:44,000
因为叫饶敏环的朋友

42
00:01:44,000 --> 00:01:45,000
那个字念什么

43
00:01:46,000 --> 00:01:46,000
哪个字

44
00:01:47,000 --> 00:01:48,000
你是三个字都不认识吗

45
00:01:48,000 --> 00:01:48,000
是

46
00:01:48,000 --> 00:01:50,000
中间那个字念什么

47
00:01:50,000 --> 00:01:51,000
上日下文敏

48
00:01:52,000 --> 00:01:53,000
因为我大学同学有一个

49
00:01:53,000 --> 00:01:54,000
那第三个呢

50
00:01:54,000 --> 00:01:55,000
华啊

51
00:01:55,000 --> 00:01:58,000
这不是黄花的法式

52
00:01:58,000 --> 00:01:59,000
你不是念耶吗

53
00:02:00,000 --> 00:02:01,000
应该不念耶了

54
00:02:01,000 --> 00:02:03,000
火字旁那个念耶

55
00:02:03,000 --> 00:02:03,000
对

56
00:02:03,000 --> 00:02:04,000
刘业

57
00:02:04,000 --> 00:02:05,000
但这个是华

58
00:02:05,000 --> 00:02:06,000
那你为

59
00:02:07,000 --> 00:02:08,000
名字就是一个代号

60
00:02:10,000 --> 00:02:12,000
他说 Rail 他你们好

61
00:02:12,000 --> 00:02:18,000
用户反馈关于 min-gw 的使用场景

62
00:02:19,000 --> 00:02:21,000
之前任职于国内某社交公司

63
00:02:21,000 --> 00:02:22,000
开发环境式 Windows

64
00:02:22,000 --> 00:02:24,000
不允许装虚拟机

65
00:02:24,000 --> 00:02:24,000
括号

66
00:02:24,000 --> 00:02:28,000
王管检测到虚拟机自动端口断网

67
00:02:28,000 --> 00:02:30,000
这什么样的变态公司

68
00:02:30,000 --> 00:02:30,000
这是

69
00:02:30,000 --> 00:02:35,000
我觉得 B 公司的 IT 已经非常规模了

70
00:02:35,000 --> 00:02:37,000
但是这显然还有更规模的

71
00:02:37,000 --> 00:02:37,000
不

72
00:02:37,000 --> 00:02:39,000
这个理由是什么

73
00:02:44,000 --> 00:02:45,000
不你想

74
00:02:45,000 --> 00:02:47,000
他开发环境是 Windows

75
00:02:47,000 --> 00:02:48,000
运行环境是 Linux

76
00:02:48,000 --> 00:02:50,000
然后不准装虚拟机

77
00:02:50,000 --> 00:02:50,000
那怎么测试

78
00:02:50,000 --> 00:02:51,000
就直接在服务器上

79
00:02:54,000 --> 00:02:54,000
对

80
00:02:55,000 --> 00:02:56,000
所以你要

81
00:02:57,000 --> 00:02:59,000
最近不是搞什么 Docker 的

82
00:02:59,000 --> 00:03:01,000
container movement 吗

83
00:03:01,000 --> 00:03:02,000
我现在都在做

84
00:03:03,000 --> 00:03:03,000
对

85
00:03:04,000 --> 00:03:05,000
你得在本机上用

86
00:03:06,000 --> 00:03:08,000
Windows 上还没有 Docker 应该

87
00:03:09,000 --> 00:03:11,000
我们只念了一句半话

88
00:03:11,000 --> 00:03:12,000
我来验完再说

89
00:03:12,000 --> 00:03:14,000
反正是很奇怪就是了

90
00:03:14,000 --> 00:03:17,000
然后他的开发源是 C++

91
00:03:17,000 --> 00:03:18,000
运行环境是 Linux

92
00:03:18,000 --> 00:03:19,000
5 x 11

93
00:03:20,000 --> 00:03:20,000
对

94
00:03:20,000 --> 00:03:21,000
这个很重要

95
00:03:21,000 --> 00:03:22,000
就是因为我刚才在想

96
00:03:22,000 --> 00:03:25,000
我在公司其实也是不能在本机

97
00:03:26,000 --> 00:03:27,000
开发的

98
00:03:27,000 --> 00:03:29,000
我是远程桌面到一个远程服务器上

99
00:03:29,000 --> 00:03:31,000
但是我有 x 11

100
00:03:31,000 --> 00:03:31,000
他没有

101
00:03:31,000 --> 00:03:34,000
而且跳板机网络隔离

102
00:03:35,000 --> 00:03:36,000
而且我不是 Wim 档

103
00:03:37,000 --> 00:03:38,000
背景招待完毕

104
00:03:39,000 --> 00:03:43,000
于是选用 Eclipse CDT 作为 Windows 上的 ID 做开发

105
00:03:43,000 --> 00:03:45,000
但是不可能使用 Windows 的 VCA 编辑器

106
00:03:46,000 --> 00:03:48,000
因为 VCA 编辑器能编辑过

107
00:03:48,000 --> 00:03:49,000
GCC 不一定能过

108
00:03:49,000 --> 00:03:50,000
而且应用的酷也不一样

109
00:03:50,000 --> 00:03:53,000
比如 Linux 的线程故事 Pthread

110
00:03:53,000 --> 00:03:55,000
Visual CD++没这玩意儿

111
00:03:55,000 --> 00:04:00,000
于是最后的选择是 Eclipse CDT 配 minGW

112
00:04:00,000 --> 00:04:01,000
或者 Segwin

113
00:04:02,000 --> 00:04:06,000
另外一个例子是之前在实验室做图像算法

114
00:04:06,000 --> 00:04:09,000
采用一个 C++的 OpenCV 的酷

115
00:04:11,000 --> 00:04:12,000
Open Computer Vision

116
00:04:12,000 --> 00:04:13,000
应该是

117
00:04:14,000 --> 00:04:14,000
视觉识别

118
00:04:14,000 --> 00:04:15,000
对没错

119
00:04:15,000 --> 00:04:16,000
开发环境

120
00:04:16,000 --> 00:04:17,000
视觉

121
00:04:17,000 --> 00:04:19,000
开发环境也是 Windows 加 Eclipse

122
00:04:19,000 --> 00:04:21,000
CDT 加 minGW

123
00:04:22,000 --> 00:04:25,000
现在回想用 Ubuntu 加 Eclipse CDT 加 GCC

124
00:04:25,000 --> 00:04:26,000
应该也可以

125
00:04:26,000 --> 00:04:29,000
但是当时的机器跑不动虚拟机

126
00:04:30,000 --> 00:04:31,000
我还是要吐槽一下

127
00:04:31,000 --> 00:04:32,000
这家公司实在是太奇怪了

128
00:04:32,000 --> 00:04:34,000
为什么是这样呢

129
00:04:34,000 --> 00:04:37,000
你开发一个在 Linux 上运行的 CG 加的东西

130
00:04:37,000 --> 00:04:38,000
然后你开发环境是 Windows

131
00:04:38,000 --> 00:04:39,000
还不运行装虚拟机

132
00:04:39,000 --> 00:04:40,000
这

133
00:04:41,000 --> 00:04:41,000
WTF

134
00:04:41,000 --> 00:04:42,000
是很病态

135
00:04:43,000 --> 00:04:46,000
然后 Eclipse CDT 是什么东西

136
00:04:47,000 --> 00:04:54,000
CDT 是 CDevelopment 什么的一个缩写

137
00:04:54,000 --> 00:04:55,000
应该是

138
00:04:56,000 --> 00:04:58,000
是 Eclipse 的一个版本

139
00:04:59,000 --> 00:05:01,000
这针对 C 开发者用的

140
00:05:01,000 --> 00:05:01,000
对

141
00:05:01,000 --> 00:05:03,000
T 代表什么我还真不记得了

142
00:05:03,000 --> 00:05:04,000
Tooling

143
00:05:04,000 --> 00:05:05,000
现场

144
00:05:06,000 --> 00:05:06,000
Toolkit

145
00:05:07,000 --> 00:05:09,000
CDevelopment Tooling

146
00:05:09,000 --> 00:05:11,000
我靠我真的没记错

147
00:05:13,000 --> 00:05:13,000
C

148
00:05:13,000 --> 00:05:17,000
所以 Eclipse 这个泡玩意

149
00:05:17,000 --> 00:05:18,000
不光写 C 加也要用

150
00:05:18,000 --> 00:05:20,000
写 C 加也要用它

151
00:05:20,000 --> 00:05:21,000
不是也要用

152
00:05:21,000 --> 00:05:22,000
是你可以选择用

153
00:05:24,000 --> 00:05:27,000
因为你写 C 加的课选择方案太多了

154
00:05:27,000 --> 00:05:28,000
可以用什么

155
00:05:29,000 --> 00:05:29,000
Xcode

156
00:05:30,000 --> 00:05:32,000
一时想不起来

157
00:05:32,000 --> 00:05:35,000
我第一想第一跳到脑海里居然是 QT Design

158
00:05:39,000 --> 00:05:39,000
对

159
00:05:39,000 --> 00:05:41,000
但 C 加来的实在是太多了

160
00:05:41,000 --> 00:05:41,000
所以

161
00:05:42,000 --> 00:05:44,000
选择用 Eclipse CDT

162
00:05:44,000 --> 00:05:47,000
也许是公司的限制

163
00:05:47,000 --> 00:05:48,000
谁知道

164
00:05:50,000 --> 00:05:51,000
对

165
00:05:51,000 --> 00:05:53,000
总之它回报了一个非常小众的

166
00:05:53,000 --> 00:05:55,000
Mine GW 的使用场景

167
00:05:56,000 --> 00:05:59,000
因为我们上期提到的说活人情回报一下

168
00:05:59,000 --> 00:06:01,000
如果你用 Mine GW 的话

169
00:06:01,000 --> 00:06:03,000
跟我们说一下到底是什么场景

170
00:06:03,000 --> 00:06:04,000
所以现在出现了一个这么奇葩的场景

171
00:06:04,000 --> 00:06:05,000
对

172
00:06:06,000 --> 00:06:09,000
这个场景左想右想还是太蛋疼了

173
00:06:09,000 --> 00:06:13,000
如果想想去这种公司工作

174
00:06:15,000 --> 00:06:17,000
还是辞职算了

175
00:06:17,000 --> 00:06:17,000
别这样

176
00:06:19,000 --> 00:06:20,000
第二点反馈

177
00:06:20,000 --> 00:06:26,000
上上期关于 WiFi 取代网线布线的反馈

178
00:06:26,000 --> 00:06:26,000
这个非常疼

179
00:06:26,000 --> 00:06:30,000
不推荐对网络有要求的人这样布线

180
00:06:30,000 --> 00:06:34,000
因为 2.1 就像韦特格斯坦一样

181
00:06:35,000 --> 00:06:39,000
每一个反馈点下面还要分子点

182
00:06:39,000 --> 00:06:41,000
2.1 点办公室

183
00:06:41,000 --> 00:06:43,000
现在在一个类似于重创空间的地方创业

184
00:06:43,000 --> 00:06:46,000
一栋楼有 20 到 30 家公司

185
00:06:46,000 --> 00:06:49,000
每家公司面积几平米到 10 来平米

186
00:06:49,000 --> 00:06:50,000
每次打开 WiFi 的时候

187
00:06:50,000 --> 00:06:53,000
都可以搜到不下 30 个 WiFi 信号源

188
00:06:54,000 --> 00:06:57,000
WiFi 2.4 G 虽然有 13 个信道

189
00:06:57,000 --> 00:06:59,000
但是要完全做到不干扰的信道

190
00:06:59,000 --> 00:07:00,000
只有三个

191
00:07:00,000 --> 00:07:03,000
可以想象 2.4 G 信号空间会有多大干扰

192
00:07:04,000 --> 00:07:04,000
做过实验

193
00:07:04,000 --> 00:07:07,000
千元左右的国际品牌路由器

194
00:07:07,000 --> 00:07:10,000
2.4 G 的 WiFi 信道调由距离不到两米

195
00:07:10,000 --> 00:07:14,000
内网拼路由大概 50 到 300 ms 不等

196
00:07:15,000 --> 00:07:17,000
还会有大量的随机丢包

197
00:07:17,000 --> 00:07:18,000
另外附带的是

198
00:07:18,000 --> 00:07:21,000
我们现在所有的无线建筑都属于梦游状态

199
00:07:21,000 --> 00:07:23,000
采用 5 G 信号之后

200
00:07:23,000 --> 00:07:25,000
WiFi 信号质量好了很多

201
00:07:25,000 --> 00:07:27,000
但是随着各个公司的网管

202
00:07:27,000 --> 00:07:29,000
都在改用 5 G 信号的路由

203
00:07:30,000 --> 00:07:33,000
网络状况也是每况愈狭

204
00:07:34,000 --> 00:07:35,000
2.2 点

205
00:07:35,000 --> 00:07:35,000
家里

206
00:07:36,000 --> 00:07:37,000
家里去年装修

207
00:07:37,000 --> 00:07:38,000
小三房

208
00:07:38,000 --> 00:07:39,000
什么是小三房

209
00:07:40,000 --> 00:07:40,000
给小三住

210
00:07:40,000 --> 00:07:41,000
就是三房

211
00:07:41,000 --> 00:07:42,000
然后面积比较小

212
00:07:42,000 --> 00:07:43,000
OK

213
00:07:43,000 --> 00:07:45,000
采用的是无线网络部署

214
00:07:45,000 --> 00:07:49,000
在房间正中央放了一个小米路由器

215
00:07:50,000 --> 00:07:52,000
带硬盘做 NAS

216
00:07:52,000 --> 00:07:53,000
有几个结论

217
00:07:53,000 --> 00:07:56,000
A 5 G 信号穿墙比较点司机差

218
00:07:56,000 --> 00:07:59,000
B 卧室需要穿两堵墙

219
00:07:59,000 --> 00:08:00,000
只剩下两个信号

220
00:08:00,000 --> 00:08:02,000
而且会降频道只有 11 兆的那些速度

221
00:08:02,000 --> 00:08:03,000
而且丢包严重

222
00:08:03,000 --> 00:08:05,000
NAS 连接的速度不可接受

223
00:08:05,000 --> 00:08:07,000
C 在穿一堵墙的时候

224
00:08:07,000 --> 00:08:08,000
架设 WiFi 中继

225
00:08:08,000 --> 00:08:10,000
到卧室使用时

226
00:08:10,000 --> 00:08:12,000
还是只有 300 到 400 KB 左右的上传下载速度

227
00:08:12,000 --> 00:08:14,000
而且不稳定不可接受

228
00:08:14,000 --> 00:08:17,000
最后采用的方案是电力猫

229
00:08:17,000 --> 00:08:21,000
小米路由器直接插网线连墙上的电力猫

230
00:08:21,000 --> 00:08:24,000
卧室电源口放一个电力猫接收设备

231
00:08:24,000 --> 00:08:27,000
带 802.11 n 加网线

232
00:08:27,000 --> 00:08:29,000
基本能够达到 5 兆左右的速度

233
00:08:29,000 --> 00:08:29,000
而且不丢包

234
00:08:29,000 --> 00:08:30,000
基本可以接受

235
00:08:31,000 --> 00:08:32,000
但是烤被大冻熏的时候

236
00:08:32,000 --> 00:08:36,000
还是得把笔记本和路由器用千兆网线直连

237
00:08:36,000 --> 00:08:38,000
另外电力猫有个缺点

238
00:08:38,000 --> 00:08:40,000
发热量大的情况下容易死机

239
00:08:40,000 --> 00:08:43,000
深圳的夏天基本一个月充起一次

240
00:08:43,000 --> 00:08:46,000
所以这位听说我和你在一起都在深圳

241
00:08:46,000 --> 00:08:50,000
另外国内小区 WiFi 信道的干扰也挺大

242
00:08:50,000 --> 00:08:52,000
现在家里三个电力猫

243
00:08:52,000 --> 00:08:53,000
一个 input 两个 output

244
00:08:53,000 --> 00:08:54,000
我家的热点有五个

245
00:08:54,000 --> 00:08:57,000
不过 WiFi 多了

246
00:08:57,000 --> 00:09:00,000
还是会给自己造成信道的干扰

247
00:09:00,000 --> 00:09:04,000
家里 PS 4 streaming 的 PSV 上使用 PS 4 主动 WiFi

248
00:09:04,000 --> 00:09:06,000
离得非常近都频繁掉线

249
00:09:06,000 --> 00:09:08,000
后来 PS 4 关闭主动 WiFi

250
00:09:08,000 --> 00:09:10,000
PS 4 连网线

251
00:09:10,000 --> 00:09:13,000
PSV 连电力猫的 WiFi 情况好了很多

252
00:09:13,000 --> 00:09:17,000
推荐一下 Android 上的 WiFi 信道分析相关的 APP

253
00:09:17,000 --> 00:09:22,000
能够快速了解当前空间下的信道占用情况

254
00:09:22,000 --> 00:09:25,000
个人结论是能不网线就不网线吧

255
00:09:25,000 --> 00:09:26,000
OK

256
00:09:26,000 --> 00:09:28,000
所以你对这点有什么反馈呢

257
00:09:28,000 --> 00:09:30,000
有什么评论吗

258
00:09:32,000 --> 00:09:35,000
首先其实无线也没什么

259
00:09:35,000 --> 00:09:37,000
你不得好的话问题不是很大

260
00:09:37,000 --> 00:09:39,000
他说那些情况

261
00:09:39,000 --> 00:09:44,000
我也去过很多这种什么叫 co-working space

262
00:09:44,000 --> 00:09:46,000
合作办公的空间

263
00:09:46,000 --> 00:09:48,000
确实看他们那个

264
00:09:48,000 --> 00:09:51,000
因为现在特别深圳这边很多这种孵化器

265
00:09:51,000 --> 00:09:54,000
中传空间都是当二房东的

266
00:09:54,000 --> 00:09:56,000
就是基建也没好干

267
00:09:56,000 --> 00:09:57,000
就是很多人对这个也不熟

268
00:09:57,000 --> 00:09:58,000
我都做的挺差的

269
00:09:58,000 --> 00:10:00,000
公司也是这样子

270
00:10:00,000 --> 00:10:05,000
就是你要很多这种所谓的 IT 公司的这些

271
00:10:05,000 --> 00:10:07,000
技术部门都是非常差的

272
00:10:07,000 --> 00:10:10,000
这不是在都的常态吗

273
00:10:10,000 --> 00:10:13,000
中国基本上都这样

274
00:10:13,000 --> 00:10:16,000
就不是 WiFi 不得好的非常少

275
00:10:16,000 --> 00:10:18,000
就但如果 WiFi 不得好的话

276
00:10:18,000 --> 00:10:21,000
其实这些问题都可以解决

277
00:10:21,000 --> 00:10:23,000
对但有很多前提条件

278
00:10:23,000 --> 00:10:27,000
就说首先你要是要整体规划

279
00:10:27,000 --> 00:10:30,000
你不是说像他说那种一层二三四公司

280
00:10:30,000 --> 00:10:31,000
各家都搞自己的

281
00:10:31,000 --> 00:10:32,000
那你就没得玩了对吧

282
00:10:32,000 --> 00:10:35,000
肯定是要禁掉

283
00:10:35,000 --> 00:10:35,000
军医管

284
00:10:35,000 --> 00:10:40,000
对禁掉用个人的 WiFi 就点的情况

285
00:10:40,000 --> 00:10:42,000
要统一去布

286
00:10:42,000 --> 00:10:47,000
然后要根据内楼层的形状

287
00:10:47,000 --> 00:10:50,000
包括那些中间的隔墙的材质

288
00:10:50,000 --> 00:10:52,000
去考虑要不断地点

289
00:10:52,000 --> 00:10:53,000
然后采用哪些东西

290
00:10:53,000 --> 00:10:55,000
其实这里面学问还蛮多的

291
00:10:55,000 --> 00:10:57,000
就是要做好是挺难

292
00:10:57,000 --> 00:10:58,000
但是做好了

293
00:10:58,000 --> 00:11:01,000
在现场布现的确是一个

294
00:11:01,000 --> 00:11:03,000
不是说你念完网络工程

295
00:11:03,000 --> 00:11:04,000
就可以搞定的事情

296
00:11:04,000 --> 00:11:05,000
真的有很多

297
00:11:05,000 --> 00:11:10,000
对不是说你再加两六点这个信号就好了

298
00:11:10,000 --> 00:11:12,000
就是你加了可能会反而更糟糕

299
00:11:12,000 --> 00:11:14,000
你要去考虑到各种各样的情况

300
00:11:14,000 --> 00:11:16,000
比方设备也是一个问题

301
00:11:16,000 --> 00:11:17,000
像他说那些什么

302
00:11:17,000 --> 00:11:21,000
千元左右国际品牌路由器

303
00:11:22,000 --> 00:11:25,000
就是办公楼这种密度的

304
00:11:25,000 --> 00:11:26,000
就几百人的那种

305
00:11:26,000 --> 00:11:29,000
不可能用这种千元级别

306
00:11:29,000 --> 00:11:30,000
就是家用的

307
00:11:30,000 --> 00:11:31,000
不可能用家用的

308
00:11:31,000 --> 00:11:33,000
一定要用企业级别的

309
00:11:33,000 --> 00:11:35,000
然后他里面的一些方法是不一样

310
00:11:35,000 --> 00:11:39,000
就像什么 C 厂牌和 H 厂牌的那样

311
00:11:39,000 --> 00:11:40,000
就比较贵

312
00:11:40,000 --> 00:11:45,000
一个普通的还不带 801-211 ac

313
00:11:45,000 --> 00:11:46,000
就 802.11 n 的吧

314
00:11:46,000 --> 00:11:50,000
我看最便宜的那种就还是得三四千一个

315
00:11:50,000 --> 00:11:54,000
然后如果你要上最新的 11 ac

316
00:11:54,000 --> 00:12:00,000
那所谓什么 1900 兆的那种企业级无线 AP

317
00:12:00,000 --> 00:12:01,000
我看好像是最便宜的

318
00:12:01,000 --> 00:12:03,000
淘宝获得要六千多块钱吧

319
00:12:03,000 --> 00:12:04,000
一个对吧

320
00:12:04,000 --> 00:12:07,000
然后你一个覆盖的范围也就那么点

321
00:12:07,000 --> 00:12:09,000
然后你一层楼看面积

322
00:12:09,000 --> 00:12:11,000
还得装上十几二十个对吧

323
00:12:11,000 --> 00:12:12,000
差不多小十万块钱

324
00:12:12,000 --> 00:12:14,000
光买 AP 就进去了

325
00:12:14,000 --> 00:12:15,000
完了你还得买 AC 对吧

326
00:12:15,000 --> 00:12:18,000
还要做那个

327
00:12:18,000 --> 00:12:21,000
就是千兆网

328
00:12:21,000 --> 00:12:23,000
就是那个 CAD 51 的网

329
00:12:23,000 --> 00:12:26,000
做那个 backball 嘛对吧

330
00:12:26,000 --> 00:12:27,000
然后你还要布完之后

331
00:12:27,000 --> 00:12:30,000
你还要去在每个之间做那个叫

332
00:12:30,000 --> 00:12:32,000
ROMING 就是漫游嘛

333
00:12:32,000 --> 00:12:36,000
你从一个 AP 切到另一个 AP 的时候

334
00:12:36,000 --> 00:12:37,000
中间连接不会断掉对吧

335
00:12:37,000 --> 00:12:38,000
然后再二层三层

336
00:12:38,000 --> 00:12:39,000
Hand over

337
00:12:39,000 --> 00:12:41,000
对 Hand over 很讲究的

338
00:12:41,000 --> 00:12:42,000
然后那个 2.4 G

339
00:12:42,000 --> 00:12:45,000
他说有那个三个不重连的信号

340
00:12:45,000 --> 00:12:46,000
没错确实这样子的

341
00:12:46,000 --> 00:12:49,000
那么你更要小心谨慎去做

342
00:12:49,000 --> 00:12:50,000
然后那个信号强度

343
00:12:50,000 --> 00:12:53,000
也不是说你开到最大是最好的

344
00:12:53,000 --> 00:12:54,000
你要根据周围的情况来看

345
00:12:54,000 --> 00:12:55,000
你可能要调到中

346
00:12:55,000 --> 00:12:56,000
或者调到小

347
00:12:56,000 --> 00:12:59,000
才是能够更好的一个方案

348
00:12:59,000 --> 00:13:01,000
现在 5 G 也是一样的

349
00:13:01,000 --> 00:13:03,000
就是说 5 G 也有那几个信道

350
00:13:03,000 --> 00:13:05,000
它基本上不怎么互相干扰

351
00:13:05,000 --> 00:13:07,000
而且 5 G 有个好处

352
00:13:07,000 --> 00:13:08,000
他说他说得很对

353
00:13:08,000 --> 00:13:10,000
5 G 的信号穿墙行程比 2.4 G 差

354
00:13:10,000 --> 00:13:12,000
这就导致一个什么样的后果呢

355
00:13:12,000 --> 00:13:15,000
就使得 5 G 这邻居之间

356
00:13:15,000 --> 00:13:16,000
比如说你刚才说

357
00:13:16,000 --> 00:13:17,000
他说家里还有一个情况

358
00:13:17,000 --> 00:13:19,000
就是 5 G 和 5 G 邻居之间的

359
00:13:19,000 --> 00:13:20,000
影响是比较小的

360
00:13:20,000 --> 00:13:21,000
因为基本上隔夜路墙 5 G 信号

361
00:13:21,000 --> 00:13:22,000
就很弱了

362
00:13:22,000 --> 00:13:23,000
隔两度的话

363
00:13:23,000 --> 00:13:25,000
你就可以就忽略不计了

364
00:13:25,000 --> 00:13:27,000
所以你在家里布 5 G 的话

365
00:13:27,000 --> 00:13:29,000
其实是更好的一个选择

366
00:13:29,000 --> 00:13:32,000
然后包括用那个 11 N 和 11 AC

367
00:13:32,000 --> 00:13:33,000
区别也是蛮大的

368
00:13:33,000 --> 00:13:36,000
因为同样的这个信道带宽

369
00:13:36,000 --> 00:13:38,000
你用更快的这个标准

370
00:13:38,000 --> 00:13:40,000
在更短的时间内

371
00:13:40,000 --> 00:13:41,000
完全的数据的传输

372
00:13:41,000 --> 00:13:43,000
那你就有更多的空闲出来

373
00:13:43,000 --> 00:13:44,000
给别人传输

374
00:13:44,000 --> 00:13:46,000
就是那个冲突的时间会更少

375
00:13:46,000 --> 00:13:46,000
对

376
00:13:46,000 --> 00:13:47,000
因为一旦冲突

377
00:13:47,000 --> 00:13:49,000
就要两个叫 Back off

378
00:13:49,000 --> 00:13:49,000
然后重传

379
00:13:51,000 --> 00:13:53,000
再然后就是设备的选择

380
00:13:53,000 --> 00:13:54,000
刚才吐槽了一下

381
00:13:54,000 --> 00:13:55,000
他用了一个千元左右的

382
00:13:55,000 --> 00:13:56,000
家用还没问题

383
00:13:56,000 --> 00:13:59,000
然后他说他家里用那个小米路由器

384
00:13:59,000 --> 00:14:00,000
小米路由器

385
00:14:00,000 --> 00:14:01,000
我看了好多这个测评

386
00:14:01,000 --> 00:14:05,000
都是那个信号非常差的代表

387
00:14:05,000 --> 00:14:07,000
为什么会用这个

388
00:14:07,000 --> 00:14:08,000
我觉得他把那个

389
00:14:08,000 --> 00:14:11,000
刚才那个办公室用那个千元左右的

390
00:14:11,000 --> 00:14:12,000
国际品牌路由器放家里

391
00:14:12,000 --> 00:14:13,000
5 G 还差不多

392
00:14:13,000 --> 00:14:15,000
然后小米的可以扔了是吧

393
00:14:15,000 --> 00:14:17,000
其实也不是说便宜的已经不好

394
00:14:17,000 --> 00:14:19,000
但是大部分的便宜的

395
00:14:19,000 --> 00:14:21,000
就你买到好的概率很少

396
00:14:21,000 --> 00:14:23,000
而且你没有人去做这种专业测评

397
00:14:23,000 --> 00:14:24,000
而且国内这种

398
00:14:24,000 --> 00:14:25,000
硬件测评

399
00:14:25,000 --> 00:14:26,000
他妈的都被搞坏了

400
00:14:26,000 --> 00:14:29,000
就是全是枪文软文拿钱写的

401
00:14:29,000 --> 00:14:29,000
就没有这种

402
00:14:29,000 --> 00:14:30,000
这种外景在做的

403
00:14:31,000 --> 00:14:32,000
那本叫什么

404
00:14:32,000 --> 00:14:33,000
我们只谈硬件的

405
00:14:33,000 --> 00:14:35,000
杂志叫什么来着

406
00:14:37,000 --> 00:14:38,000
有这种杂志

407
00:14:38,000 --> 00:14:40,000
好像就叫微型计算机吧

408
00:14:40,000 --> 00:14:41,000
就一本杂志

409
00:14:41,000 --> 00:14:42,000
然后封面上写着

410
00:14:42,000 --> 00:14:43,000
我们只谈硬件的

411
00:14:43,000 --> 00:14:44,000
那个杂志

412
00:14:44,000 --> 00:14:45,000
那也是枪文满天飞的

413
00:14:45,000 --> 00:14:46,000
好吧

414
00:14:46,000 --> 00:14:48,000
我记得我小时候他口碑还不错

415
00:14:49,000 --> 00:14:52,000
我觉得国内其实真缺乏那种真正的

416
00:14:52,000 --> 00:14:54,000
就他大叔是做那种某一个

417
00:14:54,000 --> 00:14:55,000
独立的

418
00:14:55,000 --> 00:14:57,000
领域的这种

419
00:14:57,000 --> 00:14:59,000
很专业很有深度的测评

420
00:14:59,000 --> 00:15:00,000
因为最近我遇到两件事

421
00:15:00,000 --> 00:15:03,000
最近我们是在买那种小的 PC 机

422
00:15:03,000 --> 00:15:04,000
那种 NUC

423
00:15:04,000 --> 00:15:05,000
英特尔那个小的

424
00:15:06,000 --> 00:15:07,000
我发现国外有个专门的

425
00:15:08,000 --> 00:15:09,000
有个网站叫 NUCblog

426
00:15:09,000 --> 00:15:11,000
他专门就只测评这么一个

427
00:15:12,000 --> 00:15:14,000
非常逆势的一个产品

428
00:15:15,000 --> 00:15:16,000
他会讲得很细

429
00:15:16,000 --> 00:15:19,000
然后说家用无线组网的话

430
00:15:19,000 --> 00:15:20,000
或小范围无线组网

431
00:15:20,000 --> 00:15:22,000
那有个人叫做 SmallNet Builder

432
00:15:22,000 --> 00:15:23,000
上面也会把那些

433
00:15:23,000 --> 00:15:24,000
就在

434
00:15:24,000 --> 00:15:25,000
就当然是

435
00:15:25,000 --> 00:15:26,000
他是美国的应该是

436
00:15:26,000 --> 00:15:28,000
他会把那些在美国市场上卖的

437
00:15:29,000 --> 00:15:31,000
那些新的无线设备

438
00:15:31,000 --> 00:15:32,000
都会测得非常详细

439
00:15:32,000 --> 00:15:33,000
相对来说比较专业

440
00:15:34,000 --> 00:15:35,000
国内找不到这种

441
00:15:35,000 --> 00:15:36,000
你只能听这一个

442
00:15:36,000 --> 00:15:38,000
听那些各种公关文

443
00:15:38,000 --> 00:15:39,000
给你瞎逼逼的

444
00:15:40,000 --> 00:15:41,000
基本上不可信了

445
00:15:41,000 --> 00:15:42,000
但你买回来实际测的时候

446
00:15:42,000 --> 00:15:43,000
就很麻烦

447
00:15:44,000 --> 00:15:45,000
我觉得可能

448
00:15:45,000 --> 00:15:48,000
在西方比较好的一点

449
00:15:48,000 --> 00:15:50,000
就是很多网站都会

450
00:15:50,000 --> 00:15:51,000
不是网站

451
00:15:51,000 --> 00:15:54,000
就是很多媒体都会提供付费

452
00:15:55,000 --> 00:15:57,000
购买测评结果的付付

453
00:15:58,000 --> 00:16:00,000
德国有很多

454
00:16:00,000 --> 00:16:01,000
德国法国都有这样的网站

455
00:16:01,000 --> 00:16:04,000
就是他的测评给出来的

456
00:16:04,000 --> 00:16:05,000
然后他会给你个排名

457
00:16:05,000 --> 00:16:08,000
然后但如果你想要知道

458
00:16:08,000 --> 00:16:09,000
具体这个排名是怎么得出来的

459
00:16:09,000 --> 00:16:10,000
你需要花几欧元

460
00:16:10,000 --> 00:16:12,000
去买他的测评报告

461
00:16:15,000 --> 00:16:17,000
我觉得这个模式

462
00:16:17,000 --> 00:16:19,000
至少你可以相信

463
00:16:19,000 --> 00:16:21,000
他们基本上是不需要

464
00:16:21,000 --> 00:16:23,000
拿别人的钱

465
00:16:23,000 --> 00:16:26,000
然后也可以做出相对独立的判断

466
00:16:27,000 --> 00:16:28,000
这个问题我觉得一下

467
00:16:28,000 --> 00:16:29,000
还解决不了在国内

468
00:16:29,000 --> 00:16:31,000
对国内不可能的

469
00:16:31,000 --> 00:16:33,000
就靠花钱看别人评论

470
00:16:33,000 --> 00:16:34,000
这是文所未闻的事情

471
00:16:34,000 --> 00:16:35,000
是吧

472
00:16:35,000 --> 00:16:36,000
怎么能接受呢

473
00:16:36,000 --> 00:16:37,000
对

474
00:16:37,000 --> 00:16:38,000
反正你有说回这个事

475
00:16:38,000 --> 00:16:40,000
就是说那比如说你买了一个比较

476
00:16:42,000 --> 00:16:44,000
工业界工业比较好的那种

477
00:16:45,000 --> 00:16:45,000
一些设备吧

478
00:16:45,000 --> 00:16:47,000
覆盖一个家里的

479
00:16:47,000 --> 00:16:48,000
但其实家里情况也比较特殊

480
00:16:48,000 --> 00:16:50,000
不同那个户型

481
00:16:50,000 --> 00:16:51,000
那个那个楼

482
00:16:51,000 --> 00:16:52,000
那个叫什么

483
00:16:52,000 --> 00:16:54,000
那个隔墙的结构不一样

484
00:16:54,000 --> 00:16:55,000
有些是那种

485
00:16:55,000 --> 00:16:57,000
就是有纯重墙里面是有钢筋的

486
00:16:57,000 --> 00:16:58,000
那效果就很差

487
00:16:58,000 --> 00:17:00,000
然后跟你摆位有关系

488
00:17:00,000 --> 00:17:00,000
对吧

489
00:17:01,000 --> 00:17:03,000
对这之类的事情

490
00:17:03,000 --> 00:17:05,000
那我们不用我在现在做的地方

491
00:17:05,000 --> 00:17:06,000
是一个两房吧

492
00:17:06,000 --> 00:17:07,000
然后面积

493
00:17:07,000 --> 00:17:09,000
就还有那么大

494
00:17:09,000 --> 00:17:10,000
我就一个

495
00:17:11,000 --> 00:17:11,000
那个

496
00:17:12,000 --> 00:17:14,000
那个比较新的 5000 度游

497
00:17:14,000 --> 00:17:16,000
然后选的还挺不错的

498
00:17:16,000 --> 00:17:17,000
测过了

499
00:17:17,000 --> 00:17:18,000
然后效果就挺好的

500
00:17:19,000 --> 00:17:21,000
隔个墙我也能够有个

501
00:17:21,000 --> 00:17:22,000
2、30 兆

502
00:17:22,000 --> 00:17:24,000
因为我这个设备还是 11 n

503
00:17:24,000 --> 00:17:25,000
不是 11 ac 的

504
00:17:26,000 --> 00:17:28,000
11 n 的话三个 stream

505
00:17:28,000 --> 00:17:30,000
顶天有 450 的理论值了

506
00:17:30,000 --> 00:17:33,000
你扣一下打个对折

507
00:17:33,000 --> 00:17:34,000
差不多也就那样

508
00:17:34,000 --> 00:17:35,000
2、30 兆的速度了

509
00:17:35,000 --> 00:17:36,000
对

510
00:17:36,000 --> 00:17:38,000
就其实还是挺不错的

511
00:17:39,000 --> 00:17:39,000
所以就是

512
00:17:39,000 --> 00:17:41,000
就里面还是有很多这种要

513
00:17:41,000 --> 00:17:43,000
要就是

514
00:17:43,000 --> 00:17:44,000
这确实挺难的

515
00:17:44,000 --> 00:17:45,000
要有你要对这个

516
00:17:45,000 --> 00:17:48,000
这个东西要有技术上有足够的了解

517
00:17:48,000 --> 00:17:50,000
然后你要知道怎么去判断那些软文

518
00:17:50,000 --> 00:17:52,000
然后去看足够多的测评

519
00:17:52,000 --> 00:17:54,000
然后你也得像从测评里面买一个合适的

520
00:17:54,000 --> 00:17:55,000
完了之后

521
00:17:55,000 --> 00:17:58,000
你再知道在家里怎么去选择一个合适的点

522
00:17:58,000 --> 00:17:59,000
因为不一定合适嘛

523
00:17:59,000 --> 00:18:00,000
你刚好想到那个

524
00:18:00,000 --> 00:18:01,000
信号最好的点

525
00:18:01,000 --> 00:18:02,000
可能没有网线接口

526
00:18:02,000 --> 00:18:03,000
你怎么办对吧

527
00:18:03,000 --> 00:18:04,000
然后他像他这种情况

528
00:18:04,000 --> 00:18:05,000
就是说如果是这个

529
00:18:05,000 --> 00:18:07,000
看起来他是隔两堵墙的话

530
00:18:07,000 --> 00:18:08,000
就很麻烦

531
00:18:08,000 --> 00:18:09,000
因为他那个

532
00:18:10,000 --> 00:18:12,000
入户的地方不是在房间的中间的位置

533
00:18:13,000 --> 00:18:14,000
就我的运气比较好

534
00:18:14,000 --> 00:18:15,000
我入户的位置可以

535
00:18:15,000 --> 00:18:17,000
刚好在整个房间的中心点

536
00:18:18,000 --> 00:18:20,000
就可以整个平均覆盖的到

537
00:18:20,000 --> 00:18:21,000
然后他那个就不行

538
00:18:21,000 --> 00:18:22,000
他就只能

539
00:18:22,000 --> 00:18:23,000
然后之前没有埋线的话

540
00:18:24,000 --> 00:18:25,000
就很糟糕

541
00:18:25,000 --> 00:18:26,000
是

542
00:18:26,000 --> 00:18:26,000
就所以

543
00:18:26,000 --> 00:18:27,000
我觉得他那个话很早

544
00:18:27,000 --> 00:18:28,000
就是能不线就不线

545
00:18:28,000 --> 00:18:31,000
但是我觉得这个看情况就是说

546
00:18:31,000 --> 00:18:33,000
如果就成本不是问题

547
00:18:33,000 --> 00:18:35,000
然后装修的方案也可以

548
00:18:35,000 --> 00:18:36,000
你还没有定死的话

549
00:18:36,000 --> 00:18:37,000
最好的方案就是说

550
00:18:37,000 --> 00:18:39,000
你在每个房间的顶部

551
00:18:39,000 --> 00:18:41,000
去布一个那种西顶式的那种 AP

552
00:18:43,000 --> 00:18:45,000
然后做那个漫游的方案

553
00:18:45,000 --> 00:18:46,000
但这个成本就比较贵

554
00:18:46,000 --> 00:18:48,000
可能一个三房的话

555
00:18:48,000 --> 00:18:49,000
家里家三房就是

556
00:18:50,000 --> 00:18:52,000
三个卧室加一个客厅嘛对吧

557
00:18:52,000 --> 00:18:52,000
对

558
00:18:52,000 --> 00:18:53,000
就有四个房间

559
00:18:53,000 --> 00:18:55,000
你要布这个东西

560
00:18:55,000 --> 00:18:57,000
搞完这一套下来

561
00:18:57,000 --> 00:18:58,000
也得可能几千块钱

562
00:18:58,000 --> 00:18:59,000
挺贵的

563
00:18:59,000 --> 00:19:02,000
我是觉得从安全的角度讲

564
00:19:02,000 --> 00:19:05,000
不线至少要比无线安全一些

565
00:19:07,000 --> 00:19:08,000
安全的意思

566
00:19:08,000 --> 00:19:09,000
比如说

567
00:19:09,000 --> 00:19:11,000
首先在和平时代

568
00:19:11,000 --> 00:19:14,000
邻居不会来破你的无线

569
00:19:14,000 --> 00:19:15,000
在僵尸来起

570
00:19:15,000 --> 00:19:16,000
现在无线很容易破吗

571
00:19:16,000 --> 00:19:17,000
还好吧

572
00:19:17,000 --> 00:19:17,000
现在无线

573
00:19:17,000 --> 00:19:20,000
用 WPAR 应该还

574
00:19:20,000 --> 00:19:20,000
好吧

575
00:19:20,000 --> 00:19:21,000
还要用密码

576
00:19:21,000 --> 00:19:22,000
换一种说法

577
00:19:22,000 --> 00:19:23,000
邻居不会说

578
00:19:23,000 --> 00:19:24,000
我老婆怀孕了

579
00:19:24,000 --> 00:19:25,000
你把无线关一下

580
00:19:29,000 --> 00:19:31,000
不他怎么知道是你呢

581
00:19:32,000 --> 00:19:34,000
然后你如果买到网线的话

582
00:19:34,000 --> 00:19:35,000
你就可以直接上网说

583
00:19:35,000 --> 00:19:36,000
我们家没有无线

584
00:19:37,000 --> 00:19:38,000
但很不方便

585
00:19:38,000 --> 00:19:39,000
无线设备

586
00:19:39,000 --> 00:19:39,000
对

587
00:19:39,000 --> 00:19:41,000
反正我现在是基本上

588
00:19:41,000 --> 00:19:44,000
虽然我现在有有线口可以用

589
00:19:44,000 --> 00:19:45,000
但我还是 PS 4

590
00:19:45,000 --> 00:19:46,000
还是连着无线

591
00:19:46,000 --> 00:19:47,000
比如说

592
00:19:47,000 --> 00:19:48,000
对吗

593
00:19:48,000 --> 00:19:48,000
对

594
00:19:48,000 --> 00:19:50,000
而且他家里这一题

595
00:19:50,000 --> 00:19:51,000
提起也挺奇怪的

596
00:19:51,000 --> 00:19:52,000
他热点就五个

597
00:19:52,000 --> 00:19:53,000
我不明白为什么

598
00:19:53,000 --> 00:19:55,000
你家里有一个路由权情况下

599
00:19:55,000 --> 00:19:57,000
你还要加这么多个热点

600
00:19:57,000 --> 00:19:58,000
这不是自己给自己找事吗

601
00:19:59,000 --> 00:20:01,000
但是要关掉那些干扰的热点

602
00:20:01,000 --> 00:20:02,000
是因为小米路由器

603
00:20:04,000 --> 00:20:06,000
我们不要继续吐槽这位听众

604
00:20:06,000 --> 00:20:07,000
我们把人家的名字说出来

605
00:20:07,000 --> 00:20:07,000
对不起

606
00:20:07,000 --> 00:20:08,000
姚先生

607
00:20:08,000 --> 00:20:09,000
我们对事不对事

608
00:20:11,000 --> 00:20:13,000
那个 XX 路由器

609
00:20:13,000 --> 00:20:14,000
那你应该逼掉

610
00:20:14,000 --> 00:20:16,000
好吧

611
00:20:18,000 --> 00:20:19,000
No hot feelings

612
00:20:22,000 --> 00:20:23,000
下一则

613
00:20:23,000 --> 00:20:25,000
又是 Ming GW

614
00:20:26,000 --> 00:20:27,000
这位叫

615
00:20:28,000 --> 00:20:29,000
宅

616
00:20:29,000 --> 00:20:30,000
这字念宅

617
00:20:32,000 --> 00:20:33,000
两位主播好

618
00:20:33,000 --> 00:20:35,000
然后他想补充一下

619
00:20:35,000 --> 00:20:36,000
这个 Windows 下面

620
00:20:36,000 --> 00:20:37,000
Ming 的问题

621
00:20:37,000 --> 00:20:40,000
在 Windows 下用 Ming GW

622
00:20:40,000 --> 00:20:41,000
人有很多

623
00:20:41,000 --> 00:20:42,000
其中一个是我

624
00:20:42,000 --> 00:20:43,000
原因很简单

625
00:20:43,000 --> 00:20:45,000
因为 Windows 下还在更新的

626
00:20:45,000 --> 00:20:48,000
而且免费的 Fortran 编译器

627
00:20:48,000 --> 00:20:50,000
基本只有 Ming GW 一个选项

628
00:20:50,000 --> 00:20:51,000
或者更严谨的说

629
00:20:51,000 --> 00:20:53,000
最流行的一个选项

630
00:20:53,000 --> 00:20:54,000
不要惊讶

631
00:20:54,000 --> 00:20:55,000
为什么我还在用 Fortran

632
00:20:55,000 --> 00:20:57,000
我的主业是科学计算

633
00:20:57,000 --> 00:20:59,000
就是显示的使用

634
00:20:59,000 --> 00:21:00,000
包括大量学 C 源的

635
00:21:00,000 --> 00:21:02,000
跟亚根不想学编程的

636
00:21:02,000 --> 00:21:04,000
版科生在内

637
00:21:04,000 --> 00:21:05,000
走在影视的使用

638
00:21:05,000 --> 00:21:07,000
比如被学长推荐安装个

639
00:21:07,000 --> 00:21:09,000
code 毛号 block

640
00:21:09,000 --> 00:21:11,000
code block 是一个 ID 吧

641
00:21:11,000 --> 00:21:11,000
应该

642
00:21:11,000 --> 00:21:12,000
没记错了

643
00:21:12,000 --> 00:21:12,000
OK

644
00:21:13,000 --> 00:21:16,000
关于 Windows 你的终端仿真器

645
00:21:16,000 --> 00:21:18,000
我想两位也许是很久不用 Windows 了

646
00:21:18,000 --> 00:21:19,000
不了解是很正常的

647
00:21:19,000 --> 00:21:21,000
我依据个人的经历提几个

648
00:21:22,000 --> 00:21:24,000
有一个是 Git for Windows

649
00:21:24,000 --> 00:21:26,000
里面带了一个 Bash

650
00:21:26,000 --> 00:21:28,000
Git Bash 对

651
00:21:28,000 --> 00:21:31,000
你带了一个终端仿真器

652
00:21:31,000 --> 00:21:31,000
对

653
00:21:31,000 --> 00:21:33,000
如果你在 Windows 上面装一个 Bash 的话

654
00:21:33,000 --> 00:21:34,000
它会给你提供一个命令行

655
00:21:34,000 --> 00:21:36,000
然后这个命令行其实是纯

656
00:21:38,000 --> 00:21:39,000
其实是个 Shell

657
00:21:39,000 --> 00:21:41,000
就是一个 Bash Shell

658
00:21:43,000 --> 00:21:44,000
因为 Git 离不开 Shell

659
00:21:46,000 --> 00:21:46,000
对

660
00:21:46,000 --> 00:21:48,000
就是 Git Hub 的人觉得

661
00:21:48,000 --> 00:21:50,000
与其写一个图形界面

662
00:21:50,000 --> 00:21:54,000
不如让 Windows 人逼着 Windows 用户

663
00:21:54,000 --> 00:21:56,000
也用 Git 命令行

664
00:21:57,000 --> 00:21:58,000
跟 Git Hub 什么关系

665
00:21:58,000 --> 00:21:59,000
这个东西是 Git Hub 做的

666
00:22:00,000 --> 00:22:02,000
OK

667
00:22:04,000 --> 00:22:05,000
如果比较习惯 Bash 行为的人

668
00:22:05,000 --> 00:22:08,000
可以用那个做一点基本的操作

669
00:22:09,000 --> 00:22:12,000
对于使用 Command.exe 的人

670
00:22:12,000 --> 00:22:14,000
应该推荐一个叫做 Commander

671
00:22:14,000 --> 00:22:16,000
王者是 Commander

672
00:22:16,000 --> 00:22:19,000
CMDER.NET 的项目

673
00:22:19,000 --> 00:22:21,000
当然这个项目是

674
00:22:21,000 --> 00:22:25,000
Commemu 的一个改进版

675
00:22:25,000 --> 00:22:27,000
Commemu 是 C-O-N-E-M-U

676
00:22:28,000 --> 00:22:29,000
但的确很流行

677
00:22:29,000 --> 00:22:30,000
重点是开箱即用前美观

678
00:22:31,000 --> 00:22:32,000
这个还是蛮难得的

679
00:22:33,000 --> 00:22:34,000
每天做的话

680
00:22:34,000 --> 00:22:37,000
应该是也支持基本的 Linux Shell 命令

681
00:22:37,000 --> 00:22:39,000
比如说 List 之类的

682
00:22:39,000 --> 00:22:42,000
也可以在里面调用 PowerShell 以及 Bash

683
00:22:43,000 --> 00:22:44,000
就可以试一下

684
00:22:44,000 --> 00:22:45,000
OK

685
00:22:45,000 --> 00:22:48,000
C-O-N-E-M-U 是一个

686
00:22:48,000 --> 00:22:50,000
C-O-N-U

687
00:22:50,000 --> 00:22:51,000
你用过吧

688
00:22:51,000 --> 00:22:52,000
好像用过

689
00:22:53,000 --> 00:22:55,000
但我具体不记得是长什么样的

690
00:22:55,000 --> 00:22:56,000
也有可能不是

691
00:22:56,000 --> 00:22:58,000
但是应该是一个

692
00:22:58,000 --> 00:23:00,000
还用过这种东西

693
00:23:00,000 --> 00:23:01,000
我之前不是在 Windows

694
00:23:01,000 --> 00:23:02,000
不不不

695
00:23:02,000 --> 00:23:03,000
我之前不是在一个

696
00:23:05,000 --> 00:23:08,000
数据调研公司写的软件

697
00:23:08,000 --> 00:23:11,000
最后是要部署到 Linux 服务器上的

698
00:23:11,000 --> 00:23:13,000
但是开发环境是 Windows

699
00:23:13,000 --> 00:23:14,000
所以要

700
00:23:16,000 --> 00:23:17,000
对

701
00:23:17,000 --> 00:23:19,000
我记得那个 Commemu 是支持

702
00:23:19,000 --> 00:23:20,000
反正是个支持 Tab

703
00:23:20,000 --> 00:23:21,000
然后

704
00:23:23,000 --> 00:23:24,000
好吧

705
00:23:24,000 --> 00:23:26,000
下面一则反馈就可有意思了

706
00:23:28,000 --> 00:23:29,000
一定要强烈推荐

707
00:23:29,000 --> 00:23:31,000
这简直是我们这一期的主题

708
00:23:33,000 --> 00:23:34,000
可以吐槽好久

709
00:23:34,000 --> 00:23:35,000
不是吐槽

710
00:23:35,000 --> 00:23:37,000
就是和他一起吐槽

711
00:23:37,000 --> 00:23:37,000
对

712
00:23:37,000 --> 00:23:39,000
应该说是一起共鸣

713
00:23:41,000 --> 00:23:42,000
本期我们没有主题

714
00:23:42,000 --> 00:23:44,000
就这个还是要

715
00:23:45,000 --> 00:23:46,000
说明一下

716
00:23:46,000 --> 00:23:48,000
因为我周末要去

717
00:23:49,000 --> 00:23:50,000
一大夜玩陪女朋友

718
00:23:50,000 --> 00:23:51,000
所以

719
00:23:51,000 --> 00:23:52,000
嗯

720
00:23:53,000 --> 00:23:55,000
我们这期是以这个

721
00:23:56,000 --> 00:23:57,000
非常有常

722
00:23:57,000 --> 00:23:57,000
轻松幽默为主

723
00:23:57,000 --> 00:23:58,000
对吧

724
00:23:59,000 --> 00:23:59,000
好吧

725
00:23:59,000 --> 00:24:00,000
我刚才想说

726
00:24:00,000 --> 00:24:03,000
我们毕竟是一个 IT 主题娱乐节目

727
00:24:03,000 --> 00:24:03,000
没错

728
00:24:03,000 --> 00:24:06,000
我们是以这个听众反馈

729
00:24:06,000 --> 00:24:08,000
冲田时间的一期节目

730
00:24:08,000 --> 00:24:09,000
我刚才想说

731
00:24:11,000 --> 00:24:14,000
这封是我们每次都写很多反馈的

732
00:24:14,000 --> 00:24:17,000
老朋友叫做 Polydiary

733
00:24:17,000 --> 00:24:19,000
Ral 吴涛你们好

734
00:24:19,000 --> 00:24:20,000
首先还是感谢一下二位

735
00:24:20,000 --> 00:24:22,000
通过你们的节目

736
00:24:22,000 --> 00:24:23,000
一却让我了解了

737
00:24:23,000 --> 00:24:25,000
不少计算机方面的基础知识

738
00:24:25,000 --> 00:24:27,000
最新一期的 Terminal Amulet

739
00:24:27,000 --> 00:24:29,000
虽然我几乎没听懂在讲什么

740
00:24:29,000 --> 00:24:30,000
辛苦你了

741
00:24:30,000 --> 00:24:31,000
但是这种形式

742
00:24:31,000 --> 00:24:33,000
这种节目形式的好处就是

743
00:24:33,000 --> 00:24:34,000
可以一边听着

744
00:24:34,000 --> 00:24:35,000
也不耽误手头的事

745
00:24:35,000 --> 00:24:36,000
还好

746
00:24:36,000 --> 00:24:38,000
我们应该有一个 convention

747
00:24:38,000 --> 00:24:39,000
就是当你大声念的时候

748
00:24:39,000 --> 00:24:41,000
就是这个反馈的内容

749
00:24:41,000 --> 00:24:42,000
然后当你小声

750
00:24:42,000 --> 00:24:44,000
我应该换一种 voice

751
00:24:44,000 --> 00:24:45,000
对

752
00:24:45,000 --> 00:24:45,000
换一种 voice

753
00:24:46,000 --> 00:24:46,000
来

754
00:24:46,000 --> 00:24:47,000
来我现在开始

755
00:24:47,000 --> 00:24:50,000
我们为了表意清晰

756
00:24:50,000 --> 00:24:51,000
我们进入一个

757
00:24:51,000 --> 00:24:53,000
就是以后我念听众反馈

758
00:24:53,000 --> 00:24:53,000
都会用一种

759
00:24:53,000 --> 00:24:56,000
不是我这种日常说话的声音

760
00:24:56,000 --> 00:24:57,000
说说用拨音腔好了

761
00:24:58,000 --> 00:25:02,000
这次的反馈是关于上一期命令行的

762
00:25:02,000 --> 00:25:04,000
是因为最近我决定把网站

763
00:25:04,000 --> 00:25:06,000
迁移到某云服务器上

764
00:25:06,000 --> 00:25:07,000
正好折腾了两天

765
00:25:07,000 --> 00:25:09,000
Linux 的 web 环境配置

766
00:25:09,000 --> 00:25:11,000
真的是无比的痛苦

767
00:25:11,000 --> 00:25:12,000
所以想说一下

768
00:25:12,000 --> 00:25:14,000
对命令行的看法和疑问

769
00:25:14,000 --> 00:25:15,000
当然是从外行的角度

770
00:25:16,000 --> 00:25:17,000
和大多数人一样

771
00:25:17,000 --> 00:25:19,000
我真正开始接触计算机

772
00:25:19,000 --> 00:25:21,000
也是从 Windows 开始的

773
00:25:21,000 --> 00:25:23,000
对于命令行的了解

774
00:25:23,000 --> 00:25:25,000
基本上仅限于在 Windows 命令提示符下

775
00:25:25,000 --> 00:25:28,000
拼一下域名或者 IP config

776
00:25:28,000 --> 00:25:30,000
看一下本期 IP 等简单操作

777
00:25:31,000 --> 00:25:33,000
对于 Linux 是完全陌生的

778
00:25:34,000 --> 00:25:36,000
之前在本机环境测试

779
00:25:36,000 --> 00:25:39,000
都是装一个 web

780
00:25:39,000 --> 00:25:41,000
集成 web 环境

781
00:25:42,000 --> 00:25:46,000
WANP 是 Windows based Apache MySQL PHP

782
00:25:47,000 --> 00:25:48,000
Holy

783
00:25:48,000 --> 00:25:50,000
这是 LAMP 的衍生

784
00:25:50,000 --> 00:25:51,000
Windows 版

785
00:25:51,000 --> 00:25:52,000
OK

786
00:25:53,000 --> 00:25:54,000
然后所有的操作

787
00:25:54,000 --> 00:25:56,000
都可以通过图形界面的菜单

788
00:25:56,000 --> 00:25:58,000
或者编辑器来操作

789
00:25:58,000 --> 00:25:59,000
我最近才知道

790
00:25:59,000 --> 00:26:01,000
Linux 都是需要用命令

791
00:26:01,000 --> 00:26:03,000
来操作这些简单事情

792
00:26:03,000 --> 00:26:04,000
我记得很多年前

793
00:26:04,000 --> 00:26:06,000
就听说过一些 Linux 系统

794
00:26:06,000 --> 00:26:07,000
比如 Ubuntu

795
00:26:07,000 --> 00:26:10,000
就已经实现了类似 Windows 的图形界面

796
00:26:10,000 --> 00:26:13,000
而 MacOS 也是基于 Nix 的

797
00:26:13,000 --> 00:26:15,000
这里说明一下这个是错的

798
00:26:15,000 --> 00:26:17,000
MacOS 是基于 BSD 的

799
00:26:19,000 --> 00:26:20,000
我有点搞不懂的是

800
00:26:20,000 --> 00:26:22,000
为什么现在的服务器

801
00:26:22,000 --> 00:26:23,000
还普遍使用

802
00:26:23,000 --> 00:26:25,000
XIAO 命令行的操作方式

803
00:26:25,000 --> 00:26:27,000
而不是像 Windows 那样远程登录过去

804
00:26:27,000 --> 00:26:29,000
直接用图形界面操作

805
00:26:29,000 --> 00:26:30,000
当然我也看到有的观点

806
00:26:30,000 --> 00:26:32,000
说是为了节省性能

807
00:26:32,000 --> 00:26:34,000
但是我觉得对于今天的硬件配置

808
00:26:34,000 --> 00:26:36,000
加一个图形界面

809
00:26:36,000 --> 00:26:36,000
这样的资源

810
00:26:36,000 --> 00:26:37,000
应该是微乎其微吧

811
00:26:37,000 --> 00:26:39,000
是不是有其他的原因呢

812
00:26:40,000 --> 00:26:42,000
还有就是我本来以为我使用的云服务

813
00:26:42,000 --> 00:26:44,000
已经实现了类似虚拟主机

814
00:26:44,000 --> 00:26:47,000
那样的 Web 图形界面管理能力

815
00:26:47,000 --> 00:26:49,000
但是我发现完全不是那样

816
00:26:49,000 --> 00:26:51,000
实际上他们只是在硬件层面

817
00:26:51,000 --> 00:26:53,000
实现了弹性和虚拟化

818
00:26:53,000 --> 00:26:55,000
用户拿到的仍然是一个空白的系统

819
00:26:56,000 --> 00:26:57,000
一切需要自己配置

820
00:26:58,000 --> 00:26:59,000
虽然他们有云市场里面

821
00:26:59,000 --> 00:27:01,000
可以购买集成乐的镜像

822
00:27:01,000 --> 00:27:03,000
但是我试了一下根本用不了

823
00:27:04,000 --> 00:27:06,000
而且客服根本就不恢复

824
00:27:06,000 --> 00:27:08,000
所以最后我只能自己

825
00:27:08,000 --> 00:27:10,000
按照他们的配置教程去做

826
00:27:10,000 --> 00:27:11,000
但是他们的文档

827
00:27:11,000 --> 00:27:14,000
明显是写给专业用户的

828
00:27:14,000 --> 00:27:14,000
比如说

829
00:27:15,000 --> 00:27:16,000
比如刚开始就说

830
00:27:16,000 --> 00:27:18,000
如何运行安装命令

831
00:27:18,000 --> 00:27:20,000
却不告诉你如何把安装包

832
00:27:20,000 --> 00:27:21,000
弄到服务器上

833
00:27:21,000 --> 00:27:23,000
最后我是从一个视频里面

834
00:27:23,000 --> 00:27:24,000
才找到办法

835
00:27:24,000 --> 00:27:26,000
用 Linux 自带的命令上传过去

836
00:27:27,000 --> 00:27:28,000
然后再用命令解压点点点

837
00:27:29,000 --> 00:27:30,000
最后配置好了

838
00:27:30,000 --> 00:27:31,000
程序跑几分钟

839
00:27:31,000 --> 00:27:33,000
MySQL 就挂了

840
00:27:33,000 --> 00:27:34,000
我根据错误提示

841
00:27:34,000 --> 00:27:36,000
从网上找解决方案

842
00:27:36,000 --> 00:27:38,000
结果发现有四五种可能

843
00:27:38,000 --> 00:27:40,000
而且也没有把原因说清楚

844
00:27:40,000 --> 00:27:42,000
最后都试过还是不行

845
00:27:42,000 --> 00:27:43,000
只能重启服务器

846
00:27:43,000 --> 00:27:45,000
维持几分钟

847
00:27:45,000 --> 00:27:46,000
好吧我就说错了

848
00:27:47,000 --> 00:27:49,000
基本上我的感受

849
00:27:49,000 --> 00:27:50,000
就像是一个小黑箱

850
00:27:50,000 --> 00:27:52,000
对于服务器来说

851
00:27:52,000 --> 00:27:54,000
也是一种神秘无形的存在

852
00:27:54,000 --> 00:27:56,000
只能通过一个小黑窗

853
00:27:56,000 --> 00:27:57,000
通过某种神秘的密码

854
00:27:57,000 --> 00:27:58,000
和它对话

855
00:27:58,000 --> 00:28:01,000
让人困惑和气愤的是

856
00:28:01,000 --> 00:28:02,000
为什么我所有步骤都做对了

857
00:28:02,000 --> 00:28:04,000
还是出各种问题

858
00:28:04,000 --> 00:28:05,000
或者已经能运行了

859
00:28:05,000 --> 00:28:07,000
还是会出一些小的错误

860
00:28:07,000 --> 00:28:08,000
这真的两天

861
00:28:09,000 --> 00:28:10,000
重置无数次之后

862
00:28:10,000 --> 00:28:12,000
我终于崩溃了

863
00:28:12,000 --> 00:28:13,000
所以最后我通过

864
00:28:13,000 --> 00:28:15,000
根据别人的提示

865
00:28:15,000 --> 00:28:17,000
用了一个云主机面板

866
00:28:17,000 --> 00:28:19,000
可以通过图形界面来操作了

867
00:28:20,000 --> 00:28:21,000
这件事让我意识到

868
00:28:21,000 --> 00:28:23,000
运为并不是一件容易的事

869
00:28:23,000 --> 00:28:25,000
但至于为什么会这样

870
00:28:25,000 --> 00:28:26,000
我还是有点不明白

871
00:28:26,000 --> 00:28:27,000
也许因为已经习惯了

872
00:28:27,000 --> 00:28:30,000
Windows 这种图形化的直观操作方式

873
00:28:30,000 --> 00:28:33,000
或者像 Smartphone 上的应用

874
00:28:33,000 --> 00:28:35,000
其实大部分工作

875
00:28:35,000 --> 00:28:37,000
开发员都替你完成了

876
00:28:38,000 --> 00:28:39,000
而 Linux 这样的

877
00:28:39,000 --> 00:28:40,000
只能从一砖一瓦

878
00:28:40,000 --> 00:28:42,000
自己开始盖大楼

879
00:28:42,000 --> 00:28:44,000
要自己亲自踏过所有的坑

880
00:28:44,000 --> 00:28:45,000
才能跑起来

881
00:28:46,000 --> 00:28:48,000
我总觉得这不是一种理想的方式

882
00:28:49,000 --> 00:28:50,000
用一个例子来说

883
00:28:50,000 --> 00:28:52,000
我觉得微信大行其道

884
00:28:52,000 --> 00:28:53,000
其中有一个重要原因可能是

885
00:28:53,000 --> 00:28:56,000
它通过图形化的直观的

886
00:28:56,000 --> 00:28:58,000
人人都可以操作的方式

887
00:28:58,000 --> 00:29:00,000
完成了以前只有开发人员

888
00:29:00,000 --> 00:29:01,000
才能完成的工作

889
00:29:01,000 --> 00:29:02,000
直到现在

890
00:29:02,000 --> 00:29:05,000
一个没有任何编程基础的人

891
00:29:05,000 --> 00:29:08,000
想在 web 上做一个类似公众号的东西

892
00:29:08,000 --> 00:29:10,000
都是几乎不可能的

893
00:29:10,000 --> 00:29:13,000
所以就算是公众号早期的时候

894
00:29:13,000 --> 00:29:16,000
仅仅只有一个发布图文的功能

895
00:29:16,000 --> 00:29:18,000
几乎相当于 web 2.0 以前的

896
00:29:18,000 --> 00:29:20,000
技术水平和模式

897
00:29:20,000 --> 00:29:21,000
仍然吸引了大量用户

898
00:29:26,000 --> 00:29:27,000
后面就不用念了吧

899
00:29:27,000 --> 00:29:30,000
您现在收听到的是内核拱黄一档

900
00:29:30,000 --> 00:29:31,000
Rail 卖萌的节目

901
00:29:32,000 --> 00:29:33,000
OK

902
00:29:33,000 --> 00:29:34,000
现在牵涵我自己的声音

903
00:29:34,000 --> 00:29:37,000
表示这个听众反馈环节结束

904
00:29:37,000 --> 00:29:38,000
其实你觉不觉得这个反馈

905
00:29:38,000 --> 00:29:40,000
代表了很多人的心声

906
00:29:40,000 --> 00:29:43,000
我觉得有点像在回顾自己的童年

907
00:29:45,000 --> 00:29:46,000
童年太早了吧

908
00:29:46,000 --> 00:29:46,000
你

909
00:29:48,000 --> 00:29:50,000
10 年 20 年前的

910
00:29:50,000 --> 00:29:53,000
就我们刚学接触的那个时候

911
00:29:53,000 --> 00:29:55,000
差不多也经历过这种一种很

912
00:29:55,000 --> 00:29:56,000
怎么叫

913
00:29:56,000 --> 00:29:56,000
我用那个词

914
00:29:56,000 --> 00:30:00,000
它叫让人困惑和气氛的时代

915
00:30:00,000 --> 00:30:00,000
对

916
00:30:00,000 --> 00:30:02,000
这篇 E-mail 里面

917
00:30:02,000 --> 00:30:04,000
其实我当时有种冲动

918
00:30:04,000 --> 00:30:05,000
就是把它打印出

919
00:30:05,000 --> 00:30:07,000
打印出的感觉是不是

920
00:30:07,000 --> 00:30:07,000
把它打印出来

921
00:30:07,000 --> 00:30:09,000
然后把其中一些

922
00:30:10,000 --> 00:30:12,000
亮点的句子用这个

923
00:30:12,000 --> 00:30:13,000
荧光笔 highlight

924
00:30:14,000 --> 00:30:17,000
比如这个让人困惑和气氛的时代

925
00:30:18,000 --> 00:30:18,000
对

926
00:30:18,000 --> 00:30:20,000
因为其实这则反馈

927
00:30:20,000 --> 00:30:22,000
其实我觉得相当有代表性

928
00:30:22,000 --> 00:30:23,000
因为其实我们自己

929
00:30:23,000 --> 00:30:24,000
起码我自己

930
00:30:24,000 --> 00:30:27,000
是也是经历过他这个阶段

931
00:30:27,000 --> 00:30:29,000
这么摸索过来的

932
00:30:29,000 --> 00:30:30,000
就是觉得

933
00:30:30,000 --> 00:30:31,000
这什么跟什么

934
00:30:31,000 --> 00:30:33,000
就是一堆什么乱七八糟的玩意儿

935
00:30:33,000 --> 00:30:35,000
在屏幕跳来跳去对吧

936
00:30:35,000 --> 00:30:36,000
为什么这么难

937
00:30:36,000 --> 00:30:38,000
为什么不能点两下就搞定了

938
00:30:39,000 --> 00:30:40,000
但我觉得这个是

939
00:30:40,000 --> 00:30:42,000
就这里有一个历史背景在哪

940
00:30:42,000 --> 00:30:44,000
就是我们的那个时代

941
00:30:44,000 --> 00:30:45,000
你必须去买杂志

942
00:30:45,000 --> 00:30:48,000
或者是看报纸上一篇

943
00:30:49,000 --> 00:30:51,000
受字数限制的文章

944
00:30:51,000 --> 00:30:52,000
来一步一步的去

945
00:30:53,000 --> 00:30:54,000
钻研怎么

946
00:30:54,000 --> 00:30:55,000
没有搜索引擎

947
00:30:55,000 --> 00:30:56,000
对

948
00:30:56,000 --> 00:30:57,000
但是

949
00:30:57,000 --> 00:30:59,000
现在这个时代还是会

950
00:31:00,000 --> 00:31:01,000
有这样同样的

951
00:31:01,000 --> 00:31:03,000
比如说那个是最简单

952
00:31:03,000 --> 00:31:05,000
那个时候不可能有什么一个

953
00:31:06,000 --> 00:31:07,000
virtuBox

954
00:31:07,000 --> 00:31:08,000
让你装一个 Linux

955
00:31:08,000 --> 00:31:11,000
然后你按一个快键切换出来

956
00:31:11,000 --> 00:31:12,000
就可以去插文档了

957
00:31:12,000 --> 00:31:13,000
这种事情不存在了

958
00:31:13,000 --> 00:31:13,000
对吧

959
00:31:14,000 --> 00:31:15,000
就一台电脑

960
00:31:15,000 --> 00:31:16,000
装上就那个地方

961
00:31:16,000 --> 00:31:16,000
然后崩溃了

962
00:31:16,000 --> 00:31:18,000
你没有任何东西可以用

963
00:31:18,000 --> 00:31:18,000
对

964
00:31:18,000 --> 00:31:20,000
而且那个时候我

965
00:31:20,000 --> 00:31:22,000
反正 somehow

966
00:31:22,000 --> 00:31:23,000
脑子一热

967
00:31:23,000 --> 00:31:24,000
Windows 整个删掉了

968
00:31:24,000 --> 00:31:28,000
就连一个

969
00:31:28,000 --> 00:31:29,000
想打游戏的

970
00:31:29,000 --> 00:31:30,000
就是非常

971
00:31:30,000 --> 00:31:31,000
格式化重来

972
00:31:31,000 --> 00:31:32,000
非常挫折的时候

973
00:31:32,000 --> 00:31:34,000
想要打游戏都没有

974
00:31:34,000 --> 00:31:34,000
没有选择

975
00:31:34,000 --> 00:31:35,000
只能关机

976
00:31:38,000 --> 00:31:39,000
对

977
00:31:39,000 --> 00:31:39,000
不但我觉得

978
00:31:39,000 --> 00:31:41,000
其实他这个

979
00:31:42,000 --> 00:31:43,000
有几个方面

980
00:31:43,000 --> 00:31:44,000
待会我们可能展开来讨论

981
00:31:44,000 --> 00:31:45,000
但是我觉得

982
00:31:45,000 --> 00:31:46,000
首先有一点我要承认的

983
00:31:46,000 --> 00:31:48,000
就是说他说的这件事情

984
00:31:48,000 --> 00:31:49,000
从一个

985
00:31:49,000 --> 00:31:51,000
就如果我们把 Linux 服务器

986
00:31:51,000 --> 00:31:53,000
当成一个消费级别的产品来看

987
00:31:54,000 --> 00:31:56,000
就从他的产品感

988
00:31:56,000 --> 00:31:57,000
或者说这个应用性

989
00:31:57,000 --> 00:31:59,000
他确实是很差的

990
00:31:59,000 --> 00:32:01,000
这点我们要承认

991
00:32:01,000 --> 00:32:04,000
沿用上一期提到车的比喻

992
00:32:04,000 --> 00:32:05,000
Linux 卖给你的是坦克

993
00:32:06,000 --> 00:32:07,000
里边一大堆

994
00:32:07,000 --> 00:32:09,000
而且是不保证能正常运行

995
00:32:09,000 --> 00:32:10,000
对

996
00:32:10,000 --> 00:32:11,000
里面搞不好你坐进去

997
00:32:11,000 --> 00:32:12,000
连方向盘都没有

998
00:32:12,000 --> 00:32:13,000
是两个操纵杆

999
00:32:13,000 --> 00:32:15,000
你得先明白

1000
00:32:15,000 --> 00:32:17,000
同时推操纵杆是前进

1001
00:32:18,000 --> 00:32:20,000
一个前一个后就是转弯

1002
00:32:21,000 --> 00:32:23,000
你连方向盘的使用经验都没有了

1003
00:32:23,000 --> 00:32:23,000
对吧

1004
00:32:23,000 --> 00:32:24,000
没错

1005
00:32:24,000 --> 00:32:24,000
没错

1006
00:32:25,000 --> 00:32:28,000
确实他不是一个包装的

1007
00:32:28,000 --> 00:32:28,000
当然也有

1008
00:32:28,000 --> 00:32:29,000
现在有很多商业公司在做

1009
00:32:29,000 --> 00:32:30,000
比如说

1010
00:32:30,000 --> 00:32:31,000
就像我们觉得

1011
00:32:31,000 --> 00:32:32,000
一向一些比较

1012
00:32:33,000 --> 00:32:34,000
比较 user friendly

1013
00:32:34,000 --> 00:32:37,000
就比较用户友好的 Linux 发行版

1014
00:32:37,000 --> 00:32:38,000
他做的已经还

1015
00:32:38,000 --> 00:32:41,000
就是在这方面做的已经比以前好多了

1016
00:32:41,000 --> 00:32:43,000
以前那个时候真的是你要自己去

1017
00:32:43,000 --> 00:32:45,000
下载一个什么 tablet 回来

1018
00:32:45,000 --> 00:32:46,000
解压编译

1019
00:32:46,000 --> 00:32:48,000
然后选各种参数

1020
00:32:48,000 --> 00:32:49,000
然后自己解决各种依赖

1021
00:32:49,000 --> 00:32:49,000
对吧

1022
00:32:49,000 --> 00:32:51,000
然后才能搞上一个软件

1023
00:32:51,000 --> 00:32:52,000
现在比如说

1024
00:32:53,000 --> 00:32:54,000
大部分主流的发行版

1025
00:32:54,000 --> 00:32:57,000
都有很成熟的包管理器

1026
00:32:57,000 --> 00:32:59,000
然后你只要运行几条命令

1027
00:32:59,000 --> 00:32:59,000
就连上网了

1028
00:32:59,000 --> 00:33:00,000
就可以自动安装

1029
00:33:00,000 --> 00:33:02,000
然后包括所有的依赖

1030
00:33:02,000 --> 00:33:04,000
基本的配置都给你搞好了

1031
00:33:04,000 --> 00:33:04,000
对吧

1032
00:33:04,000 --> 00:33:06,000
其实已经比

1033
00:33:06,000 --> 00:33:08,000
十几年前好的

1034
00:33:08,000 --> 00:33:09,000
多了

1035
00:33:09,000 --> 00:33:11,000
就从我们这些老用户的角度来看

1036
00:33:11,000 --> 00:33:13,000
但是他说的一些问题确实存在

1037
00:33:13,000 --> 00:33:14,000
就特别是对于一种

1038
00:33:14,000 --> 00:33:16,000
你刚从 Windows 过来

1039
00:33:16,000 --> 00:33:17,000
然后你也完全不理解

1040
00:33:17,000 --> 00:33:19,000
这个命令行操作方式

1041
00:33:19,000 --> 00:33:21,000
也不理解 Linux 这些原理的话

1042
00:33:21,000 --> 00:33:22,000
其实没有这个

1043
00:33:22,000 --> 00:33:23,000
没有基础

1044
00:33:24,000 --> 00:33:26,000
你真的是很难去搞懂

1045
00:33:26,000 --> 00:33:27,000
因为就是

1046
00:33:28,000 --> 00:33:28,000
命令行的界面

1047
00:33:28,000 --> 00:33:31,000
有一个发现性比较差的一个问题

1048
00:33:31,000 --> 00:33:32,000
就是如果你不知道要做什么的话

1049
00:33:32,000 --> 00:33:33,000
那你就不可能

1050
00:33:34,000 --> 00:33:34,000
对

1051
00:33:34,000 --> 00:33:36,000
你就根本就无处

1052
00:33:36,000 --> 00:33:38,000
就你不能东点点西看看对吧

1053
00:33:38,000 --> 00:33:38,000
你看啥呢

1054
00:33:38,000 --> 00:33:39,000
你都不知道

1055
00:33:40,000 --> 00:33:41,000
它这是一个很自由

1056
00:33:41,000 --> 00:33:43,000
很开放的一个世界

1057
00:33:43,000 --> 00:33:45,000
你都不知道该查什么

1058
00:33:45,000 --> 00:33:47,000
然后也不像说

1059
00:33:47,000 --> 00:33:47,000
有图形界面的话

1060
00:33:47,000 --> 00:33:48,000
你可以知道看一下

1061
00:33:48,000 --> 00:33:49,000
一共有多少个选项

1062
00:33:49,000 --> 00:33:50,000
每个选项是干嘛的对吧

1063
00:33:50,000 --> 00:33:52,000
它有一个逐渐学习的一个过程

1064
00:33:53,000 --> 00:33:54,000
但是

1065
00:33:54,000 --> 00:33:55,000
就说完这些问题之后

1066
00:33:55,000 --> 00:33:57,000
其实就我自己的这种

1067
00:33:58,000 --> 00:34:00,000
这种摸索学习的基因来看

1068
00:34:00,000 --> 00:34:04,000
其实它这个问题的最核心的原因

1069
00:34:04,000 --> 00:34:04,000
就是说

1070
00:34:05,000 --> 00:34:07,000
他没有这个基础知识

1071
00:34:07,000 --> 00:34:08,000
就是说

1072
00:34:08,000 --> 00:34:09,000
还没有学会走

1073
00:34:09,000 --> 00:34:10,000
就想学会跑

1074
00:34:10,000 --> 00:34:12,000
我觉得应该这么说

1075
00:34:12,000 --> 00:34:14,000
就是它是

1076
00:34:14,000 --> 00:34:17,000
我觉得这个比喻可能非常的

1077
00:34:17,000 --> 00:34:18,000
呃

1078
00:34:20,000 --> 00:34:21,000
政治不正确

1079
00:34:21,000 --> 00:34:23,000
但是应该说它比较像

1080
00:34:23,000 --> 00:34:24,000
呃

1081
00:34:24,000 --> 00:34:25,000
它是一条鱼

1082
00:34:25,000 --> 00:34:26,000
它游惯了

1083
00:34:26,000 --> 00:34:28,000
然后上岸之后

1084
00:34:28,000 --> 00:34:30,000
它试图在一个没有水的地方

1085
00:34:30,000 --> 00:34:32,000
用摆动尾巴的方式前进

1086
00:34:32,000 --> 00:34:33,000
这是

1087
00:34:34,000 --> 00:34:34,000
行不通的

1088
00:34:35,000 --> 00:34:36,000
就是

1089
00:34:36,000 --> 00:34:36,000
呃

1090
00:34:37,000 --> 00:34:40,000
因为有那些 windows 的知识

1091
00:34:40,000 --> 00:34:42,000
图形化的知识在那边

1092
00:34:42,000 --> 00:34:43,000
你会想说

1093
00:34:43,000 --> 00:34:46,000
沿用你曾经可行的方式

1094
00:34:46,000 --> 00:34:49,000
去在一个崭新的环境里面工作

1095
00:34:49,000 --> 00:34:50,000
展示

1096
00:34:50,000 --> 00:34:51,000
对你必须先

1097
00:34:51,000 --> 00:34:53,000
一个词叫安乐

1098
00:34:53,000 --> 00:34:53,000
就是

1099
00:34:54,000 --> 00:34:56,000
把一些东西忘掉

1100
00:34:56,000 --> 00:34:56,000
就

1101
00:34:56,000 --> 00:34:59,000
就像学那个什么待机拳一样

1102
00:34:59,000 --> 00:34:59,000
你要

1103
00:35:00,000 --> 00:35:01,000
忘掉自己所学的东西

1104
00:35:01,000 --> 00:35:05,000
才可以重新开始去学一些新的东西

1105
00:35:05,000 --> 00:35:06,000
对

1106
00:35:06,000 --> 00:35:07,000
就是说你

1107
00:35:07,000 --> 00:35:10,000
特别是你从一个 gooey 图形界面

1108
00:35:10,000 --> 00:35:12,000
转化成一个命令行界面

1109
00:35:12,000 --> 00:35:13,000
这种是有本质

1110
00:35:13,000 --> 00:35:14,000
就是范式转换的

1111
00:35:14,000 --> 00:35:16,000
你那些之前的经验是

1112
00:35:16,000 --> 00:35:17,000
就行不通的

1113
00:35:17,000 --> 00:35:18,000
然后

1114
00:35:19,000 --> 00:35:20,000
那么就会

1115
00:35:20,000 --> 00:35:22,000
呃那么一个正确的方法

1116
00:35:22,000 --> 00:35:22,000
应该是怎么样

1117
00:35:22,000 --> 00:35:23,000
就是说

1118
00:35:23,000 --> 00:35:24,000
你就是需要看一些

1119
00:35:24,000 --> 00:35:26,000
更加基础更加底层的东西

1120
00:35:26,000 --> 00:35:27,000
因为一步一步看

1121
00:35:27,000 --> 00:35:28,000
Linux 的基本操作

1122
00:35:28,000 --> 00:35:30,000
它的基本原理是怎么样子的

1123
00:35:30,000 --> 00:35:31,000
它为什么会有这些东西

1124
00:35:31,000 --> 00:35:32,000
对吧

1125
00:35:32,000 --> 00:35:34,000
就像我们之前讨论过很多这种问题

1126
00:35:34,000 --> 00:35:36,000
它的命令行界面

1127
00:35:36,000 --> 00:35:37,000
是更早一图形界面出现的

1128
00:35:38,000 --> 00:35:39,000
它的历史严格怎么样子

1129
00:35:39,000 --> 00:35:41,000
那为什么我们在服务器上

1130
00:35:41,000 --> 00:35:43,000
还是沿用这么一套东西

1131
00:35:43,000 --> 00:35:44,000
有更多样的历史的原因

1132
00:35:44,000 --> 00:35:47,000
或者是一些更加务实的考虑

1133
00:35:47,000 --> 00:35:49,000
就没有那么简单的一个

1134
00:35:49,000 --> 00:35:51,000
呃那个

1135
00:35:51,000 --> 00:35:52,000
呃

1136
00:35:52,000 --> 00:35:55,000
就没有图形界面这么直观的

1137
00:35:55,000 --> 00:35:56,000
可以用的界面

1138
00:35:56,000 --> 00:35:59,000
反正有句话说学者就是学哲学史

1139
00:35:59,000 --> 00:36:00,000
那其实你学操作系统

1140
00:36:00,000 --> 00:36:01,000
至少 Linux 操作系统

1141
00:36:01,000 --> 00:36:04,000
你其实是要学一遍 UniX 的历史

1142
00:36:04,000 --> 00:36:06,000
就是绕不过去的

1143
00:36:06,000 --> 00:36:07,000
但其实

1144
00:36:07,000 --> 00:36:09,000
但其实我觉得对于很多这种新手来讲

1145
00:36:09,000 --> 00:36:10,000
他是

1146
00:36:10,000 --> 00:36:12,000
就起码我自己有这个

1147
00:36:12,000 --> 00:36:13,000
有这个很精力

1148
00:36:13,000 --> 00:36:14,000
我就是说

1149
00:36:14,000 --> 00:36:15,000
啊我只想做这么一个

1150
00:36:15,000 --> 00:36:17,000
非常简单的事情对吧

1151
00:36:17,000 --> 00:36:18,000
我为什么要花

1152
00:36:18,000 --> 00:36:20,000
一个月或者半年的时间

1153
00:36:20,000 --> 00:36:22,000
去研究一遍这么底层的东西

1154
00:36:22,000 --> 00:36:24,000
但你学 Windows 的时候

1155
00:36:24,000 --> 00:36:25,000
你不也花了这么多时间

1156
00:36:25,000 --> 00:36:26,000
就做同样的事情

1157
00:36:26,000 --> 00:36:27,000
你就忘了嘛对吧

1158
00:36:28,000 --> 00:36:28,000
所以

1159
00:36:28,000 --> 00:36:30,000
所以我觉得还是要先

1160
00:36:30,000 --> 00:36:31,000
首先要把心态放对

1161
00:36:31,000 --> 00:36:33,000
如果你要选择这条道路的话

1162
00:36:34,000 --> 00:36:35,000
那你肯定是要先打一些

1163
00:36:35,000 --> 00:36:37,000
就是要先读小学嘛

1164
00:36:37,000 --> 00:36:38,000
最大的问题就是

1165
00:36:38,000 --> 00:36:39,000
高中的作业

1166
00:36:39,000 --> 00:36:41,000
最大问题是很多人可能就被

1167
00:36:41,000 --> 00:36:43,000
迫去做这件事情

1168
00:36:43,000 --> 00:36:45,000
他这并不是他主动的一个意愿

1169
00:36:45,000 --> 00:36:46,000
比如说他

1170
00:36:46,000 --> 00:36:49,000
比如说这位听众他的动机

1171
00:36:49,000 --> 00:36:50,000
其实就很简单的是

1172
00:36:50,000 --> 00:36:51,000
把网站迁移到

1173
00:36:51,000 --> 00:36:52,000
另外一个云服务器上对吧

1174
00:36:52,000 --> 00:36:55,000
那为什么就要

1175
00:36:55,000 --> 00:36:57,000
呃被逼着去

1176
00:36:57,000 --> 00:36:58,000
折腾这么多是吧

1177
00:36:59,000 --> 00:37:00,000
对

1178
00:37:00,000 --> 00:37:01,000
其实也有其他的选项

1179
00:37:01,000 --> 00:37:03,000
只是说你没有选择那些更简单

1180
00:37:03,000 --> 00:37:05,000
有那个什么各种

1181
00:37:05,000 --> 00:37:05,000
什么

1182
00:37:05,000 --> 00:37:06,000
呃什么

1183
00:37:06,000 --> 00:37:08,000
呃不叫云服务器

1184
00:37:08,000 --> 00:37:09,000
叫什么主机空间嘛对吧

1185
00:37:09,000 --> 00:37:10,000
那就比较简单

1186
00:37:11,000 --> 00:37:11,000
还有各种什么

1187
00:37:11,000 --> 00:37:12,000
PHP My 的命啊

1188
00:37:12,000 --> 00:37:14,000
那他都给你搞定了对吧

1189
00:37:14,000 --> 00:37:15,000
你直接配置复制过去就好了

1190
00:37:15,000 --> 00:37:16,000
也可以啊

1191
00:37:16,000 --> 00:37:18,000
但是你自己选择了一条

1192
00:37:18,000 --> 00:37:18,000
hardware

1193
00:37:18,000 --> 00:37:19,000
那你肯定要

1194
00:37:19,000 --> 00:37:21,000
默默你自己要想要

1195
00:37:21,000 --> 00:37:22,000
要有一个心理准备嘛

1196
00:37:23,000 --> 00:37:25,000
然后他里面其实提到一些

1197
00:37:25,000 --> 00:37:26,000
我觉得一个核心的问题就是

1198
00:37:26,000 --> 00:37:28,000
为什么这个

1199
00:37:29,000 --> 00:37:30,000
就是他说为什么现在的服务器

1200
00:37:30,000 --> 00:37:32,000
还普遍使用需要命令行的操作方式

1201
00:37:32,000 --> 00:37:33,000
而不是像 Windows 那样

1202
00:37:33,000 --> 00:37:36,000
远程都能够直接用图形界面操作

1203
00:37:37,000 --> 00:37:38,000
呃

1204
00:37:39,000 --> 00:37:40,000
对当然是有原因的了

1205
00:37:40,000 --> 00:37:41,000
这个一个

1206
00:37:41,000 --> 00:37:42,000
竟无缘以对

1207
00:37:42,000 --> 00:37:43,000
哈哈

1208
00:37:44,000 --> 00:37:45,000
我觉得要从我的

1209
00:37:45,000 --> 00:37:46,000
我先说我的理解

1210
00:37:46,000 --> 00:37:48,000
我觉得就是因为命令行

1211
00:37:48,000 --> 00:37:49,000
是个 universal 的东西

1212
00:37:49,000 --> 00:37:51,000
就是呃

1213
00:37:52,000 --> 00:37:54,000
他是像 Rail 最喜欢说的那句话一样

1214
00:37:54,000 --> 00:37:58,000
他是一个最大公约数

1215
00:37:59,000 --> 00:38:00,000
是这么说的

1216
00:38:00,000 --> 00:38:01,000
对最大公约数

1217
00:38:01,000 --> 00:38:01,000
没错

1218
00:38:01,000 --> 00:38:04,000
就是你在一台路由器上

1219
00:38:04,000 --> 00:38:04,000
不对错了

1220
00:38:04,000 --> 00:38:06,000
最小公倍数

1221
00:38:06,000 --> 00:38:07,000
不不不最大公约数

1222
00:38:07,000 --> 00:38:08,000
npretty 数了

1223
00:38:09,000 --> 00:38:10,000
ok 好吧

1224
00:38:10,000 --> 00:38:11,000
任何一个机器

1225
00:38:11,000 --> 00:38:14,000
就任何一个数都有的那个部分嘛

1226
00:38:14,000 --> 00:38:16,000
所以当然是最大公约数

1227
00:38:16,000 --> 00:38:17,000
没有啊

1228
00:38:17,000 --> 00:38:18,000
Windows 没有 shell 啊

1229
00:38:19,000 --> 00:38:20,000
Windows Server 没有 shell

1230
00:38:20,000 --> 00:38:21,000
就是有的

1231
00:38:21,000 --> 00:38:23,000
power shell 算 shell

1232
00:38:23,000 --> 00:38:24,000
就我的意思是

1233
00:38:24,000 --> 00:38:27,000
命令行这个东西基本上是可以确表

1234
00:38:27,000 --> 00:38:30,000
确定它在任何一个环境下都应该有的

1235
00:38:30,000 --> 00:38:31,000
你可能比如说什么

1236
00:38:33,000 --> 00:38:34,000
嗯

1237
00:38:34,000 --> 00:38:35,000
MacOS 9

1238
00:38:35,000 --> 00:38:37,000
或者是 BOS

1239
00:38:38,000 --> 00:38:38,000
可能没有命令行

1240
00:38:38,000 --> 00:38:39,000
但是

1241
00:38:39,000 --> 00:38:42,000
其他的基本上每一个操作性都会有命令行

1242
00:38:42,000 --> 00:38:43,000
而且呢

1243
00:38:43,000 --> 00:38:43,000
对

1244
00:38:43,000 --> 00:38:44,000
呃

1245
00:38:44,000 --> 00:38:46,000
比如说你要给一个

1246
00:38:47,000 --> 00:38:48,000
呃

1247
00:38:48,000 --> 00:38:49,000
单片机变成

1248
00:38:49,000 --> 00:38:51,000
单片机上是不可能抛起来

1249
00:38:51,000 --> 00:38:52,000
图形界面的对吧

1250
00:38:53,000 --> 00:38:53,000
另一方面

1251
00:38:53,000 --> 00:38:54,000
你要给一个

1252
00:38:54,000 --> 00:38:55,000
比如说

1253
00:38:55,000 --> 00:38:56,000
你要去调一些路由器上的东西

1254
00:38:56,000 --> 00:38:58,000
路由器也不可能给你一个图形界面

1255
00:38:58,000 --> 00:38:59,000
当然它有可能装一个 web 服务器

1256
00:38:59,000 --> 00:39:01,000
但最多也就是那样了

1257
00:39:02,000 --> 00:39:03,000
呃

1258
00:39:03,000 --> 00:39:04,000
所以

1259
00:39:04,000 --> 00:39:06,000
为什么说

1260
00:39:06,000 --> 00:39:06,000
呃

1261
00:39:06,000 --> 00:39:10,000
Linux 普遍还要使用 shell 命令行的操作方式

1262
00:39:10,000 --> 00:39:11,000
我觉得一方面就是这个

1263
00:39:11,000 --> 00:39:12,000
而另一方面呢

1264
00:39:12,000 --> 00:39:13,000
则是

1265
00:39:13,000 --> 00:39:16,000
使用图形界面是一种非常

1266
00:39:17,000 --> 00:39:18,000
效率低下的方式

1267
00:39:18,000 --> 00:39:21,000
就是可能这位听众现在还没有感觉到

1268
00:39:21,000 --> 00:39:22,000
但是

1269
00:39:22,000 --> 00:39:23,000
呃

1270
00:39:23,000 --> 00:39:24,000
如果用

1271
00:39:24,000 --> 00:39:25,000
呃

1272
00:39:25,000 --> 00:39:29,000
借用这个通信领域的一个概念来说的话

1273
00:39:29,000 --> 00:39:30,000
就是伤非常的

1274
00:39:32,000 --> 00:39:33,000
低

1275
00:39:33,000 --> 00:39:34,000
信息伤非常的低

1276
00:39:35,000 --> 00:39:36,000
你你传过来一个窗口好吧

1277
00:39:36,000 --> 00:39:38,000
这个窗口可能有

1278
00:39:38,000 --> 00:39:41,000
99%的像素是对于对于我来说没有任何意义的

1279
00:39:41,000 --> 00:39:43,000
我唯一需要的就是那个

1280
00:39:43,000 --> 00:39:44,000
呃

1281
00:39:44,000 --> 00:39:45,000
组成

1282
00:39:45,000 --> 00:39:47,000
输入命令行密码的窗口

1283
00:39:47,000 --> 00:39:49,000
的那个 text

1284
00:39:49,000 --> 00:39:50,000
text input

1285
00:39:50,000 --> 00:39:51,000
仅此而已

1286
00:39:51,000 --> 00:39:51,000
对吧

1287
00:39:51,000 --> 00:39:54,000
那为什么不就直接告诉我说我应该输入命令行密码呢

1288
00:39:54,000 --> 00:39:55,000
呃

1289
00:39:55,000 --> 00:39:56,000
用户命令行密码呢

1290
00:39:57,000 --> 00:39:58,000
呃

1291
00:39:58,000 --> 00:39:59,000
而且

1292
00:39:59,000 --> 00:40:03,000
如果你每一台计算机都登陆过去用图形界面操作的话

1293
00:40:03,000 --> 00:40:04,000
呃

1294
00:40:04,000 --> 00:40:08,000
一方面每一台计算机的图形界面将会有细微的不同

1295
00:40:08,000 --> 00:40:09,000
不管是设计上的还是

1296
00:40:10,000 --> 00:40:10,000
呃

1297
00:40:10,000 --> 00:40:12,000
操作系统本身上的不同

1298
00:40:12,000 --> 00:40:12,000
呃

1299
00:40:12,000 --> 00:40:14,000
这个会给你带来一个影响

1300
00:40:14,000 --> 00:40:19,000
就是你会每登陆到一个新服务器上就被迫去熟悉这个服务器的一些

1301
00:40:19,000 --> 00:40:19,000
特性

1302
00:40:20,000 --> 00:40:21,000
比如说图标摆在哪儿

1303
00:40:21,000 --> 00:40:22,000
或者是

1304
00:40:22,000 --> 00:40:22,000
呃

1305
00:40:22,000 --> 00:40:25,000
字体渲染有一些不一样的地方

1306
00:40:25,000 --> 00:40:27,000
但是在命令行下面没有这个问题

1307
00:40:27,000 --> 00:40:27,000
对吧

1308
00:40:27,000 --> 00:40:30,000
你不管到哪里你用到的那个 shell

1309
00:40:31,000 --> 00:40:34,000
当然我们那些也讲过了什么 bash 之类的

1310
00:40:34,000 --> 00:40:36,000
但是他们大同小异

1311
00:40:36,000 --> 00:40:36,000
你只是要

1312
00:40:37,000 --> 00:40:38,000
呃

1313
00:40:38,000 --> 00:40:42,000
敲几乎一样的一些命令就可以完成一模一样的事情

1314
00:40:43,000 --> 00:40:46,000
这个效率其实是要比图形界面高很多的

1315
00:40:46,000 --> 00:40:47,000
对

1316
00:40:47,000 --> 00:40:48,000
你刚才讲了一点技术上的原因

1317
00:40:48,000 --> 00:40:48,000
啊

1318
00:40:48,000 --> 00:40:51,000
那我讲几个另外一个维度的事情吧

1319
00:40:51,000 --> 00:40:53,000
就是说首先你说

1320
00:40:53,000 --> 00:40:54,000
呃

1321
00:40:54,000 --> 00:40:57,000
如果那个 linux 服务器用图形界面操作可不可以

1322
00:40:57,000 --> 00:40:57,000
我觉得

1323
00:40:58,000 --> 00:40:59,000
技术上是可以可行的呀

1324
00:40:59,000 --> 00:41:01,000
但是有一个问题在于

1325
00:41:02,000 --> 00:41:02,000
你继续看一下

1326
00:41:03,000 --> 00:41:05,000
现在的 linux 发行版

1327
00:41:06,000 --> 00:41:09,000
甚至都没有几个主流发行版是用的同一个图形界面

1328
00:41:09,000 --> 00:41:12,000
这个是一个泛指啊

1329
00:41:12,000 --> 00:41:13,000
就包括很多东西

1330
00:41:13,000 --> 00:41:13,000
比如说

1331
00:41:14,000 --> 00:41:16,000
就像比如说五帮图他的那个图形系统

1332
00:41:16,000 --> 00:41:18,000
他底层替代那些

1333
00:41:18,000 --> 00:41:20,000
最开始的时候我们上次讲过是这个

1334
00:41:20,000 --> 00:41:21,000
呃

1335
00:41:21,000 --> 00:41:24,000
unix 上面的图形系统是一个 x 11 的这一套东西

1336
00:41:25,000 --> 00:41:26,000
但是那个很古老

1337
00:41:26,000 --> 00:41:27,000
现在基本上我们在

1338
00:41:27,000 --> 00:41:29,000
从 80 年代开始吧

1339
00:41:30,000 --> 00:41:30,000
对对

1340
00:41:30,000 --> 00:41:31,000
然后现在其实

1341
00:41:31,000 --> 00:41:33,000
就各家有各家的玩法

1342
00:41:33,000 --> 00:41:35,000
比如说 canonical

1343
00:41:35,000 --> 00:41:36,000
就是五帮图的东家

1344
00:41:36,000 --> 00:41:37,000
他写了一个叫做 mir 的东西

1345
00:41:37,000 --> 00:41:38,000
去替代这一套

1346
00:41:38,000 --> 00:41:40,000
但没有别家才用 mir 啊

1347
00:41:40,000 --> 00:41:41,000
对啊

1348
00:41:41,000 --> 00:41:41,000
对

1349
00:41:41,000 --> 00:41:43,000
叫 mir 那个那个子系统

1350
00:41:43,000 --> 00:41:47,000
这个就连这种底层的东西都没有办法统一

1351
00:41:47,000 --> 00:41:49,000
更不用说上面的一些什么桌面环境呢

1352
00:41:49,000 --> 00:41:50,000
比如说有什么

1353
00:41:50,000 --> 00:41:51,000
gnome 啊

1354
00:41:51,000 --> 00:41:52,000
有 kde 啊

1355
00:41:52,000 --> 00:41:54,000
还有各种各种那种小的什么

1356
00:41:54,000 --> 00:41:56,000
lxt 啊

1357
00:41:56,000 --> 00:41:57,000
之前我们讲过的嘛

1358
00:41:57,000 --> 00:41:57,000
对

1359
00:41:57,000 --> 00:42:01,000
就是说在整个就是 unixnx 这个环境里面

1360
00:42:01,000 --> 00:42:04,000
图形界面这个事情从来就没有统一过

1361
00:42:04,000 --> 00:42:06,000
但反而是这个命令行这件事情

1362
00:42:06,000 --> 00:42:08,000
刚才你讲是一个 universal 的一个一个 interface

1363
00:42:08,000 --> 00:42:11,000
是一个相对来说比较统一的东西

1364
00:42:11,000 --> 00:42:11,000
对

1365
00:42:12,000 --> 00:42:13,000
对相对来说统一的

1366
00:42:13,000 --> 00:42:15,000
他可能大多小少在命令上面

1367
00:42:15,000 --> 00:42:17,000
但是就不用说是

1368
00:42:17,000 --> 00:42:18,000
大家对这个命令行

1369
00:42:18,000 --> 00:42:20,000
对这个 shell 的理解都不一样

1370
00:42:20,000 --> 00:42:22,000
起码大家的 shell 都是一个

1371
00:42:22,000 --> 00:42:24,000
sudo tty 的设备对吧

1372
00:42:25,000 --> 00:42:27,000
就大家这个还是有一个共同的

1373
00:42:27,000 --> 00:42:28,000
就这个是一个历史包袱

1374
00:42:28,000 --> 00:42:29,000
你可以怎么理解

1375
00:42:29,000 --> 00:42:30,000
或者说这是一个商业现实

1376
00:42:30,000 --> 00:42:31,000
就这样子

1377
00:42:31,000 --> 00:42:33,000
所以他不可能像 windows 那样

1378
00:42:33,000 --> 00:42:34,000
有一家商业公司

1379
00:42:34,000 --> 00:42:36,000
或者像 macOS 的那个 server 那样

1380
00:42:37,000 --> 00:42:38,000
他因为有是只有一家

1381
00:42:38,000 --> 00:42:39,000
商业公司在做这个事情

1382
00:42:39,000 --> 00:42:41,000
他可以把这个图形界面做得很漂亮

1383
00:42:41,000 --> 00:42:44,000
因为就是你真的比一下那个 macOS

1384
00:42:44,000 --> 00:42:46,000
那个 OS 10 的那个 server 其实做得也挺好的

1385
00:42:46,000 --> 00:42:48,000
也是通过图形化的方式来控制的

1386
00:42:48,000 --> 00:42:50,000
然后他的底层也是

1387
00:42:50,000 --> 00:42:51,000
就是一个 unix 的系统

1388
00:42:52,000 --> 00:42:53,000
基本上就可以达到我们

1389
00:42:53,000 --> 00:42:56,000
就起码达到他

1390
00:42:56,000 --> 00:42:58,000
polydairy 的理想的情况

1391
00:42:58,000 --> 00:42:59,000
就是底层还是 unix 系统

1392
00:42:59,000 --> 00:43:01,000
但是面上有一个很简单

1393
00:43:01,000 --> 00:43:04,000
和好用的图形系统去解决

1394
00:43:04,000 --> 00:43:05,000
可以远程登录去解决这个问题

1395
00:43:05,000 --> 00:43:08,000
我现在正在这么干对吧

1396
00:43:08,000 --> 00:43:10,000
但是有一个问题是照不开的

1397
00:43:10,000 --> 00:43:12,000
就是刚才你讲那个那个商的问题

1398
00:43:12,000 --> 00:43:14,000
图形界面能表达的东西

1399
00:43:14,000 --> 00:43:15,000
就是他毕竟

1400
00:43:16,000 --> 00:43:18,000
他的那个抽象的维度有限

1401
00:43:18,000 --> 00:43:19,000
他能表达到一些东西

1402
00:43:19,000 --> 00:43:21,000
其实是不是那么够用的

1403
00:43:22,000 --> 00:43:26,000
然后会导致有些比较复杂的软件的配置

1404
00:43:26,000 --> 00:43:29,000
如果你用图形化的方式来表达他的话

1405
00:43:29,000 --> 00:43:32,000
那个简直不可以接受的麻烦

1406
00:43:32,000 --> 00:43:34,000
或者是难以开发

1407
00:43:34,000 --> 00:43:34,000
难以实现

1408
00:43:34,000 --> 00:43:35,000
难以维护

1409
00:43:35,000 --> 00:43:36,000
难以理解

1410
00:43:36,000 --> 00:43:38,000
有时候反而你用一个文本界面

1411
00:43:38,000 --> 00:43:38,000
开下手册

1412
00:43:38,000 --> 00:43:40,000
是更加简单的一个方式

1413
00:43:41,000 --> 00:43:42,000
当然同样的来说

1414
00:43:42,000 --> 00:43:44,000
就对于这些不同各种各样的软件来讲

1415
00:43:44,000 --> 00:43:46,000
大部分我们现在用的 Linux 上面

1416
00:43:46,000 --> 00:43:48,000
这种开源的这种软件

1417
00:43:48,000 --> 00:43:49,000
他都不可能

1418
00:43:49,000 --> 00:43:52,000
由于前面那个图形系统四分五裂的原因

1419
00:43:52,000 --> 00:43:53,000
他不可能说基于那个来

1420
00:43:54,000 --> 00:43:58,000
去支持各个主流操作系统的这些图形系统

1421
00:43:58,000 --> 00:43:59,000
因为你知道

1422
00:43:59,000 --> 00:44:01,000
很多我们用的这些 Linux 上面的软件

1423
00:44:01,000 --> 00:44:04,000
他在开发最早版本的时候

1424
00:44:04,000 --> 00:44:06,000
这些后来图形界面都还没有诞生呢

1425
00:44:06,000 --> 00:44:06,000
对吧

1426
00:44:06,000 --> 00:44:08,000
他怎么可能为他提供支持呢

1427
00:44:09,000 --> 00:44:12,000
所以他一定是采用一种类似于

1428
00:44:12,000 --> 00:44:14,000
配置文件的方式去实现的

1429
00:44:14,000 --> 00:44:16,000
而配置文件一定是通过这种

1430
00:44:16,000 --> 00:44:17,000
迷你行的方式去

1431
00:44:17,000 --> 00:44:19,000
去加载去搞他的

1432
00:44:20,000 --> 00:44:21,000
然后再然后

1433
00:44:23,000 --> 00:44:24,000
就是这个自动化的一个过程了

1434
00:44:24,000 --> 00:44:26,000
就现在其实我们真的

1435
00:44:26,000 --> 00:44:28,000
就对于一样的大规模部署而言

1436
00:44:29,000 --> 00:44:32,000
手工去操作某一个

1437
00:44:32,000 --> 00:44:34,000
这个 Linux 服务器

1438
00:44:34,000 --> 00:44:35,000
然后去手工安装软件

1439
00:44:36,000 --> 00:44:37,000
基本上已经成为历史了

1440
00:44:37,000 --> 00:44:39,000
现在都是做基于这个

1441
00:44:39,000 --> 00:44:40,000
这种虚拟机

1442
00:44:40,000 --> 00:44:43,000
基于这种镜像的方式去部署一个基础环境

1443
00:44:43,000 --> 00:44:46,000
然后之后再用类似于像 Chef

1444
00:44:46,000 --> 00:44:47,000
像用那个

1445
00:44:47,000 --> 00:44:49,000
还有一个 Chef 之前的那个教授

1446
00:44:50,000 --> 00:44:50,000
Puppet

1447
00:44:50,000 --> 00:44:51,000
后来的

1448
00:44:52,000 --> 00:44:52,000
对

1449
00:44:52,000 --> 00:44:53,000
叫什么

1450
00:44:53,000 --> 00:44:53,000
Puppet

1451
00:44:53,000 --> 00:44:54,000
对

1452
00:44:54,000 --> 00:44:56,000
那个是早一代的运为

1453
00:44:56,000 --> 00:44:57,000
自动化的一些工具

1454
00:44:57,000 --> 00:44:58,000
像后来

1455
00:44:58,000 --> 00:45:00,000
现在我们在流行这个 container

1456
00:45:00,000 --> 00:45:01,000
之前我们也

1457
00:45:01,000 --> 00:45:02,000
几期节目聊过

1458
00:45:03,000 --> 00:45:04,000
是用 container 的方式

1459
00:45:04,000 --> 00:45:06,000
就一定它都是自动化的

1460
00:45:06,000 --> 00:45:08,000
自动化的话就更不需要有图形界面

1461
00:45:08,000 --> 00:45:09,000
去增加这个东西的复杂性了

1462
00:45:09,000 --> 00:45:10,000
比如说你点鼠标

1463
00:45:10,000 --> 00:45:12,000
先点哪个键后点哪个键

1464
00:45:12,000 --> 00:45:13,000
你这东西怎么自动化

1465
00:45:13,000 --> 00:45:13,000
对

1466
00:45:13,000 --> 00:45:15,000
你可以用什么红

1467
00:45:16,000 --> 00:45:17,000
Macro Recorder 这种东西

1468
00:45:17,000 --> 00:45:18,000
录制

1469
00:45:18,000 --> 00:45:21,000
但是这是实在是太淡的

1470
00:45:22,000 --> 00:45:24,000
所以就不管是说从历史严格也好

1471
00:45:24,000 --> 00:45:25,000
技术层面也好

1472
00:45:25,000 --> 00:45:28,000
还是说现在的实际的商业的

1473
00:45:28,000 --> 00:45:29,000
就实际的

1474
00:45:29,000 --> 00:45:30,000
大概都是超出来讲

1475
00:45:31,000 --> 00:45:33,000
Linux Server 都不可能

1476
00:45:33,000 --> 00:45:36,000
用图形化的方式去管理和配置

1477
00:45:37,000 --> 00:45:37,000
甚至我们可以说

1478
00:45:37,000 --> 00:45:39,000
在过去的 15 年里面

1479
00:45:39,000 --> 00:45:41,000
软件界渐渐走出了这个

1480
00:45:41,000 --> 00:45:42,000
图形界面的迷思

1481
00:45:42,000 --> 00:45:48,000
走向了命令行 Retro 的复兴道路

1482
00:45:48,000 --> 00:45:51,000
基本上现在任何一个新推出的工具

1483
00:45:51,000 --> 00:45:54,000
或者是比较有用

1484
00:45:54,000 --> 00:45:55,000
实用的开发者

1485
00:45:55,000 --> 00:45:56,000
面向开发者的工具

1486
00:45:56,000 --> 00:46:00,000
基本上都会只给你一个命令行工具

1487
00:46:00,000 --> 00:46:03,000
然后在本档上也只会教你说

1488
00:46:03,000 --> 00:46:03,000
这个东西

1489
00:46:04,000 --> 00:46:05,000
安装很简单

1490
00:46:05,000 --> 00:46:07,000
什么 Apps get install

1491
00:46:07,000 --> 00:46:10,000
然后或者不入 install

1492
00:46:10,000 --> 00:46:12,000
然后具体的使用起来

1493
00:46:12,000 --> 00:46:13,000
也都是什么

1494
00:46:13,000 --> 00:46:14,000
比如说 Docker

1495
00:46:14,000 --> 00:46:15,000
Docker 的命令

1496
00:46:15,000 --> 00:46:17,000
Docker 基本上不可能给你一个

1497
00:46:17,000 --> 00:46:18,000
开发出一个图形界面来的

1498
00:46:19,000 --> 00:46:20,000
对

1499
00:46:20,000 --> 00:46:22,000
其实说回他这个情况

1500
00:46:22,000 --> 00:46:25,000
如果说我们刚才讲的现状是这样

1501
00:46:25,000 --> 00:46:26,000
以后也不大可能改了

1502
00:46:26,000 --> 00:46:27,000
他这种小白又会怎么办

1503
00:46:27,000 --> 00:46:28,000
刚才我讲两种出路

1504
00:46:28,000 --> 00:46:29,000
第一个就是说

1505
00:46:30,000 --> 00:46:31,000
你学

1506
00:46:31,000 --> 00:46:31,000
对

1507
00:46:31,000 --> 00:46:32,000
你真的花了时间学

1508
00:46:32,000 --> 00:46:33,000
比如说他后面提到说

1509
00:46:33,000 --> 00:46:35,000
他明显是装了一个 Massacre

1510
00:46:35,000 --> 00:46:37,000
因为跑网站应该是一个

1511
00:46:37,000 --> 00:46:38,000
类似于这种 Wordpress 的

1512
00:46:38,000 --> 00:46:39,000
一个类型的应用保险

1513
00:46:40,000 --> 00:46:41,000
他可能装了一个 Massacre

1514
00:46:41,000 --> 00:46:44,000
他竟然在 2015 年

1515
00:46:44,000 --> 00:46:47,000
自己把安装到伏地上解压

1516
00:46:47,000 --> 00:46:49,000
然后在那个了

1517
00:46:49,000 --> 00:46:51,000
其实你明显就是用错了

1518
00:46:51,000 --> 00:46:53,000
因为现在大部分主流的发行板

1519
00:46:53,000 --> 00:46:55,000
都自带这种 Massacre 的

1520
00:46:55,000 --> 00:46:58,000
这其实还是一个

1521
00:46:58,000 --> 00:46:59,000
我刚才说的 unlearn 的问题

1522
00:46:59,000 --> 00:47:01,000
因为在 Windows 上面没有这个东西

1523
00:47:01,000 --> 00:47:01,000
对吧

1524
00:47:03,000 --> 00:47:03,000
对

1525
00:47:03,000 --> 00:47:03,000
没有包管

1526
00:47:03,000 --> 00:47:05,000
所以我习惯的时候

1527
00:47:05,000 --> 00:47:06,000
我应该从什么地方

1528
00:47:06,000 --> 00:47:07,000
当你一个

1529
00:47:07,000 --> 00:47:08,000
下载一个什么的

1530
00:47:08,000 --> 00:47:10,000
然后装 Massacre 服务器

1531
00:47:10,000 --> 00:47:11,000
那不是当你用制

1532
00:47:11,000 --> 00:47:14,000
他确定是去应用市场

1533
00:47:14,000 --> 00:47:14,000
装东西的时候

1534
00:47:14,000 --> 00:47:16,000
你会自然而然产生这样的疑惑

1535
00:47:16,000 --> 00:47:17,000
这个安装包从哪来

1536
00:47:17,000 --> 00:47:18,000
对吧

1537
00:47:19,000 --> 00:47:20,000
对

1538
00:47:20,000 --> 00:47:22,000
所以其实他就完全搞错了

1539
00:47:23,000 --> 00:47:24,000
然后其实这个事情

1540
00:47:24,000 --> 00:47:25,000
真的是可以很简单

1541
00:47:25,000 --> 00:47:27,000
几行命令都搞

1542
00:47:27,000 --> 00:47:27,000
就搞定

1543
00:47:27,000 --> 00:47:29,000
就是从我们看来

1544
00:47:29,000 --> 00:47:30,000
两三行命令就可以搞定

1545
00:47:30,000 --> 00:47:32,000
你中间不用做任何别的

1546
00:47:32,000 --> 00:47:33,000
麻烦的事情

1547
00:47:33,000 --> 00:47:35,000
而且配置都自动给你配置好了

1548
00:47:35,000 --> 00:47:37,000
但是因为你不知道

1549
00:47:37,000 --> 00:47:39,000
什么是正确的方式

1550
00:47:39,000 --> 00:47:41,000
所以你就只好选择一个错误的方式

1551
00:47:41,000 --> 00:47:42,000
一路采坑

1552
00:47:42,000 --> 00:47:43,000
反过来说

1553
00:47:44,000 --> 00:47:46,000
我们前面那一期

1554
00:47:46,000 --> 00:47:47,000
讲包管理的时候

1555
00:47:47,000 --> 00:47:50,000
这位听众明显没有人听听

1556
00:47:53,000 --> 00:47:54,000
他都说了

1557
00:47:54,000 --> 00:47:56,000
边听一边听

1558
00:47:56,000 --> 00:47:57,000
也不耽误手头的事

1559
00:47:57,000 --> 00:47:59,000
结果听是听了没记住

1560
00:48:01,000 --> 00:48:02,000
Anyway

1561
00:48:02,000 --> 00:48:03,000
就是说其实这种情况

1562
00:48:03,000 --> 00:48:03,000
就是说

1563
00:48:03,000 --> 00:48:04,000
其实完全可以

1564
00:48:04,000 --> 00:48:06,000
不用绕过他这些

1565
00:48:06,000 --> 00:48:07,000
我们连自己

1566
00:48:07,000 --> 00:48:09,000
我们这种对这个过程

1567
00:48:09,000 --> 00:48:10,000
很了解的人

1568
00:48:10,000 --> 00:48:12,000
都不会说自己去下载一个 MICECO 的

1569
00:48:12,000 --> 00:48:13,000
那个安装包

1570
00:48:13,000 --> 00:48:15,000
再传到福西斯上手动去

1571
00:48:15,000 --> 00:48:16,000
变异再配置

1572
00:48:16,000 --> 00:48:17,000
一定是包管理

1573
00:48:17,000 --> 00:48:18,000
20 年前做这样的事情

1574
00:48:18,000 --> 00:48:19,000
现在不可能

1575
00:48:20,000 --> 00:48:21,000
对

1576
00:48:21,000 --> 00:48:22,000
还有一个出路

1577
00:48:22,000 --> 00:48:24,000
就现在也有一些

1578
00:48:24,000 --> 00:48:25,000
厂商在尝试

1579
00:48:25,000 --> 00:48:26,000
就是说他现在我们

1580
00:48:26,000 --> 00:48:27,000
就那个叫

1581
00:48:27,000 --> 00:48:28,000
我们不是什么

1582
00:48:28,000 --> 00:48:31,000
叫做 XXX as a service

1583
00:48:31,000 --> 00:48:31,000
对吧

1584
00:48:31,000 --> 00:48:33,000
就是什么作为一个服务

1585
00:48:33,000 --> 00:48:34,000
现在他的成绩上

1586
00:48:34,000 --> 00:48:36,000
就叫做 Infrastructure as a service

1587
00:48:36,000 --> 00:48:37,000
就是技术设施作为一个服务

1588
00:48:37,000 --> 00:48:39,000
你可以买一个虚拟的服务

1589
00:48:39,000 --> 00:48:40,000
一个所谓的云服务器

1590
00:48:40,000 --> 00:48:41,000
一个虚拟机

1591
00:48:42,000 --> 00:48:43,000
就是说他给你一个

1592
00:48:43,000 --> 00:48:45,000
就把过去把这个硬件事情

1593
00:48:45,000 --> 00:48:46,000
把它变成虚拟的一个环境

1594
00:48:46,000 --> 00:48:48,000
但是你还是要去维护中间的事情

1595
00:48:48,000 --> 00:48:49,000
但是对于这种

1596
00:48:49,000 --> 00:48:51,000
很多应用或者很多应用

1597
00:48:51,000 --> 00:48:53,000
这个东西并不是最合适的选择

1598
00:48:53,000 --> 00:48:55,000
你可能需要选择一个叫做

1599
00:48:55,000 --> 00:48:56,000
我们叫做

1600
00:48:56,000 --> 00:48:57,000
Path

1601
00:48:57,000 --> 00:48:58,000
就是 Platform as a service

1602
00:48:58,000 --> 00:48:59,000
这 Platform 什么意思呢

1603
00:48:59,000 --> 00:49:00,000
就是说

1604
00:49:00,000 --> 00:49:02,000
这个 Platform 可以把底层的

1605
00:49:02,000 --> 00:49:02,000
刚才讲的那些

1606
00:49:03,000 --> 00:49:04,000
底层是有什么

1607
00:49:04,000 --> 00:49:06,000
什么多少个虚拟机构成的

1608
00:49:07,000 --> 00:49:08,000
他们虚拟机上跑什么软件

1609
00:49:08,000 --> 00:49:10,000
这些都可以藏起来

1610
00:49:10,000 --> 00:49:11,000
你不用管你这种上面跑

1611
00:49:11,000 --> 00:49:12,000
上层的一个应用

1612
00:49:12,000 --> 00:49:13,000
比如说你要跑一个博客对吧

1613
00:49:14,000 --> 00:49:14,000
你这种知道

1614
00:49:14,000 --> 00:49:18,000
怎么在一个 Path 平台上去安装

1615
00:49:18,000 --> 00:49:19,000
或者是运行一个

1616
00:49:19,000 --> 00:49:20,000
Wordpress 的用就好了

1617
00:49:20,000 --> 00:49:21,000
这个东西的

1618
00:49:22,000 --> 00:49:24,000
难度是远远低于在

1619
00:49:24,000 --> 00:49:25,000
iS 上你自己

1620
00:49:25,000 --> 00:49:27,000
从头到尾装一个 Maslico

1621
00:49:27,000 --> 00:49:30,000
装一个 NGX 或者是 Apache

1622
00:49:30,000 --> 00:49:32,000
再装一个 PHP 的解析器

1623
00:49:32,000 --> 00:49:33,000
然后再配置各种各样的

1624
00:49:33,000 --> 00:49:34,000
要简单的多的

1625
00:49:34,000 --> 00:49:35,000
但还有一个更高级的

1626
00:49:35,000 --> 00:49:37,000
就是我们叫 SaaS

1627
00:49:37,000 --> 00:49:39,000
就是你的 Software as a Service 对吧

1628
00:49:39,000 --> 00:49:41,000
之前我们像国外那个

1629
00:49:42,000 --> 00:49:43,000
也当年之前赞助过

1630
00:49:43,000 --> 00:49:44,000
我们另外一档节目的

1631
00:49:44,000 --> 00:49:46,000
那个平台叫 SquareSpace

1632
00:49:47,000 --> 00:49:48,000
他就把这个东西做成了一个

1633
00:49:48,000 --> 00:49:49,000
这个软件做一个服务

1634
00:49:49,000 --> 00:49:52,000
就是你不用管这个网站是怎么

1635
00:49:52,000 --> 00:49:53,000
怎么

1636
00:49:53,000 --> 00:49:54,000
你不用管这个网站怎么

1637
00:49:54,000 --> 00:49:56,000
这个软件怎么安装的

1638
00:49:56,000 --> 00:49:57,000
甚至你都不管怎么运行的

1639
00:49:57,000 --> 00:49:58,000
你只要交钱

1640
00:49:58,000 --> 00:50:01,000
每个月出几十块钱

1641
00:50:01,000 --> 00:50:02,000
他就给你一个账号

1642
00:50:02,000 --> 00:50:02,000
你登这个账号

1643
00:50:02,000 --> 00:50:05,000
你就可以用一个很傻瓜的话的方式

1644
00:50:05,000 --> 00:50:06,000
去选择一个模板

1645
00:50:06,000 --> 00:50:08,000
然后填充你内容就可以了

1646
00:50:08,000 --> 00:50:09,000
你这甚至都不需要知道

1647
00:50:09,000 --> 00:50:10,000
他后面跑了什么软件

1648
00:50:10,000 --> 00:50:10,000
对吧

1649
00:50:10,000 --> 00:50:12,000
就是说在不同的层级上

1650
00:50:12,000 --> 00:50:13,000
有不同的解决方案

1651
00:50:13,000 --> 00:50:16,000
如果说你的这个能力

1652
00:50:16,000 --> 00:50:17,000
或者说你对这个支持储备

1653
00:50:17,000 --> 00:50:19,000
不足以在 AIS

1654
00:50:19,000 --> 00:50:20,000
这个最底层的平台上去做的话

1655
00:50:20,000 --> 00:50:21,000
你可以往上走

1656
00:50:21,000 --> 00:50:22,000
对吧

1657
00:50:22,000 --> 00:50:24,000
但是说国内有没有这种

1658
00:50:25,000 --> 00:50:26,000
很好的这种 PaaS

1659
00:50:26,000 --> 00:50:28,000
甚至是在 SaaS 的这种平台

1660
00:50:28,000 --> 00:50:30,000
这个是要代考的

1661
00:50:30,000 --> 00:50:30,000
但是

1662
00:50:31,000 --> 00:50:32,000
起码在国外

1663
00:50:32,000 --> 00:50:34,000
我们就从这个逻辑来讲

1664
00:50:34,000 --> 00:50:36,000
有很多这种很成熟的选项

1665
00:50:36,000 --> 00:50:36,000
是可以用的

1666
00:50:36,000 --> 00:50:38,000
就是说国内可能现在还没有

1667
00:50:39,000 --> 00:50:39,000
普及到那一步

1668
00:50:40,000 --> 00:50:42,000
因为 AIS 是一个相对来说

1669
00:50:42,000 --> 00:50:44,000
比较成熟的一个

1670
00:50:44,000 --> 00:50:46,000
在技术上大家是能够理解的

1671
00:50:46,000 --> 00:50:48,000
PaaS 和 SaaS 的话

1672
00:50:48,000 --> 00:50:50,000
都有不可避免的一定程度的

1673
00:50:50,000 --> 00:50:52,000
叫做 vendor locking

1674
00:50:52,000 --> 00:50:54,000
就是叫供应商锁定

1675
00:50:54,000 --> 00:50:55,000
就你但你用了这个之后

1676
00:50:55,000 --> 00:50:57,000
你就没法再迁移到别的地方了

1677
00:50:57,000 --> 00:50:59,000
因为你用了他这个 software

1678
00:50:59,000 --> 00:51:00,000
就他这个软件

1679
00:51:00,000 --> 00:51:01,000
要是 SaaS 的话

1680
00:51:01,000 --> 00:51:02,000
别家跟他不一样

1681
00:51:02,000 --> 00:51:03,000
你要换一家的时候

1682
00:51:03,000 --> 00:51:04,000
你怎么办

1683
00:51:04,000 --> 00:51:04,000
对吧

1684
00:51:04,000 --> 00:51:04,000
就是

1685
00:51:04,000 --> 00:51:05,000
所以

1686
00:51:05,000 --> 00:51:06,000
你享受很多

1687
00:51:06,000 --> 00:51:09,000
你所拥有的自由就越少

1688
00:51:09,000 --> 00:51:10,000
就你要做的事情越

1689
00:51:10,000 --> 00:51:13,000
你要做的事情越少越简单

1690
00:51:13,000 --> 00:51:14,000
当然是可能你从

1691
00:51:14,000 --> 00:51:15,000
意用性的角度是更好的

1692
00:51:15,000 --> 00:51:17,000
但是你同时你的灵活性

1693
00:51:17,000 --> 00:51:18,000
也就越差

1694
00:51:18,000 --> 00:51:18,000
你能够

1695
00:51:19,000 --> 00:51:22,000
迁移到别的地方的这种成本就越高

1696
00:51:22,000 --> 00:51:23,000
所以这个东西

1697
00:51:23,000 --> 00:51:24,000
它是在不同的维度上

1698
00:51:24,000 --> 00:51:25,000
有各有取舍的

1699
00:51:25,000 --> 00:51:26,000
所以你自己要想清楚

1700
00:51:27,000 --> 00:51:28,000
你是愿意花时间

1701
00:51:28,000 --> 00:51:30,000
花时间去学这个呢

1702
00:51:30,000 --> 00:51:31,000
还是说愿意

1703
00:51:32,000 --> 00:51:33,000
就反正我要求也不高

1704
00:51:33,000 --> 00:51:34,000
对吧

1705
00:51:34,000 --> 00:51:35,000
我就跑一个很简单的用

1706
00:51:35,000 --> 00:51:38,000
用一个 SaaS 或者是 pass 就好了

1707
00:51:38,000 --> 00:51:39,000
所以

1708
00:51:41,000 --> 00:51:43,000
这件事情就没有那么简单

1709
00:51:43,000 --> 00:51:45,000
包括后面他说那个微信搭行

1710
00:51:45,000 --> 00:51:46,000
的原因其实很简单

1711
00:51:46,000 --> 00:51:47,000
如果你把微信

1712
00:51:47,000 --> 00:51:48,000
视作一个软件的话

1713
00:51:48,000 --> 00:51:49,000
它就是一个 SaaS

1714
00:51:49,000 --> 00:51:49,000
对吧

1715
00:51:49,000 --> 00:51:50,000
公众账号

1716
00:51:50,000 --> 00:51:52,000
公众号不就是这么一个 SaaS 吗

1717
00:51:52,000 --> 00:51:52,000
过去

1718
00:51:52,000 --> 00:51:54,000
你要开发一整套的技术跑

1719
00:51:54,000 --> 00:51:56,000
在这些虚拟机上

1720
00:51:56,000 --> 00:51:58,000
你能完成现在公众号点击下

1721
00:51:58,000 --> 00:51:59,000
能实现的东西

1722
00:51:59,000 --> 00:52:00,000
但是你也知道了

1723
00:52:00,000 --> 00:52:01,000
离开公众号

1724
00:52:01,000 --> 00:52:02,000
离开微信

1725
00:52:02,000 --> 00:52:03,000
你还有什么呢

1726
00:52:03,000 --> 00:52:03,000
对

1727
00:52:03,000 --> 00:52:05,000
其实这位听众说

1728
00:52:05,000 --> 00:52:08,000
在一个没有任何变成技术的人

1729
00:52:08,000 --> 00:52:09,000
想在 web 上做一个

1730
00:52:09,000 --> 00:52:10,000
类似公众号的东西

1731
00:52:10,000 --> 00:52:12,000
其实几乎是不可能的

1732
00:52:12,000 --> 00:52:13,000
我觉得其实是可能的

1733
00:52:13,000 --> 00:52:14,000
你无非是去申请一个

1734
00:52:14,000 --> 00:52:16,000
比如说免费 blog 空间

1735
00:52:16,000 --> 00:52:16,000
不就是

1736
00:52:17,000 --> 00:52:18,000
但是

1737
00:52:18,000 --> 00:52:19,000
但是他就要自己去搭

1738
00:52:19,000 --> 00:52:20,000
对

1739
00:52:20,000 --> 00:52:22,000
不免费 blog 空间不需要自己拿

1740
00:52:25,000 --> 00:52:25,000
就你去什么

1741
00:52:25,000 --> 00:52:27,000
牛博网申请一个 blog 账号

1742
00:52:27,000 --> 00:52:28,000
有还是有的

1743
00:52:28,000 --> 00:52:29,000
什么博客

1744
00:52:29,000 --> 00:52:30,000
我就说现在

1745
00:52:30,000 --> 00:52:31,000
现在在国

1746
00:52:31,000 --> 00:52:32,000
这监管很严的

1747
00:52:32,000 --> 00:52:33,000
现在我的点是说

1748
00:52:33,000 --> 00:52:35,000
为什么

1749
00:52:35,000 --> 00:52:36,000
公众号早期的时候

1750
00:52:36,000 --> 00:52:38,000
只有一个发布图文的功能

1751
00:52:38,000 --> 00:52:39,000
仍然吸引大量用户呢

1752
00:52:39,000 --> 00:52:41,000
是因为本来就有大量用户

1753
00:52:43,000 --> 00:52:44,000
微信是一个封闭的

1754
00:52:44,000 --> 00:52:45,000
有大量用户的平台

1755
00:52:45,000 --> 00:52:47,000
所以你开公众号

1756
00:52:47,000 --> 00:52:49,000
自然会有很多人来看

1757
00:52:49,000 --> 00:52:49,000
这是

1758
00:52:49,000 --> 00:52:51,000
这是这个平台独占性决定的

1759
00:52:51,000 --> 00:52:52,000
而不是因为

1760
00:52:52,000 --> 00:52:54,000
就是或者说他的

1761
00:52:54,000 --> 00:52:56,000
应用性只是一个次要的

1762
00:52:57,000 --> 00:52:57,000
因素

1763
00:52:57,000 --> 00:52:59,000
就我相信吉败他把

1764
00:53:00,000 --> 00:53:01,000
就是腾讯码

1765
00:53:01,000 --> 00:53:02,000
微信号

1766
00:53:02,000 --> 00:53:04,000
把微信公众号的开设的

1767
00:53:04,000 --> 00:53:06,000
门槛调的非常高

1768
00:53:06,000 --> 00:53:08,000
还是会有很多人

1769
00:53:08,000 --> 00:53:10,000
打破头去做一个

1770
00:53:10,000 --> 00:53:11,000
公众号

1771
00:53:11,000 --> 00:53:12,000
因为可以吸引大量用户

1772
00:53:13,000 --> 00:53:14,000
对

1773
00:53:14,000 --> 00:53:15,000
不过这点还是要说

1774
00:53:15,000 --> 00:53:17,000
差异举止跟技术无关的

1775
00:53:17,000 --> 00:53:18,000
微信这个没错

1776
00:53:18,000 --> 00:53:20,000
他确实把这个东西做得很简单

1777
00:53:20,000 --> 00:53:21,000
然后

1778
00:53:21,000 --> 00:53:22,000
你确实能有大量的用户

1779
00:53:22,000 --> 00:53:24,000
但是你要想清楚

1780
00:53:24,000 --> 00:53:25,000
这个用户可不是你的用户

1781
00:53:25,000 --> 00:53:27,000
他可是微信的用户

1782
00:53:28,000 --> 00:53:29,000
对

1783
00:53:29,000 --> 00:53:29,000
so

1784
00:53:30,000 --> 00:53:31,000
叫什么那句话怎么说

1785
00:53:31,000 --> 00:53:34,000
就是 choose your own drug

1786
00:53:34,000 --> 00:53:34,000
对吧

1787
00:53:34,000 --> 00:53:35,000
choose your own drug

1788
00:53:36,000 --> 00:53:38,000
选择你自己的药物

1789
00:53:38,000 --> 00:53:38,000
对

1790
00:53:38,000 --> 00:53:40,000
choose your own poison

1791
00:53:40,000 --> 00:53:41,000
选择你自己的

1792
00:53:43,000 --> 00:53:44,000
对

1793
00:53:44,000 --> 00:53:46,000
每一个选择都是有后果的

1794
00:53:46,000 --> 00:53:48,000
你觉得你只要思前想后

1795
00:53:48,000 --> 00:53:50,000
到底你能够接受什么

1796
00:53:50,000 --> 00:53:51,000
你能够投入什么

1797
00:53:52,000 --> 00:53:53,000
世界上的事情

1798
00:53:53,000 --> 00:53:54,000
并不都是那么美好的

1799
00:53:54,000 --> 00:53:55,000
对

1800
00:53:55,000 --> 00:53:57,000
反正我觉得这篇这封读者来信

1801
00:53:57,000 --> 00:53:59,000
之所以会引起我们非常热烈的讨论

1802
00:53:59,000 --> 00:54:01,000
也是因为这些听众非常的

1803
00:54:02,000 --> 00:54:03,000
诚实

1804
00:54:04,000 --> 00:54:06,000
就他没有去掩饰自己的

1805
00:54:07,000 --> 00:54:09,000
焦虑或者是

1806
00:54:11,000 --> 00:54:11,000
困惑

1807
00:54:11,000 --> 00:54:12,000
我觉得这点是很好

1808
00:54:14,000 --> 00:54:15,000
比如我觉得

1809
00:54:15,000 --> 00:54:16,000
最让我感受深刻的这句话

1810
00:54:16,000 --> 00:54:19,000
让人困惑和气愤的事情

1811
00:54:19,000 --> 00:54:21,000
为让人困惑和气愤的是

1812
00:54:21,000 --> 00:54:23,000
为什么我所有步骤都做对了

1813
00:54:23,000 --> 00:54:24,000
还是出各种问题

1814
00:54:26,000 --> 00:54:30,000
就好像小学的时候在

1815
00:54:30,000 --> 00:54:31,000
怪我了

1816
00:54:31,000 --> 00:54:32,000
什么

1817
00:54:33,000 --> 00:54:34,000
怪我了

1818
00:54:34,000 --> 00:54:34,000
对

1819
00:54:35,000 --> 00:54:37,000
就好像小学的时候

1820
00:54:37,000 --> 00:54:40,000
听着老师讲的什么东西

1821
00:54:40,000 --> 00:54:42,000
或者说在学英语的小学

1822
00:54:42,000 --> 00:54:43,000
一步一步来

1823
00:54:43,000 --> 00:54:43,000
最后还是做不对

1824
00:54:43,000 --> 00:54:44,000
为什么

1825
00:54:45,000 --> 00:54:45,000
这是为什么

1826
00:54:45,000 --> 00:54:46,000
这个世界为什么这样

1827
00:54:46,000 --> 00:54:48,000
对我不公平对吧

1828
00:54:49,000 --> 00:54:50,000
对

1829
00:54:51,000 --> 00:54:53,000
其实就只说明一件事

1830
00:54:53,000 --> 00:54:55,000
就是说你还没有真正的

1831
00:54:56,000 --> 00:54:57,000
理解这件事

1832
00:54:58,000 --> 00:54:59,000
然后

1833
00:54:59,000 --> 00:55:01,000
所以我觉得

1834
00:55:01,000 --> 00:55:04,000
我可以推荐这位听众去系统的

1835
00:55:04,000 --> 00:55:07,000
看一下 Linux 相关的入门教材

1836
00:55:07,000 --> 00:55:08,000
比如说国内很

1837
00:55:08,000 --> 00:55:11,000
其实我觉得他不一定有时间

1838
00:55:11,000 --> 00:55:11,000
真的去看

1839
00:55:11,000 --> 00:55:14,000
就看他的工作和需求情况

1840
00:55:14,000 --> 00:55:14,000
就是说

1841
00:55:14,000 --> 00:55:15,000
其实不一定

1842
00:55:15,000 --> 00:55:15,000
我刚刚我说了

1843
00:55:15,000 --> 00:55:18,000
就是系统的学习一下

1844
00:55:18,000 --> 00:55:19,000
Linux 的基础知识

1845
00:55:19,000 --> 00:55:20,000
只是一种选择

1846
00:55:20,000 --> 00:55:22,000
你可以选择别的方案

1847
00:55:22,000 --> 00:55:23,000
但只是说你考虑好

1848
00:55:23,000 --> 00:55:24,000
你选择的后果是什么

1849
00:55:24,000 --> 00:55:26,000
你要付出什么样的成本

1850
00:55:26,000 --> 00:55:27,000
以及你的代价是什么

1851
00:55:27,000 --> 00:55:28,000
就是

1852
00:55:28,000 --> 00:55:30,000
真正的自由

1853
00:55:30,000 --> 00:55:31,000
肯定是要花成本的

1854
00:55:31,000 --> 00:55:33,000
这个成本可能不止体现在金钱上

1855
00:55:33,000 --> 00:55:35,000
可能更多是体现在你的时间

1856
00:55:35,000 --> 00:55:37,000
你的精力的投入上面去

1857
00:55:37,000 --> 00:55:39,000
让你可以选择那些简单易用的方案

1858
00:55:39,000 --> 00:55:40,000
就好像为什么

1859
00:55:40,000 --> 00:55:41,000
你看那些

1860
00:55:42,000 --> 00:55:43,000
美观的

1861
00:55:43,000 --> 00:55:43,000
成熟的

1862
00:55:44,000 --> 00:55:45,000
图形界面

1863
00:55:45,000 --> 00:55:46,000
总是要付费的对吧

1864
00:55:47,000 --> 00:55:49,000
而且我还想说的一点就是

1865
00:55:49,000 --> 00:55:50,000
我觉得生活里面

1866
00:55:50,000 --> 00:55:52,000
其实并不仅仅是运维

1867
00:55:52,000 --> 00:55:54,000
或者是编程的

1868
00:55:54,000 --> 00:55:55,000
这个领域

1869
00:55:55,000 --> 00:55:56,000
有这样让人

1870
00:55:56,000 --> 00:55:59,000
让刚入行的人来

1871
00:55:59,000 --> 00:56:00,000
或者是新手

1872
00:56:00,000 --> 00:56:03,000
让新手感觉到非常困惑和痛苦的

1873
00:56:03,000 --> 00:56:05,000
就是他为什么要这样

1874
00:56:05,000 --> 00:56:05,000
对吧

1875
00:56:05,000 --> 00:56:06,000
那

1876
00:56:07,000 --> 00:56:10,000
答案就是历史严格

1877
00:56:10,000 --> 00:56:12,000
就是有非常多的历史原因

1878
00:56:12,000 --> 00:56:14,000
造成了他现在就是今天这个样子

1879
00:56:14,000 --> 00:56:15,000
比如说我记得

1880
00:56:16,000 --> 00:56:18,000
Linux 里面有一个函数叫 Crate

1881
00:56:19,000 --> 00:56:19,000
没有 E

1882
00:56:19,000 --> 00:56:20,000
最后的没有 E

1883
00:56:22,000 --> 00:56:23,000
我第一次用这个函数的时候

1884
00:56:23,000 --> 00:56:24,000
写了好多遍

1885
00:56:24,000 --> 00:56:25,000
我说我靠为什么错了

1886
00:56:27,000 --> 00:56:28,000
最后一查手册

1887
00:56:28,000 --> 00:56:30,000
这个函数的名里面

1888
00:56:30,000 --> 00:56:31,000
没有末尾的 E

1889
00:56:32,000 --> 00:56:33,000
Crate 没有 E

1890
00:56:33,000 --> 00:56:34,000
这件事情

1891
00:56:35,000 --> 00:56:36,000
就让我觉得

1892
00:56:36,000 --> 00:56:37,000
What the fuck

1893
00:56:37,000 --> 00:56:38,000
这世界

1894
00:56:38,000 --> 00:56:39,000
为什么这些世界

1895
00:56:39,000 --> 00:56:41,000
Linux 世界会是这样一个

1896
00:56:41,000 --> 00:56:43,000
破破烂烂的状况

1897
00:56:43,000 --> 00:56:45,000
其实只是当年写那个函数的人少

1898
00:56:46,000 --> 00:56:47,000
少打了

1899
00:56:47,000 --> 00:56:47,000
对

1900
00:56:47,000 --> 00:56:48,000
一石手花

1901
00:56:48,000 --> 00:56:49,000
没有打到那个 E

1902
00:56:49,000 --> 00:56:50,000
我记得

1903
00:56:50,000 --> 00:56:53,000
Unix hate handbook 里面

1904
00:56:53,000 --> 00:56:54,000
提到这件事说

1905
00:56:54,000 --> 00:56:57,000
是因为当时的中单机特别慢

1906
00:56:58,000 --> 00:57:00,000
所以所有的命令都能短则短

1907
00:57:03,000 --> 00:57:04,000
应该不是这个原因

1908
00:57:04,000 --> 00:57:05,000
如果这样的话

1909
00:57:05,000 --> 00:57:06,000
我 Close 为什么又有 E

1910
00:57:07,000 --> 00:57:07,000
对

1911
00:57:09,000 --> 00:57:10,000
他那个人说了吗

1912
00:57:10,000 --> 00:57:12,000
只因为说打错了

1913
00:57:13,000 --> 00:57:14,000
他打错了

1914
00:57:14,000 --> 00:57:15,000
对

1915
00:57:15,000 --> 00:57:16,000
还有一个事

1916
00:57:16,000 --> 00:57:16,000
你知道

1917
00:57:17,000 --> 00:57:19,000
在那个 HGCP 写意里面

1918
00:57:19,000 --> 00:57:22,000
不是一个 refer 这个头吗

1919
00:57:23,000 --> 00:57:25,000
那个 refer 的拼写是错的

1920
00:57:25,000 --> 00:57:25,000
What

1921
00:57:25,000 --> 00:57:27,000
那个拼写是错的

1922
00:57:28,000 --> 00:57:30,000
那个 refer 应该只有一个

1923
00:57:30,000 --> 00:57:32,000
是 refer

1924
00:57:32,000 --> 00:57:33,000
er 吗

1925
00:57:33,000 --> 00:57:34,000
应该只有一个 er

1926
00:57:35,000 --> 00:57:38,000
他写了两个 refer

1927
00:57:39,000 --> 00:57:39,000
欸真的

1928
00:57:39,000 --> 00:57:43,000
refer

1929
00:57:43,000 --> 00:57:45,000
我想哪个是正确的

1930
00:57:45,000 --> 00:57:46,000
我现在有点糊了

1931
00:57:46,000 --> 00:57:47,000
天天被写那个

1932
00:57:47,000 --> 00:57:49,000
英国拼法和美国拼法

1933
00:57:49,000 --> 00:57:50,000
没有

1934
00:57:50,000 --> 00:57:52,000
那是一个

1935
00:57:52,000 --> 00:57:52,000
对

1936
00:57:52,000 --> 00:57:53,000
他多了一个 er

1937
00:57:53,000 --> 00:57:56,000
就是正确的心法是 referer

1938
00:57:56,000 --> 00:57:57,000
对吧

1939
00:57:57,000 --> 00:58:00,000
但是他在 HGCP 写意制定的时候

1940
00:58:00,000 --> 00:58:02,000
错写成了 referer

1941
00:58:02,000 --> 00:58:03,000
Oh my f**king god

1942
00:58:04,000 --> 00:58:07,000
然后这个错误一直被保留到现在

1943
00:58:07,000 --> 00:58:08,000
你知道这让我想起什么吗

1944
00:58:08,000 --> 00:58:10,000
那个 TMAX 的作者是个英国人吗

1945
00:58:10,000 --> 00:58:11,000
大概还是

1946
00:58:11,000 --> 00:58:12,000
Anyway

1947
00:58:12,000 --> 00:58:13,000
反正他的那个

1948
00:58:13,000 --> 00:58:16,000
你在 TMAX 的配置文件里面写

1949
00:58:17,000 --> 00:58:18,000
颜色的时候

1950
00:58:18,000 --> 00:58:20,000
一定要打 COLOUR

1951
00:58:20,000 --> 00:58:21,000
You know

1952
00:58:22,000 --> 00:58:23,000
英式拼法

1953
00:58:25,000 --> 00:58:26,000
真的

1954
00:58:27,000 --> 00:58:27,000
对

1955
00:58:27,000 --> 00:58:28,000
实际上很多事情都是这样的

1956
00:58:28,000 --> 00:58:30,000
就是他有他的历史严格

1957
00:58:30,000 --> 00:58:33,000
他成为今天这个让人困惑的

1958
00:58:33,000 --> 00:58:34,000
让人质疑

1959
00:58:34,000 --> 00:58:36,000
他为什么不能再简单一点的现状

1960
00:58:36,000 --> 00:58:37,000
都是有他的原因的

1961
00:58:37,000 --> 00:58:39,000
就为什么他这么不一致的

1962
00:58:41,000 --> 00:58:42,000
说到不一致

1963
00:58:42,000 --> 00:58:43,000
下面我们就开始了

1964
00:58:44,000 --> 00:58:47,000
上期我们讲到 Windows 上叫 PUTTY 的

1965
00:58:47,000 --> 00:58:51,000
这么一个 Terminal Emulator 的工具

1966
00:58:51,000 --> 00:58:53,000
然后我们把它念成

1967
00:58:53,000 --> 00:58:54,000
你也念 putty 吗

1968
00:58:55,000 --> 00:58:55,000
我想问的是

1969
00:58:55,000 --> 00:58:56,000
对

1970
00:58:56,000 --> 00:58:56,000
我念的是 putty

1971
00:58:56,000 --> 00:58:57,000
为什么

1972
00:58:58,000 --> 00:58:58,000
对

1973
00:58:59,000 --> 00:59:00,000
put 嘛

1974
00:59:00,000 --> 00:59:02,000
就 put 会加 ty 就是 putty 对吧

1975
00:59:03,000 --> 00:59:04,000
对啊

1976
00:59:04,000 --> 00:59:04,000
多自然

1977
00:59:04,000 --> 00:59:07,000
我一直以为是因为我在德国

1978
00:59:07,000 --> 00:59:09,000
德国反正不加点的话

1979
00:59:09,000 --> 00:59:11,000
只有一种念法

1980
00:59:12,000 --> 00:59:13,000
不可能念 art

1981
00:59:13,000 --> 00:59:14,000
对

1982
00:59:14,000 --> 00:59:15,000
而且

1983
00:59:16,000 --> 00:59:16,000
说来我们就来

1984
00:59:16,000 --> 00:59:18,000
其实后来有

1985
00:59:18,000 --> 00:59:23,000
也是听众反馈如雪翩翩飞来告诉我们说

1986
00:59:23,000 --> 00:59:24,000
其实我们念错了

1987
00:59:25,000 --> 00:59:25,000
他应该念

1988
00:59:26,000 --> 00:59:27,000
PUTTY

1989
00:59:28,000 --> 00:59:31,000
因为在美式英语里面

1990
00:59:31,000 --> 00:59:33,000
就是 PU

1991
00:59:33,000 --> 00:59:35,000
他有念

1992
00:59:35,000 --> 00:59:36,000
不是念

1993
00:59:36,000 --> 00:59:36,000
不是 G-U-T

1994
00:59:37,000 --> 00:59:37,000
这个长字

1995
00:59:38,000 --> 00:59:39,000
不是念 good

1996
00:59:39,000 --> 00:59:40,000
是念 gut 对吧

1997
00:59:40,000 --> 00:59:44,000
所以不是 putty 是 party

1998
00:59:44,000 --> 00:59:45,000
但虽然

1999
00:59:45,000 --> 00:59:47,000
虽然 put 不是 part

2000
00:59:47,000 --> 00:59:47,000
对

2001
00:59:47,000 --> 00:59:50,000
虽然 put 是念 put 不是 part

2002
00:59:51,000 --> 00:59:52,000
不要问我为什么

2003
00:59:52,000 --> 00:59:53,000
这就是这个

2004
00:59:54,000 --> 00:59:58,000
完全没有任何一致性可以可言的英文

2005
00:59:58,000 --> 00:59:58,000
就是这样

2006
00:59:58,000 --> 00:59:59,000
要怪就怪法国人

2007
01:00:00,000 --> 01:00:00,000
对

2008
01:00:01,000 --> 01:00:02,000
但是为了一致性

2009
01:00:02,000 --> 01:00:04,000
我们还是准备念成 putty

2010
01:00:04,000 --> 01:00:04,000
对

2011
01:00:04,000 --> 01:00:05,000
what

2012
01:00:05,000 --> 01:00:06,000
以及

2013
01:00:06,000 --> 01:00:06,000
我以为你是为

2014
01:00:06,000 --> 01:00:09,000
micro USB

2015
01:00:09,000 --> 01:00:10,000
HDME

2016
01:00:12,000 --> 01:00:12,000
对

2017
01:00:12,000 --> 01:00:14,000
还有 HDME 接口

2018
01:00:15,000 --> 01:00:16,000
还是德语比较严谨

2019
01:00:16,000 --> 01:00:17,000
我觉得

2020
01:00:17,000 --> 01:00:18,000
以后我们就写

2021
01:00:18,000 --> 01:00:24,000
你们德国同事写程序的时候

2022
01:00:24,000 --> 01:00:26,000
会用德语秘密还是英语秘密

2023
01:00:28,000 --> 01:00:30,000
英语不好的就容易写德语

2024
01:00:30,000 --> 01:00:32,000
其实这一点在世界各地都一样

2025
01:00:32,000 --> 01:00:37,000
就日本人还会用罗马字的假名来命名辨量

2026
01:00:37,000 --> 01:00:38,000
你看他们的大

2027
01:00:38,000 --> 01:00:39,000
中文会用拼音是吧

2028
01:00:39,000 --> 01:00:41,000
你看他们大话简直想死

2029
01:00:42,000 --> 01:00:45,000
我们的大话很多里面也是一大堆

2030
01:00:45,000 --> 01:00:47,000
但我觉得德国人做这件事情

2031
01:00:47,000 --> 01:00:48,000
我觉得很有

2032
01:00:48,000 --> 01:00:50,000
起码拉丁字母的人做这件事情

2033
01:00:50,000 --> 01:00:51,000
应该很自然而然

2034
01:00:53,000 --> 01:00:55,000
你说用德语来命名辨量名

2035
01:00:55,000 --> 01:00:57,000
看起来没有那么没和

2036
01:00:58,000 --> 01:00:58,000
对

2037
01:00:58,000 --> 01:00:59,000
就不会很奇怪

2038
01:00:59,000 --> 01:01:02,000
因为比如说中文你用拼音秘密就很奇怪

2039
01:01:02,000 --> 01:01:03,000
因为有映射的问题

2040
01:01:03,000 --> 01:01:04,000
对吧

2041
01:01:04,000 --> 01:01:05,000
你要猜

2042
01:01:05,000 --> 01:01:07,000
因为有一字多音的问题

2043
01:01:07,000 --> 01:01:08,000
你要猜它到底是什么玩意

2044
01:01:09,000 --> 01:01:11,000
可能根据上下文的语意

2045
01:01:11,000 --> 01:01:12,000
你可以猜得出来

2046
01:01:12,000 --> 01:01:14,000
但德语完全没有这个问题

2047
01:01:14,000 --> 01:01:15,000
而且你这个键盘又不存在输入法

2048
01:01:15,000 --> 01:01:16,000
切换的问题

2049
01:01:16,000 --> 01:01:17,000
对

2050
01:01:17,000 --> 01:01:19,000
唯一需要注意的就是扣领

2051
01:01:19,000 --> 01:01:21,000
打开的时候很容易就出现了一个

2052
01:01:21,000 --> 01:01:23,000
零型中间一个问号

2053
01:01:24,000 --> 01:01:24,000
还好吧

2054
01:01:24,000 --> 01:01:25,000
现在都用你扣的了

2055
01:01:25,000 --> 01:01:26,000
没有还好

2056
01:01:27,000 --> 01:01:29,000
你们是 Windows 换机

2057
01:01:29,000 --> 01:01:30,000
我们是 Linux 换机

2058
01:01:32,000 --> 01:01:32,000
为什么会有这个问题

2059
01:01:32,000 --> 01:01:34,000
有很多服务器还在跑旧版

2060
01:01:35,000 --> 01:01:35,000
Long story

2061
01:01:35,000 --> 01:01:36,000
不要说这个

2062
01:01:36,000 --> 01:01:37,000
我觉得

2063
01:01:37,000 --> 01:01:38,000
我其实

2064
01:01:39,000 --> 01:01:40,000
泄露了公司商业机密

2065
01:01:40,000 --> 01:01:43,000
在上一个公司的元大美行里面

2066
01:01:43,000 --> 01:01:45,000
有很多地方我看到他判断

2067
01:01:49,000 --> 01:01:50,000
判断一个条件是否为真的时候

2068
01:01:50,000 --> 01:01:52,000
他总是写不等于 n

2069
01:01:53,000 --> 01:01:55,000
然后我在改段代码的时候

2070
01:01:55,000 --> 01:01:56,000
我就写了个

2071
01:01:56,000 --> 01:01:58,000
不去判断它是不是等于 n

2072
01:01:58,000 --> 01:01:59,000
而是判断它是不是

2073
01:02:00,000 --> 01:02:00,000
不

2074
01:02:00,000 --> 01:02:01,000
sorry

2075
01:02:01,000 --> 01:02:03,000
不去判断它是不是不等于 n

2076
01:02:03,000 --> 01:02:05,000
而是去判断它是不是等于 y

2077
01:02:05,000 --> 01:02:06,000
然后

2078
01:02:07,000 --> 01:02:09,000
之前维护这个代码的人就跟我说

2079
01:02:09,000 --> 01:02:10,000
千万不要这样写

2080
01:02:10,000 --> 01:02:12,000
因为在这个代码库里面有很多地方

2081
01:02:13,000 --> 01:02:15,000
和 n 相对的

2082
01:02:16,000 --> 01:02:17,000
是 j

2083
01:02:18,000 --> 01:02:19,000
而不是 y

2084
01:02:20,000 --> 01:02:21,000
是德语的 y

2085
01:02:22,000 --> 01:02:24,000
但是有些人是用 y 的

2086
01:02:24,000 --> 01:02:25,000
这里科普一下

2087
01:02:25,000 --> 01:02:26,000
就是英文的 yes

2088
01:02:26,000 --> 01:02:27,000
是对德文的 y

2089
01:02:27,000 --> 01:02:28,000
就是 j

2090
01:02:28,000 --> 01:02:31,000
然后我就说

2091
01:02:32,000 --> 01:02:34,000
我之前以为这个在

2092
01:02:36,000 --> 01:02:37,000
等一下

2093
01:02:37,000 --> 01:02:39,000
如果这样为什么 n 是也是

2094
01:02:39,000 --> 01:02:40,000
你们应该用 k

2095
01:02:40,000 --> 01:02:40,000
nine

2096
01:02:40,000 --> 01:02:41,000
nine

2097
01:02:41,000 --> 01:02:42,000
用 nine

2098
01:02:42,000 --> 01:02:43,000
不是 kyne

2099
01:02:43,000 --> 01:02:44,000
而是 nine

2100
01:02:45,000 --> 01:02:48,000
这也是让我觉得非常崩溃的一件事情

2101
01:02:50,000 --> 01:02:54,000
所以你见过有同事用德文写这个秘密

2102
01:02:54,000 --> 01:02:54,000
有啊很多

2103
01:02:54,000 --> 01:02:58,000
就什么什么 sliv 什么

2104
01:02:59,000 --> 01:03:02,000
所以这个会影响你对代码的理解吗

2105
01:03:03,000 --> 01:03:05,000
还是说你现在已经

2106
01:03:05,000 --> 01:03:07,000
脑子里面中德

2107
01:03:07,000 --> 01:03:07,000
不是

2108
01:03:07,000 --> 01:03:10,000
英德已经自成流畅了

2109
01:03:10,000 --> 01:03:11,000
我觉得我还可以吧

2110
01:03:11,000 --> 01:03:14,000
目前我没有因为

2111
01:03:14,000 --> 01:03:15,000
就你不觉得为何吗

2112
01:03:15,000 --> 01:03:15,000
对

2113
01:03:15,000 --> 01:03:16,000
我不会觉得为何

2114
01:03:16,000 --> 01:03:17,000
但是我看到大段的

2115
01:03:17,000 --> 01:03:19,000
用德语写的注释的时候

2116
01:03:19,000 --> 01:03:20,000
我还是会皱眉头

2117
01:03:20,000 --> 01:03:20,000
我觉得

2118
01:03:23,000 --> 01:03:24,000
何必

2119
01:03:25,000 --> 01:03:26,000
德国人英文也不是那么好

2120
01:03:26,000 --> 01:03:28,000
其实很多人英文非常差

2121
01:03:28,000 --> 01:03:29,000
当然还是要比法国人好

2122
01:03:29,000 --> 01:03:33,000
法国意识

2123
01:03:35,000 --> 01:03:35,000
好吧

2124
01:03:38,000 --> 01:03:40,000
这个问题在中国就更加严重了

2125
01:03:40,000 --> 01:03:41,000
我觉得

2126
01:03:41,000 --> 01:03:42,000
就是起码我看到很多

2127
01:03:43,000 --> 01:03:44,000
大部分应该是

2128
01:03:46,000 --> 01:03:48,000
英文不那么好的人写注释都是

2129
01:03:49,000 --> 01:03:50,000
写的中文

2130
01:03:51,000 --> 01:03:52,000
或者是拼音

2131
01:03:52,000 --> 01:03:53,000
对

2132
01:03:53,000 --> 01:03:54,000
如果是英文的话

2133
01:03:54,000 --> 01:03:55,000
一定是残不忍睹的

2134
01:03:57,000 --> 01:03:59,000
也有人有问这么一件事

2135
01:03:59,000 --> 01:04:01,000
就是说你一个中国的公司

2136
01:04:01,000 --> 01:04:04,000
程序员绝大部分都是中国人

2137
01:04:04,000 --> 01:04:04,000
在可以预见的未来

2138
01:04:04,000 --> 01:04:07,000
也不可能招外国程序员

2139
01:04:07,000 --> 01:04:09,000
纠结一个英文写注释算个啥

2140
01:04:09,000 --> 01:04:10,000
对吧

2141
01:04:11,000 --> 01:04:12,000
然后我进无言以对

2142
01:04:12,000 --> 01:04:14,000
说的也对吧

2143
01:04:15,000 --> 01:04:17,000
德国人也就一亿人吗

2144
01:04:17,000 --> 01:04:19,000
为什么很多程序员理直气壮的

2145
01:04:19,000 --> 01:04:20,000
在注释里面写德语

2146
01:04:20,000 --> 01:04:21,000
我们却

2147
01:04:21,000 --> 01:04:23,000
我们世界五分之一的人口

2148
01:04:23,000 --> 01:04:26,000
却必须在注释里面写英文的

2149
01:04:26,000 --> 01:04:27,000
好像的确

2150
01:04:27,000 --> 01:04:28,000
好歹还是世界第一大语言

2151
01:04:28,000 --> 01:04:29,000
对

2152
01:04:29,000 --> 01:04:30,000
从人数上来讲

2153
01:04:30,000 --> 01:04:31,000
好像的确有点道理

2154
01:04:33,000 --> 01:04:35,000
而且你看现在的很多语言

2155
01:04:36,000 --> 01:04:37,000
接下来要谈到 Swift

2156
01:04:37,000 --> 01:04:38,000
就在

2157
01:04:38,000 --> 01:04:39,000
first

2158
01:04:39,000 --> 01:04:41,000
就是在原生级别支持 Unicode

2159
01:04:42,000 --> 01:04:42,000
对吧

2160
01:04:42,000 --> 01:04:44,000
你既然可以用 eml 寨

2161
01:04:44,000 --> 01:04:46,000
eml 这里来做变量名

2162
01:04:46,000 --> 01:04:51,000
用 Unicode 来写一些比较扯的操作符

2163
01:04:51,000 --> 01:04:53,000
那为什么不能用中文

2164
01:04:53,000 --> 01:04:54,000
用你的母语来写注释

2165
01:04:57,000 --> 01:04:57,000
也是

2166
01:04:58,000 --> 01:05:00,000
我觉得起码从效率来讲

2167
01:05:00,000 --> 01:05:01,000
可能还是好一点点

2168
01:05:01,000 --> 01:05:02,000
可能唯一要考虑

2169
01:05:02,000 --> 01:05:04,000
就是真的是编码的问题

2170
01:05:04,000 --> 01:05:06,000
至少你用中文

2171
01:05:06,000 --> 01:05:07,000
你想用

2172
01:05:08,000 --> 01:05:09,000
brainfuck

2173
01:05:09,000 --> 01:05:12,000
特别是在 Windows 上面的话

2174
01:05:12,000 --> 01:05:12,000
你特别要注意这个

2175
01:05:12,000 --> 01:05:15,000
你想用 brainfuck 来写一段程序的话

2176
01:05:15,000 --> 01:05:17,000
你要想输出中文是非常累的

2177
01:05:22,000 --> 01:05:22,000
好吧

2178
01:05:24,000 --> 01:05:25,000
OK

2179
01:05:25,000 --> 01:05:26,000
今天的听众环节

2180
01:05:26,000 --> 01:05:28,000
以及相关的

2181
01:05:30,000 --> 01:05:32,000
吐槽就到此为止

2182
01:05:32,000 --> 01:05:36,000
我们下面进入新闻环节

2183
01:05:36,000 --> 01:05:36,000
对

2184
01:05:37,000 --> 01:05:39,000
第一条新闻是挺不错的

2185
01:05:42,000 --> 01:05:44,000
之前是上一期还是前一期

2186
01:05:44,000 --> 01:05:44,000
我们提到了

2187
01:05:46,000 --> 01:05:48,000
有两个维多利亚秘密的模特

2188
01:05:48,000 --> 01:05:50,000
其实是程序员来的

2189
01:05:50,000 --> 01:05:51,000
去做了程序员

2190
01:05:51,000 --> 01:05:53,000
不是他们本身是程序员

2191
01:05:54,000 --> 01:05:55,000
不你那个是制作程序员

2192
01:05:55,000 --> 01:05:57,000
我那个本来就是程序员

2193
01:05:57,000 --> 01:05:58,000
我说的是 Carly Claus

2194
01:05:58,000 --> 01:05:58,000
你说的是谁

2195
01:05:59,000 --> 01:06:01,000
我说的是另外那个三组一发

2196
01:06:01,000 --> 01:06:03,000
一个黑人女孩

2197
01:06:04,000 --> 01:06:06,000
他那个是本来是 iOS 开发者

2198
01:06:06,000 --> 01:06:08,000
然后后来被发现去做了维密模特

2199
01:06:08,000 --> 01:06:09,000
但是没做多久

2200
01:06:10,000 --> 01:06:12,000
你这位后来我也找到了

2201
01:06:12,000 --> 01:06:14,000
然后他就成了一个女神

2202
01:06:16,000 --> 01:06:17,000
这个是另外一回事

2203
01:06:17,000 --> 01:06:21,000
这位最近在国内非常火

2204
01:06:22,000 --> 01:06:28,000
因为他帮那个华为代言了一个表

2205
01:06:28,000 --> 01:06:32,000
然后各种就是枪文段子

2206
01:06:32,000 --> 01:06:33,000
在那个公众号里面推

2207
01:06:34,000 --> 01:06:35,000
然后我也看到了

2208
01:06:35,000 --> 01:06:36,000
但我们提到

2209
01:06:36,000 --> 01:06:38,000
这个有做广告前一次

2210
01:06:38,000 --> 01:06:39,000
就这段就可以略过了

2211
01:06:40,000 --> 01:06:41,000
不用解释为什么

2212
01:06:42,000 --> 01:06:46,000
后来其实我们关注他是因为别的事

2213
01:06:46,000 --> 01:06:51,000
是因为他跑去 SpaceX 作秀去了

2214
01:06:51,000 --> 01:06:52,000
What

2215
01:06:54,000 --> 01:06:55,000
然后在一个什么

2216
01:06:56,000 --> 01:06:58,000
在华尔街日报的封面

2217
01:06:58,000 --> 01:07:02,000
有一个很帅很帅的标题

2218
01:07:02,000 --> 01:07:04,000
背后是 SpaceX 的火箭声控

2219
01:07:04,000 --> 01:07:07,000
前面是这位 KK 女神穿着这个

2220
01:07:07,000 --> 01:07:08,000
不是凯文卡利

2221
01:07:08,000 --> 01:07:09,000
叫 Carly Claus

2222
01:07:09,000 --> 01:07:10,000
德国人吗这个是

2223
01:07:11,000 --> 01:07:12,000
应该不是吧

2224
01:07:12,000 --> 01:07:13,000
看信好像有点像

2225
01:07:13,000 --> 01:07:14,000
Claus

2226
01:07:14,000 --> 01:07:14,000
Anyway

2227
01:07:15,000 --> 01:07:18,000
然后拿着一个很帅的宇航员

2228
01:07:19,000 --> 01:07:20,000
喷灰的美国国旗

2229
01:07:20,000 --> 01:07:23,000
他拿的其实是一个摩托车头盔

2230
01:07:23,000 --> 01:07:24,000
我必须吐槽的是

2231
01:07:24,000 --> 01:07:25,000
就

2232
01:07:25,000 --> 01:07:26,000
对

2233
01:07:26,000 --> 01:07:30,000
他拿的这个头盔其实叫 Jet

2234
01:07:30,000 --> 01:07:32,000
Jet 式的摩托车头盔

2235
01:07:32,000 --> 01:07:33,000
然后他穿的衣服

2236
01:07:33,000 --> 01:07:37,000
也只是一个印尔新雕齐的皮加克而已

2237
01:07:38,000 --> 01:07:38,000
对

2238
01:07:38,000 --> 01:07:39,000
但其实我觉得

2239
01:07:39,000 --> 01:07:40,000
为什么这件事一样

2240
01:07:40,000 --> 01:07:41,000
大多拿出来讲

2241
01:07:41,000 --> 01:07:43,000
其实我觉得他体现的一种

2242
01:07:45,000 --> 01:07:49,000
或者说美国现在科技圈比较

2243
01:07:49,000 --> 01:07:51,000
讲究的事就是性别平等

2244
01:07:53,000 --> 01:07:54,000
为什么我们之前讲

2245
01:07:54,000 --> 01:07:55,000
发火箭

2246
01:07:55,000 --> 01:07:56,000
搞计算机

2247
01:07:56,000 --> 01:07:57,000
写代码这些事情

2248
01:07:57,000 --> 01:07:58,000
一定都是男人的事情的

2249
01:07:58,000 --> 01:07:59,000
对吧

2250
01:07:59,000 --> 01:08:01,000
我们也看一下这不是也有女人的事情

2251
01:08:01,000 --> 01:08:03,000
而且有一个这么

2252
01:08:03,000 --> 01:08:04,000
什么

2253
01:08:04,000 --> 01:08:05,000
漂亮

2254
01:08:05,000 --> 01:08:05,000
然后身材

2255
01:08:05,000 --> 01:08:06,000
调量调制

2256
01:08:07,000 --> 01:08:08,000
对

2257
01:08:08,000 --> 01:08:09,000
这什么东西

2258
01:08:09,000 --> 01:08:09,000
是

2259
01:08:10,000 --> 01:08:12,000
就是黑话是说一个女孩身材好

2260
01:08:13,000 --> 01:08:15,000
就是调是指身材

2261
01:08:15,000 --> 01:08:17,000
调直就是身材非常好

2262
01:08:17,000 --> 01:08:19,000
盘是指脸

2263
01:08:20,000 --> 01:08:21,000
盘量就是长得漂亮

2264
01:08:21,000 --> 01:08:23,000
盘量调直的妞

2265
01:08:23,000 --> 01:08:24,000
这是从早期

2266
01:08:24,000 --> 01:08:27,000
我相信是从什么清末的黑话转移来

2267
01:08:28,000 --> 01:08:30,000
现在是北京日常语

2268
01:08:31,000 --> 01:08:31,000
对

2269
01:08:31,000 --> 01:08:32,000
anyway

2270
01:08:32,000 --> 01:08:33,000
他这是一个典范

2271
01:08:34,000 --> 01:08:36,000
然后我觉得这是一个好的现象

2272
01:08:36,000 --> 01:08:36,000
就是说

2273
01:08:36,000 --> 01:08:38,000
过去我们通常觉得这种

2274
01:08:38,000 --> 01:08:39,000
比如说这种

2275
01:08:39,000 --> 01:08:41,000
你想到一个什么内衣模特

2276
01:08:42,000 --> 01:08:44,000
你脑子中浮现出来一定是一件事

2277
01:08:44,000 --> 01:08:45,000
有一些很多在偏见的成分

2278
01:08:45,000 --> 01:08:48,000
特别是我知道在中国的大部分

2279
01:08:49,000 --> 01:08:51,000
屌丝男性的心目里面

2280
01:08:51,000 --> 01:08:53,000
会有一些这种固定的看法

2281
01:08:53,000 --> 01:08:53,000
但其实

2282
01:08:54,000 --> 01:08:55,000
KK

2283
01:08:55,000 --> 01:08:57,000
他为什么我们

2284
01:08:58,000 --> 01:08:59,000
觉得这是一个很好的事

2285
01:08:59,000 --> 01:09:01,000
就是他代表了另外一种

2286
01:09:01,000 --> 01:09:02,000
就是叫做又有头脑

2287
01:09:02,000 --> 01:09:03,000
又有智慧

2288
01:09:03,000 --> 01:09:04,000
又有身材

2289
01:09:04,000 --> 01:09:04,000
又有脸蛋

2290
01:09:04,000 --> 01:09:05,000
还超级努力

2291
01:09:05,000 --> 01:09:09,000
然后男朋友还特别有钱

2292
01:09:09,000 --> 01:09:09,000
做什么

2293
01:09:11,000 --> 01:09:13,000
财团的一个二代

2294
01:09:13,000 --> 01:09:15,000
这种就知道说

2295
01:09:15,000 --> 01:09:16,000
我们估计叫做

2296
01:09:16,000 --> 01:09:17,000
人生赢家

2297
01:09:18,000 --> 01:09:20,000
人生赢家不太对

2298
01:09:20,000 --> 01:09:21,000
人生赢家就很多的形式

2299
01:09:21,000 --> 01:09:22,000
我觉得这个叫

2300
01:09:23,000 --> 01:09:24,000
就又有头脑

2301
01:09:24,000 --> 01:09:25,000
然后又很漂亮

2302
01:09:25,000 --> 01:09:27,000
你要重新说一遍吗

2303
01:09:27,000 --> 01:09:28,000
我给你说

2304
01:09:28,000 --> 01:09:30,000
排量调值脑子好使

2305
01:09:30,000 --> 01:09:30,000
行了吧

2306
01:09:34,000 --> 01:09:35,000
好吧

2307
01:09:35,000 --> 01:09:35,000
对

2308
01:09:35,000 --> 01:09:37,000
我觉得这个是非常好的一件事

2309
01:09:37,000 --> 01:09:38,000
然后他会

2310
01:09:39,000 --> 01:09:40,000
在社会中树立起

2311
01:09:40,000 --> 01:09:41,000
另外一种形象

2312
01:09:41,000 --> 01:09:43,000
然后这种形象会改变我们过去

2313
01:09:43,000 --> 01:09:44,000
对这种

2314
01:09:44,000 --> 01:09:45,000
比如说内衣模特也好

2315
01:09:45,000 --> 01:09:46,000
这种比较主

2316
01:09:46,000 --> 01:09:48,000
就先人为主的成见

2317
01:09:49,000 --> 01:09:50,000
对

2318
01:09:50,000 --> 01:09:51,000
我相信这一点

2319
01:09:51,000 --> 01:09:55,000
也许可以让我们的子孙后代

2320
01:09:55,000 --> 01:09:56,000
在二三十年之后

2321
01:09:56,000 --> 01:09:59,000
不会再面临我现在这样的公司里面

2322
01:09:59,000 --> 01:10:00,000
可能七八十个人

2323
01:10:00,000 --> 01:10:03,000
只有三个女生的窘境

2324
01:10:03,000 --> 01:10:04,000
对

2325
01:10:06,000 --> 01:10:07,000
对

2326
01:10:07,000 --> 01:10:08,000
这个事情就是这样的

2327
01:10:08,000 --> 01:10:11,000
所以再这种女生再多来一些

2328
01:10:11,000 --> 01:10:12,000
越多越好

2329
01:10:14,000 --> 01:10:15,000
接下来是一条

2330
01:10:15,000 --> 01:10:18,000
下一则新闻就是比较重量级的了

2331
01:10:18,000 --> 01:10:20,000
其实我们有点错过了

2332
01:10:20,000 --> 01:10:22,000
尤其是上周的新闻

2333
01:10:22,000 --> 01:10:24,000
现在已经有点稍微有点退热了

2334
01:10:24,000 --> 01:10:26,000
但至少看到的时候

2335
01:10:26,000 --> 01:10:27,000
我们两个还是比较

2336
01:10:27,000 --> 01:10:28,000
至少我很兴奋

2337
01:10:29,000 --> 01:10:30,000
不知道你

2338
01:10:30,000 --> 01:10:34,000
因为苹果在 WC 的时候说了

2339
01:10:35,000 --> 01:10:37,000
Swift 语言年底之前要开源

2340
01:10:38,000 --> 01:10:41,000
他们赶在 12 月初的时候

2341
01:10:41,000 --> 01:10:42,000
12 月上旬把这件事情做了

2342
01:10:42,000 --> 01:10:43,000
终于把这个事情

2343
01:10:43,000 --> 01:10:44,000
对

2344
01:10:44,000 --> 01:10:46,000
所以你怎么看

2345
01:10:46,000 --> 01:10:48,000
当然很高兴了

2346
01:10:50,000 --> 01:10:52,000
我终于可以在

2347
01:10:53,000 --> 01:10:56,000
家里面和公司里都用这种语言了

2348
01:10:56,000 --> 01:10:58,000
但怎么说呢

2349
01:10:58,000 --> 01:10:59,000
反正要走的路还很远

2350
01:11:00,000 --> 01:11:01,000
但这是一个很好的开始

2351
01:11:02,000 --> 01:11:06,000
为什么感觉好像某种巨大重大事情呢

2352
01:11:07,000 --> 01:11:08,000
发布宣言

2353
01:11:08,000 --> 01:11:11,000
他这次开源的细节还是要讨论一下

2354
01:11:11,000 --> 01:11:12,000
我觉得他这次

2355
01:11:12,000 --> 01:11:14,000
当然除了我们之前过去理解的

2356
01:11:14,000 --> 01:11:16,000
他会把语言

2357
01:11:16,000 --> 01:11:18,000
compiler 这些相关的工具链

2358
01:11:18,000 --> 01:11:21,000
开放出来之外

2359
01:11:21,000 --> 01:11:23,000
一个更加重要的事

2360
01:11:23,000 --> 01:11:25,000
他可能是把那个叫做 Foundation

2361
01:11:25,000 --> 01:11:26,000
就是他的标准库

2362
01:11:26,000 --> 01:11:29,000
也至少他没有说要

2363
01:11:29,000 --> 01:11:30,000
现在还没有完成

2364
01:11:30,000 --> 01:11:31,000
没有全部完成

2365
01:11:32,000 --> 01:11:35,000
但至少他说以后会用 Swift 逐渐写过来

2366
01:11:35,000 --> 01:11:36,000
就是说因为以前的

2367
01:11:37,000 --> 01:11:39,000
如果你做 IOS 开发

2368
01:11:40,000 --> 01:11:43,000
你现在要用 Swift 写一个 IOS 应用的话

2369
01:11:43,000 --> 01:11:45,000
你还是要用很多这种 Object-C 的那些

2370
01:11:45,000 --> 01:11:48,000
Foundation 的库

2371
01:11:48,000 --> 01:11:49,000
对吧

2372
01:11:49,000 --> 01:11:49,000
你要掉那个东西

2373
01:11:49,000 --> 01:11:50,000
然后那个是必然的

2374
01:11:50,000 --> 01:11:52,000
就私有的一个东西

2375
01:11:52,000 --> 01:11:54,000
但如果你没有这个标准库的话

2376
01:11:54,000 --> 01:11:55,000
你光有一个语言

2377
01:11:55,000 --> 01:11:57,000
其实并没有什么用

2378
01:11:57,000 --> 01:11:57,000
对 简单来说

2379
01:11:57,000 --> 01:12:00,000
这一次开源最大的一个趋势

2380
01:12:00,000 --> 01:12:04,000
就是 Swift 这个语言

2381
01:12:04,000 --> 01:12:08,000
和 Coco 乃至于跟 Ostend

2382
01:12:08,000 --> 01:12:12,000
这种非常紧密的偶合关系将会松动

2383
01:12:13,000 --> 01:12:16,000
就导致 Swift 会获得更大的自由度

2384
01:12:16,000 --> 01:12:18,000
可能将来会有一个比较标准的

2385
01:12:19,000 --> 01:12:20,000
比如说可能会有一个标准的 Io 库

2386
01:12:20,000 --> 01:12:21,000
对吧

2387
01:12:21,000 --> 01:12:22,000
不像现在就是

2388
01:12:23,000 --> 01:12:25,000
现在这个时间点

2389
01:12:25,000 --> 01:12:27,000
你想在 Swift

2390
01:12:27,000 --> 01:12:29,000
你想用 Swift 在 Linux 上

2391
01:12:29,000 --> 01:12:31,000
开发一些程序的话

2392
01:12:31,000 --> 01:12:35,000
你必须做大量的操作性判断

2393
01:12:35,000 --> 01:12:38,000
如果是 Ostend 的话

2394
01:12:38,000 --> 01:12:40,000
你要调用一套 Io 函数

2395
01:12:40,000 --> 01:12:41,000
而如果是 Linux 的话

2396
01:12:41,000 --> 01:12:43,000
你也会需要去调用另外一套函数

2397
01:12:43,000 --> 01:12:44,000
但是在将来很有可能

2398
01:12:44,000 --> 01:12:47,000
这个就不再会是一个问题了

2399
01:12:47,000 --> 01:12:50,000
因为可能 Corelib 的那帮人

2400
01:12:50,000 --> 01:12:52,000
会做出一个跨平台的

2401
01:12:52,000 --> 01:12:53,000
我也不知道

2402
01:12:53,000 --> 01:12:57,000
Possix 标准库出来

2403
01:12:58,000 --> 01:12:58,000
对

2404
01:12:59,000 --> 01:13:00,000
这次发布的

2405
01:13:00,000 --> 01:13:02,000
他们也有一些像工具链的话

2406
01:13:02,000 --> 01:13:04,000
他们发布了两个

2407
01:13:04,000 --> 01:13:05,000
主要针对两个系统

2408
01:13:05,000 --> 01:13:06,000
一个是针对 Ostend

2409
01:13:06,000 --> 01:13:08,000
就是他肯定是自家平台

2410
01:13:08,000 --> 01:13:09,000
肯定要支持的

2411
01:13:09,000 --> 01:13:11,000
然后他还发布了一个针对

2412
01:13:11,000 --> 01:13:12,000
I want to

2413
01:13:12,000 --> 01:13:12,000
有两个发行版

2414
01:13:12,000 --> 01:13:14,000
14.04 的 LTS 版本

2415
01:13:14,000 --> 01:13:17,000
和最新的 15.10

2416
01:13:17,000 --> 01:13:19,000
15.4

2417
01:13:19,000 --> 01:13:19,000
应该是

2418
01:13:19,000 --> 01:13:20,000
15.4

2419
01:13:20,000 --> 01:13:21,000
OK

2420
01:13:23,000 --> 01:13:24,000
像编译器那些包

2421
01:13:24,000 --> 01:13:25,000
都可以直接用的

2422
01:13:26,000 --> 01:13:27,000
这些就是预先编译好的

2423
01:13:28,000 --> 01:13:30,000
反正 Windows 暂时还是没戏的

2424
01:13:33,000 --> 01:13:35,000
应该不会支持敌方平台吧

2425
01:13:35,000 --> 01:13:35,000
我觉得

2426
01:13:37,000 --> 01:13:39,000
但这次也局限比较多

2427
01:13:39,000 --> 01:13:41,000
因为他只发布了一个架构

2428
01:13:41,000 --> 01:13:43,000
就是只支持 X 64

2429
01:13:43,000 --> 01:13:45,000
架构的处理器的指令集

2430
01:13:46,000 --> 01:13:47,000
比如说你想跑一个

2431
01:13:48,000 --> 01:13:50,000
开源的你想跑 ARM 上面

2432
01:13:51,000 --> 01:13:52,000
就好像没什么戏了

2433
01:13:53,000 --> 01:13:54,000
跑到 ARM 上面

2434
01:13:54,000 --> 01:13:57,000
我在邮件列表里面

2435
01:13:57,000 --> 01:13:59,000
看到了一个人胸在坐

2436
01:13:59,000 --> 01:14:01,000
然后他目前撞到了枪

2437
01:14:01,000 --> 01:14:02,000
然后但至少

2438
01:14:02,000 --> 01:14:04,000
至少肯定没有破坏

2439
01:14:04,000 --> 01:14:05,000
这是肯定的

2440
01:14:05,000 --> 01:14:05,000
对

2441
01:14:06,000 --> 01:14:06,000
对

2442
01:14:06,000 --> 01:14:09,000
所以这件事情还是挺沮丧的

2443
01:14:09,000 --> 01:14:10,000
当然了

2444
01:14:11,000 --> 01:14:12,000
我觉得是早晚的事情

2445
01:14:12,000 --> 01:14:12,000
对

2446
01:14:13,000 --> 01:14:13,000
对

2447
01:14:13,000 --> 01:14:14,000
总有回去做的

2448
01:14:15,000 --> 01:14:17,000
就现在就已经在那做

2449
01:14:17,000 --> 01:14:18,000
就已经有人在做了

2450
01:14:18,000 --> 01:14:19,000
而且他就他

2451
01:14:19,000 --> 01:14:20,000
据他的说法

2452
01:14:20,000 --> 01:14:21,000
他已经走了很远

2453
01:14:21,000 --> 01:14:23,000
就什么 LVM 没有问题

2454
01:14:23,000 --> 01:14:24,000
然后 CMARK

2455
01:14:24,000 --> 01:14:25,000
当然也没有问题

2456
01:14:26,000 --> 01:14:27,000
然后唯一跑不出来

2457
01:14:27,000 --> 01:14:28,000
就是 Swift 本身

2458
01:14:28,000 --> 01:14:29,000
然后他在

2459
01:14:30,000 --> 01:14:32,000
对我加入了里面的

2460
01:14:32,000 --> 01:14:33,000
两个邮件列表

2461
01:14:34,000 --> 01:14:36,000
一个是 Swift Dev

2462
01:14:36,000 --> 01:14:37,000
另外一个是 Swift User

2463
01:14:38,000 --> 01:14:39,000
然后这两天的讨论

2464
01:14:39,000 --> 01:14:40,000
还是比较热烈的

2465
01:14:41,000 --> 01:14:43,000
有一个哥们在做

2466
01:14:44,000 --> 01:14:45,000
Swift for Android

2467
01:14:46,000 --> 01:14:47,000
而且好像是个中国人

2468
01:14:48,000 --> 01:14:48,000
对

2469
01:14:50,000 --> 01:14:52,000
然后我也是把那个代码

2470
01:14:52,000 --> 01:14:54,000
都在公司和本机上

2471
01:14:55,000 --> 01:14:58,000
就按照他的说明

2472
01:14:58,000 --> 01:14:59,000
一步一步做下来

2473
01:14:59,000 --> 01:15:00,000
还是 OK 的吧

2474
01:15:02,000 --> 01:15:04,000
他这次发布的是 2.2 的版本

2475
01:15:04,000 --> 01:15:06,000
然后我看了一下 Xcode 里面

2476
01:15:06,000 --> 01:15:07,000
自带的是 2.1

2477
01:15:10,000 --> 01:15:11,000
我已经很久没有开过 Xcode 了

2478
01:15:11,000 --> 01:15:12,000
应该是吧

2479
01:15:13,000 --> 01:15:13,000
对

2480
01:15:13,000 --> 01:15:14,000
所以还是挺有意思

2481
01:15:14,000 --> 01:15:15,000
他发布的一个

2482
01:15:15,000 --> 01:15:17,000
更加实验性的版本

2483
01:15:17,000 --> 01:15:19,000
然后就他们生产

2484
01:15:19,000 --> 01:15:19,000
这是 Master

2485
01:15:19,000 --> 01:15:20,000
对

2486
01:15:20,000 --> 01:15:22,000
就是 Master 和 Sable 的差别

2487
01:15:23,000 --> 01:15:24,000
对

2488
01:15:24,000 --> 01:15:26,000
这次还有一个很重要的事

2489
01:15:26,000 --> 01:15:26,000
就是说

2490
01:15:26,000 --> 01:15:28,000
因为过去苹果像开源

2491
01:15:29,000 --> 01:15:30,000
像 WebKit 也好

2492
01:15:30,000 --> 01:15:31,000
还有那个叫

2493
01:15:32,000 --> 01:15:33,000
这个叫什么

2494
01:15:33,000 --> 01:15:34,000
就是苹果之前那些开源产品

2495
01:15:34,000 --> 01:15:34,000
他都

2496
01:15:34,000 --> 01:15:37,000
他不会把他们内部的开发的

2497
01:15:37,000 --> 01:15:38,000
过程拿出来

2498
01:15:38,000 --> 01:15:39,000
他只会说给你一个 Code dump

2499
01:15:39,000 --> 01:15:40,000
对吧

2500
01:15:40,000 --> 01:15:41,000
就是我们最新

2501
01:15:41,000 --> 01:15:43,000
现在状态是这样子

2502
01:15:43,000 --> 01:15:44,000
你拿去

2503
01:15:44,000 --> 01:15:45,000
你们自己研究怎么弄

2504
01:15:45,000 --> 01:15:47,000
但你看你从里面

2505
01:15:47,000 --> 01:15:48,000
你看不到

2506
01:15:48,000 --> 01:15:49,000
他是怎么一步一步得到

2507
01:15:49,000 --> 01:15:51,000
他发布的版本的

2508
01:15:51,000 --> 01:15:52,000
这次就不一样了

2509
01:15:52,000 --> 01:15:54,000
这次他们是直接选择

2510
01:15:54,000 --> 01:15:56,000
把 Git 发布到 GitHub 上面去

2511
01:15:56,000 --> 01:15:59,000
做一个公开的一个 Repost Stream

2512
01:15:59,000 --> 01:16:00,000
你可以看到

2513
01:16:01,000 --> 01:16:02,000
你根据 Commit history

2514
01:16:02,000 --> 01:16:04,000
就是提交的历史记录

2515
01:16:04,000 --> 01:16:06,000
你可以看到最早的一个提交是什么

2516
01:16:07,000 --> 01:16:07,000
谁

2517
01:16:07,000 --> 01:16:08,000
那个叫

2518
01:16:08,000 --> 01:16:08,000
Christ

2519
01:16:08,000 --> 01:16:09,000
叫什么

2520
01:16:09,000 --> 01:16:11,000
Christ Lutton

2521
01:16:12,000 --> 01:16:12,000
对

2522
01:16:12,000 --> 01:16:14,000
他怎么从最开始

2523
01:16:14,000 --> 01:16:14,000
第一个提交

2524
01:16:14,000 --> 01:16:16,000
怎么一步一步把 Swift

2525
01:16:16,000 --> 01:16:17,000
这些他东西

2526
01:16:17,000 --> 01:16:19,000
搭起来的历史过程

2527
01:16:19,000 --> 01:16:21,000
这个应该是从来没有出现过的

2528
01:16:21,000 --> 01:16:23,000
这是人类学研究的至宝

2529
01:16:24,000 --> 01:16:25,000
苹果学研究

2530
01:16:26,000 --> 01:16:26,000
对

2531
01:16:27,000 --> 01:16:28,000
对

2532
01:16:28,000 --> 01:16:29,000
你可以看到苹果内部

2533
01:16:29,000 --> 01:16:30,000
他们是至少在这个 Team

2534
01:16:30,000 --> 01:16:32,000
就是 Swift 这个 Team 是怎么做研究

2535
01:16:32,000 --> 01:16:33,000
怎么做开发

2536
01:16:33,000 --> 01:16:34,000
怎么做项目管理

2537
01:16:34,000 --> 01:16:35,000
怎么去

2538
01:16:37,000 --> 01:16:39,000
代码怎么一步一步搞出来的

2539
01:16:39,000 --> 01:16:40,000
就过去是看不到的

2540
01:16:40,000 --> 01:16:42,000
就其实还挺有意思的

2541
01:16:42,000 --> 01:16:45,000
这也可能跟最近这一两年

2542
01:16:45,000 --> 01:16:47,000
苹果整体上的一个开放的态度

2543
01:16:47,000 --> 01:16:50,000
还有点一个契合吧

2544
01:16:50,000 --> 01:16:52,000
就还比较难得可贵的一个机会

2545
01:16:53,000 --> 01:16:54,000
大家有兴趣可以去看一下

2546
01:16:55,000 --> 01:16:56,000
然后这次发布的

2547
01:16:56,000 --> 01:16:58,000
还有一个比较有趣的小东西

2548
01:16:58,000 --> 01:17:01,000
叫做 Swift Package Manager

2549
01:17:01,000 --> 01:17:04,000
就是 Swift 员的官方包管理器

2550
01:17:05,000 --> 01:17:06,000
为什么有趣呢

2551
01:17:06,000 --> 01:17:08,000
因为这个东西是

2552
01:17:08,000 --> 01:17:09,000
我们之前评问过的

2553
01:17:09,000 --> 01:17:10,000
Max Howell 写的

2554
01:17:10,000 --> 01:17:11,000
对

2555
01:17:12,000 --> 01:17:13,000
Max Howell 这个名字

2556
01:17:13,000 --> 01:17:15,000
你不熟悉的话

2557
01:17:15,000 --> 01:17:17,000
Max 上那个著名的包管

2558
01:17:17,000 --> 01:17:18,000
而且 Homebrew 是他写的

2559
01:17:19,000 --> 01:17:21,000
他之前还去面 Google

2560
01:17:21,000 --> 01:17:24,000
讨论过他面 Google 被拒的糗事

2561
01:17:25,000 --> 01:17:26,000
然后他是因为什么来着

2562
01:17:26,000 --> 01:17:27,000
他是因为在面试的时候

2563
01:17:27,000 --> 01:17:28,000
翻转二叉数

2564
01:17:29,000 --> 01:17:31,000
没有办法在白板上

2565
01:17:32,000 --> 01:17:35,000
写出手工写出翻转二叉数的算法

2566
01:17:37,000 --> 01:17:37,000
好吧

2567
01:17:37,000 --> 01:17:39,000
就是我也写不出来

2568
01:17:40,000 --> 01:17:42,000
不能去 Google 这种公司

2569
01:17:44,000 --> 01:17:45,000
所以这是他后来

2570
01:17:45,000 --> 01:17:47,000
他不是和我们说他后来去了苹果吗

2571
01:17:47,000 --> 01:17:49,000
然后你去了苹果

2572
01:17:49,000 --> 01:17:50,000
也不知道干什么

2573
01:17:50,000 --> 01:17:51,000
现在就知道他是在花时间

2574
01:17:51,000 --> 01:17:53,000
写 Swift Package Manager

2575
01:17:53,000 --> 01:17:55,000
其实想来其实还蛮合理的

2576
01:17:56,000 --> 01:17:57,000
物尽其用

2577
01:17:57,000 --> 01:17:58,000
做得挺好的

2578
01:17:58,000 --> 01:17:59,000
各尽其才

2579
01:18:00,000 --> 01:18:02,000
Swift 这次发布的话

2580
01:18:02,000 --> 01:18:04,000
大家想怎么就用它

2581
01:18:04,000 --> 01:18:06,000
可能很多人在设想的一个场景

2582
01:18:06,000 --> 01:18:07,000
就是说

2583
01:18:08,000 --> 01:18:13,000
现在不是移动端和服务端的

2584
01:18:13,000 --> 01:18:15,000
协同性要求比较高了吗

2585
01:18:15,000 --> 01:18:15,000
对吧

2586
01:18:15,000 --> 01:18:16,000
对

2587
01:18:16,000 --> 01:18:17,000
可能有一段代码

2588
01:18:17,000 --> 01:18:18,000
需要在客户端

2589
01:18:18,000 --> 01:18:21,000
就跟以前写那个 Web App 是一样的

2590
01:18:21,000 --> 01:18:22,000
比如说最简单的

2591
01:18:22,000 --> 01:18:25,000
你要有一个验证用户输入是否正确的

2592
01:18:25,000 --> 01:18:27,000
或者是否合法的一段代码

2593
01:18:27,000 --> 01:18:30,000
你可能会想在现在本地

2594
01:18:30,000 --> 01:18:31,000
就是客户端上跑

2595
01:18:31,000 --> 01:18:33,000
如果客户端是一个网页的话

2596
01:18:33,000 --> 01:18:35,000
就是在 JavaScript 里面跑

2597
01:18:35,000 --> 01:18:37,000
如果客户端是一个 iOS 应用

2598
01:18:37,000 --> 01:18:39,000
或者是在就是你用 Object C

2599
01:18:39,000 --> 01:18:40,000
或者 Swift 写

2600
01:18:40,000 --> 01:18:43,000
如果客户端是一个 Android 应用

2601
01:18:43,000 --> 01:18:45,000
你可能要用 Java 写对吧

2602
01:18:45,000 --> 01:18:47,000
但是同样一段代码和逻辑

2603
01:18:47,000 --> 01:18:49,000
你又希望在服务端重复一下

2604
01:18:49,000 --> 01:18:51,000
因为最终你还是要以服务端验证的结果为准

2605
01:18:51,000 --> 01:18:52,000
因为客户端可能

2606
01:18:52,000 --> 01:18:55,000
谁知道你会被搞了对吧

2607
01:18:55,000 --> 01:18:55,000
对

2608
01:18:56,000 --> 01:18:59,000
但过去的话

2609
01:18:59,000 --> 01:19:01,000
你如果做这个 Object C

2610
01:19:01,000 --> 01:19:04,000
没有人在服务器端用

2611
01:19:04,000 --> 01:19:07,000
已经没有人在服务器端用 Object C 了

2612
01:19:07,000 --> 01:19:08,000
对

2613
01:19:08,000 --> 01:19:12,000
所以你一定是说在服务器端用的一种语言

2614
01:19:12,000 --> 01:19:13,000
PHP 也好

2615
01:19:13,000 --> 01:19:13,000
JavaScript 也好

2616
01:19:13,000 --> 01:19:14,000
Python 也好

2617
01:19:14,000 --> 01:19:15,000
Ruby 也好

2618
01:19:15,000 --> 01:19:16,000
它的逻辑

2619
01:19:16,000 --> 01:19:20,000
你要在客户端在复述

2620
01:19:20,000 --> 01:19:21,000
就是从写一遍

2621
01:19:21,000 --> 01:19:23,000
就是挺容易找到这两个不一致

2622
01:19:23,000 --> 01:19:23,000
或者出错了

2623
01:19:24,000 --> 01:19:25,000
现在很多的想法就是说

2624
01:19:25,000 --> 01:19:27,000
其实那这样我可能很多代码就可以共享了

2625
01:19:27,000 --> 01:19:28,000
很多功能逻辑

2626
01:19:28,000 --> 01:19:34,000
如果根据对方设备的实际情况来考虑

2627
01:19:34,000 --> 01:19:36,000
是在客户端上运行

2628
01:19:36,000 --> 01:19:37,000
还是在服务端运行对吧

2629
01:19:37,000 --> 01:19:40,000
比如说比方说是一个比较老的机型

2630
01:19:40,000 --> 01:19:41,000
可能好像有点慢

2631
01:19:41,000 --> 01:19:43,000
那我能在服务端算完

2632
01:19:43,000 --> 01:19:44,000
就直接看下结果好了对吧

2633
01:19:44,000 --> 01:19:45,000
对

2634
01:19:45,000 --> 01:19:47,000
那如果说新的机型新的比较好

2635
01:19:47,000 --> 01:19:49,000
我可能直接在客户端算完之后

2636
01:19:49,000 --> 01:19:51,000
它可以有个更快的响应的速度

2637
01:19:52,000 --> 01:19:54,000
这些事情就可以做了

2638
01:19:54,000 --> 01:19:57,000
但是我后来想了一下这个事情怎么说

2639
01:19:57,000 --> 01:20:02,000
始终是一个很片面的事情

2640
01:20:02,000 --> 01:20:05,000
比如说你现在你国内假设你做一个应用

2641
01:20:05,000 --> 01:20:09,000
但你说你个人或者你只做 iOS 问题不大

2642
01:20:09,000 --> 01:20:11,000
但是基本上你要做一个稍微大的应用

2643
01:20:11,000 --> 01:20:12,000
你不可能只做 iOS

2644
01:20:12,000 --> 01:20:13,000
你还是要做安卓的

2645
01:20:14,000 --> 01:20:14,000
对

2646
01:20:15,000 --> 01:20:17,000
你是不是在安卓上怎么办

2647
01:20:17,000 --> 01:20:19,000
就是你的安卓应用是不是得写

2648
01:20:19,000 --> 01:20:20,000
对吧

2649
01:20:20,000 --> 01:20:22,000
所以其实还是逃不掉那个问题

2650
01:20:22,000 --> 01:20:24,000
所以反而是现在那些

2651
01:20:24,000 --> 01:20:25,000
JavaSphere

2652
01:20:25,000 --> 01:20:29,000
从这点上看可能生命力最强也是

2653
01:20:29,000 --> 01:20:31,000
就是反而是 JavaSphere

2654
01:20:31,000 --> 01:20:34,000
对通过 React Native 的方式来

2655
01:20:34,000 --> 01:20:36,000
可能反而会好一点

2656
01:20:37,000 --> 01:20:39,000
对但是怎么说

2657
01:20:39,000 --> 01:20:41,000
反正你刚才说这个问题

2658
01:20:41,000 --> 01:20:44,000
现在既有的方案基本就是

2659
01:20:44,000 --> 01:20:48,000
比如说在服务器端实现一套逻辑

2660
01:20:48,000 --> 01:20:51,000
然后生成客户端的代码

2661
01:20:51,000 --> 01:20:52,000
比如说服务器端是 Java

2662
01:20:52,000 --> 01:20:56,000
然后生成与这个逻辑一模一样的 JavaScript

2663
01:20:56,000 --> 01:20:58,000
然后部署到客户端上

2664
01:20:58,000 --> 01:21:01,000
Compile to JavaScript

2665
01:21:01,000 --> 01:21:01,000
对

2666
01:21:01,000 --> 01:21:02,000
要么就是

2667
01:21:02,000 --> 01:21:04,000
这也是一种方案

2668
01:21:04,000 --> 01:21:05,000
但是

2669
01:21:05,000 --> 01:21:07,000
要么就是都用 JavaScript

2670
01:21:08,000 --> 01:21:10,000
然后如果你只做苹果

2671
01:21:10,000 --> 01:21:12,000
如果你是这个

2672
01:21:14,000 --> 01:21:15,000
120%的果粉的话

2673
01:21:15,000 --> 01:21:16,000
你可以选择只用

2674
01:21:16,000 --> 01:21:18,000
也许在不远的将来

2675
01:21:18,000 --> 01:21:19,000
可以选择只用 Swift

2676
01:21:21,000 --> 01:21:26,000
但我觉得 Swift 的用力并不仅仅限于此

2677
01:21:28,000 --> 01:21:29,000
所以你觉得在你的构想中

2678
01:21:29,000 --> 01:21:30,000
还有什么其他的用力可以

2679
01:21:30,000 --> 01:21:33,000
因为我觉得 Swift 是作为一种

2680
01:21:33,000 --> 01:21:35,000
怎么说作为一种系统级别语言而生的

2681
01:21:35,000 --> 01:21:38,000
其实系统级别语言可以做的事情

2682
01:21:38,000 --> 01:21:40,000
远远超过 Web 的范畴

2683
01:21:42,000 --> 01:21:43,000
比如说

2684
01:21:43,000 --> 01:21:47,000
我觉得叫什么 Swift Line 之类的项目

2685
01:21:47,000 --> 01:21:50,000
就是支持什么用 Swift 来写命令行下面的工具

2686
01:21:52,000 --> 01:21:53,000
写一些

2687
01:21:53,000 --> 01:21:54,000
就跟 Web 完全没有关系的东西

2688
01:21:54,000 --> 01:21:55,000
就替代 C

2689
01:21:56,000 --> 01:21:57,000
对

2690
01:21:57,000 --> 01:21:58,000
它其实是一种

2691
01:21:58,000 --> 01:22:00,000
相对来说比较靠谱的系统级别语言

2692
01:22:02,000 --> 01:22:04,000
当然我的意思是

2693
01:22:04,000 --> 01:22:05,000
它可能

2694
01:22:06,000 --> 01:22:07,000
还达不到

2695
01:22:07,000 --> 01:22:10,000
比如说 Sgo 或者 Ca 这样的级别

2696
01:22:10,000 --> 01:22:12,000
但是它毕竟刚刚开始

2697
01:22:13,000 --> 01:22:14,000
3.0 还没有

2698
01:22:14,000 --> 01:22:16,000
还在 review

2699
01:22:16,000 --> 01:22:19,000
差以时日也许可以成长成一个

2700
01:22:19,000 --> 01:22:21,000
比较既优雅

2701
01:22:21,000 --> 01:22:22,000
对吧

2702
01:22:22,000 --> 01:22:24,000
又性感的这么一个编程语言

2703
01:22:26,000 --> 01:22:28,000
就这样看那个叫做 Adoption

2704
01:22:28,000 --> 01:22:30,000
就是社区到底对它支持怎么样

2705
01:22:30,000 --> 01:22:31,000
然后因为它毕竟

2706
01:22:31,000 --> 01:22:34,000
苹果它开放只是一些核心的组件

2707
01:22:34,000 --> 01:22:36,000
就像周边的那些第三方

2708
01:22:36,000 --> 01:22:39,000
包啊第三方库还是要靠社区去发布和维护

2709
01:22:40,000 --> 01:22:42,000
所以看社区对这个事情怎么想

2710
01:22:43,000 --> 01:22:44,000
这个让人想起

2711
01:22:45,000 --> 01:22:48,000
.net core library

2712
01:22:48,000 --> 01:22:50,000
在去年开源的时候的

2713
01:22:51,000 --> 01:22:53,000
类似的一些讨论

2714
01:22:53,000 --> 01:22:56,000
就是微软有这个愿景

2715
01:22:56,000 --> 01:22:57,000
现在很有趣

2716
01:22:57,000 --> 01:22:59,000
微软和 Apple 都在

2717
01:23:00,000 --> 01:23:02,000
GitHub 上面有一个用户

2718
01:23:03,000 --> 01:23:04,000
这个还

2719
01:23:04,000 --> 01:23:05,000
GitHub.slash

2720
01:23:05,000 --> 01:23:07,000
GitHub.slash Apple

2721
01:23:07,000 --> 01:23:09,000
GitHub.slash

2722
01:23:09,000 --> 01:23:11,000
GitHub.com slash Microsoft

2723
01:23:13,000 --> 01:23:14,000
挺违和的感觉

2724
01:23:14,000 --> 01:23:14,000
相当好

2725
01:23:15,000 --> 01:23:16,000
这么大的人公司

2726
01:23:16,000 --> 01:23:18,000
现在两家的主

2727
01:23:18,000 --> 01:23:22,000
就是起码微软的也现在也说要拥抱开源了

2728
01:23:22,000 --> 01:23:22,000
对吧

2729
01:23:22,000 --> 01:23:24,000
他也认识到这个

2730
01:23:24,000 --> 01:23:26,000
过去那套玩不玩不下去了

2731
01:23:27,000 --> 01:23:30,000
过去那套说 Linux 是 i 细胞的这个

2732
01:23:31,000 --> 01:23:31,000
不对

2733
01:23:31,000 --> 01:23:33,000
他是说 Linux 是 i 细胞还是说

2734
01:23:34,000 --> 01:23:35,000
自由软件应该是

2735
01:23:35,000 --> 01:23:36,000
他说 GPL

2736
01:23:36,000 --> 01:23:37,000
他说 GPL 是 i 细胞

2737
01:23:37,000 --> 01:23:39,000
GPL 确实是 i 细胞

2738
01:23:41,000 --> 01:23:41,000
好吧

2739
01:23:42,000 --> 01:23:43,000
对

2740
01:23:43,000 --> 01:23:44,000
我刚才说了

2741
01:23:45,000 --> 01:23:46,000
对和 C-Sharp 类似

2742
01:23:47,000 --> 01:23:49,000
C-Sharp 和 Swift 都是

2743
01:23:50,000 --> 01:23:52,000
我觉得蛮漂亮的女人

2744
01:23:52,000 --> 01:23:55,000
希望她们就此被放飞之后

2745
01:23:55,000 --> 01:23:56,000
可以有更大的作为

2746
01:23:56,000 --> 01:23:58,000
而且后面都有推手

2747
01:23:59,000 --> 01:24:01,000
比较大的财团对吧

2748
01:24:01,000 --> 01:24:03,000
我觉得前途应该是还是可以

2749
01:24:04,000 --> 01:24:06,000
可以观望一下

2750
01:24:06,000 --> 01:24:08,000
其实我个人

2751
01:24:08,000 --> 01:24:12,000
我比较关心 Swift 在写服务器端软件的应用

2752
01:24:12,000 --> 01:24:15,000
因为我之前用 Go 写过一些乱七八糟的小东西

2753
01:24:16,000 --> 01:24:18,000
然后我这么想

2754
01:24:18,000 --> 01:24:20,000
因为这两个语言的性质还是不太一样

2755
01:24:20,000 --> 01:24:22,000
因为 Go 它是一个相对来说

2756
01:24:22,000 --> 01:24:23,000
比较简单的语言

2757
01:24:23,000 --> 01:24:25,000
就没有很多复杂特性

2758
01:24:25,000 --> 01:24:27,000
然后它支持的一些

2759
01:24:27,000 --> 01:24:32,000
它的一些选择是很特殊的一种组合

2760
01:24:32,000 --> 01:24:34,000
比如说它是一个 GC

2761
01:24:34,000 --> 01:24:35,000
就是垃圾回收的语言

2762
01:24:35,000 --> 01:24:40,000
然后它对并发的支持比较良好

2763
01:24:40,000 --> 01:24:42,000
对 Web 的支持也比较不错

2764
01:24:42,000 --> 01:24:45,000
Swift 的话现在就不太一样

2765
01:24:45,000 --> 01:24:47,000
因为它是一个更加通融一点的语言

2766
01:24:47,000 --> 01:24:48,000
然后它没有 GC

2767
01:24:48,000 --> 01:24:51,000
它是用通过技术器的 reference counting 的方式

2768
01:24:51,000 --> 01:24:52,000
来做内存管理

2769
01:24:53,000 --> 01:24:56,000
然后就没有 GC 的暂停的问题

2770
01:24:57,000 --> 01:24:59,000
另外它起码在目前为止

2771
01:24:59,000 --> 01:25:03,000
它没有对并发做任何特殊的优化

2772
01:25:03,000 --> 01:25:05,000
对它的并发不是在原层面上支持

2773
01:25:05,000 --> 01:25:07,000
对不是原层面对并发的支持

2774
01:25:07,000 --> 01:25:10,000
它目前在 OS 10 上

2775
01:25:10,000 --> 01:25:12,000
是依赖原定叫做 LibDispatch

2776
01:25:12,000 --> 01:25:13,000
就是一个酷

2777
01:25:13,000 --> 01:25:14,000
然后来做

2778
01:25:14,000 --> 01:25:16,000
那么我如果

2779
01:25:16,000 --> 01:25:18,000
第一个自然来说问题就是说

2780
01:25:18,000 --> 01:25:22,000
如果做高并发的这种 Web 的软件的话

2781
01:25:23,000 --> 01:25:24,000
或者服务器软件的话

2782
01:25:25,000 --> 01:25:26,000
Swift 怎么弄

2783
01:25:26,000 --> 01:25:29,000
是说像 Event 的方式呢

2784
01:25:29,000 --> 01:25:31,000
还是说以后谁在实现一个轻量级的

2785
01:25:31,000 --> 01:25:34,000
类似于 Go 的那种现成的方式

2786
01:25:34,000 --> 01:25:35,000
就现在都还是未知的

2787
01:25:36,000 --> 01:25:37,000
这一块我觉得

2788
01:25:38,000 --> 01:25:42,000
还不太适合现在用它来写一些服务器上的应用

2789
01:25:42,000 --> 01:25:43,000
对

2790
01:25:43,000 --> 01:25:44,000
但之后

2791
01:25:44,000 --> 01:25:49,000
Swift 3.0 也没有涵盖任何和 concurrency 相关的东西

2792
01:25:49,000 --> 01:25:51,000
对这个其实我觉得还蛮失望的

2793
01:25:51,000 --> 01:25:52,000
因为毕竟现在

2794
01:25:53,000 --> 01:25:55,000
我们一个大致的认同

2795
01:25:55,000 --> 01:25:59,000
就是未来肯定是一个并发并行要特别考虑的时代

2796
01:26:00,000 --> 01:26:03,000
因为每个核不会变得更快了

2797
01:26:03,000 --> 01:26:04,000
只会说变得更多

2798
01:26:04,000 --> 01:26:06,000
所以怎么弄

2799
01:26:06,000 --> 01:26:07,000
怎么去适应这个环境

2800
01:26:07,000 --> 01:26:09,000
或者说怎么降低

2801
01:26:10,000 --> 01:26:14,000
开发者编写这种并发应用并行应用的难度

2802
01:26:14,000 --> 01:26:17,000
其实 Swift 没有给出他自己的答案

2803
01:26:17,000 --> 01:26:17,000
我觉得

2804
01:26:17,000 --> 01:26:18,000
对

2805
01:26:19,000 --> 01:26:21,000
总之这个燕子目前还是太嫩了

2806
01:26:21,000 --> 01:26:23,000
就还是要观望一下

2807
01:26:23,000 --> 01:26:24,000
观望一下

2808
01:26:25,000 --> 01:26:27,000
刚才说到 Swift 3.0

2809
01:26:27,000 --> 01:26:28,000
是他们明年年末

2810
01:26:28,000 --> 01:26:31,000
就是从现在开始一年之后要发布的一个大版本

2811
01:26:31,000 --> 01:26:34,000
说是 2016 年秋天没有记错的话

2812
01:26:35,000 --> 01:26:37,000
反正就是一年以后了至少

2813
01:26:37,000 --> 01:26:37,000
对

2814
01:26:37,000 --> 01:26:38,000
然后

2815
01:26:39,000 --> 01:26:41,000
会有一些语言层面的变动

2816
01:26:41,000 --> 01:26:44,000
其实 Swift 到现在为止出来这么多版本

2817
01:26:44,000 --> 01:26:46,000
一直都在折腾语言层面的变化

2818
01:26:47,000 --> 01:26:47,000
对

2819
01:26:47,000 --> 01:26:50,000
其实从最开始的 demo 一直到现在

2820
01:26:50,000 --> 01:26:54,000
这个原特性已经有相当程度上的变化

2821
01:26:54,000 --> 01:26:57,000
如果你做一个 now and then 的对比的话

2822
01:26:57,000 --> 01:26:58,000
对

2823
01:26:58,000 --> 01:26:59,000
所以先

2824
01:26:59,000 --> 01:27:00,000
3.0 也一样

2825
01:27:00,000 --> 01:27:02,000
3.0 有可能会给做出一些

2826
01:27:02,000 --> 01:27:05,000
就是直接打破相互健生性的改动

2827
01:27:05,000 --> 01:27:06,000
就一定的

2828
01:27:07,000 --> 01:27:08,000
对于一个新语言来说

2829
01:27:08,000 --> 01:27:10,000
这还是挺正常的

2830
01:27:11,000 --> 01:27:11,000
对

2831
01:27:11,000 --> 01:27:13,000
但是起码有这套工具链了

2832
01:27:13,000 --> 01:27:16,000
然后我可以说我能够写一个

2833
01:27:16,000 --> 01:27:18,000
小应用出来玩一下

2834
01:27:18,000 --> 01:27:21,000
然后丢到这个 Linux 的服务器上一直跑着

2835
01:27:21,000 --> 01:27:22,000
然后

2836
01:27:22,000 --> 01:27:26,000
因为我的兴趣点还是在写服务端软件上面

2837
01:27:27,000 --> 01:27:28,000
所以还知道以前不可能

2838
01:27:28,000 --> 01:27:29,000
现在至少可能了

2839
01:27:30,000 --> 01:27:32,000
然后因为还有 Swift

2840
01:27:32,000 --> 01:27:34,000
它是写出来是一个怎么说的

2841
01:27:34,000 --> 01:27:35,000
它不带一个 round time

2842
01:27:35,000 --> 01:27:37,000
它没有 GC 那套机制

2843
01:27:37,000 --> 01:27:39,000
它生成的 Binary 还比较小

2844
01:27:39,000 --> 01:27:41,000
比如说最简单

2845
01:27:41,000 --> 01:27:43,000
我们都写一个 print

2846
01:27:43,000 --> 01:27:44,000
Hello World 这么一个应用

2847
01:27:44,000 --> 01:27:48,000
Swift 编译出来在 X 64 上

2848
01:27:48,000 --> 01:27:51,000
就是一个不到 10 K 的 Binary

2849
01:27:52,000 --> 01:27:53,000
但是你用 Go 写的话

2850
01:27:54,000 --> 01:27:57,000
出来就是一兆多两兆的一个 Binary

2851
01:27:57,000 --> 01:27:59,000
因为它里面还包含了整个 Go 的 round time

2852
01:27:59,000 --> 01:28:01,000
Go 是 Binary Inclusive

2853
01:28:02,000 --> 01:28:04,000
有 round time 有 GC 那套机制

2854
01:28:04,000 --> 01:28:07,000
所以如果你想写那些小的那种

2855
01:28:07,000 --> 01:28:08,000
就 Utility

2856
01:28:08,000 --> 01:28:09,000
就工具型的应用的话

2857
01:28:09,000 --> 01:28:11,000
Suzi 是一个非常不错的选择

2858
01:28:13,000 --> 01:28:13,000
好吧

2859
01:28:14,000 --> 01:28:15,000
Swift 的事就先聊到这

2860
01:28:16,000 --> 01:28:18,000
还有一个重大的新闻

2861
01:28:18,000 --> 01:28:20,000
就是我们我也一直很关注的

2862
01:28:20,000 --> 01:28:21,000
Let's Encrypt

2863
01:28:23,000 --> 01:28:24,000
开放的

2864
01:28:26,000 --> 01:28:29,000
开放的 SSL 一个 CA

2865
01:28:29,000 --> 01:28:30,000
开始公测了

2866
01:28:31,000 --> 01:28:32,000
之前我们提到过

2867
01:28:32,000 --> 01:28:35,000
它是说因为过去证书是要钱的

2868
01:28:35,000 --> 01:28:38,000
有一些不要钱的那种 SSL 证书的发放商

2869
01:28:38,000 --> 01:28:39,000
像 StartSSL

2870
01:28:39,000 --> 01:28:41,000
它那些界面不是很好使

2871
01:28:41,000 --> 01:28:42,000
然后也很麻烦

2872
01:28:43,000 --> 01:28:45,000
Let's Encrypt 要解决这个问题

2873
01:28:45,000 --> 01:28:48,000
让大家都能免费的用上 SSL 证书

2874
01:28:50,000 --> 01:28:52,000
进行加密的 HTPS 通信

2875
01:28:53,000 --> 01:28:56,000
然后同时又可以把证书的生成

2876
01:28:57,000 --> 01:28:58,000
替换自动化掉

2877
01:28:58,000 --> 01:29:01,000
它整套机制是做这么一件事的

2878
01:29:01,000 --> 01:29:06,000
之前说是 9 月份开始公测

2879
01:29:06,000 --> 01:29:07,000
就拖了到了 12 月份

2880
01:29:08,000 --> 01:29:09,000
但是好歹也开始用了

2881
01:29:10,000 --> 01:29:11,000
然后如果有兴趣的话

2882
01:29:11,000 --> 01:29:12,000
大家可以去看一下

2883
01:29:13,000 --> 01:29:16,000
不介意现在马上部署到生产环境里面去

2884
01:29:16,000 --> 01:29:21,000
可以在一些无关痛痒的地方先弄一下

2885
01:29:23,000 --> 01:29:26,000
我记得那天 Let's Encrypt 开放公测的时候

2886
01:29:26,000 --> 01:29:28,000
是谁在推特上说一句

2887
01:29:28,000 --> 01:29:33,000
说 Let's Encrypt 简直就是科技圈的亡风

2888
01:29:33,000 --> 01:29:38,000
每次要上头条就遇到别的大新了

2889
01:29:38,000 --> 01:29:40,000
上一次就是 Swift 开源

2890
01:29:40,000 --> 01:29:44,000
把 Let's Encrypt 公测的风头完全压下去

2891
01:29:44,000 --> 01:29:50,000
接下来的新闻也是一个语言的更新的新闻

2892
01:29:51,000 --> 01:29:52,000
我们真的要说它吗

2893
01:29:52,000 --> 01:29:54,000
说吧这两个是很重要的

2894
01:29:56,000 --> 01:29:57,000
PHP 7

2895
01:29:59,000 --> 01:30:00,000
说出来都走音了

2896
01:30:01,000 --> 01:30:03,000
PHP 发布了第 7 版

2897
01:30:03,000 --> 01:30:05,000
所以这版有什么变化

2898
01:30:07,000 --> 01:30:08,000
我不知道你的反应是什么

2899
01:30:08,000 --> 01:30:09,000
我的第一反应是 The fuck

2900
01:30:10,000 --> 01:30:11,000
PHP 6 怎么了

2901
01:30:11,000 --> 01:30:12,000
有 6 吗

2902
01:30:12,000 --> 01:30:14,000
为什么突然变成了 PHP 6

2903
01:30:14,000 --> 01:30:15,000
发布过 6 是吧

2904
01:30:16,000 --> 01:30:19,000
原来你比我还那个

2905
01:30:19,000 --> 01:30:21,000
因为我知道我最后一次接收 PHP

2906
01:30:21,000 --> 01:30:23,000
它是 5.0 的时代

2907
01:30:23,000 --> 01:30:25,000
对所以也有些年头了

2908
01:30:26,000 --> 01:30:26,000
OK

2909
01:30:27,000 --> 01:30:27,000
好吧

2910
01:30:28,000 --> 01:30:29,000
PHP 4.0 是一坨屎

2911
01:30:29,000 --> 01:30:33,000
5.0 是不那么臭的屎

2912
01:30:33,000 --> 01:30:36,000
但是到什么 5.3 5.4 其实就还不错了

2913
01:30:36,000 --> 01:30:39,000
然后 PHP 6 其实是有点像

2914
01:30:40,000 --> 01:30:41,000
像 Python 3

2915
01:30:41,000 --> 01:30:45,000
就是 PHP 6 试图解决了一个最大的

2916
01:30:45,000 --> 01:30:46,000
PHP 的痛点

2917
01:30:46,000 --> 01:30:48,000
就是 unicode 支持

2918
01:30:49,000 --> 01:30:51,000
但是 PHP 6 一直难产

2919
01:30:51,000 --> 01:30:55,000
因为跟他们的核心开发者

2920
01:30:55,000 --> 01:30:58,000
incompetent 无能有关

2921
01:30:58,000 --> 01:31:00,000
对这群人

2922
01:31:00,000 --> 01:31:01,000
当然他们无能

2923
01:31:02,000 --> 01:31:03,000
接下来我们要介绍到

2924
01:31:03,000 --> 01:31:05,000
很可能不是能力上的无能

2925
01:31:05,000 --> 01:31:07,000
而是一个制度上的无能

2926
01:31:08,000 --> 01:31:11,000
他们 6.0 一直做不出来

2927
01:31:11,000 --> 01:31:16,000
然后被迫把给 65 开发的许多新特性

2928
01:31:16,000 --> 01:31:18,000
一点点 backport 到 PHP 5 里

2929
01:31:19,000 --> 01:31:22,000
然后 PHP 5.3 5.4

2930
01:31:23,000 --> 01:31:25,000
乃至接下来 whatever 的什么版本里面

2931
01:31:25,000 --> 01:31:27,000
其实都有很多新特性是

2932
01:31:27,000 --> 01:31:29,000
来自于原本计划的 PHP 6

2933
01:31:29,000 --> 01:31:32,000
所以其实有 PHP 6 这个版本发布过吗

2934
01:31:33,000 --> 01:31:36,000
但是问题就在于 PHP 6

2935
01:31:36,000 --> 01:31:39,000
你们从来没有一个正式的

2936
01:31:40,000 --> 01:31:43,000
我记得 2005 还是 06 年的时候

2937
01:31:43,000 --> 01:31:45,000
他们希望 2009 年的时候

2938
01:31:45,000 --> 01:31:47,000
大家都迁移到 PHP 6 上

2939
01:31:47,000 --> 01:31:49,000
也不可能

2940
01:31:49,000 --> 01:31:51,000
而 9 年之后

2941
01:31:51,000 --> 01:31:53,000
我们 6 年之后

2942
01:31:53,000 --> 01:31:55,000
我们看这扯蛋去吧

2943
01:31:55,000 --> 01:31:57,000
这绝大部分 PHP 程序员可能

2944
01:31:59,000 --> 01:32:01,000
连 5 和 6 之间有什么差别都弄不清楚

2945
01:32:01,000 --> 01:32:06,000
那天连 5.0 5.1 5.2 5.3 的区别

2946
01:32:06,000 --> 01:32:09,000
估计都没有很多能解释的清楚

2947
01:32:11,000 --> 01:32:13,000
然后我觉得 PHP 程序员其实有一种

2948
01:32:13,000 --> 01:32:16,000
当然不是说亲爱的你

2949
01:32:16,000 --> 01:32:17,000
你这位 PHP 程序员

2950
01:32:18,000 --> 01:32:19,000
不要觉得被冒犯

2951
01:32:19,000 --> 01:32:21,000
我们是说另外一些 PHP 程序员

2952
01:32:21,000 --> 01:32:26,000
他们在写 PHP 程序的时候

2953
01:32:26,000 --> 01:32:29,000
基本上就是看到 warning

2954
01:32:30,000 --> 01:32:32,000
就把 warning 关掉

2955
01:32:33,000 --> 01:32:36,000
然后不管开发的时候有多少 warning

2956
01:32:36,000 --> 01:32:38,000
只要把 warning 关掉之后

2957
01:32:38,000 --> 01:32:38,000
看不到 warning

2958
01:32:38,000 --> 01:32:40,000
他们就认为这个代码是可以跑的

2959
01:32:40,000 --> 01:32:42,000
所以你给这些人说什么

2960
01:32:42,000 --> 01:32:46,000
这个特性下一版本就要废掉了

2961
01:32:46,000 --> 01:32:49,000
简直是让他们觉得不可接受的

2962
01:32:51,000 --> 01:32:52,000
总之我觉得就是这样

2963
01:32:52,000 --> 01:32:57,000
就 PHP 程序员有很多白痴

2964
01:32:57,000 --> 01:33:01,000
你跟这些人讲到的讲不清楚

2965
01:33:01,000 --> 01:33:03,000
所以核心开发者也没有办法

2966
01:33:03,000 --> 01:33:06,000
就是强势的去推动这样一群人

2967
01:33:06,000 --> 01:33:07,000
推不动

2968
01:33:07,000 --> 01:33:10,000
你想这么大规模的部署量怎么可能

2969
01:33:10,000 --> 01:33:12,000
就好像 Python 图二转三一样

2970
01:33:12,000 --> 01:33:15,000
这么多年好像也没这么成功

2971
01:33:16,000 --> 01:33:18,000
所以就像我们在

2972
01:33:19,000 --> 01:33:21,000
或者说就像 Python 社区

2973
01:33:21,000 --> 01:33:23,000
不得不把很多三的现代性

2974
01:33:23,000 --> 01:33:25,000
by-quotes 到 2.7 里面一样

2975
01:33:26,000 --> 01:33:31,000
PHP 也是很多六个新特性 by-quotes 到 PHP 5

2976
01:33:31,000 --> 01:33:32,000
但是这就有一个问题

2977
01:33:32,000 --> 01:33:34,000
根本没有动力升级

2978
01:33:35,000 --> 01:33:40,000
新一代的 PHP NG 应该用什么版本

2979
01:33:40,000 --> 01:33:42,000
然后去年的时候

2980
01:33:42,000 --> 01:33:43,000
PHP 社区有一个讨论

2981
01:33:43,000 --> 01:33:47,000
就说新的 PHP NG 就叫 PHP 7 号

2982
01:33:48,000 --> 01:33:50,000
NG 就是 next generation

2983
01:33:50,000 --> 01:33:53,000
所以新版的 PHP 就是 PHP 7

2984
01:33:53,000 --> 01:33:57,000
所以如果你对 PHP 感兴趣的话

2985
01:33:57,000 --> 01:33:59,000
然后你说现在有三个并存版本

2986
01:33:59,000 --> 01:34:00,000
5 6 和 7

2987
01:34:00,000 --> 01:34:01,000
我应该用哪个版本

2988
01:34:01,000 --> 01:34:02,000
答案是用 7

2989
01:34:03,000 --> 01:34:05,000
或者说我从 5 要迁移

2990
01:34:05,000 --> 01:34:06,000
我迁移到哪

2991
01:34:06,000 --> 01:34:08,000
答案是迁移到 7

2992
01:34:08,000 --> 01:34:09,000
而不是到 6

2993
01:34:09,000 --> 01:34:14,000
因为 6 很有可能就不再会继续

2994
01:34:14,000 --> 01:34:14,000
对

2995
01:34:14,000 --> 01:34:15,000
OK

2996
01:34:16,000 --> 01:34:17,000
所以总体来说

2997
01:34:17,000 --> 01:34:20,000
那 7 到底有什么新特性是比较好的

2998
01:34:20,000 --> 01:34:21,000
有意思的

2999
01:34:22,000 --> 01:34:25,000
语言层面上的新特性是

3000
01:34:25,000 --> 01:34:27,000
怎么说呢

3001
01:34:29,000 --> 01:34:32,000
好像有一些是会弄坏现有代码

3002
01:34:32,000 --> 01:34:33,000
比如说

3003
01:34:33,000 --> 01:34:34,000
就没有像还有兼容

3004
01:34:34,000 --> 01:34:36,000
这个我已经有心理意气了

3005
01:34:36,000 --> 01:34:37,000
无所谓

3006
01:34:37,000 --> 01:34:39,000
有什么好玩的特性

3007
01:34:39,000 --> 01:34:39,000
但是

3008
01:34:39,000 --> 01:34:41,000
有一个好玩的特性是

3009
01:34:41,000 --> 01:34:43,000
the spaceship operator

3010
01:34:43,000 --> 01:34:44,000
这是干什么的

3011
01:34:44,000 --> 01:34:46,000
太空船预计服

3012
01:34:47,000 --> 01:34:47,000
对

3013
01:34:47,000 --> 01:34:48,000
他的写法是一个小月号

3014
01:34:48,000 --> 01:34:49,000
一个等月号

3015
01:34:49,000 --> 01:34:49,000
一个大月号

3016
01:34:49,000 --> 01:34:51,000
这个做什么

3017
01:34:52,000 --> 01:34:56,000
我觉得我们现在可以拿出那个 php 的锤子来了

3018
01:34:56,000 --> 01:35:03,000
就是两边都是起钉子的那个弯曲的翘的锤子

3019
01:35:03,000 --> 01:35:08,000
就是有很多这样无去解无用的东西

3020
01:35:08,000 --> 01:35:11,000
我觉得就是它这个 spaceship operator

3021
01:35:11,000 --> 01:35:17,000
其实就是一个 comparator 运算符

3022
01:35:17,000 --> 01:35:22,000
就是它会返回它左右两侧的参数之间的关系

3023
01:35:22,000 --> 01:35:25,000
如果是小的话就返回负一

3024
01:35:25,000 --> 01:35:27,000
如果是相等的话就是返回零

3025
01:35:27,000 --> 01:35:29,000
如果是大于的话就想返回一

3026
01:35:31,000 --> 01:35:32,000
对

3027
01:35:32,000 --> 01:35:32,000
what

3028
01:35:32,000 --> 01:35:34,000
为什么会有这种意思

3029
01:35:34,000 --> 01:35:34,000
是不是

3030
01:35:35,000 --> 01:35:37,000
对为什么要做出这样的东西来

3031
01:35:37,000 --> 01:35:39,000
就你不知道吧

3032
01:35:39,000 --> 01:35:41,000
就不可理喻

3033
01:35:41,000 --> 01:35:42,000
我觉得

3034
01:35:44,000 --> 01:35:44,000
好吧

3035
01:35:44,000 --> 01:35:45,000
好吧

3036
01:35:45,000 --> 01:35:50,000
我们从现在开始换回比较客观的态度

3037
01:35:51,000 --> 01:35:54,000
另外一个新特性是比如说叫

3038
01:35:55,000 --> 01:35:56,000
他们官方的名字叫什么

3039
01:35:56,000 --> 01:36:01,000
Null Call a Listing 之类的一个名字

3040
01:36:01,000 --> 01:36:03,000
就是问号问号

3041
01:36:04,000 --> 01:36:04,000
OK

3042
01:36:04,000 --> 01:36:05,000
这回是做什么

3043
01:36:05,000 --> 01:36:07,000
问号问号的

3044
01:36:07,000 --> 01:36:10,000
因为写 php 的时候你经常会需要去判断

3045
01:36:10,000 --> 01:36:12,000
一个值是不是被设定了

3046
01:36:12,000 --> 01:36:15,000
你要调用一个函数叫做 is set

3047
01:36:16,000 --> 01:36:17,000
就所谓被设定

3048
01:36:17,000 --> 01:36:20,000
就是它不是未复制到状态

3049
01:36:20,000 --> 01:36:21,000
其实就是

3050
01:36:21,000 --> 01:36:21,000
对

3051
01:36:21,000 --> 01:36:23,000
其实就是那个

3052
01:36:23,000 --> 01:36:24,000
SWIFT 里面那个

3053
01:36:24,000 --> 01:36:25,000
optional type

3054
01:36:25,000 --> 01:36:27,000
对 optional type

3055
01:36:27,000 --> 01:36:28,000
然后

3056
01:36:29,000 --> 01:36:32,000
这个 pattern 因为被用的太多了

3057
01:36:32,000 --> 01:36:33,000
所以他们专门做了一个

3058
01:36:33,000 --> 01:36:35,000
运算服务

3059
01:36:35,000 --> 01:36:36,000
就是两个问号

3060
01:36:36,000 --> 01:36:38,000
比如说你前面写一个

3061
01:36:38,000 --> 01:36:40,000
你要判断 get query 里面

3062
01:36:40,000 --> 01:36:42,000
user variable 是不是存在

3063
01:36:42,000 --> 01:36:45,000
你之前可能会写 is set

3064
01:36:45,000 --> 01:36:47,000
get user

3065
01:36:47,000 --> 01:36:49,000
而现在你可以写 get user

3066
01:36:49,000 --> 01:36:50,000
问号问号

3067
01:36:50,000 --> 01:36:51,000
如果没有设定的话

3068
01:36:51,000 --> 01:36:53,000
后面有个缺乏就是 no one

3069
01:36:53,000 --> 01:36:54,000
就比如说

3070
01:36:55,000 --> 01:36:57,000
这有点像 JavaScript 常用的 pattern

3071
01:36:57,000 --> 01:36:58,000
就是

3072
01:37:00,000 --> 01:37:01,000
A 等于 B

3073
01:37:01,000 --> 01:37:03,000
然后或者

3074
01:37:03,000 --> 01:37:04,000
C

3075
01:37:04,000 --> 01:37:05,000
如果 B 没被设定的话

3076
01:37:05,000 --> 01:37:07,000
那 A 就会被付给 C 的值

3077
01:37:08,000 --> 01:37:09,000
大概是这样一个用户

3078
01:37:09,000 --> 01:37:10,000
那我问你

3079
01:37:10,000 --> 01:37:12,000
如果说他前面 pattern 是空的话

3080
01:37:12,000 --> 01:37:14,000
那 username 等于什么

3081
01:37:16,000 --> 01:37:17,000
等于 nobody

3082
01:37:19,000 --> 01:37:20,000
我刚才说

3083
01:37:20,000 --> 01:37:22,000
如果 get 里面的 user

3084
01:37:23,000 --> 01:37:24,000
好吧

3085
01:37:24,000 --> 01:37:24,000
写法是这样的

3086
01:37:24,000 --> 01:37:26,000
dollar get

3087
01:37:26,000 --> 01:37:29,000
然后 area accessor 里面写 user

3088
01:37:29,000 --> 01:37:31,000
然后问号问号

3089
01:37:31,000 --> 01:37:33,000
后面写一个字出来 nobody

3090
01:37:33,000 --> 01:37:34,000
所以意思就是

3091
01:37:34,000 --> 01:37:37,000
如果前面 get area 里面的

3092
01:37:37,000 --> 01:37:38,000
这个 user

3093
01:37:38,000 --> 01:37:40,000
now 的话就是 nobody

3094
01:37:41,000 --> 01:37:41,000
对

3095
01:37:41,000 --> 01:37:43,000
如果他设定的话就是那个值

3096
01:37:43,000 --> 01:37:44,000
有个蛋那个值是什么

3097
01:37:44,000 --> 01:37:45,000
就不知道

3098
01:37:45,000 --> 01:37:46,000
没错

3099
01:37:47,000 --> 01:37:49,000
就他做了一个 optional type 其实

3100
01:37:50,000 --> 01:37:52,000
其实就是相当于 Lua

3101
01:37:52,000 --> 01:37:54,000
或者是 JavaScript 里面的 or

3102
01:37:56,000 --> 01:37:57,000
or 就是

3103
01:37:57,000 --> 01:37:59,000
写 Lua 也会有这样的场景

3104
01:37:59,000 --> 01:38:02,000
就是你会不知道一个值是否为设定

3105
01:38:02,000 --> 01:38:03,000
然后你要提供一个确诊值

3106
01:38:04,000 --> 01:38:05,000
然后 Lua 的写法就是

3107
01:38:05,000 --> 01:38:07,000
A or or B

3108
01:38:07,000 --> 01:38:08,000
还不一样

3109
01:38:08,000 --> 01:38:09,000
你那 or 的话

3110
01:38:09,000 --> 01:38:11,000
他会对那个进行逻辑判断

3111
01:38:11,000 --> 01:38:13,000
但这个也是非常奇怪一件事

3112
01:38:13,000 --> 01:38:13,000
就是

3113
01:38:15,000 --> 01:38:16,000
你逻辑判断什么

3114
01:38:16,000 --> 01:38:18,000
就是你拿到那个值

3115
01:38:18,000 --> 01:38:19,000
什么你 A or B

3116
01:38:19,000 --> 01:38:22,000
他一定是前面 A 是为 force 的时候

3117
01:38:22,000 --> 01:38:23,000
你才会执行 B 嘛

3118
01:38:23,000 --> 01:38:23,000
对吧

3119
01:38:23,000 --> 01:38:24,000
才会得到 B 嘛

3120
01:38:24,000 --> 01:38:26,000
那么你怎么判断 A 为 force

3121
01:38:26,000 --> 01:38:28,000
或者为假呢

3122
01:38:28,000 --> 01:38:30,000
就牵涉到一个那个叫什么来的

3123
01:38:30,000 --> 01:38:31,000
那个叫

3124
01:38:32,000 --> 01:38:33,000
这里有一个这个问题

3125
01:38:33,000 --> 01:38:34,000
就是这个语言

3126
01:38:34,000 --> 01:38:36,000
如果他的布尔运算符

3127
01:38:36,000 --> 01:38:37,000
言不言

3128
01:38:37,000 --> 01:38:40,000
物质是返回一个布尔类型的话

3129
01:38:41,000 --> 01:38:42,000
这个就可以就是可以这么滥用的

3130
01:38:42,000 --> 01:38:45,000
这个在很多动态里面

3131
01:38:45,000 --> 01:38:46,000
动态语言里面都是这样

3132
01:38:46,000 --> 01:38:49,000
他只要求前面那个值是一个

3133
01:38:49,000 --> 01:38:50,000
就是 force 的值就可以

3134
01:38:50,000 --> 01:38:51,000
false

3135
01:38:51,000 --> 01:38:53,000
false 就是 false 加 y

3136
01:38:53,000 --> 01:38:56,000
false 就是类似于假的值

3137
01:38:56,000 --> 01:38:57,000
他就可以

3138
01:38:57,000 --> 01:39:01,000
但其实这个是类型不严谨的一种设计

3139
01:39:01,000 --> 01:39:04,000
对这基本上只有在弱类型的语言上可以用

3140
01:39:04,000 --> 01:39:04,000
好吧

3141
01:39:05,000 --> 01:39:06,000
不过

3142
01:39:07,000 --> 01:39:09,000
PHP 这种

3143
01:39:09,000 --> 01:39:11,000
PHP 这种叫什么呢

3144
01:39:11,000 --> 01:39:14,000
这种语言设计的方式也是挺令人奇特的

3145
01:39:14,000 --> 01:39:15,000
我们社区需要什么

3146
01:39:15,000 --> 01:39:16,000
我们就加进去什么

3147
01:39:16,000 --> 01:39:18,000
完全不考虑

3148
01:39:18,000 --> 01:39:21,000
后果或者考虑这个统一性怎么样

3149
01:39:22,000 --> 01:39:25,000
我觉得这其实这就是我们这次要说的

3150
01:39:25,000 --> 01:39:26,000
就是 PHP 的社区

3151
01:39:26,000 --> 01:39:28,000
为什么会有今天这个问题

3152
01:39:28,000 --> 01:39:29,000
其实

3153
01:39:30,000 --> 01:39:33,000
最简单的原因就是 PHP 社区是一个没有

3154
01:39:33,000 --> 01:39:34,000
群龙无首

3155
01:39:34,000 --> 01:39:35,000
嗯

3156
01:39:36,000 --> 01:39:38,000
对他们缺乏一个像

3157
01:39:38,000 --> 01:39:40,000
古裕斗那样的所谓什么

3158
01:39:41,000 --> 01:39:43,000
benevolent dictator

3159
01:39:43,000 --> 01:39:44,000
for life

3160
01:39:44,000 --> 01:39:46,000
就是对 for life

3161
01:39:46,000 --> 01:39:47,000
对

3162
01:39:47,000 --> 01:39:48,000
他们没有一个铁腕式的人物

3163
01:39:48,000 --> 01:39:50,000
可以明确地说

3164
01:39:50,000 --> 01:39:53,000
这个语言应该有一个什么样的明确的性能

3165
01:39:54,000 --> 01:39:56,000
很有趣的一点就是 PHP 开发者社区

3166
01:39:56,000 --> 01:39:58,000
核心开发者社区

3167
01:39:58,000 --> 01:39:59,000
是否做新特性的时候

3168
01:39:59,000 --> 01:40:00,000
他们是要投票的

3169
01:40:02,000 --> 01:40:04,000
就是你要做一个大的更改

3170
01:40:04,000 --> 01:40:07,000
你需要获得三分之二的多数

3171
01:40:07,000 --> 01:40:09,000
才可以把这个大更改做进去

3172
01:40:10,000 --> 01:40:11,000
那就是 design by committee 吗

3173
01:40:12,000 --> 01:40:13,000
对

3174
01:40:13,000 --> 01:40:14,000
这个就导致一个现象

3175
01:40:14,000 --> 01:40:16,000
就是很多平时

3176
01:40:16,000 --> 01:40:17,000
根本不 care 的人

3177
01:40:19,000 --> 01:40:21,000
你去问他们投票的意见

3178
01:40:21,000 --> 01:40:22,000
他们就会说我靠做这个干嘛

3179
01:40:22,000 --> 01:40:23,000
烦不烦

3180
01:40:24,000 --> 01:40:25,000
不做

3181
01:40:25,000 --> 01:40:26,000
然后就投反对票

3182
01:40:27,000 --> 01:40:29,000
很多比较新特性都是因为这个

3183
01:40:29,000 --> 01:40:32,000
就没有拿到多数

3184
01:40:32,000 --> 01:40:35,000
然后就太俗众了

3185
01:40:35,000 --> 01:40:37,000
然后 2013 年的时候

3186
01:40:37,000 --> 01:40:38,000
一个人就此写了一篇文章

3187
01:40:38,000 --> 01:40:41,000
题目也写得非常有趣

3188
01:40:41,000 --> 01:40:43,000
叫做 php 6

3189
01:40:43,000 --> 01:40:44,000
王号

3190
01:40:45,000 --> 01:40:46,000
pissing in the wind

3191
01:40:48,000 --> 01:40:50,000
逆风而尿

3192
01:40:54,000 --> 01:40:55,000
而且有意思的是

3193
01:40:55,000 --> 01:40:57,000
你在网上搜 php 6

3194
01:40:58,000 --> 01:41:00,000
如果原设定是英语的话

3195
01:41:00,000 --> 01:41:02,000
这个将是第一个结果

3196
01:41:04,000 --> 01:41:05,000
我觉得

3197
01:41:06,000 --> 01:41:08,000
一个语言混到今天这一步也真是

3198
01:41:08,000 --> 01:41:09,000
不容易

3199
01:41:09,000 --> 01:41:10,000
然后他提出一些观点

3200
01:41:10,000 --> 01:41:13,000
或者说他作为一个核心开发者

3201
01:41:13,000 --> 01:41:14,000
提出一些洞见

3202
01:41:14,000 --> 01:41:15,000
就是说

3203
01:41:16,000 --> 01:41:20,000
php 核心开发者的社区缺乏一种

3204
01:41:22,000 --> 01:41:23,000
clear vision

3205
01:41:23,000 --> 01:41:26,000
就是明确的眼界

3206
01:41:26,000 --> 01:41:29,000
所给这个语言导致的

3207
01:41:30,000 --> 01:41:33,000
把语言带到了今天这个境里

3208
01:41:33,000 --> 01:41:34,000
其实都是

3209
01:41:34,000 --> 01:41:34,000
怎么说

3210
01:41:34,000 --> 01:41:35,000
咎由自取

3211
01:41:35,000 --> 01:41:37,000
然后他其中给了一个链接

3212
01:41:37,000 --> 01:41:38,000
就是

3213
01:41:39,000 --> 01:41:41,000
他们 php core developer

3214
01:41:41,000 --> 01:41:43,000
内部的一个邮件列表里面的一些对话

3215
01:41:44,000 --> 01:41:47,000
首先这封邮件写的火气就非常大

3216
01:41:47,000 --> 01:41:48,000
然后

3217
01:41:49,000 --> 01:41:51,000
他里面揭露一个问题

3218
01:41:51,000 --> 01:41:53,000
就是说连这个

3219
01:41:53,000 --> 01:41:54,000
php cover 叫什么

3220
01:41:54,000 --> 01:41:55,000
osmos

3221
01:41:55,000 --> 01:41:57,000
都没有一个明确的目标

3222
01:41:57,000 --> 01:42:00,000
就是 php 到底应该做成一个什么样的范式语言

3223
01:42:00,000 --> 01:42:02,000
对此有三种态度

3224
01:42:02,000 --> 01:42:03,000
然后一个是说

3225
01:42:03,000 --> 01:42:04,000
我们 php 竟然做成偶的语言

3226
01:42:04,000 --> 01:42:06,000
就是面条对象的

3227
01:42:06,000 --> 01:42:07,000
然后另外一个就是

3228
01:42:07,000 --> 01:42:08,000
我们应该明确的摒弃偶

3229
01:42:08,000 --> 01:42:09,000
或者说

3230
01:42:10,000 --> 01:42:11,000
提供一些偶的特性

3231
01:42:11,000 --> 01:42:15,000
但是语言本身应该是以 procedural 为主的

3232
01:42:15,000 --> 01:42:17,000
第三种就是说我们应该做成

3233
01:42:17,000 --> 01:42:18,000
像世界人那样的

3234
01:42:18,000 --> 01:42:19,000
就是一个

3235
01:42:19,000 --> 01:42:21,000
什么范式都支持你

3236
01:42:21,000 --> 01:42:23,000
但是这三个人

3237
01:42:23,000 --> 01:42:26,000
走了个四不像出来这样

3238
01:42:27,000 --> 01:42:27,000
对

3239
01:42:28,000 --> 01:42:30,000
然后现在的现状基本上就是

3240
01:42:30,000 --> 01:42:31,000
每个人把自己想要的功能加进去

3241
01:42:31,000 --> 01:42:32,000
然后

3242
01:42:32,000 --> 01:42:35,000
并且假设别人都愿意接受这个功能

3243
01:42:35,000 --> 01:42:37,000
才会导致社区进在那个样子

3244
01:42:38,000 --> 01:42:39,000
所以其实我有一个问题

3245
01:42:39,000 --> 01:42:41,000
就是 php 这个社区到底现在

3246
01:42:41,000 --> 01:42:44,000
谁比较 powerful 能够说了算

3247
01:42:45,000 --> 01:42:45,000
没有什么

3248
01:42:45,000 --> 01:42:46,000
因为我觉得其实这件事情

3249
01:42:46,000 --> 01:42:51,000
Facebook 其实还蛮有发言权或影响力的

3250
01:42:51,000 --> 01:42:52,000
他们做的那个叫什么来着

3251
01:42:53,000 --> 01:42:54,000
HFPM

3252
01:42:54,000 --> 01:42:54,000
然后

3253
01:42:56,000 --> 01:42:57,000
不是说性能屌炸天吗

3254
01:42:57,000 --> 01:42:58,000
然后

3255
01:42:59,000 --> 01:43:00,000
他说我要这么干

3256
01:43:00,000 --> 01:43:03,000
我只支持这个 ABCDE 这几个特性

3257
01:43:03,000 --> 01:43:04,000
我觉得比较好

3258
01:43:04,000 --> 01:43:07,000
因为 Facebook 也是最大的

3259
01:43:08,000 --> 01:43:09,000
商业的 php 的用户

3260
01:43:09,000 --> 01:43:10,000
之一吧

3261
01:43:10,000 --> 01:43:11,000
真的还是吗

3262
01:43:11,000 --> 01:43:12,000
至少如果不是最大

3263
01:43:12,000 --> 01:43:13,000
他至少是前 10

3264
01:43:13,000 --> 01:43:14,000
举个例子

3265
01:43:14,000 --> 01:43:15,000
对

3266
01:43:15,000 --> 01:43:17,000
他们对这个完全有足够的话语权去制定

3267
01:43:17,000 --> 01:43:19,000
去给出这么一个 vision

3268
01:43:22,000 --> 01:43:24,000
应该有道理

3269
01:43:24,000 --> 01:43:25,000
但是我也不知道

3270
01:43:26,000 --> 01:43:28,000
如果各位听众里面有在

3271
01:43:28,000 --> 01:43:30,000
php 核心开发者社区混乱的话

3272
01:43:30,000 --> 01:43:32,000
可以帮我们解释一下

3273
01:43:32,000 --> 01:43:34,000
目前 php 的

3274
01:43:35,000 --> 01:43:37,000
他们的 mentality 是怎么样的

3275
01:43:37,000 --> 01:43:39,000
那个什么那个 Zen 的现在还在吗

3276
01:43:40,000 --> 01:43:41,000
不知道

3277
01:43:41,000 --> 01:43:42,000
完全没改

3278
01:43:42,000 --> 01:43:42,000
对

3279
01:43:42,000 --> 01:43:45,000
这就是其实反正没什么关系

3280
01:43:45,000 --> 01:43:46,000
就只是挺全好奇

3281
01:43:46,000 --> 01:43:48,000
这个到底会怎么发展下去

3282
01:43:48,000 --> 01:43:50,000
所以如果你对八卦和

3283
01:43:51,000 --> 01:43:54,000
开发人员怎么吵架有兴趣的话

3284
01:43:54,000 --> 01:43:55,000
可以看一看这两篇文章

3285
01:43:55,000 --> 01:44:00,000
就是一篇文章和一封邮件

3286
01:44:00,000 --> 01:44:01,000
应该说

3287
01:44:01,000 --> 01:44:01,000
对

3288
01:44:01,000 --> 01:44:02,000
还是挺有意思的

3289
01:44:04,000 --> 01:44:05,000
OK

3290
01:44:05,000 --> 01:44:05,000
好

3291
01:44:05,000 --> 01:44:07,000
那我们本期

3292
01:44:07,000 --> 01:44:09,000
这是第 31 期

3293
01:44:09,000 --> 01:44:09,000
30 吧

3294
01:44:09,000 --> 01:44:12,000
31

3295
01:44:12,000 --> 01:44:15,000
咱们两个也是做了一年多了

3296
01:44:15,000 --> 01:44:18,000
渐渐 lost count

3297
01:44:20,000 --> 01:44:20,000
OK

3298
01:44:20,000 --> 01:44:24,000
感谢收听 ipnpodcast 网络旗下的 IT 技术主题娱乐节目内容

3299
01:44:25,000 --> 01:44:26,000
我们号称 hardcore

3300
01:44:26,000 --> 01:44:27,000
但是也没有干货

3301
01:44:27,000 --> 01:44:28,000
想听人听

3302
01:44:28,000 --> 01:44:29,000
不想听人就别听

3303
01:44:29,000 --> 01:44:30,000
你可以为本节目捐款

3304
01:44:30,000 --> 01:44:34,000
捐款地址是 kernelpanic.fm.donate

3305
01:44:34,000 --> 01:44:35,000
捐款金额随意

3306
01:44:35,000 --> 01:44:37,000
只要是 8 个正常数规都可以

3307
01:44:37,000 --> 01:44:38,000
捐款不会为你带来什么

3308
01:44:38,000 --> 01:44:40,000
不捐也不会让你失去什么

3309
01:44:40,000 --> 01:44:43,000
我们的口号是 no hard feelings

3310
01:44:43,000 --> 01:44:45,000
如果你有任何反馈

3311
01:44:45,000 --> 01:44:50,000
可以发电子邮件到 kernelpanic.ipn.li

3312
01:44:50,000 --> 01:44:53,000
同时也欢迎你收听 ipn 旗下的

3313
01:44:53,000 --> 01:44:55,000
其他旗下的其他几档节目

3314
01:44:55,000 --> 01:44:56,000
爱听公论

3315
01:44:56,000 --> 01:44:57,000
未知到他一来了

3316
01:44:57,000 --> 01:44:58,000
流行通讯

3317
01:44:58,000 --> 01:44:59,000
Hi story

3318
01:44:59,000 --> 01:45:00,000
硬影像

3319
01:45:00,000 --> 01:45:01,000
无次元

3320
01:45:01,000 --> 01:45:01,000
博物制

3321
01:45:01,000 --> 01:45:03,000
以及选美

3322
01:45:03,000 --> 01:45:04,000
我们下期节目再会

