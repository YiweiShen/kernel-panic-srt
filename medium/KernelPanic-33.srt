1
00:00:00,000 --> 00:00:02,000
欢迎收听 ipnpodcast 网络旗下的

2
00:00:02,000 --> 00:00:05,000
IT 技术主题娱乐节目内核恐慌

3
00:00:05,000 --> 00:00:06,000
我们号称 hardcore

4
00:00:06,000 --> 00:00:07,000
但是也没有干货

5
00:00:07,000 --> 00:00:09,000
想听人听不想听的人就别听

6
00:00:09,000 --> 00:00:11,000
本节目的网址是 kernelpanic.fm

7
00:00:11,000 --> 00:00:14,000
我们推荐大家使用 podcast 客户端订阅节目

8
00:00:14,000 --> 00:00:18,000
详情请访问 ipn.ly slash faq

9
00:00:18,000 --> 00:00:19,000
欢迎你为本节目捐款

10
00:00:19,000 --> 00:00:23,000
捐款地址是 kernelpanic.fm slash donate

11
00:00:23,000 --> 00:00:24,000
捐款结果随意

12
00:00:24,000 --> 00:00:25,000
只要是 8 的正常数倍就可以

13
00:00:25,000 --> 00:00:27,000
捐款不会为你带来什么

14
00:00:27,000 --> 00:00:29,000
不捐也不会让你失去什么

15
00:00:29,000 --> 00:00:30,000
我们口号是

16
00:00:30,000 --> 00:00:34,000
There are only two hard things in computer science

17
00:00:34,000 --> 00:00:37,000
cash invalidation and naming things

18
00:00:37,000 --> 00:00:39,000
那个欢迎回来

19
00:00:39,000 --> 00:00:40,000
你今天快乐

20
00:00:40,000 --> 00:00:41,000
去哪了

21
00:00:41,000 --> 00:00:42,000
这有点晚了

22
00:00:42,000 --> 00:00:43,000
新年已经过完了

23
00:00:43,000 --> 00:00:44,000
对

24
00:00:44,000 --> 00:00:47,000
我和女朋友去奥地利滑雪了

25
00:00:47,000 --> 00:00:48,000
奥地利

26
00:00:48,000 --> 00:00:49,000
对

27
00:00:49,000 --> 00:00:50,000
因为德国没有雪

28
00:00:50,000 --> 00:00:52,000
今天特别特别暖

29
00:00:52,000 --> 00:00:52,000
OK

30
00:00:52,000 --> 00:00:55,000
所以那个 global warming 是真的

31
00:00:56,000 --> 00:00:58,000
我看了一下好像是因为

32
00:00:59,000 --> 00:01:00,000
什么原因来着

33
00:01:01,000 --> 00:01:04,000
是因为今年

34
00:01:04,000 --> 00:01:07,000
北极的一个什么

35
00:01:07,000 --> 00:01:08,000
气压带控

36
00:01:08,000 --> 00:01:11,000
浆太多的冷气流控制在了北极

37
00:01:11,000 --> 00:01:13,000
导致冷风没有南下

38
00:01:13,000 --> 00:01:14,000
所以

39
00:01:14,000 --> 00:01:15,000
圣诞当然没有了

40
00:01:15,000 --> 00:01:16,000
整个欧洲

41
00:01:16,000 --> 00:01:16,000
对

42
00:01:16,000 --> 00:01:17,000
整个欧洲都没有雪

43
00:01:17,000 --> 00:01:19,000
然后圣诞节那几天

44
00:01:19,000 --> 00:01:21,000
网上传的照片就是

45
00:01:22,000 --> 00:01:24,000
因为德国南部基本上每年

46
00:01:24,000 --> 00:01:26,000
你可以有一定的几率

47
00:01:26,000 --> 00:01:27,000
碰上白色圣诞节

48
00:01:27,000 --> 00:01:28,000
但是今年是完全没有可能

49
00:01:28,000 --> 00:01:31,000
所以网上就有什么图片说

50
00:01:31,000 --> 00:01:32,000
今年我的第一雪人

51
00:01:32,000 --> 00:01:34,000
然后照的是地上两个水坑

52
00:01:35,000 --> 00:01:37,000
上面一个水坑插了个胡萝卜

53
00:01:38,000 --> 00:01:39,000
今年我的第一雪人

54
00:01:41,000 --> 00:01:42,000
然后奥地利稍微好一点

55
00:01:42,000 --> 00:01:43,000
今年的

56
00:01:45,000 --> 00:01:46,000
叫什么

57
00:01:46,000 --> 00:01:49,000
高山速降滑雪的锦标赛

58
00:01:49,000 --> 00:01:50,000
在

59
00:01:51,000 --> 00:01:53,000
奥地利和意大利举行

60
00:01:53,000 --> 00:01:53,000
应该是

61
00:01:53,000 --> 00:01:56,000
然后他们 1500 米以上稍微有点雪

62
00:01:56,000 --> 00:02:00,000
但是大部分的场地还是需要人造雪

63
00:02:00,000 --> 00:02:01,000
就很衰

64
00:02:01,000 --> 00:02:02,000
就滑雪的时候

65
00:02:02,000 --> 00:02:03,000
看周围全都是绿色的

66
00:02:04,000 --> 00:02:05,000
OK

67
00:02:05,000 --> 00:02:06,000
这还好了

68
00:02:06,000 --> 00:02:08,000
你想想这个什么澳大利亚人

69
00:02:09,000 --> 00:02:10,000
澳大利亚冬天可以滑

70
00:02:10,000 --> 00:02:11,000
澳大利亚不是

71
00:02:11,000 --> 00:02:13,000
澳大利亚人过圣诞节

72
00:02:14,000 --> 00:02:14,000
对

73
00:02:14,000 --> 00:02:17,000
他们穿着比基尼带着圣诞帽

74
00:02:17,000 --> 00:02:18,000
在沙滩上用沙子堆一个

75
00:02:18,000 --> 00:02:20,000
堆一个

76
00:02:20,000 --> 00:02:20,000
沙人

77
00:02:20,000 --> 00:02:21,000
沙人

78
00:02:21,000 --> 00:02:22,000
Snowman

79
00:02:22,000 --> 00:02:24,000
Sandman

80
00:02:24,000 --> 00:02:25,000
这个不错

81
00:02:26,000 --> 00:02:27,000
OK

82
00:02:27,000 --> 00:02:28,000
还是加拿大好

83
00:02:28,000 --> 00:02:29,000
滑雪

84
00:02:29,000 --> 00:02:30,000
加拿大

85
00:02:30,000 --> 00:02:32,000
对加拿大还是一如既往的雪多

86
00:02:34,000 --> 00:02:35,000
你呢你干什么

87
00:02:36,000 --> 00:02:37,000
我没干什么

88
00:02:37,000 --> 00:02:38,000
做两期节目对

89
00:02:39,000 --> 00:02:39,000
对

90
00:02:39,000 --> 00:02:41,000
请个嘉宾做两期节目

91
00:02:41,000 --> 00:02:42,000
你去度假了吗

92
00:02:42,000 --> 00:02:43,000
我还在这干活是吧

93
00:02:43,000 --> 00:02:45,000
咱们总得有一个人在这盯着

94
00:02:47,000 --> 00:02:48,000
这叫敬业

95
00:02:48,000 --> 00:02:52,000
好吧

96
00:02:54,000 --> 00:02:56,000
我们就开始这期的正题

97
00:02:56,000 --> 00:02:57,000
其实这期也没什么正题

98
00:02:57,000 --> 00:02:59,000
对这期

99
00:02:59,000 --> 00:03:01,000
对又是所谓没有主题的闲聊

100
00:03:01,000 --> 00:03:03,000
我们决定每一期没有主题的闲聊

101
00:03:03,000 --> 00:03:04,000
都叫没有主题的闲聊

102
00:03:06,000 --> 00:03:07,000
省去了想名字的确认

103
00:03:07,000 --> 00:03:09,000
那不然你还能想出别的什么名头出来

104
00:03:10,000 --> 00:03:11,000
哈

105
00:03:11,000 --> 00:03:13,000
不然你还能想出什么别的

106
00:03:13,000 --> 00:03:14,000
别的这个 title 出来

107
00:03:15,000 --> 00:03:15,000
对

108
00:03:15,000 --> 00:03:16,000
其实如果愿意的话

109
00:03:16,000 --> 00:03:18,000
也可以像 IT 工人那样

110
00:03:18,000 --> 00:03:22,000
找一个每期金句做 title

111
00:03:22,000 --> 00:03:24,000
你这是暗示我们每次都没有主题是吗

112
00:03:26,000 --> 00:03:27,000
You got it

113
00:03:27,000 --> 00:03:28,000
但是就像我们刚才的口号说的

114
00:03:29,000 --> 00:03:31,000
在计算机科学里面

115
00:03:31,000 --> 00:03:33,000
命名东西是非常非常难的

116
00:03:33,000 --> 00:03:34,000
有时候

117
00:03:35,000 --> 00:03:37,000
有时候你要在

118
00:03:38,000 --> 00:03:39,000
不只是节目了

119
00:03:39,000 --> 00:03:40,000
你有时候命名一个类

120
00:03:40,000 --> 00:03:44,000
然后稍后你会发现这个名字是不恰当的

121
00:03:44,000 --> 00:03:45,000
然后你是改还是不改

122
00:03:46,000 --> 00:03:47,000
改就非常麻烦

123
00:03:47,000 --> 00:03:48,000
但是不改又觉得不爽

124
00:03:49,000 --> 00:03:51,000
刚好前几天看到一篇文章

125
00:03:51,000 --> 00:03:55,000
他说我们过去有个概念叫做 technical debt

126
00:03:55,000 --> 00:03:57,000
就是技术负债

127
00:03:57,000 --> 00:03:57,000
对

128
00:03:58,000 --> 00:03:59,000
就是你之前做了一些什么

129
00:04:00,000 --> 00:04:01,000
你自己挖了多少坑

130
00:04:01,000 --> 00:04:03,000
然后就自己踩进去了对吧

131
00:04:03,000 --> 00:04:04,000
对我们公司

132
00:04:04,000 --> 00:04:07,000
我前公司的墙上挂着一副

133
00:04:07,000 --> 00:04:09,000
就一个水槽里面堆了

134
00:04:09,000 --> 00:04:11,000
可能几千个脏盘子

135
00:04:11,000 --> 00:04:12,000
说这就是

136
00:04:13,000 --> 00:04:14,000
这就是 technical debt

137
00:04:14,000 --> 00:04:16,000
然后你要是不起的话

138
00:04:16,000 --> 00:04:18,000
他们就会一直堆在那

139
00:04:19,000 --> 00:04:19,000
OK

140
00:04:19,000 --> 00:04:21,000
然后我之前看了篇文章

141
00:04:21,000 --> 00:04:23,000
他说除了 technical debt 之外

142
00:04:23,000 --> 00:04:25,000
还有一个叫做 conceptual debt

143
00:04:26,000 --> 00:04:27,000
conceptual debt

144
00:04:27,000 --> 00:04:28,000
概念负债

145
00:04:28,000 --> 00:04:29,000
什么意思他讲的

146
00:04:29,000 --> 00:04:30,000
大概就是说刚才讲的

147
00:04:30,000 --> 00:04:31,000
你刚才不是讲 naming sense

148
00:04:31,000 --> 00:04:33,000
就是给东西起名字吗

149
00:04:33,000 --> 00:04:34,000
这其实

150
00:04:34,000 --> 00:04:35,000
如果起得不好的话

151
00:04:35,000 --> 00:04:37,000
就会形成一个所有的 conceptual debt

152
00:04:37,000 --> 00:04:39,000
就是概念负债

153
00:04:39,000 --> 00:04:39,000
什么意思

154
00:04:40,000 --> 00:04:42,000
比如说你一个类的名字

155
00:04:42,000 --> 00:04:43,000
或者一个变量

156
00:04:43,000 --> 00:04:44,000
或者一个方法的名字起得不好

157
00:04:45,000 --> 00:04:47,000
然后碰巧整个程序的其他地方

158
00:04:47,000 --> 00:04:48,000
又是基于这个概念

159
00:04:49,000 --> 00:04:50,000
去构建起来的

160
00:04:50,000 --> 00:04:51,000
这样的话

161
00:04:51,000 --> 00:04:53,000
就会对你整个

162
00:04:53,000 --> 00:04:54,000
后面的那些概念

163
00:04:54,000 --> 00:04:56,000
就整个架构就变得不清晰

164
00:04:56,000 --> 00:04:57,000
就很难理解

165
00:04:58,000 --> 00:05:01,000
它会影响你的 mental model

166
00:05:01,000 --> 00:05:03,000
就你把那个东西的

167
00:05:03,000 --> 00:05:06,000
你使用的称谓会影响你的思维

168
00:05:07,000 --> 00:05:07,000
对

169
00:05:08,000 --> 00:05:08,000
而且它会

170
00:05:08,000 --> 00:05:10,000
就你选择的一个词

171
00:05:10,000 --> 00:05:11,000
一个叫法

172
00:05:11,000 --> 00:05:12,000
它会直接影响到

173
00:05:12,000 --> 00:05:13,000
你在你的大脑中

174
00:05:13,000 --> 00:05:15,000
怎么去理解整个架构

175
00:05:15,000 --> 00:05:17,000
整个它的概念

176
00:05:17,000 --> 00:05:17,000
在整个架构中

177
00:05:17,000 --> 00:05:19,000
所处的一个什么样的位置

178
00:05:19,000 --> 00:05:20,000
甚至说

179
00:05:20,000 --> 00:05:21,000
如果你选择那个

180
00:05:21,000 --> 00:05:22,000
即时型的概念

181
00:05:22,000 --> 00:05:23,000
选择这个不好

182
00:05:23,000 --> 00:05:24,000
会导致你整个

183
00:05:24,000 --> 00:05:25,000
整个上层架构

184
00:05:25,000 --> 00:05:28,000
是一个比较脆弱的

185
00:05:28,000 --> 00:05:28,000
对

186
00:05:30,000 --> 00:05:32,000
然后我就不禁想起这么一个事

187
00:05:32,000 --> 00:05:33,000
因为你知道

188
00:05:33,000 --> 00:05:36,000
毕竟我们国产的程序

189
00:05:36,000 --> 00:05:37,000
有很多人英文都不好

190
00:05:39,000 --> 00:05:41,000
然后写程序又被毙无奈

191
00:05:41,000 --> 00:05:43,000
要用英文

192
00:05:43,000 --> 00:05:44,000
又不能用拼音

193
00:05:44,000 --> 00:05:44,000
对吧

194
00:05:44,000 --> 00:05:46,000
不必要不过

195
00:05:47,000 --> 00:05:47,000
对

196
00:05:47,000 --> 00:05:48,000
但是

197
00:05:48,000 --> 00:05:50,000
就是这样的一个逻辑

198
00:05:50,000 --> 00:05:52,000
大家知道我们是认同这种做法的

199
00:05:52,000 --> 00:05:53,000
但是你会发现

200
00:05:53,000 --> 00:05:56,000
照逻辑推下去

201
00:05:56,000 --> 00:05:59,000
然后又有叫做 conceptual debt

202
00:05:59,000 --> 00:06:00,000
这么一个概念的话

203
00:06:01,000 --> 00:06:03,000
一个必然的结论就是

204
00:06:04,000 --> 00:06:05,000
很多人写的

205
00:06:05,000 --> 00:06:06,000
naming things

206
00:06:06,000 --> 00:06:08,000
就是这个起名都是错的

207
00:06:08,000 --> 00:06:10,000
或者是有点混乱的

208
00:06:11,000 --> 00:06:15,000
有多少人的什么 CMS 里面

209
00:06:15,000 --> 00:06:17,000
一个叫做 post 的东西

210
00:06:17,000 --> 00:06:19,000
代表了不止一个含义

211
00:06:22,000 --> 00:06:24,000
这个的确是

212
00:06:24,000 --> 00:06:25,000
但是反过来

213
00:06:26,000 --> 00:06:27,000
如果你走另外一个极端

214
00:06:27,000 --> 00:06:29,000
这让我想起来另外一个极端

215
00:06:29,000 --> 00:06:30,000
就是有些 CMS

216
00:06:31,000 --> 00:06:32,000
猪炮吧还是什么

217
00:06:33,000 --> 00:06:34,000
他把所有东西都叫做 node

218
00:06:37,000 --> 00:06:38,000
node 就代表了

219
00:06:38,000 --> 00:06:42,000
他是 CMS 管理的一个节点

220
00:06:42,000 --> 00:06:44,000
然后这个节点可以是任何东西

221
00:06:44,000 --> 00:06:45,000
可以是 post

222
00:06:45,000 --> 00:06:46,000
可以是 article

223
00:06:46,000 --> 00:06:48,000
可以是一个 set page 之类的

224
00:06:48,000 --> 00:06:50,000
然后你又会觉得这个命名又太抽象了

225
00:06:51,000 --> 00:06:51,000
对

226
00:06:51,000 --> 00:06:54,000
所以说这个一定是一个

227
00:06:54,000 --> 00:06:55,000
他如果太抽象的话

228
00:06:55,000 --> 00:06:59,000
他也是一个没有起好名字的一种表现

229
00:07:00,000 --> 00:07:02,000
或者说是一种形式的 technical debt

230
00:07:02,000 --> 00:07:07,000
就是太抽象以至于没有什么实际意义

231
00:07:08,000 --> 00:07:08,000
对

232
00:07:09,000 --> 00:07:09,000
对

233
00:07:09,000 --> 00:07:11,000
所以真的你去读那些

234
00:07:12,000 --> 00:07:14,000
所谓那种大牛写的代码

235
00:07:14,000 --> 00:07:17,000
你会发现它在整个概念上是非常清晰

236
00:07:17,000 --> 00:07:19,000
然后结构是非常

237
00:07:21,000 --> 00:07:22,000
概念非常清楚了

238
00:07:22,000 --> 00:07:22,000
定义清楚

239
00:07:22,000 --> 00:07:24,000
然后结构也是非常清晰的

240
00:07:24,000 --> 00:07:26,000
然后你再去看一些这种

241
00:07:27,000 --> 00:07:29,000
二三流的程序写的代码

242
00:07:29,000 --> 00:07:30,000
你会发现里面怎么

243
00:07:30,000 --> 00:07:32,000
这个概念一会在那出现

244
00:07:32,000 --> 00:07:33,000
一会在这出现

245
00:07:33,000 --> 00:07:34,000
就是较不清楚

246
00:07:34,000 --> 00:07:35,000
所以我在想就是说

247
00:07:35,000 --> 00:07:37,000
方法命名也没有什么统一性

248
00:07:37,000 --> 00:07:39,000
没错

249
00:07:39,000 --> 00:07:39,000
然后包括什么

250
00:07:40,000 --> 00:07:43,000
可能很多国内的同志们

251
00:07:43,000 --> 00:07:44,000
特别是写什么

252
00:07:47,000 --> 00:07:47,000
加把勒的

253
00:07:48,000 --> 00:07:49,000
或者是那种 class 类型的

254
00:07:50,000 --> 00:07:52,000
要有种特殊的那种语法

255
00:07:52,000 --> 00:07:52,000
你知道吧

256
00:07:52,000 --> 00:07:55,000
就是 the non-kingdom

257
00:07:55,000 --> 00:07:57,000
名词王国

258
00:07:58,000 --> 00:08:00,000
要什么 execute

259
00:08:00,000 --> 00:08:03,000
什么 challenger

260
00:08:03,000 --> 00:08:03,000
对

261
00:08:03,000 --> 00:08:05,000
一定要这样起的话

262
00:08:05,000 --> 00:08:06,000
然后就发现很多人就会

263
00:08:06,000 --> 00:08:07,000
然后又会牵涉到一个什么

264
00:08:07,000 --> 00:08:09,000
主动式被动式对吧

265
00:08:09,000 --> 00:08:11,000
一个什么 executor

266
00:08:12,000 --> 00:08:13,000
execute

267
00:08:13,000 --> 00:08:13,000
举个例子

268
00:08:14,000 --> 00:08:19,000
发现好像开始有点不太对路了

269
00:08:19,000 --> 00:08:20,000
然后这个是这个怎么说

270
00:08:20,000 --> 00:08:22,000
这个可以追究根源的话

271
00:08:22,000 --> 00:08:23,000
可以追究到

272
00:08:24,000 --> 00:08:26,000
面向对象的一些弊端上面

273
00:08:26,000 --> 00:08:29,000
就是你做累的话

274
00:08:29,000 --> 00:08:30,000
你总是因为累嘛

275
00:08:30,000 --> 00:08:32,000
它终究是一个实体

276
00:08:32,000 --> 00:08:34,000
然后因为在面向对象的

277
00:08:34,000 --> 00:08:36,000
就是如果一个是纯面向对象的

278
00:08:36,000 --> 00:08:39,000
语言里面方法是不能独立存在的

279
00:08:39,000 --> 00:08:41,000
也就是说名词是一切

280
00:08:42,000 --> 00:08:43,000
这里可能要纠正一下

281
00:08:43,000 --> 00:08:44,000
这不是面向对象

282
00:08:44,000 --> 00:08:45,000
是面向类

283
00:08:45,000 --> 00:08:46,000
就是 class oriented program

284
00:08:48,000 --> 00:08:49,000
就是狭义的

285
00:08:49,000 --> 00:08:51,000
或者说更精致

286
00:08:51,000 --> 00:08:52,000
更什么

287
00:08:52,000 --> 00:08:54,000
更明确定义的 object oriented

288
00:08:54,000 --> 00:08:55,000
其实不一定要

289
00:08:55,000 --> 00:08:58,000
short type 也不允许方法单独出现

290
00:08:58,000 --> 00:09:00,000
也可以不允许的方法单独出现

291
00:09:02,000 --> 00:09:02,000
不是吗

292
00:09:05,000 --> 00:09:06,000
或者这么说

293
00:09:06,000 --> 00:09:12,000
在函数不是一级成员的语言里面

294
00:09:12,000 --> 00:09:15,000
这是一个常见的问题

295
00:09:15,000 --> 00:09:15,000
对

296
00:09:15,000 --> 00:09:16,000
可以这么说

297
00:09:17,000 --> 00:09:18,000
对

298
00:09:18,000 --> 00:09:19,000
然后这个就好吧

299
00:09:19,000 --> 00:09:21,000
这跟欧没有什么太多关系

300
00:09:21,000 --> 00:09:23,000
anyway 说回这件事

301
00:09:23,000 --> 00:09:23,000
就是说

302
00:09:25,000 --> 00:09:27,000
请名字是一名很大的学文

303
00:09:27,000 --> 00:09:28,000
不要小看

304
00:09:28,000 --> 00:09:30,000
然后如果你觉得你起的名字不好

305
00:09:30,000 --> 00:09:32,000
可能你要先怀疑一下

306
00:09:32,000 --> 00:09:34,000
是不是自己的语文水平不太够

307
00:09:35,000 --> 00:09:38,000
或者你本身就是一个非常愚蠢的 idea

308
00:09:38,000 --> 00:09:39,000
比如说 PHP 的韩束

309
00:09:41,000 --> 00:09:42,000
又黑

310
00:09:43,000 --> 00:09:46,000
我发现我们每当区要局反面教材的时候

311
00:09:47,000 --> 00:09:48,000
你总会拿出这个

312
00:09:48,000 --> 00:09:52,000
PHP 和 Gi-Fi 总是非常丰富的资源

313
00:09:54,000 --> 00:09:54,000
好吧

314
00:09:54,000 --> 00:09:55,000
OK

315
00:09:55,000 --> 00:09:56,000
所以刚才讲两个 hard things

316
00:09:57,000 --> 00:09:58,000
刚才讲一个 naming things

317
00:09:58,000 --> 00:09:59,000
然后另外一个

318
00:10:00,000 --> 00:10:01,000
cash invalidation

319
00:10:01,000 --> 00:10:03,000
为什么它是 hard things

320
00:10:05,000 --> 00:10:09,000
因为很难判断什么时候 cash 才是真的 invalidate

321
00:10:11,000 --> 00:10:13,000
原作者说这句话的时候

322
00:10:13,000 --> 00:10:15,000
他只是想要说一个

323
00:10:15,000 --> 00:10:18,000
他其实就是想强调命名非常难

324
00:10:18,000 --> 00:10:24,000
然后他举了一个比较 well known 的难题

325
00:10:24,000 --> 00:10:26,000
就是 cash invalidation

326
00:10:26,000 --> 00:10:29,000
因为你实现一个 cash 的时候

327
00:10:29,000 --> 00:10:30,000
就永远不知道

328
00:10:31,000 --> 00:10:33,000
里面的内容是不是真的已经不需要为 cash 了

329
00:10:35,000 --> 00:10:35,000
对

330
00:10:36,000 --> 00:10:39,000
这个牵扯到的因素太多了

331
00:10:39,000 --> 00:10:42,000
所以它是一个知名的难题

332
00:10:42,000 --> 00:10:43,000
但是 naming things

333
00:10:43,000 --> 00:10:45,000
至少这个人在说

334
00:10:45,000 --> 00:10:46,000
这是谁说的

335
00:10:46,000 --> 00:10:48,000
Phil 什么谁说的

336
00:10:48,000 --> 00:10:50,000
然后他在说这句话的时候

337
00:10:50,000 --> 00:10:51,000
这还不是一个

338
00:10:51,000 --> 00:10:51,000
就是

339
00:10:52,000 --> 00:10:53,000
就是说周知的 hard things

340
00:10:53,000 --> 00:10:55,000
即便现在仍旧不是一个

341
00:10:56,000 --> 00:10:58,000
被广为接受的一个难点

342
00:10:58,000 --> 00:10:59,000
就是大部分人会觉得

343
00:10:59,000 --> 00:11:00,000
我靠起名字有什么难的

344
00:11:00,000 --> 00:11:01,000
Full bar 的

345
00:11:03,000 --> 00:11:03,000
对吧

346
00:11:04,000 --> 00:11:06,000
没错

347
00:11:07,000 --> 00:11:08,000
其实还是挺难的

348
00:11:08,000 --> 00:11:09,000
我觉得

349
00:11:09,000 --> 00:11:09,000
对

350
00:11:09,000 --> 00:11:13,000
然后由这个隔眼衍生出来了很多变种

351
00:11:13,000 --> 00:11:14,000
比如说什么

352
00:11:14,000 --> 00:11:16,000
在分布式系统里面

353
00:11:16,000 --> 00:11:19,000
有两件知名的困难

354
00:11:19,000 --> 00:11:23,000
第二个是

355
00:11:23,000 --> 00:11:25,000
确保每个消息只出现一次

356
00:11:26,000 --> 00:11:27,000
第一条是

357
00:11:27,000 --> 00:11:31,000
确保所有的消息按顺序到达

358
00:11:31,000 --> 00:11:32,000
第二条是

359
00:11:33,000 --> 00:11:34,000
确保所有的消息只出现一次

360
00:11:36,000 --> 00:11:36,000
你得到这个梗了吗

361
00:11:36,000 --> 00:11:38,000
就是他把难题说了三遍

362
00:11:39,000 --> 00:11:40,000
他说只有两个难题

363
00:11:40,000 --> 00:11:42,000
但是他说了三个

364
00:11:42,000 --> 00:11:44,000
然后其中前两个的顺序是反的

365
00:11:48,000 --> 00:11:50,000
然后还重复 deliver 了一下

366
00:11:50,000 --> 00:11:51,000
对没错

367
00:11:52,000 --> 00:11:53,000
这个是

368
00:11:54,000 --> 00:11:56,000
Matthias Verraz

369
00:11:56,000 --> 00:11:57,000
是吧

370
00:11:57,000 --> 00:11:57,000
你念吧

371
00:11:57,000 --> 00:11:58,000
Matthias Verraz

372
00:11:58,000 --> 00:11:59,000
What

373
00:11:59,000 --> 00:11:59,000
谁

374
00:12:00,000 --> 00:12:01,000
不知道谁

375
00:12:02,000 --> 00:12:02,000
Someone

376
00:12:03,000 --> 00:12:04,000
Whatever

377
00:12:04,000 --> 00:12:05,000
Yeah

378
00:12:06,000 --> 00:12:09,000
其实这里可以插一个听众反馈

379
00:12:11,000 --> 00:12:13,000
这是我在休假的时候收到的

380
00:12:13,000 --> 00:12:14,000
也过去一阵子了

381
00:12:14,000 --> 00:12:16,000
这是 12 月 21 号

382
00:12:16,000 --> 00:12:17,000
我圣诞节前的

383
00:12:18,000 --> 00:12:19,000
Hi Real 吴涛

384
00:12:19,000 --> 00:12:20,000
好久没给你们写反馈了

385
00:12:20,000 --> 00:12:21,000
话说本期中

386
00:12:21,000 --> 00:12:24,000
应该是 29 期

387
00:12:24,000 --> 00:12:25,000
Wait a second

388
00:12:26,000 --> 00:12:27,000
30 期

389
00:12:27,000 --> 00:12:28,000
嗯哼

390
00:12:29,000 --> 00:12:32,000
话说本期中吴涛久违的黑法国了

391
00:12:32,000 --> 00:12:34,000
今天我来注重吴涛

392
00:12:34,000 --> 00:12:35,000
本期中两位讨论到

393
00:12:35,000 --> 00:12:37,000
需不需要用英语来写代码的问题

394
00:12:37,000 --> 00:12:38,000
我和吴涛一样

395
00:12:38,000 --> 00:12:40,000
看到法语注释就头疼

396
00:12:40,000 --> 00:12:41,000
正常来说

397
00:12:41,000 --> 00:12:42,000
看法语注释不顺畅

398
00:12:42,000 --> 00:12:44,000
应该怪自己法语还不够好

399
00:12:44,000 --> 00:12:46,000
但法国人也是各种槽点大

400
00:12:46,000 --> 00:12:48,000
他们不喜欢用英语来写代码

401
00:12:48,000 --> 00:12:51,000
但是又怕带 excent 的法语字母

402
00:12:51,000 --> 00:12:53,000
就是什么 A

403
00:12:54,000 --> 00:12:55,000
一片

404
00:12:56,000 --> 00:12:56,000
A 下片

405
00:12:56,000 --> 00:12:57,000
A 上片

406
00:12:57,000 --> 00:12:59,000
然后 C 下面带个尾巴

407
00:12:59,000 --> 00:13:03,000
实际上来说就是拼音的四声

408
00:13:04,000 --> 00:13:04,000
对

409
00:13:05,000 --> 00:13:07,000
会产生 encoding 的问题

410
00:13:07,000 --> 00:13:09,000
于是代码中会出现大篇幅的

411
00:13:09,000 --> 00:13:12,000
没有任何 excent 的法语注释

412
00:13:12,000 --> 00:13:14,000
最近我和法国同学

413
00:13:14,000 --> 00:13:16,000
讨论编码语言的问题

414
00:13:16,000 --> 00:13:20,000
他对自己选择法语编码的原因居然是

415
00:13:20,000 --> 00:13:21,000
在代码里

416
00:13:21,000 --> 00:13:24,000
看到英语就知道是酷里的那样

417
00:13:24,000 --> 00:13:25,000
法语就是自己写的

418
00:13:27,000 --> 00:13:28,000
无言以对

419
00:13:29,000 --> 00:13:32,000
最后用法语编码也是个无比艰难的事情

420
00:13:32,000 --> 00:13:34,000
在键盘上特别是 Mac

421
00:13:34,000 --> 00:13:36,000
找不到波浪号

422
00:13:36,000 --> 00:13:37,000
美元符号

423
00:13:37,000 --> 00:13:38,000
Funker 号等等

424
00:13:38,000 --> 00:13:39,000
写程序必不可少的符号

425
00:13:39,000 --> 00:13:42,000
不是这一点在德语键盘上会不会好一点

426
00:13:42,000 --> 00:13:45,000
这里再顺便吐槽一下微软

427
00:13:45,000 --> 00:13:49,000
官网的 Egonomic 系列键盘也不能选语言

428
00:13:49,000 --> 00:13:50,000
为了 quality 键位

429
00:13:50,000 --> 00:13:52,000
我只能在英国亚马逊去买

430
00:13:52,000 --> 00:13:54,000
但是我对英式键盘 layout 里回车

431
00:13:54,000 --> 00:13:57,000
不是直调的这一点也是不太适应

432
00:13:59,000 --> 00:14:00,000
这个很简单

433
00:14:00,000 --> 00:14:02,000
买美式的就好了

434
00:14:06,000 --> 00:14:07,000
美式的记不过来了是吧

435
00:14:08,000 --> 00:14:10,000
我在德国如果要买 quality 键盘的话

436
00:14:10,000 --> 00:14:14,000
我也得去亚马逊商去专门选 US English Layout

437
00:14:14,000 --> 00:14:16,000
因为英国的英国式

438
00:14:16,000 --> 00:14:17,000
分两个英国式

439
00:14:17,000 --> 00:14:20,000
一个是 International English

440
00:14:20,000 --> 00:14:23,000
或者是 ISO 的 International Layout

441
00:14:24,000 --> 00:14:26,000
它是一个倒 L 型的汇车

442
00:14:27,000 --> 00:14:28,000
非常蠢

443
00:14:28,000 --> 00:14:29,000
对

444
00:14:31,000 --> 00:14:33,000
德语上面按方块号还好吗

445
00:14:33,000 --> 00:14:37,000
就是德语的方块号必须按右边的 out

446
00:14:37,000 --> 00:14:38,000
然后加 8

447
00:14:39,000 --> 00:14:40,000
应该是

448
00:14:40,000 --> 00:14:42,000
这家还好

449
00:14:44,000 --> 00:14:47,000
我觉得和法语键盘不比起来还 OK 吧

450
00:14:48,000 --> 00:14:49,000
法语键盘是 N 英国商

451
00:14:49,000 --> 00:14:52,000
你公司的德国同事是用德语键盘编码吗

452
00:14:53,000 --> 00:14:55,000
我们公司有用英语键盘的也有用德语键盘

453
00:14:55,000 --> 00:14:58,000
我在刚来德国的时候

454
00:14:58,000 --> 00:15:00,000
强迫自己适应德语键盘的时候

455
00:15:00,000 --> 00:15:02,000
也是用德语键盘编码的

456
00:15:02,000 --> 00:15:05,000
就用过一段之后就觉得还好

457
00:15:05,000 --> 00:15:09,000
你必须习惯与右手的大拇指为轴心

458
00:15:09,000 --> 00:15:12,000
然后用中指或者是无名指去按那两个

459
00:15:13,000 --> 00:15:14,000
那两个方块号

460
00:15:14,000 --> 00:15:17,000
但是你不觉得这样各种都不顺吗

461
00:15:17,000 --> 00:15:18,000
是很蠢

462
00:15:18,000 --> 00:15:20,000
所以你换回来了是吧

463
00:15:20,000 --> 00:15:21,000
所以后来我就换回来了

464
00:15:22,000 --> 00:15:26,000
当我明白我现在已经可以在德语键盘上编码的时候

465
00:15:26,000 --> 00:15:27,000
我就换回英语键盘

466
00:15:28,000 --> 00:15:32,000
我之前在德国的时候也用过一小

467
00:15:32,000 --> 00:15:33,000
两小时

468
00:15:34,000 --> 00:15:36,000
到时候就觉得是 WTF

469
00:15:36,000 --> 00:15:40,000
赶快找一个美语键盘换回去接着用

470
00:15:40,000 --> 00:15:43,000
你会觉得自己像一个幼儿园的刚学电脑的人

471
00:15:43,000 --> 00:15:44,000
不停地低头看键盘

472
00:15:44,000 --> 00:15:46,000
我靠这个键应该怎么按出来

473
00:15:48,000 --> 00:15:49,000
有一个问题

474
00:15:49,000 --> 00:15:52,000
你之前说你同事也有用德语写注释的吗

475
00:15:52,000 --> 00:15:53,000
对

476
00:15:53,000 --> 00:15:55,000
他们 SS 写哪个

477
00:15:57,000 --> 00:15:58,000
他们会把 SS 写成 SS

478
00:15:58,000 --> 00:15:59,000
对

479
00:15:59,000 --> 00:16:01,000
然后两边展开写是吧

480
00:16:02,000 --> 00:16:02,000
对

481
00:16:02,000 --> 00:16:04,000
因为德语的转写是有标准的

482
00:16:04,000 --> 00:16:05,000
所以

483
00:16:05,000 --> 00:16:07,000
日本也可以转一下

484
00:16:07,000 --> 00:16:08,000
就加 U 1

485
00:16:08,000 --> 00:16:08,000
对

486
00:16:10,000 --> 00:16:11,000
就还好

487
00:16:11,000 --> 00:16:12,000
其实跟法国人的做法一样

488
00:16:12,000 --> 00:16:15,000
就是法语没有这种转写的标准

489
00:16:15,000 --> 00:16:16,000
所以他们就

490
00:16:16,000 --> 00:16:16,000
对

491
00:16:16,000 --> 00:16:18,000
他们就直接不加那个 accent

492
00:16:18,000 --> 00:16:20,000
然后会产生歧异这样

493
00:16:22,000 --> 00:16:22,000
应该是

494
00:16:22,000 --> 00:16:24,000
但是法语学的

495
00:16:24,000 --> 00:16:27,000
反正举不出一个例子来

496
00:16:27,000 --> 00:16:28,000
但肯定是有

497
00:16:29,000 --> 00:16:32,000
就什么不加 accent 是一个词

498
00:16:32,000 --> 00:16:34,000
不加 accent 是一个词

499
00:16:34,000 --> 00:16:36,000
不加 accent 就是侮辱你祖先之类的

500
00:16:36,000 --> 00:16:37,000
这种事情

501
00:16:38,000 --> 00:16:39,000
这个事情的教训是

502
00:16:39,000 --> 00:16:42,000
不要用法国程序员写的程序

503
00:16:44,000 --> 00:16:45,000
有什么知名程序是法国人写的

504
00:16:46,000 --> 00:16:46,000
有

505
00:16:46,000 --> 00:16:47,000
那个 FNPEG

506
00:16:48,000 --> 00:16:49,000
What

507
00:16:49,000 --> 00:16:50,000
那哥们不是法国人吗

508
00:16:51,000 --> 00:16:53,000
我要霸佣 FNPEG

509
00:16:54,000 --> 00:16:54,000
是吧

510
00:16:55,000 --> 00:16:57,000
这哥们叫

511
00:16:58,000 --> 00:17:01,000
Fabrice Ballard

512
00:17:01,000 --> 00:17:03,000
猜对了在法国

513
00:17:04,000 --> 00:17:05,000
这个中心叫

514
00:17:05,000 --> 00:17:07,000
Grinobor 的一个地方

515
00:17:08,000 --> 00:17:09,000
不知道在哪

516
00:17:10,000 --> 00:17:13,000
这哥们写过很多这种知名的玩意

517
00:17:13,000 --> 00:17:14,000
OK

518
00:17:15,000 --> 00:17:16,000
除了那个

519
00:17:17,000 --> 00:17:19,000
那个 FNPEG 之外他还写过

520
00:17:20,000 --> 00:17:23,000
他写过一堆很有名的小东西

521
00:17:23,000 --> 00:17:24,000
我想想不起来

522
00:17:25,000 --> 00:17:26,000
Anyway

523
00:17:26,000 --> 00:17:28,000
其实想想的话

524
00:17:28,000 --> 00:17:30,000
Bleazer

525
00:17:31,000 --> 00:17:36,000
在法国公司应该是负责欧洲的本地化

526
00:17:36,000 --> 00:17:37,000
甚至也有开发人员

527
00:17:37,000 --> 00:17:39,000
所以如果要

528
00:17:40,000 --> 00:17:42,000
如果真的要霸佣法国软件的话

529
00:17:42,000 --> 00:17:43,000
那可能星际也不能玩

530
00:17:45,000 --> 00:17:46,000
不能这样对待自己

531
00:17:47,000 --> 00:17:47,000
算了

532
00:17:48,000 --> 00:17:49,000
对对对不要那么残忍了

533
00:17:51,000 --> 00:17:52,000
所以今天我们第一个题目是什么

534
00:17:54,000 --> 00:17:56,000
历史变迁

535
00:17:56,000 --> 00:17:59,000
正值新年之际我们来回顾一下历史

536
00:18:00,000 --> 00:18:02,000
回顾什么历史现在要

537
00:18:04,000 --> 00:18:07,000
Screenshots from developers

538
00:18:07,000 --> 00:18:09,000
2002 versus 2015

539
00:18:11,000 --> 00:18:12,000
这其实还挺有意思的

540
00:18:12,000 --> 00:18:14,000
这个是一个

541
00:18:14,000 --> 00:18:15,000
这哥们叫什么

542
00:18:16,000 --> 00:18:17,000
叫 Anders

543
00:18:18,000 --> 00:18:18,000
Anders

544
00:18:19,000 --> 00:18:20,000
Anders 他姓什么呢

545
00:18:23,000 --> 00:18:24,000
看一下

546
00:18:26,000 --> 00:18:27,000
啊 wait a second

547
00:18:27,000 --> 00:18:29,000
我们刚刚是要讲 CDN 是吧

548
00:18:30,000 --> 00:18:32,000
没事可以放到后面讲无所谓

549
00:18:32,000 --> 00:18:34,000
新年回顾历史我觉得挺好的

550
00:18:34,000 --> 00:18:35,000
OK 好

551
00:18:37,000 --> 00:18:38,000
查到没有东西

552
00:18:41,000 --> 00:18:43,000
不知道他叫姓什么

553
00:18:43,000 --> 00:18:45,000
域名看着是 Anders

554
00:18:45,000 --> 00:18:46,000
about

555
00:18:48,000 --> 00:18:49,000
photography

556
00:18:53,000 --> 00:18:54,000
其实不重要了

557
00:18:54,000 --> 00:18:56,000
这个人是谁其实问题不是很大

558
00:18:57,000 --> 00:19:00,000
这个人在 2002 年前

559
00:19:00,000 --> 00:19:04,000
2002 年的时候也就是 14 年前吧

560
00:19:06,000 --> 00:19:09,000
给一堆这个 Unix 的开发者

561
00:19:09,000 --> 00:19:10,000
或者是

562
00:19:11,000 --> 00:19:13,000
其他的一些知名的大牛们

563
00:19:14,000 --> 00:19:16,000
写过一封信让他们说

564
00:19:16,000 --> 00:19:19,000
提供一下他们工作电脑屏幕的截图

565
00:19:20,000 --> 00:19:22,000
然后他当时把那些截图都保存下来了

566
00:19:23,000 --> 00:19:23,000
然后

567
00:19:24,000 --> 00:19:27,000
去年就是 2015 年年底的时候

568
00:19:27,000 --> 00:19:29,000
12 月 10 号

569
00:19:29,000 --> 00:19:32,000
他又发了一篇

570
00:19:32,000 --> 00:19:34,000
然后他问了就是现在那就是

571
00:19:35,000 --> 00:19:37,000
14 年前那波人

572
00:19:38,000 --> 00:19:41,000
然后他们现在的桌面长什么样子

573
00:19:41,000 --> 00:19:45,000
当然了因为有一些人已经不在世了

574
00:19:45,000 --> 00:19:47,000
所以就中间缺了一些

575
00:19:47,000 --> 00:19:49,000
但是就是其他生产都还

576
00:19:49,000 --> 00:19:50,000
都还都回复了

577
00:19:51,000 --> 00:19:56,000
然后他就把这 2002 年的回复和 2015 年的

578
00:19:56,000 --> 00:19:59,000
这个回复摆在一起来对比一下

579
00:19:59,000 --> 00:20:01,000
看看这个历史的变迁到底怎么样子

580
00:20:01,000 --> 00:20:02,000
我觉得这个还

581
00:20:02,000 --> 00:20:03,000
还非常有意思

582
00:20:04,000 --> 00:20:06,000
你觉得最令那个什么

583
00:20:06,000 --> 00:20:09,000
你觉得最有印象深刻是哪个

584
00:20:11,000 --> 00:20:13,000
说实话我觉得都还好

585
00:20:13,000 --> 00:20:14,000
就还好

586
00:20:14,000 --> 00:20:16,000
你有你有你有预期吗

587
00:20:16,000 --> 00:20:20,000
我其实不觉得他们在

588
00:20:20,000 --> 00:20:23,000
就是甚至我会觉得 13 年的这个时间

589
00:20:23,000 --> 00:20:24,000
不是特别的长

590
00:20:25,000 --> 00:20:26,000
有没有

591
00:20:26,000 --> 00:20:30,000
就我现在回想 2002 年的时候好像

592
00:20:30,000 --> 00:20:34,000
没有和现在有什么非常天翻地覆的

593
00:20:35,000 --> 00:20:36,000
变化

594
00:20:36,000 --> 00:20:38,000
可能唯一的变化就是在这过去的 13 年里面

595
00:20:38,000 --> 00:20:41,000
我对 WIM 的掌握程度是

596
00:20:41,000 --> 00:20:42,000
天翻地覆的

597
00:20:43,000 --> 00:20:45,000
但是在窗口或者说在

598
00:20:46,000 --> 00:20:48,000
在这个桌面上会摆什么

599
00:20:48,000 --> 00:20:50,000
或者哪知常用哪些工具好像

600
00:20:53,000 --> 00:20:54,000
如果你按门类分的话

601
00:20:54,000 --> 00:20:56,000
我觉得没有什么太就是

602
00:20:57,000 --> 00:20:59,000
fundamental 的变化

603
00:20:59,000 --> 00:21:01,000
就我们用的东西永远是那几样

604
00:21:01,000 --> 00:21:04,000
什么那个图像编织软件

605
00:21:04,000 --> 00:21:05,000
自处理软件

606
00:21:05,000 --> 00:21:06,000
terminal

607
00:21:09,000 --> 00:21:10,000
无非是版本号更新了

608
00:21:10,000 --> 00:21:14,000
但是好像没有什么特别的区别

609
00:21:14,000 --> 00:21:14,000
对

610
00:21:15,000 --> 00:21:17,000
当然最近的 Kerningham

611
00:21:17,000 --> 00:21:19,000
他从 Linux

612
00:21:19,000 --> 00:21:21,000
他从 Unix 切换到 OS X 了

613
00:21:21,000 --> 00:21:25,000
这个让我觉得还挺特别的

614
00:21:25,000 --> 00:21:27,000
因为他是 Brian Kernigham

615
00:21:27,000 --> 00:21:29,000
然后他现在在用 OS X

616
00:21:29,000 --> 00:21:31,000
这不让人觉得讽刺

617
00:21:32,000 --> 00:21:35,000
但是他的用法也挺原始的

618
00:21:36,000 --> 00:21:38,000
他实际上是在拿 OS X

619
00:21:38,000 --> 00:21:40,000
当做一个稳定的

620
00:21:40,000 --> 00:21:41,000
就当 X

621
00:21:45,000 --> 00:21:47,000
剩下所有工作还是在

622
00:21:47,000 --> 00:21:48,000
terminal 里面完成的

623
00:21:48,000 --> 00:21:49,000
比如说他用那个 Rpy

624
00:21:51,000 --> 00:21:53,000
就字符界面的

625
00:21:53,000 --> 00:21:54,000
邮件客户端

626
00:21:54,000 --> 00:21:54,000
对吧

627
00:21:54,000 --> 00:21:55,000
对

628
00:21:55,000 --> 00:21:57,000
这里看他还有一些

629
00:21:59,000 --> 00:22:02,000
SSH 还有其他什么看不见的一个东西

630
00:22:03,000 --> 00:22:03,000
跟他

631
00:22:03,000 --> 00:22:07,000
13 年前并没有什么明显的区别

632
00:22:07,000 --> 00:22:08,000
这也在干同样的事

633
00:22:09,000 --> 00:22:10,000
他毕竟是一个

634
00:22:10,000 --> 00:22:12,000
他是 40 年代

635
00:22:12,000 --> 00:22:13,000
50 40 年代出生的人

636
00:22:13,000 --> 00:22:14,000
这一个人

637
00:22:14,000 --> 00:22:17,000
这已经是一个高龄老人了

638
00:22:17,000 --> 00:22:17,000
对吧

639
00:22:17,000 --> 00:22:18,000
对

640
00:22:18,000 --> 00:22:21,000
他在 2002 年采访这帮人的时候

641
00:22:21,000 --> 00:22:23,000
这帮人都已经是相对来说

642
00:22:23,000 --> 00:22:25,000
比较纯熟稳定的一个状态了

643
00:22:25,000 --> 00:22:26,000
叫什么业界太抖

644
00:22:28,000 --> 00:22:29,000
这不是太抖

645
00:22:29,000 --> 00:22:30,000
也是骨干

646
00:22:30,000 --> 00:22:31,000
对

647
00:22:31,000 --> 00:22:34,000
但是我看有比较大变化的是谁

648
00:22:34,000 --> 00:22:34,000
我发现

649
00:22:34,000 --> 00:22:35,000
这一圈里面

650
00:22:37,000 --> 00:22:38,000
没有

651
00:22:38,000 --> 00:22:41,000
其实你不好奇一下 Wim 那个作者他在干嘛

652
00:22:42,000 --> 00:22:44,000
Bram Moelena

653
00:22:44,000 --> 00:22:47,000
他现在瑞士的 Google

654
00:22:48,000 --> 00:22:50,000
你说他的屏幕上

655
00:22:50,000 --> 00:22:52,000
我觉得他是为了截图才放这么多

656
00:22:53,000 --> 00:22:56,000
我其实挺好奇的他

657
00:22:56,000 --> 00:22:57,000
他那些东西

658
00:22:58,000 --> 00:22:59,000
你看这张大图

659
00:23:02,000 --> 00:23:06,000
Wim 窗口有 12345

660
00:23:08,000 --> 00:23:09,000
5 个吧

661
00:23:10,000 --> 00:23:13,000
对他有一个看起来像 Picasa 的那个东西

662
00:23:13,000 --> 00:23:14,000
那是什么

663
00:23:15,000 --> 00:23:17,000
那就是 Picasa

664
00:23:17,000 --> 00:23:18,000
Picasa 还存在吗

665
00:23:19,000 --> 00:23:21,000
他如果用 Google 系管理照片的话

666
00:23:21,000 --> 00:23:22,000
应该还在吧

667
00:23:22,000 --> 00:23:23,000
OK

668
00:23:24,000 --> 00:23:25,000
反正他

669
00:23:25,000 --> 00:23:28,000
你看他的那个开的窗口里面也

670
00:23:28,000 --> 00:23:30,000
可能有一大堆 Exter

671
00:23:31,000 --> 00:23:32,000
你看他

672
00:23:32,000 --> 00:23:34,000
而且他用邮件的方式很奇特

673
00:23:34,000 --> 00:23:35,000
你就没有发现

674
00:23:36,000 --> 00:23:38,000
他用邮件的方式

675
00:23:38,000 --> 00:23:41,000
他不是用 Gmail 的网页端

676
00:23:41,000 --> 00:23:43,000
他最左边那个窗口

677
00:23:43,000 --> 00:23:45,000
那个 Wim 窗口是邮件

678
00:23:45,000 --> 00:23:46,000
What

679
00:23:47,000 --> 00:23:48,000
你仔细观察一下

680
00:23:48,000 --> 00:23:49,000
真的

681
00:23:51,000 --> 00:23:51,000
对

682
00:23:51,000 --> 00:23:54,000
所以他是直接裸写那个邮件本体

683
00:23:54,000 --> 00:23:56,000
然后用一个什么命令行去处理的

684
00:23:57,000 --> 00:23:58,000
那可是他的

685
00:23:58,000 --> 00:24:02,000
他的那个浏览器窗口里面有两个

686
00:24:02,000 --> 00:24:04,000
你也有 Gmail 对吧

687
00:24:04,000 --> 00:24:05,000
Gmail 的窗口

688
00:24:05,000 --> 00:24:07,000
所以他是同时用一个

689
00:24:08,000 --> 00:24:10,000
反正他是不用客户端就是了

690
00:24:10,000 --> 00:24:12,000
他要么用一个 web UI

691
00:24:12,000 --> 00:24:13,000
要么用一个

692
00:24:14,000 --> 00:24:15,000
CUI

693
00:24:15,000 --> 00:24:16,000
对

694
00:24:17,000 --> 00:24:20,000
但我就觉得他最左边处理邮件那个窗口

695
00:24:20,000 --> 00:24:22,000
特别奇怪

696
00:24:22,000 --> 00:24:25,000
因为我从来没有见过人这么用邮件

697
00:24:25,000 --> 00:24:26,000
OK

698
00:24:26,000 --> 00:24:28,000
你直接在磁盘上创建一个文件

699
00:24:28,000 --> 00:24:30,000
然后这个文件是这个邮件

700
00:24:30,000 --> 00:24:32,000
一个原始的格式

701
00:24:32,000 --> 00:24:34,000
然后再通过某种方式去处理它

702
00:24:37,000 --> 00:24:37,000
对

703
00:24:37,000 --> 00:24:40,000
这也有可能是个什么插件之类的

704
00:24:42,000 --> 00:24:43,000
就很神奇这种用法

705
00:24:43,000 --> 00:24:44,000
对

706
00:24:44,000 --> 00:24:47,000
他在编辑的文件的名字是

707
00:24:48,000 --> 00:24:49,000
Mail.new

708
00:24:49,000 --> 00:24:55,000
然后是在自己的 Home 下面的 Mail.new

709
00:24:56,000 --> 00:25:00,000
我觉得有可能是某种插件的

710
00:25:01,000 --> 00:25:01,000
对

711
00:25:01,000 --> 00:25:03,000
他是一个 web 的窗口

712
00:25:03,000 --> 00:25:04,000
对

713
00:25:04,000 --> 00:25:08,000
就这个插件让你通过一个自处理器来

714
00:25:08,000 --> 00:25:09,000
转写邮件内容

715
00:25:09,000 --> 00:25:10,000
然后你一保存

716
00:25:10,000 --> 00:25:12,000
他就把它 somehow 寄出去之类的

717
00:25:13,000 --> 00:25:13,000
对

718
00:25:14,000 --> 00:25:16,000
所以这个是挺有趣的一个东西

719
00:25:17,000 --> 00:25:19,000
这个说起来比较难

720
00:25:19,000 --> 00:25:21,000
就是如果你没有看过这个文件的话

721
00:25:21,000 --> 00:25:22,000
可能

722
00:25:22,000 --> 00:25:25,000
可能会理解里面理解起来有点困难

723
00:25:25,000 --> 00:25:27,000
但基本上就是你可以看到

724
00:25:28,000 --> 00:25:31,000
这个网页上面有很多列举的一些名人

725
00:25:31,000 --> 00:25:32,000
不是每个都很有名

726
00:25:32,000 --> 00:25:33,000
有些是什么

727
00:25:34,000 --> 00:25:36,000
unix historian

728
00:25:37,000 --> 00:25:38,000
whatever that means

729
00:25:44,000 --> 00:25:46,000
这个连接我们会放到 show notes 里面

730
00:25:47,000 --> 00:25:49,000
然后大家可以去有兴趣打开一下

731
00:25:49,000 --> 00:25:50,000
点开那个大图

732
00:25:50,000 --> 00:25:53,000
看看他们这些大牛的桌面

733
00:25:53,000 --> 00:25:55,000
到底平时都长什么样

734
00:25:55,000 --> 00:25:56,000
对

735
00:25:56,000 --> 00:25:57,000
如果你有兴趣的话

736
00:25:57,000 --> 00:26:00,000
也可以从现在开始就是每年给自己的桌面

737
00:26:00,000 --> 00:26:02,000
拍一个照子

738
00:26:02,000 --> 00:26:03,000
做一个 screencap

739
00:26:03,000 --> 00:26:05,000
然后从那个十年回顾对比

740
00:26:06,000 --> 00:26:06,000
对

741
00:26:06,000 --> 00:26:08,000
一系可以找到零几年

742
00:26:08,000 --> 00:26:10,000
05 年 06 年的桌面截图

743
00:26:10,000 --> 00:26:10,000
但是

744
00:26:13,000 --> 00:26:17,000
接下来要讲的是前两天 IPN 发生的一件

745
00:26:18,000 --> 00:26:20,000
incident 你应该说

746
00:26:20,000 --> 00:26:22,000
具体经过了什么

747
00:26:24,000 --> 00:26:27,000
就断断续续有人抱怨说

748
00:26:27,000 --> 00:26:30,000
我们下载不了 IPN 的音频文件

749
00:26:30,000 --> 00:26:32,000
或者是网页是打得开的

750
00:26:32,000 --> 00:26:33,000
就听不了而已

751
00:26:33,000 --> 00:26:33,000
对

752
00:26:34,000 --> 00:26:36,000
然后我们也这一次

753
00:26:36,000 --> 00:26:41,000
没能成功的把 blame 转移到中国电信

754
00:26:41,000 --> 00:26:42,000
或者中国联通上面

755
00:26:42,000 --> 00:26:46,000
所以只好去看看是不是自己的服务器出问题了

756
00:26:47,000 --> 00:26:48,000
但其实很难说

757
00:26:48,000 --> 00:26:50,000
因为是一个 DNS 的问题

758
00:26:50,000 --> 00:26:51,000
对

759
00:26:51,000 --> 00:26:55,000
DNS 解析的我们用的 CDN 解析不出来

760
00:26:55,000 --> 00:26:57,000
然后之前出现了

761
00:26:57,000 --> 00:27:00,000
有几档子事连在一起就挺混乱的

762
00:27:01,000 --> 00:27:02,000
不知道你还有没有看新闻

763
00:27:02,000 --> 00:27:04,000
就大概两周

764
00:27:04,000 --> 00:27:04,000
一两周以前

765
00:27:05,000 --> 00:27:09,000
有新闻说全球的那 13 个跟域民的

766
00:27:09,000 --> 00:27:10,000
这个同情

767
00:27:10,000 --> 00:27:10,000
ok

768
00:27:10,000 --> 00:27:13,000
说那个大哥们的拒绝服务工机

769
00:27:13,000 --> 00:27:14,000
对

770
00:27:14,000 --> 00:27:17,000
然后当时他们就做了一些处理

771
00:27:17,000 --> 00:27:19,000
这个可能要普及一下这个常识

772
00:27:19,000 --> 00:27:20,000
比如说我们全球

773
00:27:21,000 --> 00:27:23,000
我们平时解析域名的时候

774
00:27:23,000 --> 00:27:27,000
比如说你要上 google.com

775
00:27:27,000 --> 00:27:27,000
对吧

776
00:27:28,000 --> 00:27:29,000
他是要一个一个去问

777
00:27:29,000 --> 00:27:32,000
这个要问谁负责点 com 对吧

778
00:27:32,000 --> 00:27:34,000
他要问所谓的根服务器

779
00:27:34,000 --> 00:27:36,000
然后根服务器说这个服务器负责点 com

780
00:27:36,000 --> 00:27:39,000
然后另外他就跑去点 com 那个服务器

781
00:27:39,000 --> 00:27:42,000
然后问谁负责点 com 下面的 google 这个域名

782
00:27:42,000 --> 00:27:43,000
对吧

783
00:27:43,000 --> 00:27:44,000
然后一层一层

784
00:27:44,000 --> 00:27:48,000
然后问到 google 说谁负责 google 下面的三个 w

785
00:27:48,000 --> 00:27:49,000
这个域名对吧

786
00:27:49,000 --> 00:27:50,000
一层一层这样问下去

787
00:27:50,000 --> 00:27:51,000
大致是这么一个逻辑

788
00:27:52,000 --> 00:27:57,000
所以他问的第一个叫什么服务器

789
00:27:57,000 --> 00:27:58,000
根运服务器吗

790
00:27:58,000 --> 00:27:59,000
对根运服务器

791
00:28:00,000 --> 00:28:03,000
叫做全球有这么一十三个

792
00:28:04,000 --> 00:28:08,000
去负责这种点 com 点 net 这种的响应

793
00:28:08,000 --> 00:28:11,000
然后这些就遭到了一个大范围的这种攻击

794
00:28:11,000 --> 00:28:14,000
然后导致很多地方解析都出了问题

795
00:28:14,000 --> 00:28:15,000
然后这还没完

796
00:28:16,000 --> 00:28:17,000
完了就国内

797
00:28:18,000 --> 00:28:20,000
我们用的像 ipn 的一些域名

798
00:28:20,000 --> 00:28:24,000
怎么不都是在 DNS pod 的这个服务商那里 host

799
00:28:25,000 --> 00:28:26,000
就会发现

800
00:28:28,000 --> 00:28:31,000
DNS pod 又说国内的这个域名解析

801
00:28:31,000 --> 00:28:33,000
也出现了各种各样的这种奇怪的问题

802
00:28:33,000 --> 00:28:34,000
就经常出现解析不到

803
00:28:35,000 --> 00:28:37,000
就是你要解析一个地址他解析不出来

804
00:28:39,000 --> 00:28:43,000
还有解析出来可能是一个什么本地的 127.0.1

805
00:28:43,000 --> 00:28:44,000
这种地址对吧

806
00:28:45,000 --> 00:28:45,000
对

807
00:28:46,000 --> 00:28:49,000
就这两件事情不知道有没有什么联系

808
00:28:49,000 --> 00:28:51,000
反正就现象是这样子的

809
00:28:51,000 --> 00:28:54,000
就导致我们有些这种服务也一直解析

810
00:28:54,000 --> 00:28:57,000
但会有出这种问题

811
00:28:58,000 --> 00:29:01,000
然后再加上之前我们不是遇到过

812
00:29:02,000 --> 00:29:03,000
音频文件的被劫持吗

813
00:29:03,000 --> 00:29:07,000
因为现在 ipn 整站是用的这个 https 加密连接

814
00:29:07,000 --> 00:29:12,000
不会有这种中间的运营商劫持的问题

815
00:29:12,000 --> 00:29:14,000
但是在很长一段时间内

816
00:29:15,000 --> 00:29:17,000
cdn 的音频文件下载

817
00:29:18,000 --> 00:29:19,000
还是专动 http

818
00:29:19,000 --> 00:29:21,000
http 的这个迷雾的协议

819
00:29:22,000 --> 00:29:23,000
然后很多这种

820
00:29:23,000 --> 00:29:25,000
这种之前也提到过小运营商

821
00:29:25,000 --> 00:29:28,000
为了节省他的带宽的流量

822
00:29:29,000 --> 00:29:30,000
他会自己再做个本地的缓存

823
00:29:31,000 --> 00:29:32,000
然后又没做好

824
00:29:32,000 --> 00:29:34,000
就导致我们经常听到一半

825
00:29:34,000 --> 00:29:37,000
有些听众抱怨说听到一半就串台了

826
00:29:37,000 --> 00:29:38,000
所谓的对吧

827
00:29:38,000 --> 00:29:41,000
提前五分钟还是内核恐慌

828
00:29:41,000 --> 00:29:43,000
后五分钟就可能变成 IT 工的

829
00:29:43,000 --> 00:29:45,000
就串到了什么中方程序

830
00:29:45,000 --> 00:29:46,000
液化之类的

831
00:29:47,000 --> 00:29:49,000
他这样就很乱

832
00:29:51,000 --> 00:29:53,000
但是 cdn 要部署这个 https

833
00:29:53,000 --> 00:29:56,000
还是就不是那么简单的事情

834
00:29:56,000 --> 00:29:59,000
要做很多前期的准备工作

835
00:29:59,000 --> 00:30:01,000
但是好在我们新年一时

836
00:30:02,000 --> 00:30:03,000
我们终于把这件事情做完了

837
00:30:03,000 --> 00:30:06,000
然后域名的 hosting 也尽量

838
00:30:07,000 --> 00:30:10,000
针对国内的法文做了一些调整

839
00:30:11,000 --> 00:30:12,000
希望

840
00:30:12,000 --> 00:30:12,000
hopefully

841
00:30:13,000 --> 00:30:16,000
之后我们就不会再遇到类似的问题了

842
00:30:16,000 --> 00:30:17,000
对

843
00:30:17,000 --> 00:30:18,000
但如果遇到什么问题的话

844
00:30:18,000 --> 00:30:20,000
各位听众请一定要向我们反馈

845
00:30:20,000 --> 00:30:23,000
这样才能帮助我们改进服务的质量

846
00:30:24,000 --> 00:30:24,000
没错

847
00:30:25,000 --> 00:30:26,000
对

848
00:30:26,000 --> 00:30:31,000
这就是我们 ipn 的 cdn 遇到的最近的一些近况

849
00:30:31,000 --> 00:30:32,000
也给大家做一个简单的说明

850
00:30:34,000 --> 00:30:35,000
OK

851
00:30:35,000 --> 00:30:36,000
接下来是

852
00:30:38,000 --> 00:30:39,000
怎么说呢

853
00:30:39,000 --> 00:30:42,000
一款最近有的一些动静的新字体

854
00:30:43,000 --> 00:30:44,000
其实我一直不太清楚

855
00:30:44,000 --> 00:30:49,000
那个 hosting 到底有没有自带 fira mono 那款字体

856
00:30:51,000 --> 00:30:52,000
没有吧

857
00:30:53,000 --> 00:30:53,000
没有是吧

858
00:30:53,000 --> 00:30:55,000
我不知道为什么电脑上有一个叫做

859
00:30:55,000 --> 00:30:57,000
有一款叫做 fira mono 的

860
00:30:57,000 --> 00:31:03,000
然后它这款 fira code 是基于 fira mono 来改的吗

861
00:31:03,000 --> 00:31:05,000
这个东西是念 fira 吗

862
00:31:05,000 --> 00:31:06,000
f-i-r-a

863
00:31:06,000 --> 00:31:07,000
应该是吧

864
00:31:07,000 --> 00:31:08,000
不然还能念什么

865
00:31:08,000 --> 00:31:09,000
我猜是这样

866
00:31:09,000 --> 00:31:12,000
但是不确定了

867
00:31:12,000 --> 00:31:13,000
fira 吧

868
00:31:13,000 --> 00:31:13,000
OK

869
00:31:14,000 --> 00:31:18,000
所以有人就基于一个叫做 fira mono 的

870
00:31:18,000 --> 00:31:20,000
这么一个等宽字体

871
00:31:20,000 --> 00:31:22,000
然后他做了一些什么

872
00:31:22,000 --> 00:31:26,000
我们按照国内的好话说叫做深度定制

873
00:31:26,000 --> 00:31:27,000
OK

874
00:31:29,000 --> 00:31:31,000
忽然感觉像个房地产生

875
00:31:31,000 --> 00:31:31,000
对

876
00:31:33,000 --> 00:31:36,000
他在 fira mono 技术上扩展了很多字符集

877
00:31:36,000 --> 00:31:37,000
也做了一些优化

878
00:31:37,000 --> 00:31:40,000
然后他里面最有意思的就是说他用

879
00:31:41,000 --> 00:31:45,000
因为现代的字体排版引擎有一个特性

880
00:31:45,000 --> 00:31:46,000
叫做

881
00:31:46,000 --> 00:31:47,000
Ligature

882
00:31:49,000 --> 00:31:50,000
连字可能

883
00:31:50,000 --> 00:31:51,000
这个是个排版学的概念

884
00:31:51,000 --> 00:31:52,000
可能还要先解释一下

885
00:31:52,000 --> 00:31:53,000
对

886
00:31:53,000 --> 00:31:55,000
这个在中文里面比较少见

887
00:31:55,000 --> 00:31:56,000
如果一定要说的话

888
00:31:56,000 --> 00:32:00,000
把招财进宝四个字写在一起

889
00:32:00,000 --> 00:32:02,000
就可以视为一种中文的连字

890
00:32:04,000 --> 00:32:05,000
这也能扯到一起

891
00:32:06,000 --> 00:32:06,000
可以啊

892
00:32:06,000 --> 00:32:07,000
为什么不行

893
00:32:07,000 --> 00:32:09,000
本质上是同一点事情

894
00:32:09,000 --> 00:32:10,000
只不过在中文里面用的非常少

895
00:32:10,000 --> 00:32:12,000
你得描述下这个东西怎么一回事

896
00:32:12,000 --> 00:32:14,000
我觉得不是很多人都能理解这个词的

897
00:32:15,000 --> 00:32:15,000
对

898
00:32:15,000 --> 00:32:19,000
Ligature 在西文排版里面指的是

899
00:32:19,000 --> 00:32:20,000
为了

900
00:32:21,000 --> 00:32:22,000
为了美观

901
00:32:22,000 --> 00:32:22,000
主要是为了美观

902
00:32:22,000 --> 00:32:25,000
把特定的常见的字幕组合

903
00:32:26,000 --> 00:32:27,000
做成一个

904
00:32:27,000 --> 00:32:28,000
在最原始的状态是

905
00:32:28,000 --> 00:32:32,000
把一个特定字幕组合做成一个单独的字模

906
00:32:32,000 --> 00:32:33,000
比如说你

907
00:32:33,000 --> 00:32:35,000
英语里面最常见的 fi

908
00:32:35,000 --> 00:32:37,000
Fish

909
00:32:37,000 --> 00:32:40,000
它会把 fi 做成一个单独的签字

910
00:32:40,000 --> 00:32:43,000
或者是早期是幕火字应该

911
00:32:43,000 --> 00:32:47,000
然后看起来的效果就是 i 上面那一点

912
00:32:47,000 --> 00:32:49,000
被 f 吃掉了

913
00:32:49,000 --> 00:32:51,000
把手吃进去了

914
00:32:51,000 --> 00:32:52,000
是连在一起的

915
00:32:52,000 --> 00:32:52,000
对

916
00:32:52,000 --> 00:32:54,000
或者 ffi

917
00:32:54,000 --> 00:32:56,000
它会把两个 f 的

918
00:32:56,000 --> 00:32:57,000
两个 f 的上面的

919
00:32:57,000 --> 00:32:59,000
对横线连在一起

920
00:32:59,000 --> 00:33:00,000
然后上面的第一个 f

921
00:33:00,000 --> 00:33:04,000
会融入第二个 f 的顶端

922
00:33:04,000 --> 00:33:07,000
然后像 fl 这种 flower

923
00:33:07,000 --> 00:33:10,000
它 f 和 l 的尖尖也会连起来

924
00:33:10,000 --> 00:33:11,000
像是

925
00:33:12,000 --> 00:33:12,000
叫什么

926
00:33:12,000 --> 00:33:14,000
漏油了一样

927
00:33:14,000 --> 00:33:15,000
没错

928
00:33:15,000 --> 00:33:18,000
然后这个 Ligature 如此常见

929
00:33:18,000 --> 00:33:19,000
也就是在某些语言里面

930
00:33:19,000 --> 00:33:21,000
Ligature 成了一个单独的字母

931
00:33:21,000 --> 00:33:23,000
比如说德语的 set

932
00:33:23,000 --> 00:33:25,000
会看起来像一个 beta

933
00:33:25,000 --> 00:33:26,000
但是让它是一个 s

934
00:33:26,000 --> 00:33:28,000
和另一个 s 连在一起

935
00:33:29,000 --> 00:33:31,000
然后第一个 s 因此被拉直了

936
00:33:31,000 --> 00:33:32,000
然后看起来像 beta

937
00:33:32,000 --> 00:33:35,000
然后或者像一些语言里面的

938
00:33:37,000 --> 00:33:40,000
法语里面有个 oe 的连字符

939
00:33:41,000 --> 00:33:44,000
也是可以被当成一个单独字母用

940
00:33:44,000 --> 00:33:47,000
或者是某些语言里面有一个 ae

941
00:33:47,000 --> 00:33:49,000
就是 a 和 e 连在一起

942
00:33:50,000 --> 00:33:52,000
然后 ae 的连写

943
00:33:52,000 --> 00:33:54,000
还分大小写两种情况

944
00:33:55,000 --> 00:33:56,000
那 oe 也分了

945
00:33:57,000 --> 00:33:59,000
对 oe 也分

946
00:33:59,000 --> 00:34:00,000
oe 连字的大写

947
00:34:00,000 --> 00:34:04,000
就是 oe 变成了一个像左突出的 d

948
00:34:04,000 --> 00:34:10,000
然后右半边和 e 的左边的数连在一起

949
00:34:10,000 --> 00:34:10,000
对

950
00:34:10,000 --> 00:34:13,000
这个在牌子

951
00:34:13,000 --> 00:34:14,000
就是在

952
00:34:14,000 --> 00:34:15,000
怎么说

953
00:34:15,000 --> 00:34:18,000
千余火的时代是比较容易实现的

954
00:34:18,000 --> 00:34:21,000
你只需要把两个字的字母刻在一起就可以了

955
00:34:21,000 --> 00:34:23,000
但是在数字时代

956
00:34:23,000 --> 00:34:24,000
因为每一个字符

957
00:34:24,000 --> 00:34:29,000
在二进制的层面它是分开的

958
00:34:29,000 --> 00:34:32,000
所以实际上连字是一个非常晚进

959
00:34:32,000 --> 00:34:36,000
才在数码排版界出现的一个东西

960
00:34:36,000 --> 00:34:39,000
最开始支持 Ligature 的

961
00:34:39,000 --> 00:34:41,000
这个排字引擎是哪个

962
00:34:41,000 --> 00:34:42,000
应该是 WES 10 上那个吗

963
00:34:43,000 --> 00:34:44,000
是

964
00:34:45,000 --> 00:34:46,000
叫什么来的

965
00:34:48,000 --> 00:34:49,000
Type-1 应该是

966
00:34:49,000 --> 00:34:50,000
从 Type-1 开始有 Ligature

967
00:34:50,000 --> 00:34:51,000
就是 Adobe 的那套东西

968
00:34:51,000 --> 00:34:52,000
对

969
00:34:52,000 --> 00:34:52,000
OK

970
00:34:55,000 --> 00:34:55,000
对

971
00:34:55,000 --> 00:34:57,000
但是在

972
00:34:57,000 --> 00:34:59,000
至少在编程界

973
00:34:59,000 --> 00:35:00,000
Ligature 是一个很

974
00:35:00,000 --> 00:35:01,000
几乎没有

975
00:35:01,000 --> 00:35:03,000
没有任何鸟用的东西

976
00:35:04,000 --> 00:35:04,000
对

977
00:35:04,000 --> 00:35:07,000
因为它需要依赖于一个固意的环境

978
00:35:07,000 --> 00:35:11,000
然后需要排字引擎

979
00:35:11,000 --> 00:35:12,000
对这个事情要有支持

980
00:35:12,000 --> 00:35:15,000
然后你还有一些什么参数要打开它才

981
00:35:15,000 --> 00:35:15,000
也不是

982
00:35:16,000 --> 00:35:18,000
你排字引擎有了 Ligature 之外

983
00:35:18,000 --> 00:35:21,000
你那个字体本身还得有 Ligature 的那些

984
00:35:21,000 --> 00:35:22,000
character

985
00:35:22,000 --> 00:35:23,000
那些字符你才可以显示

986
00:35:24,000 --> 00:35:25,000
对

987
00:35:25,000 --> 00:35:26,000
其实这里可以插一句

988
00:35:26,000 --> 00:35:27,000
就是

989
00:35:27,000 --> 00:35:30,000
因为显示技术的限制

990
00:35:30,000 --> 00:35:33,000
导致了我们目前编程使用的

991
00:35:33,000 --> 00:35:35,000
一些 convention

992
00:35:36,000 --> 00:35:40,000
是在不写程序的人看来非常奇怪的

993
00:35:41,000 --> 00:35:42,000
或者是你需要一段时间

994
00:35:42,000 --> 00:35:44,000
因为你已经会编程了

995
00:35:44,000 --> 00:35:46,000
所以经过如此久的时间

996
00:35:46,000 --> 00:35:47,000
你是不会意识到它有多奇怪的

997
00:35:47,000 --> 00:35:50,000
比如说小于等于号

998
00:35:50,000 --> 00:35:55,000
或者是不等于号之类的符号

999
00:35:55,000 --> 00:35:58,000
你写起来都是在不会写程序的人看来非常奇怪的

1000
00:35:58,000 --> 00:35:59,000
对吧

1001
00:35:59,000 --> 00:36:01,000
然后我们写数学的小于等于

1002
00:36:01,000 --> 00:36:02,000
就是写个小于号

1003
00:36:02,000 --> 00:36:05,000
然后在下面再多加一个

1004
00:36:05,000 --> 00:36:06,000
并行的一横对吧

1005
00:36:06,000 --> 00:36:07,000
对

1006
00:36:07,000 --> 00:36:09,000
但是在我们编程的时候

1007
00:36:09,000 --> 00:36:10,000
因为

1008
00:36:10,000 --> 00:36:11,000
当然不光是显示的问题

1009
00:36:11,000 --> 00:36:13,000
也牵涉到输入的问题

1010
00:36:13,000 --> 00:36:16,000
就会说你键盘上没有小于等于这个符号

1011
00:36:17,000 --> 00:36:18,000
你得如果单狗去找的话

1012
00:36:18,000 --> 00:36:19,000
就是也挺难的

1013
00:36:19,000 --> 00:36:22,000
一个变通办法就是我先输一个小于号

1014
00:36:22,000 --> 00:36:23,000
再输一个等于号

1015
00:36:23,000 --> 00:36:25,000
两个连拼在一起

1016
00:36:25,000 --> 00:36:26,000
你就知道小于等于是吧

1017
00:36:26,000 --> 00:36:27,000
它看起来有点奇怪

1018
00:36:28,000 --> 00:36:29,000
就是说基础的限制

1019
00:36:29,000 --> 00:36:34,000
实际上逼迫我们形成了某种特别的编程的风格

1020
00:36:34,000 --> 00:36:35,000
一种 convention

1021
00:36:35,000 --> 00:36:37,000
又比如说下标这个东西

1022
00:36:37,000 --> 00:36:41,000
你在计算机上没有办法方便的输入一个字符

1023
00:36:41,000 --> 00:36:44,000
在另外一个字符的右下角对吧

1024
00:36:44,000 --> 00:36:45,000
就假设

1025
00:36:45,000 --> 00:36:48,000
你想象如果我们的编程是简单的

1026
00:36:48,000 --> 00:36:51,000
像科幻小说里面是用纸和笔来完成的话

1027
00:36:51,000 --> 00:36:53,000
你完全可以写一个 x

1028
00:36:53,000 --> 00:36:55,000
然后右下角一个角标 2

1029
00:36:56,000 --> 00:36:58,000
来代替比如说 x

1030
00:36:59,000 --> 00:37:02,000
或者是 dollars 之类的这种东西

1031
00:37:02,000 --> 00:37:03,000
又扯远了

1032
00:37:03,000 --> 00:37:04,000
但是反过来

1033
00:37:05,000 --> 00:37:06,000
Fiery code 这个字体就是一个

1034
00:37:06,000 --> 00:37:09,000
对此一个改进或者说尝试

1035
00:37:09,000 --> 00:37:12,000
它使得一些常用的编程

1036
00:37:12,000 --> 00:37:15,000
或者说在某些比较

1037
00:37:15,000 --> 00:37:15,000
语言里面

1038
00:37:15,000 --> 00:37:18,000
编程语言里面常用的符号

1039
00:37:18,000 --> 00:37:19,000
变成了 ligature

1040
00:37:19,000 --> 00:37:20,000
比如说它把一个

1041
00:37:21,000 --> 00:37:22,000
两个等于号

1042
00:37:22,000 --> 00:37:23,000
如果你打两个等于号的话

1043
00:37:23,000 --> 00:37:26,000
在其他的普通的等宽字体里面

1044
00:37:26,000 --> 00:37:27,000
看起来是两个等于号

1045
00:37:27,000 --> 00:37:28,000
在 Fiery code 里面

1046
00:37:28,000 --> 00:37:30,000
看起来就是一个连贯的很长的等号

1047
00:37:31,000 --> 00:37:34,000
然后如果你打简单号等于号

1048
00:37:34,000 --> 00:37:36,000
就在普通语言里面

1049
00:37:36,000 --> 00:37:37,000
是什么不等号之类的

1050
00:37:37,000 --> 00:37:40,000
它会把它显示为一个很长的等于号

1051
00:37:40,000 --> 00:37:42,000
然后上面画了一个斜杠

1052
00:37:42,000 --> 00:37:45,000
就像一个数学家使用的符号一样

1053
00:37:45,000 --> 00:37:46,000
对

1054
00:37:46,000 --> 00:37:47,000
然后它这个

1055
00:37:47,000 --> 00:37:50,000
就是这应该是首款等宽字体

1056
00:37:50,000 --> 00:37:52,000
支持这种

1057
00:37:52,000 --> 00:37:54,000
比较奇怪的数学符号的

1058
00:37:54,000 --> 00:37:56,000
ligature 的作品

1059
00:37:58,000 --> 00:38:00,000
应该不算是

1060
00:38:00,000 --> 00:38:01,000
因为我之前用的

1061
00:38:01,000 --> 00:38:02,000
之前你用那个叫什么来的

1062
00:38:02,000 --> 00:38:04,000
那个有个费的字体

1063
00:38:04,000 --> 00:38:05,000
我现在还没有

1064
00:38:05,000 --> 00:38:06,000
是

1065
00:38:06,000 --> 00:38:06,000
他也有

1066
00:38:06,000 --> 00:38:06,000
对

1067
00:38:06,000 --> 00:38:07,000
Pragma Pro

1068
00:38:07,000 --> 00:38:08,000
但是那个非常贵

1069
00:38:08,000 --> 00:38:09,000
要 100 多欧吧

1070
00:38:10,000 --> 00:38:10,000
对

1071
00:38:10,000 --> 00:38:12,000
然后 Fiery code 这款是免费的

1072
00:38:12,000 --> 00:38:13,000
还是开源的

1073
00:38:13,000 --> 00:38:14,000
刚刚推出了免费的字体

1074
00:38:15,000 --> 00:38:16,000
如果你感兴趣的话可以试一下

1075
00:38:16,000 --> 00:38:18,000
尤其是如果你是一个

1076
00:38:18,000 --> 00:38:19,000
Husker 爱好者的话

1077
00:38:21,000 --> 00:38:22,000
或者是那个 Swift

1078
00:38:23,000 --> 00:38:23,000
也可以用

1079
00:38:25,000 --> 00:38:27,000
Swift 里面其实没有太多的

1080
00:38:28,000 --> 00:38:30,000
但是 Swift 可以让你自定义

1081
00:38:30,000 --> 00:38:31,000
那个 Operator 印算符

1082
00:38:33,000 --> 00:38:34,000
实话是这么说

1083
00:38:34,000 --> 00:38:35,000
没错

1084
00:38:35,000 --> 00:38:36,000
但是真正用的

1085
00:38:36,000 --> 00:38:38,000
任何允许你自定义

1086
00:38:38,000 --> 00:38:39,000
这个印算符的语言

1087
00:38:39,000 --> 00:38:41,000
你都可以用上这个很帅气的

1088
00:38:41,000 --> 00:38:43,000
这个 Fiery code 的

1089
00:38:43,000 --> 00:38:46,000
那个字体的这个 Ligature 特性

1090
00:38:46,000 --> 00:38:46,000
对

1091
00:38:47,000 --> 00:38:48,000
这让我想起一个

1092
00:38:48,000 --> 00:38:49,000
那个前两天

1093
00:38:50,000 --> 00:38:51,000
在推上是谁来的

1094
00:38:52,000 --> 00:38:53,000
罗生说了

1095
00:38:53,000 --> 00:38:54,000
说那个

1096
00:38:55,000 --> 00:38:57,000
之前有人在试验 Swift

1097
00:38:57,000 --> 00:38:59,000
就是自定义一大堆那个运算符

1098
00:38:59,000 --> 00:39:00,000
然后用的是

1099
00:39:00,000 --> 00:39:02,000
Unicode 里面的数学符号

1100
00:39:02,000 --> 00:39:02,000
对

1101
00:39:03,000 --> 00:39:04,000
然后有人批评他说什么

1102
00:39:04,000 --> 00:39:06,000
您做这个就是

1103
00:39:06,000 --> 00:39:07,000
就从一个

1104
00:39:08,000 --> 00:39:09,000
就像我刚才说的

1105
00:39:09,000 --> 00:39:09,000
被灌

1106
00:39:09,000 --> 00:39:13,000
被这个工具附属住了手脚

1107
00:39:13,000 --> 00:39:14,000
然后不得不产生出

1108
00:39:14,000 --> 00:39:16,000
一套 Convention 的程序员的角度来看

1109
00:39:16,000 --> 00:39:18,000
这是非常

1110
00:39:19,000 --> 00:39:20,000
佳引号离经叛道的

1111
00:39:21,000 --> 00:39:22,000
然后

1112
00:39:22,000 --> 00:39:23,000
然后

1113
00:39:23,000 --> 00:39:25,000
当 Swift 开源之后

1114
00:39:25,000 --> 00:39:28,000
人们发现在 Swift 的

1115
00:39:32,000 --> 00:39:33,000
应该是什么

1116
00:39:33,000 --> 00:39:34,000
Test 或者是

1117
00:39:34,000 --> 00:39:35,000
Experimental 的

1118
00:39:35,000 --> 00:39:37,000
做 Homebrew 那哥们

1119
00:39:37,000 --> 00:39:39,000
好像写过一套类似的东西

1120
00:39:39,000 --> 00:39:40,000
应该就是他

1121
00:39:40,000 --> 00:39:40,000
没错

1122
00:39:40,000 --> 00:39:41,000
没错就是他

1123
00:39:41,000 --> 00:39:43,000
他叫什么 Matt 什么来的

1124
00:39:43,000 --> 00:39:43,000
对 Matt

1125
00:39:44,000 --> 00:39:44,000
他

1126
00:39:45,000 --> 00:39:46,000
后来 Swift 开源之后

1127
00:39:46,000 --> 00:39:48,000
人们发现在 Swift 的

1128
00:39:48,000 --> 00:39:49,000
Experimental Branch 下面

1129
00:39:49,000 --> 00:39:51,000
有这样的一系列 Features

1130
00:39:51,000 --> 00:39:53,000
而且比 Matt 做得要早

1131
00:39:53,000 --> 00:39:54,000
然后现在 Matt 就可以

1132
00:39:54,000 --> 00:39:56,000
对那些人说 In your face

1133
00:39:59,000 --> 00:40:00,000
但

1134
00:40:01,000 --> 00:40:02,000
但怎么说呢

1135
00:40:03,000 --> 00:40:04,000
这还是一个非常

1136
00:40:07,000 --> 00:40:09,000
有备于 Convention 的东西

1137
00:40:09,000 --> 00:40:09,000
就是你

1138
00:40:09,000 --> 00:40:11,000
我觉得写程序很重要一点

1139
00:40:11,000 --> 00:40:12,000
尤其是写开源程序

1140
00:40:12,000 --> 00:40:13,000
很重要一点

1141
00:40:13,000 --> 00:40:14,000
就是你写的东西

1142
00:40:14,000 --> 00:40:15,000
大家要一样是吧

1143
00:40:15,000 --> 00:40:15,000
对吧

1144
00:40:16,000 --> 00:40:16,000
对

1145
00:40:16,000 --> 00:40:19,000
而目前现在大环境是你

1146
00:40:19,000 --> 00:40:21,000
你写的东西非常牛逼的话

1147
00:40:21,000 --> 00:40:23,000
但是虽然非常牛逼

1148
00:40:23,000 --> 00:40:25,000
但是也许很多人看不懂的话

1149
00:40:26,000 --> 00:40:28,000
他贡献的编辑效应是非常低的

1150
00:40:29,000 --> 00:40:30,000
没错

1151
00:40:30,000 --> 00:40:30,000
对

1152
00:40:30,000 --> 00:40:32,000
当然 Faircode 刚才讲

1153
00:40:32,000 --> 00:40:35,000
如果你要真的使用 Ligature 的话

1154
00:40:35,000 --> 00:40:37,000
要有两个要件同时具备

1155
00:40:37,000 --> 00:40:39,000
一个是说字体要

1156
00:40:39,000 --> 00:40:41,000
具备 Ligature 的 Character

1157
00:40:41,000 --> 00:40:41,000
对

1158
00:40:41,000 --> 00:40:43,000
那些符号本身

1159
00:40:43,000 --> 00:40:44,000
要有那个外形

1160
00:40:44,000 --> 00:40:45,000
要有定义

1161
00:40:46,000 --> 00:40:48,000
另外一个就是你的排版引擎

1162
00:40:48,000 --> 00:40:49,000
要开了

1163
00:40:49,000 --> 00:40:51,000
要支持这个特性并且打开了

1164
00:40:51,000 --> 00:40:51,000
对

1165
00:40:51,000 --> 00:40:53,000
然后非常不巧

1166
00:40:54,000 --> 00:40:58,000
应该没有任何一款中端模拟器

1167
00:40:58,000 --> 00:40:59,000
或者是这种

1168
00:40:59,000 --> 00:41:03,000
就是纯符号字符界面的这种编辑器

1169
00:41:03,000 --> 00:41:04,000
有这个特性吧

1170
00:41:05,000 --> 00:41:07,000
在 Terminal Support 里面

1171
00:41:07,000 --> 00:41:10,000
我们经常发现 Terminal App 是支持的

1172
00:41:11,000 --> 00:41:11,000
是吗

1173
00:41:11,000 --> 00:41:12,000
Console 也支持

1174
00:41:13,000 --> 00:41:14,000
OK

1175
00:41:14,000 --> 00:41:18,000
但是你我用的这个 Item 是不支持

1176
00:41:19,000 --> 00:41:20,000
原来是这样

1177
00:41:20,000 --> 00:41:23,000
所以如果我用苹果自带的 Terminal 的话

1178
00:41:23,000 --> 00:41:24,000
是可以用 Faircode 的

1179
00:41:24,000 --> 00:41:24,000
对

1180
00:41:24,000 --> 00:41:25,000
你可以试一试

1181
00:41:25,000 --> 00:41:28,000
然后我为了试这个

1182
00:41:28,000 --> 00:41:31,000
我就重新用 MacVim

1183
00:41:33,000 --> 00:41:34,000
图形化的那个

1184
00:41:34,000 --> 00:41:36,000
Vim 的 Mac 原生故意版

1185
00:41:37,000 --> 00:41:38,000
对

1186
00:41:39,000 --> 00:41:41,000
所以它打开支持吗

1187
00:41:41,000 --> 00:41:42,000
它支持

1188
00:41:42,000 --> 00:41:44,000
但是有一些非常小的 Glitch

1189
00:41:44,000 --> 00:41:48,000
比如说你打一个小于等于号

1190
00:41:48,000 --> 00:41:48,000
然后

1191
00:41:50,000 --> 00:41:52,000
如果你把鼠标挪过它

1192
00:41:54,000 --> 00:41:54,000
它会

1193
00:41:56,000 --> 00:41:59,000
有时候会变回一个小于号和一个等于号

1194
00:41:59,000 --> 00:42:00,000
也许是为了改

1195
00:42:01,000 --> 00:42:02,000
这才是正确的处理方法

1196
00:42:02,000 --> 00:42:03,000
OK

1197
00:42:03,000 --> 00:42:04,000
但是有时候

1198
00:42:04,000 --> 00:42:04,000
就是你

1199
00:42:04,000 --> 00:42:06,000
如果你只是扫过那个符号的话

1200
00:42:06,000 --> 00:42:09,000
它有时候中间会出现一个裂缝

1201
00:42:10,000 --> 00:42:10,000
就是

1202
00:42:10,000 --> 00:42:11,000
这是什么

1203
00:42:11,000 --> 00:42:12,000
就感觉是一个

1204
00:42:12,000 --> 00:42:13,000
渲染错误吧

1205
00:42:13,000 --> 00:42:14,000
对渲染错误

1206
00:42:14,000 --> 00:42:14,000
对

1207
00:42:14,000 --> 00:42:16,000
但其他的什么 Xcode 还没有试

1208
00:42:16,000 --> 00:42:18,000
或者什么 Coda 之类的没有试

1209
00:42:18,000 --> 00:42:19,000
但

1210
00:42:19,000 --> 00:42:20,000
目前用过来

1211
00:42:20,000 --> 00:42:22,000
就是如果你习惯的话应该还好

1212
00:42:22,000 --> 00:42:23,000
对

1213
00:42:23,000 --> 00:42:25,000
因为这个一个最主要的问题

1214
00:42:25,000 --> 00:42:27,000
就是说我们就用那种基于终端也好

1215
00:42:27,000 --> 00:42:29,000
还像 Vim 这种基于

1216
00:42:29,000 --> 00:42:31,000
我们姑且称为

1217
00:42:32,000 --> 00:42:33,000
自缚三格的

1218
00:42:33,000 --> 00:42:36,000
或者自缚网格的这种逻辑的话

1219
00:42:36,000 --> 00:42:37,000
你把两个

1220
00:42:37,000 --> 00:42:37,000
对

1221
00:42:37,000 --> 00:42:39,000
你把两个

1222
00:42:39,000 --> 00:42:41,000
你把两个自缚融合

1223
00:42:41,000 --> 00:42:43,000
或者是多个自缚融为一个

1224
00:42:43,000 --> 00:42:45,000
它对它的定位的计算

1225
00:42:45,000 --> 00:42:47,000
还是会有一定影响的

1226
00:42:47,000 --> 00:42:47,000
对

1227
00:42:48,000 --> 00:42:49,000
那就是你光表一上去

1228
00:42:49,000 --> 00:42:50,000
你说你

1229
00:42:50,000 --> 00:42:51,000
比如说它三个自缚

1230
00:42:51,000 --> 00:42:52,000
比如说

1231
00:42:52,000 --> 00:42:53,000
大于就是那个三个

1232
00:42:54,000 --> 00:42:54,000
等于要连一起

1233
00:42:54,000 --> 00:42:55,000
你全等符号

1234
00:42:55,000 --> 00:42:56,000
举个例子

1235
00:42:57,000 --> 00:42:57,000
那

1236
00:42:58,000 --> 00:42:59,000
你把那个自缚网做

1237
00:42:59,000 --> 00:43:00,000
挪个一个位的时候

1238
00:43:00,000 --> 00:43:02,000
它说应该这个

1239
00:43:02,000 --> 00:43:04,000
应该显示你选择哪个自缚呢

1240
00:43:04,000 --> 00:43:04,000
对吧

1241
00:43:04,000 --> 00:43:05,000
就比较难做

1242
00:43:06,000 --> 00:43:06,000
对

1243
00:43:07,000 --> 00:43:09,000
刚才那个 iterm 2 不行了

1244
00:43:09,000 --> 00:43:11,000
就没有暂时没有办法

1245
00:43:12,000 --> 00:43:14,000
但是其实也是有变通的手段的

1246
00:43:14,000 --> 00:43:15,000
你知道吗

1247
00:43:15,000 --> 00:43:17,000
Wim 可以有这个东西

1248
00:43:17,000 --> 00:43:19,000
Wim 7.

1249
00:43:19,000 --> 00:43:21,000
我忘了 7.2 和 7.3

1250
00:43:21,000 --> 00:43:22,000
开始

1251
00:43:22,000 --> 00:43:25,000
支持一个叫做 conceal 的特性

1252
00:43:26,000 --> 00:43:29,000
conceal 特性做的事情跟

1253
00:43:29,000 --> 00:43:31,000
在概念上跟这个 Ligature 非常像

1254
00:43:31,000 --> 00:43:33,000
就是说它可以让你

1255
00:43:34,000 --> 00:43:36,000
把一个或者多个

1256
00:43:37,000 --> 00:43:39,000
真实的自缚

1257
00:43:39,000 --> 00:43:40,000
当成

1258
00:43:40,000 --> 00:43:42,000
另外一个

1259
00:43:42,000 --> 00:43:43,000
单独的自缚来处理

1260
00:43:44,000 --> 00:43:46,000
比如说你可以把这个

1261
00:43:46,000 --> 00:43:47,000
我之前干过

1262
00:43:47,000 --> 00:43:48,000
我之前写过一个小的

1263
00:43:50,000 --> 00:43:50,000
Wim 的插件

1264
00:43:50,000 --> 00:43:52,000
或者一个小的配置脚本吧

1265
00:43:53,000 --> 00:43:54,000
可以看到

1266
00:43:54,000 --> 00:43:55,000
叫 cute python

1267
00:43:56,000 --> 00:43:56,000
OK

1268
00:43:57,000 --> 00:43:59,000
然后它可以做一些非常邪恶的事情

1269
00:43:59,000 --> 00:44:01,000
就是用那个 Wim 的 conceal 特性

1270
00:44:01,000 --> 00:44:03,000
把 Python 里面有一些关键词

1271
00:44:03,000 --> 00:44:05,000
改成一些符号

1272
00:44:05,000 --> 00:44:07,000
就是说 Python 里面有 def

1273
00:44:07,000 --> 00:44:08,000
就是 define

1274
00:44:08,000 --> 00:44:11,000
一个定义一个函数的关键词

1275
00:44:11,000 --> 00:44:11,000
def

1276
00:44:12,000 --> 00:44:14,000
你觉得看它不爽太长的话

1277
00:44:14,000 --> 00:44:15,000
你可以换成一个 numda

1278
00:44:17,000 --> 00:44:17,000
OK

1279
00:44:18,000 --> 00:44:19,000
我还记得第一次

1280
00:44:19,000 --> 00:44:21,000
那是 2009

1281
00:44:21,000 --> 00:44:23,000
2010 年

1282
00:44:23,000 --> 00:44:25,000
2011 年的时候在北京

1283
00:44:26,000 --> 00:44:27,000
real 的家中

1284
00:44:27,000 --> 00:44:29,000
看着 real 编程那种

1285
00:44:30,000 --> 00:44:31,000
油然而生的敬佩感

1286
00:44:31,000 --> 00:44:32,000
就是他在写 Python

1287
00:44:32,000 --> 00:44:34,000
但是我看不出他在写 Python

1288
00:44:34,000 --> 00:44:36,000
因为邪教

1289
00:44:36,000 --> 00:44:39,000
对他们这个插件把 Python 改的面目全非

1290
00:44:39,000 --> 00:44:40,000
对还有一个不好意思

1291
00:44:40,000 --> 00:44:41,000
比如 return

1292
00:44:41,000 --> 00:44:42,000
就是返回

1293
00:44:43,000 --> 00:44:44,000
函数结果那个东西

1294
00:44:44,000 --> 00:44:45,000
改成一个那种

1295
00:44:45,000 --> 00:44:47,000
一个弯弯的箭头对吧

1296
00:44:48,000 --> 00:44:49,000
还有一些什么来着

1297
00:44:50,000 --> 00:44:51,000
还有那个真的 numda

1298
00:44:51,000 --> 00:44:52,000
改成一个 numda

1299
00:44:53,000 --> 00:44:53,000
参数

1300
00:44:54,000 --> 00:44:56,000
还有就是包括刚才常见的

1301
00:44:56,000 --> 00:44:57,000
把一个小于等于

1302
00:44:57,000 --> 00:44:59,000
改成一个数学的小于等于的符号

1303
00:45:00,000 --> 00:45:00,000
就这些也可以做的

1304
00:45:00,000 --> 00:45:02,000
然后这些的支持

1305
00:45:03,000 --> 00:45:05,000
就相对来说要稍微好

1306
00:45:05,000 --> 00:45:07,000
那么一点点吧

1307
00:45:07,000 --> 00:45:08,000
因为

1308
00:45:09,000 --> 00:45:10,000
他是那个 Win 原生的

1309
00:45:10,000 --> 00:45:12,000
不会出现刚才你说那种

1310
00:45:12,000 --> 00:45:13,000
渲染错误的情况

1311
00:45:13,000 --> 00:45:15,000
因为他不依赖那个任何

1312
00:45:15,000 --> 00:45:16,000
操作系统的

1313
00:45:16,000 --> 00:45:18,000
不 因为任何这个

1314
00:45:18,000 --> 00:45:19,000
这个故意的支持

1315
00:45:19,000 --> 00:45:21,000
因为他是在制服层面去做

1316
00:45:21,000 --> 00:45:22,000
这么一种事

1317
00:45:23,000 --> 00:45:23,000
对

1318
00:45:24,000 --> 00:45:26,000
所以这个连接我稍后也放出来吧

1319
00:45:26,000 --> 00:45:28,000
大家如果有兴趣去试一下这种邪教

1320
00:45:28,000 --> 00:45:29,000
也可以去尝试一下

1321
00:45:29,000 --> 00:45:32,000
算是一种 workaround 的

1322
00:45:32,000 --> 00:45:34,000
Welcome to drink their cool wine

1323
00:45:38,000 --> 00:45:40,000
除了我们刚才提到的这个

1324
00:45:41,000 --> 00:45:44,000
Faircode 和 Pragmata Pro

1325
00:45:45,000 --> 00:45:47,000
之外还有一个叫 Hasclik

1326
00:45:47,000 --> 00:45:49,000
就是的字体

1327
00:45:49,000 --> 00:45:51,000
它是应该是基于 Sourcecode Pro 改的

1328
00:45:51,000 --> 00:45:53,000
他把那个 Sourcecode Pro 里面那些

1329
00:45:55,000 --> 00:45:57,000
那个数学符号

1330
00:45:57,000 --> 00:45:58,000
或者编程符号加

1331
00:45:58,000 --> 00:45:59,000
改成了 Ligature

1332
00:45:59,000 --> 00:46:00,000
但是效果

1333
00:46:01,000 --> 00:46:02,000
就看起来不是那么漂亮

1334
00:46:02,000 --> 00:46:03,000
不过有兴趣的人

1335
00:46:03,000 --> 00:46:05,000
有兴趣的朋友可以去试一下

1336
00:46:06,000 --> 00:46:07,000
Hasclik

1337
00:46:07,000 --> 00:46:09,000
Hasclik 和 Ligature 的

1338
00:46:10,000 --> 00:46:11,000
Parliament

1339
00:46:12,000 --> 00:46:14,000
这也是一个挺好的尝试

1340
00:46:18,000 --> 00:46:19,000
下面有一种新闻其实挺搞笑

1341
00:46:22,000 --> 00:46:24,000
这个是出现在

1342
00:46:24,000 --> 00:46:26,000
我想想这个是出现在哪里

1343
00:46:26,000 --> 00:46:27,000
这个是出现在 Linux kernel

1344
00:46:27,000 --> 00:46:30,000
内核开发组里面的

1345
00:46:30,000 --> 00:46:31,000
一小段

1346
00:46:31,000 --> 00:46:32,000
它是一个 Commit

1347
00:46:32,000 --> 00:46:34,000
因为 Linux 内核是用 Git

1348
00:46:34,000 --> 00:46:36,000
管理这个软件版本的

1349
00:46:37,000 --> 00:46:39,000
然后你们是每次要写一个 Commit

1350
00:46:39,000 --> 00:46:41,000
这个叫什么

1351
00:46:41,000 --> 00:46:42,000
Commit Message

1352
00:46:42,000 --> 00:46:43,000
中文叫什么

1353
00:46:44,000 --> 00:46:47,000
提交说明

1354
00:46:47,000 --> 00:46:48,000
对

1355
00:46:48,000 --> 00:46:49,000
好吧

1356
00:46:49,000 --> 00:46:53,000
然后他们是给一个芯片的

1357
00:46:53,000 --> 00:46:55,000
算是写驱动应该是

1358
00:46:56,000 --> 00:46:56,000
的一段

1359
00:46:56,000 --> 00:46:59,000
打的一段这个 Commit

1360
00:47:00,000 --> 00:47:03,000
然后里面有个非常奇妙的小故事

1361
00:47:03,000 --> 00:47:04,000
说这个

1362
00:47:05,000 --> 00:47:07,000
AD 是公元后是吧

1363
00:47:07,000 --> 00:47:08,000
DC 是公元后

1364
00:47:08,000 --> 00:47:09,000
在公元 1582 年

1365
00:47:09,000 --> 00:47:11,000
教皇格里高离 13 世

1366
00:47:12,000 --> 00:47:14,000
念完念完接着念

1367
00:47:14,000 --> 00:47:15,000
就这个调调

1368
00:47:15,000 --> 00:47:17,000
这个要及时去翻译它

1369
00:47:17,000 --> 00:47:17,000
我做不到

1370
00:47:17,000 --> 00:47:18,000
好吧我试试

1371
00:47:19,000 --> 00:47:20,000
公元 1582 年

1372
00:47:21,000 --> 00:47:23,000
教皇格里高离 13 世

1373
00:47:23,000 --> 00:47:26,000
发现既有的如略立法

1374
00:47:26,000 --> 00:47:29,000
无法正确的反映现实

1375
00:47:29,000 --> 00:47:33,000
于是他改进了

1376
00:47:33,000 --> 00:47:34,000
计算润年的方式

1377
00:47:35,000 --> 00:47:37,000
以满足这一条件

1378
00:47:37,000 --> 00:47:40,000
这就是格里立和如略立的来源

1379
00:47:40,000 --> 00:47:41,000
你就是这么说

1380
00:47:41,000 --> 00:47:43,000
还有润年一个没润年

1381
00:47:43,000 --> 00:47:45,000
对不是格里立的润年

1382
00:47:45,000 --> 00:47:47,000
要比以如略立的润年

1383
00:47:47,000 --> 00:47:49,000
计算的方法更正确一点

1384
00:47:49,000 --> 00:47:50,000
我们现在用的就是格里立

1385
00:47:50,000 --> 00:47:51,000
更多一些

1386
00:47:52,000 --> 00:47:53,000
对格里高离立

1387
00:47:53,000 --> 00:47:54,000
然后

1388
00:47:55,000 --> 00:47:56,000
与此类似

1389
00:47:56,000 --> 00:47:57,000
在公元 2013 年

1390
00:47:58,000 --> 00:47:59,000
Rockchip

1391
00:47:59,000 --> 00:48:01,000
Rockchip 是中国

1392
00:48:02,000 --> 00:48:03,000
福建的那个厂商

1393
00:48:03,000 --> 00:48:04,000
新店

1394
00:48:04,000 --> 00:48:04,000
嗯哼

1395
00:48:05,000 --> 00:48:07,000
Rockchip 的硬件工程师认为

1396
00:48:07,000 --> 00:48:09,000
目前的格里高离立

1397
00:48:10,000 --> 00:48:12,000
还是有缺陷

1398
00:48:14,000 --> 00:48:17,000
因此 11 月应该有 31 天

1399
00:48:18,000 --> 00:48:20,000
然后后面写说

1400
00:48:20,000 --> 00:48:22,000
非常幽默的笔法说

1401
00:48:23,000 --> 00:48:24,000
不幸的是

1402
00:48:25,000 --> 00:48:26,000
格里立

1403
00:48:26,000 --> 00:48:29,000
能够在世界范围内获得应用

1404
00:48:29,000 --> 00:48:32,000
已经花费了 300 年时间

1405
00:48:32,000 --> 00:48:35,000
所以就因为一些比较晚进的

1406
00:48:36,000 --> 00:48:36,000
新教国家

1407
00:48:36,000 --> 00:48:37,000
它是

1408
00:48:37,000 --> 00:48:39,000
还是使用如略立的

1409
00:48:39,000 --> 00:48:40,000
因为如略立的

1410
00:48:40,000 --> 00:48:41,000
就如果你改立法的话

1411
00:48:41,000 --> 00:48:43,000
那个节日的日期就要变了

1412
00:48:43,000 --> 00:48:46,000
然后有些新教国家到现在都没有改

1413
00:48:46,000 --> 00:48:47,000
But wait a second

1414
00:48:48,000 --> 00:48:50,000
最近新教国家应该是七几年才改

1415
00:48:51,000 --> 00:48:52,000
如果我没记错了

1416
00:48:52,000 --> 00:48:53,000
然后

1417
00:48:53,000 --> 00:48:54,000
这个 comment message

1418
00:48:54,000 --> 00:48:56,000
comment message 里面就说

1419
00:48:56,000 --> 00:48:57,000
这个

1420
00:48:58,000 --> 00:48:59,000
Rockchip 的厂商的改变

1421
00:48:59,000 --> 00:49:01,000
可能还要过一年时间

1422
00:49:01,000 --> 00:49:03,000
才能被全球的其他人接受

1423
00:49:03,000 --> 00:49:05,000
所以目前这里是一个小的 patch

1424
00:49:05,000 --> 00:49:08,000
让它能够跟世界上其他地方

1425
00:49:08,000 --> 00:49:10,000
所使用的格里高离立来协谈

1426
00:49:12,000 --> 00:49:13,000
对

1427
00:49:13,000 --> 00:49:15,000
当然前面都是段子

1428
00:49:15,000 --> 00:49:18,000
因为写这个 comment message 的人叫

1429
00:49:18,000 --> 00:49:20,000
Julius Werner

1430
00:49:20,000 --> 00:49:20,000
对

1431
00:49:20,000 --> 00:49:22,000
然后他是

1432
00:49:22,000 --> 00:49:23,000
他是 Chromium 那个组的

1433
00:49:24,000 --> 00:49:25,000
Chrome 工作应该是

1434
00:49:25,000 --> 00:49:28,000
想来他应该是为

1435
00:49:28,000 --> 00:49:31,000
用 Rockchip 的平板电脑

1436
00:49:31,000 --> 00:49:33,000
跑 Chrome 牛奶器

1437
00:49:33,000 --> 00:49:35,000
或者 Chrome OS 的时候

1438
00:49:35,000 --> 00:49:37,000
搞到这个硬件 Bug

1439
00:49:37,000 --> 00:49:38,000
愚蠢的问题

1440
00:49:39,000 --> 00:49:39,000
对

1441
00:49:40,000 --> 00:49:42,000
所以说到刚才那个问题在哪里

1442
00:49:42,000 --> 00:49:43,000
可能很多人没有意识到

1443
00:49:43,000 --> 00:49:44,000
11 月是没有 31 号的

1444
00:49:45,000 --> 00:49:45,000
What

1445
00:49:45,000 --> 00:49:47,000
会有人意识不到吗

1446
00:49:48,000 --> 00:49:48,000
很多人意识不到

1447
00:49:48,000 --> 00:49:50,000
你不要小看这一个

1448
00:49:50,000 --> 00:49:50,000
好

1449
00:49:50,000 --> 00:49:51,000
我问你

1450
00:49:51,000 --> 00:49:54,000
一年 12 个月哪几个月是有 31 号的

1451
00:49:55,000 --> 00:50:00,000
1 月 3 月 5 月 7 月 8 月

1452
00:50:01,000 --> 00:50:03,000
10 月

1453
00:50:03,000 --> 00:50:06,000
12 月

1454
00:50:07,000 --> 00:50:07,000
对吧

1455
00:50:07,000 --> 00:50:09,000
所以你怎么记的

1456
00:50:10,000 --> 00:50:11,000
就是

1457
00:50:11,000 --> 00:50:12,000
这是有由来的

1458
00:50:12,000 --> 00:50:12,000
因为

1459
00:50:14,000 --> 00:50:16,000
7 月是 September

1460
00:50:17,000 --> 00:50:19,000
7 月在罗马是 9 月

1461
00:50:19,000 --> 00:50:22,000
因为 Sept 是 9 对吧

1462
00:50:22,000 --> 00:50:24,000
September 在国内马是 9 月

1463
00:50:24,000 --> 00:50:25,000
然后

1464
00:50:25,000 --> 00:50:26,000
Augustus

1465
00:50:26,000 --> 00:50:27,000
奥古斯都

1466
00:50:28,000 --> 00:50:29,000
把自己的名字

1467
00:50:29,000 --> 00:50:30,000
命名成了 8 月

1468
00:50:30,000 --> 00:50:32,000
就是现在的 8 月

1469
00:50:32,000 --> 00:50:34,000
然后

1470
00:50:34,000 --> 00:50:37,000
Augustus 认为他应该和

1471
00:50:39,000 --> 00:50:42,000
他应该和之前的 Juleus

1472
00:50:42,000 --> 00:50:43,000
就是凯撒

1473
00:50:44,000 --> 00:50:45,000
就如略凯撒一样伟大

1474
00:50:46,000 --> 00:50:49,000
而如略凯撒所在的那个月是 7 月

1475
00:50:49,000 --> 00:50:50,000
7 月有 31 天

1476
00:50:50,000 --> 00:50:52,000
他认为自己所在的月也应该有 31 天

1477
00:50:52,000 --> 00:50:53,000
所以 8 月有 30 天

1478
00:50:54,000 --> 00:50:55,000
然后 7 月和 8 月

1479
00:50:55,000 --> 00:50:57,000
在这边要逆一个顺序

1480
00:50:57,000 --> 00:50:58,000
就这么来的呗

1481
00:50:59,000 --> 00:51:00,000
这不是很简单吗

1482
00:51:01,000 --> 00:51:03,000
你这个太绕了

1483
00:51:03,000 --> 00:51:03,000
但是

1484
00:51:04,000 --> 00:51:06,000
有一个非常取巧的一个办法

1485
00:51:06,000 --> 00:51:10,000
是数手上的高低吗还是什么

1486
00:51:10,000 --> 00:51:12,000
因为很多人知道

1487
00:51:12,000 --> 00:51:13,000
这个太弱智了吧

1488
00:51:13,000 --> 00:51:13,000
好吗

1489
00:51:14,000 --> 00:51:14,000
但是很好用

1490
00:51:15,000 --> 00:51:16,000
好用在哪

1491
00:51:16,000 --> 00:51:17,000
你要去数

1492
00:51:18,000 --> 00:51:19,000
就介绍一下可以

1493
00:51:19,000 --> 00:51:20,000
OK 好吧

1494
00:51:20,000 --> 00:51:23,000
如果你把是两个拳头拼在一起

1495
00:51:23,000 --> 00:51:25,000
然后去数拳头上的

1496
00:51:27,000 --> 00:51:28,000
高低

1497
00:51:28,000 --> 00:51:30,000
从左手小指开始是 1 月

1498
00:51:30,000 --> 00:51:34,000
然后小指和左手无名指之间的凹

1499
00:51:34,000 --> 00:51:35,000
是 2 月

1500
00:51:36,000 --> 00:51:37,000
那就可以数 1 月大

1501
00:51:37,000 --> 00:51:38,000
2 月小

1502
00:51:38,000 --> 00:51:38,000
3 月大

1503
00:51:38,000 --> 00:51:38,000
4 月小

1504
00:51:38,000 --> 00:51:39,000
5 月大

1505
00:51:39,000 --> 00:51:39,000
6 月小

1506
00:51:39,000 --> 00:51:40,000
7 月大

1507
00:51:40,000 --> 00:51:42,000
然后到右手 8 月大

1508
00:51:42,000 --> 00:51:42,000
9 月小

1509
00:51:42,000 --> 00:51:43,000
10 月大

1510
00:51:43,000 --> 00:51:44,000
11 月小

1511
00:51:44,000 --> 00:51:45,000
12 月大

1512
00:51:45,000 --> 00:51:45,000
这是一个

1513
00:51:45,000 --> 00:51:48,000
这是英美小朋友所使用的方案

1514
00:51:48,000 --> 00:51:49,000
对

1515
00:51:49,000 --> 00:51:51,000
我每次我想不起来的时候

1516
00:51:51,000 --> 00:51:53,000
都是要两手探开来

1517
00:51:53,000 --> 00:51:55,000
不是探开就是两手抱拳来数一下

1518
00:51:56,000 --> 00:51:59,000
可是你不觉得这个要比脑子里面想说

1519
00:52:00,000 --> 00:52:03,000
Julius 和 Augustus 一样伟大

1520
00:52:03,000 --> 00:52:03,000
要难很多

1521
00:52:03,000 --> 00:52:08,000
但是你那个要具备好多基础知识才可以用

1522
00:52:08,000 --> 00:52:09,000
你的这个叫什么

1523
00:52:09,000 --> 00:52:11,000
你的 dependency 太多了

1524
00:52:11,000 --> 00:52:12,000
好吧

1525
00:52:12,000 --> 00:52:13,000
你看

1526
00:52:13,000 --> 00:52:15,000
我有一个非常复杂的 compile system

1527
00:52:16,000 --> 00:52:18,000
首先你得知道这个叫什么

1528
00:52:18,000 --> 00:52:20,000
这两个人分别是谁对吧

1529
00:52:20,000 --> 00:52:24,000
然后知道他们的生日分别是哪个月

1530
00:52:24,000 --> 00:52:26,000
然后他们得知道 September

1531
00:52:26,000 --> 00:52:29,000
英文的 9 月其实是

1532
00:52:30,000 --> 00:52:30,000
7 月

1533
00:52:30,000 --> 00:52:31,000
7 月对

1534
00:52:32,000 --> 00:52:32,000
对吧

1535
00:52:32,000 --> 00:52:34,000
December 是 10 月

1536
00:52:34,000 --> 00:52:34,000
这个

1537
00:52:35,000 --> 00:52:35,000
对啊

1538
00:52:35,000 --> 00:52:37,000
你这个叫什么来的

1539
00:52:37,000 --> 00:52:39,000
dependency 有点多

1540
00:52:39,000 --> 00:52:41,000
这个方法就比较简单明了的

1541
00:52:41,000 --> 00:52:42,000
数据法是吧

1542
00:52:42,000 --> 00:52:44,000
就好像有些人写

1543
00:52:45,000 --> 00:52:47,000
那个 magic number 是怎么来的

1544
00:52:48,000 --> 00:52:49,000
快速开方的

1545
00:52:50,000 --> 00:52:51,000
OK

1546
00:52:51,000 --> 00:52:51,000
对

1547
00:52:51,000 --> 00:52:56,000
你费了半天自己写了一个无比正确的开方算法

1548
00:52:56,000 --> 00:52:59,000
人家说过来写了一个 magic number

1549
00:52:59,000 --> 00:53:01,000
然后就把这个事情完美的解决了

1550
00:53:01,000 --> 00:53:02,000
然后精度还可以接受

1551
00:53:02,000 --> 00:53:03,000
在线性时间解决了

1552
00:53:07,000 --> 00:53:08,000
是不是惊呆了

1553
00:53:09,000 --> 00:53:10,000
是好吧

1554
00:53:13,000 --> 00:53:16,000
说到刚才讲线性时间也提到

1555
00:53:16,000 --> 00:53:18,000
最近有个挺好玩的事

1556
00:53:19,000 --> 00:53:20,000
问题怎么来的

1557
00:53:20,000 --> 00:53:22,000
请给出一个函数

1558
00:53:22,000 --> 00:53:24,000
在它是 O 1 的函数

1559
00:53:24,000 --> 00:53:29,000
然后给出让他算这个 int 类型的

1560
00:53:30,000 --> 00:53:32,000
n 感单号那个东西叫什么来的

1561
00:53:32,000 --> 00:53:33,000
阶层

1562
00:53:33,000 --> 00:53:33,000
阶层对

1563
00:53:34,000 --> 00:53:34,000
what

1564
00:53:35,000 --> 00:53:36,000
在线性时间内

1565
00:53:36,000 --> 00:53:38,000
对就 O 1 的这个时间内给出

1566
00:53:38,000 --> 00:53:41,000
n 一个函就写个阶层的一个函数

1567
00:53:41,000 --> 00:53:43,000
然后在线性时间内给出结果

1568
00:53:43,000 --> 00:53:44,000
OK

1569
00:53:44,000 --> 00:53:45,000
答案是什么

1570
00:53:46,000 --> 00:53:47,000
你不知道怎么做吗

1571
00:53:47,000 --> 00:53:48,000
不知道

1572
00:53:48,000 --> 00:53:50,000
说出来一定会惊死你

1573
00:53:51,000 --> 00:53:52,000
surprise me

1574
00:53:53,000 --> 00:53:54,000
你就把那个结果预先算好

1575
00:53:54,000 --> 00:53:56,000
写到一个什么数组里面

1576
00:53:57,000 --> 00:53:58,000
因为 n

1577
00:53:58,000 --> 00:53:59,000
一阶层的话

1578
00:53:59,000 --> 00:54:01,000
n 不需要多大

1579
00:54:01,000 --> 00:54:03,000
就会 overflow 那个 int 类型

1580
00:54:04,000 --> 00:54:06,000
所以那个列表不会多大

1581
00:54:06,000 --> 00:54:07,000
jump table 吗

1582
00:54:07,000 --> 00:54:08,000
对没错

1583
00:54:08,000 --> 00:54:09,000
都不用 jump

1584
00:54:11,000 --> 00:54:13,000
可是这是赖皮

1585
00:54:14,000 --> 00:54:17,000
但是他 totally 符合这个 spec

1586
00:54:18,000 --> 00:54:23,000
因为一旦发生 integer overflow 的话

1587
00:54:23,000 --> 00:54:25,000
它的 behavior is undefined

1588
00:54:25,000 --> 00:54:27,000
那 undefined 你可以返回任何值

1589
00:54:29,000 --> 00:54:32,000
那好吧

1590
00:54:32,000 --> 00:54:35,000
这其实是和语言和开发环境相关的

1591
00:54:35,000 --> 00:54:38,000
如果你在 Haskell 里面写一个 n 1 的

1592
00:54:39,000 --> 00:54:41,000
计算阶层的函数是不能这么写

1593
00:54:42,000 --> 00:54:45,000
Haskell 的 int 类型是任意进度的吗

1594
00:54:45,000 --> 00:54:47,000
Haskell 有 number 类型

1595
00:54:48,000 --> 00:54:50,000
也有跟平台相关的 int 32 类型

1596
00:54:50,000 --> 00:54:51,000
如果没记错的话

1597
00:54:51,000 --> 00:54:52,000
但是我很可能是记错了

1598
00:54:52,000 --> 00:54:55,000
我说是写 int 32 这种类型的东西

1599
00:54:55,000 --> 00:54:56,000
可以用赖皮的方法

1600
00:54:56,000 --> 00:54:58,000
这算是一种赖皮对吧

1601
00:54:58,000 --> 00:54:59,000
对没错

1602
00:55:00,000 --> 00:55:01,000
但是真面试是不会过的

1603
00:55:03,000 --> 00:55:04,000
不一定

1604
00:55:04,000 --> 00:55:06,000
可能会有点类似

1605
00:55:06,000 --> 00:55:09,000
你说 magic number 快速开放这个算会不会过呢

1606
00:55:11,000 --> 00:55:15,000
首先不可能有人在面试的时间

1607
00:55:15,000 --> 00:55:16,000
直接想到这个 number

1608
00:55:18,000 --> 00:55:19,000
你如果写出这个答案

1609
00:55:19,000 --> 00:55:22,000
也就意味着你是看到过这个故事

1610
00:55:23,000 --> 00:55:25,000
那最开始发明 magic number 那个人

1611
00:55:26,000 --> 00:55:27,000
他也不可能是在面试的时候发明

1612
00:55:27,000 --> 00:55:28,000
hold on a second

1613
00:55:28,000 --> 00:55:31,000
那个哥们好像就是写 FMPEG 的作者吧

1614
00:55:32,000 --> 00:55:32,000
不可能

1615
00:55:32,000 --> 00:55:33,000
这个

1616
00:55:33,000 --> 00:55:34,000
这是

1617
00:55:34,000 --> 00:55:35,000
Kamak

1618
00:55:35,000 --> 00:55:35,000
对

1619
00:55:35,000 --> 00:55:37,000
他比那个人早多了

1620
00:55:37,000 --> 00:55:40,000
而且这甚至不是 Kamak 发明的

1621
00:55:40,000 --> 00:55:42,000
Kamak 说他是在什么地方看到的

1622
00:55:43,000 --> 00:55:46,000
如果你去看 wikipedia 的 magic number 的词条的话

1623
00:55:46,000 --> 00:55:50,000
他会注明说 Kamak 不详

1624
00:55:50,000 --> 00:55:52,000
就是谁找出来这个数不详

1625
00:55:52,000 --> 00:55:53,000
OK

1626
00:55:54,000 --> 00:55:56,000
anyway 扯回刚才 rockchip

1627
00:55:56,000 --> 00:55:58,000
扯到哪儿了

1628
00:55:58,000 --> 00:56:00,000
有点绕得远了

1629
00:56:00,000 --> 00:56:04,000
刚才讲 rockchip 是中国福建的一家

1630
00:56:04,000 --> 00:56:08,000
专门为低端平板电脑生产 intel 芯片的船商

1631
00:56:08,000 --> 00:56:09,000
好像是这样的

1632
00:56:09,000 --> 00:56:11,000
而且他应该不是代工厂商

1633
00:56:11,000 --> 00:56:12,000
他只是一个研发厂商

1634
00:56:12,000 --> 00:56:13,000
他自己没有厂

1635
00:56:15,000 --> 00:56:18,000
好像这家其实挺奇怪的

1636
00:56:18,000 --> 00:56:22,000
因为之前当时 intel 宣布过一个合作

1637
00:56:22,000 --> 00:56:23,000
就是跟这家厂的

1638
00:56:23,000 --> 00:56:25,000
但我当时还觉得挺奇怪的

1639
00:56:25,000 --> 00:56:26,000
为什么去这家

1640
00:56:26,000 --> 00:56:29,000
后来我大概明白怎么一回事了

1641
00:56:29,000 --> 00:56:31,000
就是因为 intel 要在

1642
00:56:31,000 --> 00:56:32,000
什么

1643
00:56:32,000 --> 00:56:35,000
抢回被 ARM 处理器夺走的

1644
00:56:35,000 --> 00:56:35,000
这个

1645
00:56:35,000 --> 00:56:37,000
低端平板电脑市场

1646
00:56:37,000 --> 00:56:38,000
对吧

1647
00:56:38,000 --> 00:56:43,000
所以特别跟 intel 有一个合作

1648
00:56:45,000 --> 00:56:49,000
去基于 intel 的 ATOM 处理器

1649
00:56:50,000 --> 00:56:52,000
去做一些这种低端的平板

1650
00:56:52,000 --> 00:56:55,000
市面上那种第 1000 块钱以下的 intel 平板

1651
00:56:55,000 --> 00:56:58,000
基本上都是用的这家的芯片

1652
00:56:59,000 --> 00:57:00,000
非常有意思

1653
00:57:00,000 --> 00:57:00,000
然后

1654
00:57:02,000 --> 00:57:05,000
他们就在芯片里面搞出了这么一种娄子

1655
00:57:05,000 --> 00:57:06,000
摇鹅子

1656
00:57:06,000 --> 00:57:07,000
对

1657
00:57:07,000 --> 00:57:08,000
怎么说呢

1658
00:57:08,000 --> 00:57:10,000
其实挺丢人的

1659
00:57:10,000 --> 00:57:12,000
因为从一个硬件的厂商

1660
00:57:12,000 --> 00:57:14,000
因为你硬件也是某种程度

1661
00:57:14,000 --> 00:57:15,000
它还是有软件的成分在里面

1662
00:57:15,000 --> 00:57:17,000
硬件是固化的软件

1663
00:57:17,000 --> 00:57:18,000
没错

1664
00:57:18,000 --> 00:57:20,000
建筑是凝固的音乐

1665
00:57:20,000 --> 00:57:22,000
硬件是固化的软件

1666
00:57:22,000 --> 00:57:24,000
记得还是对上不错

1667
00:57:24,000 --> 00:57:25,000
anyway

1668
00:57:25,000 --> 00:57:27,000
就说这个事儿

1669
00:57:27,000 --> 00:57:29,000
本身说明了一个什么现象

1670
00:57:29,000 --> 00:57:31,000
就是说可能反映了

1671
00:57:32,000 --> 00:57:34,000
我们做事的时候

1672
00:57:34,000 --> 00:57:35,000
认真不足

1673
00:57:37,000 --> 00:57:38,000
不够死抠子

1674
00:57:38,000 --> 00:57:39,000
抠的不够死

1675
00:57:39,000 --> 00:57:40,000
不够严谨

1676
00:57:41,000 --> 00:57:42,000
或者说你的包括

1677
00:57:42,000 --> 00:57:44,000
因为芯片还是有验证的环节

1678
00:57:44,000 --> 00:57:47,000
都没有发现这种明显的问题

1679
00:57:47,000 --> 00:57:47,000
是吧

1680
00:57:48,000 --> 00:57:49,000
对这说明什么

1681
00:57:49,000 --> 00:57:51,000
说明他们开发周期短于一年

1682
00:57:53,000 --> 00:57:54,000
还没到那一年

1683
00:57:54,000 --> 00:57:55,000
但是已经出现这个问题了是吧

1684
00:57:55,000 --> 00:57:56,000
对

1685
00:57:58,000 --> 00:57:59,000
其实我有点好奇

1686
00:57:59,000 --> 00:58:00,000
就是为什么

1687
00:58:00,000 --> 00:58:03,000
calender 这个东西要在硬件层面实现

1688
00:58:03,000 --> 00:58:05,000
它是一个硬件时钟

1689
00:58:06,000 --> 00:58:08,000
硬件时钟可以理解

1690
00:58:08,000 --> 00:58:09,000
硬件时钟可以简单的

1691
00:58:09,000 --> 00:58:11,000
只提供一个技术

1692
00:58:11,000 --> 00:58:12,000
为什么

1693
00:58:13,000 --> 00:58:15,000
calender 这个东西要由硬件来提供

1694
00:58:16,000 --> 00:58:18,000
这是一个好问题

1695
00:58:18,000 --> 00:58:22,000
比如说你在电脑上提供一个 ROM 级别的

1696
00:58:22,000 --> 00:58:24,000
硬件时钟我可以理解

1697
00:58:24,000 --> 00:58:26,000
因为那是 BIOS 一部分

1698
00:58:26,000 --> 00:58:30,000
但是在一个简单的平板上

1699
00:58:30,000 --> 00:58:31,000
为什么也需要这个

1700
00:58:31,000 --> 00:58:33,000
还是说其实平板本质上就是一台电脑

1701
00:58:34,000 --> 00:58:35,000
既然电脑需要的话

1702
00:58:35,000 --> 00:58:36,000
平板也需要

1703
00:58:36,000 --> 00:58:37,000
对我觉得就是这样子的

1704
00:58:38,000 --> 00:58:38,000
好吧

1705
00:58:39,000 --> 00:58:40,000
但是我觉得可能更

1706
00:58:41,000 --> 00:58:43,000
刚才你说那种是一种实现方式

1707
00:58:43,000 --> 00:58:45,000
就是说我硬件只提供一个

1708
00:58:45,000 --> 00:58:49,000
按秒自增的一个绝对数

1709
00:58:49,000 --> 00:58:51,000
然后你这像单面机那样

1710
00:58:51,000 --> 00:58:52,000
对

1711
00:58:52,000 --> 00:58:54,000
然后你直接通过软件的算法去

1712
00:58:54,000 --> 00:58:56,000
把它转为一个

1713
00:58:56,000 --> 00:58:58,000
我们正常的一个日历的时间

1714
00:58:58,000 --> 00:58:59,000
因为这个算法还挺复杂的

1715
00:58:59,000 --> 00:59:01,000
因为它不是一个科学的东西

1716
00:59:01,000 --> 00:59:01,000
对吧

1717
00:59:01,000 --> 00:59:02,000
它是一个有些

1718
00:59:03,000 --> 00:59:04,000
各种各样的修正值

1719
00:59:04,000 --> 00:59:06,000
各种各样的特例加在里面去的

1720
00:59:06,000 --> 00:59:06,000
对吧

1721
00:59:06,000 --> 00:59:08,000
比如说历史上还要哪几年

1722
00:59:08,000 --> 00:59:09,000
少了几天

1723
00:59:09,000 --> 00:59:10,000
还是什么乱七八糟的

1724
00:59:10,000 --> 00:59:13,000
对日期实际上是一个非常复杂的

1725
00:59:13,000 --> 00:59:14,000
对还加上什么

1726
00:59:14,000 --> 00:59:15,000
润年润秒之类的

1727
00:59:15,000 --> 00:59:16,000
就很复杂

1728
00:59:16,000 --> 00:59:17,000
日期最让人讨厌的地方是

1729
00:59:17,000 --> 00:59:20,000
有时候它不是算出来的

1730
00:59:20,000 --> 00:59:21,000
它是观测出来的

1731
00:59:24,000 --> 00:59:25,000
但是

1732
00:59:25,000 --> 00:59:27,000
但是这家出现这种问题

1733
00:59:27,000 --> 00:59:30,000
其实我觉得在某种程度上

1734
00:59:30,000 --> 00:59:31,000
是给什么叫做

1735
00:59:31,000 --> 00:59:34,000
中国制造这个牌子是抹黑的

1736
00:59:35,000 --> 00:59:37,000
伤害了中国人民的感情

1737
00:59:38,000 --> 00:59:40,000
就为什么我们总觉得说

1738
00:59:40,000 --> 00:59:41,000
Made in Germany

1739
00:59:41,000 --> 00:59:42,000
Made in Japan

1740
00:59:43,000 --> 00:59:44,000
现在是一个

1741
00:59:45,000 --> 00:59:46,000
好的品质的标志

1742
00:59:46,000 --> 00:59:48,000
大家的追求要买

1743
00:59:48,000 --> 00:59:50,000
外国本土制造的

1744
00:59:50,000 --> 00:59:51,000
而不是说外国品牌

1745
00:59:51,000 --> 00:59:52,000
中国制造这种东西

1746
00:59:52,000 --> 00:59:53,000
对吧

1747
00:59:53,000 --> 00:59:54,000
出了大洞

1748
00:59:54,000 --> 00:59:55,000
对

1749
00:59:57,000 --> 00:59:57,000
有自黑

1750
00:59:57,000 --> 01:00:01,000
但我觉得一种很重要的原因就是说

1751
01:00:02,000 --> 01:00:03,000
这些

1752
01:00:04,000 --> 01:00:07,000
这种 Made in XX 国家的这种品牌

1753
01:00:07,000 --> 01:00:08,000
在某种程度上代表了

1754
01:00:08,000 --> 01:00:09,000
消费者

1755
01:00:09,000 --> 01:00:12,000
对这种品牌的一种信任

1756
01:00:12,000 --> 01:00:15,000
但是如果说你老是出这种幺蛾子的话

1757
01:00:15,000 --> 01:00:15,000
其实

1758
01:00:16,000 --> 01:00:18,000
你这种 Made in China 的这种牌子

1759
01:00:18,000 --> 01:00:19,000
就不可能说

1760
01:00:19,000 --> 01:00:20,000
在

1761
01:00:20,000 --> 01:00:21,000
一二十年后

1762
01:00:21,000 --> 01:00:22,000
或者二三十年后

1763
01:00:22,000 --> 01:00:24,000
变得像我们现在看

1764
01:00:24,000 --> 01:00:25,000
Made in Germany

1765
01:00:25,000 --> 01:00:26,000
Made in Japan 一样那种

1766
01:00:26,000 --> 01:00:28,000
有一种什么信任感在里面

1767
01:00:29,000 --> 01:00:31,000
我觉得还是一个沉淀的问题

1768
01:00:32,000 --> 01:00:34,000
德国货在 18 世纪的时候

1769
01:00:34,000 --> 01:00:35,000
也是列等货的代名词

1770
01:00:35,000 --> 01:00:36,000
英国货是最好的

1771
01:00:37,000 --> 01:00:38,000
然后日本货在 90 年代

1772
01:00:40,000 --> 01:00:41,000
80 年代也是

1773
01:00:41,000 --> 01:00:42,000
Wait a second

1774
01:00:42,000 --> 01:00:44,000
日本货在 60 年代是比较烂的

1775
01:00:44,000 --> 01:00:45,000
欧洲人就觉得日本货

1776
01:00:45,000 --> 01:00:48,000
就像现在的 Made in China 一样

1777
01:00:48,000 --> 01:00:51,000
对 80 年代的 Made in Germany 已经很好了

1778
01:00:51,000 --> 01:00:52,000
80 年代已经

1779
01:00:52,000 --> 01:00:54,000
日本已经是世界上首屈一指的

1780
01:00:54,000 --> 01:00:55,000
硬件制造商

1781
01:00:55,000 --> 01:00:56,000
然后现在

1782
01:00:56,000 --> 01:00:58,000
现在也就是中国比较

1783
01:00:58,000 --> 01:01:00,000
但即便

1784
01:01:00,000 --> 01:01:02,000
现在的中国货也

1785
01:01:02,000 --> 01:01:04,000
已经要比什么

1786
01:01:04,000 --> 01:01:05,000
孟加拉或者是

1787
01:01:06,000 --> 01:01:07,000
越南之类的要好一些

1788
01:01:08,000 --> 01:01:08,000
所以我觉得

1789
01:01:08,000 --> 01:01:09,000
就是一个积累过程吧

1790
01:01:09,000 --> 01:01:11,000
也许再过上 100 年

1791
01:01:11,000 --> 01:01:12,000
中国货也就变成了

1792
01:01:12,000 --> 01:01:14,000
就高端品牌

1793
01:01:15,000 --> 01:01:16,000
好佛

1794
01:01:16,000 --> 01:01:17,000
但如果他们

1795
01:01:17,000 --> 01:01:18,000
接得出这种央儿子

1796
01:01:18,000 --> 01:01:19,000
我觉得这个时间

1797
01:01:19,000 --> 01:01:20,000
要往后再拖

1798
01:01:20,000 --> 01:01:21,000
当前肯定不可能

1799
01:01:22,000 --> 01:01:22,000
但

1800
01:01:23,000 --> 01:01:24,000
看将来吧

1801
01:01:25,000 --> 01:01:25,000
OK

1802
01:01:26,000 --> 01:01:26,000
Yep

1803
01:01:29,000 --> 01:01:31,000
下面有一个小玩意儿

1804
01:01:31,000 --> 01:01:32,000
之前我们也讲过

1805
01:01:32,000 --> 01:01:34,000
就是你在

1806
01:01:35,000 --> 01:01:36,000
Linux 上面用的是一个叫做

1807
01:01:36,000 --> 01:01:38,000
I 3 的窗口管理系统对吧

1808
01:01:38,000 --> 01:01:38,000
对

1809
01:01:39,000 --> 01:01:41,000
然后当时我们说它是一个叫做

1810
01:01:41,000 --> 01:01:44,000
Tiling Based Window Management

1811
01:01:44,000 --> 01:01:46,000
就是基于磁片的

1812
01:01:47,000 --> 01:01:47,000
对

1813
01:01:47,000 --> 01:01:48,000
如果你不知道

1814
01:01:48,000 --> 01:01:50,000
基于磁片是什么意思呢

1815
01:01:50,000 --> 01:01:52,000
请找一个 Windows Phone 来看一下就知道了

1816
01:01:52,000 --> 01:01:56,000
请看一下自己家厕所的磁砖

1817
01:01:56,000 --> 01:01:59,000
这个比喻太生硬了

1818
01:02:01,000 --> 01:02:02,000
对

1819
01:02:02,000 --> 01:02:03,000
简单来说一个 Tiling Window Manager

1820
01:02:03,000 --> 01:02:06,000
会把你的窗口尽可能的铺开

1821
01:02:06,000 --> 01:02:09,000
就是彼此不互相遮挡

1822
01:02:09,000 --> 01:02:10,000
这是 Tiling Window Manager 的

1823
01:02:10,000 --> 01:02:12,000
一个最主要的特征

1824
01:02:14,000 --> 01:02:15,000
这也就是为什么很多人会选用

1825
01:02:15,000 --> 01:02:18,000
比如说我会选用它的原因

1826
01:02:18,000 --> 01:02:19,000
就是因为你不用再操心

1827
01:02:19,000 --> 01:02:20,000
哪个窗口在下

1828
01:02:20,000 --> 01:02:21,000
哪个窗口在上

1829
01:02:21,000 --> 01:02:21,000
因为

1830
01:02:22,000 --> 01:02:24,000
所有的窗口都

1831
01:02:24,000 --> 01:02:26,000
不存在遮挡的问题

1832
01:02:26,000 --> 01:02:26,000
对

1833
01:02:26,000 --> 01:02:28,000
如果你不看一个窗口的话

1834
01:02:28,000 --> 01:02:30,000
那它要么完全的被

1835
01:02:30,000 --> 01:02:32,000
另外一个窗口遮挡了

1836
01:02:32,000 --> 01:02:33,000
要么它就

1837
01:02:34,000 --> 01:02:35,000
被关掉了

1838
01:02:36,000 --> 01:02:39,000
然后我之前用 Linux 桌面的时候

1839
01:02:39,000 --> 01:02:42,000
也小小试过一段时间 I 3

1840
01:02:42,000 --> 01:02:43,000
确实好用

1841
01:02:45,000 --> 01:02:46,000
但是

1842
01:02:47,000 --> 01:02:49,000
但是我现在用 OS 10 了

1843
01:02:49,000 --> 01:02:49,000
OK

1844
01:02:50,000 --> 01:02:51,000
然后在 OS 10 上

1845
01:02:51,000 --> 01:02:52,000
我们两个

1846
01:02:52,000 --> 01:02:53,000
你是用什么 DV

1847
01:02:54,000 --> 01:02:54,000
对 DV

1848
01:02:54,000 --> 01:02:56,000
对我们两个都用 DV

1849
01:02:56,000 --> 01:02:57,000
就是游戏用的

1850
01:02:57,000 --> 01:02:58,000
不解决这个问题

1851
01:02:58,000 --> 01:02:58,000
对

1852
01:02:58,000 --> 01:03:01,000
你不需要用鼠标去挪动窗口

1853
01:03:01,000 --> 01:03:03,000
因为用鼠标挪动窗口

1854
01:03:03,000 --> 01:03:04,000
是一个非常耗时的功能

1855
01:03:04,000 --> 01:03:06,000
而且在 99%情况下

1856
01:03:06,000 --> 01:03:08,000
你进入一个特定的工作模式的时候

1857
01:03:08,000 --> 01:03:10,000
你的窗口布局实际上是特定的

1858
01:03:10,000 --> 01:03:12,000
所以你可以用一个快捷键

1859
01:03:12,000 --> 01:03:13,000
来快速的把自己的窗口

1860
01:03:13,000 --> 01:03:15,000
挪到自己想要的位置

1861
01:03:16,000 --> 01:03:16,000
对

1862
01:03:17,000 --> 01:03:18,000
但毕竟什么 DV

1863
01:03:18,000 --> 01:03:20,000
它不是 I 3 那种方式吗

1864
01:03:20,000 --> 01:03:21,000
还是很

1865
01:03:22,000 --> 01:03:23,000
有一种什么来的

1866
01:03:24,000 --> 01:03:28,000
你还是有没有人为的操作

1867
01:03:28,000 --> 01:03:30,000
把窗口挪动到指令的位置

1868
01:03:30,000 --> 01:03:31,000
而它不能做到说

1869
01:03:31,000 --> 01:03:33,000
一个窗口一打开就去那个位置

1870
01:03:33,000 --> 01:03:33,000
对

1871
01:03:33,000 --> 01:03:34,000
对吧

1872
01:03:34,000 --> 01:03:35,000
而且还有一些边框

1873
01:03:35,000 --> 01:03:37,000
那些也没有办法很好的弄掉

1874
01:03:37,000 --> 01:03:38,000
对

1875
01:03:38,000 --> 01:03:42,000
然后就出了这么一个叫做 KWM

1876
01:03:42,000 --> 01:03:44,000
Tiling Window Manager

1877
01:03:44,000 --> 01:03:47,000
with focus follows mouse for OS 10

1878
01:03:48,000 --> 01:03:48,000
对

1879
01:03:48,000 --> 01:03:49,000
但是现在说明一下

1880
01:03:49,000 --> 01:03:50,000
这个我没有装

1881
01:03:50,000 --> 01:03:51,000
因为

1882
01:03:51,000 --> 01:03:52,000
我也没装

1883
01:03:53,000 --> 01:03:54,000
现在是一个

1884
01:03:55,000 --> 01:03:56,000
还在开发中的一个东西

1885
01:03:56,000 --> 01:03:58,000
就可能会有一点点问题

1886
01:03:58,000 --> 01:03:59,000
版本号是 0.几

1887
01:03:59,000 --> 01:04:01,000
来着 0.

1888
01:04:01,000 --> 01:04:02,000
对

1889
01:04:02,000 --> 01:04:04,000
但是从截图和描述情况来看

1890
01:04:04,000 --> 01:04:08,000
它基本上在 OS 10 上复刻了 I 3 的全套功能

1891
01:04:08,000 --> 01:04:09,000
对

1892
01:04:09,000 --> 01:04:09,000
包括

1893
01:04:09,000 --> 01:04:10,000
very promising

1894
01:04:10,000 --> 01:04:13,000
最最重要的 focus follows mouse

1895
01:04:13,000 --> 01:04:15,000
这个肯定要稍微解释一下什么意思

1896
01:04:16,000 --> 01:04:17,000
毕竟我们现在用的

1897
01:04:17,000 --> 01:04:20,000
桌面系统它还是一个单一 focus

1898
01:04:20,000 --> 01:04:22,000
单一焦点的一个系统

1899
01:04:22,000 --> 01:04:24,000
就是一次只能有一个窗口处于激活状态

1900
01:04:25,000 --> 01:04:27,000
一次只有一个对话框处于一个激活状态

1901
01:04:27,000 --> 01:04:27,000
对吧

1902
01:04:28,000 --> 01:04:29,000
然后

1903
01:04:29,000 --> 01:04:32,000
focus follows mouse 它会直接决定说

1904
01:04:32,000 --> 01:04:33,000
你把那个鼠标光标

1905
01:04:33,000 --> 01:04:35,000
挪到某一个窗口上面的时候

1906
01:04:35,000 --> 01:04:36,000
哪怕你没有点击激活它

1907
01:04:36,000 --> 01:04:38,000
它会自动帮你切换到

1908
01:04:38,000 --> 01:04:39,000
那个英文上面去

1909
01:04:39,000 --> 01:04:39,000
这个时候

1910
01:04:39,000 --> 01:04:41,000
你去输入的快捷键什么的

1911
01:04:41,000 --> 01:04:43,000
都可以比较方便的

1912
01:04:44,000 --> 01:04:45,000
意识到来去

1913
01:04:45,000 --> 01:04:47,000
不用再单独按一个键去 tap

1914
01:04:47,000 --> 01:04:49,000
就说这个 tap 去切换了

1915
01:04:50,000 --> 01:04:50,000
对

1916
01:04:51,000 --> 01:04:52,000
这个我觉得非常好用

1917
01:04:54,000 --> 01:04:54,000
对

1918
01:04:54,000 --> 01:04:56,000
这是一个比较

1919
01:04:56,000 --> 01:04:57,000
尤其是在 tiling window manager 里面

1920
01:04:57,000 --> 01:04:59,000
比较重要一个特性

1921
01:05:00,000 --> 01:05:01,000
就是你在低位

1922
01:05:01,000 --> 01:05:02,000
当然低位的

1923
01:05:02,000 --> 01:05:03,000
低位完全不去

1924
01:05:03,000 --> 01:05:06,000
低位实际上是一个非破坏型的窗口

1925
01:05:07,000 --> 01:05:08,000
窗口管理辅助工具

1926
01:05:09,000 --> 01:05:11,000
它没有必要实现这个功能

1927
01:05:11,000 --> 01:05:12,000
而且我觉得

1928
01:05:13,000 --> 01:05:14,000
Mac 上面有一点

1929
01:05:14,000 --> 01:05:16,000
或者说我已经习惯一眼

1930
01:05:16,000 --> 01:05:18,000
也是如果你的一个窗口比较小

1931
01:05:19,000 --> 01:05:21,000
然后它遮挡了

1932
01:05:21,000 --> 01:05:22,000
后面一个比较大的窗口的一部分

1933
01:05:23,000 --> 01:05:25,000
然后你把 focus 放在

1934
01:05:25,000 --> 01:05:26,000
前面的小窗口上

1935
01:05:27,000 --> 01:05:30,000
鼠标刺在后面的大窗口上

1936
01:05:30,000 --> 01:05:32,000
此时你挪弄滚动条

1937
01:05:33,000 --> 01:05:35,000
被滚动的是后面的大窗口

1938
01:05:36,000 --> 01:05:37,000
对

1939
01:05:37,000 --> 01:05:38,000
这个 Mac 上

1940
01:05:39,000 --> 01:05:41,000
这个特性是已经有一点那种

1941
01:05:41,000 --> 01:05:42,000
focus follow mouse 的感觉了

1942
01:05:43,000 --> 01:05:43,000
对

1943
01:05:43,000 --> 01:05:45,000
这实际上是一个

1944
01:05:45,000 --> 01:05:46,000
对于我来说已经足够很有利

1945
01:05:48,000 --> 01:05:50,000
只需要滚动窗口就好了

1946
01:05:50,000 --> 01:05:50,000
对

1947
01:05:50,000 --> 01:05:51,000
对

1948
01:05:51,000 --> 01:05:52,000
而且这个特性有时候还挺有用的

1949
01:05:52,000 --> 01:05:53,000
就是你在

1950
01:05:53,000 --> 01:05:55,000
尤其比如在做摘钞的时候

1951
01:05:55,000 --> 01:05:56,000
你的

1952
01:05:57,000 --> 01:05:58,000
你是希望自己的输入焦点

1953
01:05:58,000 --> 01:05:59,000
一直在前面那个小窗口里面

1954
01:05:59,000 --> 01:06:00,000
然后后面那个大窗口被

1955
01:06:01,000 --> 01:06:04,000
但是后面那个大窗口应该仍旧被

1956
01:06:06,000 --> 01:06:07,000
被滚动

1957
01:06:07,000 --> 01:06:12,000
如果你是严格意义上的 focus follow mouse 的话

1958
01:06:12,000 --> 01:06:14,000
有可能小窗口就直接不见了

1959
01:06:15,000 --> 01:06:17,000
就被切到背后挡住了

1960
01:06:17,000 --> 01:06:18,000
对没错

1961
01:06:19,000 --> 01:06:20,000
对这也是一个

1962
01:06:20,000 --> 01:06:23,000
所以有时候有一些那种工具型的应用

1963
01:06:23,000 --> 01:06:26,000
它会做一个 always on top 的这么一种模式

1964
01:06:26,000 --> 01:06:27,000
就一直在顶端

1965
01:06:28,000 --> 01:06:29,000
就不管你把焦点丢到哪里去

1966
01:06:29,000 --> 01:06:31,000
它一直浮在那个屏幕的最顶层

1967
01:06:31,000 --> 01:06:32,000
如果你把那个屏幕上

1968
01:06:32,000 --> 01:06:34,000
一层一层叠加的状况的话

1969
01:06:34,000 --> 01:06:34,000
对

1970
01:06:35,000 --> 01:06:37,000
但是仍旧有一个输入焦点的问题

1971
01:06:37,000 --> 01:06:39,000
就是你可能光标焦点不在哪

1972
01:06:39,000 --> 01:06:40,000
但你希望输入焦点在哪

1973
01:06:41,000 --> 01:06:41,000
对

1974
01:06:41,000 --> 01:06:42,000
这是一个

1975
01:06:45,000 --> 01:06:46,000
然后

1976
01:06:46,000 --> 01:06:47,000
有兴趣的

1977
01:06:47,000 --> 01:06:50,000
就是如果你在桌面上用过 i 3

1978
01:06:50,000 --> 01:06:52,000
或者被我们两个安利的觉得挺像事实的话

1979
01:06:52,000 --> 01:06:56,000
可以去用一下这个叫做 kwm 的窗口管理系统

1980
01:06:56,000 --> 01:06:58,000
对它是用那个

1981
01:06:58,000 --> 01:07:00,000
对它是我看它是用 carbon 写的

1982
01:07:00,000 --> 01:07:02,000
C++

1983
01:07:02,000 --> 01:07:04,000
呼叫 carbon API

1984
01:07:04,000 --> 01:07:05,000
然后去

1985
01:07:05,000 --> 01:07:06,000
它实际上是一个叫什么

1986
01:07:09,000 --> 01:07:09,000
这东西叫什么

1987
01:07:09,000 --> 01:07:10,000
中文叫什么来着

1988
01:07:10,000 --> 01:07:11,000
就是 assistant

1989
01:07:12,000 --> 01:07:16,000
被残障人士利用那个残障人士

1990
01:07:17,000 --> 01:07:19,000
Divine 也是需要用残障人士才可以

1991
01:07:19,000 --> 01:07:20,000
叫辅助功能

1992
01:07:21,000 --> 01:07:21,000
对

1993
01:07:21,000 --> 01:07:24,000
它是用那辅助功能去看那个 event loop

1994
01:07:25,000 --> 01:07:25,000
然后

1995
01:07:26,000 --> 01:07:29,000
去呼叫那口口的那套 API

1996
01:07:30,000 --> 01:07:30,000
没错

1997
01:07:31,000 --> 01:07:32,000
可以试试

1998
01:07:33,000 --> 01:07:35,000
我刚才说的话的意思是

1999
01:07:35,000 --> 01:07:37,000
它的性能应该还不错

2000
01:07:39,000 --> 01:07:40,000
绕了好远

2001
01:07:40,000 --> 01:07:42,000
对它不是用什么非常二的手段

2002
01:07:42,000 --> 01:07:44,000
什么 AppleScript 之类的

2003
01:07:44,000 --> 01:07:46,000
它是一个实打实的 C++程序

2004
01:07:47,000 --> 01:07:49,000
Divine 是用 AppleScript 的方式实现的吗

2005
01:07:49,000 --> 01:07:51,000
我不知道好像不是吧

2006
01:07:51,000 --> 01:07:53,000
但是看它的那个感觉

2007
01:07:53,000 --> 01:07:55,000
其实也是通过某种窗口 API 的方式来实现的

2008
01:07:55,000 --> 01:07:58,000
它提供了一个脚本接口

2009
01:07:58,000 --> 01:07:58,000
所以有可能

2010
01:07:59,000 --> 01:07:59,000
有可能

2011
01:07:59,000 --> 01:08:02,000
所以在本质上和 AppleScript 没什么区别

2012
01:08:02,000 --> 01:08:02,000
对

2013
01:08:03,000 --> 01:08:09,000
Divine 有时候会让你的窗口失去外框之类的

2014
01:08:09,000 --> 01:08:10,000
就我碰到过两次

2015
01:08:10,000 --> 01:08:12,000
虽然非常的稀少

2016
01:08:13,000 --> 01:08:14,000
而且其实不是所有的

2017
01:08:15,000 --> 01:08:20,000
不是所有的 App 都会接受 Divine 的重订

2018
01:08:20,000 --> 01:08:22,000
重新改变它大小

2019
01:08:22,000 --> 01:08:23,000
对主要有些窗口

2020
01:08:23,000 --> 01:08:25,000
它会指定一个最小尺寸

2021
01:08:25,000 --> 01:08:27,000
比如说微信的 Mac 版

2022
01:08:27,000 --> 01:08:29,000
它你就不能缩到小一个

2023
01:08:29,000 --> 01:08:31,000
说某一个尺寸之后

2024
01:08:31,000 --> 01:08:32,000
它就不能再缩了

2025
01:08:34,000 --> 01:08:34,000
就挺讨厌的

2026
01:08:35,000 --> 01:08:36,000
这个小屏幕

2027
01:08:36,000 --> 01:08:37,000
没有装微信

2028
01:08:37,000 --> 01:08:39,000
这种东西怎么装在自己的电脑上

2029
01:08:39,000 --> 01:08:41,000
打字方便

2030
01:08:42,000 --> 01:08:44,000
我宁可牺牲这个方便

2031
01:08:45,000 --> 01:08:47,000
你不要让腾讯的东西装在我电脑上

2032
01:08:47,000 --> 01:08:49,000
说明你用的还不够多

2033
01:08:50,000 --> 01:08:52,000
其实微博应该已经被

2034
01:08:52,000 --> 01:08:53,000
微博不是腾讯的

2035
01:08:53,000 --> 01:08:53,000
OK

2036
01:08:56,000 --> 01:08:57,000
我刚才想说

2037
01:08:57,000 --> 01:08:59,000
微博已经被集成到系统级别

2038
01:08:59,000 --> 01:08:59,000
所以

2039
01:09:00,000 --> 01:09:00,000
没有

2040
01:09:00,000 --> 01:09:01,000
只能发不能看

2041
01:09:01,000 --> 01:09:03,000
你还要看还是得装个那个

2042
01:09:04,000 --> 01:09:05,000
OK

2043
01:09:06,000 --> 01:09:07,000
推特也是一样的

2044
01:09:08,000 --> 01:09:09,000
半集成这个叫

2045
01:09:10,000 --> 01:09:11,000
推特至少是一个

2046
01:09:12,000 --> 01:09:13,000
不是中国公司

2047
01:09:17,000 --> 01:09:19,000
下面播报一个今天大好消息

2048
01:09:21,000 --> 01:09:22,000
好消息

2049
01:09:22,000 --> 01:09:24,000
总共录过不要错过

2050
01:09:24,000 --> 01:09:26,000
I 18 I 19 I 10

2051
01:09:27,000 --> 01:09:30,000
全都 reaching end of life on Tuesday

2052
01:09:31,000 --> 01:09:31,000
对

2053
01:09:31,000 --> 01:09:34,000
就是各位听到这期节目的

2054
01:09:34,000 --> 01:09:37,000
这是这一周日的节目对吧

2055
01:09:37,000 --> 01:09:38,000
对

2056
01:09:38,000 --> 01:09:39,000
就是大概两天以后

2057
01:09:39,000 --> 01:09:40,000
各位听到这期节目的

2058
01:09:40,000 --> 01:09:41,000
之后的第一个星期二

2059
01:09:41,000 --> 01:09:43,000
也就是 12 日

2060
01:09:43,000 --> 01:09:44,000
1 月 12 日

2061
01:09:44,000 --> 01:09:46,000
2016 年 1 月 12 日

2062
01:09:46,000 --> 01:09:47,000
历史性的一刻

2063
01:09:47,000 --> 01:09:47,000
对

2064
01:09:47,000 --> 01:09:51,000
IE Internet Explorer 8、9、10

2065
01:09:51,000 --> 01:09:53,000
都不再

2066
01:09:53,000 --> 01:09:55,000
被官方支持了

2067
01:09:55,000 --> 01:09:56,000
也就是他们

2068
01:09:56,000 --> 01:09:58,000
不再有发布安全补丁

2069
01:09:58,000 --> 01:09:58,000
对

2070
01:09:58,000 --> 01:09:59,000
不再发布安全补丁

2071
01:09:59,000 --> 01:10:01,000
而且用户在

2072
01:10:01,000 --> 01:10:03,000
装了一个补丁之后

2073
01:10:03,000 --> 01:10:05,000
会在使用流感器的时候

2074
01:10:05,000 --> 01:10:06,000
接收到一个提示说

2075
01:10:06,000 --> 01:10:08,000
你赶紧升级到 IE 11

2076
01:10:11,000 --> 01:10:11,000
对

2077
01:10:11,000 --> 01:10:14,000
此前的 IE 6 和 7 已经死了很早

2078
01:10:14,000 --> 01:10:17,000
然后现在 8、9、10 也

2079
01:10:17,000 --> 01:10:17,000
就

2080
01:10:18,000 --> 01:10:21,000
sooner than planned

2081
01:10:23,000 --> 01:10:25,000
来到自己的生命的尽头

2082
01:10:26,000 --> 01:10:28,000
IE 6 和 7 应该是随着

2083
01:10:28,000 --> 01:10:30,000
Windows XP 的受众正寝

2084
01:10:30,000 --> 01:10:33,000
开始正儿八经不被支持的吧

2085
01:10:33,000 --> 01:10:33,000
对

2086
01:10:33,000 --> 01:10:35,000
我记得那个时候中国政府好像还

2087
01:10:35,000 --> 01:10:38,000
官方谴责微软不再支持 Windows XP

2088
01:10:38,000 --> 01:10:39,000
有这事吧

2089
01:10:40,000 --> 01:10:41,000
真的吗

2090
01:10:41,000 --> 01:10:41,000
有这事

2091
01:10:41,000 --> 01:10:43,000
我记得好像是

2092
01:10:43,000 --> 01:10:44,000
很有可能是以讹传讹

2093
01:10:44,000 --> 01:10:45,000
但

2094
01:10:46,000 --> 01:10:46,000
对

2095
01:10:46,000 --> 01:10:47,000
各位有兴趣的话

2096
01:10:47,000 --> 01:10:47,000
也可以考试一下

2097
01:10:47,000 --> 01:10:48,000
也可能做得出来

2098
01:10:48,000 --> 01:10:49,000
对

2099
01:10:49,000 --> 01:10:50,000
我没有任何

2100
01:10:51,000 --> 01:10:54,000
没有任何责任

2101
01:10:54,000 --> 01:10:56,000
毫无责任的传给邀

2102
01:10:58,000 --> 01:10:59,000
你不把人收屉你就死了

2103
01:10:59,000 --> 01:11:00,000
你知道吗

2104
01:11:01,000 --> 01:11:02,000
好吧

2105
01:11:02,000 --> 01:11:03,000
无所谓了

2106
01:11:03,000 --> 01:11:04,000
你现在已经不是了

2107
01:11:04,000 --> 01:11:05,000
不受法律

2108
01:11:05,000 --> 01:11:07,000
不受你国防局的关系

2109
01:11:07,000 --> 01:11:08,000
耶

2110
01:11:10,000 --> 01:11:12,000
微软的官方政策现在是怎么样

2111
01:11:12,000 --> 01:11:14,000
它只

2112
01:11:14,000 --> 01:11:14,000
叫什么来着

2113
01:11:15,000 --> 01:11:18,000
只更新维护最新一个版本的 IE

2114
01:11:18,000 --> 01:11:19,000
对吧

2115
01:11:19,000 --> 01:11:19,000
对

2116
01:11:20,000 --> 01:11:21,000
目前是 IE 11

2117
01:11:22,000 --> 01:11:24,000
以及新出的叫做

2118
01:11:24,000 --> 01:11:25,000
AXE 的个栏器

2119
01:11:26,000 --> 01:11:26,000
对

2120
01:11:28,000 --> 01:11:30,000
当然其实这个也会带来一些

2121
01:11:30,000 --> 01:11:32,000
不大不小的影响

2122
01:11:32,000 --> 01:11:35,000
本来什么就千疮百孔的安全

2123
01:11:37,000 --> 01:11:38,000
现状是吧

2124
01:11:38,000 --> 01:11:40,000
然后又不再发官方支持了

2125
01:11:40,000 --> 01:11:41,000
以后再报个什么各种

2126
01:11:41,000 --> 01:11:42,000
zero day

2127
01:11:42,000 --> 01:11:44,000
你就只能歇菜了

2128
01:11:45,000 --> 01:11:47,000
但此举主要也是逼迫

2129
01:11:47,000 --> 01:11:49,000
某一些

2130
01:11:50,000 --> 01:11:53,000
机构政府以及企业去升级

2131
01:11:54,000 --> 01:11:55,000
对

2132
01:11:55,000 --> 01:11:56,000
怎么说呢

2133
01:11:56,000 --> 01:11:58,000
反正为了技术的进步

2134
01:11:58,000 --> 01:11:59,000
总是要牺牲一点点安全性

2135
01:12:00,000 --> 01:12:00,000
对

2136
01:12:00,000 --> 01:12:03,000
但是我发现最近就遇到一些

2137
01:12:03,000 --> 01:12:05,000
不大不小的问题

2138
01:12:06,000 --> 01:12:09,000
我装了一个 Windows 10

2139
01:12:09,000 --> 01:12:09,000
对

2140
01:12:10,000 --> 01:12:11,000
我也装了 Windows 10

2141
01:12:11,000 --> 01:12:14,000
然后用它的 IE 11 或者是 Edge 去访问

2142
01:12:14,000 --> 01:12:17,000
一个我国政府的官方网站

2143
01:12:17,000 --> 01:12:18,000
要申请一个东西

2144
01:12:19,000 --> 01:12:19,000
OK

2145
01:12:19,000 --> 01:12:20,000
歇菜了

2146
01:12:20,000 --> 01:12:21,000
就歇菜了

2147
01:12:21,000 --> 01:12:23,000
那是进行不下去

2148
01:12:25,000 --> 01:12:25,000
我也不知道问题

2149
01:12:25,000 --> 01:12:27,000
而且我点了那个叫做什么来着

2150
01:12:27,000 --> 01:12:29,000
compatibility 兼容模式

2151
01:12:30,000 --> 01:12:31,000
还是不行

2152
01:12:31,000 --> 01:12:32,000
还是不行

2153
01:12:33,000 --> 01:12:35,000
我也不知道该怎么办

2154
01:12:35,000 --> 01:12:35,000
OK

2155
01:12:35,000 --> 01:12:38,000
然后这个是 2015 年

2156
01:12:39,000 --> 01:12:41,000
我们天朝政府的

2157
01:12:43,000 --> 01:12:45,000
门户网站下面

2158
01:12:45,000 --> 01:12:47,000
依然还写的那么一句经典的台词

2159
01:12:48,000 --> 01:12:49,000
推荐分辨率 800 x 600

2160
01:12:49,000 --> 01:12:50,000
为了保证最佳效果

2161
01:12:50,000 --> 01:12:53,000
请推荐使用 800 x 600 分辨率下

2162
01:12:53,000 --> 01:12:54,000
使用 IE 6

2163
01:12:55,000 --> 01:12:56,000
用来访问奔战

2164
01:12:59,000 --> 01:12:59,000
怎么说呢

2165
01:13:00,000 --> 01:13:02,000
有时候你会觉得

2166
01:13:02,000 --> 01:13:05,000
中国把很多东西当成一个

2167
01:13:06,000 --> 01:13:07,000
基础建设来使用

2168
01:13:07,000 --> 01:13:08,000
但实际上软件的

2169
01:13:09,000 --> 01:13:12,000
更新的速度是远远超过于官员的预期

2170
01:13:12,000 --> 01:13:14,000
他当成基础建设

2171
01:13:15,000 --> 01:13:16,000
这个做法是没错的

2172
01:13:16,000 --> 01:13:18,000
他就说我们之前要用那个词

2173
01:13:18,000 --> 01:13:19,000
叫什么

2174
01:13:20,000 --> 01:13:22,000
Lowest Common Denominator

2175
01:13:22,000 --> 01:13:23,000
这一组一记对了

2176
01:13:23,000 --> 01:13:25,000
最小公分模

2177
01:13:25,000 --> 01:13:26,000
对

2178
01:13:27,000 --> 01:13:28,000
就是没错的

2179
01:13:28,000 --> 01:13:32,000
因为你是一个政府机构

2180
01:13:32,000 --> 01:13:36,000
你要保证东西它的可用性

2181
01:13:36,000 --> 01:13:38,000
你肯定要选择一个最低平台去做

2182
01:13:38,000 --> 01:13:40,000
东西本身倒其实是没有什么问题

2183
01:13:40,000 --> 01:13:42,000
但是你可不可以选择一种

2184
01:13:42,000 --> 01:13:44,000
更加规范的方式

2185
01:13:44,000 --> 01:13:45,000
比如说

2186
01:13:45,000 --> 01:13:47,000
因为政府网站我会填表单比较多

2187
01:13:47,000 --> 01:13:48,000
对吧

2188
01:13:48,000 --> 01:13:51,000
你就老老实实用一个 HTML 的 4

2189
01:13:52,000 --> 01:13:53,000
都不要说 5 了

2190
01:13:53,000 --> 01:13:55,000
用 HTML 4 的这些表单

2191
01:13:56,000 --> 01:13:57,000
这样把你填就好了

2192
01:13:57,000 --> 01:13:57,000
行不行

2193
01:13:58,000 --> 01:13:59,000
非要搞一个什么

2194
01:14:01,000 --> 01:14:01,000
插件

2195
01:14:02,000 --> 01:14:03,000
这就不说了

2196
01:14:03,000 --> 01:14:05,000
比如说插件你还有个安全的考虑是吧

2197
01:14:05,000 --> 01:14:08,000
非要弄一些非常诡异的 JavaScript 的

2198
01:14:08,000 --> 01:14:10,000
那个

2199
01:14:12,000 --> 01:14:14,000
那种特效

2200
01:14:14,000 --> 01:14:15,000
比如说你写个日期吧

2201
01:14:15,000 --> 01:14:16,000
就简单一个对吧

2202
01:14:16,000 --> 01:14:18,000
你就给一个框框数

2203
01:14:18,000 --> 01:14:21,000
2015-12-13

2204
01:14:21,000 --> 01:14:23,000
点月是就够了对吧

2205
01:14:23,000 --> 01:14:24,000
它不行

2206
01:14:24,000 --> 01:14:25,000
它非要弄一个按钮

2207
01:14:26,000 --> 01:14:29,000
然后按下来是一个展开的日历

2208
01:14:29,000 --> 01:14:30,000
然后你要一段

2209
01:14:30,000 --> 01:14:32,000
一点一点然后跳到你出生那一年

2210
01:14:32,000 --> 01:14:33,000
出生那一月

2211
01:14:33,000 --> 01:14:35,000
出生那一天再点一下

2212
01:14:35,000 --> 01:14:37,000
但如果你是像我们这种 80 后

2213
01:14:37,000 --> 01:14:38,000
你觉得还可以忍是吧

2214
01:14:38,000 --> 01:14:42,000
从 2015 年再点个 24 就回到 198 几年了对吧

2215
01:14:43,000 --> 01:14:45,000
但是你要是对一个

2216
01:14:45,000 --> 01:14:47,000
用 196 几年出生的人呢

2217
01:14:49,000 --> 01:14:50,000
是吧

2218
01:14:50,000 --> 01:14:51,000
是这样没错

2219
01:14:51,000 --> 01:14:53,000
然后他们的解决方案说

2220
01:14:53,000 --> 01:14:55,000
那你可以直接双击 2015

2221
01:14:55,000 --> 01:14:57,000
或者 2016 年份

2222
01:14:57,000 --> 01:14:59,000
然后把它编辑成 196 几不就好了吗

2223
01:14:59,000 --> 01:15:01,000
就不用点 50 次了对吧

2224
01:15:01,000 --> 01:15:02,000
既然如此的话

2225
01:15:02,000 --> 01:15:03,000
你为什么要做这个日历呢

2226
01:15:03,000 --> 01:15:03,000
你知道吗

2227
01:15:03,000 --> 01:15:05,000
在框里边输入不就好了吗

2228
01:15:07,000 --> 01:15:08,000
因为有些人适合一点

2229
01:15:09,000 --> 01:15:10,000
所以嘛

2230
01:15:11,000 --> 01:15:12,000
然后你知道

2231
01:15:12,000 --> 01:15:14,000
因为诱惑习惯是很难说的事情

2232
01:15:14,000 --> 01:15:15,000
我知道你草点在哪

2233
01:15:15,000 --> 01:15:17,000
但我想说的就是

2234
01:15:17,000 --> 01:15:18,000
草点还没完

2235
01:15:18,000 --> 01:15:19,000
就是我理解你说

2236
01:15:19,000 --> 01:15:20,000
你说有些人不懂

2237
01:15:20,000 --> 01:15:22,000
或者你还会输错格式

2238
01:15:22,000 --> 01:15:24,000
比如他会输一个中文的横线

2239
01:15:24,000 --> 01:15:25,000
或者其他让你帮他自缚

2240
01:15:25,000 --> 01:15:26,000
你无法控制

2241
01:15:26,000 --> 01:15:28,000
那你要用这个日历空间

2242
01:15:28,000 --> 01:15:29,000
我也没有问题

2243
01:15:29,000 --> 01:15:30,000
那拜托能不能用一个

2244
01:15:31,000 --> 01:15:33,000
向前兼容的日历空间

2245
01:15:34,000 --> 01:15:36,000
你不要写一个日历空间出来

2246
01:15:36,000 --> 01:15:38,000
让你用一个最新的

2247
01:15:38,000 --> 01:15:39,000
最符合这个

2248
01:15:39,000 --> 01:15:41,000
这个 htm 这个标准的

2249
01:15:41,000 --> 01:15:43,000
其实反而不能用那个空间

2250
01:15:43,000 --> 01:15:44,000
也输不进那个字

2251
01:15:44,000 --> 01:15:45,000
是不是就很沮丧

2252
01:15:47,000 --> 01:15:49,000
这个好吧

2253
01:15:50,000 --> 01:15:51,000
这我觉得

2254
01:15:51,000 --> 01:15:55,000
所以我的这个吐槽点在于

2255
01:15:55,000 --> 01:15:58,000
如果说你的设计意向是说

2256
01:15:58,000 --> 01:15:59,000
是一个

2257
01:16:00,000 --> 01:16:02,000
面向 Lowest Common Denominator

2258
01:16:02,000 --> 01:16:04,000
最小公分母的这种设计的话

2259
01:16:04,000 --> 01:16:05,000
那就不要搞那么多

2260
01:16:05,000 --> 01:16:06,000
复杂的花花肠子好吧

2261
01:16:07,000 --> 01:16:08,000
好吧

2262
01:16:09,000 --> 01:16:10,000
所以当然了

2263
01:16:11,000 --> 01:16:13,000
这个东西一向就是说

2264
01:16:14,000 --> 01:16:15,000
欧洲我不知道

2265
01:16:15,000 --> 01:16:17,000
北美政府做的就还比较不错

2266
01:16:17,000 --> 01:16:19,000
他的网站再丑再烂

2267
01:16:19,000 --> 01:16:20,000
至少保证你在

2268
01:16:21,000 --> 01:16:24,000
基本上主流的操作系统

2269
01:16:24,000 --> 01:16:25,000
主流的浏览器里面

2270
01:16:25,000 --> 01:16:27,000
用都没有问题对吧

2271
01:16:27,000 --> 01:16:29,000
但中国的政府网站

2272
01:16:29,000 --> 01:16:32,000
90%你离了 Ie 6 就是不行

2273
01:16:33,000 --> 01:16:36,000
中国这很多事情都是一个

2274
01:16:37,000 --> 01:16:39,000
都是一个非常混沌的

2275
01:16:39,000 --> 01:16:40,000
政治决策的过程

2276
01:16:40,000 --> 01:16:42,000
不但是我不觉得

2277
01:16:42,000 --> 01:16:44,000
这个是一个政府的问题

2278
01:16:44,000 --> 01:16:44,000
你不能指望说

2279
01:16:44,000 --> 01:16:46,000
政府这么一种官僚机构

2280
01:16:46,000 --> 01:16:48,000
他能够去帮你想到这些技术问题

2281
01:16:48,000 --> 01:16:49,000
这个是明显是政府

2282
01:16:49,000 --> 01:16:51,000
找的外包开发者

2283
01:16:51,000 --> 01:16:52,000
开发者的水平

2284
01:16:53,000 --> 01:16:54,000
低下了一个结果

2285
01:16:57,000 --> 01:16:58,000
但是为什么会找到

2286
01:16:58,000 --> 01:17:00,000
开发水平低下的开发者

2287
01:17:01,000 --> 01:17:03,000
也是政府决策的一个过程

2288
01:17:04,000 --> 01:17:06,000
他的这个良

2289
01:17:06,000 --> 01:17:06,000
是就是说

2290
01:17:07,000 --> 01:17:09,000
哪怕你说在北美政府

2291
01:17:09,000 --> 01:17:10,000
一个美国政府也好

2292
01:17:10,000 --> 01:17:11,000
我不知道德国政府怎么样

2293
01:17:12,000 --> 01:17:13,000
所有国家政府找到开发者

2294
01:17:13,000 --> 01:17:15,000
肯定不是那个国家最优秀的

2295
01:17:15,000 --> 01:17:16,000
这个是无庸置疑的

2296
01:17:16,000 --> 01:17:18,000
就是说你肯定找的是一个

2297
01:17:18,000 --> 01:17:19,000
他们投标

2298
01:17:20,000 --> 01:17:21,000
找最低报价的那个

2299
01:17:21,000 --> 01:17:23,000
那肯定是最最次的

2300
01:17:25,000 --> 01:17:26,000
那能不能及格呢

2301
01:17:28,000 --> 01:17:29,000
OK

2302
01:17:29,000 --> 01:17:30,000
如果你是这个意思的话

2303
01:17:30,000 --> 01:17:31,000
好吧

2304
01:17:31,000 --> 01:17:32,000
的确是

2305
01:17:33,000 --> 01:17:34,000
当然说到这里

2306
01:17:34,000 --> 01:17:35,000
就不得不表扬一下

2307
01:17:35,000 --> 01:17:36,000
这个什么

2308
01:17:36,000 --> 01:17:37,000
楓叶国政府

2309
01:17:38,000 --> 01:17:39,000
最近应该是去年

2310
01:17:39,000 --> 01:17:41,000
开陆陆续续上线的

2311
01:17:41,000 --> 01:17:42,000
楓叶国政府的

2312
01:17:42,000 --> 01:17:44,000
那些办事的网站

2313
01:17:44,000 --> 01:17:45,000
全部都这国家级别的

2314
01:17:46,000 --> 01:17:48,000
但各省的还有点落后

2315
01:17:48,000 --> 01:17:49,000
但国家级别的办事的网站

2316
01:17:49,000 --> 01:17:51,000
全部都换了新的外观

2317
01:17:51,000 --> 01:17:52,000
然后换了新的系统

2318
01:17:52,000 --> 01:17:54,000
我觉得相当不错其实

2319
01:17:54,000 --> 01:17:54,000
OK

2320
01:17:54,000 --> 01:17:56,000
至少人家

2321
01:17:56,000 --> 01:17:58,000
至少人家自己用的还有 Vetica

2322
01:18:00,000 --> 01:18:00,000
OK

2323
01:18:00,000 --> 01:18:02,000
前两年英国政府

2324
01:18:02,000 --> 01:18:05,000
也是有一个比较大的工程

2325
01:18:05,000 --> 01:18:06,000
就是全面改换英国政府

2326
01:18:06,000 --> 01:18:08,000
相关网站的外贸和应用性

2327
01:18:08,000 --> 01:18:11,000
我记得台北 spiff 还有报道

2328
01:18:11,000 --> 01:18:14,000
然后也是现在改的就比较

2329
01:18:14,000 --> 01:18:14,000
你会觉得那个

2330
01:18:14,000 --> 01:18:15,000
有时候你会觉得那个 UI

2331
01:18:15,000 --> 01:18:16,000
可能有点傻

2332
01:18:16,000 --> 01:18:18,000
就是有点 naive

2333
01:18:18,000 --> 01:18:20,000
但是的确是非常好用

2334
01:18:20,000 --> 01:18:22,000
就是重要的信息写得很大

2335
01:18:22,000 --> 01:18:25,000
然后重要的该点的按钮

2336
01:18:25,000 --> 01:18:25,000
放得很

2337
01:18:26,000 --> 01:18:27,000
也画得很大

2338
01:18:27,000 --> 01:18:28,000
然后颜色很鲜美

2339
01:18:28,000 --> 01:18:29,000
对

2340
01:18:29,000 --> 01:18:31,000
他们还是起过这种

2341
01:18:31,000 --> 01:18:32,000
相对来说比较专业的

2342
01:18:32,000 --> 01:18:34,000
设计团队去做过一个

2343
01:18:34,000 --> 01:18:36,000
这个 rebranding 算是

2344
01:18:36,000 --> 01:18:36,000
对

2345
01:18:36,000 --> 01:18:38,000
所以你看他终究还是有

2346
01:18:38,000 --> 01:18:39,000
要有一个政府

2347
01:18:39,000 --> 01:18:41,000
政府行为在里面对吧

2348
01:18:41,000 --> 01:18:42,000
如果政府不去管

2349
01:18:43,000 --> 01:18:44,000
美国那个什么

2350
01:18:44,000 --> 01:18:47,000
什么给财政人士的

2351
01:18:47,000 --> 01:18:48,000
那个法案叫什么来着

2352
01:18:48,000 --> 01:18:50,000
就是网站必须让

2353
01:18:50,000 --> 01:18:53,000
视觉障碍者也能用的那个法案

2354
01:18:53,000 --> 01:18:55,000
如果没有这种政府行为

2355
01:18:55,000 --> 01:18:57,000
如果立法者不去做的话

2356
01:19:00,000 --> 01:19:03,000
所有的实施的工程商

2357
01:19:03,000 --> 01:19:05,000
当然会选择你说的那个

2358
01:19:07,000 --> 01:19:11,000
最大公英子来实施了

2359
01:19:13,000 --> 01:19:15,000
anyway

2360
01:19:15,000 --> 01:19:16,000
我也不知道这个东西

2361
01:19:16,000 --> 01:19:18,000
该怎么去吐槽了

2362
01:19:18,000 --> 01:19:19,000
你这东西就完全没有办法

2363
01:19:20,000 --> 01:19:22,000
吵得有点乱说实话

2364
01:19:22,000 --> 01:19:24,000
刚才说这一大串

2365
01:19:24,000 --> 01:19:25,000
我们到底想要表达什么

2366
01:19:25,000 --> 01:19:27,000
好像不是很清楚

2367
01:19:27,000 --> 01:19:28,000
还没什么

2368
01:19:28,000 --> 01:19:29,000
就很清楚

2369
01:19:29,000 --> 01:19:30,000
就我们不买

2370
01:19:31,000 --> 01:19:33,000
自己具体为什么不知道

2371
01:19:33,000 --> 01:19:34,000
对

2372
01:19:34,000 --> 01:19:35,000
总之刚才这条新闻

2373
01:19:35,000 --> 01:19:37,000
这个 IE 890

2374
01:19:37,000 --> 01:19:37,000
对

2375
01:19:38,000 --> 01:19:40,000
1 月 12 号就要死了

2376
01:19:40,000 --> 01:19:41,000
受众的正情

2377
01:19:41,000 --> 01:19:42,000
对

2378
01:19:42,000 --> 01:19:43,000
对于

2379
01:19:43,000 --> 01:19:45,000
对中国的开发者来说

2380
01:19:45,000 --> 01:19:46,000
可能不是一个

2381
01:19:46,000 --> 01:19:49,000
特别有意义的消息

2382
01:19:49,000 --> 01:19:50,000
不过

2383
01:19:51,000 --> 01:19:53,000
在 IE 市场分额

2384
01:19:53,000 --> 01:19:54,000
没有那么大的其他国家

2385
01:19:54,000 --> 01:19:56,000
这是一个比较大的事情

2386
01:19:59,000 --> 01:20:01,000
最后说两件事

2387
01:20:01,000 --> 01:20:04,000
那我先要说

2388
01:20:04,000 --> 01:20:05,000
我最近做了一个事

2389
01:20:06,000 --> 01:20:08,000
我装了那个 NEO VIM

2390
01:20:08,000 --> 01:20:09,000
OK

2391
01:20:10,000 --> 01:20:11,000
然后把我的 VIM

2392
01:20:12,000 --> 01:20:13,000
设了一个 Alias

2393
01:20:14,000 --> 01:20:18,000
就 VI 默认是启动 NEO VIM

2394
01:20:18,000 --> 01:20:18,000
OK

2395
01:20:18,000 --> 01:20:21,000
VI 默认启动 NVI

2396
01:20:21,000 --> 01:20:21,000
对

2397
01:20:21,000 --> 01:20:22,000
没错

2398
01:20:22,000 --> 01:20:23,000
OK

2399
01:20:24,000 --> 01:20:25,000
然后

2400
01:20:26,000 --> 01:20:27,000
NEO VIM 里面有个特别好的

2401
01:20:27,000 --> 01:20:28,000
NEO VIM 我们今天说过吗

2402
01:20:28,000 --> 01:20:29,000
还没说过是吧

2403
01:20:30,000 --> 01:20:30,000
说过吧

2404
01:20:30,000 --> 01:20:31,000
有一期我记得

2405
01:20:31,000 --> 01:20:32,000
我刚才翻收

2406
01:20:32,000 --> 01:20:35,000
我还看到前面有一期提到的它

2407
01:20:35,000 --> 01:20:36,000
OK

2408
01:20:36,000 --> 01:20:39,000
NEO VIM 就是一个 VIM 的

2409
01:20:40,000 --> 01:20:40,000
叫什么来的

2410
01:20:43,000 --> 01:20:44,000
不算 Fork

2411
01:20:44,000 --> 01:20:45,000
它这个算什么

2412
01:20:45,000 --> 01:20:46,000
Rewrite

2413
01:20:47,000 --> 01:20:47,000
对

2414
01:20:47,000 --> 01:20:48,000
算是一个 Rewrite

2415
01:20:48,000 --> 01:20:50,000
就是把 VIM 的那些历史包袱

2416
01:20:50,000 --> 01:20:51,000
都丢掉了

2417
01:20:51,000 --> 01:20:52,000
比如说

2418
01:20:53,000 --> 01:20:54,000
VIM 至少在逻辑上

2419
01:20:55,000 --> 01:20:57,000
现在还是支持 DOS 系统的

2420
01:20:57,000 --> 01:21:00,000
但是相信已经没有人在用 DOS 系统了

2421
01:21:00,000 --> 01:21:01,000
有 NARNAL 不过

2422
01:21:02,000 --> 01:21:03,000
还有一些更古老的

2423
01:21:03,000 --> 01:21:05,000
我们从来无所谓的

2424
01:21:05,000 --> 01:21:06,000
什么 AMIGA

2425
01:21:07,000 --> 01:21:09,000
还有什么一些新型古怪系统

2426
01:21:09,000 --> 01:21:10,000
就是已经绝迹了

2427
01:21:11,000 --> 01:21:12,000
总之这么说吧

2428
01:21:12,000 --> 01:21:13,000
它为了支持某些

2429
01:21:13,000 --> 01:21:15,000
0.001%的市场份额

2430
01:21:15,000 --> 01:21:16,000
在

2431
01:21:17,000 --> 01:21:19,000
从而存留了一些非常古老的代码

2432
01:21:20,000 --> 01:21:22,000
但其实有人说过这个事情

2433
01:21:22,000 --> 01:21:23,000
其实现在的所谓的 VIM

2434
01:21:23,000 --> 01:21:25,000
支持那些古老的操作系统

2435
01:21:25,000 --> 01:21:26,000
其实都是没有经过验证的

2436
01:21:27,000 --> 01:21:28,000
因为没有人在那边

2437
01:21:28,000 --> 01:21:29,000
Compile 过最新版本的

2438
01:21:29,000 --> 01:21:30,000
到底能不能用

2439
01:21:30,000 --> 01:21:31,000
好吧

2440
01:21:31,000 --> 01:21:33,000
你的 Test User Pool

2441
01:21:33,000 --> 01:21:35,000
可能就个位数的一些人

2442
01:21:35,000 --> 01:21:35,000
对

2443
01:21:35,000 --> 01:21:37,000
Handful

2444
01:21:40,000 --> 01:21:40,000
Anyway NeoVim

2445
01:21:40,000 --> 01:21:41,000
就说

2446
01:21:41,000 --> 01:21:42,000
NEOVIM 他们作者

2447
01:21:42,000 --> 01:21:43,000
他之前想去

2448
01:21:44,000 --> 01:21:47,000
在 VIM 的代码里面提交一些改进

2449
01:21:47,000 --> 01:21:49,000
然后被 VIM 的作者

2450
01:21:49,000 --> 01:21:50,000
Morlana

2451
01:21:50,000 --> 01:21:51,000
Bram

2452
01:21:52,000 --> 01:21:52,000
Morlana

2453
01:21:52,000 --> 01:21:53,000
是吧

2454
01:21:54,000 --> 01:21:54,000
对

2455
01:21:54,000 --> 01:21:55,000
拒了

2456
01:21:55,000 --> 01:21:56,000
然后他们一怒之下

2457
01:21:56,000 --> 01:21:57,000
就自己

2458
01:21:57,000 --> 01:21:59,000
另起炉灶

2459
01:21:59,000 --> 01:22:00,000
就起来一个 NEOVIM

2460
01:22:00,000 --> 01:22:01,000
NEO 就是新的意思

2461
01:22:01,000 --> 01:22:02,000
新 VIM

2462
01:22:02,000 --> 01:22:03,000
对

2463
01:22:03,000 --> 01:22:04,000
然后

2464
01:22:04,000 --> 01:22:06,000
他们的一个主要的卖点

2465
01:22:06,000 --> 01:22:07,000
这些之前可能

2466
01:22:07,000 --> 01:22:08,000
介绍过就不说了

2467
01:22:08,000 --> 01:22:09,000
但主要简单提一下

2468
01:22:09,000 --> 01:22:10,000
就是

2469
01:22:10,000 --> 01:22:11,000
把 VIM 的一些历史包袱

2470
01:22:11,000 --> 01:22:12,000
都拿掉了

2471
01:22:12,000 --> 01:22:13,000
是保留最

2472
01:22:13,000 --> 01:22:14,000
就现在还在

2473
01:22:14,000 --> 01:22:16,000
实际使用的操作系统支持

2474
01:22:16,000 --> 01:22:17,000
还有一些

2475
01:22:17,000 --> 01:22:18,000
他们认为

2476
01:22:18,000 --> 01:22:19,000
不必要的特性也去掉了

2477
01:22:19,000 --> 01:22:21,000
当然也加入一些比较新的特性

2478
01:22:22,000 --> 01:22:24,000
其实我就要大力推荐一个特性

2479
01:22:24,000 --> 01:22:26,000
叫做 Terminal Mode

2480
01:22:27,000 --> 01:22:28,000
Terminal Mode

2481
01:22:28,000 --> 01:22:30,000
就是可以在 VIM 里面

2482
01:22:30,000 --> 01:22:30,000
呼叫 Terminal

2483
01:22:31,000 --> 01:22:34,000
就是可以在 NEOVIM 里面

2484
01:22:34,000 --> 01:22:37,000
可以开一个 Split Window

2485
01:22:37,000 --> 01:22:38,000
然后你可以

2486
01:22:38,000 --> 01:22:41,000
打 MODE 号 Terminal 回车

2487
01:22:41,000 --> 01:22:43,000
这个 Buffer

2488
01:22:43,000 --> 01:22:45,000
就变成了一个 Terminal 的窗口

2489
01:22:45,000 --> 01:22:46,000
OK

2490
01:22:47,000 --> 01:22:48,000
所以你可以

2491
01:22:48,000 --> 01:22:49,000
不用参与 T-MAX

2492
01:22:50,000 --> 01:22:51,000
好吧

2493
01:22:51,000 --> 01:22:53,000
我的观点还是

2494
01:22:53,000 --> 01:22:53,000
这个

2495
01:22:53,000 --> 01:22:55,000
就是朝 E-MAX 这个

2496
01:22:55,000 --> 01:22:56,000
学教的方向的发展

2497
01:22:56,000 --> 01:22:58,000
你为什么不直接

2498
01:22:58,000 --> 01:23:00,000
肯定在自己切换的回 Terminal

2499
01:23:01,000 --> 01:23:03,000
因为有时候你要 Side by Side 对比

2500
01:23:04,000 --> 01:23:04,000
好吧

2501
01:23:05,000 --> 01:23:05,000
Side by Side

2502
01:23:06,000 --> 01:23:07,000
然后有时候

2503
01:23:07,000 --> 01:23:08,000
其实最主要问题是

2504
01:23:08,000 --> 01:23:09,000
其实它解决了这么一个问题

2505
01:23:09,000 --> 01:23:10,000
就是

2506
01:23:11,000 --> 01:23:12,000
你要把

2507
01:23:12,000 --> 01:23:16,000
Terminal Mode 里面某一个命令的输出

2508
01:23:16,000 --> 01:23:18,000
以一种比较精确的方式

2509
01:23:18,000 --> 01:23:20,000
复制回

2510
01:23:20,000 --> 01:23:21,000
VIM 里面去

2511
01:23:22,000 --> 01:23:23,000
我不知道这种方式出现的概率有多少

2512
01:23:23,000 --> 01:23:25,000
但是我可以想见一些用意了

2513
01:23:27,000 --> 01:23:28,000
这个 VIM 可以做到

2514
01:23:29,000 --> 01:23:31,000
你告诉我怎么操作

2515
01:23:32,000 --> 01:23:34,000
我具体的不是很

2516
01:23:35,000 --> 01:23:36,000
我可以查一查

2517
01:23:36,000 --> 01:23:37,000
然后回到

2518
01:23:37,000 --> 01:23:38,000
大部分人是这么操作的

2519
01:23:38,000 --> 01:23:39,000
大部分人是这么干的

2520
01:23:39,000 --> 01:23:40,000
就是开一个 Terminal 窗口

2521
01:23:40,000 --> 01:23:42,000
然后运行的问题找到输出

2522
01:23:42,000 --> 01:23:45,000
然后用鼠标滚轮滚上去

2523
01:23:45,000 --> 01:23:47,000
然后用鼠标

2524
01:23:47,000 --> 01:23:49,000
选中区域右键点复制

2525
01:23:49,000 --> 01:23:52,000
切换 VIM 再用 Cleave Board

2526
01:23:52,000 --> 01:23:53,000
粘贴回来

2527
01:23:54,000 --> 01:23:55,000
对

2528
01:23:55,000 --> 01:23:57,000
但这是比较难印的方式

2529
01:23:57,000 --> 01:24:00,000
对我的印象里面的确有比较更

2530
01:24:00,000 --> 01:24:03,000
那你有 T-Max 的话

2531
01:24:03,000 --> 01:24:05,000
它有一个 Mode 是可以往回滚

2532
01:24:05,000 --> 01:24:07,000
滚到它用进入一种类似

2533
01:24:07,000 --> 01:24:09,000
VIM 的 Normal Mode 的一种方式

2534
01:24:09,000 --> 01:24:12,000
然后你可以用那个光标选择一串制服

2535
01:24:12,000 --> 01:24:15,000
然后复制到系统剪接板里面

2536
01:24:15,000 --> 01:24:16,000
然后再切回 VIM

2537
01:24:16,000 --> 01:24:18,000
然后再通过那个系统剪接板

2538
01:24:18,000 --> 01:24:20,000
再贴回你的 VIM 编辑器里面

2539
01:24:20,000 --> 01:24:20,000
对吧

2540
01:24:21,000 --> 01:24:24,000
但是以上都是需要经过系统剪接板的

2541
01:24:25,000 --> 01:24:28,000
但是如果你把这个用 NEOVIM

2542
01:24:28,000 --> 01:24:29,000
这个 Terminal 窗口的话

2543
01:24:30,000 --> 01:24:32,000
它是在同一个 VIM 的 Buffer 里面

2544
01:24:32,000 --> 01:24:33,000
你不需要这种系统剪接板

2545
01:24:33,000 --> 01:24:35,000
而且所有的

2546
01:24:35,000 --> 01:24:39,000
所有的 VIMNormal Mode 可以用的快捷键

2547
01:24:39,000 --> 01:24:41,000
包括那种

2548
01:24:42,000 --> 01:24:42,000
跳几行

2549
01:24:42,000 --> 01:24:44,000
然后选择几个字

2550
01:24:44,000 --> 01:24:48,000
这方式都可以在 TerminalNormal Mode 里面实现

2551
01:24:48,000 --> 01:24:49,000
OK

2552
01:24:49,000 --> 01:24:51,000
所以它实际上是一个

2553
01:24:51,000 --> 01:24:53,000
有点像一个 VIM Key Binding 的

2554
01:24:54,000 --> 01:24:54,000
Bash

2555
01:24:54,000 --> 01:24:56,000
但只是更好

2556
01:24:57,000 --> 01:24:59,000
它实现是这样的

2557
01:24:59,000 --> 01:25:00,000
它实现是

2558
01:25:00,000 --> 01:25:01,000
它那个 Lib

2559
01:25:01,000 --> 01:25:02,000
Term

2560
01:25:02,000 --> 01:25:03,000
还是 Lib Vert 我忘了

2561
01:25:04,000 --> 01:25:05,000
去

2562
01:25:05,000 --> 01:25:08,000
在底层真的是开了一个 Term 中端模拟器

2563
01:25:08,000 --> 01:25:10,000
然后它只是把中端模拟器的结果

2564
01:25:10,000 --> 01:25:13,000
一直映射到某一个 VIM 的 Buffer 里面去

2565
01:25:14,000 --> 01:25:15,000
然后那个 Buffer 会有两种模式

2566
01:25:15,000 --> 01:25:16,000
一种是插入模式

2567
01:25:16,000 --> 01:25:18,000
一种是普通模式

2568
01:25:18,000 --> 01:25:19,000
插入模式的话

2569
01:25:19,000 --> 01:25:20,000
你所有的输入都会直接被

2570
01:25:21,000 --> 01:25:22,000
发送到中端里面去

2571
01:25:22,000 --> 01:25:25,000
然后再把中端的结果回写回这个 Buffer

2572
01:25:26,000 --> 01:25:27,000
但是

2573
01:25:27,000 --> 01:25:31,000
如果你按一个特殊键的组合回到 Normal 的话

2574
01:25:31,000 --> 01:25:32,000
这个 Buffer 就跟

2575
01:25:33,000 --> 01:25:36,000
VIM 的任何一个普通 Buffer 是一模一样的

2576
01:25:37,000 --> 01:25:39,000
你所有的那些操作都变成

2577
01:25:39,000 --> 01:25:40,000
VIM 的操作

2578
01:25:40,000 --> 01:25:41,000
不会出现任何例外的情况

2579
01:25:43,000 --> 01:25:46,000
我查到了 VIM 里面

2580
01:25:46,000 --> 01:25:47,000
可以用 Read

2581
01:25:47,000 --> 01:25:49,000
那个冒号 Read

2582
01:25:50,000 --> 01:25:51,000
然后后面跟一个感叹号

2583
01:25:51,000 --> 01:25:52,000
然后加一个命令

2584
01:25:52,000 --> 01:25:54,000
它就可以把那个命令的输出

2585
01:25:54,000 --> 01:25:56,000
贴到你当前的 Buffer 里面

2586
01:25:56,000 --> 01:25:58,000
那是全部你不能选择了吗

2587
01:25:58,000 --> 01:25:59,000
对的确是

2588
01:25:59,000 --> 01:26:02,000
但是你说 Terminal Mode 的确是更灵活

2589
01:26:02,000 --> 01:26:05,000
也更直观至少

2590
01:26:05,000 --> 01:26:06,000
对

2591
01:26:07,000 --> 01:26:08,000
所以我自己的用例的话

2592
01:26:08,000 --> 01:26:09,000
其实就提一下

2593
01:26:09,000 --> 01:26:12,000
比如说整个屏幕就一个 VIM 全屏

2594
01:26:12,000 --> 01:26:14,000
然后左边是编辑框

2595
01:26:14,000 --> 01:26:16,000
然后右边是 Terminal Mode

2596
01:26:16,000 --> 01:26:19,000
然后就可以准时接受 Emax 协调了

2597
01:26:20,000 --> 01:26:22,000
VIM as an operating system

2598
01:26:23,000 --> 01:26:24,000
快要实现了

2599
01:26:25,000 --> 01:26:26,000
浑身

2600
01:26:26,000 --> 01:26:29,000
你有没有看到一些比较高级的特性

2601
01:26:29,000 --> 01:26:30,000
也会帮助实现这些

2602
01:26:30,000 --> 01:26:31,000
比如说

2603
01:26:32,000 --> 01:26:34,000
它可以被签入

2604
01:26:34,000 --> 01:26:36,000
作为一个故意的

2605
01:26:36,000 --> 01:26:37,000
程序的签入式方式

2606
01:26:37,000 --> 01:26:39,000
就通过这种 Client Server 的方式

2607
01:26:39,000 --> 01:26:41,000
它作为一个编辑的 Server

2608
01:26:42,000 --> 01:26:43,000
然后 Client 发送指令

2609
01:26:43,000 --> 01:26:45,000
然后拿响应结果就好了

2610
01:26:46,000 --> 01:26:46,000
OK

2611
01:26:47,000 --> 01:26:49,000
所以这个协调的路上越走越远了是吧

2612
01:26:49,000 --> 01:26:50,000
没错

2613
01:26:50,000 --> 01:26:55,000
这个是用星际融办的术语来说

2614
01:26:55,000 --> 01:26:56,000
它是一个 Hybrid

2615
01:26:57,000 --> 01:26:58,000
融合了 Zerg

2616
01:26:58,000 --> 01:27:00,000
我们光荣伟大的 Protox 的

2617
01:27:00,000 --> 01:27:04,000
种种特点造出来了一个非常强大的

2618
01:27:04,000 --> 01:27:06,000
但是双方都不喜欢的东西

2619
01:27:07,000 --> 01:27:07,000
你打完了吗

2620
01:27:07,000 --> 01:27:09,000
当然打了

2621
01:27:09,000 --> 01:27:10,000
OK

2622
01:27:10,000 --> 01:27:13,000
我还是在 YouTube 上看了两个小时的

2623
01:27:13,000 --> 01:27:15,000
YouTube 通关的天呐

2624
01:27:15,000 --> 01:27:16,000
对我是 YouTube 通关

2625
01:27:16,000 --> 01:27:16,000
也不是通关

2626
01:27:16,000 --> 01:27:18,000
就没有看打仗的过程

2627
01:27:18,000 --> 01:27:20,000
只看了那个

2628
01:27:20,000 --> 01:27:22,000
对那个过场动画的过程

2629
01:27:22,000 --> 01:27:23,000
然后把整个故事节目看完了

2630
01:27:23,000 --> 01:27:24,000
实在没时间打

2631
01:27:25,000 --> 01:27:25,000
好吧

2632
01:27:25,000 --> 01:27:27,000
你现在是

2633
01:27:27,000 --> 01:27:28,000
天使投资大方人

2634
01:27:29,000 --> 01:27:30,000
各种瞎折腾

2635
01:27:30,000 --> 01:27:32,000
风险投资 Sorry

2636
01:27:33,000 --> 01:27:36,000
最近 Rail 前科工程

2637
01:27:36,000 --> 01:27:40,000
就是给各位 Rail Has Talent

2638
01:27:41,000 --> 01:27:42,000
还在进行

2639
01:27:42,000 --> 01:27:44,000
但是最近有些是在线下进行的

2640
01:27:45,000 --> 01:27:45,000
非常好

2641
01:27:46,000 --> 01:27:48,000
所以你要在这继续打个广告吗

2642
01:27:49,000 --> 01:27:50,000
这期先不打了

2643
01:27:50,000 --> 01:27:50,000
下次吧

2644
01:27:50,000 --> 01:27:52,000
合适的再说

2645
01:27:52,000 --> 01:27:53,000
好

2646
01:27:55,000 --> 01:27:56,000
最后再讲一个

2647
01:27:56,000 --> 01:27:58,000
一个算是大新闻

2648
01:27:58,000 --> 01:27:59,000
但是我不知道

2649
01:27:59,000 --> 01:28:01,000
其实跟技术没什么关系

2650
01:28:01,000 --> 01:28:02,000
但是因为这个人是

2651
01:28:03,000 --> 01:28:04,000
要不你来说吧

2652
01:28:05,000 --> 01:28:06,000
好吧

2653
01:28:06,000 --> 01:28:12,000
就是我最喜欢的 Linux 发行版的创始人之一

2654
01:28:12,000 --> 01:28:13,000
是创始人之一吧

2655
01:28:14,000 --> 01:28:14,000
就创始人

2656
01:28:14,000 --> 01:28:15,000
还有之一

2657
01:28:15,000 --> 01:28:16,000
就是创始人

2658
01:28:16,000 --> 01:28:17,000
TOMSALVE

2659
01:28:17,000 --> 01:28:18,000
对

2660
01:28:18,000 --> 01:28:21,000
就是 Debian 的创始人叫 Ian

2661
01:28:21,000 --> 01:28:22,000
对

2662
01:28:22,000 --> 01:28:24,000
他他自杀

2663
01:28:24,000 --> 01:28:27,000
就是 Debian 是两个名字的合体

2664
01:28:27,000 --> 01:28:31,000
是他当时的女朋友还是老婆

2665
01:28:31,000 --> 01:28:32,000
忘了

2666
01:28:32,000 --> 01:28:32,000
女朋友吧

2667
01:28:33,000 --> 01:28:35,000
就像京东一样是吧

2668
01:28:35,000 --> 01:28:36,000
叫 Debby 应该是

2669
01:28:36,000 --> 01:28:37,000
然后就 Debby

2670
01:28:37,000 --> 01:28:38,000
然后他叫 Ian

2671
01:28:38,000 --> 01:28:39,000
I-A-N

2672
01:28:39,000 --> 01:28:40,000
所以是 Debby

2673
01:28:40,000 --> 01:28:41,000
OK

2674
01:28:42,000 --> 01:28:44,000
然后最近 Ian

2675
01:28:44,000 --> 01:28:46,000
在推特上放话说

2676
01:28:46,000 --> 01:28:48,000
他被警察胖揍了一顿

2677
01:28:48,000 --> 01:28:50,000
然后他就决定自杀

2678
01:28:51,000 --> 01:28:51,000
对

2679
01:28:52,000 --> 01:28:54,000
然后他就果然自杀了

2680
01:28:54,000 --> 01:28:54,000
对

2681
01:28:54,000 --> 01:28:57,000
Ian 在康斯坦斯的出生

2682
01:28:57,000 --> 01:29:00,000
就是他是个德裔美国人

2683
01:29:00,000 --> 01:29:04,000
然后他在 1973 年 4 月 28 日生于康斯坦斯

2684
01:29:04,000 --> 01:29:08,000
然后 2015 年 12 月 28 日

2685
01:29:08,000 --> 01:29:12,000
康斯坦斯是那个三国交界的湖边是吧

2686
01:29:12,000 --> 01:29:13,000
波东湖那个

2687
01:29:13,000 --> 01:29:13,000
OK

2688
01:29:13,000 --> 01:29:13,000
对

2689
01:29:13,000 --> 01:29:17,000
然后死于 San Francisco

2690
01:29:19,000 --> 01:29:23,000
然后他的死因是

2691
01:29:23,000 --> 01:29:27,000
被警察逮捕了吗

2692
01:29:27,000 --> 01:29:28,000
好像也没有

2693
01:29:28,000 --> 01:29:29,000
警察跟着他

2694
01:29:29,000 --> 01:29:31,000
我看他的临终前的几条推示

2695
01:29:31,000 --> 01:29:33,000
警察去了他家

2696
01:29:33,000 --> 01:29:34,000
然后把他打了一顿

2697
01:29:35,000 --> 01:29:35,000
对

2698
01:29:35,000 --> 01:29:37,000
这个事情现在就没有

2699
01:29:37,000 --> 01:29:39,000
因为这个事情还在调查中

2700
01:29:39,000 --> 01:29:41,000
也不知道到底怎么回事

2701
01:29:41,000 --> 01:29:43,000
但是根据他之前

2702
01:29:43,000 --> 01:29:46,000
自杀之前几天在推特上的

2703
01:29:47,000 --> 01:29:47,000
发的推

2704
01:29:47,000 --> 01:29:49,000
我们整理出一个时间

2705
01:29:49,000 --> 01:29:51,000
这个线索大概是说

2706
01:29:52,000 --> 01:29:52,000
警察

2707
01:29:52,000 --> 01:29:54,000
因为现在美国警察暴力

2708
01:29:54,000 --> 01:29:57,000
是一个很大的政治问题了

2709
01:29:57,000 --> 01:29:57,000
对

2710
01:29:57,000 --> 01:30:00,000
然后之前都是什么

2711
01:30:00,000 --> 01:30:03,000
主要是黑人被报道说

2712
01:30:03,000 --> 01:30:04,000
被这个白人警察

2713
01:30:05,000 --> 01:30:07,000
由于什么种族歧视的原因

2714
01:30:07,000 --> 01:30:08,000
胖揍了一顿

2715
01:30:08,000 --> 01:30:10,000
或者是开枪卖杀之类的

2716
01:30:10,000 --> 01:30:10,000
对吧

2717
01:30:11,000 --> 01:30:13,000
但这回业内哥们是个白人

2718
01:30:13,000 --> 01:30:15,000
然后也遇到这个状况

2719
01:30:15,000 --> 01:30:15,000
所以

2720
01:30:16,000 --> 01:30:18,000
他最后几条推里面有一条说

2721
01:30:18,000 --> 01:30:19,000
他要说我是一个白人

2722
01:30:19,000 --> 01:30:22,000
我每年赚 1.6 个 million

2723
01:30:22,000 --> 01:30:23,000
我受过良好的教育

2724
01:30:23,000 --> 01:30:26,000
结果被这帮警察孙子们打了一顿

2725
01:30:26,000 --> 01:30:28,000
警察就是全

2726
01:30:28,000 --> 01:30:29,000
没有受过教育

2727
01:30:29,000 --> 01:30:31,000
崇尚暴力的废物什么的

2728
01:30:31,000 --> 01:30:33,000
我的余生将

2729
01:30:34,000 --> 01:30:36,000
与邪恶的警察做斗争

2730
01:30:36,000 --> 01:30:36,000
对

2731
01:30:36,000 --> 01:30:39,000
然后他的余生就这样草草了结了

2732
01:30:39,000 --> 01:30:40,000
然后他过了几天之后

2733
01:30:40,000 --> 01:30:41,000
他就自杀了

2734
01:30:45,000 --> 01:30:46,000
忘了说 Ian 这哥们

2735
01:30:46,000 --> 01:30:48,000
应该是就是半年前

2736
01:30:48,000 --> 01:30:52,000
加入了这个 CloudFlare 这间公司

2737
01:30:52,000 --> 01:30:54,000
CloudFlare 应该是目前

2738
01:30:56,000 --> 01:30:57,000
应该是全球最

2739
01:30:57,000 --> 01:31:00,000
中国不是说最大也是排前级的这种

2740
01:31:00,000 --> 01:31:01,000
网络技术设施的公司

2741
01:31:03,000 --> 01:31:04,000
对

2742
01:31:06,000 --> 01:31:08,000
我不知道该怎么 comment

2743
01:31:08,000 --> 01:31:10,000
因为我没有在美国生活

2744
01:31:10,000 --> 01:31:11,000
我不是

2745
01:31:11,000 --> 01:31:12,000
无法想象美国的

2746
01:31:13,000 --> 01:31:14,000
有几个问题

2747
01:31:14,000 --> 01:31:15,000
首先这个事情

2748
01:31:15,000 --> 01:31:16,000
对来龙去脉我们都不知道

2749
01:31:16,000 --> 01:31:19,000
我们是看到单方面的一个信息

2750
01:31:19,000 --> 01:31:20,000
也没有出现一个

2751
01:31:21,000 --> 01:31:24,000
什么第三方的独立审计报道

2752
01:31:24,000 --> 01:31:25,000
所以这件事情后续怎么样

2753
01:31:25,000 --> 01:31:27,000
其实还难说

2754
01:31:27,000 --> 01:31:29,000
但是美国警察的

2755
01:31:30,000 --> 01:31:31,000
暴政

2756
01:31:32,000 --> 01:31:35,000
暴力执法是有一些年头了

2757
01:31:35,000 --> 01:31:35,000
对

2758
01:31:35,000 --> 01:31:37,000
前两年一支

2759
01:31:37,000 --> 01:31:38,000
几乎没过一段时间

2760
01:31:38,000 --> 01:31:40,000
就会有这样一个新闻冒出来

2761
01:31:41,000 --> 01:31:42,000
不用前两年就去年

2762
01:31:42,000 --> 01:31:44,000
基本上是每隔一个月就要闹一个事

2763
01:31:45,000 --> 01:31:47,000
对我的意思就是过去的这两年之间

2764
01:31:47,000 --> 01:31:49,000
一直有这样的事情浮现

2765
01:31:49,000 --> 01:31:51,000
其实已经有一段历史了

2766
01:31:52,000 --> 01:31:55,000
特别是上次 Ferguson 那个事

2767
01:31:55,000 --> 01:31:57,000
其实把这个事情推到了一个

2768
01:31:58,000 --> 01:31:59,000
一个巅峰

2769
01:31:59,000 --> 01:31:59,000
风头浪尖

2770
01:31:59,000 --> 01:32:00,000
对

2771
01:32:01,000 --> 01:32:02,000
让人感觉好像

2772
01:32:02,000 --> 01:32:05,000
八九十年代美国的犯罪非常猖獗

2773
01:32:05,000 --> 01:32:06,000
警察是弱势群体

2774
01:32:06,000 --> 01:32:07,000
现在是

2775
01:32:07,000 --> 01:32:07,000
反过来

2776
01:32:07,000 --> 01:32:10,000
警察已经演化成了美国最大的黑帮了

2777
01:32:11,000 --> 01:32:13,000
而且有时候我会觉得很奇怪

2778
01:32:13,000 --> 01:32:15,000
你看美国的那些警察的

2779
01:32:16,000 --> 01:32:16,000
器械

2780
01:32:16,000 --> 01:32:17,000
当他们出动的时候

2781
01:32:17,000 --> 01:32:20,000
那个枪械是

2782
01:32:20,000 --> 01:32:21,000
军事化的

2783
01:32:22,000 --> 01:32:26,000
比什么世界上随便一个小国家的军队还要牛逼的

2784
01:32:26,000 --> 01:32:27,000
他们完全可以

2785
01:32:29,000 --> 01:32:32,000
对抗一个中亚小国之类的

2786
01:32:32,000 --> 01:32:34,000
就只出动警察就够了

2787
01:32:34,000 --> 01:32:34,000
对

2788
01:32:34,000 --> 01:32:36,000
这个事情也是有一个历史大背景的

2789
01:32:36,000 --> 01:32:38,000
就是美国是不进枪的

2790
01:32:38,000 --> 01:32:39,000
不进枪的

2791
01:32:39,000 --> 01:32:41,000
大部分州是不进枪的

2792
01:32:41,000 --> 01:32:43,000
瑞士也不进枪

2793
01:32:44,000 --> 01:32:45,000
那么瑞士也不进枪

2794
01:32:45,000 --> 01:32:45,000
不

2795
01:32:45,000 --> 01:32:47,000
他那个步枪还不一样

2796
01:32:48,000 --> 01:32:51,000
反正美国有些非常奇怪的条约

2797
01:32:51,000 --> 01:32:52,000
什么一支步枪

2798
01:32:52,000 --> 01:32:54,000
只要它不是全自动的就可以卖

2799
01:32:54,000 --> 01:32:57,000
但是实际上非全自动的步枪看起来跟

2800
01:32:58,000 --> 01:33:01,000
看起来跟军人用的

2801
01:33:01,000 --> 01:33:03,000
什么 M 4 之类的一模一样

2802
01:33:03,000 --> 01:33:05,000
而且他半自动的

2803
01:33:05,000 --> 01:33:08,000
可以很快的改装为全自动的

2804
01:33:09,000 --> 01:33:11,000
对吧

2805
01:33:11,000 --> 01:33:11,000
是这样

2806
01:33:12,000 --> 01:33:12,000
对

2807
01:33:13,000 --> 01:33:15,000
所以有这么一个大背景下

2808
01:33:15,000 --> 01:33:16,000
就是说美国警察去执法的时候

2809
01:33:16,000 --> 01:33:17,000
他们面临的

2810
01:33:19,000 --> 01:33:19,000
危险

2811
01:33:19,000 --> 01:33:21,000
风险也是蛮大的

2812
01:33:21,000 --> 01:33:23,000
经常有什么黑帮暴力团体

2813
01:33:24,000 --> 01:33:26,000
也是这种全副武装的装备来对付你

2814
01:33:26,000 --> 01:33:28,000
所以没有办法

2815
01:33:28,000 --> 01:33:29,000
毛和顿的问题

2816
01:33:29,000 --> 01:33:31,000
就只能互相搞什么军备竞赛

2817
01:33:32,000 --> 01:33:34,000
然后到这个结果就是现在

2818
01:33:34,000 --> 01:33:36,000
美国警察已经叫做准军事化了

2819
01:33:37,000 --> 01:33:38,000
是啊

2820
01:33:39,000 --> 01:33:40,000
然后就可以

2821
01:33:40,000 --> 01:33:40,000
等一下

2822
01:33:40,000 --> 01:33:42,000
这个是我们节目讨论的问题

2823
01:33:43,000 --> 01:33:45,000
我们好像有点朝这个

2824
01:33:46,000 --> 01:33:47,000
朝这个叫什么

2825
01:33:47,000 --> 01:33:48,000
选美的方向

2826
01:33:48,000 --> 01:33:49,000
选美

2827
01:33:49,000 --> 01:33:50,000
不 anyway

2828
01:33:50,000 --> 01:33:52,000
但这个是大背景交代一下

2829
01:33:52,000 --> 01:33:52,000
具体听

2830
01:33:52,000 --> 01:33:55,000
可能以后选美他们会聊的话

2831
01:33:55,000 --> 01:33:56,000
可能会讲到这个事

2832
01:33:56,000 --> 01:33:58,000
但是还是

2833
01:33:58,000 --> 01:33:59,000
提醒一下

2834
01:33:59,000 --> 01:34:01,000
如果你是在美国的听众朋友们

2835
01:34:01,000 --> 01:34:03,000
遇到警察小心一点是吧

2836
01:34:03,000 --> 01:34:06,000
哪怕你是看起来人畜无害的

2837
01:34:06,000 --> 01:34:09,000
亚洲黄种人软件过程师

2838
01:34:09,000 --> 01:34:11,000
也有可能被警察胖做一顿的

2839
01:34:11,000 --> 01:34:12,000
嗯

2840
01:34:12,000 --> 01:34:12,000
对

2841
01:34:12,000 --> 01:34:12,000
两条

2842
01:34:12,000 --> 01:34:14,000
一个是不要跟他们说话

2843
01:34:14,000 --> 01:34:14,000
第二

2844
01:34:14,000 --> 01:34:16,000
一他们问你什么

2845
01:34:16,000 --> 01:34:17,000
你就说你要见律师

2846
01:34:17,000 --> 01:34:18,000
第二就是什么

2847
01:34:19,000 --> 01:34:20,000
千万不要让他们搜你的车

2848
01:34:20,000 --> 01:34:21,000
叫你干嘛你就干嘛

2849
01:34:22,000 --> 01:34:23,000
即便你什么都没有

2850
01:34:23,000 --> 01:34:24,000
你也不要让他们搜你的车

2851
01:34:28,000 --> 01:34:28,000
对

2852
01:34:28,000 --> 01:34:30,000
这些都是从 YouTube 上得来的一些什么

2853
01:34:30,000 --> 01:34:32,000
美国生存指南之类的

2854
01:34:35,000 --> 01:34:36,000
登塔国怎么能这样呢

2855
01:34:36,000 --> 01:34:36,000
对吧

2856
01:34:37,000 --> 01:34:39,000
太让我了

2857
01:34:39,000 --> 01:34:40,000
美人系已经不行了

2858
01:34:40,000 --> 01:34:41,000
你不知道吗

2859
01:34:43,000 --> 01:34:43,000
好吧

2860
01:34:43,000 --> 01:34:50,000
美人系已经被反恐和绿胶搞得也开始神经兮兮了

2861
01:34:53,000 --> 01:34:55,000
伊斯兰在美国的问题没有

2862
01:34:55,000 --> 01:34:55,000
欧洲大吧

2863
01:34:56,000 --> 01:34:56,000
那肯定

2864
01:34:56,000 --> 01:34:57,000
欧洲已经

2865
01:34:57,000 --> 01:34:58,000
欧洲

2866
01:34:58,000 --> 01:34:59,000
所以说不是登塔国

2867
01:35:01,000 --> 01:35:02,000
登塔盟

2868
01:35:02,000 --> 01:35:04,000
也快不太贵了

2869
01:35:04,000 --> 01:35:05,000
不够盟

2870
01:35:05,000 --> 01:35:05,000
对

2871
01:35:06,000 --> 01:35:06,000
对

2872
01:35:06,000 --> 01:35:10,000
现在只能看一看天朝怎么应付这些事情了呗

2873
01:35:11,000 --> 01:35:11,000
还看

2874
01:35:11,000 --> 01:35:13,000
还看我

2875
01:35:13,000 --> 01:35:14,000
那句话怎么说

2876
01:35:14,000 --> 01:35:15,000
还看今朝

2877
01:35:16,000 --> 01:35:17,000
还看天朝

2878
01:35:17,000 --> 01:35:19,000
蜀蜂又人物

2879
01:35:19,000 --> 01:35:19,000
还看天朝

2880
01:35:19,000 --> 01:35:21,000
最近刚出了反恐法

2881
01:35:21,000 --> 01:35:21,000
你知道吗

2882
01:35:22,000 --> 01:35:22,000
我知道

2883
01:35:22,000 --> 01:35:23,000
对

2884
01:35:24,000 --> 01:35:25,000
反正管不到我

2885
01:35:25,000 --> 01:35:26,000
管他

2886
01:35:30,000 --> 01:35:32,000
这个还是管得到的

2887
01:35:32,000 --> 01:35:33,000
What

2888
01:35:33,000 --> 01:35:34,000
比如说你回过探戈亲

2889
01:35:35,000 --> 01:35:37,000
被人当做恐怖分子一顿打

2890
01:35:37,000 --> 01:35:39,000
你也很现实

2891
01:35:41,000 --> 01:35:41,000
好吧

2892
01:35:42,000 --> 01:35:43,000
小孩子

2893
01:35:43,000 --> 01:35:44,000
比如说我好忐忑

2894
01:35:45,000 --> 01:35:47,000
我只是说这是一种 Possibility

2895
01:35:48,000 --> 01:35:48,000
OK

2896
01:35:50,000 --> 01:35:50,000
Edge Case

2897
01:35:51,000 --> 01:35:52,000
对

2898
01:35:52,000 --> 01:35:52,000
Edge Case

2899
01:35:53,000 --> 01:35:57,000
但是我们写程序不就是各种处理 Edge Case 吗

2900
01:35:58,000 --> 01:35:59,000
是这样

2901
01:35:59,000 --> 01:36:00,000
但是很遗憾

2902
01:36:00,000 --> 01:36:04,000
没办法做一个测试用力来探测边界条件

2903
01:36:05,000 --> 01:36:07,000
你不能 Try and Catch

2904
01:36:07,000 --> 01:36:08,000
你只能 Try 一次

2905
01:36:08,000 --> 01:36:10,000
然后你系统就崩溃

2906
01:36:10,000 --> 01:36:12,000
就好像火星救援的小说里面

2907
01:36:12,000 --> 01:36:15,000
他们最后把什么一堆东西给拆了

2908
01:36:15,000 --> 01:36:19,000
然后说这个东西的失败的可能性是 4%

2909
01:36:19,000 --> 01:36:20,000
然后

2910
01:36:20,000 --> 01:36:21,000
但是我没有办法探测它

2911
01:36:21,000 --> 01:36:23,000
因为你点火就是点火了

2912
01:36:23,000 --> 01:36:25,000
没有什么办法能让你

2913
01:36:25,000 --> 01:36:28,000
把它停下来再重新修改

2914
01:36:28,000 --> 01:36:29,000
对

2915
01:36:29,000 --> 01:36:30,000
You have one shot

2916
01:36:31,000 --> 01:36:31,000
哎呀

2917
01:36:32,000 --> 01:36:35,000
所以不能用写程序的思维来过人生

2918
01:36:35,000 --> 01:36:36,000
对

2919
01:36:37,000 --> 01:36:39,000
搞不好那个 Crash 了你就再也回不来了

2920
01:36:39,000 --> 01:36:41,000
人生没有 Save Load

2921
01:36:41,000 --> 01:36:42,000
这是我们从

2922
01:36:43,000 --> 01:36:45,000
你说有没有人写程序的时候它不保存

2923
01:36:45,000 --> 01:36:46,000
然后就一次写过

2924
01:36:47,000 --> 01:36:48,000
因为其实

2925
01:36:49,000 --> 01:36:50,000
竞赛是有可能的吧

2926
01:36:50,000 --> 01:36:52,000
有那个你记得那个叫什么

2927
01:36:53,000 --> 01:36:55,000
List Machine 的时代

2928
01:36:56,000 --> 01:36:57,000
它不是整个

2929
01:36:57,000 --> 01:37:00,000
所以写都是一个 Image 对吧

2930
01:37:00,000 --> 01:37:00,000
对

2931
01:37:01,000 --> 01:37:03,000
那如果说假设不保存的话

2932
01:37:04,000 --> 01:37:05,000
那整个 Crash 就没了

2933
01:37:08,000 --> 01:37:08,000
对

2934
01:37:10,000 --> 01:37:10,000
听起来好恐怖

2935
01:37:10,000 --> 01:37:11,000
不过那个时候

2936
01:37:11,000 --> 01:37:13,000
不好但他们是 List

2937
01:37:13,000 --> 01:37:14,000
应该不会怎么 Crash 的

2938
01:37:15,000 --> 01:37:17,000
而且那个时代就是机器比较简单

2939
01:37:17,000 --> 01:37:19,000
就像我们小时候任天堂

2940
01:37:19,000 --> 01:37:21,000
那机器 Crash 怎么办重启

2941
01:37:21,000 --> 01:37:22,000
直接按下 Power 键

2942
01:37:22,000 --> 01:37:23,000
那个时候重启机器

2943
01:37:23,000 --> 01:37:25,000
简直跟我玩一样

2944
01:37:25,000 --> 01:37:26,000
那可是因为你有 ROM

2945
01:37:26,000 --> 01:37:27,000
你有那个固化

2946
01:37:27,000 --> 01:37:29,000
那个 Read Only Memory 的存在

2947
01:37:29,000 --> 01:37:32,000
List Machine 也是固化的

2948
01:37:32,000 --> 01:37:33,000
半固化的应该是

2949
01:37:33,000 --> 01:37:35,000
但至少就是说你能恢复到一个初始状态

2950
01:37:35,000 --> 01:37:36,000
但是你改的东西就没了

2951
01:37:37,000 --> 01:37:38,000
嗯那倒是

2952
01:37:38,000 --> 01:37:40,000
我们也是经过这样的日子的是吧

2953
01:37:40,000 --> 01:37:41,000
对

2954
01:37:41,000 --> 01:37:43,000
Crash Only 的人生

2955
01:37:47,000 --> 01:37:47,000
好吧

2956
01:37:47,000 --> 01:37:49,000
这期就这么结束了

2957
01:37:49,000 --> 01:37:51,000
就新年第一期

2958
01:37:52,000 --> 01:37:54,000
其实我们周年的时候也没有做什么庆祝

2959
01:37:54,000 --> 01:37:55,000
不像

2960
01:37:56,000 --> 01:37:57,000
不像那一次

2961
01:37:57,000 --> 01:38:01,000
还请到了司机城来庆祝 IT 功论一周年

2962
01:38:02,000 --> 01:38:05,000
我们那混合黄的一周年就是默默问的过去

2963
01:38:08,000 --> 01:38:09,000
不然你还想怎样

2964
01:38:10,000 --> 01:38:11,000
是啊

2965
01:38:11,000 --> 01:38:12,000
过 80 大寿吗

2966
01:38:13,000 --> 01:38:14,000
把萧綺姐

2967
01:38:14,000 --> 01:38:17,000
沐瑶和司机城全都请了

2968
01:38:17,000 --> 01:38:18,000
之前上过

2969
01:38:18,000 --> 01:38:18,000
祝过寿

2970
01:38:18,000 --> 01:38:20,000
混合的嘉宾一数

2971
01:38:20,000 --> 01:38:21,000
一个手都数过来

2972
01:38:22,000 --> 01:38:22,000
对

2973
01:38:23,000 --> 01:38:23,000
数过来

2974
01:38:23,000 --> 01:38:25,000
这可能也就是我们节目的传统

2975
01:38:25,000 --> 01:38:26,000
我们

2976
01:38:27,000 --> 01:38:28,000
以闲量为主

2977
01:38:29,000 --> 01:38:31,000
我们毕竟是一个娱乐节目是吧

2978
01:38:31,000 --> 01:38:31,000
对

2979
01:38:32,000 --> 01:38:33,000
OK

2980
01:38:33,000 --> 01:38:34,000
在节目结束之前

2981
01:38:34,000 --> 01:38:36,000
还有一个重大的新闻要宣布是吧

2982
01:38:37,000 --> 01:38:37,000
其实

2983
01:38:38,000 --> 01:38:39,000
这是很小的新闻

2984
01:38:39,000 --> 01:38:42,000
不过我们节目的听众可能会关心这种事

2985
01:38:43,000 --> 01:38:45,000
A small step for real

2986
01:38:46,000 --> 01:38:50,000
Giant step for security

2987
01:38:50,000 --> 01:38:52,000
最开始我们不是说这个 IPN

2988
01:38:52,000 --> 01:38:54,000
现在已经是全占 HTTPS 了吗

2989
01:38:54,000 --> 01:38:56,000
包括 CDN 也是对吧

2990
01:38:57,000 --> 01:38:58,000
然后

2991
01:38:59,000 --> 01:39:02,000
其实我们最近做的原改动是

2992
01:39:02,000 --> 01:39:02,000
把所

2993
01:39:02,000 --> 01:39:03,000
因为之前我们证书是用

2994
01:39:03,000 --> 01:39:05,000
那个 star SSL 的免费证书吗

2995
01:39:05,000 --> 01:39:06,000
对

2996
01:39:06,000 --> 01:39:07,000
那其实挺烦人的

2997
01:39:07,000 --> 01:39:08,000
因为它那个界面

2998
01:39:08,000 --> 01:39:10,000
是一个 web based

2999
01:39:10,000 --> 01:39:11,000
你必须要一个一个的手表去点

3000
01:39:11,000 --> 01:39:13,000
去操作验证域名

3001
01:39:13,000 --> 01:39:15,000
然后发放证书的过程挺坑的

3002
01:39:16,000 --> 01:39:17,000
然后之前有人写了一个

3003
01:39:18,000 --> 01:39:20,000
这个算是叫什么

3004
01:39:21,000 --> 01:39:22,000
爬网页那个词

3005
01:39:22,000 --> 01:39:23,000
scrappy 对吧

3006
01:39:25,000 --> 01:39:25,000
crawler

3007
01:39:26,000 --> 01:39:27,000
crawler

3008
01:39:27,000 --> 01:39:28,000
它不是 crawler

3009
01:39:28,000 --> 01:39:29,000
它是网页

3010
01:39:29,000 --> 01:39:30,000
web scrapper

3011
01:39:30,000 --> 01:39:30,000
OK

3012
01:39:30,000 --> 01:39:32,000
就是把网上的资料刮出来的那个

3013
01:39:32,000 --> 01:39:33,000
对 然后再弄

3014
01:39:33,000 --> 01:39:35,000
然后有人用基于这种方法

3015
01:39:35,000 --> 01:39:36,000
做了一个 Python 的

3016
01:39:38,000 --> 01:39:39,000
命令行工具

3017
01:39:39,000 --> 01:39:40,000
模拟一个浏览器

3018
01:39:40,000 --> 01:39:44,000
在操作 star SSL 的网页

3019
01:39:44,000 --> 01:39:45,000
然后去发放证书

3020
01:39:45,000 --> 01:39:48,000
但是整个不是非常稳定和靠谱吗

3021
01:39:49,000 --> 01:39:51,000
就是典型的所谓 duck tape programming

3022
01:39:52,000 --> 01:39:52,000
没错

3023
01:39:52,000 --> 01:39:55,000
就是要放出你那张图是吧

3024
01:39:55,000 --> 01:39:56,000
对 浇水水管

3025
01:39:56,000 --> 01:39:57,000
一定要找出来

3026
01:40:00,000 --> 01:40:01,000
然后

3027
01:40:02,000 --> 01:40:03,000
我们上次不是说

3028
01:40:03,000 --> 01:40:04,000
那个 Lets Encrypt 进入

3029
01:40:04,000 --> 01:40:07,000
那个叫做 public beta 的阶段了吗

3030
01:40:08,000 --> 01:40:10,000
然后就可以不用要邀请

3031
01:40:10,000 --> 01:40:12,000
也可以去就随意使用

3032
01:40:12,000 --> 01:40:14,000
但可能有时候会遇到它的一些坑

3033
01:40:14,000 --> 01:40:15,000
或者是不稳定的时候

3034
01:40:15,000 --> 01:40:16,000
这个目前还没到

3035
01:40:16,000 --> 01:40:17,000
anyway

3036
01:40:17,000 --> 01:40:19,000
就说 IPA 现在所有的

3037
01:40:19,000 --> 01:40:21,000
其他所有的网站的域名的证书

3038
01:40:21,000 --> 01:40:22,000
全都全部是改成了

3039
01:40:22,000 --> 01:40:25,000
这个 Lets Encrypt 发放的证书

3040
01:40:26,000 --> 01:40:27,000
包括我们用的 CDN 也是

3041
01:40:29,000 --> 01:40:29,000
对

3042
01:40:30,000 --> 01:40:31,000
当然

3043
01:40:31,000 --> 01:40:32,000
用了这个证书

3044
01:40:32,000 --> 01:40:34,000
用了这个 Lets Encrypt 这个好处是什么呢

3045
01:40:34,000 --> 01:40:36,000
就可以一切自动化了

3046
01:40:36,000 --> 01:40:37,000
因为它本来就是个 API

3047
01:40:37,000 --> 01:40:39,000
它的网站甚至都没有一个界面

3048
01:40:39,000 --> 01:40:40,000
可以让你手工去申请

3049
01:40:40,000 --> 01:40:41,000
你必须用命令行

3050
01:40:41,000 --> 01:40:43,000
对你必须用它的这个命令行

3051
01:40:43,000 --> 01:40:45,000
或者用它的官方客户端

3052
01:40:45,000 --> 01:40:47,000
或者用第三方客户端去做这个事

3053
01:40:48,000 --> 01:40:50,000
然后之前我用了一个别人写的

3054
01:40:50,000 --> 01:40:51,000
一个叫做 acme tiny 的

3055
01:40:51,000 --> 01:40:53,000
一个 200 行

3056
01:40:53,000 --> 01:40:55,000
不到 200 行的一个 Python 脚本

3057
01:40:55,000 --> 01:40:56,000
去做这个事

3058
01:40:56,000 --> 01:40:58,000
然后我仔细观察一个

3059
01:40:59,000 --> 01:41:02,000
一个这个脚本发现和之前那个

3060
01:41:03,000 --> 01:41:04,000
那个用 start

3061
01:41:04,000 --> 01:41:07,000
SSL 那种 web scrappy 的方式去做

3062
01:41:09,000 --> 01:41:11,000
有提升但是没有本质的区别

3063
01:41:12,000 --> 01:41:13,000
比如说

3064
01:41:13,000 --> 01:41:16,000
它会调用一个这个 OpenSSL 的

3065
01:41:16,000 --> 01:41:18,000
这个命令行工具

3066
01:41:18,000 --> 01:41:20,000
去读取一个 RSA 的这个撕要

3067
01:41:20,000 --> 01:41:22,000
然后再打印出它的公要的部分

3068
01:41:23,000 --> 01:41:25,000
然后再把那个公要的部分的两个

3069
01:41:26,000 --> 01:41:28,000
component 一个是 1 一个是 n 的两个数字

3070
01:41:29,000 --> 01:41:31,000
再转通过命令行的一些

3071
01:41:32,000 --> 01:41:33,000
稀奇古怪的操作

3072
01:41:33,000 --> 01:41:34,000
把它转换成那个

3073
01:41:34,000 --> 01:41:37,000
Lets Encrypt 服务端需要的格式再发送回去

3074
01:41:37,000 --> 01:41:38,000
刚才这句话政治不正确

3075
01:41:38,000 --> 01:41:42,000
应该说利用这个 Uniqs 哲学的一组工作流

3076
01:41:44,000 --> 01:41:46,000
which is highly unreliable

3077
01:41:47,000 --> 01:41:47,000
anyway

3078
01:41:47,000 --> 01:41:48,000
开玩笑了

3079
01:41:48,000 --> 01:41:49,000
其实还是挺 reliable 的

3080
01:41:49,000 --> 01:41:52,000
假设那个迷你输出都正常的话

3081
01:41:52,000 --> 01:41:55,000
但是毕竟我还是不太喜欢这种

3082
01:41:55,000 --> 01:41:57,000
政治不正确的方式去做这种

3083
01:41:57,000 --> 01:41:58,000
不叫政治不正确

3084
01:41:58,000 --> 01:42:00,000
这叫政治正确的方式

3085
01:42:00,000 --> 01:42:00,000
这种

3086
01:42:02,000 --> 01:42:05,000
比较不严谨的方式去做这么一种一个操作

3087
01:42:05,000 --> 01:42:05,000
对吧

3088
01:42:06,000 --> 01:42:08,000
然后我觉得它那个界面也不就是

3089
01:42:08,000 --> 01:42:09,000
那个 UI

3090
01:42:09,000 --> 01:42:10,000
就是 Command Line

3091
01:42:10,000 --> 01:42:12,000
就是命令行程序也是要讲 UI 的

3092
01:42:12,000 --> 01:42:14,000
我觉得也不是特别好

3093
01:42:15,000 --> 01:42:19,000
所以这个时候作为一个

3094
01:42:19,000 --> 01:42:21,000
还在继续写代码的人

3095
01:42:23,000 --> 01:42:25,000
的唯一正确方法是什么呢

3096
01:42:25,000 --> 01:42:26,000
是自己写一个

3097
01:42:27,000 --> 01:42:27,000
OK

3098
01:42:28,000 --> 01:42:29,000
黑客精神

3099
01:42:29,000 --> 01:42:31,000
在 Rail 身上端了完美提前

3100
01:42:32,000 --> 01:42:36,000
所以我用 Go 重写了一遍

3101
01:42:36,000 --> 01:42:39,000
一个 Archemy 的客户端

3102
01:42:39,000 --> 01:42:40,000
为什么用 Go 写呢

3103
01:42:40,000 --> 01:42:43,000
因为 Go 里面的标准库

3104
01:42:43,000 --> 01:42:45,000
对这个有非常完善的支持

3105
01:42:45,000 --> 01:42:48,000
包括连解析生成的 RSS

3106
01:42:48,000 --> 01:42:50,000
有那些公药私药

3107
01:42:51,000 --> 01:42:53,000
包括 X 509 证书的格式

3108
01:42:54,000 --> 01:42:55,000
什么什么的

3109
01:42:55,000 --> 01:42:58,000
但其实我用它写的一个最主要原因是

3110
01:42:59,000 --> 01:43:01,000
之前用 Python 的客户端也好

3111
01:43:01,000 --> 01:43:03,000
还是我看在官方的 Python

3112
01:43:03,000 --> 01:43:04,000
一个非常庞大

3113
01:43:04,000 --> 01:43:06,000
非常沉重的客户端也好

3114
01:43:07,000 --> 01:43:10,000
它都不支持并发验证域名

3115
01:43:10,000 --> 01:43:11,000
因为它签发域名的时候

3116
01:43:11,000 --> 01:43:13,000
它验证你确实控制这个域名

3117
01:43:13,000 --> 01:43:15,000
通过就是说

3118
01:43:15,000 --> 01:43:16,000
你在域名服务机上

3119
01:43:16,000 --> 01:43:19,000
部署一个特殊的文件的方式来实现

3120
01:43:19,000 --> 01:43:19,000
对吧

3121
01:43:20,000 --> 01:43:22,000
但是它们都要一个一个

3122
01:43:22,000 --> 01:43:23,000
就是顺序验证

3123
01:43:23,000 --> 01:43:25,000
但是你知道 IPN 旗下

3124
01:43:25,000 --> 01:43:26,000
有那么多的

3125
01:43:26,000 --> 01:43:27,000
一堆的话就

3126
01:43:27,000 --> 01:43:27,000
对

3127
01:43:27,000 --> 01:43:28,000
而且每个域名都有两个

3128
01:43:28,000 --> 01:43:30,000
一个是比如说 IPN.ly

3129
01:43:30,000 --> 01:43:31,000
然后有 WW.IPN.ly

3130
01:43:31,000 --> 01:43:33,000
然后把它跳转回 IPN.ly

3131
01:43:33,000 --> 01:43:36,000
因为有些人是喜欢在前面加 3 W 的

3132
01:43:37,000 --> 01:43:38,000
所以数一下

3133
01:43:39,000 --> 01:43:41,000
我手上已经有几十个域名

3134
01:43:41,000 --> 01:43:43,000
然后每次去等它那个

3135
01:43:43,000 --> 01:43:46,000
生成一个证书的话要等好久

3136
01:43:47,000 --> 01:43:48,000
所以我想

3137
01:43:49,000 --> 01:43:51,000
那个 Go 不是最擅长的就是并发操作吗

3138
01:43:51,000 --> 01:43:52,000
然后我看了一下那个 ACME 的协议

3139
01:43:53,000 --> 01:43:54,000
其实也比较简单

3140
01:43:56,000 --> 01:43:57,000
就是可以支持并发的

3141
01:43:58,000 --> 01:44:01,000
所以说用 Go 也做了一个高并发的支持

3142
01:44:01,000 --> 01:44:03,000
我可以同时验证

3143
01:44:03,000 --> 01:44:05,000
Go routine

3144
01:44:05,000 --> 01:44:05,000
对

3145
01:44:05,000 --> 01:44:06,000
OK

3146
01:44:07,000 --> 01:44:07,000
对

3147
01:44:07,000 --> 01:44:08,000
我可以

3148
01:44:08,000 --> 01:44:11,000
就可以在 10 秒

3149
01:44:11,000 --> 01:44:12,000
大概看网络情况

3150
01:44:12,000 --> 01:44:13,000
差不多 10 秒以内吧

3151
01:44:13,000 --> 01:44:14,000
就完成整个

3152
01:44:14,000 --> 01:44:17,000
这个验证域名和证书生成的一个操作

3153
01:44:17,000 --> 01:44:19,000
然后最终输出一个

3154
01:44:19,000 --> 01:44:21,000
完整的这个 certificate chain

3155
01:44:21,000 --> 01:44:24,000
包括了那个 HX 的用的那个

3156
01:44:24,000 --> 01:44:25,000
加密的撕要

3157
01:44:26,000 --> 01:44:27,000
Awesome

3158
01:44:27,000 --> 01:44:28,000
进步了吗

3159
01:44:28,000 --> 01:44:29,000
看远了

3160
01:44:29,000 --> 01:44:32,000
我放到那个 GitHub 上的去了

3161
01:44:32,000 --> 01:44:33,000
但现在还是

3162
01:44:33,000 --> 01:44:35,000
我稍后把那个链接

3163
01:44:35,000 --> 01:44:37,000
放到修动词里面吧

3164
01:44:37,000 --> 01:44:39,000
让大家有机就可以去用一下

3165
01:44:39,000 --> 01:44:40,000
然后

3166
01:44:40,000 --> 01:44:42,000
想说 Show me the pool request

3167
01:44:43,000 --> 01:44:45,000
Or SDFU

3168
01:44:46,000 --> 01:44:46,000
对错

3169
01:44:48,000 --> 01:44:48,000
OK

3170
01:44:49,000 --> 01:44:51,000
感谢收听 IPM Podcast 的网络细节下的

3171
01:44:51,000 --> 01:44:53,000
IT 技术主题娱乐节目

3172
01:44:53,000 --> 01:44:54,000
那横横望

3173
01:44:54,000 --> 01:44:55,000
我们号称 Hardcore

3174
01:44:55,000 --> 01:44:56,000
但是也没有干货

3175
01:44:56,000 --> 01:44:56,000
想听人听

3176
01:44:56,000 --> 01:44:58,000
不想听人就别听

3177
01:44:58,000 --> 01:44:59,000
你可以为本节目捐款

3178
01:44:59,000 --> 01:45:03,000
捐款地址是 kernelpanic.fm.donate

3179
01:45:04,000 --> 01:45:05,000
对

3180
01:45:05,000 --> 01:45:07,000
我们现在其实还是没有多少钱

3181
01:45:07,000 --> 01:45:09,000
我本来想买摩托车的

3182
01:45:09,000 --> 01:45:10,000
摩托车现在连个

3183
01:45:10,000 --> 01:45:11,000
离合器都卖不了

3184
01:45:14,000 --> 01:45:14,000
捐款基本所以

3185
01:45:14,000 --> 01:45:16,000
只要是 8 的正常数倍的可以

3186
01:45:16,000 --> 01:45:18,000
捐款不会为你带来什么

3187
01:45:18,000 --> 01:45:19,000
不捐也不会让你失去什么

3188
01:45:19,000 --> 01:45:22,000
我们的口号是 no hard feelings

3189
01:45:22,000 --> 01:45:23,000
如果你有任何反馈

3190
01:45:23,000 --> 01:45:28,000
可以发邮件到 kernelpanic.fm.donate

3191
01:45:28,000 --> 01:45:30,000
同时也欢迎你收听 IPM 旗下的

3192
01:45:30,000 --> 01:45:31,000
其他几档节目

3193
01:45:31,000 --> 01:45:31,000
IT 公论

3194
01:45:31,000 --> 01:45:32,000
伪制到

3195
01:45:32,000 --> 01:45:33,000
太一来了

3196
01:45:33,000 --> 01:45:33,000
流行通信

3197
01:45:33,000 --> 01:45:34,000
Hi story

3198
01:45:34,000 --> 01:45:35,000
应影像

3199
01:45:35,000 --> 01:45:35,000
无次元

3200
01:45:35,000 --> 01:45:36,000
播物制

3201
01:45:36,000 --> 01:45:36,000
选美

3202
01:45:36,000 --> 01:45:38,000
以及最新上线的

3203
01:45:38,000 --> 01:45:39,000
这个名字的

3204
01:45:39,000 --> 01:45:41,000
名字非常牛逼的

3205
01:45:41,000 --> 01:45:42,000
Art Institute

3206
01:45:42,000 --> 01:45:43,000
必下关

3207
01:45:43,000 --> 01:45:45,000
我们下期节目再会

