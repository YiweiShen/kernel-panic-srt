1
00:00:00,000 --> 00:00:08,000
您正在收听的是IPN podcast网络旗下的IT技术节目内和恐慌我们号称HARCOR

2
00:00:08,000 --> 00:00:15,000
但是也没有干货想听的人听不想听的人就别听那个恐慌的网址是CIRNORPANIC.FM

3
00:00:15,000 --> 00:00:23,000
我们推荐大家使用饭用行PostCoreHoodon订阅我们节目如果您不知道什么是可侯端

4
00:00:23,000 --> 00:00:27,000
请访问IPN.slashFAQ

5
00:00:27,000 --> 00:00:29,000
欢迎您为我们的节目捐款

6
00:00:29,000 --> 00:00:36,000
捐款地址是IPN.slashCIRNORPANICslash.net

7
00:00:36,000 --> 00:00:43,000
捐款进行随意捐款不会为你带来什么不捐也不会让你失去什么

8
00:00:43,000 --> 00:00:51,000
今天什么第18期节目不过Rail因为非常忙不能参加本期节目的露音了

9
00:00:51,000 --> 00:00:55,000
不过他一定会参加明天的IT公路

10
00:00:55,000 --> 00:01:00,000
所以各位有关会员们可以送一口气

11
00:01:00,000 --> 00:01:09,000
另外单纯因为迷恋Rail的声音的朋友听到这里其实就可以转弹了

12
00:01:09,000 --> 00:01:14,000
因为比如说有台的节目更好听

13
00:01:14,000 --> 00:01:17,000
有期推荐上一些太异来了

14
00:01:17,000 --> 00:01:20,000
主题是情趣用品

15
00:01:20,000 --> 00:01:23,000
请在家长缺席一下的手机

16
00:01:23,000 --> 00:01:27,000
所以人就坚守着内恋朋友们的朋友们也好

17
00:01:27,000 --> 00:01:29,000
本期没有Rail

18
00:01:29,000 --> 00:01:31,000
但是也没有家庭

19
00:01:31,000 --> 00:01:36,000
只有我一个人在这边孤独的坚守的认地

20
00:01:36,000 --> 00:01:45,000
但是你听起来错觉因为实际情况是我的朋友此刻争作的旁边为我端茶刀水山风垂味

21
00:01:45,000 --> 00:01:51,000
所以本期的主题就是程序员怎么样才能找到一个女朋友

22
00:01:51,000 --> 00:01:57,000
但是在进入主题之前我们先来念几方独者来信

23
00:01:57,000 --> 00:02:01,000
首先是因为叫做赢火的朋友

24
00:02:01,000 --> 00:02:05,000
他说第17的后面提到

25
00:02:05,000 --> 00:02:10,000
无套说不知道DiL的图标是什么意思

26
00:02:10,000 --> 00:02:12,000
所以不知道可不可以删

27
00:02:12,000 --> 00:02:17,000
而我小时候呢是国家系统的DiL文件删除了

28
00:02:17,000 --> 00:02:20,000
那个时候玩表格加了电脑他们出去了

29
00:02:20,000 --> 00:02:22,000
生活一个人在玩合金蛋头

30
00:02:22,000 --> 00:02:24,000
玩了以后觉得无聊就用手标断点

31
00:02:24,000 --> 00:02:26,000
花哈率的图标可以点开

32
00:02:26,000 --> 00:02:28,000
有齿轮的图标都点不开

33
00:02:28,000 --> 00:02:30,000
我就理所当然认为点不开是没有用的

34
00:02:30,000 --> 00:02:32,000
没有用的就应该被删掉

35
00:02:32,000 --> 00:02:36,000
所以我将所有能看到的点不开的文件都删除了

36
00:02:36,000 --> 00:02:39,000
后面要吃饭就先把一堆关在机

37
00:02:39,000 --> 00:02:41,000
到晚上表格回来发现电脑请用不了

38
00:02:41,000 --> 00:02:43,000
我以为弄烂的电脑很害怕

39
00:02:43,000 --> 00:02:47,000
因为那个时候电脑米电视机和模样拖车都轨

40
00:02:47,000 --> 00:02:48,000
排不起

41
00:02:48,000 --> 00:02:51,000
后来表格打电话叫了一个同学过来

42
00:02:51,000 --> 00:02:53,000
那个同学在一个黑户户的窗口里面打字

43
00:02:53,000 --> 00:02:55,000
折腾了半个中头

44
00:02:55,000 --> 00:02:57,000
电脑重新可以用

45
00:02:57,000 --> 00:02:59,000
小小的我觉得那个人是大大的高手

46
00:02:59,000 --> 00:03:01,000
很久以后我才醒不过来

47
00:03:01,000 --> 00:03:03,000
那个时候删掉的文件是DNAO

48
00:03:03,000 --> 00:03:07,000
那个高手所做的叫做重装系统

49
00:03:07,000 --> 00:03:09,000
断了

50
00:03:09,000 --> 00:03:12,000
这让我想起到此时爱

51
00:03:12,000 --> 00:03:13,000
好像没有这样的疑惑

52
00:03:13,000 --> 00:03:15,000
因为到此时爱

53
00:03:15,000 --> 00:03:19,000
而如果你不区分可知性文件和不可知性文件的话

54
00:03:19,000 --> 00:03:24,000
是很难知道哪个文件有用哪个人家没有的

55
00:03:24,000 --> 00:03:26,000
你只能看扩展名

56
00:03:26,000 --> 00:03:28,000
而如果你不懂扩展名的意义的话

57
00:03:28,000 --> 00:03:29,000
你是不会

58
00:03:29,000 --> 00:03:30,000
我们去码出山坦的

59
00:03:30,000 --> 00:03:37,000
这个也是另外一个命令航空比较安全的因素

60
00:03:37,000 --> 00:03:40,000
或者说早期的图形化界面没有默认

61
00:03:40,000 --> 00:03:44,000
用户有可能不知道自己在干什么

62
00:03:44,000 --> 00:03:45,000
现在的操作性文件都做得很好

63
00:03:45,000 --> 00:03:50,000
把比较容易弄坏的部分都隐藏起来

64
00:03:50,000 --> 00:03:54,000
这让我想起到此时爱重装系统好像只需要格式化

65
00:03:55,000 --> 00:03:56,000
格式化一下系统盘就可以了

66
00:03:56,000 --> 00:03:58,000
然后就条命令吧

67
00:03:58,000 --> 00:03:59,000
Sys 还是什么

68
00:03:59,000 --> 00:04:01,000
还是鞋缸Sys

69
00:04:01,000 --> 00:04:05,000
就可以把倒传播到一个软盘

70
00:04:05,000 --> 00:04:07,000
或者硬盘软的边缷可

71
00:04:07,000 --> 00:04:08,000
可以boot

72
00:04:08,000 --> 00:04:08,000
对

73
00:04:08,000 --> 00:04:10,000
如果各位九年后听中

74
00:04:10,000 --> 00:04:11,000
没有经历过那个时代

75
00:04:11,000 --> 00:04:15,000
把那个时代重装系统没有光盘可以用

76
00:04:15,000 --> 00:04:17,000
当然可能有网络可以用

77
00:04:17,000 --> 00:04:21,000
基本上就是你有实章软盘或甚至中国

78
00:04:21,000 --> 00:04:25,000
我现在已经不记得那个时候第一版温度3.2或者是

79
00:04:25,000 --> 00:04:29,000
我相信温度95又出了软盘

80
00:04:29,000 --> 00:04:30,000
对

81
00:04:30,000 --> 00:04:35,000
你要把一张软盘一次插入软盘去用器

82
00:04:35,000 --> 00:04:38,000
天哪软盘去用器过了多久没收这次

83
00:04:38,000 --> 00:04:42,000
然后每一张软盘可能能安装上10%

84
00:04:42,000 --> 00:04:42,000
15%左右

85
00:04:42,000 --> 00:04:46,000
然后你要耐心的那做着

86
00:04:46,000 --> 00:04:48,000
一直让一张手动的去换软盘

87
00:04:48,000 --> 00:04:50,000
拿下现在科技超明

88
00:04:50,000 --> 00:04:53,000
就像写一个文文文件告诉

89
00:04:53,000 --> 00:04:55,000
电脑你需要一台什么样的虚拟机

90
00:04:55,000 --> 00:04:56,000
电脑很快就可以

91
00:04:56,000 --> 00:05:01,000
在一瞬间帮你数起来一台具有完整的掃子系统

92
00:05:01,000 --> 00:05:05,000
和程序开发环境的性力机

93
00:05:05,000 --> 00:05:07,000
哎呀我真是老了

94
00:05:07,000 --> 00:05:08,000
呃

95
00:05:08,000 --> 00:05:12,000
不过其实我从很小的时候就建立起一个信念

96
00:05:12,000 --> 00:05:15,000
只要你不去拆机箱电脑就是弄不还

97
00:05:16,000 --> 00:05:19,000
我不知道现在学电场弄好那么是不是还有这个一祸

98
00:05:19,000 --> 00:05:23,000
就是有时候会很担心把电脑弄坏

99
00:05:23,000 --> 00:05:26,000
但实际情况就是只要你好好做杯饭

100
00:05:26,000 --> 00:05:28,000
数据别弄丢

101
00:05:28,000 --> 00:05:33,000
呃操作用本身基本上是非常

102
00:05:33,000 --> 00:05:35,000
那一操的

103
00:05:35,000 --> 00:05:37,000
哪怕你省两次的电脑

104
00:05:37,000 --> 00:05:41,000
且不论你现在你是否能够安全地删除一对电脑

105
00:05:41,000 --> 00:05:43,000
而不被电脑发现

106
00:05:43,000 --> 00:05:44,000
或者被电脑补掉回来

107
00:05:45,000 --> 00:05:48,000
呃即便你删掉了电脑也是永远可以恢复的

108
00:05:48,000 --> 00:05:49,000
只要你不拆机箱

109
00:05:49,000 --> 00:05:51,000
OK接下来念下一封堵着来信

110
00:05:51,000 --> 00:05:56,000
呃一位叫做逃棄红的朋友说

111
00:05:56,000 --> 00:05:59,000
定实际心提到飞机重起的时候

112
00:05:59,000 --> 00:06:01,000
要是听到的提示音势

113
00:06:01,000 --> 00:06:03,000
小话王岐得不窮

114
00:06:03,000 --> 00:06:05,000
那才是整个人都不好

115
00:06:06,000 --> 00:06:08,000
哈哈哈哈

116
00:06:09,000 --> 00:06:12,000
来自马上下了听任务李先生

117
00:06:12,000 --> 00:06:14,000
写了一封堵着来听说

118
00:06:14,000 --> 00:06:16,000
呃你们说了在温度的平台上

119
00:06:16,000 --> 00:06:19,000
现在可以开发objective c的事情

120
00:06:19,000 --> 00:06:21,000
虽然我还没有用过微软

121
00:06:21,000 --> 00:06:22,000
这款新的开发工具

122
00:06:22,000 --> 00:06:24,000
但是我是这样理解的

123
00:06:24,000 --> 00:06:28,000
微软的微软 studio 是主要让您便宜

124
00:06:28,000 --> 00:06:30,000
objective c的原代码

125
00:06:30,000 --> 00:06:34,000
但并不会声称 iOS 10 平台上的 binary code

126
00:06:34,000 --> 00:06:38,000
而是声称 Windows 平台的 universal binary code

127
00:06:38,000 --> 00:06:40,000
所以并不存在你们所说的

128
00:06:40,000 --> 00:06:45,000
如何在 Windows 上提交 iOS app 到 app store 的问题

129
00:06:45,000 --> 00:06:46,000
因为微软并没有想要以

130
00:06:46,000 --> 00:06:49,000
微软 studio 去来 Xcode 的想法

131
00:06:49,000 --> 00:06:51,000
呃跨号差个话题

132
00:06:51,000 --> 00:06:53,000
无套还是锤我有提到说

133
00:06:53,000 --> 00:06:55,000
scode 澳洲 native 开发工具

134
00:06:55,000 --> 00:06:58,000
那应该是 JetBraining  appcode

135
00:06:58,000 --> 00:07:01,000
呃不过这款工具是用你们讨厌的

136
00:07:01,000 --> 00:07:02,000
javas 开发的

137
00:07:02,000 --> 00:07:04,000
效点儿跨号完毕

138
00:07:04,000 --> 00:07:07,000
呃这次差距就是后来我也想起来

139
00:07:07,000 --> 00:07:09,000
那个 JetBraining  appcode

140
00:07:09,000 --> 00:07:11,000
呃对 JetBraining  appcode 的声称

141
00:07:11,000 --> 00:07:12,000
这样的吧

142
00:07:12,000 --> 00:07:15,000
不过这并不妨碍它是一款优秀的 i.e

143
00:07:16,000 --> 00:07:16,000
呃

144
00:07:18,000 --> 00:07:19,000
这样是可以做出好东西的

145
00:07:19,000 --> 00:07:21,000
这个我从来没有否认过

146
00:07:21,000 --> 00:07:25,000
但是只是你用 java 开做东西的过程比较淡淘

147
00:07:25,000 --> 00:07:27,000
齐学于你是比较注重结果

148
00:07:27,000 --> 00:07:29,000
还是比较注重过程啊

149
00:07:29,000 --> 00:07:31,000
我觉得过程还是挺重要的

150
00:07:32,000 --> 00:07:35,000
呃那我回到这个理解声务的来信

151
00:07:36,000 --> 00:07:38,000
呃他接着说微软主要想要

152
00:07:39,000 --> 00:07:41,000
借此新版的微车 studio 来让

153
00:07:41,000 --> 00:07:43,000
许多指位 app 开发软件的开发者

154
00:07:43,000 --> 00:07:47,000
提供一个快速从 iOS 1 制造 Windows 工具

155
00:07:48,000 --> 00:07:50,000
我认为这是一个比较聪明的手段

156
00:07:50,000 --> 00:07:52,000
来拉攏 iOS 安装的开发者

157
00:07:52,000 --> 00:07:55,000
呃 Apple 早期在推出 iSan 的时候也用我这一招

158
00:07:56,000 --> 00:07:58,000
他们当时使用螺塞套来呃

159
00:07:59,000 --> 00:08:01,000
这这边可能写错了

160
00:08:01,000 --> 00:08:03,000
我今天用一叫螺塞套

161
00:08:03,000 --> 00:08:04,000
就是螺塞套 10杯的一次

162
00:08:05,000 --> 00:08:07,000
呃来帮助开发者过度

163
00:08:07,000 --> 00:08:10,000
从 OS 9 到啊过度到 S10

164
00:08:11,000 --> 00:08:14,000
同时也在 S 课里面提过了多元的编译

165
00:08:14,000 --> 00:08:17,000
比如说 object c  c 和 c 加加

166
00:08:18,000 --> 00:08:22,000
呃来以这种方式让 Adobe 或者是微软

167
00:08:22,000 --> 00:08:24,000
这些用 c 或者 c 加的

168
00:08:24,000 --> 00:08:27,000
呃开发者的那种世界可以顺利的

169
00:08:27,000 --> 00:08:30,000
将 Photoshop Office 等旗舰的几别的软件

170
00:08:30,000 --> 00:08:32,000
顺利一支老 os 等

171
00:08:32,000 --> 00:08:33,000
呃

172
00:08:34,000 --> 00:08:37,000
如果您有兴趣知道想请一下的视频

173
00:08:37,000 --> 00:08:40,000
是不是由 Studio Compiler 提醒你们在 bill 的大会上的展示

174
00:08:40,000 --> 00:08:42,000
请从 27 分 20 秒开始看

175
00:08:42,000 --> 00:08:48,000
然后他给那个 channel 9  link 这个 link 会贴在手脑子里面

176
00:08:48,000 --> 00:08:50,000
我会贴在手脑上面

177
00:08:50,000 --> 00:08:51,000
我怎么停不了说我们的

178
00:08:52,000 --> 00:08:54,000
哎呀好孤单

179
00:08:55,000 --> 00:08:57,000
这里减述视频里有些重点

180
00:08:58,000 --> 00:08:59,000
呃

181
00:08:59,000 --> 00:09:01,000
编辑器采用 c 浪

182
00:09:01,000 --> 00:09:05,000
也就是 c 加加 oj c 的编辑器的 front end

183
00:09:06,000 --> 00:09:10,000
和 c 2 也就是微软编辑器的 back end

184
00:09:11,000 --> 00:09:14,000
呃在 windows 3 里面可以使用

185
00:09:14,000 --> 00:09:18,000
oj c 直接调用 window 显片

186
00:09:18,000 --> 00:09:19,000
好好

187
00:09:20,000 --> 00:09:23,000
呃然后编辑后的代码并不是在 immulator 上的位置

188
00:09:24,000 --> 00:09:26,000
而是 windows 用 virtual 原生量

189
00:09:28,000 --> 00:09:32,000
微软实现了 ios 上的一部分 api 它们称之为 subset

190
00:09:32,000 --> 00:09:33,000
of ios api

191
00:09:34,000 --> 00:09:37,000
计划时间的 api 包括 open g 哦 open a 哦

192
00:09:37,000 --> 00:09:37,000
深色

193
00:09:38,000 --> 00:09:40,000
y kit core animation 等等

194
00:09:41,000 --> 00:09:43,000
最后视频里面有个小花区

195
00:09:43,000 --> 00:09:49,000
当台上的微软成名经理问台下有多少人在为 apple 开发成品的时候

196
00:09:49,000 --> 00:09:50,000
台下来会一半人举手

197
00:09:52,000 --> 00:09:54,000
好非常感谢这位李先生的来信

198
00:09:55,000 --> 00:09:56,000
干活相当多

199
00:09:57,000 --> 00:10:01,000
呃他提到了这个 apple 早期在推出s 的时候使用时候

200
00:10:01,000 --> 00:10:05,000
三坛来帮助开发者从 os 代孤独的s 10

201
00:10:05,000 --> 00:10:09,000
呃我今天那个时候给 apple 开发成讯是要用

202
00:10:10,000 --> 00:10:13,000
呃除了s code还有一个东西要什么

203
00:10:14,000 --> 00:10:14,000
could the boring

204
00:10:15,000 --> 00:10:16,000
还是 ballad 共产除的

205
00:10:18,000 --> 00:10:21,000
我好像有信口开发的就是没有做调查就这样

206
00:10:22,000 --> 00:10:26,000
呃如果could the boring不是 ballad 做的话呢是谁做了

207
00:10:27,000 --> 00:10:30,000
这不重要从此那个时候

208
00:10:30,000 --> 00:10:34,000
ve os 9 开发成讯需要用到c

209
00:10:34,000 --> 00:10:36,000
那时候还没有二者不c

210
00:10:37,000 --> 00:10:39,000
天哪的是一个多么红黄的时代

211
00:10:39,000 --> 00:10:42,000
呃不过那时候好像也是可以用 java

212
00:10:43,000 --> 00:10:46,000
os 9 开发成讯的吧我没有记错的话

213
00:10:47,000 --> 00:10:49,000
我还是比较年轻的没有经历过那个时代

214
00:10:49,000 --> 00:10:52,000
如果我们听众里面有经历过那个时代的话

215
00:10:52,000 --> 00:10:55,000
就是怎样的 os 9 或者是 os

216
00:10:55,000 --> 00:10:59,000
那时候 os 8 开发成讯的

217
00:11:00,000 --> 00:11:03,000
听众的话也欢迎你来信提供一下呃这个经验

218
00:11:04,000 --> 00:11:05,000
就那个时代的

219
00:11:06,000 --> 00:11:09,000
呃苹果电脑是怎样开发成讯的

220
00:11:09,000 --> 00:11:09,000
因为

221
00:11:11,000 --> 00:11:16,000
虽然目前我们都是已经归一苹果罩的铁板国粉

222
00:11:16,000 --> 00:11:21,000
但是早期我们开发成讯的经历就真的只有

223
00:11:21,000 --> 00:11:22,000
我温度是那只linux

224
00:11:23,000 --> 00:11:24,000
呃

225
00:11:24,000 --> 00:11:29,000
好像我跟rear都没有做过sni 时代的至少是给

226
00:11:29,000 --> 00:11:31,000
图形界面编程的经历

227
00:11:31,000 --> 00:11:33,000
对欢迎各位提供保护今天的

228
00:11:34,000 --> 00:11:37,000
然后他提到说

229
00:11:37,000 --> 00:11:40,000
在feel job student里面可以直接

230
00:11:40,000 --> 00:11:42,000
EOWGENT C 掉用 Windows API

231
00:11:42,000 --> 00:11:43,000
这个听伞非常的

232
00:11:44,000 --> 00:11:45,000
龙太气

233
00:11:45,000 --> 00:11:46,000
就是

234
00:11:46,000 --> 00:11:47,000
所以

235
00:11:47,000 --> 00:11:50,000
眼下机就是我可以用到这个 c 在温度上面寫

236
00:11:50,000 --> 00:11:52,000
寫温度的程序

237
00:11:53,000 --> 00:11:54,000
嗯

238
00:11:54,000 --> 00:11:55,000
有意思

239
00:11:56,000 --> 00:11:57,000
什么想要今天呢

240
00:11:58,000 --> 00:12:00,000
呃接下来是一位叫做

241
00:12:00,000 --> 00:12:02,000
whypolydry朋友

242
00:12:02,000 --> 00:12:06,000
但朋友给我们进来的听伤来信

243
00:12:06,000 --> 00:12:08,000
他说rear不妥你们好

244
00:12:08,000 --> 00:12:10,000
呃还是给两位发给EOWGENT吧

245
00:12:10,000 --> 00:12:11,000
之前总是在微博留言

246
00:12:11,000 --> 00:12:14,000
担心写信会写的太长

247
00:12:14,000 --> 00:12:16,000
浪费两位的时间

248
00:12:17,000 --> 00:12:19,000
关于ve2的问题我就不多说了

249
00:12:19,000 --> 00:12:21,000
两位只是二谈到

250
00:12:21,000 --> 00:12:24,000
并没有把它当作一个正式的题目来讲

251
00:12:24,000 --> 00:12:26,000
而我也是仅仅欢有热情

252
00:12:26,000 --> 00:12:28,000
并不是相关项目的参与者

253
00:12:29,000 --> 00:12:32,000
所以我今天反馈是关于很早的一期

254
00:12:32,000 --> 00:12:34,000
关于机械肩盘的

255
00:12:36,000 --> 00:12:37,000
那是我们的第二期

256
00:12:38,000 --> 00:12:39,000
好像七斤也是

257
00:12:40,000 --> 00:12:41,000
呃人气最高的一期

258
00:12:41,000 --> 00:12:44,000
当然我相信木摇和消息的那样

259
00:12:44,000 --> 00:12:46,000
其实早晚会超过这一期

260
00:12:46,000 --> 00:12:46,000
不管

261
00:12:46,000 --> 00:12:47,000
目前来看

262
00:12:48,000 --> 00:12:51,000
肩盘这一期的下来的那样是非常高

263
00:12:52,000 --> 00:12:56,000
呃我是从那一期开始才知道机械肩盘是怎么回事

264
00:12:56,000 --> 00:12:58,000
然后就多了解了一些

265
00:12:58,000 --> 00:13:01,000
但是有一很大的遗憾就是

266
00:13:01,000 --> 00:13:05,000
没有人谈到机械肩盘压力克术的问题

267
00:13:05,000 --> 00:13:07,000
而我觉得这是一个很大的问题

268
00:13:07,000 --> 00:13:08,000
我的意思是

269
00:13:08,000 --> 00:13:14,000
没有把机械肩盘的压力曲线和不模件盘的压力曲线进行计算比较

270
00:13:15,000 --> 00:13:16,000
这种问题重要吗

271
00:13:16,000 --> 00:13:16,000
我觉得很重要

272
00:13:16,000 --> 00:13:17,000
请看后面

273
00:13:18,000 --> 00:13:20,000
呃我这就不话图论

274
00:13:20,000 --> 00:13:21,000
简单的说一下就是

275
00:13:21,000 --> 00:13:24,000
机械肩盘的谈力结构是谈谎

276
00:13:24,000 --> 00:13:26,000
暂时没有见到其他解构

277
00:13:26,000 --> 00:13:28,000
谈谎的压力曲线是从小到大

278
00:13:29,000 --> 00:13:32,000
而且压力曲线基本上是平址

279
00:13:32,000 --> 00:13:33,000
这是倒是一个问题

280
00:13:33,000 --> 00:13:36,000
就是按压的过程中要不断的时间压力

281
00:13:36,000 --> 00:13:40,000
而不模件盘的谈力结构是向交往

282
00:13:40,000 --> 00:13:42,000
这种结构出实压力比较大

283
00:13:42,000 --> 00:13:44,000
但是一旦突破之后就很轻松了

284
00:13:46,000 --> 00:13:48,000
实义表现说在结构就是

285
00:13:48,000 --> 00:13:51,000
机械肩盘要保持按压状态需要一支用力按住

286
00:13:52,000 --> 00:13:55,000
呃这里先不谈各种找个差异影响

287
00:13:55,000 --> 00:13:59,000
而不模件盘一旦按下之后就很容易保持按压状态

288
00:13:59,000 --> 00:14:00,000
不需要很大的力

289
00:14:00,000 --> 00:14:03,000
还有就是每次按压所需要付出的力

290
00:14:03,000 --> 00:14:05,000
机械肩盘也要比不模件盘大

291
00:14:06,000 --> 00:14:07,000
关于力的多少

292
00:14:07,000 --> 00:14:09,000
可以通过计算压力曲线后的

293
00:14:09,000 --> 00:14:11,000
我没有专业的工具没法测量计算

294
00:14:11,000 --> 00:14:14,000
但是参考对弓件试能的计算方式

295
00:14:15,000 --> 00:14:18,000
可以知道压力曲线越平址收集的能量就越大

296
00:14:19,000 --> 00:14:23,000
呃其实我能想到这个问题是因为我的工件感情去

297
00:14:23,000 --> 00:14:24,000
之前看过一些研究资料

298
00:14:24,000 --> 00:14:26,000
比如繁取工为什么效能弄到

299
00:14:27,000 --> 00:14:29,000
当然为了验证我的猜想

300
00:14:29,000 --> 00:14:31,000
我专门定了一个机械盘试用一下

301
00:14:31,000 --> 00:14:33,000
我只是为了体验一下就推货

302
00:14:33,000 --> 00:14:34,000
有他们不到的

303
00:14:34,000 --> 00:14:36,000
我试用的是茶种

304
00:14:36,000 --> 00:14:38,000
因为听说你们听你们说茶种比较轻

305
00:14:39,000 --> 00:14:40,000
体验的结果就是

306
00:14:40,000 --> 00:14:42,000
在Countdown Strike这种

307
00:14:42,000 --> 00:14:47,000
需要长时间按住几个键的游戏里面非常累

308
00:14:47,000 --> 00:14:51,000
打字的话也感觉要比我用的薄薄键盘要累一点

309
00:14:52,000 --> 00:14:53,000
机械键盘的出实压力很小

310
00:14:53,000 --> 00:14:55,000
感染一个很轻的错觉

311
00:14:55,000 --> 00:14:57,000
但是实际上通过前半的机梯就知道

312
00:14:58,000 --> 00:15:00,000
每三个人需要的力实际上很大

313
00:15:00,000 --> 00:15:02,000
这也许从理论上说明了

314
00:15:02,000 --> 00:15:04,000
机械键盘不是和长时间操作

315
00:15:05,000 --> 00:15:09,000
呃当然我只是想说明压力曲线这一个问题

316
00:15:09,000 --> 00:15:12,000
不设计对机械键盘优略的评论

317
00:15:12,000 --> 00:15:16,000
好吧其实有点担心让喜欢机械键盘两位大声反感

318
00:15:17,000 --> 00:15:20,000
另外我个人因为身体原因对轻动比较敏感

319
00:15:20,000 --> 00:15:21,000
所以我的手

320
00:15:21,000 --> 00:15:23,000
所以我的感受可能不代表大多数人

321
00:15:24,000 --> 00:15:27,000
我只用的是明机还被键盘是薄薄键盘

322
00:15:28,000 --> 00:15:31,000
但是支撑组件是笔本的X星节奏

323
00:15:31,000 --> 00:15:34,000
手感介于笔本和普通电脑时间

324
00:15:34,000 --> 00:15:35,000
这是我用个第二个键盘

325
00:15:36,000 --> 00:15:38,000
不好意思这一期又起也长了

326
00:15:38,000 --> 00:15:41,000
好不容易找到一个性能谈的话题

327
00:15:42,000 --> 00:15:45,000
OK这位听众的来星酒名网了

328
00:15:46,000 --> 00:15:48,000
嗯怎么说呢

329
00:15:48,000 --> 00:15:50,000
就是首先前面他说

330
00:15:51,000 --> 00:15:52,000
呃

331
00:15:52,000 --> 00:15:55,000
机械键盘压力克服数的问题

332
00:15:56,000 --> 00:15:57,000
呃

333
00:15:58,000 --> 00:16:00,000
他认为机械盘的谈议结束是谈谎

334
00:16:01,000 --> 00:16:04,000
呃谈谎的压力曲线现行

335
00:16:05,000 --> 00:16:05,000
呃

336
00:16:06,000 --> 00:16:08,000
压力过程中需要不断的是压力等的

337
00:16:09,000 --> 00:16:11,000
呃这个怎么说呢就是

338
00:16:11,000 --> 00:16:14,000
第二个曲线每一个轴就如果你用

339
00:16:14,000 --> 00:16:17,000
车轮轴来判断的话每个轴其实不一样的

340
00:16:17,000 --> 00:16:19,000
有些轴是呃

341
00:16:20,000 --> 00:16:21,000
的确是现行的

342
00:16:21,000 --> 00:16:23,000
但是另外一些轴是你按到一半的时候

343
00:16:23,000 --> 00:16:24,000
他会有出发点

344
00:16:24,000 --> 00:16:27,000
你是要把剑按到这个出发点之后

345
00:16:27,000 --> 00:16:29,000
呃就可以松坎

346
00:16:29,000 --> 00:16:32,000
就这朋友提到一个用力场景就是

347
00:16:33,000 --> 00:16:34,000
conter strike

348
00:16:35,000 --> 00:16:37,000
其实我个人觉得打conter strike的话

349
00:16:38,000 --> 00:16:39,000
这才是薄薄键盘比较好

350
00:16:39,000 --> 00:16:41,000
原因倒不是不像反显示比较好的

351
00:16:41,000 --> 00:16:43,000
而是因为怎么说呢

352
00:16:43,000 --> 00:16:44,000
就不过剑分比较

353
00:16:45,000 --> 00:16:46,000
要便宜吧

354
00:16:46,000 --> 00:16:48,000
就是打conter strike是非常

355
00:16:48,000 --> 00:16:51,000
对剑分非常零月的一种方式

356
00:16:51,000 --> 00:16:52,000
呃

357
00:16:52,000 --> 00:16:55,000
我个人的还是会指挥用机械盘打字

358
00:16:56,000 --> 00:16:57,000
我也不少

359
00:16:57,000 --> 00:16:59,000
反正现在我大部分时候大这个

360
00:16:59,000 --> 00:17:00,000
比如说呃

361
00:17:00,000 --> 00:17:02,000
报学的风号英雄或者是

362
00:17:02,000 --> 00:17:06,000
哇三的就是一个二战的坦克防证有限

363
00:17:07,000 --> 00:17:09,000
的时候基本上都是单用笔本的

364
00:17:09,000 --> 00:17:10,000
薄薄键盘更大

365
00:17:12,000 --> 00:17:15,000
呃手感这个东西是非常主观的

366
00:17:16,000 --> 00:17:16,000
一点事情

367
00:17:16,000 --> 00:17:21,000
呃其实如果你单纯的从手感上来说的话

368
00:17:22,000 --> 00:17:24,000
机械盘里面很多东西都是选选

369
00:17:24,000 --> 00:17:29,000
但是呃打字比较累这个可能是可能的确实

370
00:17:30,000 --> 00:17:31,000
有时候我现在也会觉得

371
00:17:32,000 --> 00:17:34,000
用机械盘打字会稍微累一点

372
00:17:35,000 --> 00:17:36,000
怎么说呢就是

373
00:17:36,000 --> 00:17:39,000
打字累的这么一点点可能跟你每天

374
00:17:39,000 --> 00:17:42,000
多走几步路的能量消耗都差不多

375
00:17:42,000 --> 00:17:43,000
基本上可以忽略不记得

376
00:17:44,000 --> 00:17:46,000
各位想看打字简派的朋友们就

377
00:17:47,000 --> 00:17:48,000
可以醒醒了

378
00:17:49,000 --> 00:17:51,000
呃最后的风度是来信

379
00:17:51,000 --> 00:17:53,000
因为来自叫做

380
00:17:54,000 --> 00:17:56,000
销制博我不知道您面对的没有

381
00:17:57,000 --> 00:17:58,000
呃都博士先生

382
00:17:58,000 --> 00:18:01,000
对他的E-mail里面就是Doctor头线

383
00:18:01,000 --> 00:18:03,000
这个预恩德国很像德国人都喜欢呗

384
00:18:03,000 --> 00:18:05,000
把自己Doctor头线写出来

385
00:18:05,000 --> 00:18:07,000
嗨两位主播好

386
00:18:07,000 --> 00:18:09,000
呃听了第15期的可能的

387
00:18:10,000 --> 00:18:13,000
听中来信中有人讨论的DataScience

388
00:18:13,000 --> 00:18:14,000
我有做不住了

389
00:18:14,000 --> 00:18:17,000
之前我买了本书的DataScience Handbook

390
00:18:17,000 --> 00:18:20,000
是Curra的DataScience Test William Chen

391
00:18:21,000 --> 00:18:24,000
联合一种DataScience Test做的

392
00:18:24,000 --> 00:18:26,000
回馈大众的一件大好事

393
00:18:26,000 --> 00:18:28,000
我觉得大家都可以买来看一下

394
00:18:28,000 --> 00:18:29,000
虽然现在还没有看完

395
00:18:29,000 --> 00:18:31,000
不过写的真的挺好的

396
00:18:31,000 --> 00:18:33,000
对于想要入行的DataScience

397
00:18:33,000 --> 00:18:36,000
已经在这个行业中的同学都会有所帮助

398
00:18:37,000 --> 00:18:40,000
呃来信中的那位同学说现在Azer

399
00:18:40,000 --> 00:18:41,000
和

400
00:18:42,000 --> 00:18:43,000
阿娜总这样的大公司

401
00:18:43,000 --> 00:18:47,000
把机器学习算法当中服务推出来了

402
00:18:47,000 --> 00:18:49,000
可以让大家不用编程就能用起来

403
00:18:50,000 --> 00:18:51,000
这的确是好事

404
00:18:51,000 --> 00:18:53,000
不过说到自然原处理

405
00:18:53,000 --> 00:18:56,000
其实还是有很多很难的事情要做的

406
00:18:57,000 --> 00:18:59,000
而其实这些很难的工作

407
00:18:59,000 --> 00:19:01,000
都是人可以轻而易举的做到了

408
00:19:01,000 --> 00:19:02,000
比如说

409
00:19:02,000 --> 00:19:04,000
从一个句子里面准确了

410
00:19:04,000 --> 00:19:06,000
实约出日期和时间

411
00:19:07,000 --> 00:19:08,000
这个听起来非常简单

412
00:19:09,000 --> 00:19:10,000
呃现有的

413
00:19:11,000 --> 00:19:13,000
Stanford NLP

414
00:19:13,000 --> 00:19:16,000
也就是斯坦福的自然原处理

415
00:19:16,000 --> 00:19:17,000
技术

416
00:19:17,000 --> 00:19:20,000
用基于肯定是能软能Feel的

417
00:19:20,000 --> 00:19:22,000
的实体命名算法

418
00:19:22,000 --> 00:19:22,000
也可以用

419
00:19:23,000 --> 00:19:25,000
但是达到非常精确的效果

420
00:19:25,000 --> 00:19:26,000
还是有很长的路要走

421
00:19:27,000 --> 00:19:28,000
再说另一个

422
00:19:28,000 --> 00:19:32,000
从数据集中让算法自动实约出变量的值

423
00:19:32,000 --> 00:19:35,000
是连续型的还是离三型的都会满

424
00:19:36,000 --> 00:19:39,000
建桥大学的周兵

425
00:19:39,000 --> 00:19:41,000
和哈洛马尼教授

426
00:19:41,000 --> 00:19:43,000
在2014年的NIPS

427
00:19:45,000 --> 00:19:46,000
这是一个

428
00:19:46,000 --> 00:19:50,000
new row information processing system

429
00:19:50,000 --> 00:19:51,000
他是一个年会

430
00:19:51,000 --> 00:19:52,000
应该是对

431
00:19:52,000 --> 00:19:56,000
跟这个神经信息处理性会关

432
00:19:58,000 --> 00:20:00,000
这个教授在

433
00:20:00,000 --> 00:20:03,000
2014年的NIPS会议上面

434
00:20:03,000 --> 00:20:05,000
就这个问题发表的片轮轮

435
00:20:05,000 --> 00:20:07,000
然后顺便再推下另外一个

436
00:20:07,000 --> 00:20:08,000
podcast

437
00:20:08,000 --> 00:20:10,000
talking machine

438
00:20:10,000 --> 00:20:10,000
呃

439
00:20:10,000 --> 00:20:12,000
王主持人HB

440
00:20:12,000 --> 00:20:17,000
www.thetalkingmachines.com

441
00:20:18,000 --> 00:20:21,000
然后其中一主持人就是哈洛大学的

442
00:20:21,000 --> 00:20:22,000
RAM

443
00:20:22,000 --> 00:20:23,000
TRAWSCODE

444
00:20:23,000 --> 00:20:25,000
EDIMS教授

445
00:20:25,000 --> 00:20:26,000
他利用他的关系

446
00:20:26,000 --> 00:20:28,000
几乎在每一期都请来了

447
00:20:28,000 --> 00:20:31,000
他一听名字就让我心跳加速的嘉宾

448
00:20:31,000 --> 00:20:33,000
不过EDIMS教授

449
00:20:33,000 --> 00:20:35,000
在节目里面的一个保留项目

450
00:20:35,000 --> 00:20:37,000
就是用人类可以听懂的

451
00:20:37,000 --> 00:20:38,000
非常简单的语言

452
00:20:38,000 --> 00:20:40,000
解释非常复杂的算法

453
00:20:41,000 --> 00:20:43,000
比如推荐系统里面的

454
00:20:43,000 --> 00:20:46,000
collaborative filtering

455
00:20:46,000 --> 00:20:47,000
呃

456
00:20:47,000 --> 00:20:47,000
怎么反应

457
00:20:47,000 --> 00:20:48,000
鞋童过绿

458
00:20:49,000 --> 00:20:49,000
呃

459
00:20:49,000 --> 00:20:53,000
在比如非参数被业诗推荐中了

460
00:20:53,000 --> 00:20:54,000
非常难的

461
00:20:54,000 --> 00:20:56,000
Chinese restaurant process

462
00:20:57,000 --> 00:20:59,000
中餐馆过程

463
00:20:59,000 --> 00:21:00,000
不好意思

464
00:21:00,000 --> 00:21:02,000
查了一下中餐馆过程是

465
00:21:02,000 --> 00:21:05,000
模女一个有无线张原桌

466
00:21:05,000 --> 00:21:08,000
每张原桌能做无线的人的中餐馆里面

467
00:21:08,000 --> 00:21:10,000
做客人的随机过程

468
00:21:10,000 --> 00:21:10,000
呃

469
00:21:10,000 --> 00:21:12,000
为什么教证名字大概是

470
00:21:12,000 --> 00:21:16,000
在洋人家里面只有中餐馆才会有原桌吧

471
00:21:16,000 --> 00:21:18,000
以上是这位听众所推荐的

472
00:21:18,000 --> 00:21:21,000
应该是关于自然原处理的一个TOTCAST

473
00:21:21,000 --> 00:21:24,000
有兴趣的听众们不妨去听听

474
00:21:24,000 --> 00:21:25,000
呃

475
00:21:25,000 --> 00:21:26,000
最后他说PS

476
00:21:26,000 --> 00:21:27,000
虽然无套说了

477
00:21:27,000 --> 00:21:28,000
不让再推荐加兵了

478
00:21:28,000 --> 00:21:29,000
但是

479
00:21:29,000 --> 00:21:30,000
Please please

480
00:21:30,000 --> 00:21:32,000
能是请下CRAW的为他们全吗

481
00:21:32,000 --> 00:21:36,000
我想如果是要最期有关DataScience的话题

482
00:21:36,000 --> 00:21:36,000
呃

483
00:21:36,000 --> 00:21:38,000
请来这样一个DataScience材好

484
00:21:38,000 --> 00:21:39,000
采好吧

485
00:21:40,000 --> 00:21:43,000
我也知道请一个陌生人上节目还是挺难的

486
00:21:43,000 --> 00:21:44,000
Anyway

487
00:21:44,000 --> 00:21:45,000
Please keep up

488
00:21:45,000 --> 00:21:46,000
我们Go

489
00:21:46,000 --> 00:21:47,000
Please keep up

490
00:21:47,000 --> 00:21:47,000
的Go to work

491
00:21:48,000 --> 00:21:48,000
呃

492
00:21:48,000 --> 00:21:49,000
感谢这位听众

493
00:21:50,000 --> 00:21:50,000
呃

494
00:21:50,000 --> 00:21:51,000
对

495
00:21:51,000 --> 00:21:52,000
我们的确是想要请一个

496
00:21:52,000 --> 00:21:57,000
或者人家使得DataScience来聊DataScience的话题

497
00:21:58,000 --> 00:21:59,000
不过

498
00:21:59,000 --> 00:22:01,000
目前还没有合适人选

499
00:22:02,000 --> 00:22:04,000
我记不去看一下这位为他们成

500
00:22:04,000 --> 00:22:05,000
是不是

501
00:22:06,000 --> 00:22:08,000
是不是是不是一个社会接近人吧

502
00:22:09,000 --> 00:22:10,000
感谢这位听

503
00:22:11,000 --> 00:22:12,000
呃接下来

504
00:22:12,000 --> 00:22:14,000
我想要提到的

505
00:22:14,000 --> 00:22:15,000
一些新闻就是

506
00:22:16,000 --> 00:22:17,000
其实有这种意调

507
00:22:17,000 --> 00:22:19,000
就是Go to work

508
00:22:19,000 --> 00:22:20,000
啊我不知道

509
00:22:20,000 --> 00:22:23,000
明天的ID功能会怎样聊这个话题

510
00:22:23,000 --> 00:22:25,000
我我希望他们会聊这个话题吧

511
00:22:25,000 --> 00:22:27,000
但是从看着从面上来说

512
00:22:27,000 --> 00:22:29,000
这一次Google I.O

513
00:22:29,000 --> 00:22:30,000
呃

514
00:22:30,000 --> 00:22:33,000
大会让我印象不高深的

515
00:22:33,000 --> 00:22:35,000
当然我没有完全看着一个大会

516
00:22:36,000 --> 00:22:37,000
我只是试后去看了一下

517
00:22:38,000 --> 00:22:38,000
Summer

518
00:22:39,000 --> 00:22:39,000
呃

519
00:22:39,000 --> 00:22:40,000
因为我上班

520
00:22:40,000 --> 00:22:42,000
就这次Google I.O的

521
00:22:42,000 --> 00:22:44,000
在我看来的亮点就是

522
00:22:45,000 --> 00:22:47,000
首先是安照的Studio I.O

523
00:22:47,000 --> 00:22:48,000
应该是1.30吧

524
00:22:49,000 --> 00:22:51,000
呃增加了NDK的支持

525
00:22:51,000 --> 00:22:53,000
就是Native

526
00:22:53,000 --> 00:22:55,000
Devil Loper Kids

527
00:22:55,000 --> 00:22:56,000
你可以在

528
00:22:57,000 --> 00:22:57,000
呃

529
00:22:57,000 --> 00:23:00,000
他应该是使用了JetBrains的C line

530
00:23:00,000 --> 00:23:02,000
来支持

531
00:23:02,000 --> 00:23:02,000
呃

532
00:23:02,000 --> 00:23:04,000
用C加加

533
00:23:04,000 --> 00:23:05,000
寄安照点

534
00:23:05,000 --> 00:23:07,000
其实就是Google I.O

535
00:23:07,000 --> 00:23:08,000
此次出现了一个

536
00:23:08,000 --> 00:23:11,000
专门为International Sense

537
00:23:12,000 --> 00:23:13,000
所开发的Soul系统

538
00:23:13,000 --> 00:23:14,000
叫做BrayL

539
00:23:15,000 --> 00:23:17,000
名字有点奇怪

540
00:23:17,000 --> 00:23:18,000
BrayL就是一个

541
00:23:18,000 --> 00:23:20,000
怎么说的是一个比较

542
00:23:20,000 --> 00:23:23,000
被Stripped down安照的系统

543
00:23:23,000 --> 00:23:26,000
然后你可以把它装在一些智能加电上

544
00:23:26,000 --> 00:23:27,000
甚至都不应该是加电

545
00:23:27,000 --> 00:23:28,000
就是一些电器

546
00:23:28,000 --> 00:23:29,000
比如说电灯啊

547
00:23:29,000 --> 00:23:30,000
电扇啊

548
00:23:30,000 --> 00:23:31,000
只能用什么

549
00:23:31,000 --> 00:23:31,000
会呃

550
00:23:31,000 --> 00:23:32,000
会员祸的器啊

551
00:23:32,000 --> 00:23:33,000
只能

552
00:23:33,000 --> 00:23:34,000
呃

553
00:23:34,000 --> 00:23:35,000
你在上面插一芯片

554
00:23:35,000 --> 00:23:37,000
然后装上这个Soul系统

555
00:23:37,000 --> 00:23:38,000
然后

556
00:23:38,000 --> 00:23:39,000
呃

557
00:23:39,000 --> 00:23:40,000
Otomagical

558
00:23:40,000 --> 00:23:41,000
这个东西就变成了一个智能加电

559
00:23:41,000 --> 00:23:43,000
你可以用你的

560
00:23:43,000 --> 00:23:44,000
呃

561
00:23:44,000 --> 00:23:46,000
安照的设备去操作它

562
00:23:47,000 --> 00:23:49,000
然后呃

563
00:23:49,000 --> 00:23:51,000
配套推出的也就是

564
00:23:51,000 --> 00:23:52,000
这个

565
00:23:53,000 --> 00:23:54,000
工

566
00:23:54,000 --> 00:23:55,000
呃

567
00:23:55,000 --> 00:23:56,000
这种小型片的互相

568
00:23:56,000 --> 00:23:57,000
通信的一种

569
00:23:57,000 --> 00:23:58,000
呃

570
00:23:58,000 --> 00:23:59,000
怎么说呢

571
00:23:59,000 --> 00:24:00,000
CompanyCase Layer

572
00:24:01,000 --> 00:24:01,000
对

573
00:24:01,000 --> 00:24:02,000
应该知道的CompanyCase Layer

574
00:24:02,000 --> 00:24:04,000
就是通信层

575
00:24:04,000 --> 00:24:05,000
它的名字叫做V

576
00:24:06,000 --> 00:24:07,000
也就是

577
00:24:07,000 --> 00:24:08,000
Wa

578
00:24:08,000 --> 00:24:10,000
Va

579
00:24:10,000 --> 00:24:11,000
呃

580
00:24:11,000 --> 00:24:12,000
这样我想起那个

581
00:24:12,000 --> 00:24:14,000
Google Wave

582
00:24:14,000 --> 00:24:14,000
就是

583
00:24:15,000 --> 00:24:15,000
那个

584
00:24:15,000 --> 00:24:16,000
已经

585
00:24:16,000 --> 00:24:18,000
正式TiceFood中

586
00:24:18,000 --> 00:24:19,000
呃

587
00:24:19,000 --> 00:24:21,000
理念超前还不比

588
00:24:21,000 --> 00:24:22,000
但是最后

589
00:24:23,000 --> 00:24:23,000
对

590
00:24:23,000 --> 00:24:26,000
就这么默默的消失掉了Google Wave

591
00:24:26,000 --> 00:24:28,000
我其实我希望

592
00:24:28,000 --> 00:24:29,000
锤楼和

593
00:24:30,000 --> 00:24:32,000
V可以早远推广开来

594
00:24:32,000 --> 00:24:33,000
因为这样的话可能

595
00:24:34,000 --> 00:24:35,000
呃

596
00:24:35,000 --> 00:24:38,000
智能加电会比较提前进我们生活

597
00:24:38,000 --> 00:24:40,000
对我其实已经

598
00:24:40,000 --> 00:24:42,000
忘想过智能加电

599
00:24:42,000 --> 00:24:44,000
无处不再来场景了

600
00:24:44,000 --> 00:24:45,000
呃

601
00:24:45,000 --> 00:24:47,000
未来怎么还不到

602
00:24:48,000 --> 00:24:49,000
刘布电你叫做回到未来

603
00:24:50,000 --> 00:24:50,000
呃

604
00:24:50,000 --> 00:24:51,000
Bike to Future

605
00:24:52,000 --> 00:24:52,000
呃

606
00:24:52,000 --> 00:24:55,000
应该是拍上于85年

607
00:24:55,000 --> 00:24:57,000
几之后的3部

608
00:24:57,000 --> 00:24:59,000
关于时空旅行的得

609
00:25:00,000 --> 00:25:00,000
呃

610
00:25:00,000 --> 00:25:01,000
其中

611
00:25:02,000 --> 00:25:04,000
主角在1985年所

612
00:25:05,000 --> 00:25:06,000
前进30年

613
00:25:06,000 --> 00:25:08,000
去到了那个

614
00:25:08,000 --> 00:25:09,000
2015年

615
00:25:09,000 --> 00:25:11,000
也就是今年

616
00:25:11,000 --> 00:25:12,000
Inside of the lake

617
00:25:12,000 --> 00:25:13,000
呃

618
00:25:13,000 --> 00:25:16,000
在10月15号

619
00:25:16,000 --> 00:25:17,000
还是20号

620
00:25:17,000 --> 00:25:18,000
没错的

621
00:25:18,000 --> 00:25:19,000
呃

622
00:25:19,000 --> 00:25:20,000
那一天

623
00:25:20,000 --> 00:25:21,000
离我们

624
00:25:21,000 --> 00:25:23,000
离我们的路解冬的今天

625
00:25:23,000 --> 00:25:25,000
大概也只有150天左右

626
00:25:26,000 --> 00:25:27,000
然后

627
00:25:27,000 --> 00:25:28,000
电影里面的那个

628
00:25:28,000 --> 00:25:29,000
2015年

629
00:25:30,000 --> 00:25:31,000
呃

630
00:25:32,000 --> 00:25:33,000
在有些地方是不如

631
00:25:33,000 --> 00:25:34,000
现在2025年

632
00:25:34,000 --> 00:25:36,000
但是在很多其他地方是

633
00:25:36,000 --> 00:25:37,000
远远超越

634
00:25:37,000 --> 00:25:38,000
今天的科技水準

635
00:25:38,000 --> 00:25:39,000
就是

636
00:25:40,000 --> 00:25:41,000
智能加电都不说了

637
00:25:41,000 --> 00:25:42,000
就比如说

638
00:25:42,000 --> 00:25:43,000
它里面有一个叫做

639
00:25:43,000 --> 00:25:46,000
Mr. Fusion的能源装置

640
00:25:46,000 --> 00:25:47,000
可以装在车上

641
00:25:47,000 --> 00:25:49,000
然后你只要往没扔一些垃圾

642
00:25:50,000 --> 00:25:51,000
它就可以通过巨遍来产生

643
00:25:51,000 --> 00:25:53,000
非常非常多的能量

644
00:25:53,000 --> 00:25:54,000
这能量所以支持让一样

645
00:25:54,000 --> 00:25:55,000
车产生

646
00:25:56,000 --> 00:25:57,000
时空旅行

647
00:25:58,000 --> 00:25:59,000
然后还有些非常神奇的想法

648
00:25:59,000 --> 00:26:00,000
比如说

649
00:26:01,000 --> 00:26:01,000
呃

650
00:26:02,000 --> 00:26:03,000
漂浮划板

651
00:26:03,000 --> 00:26:04,000
对

652
00:26:04,000 --> 00:26:05,000
漂浮划板这个东西在

653
00:26:05,000 --> 00:26:08,000
我们的2015年还是没有被实现出来

654
00:26:08,000 --> 00:26:09,000
然后对最重要的一点

655
00:26:09,000 --> 00:26:11,000
是里面的车都是能飞的

656
00:26:12,000 --> 00:26:14,000
我觉得前任在知乎上有一个问题

657
00:26:14,000 --> 00:26:15,000
就是为什么

658
00:26:16,000 --> 00:26:16,000
为什么说

659
00:26:16,000 --> 00:26:19,000
我们在40年前想要的是飞车

660
00:26:19,000 --> 00:26:21,000
而现在我们得了的只是140个字

661
00:26:23,000 --> 00:26:25,000
但是说这块的人是

662
00:26:25,000 --> 00:26:27,000
没记错的话是

663
00:26:27,000 --> 00:26:29,000
Tesla投资人之一吧

664
00:26:29,000 --> 00:26:30,000
不是I'm a Muslim

665
00:26:30,000 --> 00:26:30,000
他自己

666
00:26:30,000 --> 00:26:31,000
但是

667
00:26:31,000 --> 00:26:34,000
这个人也是一个科技界的

668
00:26:34,000 --> 00:26:35,000
推手人士

669
00:26:35,000 --> 00:26:36,000
他说这句话有因其实

670
00:26:36,000 --> 00:26:38,000
本质上是立志

671
00:26:38,000 --> 00:26:39,000
但是当然有些人

672
00:26:39,000 --> 00:26:41,000
把他当成一句吐槽来看

673
00:26:43,000 --> 00:26:44,000
重点就是

674
00:26:44,000 --> 00:26:45,000
我们对于未来的想象

675
00:26:45,000 --> 00:26:48,000
很有可能是偏差非常大的

676
00:26:48,000 --> 00:26:49,000
但是

677
00:26:49,000 --> 00:26:51,000
这并不应该妨碍

678
00:26:51,000 --> 00:26:52,000
我们就想象感

679
00:26:52,000 --> 00:26:52,000
对

680
00:26:52,000 --> 00:26:53,000
我就是希望智能家具

681
00:26:53,000 --> 00:26:56,000
可以早天扑开来

682
00:26:57,000 --> 00:26:58,000
应用

683
00:26:58,000 --> 00:27:00,000
让我们今天能够

684
00:27:01,000 --> 00:27:02,000
在某种成功上

685
00:27:03,000 --> 00:27:06,000
在比较方便的

686
00:27:06,000 --> 00:27:07,000
部分

687
00:27:08,000 --> 00:27:09,000
能够超越那个时候

688
00:27:09,000 --> 00:27:11,000
对于未来的想象

689
00:27:15,000 --> 00:27:16,000
过于飞车这个东西

690
00:27:16,000 --> 00:27:17,000
我觉得

691
00:27:17,000 --> 00:27:19,000
就是我之前

692
00:27:19,000 --> 00:27:21,000
在周困上看到这个问题的时候

693
00:27:21,000 --> 00:27:22,000
里面有人说

694
00:27:22,000 --> 00:27:24,000
里面有人通过各种

695
00:27:24,000 --> 00:27:25,000
例子来论证了

696
00:27:25,000 --> 00:27:26,000
为什么

697
00:27:26,000 --> 00:27:28,000
140个字符比非常重要

698
00:27:28,000 --> 00:27:29,000
说

699
00:27:30,000 --> 00:27:33,000
如果你可以更变节的

700
00:27:33,000 --> 00:27:35,000
和李宁很远的人同讯

701
00:27:35,000 --> 00:27:38,000
那你就不需要去到那个人身边

702
00:27:38,000 --> 00:27:39,000
如果你可以开

703
00:27:40,000 --> 00:27:41,000
开了Confidence的话

704
00:27:41,000 --> 00:27:44,000
那你就不需要亲自跑到那个地方去

705
00:27:45,000 --> 00:27:46,000
所以

706
00:27:46,000 --> 00:27:48,000
有140字符的变节的

707
00:27:48,000 --> 00:27:49,000
交流方式

708
00:27:49,000 --> 00:27:50,000
其实是要飞车上

709
00:27:51,000 --> 00:27:52,000
我承认太有一定的道理

710
00:27:52,000 --> 00:27:53,000
但是

711
00:27:54,000 --> 00:27:55,000
我总觉得

712
00:27:55,000 --> 00:27:56,000
如果飞车这个东西

713
00:27:56,000 --> 00:27:58,000
真的可以出现的话

714
00:27:59,000 --> 00:28:00,000
或者说一个比较

715
00:28:00,000 --> 00:28:02,000
我飞车其实已经出现了

716
00:28:02,000 --> 00:28:03,000
就是

717
00:28:03,000 --> 00:28:05,000
现在已经有可以飞起来的汽车

718
00:28:05,000 --> 00:28:06,000
但是

719
00:28:06,000 --> 00:28:08,000
最大的问题是这个汽车

720
00:28:08,000 --> 00:28:10,000
他首先他需要专门的跑到

721
00:28:10,000 --> 00:28:11,000
第二他

722
00:28:12,000 --> 00:28:13,000
飞的时候

723
00:28:13,000 --> 00:28:14,000
其实不是非常的灵活

724
00:28:17,000 --> 00:28:18,000
第三就是能耗非常高

725
00:28:19,000 --> 00:28:21,000
但是如果有Mistofusion出现的话

726
00:28:21,000 --> 00:28:22,000
能耗不是问题

727
00:28:22,000 --> 00:28:24,000
但最大的问题是

728
00:28:24,000 --> 00:28:25,000
我们想要的飞车

729
00:28:25,000 --> 00:28:27,000
其实是像Bike2Fusion里面那样

730
00:28:27,000 --> 00:28:29,000
只需要把四个轮子朝下

731
00:28:29,000 --> 00:28:30,000
然后就可以

732
00:28:30,000 --> 00:28:31,000
直接选择付起来的飞车

733
00:28:31,000 --> 00:28:33,000
或者像什么第五元素里面那种飞车

734
00:28:33,000 --> 00:28:35,000
那才是真正实用的飞车对吧

735
00:28:36,000 --> 00:28:38,000
这样的飞车解决了一个什么样的问题

736
00:28:38,000 --> 00:28:39,000
就是你不再需要做飞机了

737
00:28:39,000 --> 00:28:41,000
你不再需要做

738
00:28:42,000 --> 00:28:43,000
月阳飞机了

739
00:28:43,000 --> 00:28:44,000
就是

740
00:28:45,000 --> 00:28:49,000
点对点的直线交通变得非常的简单

741
00:28:50,000 --> 00:28:51,000
单一模式化

742
00:28:51,000 --> 00:28:53,000
就是比如说在Bike2Fusion里面

743
00:28:53,000 --> 00:28:54,000
他们里面设想说

744
00:28:54,000 --> 00:28:58,000
整个每周哪支跨州的这个行路

745
00:29:00,000 --> 00:29:03,000
就得像高速公路一样是

746
00:29:03,000 --> 00:29:04,000
已经已经先化好了

747
00:29:04,000 --> 00:29:06,000
比如说如果你想从中国到美国的话

748
00:29:06,000 --> 00:29:07,000
你只需要

749
00:29:08,000 --> 00:29:09,000
开上自己的飞车

750
00:29:09,000 --> 00:29:10,000
从自己家的

751
00:29:10,000 --> 00:29:11,000
门前出发

752
00:29:11,000 --> 00:29:13,000
然后飞到高速公路上

753
00:29:13,000 --> 00:29:14,000
然后

754
00:29:14,000 --> 00:29:15,000
就言之

755
00:29:15,000 --> 00:29:16,000
我相信一定有什么导航技术

756
00:29:16,000 --> 00:29:17,000
就是你时候

757
00:29:18,000 --> 00:29:19,000
坐在车里面然后倒

758
00:29:19,000 --> 00:29:20,000
这个车就会把你带到了

759
00:29:20,000 --> 00:29:22,000
你在美国要去那个地方的

760
00:29:22,000 --> 00:29:23,000
路旁

761
00:29:23,000 --> 00:29:25,000
这是一个非常点对点的服务

762
00:29:25,000 --> 00:29:26,000
就是

763
00:29:26,000 --> 00:29:30,000
不像现在我们需要先从家里面做车到机场

764
00:29:30,000 --> 00:29:31,000
然后拖越行里

765
00:29:31,000 --> 00:29:32,000
然后拆电然后过安解

766
00:29:32,000 --> 00:29:33,000
然后不拉拉拉

767
00:29:33,000 --> 00:29:36,000
跟几百个不知道是不是空分子

768
00:29:36,000 --> 00:29:37,000
人坐在一起

769
00:29:37,000 --> 00:29:39,000
然后把自己生命交在机场上

770
00:29:40,000 --> 00:29:41,000
如果有飞车的话

771
00:29:41,000 --> 00:29:42,000
这一切都不需要了

772
00:29:42,000 --> 00:29:44,000
我们可以单独的

773
00:29:45,000 --> 00:29:46,000
坐在属于自己

774
00:29:46,000 --> 00:29:48,000
一个一个风币空间里面

775
00:29:49,000 --> 00:29:51,000
自己想带什么都带什么

776
00:29:51,000 --> 00:29:52,000
想带多少长

777
00:29:52,000 --> 00:29:53,000
这样能

778
00:29:53,000 --> 00:29:53,000
如果

779
00:29:53,000 --> 00:29:54,000
如果

780
00:29:54,000 --> 00:29:55,000
如果

781
00:29:55,000 --> 00:29:56,000
Mr.Fusion的话

782
00:29:56,000 --> 00:29:57,000
能源不设定

783
00:29:58,000 --> 00:29:59,000
就这样的技术

784
00:29:59,000 --> 00:30:00,000
带过我们自由度

785
00:30:00,000 --> 00:30:03,000
其实是要有很高于飞机

786
00:30:03,000 --> 00:30:05,000
或者是现有的任何角度

787
00:30:06,000 --> 00:30:07,000
所以我觉得飞车扔就是一个

788
00:30:07,000 --> 00:30:09,000
非常重要值得梦想的事情

789
00:30:10,000 --> 00:30:11,000
不过有生之年

790
00:30:11,000 --> 00:30:12,000
应该是看不到了

791
00:30:12,000 --> 00:30:12,000
我觉得

792
00:30:14,000 --> 00:30:15,000
而且更不用提

793
00:30:15,000 --> 00:30:16,000
在 Back to the Future里面

794
00:30:17,000 --> 00:30:18,000
主角其实

795
00:30:19,000 --> 00:30:19,000
不是主角

796
00:30:19,000 --> 00:30:21,000
就是未来2015年

797
00:30:21,000 --> 00:30:22,000
其实根本就没有

798
00:30:22,000 --> 00:30:23,000
不需要飞车

799
00:30:23,000 --> 00:30:24,000
而是

800
00:30:24,000 --> 00:30:25,000
所谓的飞车改装服务

801
00:30:25,000 --> 00:30:27,000
就是人只需要装四个轮子

802
00:30:28,000 --> 00:30:29,000
就可以让自己车飞起来

803
00:30:30,000 --> 00:30:32,000
就原本不是像现在这样

804
00:30:33,000 --> 00:30:34,000
你需要把整个其乐

805
00:30:34,000 --> 00:30:35,000
构造都改

806
00:30:37,000 --> 00:30:37,000
OK

807
00:30:38,000 --> 00:30:39,000
在进入主题之前

808
00:30:39,000 --> 00:30:41,000
为了填充节目时间

809
00:30:41,000 --> 00:30:43,000
我们先来讨论一下

810
00:30:44,000 --> 00:30:45,000
计算机里边

811
00:30:45,000 --> 00:30:46,000
这是一个

812
00:30:47,000 --> 00:30:48,000
压相底的话题

813
00:30:48,000 --> 00:30:48,000
对

814
00:30:48,000 --> 00:30:50,000
就是为了专门应付今天这种

815
00:30:52,000 --> 00:30:54,000
为了保证节目不断挡

816
00:30:54,000 --> 00:30:54,000
但是

817
00:30:55,000 --> 00:30:56,000
有可能

818
00:30:56,000 --> 00:30:58,000
有人缺席的情况准备

819
00:30:58,000 --> 00:30:59,000
边嘛

820
00:30:59,000 --> 00:31:00,000
或者说 Encoding

821
00:31:01,000 --> 00:31:02,000
是一个非常常见的

822
00:31:02,000 --> 00:31:03,000
是非常复杂的感觉

823
00:31:03,000 --> 00:31:04,000
首先

824
00:31:04,000 --> 00:31:06,000
Encoding和Coding是不一样

825
00:31:06,000 --> 00:31:08,000
我们口语们应该会用

826
00:31:09,000 --> 00:31:10,000
写代码

827
00:31:10,000 --> 00:31:13,000
来指带写什么学习的件事

828
00:31:13,000 --> 00:31:13,000
但是有时候

829
00:31:13,000 --> 00:31:14,000
人们也会

830
00:31:15,000 --> 00:31:17,000
口误或者说无心的

831
00:31:17,000 --> 00:31:18,000
说边嘛

832
00:31:19,000 --> 00:31:19,000
来

833
00:31:19,000 --> 00:31:20,000
又边嘛

834
00:31:20,000 --> 00:31:22,000
这个次来指带写上去

835
00:31:22,000 --> 00:31:23,000
但是像边嘛

836
00:31:23,000 --> 00:31:24,000
还在比较

837
00:31:24,000 --> 00:31:27,000
当你比较严格的区分自己的措辞的时候

838
00:31:27,000 --> 00:31:29,000
边嘛指的是 Encoding

839
00:31:29,000 --> 00:31:31,000
Encoding是一个非常常见的

840
00:31:31,000 --> 00:31:32,000
现在是非常复杂的感觉

841
00:31:32,000 --> 00:31:34,000
常见是因为

842
00:31:34,000 --> 00:31:35,000
美食美客

843
00:31:35,000 --> 00:31:36,000
我们美食美食的那些接触

844
00:31:36,000 --> 00:31:38,000
尤其是如果要

845
00:31:38,000 --> 00:31:39,000
Coding的话

846
00:31:40,000 --> 00:31:42,000
几乎完全是绕不开 Encoding

847
00:31:43,000 --> 00:31:45,000
尤其是如果你不是一个专制的成续

848
00:31:45,000 --> 00:31:46,000
你可以不懂算法

849
00:31:46,000 --> 00:31:47,000
可以不能输给这个

850
00:31:48,000 --> 00:31:49,000
比如说你是一个搞外部的

851
00:31:50,000 --> 00:31:51,000
你可能

852
00:31:51,000 --> 00:31:52,000
sorry

853
00:31:52,000 --> 00:31:53,000
我就黑外

854
00:31:53,000 --> 00:31:54,000
你是一个搞外部前端的

855
00:31:55,000 --> 00:31:57,000
你可能完全不需要去接触算法

856
00:31:57,000 --> 00:31:58,000
或者输给诺文

857
00:31:58,000 --> 00:31:59,000
张语会或者

858
00:31:59,000 --> 00:32:01,000
但是 Encoding这个问题

859
00:32:01,000 --> 00:32:02,000
你是

860
00:32:02,000 --> 00:32:03,000
没有可能绕开

861
00:32:03,000 --> 00:32:05,000
如果你像

862
00:32:05,000 --> 00:32:06,000
回避算法

863
00:32:06,000 --> 00:32:07,000
数据够一样去回遍

864
00:32:07,000 --> 00:32:08,000
Coding有

865
00:32:08,000 --> 00:32:10,000
很有可能会摔的很散

866
00:32:12,000 --> 00:32:14,000
而即便是不写成续的人

867
00:32:14,000 --> 00:32:15,000
懂一些 Encoding

868
00:32:15,000 --> 00:32:16,000
也是一个

869
00:32:16,000 --> 00:32:18,000
也是一件非常有有有意义的事情

870
00:32:18,000 --> 00:32:19,000
比如说

871
00:32:20,000 --> 00:32:22,000
我记得很久以前

872
00:32:22,000 --> 00:32:22,000
大概是

873
00:32:23,000 --> 00:32:23,000
天的

874
00:32:23,000 --> 00:32:25,000
那个时候我还在读言之上

875
00:32:26,000 --> 00:32:28,000
那时候有一个网站

876
00:32:28,000 --> 00:32:29,000
现在有

877
00:32:29,000 --> 00:32:29,000
那个网站

878
00:32:29,000 --> 00:32:30,000
叫做 DailyWhat The Fuck

879
00:32:30,000 --> 00:32:32,000
Daily WTF

880
00:32:32,000 --> 00:32:35,000
当然它是官方名字叫做 DailyWorst and Failure

881
00:32:35,000 --> 00:32:37,000
但是我们都是叫做WTF

882
00:32:37,000 --> 00:32:38,000
然后在这个网站上面

883
00:32:38,000 --> 00:32:39,000
有这样子

884
00:32:40,000 --> 00:32:41,000
当时应该是

885
00:32:42,000 --> 00:32:43,000
一堆图片

886
00:32:43,000 --> 00:32:44,000
进来里面的一条

887
00:32:44,000 --> 00:32:47,000
我记得是有人拍了一个包裹单

888
00:32:47,000 --> 00:32:49,000
这个包裹单是贴在一个包裹上面

889
00:32:49,000 --> 00:32:51,000
然后这个包裹是寄给德国某个地址

890
00:32:51,000 --> 00:32:53,000
这个地址里面有一个

891
00:32:53,000 --> 00:32:57,000
有一个地方被继建人的画成那个方块

892
00:32:57,000 --> 00:33:00,000
就是比如说有一个德国的地址叫做

893
00:33:00,000 --> 00:33:02,000
GR方块

894
00:33:03,000 --> 00:33:03,000
然后

895
00:33:03,000 --> 00:33:04,000
blahblah

896
00:33:04,000 --> 00:33:05,000
STR

897
00:33:05,000 --> 00:33:06,000
然后多少好

898
00:33:07,000 --> 00:33:08,000
就是原因是什么呢

899
00:33:08,000 --> 00:33:09,000
就是这个人

900
00:33:09,000 --> 00:33:12,000
他显然在显示这个德国的地址的时候

901
00:33:12,000 --> 00:33:14,000
没能正确地把

902
00:33:15,000 --> 00:33:16,000
欧上加两点

903
00:33:17,000 --> 00:33:18,000
就是欧Malts

904
00:33:18,000 --> 00:33:20,000
这个自谋显示出来

905
00:33:20,000 --> 00:33:23,000
他的自单系统就把那个地方显示成立方块

906
00:33:23,000 --> 00:33:26,000
然后就非常忠诚的在那个地方画了一个方块

907
00:33:26,000 --> 00:33:28,000
如果这位既建人懂眼

908
00:33:28,000 --> 00:33:29,000
encoding的支持的话

909
00:33:29,000 --> 00:33:30,000
这样的这样的

910
00:33:31,000 --> 00:33:32,000
笑话就不会发生了

911
00:33:33,000 --> 00:33:35,000
另外比如说有时候

912
00:33:36,000 --> 00:33:39,000
各位在抗业的时候会发现网线上面有问好或者是

913
00:33:41,000 --> 00:33:42,000
问我们起码的一些不好

914
00:33:42,000 --> 00:33:43,000
我们会说这个时候有弄的

915
00:33:44,000 --> 00:33:46,000
那这时候应该怎么解决呢

916
00:33:46,000 --> 00:33:48,000
知道的人可能会去

917
00:33:49,000 --> 00:33:51,000
我忘了Cromes在哪儿

918
00:33:51,000 --> 00:33:53,000
Cromes在Tools里面

919
00:33:53,000 --> 00:33:53,000
对

920
00:33:53,000 --> 00:33:54,000
你要去立法学

921
00:33:54,000 --> 00:33:55,000
你要说

922
00:33:56,000 --> 00:33:59,000
这个网线是用什么样的encoding来

923
00:34:00,000 --> 00:34:02,000
encoding来

924
00:34:03,000 --> 00:34:06,000
这个网线是用什么标准的encoding

925
00:34:06,000 --> 00:34:07,000
你选对了那个标准

926
00:34:08,000 --> 00:34:11,000
然后你就可以看到正确证确误的信息

927
00:34:12,000 --> 00:34:15,000
又比如以前我们玩一些

928
00:34:16,000 --> 00:34:18,000
很有意思的日文游戏的时候

929
00:34:19,000 --> 00:34:22,000
为什么在减体中文操作许门的人跑载是乱吗

930
00:34:22,000 --> 00:34:23,000
对

931
00:34:23,000 --> 00:34:27,000
这一些原因其实都是因为encoding

932
00:34:28,000 --> 00:34:31,000
那为什么会有encoding的问题呢

933
00:34:31,000 --> 00:34:33,000
但是因为二进制

934
00:34:33,000 --> 00:34:37,000
就是所谓计算机是一个二进制的

935
00:34:38,000 --> 00:34:40,000
东西这句话多多少都听过

936
00:34:41,000 --> 00:34:42,000
但是

937
00:34:42,000 --> 00:34:43,000
就比如说

938
00:34:44,000 --> 00:34:46,000
我们都明白计算机在内部之等的零和一

939
00:34:47,000 --> 00:34:50,000
据材说就是心碳上面有一个地方是高电平的

940
00:34:50,000 --> 00:34:52,000
就是一低电平就是零

941
00:34:52,000 --> 00:34:55,000
然后死盘上面有一个地方

942
00:34:55,000 --> 00:34:57,000
比如说它的北思机朝上就是一

943
00:34:58,000 --> 00:34:59,000
北思机朝下就是零

944
00:34:59,000 --> 00:35:02,000
我不确定这个说话这么正确是带死是一

945
00:35:03,000 --> 00:35:05,000
不带死是零还是北思机是一南思机是零

946
00:35:07,000 --> 00:35:08,000
对欢迎大家指账

947
00:35:09,000 --> 00:35:10,000
然后比如说光盘上面

948
00:35:11,000 --> 00:35:13,000
有看就是一没看就是零出此

949
00:35:15,000 --> 00:35:15,000
然后

950
00:35:17,000 --> 00:35:19,000
反过来平时使用电脑的时候

951
00:35:19,000 --> 00:35:23,000
你跟我确明明没有直接在跟零和一打交倒不是吗

952
00:35:23,000 --> 00:35:25,000
我们能比如说我们能看到文字

953
00:35:25,000 --> 00:35:28,000
我们能听到声音比如说各位子现在听的podcast

954
00:35:30,000 --> 00:35:34,000
我们能看到图片已经一些高雅的小电影

955
00:35:36,000 --> 00:35:38,000
这些东西都不是零和一不是吗

956
00:35:38,000 --> 00:35:40,000
就是咱们观感来说

957
00:35:40,000 --> 00:35:43,000
这些东西都是切切实实的

958
00:35:43,000 --> 00:35:45,000
一些模拟性好不是

959
00:35:45,000 --> 00:35:48,000
那么据材来两个下零和一在哪儿

960
00:35:50,000 --> 00:35:53,000
这个就要扯到比较

961
00:35:54,000 --> 00:35:58,000
古早的历史才能让大家有一个比较

962
00:35:59,000 --> 00:36:00,000
清晰的认识

963
00:36:00,000 --> 00:36:04,000
那是包括程序本身其实也都是零和一

964
00:36:05,000 --> 00:36:07,000
写过程序的各位都知道了

965
00:36:07,000 --> 00:36:10,000
我们写程序的时候并不是直接写下零和一

966
00:36:10,000 --> 00:36:13,000
以下那种部分摘字我在支付上了一个答案

967
00:36:13,000 --> 00:36:15,000
所以如果各位读过的话

968
00:36:15,000 --> 00:36:16,000
基本上就可以跳过

969
00:36:16,000 --> 00:36:20,000
就可以直接拉到最后来听这个本期的主题

970
00:36:20,000 --> 00:36:21,000
就是

971
00:36:21,000 --> 00:36:23,000
程序本身在洋泡的朋友

972
00:36:23,000 --> 00:36:25,000
用泡这次是不太准确的

973
00:36:25,000 --> 00:36:27,000
首先要泡气泡人

974
00:36:27,000 --> 00:36:28,000
哎唷

975
00:36:28,000 --> 00:36:32,000
在计算机还东是一些泡人大部分的实际时代

976
00:36:32,000 --> 00:36:34,000
我们写程序是靠机器连

977
00:36:36,000 --> 00:36:38,000
虽然名字叫做机器运言

978
00:36:39,000 --> 00:36:41,000
但实际上用到的只有两个数字

979
00:36:41,000 --> 00:36:42,000
就是零和一

980
00:36:43,000 --> 00:36:46,000
当然现在是你不去考虑三进的这几个

981
00:36:46,000 --> 00:36:47,000
对

982
00:36:47,000 --> 00:36:50,000
三进的这几个算机实际上是一个非常有意思的话

983
00:36:50,000 --> 00:36:54,000
整体来说是平衡三进之级三进

984
00:36:54,000 --> 00:36:55,000
就是

985
00:36:55,000 --> 00:36:59,000
各位应该可以比较容易的想象

986
00:36:59,000 --> 00:37:01,000
什么是三进之纯粹的三进之

987
00:37:01,000 --> 00:37:04,000
就是只用零一二三个数字

988
00:37:04,000 --> 00:37:07,000
零是零一是一二十二

989
00:37:07,000 --> 00:37:08,000
三是一零

990
00:37:08,000 --> 00:37:09,000
对吧

991
00:37:10,000 --> 00:37:12,000
那么什么是平衡三进之纯

992
00:37:12,000 --> 00:37:14,000
平衡三进之是说

993
00:37:14,000 --> 00:37:20,000
用一零和负一这三个数字

994
00:37:20,000 --> 00:37:22,000
来代表一切其他

995
00:37:22,000 --> 00:37:23,000
来代表一切数字

996
00:37:23,000 --> 00:37:25,000
来组合成为一切数字

997
00:37:25,000 --> 00:37:26,000
也就是说在每一个

998
00:37:26,000 --> 00:37:28,000
在比如说在各位上是零

999
00:37:28,000 --> 00:37:29,000
就是零

1000
00:37:29,000 --> 00:37:30,000
然后在各位上是一

1001
00:37:30,000 --> 00:37:31,000
就是一

1002
00:37:31,000 --> 00:37:33,000
在各位上是负一

1003
00:37:33,000 --> 00:37:34,000
就是负一

1004
00:37:34,000 --> 00:37:36,000
那么二怎么表示呢

1005
00:37:36,000 --> 00:37:37,000
很有意思

1006
00:37:37,000 --> 00:37:38,000
因为一零的话

1007
00:37:38,000 --> 00:37:41,000
在三进在平衡三进之里面是

1008
00:37:41,000 --> 00:37:44,000
代表三

1009
00:37:44,000 --> 00:37:46,000
所以如果你要

1010
00:37:46,000 --> 00:37:48,000
想要措施一个二来的话

1011
00:37:48,000 --> 00:37:49,000
你必须先在

1012
00:37:49,000 --> 00:37:53,000
各位上面写上一个负一

1013
00:37:53,000 --> 00:37:55,000
也就是三进之

1014
00:37:55,000 --> 00:37:57,000
平衡三进之的零是零

1015
00:37:57,000 --> 00:37:58,000
一是一

1016
00:37:58,000 --> 00:38:00,000
二则是一负一

1017
00:38:00,000 --> 00:38:03,000
就是平衡三进之里面通常会把

1018
00:38:03,000 --> 00:38:05,000
负一这个数字写成T

1019
00:38:05,000 --> 00:38:07,000
也就是二会变成一

1020
00:38:07,000 --> 00:38:09,000
一 T

1021
00:38:09,000 --> 00:38:11,000
写成T是因为负贺

1022
00:38:11,000 --> 00:38:13,000
如果你把负贺放在一上面的话

1023
00:38:13,000 --> 00:38:15,000
看着下一个T

1024
00:38:15,000 --> 00:38:17,000
这是一个非常

1025
00:38:17,000 --> 00:38:18,000
特别

1026
00:38:18,000 --> 00:38:20,000
但是对于计算机来说

1027
00:38:20,000 --> 00:38:22,000
比较好实现的一种

1028
00:38:22,000 --> 00:38:24,000
一种禁制方法

1029
00:38:24,000 --> 00:38:25,000
就是

1030
00:38:25,000 --> 00:38:27,000
如果你维持一个重能电位的话

1031
00:38:27,000 --> 00:38:28,000
它是零

1032
00:38:28,000 --> 00:38:30,000
一个比较高的电位的话是一

1033
00:38:30,000 --> 00:38:32,000
然后一个比较低的电位的话

1034
00:38:32,000 --> 00:38:33,000
是负一

1035
00:38:33,000 --> 00:38:35,000
平衡三支有一些比较

1036
00:38:35,000 --> 00:38:38,000
特别的数学特性

1037
00:38:38,000 --> 00:38:40,000
比如说在平衡三进之里面

1038
00:38:40,000 --> 00:38:43,000
有时候一些数字的表示方法有两个

1039
00:38:43,000 --> 00:38:45,000
比如说二分之一

1040
00:38:45,000 --> 00:38:47,000
可以表示为零点一

1041
00:38:47,000 --> 00:38:48,000
一无限循环

1042
00:38:48,000 --> 00:38:50,000
或者是一点负一

1043
00:38:50,000 --> 00:38:51,000
一无限循环

1044
00:38:51,000 --> 00:38:54,000
然后有时候也会有一些比较

1045
00:38:54,000 --> 00:38:56,000
特别的特性

1046
00:38:56,000 --> 00:38:58,000
比如说在惩罚的时候

1047
00:38:58,000 --> 00:38:59,000
有时候你会

1048
00:38:59,000 --> 00:39:01,000
明明是两个多位数相成

1049
00:39:01,000 --> 00:39:03,000
最后你得数的结果

1050
00:39:03,000 --> 00:39:06,000
有个位数反而要比两个

1051
00:39:06,000 --> 00:39:07,000
两个比较比两

1052
00:39:07,000 --> 00:39:10,000
原来你用来成的两个数字的位数要短

1053
00:39:10,000 --> 00:39:13,000
对

1054
00:39:13,000 --> 00:39:15,000
但是三进之间

1055
00:39:15,000 --> 00:39:17,000
最终是没有能成绩

1056
00:39:17,000 --> 00:39:20,000
我相信如果三体人

1057
00:39:20,000 --> 00:39:24,000
或者是比较这二八眼的客外里面

1058
00:39:24,000 --> 00:39:27,000
有一部客外叫做羽达马相会

1059
00:39:27,000 --> 00:39:28,000
如果各位没有看过的话

1060
00:39:28,000 --> 00:39:29,000
非常欢迎去看一看

1061
00:39:29,000 --> 00:39:32,000
要比三体不到高的那一区了

1062
00:39:33,000 --> 00:39:36,000
也许三体人会使用三进之三体

1063
00:39:38,000 --> 00:39:40,000
但是在我们地球上面

1064
00:39:40,000 --> 00:39:44,000
目前战主流的绝对主流的

1065
00:39:44,000 --> 00:39:45,000
丫拉圣所的

1066
00:39:45,000 --> 00:39:47,000
是二进之子三进

1067
00:39:47,000 --> 00:39:51,000
所以早期的写成序

1068
00:39:51,000 --> 00:39:54,000
也就是使用特定的二进之子组合

1069
00:39:55,000 --> 00:39:57,000
来给机枪机下命

1070
00:39:57,000 --> 00:39:59,000
因为一些特定的数字组合

1071
00:39:59,000 --> 00:40:01,000
对于机枪机来说有推动的意义

1072
00:40:02,000 --> 00:40:05,000
会让机枪机做出一些特定的动作

1073
00:40:06,000 --> 00:40:10,000
其实我们是不应该教这些二进之子的数字

1074
00:40:10,000 --> 00:40:11,000
数字

1075
00:40:11,000 --> 00:40:13,000
因为他们其实并不代表人和数量

1076
00:40:14,000 --> 00:40:17,000
他们所代表的只是一种模式

1077
00:40:17,000 --> 00:40:19,000
这是一个什么概念的

1078
00:40:19,000 --> 00:40:21,000
各位可以想象一台钢琴

1079
00:40:21,000 --> 00:40:23,000
假如钢琴上所有的剑都被拉平了

1080
00:40:23,000 --> 00:40:27,000
就是它的黑剑不是剑在白剑之间

1081
00:40:28,000 --> 00:40:32,000
而是很简单的导致密发塑了细道

1082
00:40:32,000 --> 00:40:36,000
加上中间所有的半音这样拉在一个纸线上

1083
00:40:36,000 --> 00:40:39,000
我们可以这样描述怎样谈钢琴

1084
00:40:39,000 --> 00:40:42,000
每次把按下去的钢琴计都一

1085
00:40:42,000 --> 00:40:44,000
没有按下去

1086
00:40:44,000 --> 00:40:46,000
钢琴计就0

1087
00:40:46,000 --> 00:40:50,000
然后我们可以在每一个时刻得到一系列的1和0

1088
00:40:52,000 --> 00:40:55,000
这些1和0你可以把它换算成一个

1089
00:40:55,000 --> 00:40:56,000
实际的数字

1090
00:40:56,000 --> 00:40:58,000
但是本质上它只是一种

1091
00:40:58,000 --> 00:41:02,000
它只是代表按下钢琴的状态

1092
00:41:02,000 --> 00:41:05,000
我们在使用CPU的时候

1093
00:41:05,000 --> 00:41:09,000
情况跟钢琴是类似的

1094
00:41:09,000 --> 00:41:14,000
我们把01

1095
00:41:14,000 --> 00:41:17,000
这样的纸纳纸纳一小块芯片的时候

1096
00:41:17,000 --> 00:41:19,000
真实做的事情

1097
00:41:19,000 --> 00:41:22,000
其实是在芯片上面的不同影角上面

1098
00:41:22,000 --> 00:41:24,000
书入高或者低的电压

1099
00:41:24,000 --> 00:41:28,000
然后芯片里面会有很多

1100
00:41:28,000 --> 00:41:32,000
脱小脚的经济关组成小装置

1101
00:41:32,000 --> 00:41:34,000
被我们按下了

1102
00:41:34,000 --> 00:41:39,000
然后组合会接引发更多的

1103
00:41:39,000 --> 00:41:43,000
由芯片工程师预先设计的一系列的连锁反应

1104
00:41:44,000 --> 00:41:47,000
然后无数这样的模式数字

1105
00:41:47,000 --> 00:41:50,000
一个接一个的被输入芯片里面

1106
00:41:50,000 --> 00:41:52,000
最终你屏幕上就会出现一些

1107
00:41:52,000 --> 00:41:54,000
能够被人理解的图案

1108
00:41:54,000 --> 00:41:58,000
然后给计算机输入这种相当于命令的数字

1109
00:41:58,000 --> 00:42:01,000
称做指令的东西

1110
00:42:01,000 --> 00:42:03,000
让它来做一些事情

1111
00:42:03,000 --> 00:42:07,000
包括但不限于处理其他那些数字

1112
00:42:08,000 --> 00:42:10,000
其实就是编程的本质活动

1113
00:42:11,000 --> 00:42:15,000
比如说它古早的计算机叫做CostmacL

1114
00:42:15,000 --> 00:42:18,000
它的面板上有一排开关

1115
00:42:18,000 --> 00:42:21,000
应该是有880开关

1116
00:42:21,000 --> 00:42:23,000
这些开关可以脖上或者脖下

1117
00:42:23,000 --> 00:42:27,000
那给这台计算机编程的方法就是

1118
00:42:27,000 --> 00:42:29,000
把你想要输入的数字

1119
00:42:29,000 --> 00:42:32,000
或者把你想要按下的情见

1120
00:42:34,000 --> 00:42:37,000
在这排开关上面搬好

1121
00:42:38,000 --> 00:42:40,000
比如说搬上去就是上

1122
00:42:40,000 --> 00:42:41,000
搬上就是1

1123
00:42:41,000 --> 00:42:42,000
搬下就是0

1124
00:42:42,000 --> 00:42:43,000
搬上一排之后

1125
00:42:43,000 --> 00:42:44,000
你按一下右上角

1126
00:42:44,000 --> 00:42:45,000
它有一段角

1127
00:42:46,000 --> 00:42:48,000
你就可以输入下角指令

1128
00:42:48,000 --> 00:42:51,000
这就好像你在怎么说呢

1129
00:42:52,000 --> 00:42:54,000
有那种早期的打孔刚秦

1130
00:42:56,000 --> 00:42:59,000
你说一条上面不满了小养的直带

1131
00:43:00,000 --> 00:43:03,000
每一个养儿都代表这个地方

1132
00:43:03,000 --> 00:43:05,000
应该有个情见没按下去

1133
00:43:06,000 --> 00:43:08,000
那给这台计算机编程过程

1134
00:43:08,000 --> 00:43:10,000
就有点像你在手工去做一个直带

1135
00:43:11,000 --> 00:43:14,000
或者在你在手工做一个班侯

1136
00:43:14,000 --> 00:43:16,000
如果你看个班侯是什么

1137
00:43:16,000 --> 00:43:18,000
工作的话你一定明白我的什么意思

1138
00:43:18,000 --> 00:43:20,000
问题在于就是你在

1139
00:43:20,000 --> 00:43:23,000
这一台计算机上面输入一系的0和1

1140
00:43:23,000 --> 00:43:26,000
和在内台计算机上面输入一些0和1

1141
00:43:26,000 --> 00:43:28,000
你得到了反应可能是完全不一样的

1142
00:43:29,000 --> 00:43:33,000
这是从最开始就有一个差异的

1143
00:43:36,000 --> 00:43:40,000
因为各家计算机场上会自己去研发自己的芯片

1144
00:43:41,000 --> 00:43:44,000
同样那种数字对于不同形象的芯片

1145
00:43:44,000 --> 00:43:46,000
来说有可能是完全代表不同的指令

1146
00:43:47,000 --> 00:43:49,000
这一点直到今天都没有改变

1147
00:43:50,000 --> 00:43:53,000
那些通过金属引脚受到0和1数的CPU

1148
00:43:54,000 --> 00:43:56,000
所谓有这样一个指令籍的改变

1149
00:43:56,000 --> 00:43:59,000
本质上指令籍其实就是由芯片知道

1150
00:43:59,000 --> 00:44:02,000
场上给出的数字左的定义

1151
00:44:03,000 --> 00:44:06,000
如果你去查什么AMD或者是Intel的手册

1152
00:44:06,000 --> 00:44:14,000
你会发现他们的指令籍里面会给出一组数字

1153
00:44:14,000 --> 00:44:18,000
这处数字其实就是真正的CPU

1154
00:44:18,000 --> 00:44:22,000
所谓接触到的那些高低厌品组

1155
00:44:25,000 --> 00:44:27,000
有一芯片是解构不同

1156
00:44:27,000 --> 00:44:29,000
每种芯片的指令籍也就不同

1157
00:44:29,000 --> 00:44:32,000
比如长建于台式机的Intel芯片的指令籍

1158
00:44:32,000 --> 00:44:35,000
就与长建于手持设备的2芯片的指令籍不一样

1159
00:44:37,000 --> 00:44:42,000
机身议员在这个层面开始就已经产生了区别

1160
00:44:43,000 --> 00:44:49,000
不过用纯数字的机身机员编程的难度可笑而知

1161
00:44:49,000 --> 00:44:52,000
所以从数字到诸际符号的转移

1162
00:44:52,000 --> 00:44:54,000
很快就随时出现了

1163
00:44:54,000 --> 00:44:56,000
我们把这个东西叫做会编语

1164
00:44:56,000 --> 00:45:04,000
比如说一组数字0000可以让芯片把内部的一个存储单位

1165
00:45:05,000 --> 00:45:09,000
我们叫它存储机 技存器X加上一个直Y

1166
00:45:09,000 --> 00:45:14,000
那么不妨就把这组数字和诸际符AD的对应前

1167
00:45:14,000 --> 00:45:18,000
比如说上面的指令就可以写成ADX 到好Y这样

1168
00:45:18,000 --> 00:45:22,000
一条条籍的指令写成一创就是一个对于程序的描述

1169
00:45:22,000 --> 00:45:23,000
对吧

1170
00:45:24,000 --> 00:45:27,000
相对于纯数字来说这也是一个制着肺源

1171
00:45:27,000 --> 00:45:31,000
因为你终于不用去手动搬开关了

1172
00:45:31,000 --> 00:45:32,000
不是吗

1173
00:45:33,000 --> 00:45:36,000
然后这样的一串数这样的一串自符

1174
00:45:36,000 --> 00:45:46,000
就是这些ADXY或者是MoveXY这样的自符创

1175
00:45:46,000 --> 00:45:51,000
可以由专门的小程序来翻译成那些001的二字指单

1176
00:45:51,000 --> 00:45:54,000
也就是真正可以被输入数以去

1177
00:45:54,000 --> 00:46:00,000
去按下那些经济管的开关的电子信号

1178
00:46:00,000 --> 00:46:03,000
当然每一种创新的会员原则就是不一样

1179
00:46:03,000 --> 00:46:07,000
机器原或者会员原来优点是

1180
00:46:07,000 --> 00:46:11,000
每一条指令几乎都对于芯片农做的一件事情

1181
00:46:11,000 --> 00:46:15,000
比如说有一条指令可以把一个数字从内存里面转到基层器里面

1182
00:46:15,000 --> 00:46:20,000
另一条指令可以把这个被转入基层器的直加上一一

1183
00:46:20,000 --> 00:46:24,000
第三条指令又把它放回内存去

1184
00:46:24,000 --> 00:46:28,000
直接对一块芯片下冰淋效率非常高

1185
00:46:28,000 --> 00:46:30,000
但是对应的缺点就是

1186
00:46:30,000 --> 00:46:33,000
如果你只是想要把一个数字加上一的话

1187
00:46:33,000 --> 00:46:35,000
每次都要写三条指令

1188
00:46:35,000 --> 00:46:38,000
时间一常用是非常痛苦的件事

1189
00:46:38,000 --> 00:46:39,000
而且还有一个问题就是

1190
00:46:39,000 --> 00:46:43,000
因为不同的芯片所支持的指令机是不一样的

1191
00:46:43,000 --> 00:46:48,000
也就意味着你在这一块芯片上需要三条指令能完成的事情

1192
00:46:48,000 --> 00:46:52,000
在另外一块芯片上可能需要五条指令

1193
00:46:52,000 --> 00:46:57,000
所以如果我们能够将一部分固定出现的操作

1194
00:46:57,000 --> 00:47:00,000
像连续继一样的一次性失放

1195
00:47:00,000 --> 00:47:02,000
每次只要打一个指令

1196
00:47:02,000 --> 00:47:06,000
却能够在不同结构的芯片上都做同样的事情该有多好

1197
00:47:06,000 --> 00:47:11,000
换句话说如果能有一种更轻向于描述那些需要解决的问题

1198
00:47:11,000 --> 00:47:14,000
比如说给一个数字加上一

1199
00:47:14,000 --> 00:47:17,000
而不是手把手的告字就能及说

1200
00:47:17,000 --> 00:47:21,000
你读一个数字加上一个数字在写一个数字

1201
00:47:21,000 --> 00:47:28,000
有这样的比较高级的语言来封中那些比较不需要我们去操心的细节

1202
00:47:30,000 --> 00:47:32,000
该有多好

1203
00:47:32,000 --> 00:47:33,000
对吧

1204
00:47:33,000 --> 00:47:38,000
然后所谓的高级语言就是各位学员成了什么学校的那种语言

1205
00:47:38,000 --> 00:47:39,000
就是做这种语言

1206
00:47:39,000 --> 00:47:42,000
比如说最古老的高级语言有《Forthood》

1207
00:47:42,000 --> 00:47:45,000
还有《Aurocobo》

1208
00:47:45,000 --> 00:47:49,000
哪日于比较同样古老

1209
00:47:49,000 --> 00:47:51,000
但是来源久运的List

1210
00:47:51,000 --> 00:47:54,000
我觉得我们应该专门找一期来说List

1211
00:47:54,000 --> 00:47:59,000
所有这些语言他们都会最终被抓换二进人的形式

1212
00:48:01,000 --> 00:48:04,000
包括现在大家比较喜欢动态面

1213
00:48:04,000 --> 00:48:05,000
比如说

1214
00:48:05,000 --> 00:48:07,000
Pyzen

1215
00:48:07,000 --> 00:48:08,000
Ruby

1216
00:48:08,000 --> 00:48:09,000
Luo

1217
00:48:09,000 --> 00:48:15,000
他们规定起理都是会被转换二进之代

1218
00:48:15,000 --> 00:48:17,000
数目的类比有指数

1219
00:48:17,000 --> 00:48:21,000
他们和这个比较低一端的或者说比较远时的语言

1220
00:48:21,000 --> 00:48:27,000
比如说C或者是方向的区别就在于他们单一条指定里面

1221
00:48:27,000 --> 00:48:30,000
所包括

1222
00:48:30,000 --> 00:48:33,000
所含量的一些二进之职临要多很多

1223
00:48:34,000 --> 00:48:39,000
然后他们完成这件特点的手段

1224
00:48:39,000 --> 00:48:42,000
就是他们的底层

1225
00:48:42,000 --> 00:48:45,000
其实又是利用你的实体CPU

1226
00:48:45,000 --> 00:48:47,000
去模拟一个

1227
00:48:47,000 --> 00:48:52,000
指在逻辑意义上存在的虚拟的CPU

1228
00:48:54,000 --> 00:48:56,000
对 这就不展开讲了

1229
00:48:56,000 --> 00:49:01,000
有进去的同学可以自己去找一些这个方面的书看

1230
00:49:01,000 --> 00:49:03,000
我会推荐一本去扣的

1231
00:49:03,000 --> 00:49:05,000
我相信之前我已经扣的过了

1232
00:49:05,000 --> 00:49:07,000
我已经推荐过了

1233
00:49:07,000 --> 00:49:10,000
可能是在某一期的IT公路上面

1234
00:49:10,000 --> 00:49:12,000
我说这本书是其一书

1235
00:49:12,000 --> 00:49:14,000
推荐拿着去看看

1236
00:49:16,000 --> 00:49:19,000
以上大概讲了这个编程语

1237
00:49:19,000 --> 00:49:24,000
是怎么样利用零和一

1238
00:49:24,000 --> 00:49:27,000
或者说编程语是怎样抓好零和一

1239
00:49:27,000 --> 00:49:29,000
但是争秀没有解释

1240
00:49:29,000 --> 00:49:31,000
一开始提出这个问题

1241
00:49:31,000 --> 00:49:33,000
我们看到的图像

1242
00:49:33,000 --> 00:49:36,000
看到的文字是怎样抓好零和一

1243
00:49:38,000 --> 00:49:40,000
其实到了是类似的

1244
00:49:40,000 --> 00:49:44,000
我们约定在计算机里面

1245
00:49:44,000 --> 00:49:47,000
某一些特定的零和一的组合

1246
00:49:47,000 --> 00:49:49,000
代表一个特定的数字

1247
00:49:49,000 --> 00:49:51,000
或者代表一个特定的次幅

1248
00:49:51,000 --> 00:49:53,000
或者代表一个特定的图像

1249
00:49:53,000 --> 00:49:57,000
因为我们最常见的ASKYMA

1250
00:49:57,000 --> 00:50:00,000
就是每个国家的外伙论觉得代码

1251
00:50:00,000 --> 00:50:03,000
ASCYMA来看的话

1252
00:50:03,000 --> 00:50:06,000
它的方法是挑出一个7位的

1253
00:50:06,000 --> 00:50:09,000
主义是7位的二级的数字

1254
00:50:09,000 --> 00:50:11,000
把它第一位表成1

1255
00:50:11,000 --> 00:50:12,000
最后一位表成1

1256
00:50:12,000 --> 00:50:18,000
也就是10001

1257
00:50:18,000 --> 00:50:23,000
占数字让它来代表大血字母A

1258
00:50:24,000 --> 00:50:27,000
这个数字被转化成10进字就是65

1259
00:50:27,000 --> 00:50:29,000
然后65就代表A

1260
00:50:29,000 --> 00:50:32,000
所以如果你从10进字的角度

1261
00:50:32,000 --> 00:50:33,000
去看这个数字的话

1262
00:50:33,000 --> 00:50:34,000
你会已经很奇怪

1263
00:50:34,000 --> 00:50:36,000
为什么用65来代表A

1264
00:50:36,000 --> 00:50:41,000
当你把65转化成一个7位的二级的数字的时候

1265
00:50:41,000 --> 00:50:44,000
就会发现它其实是一个相对来说

1266
00:50:44,000 --> 00:50:46,000
比较规律的马点

1267
00:50:46,000 --> 00:50:48,000
比较异的马点

1268
00:50:48,000 --> 00:50:50,000
所以马点就是

1269
00:50:50,000 --> 00:50:57,000
一个自负相对于它的二级的数字所在的位置

1270
00:50:57,000 --> 00:50:59,000
叫到马点

1271
00:50:59,000 --> 00:51:02,000
那么在65这个马点上面是A

1272
00:51:02,000 --> 00:51:05,000
那么符合逻辑的方式就是

1273
00:51:05,000 --> 00:51:07,000
把B放在66上

1274
00:51:07,000 --> 00:51:09,000
然后一次里推的

1275
00:51:09,000 --> 00:51:12,000
大血字母把它直到是1对表点符号

1276
00:51:12,000 --> 00:51:14,000
然后是小血字母

1277
00:51:14,000 --> 00:51:17,000
那有一问题就是

1278
00:51:18,000 --> 00:51:24,000
7位的二级的数字可以表示127个自负

1279
00:51:24,000 --> 00:51:26,000
对于英语来说是够了

1280
00:51:26,000 --> 00:51:29,000
是可以表示大血小血

1281
00:51:29,000 --> 00:51:31,000
加上数字等等

1282
00:51:31,000 --> 00:51:33,000
那么为什么要选用7位这个数字

1283
00:51:33,000 --> 00:51:34,000
也是因为

1284
00:51:34,000 --> 00:51:36,000
如果你把第8位也用生的话

1285
00:51:36,000 --> 00:51:41,000
就可以让其他人去定义一些比较额外的东西

1286
00:51:41,000 --> 00:51:46,000
比如说西欧元会用到各种各样的Diachick

1287
00:51:46,000 --> 00:51:49,000
就是在自母上面加点

1288
00:51:49,000 --> 00:51:50,000
打瓶

1289
00:51:50,000 --> 00:51:53,000
当中注入死来非常愚蠢的事情

1290
00:51:53,000 --> 00:51:56,000
那么他们所使用的方法就是

1291
00:51:56,000 --> 00:52:00,000
把这个7位数字困扰到8位

1292
00:52:00,000 --> 00:52:02,000
或者说利用这个

1293
00:52:02,000 --> 00:52:04,000
askybama标准

1294
00:52:04,000 --> 00:52:07,000
刻一将第8位永远设为0的特点

1295
00:52:07,000 --> 00:52:11,000
规定了当第8位变成1的时候

1296
00:52:11,000 --> 00:52:13,000
多出来人的127个马点

1297
00:52:13,000 --> 00:52:15,000
应该具体代表什么

1298
00:52:15,000 --> 00:52:17,000
那么在这个标准上

1299
00:52:17,000 --> 00:52:19,000
CO多了很多自己的自博标准

1300
00:52:19,000 --> 00:52:21,000
美国人家都不一样

1301
00:52:21,000 --> 00:52:22,000
然后

1302
00:52:22,000 --> 00:52:25,000
我记得cgk也是

1303
00:52:25,000 --> 00:52:27,000
在日本也是

1304
00:52:27,000 --> 00:52:29,000
他们利用这多出来的127个马点

1305
00:52:29,000 --> 00:52:32,000
加入了平下名、片下名等等

1306
00:52:32,000 --> 00:52:35,000
所以有了日本的一套自己的规则

1307
00:52:35,000 --> 00:52:38,000
但是那个时候这个编码成功表示假的

1308
00:52:38,000 --> 00:52:41,000
但是我们都知道这个

1309
00:52:41,000 --> 00:52:45,000
汉字的数量反多256个显示不够用

1310
00:52:45,000 --> 00:52:48,000
那早期的一个几个方案就是

1311
00:52:48,000 --> 00:52:54,000
用两个二进之的8位数来代表一个汉字

1312
00:52:54,000 --> 00:52:57,000
所以你就有26x26

1313
00:52:57,000 --> 00:53:00,000
256成256成可能性

1314
00:53:00,000 --> 00:53:02,000
问题在于

1315
00:53:02,000 --> 00:53:09,000
有一正仇人因早期的中国、台湾、香港对于汉字的编码

1316
00:53:09,000 --> 00:53:11,000
规定是不一样的

1317
00:53:11,000 --> 00:53:13,000
日本还有一套自己的体系

1318
00:53:13,000 --> 00:53:15,000
我好在后来出现了一种

1319
00:53:15,000 --> 00:53:17,000
有尼克的东西

1320
00:53:17,000 --> 00:53:19,000
尼克的首先它规定了一个序列

1321
00:53:19,000 --> 00:53:21,000
在这个序列里面就是

1322
00:53:21,000 --> 00:53:23,000
一系列的马点

1323
00:53:23,000 --> 00:53:24,000
在每个马点上

1324
00:53:24,000 --> 00:53:27,000
规定了这个马点对于汉字

1325
00:53:27,000 --> 00:53:29,000
不管这个汉字是

1326
00:53:29,000 --> 00:53:31,000
采用什么样的字型

1327
00:53:31,000 --> 00:53:33,000
来自国家

1328
00:53:35,000 --> 00:53:38,000
全都会规律在这个尼克的序列里面

1329
00:53:39,000 --> 00:53:42,000
然后尼克的指定了一个编码的方法

1330
00:53:42,000 --> 00:53:46,000
也就是在某一个特定马点上的汉字

1331
00:53:46,000 --> 00:53:48,000
比如说

1332
00:53:48,000 --> 00:53:51,000
三零零二

1333
00:53:51,000 --> 00:53:53,000
马点上面的汉字

1334
00:53:53,000 --> 00:53:55,000
是加一零的假

1335
00:53:55,000 --> 00:53:57,000
它规定说

1336
00:53:57,000 --> 00:53:59,000
当时把这个假字

1337
00:53:59,000 --> 00:54:01,000
一二进至形式表示的时候

1338
00:54:01,000 --> 00:54:04,000
你有很多种选择

1339
00:54:04,000 --> 00:54:05,000
最常见的一种选择

1340
00:54:05,000 --> 00:54:06,000
我们现在叫做

1341
00:54:06,000 --> 00:54:08,000
UTF8

1342
00:54:08,000 --> 00:54:10,000
UTF8

1343
00:54:10,000 --> 00:54:12,000
在UTF8的表示之下

1344
00:54:12,000 --> 00:54:17,000
位于马点三零零零二的假

1345
00:54:17,000 --> 00:54:19,000
这个字会被转化为

1346
00:54:19,000 --> 00:54:20,000
有点差

1347
00:54:20,000 --> 00:54:24,000
是一个三成八位

1348
00:54:24,000 --> 00:54:26,000
二进至形式

1349
00:54:26,000 --> 00:54:29,000
是一零零一一一

1350
00:54:29,000 --> 00:54:34,000
一零零一零一零一零一零一零一零一零一零一零一零一零

1351
00:54:34,000 --> 00:54:37,000
我是这个世界上唯一一个版

1352
00:54:37,000 --> 00:54:39,000
假的汉字转化为

1353
00:54:39,000 --> 00:54:42,000
与允形式的RG是在马上吗

1354
00:54:42,000 --> 00:54:43,000
太好了

1355
00:54:43,000 --> 00:54:46,000
反正我本身上来讲

1356
00:54:46,000 --> 00:54:48,000
或者说对于计算器来讲

1357
00:54:48,000 --> 00:54:49,000
你告诉它

1358
00:54:49,000 --> 00:54:50,000
UTF8

1359
00:54:50,000 --> 00:54:51,000
零零零零一零零一零零一零一零一零一零一零一零一零一零零一零零零零一零零零零零一零零零零零一零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零零�

1360
00:55:20,000 --> 00:55:39,000
華氛為紅綠藍三個分量,然後每個分量用一個零到二二十六的數字表示零到二百五十五個數字表示,那麼就可以規定每個,你都可以得到每個點上的,學用了RGB的值。

1361
00:55:39,000 --> 00:56:04,000
但是如果你要記載一部電影裡面的每一整個點上的數字,其實大家會是非常高網的,因為我們目前的科技手段還沒有辦法保證說能夠完全不去考慮純處或者說傳輸過程之中的空間,至於時間的算好。

1362
00:56:05,000 --> 00:56:17,000
所以沒有想出另外一個方法,就是找出所有這些數字裡面的重複部分,用一個更短的數字去代替,這就是壓縮的本質。

1363
00:56:17,000 --> 00:56:24,000
所以我們可以把它理解為對於編碼的再編碼,這是另外一層一口的。

1364
00:56:25,000 --> 00:56:39,000
其實這期的提章裡面還數一些其他話,包括Ulicode本來都是打算在展開講的,還有很多歷史之類的。

1365
00:56:39,000 --> 00:56:57,000
但是目前的狀況是,我這邊錄音的時間剛剛突破了一個小時的Mark,當然最後撿出來可能沒有一個小時,不過此時的我已經覺得嗓子非常疼了,而且很不幸過沒性別又開始發了。

1366
00:56:57,000 --> 00:57:03,000
所以這期指�-我們還沒有進入正題是吧?

1367
00:57:03,000 --> 00:57:10,000
我們來改進進入正題號。正題就是,程旭園怎樣才能找到女朋友呢?

1368
00:57:10,000 --> 00:57:24,000
對於找到女朋友來說沒有任何意義,出騷擾。

1369
00:57:24,000 --> 00:57:31,000
只有拋開我是程旭園之一自我認同之後,找女朋友才會變得比較容易。

1370
00:57:31,000 --> 00:57:44,000
比如你要弄明白人份人之前溝通的編碼,這個編碼體系一方面要比算機系統,我們剛才所說的編碼簡單多,另一方面要比它寸塌多。

1371
00:57:44,000 --> 00:57:53,000
你要去學會理解不同性別之間的性別差異,不管是差異是怎麼來的,都不需要了解它。

1372
00:57:53,000 --> 00:58:04,000
你要去,你要去什麼是顯然之音,你要弄明白女孩子說話,有時候是話裡有話。

1373
00:58:04,000 --> 00:58:08,000
我女朋友在電頭。

1374
00:58:09,000 --> 00:58:20,000
您正在,您剛剛收聽完的是IPN Podcast網路旗下的IT技術節目內合服框,也歡迎你收聽IPN旗下的其他六檔 Podcast,

1375
00:58:20,000 --> 00:58:31,000
包括同樣是技術主題節目,IT公文,意料主題節目太一來了,美食主題節目未知道,藝術主題節目流行的東西。

1376
00:58:31,000 --> 00:58:40,000
無主題節目無辭員故事主題節目還Story,以及影響主題節目影響,感謝大家的收聽。

