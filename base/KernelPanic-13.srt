1
00:00:00,000 --> 00:00:14,000
北美山林时间 2006 年 1 月 2 日下午 3 点 04 分 05 秒您正在收听 IPN Podcast 网络旗家的 IT 技术理解谋内和谋康我们号称 HCOW 但也没有干货想听的人听不想听的人就别听了

2
00:00:14,000 --> 00:00:21,000
内和谋康的网指是 IPN.aslashCurrentalPanic 我们推荐大家使用 PotCust 可互端订阅我们的节目

3
00:00:21,000 --> 00:00:30,000
如果您不知道该用什么可无端请访问 IPN.aslashFAQ 在路运过程中您可以播通这个新电话参与我的节目

4
00:00:30,000 --> 00:00:31,000
电话号码系

5
00:00:35,000 --> 00:00:36,000
电话还是你

6
00:00:37,000 --> 00:00:37,000
算了吧

7
00:00:37,000 --> 00:00:41,000
018999999191919197253

8
00:00:42,000 --> 00:00:43,000
我觉得老师其实把那个

9
00:00:44,000 --> 00:00:48,000
其实把那个那个节目里面就是 IT 可让里面

10
00:00:48,000 --> 00:00:50,000
唱的音在这边唱起来

11
00:00:51,000 --> 00:00:51,000
好吧

12
00:00:53,000 --> 00:00:58,000
那你为如果你非常喜欢我们的节目或者说不管你是否喜欢我们的节目

13
00:00:58,000 --> 00:01:05,000
你都可以因为我们捐款捐款地址是 IPN.aslashCurrentalPanic SlashDonate DONAT

14
00:01:06,000 --> 00:01:10,000
捐款进行随意但是必须是可以被 8 种出的正种数

15
00:01:12,000 --> 00:01:17,000
OK 等一下那个地址你用的是 IPN 那个吗你又可以用 CurrentalPanic 的那个点 fm 那个地址

16
00:01:17,000 --> 00:01:21,000
OK 我们有了新的语名是 CurrentalPanic.fm

17
00:01:21,000 --> 00:01:24,000
所以捐款的也对是对

18
00:01:24,000 --> 00:01:25,000
这么便宜啊

19
00:01:26,000 --> 00:01:27,000
不过也在这个语名

20
00:01:27,000 --> 00:01:30,000
对因此我们更需要的捐款用了

21
00:01:30,000 --> 00:01:34,000
贵球大家捐款最第八块上不封地

22
00:01:34,000 --> 00:01:35,000
对

23
00:01:35,000 --> 00:01:41,000
捐款的只是 IPN.aslashDonate DONAT

24
00:01:42,000 --> 00:01:50,000
今天是我们的地多少金 13131310 x 0 c

25
00:01:52,000 --> 00:01:54,000
为了 0 x 0 d

26
00:01:56,000 --> 00:01:59,000
只是 A 对吧 11 是 B

27
00:02:00,000 --> 00:02:05,000
对所以是 0 x 0 d 13 这个数字不是非常的

28
00:02:06,000 --> 00:02:07,000
几例吗

29
00:02:07,000 --> 00:02:12,000
好像也我也不知道在欧洲某些国家 13 好像是个蛮其力的数字

30
00:02:13,000 --> 00:02:18,000
因为我们这边没有 13 层那么高的楼所以我不知道没有办法验证

31
00:02:21,000 --> 00:02:22,000
大农村

32
00:02:22,000 --> 00:02:23,000
大农村

33
00:02:24,000 --> 00:02:26,000
你知道加大的意思吗看了的

34
00:02:27,000 --> 00:02:30,000
看了的是是当地人的员吗

35
00:02:31,000 --> 00:02:33,000
就是就是就是爱斯不是就是鄧总的吗

36
00:02:33,000 --> 00:02:36,000
就是英语特人还是什么人的语言里面

37
00:02:36,000 --> 00:02:39,000
就是 Big Village 大农村的意思

38
00:02:39,000 --> 00:02:40,000
OK

39
00:02:40,000 --> 00:02:42,000
到底贴钱

40
00:02:45,000 --> 00:02:47,000
黑得好

41
00:02:47,000 --> 00:02:50,000
对我们上一期请到了莫瑶

42
00:02:50,000 --> 00:02:54,000
我们上一期请到莫瑶那期节目里面我们反复提到了

43
00:02:54,000 --> 00:02:55,000
我反复提到了

44
00:02:55,000 --> 00:02:56,000
好外面的妈的

45
00:02:56,000 --> 00:02:58,000
然后里面另外一个除了纽约系

46
00:02:58,000 --> 00:03:00,000
他们也喜欢黑的

47
00:03:00,000 --> 00:03:02,000
另一个地方就是加拿大的

48
00:03:03,000 --> 00:03:06,000
不是还有那个地方吗那个叫

49
00:03:06,000 --> 00:03:08,000
那 Penny 那来那边叫什么

50
00:03:08,000 --> 00:03:09,000
Penny

51
00:03:09,000 --> 00:03:13,000
那个 Big Bang Theory 里面 Penny 那边老家那边那个地方来的

52
00:03:13,000 --> 00:03:14,000
我不知道

53
00:03:14,000 --> 00:03:16,000
那个周教

54
00:03:17,000 --> 00:03:18,000
查一下

55
00:03:18,000 --> 00:03:20,000
Penny from

56
00:03:24,000 --> 00:03:27,000
这个时候应该不能 Cray 对不对

57
00:03:33,000 --> 00:03:39,000
那 Brasca

58
00:03:39,000 --> 00:03:41,000
OK

59
00:03:41,000 --> 00:03:42,000
那我来的妈妈好

60
00:03:42,000 --> 00:03:46,000
那个 Dawking 在里面就是新世总统

61
00:03:46,000 --> 00:03:49,000
每句新世总统里面有一集也叫 TheBrasca

62
00:03:49,000 --> 00:03:51,000
就是讲他们想要去 TheBrasca

63
00:03:51,000 --> 00:03:54,000
然后说那边人少然后很多枪

64
00:03:54,000 --> 00:03:56,000
然后 Fly over with the same

65
00:03:56,000 --> 00:03:58,000
所以江湿不会弹得过

66
00:03:58,000 --> 00:04:00,000
连在这种末日片里面都要被黑

67
00:04:00,000 --> 00:04:02,000
太差

68
00:04:02,000 --> 00:04:06,000
上期我们挺到了木姚大神

69
00:04:06,000 --> 00:04:11,000
跟我们然后我们瞬间多了很多粉丝盒

70
00:04:11,000 --> 00:04:13,000
没错

71
00:04:13,000 --> 00:04:15,000
这可能是对我们之前觉得

72
00:04:15,000 --> 00:04:19,000
可能见盘古皇类其实比较守慌勇一起

73
00:04:19,000 --> 00:04:24,000
但是现在看来好像这已经是一个后悟来者

74
00:04:24,000 --> 00:04:27,000
最后悟远后来者的高度了对吧

75
00:04:27,000 --> 00:04:29,000
对木姚这期真的是我看

76
00:04:29,000 --> 00:04:33,000
现在看来这次不管是在微博上

77
00:04:33,000 --> 00:04:36,000
还是在推特上还是在

78
00:04:36,000 --> 00:04:40,000
还是由着情听中的声心听我们写的来信里面

79
00:04:40,000 --> 00:04:44,000
这一期都是非常欢迎而且引起热意的一期

80
00:04:44,000 --> 00:04:46,000
而且你发现没

81
00:04:46,000 --> 00:04:49,000
这一期出现之后我们多了很多女粉丝

82
00:04:49,000 --> 00:04:51,000
对

83
00:04:51,000 --> 00:04:54,000
然后我哀个点进他们的微博去看

84
00:04:54,000 --> 00:04:56,000
都是没女进

85
00:04:57,000 --> 00:05:01,000
你觉得会哀个点进去看人家的微博上对吗

86
00:05:01,000 --> 00:05:04,000
我这个也是要关注粉丝的反亏吗

87
00:05:04,000 --> 00:05:05,000
对不对

88
00:05:05,000 --> 00:05:08,000
当然我一般看见头像是没人才点进去看一下

89
00:05:08,000 --> 00:05:12,000
可能拍你这么高冷的节目要看脸这样对吗

90
00:05:12,000 --> 00:05:15,000
我们都不露脸没有关系

91
00:05:15,000 --> 00:05:17,000
好吧

92
00:05:17,000 --> 00:05:21,000
所以看下还是什么男神的魅力很大

93
00:05:21,000 --> 00:05:24,000
而且有一个退

94
00:05:24,000 --> 00:05:27,000
有一条微博说这一期毕竟都是男神

95
00:05:27,000 --> 00:05:29,000
得点门

96
00:05:29,000 --> 00:05:33,000
咱们两就可怜的区区来区区在那个门里面了

97
00:05:35,000 --> 00:05:37,000
人家还是为了照顾一下我们的情绪而已

98
00:05:37,000 --> 00:05:39,000
不要太大真

99
00:05:39,000 --> 00:05:40,000
好了

100
00:05:40,000 --> 00:05:45,000
其实我们也在运辖或者说在

101
00:05:45,000 --> 00:05:49,000
外外将来还会有一期

102
00:05:49,000 --> 00:05:51,000
这请到重新请到幕僚

103
00:05:51,000 --> 00:05:55,000
不过目前没有一个太

104
00:05:55,000 --> 00:05:57,000
确切的时间表

105
00:05:57,000 --> 00:05:59,000
但我们会努力

106
00:05:59,000 --> 00:06:04,000
然后下一期可能会想要谈了一些和数据相关的

107
00:06:04,000 --> 00:06:07,000
和统计学相关的主题吧

108
00:06:07,000 --> 00:06:12,000
其实我们这边也可以请听众们字号费用

109
00:06:12,000 --> 00:06:15,000
如果你觉得你的数据这个话题

110
00:06:15,000 --> 00:06:18,000
或者说对统计学这个话题比较感兴趣

111
00:06:18,000 --> 00:06:22,000
并且可以从和程序相关的角度谈一谈的看法

112
00:06:22,000 --> 00:06:24,000
我们也非常欢迎你

113
00:06:24,000 --> 00:06:27,000
或者是报名参加我们的节目

114
00:06:27,000 --> 00:06:32,000
或者是为这个将可能出现的主题写一些你看法

115
00:06:32,000 --> 00:06:33,000
因为我们现在

116
00:06:33,000 --> 00:06:37,000
主要是会收到一些 feedback

117
00:06:37,000 --> 00:06:40,000
就是主要是在节目播出之后

118
00:06:40,000 --> 00:06:42,000
比如说我们今天是今天吧

119
00:06:42,000 --> 00:06:45,000
收到一方 200 多次读者来信

120
00:06:45,000 --> 00:06:49,000
是以外背软员工

121
00:06:49,000 --> 00:06:52,000
然后传门

122
00:06:52,000 --> 00:06:55,000
提供了上墨牙这一期的很多反馈

123
00:06:55,000 --> 00:06:57,000
但是这些反馈里面有很多

124
00:06:57,000 --> 00:06:59,000
我们都觉得其实相关有意义

125
00:06:59,000 --> 00:07:05,000
但是全闻念出来是在是会占用比较长的时间

126
00:07:05,000 --> 00:07:07,000
所以也许比较好的一点

127
00:07:07,000 --> 00:07:09,000
比较好的一种模式

128
00:07:09,000 --> 00:07:12,000
是我们告诉听众朋友们

129
00:07:12,000 --> 00:07:15,000
在那一期的时候将来会出现了某一些话题是什么

130
00:07:15,000 --> 00:07:18,000
然后各位听众可以就此写一些感想

131
00:07:18,000 --> 00:07:22,000
然后我们可以在节目里面

132
00:07:22,000 --> 00:07:25,000
或者是念出来或者是就期观点出出讨了

133
00:07:25,000 --> 00:07:26,000
我觉得挺好的

134
00:07:26,000 --> 00:07:27,000
嗯 挺好的

135
00:07:27,000 --> 00:07:29,000
然后真的很感动

136
00:07:29,000 --> 00:07:32,000
本节目开播以来

137
00:07:32,000 --> 00:07:34,000
这不算有事以来最长

138
00:07:34,000 --> 00:07:38,000
但是觉得也是叫长的那一些少数了

139
00:07:38,000 --> 00:07:40,000
对 是 关键是

140
00:07:40,000 --> 00:07:44,000
他说他是微软的员工

141
00:07:44,000 --> 00:07:46,000
然后我们还这么黑他们

142
00:07:46,000 --> 00:07:48,000
对 比如说黑人啊

143
00:07:48,000 --> 00:07:50,000
下期其实真的是真爱

144
00:07:50,000 --> 00:07:52,000
我们以后下期期

145
00:07:52,000 --> 00:07:53,000
特别照顾

146
00:07:53,000 --> 00:07:55,000
特别照顾女粉丝的心

147
00:07:55,000 --> 00:07:56,000
那个心情

148
00:07:56,000 --> 00:07:58,000
男粉丝就认识

149
00:07:58,000 --> 00:08:00,000
微软丝有名粉丝

150
00:08:00,000 --> 00:08:01,000
这个真的不太正常

151
00:08:01,000 --> 00:08:02,000
不过想想消息界是

152
00:08:02,000 --> 00:08:04,000
等等 消息也是微软粉丝吗

153
00:08:04,000 --> 00:08:06,000
虽然她微软也公那是消息也是微软粉丝吗

154
00:08:06,000 --> 00:08:07,000
嗯

155
00:08:08,000 --> 00:08:11,000
我们可以下期想办法请到她来

156
00:08:11,000 --> 00:08:13,000
你可以当面问的

157
00:08:13,000 --> 00:08:16,000
好 你将来一定要有一期请消息界

158
00:08:16,000 --> 00:08:17,000
嗯 嗯

159
00:08:17,000 --> 00:08:18,000
对

160
00:08:18,000 --> 00:08:20,000
总之我觉得上期

161
00:08:20,000 --> 00:08:22,000
幕僚这一期到现在还是觉得

162
00:08:22,000 --> 00:08:24,000
怎么说 纯是流行

163
00:08:24,000 --> 00:08:26,000
然后膝盖撕人

164
00:08:26,000 --> 00:08:27,000
那期

165
00:08:29,000 --> 00:08:30,000
那里面

166
00:08:30,000 --> 00:08:34,000
其实回应一下上一期的一些

167
00:08:34,000 --> 00:08:36,000
没有彻底展开的观点嘛

168
00:08:36,000 --> 00:08:38,000
就是其实我后来也想想

169
00:08:38,000 --> 00:08:39,000
上一期提到一些事情

170
00:08:39,000 --> 00:08:40,000
比如说我觉得

171
00:08:40,000 --> 00:08:43,000
比如说工具不好用这件事情

172
00:08:43,000 --> 00:08:44,000
嗯

173
00:08:44,000 --> 00:08:46,000
我不上你怎么觉得

174
00:08:46,000 --> 00:08:49,000
但我觉得现在的变成工程要比十年前

175
00:08:49,000 --> 00:08:50,000
好用太多了

176
00:08:50,000 --> 00:08:51,000
你不觉得吗

177
00:08:51,000 --> 00:08:53,000
我想要时间见我的干嘛

178
00:08:53,000 --> 00:08:55,000
别这样好

179
00:08:55,000 --> 00:08:56,000
别这样

180
00:08:56,000 --> 00:08:59,000
时间小刚上大学

181
00:08:59,000 --> 00:09:01,000
嗯 还不怎么啊

182
00:09:02,000 --> 00:09:05,000
然后学的这商科也不怎么写诊讯

183
00:09:05,000 --> 00:09:06,000
没感觉

184
00:09:06,000 --> 00:09:08,000
好吧

185
00:09:08,000 --> 00:09:10,000
但我是觉得

186
00:09:10,000 --> 00:09:12,000
现在的变成工具要比十年前

187
00:09:12,000 --> 00:09:14,000
就是 2005 年左右

188
00:09:14,000 --> 00:09:15,000
你觉得好多很多

189
00:09:15,000 --> 00:09:17,000
2005 年的时候

190
00:09:17,000 --> 00:09:19,000
嗯

191
00:09:19,000 --> 00:09:20,000
不说别了吧

192
00:09:20,000 --> 00:09:22,000
你写一个最简单的最基础的东西

193
00:09:22,000 --> 00:09:23,000
你写个网线出来

194
00:09:23,000 --> 00:09:25,000
那个时候哪有什么

195
00:09:25,000 --> 00:09:27,000
Lacky Concenture 的东西

196
00:09:27,000 --> 00:09:29,000
就那个时候

197
00:09:29,000 --> 00:09:31,000
就用那个就是什么

198
00:09:31,000 --> 00:09:32,000
嗯

199
00:09:32,000 --> 00:09:33,000
编辑一下

200
00:09:33,000 --> 00:09:34,000
然后刷新页面查看

201
00:09:34,000 --> 00:09:35,000
对啊

202
00:09:35,000 --> 00:09:36,000
而且那个时候用的是

203
00:09:36,000 --> 00:09:37,000
Internax 4 好吗

204
00:09:37,000 --> 00:09:38,000
Internax 4 还没有

205
00:09:38,000 --> 00:09:39,000
没有 Type 的

206
00:09:39,000 --> 00:09:40,000
就是你

207
00:09:40,000 --> 00:09:41,000
你用

208
00:09:41,000 --> 00:09:43,000
那个时候我上了刷的刷

209
00:09:43,000 --> 00:09:44,000
刷一个

210
00:09:44,000 --> 00:09:46,000
写一个 markup

211
00:09:46,000 --> 00:09:48,000
然后在微软

212
00:09:48,000 --> 00:09:50,000
在阿姨里面刷新

213
00:09:50,000 --> 00:09:51,000
嗯

214
00:09:51,000 --> 00:09:52,000
现在呢

215
00:09:52,000 --> 00:09:53,000
然后去猜

216
00:09:53,000 --> 00:09:55,000
然后自己头脑中模拟那个什么

217
00:09:55,000 --> 00:09:56,000
都我们解析器的

218
00:09:56,000 --> 00:09:58,000
一步不猜它为什么会这样对不对

219
00:09:58,000 --> 00:09:59,000
对

220
00:09:59,000 --> 00:10:00,000
而现在

221
00:10:00,000 --> 00:10:02,000
Lacky Concenture 是多么好用的一个东西

222
00:10:02,000 --> 00:10:03,000
你可以随时去改

223
00:10:03,000 --> 00:10:04,000
任何一个页面上的

224
00:10:04,000 --> 00:10:06,000
大部分元素吗

225
00:10:06,000 --> 00:10:07,000
嗯

226
00:10:07,000 --> 00:10:08,000
但是除非你再用一些

227
00:10:08,000 --> 00:10:09,000
比较二的东西

228
00:10:09,000 --> 00:10:11,000
比如说 GWT

229
00:10:11,000 --> 00:10:12,000
GWT

230
00:10:12,000 --> 00:10:13,000
这种东西

231
00:10:13,000 --> 00:10:14,000
那搞出来的东西

232
00:10:14,000 --> 00:10:15,000
是真的没办法在

233
00:10:15,000 --> 00:10:16,000
Lacky Concenture 的面

234
00:10:16,000 --> 00:10:17,000
低把的

235
00:10:17,000 --> 00:10:18,000
但是

236
00:10:18,000 --> 00:10:19,000
如果你突收写的话

237
00:10:19,000 --> 00:10:20,000
那这些工具

238
00:10:20,000 --> 00:10:22,000
真的要比十年前好太多

239
00:10:22,000 --> 00:10:23,000
对啊

240
00:10:23,000 --> 00:10:24,000
嗯

241
00:10:24,000 --> 00:10:25,000
而且很多语言都

242
00:10:25,000 --> 00:10:27,000
现在很多动态语言

243
00:10:27,000 --> 00:10:28,000
或者是有其实

244
00:10:28,000 --> 00:10:29,000
都那些人都提问了自己的

245
00:10:29,000 --> 00:10:30,000
所以

246
00:10:30,000 --> 00:10:31,000
R-E-P-L

247
00:10:31,000 --> 00:10:32,000
嗯

248
00:10:32,000 --> 00:10:33,000
Rapple

249
00:10:33,000 --> 00:10:34,000
对

250
00:10:34,000 --> 00:10:35,000
Rapp 这什么

251
00:10:35,000 --> 00:10:36,000
所以还是

252
00:10:36,000 --> 00:10:37,000
Ride

253
00:10:37,000 --> 00:10:38,000
Ride 以 Value

254
00:10:38,000 --> 00:10:40,000
Print Loop

255
00:10:40,000 --> 00:10:41,000
独入

256
00:10:41,000 --> 00:10:42,000
然后叫什么

257
00:10:42,000 --> 00:10:43,000
Evalue 找什么叫

258
00:10:43,000 --> 00:10:44,000
球职

259
00:10:44,000 --> 00:10:45,000
球职

260
00:10:45,000 --> 00:10:46,000
打印

261
00:10:46,000 --> 00:10:47,000
循环

262
00:10:47,000 --> 00:10:48,000
对

263
00:10:48,000 --> 00:10:49,000
当然

264
00:10:49,000 --> 00:10:50,000
Rapple 其实

265
00:10:50,000 --> 00:10:52,000
并不是一个非常

266
00:10:52,000 --> 00:10:54,000
新的东西

267
00:10:54,000 --> 00:10:55,000
比如说

268
00:10:55,000 --> 00:10:56,000
Basic 的时候

269
00:10:56,000 --> 00:10:57,000
他就有了

270
00:10:57,000 --> 00:10:58,000
对

271
00:10:58,000 --> 00:10:59,000
而且

272
00:10:59,000 --> 00:11:01,000
哪怕是命运是原

273
00:11:01,000 --> 00:11:03,000
Basic 上面

274
00:11:03,000 --> 00:11:04,000
其实

275
00:11:04,000 --> 00:11:05,000
也是一个 Rapp

276
00:11:05,000 --> 00:11:06,000
就

277
00:11:06,000 --> 00:11:07,000
在

278
00:11:07,000 --> 00:11:08,000
在 Rapple

279
00:11:08,000 --> 00:11:09,000
二上面的

280
00:11:09,000 --> 00:11:10,000
Basic 跟一个 Rapp

281
00:11:10,000 --> 00:11:11,000
是一个人

282
00:11:11,000 --> 00:11:12,000
一行一行解析

283
00:11:12,000 --> 00:11:13,000
对

284
00:11:13,000 --> 00:11:14,000
除了你打行号

285
00:11:14,000 --> 00:11:15,000
然后再

286
00:11:15,000 --> 00:11:16,000
再打软

287
00:11:16,000 --> 00:11:17,000
否则他就是一个

288
00:11:17,000 --> 00:11:19,000
默认就是一个 Rapple

289
00:11:19,000 --> 00:11:20,000
嗯

290
00:11:20,000 --> 00:11:21,000
但是现在的 Rapple

291
00:11:21,000 --> 00:11:22,000
要比

292
00:11:22,000 --> 00:11:23,000
又要比内部的 Rapple

293
00:11:23,000 --> 00:11:24,000
要好太多

294
00:11:24,000 --> 00:11:25,000
就

295
00:11:25,000 --> 00:11:26,000
不管是

296
00:11:26,000 --> 00:11:27,000
比如说

297
00:11:27,000 --> 00:11:28,000
我们有现在

298
00:11:28,000 --> 00:11:29,000
像 IPerson 这样的

299
00:11:29,000 --> 00:11:31,000
非常使用的

300
00:11:31,000 --> 00:11:33,000
日常笔记本工具

301
00:11:33,000 --> 00:11:35,000
Ruby

302
00:11:35,000 --> 00:11:37,000
Play

303
00:11:37,000 --> 00:11:38,000
是那个

304
00:11:38,000 --> 00:11:39,000
试念 Play

305
00:11:39,000 --> 00:11:40,000
PRI

306
00:11:40,000 --> 00:11:41,000
就是

307
00:11:41,000 --> 00:11:42,000
跳误问的那个死

308
00:11:42,000 --> 00:11:43,000
很年 price

309
00:11:43,000 --> 00:11:44,000
怎么用

310
00:11:44,000 --> 00:11:45,000
price

311
00:11:45,000 --> 00:11:46,000
没怎么用

312
00:11:46,000 --> 00:11:47,000
对

313
00:11:47,000 --> 00:11:48,000
这些

314
00:11:48,000 --> 00:11:49,000
这些东西都是支持

315
00:11:49,000 --> 00:11:50,000
比如说你在书的时候

316
00:11:50,000 --> 00:11:51,000
就可以预法高要

317
00:11:51,000 --> 00:11:52,000
然后

318
00:11:52,000 --> 00:11:53,000
是你可以

319
00:11:53,000 --> 00:11:55,000
把它当成一个

320
00:11:55,000 --> 00:11:57,000
一个包

321
00:11:57,000 --> 00:11:59,000
欠到你的

322
00:11:59,000 --> 00:12:00,000
欠到你要

323
00:12:00,000 --> 00:12:01,000
想要低半个程序

324
00:12:01,000 --> 00:12:02,000
里面然后你在那

325
00:12:02,000 --> 00:12:03,000
地方设置一个

326
00:12:03,000 --> 00:12:04,000
以前是要设置一个

327
00:12:04,000 --> 00:12:05,000
断点

328
00:12:05,000 --> 00:12:06,000
因为我说 PYDB 之类

329
00:12:06,000 --> 00:12:07,000
而现在你可以直接

330
00:12:07,000 --> 00:12:08,000
把 IPerson

331
00:12:08,000 --> 00:12:09,000
断在那里面

332
00:12:09,000 --> 00:12:10,000
然后

333
00:12:10,000 --> 00:12:11,000
直线到的时候

334
00:12:11,000 --> 00:12:12,000
跳到一个 IPerson

335
00:12:12,000 --> 00:12:13,000
直接环境

336
00:12:13,000 --> 00:12:14,000
你可以随便想干什么

337
00:12:14,000 --> 00:12:15,000
对

338
00:12:15,000 --> 00:12:17,000
然后有

339
00:12:17,000 --> 00:12:19,000
比如说我们之前

340
00:12:19,000 --> 00:12:21,000
在苹果的发布会上

341
00:12:21,000 --> 00:12:23,000
看到的 Swift 的那个

342
00:12:23,000 --> 00:12:24,000
Playground

343
00:12:24,000 --> 00:12:26,000
它其实也是一个

344
00:12:26,000 --> 00:12:27,000
更为先进的

345
00:12:27,000 --> 00:12:28,000
Raple

346
00:12:28,000 --> 00:12:30,000
就是它

347
00:12:30,000 --> 00:12:31,000
有所谓的

348
00:12:31,000 --> 00:12:32,000
Light programming 的能力

349
00:12:32,000 --> 00:12:33,000
你可以

350
00:12:33,000 --> 00:12:34,000
更加直观的看到

351
00:12:34,000 --> 00:12:35,000
你写出来的东西

352
00:12:35,000 --> 00:12:36,000
是什么

353
00:12:36,000 --> 00:12:37,000
或者说它跑起来

354
00:12:37,000 --> 00:12:38,000
它在局部跑起来

355
00:12:38,000 --> 00:12:40,000
是一个什么样的过程

356
00:12:40,000 --> 00:12:41,000
其实都是

357
00:12:41,000 --> 00:12:43,000
非常非常方便的一些特性

358
00:12:43,000 --> 00:12:45,000
它就是说

359
00:12:45,000 --> 00:12:46,000
对我们这么过去

360
00:12:46,000 --> 00:12:47,000
是简单

361
00:12:47,000 --> 00:12:48,000
就在普及中的工具

362
00:12:48,000 --> 00:12:49,000
还是在进步

363
00:12:49,000 --> 00:12:51,000
不过我觉得可能

364
00:12:51,000 --> 00:12:53,000
离真正像

365
00:12:53,000 --> 00:12:54,000
普通人或者说

366
00:12:54,000 --> 00:12:55,000
像幕僚老师

367
00:12:55,000 --> 00:12:56,000
不喜欢

368
00:12:56,000 --> 00:12:57,000
不太喜欢

369
00:12:57,000 --> 00:12:58,000
花时间去学

370
00:12:58,000 --> 00:12:59,000
这种工具的人

371
00:12:59,000 --> 00:13:01,000
它可能还是有点

372
00:13:01,000 --> 00:13:02,000
可能

373
00:13:02,000 --> 00:13:03,000
比如说至少我们在日常用的时候

374
00:13:03,000 --> 00:13:04,000
很多那种

375
00:13:04,000 --> 00:13:05,000
Raple

376
00:13:05,000 --> 00:13:07,000
它还是有很多限制的嘛

377
00:13:07,000 --> 00:13:08,000
比如你不能做很多事情

378
00:13:08,000 --> 00:13:09,000
要是说

379
00:13:09,000 --> 00:13:11,000
而且对这个环境的

380
00:13:11,000 --> 00:13:12,000
Inspaction

381
00:13:12,000 --> 00:13:13,000
就是检查的

382
00:13:13,000 --> 00:13:15,000
能力也是有一定的限制的

383
00:13:15,000 --> 00:13:17,000
你不像说在

384
00:13:17,000 --> 00:13:19,000
像在早一点

385
00:13:19,000 --> 00:13:20,000
像 Smartalk 那种训练机

386
00:13:20,000 --> 00:13:21,000
那叫什么

387
00:13:21,000 --> 00:13:22,000
Scrull 对不对

388
00:13:22,000 --> 00:13:24,000
对 这次在合池

389
00:13:24,000 --> 00:13:26,000
合池就是怎么说的

390
00:13:26,000 --> 00:13:27,000
有点像 ID 1

391
00:13:27,000 --> 00:13:28,000
但又不像

392
00:13:28,000 --> 00:13:29,000
都不像 ID 1

393
00:13:29,000 --> 00:13:30,000
它的那个好

394
00:13:30,000 --> 00:13:31,000
就是说整个

395
00:13:31,000 --> 00:13:33,000
那个整个环境

396
00:13:33,000 --> 00:13:34,000
那个操控系统

397
00:13:34,000 --> 00:13:35,000
那个世界

398
00:13:35,000 --> 00:13:36,000
都是可以被 Inspaction

399
00:13:36,000 --> 00:13:38,000
就是可以很方便的

400
00:13:38,000 --> 00:13:40,000
愚发很统一的规则去做它

401
00:13:40,000 --> 00:13:41,000
所以

402
00:13:41,000 --> 00:13:42,000
历史上是

403
00:13:42,000 --> 00:13:44,000
确实曾经出现过那种

404
00:13:44,000 --> 00:13:45,000
所谓

405
00:13:45,000 --> 00:13:47,000
哪怕是按现在的观点来看

406
00:13:47,000 --> 00:13:49,000
就是说今为天人的

407
00:13:49,000 --> 00:13:51,000
这种工具的设计

408
00:13:51,000 --> 00:13:53,000
但是只是因为一些

409
00:13:53,000 --> 00:13:55,000
商业的或者是这个

410
00:13:55,000 --> 00:13:57,000
其他的原因没有流行起来嘛

411
00:13:57,000 --> 00:13:58,000
所以现在我们

412
00:13:58,000 --> 00:14:01,000
还是在不断的去朝那方向眼镜

413
00:14:01,000 --> 00:14:03,000
它虽然还没有打到那个高度而已

414
00:14:03,000 --> 00:14:06,000
其实这也是一个很有意思的问题

415
00:14:06,000 --> 00:14:07,000
就是

416
00:14:07,000 --> 00:14:09,000
有时候我们很难说

417
00:14:09,000 --> 00:14:12,000
一个成功的事物

418
00:14:12,000 --> 00:14:14,000
就是因为它的技术比较优越

419
00:14:15,000 --> 00:14:17,000
而经常都不是这样子的嘛

420
00:14:17,000 --> 00:14:18,000
特别是在技术界面

421
00:14:18,000 --> 00:14:19,000
外面不是一个说法

422
00:14:19,000 --> 00:14:20,000
叫做 Worsys Better

423
00:14:20,000 --> 00:14:21,000
就好像

424
00:14:21,000 --> 00:14:22,000
经常很多人吐槽说

425
00:14:22,000 --> 00:14:24,000
你那个 Linux 这么流行

426
00:14:24,000 --> 00:14:26,000
但是你看看你的底层的设计

427
00:14:26,000 --> 00:14:28,000
很多地方是很不优雅的

428
00:14:28,000 --> 00:14:29,000
很不优液的嘛

429
00:14:29,000 --> 00:14:30,000
对吧

430
00:14:30,000 --> 00:14:31,000
很噁心的

431
00:14:31,000 --> 00:14:32,000
但是反观你说那些优雅的

432
00:14:32,000 --> 00:14:34,000
比较高干的东西

433
00:14:34,000 --> 00:14:35,000
确实往往流行不起来

434
00:14:35,000 --> 00:14:36,000
比如说 Plana

435
00:14:39,000 --> 00:14:41,000
甚至不说 Plana

436
00:14:41,000 --> 00:14:42,000
这么比较冷门的东西

437
00:14:42,000 --> 00:14:43,000
在编程里面

438
00:14:43,000 --> 00:14:44,000
编程里面也是

439
00:14:44,000 --> 00:14:45,000
基本上是

440
00:14:45,000 --> 00:14:46,000
比较流行的原因

441
00:14:46,000 --> 00:14:47,000
往往是比较糟糕的原因

442
00:14:50,000 --> 00:14:51,000
结果

443
00:14:51,000 --> 00:14:52,000
经过的厅远还可以

444
00:14:52,000 --> 00:14:53,000
算了

445
00:14:53,000 --> 00:14:55,000
我们就不举具体的事例

446
00:14:55,000 --> 00:14:56,000
对

447
00:14:59,000 --> 00:15:00,000
但是

448
00:15:00,000 --> 00:15:01,000
我也承认

449
00:15:01,000 --> 00:15:03,000
现在的编程工具

450
00:15:03,000 --> 00:15:05,000
虽然要比时间前好很多

451
00:15:05,000 --> 00:15:07,000
但它人就没有

452
00:15:07,000 --> 00:15:09,000
能够好到一个

453
00:15:09,000 --> 00:15:10,000
怎么说呢

454
00:15:10,000 --> 00:15:12,000
造成一个

455
00:15:12,000 --> 00:15:13,000
所以范式转化

456
00:15:13,000 --> 00:15:14,000
整地工

457
00:15:14,000 --> 00:15:15,000
就是没有说

458
00:15:15,000 --> 00:15:17,000
一个工具是如此的好用

459
00:15:17,000 --> 00:15:20,000
你就是于整个编程界的

460
00:15:20,000 --> 00:15:22,000
整个编程方法

461
00:15:22,000 --> 00:15:23,000
论多为点数了

462
00:15:23,000 --> 00:15:24,000
对

463
00:15:24,000 --> 00:15:27,000
它没有出现过这种东西

464
00:15:27,000 --> 00:15:28,000
出现

465
00:15:28,000 --> 00:15:29,000
曾经出现过

466
00:15:29,000 --> 00:15:30,000
但是

467
00:15:30,000 --> 00:15:31,000
没有得

468
00:15:31,000 --> 00:15:32,000
保留下来

469
00:15:32,000 --> 00:15:33,000
可以这么加

470
00:15:33,000 --> 00:15:34,000
对

471
00:15:34,000 --> 00:15:35,000
就好像有一个

472
00:15:35,000 --> 00:15:36,000
电影有不电影

473
00:15:36,000 --> 00:15:37,000
到什么建于行动

474
00:15:38,000 --> 00:15:39,000
里面

475
00:15:39,000 --> 00:15:40,000
主角

476
00:15:40,000 --> 00:15:41,000
在

477
00:15:41,000 --> 00:15:42,000
在编程的时候

478
00:15:42,000 --> 00:15:43,000
编程的方法

479
00:15:43,000 --> 00:15:44,000
就是把一大堆

480
00:15:44,000 --> 00:15:46,000
方块拖来拖去

481
00:15:46,000 --> 00:15:47,000
而且是

482
00:15:47,000 --> 00:15:49,000
而且是非常

483
00:15:49,000 --> 00:15:50,000
看起来

484
00:15:50,000 --> 00:15:51,000
这同样很复杂

485
00:15:51,000 --> 00:15:52,000
但是你会觉得

486
00:15:52,000 --> 00:15:53,000
你会

487
00:15:53,000 --> 00:15:54,000
至少观众们会认为

488
00:15:54,000 --> 00:15:55,000
这是在编程

489
00:15:55,000 --> 00:15:56,000
但在程序

490
00:15:56,000 --> 00:15:57,000
人看来这是在搞

491
00:15:57,000 --> 00:15:58,000
这是在解构方块

492
00:15:58,000 --> 00:15:59,000
还是这样

493
00:16:00,000 --> 00:16:01,000
如果

494
00:16:01,000 --> 00:16:02,000
真的有那样的工具出现的话

495
00:16:02,000 --> 00:16:03,000
那

496
00:16:03,000 --> 00:16:04,000
也许是一个

497
00:16:04,000 --> 00:16:06,000
非常编付送的

498
00:16:06,000 --> 00:16:07,000
创新之局

499
00:16:07,000 --> 00:16:08,000
当那个时候

500
00:16:08,000 --> 00:16:09,000
也许

501
00:16:09,000 --> 00:16:11,000
墨摇大什么

502
00:16:11,000 --> 00:16:12,000
就可以

503
00:16:12,000 --> 00:16:13,000
比较

504
00:16:13,000 --> 00:16:14,000
无障碍的

505
00:16:14,000 --> 00:16:16,000
利用

506
00:16:16,000 --> 00:16:17,000
编程工具解决

507
00:16:17,000 --> 00:16:18,000
解决

508
00:16:18,000 --> 00:16:19,000
更

509
00:16:19,000 --> 00:16:20,000
怎么说的

510
00:16:20,000 --> 00:16:21,000
抽象藏机

511
00:16:21,000 --> 00:16:22,000
更高的问题

512
00:16:22,000 --> 00:16:23,000
而不是去

513
00:16:23,000 --> 00:16:25,000
操心这些

514
00:16:25,000 --> 00:16:26,000
吸质墨节

515
00:16:26,000 --> 00:16:27,000
比如说分号

516
00:16:27,000 --> 00:16:28,000
或者是锁进者

517
00:16:28,000 --> 00:16:29,000
要是

518
00:16:29,000 --> 00:16:30,000
没错

519
00:16:30,000 --> 00:16:32,000
有时候

520
00:16:32,000 --> 00:16:33,000
我一直在想

521
00:16:33,000 --> 00:16:34,000
其实

522
00:16:34,000 --> 00:16:35,000
可能现在

523
00:16:35,000 --> 00:16:36,000
工具

524
00:16:36,000 --> 00:16:37,000
比较乱

525
00:16:37,000 --> 00:16:38,000
然后

526
00:16:38,000 --> 00:16:39,000
设计也不够

527
00:16:39,000 --> 00:16:40,000
优雅的局面

528
00:16:40,000 --> 00:16:41,000
我有时候在想

529
00:16:41,000 --> 00:16:42,000
是不是应该

530
00:16:42,000 --> 00:16:43,000
等我们这批人死掉之后

531
00:16:43,000 --> 00:16:44,000
要从另外一批

532
00:16:44,000 --> 00:16:45,000
从新来设计

533
00:16:45,000 --> 00:16:46,000
那么

534
00:16:46,000 --> 00:16:47,000
一些理念可能会好一点

535
00:16:47,000 --> 00:16:48,000
那么从滑滑抓起

536
00:16:48,000 --> 00:16:49,000
从新想来想

537
00:16:49,000 --> 00:16:50,000
怎么去教

538
00:16:50,000 --> 00:16:51,000
小朋友

539
00:16:51,000 --> 00:16:53,000
一个比较直观的

540
00:16:53,000 --> 00:16:54,000
或者说

541
00:16:54,000 --> 00:16:56,000
更加合理的

542
00:16:56,000 --> 00:16:57,000
抽象藏机

543
00:16:57,000 --> 00:16:58,000
然后这样的

544
00:16:58,000 --> 00:16:59,000
就出不去学会

545
00:16:59,000 --> 00:17:00,000
那种新的饭式

546
00:17:00,000 --> 00:17:02,000
可能会有意思

547
00:17:02,000 --> 00:17:03,000
也很多

548
00:17:03,000 --> 00:17:04,000
对

549
00:17:04,000 --> 00:17:05,000
有时候我其实

550
00:17:05,000 --> 00:17:06,000
刚刚也在想的用

551
00:17:06,000 --> 00:17:07,000
就是我想到

552
00:17:07,000 --> 00:17:10,000
虽然 60 年代的那一批

553
00:17:10,000 --> 00:17:11,000
集团机先区域已经

554
00:17:11,000 --> 00:17:12,000
留马上去了

555
00:17:12,000 --> 00:17:13,000
但是我们现在活着的

556
00:17:13,000 --> 00:17:15,000
集团机先区域

557
00:17:15,000 --> 00:17:16,000
比如说

558
00:17:16,000 --> 00:17:17,000
Ropeight

559
00:17:17,000 --> 00:17:18,000
还是在

560
00:17:18,000 --> 00:17:20,000
在 Google 做一线的

561
00:17:20,000 --> 00:17:22,000
这种原开发工作

562
00:17:22,000 --> 00:17:23,000
但是我在想说

563
00:17:23,000 --> 00:17:24,000
我们

564
00:17:24,000 --> 00:17:25,000
能够和这些人

565
00:17:25,000 --> 00:17:27,000
仍就在同一个时代

566
00:17:27,000 --> 00:17:28,000
身上幸福

567
00:17:28,000 --> 00:17:29,000
但是如果

568
00:17:29,000 --> 00:17:30,000
在远一点

569
00:17:30,000 --> 00:17:31,000
比如过 2030 年

570
00:17:31,000 --> 00:17:32,000
等这批人去了之后

571
00:17:33,000 --> 00:17:35,000
那时候的编程的

572
00:17:35,000 --> 00:17:36,000
地平线

573
00:17:36,000 --> 00:17:37,000
会是一个什么样的

574
00:17:37,000 --> 00:17:38,000
什么样的风景

575
00:17:38,000 --> 00:17:39,000
可能会跟现在

576
00:17:39,000 --> 00:17:40,000
完全不一样

577
00:17:40,000 --> 00:17:41,000
就像

578
00:17:41,000 --> 00:17:42,000
就好像那天我

579
00:17:42,000 --> 00:17:43,000
做了那个

580
00:17:43,000 --> 00:17:44,000
那人机的比喻

581
00:17:44,000 --> 00:17:45,000
也是我们现在用的

582
00:17:45,000 --> 00:17:46,000
就是那人机

583
00:17:46,000 --> 00:17:48,000
也是过 20 年

584
00:17:48,000 --> 00:17:49,000
电动机出现的时候

585
00:17:49,000 --> 00:17:51,000
编程真的和现在的

586
00:17:51,000 --> 00:17:53,000
和现在我们所熟悉的

587
00:17:53,000 --> 00:17:54,000
这些工具

588
00:17:55,000 --> 00:17:57,000
就完全不一样

589
00:17:57,000 --> 00:17:59,000
而且这是一种

590
00:17:59,000 --> 00:18:01,000
很难想象的状态

591
00:18:01,000 --> 00:18:02,000
我也不知道

592
00:18:02,000 --> 00:18:03,000
三进这些钢机

593
00:18:03,000 --> 00:18:05,000
平红三进这些钢机

594
00:18:05,000 --> 00:18:06,000
起码的

595
00:18:06,000 --> 00:18:07,000
起码的

596
00:18:07,000 --> 00:18:08,000
因为

597
00:18:08,000 --> 00:18:09,000
也不会想到

598
00:18:09,000 --> 00:18:10,000
会飞的人死

599
00:18:10,000 --> 00:18:11,000
怎么样的一种心态对不对

600
00:18:11,000 --> 00:18:12,000
对

601
00:18:12,000 --> 00:18:13,000
就好像

602
00:18:13,000 --> 00:18:14,000
那些

603
00:18:14,000 --> 00:18:16,000
19 世纪初期的科幻画

604
00:18:16,000 --> 00:18:18,000
想画在 20 世纪是什么样子

605
00:18:18,000 --> 00:18:19,000
那个时候

606
00:18:19,000 --> 00:18:20,000
想到 20 世纪

607
00:18:20,000 --> 00:18:21,000
说每个人都在天上飞

608
00:18:21,000 --> 00:18:23,000
然后天上飞的人会

609
00:18:23,000 --> 00:18:27,000
受到天上飞的交警的指挥

610
00:18:27,000 --> 00:18:29,000
可是他画出来

611
00:18:29,000 --> 00:18:30,000
会在天上飞的交警

612
00:18:30,000 --> 00:18:32,000
身上是一双翅膀

613
00:18:32,000 --> 00:18:34,000
而且还是在那边吹哨了

614
00:18:34,000 --> 00:18:35,000
就

615
00:18:35,000 --> 00:18:40,000
如果现在有什么空中单元的交通工具的话

616
00:18:40,000 --> 00:18:42,000
那我相信

617
00:18:42,000 --> 00:18:44,000
去控制这种交通工具的规则

618
00:18:44,000 --> 00:18:46,000
肯定不会是吹哨子吧

619
00:18:46,000 --> 00:18:49,000
已经死已经太慢了

620
00:18:49,000 --> 00:18:50,000
对

621
00:18:50,000 --> 00:18:52,000
所以我们现在所做出的任何想象

622
00:18:52,000 --> 00:18:53,000
可能在那个时候看来

623
00:18:53,000 --> 00:18:55,000
都是非常幼稚而可笑的

624
00:18:55,000 --> 00:18:57,000
但是争就拦不住

625
00:18:57,000 --> 00:18:58,000
我们去想

626
00:18:59,000 --> 00:19:00,000
好吧

627
00:19:00,000 --> 00:19:03,000
那个什么上期的方案

628
00:19:03,000 --> 00:19:04,000
对不对

629
00:19:04,000 --> 00:19:05,000
这里哈

630
00:19:05,000 --> 00:19:07,000
我们其实还有一个就是

631
00:19:07,000 --> 00:19:09,000
上期

632
00:19:09,000 --> 00:19:11,000
墨洋说到

633
00:19:11,000 --> 00:19:13,000
比如说那个有些员

634
00:19:13,000 --> 00:19:14,000
非常要求你

635
00:19:14,000 --> 00:19:15,000
什么

636
00:19:15,000 --> 00:19:17,000
注意分号

637
00:19:17,000 --> 00:19:18,000
说进了大小姐之类的

638
00:19:18,000 --> 00:19:19,000
他有没有说大小姐

639
00:19:19,000 --> 00:19:20,000
我不记得

640
00:19:20,000 --> 00:19:21,000
但是我前两天看了看那个

641
00:19:21,000 --> 00:19:22,000
念眉员

642
00:19:22,000 --> 00:19:23,000
就是新出的那个

643
00:19:23,000 --> 00:19:24,000
之前叫 Nimero 的

644
00:19:24,000 --> 00:19:25,000
然后现在念眉的员

645
00:19:25,000 --> 00:19:28,000
这个员有一很有趣的一点

646
00:19:28,000 --> 00:19:29,000
就是他

647
00:19:29,000 --> 00:19:31,000
去分一个标识服的时候

648
00:19:31,000 --> 00:19:32,000
只去分

649
00:19:32,000 --> 00:19:34,000
第一个字母是不是大小姐

650
00:19:34,000 --> 00:19:36,000
后面是无关的

651
00:19:36,000 --> 00:19:39,000
而且带下花线也是无关的

652
00:19:39,000 --> 00:19:41,000
这有什么好处呢

653
00:19:41,000 --> 00:19:43,000
就是他略矩的好处是

654
00:19:43,000 --> 00:19:45,000
比如说你的

655
00:19:45,000 --> 00:19:47,000
你写一个

656
00:19:48,000 --> 00:19:49,000
一个

657
00:19:49,000 --> 00:19:50,000
一个程序要用到

658
00:19:50,000 --> 00:19:51,000
别人的库

659
00:19:51,000 --> 00:19:52,000
别人的库有一个

660
00:19:52,000 --> 00:19:54,000
他自己的边量靠温人

661
00:19:54,000 --> 00:19:57,000
然后或者说含书靠温人

662
00:19:57,000 --> 00:19:59,000
当你要掉到那些

663
00:19:59,000 --> 00:20:00,000
凯文术的时候

664
00:20:00,000 --> 00:20:01,000
你可以

665
00:20:01,000 --> 00:20:03,000
利用自己的靠温人

666
00:20:03,000 --> 00:20:04,000
因为也是他

667
00:20:04,000 --> 00:20:06,000
是用下花线做分格服的

668
00:20:06,000 --> 00:20:08,000
而你喜欢开墨 case

669
00:20:08,000 --> 00:20:11,000
那你可以在你的程序里面写开墨 case

670
00:20:11,000 --> 00:20:13,000
从那个编辑国自己去猜

671
00:20:13,000 --> 00:20:16,000
真正的标识服是什么

672
00:20:16,000 --> 00:20:18,000
我觉得这是一个很有意思的

673
00:20:18,000 --> 00:20:19,000
很有意思的 feature

674
00:20:19,000 --> 00:20:21,000
就是他去

675
00:20:21,000 --> 00:20:22,000
对

676
00:20:22,000 --> 00:20:23,000
对

677
00:20:23,000 --> 00:20:25,000
但可能从另外一个讲讲

678
00:20:25,000 --> 00:20:27,000
他也是在试图解决

679
00:20:27,000 --> 00:20:28,000
这样的一种

680
00:20:28,000 --> 00:20:29,000
就是

681
00:20:29,000 --> 00:20:32,000
你可以再去忽略另外一个细节

682
00:20:32,000 --> 00:20:33,000
就是你不用去

683
00:20:33,000 --> 00:20:35,000
永远去刻意的注意

684
00:20:35,000 --> 00:20:36,000
大家要写一句

685
00:20:36,000 --> 00:20:37,000
然后你可以

686
00:20:37,000 --> 00:20:39,000
接用这个 feature 来保证自己的

687
00:20:39,000 --> 00:20:41,000
变成风格在内不是一句

688
00:20:43,000 --> 00:20:46,000
说一下最周发生的一些小新闻

689
00:20:46,000 --> 00:20:49,000
然后你也看到那个苹果发布会了

690
00:20:49,000 --> 00:20:50,000
好

691
00:20:50,000 --> 00:20:52,000
我们之前当门讨论过

692
00:20:52,000 --> 00:20:55,000
那个遥传中的新的 MacBook

693
00:20:55,000 --> 00:20:56,000
它其实不是 Air 了

694
00:20:56,000 --> 00:20:57,000
就是 MacBook

695
00:20:57,000 --> 00:20:59,000
然后你对其实

696
00:20:59,000 --> 00:21:00,000
其实很有趣的

697
00:21:00,000 --> 00:21:01,000
为什么 MacBookAir

698
00:21:01,000 --> 00:21:02,000
好像 MacBookAir

699
00:21:02,000 --> 00:21:04,000
然后新的这个更薄

700
00:21:04,000 --> 00:21:05,000
更 Air 的

701
00:21:05,000 --> 00:21:07,000
反正叫 MacBook

702
00:21:07,000 --> 00:21:09,000
我后来是这么理解的

703
00:21:09,000 --> 00:21:11,000
就是因为你现在

704
00:21:11,000 --> 00:21:13,000
现在 MacBookPro

705
00:21:13,000 --> 00:21:14,000
它也变得很薄了嘛

706
00:21:14,000 --> 00:21:16,000
所以以后就不分

707
00:21:16,000 --> 00:21:17,000
以后这个 Air 就感觉

708
00:21:17,000 --> 00:21:19,000
就是保试一个必然的属性

709
00:21:19,000 --> 00:21:21,000
然后只区分是否专业

710
00:21:21,000 --> 00:21:22,000
所以 MacBookAir

711
00:21:22,000 --> 00:21:23,000
那个产品先可能过几年

712
00:21:23,000 --> 00:21:25,000
过两三年就直接就不过

713
00:21:25,000 --> 00:21:26,000
消失了

714
00:21:26,000 --> 00:21:27,000
对

715
00:21:27,000 --> 00:21:29,000
就只有 MacBook 和 MacBookPro

716
00:21:29,000 --> 00:21:30,000
这样的两个分野

717
00:21:30,000 --> 00:21:31,000
我就这样就是

718
00:21:31,000 --> 00:21:32,000
跟清晰的一个结构

719
00:21:32,000 --> 00:21:34,000
然后如果你要比 MacBook

720
00:21:34,000 --> 00:21:35,000
更薄的东西

721
00:21:35,000 --> 00:21:36,000
就只能去买一盘了

722
00:21:36,000 --> 00:21:38,000
对

723
00:21:38,000 --> 00:21:39,000
对

724
00:21:39,000 --> 00:21:42,000
最重要的一件事情是

725
00:21:42,000 --> 00:21:45,000
escape 节没有动

726
00:21:45,000 --> 00:21:46,000
对

727
00:21:46,000 --> 00:21:48,000
我觉得他们也应该是

728
00:21:48,000 --> 00:21:50,000
内部顶住了巨大的压力

729
00:21:50,000 --> 00:21:52,000
我们先不确定之前

730
00:21:52,000 --> 00:21:53,000
那个图上面

731
00:21:53,000 --> 00:21:54,000
那个 escape 间

732
00:21:54,000 --> 00:21:56,000
就是真的有原型机长

733
00:21:56,000 --> 00:21:57,000
那样嘛

734
00:21:57,000 --> 00:21:58,000
就是挺值得怀疑的

735
00:21:58,000 --> 00:21:59,000
好吧

736
00:21:59,000 --> 00:22:00,000
说得了

737
00:22:00,000 --> 00:22:01,000
也有可能内部从外面

738
00:22:01,000 --> 00:22:03,000
我出现过一个 escape 在这么

739
00:22:03,000 --> 00:22:04,000
在这么大部分

740
00:22:04,000 --> 00:22:05,000
对 只听动人员的地方

741
00:22:05,000 --> 00:22:08,000
对 只看那个谁画图的时候

742
00:22:08,000 --> 00:22:10,000
不小心就画成那样了

743
00:22:10,000 --> 00:22:11,000
对那而已

744
00:22:11,000 --> 00:22:13,000
不过不管用和 escape 间的

745
00:22:13,000 --> 00:22:14,000
位置没变

746
00:22:14,000 --> 00:22:15,000
而且还变大了

747
00:22:15,000 --> 00:22:17,000
这个是挺好的一件事

748
00:22:17,000 --> 00:22:19,000
因为你用过那个 11 寸的 MacBook Air 吗

749
00:22:19,000 --> 00:22:21,000
因为我一次就是

750
00:22:21,000 --> 00:22:22,000
我有一次

751
00:22:22,000 --> 00:22:24,000
前公司的老板的那个

752
00:22:24,000 --> 00:22:26,000
办公店的出过一次拆

753
00:22:26,000 --> 00:22:27,000
但

754
00:22:27,000 --> 00:22:28,000
你们公司

755
00:22:28,000 --> 00:22:29,000
你这么拆

756
00:22:29,000 --> 00:22:30,000
还要店老板的店老出拆

757
00:22:30,000 --> 00:22:32,000
因为我自己的店舍好几三

758
00:22:32,000 --> 00:22:33,000
太重了

759
00:22:33,000 --> 00:22:37,000
我觉得我不是很喜欢 MacBook Air

760
00:22:37,000 --> 00:22:39,000
当然可能主要也是

761
00:22:39,000 --> 00:22:41,000
因为平衡实在是他还想了

762
00:22:41,000 --> 00:22:43,000
11 寸的确实是很小

763
00:22:43,000 --> 00:22:44,000
13 寸的他们还说小

764
00:22:44,000 --> 00:22:46,000
我觉得他边框也比较大了

765
00:22:46,000 --> 00:22:47,000
对

766
00:22:47,000 --> 00:22:49,000
所以你又觉得挺糟糕的

767
00:22:49,000 --> 00:22:51,000
特别是 11 寸那个

768
00:22:51,000 --> 00:22:53,000
escape 间特别小

769
00:22:53,000 --> 00:22:54,000
他那边打个半高

770
00:22:54,000 --> 00:22:56,000
对 3 分之一高的那个间吧

771
00:22:56,000 --> 00:22:58,000
然后还还那么小一坨

772
00:22:58,000 --> 00:23:00,000
现在这个 MacBook Air

773
00:23:00,000 --> 00:23:02,000
这个 escape 间变得很长

774
00:23:02,000 --> 00:23:04,000
我们作为一个

775
00:23:04,000 --> 00:23:06,000
Wim 的这件事是什么

776
00:23:06,000 --> 00:23:07,000
福音

777
00:23:07,000 --> 00:23:08,000
对

778
00:23:08,000 --> 00:23:10,000
所以你上买一台

779
00:23:10,000 --> 00:23:12,000
如果我听上那台

780
00:23:12,000 --> 00:23:13,000
上塞里公伦的

781
00:23:14,000 --> 00:23:15,000
你想没错了

782
00:23:15,000 --> 00:23:16,000
ok

783
00:23:16,000 --> 00:23:17,000
那个我老和那台

784
00:23:17,000 --> 00:23:18,000
还要换了

785
00:23:18,000 --> 00:23:19,000
给他买台顺便我挂一下

786
00:23:19,000 --> 00:23:20,000
到时候

787
00:23:20,000 --> 00:23:21,000
假如我要出门

788
00:23:21,000 --> 00:23:22,000
做些什么事情

789
00:23:22,000 --> 00:23:24,000
我就拿他那台去好了

790
00:23:24,000 --> 00:23:25,000
OK 写

791
00:23:25,000 --> 00:23:26,000
所以

792
00:23:26,000 --> 00:23:27,000
这就是顺便玩想的一次

793
00:23:27,000 --> 00:23:28,000
就是

794
00:23:28,000 --> 00:23:30,000
80%的时间是你再用

795
00:23:30,000 --> 00:23:31,000
没没没

796
00:23:31,000 --> 00:23:32,000
那个性能不太够

797
00:23:32,000 --> 00:23:33,000
他那个最高

798
00:23:33,000 --> 00:23:34,000
就那层是固定的

799
00:23:34,000 --> 00:23:36,000
8 G 不能再扩张了

800
00:23:36,000 --> 00:23:38,000
这就是比较一个淡腾一点点

801
00:23:38,000 --> 00:23:40,000
8 G 真的不是很够

802
00:23:40,000 --> 00:23:41,000
因为这件事情

803
00:23:41,000 --> 00:23:43,000
其实还是挺麻烦的

804
00:23:43,000 --> 00:23:44,000
现在你看一下

805
00:23:44,000 --> 00:23:46,000
我们跑到很多软件的

806
00:23:46,000 --> 00:23:47,000
特别是 64 位之后

807
00:23:47,000 --> 00:23:49,000
那些很多软件的体积是

808
00:23:49,000 --> 00:23:50,000
就越来越大了

809
00:23:50,000 --> 00:23:51,000
而且现在

810
00:23:51,000 --> 00:23:52,000
开个网页

811
00:23:52,000 --> 00:23:53,000
动不动就几把

812
00:23:53,000 --> 00:23:54,000
一个态度啊

813
00:23:54,000 --> 00:23:55,000
就几把照上一个机的

814
00:23:55,000 --> 00:23:56,000
所以还是

815
00:23:56,000 --> 00:23:57,000
8 G

816
00:23:57,000 --> 00:23:59,000
你要再开讯你机的话

817
00:23:59,000 --> 00:24:00,000
就肯定是不太

818
00:24:00,000 --> 00:24:01,000
有点着急见找

819
00:24:01,000 --> 00:24:02,000
把至少

820
00:24:02,000 --> 00:24:03,000
对

821
00:24:03,000 --> 00:24:05,000
你那台是

822
00:24:05,000 --> 00:24:06,000
你那台是 16 的吗

823
00:24:06,000 --> 00:24:08,000
我现在这台 16

824
00:24:08,000 --> 00:24:09,000
ok 我也是 16 的

825
00:24:09,000 --> 00:24:10,000
就是现在

826
00:24:10,000 --> 00:24:11,000
做一个开发者的话

827
00:24:11,000 --> 00:24:13,000
可能还是要 16 才

828
00:24:13,000 --> 00:24:14,000
才至少一个吧

829
00:24:14,000 --> 00:24:16,000
当然现在可能主要平静

830
00:24:16,000 --> 00:24:18,000
不是在那锁上

831
00:24:18,000 --> 00:24:19,000
有时候跑一些

832
00:24:19,000 --> 00:24:20,000
比较大的游戏

833
00:24:20,000 --> 00:24:22,000
会封善狂状

834
00:24:22,000 --> 00:24:23,000
他你没有红上来

835
00:24:23,000 --> 00:24:24,000
不是那锁的问题

836
00:24:24,000 --> 00:24:26,000
对我是说我现在这台

837
00:24:26,000 --> 00:24:27,000
ok

838
00:24:27,000 --> 00:24:29,000
如果买新的 Macbook

839
00:24:29,000 --> 00:24:30,000
应该叫很多游戏

840
00:24:30,000 --> 00:24:31,000
又不懂玩了

841
00:24:31,000 --> 00:24:32,000
不知道啊

842
00:24:32,000 --> 00:24:34,000
他那台性能现在还没出来

843
00:24:34,000 --> 00:24:35,000
昨天我看了一下

844
00:24:35,000 --> 00:24:37,000
那个有网上有侧屏

845
00:24:37,000 --> 00:24:39,000
联想出了一款

846
00:24:39,000 --> 00:24:41,000
就出了一款那个什么

847
00:24:41,000 --> 00:24:42,000
他那种联想不是一个

848
00:24:42,000 --> 00:24:43,000
本他可以

849
00:24:43,000 --> 00:24:45,000
变成平板用那种笔记笔吗

850
00:24:45,000 --> 00:24:46,000
就是什么本来的

851
00:24:46,000 --> 00:24:47,000
convert

852
00:24:47,000 --> 00:24:48,000
他不错

853
00:24:48,000 --> 00:24:49,000
对的

854
00:24:49,000 --> 00:24:50,000
他用的那个处理器

855
00:24:50,000 --> 00:24:51,000
我看了一下性能

856
00:24:51,000 --> 00:24:53,000
和那个参数应该是和

857
00:24:53,000 --> 00:24:54,000
那个 Macbook

858
00:24:54,000 --> 00:24:55,000
就是新款的跟 Macbook

859
00:24:55,000 --> 00:24:57,000
跟那个那款是差不多的

860
00:24:57,000 --> 00:24:58,000
我看了一下

861
00:24:58,000 --> 00:24:59,000
他的那个侧屏的性能

862
00:24:59,000 --> 00:25:01,000
其实是跟 14 款的

863
00:25:01,000 --> 00:25:03,000
Macbook Air 是差不多的

864
00:25:03,000 --> 00:25:04,000
那觉得还凑好了

865
00:25:04,000 --> 00:25:06,000
其实很多时候已经够用了

866
00:25:07,000 --> 00:25:09,000
就只要你不是经常要编一什么

867
00:25:09,000 --> 00:25:12,000
编一 Swift 的代码的话

868
00:25:12,000 --> 00:25:13,000
你只是做一些

869
00:25:13,000 --> 00:25:14,000
比如说像我用 Go 的话

870
00:25:14,000 --> 00:25:15,000
就编一样快嘛

871
00:25:15,000 --> 00:25:16,000
就无所谓

872
00:25:16,000 --> 00:25:17,000
然后你说做 Web 开发

873
00:25:17,000 --> 00:25:18,000
都是动态一点

874
00:25:18,000 --> 00:25:19,000
没有这个编一过程

875
00:25:19,000 --> 00:25:20,000
那也无所谓

876
00:25:20,000 --> 00:25:21,000
所以

877
00:25:21,000 --> 00:25:22,000
我觉得性能可能

878
00:25:22,000 --> 00:25:23,000
最大多数情况下也是

879
00:25:23,000 --> 00:25:25,000
也是策合够了

880
00:25:26,000 --> 00:25:27,000
好吧

881
00:25:27,000 --> 00:25:28,000
我觉得可能做 iOS 开发

882
00:25:28,000 --> 00:25:30,000
还是有点勾强

883
00:25:30,000 --> 00:25:32,000
屏幕太小了吗

884
00:25:32,000 --> 00:25:33,000
我觉得

885
00:25:34,000 --> 00:25:36,000
我觉得 iOS 开发

886
00:25:36,000 --> 00:25:37,000
跑那个模拟器的时候

887
00:25:37,000 --> 00:25:38,000
其实还是挺

888
00:25:38,000 --> 00:25:39,000
挺确实的

889
00:25:39,000 --> 00:25:40,000
对

890
00:25:40,000 --> 00:25:41,000
而且

891
00:25:41,000 --> 00:25:43,000
他们现在不是说这个事吗

892
00:25:43,000 --> 00:25:44,000
就是

893
00:25:44,000 --> 00:25:45,000
因为现在不是所有的

894
00:25:45,000 --> 00:25:46,000
iSB 就是所谓的

895
00:25:46,000 --> 00:25:47,000
Retina 分辨率

896
00:25:47,000 --> 00:25:48,000
就两倍了

897
00:25:48,000 --> 00:25:49,000
那么你要在屏幕上

898
00:25:49,000 --> 00:25:50,000
真实话

899
00:25:50,000 --> 00:25:51,000
要一笔记的话

900
00:25:51,000 --> 00:25:52,000
你的屏幕要比那个大嘛

901
00:25:52,000 --> 00:25:53,000
对

902
00:25:53,000 --> 00:25:54,000
现在

903
00:25:54,000 --> 00:25:55,000
如果你屏幕那么小的话

904
00:25:55,000 --> 00:25:56,000
就没有办法很好的话

905
00:25:56,000 --> 00:25:57,000
就很远它就装

906
00:25:57,000 --> 00:25:58,000
模拟器装不下嘛

907
00:25:58,000 --> 00:25:59,000
你只能说放

908
00:25:59,000 --> 00:26:00,000
就不是太好

909
00:26:00,000 --> 00:26:01,000
对

910
00:26:01,000 --> 00:26:02,000
但是我相信

911
00:26:02,000 --> 00:26:04,000
如果它真要跑的话

912
00:26:04,000 --> 00:26:05,000
它就不在模拟器上跑

913
00:26:05,000 --> 00:26:06,000
直接接受

914
00:26:06,000 --> 00:26:07,000
就算真机吗

915
00:26:07,000 --> 00:26:08,000
对

916
00:26:08,000 --> 00:26:09,000
也是

917
00:26:09,000 --> 00:26:11,000
那个传输好像还是比较

918
00:26:11,000 --> 00:26:12,000
你那个

919
00:26:12,000 --> 00:26:13,000
那个赛口还是比较长

920
00:26:13,000 --> 00:26:14,000
你要传到那个

921
00:26:14,000 --> 00:26:15,000
Retina

922
00:26:15,000 --> 00:26:16,000
就算去

923
00:26:16,000 --> 00:26:17,000
然后你要马上看结果

924
00:26:17,000 --> 00:26:18,000
我说你还是要等那么

925
00:26:18,000 --> 00:26:20,000
跟你两分钟办过几

926
00:26:22,000 --> 00:26:24,000
我的经历还好

927
00:26:24,000 --> 00:26:25,000
我这就可能要比

928
00:26:25,000 --> 00:26:27,000
在训练纪念

929
00:26:27,000 --> 00:26:29,000
快的慢的嘛

930
00:26:30,000 --> 00:26:31,000
最多 20 秒

931
00:26:32,000 --> 00:26:33,000
还是可以点说了

932
00:26:33,000 --> 00:26:34,000
那也是很大的

933
00:26:34,000 --> 00:26:35,000
这个

934
00:26:35,000 --> 00:26:36,000
寺康了呀

935
00:26:36,000 --> 00:26:37,000
不但

936
00:26:37,000 --> 00:26:39,000
到后期的时候

937
00:26:39,000 --> 00:26:41,000
我觉得大部分人可能会

938
00:26:42,000 --> 00:26:43,000
就

939
00:26:43,000 --> 00:26:44,000
怎么说呢

940
00:26:44,000 --> 00:26:45,000
就回到那个

941
00:26:45,000 --> 00:26:46,000
回到那个之前

942
00:26:46,000 --> 00:26:47,000
讨论的

943
00:26:47,000 --> 00:26:48,000
Retro 在没有 Retro 时代

944
00:26:48,000 --> 00:26:50,000
你可能要用头脑去模拟你的那个

945
00:26:50,000 --> 00:26:51,000
机器跑出来

946
00:26:51,000 --> 00:26:52,000
什么样子

947
00:26:52,000 --> 00:26:53,000
那里面响

948
00:26:53,000 --> 00:26:54,000
对对对对对

949
00:26:54,000 --> 00:26:55,000
对我觉得到后期

950
00:26:55,000 --> 00:26:57,000
IOS 开发其实很多人都是

951
00:26:57,000 --> 00:26:59,000
会

952
00:26:59,000 --> 00:27:08,000
花香对长的时间在洗,然后真正看效果的时间可能只会开发时间的,半分之时不到

953
00:27:08,000 --> 00:27:13,000
但除了你在,在除了你能逼把逼把的话,那就是要令手

954
00:27:16,000 --> 00:27:22,000
这个新加坡还有一个挺大的事,是它的一个建篮的轴不一样

955
00:27:22,000 --> 00:27:25,000
对,狐跌轴怎么概念,你有概念吗?

956
00:27:25,000 --> 00:27:28,000
我其实也没有很看懂

957
00:27:29,000 --> 00:27:34,000
这个狐跌轴它是这次才新发明,之前是没有这种机制的事吧

958
00:27:34,000 --> 00:27:35,000
就之前是只有剪刀角的对吧

959
00:27:36,000 --> 00:27:39,000
我就在其他人有用过这种说不狐跌轴

960
00:27:39,000 --> 00:27:41,000
从来没有,做到超代表剪

961
00:27:41,000 --> 00:27:47,000
因为我看它说的是应该是他们自己新发明的一种建篮轴的机制吧

962
00:27:47,000 --> 00:27:48,000
对

963
00:27:48,000 --> 00:27:52,000
然后他说这里有个好处,就说剪刀角一个问题,就是说如果你他会不平穩嘛

964
00:27:52,000 --> 00:27:58,000
就是你按一个箭的角落,他会斜着下去,有时候会触发不到

965
00:27:58,000 --> 00:27:59,000
对

966
00:27:59,000 --> 00:28:04,000
我虽然我自己从来没有意识它这种情况,但是我不知道这个是很常见的现象吗?

967
00:28:04,000 --> 00:28:16,000
就是你按在按苹果的,就马上就有一个箭的时候,明显感觉到你按的时候箭是随着你按的那一角,先开始上箭,然后其他部分一起才跟着上箭的

968
00:28:16,000 --> 00:28:20,000
但是不应该按那个箭的中心位置呢,为什么会按那个边角呢?

969
00:28:22,000 --> 00:28:29,000
我倒是觉得在大部分时候你是不可能玩,就这儿发现了按到它的中心位置

970
00:28:29,000 --> 00:28:34,000
对我,因为我自己从来没有留意到,我发出现过这种

971
00:28:34,000 --> 00:28:41,000
因为按到那个箭刀角的嘛,我一个边而不是中心那个触发不了的情况,所以我还挺好奇

972
00:28:41,000 --> 00:28:47,000
它在发布会说,触发不了是肯定不会的,但是箭刀角造成的问题就是

973
00:28:48,000 --> 00:28:55,000
你按那个箭的时候,你会觉得箭怎么说呢?我觉得这个区别是只有你在按上去的时候才会

974
00:28:56,000 --> 00:29:02,000
感觉到了,就是你按一个,比如说我在按那个 HKB 的时候

975
00:29:02,000 --> 00:29:06,000
按一个箭,这个箭本身是不会晃动的,对吧

976
00:29:07,000 --> 00:29:12,000
就是我按这个箭的最左上角,整个箭会随着我的手指一起下线

977
00:29:12,000 --> 00:29:19,000
但是你咋按一个箭刀角的时候,那个箭的左上角会先下线,然后其他部分才跟着下线

978
00:29:19,000 --> 00:29:23,000
没错,是这样的,就这个箭身会有一定的所谓

979
00:29:24,000 --> 00:29:29,000
谣化的吧,对 Wobbling Space,就是它会有一种不稳的感觉,但是

980
00:29:29,000 --> 00:29:38,000
但是我相信它会有找到所谓的解决问题,就是你不会再有这种感觉,这个箭就是时软,然后你按下去一点整个箭会跟着一起下线

981
00:29:39,000 --> 00:29:50,000
它们那个现场最测,就是用过那款新的 Macbook 的那个箭盘的时候,都说那个箭层非常非常短,因为它整个后度降低了,而且它这个蝴蝶走的

982
00:29:50,000 --> 00:29:54,000
本来的一个设计出动的时候就给它箭低这个后度嘛,对吧,高度

983
00:29:55,000 --> 00:30:03,000
那我不太清楚这种箭层几段的情况下对编程的时候的打字的手感会有什么变化

984
00:30:03,000 --> 00:30:07,000
你喜欢常见程还是短见程的按键,那个箭法

985
00:30:09,000 --> 00:30:19,000
其实我不怎么调,但我觉得对,但我觉得就是在用充合板的时候,你可以理解为这个箭层是零的吧

986
00:30:20,000 --> 00:30:25,000
那我不知道就是也许在配个触摩板的

987
00:30:26,000 --> 00:30:30,000
比起本电脑上按一个箭层比较短的箭

988
00:30:31,000 --> 00:30:37,000
感觉是不是至少要被 IPAD 好了,就是你至少是有一点点箭层的嘛

989
00:30:37,000 --> 00:30:41,000
你在 IPAD 上,因为按那个训练箭板的时候手感是非常差的对吧

990
00:30:42,000 --> 00:30:48,000
训练箭板说点差,你觉得主要是有几个原因嘛,不光是它没有箭层这个,因为主要是一个是没有触觉的风格

991
00:30:48,000 --> 00:30:50,000
你不知道你按了那个箭了吗,我不看的话

992
00:30:51,000 --> 00:30:57,000
就是因为零件层,所以才没有风格,不是吧,就是我的意思是,这两个其实一回事

993
00:30:57,000 --> 00:31:00,000
你说这个没有突出,然后你没有下线

994
00:31:01,000 --> 00:31:05,000
对,就算是零件层的话,它也是可以有风格的呀,就是

995
00:31:06,000 --> 00:31:10,000
我不知道你又没有用过微软那个 Surface,它不是有两款箭盘吗

996
00:31:11,000 --> 00:31:12,000
一款是所以的

997
00:31:12,000 --> 00:31:15,000
叫什么,它是什么

998
00:31:15,000 --> 00:31:16,000
就是那个交通箭盘吗

999
00:31:17,000 --> 00:31:18,000
它不是一个

1000
00:31:18,000 --> 00:31:22,000
它是那个就是有风格,但是无箭层的一个箭盘

1001
00:31:22,000 --> 00:31:25,000
你其实是按的是一个,对,是一个平板

1002
00:31:25,000 --> 00:31:30,000
然后它也有一款,它叫做 Type-cover 吧,我记得,然后我吃用过那个箭层也蛮短的

1003
00:31:30,000 --> 00:31:32,000
然后我两款都试了一下

1004
00:31:32,000 --> 00:31:38,000
都感觉不是很好,就箭层短,这件事情本身是不是太好的,就是一切情况相同的箭盘下

1005
00:31:39,000 --> 00:31:40,000
ok

1006
00:31:40,000 --> 00:31:42,000
因为你就没有办法

1007
00:31:42,000 --> 00:31:47,000
有时候你可能会觉得不确定,你要按下去没有,我觉得可能会这样,会是这个原因

1008
00:31:48,000 --> 00:31:55,000
但是他们说这个狐狸走的,有些其他的好处,比如说它不会左右乱晃啊,然后它这个

1009
00:31:55,000 --> 00:31:56,000
打字也很

1010
00:31:56,000 --> 00:31:58,000
就是

1011
00:31:58,000 --> 00:32:04,000
他们说那个手感挺特别的,我现在也没有打过,我不知道到底是个什么手感,我想去试一下

1012
00:32:05,000 --> 00:32:10,000
但我就在想,其实箭层短,反而不是应该能帮助你

1013
00:32:10,000 --> 00:32:13,000
常常时间打字,用力会比较小是不是

1014
00:32:15,000 --> 00:32:16,000
我觉得

1015
00:32:16,000 --> 00:32:17,000
可能

1016
00:32:17,000 --> 00:32:20,000
最终省下的力也只有一点点

1017
00:32:21,000 --> 00:32:21,000
一牛

1018
00:32:22,000 --> 00:32:24,000
打了一牛的力

1019
00:32:27,000 --> 00:32:35,000
我觉得这个箭层可能更多带来了还是触觉触感上,而真正的省力什么都是

1020
00:32:36,000 --> 00:32:37,000
非常服务的

1021
00:32:38,000 --> 00:32:48,000
反过来说你可能你会觉得也是喜欢常见常的人可以去用一个前两天的推特人看到的 USB Type Writer

1022
00:32:48,000 --> 00:32:49,000
打字

1023
00:32:49,000 --> 00:32:50,000
打字

1024
00:32:50,000 --> 00:32:52,000
USB 接口,然后接电脑像打的吧

1025
00:32:52,000 --> 00:32:55,000
我觉得这个时间太怀疚了,你可以这个

1026
00:32:56,000 --> 00:33:03,000
你给选择直接从前往上买一台已经转化好的 Type Writer,就是它是货争价值的打字机

1027
00:33:03,000 --> 00:33:05,000
然后你可以把这个打字机接到

1028
00:33:05,000 --> 00:33:07,000
对,机械是打字机接到你的

1029
00:33:08,000 --> 00:33:10,000
USB 口上,然后把打字机都键把它用

1030
00:33:11,000 --> 00:33:17,000
它那个原理是什么,它是探测机械建的位移,然后转成 USB 电信号

1031
00:33:17,000 --> 00:33:20,000
对,其实就是如果你去看它的那个

1032
00:33:20,000 --> 00:33:28,000
Konvales kit 的话,那个就是如果你直接从在网上买的就比较贵可能有 599 还是 699 美元一台

1033
00:33:28,000 --> 00:33:33,000
但你可以买另外一个 Kits,Kit 就 99 美元,然后里面有一大堆处版

1034
00:33:33,000 --> 00:33:36,000
就是一个比较长条像书这样的东西

1035
00:33:36,000 --> 00:33:41,000
和一个很小的,应该不是啥的原因,他们自己做了一个 IC 版

1036
00:33:41,000 --> 00:33:43,000
你把那个长条的书这样的

1037
00:33:44,000 --> 00:33:46,000
背板,贴到

1038
00:33:46,000 --> 00:33:48,000
机械打字机的后面

1039
00:33:48,000 --> 00:33:52,000
然后再把那个 IC 电路

1040
00:33:52,000 --> 00:33:56,000
塞在打字机的内部,然后你就可以

1041
00:33:56,000 --> 00:33:59,000
把它转化成一个 USB 打字机了

1042
00:33:59,000 --> 00:34:05,000
其实它就是去探测的,因为你在按下一个长字机上的门建的时候,后面会有一个东西抬下来

1043
00:34:06,000 --> 00:34:09,000
然后它就去感应哪个建台起来

1044
00:34:10,000 --> 00:34:12,000
然后把它转化为建板性

1045
00:34:12,000 --> 00:34:14,000
对,那个建案件

1046
00:34:14,000 --> 00:34:15,000
这也是

1047
00:34:16,000 --> 00:34:21,000
其实那个很累的嘛,打机械打字机的那个案件是很非厉的

1048
00:34:22,000 --> 00:34:27,000
对呀,我想说用打字机打英语作业的时候,每天晚上打完那手指会疼那真的

1049
00:34:27,000 --> 00:34:34,000
那个时候你小时候也小了,打的是那时候直发不好,只能用十指和中指

1050
00:34:34,000 --> 00:34:41,000
然后有些字母如果你用,那时候我去用小指去按的好像是虚的,比如说 P 呀这类的

1051
00:34:42,000 --> 00:34:43,000
PQ 20 虚的

1052
00:34:46,000 --> 00:34:48,000
这也是一种恶曲的

1053
00:34:48,000 --> 00:34:50,000
对,就这样的,蒸气彭克

1054
00:34:51,000 --> 00:34:54,000
机械彭克,机械彭克打字机,机械彭克这份

1055
00:34:55,000 --> 00:35:02,000
说到这个笔记,程序员用的笔记本啊,前两天 Google,应该不是前两,就是

1056
00:35:02,000 --> 00:35:09,000
苹果发布那个新款 Macbook 之后,第二天 Google 也发布了这个新款的 Crombo Pixel,就是它那块

1057
00:35:09,000 --> 00:35:10,000
虽然

1058
00:35:11,000 --> 00:35:17,000
官方配就是只能用上网的一个笔记本,但是它的整个配置还是不错的,有一个

1059
00:35:17,000 --> 00:35:21,000
高分瓶,也是 13 寸,一个方头方脑的一个设计

1060
00:35:21,000 --> 00:35:22,000
然后

1061
00:35:23,000 --> 00:35:27,000
我知道很多人就 Linux 用户,大家会很选这个,然后它装那个

1062
00:35:28,000 --> 00:35:31,000
这么一个中文远,你这个叫做 Crompton,就可以在上面

1063
00:35:32,000 --> 00:35:34,000
在一个类似于

1064
00:35:34,000 --> 00:35:40,000
这个 Container 的环境里面跑一个其他内核的,不叫其他这个 Linux 的发信板

1065
00:35:41,000 --> 00:35:42,000
比如说 Crompton 之类的

1066
00:35:42,000 --> 00:35:46,000
然后这样的话就有很多好处,因为 Crombo 它本身是一个类似于

1067
00:35:46,000 --> 00:35:52,000
ROS 设计嘛,就整个它是杀核机制的,然后你没有办法去更改系动的东西,就安全性是有

1068
00:35:52,000 --> 00:35:53,000
有保障的

1069
00:35:54,000 --> 00:35:56,000
然后你在那个 Container 里面跑一个

1070
00:35:56,000 --> 00:36:00,000
Linux 的发信板,你就弄坏了,在三个存钱来一个就好了

1071
00:36:00,000 --> 00:36:02,000
就很难用来选择,这种方式来做

1072
00:36:03,000 --> 00:36:03,000
是

1073
00:36:04,000 --> 00:36:11,000
它那个板的唯一的问题就是,存指控今天太小了,它最大只有 64 G 的 SSD

1074
00:36:12,000 --> 00:36:16,000
我觉得我也不知道,你见过身边的人在用 Crombo

1075
00:36:16,000 --> 00:36:22,000
为什么我总有一种感觉就是它是一个怎么好,三号叫好不叫做什么

1076
00:36:22,000 --> 00:36:30,000
我没有见过有人自己花钱买它,然后我又个朋友,它是前年去年前年去那个 Google I-O 的时候

1077
00:36:30,000 --> 00:36:37,000
那年我去 Google 去餐厚,或者是每个人送了一台嘛,那个第一代的 Crombo Pixel,他就拿了一台回来

1078
00:36:37,000 --> 00:36:41,000
我玩了一下,整个做工和工艺还是无错的,我觉得

1079
00:36:41,000 --> 00:36:44,000
但是就是能做的事情感觉挺有限

1080
00:36:45,000 --> 00:36:51,000
因为它那个空间确实比较小,它那个是带 LTE 还是 4 G 网络的

1081
00:36:51,000 --> 00:36:52,000
它可以插进 Sync

1082
00:36:53,000 --> 00:36:54,000
这点比较有意思

1083
00:36:56,000 --> 00:36:59,000
其实我之前在想说

1084
00:36:59,000 --> 00:37:04,000
MacBook V 什么不能直接内置 LTE

1085
00:37:04,000 --> 00:37:04,000
Model

1086
00:37:06,000 --> 00:37:13,000
因为它那个清脖的程度其实已经非常适合,就是带着到处跑,但是带着到方向

1087
00:37:13,000 --> 00:37:15,000
问题就是在没有网络的地方,比如说

1088
00:37:15,000 --> 00:37:21,000
它那个选上广告里面有一个女孩,拿着它盘腿做在一个

1089
00:37:21,000 --> 00:37:25,000
公圆旁边的长椅上,然后就想说,它是往冲的

1090
00:37:26,000 --> 00:37:32,000
那个苹果的解决方案是说你只要有手机在旁边可以通过无线的连接一个

1091
00:37:32,000 --> 00:37:35,000
对对,它可以做一个这个

1092
00:37:35,000 --> 00:37:43,000
好吧,还可以吧,因为其实你如果每一个社会都做一个 Sync 卡的话,每个月的交给印象的月费还是蛮多的

1093
00:37:43,000 --> 00:37:47,000
如果是老外的这种常来的使用的话,这样也没什么不好啊

1094
00:37:48,000 --> 00:37:57,000
之前用这个 Tethering 还比较麻烦,你要先配在手机上打开,然后你在电脑上连接一下,现在自从那个有三分厅里面不是你可以直接

1095
00:37:58,000 --> 00:38:03,000
就知道你手机在旁边你点那个 WiFi logo 里面就可以很方便的有一个选项可以直接

1096
00:38:03,000 --> 00:38:07,000
通过你的手机,iPhone Tethering 嘛,所以就还好吧

1097
00:38:07,000 --> 00:38:08,000
而且其实现在

1098
00:38:09,000 --> 00:38:17,000
就出门你要真的进行来办公,但是除非你是去什么公园里面再说话,就是问说你这什么咖啡馆啊,就以 WiFi 地方还是太多了吧

1099
00:38:19,000 --> 00:38:21,000
说了,我感觉是这样子起来

1100
00:38:22,000 --> 00:38:24,000
你有 ever

1101
00:38:24,000 --> 00:38:34,000
带着一个比较多出去办公这种事情吗,就是你觉得家里太憋或者是外面光真好,想要一边写成去一边想说阳光之类的你做这种事情吗

1102
00:38:34,000 --> 00:38:40,000
夏天的时候我经常带出去在海边,因为我们这个地方就是在靠海嘛,我家

1103
00:38:40,000 --> 00:38:44,000
离这个大西洋的直线距离可能觉得两三公里的样子

1104
00:38:45,000 --> 00:38:48,000
我就开开开海边找个这种稍微

1105
00:38:48,000 --> 00:38:55,000
就是那个视线比较好的地方,我就坐在那个那个那个副架的位置上把那个

1106
00:38:55,000 --> 00:38:57,000
把那个椅子往后折扰,然后在那里办公

1107
00:38:58,000 --> 00:39:01,000
就是听着听着拍暗的怒涛然后

1108
00:39:01,000 --> 00:39:06,000
我们这里没有怒涛,只有小浪,好吧,看着大西洋的昏着海浪

1109
00:39:06,000 --> 00:39:08,000
那是很难的,谢谢

1110
00:39:09,000 --> 00:39:10,000
不像太平洋

1111
00:39:10,000 --> 00:39:13,000
太平洋就很难吧,应该

1112
00:39:14,000 --> 00:39:16,000
我不知道我之前在

1113
00:39:16,000 --> 00:39:21,000
在就起码在东国的海岸线上看的的太平洋都是挺黄昏着的

1114
00:39:21,000 --> 00:39:23,000
那是因为中国的

1115
00:39:23,000 --> 00:39:25,000
就是

1116
00:39:25,000 --> 00:39:28,000
对那边海比较像伯海有

1117
00:39:28,000 --> 00:39:30,000
我们家人们伯海有时候会动着

1118
00:39:30,000 --> 00:39:31,000
就浅了那个地方

1119
00:39:33,000 --> 00:39:36,000
南海其实是足够深的地方都是南川

1120
00:39:36,000 --> 00:39:39,000
这个地方可能就是很深的,我就看就是一帮无尽那种

1121
00:39:40,000 --> 00:39:43,000
之前是照片上看到的那种蓝天就是我们家旁边的这样

1122
00:39:46,000 --> 00:39:50,000
好吧,我很少干这种事情,带了一个笔本出去办公

1123
00:39:51,000 --> 00:39:52,000
我觉得

1124
00:39:52,000 --> 00:39:54,000
之前我不是看得有一个德国人他说

1125
00:39:55,000 --> 00:39:57,000
他都不要我那个,他是做那个

1126
00:39:57,000 --> 00:39:59,000
好像开发那种

1127
00:39:59,000 --> 00:40:00,000
他是在那种

1128
00:40:01,000 --> 00:40:03,000
主机上不是主机就是

1129
00:40:03,000 --> 00:40:06,000
服务器上开发那种科学计算能用的人

1130
00:40:06,000 --> 00:40:10,000
他都直接不要笔记本了他就带个 Apple 然后带个蓝牙键盘出门

1131
00:40:10,000 --> 00:40:11,000
然后 Apple 有那个

1132
00:40:11,000 --> 00:40:12,000
有司机吗

1133
00:40:13,000 --> 00:40:15,000
他就在那个什么公园里面找个

1134
00:40:15,000 --> 00:40:17,000
找个灯子做上

1135
00:40:17,000 --> 00:40:24,000
然后就真的公园不正常营,不得嘛,然后他就把那个拿出来然后通过要提上他反正只需要那个 SSH 过去

1136
00:40:24,000 --> 00:40:26,000
所以软件都可以在那个服务器上有吗

1137
00:40:27,000 --> 00:40:30,000
他如果只是存

1138
00:40:30,000 --> 00:40:33,000
康塞下面变成的话,这样的必须是可去的

1139
00:40:33,000 --> 00:40:36,000
但你只要稍微接触掉

1140
00:40:36,000 --> 00:40:40,000
接触到任何非康塞的东西那 Apple 的人就快了我觉得

1141
00:40:40,000 --> 00:40:43,000
你要在本地做事情那肯定是不可去的

1142
00:40:43,000 --> 00:40:45,000
除非你要除非你

1143
00:40:45,000 --> 00:40:48,000
现在 Apple 上面有 Explenal 的

1144
00:40:48,000 --> 00:40:50,000
的客户端没有啊

1145
00:40:51,000 --> 00:40:53,000
我不太亲主播有那个有那个叫什么

1146
00:40:54,000 --> 00:40:55,000
Remote Vance

1147
00:40:55,000 --> 00:40:57,000
对 Vance save 的这种东西

1148
00:40:57,000 --> 00:40:58,000
然后属表怎么

1149
00:41:00,000 --> 00:41:01,000
就是你用点屏幕了

1150
00:41:05,000 --> 00:41:07,000
你要用属表肯定就输了

1151
00:41:08,000 --> 00:41:09,000
挺惨有点淡的

1152
00:41:09,000 --> 00:41:13,000
或者用纯件盘的创造网远器因为也可以

1153
00:41:14,000 --> 00:41:19,000
对你不是反正 Vim 大温的时候都用那个 Vim 的 K-Band 里马应该也差不多和市楼间

1154
00:41:21,000 --> 00:41:22,000
好吧,下次可以试试

1155
00:41:23,000 --> 00:41:25,000
不是,我是什么,你没有吧

1156
00:41:25,000 --> 00:41:28,000
我是一个觉得如果出门的话就不要办公

1157
00:41:28,000 --> 00:41:29,000
如果办公的话就不要出门

1158
00:41:30,000 --> 00:41:32,000
你想换个环境三三星怎么办

1159
00:41:33,000 --> 00:41:34,000
那就不办公啊就

1160
00:41:34,000 --> 00:41:35,000
想三星的时候三星

1161
00:41:36,000 --> 00:41:37,000
那什么

1162
00:41:38,000 --> 00:41:41,000
这什么李大超的那篇文章

1163
00:41:41,000 --> 00:41:44,000
玩玩玩一个痛快学就学个舒服的

1164
00:41:44,000 --> 00:41:47,000
不是学就学个舒服学就学个什么的

1165
00:41:48,000 --> 00:41:48,000
玩玩个痛快

1166
00:41:49,000 --> 00:41:53,000
您玩玩玩玩就可以

1167
00:41:53,000 --> 00:41:53,000
为什么

1168
00:41:54,000 --> 00:41:57,000
就不要又想親送 又想

1169
00:41:57,000 --> 00:42:00,000
把要办公就站着 然后

1170
00:42:00,000 --> 00:42:01,000
就中初了

1171
00:42:04,000 --> 00:42:07,000
然后又要挤一挤 然后又要握角色

1172
00:42:07,000 --> 00:42:07,000
但是为什么要用一点的

1173
00:42:08,000 --> 00:42:08,000
太难了吧

1174
00:42:08,000 --> 00:42:12,000
因为我并不具备

1175
00:42:12,000 --> 00:42:14,000
上不具备

1176
00:42:15,000 --> 00:42:18,000
妈妈觉得

1177
00:42:18,000 --> 00:42:48,000
这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖给这个卖

1178
00:42:48,000 --> 00:43:18,000
这个卖给这个卖给这个卖给这个卖給誰

1179
00:43:18,000 --> 00:43:19,000
我要带他还是不带他呢

1180
00:43:19,000 --> 00:43:22,000
就不带他写来

1181
00:43:22,000 --> 00:43:22,000
对啊

1182
00:43:22,000 --> 00:43:23,000
但如果我有一台

1183
00:43:23,000 --> 00:43:26,000
MAC 和一台新的那个

1184
00:43:26,000 --> 00:43:28,000
MAC 可能会好不有一层带上

1185
00:43:29,000 --> 00:43:29,000
对

1186
00:43:29,000 --> 00:43:30,000
因为小吗

1187
00:43:30,000 --> 00:43:31,000
对

1188
00:43:32,000 --> 00:43:33,000
是私意还是就

1189
00:43:33,000 --> 00:43:36,000
可能我们这种情况比较特殊

1190
00:43:36,000 --> 00:43:38,000
因为很多对这种所谓的这种白领

1191
00:43:38,000 --> 00:43:40,000
他可能经常需要去开会啊

1192
00:43:40,000 --> 00:43:42,000
办公啊之类的小

1193
00:43:42,000 --> 00:43:43,000
他就需要

1194
00:43:44,000 --> 00:43:45,000
拿一台电脑

1195
00:43:45,000 --> 00:43:46,000
然后 iPad 又不行吗

1196
00:43:46,000 --> 00:43:49,000
就是这时候那种清薄的笔记本

1197
00:43:49,000 --> 00:43:51,000
就有的就是一个必须的权向了

1198
00:43:51,000 --> 00:43:52,000
没错

1199
00:43:53,000 --> 00:43:54,000
今天主题是什么

1200
00:43:55,000 --> 00:43:58,000
今天的主题是病发和异补

1201
00:44:00,000 --> 00:44:00,000
听起来是不是就

1202
00:44:00,000 --> 00:44:02,000
等一下是不是就太干了

1203
00:44:04,000 --> 00:44:05,000
病发和异补

1204
00:44:05,000 --> 00:44:07,000
其实我们可以讲得比较

1205
00:44:07,000 --> 00:44:08,000
发一点的

1206
00:44:08,000 --> 00:44:11,000
比较比较潜入潜出一点

1207
00:44:12,000 --> 00:44:13,000
所以过去

1208
00:44:13,000 --> 00:44:15,000
或今不是在时间点事里面说的

1209
00:44:16,000 --> 00:44:18,000
你在数面加一个公式

1210
00:44:18,000 --> 00:44:20,000
你的读者就会少一半

1211
00:44:21,000 --> 00:44:22,000
每多加一个公式

1212
00:44:22,000 --> 00:44:24,000
你的读者就会少一半

1213
00:44:24,000 --> 00:44:26,000
所以我们想可能是

1214
00:44:26,000 --> 00:44:27,000
我们每一次

1215
00:44:27,000 --> 00:44:29,000
我们每增加一个数语

1216
00:44:30,000 --> 00:44:31,000
可能的听众就会少一半

1217
00:44:31,000 --> 00:44:33,000
比如说上一期编程有数学

1218
00:44:34,000 --> 00:44:35,000
可能

1219
00:44:36,000 --> 00:44:36,000
已经

1220
00:44:37,000 --> 00:44:39,000
限定了很多听

1221
00:44:39,000 --> 00:44:41,000
很多对数学和编程不敢清楚的听众是不会挺

1222
00:44:41,000 --> 00:44:44,000
当然对数学和编程不敢清楚的听众

1223
00:44:44,000 --> 00:44:45,000
为什么要听众和谋慌

1224
00:44:45,000 --> 00:44:46,000
没事啊

1225
00:44:46,000 --> 00:44:48,000
根本还可以听这个慕耀老师的声音

1226
00:44:50,000 --> 00:44:51,000
说得是

1227
00:44:53,000 --> 00:44:55,000
我我我明天把慕耀证明

1228
00:44:55,000 --> 00:44:58,000
娃娃老师的哀天来单独做一张节目

1229
00:44:58,000 --> 00:45:00,000
各位听说说怎么样呀

1230
00:45:00,000 --> 00:45:01,000
然后粉丝全过去

1231
00:45:01,000 --> 00:45:03,000
我们就没升级给大家

1232
00:45:03,000 --> 00:45:06,000
对辞书应该辞书应该插入那个幼儿园的

1233
00:45:06,000 --> 00:45:07,000
所有小朋友一起说

1234
00:45:07,000 --> 00:45:08,000
好

1235
00:45:11,000 --> 00:45:11,000
对

1236
00:45:12,000 --> 00:45:13,000
好

1237
00:45:13,000 --> 00:45:14,000
好

1238
00:45:15,000 --> 00:45:16,000
对

1239
00:45:16,000 --> 00:45:17,000
对

1240
00:45:17,000 --> 00:45:20,000
所以并发和并行其实是两个概念

1241
00:45:20,000 --> 00:45:21,000
不不

1242
00:45:21,000 --> 00:45:22,000
并发和一步

1243
00:45:23,000 --> 00:45:23,000
对本

1244
00:45:23,000 --> 00:45:24,000
concerns

1245
00:45:24,000 --> 00:45:25,000
也很

1246
00:45:25,000 --> 00:45:26,000
concern

1247
00:45:26,000 --> 00:45:27,000
paul

1248
00:45:27,000 --> 00:45:29,000
ok 先讲并发这一块对对对

1249
00:45:29,000 --> 00:45:31,000
并发和

1250
00:45:31,000 --> 00:45:31,000
并行

1251
00:45:31,000 --> 00:45:34,000
这个数据其实有点很久解的

1252
00:45:34,000 --> 00:45:36,000
我觉得没有一个很清晰的

1253
00:45:36,000 --> 00:45:39,000
就吃马中文没有一个很很清晰的概念

1254
00:45:39,000 --> 00:45:39,000
就说

1255
00:45:39,000 --> 00:45:40,000
concern

1256
00:45:40,000 --> 00:45:43,000
因为两个是两个完全不一样的词

1257
00:45:43,000 --> 00:45:44,000
对吧

1258
00:45:44,000 --> 00:45:45,000
但是在中文里面

1259
00:45:45,000 --> 00:45:47,000
你说并发和并行有什么太大的区别

1260
00:45:47,000 --> 00:45:47,000
也没有

1261
00:45:48,000 --> 00:45:49,000
但我急我觉得

1262
00:45:49,000 --> 00:45:50,000
就是怎么说

1263
00:45:50,000 --> 00:45:51,000
有人转型公司

1264
00:45:51,000 --> 00:45:52,000
没有很多很多词卧都是这样

1265
00:45:52,000 --> 00:45:53,000
而且

1266
00:45:54,000 --> 00:45:55,000
你说 concerns 也怕了

1267
00:45:55,000 --> 00:45:56,000
我在英文里面的

1268
00:45:57,000 --> 00:45:59,000
区别是每一个成续人都了解的吗

1269
00:45:59,000 --> 00:46:00,000
肯定不是

1270
00:46:00,000 --> 00:46:02,000
甚至连那个磁点的地名

1271
00:46:02,000 --> 00:46:04,000
都是很非常接近

1272
00:46:04,000 --> 00:46:06,000
你说都没有一个很严格的区分

1273
00:46:06,000 --> 00:46:07,000
造就哪个是哪个

1274
00:46:07,000 --> 00:46:08,000
对

1275
00:46:08,000 --> 00:46:11,000
但是我觉得可能在软件

1276
00:46:11,000 --> 00:46:12,000
见有很多很多这样的问题

1277
00:46:12,000 --> 00:46:12,000
比如说

1278
00:46:13,000 --> 00:46:15,000
agument 和 paramins 差别

1279
00:46:16,000 --> 00:46:18,000
可能有很多时候也会毁用

1280
00:46:19,000 --> 00:46:20,000
就看于一进

1281
00:46:20,000 --> 00:46:22,000
就是大部分时候是不分

1282
00:46:22,000 --> 00:46:22,000
我觉得

1283
00:46:23,000 --> 00:46:23,000
对

1284
00:46:24,000 --> 00:46:24,000
但

1285
00:46:25,000 --> 00:46:27,000
具体到这一期的

1286
00:46:27,000 --> 00:46:28,000
话题上来说

1287
00:46:28,000 --> 00:46:30,000
我觉得可能正确的区分

1288
00:46:30,000 --> 00:46:31,000
concerns 和 parler

1289
00:46:31,000 --> 00:46:32,000
也是

1290
00:46:33,000 --> 00:46:35,000
就接下来讨论比较重要的事情

1291
00:46:35,000 --> 00:46:36,000
甚至可以说

1292
00:46:36,000 --> 00:46:37,000
如果我们这期节目

1293
00:46:37,000 --> 00:46:38,000
可以让

1294
00:46:38,000 --> 00:46:41,000
可以帮助听过的人

1295
00:46:41,000 --> 00:46:43,000
确切地了解了

1296
00:46:43,000 --> 00:46:45,000
concerns 和 parler 有这样差别

1297
00:46:45,000 --> 00:46:47,000
那可能已经是

1298
00:46:47,000 --> 00:46:48,000
很有成功了

1299
00:46:48,000 --> 00:46:49,000
好处

1300
00:46:49,000 --> 00:46:50,000
这很有成功一点

1301
00:46:50,000 --> 00:46:51,000
很成功一点

1302
00:46:51,000 --> 00:46:54,000
所以我们现在把这个范围说得很窄

1303
00:46:54,000 --> 00:46:55,000
就是我们在这里讲的

1304
00:46:55,000 --> 00:46:56,000
并发了并行

1305
00:46:56,000 --> 00:46:58,000
但对应的两个词就是 concern

1306
00:46:58,000 --> 00:47:00,000
parler 这两个词的时候是讲

1307
00:47:00,000 --> 00:47:01,000
在

1308
00:47:02,000 --> 00:47:03,000
叫什么

1309
00:47:03,000 --> 00:47:04,000
多

1310
00:47:05,000 --> 00:47:05,000
多线成

1311
00:47:05,000 --> 00:47:07,000
或者说在这个程序语言的

1312
00:47:07,000 --> 00:47:10,000
这个构建的时候的一个场景

1313
00:47:10,000 --> 00:47:12,000
至于说这个场景外

1314
00:47:12,000 --> 00:47:13,000
你要怎么集中这两个词

1315
00:47:13,000 --> 00:47:14,000
那就随你变吧

1316
00:47:15,000 --> 00:47:16,000
对

1317
00:47:17,000 --> 00:47:19,000
所以什么是 concerns

1318
00:47:19,000 --> 00:47:21,000
什么是并发

1319
00:47:22,000 --> 00:47:24,000
concerns 我我是这么理解的

1320
00:47:24,000 --> 00:47:27,000
就是说他是一种思维方式

1321
00:47:27,000 --> 00:47:29,000
就是说他你是怎么去

1322
00:47:29,000 --> 00:47:31,000
在逻辑上去构建一个东西

1323
00:47:31,000 --> 00:47:33,000
其实他两个之间是

1324
00:47:33,000 --> 00:47:36,000
可以没有一个先后顺序的依赖关系的

1325
00:47:37,000 --> 00:47:38,000
我都这么解释

1326
00:47:38,000 --> 00:47:39,000
可不是合理

1327
00:47:39,000 --> 00:47:40,000
或者是清晰的

1328
00:47:40,000 --> 00:47:41,000
我是这么理解的

1329
00:47:41,000 --> 00:47:42,000
OK

1330
00:47:42,000 --> 00:47:44,000
那什么是 parler

1331
00:47:44,000 --> 00:47:45,000
什么是并行

1332
00:47:45,000 --> 00:47:46,000
并行的话

1333
00:47:46,000 --> 00:47:47,000
就是说这个是

1334
00:47:47,000 --> 00:47:51,000
我就是相对于刚才那一早是在逻辑层面的话

1335
00:47:51,000 --> 00:47:53,000
那个 concerns 在逻辑层面的概念的话

1336
00:47:53,000 --> 00:47:55,000
并行可能就是在一个

1337
00:47:55,000 --> 00:47:56,000
物理层面的概念了

1338
00:47:56,000 --> 00:47:57,000
就是说

1339
00:47:58,000 --> 00:48:00,000
在逻辑上并发的东西

1340
00:48:00,000 --> 00:48:02,000
在物理上他并不一定是在并行

1341
00:48:02,000 --> 00:48:04,000
直行他也可以是先做一个后做一个

1342
00:48:04,000 --> 00:48:07,000
只是说他这个鞋后是没有太大关系的

1343
00:48:07,000 --> 00:48:08,000
就谁先谁后都一样

1344
00:48:08,000 --> 00:48:10,000
但是并就是在

1345
00:48:10,000 --> 00:48:12,000
实现层面的并行的话

1346
00:48:12,000 --> 00:48:16,000
就是说他两个是在物理事件中同时发生的

1347
00:48:17,000 --> 00:48:18,000
怎么可以这样解释可以吗

1348
00:48:18,000 --> 00:48:20,000
我们我觉得我觉得

1349
00:48:20,000 --> 00:48:21,000
应该是可以

1350
00:48:21,000 --> 00:48:23,000
就是怎么说的就是有一句

1351
00:48:23,000 --> 00:48:25,000
就是说 Pike 曾经做为一个

1352
00:48:26,000 --> 00:48:27,000
对 GoLung 的

1353
00:48:28,000 --> 00:48:29,000
GoRoutine 的

1354
00:48:31,000 --> 00:48:32,000
PowerPot 上

1355
00:48:32,000 --> 00:48:32,000
叫什么

1356
00:48:33,000 --> 00:48:34,000
换冬天

1357
00:48:34,000 --> 00:48:35,000
换冬片

1358
00:48:35,000 --> 00:48:35,000
对

1359
00:48:35,000 --> 00:48:36,000
对

1360
00:48:36,000 --> 00:48:38,000
这个换冬天在网上可以得到

1361
00:48:38,000 --> 00:48:39,000
然后他的

1362
00:48:39,000 --> 00:48:44,000
他的并发和并行的定义是并发是同一时间

1363
00:48:44,000 --> 00:48:46,000
应对多件事情的能力

1364
00:48:46,000 --> 00:48:48,000
就 Dinwise

1365
00:48:48,000 --> 00:48:49,000
Low of things

1366
00:48:50,000 --> 00:48:52,000
而并行的就是 PowerL

1367
00:48:52,000 --> 00:48:56,000
则是同一时间动手去做很多件事情的能力

1368
00:48:56,000 --> 00:48:59,000
但这里你家解释什么是什么是什么什么

1369
00:48:59,000 --> 00:49:01,000
什么是应对和什么是做的

1370
00:49:02,000 --> 00:49:04,000
就是我觉得可以理解为

1371
00:49:04,000 --> 00:49:05,000
就是这两个

1372
00:49:05,000 --> 00:49:08,000
这两个概念的抽象层级是不一样

1373
00:49:08,000 --> 00:49:09,000
就并发

1374
00:49:09,000 --> 00:49:11,000
或者说他们描述的

1375
00:49:11,000 --> 00:49:12,000
问题的领域是不一样

1376
00:49:13,000 --> 00:49:15,000
所谓并发 Conconcernsci

1377
00:49:15,000 --> 00:49:17,000
指的是一个比较

1378
00:49:20,000 --> 00:49:23,000
在问题领域的概念

1379
00:49:23,000 --> 00:49:25,000
就是你有很多问题

1380
00:49:25,000 --> 00:49:27,000
你需要去解决这些问题

1381
00:49:27,000 --> 00:49:29,000
而这些问题的发生是同时发生的

1382
00:49:30,000 --> 00:49:31,000
你就可以说

1383
00:49:32,000 --> 00:49:32,000
我要

1384
00:49:33,000 --> 00:49:35,000
我所面对的问题

1385
00:49:35,000 --> 00:49:36,000
有 Conconcernsci 的

1386
00:49:36,000 --> 00:49:37,000
特征

1387
00:49:38,000 --> 00:49:41,000
Parlal 则是在你实际是做一些事情的时候

1388
00:49:42,000 --> 00:49:43,000
你要比如说你要

1389
00:49:43,000 --> 00:49:46,000
你要去解决一个并发的问题

1390
00:49:46,000 --> 00:49:48,000
你怎么去解决它

1391
00:49:48,000 --> 00:49:48,000
好

1392
00:49:48,000 --> 00:49:51,000
你可以使用并情的手段去解决它

1393
00:49:54,000 --> 00:49:56,000
我大概理解你一整半

1394
00:49:56,000 --> 00:49:57,000
他就觉得听强有点是好

1395
00:49:58,000 --> 00:49:58,000
对吧

1396
00:49:58,000 --> 00:49:59,000
比如说

1397
00:49:59,000 --> 00:50:03,000
我说我们还是举例子来解释好了

1398
00:50:03,000 --> 00:50:04,000
比如说

1399
00:50:06,000 --> 00:50:09,000
我在做一些事情的时候

1400
00:50:09,000 --> 00:50:10,000
需要去做另外一事情

1401
00:50:10,000 --> 00:50:11,000
比如说我要做饭

1402
00:50:11,000 --> 00:50:12,000
我

1403
00:50:12,000 --> 00:50:13,000
我而在

1404
00:50:13,000 --> 00:50:14,000
但是我的晚上还没洗过也没爽

1405
00:50:14,000 --> 00:50:15,000
那我要先说

1406
00:50:15,000 --> 00:50:17,000
先刷锅再洗碗

1407
00:50:17,000 --> 00:50:18,000
然后再切菜

1408
00:50:18,000 --> 00:50:19,000
然后再

1409
00:50:19,000 --> 00:50:20,000
把油倒进锅

1410
00:50:20,000 --> 00:50:21,000
然后开始上菜

1411
00:50:21,000 --> 00:50:22,000
上菜再装盘

1412
00:50:23,000 --> 00:50:24,000
所有这件事情可以理解为

1413
00:50:24,000 --> 00:50:26,000
我是有些事情

1414
00:50:26,000 --> 00:50:27,000
可是是可以同时做的

1415
00:50:27,000 --> 00:50:27,000
对吧

1416
00:50:27,000 --> 00:50:28,000
比如说

1417
00:50:28,000 --> 00:50:28,000
我可以

1418
00:50:29,000 --> 00:50:31,000
先洗一部分了

1419
00:50:31,000 --> 00:50:32,000
然后我先洗

1420
00:50:32,000 --> 00:50:32,000
先把锅洗了

1421
00:50:32,000 --> 00:50:34,000
然后用锅的炒菜

1422
00:50:34,000 --> 00:50:36,000
然后再菜被煮的过程

1423
00:50:36,000 --> 00:50:37,000
能夹受是做一个盾菜

1424
00:50:37,000 --> 00:50:39,000
不需要长时间的去翻炒的

1425
00:50:39,000 --> 00:50:40,000
盾菜

1426
00:50:40,000 --> 00:50:44,000
然后我可以在盾菜的时候去洗碗

1427
00:50:44,000 --> 00:50:45,000
对吧

1428
00:50:46,000 --> 00:50:49,000
此事物可以说做饭这件事情是一个

1429
00:50:49,000 --> 00:50:51,000
并发的事情

1430
00:50:51,000 --> 00:50:52,000
因为

1431
00:50:52,000 --> 00:50:52,000
看课

1432
00:50:52,000 --> 00:50:53,000
有很多

1433
00:50:53,000 --> 00:50:55,000
对有很多头绪需要我去做

1434
00:50:55,000 --> 00:50:57,000
甚至我可以把买菜家里去

1435
00:50:57,000 --> 00:50:58,000
比如说我可以

1436
00:50:58,000 --> 00:50:59,000
我可以去买菜

1437
00:50:59,000 --> 00:51:00,000
现在我需要先去买菜

1438
00:51:00,000 --> 00:51:02,000
然后再去刷过洗碗

1439
00:51:02,000 --> 00:51:03,000
然后再开始盾菜

1440
00:51:03,000 --> 00:51:03,000
然后再给装菜

1441
00:51:03,000 --> 00:51:05,000
然后再给摆桌子之类的

1442
00:51:06,000 --> 00:51:07,000
但是

1443
00:51:07,000 --> 00:51:08,000
因为我只有一个人

1444
00:51:08,000 --> 00:51:09,000
所以我可能我没有办法用

1445
00:51:09,000 --> 00:51:11,000
并行的手段去做它

1446
00:51:11,000 --> 00:51:11,000
对吧

1447
00:51:11,000 --> 00:51:12,000
对吧

1448
00:51:12,000 --> 00:51:12,000
没错

1449
00:51:12,000 --> 00:51:14,000
但如果

1450
00:51:14,000 --> 00:51:15,000
我可以你有你朋友

1451
00:51:15,000 --> 00:51:16,000
拉着我女朋友

1452
00:51:16,000 --> 00:51:16,000
对

1453
00:51:16,000 --> 00:51:18,000
首先我得有一个女朋友

1454
00:51:18,000 --> 00:51:20,000
首先你得有一个性感

1455
00:51:20,000 --> 00:51:21,000
性感

1456
00:51:21,000 --> 00:51:22,000
我已经有一个女朋友

1457
00:51:22,000 --> 00:51:23,000
我可以拉着她说

1458
00:51:23,000 --> 00:51:23,000
好

1459
00:51:23,000 --> 00:51:24,000
我去买菜

1460
00:51:24,000 --> 00:51:25,000
你把锅油洗了

1461
00:51:26,000 --> 00:51:27,000
对吧

1462
00:51:27,000 --> 00:51:27,000
此事物就可以说

1463
00:51:27,000 --> 00:51:29,000
我再做并行

1464
00:51:29,000 --> 00:51:29,000
因为

1465
00:51:30,000 --> 00:51:32,000
我在同意时间

1466
00:51:32,000 --> 00:51:33,000
同时做很多事情

1467
00:51:34,000 --> 00:51:36,000
此事就是 Pirula

1468
00:51:37,000 --> 00:51:38,000
我不知道这样是什么

1469
00:51:38,000 --> 00:51:38,000
所以

1470
00:51:38,000 --> 00:51:41,000
所以这个从一个开门的说法来讲

1471
00:51:41,000 --> 00:51:42,000
就是说并发

1472
00:51:42,000 --> 00:51:44,000
Concerns is 一个

1473
00:51:44,000 --> 00:51:46,000
组织事物的概念

1474
00:51:46,000 --> 00:51:48,000
就是说你可以把事物独立出来

1475
00:51:48,000 --> 00:51:50,000
它互相之间是没有

1476
00:51:50,000 --> 00:51:51,000
英国关系

1477
00:51:51,000 --> 00:51:52,000
或者是依赖关系的

1478
00:51:52,000 --> 00:51:52,000
那可以

1479
00:51:52,000 --> 00:51:53,000
对

1480
00:51:53,000 --> 00:51:54,000
它可以被并发执行

1481
00:51:54,000 --> 00:51:56,000
但你实际做的时候

1482
00:51:56,000 --> 00:51:57,000
你这是不是真的同时

1483
00:51:57,000 --> 00:51:59,000
在做几件互相

1484
00:51:59,000 --> 00:52:00,000
可以并发的事情

1485
00:52:00,000 --> 00:52:01,000
则不一定

1486
00:52:01,000 --> 00:52:03,000
就好像赶紧说做饭的例子

1487
00:52:03,000 --> 00:52:05,000
你有很多并发的任务

1488
00:52:05,000 --> 00:52:07,000
比如说洗碗是一个

1489
00:52:07,000 --> 00:52:08,000
切菜可能是一个

1490
00:52:09,000 --> 00:52:09,000
然后

1491
00:52:09,000 --> 00:52:11,000
洗锅可能又是一个

1492
00:52:11,000 --> 00:52:13,000
但是因为你就一个人

1493
00:52:13,000 --> 00:52:13,000
你还没有

1494
00:52:13,000 --> 00:52:15,000
并没有把这些并发的任务

1495
00:52:15,000 --> 00:52:16,000
并行执行吗

1496
00:52:16,000 --> 00:52:16,000
也就是说

1497
00:52:16,000 --> 00:52:17,000
你咱面对一个

1498
00:52:17,000 --> 00:52:19,000
Concerns is a 问题的时候

1499
00:52:19,000 --> 00:52:21,000
你可能没有办法

1500
00:52:21,000 --> 00:52:23,000
用 Pirula 方式去解决它

1501
00:52:24,000 --> 00:52:27,000
而你用 Pirula 方式去解决问题

1502
00:52:27,000 --> 00:52:29,000
也有可能根本不是

1503
00:52:29,000 --> 00:52:30,000
Concerns 的问题

1504
00:52:30,000 --> 00:52:32,000
但是当日后者这样的例子

1505
00:52:32,000 --> 00:52:34,000
可能比较难以解决

1506
00:52:34,000 --> 00:52:35,000
对

1507
00:52:35,000 --> 00:52:36,000
我刚才就在想说

1508
00:52:36,000 --> 00:52:38,000
我们刚才讲了说

1509
00:52:39,000 --> 00:52:40,000
那是不是说

1510
00:52:40,000 --> 00:52:41,000
并行

1511
00:52:41,000 --> 00:52:42,000
就是怕我

1512
00:52:42,000 --> 00:52:44,000
的前提是并发

1513
00:52:44,000 --> 00:52:44,000
你说不是

1514
00:52:44,000 --> 00:52:46,000
那有一些什么反力吗

1515
00:52:50,000 --> 00:52:51,000
比如说吧

1516
00:52:52,000 --> 00:52:54,000
我要在五个抽屯里面

1517
00:52:54,000 --> 00:52:55,000
我有五个抽屯

1518
00:52:55,000 --> 00:52:57,000
五抽屯里面装满的维启子

1519
00:52:57,000 --> 00:52:58,000
其中

1520
00:52:58,000 --> 00:53:00,000
五抽屯里面有一万维启子

1521
00:53:00,000 --> 00:53:01,000
只有一个是黑的

1522
00:53:01,000 --> 00:53:02,000
其他的就是马上

1523
00:53:02,000 --> 00:53:03,000
我要在这

1524
00:53:03,000 --> 00:53:05,000
我要把黑的维启子找出来

1525
00:53:07,000 --> 00:53:08,000
你说这是 Concerns 的问题吗

1526
00:53:08,000 --> 00:53:09,000
其实不是

1527
00:53:11,000 --> 00:53:13,000
它这件事情本身没有任何

1528
00:53:13,000 --> 00:53:14,000
Concerns 在里面

1529
00:53:14,000 --> 00:53:15,000
不是吧

1530
00:53:15,000 --> 00:53:16,000
我只需要找到那个黑

1531
00:53:16,000 --> 00:53:17,000
找到黑维启子

1532
00:53:17,000 --> 00:53:19,000
是我唯一的目的

1533
00:53:21,000 --> 00:53:23,000
但我觉得这个可能有

1534
00:53:23,000 --> 00:53:24,000
看你的这个什么定

1535
00:53:24,000 --> 00:53:25,000
叫什么

1536
00:53:25,000 --> 00:53:27,000
你的 Tasca 的画定是什么样子的吗

1537
00:53:27,000 --> 00:53:29,000
如果你画定 Tasca 是

1538
00:53:29,000 --> 00:53:30,000
我有五个 Tasca

1539
00:53:30,000 --> 00:53:32,000
就分别在每一个抽屯里面

1540
00:53:32,000 --> 00:53:34,000
找那个黑的维启子

1541
00:53:34,000 --> 00:53:34,000
对吧

1542
00:53:35,000 --> 00:53:37,000
这个时候它又是一个并发的感应了

1543
00:53:37,000 --> 00:53:38,000
所以我觉得

1544
00:53:38,000 --> 00:53:41,000
可能大致上可以这么认为吧

1545
00:53:41,000 --> 00:53:42,000
就是说

1546
00:53:42,000 --> 00:53:45,000
并发是并行的先绝条件

1547
00:53:45,000 --> 00:53:48,000
但并行并不是并发的必然结果

1548
00:53:49,000 --> 00:53:50,000
可以这么说

1549
00:53:50,000 --> 00:53:50,000
好吧

1550
00:53:50,000 --> 00:53:51,000
就或说

1551
00:53:51,000 --> 00:53:53,000
如果你可以把问题转化为一个

1552
00:53:54,000 --> 00:53:55,000
能够并发的问题

1553
00:53:55,000 --> 00:53:57,000
那你基本上就可以用

1554
00:53:57,000 --> 00:53:58,000
并行的方式去解决了

1555
00:54:00,000 --> 00:54:02,000
如果这个多的那个

1556
00:54:02,000 --> 00:54:04,000
RESORS 就资源资源

1557
00:54:04,000 --> 00:54:06,000
并发去做吗

1558
00:54:06,000 --> 00:54:07,000
刚才在你那个

1559
00:54:07,000 --> 00:54:08,000
做发的例子里面

1560
00:54:08,000 --> 00:54:09,000
这个资源

1561
00:54:09,000 --> 00:54:10,000
就是说你得有两个人

1562
00:54:10,000 --> 00:54:11,000
或者是三个人

1563
00:54:11,000 --> 00:54:12,000
或者四个人

1564
00:54:12,000 --> 00:54:14,000
但在电脑的处理器里面

1565
00:54:14,000 --> 00:54:15,000
你得有多个处理器

1566
00:54:15,000 --> 00:54:18,000
就多核或者是多个 CPU

1567
00:54:18,000 --> 00:54:19,000
或者说

1568
00:54:19,000 --> 00:54:21,000
更出发的就是多个逻辑单元

1569
00:54:21,000 --> 00:54:22,000
你可能

1570
00:54:23,000 --> 00:54:24,000
可以去

1571
00:54:26,000 --> 00:54:28,000
比如说对早期的计算机

1572
00:54:28,000 --> 00:54:30,000
可能的确是不具备并发

1573
00:54:30,000 --> 00:54:32,000
就是单核处理器吗

1574
00:54:32,000 --> 00:54:33,000
甚至不说

1575
00:54:33,000 --> 00:54:35,000
先不说单核处理

1576
00:54:35,000 --> 00:54:36,000
其实这个这件事情

1577
00:54:36,000 --> 00:54:38,000
就是你在单核处理器上

1578
00:54:38,000 --> 00:54:39,000
可以用可以在

1579
00:54:41,000 --> 00:54:43,000
操作系统层面去模拟

1580
00:54:43,000 --> 00:54:44,000
PARAL 的

1581
00:54:44,000 --> 00:54:46,000
但是在真正的

1582
00:54:46,000 --> 00:54:47,000
早期的计算机里面

1583
00:54:47,000 --> 00:54:49,000
就连

1584
00:54:49,000 --> 00:54:52,000
连这种操作系统层面的

1585
00:54:52,000 --> 00:54:53,000
并行都是不存在的

1586
00:54:54,000 --> 00:54:55,000
就是并发

1587
00:54:55,000 --> 00:54:56,000
并发

1588
00:54:57,000 --> 00:55:00,000
操作系统层面的并行是不存在

1589
00:55:00,000 --> 00:55:00,000
我觉得我

1590
00:55:00,000 --> 00:55:01,000
我想说的就是

1591
00:55:01,000 --> 00:55:02,000
比如说那个时候

1592
00:55:03,000 --> 00:55:04,000
并发肯定是

1593
00:55:05,000 --> 00:55:06,000
存在点

1594
00:55:06,000 --> 00:55:08,000
比如说你一方面要独软盘

1595
00:55:08,000 --> 00:55:10,000
另方面要刷新屏幕上的自服

1596
00:55:10,000 --> 00:55:12,000
这个时候你已经有那个了吗

1597
00:55:12,000 --> 00:55:13,000
有那个叫什么

1598
00:55:14,000 --> 00:55:15,000
有多件物了吗

1599
00:55:16,000 --> 00:55:16,000
没有多人物

1600
00:55:16,000 --> 00:55:18,000
我的意思就是在很早很早的时代

1601
00:55:18,000 --> 00:55:19,000
没有多任务的时代

1602
00:55:20,000 --> 00:55:21,000
当你在独软盘的时候

1603
00:55:21,000 --> 00:55:23,000
你的屏幕就是咖啡了

1604
00:55:24,000 --> 00:55:27,000
就那个时候这段机是没有办法用任何

1605
00:55:28,000 --> 00:55:30,000
任何不管是真实的也

1606
00:55:30,000 --> 00:55:33,000
还是虚假的并行手段去解决这些并发的问题

1607
00:55:34,000 --> 00:55:37,000
然后后来我们就有了这种

1608
00:55:37,000 --> 00:55:38,000
所谓的

1609
00:55:38,000 --> 00:55:40,000
多人物机制

1610
00:55:40,000 --> 00:55:42,000
就是在哪怕是在单一职行

1611
00:55:42,000 --> 00:55:44,000
单一逻辑合的处理

1612
00:55:44,000 --> 00:55:45,000
这个计算机上我们也可以

1613
00:55:45,000 --> 00:55:48,000
假装我们是在同时职行很多事情了

1614
00:55:48,000 --> 00:55:48,000
比如说

1615
00:55:49,000 --> 00:55:51,000
然后看最早的实现那个什么

1616
00:55:51,000 --> 00:55:52,000
就民用的话

1617
00:55:52,000 --> 00:55:54,000
应该是温度三二还是九五

1618
00:55:54,000 --> 00:55:54,000
三二吧

1619
00:55:56,000 --> 00:55:57,000
你要说最早的

1620
00:55:57,000 --> 00:55:59,000
三二是因为在 UniX 这样的

1621
00:55:59,000 --> 00:56:02,000
就是大规模使用的情况下

1622
00:56:02,000 --> 00:56:03,000
就是不可能用的

1623
00:56:03,000 --> 00:56:04,000
今天是九五吧

1624
00:56:04,000 --> 00:56:04,000
我觉得

1625
00:56:05,000 --> 00:56:08,000
那是九五三

1626
00:56:08,000 --> 00:56:10,000
九五不是强调是多人物

1627
00:56:10,000 --> 00:56:12,000
所以三二三二已经有多任务的

1628
00:56:12,000 --> 00:56:13,000
三二也就多任务

1629
00:56:13,000 --> 00:56:14,000
这是那个时候就已经多任务

1630
00:56:14,000 --> 00:56:17,000
就是可以在你在

1631
00:56:17,000 --> 00:56:19,000
实现你在前你在放一手

1632
00:56:19,000 --> 00:56:21,000
哥的时候同时打开一个图片

1633
00:56:21,000 --> 00:56:22,000
比如说可以做这么一件事情

1634
00:56:23,000 --> 00:56:25,000
你肚子四大也是不能这样的吗

1635
00:56:26,000 --> 00:56:26,000
对

1636
00:56:26,000 --> 00:56:27,000
但是

1637
00:56:27,000 --> 00:56:29,000
等等温度四三二是

1638
00:56:29,000 --> 00:56:31,000
可能这个数据要解释一下

1639
00:56:31,000 --> 00:56:31,000
就是

1640
00:56:32,000 --> 00:56:34,000
我们说三二其实只温度三点零

1641
00:56:34,000 --> 00:56:38,000
因为温度三点二其实是只有中国地区才

1642
00:56:38,000 --> 00:56:40,000
温度三点二

1643
00:56:40,000 --> 00:56:41,000
对温度三点二其实就是一个

1644
00:56:41,000 --> 00:56:43,000
温度三点一的渐体中文版

1645
00:56:44,000 --> 00:56:45,000
这样

1646
00:56:45,000 --> 00:56:45,000
不知道

1647
00:56:45,000 --> 00:56:45,000
对

1648
00:56:45,000 --> 00:56:47,000
所以我们经常说温度三点二

1649
00:56:47,000 --> 00:56:51,000
但其实这个概念紧线于中文圈里

1650
00:56:52,000 --> 00:56:53,000
温度三把我们都要多

1651
00:56:53,000 --> 00:56:54,000
对

1652
00:56:54,000 --> 00:56:55,000
对温三是一个比较好的

1653
00:56:55,000 --> 00:56:56,000
特别

1654
00:56:57,000 --> 00:56:58,000
数据对

1655
00:56:59,000 --> 00:57:00,000
然后来就有了这个多人

1656
00:57:00,000 --> 00:57:01,000
我就可以时间刚才能够怎么

1657
00:57:01,000 --> 00:57:03,000
但是那个处理期还是一次

1658
00:57:03,000 --> 00:57:04,000
只做一件事

1659
00:57:04,000 --> 00:57:05,000
就是他他放一会儿

1660
00:57:05,000 --> 00:57:08,000
这个哥还有把那个处理期合金

1661
00:57:08,000 --> 00:57:09,000
切到去画一会儿图

1662
00:57:09,000 --> 00:57:11,000
然后再切回来放一会儿

1663
00:57:11,000 --> 00:57:13,000
哥然后再切回来画一会儿图

1664
00:57:13,000 --> 00:57:14,000
他只要切得够快

1665
00:57:14,000 --> 00:57:16,000
给人的错觉说

1666
00:57:16,000 --> 00:57:18,000
说他同时在做两件事

1667
00:57:18,000 --> 00:57:18,000
就是他在

1668
00:57:19,000 --> 00:57:22,000
并行的执行两件并发了任务

1669
00:57:22,000 --> 00:57:23,000
但其实他只是一个单

1670
00:57:24,000 --> 00:57:25,000
他并不是并行的

1671
00:57:25,000 --> 00:57:26,000
他只是一个

1672
00:57:26,000 --> 00:57:27,000
不带不去喜欢的一个东西

1673
00:57:27,000 --> 00:57:28,000
他就像审认一下

1674
00:57:28,000 --> 00:57:28,000
哎呀

1675
00:57:28,000 --> 00:57:30,000
你可以自己跟自己打冰猫球

1676
00:57:30,000 --> 00:57:31,000
对

1677
00:57:31,000 --> 00:57:31,000
对

1678
00:57:31,000 --> 00:57:31,000
对

1679
00:57:31,000 --> 00:57:32,000
这个喜欢的非常好

1680
00:57:32,000 --> 00:57:33,000
对

1681
00:57:33,000 --> 00:57:33,000
对

1682
00:57:33,000 --> 00:57:34,000
这个是很好的比

1683
00:57:35,000 --> 00:57:37,000
然后真正到了要有

1684
00:57:37,000 --> 00:57:37,000
怕了

1685
00:57:37,000 --> 00:57:38,000
就是有并发的

1686
00:57:38,000 --> 00:57:39,000
你还是有这个

1687
00:57:39,000 --> 00:57:41,000
就当时有大阳处理

1688
00:57:41,000 --> 00:57:42,000
就有多线成的时候

1689
00:57:42,000 --> 00:57:43,000
就是 hyper threading 的时候

1690
00:57:43,000 --> 00:57:44,000
就是一个处理期合金

1691
00:57:44,000 --> 00:57:45,000
他模拟成两个

1692
00:57:45,000 --> 00:57:47,000
逻辑合在用

1693
00:57:47,000 --> 00:57:48,000
好也包括到我们现在走

1694
00:57:48,000 --> 00:57:51,000
真正的多个物理合的情况

1695
00:57:51,000 --> 00:57:54,000
甚至在一些工作战略或者是服务器上

1696
00:57:54,000 --> 00:57:55,000
所谓的那种多 CPU

1697
00:57:55,000 --> 00:57:57,000
就是八不过不只有一个 CPU 的

1698
00:57:57,000 --> 00:57:59,000
芯片还有可能两个

1699
00:57:59,000 --> 00:58:00,000
或者四个这样

1700
00:58:00,000 --> 00:58:01,000
对

1701
00:58:01,000 --> 00:58:02,000
这样

1702
00:58:02,000 --> 00:58:04,000
只有到这时候才我们才说真正的

1703
00:58:04,000 --> 00:58:05,000
派儿量一种性

1704
00:58:06,000 --> 00:58:06,000
对

1705
00:58:06,000 --> 00:58:07,000
已经是这样

1706
00:58:08,000 --> 00:58:08,000
对

1707
00:58:09,000 --> 00:58:11,000
不过其实并行在

1708
00:58:12,000 --> 00:58:14,000
在我们讲 CPU 的时候

1709
00:58:14,000 --> 00:58:15,000
所以可能比较晚

1710
00:58:15,000 --> 00:58:16,000
进财出现

1711
00:58:16,000 --> 00:58:18,000
但是他在讲那个

1712
00:58:18,000 --> 00:58:20,000
GPU 就图形中的接受

1713
00:58:20,000 --> 00:58:21,000
他确实一直存在了

1714
00:58:21,000 --> 00:58:22,000
因为我们知道

1715
00:58:22,000 --> 00:58:23,000
这个 GPU 的

1716
00:58:23,000 --> 00:58:25,000
他是一个大规模

1717
00:58:25,000 --> 00:58:27,000
并行化的这种结构

1718
00:58:27,000 --> 00:58:29,000
就是因为图像处理人家

1719
00:58:29,000 --> 00:58:30,000
事情他与生俱来

1720
00:58:30,000 --> 00:58:32,000
就存在着这么一个

1721
00:58:33,000 --> 00:58:35,000
可以被

1722
00:58:35,000 --> 00:58:37,000
并行执行的问题

1723
00:58:37,000 --> 00:58:38,000
就是

1724
00:58:38,000 --> 00:58:40,000
你需要大规模的改变

1725
00:58:40,000 --> 00:58:42,000
一张图上的每一个点

1726
00:58:42,000 --> 00:58:43,000
这就

1727
00:58:43,000 --> 00:58:44,000
这就有点像

1728
00:58:44,000 --> 00:58:47,000
你需要同时给

1729
00:58:47,000 --> 00:58:49,000
两万个抽屉

1730
00:58:49,000 --> 00:58:50,000
在两万抽屉里面找

1731
00:58:50,000 --> 00:58:52,000
有没有黑白黑紫这样

1732
00:58:52,000 --> 00:58:54,000
所以这件事情是可以天生的被

1733
00:58:56,000 --> 00:58:57,000
批量的

1734
00:58:57,000 --> 00:58:59,000
以流水线的方式并行处理的

1735
00:58:59,000 --> 00:59:00,000
所以

1736
00:59:00,000 --> 00:59:01,000
也就是因为

1737
00:59:01,000 --> 00:59:03,000
这种问题的特别性

1738
00:59:03,000 --> 00:59:05,000
所以才会有 GPU 这种东西出现

1739
00:59:06,000 --> 00:59:07,000
而且就是 GPU

1740
00:59:07,000 --> 00:59:08,000
如果你能

1741
00:59:08,000 --> 00:59:09,000
你的问题可以被

1742
00:59:09,000 --> 00:59:10,000
简化为

1743
00:59:11,000 --> 00:59:13,000
或者不叫复杂化为

1744
00:59:13,000 --> 00:59:15,000
GPU 那种适合模型的话

1745
00:59:15,000 --> 00:59:16,000
你能获得到

1746
00:59:16,000 --> 00:59:16,000
所以的

1747
00:59:16,000 --> 00:59:17,000
春图能力就是

1748
00:59:17,000 --> 00:59:18,000
thrippled

1749
00:59:18,000 --> 00:59:20,000
是非常非常惊人的

1750
00:59:20,000 --> 00:59:21,000
没错

1751
00:59:21,000 --> 00:59:22,000
而反过来讲

1752
00:59:22,000 --> 00:59:23,000
这也就是为什么很多

1753
00:59:23,000 --> 00:59:26,000
跟 GPU 跟图像处理

1754
00:59:26,000 --> 00:59:27,000
其实没有任何联系的事情

1755
00:59:27,000 --> 00:59:28,000
可以交由 GPU 来做

1756
00:59:28,000 --> 00:59:30,000
比如说

1757
00:59:30,000 --> 00:59:32,000
Bitcoin mining

1758
00:59:32,000 --> 00:59:33,000
有 GPU

1759
00:59:33,000 --> 00:59:36,000
就是因为他其实也是一个可以

1760
00:59:36,000 --> 00:59:37,000
天生的

1761
00:59:37,000 --> 00:59:37,000
被

1762
00:59:38,000 --> 00:59:39,000
很好的病情处理

1763
00:59:39,000 --> 00:59:40,000
任务

1764
00:59:41,000 --> 00:59:42,000
对这一类问题

1765
00:59:42,000 --> 00:59:43,000
我们一般有一个

1766
00:59:43,000 --> 00:59:45,000
就所谓的一个名称

1767
00:59:45,000 --> 00:59:46,000
专有名称

1768
00:59:46,000 --> 00:59:47,000
说这种叫做

1769
00:59:47,000 --> 00:59:50,000
embarassally paralysable task

1770
00:59:50,000 --> 00:59:50,000
对不对

1771
00:59:51,000 --> 00:59:52,000
就非常尴尬的

1772
00:59:52,000 --> 00:59:55,000
可以被病情化之心的问题

1773
00:59:55,000 --> 00:59:55,000
没错

1774
00:59:55,000 --> 00:59:56,000
这就好像

1775
00:59:58,000 --> 00:59:59,000
罚你

1776
00:59:59,000 --> 01:00:00,000
小学的时候

1777
01:00:00,000 --> 01:00:01,000
罚你把某一句话

1778
01:00:01,000 --> 01:00:03,000
超级百天

1779
01:00:04,000 --> 01:00:05,000
大家会用五支比

1780
01:00:06,000 --> 01:00:08,000
五支比可能非常惊人的

1781
01:00:08,000 --> 01:00:10,000
非常了不起的效果

1782
01:00:10,000 --> 01:00:10,000
办法

1783
01:00:10,000 --> 01:00:11,000
图理在一起

1784
01:00:11,000 --> 01:00:13,000
一般人用三支比

1785
01:00:13,000 --> 01:00:13,000
同时超课

1786
01:00:13,000 --> 01:00:14,000
而是可以做到

1787
01:00:15,000 --> 01:00:16,000
把一个字写两千遍

1788
01:00:16,000 --> 01:00:18,000
这就是一个非常

1789
01:00:18,000 --> 01:00:22,000
embarassally paralysable task

1790
01:00:23,000 --> 01:00:24,000
没错

1791
01:00:24,000 --> 01:00:24,000
对

1792
01:00:24,000 --> 01:00:25,000
其实这是一个很好的意思

1793
01:00:25,000 --> 01:00:26,000
就是

1794
01:00:27,000 --> 01:00:28,000
把某一次超级前遍

1795
01:00:28,000 --> 01:00:30,000
其实就是一个

1796
01:00:30,000 --> 01:00:31,000
其实就是一个

1797
01:00:32,000 --> 01:00:33,000
并不是非常 concernsy

1798
01:00:33,000 --> 01:00:35,000
但是可以被 pares 来

1799
01:00:35,000 --> 01:00:36,000
执行的任务

1800
01:00:37,000 --> 01:00:39,000
所以有一件事情是可以

1801
01:00:39,000 --> 01:00:39,000
确定的就是

1802
01:00:39,000 --> 01:00:42,000
现代的编程世界是离开了

1803
01:00:42,000 --> 01:00:43,000
并发模型

1804
01:00:43,000 --> 01:00:44,000
基本上是

1805
01:00:44,000 --> 01:00:46,000
或者说病情处理能力是

1806
01:00:46,000 --> 01:00:47,000
是没有办法

1807
01:00:48,000 --> 01:00:49,000
没有办法继续下去的

1808
01:00:49,000 --> 01:00:50,000
配件说

1809
01:00:50,000 --> 01:00:51,000
就是比较传统的

1810
01:00:51,000 --> 01:00:53,000
所谓 SikinShop Programming Model

1811
01:00:53,000 --> 01:00:53,000
是

1812
01:00:54,000 --> 01:00:57,000
在现代的编程领域

1813
01:00:57,000 --> 01:00:58,000
所谓处理的问题面前

1814
01:00:58,000 --> 01:01:00,000
是毫无环境指令的

1815
01:01:00,000 --> 01:01:02,000
所以我们无论如何是需要

1816
01:01:03,000 --> 01:01:04,000
Parlalysal

1817
01:01:05,000 --> 01:01:06,000
问题就来了

1818
01:01:06,000 --> 01:01:07,000
就是 Parlalysal

1819
01:01:07,000 --> 01:01:08,000
其实是一个

1820
01:01:10,000 --> 01:01:11,000
怎么说的描述起来

1821
01:01:11,000 --> 01:01:12,000
比较简单的感觉

1822
01:01:12,000 --> 01:01:14,000
或者当你做起来很复杂

1823
01:01:14,000 --> 01:01:15,000
但做起来

1824
01:01:15,000 --> 01:01:16,000
人们不同的人

1825
01:01:16,000 --> 01:01:18,000
有不同的意见的

1826
01:01:18,000 --> 01:01:20,000
这么一个意见事情

1827
01:01:20,000 --> 01:01:21,000
就

1828
01:01:21,000 --> 01:01:23,000
最最简单的一个

1829
01:01:23,000 --> 01:01:25,000
一种病发模型

1830
01:01:25,000 --> 01:01:26,000
或者说病情模型

1831
01:01:27,000 --> 01:01:28,000
我觉得这下的节目

1832
01:01:28,000 --> 01:01:29,000
我们还是会用病发和病情

1833
01:01:29,000 --> 01:01:30,000
这个死了

1834
01:01:30,000 --> 01:01:31,000
不然谁在派来

1835
01:01:33,000 --> 01:01:33,000
你说

1836
01:01:33,000 --> 01:01:35,000
就是在不缺分

1837
01:01:35,000 --> 01:01:36,000
这个不严格

1838
01:01:36,000 --> 01:01:37,000
缺分病发

1839
01:01:37,000 --> 01:01:39,000
病情的长了情况下

1840
01:01:39,000 --> 01:01:41,000
这两者有时候又是在混用的

1841
01:01:42,000 --> 01:01:42,000
对 没错

1842
01:01:44,000 --> 01:01:44,000
对

1843
01:01:44,000 --> 01:01:45,000
所以接下来的

1844
01:01:46,000 --> 01:01:47,000
自接下来

1845
01:01:47,000 --> 01:01:47,000
当我说

1846
01:01:47,000 --> 01:01:48,000
病发模型的时候

1847
01:01:48,000 --> 01:01:50,000
我其实我的意思有可能是病情模型

1848
01:01:52,000 --> 01:01:54,000
但我说病情模型的时候

1849
01:01:54,000 --> 01:01:55,000
一般肯定是在长病情模型

1850
01:01:57,000 --> 01:01:57,000
对

1851
01:01:57,000 --> 01:01:58,000
所以

1852
01:01:59,000 --> 01:02:01,000
最基本的一种病情模型是什么的

1853
01:02:02,000 --> 01:02:03,000
我觉得是 Street

1854
01:02:04,000 --> 01:02:05,000
现场

1855
01:02:05,000 --> 01:02:06,000
或者说

1856
01:02:06,000 --> 01:02:10,000
应该说最基本的一种病型模型

1857
01:02:10,000 --> 01:02:12,000
应该是多进程

1858
01:02:13,000 --> 01:02:14,000
Multiprocess

1859
01:02:14,000 --> 01:02:17,000
如果真的要追根说远的话

1860
01:02:17,000 --> 01:02:19,000
那应该可能还是

1861
01:02:19,000 --> 01:02:22,000
多进程线于多线程出现的吧

1862
01:02:22,000 --> 01:02:23,000
没错

1863
01:02:23,000 --> 01:02:25,000
因为起码在

1864
01:02:25,000 --> 01:02:26,000
我觉得 Lina Sennel 对于是

1865
01:02:26,000 --> 01:02:29,000
非常晚进才出现多线程

1866
01:02:29,000 --> 01:02:31,000
最开始的意识就是多进程的模型

1867
01:02:31,000 --> 01:02:31,000
对

1868
01:02:31,000 --> 01:02:32,000
因为在零字上

1869
01:02:32,000 --> 01:02:35,000
开一个进程的方法

1870
01:02:35,000 --> 01:02:37,000
开一个进程要比开一个现场简单

1871
01:02:38,000 --> 01:02:38,000
对

1872
01:02:38,000 --> 01:02:40,000
而且开销也不是特别大

1873
01:02:40,000 --> 01:02:43,000
就是多一个进程的开销是相对小的

1874
01:02:44,000 --> 01:02:44,000
对

1875
01:02:44,000 --> 01:02:46,000
这里几乎是我们就不解释了

1876
01:02:46,000 --> 01:02:47,000
但是

1877
01:02:49,000 --> 01:02:51,000
其最根本的想法

1878
01:02:51,000 --> 01:02:53,000
就是在一个编程园里面

1879
01:02:53,000 --> 01:02:55,000
如果我们要利用多进程

1880
01:02:55,000 --> 01:02:56,000
或是多线程了吗

1881
01:02:56,000 --> 01:02:56,000
好

1882
01:02:56,000 --> 01:02:58,000
那我就显示地写出来

1883
01:02:59,000 --> 01:03:00,000
这里请开一个新的进程

1884
01:03:00,000 --> 01:03:01,000
或者 LiuFork

1885
01:03:01,000 --> 01:03:02,000
或者怎么样

1886
01:03:02,000 --> 01:03:04,000
然后或者说在这里

1887
01:03:04,000 --> 01:03:06,000
请开一个新的线程

1888
01:03:07,000 --> 01:03:08,000
用 Street

1889
01:03:11,000 --> 01:03:13,000
然后这就是非常

1890
01:03:13,000 --> 01:03:14,000
简单

1891
01:03:15,000 --> 01:03:16,000
直接

1892
01:03:16,000 --> 01:03:17,000
至少对硬件来说

1893
01:03:17,000 --> 01:03:19,000
非常简单直接的一种

1894
01:03:19,000 --> 01:03:21,000
并行开发的模型

1895
01:03:23,000 --> 01:03:25,000
但是这种并行开发的模型

1896
01:03:25,000 --> 01:03:25,000
有一个问题

1897
01:03:25,000 --> 01:03:27,000
就是对于程序来说比较挑战

1898
01:03:28,000 --> 01:03:28,000
因为

1899
01:03:29,000 --> 01:03:32,000
受限于我们只有一个大大的限制

1900
01:03:32,000 --> 01:03:34,000
或说我们的思维天生

1901
01:03:34,000 --> 01:03:34,000
就是一个

1902
01:03:34,000 --> 01:03:36,000
现行的思维

1903
01:03:36,000 --> 01:03:38,000
一个单线程的

1904
01:03:38,000 --> 01:03:39,000
一个单进程的思维

1905
01:03:39,000 --> 01:03:40,000
所以

1906
01:03:40,000 --> 01:03:43,000
在理解多进程的时候

1907
01:03:44,000 --> 01:03:45,000
会有一个

1908
01:03:45,000 --> 01:03:47,000
会有一个卡

1909
01:03:47,000 --> 01:03:48,000
我不知道你怎么样

1910
01:03:48,000 --> 01:03:51,000
但是当我写出人生第一个

1911
01:03:51,000 --> 01:03:52,000
多进程的程序的时候

1912
01:03:52,000 --> 01:03:53,000
我是

1913
01:03:54,000 --> 01:03:55,000
我是愣了很久了

1914
01:03:55,000 --> 01:03:56,000
就是

1915
01:03:56,000 --> 01:03:57,000
我需要

1916
01:03:57,000 --> 01:04:00,000
我需要去拥有那种精神分裂的能力

1917
01:04:00,000 --> 01:04:01,000
就是在这个地方

1918
01:04:01,000 --> 01:04:02,000
需要判断说

1919
01:04:02,000 --> 01:04:03,000
我的 PID 是 0

1920
01:04:04,000 --> 01:04:06,000
那我是一个新的进程

1921
01:04:09,000 --> 01:04:10,000
那接下来我所要做这件事情

1922
01:04:11,000 --> 01:04:12,000
然后另外一些事情

1923
01:04:12,000 --> 01:04:14,000
则要在我的附近程里面进行

1924
01:04:14,000 --> 01:04:15,000
然后这个时候我就会有一种

1925
01:04:16,000 --> 01:04:16,000
会有一种

1926
01:04:17,000 --> 01:04:18,000
会有一种

1927
01:04:19,000 --> 01:04:19,000
事情很容易

1928
01:04:19,000 --> 01:04:20,000
真的感谢

1929
01:04:20,000 --> 01:04:20,000
对

1930
01:04:20,000 --> 01:04:21,000
会有一种非常敬佛的感觉

1931
01:04:21,000 --> 01:04:22,000
就会觉得说

1932
01:04:23,000 --> 01:04:23,000
好吧

1933
01:04:23,000 --> 01:04:24,000
那

1934
01:04:25,000 --> 01:04:26,000
计算机

1935
01:04:27,000 --> 01:04:28,000
解释这一切的时候

1936
01:04:28,000 --> 01:04:29,000
可能会比较

1937
01:04:29,000 --> 01:04:30,000
比较方便

1938
01:04:30,000 --> 01:04:31,000
但是

1939
01:04:31,000 --> 01:04:32,000
我就会不停地去想说

1940
01:04:32,000 --> 01:04:33,000
那我现在是在附近程里

1941
01:04:33,000 --> 01:04:34,000
还是在紫金程里面

1942
01:04:35,000 --> 01:04:36,000
那我做完这件事情

1943
01:04:36,000 --> 01:04:38,000
我要回到附近程里面

1944
01:04:38,000 --> 01:04:40,000
那附近程没有做收尾工作

1945
01:04:40,000 --> 01:04:41,000
可是万一紫金程没有

1946
01:04:42,000 --> 01:04:43,000
即时的完成这件事情

1947
01:04:43,000 --> 01:04:45,000
附近程要等它吗

1948
01:04:45,000 --> 01:04:46,000
就是

1949
01:04:47,000 --> 01:04:48,000
在

1950
01:04:48,000 --> 01:04:50,000
我记得在

1951
01:04:50,000 --> 01:04:52,000
学操线还是什么的时候

1952
01:04:52,000 --> 01:04:54,000
有很大一个

1953
01:04:54,000 --> 01:04:55,000
篇幅都是在讲

1954
01:04:55,000 --> 01:04:56,000
多进程

1955
01:04:56,000 --> 01:04:58,000
或者多进程的实现原例的

1956
01:04:58,000 --> 01:04:59,000
就比如说什么

1957
01:04:59,000 --> 01:05:01,000
很多很经典的

1958
01:05:01,000 --> 01:05:02,000
数学问题

1959
01:05:02,000 --> 01:05:03,000
数学模型

1960
01:05:03,000 --> 01:05:04,000
也是在这个

1961
01:05:04,000 --> 01:05:05,000
领域被提出来

1962
01:05:05,000 --> 01:05:06,000
比如说什么

1963
01:05:06,000 --> 01:05:07,000
我忘了

1964
01:05:07,000 --> 01:05:08,000
桌下家吃饭的问题

1965
01:05:08,000 --> 01:05:09,000
就是什么

1966
01:05:09,000 --> 01:05:10,000
一个桌下

1967
01:05:10,000 --> 01:05:11,000
左边是到右边的差

1968
01:05:11,000 --> 01:05:12,000
对

1969
01:05:12,000 --> 01:05:13,000
Dynamic Philosophers

1970
01:05:13,000 --> 01:05:14,000
没错

1971
01:05:15,000 --> 01:05:16,000
等等

1972
01:05:16,000 --> 01:05:17,000
而且我觉得

1973
01:05:17,000 --> 01:05:18,000
我印象远没几错的话

1974
01:05:18,000 --> 01:05:19,000
这本书的

1975
01:05:19,000 --> 01:05:21,000
英文版里面

1976
01:05:21,000 --> 01:05:23,000
桌下是左手刀

1977
01:05:23,000 --> 01:05:24,000
左手刀右手差

1978
01:05:24,000 --> 01:05:25,000
然后到中文版里面

1979
01:05:25,000 --> 01:05:26,000
变成了桌下

1980
01:05:26,000 --> 01:05:28,000
左右各一只筷子

1981
01:05:28,000 --> 01:05:29,000
只有

1982
01:05:29,000 --> 01:05:30,000
就是这个地方

1983
01:05:30,000 --> 01:05:31,000
要本地化一下

1984
01:05:31,000 --> 01:05:33,000
你去拿到两只筷子

1985
01:05:33,000 --> 01:05:34,000
可以进餐

1986
01:05:34,000 --> 01:05:35,000
对

1987
01:05:35,000 --> 01:05:36,000
我记得那个时候

1988
01:05:36,000 --> 01:05:37,000
特别可笑

1989
01:05:37,000 --> 01:05:38,000
当时

1990
01:05:38,000 --> 01:05:39,000
课程上有个同学

1991
01:05:39,000 --> 01:05:40,000
讲了一个笑话

1992
01:05:40,000 --> 01:05:41,000
就说

1993
01:05:41,000 --> 01:05:42,000
他们为什么不都

1994
01:05:42,000 --> 01:05:43,000
换成长勺子

1995
01:05:43,000 --> 01:05:45,000
然后互相卫饭之上

1996
01:05:45,000 --> 01:05:46,000
这就跟

1997
01:05:46,000 --> 01:05:48,000
另外一个

1998
01:05:48,000 --> 01:05:49,000
也是

1999
01:05:49,000 --> 01:05:50,000
直觉上一个

2000
01:05:50,000 --> 01:05:51,000
一个笑话

2001
01:05:51,000 --> 01:05:52,000
联系了

2002
01:05:52,000 --> 01:05:53,000
就是说

2003
01:05:53,000 --> 01:05:54,000
直觉上说

2004
01:05:54,000 --> 01:05:55,000
有一个

2005
01:05:55,000 --> 01:05:56,000
一堆人

2006
01:05:56,000 --> 01:05:57,000
围坐在一口锅前面

2007
01:05:57,000 --> 01:05:58,000
要吃饭

2008
01:05:58,000 --> 01:05:59,000
但是每个人

2009
01:05:59,000 --> 01:06:00,000
勺子都特别长

2010
01:06:00,000 --> 01:06:01,000
没有办法

2011
01:06:01,000 --> 01:06:02,000
把它撞过来

2012
01:06:02,000 --> 01:06:03,000
为自己

2013
01:06:03,000 --> 01:06:04,000
吃饭

2014
01:06:04,000 --> 01:06:05,000
所以每个人

2015
01:06:05,000 --> 01:06:06,000
必须去

2016
01:06:06,000 --> 01:06:07,000
围对方吃饭

2017
01:06:07,000 --> 01:06:09,000
所有人才不会饿死

2018
01:06:09,000 --> 01:06:10,000
然后

2019
01:06:10,000 --> 01:06:11,000
这个故事

2020
01:06:11,000 --> 01:06:12,000
被他在这边

2021
01:06:12,000 --> 01:06:13,000
转移到这个

2022
01:06:13,000 --> 01:06:14,000
整个家饿死了

2023
01:06:14,000 --> 01:06:15,000
你以为

2024
01:06:15,000 --> 01:06:16,000
我觉得当时特别有席了

2025
01:06:16,000 --> 01:06:18,000
哈哈哈

2026
01:06:20,000 --> 01:06:21,000
刚才讲

2027
01:06:21,000 --> 01:06:22,000
你说这个

2028
01:06:22,000 --> 01:06:23,000
病情

2029
01:06:23,000 --> 01:06:24,000
病情变成

2030
01:06:24,000 --> 01:06:25,000
Parlah Programming

2031
01:06:25,000 --> 01:06:27,000
有一个核心的问题

2032
01:06:27,000 --> 01:06:28,000
就是可能对

2033
01:06:28,000 --> 01:06:29,000
程序原的要求

2034
01:06:29,000 --> 01:06:30,000
就

2035
01:06:30,000 --> 01:06:31,000
就

2036
01:06:31,000 --> 01:06:33,000
数量级的提高吧

2037
01:06:33,000 --> 01:06:34,000
因为

2038
01:06:34,000 --> 01:06:35,000
确实

2039
01:06:35,000 --> 01:06:36,000
你所说这个人的思维

2040
01:06:36,000 --> 01:06:37,000
很多人

2041
01:06:37,000 --> 01:06:38,000
它是一个单线的一个过程

2042
01:06:38,000 --> 01:06:39,000
没办法去同时考虑

2043
01:06:39,000 --> 01:06:40,000
你大脑

2044
01:06:40,000 --> 01:06:42,000
不是一个多好多核的东西吗

2045
01:06:42,000 --> 01:06:43,000
没错

2046
01:06:43,000 --> 01:06:44,000
那么

2047
01:06:44,000 --> 01:06:45,000
其实

2048
01:06:45,000 --> 01:06:46,000
就可能在传统的

2049
01:06:46,000 --> 01:06:47,000
思维线性变成的情况下

2050
01:06:47,000 --> 01:06:50,000
你的思维逻辑

2051
01:06:50,000 --> 01:06:52,000
跟着这个程序带马走一遍

2052
01:06:52,000 --> 01:06:53,000
你也知道

2053
01:06:53,000 --> 01:06:54,000
机船机也是这么执行的

2054
01:06:54,000 --> 01:06:56,000
并且不会有任何人干扰你中间这个

2055
01:06:56,000 --> 01:06:57,000
执行的步骤

2056
01:06:57,000 --> 01:06:59,000
当然可能中断了那些什么除外啊

2057
01:06:59,000 --> 01:07:00,000
对

2058
01:07:00,000 --> 01:07:02,000
但是在一个

2059
01:07:02,000 --> 01:07:03,000
病情的条件下

2060
01:07:03,000 --> 01:07:05,000
这个事情就变得非常贵意了

2061
01:07:05,000 --> 01:07:08,000
就是如果你不考虑什么所的那些机制啊

2062
01:07:08,000 --> 01:07:09,000
那么同步机制的话

2063
01:07:09,000 --> 01:07:11,000
它是有无限多种可能

2064
01:07:11,000 --> 01:07:12,000
有两个

2065
01:07:12,000 --> 01:07:14,000
就是两个或者多个

2066
01:07:14,000 --> 01:07:15,000
这种线程也好

2067
01:07:15,000 --> 01:07:16,000
进程也好

2068
01:07:16,000 --> 01:07:17,000
我们叫做 interliving 嘛

2069
01:07:17,000 --> 01:07:19,000
就是互相交支的

2070
01:07:19,000 --> 01:07:20,000
互相交支对

2071
01:07:20,000 --> 01:07:21,000
对

2072
01:07:21,000 --> 01:07:22,000
这时候你就很难去看

2073
01:07:22,000 --> 01:07:23,000
看明白说

2074
01:07:23,000 --> 01:07:24,000
或者说

2075
01:07:24,000 --> 01:07:27,000
你要你的脑袋重要装的那个

2076
01:07:27,000 --> 01:07:28,000
那个 state space

2077
01:07:28,000 --> 01:07:29,000
就是它

2078
01:07:29,000 --> 01:07:30,000
你到这一步的时候

2079
01:07:30,000 --> 01:07:31,000
其他人可能会怎么样

2080
01:07:31,000 --> 01:07:34,000
这种东西它就是一个指数增长的东西

2081
01:07:34,000 --> 01:07:36,000
所以这个时候对人的思维挑战

2082
01:07:36,000 --> 01:07:38,000
确实是一个极其困难的一件过程

2083
01:07:38,000 --> 01:07:39,000
一个过程

2084
01:07:39,000 --> 01:07:40,000
而且

2085
01:07:40,000 --> 01:07:41,000
就为了解这个问题

2086
01:07:41,000 --> 01:07:43,000
就是那也很多这种方案嘛

2087
01:07:43,000 --> 01:07:44,000
比如说

2088
01:07:44,000 --> 01:07:46,000
最可能我们听的最多的一条

2089
01:07:46,000 --> 01:07:47,000
就说

2090
01:07:47,000 --> 01:07:49,000
share the mutable state is bad

2091
01:07:49,000 --> 01:07:50,000
is evil

2092
01:07:50,000 --> 01:07:51,000
如果你是

2093
01:07:51,000 --> 01:07:52,000
你是并行

2094
01:07:52,000 --> 01:07:54,000
并行编程的东西

2095
01:07:54,000 --> 01:07:55,000
然后你还要

2096
01:07:55,000 --> 01:07:56,000
多个线程也好

2097
01:07:56,000 --> 01:07:57,000
进程也好

2098
01:07:57,000 --> 01:08:00,000
去共同时访问一个可以被改写的

2099
01:08:00,000 --> 01:08:01,000
一个

2100
01:08:01,000 --> 01:08:04,000
内存区域或者是编辆或者文件也好

2101
01:08:04,000 --> 01:08:05,000
这个时候你就非常困难了

2102
01:08:05,000 --> 01:08:06,000
因为你没有办法

2103
01:08:06,000 --> 01:08:07,000
从

2104
01:08:07,000 --> 01:08:09,000
从那个

2105
01:08:09,000 --> 01:08:11,000
被改写的区域的角度来看

2106
01:08:11,000 --> 01:08:14,000
你能预测到会产生什么样的组合

2107
01:08:14,000 --> 01:08:15,000
因为这个组合是不确定性的

2108
01:08:15,000 --> 01:08:16,000
是一个叫做

2109
01:08:16,000 --> 01:08:17,000
internetistic

2110
01:08:17,000 --> 01:08:21,000
不确定性的一个过程

2111
01:08:21,000 --> 01:08:22,000
没错

2112
01:08:22,000 --> 01:08:23,000
所以

2113
01:08:23,000 --> 01:08:25,000
最多时候我们的一个解写方案就是

2114
01:08:25,000 --> 01:08:27,000
那么最好就是叫做 share the mutable state

2115
01:08:27,000 --> 01:08:29,000
就是一切都不要共享的结构

2116
01:08:29,000 --> 01:08:31,000
这样的话有什么好处呢

2117
01:08:31,000 --> 01:08:32,000
这样你就可以

2118
01:08:32,000 --> 01:08:35,000
在并行的话你一下对于某一个线程

2119
01:08:35,000 --> 01:08:36,000
或者是进程也好

2120
01:08:36,000 --> 01:08:38,000
你不用考虑它和别的进程

2121
01:08:38,000 --> 01:08:40,000
和线程的交货怎么样

2122
01:08:40,000 --> 01:08:43,000
你只能考虑它自己本身是个线性的纯续

2123
01:08:43,000 --> 01:08:44,000
走下去就好了

2124
01:08:44,000 --> 01:08:46,000
这个时候就等于说是

2125
01:08:46,000 --> 01:08:47,000
把一个

2126
01:08:47,000 --> 01:08:48,000
并行的问题

2127
01:08:48,000 --> 01:08:50,000
变成了一个线性的

2128
01:08:50,000 --> 01:08:51,000
串形的问题来解决了

2129
01:08:51,000 --> 01:08:54,000
但实际上这种情况是

2130
01:08:54,000 --> 01:08:56,000
不太可行的

2131
01:08:56,000 --> 01:08:59,000
有一些比较极端的例子是

2132
01:08:59,000 --> 01:09:01,000
所谓这种虚而纳肯结构的东西

2133
01:09:01,000 --> 01:09:03,000
比如说我们有很多的网页服务器

2134
01:09:03,000 --> 01:09:04,000
它可能就是

2135
01:09:04,000 --> 01:09:06,000
比如说 upatch 就是一个很典型的例子

2136
01:09:06,000 --> 01:09:07,000
它每一个

2137
01:09:07,000 --> 01:09:09,000
请求来它可能都是开一个新的进程

2138
01:09:09,000 --> 01:09:11,000
或者开一个新的线程来

2139
01:09:11,000 --> 01:09:12,000
想硬这个进程

2140
01:09:12,000 --> 01:09:14,000
然后想一完毕这个进程

2141
01:09:14,000 --> 01:09:15,000
或者线程也就被杀掉了

2142
01:09:15,000 --> 01:09:16,000
但这个传统的模型

2143
01:09:16,000 --> 01:09:18,000
然后在这个

2144
01:09:18,000 --> 01:09:19,000
想硬这个进程

2145
01:09:19,000 --> 01:09:21,000
或者是进程直升的过程中

2146
01:09:21,000 --> 01:09:22,000
它你是不用考虑

2147
01:09:22,000 --> 01:09:24,000
别的线程和进程怎么样

2148
01:09:24,000 --> 01:09:25,000
因为你没有共享任何东西

2149
01:09:25,000 --> 01:09:27,000
但是在实际上用中

2150
01:09:27,000 --> 01:09:29,000
很多时候你确实是要共享的东西

2151
01:09:29,000 --> 01:09:31,000
比如说我们现在很多做的

2152
01:09:31,000 --> 01:09:32,000
webapp 对吧

2153
01:09:32,000 --> 01:09:34,000
你是要访问一个共享的数据库的

2154
01:09:34,000 --> 01:09:36,000
那你可能要访问一个

2155
01:09:36,000 --> 01:09:39,000
同一个共享的数据库的

2156
01:09:39,000 --> 01:09:40,000
可能要改写东西

2157
01:09:40,000 --> 01:09:42,000
这个时候你又变成

2158
01:09:42,000 --> 01:09:44,000
本来是一个 shared not an old

2159
01:09:44,000 --> 01:09:46,000
又变成一个 shared new to the board state

2160
01:09:46,000 --> 01:09:47,000
这样的话

2161
01:09:47,000 --> 01:09:49,000
整个模型就又变得很复杂

2162
01:09:49,000 --> 01:09:51,000
而且拿于测试起来了

2163
01:09:51,000 --> 01:09:53,000
现成加上所这种结构

2164
01:09:53,000 --> 01:09:56,000
就好像一个到处漏水的桶

2165
01:09:56,000 --> 01:09:59,000
你总会觉得我堵住这个孔就没问题了

2166
01:09:59,000 --> 01:10:00,000
但是因为你堵住这个孔

2167
01:10:00,000 --> 01:10:01,000
所以水压变高了

2168
01:10:01,000 --> 01:10:03,000
它会从另外一桶漏出来

2169
01:10:03,000 --> 01:10:04,000
所以

2170
01:10:04,000 --> 01:10:05,000
对

2171
01:10:05,000 --> 01:10:07,000
有时候用现成所变成的时候

2172
01:10:07,000 --> 01:10:09,000
你会觉得自己不仅

2173
01:10:09,000 --> 01:10:13,000
思考的成绩非常低

2174
01:10:13,000 --> 01:10:15,000
就是你会被破字

2175
01:10:15,000 --> 01:10:20,000
你破字强不自己像像一个现成过程器量去思考

2176
01:10:20,000 --> 01:10:22,000
而且于此同时你会发现

2177
01:10:22,000 --> 01:10:23,000
解决了一个问题

2178
01:10:23,000 --> 01:10:25,000
另外一个问题又冒出来

2179
01:10:25,000 --> 01:10:26,000
对

2180
01:10:26,000 --> 01:10:27,000
对

2181
01:10:27,000 --> 01:10:28,000
故此失比吗

2182
01:10:28,000 --> 01:10:29,000
没错

2183
01:10:29,000 --> 01:10:30,000
故此失比

2184
01:10:30,000 --> 01:10:32,000
这个时候为什么虽然现成

2185
01:10:32,000 --> 01:10:35,000
或者说多现成或者多现成加上所这种机制

2186
01:10:35,000 --> 01:10:37,000
在几乎所有像样的

2187
01:10:37,000 --> 01:10:40,000
现在一点的成绩里面都有支持

2188
01:10:40,000 --> 01:10:42,000
但是用好

2189
01:10:42,000 --> 01:10:44,000
他们却是非常

2190
01:10:44,000 --> 01:10:45,000
非常难

2191
01:10:45,000 --> 01:10:49,000
而且我觉得这种难是没有必要的一种难的事情

2192
01:10:49,000 --> 01:10:51,000
就是这也是一个

2193
01:10:51,000 --> 01:10:52,000
可能不是一个太好的抽象

2194
01:10:52,000 --> 01:10:54,000
就得出的这么一个

2195
01:10:54,000 --> 01:10:55,000
对

2196
01:10:55,000 --> 01:10:56,000
它的抽象藏机可能实在是太低了

2197
01:10:56,000 --> 01:10:57,000
就有点像

2198
01:10:57,000 --> 01:11:00,000
后来说它的抽象的那个角度是错的

2199
01:11:01,000 --> 01:11:03,000
或者说它怎么说的

2200
01:11:03,000 --> 01:11:07,000
我觉得它抽象的角度没有错不错

2201
01:11:07,000 --> 01:11:10,000
因为在操作用的成绩上

2202
01:11:10,000 --> 01:11:12,000
并行就是这么被实现的

2203
01:11:12,000 --> 01:11:16,000
它与其说它的抽象角度是错的

2204
01:11:16,000 --> 01:11:19,000
不如说它所抽象的东西是太少了

2205
01:11:19,000 --> 01:11:22,000
基本上你要从非常底层的

2206
01:11:22,000 --> 01:11:24,000
不够有有的抽象对不对

2207
01:11:24,000 --> 01:11:25,000
没错

2208
01:11:25,000 --> 01:11:27,000
这就是为什么

2209
01:11:27,000 --> 01:11:31,000
接下来我们会提到其他的

2210
01:11:31,000 --> 01:11:33,000
并行模型

2211
01:11:33,000 --> 01:11:34,000
他们是从

2212
01:11:34,000 --> 01:11:38,000
他们是从不同的角度去解决这个问题

2213
01:11:38,000 --> 01:11:40,000
但是如果没说错的话

2214
01:11:40,000 --> 01:11:46,000
很多并行模型的基本实现的原理

2215
01:11:46,000 --> 01:11:48,000
还是通过现成的所

2216
01:11:49,000 --> 01:11:51,000
就底层它是这么实现的

2217
01:11:51,000 --> 01:11:54,000
但是它暴露给开发者或者成续员

2218
01:11:54,000 --> 01:11:56,000
的这么一个接口

2219
01:11:56,000 --> 01:11:59,000
或者是一个表象它你看不到那些东西了

2220
01:11:59,000 --> 01:12:00,000
对

2221
01:12:00,000 --> 01:12:03,000
其实是回到我们前很多期

2222
01:12:03,000 --> 01:12:07,000
至少很长时间以前讲的风装的

2223
01:12:07,000 --> 01:12:10,000
那么一个问题领域

2224
01:12:10,000 --> 01:12:13,000
就是我们今天要介绍了

2225
01:12:13,000 --> 01:12:15,000
几种并发模型

2226
01:12:15,000 --> 01:12:19,000
其实是对于多现成加锁的这样一种风装

2227
01:12:19,000 --> 01:12:21,000
但是这种风装

2228
01:12:21,000 --> 01:12:23,000
当你熟悉了它之后

2229
01:12:23,000 --> 01:12:30,000
你们发现它在很大程度上增加了你思考的方便程度

2230
01:12:30,000 --> 01:12:32,000
或者让你变得更像一个人了

2231
01:12:32,000 --> 01:12:34,000
好像不像一个机器

2232
01:12:34,000 --> 01:12:37,000
不用再在同脑中摩尼费尽的

2233
01:12:37,000 --> 01:12:40,000
用一个单核处理器的大脑去摩尼

2234
01:12:40,000 --> 01:12:42,000
一个多核处理器的 CPU 了

2235
01:12:42,000 --> 01:12:44,000
对 没错

2236
01:12:44,000 --> 01:12:48,000
那你觉得

2237
01:12:48,000 --> 01:12:51,000
除了多现成的模型之外

2238
01:12:51,000 --> 01:12:55,000
哪一种并发模型是最简单

2239
01:12:55,000 --> 01:12:57,000
或者说最直接

2240
01:12:57,000 --> 01:13:00,000
能够让人比较方便结束了

2241
01:13:00,000 --> 01:13:04,000
但最好就是不要让我去想

2242
01:13:04,000 --> 01:13:07,000
去让我思考有这些底层

2243
01:13:07,000 --> 01:13:10,000
最理想的模型是不要让我思考

2244
01:13:10,000 --> 01:13:12,000
有这么一些东西存在的东西

2245
01:13:12,000 --> 01:13:15,000
那可能用从语言层面上来解决这个问题的话

2246
01:13:15,000 --> 01:13:17,000
如果你能实现

2247
01:13:17,000 --> 01:13:19,000
我们传统意义上的什么

2248
01:13:19,000 --> 01:13:22,000
Fb 就是韩术师编程的话

2249
01:13:22,000 --> 01:13:24,000
这可能就在根本不用考虑这个问题了

2250
01:13:24,000 --> 01:13:26,000
因为韩术师编程

2251
01:13:26,000 --> 01:13:29,000
每一个韩术再存萃的一个韩术师编程里面

2252
01:13:29,000 --> 01:13:32,000
所谓的韩术都是所谓的确定性结果的嘛

2253
01:13:32,000 --> 01:13:33,000
这样的话

2254
01:13:33,000 --> 01:13:35,000
不管你怎么去执行它

2255
01:13:35,000 --> 01:13:36,000
你懂得得到一个确定性的解的

2256
01:13:36,000 --> 01:13:38,000
那我不管你是顺利去执行

2257
01:13:38,000 --> 01:13:40,000
并发执行像是怎么样

2258
01:13:40,000 --> 01:13:41,000
一个什么一阵一组合

2259
01:13:41,000 --> 01:13:42,000
我都不用管

2260
01:13:42,000 --> 01:13:43,000
我这种考虑

2261
01:13:43,000 --> 01:13:44,000
这个韩术是这么写的

2262
01:13:44,000 --> 01:13:46,000
我输入这个数得到这个结果

2263
01:13:46,000 --> 01:13:47,000
那就完了

2264
01:13:47,000 --> 01:13:49,000
就根本不存在并发

2265
01:13:49,000 --> 01:13:50,000
并行这些概念在里面

2266
01:13:50,000 --> 01:13:51,000
没错

2267
01:13:51,000 --> 01:13:52,000
我觉得可能

2268
01:13:52,000 --> 01:13:53,000
Functional programming

2269
01:13:53,000 --> 01:13:56,000
所给我们最大的

2270
01:13:56,000 --> 01:13:58,000
意触

2271
01:13:58,000 --> 01:14:02,000
就在于之前我们讨论的

2272
01:14:02,000 --> 01:14:05,000
现成家所要解决的最基本问题

2273
01:14:05,000 --> 01:14:06,000
就是有一个

2274
01:14:06,000 --> 01:14:08,000
ChangeableState

2275
01:14:08,000 --> 01:14:11,000
被 Functional programming 彻底抹去了

2276
01:14:11,000 --> 01:14:13,000
就是如果一切

2277
01:14:13,000 --> 01:14:16,000
问题的输入乃至其中间状态

2278
01:14:16,000 --> 01:14:18,000
全都是确定的话

2279
01:14:18,000 --> 01:14:21,000
那别人根本不可能改它

2280
01:14:21,000 --> 01:14:23,000
在我看来

2281
01:14:23,000 --> 01:14:25,000
我也就不需要锁了不什么

2282
01:14:25,000 --> 01:14:26,000
对呀

2283
01:14:26,000 --> 01:14:27,000
所以

2284
01:14:27,000 --> 01:14:28,000
这就是为什么

2285
01:14:28,000 --> 01:14:29,000
Functional programming

2286
01:14:29,000 --> 01:14:30,000
跟我们提供了

2287
01:14:30,000 --> 01:14:31,000
提供的这样一种

2288
01:14:31,000 --> 01:14:33,000
从完全从不能讲

2289
01:14:33,000 --> 01:14:34,000
都就是实现并

2290
01:14:34,000 --> 01:14:36,000
去实现并行的机制

2291
01:14:36,000 --> 01:14:38,000
会让我们思考起来

2292
01:14:38,000 --> 01:14:39,000
一种方便原因

2293
01:14:39,000 --> 01:14:40,000
对

2294
01:14:40,000 --> 01:14:41,000
就是输到一个最极端的例子

2295
01:14:41,000 --> 01:14:42,000
就是如果

2296
01:14:42,000 --> 01:14:43,000
从这种

2297
01:14:43,000 --> 01:14:44,000
先不考虑这个实现的

2298
01:14:44,000 --> 01:14:46,000
经济性来讲

2299
01:14:46,000 --> 01:14:48,000
都说起码从逻辑上来讲

2300
01:14:48,000 --> 01:14:50,000
如果你整个原是一个存罪的

2301
01:14:50,000 --> 01:14:51,000
Functional 的一个

2302
01:14:51,000 --> 01:14:53,000
存罪是一个韩首世的过程的话

2303
01:14:53,000 --> 01:14:55,000
每一步執行

2304
01:14:55,000 --> 01:14:57,000
都是可以被病发執行的

2305
01:14:57,000 --> 01:14:58,000
就理论上说你每一步都可以

2306
01:14:58,000 --> 01:15:01,000
分明到任意多个处理上去同时執行

2307
01:15:01,000 --> 01:15:02,000
然后得到一个解

2308
01:15:02,000 --> 01:15:04,000
然后再进行下一步的这个分

2309
01:15:04,000 --> 01:15:05,000
叫做 Reduction

2310
01:15:05,000 --> 01:15:07,000
然后得到一个最终的解出来

2311
01:15:07,000 --> 01:15:08,000
对

2312
01:15:08,000 --> 01:15:09,000
对

2313
01:15:09,000 --> 01:15:11,000
这样的模型

2314
01:15:11,000 --> 01:15:13,000
它所带来的便利

2315
01:15:13,000 --> 01:15:14,000
是非常显重的

2316
01:15:14,000 --> 01:15:16,000
但是从来以一个讲究

2317
01:15:16,000 --> 01:15:17,000
讲

2318
01:15:17,000 --> 01:15:19,000
Functional Prologment

2319
01:15:19,000 --> 01:15:23,000
写起来也是比较久挑战性

2320
01:15:23,000 --> 01:15:26,000
因为你只是

2321
01:15:26,000 --> 01:15:27,000
你不只是

2322
01:15:27,000 --> 01:15:28,000
但是当你

2323
01:15:28,000 --> 01:15:30,000
没有 Global

2324
01:15:30,000 --> 01:15:31,000
Central State 的时候

2325
01:15:31,000 --> 01:15:32,000
你就会需要

2326
01:15:32,000 --> 01:15:34,000
东临外的方法就解决它

2327
01:15:34,000 --> 01:15:36,000
而

2328
01:15:36,000 --> 01:15:37,000
Functional Prologment

2329
01:15:37,000 --> 01:15:38,000
可能会

2330
01:15:38,000 --> 01:15:39,000
要求你

2331
01:15:39,000 --> 01:15:41,000
比较

2332
01:15:41,000 --> 01:15:42,000
痛苦的

2333
01:15:42,000 --> 01:15:43,000
去转化

2334
01:15:43,000 --> 01:15:45,000
临私为模型

2335
01:15:45,000 --> 01:15:47,000
那有没有一个比较好的例子

2336
01:15:47,000 --> 01:15:48,000
可以说明

2337
01:15:48,000 --> 01:15:49,000
为什么

2338
01:15:49,000 --> 01:15:50,000
Functional Prologment

2339
01:15:50,000 --> 01:15:51,000
可以

2340
01:15:51,000 --> 01:15:53,000
比较

2341
01:15:53,000 --> 01:15:56,000
有效的实现病发落什么

2342
01:15:57,000 --> 01:15:59,000
我觉得可能最简单

2343
01:15:59,000 --> 01:16:00,000
就是一个

2344
01:16:00,000 --> 01:16:01,000
计算器的例子

2345
01:16:01,000 --> 01:16:02,000
就能够

2346
01:16:02,000 --> 01:16:03,000
可能比较容易懂

2347
01:16:03,000 --> 01:16:05,000
就是我们计算一个

2348
01:16:05,000 --> 01:16:07,000
长用的四则运算的时候

2349
01:16:07,000 --> 01:16:08,000
我们

2350
01:16:08,000 --> 01:16:09,000
比如说

2351
01:16:09,000 --> 01:16:11,000
我觉得最简单的三成一四

2352
01:16:11,000 --> 01:16:13,000
加五成一料

2353
01:16:13,000 --> 01:16:14,000
这个公式

2354
01:16:14,000 --> 01:16:16,000
我们如果是人做会怎么样

2355
01:16:16,000 --> 01:16:19,000
我们现在算三成一四

2356
01:16:19,000 --> 01:16:20,000
12

2357
01:16:20,000 --> 01:16:21,000
所以写了一边

2358
01:16:21,000 --> 01:16:22,000
然后再算五成一料

2359
01:16:22,000 --> 01:16:23,000
等于到了 30

2360
01:16:23,000 --> 01:16:24,000
以下一边

2361
01:16:24,000 --> 01:16:26,000
然后再两个球和加起来 32 对吧

2362
01:16:26,000 --> 01:16:27,000
没错

2363
01:16:27,000 --> 01:16:28,000
但是

2364
01:16:28,000 --> 01:16:30,000
如果是给机器来做的话

2365
01:16:30,000 --> 01:16:32,000
因为你整个四则运算

2366
01:16:32,000 --> 01:16:33,000
中间的每一步

2367
01:16:33,000 --> 01:16:34,000
都是确定性结果

2368
01:16:34,000 --> 01:16:36,000
因为确定性数的确定性结果

2369
01:16:36,000 --> 01:16:37,000
这样的话

2370
01:16:37,000 --> 01:16:39,000
它可以同时计算三成一四

2371
01:16:39,000 --> 01:16:41,000
或者说它甚至先计算五成一料

2372
01:16:41,000 --> 01:16:42,000
再计算三成一四

2373
01:16:42,000 --> 01:16:44,000
然后再把再去全样之合

2374
01:16:44,000 --> 01:16:46,000
就是在这个观察中

2375
01:16:46,000 --> 01:16:47,000
你可以看到

2376
01:16:47,000 --> 01:16:50,000
不管你的这个计算结果

2377
01:16:50,000 --> 01:16:51,000
并不会

2378
01:16:51,000 --> 01:16:54,000
因为你计算的顺序有任何改变

2379
01:16:54,000 --> 01:16:56,000
而导致你的这个结果有任何变化

2380
01:16:56,000 --> 01:16:58,000
这个时候的话

2381
01:16:58,000 --> 01:17:01,000
那机器就可以做很多很多这样的优化

2382
01:17:01,000 --> 01:17:04,000
就可以把那些能够同时

2383
01:17:04,000 --> 01:17:06,000
并停止行动也都并停起来

2384
01:17:06,000 --> 01:17:09,000
对假设了你的这个算是

2385
01:17:09,000 --> 01:17:12,000
没有像三成四加五成就这么吹有

2386
01:17:12,000 --> 01:17:15,000
而是你个比如说 200 位的数字

2387
01:17:15,000 --> 01:17:17,000
成立两外的数字

2388
01:17:17,000 --> 01:17:19,000
然后这样

2389
01:17:19,000 --> 01:17:22,000
然后要给比如说五六百

2390
01:17:22,000 --> 01:17:24,000
一个这样的结果球和

2391
01:17:24,000 --> 01:17:27,000
那这样的多任务

2392
01:17:27,000 --> 01:17:29,000
这样并发的模型

2393
01:17:29,000 --> 01:17:30,000
就可以很好用

2394
01:17:30,000 --> 01:17:32,000
很好用方式的 properman 的并行

2395
01:17:32,000 --> 01:17:34,000
我喜欢来解决

2396
01:17:34,000 --> 01:17:36,000
甚至我觉得其实也是一个

2397
01:17:36,000 --> 01:17:38,000
很好的 mapreduce 的

2398
01:17:38,000 --> 01:17:39,000
没错

2399
01:17:39,000 --> 01:17:40,000
解决

2400
01:17:40,000 --> 01:17:42,000
怎么说一个

2401
01:17:42,000 --> 01:17:43,000
例子

2402
01:17:43,000 --> 01:17:45,000
如果你要向一个门外人

2403
01:17:45,000 --> 01:17:46,000
能爱和解释什么叫

2404
01:17:46,000 --> 01:17:47,000
mapreduce

2405
01:17:47,000 --> 01:17:48,000
当然能爱和什么要

2406
01:17:48,000 --> 01:17:49,000
都能 mapreduce

2407
01:17:49,000 --> 01:17:51,000
成个性趣是多一个问题

2408
01:17:51,000 --> 01:17:53,000
但如果你要向一个人解释什么是

2409
01:17:53,000 --> 01:17:54,000
mapreduce

2410
01:17:54,000 --> 01:17:56,000
你就可以说让你算

2411
01:17:56,000 --> 01:17:59,000
让其他机器算三成四加五成就

2412
01:17:59,000 --> 01:18:01,000
mapmap 这一步就是给一坤

2413
01:18:01,000 --> 01:18:03,000
让一个机器算三成四

2414
01:18:03,000 --> 01:18:05,000
然后另外一个算五成就

2415
01:18:05,000 --> 01:18:06,000
而第五四的是

2416
01:18:06,000 --> 01:18:09,000
把三成四的结果和五成的结果加来起

2417
01:18:09,000 --> 01:18:10,000
没错

2418
01:18:10,000 --> 01:18:11,000
没错

2419
01:18:11,000 --> 01:18:13,000
但是这个

2420
01:18:13,000 --> 01:18:14,000
就是韩诗这边城

2421
01:18:14,000 --> 01:18:16,000
我什么说有这么好的特性

2422
01:18:16,000 --> 01:18:19,000
但是它问题是在什么地方呢

2423
01:18:19,000 --> 01:18:20,000
问题在于

2424
01:18:20,000 --> 01:18:22,000
现实世界的很多问题

2425
01:18:22,000 --> 01:18:23,000
并不能

2426
01:18:23,000 --> 01:18:25,000
简单或者很方便的

2427
01:18:25,000 --> 01:18:26,000
规矩于一个韩诗试

2428
01:18:26,000 --> 01:18:27,000
就是一个

2429
01:18:27,000 --> 01:18:29,000
就是非可变状态的

2430
01:18:29,000 --> 01:18:31,000
一种场景来去解

2431
01:18:31,000 --> 01:18:32,000
比如说

2432
01:18:32,000 --> 01:18:34,000
最简单的一个输出的时候

2433
01:18:34,000 --> 01:18:35,000
你就会前上大跟

2434
01:18:35,000 --> 01:18:37,000
外部世界的状态的沟通了

2435
01:18:37,000 --> 01:18:38,000
这个时候

2436
01:18:38,000 --> 01:18:40,000
根据你的输入

2437
01:18:40,000 --> 01:18:42,000
和这个直步一样

2438
01:18:42,000 --> 01:18:43,000
你能可能某一些

2439
01:18:43,000 --> 01:18:44,000
就算结果

2440
01:18:44,000 --> 01:18:45,000
就如果还是一辆一面

2441
01:18:45,000 --> 01:18:46,000
外部输入的话

2442
01:18:46,000 --> 01:18:48,000
它就并不是一个

2443
01:18:48,000 --> 01:18:50,000
你可以在单看这个程序

2444
01:18:50,000 --> 01:18:52,000
本身可以遇见的一个解

2445
01:18:52,000 --> 01:18:53,000
遇见的一个解了吗

2446
01:18:53,000 --> 01:18:54,000
对

2447
01:18:54,000 --> 01:18:55,000
比如说我们最长大

2448
01:18:55,000 --> 01:18:57,000
最长练习的一种

2449
01:18:58,000 --> 01:19:00,000
编程

2450
01:19:00,000 --> 01:19:02,000
题目就是

2451
01:19:02,000 --> 01:19:04,000
问操作者的名字

2452
01:19:04,000 --> 01:19:05,000
然后打出

2453
01:19:05,000 --> 01:19:06,000
Hello 操作者的名字

2454
01:19:06,000 --> 01:19:07,000
这个就是没有办法

2455
01:19:07,000 --> 01:19:08,000
用方式的

2456
01:19:08,000 --> 01:19:09,000
program 写出来

2457
01:19:09,000 --> 01:19:10,000
就纯粹的方式

2458
01:19:10,000 --> 01:19:11,000
上 program 也是没有办法

2459
01:19:11,000 --> 01:19:12,000
处理这么问题的

2460
01:19:12,000 --> 01:19:14,000
因为你总有一步要

2461
01:19:14,000 --> 01:19:16,000
问操作者的名字到底是什么

2462
01:19:16,000 --> 01:19:17,000
如果

2463
01:19:17,000 --> 01:19:19,000
他的名字

2464
01:19:19,000 --> 01:19:21,000
或者说在你

2465
01:19:21,000 --> 01:19:22,000
或者他的名字之前

2466
01:19:22,000 --> 01:19:23,000
你是没有办法把

2467
01:19:23,000 --> 01:19:24,000
输出他的名字

2468
01:19:24,000 --> 01:19:25,000
这一步

2469
01:19:25,000 --> 01:19:26,000
和问他的名字

2470
01:19:26,000 --> 01:19:27,000
这一步

2471
01:19:27,000 --> 01:19:28,000
并请之下

2472
01:19:28,000 --> 01:19:30,000
还有一个

2473
01:19:30,000 --> 01:19:31,000
还有一个

2474
01:19:31,000 --> 01:19:32,000
functional program

2475
01:19:32,000 --> 01:19:34,000
就不能很方便的

2476
01:19:34,000 --> 01:19:35,000
就不能规矩

2477
01:19:35,000 --> 01:19:36,000
与存在的方式

2478
01:19:36,000 --> 01:19:37,000
外面的一感觉

2479
01:19:37,000 --> 01:19:38,000
就是随机数

2480
01:19:38,000 --> 01:19:39,000
对吧

2481
01:19:39,000 --> 01:19:41,000
你要有一个韩数的结果

2482
01:19:41,000 --> 01:19:43,000
是你每次執行他的

2483
01:19:43,000 --> 01:19:44,000
都确定的结果

2484
01:19:44,000 --> 01:19:46,000
这个时候他就并不是一个

2485
01:19:46,000 --> 01:19:47,000
他甚至不是一个韩数

2486
01:19:47,000 --> 01:19:48,000
因为我们讲韩数

2487
01:19:48,000 --> 01:19:50,000
他应该是一个确定的结果

2488
01:19:50,000 --> 01:19:52,000
就给定输入的时候

2489
01:19:52,000 --> 01:19:54,000
你应该一个确定的结果

2490
01:19:54,000 --> 01:19:56,000
但是如果你的结果是摇骚子

2491
01:19:56,000 --> 01:19:58,000
那你他本来就不是一个韩

2492
01:19:58,000 --> 01:19:59,000
甚至严格一

2493
01:19:59,000 --> 01:20:00,000
他并不是一个韩数了

2494
01:20:00,000 --> 01:20:01,000
数学的结果

2495
01:20:01,000 --> 01:20:02,000
给你拿韩数

2496
01:20:02,000 --> 01:20:03,000
没错

2497
01:20:03,000 --> 01:20:04,000
其实这也就是

2498
01:20:04,000 --> 01:20:05,000
数学世界

2499
01:20:05,000 --> 01:20:06,000
和统计学世界的

2500
01:20:06,000 --> 01:20:07,000
一个根本分野

2501
01:20:07,000 --> 01:20:08,000
统计学世界

2502
01:20:08,000 --> 01:20:09,000
所研究的世界

2503
01:20:09,000 --> 01:20:10,000
是包含

2504
01:20:10,000 --> 01:20:12,000
随机数发生远的

2505
01:20:12,000 --> 01:20:13,000
而数学世界

2506
01:20:13,000 --> 01:20:15,000
数学世界所处理的问题

2507
01:20:15,000 --> 01:20:16,000
是没有这种东西子的

2508
01:20:16,000 --> 01:20:17,000
对

2509
01:20:17,000 --> 01:20:18,000
对

2510
01:20:18,000 --> 01:20:21,000
那说完

2511
01:20:21,000 --> 01:20:24,000
那方式的 Programming 解决病发模型的

2512
01:20:24,000 --> 01:20:25,000
或者说

2513
01:20:25,000 --> 01:20:26,000
方式的 Programming

2514
01:20:26,000 --> 01:20:27,000
作为病发模型

2515
01:20:27,000 --> 01:20:28,000
之后

2516
01:20:28,000 --> 01:20:31,000
我们可以说说其他的

2517
01:20:31,000 --> 01:20:32,000
比较

2518
01:20:32,000 --> 01:20:33,000
不那么

2519
01:20:33,000 --> 01:20:34,000
radical 的

2520
01:20:34,000 --> 01:20:35,000
不那么

2521
01:20:35,000 --> 01:20:37,000
疯狂的

2522
01:20:37,000 --> 01:20:38,000
这不

2523
01:20:38,000 --> 01:20:39,000
对

2524
01:20:39,000 --> 01:20:40,000
不那么

2525
01:20:40,000 --> 01:20:41,000
彻底

2526
01:20:41,000 --> 01:20:44,000
隔心人物的世界观的病发模型

2527
01:20:44,000 --> 01:20:45,000
OK

2528
01:20:45,000 --> 01:20:46,000
那对

2529
01:20:46,000 --> 01:20:47,000
所以

2530
01:20:47,000 --> 01:20:48,000
我们刚才提到

2531
01:20:48,000 --> 01:20:50,000
Roll Pike 的那一篇

2532
01:20:50,000 --> 01:20:52,000
那一位展示

2533
01:20:52,000 --> 01:20:53,000
就是他

2534
01:20:53,000 --> 01:20:54,000
向什么介绍

2535
01:20:54,000 --> 01:20:55,000
golem 的展示

2536
01:20:55,000 --> 01:20:56,000
所以

2537
01:20:56,000 --> 01:20:57,000
做一个

2538
01:20:57,000 --> 01:20:58,000
golem

2539
01:20:58,000 --> 01:20:59,000
传辅一种者

2540
01:20:59,000 --> 01:21:00,000
Rail 你对

2541
01:21:00,000 --> 01:21:01,000
golem 的

2542
01:21:01,000 --> 01:21:03,000
病发模型是怎么理解的

2543
01:21:03,000 --> 01:21:04,000
或者

2544
01:21:04,000 --> 01:21:05,000
你可以简单的介绍一下

2545
01:21:05,000 --> 01:21:06,000
golem 也是怎么解释

2546
01:21:06,000 --> 01:21:07,000
怎么解决病发问题

2547
01:21:07,000 --> 01:21:08,000
OK

2548
01:21:08,000 --> 01:21:10,000
就 go 里面他采用的病发模型

2549
01:21:10,000 --> 01:21:12,000
其实是一个非常古老

2550
01:21:12,000 --> 01:21:14,000
而且被学书系研究的

2551
01:21:14,000 --> 01:21:16,000
很透彻的一种模型

2552
01:21:16,000 --> 01:21:17,000
csp

2553
01:21:17,000 --> 01:21:19,000
communicating sequential processes

2554
01:21:19,000 --> 01:21:20,000
什么意思

2555
01:21:20,000 --> 01:21:21,000
就是说

2556
01:21:21,000 --> 01:21:22,000
每一个

2557
01:21:22,000 --> 01:21:23,000
他们叫 process

2558
01:21:23,000 --> 01:21:24,000
这里的进程

2559
01:21:24,000 --> 01:21:26,000
当然可能包括物理像是一个

2560
01:21:26,000 --> 01:21:27,000
超级的进程也好

2561
01:21:27,000 --> 01:21:28,000
还是这个

2562
01:21:28,000 --> 01:21:29,000
现成的

2563
01:21:29,000 --> 01:21:30,000
超级的现成

2564
01:21:30,000 --> 01:21:31,000
他就这个没有关系

2565
01:21:31,000 --> 01:21:32,000
这种 process 是一个

2566
01:21:32,000 --> 01:21:33,000
逻辑的概念

2567
01:21:33,000 --> 01:21:34,000
就是他是一个现心

2568
01:21:34,000 --> 01:21:35,000
直径的一个单元

2569
01:21:35,000 --> 01:21:37,000
然后他说了什么意思呢

2570
01:21:37,000 --> 01:21:38,000
就说

2571
01:21:38,000 --> 01:21:39,000
每一个就刚刚讲的

2572
01:21:39,000 --> 01:21:40,000
每一个

2573
01:21:40,000 --> 01:21:41,000
每一个进程

2574
01:21:41,000 --> 01:21:43,000
都是单独自己管自己的直径

2575
01:21:43,000 --> 01:21:45,000
他只是在需要

2576
01:21:45,000 --> 01:21:47,000
跟其他进程交互的时候

2577
01:21:47,000 --> 01:21:49,000
才通过消息传递的方式

2578
01:21:49,000 --> 01:21:51,000
来做这么一件

2579
01:21:51,000 --> 01:21:53,000
事儿就等别人发消息

2580
01:21:53,000 --> 01:21:54,000
给他或者发消息给别人

2581
01:21:54,000 --> 01:21:55,000
然后就就有一个叫做

2582
01:21:55,000 --> 01:21:56,000
signalling point

2583
01:21:56,000 --> 01:21:57,000
在那个点之后

2584
01:21:57,000 --> 01:21:59,000
然后他完成了这一步之后

2585
01:21:59,000 --> 01:22:01,000
他又再回到自己的一个

2586
01:22:01,000 --> 01:22:03,000
一个比较现心的

2587
01:22:03,000 --> 01:22:06,000
直径方式去做下去

2588
01:22:06,000 --> 01:22:07,000
这个是一个

2589
01:22:07,000 --> 01:22:09,000
比较可能简单的解释吧

2590
01:22:09,000 --> 01:22:11,000
那所以这个 signalize point

2591
01:22:11,000 --> 01:22:13,000
跟所谓的差别是什么

2592
01:22:14,000 --> 01:22:16,000
他本质上就是一个所

2593
01:22:16,000 --> 01:22:18,000
只是说在在逻辑的

2594
01:22:18,000 --> 01:22:19,000
就在抽象的方式

2595
01:22:19,000 --> 01:22:20,000
或者抽象的角度上

2596
01:22:20,000 --> 01:22:22,000
他是有点不太一样的

2597
01:22:22,000 --> 01:22:23,000
他并不是说

2598
01:22:23,000 --> 01:22:25,000
我们两个进程

2599
01:22:25,000 --> 01:22:27,000
要共享一个

2600
01:22:27,000 --> 01:22:29,000
公享一个

2601
01:22:29,000 --> 01:22:30,000
对 共享一个 state 的了

2602
01:22:30,000 --> 01:22:32,000
所以我们先把它锁住

2603
01:22:32,000 --> 01:22:33,000
然后我们想

2604
01:22:33,000 --> 01:22:35,000
谁先到达那个锁点

2605
01:22:35,000 --> 01:22:36,000
首先等一下

2606
01:22:36,000 --> 01:22:37,000
等另外一个人到达那个锁点

2607
01:22:37,000 --> 01:22:39,000
然后再把那个锁解开

2608
01:22:39,000 --> 01:22:41,000
然后我们再把那个资源改变

2609
01:22:41,000 --> 01:22:43,000
然后再把这个锁解开

2610
01:22:43,000 --> 01:22:44,000
然后那个被锁住的人

2611
01:22:44,000 --> 01:22:46,000
才可以接着进行下去

2612
01:22:46,000 --> 01:22:47,000
他这样的话

2613
01:22:47,000 --> 01:22:49,000
就有你要去想

2614
01:22:49,000 --> 01:22:51,000
哪个质量是需要被锁定的

2615
01:22:51,000 --> 01:22:52,000
这就挺麻烦嘛

2616
01:22:52,000 --> 01:22:54,000
然后他这个 ssp 的话

2617
01:22:54,000 --> 01:22:55,000
他就说

2618
01:22:55,000 --> 01:22:57,000
我们不要去考虑这个锁的问题了

2619
01:22:57,000 --> 01:22:58,000
我们默认

2620
01:22:58,000 --> 01:22:59,000
我们要互相通讯的时候

2621
01:22:59,000 --> 01:23:01,000
就是有一个隐含的锁

2622
01:23:01,000 --> 01:23:03,000
那个锁的内容

2623
01:23:03,000 --> 01:23:05,000
就是我要传递的这个销洗嘛

2624
01:23:05,000 --> 01:23:06,000
对不对

2625
01:23:06,000 --> 01:23:08,000
然后对方取得了这个销洗之后

2626
01:23:08,000 --> 01:23:09,000
那么这个锁就解开了

2627
01:23:09,000 --> 01:23:11,000
那我可以继续往下走下去

2628
01:23:11,000 --> 01:23:12,000
所以他

2629
01:23:12,000 --> 01:23:14,000
他本质上是一个锁了

2630
01:23:14,000 --> 01:23:16,000
但是就是说他的抽象的成绩是不一样的

2631
01:23:16,000 --> 01:23:18,000
或者抽象的出发点是不一样的

2632
01:23:18,000 --> 01:23:19,000
这样的话

2633
01:23:19,000 --> 01:23:21,000
对人们或者这个程序原来

2634
01:23:21,000 --> 01:23:22,000
理解起来他来说

2635
01:23:22,000 --> 01:23:24,000
是更加现实一点的

2636
01:23:24,000 --> 01:23:26,000
更加现实的一个抽象嘛

2637
01:23:26,000 --> 01:23:27,000
没错

2638
01:23:27,000 --> 01:23:30,000
其实我听过一个比喻

2639
01:23:30,000 --> 01:23:32,000
就是传统的现场

2640
01:23:32,000 --> 01:23:34,000
与锁有点像厨乌乡

2641
01:23:34,000 --> 01:23:36,000
你要去买东西

2642
01:23:36,000 --> 01:23:38,000
然后你要先把自己的

2643
01:23:39,000 --> 01:23:40,000
你在晋商场之前

2644
01:23:40,000 --> 01:23:42,000
需要把自己的东西锁了一个厨櫃里

2645
01:23:42,000 --> 01:23:43,000
显示锁

2646
01:23:43,000 --> 01:23:45,000
其实就是这二八年的锁

2647
01:23:45,000 --> 01:23:47,000
当你把一个厨乌乡锁下来的时候

2648
01:23:47,000 --> 01:23:48,000
别人就不能再用了

2649
01:23:48,000 --> 01:23:50,000
而这样一种

2650
01:23:50,000 --> 01:23:52,000
csp 模型则是

2651
01:23:52,000 --> 01:23:56,000
有一个专门的厨物管理员

2652
01:23:56,000 --> 01:23:58,000
你只需要把你们的东西给他说

2653
01:23:58,000 --> 01:23:59,000
我要把这种东西存起来

2654
01:23:59,000 --> 01:24:00,000
然后我去别的地方

2655
01:24:00,000 --> 01:24:02,000
他也许在背后

2656
01:24:02,000 --> 01:24:03,000
有另外一个厨乌乡

2657
01:24:03,000 --> 01:24:06,000
但是你不会有关系的

2658
01:24:06,000 --> 01:24:07,000
就是这个系绩

2659
01:24:07,000 --> 01:24:08,000
对你不用系绩吗

2660
01:24:08,000 --> 01:24:09,000
没错

2661
01:24:09,000 --> 01:24:11,000
你不用去直接关心你的东西

2662
01:24:11,000 --> 01:24:12,000
到底锁在那个箱子里

2663
01:24:12,000 --> 01:24:14,000
以及你是不是和别人共享的

2664
01:24:14,000 --> 01:24:16,000
同样一个厨乌乡这样的这点问题

2665
01:24:16,000 --> 01:24:17,000
告诉他

2666
01:24:17,000 --> 01:24:18,000
我要存东西

2667
01:24:18,000 --> 01:24:19,000
然后我走了

2668
01:24:19,000 --> 01:24:20,000
然后到回来的时候

2669
01:24:20,000 --> 01:24:21,000
我要拿东西

2670
01:24:21,000 --> 01:24:23,000
这个比喻很好

2671
01:24:23,000 --> 01:24:24,000
所以你回来拿的时候

2672
01:24:24,000 --> 01:24:26,000
你要拿我之前

2673
01:24:26,000 --> 01:24:27,000
或者说你

2674
01:24:27,000 --> 01:24:28,000
甚至不一定是你本人去拿

2675
01:24:28,000 --> 01:24:31,000
比如说你跟老婆帮你去拿你的包

2676
01:24:31,000 --> 01:24:33,000
但是他有什么盘嘛

2677
01:24:33,000 --> 01:24:35,000
他就说我要拿这个集号的那个包

2678
01:24:35,000 --> 01:24:37,000
让那个贵台那个小姐

2679
01:24:37,000 --> 01:24:38,000
去帮你拿出来

2680
01:24:38,000 --> 01:24:39,000
然后你就等你

2681
01:24:39,000 --> 01:24:40,000
你中间并不需要去关心

2682
01:24:40,000 --> 01:24:42,000
他后面有多少个锁格对吧

2683
01:24:42,000 --> 01:24:45,000
他后面有锁是一个拉锁

2684
01:24:45,000 --> 01:24:46,000
还是一个防刀

2685
01:24:46,000 --> 01:24:47,000
保险贵呢

2686
01:24:47,000 --> 01:24:48,000
还是一个什么样的东西事件

2687
01:24:48,000 --> 01:24:49,000
对

2688
01:24:49,000 --> 01:24:51,000
所以这样一种编程模型

2689
01:24:51,000 --> 01:24:53,000
也是目前比较

2690
01:24:54,000 --> 01:24:56,000
比较流行那种模型

2691
01:24:56,000 --> 01:24:57,000
我觉得

2692
01:24:57,000 --> 01:24:58,000
就是在很多原来都支持他

2693
01:24:58,000 --> 01:25:00,000
就够有够

2694
01:25:00,000 --> 01:25:02,000
而且是在语言从面上

2695
01:25:02,000 --> 01:25:03,000
直接支持他的

2696
01:25:03,000 --> 01:25:04,000
而其他很多语言

2697
01:25:04,000 --> 01:25:05,000
也都是通过

2698
01:25:05,000 --> 01:25:06,000
一个 Liverer

2699
01:25:06,000 --> 01:25:08,000
或者是其他什么即使

2700
01:25:08,000 --> 01:25:10,000
一个主要是通过 Liverer

2701
01:25:10,000 --> 01:25:11,000
好像只有两种可能吗

2702
01:25:11,000 --> 01:25:12,000
你要不再指

2703
01:25:12,000 --> 01:25:13,000
你要不再指

2704
01:25:13,000 --> 01:25:14,000
直接指

2705
01:25:14,000 --> 01:25:15,000
对

2706
01:25:15,000 --> 01:25:16,000
要不通过一个

2707
01:25:16,000 --> 01:25:18,000
这里要肯定来介绍一下

2708
01:25:18,000 --> 01:25:19,000
就除了刚才讲的

2709
01:25:19,000 --> 01:25:20,000
那个 CSP 模型之外

2710
01:25:20,000 --> 01:25:22,000
有一个与他形成

2711
01:25:22,000 --> 01:25:25,000
叫做对有关系的一个模型

2712
01:25:25,000 --> 01:25:26,000
叫做 Actor Model

2713
01:25:26,000 --> 01:25:27,000
这个 Actor

2714
01:25:27,000 --> 01:25:28,000
我不知道这个中文怎么翻一号

2715
01:25:28,000 --> 01:25:29,000
叫做

2716
01:25:31,000 --> 01:25:32,000
演员模型

2717
01:25:32,000 --> 01:25:33,000
也不对

2718
01:25:33,000 --> 01:25:34,000
Actor 这里面

2719
01:25:34,000 --> 01:25:35,000
对

2720
01:25:35,000 --> 01:25:36,000
就是

2721
01:25:36,000 --> 01:25:37,000
前提大家讲

2722
01:25:37,000 --> 01:25:38,000
就说你在 CSP 的时候

2723
01:25:38,000 --> 01:25:41,000
有一种经典的方式是说

2724
01:25:41,000 --> 01:25:42,000
我们两个之间

2725
01:25:42,000 --> 01:25:43,000
实现一个所谓的

2726
01:25:43,000 --> 01:25:44,000
这个

2727
01:25:44,000 --> 01:25:45,000
Channel

2728
01:25:45,000 --> 01:25:46,000
一个取道

2729
01:25:46,000 --> 01:25:47,000
我们通过这个取道

2730
01:25:47,000 --> 01:25:48,000
来发送这个消息对吧

2731
01:25:48,000 --> 01:25:49,000
嗯

2732
01:25:49,000 --> 01:25:50,000
就是说这个取道

2733
01:25:50,000 --> 01:25:51,000
就是我要发消息的时候

2734
01:25:51,000 --> 01:25:53,000
我要我之前把这个消息

2735
01:25:53,000 --> 01:25:54,000
通过这个取道

2736
01:25:54,000 --> 01:25:55,000
传送给你

2737
01:25:55,000 --> 01:25:56,000
如果你那边没有

2738
01:25:56,000 --> 01:25:58,000
没有还没有来

2739
01:25:58,000 --> 01:25:59,000
接受这个取道

2740
01:25:59,000 --> 01:26:00,000
我发消息这个人

2741
01:26:00,000 --> 01:26:01,000
还在那边

2742
01:26:01,000 --> 01:26:02,000
等着你接收之后

2743
01:26:02,000 --> 01:26:03,000
才可以了

2744
01:26:03,000 --> 01:26:04,000
才可以走

2745
01:26:04,000 --> 01:26:06,000
大家有没有这个意思吗

2746
01:26:06,000 --> 01:26:07,000
是

2747
01:26:07,000 --> 01:26:08,000
所以

2748
01:26:08,000 --> 01:26:09,000
Actor

2749
01:26:09,000 --> 01:26:10,000
比如说

2750
01:26:10,000 --> 01:26:11,000
之前 Actor 的原

2751
01:26:11,000 --> 01:26:12,000
像 Alan 或者是

2752
01:26:12,000 --> 01:26:13,000
Skala 也是一个

2753
01:26:13,000 --> 01:26:14,000
Skala

2754
01:26:14,000 --> 01:26:15,000
之前那个地方

2755
01:26:15,000 --> 01:26:16,000
就不过

2756
01:26:16,000 --> 01:26:18,000
Skala 是通过 Actor 之事的

2757
01:26:18,000 --> 01:26:20,000
Skala 没有原生的 Actor

2758
01:26:20,000 --> 01:26:21,000
它有

2759
01:26:21,000 --> 01:26:22,000
它原生是 Actor

2760
01:26:22,000 --> 01:26:23,000
它也可以通过

2761
01:26:23,000 --> 01:26:26,000
接边走 Actor model

2762
01:26:26,000 --> 01:26:27,000
Actor model

2763
01:26:27,000 --> 01:26:28,000
那个 Liberary

2764
01:26:28,000 --> 01:26:29,000
来实现 Actor Model

2765
01:26:29,000 --> 01:26:30,000
OK

2766
01:26:31,000 --> 01:26:33,000
然后刚刚讲的是

2767
01:26:33,000 --> 01:26:34,000
那个 CSB 是通过

2768
01:26:34,000 --> 01:26:35,000
Chanel 来实现的嘛

2769
01:26:35,000 --> 01:26:36,000
就是说

2770
01:26:36,000 --> 01:26:37,000
两个人要同时

2771
01:26:37,000 --> 01:26:38,000
到达那个 Chanel 那个点

2772
01:26:38,000 --> 01:26:40,000
然后才能够传递消息

2773
01:26:40,000 --> 01:26:42,000
然后这是一种方式

2774
01:26:42,000 --> 01:26:43,000
对

2775
01:26:43,000 --> 01:26:44,000
而 Actor 更像一个

2776
01:26:44,000 --> 01:26:45,000
怎么说

2777
01:26:45,000 --> 01:26:46,000
更像一个败力

2778
01:26:46,000 --> 01:26:47,000
Actor 是一个叫做

2779
01:26:47,000 --> 01:26:49,000
游香的模型

2780
01:26:49,000 --> 01:26:50,000
就是说

2781
01:26:50,000 --> 01:26:51,000
每个人

2782
01:26:51,000 --> 01:26:52,000
就每个进程

2783
01:26:52,000 --> 01:26:53,000
都是一个所谓的一个 Actor

2784
01:26:53,000 --> 01:26:54,000
然后它

2785
01:26:54,000 --> 01:26:55,000
每 Actor

2786
01:26:55,000 --> 01:26:56,000
就只做自己的事情

2787
01:26:56,000 --> 01:26:57,000
然后但是每个 Actor

2788
01:26:57,000 --> 01:26:58,000
它有 Food

2789
01:26:58,000 --> 01:26:59,000
它有

2790
01:26:59,000 --> 01:27:01,000
给它唯一配备的一个游香

2791
01:27:01,000 --> 01:27:03,000
然后别人的消息来的时候

2792
01:27:03,000 --> 01:27:05,000
并不直接被

2793
01:27:05,000 --> 01:27:06,000
这个 Actor 打去

2794
01:27:06,000 --> 01:27:07,000
而是说

2795
01:27:07,000 --> 01:27:08,000
先 C 进这个游香裡面

2796
01:27:08,000 --> 01:27:10,000
然后等这个 Actor 处理

2797
01:27:10,000 --> 01:27:12,000
它的执行到一个

2798
01:27:12,000 --> 01:27:13,000
一个条件上

2799
01:27:13,000 --> 01:27:14,000
它说我需要

2800
01:27:14,000 --> 01:27:15,000
说一个游戒

2801
01:27:15,000 --> 01:27:16,000
然后它就看自己的游香

2802
01:27:16,000 --> 01:27:17,000
说有没有别人

2803
01:27:17,000 --> 01:27:18,000
给我发过来的消息

2804
01:27:18,000 --> 01:27:19,000
我看一下处理里面

2805
01:27:19,000 --> 01:27:20,000
如果没有的话

2806
01:27:20,000 --> 01:27:22,000
我再接着做自己的事情

2807
01:27:23,000 --> 01:27:25,000
所以 CSB 和 Actor Model

2808
01:27:25,000 --> 01:27:26,000
是一个两个

2809
01:27:26,000 --> 01:27:28,000
本质上

2810
01:27:28,000 --> 01:27:29,000
做的同样的事情

2811
01:27:29,000 --> 01:27:30,000
指出它们在

2812
01:27:30,000 --> 01:27:31,000
在实现方式上

2813
01:27:31,000 --> 01:27:33,000
是有一点所谓的对我关系的在里面

2814
01:27:34,000 --> 01:27:35,000
OK

2815
01:27:36,000 --> 01:27:37,000
在现实中

2816
01:27:37,000 --> 01:27:39,000
其实够的话

2817
01:27:39,000 --> 01:27:40,000
比较

2818
01:27:40,000 --> 01:27:42,000
它并不是一个存罪的 CSB 模型

2819
01:27:42,000 --> 01:27:44,000
因为它的那个 Channel

2820
01:27:44,000 --> 01:27:45,000
刚讲的嘛

2821
01:27:45,000 --> 01:27:47,000
它并不是一个完全是主塞的 Channel

2822
01:27:47,000 --> 01:27:49,000
因为它的 Channel 是可以被 Buffer 的

2823
01:27:49,000 --> 01:27:50,000
对

2824
01:27:50,000 --> 01:27:51,000
其实我就刚才想说

2825
01:27:51,000 --> 01:27:52,000
够的 Channel

2826
01:27:52,000 --> 01:27:53,000
难道不也是一个游香吗

2827
01:27:53,000 --> 01:27:55,000
它也是一个 Q 啊

2828
01:27:55,000 --> 01:27:56,000
对

2829
01:27:56,000 --> 01:27:57,000
所以这个就是有一个

2830
01:27:57,000 --> 01:28:00,000
它的它不是一个存罪的 CSB 的这一点

2831
01:28:00,000 --> 01:28:02,000
就是因为说它的那个 Channel

2832
01:28:02,000 --> 01:28:04,000
它鼓励你使用一个叫做

2833
01:28:04,000 --> 01:28:05,000
BlockingChannel

2834
01:28:05,000 --> 01:28:06,000
就一次只能发一条消息

2835
01:28:06,000 --> 01:28:08,000
然后你必须要等对方取出这个消息之后

2836
01:28:08,000 --> 01:28:10,000
你这些发生方才能接着直接下来

2837
01:28:10,000 --> 01:28:11,000
对

2838
01:28:11,000 --> 01:28:13,000
这就是一种比较纯粹的 CSB 的状态

2839
01:28:13,000 --> 01:28:14,000
但是

2840
01:28:14,000 --> 01:28:15,000
对

2841
01:28:15,000 --> 01:28:16,000
如果你不用组细细细的 Channel 的话

2842
01:28:16,000 --> 01:28:18,000
其实够三号也是

2843
01:28:18,000 --> 01:28:20,000
用到了 Actor

2844
01:28:20,000 --> 01:28:21,000
没错

2845
01:28:21,000 --> 01:28:22,000
就是它够的话

2846
01:28:22,000 --> 01:28:23,000
其实也是有一个

2847
01:28:23,000 --> 01:28:24,000
因为它等它的 Channel

2848
01:28:24,000 --> 01:28:26,000
有一个扩展

2849
01:28:26,000 --> 01:28:28,000
就是它那个 Channel 是可以有一个 Buffer 的

2850
01:28:28,000 --> 01:28:29,000
就是一个环床区域的

2851
01:28:29,000 --> 01:28:30,000
比如说我可以申请这个 Channel

2852
01:28:30,000 --> 01:28:33,000
有一个 100 个位置的环床区域

2853
01:28:33,000 --> 01:28:34,000
什么意思呢

2854
01:28:34,000 --> 01:28:36,000
我可以往这个 Channel

2855
01:28:36,000 --> 01:28:37,000
三

2856
01:28:37,000 --> 01:28:39,000
九十九条消息都不组细

2857
01:28:39,000 --> 01:28:42,000
知道我 CyD 100 条消息的时候

2858
01:28:42,000 --> 01:28:43,000
我可以往那个

2859
01:28:43,000 --> 01:28:45,000
我那样三一百条消息都不组细

2860
01:28:45,000 --> 01:28:47,000
但我往里面 CyD 101 条消息的时候

2861
01:28:47,000 --> 01:28:49,000
我得等那一头那个人

2862
01:28:49,000 --> 01:28:50,000
就是接收方

2863
01:28:50,000 --> 01:28:52,000
诺处于锐调消息之后

2864
01:28:52,000 --> 01:28:53,000
我才能够在我里面塞进去

2865
01:28:53,000 --> 01:28:55,000
就是说它是有一个这么一个 Buffer

2866
01:28:55,000 --> 01:28:56,000
这么一个概念

2867
01:28:56,000 --> 01:28:57,000
然后这个时候的话

2868
01:28:57,000 --> 01:28:59,000
这种 Channel 就比较类似于

2869
01:28:59,000 --> 01:29:01,000
ActorModel 里面的这个叫什么

2870
01:29:01,000 --> 01:29:03,000
ModelBox 信箱的概念

2871
01:29:03,000 --> 01:29:05,000
但是它没有那么

2872
01:29:05,000 --> 01:29:09,000
灵活度和自由程度还是不一样的

2873
01:29:09,000 --> 01:29:11,000
比如说 ActorModel 里面

2874
01:29:11,000 --> 01:29:13,000
如果你有信箱的概念的话

2875
01:29:13,000 --> 01:29:14,000
你必然的推荐就是每一个 Actor

2876
01:29:14,000 --> 01:29:16,000
它是有一个唯一的确定的

2877
01:29:16,000 --> 01:29:18,000
识别服到一个 ID

2878
01:29:18,000 --> 01:29:20,000
你才知道你这个消息是要发

2879
01:29:20,000 --> 01:29:22,000
从哪里来发给谁

2880
01:29:22,000 --> 01:29:24,000
对吧你得有这么一个过程

2881
01:29:24,000 --> 01:29:26,000
但是在够里面的话

2882
01:29:26,000 --> 01:29:28,000
因为你可以每个进程

2883
01:29:28,000 --> 01:29:30,000
是可以建立多个 Channel 的话

2884
01:29:30,000 --> 01:29:33,000
所以它的这个对应关系是不太一样的

2885
01:29:33,000 --> 01:29:36,000
但本质上他们是其实同一件事情

2886
01:29:36,000 --> 01:29:38,000
所以我们可以说

2887
01:29:38,000 --> 01:29:42,000
Actor 模型天生就比较适合分布时计算

2888
01:29:43,000 --> 01:29:47,000
领域因为分当你把你的计算模型

2889
01:29:47,000 --> 01:29:49,000
采用分布式的方式来实现的时候

2890
01:29:50,000 --> 01:29:54,000
每一个分布式的单元都会天生的

2891
01:29:54,000 --> 01:29:57,000
带有一个标识服

2892
01:29:57,000 --> 01:29:58,000
然后再这么状况一下

2893
01:29:58,000 --> 01:29:59,000
New Actor 模型的时候

2894
01:29:59,000 --> 01:30:02,000
就非常容易的把你的抽象层级

2895
01:30:02,000 --> 01:30:04,000
连在一起

2896
01:30:04,000 --> 01:30:07,000
但是如果用 GoRoutine 的 Channel 的话

2897
01:30:07,000 --> 01:30:11,000
那可能应用在分布式分布计算的时候

2898
01:30:11,000 --> 01:30:13,000
我们没有那么自然

2899
01:30:13,000 --> 01:30:15,000
其实没有关系

2900
01:30:15,000 --> 01:30:17,000
这两个是可以完全互相

2901
01:30:18,000 --> 01:30:23,000
就是可以不損失任何抽象层级的互相转化

2902
01:30:23,000 --> 01:30:25,000
比如说最简单一个转化的道理就是说

2903
01:30:25,000 --> 01:30:27,000
那我怎么在

2904
01:30:27,000 --> 01:30:30,000
用 Channel 实现 Actor model

2905
01:30:30,000 --> 01:30:32,000
很简单一个道理就是

2906
01:30:32,000 --> 01:30:34,000
我每一个 Process 我自建

2907
01:30:34,000 --> 01:30:36,000
我在建那个 Process 的时候

2908
01:30:36,000 --> 01:30:38,000
我给它一个参数就是一个 Channel

2909
01:30:38,000 --> 01:30:39,000
这个 Channel 我就认为

2910
01:30:39,000 --> 01:30:41,000
我把它秘密一个叫做秘密密游箱

2911
01:30:41,000 --> 01:30:43,000
然后这个因为 Channel 是有 ID 的嘛

2912
01:30:43,000 --> 01:30:45,000
这样的话我就可以认为

2913
01:30:45,000 --> 01:30:50,000
具备 Channel 独写的功能的那个进程

2914
01:30:50,000 --> 01:30:52,000
就是这个 Actor 本身

2915
01:30:52,000 --> 01:30:56,000
对我意思就是你在这样一种解决方案呢

2916
01:30:56,000 --> 01:30:58,000
你在实实在有解决方案的时候

2917
01:30:58,000 --> 01:31:00,000
你实际上是采用 Actor 模型

2918
01:31:00,000 --> 01:31:03,000
你只不过是在用 Channel 的方式去模拟哪而已

2919
01:31:03,000 --> 01:31:09,000
而我们就不要去考虑这个使用

2920
01:31:09,000 --> 01:31:12,000
使用一种远的机器去模拟 Actor 模型

2921
01:31:12,000 --> 01:31:13,000
和真正的使用 Actor 模型

2922
01:31:13,000 --> 01:31:15,000
是在这些差别在哪儿

2923
01:31:15,000 --> 01:31:17,000
我第一次是当你使用另外一种远

2924
01:31:17,000 --> 01:31:21,000
当你使用 Google 的 Feeder 去模拟 Actor 模型的时候

2925
01:31:21,000 --> 01:31:28,000
其实你就以为 Actor 模型是比较适合在这样一种问题领域里面

2926
01:31:28,000 --> 01:31:30,000
实施并发了模型

2927
01:31:30,000 --> 01:31:31,000
不是吗

2928
01:31:31,000 --> 01:31:35,000
我不太清楚

2929
01:31:35,000 --> 01:31:38,000
但我觉得不一定

2930
01:31:38,000 --> 01:31:41,000
有些时候就用 Channel 的模型是更合适的

2931
01:31:41,000 --> 01:31:43,000
有些时候是用 Actor 模型是更合适的

2932
01:31:43,000 --> 01:31:45,000
所以你怎么就选择它

2933
01:31:45,000 --> 01:31:47,000
我觉得还是要看你问题的

2934
01:31:47,000 --> 01:31:49,000
你手上就你的问题的这个

2935
01:31:49,000 --> 01:31:51,000
本身的属性来决定的

2936
01:31:51,000 --> 01:31:55,000
就并不是说 Actor 模型就一定天然比

2937
01:31:55,000 --> 01:32:01,000
Casp 的模型要来得更直观或者是更一种这样

2938
01:32:01,000 --> 01:32:02,000
好吧

2939
01:32:02,000 --> 01:32:05,000
那大概

2940
01:32:07,000 --> 01:32:08,000
我想想

2941
01:32:08,000 --> 01:32:12,000
我们介绍了传统的现成维俗

2942
01:32:12,000 --> 01:32:13,000
介绍了 Feed

2943
01:32:13,000 --> 01:32:17,000
介绍了 Casp 和 Actor

2944
01:32:17,000 --> 01:32:24,000
基本上可以说已经涵盖了比较主流的进行模型

2945
01:32:24,000 --> 01:32:26,000
对我当然

2946
01:32:26,000 --> 01:32:28,000
还有一些其他的比较

2947
01:32:28,000 --> 01:32:30,000
比如说有点书叫

2948
01:32:31,000 --> 01:32:35,000
7 parallelism in 7 weeks

2949
01:32:36,000 --> 01:32:39,000
7 周 7 种病化模型

2950
01:32:39,000 --> 01:32:41,000
它那本说已经介绍了 7 种

2951
01:32:41,000 --> 01:32:44,000
但是我们今天只说了 4 种

2952
01:32:44,000 --> 01:32:46,000
但是如果我们印象没做的话

2953
01:32:46,000 --> 01:32:49,000
它提到的其他 3 种其实

2954
01:32:49,000 --> 01:32:56,000
怎么说要不是我们提到的 4 种比较基本的病化模型的混合

2955
01:32:56,000 --> 01:33:00,000
或者就是在更大规模上的抽象

2956
01:33:00,000 --> 01:33:02,000
当然我不是印象不是很深的

2957
01:33:02,000 --> 01:33:04,000
但是我推荐如果有

2958
01:33:04,000 --> 01:33:06,000
如果这个问题比较感兴趣的听众们

2959
01:33:06,000 --> 01:33:07,000
可以去看看这本书

2960
01:33:07,000 --> 01:33:13,000
它是另外一本叫做 7 language in 7 weeks 的姐妹书

2961
01:33:13,000 --> 01:33:14,000
另外一本书里很好

2962
01:33:17,000 --> 01:33:24,000
然后我们要就要过度到下一个相关但并不等同的话题了

2963
01:33:24,000 --> 01:33:27,000
应该说是在抽象层级上并不懂

2964
01:33:27,000 --> 01:33:28,000
对

2965
01:33:28,000 --> 01:33:30,000
但是它有点相关

2966
01:33:30,000 --> 01:33:37,000
这是所谓的意步和非组栽势的程序圆的设计吧

2967
01:33:37,000 --> 01:33:38,000
对

2968
01:33:38,000 --> 01:33:42,000
刚刚刚刚刚刚刚我们提到在方式套 Programming

2969
01:33:42,000 --> 01:33:43,000
非常难以解决这个问题

2970
01:33:43,000 --> 01:33:46,000
就是当你要出于 I-O 的时候你怎么办吧

2971
01:33:46,000 --> 01:33:51,000
就当你需要问使用者的性命的时候

2972
01:33:51,000 --> 01:33:58,000
你使用多个当有一种病情机制

2973
01:33:58,000 --> 01:34:02,000
并且女生要解决寻问使用者的性命这个问题的时候

2974
01:34:02,000 --> 01:34:04,000
你到底应该怎么办

2975
01:34:04,000 --> 01:34:06,000
这就是我们接下来需要讨论的问题

2976
01:34:06,000 --> 01:34:10,000
就是意义化 I-O 最恰当的抽象到底是什么

2977
01:34:10,000 --> 01:34:13,000
我们传统上

2978
01:34:13,000 --> 01:34:14,000
不叫传统上吗

2979
01:34:14,000 --> 01:34:15,000
可能目前用的

2980
01:34:15,000 --> 01:34:17,000
可能大家听得最熟悉的

2981
01:34:17,000 --> 01:34:19,000
就是一个叫做 asynchronous

2982
01:34:19,000 --> 01:34:21,000
就是意步 I-O 这么一个做法

2983
01:34:21,000 --> 01:34:24,000
这个主要存在一项什么 node

2984
01:34:24,000 --> 01:34:29,000
这种一些反正是社极加 va script 的话

2985
01:34:29,000 --> 01:34:32,000
基本上都是走 Asonk I-O 的方式

2986
01:34:32,000 --> 01:34:35,000
然后 Python 的话有这个像 Toneado

2987
01:34:35,000 --> 01:34:37,000
还是之前那个叫什么 Twitter

2988
01:34:37,000 --> 01:34:39,000
Twitter 都是这样方式

2989
01:34:39,000 --> 01:34:41,000
然后 Ruby 你们是有什么

2990
01:34:41,000 --> 01:34:45,000
Ruby 我还真的不喜欢

2991
01:34:45,000 --> 01:34:47,000
就 node 它比如说它底层也是用的

2992
01:34:47,000 --> 01:34:50,000
像 Cade 那个叫 Lib Uv 来实现它的意步 I-O

2993
01:34:51,000 --> 01:34:55,000
对我记得 NodeVim 它是重要的

2994
01:34:55,000 --> 01:34:57,000
非常重要的那个

2995
01:34:57,000 --> 01:34:59,000
土度之一就是要把所有的

2996
01:35:01,000 --> 01:35:04,000
VI 的那个边形人的一份都转到

2997
01:35:04,000 --> 01:35:06,000
那个 Vim 的边形人里边都转到立于

2998
01:35:06,000 --> 01:35:07,000
非常实现

2999
01:35:07,000 --> 01:35:09,000
对很多人现在有很多这种

3000
01:35:09,000 --> 01:35:13,000
采用那个一步 I-O 的这种大形成续

3001
01:35:13,000 --> 01:35:16,000
都在改到用这一步包来实现了吗

3002
01:35:16,000 --> 01:35:18,000
因为它确实写得很好

3003
01:35:18,000 --> 01:35:20,000
跨平台里都做得挺不错的

3004
01:35:20,000 --> 01:35:24,000
然后 Java 的话有那个叫 N-I-O

3005
01:35:24,000 --> 01:35:26,000
就是新 I-O 的那么一个库

3006
01:35:26,000 --> 01:35:29,000
也可以做这种一步 I-O 的机制了

3007
01:35:29,000 --> 01:35:31,000
所以有什么其他的主流语言的

3008
01:35:31,000 --> 01:35:32,000
好像差不多了

3009
01:35:32,000 --> 01:35:34,000
对

3010
01:35:34,000 --> 01:35:39,000
然后立步 I-O 到底是做了一件什么样的事情呢

3011
01:35:39,000 --> 01:35:41,000
就是他们都是在一个

3012
01:35:41,000 --> 01:35:44,000
他们都是在一个单进程的情况下

3013
01:35:44,000 --> 01:35:46,000
去模拟或者说这么说的

3014
01:35:46,000 --> 01:35:49,000
他们都是在一个单进程的情况下

3015
01:35:49,000 --> 01:35:51,000
去做一些病发的事情

3016
01:35:51,000 --> 01:35:55,000
对他们试图用其实就是一个

3017
01:35:55,000 --> 01:35:58,000
非常简单的例子

3018
01:35:58,000 --> 01:36:01,000
就是我先做一件事情

3019
01:36:01,000 --> 01:36:04,000
然后在这件事情跑了

3020
01:36:04,000 --> 01:36:05,000
建议之中去做另外一件事

3021
01:36:05,000 --> 01:36:07,000
比如说回到我们刚才那个

3022
01:36:07,000 --> 01:36:10,000
做饭的例子我先把锅做在火上

3023
01:36:10,000 --> 01:36:11,000
然后开始烧水

3024
01:36:11,000 --> 01:36:13,000
然后在烧水的签键系里面

3025
01:36:13,000 --> 01:36:14,000
我开始切菜

3026
01:36:14,000 --> 01:36:16,000
然后等到水烧开了

3027
01:36:16,000 --> 01:36:17,000
我看到水在滚

3028
01:36:17,000 --> 01:36:19,000
然后我再去滚烧水的事情

3029
01:36:19,000 --> 01:36:21,000
其实就是一个非常

3030
01:36:21,000 --> 01:36:23,000
一无 I-O 其实就是这样一个

3031
01:36:23,000 --> 01:36:24,000
非常简单的问题

3032
01:36:24,000 --> 01:36:27,000
只不过它具体实现起来会比

3033
01:36:27,000 --> 01:36:31,000
做菜这个这么简单的一个任务要复杂

3034
01:36:31,000 --> 01:36:32,000
很多人

3035
01:36:32,000 --> 01:36:33,000
对

3036
01:36:33,000 --> 01:36:35,000
就为什么说还有一个问题就是说

3037
01:36:35,000 --> 01:36:36,000
为什么每次提到一步的时候

3038
01:36:36,000 --> 01:36:38,000
都一定是指挨 O 因为

3039
01:36:38,000 --> 01:36:40,000
就是前说到机算机制

3040
01:36:40,000 --> 01:36:41,000
之前我们某一期讲过

3041
01:36:41,000 --> 01:36:43,000
这段机体系结构的一个问题

3042
01:36:43,000 --> 01:36:48,000
就是说在所有的机算机系的应用里面

3043
01:36:48,000 --> 01:36:50,000
你只要设计到 I-O 的时候

3044
01:36:50,000 --> 01:36:52,000
这个 CPU 都是远远高于

3045
01:36:52,000 --> 01:36:55,000
它的处理数都是远远高于你这个

3046
01:36:55,000 --> 01:36:56,000
就是输入输入的速度的

3047
01:36:56,000 --> 01:36:58,000
这样的话一个毕业的那结果就是说

3048
01:36:58,000 --> 01:37:01,000
如果你只要一旦设计 I-O 的操作

3049
01:37:01,000 --> 01:37:03,000
你的 CPU 就要闲之前来等

3050
01:37:03,000 --> 01:37:05,000
那么一步不 I-O 的他们一个切入点

3051
01:37:05,000 --> 01:37:09,000
就是说那我们就不要等 I-O 的想应结果

3052
01:37:09,000 --> 01:37:12,000
回来就那个意思等他啥等

3053
01:37:12,000 --> 01:37:14,000
反正没这事儿做嘛

3054
01:37:14,000 --> 01:37:15,000
我们在

3055
01:37:15,000 --> 01:37:18,000
他结果反回来之前我们先做点别的事

3056
01:37:18,000 --> 01:37:20,000
然后等那边结果反回来之后

3057
01:37:20,000 --> 01:37:22,000
你再通知我再回来

3058
01:37:22,000 --> 01:37:24,000
把这件事情接着再减起来接着做下去

3059
01:37:24,000 --> 01:37:25,000
没错

3060
01:37:25,000 --> 01:37:29,000
但是一步 I-O 有一个问题

3061
01:37:29,000 --> 01:37:32,000
就是很有可能你协调不好

3062
01:37:32,000 --> 01:37:33,000
对

3063
01:37:33,000 --> 01:37:36,000
就还是用作案的例子来说

3064
01:37:36,000 --> 01:37:39,000
可能你想起来你想当然会觉得

3065
01:37:39,000 --> 01:37:40,000
烧水的时候我切菜

3066
01:37:40,000 --> 01:37:42,000
但是你没有办法保证

3067
01:37:42,000 --> 01:37:44,000
在水烧开之前你一定能把菜交

3068
01:37:44,000 --> 01:37:46,000
就是我相信每一个喜欢做饭的人

3069
01:37:46,000 --> 01:37:48,000
都会有这样的仅仅或者是

3070
01:37:48,000 --> 01:37:53,000
什么仅仅就是同时有很多事情要不去处理

3071
01:37:53,000 --> 01:37:56,000
甚至我记得新加坚英语里面好

3072
01:37:56,000 --> 01:37:57,000
有一笔有七克文

3073
01:37:57,000 --> 01:38:00,000
就是说一个主副在火面

3074
01:38:00,000 --> 01:38:01,000
然后电话响了

3075
01:38:01,000 --> 01:38:04,000
同时又有人在敲门

3076
01:38:04,000 --> 01:38:07,000
语此同时在加上如果锅开了

3077
01:38:07,000 --> 01:38:10,000
那在这种用上你该怎么办吧

3078
01:38:10,000 --> 01:38:13,000
其实一步

3079
01:38:13,000 --> 01:38:15,000
一步的 I-O 或者说机会调了一步

3080
01:38:15,000 --> 01:38:18,000
I-O 就有这样一个语生俱蓝的问题

3081
01:38:18,000 --> 01:38:21,000
你很难去理解

3082
01:38:21,000 --> 01:38:23,000
或者说是很难事先判定

3083
01:38:23,000 --> 01:38:26,000
所有事情发生的先从顺序

3084
01:38:26,000 --> 01:38:30,000
然后因为你作为一个程序

3085
01:38:30,000 --> 01:38:34,000
你只能用现行方式去写代码

3086
01:38:34,000 --> 01:38:36,000
所以你现行的代码是很难处理

3087
01:38:36,000 --> 01:38:41,000
这样一个不知道先后是英国顺序的问题

3088
01:38:41,000 --> 01:38:42,000
对

3089
01:38:42,000 --> 01:38:46,000
这里面有一个通常有一个词汇来描述

3090
01:38:46,000 --> 01:38:48,000
这个采用 I-O 的程序结构

3091
01:38:48,000 --> 01:38:50,000
叫做控制流导致

3092
01:38:50,000 --> 01:38:52,000
Inversive Control Flow

3093
01:38:52,000 --> 01:38:55,000
我们通常写代码的时候

3094
01:38:55,000 --> 01:38:56,000
我们也说先怎么怎么样

3095
01:38:56,000 --> 01:38:57,000
后怎么怎么样

3096
01:38:57,000 --> 01:38:58,000
它是一个现性的

3097
01:38:58,000 --> 01:39:00,000
前一陷后我的关系走下来的对吧

3098
01:39:00,000 --> 01:39:02,000
但是如果你采用这种意味

3099
01:39:02,000 --> 01:39:04,000
我这种回调方式来做的话

3100
01:39:04,000 --> 01:39:06,000
就会发现

3101
01:39:06,000 --> 01:39:08,000
我这个消息过来了

3102
01:39:08,000 --> 01:39:09,000
我这个时候该干嘛呢

3103
01:39:09,000 --> 01:39:11,000
你再去找半天

3104
01:39:11,000 --> 01:39:12,000
我现在到应该到这一步了

3105
01:39:12,000 --> 01:39:14,000
我应该恢复到之前那个状态

3106
01:39:14,000 --> 01:39:16,000
然后怎么怎么接着做下去

3107
01:39:16,000 --> 01:39:17,000
其实是一个

3108
01:39:17,000 --> 01:39:19,000
如果人脑就想是一个庭

3109
01:39:19,000 --> 01:39:20,000
废实非常地事情

3110
01:39:20,000 --> 01:39:21,000
但如果你写代码来做的话

3111
01:39:21,000 --> 01:39:24,000
就是要考虑很多可能

3112
01:39:24,000 --> 01:39:27,000
你遇到的组合的这种情况出现

3113
01:39:27,000 --> 01:39:28,000
没错

3114
01:39:28,000 --> 01:39:31,000
但是 I-O 就是

3115
01:39:31,000 --> 01:39:34,000
就计划回到 I-O 的一个什么样的好处呢

3116
01:39:34,000 --> 01:39:36,000
就是它可以保证整个

3117
01:39:36,000 --> 01:39:38,000
因为它是一个单进程的

3118
01:39:38,000 --> 01:39:39,000
这么一个单进程

3119
01:39:39,000 --> 01:39:41,000
或者单线成的这么一个结构

3120
01:39:41,000 --> 01:39:42,000
它一个好处就是

3121
01:39:42,000 --> 01:39:44,000
可以完全不用考虑所的问题

3122
01:39:44,000 --> 01:39:45,000
对

3123
01:39:45,000 --> 01:39:49,000
因为你在任意时刻都只有一个

3124
01:39:49,000 --> 01:39:51,000
控制流在执行

3125
01:39:51,000 --> 01:39:53,000
这样就一个工作单元在跑

3126
01:39:53,000 --> 01:39:54,000
对没错

3127
01:39:54,000 --> 01:39:56,000
你就不用去考虑说

3128
01:39:56,000 --> 01:39:58,000
我在这个我的这个进程

3129
01:39:58,000 --> 01:40:00,000
或者是线成这个

3130
01:40:00,000 --> 01:40:01,000
就是 memory space

3131
01:40:01,000 --> 01:40:02,000
就是内存空间以内

3132
01:40:02,000 --> 01:40:04,000
我要去修改任何状态

3133
01:40:04,000 --> 01:40:05,000
我不会

3134
01:40:05,000 --> 01:40:06,000
我改的时候是

3135
01:40:06,000 --> 01:40:08,000
肯定是不会有任何人跟我抢的

3136
01:40:08,000 --> 01:40:09,000
对

3137
01:40:09,000 --> 01:40:11,000
这也可能也是

3138
01:40:11,000 --> 01:40:13,000
我现在讲到加拿大 script 的这个

3139
01:40:13,000 --> 01:40:14,000
引擎也好

3140
01:40:14,000 --> 01:40:15,000
它可能

3141
01:40:15,000 --> 01:40:17,000
在意的一点

3142
01:40:17,000 --> 01:40:19,000
因为你一旦可以避免这个所

3143
01:40:19,000 --> 01:40:21,000
或者就就就

3144
01:40:21,000 --> 01:40:23,000
就同步就要什么

3145
01:40:23,000 --> 01:40:24,000
share the middle of state

3146
01:40:24,000 --> 01:40:26,000
就是共享的可边状态的话

3147
01:40:26,000 --> 01:40:27,000
但可以可以

3148
01:40:27,000 --> 01:40:29,000
可以避免这个你的整个

3149
01:40:29,000 --> 01:40:30,000
边存的

3150
01:40:30,000 --> 01:40:31,000
嗯

3151
01:40:31,000 --> 01:40:32,000
这么说呢

3152
01:40:32,000 --> 01:40:33,000
难度吧

3153
01:40:33,000 --> 01:40:34,000
就会降低

3154
01:40:34,000 --> 01:40:36,000
很大的一个什么数量值的降低

3155
01:40:36,000 --> 01:40:37,000
但是如果

3156
01:40:37,000 --> 01:40:38,000
你不能

3157
01:40:38,000 --> 01:40:39,000
你不能保证这一点的话

3158
01:40:39,000 --> 01:40:40,000
你就会牵扰了

3159
01:40:40,000 --> 01:40:41,000
刚才我们讲那个

3160
01:40:41,000 --> 01:40:42,000
并行计算的

3161
01:40:42,000 --> 01:40:44,000
最核心的矛盾

3162
01:40:44,000 --> 01:40:46,000
就是人没有办法去思考

3163
01:40:46,000 --> 01:40:48,000
像机器那样并行的去思考嘛

3164
01:40:48,000 --> 01:40:48,000
对

3165
01:40:48,000 --> 01:40:51,000
但是这个机会的一外 o

3166
01:40:51,000 --> 01:40:52,000
就是有一个好

3167
01:40:52,000 --> 01:40:53,000
一个很大的缺陷

3168
01:40:53,000 --> 01:40:55,000
就是它要把我们这个程序

3169
01:40:55,000 --> 01:40:56,000
整个逻辑流啊

3170
01:40:56,000 --> 01:40:58,000
分得非常碎

3171
01:40:58,000 --> 01:40:59,000
通过回到的方式

3172
01:40:59,000 --> 01:41:01,000
你要把它整个逻辑流

3173
01:41:01,000 --> 01:41:03,000
做到切成很多小片段

3174
01:41:03,000 --> 01:41:04,000
然后每个片段

3175
01:41:04,000 --> 01:41:05,000
它之间的关系

3176
01:41:05,000 --> 01:41:06,000
又不是非常地

3177
01:41:06,000 --> 01:41:08,000
那种很现心的民党

3178
01:41:08,000 --> 01:41:09,000
这样的话对于

3179
01:41:09,000 --> 01:41:11,000
你理解整个程序的结构

3180
01:41:11,000 --> 01:41:13,000
其实是非常不利的

3181
01:41:13,000 --> 01:41:14,000
对

3182
01:41:14,000 --> 01:41:15,000
在 Junscript

3183
01:41:15,000 --> 01:41:16,000
程序原里面

3184
01:41:16,000 --> 01:41:17,000
经常会有这样的效果

3185
01:41:17,000 --> 01:41:20,000
就是一个回掉

3186
01:41:20,000 --> 01:41:21,000
牵着另外一个回掉

3187
01:41:21,000 --> 01:41:22,000
然后再牵着另外一个回掉

3188
01:41:22,000 --> 01:41:23,000
然后整个

3189
01:41:23,000 --> 01:41:25,000
最后你习这种代码的结尾

3190
01:41:25,000 --> 01:41:27,000
就是扩号分号

3191
01:41:27,000 --> 01:41:28,000
花锅号

3192
01:41:28,000 --> 01:41:29,000
扩号分号

3193
01:41:29,000 --> 01:41:30,000
花锅号分号

3194
01:41:30,000 --> 01:41:31,000
对

3195
01:41:31,000 --> 01:41:33,000
Junscript 就牵到我进去

3196
01:41:33,000 --> 01:41:34,000
对

3197
01:41:34,000 --> 01:41:35,000
对

3198
01:41:35,000 --> 01:41:36,000
然后这个有一个专门的

3199
01:41:36,000 --> 01:41:37,000
我们给它一个称呼叫做

3200
01:41:37,000 --> 01:41:38,000
回掉

3201
01:41:38,000 --> 01:41:39,000
回掉地狱

3202
01:41:39,000 --> 01:41:40,000
Coverback Hell

3203
01:41:40,000 --> 01:41:41,000
Cover Hell

3204
01:41:41,000 --> 01:41:42,000
对

3205
01:41:42,000 --> 01:41:43,000
然后

3206
01:41:43,000 --> 01:41:44,000
就说

3207
01:41:44,000 --> 01:41:46,000
那我们就有没有办法

3208
01:41:46,000 --> 01:41:48,000
说能够继绑流

3209
01:41:48,000 --> 01:41:49,000
这个单

3210
01:41:49,000 --> 01:41:51,000
就是 E.boil 这种单线层

3211
01:41:51,000 --> 01:41:53,000
不需要考虑所的机制的好处

3212
01:41:53,000 --> 01:41:54,000
同时呢

3213
01:41:54,000 --> 01:41:57,000
又可以保留我们这个程序逻辑

3214
01:41:57,000 --> 01:41:59,000
是现心不用分的

3215
01:41:59,000 --> 01:42:00,000
不用切成小圈

3216
01:42:00,000 --> 01:42:01,000
断切的很散

3217
01:42:01,000 --> 01:42:02,000
这种状况呢

3218
01:42:02,000 --> 01:42:05,000
就也有一些好好的尝试嘛

3219
01:42:05,000 --> 01:42:07,000
就是说这个基于邪程

3220
01:42:07,000 --> 01:42:08,000
这么一个概念

3221
01:42:08,000 --> 01:42:10,000
邪程是什么意思

3222
01:42:10,000 --> 01:42:12,000
刚才有讲到有进程

3223
01:42:12,000 --> 01:42:13,000
有线程

3224
01:42:13,000 --> 01:42:14,000
有邪程

3225
01:42:14,000 --> 01:42:16,000
邪程其实是在

3226
01:42:16,000 --> 01:42:18,000
程序里面自己管理的一个

3227
01:42:18,000 --> 01:42:19,000
逻辑的

3228
01:42:19,000 --> 01:42:22,000
又要用一个广义的进程了好

3229
01:42:23,000 --> 01:42:25,000
对 我觉得邪程其实

3230
01:42:25,000 --> 01:42:28,000
比较容易理解的点

3231
01:42:28,000 --> 01:42:30,000
就是说

3232
01:42:30,000 --> 01:42:35,000
邪程其实是非常贴近现实生活的一个东西

3233
01:42:35,000 --> 01:42:38,000
比如说我在战模型

3234
01:42:38,000 --> 01:42:40,000
然后这个时候女朋友

3235
01:42:40,000 --> 01:42:42,000
好像我说

3236
01:42:42,000 --> 01:42:43,000
水开了

3237
01:42:43,000 --> 01:42:45,000
你去帮她

3238
01:42:45,000 --> 01:42:47,000
你去泡茶

3239
01:42:47,000 --> 01:42:48,000
然后我可以很方便的

3240
01:42:48,000 --> 01:42:51,000
放下我手中的工具转身去泡茶

3241
01:42:51,000 --> 01:42:53,000
回来的时候接着我刚才

3242
01:42:53,000 --> 01:42:54,000
站到一半的

3243
01:42:54,000 --> 01:42:57,000
progress

3244
01:42:57,000 --> 01:43:00,000
中国是什么

3245
01:43:00,000 --> 01:43:02,000
进步度对

3246
01:43:02,000 --> 01:43:04,000
然后继续粘我的模型

3247
01:43:04,000 --> 01:43:06,000
就是说

3248
01:43:06,000 --> 01:43:08,000
其实现实生活中很多很多事情

3249
01:43:08,000 --> 01:43:11,000
都是可以对应到集团的邪程

3250
01:43:11,000 --> 01:43:14,000
但是在传统的没有邪程的

3251
01:43:14,000 --> 01:43:16,000
编程模型里面

3252
01:43:16,000 --> 01:43:17,000
编程世界里面

3253
01:43:17,000 --> 01:43:20,000
计算机是不知道怎么保存现场

3254
01:43:20,000 --> 01:43:21,000
所以说

3255
01:43:21,000 --> 01:43:22,000
邪程其实就是复以的

3256
01:43:22,000 --> 01:43:24,000
这段机会保存一个直行到一半的

3257
01:43:24,000 --> 01:43:26,000
韩术的现场的能力

3258
01:43:26,000 --> 01:43:28,000
然后告诉你说你做到这

3259
01:43:28,000 --> 01:43:29,000
给你的一个段点

3260
01:43:29,000 --> 01:43:31,000
你可以跳出去做比较事情

3261
01:43:31,000 --> 01:43:32,000
回来的时候

3262
01:43:32,000 --> 01:43:33,000
刚才直行到哪

3263
01:43:33,000 --> 01:43:35,000
还可以继续接着去

3264
01:43:35,000 --> 01:43:36,000
这就是什么

3265
01:43:36,000 --> 01:43:37,000
所以你的所谓的 context

3266
01:43:37,000 --> 01:43:40,000
你的上下文都还保留在那个原样

3267
01:43:40,000 --> 01:43:43,000
你能接着假装没有中断的这件事情

3268
01:43:43,000 --> 01:43:45,000
发生一样你接着往前走下去了

3269
01:43:45,000 --> 01:43:47,000
所以从这个意义上来讲

3270
01:43:47,000 --> 01:43:48,000
现场也好

3271
01:43:48,000 --> 01:43:49,000
进程也好

3272
01:43:49,000 --> 01:43:50,000
写成好

3273
01:43:50,000 --> 01:43:51,000
他们都做到同样的事情

3274
01:43:51,000 --> 01:43:55,000
就是说是一段可以被随时重

3275
01:43:55,000 --> 01:43:56,000
叫做 Rizm

3276
01:43:56,000 --> 01:43:57,000
不叫重启

3277
01:43:57,000 --> 01:43:58,000
叫什么

3278
01:43:58,000 --> 01:43:59,000
恢复

3279
01:43:59,000 --> 01:44:01,000
所以是可以剪起来接着

3280
01:44:01,000 --> 01:44:03,000
再做下去的这么一个逻辑

3281
01:44:03,000 --> 01:44:04,000
对

3282
01:44:04,000 --> 01:44:05,000
但是就离路的就是什么

3283
01:44:05,000 --> 01:44:06,000
对

3284
01:44:06,000 --> 01:44:07,000
Rizm 对

3285
01:44:07,000 --> 01:44:08,000
没说

3286
01:44:08,000 --> 01:44:10,000
但他们的资源的区别在哪里

3287
01:44:10,000 --> 01:44:14,000
就是说可能在实现的资源的 overhead

3288
01:44:14,000 --> 01:44:15,000
他们是不一样的

3289
01:44:15,000 --> 01:44:17,000
可能最重的可能是进程

3290
01:44:17,000 --> 01:44:19,000
因为操心的要做很多什么

3291
01:44:19,000 --> 01:44:20,000
CPU 技存器的切化

3292
01:44:20,000 --> 01:44:21,000
也让你把它的事情

3293
01:44:21,000 --> 01:44:24,000
还要保留一些什么样的系统的一些

3294
01:44:24,000 --> 01:44:26,000
不可以给你的工作

3295
01:44:26,000 --> 01:44:27,000
然后算了一些

3296
01:44:27,000 --> 01:44:28,000
主要是在需要的时候

3297
01:44:28,000 --> 01:44:30,000
需要玩内存里面的很多数据

3298
01:44:30,000 --> 01:44:31,000
考卑一份

3299
01:44:31,000 --> 01:44:32,000
这是非常非常大

3300
01:44:32,000 --> 01:44:33,000
对

3301
01:44:33,000 --> 01:44:34,000
对

3302
01:44:34,000 --> 01:44:35,000
然后进程的开箱

3303
01:44:35,000 --> 01:44:37,000
就要商相对要少一点

3304
01:44:37,000 --> 01:44:39,000
还是比较显着的

3305
01:44:39,000 --> 01:44:40,000
那么鞋程的就是说

3306
01:44:40,000 --> 01:44:42,000
它直接就绕过操制的那一步

3307
01:44:42,000 --> 01:44:44,000
我直接在程序那一步

3308
01:44:44,000 --> 01:44:47,000
通过一种自制的钓度器的方式

3309
01:44:47,000 --> 01:44:49,000
来管理我自己的那些

3310
01:44:49,000 --> 01:44:51,000
那些 task 那些质源

3311
01:44:51,000 --> 01:44:53,000
然后使得有一个

3312
01:44:53,000 --> 01:44:55,000
非常轻量的资源的开箱

3313
01:44:55,000 --> 01:44:58,000
同时又能给我带来像类似于

3314
01:44:58,000 --> 01:45:00,000
进程或者现成那样的一个

3315
01:45:00,000 --> 01:45:02,000
现性的逻辑流的好处

3316
01:45:02,000 --> 01:45:03,000
对

3317
01:45:03,000 --> 01:45:05,000
这样前面所提到的一边

3318
01:45:05,000 --> 01:45:08,000
是 Ctrl flow 的问题就不会在发生

3319
01:45:08,000 --> 01:45:09,000
没错

3320
01:45:09,000 --> 01:45:13,000
现实中使用鞋程的例子也是蛮多的

3321
01:45:13,000 --> 01:45:15,000
其实总体来讲

3322
01:45:15,000 --> 01:45:17,000
像 GoLine 的钓鱼器

3323
01:45:17,000 --> 01:45:19,000
它就是一种鞋程的一种

3324
01:45:19,000 --> 01:45:20,000
一种变种

3325
01:45:20,000 --> 01:45:22,000
然后像 Python 的话

3326
01:45:22,000 --> 01:45:23,000
它有一个叫做 Generator

3327
01:45:23,000 --> 01:45:25,000
深层器之类的感觉

3328
01:45:25,000 --> 01:45:27,000
就是它这个韩束里面

3329
01:45:27,000 --> 01:45:29,000
是有一个特殊的关键

3330
01:45:29,000 --> 01:45:30,000
这个关键词叫做 Yield

3331
01:45:30,000 --> 01:45:32,000
可以暂时的让出

3332
01:45:32,000 --> 01:45:34,000
就是让出的意思

3333
01:45:34,000 --> 01:45:36,000
让出这个程序的控制流

3334
01:45:36,000 --> 01:45:39,000
然后等那边调建合设的时候

3335
01:45:39,000 --> 01:45:41,000
你再把它毁掉这个位置

3336
01:45:41,000 --> 01:45:43,000
然后接着从这个点往下指示

3337
01:45:43,000 --> 01:45:46,000
然后我知道是加了 Script

3338
01:45:46,000 --> 01:45:48,000
从下一个版本还是

3339
01:45:48,000 --> 01:45:49,000
还是期待的时候

3340
01:45:49,000 --> 01:45:51,000
它就下一个版本

3341
01:45:51,000 --> 01:45:53,000
就叫做 Emax Script 6

3342
01:45:53,000 --> 01:45:54,000
Emax Script 6

3343
01:45:54,000 --> 01:45:55,000
这个版本里面

3344
01:45:55,000 --> 01:45:58,000
就已经有类似的 Generator

3345
01:45:58,000 --> 01:46:00,000
这么一个概念在里面了

3346
01:46:00,000 --> 01:46:02,000
然后 Ruby 的话

3347
01:46:02,000 --> 01:46:04,000
它有一个特性叫做 Fiber

3348
01:46:04,000 --> 01:46:06,000
也是一个鞋程的例子

3349
01:46:06,000 --> 01:46:08,000
Fiber 一般的反应中

3350
01:46:08,000 --> 01:46:09,000
叫做什么千层

3351
01:46:09,000 --> 01:46:10,000
就是比现成

3352
01:46:10,000 --> 01:46:13,000
高要细的千类千层

3353
01:46:13,000 --> 01:46:15,000
但是让千层就是鞋程

3354
01:46:15,000 --> 01:46:17,000
因为它是对于 Srad 的那个

3355
01:46:17,000 --> 01:46:19,000
Srad 在支部的那个

3356
01:46:19,000 --> 01:46:20,000
那个予进

3357
01:46:20,000 --> 01:46:21,000
就是访止界的予进

3358
01:46:21,000 --> 01:46:23,000
里面是这样的线头对不对

3359
01:46:23,000 --> 01:46:24,000
对 一根线

3360
01:46:24,000 --> 01:46:26,000
而 Fiber 是组成这个线的

3361
01:46:26,000 --> 01:46:27,000
一个千类的

3362
01:46:27,000 --> 01:46:28,000
一个线

3363
01:46:28,000 --> 01:46:29,000
一个砂吗

3364
01:46:29,000 --> 01:46:30,000
对 这个意思

3365
01:46:30,000 --> 01:46:32,000
然后拍上的话

3366
01:46:32,000 --> 01:46:36,000
还有一个 Forg

3367
01:46:36,000 --> 01:46:38,000
叫做 G event

3368
01:46:38,000 --> 01:46:39,000
它是可以

3369
01:46:39,000 --> 01:46:41,000
甚至通过内容方式来做

3370
01:46:41,000 --> 01:46:43,000
全局的鞋程

3371
01:46:43,000 --> 01:46:44,000
而不是说

3372
01:46:44,000 --> 01:46:46,000
指级线与这个 Generator

3373
01:46:46,000 --> 01:46:48,000
比较受限的鞋程

3374
01:46:48,000 --> 01:46:50,000
OK

3375
01:46:50,000 --> 01:46:51,000
所以

3376
01:46:51,000 --> 01:46:52,000
但问题在于

3377
01:46:52,000 --> 01:46:55,000
不管是回到还是鞋程

3378
01:46:55,000 --> 01:46:57,000
都没有办法

3379
01:46:57,000 --> 01:46:58,000
非常有效的

3380
01:46:58,000 --> 01:46:59,000
利用多和处理器

3381
01:46:59,000 --> 01:47:00,000
不是

3382
01:47:00,000 --> 01:47:01,000
因为你无论如何

3383
01:47:01,000 --> 01:47:04,000
都只有一个单个的进程

3384
01:47:04,000 --> 01:47:07,000
没错

3385
01:47:07,000 --> 01:47:08,000
一般是这样子的

3386
01:47:08,000 --> 01:47:09,000
比如刚刚看那几个例子

3387
01:47:09,000 --> 01:47:11,000
它都是因为有这样的线制

3388
01:47:11,000 --> 01:47:13,000
导致它不能使用多线制

3389
01:47:13,000 --> 01:47:15,000
但是你并不完全是这样

3390
01:47:15,000 --> 01:47:16,000
比如说

3391
01:47:16,000 --> 01:47:17,000
Go 的那个

3392
01:47:17,000 --> 01:47:19,000
GoReting 它其实是可以利用多线

3393
01:47:19,000 --> 01:47:21,000
那个多个处理机合性的

3394
01:47:21,000 --> 01:47:22,000
就是看你这个

3395
01:47:22,000 --> 01:47:23,000
系统的调度的时候

3396
01:47:23,000 --> 01:47:25,000
你是怎么去调度它而已

3397
01:47:25,000 --> 01:47:26,000
OK

3398
01:47:26,000 --> 01:47:27,000
然后

3399
01:47:27,000 --> 01:47:28,000
还有像

3400
01:47:28,000 --> 01:47:31,000
而来这种比较贵意的例子

3401
01:47:31,000 --> 01:47:33,000
但它非常独特的一种机制

3402
01:47:33,000 --> 01:47:35,000
它它里面的线程

3403
01:47:35,000 --> 01:47:36,000
不是这种的线程

3404
01:47:36,000 --> 01:47:38,000
它是自己内置的线程

3405
01:47:38,000 --> 01:47:40,000
它也并不是一个鞋程

3406
01:47:40,000 --> 01:47:42,000
它每个线程都是完全独立

3407
01:47:42,000 --> 01:47:45,000
就是没有任何和其他共享资源的地方

3408
01:47:45,000 --> 01:47:47,000
就是它的那个调度

3409
01:47:47,000 --> 01:47:48,000
其实可以很方便的

3410
01:47:48,000 --> 01:47:50,000
去管理它那些

3411
01:47:50,000 --> 01:47:51,000
那些

3412
01:47:51,000 --> 01:47:52,000
叫做直径的步驟

3413
01:47:52,000 --> 01:47:53,000
它们叫做 Eduction

3414
01:47:53,000 --> 01:47:55,000
这么一个步驟的

3415
01:47:55,000 --> 01:47:56,000
对

3416
01:47:56,000 --> 01:47:57,000
Irland 我虽然不是很了解

3417
01:47:57,000 --> 01:47:59,000
但我觉得它的思路基本上都是

3418
01:47:59,000 --> 01:48:01,000
把 Stread 的当作一种

3419
01:48:01,000 --> 01:48:03,000
宇元内在的机制

3420
01:48:03,000 --> 01:48:04,000
而不是

3421
01:48:04,000 --> 01:48:05,000
没错

3422
01:48:05,000 --> 01:48:07,000
超的是一种提供的机制的一种抽象

3423
01:48:07,000 --> 01:48:08,000
没错

3424
01:48:08,000 --> 01:48:10,000
因为它使用的那个

3425
01:48:10,000 --> 01:48:11,000
Actor Model

3426
01:48:11,000 --> 01:48:12,000
Actor Model

3427
01:48:12,000 --> 01:48:14,000
对这个事情是有天然的需求的嘛

3428
01:48:14,000 --> 01:48:16,000
而且它整个

3429
01:48:16,000 --> 01:48:17,000
调度机也好

3430
01:48:17,000 --> 01:48:18,000
解析器也好

3431
01:48:18,000 --> 01:48:19,000
就是

3432
01:48:19,000 --> 01:48:21,000
为这种方式去优化的

3433
01:48:21,000 --> 01:48:22,000
虽然说它的可能

3434
01:48:22,000 --> 01:48:24,000
只提醒某一个这种

3435
01:48:24,000 --> 01:48:25,000
所谓的

3436
01:48:25,000 --> 01:48:27,000
CPU Heavy 的

3437
01:48:27,000 --> 01:48:28,000
中线的性能不怎么样

3438
01:48:28,000 --> 01:48:29,000
但是它对这种

3439
01:48:29,000 --> 01:48:31,000
可以避行计算的

3440
01:48:31,000 --> 01:48:33,000
任务的处理是非常非常优秀的

3441
01:48:33,000 --> 01:48:34,000
没错

3442
01:48:36,000 --> 01:48:37,000
对

3443
01:48:37,000 --> 01:48:39,000
其实我现在学 Hasko 终于开始

3444
01:48:39,000 --> 01:48:40,000
后终又开始

3445
01:48:40,000 --> 01:48:43,000
为什么突然有这个器机去学它

3446
01:48:43,000 --> 01:48:44,000
我也不知道

3447
01:48:44,000 --> 01:48:47,000
可能主要器机还是因为

3448
01:48:47,000 --> 01:48:49,000
之前看的那个

3449
01:48:49,000 --> 01:48:50,000
Object C 的

3450
01:48:50,000 --> 01:48:52,000
Block

3451
01:48:52,000 --> 01:48:54,000
他们受辛苦

3452
01:48:54,000 --> 01:48:55,000
对不对

3453
01:48:55,000 --> 01:48:56,000
对他们提供了

3454
01:48:56,000 --> 01:48:58,000
大量的

3455
01:48:58,000 --> 01:48:59,000
奇迹引吵

3456
01:48:59,000 --> 01:49:01,000
就是为了让你鞋尔斯维尔斯的时候

3457
01:49:01,000 --> 01:49:03,000
看起来更像 Hasko

3458
01:49:03,000 --> 01:49:04,000
我觉得合避的那种

3459
01:49:04,000 --> 01:49:05,000
干脆的学者啊

3460
01:49:05,000 --> 01:49:08,000
但是这样的这样的

3461
01:49:08,000 --> 01:49:10,000
尝试已经有过很多次

3462
01:49:10,000 --> 01:49:11,000
但我每次都没有用

3463
01:49:11,000 --> 01:49:12,000
坚持下来

3464
01:49:12,000 --> 01:49:14,000
我觉得这次应该坚持坚持

3465
01:49:14,000 --> 01:49:15,000
然后所以在那之后

3466
01:49:15,000 --> 01:49:17,000
我也许可以试试 Lang

3467
01:49:17,000 --> 01:49:18,000
因为有的

3468
01:49:18,000 --> 01:49:20,000
在我北边有一个城市

3469
01:49:20,000 --> 01:49:21,000
叫做 Langin

3470
01:49:21,000 --> 01:49:24,000
以前我以前写过一个

3471
01:49:24,000 --> 01:49:25,000
写过一条推

3472
01:49:25,000 --> 01:49:26,000
就是说

3473
01:49:26,000 --> 01:49:27,000
Langin 这个地方

3474
01:49:27,000 --> 01:49:30,000
就是由二战时机被纳催

3475
01:49:30,000 --> 01:49:32,000
几日会一起的 Langin

3476
01:49:32,000 --> 01:49:33,000
出去见你

3477
01:49:33,000 --> 01:49:34,000
所以叫做 Langin

3478
01:49:34,000 --> 01:49:35,000
在德语里面

3479
01:49:35,000 --> 01:49:37,000
就是使用 Lang 编程的意思

3480
01:49:37,000 --> 01:49:38,000
对

3481
01:49:38,000 --> 01:49:41,000
Langin 在德语里面什么意思

3482
01:49:41,000 --> 01:49:42,000
没有意义吗

3483
01:49:42,000 --> 01:49:44,000
还是只是个名字来

3484
01:49:45,000 --> 01:49:46,000
没有什么意义吧

3485
01:49:46,000 --> 01:49:47,000
就

3486
01:49:47,000 --> 01:49:49,000
至少我找不出什么特别

3487
01:49:49,000 --> 01:49:52,000
至少我想不到什么特别明显的语

3488
01:49:52,000 --> 01:49:53,000
我活动会去查查

3489
01:49:53,000 --> 01:49:54,000
挺忙的

3490
01:49:54,000 --> 01:49:55,000
但是我可以基本上

3491
01:49:55,000 --> 01:49:56,000
可以确定 Langin 跟 Langin

3492
01:49:56,000 --> 01:49:57,000
没有任何的

3493
01:49:57,000 --> 01:49:58,000
没有任何的

3494
01:49:58,000 --> 01:49:59,000
因为 Langin

3495
01:49:59,000 --> 01:50:00,000
里面那个和和

3496
01:50:00,000 --> 01:50:01,000
他见过他是那个

3497
01:50:01,000 --> 01:50:02,000
艾丽信的实验室

3498
01:50:02,000 --> 01:50:03,000
做的语言

3499
01:50:03,000 --> 01:50:04,000
因为是 Archcent

3500
01:50:04,000 --> 01:50:05,000
Language

3501
01:50:05,000 --> 01:50:06,000
所以是 Langin

3502
01:50:06,000 --> 01:50:07,000
原来是这么来的

3503
01:50:07,000 --> 01:50:08,000
我说

3504
01:50:08,000 --> 01:50:09,000
你不知道

3505
01:50:09,000 --> 01:50:10,000
不知道了

3506
01:50:10,000 --> 01:50:11,000
就我原来理解

3507
01:50:11,000 --> 01:50:12,000
理解了解

3508
01:50:12,000 --> 01:50:13,000
非常非常有限

3509
01:50:13,000 --> 01:50:14,000
对他就是这么样

3510
01:50:14,000 --> 01:50:15,000
而且还有一个

3511
01:50:15,000 --> 01:50:16,000
这个可能只有有一期

3512
01:50:16,000 --> 01:50:18,000
专门讲 Archcent 说再说吧

3513
01:50:18,000 --> 01:50:20,000
还有一个很有意思的那个

3514
01:50:20,000 --> 01:50:21,000
看起来

3515
01:50:21,000 --> 01:50:22,000
甚至有点 Weer 的

3516
01:50:22,000 --> 01:50:24,000
一个短视频

3517
01:50:24,000 --> 01:50:25,000
非常有意思

3518
01:50:25,000 --> 01:50:27,000
因为 Archcent

3519
01:50:27,000 --> 01:50:28,000
最开始的语用图是

3520
01:50:28,000 --> 01:50:29,000
用于做那个

3521
01:50:29,000 --> 01:50:30,000
叫做什么

3522
01:50:30,000 --> 01:50:32,000
电话交换机的控制的

3523
01:50:32,000 --> 01:50:33,000
对

3524
01:50:33,000 --> 01:50:34,000
控制不好

3525
01:50:34,000 --> 01:50:35,000
怎么怎么样

3526
01:50:35,000 --> 01:50:36,000
他的那个时间

3527
01:50:36,000 --> 01:50:38,000
整个过程都在描述

3528
01:50:38,000 --> 01:50:39,000
这么一个过程中

3529
01:50:39,000 --> 01:50:40,000
Archcent 是怎么样

3530
01:50:40,000 --> 01:50:41,000
起作用的

3531
01:50:41,000 --> 01:50:42,000
非常好笑的一个视频

3532
01:50:42,000 --> 01:50:43,000
一定要看一下

3533
01:50:43,000 --> 01:50:45,000
有一种

3534
01:50:45,000 --> 01:50:46,000
Mounty Python 的即适感

3535
01:50:46,000 --> 01:50:47,000
啊

3536
01:50:47,000 --> 01:50:48,000
啊

3537
01:50:48,000 --> 01:50:49,000
有意思

3538
01:50:49,000 --> 01:50:50,000
所以处理电话不好

3539
01:50:50,000 --> 01:50:51,000
其实是

3540
01:50:51,000 --> 01:50:52,000
听起来也是一个

3541
01:50:52,000 --> 01:50:53,000
天生就代表

3542
01:50:53,000 --> 01:50:55,000
并发信质的问题领域

3543
01:50:55,000 --> 01:50:56,000
没错

3544
01:50:56,000 --> 01:50:57,000
对

3545
01:50:57,000 --> 01:50:59,000
所以在从这样种领域里面

3546
01:50:59,000 --> 01:51:02,000
所为了解决这样一个领域的问题

3547
01:51:02,000 --> 01:51:04,000
而单身的变成员

3548
01:51:04,000 --> 01:51:07,000
也就天生的非常强调

3549
01:51:07,000 --> 01:51:10,000
解决这种问题的方便程度

3550
01:51:11,000 --> 01:51:13,000
而且我觉得他

3551
01:51:13,000 --> 01:51:14,000
他这个

3552
01:51:14,000 --> 01:51:15,000
就是 Erlan 他这种方式

3553
01:51:15,000 --> 01:51:17,000
而且才用那种

3554
01:51:17,000 --> 01:51:18,000
这样的 ActorModel 也好

3555
01:51:18,000 --> 01:51:20,000
他整理这种调度不好

3556
01:51:20,000 --> 01:51:21,000
他有一个

3557
01:51:21,000 --> 01:51:22,000
很

3558
01:51:22,000 --> 01:51:23,000
成熟的

3559
01:51:23,000 --> 01:51:25,000
叫做监控的系统

3560
01:51:25,000 --> 01:51:26,000
Supervizence System

3561
01:51:26,000 --> 01:51:27,000
叫做 OTP

3562
01:51:27,000 --> 01:51:29,000
就是 OpenTelicom

3563
01:51:29,000 --> 01:51:30,000
Platform

3564
01:51:30,000 --> 01:51:31,000
开放电信平台

3565
01:51:31,000 --> 01:51:32,000
听起来很乖

3566
01:51:32,000 --> 01:51:33,000
我怎么会

3567
01:51:33,000 --> 01:51:34,000
听起来非常电信

3568
01:51:34,000 --> 01:51:36,000
听起来非常爱的意思

3569
01:51:36,000 --> 01:51:37,000
但是他

3570
01:51:37,000 --> 01:51:39,000
但是他确实是解决了

3571
01:51:39,000 --> 01:51:40,000
很多这种大型的

3572
01:51:40,000 --> 01:51:41,000
监控程度的一些问题

3573
01:51:41,000 --> 01:51:42,000
比如说

3574
01:51:42,000 --> 01:51:43,000
他里面的所有的那些

3575
01:51:43,000 --> 01:51:44,000
那些

3576
01:51:44,000 --> 01:51:45,000
就是现成

3577
01:51:45,000 --> 01:51:46,000
我们叫做 Actor 也好

3578
01:51:46,000 --> 01:51:47,000
他是随时可以

3579
01:51:47,000 --> 01:51:48,000
可以让他

3580
01:51:48,000 --> 01:51:49,000
就是他的错误处理

3581
01:51:49,000 --> 01:51:50,000
即使是不处理

3582
01:51:50,000 --> 01:51:51,000
让他

3583
01:51:51,000 --> 01:51:52,000
Crash 的

3584
01:51:52,000 --> 01:51:53,000
然后

3585
01:51:53,000 --> 01:51:54,000
Crash 的周怎么办呢

3586
01:51:54,000 --> 01:51:56,000
他每一个 Actor

3587
01:51:56,000 --> 01:51:57,000
他会为他分配一个

3588
01:51:57,000 --> 01:51:59,000
叫做 Supervizence

3589
01:51:59,000 --> 01:52:01,000
就是监管管理者

3590
01:52:01,000 --> 01:52:02,000
然后这个管理者

3591
01:52:02,000 --> 01:52:04,000
不叫不叫每一个

3592
01:52:04,000 --> 01:52:05,000
不是

3593
01:52:06,000 --> 01:52:07,000
这里说错了

3594
01:52:07,000 --> 01:52:08,000
应该重新讲一下

3595
01:52:08,000 --> 01:52:09,000
因为说

3596
01:52:09,000 --> 01:52:10,000
他里面每一个 Actor

3597
01:52:10,000 --> 01:52:11,000
都是被一个

3598
01:52:11,000 --> 01:52:13,000
Supervizor 管理的

3599
01:52:13,000 --> 01:52:14,000
如果这个 Supervizor

3600
01:52:14,000 --> 01:52:15,000
探测到那个 Actor

3601
01:52:15,000 --> 01:52:16,000
挂掉了

3602
01:52:16,000 --> 01:52:17,000
他就会后头死掉了

3603
01:52:17,000 --> 01:52:19,000
他就会重新在起一个一模一样的

3604
01:52:21,000 --> 01:52:22,000
然后他里面整个这种

3605
01:52:22,000 --> 01:52:23,000
这套思维哲学

3606
01:52:23,000 --> 01:52:24,000
是非常

3607
01:52:24,000 --> 01:52:25,000
非常

3608
01:52:25,000 --> 01:52:26,000
很不一样

3609
01:52:26,000 --> 01:52:27,000
而且你

3610
01:52:27,000 --> 01:52:28,000
到目前为止

3611
01:52:28,000 --> 01:52:29,000
我们做那种

3612
01:52:29,000 --> 01:52:30,000
很多这种

3613
01:52:30,000 --> 01:52:31,000
像做那种

3614
01:52:31,000 --> 01:52:32,000
大规模的

3615
01:52:32,000 --> 01:52:33,000
分模式一种的维护的时候会发现

3616
01:52:34,000 --> 01:52:35,000
你做的一些种越大

3617
01:52:35,000 --> 01:52:36,000
你越会

3618
01:52:36,000 --> 01:52:38,000
你的整个架工

3619
01:52:38,000 --> 01:52:39,000
会越靠近

3620
01:52:39,000 --> 01:52:40,000
像二岚的这种

3621
01:52:40,000 --> 01:52:41,000
这套模型来讲

3622
01:52:41,000 --> 01:52:42,000
比如说很简单的

3623
01:52:42,000 --> 01:52:44,000
一个 Google 的那个例子

3624
01:52:44,000 --> 01:52:45,000
Google 的来说

3625
01:52:45,000 --> 01:52:46,000
它们

3626
01:52:46,000 --> 01:52:47,000
就传络在我们做这种

3627
01:52:47,000 --> 01:52:48,000
服务器转件

3628
01:52:48,000 --> 01:52:49,000
我们都可能说

3629
01:52:49,000 --> 01:52:51,000
我们这个服务器不要挂掉

3630
01:52:51,000 --> 01:52:52,000
我们要的还要

3631
01:52:52,000 --> 01:52:53,000
高稳定可靠对吧

3632
01:52:53,000 --> 01:52:54,000
就像我们说

3633
01:52:54,000 --> 01:52:55,000
这个服务器的

3634
01:52:55,000 --> 01:52:56,000
可靠型和高于工作站

3635
01:52:56,000 --> 01:52:57,000
然后工程站的可靠型

3636
01:52:57,000 --> 01:52:59,000
要高于这种个人 PC 的

3637
01:52:59,000 --> 01:53:00,000
但是

3638
01:53:00,000 --> 01:53:01,000
你为了换取那根钩可靠型

3639
01:53:01,000 --> 01:53:02,000
你要付出根钩的成本

3640
01:53:02,000 --> 01:53:03,000
就是单位硬件

3641
01:53:03,000 --> 01:53:04,000
和单位机场能的成本

3642
01:53:04,000 --> 01:53:05,000
你是要上去了吗

3643
01:53:05,000 --> 01:53:06,000
然后 Google 当年的

3644
01:53:06,000 --> 01:53:07,000
做法就是说

3645
01:53:07,000 --> 01:53:09,000
我们做大规模的

3646
01:53:09,000 --> 01:53:10,000
这种服务端

3647
01:53:10,000 --> 01:53:12,000
我们不需要用这种

3648
01:53:12,000 --> 01:53:13,000
所有的服务

3649
01:53:13,000 --> 01:53:14,000
就似乎

3650
01:53:14,000 --> 01:53:16,000
似乎是伏器级别的硬件

3651
01:53:16,000 --> 01:53:18,000
什么高档处理器

3652
01:53:18,000 --> 01:53:19,000
或者高档机房

3653
01:53:19,000 --> 01:53:21,000
我们这种普通的

3654
01:53:21,000 --> 01:53:22,000
所谓的 commodity hardware

3655
01:53:22,000 --> 01:53:23,000
就是说

3656
01:53:23,000 --> 01:53:24,000
说是说

3657
01:53:24,000 --> 01:53:26,000
虽然说可静很托手可靠

3658
01:53:26,000 --> 01:53:27,000
但普通的机器

3659
01:53:27,000 --> 01:53:28,000
就是普通的机器

3660
01:53:28,000 --> 01:53:29,000
就可以随于 T 1 的机器

3661
01:53:29,000 --> 01:53:30,000
然后它虽然说

3662
01:53:30,000 --> 01:53:32,000
它的那个固杂率

3663
01:53:32,000 --> 01:53:33,000
要比这种所谓的

3664
01:53:33,000 --> 01:53:34,000
服务器级别的硬件要高

3665
01:53:34,000 --> 01:53:37,000
但是我们只要把软件的融错写好

3666
01:53:37,000 --> 01:53:39,000
我们它随时

3667
01:53:39,000 --> 01:53:40,000
挂掉任何几个机器

3668
01:53:40,000 --> 01:53:42,000
都是没有不影响我们这个系统

3669
01:53:42,000 --> 01:53:43,000
整个系统的运作的嘛

3670
01:53:43,000 --> 01:53:45,000
然后你要时间这一点

3671
01:53:45,000 --> 01:53:46,000
你已经会发现

3672
01:53:46,000 --> 01:53:48,000
你会越来越的类似

3673
01:53:48,000 --> 01:53:49,000
用到类似于

3674
01:53:49,000 --> 01:53:50,000
而来的那种机制

3675
01:53:50,000 --> 01:53:51,000
要去监控

3676
01:53:51,000 --> 01:53:52,000
然后要去

3677
01:53:52,000 --> 01:53:55,000
假设错误是不可恢复的

3678
01:53:55,000 --> 01:53:56,000
然后你要

3679
01:53:56,000 --> 01:53:57,000
如果遇到错误

3680
01:53:57,000 --> 01:53:58,000
你现在重新起一个新的节点

3681
01:53:58,000 --> 01:53:59,000
来接替

3682
01:53:59,000 --> 01:54:01,000
之前挂掉的那些节点的工作

3683
01:54:01,000 --> 01:54:03,000
那注辞了的事情嘛

3684
01:54:03,000 --> 01:54:04,000
对

3685
01:54:04,000 --> 01:54:06,000
这我脑中浮现出了

3686
01:54:06,000 --> 01:54:08,000
早期电话系统那种

3687
01:54:08,000 --> 01:54:10,000
一排接线机器

3688
01:54:10,000 --> 01:54:11,000
前面做了一辆

3689
01:54:11,000 --> 01:54:12,000
做了很多接线员

3690
01:54:12,000 --> 01:54:13,000
那场景

3691
01:54:13,000 --> 01:54:14,000
然后

3692
01:54:14,000 --> 01:54:17,000
一个 SuperS 在那边看说

3693
01:54:17,000 --> 01:54:19,000
这个接线员

3694
01:54:19,000 --> 01:54:20,000
累导到了工作表面上

3695
01:54:20,000 --> 01:54:21,000
立刻把它撤到

3696
01:54:21,000 --> 01:54:22,000
换了另外一个来差

3697
01:54:22,000 --> 01:54:23,000
差线图

3698
01:54:23,000 --> 01:54:25,000
感觉是血涵工差

3699
01:54:25,000 --> 01:54:26,000
没错

3700
01:54:26,000 --> 01:54:27,000
对

3701
01:54:27,000 --> 01:54:28,000
其实这也就

3702
01:54:28,000 --> 01:54:30,000
说到这也就想到上一期

3703
01:54:30,000 --> 01:54:32,000
我们跟木耀聊的

3704
01:54:32,000 --> 01:54:33,000
说他们我们

3705
01:54:33,000 --> 01:54:36,000
你们学 Hasko 的动机是什么

3706
01:54:36,000 --> 01:54:37,000
那

3707
01:54:37,000 --> 01:54:38,000
或说那学

3708
01:54:38,000 --> 01:54:39,000
那我觉得可以

3709
01:54:39,000 --> 01:54:40,000
把这个问题

3710
01:54:40,000 --> 01:54:42,000
范化为学 Lan

3711
01:54:42,000 --> 01:54:44,000
或者是 Hasko 这种比较

3712
01:54:44,000 --> 01:54:45,000
家营然后小众的

3713
01:54:45,000 --> 01:54:46,000
被整个园

3714
01:54:46,000 --> 01:54:47,000
他的

3715
01:54:47,000 --> 01:54:49,000
他的比较

3716
01:54:49,000 --> 01:54:50,000
比较公立的一个

3717
01:54:50,000 --> 01:54:51,000
一个效果就是

3718
01:54:51,000 --> 01:54:53,000
你可能会发现

3719
01:54:53,000 --> 01:54:55,000
当你需要解决一个

3720
01:54:55,000 --> 01:54:56,000
特定领域的问题的时候

3721
01:54:56,000 --> 01:54:57,000
你会发现这种

3722
01:54:57,000 --> 01:54:59,000
比较小众的园里面

3723
01:54:59,000 --> 01:55:01,000
已经有了相当好的解决方案

3724
01:55:01,000 --> 01:55:02,000
已经有了

3725
01:55:03,000 --> 01:55:05,000
已经有先人

3726
01:55:05,000 --> 01:55:06,000
甚对此

3727
01:55:06,000 --> 01:55:07,000
深思熟虑过

3728
01:55:07,000 --> 01:55:08,000
并且

3729
01:55:08,000 --> 01:55:09,000
设计出一个

3730
01:55:09,000 --> 01:55:10,000
非常好的模型

3731
01:55:10,000 --> 01:55:11,000
那么当你在

3732
01:55:11,000 --> 01:55:12,000
当你在

3733
01:55:12,000 --> 01:55:15,000
用你的所原生园去解决

3734
01:55:15,000 --> 01:55:16,000
他的时候

3735
01:55:16,000 --> 01:55:17,000
就会方便的

3736
01:55:17,000 --> 01:55:18,000
对

3737
01:55:18,000 --> 01:55:19,000
就算是说

3738
01:55:19,000 --> 01:55:20,000
你不一定真的

3739
01:55:20,000 --> 01:55:21,000
用到这个语言的

3740
01:55:21,000 --> 01:55:22,000
具体的实现

3741
01:55:22,000 --> 01:55:23,000
甚至你都不会用这个

3742
01:55:23,000 --> 01:55:26,000
语言去写新的代码

3743
01:55:26,000 --> 01:55:27,000
但是你从

3744
01:55:27,000 --> 01:55:28,000
这里面学到的

3745
01:55:28,000 --> 01:55:30,000
这种思想可能会有助于

3746
01:55:30,000 --> 01:55:31,000
你在线纹的工作中

3747
01:55:31,000 --> 01:55:32,000
去提升你的

3748
01:55:32,000 --> 01:55:34,000
架构的能力

3749
01:55:34,000 --> 01:55:36,000
或者说是你去抽象事务的能力

3750
01:55:36,000 --> 01:55:37,000
你会发现

3751
01:55:37,000 --> 01:55:39,000
原来可以从这角度去思考问题

3752
01:55:39,000 --> 01:55:40,000
对吧

3753
01:55:40,000 --> 01:55:41,000
对

3754
01:55:41,000 --> 01:55:42,000
为什么你一定要去做

3755
01:55:42,000 --> 01:55:43,000
你要去奴役做一个

3756
01:55:43,000 --> 01:55:44,000
Polygal

3757
01:55:44,000 --> 01:55:46,000
好像你多学一个

3758
01:55:46,000 --> 01:55:48,000
捷克有个艳语吗

3759
01:55:48,000 --> 01:55:49,000
就是你会集中语

3760
01:55:49,000 --> 01:55:51,000
你就有集中人生

3761
01:55:51,000 --> 01:55:52,000
所以

3762
01:55:53,000 --> 01:55:55,000
变成了因为其实也是这样的

3763
01:55:55,000 --> 01:55:56,000
你会集中语

3764
01:55:56,000 --> 01:55:57,000
你就可以多集中语

3765
01:55:57,000 --> 01:55:58,000
你就可以多理解

3766
01:55:58,000 --> 01:55:59,000
多理解

3767
01:55:59,000 --> 01:56:00,000
这种变成模型

3768
01:56:00,000 --> 01:56:01,000
你要干吗

3769
01:56:01,000 --> 01:56:02,000
称刺刺刺太财

3770
01:56:02,000 --> 01:56:03,000
四美

3771
01:56:03,000 --> 01:56:04,000
这里又提前出来了

3772
01:56:04,000 --> 01:56:05,000
没错

3773
01:56:07,000 --> 01:56:08,000
差不多了

3774
01:56:08,000 --> 01:56:09,000
好吧

3775
01:56:09,000 --> 01:56:10,000
今天

3776
01:56:10,000 --> 01:56:11,000
你也结尾一下吧

3777
01:56:13,000 --> 01:56:14,000
对

3778
01:56:14,000 --> 01:56:16,000
所以今天我们大概就讲述了

3779
01:56:16,000 --> 01:56:17,000
当然可能不是

3780
01:56:17,000 --> 01:56:18,000
非常地满意

3781
01:56:18,000 --> 01:56:19,000
因为

3782
01:56:19,000 --> 01:56:20,000
做了很多

3783
01:56:22,000 --> 01:56:25,000
解释一些比较复杂的问题

3784
01:56:25,000 --> 01:56:26,000
尝试

3785
01:56:26,000 --> 01:56:27,000
但是

3786
01:56:27,000 --> 01:56:28,000
都没有能讲

3787
01:56:28,000 --> 01:56:29,000
失败了

3788
01:56:29,000 --> 01:56:30,000
对

3789
01:56:30,000 --> 01:56:31,000
都没有能做得很好

3790
01:56:31,000 --> 01:56:32,000
这可能也从另外一个侧面

3791
01:56:32,000 --> 01:56:33,000
反映出了

3792
01:56:33,000 --> 01:56:36,000
并发和异部

3793
01:56:36,000 --> 01:56:37,000
其实

3794
01:56:37,000 --> 01:56:39,000
的确是在变成了语比较难

3795
01:56:39,000 --> 01:56:40,000
那一些问题

3796
01:56:41,000 --> 01:56:43,000
但也可能说

3797
01:56:43,000 --> 01:56:44,000
我们两个太水

3798
01:56:44,000 --> 01:56:46,000
这是肯定的

3799
01:56:46,000 --> 01:56:48,000
我从来不怀疑

3800
01:56:48,000 --> 01:56:49,000
那句话怎么说来的

3801
01:56:49,000 --> 01:56:50,000
就是说

3802
01:56:50,000 --> 01:56:51,000
如果你能够

3803
01:56:51,000 --> 01:56:53,000
用解决话的东西

3804
01:56:53,000 --> 01:56:54,000
能够

3805
01:56:54,000 --> 01:56:55,000
或者说你能够很清晰明白的

3806
01:56:55,000 --> 01:56:56,000
给大家解释一个东西

3807
01:56:56,000 --> 01:56:58,000
那么你对这个事情的理解

3808
01:56:58,000 --> 01:56:59,000
就肯定是比较透彻的

3809
01:56:59,000 --> 01:57:00,000
但是如果你解释不了

3810
01:57:00,000 --> 01:57:02,000
很有可能是你自己理解的

3811
01:57:02,000 --> 01:57:03,000
还不够深刻

3812
01:57:03,000 --> 01:57:04,000
对

3813
01:57:04,000 --> 01:57:05,000
就是有很多东西都会

3814
01:57:05,000 --> 01:57:06,000
有这样一个阶段

3815
01:57:06,000 --> 01:57:07,000
就是你以为自己懂了

3816
01:57:07,000 --> 01:57:09,000
但是当你要

3817
01:57:09,000 --> 01:57:10,000
向别人解释的时候

3818
01:57:10,000 --> 01:57:11,000
会发现自己

3819
01:57:11,000 --> 01:57:12,000
其实并不是真的理解

3820
01:57:13,000 --> 01:57:14,000
对

3821
01:57:14,000 --> 01:57:15,000
从这个侧面来说

3822
01:57:15,000 --> 01:57:16,000
我觉得可能

3823
01:57:16,000 --> 01:57:18,000
做 Portcast 的对

3824
01:57:18,000 --> 01:57:19,000
对

3825
01:57:19,000 --> 01:57:20,000
不让你

3826
01:57:20,000 --> 01:57:21,000
但对我来说

3827
01:57:21,000 --> 01:57:22,000
也是一个非常大的帮助

3828
01:57:22,000 --> 01:57:23,000
就是

3829
01:57:23,000 --> 01:57:25,000
就像我之前

3830
01:57:25,000 --> 01:57:26,000
我在支握打历维

3831
01:57:26,000 --> 01:57:27,000
说过了那样

3832
01:57:27,000 --> 01:57:28,000
就是非常

3833
01:57:28,000 --> 01:57:30,000
帮助我

3834
01:57:30,000 --> 01:57:31,000
去把自己

3835
01:57:31,000 --> 01:57:32,000
之前可能

3836
01:57:32,000 --> 01:57:34,000
一直半减的部分弄得

3837
01:57:34,000 --> 01:57:36,000
比较二之一减

3838
01:57:36,000 --> 01:57:37,000
就是

3839
01:57:37,000 --> 01:57:38,000
把它

3840
01:57:38,000 --> 01:57:40,000
为了做好一些节目

3841
01:57:40,000 --> 01:57:42,000
可能我会去看一些相关的书

3842
01:57:42,000 --> 01:57:43,000
这些对我来说

3843
01:57:43,000 --> 01:57:45,000
也是非常大的帮助

3844
01:57:45,000 --> 01:57:46,000
不过是这个

3845
01:57:46,000 --> 01:57:47,000
就是

3846
01:57:47,000 --> 01:57:48,000
不管你是在说

3847
01:57:48,000 --> 01:57:49,000
口述

3848
01:57:49,000 --> 01:57:50,000
也好还是说

3849
01:57:50,000 --> 01:57:51,000
比头写下来也好

3850
01:57:51,000 --> 01:57:52,000
就是你

3851
01:57:52,000 --> 01:57:53,000
整个在书出的过程

3852
01:57:53,000 --> 01:57:55,000
其实就是在考验

3853
01:57:55,000 --> 01:57:56,000
你内部的

3854
01:57:56,000 --> 01:57:58,000
支持的组织也好

3855
01:57:58,000 --> 01:57:59,000
还是你的理解也好

3856
01:57:59,000 --> 01:58:00,000
对吧

3857
01:58:00,000 --> 01:58:02,000
就是它对于是一个

3858
01:58:02,000 --> 01:58:03,000
使用的过程

3859
01:58:03,000 --> 01:58:04,000
这个时候你会发现

3860
01:58:04,000 --> 01:58:06,000
如果你的对某一点

3861
01:58:06,000 --> 01:58:07,000
理解不够透着的话

3862
01:58:07,000 --> 01:58:09,000
你就是没有把它解释清楚了

3863
01:58:09,000 --> 01:58:10,000
对

3864
01:58:10,000 --> 01:58:12,000
所以

3865
01:58:12,000 --> 01:58:14,000
也希望这一期节目能够

3866
01:58:14,000 --> 01:58:15,000
起到 Portcast 的做法

3867
01:58:15,000 --> 01:58:16,000
如果

3868
01:58:16,000 --> 01:58:19,000
那位听众对于

3869
01:58:19,000 --> 01:58:21,000
异部和

3870
01:58:21,000 --> 01:58:23,000
病发有比较深刻的理解

3871
01:58:23,000 --> 01:58:24,000
然后觉得

3872
01:58:24,000 --> 01:58:26,000
一些我没有讲清楚

3873
01:58:26,000 --> 01:58:28,000
来说讲错的概念可以

3874
01:58:28,000 --> 01:58:29,000
值得纠纵的话

3875
01:58:29,000 --> 01:58:31,000
那也欢迎你写信给我们

3876
01:58:31,000 --> 01:58:33,000
我们的

3877
01:58:33,000 --> 01:58:34,000
电脚键地址

3878
01:58:34,000 --> 01:58:37,000
是 KernellPanic at ipn.li

3879
01:58:37,000 --> 01:58:38,000
然后也欢迎你

3880
01:58:38,000 --> 01:58:39,000
不然我们这些电话

3881
01:58:39,000 --> 01:58:41,000
零雅雅八九九九八八

3882
01:58:41,000 --> 01:58:44,000
九九九九九九九九七二五

3883
01:58:44,000 --> 01:58:45,000
三

3884
01:58:46,000 --> 01:58:47,000
好

3885
01:58:47,000 --> 01:58:49,000
如果你非常喜欢我们的节目

3886
01:58:49,000 --> 01:58:50,000
或者说

3887
01:58:50,000 --> 01:58:51,000
不管你是不是喜欢我们的节目

3888
01:58:51,000 --> 01:58:53,000
都欢迎你为我们尊款

3889
01:58:53,000 --> 01:58:55,000
尊款的地址是

3890
01:58:55,000 --> 01:58:57,000
KernellPanic.phm.sl

3891
01:58:57,000 --> 01:58:58,000
Dualnate

3892
01:58:58,000 --> 01:59:00,000
DALA

3893
01:59:00,000 --> 01:59:01,000
金额随意

3894
01:59:01,000 --> 01:59:02,000
但必须是

3895
01:59:02,000 --> 01:59:04,000
可以被 8 长出的正识

3896
01:59:04,000 --> 01:59:05,000
然后

3897
01:59:05,000 --> 01:59:08,000
为了像现代相机的

3898
01:59:08,000 --> 01:59:10,000
基础组成

3899
01:59:10,000 --> 01:59:11,000
Bite 制进

3900
01:59:11,000 --> 01:59:13,000
反正设定为

3901
01:59:13,000 --> 01:59:15,000
至少要被 8 长出

3902
01:59:16,000 --> 01:59:17,000
好吧

3903
01:59:17,000 --> 01:59:18,000
那今天就到这了

3904
01:59:18,000 --> 01:59:19,000
OK

3905
01:59:19,000 --> 01:59:20,000
对

3906
01:59:20,000 --> 01:59:21,000
感谢收看再见

3907
01:59:21,000 --> 01:59:22,000
下期再见

3908
01:59:22,000 --> 01:59:23,000
拜拜

