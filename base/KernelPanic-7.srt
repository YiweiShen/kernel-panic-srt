1
00:00:00,000 --> 00:00:04,000
大家好 欢迎收听第七期的内和恐慌

2
00:00:04,000 --> 00:00:05,000
我是 Rail

3
00:00:05,000 --> 00:00:07,000
我是舞蹈 终于第七期了

4
00:00:07,000 --> 00:00:08,000
其实我很喜欢数字

5
00:00:11,000 --> 00:00:15,000
其实今天这期节目的时间会比较奇怪

6
00:00:15,000 --> 00:00:17,000
我们是提前了很久

7
00:00:17,000 --> 00:00:18,000
你们听到的时候应该是

8
00:00:18,000 --> 00:00:20,000
生冷就是后了

9
00:00:20,000 --> 00:00:20,000
对

10
00:00:20,000 --> 00:00:23,000
你舞蹈解释一下为什么这么干吗

11
00:00:23,000 --> 00:00:25,000
因为在这个神秘的时间点

12
00:00:25,000 --> 00:00:31,000
我们还没有办法得到足够的听众反馈

13
00:00:31,000 --> 00:00:33,000
我们相信我们在上一期里面

14
00:00:33,000 --> 00:00:35,000
遇到了很多很低的错误

15
00:00:35,000 --> 00:00:37,000
有可能是非常尝试性的错误

16
00:00:37,000 --> 00:00:42,000
但是在目前的 time space point 上面

17
00:00:42,000 --> 00:00:44,000
我们还没有这些反馈信息

18
00:00:44,000 --> 00:00:48,000
所以我们这期暂时先不做 Full Up

19
00:00:48,000 --> 00:00:49,000
但是我保证下期

20
00:00:49,000 --> 00:00:52,000
大家会听到我们两个在这边

21
00:00:52,000 --> 00:00:55,000
怎么说痛苦流泪

22
00:00:56,000 --> 00:01:01,000
崇允竹的道歉说我们放点一些低级错误

23
00:01:01,000 --> 00:01:03,000
包括上一期这一期

24
00:01:06,000 --> 00:01:09,000
所以这一期我们的主题是什么

25
00:01:09,000 --> 00:01:11,000
Package Management

26
00:01:11,000 --> 00:01:16,000
其实有一点点像上一期的主题的自然延伸

27
00:01:16,000 --> 00:01:19,000
就是上一期我们讨论了软件

28
00:01:19,000 --> 00:01:22,000
或者说程序生命周期的管理

29
00:01:22,000 --> 00:01:26,000
主要还是从比较小的一个主要点入手

30
00:01:26,000 --> 00:01:28,000
就是主要是

31
00:01:28,000 --> 00:01:30,000
其实我一开始只是想谈内存管理

32
00:01:30,000 --> 00:01:32,000
但是没有想到后面车到那么多

33
00:01:32,000 --> 00:01:33,000
这一期的内容

34
00:01:33,000 --> 00:01:37,000
其实就是当你这种这些血出来

35
00:01:37,000 --> 00:01:38,000
或者说你在血软件的时候

36
00:01:38,000 --> 00:01:41,000
你会需要用到许使多多内部外部工具

37
00:01:41,000 --> 00:01:44,000
并且你希望你的软件可以某种

38
00:01:44,000 --> 00:01:46,000
比较方便的方式被别人使用

39
00:01:46,000 --> 00:01:48,000
那你就需要把它包装起来

40
00:01:49,000 --> 00:01:52,000
我们这一期主要讨论就是一个问题

41
00:01:54,000 --> 00:01:56,000
所以在开始之前

42
00:01:56,000 --> 00:01:57,000
我们要先解释一下什么叫做

43
00:01:57,000 --> 00:02:00,000
这个概念是 Package Management

44
00:02:00,000 --> 00:02:03,000
Package 实际上是一个非常

45
00:02:03,000 --> 00:02:05,000
犯犯的成果

46
00:02:05,000 --> 00:02:08,000
它是一个指示非常不清楚的词

47
00:02:08,000 --> 00:02:10,000
在很多不同的语境之下会有很多不同的意义

48
00:02:10,000 --> 00:02:12,000
比如说

49
00:02:12,000 --> 00:02:16,000
USTAN 来说 Package 可以试试

50
00:02:16,000 --> 00:02:18,000
比如说一个 Application Boundall

51
00:02:18,000 --> 00:02:20,000
可以试试一个 Package

52
00:02:20,000 --> 00:02:24,000
但是于此同时

53
00:02:24,000 --> 00:02:26,000
你又可以通过一种叫做

54
00:02:26,000 --> 00:02:29,000
DOTPKG 的文件安装一个程序

55
00:02:29,000 --> 00:02:33,000
然后那个 DOTPKG 文件也是一个 Package

56
00:02:33,000 --> 00:02:37,000
对 有点在不同的语境下 Package 的概念

57
00:02:37,000 --> 00:02:41,000
就是有点比较不清晰的

58
00:02:41,000 --> 00:02:42,000
然后加拿承选

59
00:02:42,000 --> 00:02:45,000
可能会非常习惯于一个 Package

60
00:02:45,000 --> 00:02:47,000
就是一个 Gerfile

61
00:02:47,000 --> 00:02:49,000
或者是一个 Werfile

62
00:02:49,000 --> 00:02:55,000
然后它即可以只拿来用第三方库

63
00:02:55,000 --> 00:02:58,000
也可以只自己写出来的什么东西

64
00:02:58,000 --> 00:02:59,000
在部署的时候

65
00:02:59,000 --> 00:03:02,000
说打捞成一个文件

66
00:03:02,000 --> 00:03:04,000
对 就是在对开发的时候

67
00:03:04,000 --> 00:03:06,000
我们讲的 Package 和部署的时候

68
00:03:06,000 --> 00:03:08,000
Package 其实又不是同一个

69
00:03:08,000 --> 00:03:11,000
相关的 但并不完全一指

70
00:03:11,000 --> 00:03:15,000
对 那什么是开发时的 Package 吗

71
00:03:15,000 --> 00:03:17,000
对 这个要解释一下

72
00:03:17,000 --> 00:03:20,000
就是大概可以理解为你要写一个软件

73
00:03:20,000 --> 00:03:22,000
然后你需要依赖

74
00:03:22,000 --> 00:03:24,000
你不是从头到尾

75
00:03:24,000 --> 00:03:26,000
都是用全部自己写

76
00:03:26,000 --> 00:03:27,000
你肯定要用到别人的

77
00:03:27,000 --> 00:03:29,000
接什么第三方的代码

78
00:03:29,000 --> 00:03:31,000
或者是你那个语言的原生的

79
00:03:31,000 --> 00:03:33,000
表写库里面的一些东西

80
00:03:33,000 --> 00:03:35,000
然后这些你要用那些东西

81
00:03:35,000 --> 00:03:37,000
大概可以理解为一个 Package

82
00:03:37,000 --> 00:03:39,000
这个时候你叫去调用那些 Package

83
00:03:39,000 --> 00:03:41,000
才能完成你这个软件的功能吗

84
00:03:41,000 --> 00:03:43,000
对 我记得小时候写成续

85
00:03:43,000 --> 00:03:46,000
就如果需要用了别人的第三方代码

86
00:03:46,000 --> 00:03:48,000
就直接把这代码讨厉边

87
00:03:48,000 --> 00:03:50,000
您听到我的文件里就可以了

88
00:03:50,000 --> 00:03:55,000
对 这是 Package 的单软

89
00:03:58,000 --> 00:04:00,000
不过其实在今天我们做的很多事情

90
00:04:00,000 --> 00:04:03,000
跟这个其实在本质上也是很类似的

91
00:04:03,000 --> 00:04:05,000
就把别人的代码

92
00:04:05,000 --> 00:04:06,000
挪到自己的代码库里面去

93
00:04:06,000 --> 00:04:08,000
这样可以保证

94
00:04:09,000 --> 00:04:11,000
以后你就不用再管别人

95
00:04:11,000 --> 00:04:11,000
他怎么改他

96
00:04:11,000 --> 00:04:13,000
你反正你有一份付本了吗

97
00:04:13,000 --> 00:04:16,000
在你的本地的这个目楼里面去

98
00:04:16,000 --> 00:04:16,000
对吧

99
00:04:16,000 --> 00:04:19,000
现在的 Package 或者说在开发室的

100
00:04:19,000 --> 00:04:22,000
Package 们的所取的问题就是

101
00:04:22,000 --> 00:04:24,000
怎样让你不尽量

102
00:04:24,000 --> 00:04:26,000
怎样让你尽量不得体的去

103
00:04:26,000 --> 00:04:28,000
去考卫别人的文件

104
00:04:28,000 --> 00:04:30,000
到你的工程里面去

105
00:04:30,000 --> 00:04:33,000
就如果你需要依赖别人的代码

106
00:04:33,000 --> 00:04:36,000
而通过简单的负质年贴

107
00:04:36,000 --> 00:04:37,000
像我们同年做的那样的话

108
00:04:37,000 --> 00:04:40,000
那加入对方升级了一下

109
00:04:40,000 --> 00:04:41,000
它那个功能

110
00:04:41,000 --> 00:04:42,000
你怎么用呢

111
00:04:42,000 --> 00:04:44,000
你还要再考卫

112
00:04:44,000 --> 00:04:45,000
再年贴一遍

113
00:04:45,000 --> 00:04:47,000
这还不是最痛苦的部分

114
00:04:47,000 --> 00:04:49,000
最痛苦的部分是

115
00:04:49,000 --> 00:04:52,000
假如你想要把别人的库扔出去的时候

116
00:04:52,000 --> 00:04:54,000
有可能你会非常苦脑的发现

117
00:04:54,000 --> 00:04:57,000
你就不记得哪一部分是你

118
00:04:57,000 --> 00:04:59,000
考卫负质年贴进来的

119
00:04:59,000 --> 00:05:01,000
而哪一部分是你自己写的

120
00:05:02,000 --> 00:05:03,000
这个要是吗

121
00:05:03,000 --> 00:05:05,000
要有这个版本管理才能发现

122
00:05:05,000 --> 00:05:07,000
要回去找那个 log

123
00:05:07,000 --> 00:05:07,000
对

124
00:05:07,000 --> 00:05:09,000
而在你发明版本管理

125
00:05:09,000 --> 00:05:11,000
自己发明一个版本管理系统之前

126
00:05:11,000 --> 00:05:13,000
你可能已经会先发现这个

127
00:05:13,000 --> 00:05:14,000
原来世界上有派的人

128
00:05:14,000 --> 00:05:16,000
那些这种东西

129
00:05:19,000 --> 00:05:21,000
然后另外一个我们常说的状态

130
00:05:21,000 --> 00:05:23,000
就是说在部署的时候

131
00:05:23,000 --> 00:05:25,000
就说一把软件分发给

132
00:05:25,000 --> 00:05:26,000
如果你是卖给消费

133
00:05:26,000 --> 00:05:27,000
找到你身份发给别人

134
00:05:27,000 --> 00:05:30,000
或者是你是像我部署的服气的软件的话

135
00:05:30,000 --> 00:05:35,000
你想怎么把它弄倒腾到这个服气上去运行

136
00:05:35,000 --> 00:05:38,000
这个时候的这个要求又有点不一样

137
00:05:38,000 --> 00:05:41,000
这个时候我们要求这个拍个是尽可能的

138
00:05:41,000 --> 00:05:43,000
是什么可重复的

139
00:05:43,000 --> 00:05:45,000
就是你整个 diport 的过程是

140
00:05:45,000 --> 00:05:47,000
应该是可以重复的

141
00:05:47,000 --> 00:05:47,000
对

142
00:05:47,000 --> 00:05:50,000
那这个这么说可能稍微点抽象

143
00:05:50,000 --> 00:05:52,000
但是如果你是一个温度使用活动的话

144
00:05:52,000 --> 00:05:55,000
你可能会习惯于安装什么软件

145
00:05:55,000 --> 00:06:00,000
就是打开一个安装软件的 inselo 的 EXE

146
00:06:00,000 --> 00:06:03,000
然后还是或者叫 setup 到 EXE

147
00:06:03,000 --> 00:06:05,000
然后你一路回车

148
00:06:05,000 --> 00:06:07,000
之前又叫做 setup visa 的东西

149
00:06:07,000 --> 00:06:10,000
然后指令一个安装的目标路径

150
00:06:10,000 --> 00:06:10,000
对

151
00:06:10,000 --> 00:06:12,000
然后它会把所有东西

152
00:06:13,000 --> 00:06:14,000
给你塞到那个目标下面之后

153
00:06:14,000 --> 00:06:15,000
然后你们去那个目标找

154
00:06:15,000 --> 00:06:17,000
就可以找到你要运行的程序

155
00:06:17,000 --> 00:06:19,000
所以在温度的世界里面

156
00:06:19,000 --> 00:06:21,000
我们安装程序的过程是用一个程序

157
00:06:21,000 --> 00:06:22,000
去安装另一个程序

158
00:06:22,000 --> 00:06:24,000
或者说你为了安装你的程序

159
00:06:24,000 --> 00:06:26,000
你必须创建另外一个

160
00:06:26,000 --> 00:06:27,000
你用另外一个程序

161
00:06:27,000 --> 00:06:30,000
把你的程序打包在一个拍个室里面

162
00:06:30,000 --> 00:06:32,000
然后交给别人

163
00:06:32,000 --> 00:06:35,000
别人在同样要利用另外一个程序

164
00:06:35,000 --> 00:06:38,000
来解压你的程序

165
00:06:38,000 --> 00:06:41,000
然后把它安装到你对方的电脑下面

166
00:06:41,000 --> 00:06:41,000
对

167
00:06:41,000 --> 00:06:42,000
对

168
00:06:42,000 --> 00:06:44,000
这个就跟在 OS 3 上面的

169
00:06:44,000 --> 00:06:46,000
常用的安装方式还不太一样

170
00:06:46,000 --> 00:06:47,000
刚才你也讲

171
00:06:47,000 --> 00:06:47,000
就是

172
00:06:47,000 --> 00:06:49,000
我们通常到一种方式

173
00:06:49,000 --> 00:06:51,000
是通过一个 DMG 的进行下

174
00:06:51,000 --> 00:06:53,000
或者是从这一个点 ZIP 的压缩包

175
00:06:53,000 --> 00:06:55,000
然后解压出来一个点 APP 的

176
00:06:55,000 --> 00:06:57,000
这么一个目标

177
00:06:57,000 --> 00:06:59,000
然后这个目标整个是一个完整的程序

178
00:06:59,000 --> 00:07:02,000
你直接把它拖到你的 Application 的

179
00:07:02,000 --> 00:07:05,000
Folder 里面这个事情就算完成了

180
00:07:05,000 --> 00:07:06,000
所以

181
00:07:06,000 --> 00:07:06,000
但是刚你说

182
00:07:06,000 --> 00:07:08,000
那种温度上面安装的方式

183
00:07:08,000 --> 00:07:09,000
在 OS 3 下的对比

184
00:07:09,000 --> 00:07:11,000
就是你之前也提到那个点 PKG

185
00:07:11,000 --> 00:07:12,000
那种方式

186
00:07:12,000 --> 00:07:13,000
运行一个脚本

187
00:07:13,000 --> 00:07:15,000
然后把那些文件塞到你的系统的

188
00:07:15,000 --> 00:07:16,000
各个脚落

189
00:07:16,000 --> 00:07:17,000
对

190
00:07:17,000 --> 00:07:19,000
主要来说

191
00:07:19,000 --> 00:07:20,000
其实

192
00:07:20,000 --> 00:07:21,000
我们说

193
00:07:21,000 --> 00:07:22,000
Mac 上面把一个

194
00:07:22,000 --> 00:07:26,000
到 APP 的文件拖到你的 Application 上面

195
00:07:26,000 --> 00:07:28,000
就可以得到这个

196
00:07:28,000 --> 00:07:29,000
或者说以这种方式

197
00:07:29,000 --> 00:07:30,000
你就完成安装

198
00:07:30,000 --> 00:07:31,000
这种安装是一种

199
00:07:31,000 --> 00:07:33,000
仅仅是一次考卑而已

200
00:07:33,000 --> 00:07:36,000
你安装一个程序的方法

201
00:07:36,000 --> 00:07:37,000
就是通过考卑

202
00:07:37,000 --> 00:07:38,000
而

203
00:07:38,000 --> 00:07:40,000
什么是点 APP 呢

204
00:07:40,000 --> 00:07:41,000
就是可能

205
00:07:42,000 --> 00:07:43,000
我觉得这是一种

206
00:07:43,000 --> 00:07:44,000
不同的

207
00:07:44,000 --> 00:07:46,000
封装层级的思路的体现

208
00:07:46,000 --> 00:07:47,000
就是在 Mac 下面

209
00:07:47,000 --> 00:07:48,000
所谓 APP

210
00:07:48,000 --> 00:07:49,000
APP 文件

211
00:07:49,000 --> 00:07:50,000
实际上只是一个

212
00:07:50,000 --> 00:07:52,000
只是一个 Folder 而已

213
00:07:52,000 --> 00:07:54,000
它只是一个文件加而已

214
00:07:54,000 --> 00:07:57,000
但如果你把它改名成了点 APP

215
00:07:57,000 --> 00:07:58,000
并且在里面加上一个叫做

216
00:07:58,000 --> 00:08:01,000
Infolder P list 的文件

217
00:08:01,000 --> 00:08:02,000
Mac 就会试图

218
00:08:02,000 --> 00:08:04,000
把它作为一个整体处理

219
00:08:04,000 --> 00:08:06,000
就是你不能很方便的直接

220
00:08:06,000 --> 00:08:08,000
打开它的

221
00:08:08,000 --> 00:08:08,000
看到那 APP

222
00:08:08,000 --> 00:08:10,000
那个幕伦里面的内容

223
00:08:10,000 --> 00:08:11,000
但是你如果又建

224
00:08:11,000 --> 00:08:12,000
它一叫什么

225
00:08:12,000 --> 00:08:13,000
叫 Showing

226
00:08:13,000 --> 00:08:14,000
Show content

227
00:08:14,000 --> 00:08:15,000
一个是

228
00:08:15,000 --> 00:08:16,000
Show content

229
00:08:16,000 --> 00:08:17,000
这个

230
00:08:17,000 --> 00:08:17,000
这个呢

231
00:08:17,000 --> 00:08:19,000
就可以把它当成幕伦展开了

232
00:08:19,000 --> 00:08:20,000
对

233
00:08:20,000 --> 00:08:21,000
这个是我们在

234
00:08:21,000 --> 00:08:24,000
分发给消费者的时候的一种

235
00:08:24,000 --> 00:08:26,000
分发时候的 Package

236
00:08:26,000 --> 00:08:28,000
然后如果在服务端的话

237
00:08:28,000 --> 00:08:30,000
这种方式就

238
00:08:30,000 --> 00:08:32,000
非常非常多的

239
00:08:32,000 --> 00:08:34,000
不同的安装方式了

240
00:08:34,000 --> 00:08:35,000
但是我们待会讲到

241
00:08:35,000 --> 00:08:36,000
不同的发信版的时候

242
00:08:36,000 --> 00:08:37,000
一个一个说法

243
00:08:37,000 --> 00:08:38,000
对

244
00:08:39,000 --> 00:08:41,000
所以其实你们看到

245
00:08:41,000 --> 00:08:42,000
我们在 Package Management 的

246
00:08:42,000 --> 00:08:44,000
两个不同的一用场合

247
00:08:44,000 --> 00:08:46,000
但其实他们还就一定的

248
00:08:46,000 --> 00:08:47,000
这个共性

249
00:08:47,000 --> 00:08:48,000
就比如说至少我们是

250
00:08:48,000 --> 00:08:50,000
我们要求说

251
00:08:50,000 --> 00:08:51,000
我们能够清楚的

252
00:08:51,000 --> 00:08:53,000
知道我们安装的是什么版本的

253
00:08:53,000 --> 00:08:54,000
一个 Package

254
00:08:54,000 --> 00:08:54,000
对吧

255
00:08:54,000 --> 00:08:55,000
对

256
00:08:55,000 --> 00:08:57,000
我们知道有什么方法

257
00:08:57,000 --> 00:08:58,000
可以能够

258
00:08:58,000 --> 00:09:00,000
删掉它能够重复的安装

259
00:09:00,000 --> 00:09:01,000
对

260
00:09:01,000 --> 00:09:01,000
就

261
00:09:01,000 --> 00:09:02,000
或者说

262
00:09:02,000 --> 00:09:04,000
比如说你把某一个文件修改

263
00:09:04,000 --> 00:09:05,000
就是意外修改了

264
00:09:05,000 --> 00:09:08,000
你能够把那个东西再拿后来

265
00:09:08,000 --> 00:09:10,000
还有就是说

266
00:09:10,000 --> 00:09:12,000
你安装的多个派之间

267
00:09:12,000 --> 00:09:15,000
最好不要互相有影响

268
00:09:15,000 --> 00:09:15,000
对吧

269
00:09:15,000 --> 00:09:18,000
比如说我安装了 A 这个包

270
00:09:18,000 --> 00:09:19,000
然后我在安装 B 这个包

271
00:09:19,000 --> 00:09:20,000
他们会不会冲突

272
00:09:20,000 --> 00:09:22,000
我们最好能避免这种事情

273
00:09:22,000 --> 00:09:22,000
就是这些

274
00:09:22,000 --> 00:09:24,000
基本的需求

275
00:09:24,000 --> 00:09:24,000
对

276
00:09:24,000 --> 00:09:26,000
你在用文奈斯的时候

277
00:09:26,000 --> 00:09:28,000
有没有感觉到

278
00:09:29,000 --> 00:09:31,000
文奈斯安装程序的过程

279
00:09:31,000 --> 00:09:32,000
是一个很神秘的过程

280
00:09:32,000 --> 00:09:33,000
或者是很

281
00:09:33,000 --> 00:09:34,000
是一个很复杂的过程的

282
00:09:35,000 --> 00:09:37,000
其实我到今天为止

283
00:09:37,000 --> 00:09:38,000
也一直不是很清楚

284
00:09:38,000 --> 00:09:39,000
他们到底在做什么

285
00:09:39,000 --> 00:09:40,000
因为我想想有

286
00:09:40,000 --> 00:09:41,000
也些什么时候

287
00:09:41,000 --> 00:09:42,000
你们能想得起的

288
00:09:42,000 --> 00:09:44,000
就主程序他们就

289
00:09:44,000 --> 00:09:45,000
作为一个

290
00:09:45,000 --> 00:09:46,000
就是

291
00:09:46,000 --> 00:09:47,000
常见的文奈斯

292
00:09:47,000 --> 00:09:48,000
就符合文奈斯

293
00:09:48,000 --> 00:09:49,000
规范的安装程序

294
00:09:49,000 --> 00:09:51,000
像是把自己塞到

295
00:09:51,000 --> 00:09:52,000
那个叫 C 下面的

296
00:09:52,000 --> 00:09:54,000
做文奈斯

297
00:09:54,000 --> 00:09:56,000
然后建一个自己公司的

298
00:09:56,000 --> 00:09:57,000
名字的目楼

299
00:09:57,000 --> 00:09:59,000
在下面建一个你这个

300
00:09:59,000 --> 00:10:00,000
程序的名字的目楼

301
00:10:00,000 --> 00:10:02,000
然后再把东西放进去吧

302
00:10:02,000 --> 00:10:04,000
包括你的那些什么

303
00:10:04,000 --> 00:10:05,000
需要意外的

304
00:10:05,000 --> 00:10:06,000
然后软件库啊

305
00:10:06,000 --> 00:10:07,000
还有什么

306
00:10:07,000 --> 00:10:08,000
静态文件

307
00:10:08,000 --> 00:10:08,000
对吧

308
00:10:08,000 --> 00:10:09,000
都放在那里面去

309
00:10:09,000 --> 00:10:11,000
然后还要加什么

310
00:10:11,000 --> 00:10:12,000
就是用户配置

311
00:10:12,000 --> 00:10:13,000
写到什么注册表里面

312
00:10:13,000 --> 00:10:14,000
对不对

313
00:10:15,000 --> 00:10:16,000
现在文奈斯八里面好像

314
00:10:16,000 --> 00:10:17,000
又有以前什么

315
00:10:17,000 --> 00:10:18,000
又有点什么不一样

316
00:10:18,000 --> 00:10:19,000
一个什么 App

317
00:10:19,000 --> 00:10:20,000
一个 AppStata 这个目楼了

318
00:10:21,000 --> 00:10:22,000
我这次所以文奈斯八

319
00:10:22,000 --> 00:10:23,000
要保持出册表吗

320
00:10:23,000 --> 00:10:24,000
都不可能吧

321
00:10:24,000 --> 00:10:27,000
这次表是文奈斯和新技术一部分的

322
00:10:28,000 --> 00:10:29,000
这个不太清楚距离怎么样子

323
00:10:29,000 --> 00:10:32,000
但是我上次在训练经验装的时候

324
00:10:32,000 --> 00:10:34,000
是发现有这么一些新的

325
00:10:34,000 --> 00:10:36,000
就是新讯相对于

326
00:10:36,000 --> 00:10:39,000
之前文奈斯 XP 或者是文奈斯期段时代的东西

327
00:10:39,000 --> 00:10:42,000
但这个因为我不是这个文奈斯中东文

328
00:10:42,000 --> 00:10:43,000
也不太清楚它怎么一会是

329
00:10:43,000 --> 00:10:46,000
AppData 会不会是 App 在运行时产生的数据

330
00:10:47,000 --> 00:10:47,000
有可能

331
00:10:47,000 --> 00:10:49,000
那是什么 Data

332
00:10:49,000 --> 00:10:51,000
我记得有个什么 DataRoming Fold

333
00:10:51,000 --> 00:10:53,000
是拿来做人的事情

334
00:10:54,000 --> 00:10:54,000
OK

335
00:10:54,000 --> 00:10:55,000
那我也不是

336
00:10:55,000 --> 00:10:59,000
但其实我觉得目前让我觉得

337
00:10:59,000 --> 00:11:01,000
回想起来很疑惑的一点就是

338
00:11:01,000 --> 00:11:03,000
文奈斯安装过程之中

339
00:11:04,000 --> 00:11:06,000
所产生的那些数据

340
00:11:06,000 --> 00:11:11,000
有时候在有些安装程序里面是可以看到的

341
00:11:11,000 --> 00:11:13,000
另外一些安装程序里面是看不到的

342
00:11:14,000 --> 00:11:17,000
就比如说我记得文奈斯安装的时候会

343
00:11:17,000 --> 00:11:18,000
跳出一个列表

344
00:11:18,000 --> 00:11:21,000
然后不停地告诉你哪个现实本身被考到那个地方

345
00:11:22,000 --> 00:11:25,000
然后最后可以重新的去审查一遍

346
00:11:25,000 --> 00:11:27,000
安装程序到底干了些什么

347
00:11:27,000 --> 00:11:29,000
当然我相信百日九日九人不会这么做

348
00:11:30,000 --> 00:11:31,000
但是提过这种可能性

349
00:11:32,000 --> 00:11:34,000
而另外一些安装程序好像从来到来就

350
00:11:35,000 --> 00:11:36,000
就一直 next

351
00:11:36,000 --> 00:11:36,000
对

352
00:11:36,000 --> 00:11:37,000
而且

353
00:11:38,000 --> 00:11:40,000
有一很著名的现象就是进入条

354
00:11:40,000 --> 00:11:43,000
从零到百分之九是九是要大概一秒钟

355
00:11:43,000 --> 00:11:45,000
然后从九是九到百分百需要十分钟

356
00:11:47,000 --> 00:11:48,000
没算

357
00:11:48,000 --> 00:11:49,000
对

358
00:11:49,000 --> 00:11:49,000
对

359
00:11:49,000 --> 00:11:51,000
刚刚你讲那个文奈斯安装的形式

360
00:11:51,000 --> 00:11:52,000
它是有一种

361
00:11:52,000 --> 00:11:54,000
我记得印象中是有一种专门的

362
00:11:54,000 --> 00:11:57,000
这种生成安装程序的

363
00:11:57,000 --> 00:11:58,000
程序

364
00:11:58,000 --> 00:11:59,000
对 就是因为其实就是不同的

365
00:11:59,000 --> 00:12:02,000
一 Stole 的公寓商不同而已

366
00:12:02,000 --> 00:12:05,000
然后有之前有这种很常用的那种

367
00:12:05,000 --> 00:12:07,000
一 Stole 就是可以让你

368
00:12:07,000 --> 00:12:10,000
有一个列表框显示每一个步骤在干嘛

369
00:12:10,000 --> 00:12:14,000
但其实这个是非常用户不有好的一个东西

370
00:12:14,000 --> 00:12:16,000
就作为一个不同用户

371
00:12:16,000 --> 00:12:19,000
你为什么要知道我会安装了多少个文件在哪个位置

372
00:12:19,000 --> 00:12:23,000
这个是对你来说是没有什么实际价值的信息

373
00:12:24,000 --> 00:12:25,000
但是除非你有什么解辟之外

374
00:12:25,000 --> 00:12:27,000
说你卸载的时候一定要

375
00:12:27,000 --> 00:12:31,000
逐个对照照那个列表把那个文件一个一个删掉

376
00:12:31,000 --> 00:12:33,000
这还是一个医院令所

377
00:12:33,000 --> 00:12:35,000
我也不知道就有时候

378
00:12:35,000 --> 00:12:37,000
温度上面提供了过度信息

379
00:12:37,000 --> 00:12:39,000
在有些人看来是

380
00:12:39,000 --> 00:12:42,000
好是这种是一种是一种

381
00:12:42,000 --> 00:12:44,000
它是可以看到

382
00:12:44,000 --> 00:12:48,000
电脑在做什么而防弯你给他一台小

383
00:12:48,000 --> 00:12:49,000
那么

384
00:12:51,000 --> 00:12:54,000
intrusive 的操作性的话

385
00:12:54,000 --> 00:12:56,000
他会觉得是操作上怎么这么

386
00:12:56,000 --> 00:12:57,000
这么安静啊

387
00:12:57,000 --> 00:12:58,000
我

388
00:12:59,000 --> 00:13:01,000
我在用你你给我来回应好吗

389
00:13:01,000 --> 00:13:04,000
就比如说我记得刚刚学那个联续评论好

390
00:13:04,000 --> 00:13:05,000
那时候

391
00:13:06,000 --> 00:13:10,000
执行文 执行文令他什么都不告诉你

392
00:13:10,000 --> 00:13:11,000
他就把你

393
00:13:11,000 --> 00:13:12,000
他就把你

394
00:13:12,000 --> 00:13:14,000
默认这种状态是哦

395
00:13:14,000 --> 00:13:15,000
没什么可做的

396
00:13:15,000 --> 00:13:16,000
所以他就什么也不说

397
00:13:16,000 --> 00:13:19,000
这样我觉得当时非常的难以忍受

398
00:13:19,000 --> 00:13:22,000
因为在到此前不敢干嘛他都会告诉你

399
00:13:22,000 --> 00:13:23,000
我干了什么

400
00:13:23,000 --> 00:13:24,000
没什么可干的

401
00:13:24,000 --> 00:13:25,000
就算没什么可干的

402
00:13:25,000 --> 00:13:27,000
他会告诉你说没什么可干的

403
00:13:27,000 --> 00:13:28,000
对

404
00:13:28,000 --> 00:13:30,000
但切换到刚刚切换到令死是什么

405
00:13:30,000 --> 00:13:31,000
我好酷啊

406
00:13:32,000 --> 00:13:34,000
我觉得这可能也是那个什么

407
00:13:35,000 --> 00:13:37,000
Unix 用户和

408
00:13:37,000 --> 00:13:40,000
混泪 Unix 系统的用户和那个 Windows

409
00:13:40,000 --> 00:13:43,000
我倒是用户的本质区别吧

410
00:13:44,000 --> 00:13:46,000
可能用泪 Unix 用户就觉得

411
00:13:46,000 --> 00:13:48,000
你们这个事情做就好了

412
00:13:48,000 --> 00:13:49,000
只要没出什么问题

413
00:13:49,000 --> 00:13:50,000
就别来烦我

414
00:13:50,000 --> 00:13:51,000
因为我还会别的

415
00:13:51,000 --> 00:13:53,000
烦心的事多久呢对吧

416
00:13:53,000 --> 00:13:54,000
然后

417
00:13:54,000 --> 00:13:55,000
因为这他们很多都是做

418
00:13:55,000 --> 00:13:57,000
所以早期都是什么专业用户啊

419
00:13:57,000 --> 00:13:58,000
他的种程序员

420
00:13:58,000 --> 00:13:59,000
他知道在干嘛

421
00:13:59,000 --> 00:14:01,000
然后也知道结果是怎么样

422
00:14:01,000 --> 00:14:04,000
但是像 DOS 来问的这种

423
00:14:04,000 --> 00:14:05,000
面向消费者的

424
00:14:05,000 --> 00:14:08,000
他可能需要一些什么存在感

425
00:14:08,000 --> 00:14:09,000
他说需要知道

426
00:14:09,000 --> 00:14:10,000
哎

427
00:14:10,000 --> 00:14:11,000
我画了 20 刀

428
00:14:11,000 --> 00:14:12,000
我买了这个程序

429
00:14:12,000 --> 00:14:14,000
他干嘛了呢最后对吧

430
00:14:14,000 --> 00:14:15,000
对

431
00:14:15,000 --> 00:14:17,000
有回应是用户有好的用表现

432
00:14:17,000 --> 00:14:18,000
但没有回应

433
00:14:18,000 --> 00:14:20,000
则是 progmatica 的用表现

434
00:14:22,000 --> 00:14:23,000
可以种说

435
00:14:23,000 --> 00:14:26,000
我不确定是不是一定用户有好的

436
00:14:26,000 --> 00:14:28,000
有可能说那有些人

437
00:14:28,000 --> 00:14:29,000
不要来烦我

438
00:14:29,000 --> 00:14:30,000
就门门隔马

439
00:14:30,000 --> 00:14:32,000
不至于一个初学者来说

440
00:14:32,000 --> 00:14:33,000
没有回应

441
00:14:33,000 --> 00:14:35,000
其实是一个非常废解的比赛

442
00:14:35,000 --> 00:14:36,000
你要你必须要

443
00:14:36,000 --> 00:14:38,000
一上来就跟他说

444
00:14:39,000 --> 00:14:41,000
这个程序如果没有回应的话

445
00:14:41,000 --> 00:14:42,000
意味着他没有

446
00:14:42,000 --> 00:14:43,000
他认为自己没有什么可做的

447
00:14:43,000 --> 00:14:45,000
或者是他完成了该做的事情

448
00:14:45,000 --> 00:14:46,000
他就没有什么回应

449
00:14:46,000 --> 00:14:48,000
他只有他唯一有回应的时候

450
00:14:48,000 --> 00:14:49,000
就是报错

451
00:14:50,000 --> 00:14:51,000
嗯嗯嗯

452
00:14:51,000 --> 00:14:52,000
对

453
00:14:52,000 --> 00:14:54,000
这种不同的思想嘛

454
00:14:54,000 --> 00:14:55,000
对

455
00:14:55,000 --> 00:14:56,000
就看场景

456
00:14:56,000 --> 00:14:57,000
或者干你的应用吧

457
00:14:57,000 --> 00:14:58,000
有时候

458
00:14:58,000 --> 00:15:00,000
我的感觉

459
00:15:00,000 --> 00:15:01,000
亲相于就是

460
00:15:01,000 --> 00:15:03,000
你用一个新的软件

461
00:15:03,000 --> 00:15:05,000
或者新的产品的时候

462
00:15:05,000 --> 00:15:06,000
你可能需要了解一下

463
00:15:06,000 --> 00:15:07,000
一些句子的状况

464
00:15:07,000 --> 00:15:08,000
但这肯定也是

465
00:15:08,000 --> 00:15:09,000
你可以从另一个角落说

466
00:15:09,000 --> 00:15:10,000
这个是产品做得不好

467
00:15:10,000 --> 00:15:12,000
需要我了解这么多细节

468
00:15:12,000 --> 00:15:13,000
其实没必要嘛

469
00:15:13,000 --> 00:15:14,000
对吧

470
00:15:14,000 --> 00:15:15,000
但另外一种就是说

471
00:15:15,000 --> 00:15:17,000
反正你这个工作就好了

472
00:15:17,000 --> 00:15:18,000
不要那么多废话

473
00:15:18,000 --> 00:15:19,000
对

474
00:15:19,000 --> 00:15:20,000
嗯

475
00:15:20,000 --> 00:15:21,000
对

476
00:15:21,000 --> 00:15:23,000
说回到我们的这个

477
00:15:23,000 --> 00:15:25,000
Pikemangemen 的话题上来

478
00:15:25,000 --> 00:15:26,000
就是

479
00:15:26,000 --> 00:15:28,000
还有一个问题

480
00:15:28,000 --> 00:15:29,000
问到上面

481
00:15:29,000 --> 00:15:31,000
当时一直让我移货的是

482
00:15:31,000 --> 00:15:32,000
假如一个程序

483
00:15:32,000 --> 00:15:34,000
同时需要一个

484
00:15:34,000 --> 00:15:36,000
酷的两个版本

485
00:15:36,000 --> 00:15:37,000
问到到底是怎么解决的

486
00:15:37,000 --> 00:15:40,000
这不是没法解决的吧

487
00:15:40,000 --> 00:15:41,000
他们后来

488
00:15:41,000 --> 00:15:42,000
才有出现那个叫做什么

489
00:15:42,000 --> 00:15:43,000
DLL

490
00:15:43,000 --> 00:15:44,000
对

491
00:15:44,000 --> 00:15:46,000
DLL 具体来说

492
00:15:46,000 --> 00:15:47,000
其实就是

493
00:15:47,000 --> 00:15:51,000
A 软件需要某一个酷的

494
00:15:51,000 --> 00:15:53,000
假版本

495
00:15:53,000 --> 00:15:55,000
B 软件需要这个酷的一般版

496
00:15:55,000 --> 00:15:56,000
那问到时候

497
00:15:56,000 --> 00:15:57,000
会同时保留

498
00:15:57,000 --> 00:15:58,000
加一两个版本对不对

499
00:15:58,000 --> 00:16:01,000
应该是这样的对

500
00:16:01,000 --> 00:16:03,000
那加一两版本的差别在哪

501
00:16:03,000 --> 00:16:05,000
是在用户名字

502
00:16:05,000 --> 00:16:06,000
那个文件名上有

503
00:16:06,000 --> 00:16:07,000
一般的差别

504
00:16:07,000 --> 00:16:09,000
这个我不太清楚

505
00:16:09,000 --> 00:16:10,000
问到怎么具体怎么做

506
00:16:10,000 --> 00:16:14,000
但是在不同的这种环境里面

507
00:16:14,000 --> 00:16:15,000
都是存在的

508
00:16:15,000 --> 00:16:17,000
就是这个最麻烦的问题

509
00:16:17,000 --> 00:16:18,000
是因为同一个软件

510
00:16:18,000 --> 00:16:19,000
不同的版本

511
00:16:19,000 --> 00:16:20,000
那可能是户不坚容的嘛

512
00:16:20,000 --> 00:16:22,000
然后如果

513
00:16:22,000 --> 00:16:23,000
你刚才说那情况

514
00:16:23,000 --> 00:16:24,000
其实还好

515
00:16:24,000 --> 00:16:25,000
就是它 A 程序的时候

516
00:16:25,000 --> 00:16:26,000
它掉了

517
00:16:26,000 --> 00:16:27,000
假版本好了

518
00:16:27,000 --> 00:16:28,000
B 程序掉一般版

519
00:16:28,000 --> 00:16:29,000
然后这个互相不冲突

520
00:16:29,000 --> 00:16:31,000
比较坑的是这种

521
00:16:31,000 --> 00:16:34,000
你自己要写一个 A 程序

522
00:16:34,000 --> 00:16:36,000
然后你可能需要这个某个

523
00:16:36,000 --> 00:16:38,000
酷的一点凌般版

524
00:16:39,000 --> 00:16:41,000
然后你同时还要使用另外一个

525
00:16:41,000 --> 00:16:42,000
酷的

526
00:16:42,000 --> 00:16:44,000
另外一个酷 B

527
00:16:44,000 --> 00:16:47,000
然后 B 它可能需要这个同样

528
00:16:47,000 --> 00:16:49,000
你依赖的那个酷的 1.2 版本

529
00:16:49,000 --> 00:16:51,000
这个时候你就很坑了

530
00:16:51,000 --> 00:16:54,000
你就是要同时支持不同的

531
00:16:54,000 --> 00:16:56,000
同一个在同一个程序里面

532
00:16:56,000 --> 00:16:57,000
你要依赖同一个软件

533
00:16:57,000 --> 00:16:59,000
酷的不同的版本

534
00:16:59,000 --> 00:17:01,000
就是会出现这种

535
00:17:01,000 --> 00:17:02,000
交差

536
00:17:02,000 --> 00:17:03,000
这种这种

537
00:17:03,000 --> 00:17:04,000
这种

538
00:17:04,000 --> 00:17:05,000
这种

539
00:17:05,000 --> 00:17:07,000
这个怎么形容比较好

540
00:17:07,000 --> 00:17:09,000
徐文环依赖

541
00:17:09,000 --> 00:17:11,000
也不叫徐文环

542
00:17:11,000 --> 00:17:12,000
会是很会想的徐文环

543
00:17:12,000 --> 00:17:14,000
对有可能会想徐文环

544
00:17:14,000 --> 00:17:15,000
对对对

545
00:17:15,000 --> 00:17:16,000
就很糟糕嘛

546
00:17:16,000 --> 00:17:17,000
对

547
00:17:17,000 --> 00:17:18,000
脑中立刻

548
00:17:18,000 --> 00:17:19,000
成出现了一个

549
00:17:19,000 --> 00:17:21,000
一个挫动复杂的数状涂

550
00:17:24,000 --> 00:17:26,000
如果这个数还好啦

551
00:17:26,000 --> 00:17:27,000
对它接触

552
00:17:27,000 --> 00:17:28,000
如果有 Circuit or Rapp

553
00:17:28,000 --> 00:17:30,000
对它可能是一个勇相图

554
00:17:31,000 --> 00:17:32,000
就很高似

555
00:17:32,000 --> 00:17:33,000
对

556
00:17:33,000 --> 00:17:34,000
对

557
00:17:34,000 --> 00:17:35,000
那另一个字上面

558
00:17:35,000 --> 00:17:36,000
就没有底盆

559
00:17:36,000 --> 00:17:37,000
就没有跌舍

560
00:17:37,000 --> 00:17:38,000
还好吗

561
00:17:38,000 --> 00:17:39,000
其实也有吧

562
00:17:39,000 --> 00:17:40,000
其实也是有的

563
00:17:40,000 --> 00:17:42,000
是现在我们大部分用的发型版

564
00:17:42,000 --> 00:17:45,000
它都是通过这个原生的

565
00:17:45,000 --> 00:17:46,000
他们一般每个发型版

566
00:17:46,000 --> 00:17:48,000
会自带一个包管的系统嘛

567
00:17:48,000 --> 00:17:49,000
然后那个包管的系统

568
00:17:49,000 --> 00:17:51,000
会想办法去解决这些冲突

569
00:17:51,000 --> 00:17:53,000
这些之类的问题

570
00:17:53,000 --> 00:17:56,000
而且那个发型版的维护者

571
00:17:56,000 --> 00:17:58,000
他在打包的时候

572
00:17:58,000 --> 00:18:00,000
他也会考虑说这个问题

573
00:18:00,000 --> 00:18:03,000
比如说你他不要拿地板来举例子吧

574
00:18:03,000 --> 00:18:04,000
他可能

575
00:18:04,000 --> 00:18:06,000
我发现的这个版本里面

576
00:18:06,000 --> 00:18:07,000
我把所有的都测过

577
00:18:07,000 --> 00:18:08,000
他们故习安装

578
00:18:08,000 --> 00:18:09,000
应该是没有问题的

579
00:18:10,000 --> 00:18:13,000
当然你如果有那种不同版本的这种

580
00:18:13,000 --> 00:18:14,000
库的需求的话

581
00:18:14,000 --> 00:18:16,000
他会通过不同的文件名字

582
00:18:16,000 --> 00:18:17,000
不同的路径来实现吗

583
00:18:18,000 --> 00:18:19,000
具体来说

584
00:18:19,000 --> 00:18:21,000
其实就是

585
00:18:21,000 --> 00:18:24,000
假如在另一个

586
00:18:24,000 --> 00:18:28,000
就是和文字字一模一样的困境的话

587
00:18:28,000 --> 00:18:30,000
另一次会

588
00:18:30,000 --> 00:18:33,000
支持你练结到不同版本的库

589
00:18:33,000 --> 00:18:35,000
上面

590
00:18:35,000 --> 00:18:38,000
而这些库每一个库会有一个默认的版本

591
00:18:38,000 --> 00:18:40,000
多玩呀

592
00:18:40,000 --> 00:18:42,000
是这个师班会是用

593
00:18:42,000 --> 00:18:43,000
会用那个啦

594
00:18:43,000 --> 00:18:44,000
会用那边的蓝莲接着

595
00:18:44,000 --> 00:18:45,000
会用一个符号脸接来实现

596
00:18:48,000 --> 00:18:50,000
那有时候我在用

597
00:18:50,000 --> 00:18:53,000
代变的时候需要升级帽

598
00:18:53,000 --> 00:18:55,000
一个我想要的工具

599
00:18:55,000 --> 00:18:56,000
到某一个盆的版本

600
00:18:56,000 --> 00:18:57,000
比如说可以把

601
00:18:57,000 --> 00:18:59,000
然后

602
00:19:00,000 --> 00:19:02,000
使用其内置的包管理工具

603
00:19:02,000 --> 00:19:04,000
升级的时候包管理工具

604
00:19:04,000 --> 00:19:06,000
你说这个东西依赖于那个东西

605
00:19:06,000 --> 00:19:08,000
但是

606
00:19:08,000 --> 00:19:10,000
那个东西的版本已经过舅了

607
00:19:10,000 --> 00:19:12,000
所以你也需要一起升级那个东西

608
00:19:12,000 --> 00:19:13,000
能说好吧

609
00:19:13,000 --> 00:19:14,000
那就一起升级它了

610
00:19:14,000 --> 00:19:16,000
可是你升级的时候又会说

611
00:19:16,000 --> 00:19:18,000
这个东西会安装那个

612
00:19:18,000 --> 00:19:19,000
就是

613
00:19:19,000 --> 00:19:21,000
第一会在安装

614
00:19:21,000 --> 00:19:22,000
C 的另外一个版本

615
00:19:22,000 --> 00:19:23,000
而 C 的另外一个版本

616
00:19:23,000 --> 00:19:24,000
在你这边会跟

617
00:19:24,000 --> 00:19:26,000
第一点什么东西冲突

618
00:19:26,000 --> 00:19:28,000
然后又就说

619
00:19:28,000 --> 00:19:30,000
怎么也受这样的问题

620
00:19:30,000 --> 00:19:32,000
所以让你其实在各个平台之下

621
00:19:32,000 --> 00:19:34,000
都是很弹弊缅的

622
00:19:34,000 --> 00:19:35,000
可以说

623
00:19:35,000 --> 00:19:37,000
对其实我一直有一点

624
00:19:37,000 --> 00:19:38,000
想不明白

625
00:19:38,000 --> 00:19:40,000
比如说为什么

626
00:19:40,000 --> 00:19:42,000
我们对点可能在

627
00:19:42,000 --> 00:19:43,000
Linux 上面比较明显

628
00:19:43,000 --> 00:19:45,000
我们经常会你装一个软件

629
00:19:45,000 --> 00:19:47,000
你会发现它会一来一堆

630
00:19:47,000 --> 00:19:48,000
其他万七八糟的

631
00:19:48,000 --> 00:19:51,000
其他的软件或者是酷

632
00:19:51,000 --> 00:19:52,000
然后

633
00:19:52,000 --> 00:19:55,000
Linux 的大部分的发行版本的做法

634
00:19:55,000 --> 00:19:57,000
是说这个我们发行版

635
00:19:57,000 --> 00:19:58,000
做的时候就会把这个

636
00:19:58,000 --> 00:20:00,000
你考虑好他们这件的依赖关系

637
00:20:00,000 --> 00:20:01,000
然后我们会告诉你

638
00:20:01,000 --> 00:20:02,000
怎么去

639
00:20:02,000 --> 00:20:04,000
我会一套算法去解决这个依赖问题

640
00:20:04,000 --> 00:20:06,000
但其实你会发现

641
00:20:06,000 --> 00:20:08,000
这个时候你也会用那种情况

642
00:20:08,000 --> 00:20:10,000
就是我你升级到某一个

643
00:20:10,000 --> 00:20:12,000
它没有被发行版

644
00:20:12,000 --> 00:20:15,000
在那个版本执迟的时候

645
00:20:15,000 --> 00:20:16,000
你就没有办法升级

646
00:20:16,000 --> 00:20:18,000
你那猫很大的风险去打破这个

647
00:20:18,000 --> 00:20:20,000
或者用自己编异的包

648
00:20:20,000 --> 00:20:21,000
那我就不明白了

649
00:20:21,000 --> 00:20:23,000
为什么在现在这个

650
00:20:23,000 --> 00:20:25,000
你直接装一个软件

651
00:20:25,000 --> 00:20:27,000
你把所有的依赖都打包好

652
00:20:27,000 --> 00:20:29,000
不要去和别人共享

653
00:20:29,000 --> 00:20:30,000
不就好了吗

654
00:20:30,000 --> 00:20:32,000
这个我觉得还是出于一个

655
00:20:32,000 --> 00:20:36,000
节省空间的考虑吧

656
00:20:36,000 --> 00:20:38,000
就如果你打包进去

657
00:20:38,000 --> 00:20:40,000
你自己需要那个酷

658
00:20:40,000 --> 00:20:42,000
这个酷其实很多很多

659
00:20:42,000 --> 00:20:43,000
其他程序都需要

660
00:20:43,000 --> 00:20:44,000
你总统找出一个界限

661
00:20:44,000 --> 00:20:46,000
就是那

662
00:20:46,000 --> 00:20:48,000
到具体到什么酷上

663
00:20:48,000 --> 00:20:50,000
你是一定要自己打包进去

664
00:20:52,000 --> 00:20:53,000
这个有自媒的问题

665
00:20:53,000 --> 00:20:55,000
就是如果这个理由

666
00:20:55,000 --> 00:20:57,000
是因为为了接触空间的话

667
00:20:57,000 --> 00:20:59,000
那在现代硬件条件上

668
00:20:59,000 --> 00:21:01,000
根本就已经不成立了

669
00:21:01,000 --> 00:21:02,000
你现在词法你动

670
00:21:02,000 --> 00:21:04,000
动子和多少

671
00:21:04,000 --> 00:21:05,000
一两个 T 对吧

672
00:21:05,000 --> 00:21:06,000
其实那个程序多大点空间

673
00:21:06,000 --> 00:21:08,000
不但并不仅仅是存储空间

674
00:21:08,000 --> 00:21:09,000
还有传输空间

675
00:21:09,000 --> 00:21:10,000
米区要考得进去

676
00:21:10,000 --> 00:21:12,000
假如说我对啊

677
00:21:12,000 --> 00:21:14,000
我这个包从事无剧系

678
00:21:14,000 --> 00:21:16,000
从 Lipsey 一直的好

679
00:21:16,000 --> 00:21:17,000
所有我可能用的

680
00:21:17,000 --> 00:21:19,000
把我全都打包在一起

681
00:21:20,000 --> 00:21:22,000
就给用户下来

682
00:21:22,000 --> 00:21:24,000
这个好像点

683
00:21:24,000 --> 00:21:25,000
有点二吧

684
00:21:27,000 --> 00:21:28,000
虽然是这么说

685
00:21:28,000 --> 00:21:29,000
但是其实你看在

686
00:21:29,000 --> 00:21:31,000
OS 在下面的大部分的点

687
00:21:31,000 --> 00:21:32,000
是这么干的呀

688
00:21:34,000 --> 00:21:35,000
对吧

689
00:21:35,000 --> 00:21:36,000
其实但是他们

690
00:21:36,000 --> 00:21:37,000
我后来也知道

691
00:21:37,000 --> 00:21:38,000
门去想过这个问题

692
00:21:38,000 --> 00:21:39,000
也看了一些别人的说法

693
00:21:39,000 --> 00:21:41,000
其实有一个事情到此

694
00:21:41,000 --> 00:21:42,000
我觉得是可以理解的

695
00:21:42,000 --> 00:21:43,000
就是

696
00:21:43,000 --> 00:21:44,000
因为你知道米区

697
00:21:44,000 --> 00:21:45,000
是这种开放的系统吗

698
00:21:45,000 --> 00:21:46,000
他希望

699
00:21:46,000 --> 00:21:48,000
如果你在使用某个软件

700
00:21:48,000 --> 00:21:49,000
某个软件酷的时候

701
00:21:49,000 --> 00:21:50,000
发现有问题

702
00:21:50,000 --> 00:21:52,000
你可以去修正它

703
00:21:52,000 --> 00:21:54,000
那么他希望你把这个修正

704
00:21:54,000 --> 00:21:55,000
比如这个 Bugfix

705
00:21:55,000 --> 00:21:56,000
能够也

706
00:21:56,000 --> 00:21:57,000
因为你做 Bug 是

707
00:21:57,000 --> 00:21:58,000
其实在

708
00:21:58,000 --> 00:22:00,000
从某种意义上来

709
00:22:00,000 --> 00:22:01,000
说是在帮助

710
00:22:01,000 --> 00:22:02,000
编写这个软件嘛

711
00:22:02,000 --> 00:22:03,000
对吧

712
00:22:03,000 --> 00:22:04,000
那么他希望把这种成果

713
00:22:04,000 --> 00:22:05,000
这种劳动的工作

714
00:22:05,000 --> 00:22:06,000
不要浪费掉

715
00:22:06,000 --> 00:22:07,000
就你能够

716
00:22:07,000 --> 00:22:09,000
在你使用那个

717
00:22:09,000 --> 00:22:10,000
版本修正中

718
00:22:10,000 --> 00:22:11,000
你也向他的一个上游

719
00:22:11,000 --> 00:22:12,000
就是这个

720
00:22:12,000 --> 00:22:13,000
F-SCO 的原作者

721
00:22:13,000 --> 00:22:16,000
那里能够把这个整合进去

722
00:22:16,000 --> 00:22:17,000
这样的话

723
00:22:17,000 --> 00:22:18,000
大家都可以

724
00:22:18,000 --> 00:22:19,000
想说到你修改这个帮

725
00:22:19,000 --> 00:22:22,000
Fix 带的好处嘛

726
00:22:22,000 --> 00:22:23,000
对

727
00:22:23,000 --> 00:22:24,000
但

728
00:22:24,000 --> 00:22:25,000
我是觉得就是

729
00:22:25,000 --> 00:22:26,000
这是一种人

730
00:22:26,000 --> 00:22:28,000
那我为人人的

731
00:22:28,000 --> 00:22:29,000
精神

732
00:22:29,000 --> 00:22:30,000
对 我就说这个

733
00:22:30,000 --> 00:22:31,000
他们的

734
00:22:31,000 --> 00:22:32,000
就起源

735
00:22:32,000 --> 00:22:33,000
他们的理念就是这样子嘛

736
00:22:33,000 --> 00:22:34,000
那么同样的道理

737
00:22:34,000 --> 00:22:36,000
如果每个程序

738
00:22:36,000 --> 00:22:38,000
都是打包自己的依赖的那东西

739
00:22:38,000 --> 00:22:40,000
那么它可能会出现

740
00:22:40,000 --> 00:22:42,000
比如说同样你的这个

741
00:22:42,000 --> 00:22:43,000
两个程序会依赖

742
00:22:43,000 --> 00:22:44,000
比如说同一个

743
00:22:44,000 --> 00:22:45,000
OpenSCO 的这个包

744
00:22:45,000 --> 00:22:46,000
对吧

745
00:22:46,000 --> 00:22:47,000
然后它可能是依赖的

746
00:22:47,000 --> 00:22:48,000
不同的版本

747
00:22:48,000 --> 00:22:49,000
但是可能

748
00:22:49,000 --> 00:22:51,000
比如说它 OpenSCO 发现一个安全漏洞

749
00:22:51,000 --> 00:22:52,000
然后某一个

750
00:22:52,000 --> 00:22:54,000
系统升级的时候就把它升了

751
00:22:54,000 --> 00:22:56,000
但是如果你用的是自己打包包的话

752
00:22:56,000 --> 00:22:57,000
那你可能

753
00:22:57,000 --> 00:22:59,000
你必须再重新发布一下你这个软件

754
00:22:59,000 --> 00:23:02,000
你才会有那个安全补丁打上去

755
00:23:02,000 --> 00:23:04,000
但是如果你把这个事情交给系统来做

756
00:23:04,000 --> 00:23:05,000
就是说

757
00:23:05,000 --> 00:23:06,000
记得系统说

758
00:23:06,000 --> 00:23:07,000
我把这个整个

759
00:23:07,000 --> 00:23:09,000
你们需要用的 OpenSCO 这个包包的补丁

760
00:23:09,000 --> 00:23:10,000
都打了

761
00:23:10,000 --> 00:23:11,000
你们只要重集一下

762
00:23:11,000 --> 00:23:12,000
就重新

763
00:23:12,000 --> 00:23:14,000
这个关掉重新啟动一下

764
00:23:14,000 --> 00:23:16,000
就可以想说到这个带来的安全的好处

765
00:23:16,000 --> 00:23:19,000
而不是说要等每一个开发的重新去做一遍

766
00:23:19,000 --> 00:23:21,000
这里其实也是有一定的

767
00:23:21,000 --> 00:23:23,000
劳动力上面的节省

768
00:23:23,000 --> 00:23:25,000
对 所以说其实这是一个取捨

769
00:23:25,000 --> 00:23:28,000
有一个取捨的每一位建和吹到

770
00:23:28,000 --> 00:23:29,000
就是你

771
00:23:29,000 --> 00:23:35,000
对 要么选择同时发布更多的依赖

772
00:23:35,000 --> 00:23:40,000
来避免用户可能产生的包冲突的问题

773
00:23:40,000 --> 00:23:42,000
而另一方面你也可以选择

774
00:23:42,000 --> 00:23:45,000
尽量减少自己所发布的软件

775
00:23:45,000 --> 00:23:48,000
其内置的内部

776
00:23:48,000 --> 00:23:51,000
包括的依赖连来享受这种

777
00:23:51,000 --> 00:23:54,000
有一个平台

778
00:23:54,000 --> 00:24:00,000
加上平台在那边的变节和稳定性

779
00:24:00,000 --> 00:24:01,000
或者是安全性

780
00:24:01,000 --> 00:24:03,000
对 就这里可以看到

781
00:24:03,000 --> 00:24:06,000
讲这两种不同的思路和这个做法

782
00:24:06,000 --> 00:24:09,000
就一般像那种像这么商用的

783
00:24:09,000 --> 00:24:11,000
就是消费者即便用的

784
00:24:11,000 --> 00:24:13,000
然后是为了简单方便

785
00:24:13,000 --> 00:24:15,000
然后户效不冲突的话

786
00:24:15,000 --> 00:24:16,000
会采用像刚才讲的

787
00:24:16,000 --> 00:24:19,000
把所有的担保到自己里面去

788
00:24:19,000 --> 00:24:22,000
然后你就依赖于一个比较稳定的

789
00:24:22,000 --> 00:24:24,000
系统的底红里的包

790
00:24:24,000 --> 00:24:25,000
像 Mac 上面就这样子

791
00:24:25,000 --> 00:24:26,000
闻到上面应该很多也是这样子的

792
00:24:26,000 --> 00:24:28,000
因为它要减少这个下载的体积

793
00:24:28,000 --> 00:24:30,000
刚才你说这是一个原因之一

794
00:24:30,000 --> 00:24:32,000
但是像 Linux 这种发现版

795
00:24:32,000 --> 00:24:34,000
它很多就是说

796
00:24:34,000 --> 00:24:36,000
我们整个系统都是开源的对了

797
00:24:36,000 --> 00:24:38,000
我们肯定是希望能够把这种

798
00:24:38,000 --> 00:24:42,000
能够把各种合理都集中起来

799
00:24:42,000 --> 00:24:44,000
不要大家都去自己搞一份

800
00:24:44,000 --> 00:24:46,000
对 但是实际上现在

801
00:24:46,000 --> 00:24:48,000
Linux 社区面临

802
00:24:48,000 --> 00:24:50,000
那个问题是 Linux 已经

803
00:24:50,000 --> 00:24:52,000
越来越不是一种

804
00:24:52,000 --> 00:24:55,000
人人为我为人人的模型了

805
00:24:55,000 --> 00:24:59,000
就是有很多的企业集的用户在用 Linux

806
00:24:59,000 --> 00:25:03,000
而从来他们基本上就拨绝考虑

807
00:25:03,000 --> 00:25:06,000
或者是有这个利益趋势让

808
00:25:06,000 --> 00:25:09,000
他们能够把自己的保险修正反馈给上用的

809
00:25:09,000 --> 00:25:11,000
对于他们来说 Linux 最重要的就是

810
00:25:11,000 --> 00:25:14,000
不要冲突然后部署起来

811
00:25:14,000 --> 00:25:16,000
简单快简好用

812
00:25:16,000 --> 00:25:19,000
就能够稳定可靠的运行就好了

813
00:25:19,000 --> 00:25:21,000
不要 我才不会跟你扯捏什么

814
00:25:21,000 --> 00:25:23,000
会不会会跟上游去是不是

815
00:25:23,000 --> 00:25:24,000
对 没错

816
00:25:24,000 --> 00:25:28,000
其实这个行为会被欠责的

817
00:25:28,000 --> 00:25:29,000
也不是吧

818
00:25:29,000 --> 00:25:31,000
因为毕竟有很多

819
00:25:31,000 --> 00:25:34,000
Linux 发行商 Retat 之流

820
00:25:34,000 --> 00:25:36,000
他们其实很大一部分工作

821
00:25:36,000 --> 00:25:38,000
或者很难用利润的来源

822
00:25:38,000 --> 00:25:42,000
就来自于对于企业军用户提供支持

823
00:25:42,000 --> 00:25:44,000
所以其实是有人来付钱

824
00:25:44,000 --> 00:25:48,000
让他们来做事让用户满意的

825
00:25:48,000 --> 00:25:51,000
对 就是还是根据你这个需求来

826
00:25:51,000 --> 00:25:54,000
如果你需求是稳定可靠的话

827
00:25:54,000 --> 00:25:56,000
你可能要考虑一下才去刚才那个方式

828
00:25:56,000 --> 00:25:58,000
就是你稳可放弃

829
00:25:58,000 --> 00:26:03,000
别人帮你修复了这个 Bug

830
00:26:03,000 --> 00:26:04,000
带来个好处

831
00:26:04,000 --> 00:26:05,000
你也要说

832
00:26:05,000 --> 00:26:07,000
我不管那个风险太大了吧

833
00:26:07,000 --> 00:26:08,000
你改一改以后

834
00:26:08,000 --> 00:26:10,000
说过定我这个应用就夸杀了

835
00:26:10,000 --> 00:26:11,000
对

836
00:26:11,000 --> 00:26:13,000
还是追求那个是第一目标吗

837
00:26:13,000 --> 00:26:16,000
不过这些说到 Linux 我们可以

838
00:26:16,000 --> 00:26:19,000
这里就顺便提一下

839
00:26:19,000 --> 00:26:22,000
就是在大部分的这种比较大的

840
00:26:22,000 --> 00:26:25,000
Linux 发行版它都有自己的一个一套系统

841
00:26:25,000 --> 00:26:27,000
一套包裹那些统

842
00:26:27,000 --> 00:26:31,000
然后这里可能比较著名的两个

843
00:26:31,000 --> 00:26:34,000
一个是以 Debian 为首的那个

844
00:26:34,000 --> 00:26:36,000
那个叫 DB 那个那个体系

845
00:26:36,000 --> 00:26:38,000
然后一个是 Red Hat 为首的叫什么

846
00:26:38,000 --> 00:26:39,000
RPM 的

847
00:26:39,000 --> 00:26:40,000
对 RPM 最开始是

848
00:26:40,000 --> 00:26:44,000
RRed Hat Package Management 的缩写了

849
00:26:44,000 --> 00:26:45,000
但后来现在好像

850
00:26:45,000 --> 00:26:48,000
somehow 缩写变了变成

851
00:26:48,000 --> 00:26:52,000
叫做 RPM Package Management System

852
00:26:52,000 --> 00:26:55,000
就是它变成了一个像 GinU 那样的

853
00:26:55,000 --> 00:26:56,000
就是吗

854
00:26:56,000 --> 00:26:58,000
Re recursive back for the

855
00:26:58,000 --> 00:26:59,000
对对对

856
00:26:59,000 --> 00:27:00,000
对对

857
00:27:00,000 --> 00:27:01,000
就不然就

858
00:27:02,000 --> 00:27:04,000
那么其实

859
00:27:04,000 --> 00:27:06,000
有一个问题啊我

860
00:27:06,000 --> 00:27:10,000
我其实是没有怎么接触过这个 RPM 最好

861
00:27:10,000 --> 00:27:11,000
提醒的我因为

862
00:27:11,000 --> 00:27:13,000
大部分都是在 Debian 或者是

863
00:27:13,000 --> 00:27:14,000
五帮都系统上面用

864
00:27:14,000 --> 00:27:15,000
所以我觉得

865
00:27:15,000 --> 00:27:16,000
用 Debian 还挺顺手的

866
00:27:16,000 --> 00:27:18,000
我不知道你有没有接触到吗

867
00:27:18,000 --> 00:27:21,000
我在进入目前的公司之前

868
00:27:21,000 --> 00:27:23,000
也是从来没有接触过 RPM

869
00:27:23,000 --> 00:27:25,000
或者说接触我但非常有限

870
00:27:25,000 --> 00:27:29,000
但是我们公司目前在用 Central S 所以

871
00:27:30,000 --> 00:27:35,000
在服务器的环境上面的确是在跑而骗

872
00:27:35,000 --> 00:27:37,000
但我的所有的私人的

873
00:27:37,000 --> 00:27:41,000
包括 VPN 或者是讯息全都是 Debian

874
00:27:41,000 --> 00:27:44,000
所以我也可以说算是一个

875
00:27:44,000 --> 00:27:47,000
Debian 的阵营的人吧

876
00:27:47,000 --> 00:27:50,000
其实一个笑的就是

877
00:27:50,000 --> 00:27:51,000
Debian 和 RPM 都可以

878
00:27:51,000 --> 00:27:53,000
都可以有 Flameware 这个

879
00:27:53,000 --> 00:27:56,000
这个还是很大的一个坑们

880
00:27:56,000 --> 00:27:57,000
对对

881
00:27:57,000 --> 00:28:00,000
知误上最之前有一个

882
00:28:00,000 --> 00:28:02,000
也是这个坑吧

883
00:28:02,000 --> 00:28:04,000
有些就是两边都有

884
00:28:04,000 --> 00:28:07,000
有知识 Debian 这一派的

885
00:28:07,000 --> 00:28:09,000
然后有知识 RPM 就去派了

886
00:28:09,000 --> 00:28:10,000
他们在那边吵

887
00:28:10,000 --> 00:28:11,000
但是这个吵

888
00:28:11,000 --> 00:28:14,000
也不是中国所次了

889
00:28:14,000 --> 00:28:15,000
也是什么

890
00:28:15,000 --> 00:28:17,000
很多国外地方就已经吵过

891
00:28:17,000 --> 00:28:18,000
然后中国的 Ninux 去

892
00:28:18,000 --> 00:28:19,000
早就吵过无数遍了

893
00:28:19,000 --> 00:28:21,000
不过最近

894
00:28:21,000 --> 00:28:23,000
前一阵子把知误上又在吵这个事

895
00:28:23,000 --> 00:28:25,000
但是因为我自己

896
00:28:25,000 --> 00:28:27,000
一个人并没有什么太多的经验

897
00:28:27,000 --> 00:28:29,000
所以我觉得没什么特别感觉

898
00:28:29,000 --> 00:28:30,000
如果今天没有什么经验

899
00:28:30,000 --> 00:28:32,000
我们可以直接跳过这一话

900
00:28:32,000 --> 00:28:33,000
对总结来说

901
00:28:33,000 --> 00:28:36,000
就是我的印象好像是

902
00:28:36,000 --> 00:28:38,000
做运为的一方

903
00:28:38,000 --> 00:28:40,000
好像会比较偏向于 RPM

904
00:28:40,000 --> 00:28:42,000
对然后做开发的这一方

905
00:28:42,000 --> 00:28:44,000
会觉得 Debian 比较好

906
00:28:44,000 --> 00:28:46,000
因为 RPM 比较强调于

907
00:28:46,000 --> 00:28:49,000
怎么说呢

908
00:28:49,000 --> 00:28:50,000
强调一个包

909
00:28:50,000 --> 00:28:53,000
一定要来自 Up 3

910
00:28:53,000 --> 00:28:54,000
然后一定要正统

911
00:28:54,000 --> 00:28:56,000
然后一定不能是 Patch 过的

912
00:28:58,000 --> 00:28:59,000
然后

913
00:29:01,000 --> 00:29:02,000
就是企业集的部署

914
00:29:02,000 --> 00:29:04,000
用 RPM 相对来说无痛一点

915
00:29:04,000 --> 00:29:06,000
而代变包的优点

916
00:29:06,000 --> 00:29:09,000
则是它相对来说一般比较新

917
00:29:09,000 --> 00:29:12,000
然后它可以在包里面加上 Patch

918
00:29:13,000 --> 00:29:15,000
其实我作为一个用户

919
00:29:15,000 --> 00:29:17,000
我看到这么久我的理解

920
00:29:17,000 --> 00:29:18,000
就是说

921
00:29:18,000 --> 00:29:20,000
因为作为开发的角度

922
00:29:20,000 --> 00:29:21,000
你可能会经常一去到一些

923
00:29:21,000 --> 00:29:23,000
比较稍微新一点的工具对吧

924
00:29:23,000 --> 00:29:25,000
或者你需要用的一些

925
00:29:25,000 --> 00:29:27,000
比较方便安装的东西

926
00:29:27,000 --> 00:29:29,000
但是就是 Debian 可以让你

927
00:29:29,000 --> 00:29:30,000
比较方便的安装

928
00:29:30,000 --> 00:29:31,000
也不做最新吧

929
00:29:31,000 --> 00:29:33,000
或者是较新的版本

930
00:29:33,000 --> 00:29:34,000
然后能够比较方便的

931
00:29:34,000 --> 00:29:35,000
做一些修改

932
00:29:35,000 --> 00:29:36,000
然后再发布出去

933
00:29:36,000 --> 00:29:37,000
对

934
00:29:37,000 --> 00:29:38,000
这段片们的话你刚才讲

935
00:29:38,000 --> 00:29:40,000
就是同样它包的数量

936
00:29:40,000 --> 00:29:43,000
应该是比 Debian 的包要少的多

937
00:29:43,000 --> 00:29:44,000
小薰说话

938
00:29:44,000 --> 00:29:46,000
说明就好不容易说

939
00:29:46,000 --> 00:29:47,000
对

940
00:29:47,000 --> 00:29:48,000
应该这段这点

941
00:29:48,000 --> 00:29:50,000
我是看到在草的两边

942
00:29:50,000 --> 00:29:52,000
对这个事情都没有一意的

943
00:29:52,000 --> 00:29:54,000
应该还是比较安全的一个说法

944
00:29:54,000 --> 00:29:55,000
然后就说

945
00:29:55,000 --> 00:29:57,000
但是它每一个就是

946
00:29:57,000 --> 00:29:59,000
它有的包的那个

947
00:29:59,000 --> 00:30:00,000
就是

948
00:30:00,000 --> 00:30:02,000
如果它有这个包是有的话

949
00:30:02,000 --> 00:30:03,000
它是做的不错

950
00:30:03,000 --> 00:30:04,000
就是稳定可靠

951
00:30:04,000 --> 00:30:05,000
对 但是反复进攻

952
00:30:05,000 --> 00:30:06,000
很多数测试

953
00:30:06,000 --> 00:30:08,000
就我听过一个版本

954
00:30:08,000 --> 00:30:09,000
就说

955
00:30:09,000 --> 00:30:10,000
所谓 Debian 的

956
00:30:10,000 --> 00:30:11,000
Stable

957
00:30:11,000 --> 00:30:13,000
就是 Debian 的

958
00:30:13,000 --> 00:30:15,000
Stable 版本其中的测试

959
00:30:15,000 --> 00:30:16,000
其实也不是很多

960
00:30:16,000 --> 00:30:18,000
就真的不算不得

961
00:30:18,000 --> 00:30:19,000
真的是 Stable

962
00:30:19,000 --> 00:30:21,000
因为还是比较

963
00:30:21,000 --> 00:30:22,000
稳定的

964
00:30:22,000 --> 00:30:24,000
不 那个 Debian 的测试

965
00:30:24,000 --> 00:30:25,000
其实也很简单

966
00:30:25,000 --> 00:30:26,000
它也不叫什么测试

967
00:30:26,000 --> 00:30:27,000
就是它先测一测

968
00:30:27,000 --> 00:30:28,000
然后放到

969
00:30:28,000 --> 00:30:29,000
那个什么

970
00:30:29,000 --> 00:30:30,000
OnStable

971
00:30:30,000 --> 00:30:31,000
还是在哪里

972
00:30:31,000 --> 00:30:33,000
然后在到 Testing 里面

973
00:30:33,000 --> 00:30:34,000
看看有什么 Bug 没有

974
00:30:34,000 --> 00:30:35,000
稳定的话

975
00:30:35,000 --> 00:30:37,000
就在就挪到那个 Stable 里面去了

976
00:30:37,000 --> 00:30:38,000
应该是每个流程

977
00:30:38,000 --> 00:30:40,000
因为它本来就是一个

978
00:30:40,000 --> 00:30:41,000
并不是像

979
00:30:41,000 --> 00:30:43,000
Red Hat 的那种有一种企业

980
00:30:43,000 --> 00:30:45,000
能够去专门去做这种事情

981
00:30:45,000 --> 00:30:48,000
还是靠大家维护者

982
00:30:48,000 --> 00:30:49,000
虽然有很多很多好

983
00:30:49,000 --> 00:30:50,000
去做每一个作试

984
00:30:50,000 --> 00:30:51,000
还是一个比较

985
00:30:51,000 --> 00:30:53,000
相对松散吧

986
00:30:53,000 --> 00:30:55,000
我觉得对对对对

987
00:30:55,000 --> 00:30:56,000
说到这个

988
00:30:56,000 --> 00:30:57,000
Debian 的发行版

989
00:30:57,000 --> 00:30:59,000
后面好像的确没有一个

990
00:30:59,000 --> 00:31:00,000
一个一个

991
00:31:00,000 --> 00:31:02,000
怎么说财团在支持

992
00:31:02,000 --> 00:31:03,000
对对

993
00:31:03,000 --> 00:31:04,000
那就是 Debian

994
00:31:04,000 --> 00:31:05,000
就靠社区嘛

995
00:31:05,000 --> 00:31:07,000
就不像那个 Red Hat

996
00:31:07,000 --> 00:31:09,000
还有有这个公司的商业支持

997
00:31:09,000 --> 00:31:11,000
但这个问题就是说

998
00:31:11,000 --> 00:31:14,000
到底商业支持能到什么程度

999
00:31:14,000 --> 00:31:15,000
或者是它支持的是

1000
00:31:15,000 --> 00:31:17,000
不是刚刚你需要的

1001
00:31:17,000 --> 00:31:18,000
另外一回事

1002
00:31:18,000 --> 00:31:19,000
反正

1003
00:31:19,000 --> 00:31:20,000
反正就是

1004
00:31:20,000 --> 00:31:21,000
只要你肯花钱

1005
00:31:21,000 --> 00:31:22,000
问题总是可以解决的

1006
00:31:22,000 --> 00:31:23,000
现在问题就是说

1007
00:31:23,000 --> 00:31:24,000
没钱的什么办法

1008
00:31:24,000 --> 00:31:25,000
对

1009
00:31:25,000 --> 00:31:26,000
对

1010
00:31:26,000 --> 00:31:30,000
那就有这么两个问题

1011
00:31:30,000 --> 00:31:32,000
还有一个叫

1012
00:31:32,000 --> 00:31:33,000
样是哪里面的

1013
00:31:33,000 --> 00:31:34,000
样是

1014
00:31:34,000 --> 00:31:36,000
就是这么说吧

1015
00:31:36,000 --> 00:31:39,000
就是 APT 是 Debian 高层嘛

1016
00:31:39,000 --> 00:31:41,000
Debian 包系统

1017
00:31:41,000 --> 00:31:43,000
就是最底层的工具是

1018
00:31:43,000 --> 00:31:44,000
第一拍给去

1019
00:31:44,000 --> 00:31:46,000
然后 RPM

1020
00:31:46,000 --> 00:31:48,000
RPM 包的管理器就叫 RPM

1021
00:31:48,000 --> 00:31:50,000
但是 APT 是基于

1022
00:31:50,000 --> 00:31:51,000
第一拍给是一个

1023
00:31:51,000 --> 00:31:52,000
比较高层管理工具

1024
00:31:52,000 --> 00:31:53,000
它会去

1025
00:31:53,000 --> 00:31:54,000
放进做什么

1026
00:31:54,000 --> 00:31:56,000
的部分的最慢什么的事来的

1027
00:31:56,000 --> 00:31:57,000
而样

1028
00:31:57,000 --> 00:31:58,000
zipper

1029
00:31:58,000 --> 00:32:00,000
是分别来自

1030
00:32:00,000 --> 00:32:01,000
Red Hat 和

1031
00:32:01,000 --> 00:32:03,000
苏泽的两个

1032
00:32:03,000 --> 00:32:05,000
基于 RPM 管理工具的

1033
00:32:05,000 --> 00:32:06,000
高层工具

1034
00:32:06,000 --> 00:32:07,000
哦

1035
00:32:07,000 --> 00:32:08,000
对

1036
00:32:08,000 --> 00:32:09,000
对

1037
00:32:09,000 --> 00:32:10,000
对

1038
00:32:10,000 --> 00:32:11,000
这里也是一个挺有趣的事情啊

1039
00:32:11,000 --> 00:32:12,000
就是它我们会把这个

1040
00:32:12,000 --> 00:32:13,000
包管里分的

1041
00:32:13,000 --> 00:32:15,000
成绩分的很细

1042
00:32:15,000 --> 00:32:16,000
就看你说

1043
00:32:16,000 --> 00:32:17,000
有些底层的工具

1044
00:32:17,000 --> 00:32:19,000
就做一些最几处的事情

1045
00:32:19,000 --> 00:32:20,000
然后上面高层工具

1046
00:32:20,000 --> 00:32:21,000
就做一些

1047
00:32:21,000 --> 00:32:22,000
把这个

1048
00:32:22,000 --> 00:32:23,000
整个流程变的

1049
00:32:23,000 --> 00:32:24,000
没有那么繁锁

1050
00:32:24,000 --> 00:32:25,000
然后见面对

1051
00:32:25,000 --> 00:32:26,000
用户友好

1052
00:32:26,000 --> 00:32:28,000
那么一点点的事件

1053
00:32:28,000 --> 00:32:29,000
对

1054
00:32:29,000 --> 00:32:30,000
我觉得这个友好的其实

1055
00:32:30,000 --> 00:32:31,000
就是

1056
00:32:31,000 --> 00:32:32,000
不是一点点

1057
00:32:32,000 --> 00:32:33,000
比如说

1058
00:32:33,000 --> 00:32:35,000
很多这一套工具

1059
00:32:35,000 --> 00:32:36,000
APT 这套工具

1060
00:32:36,000 --> 00:32:37,000
可以帮你

1061
00:32:37,000 --> 00:32:39,000
自动去分析这个包

1062
00:32:39,000 --> 00:32:40,000
需要依赖有哪些东西

1063
00:32:40,000 --> 00:32:41,000
然后并自动帮你

1064
00:32:41,000 --> 00:32:43,000
给出一个

1065
00:32:43,000 --> 00:32:45,000
就是解决依赖的

1066
00:32:45,000 --> 00:32:46,000
方案

1067
00:32:46,000 --> 00:32:48,000
如果你自己

1068
00:32:48,000 --> 00:32:49,000
一个用这个

1069
00:32:49,000 --> 00:32:51,000
D-Package 的工具去搞的话

1070
00:32:51,000 --> 00:32:53,000
或者 RPM 自己去弄的话

1071
00:32:53,000 --> 00:32:54,000
其实非常非常繁锁

1072
00:32:54,000 --> 00:32:55,000
我记得

1073
00:32:55,000 --> 00:32:56,000
我刚上大学的时候

1074
00:32:56,000 --> 00:32:57,000
白弄

1075
00:32:57,000 --> 00:33:00,000
Linux 的当时的一点之一就是

1076
00:33:00,000 --> 00:33:01,000
安装程序

1077
00:33:01,000 --> 00:33:03,000
真底定有 RPM 嘛

1078
00:33:03,000 --> 00:33:04,000
然后

1079
00:33:04,000 --> 00:33:05,000
为什么就麻烦

1080
00:33:05,000 --> 00:33:06,000
为什么就不能有

1081
00:33:06,000 --> 00:33:07,000
有什么东西

1082
00:33:07,000 --> 00:33:09,000
给我然后我双击一下就安好了呢

1083
00:33:11,000 --> 00:33:12,000
但现在还是不能

1084
00:33:12,000 --> 00:33:13,000
你还是得

1085
00:33:13,000 --> 00:33:14,000
敲几个秘密

1086
00:33:14,000 --> 00:33:16,000
然后让他安装这个很那个

1087
00:33:16,000 --> 00:33:18,000
你得知道那个秘密是什么

1088
00:33:18,000 --> 00:33:19,000
然后你得知道那个

1089
00:33:19,000 --> 00:33:20,000
秘密的参数怎么样

1090
00:33:20,000 --> 00:33:21,000
然后

1091
00:33:21,000 --> 00:33:22,000
如果一切正常

1092
00:33:22,000 --> 00:33:23,000
在大部分情况下

1093
00:33:23,000 --> 00:33:24,000
应该是一切正常

1094
00:33:24,000 --> 00:33:25,000
他能够

1095
00:33:25,000 --> 00:33:26,000
顺利得给你安装完没问题

1096
00:33:26,000 --> 00:33:28,000
但如果他报错了

1097
00:33:28,000 --> 00:33:29,000
然后你怎么办

1098
00:33:29,000 --> 00:33:30,000
对

1099
00:33:30,000 --> 00:33:31,000
但这个时候就是

1100
00:33:31,000 --> 00:33:32,000
经验就要 KK 了

1101
00:33:32,000 --> 00:33:34,000
经验就要拍到文章

1102
00:33:34,000 --> 00:33:35,000
对

1103
00:33:35,000 --> 00:33:36,000
我有一个这样一个印象

1104
00:33:36,000 --> 00:33:38,000
就是在早期

1105
00:33:38,000 --> 00:33:40,000
Windows 在 Windows 上面安装程序

1106
00:33:40,000 --> 00:33:41,000
或者说在 Mic 上

1107
00:33:41,000 --> 00:33:42,000
在 Mic 上安装程序

1108
00:33:42,000 --> 00:33:44,000
要远远方便于在

1109
00:33:44,000 --> 00:33:45,000
Linux 上面

1110
00:33:45,000 --> 00:33:47,000
但是从某一个时间点开始

1111
00:33:47,000 --> 00:33:49,000
我

1112
00:33:49,000 --> 00:33:51,000
三号得到的这种印象

1113
00:33:51,000 --> 00:33:52,000
就是在

1114
00:33:52,000 --> 00:33:53,000
Linux 上面得到

1115
00:33:53,000 --> 00:33:54,000
我想要的工具

1116
00:33:54,000 --> 00:33:56,000
反而要比 Windows 上面简单了

1117
00:33:56,000 --> 00:33:57,000
因为

1118
00:33:57,000 --> 00:33:58,000
Linux 比如说

1119
00:33:58,000 --> 00:33:59,000
代变吧

1120
00:33:59,000 --> 00:34:01,000
我想要用成东西

1121
00:34:01,000 --> 00:34:02,000
然后

1122
00:34:02,000 --> 00:34:03,000
比如说我在网上看

1123
00:34:03,000 --> 00:34:05,000
别人说这个工具很好用

1124
00:34:05,000 --> 00:34:07,000
然后我就直接

1125
00:34:07,000 --> 00:34:09,000
AppKate 上 Search

1126
00:34:09,000 --> 00:34:10,000
我要找的东西

1127
00:34:10,000 --> 00:34:12,000
在哪然后 appKate install

1128
00:34:12,000 --> 00:34:13,000
我有了

1129
00:34:13,000 --> 00:34:14,000
可是在 Windows 上面就要去

1130
00:34:14,000 --> 00:34:15,000
先去网站

1131
00:34:15,000 --> 00:34:16,000
下来一个东西

1132
00:34:16,000 --> 00:34:17,000
然后双机那个文件

1133
00:34:17,000 --> 00:34:18,000
然后一路 Next

1134
00:34:18,000 --> 00:34:19,000
然后最后

1135
00:34:19,000 --> 00:34:21,000
才要去双机什么一个

1136
00:34:21,000 --> 00:34:23,000
快点方式之类的

1137
00:34:23,000 --> 00:34:24,000
才可以运行我去

1138
00:34:24,000 --> 00:34:26,000
就是在某一个时间点

1139
00:34:26,000 --> 00:34:28,000
Linux 社区

1140
00:34:28,000 --> 00:34:30,000
这个文化创造出了

1141
00:34:30,000 --> 00:34:31,000
这么一种

1142
00:34:31,000 --> 00:34:34,000
自动化安装某一个

1143
00:34:34,000 --> 00:34:35,000
傻瓜性

1144
00:34:35,000 --> 00:34:38,000
傻瓜是一条龙安装软件的功能

1145
00:34:38,000 --> 00:34:39,000
对

1146
00:34:39,000 --> 00:34:41,000
或者你可以从某种角度这么讲

1147
00:34:41,000 --> 00:34:42,000
就是我们现在

1148
00:34:42,000 --> 00:34:43,000
包括 Ls 上面的那个

1149
00:34:43,000 --> 00:34:44,000
AppStore 也好

1150
00:34:44,000 --> 00:34:45,000
还是在

1151
00:34:45,000 --> 00:34:46,000
Maximum 的 AppStore 也好

1152
00:34:46,000 --> 00:34:47,000
还包括 Windows 现在

1153
00:34:47,000 --> 00:34:48,000
也在看我们

1154
00:34:48,000 --> 00:34:49,000
也有一个 Windows AppStore 里面

1155
00:34:49,000 --> 00:34:51,000
其实他们做的事情

1156
00:34:51,000 --> 00:34:52,000
就是

1157
00:34:52,000 --> 00:34:54,000
把 Linux 这种包裹里器

1158
00:34:54,000 --> 00:34:56,000
各个发现买的包裹来器的

1159
00:34:56,000 --> 00:34:57,000
做的功能

1160
00:34:57,000 --> 00:34:58,000
通过一种

1161
00:34:58,000 --> 00:34:59,000
图形化的方式

1162
00:34:59,000 --> 00:35:00,000
比较有好的存线

1163
00:35:00,000 --> 00:35:01,000
给普通消费者

1164
00:35:01,000 --> 00:35:03,000
而不是说只是像我们这种

1165
00:35:03,000 --> 00:35:04,000
唯一乎什么后端的

1166
00:35:04,000 --> 00:35:06,000
或者是用 Nix 的

1167
00:35:06,000 --> 00:35:07,000
这种小众的 Geek 用

1168
00:35:07,000 --> 00:35:08,000
对 没错

1169
00:35:08,000 --> 00:35:09,000
所以从这个意义上讲

1170
00:35:09,000 --> 00:35:11,000
临时对于人类的

1171
00:35:11,000 --> 00:35:13,000
最大功限之一就是

1172
00:35:13,000 --> 00:35:16,000
发明了 AppStore 的

1173
00:35:16,000 --> 00:35:18,000
ModelGeek 方式

1174
00:35:18,000 --> 00:35:19,000
对

1175
00:35:19,000 --> 00:35:21,000
某种 Hunker 形式

1176
00:35:21,000 --> 00:35:23,000
所以我们刚才

1177
00:35:23,000 --> 00:35:25,000
现在在谈的

1178
00:35:25,000 --> 00:35:27,000
各种发现版的

1179
00:35:27,000 --> 00:35:28,000
包裹里器的话

1180
00:35:28,000 --> 00:35:30,000
其实我们就等同一支

1181
00:35:30,000 --> 00:35:33,000
在讲某个发现版的 AppStore 一样

1182
00:35:33,000 --> 00:35:35,000
对 我觉得你刚才说的点很好

1183
00:35:35,000 --> 00:35:37,000
之前最开始我接触练式头

1184
00:35:38,000 --> 00:35:41,000
确实是非常对普通用户

1185
00:35:41,000 --> 00:35:42,000
不友好

1186
00:35:42,000 --> 00:35:43,000
因为那个时候也不是特别熟悉

1187
00:35:43,000 --> 00:35:44,000
然后去慢慢去摸锁

1188
00:35:44,000 --> 00:35:46,000
有一种完全不懂

1189
00:35:46,000 --> 00:35:47,000
就是

1190
00:35:47,000 --> 00:35:50,000
你跟温度在那种逻辑

1191
00:35:50,000 --> 00:35:51,000
你对世界的认知

1192
00:35:51,000 --> 00:35:52,000
都是不一样的

1193
00:35:52,000 --> 00:35:54,000
后来它慢慢改

1194
00:35:54,000 --> 00:35:56,000
我印象中

1195
00:35:56,000 --> 00:35:57,000
大概是在

1196
00:35:57,000 --> 00:35:58,000
我拿一个舞帮图这个

1197
00:35:58,000 --> 00:36:01,000
那边它有年份的时间

1198
00:36:01,000 --> 00:36:02,000
比较清楚

1199
00:36:02,000 --> 00:36:03,000
我觉得大概是在舞帮图

1200
00:36:03,000 --> 00:36:05,000
九和十大概之后

1201
00:36:05,000 --> 00:36:07,000
就是一零年左右

1202
00:36:07,000 --> 00:36:08,000
开始

1203
00:36:08,000 --> 00:36:09,000
所以在起码

1204
00:36:09,000 --> 00:36:10,000
跟我个人

1205
00:36:10,000 --> 00:36:11,000
说的今天来讲

1206
00:36:11,000 --> 00:36:12,000
在舞帮图

1207
00:36:12,000 --> 00:36:13,000
这种

1208
00:36:13,000 --> 00:36:14,000
日本系统上安装程序

1209
00:36:14,000 --> 00:36:15,000
是一个相当

1210
00:36:15,000 --> 00:36:17,000
还蛮愚悦的体验

1211
00:36:17,000 --> 00:36:18,000
就是

1212
00:36:18,000 --> 00:36:19,000
越来越少

1213
00:36:19,000 --> 00:36:20,000
遇到包裹里器

1214
00:36:20,000 --> 00:36:21,000
不能帮你解决的

1215
00:36:21,000 --> 00:36:22,000
这种版本冲突的时候

1216
00:36:22,000 --> 00:36:24,000
首先的基本上很少遇得到

1217
00:36:24,000 --> 00:36:25,000
对 其实可以感受到

1218
00:36:25,000 --> 00:36:28,000
它的整个工具有一套

1219
00:36:28,000 --> 00:36:29,000
慢慢摸合好了

1220
00:36:29,000 --> 00:36:31,000
这样一个过程在里面

1221
00:36:31,000 --> 00:36:32,000
对对

1222
00:36:32,000 --> 00:36:33,000
不过

1223
00:36:33,000 --> 00:36:36,000
但是这里还是有一个小小的代价

1224
00:36:36,000 --> 00:36:37,000
刚才讲了

1225
00:36:37,000 --> 00:36:39,000
说现在你怎么去

1226
00:36:39,000 --> 00:36:41,000
APT 里面搜一下

1227
00:36:41,000 --> 00:36:43,000
然后装个软件很方便

1228
00:36:43,000 --> 00:36:45,000
但问题就是说这个是有前提的

1229
00:36:45,000 --> 00:36:46,000
前提就是首先

1230
00:36:46,000 --> 00:36:47,000
这个软件得是在

1231
00:36:47,000 --> 00:36:49,000
APT 那个称固里面

1232
00:36:49,000 --> 00:36:50,000
能找到的

1233
00:36:50,000 --> 00:36:51,000
就是有人把它提交上去了

1234
00:36:51,000 --> 00:36:52,000
要让我们是软件的作者

1235
00:36:52,000 --> 00:36:53,000
也好

1236
00:36:53,000 --> 00:36:55,000
要么是一个第三方的发行版的

1237
00:36:55,000 --> 00:36:56,000
维护的人家

1238
00:36:56,000 --> 00:36:57,000
把它加进去了

1239
00:36:57,000 --> 00:36:58,000
但是如果你要找一个

1240
00:36:58,000 --> 00:37:01,000
不是在那里面的程序的话

1241
00:37:01,000 --> 00:37:03,000
这个过程还是蛮辛苦的

1242
00:37:03,000 --> 00:37:07,000
对 这个就比较算有一个

1243
00:37:07,000 --> 00:37:09,000
叫什么机展动量的过程

1244
00:37:09,000 --> 00:37:11,000
就是当你这个软件

1245
00:37:11,000 --> 00:37:12,000
包管理系统

1246
00:37:12,000 --> 00:37:14,000
大到了一个称一定程度

1247
00:37:14,000 --> 00:37:15,000
那么你可以理解为

1248
00:37:15,000 --> 00:37:17,000
任何一个不会在这个

1249
00:37:17,000 --> 00:37:21,000
APT 的原

1250
00:37:21,000 --> 00:37:23,000
参与之中出现的软件

1251
00:37:23,000 --> 00:37:24,000
都不是什么

1252
00:37:24,000 --> 00:37:27,000
太大或者值得你去新来的软件

1253
00:37:27,000 --> 00:37:28,000
因为

1254
00:37:28,000 --> 00:37:30,000
你说这个要小心

1255
00:37:30,000 --> 00:37:32,000
因为有些很小就能软件

1256
00:37:32,000 --> 00:37:33,000
它可能只是因为

1257
00:37:33,000 --> 00:37:35,000
作者也没怎么去维护它

1258
00:37:35,000 --> 00:37:36,000
因为可能比较简单

1259
00:37:36,000 --> 00:37:37,000
或者什么样好

1260
00:37:37,000 --> 00:37:39,000
对 或者比较平常的问题

1261
00:37:39,000 --> 00:37:41,000
就是如果这个软件

1262
00:37:41,000 --> 00:37:44,000
简单到不需要 APT 来安装的话

1263
00:37:44,000 --> 00:37:46,000
那你可能安装它的过程

1264
00:37:46,000 --> 00:37:50,000
也不会比使用 APT 安装其他软件复杂多少

1265
00:37:51,000 --> 00:37:53,000
对 这是一个

1266
00:37:53,000 --> 00:37:54,000
这个是一个不错的

1267
00:37:54,000 --> 00:37:55,000
一个 argument

1268
00:37:55,000 --> 00:37:57,000
但是有些事也有软件挺复杂

1269
00:37:57,000 --> 00:37:59,000
这个我印象还蛮深的

1270
00:37:59,000 --> 00:38:01,000
就是我不知道你有一段时间

1271
00:38:01,000 --> 00:38:03,000
我在经常周称一些视频的东西

1272
00:38:03,000 --> 00:38:04,000
然后你叫在

1273
00:38:04,000 --> 00:38:07,000
Linux 面处理视频到目前

1274
00:38:07,000 --> 00:38:10,000
还不是一个比较好的体验

1275
00:38:10,000 --> 00:38:12,000
所以它在这块还是比较弱的

1276
00:38:12,000 --> 00:38:13,000
比如说最简单一个例子

1277
00:38:13,000 --> 00:38:15,000
你要重新封装

1278
00:38:15,000 --> 00:38:17,000
像 NP 4 这些视频的一些格式

1279
00:38:17,000 --> 00:38:19,000
它会用到一些软件包

1280
00:38:19,000 --> 00:38:21,000
然后这些软件包

1281
00:38:21,000 --> 00:38:23,000
因为一个是因为版权的原因

1282
00:38:23,000 --> 00:38:26,000
它不能够直接提供二斤制的发星板

1283
00:38:26,000 --> 00:38:27,000
另外一个就是它的

1284
00:38:27,000 --> 00:38:30,000
有些可能用的这种代码

1285
00:38:30,000 --> 00:38:32,000
它可能跟某一个

1286
00:38:32,000 --> 00:38:34,000
Linux 发星板的授权协议有一点不接容

1287
00:38:34,000 --> 00:38:37,000
就是它就是属于这种比较尴尬的状态

1288
00:38:37,000 --> 00:38:39,000
就是跌娘都不爱

1289
00:38:39,000 --> 00:38:41,000
就是发星板的维护者没法把它装

1290
00:38:41,000 --> 00:38:42,000
没法把它加进去

1291
00:38:42,000 --> 00:38:44,000
因为有软件协议的问题

1292
00:38:44,000 --> 00:38:47,000
然后它自己没有办法提供二斤制的版本

1293
00:38:47,000 --> 00:38:49,000
你得继续下载原版来包

1294
00:38:49,000 --> 00:38:50,000
因为有法律的问题

1295
00:38:50,000 --> 00:38:51,000
对

1296
00:38:51,000 --> 00:38:53,000
就遇到这种情况你就很举上

1297
00:38:53,000 --> 00:38:54,000
你做一个用户的话

1298
00:38:54,000 --> 00:38:55,000
你真相办法说

1299
00:38:55,000 --> 00:38:56,000
好吧

1300
00:38:56,000 --> 00:39:01,000
那我总统说怎么去把他的 source 抓回来

1301
00:39:01,000 --> 00:39:04,000
然后根据他的所测一个取安装

1302
00:39:04,000 --> 00:39:06,000
这里就是提到这么一个概念

1303
00:39:06,000 --> 00:39:10,000
就是说从安装别人给你包好的软件包

1304
00:39:10,000 --> 00:39:14,000
或者是从直接软件的原始出出去

1305
00:39:14,000 --> 00:39:18,000
下的它的原文件会来从自己自行编议安装

1306
00:39:18,000 --> 00:39:20,000
就是两种比较大的区别吧

1307
00:39:20,000 --> 00:39:21,000
对

1308
00:39:21,000 --> 00:39:25,000
这可能也是当初从 Windows 切换到

1309
00:39:25,000 --> 00:39:27,000
Linux 上面的一个很大的迷思

1310
00:39:27,000 --> 00:39:30,000
当时我的理解是在 Linux 上面

1311
00:39:30,000 --> 00:39:33,000
你要安装一个程序的唯一方法

1312
00:39:33,000 --> 00:39:35,000
就是先找到这个程序的原代码

1313
00:39:35,000 --> 00:39:38,000
然后自己在 Linux 上面编议它

1314
00:39:38,000 --> 00:39:41,000
但是我一方面觉得这个方向法是太酷了

1315
00:39:41,000 --> 00:39:44,000
然后另一方面又觉得这不是有点

1316
00:39:44,000 --> 00:39:45,000
就是

1317
00:39:45,000 --> 00:39:46,000
你不觉得为什么

1318
00:39:46,000 --> 00:39:48,000
为什么你不能给我一个

1319
00:39:48,000 --> 00:39:50,000
已经编一好的二斤制程序让我来运行的

1320
00:39:50,000 --> 00:39:51,000
对

1321
00:39:51,000 --> 00:39:54,000
这里其实有设计在另外一个问题

1322
00:39:54,000 --> 00:39:57,000
就是有些人会觉得我要有原代码

1323
00:39:57,000 --> 00:39:59,000
然后因为你知道很多软件在编议的时候

1324
00:39:59,000 --> 00:40:00,000
就会有各种各样的选项

1325
00:40:00,000 --> 00:40:03,000
有人会觉得说我装这个软件

1326
00:40:03,000 --> 00:40:06,000
我只需要编议我需要的那一部分功能

1327
00:40:06,000 --> 00:40:09,000
然后我不需要那部分功能我就不编议

1328
00:40:09,000 --> 00:40:12,000
这样我带码会出来我结果会小

1329
00:40:12,000 --> 00:40:14,000
然后可能运行的会会快一点

1330
00:40:14,000 --> 00:40:16,000
或者说更从一个物实的角度来说

1331
00:40:16,000 --> 00:40:18,000
如果我这个软件包里面没有那些

1332
00:40:18,000 --> 00:40:20,000
我不需要的拥御的代码

1333
00:40:20,000 --> 00:40:22,000
那么是不是我可以在某种程度上

1334
00:40:22,000 --> 00:40:25,000
减小我的安全的这个叫做暴露的

1335
00:40:25,000 --> 00:40:27,000
被攻击的面对吧

1336
00:40:27,000 --> 00:40:29,000
这也是一种想法

1337
00:40:29,000 --> 00:40:30,000
然后另外一种想法就是说

1338
00:40:30,000 --> 00:40:34,000
如果每一个软件你都要根据你自己的方法

1339
00:40:34,000 --> 00:40:36,000
去定义一遍安装的

1340
00:40:36,000 --> 00:40:37,000
就编议的选项

1341
00:40:37,000 --> 00:40:39,000
那么会导致说同一个软件

1342
00:40:39,000 --> 00:40:41,000
所有男章的选项

1343
00:40:41,000 --> 00:40:44,000
安装的最终结果都是有一点点不一样的

1344
00:40:44,000 --> 00:40:46,000
这样的话会导致支持起来

1345
00:40:46,000 --> 00:40:48,000
就是软件做的那些提供已经已经的支持

1346
00:40:48,000 --> 00:40:50,000
或者是你要除错

1347
00:40:50,000 --> 00:40:52,000
属于它就非常困难

1348
00:40:52,000 --> 00:40:55,000
因为别人很可能没有办法在它那个编议的

1349
00:40:55,000 --> 00:40:57,000
结果上重现你的问题

1350
00:40:57,000 --> 00:40:59,000
对, Cannot Reproduce won't fix

1351
00:40:59,000 --> 00:41:03,000
这是所有男的软件没有或者自己喜欢选的一个软件

1352
00:41:03,000 --> 00:41:05,000
对,对,所以这里其实也看

1353
00:41:05,000 --> 00:41:08,000
就是在自由灵活和这个铺

1354
00:41:08,000 --> 00:41:09,000
就是你要什么

1355
00:41:09,000 --> 00:41:13,000
你要定制化和你要用这种大众产品

1356
00:41:13,000 --> 00:41:15,000
这间也是有一个取捨的

1357
00:41:15,000 --> 00:41:17,000
这个取捨就是说

1358
00:41:17,000 --> 00:41:18,000
定制化当然好

1359
00:41:18,000 --> 00:41:19,000
就刚才讲了

1360
00:41:19,000 --> 00:41:21,000
比如说可能更安全

1361
00:41:21,000 --> 00:41:23,000
可能性能更好

1362
00:41:23,000 --> 00:41:25,000
可能更灵活对吧

1363
00:41:25,000 --> 00:41:27,000
但是你要牺牲的就是这个可围户性

1364
00:41:27,000 --> 00:41:28,000
另外一个讲到就是说

1365
00:41:28,000 --> 00:41:29,000
大多产品说

1366
00:41:29,000 --> 00:41:30,000
那我大概大多一个版本

1367
00:41:30,000 --> 00:41:31,000
有问题的话

1368
00:41:31,000 --> 00:41:33,000
我们都在这个一个版本里面修

1369
00:41:33,000 --> 00:41:35,000
就一个编议方式出来修

1370
00:41:35,000 --> 00:41:37,000
修好大家都能够受益对吧

1371
00:41:37,000 --> 00:41:39,000
所以就是一个也是两种不同的思路吧

1372
00:41:39,000 --> 00:41:40,000
对

1373
00:41:40,000 --> 00:41:43,000
但是其实并不是所有的包裹里期

1374
00:41:43,000 --> 00:41:46,000
都是从这个二进制的

1375
00:41:46,000 --> 00:41:49,000
其实大部分都不是二进制的方式吧

1376
00:41:49,000 --> 00:41:51,000
现在很难说了

1377
00:41:51,000 --> 00:41:52,000
一半一半

1378
00:41:52,000 --> 00:41:55,000
但至少在 BSD 上面

1379
00:41:55,000 --> 00:42:00,000
BSPorts 基本上全都是以货的原码的方式

1380
00:42:00,000 --> 00:42:05,000
现便宜的方式来安装人间的

1381
00:42:05,000 --> 00:42:07,000
对,这点我觉得其实当时

1382
00:42:07,000 --> 00:42:10,000
我接触的时候我觉得还是蛮特别的

1383
00:42:10,000 --> 00:42:13,000
就是因为首先一个 BSD 的

1384
00:42:13,000 --> 00:42:16,000
就得以那个 3 BSD 的这个例子来说

1385
00:42:16,000 --> 00:42:17,000
以前用过

1386
00:42:17,000 --> 00:42:19,000
就是它那个叫做 Port System

1387
00:42:19,000 --> 00:42:21,000
就比较做得比较好

1388
00:42:21,000 --> 00:42:24,000
因为首先这个 3 BSD 系统整个维护的比较好

1389
00:42:24,000 --> 00:42:26,000
因为它是一个它不像 Linux

1390
00:42:26,000 --> 00:42:30,000
这种是一个内核和 user space

1391
00:42:30,000 --> 00:42:33,000
user 蓝是分开的

1392
00:42:33,000 --> 00:42:35,000
对,它是两波人码在维护

1393
00:42:35,000 --> 00:42:37,000
然后这个发星板

1394
00:42:37,000 --> 00:42:38,000
所以说要把这两个包在一起

1395
00:42:38,000 --> 00:42:40,000
然后给你一个定制的产品

1396
00:42:40,000 --> 00:42:41,000
但你会导致很多各种各样

1397
00:42:41,000 --> 00:42:43,000
即使是会发星板

1398
00:42:43,000 --> 00:42:45,000
你会导致各种各样的什么包裹你的问题

1399
00:42:45,000 --> 00:42:49,000
但 BSD 这个起码它是有一套人码在维护的

1400
00:42:49,000 --> 00:42:53,000
然后它可以确保说它给你的这套 Port

1401
00:42:53,000 --> 00:42:54,000
PortFile

1402
00:42:54,000 --> 00:42:56,000
你是一定可以在你内心的机器上

1403
00:42:56,000 --> 00:42:58,000
便宜成功然后装上的

1404
00:42:58,000 --> 00:43:01,000
对,其实 Linux 的生态有点像

1405
00:43:01,000 --> 00:43:04,000
就是有一个人或者有个人码

1406
00:43:04,000 --> 00:43:06,000
做出了这么一个 Kernel 来

1407
00:43:06,000 --> 00:43:09,000
然后维绍这个 Kernel 有一个确认在上面插个

1408
00:43:09,000 --> 00:43:10,000
个个人插件

1409
00:43:10,000 --> 00:43:13,000
然后会造成其实我当时觉得

1410
00:43:13,000 --> 00:43:18,000
Linux 在这方面它的所谓 Kernel space

1411
00:43:18,000 --> 00:43:21,000
和 user space 的分裔也是比较模糊的

1412
00:43:21,000 --> 00:43:24,000
Linux 真正印象的 Kernel

1413
00:43:24,000 --> 00:43:26,000
其实这样的密点点

1414
00:43:26,000 --> 00:43:28,000
而后面,外面很大一个外围

1415
00:43:28,000 --> 00:43:30,000
都是 user 蓝可以这么理解

1416
00:43:30,000 --> 00:43:34,000
而在 BSD 这边,你可以说每一个 BSD 发行版

1417
00:43:34,000 --> 00:43:37,000
都有一个去明确的 Kernel space

1418
00:43:37,000 --> 00:43:39,000
和一个明确的 user 蓝

1419
00:43:41,000 --> 00:43:43,000
而他们都是同一般人

1420
00:43:43,000 --> 00:43:44,000
对,而且是同一般人

1421
00:43:44,000 --> 00:43:45,000
这个很重要

1422
00:43:45,000 --> 00:43:48,000
而且版本号好像是比较一致的

1423
00:43:48,000 --> 00:43:51,000
不像你在 Linux 上面可能有一个软件的

1424
00:43:51,000 --> 00:43:52,000
版本特别新

1425
00:43:52,000 --> 00:43:55,000
而另外其他部分的基本上是

1426
00:43:55,000 --> 00:43:59,000
可能倒退那么两三年的水平

1427
00:43:59,000 --> 00:44:02,000
而在 BSD 上面你会基本上

1428
00:44:02,000 --> 00:44:04,000
在每一个发行版里面拿到

1429
00:44:04,000 --> 00:44:07,000
一较年份相近的一批工具

1430
00:44:08,000 --> 00:44:11,000
对,但是我也很久没有用 BSD 的则

1431
00:44:11,000 --> 00:44:16,000
而我们看从那个实际使用的情况来看

1432
00:44:16,000 --> 00:44:18,000
也是 BSD 的身份

1433
00:44:18,000 --> 00:44:20,000
应该是比较小的一景

1434
00:44:20,000 --> 00:44:21,000
对

1435
00:44:21,000 --> 00:44:22,000
因为有一个我又一个

1436
00:44:22,000 --> 00:44:23,000
明显的例子

1437
00:44:23,000 --> 00:44:24,000
就是上一节目我们会提到一个

1438
00:44:24,000 --> 00:44:26,000
叫做 Barnish 的那个

1439
00:44:26,000 --> 00:44:28,000
反向代理换层软件

1440
00:44:29,000 --> 00:44:31,000
它那个本来最开始的时候

1441
00:44:31,000 --> 00:44:33,000
是在 BSD 上写的

1442
00:44:33,000 --> 00:44:36,000
那个开发者也是 BSD 的那个内核开发者之一

1443
00:44:36,000 --> 00:44:39,000
然后后来发现他们在做商业化的时候

1444
00:44:39,000 --> 00:44:41,000
其实大部分人都是在 Linux 上面跑

1445
00:44:41,000 --> 00:44:42,000
他们的系统的

1446
00:44:42,000 --> 00:44:44,000
然后他们现在连做新的

1447
00:44:44,000 --> 00:44:46,000
那个扩展的功能都是先考了

1448
00:44:46,000 --> 00:44:48,000
或者是指考 0.0.0.0.0.0.0.0.0.0.0

1449
00:44:48,000 --> 00:44:51,000
然后 BSD 那边都已经不这么关

1450
00:44:51,000 --> 00:44:52,000
对,这也是一个

1451
00:44:52,000 --> 00:44:55,000
多少点可惜的限终吧

1452
00:44:55,000 --> 00:44:56,000
对

1453
00:44:56,000 --> 00:44:57,000
因为其实如果

1454
00:44:57,000 --> 00:45:00,000
FirBest 地流先像 Linux 上面流行的话

1455
00:45:00,000 --> 00:45:02,000
我们如果在 Mac 或者就比较爽

1456
00:45:02,000 --> 00:45:05,000
就是 BSD 内核它切换起来

1457
00:45:05,000 --> 00:45:07,000
就是包括一些那种系统调用

1458
00:45:07,000 --> 00:45:09,000
软件的包

1459
00:45:09,000 --> 00:45:11,000
还有这种包裤很多这种规范

1460
00:45:11,000 --> 00:45:13,000
行为方式都是比较接近的

1461
00:45:13,000 --> 00:45:14,000
就可以会爽一点

1462
00:45:14,000 --> 00:45:17,000
但其实现在就比较糟糕了

1463
00:45:17,000 --> 00:45:18,000
比如说我们现在跑服

1464
00:45:18,000 --> 00:45:20,000
其上面大部分都是 Bnxt

1465
00:45:20,000 --> 00:45:22,000
但是 Mac 上面又是另外

1466
00:45:22,000 --> 00:45:24,000
就是 BSD 的内核

1467
00:45:24,000 --> 00:45:27,000
这样的话就经常会不 Match

1468
00:45:27,000 --> 00:45:30,000
你要搞一下这个还是挺折腾的

1469
00:45:30,000 --> 00:45:33,000
对,我觉得不管怎么说

1470
00:45:33,000 --> 00:45:35,000
Mac 作为一套

1471
00:45:35,000 --> 00:45:36,000
或者是 Darling 这个东西

1472
00:45:36,000 --> 00:45:37,000
作为一套

1473
00:45:37,000 --> 00:45:39,000
作为一套 BSD 系统

1474
00:45:39,000 --> 00:45:44,000
还是可以从开源接受议的

1475
00:45:44,000 --> 00:45:46,000
这点已经是很不错的

1476
00:45:46,000 --> 00:45:49,000
这种无论至少我们有

1477
00:45:49,000 --> 00:45:51,000
至少我们有第三方工具可以用

1478
00:45:51,000 --> 00:45:54,000
至少我们有临时上面很多很多工具

1479
00:45:54,000 --> 00:45:57,000
可以通过 Homeboot 或者 Mac ports

1480
00:45:57,000 --> 00:45:58,000
来直接拿来用

1481
00:45:58,000 --> 00:46:00,000
这已经是一很好的一点

1482
00:46:00,000 --> 00:46:01,000
反观临时

1483
00:46:01,000 --> 00:46:03,000
反观临时用户可能没有那么幸运

1484
00:46:05,000 --> 00:46:06,000
这里就说到了在

1485
00:46:06,000 --> 00:46:08,000
在餐厅上面的

1486
00:46:08,000 --> 00:46:11,000
就除了官方苹果那个 App Store 之外

1487
00:46:11,000 --> 00:46:13,000
我们还有一些有很古老的

1488
00:46:13,000 --> 00:46:15,000
最早的要有什么 Fing

1489
00:46:15,000 --> 00:46:17,000
这么一个包裤按理器

1490
00:46:17,000 --> 00:46:18,000
FINK

1491
00:46:18,000 --> 00:46:19,000
对 Fing

1492
00:46:19,000 --> 00:46:21,000
这个其实我自己是没有用

1493
00:46:21,000 --> 00:46:23,000
我只是听说过

1494
00:46:23,000 --> 00:46:25,000
在用 Mac ports 的时候

1495
00:46:25,000 --> 00:46:26,000
听说过

1496
00:46:26,000 --> 00:46:27,000
说已经

1497
00:46:27,000 --> 00:46:28,000
Depricated

1498
00:46:28,000 --> 00:46:30,000
It's a better thing

1499
00:46:30,000 --> 00:46:31,000
forget it all the things

1500
00:46:31,000 --> 00:46:32,000
You'll smack walls

1501
00:46:32,000 --> 00:46:33,000
OK

1502
00:46:33,000 --> 00:46:35,000
对 所以我接触到在 Mac 上面

1503
00:46:35,000 --> 00:46:37,000
用的那种类似

1504
00:46:37,000 --> 00:46:38,000
临时包裤按理器

1505
00:46:38,000 --> 00:46:40,000
其实就是从 Mac ports 开始的

1506
00:46:40,000 --> 00:46:41,000
然后 Mac ports

1507
00:46:41,000 --> 00:46:42,000
就是

1508
00:46:42,000 --> 00:46:43,000
因为你看明最看的时候

1509
00:46:43,000 --> 00:46:45,000
它是那种 port 系统

1510
00:46:45,000 --> 00:46:46,000
就是跟 BSD 的 port

1511
00:46:46,000 --> 00:46:48,000
是有一点点相思之处的

1512
00:46:48,000 --> 00:46:49,000
不见

1513
00:46:49,000 --> 00:46:51,000
很大程度上是同一套系统

1514
00:46:51,000 --> 00:46:52,000
只不过 BSD port

1515
00:46:52,000 --> 00:46:53,000
如果我

1516
00:46:53,000 --> 00:46:55,000
当然我的 BSD 可能

1517
00:46:55,000 --> 00:46:56,000
我已经有三五

1518
00:46:56,000 --> 00:46:57,000
也没有朋友 BSD

1519
00:46:57,000 --> 00:46:58,000
但是我

1520
00:46:58,000 --> 00:46:59,000
BSD

1521
00:46:59,000 --> 00:47:01,000
支持没有欺骗我的话

1522
00:47:01,000 --> 00:47:02,000
BSD 上面的 port

1523
00:47:02,000 --> 00:47:03,000
其实就是一个 Mac 法

1524
00:47:03,000 --> 00:47:04,000
就是你要

1525
00:47:04,000 --> 00:47:07,000
进到那个 port 的

1526
00:47:07,000 --> 00:47:08,000
怎么路下面

1527
00:47:08,000 --> 00:47:10,000
然后手动运行 Mac

1528
00:47:10,000 --> 00:47:12,000
Mac install 之类的

1529
00:47:12,000 --> 00:47:14,000
然后 Mac ports

1530
00:47:14,000 --> 00:47:15,000
跟这套系统

1531
00:47:15,000 --> 00:47:16,000
唯一差别就是

1532
00:47:16,000 --> 00:47:18,000
然后会自动帮你运行 Mac

1533
00:47:18,000 --> 00:47:19,000
Mac 这个过程

1534
00:47:19,000 --> 00:47:21,000
紧繁

1535
00:47:21,000 --> 00:47:22,000
对对对对

1536
00:47:22,000 --> 00:47:23,000
你整个

1537
00:47:23,000 --> 00:47:25,000
你下过来的还是软件的

1538
00:47:25,000 --> 00:47:26,000
原实代码

1539
00:47:26,000 --> 00:47:27,000
然后你要去通过手工编议

1540
00:47:27,000 --> 00:47:28,000
当然这编之前

1541
00:47:28,000 --> 00:47:29,000
你先装一些

1542
00:47:29,000 --> 00:47:30,000
什么编议器啊

1543
00:47:30,000 --> 00:47:31,000
那些是

1544
00:47:31,000 --> 00:47:32,000
继续去就这些都是

1545
00:47:32,000 --> 00:47:33,000
然后

1546
00:47:33,000 --> 00:47:36,000
然后 Mac ports 唯一的

1547
00:47:37,000 --> 00:47:38,000
特点就是它

1548
00:47:38,000 --> 00:47:39,000
是用 TCL

1549
00:47:39,000 --> 00:47:41,000
把整套编议和安装的过程

1550
00:47:41,000 --> 00:47:42,000
帮你自动化

1551
00:47:42,000 --> 00:47:44,000
然后当时还有一个优点

1552
00:47:44,000 --> 00:47:46,000
当时有一些

1553
00:47:46,000 --> 00:47:49,000
苹果原功在直接的

1554
00:47:49,000 --> 00:47:50,000
贡献这个系统

1555
00:47:50,000 --> 00:47:52,000
所以他们又很大的优势

1556
00:47:52,000 --> 00:47:54,000
他们知道自己干什么

1557
00:47:54,000 --> 00:47:56,000
而他们可以做的比较

1558
00:47:56,000 --> 00:47:57,000
比较 Apple like

1559
00:47:57,000 --> 00:47:59,000
对

1560
00:47:59,000 --> 00:48:02,000
其实就是在相当长一段时间里面

1561
00:48:02,000 --> 00:48:03,000
那个

1562
00:48:03,000 --> 00:48:04,000
OS 的用户

1563
00:48:04,000 --> 00:48:05,000
就是做人家开发者的话

1564
00:48:05,000 --> 00:48:06,000
或多或少的

1565
00:48:06,000 --> 00:48:08,000
也会接触到这个 Mac ports 这个系统

1566
00:48:08,000 --> 00:48:09,000
让我们自己写一点

1567
00:48:09,000 --> 00:48:10,000
让我们去装别人的东西

1568
00:48:10,000 --> 00:48:13,000
不过在我有线的记忆里面

1569
00:48:13,000 --> 00:48:15,000
这个 Mac ports 的使用体验

1570
00:48:15,000 --> 00:48:16,000
并不是特别好

1571
00:48:16,000 --> 00:48:17,000
因为经常会

1572
00:48:17,000 --> 00:48:19,000
有这种各种各样的问题

1573
00:48:19,000 --> 00:48:20,000
导致安装不成功

1574
00:48:20,000 --> 00:48:21,000
编一失败

1575
00:48:21,000 --> 00:48:22,000
然后这个时候

1576
00:48:22,000 --> 00:48:23,000
就会进入一个

1577
00:48:23,000 --> 00:48:24,000
比较混乱的状态

1578
00:48:24,000 --> 00:48:25,000
你要去找

1579
00:48:25,000 --> 00:48:27,000
你要去看它的

1580
00:48:27,000 --> 00:48:28,000
Port file 然后去看

1581
00:48:28,000 --> 00:48:29,000
安装到哪一步了

1582
00:48:29,000 --> 00:48:30,000
哪一步失败了

1583
00:48:30,000 --> 00:48:32,000
要清理哪些垃圾文件

1584
00:48:32,000 --> 00:48:33,000
怎么这么低

1585
00:48:33,000 --> 00:48:34,000
对看的用户界面

1586
00:48:34,000 --> 00:48:35,000
是那么的友好

1587
00:48:37,000 --> 00:48:38,000
所以后来

1588
00:48:38,000 --> 00:48:40,000
就有一个叫做

1589
00:48:40,000 --> 00:48:41,000
HomeBrew

1590
00:48:41,000 --> 00:48:42,000
我们通常减转它叫

1591
00:48:42,000 --> 00:48:44,000
恒空出示

1592
00:48:44,000 --> 00:48:45,000
对

1593
00:48:45,000 --> 00:48:46,000
然后一刀

1594
00:48:46,000 --> 00:48:48,000
解决了这个问题

1595
00:48:48,000 --> 00:48:49,000
然后接下来基本上

1596
00:48:49,000 --> 00:48:51,000
Mac ports 也是被淘汰掉了

1597
00:48:51,000 --> 00:48:53,000
还是有一句对

1598
00:48:53,000 --> 00:48:54,000
怎么说呢

1599
00:48:54,000 --> 00:48:55,000
Mac ports 还说

1600
00:48:55,000 --> 00:48:57,000
一批死中的拥顿在那边用

1601
00:48:57,000 --> 00:48:58,000
然后通常会觉得

1602
00:48:58,000 --> 00:49:00,000
HomeBrew 就有点像

1603
00:49:00,000 --> 00:49:01,000
就像

1604
00:49:01,000 --> 00:49:02,000
所有沾染了

1605
00:49:02,000 --> 00:49:03,000
Ruby 的东西一样

1606
00:49:03,000 --> 00:49:04,000
都是一群

1607
00:49:04,000 --> 00:49:06,000
喝了 Couple

1608
00:49:06,000 --> 00:49:07,000
喝了 Couple

1609
00:49:07,000 --> 00:49:09,000
这个小币哈

1610
00:49:09,000 --> 00:49:10,000
门在那边闹

1611
00:49:10,000 --> 00:49:11,000
说这个比较好

1612
00:49:13,000 --> 00:49:14,000
所以这你提到了

1613
00:49:14,000 --> 00:49:15,000
就是刚才讲

1614
00:49:15,000 --> 00:49:17,000
那个 Mac ports 的那

1615
00:49:17,000 --> 00:49:18,000
Port file 使用 TCL 叫本来写

1616
00:49:18,000 --> 00:49:20,000
HomeBrew

1617
00:49:20,000 --> 00:49:21,000
TCL 叫本

1618
00:49:21,000 --> 00:49:23,000
是吗

1619
00:49:23,000 --> 00:49:25,000
应该是没做的

1620
00:49:25,000 --> 00:49:28,000
Mac port file 使用 TCL 写本

1621
00:49:28,000 --> 00:49:31,000
然后这个 HomeBrew 的安装

1622
00:49:31,000 --> 00:49:33,000
他们叫一个 Formale

1623
00:49:33,000 --> 00:49:35,000
是一个 Ruby 的

1624
00:49:35,000 --> 00:49:37,000
class 文件其实是

1625
00:49:37,000 --> 00:49:38,000
对

1626
00:49:38,000 --> 00:49:41,000
因为已经我个人对 Ruby

1627
00:49:41,000 --> 00:49:42,000
没什么特别感觉

1628
00:49:42,000 --> 00:49:44,000
我不知道你觉得怎么样

1629
00:49:44,000 --> 00:49:47,000
具体的 HomeBrew 的 Formale 上面

1630
00:49:47,000 --> 00:49:48,000
其实你可以把它理解

1631
00:49:48,000 --> 00:49:51,000
当成一门 DSL 来学习

1632
00:49:51,000 --> 00:49:53,000
所以可以完全这样的

1633
00:49:53,000 --> 00:49:56,000
你可以完全不懂 Ruby

1634
00:49:56,000 --> 00:49:58,000
里面那个两个数线

1635
00:49:58,000 --> 00:50:00,000
中间加一个

1636
00:50:00,000 --> 00:50:01,000
变量明到底是什么意思

1637
00:50:01,000 --> 00:50:04,000
你也可以去操作 HomeBrew 的 Formale

1638
00:50:04,000 --> 00:50:06,000
以及一糊的话表嘛

1639
00:50:06,000 --> 00:50:07,000
所以它其实是

1640
00:50:07,000 --> 00:50:10,000
把它做得相当闪挂化的

1641
00:50:10,000 --> 00:50:12,000
一个 Formale

1642
00:50:12,000 --> 00:50:14,000
我刚写

1643
00:50:14,000 --> 00:50:16,000
我记得你还在推荐上问过

1644
00:50:16,000 --> 00:50:19,000
我说你难道没有写过自己的 Formale 吗

1645
00:50:19,000 --> 00:50:21,000
我当时很老师

1646
00:50:21,000 --> 00:50:23,000
而且很骄傲的时候没有

1647
00:50:23,000 --> 00:50:27,000
我都还写过一两个

1648
00:50:27,000 --> 00:50:28,000
但后来我也写了

1649
00:50:28,000 --> 00:50:30,000
但我觉得即便

1650
00:50:30,000 --> 00:50:32,000
像我这样对 Ruby

1651
00:50:32,000 --> 00:50:34,000
其实没有什么太深了解的

1652
00:50:34,000 --> 00:50:35,000
也是可以

1653
00:50:35,000 --> 00:50:39,000
假情就属的去操作一个 Formale 发案

1654
00:50:39,000 --> 00:50:42,000
所以不是没有什么太好的问题

1655
00:50:42,000 --> 00:50:43,000
对

1656
00:50:43,000 --> 00:50:46,000
不过说回来这个 HomeBrew 本身

1657
00:50:46,000 --> 00:50:48,000
我觉得它

1658
00:50:48,000 --> 00:50:50,000
现在 HomeBrew 已经现在

1659
00:50:50,000 --> 00:50:52,000
就是这个 OS 的

1660
00:50:52,000 --> 00:50:53,000
继承事实的

1661
00:50:53,000 --> 00:50:56,000
答应好的官方

1662
00:50:56,000 --> 00:50:58,000
包馆里弃了

1663
00:50:58,000 --> 00:51:00,000
因为

1664
00:51:00,000 --> 00:51:02,000
你现在去关注一下

1665
00:51:02,000 --> 00:51:04,000
Github 上面的那些各种软件

1666
00:51:04,000 --> 00:51:06,000
你会发现它只要设计到

1667
00:51:06,000 --> 00:51:08,000
跟 OSN 的大部分会学用 HomeBrew

1668
00:51:08,000 --> 00:51:11,000
对而且尤其是新工具

1669
00:51:11,000 --> 00:51:13,000
会倾向于提问一个 HomeBrew 方面了

1670
00:51:13,000 --> 00:51:15,000
比如我们上次提到

1671
00:51:15,000 --> 00:51:19,000
NaleV 就提问一个 HomeBrew 的 Tap

1672
00:51:19,000 --> 00:51:22,000
所以这里就有一个延伸的问题

1673
00:51:22,000 --> 00:51:24,000
就是你觉得

1674
00:51:24,000 --> 00:51:27,000
为什么 HomeBrew 会在如此短的时间内

1675
00:51:27,000 --> 00:51:30,000
完全就替代掉了 Macports

1676
00:51:30,000 --> 00:51:33,000
被这个和当年

1677
00:51:33,000 --> 00:51:35,000
那个 Macports 取代 Fink

1678
00:51:35,000 --> 00:51:36,000
还就蛮大趣的

1679
00:51:36,000 --> 00:51:38,000
但是我记得音像中

1680
00:51:38,000 --> 00:51:40,000
Macports 和 Fink 还是共存过

1681
00:51:40,000 --> 00:51:41,000
相当长一段时间的

1682
00:51:41,000 --> 00:51:42,000
我觉得第一是

1683
00:51:42,000 --> 00:51:48,000
它把提供一个新软件的门槛降低了

1684
00:51:48,000 --> 00:51:52,000
因为 Ruby 的强项就是写一个 DSI

1685
00:51:52,000 --> 00:51:54,000
然后它用的这个 DSI

1686
00:51:54,000 --> 00:51:55,000
所以简单的

1687
00:51:55,000 --> 00:51:58,000
你发布一个新的软件

1688
00:51:58,000 --> 00:52:00,000
到 HomeBrew 迫使

1689
00:52:00,000 --> 00:52:02,000
Postory 的过程变得

1690
00:52:02,000 --> 00:52:04,000
荒唐的简单

1691
00:52:05,000 --> 00:52:08,000
而 Macports 它因为用 TCL

1692
00:52:08,000 --> 00:52:12,000
TCL 毕竟是一个从来没有大规模的

1693
00:52:12,000 --> 00:52:15,000
然后你写它还是需要花一点脑子

1694
00:52:15,000 --> 00:52:18,000
你必须明白它是一个什么样的做远一点

1695
00:52:18,000 --> 00:52:22,000
然后我觉得还有一个可能会成为一个

1696
00:52:22,000 --> 00:52:24,000
决定性因素的是

1697
00:52:24,000 --> 00:52:26,000
HomeBrew 给你一种虚假的安全感

1698
00:52:26,000 --> 00:52:29,000
就是你每次读乳安装什么东西

1699
00:52:29,000 --> 00:52:30,000
你不需要速度

1700
00:52:31,000 --> 00:52:33,000
前提是

1701
00:52:33,000 --> 00:52:35,000
你是安装的时候用过速度对吧

1702
00:52:35,000 --> 00:52:40,000
你要把那个 UZLOKO 设定为你自己账户可读写

1703
00:52:40,000 --> 00:52:41,000
对啊

1704
00:52:41,000 --> 00:52:43,000
但是一般来说推荐的一种方式

1705
00:52:43,000 --> 00:52:44,000
对一般来说每一个

1706
00:52:44,000 --> 00:52:45,000
就是如果你摸安着摸安装

1707
00:52:45,000 --> 00:52:47,000
一台新电脑摸任

1708
00:52:47,000 --> 00:52:49,000
直接用它的安装脚板去安装 HomeBrew 的话

1709
00:52:49,000 --> 00:52:51,000
它就自动不够帮你这样做

1710
00:52:51,000 --> 00:52:52,000
现在已经是这样了吧

1711
00:52:52,000 --> 00:52:53,000
应该是这样的吧

1712
00:52:53,000 --> 00:52:56,000
我反正安装这台新的

1713
00:52:57,000 --> 00:53:00,000
新的 Macbook 的时候好像是

1714
00:53:00,000 --> 00:53:02,000
完全没有自己去改

1715
00:53:02,000 --> 00:53:04,000
它会推荐你这么干

1716
00:53:04,000 --> 00:53:05,000
我记得确实是这样

1717
00:53:05,000 --> 00:53:06,000
但我不太确定

1718
00:53:06,000 --> 00:53:07,000
是不是它会摸任吧

1719
00:53:07,000 --> 00:53:09,000
它可能会安装过程中

1720
00:53:09,000 --> 00:53:11,000
许问你要不要这样干

1721
00:53:11,000 --> 00:53:13,000
然后应该维持

1722
00:53:13,000 --> 00:53:15,000
炒帅的打了一个外

1723
00:53:15,000 --> 00:53:16,000
对

1724
00:53:16,000 --> 00:53:18,000
其实有一点我一直在想

1725
00:53:18,000 --> 00:53:22,000
就是 Github 对 HomeBrew 的帮助有多大

1726
00:53:22,000 --> 00:53:24,000
其实我觉得这个应该是挺关键的

1727
00:53:24,000 --> 00:53:26,000
应该说是相等的

1728
00:53:26,000 --> 00:53:27,000
因为

1729
00:53:27,000 --> 00:53:28,000
对

1730
00:53:28,000 --> 00:53:30,000
就是你刚才说它是一个

1731
00:53:30,000 --> 00:53:33,000
第 5 头技成式迟的软件包安装工具

1732
00:53:33,000 --> 00:53:35,000
我就想说它其实仅仅是对程序

1733
00:53:35,000 --> 00:53:37,000
而这样而言而言

1734
00:53:37,000 --> 00:53:40,000
但正是因为此

1735
00:53:40,000 --> 00:53:43,000
几乎每一个稍微有点自作的手续来

1736
00:53:43,000 --> 00:53:45,000
肯定都会去搞到 Github

1737
00:53:45,000 --> 00:53:47,000
然后 HomeBrew 就在 Github

1738
00:53:47,000 --> 00:53:48,000
对

1739
00:53:48,000 --> 00:53:49,000
对

1740
00:53:49,000 --> 00:53:50,000
这点我觉得就是跟

1741
00:53:50,000 --> 00:53:51,000
像 MacPort 是很不一样

1742
00:53:51,000 --> 00:53:52,000
MacPort 是那些

1743
00:53:52,000 --> 00:53:53,000
我都不知道那些 Port 5

1744
00:53:53,000 --> 00:53:54,000
人家从哪里来的

1745
00:53:54,000 --> 00:53:55,000
然后就他们去提交

1746
00:53:55,000 --> 00:53:56,000
然后整个看了一下

1747
00:53:56,000 --> 00:53:58,000
那个网站也做得很丑对吧

1748
00:53:58,000 --> 00:53:59,000
但是 HomeBrew 不一样

1749
00:53:59,000 --> 00:54:01,000
他的所有的这个

1750
00:54:01,000 --> 00:54:02,000
那个所谓的

1751
00:54:02,000 --> 00:54:03,000
他们叫 form 了

1752
00:54:03,000 --> 00:54:04,000
就是我们类似于 MacFile

1753
00:54:04,000 --> 00:54:06,000
或者 Port 5 的每一个东西

1754
00:54:06,000 --> 00:54:07,000
他都是整个

1755
00:54:07,000 --> 00:54:10,000
包式安制放在 Github 上面的

1756
00:54:10,000 --> 00:54:11,000
然后你们比 Github

1757
00:54:11,000 --> 00:54:14,000
是比较有好的一个工具

1758
00:54:14,000 --> 00:54:15,000
对

1759
00:54:15,000 --> 00:54:16,000
对程序来说话至少

1760
00:54:16,000 --> 00:54:17,000
然后都会大家觉得

1761
00:54:17,000 --> 00:54:18,000
那我

1762
00:54:18,000 --> 00:54:19,000
给你添加

1763
00:54:19,000 --> 00:54:20,000
我就是 fork 一下你这个嘛

1764
00:54:20,000 --> 00:54:21,000
然后把这个加进去

1765
00:54:21,000 --> 00:54:23,000
然后再给你

1766
00:54:23,000 --> 00:54:24,000
发一个这个 PoolRequest

1767
00:54:24,000 --> 00:54:26,000
这个东西就算搞定了

1768
00:54:26,000 --> 00:54:27,000
对

1769
00:54:27,000 --> 00:54:28,000
整个流存是非常方便的

1770
00:54:28,000 --> 00:54:29,000
所以这里其实

1771
00:54:29,000 --> 00:54:31,000
就说我们要做

1772
00:54:31,000 --> 00:54:32,000
要做 UI 做得好

1773
00:54:32,000 --> 00:54:34,000
但是 UI 是广义上

1774
00:54:34,000 --> 00:54:35,000
不只是说

1775
00:54:35,000 --> 00:54:36,000
用户最重要的小笔

1776
00:54:36,000 --> 00:54:37,000
我们看到一个按钮

1777
00:54:37,000 --> 00:54:38,000
这个就应该就是

1778
00:54:38,000 --> 00:54:39,000
UX

1779
00:54:39,000 --> 00:54:42,000
User 的用户体验非常好

1780
00:54:42,000 --> 00:54:43,000
这个叫对

1781
00:54:43,000 --> 00:54:45,000
这个用户就是我们那种

1782
00:54:45,000 --> 00:54:46,000
Github 在穿续

1783
00:54:46,000 --> 00:54:49,000
对对我们的友好的话

1784
00:54:49,000 --> 00:54:50,000
我们也更加乐意

1785
00:54:50,000 --> 00:54:51,000
去给他什么天赚家瓦

1786
00:54:51,000 --> 00:54:52,000
对

1787
00:54:52,000 --> 00:54:53,000
你刚才说这点很好

1788
00:54:53,000 --> 00:54:55,000
就是当你打开

1789
00:54:55,000 --> 00:54:57,000
HomeBrew 的

1790
00:54:57,000 --> 00:54:58,000
业面的时候

1791
00:54:58,000 --> 00:54:59,000
他会用

1792
00:54:59,000 --> 00:55:01,000
一上来就告诉你

1793
00:55:01,000 --> 00:55:03,000
一上来给你讲一个展示

1794
00:55:03,000 --> 00:55:04,000
给你这个工具

1795
00:55:04,000 --> 00:55:05,000
你怎么干嘛

1796
00:55:05,000 --> 00:55:06,000
给你讲一个例子

1797
00:55:06,000 --> 00:55:07,000
给你讲一个故事

1798
00:55:07,000 --> 00:55:08,000
然后用大字

1799
00:55:08,000 --> 00:55:10,000
用一独的

1800
00:55:10,000 --> 00:55:11,000
简单的文字

1801
00:55:11,000 --> 00:55:12,000
告诉你这个工具

1802
00:55:12,000 --> 00:55:13,000
就是干嘛

1803
00:55:13,000 --> 00:55:14,000
这工具

1804
00:55:14,000 --> 00:55:15,000
怎样安装

1805
00:55:15,000 --> 00:55:16,000
怎样使用

1806
00:55:16,000 --> 00:55:17,000
感性的话

1807
00:55:17,000 --> 00:55:18,000
去干这个

1808
00:55:18,000 --> 00:55:20,000
而反观麦泡斯

1809
00:55:20,000 --> 00:55:21,000
你打开它在网页

1810
00:55:21,000 --> 00:55:23,000
网页是一个很典型的

1811
00:55:23,000 --> 00:55:24,000
这种

1812
00:55:24,000 --> 00:55:26,000
门户网站的感觉

1813
00:55:26,000 --> 00:55:27,000
就是一上来

1814
00:55:27,000 --> 00:55:28,000
密码

1815
00:55:28,000 --> 00:55:29,000
一大堆信息

1816
00:55:29,000 --> 00:55:30,000
什么

1817
00:55:30,000 --> 00:55:31,000
不知道在说什么

1818
00:55:31,000 --> 00:55:32,000
Documentation

1819
00:55:32,000 --> 00:55:33,000
Update

1820
00:55:33,000 --> 00:55:34,000
Research News

1821
00:55:34,000 --> 00:55:36,000
Blah blah blah

1822
00:55:36,000 --> 00:55:37,000
你想要干嘛

1823
00:55:37,000 --> 00:55:38,000
你想知道

1824
00:55:38,000 --> 00:55:39,000
这个工具

1825
00:55:39,000 --> 00:55:40,000
老是干嘛的

1826
00:55:40,000 --> 00:55:41,000
你不知道

1827
00:55:41,000 --> 00:55:42,000
对对

1828
00:55:42,000 --> 00:55:43,000
所以其实

1829
00:55:43,000 --> 00:55:44,000
所以刚才你提到好

1830
00:55:44,000 --> 00:55:45,000
就是说那个什么

1831
00:55:45,000 --> 00:55:46,000
我们都讲那个什么

1832
00:55:46,000 --> 00:55:48,000
QA Drinking Kit

1833
00:55:48,000 --> 00:55:49,000
其实

1834
00:55:49,000 --> 00:55:50,000
这个我觉得是

1835
00:55:50,000 --> 00:55:52,000
所有的开发者

1836
00:55:52,000 --> 00:55:53,000
包括这个产品经理

1837
00:55:53,000 --> 00:55:55,000
都要学习的一个东西

1838
00:55:55,000 --> 00:55:56,000
就怎么把这个叫做

1839
00:55:56,000 --> 00:55:57,000
我们这个

1840
00:55:57,000 --> 00:55:58,000
其实有一个专门的

1841
00:55:58,000 --> 00:55:59,000
叫做什么

1842
00:55:59,000 --> 00:56:00,000
User Landing

1843
00:56:00,000 --> 00:56:01,000
就是

1844
00:56:01,000 --> 00:56:02,000
就是

1845
00:56:02,000 --> 00:56:04,000
就是第一批用户

1846
00:56:04,000 --> 00:56:05,000
当用户第一眼

1847
00:56:05,000 --> 00:56:06,000
目睹你的产品的时候

1848
00:56:06,000 --> 00:56:07,000
你给它一个什么样的用户

1849
00:56:07,000 --> 00:56:08,000
对

1850
00:56:08,000 --> 00:56:09,000
就是在用户

1851
00:56:09,000 --> 00:56:10,000
已经知道有你这么一个东西

1852
00:56:10,000 --> 00:56:11,000
但是还不知道怎么用的时候

1853
00:56:11,000 --> 00:56:12,000
你怎么

1854
00:56:12,000 --> 00:56:14,000
能够快速的去上手

1855
00:56:14,000 --> 00:56:15,000
能够在过程边

1856
00:56:15,000 --> 00:56:16,000
再比较爽

1857
00:56:16,000 --> 00:56:17,000
我觉得这个是

1858
00:56:17,000 --> 00:56:18,000
可能是

1859
00:56:18,000 --> 00:56:19,000
如笔社区

1860
00:56:19,000 --> 00:56:20,000
如笔或者

1861
00:56:20,000 --> 00:56:21,000
Rail 这个社区

1862
00:56:21,000 --> 00:56:22,000
给整个

1863
00:56:22,000 --> 00:56:24,000
其他人间的社区

1864
00:56:24,000 --> 00:56:26,000
有一个最大的

1865
00:56:26,000 --> 00:56:27,000
调什么

1866
00:56:27,000 --> 00:56:28,000
财富

1867
00:56:28,000 --> 00:56:29,000
他们展示了这一点

1868
00:56:29,000 --> 00:56:31,000
让一个哪怕

1869
00:56:31,000 --> 00:56:32,000
他只是对这个有兴趣

1870
00:56:32,000 --> 00:56:34,000
但是可能并不知道

1871
00:56:34,000 --> 00:56:35,000
一些具体的细节的人

1872
00:56:35,000 --> 00:56:37,000
你也能够很快的上手

1873
00:56:37,000 --> 00:56:38,000
然后之后再去想办法

1874
00:56:38,000 --> 00:56:39,000
去摸起那些细节嘛

1875
00:56:39,000 --> 00:56:40,000
对

1876
00:56:40,000 --> 00:56:41,000
不是说

1877
00:56:41,000 --> 00:56:42,000
你先上来甩给它一个

1878
00:56:42,000 --> 00:56:44,000
然后我这个什么

1879
00:56:44,000 --> 00:56:45,000
很高冷的形象

1880
00:56:45,000 --> 00:56:46,000
然后

1881
00:56:46,000 --> 00:56:47,000
你看不懂

1882
00:56:47,000 --> 00:56:48,000
你就自己去吃饰吧

1883
00:56:48,000 --> 00:56:50,000
这样就不太好了

1884
00:56:50,000 --> 00:56:51,000
你这种姿态能

1885
00:56:51,000 --> 00:56:53,000
最终取得成功的人

1886
00:56:53,000 --> 00:56:55,000
在矿骨之间

1887
00:56:55,000 --> 00:56:56,000
只有

1888
00:56:56,000 --> 00:56:58,000
Linus 最后是一个人

1889
00:56:58,000 --> 00:57:03,000
所以是不是我们节目的姿态要放低

1890
00:57:05,000 --> 00:57:06,000
好啊

1891
00:57:06,000 --> 00:57:08,000
下次放低点

1892
00:57:08,000 --> 00:57:10,000
接着说

1893
00:57:10,000 --> 00:57:11,000
就一个 Homebook 的事

1894
00:57:11,000 --> 00:57:13,000
所以就现在我们看到

1895
00:57:13,000 --> 00:57:14,000
基本上那些新的

1896
00:57:14,000 --> 00:57:16,000
包啊最新的版本

1897
00:57:16,000 --> 00:57:17,000
因为用户很多嘛

1898
00:57:17,000 --> 00:57:19,000
然后大家都会为它去

1899
00:57:19,000 --> 00:57:20,000
贡献下去出错

1900
00:57:20,000 --> 00:57:21,000
就是它变成一个

1901
00:57:21,000 --> 00:57:23,000
很良性的一个循环

1902
00:57:23,000 --> 00:57:24,000
对

1903
00:57:24,000 --> 00:57:26,000
你作为一个新软件的作者

1904
00:57:26,000 --> 00:57:27,000
或者你要用的一个软件

1905
00:57:27,000 --> 00:57:28,000
你没有

1906
00:57:28,000 --> 00:57:29,000
你会想出现什么

1907
00:57:29,000 --> 00:57:30,000
我去 Homebook 里面找一下

1908
00:57:30,000 --> 00:57:31,000
如果没有

1909
00:57:31,000 --> 00:57:32,000
我就去提交这个

1910
00:57:32,000 --> 00:57:33,000
Formale

1911
00:57:33,000 --> 00:57:34,000
然后把那个提交的 Formale

1912
00:57:34,000 --> 00:57:35,000
也加回到这个

1913
00:57:35,000 --> 00:57:36,000
这个 UpStream 上面去

1914
00:57:36,000 --> 00:57:38,000
然后这样别人可以的因此而受益

1915
00:57:38,000 --> 00:57:39,000
所以其实到今天

1916
00:57:39,000 --> 00:57:40,000
的话

1917
00:57:40,000 --> 00:57:41,000
现在 Macs

1918
00:57:41,000 --> 00:57:42,000
Ls 上面这个 Homebook 的

1919
00:57:42,000 --> 00:57:43,000
包观的基本上

1920
00:57:43,000 --> 00:57:45,000
已经可以在毛泽存在上

1921
00:57:45,000 --> 00:57:46,000
达到了

1922
00:57:46,000 --> 00:57:47,000
在 Linux 上面

1923
00:57:47,000 --> 00:57:48,000
做得比较好的

1924
00:57:48,000 --> 00:57:49,000
那些包观的器的那种规模

1925
00:57:49,000 --> 00:57:50,000
或者是效果

1926
00:57:50,000 --> 00:57:51,000
对而且 Homebook

1927
00:57:51,000 --> 00:57:53,000
甚至还被 Port 到 Linux 上面

1928
00:57:53,000 --> 00:57:54,000
我觉得当时就

1929
00:57:54,000 --> 00:57:56,000
有听刚听到这个新闻的时候

1930
00:57:56,000 --> 00:57:57,000
我觉得还挺吃惊的

1931
00:57:57,000 --> 00:57:59,000
就是 Linux

1932
00:57:59,000 --> 00:58:00,000
我们在 Mac 上面

1933
00:58:00,000 --> 00:58:01,000
用 Homebook

1934
00:58:01,000 --> 00:58:03,000
是因为 Mac 上面没有 App to get

1935
00:58:03,000 --> 00:58:05,000
或者是没有样

1936
00:58:05,000 --> 00:58:06,000
而

1937
00:58:06,000 --> 00:58:09,000
为什么今天这个时代

1938
00:58:09,000 --> 00:58:11,000
还居然要把 Homebook 这种

1939
00:58:11,000 --> 00:58:12,000
因为没有

1940
00:58:12,000 --> 00:58:14,000
所以不得不造手的工具

1941
00:58:14,000 --> 00:58:16,000
Backport 到你们那边

1942
00:58:16,000 --> 00:58:18,000
已经比较成熟的

1943
00:58:18,000 --> 00:58:20,000
结果发案的地方了

1944
00:58:20,000 --> 00:58:21,000
对

1945
00:58:21,000 --> 00:58:22,000
我听挺吃惊的

1946
00:58:22,000 --> 00:58:23,000
但仔细想想

1947
00:58:23,000 --> 00:58:24,000
Homebook 理念其实

1948
00:58:24,000 --> 00:58:26,000
相当先进的

1949
00:58:26,000 --> 00:58:27,000
可以这么说

1950
00:58:27,000 --> 00:58:28,000
对对

1951
00:58:28,000 --> 00:58:29,000
而且它的整个

1952
00:58:29,000 --> 00:58:30,000
就刚才就讲了

1953
00:58:30,000 --> 00:58:31,000
我们整个用户体验是蛮

1954
00:58:31,000 --> 00:58:32,000
非常友好的嘛

1955
00:58:32,000 --> 00:58:33,000
就是让大家能够

1956
00:58:33,000 --> 00:58:34,000
很快上手

1957
00:58:34,000 --> 00:58:35,000
其实我觉得也是一个

1958
00:58:35,000 --> 00:58:36,000
很好的类比

1959
00:58:36,000 --> 00:58:37,000
比如说那个 Formale

1960
00:58:37,000 --> 00:58:38,000
刚才讲到你学一个

1961
00:58:38,000 --> 00:58:39,000
DSL 的一个 Lubi 的文件

1962
00:58:39,000 --> 00:58:40,000
对

1963
00:58:40,000 --> 00:58:41,000
你可以写下去

1964
00:58:41,000 --> 00:58:42,000
你看一下

1965
00:58:42,000 --> 00:58:43,000
大概知道它的干嘛

1966
00:58:43,000 --> 00:58:44,000
但我到现在为止

1967
00:58:44,000 --> 00:58:45,000
也没搞懂这个

1968
00:58:45,000 --> 00:58:46,000
怎么去自己边

1969
00:58:46,000 --> 00:58:47,000
搞一个什么

1970
00:58:47,000 --> 00:58:49,000
Deb and the Package 出来

1971
00:58:49,000 --> 00:58:50,000
能够很方便的发布出去

1972
00:58:50,000 --> 00:58:52,000
这个过程还是蛮繁瑟

1973
00:58:52,000 --> 00:58:53,000
对

1974
00:58:53,000 --> 00:58:56,000
而且 Homebook 更优秀

1975
00:58:56,000 --> 00:58:57,000
更优雅

1976
00:58:57,000 --> 00:58:58,000
加以后的一点

1977
00:58:58,000 --> 00:59:00,000
就是它是

1978
00:59:00,000 --> 00:59:03,000
跟 Git 结合的非常紧密

1979
00:59:03,000 --> 00:59:05,000
它本身后次在

1980
00:59:05,000 --> 00:59:06,000
GitHub 上面就不用说了

1981
00:59:06,000 --> 00:59:09,000
而这个 Homebook 本身的

1982
00:59:09,000 --> 00:59:12,000
升级也只不过是一个

1983
00:59:12,000 --> 00:59:14,000
GitHub 的某种

1984
00:59:14,000 --> 00:59:16,000
被包装过的 GitHub 而已

1985
00:59:16,000 --> 00:59:18,000
就是差这个工具

1986
00:59:18,000 --> 00:59:20,000
本身就是一套

1987
00:59:20,000 --> 00:59:23,000
版本管理系统的方式

1988
00:59:23,000 --> 00:59:27,000
一个经过版本管理的软件

1989
00:59:29,000 --> 00:59:31,000
Post 这个形式出现在也电脑上了

1990
00:59:31,000 --> 00:59:32,000
它需要升级的时候

1991
00:59:32,000 --> 00:59:33,000
就只需要

1992
00:59:33,000 --> 00:59:35,000
从它的 Apps 追不上

1993
00:59:35,000 --> 00:59:36,000
更新一下就可以了

1994
00:59:36,000 --> 00:59:40,000
这个也是请优雅的一个部分吧

1995
00:59:40,000 --> 00:59:41,000
对了

1996
00:59:43,000 --> 00:59:45,000
所以刚才讲的那么

1997
00:59:45,000 --> 00:59:47,000
都是根据某一个操作系统

1998
00:59:47,000 --> 00:59:49,000
上面而选择的不同的这个

1999
00:59:49,000 --> 00:59:50,000
包装管理器

2000
00:59:50,000 --> 00:59:51,000
比如说刚才讲的

2001
00:59:51,000 --> 00:59:53,000
Deb 上面有没有一个 APT

2002
00:59:53,000 --> 00:59:55,000
然后 RPM 系统的话是样

2003
00:59:55,000 --> 00:59:57,000
然后有 BSD 的 Port

2004
00:59:57,000 --> 01:00:00,000
然后 Mac 上面现在最新的是这个 Homebook

2005
01:00:00,000 --> 01:00:02,000
现在我们接下来就跑了

2006
01:00:02,000 --> 01:00:04,000
你刻意跳回 Wedders

2007
01:00:05,000 --> 01:00:07,000
Wedders 温度是有吗

2008
01:00:07,000 --> 01:00:08,000
有啊

2009
01:00:08,000 --> 01:00:09,000
你看看你是

2010
01:00:09,000 --> 01:00:11,000
有什么看来你真是硬件了

2011
01:00:11,000 --> 01:00:13,000
我们听说的话就是对温度是了解

2012
01:00:13,000 --> 01:00:16,000
连大学并生的部署

2013
01:00:16,000 --> 01:00:18,000
肯定已经彻底上级好多年了

2014
01:00:18,000 --> 01:00:19,000
对

2015
01:00:19,000 --> 01:00:21,000
我也其实很残归的

2016
01:00:21,000 --> 01:00:22,000
就是我也是现学宪贷

2017
01:00:22,000 --> 01:00:25,000
也是因为前任子去关注

2018
01:00:25,000 --> 01:00:29,000
DogNet 的开员才注意到了

2019
01:00:29,000 --> 01:00:31,000
就是温度上面有一招

2020
01:00:31,000 --> 01:00:33,000
不确定这应该怎么能拿给

2021
01:00:34,000 --> 01:00:35,000
New Get

2022
01:00:35,000 --> 01:00:37,000
New GT

2023
01:00:37,000 --> 01:00:38,000
Nuggets

2024
01:00:39,000 --> 01:00:40,000
G-Quar

2025
01:00:42,000 --> 01:00:43,000
和 G-Quar 型

2026
01:00:43,000 --> 01:00:45,000
总之它就是

2027
01:00:45,000 --> 01:00:47,000
Nuggets 就是一个

2028
01:00:48,000 --> 01:00:50,000
包括 DogNet 平台在内的

2029
01:00:50,000 --> 01:00:54,000
专门微软开发而研发了一套

2030
01:00:54,000 --> 01:00:56,000
Pigage Manager

2031
01:00:56,000 --> 01:00:57,000
就是

2032
01:00:57,000 --> 01:00:59,000
它是跑在秘密行下面的吗

2033
01:00:59,000 --> 01:01:00,000
它有一个秘密行界面

2034
01:01:00,000 --> 01:01:02,000
然后也有一个图形界面

2035
01:01:02,000 --> 01:01:03,000
对

2036
01:01:03,000 --> 01:01:05,000
温度是程序怎么可能没有图形界面

2037
01:01:05,000 --> 01:01:07,000
你让温度是程序人怎么会

2038
01:01:07,000 --> 01:01:08,000
对 我就在想

2039
01:01:08,000 --> 01:01:10,000
怎么会有这种需求

2040
01:01:10,000 --> 01:01:12,000
他们都在在那个什么

2041
01:01:12,000 --> 01:01:14,000
跑一个什么

2042
01:01:14,000 --> 01:01:15,000
Google 的东西

2043
01:01:15,000 --> 01:01:16,000
然后做个

2044
01:01:16,000 --> 01:01:19,000
500 个安扭的软件

2045
01:01:19,000 --> 01:01:20,000
好

2046
01:01:20,000 --> 01:01:22,000
此处省去对温度的程序人

2047
01:01:22,000 --> 01:01:24,000
能炒热粉五千字

2048
01:01:24,000 --> 01:01:26,000
总之谁在用呢

2049
01:01:26,000 --> 01:01:27,000
我从来过来

2050
01:01:27,000 --> 01:01:28,000
所有温度的程序人

2051
01:01:28,000 --> 01:01:29,000
所有限制

2052
01:01:29,000 --> 01:01:30,000
都在那里

2053
01:01:30,000 --> 01:01:31,000
都在用应该

2054
01:01:31,000 --> 01:01:32,000
好

2055
01:01:32,000 --> 01:01:34,000
所以他们是一个

2056
01:01:34,000 --> 01:01:35,000
Pigage Universe

2057
01:01:35,000 --> 01:01:36,000
我们不知道

2058
01:01:36,000 --> 01:01:37,000
对

2059
01:01:37,000 --> 01:01:38,000
在这个平行宇宙里面

2060
01:01:38,000 --> 01:01:39,000
比如说什么

2061
01:01:39,000 --> 01:01:40,000
JQuery

2062
01:01:40,000 --> 01:01:41,000
或者是

2063
01:01:41,000 --> 01:01:42,000
它真的可以

2064
01:01:42,000 --> 01:01:43,000
对 这块之类的东西

2065
01:01:43,000 --> 01:01:45,000
都可以通过

2066
01:01:45,000 --> 01:01:47,000
在那个图形界面

2067
01:01:47,000 --> 01:01:48,000
只剩下

2068
01:01:48,000 --> 01:01:49,000
Sow 这块

2069
01:01:49,000 --> 01:01:50,000
然后点起去 Snow

2070
01:01:50,000 --> 01:01:51,000
它就帮你装好了

2071
01:01:51,000 --> 01:01:52,000
虽然

2072
01:01:52,000 --> 01:01:53,000
天啊

2073
01:01:53,000 --> 01:01:54,000
对 而且它

2074
01:01:54,000 --> 01:01:56,000
它可能有三

2075
01:01:56,000 --> 01:01:57,000
两三万个那个

2076
01:01:57,000 --> 01:01:59,000
Pigage 是了已经

2077
01:01:59,000 --> 01:02:00,000
那还不停大规模的

2078
01:02:00,000 --> 01:02:01,000
这个是有什么

2079
01:02:01,000 --> 01:02:03,000
无缘官方的维护

2080
01:02:03,000 --> 01:02:05,000
对啊 这就是为了官方做的吗

2081
01:02:05,000 --> 01:02:06,000
官方加确

2082
01:02:06,000 --> 01:02:07,000
Really

2083
01:02:07,000 --> 01:02:08,000
Yes

2084
01:02:08,000 --> 01:02:10,000
而且在那个

2085
01:02:10,000 --> 01:02:13,000
你安装了

2086
01:02:13,000 --> 01:02:15,000
Doughtnet 在

2087
01:02:15,000 --> 01:02:16,000
MacOS 上的那个

2088
01:02:16,000 --> 01:02:18,000
HomeBrew 工具之后

2089
01:02:18,000 --> 01:02:20,000
你就有了 Nugget

2090
01:02:23,000 --> 01:02:24,000
等一下 Nugget 这个

2091
01:02:24,000 --> 01:02:26,000
是不是一个脏话

2092
01:02:26,000 --> 01:02:28,000
不是吧

2093
01:02:28,000 --> 01:02:29,000
Nugget 不是吧

2094
01:02:29,000 --> 01:02:31,000
微软不会

2095
01:02:31,000 --> 01:02:33,000
闯到这么正直不正确

2096
01:02:33,000 --> 01:02:35,000
这个说叫

2097
01:02:35,000 --> 01:02:37,000
Gitual Urban Dict

2098
01:02:37,000 --> 01:02:39,000
Nugget

2099
01:02:39,000 --> 01:02:40,000
Personals

2100
01:02:40,000 --> 01:02:41,000
No arms or legs

2101
01:02:41,000 --> 01:02:43,000
几块嘛

2102
01:02:43,000 --> 01:02:44,000
就一个人

2103
01:02:44,000 --> 01:02:45,000
摆一个人

2104
01:02:45,000 --> 01:02:46,000
这人棍吗

2105
01:02:46,000 --> 01:02:47,000
人质啊

2106
01:02:47,000 --> 01:02:48,000
那个什么棍质吧

2107
01:02:48,000 --> 01:02:49,000
我忘记了

2108
01:02:49,000 --> 01:02:51,000
就是那个旅后做的那件事吗

2109
01:02:51,000 --> 01:02:52,000
是吗

2110
01:02:52,000 --> 01:02:53,000
对啊 不是

2111
01:02:53,000 --> 01:02:54,000
中啊

2112
01:02:54,000 --> 01:02:55,000
又叫人质

2113
01:02:55,000 --> 01:02:56,000
不是人工质

2114
01:02:56,000 --> 01:02:57,000
好吧

2115
01:02:57,000 --> 01:02:58,000
对

2116
01:02:58,000 --> 01:02:59,000
对对对对

2117
01:02:59,000 --> 01:03:00,000
对对

2118
01:03:00,000 --> 01:03:02,000
反正从那边开上门

2119
01:03:02,000 --> 01:03:03,000
你可以

2120
01:03:03,000 --> 01:03:05,000
下载比如什么

2121
01:03:05,000 --> 01:03:07,000
JQuery 啊

2122
01:03:07,000 --> 01:03:08,000
包括 SPnet

2123
01:03:08,000 --> 01:03:09,000
MAC

2124
01:03:09,000 --> 01:03:10,000
Q 啊

2125
01:03:10,000 --> 01:03:13,000
甚至还有很多什么

2126
01:03:13,000 --> 01:03:14,000
BudsDrive 好像

2127
01:03:14,000 --> 01:03:15,000
也是从上面下来

2128
01:03:15,000 --> 01:03:16,000
我记得

2129
01:03:16,000 --> 01:03:18,000
对是面针对前端的吗

2130
01:03:18,000 --> 01:03:19,000
还是

2131
01:03:19,000 --> 01:03:20,000
针对一切开发转

2132
01:03:20,000 --> 01:03:21,000
Ok

2133
01:03:21,000 --> 01:03:22,000
因为你都让你

2134
01:03:22,000 --> 01:03:23,000
据到几个例子

2135
01:03:23,000 --> 01:03:24,000
都是跟前端开发有关系的

2136
01:03:25,000 --> 01:03:27,000
还是说你暴露了

2137
01:03:27,000 --> 01:03:29,000
你是在在那边做前端开发这件事

2138
01:03:29,000 --> 01:03:32,000
我在上面做了

2139
01:03:32,000 --> 01:03:33,000
很简单的

2140
01:03:33,000 --> 01:03:34,000
Windows 用户

2141
01:03:34,000 --> 01:03:36,000
Windows 编程

2142
01:03:36,000 --> 01:03:37,000
摸底而已

2143
01:03:37,000 --> 01:03:39,000
没有在上面做过任何开发

2144
01:03:39,000 --> 01:03:41,000
Ok

2145
01:03:41,000 --> 01:03:43,000
好吧

2146
01:03:43,000 --> 01:03:44,000
这个我反正

2147
01:03:44,000 --> 01:03:45,000
我也没用过

2148
01:03:45,000 --> 01:03:46,000
没法

2149
01:03:46,000 --> 01:03:47,000
没法

2150
01:03:47,000 --> 01:03:48,000
接着讨论下去

2151
01:03:48,000 --> 01:03:49,000
到底怎么样

2152
01:03:49,000 --> 01:03:50,000
总之有这么一个东西

2153
01:03:50,000 --> 01:03:51,000
存在就是

2154
01:03:51,000 --> 01:03:52,000
对啊

2155
01:03:52,000 --> 01:03:53,000
刚刚我们讲的

2156
01:03:53,000 --> 01:03:54,000
基于每一个

2157
01:03:54,000 --> 01:03:55,000
操造系统

2158
01:03:55,000 --> 01:03:56,000
或者是这个

2159
01:03:56,000 --> 01:03:57,000
另外发型版本的

2160
01:03:57,000 --> 01:03:59,000
这个包管领工具的一些相关的情况

2161
01:03:59,000 --> 01:04:01,000
现在我们要切换到

2162
01:04:01,000 --> 01:04:03,000
另外一个比较重要

2163
01:04:03,000 --> 01:04:04,000
也是我们

2164
01:04:04,000 --> 01:04:05,000
吐槽比较多的

2165
01:04:05,000 --> 01:04:08,000
就是基于各个语言的这个

2166
01:04:08,000 --> 01:04:10,000
这包管领的东西了

2167
01:04:10,000 --> 01:04:11,000
对

2168
01:04:11,000 --> 01:04:13,000
这里有一个比较显著的区别

2169
01:04:13,000 --> 01:04:14,000
就是刚才讲的那些

2170
01:04:14,000 --> 01:04:15,000
像 HomeBlood

2171
01:04:15,000 --> 01:04:17,000
还是这个 Debion

2172
01:04:17,000 --> 01:04:18,000
对不对

2173
01:04:18,000 --> 01:04:19,000
很大程度上是

2174
01:04:19,000 --> 01:04:21,000
为了我们讲

2175
01:04:21,000 --> 01:04:22,000
部署的时候用的嘛

2176
01:04:22,000 --> 01:04:23,000
部署就是可能最重要

2177
01:04:23,000 --> 01:04:24,000
或自己安装

2178
01:04:24,000 --> 01:04:25,000
或者是我们把它弄到

2179
01:04:25,000 --> 01:04:26,000
服务器上运行的时候

2180
01:04:26,000 --> 01:04:28,000
这样去的一个用法

2181
01:04:28,000 --> 01:04:29,000
然后

2182
01:04:29,000 --> 01:04:31,000
包括你用 HomeBlood 安装的

2183
01:04:31,000 --> 01:04:32,000
很多这种

2184
01:04:32,000 --> 01:04:33,000
所以的命令好软件

2185
01:04:33,000 --> 01:04:34,000
你也是做到它的一个用户

2186
01:04:34,000 --> 01:04:36,000
你不是做到它的开发脚去安装的

2187
01:04:36,000 --> 01:04:37,000
当然也有例外

2188
01:04:37,000 --> 01:04:39,000
其实这是一个比较大的

2189
01:04:39,000 --> 01:04:41,000
比较明显

2190
01:04:41,000 --> 01:04:42,000
但是幕下还没有

2191
01:04:42,000 --> 01:04:44,000
有人做出来的区别

2192
01:04:44,000 --> 01:04:47,000
就是你通过一个包管

2193
01:04:47,000 --> 01:04:49,000
你工具安装的一个东西

2194
01:04:49,000 --> 01:04:50,000
有可能是

2195
01:04:50,000 --> 01:04:53,000
有一个直接可执行文件的

2196
01:04:53,000 --> 01:04:54,000
这么一套东西

2197
01:04:54,000 --> 01:04:56,000
也有可能它仅仅是一个

2198
01:04:56,000 --> 01:04:57,000
类伯对吧

2199
01:04:57,000 --> 01:04:59,000
仅仅是 Liver 而已

2200
01:04:59,000 --> 01:05:00,000
对 有很多这种情况

2201
01:05:00,000 --> 01:05:01,000
对啊

2202
01:05:01,000 --> 01:05:03,000
在我的有限人之里面

2203
01:05:03,000 --> 01:05:04,000
好像 HomeBlood

2204
01:05:04,000 --> 01:05:07,000
其实是对此有一个比较模糊的

2205
01:05:07,000 --> 01:05:09,000
而且是一个很

2206
01:05:09,000 --> 01:05:10,000
稍微点绕人的概念

2207
01:05:10,000 --> 01:05:13,000
就是有些东西所谓 Cascon 了

2208
01:05:13,000 --> 01:05:15,000
HomeBlood

2209
01:05:15,000 --> 01:05:16,000
有自己套 Jargon 对吧

2210
01:05:16,000 --> 01:05:17,000
虽然我对此

2211
01:05:17,000 --> 01:05:18,000
它有一套

2212
01:05:18,000 --> 01:05:20,000
因为它整个

2213
01:05:20,000 --> 01:05:22,000
你借用这个

2214
01:05:22,000 --> 01:05:24,000
酿斯酒的这么一套

2215
01:05:24,000 --> 01:05:25,000
树鱼

2216
01:05:25,000 --> 01:05:26,000
语汇对

2217
01:05:26,000 --> 01:05:28,000
就是 Casc 就是一个酒桶

2218
01:05:28,000 --> 01:05:30,000
然后你从 Casc 里面

2219
01:05:30,000 --> 01:05:31,000
铺出来什么东西

2220
01:05:31,000 --> 01:05:32,000
就然后

2221
01:05:32,000 --> 01:05:34,000
在自己 Blood 这个套

2222
01:05:34,000 --> 01:05:35,000
其实就是类比

2223
01:05:35,000 --> 01:05:37,000
或者说它把整个

2224
01:05:37,000 --> 01:05:38,000
编异的过程

2225
01:05:38,000 --> 01:05:40,000
类比为发酵的过程

2226
01:05:40,000 --> 01:05:42,000
而 Cascon 意思就是

2227
01:05:42,000 --> 01:05:43,000
这套东西是不发酵的

2228
01:05:43,000 --> 01:05:45,000
这套东西只是存在酒桶里面

2229
01:05:45,000 --> 01:05:47,000
发酵

2230
01:05:47,000 --> 01:05:48,000
OK

2231
01:05:48,000 --> 01:05:49,000
我有点说是

2232
01:05:49,000 --> 01:05:50,000
Sorry

2233
01:05:50,000 --> 01:05:51,000
我先纠正了

2234
01:05:51,000 --> 01:05:52,000
你的女又被

2235
01:05:52,000 --> 01:05:54,000
被被

2236
01:05:54,000 --> 01:05:55,000
对

2237
01:05:55,000 --> 01:05:56,000
她有那个

2238
01:05:56,000 --> 01:05:57,000
当然有没有事情

2239
01:05:57,000 --> 01:05:58,000
刚刚没有解释

2240
01:05:58,000 --> 01:05:59,000
她还有这个

2241
01:05:59,000 --> 01:06:00,000
就之前我们讲

2242
01:06:00,000 --> 01:06:02,000
那个 Dablin 的包一般是发型的

2243
01:06:02,000 --> 01:06:03,000
二斤之版

2244
01:06:03,000 --> 01:06:05,000
Port 是一般是发型元码

2245
01:06:05,000 --> 01:06:06,000
HomeBlood 的话

2246
01:06:06,000 --> 01:06:08,000
其实是比较贵意的

2247
01:06:08,000 --> 01:06:09,000
就是她

2248
01:06:09,000 --> 01:06:11,000
两种都有

2249
01:06:11,000 --> 01:06:12,000
她有没有支持

2250
01:06:12,000 --> 01:06:13,000
对

2251
01:06:13,000 --> 01:06:14,000
然后她会有一三个样

2252
01:06:14,000 --> 01:06:15,000
也不同的

2253
01:06:15,000 --> 01:06:16,000
有这个词去描述她

2254
01:06:16,000 --> 01:06:18,000
我记得她的

2255
01:06:18,000 --> 01:06:19,000
二斤之版

2256
01:06:19,000 --> 01:06:21,000
本是叫做 Bottle

2257
01:06:21,000 --> 01:06:22,000
就是瓶子

2258
01:06:22,000 --> 01:06:23,000
对

2259
01:06:23,000 --> 01:06:25,000
这个逻辑你一想很简单

2260
01:06:25,000 --> 01:06:26,000
就是你编异的过程

2261
01:06:26,000 --> 01:06:27,000
是在 Blood 发酵吗

2262
01:06:27,000 --> 01:06:28,000
对

2263
01:06:28,000 --> 01:06:29,000
发酵完了

2264
01:06:29,000 --> 01:06:30,000
就是说这个成品的装瓶了

2265
01:06:30,000 --> 01:06:31,000
就叫装瓶

2266
01:06:31,000 --> 01:06:32,000
她就直接可以给别人用了

2267
01:06:32,000 --> 01:06:33,000
就她是有这么一个感觉

2268
01:06:33,000 --> 01:06:34,000
然后她是她对于

2269
01:06:34,000 --> 01:06:37,000
很多那种软件

2270
01:06:37,000 --> 01:06:38,000
就不方便装瓶的

2271
01:06:38,000 --> 01:06:39,000
一个是可能

2272
01:06:39,000 --> 01:06:40,000
因为法律的问题

2273
01:06:40,000 --> 01:06:41,000
或者是因为版权的问题

2274
01:06:41,000 --> 01:06:42,000
她没办法装瓶的

2275
01:06:42,000 --> 01:06:43,000
没办法编

2276
01:06:43,000 --> 01:06:44,000
或者是你最简单的情况

2277
01:06:44,000 --> 01:06:45,000
就是这个东西

2278
01:06:45,000 --> 01:06:46,000
她根本就不是拿来用的

2279
01:06:46,000 --> 01:06:48,000
她只是拿来作为

2280
01:06:48,000 --> 01:06:50,000
一种一个建筑材料了

2281
01:06:50,000 --> 01:06:51,000
对

2282
01:06:51,000 --> 01:06:52,000
她就会直接发布这个

2283
01:06:52,000 --> 01:06:53,000
Cosic Source

2284
01:06:53,000 --> 01:06:54,000
对对对

2285
01:06:54,000 --> 01:06:56,000
这个我想想能比较明显

2286
01:06:56,000 --> 01:06:59,000
那个 FnPeg

2287
01:06:59,000 --> 01:07:01,000
FnmpGJ 工具

2288
01:07:01,000 --> 01:07:02,000
她就是发布的圆码

2289
01:07:02,000 --> 01:07:04,000
然后你要自己编一个

2290
01:07:04,000 --> 01:07:05,000
但是像

2291
01:07:05,000 --> 01:07:06,000
Vim

2292
01:07:06,000 --> 01:07:08,000
MacVim 好像是她是弄成一个 Bottle 了

2293
01:07:08,000 --> 01:07:09,000
我记得

2294
01:07:09,000 --> 01:07:10,000
MacVim 不是 Bottle 吗

2295
01:07:10,000 --> 01:07:12,000
如果我们记错的话

2296
01:07:12,000 --> 01:07:13,000
应该是这样的

2297
01:07:13,000 --> 01:07:14,000
我送记得 MacVim 也是要编硬的

2298
01:07:15,000 --> 01:07:16,000
是吗?那可能我记错

2299
01:07:16,000 --> 01:07:18,000
她有很多这种是 Bottle 过的

2300
01:07:18,000 --> 01:07:20,000
你可以装发现安装很快

2301
01:07:20,000 --> 01:07:22,000
也不需要没有编硬的过程

2302
01:07:22,000 --> 01:07:24,000
那按一会

2303
01:07:24,000 --> 01:07:26,000
这继续说我们这个

2304
01:07:26,000 --> 01:07:29,000
和编程员相关的包馆里系统对

2305
01:07:29,000 --> 01:07:30,000
对

2306
01:07:30,000 --> 01:07:32,000
这里就可能比较奇特的一个事情

2307
01:07:32,000 --> 01:07:35,000
就是在某具体章某个语言来讲

2308
01:07:35,000 --> 01:07:37,000
她还有通常是一个

2309
01:07:37,000 --> 01:07:38,000
有自己的一套

2310
01:07:38,000 --> 01:07:39,000
包馆里期的

2311
01:07:39,000 --> 01:07:40,000
然后这个包馆

2312
01:07:40,000 --> 01:07:43,000
要解决的绝大部分场合是

2313
01:07:43,000 --> 01:07:44,000
作为

2314
01:07:44,000 --> 01:07:47,000
就为了帮助开发者寫程序的时候用的

2315
01:07:47,000 --> 01:07:48,000
对

2316
01:07:48,000 --> 01:07:49,000
对

2317
01:07:49,000 --> 01:07:50,000
对 这么说安全吧

2318
01:07:50,000 --> 01:07:51,000
我现在是安全的吧

2319
01:07:51,000 --> 01:07:52,000
但

2320
01:07:52,000 --> 01:07:55,000
其实这里也有一个很有趣的事实

2321
01:07:55,000 --> 01:07:58,000
不管是拍子也好

2322
01:07:58,000 --> 01:07:59,000
还是属别好

2323
01:07:59,000 --> 01:08:01,000
有很多包

2324
01:08:01,000 --> 01:08:02,000
其实

2325
01:08:02,000 --> 01:08:04,000
她不是拿来

2326
01:08:04,000 --> 01:08:06,000
不是帮你提供一开发工具的

2327
01:08:06,000 --> 01:08:07,000
她是拿来的

2328
01:08:07,000 --> 01:08:08,000
就是提供一命令行动

2329
01:08:08,000 --> 01:08:09,000
对她是给你提供一命令行动具

2330
01:08:09,000 --> 01:08:11,000
比如说我很喜欢这个叫做

2331
01:08:11,000 --> 01:08:14,000
Lockets

2332
01:08:14,000 --> 01:08:15,000
LL Cats

2333
01:08:15,000 --> 01:08:18,000
她的效果是把

2334
01:08:18,000 --> 01:08:21,000
你可以把任何自服创案

2335
01:08:21,000 --> 01:08:22,000
PAP 给她

2336
01:08:22,000 --> 01:08:25,000
然后她把你 PAP 进去的那个自服创案

2337
01:08:25,000 --> 01:08:28,000
一期采的形式显示在屏幕上

2338
01:08:28,000 --> 01:08:29,000
所以你可以用

2339
01:08:29,000 --> 01:08:30,000
比如说你可以 Cowse

2340
01:08:30,000 --> 01:08:33,000
就是另一个有趣的小工具

2341
01:08:33,000 --> 01:08:34,000
就是

2342
01:08:34,000 --> 01:08:35,000
牛说

2343
01:08:35,000 --> 01:08:36,000
牛说工具

2344
01:08:36,000 --> 01:08:38,000
她在屏幕上显示一通牛

2345
01:08:38,000 --> 01:08:39,000
然后这个牛

2346
01:08:39,000 --> 01:08:41,000
会头上会冒出一个

2347
01:08:41,000 --> 01:08:42,000
气泡框

2348
01:08:42,000 --> 01:08:43,000
然后女人写声

2349
01:08:43,000 --> 01:08:44,000
想说的话

2350
01:08:44,000 --> 01:08:45,000
然后你把

2351
01:08:45,000 --> 01:08:46,000
你先把你要说的话

2352
01:08:46,000 --> 01:08:47,000
Cowse

2353
01:08:47,000 --> 01:08:48,000
然后在 Cowse

2354
01:08:48,000 --> 01:08:49,000
Lockets

2355
01:08:49,000 --> 01:08:50,000
最终结果

2356
01:08:50,000 --> 01:08:51,000
就是一个

2357
01:08:51,000 --> 01:08:53,000
一个七彩的牛

2358
01:08:53,000 --> 01:08:55,000
说的一句七彩的话

2359
01:08:55,000 --> 01:08:57,000
这个东西就是用 N 品

2360
01:08:57,000 --> 01:08:58,000
就是用

2361
01:08:58,000 --> 01:08:59,000
好凡事啊

2362
01:08:59,000 --> 01:09:00,000
就是用 GEM 来发布的

2363
01:09:00,000 --> 01:09:01,000
她

2364
01:09:01,000 --> 01:09:02,000
本质就只是

2365
01:09:02,000 --> 01:09:04,000
给你提供一个额外的工具而已

2366
01:09:04,000 --> 01:09:05,000
对对对

2367
01:09:05,000 --> 01:09:06,000
所以就是刚才我

2368
01:09:06,000 --> 01:09:07,000
就说到特别

2369
01:09:07,000 --> 01:09:08,000
限定一下

2370
01:09:08,000 --> 01:09:09,000
就是说只能说是

2371
01:09:09,000 --> 01:09:10,000
大部分场合

2372
01:09:10,000 --> 01:09:11,000
包馆的其实

2373
01:09:11,000 --> 01:09:12,000
为了做

2374
01:09:12,000 --> 01:09:13,000
开发用的工具

2375
01:09:13,000 --> 01:09:14,000
但是其实

2376
01:09:14,000 --> 01:09:16,000
你看也听到有这种场合是

2377
01:09:16,000 --> 01:09:17,000
她那个本来就是

2378
01:09:17,000 --> 01:09:19,000
拿来发布成一个可支

2379
01:09:19,000 --> 01:09:21,000
最终最终用户使用的一个工具

2380
01:09:21,000 --> 01:09:23,000
所以这里面就借些

2381
01:09:23,000 --> 01:09:24,000
不是那么清晰下准

2382
01:09:24,000 --> 01:09:25,000
就是一个大概的

2383
01:09:25,000 --> 01:09:27,000
这么一个分类的

2384
01:09:27,000 --> 01:09:28,000
而且你比较难的

2385
01:09:28,000 --> 01:09:29,000
很难去一刀切

2386
01:09:29,000 --> 01:09:31,000
说我就要硬形

2387
01:09:31,000 --> 01:09:32,000
在我的

2388
01:09:32,000 --> 01:09:33,000
包馆里

2389
01:09:33,000 --> 01:09:35,000
包馆里系统里面提供

2390
01:09:35,000 --> 01:09:36,000
比如说

2391
01:09:36,000 --> 01:09:39,000
GEM GEM S 2 和 GEM S 1

2392
01:09:39,000 --> 01:09:40,000
Library 的区别

2393
01:09:40,000 --> 01:09:42,000
因为有些是两者都提供

2394
01:09:42,000 --> 01:09:43,000
对对对

2395
01:09:43,000 --> 01:09:45,000
她提供了一个

2396
01:09:45,000 --> 01:09:46,000
让她一条式的工具

2397
01:09:46,000 --> 01:09:47,000
比如说对吧

2398
01:09:47,000 --> 01:09:48,000
对

2399
01:09:48,000 --> 01:09:49,000
你可以很方便地

2400
01:09:49,000 --> 01:09:50,000
启动她

2401
01:09:50,000 --> 01:09:52,000
但是她主要做的还是提供一个库

2402
01:09:52,000 --> 01:09:53,000
比如

2403
01:09:53,000 --> 01:09:55,000
Pray 或者是

2404
01:09:55,000 --> 01:09:56,000
ipyzen 这种

2405
01:09:56,000 --> 01:09:57,000
她既是一个工具

2406
01:09:57,000 --> 01:09:59,000
她又是一套库

2407
01:09:59,000 --> 01:10:00,000
对

2408
01:10:00,000 --> 01:10:01,000
对

2409
01:10:01,000 --> 01:10:04,000
So can be easy

2410
01:10:04,000 --> 01:10:05,000
对

2411
01:10:05,000 --> 01:10:06,000
对

2412
01:10:06,000 --> 01:10:07,000
好

2413
01:10:07,000 --> 01:10:08,000
那现在我们就来

2414
01:10:08,000 --> 01:10:10,000
我们先着眼来讲

2415
01:10:10,000 --> 01:10:12,000
我们先不讲那个

2416
01:10:12,000 --> 01:10:14,000
用这种

2417
01:10:14,000 --> 01:10:16,000
某个语言独特的

2418
01:10:16,000 --> 01:10:17,000
包馆里起来发布

2419
01:10:17,000 --> 01:10:18,000
秘密行工具

2420
01:10:18,000 --> 01:10:19,000
这么一个情况

2421
01:10:19,000 --> 01:10:20,000
我们就先只看

2422
01:10:20,000 --> 01:10:24,000
用她来做开发者的事情的时候

2423
01:10:24,000 --> 01:10:25,000
会有一些什么样的东西

2424
01:10:25,000 --> 01:10:27,000
我们还是按语言来分吧对吧

2425
01:10:27,000 --> 01:10:28,000
对

2426
01:10:28,000 --> 01:10:30,000
加拿大程式语言

2427
01:10:30,000 --> 01:10:31,000
我她同学请你开始吐槽

2428
01:10:31,000 --> 01:10:33,000
开启你的吐槽我是

2429
01:10:33,000 --> 01:10:35,000
没稳

2430
01:10:35,000 --> 01:10:37,000
对

2431
01:10:37,000 --> 01:10:38,000
所以没稳

2432
01:10:38,000 --> 01:10:42,000
为什么会给你带着这么惨痛的感觉

2433
01:10:42,000 --> 01:10:43,000
其实我没稳

2434
01:10:43,000 --> 01:10:45,000
没有真正的伤害过我

2435
01:10:45,000 --> 01:10:47,000
但是

2436
01:10:47,000 --> 01:10:49,000
那你为什么这么做仇视的

2437
01:10:49,000 --> 01:10:51,000
公司里面

2438
01:10:51,000 --> 01:10:55,000
公司至少因为没稳的一些

2439
01:10:55,000 --> 01:10:57,000
临零总统的事情

2440
01:10:57,000 --> 01:11:00,000
在我印象里面可能有两次

2441
01:11:00,000 --> 01:11:02,000
推迟过 Release

2442
01:11:02,000 --> 01:11:04,000
就是 Release 推迟一天

2443
01:11:04,000 --> 01:11:06,000
其实是非常

2444
01:11:06,000 --> 01:11:08,000
并不是什么

2445
01:11:08,000 --> 01:11:10,000
天他下来的灾难性时间

2446
01:11:10,000 --> 01:11:12,000
但至少也是让所有人

2447
01:11:12,000 --> 01:11:14,000
不是做游戏的对吧

2448
01:11:14,000 --> 01:11:15,000
我们不是做游戏的

2449
01:11:15,000 --> 01:11:17,000
我们是做比游戏更

2450
01:11:17,000 --> 01:11:19,000
还多因那东西的

2451
01:11:19,000 --> 01:11:20,000
但对

2452
01:11:20,000 --> 01:11:21,000
因为不重要

2453
01:11:21,000 --> 01:11:23,000
但

2454
01:11:23,000 --> 01:11:24,000
就是推迟一天的话

2455
01:11:24,000 --> 01:11:26,000
有意味着首先运为人员

2456
01:11:26,000 --> 01:11:28,000
要从机飞狗跳

2457
01:11:28,000 --> 01:11:29,000
机飞狗跳 24 小时

2458
01:11:29,000 --> 01:11:32,000
变成机飞狗跳 28 小时

2459
01:11:32,000 --> 01:11:34,000
然后开发人员

2460
01:11:34,000 --> 01:11:36,000
也会因为

2461
01:11:36,000 --> 01:11:38,000
发布的被推迟

2462
01:11:38,000 --> 01:11:39,000
而不得不

2463
01:11:39,000 --> 01:11:41,000
要么临时被抓上临

2464
01:11:41,000 --> 01:11:43,000
去解决这个

2465
01:11:43,000 --> 01:11:45,000
导致这个推迟的问题

2466
01:11:45,000 --> 01:11:47,000
要么就因为

2467
01:11:47,000 --> 01:11:48,000
这一次发布

2468
01:11:48,000 --> 01:11:49,000
不能及时运行

2469
01:11:49,000 --> 01:11:51,000
而不及时进行

2470
01:11:51,000 --> 01:11:53,000
而得不到一些

2471
01:11:53,000 --> 01:11:54,000
比较保规的资源

2472
01:11:54,000 --> 01:11:55,000
比如说 QA

2473
01:11:55,000 --> 01:11:57,000
比如说 Staging Server 之类

2474
01:11:57,000 --> 01:11:58,000
因为所有这些

2475
01:11:58,000 --> 01:11:59,000
所有这些

2476
01:11:59,000 --> 01:12:01,000
所有的都还在被战状态

2477
01:12:01,000 --> 01:12:02,000
就是要

2478
01:12:02,000 --> 01:12:06,000
去迎合这个发布的代表

2479
01:12:06,000 --> 01:12:07,000
而

2480
01:12:07,000 --> 01:12:10,000
梅文至少已经导致过两次这样的

2481
01:12:10,000 --> 01:12:12,000
在我看来已经是

2482
01:12:12,000 --> 01:12:14,000
事故级别的问题

2483
01:12:14,000 --> 01:12:15,000
对

2484
01:12:15,000 --> 01:12:16,000
而另外一方面

2485
01:12:16,000 --> 01:12:18,000
梅文在

2486
01:12:18,000 --> 01:12:19,000
使用的时候

2487
01:12:19,000 --> 01:12:21,000
本身你也会觉得

2488
01:12:21,000 --> 01:12:23,000
一阵阵的淡淡了

2489
01:12:23,000 --> 01:12:24,000
真是

2490
01:12:24,000 --> 01:12:25,000
对我

2491
01:12:25,000 --> 01:12:26,000
我又问一个问题

2492
01:12:26,000 --> 01:12:27,000
是不是还是要守攻写 XM

2493
01:12:27,000 --> 01:12:28,000
是的

2494
01:12:28,000 --> 01:12:30,000
欢迎来到 1995 年

2495
01:12:30,000 --> 01:12:31,000
欢迎来到 1995 年

2496
01:12:31,000 --> 01:12:35,000
那我那离境你的头发

2497
01:12:35,000 --> 01:12:36,000
对

2498
01:12:36,000 --> 01:12:37,000
而且

2499
01:12:37,000 --> 01:12:39,000
但是你可以说

2500
01:12:39,000 --> 01:12:40,000
你可以站出来说

2501
01:12:40,000 --> 01:12:41,000
你可以用各种各样的

2502
01:12:41,000 --> 01:12:43,000
图形界面去管理 XM

2503
01:12:43,000 --> 01:12:44,000
深传达的

2504
01:12:44,000 --> 01:12:45,000
对

2505
01:12:45,000 --> 01:12:46,000
对啊

2506
01:12:46,000 --> 01:12:47,000
就是明年是 XM

2507
01:12:47,000 --> 01:12:48,000
就像 Wirelands

2508
01:12:48,000 --> 01:12:50,000
XM 就像暴力

2509
01:12:50,000 --> 01:12:51,000
如果它不能解决

2510
01:12:51,000 --> 01:12:53,000
如果它不能解决你的问题

2511
01:12:53,000 --> 01:12:54,000
那一定是你用的

2512
01:12:54,000 --> 01:12:55,000
还不够多

2513
01:12:55,000 --> 01:12:57,000
哈哈哈

2514
01:12:57,000 --> 01:12:58,000
哈哈

2515
01:12:58,000 --> 01:12:59,000
是

2516
01:12:59,000 --> 01:13:00,000
嗯

2517
01:13:00,000 --> 01:13:01,000
好吧

2518
01:13:01,000 --> 01:13:02,000
对

2519
01:13:02,000 --> 01:13:03,000
所以但是

2520
01:13:03,000 --> 01:13:04,000
梅文其实是

2521
01:13:04,000 --> 01:13:05,000
是一个比较

2522
01:13:05,000 --> 01:13:06,000
就是在加把这个

2523
01:13:06,000 --> 01:13:07,000
开发圈里面是一个

2524
01:13:07,000 --> 01:13:08,000
一个什么

2525
01:13:08,000 --> 01:13:10,000
通用常见的一个方案了吗

2526
01:13:10,000 --> 01:13:11,000
可能我一半

2527
01:13:11,000 --> 01:13:12,000
程学院会反复

2528
01:13:12,000 --> 01:13:13,000
你个看法

2529
01:13:13,000 --> 01:13:14,000
但

2530
01:13:14,000 --> 01:13:16,000
要我说梅文

2531
01:13:16,000 --> 01:13:17,000
其实是一种

2532
01:13:17,000 --> 01:13:20,000
一个一个一个

2533
01:13:20,000 --> 01:13:21,000
一个过度

2534
01:13:21,000 --> 01:13:23,000
早过早用化的点心

2535
01:13:23,000 --> 01:13:24,000
可以这么说吗

2536
01:13:24,000 --> 01:13:25,000
嗯

2537
01:13:25,000 --> 01:13:26,000
为什么这么说呢

2538
01:13:26,000 --> 01:13:27,000
因为

2539
01:13:27,000 --> 01:13:28,000
比如说梅文

2540
01:13:28,000 --> 01:13:29,000
一个梅文

2541
01:13:29,000 --> 01:13:30,000
projects

2542
01:13:30,000 --> 01:13:31,000
一上来就

2543
01:13:31,000 --> 01:13:33,000
强制你使用一种

2544
01:13:33,000 --> 01:13:34,000
特定的

2545
01:13:34,000 --> 01:13:35,000
项目的格式

2546
01:13:35,000 --> 01:13:37,000
就是你所有的

2547
01:13:37,000 --> 01:13:38,000
包

2548
01:13:38,000 --> 01:13:39,000
文件的格式

2549
01:13:39,000 --> 01:13:40,000
就是你组织原的嘛

2550
01:13:40,000 --> 01:13:41,000
格式

2551
01:13:41,000 --> 01:13:42,000
在所有的梅文

2552
01:13:42,000 --> 01:13:43,000
project 里面是一模样的

2553
01:13:43,000 --> 01:13:45,000
就 directory layout

2554
01:13:45,000 --> 01:13:46,000
对

2555
01:13:46,000 --> 01:13:47,000
directory layout

2556
01:13:47,000 --> 01:13:48,000
以上来有一个

2557
01:13:48,000 --> 01:13:49,000
sort

2558
01:13:49,000 --> 01:13:50,000
sorry

2559
01:13:50,000 --> 01:13:51,000
对

2560
01:13:51,000 --> 01:13:52,000
梅文

2561
01:13:52,000 --> 01:13:53,000
一个有一个

2562
01:13:53,000 --> 01:13:54,000
梅文

2563
01:13:54,000 --> 01:13:55,000
然后有一个 test

2564
01:13:55,000 --> 01:13:56,000
然后梅文

2565
01:13:56,000 --> 01:13:57,000
test 下面的

2566
01:13:57,000 --> 01:13:58,000
所有的文件结构

2567
01:13:58,000 --> 01:13:59,000
要一模样

2568
01:13:59,000 --> 01:14:00,000
嗯

2569
01:14:00,000 --> 01:14:01,000
对

2570
01:14:01,000 --> 01:14:02,000
总之是

2571
01:14:02,000 --> 01:14:03,000
其实这个没什么

2572
01:14:03,000 --> 01:14:04,000
这个有这个

2573
01:14:04,000 --> 01:14:05,000
规范是好

2574
01:14:05,000 --> 01:14:06,000
是吗

2575
01:14:06,000 --> 01:14:07,000
我不觉得这个

2576
01:14:07,000 --> 01:14:08,000
是一个特别不好的

2577
01:14:08,000 --> 01:14:09,000
一个事情

2578
01:14:09,000 --> 01:14:11,000
但是在你仅仅想要

2579
01:14:11,000 --> 01:14:12,000
写一些

2580
01:14:12,000 --> 01:14:13,000
比较小的东西的时候

2581
01:14:13,000 --> 01:14:14,000
你会觉得这种

2582
01:14:14,000 --> 01:14:16,000
强佳于你的结构

2583
01:14:16,000 --> 01:14:17,000
是非常让人不爽的

2584
01:14:17,000 --> 01:14:18,000
对

2585
01:14:18,000 --> 01:14:19,000
我觉得这就是问题所在的

2586
01:14:19,000 --> 01:14:20,000
你为什么要

2587
01:14:20,000 --> 01:14:22,000
加把写一个很小的东西呢

2588
01:14:22,000 --> 01:14:23,000
为什么我会一个

2589
01:14:23,000 --> 01:14:24,000
交叶元去写

2590
01:14:24,000 --> 01:14:25,000
好吧

2591
01:14:25,000 --> 01:14:26,000
这里有个什么关键的

2592
01:14:26,000 --> 01:14:27,000
对

2593
01:14:27,000 --> 01:14:28,000
对

2594
01:14:28,000 --> 01:14:29,000
对问题在里面

2595
01:14:29,000 --> 01:14:30,000
就是

2596
01:14:30,000 --> 01:14:31,000
你可以说

2597
01:14:31,000 --> 01:14:32,000
没问题是一种

2598
01:14:32,000 --> 01:14:34,000
专门为了企业级应用

2599
01:14:34,000 --> 01:14:35,000
而推出的

2600
01:14:35,000 --> 01:14:36,000
一种

2601
01:14:36,000 --> 01:14:37,000
硬性的解决方案

2602
01:14:37,000 --> 01:14:38,000
就是它

2603
01:14:38,000 --> 01:14:39,000
通过

2604
01:14:39,000 --> 01:14:40,000
呃

2605
01:14:40,000 --> 01:14:42,000
用长繁锁的

2606
01:14:42,000 --> 01:14:43,000
配置

2607
01:14:43,000 --> 01:14:45,000
和

2608
01:14:45,000 --> 01:14:46,000
强制

2609
01:14:46,000 --> 01:14:48,000
加在你

2610
01:14:48,000 --> 01:14:49,000
身上的工序

2611
01:14:49,000 --> 01:14:50,000
正为了你是一个

2612
01:14:50,000 --> 01:14:51,000
亏被替换螺丝

2613
01:14:51,000 --> 01:14:52,000
因为

2614
01:14:52,000 --> 01:14:53,000
不管你是谁

2615
01:14:53,000 --> 01:14:54,000
你只要用没有

2616
01:14:54,000 --> 01:14:55,000
那么你能做的东西

2617
01:14:55,000 --> 01:14:56,000
都是可以预定的

2618
01:14:56,000 --> 01:14:57,000
而

2619
01:14:57,000 --> 01:14:58,000
都是可以准硬的

2620
01:14:58,000 --> 01:14:59,000
而不像你说

2621
01:14:59,000 --> 01:15:00,000
比如说早期的

2622
01:15:00,000 --> 01:15:02,000
红黄时代在内容案子的时候

2623
01:15:02,000 --> 01:15:03,000
你可能你的案子发现

2624
01:15:03,000 --> 01:15:04,000
可能是一个天数样的东西

2625
01:15:04,000 --> 01:15:06,000
你的接收者是没有办法

2626
01:15:06,000 --> 01:15:07,000
去理解你

2627
01:15:07,000 --> 01:15:09,000
去替代你

2628
01:15:09,000 --> 01:15:11,000
但是反过来

2629
01:15:11,000 --> 01:15:12,000
我会觉得

2630
01:15:12,000 --> 01:15:13,000
就像

2631
01:15:13,000 --> 01:15:14,000
我对所有的

2632
01:15:14,000 --> 01:15:15,000
带有

2633
01:15:15,000 --> 01:15:16,000
interpress 的

2634
01:15:16,000 --> 01:15:17,000
字样的东西

2635
01:15:17,000 --> 01:15:18,000
天生的反感一样

2636
01:15:18,000 --> 01:15:19,000
这是一种

2637
01:15:19,000 --> 01:15:21,000
你

2638
01:15:21,000 --> 01:15:22,000
我很难说

2639
01:15:22,000 --> 01:15:23,000
他到底错在哪

2640
01:15:23,000 --> 01:15:24,000
但是

2641
01:15:24,000 --> 01:15:25,000
我就觉得他

2642
01:15:25,000 --> 01:15:27,000
不是我希望的那样

2643
01:15:27,000 --> 01:15:28,000
但是如果你是

2644
01:15:28,000 --> 01:15:29,000
把我这种心态的话

2645
01:15:29,000 --> 01:15:30,000
你是不是不应该

2646
01:15:30,000 --> 01:15:31,000
写加班程序

2647
01:15:31,000 --> 01:15:32,000
呃

2648
01:15:32,000 --> 01:15:35,000
因为加班

2649
01:15:35,000 --> 01:15:36,000
就是会

2650
01:15:36,000 --> 01:15:37,000
interpress

2651
01:15:37,000 --> 01:15:38,000
我只是能说

2652
01:15:38,000 --> 01:15:39,000
我是

2653
01:15:39,000 --> 01:15:40,000
为了

2654
01:15:40,000 --> 01:15:41,000
谋生

2655
01:15:41,000 --> 01:15:42,000
不做些事情

2656
01:15:42,000 --> 01:15:43,000
但就像所有的

2657
01:15:43,000 --> 01:15:44,000
就像

2658
01:15:44,000 --> 01:15:45,000
Polaroa

2659
01:15:45,000 --> 01:15:46,000
他们说过的那句话

2660
01:15:46,000 --> 01:15:48,000
他在他知道的

2661
01:15:48,000 --> 01:15:49,000
所有声学里面

2662
01:15:49,000 --> 01:15:50,000
在他认识的

2663
01:15:50,000 --> 01:15:51,000
十个

2664
01:15:51,000 --> 01:15:52,000
在他能想出

2665
01:15:52,000 --> 01:15:53,000
然后我不太记得

2666
01:15:53,000 --> 01:15:54,000
反正单一就说

2667
01:15:54,000 --> 01:15:55,000
在他能想到的

2668
01:15:55,000 --> 01:15:56,000
十个账号

2669
01:15:56,000 --> 01:15:57,000
声学里面

2670
01:15:57,000 --> 01:15:58,000
有九个

2671
01:15:58,000 --> 01:15:59,000
不是

2672
01:15:59,000 --> 01:16:00,000
出于

2673
01:16:00,000 --> 01:16:01,000
资源的目的

2674
01:16:01,000 --> 01:16:02,000
而学习账号

2675
01:16:02,000 --> 01:16:03,000
对

2676
01:16:03,000 --> 01:16:05,000
我可能也是

2677
01:16:05,000 --> 01:16:08,000
当时我

2678
01:16:08,000 --> 01:16:10,000
生活所破了

2679
01:16:10,000 --> 01:16:11,000
对

2680
01:16:11,000 --> 01:16:12,000
而且这

2681
01:16:12,000 --> 01:16:13,000
我觉得

2682
01:16:13,000 --> 01:16:14,000
这可能也是我

2683
01:16:14,000 --> 01:16:15,000
辞职原因之一吧

2684
01:16:15,000 --> 01:16:16,000
就是

2685
01:16:16,000 --> 01:16:18,000
去寻找

2686
01:16:18,000 --> 01:16:19,000
更绿的

2687
01:16:19,000 --> 01:16:20,000
对

2688
01:16:20,000 --> 01:16:21,000
寻找更绿的

2689
01:16:21,000 --> 01:16:22,000
草屏的动机之一

2690
01:16:22,000 --> 01:16:23,000
也就是我终于

2691
01:16:23,000 --> 01:16:24,000
受到了这一套

2692
01:16:24,000 --> 01:16:25,000
嗯

2693
01:16:25,000 --> 01:16:26,000
对

2694
01:16:26,000 --> 01:16:27,000
而且

2695
01:16:27,000 --> 01:16:28,000
所以这里要

2696
01:16:28,000 --> 01:16:29,000
所以这里要

2697
01:16:29,000 --> 01:16:30,000
要要要

2698
01:16:30,000 --> 01:16:31,000
插问一句

2699
01:16:31,000 --> 01:16:32,000
你下一份工作是准备写什么

2700
01:16:32,000 --> 01:16:33,000
可能是 Python

2701
01:16:33,000 --> 01:16:34,000
应该是 Python

2702
01:16:34,000 --> 01:16:35,000
OK

2703
01:16:35,000 --> 01:16:36,000
Python

2704
01:16:36,000 --> 01:16:37,000
CJ 家

2705
01:16:37,000 --> 01:16:38,000
然后

2706
01:16:38,000 --> 01:16:40,000
Python 可能会成为

2707
01:16:40,000 --> 01:16:41,000
一个选项

2708
01:16:41,000 --> 01:16:42,000
但应该不是必须

2709
01:16:42,000 --> 01:16:43,000
至少目前我长了

2710
01:16:43,000 --> 01:16:45,000
装资料是这样的

2711
01:16:45,000 --> 01:16:46,000
OK

2712
01:16:46,000 --> 01:16:47,000
对

2713
01:16:47,000 --> 01:16:48,000
好

2714
01:16:48,000 --> 01:16:49,000
那加班里面除了

2715
01:16:49,000 --> 01:16:50,000
没本这个

2716
01:16:50,000 --> 01:16:51,000
比较你比较举丧的

2717
01:16:51,000 --> 01:16:52,000
这个包馆你

2718
01:16:52,000 --> 01:16:53,000
气之外

2719
01:16:53,000 --> 01:16:54,000
还有什么其他选项

2720
01:16:54,000 --> 01:16:55,000
对

2721
01:16:55,000 --> 01:16:56,000
这有其他的别的选项吗

2722
01:16:56,000 --> 01:16:57,000
没有吗

2723
01:16:57,000 --> 01:16:58,000
应该是有的

2724
01:16:58,000 --> 01:16:59,000
但没问题

2725
01:16:59,000 --> 01:17:01,000
基本上可以

2726
01:17:01,000 --> 01:17:03,000
视为任何一个

2727
01:17:03,000 --> 01:17:05,000
比较上规模的

2728
01:17:05,000 --> 01:17:09,000
企业机

2729
01:17:09,000 --> 01:17:11,000
应用的开发企业

2730
01:17:11,000 --> 01:17:12,000
都不得不

2731
01:17:12,000 --> 01:17:13,000
或者说

2732
01:17:13,000 --> 01:17:15,000
都会选择的一个

2733
01:17:15,000 --> 01:17:16,000
一个解决方案

2734
01:17:16,000 --> 01:17:17,000
因为

2735
01:17:17,000 --> 01:17:19,000
唯有没有产生出的一套

2736
01:17:19,000 --> 01:17:20,000
还是相对来说

2737
01:17:20,000 --> 01:17:22,000
比较成熟的生态系统

2738
01:17:22,000 --> 01:17:24,000
每一个都很繁索

2739
01:17:24,000 --> 01:17:25,000
每一个都很丑闹

2740
01:17:25,000 --> 01:17:26,000
但是

2741
01:17:26,000 --> 01:17:27,000
搭载在一起的时候

2742
01:17:27,000 --> 01:17:30,000
它在 50%的时间里面

2743
01:17:30,000 --> 01:17:31,000
还是可以做事的

2744
01:17:34,000 --> 01:17:35,000
好吧

2745
01:17:35,000 --> 01:17:36,000
所以这是一个

2746
01:17:36,000 --> 01:17:38,000
大家都知道很不爽

2747
01:17:38,000 --> 01:17:39,000
大家就知道起码

2748
01:17:39,000 --> 01:17:41,000
这个不爽是可以预期的对吧

2749
01:17:41,000 --> 01:17:42,000
有多不爽

2750
01:17:42,000 --> 01:17:43,000
你就那样

2751
01:17:43,000 --> 01:17:44,000
对 网上有一个复曼的换

2752
01:17:44,000 --> 01:17:47,000
我觉得一定要放在我们的收弄词里面

2753
01:17:47,000 --> 01:17:49,000
你想读这

2754
01:17:49,000 --> 01:17:50,000
对

2755
01:17:50,000 --> 01:17:52,000
大意就是你

2756
01:17:52,000 --> 01:17:55,000
大意是一个你采用

2757
01:17:55,000 --> 01:17:58,000
梅文之后的生产率曲线

2758
01:17:58,000 --> 01:18:00,000
刚刚开始这个曲线

2759
01:18:00,000 --> 01:18:02,000
是有一点点像上

2760
01:18:02,000 --> 01:18:03,000
就是刚刚采用梅文之后

2761
01:18:03,000 --> 01:18:04,000
你会觉得

2762
01:18:04,000 --> 01:18:05,000
哇 一切

2763
01:18:05,000 --> 01:18:07,000
包都精英一条

2764
01:18:07,000 --> 01:18:08,000
然后一切

2765
01:18:08,000 --> 01:18:10,000
梅文还有一个特点

2766
01:18:10,000 --> 01:18:11,000
就是它的

2767
01:18:11,000 --> 01:18:14,000
它给你预先定义的

2768
01:18:14,000 --> 01:18:16,000
一套非常勇长繁索

2769
01:18:16,000 --> 01:18:19,000
落缩的那个编异步众

2770
01:18:19,000 --> 01:18:20,000
你比如说

2771
01:18:20,000 --> 01:18:22,000
你可以运行梅文 clean

2772
01:18:22,000 --> 01:18:23,000
就是帮你生两种东西

2773
01:18:23,000 --> 01:18:25,000
然后梅文 test 就是

2774
01:18:25,000 --> 01:18:26,000
你帮你

2775
01:18:26,000 --> 01:18:28,000
从 precon file

2776
01:18:28,000 --> 01:18:29,000
con file

2777
01:18:29,000 --> 01:18:30,000
然后

2778
01:18:30,000 --> 01:18:31,000
Assembly

2779
01:18:31,000 --> 01:18:32,000
然后 distribute

2780
01:18:32,000 --> 01:18:34,000
中珠似的整个一套

2781
01:18:34,000 --> 01:18:35,000
全都跑下来

2782
01:18:35,000 --> 01:18:37,000
然后自动帮你运行测试

2783
01:18:37,000 --> 01:18:39,000
你会觉得自己的生产力

2784
01:18:39,000 --> 01:18:40,000
好像提高了

2785
01:18:40,000 --> 01:18:42,000
因为一切都尽可能自动化

2786
01:18:42,000 --> 01:18:43,000
但是

2787
01:18:43,000 --> 01:18:44,000
好净不长

2788
01:18:44,000 --> 01:18:45,000
当某一个时间

2789
01:18:45,000 --> 01:18:47,000
你遭遇到某一个安装帮

2790
01:18:47,000 --> 01:18:48,000
一来

2791
01:18:48,000 --> 01:18:50,000
冲突问题的时候

2792
01:18:50,000 --> 01:18:51,000
你会发现

2793
01:18:51,000 --> 01:18:53,000
你已经失去了对整个

2794
01:18:53,000 --> 01:18:54,000
向我们的控制

2795
01:18:54,000 --> 01:18:56,000
然后整个情况直转之下

2796
01:18:56,000 --> 01:18:59,000
然后生产率曲线

2797
01:18:59,000 --> 01:19:01,000
就跌落了一个万节不复的声音

2798
01:19:01,000 --> 01:19:02,000
你会不会发现

2799
01:19:02,000 --> 01:19:03,000
哇 我把整个

2800
01:19:03,000 --> 01:19:05,000
project 已经

2801
01:19:05,000 --> 01:19:06,000
怎么说

2802
01:19:06,000 --> 01:19:07,000
mean nice

2803
01:19:07,000 --> 01:19:09,000
然后再去

2804
01:19:09,000 --> 01:19:10,000
感觉这个时候

2805
01:19:10,000 --> 01:19:11,000
还在

2806
01:19:11,000 --> 01:19:12,000
还在感染

2807
01:19:12,000 --> 01:19:13,000
对 我已经

2808
01:19:13,000 --> 01:19:14,000
我已经

2809
01:19:14,000 --> 01:19:16,000
几乎能下再也回不去了

2810
01:19:16,000 --> 01:19:18,000
所以还有一个什么

2811
01:19:18,000 --> 01:19:20,000
还能够恢复的阶段吗

2812
01:19:20,000 --> 01:19:22,000
好像那幅漫画里面

2813
01:19:22,000 --> 01:19:24,000
是没有恢复的阶段

2814
01:19:24,000 --> 01:19:26,000
所以就在这次阶段

2815
01:19:26,000 --> 01:19:27,000
而且在有一个

2816
01:19:27,000 --> 01:19:29,000
经常我上次提到

2817
01:19:29,000 --> 01:19:31,000
如果一个 templar 的一个

2818
01:19:31,000 --> 01:19:33,000
一个访站

2819
01:19:33,000 --> 01:19:35,000
一个访洞画为主的

2820
01:19:35,000 --> 01:19:36,000
templar

2821
01:19:36,000 --> 01:19:38,000
叫做

2822
01:19:38,000 --> 01:19:39,000
dynamops reactions

2823
01:19:39,000 --> 01:19:42,000
里面就有一个

2824
01:19:42,000 --> 01:19:45,000
有一期就是

2825
01:19:45,000 --> 01:19:47,000
讲妹们的

2826
01:19:47,000 --> 01:19:48,000
人类如何

2827
01:19:48,000 --> 01:19:49,000
有人痛苦的

2828
01:19:49,000 --> 01:19:50,000
很简单

2829
01:19:50,000 --> 01:19:51,000
就是一个人

2830
01:19:51,000 --> 01:19:53,000
在与中流泪

2831
01:19:53,000 --> 01:19:55,000
然后另外一个人

2832
01:19:55,000 --> 01:19:57,000
从后面贴进他的耳朵说

2833
01:19:58,000 --> 01:20:01,000
好像是

2834
01:20:01,000 --> 01:20:04,000
要被

2835
01:20:04,000 --> 01:20:06,000
被 painful

2836
01:20:06,000 --> 01:20:08,000
大概说的这么一句话

2837
01:20:08,000 --> 01:20:11,000
然后 gift 的标题就是

2838
01:20:11,000 --> 01:20:13,000
得知项目里面

2839
01:20:13,000 --> 01:20:15,000
需要用到妹们的

2840
01:20:18,000 --> 01:20:19,000
好吧

2841
01:20:19,000 --> 01:20:21,000
我们知道你的痛苦了

2842
01:20:21,000 --> 01:20:22,000
不过我马上就要解脱了

2843
01:20:22,000 --> 01:20:23,000
还有一个禺败

2844
01:20:23,000 --> 01:20:24,000
而且

2845
01:20:24,000 --> 01:20:25,000
各位听到这个

2846
01:20:25,000 --> 01:20:28,000
听到这些节目的时候 我已经解脱了

2847
01:20:28,000 --> 01:20:31,000
我已经解脱了 我已经开开新新的在家里游玩

2848
01:20:31,000 --> 01:20:34,000
好吧

2849
01:20:34,000 --> 01:20:39,000
就说到加拿大要说一个相关的语言

2850
01:20:39,000 --> 01:20:42,000
就是这个人叫做 Skala 的语言

2851
01:20:42,000 --> 01:20:44,000
或者说 Next Generation Java

2852
01:20:44,000 --> 01:20:48,000
我觉得不能这么说

2853
01:20:48,000 --> 01:20:50,000
因为他并不是他的一个超级首先

2854
01:20:50,000 --> 01:20:52,000
他是怎么说呢

2855
01:20:52,000 --> 01:20:54,000
Skala 的目的就是取代现场的

2856
01:20:54,000 --> 01:20:59,000
扎娃成为下一代的企业级应用的标准语言

2857
01:20:59,000 --> 01:21:00,000
我觉得这些事情不会发生的

2858
01:21:00,000 --> 01:21:01,000
对你觉得不会发生

2859
01:21:01,000 --> 01:21:06,000
但至少我在我这边在我看到的信评里面

2860
01:21:06,000 --> 01:21:07,000
Skala 这是 Skala 的目标

2861
01:21:07,000 --> 01:21:10,000
而且欧盟也的确

2862
01:21:10,000 --> 01:21:12,000
欧盟给 Skala 扔了很多很多钱

2863
01:21:12,000 --> 01:21:13,000
因为 Skala 是某种意义上

2864
01:21:13,000 --> 01:21:15,000
是一个欧洲人

2865
01:21:15,000 --> 01:21:17,000
就是德国人开发

2866
01:21:17,000 --> 01:21:18,000
任意识人制造

2867
01:21:18,000 --> 01:21:19,000
德国人开发

2868
01:21:19,000 --> 01:21:20,000
任意识人制造

2869
01:21:20,000 --> 01:21:23,000
基本上是你所能得到的变成员里面

2870
01:21:23,000 --> 01:21:25,000
最复杂的一种可能性

2871
01:21:25,000 --> 01:21:26,000
对

2872
01:21:26,000 --> 01:21:31,000
对 为什么我讲 Skala 不可能替代加拿大成为主流

2873
01:21:31,000 --> 01:21:34,000
我觉得在工业定性上就已经有这点

2874
01:21:34,000 --> 01:21:35,000
光说一点吧

2875
01:21:35,000 --> 01:21:37,000
他那个 Skala 语言规范

2876
01:21:37,000 --> 01:21:39,000
叫一个大不同的书

2877
01:21:39,000 --> 01:21:41,000
才能讲得清楚

2878
01:21:41,000 --> 01:21:41,000
才能讲得完

2879
01:21:41,000 --> 01:21:43,000
然后我觉得这个世界上能够跟他比的

2880
01:21:43,000 --> 01:21:45,000
估计只有 C++了

2881
01:21:45,000 --> 01:21:46,000
对

2882
01:21:46,000 --> 01:21:48,000
所以这样的现状就是没有任何一个

2883
01:21:48,000 --> 01:21:51,000
就是我如果说错了

2884
01:21:51,000 --> 01:21:52,000
事实上没有任何一个

2885
01:21:52,000 --> 01:21:56,000
C++编异器是完全

2886
01:21:56,000 --> 01:21:59,000
可以符合这个 C++的标准

2887
01:21:59,000 --> 01:22:01,000
是不是这样

2888
01:22:01,000 --> 01:22:02,000
我觉得应该是吧

2889
01:22:02,000 --> 01:22:03,000
好的

2890
01:22:03,000 --> 01:22:04,000
对

2891
01:22:04,000 --> 01:22:07,000
Skala 也是一个就是属于一个

2892
01:22:07,000 --> 01:22:08,000
我在我的心目中

2893
01:22:08,000 --> 01:22:11,000
归类是把它割于世界家的同类复杂

2894
01:22:11,000 --> 01:22:12,000
度的语言

2895
01:22:12,000 --> 01:22:14,000
但是他确实有很多

2896
01:22:14,000 --> 01:22:15,000
这种很爽的语言特性

2897
01:22:15,000 --> 01:22:18,000
但这不是这次讨论的重点

2898
01:22:18,000 --> 01:22:20,000
这次要提到他是因为要说

2899
01:22:20,000 --> 01:22:23,000
他的一个包裹里器叫做 SBT

2900
01:22:23,000 --> 01:22:24,000
傻变态

2901
01:22:26,000 --> 01:22:28,000
还好你没有审得另外一种歌

2902
01:22:30,000 --> 01:22:32,000
那么他特别在哪呢

2903
01:22:32,000 --> 01:22:33,000
他的特别在于他的

2904
01:22:33,000 --> 01:22:36,000
你这年没问题是要写 XML

2905
01:22:36,000 --> 01:22:36,000
对

2906
01:22:36,000 --> 01:22:39,000
那你叫 XML 本来就不是拿给人写的

2907
01:22:39,000 --> 01:22:40,000
对吧

2908
01:22:40,000 --> 01:22:43,000
他本来是要给机器生成系途去的

2909
01:22:44,000 --> 01:22:49,000
SBT 的文件是一个 Skala 的 DSL

2910
01:22:49,000 --> 01:22:50,000
你可以这么想

2911
01:22:51,000 --> 01:22:54,000
他是相比 XML 是绝对要减结很多的

2912
01:22:54,000 --> 01:22:58,000
不过他作为一个 DSL

2913
01:22:58,000 --> 01:22:59,000
他也有他自己的问题

2914
01:22:59,000 --> 01:23:00,000
就是你首先得知道

2915
01:23:00,000 --> 01:23:02,000
你能够在这里面写什么

2916
01:23:02,000 --> 01:23:03,000
不能在这里面写什么

2917
01:23:03,000 --> 01:23:06,000
就是你要用 SBT 这个包裹里器

2918
01:23:06,000 --> 01:23:08,000
首先你得比较熟悉的理解

2919
01:23:08,000 --> 01:23:10,000
Skala 那套复杂

2920
01:23:10,000 --> 01:23:12,000
归类的语言规范怎么一回事

2921
01:23:12,000 --> 01:23:13,000
OK

2922
01:23:13,000 --> 01:23:17,000
Skala 你们反正很多很难忘我们生意的东西

2923
01:23:17,000 --> 01:23:18,000
这个我是知道的

2924
01:23:18,000 --> 01:23:20,000
对 因为他是一个

2925
01:23:20,000 --> 01:23:23,000
你懂他是一个来自学术圈的语言

2926
01:23:23,000 --> 01:23:24,000
你可以这么想吧

2927
01:23:26,000 --> 01:23:27,000
难说吧

2928
01:23:27,000 --> 01:23:28,000
作者毕竟也是

2929
01:23:28,000 --> 01:23:29,000
但是

2930
01:23:29,000 --> 01:23:30,000
因为 M 的

2931
01:23:31,000 --> 01:23:31,000
对

2932
01:23:31,000 --> 01:23:33,000
因为你可以理解

2933
01:23:33,000 --> 01:23:35,000
他是一个工业界和学术界

2934
01:23:35,000 --> 01:23:36,000
都双修的大牛吧

2935
01:23:36,000 --> 01:23:37,000
对 因为这个人集码到现在

2936
01:23:37,000 --> 01:23:39,000
我就为止他还是待在这个学

2937
01:23:39,000 --> 01:23:40,000
大学里面教书

2938
01:23:40,000 --> 01:23:41,000
对

2939
01:23:41,000 --> 01:23:44,000
待在他美丽的瑞士小城落桑

2940
01:23:44,000 --> 01:23:46,000
每天看着日内晚湖

2941
01:23:46,000 --> 01:23:47,000
然后写写编一期

2942
01:23:48,000 --> 01:23:49,000
好悠闲的生活

2943
01:23:49,000 --> 01:23:50,000
教教课

2944
01:23:50,000 --> 01:23:51,000
对 他在那个

2945
01:23:51,000 --> 01:23:52,000
落桑里公路

2946
01:23:52,000 --> 01:23:53,000
不是

2947
01:23:53,000 --> 01:23:55,000
对 他在那里面

2948
01:23:55,000 --> 01:23:56,000
联邦里公路桑坟远

2949
01:23:56,000 --> 01:23:58,000
然后他应该是在

2950
01:23:58,000 --> 01:24:02,000
考试上教一门公开课

2951
01:24:02,000 --> 01:24:02,000
对

2952
01:24:02,000 --> 01:24:04,000
Functional programming

2953
01:24:04,000 --> 01:24:07,000
Functional programming principles in Skala

2954
01:24:07,000 --> 01:24:07,000
OK

2955
01:24:07,000 --> 01:24:09,000
MotinoDiscord

2956
01:24:09,000 --> 01:24:10,000
对 大牛哈

2957
01:24:11,000 --> 01:24:12,000
德语口音

2958
01:24:12,000 --> 01:24:14,000
长得一口德语口音很重的

2959
01:24:14,000 --> 01:24:16,000
长得一张德文这里

2960
01:24:18,000 --> 01:24:18,000
但在

2961
01:24:18,000 --> 01:24:21,000
在瑞士的法语期教书

2962
01:24:21,000 --> 01:24:23,000
对 很奇怪的事

2963
01:24:23,000 --> 01:24:24,000
SPT 的

2964
01:24:24,000 --> 01:24:25,000
他的

2965
01:24:25,000 --> 01:24:26,000
我当时

2966
01:24:26,000 --> 01:24:27,000
学 SKAL

2967
01:24:27,000 --> 01:24:28,000
就是用他来编一东西

2968
01:24:28,000 --> 01:24:29,000
他能够

2969
01:24:29,000 --> 01:24:29,000
也可以

2970
01:24:29,000 --> 01:24:29,000
他可以

2971
01:24:29,000 --> 01:24:30,000
纯加了项目

2972
01:24:30,000 --> 01:24:31,000
也可以

2973
01:24:31,000 --> 01:24:33,000
然后 SKAL 的加分和项目

2974
01:24:33,000 --> 01:24:34,000
也可以

2975
01:24:34,000 --> 01:24:35,000
就给我感觉他那套

2976
01:24:35,000 --> 01:24:37,000
就是这个文件

2977
01:24:37,000 --> 01:24:37,000
就是那个

2978
01:24:37,000 --> 01:24:39,000
配置文件还是比较好写的

2979
01:24:39,000 --> 01:24:40,000
就起码

2980
01:24:40,000 --> 01:24:41,000
比没问题好多了

2981
01:24:41,000 --> 01:24:42,000
我觉得

2982
01:24:42,000 --> 01:24:44,000
但土草的干液土了

2983
01:24:44,000 --> 01:24:46,000
就是我对这个东西的理解就

2984
01:24:46,000 --> 01:24:47,000
因为我没有论他

2985
01:24:47,000 --> 01:24:48,000
因为用过来

2986
01:24:48,000 --> 01:24:49,000
只他人在学习

2987
01:24:49,000 --> 01:24:50,000
没有用什么

2988
01:24:50,000 --> 01:24:51,000
作为大规模的应用

2989
01:24:51,000 --> 01:24:51,000
所以

2990
01:24:51,000 --> 01:24:52,000
不太清楚

2991
01:24:52,000 --> 01:24:54,000
具体使用的时候会怎么样

2992
01:24:54,000 --> 01:24:54,000
但是

2993
01:24:54,000 --> 01:24:57,000
具 SPT 的用户

2994
01:24:57,000 --> 01:24:58,000
的描述来讲

2995
01:24:58,000 --> 01:25:00,000
应该是比

2996
01:25:00,000 --> 01:25:02,000
没问题留要好很多的

2997
01:25:02,000 --> 01:25:03,000
OK

2998
01:25:03,000 --> 01:25:04,000
你确定

2999
01:25:04,000 --> 01:25:05,000
你说的

3000
01:25:05,000 --> 01:25:07,000
DSL 好写

3001
01:25:07,000 --> 01:25:07,000
是真的吗

3002
01:25:07,000 --> 01:25:08,000
因为我们现在看

3003
01:25:08,000 --> 01:25:10,000
这个 SPT 教程上面的一段

3004
01:25:10,000 --> 01:25:11,000
就是

3005
01:25:11,000 --> 01:25:11,000
哇

3006
01:25:11,000 --> 01:25:12,000
这是什么

3007
01:25:12,000 --> 01:25:14,000
为什么一个 Bild 要有

3008
01:25:14,000 --> 01:25:17,000
Object Hello Bill 的 Exence Build

3009
01:25:17,000 --> 01:25:18,000
就在 Bild 的文件里面

3010
01:25:18,000 --> 01:25:20,000
居然要用到机场

3011
01:25:20,000 --> 01:25:21,000
或者说

3012
01:25:21,000 --> 01:25:23,000
非常显示的

3013
01:25:23,000 --> 01:25:25,000
写出机程关系来

3014
01:25:25,000 --> 01:25:26,000
这个原理很简单

3015
01:25:26,000 --> 01:25:27,000
就像在加分里面

3016
01:25:27,000 --> 01:25:28,000
你没有办法

3017
01:25:28,000 --> 01:25:28,000
不写一个课

3018
01:25:28,000 --> 01:25:29,000
司讯型

3019
01:25:29,000 --> 01:25:30,000
一个程序一样

3020
01:25:31,000 --> 01:25:32,000
你再 SKAL 里面

3021
01:25:32,000 --> 01:25:33,000
你至少

3022
01:25:33,000 --> 01:25:33,000
对你再 SKAL 里面

3023
01:25:33,000 --> 01:25:35,000
你至少给我一个 Object

3024
01:25:35,000 --> 01:25:35,000
就是

3025
01:25:35,000 --> 01:25:36,000
应 SKAL 的

3026
01:25:36,000 --> 01:25:37,000
Everything is anObject

3027
01:25:37,000 --> 01:25:38,000
Object

3028
01:25:38,000 --> 01:25:39,000
在 SKAL 里面

3029
01:25:39,000 --> 01:25:40,000
相当于如果没几分

3030
01:25:40,000 --> 01:25:42,000
相当于新狗屯吧

3031
01:25:42,000 --> 01:25:43,000
对

3032
01:25:43,000 --> 01:25:44,000
差不多这个

3033
01:25:44,000 --> 01:25:45,000
这个概念

3034
01:25:45,000 --> 01:25:46,000
然后

3035
01:25:46,000 --> 01:25:46,000
为什么

3036
01:25:46,000 --> 01:25:48,000
Sattings

3037
01:25:48,000 --> 01:25:49,000
这个东西前面要有

3038
01:25:49,000 --> 01:25:51,000
OVERRIDE LAYZE WALL

3039
01:25:53,000 --> 01:25:53,000
这个

3040
01:25:53,000 --> 01:25:54,000
这个时候你叫去

3041
01:25:54,000 --> 01:25:56,000
研究 SKAL 这个语言

3042
01:25:56,000 --> 01:25:57,000
到底本身怎么一回事

3043
01:25:57,000 --> 01:25:58,000
你还得理解它

3044
01:25:58,000 --> 01:25:59,000
这个文就说

3045
01:25:59,000 --> 01:26:00,000
它的门槛是蛮高的

3046
01:26:00,000 --> 01:26:01,000
然后

3047
01:26:01,000 --> 01:26:03,000
但一旦你入了门之后

3048
01:26:03,000 --> 01:26:05,000
我去的 Long

3049
01:26:05,000 --> 01:26:06,000
Long time

3050
01:26:06,000 --> 01:26:09,000
你当你说的门之后

3051
01:26:09,000 --> 01:26:11,000
之后还是写起来还行

3052
01:26:11,000 --> 01:26:11,000
反正

3053
01:26:11,000 --> 01:26:12,000
那他爹上

3054
01:26:12,000 --> 01:26:13,000
你去大学会之后

3055
01:26:13,000 --> 01:26:14,000
你能够一个

3056
01:26:14,000 --> 01:26:15,000
非常简练的方式

3057
01:26:15,000 --> 01:26:16,000
把它写出来

3058
01:26:16,000 --> 01:26:17,000
但难度在于

3059
01:26:17,000 --> 01:26:18,000
你要达到那个

3060
01:26:18,000 --> 01:26:18,000
简单方式

3061
01:26:18,000 --> 01:26:19,000
你得先读

3062
01:26:19,000 --> 01:26:21,000
它 Conver

3063
01:26:21,000 --> 01:26:22,000
那个 SKAL 的

3064
01:26:22,000 --> 01:26:22,000
那本书

3065
01:26:22,000 --> 01:26:24,000
你只要可能上什么小半年了

3066
01:26:24,000 --> 01:26:25,000
对

3067
01:26:25,000 --> 01:26:27,000
对

3068
01:26:27,000 --> 01:26:28,000
对

3069
01:26:28,000 --> 01:26:29,000
那用那个来管理

3070
01:26:29,000 --> 01:26:31,000
SKAL 的这个

3071
01:26:31,000 --> 01:26:33,000
这个这个这个

3072
01:26:33,000 --> 01:26:34,000
这个 project

3073
01:26:34,000 --> 01:26:34,000
也是可以的

3074
01:26:34,000 --> 01:26:36,000
但是我很怀疑

3075
01:26:36,000 --> 01:26:37,000
这件事情的可行

3076
01:26:37,000 --> 01:26:40,000
之初因为它确实是在探难学了

3077
01:26:40,000 --> 01:26:41,000
我是觉得

3078
01:26:41,000 --> 01:26:43,000
它应该

3079
01:26:43,000 --> 01:26:45,000
像很多很多欧盟

3080
01:26:45,000 --> 01:26:46,000
看好了

3081
01:26:46,000 --> 01:26:47,000
所有其他项目一样

3082
01:26:47,000 --> 01:26:49,000
因为过渡了繁锁

3083
01:26:49,000 --> 01:26:50,000
而最后

3084
01:26:50,000 --> 01:26:52,000
被抛弃的历史的车

3085
01:26:52,000 --> 01:26:53,000
下面

3086
01:26:53,000 --> 01:26:55,000
还有看着

3087
01:26:55,000 --> 01:26:56,000
对

3088
01:26:56,000 --> 01:26:57,000
所以我们

3089
01:26:57,000 --> 01:26:58,000
那也这或者

3090
01:26:58,000 --> 01:26:59,000
从另外一个角度理解

3091
01:26:59,000 --> 01:27:01,000
也是

3092
01:27:01,000 --> 01:27:02,000
我们这些选择了

3093
01:27:02,000 --> 01:27:03,000
够或者选择了

3094
01:27:03,000 --> 01:27:05,000
更多更更更简单

3095
01:27:06,000 --> 01:27:09,000
的菜鳥们的一种

3096
01:27:09,000 --> 01:27:11,000
无妄的吸击

3097
01:27:11,000 --> 01:27:12,000
也是它最后还会像

3098
01:27:12,000 --> 01:27:14,000
Java 一樣 Tickle World

3099
01:27:14,000 --> 01:27:16,000
像世界家洋

3100
01:27:16,000 --> 01:27:17,000
盘剧在这个

3101
01:27:17,000 --> 01:27:20,000
TIOB 的那个

3102
01:27:20,000 --> 01:27:23,000
盘上榜上中年英文不算

3103
01:27:23,000 --> 01:27:24,000
也不是没有可能

3104
01:27:24,000 --> 01:27:26,000
现在比如说你像这样

3105
01:27:26,000 --> 01:27:26,000
Twitter 还有一些

3106
01:27:26,000 --> 01:27:27,000
那么中度用户

3107
01:27:27,000 --> 01:27:28,000
都在用这个写

3108
01:27:28,000 --> 01:27:29,000
它的后台

3109
01:27:29,000 --> 01:27:31,000
那也这种也是可以

3110
01:27:31,000 --> 01:27:33,000
就如果它出现了

3111
01:27:33,000 --> 01:27:34,000
我觉得也

3112
01:27:34,000 --> 01:27:35,000
你也不难理解吗

3113
01:27:36,000 --> 01:27:37,000
好

3114
01:27:37,000 --> 01:27:38,000
下面要进入一个

3115
01:27:38,000 --> 01:27:39,000
终于我们两个都

3116
01:27:39,000 --> 01:27:41,000
可以共同吐槽的一个

3117
01:27:43,000 --> 01:27:44,000
排桑

3118
01:27:44,000 --> 01:27:45,000
也就是你的下一帮

3119
01:27:45,000 --> 01:27:46,000
都要做的事情

3120
01:27:46,000 --> 01:27:47,000
不要以为你

3121
01:27:47,000 --> 01:27:49,000
从 Java 里面那个什么

3122
01:27:49,000 --> 01:27:51,000
你走里面针托出来

3123
01:27:51,000 --> 01:27:52,000
你就爽了

3124
01:27:52,000 --> 01:27:53,000
排放里面

3125
01:27:53,000 --> 01:27:54,000
肯也不少

3126
01:27:54,000 --> 01:27:55,000
我给你讲

3127
01:27:55,000 --> 01:27:56,000
刚出龙团

3128
01:27:56,000 --> 01:27:57,000
又是虎雪

3129
01:27:58,000 --> 01:27:59,000
排放这个问题

3130
01:27:59,000 --> 01:28:00,000
其实也是怎么讲

3131
01:28:00,000 --> 01:28:02,000
历史一流问题比较多

3132
01:28:02,000 --> 01:28:04,000
就首先

3133
01:28:04,000 --> 01:28:06,000
这个事情是蛮諷刺的

3134
01:28:06,000 --> 01:28:07,000
就是排桑我们都知道

3135
01:28:07,000 --> 01:28:09,000
它有一个哲学

3136
01:28:09,000 --> 01:28:10,000
就是

3137
01:28:10,000 --> 01:28:11,000
There's one

3138
01:28:11,000 --> 01:28:12,000
I'm hopeful you'll know one

3139
01:28:12,000 --> 01:28:14,000
of ES Way to do things

3140
01:28:14,000 --> 01:28:15,000
对然后一边

3141
01:28:15,000 --> 01:28:16,000
高唱这个时候

3142
01:28:16,000 --> 01:28:18,000
一边出了排桑

3143
01:28:18,000 --> 01:28:19,000
然后排桑三

3144
01:28:19,000 --> 01:28:20,000
然后

3145
01:28:20,000 --> 01:28:22,000
又有了

3146
01:28:22,000 --> 01:28:24,000
set up tools 和

3147
01:28:24,000 --> 01:28:25,000
pip

3148
01:28:25,000 --> 01:28:27,000
不止还多长的

3149
01:28:27,000 --> 01:28:28,000
这开始有

3150
01:28:28,000 --> 01:28:29,000
set up tools

3151
01:28:29,000 --> 01:28:31,000
Destir your tails

3152
01:28:31,000 --> 01:28:32,000
you pip

3153
01:28:32,000 --> 01:28:33,000
you build out

3154
01:28:33,000 --> 01:28:34,000
这就是比较老

3155
01:28:34,000 --> 01:28:35,000
build out 的是啥

3156
01:28:35,000 --> 01:28:36,000
我会跟你解释

3157
01:28:36,000 --> 01:28:38,000
这是一个很神奇的存在

3158
01:28:38,000 --> 01:28:39,000
然后后来

3159
01:28:39,000 --> 01:28:41,000
觉得这个事情

3160
01:28:41,000 --> 01:28:42,000
玩不下去了

3161
01:28:42,000 --> 01:28:44,000
后来要出现那个叫什么

3162
01:28:44,000 --> 01:28:46,000
destir your tail

3163
01:28:46,000 --> 01:28:47,000
二

3164
01:28:47,000 --> 01:28:48,000
所以你看

3165
01:28:48,000 --> 01:28:50,000
这个标板者

3166
01:28:50,000 --> 01:28:51,000
这里

3167
01:28:51,000 --> 01:28:52,000
这个标板

3168
01:28:52,000 --> 01:28:53,000
只有

3169
01:28:53,000 --> 01:28:54,000
通常一个正确的方式

3170
01:28:54,000 --> 01:28:56,000
做事的语言

3171
01:28:56,000 --> 01:28:57,000
有着

3172
01:28:57,000 --> 01:28:58,000
五六七八种

3173
01:28:58,000 --> 01:29:00,000
包管领工具

3174
01:29:00,000 --> 01:29:01,000
对

3175
01:29:01,000 --> 01:29:02,000
有五六七八种

3176
01:29:02,000 --> 01:29:04,000
不同的做事的方式

3177
01:29:04,000 --> 01:29:05,000
而且他们互相之间是

3178
01:29:05,000 --> 01:29:06,000
不太坚重

3179
01:29:06,000 --> 01:29:07,000
不坚重

3180
01:29:07,000 --> 01:29:08,000
但我觉得这也

3181
01:29:08,000 --> 01:29:10,000
可能也不能完全

3182
01:29:10,000 --> 01:29:11,000
怪牌子

3183
01:29:11,000 --> 01:29:13,000
它的设计理念

3184
01:29:13,000 --> 01:29:15,000
并不能保证它所

3185
01:29:15,000 --> 01:29:16,000
确认的那种方式

3186
01:29:16,000 --> 01:29:17,000
就是

3187
01:29:17,000 --> 01:29:18,000
大家最喜欢的

3188
01:29:18,000 --> 01:29:19,000
或者是

3189
01:29:19,000 --> 01:29:21,000
大家最觉得

3190
01:29:21,000 --> 01:29:23,000
语视剧进方式

3191
01:29:23,000 --> 01:29:24,000
对

3192
01:29:24,000 --> 01:29:25,000
所以其实这就是一个

3193
01:29:25,000 --> 01:29:26,000
跟假门

3194
01:29:26,000 --> 01:29:27,000
是一个历史一流的问题

3195
01:29:27,000 --> 01:29:29,000
因为它刚刚提到那些工具

3196
01:29:29,000 --> 01:29:30,000
它出现的时候

3197
01:29:30,000 --> 01:29:31,000
最开始的版本

3198
01:29:31,000 --> 01:29:32,000
出现都比较早

3199
01:29:32,000 --> 01:29:34,000
其实在过去

3200
01:29:34,000 --> 01:29:35,000
这么十几年中

3201
01:29:35,000 --> 01:29:36,000
我们对包管领的

3202
01:29:36,000 --> 01:29:37,000
很多认识

3203
01:29:37,000 --> 01:29:38,000
包括这个网络

3204
01:29:38,000 --> 01:29:39,000
就是设施

3205
01:29:39,000 --> 01:29:40,000
其实发生过

3206
01:29:40,000 --> 01:29:41,000
很大的这个变化

3207
01:29:41,000 --> 01:29:43,000
但是它那些工具

3208
01:29:43,000 --> 01:29:44,000
就没有

3209
01:29:44,000 --> 01:29:46,000
太跟得上时代了

3210
01:29:46,000 --> 01:29:47,000
你可以这么想

3211
01:29:47,000 --> 01:29:48,000
而且

3212
01:29:48,000 --> 01:29:49,000
另外一个比较显著的问题

3213
01:29:49,000 --> 01:29:50,000
是说

3214
01:29:50,000 --> 01:29:51,000
因为拍照它

3215
01:29:51,000 --> 01:29:52,000
通常是在

3216
01:29:52,000 --> 01:29:53,000
Linux 发现

3217
01:29:53,000 --> 01:29:55,000
它里面作为系统组建制一发型的

3218
01:29:55,000 --> 01:29:56,000
那么对导致一个

3219
01:29:56,000 --> 01:29:57,000
很严重的问题

3220
01:29:57,000 --> 01:29:58,000
就是

3221
01:29:58,000 --> 01:29:59,000
如果

3222
01:29:59,000 --> 01:30:00,000
发现了满不升级的话

3223
01:30:00,000 --> 01:30:02,000
那个绑定的拍照的版本

3224
01:30:02,000 --> 01:30:03,000
也是不升级的

3225
01:30:03,000 --> 01:30:05,000
这样在实际使用的时候

3226
01:30:05,000 --> 01:30:07,000
就会出现一个

3227
01:30:07,000 --> 01:30:09,000
非常多的

3228
01:30:09,000 --> 01:30:10,000
不同的版本

3229
01:30:10,000 --> 01:30:11,000
要支持

3230
01:30:11,000 --> 01:30:12,000
而这个互相之间

3231
01:30:12,000 --> 01:30:13,000
不同版本它们之间的建文性

3232
01:30:13,000 --> 01:30:14,000
又是有问题的

3233
01:30:14,000 --> 01:30:16,000
所以在这么一个

3234
01:30:16,000 --> 01:30:17,000
就说在

3235
01:30:17,000 --> 01:30:18,000
慢慢强度

3236
01:30:18,000 --> 01:30:19,000
历史上和中

3237
01:30:19,000 --> 01:30:20,000
散落下这么多版本

3238
01:30:20,000 --> 01:30:21,000
然后你作为一个

3239
01:30:21,000 --> 01:30:22,000
包管领期的编写者

3240
01:30:22,000 --> 01:30:23,000
你也去很难说

3241
01:30:23,000 --> 01:30:25,000
能够能够

3242
01:30:25,000 --> 01:30:26,000
什么

3243
01:30:26,000 --> 01:30:27,000
One-Thane-to-Fixer Mode 对吧

3244
01:30:27,000 --> 01:30:28,000
对

3245
01:30:29,000 --> 01:30:31,000
但是这并不能改变

3246
01:30:31,000 --> 01:30:32,000
我们要吐槽它这件事实啊

3247
01:30:32,000 --> 01:30:33,000
因为它一切是

3248
01:30:33,000 --> 01:30:34,000
就很糟糕了

3249
01:30:34,000 --> 01:30:35,000
对

3250
01:30:35,000 --> 01:30:37,000
它拍总的这个

3251
01:30:37,000 --> 01:30:38,000
每个

3252
01:30:38,000 --> 01:30:39,000
拍总它自己有一个

3253
01:30:39,000 --> 01:30:40,000
这个发型的这个

3254
01:30:40,000 --> 01:30:42,000
一个取道

3255
01:30:42,000 --> 01:30:43,000
就是它自己会有

3256
01:30:43,000 --> 01:30:44,000
可以观光下载

3257
01:30:44,000 --> 01:30:45,000
但是更多的是我们用的是

3258
01:30:45,000 --> 01:30:46,000
从系统里面自带的

3259
01:30:46,000 --> 01:30:48,000
它每个系统里面自带的

3260
01:30:48,000 --> 01:30:49,000
就是某一个版本

3261
01:30:49,000 --> 01:30:50,000
它会

3262
01:30:50,000 --> 01:30:51,000
标准库里面会有这么一个

3263
01:30:51,000 --> 01:30:52,000
叫做

3264
01:30:52,000 --> 01:30:53,000
Selab Tools 对

3265
01:30:53,000 --> 01:30:54,000
然后这个东西

3266
01:30:54,000 --> 01:30:56,000
的面临行的体现

3267
01:30:56,000 --> 01:30:57,000
应该是叫什么

3268
01:30:57,000 --> 01:30:58,000
Easy Install

3269
01:30:58,000 --> 01:30:59,000
Easy Install

3270
01:30:59,000 --> 01:31:00,000
Easy Underline Install

3271
01:31:00,000 --> 01:31:01,000
对

3272
01:31:01,000 --> 01:31:02,000
它的问题是

3273
01:31:04,000 --> 01:31:05,000
它只能 Install

3274
01:31:05,000 --> 01:31:07,000
不能安逸 Install

3275
01:31:09,000 --> 01:31:10,000
你会发现

3276
01:31:10,000 --> 01:31:11,000
Easy Install

3277
01:31:11,000 --> 01:31:12,000
好简单好方便啊

3278
01:31:12,000 --> 01:31:14,000
那怎么 Easy 安逸 Install

3279
01:31:14,000 --> 01:31:15,000
好像没有这个命令耶

3280
01:31:17,000 --> 01:31:18,000
Easy Install

3281
01:31:18,000 --> 01:31:19,000
Hart Manual

3282
01:31:19,000 --> 01:31:20,000
Easy Install

3283
01:31:20,000 --> 01:31:21,000
对

3284
01:31:21,000 --> 01:31:22,000
对

3285
01:31:22,000 --> 01:31:23,000
对

3286
01:31:23,000 --> 01:31:24,000
你会觉得这个就很奇怪

3287
01:31:24,000 --> 01:31:25,000
你怎么能

3288
01:31:25,000 --> 01:31:27,000
只进不出呢

3289
01:31:27,000 --> 01:31:28,000
对不对

3290
01:31:28,000 --> 01:31:29,000
导致什么样的厚果

3291
01:31:29,000 --> 01:31:30,000
你装完之后

3292
01:31:30,000 --> 01:31:31,000
没法重来

3293
01:31:31,000 --> 01:31:32,000
没法说

3294
01:31:32,000 --> 01:31:33,000
装错了

3295
01:31:33,000 --> 01:31:34,000
想掉

3296
01:31:34,000 --> 01:31:35,000
因为它一旦装完之后

3297
01:31:35,000 --> 01:31:36,000
它整个东西

3298
01:31:36,000 --> 01:31:38,000
就垃圾在你的系统面目了

3299
01:31:38,000 --> 01:31:39,000
除了你自己爱一个

3300
01:31:39,000 --> 01:31:41,000
分析它们安装的脚本的一句

3301
01:31:41,000 --> 01:31:42,000
看圆码

3302
01:31:42,000 --> 01:31:44,000
看它到底装到哪里去了

3303
01:31:44,000 --> 01:31:46,000
然后一个一个就手都很搞

3304
01:31:46,000 --> 01:31:47,000
就觉得

3305
01:31:47,000 --> 01:31:48,000
怎么变态

3306
01:31:48,000 --> 01:31:49,000
对吧

3307
01:31:49,000 --> 01:31:50,000
它很无辜告诉你

3308
01:31:50,000 --> 01:31:51,000
说我不是跟你说了吗

3309
01:31:51,000 --> 01:31:53,000
我只是负责 Easy Install

3310
01:31:53,000 --> 01:31:55,000
只有 Easy Install

3311
01:31:55,000 --> 01:31:56,000
对 觉得感觉

3312
01:31:56,000 --> 01:31:57,000
就很像中国的很多

3313
01:31:57,000 --> 01:31:58,000
流氓软件

3314
01:31:58,000 --> 01:32:00,000
很方便的装上去

3315
01:32:00,000 --> 01:32:03,000
就不叫一件事安装

3316
01:32:03,000 --> 01:32:05,000
你就无件事安装

3317
01:32:05,000 --> 01:32:06,000
你不装它都给你装了

3318
01:32:06,000 --> 01:32:08,000
但是发现装上

3319
01:32:08,000 --> 01:32:09,000
就没法回头了

3320
01:32:09,000 --> 01:32:12,000
对 有这么一个问题

3321
01:32:12,000 --> 01:32:13,000
而且它

3322
01:32:13,000 --> 01:32:14,000
而且它这个 Easy Install

3323
01:32:14,000 --> 01:32:16,000
它并不支持

3324
01:32:16,000 --> 01:32:18,000
全部的安装

3325
01:32:18,000 --> 01:32:20,000
很多

3326
01:32:20,000 --> 01:32:21,000
你发现装完之后

3327
01:32:21,000 --> 01:32:24,000
你发现它也不支持这个革命

3328
01:32:24,000 --> 01:32:26,000
它因为它也是对软件包的

3329
01:32:26,000 --> 01:32:28,000
所以类奥或者这种风装方式

3330
01:32:28,000 --> 01:32:30,000
包括那些文件里面要填什么

3331
01:32:30,000 --> 01:32:32,000
Mata 的信息

3332
01:32:32,000 --> 01:32:33,000
它都有一些要求的

3333
01:32:33,000 --> 01:32:34,000
但是并不是所因为

3334
01:32:34,000 --> 01:32:36,000
因为这个四分五列了

3335
01:32:36,000 --> 01:32:38,000
这么一个生态圈的状况

3336
01:32:38,000 --> 01:32:40,000
并不是所要的软件包

3337
01:32:40,000 --> 01:32:42,000
都是觉得要用这个方式来写的

3338
01:32:42,000 --> 01:32:43,000
而且

3339
01:32:43,000 --> 01:32:45,000
具我所知应该它部分人都

3340
01:32:45,000 --> 01:32:47,000
都不用那个方式来写的

3341
01:32:47,000 --> 01:32:49,000
对 我记得当年

3342
01:32:49,000 --> 01:32:50,000
听说

3343
01:32:50,000 --> 01:32:52,000
Guy 的是什么 Dictator 的时候

3344
01:32:52,000 --> 01:32:55,000
我心里还觉得我考一个 Dictator

3345
01:32:55,000 --> 01:32:58,000
难道不会站出来管一管这件事情吗

3346
01:32:58,000 --> 01:32:59,000
但

3347
01:32:59,000 --> 01:33:01,000
是就是有一件一个不管事

3348
01:33:01,000 --> 01:33:03,000
对 在我们对

3349
01:33:03,000 --> 01:33:04,000
如果对比一下拍子的社区

3350
01:33:04,000 --> 01:33:05,000
如果社区的时候

3351
01:33:05,000 --> 01:33:06,000
就会发现

3352
01:33:06,000 --> 01:33:08,000
Ruby 的

3353
01:33:08,000 --> 01:33:09,000
虽然我们默默比

3354
01:33:09,000 --> 01:33:10,000
试着 Ruby 社区的人

3355
01:33:10,000 --> 01:33:12,000
但是 Ruby 社区有一点好

3356
01:33:12,000 --> 01:33:13,000
就是

3357
01:33:13,000 --> 01:33:15,000
当 Mats

3358
01:33:15,000 --> 01:33:16,000
说一句

3359
01:33:16,000 --> 01:33:17,000
大家升级到 2008

3360
01:33:17,000 --> 01:33:19,000
所以我们升级到 2008

3361
01:33:19,000 --> 01:33:20,000
而我们现在

3362
01:33:20,000 --> 01:33:21,000
我记得刚刚前几天

3363
01:33:21,000 --> 01:33:22,000
还收到一封有件

3364
01:33:22,000 --> 01:33:24,000
让我们在投票说

3365
01:33:24,000 --> 01:33:27,000
你觉得拍子的三是一个错误吗

3366
01:33:27,000 --> 01:33:28,000
必然是

3367
01:33:28,000 --> 01:33:30,000
现在的就是状况来看

3368
01:33:30,000 --> 01:33:31,000
对

3369
01:33:31,000 --> 01:33:33,000
拍子的三本一是好的

3370
01:33:33,000 --> 01:33:36,000
目前的现状毫无疑问是否错误

3371
01:33:36,000 --> 01:33:37,000
对

3372
01:33:37,000 --> 01:33:38,000
拍子的语言吐槽

3373
01:33:38,000 --> 01:33:40,000
可以这个单独在吐槽

3374
01:33:40,000 --> 01:33:42,000
就是吐槽它的发布工具

3375
01:33:42,000 --> 01:33:44,000
所以这也是体现的

3376
01:33:44,000 --> 01:33:45,000
这一个问题

3377
01:33:45,000 --> 01:33:46,000
就是拍子的还有一句口号

3378
01:33:46,000 --> 01:33:47,000
叫做

3379
01:33:47,000 --> 01:33:48,000
Badrace Included

3380
01:33:48,000 --> 01:33:49,000
叫什么

3381
01:33:49,000 --> 01:33:50,000
自带电池

3382
01:33:50,000 --> 01:33:51,000
就是它

3383
01:33:51,000 --> 01:33:52,000
自带电池

3384
01:33:52,000 --> 01:33:53,000
它这个标准库里面

3385
01:33:53,000 --> 01:33:54,000
自带的这个

3386
01:33:54,000 --> 01:33:55,000
Cytop 2

3387
01:33:55,000 --> 01:33:56,000
是每一个标准的安装包

3388
01:33:56,000 --> 01:33:58,000
但是就它的标准库里面

3389
01:33:58,000 --> 01:34:00,000
其他很多 Badrace 一样

3390
01:34:00,000 --> 01:34:01,000
他们都是

3391
01:34:01,000 --> 01:34:02,000
Dead on a rival

3392
01:34:02,000 --> 01:34:04,000
已经至少是 5 年就的电池了

3393
01:34:04,000 --> 01:34:05,000
而且装进去的时候

3394
01:34:05,000 --> 01:34:06,000
根本没有过去

3395
01:34:06,000 --> 01:34:07,000
直接每天

3396
01:34:07,000 --> 01:34:08,000
装进去的时候

3397
01:34:08,000 --> 01:34:10,000
根本没有做这个绝园

3398
01:34:10,000 --> 01:34:12,000
导致你达到机器

3399
01:34:12,000 --> 01:34:14,000
拆开之后发现电池

3400
01:34:14,000 --> 01:34:16,000
已经烂在里面了

3401
01:34:16,000 --> 01:34:18,000
电池电酱已经跑出来的感觉

3402
01:34:18,000 --> 01:34:20,000
对 就是他们

3403
01:34:20,000 --> 01:34:22,000
带了一个很烂的工具

3404
01:34:22,000 --> 01:34:23,000
然后没法用

3405
01:34:23,000 --> 01:34:24,000
然后来有人想办办

3406
01:34:24,000 --> 01:34:26,000
我们在解决吧

3407
01:34:26,000 --> 01:34:27,000
后来就出了这个什么

3408
01:34:27,000 --> 01:34:28,000
对不对

3409
01:34:28,000 --> 01:34:29,000
我这么说

3410
01:34:29,000 --> 01:34:30,000
其实不对

3411
01:34:30,000 --> 01:34:31,000
我为了把这个故事讲下去

3412
01:34:31,000 --> 01:34:32,000
就这么说吧

3413
01:34:32,000 --> 01:34:33,000
后来就出了

3414
01:34:33,000 --> 01:34:35,000
Destitute 这么一个工具

3415
01:34:35,000 --> 01:34:36,000
说是吐解决

3416
01:34:36,000 --> 01:34:37,000
Cytop 2

3417
01:34:37,000 --> 01:34:38,000
这个各种问题

3418
01:34:38,000 --> 01:34:40,000
但其实后来

3419
01:34:40,000 --> 01:34:41,000
也发现也没解决了

3420
01:34:41,000 --> 01:34:43,000
然后又多了这么一个

3421
01:34:43,000 --> 01:34:44,000
就碎片吧

3422
01:34:44,000 --> 01:34:46,000
又把多了一个工具要支持

3423
01:34:46,000 --> 01:34:47,000
然后也

3424
01:34:47,000 --> 01:34:49,000
Destitute 也不是特别友好

3425
01:34:49,000 --> 01:34:50,000
我觉得

3426
01:34:50,000 --> 01:34:54,000
我几乎从来没有怎么用过 Destitute

3427
01:34:54,000 --> 01:34:55,000
Trust me

3428
01:34:55,000 --> 01:34:56,000
你可能用过

3429
01:34:56,000 --> 01:34:57,000
只你不知道而已

3430
01:34:57,000 --> 01:34:58,000
What

3431
01:34:58,000 --> 01:35:00,000
他 3 号应该和 Cytop 2 有点

3432
01:35:00,000 --> 01:35:02,000
这种扯不清到外面的关系

3433
01:35:02,000 --> 01:35:03,000
最新的说法是

3434
01:35:03,000 --> 01:35:04,000
这两个东西要融合了

3435
01:35:04,000 --> 01:35:05,000
好

3436
01:35:05,000 --> 01:35:06,000
就是在

3437
01:35:06,000 --> 01:35:07,000
就是在

3438
01:35:07,000 --> 01:35:08,000
就在

3439
01:35:08,000 --> 01:35:09,000
催生出第 3 个怪台来师吗

3440
01:35:09,000 --> 01:35:11,000
对 就是因为他们各

3441
01:35:11,000 --> 01:35:12,000
就是 Cytop 2 的那帮人

3442
01:35:12,000 --> 01:35:15,000
Destitute 这帮人开发的后来发现

3443
01:35:15,000 --> 01:35:17,000
不行啊 这我们各自为这种搞一套

3444
01:35:17,000 --> 01:35:18,000
新版本

3445
01:35:18,000 --> 01:35:20,000
首先和自己过去不见容

3446
01:35:20,000 --> 01:35:21,000
然后和对方不见容

3447
01:35:21,000 --> 01:35:22,000
就

3448
01:35:22,000 --> 01:35:23,000
这本本就二边四了嘛 对吧

3449
01:35:23,000 --> 01:35:24,000
这就很沮丧

3450
01:35:24,000 --> 01:35:25,000
所以后来他们说

3451
01:35:25,000 --> 01:35:28,000
算了我们还是合作一把

3452
01:35:28,000 --> 01:35:29,000
所以后来那个什么

3453
01:35:29,000 --> 01:35:31,000
Destitute 2 和 Cytop 2 的

3454
01:35:31,000 --> 01:35:33,000
下一版本应该是融合在一起的

3455
01:35:33,000 --> 01:35:34,000
然后距离叫什么

3456
01:35:34,000 --> 01:35:35,000
我现在已经不知道了

3457
01:35:35,000 --> 01:35:37,000
我已经放弃理解了

3458
01:35:37,000 --> 01:35:38,000
他们都行为了

3459
01:35:38,000 --> 01:35:39,000
我觉得已经

3460
01:35:39,000 --> 01:35:40,000
Beyond Microplection

3461
01:35:41,000 --> 01:35:42,000
OK

3462
01:35:42,000 --> 01:35:44,000
但是那个美好的局面还没有出现

3463
01:35:44,000 --> 01:35:45,000
就是什么

3464
01:35:45,000 --> 01:35:46,000
到目前为止还是一个

3465
01:35:46,000 --> 01:35:47,000
挺厉害的情况

3466
01:35:47,000 --> 01:35:49,000
后来也有人受不了了

3467
01:35:49,000 --> 01:35:51,000
就是出现了一个

3468
01:35:51,000 --> 01:35:52,000
一个大牛吧

3469
01:35:52,000 --> 01:35:53,000
名字忘了

3470
01:35:53,000 --> 01:35:55,000
大家写了这个叫 Pipe 的工具

3471
01:35:55,000 --> 01:35:56,000
PIP

3472
01:35:56,000 --> 01:35:58,000
对 其实你刚才说

3473
01:35:58,000 --> 01:36:00,000
我们要一起吐槽拍子

3474
01:36:00,000 --> 01:36:01,000
我心里摸摸低过一句

3475
01:36:01,000 --> 01:36:02,000
我现在其实不需要

3476
01:36:02,000 --> 01:36:03,000
怎么吐槽拍子

3477
01:36:03,000 --> 01:36:04,000
我也是

3478
01:36:04,000 --> 01:36:05,000
我已经放弃了

3479
01:36:05,000 --> 01:36:06,000
我都配奉的部分

3480
01:36:06,000 --> 01:36:07,000
就摸摸照过

3481
01:36:07,000 --> 01:36:08,000
比如说

3482
01:36:08,000 --> 01:36:10,000
我会用 Python

3483
01:36:10,000 --> 01:36:12,000
就是 Python Z

3484
01:36:12,000 --> 01:36:13,000
装好几个版本的 Python

3485
01:36:13,000 --> 01:36:17,000
然后每次跑什么东西的时候

3486
01:36:17,000 --> 01:36:19,000
就选择一个 Python

3487
01:36:19,000 --> 01:36:20,000
然后再

3488
01:36:20,000 --> 01:36:21,000
如果需要什么 Python

3489
01:36:21,000 --> 01:36:22,000
PIP

3490
01:36:22,000 --> 01:36:25,000
在该版本的 Python 之下

3491
01:36:25,000 --> 01:36:28,000
装只工该版本的 Python

3492
01:36:28,000 --> 01:36:29,000
使用了 Python

3493
01:36:29,000 --> 01:36:30,000
你是这种玩法

3494
01:36:30,000 --> 01:36:31,000
好像也没有什么

3495
01:36:31,000 --> 01:36:32,000
太痛苦的部分

3496
01:36:32,000 --> 01:36:34,000
那你肯定装得还不够多

3497
01:36:34,000 --> 01:36:35,000
没种

3498
01:36:35,000 --> 01:36:36,000
装多了种

3499
01:36:36,000 --> 01:36:37,000
遇到坑的

3500
01:36:37,000 --> 01:36:38,000
就是一定的

3501
01:36:38,000 --> 01:36:39,000
这个当年

3502
01:36:39,000 --> 01:36:41,000
之前我前几年在支撲

3503
01:36:41,000 --> 01:36:42,000
还工作的时候

3504
01:36:42,000 --> 01:36:43,000
就有遇到这个

3505
01:36:43,000 --> 01:36:44,000
比较令人举伤的状况

3506
01:36:44,000 --> 01:36:45,000
因为我没有没有

3507
01:36:45,000 --> 01:36:46,000
拍对对对对

3508
01:36:46,000 --> 01:36:47,000
包比较多

3509
01:36:47,000 --> 01:36:48,000
比较砸

3510
01:36:48,000 --> 01:36:49,000
然后

3511
01:36:49,000 --> 01:36:50,000
就是挺痛苦的

3512
01:36:50,000 --> 01:36:51,000
对

3513
01:36:51,000 --> 01:36:52,000
一定是我还没有

3514
01:36:52,000 --> 01:36:53,000
遇到企业机

3515
01:36:53,000 --> 01:36:56,000
我还没有进入到企业机拍子的世界

3516
01:36:56,000 --> 01:36:57,000
对对对

3517
01:36:57,000 --> 01:36:58,000
不过我的姐姐发完

3518
01:36:58,000 --> 01:36:59,000
跟你更加绝对

3519
01:36:59,000 --> 01:37:01,000
首先我现在已经不在支撲了

3520
01:37:01,000 --> 01:37:03,000
我已经好久了

3521
01:37:03,000 --> 01:37:04,000
然后另外

3522
01:37:04,000 --> 01:37:06,000
我也不再写

3523
01:37:06,000 --> 01:37:07,000
拍子的相关的东西了

3524
01:37:07,000 --> 01:37:08,000
就全面转向

3525
01:37:08,000 --> 01:37:09,000
构和诺的

3526
01:37:09,000 --> 01:37:10,000
OK

3527
01:37:10,000 --> 01:37:12,000
直接避免

3528
01:37:12,000 --> 01:37:14,000
你现在在搞学术的时候

3529
01:37:14,000 --> 01:37:15,000
用的是什么工具

3530
01:37:15,000 --> 01:37:17,000
我的

3531
01:37:17,000 --> 01:37:18,000
诺

3532
01:37:18,000 --> 01:37:20,000
你感兴吗

3533
01:37:20,000 --> 01:37:21,000
诺

3534
01:37:21,000 --> 01:37:22,000
Demo 的

3535
01:37:22,000 --> 01:37:23,000
Circely

3536
01:37:23,000 --> 01:37:25,000
因为要做一个 Demo 嘛

3537
01:37:25,000 --> 01:37:26,000
然后这个东西

3538
01:37:26,000 --> 01:37:27,000
这个场景比较适合

3539
01:37:27,000 --> 01:37:28,000
在榴栏器里面搞

3540
01:37:28,000 --> 01:37:29,000
OK

3541
01:37:29,000 --> 01:37:30,000
所以

3542
01:37:30,000 --> 01:37:31,000
就加 liquip

3543
01:37:31,000 --> 01:37:33,000
然后必然就跟诺的车

3544
01:37:33,000 --> 01:37:34,000
不叫关系了

3545
01:37:34,000 --> 01:37:35,000
这个星期后再说

3546
01:37:36,000 --> 01:37:38,000
现在接着说回拍赏这个东西

3547
01:37:38,000 --> 01:37:39,000
就有人也受不了

3548
01:37:39,000 --> 01:37:41,000
这个各种四分五六局面

3549
01:37:41,000 --> 01:37:42,000
他又搞出一个

3550
01:37:42,000 --> 01:37:43,000
又不见

3551
01:37:43,000 --> 01:37:44,000
也不叫又不见

3552
01:37:44,000 --> 01:37:46,000
就大部分情况下坚勇

3553
01:37:46,000 --> 01:37:47,000
只有小问题的时候

3554
01:37:47,000 --> 01:37:48,000
不坚勇的工具叫

3555
01:37:48,000 --> 01:37:49,000
PIP

3556
01:37:49,000 --> 01:37:50,000
PIP

3557
01:37:50,000 --> 01:37:51,000
叫 PIP

3558
01:37:51,000 --> 01:37:52,000
PIP

3559
01:37:52,000 --> 01:37:53,000
PIP

3560
01:37:53,000 --> 01:37:54,000
我一般念 PIP

3561
01:37:54,000 --> 01:37:55,000
它的好处就是

3562
01:37:55,000 --> 01:37:56,000
它支持

3563
01:37:56,000 --> 01:37:57,000
Ang In So

3564
01:37:58,000 --> 01:37:59,000
耶

3565
01:37:59,000 --> 01:38:00,000
非常

3566
01:38:00,000 --> 01:38:02,000
一个包包那些中心家中的

3567
01:38:02,000 --> 01:38:04,000
一个 Ang In So 的功能也好耶

3568
01:38:05,000 --> 01:38:06,000
对

3569
01:38:06,000 --> 01:38:08,000
听起来有点奇怪

3570
01:38:08,000 --> 01:38:10,000
对 为什么好有点

3571
01:38:10,000 --> 01:38:11,000
对啊 难道不是

3572
01:38:11,000 --> 01:38:12,000
很潮热方

3573
01:38:12,000 --> 01:38:13,000
Sorry

3574
01:38:13,000 --> 01:38:14,000
对 普通用户

3575
01:38:14,000 --> 01:38:15,000
用用了十年的功能了

3576
01:38:15,000 --> 01:38:16,000
PIP

3577
01:38:16,000 --> 01:38:17,000
有什么好呢

3578
01:38:17,000 --> 01:38:18,000
就是它首先

3579
01:38:18,000 --> 01:38:19,000
这张

3580
01:38:19,000 --> 01:38:21,000
支持这个现在

3581
01:38:21,000 --> 01:38:23,000
这个是很大的一个进步

3582
01:38:23,000 --> 01:38:24,000
然后第二个

3583
01:38:24,000 --> 01:38:25,000
我就比较重要的

3584
01:38:25,000 --> 01:38:26,000
它支持一个

3585
01:38:26,000 --> 01:38:27,000
所谓的版本动节

3586
01:38:28,000 --> 01:38:29,000
对 就是 PIP

3587
01:38:29,000 --> 01:38:30,000
FreeZoom

3588
01:38:30,000 --> 01:38:31,000
对 你可以装好

3589
01:38:31,000 --> 01:38:32,000
一堆包之后

3590
01:38:33,000 --> 01:38:34,000
你可以说好

3591
01:38:34,000 --> 01:38:35,000
我这个什么

3592
01:38:35,000 --> 01:38:36,000
我这个

3593
01:38:36,000 --> 01:38:37,000
开发环境

3594
01:38:37,000 --> 01:38:38,000
搭建好了

3595
01:38:38,000 --> 01:38:39,000
看一下有什么版本的

3596
01:38:39,000 --> 01:38:40,000
包我自己来的

3597
01:38:40,000 --> 01:38:41,000
然后就 PIP FreeZ 一下

3598
01:38:41,000 --> 01:38:43,000
然后又反回一个列表

3599
01:38:43,000 --> 01:38:44,000
说你当前

3600
01:38:44,000 --> 01:38:45,000
装了哪些

3601
01:38:45,000 --> 01:38:46,000
拍送的包

3602
01:38:46,000 --> 01:38:48,000
然后那个包是哪些版本对吧

3603
01:38:50,000 --> 01:38:51,000
你神经的列表下次

3604
01:38:51,000 --> 01:38:53,000
你再用那个列表

3605
01:38:53,000 --> 01:38:54,000
然后再装一遍

3606
01:38:54,000 --> 01:38:55,000
它就会按照那个列表

3607
01:38:55,000 --> 01:38:56,000
一行一行

3608
01:38:56,000 --> 01:38:58,000
再去给你装对应的版本就好了

3609
01:38:58,000 --> 01:38:59,000
就后处也一 works

3610
01:39:00,000 --> 01:39:02,000
而且自以我

3611
01:39:02,000 --> 01:39:04,000
有些的 Hobby Distance

3612
01:39:04,000 --> 01:39:05,000
经验来看

3613
01:39:05,000 --> 01:39:06,000
基本上玩了 99 时间

3614
01:39:06,000 --> 01:39:07,000
它是 works

3615
01:39:07,000 --> 01:39:08,000
对

3616
01:39:08,000 --> 01:39:09,000
但是这也是

3617
01:39:09,000 --> 01:39:10,000
因为你在国

3618
01:39:10,000 --> 01:39:11,000
你不知道中国人民的痛苦

3619
01:39:14,000 --> 01:39:15,000
可是我听说

3620
01:39:15,000 --> 01:39:16,000
贵网站

3621
01:39:16,000 --> 01:39:18,000
现在是机密内容

3622
01:39:18,000 --> 01:39:19,000
听中的情况

3623
01:39:19,000 --> 01:39:20,000
互相谢楼

3624
01:39:20,000 --> 01:39:22,000
贵站难道不是

3625
01:39:22,000 --> 01:39:24,000
内部直接

3626
01:39:24,000 --> 01:39:25,000
微偏翻墙了吗

3627
01:39:25,000 --> 01:39:27,000
但是你知道

3628
01:39:27,000 --> 01:39:28,000
即便是这样翻墙

3629
01:39:28,000 --> 01:39:30,000
网络也是不稳定的吗

3630
01:39:30,000 --> 01:39:31,000
就是

3631
01:39:31,000 --> 01:39:32,000
你如果用到

3632
01:39:32,000 --> 01:39:33,000
我东西收网络的话

3633
01:39:33,000 --> 01:39:34,000
你首先要假试一点

3634
01:39:34,000 --> 01:39:36,000
网络是可以随时断掉的

3635
01:39:36,000 --> 01:39:37,000
它可能都会在你

3636
01:39:37,000 --> 01:39:38,000
自己不希望它

3637
01:39:38,000 --> 01:39:39,000
断段时间断掉

3638
01:39:39,000 --> 01:39:40,000
那可能

3639
01:39:40,000 --> 01:39:41,000
莫非定律

3640
01:39:41,000 --> 01:39:42,000
对

3641
01:39:42,000 --> 01:39:43,000
基本上是这样的

3642
01:39:43,000 --> 01:39:44,000
如果你一旦做了什么企业的运为

3643
01:39:44,000 --> 01:39:45,000
之后你发现

3644
01:39:45,000 --> 01:39:47,000
这个件事情是一定成立的

3645
01:39:47,000 --> 01:39:48,000
对

3646
01:39:48,000 --> 01:39:49,000
而其实这就是

3647
01:39:49,000 --> 01:39:51,000
有一次没门导致我们

3648
01:39:52,000 --> 01:39:54,000
发布推迟的原因之一

3649
01:39:54,000 --> 01:39:55,000
就是我们

3650
01:39:55,000 --> 01:39:56,000
next was 挂掉了

3651
01:39:56,000 --> 01:39:58,000
不是 连不上网络

3652
01:39:58,000 --> 01:39:59,000
而是 next was 挂掉了

3653
01:39:59,000 --> 01:40:00,000
所以 next was 是

3654
01:40:00,000 --> 01:40:03,000
没门这套系统里面的一个

3655
01:40:03,000 --> 01:40:06,000
或者说支持没门系统很重要的一个

3656
01:40:06,000 --> 01:40:07,000
特征就是

3657
01:40:07,000 --> 01:40:09,000
你可以自定一个

3658
01:40:09,000 --> 01:40:11,000
包管理服务器

3659
01:40:11,000 --> 01:40:13,000
然后把你

3660
01:40:13,000 --> 01:40:15,000
写好的软件

3661
01:40:15,000 --> 01:40:17,000
作为一个

3662
01:40:17,000 --> 01:40:19,000
原挂在这个

3663
01:40:19,000 --> 01:40:20,000
包管理器

3664
01:40:20,000 --> 01:40:21,000
包管理服务器上

3665
01:40:21,000 --> 01:40:24,000
然后当你在发布新的软件的时候

3666
01:40:24,000 --> 01:40:26,000
你已经做好那些组件

3667
01:40:26,000 --> 01:40:28,000
可以就像其他任何

3668
01:40:28,000 --> 01:40:29,000
原一样

3669
01:40:29,000 --> 01:40:31,000
从你自己的服务器上面

3670
01:40:31,000 --> 01:40:32,000
下打下来

3671
01:40:32,000 --> 01:40:36,000
然后成为发布好系统人的那部分

3672
01:40:36,000 --> 01:40:38,000
但是如果这个服务器挂掉了

3673
01:40:38,000 --> 01:40:40,000
也就意味着整个发布过程

3674
01:40:40,000 --> 01:40:41,000
将无法挣起

3675
01:40:41,000 --> 01:40:43,000
然后有一次我们的 next was 服务器就挂掉了

3676
01:40:43,000 --> 01:40:45,000
所以你们就是有什么

3677
01:40:45,000 --> 01:40:47,000
single point failure 单点失败了

3678
01:40:47,000 --> 01:40:48,000
对

3679
01:40:48,000 --> 01:40:50,000
把所有的机器放在一个栏子里

3680
01:40:50,000 --> 01:40:52,000
是非常运萃的一点点的事

3681
01:40:52,000 --> 01:40:54,000
但对

3682
01:40:54,000 --> 01:40:56,000
当然

3683
01:40:56,000 --> 01:40:58,000
其实刚才讲了

3684
01:40:58,000 --> 01:40:59,000
I don't blame you

3685
01:40:59,000 --> 01:41:02,000
刚才讲的那些

3686
01:41:02,000 --> 01:41:05,000
拍长三个三大工具

3687
01:41:05,000 --> 01:41:06,000
都是

3688
01:41:06,000 --> 01:41:08,000
他们都依赖同样一个东西

3689
01:41:08,000 --> 01:41:09,000
叫做

3690
01:41:09,000 --> 01:41:11,000
pypy 叫拍

3691
01:41:11,000 --> 01:41:12,000
Peyba

3692
01:41:12,000 --> 01:41:13,000
叫拍 some

3693
01:41:13,000 --> 01:41:14,000
Pyptax

3694
01:41:14,000 --> 01:41:15,000
对拍 some

3695
01:41:15,000 --> 01:41:16,000
Pyptax

3696
01:41:16,000 --> 01:41:17,000
我不知道

3697
01:41:17,000 --> 01:41:18,000
拍拍

3698
01:41:18,000 --> 01:41:19,000
我就叫拍匹 ba

3699
01:41:19,000 --> 01:41:20,000
拍匹 ba

3700
01:41:20,000 --> 01:41:21,000
因为拍拍摄的没有东西

3701
01:41:21,000 --> 01:41:23,000
PIPYPY 用生命的東西了

3702
01:41:23,000 --> 01:41:24,000
對

3703
01:41:24,000 --> 01:41:27,000
那你這裡就不說先講的一個 pipy

3704
01:41:27,000 --> 01:41:28,000
嗯

3705
01:41:28,000 --> 01:41:29,000
pipy 呢是一個什麼

3706
01:41:29,000 --> 01:41:32,000
就是它是一個 pipy 想這個

3707
01:41:32,000 --> 01:41:34,000
這個 fondation

3708
01:41:34,000 --> 01:41:36,000
pipy 想 sort of foundation

3709
01:41:36,000 --> 01:41:38,000
維護的一個專用服務器

3710
01:41:38,000 --> 01:41:39,000
就是你們那個 nextest 差不多

3711
01:41:39,000 --> 01:41:41,000
但是它是通過網絡訪問的

3712
01:41:41,000 --> 01:41:44,000
然後每次 ppinstaller or distit

3713
01:41:44,000 --> 01:41:45,000
去什麼 Easy install 的時候

3714
01:41:45,000 --> 01:41:46,000
它都要去那裡

3715
01:41:46,000 --> 01:41:47,000
去下載

3716
01:41:47,000 --> 01:41:49,000
縮一遍你那個要裝的那個名字

3717
01:41:49,000 --> 01:41:51,000
然後在哪裡找到那個位置

3718
01:41:51,000 --> 01:41:52,000
去下載回來

3719
01:41:52,000 --> 01:41:53,000
不找到就

3720
01:41:53,000 --> 01:41:54,000
它應該是傳到那裡一個服務器

3721
01:41:54,000 --> 01:41:55,000
然後去下載回來

3722
01:41:55,000 --> 01:41:57,000
它有一個 ftp 服務器

3723
01:41:57,000 --> 01:41:57,000
把你給這麼想

3724
01:41:57,000 --> 01:42:00,000
然後它經常掛掉

3725
01:42:00,000 --> 01:42:02,000
OK

3726
01:42:02,000 --> 01:42:03,000
它掛掉的

3727
01:42:03,000 --> 01:42:05,000
它掛掉的這個概率

3728
01:42:05,000 --> 01:42:06,000
就是平凡

3729
01:42:06,000 --> 01:42:08,000
就是令我唐目結束

3730
01:42:08,000 --> 01:42:11,000
是在你們公司掛掉

3731
01:42:11,000 --> 01:42:14,000
就是在你從你們公司訪問的時候掛掉

3732
01:42:14,000 --> 01:42:14,000
不不不

3733
01:42:14,000 --> 01:42:15,000
它自己就掛掉了

3734
01:42:15,000 --> 01:42:16,000
所有人都不能訪問

3735
01:42:16,000 --> 01:42:17,000
what

3736
01:42:17,000 --> 01:42:18,000
等等等等

3737
01:42:18,000 --> 01:42:19,000
前幾年的時候

3738
01:42:19,000 --> 01:42:21,000
這個事情超級嚴重

3739
01:42:21,000 --> 01:42:22,000
OK

3740
01:42:22,000 --> 01:42:24,000
也是因為就兩個原因

3741
01:42:24,000 --> 01:42:25,000
它自己就想掛掉

3742
01:42:25,000 --> 01:42:26,000
一個是我們訪問它的網絡的情況

3743
01:42:26,000 --> 01:42:27,000
今天會掛掉

3744
01:42:27,000 --> 01:42:29,000
你知道有段時間拍什麼到

3745
01:42:29,000 --> 01:42:30,000
org

3746
01:42:30,000 --> 01:42:31,000
到康

3747
01:42:31,000 --> 01:42:32,000
到往了吧

3748
01:42:32,000 --> 01:42:34,000
這個網站是被封掉了嗎

3749
01:42:34,000 --> 01:42:35,000
對

3750
01:42:35,000 --> 01:42:36,000
現在是被封掉

3751
01:42:36,000 --> 01:42:37,000
不然它為什麼要在

3752
01:42:37,000 --> 01:42:38,000
加一個中文

3753
01:42:38,000 --> 01:42:42,000
首頁上面出現中文的下載量

3754
01:42:42,000 --> 01:42:43,000
但這就不是你們覺得很奇怪嗎

3755
01:42:43,000 --> 01:42:44,000
你都被封掉了

3756
01:42:44,000 --> 01:42:46,000
你出現中文有什麼用

3757
01:42:46,000 --> 01:42:48,000
這是拍攝的一網就是

3758
01:42:48,000 --> 01:42:52,000
我覺得這就是它一個技術

3759
01:42:52,000 --> 01:42:53,000
從一個技術社區來表達

3760
01:42:53,000 --> 01:42:56,000
對於某些政府行為的

3761
01:42:56,000 --> 01:42:56,000
微弱的犯康

3762
01:42:56,000 --> 01:42:57,000
我來吧

3763
01:42:57,000 --> 01:42:58,000
就是對

3764
01:42:58,000 --> 01:43:00,000
這個就不能

3765
01:43:00,000 --> 01:43:01,000
秀我姿態嗎

3766
01:43:01,000 --> 01:43:02,000
對反正就是雙重原因

3767
01:43:02,000 --> 01:43:04,000
它自己本身也不是很穩定

3768
01:43:04,000 --> 01:43:05,000
就是它自己的

3769
01:43:05,000 --> 01:43:06,000
vlogvlog 的肥也不是很高

3770
01:43:06,000 --> 01:43:07,000
加上網絡的原因

3771
01:43:07,000 --> 01:43:09,000
導致我們經常訪不了它

3772
01:43:09,000 --> 01:43:12,000
所以大部分用拍攝的

3773
01:43:12,000 --> 01:43:15,000
做生產的公司也好團隊

3774
01:43:15,000 --> 01:43:17,000
基本上都自己在本內部舉手網

3775
01:43:17,000 --> 01:43:20,000
為互了一個拍拍的進項

3776
01:43:20,000 --> 01:43:21,000
有開

3777
01:43:21,000 --> 01:43:22,000
簡單說就是把拍拍

3778
01:43:22,000 --> 01:43:22,000
拍拍了嗎

3779
01:43:22,000 --> 01:43:23,000
你不一定會

3780
01:43:23,000 --> 01:43:24,000
你不一定需要全部的

3781
01:43:24,000 --> 01:43:26,000
你只需要你用常用的那些

3782
01:43:26,000 --> 01:43:27,000
你只需要用的

3783
01:43:27,000 --> 01:43:29,000
可是你怎麼知道那些成員

3784
01:43:29,000 --> 01:43:29,000
它是這一種

3785
01:43:29,000 --> 01:43:30,000
它有一種

3786
01:43:30,000 --> 01:43:31,000
這個做的還比較不錯

3787
01:43:31,000 --> 01:43:32,000
就是有這個

3788
01:43:32,000 --> 01:43:34,000
就是因為拍拍

3789
01:43:34,000 --> 01:43:35,000
拍比經常掛掉

3790
01:43:35,000 --> 01:43:36,000
所以有人寫出這種工具

3791
01:43:36,000 --> 01:43:38,000
可以很方便的讓你

3792
01:43:38,000 --> 01:43:39,000
在自己的服務器上

3793
01:43:39,000 --> 01:43:40,000
架設一個進項

3794
01:43:40,000 --> 01:43:42,000
然後這個進項可以說

3795
01:43:42,000 --> 01:43:43,000
就代理嘛

3796
01:43:43,000 --> 01:43:46,000
就是你設置一下你裝的時候

3797
01:43:46,000 --> 01:43:48,000
它會先去這個進項服務器上找

3798
01:43:48,000 --> 01:43:49,000
如果它找不到

3799
01:43:49,000 --> 01:43:51,000
它會讓這個進項服務器

3800
01:43:51,000 --> 01:43:53,000
去拍比的官方

3801
01:43:53,000 --> 01:43:54,000
去把那個抓的回進項服務器

3802
01:43:54,000 --> 01:43:55,000
這樣下次的話

3803
01:43:55,000 --> 01:43:57,000
你就在那個進項服務器上有了嗎

3804
01:43:58,000 --> 01:43:58,000
就是人意

3805
01:43:58,000 --> 01:44:00,000
也是一個緩存代理的意思

3806
01:44:00,000 --> 01:44:00,000
對

3807
01:44:00,000 --> 01:44:02,000
對

3808
01:44:02,000 --> 01:44:04,000
就是到了這種程度了

3809
01:44:04,000 --> 01:44:06,000
但是不過從這個可用下角

3810
01:44:06,000 --> 01:44:08,000
來講你有一個本地的這個

3811
01:44:08,000 --> 01:44:09,000
進項也是好的

3812
01:44:09,000 --> 01:44:11,000
就可以避免網絡和

3813
01:44:11,000 --> 01:44:12,000
你們遇到的那種情況

3814
01:44:12,000 --> 01:44:14,000
單點失敗嘛

3815
01:44:14,000 --> 01:44:15,000
OK

3816
01:44:15,000 --> 01:44:19,000
但是事情還是沒有結束

3817
01:44:19,000 --> 01:44:20,000
為什麼呢

3818
01:44:20,000 --> 01:44:22,000
因為不管是

3819
01:44:22,000 --> 01:44:23,000
Easy Install 也好

3820
01:44:23,000 --> 01:44:25,000
Dist UTO 也好

3821
01:44:25,000 --> 01:44:27,000
Pip 也好

3822
01:44:27,000 --> 01:44:30,000
他們基本上不能安裝

3823
01:44:30,000 --> 01:44:33,000
非存拍藏的包

3824
01:44:34,000 --> 01:44:36,000
拍藏作為

3825
01:44:36,000 --> 01:44:37,000
拍藏作為一個

3826
01:44:37,000 --> 01:44:39,000
這個多少有點強人所難的時候

3827
01:44:39,000 --> 01:44:41,000
拜拜這個都要解釋為什麼

3828
01:44:41,000 --> 01:44:42,000
要為什麼要出現這種

3829
01:44:42,000 --> 01:44:43,000
一個應用場景

3830
01:44:43,000 --> 01:44:44,000
就是說首先

3831
01:44:44,000 --> 01:44:45,000
因為拍藏語言

3832
01:44:45,000 --> 01:44:47,000
本身是一個比較

3833
01:44:47,000 --> 01:44:48,000
孤一素的語言

3834
01:44:48,000 --> 01:44:50,000
它是一個解釋型

3835
01:44:50,000 --> 01:44:53,000
不代 JIT 的語言

3836
01:44:53,000 --> 01:44:54,000
大不久

3837
01:44:55,000 --> 01:44:58,000
JIT 支持的特徵還不夠全面

3838
01:44:58,000 --> 01:44:59,000
簡單來說就是慢

3839
01:44:59,000 --> 01:45:02,000
那麼等於它做很多事情的時候

3840
01:45:02,000 --> 01:45:03,000
就不能

3841
01:45:03,000 --> 01:45:04,000
都需要 Network Planning

3842
01:45:04,000 --> 01:45:04,000
對

3843
01:45:04,000 --> 01:45:06,000
不能用原生的拍藏的

3844
01:45:06,000 --> 01:45:07,000
代碼來實現

3845
01:45:07,000 --> 01:45:08,000
要用這個

3846
01:45:08,000 --> 01:45:10,000
例如 C 或者 CG 家來實現

3847
01:45:10,000 --> 01:45:12,000
然後通過一個

3848
01:45:12,000 --> 01:45:13,000
這種什麼

3849
01:45:13,000 --> 01:45:14,000
Bridge 的方式

3850
01:45:14,000 --> 01:45:16,000
在通過拍藏去調用它

3851
01:45:16,000 --> 01:45:18,000
比如說最常見的兩個

3852
01:45:18,000 --> 01:45:21,000
這種例子是一個叫做

3853
01:45:21,000 --> 01:45:22,000
New Miracle Pie

3854
01:45:22,000 --> 01:45:23,000
New Miracle Pie

3855
01:45:23,000 --> 01:45:25,000
是做數值計算的

3856
01:45:25,000 --> 01:45:26,000
比如說什麼

3857
01:45:26,000 --> 01:45:27,000
舉升運算

3858
01:45:27,000 --> 01:45:28,000
那就把它

3859
01:45:28,000 --> 01:45:29,000
另外一個叫做

3860
01:45:29,000 --> 01:45:31,000
Piphone Image Library

3861
01:45:31,000 --> 01:45:32,000
然後這個是幹嘛

3862
01:45:32,000 --> 01:45:34,000
就處理圖像的

3863
01:45:34,000 --> 01:45:34,000
OK

3864
01:45:34,000 --> 01:45:35,000
就處理圖像

3865
01:45:35,000 --> 01:45:37,000
其實用圖還蠻多的

3866
01:45:37,000 --> 01:45:38,000
比如說你做了一個

3867
01:45:38,000 --> 01:45:39,000
所叫網站

3868
01:45:39,000 --> 01:45:41,000
你要用或傳個頭像上來的時候

3869
01:45:41,000 --> 01:45:42,000
你得想辦法檢查一下

3870
01:45:42,000 --> 01:45:43,000
壓縮一下

3871
01:45:43,000 --> 01:45:44,000
對吧

3872
01:45:44,000 --> 01:45:45,000
你就用這個 PIP

3873
01:45:45,000 --> 01:45:46,000
Piphone Image Library

3874
01:45:46,000 --> 01:45:47,000
PIPhone 說實話

3875
01:45:47,000 --> 01:45:50,000
已經好像曾經非常喜歡

3876
01:45:50,000 --> 01:45:51,000
但是現在好像已經

3877
01:45:51,000 --> 01:45:53,000
有一陣子從來沒有用過

3878
01:45:53,000 --> 01:45:54,000
愛不起來了是吧

3879
01:45:54,000 --> 01:45:56,000
對

3880
01:45:56,000 --> 01:45:56,000
我理解你

3881
01:45:56,000 --> 01:45:57,000
Piphone 也是

3882
01:45:57,000 --> 01:45:58,000
就是其實有一陣子

3883
01:45:58,000 --> 01:46:00,000
我非常吃命於在

3884
01:46:00,000 --> 01:46:01,000
麥克風上面

3885
01:46:01,000 --> 01:46:03,000
時刻保持一個

3886
01:46:03,000 --> 01:46:04,000
IPIPhone

3887
01:46:04,000 --> 01:46:08,000
IPIPhone 的 QT 版本的康塑在跑

3888
01:46:08,000 --> 01:46:10,000
因為 QT 你會性化的

3889
01:46:10,000 --> 01:46:12,000
內臉顯示很多

3890
01:46:12,000 --> 01:46:12,000
很酷

3891
01:46:12,000 --> 01:46:14,000
就有點像 Masmatic

3892
01:46:14,000 --> 01:46:15,000
或者是

3893
01:46:15,000 --> 01:46:18,000
Maple 的那種感覺

3894
01:46:18,000 --> 01:46:19,000
就是

3895
01:46:19,000 --> 01:46:21,000
蕭砸的寫下幾號

3896
01:46:21,000 --> 01:46:22,000
真的科學計算環境

3897
01:46:22,000 --> 01:46:23,000
對

3898
01:46:23,000 --> 01:46:25,000
冒出一個圖表

3899
01:46:25,000 --> 01:46:26,000
我當時有日子

3900
01:46:26,000 --> 01:46:28,000
非常吃命於一定要保持

3901
01:46:28,000 --> 01:46:29,000
我的麥克風上面跑

3902
01:46:29,000 --> 01:46:29,000
這這麼一個東西

3903
01:46:29,000 --> 01:46:30,000
但是

3904
01:46:30,000 --> 01:46:31,000
其實現在也很多人這麼用

3905
01:46:31,000 --> 01:46:32,000
他現在那個 IPIPhone

3906
01:46:32,000 --> 01:46:34,000
除了一個叫做 Nobok

3907
01:46:34,000 --> 01:46:35,000
對

3908
01:46:35,000 --> 01:46:36,000
其實

3909
01:46:36,000 --> 01:46:38,000
PiphoneNobok 是失望也把的

3910
01:46:38,000 --> 01:46:39,000
對

3911
01:46:39,000 --> 01:46:40,000
吃命於一定有一個原生的

3912
01:46:40,000 --> 01:46:41,000
圖星界面的

3913
01:46:41,000 --> 01:46:42,000
這麼一個東西

3914
01:46:42,000 --> 01:46:43,000
他不就為了解決

3915
01:46:43,000 --> 01:46:44,000
這個 Quarking Titan 問題嗎

3916
01:46:44,000 --> 01:46:45,000
看起來非常高

3917
01:46:45,000 --> 01:46:47,000
在上主要是

3918
01:46:47,000 --> 01:46:47,000
簡單

3919
01:46:47,000 --> 01:46:48,000
但是後來

3920
01:46:48,000 --> 01:46:48,000
對

3921
01:46:48,000 --> 01:46:49,000
但是後來我

3922
01:46:49,000 --> 01:46:52,000
因為我在

3923
01:46:52,000 --> 01:46:54,000
給他不上面維護一個

3924
01:46:54,000 --> 01:46:55,000
小 Node

3925
01:46:55,000 --> 01:46:57,000
就是

3926
01:46:57,000 --> 01:46:59,000
怎樣解決一些安裝一台

3927
01:46:59,000 --> 01:47:01,000
SIMMAC 的時候

3928
01:47:01,000 --> 01:47:03,000
需要面對的小問題

3929
01:47:03,000 --> 01:47:04,000
然後

3930
01:47:04,000 --> 01:47:05,000
我寫在這個

3931
01:47:05,000 --> 01:47:06,000
我在

3932
01:47:06,000 --> 01:47:08,000
IPIPhone

3933
01:47:09,000 --> 01:47:10,000
QT 版本的

3934
01:47:10,000 --> 01:47:12,000
這一段 Note 裡面

3935
01:47:12,000 --> 01:47:13,000
清除了大量的新鞋

3936
01:47:13,000 --> 01:47:15,000
然後最後

3937
01:47:15,000 --> 01:47:16,000
最後最後的時候

3938
01:47:16,000 --> 01:47:18,000
我絕望在裡面寫說

3939
01:47:18,000 --> 01:47:19,000
這一切都

3940
01:47:19,000 --> 01:47:20,000
都需要

3941
01:47:20,000 --> 01:47:21,000
太多努力了

3942
01:47:21,000 --> 01:47:22,000
還是

3943
01:47:22,000 --> 01:47:23,000
直接

3944
01:47:23,000 --> 01:47:24,000
Give it up

3945
01:47:24,000 --> 01:47:25,000
and use

3946
01:47:25,000 --> 01:47:27,000
IPIPhoneNobok

3947
01:47:27,000 --> 01:47:28,000
State

3948
01:47:29,000 --> 01:47:29,000
好吧

3949
01:47:29,000 --> 01:47:30,000
明白了

3950
01:47:30,000 --> 01:47:31,000
OK

3951
01:47:31,000 --> 01:47:31,000
就是說

3952
01:47:31,000 --> 01:47:32,000
回來這個好東西

3953
01:47:32,000 --> 01:47:33,000
就是說

3954
01:47:33,000 --> 01:47:34,000
前面的這個工具

3955
01:47:34,000 --> 01:47:34,000
Satup 2

3956
01:47:34,000 --> 01:47:35,000
DC 2

3957
01:47:35,000 --> 01:47:37,000
還有 Paypal 都不能解決

3958
01:47:37,000 --> 01:47:38,000
不能很好地解決

3959
01:47:38,000 --> 01:47:40,000
帶有 C-Binding

3960
01:47:40,000 --> 01:47:42,000
或者其他與 NB 的

3961
01:47:42,000 --> 01:47:44,000
Paypal 的包的安裝

3962
01:47:44,000 --> 01:47:46,000
就是說你有

3963
01:47:46,000 --> 01:47:46,000
兩種方案

3964
01:47:46,000 --> 01:47:47,000
就是像 Paypal

3965
01:47:47,000 --> 01:47:48,000
EmegeLiber 這種

3966
01:47:48,000 --> 01:47:49,000
具無霸的

3967
01:47:49,000 --> 01:47:51,000
因為它很大

3968
01:47:51,000 --> 01:47:51,000
這種具有包的

3969
01:47:51,000 --> 01:47:52,000
它通常給你

3970
01:47:52,000 --> 01:47:54,000
請問一個官方的安裝包

3971
01:47:54,000 --> 01:47:55,000
當然你就

3972
01:47:55,000 --> 01:47:56,000
裝上

3973
01:47:56,000 --> 01:47:57,000
你這種官方安裝包

3974
01:47:57,000 --> 01:47:59,000
通常是一個比較靠譜的辦法

3975
01:47:59,000 --> 01:48:00,000
但是如果你有想

3976
01:48:00,000 --> 01:48:01,000
從某種方式

3977
01:48:01,000 --> 01:48:02,000
去把這個東西管理起來

3978
01:48:02,000 --> 01:48:03,000
或者是能夠幫啊

3979
01:48:03,000 --> 01:48:04,000
自動化起來

3980
01:48:04,000 --> 01:48:05,000
就

3981
01:48:05,000 --> 01:48:05,000
沒有辦法

3982
01:48:05,000 --> 01:48:06,000
能夠幫到你了

3983
01:48:06,000 --> 01:48:07,000
所以

3984
01:48:07,000 --> 01:48:08,000
後來就有另外一種

3985
01:48:08,000 --> 01:48:09,000
另外一個工具

3986
01:48:09,000 --> 01:48:10,000
叫做 Bewild out

3987
01:48:10,000 --> 01:48:12,000
這個你估計沒有用過

3988
01:48:12,000 --> 01:48:13,000
其實我之前也沒有聽說過

3989
01:48:13,000 --> 01:48:15,000
我也是去了支付之後

3990
01:48:15,000 --> 01:48:16,000
發現

3991
01:48:16,000 --> 01:48:18,000
還有這麼一個東西

3992
01:48:18,000 --> 01:48:19,000
這個東西來源

3993
01:48:19,000 --> 01:48:20,000
其實還挺古老的

3994
01:48:20,000 --> 01:48:22,000
你知道 Paypal 在很

3995
01:48:22,000 --> 01:48:24,000
外部 1.部

3996
01:48:24,000 --> 01:48:26,000
外部 0.9 的時代

3997
01:48:26,000 --> 01:48:28,000
出現過一個叫做

3998
01:48:28,000 --> 01:48:29,000
Zoop 的這麼一個機構

3999
01:48:29,000 --> 01:48:30,000
你機還

4000
01:48:30,000 --> 01:48:32,000
你不知道你有印象嗎

4001
01:48:32,000 --> 01:48:33,000
Zoop

4002
01:48:33,000 --> 01:48:33,000
我知道

4003
01:48:33,000 --> 01:48:34,000
我知道

4004
01:48:34,000 --> 01:48:35,000
而且號稱

4005
01:48:35,000 --> 01:48:37,000
Zoop 是當時

4006
01:48:38,000 --> 01:48:39,000
如日中天的

4007
01:48:39,000 --> 01:48:40,000
一個

4008
01:48:40,000 --> 01:48:42,000
一個使勢級偉大的

4009
01:48:43,000 --> 01:48:44,000
酷

4010
01:48:44,000 --> 01:48:44,000
對

4011
01:48:44,000 --> 01:48:45,000
是這樣嗎

4012
01:48:45,000 --> 01:48:46,000
它是一個

4013
01:48:46,000 --> 01:48:48,000
它是一個 Sam

4014
01:48:48,000 --> 01:48:49,000
說它是 Sam As 好像

4015
01:48:49,000 --> 01:48:50,000
不太嚴謹

4016
01:48:51,000 --> 01:48:52,000
它

4017
01:48:52,000 --> 01:48:53,000
其實算人

4018
01:48:53,000 --> 01:48:54,000
就算一個 Framework

4019
01:48:54,000 --> 01:48:55,000
Tucket

4020
01:48:55,000 --> 01:48:57,000
它自稱一個 Tucket

4021
01:48:57,000 --> 01:48:58,000
它是一個本來是用來

4022
01:48:58,000 --> 01:49:00,000
建一個 Sam As 的一個 Framework

4023
01:49:00,000 --> 01:49:01,000
對

4024
01:49:01,000 --> 01:49:02,000
確實是可以做的理解

4025
01:49:02,000 --> 01:49:03,000
它之後來它

4026
01:49:03,000 --> 01:49:04,000
就越來個勇總

4027
01:49:04,000 --> 01:49:06,000
已經可以做很多事情了

4028
01:49:06,000 --> 01:49:07,000
然後

4029
01:49:07,000 --> 01:49:08,000
Bildout 這個工具

4030
01:49:08,000 --> 01:49:09,000
其實就是最開始

4031
01:49:09,000 --> 01:49:09,000
如果我們

4032
01:49:09,000 --> 01:49:10,000
如果我們一起做的話

4033
01:49:10,000 --> 01:49:11,000
就是 Zoop 那幫人

4034
01:49:11,000 --> 01:49:12,000
為了解決

4035
01:49:12,000 --> 01:49:13,000
他們那個

4036
01:49:13,000 --> 01:49:14,000
G 5 B 的 Framework

4037
01:49:14,000 --> 01:49:15,000
安裝和

4038
01:49:15,000 --> 01:49:16,000
這個

4039
01:49:16,000 --> 01:49:17,000
Kavada 問題

4040
01:49:17,000 --> 01:49:18,000
就寫出來的

4041
01:49:18,000 --> 01:49:20,000
這麼一個工具

4042
01:49:20,000 --> 01:49:21,000
然後這個工具的特色

4043
01:49:21,000 --> 01:49:22,000
是什麼呢

4044
01:49:22,000 --> 01:49:24,000
它能支支這種

4045
01:49:24,000 --> 01:49:26,000
代

4046
01:49:26,000 --> 01:49:27,000
Native binding

4047
01:49:27,000 --> 01:49:29,000
Payton 的

4048
01:49:29,000 --> 01:49:29,000
Bild 安裝

4049
01:49:29,000 --> 01:49:30,000
因為這裡說起來

4050
01:49:30,000 --> 01:49:31,000
就要提另外一件事情

4051
01:49:31,000 --> 01:49:32,000
就是比如說

4052
01:49:32,000 --> 01:49:33,000
這個 Payton Image Library

4053
01:49:33,000 --> 01:49:35,000
它雖然說是一個飛純

4054
01:49:35,000 --> 01:49:37,000
它雖然說需要有 0.8 點它

4055
01:49:37,000 --> 01:49:38,000
但你安裝的時候

4056
01:49:38,000 --> 01:49:40,000
並不是安裝它自己

4057
01:49:40,000 --> 01:49:41,000
本身這麼簡單

4058
01:49:41,000 --> 01:49:43,000
你還得再裝一些其他

4059
01:49:43,000 --> 01:49:44,000
C 的一些 C 的

4060
01:49:44,000 --> 01:49:46,000
例如 PNG

4061
01:49:46,000 --> 01:49:47,000
什麼那些不知道的

4062
01:49:47,000 --> 01:49:48,000
然後在

4063
01:49:48,000 --> 01:49:49,000
Linux 上面說話

4064
01:49:49,000 --> 01:49:50,000
你就要通過

4065
01:49:50,000 --> 01:49:52,000
就在你裝這個 PIO 之前

4066
01:49:52,000 --> 01:49:53,000
你還得用什麼

4067
01:49:53,000 --> 01:49:55,000
ATT 或者是樣本的方式

4068
01:49:55,000 --> 01:49:57,000
把那些的依賴

4069
01:49:57,000 --> 01:49:58,000
給先給裝上去

4070
01:49:58,000 --> 01:50:00,000
然後你再可以再裝這個

4071
01:50:00,000 --> 01:50:01,000
Payton Image Library

4072
01:50:01,000 --> 01:50:02,000
才可以成功

4073
01:50:02,000 --> 01:50:03,000
但是這樣的話

4074
01:50:03,000 --> 01:50:04,000
就是其實

4075
01:50:04,000 --> 01:50:06,000
手工操作是非常繁瑣

4076
01:50:06,000 --> 01:50:08,000
和容易出錯的一個過程

4077
01:50:08,000 --> 01:50:09,000
你可以

4078
01:50:09,000 --> 01:50:09,000
如果你不信

4079
01:50:09,000 --> 01:50:11,000
你可以試一下

4080
01:50:11,000 --> 01:50:13,000
我對此還是有所理由的

4081
01:50:13,000 --> 01:50:14,000
因為裝

4082
01:50:14,000 --> 01:50:16,000
之前我說的 IPayton 的 QT console

4083
01:50:16,000 --> 01:50:17,000
其實也是這麼一個

4084
01:50:17,000 --> 01:50:19,000
為什麼你小鮮要用

4085
01:50:19,000 --> 01:50:22,000
包館理工具去安裝一些

4086
01:50:22,000 --> 01:50:23,000
Library

4087
01:50:23,000 --> 01:50:25,000
然後再安裝

4088
01:50:25,000 --> 01:50:26,000
對 QT 之類

4089
01:50:26,000 --> 01:50:27,000
然後再去

4090
01:50:27,000 --> 01:50:29,000
再用 Payton 去安裝

4091
01:50:29,000 --> 01:50:30,000
對應的首先

4092
01:50:30,000 --> 01:50:31,000
然後還有什麼

4093
01:50:31,000 --> 01:50:32,000
Zero MQ 之類的東西

4094
01:50:32,000 --> 01:50:34,000
都一個一個都裝上

4095
01:50:34,000 --> 01:50:34,000
對

4096
01:50:34,000 --> 01:50:36,000
其實我當時在做過用的事

4097
01:50:36,000 --> 01:50:38,000
也是因為最主要的原因

4098
01:50:38,000 --> 01:50:39,000
就是常識的

4099
01:50:39,000 --> 01:50:42,000
用 Zero MQ 要裝一些 C 的東西

4100
01:50:43,000 --> 01:50:45,000
然後 PIO 到底可以用一個

4101
01:50:45,000 --> 01:50:45,000
這種方法

4102
01:50:45,000 --> 01:50:46,000
它就可以解決

4103
01:50:46,000 --> 01:50:48,000
它可以指定一些腳本

4104
01:50:48,000 --> 01:50:50,000
在你安裝某個包之前

4105
01:50:50,000 --> 01:50:51,000
你可以先生命它依賴

4106
01:50:51,000 --> 01:50:54,000
哪些非 Payton 的東西

4107
01:50:54,000 --> 01:50:55,000
然後系統先幫你安裝好

4108
01:50:55,000 --> 01:50:57,000
例如支持一個 APT 什麼的

4109
01:50:57,000 --> 01:50:58,000
幫你裝好

4110
01:50:58,000 --> 01:50:58,000
然後你在裝

4111
01:50:58,000 --> 01:51:00,000
然後再報你過程

4112
01:51:00,000 --> 01:51:01,000
但是

4113
01:51:01,000 --> 01:51:02,000
Payton 是一個神一樣的存在

4114
01:51:02,000 --> 01:51:03,000
你知道嗎

4115
01:51:03,000 --> 01:51:04,000
當時現在我不知道情況

4116
01:51:04,000 --> 01:51:05,000
會不會有好轉一些

4117
01:51:05,000 --> 01:51:06,000
但是我用的時候

4118
01:51:06,000 --> 01:51:07,000
我想去學它

4119
01:51:07,000 --> 01:51:09,000
就是一個三無產品

4120
01:51:09,000 --> 01:51:10,000
就是你刷它網上之後

4121
01:51:10,000 --> 01:51:10,000
你知道

4122
01:51:10,000 --> 01:51:11,000
你看不見

4123
01:51:11,000 --> 01:51:14,000
沒有沒有官方文的

4124
01:51:14,000 --> 01:51:15,000
所有的人找到的

4125
01:51:15,000 --> 01:51:16,000
都是指於網上

4126
01:51:16,000 --> 01:51:17,000
其實拉了一些教程

4127
01:51:18,000 --> 01:51:18,000
然後

4128
01:51:18,000 --> 01:51:19,000
你不知道這個東西

4129
01:51:19,000 --> 01:51:20,000
最開始

4130
01:51:20,000 --> 01:51:21,000
不知道是誰在維護的

4131
01:51:21,000 --> 01:51:22,000
因為它現在沒有

4132
01:51:22,000 --> 01:51:24,000
沒有說這個東西是找

4133
01:51:24,000 --> 01:51:25,000
你都不知道去找誰

4134
01:51:25,000 --> 01:51:26,000
它有一個 Malenelead

4135
01:51:26,000 --> 01:51:27,000
然後那

4136
01:51:27,000 --> 01:51:28,000
那

4137
01:51:28,000 --> 01:51:29,000
那你沒有辦法在這兒

4138
01:51:29,000 --> 01:51:31,000
那三無產品

4139
01:51:31,000 --> 01:51:32,000
我們可以定義一下

4140
01:51:32,000 --> 01:51:33,000
三無產的道理

4141
01:51:33,000 --> 01:51:33,000
哪三無

4142
01:51:33,000 --> 01:51:34,000
沒有文檔是肯定的

4143
01:51:34,000 --> 01:51:35,000
沒有文檔

4144
01:51:35,000 --> 01:51:36,000
沒有這個

4145
01:51:36,000 --> 01:51:38,000
穩定的開發者

4146
01:51:38,000 --> 01:51:38,000
然後你也

4147
01:51:38,000 --> 01:51:39,000
那除了問題

4148
01:51:39,000 --> 01:51:40,000
不知道去哪裡

4149
01:51:40,000 --> 01:51:40,000
問

4150
01:51:43,000 --> 01:51:44,000
無文檔

4151
01:51:44,000 --> 01:51:45,000
無文定維護者

4152
01:51:45,000 --> 01:51:46,000
還有一個無

4153
01:51:46,000 --> 01:51:48,000
就是不知道去哪裡

4154
01:51:48,000 --> 01:51:48,000
問問題

4155
01:51:48,000 --> 01:51:49,000
除了問題找誰

4156
01:51:49,000 --> 01:51:50,000
不知道

4157
01:51:50,000 --> 01:51:51,000
無社區

4158
01:51:51,000 --> 01:51:52,000
對

4159
01:51:52,000 --> 01:51:53,000
然後就發現

4160
01:51:53,000 --> 01:51:53,000
哇

4161
01:51:53,000 --> 01:51:54,000
這個也可以

4162
01:51:54,000 --> 01:51:56,000
而且這既然是

4163
01:51:56,000 --> 01:51:57,000
我所知道的

4164
01:51:57,000 --> 01:51:59,000
能夠解決這個 Payton

4165
01:52:00,000 --> 01:52:01,000
這種就按照

4166
01:52:01,000 --> 01:52:02,000
Fayton Payton

4167
01:52:02,000 --> 01:52:04,000
包得唯一的一個比較好的

4168
01:52:04,000 --> 01:52:05,000
能用的工具

4169
01:52:05,000 --> 01:52:06,000
都不能說它好了

4170
01:52:06,000 --> 01:52:07,000
能用的自動工具

4171
01:52:07,000 --> 01:52:08,000
對

4172
01:52:08,000 --> 01:52:09,000
然後它的體驗

4173
01:52:09,000 --> 01:52:10,000
是相當使用體驗上

4174
01:52:10,000 --> 01:52:11,000
都糟糕的

4175
01:52:11,000 --> 01:52:12,000
它的配置文件

4176
01:52:12,000 --> 01:52:14,000
是一個點 iNi 的文件

4177
01:52:15,000 --> 01:52:16,000
What

4178
01:52:16,000 --> 01:52:17,000
然後你需要在

4179
01:52:17,000 --> 01:52:18,000
或者是什麼背景

4180
01:52:18,000 --> 01:52:19,000
什麼什麼

4181
01:52:19,000 --> 01:52:19,000
你自己想想

4182
01:52:19,000 --> 01:52:20,000
這麼古老的

4183
01:52:20,000 --> 01:52:22,000
Anson 的東西

4184
01:52:22,000 --> 01:52:22,000
就有出現這種情況

4185
01:52:22,000 --> 01:52:23,000
也不奇怪了

4186
01:52:23,000 --> 01:52:24,000
就還好

4187
01:52:24,000 --> 01:52:24,000
還好

4188
01:52:24,000 --> 01:52:26,000
可以不是太糟糕

4189
01:52:26,000 --> 01:52:27,000
但糟糕的是

4190
01:52:27,000 --> 01:52:28,000
你需要在這個 iNi

4191
01:52:28,000 --> 01:52:29,000
文件裡面

4192
01:52:29,000 --> 01:52:30,000
你按文件的格式

4193
01:52:30,000 --> 01:52:31,000
你想應該

4194
01:52:31,000 --> 01:52:32,000
你很明白

4195
01:52:32,000 --> 01:52:33,000
就是有它分幾個

4196
01:52:33,000 --> 01:52:34,000
做一小節

4197
01:52:34,000 --> 01:52:34,000
一個 Sex

4198
01:52:34,000 --> 01:52:35,000
每個 Sex

4199
01:52:35,000 --> 01:52:35,000
是一個

4200
01:52:35,000 --> 01:52:36,000
放過號

4201
01:52:36,000 --> 01:52:37,000
標分開

4202
01:52:37,000 --> 01:52:38,000
一個 Sex

4203
01:52:38,000 --> 01:52:39,000
不管怎麼說

4204
01:52:39,000 --> 01:52:40,000
還是要別 XM or 好

4205
01:52:40,000 --> 01:52:41,000
對

4206
01:52:41,000 --> 01:52:42,000
還是別 XM or 好一點

4207
01:52:42,000 --> 01:52:43,000
但是

4208
01:52:43,000 --> 01:52:45,000
他們把這個已經中到了極致了

4209
01:52:45,000 --> 01:52:47,000
然後每個 Sex 裡面

4210
01:52:47,000 --> 01:52:48,000
是它是一個

4211
01:52:48,000 --> 01:52:50,000
KeyValue 的

4212
01:52:50,000 --> 01:52:51,000
一個 Payton

4213
01:52:51,000 --> 01:52:51,000
一個 Due

4214
01:52:51,000 --> 01:52:53,000
就是一個煮鍵

4215
01:52:53,000 --> 01:52:54,000
然後每個數值

4216
01:52:55,000 --> 01:52:56,000
為了解決

4217
01:52:56,000 --> 01:52:58,000
錶到的中間的各種問題

4218
01:52:58,000 --> 01:53:00,000
你需要在裡面插入

4219
01:53:00,000 --> 01:53:02,000
用一些很詭異的方法

4220
01:53:02,000 --> 01:53:03,000
就寫

4221
01:53:03,000 --> 01:53:04,000
版本字幅刷

4222
01:53:04,000 --> 01:53:06,000
你需要在裡面插入這個

4223
01:53:06,000 --> 01:53:08,000
校角本

4224
01:53:09,000 --> 01:53:11,000
在安安裡面插入校角本

4225
01:53:11,000 --> 01:53:13,000
這是什麼黑魔法

4226
01:53:13,000 --> 01:53:13,000
所以你知道

4227
01:53:13,000 --> 01:53:15,000
錶到時候都沒有一個

4228
01:53:15,000 --> 01:53:16,000
慘痛的存在了

4229
01:53:16,000 --> 01:53:17,000
對

4230
01:53:17,000 --> 01:53:18,000
Holy

4231
01:53:18,000 --> 01:53:20,000
這是我一直對它

4232
01:53:20,000 --> 01:53:21,000
吐槽不能

4233
01:53:21,000 --> 01:53:22,000
但是又不得不用的

4234
01:53:22,000 --> 01:53:25,000
一個可能令人舉上的攻擊

4235
01:53:25,000 --> 01:53:27,000
可是我剛剛在 Buildout

4236
01:53:27,000 --> 01:53:29,000
我剛剛在 Github 上面

4237
01:53:29,000 --> 01:53:29,000
發現了 Buildout

4238
01:53:29,000 --> 01:53:30,000
SlashBuildout

4239
01:53:30,000 --> 01:53:31,000
這個 Repulsory

4240
01:53:33,000 --> 01:53:34,000
什麼方法

4241
01:53:34,000 --> 01:53:34,000
對

4242
01:53:34,000 --> 01:53:36,000
這難道是它那麼官方的庫嗎

4243
01:53:36,000 --> 01:53:37,000
所以它也去了

4244
01:53:37,000 --> 01:53:38,000
去了 Github 了

4245
01:53:38,000 --> 01:53:41,000
是那時候也可能事情有所好轉

4246
01:53:42,000 --> 01:53:43,000
有可能

4247
01:53:43,000 --> 01:53:43,000
好吧

4248
01:53:43,000 --> 01:53:45,000
但是起碼

4249
01:53:45,000 --> 01:53:46,000
你可以去它的這個

4250
01:53:46,000 --> 01:53:48,000
什麼 Buildout.org 這個網站

4251
01:53:49,000 --> 01:53:50,000
你可以發現它有一個 Lur

4252
01:53:50,000 --> 01:53:51,000
這個選項

4253
01:53:52,000 --> 01:53:53,000
裡面就是一 Due toTorial

4254
01:53:53,000 --> 01:53:54,000
然後完了

4255
01:53:55,000 --> 01:53:57,000
然後它教你

4256
01:53:57,000 --> 01:53:59,000
用它的唯一的方式

4257
01:53:59,000 --> 01:54:00,000
就是給你一堆例子

4258
01:54:03,000 --> 01:54:06,000
而且在 Github Pulsory 裡面的

4259
01:54:07,000 --> 01:54:08,000
貢獻最多的這個人

4260
01:54:08,000 --> 01:54:10,000
叫做 Gim Fulton

4261
01:54:10,000 --> 01:54:13,000
它顯示的工作地點是

4262
01:54:13,000 --> 01:54:15,000
Zoop Corporation

4263
01:54:16,000 --> 01:54:18,000
所以有可能它就是

4264
01:54:18,000 --> 01:54:20,000
你一直哭鼓在審找的

4265
01:54:20,000 --> 01:54:21,000
主要維護車

4266
01:54:21,000 --> 01:54:22,000
對

4267
01:54:22,000 --> 01:54:23,000
因為這個編號是它寫的

4268
01:54:23,000 --> 01:54:24,000
最開始是它

4269
01:54:24,000 --> 01:54:26,000
但是我我相當確定

4270
01:54:26,000 --> 01:54:27,000
應該沒有它沒有

4271
01:54:27,000 --> 01:54:29,000
再更新這個東西了

4272
01:54:29,000 --> 01:54:29,000
OK

4273
01:54:29,000 --> 01:54:30,000
所以這是一個

4274
01:54:30,000 --> 01:54:32,000
半死不活的項目

4275
01:54:32,000 --> 01:54:33,000
靠著社區裡

4276
01:54:33,000 --> 01:54:34,000
不知道誰在維護

4277
01:54:34,000 --> 01:54:35,000
愛你

4278
01:54:36,000 --> 01:54:38,000
就像有魂一樣的人

4279
01:54:38,000 --> 01:54:39,000
但是你又不得不用它

4280
01:54:39,000 --> 01:54:41,000
而且你發現

4281
01:54:41,000 --> 01:54:43,000
翻號你今天能夠

4282
01:54:43,000 --> 01:54:45,000
用它來還能用

4283
01:54:47,000 --> 01:54:48,000
所以轉件不再新

4284
01:54:48,000 --> 01:54:50,000
能用就行嗎

4285
01:54:51,000 --> 01:54:52,000
但是其實是很多看的

4286
01:54:52,000 --> 01:54:53,000
今天會出問題

4287
01:54:53,000 --> 01:54:54,000
不過它還有一些比較

4288
01:54:54,000 --> 01:54:56,000
令人就是

4289
01:54:56,000 --> 01:54:57,000
對於一個這麼古老的軟件

4290
01:54:57,000 --> 01:55:00,000
它有些令人滿經驗的特性的

4291
01:55:00,000 --> 01:55:01,000
比如說剛剛講的

4292
01:55:01,000 --> 01:55:03,000
那些什麼 PIP 那些工具

4293
01:55:03,000 --> 01:55:05,000
就是經常那個拍皮

4294
01:55:05,000 --> 01:55:06,000
那個主張掛了

4295
01:55:06,000 --> 01:55:07,000
不就嚇不了了嗎

4296
01:55:07,000 --> 01:55:09,000
比如說它今天有自帶的

4297
01:55:09,000 --> 01:55:11,000
這種本地緩存機

4298
01:55:11,000 --> 01:55:11,000
你知道嗎

4299
01:55:11,000 --> 01:55:12,000
就是你一旦

4300
01:55:12,000 --> 01:55:14,000
下載過某一個安裝

4301
01:55:14,000 --> 01:55:16,000
用過 Referego 某個版本

4302
01:55:16,000 --> 01:55:18,000
它會把那個版本的這個原碼

4303
01:55:18,000 --> 01:55:20,000
就從拍皮或者是

4304
01:55:20,000 --> 01:55:21,000
馬個地方抓回來的

4305
01:55:21,000 --> 01:55:23,000
在你本地的它管理的一個

4306
01:55:23,000 --> 01:55:26,000
隱藏的木路下面去存起來

4307
01:55:26,000 --> 01:55:27,000
叫你下次裝它的

4308
01:55:27,000 --> 01:55:28,000
下次在運行表達的時候

4309
01:55:28,000 --> 01:55:30,000
它就不用再去往上抓

4310
01:55:30,000 --> 01:55:31,000
而且本地從裡面

4311
01:55:31,000 --> 01:55:33,000
附置一份過來就好了

4312
01:55:33,000 --> 01:55:34,000
OK

4313
01:55:34,000 --> 01:55:34,000
有什麼好不驚訝

4314
01:55:34,000 --> 01:55:36,000
因為妹妹也有這個故事

4315
01:55:36,000 --> 01:55:36,000
對

4316
01:55:36,000 --> 01:55:37,000
但是你想它是一個

4317
01:55:37,000 --> 01:55:38,000
多古老的軟件

4318
01:55:38,000 --> 01:55:39,000
就是有這種故事

4319
01:55:39,000 --> 01:55:41,000
還是相當不錯的

4320
01:55:41,000 --> 01:55:43,000
挺好的一個事情

4321
01:55:43,000 --> 01:55:44,000
但是它的使用體驗實在是

4322
01:55:44,000 --> 01:55:46,000
它還糟糕了

4323
01:55:47,000 --> 01:55:48,000
好

4324
01:55:48,000 --> 01:55:50,000
我對拍照的補操

4325
01:55:50,000 --> 01:55:51,000
就為了不要拉開

4326
01:55:51,000 --> 01:55:53,000
都重痕吐槽到此為止

4327
01:55:54,000 --> 01:55:55,000
還好吧

4328
01:55:55,000 --> 01:55:57,000
只要我們是保持自黑的自太

4329
01:55:57,000 --> 01:55:59,000
應該就不會招來太多人

4330
01:55:59,000 --> 01:56:00,000
不要黑別人

4331
01:56:00,000 --> 01:56:01,000
黑自己就行了

4332
01:56:01,000 --> 01:56:02,000
對

4333
01:56:02,000 --> 01:56:05,000
而我們來看一看敵對陣營

4334
01:56:05,000 --> 01:56:05,000
對

4335
01:56:05,000 --> 01:56:06,000
對 陣營

4336
01:56:06,000 --> 01:56:08,000
現在我已經叛逃了

4337
01:56:08,000 --> 01:56:09,000
我已經加入了這個陣營

4338
01:56:10,000 --> 01:56:11,000
node

4339
01:56:11,000 --> 01:56:13,000
這個加拿大 Script

4340
01:56:13,000 --> 01:56:15,000
你覺得 node 是敵對陣營嗎

4341
01:56:15,000 --> 01:56:15,000
我不覺得

4342
01:56:15,000 --> 01:56:17,000
我覺得 node 是兄弟陣營

4343
01:56:17,000 --> 01:56:17,000
不是嗎

4344
01:56:17,000 --> 01:56:19,000
你那敵對陣營是哪裡

4345
01:56:19,000 --> 01:56:19,000
如比的

4346
01:56:19,000 --> 01:56:21,000
你那是如比的

4347
01:56:21,000 --> 01:56:23,000
其實如比我不是很熟

4348
01:56:23,000 --> 01:56:23,000
我也不熟

4349
01:56:23,000 --> 01:56:24,000
但至少

4350
01:56:24,000 --> 01:56:26,000
Zian 這個

4351
01:56:26,000 --> 01:56:29,000
包括有系統在我有限的使用經驗

4352
01:56:29,000 --> 01:56:32,000
裡面要比拍子的體驗好很多

4353
01:56:32,000 --> 01:56:34,000
首先那就一套對了

4354
01:56:36,000 --> 01:56:39,000
不像拍子那種四分五類的搞五套出來

4355
01:56:39,000 --> 01:56:39,000
對

4356
01:56:39,000 --> 01:56:40,000
如比社區

4357
01:56:40,000 --> 01:56:43,000
不管怎麼說最好的一年就是團結

4358
01:56:43,000 --> 01:56:45,000
所以我們拍子的社區做不到

4359
01:56:45,000 --> 01:56:46,000
對 就是我覺得他們

4360
01:56:46,000 --> 01:56:49,000
更加樂於去

4361
01:56:49,000 --> 01:56:51,000
為了達成一個共識

4362
01:56:51,000 --> 01:56:52,000
去改變自己

4363
01:56:52,000 --> 01:56:53,000
對

4364
01:56:53,000 --> 01:56:54,000
這點就挺好的

4365
01:56:55,000 --> 01:56:56,000
所以這部的體驗

4366
01:56:56,000 --> 01:56:57,000
我其實體驗不多了

4367
01:56:57,000 --> 01:56:58,000
你有什麼體驗嗎

4368
01:57:00,000 --> 01:57:02,000
我老實說我也不是特別

4369
01:57:02,000 --> 01:57:03,000
只不過

4370
01:57:06,000 --> 01:57:10,000
如比簡直是你接觸一點稍微新一點的東西

4371
01:57:10,000 --> 01:57:12,000
是要不開那個一個工具嗎

4372
01:57:12,000 --> 01:57:12,000
那最簡單的

4373
01:57:12,000 --> 01:57:13,000
剛剛講起來

4374
01:57:13,000 --> 01:57:15,000
上面其他那個 HomePro 是如比的

4375
01:57:15,000 --> 01:57:16,000
你必須

4376
01:57:16,000 --> 01:57:17,000
HomePro is Ruby 的

4377
01:57:17,000 --> 01:57:18,000
然後

4378
01:57:19,000 --> 01:57:21,000
比如說寫那個 IOS

4379
01:57:21,000 --> 01:57:22,000
IOS 上面的包管工具

4380
01:57:22,000 --> 01:57:25,000
或者 Object C 的包管工具

4381
01:57:25,000 --> 01:57:27,000
CocoPods

4382
01:57:27,000 --> 01:57:28,000
也是 Ruby 顯的

4383
01:57:28,000 --> 01:57:29,000
What

4384
01:57:29,000 --> 01:57:30,000
Yes

4385
01:57:30,000 --> 01:57:31,000
我沒有說錯

4386
01:57:31,000 --> 01:57:34,000
CocoPods 本身是一個 Ruby Jam

4387
01:57:34,000 --> 01:57:34,000
神奇嗎

4388
01:57:34,000 --> 01:57:35,000
OK

4389
01:57:35,000 --> 01:57:38,000
那他其實跟 HomePro 形式比較類似了嗎

4390
01:57:38,000 --> 01:57:39,000
還是就他的

4391
01:57:39,000 --> 01:57:42,000
CocoPods 一個 Pods 文件也是一個 Ruby 的文件嗎

4392
01:57:44,000 --> 01:57:45,000
應該是這樣了吧

4393
01:57:45,000 --> 01:57:47,000
我忘了 Pods

4394
01:57:48,000 --> 01:57:51,000
你正面說我還真 Pods file 的語法

4395
01:57:51,000 --> 01:57:52,000
是 Ruby 的語法嗎

4396
01:57:52,000 --> 01:57:53,000
還是一個 JSON

4397
01:57:53,000 --> 01:57:54,000
還是一個什麼東西

4398
01:57:54,000 --> 01:57:55,000
他是一個

4399
01:57:55,000 --> 01:57:57,000
也是用 Ruby 寫的那個

4400
01:57:57,000 --> 01:57:58,000
DSL

4401
01:57:58,000 --> 01:57:59,000
DSL

4402
01:57:59,000 --> 01:58:01,000
這個 Ruby 開完的最喜歡做的事情

4403
01:58:01,000 --> 01:58:02,000
就是寫 DSL

4404
01:58:03,000 --> 01:58:06,000
Ruby 畢竟是一個非常適合寫 DSL 的原因

4405
01:58:06,000 --> 01:58:06,000
這不能不能夠

4406
01:58:06,000 --> 01:58:08,000
你知道這句話我聽的最所有地方是在哪裡嗎

4407
01:58:09,000 --> 01:58:10,000
SKARA

4408
01:58:10,000 --> 01:58:12,000
SKARA 寫 DSL

4409
01:58:12,000 --> 01:58:13,000
對 Ruby 寫 DSL

4410
01:58:13,000 --> 01:58:14,000
你還覺得

4411
01:58:14,000 --> 01:58:16,000
從來看出來的一眼就能看上是一個 Ruby 的文件

4412
01:58:16,000 --> 01:58:17,000
SKARA 寫 DSL

4413
01:58:17,000 --> 01:58:18,000
我們 S

4414
01:58:18,000 --> 01:58:19,000
你聽我解釋

4415
01:58:19,000 --> 01:58:20,000
就是說你說 Ruby 寫 DSL

4416
01:58:20,000 --> 01:58:21,000
他還有一些東西

4417
01:58:21,000 --> 01:58:24,000
是一個很明顯的 Ruby 的和語法很記在裡面對吧

4418
01:58:24,000 --> 01:58:25,000
你看看就是他是一個 Clash

4419
01:58:25,000 --> 01:58:28,000
然後他那個什麼 Block 的語法就是

4420
01:58:28,000 --> 01:58:30,000
很鮮明的特點對吧

4421
01:58:30,000 --> 01:58:31,000
SKARA 寫出來 DSL

4422
01:58:31,000 --> 01:58:33,000
你甚至看不說他有時候你不仔細看

4423
01:58:33,000 --> 01:58:35,000
你還看不出來是 SKARA

4424
01:58:36,000 --> 01:58:37,000
這是他的優點是缺點

4425
01:58:37,000 --> 01:58:39,000
我總有的樂聽就像缺點

4426
01:58:39,000 --> 01:58:40,000
這都是

4427
01:58:40,000 --> 01:58:41,000
就是有點就是說

4428
01:58:41,000 --> 01:58:43,000
他能夠可以讓你定一些很詭異的原因

4429
01:58:43,000 --> 01:58:45,000
他能夠變成非常強的

4430
01:58:45,000 --> 01:58:46,000
對非常強的

4431
01:58:46,000 --> 01:58:48,000
他可以編的連

4432
01:58:48,000 --> 01:58:49,000
編的連連親爹都不認識的

4433
01:58:49,000 --> 01:58:50,000
對

4434
01:58:50,000 --> 01:58:53,000
就是 SKARA 寫的 DSL

4435
01:58:53,000 --> 01:58:57,000
如果你不知道 DSL 的實現方式或者無板子怎麼樣

4436
01:58:57,000 --> 01:58:58,000
你根本別想

4437
01:58:58,000 --> 01:58:59,000
你別想往下寫 H&G

4438
01:58:59,000 --> 01:59:00,000
根本不見了

4439
01:59:00,000 --> 01:59:02,000
對

4440
01:59:02,000 --> 01:59:03,000
有這種情況發生

4441
01:59:03,000 --> 01:59:05,000
還有什麼呢

4442
01:59:05,000 --> 01:59:08,000
我前兩天還用了一個什麼東西

4443
01:59:08,000 --> 01:59:10,000
Rake file

4444
01:59:10,000 --> 01:59:12,000
Rake file 這種

4445
01:59:12,000 --> 01:59:14,000
這種

4446
01:59:14,000 --> 01:59:16,000
也可以理解為 DSL

4447
01:59:16,000 --> 01:59:17,000
本身也是一個 DSL

4448
01:59:17,000 --> 01:59:18,000
說什麼

4449
01:59:18,000 --> 01:59:20,000
Rake file 這種

4450
01:59:20,000 --> 01:59:21,000
或者 Rake 這個工具

4451
01:59:21,000 --> 01:59:23,000
在很多開源工具裡面

4452
01:59:23,000 --> 01:59:25,000
已經取代了

4453
01:59:25,000 --> 01:59:27,000
MAKE 或者是

4454
01:59:27,000 --> 01:59:32,000
其他一些更加冷屁的工具

4455
01:59:32,000 --> 01:59:33,000
對

4456
01:59:33,000 --> 01:59:35,000
成為了一種默認的安裝工具

4457
01:59:35,000 --> 01:59:37,000
或者是默認的執行工具

4458
01:59:37,000 --> 01:59:38,000
這個也挺有意思的

4459
01:59:38,000 --> 01:59:41,000
就比如說前兩天我在 SKARA

4460
01:59:41,000 --> 01:59:42,000
FLO 上面

4461
01:59:42,000 --> 01:59:44,000
後來的封滾草生長

4462
01:59:44,000 --> 01:59:45,000
就是

4463
01:59:45,000 --> 01:59:48,000
提問一個問題

4464
01:59:48,000 --> 01:59:50,000
沒有人關注

4465
01:59:50,000 --> 01:59:51,000
沒有人 Apple

4466
01:59:51,000 --> 01:59:53,000
沒有人回答

4467
01:59:53,000 --> 01:59:54,000
這叫封滾草

4468
01:59:54,000 --> 01:59:57,000
持續過的一個星期對

4469
01:59:57,000 --> 01:59:59,000
然後你就會後來封滾草生長

4470
01:59:59,000 --> 02:00:00,000
因為你提這個問題

4471
02:00:00,000 --> 02:00:01,000
實在是太小眾了

4472
02:00:01,000 --> 02:00:02,000
沒有人去管

4473
02:00:02,000 --> 02:00:05,000
然後三五問題

4474
02:00:05,000 --> 02:00:06,000
對

4475
02:00:06,000 --> 02:00:10,000
然後一個兄弟非常熱心地來幫我

4476
02:00:10,000 --> 02:00:12,000
然後

4477
02:00:12,000 --> 02:00:15,000
就像說一個 Git repository

4478
02:00:15,000 --> 02:00:17,000
說看我做了一個活動程度的例子

4479
02:00:17,000 --> 02:00:18,000
你去試試吧

4480
02:00:18,000 --> 02:00:20,000
然後性高彩的 App

4481
02:00:20,000 --> 02:00:21,000
就跑過去看

4482
02:00:21,000 --> 02:00:23,000
裡面是個 Rake file

4483
02:00:23,000 --> 02:00:26,000
相關問題是一個 Swift 的問題

4484
02:00:26,000 --> 02:00:27,000
但最後

4485
02:00:27,000 --> 02:00:29,000
他三號給了我一個 Rake file

4486
02:00:29,000 --> 02:00:30,000
的解決方案

4487
02:00:30,000 --> 02:00:32,000
而且對它默認

4488
02:00:32,000 --> 02:00:34,000
我是能理解這個東西

4489
02:00:35,000 --> 02:00:37,000
然後我

4490
02:00:37,000 --> 02:00:39,000
御存馬裝來 Rake 一下

4491
02:00:39,000 --> 02:00:40,000
然後出錯

4492
02:00:41,000 --> 02:00:44,000
理解你的痛苦

4493
02:00:44,000 --> 02:00:47,000
就不懂 Ruby

4494
02:00:47,000 --> 02:00:50,000
幾周今就是到處被人欺負的程序

4495
02:00:50,000 --> 02:00:51,000
好吧

4496
02:00:51,000 --> 02:00:52,000
那什麼

4497
02:00:52,000 --> 02:00:53,000
Ruby 的吐槽

4498
02:00:53,000 --> 02:00:54,000
我沒法吐

4499
02:00:54,000 --> 02:00:55,000
因為我不用

4500
02:00:55,000 --> 02:00:56,000
然後也不認受

4501
02:00:56,000 --> 02:00:57,000
如果沒有什麼可吐槽

4502
02:00:57,000 --> 02:00:58,000
到說實話

4503
02:00:58,000 --> 02:00:59,000
真的好

4504
02:00:59,000 --> 02:01:00,000
現在我們來說

4505
02:01:00,000 --> 02:01:02,000
另外一個敵對戰

4506
02:01:02,000 --> 02:01:03,000
No 的

4507
02:01:04,000 --> 02:01:05,000
No 的有一個很不錯

4508
02:01:05,000 --> 02:01:06,000
就在我看來

4509
02:01:06,000 --> 02:01:07,000
在這些

4510
02:01:07,000 --> 02:01:10,000
主流的動態語言裡面

4511
02:01:10,000 --> 02:01:13,000
比較好的實現的一個

4512
02:01:13,000 --> 02:01:14,000
包裹聯器

4513
02:01:14,000 --> 02:01:15,000
這個叫 NPM

4514
02:01:15,000 --> 02:01:16,000
其實它都

4515
02:01:16,000 --> 02:01:18,000
甚至都不完全是一個

4516
02:01:18,000 --> 02:01:19,000
包裹聯器

4517
02:01:19,000 --> 02:01:20,000
它能做一些別的事

4518
02:01:20,000 --> 02:01:22,000
什麼運行

4519
02:01:22,000 --> 02:01:23,000
太的東西

4520
02:01:23,000 --> 02:01:24,000
它不屬太

4521
02:01:24,000 --> 02:01:25,000
能做

4522
02:01:25,000 --> 02:01:26,000
其實還挺好的

4523
02:01:26,000 --> 02:01:27,000
不過我覺得

4524
02:01:27,000 --> 02:01:28,000
它有點像一個

4525
02:01:28,000 --> 02:01:29,000
Configuration pool

4526
02:01:29,000 --> 02:01:30,000
有點

4527
02:01:30,000 --> 02:01:31,000
對

4528
02:01:31,000 --> 02:01:32,000
它也的範疇

4529
02:01:32,000 --> 02:01:33,000
有點還不太一樣

4530
02:01:33,000 --> 02:01:34,000
但是這個先

4531
02:01:34,000 --> 02:01:35,000
不去糾結這些細節了

4532
02:01:35,000 --> 02:01:36,000
但是就說它

4533
02:01:36,000 --> 02:01:37,000
作為這個

4534
02:01:37,000 --> 02:01:38,000
包裹聯器的

4535
02:01:38,000 --> 02:01:39,000
這個優點

4536
02:01:39,000 --> 02:01:40,000
我覺得還是比較明顯的

4537
02:01:40,000 --> 02:01:41,000
就是它

4538
02:01:41,000 --> 02:01:42,000
乾淨

4539
02:01:42,000 --> 02:01:43,000
乾淨什麼意思呢

4540
02:01:43,000 --> 02:01:45,000
就是我們用這個

4541
02:01:45,000 --> 02:01:46,000
PIP 安裝也好

4542
02:01:46,000 --> 02:01:47,000
還是 Ruby 捐滿裝也好

4543
02:01:47,000 --> 02:01:48,000
默認

4544
02:01:48,000 --> 02:01:50,000
實安裝進系統目錄了

4545
02:01:50,000 --> 02:01:51,000
換句話說

4546
02:01:51,000 --> 02:01:52,000
你

4547
02:01:52,000 --> 02:01:53,000
只要沒什麼事

4548
02:01:53,000 --> 02:01:54,000
你只要在這裡裝一個了

4549
02:01:54,000 --> 02:01:55,000
你的系統

4550
02:01:55,000 --> 02:01:56,000
你的系統

4551
02:01:56,000 --> 02:01:57,000
這個系統的

4552
02:01:57,000 --> 02:01:58,000
拍成那個

4553
02:01:58,000 --> 02:01:59,000
包的目錄

4554
02:01:59,000 --> 02:02:01,000
就已經被打引號的污染了

4555
02:02:01,000 --> 02:02:02,000
沒法再回到

4556
02:02:02,000 --> 02:02:03,000
之前那個狀態了

4557
02:02:03,000 --> 02:02:04,000
特別是你用了

4558
02:02:04,000 --> 02:02:05,000
拍成那種

4559
02:02:05,000 --> 02:02:06,000
只可因素

4560
02:02:06,000 --> 02:02:07,000
不可因素的狀態了

4561
02:02:07,000 --> 02:02:09,000
這種供給的情況下

4562
02:02:09,000 --> 02:02:11,000
JAM 可以洋因素嗎

4563
02:02:11,000 --> 02:02:12,000
可以啊

4564
02:02:12,000 --> 02:02:13,000
JAM 等等

4565
02:02:13,000 --> 02:02:14,000
JAM 當然可以按起到

4566
02:02:14,000 --> 02:02:16,000
而且 JAM 是可以裝在

4567
02:02:16,000 --> 02:02:18,000
本身的那個

4568
02:02:18,000 --> 02:02:19,000
Locon 的

4569
02:02:19,000 --> 02:02:20,000
加目錄

4570
02:02:20,000 --> 02:02:21,000
我們或者是

4571
02:02:21,000 --> 02:02:22,000
本地目錄嗎

4572
02:02:22,000 --> 02:02:23,000
直接裝在

4573
02:02:23,000 --> 02:02:24,000
那個 Windows 下面的

4574
02:02:24,000 --> 02:02:25,000
但是它的墨

4575
02:02:25,000 --> 02:02:27,000
也還是裝到那個系統吧

4576
02:02:27,000 --> 02:02:28,000
是嗎

4577
02:02:28,000 --> 02:02:29,000
墨

4578
02:02:29,000 --> 02:02:30,000
這個系統

4579
02:02:30,000 --> 02:02:31,000
就氣董可能

4580
02:02:31,000 --> 02:02:32,000
一個用戶嘛

4581
02:02:32,000 --> 02:02:33,000
或者是你比如

4582
02:02:33,000 --> 02:02:34,000
速度的話

4583
02:02:34,000 --> 02:02:35,000
就是系統跟那個

4584
02:02:35,000 --> 02:02:36,000
那些什麼

4585
02:02:36,000 --> 02:02:37,000
就是在 Locon 的

4586
02:02:37,000 --> 02:02:38,000
這不是一個非常

4587
02:02:38,000 --> 02:02:39,000
就是

4588
02:02:39,000 --> 02:02:41,000
如果你用 Bandler 的話

4589
02:02:41,000 --> 02:02:43,000
Bandler 本身是個 JAM

4590
02:02:43,000 --> 02:02:47,000
然後你用 Bandler 來管理你的 JAM 依賴的話

4591
02:02:47,000 --> 02:02:48,000
Bandler 的默認是

4592
02:02:48,000 --> 02:02:50,000
一安裝在當層的錄像

4593
02:02:50,000 --> 02:02:51,000
啊

4594
02:02:51,000 --> 02:02:52,000
OK

4595
02:02:52,000 --> 02:02:54,000
就如果你只要用一個

4596
02:02:54,000 --> 02:02:56,000
它給的那個

4597
02:02:56,000 --> 02:02:57,000
不是它給

4598
02:02:57,000 --> 02:02:58,000
就是它

4599
02:02:58,000 --> 02:03:00,000
如果你用 Bandler 這個 JAM

4600
02:03:00,000 --> 02:03:01,000
管理你的

4601
02:03:01,000 --> 02:03:03,000
項目的依賴的 JAM 的話

4602
02:03:03,000 --> 02:03:05,000
就是

4603
02:03:05,000 --> 02:03:07,000
Industry Stunt

4604
02:03:07,000 --> 02:03:08,000
就是幾乎每一個

4605
02:03:08,000 --> 02:03:09,000
好一點的

4606
02:03:09,000 --> 02:03:10,000
Ruby 項目

4607
02:03:10,000 --> 02:03:11,000
幾乎都順頒了

4608
02:03:11,000 --> 02:03:12,000
OK

4609
02:03:12,000 --> 02:03:13,000
然後你就不會

4610
02:03:13,000 --> 02:03:14,000
去侮然你的全局

4611
02:03:14,000 --> 02:03:15,000
JAM

4612
02:03:15,000 --> 02:03:16,000
所以還是有一個

4613
02:03:16,000 --> 02:03:17,000
Bass practice 在那裡

4614
02:03:17,000 --> 02:03:18,000
對

4615
02:03:18,000 --> 02:03:19,000
有一個 Bass practice

4616
02:03:19,000 --> 02:03:20,000
不像

4617
02:03:20,000 --> 02:03:21,000
不像比正營

4618
02:03:21,000 --> 02:03:22,000
我已經不是了

4619
02:03:22,000 --> 02:03:24,000
我已經宣布脫離了

4620
02:03:24,000 --> 02:03:25,000
好吧

4621
02:03:25,000 --> 02:03:26,000
OK

4622
02:03:26,000 --> 02:03:27,000
講回 No 的這個東西

4623
02:03:27,000 --> 02:03:28,000
好一天

4624
02:03:28,000 --> 02:03:30,000
它是墨熱是裝在

4625
02:03:30,000 --> 02:03:31,000
當前幕裏面的

4626
02:03:31,000 --> 02:03:32,000
就是你可能每個工程

4627
02:03:32,000 --> 02:03:33,000
每個項目是一個

4628
02:03:33,000 --> 02:03:34,000
有一個自己的一個

4629
02:03:34,000 --> 02:03:35,000
No 的

4630
02:03:35,000 --> 02:03:36,000
Model 這麼一個幕錄

4631
02:03:36,000 --> 02:03:37,000
然後你在那邊

4632
02:03:37,000 --> 02:03:38,000
這些 NPM install 的

4633
02:03:38,000 --> 02:03:40,000
之後它裝的所有東西

4634
02:03:40,000 --> 02:03:41,000
都會在墨熱在那裡面

4635
02:03:41,000 --> 02:03:43,000
然後如果你是要裝在

4636
02:03:43,000 --> 02:03:44,000
系統級別的話

4637
02:03:44,000 --> 02:03:45,000
你這要加一個

4638
02:03:45,000 --> 02:03:46,000
就 GunG

4639
02:03:46,000 --> 02:03:47,000
Global 這個選項

4640
02:03:47,000 --> 02:03:48,000
它才會裝到你的

4641
02:03:48,000 --> 02:03:49,000
這個 JAM

4642
02:03:49,000 --> 02:03:50,000
墨路或者是你速度的

4643
02:03:50,000 --> 02:03:51,000
監管要裝在

4644
02:03:51,000 --> 02:03:52,000
系統級別的幕錄面去

4645
02:03:52,000 --> 02:03:54,000
說它在一開始

4646
02:03:54,000 --> 02:03:55,000
就鼓勵一種

4647
02:03:55,000 --> 02:03:57,000
就是所謂

4648
02:03:57,000 --> 02:03:59,000
完全分離

4649
02:03:59,000 --> 02:04:00,000
我覺得他們覺得

4650
02:04:00,000 --> 02:04:02,000
慈喚空間的損失算不得什麼

4651
02:04:02,000 --> 02:04:04,000
重點是不要互相蓋了

4652
02:04:04,000 --> 02:04:06,000
所以這個

4653
02:04:06,000 --> 02:04:07,000
就是這種衝突方式

4654
02:04:07,000 --> 02:04:08,000
但它有

4655
02:04:08,000 --> 02:04:09,000
它有自己的原因

4656
02:04:09,000 --> 02:04:10,000
就是因為

4657
02:04:10,000 --> 02:04:12,000
在所有的這個軟件包裏面

4658
02:04:12,000 --> 02:04:14,000
可能 No 的軟件包的

4659
02:04:14,000 --> 02:04:16,000
版本跳躍是最快的

4660
02:04:16,000 --> 02:04:18,000
我上個月裝的

4661
02:04:18,000 --> 02:04:20,000
一個什麼開發一個軟件的版本

4662
02:04:20,000 --> 02:04:23,000
用的一個庫可能是 0.2 點級

4663
02:04:23,000 --> 02:04:24,000
有這個升級看

4664
02:04:24,000 --> 02:04:26,000
就已經 1.2 點級

4665
02:04:26,000 --> 02:04:29,000
如果你想最快最短

4666
02:04:29,000 --> 02:04:30,000
最短時間之內

4667
02:04:30,000 --> 02:04:33,000
在屏幕上獲得最多的數據流

4668
02:04:33,000 --> 02:04:35,000
並且多多少少

4669
02:04:35,000 --> 02:04:36,000
能讓人看得懂的話

4670
02:04:36,000 --> 02:04:38,000
請執行 NPM update

4671
02:04:38,000 --> 02:04:40,000
對

4672
02:04:40,000 --> 02:04:42,000
所以也是因為這個

4673
02:04:42,000 --> 02:04:44,000
這個殘酷的現實使得

4674
02:04:44,000 --> 02:04:45,000
這個可能我這麼猜的

4675
02:04:45,000 --> 02:04:47,000
就是這個 No 的社區

4676
02:04:47,000 --> 02:04:49,000
必須要把這種版本

4677
02:04:49,000 --> 02:04:51,000
一來就是這個叫

4678
02:04:51,000 --> 02:04:52,000
本就是叫什麼

4679
02:04:52,000 --> 02:04:53,000
Contained

4680
02:04:53,000 --> 02:04:54,000
就是要

4681
02:04:54,000 --> 02:04:56,000
局部化

4682
02:04:56,000 --> 02:04:57,000
因為一旦當中全球

4683
02:04:57,000 --> 02:04:58,000
這個事沒法玩了

4684
02:04:58,000 --> 02:04:59,000
對

4685
02:04:59,000 --> 02:05:00,000
這就是他們擁抱改變

4686
02:05:00,000 --> 02:05:01,000
你那種方式

4687
02:05:01,000 --> 02:05:02,000
對

4688
02:05:02,000 --> 02:05:04,000
然後他們對這個版本

4689
02:05:04,000 --> 02:05:05,000
跟他們講

4690
02:05:05,000 --> 02:05:06,000
交叉依賴解決得很好

4691
02:05:06,000 --> 02:05:07,000
就是它是

4692
02:05:07,000 --> 02:05:09,000
說用我說的那種方式

4693
02:05:09,000 --> 02:05:10,000
就是各個

4694
02:05:10,000 --> 02:05:12,000
包去用裝自己的依賴

4695
02:05:12,000 --> 02:05:14,000
互相不要干擾

4696
02:05:14,000 --> 02:05:15,000
就是同樣跟他們

4697
02:05:15,000 --> 02:05:16,000
就一個最簡單的例子

4698
02:05:16,000 --> 02:05:18,000
就是我寫這個程序

4699
02:05:18,000 --> 02:05:19,000
叫 A

4700
02:05:19,000 --> 02:05:20,000
然後它依賴 B

4701
02:05:20,000 --> 02:05:21,000
然後也依賴 C

4702
02:05:21,000 --> 02:05:22,000
然後

4703
02:05:22,000 --> 02:05:23,000
這個依賴

4704
02:05:23,000 --> 02:05:24,000
我的程序

4705
02:05:24,000 --> 02:05:25,000
依賴 B 和 C 這兩個包

4706
02:05:25,000 --> 02:05:26,000
然後這個 C 這個包

4707
02:05:26,000 --> 02:05:27,000
它又依賴

4708
02:05:27,000 --> 02:05:28,000
有一 B 但是可能

4709
02:05:28,000 --> 02:05:29,000
是一 B 的另一個

4710
02:05:29,000 --> 02:05:30,000
叫早

4711
02:05:30,000 --> 02:05:31,000
還是叫新的版本

4712
02:05:31,000 --> 02:05:33,000
NPM 的研發

4713
02:05:33,000 --> 02:05:34,000
就是說

4714
02:05:34,000 --> 02:05:35,000
那我這個程序

4715
02:05:35,000 --> 02:05:36,000
裝的時候

4716
02:05:36,000 --> 02:05:37,000
我一些寫我要這個 B 的

4717
02:05:37,000 --> 02:05:38,000
包著這個版本

4718
02:05:38,000 --> 02:05:39,000
我要 C 的包的那個版本

4719
02:05:39,000 --> 02:05:41,000
然後它就會去裝這個 B

4720
02:05:41,000 --> 02:05:42,000
然後就會把這個

4721
02:05:42,000 --> 02:05:43,000
在我當前的目錄的

4722
02:05:43,000 --> 02:05:44,000
No No Modulment 裡面

4723
02:05:44,000 --> 02:05:45,000
這個有

4724
02:05:45,000 --> 02:05:46,000
一個目錄名字

4725
02:05:46,000 --> 02:05:47,000
是 B 這個包的名字

4726
02:05:47,000 --> 02:05:48,000
還有一個名字

4727
02:05:48,000 --> 02:05:49,000
C 的包的名字

4728
02:05:49,000 --> 02:05:50,000
然後你進到

4729
02:05:50,000 --> 02:05:51,000
No No Modulment

4730
02:05:51,000 --> 02:05:52,000
它又是一個

4731
02:05:52,000 --> 02:05:54,000
帶有 No No Modulment 的一個包

4732
02:05:54,000 --> 02:05:55,000
所以它就是

4733
02:05:55,000 --> 02:05:57,000
在每一個包裡面

4734
02:05:57,000 --> 02:05:58,000
它都是獨立的一個

4735
02:05:58,000 --> 02:06:00,000
一個 No No Package 的

4736
02:06:00,000 --> 02:06:01,000
成績

4737
02:06:01,000 --> 02:06:02,000
關於在裡面

4738
02:06:02,000 --> 02:06:03,000
就不會出現說

4739
02:06:03,000 --> 02:06:04,000
我依賴 A

4740
02:06:04,000 --> 02:06:05,000
我依賴 B

4741
02:06:05,000 --> 02:06:06,000
我也依賴 C

4742
02:06:06,000 --> 02:06:07,000
C 有依賴 B 的

4743
02:06:07,000 --> 02:06:08,000
另外一個版本

4744
02:06:08,000 --> 02:06:09,000
這種交叉依賴

4745
02:06:09,000 --> 02:06:10,000
對我導致的影響

4746
02:06:10,000 --> 02:06:11,000
對我來說

4747
02:06:11,000 --> 02:06:12,000
我是看不見

4748
02:06:12,000 --> 02:06:14,000
C 依賴了什麼東西的

4749
02:06:14,000 --> 02:06:15,000
對

4750
02:06:15,000 --> 02:06:16,000
就這點

4751
02:06:16,000 --> 02:06:18,000
我覺得它做得比較好

4752
02:06:18,000 --> 02:06:19,000
對方就是

4753
02:06:19,000 --> 02:06:20,000
整個是很乾淨的

4754
02:06:20,000 --> 02:06:22,000
這很明確

4755
02:06:22,000 --> 02:06:23,000
很乾淨

4756
02:06:23,000 --> 02:06:24,000
而且是

4757
02:06:24,000 --> 02:06:25,000
就是

4758
02:06:25,000 --> 02:06:26,000
局域化的

4759
02:06:26,000 --> 02:06:28,000
而且它的

4760
02:06:28,000 --> 02:06:30,000
山廚也很簡單

4761
02:06:30,000 --> 02:06:31,000
你不想用的

4762
02:06:31,000 --> 02:06:32,000
你直接把 No No Modulment

4763
02:06:32,000 --> 02:06:33,000
裡面的那些東西

4764
02:06:33,000 --> 02:06:34,000
清掉就好了

4765
02:06:34,000 --> 02:06:35,000
對

4766
02:06:35,000 --> 02:06:36,000
不會在你操作系統的

4767
02:06:36,000 --> 02:06:37,000
其他任何地方

4768
02:06:37,000 --> 02:06:38,000
留下垃圾

4769
02:06:38,000 --> 02:06:39,000
如果你有截屁的話

4770
02:06:39,000 --> 02:06:40,000
這點是相當

4771
02:06:40,000 --> 02:06:41,000
相當簡單

4772
02:06:41,000 --> 02:06:42,000
令人解放的一件事情

4773
02:06:42,000 --> 02:06:43,000
對

4774
02:06:43,000 --> 02:06:44,000
然後

4775
02:06:44,000 --> 02:06:45,000
這人詹斯特的特性有關

4776
02:06:45,000 --> 02:06:46,000
就是

4777
02:06:46,000 --> 02:06:47,000
它不是一種

4778
02:06:47,000 --> 02:06:49,000
嚴格因素

4779
02:06:49,000 --> 02:06:50,000
嚴格因素

4780
02:06:50,000 --> 02:06:52,000
為

4781
02:06:52,000 --> 02:06:56,000
幾年和不同系統

4782
02:06:56,000 --> 02:06:57,000
組建的

4783
02:06:57,000 --> 02:06:59,000
古度氂圍就要出現的

4784
02:06:59,000 --> 02:07:00,000
對

4785
02:07:00,000 --> 02:07:01,000
對

4786
02:07:01,000 --> 02:07:02,000
然後它的

4787
02:07:02,000 --> 02:07:03,000
其實

4788
02:07:03,000 --> 02:07:04,000
處理問題就是

4789
02:07:04,000 --> 02:07:05,000
Jask Up 的

4790
02:07:05,000 --> 02:07:06,000
Native Keyboard

4791
02:07:06,000 --> 02:07:07,000
Native One

4792
02:07:07,000 --> 02:07:08,000
的時候

4793
02:07:08,000 --> 02:07:09,000
Compile 的情況出現吧

4794
02:07:09,000 --> 02:07:10,000
應該是

4795
02:07:10,000 --> 02:07:11,000
有的

4796
02:07:11,000 --> 02:07:12,000
比如我今天看到的安裝的時候

4797
02:07:12,000 --> 02:07:13,000
它會減

4798
02:07:13,000 --> 02:07:14,000
它會去運行一下

4799
02:07:14,000 --> 02:07:15,000
C 個什麼

4800
02:07:15,000 --> 02:07:16,000
Compile 的裝什麼東西

4801
02:07:16,000 --> 02:07:17,000
但是具體它在做什麼

4802
02:07:17,000 --> 02:07:18,000
我也不是太清楚

4803
02:07:19,000 --> 02:07:20,000
因為我印象裡面

4804
02:07:20,000 --> 02:07:21,000
Jask Up 的

4805
02:07:21,000 --> 02:07:22,000
NPM 社區

4806
02:07:22,000 --> 02:07:23,000
極端到連什麼

4807
02:07:23,000 --> 02:07:24,000
Micycle 的

4808
02:07:24,000 --> 02:07:25,000
二斤之代码

4809
02:07:25,000 --> 02:07:27,000
二斤之代寫

4810
02:07:27,000 --> 02:07:28,000
一個 Jask Up 的

4811
02:07:28,000 --> 02:07:29,000
版本

4812
02:07:29,000 --> 02:07:30,000
就

4813
02:07:30,000 --> 02:07:31,000
不要去

4814
02:07:31,000 --> 02:07:32,000
調用 C 庫

4815
02:07:32,000 --> 02:07:33,000
這是

4816
02:07:33,000 --> 02:07:34,000
為什麼呢

4817
02:07:34,000 --> 02:07:35,000
不能調用 C 庫嗎

4818
02:07:35,000 --> 02:07:36,000
我不太確定

4819
02:07:36,000 --> 02:07:37,000
就你詐問我

4820
02:07:37,000 --> 02:07:39,000
Jask Up 的怎麼調用 C 庫

4821
02:07:39,000 --> 02:07:40,000
關於這

4822
02:07:40,000 --> 02:07:41,000
對

4823
02:07:41,000 --> 02:07:42,000
確實有一點

4824
02:07:42,000 --> 02:07:43,000
它們是很願意

4825
02:07:43,000 --> 02:07:44,000
把所有東西

4826
02:07:44,000 --> 02:07:45,000
都用 Jask Up 的寫

4827
02:07:45,000 --> 02:07:46,000
這個門其實

4828
02:07:46,000 --> 02:07:47,000
有好處的

4829
02:07:47,000 --> 02:07:48,000
在我家的那個

4830
02:07:48,000 --> 02:07:49,000
中年內弄的門跑

4831
02:07:49,000 --> 02:07:50,000
因為我爸爸的 JIT 的特性

4832
02:07:50,000 --> 02:07:51,000
對吧

4833
02:07:51,000 --> 02:07:52,000
然後你可以調適

4834
02:07:52,000 --> 02:07:53,000
那些出錯都很方便

4835
02:07:53,000 --> 02:07:54,000
然後

4836
02:07:54,000 --> 02:07:55,000
你

4837
02:07:55,000 --> 02:07:56,000
包括

4838
02:07:56,000 --> 02:07:57,000
當然管理起來

4839
02:07:57,000 --> 02:07:58,000
也會很方便嗎

4840
02:07:59,000 --> 02:08:00,000
嗯

4841
02:08:00,000 --> 02:08:01,000
你先擠到主意中

4842
02:08:01,000 --> 02:08:02,000
然後那個 NPM

4843
02:08:02,000 --> 02:08:03,000
它在每一個

4844
02:08:03,000 --> 02:08:04,000
包的裡面

4845
02:08:04,000 --> 02:08:05,000
它的那個

4846
02:08:05,000 --> 02:08:06,000
Package

4847
02:08:06,000 --> 02:08:07,000
點這個文件

4848
02:08:07,000 --> 02:08:08,000
也很簡單

4849
02:08:08,000 --> 02:08:09,000
就是你把你這常見的東西寫進來

4850
02:08:09,000 --> 02:08:10,000
讓依賴關寫進來

4851
02:08:10,000 --> 02:08:11,000
然後 NPM

4852
02:08:11,000 --> 02:08:12,000
這個命令它的工具

4853
02:08:12,000 --> 02:08:14,000
也是比較強大的

4854
02:08:14,000 --> 02:08:15,000
它甚至連那種

4855
02:08:15,000 --> 02:08:16,000
連你的版本

4856
02:08:16,000 --> 02:08:17,000
號的寫法

4857
02:08:17,000 --> 02:08:18,000
都有快捷

4858
02:08:18,000 --> 02:08:19,000
Mini 邦尼去搞定

4859
02:08:19,000 --> 02:08:20,000
它們就遵從

4860
02:08:20,000 --> 02:08:21,000
這個 Simantic version

4861
02:08:21,000 --> 02:08:22,000
這個做法嘛

4862
02:08:22,000 --> 02:08:23,000
就是

4863
02:08:23,000 --> 02:08:24,000
你看

4864
02:08:24,000 --> 02:08:25,000
A.B.C

4865
02:08:25,000 --> 02:08:26,000
然後 H.Dabab

4866
02:08:26,000 --> 02:08:27,000
然後

4867
02:08:27,000 --> 02:08:28,000
變成 A.P.A.肯定變了

4868
02:08:28,000 --> 02:08:29,000
然後 B 是小版本號

4869
02:08:29,000 --> 02:08:30,000
是一個變的話

4870
02:08:30,000 --> 02:08:31,000
肯定是

4871
02:08:31,000 --> 02:08:32,000
可能只有朋友

4872
02:08:32,000 --> 02:08:33,000
各種新增內容

4873
02:08:33,000 --> 02:08:35,000
但是應該是下下接容的

4874
02:08:35,000 --> 02:08:37,000
然後 C 是這個

4875
02:08:37,000 --> 02:08:38,000
小的小升級

4876
02:08:38,000 --> 02:08:39,000
什麼 Bug Fix

4877
02:08:39,000 --> 02:08:40,000
之類不影響

4878
02:08:40,000 --> 02:08:41,000
接口的這種情況

4879
02:08:41,000 --> 02:08:42,000
對

4880
02:08:42,000 --> 02:08:43,000
它連這個都已經

4881
02:08:43,000 --> 02:08:44,000
忘記

4882
02:08:44,000 --> 02:08:45,000
忘記考慮好了

4883
02:08:45,000 --> 02:08:46,000
而且

4884
02:08:46,000 --> 02:08:47,000
如果你這個 NPM

4885
02:08:47,000 --> 02:08:49,000
包式在一個 Git

4886
02:08:49,000 --> 02:08:50,000
裡面的 Raposter

4887
02:08:50,000 --> 02:08:51,000
裡面的話

4888
02:08:51,000 --> 02:08:53,000
它甚至你做完 NPM version

4889
02:08:53,000 --> 02:08:54,000
然後 Patch

4890
02:08:54,000 --> 02:08:56,000
或者是 Miner 這種命令之後

4891
02:08:56,000 --> 02:08:57,000
就是把那個

4892
02:08:57,000 --> 02:08:59,000
命令版本號升級一位

4893
02:08:59,000 --> 02:09:00,000
它連那個 Git

4894
02:09:00,000 --> 02:09:01,000
的 Tag

4895
02:09:01,000 --> 02:09:02,000
都隨著幫你做好了

4896
02:09:02,000 --> 02:09:03,000
哇

4897
02:09:03,000 --> 02:09:04,000
這是貼心的

4898
02:09:04,000 --> 02:09:05,000
對

4899
02:09:05,000 --> 02:09:06,000
就是貼心小名

4900
02:09:06,000 --> 02:09:08,000
非常方便

4901
02:09:08,000 --> 02:09:09,000
用起來很爽

4902
02:09:09,000 --> 02:09:10,000
而且

4903
02:09:10,000 --> 02:09:11,000
對

4904
02:09:11,000 --> 02:09:12,000
也從一個側面反映了

4905
02:09:12,000 --> 02:09:13,000
NPM 的社區

4906
02:09:13,000 --> 02:09:14,000
其實是一個非常活力社區

4907
02:09:14,000 --> 02:09:15,000
不管多少人

4908
02:09:15,000 --> 02:09:16,000
怎麼樣

4909
02:09:16,000 --> 02:09:18,000
整個世界嘲笑它們對

4910
02:09:18,000 --> 02:09:19,000
但可能就是

4911
02:09:19,000 --> 02:09:20,000
因為這種壽命者

4912
02:09:20,000 --> 02:09:21,000
自帶來

4913
02:09:21,000 --> 02:09:22,000
迫使它們

4914
02:09:22,000 --> 02:09:23,000
僅僅團進它們一起

4915
02:09:23,000 --> 02:09:24,000
對

4916
02:09:24,000 --> 02:09:25,000
NPM 社區就是

4917
02:09:25,000 --> 02:09:26,000
Raposter

4918
02:09:26,000 --> 02:09:27,000
有太人

4919
02:09:27,000 --> 02:09:28,000
對

4920
02:09:28,000 --> 02:09:29,000
對

4921
02:09:29,000 --> 02:09:30,000
對

4922
02:09:30,000 --> 02:09:31,000
反正整個來說

4923
02:09:31,000 --> 02:09:32,000
NPM 的體驗

4924
02:09:32,000 --> 02:09:33,000
是我目前用過

4925
02:09:33,000 --> 02:09:35,000
所有的這種

4926
02:09:35,000 --> 02:09:36,000
語言

4927
02:09:36,000 --> 02:09:37,000
原生的包館裡

4928
02:09:37,000 --> 02:09:38,000
其裡面體驗

4929
02:09:38,000 --> 02:09:39,000
最好的一個吧

4930
02:09:39,000 --> 02:09:40,000
那你可能是我

4931
02:09:40,000 --> 02:09:41,000
菇露館

4932
02:09:41,000 --> 02:09:42,000
沒見過更好的

4933
02:09:43,000 --> 02:09:44,000
我也真的沒有見過

4934
02:09:44,000 --> 02:09:45,000
更好的

4935
02:09:45,000 --> 02:09:46,000
更好的可能

4936
02:09:46,000 --> 02:09:47,000
就是

4937
02:09:47,000 --> 02:09:48,000
是什麼圖形化

4938
02:09:48,000 --> 02:09:49,000
然後

4939
02:09:49,000 --> 02:09:50,000
給最終用戶用的

4940
02:09:50,000 --> 02:09:52,000
所以對

4941
02:09:52,000 --> 02:09:53,000
所以這個是 NPM 的

4942
02:09:53,000 --> 02:09:54,000
一個挺好的地方

4943
02:09:54,000 --> 02:09:57,000
現在再說一個

4944
02:09:57,000 --> 02:09:59,000
現在本人的大愛

4945
02:09:59,000 --> 02:10:00,000
Go 裡面是怎麼做

4946
02:10:00,000 --> 02:10:01,000
在這裡

4947
02:10:01,000 --> 02:10:02,000
購儲船叫

4948
02:10:02,000 --> 02:10:03,000
是沒有同學又來

4949
02:10:03,000 --> 02:10:04,000
對

4950
02:10:04,000 --> 02:10:05,000
請你知道

4951
02:10:05,000 --> 02:10:06,000
Go 裡面怎麼做的事情嗎

4952
02:10:06,000 --> 02:10:07,000
Go get

4953
02:10:07,000 --> 02:10:08,000
不是嗎

4954
02:10:08,000 --> 02:10:09,000
對

4955
02:10:09,000 --> 02:10:10,000
但是它的哲學

4956
02:10:10,000 --> 02:10:11,000
就是滿奇怪的

4957
02:10:11,000 --> 02:10:11,000
前面我們

4958
02:10:11,000 --> 02:10:13,000
在這個像比如說

4959
02:10:13,000 --> 02:10:15,000
Java 也好

4960
02:10:15,000 --> 02:10:16,000
Python 也好

4961
02:10:16,000 --> 02:10:17,000
No 的也好

4962
02:10:17,000 --> 02:10:18,000
還有 Ruby Jam 也好

4963
02:10:18,000 --> 02:10:20,000
他們都有一個

4964
02:10:20,000 --> 02:10:21,000
所謂的

4965
02:10:21,000 --> 02:10:23,000
所謂官方正式認可的

4966
02:10:23,000 --> 02:10:25,000
這麼一個集中發布

4967
02:10:25,000 --> 02:10:27,000
軟件包的取道對吧

4968
02:10:27,000 --> 02:10:28,000
對

4969
02:10:28,000 --> 02:10:29,000
有一個是 Posterware 在那邊

4970
02:10:29,000 --> 02:10:30,000
對

4971
02:10:30,000 --> 02:10:31,000
購儲沒有的

4972
02:10:31,000 --> 02:10:32,000
購儲完全是一個

4973
02:10:32,000 --> 02:10:33,000
去中之間化的

4974
02:10:33,000 --> 02:10:34,000
一個一個

4975
02:10:34,000 --> 02:10:35,000
一個

4976
02:10:35,000 --> 02:10:37,000
一個發布方式

4977
02:10:37,000 --> 02:10:38,000
然後這位導致

4978
02:10:38,000 --> 02:10:39,000
一些很奇怪的

4979
02:10:39,000 --> 02:10:40,000
一些狀況

4980
02:10:40,000 --> 02:10:41,000
比如說

4981
02:10:41,000 --> 02:10:43,000
我們通常一個包的名字

4982
02:10:43,000 --> 02:10:44,000
你要引用它的

4983
02:10:44,000 --> 02:10:46,000
在比如說在 Python 裡面

4984
02:10:46,000 --> 02:10:48,000
就是比如說 Inport

4985
02:10:48,000 --> 02:10:49,000
Json 就好了

4986
02:10:49,000 --> 02:10:50,000
對吧

4987
02:10:50,000 --> 02:10:51,000
可能用官方標準的

4988
02:10:51,000 --> 02:10:52,000
你可以用 Inport 的一個

4989
02:10:52,000 --> 02:10:53,000
Json 的例子

4990
02:10:53,000 --> 02:10:54,000
另外一句

4991
02:10:54,000 --> 02:10:55,000
什麼例子

4992
02:10:55,000 --> 02:10:56,000
Request

4993
02:10:56,000 --> 02:10:57,000
這個

4994
02:10:57,000 --> 02:10:58,000
Inport Request

4995
02:10:58,000 --> 02:10:59,000
你就整理好了

4996
02:10:59,000 --> 02:11:00,000
這個它

4997
02:11:00,000 --> 02:11:01,000
你在用的時候

4998
02:11:01,000 --> 02:11:02,000
和它的

4999
02:11:02,000 --> 02:11:03,000
你和怎麼拿到它

5000
02:11:03,000 --> 02:11:04,000
是一個

5001
02:11:04,000 --> 02:11:05,000
完全分離的過程

5002
02:11:05,000 --> 02:11:06,000
對吧

5003
02:11:06,000 --> 02:11:07,000
Python Store Request

5004
02:11:07,000 --> 02:11:08,000
它去

5005
02:11:08,000 --> 02:11:10,000
那個 Python 上面

5006
02:11:10,000 --> 02:11:11,000
下載回來

5007
02:11:11,000 --> 02:11:12,000
但你並不知道它

5008
02:11:12,000 --> 02:11:13,000
到底是在哪

5009
02:11:13,000 --> 02:11:14,000
然後你就用的時候

5010
02:11:14,000 --> 02:11:15,000
你也不需要關心

5011
02:11:15,000 --> 02:11:16,000
這個東西

5012
02:11:16,000 --> 02:11:17,000
本來是後死的哪裡的

5013
02:11:17,000 --> 02:11:18,000
它夠裡面不一樣

5014
02:11:18,000 --> 02:11:19,000
夠裡面

5015
02:11:19,000 --> 02:11:20,000
這個

5016
02:11:20,000 --> 02:11:22,000
Inport 的那個路徑

5017
02:11:22,000 --> 02:11:24,000
就是官方認可的方式

5018
02:11:24,000 --> 02:11:26,000
就是你的那個

5019
02:11:26,000 --> 02:11:28,000
人代碼酷的路徑

5020
02:11:28,000 --> 02:11:29,000
對

5021
02:11:29,000 --> 02:11:30,000
比如說它和 Request

5022
02:11:30,000 --> 02:11:31,000
它不可能做到

5023
02:11:31,000 --> 02:11:32,000
比如說我自己有一個

5024
02:11:32,000 --> 02:11:33,000
KitHub 的目錄

5025
02:11:33,000 --> 02:11:34,000
我是

5026
02:11:34,000 --> 02:11:35,000
KitHub

5027
02:11:35,000 --> 02:11:37,000
然後看寫看 Rearbar 下面一個

5028
02:11:37,000 --> 02:11:38,000
什麼軟件

5029
02:11:38,000 --> 02:11:39,000
就是我一個

5030
02:11:39,000 --> 02:11:40,000
夠的軟件

5031
02:11:40,000 --> 02:11:42,000
我就直接要把那一段寫到

5032
02:11:42,000 --> 02:11:43,000
那個夠的

5033
02:11:43,000 --> 02:11:45,000
成縷園程序裡面去

5034
02:11:45,000 --> 02:11:47,000
這樣我就可以

5035
02:11:47,000 --> 02:11:48,000
就如果我要

5036
02:11:48,000 --> 02:11:49,000
以用某一個

5037
02:11:49,000 --> 02:11:50,000
其他軟件

5038
02:11:50,000 --> 02:11:51,000
我也得把它的那個

5039
02:11:51,000 --> 02:11:52,000
Repulser 的地址

5040
02:11:52,000 --> 02:11:53,000
放到那個路徑裡面去

5041
02:11:53,000 --> 02:11:54,000
然後

5042
02:11:54,000 --> 02:11:55,000
Go get

5043
02:11:55,000 --> 02:11:56,000
這個東西有個黑魔法

5044
02:11:56,000 --> 02:11:57,000
就是它能夠自動

5045
02:11:57,000 --> 02:11:59,000
識別常見的

5046
02:11:59,000 --> 02:12:01,000
包館裡的地址

5047
02:12:01,000 --> 02:12:02,000
比如它知道 KitHub

5048
02:12:02,000 --> 02:12:03,000
怎麼去取

5049
02:12:03,000 --> 02:12:04,000
它知道那個 BiBucket 怎麼去取

5050
02:12:04,000 --> 02:12:05,000
它知道那個什麼

5051
02:12:05,000 --> 02:12:07,000
Murkure 人的那些東西怎麼去取

5052
02:12:07,000 --> 02:12:09,000
然後它會自動的

5053
02:12:09,000 --> 02:12:11,000
給通過這個路徑去

5054
02:12:11,000 --> 02:12:12,000
找到那個 Repulser 的

5055
02:12:12,000 --> 02:12:13,000
下載回來

5056
02:12:13,000 --> 02:12:14,000
放到你本地的一個

5057
02:12:14,000 --> 02:12:16,000
約定好的路徑裡面去

5058
02:12:16,000 --> 02:12:18,000
這樣就把這個事情完成了

5059
02:12:18,000 --> 02:12:19,000
而且它是這個所謂

5060
02:12:19,000 --> 02:12:20,000
就是一個 Requestive 的一個過程

5061
02:12:20,000 --> 02:12:21,000
就是比如說我

5062
02:12:21,000 --> 02:12:22,000
我要去 Go get

5063
02:12:22,000 --> 02:12:23,000
一個包

5064
02:12:23,000 --> 02:12:24,000
不要大家在

5065
02:12:24,000 --> 02:12:26,000
KitHub 下面某一個

5066
02:12:26,000 --> 02:12:28,000
寫看 BiBucket 這個包

5067
02:12:28,000 --> 02:12:29,000
然後這個付寫看 BiBucket 這個包

5068
02:12:29,000 --> 02:12:31,000
它有一個付寫看 Spawn 這個包

5069
02:12:31,000 --> 02:12:33,000
它會連帶的

5070
02:12:33,000 --> 02:12:35,000
把那些東西也拿回來

5071
02:12:35,000 --> 02:12:36,000
因為它能夠分析到裡面的

5072
02:12:36,000 --> 02:12:37,000
Inport Pass

5073
02:12:37,000 --> 02:12:38,000
它能夠知道缺什麼

5074
02:12:38,000 --> 02:12:39,000
然後它也知道

5075
02:12:39,000 --> 02:12:40,000
因為 Inport Pass

5076
02:12:40,000 --> 02:12:41,000
就是你的那個

5077
02:12:41,000 --> 02:12:42,000
KitHub 項目的地址

5078
02:12:42,000 --> 02:12:44,000
或者是那個 HG 項目的地址

5079
02:12:44,000 --> 02:12:45,000
它能夠去到那裡

5080
02:12:45,000 --> 02:12:46,000
就把所有東西

5081
02:12:46,000 --> 02:12:47,000
給你抓回來

5082
02:12:49,000 --> 02:12:50,000
所以它通過一種

5083
02:12:50,000 --> 02:12:52,000
非常複雜的方式

5084
02:12:52,000 --> 02:12:54,000
使得一個

5085
02:12:54,000 --> 02:12:56,000
包的 Poster

5086
02:12:56,000 --> 02:12:57,000
三號成為了它

5087
02:12:57,000 --> 02:12:58,000
妹妹空間那一部分

5088
02:12:58,000 --> 02:12:59,000
對

5089
02:12:59,000 --> 02:13:00,000
沒錯 就這樣了

5090
02:13:00,000 --> 02:13:01,000
有意思

5091
02:13:01,000 --> 02:13:03,000
那你覺得這一種這種做法

5092
02:13:03,000 --> 02:13:05,000
是顯得淡淡的

5093
02:13:05,000 --> 02:13:07,000
還是自由氣道的說出來

5094
02:13:07,000 --> 02:13:08,000
這個怎麼說呢

5095
02:13:08,000 --> 02:13:09,000
就是友好

5096
02:13:09,000 --> 02:13:10,000
就肯定是友好

5097
02:13:10,000 --> 02:13:11,000
說有壞

5098
02:13:11,000 --> 02:13:12,000
就好就是簡單嘛

5099
02:13:12,000 --> 02:13:13,000
首先它裡面

5100
02:13:13,000 --> 02:13:14,000
我們講的它

5101
02:13:14,000 --> 02:13:15,000
它不是一個

5102
02:13:15,000 --> 02:13:16,000
集中化的東西

5103
02:13:16,000 --> 02:13:18,000
它可是一個分布式的東西

5104
02:13:18,000 --> 02:13:19,000
它沒有一個所謂

5105
02:13:19,000 --> 02:13:20,000
它不能說你給它一個

5106
02:13:20,000 --> 02:13:21,000
包的名字

5107
02:13:21,000 --> 02:13:22,000
它默認去哪個地方

5108
02:13:22,000 --> 02:13:24,000
去找人把你下個回來的吧

5109
02:13:24,000 --> 02:13:25,000
因為它沒有這麼一個

5110
02:13:25,000 --> 02:13:26,000
中央程序的地方

5111
02:13:26,000 --> 02:13:27,000
所以它只能

5112
02:13:27,000 --> 02:13:28,000
把這個地方

5113
02:13:28,000 --> 02:13:30,000
是把這個地址的信息隱藏

5114
02:13:31,000 --> 02:13:34,000
這個切入到這個包的

5115
02:13:34,000 --> 02:13:36,000
原蛋螞裡面去

5116
02:13:36,000 --> 02:13:38,000
然後從過這種工具

5117
02:13:38,000 --> 02:13:39,000
去把這個事情

5118
02:13:39,000 --> 02:13:40,000
幫你解決了

5119
02:13:40,000 --> 02:13:41,000
但是它不好的地方

5120
02:13:41,000 --> 02:13:42,000
其實也很明顯了

5121
02:13:42,000 --> 02:13:44,000
比如說最簡單的一個例子好

5122
02:13:44,000 --> 02:13:46,000
我用了一個包

5123
02:13:46,000 --> 02:13:48,000
然後我迫客它

5124
02:13:48,000 --> 02:13:49,000
就它就

5125
02:13:49,000 --> 02:13:50,000
官方說能不太好

5126
02:13:50,000 --> 02:13:51,000
我迫客它

5127
02:13:51,000 --> 02:13:52,000
然後我要改的時候

5128
02:13:52,000 --> 02:13:53,000
你就發現很痛苦

5129
02:13:53,000 --> 02:13:54,000
因為你改的時候

5130
02:13:54,000 --> 02:13:55,000
就會必然

5131
02:13:55,000 --> 02:13:56,000
你迫客的就是

5132
02:13:56,000 --> 02:13:57,000
會必然改變它的那個

5133
02:13:57,000 --> 02:13:58,000
impot 路徑嘛

5134
02:13:58,000 --> 02:13:59,000
對

5135
02:13:59,000 --> 02:14:00,000
裡面又有

5136
02:14:00,000 --> 02:14:02,000
又 impot 自己的

5137
02:14:02,000 --> 02:14:03,000
或者別人又 impot 你的時候

5138
02:14:03,000 --> 02:14:04,000
你也去

5139
02:14:04,000 --> 02:14:06,000
改相關

5140
02:14:06,000 --> 02:14:07,000
impot 到你的那個包的

5141
02:14:07,000 --> 02:14:09,000
軟件才能夠使得你的

5142
02:14:09,000 --> 02:14:10,000
修改

5143
02:14:10,000 --> 02:14:12,000
然後被別人看見

5144
02:14:15,000 --> 02:14:16,000
所以它

5145
02:14:16,000 --> 02:14:18,000
它是 somehow 增加了

5146
02:14:18,000 --> 02:14:19,000
軟件包

5147
02:14:19,000 --> 02:14:20,000
維護的難度

5148
02:14:20,000 --> 02:14:21,000
對

5149
02:14:21,000 --> 02:14:22,000
就有點

5150
02:14:22,000 --> 02:14:23,000
這一點小不爽嘛

5151
02:14:23,000 --> 02:14:24,000
就是你也去手工改一下

5152
02:14:24,000 --> 02:14:25,000
那個 impot 路徑

5153
02:14:25,000 --> 02:14:26,000
如果你迫客之後

5154
02:14:26,000 --> 02:14:27,000
如果你迫我

5155
02:14:27,000 --> 02:14:28,000
也沒有被這個

5156
02:14:28,000 --> 02:14:29,000
merge 回去的話

5157
02:14:29,000 --> 02:14:31,000
就說你做了一個

5158
02:14:31,000 --> 02:14:32,000
本地的不接容的

5159
02:14:32,000 --> 02:14:33,000
FOK

5160
02:14:33,000 --> 02:14:34,000
然後另外一個問題

5161
02:14:34,000 --> 02:14:35,000
就是說

5162
02:14:35,000 --> 02:14:36,000
你會發現

5163
02:14:36,000 --> 02:14:37,000
整個過程中

5164
02:14:37,000 --> 02:14:38,000
沒有出現版本

5165
02:14:38,000 --> 02:14:39,000
這個概念

5166
02:14:39,000 --> 02:14:40,000
比如說你可以

5167
02:14:40,000 --> 02:14:41,000
拍粉也好

5168
02:14:41,000 --> 02:14:42,000
還是那個

5169
02:14:42,000 --> 02:14:43,000
impot 也好

5170
02:14:43,000 --> 02:14:44,000
它你去安裝一個包的時候

5171
02:14:44,000 --> 02:14:45,000
它會告訴你

5172
02:14:45,000 --> 02:14:46,000
安裝了什麼版本

5173
02:14:46,000 --> 02:14:47,000
對吧

5174
02:14:47,000 --> 02:14:48,000
對它甚至可以

5175
02:14:48,000 --> 02:14:49,000
告訴你

5176
02:14:49,000 --> 02:14:50,000
請盡量安裝

5177
02:14:50,000 --> 02:14:51,000
接盡於那個

5178
02:14:51,000 --> 02:14:52,000
版本的版本

5179
02:14:52,000 --> 02:14:53,000
對

5180
02:14:53,000 --> 02:14:54,000
就是這個還挺

5181
02:14:54,000 --> 02:14:55,000
對

5182
02:14:55,000 --> 02:14:56,000
就是它有一個中央存的

5183
02:14:56,000 --> 02:14:57,000
就是包著名字

5184
02:14:57,000 --> 02:14:58,000
然後有這個版本號

5185
02:14:58,000 --> 02:14:59,000
然後包我版歷史的

5186
02:14:59,000 --> 02:15:00,000
版本號它會記錄下來

5187
02:15:00,000 --> 02:15:02,000
然後它你可以說我可以指定

5188
02:15:02,000 --> 02:15:03,000
說 2.0

5189
02:15:03,000 --> 02:15:04,000
2.0 差的

5190
02:15:04,000 --> 02:15:05,000
我們都可以

5191
02:15:05,000 --> 02:15:06,000
或者我 1.2.1

5192
02:15:06,000 --> 02:15:07,000
或者 1.5

5193
02:15:07,000 --> 02:15:08,000
或者 1.2.5

5194
02:15:08,000 --> 02:15:09,000
都可以動去指定

5195
02:15:09,000 --> 02:15:10,000
或者說不高於某個版本

5196
02:15:10,000 --> 02:15:12,000
這也是採用這個

5197
02:15:12,000 --> 02:15:13,000
所謂

5198
02:15:13,000 --> 02:15:14,000
三分之零的一個

5199
02:15:14,000 --> 02:15:15,000
有點

5200
02:15:15,000 --> 02:15:16,000
對

5201
02:15:16,000 --> 02:15:17,000
你可以做的主持來

5202
02:15:17,000 --> 02:15:18,000
繼續扛上什麼事情

5203
02:15:18,000 --> 02:15:19,000
對

5204
02:15:19,000 --> 02:15:21,000
夠裡面完全沒有版本的概念

5205
02:15:21,000 --> 02:15:22,000
夠裡面所有的東西

5206
02:15:22,000 --> 02:15:23,000
都是一個

5207
02:15:23,000 --> 02:15:24,000
就是一個 Git

5208
02:15:24,000 --> 02:15:25,000
就是一個

5209
02:15:25,000 --> 02:15:26,000
Possager 地址完了

5210
02:15:26,000 --> 02:15:28,000
然後他們的說法是說

5211
02:15:28,000 --> 02:15:31,000
如果你發布了一個包

5212
02:15:31,000 --> 02:15:32,000
你就不要改他的接口

5213
02:15:32,000 --> 02:15:33,000
for ever

5214
02:15:35,000 --> 02:15:37,000
這個有點太

5215
02:15:37,000 --> 02:15:38,000
太過了

5216
02:15:38,000 --> 02:15:39,000
太認性了吧

5217
02:15:39,000 --> 02:15:40,000
這簡直就是

5218
02:15:40,000 --> 02:15:41,000
如果就是這麼認性

5219
02:15:41,000 --> 02:15:42,000
對

5220
02:15:42,000 --> 02:15:43,000
就是認性

5221
02:15:43,000 --> 02:15:45,000
就是強硬好不好

5222
02:15:45,000 --> 02:15:47,000
然後

5223
02:15:47,000 --> 02:15:49,000
然後他們的這個說法

5224
02:15:49,000 --> 02:15:50,000
原點的

5225
02:15:50,000 --> 02:15:52,000
就是如果你做了一個

5226
02:15:52,000 --> 02:15:54,000
接口不接用的改進

5227
02:15:54,000 --> 02:15:56,000
那麼請用一個新的

5228
02:15:56,000 --> 02:15:57,000
Import 地的地址

5229
02:15:57,000 --> 02:15:58,000
這個我覺得

5230
02:15:58,000 --> 02:15:59,000
有點

5231
02:15:59,000 --> 02:16:00,000
那為什麼不能

5232
02:16:00,000 --> 02:16:02,000
再就讓他更進一步

5233
02:16:02,000 --> 02:16:03,000
就直接指定

5234
02:16:03,000 --> 02:16:05,000
這個 Possager 的 branching

5235
02:16:05,000 --> 02:16:06,000
對

5236
02:16:06,000 --> 02:16:07,000
這就是很多人要吐槽的地方

5237
02:16:07,000 --> 02:16:09,000
就說那為什麼不支持

5238
02:16:09,000 --> 02:16:10,000
你那裡我直接說

5239
02:16:10,000 --> 02:16:11,000
你可以太一個嘛

5240
02:16:11,000 --> 02:16:12,000
我可以太一個嘛

5241
02:16:12,000 --> 02:16:13,000
我可以太一個嘛

5242
02:16:13,000 --> 02:16:14,000
這樣也可以

5243
02:16:14,000 --> 02:16:15,000
大家你想想

5244
02:16:15,000 --> 02:16:16,000
你說還蠻合理的對吧

5245
02:16:16,000 --> 02:16:18,000
但問題出在哪呢

5246
02:16:18,000 --> 02:16:19,000
問題出在

5247
02:16:19,000 --> 02:16:21,000
夠也沒有指定一個

5248
02:16:21,000 --> 02:16:23,000
默認的

5249
02:16:23,000 --> 02:16:24,000
軟件控制

5250
02:16:24,000 --> 02:16:25,000
軟件

5251
02:16:25,000 --> 02:16:26,000
沒錯

5252
02:16:26,000 --> 02:16:52,000
主動一些

5253
02:16:52,000 --> 02:16:53,000
就是很...

5254
02:16:53,000 --> 02:16:54,000
Suppershift

5255
02:16:54,000 --> 02:16:54,000
OK

5256
02:16:54,000 --> 02:16:55,000
Suppershift

5257
02:16:55,000 --> 02:16:55,000
其實是有 Branch

5258
02:16:55,000 --> 02:16:56,000
Blood to Branch

5259
02:16:56,000 --> 02:16:57,000
是非常重要的 Branch

5260
02:16:57,000 --> 02:16:58,000
對

5261
02:16:58,000 --> 02:16:59,000
就是說其實

5262
02:16:59,000 --> 02:17:01,000
你要去見用那個沒有這些東西

5263
02:17:01,000 --> 02:17:02,000
就是最

5264
02:17:02,000 --> 02:17:03,000
最基礎的

5265
02:17:03,000 --> 02:17:05,000
你只有一顆 URR 而已

5266
02:17:05,000 --> 02:17:07,000
就你不能去支給你其他東西

5267
02:17:07,000 --> 02:17:07,000
而且因為

5268
02:17:07,000 --> 02:17:08,000
GoGad 也是

5269
02:17:08,000 --> 02:17:10,000
瘋裝了那些

5270
02:17:10,000 --> 02:17:12,000
命令行工具而已

5271
02:17:12,000 --> 02:17:13,000
包括瘋裝來 Gad

5272
02:17:13,000 --> 02:17:14,000
瘋裝 HG

5273
02:17:14,000 --> 02:17:16,000
瘋裝了那個什麼

5274
02:17:16,000 --> 02:17:17,000
Suppershift

5275
02:17:17,000 --> 02:17:18,000
是什麼命令

5276
02:17:20,000 --> 02:17:21,000
SV

5277
02:17:21,000 --> 02:17:21,000
SVN

5278
02:17:21,000 --> 02:17:21,000
對

5279
02:17:21,000 --> 02:17:23,000
瘋裝了那些命令的調用

5280
02:17:23,000 --> 02:17:26,000
他也沒有辦法去強制說

5281
02:17:26,000 --> 02:17:30,000
你的用個什麼樣的方法去

5282
02:17:30,000 --> 02:17:31,000
大家在不同的版本

5283
02:17:31,000 --> 02:17:33,000
或是用不同的方法

5284
02:17:33,000 --> 02:17:35,000
管理軟件版本的

5285
02:17:35,000 --> 02:17:37,000
你也能夠指定同一個版本出來

5286
02:17:37,000 --> 02:17:38,000
對吧

5287
02:17:38,000 --> 02:17:40,000
所以其實就變得這個很難

5288
02:17:40,000 --> 02:17:42,000
反正是一旦變成分布式

5289
02:17:42,000 --> 02:17:45,000
沒有一個中央集權的東西

5290
02:17:45,000 --> 02:17:48,000
就變得很...很難解決

5291
02:17:48,000 --> 02:17:48,000
對

5292
02:17:48,000 --> 02:17:50,000
這也是其中之一

5293
02:17:50,000 --> 02:17:51,000
所以現在有一些

5294
02:17:51,000 --> 02:17:53,000
社區來了一些方法

5295
02:17:53,000 --> 02:17:54,000
就是說

5296
02:17:54,000 --> 02:17:56,000
那我們

5297
02:17:56,000 --> 02:17:57,000
不要

5298
02:17:57,000 --> 02:17:59,000
就為了解決這個

5299
02:17:59,000 --> 02:18:00,000
剛才說這個版本管理的問題

5300
02:18:00,000 --> 02:18:01,000
我們要指定的版本

5301
02:18:01,000 --> 02:18:02,000
我們

5302
02:18:02,000 --> 02:18:04,000
不簡單的

5303
02:18:04,000 --> 02:18:05,000
直接用 GoGad

5304
02:18:05,000 --> 02:18:07,000
我們是說寫一個文件

5305
02:18:07,000 --> 02:18:10,000
聲明我需要哪一個軟件的

5306
02:18:10,000 --> 02:18:11,000
哪一個版本

5307
02:18:11,000 --> 02:18:12,000
通過一個 branchet

5308
02:18:12,000 --> 02:18:15,000
還通過 Gitag 或者什麼方式也好

5309
02:18:15,000 --> 02:18:16,000
把它寫在一起

5310
02:18:16,000 --> 02:18:18,000
然後我在通過這個第三方的

5311
02:18:18,000 --> 02:18:19,000
社區維護的工具

5312
02:18:20,000 --> 02:18:22,000
去安裝成軟件版本

5313
02:18:22,000 --> 02:18:24,000
而不是用這個官方的 GoGad 的中心

5314
02:18:26,000 --> 02:18:27,000
OK

5315
02:18:27,000 --> 02:18:29,000
具體來說有什麼樣的

5316
02:18:29,000 --> 02:18:31,000
有一個比較常見的

5317
02:18:31,000 --> 02:18:32,000
一個叫 GoDeb

5318
02:18:32,000 --> 02:18:33,000
第一

5319
02:18:33,000 --> 02:18:33,000
GoDeb

5320
02:18:33,000 --> 02:18:35,000
第一批就是 GoDependency 的

5321
02:18:35,000 --> 02:18:35,000
一個

5322
02:18:35,000 --> 02:18:36,000
GoDependency

5323
02:18:36,000 --> 02:18:36,000
對

5324
02:18:36,000 --> 02:18:37,000
對

5325
02:18:37,000 --> 02:18:37,000
對

5326
02:18:37,000 --> 02:18:38,000
對

5327
02:18:38,000 --> 02:18:38,000
還有一些其他

5328
02:18:38,000 --> 02:18:39,000
就在

5329
02:18:39,000 --> 02:18:41,000
這一塊 Go 裡面

5330
02:18:41,000 --> 02:18:43,000
社區裡面還是有三、四個選項

5331
02:18:43,000 --> 02:18:43,000
就看

5332
02:18:43,000 --> 02:18:45,000
我不知道之後會怎麼樣

5333
02:18:45,000 --> 02:18:46,000
現在 GoDeb

5334
02:18:46,000 --> 02:18:47,000
這個是一個比較

5335
02:18:47,000 --> 02:18:49,000
用得比較多的一個工具

5336
02:18:50,000 --> 02:18:51,000
另外一個叫解決問題

5337
02:18:51,000 --> 02:18:52,000
就是說如果你分布是

5338
02:18:52,000 --> 02:18:54,000
你也沒有一個

5339
02:18:54,000 --> 02:18:56,000
集中存儲代碼的地方

5340
02:18:56,000 --> 02:18:59,000
同樣的你也不能保證那個代碼

5341
02:18:59,000 --> 02:19:00,000
你今天在哪

5342
02:19:00,000 --> 02:19:00,000
明天還在哪

5343
02:19:00,000 --> 02:19:01,000
那個人可能就直接

5344
02:19:01,000 --> 02:19:02,000
把他的 Gitag

5345
02:19:02,000 --> 02:19:03,000
山除了

5346
02:19:03,000 --> 02:19:05,000
之前也遇到過什麼

5347
02:19:05,000 --> 02:19:06,000
外

5348
02:19:06,000 --> 02:19:09,000
還有那幾個人他從網上消失的時候

5349
02:19:09,000 --> 02:19:10,000
連帶著

5350
02:19:10,000 --> 02:19:13,000
把他的 Gitag 專號也給清掉了

5351
02:19:13,000 --> 02:19:13,000
這樣

5352
02:19:13,000 --> 02:19:15,000
如果你一拉他代碼

5353
02:19:15,000 --> 02:19:15,000
你發現

5354
02:19:15,000 --> 02:19:17,000
沒了怎麼辦

5355
02:19:17,000 --> 02:19:17,000
沒錯

5356
02:19:17,000 --> 02:19:18,000
對

5357
02:19:18,000 --> 02:19:19,000
所以其實是一個

5358
02:19:19,000 --> 02:19:21,000
比較在這種分布社場

5359
02:19:21,000 --> 02:19:22,000
一下一個比較推薦的方式

5360
02:19:22,000 --> 02:19:23,000
就是說

5361
02:19:23,000 --> 02:19:25,000
你把你需要一來代碼

5362
02:19:25,000 --> 02:19:26,000
也加入你的版本

5363
02:19:26,000 --> 02:19:28,000
地的版本工程裡面去

5364
02:19:28,000 --> 02:19:28,000
對

5365
02:19:28,000 --> 02:19:29,000
然後這樣的話

5366
02:19:29,000 --> 02:19:30,000
有一些怎麼難度呢

5367
02:19:30,000 --> 02:19:31,000
就是

5368
02:19:31,000 --> 02:19:32,000
那你要想辦法

5369
02:19:32,000 --> 02:19:33,000
你怎麼去分離

5370
02:19:33,000 --> 02:19:34,000
你自己寫代碼

5371
02:19:34,000 --> 02:19:34,000
和你一來的代碼

5372
02:19:34,000 --> 02:19:36,000
歷史的版本的管理

5373
02:19:36,000 --> 02:19:37,000
你最好是能夠

5374
02:19:37,000 --> 02:19:38,000
具別開來對吧

5375
02:19:38,000 --> 02:19:40,000
這樣可以分別升級嗎

5376
02:19:40,000 --> 02:19:41,000
對

5377
02:19:41,000 --> 02:19:42,000
這就無形中增加

5378
02:19:42,000 --> 02:19:43,000
你對

5379
02:19:43,000 --> 02:19:44,000
要求你對

5380
02:19:44,000 --> 02:19:45,000
版本管理系統

5381
02:19:45,000 --> 02:19:47,000
又要有足夠多的

5382
02:19:47,000 --> 02:19:49,000
知識而相比之下

5383
02:19:49,000 --> 02:19:50,000
其他的原就

5384
02:19:50,000 --> 02:19:53,000
比可以比較專心的

5385
02:19:53,000 --> 02:19:54,000
放在開發上面

5386
02:19:54,000 --> 02:19:55,000
對

5387
02:19:55,000 --> 02:19:56,000
但其實這個

5388
02:19:56,000 --> 02:19:57,000
怎麼來說

5389
02:19:57,000 --> 02:19:57,000
從總體來

5390
02:19:57,000 --> 02:19:58,000
可用性的角度上

5391
02:19:58,000 --> 02:19:59,000
這個法式好的

5392
02:19:59,000 --> 02:20:00,000
因為

5393
02:20:00,000 --> 02:20:01,000
這樣的話

5394
02:20:01,000 --> 02:20:01,000
你就可以確保

5395
02:20:01,000 --> 02:20:03,000
你只要拿到這個軟件包

5396
02:20:03,000 --> 02:20:04,000
這樣這個軟件包

5397
02:20:04,000 --> 02:20:04,000
裡面的

5398
02:20:04,000 --> 02:20:06,000
所以一來是從過這種方式

5399
02:20:06,000 --> 02:20:06,000
來管理的

5400
02:20:06,000 --> 02:20:07,000
就是你把它切隔進你的

5401
02:20:07,000 --> 02:20:09,000
本地的代碼庫裡面

5402
02:20:09,000 --> 02:20:11,000
那麼你拿到這個代碼庫

5403
02:20:11,000 --> 02:20:12,000
你說它是一個完整的

5404
02:20:12,000 --> 02:20:13,000
就是你可以用

5405
02:20:13,000 --> 02:20:13,000
代碼庫邊

5406
02:20:13,000 --> 02:20:15,000
出來一個最終的結果

5407
02:20:15,000 --> 02:20:16,000
不需要去再經過

5408
02:20:16,000 --> 02:20:17,000
一個網絡的下載的

5409
02:20:17,000 --> 02:20:19,000
能不能過程

5410
02:20:19,000 --> 02:20:19,000
OK

5411
02:20:19,000 --> 02:20:20,000
所以如果你要用

5412
02:20:20,000 --> 02:20:22,000
你要為世界的終結

5413
02:20:22,000 --> 02:20:24,000
做準備的話

5414
02:20:24,000 --> 02:20:24,000
那結果

5415
02:20:24,000 --> 02:20:25,000
我才變成

5416
02:20:25,000 --> 02:20:26,000
對

5417
02:20:26,000 --> 02:20:27,000
所以就是它

5418
02:20:27,000 --> 02:20:27,000
是一個

5419
02:20:27,000 --> 02:20:28,000
你可以看到

5420
02:20:28,000 --> 02:20:29,000
剛才我們

5421
02:20:29,000 --> 02:20:30,000
這一系列的主題

5422
02:20:30,000 --> 02:20:30,000
都是一個

5423
02:20:30,000 --> 02:20:31,000
無中心的

5424
02:20:31,000 --> 02:20:32,000
那麼一個

5425
02:20:32,000 --> 02:20:33,000
一個訴求

5426
02:20:33,000 --> 02:20:35,000
所以從

5427
02:20:35,000 --> 02:20:35,000
這一點來講

5428
02:20:35,000 --> 02:20:37,000
它跟 Git 的想法

5429
02:20:37,000 --> 02:20:37,000
其實是

5430
02:20:37,000 --> 02:20:39,000
還是蠻不某而合的

5431
02:20:39,000 --> 02:20:40,000
對

5432
02:20:40,000 --> 02:20:41,000
Git 說

5433
02:20:41,000 --> 02:20:41,000
不要什麼

5434
02:20:41,000 --> 02:20:43,000
SVN 和 SFV 都是需要

5435
02:20:43,000 --> 02:20:44,000
有個重要服務器

5436
02:20:44,000 --> 02:20:46,000
你才可以 Check in

5437
02:20:46,000 --> 02:20:48,000
可以同步軟件的代碼

5438
02:20:48,000 --> 02:20:49,000
但是 Git 不需要

5439
02:20:49,000 --> 02:20:50,000
你可以本地修改

5440
02:20:50,000 --> 02:20:51,000
本地 Commit

5441
02:20:51,000 --> 02:20:52,000
對吧

5442
02:20:52,000 --> 02:20:53,000
夠的話

5443
02:20:53,000 --> 02:20:53,000
也是這樣

5444
02:20:53,000 --> 02:20:54,000
本地

5445
02:20:54,000 --> 02:20:55,000
編譯

5446
02:20:55,000 --> 02:20:56,000
本地出結果

5447
02:20:56,000 --> 02:20:58,000
就比較好一點

5448
02:20:58,000 --> 02:21:00,000
當然

5449
02:21:00,000 --> 02:21:01,000
代價也就是用起來

5450
02:21:01,000 --> 02:21:01,000
會比較繁瑣

5451
02:21:01,000 --> 02:21:02,000
而且在

5452
02:21:02,000 --> 02:21:04,000
就是夠官方是

5453
02:21:04,000 --> 02:21:04,000
對這個事情

5454
02:21:04,000 --> 02:21:05,000
是沒有說法

5455
02:21:05,000 --> 02:21:06,000
就說

5456
02:21:06,000 --> 02:21:06,000
你們自己想辦法

5457
02:21:06,000 --> 02:21:08,000
解決我們不管

5458
02:21:08,000 --> 02:21:09,000
因為

5459
02:21:09,000 --> 02:21:09,000
因為這沒有

5460
02:21:09,000 --> 02:21:10,000
一個很務實的情況

5461
02:21:10,000 --> 02:21:11,000
就是因為夠的

5462
02:21:11,000 --> 02:21:12,000
大部分開發者

5463
02:21:12,000 --> 02:21:13,000
還是 Google

5464
02:21:13,000 --> 02:21:14,000
Google 的一些

5465
02:21:14,000 --> 02:21:14,000
貢獻師

5466
02:21:14,000 --> 02:21:15,000
然後

5467
02:21:15,000 --> 02:21:16,000
他們 Google 內部

5468
02:21:16,000 --> 02:21:18,000
是用一個非常

5469
02:21:18,000 --> 02:21:19,000
複雜先進的

5470
02:21:19,000 --> 02:21:20,000
比如說

5471
02:21:20,000 --> 02:21:21,000
其中在一些程序

5472
02:21:21,000 --> 02:21:21,000
哪怕是

5473
02:21:21,000 --> 02:21:24,000
但是他們是一個跨語言的

5474
02:21:24,000 --> 02:21:25,000
所以他們也不用

5475
02:21:25,000 --> 02:21:26,000
這個 GoGit

5476
02:21:26,000 --> 02:21:27,000
來裝程序

5477
02:21:27,000 --> 02:21:27,000
所以

5478
02:21:27,000 --> 02:21:28,000
那麼

5479
02:21:28,000 --> 02:21:29,000
GoGit 到底是做給誰

5480
02:21:29,000 --> 02:21:31,000
做給誰用的

5481
02:21:31,000 --> 02:21:31,000
如果不吃字

5482
02:21:31,000 --> 02:21:32,000
就搞實的話

5483
02:21:32,000 --> 02:21:33,000
那麼他們是

5484
02:21:33,000 --> 02:21:34,000
開發條是用嗎

5485
02:21:34,000 --> 02:21:35,000
就是你可以

5486
02:21:35,000 --> 02:21:36,000
因為它大部分的時候

5487
02:21:36,000 --> 02:21:37,000
還是可以用的

5488
02:21:37,000 --> 02:21:38,000
你不是說

5489
02:21:38,000 --> 02:21:39,000
你每天要 GoGit

5490
02:21:39,000 --> 02:21:39,000
也變成了

5491
02:21:39,000 --> 02:21:40,000
你 GoGit 回來一個版本

5492
02:21:40,000 --> 02:21:41,000
它大部分的時候

5493
02:21:41,000 --> 02:21:42,000
還是穩定可靠

5494
02:21:42,000 --> 02:21:44,000
因為它還是鼓勵說

5495
02:21:44,000 --> 02:21:44,000
這個 API

5496
02:21:44,000 --> 02:21:45,000
要盡量穩定可靠

5497
02:21:46,000 --> 02:21:47,000
所以你拿回來大部分

5498
02:21:47,000 --> 02:21:49,000
它還是可用的

5499
02:21:49,000 --> 02:21:50,000
只是說

5500
02:21:50,000 --> 02:21:51,000
當你要正式發布的時候

5501
02:21:51,000 --> 02:21:52,000
你最好把你的依賴

5502
02:21:52,000 --> 02:21:53,000
那些

5503
02:21:53,000 --> 02:21:54,000
通過剛有講的那些方法

5504
02:21:54,000 --> 02:21:55,000
check 到你本地的

5505
02:21:55,000 --> 02:21:56,000
一個木路裡面去

5506
02:21:56,000 --> 02:21:57,000
這樣的話會

5507
02:21:57,000 --> 02:21:58,000
穩

5508
02:21:58,000 --> 02:21:59,000
就可靠先會好一些

5509
02:21:59,000 --> 02:22:01,000
OK

5510
02:22:01,000 --> 02:22:02,000
嗯

5511
02:22:02,000 --> 02:22:03,000
但是所以

5512
02:22:03,000 --> 02:22:03,000
也是就是說

5513
02:22:03,000 --> 02:22:05,000
因為 Go 它官方

5514
02:22:05,000 --> 02:22:07,000
沒有一個說法

5515
02:22:07,000 --> 02:22:08,000
也沒有一個

5516
02:22:08,000 --> 02:22:09,000
他們自己內部也

5517
02:22:09,000 --> 02:22:10,000
因為那東西也

5518
02:22:10,000 --> 02:22:11,000
他們那個

5519
02:22:11,000 --> 02:22:11,000
內部用那個

5520
02:22:11,000 --> 02:22:12,000
也不是開源的嘛

5521
02:22:12,000 --> 02:22:14,000
也不是一個商業系統

5522
02:22:14,000 --> 02:22:15,000
所以

5523
02:22:15,000 --> 02:22:16,000
就沒有辦法

5524
02:22:16,000 --> 02:22:17,000
把它共享

5525
02:22:17,000 --> 02:22:17,000
給我們共享

5526
02:22:17,000 --> 02:22:18,000
就是你給我們也

5527
02:22:18,000 --> 02:22:20,000
用不了太幅達

5528
02:22:20,000 --> 02:22:21,000
對

5529
02:22:21,000 --> 02:22:22,000
這個

5530
02:22:22,000 --> 02:22:24,000
其實三號跟

5531
02:22:24,000 --> 02:22:25,000
蘋果這邊的陣營差不多

5532
02:22:25,000 --> 02:22:26,000
蘋果也是

5533
02:22:26,000 --> 02:22:28,000
不管是 Jetc 還是

5534
02:22:28,000 --> 02:22:28,000
所有的

5535
02:22:28,000 --> 02:22:31,000
其實都沒有一個官方的

5536
02:22:31,000 --> 02:22:31,000
版本

5537
02:22:31,000 --> 02:22:34,000
包館的系統

5538
02:22:34,000 --> 02:22:35,000
Cogaposs

5539
02:22:35,000 --> 02:22:37,000
雖然是

5540
02:22:37,000 --> 02:22:39,000
目前的繼承

5541
02:22:39,000 --> 02:22:40,000
事實的包館系統

5542
02:22:40,000 --> 02:22:41,000
但

5543
02:22:41,000 --> 02:22:43,000
好像官方也沒有

5544
02:22:43,000 --> 02:22:43,000
表示

5545
02:22:43,000 --> 02:22:45,000
表現中任何的態度

5546
02:22:45,000 --> 02:22:45,000
是支持他

5547
02:22:45,000 --> 02:22:47,000
還是覺得

5548
02:22:47,000 --> 02:22:48,000
可能要拿出

5549
02:22:48,000 --> 02:22:48,000
要自己

5550
02:22:48,000 --> 02:22:49,000
另做一套的

5551
02:22:49,000 --> 02:22:51,000
蘋果應該

5552
02:22:51,000 --> 02:22:51,000
不會有館就

5553
02:22:51,000 --> 02:22:53,000
事情把我覺得

5554
02:22:53,000 --> 02:22:55,000
我覺得對於開發者來說

5555
02:22:55,000 --> 02:22:56,000
這個東西

5556
02:22:56,000 --> 02:22:58,000
其實還是蠻重要的

5557
02:22:58,000 --> 02:22:59,000
這肯定好不懷疑

5558
02:22:59,000 --> 02:23:00,000
但問題是說

5559
02:23:00,000 --> 02:23:01,000
蘋果會

5560
02:23:01,000 --> 02:23:02,000
覺得這件事情很重要

5561
02:23:02,000 --> 02:23:04,000
我很懷疑

5562
02:23:04,000 --> 02:23:05,000
嗯

5563
02:23:05,000 --> 02:23:06,000
我是覺得

5564
02:23:06,000 --> 02:23:08,000
就是上次 WDC 之後

5565
02:23:08,000 --> 02:23:08,000
蘋果屆

5566
02:23:08,000 --> 02:23:10,000
對開發者有了

5567
02:23:10,000 --> 02:23:11,000
這麼難得一次的微笑

5568
02:23:11,000 --> 02:23:13,000
也許接下來有些

5569
02:23:13,000 --> 02:23:14,000
也是可以夢想的

5570
02:23:14,000 --> 02:23:15,000
是嗎

5571
02:23:15,000 --> 02:23:15,000
那你

5572
02:23:15,000 --> 02:23:17,000
我強烈建議

5573
02:23:17,000 --> 02:23:17,000
你聽一下

5574
02:23:17,000 --> 02:23:18,000
還沒

5575
02:23:18,000 --> 02:23:19,000
應該是明天發布的

5576
02:23:19,000 --> 02:23:21,000
ITC 論迪 131 期

5577
02:23:21,000 --> 02:23:22,000
看一下蘋果

5578
02:23:22,000 --> 02:23:23,000
對開發者的真實

5579
02:23:23,000 --> 02:23:24,000
到底對不是什麼

5580
02:23:24,000 --> 02:23:25,000
啊

5581
02:23:25,000 --> 02:23:26,000
好吧

5582
02:23:26,000 --> 02:23:27,000
嗯

5583
02:23:27,000 --> 02:23:28,000
再由於要被破冷水了

5584
02:23:28,000 --> 02:23:28,000
對

5585
02:23:28,000 --> 02:23:29,000
今年的那個

5586
02:23:29,000 --> 02:23:30,000
YouTube 的

5587
02:23:30,000 --> 02:23:31,000
Reven 的

5588
02:23:31,000 --> 02:23:31,000
3 號

5589
02:23:31,000 --> 02:23:32,000
破冷水

5590
02:23:32,000 --> 02:23:33,000
破冷久

5591
02:23:33,000 --> 02:23:34,000
為什麼

5592
02:23:34,000 --> 02:23:35,000
就是

5593
02:23:35,000 --> 02:23:36,000
YouTube 年末的時候

5594
02:23:36,000 --> 02:23:37,000
會有 Reven 的視頻嗎

5595
02:23:37,000 --> 02:23:38,000
就是歷數

5596
02:23:38,000 --> 02:23:38,000
那個

5597
02:23:38,000 --> 02:23:39,000
今年

5598
02:23:39,000 --> 02:23:41,000
知名關於的

5599
02:23:41,000 --> 02:23:41,000
比較

5600
02:23:41,000 --> 02:23:43,000
動詞應該是

5601
02:23:43,000 --> 02:23:43,000
Sorry

5602
02:23:43,000 --> 02:23:44,000
對

5603
02:23:44,000 --> 02:23:45,000
Reven

5604
02:23:45,000 --> 02:23:46,000
我記得

5605
02:23:46,000 --> 02:23:47,000
你也覺得

5606
02:23:47,000 --> 02:23:48,000
動詞的情況

5607
02:23:48,000 --> 02:23:49,000
Reven

5608
02:23:49,000 --> 02:23:50,000
啊

5609
02:23:50,000 --> 02:23:51,000
嗯

5610
02:23:51,000 --> 02:23:51,000
對

5611
02:23:51,000 --> 02:23:52,000
然後

5612
02:23:52,000 --> 02:23:53,000
在裡面會歷數

5613
02:23:53,000 --> 02:23:54,000
今年的

5614
02:23:54,000 --> 02:23:55,000
Reven

5615
02:23:55,000 --> 02:23:56,000
比較知名的視頻

5616
02:23:56,000 --> 02:23:57,000
然後把他們

5617
02:23:57,000 --> 02:23:58,000
以某種方式

5618
02:23:58,000 --> 02:23:59,000
處心拍一遍

5619
02:23:59,000 --> 02:24:00,000
然後在裡面

5620
02:24:00,000 --> 02:24:00,000
因為今年

5621
02:24:00,000 --> 02:24:01,000
病痛挑戰

5622
02:24:01,000 --> 02:24:02,000
很出名嗎

5623
02:24:02,000 --> 02:24:03,000
OK

5624
02:24:03,000 --> 02:24:04,000
然後在裡面有大量那個

5625
02:24:04,000 --> 02:24:05,000
知名人是互相

5626
02:24:05,000 --> 02:24:06,000
破冷水

5627
02:24:06,000 --> 02:24:07,000
破冰水

5628
02:24:07,000 --> 02:24:09,000
破冰水的情節

5629
02:24:09,000 --> 02:24:10,000
然後

5630
02:24:10,000 --> 02:24:11,000
難道

5631
02:24:11,000 --> 02:24:12,000
明天我要被破冰水了

5632
02:24:12,000 --> 02:24:13,000
哈哈

5633
02:24:13,000 --> 02:24:14,000
啊

5634
02:24:14,000 --> 02:24:15,000
不過剛剛今天

5635
02:24:15,000 --> 02:24:16,000
剛才前來講的

5636
02:24:16,000 --> 02:24:16,000
這麼多

5637
02:24:16,000 --> 02:24:18,000
就是各個語言

5638
02:24:18,000 --> 02:24:18,000
自己本身的

5639
02:24:18,000 --> 02:24:20,000
一些包館裡的機制

5640
02:24:20,000 --> 02:24:20,000
也好

5641
02:24:20,000 --> 02:24:21,000
一轉進

5642
02:24:21,000 --> 02:24:23,000
是我一直有一個問題

5643
02:24:23,000 --> 02:24:24,000
為什麼沒有

5644
02:24:24,000 --> 02:24:25,000
一個

5645
02:24:25,000 --> 02:24:27,000
能夠跨語言

5646
02:24:27,000 --> 02:24:28,000
解決這個問題的工具呢

5647
02:24:28,000 --> 02:24:29,000
就是

5648
02:24:29,000 --> 02:24:30,000
我們為什麼每個語言

5649
02:24:30,000 --> 02:24:32,000
出來掉自己在

5650
02:24:32,000 --> 02:24:33,000
重複這麼一套

5651
02:24:33,000 --> 02:24:33,000
很麻煩

5652
02:24:33,000 --> 02:24:34,000
啰嗦的事情

5653
02:24:34,000 --> 02:24:35,000
然後

5654
02:24:35,000 --> 02:24:36,000
啊

5655
02:24:36,000 --> 02:24:37,000
要把這個

5656
02:24:37,000 --> 02:24:38,000
已經解決了問題

5657
02:24:38,000 --> 02:24:39,000
再解決變了

5658
02:24:41,000 --> 02:24:42,000
嗯

5659
02:24:44,000 --> 02:24:45,000
如果你要說這個的話

5660
02:24:45,000 --> 02:24:46,000
那我覺得

5661
02:24:46,000 --> 02:24:48,000
Nagai 可能是一個

5662
02:24:48,000 --> 02:24:49,000
這樣的工具吧

5663
02:24:49,000 --> 02:24:50,000
為什麼

5664
02:24:50,000 --> 02:24:51,000
因為

5665
02:24:51,000 --> 02:24:52,000
你覺得

5666
02:24:52,000 --> 02:24:53,000
Nagai 並不限定於

5667
02:24:53,000 --> 02:24:55,000
是專門為 C 上

5668
02:24:55,000 --> 02:24:56,000
或者是專門為 Dothnats

5669
02:24:56,000 --> 02:24:57,000
平台所做的

5670
02:24:57,000 --> 02:24:58,000
一個包館的工具啊

5671
02:24:58,000 --> 02:24:59,000
他

5672
02:24:59,000 --> 02:25:00,000
他

5673
02:25:00,000 --> 02:25:01,000
你像我剛才說的

5674
02:25:01,000 --> 02:25:01,000
他可以

5675
02:25:01,000 --> 02:25:02,000
他可以拿到這塊兒

5676
02:25:02,000 --> 02:25:03,000
這種東西

5677
02:25:03,000 --> 02:25:04,000
啊

5678
02:25:04,000 --> 02:25:04,000
這個我沒有

5679
02:25:04,000 --> 02:25:05,000
我也是說

5680
02:25:05,000 --> 02:25:06,000
比如說像

5681
02:25:06,000 --> 02:25:07,000
啊

5682
02:25:07,000 --> 02:25:08,000
那個

5683
02:25:08,000 --> 02:25:09,000
這個什麼

5684
02:25:09,000 --> 02:25:10,000
No 的那些 NPM

5685
02:25:10,000 --> 02:25:12,000
他只能裝 Jaluscript 的包

5686
02:25:12,000 --> 02:25:12,000
然後

5687
02:25:12,000 --> 02:25:13,000
Web 也只能裝

5688
02:25:13,000 --> 02:25:14,000
Web 的包

5689
02:25:14,000 --> 02:25:15,000
就說

5690
02:25:15,000 --> 02:25:17,000
在現在流行的東西

5691
02:25:17,000 --> 02:25:18,000
都是根據哥哥語言

5692
02:25:18,000 --> 02:25:19,000
那個

5693
02:25:19,000 --> 02:25:20,000
獨特的一些系統

5694
02:25:20,000 --> 02:25:21,000
並不能

5695
02:25:21,000 --> 02:25:22,000
有一個通用的系統

5696
02:25:22,000 --> 02:25:24,000
解決他們之間的問題

5697
02:25:24,000 --> 02:25:25,000
你只說如果

5698
02:25:25,000 --> 02:25:26,000
Nagai 這種方式流行起來

5699
02:25:26,000 --> 02:25:28,000
我們也可以用 Nagai 裝

5700
02:25:28,000 --> 02:25:29,000
Nagai Jaluscript 的包

5701
02:25:29,000 --> 02:25:30,000
然後用

5702
02:25:30,000 --> 02:25:31,000
Nagai 裝 Go 的包嗎

5703
02:25:31,000 --> 02:25:33,000
還是怎麼樣

5704
02:25:33,000 --> 02:25:34,000
可是反過來

5705
02:25:34,000 --> 02:25:36,000
我的理解是

5706
02:25:36,000 --> 02:25:41,000
有些語言的部分

5707
02:25:41,000 --> 02:25:42,000
包也是可以通過

5708
02:25:42,000 --> 02:25:44,000
比如說 App 之類的東西

5709
02:25:44,000 --> 02:25:45,000
安裝的

5710
02:25:45,000 --> 02:25:45,000
對

5711
02:25:45,000 --> 02:25:46,000
但是如果

5712
02:25:46,000 --> 02:25:48,000
朝這個方式發展的話

5713
02:25:48,000 --> 02:25:49,000
你是不是就可以說

5714
02:25:49,000 --> 02:25:51,000
那整個系統平台上

5715
02:25:51,000 --> 02:25:53,000
乾脆只有一個包包的系統

5716
02:25:53,000 --> 02:25:55,000
它祭負責軟件安裝

5717
02:25:55,000 --> 02:25:58,000
又負責所有語言的

5718
02:25:58,000 --> 02:26:01,000
相關包覽裝就可以了

5719
02:26:01,000 --> 02:26:03,000
那我覺得其實對於 C 語言來說

5720
02:26:03,000 --> 02:26:04,000
C 語言沒有一個

5721
02:26:04,000 --> 02:26:06,000
即使是安裝包

5722
02:26:06,000 --> 02:26:07,000
對於安裝包覽系統

5723
02:26:07,000 --> 02:26:08,000
對吧

5724
02:26:08,000 --> 02:26:09,000
可是反過來說

5725
02:26:09,000 --> 02:26:11,000
你可以說 N 是和 APD 也好

5726
02:26:11,000 --> 02:26:13,000
而那個樣子也好

5727
02:26:13,000 --> 02:26:15,000
你在安裝那些 Develop

5728
02:26:15,000 --> 02:26:17,000
Develop

5729
02:26:17,000 --> 02:26:19,000
或者是 Develop

5730
02:26:19,000 --> 02:26:20,000
包的時候

5731
02:26:20,000 --> 02:26:23,000
你不就已經安裝了這個語言

5732
02:26:23,000 --> 02:26:26,000
C 語言所需要的投文件嗎

5733
02:26:26,000 --> 02:26:26,000
對

5734
02:26:26,000 --> 02:26:28,000
也是一個語言發展到足夠狀態的時候

5735
02:26:28,000 --> 02:26:30,000
它也許就

5736
02:26:31,000 --> 02:26:32,000
可以通過一個

5737
02:26:32,000 --> 02:26:34,000
犯用的

5738
02:26:34,000 --> 02:26:36,000
拍個是慢著來解決這個底

5739
02:26:36,000 --> 02:26:38,000
其實還是一個

5740
02:26:38,000 --> 02:26:39,000
就是說

5741
02:26:39,000 --> 02:26:42,000
這個不夠成熟的表現嗎

5742
02:26:42,000 --> 02:26:44,000
對應該是這樣的

5743
02:26:44,000 --> 02:26:46,000
但曾思不奇

5744
02:26:46,000 --> 02:26:50,000
哪是生活之美的來源是那麼說嗎

5745
02:26:50,000 --> 02:26:51,000
確實

5746
02:26:53,000 --> 02:26:56,000
我不確定這在程序語言這一套

5747
02:26:56,000 --> 02:26:58,000
就在包覽裡其實這樣是不是

5748
02:26:58,000 --> 02:26:59,000
一定是好的

5749
02:26:59,000 --> 02:27:00,000
但是

5750
02:27:00,000 --> 02:27:01,000
每次跨一個語言

5751
02:27:01,000 --> 02:27:03,000
都要重新學習練還是

5752
02:27:03,000 --> 02:27:05,000
滿高成本的一件事情嗎

5753
02:27:05,000 --> 02:27:06,000
我覺得

5754
02:27:06,000 --> 02:27:08,000
這就是 Polygalaut 的素名

5755
02:27:10,000 --> 02:27:11,000
好悲傷

5756
02:27:11,000 --> 02:27:12,000
如果你只會加上的話

5757
02:27:12,000 --> 02:27:14,000
也許就沒有

5758
02:27:14,000 --> 02:27:15,000
所有這些痛苦

5759
02:27:15,000 --> 02:27:18,000
你會生活在這種無知的幸福裡面

5760
02:27:18,000 --> 02:27:20,000
這是一個悲傷的關係

5761
02:27:22,000 --> 02:27:24,000
好吧已經兩個半小時了

5762
02:27:24,000 --> 02:27:25,000
好

5763
02:27:25,000 --> 02:27:26,000
今天就說吧

5764
02:27:26,000 --> 02:27:28,000
對今天我們的吐槽

5765
02:27:28,000 --> 02:27:30,000
那就到這裡為止吧

5766
02:27:30,000 --> 02:27:33,000
對我們今天的主題是

5767
02:27:33,000 --> 02:27:35,000
拍給 German 怎麼做

5768
02:27:35,000 --> 02:27:36,000
其實我們本來還想

5769
02:27:36,000 --> 02:27:38,000
就這個話題延伸到

5770
02:27:38,000 --> 02:27:39,000
比如說

5771
02:27:39,000 --> 02:27:40,000
不熟

5772
02:27:40,000 --> 02:27:42,000
做好了包怎樣

5773
02:27:42,000 --> 02:27:43,000
不熟到服務器上

5774
02:27:43,000 --> 02:27:44,000
一直以為要是不熟

5775
02:27:44,000 --> 02:27:46,000
所以產生了一系列問題

5776
02:27:46,000 --> 02:27:49,000
比如說不熟並不僅僅僅僅僅

5777
02:27:49,000 --> 02:27:50,000
單單是把一個

5778
02:27:50,000 --> 02:27:52,000
班的人扔到服務器上去運行

5779
02:27:52,000 --> 02:27:53,000
這麼簡單

5780
02:27:53,000 --> 02:27:55,000
當然對於某些構成學來說

5781
02:27:55,000 --> 02:27:56,000
這是可能的

5782
02:27:56,000 --> 02:27:59,000
但對我們其他的屬名來說

5783
02:27:59,000 --> 02:28:02,000
是裡面還是有很多學問所在

5784
02:28:02,000 --> 02:28:04,000
但是今天我們

5785
02:28:04,000 --> 02:28:05,000
也沒有時間展開了

5786
02:28:05,000 --> 02:28:06,000
所以還是

5787
02:28:06,000 --> 02:28:07,000
下次吧

5788
02:28:07,000 --> 02:28:08,000
下次找機會吧

5789
02:28:08,000 --> 02:28:10,000
就明年再說

5790
02:28:10,000 --> 02:28:13,000
Massio in 2015

5791
02:28:13,000 --> 02:28:14,000
Yes

5792
02:28:14,000 --> 02:28:16,000
就是各位聽到我們

5793
02:28:16,000 --> 02:28:17,000
這一期節目的時候

5794
02:28:17,000 --> 02:28:19,000
應該還有兩三天就要新年了

5795
02:28:19,000 --> 02:28:21,000
那也在處理住大家新年快樂

5796
02:28:21,000 --> 02:28:22,000
嗯

5797
02:28:22,000 --> 02:28:23,000
怎麼樣

5798
02:28:23,000 --> 02:28:24,000
好

5799
02:28:24,000 --> 02:28:25,000
我們

5800
02:28:25,000 --> 02:28:26,000
OK

5801
02:28:26,000 --> 02:28:26,000
下期再見

5802
02:28:26,000 --> 02:28:30,000
連同著明天兩期的所有的 Feelback

5803
02:28:30,000 --> 02:28:31,000
明年在

5804
02:28:31,000 --> 02:28:33,000
我現在新年的星期

5805
02:28:33,000 --> 02:28:39,000
想對重新來做一期新的內合服務

5806
02:28:39,000 --> 02:28:40,000
OK

5807
02:28:40,000 --> 02:28:41,000
我們今天做的期期嗎

5808
02:28:41,000 --> 02:28:42,000
不錯

