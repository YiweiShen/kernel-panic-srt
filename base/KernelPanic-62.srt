1
00:00:00,000 --> 00:00:12,000
您正在收听内和恐慌一党大致以计算机科技为主题的娱乐 podcast 我们号称硬核但是也没有什么干货想听人听不想听人就别听我们的网络是 pann.se

2
00:00:12,000 --> 00:00:19,000
您可以在网站上找到订阅我们节目的方法一起连个我们的方式我是舞套 我是 Rail

3
00:00:19,000 --> 00:00:24,000
今天节目开始前我们做一个简单的 follow up 哎好久没有做 follow up 了

4
00:00:24,000 --> 00:00:33,000
是针对上一期这个叫银石的光猫那提到的几个问题 我说一下后续吧

5
00:00:33,000 --> 00:00:39,000
第一就是说银石光猫案呢算是告破一半 怎么给一半

6
00:00:39,000 --> 00:00:52,000
就是我发出去之后有我的光猫的生长厂家的朋友找过来跟我确认过那个那个那个那个那个那首诗确实是他们光猫里面的设备发出来的

7
00:00:52,000 --> 00:00:59,000
不是外面的设备也不是我的举网里面其他设备发出来他们在他们的测试环境里面也负贤了这个东西

8
00:00:59,000 --> 00:01:04,000
然后那个产生那个诗的选项也找到了就是那个华入检测

9
00:01:05,000 --> 00:01:10,000
你猜对了他不是每 10 秒发一个包板上就用于环境检测了

10
00:01:10,000 --> 00:01:16,000
但是呢就是没有找到这个东西是谁写的也不知道的为什么是这个是

11
00:01:16,000 --> 00:01:21,000
我说过的光猫型号是上海 Bair 二卡特生产制造的嘛

12
00:01:21,000 --> 00:01:26,000
所以目前也不知道是 Bair 的工程是干的还是二卡特不能是干的还是说上海 Bair

13
00:01:26,000 --> 00:01:31,000
二卡特后来的工程是干的目前找不到人因为也不知道这个 former 大概谁写的

14
00:01:31,000 --> 00:01:32,000
就可能也比较久远

15
00:01:32,000 --> 00:01:34,000
暴露了他们没有温身肯超是吧

16
00:01:34,000 --> 00:01:39,000
或者说就是找我那个朋友他不是做的那块开发的嘛

17
00:01:39,000 --> 00:01:40,000
所以他也不清楚

18
00:01:40,000 --> 00:01:43,000
但没有这个权限是查看那个到底这个是谁谁坎面的进去的

19
00:01:43,000 --> 00:01:45,000
我也不知道他们有没有有可能是没有的

20
00:01:45,000 --> 00:01:48,000
这个我就不清楚了他们内部的问题

21
00:01:48,000 --> 00:01:50,000
但就说至少我说这个算是告破了一半

22
00:01:50,000 --> 00:01:52,000
就是说找到了这个源头

23
00:01:52,000 --> 00:01:54,000
找到了他这个是干嘛用的

24
00:01:54,000 --> 00:01:57,000
但是不知道是谁写进去的以及为什么是这首诗对吧

25
00:01:57,000 --> 00:01:58,000
OK

26
00:01:58,000 --> 00:01:59,000
就是第一个了

27
00:01:59,000 --> 00:02:03,000
这个浮纳不算字我们不是花了很长时间在讨论到底能不能够用

28
00:02:03,000 --> 00:02:10,000
以有房子里面用于接电视的那个同着电栏来延伸这个 WiFi 的

29
00:02:10,000 --> 00:02:12,000
信号的那个距离嘛对吧

30
00:02:12,000 --> 00:02:15,000
目前来看呢有两种观点

31
00:02:15,000 --> 00:02:17,000
我到时候也把这两个连接

32
00:02:17,000 --> 00:02:20,000
是一个 SuperUter 上面的这个回答放进去

33
00:02:20,000 --> 00:02:22,000
就是说正常你直接接

34
00:02:22,000 --> 00:02:23,000
就是我上次我说那个方法

35
00:02:23,000 --> 00:02:25,000
你直接把那个那个同着电栏

36
00:02:25,000 --> 00:02:27,000
就墙里面那个同着电栏

37
00:02:27,000 --> 00:02:28,000
给电视用的

38
00:02:28,000 --> 00:02:32,000
当成 WiFi 天线的延长是不行的因为他的电组不对

39
00:02:32,000 --> 00:02:34,000
那个这个同着电栏的电子

40
00:02:34,000 --> 00:02:37,000
电子好像说是一种劝一下

41
00:02:37,000 --> 00:02:40,000
好像是 75 O 母吧应该是

42
00:02:40,000 --> 00:02:41,000
对 75 O 的电子

43
00:02:41,000 --> 00:02:43,000
但是

44
00:02:43,000 --> 00:02:45,000
WiFi 天线的那个同就是那个叫

45
00:02:45,000 --> 00:02:48,000
这个专业名首条找到了叫做跪线

46
00:02:48,000 --> 00:02:54,000
就是这个就是延长 WiFi 的天线那个那个那个那个岛线

47
00:02:55,000 --> 00:02:57,000
的电组是 50 O

48
00:02:57,000 --> 00:02:59,000
所以正常你直接接上去可能是不行的

49
00:02:59,000 --> 00:03:00,000
因为信号很快就摔减了了

50
00:03:00,000 --> 00:03:02,000
但是呢

51
00:03:02,000 --> 00:03:03,000
有一种设备

52
00:03:03,000 --> 00:03:07,000
是可以转化一下就是他在那个通着电栏

53
00:03:07,000 --> 00:03:09,000
两端都接上一个类似于转接 7 样的东西

54
00:03:09,000 --> 00:03:14,000
可以把一个 WiFi 的信号转成那个通着电栏适合

55
00:03:14,000 --> 00:03:17,000
类似于你可以想象他是一个放大或者怎么样

56
00:03:17,000 --> 00:03:19,000
然后把它传达到另外一端

57
00:03:19,000 --> 00:03:20,000
这盒在节码出来

58
00:03:20,000 --> 00:03:21,000
然后再重新转背

59
00:03:21,000 --> 00:03:23,000
WiFi 能用的就这种东西是有的

60
00:03:23,000 --> 00:03:27,000
但这个设备有点贵而且国内我在淘宝在天貌

61
00:03:27,000 --> 00:03:28,000
在金融上都没有找到

62
00:03:28,000 --> 00:03:30,000
但是在压骂训练还好像是有的

63
00:03:30,000 --> 00:03:35,000
那个东西叫做 Mokka MOC 我不知道这个这个

64
00:03:35,000 --> 00:03:37,000
是什么那个说写

65
00:03:37,000 --> 00:03:39,000
然后我还发现一个特别好玩的东西叫做

66
00:03:39,000 --> 00:03:44,000
WiFi overco-ax 就是专门干净事情的

67
00:03:44,000 --> 00:03:49,000
就是专门在用那个同着电栏延长 WiFi 信号的一个解决方案

68
00:03:49,000 --> 00:03:52,000
这样让大家看下去就是要用的刚才那些东西嘛

69
00:03:52,000 --> 00:03:55,000
所以就解决这个电组不匹配的问题

70
00:03:55,000 --> 00:03:57,000
大家如果生活在国外

71
00:03:57,000 --> 00:04:01,000
然后你那个房子明天没有走往现只有这个同着电栏

72
00:04:01,000 --> 00:04:03,000
你就想解决这个信号的问题的话

73
00:04:03,000 --> 00:04:06,000
你可以去压骂训练设计一下的 Mokka MOC

74
00:04:06,000 --> 00:04:10,000
那个 MCA 都大写 O 事小写这么一个设备

75
00:04:10,000 --> 00:04:12,000
它可以完成这个东西

76
00:04:12,000 --> 00:04:15,000
然后我们也在我们的听众群里面

77
00:04:15,000 --> 00:04:17,000
就是 Teliger 们那个听众群里面

78
00:04:17,000 --> 00:04:19,000
有在海外的听众朋友他确实也买了

79
00:04:19,000 --> 00:04:20,000
用过这个东西好像效果还不错

80
00:04:20,000 --> 00:04:23,000
能够达到千兆把它应该说是

81
00:04:23,000 --> 00:04:26,000
如果你不是一定要延长这个 WiFi 信号的话

82
00:04:26,000 --> 00:04:28,000
可以直接把网线转到同着电栏

83
00:04:28,000 --> 00:04:30,000
那个转电头非常减了我

84
00:04:30,000 --> 00:04:33,000
但是 This works 也是可以的

85
00:04:33,000 --> 00:04:34,000
这就是这种方案也很可行的

86
00:04:34,000 --> 00:04:35,000
但具体怎么操作

87
00:04:35,000 --> 00:04:37,000
大家可能要去自行延长

88
00:04:37,000 --> 00:04:39,000
因为我房子里面有同着电栏

89
00:04:39,000 --> 00:04:41,000
但我实在是不想搞它

90
00:04:42,000 --> 00:04:43,000
好的

91
00:04:43,000 --> 00:04:44,000
好 OK

92
00:04:44,000 --> 00:04:45,000
就是 Felaba

93
00:04:45,000 --> 00:04:47,000
今天我们开始今天的政体

94
00:04:47,000 --> 00:04:48,000
今天有点特别好

95
00:04:49,000 --> 00:04:51,000
我们好久好久没有邀请过嘉宾

96
00:04:51,000 --> 00:04:54,000
今天我们邀请到一位重棒嘉宾

97
00:04:54,000 --> 00:04:56,000
就是我们的老朋友

98
00:04:56,000 --> 00:04:58,000
这期我们又是贵人路了

99
00:04:58,000 --> 00:04:59,000
可以说

100
00:05:00,000 --> 00:05:02,000
这期我们邀请到我的一个好朋友

101
00:05:02,000 --> 00:05:04,000
是就是大家可能很多人都用过

102
00:05:04,000 --> 00:05:07,000
这个网络开发调试工具

103
00:05:07,000 --> 00:05:09,000
Sirge 的作者

104
00:05:09,000 --> 00:05:09,000
李亚晨

105
00:05:09,000 --> 00:05:10,000
李亚晨你好

106
00:05:10,000 --> 00:05:12,000
两位老师好

107
00:05:13,000 --> 00:05:16,000
要不亚晨你稍微简单介绍一下自己

108
00:05:16,000 --> 00:05:20,000
我觉得可能我自己的软件的收集中和你们的听众

109
00:05:20,000 --> 00:05:23,000
其实应该出外面挺大的

110
00:05:23,000 --> 00:05:25,000
所以还需要再介绍一下吗

111
00:05:25,000 --> 00:05:27,000
我也不知道该怎么要介绍

112
00:05:27,000 --> 00:05:29,000
东西应该是不用介绍的

113
00:05:29,000 --> 00:05:31,000
但是大家应该对你这个人还是不太熟悉

114
00:05:31,000 --> 00:05:33,000
就是我说你有什么可以给听众朋友们分享

115
00:05:33,000 --> 00:05:35,000
就是介绍一下自己的

116
00:05:35,000 --> 00:05:38,000
对然后有什么我们想知道

117
00:05:38,000 --> 00:05:42,000
我们会接着在带提听众来提问的

118
00:05:42,000 --> 00:05:44,000
希望那我就简单地说一下

119
00:05:44,000 --> 00:05:46,000
把剩下的课子你们提问吧

120
00:05:46,000 --> 00:05:47,000
我现在的身份的话

121
00:05:47,000 --> 00:05:50,000
就是专职的 IS 的独立开发者

122
00:05:50,000 --> 00:05:52,000
然后之前的话

123
00:05:52,000 --> 00:05:55,000
主要是创业者的一个身份

124
00:05:55,000 --> 00:05:57,000
干过很多一些

125
00:05:57,000 --> 00:05:59,000
很标准的一些创业的事情

126
00:05:59,000 --> 00:06:01,000
甚至还做过一些像技术列头

127
00:06:01,000 --> 00:06:05,000
这样的一些和技术都已经快越来越没上观的一些事情

128
00:06:05,000 --> 00:06:07,000
然后反正从 15 年开始

129
00:06:07,000 --> 00:06:10,000
然后变成了一个专职的独立开发者

130
00:06:10,000 --> 00:06:12,000
现在的话主要的产品是

131
00:06:12,000 --> 00:06:14,000
Sirge 和 Alpass

132
00:06:14,000 --> 00:06:15,000
两款

133
00:06:15,000 --> 00:06:17,000
同时的话还有一些客户的事

134
00:06:17,000 --> 00:06:18,000
我们作为技术顾问去产与

135
00:06:18,000 --> 00:06:20,000
大概就这些

136
00:06:20,000 --> 00:06:22,000
Alpass 这个可能很多人不知道

137
00:06:22,000 --> 00:06:23,000
是一个密码管理器

138
00:06:23,000 --> 00:06:27,000
是应该是比 OnePassword 要好用的

139
00:06:27,000 --> 00:06:28,000
好谢谢

140
00:06:28,000 --> 00:06:29,000
但这个相对来说比较小众

141
00:06:29,000 --> 00:06:30,000
但密码管理器

142
00:06:30,000 --> 00:06:31,000
我之前我们之前节目

143
00:06:31,000 --> 00:06:33,000
有单独讲过一起

144
00:06:33,000 --> 00:06:34,000
不过那个时候你还没有写

145
00:06:34,000 --> 00:06:37,000
所以我们如果下次再聊的时候

146
00:06:37,000 --> 00:06:39,000
可以到时候再照应介绍一下

147
00:06:39,000 --> 00:06:41,000
但虽然今天我们邀请的亚城

148
00:06:41,000 --> 00:06:43,000
但是我们今天不聊 Sirge

149
00:06:43,000 --> 00:06:44,000
也不聊 Alpass

150
00:06:44,000 --> 00:06:46,000
甚至也不聊这个

151
00:06:46,000 --> 00:06:48,000
可以最后有一点相关

152
00:06:48,000 --> 00:06:50,000
但是甚至也不主要聊独立开发

153
00:06:50,000 --> 00:06:52,000
今天我们其实是要聊苹果对不对

154
00:06:52,000 --> 00:06:54,000
其实这个事也比较简单

155
00:06:54,000 --> 00:06:56,000
是因为目前我们三个里面

156
00:06:56,000 --> 00:06:59,000
只有亚城现在你是买了 M 1 芯片的

157
00:06:59,000 --> 00:07:00,000
Maple Pro 对吧

158
00:07:00,000 --> 00:07:01,000
对是的

159
00:07:01,000 --> 00:07:03,000
好像是我就比较急

160
00:07:03,000 --> 00:07:05,000
所以你是在发布的那一天

161
00:07:05,000 --> 00:07:07,000
就是可以定的时候第一时间定的吧

162
00:07:07,000 --> 00:07:07,000
对

163
00:07:07,000 --> 00:07:09,000
而且我当时第一时间定了之后

164
00:07:09,000 --> 00:07:12,000
由于他标准配置是 8 G 内存

165
00:07:12,000 --> 00:07:14,000
要定制板才能是十六斤内存

166
00:07:14,000 --> 00:07:18,000
定制了之后会使得发货周期延迟到

167
00:07:18,000 --> 00:07:20,000
我印象中正常发货时间应该是 20 号

168
00:07:20,000 --> 00:07:21,000
还是 19 号左右

169
00:07:21,000 --> 00:07:23,000
我特别急着又等不了

170
00:07:23,000 --> 00:07:25,000
然后我拖了一个迫的朋友

171
00:07:25,000 --> 00:07:26,000
然后他帮我查了一下

172
00:07:26,000 --> 00:07:28,000
现在是几点的苦存

173
00:07:28,000 --> 00:07:29,000
发现李文嘉比较近的一家店

174
00:07:29,000 --> 00:07:31,000
还有 16 级的一个高配板

175
00:07:31,000 --> 00:07:33,000
我就立刻跑到店里去

176
00:07:33,000 --> 00:07:34,000
现场拿了他回来

177
00:07:34,000 --> 00:07:36,000
然后把原来的店拿给取消了

178
00:07:36,000 --> 00:07:37,000
这里有个小知识

179
00:07:37,000 --> 00:07:39,000
就是说我们通常认为

180
00:07:39,000 --> 00:07:42,000
苹果店里面只有那种所谓的标配板

181
00:07:42,000 --> 00:07:42,000
对吧

182
00:07:42,000 --> 00:07:43,000
他比如说通常他

183
00:07:43,000 --> 00:07:44,000
苹果他在网站上

184
00:07:44,000 --> 00:07:45,000
他给一个 Mac 的配套

185
00:07:45,000 --> 00:07:47,000
他会给一个低配和一个高配

186
00:07:47,000 --> 00:07:48,000
这两个都是标准配置

187
00:07:48,000 --> 00:07:50,000
你不用去定制

188
00:07:50,000 --> 00:07:52,000
就可以直接在店里买到的

189
00:07:52,000 --> 00:07:52,000
对吧

190
00:07:52,000 --> 00:07:53,000
但是这次好像一点不一样对不对

191
00:07:53,000 --> 00:07:55,000
就是因为他的两个标准配置

192
00:07:55,000 --> 00:07:56,000
都只有 8 G 内存

193
00:07:56,000 --> 00:07:59,000
然后 16 级里头上按照官网的那个逻辑

194
00:07:59,000 --> 00:08:01,000
你是需要定制才可以选的

195
00:08:01,000 --> 00:08:02,000
对是的

196
00:08:02,000 --> 00:08:03,000
但是其实我和朋友聊了一下

197
00:08:03,000 --> 00:08:05,000
他说一般的话

198
00:08:05,000 --> 00:08:08,000
店里面会被大概五台左右的顶配机器

199
00:08:08,000 --> 00:08:11,000
就是每家店都会有这么一个储备

200
00:08:11,000 --> 00:08:12,000
所以说的话如果就是不确定的话

201
00:08:12,000 --> 00:08:14,000
可以提前去他们官网上

202
00:08:14,000 --> 00:08:16,000
扫着那个店的一个店的直接

203
00:08:16,000 --> 00:08:17,000
都不打他们的店的电话

204
00:08:17,000 --> 00:08:18,000
然后打电话去问一下

205
00:08:18,000 --> 00:08:20,000
他们现在有没有高配这个库存

206
00:08:20,000 --> 00:08:21,000
然后再过去

207
00:08:21,000 --> 00:08:22,000
直接就可以购买

208
00:08:22,000 --> 00:08:23,000
所以他们应对的场景

209
00:08:23,000 --> 00:08:25,000
就是一个土豪走进苹果店

210
00:08:25,000 --> 00:08:27,000
说我要你们店里最好的店长

211
00:08:27,000 --> 00:08:28,000
你给我拿一台出来

212
00:08:28,000 --> 00:08:31,000
对 我感觉应该是这个意思吧

213
00:08:31,000 --> 00:08:32,000
他比如说你去买这个顶配

214
00:08:32,000 --> 00:08:35,000
他我记得就是这一次的这个 M 1 的

215
00:08:35,000 --> 00:08:37,000
Macbook 他能选的

216
00:08:37,000 --> 00:08:39,000
只有是内存是可以变置

217
00:08:39,000 --> 00:08:41,000
高配的 8 机和高配的 16 机

218
00:08:41,000 --> 00:08:42,000
然后唯一能选的

219
00:08:42,000 --> 00:08:43,000
就像那个 SSD 的配置了对吧

220
00:08:43,000 --> 00:08:45,000
这个 SSD 的他的那个

221
00:08:45,000 --> 00:08:47,000
高配的能对都是配到哪里

222
00:08:47,000 --> 00:08:48,000
他店里面那台

223
00:08:48,000 --> 00:08:51,000
店里的机器我记得都是一 TB 的

224
00:08:51,000 --> 00:08:53,000
就是现在这次三个选上

225
00:08:53,000 --> 00:08:54,000
5121 T 和 2 T

226
00:08:54,000 --> 00:08:58,000
我印象中全是一 T 没有 2 T 的那个机器

227
00:08:58,000 --> 00:09:00,000
所以其实没有真的到最最顶的就是

228
00:09:00,000 --> 00:09:03,000
就是所有的加到最最大最贵的那款

229
00:09:03,000 --> 00:09:04,000
他还是没有的

230
00:09:04,000 --> 00:09:06,000
对 而且颜色也只有双方灰

231
00:09:06,000 --> 00:09:09,000
就双方灰了 16 机的 1 TB 机器

232
00:09:09,000 --> 00:09:12,000
这个机器好像是有个三次台左右

233
00:09:12,000 --> 00:09:13,000
就颜色也没得选

234
00:09:13,000 --> 00:09:15,000
如果你拿这台 16 机的配置的话

235
00:09:15,000 --> 00:09:16,000
对 是的 没错

236
00:09:16,000 --> 00:09:18,000
所以但是本来我就是要选的话

237
00:09:18,000 --> 00:09:19,000
就选双方灰

238
00:09:19,000 --> 00:09:20,000
所以说这个倒是不错

239
00:09:20,000 --> 00:09:20,000
就刚好

240
00:09:20,000 --> 00:09:21,000
他们其实还是有一些的

241
00:09:21,000 --> 00:09:22,000
这个大数据

242
00:09:22,000 --> 00:09:25,000
支撑这个角色说一般买这种配置的人

243
00:09:25,000 --> 00:09:28,000
他不会选那种比较少器的颜色

244
00:09:28,000 --> 00:09:29,000
而且这次其实那个颜色

245
00:09:29,000 --> 00:09:31,000
只有双方灰和颜色

246
00:09:31,000 --> 00:09:33,000
都是两个比较保守和传统的颜色

247
00:09:33,000 --> 00:09:35,000
也没过太大的匹别

248
00:09:35,000 --> 00:09:37,000
SKU 数量是比较简单的

249
00:09:38,000 --> 00:09:39,000
对 是的

250
00:09:40,000 --> 00:09:43,000
所以其实对土豪还是没有那么的友好

251
00:09:43,000 --> 00:09:45,000
对吧 不能说我想卖三个

252
00:09:45,000 --> 00:09:47,000
你给我最顶的那个

253
00:09:47,000 --> 00:09:47,000
不太不钱

254
00:09:47,000 --> 00:09:50,000
Money is not a issue 的时候也没有买

255
00:09:50,000 --> 00:09:51,000
因为你还是得去往上订知

256
00:09:52,000 --> 00:09:53,000
我觉得较是真土豪的话

257
00:09:53,000 --> 00:09:55,000
可能不会再以实爱慕姨

258
00:09:55,000 --> 00:09:56,000
还是什么

259
00:09:56,000 --> 00:09:59,000
直接来一个 Mac Pro 就直接带走了是吧

260
00:09:59,000 --> 00:10:01,000
是好像是个物件先见

261
00:10:02,000 --> 00:10:04,000
土豪 Steretife

262
00:10:05,000 --> 00:10:06,000
所以目前你看

263
00:10:06,000 --> 00:10:11,000
我们往前看到一些各种媒体网站的侧品

264
00:10:11,000 --> 00:10:14,000
但是我们聊聊你实际使用下来的感受

265
00:10:14,000 --> 00:10:15,000
就是跟他们侧品的

266
00:10:15,000 --> 00:10:17,000
你觉得有多大差异吗

267
00:10:17,000 --> 00:10:20,000
这个其实我作为最早就参与到

268
00:10:20,000 --> 00:10:23,000
阿姆芯片版本的

269
00:10:23,000 --> 00:10:24,000
也跑得开发的开发之来说

270
00:10:24,000 --> 00:10:26,000
因为 DTK 我找得拿到了吗

271
00:10:26,000 --> 00:10:27,000
对 你是有 DTK 的

272
00:10:27,000 --> 00:10:28,000
对 是的

273
00:10:28,000 --> 00:10:30,000
但是 DTK 的话由于受协议限制

274
00:10:30,000 --> 00:10:32,000
我也没有还没有仔细去看

275
00:10:32,000 --> 00:10:33,000
在现在这个状态下

276
00:10:33,000 --> 00:10:36,000
我能不能给他公开的发表

277
00:10:36,000 --> 00:10:38,000
一些 review 一些意见

278
00:10:39,000 --> 00:10:40,000
我想想

279
00:10:40,000 --> 00:10:42,000
我觉得应该没什么太大问题吧

280
00:10:43,000 --> 00:10:45,000
所以这个有 NDA 的 是吧

281
00:10:45,000 --> 00:10:46,000
DTK 是有 NDA 的

282
00:10:46,000 --> 00:10:47,000
对 这是有 NDA 的

283
00:10:47,000 --> 00:10:48,000
他官方体的是

284
00:10:48,000 --> 00:10:50,000
我不可以在 Public 的常数

285
00:10:50,000 --> 00:10:52,000
我去进太大进行 review

286
00:10:53,000 --> 00:10:54,000
但是好像我没有仔细看

287
00:10:54,000 --> 00:10:55,000
他有没有一个期限

288
00:10:55,000 --> 00:10:56,000
就到什么时间紧

289
00:10:56,000 --> 00:10:57,000
好像是没有的

290
00:10:58,000 --> 00:11:01,000
那我为了避免财到则肯理

291
00:11:01,000 --> 00:11:02,000
我还是尽量就不提他吧

292
00:11:02,000 --> 00:11:03,000
我们就假装他

293
00:11:03,000 --> 00:11:04,000
存在

294
00:11:04,000 --> 00:11:05,000
对 我们讨论他

295
00:11:05,000 --> 00:11:06,000
但这并不是一个 review

296
00:11:06,000 --> 00:11:07,000
明白

297
00:11:07,000 --> 00:11:10,000
我就是在想打这个插边球

298
00:11:10,000 --> 00:11:12,000
就是之前通过用 DTK 的时候

299
00:11:12,000 --> 00:11:13,000
我就能感受到

300
00:11:13,000 --> 00:11:16,000
这个苹果的这个 RM 芯片

301
00:11:16,000 --> 00:11:17,000
这个 A 系列芯片的话

302
00:11:17,000 --> 00:11:21,000
很有可能他之后出来的正式产品会更牛逼

303
00:11:21,000 --> 00:11:24,000
就是原来已经其实很牛逼了

304
00:11:24,000 --> 00:11:26,000
但是那个等到一个

305
00:11:26,000 --> 00:11:28,000
但是那块芯片的话是 ARZ

306
00:11:28,000 --> 00:11:30,000
是那个 IPAD 的之前用的芯片

307
00:11:31,000 --> 00:11:31,000
所以的话那么

308
00:11:31,000 --> 00:11:33,000
如果他本身就是为移动

309
00:11:33,000 --> 00:11:35,000
是为低空号是为设计的

310
00:11:35,000 --> 00:11:37,000
那如果是在这种基础上

311
00:11:37,000 --> 00:11:38,000
在 WM MacBook

312
00:11:38,000 --> 00:11:40,000
或者是 Macbook Pro 的话

313
00:11:40,000 --> 00:11:41,000
然后确实

314
00:11:41,000 --> 00:11:43,000
更优化的就是一块芯片

315
00:11:43,000 --> 00:11:45,000
那他出来的效果应该是非常进宝的

316
00:11:45,000 --> 00:11:47,000
然后确实的话

317
00:11:47,000 --> 00:11:49,000
从这几天的一个不完之测试

318
00:11:49,000 --> 00:11:50,000
还是使用来说

319
00:11:50,000 --> 00:11:53,000
都非常的让我感觉很兴奋

320
00:11:53,000 --> 00:11:56,000
这确实是一个可能有话实在意义的产品

321
00:11:56,000 --> 00:11:57,000
的这么一个进步

322
00:11:57,000 --> 00:11:59,000
就按我们这个行业里面的话说

323
00:11:59,000 --> 00:12:01,000
就是一批估计报到这个

324
00:12:01,000 --> 00:12:02,000
intire 的牙膏对吧

325
00:12:02,000 --> 00:12:04,000
对我自己的话说是

326
00:12:04,000 --> 00:12:05,000
不是把 intire 按在地板上

327
00:12:05,000 --> 00:12:06,000
我查这地板已经看

328
00:12:06,000 --> 00:12:08,000
快按穿了

329
00:12:08,000 --> 00:12:09,000
已经按出了一个观察了

330
00:12:09,000 --> 00:12:10,000
可以把印刀

331
00:12:10,000 --> 00:12:12,000
盖关订论了已经

332
00:12:12,000 --> 00:12:14,000
我们看到网上的撤评

333
00:12:14,000 --> 00:12:15,000
看新人基本上都是说是这种

334
00:12:15,000 --> 00:12:18,000
我们能看前上的这个

335
00:12:18,000 --> 00:12:20,000
定语都是什么 Massave Improvement

336
00:12:20,000 --> 00:12:22,000
就非常就是通常是调打的

337
00:12:22,000 --> 00:12:24,000
至少我们看到那个数字跑分的

338
00:12:24,000 --> 00:12:25,000
跑分有很多指标

339
00:12:25,000 --> 00:12:27,000
我们看最常见的几个什么

340
00:12:27,000 --> 00:12:29,000
这个笨诗什么那个

341
00:12:29,000 --> 00:12:31,000
那个叫什么 Spy 看那些对

342
00:12:31,000 --> 00:12:33,000
都是可能提高了 80%

343
00:12:33,000 --> 00:12:35,000
这种这种级别的性能的提升

344
00:12:35,000 --> 00:12:38,000
很论网站的论数就是一开始

345
00:12:38,000 --> 00:12:39,000
我们是怀疑的

346
00:12:39,000 --> 00:12:42,000
一开始我们是非常地处的

347
00:12:42,000 --> 00:12:43,000
不愿意相信这个结果的

348
00:12:43,000 --> 00:12:45,000
但是实际上手之后

349
00:12:45,000 --> 00:12:46,000
哇 靠原来真的这么香

350
00:12:46,000 --> 00:12:49,000
对 关键是就是说他在这种

351
00:12:49,000 --> 00:12:50,000
提供这种性能

352
00:12:50,000 --> 00:12:53,000
这么大幅度性能提升的情况下

353
00:12:53,000 --> 00:12:54,000
是基于什么呢

354
00:12:54,000 --> 00:12:55,000
是不发烫 对吧

355
00:12:55,000 --> 00:12:57,000
按那个我看他们的特别的方法

356
00:12:57,000 --> 00:12:59,000
那个评论的远远说是

357
00:12:59,000 --> 00:13:00,000
风扇基本不怎么转

358
00:13:00,000 --> 00:13:02,000
后就听不到

359
00:13:02,000 --> 00:13:03,000
然后特别是像那个

360
00:13:03,000 --> 00:13:04,000
MacBook Air 这款

361
00:13:04,000 --> 00:13:05,000
它根本就没有风扇

362
00:13:05,000 --> 00:13:08,000
而且序行能力还非常的恐怖

363
00:13:08,000 --> 00:13:08,000
就相关的嘛

364
00:13:08,000 --> 00:13:10,000
如果说你在那个风扇又不转

365
00:13:10,000 --> 00:13:12,000
又不就不怎么发热的情况下

366
00:13:12,000 --> 00:13:14,000
你做命的能耗是低的嘛

367
00:13:14,000 --> 00:13:15,000
那电池不变的情况

368
00:13:15,000 --> 00:13:17,000
然后变例你虚荣就就前面长了嘛

369
00:13:17,000 --> 00:13:18,000
但是我们又想他会有那么长的

370
00:13:18,000 --> 00:13:18,000
对吧

371
00:13:18,000 --> 00:13:20,000
对 我其实都还有一个

372
00:13:20,000 --> 00:13:21,000
疑问这个 Mac Pro

373
00:13:21,000 --> 00:13:23,000
这个多的这个风扇拿来干嘛的

374
00:13:23,000 --> 00:13:26,000
我现在就没有能让他转起来过

375
00:13:26,000 --> 00:13:27,000
但他他再转嘛

376
00:13:27,000 --> 00:13:29,000
就是你确定他是一直在转

377
00:13:29,000 --> 00:13:32,000
还是说需要才转

378
00:13:32,000 --> 00:13:34,000
我贴上去感受的时候

379
00:13:34,000 --> 00:13:36,000
应该是与非常低的频率在转的

380
00:13:36,000 --> 00:13:40,000
就是你基本上是完全感受不了他到他再转

381
00:13:40,000 --> 00:13:41,000
那实际上他确实在转

382
00:13:41,000 --> 00:13:43,000
他转的意义可能就是为了

383
00:13:43,000 --> 00:13:46,000
提供一个压力让灰泉不要进去

384
00:13:46,000 --> 00:13:48,000
那次他不是为了散热

385
00:13:48,000 --> 00:13:49,000
可能真的是

386
00:13:49,000 --> 00:13:51,000
或者就是为了一个

387
00:13:51,000 --> 00:13:53,000
他因为这样他这个就叫什么来的

388
00:13:53,000 --> 00:13:55,000
就是热工城市

389
00:13:55,000 --> 00:13:56,000
还是热力学怎么办

390
00:13:56,000 --> 00:13:58,000
就是他得维持一个平衡嘛

391
00:13:58,000 --> 00:13:58,000
就是那个

392
00:13:58,000 --> 00:14:00,000
热动一学 你想说

393
00:14:00,000 --> 00:14:01,000
Sermol Dynamics

394
00:14:01,000 --> 00:14:03,000
我只知道以前那个

395
00:14:03,000 --> 00:14:07,000
笑那些去清华读这个热工城的

396
00:14:07,000 --> 00:14:08,000
热动你干嘛

397
00:14:08,000 --> 00:14:09,000
热能学的这行的时候

398
00:14:09,000 --> 00:14:10,000
他们都是烧光炉

399
00:14:10,000 --> 00:14:11,000
对吧

400
00:14:11,000 --> 00:14:12,000
其实但其实

401
00:14:12,000 --> 00:14:14,000
这个东西是可以用到很多场景的

402
00:14:14,000 --> 00:14:17,000
烧光炉只是一个比较大型的使用场景

403
00:14:17,000 --> 00:14:17,000
对吧

404
00:14:17,000 --> 00:14:19,000
包括你现在做芯片也好

405
00:14:19,000 --> 00:14:21,000
烧光炉很难那可不

406
00:14:22,000 --> 00:14:24,000
他可能是以这么低的一个转出的话

407
00:14:24,000 --> 00:14:26,000
就已经能够把他维持很好了

408
00:14:26,000 --> 00:14:27,000
平衡了

409
00:14:27,000 --> 00:14:28,000
对 是的

410
00:14:28,000 --> 00:14:29,000
因为那个

411
00:14:29,000 --> 00:14:30,000
同样是这个

412
00:14:30,000 --> 00:14:31,000
这个 MV 芯片的那个

413
00:14:31,000 --> 00:14:33,000
NACO 给他是完全被动

414
00:14:33,000 --> 00:14:34,000
然后我们看到

415
00:14:34,000 --> 00:14:36,000
你昨天那个 FX 也出那个

416
00:14:36,000 --> 00:14:37,000
拆解图了

417
00:14:37,000 --> 00:14:38,000
就他把那个打开看来一下

418
00:14:38,000 --> 00:14:40,000
那个 NACO 的 Air 里面

419
00:14:40,000 --> 00:14:41,000
他其实就是

420
00:14:41,000 --> 00:14:43,000
愉快比较大的那个散热片

421
00:14:43,000 --> 00:14:44,000
对吧

422
00:14:44,000 --> 00:14:45,000
但是完全没有

423
00:14:45,000 --> 00:14:46,000
没有那个方向

424
00:14:46,000 --> 00:14:48,000
他也可以完成这么一个

425
00:14:48,000 --> 00:14:49,000
就是不是那种

426
00:14:49,000 --> 00:14:50,000
高腹载

427
00:14:50,000 --> 00:14:53,000
不是那种持续高腹载状况下的散热

428
00:14:53,000 --> 00:14:54,000
那照理说

429
00:14:54,000 --> 00:14:56,000
这个 NACO Pro 有一个小风扇

430
00:14:56,000 --> 00:14:58,000
他能够低速的运转

431
00:14:58,000 --> 00:15:00,000
能够也能够很快的

432
00:15:00,000 --> 00:15:02,000
实现热的平衡

433
00:15:02,000 --> 00:15:02,000
对

434
00:15:02,000 --> 00:15:04,000
而且这个和 Internet 机器比起来

435
00:15:04,000 --> 00:15:05,000
真的是天涯之别

436
00:15:05,000 --> 00:15:07,000
我第二轮测试的时候

437
00:15:07,000 --> 00:15:08,000
是测试去编移代码

438
00:15:08,000 --> 00:15:10,000
然后看他们的性能怎么样

439
00:15:10,000 --> 00:15:12,000
我两台 Internet 机器

440
00:15:12,000 --> 00:15:14,000
一台是 MAC Pro

441
00:15:14,000 --> 00:15:15,000
一台是 MAC Pro 可 Air

442
00:15:15,000 --> 00:15:17,000
都是才开始编移第一轮到一半的时候

443
00:15:17,000 --> 00:15:19,000
风扇就已经基本上到满转了

444
00:15:19,000 --> 00:15:21,000
就已经进入很吵的状态了

445
00:15:21,000 --> 00:15:21,000
对吧

446
00:15:21,000 --> 00:15:23,000
战斗机来细的感觉

447
00:15:23,000 --> 00:15:24,000
对是的

448
00:15:24,000 --> 00:15:27,000
然后 M 1 在那台 MAC Pro 的话

449
00:15:27,000 --> 00:15:28,000
三次测完之后

450
00:15:28,000 --> 00:15:31,000
抹他就感觉温度几乎没有提升

451
00:15:31,000 --> 00:15:34,000
就还是那种试温的状态了

452
00:15:34,000 --> 00:15:35,000
对是的

453
00:15:35,000 --> 00:15:39,000
就当然感觉这已经是黑科技一样的一个存在了

454
00:15:39,000 --> 00:15:40,000
因为我们知道 MAC Pro

455
00:15:40,000 --> 00:15:43,000
是前几代的时候换过一个更薄的外殇

456
00:15:43,000 --> 00:15:45,000
以前不是 Type-C 借口

457
00:15:45,000 --> 00:15:48,000
以前是蔡北借口的时候

458
00:15:48,000 --> 00:15:51,000
他那个时候大家都会抱怨说

459
00:15:51,000 --> 00:15:52,000
有时候就用的太猛

460
00:15:52,000 --> 00:15:54,000
他那个底部会比较烫

461
00:15:54,000 --> 00:15:56,000
而 Type-C 博 Pro 那个有独立显卡

462
00:15:56,000 --> 00:15:59,000
和 CPU 的两个热缘

463
00:15:59,000 --> 00:16:02,000
后来他换到了现在外形

464
00:16:02,000 --> 00:16:05,000
就是把宝的然后编上是 Type-C 借口的时候

465
00:16:05,000 --> 00:16:06,000
就更烫了

466
00:16:06,000 --> 00:16:07,000
就是 Intern 的时候对吧

467
00:16:07,000 --> 00:16:09,000
我们到 FoodBody 放在膝盖上的话

468
00:16:09,000 --> 00:16:11,000
他是有这个他们那个说话叫什么来的

469
00:16:11,000 --> 00:16:13,000
活腿长箭蛋对不对

470
00:16:16,000 --> 00:16:17,000
而且我还听过一个说法

471
00:16:17,000 --> 00:16:21,000
就是对于那个现在的四口的 MAC Pro Pro

472
00:16:21,000 --> 00:16:22,000
你要给他充电的话

473
00:16:22,000 --> 00:16:24,000
是应该要插固定插右边

474
00:16:24,000 --> 00:16:25,000
他的固定插左边

475
00:16:25,000 --> 00:16:28,000
这样去减少他那一侧的发热才能平衡

476
00:16:28,000 --> 00:16:30,000
对我们上一期好像结束了

477
00:16:30,000 --> 00:16:31,000
结束的时候谈到这个了

478
00:16:31,000 --> 00:16:33,000
就是你要是从一边插的话

479
00:16:33,000 --> 00:16:34,000
他会特别烫

480
00:16:34,000 --> 00:16:35,000
给他有一个叫什么

481
00:16:35,000 --> 00:16:38,000
电压管理毛块是在某一边

482
00:16:38,000 --> 00:16:39,000
然后会导致升温

483
00:16:39,000 --> 00:16:40,000
然后升温就会降频

484
00:16:40,000 --> 00:16:41,000
然后性能也会受影响

485
00:16:41,000 --> 00:16:44,000
现在 Apple 把这个国就完全丢给了 Intern

486
00:16:44,000 --> 00:16:45,000
告诉大家

487
00:16:45,000 --> 00:16:46,000
好 不是我们做的

488
00:16:46,000 --> 00:16:47,000
来

489
00:16:47,000 --> 00:16:49,000
对 所以这件事情证明了之前

490
00:16:49,000 --> 00:16:51,000
那个有几个问题

491
00:16:51,000 --> 00:16:52,000
就评过我们不是老师说

492
00:16:52,000 --> 00:16:55,000
他最近 MAC 这几代就迭代都非常的慢

493
00:16:55,000 --> 00:16:56,000
然后就是非常的

494
00:16:56,000 --> 00:16:57,000
就不让人满意嘛

495
00:16:57,000 --> 00:16:59,000
但最后我们都国现在

496
00:16:59,000 --> 00:17:01,000
你可以明确的说是 Intern 的过对不对

497
00:17:01,000 --> 00:17:02,000
真相大白

498
00:17:02,000 --> 00:17:04,000
亚成 我记得你也有买那个

499
00:17:04,000 --> 00:17:06,000
垃圾桶的那个 MAC Pro 是不是

500
00:17:06,000 --> 00:17:09,000
就是第一代的那个 MAC Pro Pro

501
00:17:09,000 --> 00:17:11,000
对 那是 13 年的那个型号了

502
00:17:11,000 --> 00:17:12,000
没办法就这种的话

503
00:17:12,000 --> 00:17:14,000
对 垃圾桶总统就一代

504
00:17:14,000 --> 00:17:17,000
没有之后也没有前屋古人后来者

505
00:17:17,000 --> 00:17:18,000
他跟英国一次 CPU 好像

506
00:17:18,000 --> 00:17:21,000
我记得好像只是小型号的

507
00:17:21,000 --> 00:17:22,000
就是可能是加了几个选项

508
00:17:22,000 --> 00:17:24,000
把反正都是 13 年的那一款

509
00:17:24,000 --> 00:17:26,000
对对 你没有大改过

510
00:17:26,000 --> 00:17:28,000
对 其实那属于你们叫 Face Live

511
00:17:28,000 --> 00:17:29,000
小改款

512
00:17:29,000 --> 00:17:31,000
小改的 不是大改

513
00:17:31,000 --> 00:17:33,000
然后就是当时他

514
00:17:33,000 --> 00:17:36,000
那个垃圾桶他出来的时候说是

515
00:17:36,000 --> 00:17:38,000
最后他们的不是要做了一个

516
00:17:38,000 --> 00:17:40,000
要求那些就是 MAC 的那种专业媒体

517
00:17:40,000 --> 00:17:42,000
去看那个小会也说

518
00:17:42,000 --> 00:17:45,000
他们之前那个设计是

519
00:17:45,000 --> 00:17:46,000
就是我们来的 遇到了

520
00:17:46,000 --> 00:17:49,000
这个 Thirmo Constraint 就是最大的热门的限制

521
00:17:49,000 --> 00:17:50,000
其实这个国也是 Intern 的 对吧

522
00:17:50,000 --> 00:17:53,000
因为后者说是加上这个 MD 的

523
00:17:53,000 --> 00:17:54,000
因为那个显看也是个三两大户

524
00:17:54,000 --> 00:17:56,000
就是他没有想到就说

525
00:17:56,000 --> 00:18:01,000
你们竟然不能够按照我们预期的提升

526
00:18:01,000 --> 00:18:02,000
这个能 那个功号

527
00:18:02,000 --> 00:18:05,000
就是 美单位功号的性能

528
00:18:05,000 --> 00:18:08,000
导致我们不能在这么小的空间里面

529
00:18:08,000 --> 00:18:12,000
用一个单一的风扇完成整个设备的三细了

530
00:18:12,000 --> 00:18:17,000
所以导致我们产品的风 Factor 外观 外型和整体的形态

531
00:18:17,000 --> 00:18:20,000
没有办法支撑不断的后续的迭代

532
00:18:20,000 --> 00:18:22,000
这口锅已经毫无疑问了

533
00:18:22,000 --> 00:18:25,000
做实地落到了 Intern 和 MD 的头上了

534
00:18:25,000 --> 00:18:28,000
Intern 是显卡 而是 SAPO

535
00:18:28,000 --> 00:18:30,000
然后 MD 是因为显卡嘛

536
00:18:30,000 --> 00:18:31,000
反正都是用不下

537
00:18:31,000 --> 00:18:33,000
对 因为我们现在看到确实也是

538
00:18:33,000 --> 00:18:35,000
以前你说 因为我二十年也好

539
00:18:35,000 --> 00:18:38,000
让我看到你买了最近新出的那几套显卡

540
00:18:38,000 --> 00:18:39,000
年轻人的显卡都是一个大卡

541
00:18:39,000 --> 00:18:41,000
然后三个风扇 对吧

542
00:18:41,000 --> 00:18:43,000
然后一专起来也是非常想的

543
00:18:43,000 --> 00:18:44,000
对 电池路上

544
00:18:44,000 --> 00:18:46,000
电池

545
00:18:46,000 --> 00:18:48,000
然后我们看到这次就是 MD 芯片

546
00:18:48,000 --> 00:18:51,000
不光是 CPU 的性能报表

547
00:18:51,000 --> 00:18:54,000
GPU 的性能也是把它是几身显卡

548
00:18:54,000 --> 00:18:56,000
它的几身显卡的性能

549
00:18:56,000 --> 00:19:00,000
也是把 Intern 的那个叫时代的那个就是 Aris

550
00:19:00,000 --> 00:19:02,000
也是按在地板上摸穿 对吧

551
00:19:02,000 --> 00:19:04,000
它提升的还要不还不止

552
00:19:04,000 --> 00:19:06,000
不是说几十这种

553
00:19:06,000 --> 00:19:09,000
它是提高了两三倍吧

554
00:19:09,000 --> 00:19:10,000
我记得那个是大概数字是

555
00:19:10,000 --> 00:19:13,000
对那个图形性能我到时候没有仔细测的事了

556
00:19:13,000 --> 00:19:16,000
因为那个确实不是我了解的东西

557
00:19:16,000 --> 00:19:17,000
然后我看了的话

558
00:19:17,000 --> 00:19:18,000
别人的评测的话

559
00:19:18,000 --> 00:19:20,000
很多是视频播作续评测

560
00:19:20,000 --> 00:19:23,000
它去进行视频编辑的时候的一个性能

561
00:19:23,000 --> 00:19:27,000
如果由于 MD 它自己有 H 265 的硬节马

562
00:19:27,000 --> 00:19:28,000
把出于说这个好

563
00:19:28,000 --> 00:19:30,000
好像这个评测一点不太公平

564
00:19:30,000 --> 00:19:32,000
这个事情要土草一下

565
00:19:32,000 --> 00:19:35,000
包括我们记得最开始报出这件事情

566
00:19:35,000 --> 00:19:38,000
做着一个显示的对比是那个叫做

567
00:19:38,000 --> 00:19:39,000
Jones and Morris

568
00:19:39,000 --> 00:19:40,000
他在 YouTube 上做了一个

569
00:19:40,000 --> 00:19:43,000
好像是两三分钟的短短评吧

570
00:19:43,000 --> 00:19:48,000
他评的是输出一段 H 265 的视频

571
00:19:48,000 --> 00:19:51,000
就是他是做那个视频播主吗 对吧

572
00:19:51,000 --> 00:19:53,000
他说我有一个原始视频

573
00:19:53,000 --> 00:19:55,000
我编辖 我要输出成这个叫成篇

574
00:19:55,000 --> 00:19:57,000
要留出来成一个 H 265 中

575
00:19:57,000 --> 00:19:59,000
可以给大家播放那个文件

576
00:19:59,000 --> 00:20:02,000
把现在给他的好像他的 iMac Pro 吧

577
00:20:02,000 --> 00:20:03,000
上面开始点

578
00:20:03,000 --> 00:20:06,000
然后已经那边就已经开始在转马说出了 对吧

579
00:20:07,000 --> 00:20:10,000
然后他说他拿出他刚买的这个

580
00:20:10,000 --> 00:20:11,000
iPhone 12 的那个 mini

581
00:20:11,000 --> 00:20:12,000
然后说怎么那个这个

582
00:20:12,000 --> 00:20:13,000
在给你莫及半天说

583
00:20:13,000 --> 00:20:18,000
现在我们开始在这个 iPhone mini 上面去做同样的事情

584
00:20:18,000 --> 00:20:20,000
结果那个时候已经那个 iMac 他们已经跑了

585
00:20:20,000 --> 00:20:22,000
可能一两分钟了 对吧

586
00:20:22,000 --> 00:20:23,000
然后这个他在开后面给

587
00:20:23,000 --> 00:20:26,000
然后这个时候 iPhone mini 还是比他那个

588
00:20:26,000 --> 00:20:28,000
iMac 先完成这个转马工作

589
00:20:28,000 --> 00:20:31,000
他就很 impressive 对不对

590
00:20:31,000 --> 00:20:32,000
但是这个事情干的就说亚成讲了

591
00:20:32,000 --> 00:20:35,000
他不是太公平是原因是在于说

592
00:20:35,000 --> 00:20:38,000
一个是用 装用硬件去做出

593
00:20:38,000 --> 00:20:40,000
另外一个是用那个 CPU 去养的

594
00:20:40,000 --> 00:20:41,000
肯定是不能比的

595
00:20:41,000 --> 00:20:41,000
对

596
00:20:41,000 --> 00:20:44,000
只不过说到不公平这式的话

597
00:20:44,000 --> 00:20:47,000
我们之前大家就比 CPU 性能的时候

598
00:20:47,000 --> 00:20:49,000
其实现在拿来和 iMac 一比的东西

599
00:20:49,000 --> 00:20:51,000
都是拿 iMac Pro

600
00:20:51,000 --> 00:20:54,000
Mac Pro 从顶级的做面端的 CPU 去比了

601
00:20:54,000 --> 00:20:57,000
一动弄他的根本就早就已经不知道是在哪里去了

602
00:20:58,000 --> 00:20:59,000
就是如果有公号限制的

603
00:20:59,000 --> 00:21:00,000
肯定都是比不够的

604
00:21:00,000 --> 00:21:01,000
对吧 但只有找

605
00:21:01,000 --> 00:21:03,000
那都不太说公号限制的

606
00:21:03,000 --> 00:21:05,000
因为像那个 iMac Pro

607
00:21:05,000 --> 00:21:06,000
就做面级的 CPU

608
00:21:06,000 --> 00:21:08,000
它都是公号都是跟即时上百瓦的就这种

609
00:21:08,000 --> 00:21:10,000
对 因为我自己对比的时候

610
00:21:10,000 --> 00:21:13,000
我是测的是我的 iMac Pro 和我的之前的一九款的

611
00:21:13,000 --> 00:21:15,000
iMac iMac iMac Pro Air

612
00:21:15,000 --> 00:21:17,000
iMac Pro Air 的话

613
00:21:17,000 --> 00:21:19,000
它那个 CPU 是比较弱了 实量合的

614
00:21:19,000 --> 00:21:22,000
但是相比现在的 iMac Pro Air 的话

615
00:21:22,000 --> 00:21:25,000
相当于这是一个一年前的完全同价格的一个产品

616
00:21:25,000 --> 00:21:26,000
拿来比较

617
00:21:26,000 --> 00:21:28,000
然后记得测试结果的话

618
00:21:28,000 --> 00:21:31,000
在 iMac 一上面的边缺时间大概是 40 秒

619
00:21:31,000 --> 00:21:35,000
到了 Mac Pro Air 上面的话是大概接近 260 秒

620
00:21:35,000 --> 00:21:38,000
是这么一个翻这么多倍的差去

621
00:21:38,000 --> 00:21:40,000
就是六倍 对吧

622
00:21:40,000 --> 00:21:44,000
对 没错 就是我做这个测试的时候

623
00:21:44,000 --> 00:21:47,000
到后面我真的都不想等 Mac Pro Air 测试一次的结果了

624
00:21:47,000 --> 00:21:48,000
太慢长了

625
00:21:49,000 --> 00:21:50,000
这个月还是有风扇的 对吧

626
00:21:50,000 --> 00:21:51,000
我建讨了一个小风扇

627
00:21:51,000 --> 00:21:55,000
对 是的 而且风扇转已经转到最想了

628
00:21:55,000 --> 00:21:59,000
但你这个也是有风扇的 但是你如果说你是拿 MV 的 AirV

629
00:21:59,000 --> 00:22:01,000
我相信这个结果也不会差的太远

630
00:22:01,000 --> 00:22:06,000
因为我们看它的侧品结果一般好像说是 8 分钟以上才会

631
00:22:06,000 --> 00:22:08,000
Sort of 就是降频线速吗

632
00:22:08,000 --> 00:22:10,000
没错 所以这次的话

633
00:22:10,000 --> 00:22:14,000
这次 Air 和 Pro 的其实是一个定位还挺奇怪的两个产品

634
00:22:14,000 --> 00:22:17,000
就是感觉好像到底干麦 Pro 还是买 Air 的话很难选

635
00:22:17,000 --> 00:22:21,000
你可以解释一下你为什么选择买 ProGoogle 买 Air 吗

636
00:22:21,000 --> 00:22:24,000
因为从参与许人来说好像差的并不多

637
00:22:24,000 --> 00:22:27,000
它的屏幕首先是差不多的 是吧

638
00:22:27,000 --> 00:22:28,000
我印象中好像没有区别

639
00:22:28,000 --> 00:22:30,000
所有的技术都是一样的

640
00:22:31,000 --> 00:22:35,000
对 而且这次不一样以前他们就上一代就是 Intern 的芯片的 Air

641
00:22:35,000 --> 00:22:39,000
它那个屏幕不是所谓的 P 3 广色域的屏幕吗

642
00:22:39,000 --> 00:22:41,000
但这次它连这个也升上来了

643
00:22:41,000 --> 00:22:44,000
对 我记得我自己 我购买之前看过那个

644
00:22:44,000 --> 00:22:50,000
今天学习功课的时候发现好像没有什么屏幕上有人提到国会有区别

645
00:22:50,000 --> 00:22:54,000
我自己买 Pro 的话是想再给 TouchBar 一个机会

646
00:22:54,000 --> 00:22:59,000
因为我在这台 Air 之前的那台的话也是台麦 Pro

647
00:22:59,000 --> 00:23:04,000
但那个 TouchBar 用得我非常早醒 就是经常的我会想要一个功能见的时候

648
00:23:04,000 --> 00:23:07,000
要么摸不到在哪里特别是 It'sCabe 见

649
00:23:07,000 --> 00:23:09,000
或者是它直接死医疗

650
00:23:09,000 --> 00:23:10,000
所以说就非常的难受

651
00:23:10,000 --> 00:23:13,000
所以这次想着 既然要换的话

652
00:23:13,000 --> 00:23:16,000
那我就再给你 顺便给 ProGoogle 一个机会

653
00:23:16,000 --> 00:23:21,000
你的上一代那个 Pro 的是没有独立的物理的 It'sCabe 见的那款对吧

654
00:23:21,000 --> 00:23:24,000
对 是的 那是最早发布的那一款的 TouchBar

655
00:23:25,000 --> 00:23:28,000
它后来是出过一款有单独的 It'sCabe 见

656
00:23:28,000 --> 00:23:30,000
同时有 TouchBar 的麦 Pro 我记得 对不对

657
00:23:30,000 --> 00:23:31,000
对 就是上一款

658
00:23:31,000 --> 00:23:33,000
19 年更新内代了

659
00:23:33,000 --> 00:23:35,000
19 还是哪一年不记得的反正

660
00:23:35,000 --> 00:23:37,000
这一代和上一代在这个方面是一模一

661
00:23:37,000 --> 00:23:40,000
就是今年年初哪一代吧 应该是

662
00:23:41,000 --> 00:23:44,000
今年的 如果你现在去苹果店买

663
00:23:44,000 --> 00:23:47,000
然后你说你要这个 inter 芯片的麦 Pro Pro

664
00:23:47,000 --> 00:23:51,000
它都是同时有物理的 It'sCabe 见和 TouchBar

665
00:23:52,000 --> 00:23:57,000
所以你是我遇到的第一个好像还不太反感 TouchBar 的人

666
00:23:57,000 --> 00:23:59,000
但是你刚才说其实体验也不是很好

667
00:23:59,000 --> 00:24:01,000
我其实是很反感的

668
00:24:01,000 --> 00:24:05,000
我刚才想说就是你用第一代 TouchBar 你觉得很不爽

669
00:24:05,000 --> 00:24:09,000
然后你说 再给第二代 TouchBar 一个机会

670
00:24:09,000 --> 00:24:13,000
这个思路就比较奇怪

671
00:24:13,000 --> 00:24:16,000
这就是真的自身国粉吧

672
00:24:16,000 --> 00:24:18,000
而且可能可以算吧

673
00:24:18,000 --> 00:24:20,000
就是因为既然要换点脑袋

674
00:24:20,000 --> 00:24:21,000
那就多带来一点变化

675
00:24:21,000 --> 00:24:23,000
多带来一点必要的去体验

676
00:24:23,000 --> 00:24:25,000
这个我觉得也可以理解一下

677
00:24:25,000 --> 00:24:27,000
因为有一个很显著的区别就是说

678
00:24:27,000 --> 00:24:35,000
inter 就是 inter 芯片的麦 Pro Pro 的 TouchBar 是用 T 2 那个芯片来驱动的

679
00:24:35,000 --> 00:24:38,000
它有一个单独的一个 Brigel S 来驱动它 对吧

680
00:24:38,000 --> 00:24:41,000
所以导致各种各样的通讯问题我们都看到

681
00:24:41,000 --> 00:24:43,000
都已经看到各种什么死机

682
00:24:43,000 --> 00:24:46,000
什么没反应都已经很多吐槽了

683
00:24:46,000 --> 00:24:50,000
但这次 M 1 的 TouchBar 照我的理解

684
00:24:50,000 --> 00:24:54,000
首先 M 1 已经把 T 2 的所有功能只能合在 M 1 里面

685
00:24:54,000 --> 00:24:55,000
没有单独的一个 T 2 芯片了

686
00:24:55,000 --> 00:24:59,000
那我的理解应该也不存在这个所谓的 Brigel S 的 对吧

687
00:24:59,000 --> 00:25:03,000
它应该就是在 M 芯片里面单独自行在那里面跑的

688
00:25:03,000 --> 00:25:07,000
所以有可能说这样就可以解决

689
00:25:07,000 --> 00:25:10,000
它起码这件各种都能够想一失灵什么死机的问题对不对

690
00:25:10,000 --> 00:25:14,000
对 因为这事情之间后对我们自理事实上的聊过

691
00:25:14,000 --> 00:25:17,000
就是从我自己观察的话就在舅板的设备上

692
00:25:17,000 --> 00:25:23,000
T 2 的芯片用的是 USB 总线和整个 CPU 基金通信

693
00:25:23,000 --> 00:25:25,000
按照我们自己之前的经验来说的话

694
00:25:25,000 --> 00:25:29,000
USB 的总线的靠线一般来说可能是没那么高的

695
00:25:29,000 --> 00:25:32,000
就是它还是会在魔动情况下就散断了

696
00:25:32,000 --> 00:25:35,000
然后说会不会是因为这样的一个原因导致 TouchBar 9 的时候

697
00:25:35,000 --> 00:25:38,000
就突然就死机或者是它就怎么就不灵烂了

698
00:25:38,000 --> 00:25:40,000
所以说我也是在想试一下的

699
00:25:40,000 --> 00:25:42,000
所以你想再给它一个机会看一下对吧

700
00:25:42,000 --> 00:25:46,000
对是的对看它是不是也是硬的过

701
00:25:46,000 --> 00:25:50,000
那如果说我们跑开这个不稳定性的死机

702
00:25:50,000 --> 00:25:55,000
这种因素来看它其实把本身你觉得它的使用性还是可以的

703
00:25:55,000 --> 00:25:58,000
我觉得也不太好说

704
00:25:58,000 --> 00:26:02,000
它算说看上去直观上来说它把很多抽落放在键盘上

705
00:26:02,000 --> 00:26:05,000
这样稳能够直接站着抽做的话是一个提升

706
00:26:05,000 --> 00:26:09,000
但它有一个扣分像就是假如说我本身我自己会定了

707
00:26:09,000 --> 00:26:11,000
很多 FN 的功能就有特定的作用

708
00:26:11,000 --> 00:26:14,000
我如果是键盘的话我能摸到键盘那里我好多次

709
00:26:14,000 --> 00:26:16,000
我可以忙大合作就直接对按照去

710
00:26:16,000 --> 00:26:18,000
但是如果是 TouchBar 我完全按不到

711
00:26:18,000 --> 00:26:21,000
我必须的低头去看导致残到按照去

712
00:26:21,000 --> 00:26:25,000
对这个问题我觉得是没有办法通过这种和软件和优化来实现

713
00:26:25,000 --> 00:26:27,000
因为它就是一个很物理的东西

714
00:26:27,000 --> 00:26:30,000
你能不能通过处感对是来摸到那个东西

715
00:26:30,000 --> 00:26:36,000
因为它是最核心的就是说它把 FN 那排键的功能变成了一个随时可以定义

716
00:26:36,000 --> 00:26:38,000
它是它是它叫 Contacts OEM

717
00:26:38,000 --> 00:26:43,000
就是说根据使用环境比较你切了一个 APP 大的前台

718
00:26:43,000 --> 00:26:46,000
它那个 TouchBar 的功能就不一样对不对

719
00:26:46,000 --> 00:26:51,000
但这个就导致你没有办法说自时你不看 TouchBar 的时候它会怎么样

720
00:26:51,000 --> 00:26:52,000
你是不知道的

721
00:26:52,000 --> 00:26:55,000
而且还带来的另外一个问题就是误触

722
00:26:55,000 --> 00:26:59,000
就是我可能会不注意又碰到它了就把什么词音就挑不对了

723
00:26:59,000 --> 00:27:02,000
我这 TouchBar 刚出来的时候我发微调推

724
00:27:02,000 --> 00:27:07,000
就说我花 20 年的时间学习怎样不看键盘来打字

725
00:27:07,000 --> 00:27:10,000
它是把出来之后我用反过来需要看键盘

726
00:27:10,000 --> 00:27:13,000
就让人感觉很努力是潮流的

727
00:27:13,000 --> 00:27:17,000
所以我觉得 TouchBar 这个东西真的是有点像苹果就是

728
00:27:17,000 --> 00:27:20,000
为了做的不一样长行做出来一个不一样的东西

729
00:27:20,000 --> 00:27:24,000
然后感觉说不定之后希望它能改写规则

730
00:27:24,000 --> 00:27:27,000
但是你还是用金钱支持了它

731
00:27:27,000 --> 00:27:31,000
你用脚头票说你们还接着我在这条鞋路上越走越远吧

732
00:27:31,000 --> 00:27:34,000
对是好像 4 号你这样说的话

733
00:27:34,000 --> 00:27:39,000
我还是怀在一个比较国粉的心态希望再给它一次机会

734
00:27:39,000 --> 00:27:40,000
是我自己的问题付出它的问题

735
00:27:40,000 --> 00:27:44,000
但是现在这两天用下来感觉好像不是我的问题

736
00:27:46,000 --> 00:27:52,000
好 那我们到时候再观传一下就是这次 M 1 的 Map Pro 普及开后

737
00:27:52,000 --> 00:27:56,000
首先我们看确实是不是说 TouchBar 的各种不稳定问题

738
00:27:56,000 --> 00:28:00,000
可以丢过于 BREADDOS 和 USB 的不稳定性

739
00:28:00,000 --> 00:28:02,000
如果这个问题就我们再来看

740
00:28:02,000 --> 00:28:07,000
跑除了这种这种导致就几大扣分的付美数之后

741
00:28:07,000 --> 00:28:10,000
TouchBar 本身它能不能够打动小费者

742
00:28:10,000 --> 00:28:15,000
除了这个 TouchBar 之外最回到 M 1 芯片的 Map Pro 和 Map Pro Air

743
00:28:15,000 --> 00:28:19,000
它唯一的区别就只有在外型和重量上了好像是

744
00:28:19,000 --> 00:28:22,000
因为那个不管是就是接口也是一样的

745
00:28:22,000 --> 00:28:23,000
屏幕是一样的

746
00:28:23,000 --> 00:28:26,000
甚至连这个 WiFi 天线的数量都是两根都是一样的

747
00:28:26,000 --> 00:28:28,000
SSD 也是一样的

748
00:28:28,000 --> 00:28:30,000
触摸板都是一样的

749
00:28:30,000 --> 00:28:33,000
这件事情跟人感觉就是 Apple 应该是把直接把原来的

750
00:28:33,000 --> 00:28:36,000
硬腿的版本就拿过来换了个新换了个主板

751
00:28:36,000 --> 00:28:39,000
大概其他的没有什么大的改进就直接拿出来了

752
00:28:39,000 --> 00:28:43,000
好像在 Mini 上这件事情会更显住一些

753
00:28:43,000 --> 00:28:46,000
就知道我们看 Map FX 昨天的拆解图

754
00:28:46,000 --> 00:28:51,000
它打开来看我们来对比跟上一代有 Intel 的新片的 Map Pro

755
00:28:51,000 --> 00:28:53,000
它确实是一模一样的

756
00:28:53,000 --> 00:28:57,000
连那个 CPU 风扇的型号都是一模一样的

757
00:28:58,000 --> 00:29:02,000
而且 Mini 的话好像去说会控额外控载很多空间

758
00:29:02,000 --> 00:29:06,000
就是明明可以做的更小的更更精简的一个设备

759
00:29:06,000 --> 00:29:09,000
对它其实里面就是半空了已经是

760
00:29:09,000 --> 00:29:11,000
对当时 Rail 问我要不要买 Mini

761
00:29:11,000 --> 00:29:13,000
我觉得肯定不能买

762
00:29:13,000 --> 00:29:15,000
这明明可以做了更小一线

763
00:29:15,000 --> 00:29:18,000
然后一样 SIDA 技术的盒子里面

764
00:29:18,000 --> 00:29:21,000
那我应该等更小下一代好

765
00:29:21,000 --> 00:29:23,000
SIDA 也不一定便的更小可能便的更 Powerful

766
00:29:23,000 --> 00:29:26,000
就是 SIDA 给你一个 Mini MacMini Pro 之类的这种

767
00:29:27,000 --> 00:29:30,000
对不管怎么说这一代全然没有下代好吗

768
00:29:30,000 --> 00:29:32,000
对这句话是永远是对的

769
00:29:32,000 --> 00:29:35,000
但是早晚也早想说也是有道理

770
00:29:35,000 --> 00:29:37,000
我以前特别深刻

771
00:29:37,000 --> 00:29:38,000
因为我当时是买的

772
00:29:38,000 --> 00:29:41,000
你们记不记得苹果是在 12 年发布的第一款

773
00:29:41,000 --> 00:29:44,000
Retina 的 Map Pro 15 存那款

774
00:29:44,000 --> 00:29:47,000
它当时还是搭载的独立显卡还是 VDR 的

775
00:29:47,000 --> 00:29:50,000
应该是多少来的什么自己 00 M 吧

776
00:29:50,000 --> 00:29:51,000
好像是

777
00:29:51,000 --> 00:29:53,000
对那一代我应该也是买了的

778
00:29:54,000 --> 00:29:57,000
我都是第一个去吃第一代螃蟹的

779
00:29:57,000 --> 00:30:00,000
那你一直到指南问题了吗

780
00:30:00,000 --> 00:30:02,000
我好像不记得有一个主要问题

781
00:30:02,000 --> 00:30:05,000
我记得我对参念台 Map Pro 可当时还各方面提慢你的

782
00:30:05,000 --> 00:30:07,000
我说回来这个 Mini

783
00:30:07,000 --> 00:30:09,000
因为你没有买 Mini

784
00:30:09,000 --> 00:30:11,000
因为你有 DTK 嘛

785
00:30:11,000 --> 00:30:12,000
所以我们不前的

786
00:30:12,000 --> 00:30:14,000
苹果目前还没有公布到里

787
00:30:14,000 --> 00:30:16,000
DTK 他是足给你们用的

788
00:30:16,000 --> 00:30:19,000
当时也说的明确那个东西产品不是属于你的

789
00:30:19,000 --> 00:30:20,000
到时候你还得退回去

790
00:30:20,000 --> 00:30:21,000
对

791
00:30:21,000 --> 00:30:22,000
对于这之后

792
00:30:22,000 --> 00:30:23,000
然后呢

793
00:30:23,000 --> 00:30:25,000
因为你是为那个付了钱的对吧

794
00:30:25,000 --> 00:30:26,000
对当那个钱的话

795
00:30:26,000 --> 00:30:28,000
它说的是一个 Program fee

796
00:30:28,000 --> 00:30:30,000
是加入这个计划的钱

797
00:30:30,000 --> 00:30:32,000
他和买这个设备根本就没有任何的关系

798
00:30:32,000 --> 00:30:33,000
所以说

799
00:30:33,000 --> 00:30:35,000
他即使要求你收回去

800
00:30:35,000 --> 00:30:40,000
然后什么也不说你也是没有办法出去抱怨这件事情

801
00:30:40,000 --> 00:30:42,000
但是好像据说按照当年那个

802
00:30:42,000 --> 00:30:45,000
Piracy 这个千一的那个时候的事情的话

803
00:30:45,000 --> 00:30:47,000
苹果之后你还会据的时候

804
00:30:47,000 --> 00:30:49,000
会还给师傅会再换给你一个

805
00:30:49,000 --> 00:30:52,000
师寿的一个正式版的一个产品的

806
00:30:52,000 --> 00:30:53,000
前来开发者

807
00:30:53,000 --> 00:30:55,000
大家都还挺期待这件事情

808
00:30:55,000 --> 00:30:57,000
当时他是给了一个

809
00:30:57,000 --> 00:30:59,000
行星条版本的 iMac 给你给那些

810
00:30:59,000 --> 00:31:01,000
就是尝试的开发者

811
00:31:01,000 --> 00:31:02,000
但是可能这件事情不太好

812
00:31:02,000 --> 00:31:05,000
比于当时那个苹果开发者的数量还是非常少的

813
00:31:05,000 --> 00:31:07,000
至少跟现在不是一个数量

814
00:31:07,000 --> 00:31:08,000
只能差两个数量解到估计

815
00:31:08,000 --> 00:31:11,000
那现在就说有这么多人的情况下

816
00:31:11,000 --> 00:31:14,000
估计不能送 iMac 了

817
00:31:14,000 --> 00:31:15,000
有点贵啊

818
00:31:15,000 --> 00:31:17,000
送一个 Mac mini 回来就已经不错了

819
00:31:17,000 --> 00:31:19,000
对 我就可能送一个 M 1 的

820
00:31:19,000 --> 00:31:21,000
Mini 应该算一下价值上应该是差不多的

821
00:31:21,000 --> 00:31:24,000
因为现在 M 1 的 Mac mini 它

822
00:31:24,000 --> 00:31:25,000
标配是多少钱

823
00:31:25,000 --> 00:31:27,000
就是 600 刀差不多是吧

824
00:31:27,000 --> 00:31:29,000
59 还是 59 来的

825
00:31:29,000 --> 00:31:31,000
好像差不多反正是这个杀尾上

826
00:31:31,000 --> 00:31:33,000
但是要是这样比的话

827
00:31:33,000 --> 00:31:35,000
现在开发者虽然说可能比原来多了很多

828
00:31:35,000 --> 00:31:36,000
比如说多 10 倍完蛋

829
00:31:36,000 --> 00:31:38,000
才苹果的市值也犯实力了

830
00:31:38,000 --> 00:31:40,000
是吧 那也可以

831
00:31:42,000 --> 00:31:43,000
他还不能赔钱给你嘛

832
00:31:43,000 --> 00:31:44,000
我的意思就是

833
00:31:44,000 --> 00:31:45,000
他可能就是让点力

834
00:31:45,000 --> 00:31:47,000
比如说我这个不怎么赚钱

835
00:31:47,000 --> 00:31:48,000
你不要跟你上班

836
00:31:48,000 --> 00:31:49,000
如果说我们查一下

837
00:31:49,000 --> 00:31:52,000
现在 Mac mini 官方售价是多少钱

838
00:31:52,000 --> 00:31:53,000
对吧

839
00:31:53,000 --> 00:31:54,000
M 1 的干了 699 吗

840
00:31:54,000 --> 00:31:57,000
你交到开发者费用它不多是 500 刀对吧

841
00:31:57,000 --> 00:32:01,000
我们知道苹果大概是通常来说是 30%的

842
00:32:01,000 --> 00:32:04,000
这个 6 个率嘛

843
00:32:04,000 --> 00:32:05,000
那差不多这个 mini 看成本

844
00:32:05,000 --> 00:32:07,000
也就是 34 百刀的样子

845
00:32:07,000 --> 00:32:09,000
那剪掉五六成本

846
00:32:09,000 --> 00:32:10,000
估计能打得住过估计

847
00:32:10,000 --> 00:32:12,000
实在不行

848
00:32:12,000 --> 00:32:14,000
我觉得给开发者一个折扣据

849
00:32:14,000 --> 00:32:16,000
什么的能够抵消一下

850
00:32:16,000 --> 00:32:18,000
你自己去买的时候再债个

851
00:32:18,000 --> 00:32:19,000
我觉得实实也已经很不错了

852
00:32:19,000 --> 00:32:22,000
第五年 Apple Developer 年费

853
00:32:22,000 --> 00:32:24,000
也可以

854
00:32:24,000 --> 00:32:26,000
也可以也是个方案

855
00:32:26,000 --> 00:32:30,000
或者给那个就是 absore 的 gift car 嘛

856
00:32:30,000 --> 00:32:32,000
你可以去店里买东西也行

857
00:32:32,000 --> 00:32:35,000
对 那就和抵钱差不多一个意思嘛

858
00:32:35,000 --> 00:32:36,000
对对对

859
00:32:36,000 --> 00:32:37,000
但你自有一点嘛

860
00:32:37,000 --> 00:32:39,000
你不一定说你不想要 mini 的

861
00:32:39,000 --> 00:32:40,000
对对

862
00:32:40,000 --> 00:32:42,000
你就是他给你选择就多一些嘛

863
00:32:42,000 --> 00:32:43,000
是的

864
00:32:43,000 --> 00:32:44,000
这个还挺

865
00:32:44,000 --> 00:32:45,000
还挺期待到时候会怎么样

866
00:32:45,000 --> 00:32:47,000
那如果说到时候真的有话回来一个 mini

867
00:32:47,000 --> 00:32:49,000
你可以拿他来做这个什么

868
00:32:49,000 --> 00:32:51,000
编义主机用对吧

869
00:32:51,000 --> 00:32:52,000
对可以

870
00:32:52,000 --> 00:32:54,000
到时是没问题的

871
00:32:54,000 --> 00:32:57,000
因为毕竟比你那个 mackpro 的那个 bini 性能要好嘛

872
00:32:57,000 --> 00:32:59,000
对我现在都在犹豫

873
00:32:59,000 --> 00:33:02,000
我要不要干脆哪个 mini 还把我这个 mackpro 给替他说啊

874
00:33:02,000 --> 00:33:04,000
就把那个 mackpro 给出了

875
00:33:04,000 --> 00:33:08,000
然后换一个那个什么 proxdr display 和来接上

876
00:33:08,000 --> 00:33:10,000
那个 mackmini 对

877
00:33:10,000 --> 00:33:13,000
但是那个显示器的这个又变成了一个阻碍

878
00:33:13,000 --> 00:33:15,000
等一下他们说是怎么来的

879
00:33:15,000 --> 00:33:20,000
就是那个显示器的那个支架的架前是要比 mini 贵的

880
00:33:20,000 --> 00:33:21,000
对

881
00:33:21,000 --> 00:33:23,000
是的那个支架的比 mini 还贵

882
00:33:23,000 --> 00:33:26,000
对我所以我去店里买的时候

883
00:33:26,000 --> 00:33:28,000
我又仔细地端响了一下那个支架

884
00:33:28,000 --> 00:33:31,000
他做的确实是很优雅的

885
00:33:31,000 --> 00:33:33,000
很烦死的

886
00:33:33,000 --> 00:33:36,000
有一种这种很轨泡车的感情是不是

887
00:33:37,000 --> 00:33:39,000
对是的

888
00:33:39,000 --> 00:33:42,000
那你要买吗 我觉得还是值那个钱

889
00:33:42,000 --> 00:33:44,000
我觉得想来想了

890
00:33:44,000 --> 00:33:49,000
进一下还是等着他二代出现 mr 这样的芯片的时候再签一吧

891
00:33:49,000 --> 00:33:53,000
确实现在在 m 1 上要组完全拿来作为一个工作开发环境的话

892
00:33:53,000 --> 00:33:55,000
可能还会稍微有一点赚来

893
00:33:55,000 --> 00:33:59,000
这种情况下的话就没有必要这样不要强行狂过去

894
00:33:59,000 --> 00:34:02,000
那刚好那我们就刚才聊完他硬件好了

895
00:34:02,000 --> 00:34:04,000
我们就过得到说这个软件的问题

896
00:34:04,000 --> 00:34:07,000
目前你用下来在日常生活中我们分两类吧

897
00:34:07,000 --> 00:34:11,000
就首先说你的工作上如果用他会遇到什么样的账来

898
00:34:11,000 --> 00:34:14,000
然后说是如果你日常就是日常消贤

899
00:34:14,000 --> 00:34:16,000
也用他会遇到什么样的

900
00:34:16,000 --> 00:34:17,000
那么现在这工作最快吧

901
00:34:17,000 --> 00:34:20,000
你说还是有一些工具店不够那么完善的对吧

902
00:34:20,000 --> 00:34:22,000
就主要是哪些呢

903
00:34:22,000 --> 00:34:25,000
是的就是如果是苹果自己相关来 sco 的相关

904
00:34:25,000 --> 00:34:27,000
这些东西的话几乎都毫无问题

905
00:34:27,000 --> 00:34:30,000
所有东西都他的帮你已经想好了

906
00:34:30,000 --> 00:34:33,000
你就顶多是调点参数感觉参数就行了

907
00:34:33,000 --> 00:34:35,000
然后的话最多的话就是 brow

908
00:34:35,000 --> 00:34:38,000
就是那些命令行下面的话一些工具

909
00:34:38,000 --> 00:34:42,000
本身的话这次做的这个接种层是非常完美的

910
00:34:42,000 --> 00:34:46,000
就是 intererate 的阿晋智在机上執行不会有任何的问题

911
00:34:46,000 --> 00:34:49,000
但是一旦遇到像 BatchScript 这样的脚本的时候

912
00:34:49,000 --> 00:34:51,000
就可能会出问题了

913
00:34:51,000 --> 00:34:53,000
然后特别是当他需要去编异

914
00:34:53,000 --> 00:34:57,000
本地编异一些那个戴马出来到去运行的时候就会出问题

915
00:34:57,000 --> 00:35:00,000
但其实这个事情有一个很简单的解决方法

916
00:35:00,000 --> 00:35:04,000
你把你整个 terminal 就是 itermal 或者是官方的 terminal

917
00:35:04,000 --> 00:35:07,000
用那个特定的一个指令去执行了之后

918
00:35:07,000 --> 00:35:11,000
让他直接让整个 terminal 运行 interer 框架之下

919
00:35:11,000 --> 00:35:14,000
这样的话他去执行的下面的执行层

920
00:35:14,000 --> 00:35:18,000
BatchScript 然后和 script 的话都会延续着这个他的母亲层的

921
00:35:18,000 --> 00:35:21,000
这么一副进层的这么一个设置

922
00:35:21,000 --> 00:35:23,000
所以说就是以虚拟的方式去运行

923
00:35:23,000 --> 00:35:25,000
所以说可以消灭掉很多很多的问题

924
00:35:25,000 --> 00:35:27,000
而这里可能要解释一下

925
00:35:27,000 --> 00:35:32,000
就是说首先默认情况下在 me 的 max 上面

926
00:35:32,000 --> 00:35:33,000
你开的任何程序

927
00:35:33,000 --> 00:35:34,000
他有两种程序

928
00:35:34,000 --> 00:35:36,000
你一种是原生的这个 arm

929
00:35:36,000 --> 00:35:39,000
就是这个 arm 的指令器的这种程序

930
00:35:39,000 --> 00:35:42,000
然后就是这种正叫 nitty 我们叫原生对吧

931
00:35:42,000 --> 00:35:45,000
还有一种就是用 inter 的指令

932
00:35:45,000 --> 00:35:49,000
但是是通过 receptive 2 的模拟层来实现的

933
00:35:49,000 --> 00:35:54,000
imulation 就是用在一个 arm 的芯片上模拟运行差不多六的指令

934
00:35:54,000 --> 00:35:59,000
然后来跑原来那些舅的 inter 的那些整理机的程序

935
00:35:59,000 --> 00:36:00,000
不做任何秀感对是的

936
00:36:00,000 --> 00:36:03,000
然后你的目前的状况是说

937
00:36:03,000 --> 00:36:07,000
如果你用那些原生的有的话是没有任何问题的

938
00:36:07,000 --> 00:36:11,000
但是如果说原生他就他原来是 inter 的这个整理机的程序

939
00:36:11,000 --> 00:36:16,000
你最好还是用 receptive 2 的方式来去动他会比较好一些

940
00:36:16,000 --> 00:36:19,000
就是他如果本身是二斤制的分发

941
00:36:19,000 --> 00:36:20,000
然后是 inter 的代码

942
00:36:20,000 --> 00:36:24,000
你就直接当他就是一个原生程序用起来没有任何的问题

943
00:36:24,000 --> 00:36:26,000
这个这样成做得非常好

944
00:36:26,000 --> 00:36:29,000
但这个时候他还是通过模拟的方式来指形的对吧

945
00:36:29,000 --> 00:36:31,000
因为他不是原生的一个 arm 的程序

946
00:36:31,000 --> 00:36:34,000
对他只是一次 CPU 性能上会有损号

947
00:36:34,000 --> 00:36:35,000
另外我观察的话

948
00:36:35,000 --> 00:36:39,000
他的内存占用上几乎是他在 inter 设备中的两倍

949
00:36:39,000 --> 00:36:41,000
可能是要涉及到这个虚拟的方式的话

950
00:36:41,000 --> 00:36:43,000
他有一些特定的一些损号

951
00:36:43,000 --> 00:36:46,000
可能要翻译一些指令要换成起来可能

952
00:36:46,000 --> 00:36:47,000
对是的

953
00:36:47,000 --> 00:36:50,000
所以的话就是一个内存和 CPU 的一个问题

954
00:36:50,000 --> 00:36:51,000
但是不会影响你工作

955
00:36:51,000 --> 00:36:54,000
但是的话就是会直接跑不起来的程序的话

956
00:36:54,000 --> 00:36:56,000
主要都是一些特别复杂的

957
00:36:56,000 --> 00:36:58,000
然后脚本类型的

958
00:36:58,000 --> 00:37:01,000
因为脚本类型的话他会导致你这个翻译的股积制

959
00:37:01,000 --> 00:37:03,000
你不知道你现在该去工作

960
00:37:03,000 --> 00:37:07,000
你该对这个脚本进行一些特定的一些建议性的一些事情

961
00:37:07,000 --> 00:37:09,000
所以就他就整个就 break 掉了

962
00:37:09,000 --> 00:37:12,000
你的意思就是说脚本就是他是牙目的方式来运行的

963
00:37:12,000 --> 00:37:15,000
但是开发者是在这个插巴六的整理机上的事件

964
00:37:15,000 --> 00:37:18,000
所以导致这里面有点冲突的地方

965
00:37:18,000 --> 00:37:19,000
对是的没错

966
00:37:19,000 --> 00:37:21,000
就比如说你是那个脚

967
00:37:21,000 --> 00:37:23,000
他直接靠一个脚本去编移出一段代码

968
00:37:23,000 --> 00:37:25,000
这个编移的那些各种参数和命令的话

969
00:37:25,000 --> 00:37:27,000
都是为插巴六环境设计的

970
00:37:27,000 --> 00:37:29,000
然后这个时候你去执行的话

971
00:37:29,000 --> 00:37:33,000
整个 BS 整个 Terminal 这个环境全都是在阿姆从台上

972
00:37:33,000 --> 00:37:35,000
他运到这个脚本那个脚本里面自然都各种命令

973
00:37:35,000 --> 00:37:36,000
就和他出问题了

974
00:37:36,000 --> 00:37:38,000
他就没把自己进行下去了

975
00:37:38,000 --> 00:37:40,000
就可能连那个参数都不支持了

976
00:37:40,000 --> 00:37:42,000
并且给他插巴六特有的参数

977
00:37:42,000 --> 00:37:45,000
对是的但是如果你把整个 Terminal 都是使用

978
00:37:45,000 --> 00:37:49,000
那个 R 指令上他以那个虚拟环境的话

979
00:37:49,000 --> 00:37:50,000
去执行的话

980
00:37:50,000 --> 00:37:52,000
那后面的整个动机套他就全部都对上了

981
00:37:52,000 --> 00:37:54,000
所以说他有那种用权了

982
00:37:54,000 --> 00:37:58,000
就是连整个 Terminal 运行在这个 SETA 2 的插巴六的环境里面

983
00:37:58,000 --> 00:38:00,000
他是在下面启动了所有的这个脚本

984
00:38:00,000 --> 00:38:03,000
他也认为他是在一个插巴六的新片上运行

985
00:38:03,000 --> 00:38:05,000
所以就不会出任何问题

986
00:38:05,000 --> 00:38:08,000
然后因为这个 RESETA 2 的模拟成就做得特别好

987
00:38:08,000 --> 00:38:09,000
所以目前来看

988
00:38:09,000 --> 00:38:11,000
肩用性上是可以得到爆炙的对是的

989
00:38:11,000 --> 00:38:16,000
那你没有留意到这个他用这个 RESETA 2 的模拟运行插巴六的这些

990
00:38:16,000 --> 00:38:17,000
不管是脚本也好

991
00:38:17,000 --> 00:38:19,000
还是一些就是不需要像 Drawbox 他也没有改

992
00:38:19,000 --> 00:38:21,000
就把这种原人认识成续

993
00:38:21,000 --> 00:38:24,000
除了刚才你现在这个内存仗要比较大的问题之外

994
00:38:24,000 --> 00:38:25,000
他性能是等会大概有多少

995
00:38:25,000 --> 00:38:26,000
你能感受得到吗

996
00:38:26,000 --> 00:38:29,000
Ui 程序的话几乎感受不到

997
00:38:29,000 --> 00:38:31,000
就是你可能感觉看点开的时候

998
00:38:31,000 --> 00:38:32,000
稍微他慢了一点

999
00:38:32,000 --> 00:38:35,000
就是可能慢了那么一秒不到的一个时间

1000
00:38:35,000 --> 00:38:37,000
但是我不确定这是心力作用

1001
00:38:37,000 --> 00:38:40,000
还是那个他真的是慢了一个作用

1002
00:38:40,000 --> 00:38:43,000
你有可能今天我们要说到的后面那个问题导致的对吧

1003
00:38:43,000 --> 00:38:44,000
是的

1004
00:38:44,000 --> 00:38:48,000
然后根据别人的评测结果来看的话

1005
00:38:48,000 --> 00:38:51,000
即使是在虚拟成上运行的那个速度的话

1006
00:38:51,000 --> 00:38:54,000
都比在原来的 intel 机器上运行还快

1007
00:38:54,000 --> 00:38:56,000
这个时代是太可怕了

1008
00:38:56,000 --> 00:38:59,000
对这个事我觉得最让我们吃惊的一个地方

1009
00:38:59,000 --> 00:39:04,000
他在一个 M 1 芯片上模拟运行插巴六的指令

1010
00:39:04,000 --> 00:39:09,000
还比在插巴六的运伸的机器上去运行

1011
00:39:09,000 --> 00:39:12,000
还要快因为这个 MEC 的这个性能提升足够大忙对吧

1012
00:39:12,000 --> 00:39:17,000
然后他模拟损行比如说他 M 1 比这个上运在插巴六的性能提高了 70%

1013
00:39:17,000 --> 00:39:20,000
然后在模拟损行可能最大 20%或者是 30%

1014
00:39:20,000 --> 00:39:23,000
那三上算起来的我还是有 40%的提高对不对

1015
00:39:23,000 --> 00:39:27,000
这个真的是把心跳摸成滴板摸成了

1016
00:39:27,000 --> 00:39:29,000
是的

1017
00:39:29,000 --> 00:39:31,000
他再一个就让他感觉这些都怀疑人生了

1018
00:39:31,000 --> 00:39:34,000
这 intel 到底这么多年才现在最近在干什么

1019
00:39:34,000 --> 00:39:36,000
真的什么我对比都没有伤害

1020
00:39:36,000 --> 00:39:44,000
所以你在 Apple 搞说一东西之前你是不知道 intel 是老已经老太龙中到了一层礼物

1021
00:39:44,000 --> 00:39:45,000
是的

1022
00:39:45,000 --> 00:39:49,000
虽然我们今天会调查牙高厂但是我们可能心里面总会有一个想法

1023
00:39:49,000 --> 00:39:53,000
说可能现在芯片发展的一项是到了就是到这个平景了

1024
00:39:53,000 --> 00:39:56,000
我们就老说这个模拟定力到头了对不对

1025
00:39:56,000 --> 00:39:59,000
然后听过说来看我掉胆你

1026
00:39:59,000 --> 00:40:00,000
对

1027
00:40:00,000 --> 00:40:04,000
只不过在新的 M 1 上面的话还是能发现一些不一样的东西

1028
00:40:04,000 --> 00:40:09,000
有一些可能是在本来在插班刘结构上我们已经熟悉了十几年

1029
00:40:09,000 --> 00:40:13,000
几十年的一些东西他现在在苹果这也被颠覆了

1030
00:40:13,000 --> 00:40:16,000
比如说我发现的话可能有这几个

1031
00:40:16,000 --> 00:40:21,000
一个是根据最新的拆解结果看到新的 by-Fi 和蓝牙芯片

1032
00:40:21,000 --> 00:40:24,000
已经不再是一个高童的一个独立的一个设备了

1033
00:40:24,000 --> 00:40:26,000
在原来的 MX 上的话我理解的话

1034
00:40:26,000 --> 00:40:29,000
他应该还是在 P 3 E 总体现象上的一个设备吧

1035
00:40:29,000 --> 00:40:34,000
他老的那个苹果的 MacFine 的 WiFi 方案一般都是接那个伯通的方案

1036
00:40:34,000 --> 00:40:36,000
伯通的单独给他做一块卡

1037
00:40:36,000 --> 00:40:39,000
对 但是这个事情好像也不是苹果先发明的

1038
00:40:39,000 --> 00:40:41,000
应该我记得如果没去做的话

1039
00:40:41,000 --> 00:40:44,000
今天就是最近两年做了一个技术吧

1040
00:40:44,000 --> 00:40:47,000
就是他把 WiFi 的就是主要就是这个

1041
00:40:47,000 --> 00:40:49,000
另外发发的两个一个是叫做

1042
00:40:49,000 --> 00:40:52,000
就是 Facebook layer 的物理层就包括什么

1043
00:40:52,000 --> 00:40:55,000
无限信号的调制解调那一套东西

1044
00:40:55,000 --> 00:40:56,000
他好单独还有一个东西

1045
00:40:56,000 --> 00:40:58,000
但是他的那个逻辑就是什么协议啊

1046
00:40:58,000 --> 00:41:00,000
控制内层他就已经做到了

1047
00:41:00,000 --> 00:41:01,000
敏感的芯片里面去

1048
00:41:01,000 --> 00:41:02,000
所以你现在去买一些

1049
00:41:02,000 --> 00:41:06,000
最新的最新的硬场的一种比较

1050
00:41:06,000 --> 00:41:08,000
你会发现他那个也是在那个芯片处理的

1051
00:41:08,000 --> 00:41:10,000
就是在那个敏感的芯片里面完成的

1052
00:41:10,000 --> 00:41:12,000
就这个事情也是一样的

1053
00:41:12,000 --> 00:41:13,000
明白

1054
00:41:13,000 --> 00:41:16,000
以后都是变成那种独立的

1055
00:41:16,000 --> 00:41:19,000
如果我们以前还搞那个就是猜那个叫做猜卡

1056
00:41:19,000 --> 00:41:21,000
比如说我们给老的 Mac 换上

1057
00:41:21,000 --> 00:41:25,000
比如说 WiFi 6 的这个 WiFi 卡也是可行的嘛

1058
00:41:25,000 --> 00:41:26,000
但以后就越来越不可行的

1059
00:41:26,000 --> 00:41:27,000
就是因为他是节证在

1060
00:41:27,000 --> 00:41:28,000
是比如里面的了

1061
00:41:28,000 --> 00:41:31,000
对有一个更加的更直观的就是那个

1062
00:41:31,000 --> 00:41:33,000
FaceTime 的摄像头

1063
00:41:33,000 --> 00:41:34,000
原来的话

1064
00:41:34,000 --> 00:41:36,000
FaceTime 的摄像头也是靠 USB 总线结束了

1065
00:41:36,000 --> 00:41:38,000
现在在新的 M 1 摄为上

1066
00:41:38,000 --> 00:41:40,000
我在西东行星里面看

1067
00:41:40,000 --> 00:41:43,000
USB 总线上摸人上是干干进行的什么摄为都没有

1068
00:41:43,000 --> 00:41:45,000
属于明这些内置的这些摄为的话

1069
00:41:45,000 --> 00:41:47,000
很有可能的现在都是苹果自己的一些

1070
00:41:47,000 --> 00:41:51,000
特殊的一些实现去直接就和族行片去同学了

1071
00:41:51,000 --> 00:41:54,000
而不再是一些标准的像我们是手持的这些方式

1072
00:41:55,000 --> 00:41:57,000
它叫 Soc 们的

1073
00:41:57,000 --> 00:42:00,000
Sister Chat 这个整合度是非常令人吃惊的

1074
00:42:00,000 --> 00:42:03,000
另外一个比较有趣的事情就是

1075
00:42:03,000 --> 00:42:06,000
当你的 M 1 摄为如果它真的整个形容坏了

1076
00:42:06,000 --> 00:42:09,000
之后你怎么样去让它恢复这个事情

1077
00:42:09,000 --> 00:42:12,000
变得也很有点奇怪

1078
00:42:12,000 --> 00:42:15,000
原来的话我们的电脑不管是台式界

1079
00:42:15,000 --> 00:42:17,000
比这麽好也好坏了的话

1080
00:42:17,000 --> 00:42:20,000
像 Mac 的话是金融恢复模式从网上同音下

1081
00:42:20,000 --> 00:42:23,000
然后像是或者的话

1082
00:42:23,000 --> 00:42:26,000
那种的方式就是那预盘或者是光去光盘

1083
00:42:26,000 --> 00:42:28,000
重新去装整个操作系统

1084
00:42:28,000 --> 00:42:30,000
现在在新的 M 1 摄为上

1085
00:42:30,000 --> 00:42:33,000
当如果你出现了真正彻底死掉的摄为了

1086
00:42:33,000 --> 00:42:35,000
彻底死掉开不开的时候

1087
00:42:35,000 --> 00:42:37,000
你要做的事情是再找一台 Mac

1088
00:42:37,000 --> 00:42:39,000
把它连起来然后把那台 Mac 看到

1089
00:42:39,000 --> 00:42:42,000
特定的开机方式让它进 DFU 模式

1090
00:42:42,000 --> 00:42:44,000
然后在这边的 Mac 上去刷它

1091
00:42:44,000 --> 00:42:46,000
就像刷一个 iPhone 一样

1092
00:42:46,000 --> 00:42:48,000
它不能自取了

1093
00:42:48,000 --> 00:42:49,000
对我还没有试过

1094
00:42:49,000 --> 00:42:51,000
但是不知道是否拿一个可气的东西

1095
00:42:51,000 --> 00:42:52,000
就盘上去之后

1096
00:42:52,000 --> 00:42:54,000
能够通用 U 盘去启动

1097
00:42:54,000 --> 00:42:57,000
根据之前 DTK 的一些经验的话

1098
00:42:57,000 --> 00:42:59,000
就是那个时候是不行的

1099
00:42:59,000 --> 00:43:01,000
就唯一的恢复方法就是

1100
00:43:01,000 --> 00:43:03,000
我在那一台 Mac 然后把它接上来

1101
00:43:03,000 --> 00:43:04,000
当成一个设备

1102
00:43:04,000 --> 00:43:06,000
然后把它刷一边系统

1103
00:43:06,000 --> 00:43:07,000
所以听到这里

1104
00:43:07,000 --> 00:43:08,000
其实我们已经猜出了

1105
00:43:08,000 --> 00:43:09,000
DTK 你记得到了什么问题

1106
00:43:09,000 --> 00:43:11,000
才需要做这不操作什么

1107
00:43:11,000 --> 00:43:13,000
这样我们的时论它

1108
00:43:13,000 --> 00:43:16,000
但是我们推测出来应该是这么一个结构

1109
00:43:16,000 --> 00:43:18,000
对我没有对它进行嘴巴

1110
00:43:21,000 --> 00:43:24,000
刚才说到了这个软件你的

1111
00:43:24,000 --> 00:43:25,000
就是供应俱软件没什么预讨问题

1112
00:43:25,000 --> 00:43:27,000
就是你日常需要用的一些软件

1113
00:43:27,000 --> 00:43:28,000
上面有预讨什么问题

1114
00:43:28,000 --> 00:43:30,000
不管是原生运行的

1115
00:43:30,000 --> 00:43:31,000
还是需要模拟运行的

1116
00:43:31,000 --> 00:43:32,000
应该是完全没预讨

1117
00:43:32,000 --> 00:43:34,000
首先是因为我用的软件的话

1118
00:43:34,000 --> 00:43:36,000
大家可以开发者的话

1119
00:43:36,000 --> 00:43:37,000
都更新速度非常快

1120
00:43:37,000 --> 00:43:38,000
基本上

1121
00:43:38,000 --> 00:43:39,000
日常用大的上

1122
00:43:39,000 --> 00:43:40,000
Bare

1123
00:43:40,000 --> 00:43:41,000
新鲜的这些的话

1124
00:43:41,000 --> 00:43:42,000
都已经专门试配

1125
00:43:42,000 --> 00:43:44,000
已经是原生代码的那个

1126
00:43:44,000 --> 00:43:45,000
版本都已经出来了

1127
00:43:45,000 --> 00:43:46,000
所以说没有任何问题

1128
00:43:46,000 --> 00:43:48,000
然后有一些稍微的

1129
00:43:48,000 --> 00:43:49,000
就一点的程序

1130
00:43:49,000 --> 00:43:50,000
你这样就要不过

1131
00:43:50,000 --> 00:43:51,000
就 Box

1132
00:43:51,000 --> 00:43:52,000
Sportify

1133
00:43:52,000 --> 00:43:53,000
这些的话就靠金融城

1134
00:43:53,000 --> 00:43:54,000
那去你划的运行

1135
00:43:54,000 --> 00:43:55,000
也没有任何问题

1136
00:43:55,000 --> 00:43:57,000
而且我相信这些

1137
00:43:57,000 --> 00:43:58,000
他们也会比较快的

1138
00:43:58,000 --> 00:44:00,000
把那个 M 1 版本的

1139
00:44:00,000 --> 00:44:01,000
就是做出来嘛

1140
00:44:01,000 --> 00:44:03,000
因为他们还是要做这个

1141
00:44:03,000 --> 00:44:04,000
原生的比较在乎

1142
00:44:04,000 --> 00:44:05,000
又无体验的这些公司嘛

1143
00:44:05,000 --> 00:44:06,000
是的

1144
00:44:06,000 --> 00:44:08,000
而且其实整个签议过程的话

1145
00:44:08,000 --> 00:44:09,000
其实工作量并不大

1146
00:44:09,000 --> 00:44:10,000
都是比较繁卓

1147
00:44:10,000 --> 00:44:11,000
而是更参数的一些

1148
00:44:11,000 --> 00:44:12,000
金融性的一些

1149
00:44:12,000 --> 00:44:13,000
小修小条的一些问题

1150
00:44:13,000 --> 00:44:14,000
没有什么需要

1151
00:44:14,000 --> 00:44:15,000
你彻底去

1152
00:44:15,000 --> 00:44:18,000
颠覆原来炸过重构这样的一些事情

1153
00:44:18,000 --> 00:44:20,000
因为你自己也有几个程序

1154
00:44:20,000 --> 00:44:22,000
是很快就泼得到了

1155
00:44:22,000 --> 00:44:23,000
这个 M 1 上面去

1156
00:44:23,000 --> 00:44:24,000
好像这个程序

1157
00:44:24,000 --> 00:44:26,000
我理解应该也是比较平化的

1158
00:44:26,000 --> 00:44:27,000
没有任何太大的问题

1159
00:44:27,000 --> 00:44:28,000
是的

1160
00:44:28,000 --> 00:44:29,000
就基本上就是

1161
00:44:29,000 --> 00:44:30,000
几个 E 来哭

1162
00:44:30,000 --> 00:44:31,000
然后把它拿来之后

1163
00:44:31,000 --> 00:44:33,000
调整一下它的一些

1164
00:44:33,000 --> 00:44:34,000
便宜参数

1165
00:44:34,000 --> 00:44:35,000
在阿玛少难编一出来

1166
00:44:35,000 --> 00:44:36,000
然后最于我自己的

1167
00:44:36,000 --> 00:44:37,000
代码的话

1168
00:44:37,000 --> 00:44:38,000
主要是 E 来 sco 的

1169
00:44:38,000 --> 00:44:39,000
sco 的这些的话

1170
00:44:39,000 --> 00:44:40,000
就基本上是

1171
00:44:40,000 --> 00:44:41,000
点两下搞定

1172
00:44:41,000 --> 00:44:43,000
就一直在这个

1173
00:44:43,000 --> 00:44:45,000
苹果生态体系里面

1174
00:44:45,000 --> 00:44:46,000
它是比较舒服的

1175
00:44:46,000 --> 00:44:48,000
它已经帮助大所有的问题

1176
00:44:48,000 --> 00:44:49,000
都解决了

1177
00:44:49,000 --> 00:44:51,000
然后你只用点点就好了

1178
00:44:51,000 --> 00:44:52,000
对

1179
00:44:52,000 --> 00:44:53,000
一方面是它帮解决了

1180
00:44:53,000 --> 00:44:54,000
那另外一方面就是

1181
00:44:54,000 --> 00:44:55,000
本身的话

1182
00:44:55,000 --> 00:44:57,000
这个 Mac 和 IOS 的开发者生态

1183
00:44:57,000 --> 00:44:58,000
就是打通的

1184
00:44:58,000 --> 00:44:59,000
大家基本上

1185
00:44:59,000 --> 00:45:00,000
使得代码的话

1186
00:45:00,000 --> 00:45:01,000
出来一些

1187
00:45:01,000 --> 00:45:02,000
因为用的一些装夭库不一样

1188
00:45:02,000 --> 00:45:03,000
它不接种的

1189
00:45:03,000 --> 00:45:04,000
实际上本身

1190
00:45:04,000 --> 00:45:06,000
大部分你在 Mac 上的代码

1191
00:45:06,000 --> 00:45:07,000
在 IOS 上也是难用的

1192
00:45:07,000 --> 00:45:08,000
所以说这个它就

1193
00:45:08,000 --> 00:45:10,000
自己就本身就不存在

1194
00:45:10,000 --> 00:45:11,000
这个潜艺的这个障碍

1195
00:45:11,000 --> 00:45:12,000
所以就是

1196
00:45:12,000 --> 00:45:13,000
那你在实际的

1197
00:45:13,000 --> 00:45:14,000
就是我们现在

1198
00:45:14,000 --> 00:45:15,000
你做了两款

1199
00:45:15,000 --> 00:45:16,000
4 GB 的

1200
00:45:16,000 --> 00:45:18,000
就是 IOS 版

1201
00:45:18,000 --> 00:45:19,000
和 IOS 版

1202
00:45:19,000 --> 00:45:20,000
现在都可以

1203
00:45:20,000 --> 00:45:21,000
就理论上

1204
00:45:21,000 --> 00:45:22,000
就可以在

1205
00:45:22,000 --> 00:45:24,000
Mac 上去下这个

1206
00:45:24,000 --> 00:45:25,000
IOS 版的用战

1207
00:45:25,000 --> 00:45:26,000
它在见面可能没有

1208
00:45:26,000 --> 00:45:27,000
为这个 Mac 单独优化

1209
00:45:27,000 --> 00:45:28,000
对

1210
00:45:28,000 --> 00:45:29,000
然后碰巧刚好这两个软件

1211
00:45:29,000 --> 00:45:30,000
都是有单独的

1212
00:45:30,000 --> 00:45:31,000
为 Mac 优化

1213
00:45:31,000 --> 00:45:32,000
甚至功能上

1214
00:45:32,000 --> 00:45:33,000
也比较大的

1215
00:45:33,000 --> 00:45:34,000
不一样的这个

1216
00:45:34,000 --> 00:45:35,000
Mac 版本

1217
00:45:35,000 --> 00:45:37,000
所以好像你没有什么必要

1218
00:45:37,000 --> 00:45:38,000
是的

1219
00:45:38,000 --> 00:45:39,000
但而且让人感觉

1220
00:45:39,000 --> 00:45:40,000
Apple 这件事情

1221
00:45:40,000 --> 00:45:41,000
做的还挺细心的

1222
00:45:41,000 --> 00:45:42,000
就是

1223
00:45:42,000 --> 00:45:43,000
本来以为它

1224
00:45:43,000 --> 00:45:44,000
大概是做这么一样以之后

1225
00:45:44,000 --> 00:45:45,000
你起起来

1226
00:45:45,000 --> 00:45:46,000
就像原来我们的

1227
00:45:46,000 --> 00:45:47,000
虚拟机

1228
00:45:47,000 --> 00:45:48,000
然后你可以在里面

1229
00:45:48,000 --> 00:45:49,000
用上一部分的

1230
00:45:49,000 --> 00:45:50,000
Ui 功能

1231
00:45:50,000 --> 00:45:51,000
就已经还是一个

1232
00:45:51,000 --> 00:45:52,000
不错的一个情况了

1233
00:45:52,000 --> 00:45:54,000
比如说我自己开发

1234
00:45:54,000 --> 00:45:55,000
设计的时候

1235
00:45:55,000 --> 00:45:56,000
虚拟机里面的

1236
00:45:56,000 --> 00:45:58,000
设计是肯定没有办法起动

1237
00:45:58,000 --> 00:45:59,000
应该头发可以成全

1238
00:45:59,000 --> 00:46:00,000
这个网络擴展去

1239
00:46:00,000 --> 00:46:01,000
接管我 Mac 的那个

1240
00:46:01,000 --> 00:46:02,000
网络的

1241
00:46:02,000 --> 00:46:04,000
但是现在我发现

1242
00:46:04,000 --> 00:46:05,000
神奇的事就是

1243
00:46:05,000 --> 00:46:06,000
在 Apps 上面你下了

1244
00:46:06,000 --> 00:46:07,000
设计之后

1245
00:46:07,000 --> 00:46:08,000
你用设计的 IOS 版

1246
00:46:08,000 --> 00:46:09,000
它在 IOS 的

1247
00:46:09,000 --> 00:46:10,000
这么一个模拟器

1248
00:46:10,000 --> 00:46:11,000
都没个虚拟环境下

1249
00:46:11,000 --> 00:46:12,000
你起动了之后

1250
00:46:12,000 --> 00:46:13,000
它能够对接上

1251
00:46:13,000 --> 00:46:15,000
系统 Mac 系统上的

1252
00:46:15,000 --> 00:46:16,000
N 1 扩展这一套

1253
00:46:16,000 --> 00:46:17,000
所有的逻辑

1254
00:46:17,000 --> 00:46:18,000
然后把整个系统的

1255
00:46:18,000 --> 00:46:20,000
微弦给接管

1256
00:46:20,000 --> 00:46:21,000
这个是

1257
00:46:21,000 --> 00:46:23,000
让很惊艳的一件事情

1258
00:46:24,000 --> 00:46:25,000
也就是说

1259
00:46:25,000 --> 00:46:26,000
不用怎么改

1260
00:46:26,000 --> 00:46:27,000
IOS 的这个版本

1261
00:46:27,000 --> 00:46:29,000
也可以去操作

1262
00:46:29,000 --> 00:46:31,000
Mac 一些底层的一些系统擴展

1263
00:46:31,000 --> 00:46:32,000
没错

1264
00:46:32,000 --> 00:46:33,000
因为它这些擴展的话

1265
00:46:33,000 --> 00:46:35,000
它的一身身的话

1266
00:46:35,000 --> 00:46:36,000
它在 Mac 上和 IOS 上

1267
00:46:36,000 --> 00:46:37,000
它的接口

1268
00:46:37,000 --> 00:46:38,000
是完全一样的

1269
00:46:38,000 --> 00:46:39,000
有很多擴展的接口

1270
00:46:39,000 --> 00:46:41,000
都是完全一样的伤

1271
00:46:41,000 --> 00:46:42,000
之前我看

1272
00:46:42,000 --> 00:46:44,000
Net Extension Filter Data Provider

1273
00:46:44,000 --> 00:46:45,000
就是当时

1274
00:46:45,000 --> 00:46:46,000
跟我们接下来

1275
00:46:46,000 --> 00:46:47,000
聊的话题

1276
00:46:47,000 --> 00:46:48,000
比较相关的

1277
00:46:48,000 --> 00:46:49,000
系统里面的时候

1278
00:46:49,000 --> 00:46:50,000
注意到它的

1279
00:46:51,000 --> 00:46:52,000
为了 BITITY

1280
00:46:52,000 --> 00:46:53,000
是比如说它写会

1281
00:46:53,000 --> 00:46:54,000
它会写说

1282
00:46:54,000 --> 00:46:55,000
IOS 9.0

1283
00:46:55,000 --> 00:46:57,000
MacOS 10.15

1284
00:46:57,000 --> 00:47:00,000
然后加上 Mac Catalyst 13 以上

1285
00:47:00,000 --> 00:47:02,000
它会说这个

1286
00:47:02,000 --> 00:47:03,000
Classic 的这个

1287
00:47:03,000 --> 00:47:04,000
或者这个 API 的整个接口

1288
00:47:04,000 --> 00:47:05,000
在这三个版本里面

1289
00:47:05,000 --> 00:47:06,000
是一本

1290
00:47:06,000 --> 00:47:07,000
是完全一样的

1291
00:47:08,000 --> 00:47:09,000
所以它千一成本

1292
00:47:09,000 --> 00:47:10,000
应该是满销

1293
00:47:11,000 --> 00:47:12,000
没错

1294
00:47:12,000 --> 00:47:13,000
但是就是让感觉它

1295
00:47:13,000 --> 00:47:15,000
也既然去花了

1296
00:47:15,000 --> 00:47:16,000
这个新去还是要花

1297
00:47:16,000 --> 00:47:17,000
这个新去做的有事情

1298
00:47:17,000 --> 00:47:18,000
也是挺不容易的

1299
00:47:19,000 --> 00:47:20,000
它可以不接

1300
00:47:20,000 --> 00:47:22,000
然后就到这种用不了

1301
00:47:22,000 --> 00:47:23,000
对它也可以完全不接

1302
00:47:23,000 --> 00:47:24,000
其实一般来说

1303
00:47:24,000 --> 00:47:25,000
用红不会

1304
00:47:25,000 --> 00:47:26,000
太在一起过一件事情

1305
00:47:27,000 --> 00:47:28,000
它要求你改写

1306
00:47:28,000 --> 00:47:30,000
MacOS 12.15

1307
00:47:30,000 --> 00:47:31,000
就直接会

1308
00:47:31,000 --> 00:47:32,000
文字字就会

1309
00:47:32,000 --> 00:47:33,000
要求你

1310
00:47:33,000 --> 00:47:34,000
你就在写一遍了

1311
00:47:34,000 --> 00:47:35,000
对

1312
00:47:35,000 --> 00:47:36,000
我们来看

1313
00:47:37,000 --> 00:47:38,000
这个时候反当是说

1314
00:47:38,000 --> 00:47:39,000
评论对这个

1315
00:47:39,000 --> 00:47:40,000
可谨的

1316
00:47:40,000 --> 00:47:41,000
这个卡片台建议性做得还蛮好的

1317
00:47:41,000 --> 00:47:43,000
但是它就是自己的这个

1318
00:47:43,000 --> 00:47:44,000
控制的底层系统

1319
00:47:44,000 --> 00:47:45,000
没错

1320
00:47:45,000 --> 00:47:46,000
就是我看起来

1321
00:47:46,000 --> 00:47:47,000
它还挺用力的

1322
00:47:47,000 --> 00:47:48,000
回去推荐事情的

1323
00:47:48,000 --> 00:47:50,000
因为我一开始以为的话

1324
00:47:50,000 --> 00:47:51,000
就是可能我在

1325
00:47:51,000 --> 00:47:52,000
RS 的在 App 里面

1326
00:47:52,000 --> 00:47:53,000
它如果三 Mac

1327
00:47:53,000 --> 00:47:54,000
寻定环境下

1328
00:47:54,000 --> 00:47:55,000
我一些货取系统

1329
00:47:55,000 --> 00:47:56,000
配系统

1330
00:47:56,000 --> 00:47:57,000
参数的一些韩数

1331
00:47:57,000 --> 00:47:58,000
应该是能拿到的是

1332
00:47:58,000 --> 00:47:59,000
Mac 的一些参数

1333
00:47:59,000 --> 00:48:00,000
这才是比较合理的

1334
00:48:00,000 --> 00:48:01,000
结果我发现

1335
00:48:01,000 --> 00:48:03,000
其实 Apple 对这个进行来一个造假

1336
00:48:03,000 --> 00:48:05,000
我在一个 Mac

1337
00:48:05,000 --> 00:48:06,000
在一个 Mac

1338
00:48:06,000 --> 00:48:07,000
在一个 Mac

1339
00:48:07,000 --> 00:48:08,000
上面如果是 RS

1340
00:48:08,000 --> 00:48:10,000
这这种普遇的方式的话

1341
00:48:10,000 --> 00:48:11,000
我拿到的设备性

1342
00:48:11,000 --> 00:48:13,000
其实是 Apple 的 14

1343
00:48:13,000 --> 00:48:15,000
对 14 都好 1

1344
00:48:15,000 --> 00:48:16,000
它会欺骗你

1345
00:48:16,000 --> 00:48:17,000
对

1346
00:48:17,000 --> 00:48:18,000
就是让你以为

1347
00:48:18,000 --> 00:48:20,000
它是在一个 App 上运行的

1348
00:48:20,000 --> 00:48:21,000
对

1349
00:48:21,000 --> 00:48:22,000
没错

1350
00:48:22,000 --> 00:48:23,000
操作系统版本是 14.1

1351
00:48:23,000 --> 00:48:24,000
还是 14.0

1352
00:48:24,000 --> 00:48:26,000
就是它完全的需要虚拟花

1353
00:48:26,000 --> 00:48:28,000
造假出了一套 RS 环境

1354
00:48:28,000 --> 00:48:29,000
让你整个应用相信

1355
00:48:29,000 --> 00:48:31,000
你真的是在一个 RS 上的虚拟性

1356
00:48:31,000 --> 00:48:32,000
对

1357
00:48:32,000 --> 00:48:34,000
这里其实就我们就很

1358
00:48:34,000 --> 00:48:35,000
这样的说到这件事情了

1359
00:48:35,000 --> 00:48:36,000
当时

1360
00:48:36,000 --> 00:48:37,000
大家在担心嘛

1361
00:48:37,000 --> 00:48:40,000
就是换成

1362
00:48:40,000 --> 00:48:42,000
按指令集合的 M 1

1363
00:48:42,000 --> 00:48:45,000
上面很多远生的插发 6 的软件

1364
00:48:45,000 --> 00:48:47,000
不就运行不了了

1365
00:48:47,000 --> 00:48:48,000
怎么办呢

1366
00:48:48,000 --> 00:48:49,000
不会没有远点软件好吗

1367
00:48:49,000 --> 00:48:50,000
那其实我们看不见它的

1368
00:48:50,000 --> 00:48:51,000
提问到两个解决方式

1369
00:48:51,000 --> 00:48:52,000
应该就是通过

1370
00:48:52,000 --> 00:48:53,000
那个 Rosetta 2

1371
00:48:53,000 --> 00:48:54,000
模拟运行插发 6

1372
00:48:54,000 --> 00:48:57,000
目前来看这个质量还是非常好的

1373
00:48:57,000 --> 00:48:59,000
基本上没有什么大的问题

1374
00:48:59,000 --> 00:49:00,000
然后就是说

1375
00:49:00,000 --> 00:49:01,000
你还可以

1376
00:49:01,000 --> 00:49:04,000
拿 RS 上面的软件库直接

1377
00:49:04,000 --> 00:49:06,000
在 Mac 上不做

1378
00:49:06,000 --> 00:49:07,000
基本上不做什么修改

1379
00:49:07,000 --> 00:49:08,000
就在 Mac 上面允许运行

1380
00:49:08,000 --> 00:49:10,000
这个就说又提供了一个

1381
00:49:10,000 --> 00:49:12,000
就说它是提供了一个

1382
00:49:12,000 --> 00:49:13,000
但从工程性来讲

1383
00:49:13,000 --> 00:49:15,000
它其实是提供了一个超级的

1384
00:49:15,000 --> 00:49:16,000
它除了能允许 Mac

1385
00:49:16,000 --> 00:49:18,000
本身的那些历史的软件

1386
00:49:18,000 --> 00:49:20,000
能允许 Drama WebM 1

1387
00:49:20,000 --> 00:49:22,000
芯片优化过的

1388
00:49:22,000 --> 00:49:24,000
Native 的这个 Mac 的软件

1389
00:49:24,000 --> 00:49:26,000
还可以运行

1390
00:49:26,000 --> 00:49:28,000
本来在 RS 上面的运行

1391
00:49:28,000 --> 00:49:29,000
没有想到过

1392
00:49:29,000 --> 00:49:30,000
会在 Mac 上跑的这种软件

1393
00:49:30,000 --> 00:49:33,000
它其实是极了三个平台的好处

1394
00:49:33,000 --> 00:49:34,000
对是的

1395
00:49:34,000 --> 00:49:35,000
Trinity

1396
00:49:35,000 --> 00:49:36,000
三个平台

1397
00:49:36,000 --> 00:49:38,000
这个会长

1398
00:49:39,000 --> 00:49:40,000
那有一个问题

1399
00:49:40,000 --> 00:49:42,000
可能打擦问一下

1400
00:49:42,000 --> 00:49:44,000
就是说因为你自己也是

1401
00:49:44,000 --> 00:49:46,000
RS 的程序的开发者

1402
00:49:46,000 --> 00:49:48,000
它这样的话会不会导致你的

1403
00:49:48,000 --> 00:49:50,000
产品的布局和

1404
00:49:50,000 --> 00:49:53,000
包括定价策略会有一些影响

1405
00:49:53,000 --> 00:49:54,000
对是的

1406
00:49:54,000 --> 00:49:56,000
我也在思考这个问题

1407
00:49:56,000 --> 00:49:57,000
然后现在

1408
00:49:57,000 --> 00:49:59,000
哈三十还没有

1409
00:49:59,000 --> 00:50:01,000
一个比较明确的一个结论

1410
00:50:01,000 --> 00:50:03,000
确实是未来会需要

1411
00:50:03,000 --> 00:50:04,000
更多就考虑的一个事情

1412
00:50:04,000 --> 00:50:06,000
四尔之这种比较特殊

1413
00:50:06,000 --> 00:50:08,000
可能还相当于比较清晰点

1414
00:50:08,000 --> 00:50:09,000
因为至少我们看到这个

1415
00:50:09,000 --> 00:50:11,000
四尔之的 IOS 版和

1416
00:50:11,000 --> 00:50:12,000
四尔之的 Mac 版

1417
00:50:12,000 --> 00:50:14,000
它的功能上有比较显著的区别

1418
00:50:14,000 --> 00:50:16,000
比如说陆油模式

1419
00:50:16,000 --> 00:50:18,000
这个是只有 Mac 版才有的

1420
00:50:18,000 --> 00:50:19,000
S 版目前是因为

1421
00:50:19,000 --> 00:50:21,000
未平台限制是没法提供的

1422
00:50:21,000 --> 00:50:22,000
是的

1423
00:50:22,000 --> 00:50:24,000
但是如果你是直接把 RS 版

1424
00:50:24,000 --> 00:50:25,000
在 Mac 上运行

1425
00:50:25,000 --> 00:50:26,000
因为你根本就没有这个代码

1426
00:50:26,000 --> 00:50:27,000
所以它也是没有

1427
00:50:27,000 --> 00:50:28,000
这个这种

1428
00:50:28,000 --> 00:50:30,000
陆油模式这种真强性的功能的对不对

1429
00:50:30,000 --> 00:50:32,000
它是有这种差异性的地方

1430
00:50:32,000 --> 00:50:33,000
但是对于这个 L-PASS 来说

1431
00:50:33,000 --> 00:50:36,000
就比较感觉它功能其实是差不多的

1432
00:50:36,000 --> 00:50:39,000
也没有说有平台这种排它性

1433
00:50:39,000 --> 00:50:41,000
但 L-PASS 可能不太合适来比

1434
00:50:41,000 --> 00:50:43,000
因为 L-PASS 本来它不是靠这个

1435
00:50:43,000 --> 00:50:45,000
卖这个本身这个数权来

1436
00:50:45,000 --> 00:50:47,000
来引力的对不对

1437
00:50:47,000 --> 00:50:48,000
它是靠订阅吗

1438
00:50:48,000 --> 00:50:50,000
对于是对于是现在主流

1439
00:50:50,000 --> 00:50:51,000
是订阅制的话

1440
00:50:51,000 --> 00:50:52,000
其实就不存在这个问题

1441
00:50:52,000 --> 00:50:54,000
本来用户就是买一个分订阅

1442
00:50:54,000 --> 00:50:56,000
然后在所有平台上就可以用

1443
00:50:56,000 --> 00:50:57,000
所以说你把 IOS

1444
00:50:57,000 --> 00:50:59,000
你 Fell 拿 IOS 版本在 Mac 上用的话

1445
00:50:59,000 --> 00:51:00,000
它就不然你对吧

1446
00:51:00,000 --> 00:51:01,000
你还用什么用不什么用不什么用

1447
00:51:01,000 --> 00:51:03,000
不会来你还怎么样怎么样吧

1448
00:51:03,000 --> 00:51:05,000
但是你比如说像信识这样的话

1449
00:51:05,000 --> 00:51:07,000
实在单平台独立去购买的话

1450
00:51:07,000 --> 00:51:10,000
就会有点尴尬这个事情

1451
00:51:10,000 --> 00:51:11,000
Mac 版的原生应用的

1452
00:51:11,000 --> 00:51:12,000
用户体验

1453
00:51:12,000 --> 00:51:16,000
比起 IOS 版来说还是挺差距非常大的

1454
00:51:16,000 --> 00:51:18,000
就毕竟是个模拟器是什么

1455
00:51:18,000 --> 00:51:19,000
你永远你所有的操作

1456
00:51:19,000 --> 00:51:20,000
都是在那么一个虚拟化的

1457
00:51:20,000 --> 00:51:22,000
每个小穿靠里面干的

1458
00:51:22,000 --> 00:51:23,000
和你在 Mac 上面的话

1459
00:51:23,000 --> 00:51:25,000
各种丰富的这个

1460
00:51:25,000 --> 00:51:26,000
对交后还是差别很大

1461
00:51:26,000 --> 00:51:27,000
对差别还是很大的

1462
00:51:27,000 --> 00:51:28,000
所以说我觉得

1463
00:51:28,000 --> 00:51:31,000
对开发者说应该是不太

1464
00:51:31,000 --> 00:51:32,000
不会太 care 的一件事情

1465
00:51:32,000 --> 00:51:33,000
就不会说因为

1466
00:51:33,000 --> 00:51:35,000
你能在我上面用了之后

1467
00:51:35,000 --> 00:51:37,000
我就收入减少了

1468
00:51:37,000 --> 00:51:39,000
或者是我就很担心

1469
00:51:39,000 --> 00:51:41,000
我觉得到时候你不会拆成问题

1470
00:51:41,000 --> 00:51:43,000
对 我觉得可能主要还是像并缅

1471
00:51:43,000 --> 00:51:46,000
或者说若和苹果如何才能并缅

1472
00:51:46,000 --> 00:51:48,000
就是 iPad 这种比较尴尬的一个状态

1473
00:51:48,000 --> 00:51:49,000
比如我们现在看到

1474
00:51:49,000 --> 00:51:52,000
就是很多国内软件也好

1475
00:51:52,000 --> 00:51:54,000
像是国外的人家其实也

1476
00:51:54,000 --> 00:51:55,000
商对好一点

1477
00:51:55,000 --> 00:51:56,000
但是其实也有这个问题

1478
00:51:56,000 --> 00:51:58,000
它要么就是没有这个 iPad 板

1479
00:51:58,000 --> 00:52:00,000
因为我记得好像是

1480
00:52:00,000 --> 00:52:01,000
这个在 Instagram

1481
00:52:01,000 --> 00:52:03,000
它现在还是没有 iPad 板对吧

1482
00:52:03,000 --> 00:52:05,000
没有 肯定没有

1483
00:52:05,000 --> 00:52:07,000
对 你要强行在 iPad 上运行

1484
00:52:07,000 --> 00:52:08,000
iPhone 板也行

1485
00:52:08,000 --> 00:52:09,000
对不对 就是变成一个

1486
00:52:09,000 --> 00:52:10,000
很小的穿靠或者

1487
00:52:10,000 --> 00:52:11,000
你用两倍的方式

1488
00:52:11,000 --> 00:52:13,000
把它扩大嘛

1489
00:52:13,000 --> 00:52:14,000
然后像国内的一些软件

1490
00:52:14,000 --> 00:52:16,000
就是说它有这个 iPad 板

1491
00:52:16,000 --> 00:52:17,000
它 iPad 明显你看

1492
00:52:17,000 --> 00:52:19,000
就是基本上没有怎么用心去做

1493
00:52:19,000 --> 00:52:20,000
就随便

1494
00:52:20,000 --> 00:52:22,000
对 重新就放大了一些

1495
00:52:22,000 --> 00:52:23,000
放大了一下

1496
00:52:23,000 --> 00:52:24,000
就是很重爆

1497
00:52:24,000 --> 00:52:26,000
比如说我接的最印象最深刻的

1498
00:52:26,000 --> 00:52:27,000
像那个金东对吧

1499
00:52:27,000 --> 00:52:28,000
金东这个比我应用的比较多

1500
00:52:28,000 --> 00:52:29,000
有时候买东西去看什么

1501
00:52:29,000 --> 00:52:31,000
有时候 iPad 上在手边

1502
00:52:31,000 --> 00:52:32,000
我就接着 iPad 上用

1503
00:52:32,000 --> 00:52:33,000
它连那个

1504
00:52:33,000 --> 00:52:35,000
就是很平转过来都不止起

1505
00:52:35,000 --> 00:52:37,000
就只能在 iPad 上数频

1506
00:52:37,000 --> 00:52:38,000
但我刚好就是

1507
00:52:38,000 --> 00:52:39,000
有那个外界键盘

1508
00:52:39,000 --> 00:52:41,000
我在 iPad 大部分都是很平的状态

1509
00:52:41,000 --> 00:52:42,000
我觉得很尴尬

1510
00:52:42,000 --> 00:52:43,000
没什么时候还得把脑袋鞋过

1511
00:52:43,000 --> 00:52:45,000
鞋个 90 多去看它

1512
00:52:45,000 --> 00:52:46,000
我已经放弃了

1513
00:52:46,000 --> 00:52:49,000
我直接就用了 Suffer 的刘安琴没有

1514
00:52:49,000 --> 00:52:51,000
对 然后我就在想啊

1515
00:52:51,000 --> 00:52:54,000
就是说这种

1516
00:52:54,000 --> 00:52:57,000
iOS app 可以在麦克堂运行是可以的

1517
00:52:57,000 --> 00:53:00,000
但会不会有开发者单独

1518
00:53:00,000 --> 00:53:01,000
问这件事情是有好

1519
00:53:01,000 --> 00:53:02,000
我觉得还是一个非常

1520
00:53:02,000 --> 00:53:03,000
存疑的事情

1521
00:53:03,000 --> 00:53:05,000
就是说不解决这个

1522
00:53:05,000 --> 00:53:06,000
付费的

1523
00:53:06,000 --> 00:53:08,000
或者用户数量的问题可能

1524
00:53:08,000 --> 00:53:09,000
还是比较干

1525
00:53:09,000 --> 00:53:10,000
还是比较难

1526
00:53:10,000 --> 00:53:12,000
你说 iPad 绝对用户数肯定

1527
00:53:12,000 --> 00:53:13,000
还是比麦克堂用户需要多一些的嘛

1528
00:53:13,000 --> 00:53:14,000
但即便如此

1529
00:53:14,000 --> 00:53:15,000
常常还是觉得

1530
00:53:15,000 --> 00:53:17,000
iPad 好像没有那么重要

1531
00:53:17,000 --> 00:53:18,000
这不管

1532
00:53:18,000 --> 00:53:19,000
那麦克上面就更不用想了

1533
00:53:20,000 --> 00:53:22,000
其实得从另外一个角度

1534
00:53:22,000 --> 00:53:23,000
可以从另外一个角度来看见

1535
00:53:23,000 --> 00:53:25,000
实际上就是对于我们这种开发者

1536
00:53:25,000 --> 00:53:28,000
是本身就有多平台的软件存在的

1537
00:53:28,000 --> 00:53:30,000
所以说会出现互相平台之间

1538
00:53:30,000 --> 00:53:32,000
抢在那么的一个问题

1539
00:53:32,000 --> 00:53:34,000
但是对于更多的可能开发者来说

1540
00:53:34,000 --> 00:53:36,000
它根本就没有麦克堂运行

1541
00:53:36,000 --> 00:53:37,000
所以说它是平空的话

1542
00:53:37,000 --> 00:53:39,000
多了一部分市场和用户

1543
00:53:39,000 --> 00:53:41,000
对于它也说这绝对是一个好消息

1544
00:53:41,000 --> 00:53:43,000
或者说它在做一点点解单的

1545
00:53:43,000 --> 00:53:45,000
适配调整能够

1546
00:53:45,000 --> 00:53:46,000
对

1547
00:53:46,000 --> 00:53:48,000
比较低成本的去支持麦克

1548
00:53:48,000 --> 00:53:49,000
但其实也还可以的

1549
00:53:49,000 --> 00:53:51,000
只要不让它从前

1550
00:53:51,000 --> 00:53:53,000
在为麦克单独定制一套

1551
00:53:53,000 --> 00:53:54,000
那就很麻烦了

1552
00:53:55,000 --> 00:53:56,000
对是的没错

1553
00:53:56,000 --> 00:53:57,000
对

1554
00:53:57,000 --> 00:53:58,000
因为这里就不得不图策一下

1555
00:53:58,000 --> 00:53:59,000
我们市场用的这个

1556
00:53:59,000 --> 00:54:01,000
推特的这个官方客户端

1557
00:54:01,000 --> 00:54:02,000
在那里面

1558
00:54:02,000 --> 00:54:03,000
它本身上也是一个

1559
00:54:03,000 --> 00:54:04,000
IOS 版啊

1560
00:54:04,000 --> 00:54:05,000
通过那个叫

1561
00:54:05,000 --> 00:54:06,000
Cathalyst 方式吧

1562
00:54:06,000 --> 00:54:07,000
来御行

1563
00:54:07,000 --> 00:54:08,000
我觉得

1564
00:54:08,000 --> 00:54:09,000
Cathalyst

1565
00:54:09,000 --> 00:54:10,000
对所以说可能看的时候

1566
00:54:10,000 --> 00:54:12,000
为简单解释一下

1567
00:54:12,000 --> 00:54:13,000
就是过来一个朋友不太出现

1568
00:54:13,000 --> 00:54:15,000
Cathalyst 是一套

1569
00:54:15,000 --> 00:54:16,000
在

1570
00:54:16,000 --> 00:54:18,000
在

1571
00:54:18,000 --> 00:54:20,000
X 86 的

1572
00:54:20,000 --> 00:54:21,000
芯片上的

1573
00:54:21,000 --> 00:54:22,000
Mac 上面

1574
00:54:22,000 --> 00:54:23,000
需要开发者

1575
00:54:23,000 --> 00:54:24,000
做一些处理

1576
00:54:24,000 --> 00:54:25,000
才能够

1577
00:54:25,000 --> 00:54:26,000
把一个

1578
00:54:26,000 --> 00:54:27,000
IOS 软件

1579
00:54:27,000 --> 00:54:28,000
变成

1580
00:54:28,000 --> 00:54:29,000
Mac 上可以运行的

1581
00:54:29,000 --> 00:54:30,000
这么一套方式对了对是的

1582
00:54:30,000 --> 00:54:31,000
和

1583
00:54:31,000 --> 00:54:32,000
这个对比起来

1584
00:54:32,000 --> 00:54:33,000
那显然是

1585
00:54:33,000 --> 00:54:34,000
在 M 1 芯片的

1586
00:54:34,000 --> 00:54:36,000
Rosetta 2 的差别

1587
00:54:36,000 --> 00:54:37,000
没有

1588
00:54:37,000 --> 00:54:40,000
Rosetta 它是在 M 1 上运行

1589
00:54:40,000 --> 00:54:41,000
X 86 的

1590
00:54:41,000 --> 00:54:42,000
Mac 程序对吧

1591
00:54:42,000 --> 00:54:43,000
这个是

1592
00:54:43,000 --> 00:54:44,000
Cathalyst 是在

1593
00:54:44,000 --> 00:54:45,000
X 86 的

1594
00:54:45,000 --> 00:54:46,000
Mac 上运行

1595
00:54:46,000 --> 00:54:47,000
Rosetta 程序对吧

1596
00:54:47,000 --> 00:54:48,000
然后现在就说

1597
00:54:48,000 --> 00:54:49,000
你可以

1598
00:54:49,000 --> 00:54:50,000
那个时候

1599
00:54:50,000 --> 00:54:51,000
还是要这两个事情

1600
00:54:51,000 --> 00:54:52,000
都是要

1601
00:54:52,000 --> 00:54:53,000
就说上大师不需要开发者

1602
00:54:53,000 --> 00:54:54,000
介绍的嘛

1603
00:54:54,000 --> 00:54:55,000
然后这个 Cathalyst

1604
00:54:55,000 --> 00:54:56,000
需要开发的做一些操作的

1605
00:54:56,000 --> 00:54:57,000
然后还像

1606
00:54:57,000 --> 00:54:58,000
还有一个不需要开发者

1607
00:54:58,000 --> 00:54:59,000
做一个

1608
00:54:59,000 --> 00:55:00,000
默认操作的

1609
00:55:00,000 --> 00:55:01,000
就是说

1610
00:55:01,000 --> 00:55:02,000
直接在 M 1 芯片的

1611
00:55:02,000 --> 00:55:03,000
Mac 上面

1612
00:55:03,000 --> 00:55:04,000
去运行

1613
00:55:04,000 --> 00:55:05,000
Ros 的程序

1614
00:55:05,000 --> 00:55:06,000
那我觉得

1615
00:55:06,000 --> 00:55:07,000
像比如说像推特这种客户端

1616
00:55:07,000 --> 00:55:08,000
这种

1617
00:55:08,000 --> 00:55:09,000
做的这种调系

1618
00:55:09,000 --> 00:55:10,000
那你还不如不要那个

1619
00:55:10,000 --> 00:55:11,000
开发的

1620
00:55:11,000 --> 00:55:12,000
你直接在 M 1 上去运行

1621
00:55:12,000 --> 00:55:13,000
一个

1622
00:55:13,000 --> 00:55:14,000
Rosetta

1623
00:55:14,000 --> 00:55:15,000
还好一点

1624
00:55:15,000 --> 00:55:16,000
为了 Sackin

1625
00:55:16,000 --> 00:55:17,000
推特的客户端

1626
00:55:17,000 --> 00:55:18,000
你在用吗

1627
00:55:18,000 --> 00:55:19,000
因为我有在用吗

1628
00:55:19,000 --> 00:55:20,000
非常难用啊

1629
00:55:20,000 --> 00:55:22,000
我都已经完全忘记这件事情了

1630
00:55:22,000 --> 00:55:24,000
对我就忘用用用用用用用用用

1631
00:55:24,000 --> 00:55:25,000
因为在 Mac 上面

1632
00:55:25,000 --> 00:55:26,000
刷推的时间

1633
00:55:26,000 --> 00:55:27,000
可能没有那么多吧

1634
00:55:27,000 --> 00:55:28,000
就可能发推的时间

1635
00:55:28,000 --> 00:55:30,000
要比刷推时间多吧

1636
00:55:30,000 --> 00:55:31,000
对发推会比较多一些

1637
00:55:31,000 --> 00:55:32,000
它毕竟还是有

1638
00:55:32,000 --> 00:55:34,000
那个系统级别的整合嘛

1639
00:55:34,000 --> 00:55:35,000
比如说你在一个

1640
00:55:35,000 --> 00:55:36,000
网约上你要

1641
00:55:36,000 --> 00:55:37,000
卸耳道推特的话

1642
00:55:37,000 --> 00:55:38,000
你有两个方案吗

1643
00:55:38,000 --> 00:55:39,000
因为就是说

1644
00:55:39,000 --> 00:55:40,000
你手红编辑复制你

1645
00:55:40,000 --> 00:55:41,000
那个叫什么

1646
00:55:41,000 --> 00:55:43,000
URI 到推特里面去发

1647
00:55:43,000 --> 00:55:44,000
也可以一个

1648
00:55:44,000 --> 00:55:46,000
但是如果它有那个

1649
00:55:46,000 --> 00:55:47,000
虽然说是一个

1650
00:55:47,000 --> 00:55:48,000
Kathletes 的改的一个

1651
00:55:48,000 --> 00:55:49,000
BP

1652
00:55:49,000 --> 00:55:50,000
但好歹它会提供在

1653
00:55:50,000 --> 00:55:51,000
C 2 系统里面分享那个

1654
00:55:51,000 --> 00:55:52,000
菜单里面

1655
00:55:52,000 --> 00:55:53,000
提供说分享的推特

1656
00:55:53,000 --> 00:55:54,000
你可以做一些

1657
00:55:54,000 --> 00:55:55,000
相对的操作吗

1658
00:55:55,000 --> 00:55:56,000
就我还是比较

1659
00:55:56,000 --> 00:55:58,000
把音贼到变力性的

1660
00:55:58,000 --> 00:55:59,000
我好重来

1661
00:55:59,000 --> 00:56:00,000
没有用过这个功能

1662
00:56:00,000 --> 00:56:01,000
就

1663
00:56:01,000 --> 00:56:02,000
C 2 就推特这样

1664
00:56:02,000 --> 00:56:03,000
哈哈哈

1665
00:56:03,000 --> 00:56:05,000
我还是在继续用推特 Boot

1666
00:56:05,000 --> 00:56:06,000
但推特 Boot 的话

1667
00:56:06,000 --> 00:56:07,000
现在是用那个

1668
00:56:07,000 --> 00:56:08,000
API 音响比较大了

1669
00:56:08,000 --> 00:56:09,000
就是它

1670
00:56:09,000 --> 00:56:10,000
那边推特没有

1671
00:56:10,000 --> 00:56:11,000
给很多数据回来

1672
00:56:11,000 --> 00:56:12,000
很多的那些

1673
00:56:12,000 --> 00:56:14,000
别人都回复了什么的

1674
00:56:14,000 --> 00:56:15,000
你拿推特 Boot 的

1675
00:56:15,000 --> 00:56:16,000
总第三万扣单

1676
00:56:16,000 --> 00:56:17,000
根本看不见

1677
00:56:17,000 --> 00:56:18,000
所以说推特 Boot

1678
00:56:18,000 --> 00:56:19,000
也就刷刷了

1679
00:56:19,000 --> 00:56:20,000
太门蓝

1680
00:56:20,000 --> 00:56:21,000
就因为最近

1681
00:56:21,000 --> 00:56:22,000
这个

1682
00:56:22,000 --> 00:56:23,000
这两年推特的那个

1683
00:56:23,000 --> 00:56:24,000
就是

1684
00:56:24,000 --> 00:56:25,000
产品本身的改动还是比较大了

1685
00:56:25,000 --> 00:56:26,000
你看它最近就出了一个

1686
00:56:26,000 --> 00:56:27,000
深度性的那个

1687
00:56:27,000 --> 00:56:28,000
Fleets

1688
00:56:28,000 --> 00:56:29,000
什么功能

1689
00:56:29,000 --> 00:56:30,000
越发操弹了吗

1690
00:56:30,000 --> 00:56:31,000
说白一点

1691
00:56:31,000 --> 00:56:33,000
就是越发操弹了

1692
00:56:33,000 --> 00:56:34,000
哈哈哈

1693
00:56:34,000 --> 00:56:35,000
就是它

1694
00:56:35,000 --> 00:56:36,000
这些新功能都还没有在

1695
00:56:36,000 --> 00:56:37,000
API 的层面上

1696
00:56:37,000 --> 00:56:39,000
提前给第三方开发者

1697
00:56:39,000 --> 00:56:40,000
接触嘛

1698
00:56:40,000 --> 00:56:41,000
所以你要去跟

1699
00:56:41,000 --> 00:56:42,000
原生扣单

1700
00:56:42,000 --> 00:56:43,000
进针这个

1701
00:56:43,000 --> 00:56:44,000
Fiture Rich

1702
00:56:44,000 --> 00:56:45,000
那肯定是比不上的嘛

1703
00:56:45,000 --> 00:56:46,000
就说这里你做用户

1704
00:56:46,000 --> 00:56:48,000
你必须得想说

1705
00:56:48,000 --> 00:56:49,000
那你怎么办的

1706
00:56:49,000 --> 00:56:50,000
那我就属于

1707
00:56:50,000 --> 00:56:51,000
那经常有原生

1708
00:56:51,000 --> 00:56:52,000
还是原生吧

1709
00:56:52,000 --> 00:56:53,000
反正你这鼻子用

1710
00:56:53,000 --> 00:56:54,000
哈哈哈

1711
00:56:54,000 --> 00:56:55,000
对

1712
00:56:55,000 --> 00:56:57,000
现在的差不多

1713
00:56:57,000 --> 00:56:58,000
就是 M 1 的这个

1714
00:56:58,000 --> 00:56:59,000
Mac 的问题

1715
00:56:59,000 --> 00:57:00,000
就聊到这里啊

1716
00:57:00,000 --> 00:57:01,000
因为你也是

1717
00:57:01,000 --> 00:57:02,000
你是刚拿到差不多

1718
00:57:02,000 --> 00:57:03,000
还没有一个星期

1719
00:57:03,000 --> 00:57:04,000
有一个星期了吗

1720
00:57:04,000 --> 00:57:05,000
没有一个星期吧

1721
00:57:05,000 --> 00:57:06,000
应该就三天

1722
00:57:06,000 --> 00:57:07,000
三天四天都是左右的样子

1723
00:57:07,000 --> 00:57:08,000
对对对

1724
00:57:08,000 --> 00:57:09,000
就可能接下来

1725
00:57:09,000 --> 00:57:10,000
大家看我们目前看

1726
00:57:10,000 --> 00:57:11,000
性能是没问题的

1727
00:57:11,000 --> 00:57:12,000
然后不管是原生性能

1728
00:57:12,000 --> 00:57:13,000
就是报表

1729
00:57:13,000 --> 00:57:15,000
然后模拟性能还是超越原来

1730
00:57:15,000 --> 00:57:17,000
这样东西目前来看都还好

1731
00:57:17,000 --> 00:57:19,000
但是可能还是有一些小小的这种

1732
00:57:19,000 --> 00:57:20,000
不尽整地的地方

1733
00:57:20,000 --> 00:57:22,000
但是我相信过个半年一年

1734
00:57:22,000 --> 00:57:25,000
等到它明年初第 2 代的这个

1735
00:57:25,000 --> 00:57:27,000
这个 Mac 的这个处理

1736
00:57:27,000 --> 00:57:28,000
就是这种

1737
00:57:28,000 --> 00:57:29,000
这个 MR

1738
00:57:29,000 --> 00:57:30,000
比较确立的

1739
00:57:30,000 --> 00:57:32,000
的时候大家再去买

1740
00:57:32,000 --> 00:57:33,000
可能到时候一个是有新的

1741
00:57:33,000 --> 00:57:35,000
这种外型的机器了

1742
00:57:35,000 --> 00:57:36,000
因为就是说

1743
00:57:36,000 --> 00:57:37,000
直接这样新的问题

1744
00:57:37,000 --> 00:57:38,000
基本上也都解决了

1745
00:57:38,000 --> 00:57:39,000
对吧

1746
00:57:39,000 --> 00:57:40,000
该转原生的都转原生的

1747
00:57:40,000 --> 00:57:41,000
然后该模拟的

1748
00:57:41,000 --> 00:57:43,000
如果还有问题的可能也都修掉了

1749
00:57:43,000 --> 00:57:44,000
对吧

1750
00:57:44,000 --> 00:57:46,000
然后那个时候大家再去换一个问题

1751
00:57:46,000 --> 00:57:47,000
就不是很大的

1752
00:57:47,000 --> 00:57:49,000
我这里还想问一下两位

1753
00:57:49,000 --> 00:57:51,000
你们用你们现在的 interno

1754
00:57:51,000 --> 00:57:53,000
能不能有觉得在

1755
00:57:53,000 --> 00:57:55,000
电池状态下开盖之后

1756
00:57:55,000 --> 00:57:56,000
到结束这个过程

1757
00:57:56,000 --> 00:57:58,000
非常的痛苦吗

1758
00:57:58,000 --> 00:58:00,000
首先我现在没有

1759
00:58:00,000 --> 00:58:01,000
Mac 我现在说

1760
00:58:01,000 --> 00:58:03,000
你也是插 86 所以

1761
00:58:03,000 --> 00:58:04,000
我只能告诉你

1762
00:58:04,000 --> 00:58:05,000
说换型那个那个过程

1763
00:58:05,000 --> 00:58:06,000
肯定不是非常快

1764
00:58:06,000 --> 00:58:07,000
他还是要等一下下

1765
00:58:07,000 --> 00:58:11,000
我好像基本上不怎么关

1766
00:58:11,000 --> 00:58:12,000
好的

1767
00:58:12,000 --> 00:58:15,000
我换型的过程就是按一下

1768
00:58:15,000 --> 00:58:16,000
随便按一下键盘

1769
00:58:16,000 --> 00:58:17,000
什么键或者强下数表

1770
00:58:17,000 --> 00:58:18,000
这样

1771
00:58:18,000 --> 00:58:19,000
好 明白了

1772
00:58:19,000 --> 00:58:21,000
就是我最近几年的这个感受

1773
00:58:21,000 --> 00:58:22,000
上来说的话

1774
00:58:22,000 --> 00:58:24,000
我这话 Macbook 可能每次

1775
00:58:24,000 --> 00:58:25,000
每次打开它的盖子

1776
00:58:25,000 --> 00:58:26,000
就是盖的时候

1777
00:58:26,000 --> 00:58:27,000
就感觉非常的红苦

1778
00:58:27,000 --> 00:58:29,000
黑平可能就会

1779
00:58:29,000 --> 00:58:30,000
黑个一到两秒

1780
00:58:30,000 --> 00:58:31,000
甚至有的时候

1781
00:58:31,000 --> 00:58:33,000
不知道为什么卡个 56 秒

1782
00:58:33,000 --> 00:58:34,000
也是经常常见的事情

1783
00:58:34,000 --> 00:58:35,000
然后亮了

1784
00:58:35,000 --> 00:58:37,000
然后整个 Ui 也是卡住的

1785
00:58:37,000 --> 00:58:39,000
然后舒米马也是没有反应

1786
00:58:39,000 --> 00:58:40,000
然后进了桌面之后

1787
00:58:40,000 --> 00:58:42,000
可能也还得再卡一段时间

1788
00:58:42,000 --> 00:58:43,000
才能回复正常

1789
00:58:43,000 --> 00:58:45,000
我在后面我再推这场

1790
00:58:45,000 --> 00:58:46,000
也大概问了一下

1791
00:58:46,000 --> 00:58:48,000
好像有很大部分

1792
00:58:48,000 --> 00:58:49,000
用户也是有同样的问题

1793
00:58:49,000 --> 00:58:51,000
但是好像有另外一部分

1794
00:58:51,000 --> 00:58:52,000
用户好像没有遇到这样的问题

1795
00:58:52,000 --> 00:58:54,000
我还挺奇怪的这个问题

1796
00:58:54,000 --> 00:58:55,000
到底是怎么造成的

1797
00:58:55,000 --> 00:58:57,000
我好像没有遇到

1798
00:58:57,000 --> 00:58:58,000
就是在我绝无锦泉

1799
00:58:58,000 --> 00:59:01,000
我几次把他带着到处走的过程的时候

1800
00:59:01,000 --> 00:59:02,000
可能一天

1801
00:59:02,000 --> 00:59:03,000
比如说要开会

1802
00:59:03,000 --> 00:59:06,000
然后平凡关和

1803
00:59:06,000 --> 00:59:09,000
实赖刺好像没有发生过这样的事情

1804
00:59:09,000 --> 00:59:12,000
但是你刚才说你会

1805
00:59:12,000 --> 00:59:13,000
你要舒遇马

1806
00:59:13,000 --> 00:59:15,000
我知道是有些人用手表解锁的话

1807
00:59:15,000 --> 00:59:17,000
就是他那个缅密码解锁了

1808
00:59:17,000 --> 00:59:19,000
的时候会遇到这样的情况

1809
00:59:19,000 --> 00:59:21,000
但是我好像没有遇到过

1810
00:59:21,000 --> 00:59:24,000
因为这里面有一个机制的问题

1811
00:59:24,000 --> 00:59:25,000
是这样

1812
00:59:25,000 --> 00:59:27,000
首先你取决它是

1813
00:59:27,000 --> 00:59:29,000
我们讲系统修缅

1814
00:59:29,000 --> 00:59:31,000
和系统顺缅它不是一个概念

1815
00:59:31,000 --> 00:59:32,000
我们还要之前某一些建篇里面提到过

1816
00:59:32,000 --> 00:59:34,000
所谓这个 sleep 就是说

1817
00:59:34,000 --> 00:59:36,000
它的内存是不断点的

1818
00:59:36,000 --> 00:59:38,000
就是你整个内存还是在

1819
00:59:38,000 --> 00:59:40,000
整个系统的金像

1820
00:59:40,000 --> 00:59:42,000
还是在内存里面

1821
00:59:42,000 --> 00:59:44,000
你只要打开它比较快的去跟着上

1822
00:59:44,000 --> 00:59:46,000
但是如果你是修缅

1823
00:59:46,000 --> 00:59:48,000
它就从来就没有一个所谓的深度

1824
00:59:48,000 --> 00:59:50,000
这个浅多修缅问题了

1825
00:59:50,000 --> 00:59:52,000
就是你真的这个 hyper

1826
00:59:52,000 --> 00:59:53,000
修缅的时候

1827
00:59:53,000 --> 00:59:56,000
它的内存的金像是写到磁盘的

1828
00:59:56,000 --> 00:59:58,000
这个时候

1829
00:59:58,000 --> 01:00:00,000
就是说打判你整个系统没电

1830
01:00:00,000 --> 01:00:02,000
或者是你电池没有用光了

1831
01:00:02,000 --> 01:00:04,000
它在换性的时候

1832
01:00:04,000 --> 01:00:06,000
还是能够把那个之前的状态

1833
01:00:06,000 --> 01:00:07,000
给换性回来

1834
01:00:07,000 --> 01:00:09,000
但是取决于你电脑

1835
01:00:09,000 --> 01:00:10,000
有没有插电

1836
01:00:10,000 --> 01:00:12,000
以及你电池的盛语状态

1837
01:00:12,000 --> 01:00:14,000
它内存是有可能会掉电的

1838
01:00:14,000 --> 01:00:16,000
这个时候如果你再

1839
01:00:16,000 --> 01:00:18,000
再打开换性的话

1840
01:00:18,000 --> 01:00:20,000
它等于要从先从

1841
01:00:20,000 --> 01:00:23,000
SSD 上把内存里面的原来的那个金像

1842
01:00:23,000 --> 01:00:24,000
读回来

1843
01:00:24,000 --> 01:00:26,000
你看我现在内存都是 16 个机制

1844
01:00:26,000 --> 01:00:27,000
对吧

1845
01:00:27,000 --> 01:00:28,000
至少 8 个机制上吧

1846
01:00:28,000 --> 01:00:30,000
开到叫 16 个机可能是标配

1847
01:00:30,000 --> 01:00:32,000
如果你是那个叫什么来的

1848
01:00:32,000 --> 01:00:34,000
那个台式机可能是

1849
01:00:34,000 --> 01:00:36,000
但台式机不会把电应该

1850
01:00:36,000 --> 01:00:37,000
问题没有这个不存在这个问题

1851
01:00:37,000 --> 01:00:39,000
就是说如果是笔记本的话

1852
01:00:39,000 --> 01:00:41,000
就是说加上我们就以 16 个机的这个

1853
01:00:41,000 --> 01:00:44,000
内存金像要都读回来的话

1854
01:00:44,000 --> 01:00:46,000
那其实你算一下它的那个

1855
01:00:46,000 --> 01:00:48,000
就是纯粹到那时候带款本来要读

1856
01:00:48,000 --> 01:00:50,000
16 个机就要那么长时间嘛

1857
01:00:50,000 --> 01:00:52,000
然后在上电在自解

1858
01:00:52,000 --> 01:00:55,000
在引到起来系统

1859
01:00:55,000 --> 01:00:57,000
就不是说从新开始步调

1860
01:00:57,000 --> 01:00:58,000
恢复之前那个动作

1861
01:00:58,000 --> 01:00:59,000
它肯定是需要一个时间的嘛

1862
01:00:59,000 --> 01:01:01,000
但是其实我们讨论这个

1863
01:01:01,000 --> 01:01:03,000
好好做这些起来片文章和解释

1864
01:01:03,000 --> 01:01:05,000
就是和这个其实真的没有关系

1865
01:01:05,000 --> 01:01:06,000
因为的话

1866
01:01:06,000 --> 01:01:08,000
现在在最新的 MacBook 里面它的机制是

1867
01:01:08,000 --> 01:01:10,000
一旦和盖修明了之后

1868
01:01:10,000 --> 01:01:12,000
它就动进

1869
01:01:12,000 --> 01:01:14,000
它就先把内存当部分

1870
01:01:14,000 --> 01:01:16,000
到那个那个孤寨存组上

1871
01:01:16,000 --> 01:01:18,000
保证那个锻炼之后的问题

1872
01:01:18,000 --> 01:01:20,000
然后除非电池测试好近

1873
01:01:20,000 --> 01:01:21,000
一点电都没有了

1874
01:01:21,000 --> 01:01:23,000
它你都是从标准的

1875
01:01:23,000 --> 01:01:24,000
从原来的商职

1876
01:01:24,000 --> 01:01:25,000
也欢迎的这个模式

1877
01:01:25,000 --> 01:01:27,000
而不会去走修明的那种模式

1878
01:01:27,000 --> 01:01:28,000
就只要是电池有电

1879
01:01:28,000 --> 01:01:30,000
它的内存是不会掉电的

1880
01:01:30,000 --> 01:01:31,000
对是的 要不是的话

1881
01:01:31,000 --> 01:01:34,000
因为那个现在 16 G 那么大读出来

1882
01:01:34,000 --> 01:01:35,000
很明显你能看到一个进度条

1883
01:01:35,000 --> 01:01:36,000
在那个走进度条的

1884
01:01:36,000 --> 01:01:38,000
那个那个速度是太晚了

1885
01:01:38,000 --> 01:01:39,000
对对

1886
01:01:39,000 --> 01:01:41,000
你说只是说哪怕是

1887
01:01:41,000 --> 01:01:42,000
内存没有掉的进度下

1888
01:01:42,000 --> 01:01:44,000
它的换性也是非常慢的对吧

1889
01:01:44,000 --> 01:01:45,000
对是的

1890
01:01:45,000 --> 01:01:47,000
我自己做了一个猜想

1891
01:01:47,000 --> 01:01:49,000
不确定这个猜想是对的

1892
01:01:49,000 --> 01:01:51,000
就是在如果

1893
01:01:51,000 --> 01:01:52,000
我就有一个习惯就是

1894
01:01:52,000 --> 01:01:53,000
因为我的 MacBook

1895
01:01:53,000 --> 01:01:54,000
不是主力的工作机

1896
01:01:54,000 --> 01:01:56,000
所以说我可能把它放在那里

1897
01:01:56,000 --> 01:01:57,000
改个一两天

1898
01:01:57,000 --> 01:01:58,000
我都可能不会用一次

1899
01:01:58,000 --> 01:01:59,000
然后这时候它打开

1900
01:01:59,000 --> 01:02:00,000
然后如果是在

1901
01:02:00,000 --> 01:02:02,000
intel 的视卫上的话

1902
01:02:02,000 --> 01:02:04,000
你在修明的一个状态下的话

1903
01:02:04,000 --> 01:02:05,000
整个 CPU 是彻底不活跃的

1904
01:02:05,000 --> 01:02:07,000
所以说你在打开那一瞬间

1905
01:02:07,000 --> 01:02:08,000
有很多的 App

1906
01:02:08,000 --> 01:02:09,000
它的蛋码的话

1907
01:02:09,000 --> 01:02:10,000
它有很多的 Timer

1908
01:02:10,000 --> 01:02:12,000
即使系列要触发一些各种各样的事情

1909
01:02:12,000 --> 01:02:14,000
这个时候你

1910
01:02:14,000 --> 01:02:15,000
这个概要合得越久

1911
01:02:15,000 --> 01:02:17,000
关于不用的时间越长

1912
01:02:17,000 --> 01:02:19,000
这个各种的 Timer 对得越多

1913
01:02:19,000 --> 01:02:20,000
所以说这一瞬间

1914
01:02:20,000 --> 01:02:21,000
对机的就我在处理的吧

1915
01:02:21,000 --> 01:02:22,000
对

1916
01:02:22,000 --> 01:02:23,000
全部都出来了

1917
01:02:23,000 --> 01:02:24,000
然后就要去处理

1918
01:02:24,000 --> 01:02:26,000
然后就会导致这个时间是非常卡的

1919
01:02:26,000 --> 01:02:28,000
然后现在我在我测试了

1920
01:02:28,000 --> 01:02:30,000
一下新的 M 1 的 MacBook 的话

1921
01:02:30,000 --> 01:02:32,000
它整个 CPU 的盒在后台是

1922
01:02:32,000 --> 01:02:35,000
一直会有尖端的去

1923
01:02:35,000 --> 01:02:36,000
换新整个系统

1924
01:02:36,000 --> 01:02:37,000
然后去工作的

1925
01:02:37,000 --> 01:02:38,000
就很逮捕一样

1926
01:02:38,000 --> 01:02:40,000
就是它不是完全的一个彻底

1927
01:02:40,000 --> 01:02:41,000
修明的一个状态

1928
01:02:41,000 --> 01:02:42,000
就是它所有的后台任务

1929
01:02:42,000 --> 01:02:44,000
都是在一直运行的

1930
01:02:44,000 --> 01:02:46,000
对 所以你就不会在

1931
01:02:46,000 --> 01:02:47,000
那个另一时刻会

1932
01:02:47,000 --> 01:02:48,000
有这么大量的一个

1933
01:02:48,000 --> 01:02:49,000
任务量堆过来

1934
01:02:49,000 --> 01:02:51,000
然后非要在那一刻全部解决掉

1935
01:02:51,000 --> 01:02:52,000
你说这个我想起一个事

1936
01:02:52,000 --> 01:02:56,000
就是你在 M 1 的 MacBook Pro 上面

1937
01:02:56,000 --> 01:02:57,000
你去它的叫

1938
01:02:57,000 --> 01:02:59,000
System Preferences

1939
01:02:59,000 --> 01:03:00,000
就是系统设置里面

1940
01:03:00,000 --> 01:03:02,000
找到那个能源

1941
01:03:02,000 --> 01:03:03,000
就是 Energy Savor

1942
01:03:03,000 --> 01:03:04,000
就是结能那个选项之后

1943
01:03:04,000 --> 01:03:06,000
它还会有那个选项

1944
01:03:06,000 --> 01:03:07,000
叫做 Power Knife 那个选项

1945
01:03:07,000 --> 01:03:08,000
给你吗

1946
01:03:08,000 --> 01:03:09,000
没有了我看过

1947
01:03:09,000 --> 01:03:11,000
它那个选项已经去下偶了

1948
01:03:11,000 --> 01:03:12,000
可能就这个问题导致的

1949
01:03:12,000 --> 01:03:14,000
Power Knife 是我先是 10 点几

1950
01:03:14,000 --> 01:03:15,000
引进的一个心特性

1951
01:03:15,000 --> 01:03:18,000
就是说它可以让你

1952
01:03:18,000 --> 01:03:20,000
那个 Mac 在戴机或者修明状态下

1953
01:03:20,000 --> 01:03:22,000
它还是格三 X 5 的

1954
01:03:22,000 --> 01:03:23,000
换型一下

1955
01:03:23,000 --> 01:03:24,000
然后来处理一下

1956
01:03:24,000 --> 01:03:26,000
比如说是做这个 Time Machine 的背份

1957
01:03:26,000 --> 01:03:29,000
说是检查邮件或者是 Icon 的

1958
01:03:29,000 --> 01:03:30,000
去推送处理

1959
01:03:30,000 --> 01:03:31,000
但是这个是紧线

1960
01:03:31,000 --> 01:03:32,000
我的理解

1961
01:03:32,000 --> 01:03:34,000
紧线也苹果的第一方的这些应用

1962
01:03:34,000 --> 01:03:36,000
它当时要求一个东西就是

1963
01:03:36,000 --> 01:03:38,000
那些应用必须得支持

1964
01:03:38,000 --> 01:03:39,000
叫做 Timeer

1965
01:03:39,000 --> 01:03:40,000
就是合并

1966
01:03:40,000 --> 01:03:42,000
因为我们知道它的那些

1967
01:03:42,000 --> 01:03:44,000
Timeer 就是各自各自

1968
01:03:44,000 --> 01:03:46,000
各自各自的 Timeer 的节奏

1969
01:03:46,000 --> 01:03:47,000
它可能不一定在一起

1970
01:03:47,000 --> 01:03:49,000
它当时为了支持这个 Power Knife

1971
01:03:49,000 --> 01:03:52,000
那些应用如果你想要在

1972
01:03:52,000 --> 01:03:53,000
Power Knife 期间

1973
01:03:53,000 --> 01:03:54,000
就是任用和和该期间

1974
01:03:54,000 --> 01:03:56,000
还能做一些后来更新的话

1975
01:03:56,000 --> 01:03:57,000
你必须满足一些前几条件

1976
01:03:57,000 --> 01:03:58,000
其中还有一个就是说

1977
01:03:58,000 --> 01:03:59,000
你必须能够支持

1978
01:03:59,000 --> 01:04:01,000
把你的 Timeer 能够合并

1979
01:04:01,000 --> 01:04:02,000
比如说你本来是定时

1980
01:04:02,000 --> 01:04:05,000
定的是比如说三分五十秒后

1981
01:04:05,000 --> 01:04:07,000
换型一个世界你要去运行

1982
01:04:07,000 --> 01:04:08,000
但是因为

1983
01:04:08,000 --> 01:04:10,000
如果你要在 Power Knife

1984
01:04:10,000 --> 01:04:13,000
就说你必须牺牲掉这个准全型

1985
01:04:13,000 --> 01:04:14,000
它系统有可能说

1986
01:04:14,000 --> 01:04:16,000
我在三分二十秒的时候

1987
01:04:16,000 --> 01:04:18,000
就把你换型或者在四分十分

1988
01:04:18,000 --> 01:04:20,000
十秒的时候才把你换型

1989
01:04:20,000 --> 01:04:22,000
因为我要考虑把进可能多的

1990
01:04:22,000 --> 01:04:24,000
Timeer 时间合并到一个

1991
01:04:24,000 --> 01:04:25,000
Nap 的周期

1992
01:04:25,000 --> 01:04:26,000
我就只用发型一次

1993
01:04:26,000 --> 01:04:29,000
因为每次发型都要比较大的能好

1994
01:04:30,000 --> 01:04:33,000
所以在 M 1 的

1995
01:04:33,000 --> 01:04:34,000
新面上不存在这个问题

1996
01:04:34,000 --> 01:04:36,000
因为它没有 Power Knife 在工程

1997
01:04:36,000 --> 01:04:37,000
因为它的后台

1998
01:04:37,000 --> 01:04:39,000
它不是有什么四个小的

1999
01:04:39,000 --> 01:04:41,000
这个小核心

2000
01:04:41,000 --> 01:04:42,000
就是 Effation is a code

2001
01:04:42,000 --> 01:04:43,000
高效率的核对吧

2002
01:04:43,000 --> 01:04:45,000
所以它会一直在

2003
01:04:45,000 --> 01:04:46,000
头台运行

2004
01:04:46,000 --> 01:04:47,000
所以不需要

2005
01:04:47,000 --> 01:04:48,000
哪就跟你手机

2006
01:04:48,000 --> 01:04:50,000
跟你的 iPhone 给你来拍的一样

2007
01:04:50,000 --> 01:04:51,000
它其实是一直在后面

2008
01:04:51,000 --> 01:04:53,000
有戴机状态在运行的

2009
01:04:53,000 --> 01:04:54,000
那就不存在

2010
01:04:54,000 --> 01:04:56,000
说需要合并 Timeer 这个问题

2011
01:04:56,000 --> 01:04:57,000
那你只要

2012
01:04:57,000 --> 01:04:58,000
你不过分的

2013
01:04:58,000 --> 01:05:00,000
去使用它还是会让你

2014
01:05:00,000 --> 01:05:02,000
去完成这些 Timeer 的功能

2015
01:05:02,000 --> 01:05:03,000
那已经不会导致你说

2016
01:05:03,000 --> 01:05:04,000
开盖以后

2017
01:05:04,000 --> 01:05:06,000
导致可能上一个 Nap 周期

2018
01:05:06,000 --> 01:05:08,000
累积的那些 Timeer 时间

2019
01:05:08,000 --> 01:05:09,000
一下都冒出来

2020
01:05:09,000 --> 01:05:10,000
哎呀我又马上要处理了

2021
01:05:10,000 --> 01:05:11,000
对

2022
01:05:11,000 --> 01:05:13,000
而且那个 Power Knife 选上的话

2023
01:05:13,000 --> 01:05:14,000
我记得默认设置情况下

2024
01:05:14,000 --> 01:05:17,000
在电池的那个新方向是关掉的

2025
01:05:17,000 --> 01:05:19,000
就是你得自己去电源设置

2026
01:05:19,000 --> 01:05:21,000
里面去允许它在电池的情况下

2027
01:05:21,000 --> 01:05:22,000
执行 Power Knife 对

2028
01:05:22,000 --> 01:05:24,000
就是如果你是一个电池

2029
01:05:24,000 --> 01:05:25,000
就是比如说你是一个笔记本

2030
01:05:25,000 --> 01:05:26,000
你是戴电池

2031
01:05:26,000 --> 01:05:27,000
它有它在那个

2032
01:05:27,000 --> 01:05:29,000
简单小小片面会有两个 Type

2033
01:05:29,000 --> 01:05:30,000
一个是电池模式

2034
01:05:30,000 --> 01:05:31,000
一个是就是

2035
01:05:31,000 --> 01:05:34,000
就是钩钩钩钩钩钩钩钩钩钩

2036
01:05:34,000 --> 01:05:35,000
钩钩钩钩里面那个 Power Knife

2037
01:05:35,000 --> 01:05:36,000
它默认是开的

2038
01:05:36,000 --> 01:05:37,000
然后它那个电池模式

2039
01:05:37,000 --> 01:05:38,000
它默认是关的

2040
01:05:38,000 --> 01:05:39,000
你那手机手里

2041
01:05:39,000 --> 01:05:40,000
哪开才能完成的

2042
01:05:40,000 --> 01:05:41,000
因为它还是要飞电嘛对吧

2043
01:05:41,000 --> 01:05:42,000
但是

2044
01:05:42,000 --> 01:05:44,000
它现在如果是 M 1 的话

2045
01:05:44,000 --> 01:05:45,000
就完全不给这个选项了

2046
01:05:45,000 --> 01:05:47,000
我就有那么自信

2047
01:05:47,000 --> 01:05:48,000
即便是这样还是不会飞电对不对

2048
01:05:48,000 --> 01:05:49,000
对

2049
01:05:49,000 --> 01:05:50,000
没错

2050
01:05:50,000 --> 01:05:52,000
所以现在如果有 interno 的

2051
01:05:52,000 --> 01:05:53,000
Macbook 的用火

2052
01:05:53,000 --> 01:05:54,000
可以尝试一下

2053
01:05:54,000 --> 01:05:55,000
把那个训练钩上之后

2054
01:05:55,000 --> 01:05:56,000
能不能还自己的那个

2055
01:05:56,000 --> 01:05:58,000
就是还行了之后会卡顿问题

2056
01:05:58,000 --> 01:06:00,000
就至少它通过那个

2057
01:06:00,000 --> 01:06:02,000
牺牲一些电量的方式来

2058
01:06:02,000 --> 01:06:03,000
减缓

2059
01:06:03,000 --> 01:06:06,000
最后对同意打开缓醒

2060
01:06:06,000 --> 01:06:08,000
然后全部它们时间都跑出来

2061
01:06:08,000 --> 01:06:10,000
要爱歌处理的问题的了

2062
01:06:10,000 --> 01:06:11,000
对

2063
01:06:11,000 --> 01:06:13,000
但有另外一个问题就是

2064
01:06:13,000 --> 01:06:15,000
我曾经遇到过原来的 Macbook

2065
01:06:15,000 --> 01:06:17,000
就是我明明是休眠

2066
01:06:17,000 --> 01:06:18,000
就干上盖着

2067
01:06:18,000 --> 01:06:20,000
然后就带着出去旅行或者怎么样了

2068
01:06:20,000 --> 01:06:21,000
然后当我们一滴打开

2069
01:06:21,000 --> 01:06:23,000
整个电池就百分之零

2070
01:06:23,000 --> 01:06:25,000
完全好近的这种情况的对

2071
01:06:25,000 --> 01:06:26,000
没电了

2072
01:06:26,000 --> 01:06:27,000
我有遇到过这种情况

2073
01:06:27,000 --> 01:06:29,000
这个好像它们说过一个原因

2074
01:06:29,000 --> 01:06:31,000
就是我不知道是不是这个情况

2075
01:06:31,000 --> 01:06:32,000
就是因为你在

2076
01:06:32,000 --> 01:06:34,000
背包里面的那个

2077
01:06:34,000 --> 01:06:37,000
合盖的话它是数值的嘛

2078
01:06:37,000 --> 01:06:39,000
如果说你的没有夹紧的话

2079
01:06:39,000 --> 01:06:41,000
比如说你数把比较空

2080
01:06:41,000 --> 01:06:42,000
然后你抖一抖

2081
01:06:42,000 --> 01:06:43,000
它是有可能在那个过程

2082
01:06:43,000 --> 01:06:45,000
就把那个盖打开了

2083
01:06:45,000 --> 01:06:46,000
就不断打开不断干上

2084
01:06:46,000 --> 01:06:48,000
盖子背上打开的时候看

2085
01:06:48,000 --> 01:06:50,000
对就差距变成一再运行

2086
01:06:50,000 --> 01:06:52,000
我这里不太可能

2087
01:06:52,000 --> 01:06:54,000
因为我背的是一个

2088
01:06:54,000 --> 01:06:56,000
就是那种戴装门夹层的包

2089
01:06:56,000 --> 01:06:58,000
它会把整个 Macbook

2090
01:06:58,000 --> 01:07:00,000
就整非常紧的包裹起来

2091
01:07:00,000 --> 01:07:02,000
但我还是遇到这种问题

2092
01:07:02,000 --> 01:07:04,000
就是下班的时候

2093
01:07:04,000 --> 01:07:05,000
把电脑放进去

2094
01:07:05,000 --> 01:07:06,000
然后去健身

2095
01:07:06,000 --> 01:07:08,000
然后回到家里面再打开

2096
01:07:08,000 --> 01:07:09,000
然后去组织了

2097
01:07:09,000 --> 01:07:11,000
强性组织的熊面这样的一个事情

2098
01:07:11,000 --> 01:07:13,000
然后它实力是运行的

2099
01:07:13,000 --> 01:07:14,000
有可能对

2100
01:07:14,000 --> 01:07:15,000
或者是出现了一个 buck

2101
01:07:15,000 --> 01:07:16,000
根本就没有进到训练状态

2102
01:07:16,000 --> 01:07:18,000
然后一直就是在那个

2103
01:07:18,000 --> 01:07:19,000
尝试进入训练

2104
01:07:19,000 --> 01:07:22,000
然后不断的去这个好难的一个状态

2105
01:07:22,000 --> 01:07:23,000
也有可能对吧

2106
01:07:23,000 --> 01:07:25,000
但是呢我们目前都知道这个国

2107
01:07:25,000 --> 01:07:27,000
可以甩给英特尔了

2108
01:07:27,000 --> 01:07:29,000
是的这个也一似甩了吧

2109
01:07:29,000 --> 01:07:31,000
因为 M 1 没有这个问题

2110
01:07:31,000 --> 01:07:32,000
对没这个问题了

2111
01:07:32,000 --> 01:07:33,000
我什么时候都来跑

2112
01:07:33,000 --> 01:07:36,000
我只是变得跑得慢了一点而已

2113
01:07:36,000 --> 01:07:37,000
对

2114
01:07:37,000 --> 01:07:39,000
都跟你刚刚说到这个 timer 的这个问题

2115
01:07:39,000 --> 01:07:41,000
如果我在想假设苹果

2116
01:07:41,000 --> 01:07:43,000
假设如果确实问题是如你所说的

2117
01:07:43,000 --> 01:07:46,000
一个导致的开机的时候会比较

2118
01:07:46,000 --> 01:07:49,000
临在哪里面的麦布开机会比较

2119
01:07:49,000 --> 01:07:51,000
就是接开开会比较慢的话

2120
01:07:51,000 --> 01:07:53,000
它其实可以等一下在其中

2121
01:07:53,000 --> 01:07:54,000
那些 timer 之间的处理

2122
01:07:54,000 --> 01:07:56,000
也还是可以解决这个问题吧

2123
01:07:56,000 --> 01:07:59,000
好像从炸钩上来说会比较难

2124
01:07:59,000 --> 01:08:01,000
因为呢已经是那个程序自己的

2125
01:08:01,000 --> 01:08:03,000
一个代码的一部分的逻辑了

2126
01:08:03,000 --> 01:08:05,000
你这个时候你要是强行的

2127
01:08:05,000 --> 01:08:08,000
那一部分程序全部给势力不足了

2128
01:08:08,000 --> 01:08:10,000
然后就只把科罗欢行

2129
01:08:10,000 --> 01:08:13,000
只把那个 Ui 的精神和这种实行欢行的话

2130
01:08:13,000 --> 01:08:14,000
好像想起来

2131
01:08:14,000 --> 01:08:16,000
想起来还是一个很复杂的事情

2132
01:08:16,000 --> 01:08:17,000
就可以导致比较

2133
01:08:17,000 --> 01:08:19,000
你打开之后那个程序没有想意你的

2134
01:08:19,000 --> 01:08:22,000
虽然说他不影响你其他系统的性能

2135
01:08:22,000 --> 01:08:24,000
但是那个程序本身没想意会导致你

2136
01:08:24,000 --> 01:08:25,000
说你这个东西是不是挂掉了

2137
01:08:25,000 --> 01:08:26,000
对

2138
01:08:26,000 --> 01:08:28,000
而且系统红内偶可能系统的某些东西

2139
01:08:28,000 --> 01:08:30,000
要非得依靠某个程序的某个结果

2140
01:08:30,000 --> 01:08:31,000
怎么样的东西

2141
01:08:31,000 --> 01:08:32,000
你把它势力不资完

2142
01:08:32,000 --> 01:08:33,000
那系统也卡住了

2143
01:08:33,000 --> 01:08:35,000
打这个互相说死

2144
01:08:35,000 --> 01:08:39,000
我们把这个 Sirge 给 Sirge 拿开

2145
01:08:39,000 --> 01:08:40,000
没网了

2146
01:08:42,000 --> 01:08:43,000
就完蛋了

2147
01:08:43,000 --> 01:08:44,000
对

2148
01:08:44,000 --> 01:08:46,000
然后那边要检查我 csp 的请求

2149
01:08:46,000 --> 01:08:49,000
然后有一个互相给我死云完的卡说

2150
01:08:49,000 --> 01:08:51,000
所以看起来也不太可行

2151
01:08:51,000 --> 01:08:53,000
这个机合大问题很难解决

2152
01:08:53,000 --> 01:08:54,000
对

2153
01:08:54,000 --> 01:08:55,000
说到这个看机

2154
01:08:55,000 --> 01:08:59,000
你用那个手标解锁了 M 1 的 Macbook Pro 吗

2155
01:08:59,000 --> 01:09:00,000
我没有

2156
01:09:00,000 --> 01:09:01,000
因为我的手标的话

2157
01:09:01,000 --> 01:09:03,000
只是健身的时候在

2158
01:09:03,000 --> 01:09:05,000
所以一直长的话都没有在手标

2159
01:09:05,000 --> 01:09:06,000
平时你不带着

2160
01:09:06,000 --> 01:09:07,000
对

2161
01:09:07,000 --> 01:09:09,000
而且 M 1 的话有那个指纹所以说也不太

2162
01:09:09,000 --> 01:09:10,000
看眼神和我一样

2163
01:09:10,000 --> 01:09:12,000
我基本上很少带 i-pow

2164
01:09:12,000 --> 01:09:15,000
现在不去健身的连连这个机构都没有

2165
01:09:15,000 --> 01:09:16,000
就放在吃灰

2166
01:09:16,000 --> 01:09:18,000
因为我平时还是带的

2167
01:09:18,000 --> 01:09:20,000
但是因为带段时间就会它那个

2168
01:09:20,000 --> 01:09:22,000
被我那个圈会压的手上的压伤一个印子

2169
01:09:22,000 --> 01:09:24,000
那个部分皮肤会非常的

2170
01:09:24,000 --> 01:09:25,000
养

2171
01:09:25,000 --> 01:09:26,000
就是难受嘛

2172
01:09:26,000 --> 01:09:27,000
养的

2173
01:09:27,000 --> 01:09:28,000
然后就再掉了

2174
01:09:28,000 --> 01:09:29,000
就是出门

2175
01:09:29,000 --> 01:09:32,000
就是我需要走步的时候再带上它

2176
01:09:32,000 --> 01:09:34,000
就这个问题还是比较难解决

2177
01:09:34,000 --> 01:09:35,000
那其实也是续决的

2178
01:09:35,000 --> 01:09:36,000
对

2179
01:09:36,000 --> 01:09:37,000
之前又来的问题就是说

2180
01:09:37,000 --> 01:09:38,000
那个我老是经常

2181
01:09:38,000 --> 01:09:40,000
经常性的解锁不了这个

2182
01:09:40,000 --> 01:09:41,000
Apple Watch

2183
01:09:41,000 --> 01:09:43,000
就是它你看到它在嘗试解锁

2184
01:09:43,000 --> 01:09:44,000
对吧

2185
01:09:44,000 --> 01:09:45,000
那我说那个 Mini

2186
01:09:45,000 --> 01:09:47,000
然后过了几秒

2187
01:09:47,000 --> 01:09:48,000
我说

2188
01:09:48,000 --> 01:09:49,000
这几秒时间我已经足够

2189
01:09:49,000 --> 01:09:50,000
我输入密码

2190
01:09:50,000 --> 01:09:52,000
完成登陆的过程了对吧

2191
01:09:52,000 --> 01:09:53,000
但是它还没有解锁

2192
01:09:53,000 --> 01:09:54,000
就是它刚刚告诉我失败了

2193
01:09:54,000 --> 01:09:55,000
我还是得输一遍密码

2194
01:09:55,000 --> 01:09:56,000
就这个

2195
01:09:56,000 --> 01:09:58,000
可高兴非常低

2196
01:09:58,000 --> 01:09:59,000
对这个对于苹果来说

2197
01:09:59,000 --> 01:10:00,000
简单太常见那件事情了

2198
01:10:00,000 --> 01:10:01,000
是吧

2199
01:10:01,000 --> 01:10:03,000
各种这种只要涉及到两个设备

2200
01:10:03,000 --> 01:10:04,000
不在一起的

2201
01:10:04,000 --> 01:10:06,000
感觉这个八个的发生了

2202
01:10:06,000 --> 01:10:08,000
有 50%的那么高

2203
01:10:08,000 --> 01:10:10,000
我是十次有其次可能都解不开

2204
01:10:10,000 --> 01:10:12,000
碰运气能解锁开

2205
01:10:12,000 --> 01:10:14,000
给它两三次这种

2206
01:10:14,000 --> 01:10:16,000
你的是第几代的那个我去

2207
01:10:16,000 --> 01:10:18,000
就五代啊

2208
01:10:18,000 --> 01:10:19,000
不是最新这个

2209
01:10:19,000 --> 01:10:20,000
但是也是比较新的嘛

2210
01:10:20,000 --> 01:10:21,000
对

2211
01:10:21,000 --> 01:10:22,000
那是去那

2212
01:10:22,000 --> 01:10:23,000
那那个应该是没问题的

2213
01:10:23,000 --> 01:10:24,000
因为原来一二代的时候

2214
01:10:24,000 --> 01:10:26,000
确实是好像实现方式整个都是不一样的

2215
01:10:27,000 --> 01:10:28,000
那个成功力就是非常低

2216
01:10:28,000 --> 01:10:29,000
我就是一代的

2217
01:10:29,000 --> 01:10:31,000
可能就是太老了

2218
01:10:31,000 --> 01:10:32,000
无他就是太老了

2219
01:10:32,000 --> 01:10:34,000
我当时是开发 LPS 的时候

2220
01:10:34,000 --> 01:10:36,000
我专门看是配到 Worch

2221
01:10:36,000 --> 01:10:37,000
然后用 Worch 可以结束

2222
01:10:37,000 --> 01:10:39,000
然后就发现我那个原来的最早的那一代

2223
01:10:39,000 --> 01:10:40,000
应该是零代了 S 零

2224
01:10:40,000 --> 01:10:43,000
对那个真的不行

2225
01:10:43,000 --> 01:10:45,000
那个成功率就低到可能

2226
01:10:45,000 --> 01:10:48,000
5%不到的这么低的成功率

2227
01:10:48,000 --> 01:10:49,000
直接放弃了

2228
01:10:49,000 --> 01:10:51,000
那那那那机器真的非常非常满

2229
01:10:51,000 --> 01:10:53,000
就是那个地毕性

2230
01:10:53,000 --> 01:10:54,000
对好急嘛

2231
01:10:54,000 --> 01:10:56,000
然后那个处理器也不行

2232
01:10:56,000 --> 01:10:57,000
虚航也不行

2233
01:10:57,000 --> 01:10:59,000
然后挺坑的

2234
01:10:59,000 --> 01:11:00,000
是的

2235
01:11:00,000 --> 01:11:01,000
然后换到五代了之后

2236
01:11:01,000 --> 01:11:02,000
就发现成功率

2237
01:11:02,000 --> 01:11:03,000
在测试的时候

2238
01:11:03,000 --> 01:11:05,000
是达到了 99%左右

2239
01:11:05,000 --> 01:11:06,000
但是在这场的使用中

2240
01:11:06,000 --> 01:11:07,000
确实很多时候

2241
01:11:07,000 --> 01:11:08,000
也会出现

2242
01:11:08,000 --> 01:11:10,000
就不知道怎么它就不准

2243
01:11:10,000 --> 01:11:11,000
不过我们做了

2244
01:11:11,000 --> 01:11:13,000
可能依赖于蓝牙的那个

2245
01:11:13,000 --> 01:11:14,000
2.4 G 环境

2246
01:11:14,000 --> 01:11:15,000
可能还是有一些讲究

2247
01:11:15,000 --> 01:11:16,000
因为现在 2.4 G 环境

2248
01:11:16,000 --> 01:11:17,000
确实在这次

2249
01:11:17,000 --> 01:11:19,000
在城市里面是比较糟糕的

2250
01:11:19,000 --> 01:11:20,000
然后说

2251
01:11:20,000 --> 01:11:21,000
不管你在这么努力

2252
01:11:21,000 --> 01:11:22,000
你解决不了这个

2253
01:11:22,000 --> 01:11:24,000
无限这个设品的问题的话

2254
01:11:24,000 --> 01:11:26,000
它可能还是没有办法

2255
01:11:26,000 --> 01:11:27,000
实现就是说

2256
01:11:27,000 --> 01:11:28,000
稳定可靠的解锁了

2257
01:11:28,000 --> 01:11:29,000
对

2258
01:11:29,000 --> 01:11:30,000
但这个国好像

2259
01:11:30,000 --> 01:11:31,000
也有一个

2260
01:11:31,000 --> 01:11:32,000
可以甩给 interer 的可能

2261
01:11:32,000 --> 01:11:34,000
就是我之前

2262
01:11:34,000 --> 01:11:36,000
做过一些蓝牙的一些开发

2263
01:11:36,000 --> 01:11:37,000
然后你会发现

2264
01:11:37,000 --> 01:11:38,000
就是其实整个

2265
01:11:38,000 --> 01:11:40,000
BikeOS 和 LS 的那个

2266
01:11:40,000 --> 01:11:41,000
蓝牙协议站

2267
01:11:41,000 --> 01:11:43,000
还是经常会出现问题

2268
01:11:43,000 --> 01:11:44,000
整个协议站崩掉的

2269
01:11:44,000 --> 01:11:45,000
所以是不是也是

2270
01:11:45,000 --> 01:11:46,000
麦克上面的合级

2271
01:11:46,000 --> 01:11:48,000
原来在老家购上面

2272
01:11:48,000 --> 01:11:49,000
和蓝牙的同学

2273
01:11:49,000 --> 01:11:50,000
不是那么浪漫

2274
01:11:50,000 --> 01:11:51,000
然后它出问题了

2275
01:11:52,000 --> 01:11:54,000
然后在 MR

2276
01:11:54,000 --> 01:11:55,000
MES 的信念上面

2277
01:11:55,000 --> 01:11:56,000
也把这个问题修好了

2278
01:11:56,000 --> 01:11:57,000
也是有可能的一种理论

2279
01:11:57,000 --> 01:11:58,000
也有可能

2280
01:11:58,000 --> 01:12:00,000
就是之前它是用那个

2281
01:12:00,000 --> 01:12:01,000
它的之前蓝牙

2282
01:12:01,000 --> 01:12:02,000
WiFi 因为都是

2283
01:12:02,000 --> 01:12:03,000
普通的方案嘛

2284
01:12:03,000 --> 01:12:04,000
就是在麦克上面

2285
01:12:04,000 --> 01:12:05,000
对是的

2286
01:12:05,000 --> 01:12:06,000
那这是它改用自己的方案

2287
01:12:06,000 --> 01:12:07,000
说不定也有可能

2288
01:12:07,000 --> 01:12:09,000
你可以关注一下

2289
01:12:09,000 --> 01:12:10,000
就是你之后的

2290
01:12:10,000 --> 01:12:12,000
试试解写自己的试试看一下

2291
01:12:12,000 --> 01:12:13,000
还是很好看的

2292
01:12:13,000 --> 01:12:15,000
但我觉得最重要的解决

2293
01:12:15,000 --> 01:12:16,000
这个问题可能还是得靠

2294
01:12:16,000 --> 01:12:17,000
不敢说是安全性

2295
01:12:17,000 --> 01:12:18,000
还是可知可靠器上

2296
01:12:18,000 --> 01:12:20,000
还是得看这个

2297
01:12:20,000 --> 01:12:22,000
就是今天是从 iPhone 11

2298
01:12:22,000 --> 01:12:23,000
开始打载了

2299
01:12:23,000 --> 01:12:24,000
U 1 的

2300
01:12:24,000 --> 01:12:27,000
Outro Y-band 的东西

2301
01:12:27,000 --> 01:12:28,000
看得不能解决

2302
01:12:28,000 --> 01:12:29,000
因为那个一个是可以解决

2303
01:12:29,000 --> 01:12:30,000
这个同性可靠器

2304
01:12:30,000 --> 01:12:31,000
因为它是超宽带

2305
01:12:31,000 --> 01:12:32,000
它是可以同时在

2306
01:12:32,000 --> 01:12:33,000
多个评论上发啊

2307
01:12:33,000 --> 01:12:34,000
自己给消息了

2308
01:12:34,000 --> 01:12:35,000
就不用在

2309
01:12:35,000 --> 01:12:37,000
等蓝牙的一个跳评

2310
01:12:37,000 --> 01:12:38,000
2.4 G

2311
01:12:38,000 --> 01:12:39,000
而且它有那个距离

2312
01:12:39,000 --> 01:12:41,000
就是说它可以更加安全可靠的判断

2313
01:12:41,000 --> 01:12:42,000
是不是你这个表

2314
01:12:42,000 --> 01:12:44,000
刚好在这个麦克帽的旁边

2315
01:12:44,000 --> 01:12:46,000
我就可以有更大的

2316
01:12:46,000 --> 01:12:48,000
信任空间说

2317
01:12:48,000 --> 01:12:51,000
那肯定是你本人在接触这个东西

2318
01:12:51,000 --> 01:12:53,000
而不是说通过这种

2319
01:12:53,000 --> 01:12:54,000
就像什么

2320
01:12:54,000 --> 01:12:56,000
Releague 攻击的方式来做的嘛

2321
01:12:56,000 --> 01:12:57,000
对 没错

2322
01:12:57,000 --> 01:12:58,000
但是这个好像

2323
01:12:58,000 --> 01:12:59,000
还是一个遥远的现实

2324
01:12:59,000 --> 01:13:01,000
这个字在 iPhone 上

2325
01:13:01,000 --> 01:13:02,000
目前装载了

2326
01:13:02,000 --> 01:13:04,000
我去和麦克帅都还没有

2327
01:13:04,000 --> 01:13:05,000
我去上面看

2328
01:13:05,000 --> 01:13:06,000
主要是空间的限制

2329
01:13:06,000 --> 01:13:08,000
怎么能够实现

2330
01:13:08,000 --> 01:13:09,000
说把那个

2331
01:13:09,000 --> 01:13:10,000
再威胁一下或者直接整

2332
01:13:10,000 --> 01:13:11,000
表较呢

2333
01:13:11,000 --> 01:13:12,000
它还不是 S 5

2334
01:13:12,000 --> 01:13:13,000
所以它是叫做

2335
01:13:13,000 --> 01:13:14,000
SOP

2336
01:13:14,000 --> 01:13:15,000
System on package

2337
01:13:15,000 --> 01:13:17,000
就是它整个

2338
01:13:17,000 --> 01:13:19,000
整个系统都封装在

2339
01:13:19,000 --> 01:13:20,000
一个

2340
01:13:20,000 --> 01:13:21,000
它开机里面去了

2341
01:13:21,000 --> 01:13:22,000
然后就是它整合都是比

2342
01:13:22,000 --> 01:13:24,000
那个 MG 还要高的

2343
01:13:24,000 --> 01:13:25,000
所以说到时候我它把

2344
01:13:25,000 --> 01:13:26,000
U 1 整合进去

2345
01:13:26,000 --> 01:13:27,000
我觉得应该也是有可能性的

2346
01:13:27,000 --> 01:13:28,000
但只是说

2347
01:13:28,000 --> 01:13:29,000
功耗啊

2348
01:13:29,000 --> 01:13:30,000
这些天线怎么弄

2349
01:13:30,000 --> 01:13:31,000
我不太清楚

2350
01:13:31,000 --> 01:13:33,000
但是我希望是能够实现的

2351
01:13:33,000 --> 01:13:36,000
然后 U 1 应该上麦克帅还还没有

2352
01:13:36,000 --> 01:13:37,000
对吧

2353
01:13:37,000 --> 01:13:38,000
哪怕是这个 M 1 的麦克帅

2354
01:13:38,000 --> 01:13:39,000
没有的

2355
01:13:39,000 --> 01:13:40,000
对 都没有

2356
01:13:40,000 --> 01:13:41,000
说不定这个 M 2 可能就有了

2357
01:13:41,000 --> 01:13:42,000
应该是了

2358
01:13:42,000 --> 01:13:43,000
按时间的话

2359
01:13:43,000 --> 01:13:44,000
应该是到了一个该门开门

2360
01:13:44,000 --> 01:13:46,000
我去该进行大升级的

2361
01:13:46,000 --> 01:13:47,000
一个能够实现

2362
01:13:47,000 --> 01:13:48,000
对啊对啊

2363
01:13:48,000 --> 01:13:49,000
而且它这个

2364
01:13:49,000 --> 01:13:50,000
它要整合在芯片里面

2365
01:13:50,000 --> 01:13:51,000
它也比较好做嘛

2366
01:13:51,000 --> 01:13:52,000
都是在自己的这个

2367
01:13:52,000 --> 01:13:54,000
所以不管是安全性伤

2368
01:13:54,000 --> 01:13:56,000
还是做这个空间上面

2369
01:13:56,000 --> 01:13:57,000
都比较好弄

2370
01:13:57,000 --> 01:13:58,000
对吧

2371
01:13:58,000 --> 01:13:59,000
而且这个场景很合适啊对吧

2372
01:13:59,000 --> 01:14:01,000
因为那个表或者手机

2373
01:14:01,000 --> 01:14:03,000
靠近一个你的麦克就接错了

2374
01:14:03,000 --> 01:14:04,000
那其实还是很方便的嘛

2375
01:14:04,000 --> 01:14:06,000
就是不用做什么操作

2376
01:14:06,000 --> 01:14:07,000
对

2377
01:14:07,000 --> 01:14:08,000
我今天才从你在学习了

2378
01:14:08,000 --> 01:14:10,000
原来 U 1 是可以拿传输数据的

2379
01:14:10,000 --> 01:14:11,000
我原来的理解的话

2380
01:14:11,000 --> 01:14:13,000
以为它只能去标定一个方向

2381
01:14:13,000 --> 01:14:14,000
把你方向在它那个

2382
01:14:14,000 --> 01:14:15,000
物理特性导致的嘛

2383
01:14:15,000 --> 01:14:17,000
传输机它只要能够传输信号

2384
01:14:17,000 --> 01:14:18,000
都是可以传输数据的嘛

2385
01:14:18,000 --> 01:14:20,000
而且我理解它那个贷款还比较高

2386
01:14:20,000 --> 01:14:21,000
因为它可有的那个

2387
01:14:21,000 --> 01:14:23,000
就是那个无线的评断会比较宽嘛

2388
01:14:23,000 --> 01:14:24,000
所以我觉得

2389
01:14:24,000 --> 01:14:26,000
U 1 如果内置到 Apple 是

2390
01:14:26,000 --> 01:14:28,000
iPad 甚至是这个

2391
01:14:28,000 --> 01:14:29,000
麦克里面它甚至

2392
01:14:29,000 --> 01:14:31,000
你在我们现在用那个叫什么

2393
01:14:31,000 --> 01:14:32,000
Sidecar

2394
01:14:32,000 --> 01:14:33,000
这把就是从过

2395
01:14:33,000 --> 01:14:35,000
是从 WiFi 的实现的嘛

2396
01:14:35,000 --> 01:14:37,000
它是从我 5 G 的一个 WiFi 的实现的对吧

2397
01:14:37,000 --> 01:14:38,000
对应该是 WiFi 的

2398
01:14:38,000 --> 01:14:39,000
对如果它

2399
01:14:39,000 --> 01:14:40,000
用 U 1 的话还可以把那个

2400
01:14:40,000 --> 01:14:41,000
WiFi 的贷款解放出来

2401
01:14:41,000 --> 01:14:43,000
其实还是更好那个方案的

2402
01:14:43,000 --> 01:14:44,000
对是的

2403
01:14:44,000 --> 01:14:46,000
是一个我们希望的我也来

2404
01:14:46,000 --> 01:14:47,000
对对对对

2405
01:14:47,000 --> 01:14:49,000
另外这个就是

2406
01:14:49,000 --> 01:14:50,000
就是未来的这个

2407
01:14:50,000 --> 01:14:51,000
苹果的这个麦克里面

2408
01:14:51,000 --> 01:14:53,000
几代设的还是非常值得期待的

2409
01:14:53,000 --> 01:14:54,000
那大家可以去买一点

2410
01:14:54,000 --> 01:14:55,000
这个苹果目标啊

2411
01:14:55,000 --> 01:14:56,000
反正

2412
01:14:56,000 --> 01:14:57,000
我是买了你们

2413
01:14:57,000 --> 01:14:58,000
你们说你也买了

2414
01:14:58,000 --> 01:14:59,000
我先卖微信

2415
01:14:59,000 --> 01:15:00,000
我先卖微信

2416
01:15:00,000 --> 01:15:01,000
我信

2417
01:15:01,000 --> 01:15:02,000
对

2418
01:15:02,000 --> 01:15:05,000
OK 今天我们前半部分叫我们叫什么

2419
01:15:05,000 --> 01:15:06,000
预议先扬的

2420
01:15:06,000 --> 01:15:08,000
先表扬一段这个苹果的这个

2421
01:15:08,000 --> 01:15:09,000
这个

2422
01:15:09,000 --> 01:15:10,000
这个意见

2423
01:15:10,000 --> 01:15:11,000
现在我们开始吐槽模式

2424
01:15:11,000 --> 01:15:13,000
很着急的后来就是

2425
01:15:13,000 --> 01:15:15,000
在聊的第二个话题其实是跟

2426
01:15:15,000 --> 01:15:16,000
其实是相当于的时候

2427
01:15:16,000 --> 01:15:17,000
一个比较遭到的一个

2428
01:15:17,000 --> 01:15:19,000
或者是比更加难解决的一个事情吧

2429
01:15:19,000 --> 01:15:22,000
这对叫什么啊

2430
01:15:22,000 --> 01:15:23,000
我不知道这个中文名叫什么

2431
01:15:23,000 --> 01:15:24,000
我就是这个

2432
01:15:24,000 --> 01:15:25,000
这个

2433
01:15:25,000 --> 01:15:26,000
这个说起叫做

2434
01:15:26,000 --> 01:15:27,000
ocsp

2435
01:15:27,000 --> 01:15:29,000
它的全名叫做

2436
01:15:29,000 --> 01:15:31,000
anline certificate status protocol

2437
01:15:31,000 --> 01:15:32,000
叫什么

2438
01:15:32,000 --> 01:15:34,000
再线证书状态协议

2439
01:15:34,000 --> 01:15:36,000
很大概多翻译一下吧

2440
01:15:36,000 --> 01:15:38,000
要不要是你给我们先解释一下

2441
01:15:38,000 --> 01:15:39,000
因为这个是一个开发者

2442
01:15:39,000 --> 01:15:40,000
专门用到的东西

2443
01:15:40,000 --> 01:15:41,000
你给我解释一下

2444
01:15:41,000 --> 01:15:42,000
这个东西是干嘛用的

2445
01:15:42,000 --> 01:15:43,000
为什么它会

2446
01:15:43,000 --> 01:15:45,000
这次变成一个很大的问题

2447
01:15:45,000 --> 01:15:46,000
行

2448
01:15:46,000 --> 01:15:48,000
然后其实这个 ocsp 这个东西的话

2449
01:15:48,000 --> 01:15:50,000
本身的话和应用的话

2450
01:15:50,000 --> 01:15:52,000
它只是正好被套用在这了

2451
01:15:52,000 --> 01:15:55,000
它本身不是为了解决英文安全新的这个问题

2452
01:15:55,000 --> 01:15:56,000
它是

2453
01:15:56,000 --> 01:15:58,000
它解决问题是什么呢

2454
01:15:58,000 --> 01:16:00,000
是就是在原来的传统的证书体系下

2455
01:16:00,000 --> 01:16:03,000
证书可能更常见的场景是 HTPS 网站

2456
01:16:03,000 --> 01:16:05,000
我们当门访问一个网站的时候

2457
01:16:05,000 --> 01:16:07,000
网站要通过各种的战彼手段

2458
01:16:07,000 --> 01:16:09,000
给我们出示一个合理有效的证书

2459
01:16:09,000 --> 01:16:10,000
我们留言其实才知道

2460
01:16:10,000 --> 01:16:13,000
我们连接到了一个这个网站是真实的

2461
01:16:13,000 --> 01:16:14,000
不是别人造假的

2462
01:16:14,000 --> 01:16:15,000
然后这么一个情况

2463
01:16:15,000 --> 01:16:17,000
但是这个情况就会出现

2464
01:16:17,000 --> 01:16:18,000
我的运营商也好

2465
01:16:18,000 --> 01:16:20,000
或者其他 whatever 什么样的情况

2466
01:16:20,000 --> 01:16:23,000
都行导致我把证书表现洩漏出去了

2467
01:16:23,000 --> 01:16:25,000
那我需要有一个措施能够补救

2468
01:16:25,000 --> 01:16:28,000
然后能够把我洩漏出去这个证书

2469
01:16:28,000 --> 01:16:29,000
给它租销调

2470
01:16:29,000 --> 01:16:32,000
所以说就有各种各样的方式

2471
01:16:32,000 --> 01:16:34,000
去进行叫做证书调销

2472
01:16:34,000 --> 01:16:37,000
这个 ocsp 就是用来调销证书用的对吧

2473
01:16:37,000 --> 01:16:38,000
对是的

2474
01:16:38,000 --> 01:16:40,000
ocsp 就是来调销证书的一种方式

2475
01:16:40,000 --> 01:16:41,000
最早的时候应该是用了叫

2476
01:16:41,000 --> 01:16:43,000
CRL 的一种方式去调销

2477
01:16:43,000 --> 01:16:47,000
CRL 就是定期的系统去或者是六晚期去

2478
01:16:47,000 --> 01:16:48,000
查一个地方

2479
01:16:48,000 --> 01:16:50,000
然后给你反归一大个列表

2480
01:16:50,000 --> 01:16:51,000
哪个证书是被调销的

2481
01:16:51,000 --> 01:16:53,000
你记得不要相信它了

2482
01:16:53,000 --> 01:16:56,000
但这个东西就是越对越大越对越大

2483
01:16:56,000 --> 01:16:57,000
越对越大

2484
01:16:57,000 --> 01:16:58,000
现在大家这么多网站这么东西

2485
01:16:58,000 --> 01:17:00,000
对它只能不减吗

2486
01:17:00,000 --> 01:17:01,000
对是的

2487
01:17:01,000 --> 01:17:02,000
然后就搞到这个都事情

2488
01:17:02,000 --> 01:17:04,000
就会感觉看起来很不优雅

2489
01:17:04,000 --> 01:17:06,000
然后 ocsp 的话其实也挺简单的

2490
01:17:06,000 --> 01:17:07,000
就是每次访问的时候

2491
01:17:07,000 --> 01:17:10,000
我再去找一个彻底的我相信的服务

2492
01:17:10,000 --> 01:17:11,000
去去问一下

2493
01:17:11,000 --> 01:17:13,000
然后说这个证书

2494
01:17:13,000 --> 01:17:14,000
还以为被调销掉

2495
01:17:14,000 --> 01:17:15,000
对它也没有被调销掉

2496
01:17:15,000 --> 01:17:16,000
然后夫妻就说 OK

2497
01:17:16,000 --> 01:17:17,000
没问题

2498
01:17:17,000 --> 01:17:19,000
然后我就我本地就放心就可以了

2499
01:17:19,000 --> 01:17:21,000
然后可能会再加上一些环中机制的就是

2500
01:17:21,000 --> 01:17:24,000
比如说只有几天才会访问一下

2501
01:17:24,000 --> 01:17:26,000
这个可能有点

2502
01:17:26,000 --> 01:17:28,000
我们这个这个刚才那个很技术的一个描述

2503
01:17:28,000 --> 01:17:30,000
但我们做一个比较形象的一个比喻

2504
01:17:30,000 --> 01:17:33,000
就好像我们现在说是你去拿一个美国签证

2505
01:17:33,000 --> 01:17:35,000
它虽然发给你一个签证

2506
01:17:35,000 --> 01:17:37,000
你拿到的那个除非是 V 3 那张纸

2507
01:17:37,000 --> 01:17:38,000
贴的你的补到上了对吧

2508
01:17:38,000 --> 01:17:41,000
但是你实际上要去美国之前

2509
01:17:41,000 --> 01:17:44,000
还是得在一个美国官方指定的一个网站上

2510
01:17:44,000 --> 01:17:45,000
去注册一下

2511
01:17:45,000 --> 01:17:46,000
说我要来美国了

2512
01:17:46,000 --> 01:17:48,000
虽然你之前给我发过这个签证

2513
01:17:48,000 --> 01:17:50,000
但是你现在我再去一下

2514
01:17:50,000 --> 01:17:51,000
我能不能来这次对吧

2515
01:17:51,000 --> 01:17:54,000
差不多这个 ocsp 就是说这个缺人这个过程

2516
01:17:54,000 --> 01:17:55,000
可以当就是

2517
01:17:55,000 --> 01:17:57,000
我觉得 ocsp 更像那种

2518
01:17:57,000 --> 01:17:59,000
比如说你买了一瓶酒

2519
01:17:59,000 --> 01:18:01,000
然后酒上有一个什么防尾标签

2520
01:18:01,000 --> 01:18:03,000
然后说你打电话到某某地方

2521
01:18:03,000 --> 01:18:05,000
查这个标签是不是真的

2522
01:18:05,000 --> 01:18:06,000
得随这样一个对

2523
01:18:06,000 --> 01:18:08,000
这个解释好像非常的合适

2524
01:18:08,000 --> 01:18:10,000
一呼吸一模一样的一个机制

2525
01:18:10,000 --> 01:18:12,000
因为就是 ocsp 的它那个

2526
01:18:12,000 --> 01:18:13,000
验证的那个网址

2527
01:18:13,000 --> 01:18:14,000
实际上是在证书内部

2528
01:18:14,000 --> 01:18:16,000
就是它发现证书的时候

2529
01:18:16,000 --> 01:18:18,000
告诉你你要是想查这个证书的证据

2530
01:18:18,000 --> 01:18:19,000
你要去哪儿查

2531
01:18:19,000 --> 01:18:20,000
对

2532
01:18:20,000 --> 01:18:23,000
所以它这次我们

2533
01:18:23,000 --> 01:18:25,000
就苹果这次遇到的一个问题是说

2534
01:18:25,000 --> 01:18:28,000
因为这个新发的这个 Mac X

2535
01:18:28,000 --> 01:18:29,000
这个 speakser

2536
01:18:29,000 --> 01:18:31,000
1121 的这个新系统

2537
01:18:31,000 --> 01:18:33,000
大规模的人去

2538
01:18:33,000 --> 01:18:38,000
通过 ocsp 的方式去查这个应用证书

2539
01:18:38,000 --> 01:18:40,000
因为你你参议化了新系统吧

2540
01:18:40,000 --> 01:18:42,000
你都要去你开每个程序的时候

2541
01:18:42,000 --> 01:18:43,000
都要先检查一遍这个东西

2542
01:18:43,000 --> 01:18:46,000
导致苹果的这个 ocsp 福气

2543
01:18:46,000 --> 01:18:49,000
被等于是他自己被自己地多死了吗

2544
01:18:49,000 --> 01:18:50,000
就觉得服务攻击了

2545
01:18:50,000 --> 01:18:51,000
导致他还慢

2546
01:18:51,000 --> 01:18:55,000
然后导致所有的这个 Mac 程序都启动不了

2547
01:18:55,000 --> 01:18:57,000
就在等这个查询的结果

2548
01:18:57,000 --> 01:18:59,000
那这里面可能有个跳标的地方就在于

2549
01:18:59,000 --> 01:19:03,000
为什么每次启动 Mac 程序之前需要去检查一下这个证书

2550
01:19:03,000 --> 01:19:06,000
就苹果做这个东西的目的是什么

2551
01:19:06,000 --> 01:19:08,000
这个的话最早的时候

2552
01:19:08,000 --> 01:19:10,000
就是从安全的机制

2553
01:19:10,000 --> 01:19:12,000
就是这个类似的机制的话

2554
01:19:12,000 --> 01:19:15,000
就是在可能公众一般理解起来

2555
01:19:15,000 --> 01:19:17,000
更简单的一个数法叫数字千名

2556
01:19:17,000 --> 01:19:18,000
在温度时上也有

2557
01:19:18,000 --> 01:19:20,000
可能背后逻辑是这样的

2558
01:19:20,000 --> 01:19:22,000
就是因为有了一软件

2559
01:19:22,000 --> 01:19:25,000
那么我就要求你们每个人分发软件的时候

2560
01:19:25,000 --> 01:19:27,000
必须都给这个软件加上一个千名

2561
01:19:27,000 --> 01:19:28,000
就是这个所谓的证书

2562
01:19:28,000 --> 01:19:29,000
对吧

2563
01:19:29,000 --> 01:19:30,000
就千万名得到一个证书

2564
01:19:30,000 --> 01:19:33,000
对我才能认为这个软件是一个

2565
01:19:33,000 --> 01:19:34,000
相对安全的软件

2566
01:19:34,000 --> 01:19:35,000
我才进行隐形力打开

2567
01:19:35,000 --> 01:19:37,000
然后背后对于你的逻辑

2568
01:19:37,000 --> 01:19:40,000
就是这个证书的获取是有一定的门看和难度的

2569
01:19:40,000 --> 01:19:42,000
对于 Mac 来说的话

2570
01:19:42,000 --> 01:19:43,000
就是你的证书

2571
01:19:43,000 --> 01:19:45,000
是就是你的苹果开发者账号证书

2572
01:19:45,000 --> 01:19:47,000
首先你要付钱才能买到 99 刀

2573
01:19:47,000 --> 01:19:50,000
对于 99 刀都没一个成本上来说的话

2574
01:19:50,000 --> 01:19:53,000
假如你要非常大的广泛去撒网

2575
01:19:53,000 --> 01:19:56,000
你想每一个分发都用不同的证书

2576
01:19:56,000 --> 01:19:58,000
几乎是不可能接受了一个成本

2577
01:19:58,000 --> 01:20:00,000
另外就是你在租设账号的时候

2578
01:20:00,000 --> 01:20:02,000
是需要提问信息的支付的时候

2579
01:20:02,000 --> 01:20:04,000
也是需要包入你的支付的信息的

2580
01:20:04,000 --> 01:20:07,000
假如说真的是之后需要跟你切货专照

2581
01:20:07,000 --> 01:20:08,000
你是个一软件

2582
01:20:08,000 --> 01:20:11,000
那么是有证据可以去追寻的

2583
01:20:11,000 --> 01:20:12,000
抓到你本人对吧

2584
01:20:12,000 --> 01:20:13,000
对是说 4 G

2585
01:20:13,000 --> 01:20:16,000
我们是可以找到苹果是找到你在哪了

2586
01:20:16,000 --> 01:20:17,000
对是哪里注册啊

2587
01:20:17,000 --> 01:20:20,000
你的法律主体是什么都能找到的

2588
01:20:20,000 --> 01:20:22,000
这个证书率是包含的这些信息

2589
01:20:22,000 --> 01:20:23,000
对是的

2590
01:20:23,000 --> 01:20:26,000
除非从苹果给你解认证过

2591
01:20:26,000 --> 01:20:28,000
你是不可能自己伟造一个默认情话下

2592
01:20:28,000 --> 01:20:30,000
被苹果设备吸认的证书的

2593
01:20:30,000 --> 01:20:33,000
对这个时候穿法很便宜的决定了

2594
01:20:33,000 --> 01:20:34,000
当然这个你应该比我懂得多

2595
01:20:34,000 --> 01:20:36,000
你可以给大家克服

2596
01:20:36,000 --> 01:20:38,000
我们下次再解释

2597
01:20:38,000 --> 01:20:40,000
但是我们从实用心的解释的说

2598
01:20:40,000 --> 01:20:43,000
就是说你是不可能伟造一个苹果

2599
01:20:43,000 --> 01:20:45,000
签发给你的证书的

2600
01:20:45,000 --> 01:20:47,000
这个是这两件事情就是可以保证的

2601
01:20:47,000 --> 01:20:48,000
那么对

2602
01:20:48,000 --> 01:20:49,000
在这个证书技术上

2603
01:20:49,000 --> 01:20:52,000
再做 Ossetspeed 的原因是

2604
01:20:52,000 --> 01:20:55,000
我才想是不是说苹果认为

2605
01:20:55,000 --> 01:20:58,000
我即使发给你一个可信的证书

2606
01:20:58,000 --> 01:21:00,000
但是你作为一个开发者

2607
01:21:00,000 --> 01:21:03,000
也有可能拿这个证书来分发二一软件对不对

2608
01:21:03,000 --> 01:21:04,000
对是的

2609
01:21:04,000 --> 01:21:06,000
或者说你先翻发了一个证场软件

2610
01:21:06,000 --> 01:21:08,000
但是你可能前服一段时间

2611
01:21:08,000 --> 01:21:11,000
才使用你软件里面的恶意的功能

2612
01:21:11,000 --> 01:21:13,000
这个时候苹果需要一个手段说

2613
01:21:13,000 --> 01:21:16,000
即便我签发了一个可信的证书

2614
01:21:16,000 --> 01:21:18,000
给这个软件的开发者

2615
01:21:18,000 --> 01:21:20,000
他用这个证书给他的成续签发名

2616
01:21:20,000 --> 01:21:21,000
我也要有一个所谓的

2617
01:21:21,000 --> 01:21:23,000
叫 Q 4 WAT 的

2618
01:21:23,000 --> 01:21:24,000
就是库克的

2619
01:21:24,000 --> 01:21:25,000
金库克可以按个键

2620
01:21:25,000 --> 01:21:26,000
老板件

2621
01:21:26,000 --> 01:21:28,000
老板件说静止这个软件

2622
01:21:28,000 --> 01:21:31,000
在苹果设备上运行

2623
01:21:31,000 --> 01:21:32,000
因为他现在是一个二一软件

2624
01:21:32,000 --> 01:21:33,000
还有一些隐藏的功能

2625
01:21:33,000 --> 01:21:35,000
我们当时是不知道的

2626
01:21:35,000 --> 01:21:36,000
没错是的

2627
01:21:36,000 --> 01:21:37,000
这是一种可能

2628
01:21:37,000 --> 01:21:38,000
还有应该中可能是比如说开发者

2629
01:21:38,000 --> 01:21:40,000
他不小心把他证书写落了

2630
01:21:40,000 --> 01:21:41,000
然后被公众所知道

2631
01:21:41,000 --> 01:21:43,000
这个时候大家是都可以用的

2632
01:21:43,000 --> 01:21:44,000
那这也是需要把他出销掉

2633
01:21:44,000 --> 01:21:45,000
把钥匙丢了

2634
01:21:45,000 --> 01:21:47,000
需要整个导致整个楼的换锁

2635
01:21:48,000 --> 01:21:49,000
是的

2636
01:21:50,000 --> 01:21:52,000
这个 OSSB 其实是为了

2637
01:21:52,000 --> 01:21:53,000
从本质还讲

2638
01:21:53,000 --> 01:21:56,000
他还是为了保障用户的安全性考虑

2639
01:21:56,000 --> 01:21:59,000
所以说在每次一个应用程序解冻之前

2640
01:21:59,000 --> 01:22:01,000
都去检查一下这个应用程序

2641
01:22:01,000 --> 01:22:04,000
前面的证书是否被调稍过了

2642
01:22:04,000 --> 01:22:05,000
如果他被调稍过的话

2643
01:22:05,000 --> 01:22:06,000
这个程序就不能启动对吧

2644
01:22:06,000 --> 01:22:08,000
其实还有一点偏差

2645
01:22:08,000 --> 01:22:10,000
就是他也不是每次系统都会检查

2646
01:22:10,000 --> 01:22:13,000
一般他还是有一个时间的换存

2647
01:22:13,000 --> 01:22:15,000
给了时间可能一两天

2648
01:22:15,000 --> 01:22:16,000
我到这么一个聚集测了

2649
01:22:16,000 --> 01:22:18,000
可能是几天可能是几个小时

2650
01:22:18,000 --> 01:22:19,000
这么一个时间

2651
01:22:19,000 --> 01:22:21,000
然后他就会需要重新去检查一下

2652
01:22:21,000 --> 01:22:22,000
而且

2653
01:22:22,000 --> 01:22:23,000
甚至有可能

2654
01:22:23,000 --> 01:22:25,000
当然这个也是推测的不能确定

2655
01:22:25,000 --> 01:22:27,000
苹果亚根没有考虑

2656
01:22:27,000 --> 01:22:31,000
由 OSSB 在 App 包的验证上这件事情

2657
01:22:31,000 --> 01:22:33,000
因为整个系统关于证书

2658
01:22:33,000 --> 01:22:35,000
数字前面的验证的东西都熊了

2659
01:22:35,000 --> 01:22:37,000
是一同一套工具有体系

2660
01:22:37,000 --> 01:22:39,000
然后在开发者上面的话

2661
01:22:39,000 --> 01:22:41,000
应该是 Security Framework

2662
01:22:41,000 --> 01:22:43,000
然后这套体系的话

2663
01:22:43,000 --> 01:22:44,000
机会买给拿来验证

2664
01:22:44,000 --> 01:22:47,000
GTPS 你房子网站是否合理法的

2665
01:22:47,000 --> 01:22:49,000
也会来验证开发者

2666
01:22:49,000 --> 01:22:51,000
开发的签名你的英文包是否是合法的

2667
01:22:51,000 --> 01:22:53,000
所以说他可能也根本没有

2668
01:22:53,000 --> 01:22:54,000
想那么多细节

2669
01:22:54,000 --> 01:22:56,000
直接把那个东西搬过来再就用了

2670
01:22:56,000 --> 01:22:57,000
OK

2671
01:22:57,000 --> 01:23:00,000
如果你电脑是在没连网的状怀下

2672
01:23:00,000 --> 01:23:02,000
这个 OSSB 它是可以直接

2673
01:23:02,000 --> 01:23:03,000
直接时代

2674
01:23:03,000 --> 01:23:05,000
其实是不影响你起动的对不对

2675
01:23:05,000 --> 01:23:06,000
对 这其实是 OSSB

2676
01:23:06,000 --> 01:23:07,000
写一本身设计的时候

2677
01:23:07,000 --> 01:23:08,000
我们就有问题

2678
01:23:08,000 --> 01:23:10,000
但这个问题好像从理论上

2679
01:23:10,000 --> 01:23:12,000
文艺常通时间讨论是不能解决的

2680
01:23:12,000 --> 01:23:14,000
就是假如说黑客恶意着

2681
01:23:14,000 --> 01:23:15,000
他能够控制你的恋路

2682
01:23:15,000 --> 01:23:17,000
他能阻止你的这个查询

2683
01:23:17,000 --> 01:23:18,000
那怎么办

2684
01:23:18,000 --> 01:23:20,000
不准你去检查 OSSB 对吧

2685
01:23:20,000 --> 01:23:23,000
对 你因为不太能够说

2686
01:23:23,000 --> 01:23:25,000
你这个 OSSB 访问失败

2687
01:23:25,000 --> 01:23:26,000
我就不允许积蓄

2688
01:23:26,000 --> 01:23:28,000
因为访问失败这件事情

2689
01:23:28,000 --> 01:23:29,000
太多因素了

2690
01:23:29,000 --> 01:23:31,000
对 太多因素在网络上

2691
01:23:31,000 --> 01:23:32,000
各种方面还是都还是可能的

2692
01:23:32,000 --> 01:23:34,000
我自己观察的话是

2693
01:23:34,000 --> 01:23:35,000
系统会充施 5 次

2694
01:23:35,000 --> 01:23:37,000
你如果这个连接失败了

2695
01:23:37,000 --> 01:23:39,000
他会在后台之中重视 5 次

2696
01:23:39,000 --> 01:23:40,000
如果 5 次之后

2697
01:23:40,000 --> 01:23:41,000
还是无法访问的话

2698
01:23:41,000 --> 01:23:42,000
他就不管了

2699
01:23:42,000 --> 01:23:43,000
他就继续运行

2700
01:23:43,000 --> 01:23:44,000
所以这里面有个

2701
01:23:44,000 --> 01:23:46,000
非常简单直白的问题了

2702
01:23:46,000 --> 01:23:48,000
就是说如果他 OSSB 检查摸人

2703
01:23:48,000 --> 01:23:50,000
就是说如果网络不同的情况

2704
01:23:50,000 --> 01:23:52,000
他也能够就放过不检查

2705
01:23:52,000 --> 01:23:53,000
然后就让这次先集中

2706
01:23:53,000 --> 01:23:54,000
以后再说

2707
01:23:54,000 --> 01:23:56,000
他是不会影响一会使用的

2708
01:23:56,000 --> 01:23:57,000
那为什么这次会到

2709
01:23:57,000 --> 01:23:58,000
这这么大规模的

2710
01:23:58,000 --> 01:23:59,000
又不能起动呢

2711
01:23:59,000 --> 01:24:00,000
他的问题在于

2712
01:24:00,000 --> 01:24:01,000
他没有服务器

2713
01:24:01,000 --> 01:24:03,000
直接说我不行了

2714
01:24:03,000 --> 01:24:04,000
而是服务器被低落了

2715
01:24:04,000 --> 01:24:05,000
他没有想法

2716
01:24:05,000 --> 01:24:07,000
所以说在等着他服务器说话

2717
01:24:07,000 --> 01:24:08,000
OK

2718
01:24:08,000 --> 01:24:09,000
这个大碗就非常傻

2719
01:24:09,000 --> 01:24:11,000
如果说你正常加个什么

2720
01:24:11,000 --> 01:24:12,000
加个台碗

2721
01:24:12,000 --> 01:24:13,000
一个台碗

2722
01:24:13,000 --> 01:24:14,000
比如说 5 秒之后还没有成功

2723
01:24:14,000 --> 01:24:15,000
你就直接放弃了

2724
01:24:15,000 --> 01:24:17,000
就是其实也不会导致这么多的问题对吧

2725
01:24:17,000 --> 01:24:19,000
但实际上等待 5 秒

2726
01:24:19,000 --> 01:24:20,000
相当长的一件事情

2727
01:24:20,000 --> 01:24:21,000
台碗应该是有的

2728
01:24:21,000 --> 01:24:23,000
我觉得应该不止 5 秒可能这个

2729
01:24:23,000 --> 01:24:25,000
那个台碗我没有实际遇到

2730
01:24:25,000 --> 01:24:27,000
他真的当机的那个时间那个事情了

2731
01:24:27,000 --> 01:24:29,000
就是我没有观测到他的道集时

2732
01:24:29,000 --> 01:24:30,000
都会有秒

2733
01:24:30,000 --> 01:24:31,000
但是应该不止 5 秒

2734
01:24:31,000 --> 01:24:33,000
而且我觉得这可能是

2735
01:24:33,000 --> 01:24:34,000
真的是一个第一世界

2736
01:24:34,000 --> 01:24:36,000
没有考一道的问题吧

2737
01:24:36,000 --> 01:24:37,000
对于苹果的工程师

2738
01:24:37,000 --> 01:24:38,000
坐在苹果的网络里面

2739
01:24:38,000 --> 01:24:39,000
从来都不会觉得

2740
01:24:39,000 --> 01:24:41,000
执行一个网络请求

2741
01:24:41,000 --> 01:24:43,000
那个读涉的执行一个网络请求会

2742
01:24:43,000 --> 01:24:44,000
对 还能失败

2743
01:24:44,000 --> 01:24:45,000
对 还能失败

2744
01:24:45,000 --> 01:24:46,000
还能卡住

2745
01:24:46,000 --> 01:24:47,000
这不就几毫秒的事情吧

2746
01:24:47,000 --> 01:24:48,000
有没有关系呢

2747
01:24:48,000 --> 01:24:49,000
对 关系就是说

2748
01:24:49,000 --> 01:24:51,000
如果他是直接失败

2749
01:24:51,000 --> 01:24:52,000
反而对了

2750
01:24:52,000 --> 01:24:53,000
如果是直接失败

2751
01:24:53,000 --> 01:24:54,000
就是网络不同的情况下

2752
01:24:54,000 --> 01:24:55,000
他反而也不会出什么大大问题

2753
01:24:55,000 --> 01:24:56,000
他属于这种

2754
01:24:56,000 --> 01:24:58,000
对 直接 5.020 来之后

2755
01:24:58,000 --> 01:24:59,000
就就可以了对

2756
01:24:59,000 --> 01:25:00,000
对 但这次属于那种

2757
01:25:00,000 --> 01:25:01,000
就是他那边服务器

2758
01:25:01,000 --> 01:25:03,000
相应非常非常慢

2759
01:25:03,000 --> 01:25:05,000
我还在这站努力中对吧

2760
01:25:05,000 --> 01:25:07,000
你不要放弃这种感觉

2761
01:25:07,000 --> 01:25:09,000
但即便是这样

2762
01:25:09,000 --> 01:25:11,000
即便是这种失败场景

2763
01:25:11,000 --> 01:25:12,000
他有如果说

2764
01:25:12,000 --> 01:25:13,000
他就是这个 OSSP

2765
01:25:13,000 --> 01:25:14,000
他是一个我们说的

2766
01:25:14,000 --> 01:25:15,000
叫做一步的

2767
01:25:15,000 --> 01:25:16,000
就是说他

2768
01:25:16,000 --> 01:25:18,000
他的检查 OSSP 和

2769
01:25:18,000 --> 01:25:20,000
和这个让你启动

2770
01:25:20,000 --> 01:25:21,000
他是两个

2771
01:25:21,000 --> 01:25:22,000
不需要

2772
01:25:22,000 --> 01:25:25,000
以前会有越来越关系的邏輯步骤

2773
01:25:25,000 --> 01:25:26,000
他其实也不会到这这种问题

2774
01:25:26,000 --> 01:25:28,000
对吧 就是你启动的是启动的

2775
01:25:28,000 --> 01:25:29,000
能检查检查

2776
01:25:29,000 --> 01:25:31,000
你可以下次在告诉我这个结果

2777
01:25:31,000 --> 01:25:33,000
或者说你检查好了之后

2778
01:25:33,000 --> 01:25:34,000
你谈个小创出来说

2779
01:25:34,000 --> 01:25:35,000
这个程序刚才我检查失败了

2780
01:25:35,000 --> 01:25:36,000
但是你已经把打开了

2781
01:25:36,000 --> 01:25:37,000
我现在警告你说

2782
01:25:37,000 --> 01:25:38,000
这个已经被叫下了

2783
01:25:38,000 --> 01:25:39,000
可能有问题赶紧退出来

2784
01:25:39,000 --> 01:25:40,000
对吧 也是可以的嘛

2785
01:25:40,000 --> 01:25:41,000
对

2786
01:25:41,000 --> 01:25:42,000
但是他给这个也没有做

2787
01:25:42,000 --> 01:25:45,000
对 而且这个问题的话

2788
01:25:45,000 --> 01:25:47,000
可能导致了在国内绝大部分用户

2789
01:25:47,000 --> 01:25:50,000
他觉得麦克广万的一个很大的问题

2790
01:25:50,000 --> 01:25:52,000
有的时候我们会打开我们的麦克广

2791
01:25:52,000 --> 01:25:53,000
然后检查一个 F 或者看来

2792
01:25:53,000 --> 01:25:55,000
图标真的谈谈谈谈谈

2793
01:25:55,000 --> 01:25:57,000
谈个 10 秒其实

2794
01:25:57,000 --> 01:25:58,000
一直在跳对吧

2795
01:25:58,000 --> 01:25:59,000
对 不是一个很长

2796
01:25:59,000 --> 01:26:00,000
很那个很暗的事情

2797
01:26:00,000 --> 01:26:02,000
就是在检查这个证损

2798
01:26:02,000 --> 01:26:03,000
他反而不长

2799
01:26:03,000 --> 01:26:04,000
不是黄罗不长

2800
01:26:04,000 --> 01:26:05,000
对 所以就是说

2801
01:26:05,000 --> 01:26:07,000
本质上是一个软件价格涉及的失误

2802
01:26:07,000 --> 01:26:10,000
再加上这个网络这个技术设施

2803
01:26:10,000 --> 01:26:13,000
因为一些外部或者是不可预测的因素导致

2804
01:26:13,000 --> 01:26:14,000
变得缓慢

2805
01:26:14,000 --> 01:26:16,000
而不是完全不可用的情况下

2806
01:26:16,000 --> 01:26:19,000
双重压力导致的一个用户

2807
01:26:19,000 --> 01:26:21,000
使用体验的重大的问题

2808
01:26:21,000 --> 01:26:24,000
对是的 所以就是还是要把这个苹果的价格

2809
01:26:24,000 --> 01:26:26,000
负责这块价格的拖出来打板子才行

2810
01:26:26,000 --> 01:26:28,000
对 我觉得很可能就是

2811
01:26:28,000 --> 01:26:29,000
之前没有想过这件事情

2812
01:26:29,000 --> 01:26:31,000
在他们那从来没有遇到过这件事情

2813
01:26:31,000 --> 01:26:34,000
那这个坑白弹那就继续没人管

2814
01:26:34,000 --> 01:26:37,000
这个坑应该白了相当长的时间了

2815
01:26:37,000 --> 01:26:40,000
很大 很多年以前就已经是这么一个工作方式

2816
01:26:40,000 --> 01:26:44,000
那引入 SSP 我记得应该是至少可能是 3-5 个版本以前了吧

2817
01:26:44,000 --> 01:26:46,000
对吧 加大版本以前了

2818
01:26:46,000 --> 01:26:47,000
对 我作为开发者

2819
01:26:47,000 --> 01:26:48,000
我自己观察后台请求

2820
01:26:48,000 --> 01:26:50,000
我早就看到后台不断的

2821
01:26:50,000 --> 01:26:54,000
就是说这些请求会一直在进行的

2822
01:26:54,000 --> 01:26:56,000
RCSP 是会直接发到开发者那里去的吗

2823
01:26:56,000 --> 01:26:58,000
不是会发到开发者

2824
01:26:58,000 --> 01:27:01,000
他发的应该是正书的那个办法者那里去查

2825
01:27:01,000 --> 01:27:02,000
应该是

2826
01:27:02,000 --> 01:27:03,000
从车日上面看完了我一辆

2827
01:27:03,000 --> 01:27:04,000
我是能看到他的评词的

2828
01:27:04,000 --> 01:27:06,000
你是从中间演的角度去看他

2829
01:27:06,000 --> 01:27:07,000
对 是的 我能看到他的请求

2830
01:27:07,000 --> 01:27:10,000
然后因为他那个请求本存是 HTP 是民文的

2831
01:27:10,000 --> 01:27:12,000
所以说你能看到他明信息

2832
01:27:12,000 --> 01:27:13,000
所以这也是导致这一次

2833
01:27:13,000 --> 01:27:15,000
大家对他在影师方面的一个邪恶

2834
01:27:15,000 --> 01:27:17,000
上到一个批评的一个原因

2835
01:27:17,000 --> 01:27:18,000
对 刚刚我们说的就是说

2836
01:27:18,000 --> 01:27:19,000
他是导致不可用嘛

2837
01:27:19,000 --> 01:27:21,000
这个还是说是一个用户体验的问题

2838
01:27:21,000 --> 01:27:22,000
可能相对来说

2839
01:27:22,000 --> 01:27:25,000
如果他把这个价格改一下

2840
01:27:25,000 --> 01:27:26,000
比如说他做成一步的

2841
01:27:26,000 --> 01:27:30,000
对吧 不需要跟其动行用程序

2842
01:27:30,000 --> 01:27:32,000
直接产生一个绑定关系

2843
01:27:32,000 --> 01:27:33,000
那可能也还好

2844
01:27:33,000 --> 01:27:35,000
但可能这更要紧的是

2845
01:27:35,000 --> 01:27:38,000
就是说他在 OSSP 检查过程中

2846
01:27:38,000 --> 01:27:41,000
暴露出来的一些更侵犯影子的事情

2847
01:27:41,000 --> 01:27:44,000
比如说他说我们我现在不太清楚

2848
01:27:44,000 --> 01:27:45,000
是不是这么一回事好

2849
01:27:45,000 --> 01:27:47,000
我看到的这个说法是说

2850
01:27:47,000 --> 01:27:50,000
他在 OSSP 请求是通过 HTP 民文发送的

2851
01:27:50,000 --> 01:27:52,000
没有走 HTPS

2852
01:27:52,000 --> 01:27:54,000
这个公务我们目前主流的

2853
01:27:54,000 --> 01:27:57,000
只要是通过这个互联网传说的信息

2854
01:27:57,000 --> 01:27:59,000
都尽可能加密的方式来做

2855
01:27:59,000 --> 01:28:01,000
这种做法是违背的嘛 就是其一样

2856
01:28:01,000 --> 01:28:04,000
对 第二就是说他在这个民文的

2857
01:28:04,000 --> 01:28:08,000
这个 OSSP 的请求里面还付带了

2858
01:28:08,000 --> 01:28:11,000
你就是他要检查那个 App 的一个 HAC

2859
01:28:11,000 --> 01:28:14,000
这个所谓的 HAC 就是说可以唯一判定

2860
01:28:14,000 --> 01:28:15,000
说你是否在

2861
01:28:15,000 --> 01:28:18,000
不是 HAC 是 SN 是那个正书的 SN

2862
01:28:18,000 --> 01:28:20,000
正书的 SNC 正书的训练号对吧

2863
01:28:20,000 --> 01:28:23,000
对 是的 但是这个训练号是正书唯一的

2864
01:28:23,000 --> 01:28:26,000
对 假如我有一个正书和 App 之间的彩虹表的话

2865
01:28:26,000 --> 01:28:28,000
我是可以反查出来这些哪个 App 的

2866
01:28:28,000 --> 01:28:30,000
都是公开信息 对吧 比如说 4 G 对

2867
01:28:30,000 --> 01:28:33,000
他会有一个 SN 对吧 他发了这个 SN 过去

2868
01:28:33,000 --> 01:28:37,000
但是如果我只要假设我是这个 SNC 或者任何一个中间人

2869
01:28:37,000 --> 01:28:41,000
我观察到了这个民文的 HTPS 的流量

2870
01:28:41,000 --> 01:28:45,000
然后我看到的是一个 App 地址 就是这个原来的 App 地址

2871
01:28:45,000 --> 01:28:47,000
他发向了苹果的 GOSSP 的服务器

2872
01:28:47,000 --> 01:28:50,000
有一个民文的这个包包里面还有这个 SN

2873
01:28:50,000 --> 01:28:52,000
那我可以百分之百 军确的都是结论说

2874
01:28:52,000 --> 01:28:56,000
这个 App 的人在用 4 G 开发者正书千发的东西

2875
01:28:56,000 --> 01:28:59,000
对 但是 4 G 开发者是因为他只签发了 2 个东西

2876
01:28:59,000 --> 01:29:02,000
就是 4 G 和这个 App 的这两个 App

2877
01:29:02,000 --> 01:29:04,000
那他肯定是在用其中这两个之一 对吧

2878
01:29:04,000 --> 01:29:05,000
对 没错

2879
01:29:05,000 --> 01:29:10,000
然后由于绝大部分的我们跑开什么微软啊

2880
01:29:10,000 --> 01:29:12,000
那些什么大公司就正常一些中小开发者

2881
01:29:12,000 --> 01:29:14,000
他可能一个就说就只开发一个 App

2882
01:29:14,000 --> 01:29:17,000
其实我们可以基本上可以进去的定位到这个人

2883
01:29:17,000 --> 01:29:20,000
是不是在用 4 G 或者这个人是不是在用猫猫什么软件

2884
01:29:20,000 --> 01:29:23,000
对吧 有些比较敏感一点人家

2885
01:29:23,000 --> 01:29:25,000
就是我们是可以明确的知道这件事情的

2886
01:29:25,000 --> 01:29:27,000
对是的 所以从这个角度谈讲

2887
01:29:27,000 --> 01:29:29,000
这个明文的 SSP 的请求

2888
01:29:29,000 --> 01:29:31,000
他的确是泄露了用活的影似

2889
01:29:31,000 --> 01:29:33,000
这个说法是没错的 对吧

2890
01:29:33,000 --> 01:29:34,000
对 这个说法是没错的

2891
01:29:34,000 --> 01:29:37,000
我们也看到就是这个 这单这次一篇

2892
01:29:37,000 --> 01:29:40,000
这个是一篇这个博客里面

2893
01:29:40,000 --> 01:29:44,000
他有专门去解释这个整个这个敌算源

2894
01:29:44,000 --> 01:29:46,000
你怎么回事 我会把这个续密续在续密续

2895
01:29:46,000 --> 01:29:49,000
里面会提出这篇文章的这个连接大量

2896
01:29:49,000 --> 01:29:51,000
可以去如果感兴趣这个就是一篇可以去点去来看

2897
01:29:52,000 --> 01:29:54,000
但我们也看到就是隔了可能几天之后

2898
01:29:54,000 --> 01:29:57,000
苹果出了一个官方的 算是一个回应吧

2899
01:29:57,000 --> 01:30:00,000
他在他的这个 SSP 的配击里面

2900
01:30:00,000 --> 01:30:02,000
叫做 Safely Open Apps on your Mac

2901
01:30:02,000 --> 01:30:06,000
就是说在你的 Mac 上安全的打开启应用程序里面

2902
01:30:06,000 --> 01:30:09,000
最下面加了一个 Section 叫做

2903
01:30:09,000 --> 01:30:11,000
叫做这个 Piracy Protection

2904
01:30:11,000 --> 01:30:13,000
你思保我当他说

2905
01:30:13,000 --> 01:30:14,000
他做了加了一段话

2906
01:30:14,000 --> 01:30:15,000
他给了三个方法

2907
01:30:15,000 --> 01:30:19,000
他说在明年我们会增加几个变化

2908
01:30:19,000 --> 01:30:24,000
就是说通过加密的协议去传输这个 SSP 的请求

2909
01:30:24,000 --> 01:30:25,000
这把就是其一

2910
01:30:25,000 --> 01:30:28,000
第二就是说他有更强的保护措施去解决

2911
01:30:28,000 --> 01:30:31,000
刚才我们讲的就是说如果服务端不可用

2912
01:30:31,000 --> 01:30:33,000
就是各种失败的原因

2913
01:30:33,000 --> 01:30:36,000
出现就尽量避免

2914
01:30:36,000 --> 01:30:38,000
由于服务器或者网络不可用

2915
01:30:38,000 --> 01:30:41,000
而导致不发起动这个应用的情况嘛

2916
01:30:41,000 --> 01:30:42,000
对吧

2917
01:30:42,000 --> 01:30:43,000
然后就说还给用回一个选项

2918
01:30:43,000 --> 01:30:44,000
说说用回可以

2919
01:30:44,000 --> 01:30:48,000
Oh,Touch 就是可以不要这些安全保护措施

2920
01:30:48,000 --> 01:30:50,000
彻底的保护这个因此对吧

2921
01:30:50,000 --> 01:30:51,000
我就是要裸呗

2922
01:30:51,000 --> 01:30:53,000
我就是想要像温度是要的

2923
01:30:53,000 --> 01:30:55,000
对,我就不想解查的

2924
01:30:55,000 --> 01:30:58,000
我就不想给你苹果知道我在运行什么样程

2925
01:30:58,000 --> 01:31:00,000
所以说说法我觉得

2926
01:31:00,000 --> 01:31:01,000
有点奇怪

2927
01:31:01,000 --> 01:31:03,000
就是说你都在用苹果的软件

2928
01:31:03,000 --> 01:31:04,000
硬件系统了

2929
01:31:04,000 --> 01:31:06,000
你不想让苹果知道这个是不可能的对吧

2930
01:31:06,000 --> 01:31:08,000
苹果如果要想知道

2931
01:31:08,000 --> 01:31:09,000
他总有各种方法知道

2932
01:31:09,000 --> 01:31:12,000
你跟他你在这里做文章是没有用的

2933
01:31:12,000 --> 01:31:13,000
但是我们来看

2934
01:31:13,000 --> 01:31:15,000
就是说苹果还没有公布

2935
01:31:15,000 --> 01:31:17,000
他说他具体的解决方案是什么

2936
01:31:17,000 --> 01:31:19,000
我们这是一个毕竟是个技术节目

2937
01:31:19,000 --> 01:31:20,000
我们来想想

2938
01:31:20,000 --> 01:31:22,000
有哪些方法可以避免这个问题

2939
01:31:22,000 --> 01:31:23,000
首先来看

2940
01:31:23,000 --> 01:31:24,000
我们先说刚才也提到了

2941
01:31:24,000 --> 01:31:28,000
就是说把这个 ocsp 检查和 app 其中的

2942
01:31:28,000 --> 01:31:30,000
这个两个过程独立开来

2943
01:31:30,000 --> 01:31:31,000
不要做程式

2944
01:31:31,000 --> 01:31:33,000
像如果因为 ocp 检查失败

2945
01:31:33,000 --> 01:31:35,000
就没有结果

2946
01:31:35,000 --> 01:31:36,000
或者他的进行中

2947
01:31:36,000 --> 01:31:38,000
就要等他结果才能成的

2948
01:31:38,000 --> 01:31:39,000
这个是你以前是不合理的对吧

2949
01:31:39,000 --> 01:31:40,000
对

2950
01:31:40,000 --> 01:31:41,000
所以就是要

2951
01:31:41,000 --> 01:31:43,000
他就 ocp 他是一个

2952
01:31:43,000 --> 01:31:44,000
应该是一个意步

2953
01:31:44,000 --> 01:31:46,000
在背景后台去运行的一个东西

2954
01:31:46,000 --> 01:31:47,000
然后前台

2955
01:31:47,000 --> 01:31:49,000
应用在还是正常之行

2956
01:31:49,000 --> 01:31:51,000
不用等待任何网络进球

2957
01:31:51,000 --> 01:31:52,000
然后后来

2958
01:31:52,000 --> 01:31:54,000
如果你 ocp 检查结果你告诉我说

2959
01:31:54,000 --> 01:31:56,000
要不就下次不能用

2960
01:31:56,000 --> 01:31:57,000
或者是你这次不能用你这些谈创

2961
01:31:57,000 --> 01:31:58,000
或者是给个他们提示

2962
01:31:58,000 --> 01:32:01,000
然后把 app freeze 住

2963
01:32:01,000 --> 01:32:02,000
也可以对吧

2964
01:32:02,000 --> 01:32:03,000
或者是强行

2965
01:32:03,000 --> 01:32:04,000
杀掉他退出

2966
01:32:04,000 --> 01:32:05,000
给个提示也行

2967
01:32:05,000 --> 01:32:06,000
这种方法就比较简单了

2968
01:32:06,000 --> 01:32:08,000
那其实我更关心的就是说

2969
01:32:08,000 --> 01:32:11,000
那是否或者说如何通过一个

2970
01:32:11,000 --> 01:32:14,000
加密的协议来传输这个 ocsp 检查

2971
01:32:14,000 --> 01:32:16,000
或者说从技术上有没有可能

2972
01:32:16,000 --> 01:32:19,000
就是拿它说我用民文传输

2973
01:32:19,000 --> 01:32:21,000
但是不会泄露用户的

2974
01:32:21,000 --> 01:32:23,000
再用哪个正书的

2975
01:32:23,000 --> 01:32:26,000
或者再用哪个 app 的这么一个信息

2976
01:32:26,000 --> 01:32:28,000
其实这个问题它之所以

2977
01:32:28,000 --> 01:32:30,000
就是 ocsp 有这个问题

2978
01:32:30,000 --> 01:32:32,000
就是因为 ocsp 本事最早就是

2979
01:32:32,000 --> 01:32:35,000
为 htps 这个请求来设计的

2980
01:32:35,000 --> 01:32:37,000
因为我当我去

2981
01:32:37,000 --> 01:32:38,000
访问 htps 的时候

2982
01:32:38,000 --> 01:32:39,000
这是一个加密连结

2983
01:32:39,000 --> 01:32:41,000
我要去验证这个证出是否有效

2984
01:32:41,000 --> 01:32:43,000
然后我要去指示新高 ssp

2985
01:32:43,000 --> 01:32:44,000
去请求

2986
01:32:44,000 --> 01:32:46,000
如果这个 ocsp 请求

2987
01:32:46,000 --> 01:32:47,000
也是 htps 的话

2988
01:32:47,000 --> 01:32:49,000
那它这个请求又该谁来检查呢

2989
01:32:49,000 --> 01:32:51,000
即可淡的问题

2990
01:32:51,000 --> 01:32:52,000
这个说法淡我觉得

2991
01:32:52,000 --> 01:32:53,000
逻辑上是可以理解

2992
01:32:53,000 --> 01:32:55,000
但我觉得如果我不去追求

2993
01:32:55,000 --> 01:32:57,000
那么的百分之百完美的话

2994
01:32:57,000 --> 01:32:58,000
这个我觉得也不是不可以接受

2995
01:32:58,000 --> 01:33:00,000
就是如果说 ocsp 的请求

2996
01:33:00,000 --> 01:33:02,000
它不是每次都要检查的话

2997
01:33:02,000 --> 01:33:04,000
就是如果它可以像

2998
01:33:04,000 --> 01:33:05,000
就是网页来 htps 的建策

2999
01:33:05,000 --> 01:33:06,000
也可以一步的话

3000
01:33:06,000 --> 01:33:07,000
它完全可以

3001
01:33:07,000 --> 01:33:10,000
就是说我检查 ocsp 的那个 hpps 请求

3002
01:33:10,000 --> 01:33:12,000
的 ocsp 我可以不做嘛

3003
01:33:12,000 --> 01:33:14,000
或者说是我等一下次嘛

3004
01:33:14,000 --> 01:33:15,000
或者说等这个

3005
01:33:15,000 --> 01:33:16,000
或者一步来做也可以嘛

3006
01:33:16,000 --> 01:33:19,000
至少让我保证这一次的 ocsp 请求

3007
01:33:19,000 --> 01:33:20,000
是可以完成的

3008
01:33:20,000 --> 01:33:21,000
然后我们再来看你

3009
01:33:21,000 --> 01:33:23,000
那个 ocsp 请就是

3010
01:33:23,000 --> 01:33:25,000
就是它是两个英国的 ocsp 请求

3011
01:33:25,000 --> 01:33:28,000
它不需要一定是同时完成嘛

3012
01:33:28,000 --> 01:33:30,000
对这个从我在理解上来说的话

3013
01:33:30,000 --> 01:33:32,000
是当时是在 1999 年嘛

3014
01:33:32,000 --> 01:33:34,000
那个时候对隐私的保护的重要性

3015
01:33:34,000 --> 01:33:36,000
没有现在这么强

3016
01:33:36,000 --> 01:33:37,000
然后本身的话

3017
01:33:37,000 --> 01:33:39,000
你通过访问 htps 的话

3018
01:33:39,000 --> 01:33:41,000
你通过在练书上

3019
01:33:41,000 --> 01:33:43,000
已经 sni 已经泄露出你的那个访问的语名了

3020
01:33:43,000 --> 01:33:44,000
随时这个事情

3021
01:33:44,000 --> 01:33:46,000
你访问哪个网站这些已经暴露了

3022
01:33:46,000 --> 01:33:47,000
对扎不扎密

3023
01:33:47,000 --> 01:33:49,000
或者走不到 hpps 的关于

3024
01:33:49,000 --> 01:33:51,000
在 ocsp 请求上的话

3025
01:33:51,000 --> 01:33:52,000
是涉及安全性的问题

3026
01:33:52,000 --> 01:33:54,000
不涉及隐私性的问题

3027
01:33:54,000 --> 01:33:55,000
安全性的问题的话

3028
01:33:55,000 --> 01:33:56,000
在想应结果上

3029
01:33:56,000 --> 01:33:58,000
本身就已经被证书的那个数字

3030
01:33:58,000 --> 01:33:59,000
前面给解决了

3031
01:33:59,000 --> 01:34:01,000
所以说你加 htps 是解决隐私问题

3032
01:34:01,000 --> 01:34:03,000
在 1999 年那个时候估计

3033
01:34:03,000 --> 01:34:04,000
大家一是

3034
01:34:04,000 --> 01:34:06,000
它本身在 tps 的 sni 上

3035
01:34:06,000 --> 01:34:07,000
就已经泄露过一次了

3036
01:34:08,000 --> 01:34:10,000
然后二世也没有这么特别的

3037
01:34:10,000 --> 01:34:11,000
是关注这个隐私上

3038
01:34:11,000 --> 01:34:12,000
要这么保护的一个事情

3039
01:34:12,000 --> 01:34:14,000
所以说就没有考虑件事

3040
01:34:14,000 --> 01:34:15,000
就是我的理解

3041
01:34:15,000 --> 01:34:16,000
因为它毕竟它是一个

3042
01:34:16,000 --> 01:34:17,000
online 的事情就是说

3043
01:34:17,000 --> 01:34:18,000
你一定要联网

3044
01:34:18,000 --> 01:34:19,000
然后你才要

3045
01:34:19,000 --> 01:34:20,000
你本来就要发动东西

3046
01:34:20,000 --> 01:34:22,000
哪怕我不通过 sni cp 的看

3047
01:34:22,000 --> 01:34:23,000
我直接看你联去了

3048
01:34:23,000 --> 01:34:24,000
扎开我这个中间人

3049
01:34:24,000 --> 01:34:26,000
我直接看你联去了哪个目标的 iP

3050
01:34:26,000 --> 01:34:28,000
我要知道你去访问了什么网站对吧

3051
01:34:28,000 --> 01:34:30,000
这个场景跟这个 app 上面指动

3052
01:34:30,000 --> 01:34:31,000
因为你有些 app

3053
01:34:31,000 --> 01:34:32,000
你可以是不用联网的嘛

3054
01:34:32,000 --> 01:34:34,000
你就是本地其中一个

3055
01:34:34,000 --> 01:34:35,000
比如说我前进这个随便

3056
01:34:35,000 --> 01:34:36,000
某某某 aP

3057
01:34:36,000 --> 01:34:38,000
但它本来不需要联网对吧

3058
01:34:38,000 --> 01:34:39,000
它就在本地其中

3059
01:34:39,000 --> 01:34:41,000
但是确通过 ocsp 这个东西

3060
01:34:41,000 --> 01:34:43,000
泄露出我在开什么程序

3061
01:34:43,000 --> 01:34:44,000
这就很奇怪了对不对

3062
01:34:44,000 --> 01:34:45,000
对

3063
01:34:45,000 --> 01:34:47,000
所以就是我的关系和尽观点

3064
01:34:47,000 --> 01:34:48,000
就是苹果透了

3065
01:34:48,000 --> 01:34:49,000
它没想那么多

3066
01:34:49,000 --> 01:34:50,000
就把那边现成的一个东西

3067
01:34:50,000 --> 01:34:51,000
就拿过来就用了

3068
01:34:51,000 --> 01:34:54,000
根本没有考虑过这些事情

3069
01:34:54,000 --> 01:34:55,000
你完全可以把整个

3070
01:34:55,000 --> 01:34:57,000
cfd 验证这套搞到本地之下

3071
01:34:57,000 --> 01:34:59,000
定期在这个

3072
01:34:59,000 --> 01:35:00,000
micro-sni

3073
01:35:00,000 --> 01:35:02,000
更新一套苹果从 root

3074
01:35:02,000 --> 01:35:04,000
cdcate 到

3075
01:35:04,000 --> 01:35:06,000
具体当每一个 app 的

3076
01:35:06,000 --> 01:35:08,000
正书的这么一套验证链

3077
01:35:08,000 --> 01:35:10,000
然后你把整个验证过程

3078
01:35:10,000 --> 01:35:11,000
放在本地完成一件事

3079
01:35:11,000 --> 01:35:13,000
这其实就是原来传统的

3080
01:35:13,000 --> 01:35:14,000
crl

3081
01:35:14,000 --> 01:35:15,000
就是提前我把那些

3082
01:35:15,000 --> 01:35:16,000
那些被调消了

3083
01:35:16,000 --> 01:35:17,000
东西先全部下滑

3084
01:35:17,000 --> 01:35:18,000
这就等着

3085
01:35:18,000 --> 01:35:19,000
然后我只用更新这个就行了

3086
01:35:19,000 --> 01:35:22,000
这个面临的最主要的一个限制

3087
01:35:22,000 --> 01:35:24,000
就是说这个列表道有点大

3088
01:35:24,000 --> 01:35:25,000
我是不知道的

3089
01:35:25,000 --> 01:35:26,000
但是我又想来

3090
01:35:26,000 --> 01:35:28,000
这种在 app 上面

3091
01:35:28,000 --> 01:35:29,000
被调消征书的情况

3092
01:35:29,000 --> 01:35:30,000
应该还是比较少的吧

3093
01:35:30,000 --> 01:35:32,000
一不像 web 它是一个完全开放的一个状态嘛

3094
01:35:32,000 --> 01:35:34,000
在 mic 上几乎没有听说过

3095
01:35:34,000 --> 01:35:35,000
有哪个知名的软件

3096
01:35:35,000 --> 01:35:37,000
或者就没有见过哪个软件

3097
01:35:37,000 --> 01:35:39,000
就是戳着治安权的什么东西

3098
01:35:39,000 --> 01:35:41,000
被出现过调消征书的情况

3099
01:35:41,000 --> 01:35:43,000
其实在 iOS 上会很常见

3100
01:35:43,000 --> 01:35:44,000
就是 iOS 的话

3101
01:35:44,000 --> 01:35:46,000
有很多一些黑色产业什么的

3102
01:35:46,000 --> 01:35:47,000
烂泳器

3103
01:35:47,000 --> 01:35:50,000
那然后去分发了很多的应用

3104
01:35:50,000 --> 01:35:51,000
然后它们一旦苹果

3105
01:35:51,000 --> 01:35:52,000
把他们的那个企业

3106
01:35:52,000 --> 01:35:53,000
征书调消了之后

3107
01:35:53,000 --> 01:35:54,000
就会靠 csp 8

3108
01:35:54,000 --> 01:35:55,000
征书给助消

3109
01:35:55,000 --> 01:35:56,000
这样的话

3110
01:35:56,000 --> 01:35:58,000
用户的视为上那个应用就直接打开了

3111
01:35:58,000 --> 01:36:00,000
核心就是苹果之前

3112
01:36:00,000 --> 01:36:02,000
没有仔细想过这件事

3113
01:36:02,000 --> 01:36:03,000
没有去仔细考虑

3114
01:36:03,000 --> 01:36:05,000
把正书体系用在应用包检查上面

3115
01:36:05,000 --> 01:36:07,000
这些细节上会被找到问题

3116
01:36:07,000 --> 01:36:09,000
但是如果就是它好好的想了

3117
01:36:09,000 --> 01:36:11,000
我该怎么样去做这套裸机

3118
01:36:11,000 --> 01:36:12,000
做这个流程的话

3119
01:36:12,000 --> 01:36:13,000
应该是有非常多的方案

3120
01:36:13,000 --> 01:36:14,000
能够做出一套

3121
01:36:14,000 --> 01:36:15,000
即保证隐私

3122
01:36:15,000 --> 01:36:18,000
又安全又稳定的一个结果的

3123
01:36:18,000 --> 01:36:20,000
在目前它不用它做任何

3124
01:36:20,000 --> 01:36:21,000
就是额外的工作

3125
01:36:21,000 --> 01:36:23,000
只是简单的把这个

3126
01:36:23,000 --> 01:36:27,000
ocsp.app.com 这个网站

3127
01:36:27,000 --> 01:36:29,000
强制通过这个 hgps 去访问

3128
01:36:29,000 --> 01:36:31,000
也可以解决这个影子保护线

3129
01:36:31,000 --> 01:36:32,000
和不泄漏的问题

3130
01:36:32,000 --> 01:36:33,000
你只有苹果知道吗

3131
01:36:33,000 --> 01:36:34,000
中间人是不知道的

3132
01:36:34,000 --> 01:36:35,000
对

3133
01:36:35,000 --> 01:36:36,000
理论上应该没问题

3134
01:36:36,000 --> 01:36:38,000
但是从开发者的角度的话

3135
01:36:38,000 --> 01:36:39,000
系统扎构上

3136
01:36:39,000 --> 01:36:41,000
我觉得可能会有问题

3137
01:36:41,000 --> 01:36:43,000
因为它本身就把这些东西的工程系

3138
01:36:43,000 --> 01:36:45,000
已经发放过花分成块了

3139
01:36:45,000 --> 01:36:47,000
那么就是那个进程可能

3140
01:36:47,000 --> 01:36:48,000
本身就没办法

3141
01:36:48,000 --> 01:36:51,000
却在自行 hgps 了不然它就会产生一个悬滑了

3142
01:36:51,000 --> 01:36:52,000
所以我觉得最后结果

3143
01:36:52,000 --> 01:36:54,000
肯定就是它整个机制可能都完全

3144
01:36:54,000 --> 01:36:55,000
给颠覆掉了

3145
01:36:55,000 --> 01:36:56,000
然后重新重新一套

3146
01:36:56,000 --> 01:36:57,000
专门我也检查

3147
01:36:57,000 --> 01:36:59,000
谴查 app 正书的明一套体系

3148
01:36:59,000 --> 01:37:00,000
就是既不依赖

3149
01:37:00,000 --> 01:37:02,000
现有的 hgps 的证损体系

3150
01:37:02,000 --> 01:37:04,000
但又可以同时保持安全

3151
01:37:04,000 --> 01:37:05,000
对 应该是

3152
01:37:05,000 --> 01:37:06,000
我觉得就是

3153
01:37:06,000 --> 01:37:08,000
可以值得专门花经理

3154
01:37:08,000 --> 01:37:10,000
好好地重新做一套

3155
01:37:10,000 --> 01:37:11,000
而不是就是脱个蓝

3156
01:37:11,000 --> 01:37:14,000
然后把 hgps 那边的东西拿过就结用

3157
01:37:14,000 --> 01:37:15,000
那它其实如果

3158
01:37:15,000 --> 01:37:16,000
因为我们知道它苹果

3159
01:37:16,000 --> 01:37:18,000
那个都是有自带证书

3160
01:37:18,000 --> 01:37:20,000
它即使用入它证书

3161
01:37:20,000 --> 01:37:21,000
给所有的社会签发

3162
01:37:21,000 --> 01:37:23,000
一个苹果专用的证书

3163
01:37:23,000 --> 01:37:25,000
它用这个证书去签名

3164
01:37:26,000 --> 01:37:28,000
这个 hgps 那个 ocsp 的请求

3165
01:37:28,000 --> 01:37:29,000
然后再发给

3166
01:37:29,000 --> 01:37:30,000
诈弥的时候再发给苹果

3167
01:37:30,000 --> 01:37:31,000
也是可以的嘛

3168
01:37:31,000 --> 01:37:32,000
就这个还是比较简单的

3169
01:37:32,000 --> 01:37:33,000
对 是的

3170
01:37:33,000 --> 01:37:35,000
就是这样这种改动其实很简单

3171
01:37:35,000 --> 01:37:36,000
就是改两下就是改好了

3172
01:37:36,000 --> 01:37:38,000
但是我要改的话

3173
01:37:38,000 --> 01:37:39,000
那干脆从头再来

3174
01:37:39,000 --> 01:37:42,000
就把所有的也是你的考虑清楚吗

3175
01:37:42,000 --> 01:37:43,000
因为现在的话

3176
01:37:43,000 --> 01:37:44,000
我们可能要因思问题

3177
01:37:44,000 --> 01:37:46,000
还有就是读试问题

3178
01:37:46,000 --> 01:37:47,000
那个因思问题

3179
01:37:47,000 --> 01:37:49,000
倒是其实确实混下了一下

3180
01:37:49,000 --> 01:37:50,000
怎么样一下的话就能够解决了

3181
01:37:50,000 --> 01:37:52,000
那读试问题要解决的话

3182
01:37:52,000 --> 01:37:53,000
就一步嘛

3183
01:37:53,000 --> 01:37:54,000
对 一步我在考虑

3184
01:37:54,000 --> 01:37:56,000
一步的话可能没那么简单

3185
01:37:56,000 --> 01:37:57,000
那一步第一次起动的话

3186
01:37:57,000 --> 01:37:58,000
必须这次统谱的

3187
01:37:58,000 --> 01:38:00,000
要不是画一个 A 软件

3188
01:38:00,000 --> 01:38:01,000
它已经起来了

3189
01:38:01,000 --> 01:38:02,000
它该干的坏事都干完了

3190
01:38:02,000 --> 01:38:04,000
你现在一步结果来了

3191
01:38:04,000 --> 01:38:05,000
再把来掉下

3192
01:38:05,000 --> 01:38:06,000
你这个改不上

3193
01:38:06,000 --> 01:38:07,000
已经改不上了一个时间了

3194
01:38:07,000 --> 01:38:08,000
这个是一个问题

3195
01:38:08,000 --> 01:38:09,000
就是你要不要阻止

3196
01:38:09,000 --> 01:38:11,000
或者说你要多大程度上去阻止

3197
01:38:11,000 --> 01:38:13,000
第一个那个称询

3198
01:38:13,000 --> 01:38:14,000
或者说

3199
01:38:14,000 --> 01:38:15,000
其实你想

3200
01:38:15,000 --> 01:38:17,000
本来这个 ocsp 就是一个之后的解决方案

3201
01:38:17,000 --> 01:38:18,000
不管是你说你

3202
01:38:18,000 --> 01:38:19,000
你即使去查询

3203
01:38:19,000 --> 01:38:20,000
它也是一个之后的方案

3204
01:38:20,000 --> 01:38:21,000
因为你始终是要等到

3205
01:38:21,000 --> 01:38:23,000
你发现这个称询它是

3206
01:38:23,000 --> 01:38:24,000
恶意软件之后

3207
01:38:24,000 --> 01:38:26,000
你再才能可以去掉下这个它的证书

3208
01:38:26,000 --> 01:38:28,000
然后再通过 ocsp 发布出去这个东西

3209
01:38:28,000 --> 01:38:29,000
所以我觉得你去

3210
01:38:29,000 --> 01:38:31,000
这个时候你去追求所谓的这个即使性

3211
01:38:31,000 --> 01:38:33,000
其实好像意义不是特别大

3212
01:38:33,000 --> 01:38:34,000
对 没错

3213
01:38:34,000 --> 01:38:35,000
是的

3214
01:38:35,000 --> 01:38:37,000
而且现在其实在失恋事务

3215
01:38:37,000 --> 01:38:38,000
还是失恋事势开始

3216
01:38:38,000 --> 01:38:40,000
已经又扎了新的一层那个

3217
01:38:40,000 --> 01:38:42,000
诺尔南亦市那个公正那个集职

3218
01:38:42,000 --> 01:38:44,000
那个和证书又是独立的

3219
01:38:44,000 --> 01:38:47,000
这个集职跟 ocsp 还不一样吗

3220
01:38:47,000 --> 01:38:48,000
你这个我一直没有搞明白

3221
01:38:48,000 --> 01:38:49,000
这个顺便可以解释一下

3222
01:38:49,000 --> 01:38:51,000
这个证书的这个集职的话

3223
01:38:51,000 --> 01:38:52,000
是持续存在的

3224
01:38:52,000 --> 01:38:54,000
就是这个每次用那个操兴启动

3225
01:38:54,000 --> 01:38:55,000
那个程序的话

3226
01:38:55,000 --> 01:38:56,000
就好像或者是各一段时间

3227
01:38:56,000 --> 01:38:57,000
都会要去检查

3228
01:38:57,000 --> 01:38:58,000
这证书是不是有效

3229
01:38:58,000 --> 01:39:00,000
然后从此出发这些

3230
01:39:00,000 --> 01:39:01,000
是 PK 动态率掉下

3231
01:39:01,000 --> 01:39:03,000
那个的话只在入口检查

3232
01:39:03,000 --> 01:39:05,000
而且那个是针对每一个应用包

3233
01:39:05,000 --> 01:39:07,000
就是我每一次开发者发布一个包

3234
01:39:07,000 --> 01:39:10,000
都需要把那个包丢到苹果的服务器上

3235
01:39:10,000 --> 01:39:11,000
去先做一次

3236
01:39:11,000 --> 01:39:13,000
还有是和各种安全性的检查

3237
01:39:13,000 --> 01:39:15,000
然后它生成一个有效的一个千名

3238
01:39:15,000 --> 01:39:17,000
可以叫做 TK 程的话

3239
01:39:17,000 --> 01:39:19,000
那给我我负在用包里面

3240
01:39:19,000 --> 01:39:20,000
然后下发给用户

3241
01:39:20,000 --> 01:39:22,000
然后用户打开这个用包的时候

3242
01:39:22,000 --> 01:39:24,000
会检查这个 TK 特使否是有效的

3243
01:39:24,000 --> 01:39:26,000
一种是本地的经财检查

3244
01:39:26,000 --> 01:39:28,000
同时也想服务器会检查

3245
01:39:28,000 --> 01:39:29,000
这个 TK 特使否是有效的

3246
01:39:29,000 --> 01:39:31,000
然后如果是有效的话

3247
01:39:31,000 --> 01:39:32,000
才允许允许器

3248
01:39:32,000 --> 01:39:33,000
你说的那个就是这个

3249
01:39:33,000 --> 01:39:34,000
Notarization 服务

3250
01:39:34,000 --> 01:39:35,000
对吧

3251
01:39:35,000 --> 01:39:36,000
就它这个过程是做这件事情

3252
01:39:36,000 --> 01:39:37,000
对

3253
01:39:37,000 --> 01:39:38,000
它其实两个层面的东西

3254
01:39:38,000 --> 01:39:40,000
就是说 OCSB 检查的是证书

3255
01:39:40,000 --> 01:39:43,000
但是证书是千发给某一个开发者账号的

3256
01:39:43,000 --> 01:39:45,000
然后这个开发账可以开发很多个 APP 出来

3257
01:39:45,000 --> 01:39:47,000
然后它所谓的一个

3258
01:39:47,000 --> 01:39:50,000
所有的检查都证书会怎么样

3259
01:39:50,000 --> 01:39:53,000
但是 Notarization 是针对于这个开发者开发的

3260
01:39:53,000 --> 01:39:55,000
单个应用程序而言的

3261
01:39:55,000 --> 01:39:58,000
单个二政治每个二令制都需要单独的取从以前

3262
01:39:58,000 --> 01:40:00,000
我会在思考这两种方式

3263
01:40:00,000 --> 01:40:03,000
到底是为什么要搞这么一种狗

3264
01:40:03,000 --> 01:40:06,000
搞这么一样的心得这么一场

3265
01:40:06,000 --> 01:40:09,000
它设计这两个机制的用一种

3266
01:40:09,000 --> 01:40:11,000
或者 Notarization 主要解决什么样的问题

3267
01:40:11,000 --> 01:40:13,000
它说是检查这个恶意软件对吧

3268
01:40:13,000 --> 01:40:15,000
我想的话可能有这么几个优势吧

3269
01:40:15,000 --> 01:40:17,000
一是这样的话你每次提交的时候

3270
01:40:17,000 --> 01:40:19,000
它其实是认为是有个要求的

3271
01:40:19,000 --> 01:40:23,000
就是你要满足一下一些新的一些系统的安全特性

3272
01:40:23,000 --> 01:40:25,000
这个安全特性的话

3273
01:40:25,000 --> 01:40:27,000
随着时间的推进它的要求会变得越来越严格

3274
01:40:27,000 --> 01:40:29,000
然后比如说像现在这些

3275
01:40:29,000 --> 01:40:32,000
还真的终于让它用的一些各种限制

3276
01:40:32,000 --> 01:40:35,000
你必须得啟综到这些保护之后

3277
01:40:35,000 --> 01:40:37,000
你插在给你发这个发这么一块

3278
01:40:37,000 --> 01:40:39,000
才给你通过这么一个工资

3279
01:40:39,000 --> 01:40:42,000
然后除了说它会能够主动的去控制

3280
01:40:42,000 --> 01:40:46,000
去编册开发转你赶快把这些新的安全特性都给我做啥

3281
01:40:46,000 --> 01:40:50,000
要不是的话你就别大家就用起来会很麻烦

3282
01:40:50,000 --> 01:40:52,000
然后另外一方面的话就是可能会考虑到

3283
01:40:52,000 --> 01:40:55,000
有些开发者它偶然发了一个版本

3284
01:40:55,000 --> 01:40:57,000
那个版本是待有恶意软件的

3285
01:40:57,000 --> 01:40:59,000
或者是它有什么样严重漏洞的

3286
01:40:59,000 --> 01:41:01,000
不用吧 证据的杀掉

3287
01:41:01,000 --> 01:41:02,000
只能干点那个版本就可以了

3288
01:41:02,000 --> 01:41:05,000
你把证据一杀掉这个可能影响的笑服

3289
01:41:05,000 --> 01:41:07,000
那个可能是威力太大了

3290
01:41:07,000 --> 01:41:09,000
比如说 Google 假如说 Crew 们的某个版本

3291
01:41:09,000 --> 01:41:10,000
带来不想就带来个额一包

3292
01:41:10,000 --> 01:41:13,000
你这把 Google 的证据一杀这个感觉这个会让往可能都也抓了

3293
01:41:13,000 --> 01:41:16,000
公正是解决就是说是那种

3294
01:41:16,000 --> 01:41:19,000
不是这个开发者主观故意而是因为输糊

3295
01:41:19,000 --> 01:41:21,000
或者是因为一些什么原因

3296
01:41:21,000 --> 01:41:24,000
别的原因导致说它某一个版本的 APP 有问题

3297
01:41:24,000 --> 01:41:27,000
但是整个开发者证据还是还是安全的

3298
01:41:27,000 --> 01:41:30,000
对 我觉得应该是这样

3299
01:41:30,000 --> 01:41:32,000
我理解就是说 NoTorrent 还还有一个作用

3300
01:41:32,000 --> 01:41:34,000
就是说因为我们知道

3301
01:41:34,000 --> 01:41:37,000
并不是所有的这个 Mac 上面的用程

3302
01:41:37,000 --> 01:41:39,000
都是通过这个 Mac App Store 反发

3303
01:41:39,000 --> 01:41:41,000
其实我们用的大部分的第三方的远键

3304
01:41:41,000 --> 01:41:45,000
都不是通过 Mac App Store 发布的

3305
01:41:45,000 --> 01:41:49,000
所以苹果是不知道你的 APP 到底有

3306
01:41:49,000 --> 01:41:52,000
它没有机会知道你下载的这个第三方 APP 到底

3307
01:41:52,000 --> 01:41:53,000
没有报含 Oe 存续

3308
01:41:53,000 --> 01:41:55,000
就是哪怕它知道它没发去对比

3309
01:41:55,000 --> 01:41:57,000
因为它不知道你电上装了什么东西

3310
01:41:57,000 --> 01:42:00,000
那么通过 Notorization 公正的机制

3311
01:42:00,000 --> 01:42:02,000
它其实是强迫开发者

3312
01:42:02,000 --> 01:42:04,000
必须上传一份到它来去流氮

3313
01:42:05,000 --> 01:42:07,000
然后它发现这个 2.1 版本之后

3314
01:42:07,000 --> 01:42:10,000
它可以直接跟从它的库里面去比对说

3315
01:42:10,000 --> 01:42:12,000
这个版本是否在我这里公正过

3316
01:42:12,000 --> 01:42:13,000
如果被公正过

3317
01:42:13,000 --> 01:42:15,000
它就有可能被分发到其他地方去

3318
01:42:15,000 --> 01:42:18,000
那我可以通过这个公正书后来那个时候

3319
01:42:18,000 --> 01:42:19,000
TK 的 对吧

3320
01:42:19,000 --> 01:42:22,000
来查到说它在哪些 Mac 上用过

3321
01:42:22,000 --> 01:42:26,000
我可以去估算这个安全问题的影响范围吗

3322
01:42:26,000 --> 01:42:29,000
没错 甚至我也可以直接去拿到这一份之后

3323
01:42:29,000 --> 01:42:31,000
我好去分析它的代码它到底是

3324
01:42:31,000 --> 01:42:33,000
刚才怎么样的一些火坏事儿

3325
01:42:33,000 --> 01:42:36,000
所以通过这个机制解决了 Mac App Store

3326
01:42:36,000 --> 01:42:39,000
就是用商店提供的一种安全特性

3327
01:42:39,000 --> 01:42:40,000
但是不需要强制

3328
01:42:40,000 --> 01:42:43,000
大家都必须通过这个用商店就发生讯嘛

3329
01:42:43,000 --> 01:42:44,000
对 没错

3330
01:42:44,000 --> 01:42:46,000
目前这两重机上

3331
01:42:46,000 --> 01:42:48,000
一个是在用或开发者账号的这个层面

3332
01:42:48,000 --> 01:42:50,000
一个是在每个单纳用的层面

3333
01:42:50,000 --> 01:42:53,000
说完从保湖机制这个多是属于这个叫什么

3334
01:42:53,000 --> 01:42:55,000
Gatekeeper 要管的事情嘛

3335
01:42:55,000 --> 01:42:56,000
就这个来看

3336
01:42:56,000 --> 01:43:00,000
目前 Mac 上面的整个安全性还是比较有保障的 对吧

3337
01:43:00,000 --> 01:43:02,000
因为这个事情我印象特别深刻

3338
01:43:02,000 --> 01:43:04,000
你知道就是在那个

3339
01:43:04,000 --> 01:43:06,000
你知道在中国你要用那个网赢

3340
01:43:06,000 --> 01:43:07,000
其实现在如果消费的都端

3341
01:43:07,000 --> 01:43:08,000
这边都是用手机银行

3342
01:43:08,000 --> 01:43:09,000
没有太大问题

3343
01:43:09,000 --> 01:43:11,000
都会通过这个 App Store 的一个

3344
01:43:11,000 --> 01:43:14,000
你只要不做月育不做什么这个事情

3345
01:43:14,000 --> 01:43:16,000
都还是能够保证你的感觉的

3346
01:43:16,000 --> 01:43:18,000
但是在那个企业银行

3347
01:43:18,000 --> 01:43:19,000
你还需要用那个

3348
01:43:19,000 --> 01:43:21,000
所谓 Windows 的那个程序

3349
01:43:21,000 --> 01:43:25,000
然后去下那个银行的那个客户端

3350
01:43:25,000 --> 01:43:26,000
然后非常搞笑的就是

3351
01:43:26,000 --> 01:43:28,000
那些客户端的安装程序

3352
01:43:28,000 --> 01:43:29,000
我看来一下

3353
01:43:29,000 --> 01:43:31,000
1989 说通过 HGDP 名文

3354
01:43:31,000 --> 01:43:32,000
去传输的

3355
01:43:32,000 --> 01:43:34,000
而且他撒回来那个东西

3356
01:43:34,000 --> 01:43:37,000
Windows 也有千名的机制的 对吧

3357
01:43:37,000 --> 01:43:39,000
但是你看它都是位置开发之的

3358
01:43:39,000 --> 01:43:41,000
就感觉这些安全数量

3359
01:43:41,000 --> 01:43:44,000
是有一个需要知道的提高的各种方面

3360
01:43:44,000 --> 01:43:47,000
安全数量是需要厂商来倒闭的

3361
01:43:47,000 --> 01:43:49,000
我觉得在倒闭开发者

3362
01:43:49,000 --> 01:43:51,000
做到比较安全的这一点

3363
01:43:51,000 --> 01:43:54,000
然后苹果实际上是业界先锋

3364
01:43:54,000 --> 01:43:56,000
没错 苹果特别能低开发者

3365
01:43:57,000 --> 01:43:59,000
不然就不可能说我明下一个 Windows 是死的

3366
01:43:59,000 --> 01:44:01,000
什么某一个版本更新

3367
01:44:01,000 --> 01:44:03,000
然后强势加了一个安全数量

3368
01:44:03,000 --> 01:44:05,000
那默认你如果是位置开发者

3369
01:44:05,000 --> 01:44:07,000
就没有通过签名的

3370
01:44:07,000 --> 01:44:08,000
我一个人就不给你运行

3371
01:44:08,000 --> 01:44:10,000
他根本就不敢加的那种选项对不对

3372
01:44:10,000 --> 01:44:11,000
地球就炸了

3373
01:44:11,000 --> 01:44:14,000
这种事业只有苹果现在能够推得动

3374
01:44:14,000 --> 01:44:16,000
其他人好像不敢

3375
01:44:16,000 --> 01:44:17,000
对 就是说这个安全性量

3376
01:44:17,000 --> 01:44:19,000
我觉得还是有比较好的保障的

3377
01:44:19,000 --> 01:44:21,000
那只是说在实现世界上

3378
01:44:21,000 --> 01:44:22,000
我觉得确实还有很多

3379
01:44:22,000 --> 01:44:24,000
刚刚我们讨论了很多

3380
01:44:24,000 --> 01:44:26,000
简单的就可以改进的空间

3381
01:44:26,000 --> 01:44:29,000
其实还是可以更好的避免

3382
01:44:29,000 --> 01:44:32,000
出现今天讨论的各种问题

3383
01:44:32,000 --> 01:44:34,000
对 但其实这个讨论的话

3384
01:44:34,000 --> 01:44:35,000
会有两个方面

3385
01:44:35,000 --> 01:44:36,000
一个方面的话

3386
01:44:36,000 --> 01:44:37,000
就刚刚我们说的引试问题

3387
01:44:37,000 --> 01:44:38,000
另外一个方面

3388
01:44:38,000 --> 01:44:40,000
大家会有一种感觉就是

3389
01:44:40,000 --> 01:44:42,000
就是上一篇文章的标题

3390
01:44:42,000 --> 01:44:44,000
以我扛 pute 以正的一种而死

3391
01:44:44,000 --> 01:44:46,000
你的电脑不是你的

3392
01:44:46,000 --> 01:44:47,000
那我就是我似乎是

3393
01:44:47,000 --> 01:44:49,000
我作为用户上施了

3394
01:44:49,000 --> 01:44:51,000
我对我的设备完全的空子全都没见事情

3395
01:44:51,000 --> 01:44:53,000
技术精英这个圈子的面说

3396
01:44:53,000 --> 01:44:55,000
或者说我们就说你懂安全

3397
01:44:55,000 --> 01:44:56,000
在东西你知道怎么回事

3398
01:44:56,000 --> 01:44:57,000
你会很觉得

3399
01:44:57,000 --> 01:44:59,000
我不应该把这些信息

3400
01:44:59,000 --> 01:45:00,000
都险入给苹果

3401
01:45:00,000 --> 01:45:01,000
但是其实从

3402
01:45:01,000 --> 01:45:02,000
我觉得好

3403
01:45:02,000 --> 01:45:03,000
其实从普通人的角度来讲

3404
01:45:03,000 --> 01:45:05,000
普通人是没有这个能力去分辨的一些企业的

3405
01:45:05,000 --> 01:45:08,000
必须要有一个了解这个事情的场上

3406
01:45:08,000 --> 01:45:09,000
他性能过的这个场上

3407
01:45:09,000 --> 01:45:10,000
去完成这个事情

3408
01:45:10,000 --> 01:45:11,000
这个如果这个世界上

3409
01:45:11,000 --> 01:45:13,000
还有什么大企业可以让你相信的话

3410
01:45:13,000 --> 01:45:15,000
可能苹果上面辞出属于

3411
01:45:15,000 --> 01:45:18,000
那个趋纸可属的几个之一吧

3412
01:45:18,000 --> 01:45:19,000
应该是

3413
01:45:19,000 --> 01:45:21,000
这有话是非常深刻的一个国粉

3414
01:45:21,000 --> 01:45:24,000
只有最古字的国粉才会说出的

3415
01:45:24,000 --> 01:45:27,000
其实就是从普通人心里也可能

3416
01:45:27,000 --> 01:45:28,000
还是能理解的嘛

3417
01:45:28,000 --> 01:45:29,000
就是我买了他电脑

3418
01:45:29,000 --> 01:45:30,000
这是我的电脑

3419
01:45:30,000 --> 01:45:31,000
我想运行什么程序

3420
01:45:31,000 --> 01:45:33,000
你苹果评什么有全线插手

3421
01:45:33,000 --> 01:45:34,000
说你不让我运行他

3422
01:45:34,000 --> 01:45:36,000
只是可以理解这种心里

3423
01:45:36,000 --> 01:45:38,000
当然我不认同这样的说法

3424
01:45:38,000 --> 01:45:41,000
但是我从一个某个大人的角度来说

3425
01:45:41,000 --> 01:45:42,000
我要反驳的话

3426
01:45:42,000 --> 01:45:44,000
我说你只要你开的车也是一样的

3427
01:45:44,000 --> 01:45:46,000
虽然你的车不能

3428
01:45:46,000 --> 01:45:47,000
左右你

3429
01:45:47,000 --> 01:45:48,000
能去哪儿

3430
01:45:48,000 --> 01:45:49,000
不能去哪儿

3431
01:45:49,000 --> 01:45:52,000
但实际上你的车买回来的时候

3432
01:45:52,000 --> 01:45:53,000
你自己也是修不了的

3433
01:45:53,000 --> 01:45:57,000
就比如说你可能能换一些内事

3434
01:45:57,000 --> 01:45:58,000
但是在这儿

3435
01:45:58,000 --> 01:45:59,000
就是现在包括很多

3436
01:45:59,000 --> 01:46:02,000
SS 电都是修不了你的车的

3437
01:46:02,000 --> 01:46:04,000
改车是为法的

3438
01:46:04,000 --> 01:46:05,000
这不是不能上路的

3439
01:46:05,000 --> 01:46:06,000
对是的

3440
01:46:06,000 --> 01:46:09,000
这个的法规的到代程度

3441
01:46:09,000 --> 01:46:11,000
其实很多 SS 电也实际上

3442
01:46:11,000 --> 01:46:12,000
也是修不了你的车的

3443
01:46:12,000 --> 01:46:15,000
比如说现在奥迪或者是绑码之来的车

3444
01:46:15,000 --> 01:46:17,000
你到 SS 电你说我的车有什么问题

3445
01:46:17,000 --> 01:46:18,000
他说你测一下

3446
01:46:18,000 --> 01:46:21,000
他能做就是把你换了那个零件

3447
01:46:21,000 --> 01:46:23,000
机会去然后换一个新的过来

3448
01:46:23,000 --> 01:46:28,000
他已经失去了能够帮你维修车辆了这样一个作用了

3449
01:46:28,000 --> 01:46:32,000
我觉得这本质上是一个权力和责任的

3450
01:46:32,000 --> 01:46:33,000
一个分贪的问题

3451
01:46:33,000 --> 01:46:34,000
就是说没错

3452
01:46:34,000 --> 01:46:35,000
如果从绝对的说

3453
01:46:35,000 --> 01:46:36,000
我要有自主权的情况下

3454
01:46:36,000 --> 01:46:38,000
美国不质地也得讲什么叫做

3455
01:46:38,000 --> 01:46:40,000
Rite to repair 嘛

3456
01:46:40,000 --> 01:46:43,000
就好像是那些美国农民都比较强势嘛

3457
01:46:43,000 --> 01:46:44,000
他要买什么高级的那些托拉机

3458
01:46:44,000 --> 01:46:45,000
他换了他要修对吧

3459
01:46:45,000 --> 01:46:47,000
他说他要托拉机

3460
01:46:47,000 --> 01:46:50,000
要送去这个江第 2 原厂再修再给他发过来

3461
01:46:50,000 --> 01:46:52,000
那这个做我觉得烂在地底了

3462
01:46:52,000 --> 01:46:54,000
这个明显是不可以接受的嘛对吧

3463
01:46:54,000 --> 01:46:56,000
这我觉得完全是可以理解的

3464
01:46:56,000 --> 01:46:58,000
但是其实像那种对于普通来说

3465
01:46:58,000 --> 01:47:01,000
你说你一个电脑或者是一个手机对吧

3466
01:47:01,000 --> 01:47:03,000
你就如果突然不能用的话

3467
01:47:03,000 --> 01:47:06,000
对你来说好像也没有那么大的一个设论师

3468
01:47:06,000 --> 01:47:07,000
但是更主要的就是说

3469
01:47:07,000 --> 01:47:10,000
如果厂商说允许开放很多接口

3470
01:47:10,000 --> 01:47:13,000
让你去做一些底层的修改或者马上苹果再次

3471
01:47:13,000 --> 01:47:15,000
他说给大家一个选项可以让你

3472
01:47:15,000 --> 01:47:17,000
奥特特可以放弃这些安全保护

3473
01:47:17,000 --> 01:47:20,000
但最终你被黑了你的这个资产被到了

3474
01:47:20,000 --> 01:47:23,000
或者说假設你前面有 1000 个比较币

3475
01:47:23,000 --> 01:47:24,000
随便确定的

3476
01:47:24,000 --> 01:47:26,000
然后你就把这个央行让关掉

3477
01:47:26,000 --> 01:47:27,000
然后你说你比较别头的你怪谁呢

3478
01:47:27,000 --> 01:47:29,000
你还是说会去怪苹果对不对

3479
01:47:29,000 --> 01:47:31,000
你说你这个安全做的怎么这么早

3480
01:47:31,000 --> 01:47:33,000
那这个时候就你就明显就是说

3481
01:47:33,000 --> 01:47:35,000
你的权力和责任是没有对等的嘛

3482
01:47:35,000 --> 01:47:38,000
对于绝大多数的那种不是那么懂技术的

3483
01:47:38,000 --> 01:47:41,000
也不知道那些安全措施应该如何去日常见行的

3484
01:47:41,000 --> 01:47:43,000
打他说对于我们这种懂行的人

3485
01:47:43,000 --> 01:47:44,000
你每天要去想各种的样子

3486
01:47:44,000 --> 01:47:47,000
当然全措施各种各样的细身各种各样的变成心

3487
01:47:47,000 --> 01:47:48,000
你也很心累嘛

3488
01:47:48,000 --> 01:47:50,000
对不对我觉得这从事想要选择讲你

3489
01:47:50,000 --> 01:47:54,000
还是我愿意放弃一些所谓的我自己的一些权力

3490
01:47:54,000 --> 01:47:56,000
去换取说有人去帮我 take care

3491
01:47:56,000 --> 01:47:58,000
不是就能把这个事情给我搞定

3492
01:47:58,000 --> 01:48:02,000
我甚至愿意为此付出更高的这个价格

3493
01:48:02,000 --> 01:48:04,000
这个就是这个依价的地方在这里

3494
01:48:04,000 --> 01:48:06,000
那为什么我现在不想先用安卓

3495
01:48:06,000 --> 01:48:07,000
不想用 Windows

3496
01:48:07,000 --> 01:48:08,000
你说安卓不好用吗

3497
01:48:08,000 --> 01:48:10,000
其实也不是现在安卓做了挺好的

3498
01:48:10,000 --> 01:48:11,000
对不对

3499
01:48:11,000 --> 01:48:12,000
Windows 也跑得很流暢

3500
01:48:12,000 --> 01:48:13,000
都没有问题

3501
01:48:13,000 --> 01:48:14,000
但我还是不想用啊

3502
01:48:14,000 --> 01:48:17,000
就是因为我觉得没有人去帮我盯这盯的这一块嘛

3503
01:48:17,000 --> 01:48:20,000
对所以我觉得还是要一些成年人的想法

3504
01:48:20,000 --> 01:48:22,000
就是你的权力和责任的使用是对等的

3505
01:48:22,000 --> 01:48:23,000
对是的

3506
01:48:23,000 --> 01:48:25,000
而且我觉得还有个底线就是

3507
01:48:25,000 --> 01:48:27,000
如果你真的觉得你要是你的

3508
01:48:27,000 --> 01:48:29,000
其实你现在也是有办法的

3509
01:48:29,000 --> 01:48:31,000
虽然麻烦一点精恢复模式

3510
01:48:31,000 --> 01:48:33,000
把 SIP 官了把这个东西改了

3511
01:48:33,000 --> 01:48:35,000
也能够绕过这个限制

3512
01:48:35,000 --> 01:48:36,000
裸奔去的

3513
01:48:36,000 --> 01:48:37,000
对你也是能够

3514
01:48:37,000 --> 01:48:39,000
甚至不行你把 Mac OS 3 上是吧

3515
01:48:39,000 --> 01:48:40,000
你装了 Windows

3516
01:48:40,000 --> 01:48:42,000
那也是你的 Mac 普卡版也能用

3517
01:48:42,000 --> 01:48:45,000
就不要买 Mac 把装个林段是买个 PC

3518
01:48:45,000 --> 01:48:47,000
多好又便宜又好用

3519
01:48:47,000 --> 01:48:48,000
对对对

3520
01:48:48,000 --> 01:48:50,000
对那天文章那个论点就是你在

3521
01:48:50,000 --> 01:48:52,000
Mac 出来之前你是可以选择

3522
01:48:52,000 --> 01:48:54,000
比如说我装个 Linux 我装 5 半土

3523
01:48:54,000 --> 01:48:55,000
都是可以的对吧

3524
01:48:55,000 --> 01:48:57,000
这个硬件上面我装什么操作性

3525
01:48:57,000 --> 01:48:58,000
我说 OK 了

3526
01:48:58,000 --> 01:48:59,000
但是从 Ami 麦克之后

3527
01:48:59,000 --> 01:49:01,000
你除了装 Mac OS 之外没有办法装给了

3528
01:49:01,000 --> 01:49:03,000
但你可以不用麦克

3529
01:49:03,000 --> 01:49:05,000
没有人逼着你麦克嘛对不对

3530
01:49:05,000 --> 01:49:06,000
所以这个也很扯

3531
01:49:06,000 --> 01:49:07,000
对

3532
01:49:07,000 --> 01:49:09,000
而且现在好像据说

3533
01:49:09,000 --> 01:49:11,000
苹果也在考虑增在和

3534
01:49:11,000 --> 01:49:12,000
搞开放出来 Ami 的社会

3535
01:49:12,000 --> 01:49:14,000
也能装起来操作系统

3536
01:49:14,000 --> 01:49:16,000
但是这可能就是一个比较大的工厂

3537
01:49:16,000 --> 01:49:17,000
问题是谁谁会去试配

3538
01:49:17,000 --> 01:49:18,000
然后会软吗

3539
01:49:18,000 --> 01:49:21,000
我突然做一个把 Windows 2 移植过来

3540
01:49:21,000 --> 01:49:24,000
我觉得 Linux 一定会出一个 Ami

3541
01:49:24,000 --> 01:49:26,000
或者说 Apple Silicon 版本

3542
01:49:26,000 --> 01:49:27,000
我觉得无缘也不是没有可能

3543
01:49:27,000 --> 01:49:31,000
现在无缘不是苹果的这家合作伙判开发者吗

3544
01:49:31,000 --> 01:49:34,000
无缘它现在是它的按摩

3545
01:49:34,000 --> 01:49:35,000
一生态是依赖高通嘛

3546
01:49:35,000 --> 01:49:36,000
高通不是出了

3547
01:49:36,000 --> 01:49:38,000
它最近是发了一个什么来的

3548
01:49:38,000 --> 01:49:39,000
X 吧还是 ProX

3549
01:49:39,000 --> 01:49:42,000
就是 Surface Book 还是 Surface

3550
01:49:42,000 --> 01:49:43,000
就是 Surface

3551
01:49:43,000 --> 01:49:44,000
就是一个那个

3552
01:49:44,000 --> 01:49:46,000
它六个两个人这里的那个

3553
01:49:46,000 --> 01:49:48,000
两用的那个变线电脑

3554
01:49:48,000 --> 01:49:51,000
它就好像又用了是高通的那个处理器吧

3555
01:49:51,000 --> 01:49:52,000
但是你看现在苹果

3556
01:49:52,000 --> 01:49:55,000
如果能够把其他厂商打成这样的话

3557
01:49:55,000 --> 01:49:57,000
那微软之后会不会也觉得就

3558
01:49:57,000 --> 01:49:58,000
那干脆硬件上

3559
01:49:58,000 --> 01:50:01,000
我就已经了你也把我也也来扎主

3560
01:50:01,000 --> 01:50:02,000
苹果的这个要不生态

3561
01:50:02,000 --> 01:50:03,000
对反正我又不败意

3562
01:50:03,000 --> 01:50:04,000
我又不靠卖硬件赚钱对吧

3563
01:50:04,000 --> 01:50:05,000
我就办妙远见

3564
01:50:05,000 --> 01:50:10,000
然后我那个在这个 M 1 的麦克班旗那合乐不为呢

3565
01:50:10,000 --> 01:50:12,000
对啊是啊也是有可能的

3566
01:50:12,000 --> 01:50:14,000
这个事情是太可惜了

3567
01:50:14,000 --> 01:50:17,000
你 10 年前啊你都不敢想象说

3568
01:50:17,000 --> 01:50:21,000
这个我还要去给苹果试配一下系统

3569
01:50:21,000 --> 01:50:23,000
对怎么警告呢

3570
01:50:23,000 --> 01:50:27,000
说到 10 年前这个 10 年前那个 Windowsky 这次又出来了

3571
01:50:27,000 --> 01:50:29,000
在苹果发布会上

3572
01:50:29,000 --> 01:50:30,000
对对对

3573
01:50:30,000 --> 01:50:34,000
是那个 PC versus Mac 那广告里面那个 PC 吗

3574
01:50:34,000 --> 01:50:36,000
对稍微有点发胖

3575
01:50:36,000 --> 01:50:38,000
但是还是风采不见到你

3576
01:50:38,000 --> 01:50:39,000
我有读过一个报道

3577
01:50:39,000 --> 01:50:41,000
就说这个广告里面两个人

3578
01:50:41,000 --> 01:50:43,000
就是这个这个 Windowsky

3579
01:50:43,000 --> 01:50:46,000
实际上是一个 Mac 的铁粉

3580
01:50:46,000 --> 01:50:50,000
而那个 Mac 改实际上对电脑一跳不动

3581
01:50:50,000 --> 01:50:52,000
可能是个 Windows 用户对吧

3582
01:50:52,000 --> 01:50:54,000
对对对

3583
01:50:54,000 --> 01:50:56,000
这个还是真的国粉啊

3584
01:50:56,000 --> 01:50:57,000
为了愿意去

3585
01:50:57,000 --> 01:51:00,000
之后是这个你也打后牺牲自己

3586
01:51:00,000 --> 01:51:02,000
来出演这个话呀

3587
01:51:02,000 --> 01:51:03,000
牺牲自己的牺牲

3588
01:51:03,000 --> 01:51:05,000
然后还缓取苹果的高大

3589
01:51:05,000 --> 01:51:07,000
那也缓取了一些美元

3590
01:51:07,000 --> 01:51:09,000
主要是美元比较像

3591
01:51:09,000 --> 01:51:10,000
那可明白

3592
01:51:10,000 --> 01:51:12,000
OK

3593
01:51:12,000 --> 01:51:15,000
那好啊那今天我们就这个

3594
01:51:15,000 --> 01:51:18,000
平果的 M 1 芯片和这个

3595
01:51:18,000 --> 01:51:19,000
CSP 的问题展开了

3596
01:51:19,000 --> 01:51:21,000
这个伸数有好的讨论

3597
01:51:21,000 --> 01:51:25,000
那也非常感谢亚晨来我们这个节目做客

3598
01:51:25,000 --> 01:51:27,000
啊感谢两位的邀请

3599
01:51:27,000 --> 01:51:28,000
我们这还有机会的话

3600
01:51:28,000 --> 01:51:30,000
亚晨也可以尝来我们节目在聊聊

3601
01:51:30,000 --> 01:51:31,000
其他的一些事情

3602
01:51:31,000 --> 01:51:32,000
我们可以别说聊聊

3603
01:51:32,000 --> 01:51:33,000
准备开发者呀

3604
01:51:33,000 --> 01:51:35,000
来聊 Sirge 啊之类的事情

3605
01:51:35,000 --> 01:51:36,000
希望好的

3606
01:51:36,000 --> 01:51:38,000
还是感觉有很多弹可以撤的

3607
01:51:38,000 --> 01:51:39,000
对对对

3608
01:51:39,000 --> 01:51:40,000
那好

3609
01:51:40,000 --> 01:51:42,000
我们今天的节目就现在这里了

3610
01:51:42,000 --> 01:51:43,000
来

3611
01:51:43,000 --> 01:51:45,000
您刚刚收听到的节目是内和恐慌

3612
01:51:45,000 --> 01:51:48,000
一档尽量贴进集算机科技主题的

3613
01:51:48,000 --> 01:51:49,000
娱乐 Podcast

3614
01:51:49,000 --> 01:51:50,000
我们号称硬和

3615
01:51:50,000 --> 01:51:51,000
但是也没有什么干货

3616
01:51:51,000 --> 01:51:52,000
想要听

3617
01:51:52,000 --> 01:51:53,000
非常听说别听

3618
01:51:53,000 --> 01:51:54,000
我们又往止是

3619
01:51:54,000 --> 01:51:55,000
PAN 到 Sirge

3620
01:51:55,000 --> 01:51:57,000
您可以在

3621
01:51:57,000 --> 01:51:59,000
绑架上找到定位我们的节目的方法

3622
01:51:59,000 --> 01:52:00,000
以及连握我们节目的方式

3623
01:52:00,000 --> 01:52:03,000
如果您期待我们更平凡的更新

3624
01:52:03,000 --> 01:52:05,000
欢迎您到 iFile.我们捐款

3625
01:52:05,000 --> 01:52:06,000
这款地址可以在

3626
01:52:06,000 --> 01:52:08,000
iFile 可以在我们的绑架上找到

3627
01:52:08,000 --> 01:52:10,000
新发电后组一个文明

3628
01:52:10,000 --> 01:52:11,000
虽刚从你做起

3629
01:52:11,000 --> 01:52:12,000
如果您觉得意味进

3630
01:52:12,000 --> 01:52:14,000
也欢迎您是收听

3631
01:52:14,000 --> 01:52:16,000
Rail 和黄哈姐主持节目

3632
01:52:16,000 --> 01:52:17,000
奉头圈

3633
01:52:17,000 --> 01:52:19,000
Rail 和人宁主持节目提前怀教

3634
01:52:19,000 --> 01:52:21,000
以及基本不有误讨主持的自残自唱

3635
01:52:21,000 --> 01:52:22,000
拜拜

3636
01:52:22,000 --> 01:52:23,000
拜拜

3637
01:52:23,000 --> 01:52:24,000
拜拜

