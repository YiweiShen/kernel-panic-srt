1
00:00:00,000 --> 00:00:05,000
大家好 欢迎收听第六期的内合恐慌 我是Rail

2
00:00:05,000 --> 00:00:11,000
我是舞蹈在今天节目开始前 我们先去做一下上期的反馈吧

3
00:00:11,000 --> 00:00:15,000
好呀 舞蹈你有念错词?

4
00:00:15,000 --> 00:00:27,000
对 按理委 反正上次我念了一个以十听众在这里向大家聚工 各位听众对不起 我不应该吃你们

5
00:00:28,000 --> 00:00:34,000
那个字念是想 左边一个香 村的香 右边一个湿味时

6
00:00:34,000 --> 00:00:40,000
这个字念以下 听众就是一把什么东西供奉给听众吃 而不是

7
00:00:40,000 --> 00:00:42,000
吃掉听众 是吧

8
00:00:42,000 --> 00:00:44,000
你是唐朗吗

9
00:00:44,000 --> 00:00:49,000
唐朗只有在交配的时候 立委

10
00:00:49,000 --> 00:00:56,000
其实这个事情我觉得也可以理解吧 你说这个字如果你知道我来念 我估计也会看

11
00:00:56,000 --> 00:01:01,000
你想 左边那么小 右边那么大 应该念右边吧

12
00:01:01,000 --> 00:01:06,000
对呀 而且就算念字念半边吧

13
00:01:06,000 --> 00:01:13,000
所以对 其实中文有就是有点不好 经常有这种所谓的什么

14
00:01:13,000 --> 00:01:17,000
规律嘛 说如果你不认识这个字 你可以看他的用吧 偏旁不守啊

15
00:01:17,000 --> 00:01:23,000
说一般是什么 一般行旁 一个身旁 对吧 现八

16
00:01:23,000 --> 00:01:31,000
对 给你一个 中文还是在 我们现在身所在一个中文从向行文字向评言文字的过度过程中

17
00:01:31,000 --> 00:01:37,000
但是这个过度可能永远不会实现了 因为毕竟现在汉字已经是一种文化规保

18
00:01:37,000 --> 00:01:42,000
他们是还是不可能永远不可能实现假名化了

19
00:01:42,000 --> 00:01:46,000
所以你最喜欢我猫的支持这件事情的 是吧

20
00:01:47,000 --> 00:01:55,000
也没有吧 但是拉丁化方案 拉丁化 汉字拉丁化那么激进的方案

21
00:01:55,000 --> 00:02:02,000
都 也不是都没有时间 就让人觉得非常受不了了

22
00:02:02,000 --> 00:02:05,000
我今天我觉得 拉丁化在逻辑上已经实现了

23
00:02:05,000 --> 00:02:08,000
就在事实上已经成立了

24
00:02:08,000 --> 00:02:14,000
你说用新书房 对呀 就是经常会有那种

25
00:02:14,000 --> 00:02:20,000
现在网络上一些用法不方便直接讲的时候都会在后面诸一下这个拼音

26
00:02:20,000 --> 00:02:23,000
然后大家读一下都知道这个是什么意思 对吧

27
00:02:23,000 --> 00:02:31,000
对 而且反正是一个来月没有人写字了 这是跟那个 都在打的

28
00:02:31,000 --> 00:02:41,000
但是我还记在07年 反正iPhone出现了之前我还坚持用过逻辑家上面的比化书房

29
00:02:41,000 --> 00:02:44,000
至少这样可以让我 是那个九公格那个吗

30
00:02:44,000 --> 00:02:47,000
对 九公格那个比化书房

31
00:02:47,000 --> 00:02:50,000
其实我一直觉得那个还蛮好的 叫什么T9了是不是

32
00:02:52,000 --> 00:02:55,000
好像是叫T9 是拼音吧 不是吗

33
00:02:55,000 --> 00:02:56,000
是吗 T9是拼音吗

34
00:02:56,000 --> 00:02:58,000
OK 我怎么接着

35
00:02:58,000 --> 00:03:01,000
我不接了 不确定 但我记得那个书发只要有五个价而已吧

36
00:03:01,000 --> 00:03:05,000
就很书皮辣 很书皮辣 点

37
00:03:05,000 --> 00:03:09,000
就是 皮就用上到左下

38
00:03:09,000 --> 00:03:13,000
好像然后数 我觉得那个书房真的挺好的

39
00:03:13,000 --> 00:03:16,000
对 他解决了我很多的倒差比问题 比如说我像

40
00:03:16,000 --> 00:03:18,000
全部是倒差比

41
00:03:18,000 --> 00:03:25,000
就是一个汉字的比顺和官方规定的不一样

42
00:03:25,000 --> 00:03:28,000
这样我就打不出来 比如说女人的女子吧 好像

43
00:03:28,000 --> 00:03:31,000
对对对 然后我十四有九次打不出来

44
00:03:31,000 --> 00:03:36,000
所以那个比化书房应该是脾轴在脾轴 最后一个很辣

45
00:03:36,000 --> 00:03:39,000
我现在又不记得 可能是先写好了 对

46
00:03:39,000 --> 00:03:43,000
反正 对 然后还有那个所有带走之旁的字

47
00:03:43,000 --> 00:03:45,000
我全都先走之对了 对

48
00:03:45,000 --> 00:03:49,000
我在这个合理啊 你先把那个周围的那个框画出来

49
00:03:49,000 --> 00:03:51,000
再等你先描那个小动

50
00:03:52,000 --> 00:03:56,000
我也是什么觉得 但是据说

51
00:03:56,000 --> 00:03:59,000
如果先写走之的话整个字很难看 就是

52
00:03:59,000 --> 00:04:01,000
因为那个走之它只是一个配角

53
00:04:01,000 --> 00:04:06,000
然后你先写它就很容易让这下写了一东西

54
00:04:06,000 --> 00:04:08,000
很难放在中学的位置

55
00:04:08,000 --> 00:04:12,000
但是你知道有些小学生写做文的周围的写字的时候

56
00:04:12,000 --> 00:04:15,000
它不是写了一个小小的那个有框的那种盘

57
00:04:15,000 --> 00:04:16,000
这上面嘛

58
00:04:16,000 --> 00:04:20,000
然后如果你写写了中间 那就旁边那个大妥的

59
00:04:20,000 --> 00:04:22,000
然后空间不够怎么办

60
00:04:22,000 --> 00:04:26,000
所以从小就要练这个架构

61
00:04:26,000 --> 00:04:29,000
不过这个就是比化书房真的挺好的

62
00:04:29,000 --> 00:04:31,000
就是我一个例子啊

63
00:04:31,000 --> 00:04:36,000
就我给我爸妈那个时候教他们用电脑数字

64
00:04:36,000 --> 00:04:39,000
然后无比和平都长书过

65
00:04:39,000 --> 00:04:41,000
对了他们那带人的时候都太难了嘛

66
00:04:41,000 --> 00:04:43,000
但是他们在手就那个不是现在的手教

67
00:04:43,000 --> 00:04:46,000
那个时候的手机上就是还是键盘的时候

68
00:04:46,000 --> 00:04:49,000
用这个就是横竖屁拉这么一笔的写

69
00:04:49,000 --> 00:04:53,000
其实对他们来讲就跟那个教写字一样

70
00:04:53,000 --> 00:04:55,000
就说你记着你现在打横竖屁拉

71
00:04:55,000 --> 00:04:57,000
你就怎么写那个字你就照着那个按照

72
00:04:57,000 --> 00:04:59,000
就只用机内五个电就可以了嘛

73
00:04:59,000 --> 00:05:03,000
然后加上这个这个比顺就错了这种功能的话

74
00:05:03,000 --> 00:05:07,000
就大部分场合还是能把那个中文字写出来的

75
00:05:07,000 --> 00:05:08,000
嗯

76
00:05:08,000 --> 00:05:10,000
OK下一条就是外语

77
00:05:10,000 --> 00:05:14,000
啊对上次对说到德语

78
00:05:14,000 --> 00:05:17,000
就是上次我念错了一个德语单词

79
00:05:17,000 --> 00:05:21,000
就是当我提到FeShift就是那个

80
00:05:21,000 --> 00:05:24,000
在德国的车牌上面

81
00:05:24,000 --> 00:05:27,000
我使用了那种自体的时候

82
00:05:27,000 --> 00:05:28,000
车牌自体

83
00:05:28,000 --> 00:05:32,000
对它的正确的名字叫做FaceShift

84
00:05:32,000 --> 00:05:38,000
然后我上次念上了FaceShift

85
00:05:38,000 --> 00:05:40,000
是FaceShift

86
00:05:40,000 --> 00:05:42,000
对叫我很好就是谁听出来你念错了

87
00:05:42,000 --> 00:05:44,000
当然是我女朋友

88
00:05:44,000 --> 00:05:47,000
原来还有一个铁杆粉丝

89
00:05:47,000 --> 00:05:48,000
那可不

90
00:05:48,000 --> 00:05:51,000
她已经开始给贵绝母捐钱了

91
00:05:51,000 --> 00:05:53,000
你是说爱机功能吗

92
00:05:53,000 --> 00:05:54,000
对啊

93
00:05:54,000 --> 00:05:55,000
OK

94
00:05:55,000 --> 00:05:57,000
不是给闭节目捐钱的

95
00:05:57,000 --> 00:06:00,000
不过我不过闭节目也有很多听这么要求

96
00:06:00,000 --> 00:06:01,000
说来信

97
00:06:01,000 --> 00:06:05,000
纷纷来信说要给我们捐钱拿钱扎于我吗

98
00:06:05,000 --> 00:06:07,000
真的扎了我才不相信

99
00:06:07,000 --> 00:06:09,000
真的真的真的不开玩笑

100
00:06:09,000 --> 00:06:15,000
那我们应该怎样让我们的这个捐款业面显得

101
00:06:15,000 --> 00:06:17,000
更加给亏点的

102
00:06:17,000 --> 00:06:19,000
你看我的这个捐款业面都做好了

103
00:06:19,000 --> 00:06:21,000
我给你大笔一回同意

104
00:06:23,000 --> 00:06:25,000
好吧我去个麦克风

105
00:06:25,000 --> 00:06:26,000
也许可以

106
00:06:26,000 --> 00:06:28,000
各位给我操点精肺

107
00:06:28,000 --> 00:06:30,000
搞一个好点麦克风张

108
00:06:30,000 --> 00:06:31,000
大家可以听到我

109
00:06:31,000 --> 00:06:33,000
更加清透的嗓音

110
00:06:33,000 --> 00:06:34,000
对

111
00:06:34,000 --> 00:06:35,000
更加丰富

112
00:06:35,000 --> 00:06:37,000
更加有层次感的声音

113
00:06:37,000 --> 00:06:39,000
有层次感的声音

114
00:06:39,000 --> 00:06:40,000
不过其实

115
00:06:40,000 --> 00:06:42,000
现在有很多人听不出来

116
00:06:42,000 --> 00:06:45,000
你是用的那个麦克的内置麦克风在路

117
00:06:45,000 --> 00:06:48,000
因为内置麦克风去说笑我非常好

118
00:06:48,000 --> 00:06:51,000
对但是你这个一个

119
00:06:51,000 --> 00:06:54,000
抓用的麦克风还是有比较明显的差别

120
00:06:54,000 --> 00:06:57,000
对我在那个Instagram上看到了你用麦克风

121
00:06:57,000 --> 00:06:59,000
感觉好像我们蠻专业的

122
00:06:59,000 --> 00:07:01,000
我那个也是一个入门籍的而已

123
00:07:01,000 --> 00:07:03,000
好

124
00:07:03,000 --> 00:07:04,000
我们可以给你买

125
00:07:04,000 --> 00:07:07,000
给你给如果我们这个节目也开始收钱

126
00:07:07,000 --> 00:07:09,000
打引号

127
00:07:09,000 --> 00:07:11,000
我们拿到的钱第一件事就是

128
00:07:11,000 --> 00:07:12,000
先给你买一套

129
00:07:12,000 --> 00:07:14,000
好的路音好的这个设备

130
00:07:14,000 --> 00:07:16,000
不过

131
00:07:16,000 --> 00:07:19,000
我们现在我们就看

132
00:07:19,000 --> 00:07:21,000
到底会多了个我们钱好不好

133
00:07:21,000 --> 00:07:24,000
对

134
00:07:24,000 --> 00:07:27,000
然后这不是我唯一念做的这一次

135
00:07:27,000 --> 00:07:30,000
我还念做另外一个叫做

136
00:07:30,000 --> 00:07:34,000
Doucher Institute Phenomen

137
00:07:34,000 --> 00:07:36,000
我把它念成了Doucher Institute Phenomen

138
00:07:36,000 --> 00:07:40,000
就是我把Institute这个词信搞错了

139
00:07:40,000 --> 00:07:43,000
你要先解释一下什么东西

140
00:07:43,000 --> 00:07:45,000
先解释一下什么词信

141
00:07:45,000 --> 00:07:47,000
因为这个不是一边应用的没有这个概念

142
00:07:47,000 --> 00:07:49,000
所以很多人不知道这什么东西

143
00:07:49,000 --> 00:07:54,000
好吧反正得语做一种非常繁索的语言

144
00:07:54,000 --> 00:07:58,000
听起来像某种机器人掉到下软道里

145
00:07:58,000 --> 00:08:01,000
发出的声音的语言

146
00:08:01,000 --> 00:08:03,000
它有非常多奇怪的地方

147
00:08:03,000 --> 00:08:05,000
比如说其中的一就是

148
00:08:05,000 --> 00:08:07,000
所有的名词要分成三类

149
00:08:07,000 --> 00:08:09,000
音性中性和阳性

150
00:08:09,000 --> 00:08:10,000
如果你学过法御的话

151
00:08:10,000 --> 00:08:11,000
你知道音性和阳性

152
00:08:11,000 --> 00:08:13,000
但是就像拉丁雲一样

153
00:08:13,000 --> 00:08:15,000
得与还有中性这个东西

154
00:08:15,000 --> 00:08:18,000
阳性叫做阳性的第一个

155
00:08:18,000 --> 00:08:25,000
就是阳性的名词的单数的主和

156
00:08:25,000 --> 00:08:29,000
就有一个罐词叫做Dab

157
00:08:29,000 --> 00:08:31,000
然后它香药鱼的D

158
00:08:31,000 --> 00:08:36,000
然后音性的名词的罐词是D

159
00:08:36,000 --> 00:08:38,000
然后它也香药鱼的D

160
00:08:38,000 --> 00:08:40,000
就是音语只有一个的

161
00:08:40,000 --> 00:08:42,000
然后得有Dedidas

162
00:08:42,000 --> 00:08:44,000
Dedidas

163
00:08:44,000 --> 00:08:47,000
这个可能听众朋友们在国内见的最多

164
00:08:47,000 --> 00:08:49,000
就是那个大众的广告

165
00:08:49,000 --> 00:08:51,000
Dass Auto

166
00:08:51,000 --> 00:08:53,000
Dass Auto

167
00:08:53,000 --> 00:08:54,000
对

168
00:08:54,000 --> 00:08:55,000
然后就是

169
00:08:55,000 --> 00:08:57,000
就发现这说明

170
00:08:57,000 --> 00:08:59,000
The Car的意思

171
00:08:59,000 --> 00:09:01,000
The Car

172
00:09:01,000 --> 00:09:02,000
但是 also

173
00:09:02,000 --> 00:09:04,000
这个东西是

174
00:09:04,000 --> 00:09:06,000
这个东西是

175
00:09:06,000 --> 00:09:07,000
Auto

176
00:09:07,000 --> 00:09:09,000
这个东西是

177
00:09:09,000 --> 00:09:12,000
AutoMobile的缩泄

178
00:09:12,000 --> 00:09:14,000
所以它是中性的

179
00:09:14,000 --> 00:09:16,000
上号上位

180
00:09:16,000 --> 00:09:18,000
所以是Dass Auto

181
00:09:18,000 --> 00:09:19,000
Dass Auto

182
00:09:19,000 --> 00:09:20,000
Dass Photo

183
00:09:20,000 --> 00:09:21,000
Auto Photo

184
00:09:21,000 --> 00:09:22,000
Foto Photo

185
00:09:22,000 --> 00:09:23,000
Foto

186
00:09:23,000 --> 00:09:25,000
Auto都是中性的

187
00:09:25,000 --> 00:09:27,000
但是也有很多不合理的地方

188
00:09:27,000 --> 00:09:28,000
比如说

189
00:09:28,000 --> 00:09:29,000
太阳吧

190
00:09:29,000 --> 00:09:31,000
它怎么可能会是音性的呢

191
00:09:31,000 --> 00:09:33,000
结果得与面他真的是音性的

192
00:09:33,000 --> 00:09:34,000
对

193
00:09:34,000 --> 00:09:36,000
对的

194
00:09:36,000 --> 00:09:38,000
但是也也是有人

195
00:09:38,000 --> 00:09:41,000
因为在古ader

196
00:09:41,000 --> 00:09:43,000
太阳是女神

197
00:09:43,000 --> 00:09:45,000
对

198
00:09:45,000 --> 00:09:46,000
越来是跟男神

199
00:09:46,000 --> 00:09:48,000
对

200
00:09:48,000 --> 00:09:49,000
越来的是个男神

201
00:09:49,000 --> 00:09:51,000
就是跟Hz双号相反

202
00:09:51,000 --> 00:09:55,000
它是一种比较古老的神话

203
00:09:55,000 --> 00:09:58,000
或者说宗教仪式的严寸

204
00:09:58,000 --> 00:10:00,000
可观现

205
00:10:00,000 --> 00:10:01,000
但是这个

206
00:10:01,000 --> 00:10:03,000
我们现在

207
00:10:03,000 --> 00:10:06,000
正常的人的一个想法好像就不太一样

208
00:10:07,000 --> 00:10:11,000
中国扬这个东西就默认是

209
00:10:11,000 --> 00:10:14,000
不什么就扬这个东西就是太阳吗

210
00:10:14,000 --> 00:10:17,000
但因就是月亮啊因为自里面既有那个月亮

211
00:10:17,000 --> 00:10:23,000
在德语里面马斯库林这个这个这个描述的正确翻译方法是雄性

212
00:10:23,000 --> 00:10:26,000
就是他们认为太阳是太阳是阴性的

213
00:10:26,000 --> 00:10:28,000
月亮是雄性的

214
00:10:28,000 --> 00:10:31,000
太阳是辞性的 月亮是雄性的

215
00:10:32,000 --> 00:10:36,000
三方也没可能有也能做出一点意义来的

216
00:10:36,000 --> 00:10:39,000
但还是比较奇怪的事

217
00:10:39,000 --> 00:10:44,000
关键是我觉得德语这个分这个三性完全任何一点用处也没有

218
00:10:44,000 --> 00:10:46,000
有没有什么实际的用处我自己自己也想不出来

219
00:10:46,000 --> 00:10:47,000
当时学的时候就很痛苦

220
00:10:47,000 --> 00:10:52,000
所有的就是大家要被英文单词要被名词的话

221
00:10:52,000 --> 00:10:54,000
你得寄个单负数对吧就完了

222
00:10:54,000 --> 00:10:57,000
然后有些可能特别的什么单负同行啊

223
00:10:57,000 --> 00:11:00,000
或者是特殊的单负同行有什么

224
00:11:01,000 --> 00:11:03,000
P-POP作为一个种族来讲的吧

225
00:11:03,000 --> 00:11:05,000
有同行的同行的

226
00:11:05,000 --> 00:11:07,000
然后有些特殊的一个

227
00:11:07,000 --> 00:11:09,000
比如说我们长长的数据Data

228
00:11:09,000 --> 00:11:11,000
其实是一个负数

229
00:11:11,000 --> 00:11:13,000
但是它的A-Data

230
00:11:13,000 --> 00:11:19,000
对 在德语里面这个词扔就在使用其拉丁与单数形式作为单数

231
00:11:19,000 --> 00:11:21,000
就是你说一个数据的时候

232
00:11:21,000 --> 00:11:25,000
你比如说安达总而你不能说Data

233
00:11:25,000 --> 00:11:26,000
这种玩意错了

234
00:11:26,000 --> 00:11:28,000
对 在英文里面已经变成了

235
00:11:28,000 --> 00:11:32,000
对 现在英文里面已经就Data已经变成一个不可数的

236
00:11:32,000 --> 00:11:34,000
然后是就没有付出形式

237
00:11:34,000 --> 00:11:37,000
然后但是如果你考古的话也发现

238
00:11:37,000 --> 00:11:40,000
还有一个Datum DATUM

239
00:11:40,000 --> 00:11:41,000
这个单数的形式

240
00:11:41,000 --> 00:11:45,000
但是现在就只要在现代的文现里面基本上看不到这个说法了

241
00:11:45,000 --> 00:11:48,000
当然还有一些更加贵意的

242
00:11:49,000 --> 00:11:49,000
就是单负数

243
00:11:49,000 --> 00:11:52,000
你完全看不出他们之间有什么区别的东西

244
00:11:52,000 --> 00:11:56,000
对 我记得前一阵子风甜

245
00:11:56,000 --> 00:11:58,000
有两只日本车叫什么 叫什么

246
00:11:58,000 --> 00:11:59,000
PRIAS

247
00:11:59,000 --> 00:12:02,000
对 这个 PRIUS

248
00:12:02,000 --> 00:12:05,000
然后它的付出形式叫做PRI

249
00:12:05,000 --> 00:12:08,000
PRIII

250
00:12:08,000 --> 00:12:09,000
两个i

251
00:12:09,000 --> 00:12:10,000
专门说这是一个拉丁与此

252
00:12:10,000 --> 00:12:13,000
所以它的付出应该叫I-WATAL

253
00:12:14,000 --> 00:12:16,000
对 就英文里面就做得很奇怪的事情

254
00:12:16,000 --> 00:12:18,000
但是你想想都还能够接受

255
00:12:18,000 --> 00:12:21,000
起码还能知道说这个是为了区别一个和多个

256
00:12:21,000 --> 00:12:23,000
但是所以我不知道你以和在

257
00:12:24,000 --> 00:12:25,000
然后还有就是

258
00:12:25,000 --> 00:12:26,000
但是德语里面的名词

259
00:12:26,000 --> 00:12:29,000
它除了要分单负数之外

260
00:12:29,000 --> 00:12:31,000
它还要分三个性别

261
00:12:31,000 --> 00:12:32,000
然后这三个性别

262
00:12:32,000 --> 00:12:34,000
Total make no sense

263
00:12:34,000 --> 00:12:35,000
对

264
00:12:35,000 --> 00:12:38,000
当然可能我觉得没这种原则有些负杂度吧

265
00:12:38,000 --> 00:12:40,000
比如说中文的负杂度

266
00:12:40,000 --> 00:12:41,000
它它在写里面

267
00:12:41,000 --> 00:12:43,000
它的书写是非常负杂

268
00:12:43,000 --> 00:12:44,000
愚发简单的要死

269
00:12:44,000 --> 00:12:47,000
但是书写非常非常负责

270
00:12:47,000 --> 00:12:49,000
其实从这个角度上中文还是蛮不错的

271
00:12:49,000 --> 00:12:52,000
就是部分单负数对吧

272
00:12:52,000 --> 00:12:53,000
对 不分性数格

273
00:12:53,000 --> 00:12:55,000
这是非常好的一点

274
00:12:55,000 --> 00:12:56,000
对对

275
00:12:56,000 --> 00:12:58,000
唯一一个要分那个

276
00:12:58,000 --> 00:13:00,000
就是中文有一个不太爽

277
00:13:00,000 --> 00:13:01,000
就说量次太多

278
00:13:01,000 --> 00:13:02,000
又没什么用好像

279
00:13:02,000 --> 00:13:03,000
对 所以外国人来说

280
00:13:03,000 --> 00:13:06,000
最大的困扰之一就是量次

281
00:13:06,000 --> 00:13:08,000
你不像习与习与这些东西

282
00:13:08,000 --> 00:13:09,000
你不会都罢了

283
00:13:09,000 --> 00:13:11,000
量次你不会的话

284
00:13:11,000 --> 00:13:13,000
就很容易会说的话

285
00:13:13,000 --> 00:13:14,000
对对

286
00:13:14,000 --> 00:13:16,000
而且量次其实也没有

287
00:13:16,000 --> 00:13:19,000
太大的实际作用在我看来

288
00:13:20,000 --> 00:13:22,000
对 它除了对于一些

289
00:13:22,000 --> 00:13:24,000
没有固定形状的东西

290
00:13:24,000 --> 00:13:26,000
有一些一些意义的

291
00:13:26,000 --> 00:13:28,000
比如说英语里面也会说一瓶水

292
00:13:28,000 --> 00:13:29,000
一杯咖啡

293
00:13:29,000 --> 00:13:31,000
中文对

294
00:13:31,000 --> 00:13:33,000
但是除此之外

295
00:13:33,000 --> 00:13:35,000
好像为什么一定要说一批马

296
00:13:35,000 --> 00:13:36,000
不能说你个马

297
00:13:36,000 --> 00:13:37,000
对 对

298
00:13:37,000 --> 00:13:38,000
马英语

299
00:13:38,000 --> 00:13:40,000
但是在有些方言里面

300
00:13:40,000 --> 00:13:41,000
就是在方言的口域里面

301
00:13:41,000 --> 00:13:43,000
量次已经被很多情况下

302
00:13:43,000 --> 00:13:44,000
被省贝掉了

303
00:13:44,000 --> 00:13:46,000
比如说最简单的一字吧

304
00:13:46,000 --> 00:13:47,000
我们俩人

305
00:13:47,000 --> 00:13:49,000
我们不是说我们两个人对了

306
00:13:49,000 --> 00:13:50,000
我们俩人在这里

307
00:13:50,000 --> 00:13:51,000
扯蛋

308
00:13:51,000 --> 00:13:52,000
还有那个小

309
00:13:52,000 --> 00:13:54,000
对面过来俩狗

310
00:13:56,000 --> 00:13:59,000
就有时候还是可以省贝掉的

311
00:13:59,000 --> 00:14:00,000
然后我一直在想

312
00:14:00,000 --> 00:14:01,000
对不起

313
00:14:01,000 --> 00:14:03,000
作为一个有性格一点的这个常试

314
00:14:03,000 --> 00:14:05,000
你可以以后都不说量次

315
00:14:05,000 --> 00:14:06,000
看会有什么效果

316
00:14:06,000 --> 00:14:07,000
老板

317
00:14:07,000 --> 00:14:09,000
给我俩瓶果

318
00:14:09,000 --> 00:14:10,000
我没有做过

319
00:14:10,000 --> 00:14:11,000
老板为什么

320
00:14:11,000 --> 00:14:12,000
上两面

321
00:14:13,000 --> 00:14:14,000
上两面

322
00:14:15,000 --> 00:14:16,000
对 这也不错

323
00:14:17,000 --> 00:14:19,000
老板来五车

324
00:14:22,000 --> 00:14:24,000
这种事情就比较过一眼了

325
00:14:24,000 --> 00:14:25,000
可以试一下

326
00:14:25,000 --> 00:14:26,000
可以试一下

327
00:14:26,000 --> 00:14:27,000
下一条反轨

328
00:14:27,000 --> 00:14:28,000
也是

329
00:14:28,000 --> 00:14:29,000
也是我的

330
00:14:29,000 --> 00:14:33,000
我上次说到一轮轮的交通字体

331
00:14:33,000 --> 00:14:36,000
不确定是transport还是

332
00:14:36,000 --> 00:14:38,000
安德·红尔的字体里面

333
00:14:38,000 --> 00:14:42,000
小姐自母i的上面的那一点

334
00:14:42,000 --> 00:14:43,000
是个正方形的话

335
00:14:43,000 --> 00:14:44,000
我说

336
00:14:44,000 --> 00:14:46,000
学生90度他是个联系

337
00:14:46,000 --> 00:14:47,000
但实际上正方形

338
00:14:47,000 --> 00:14:49,000
学生90度还是个正方形

339
00:14:49,000 --> 00:14:51,000
你玩我们呢

340
00:14:53,000 --> 00:14:54,000
额头方块

341
00:14:54,000 --> 00:14:55,000
额头方块

342
00:14:55,000 --> 00:14:57,000
里面正方形

343
00:14:57,000 --> 00:14:58,000
怎么转

344
00:14:58,000 --> 00:14:59,000
都是这样

345
00:14:59,000 --> 00:15:00,000
没有用

346
00:15:00,000 --> 00:15:01,000
你说他写那个

347
00:15:01,000 --> 00:15:02,000
写那个正方形

348
00:15:02,000 --> 00:15:03,000
选转的那个韩讯科

349
00:15:03,000 --> 00:15:05,000
该不会直接就return

350
00:15:05,000 --> 00:15:06,000
No off

351
00:15:06,000 --> 00:15:07,000
对啊

352
00:15:07,000 --> 00:15:08,000
应该是我觉得

353
00:15:08,000 --> 00:15:09,000
没有意义

354
00:15:10,000 --> 00:15:11,000
对

355
00:15:12,000 --> 00:15:14,000
然后还有一条是

356
00:15:14,000 --> 00:15:15,000
梁海九阵伙的

357
00:15:15,000 --> 00:15:19,000
说小姐这么g的双层版本

358
00:15:19,000 --> 00:15:21,000
和蝦子应该是没有什么过来的

359
00:15:21,000 --> 00:15:22,000
就是我当时想到

360
00:15:22,000 --> 00:15:24,000
他应该可能跟那个

361
00:15:24,000 --> 00:15:26,000
蝦子母有一个叫什么

362
00:15:26,000 --> 00:15:27,000
absit的

363
00:15:27,000 --> 00:15:28,000
之类的

364
00:15:28,000 --> 00:15:30,000
就看起来非常奇怪的一个字母

365
00:15:30,000 --> 00:15:31,000
有点关联

366
00:15:31,000 --> 00:15:32,000
我觉得g可能是从这个这么来的

367
00:15:32,000 --> 00:15:33,000
但实际上完全不是

368
00:15:36,000 --> 00:15:37,000
对

369
00:15:37,000 --> 00:15:38,000
作为什么

370
00:15:38,000 --> 00:15:39,000
Type is beautiful成员

371
00:15:39,000 --> 00:15:41,000
不像去蹲墙角反思的

372
00:15:41,000 --> 00:15:43,000
一段35天之类的

373
00:15:43,000 --> 00:15:44,000
这种事情也不是第一次发生了

374
00:15:44,000 --> 00:15:46,000
我上次在支付上

375
00:15:46,000 --> 00:15:47,000
斩钉解写的说

376
00:15:47,000 --> 00:15:49,000
瑞士高速公路自排

377
00:15:49,000 --> 00:15:53,000
瑞士高速公路的自排

378
00:15:53,000 --> 00:15:57,000
标号排的自己就是flutick

379
00:15:57,000 --> 00:15:59,000
然后有人跳出来说

380
00:15:59,000 --> 00:16:01,000
贵网站上面

381
00:16:01,000 --> 00:16:04,000
说过他是flutick的那种感性

382
00:16:04,000 --> 00:16:06,000
简直就是自打脸

383
00:16:06,000 --> 00:16:07,000
没错

384
00:16:07,000 --> 00:16:08,000
还好你别问这

385
00:16:08,000 --> 00:16:09,000
对面这种不是我意的

386
00:16:09,000 --> 00:16:10,000
应该不是我意

387
00:16:10,000 --> 00:16:11,000
如果是我意的话

388
00:16:11,000 --> 00:16:12,000
就可以去死

389
00:16:12,000 --> 00:16:14,000
好吧我们原谅你的

390
00:16:14,000 --> 00:16:16,000
谢谢你

391
00:16:16,000 --> 00:16:17,000
然后我原谅你的

392
00:16:17,000 --> 00:16:18,000
听众我原谅你

393
00:16:18,000 --> 00:16:19,000
我不知道

394
00:16:19,000 --> 00:16:20,000
啊原谅不是

395
00:16:22,000 --> 00:16:23,000
sorry

396
00:16:23,000 --> 00:16:24,000
对

397
00:16:24,000 --> 00:16:26,000
然后就是

398
00:16:26,000 --> 00:16:27,000
Input自己

399
00:16:27,000 --> 00:16:29,000
我上一次去看他的时候

400
00:16:29,000 --> 00:16:31,000
发现他有了一个

401
00:16:32,000 --> 00:16:34,000
花口号的替换版本

402
00:16:34,000 --> 00:16:36,000
就是有一个普通的花口号出现了

403
00:16:36,000 --> 00:16:38,000
如果你对花口号的号也不好

404
00:16:38,000 --> 00:16:40,000
不刷的话可以去用这个

405
00:16:40,000 --> 00:16:41,000
普通花口号的方案

406
00:16:41,000 --> 00:16:43,000
所以普通就是没有那么

407
00:16:43,000 --> 00:16:45,000
扭曲的一个花口号

408
00:16:45,000 --> 00:16:48,000
就是Input那个他会有很多这种

409
00:16:48,000 --> 00:16:50,000
他有一个定制化的介面

410
00:16:50,000 --> 00:16:51,000
你可以选择

411
00:16:51,000 --> 00:16:53,000
那些你喜欢的自

412
00:16:53,000 --> 00:16:55,000
你变种的做好吗

413
00:16:55,000 --> 00:16:57,000
这样就是反正我总有一个适合你的

414
00:16:57,000 --> 00:16:59,000
然后碰巧你就是喜欢那个

415
00:16:59,000 --> 00:17:02,000
直上直下的大口号的东西

416
00:17:02,000 --> 00:17:03,000
没错

417
00:17:03,000 --> 00:17:05,000
其实之前那个花口我觉得挺好的

418
00:17:06,000 --> 00:17:07,000
好吧

419
00:17:07,000 --> 00:17:08,000
还是要强调自己的

420
00:17:08,000 --> 00:17:09,000
对

421
00:17:09,000 --> 00:17:11,000
下一条反备是

422
00:17:11,000 --> 00:17:12,000
我说错那个东西啊

423
00:17:12,000 --> 00:17:14,000
就是我们上次讲到有

424
00:17:14,000 --> 00:17:15,000
这个以Council

425
00:17:15,000 --> 00:17:16,000
啊

426
00:17:16,000 --> 00:17:17,000
Caliber

427
00:17:17,000 --> 00:17:18,000
啊

428
00:17:18,000 --> 00:17:19,000
Cambri

429
00:17:19,000 --> 00:17:20,000
对吧

430
00:17:20,000 --> 00:17:21,000
Cambri

431
00:17:21,000 --> 00:17:22,000
对

432
00:17:22,000 --> 00:17:23,000
我们远的C系字体

433
00:17:23,000 --> 00:17:24,000
但是我说他好像是

434
00:17:24,000 --> 00:17:26,000
随这个 Office 发布的

435
00:17:26,000 --> 00:17:27,000
但其实他是随

436
00:17:27,000 --> 00:17:28,000
随这个

437
00:17:28,000 --> 00:17:30,000
Vista 发布的

438
00:17:30,000 --> 00:17:32,000
然后之所以我讲错这个是

439
00:17:32,000 --> 00:17:34,000
因为我用这套字体

440
00:17:34,000 --> 00:17:35,000
我用这套字体

441
00:17:35,000 --> 00:17:37,000
就完全是因为在

442
00:17:37,000 --> 00:17:40,000
啊 装了 Mac Office 之后在

443
00:17:40,000 --> 00:17:41,000
我的 Mac 身边才找到的

444
00:17:41,000 --> 00:17:42,000
然后

445
00:17:42,000 --> 00:17:44,000
因为Vista我真的是没有用过

446
00:17:44,000 --> 00:17:45,000
这张眼眼

447
00:17:45,000 --> 00:17:46,000
就直接说我是国粉吗

448
00:17:46,000 --> 00:17:47,000
不知道是很正常的

449
00:17:47,000 --> 00:17:49,000
不这个Vista真的很糟糕嘛

450
00:17:50,000 --> 00:17:52,000
他确实出来的时候

451
00:17:52,000 --> 00:17:53,000
对不是我的

452
00:17:53,000 --> 00:17:54,000
这个是工刃的

453
00:17:54,000 --> 00:17:55,000
这个是工刃的

454
00:17:55,000 --> 00:17:56,000
所以这个错了

455
00:17:56,000 --> 00:17:57,000
我觉得是挺有可怜的

456
00:17:57,000 --> 00:17:58,000
你们一定要原谅我

457
00:17:58,000 --> 00:17:59,000
对不起

458
00:17:59,000 --> 00:18:00,000
两海先生

459
00:18:00,000 --> 00:18:02,000
就是两海就错的

460
00:18:04,000 --> 00:18:05,000
就

461
00:18:05,000 --> 00:18:09,000
然后其实有一位

462
00:18:09,000 --> 00:18:10,000
对不起

463
00:18:10,000 --> 00:18:11,000
就是轻松在

464
00:18:11,000 --> 00:18:12,000
对不起

465
00:18:12,000 --> 00:18:14,000
他是孙玉冬

466
00:18:14,000 --> 00:18:16,000
对 他来邮件说的

467
00:18:16,000 --> 00:18:18,000
上午提到

468
00:18:18,000 --> 00:18:20,000
就是微卷给学生

469
00:18:20,000 --> 00:18:22,000
有一个特殊的计划叫做

470
00:18:22,000 --> 00:18:23,000
Dream Spark

471
00:18:23,000 --> 00:18:24,000
对

472
00:18:24,000 --> 00:18:25,000
然后Dream Spark呢

473
00:18:25,000 --> 00:18:26,000
就可以干嘛呢

474
00:18:26,000 --> 00:18:27,000
就是你比如你学校

475
00:18:27,000 --> 00:18:28,000
参加的这个项目之后

476
00:18:28,000 --> 00:18:30,000
你可以从你学校拿到一个帐号

477
00:18:30,000 --> 00:18:31,000
然后你们这个帐号

478
00:18:31,000 --> 00:18:32,000
可以在微卷的官方网站

479
00:18:32,000 --> 00:18:34,000
免费的下载到

480
00:18:34,000 --> 00:18:36,000
大部分的微卷的产品

481
00:18:36,000 --> 00:18:38,000
然后里面他提供那个叫做

482
00:18:38,000 --> 00:18:40,000
Visual Studio

483
00:18:40,000 --> 00:18:42,000
他是提供的是Pro版本

484
00:18:42,000 --> 00:18:44,000
Yo

485
00:18:44,000 --> 00:18:46,000
不过

486
00:18:46,000 --> 00:18:48,000
之前我们讲那个叫什么

487
00:18:48,000 --> 00:18:50,000
那个叫 community decision

488
00:18:50,000 --> 00:18:51,000
对

489
00:18:51,000 --> 00:18:52,000
Ce

490
00:18:52,000 --> 00:18:53,000
Ce是一直是免费的

491
00:18:53,000 --> 00:18:55,000
对公众都是免费的

492
00:18:55,000 --> 00:18:56,000
对 将会

493
00:18:56,000 --> 00:18:57,000
而且将应该将会一直免费下去

494
00:18:57,000 --> 00:18:59,000
就像那个

495
00:18:59,000 --> 00:19:01,000
之前很多的

496
00:19:01,000 --> 00:19:03,000
比如说那个

497
00:19:03,000 --> 00:19:05,000
JetBrains的ID

498
00:19:05,000 --> 00:19:07,000
IntelJet也是

499
00:19:07,000 --> 00:19:09,000
有 community decision也是有免费

500
00:19:09,000 --> 00:19:11,000
不过说到这个

501
00:19:11,000 --> 00:19:12,000
我想请你一个事

502
00:19:12,000 --> 00:19:13,000
好像这个有一个

503
00:19:13,000 --> 00:19:15,000
商业这样的专门的说法嘛

504
00:19:15,000 --> 00:19:17,000
就是把一个产品分那么多

505
00:19:17,000 --> 00:19:19,000
种类版本

506
00:19:19,000 --> 00:19:20,000
一个什么叫做Pro版

507
00:19:20,000 --> 00:19:21,000
Metrix是不是

508
00:19:21,000 --> 00:19:22,000
我也不太清楚

509
00:19:22,000 --> 00:19:23,000
反正就是

510
00:19:23,000 --> 00:19:25,000
我也很喜欢搞这种事情

511
00:19:25,000 --> 00:19:27,000
大家不得现在还有

512
00:19:27,000 --> 00:19:29,000
其实现在可能还好一点

513
00:19:29,000 --> 00:19:30,000
之前Visart刚出来的时候

514
00:19:30,000 --> 00:19:32,000
还有好像是有十几个版本

515
00:19:32,000 --> 00:19:33,000
我记得

516
00:19:33,000 --> 00:19:34,000
不止微软吗

517
00:19:34,000 --> 00:19:35,000
我觉得很多

518
00:19:35,000 --> 00:19:36,000
通常的产品都有这个特点

519
00:19:36,000 --> 00:19:38,000
Eclipse不演示吗

520
00:19:38,000 --> 00:19:39,000
Eclipse的那个

521
00:19:39,000 --> 00:19:41,000
下来业面误我靠

522
00:19:41,000 --> 00:19:42,000
一大堆版本

523
00:19:42,000 --> 00:19:43,000
什么扎了一一版本

524
00:19:43,000 --> 00:19:45,000
CJ家版本

525
00:19:45,000 --> 00:19:46,000
对对

526
00:19:46,000 --> 00:19:47,000
这一版本

527
00:19:47,000 --> 00:19:48,000
就不明白了

528
00:19:48,000 --> 00:19:50,000
难道不能提供一个

529
00:19:50,000 --> 00:19:51,000
基础版本

530
00:19:51,000 --> 00:19:54,000
然后我才会让用户自己去装

531
00:19:54,000 --> 00:19:56,000
该一个装个插线或者怎么样

532
00:19:56,000 --> 00:19:57,000
对

533
00:19:57,000 --> 00:19:59,000
我能想到的

534
00:19:59,000 --> 00:20:01,000
有这个所谓Pro版Metrix这种

535
00:20:01,000 --> 00:20:03,000
这种结果就是把一个产品

536
00:20:03,000 --> 00:20:04,000
就同一个产品

537
00:20:04,000 --> 00:20:06,000
然后根据什么不同的场景

538
00:20:06,000 --> 00:20:08,000
或者不同过程的细分

539
00:20:08,000 --> 00:20:10,000
等很多的这种产品

540
00:20:10,000 --> 00:20:11,000
给我的感觉整个

541
00:20:11,000 --> 00:20:12,000
或者这种公司给我的感觉就很差了

542
00:20:12,000 --> 00:20:13,000
因为其实从本质上

543
00:20:13,000 --> 00:20:15,000
你都知道它就是在

544
00:20:15,000 --> 00:20:16,000
所谓的追随

545
00:20:16,000 --> 00:20:18,000
等一下那个东西叫什么来的

546
00:20:18,000 --> 00:20:20,000
那个叫做

547
00:20:21,000 --> 00:20:22,000
例子对它话

548
00:20:22,000 --> 00:20:23,000
对

549
00:20:23,000 --> 00:20:24,000
对

550
00:20:24,000 --> 00:20:26,000
等于是你不愿意

551
00:20:26,000 --> 00:20:28,000
就是我所有这些功能

552
00:20:28,000 --> 00:20:30,000
加那一起开这个家

553
00:20:30,000 --> 00:20:31,000
你出不起

554
00:20:31,000 --> 00:20:33,000
那我就砍掉一些

555
00:20:33,000 --> 00:20:37,000
然后把你能买的那个价格

556
00:20:37,000 --> 00:20:38,000
介绍给你

557
00:20:38,000 --> 00:20:40,000
但这就像麦车

558
00:20:40,000 --> 00:20:43,000
我很小的时候总是会

559
00:20:43,000 --> 00:20:46,000
有很奇怪说这为什么车的

560
00:20:46,000 --> 00:20:49,000
广告上面都不写定价呢

561
00:20:49,000 --> 00:20:51,000
它会写

562
00:20:51,000 --> 00:20:53,000
它会写一个多少多少起吗

563
00:20:53,000 --> 00:20:53,000
对

564
00:20:53,000 --> 00:20:56,000
但那个起是完全全新的裸车价

565
00:20:56,000 --> 00:20:58,000
真正的你要去

566
00:20:58,000 --> 00:21:00,000
配那个Coffee Reiter然后

567
00:21:00,000 --> 00:21:02,000
才知道每一个

568
00:21:02,000 --> 00:21:04,000
每加一个Option要加多少钱

569
00:21:04,000 --> 00:21:06,000
而那个Coffee Reiter的那个List

570
00:21:06,000 --> 00:21:08,000
你可以花两天的时间

571
00:21:08,000 --> 00:21:11,000
跟那个销售代理在那边讨论这个事情

572
00:21:11,000 --> 00:21:12,000
如果你真的想要

573
00:21:12,000 --> 00:21:14,000
定制一辆属于自己的车的话

574
00:21:14,000 --> 00:21:16,000
当然这这种情况在中国

575
00:21:16,000 --> 00:21:17,000
可能不是很普遍

576
00:21:17,000 --> 00:21:19,000
但在欧洲很多人会愿意

577
00:21:19,000 --> 00:21:21,000
花两天时间

578
00:21:22,000 --> 00:21:24,000
至少这一下午

579
00:21:24,000 --> 00:21:26,000
跟那个销售代表去讨论

580
00:21:26,000 --> 00:21:28,000
这辆车它要哪些Option

581
00:21:28,000 --> 00:21:30,000
然后定然后两个月之后

582
00:21:30,000 --> 00:21:32,000
这辆车才可以送到手里

583
00:21:32,000 --> 00:21:35,000
但是每一个Option都是它亲自

584
00:21:35,000 --> 00:21:36,000
check过的

585
00:21:36,000 --> 00:21:38,000
这才是

586
00:21:38,000 --> 00:21:41,000
Matrix Product Matrix Edit Words

587
00:21:41,000 --> 00:21:42,000
对

588
00:21:42,000 --> 00:21:44,000
这反正给人感觉就非常不好

589
00:21:44,000 --> 00:21:46,000
而且整个是

590
00:21:46,000 --> 00:21:48,000
没有平板无辜的增加了

591
00:21:48,000 --> 00:21:50,000
这个选择的这个难度

592
00:21:50,000 --> 00:21:52,000
就选择困难者已经够严重了

593
00:21:52,000 --> 00:21:53,000
对吧

594
00:21:53,000 --> 00:21:55,000
它还给你搞得那么麻烦

595
00:21:55,000 --> 00:21:56,000
你就是想装强死

596
00:21:56,000 --> 00:21:57,000
不过现在

597
00:21:57,000 --> 00:22:00,000
有什么Windows 8还有之后

598
00:22:00,000 --> 00:22:01,000
他跳过去久了

599
00:22:01,000 --> 00:22:02,000
这些都会问到这事

600
00:22:02,000 --> 00:22:03,000
这8已经好很多

601
00:22:03,000 --> 00:22:04,000
8只分了一个

602
00:22:04,000 --> 00:22:06,000
就是8和8 Pro

603
00:22:06,000 --> 00:22:07,000
专业吧

604
00:22:07,000 --> 00:22:08,000
对

605
00:22:08,000 --> 00:22:10,000
好像以前我说有什么

606
00:22:10,000 --> 00:22:11,000
我想想有什么

607
00:22:11,000 --> 00:22:12,000
Home Basic

608
00:22:12,000 --> 00:22:14,000
Home Premium

609
00:22:14,000 --> 00:22:16,000
Professional

610
00:22:16,000 --> 00:22:18,000
有什么outimate

611
00:22:19,000 --> 00:22:20,000
还有一个

612
00:22:20,000 --> 00:22:21,000
还有一个

613
00:22:21,000 --> 00:22:23,000
Home Premium

614
00:22:23,000 --> 00:22:24,000
一个彻底

615
00:22:24,000 --> 00:22:25,000
还有一个版本

616
00:22:25,000 --> 00:22:27,000
还有一个什么Star-Turaged Edition

617
00:22:27,000 --> 00:22:30,000
然后所有的都要成一二

618
00:22:30,000 --> 00:22:32,000
因为它分32

619
00:22:32,000 --> 00:22:33,000
60、60、60

620
00:22:33,000 --> 00:22:34,000
不同的东西

621
00:22:34,000 --> 00:22:35,000
不止成一二

622
00:22:35,000 --> 00:22:37,000
还要成一所有的语言

623
00:22:37,000 --> 00:22:38,000
对对对对

624
00:22:38,000 --> 00:22:40,000
我觉得这非常二一件事情

625
00:22:40,000 --> 00:22:42,000
不止问到此如此

626
00:22:42,000 --> 00:22:43,000
什么Blackberry

627
00:22:43,000 --> 00:22:44,000
或者是安卓的

628
00:22:44,000 --> 00:22:45,000
我不知道

629
00:22:45,000 --> 00:22:47,000
但很多操作都不一样

630
00:22:47,000 --> 00:22:48,000
因为有一个分语言

631
00:22:48,000 --> 00:22:50,000
是因为它是跟去订价有关系

632
00:22:50,000 --> 00:22:51,000
其实跟这个ProLub-in

633
00:22:51,000 --> 00:22:53,000
其实本质上也是一个意思

634
00:22:53,000 --> 00:22:54,000
对

635
00:22:54,000 --> 00:22:55,000
你也不

636
00:22:55,000 --> 00:22:56,000
看一下

637
00:22:56,000 --> 00:22:57,000
中国的别人比较穷

638
00:22:57,000 --> 00:22:59,000
我们把这个价格定低一点

639
00:22:59,000 --> 00:23:01,000
德国那些人比较有钱

640
00:23:01,000 --> 00:23:03,000
我们把人家价格比较高一点

641
00:23:03,000 --> 00:23:04,000
但是

642
00:23:04,000 --> 00:23:05,000
但是如果

643
00:23:05,000 --> 00:23:06,000
产品是一样的

644
00:23:06,000 --> 00:23:08,000
如果我可以随时像这个什么

645
00:23:08,000 --> 00:23:09,000
iPhone一样切换语言

646
00:23:09,000 --> 00:23:10,000
那我还搞屁案

647
00:23:10,000 --> 00:23:11,000
我带了直接买中国版

648
00:23:11,000 --> 00:23:12,000
去德国用不就好了

649
00:23:12,000 --> 00:23:13,000
对吧

650
00:23:13,000 --> 00:23:14,000
所以它就搞成这个所有的语言

651
00:23:14,000 --> 00:23:15,000
是不可以

652
00:23:15,000 --> 00:23:16,000
随时听话的

653
00:23:16,000 --> 00:23:18,000
那也可以有这个工具

654
00:23:18,000 --> 00:23:19,000
叫什么MU

655
00:23:19,000 --> 00:23:20,000
叫什么

656
00:23:20,000 --> 00:23:22,000
现在已经可以下来语言包了吗

657
00:23:22,000 --> 00:23:23,000
我进了

658
00:23:23,000 --> 00:23:24,000
语言包从

659
00:23:24,000 --> 00:23:25,000
WISDA时代

660
00:23:25,000 --> 00:23:26,000
还是

661
00:23:26,000 --> 00:23:27,000
吻70代

662
00:23:27,000 --> 00:23:28,000
已经有XB都已经有语言包

663
00:23:28,000 --> 00:23:29,000
但是那个语言包

664
00:23:29,000 --> 00:23:31,000
首先是一个要有外付费买的

665
00:23:31,000 --> 00:23:32,000
就叫

666
00:23:32,000 --> 00:23:34,000
就叫

667
00:23:34,000 --> 00:23:35,000
就叫補齐那个

668
00:23:35,000 --> 00:23:37,000
那个就是定价的差异

669
00:23:37,000 --> 00:23:39,000
你把拿出来是这样子

670
00:23:39,000 --> 00:23:42,000
然后你还在麻烦去安装

671
00:23:42,000 --> 00:23:43,000
然后就是你装完这个语言包之后

672
00:23:43,000 --> 00:23:45,000
它其实也并不等一个

673
00:23:45,000 --> 00:23:46,000
原生的那个语言来形容

674
00:23:46,000 --> 00:23:47,000
我自己装过

675
00:23:47,000 --> 00:23:48,000
所以这个是身有体会的

676
00:23:51,000 --> 00:23:52,000
所以

677
00:23:52,000 --> 00:23:55,000
所以你看见这种语言是不可切换的

678
00:23:55,000 --> 00:23:57,000
然后有各种

679
00:23:57,000 --> 00:23:58,000
edition的

680
00:23:58,000 --> 00:23:59,000
你就知道

681
00:23:59,000 --> 00:24:00,000
3D and 3D

682
00:24:02,000 --> 00:24:03,000
那你图草一下微微

683
00:24:03,000 --> 00:24:04,000
而且现在已经好多了

684
00:24:04,000 --> 00:24:06,000
刚才讲完那个八一斤

685
00:24:06,000 --> 00:24:08,000
我印象中只有八和这个

686
00:24:08,000 --> 00:24:09,000
八的pro

687
00:24:09,000 --> 00:24:10,000
这两个区别

688
00:24:10,000 --> 00:24:12,000
但它有那个针对色的

689
00:24:12,000 --> 00:24:15,000
好像一个是版本那个在说

690
00:24:15,000 --> 00:24:16,000
然后语言我不知道

691
00:24:16,000 --> 00:24:18,000
现在怎么吃什么一个什么情况

692
00:24:18,000 --> 00:24:19,000
我至少从刚刚

693
00:24:19,000 --> 00:24:21,000
五位的玩那个文明创

694
00:24:21,000 --> 00:24:22,000
你说装一个

695
00:24:22,000 --> 00:24:23,000
装一个

696
00:24:23,000 --> 00:24:24,000
八点一

697
00:24:24,000 --> 00:24:25,000
还是得一半的

698
00:24:25,000 --> 00:24:26,000
我也没有去试试

699
00:24:26,000 --> 00:24:27,000
反正就

700
00:24:27,000 --> 00:24:28,000
它在空中面板里面

701
00:24:28,000 --> 00:24:30,000
有一个这个可以选语言

702
00:24:30,000 --> 00:24:32,000
但是我记得是要语言装包的

703
00:24:32,000 --> 00:24:33,000
但是按照包你怎么来

704
00:24:33,000 --> 00:24:34,000
就是一个问题

705
00:24:34,000 --> 00:24:35,000
嗯

706
00:24:35,000 --> 00:24:36,000
要

707
00:24:36,000 --> 00:24:38,000
我去装文字八的时候

708
00:24:38,000 --> 00:24:40,000
从去重温了一下空中面板

709
00:24:40,000 --> 00:24:41,000
我觉得我忘记到时候

710
00:24:41,000 --> 00:24:43,000
会有这么多东西

711
00:24:43,000 --> 00:24:46,000
其实它也不算多了

712
00:24:46,000 --> 00:24:48,000
它只是就呈现得不好

713
00:24:48,000 --> 00:24:49,000
就是你仔细看一下

714
00:24:49,000 --> 00:24:51,000
像Mac的那个叫做什么

715
00:24:51,000 --> 00:24:52,000
System Profins

716
00:24:52,000 --> 00:24:53,000
对

717
00:24:53,000 --> 00:24:54,000
里面它的学校也蛮多的

718
00:24:54,000 --> 00:24:55,000
我记得那个文字八

719
00:24:55,000 --> 00:24:56,000
就是从文字八

720
00:24:56,000 --> 00:24:58,000
微微是它时代开始你

721
00:24:58,000 --> 00:25:01,000
它也是图把那个功能组合

722
00:25:01,000 --> 00:25:04,000
就是那个分成几个大组

723
00:25:04,000 --> 00:25:05,000
然后你可以一个点进去

724
00:25:05,000 --> 00:25:07,000
可是找起来它也蛮麻烦

725
00:25:07,000 --> 00:25:08,000
对

726
00:25:08,000 --> 00:25:11,000
而且它的图形化的程度不够我们在那里

727
00:25:11,000 --> 00:25:12,000
对

728
00:25:12,000 --> 00:25:13,000
你还是读很多字

729
00:25:13,000 --> 00:25:14,000
感觉就觉得有一种

730
00:25:14,000 --> 00:25:17,000
很拥重庞大的感觉

731
00:25:17,000 --> 00:25:18,000
对

732
00:25:18,000 --> 00:25:19,000
其实简单来说就一条

733
00:25:19,000 --> 00:25:21,000
就图标做的不够漂亮

734
00:25:21,000 --> 00:25:22,000
对

735
00:25:22,000 --> 00:25:23,000
好了

736
00:25:23,000 --> 00:25:25,000
不图朝这个了

737
00:25:25,000 --> 00:25:26,000
在这个

738
00:25:26,000 --> 00:25:28,000
在插播一条小薪

739
00:25:28,000 --> 00:25:31,000
我做了一个什么钩语言的粉丝

740
00:25:31,000 --> 00:25:33,000
今天这个钩语言发布了

741
00:25:33,000 --> 00:25:35,000
1.4的这个版本

742
00:25:35,000 --> 00:25:36,000
然后为什么

743
00:25:36,000 --> 00:25:37,000
都好像要讲这件事情

744
00:25:37,000 --> 00:25:39,000
都是因为在这个版本里面

745
00:25:39,000 --> 00:25:42,000
它正式加入了安卓的支持

746
00:25:42,000 --> 00:25:45,000
所以你可以现在开始用这些钩语言写游戏了

747
00:25:45,000 --> 00:25:47,000
就用过分只要写游戏

748
00:25:47,000 --> 00:25:49,000
但是如果你现在还要写强的那种

749
00:25:49,000 --> 00:25:51,000
APP就是需要有标准它的界面

750
00:25:51,000 --> 00:25:55,000
可能还要用一下Java的这个东西去做一下

751
00:25:55,000 --> 00:25:57,000
但是如果你只是写游戏的话

752
00:25:57,000 --> 00:25:59,000
完全可以是只要钩语言的Bill

753
00:25:59,000 --> 00:26:00,000
就大家如果有兴趣

754
00:26:00,000 --> 00:26:01,000
可以去尝试一下

755
00:26:01,000 --> 00:26:02,000
对

756
00:26:02,000 --> 00:26:05,000
我记得这个是今年四月份

757
00:26:05,000 --> 00:26:07,000
还是什么时候就已经

758
00:26:07,000 --> 00:26:10,000
还是另外一份就已经出来的放出来的

759
00:26:10,000 --> 00:26:11,000
放出来的

760
00:26:11,000 --> 00:26:12,000
放出来的

761
00:26:12,000 --> 00:26:13,000
对对对

762
00:26:13,000 --> 00:26:14,000
他们在1.3的时候

763
00:26:14,000 --> 00:26:15,000
就半年前

764
00:26:15,000 --> 00:26:18,000
他已经在讲这个会有这个事情了

765
00:26:18,000 --> 00:26:19,000
就其实1.3

766
00:26:19,000 --> 00:26:21,000
Bed他的时候就已经有这个功能

767
00:26:21,000 --> 00:26:23,000
就是没有正式发布而已

768
00:26:23,000 --> 00:26:25,000
我觉得实际上的

769
00:26:25,000 --> 00:26:27,000
其实可能还要更早

770
00:26:27,000 --> 00:26:29,000
因为我记得在

771
00:26:29,000 --> 00:26:31,000
我不确定

772
00:26:31,000 --> 00:26:33,000
但好像是在有一次那个

773
00:26:33,000 --> 00:26:37,000
Google Developer打会上面

774
00:26:37,000 --> 00:26:39,000
我听到有人在问

775
00:26:39,000 --> 00:26:42,000
说开发安照可以用别的语言吗

776
00:26:42,000 --> 00:26:44,000
当时得到的打赋

777
00:26:44,000 --> 00:26:46,000
什么目前没有计划

778
00:26:46,000 --> 00:26:48,000
但它不是可以用

779
00:26:48,000 --> 00:26:51,000
NDK用然后C和CG加写吗

780
00:26:51,000 --> 00:26:53,000
那个时候还没有

781
00:26:53,000 --> 00:26:55,000
过去太久了

782
00:26:55,000 --> 00:26:57,000
2012年可能是

783
00:26:57,000 --> 00:26:58,000
那是今年的

784
00:26:58,000 --> 00:26:59,000
今年那个Google i

785
00:26:59,000 --> 00:27:01,000
我的时候说的

786
00:27:01,000 --> 00:27:02,000
OK

787
00:27:02,000 --> 00:27:03,000
对

788
00:27:03,000 --> 00:27:05,000
所以就是如果你是一个

789
00:27:05,000 --> 00:27:07,000
痛痕和我们一样

790
00:27:07,000 --> 00:27:08,000
痛痕插网的主持人

791
00:27:08,000 --> 00:27:10,000
然后又想是写安照的游戏

792
00:27:10,000 --> 00:27:12,000
现在你可以有一个官方支持的

793
00:27:12,000 --> 00:27:13,000
正式的

794
00:27:13,000 --> 00:27:15,000
替代选择了

795
00:27:15,000 --> 00:27:16,000
当然

796
00:27:16,000 --> 00:27:19,000
现在肯定是属于刚开发布的

797
00:27:19,000 --> 00:27:21,000
一个不太稳定的阶段

798
00:27:21,000 --> 00:27:24,000
就是前方坑多自己小心

799
00:27:24,000 --> 00:27:26,000
另外一个比较

800
00:27:26,000 --> 00:27:29,000
值得我挺高兴的事情

801
00:27:29,000 --> 00:27:31,000
他们决定在下一个版本

802
00:27:31,000 --> 00:27:32,000
就是勾1.5的时候

803
00:27:32,000 --> 00:27:34,000
也就是大概半年之后发布的时候

804
00:27:34,000 --> 00:27:36,000
他们会加入正式的

805
00:27:36,000 --> 00:27:38,000
IOS的支持

806
00:27:38,000 --> 00:27:40,000
可是这个是什么意义

807
00:27:40,000 --> 00:27:42,000
它的具体的意义是什么的

808
00:27:42,000 --> 00:27:44,000
就是我可以通过用写

809
00:27:44,000 --> 00:27:48,000
用高来编出一个IOS的原生程序吗

810
00:27:48,000 --> 00:27:49,000
这个

811
00:27:49,000 --> 00:27:51,000
它应该可以用那个

812
00:27:51,000 --> 00:27:52,000
叫什么

813
00:27:52,000 --> 00:27:54,000
可以编一层一个C的

814
00:27:54,000 --> 00:27:56,000
原生代码

815
00:27:56,000 --> 00:27:57,000
就基于这个

816
00:27:57,000 --> 00:27:59,000
那个叫什么2平台的嘛

817
00:27:59,000 --> 00:28:00,000
所以代码

818
00:28:00,000 --> 00:28:01,000
可以直接在那边跑

819
00:28:01,000 --> 00:28:02,000
但至于说

820
00:28:02,000 --> 00:28:04,000
你怎么去封装成一个App

821
00:28:04,000 --> 00:28:06,000
可能后面还有一些要用到Xcode的东西

822
00:28:06,000 --> 00:28:08,000
但是对它怎么才能去掉用Coco的

823
00:28:08,000 --> 00:28:10,000
这对IP API呢

824
00:28:10,000 --> 00:28:12,000
Coco它吃的这个API它会

825
00:28:12,000 --> 00:28:14,000
它怎么才能

826
00:28:14,000 --> 00:28:18,000
就是切开苹果这一层后果的B来

827
00:28:18,000 --> 00:28:19,000
去掉一些

828
00:28:19,000 --> 00:28:22,000
对这可能可能会跟这个 Android 情况比较类似

829
00:28:22,000 --> 00:28:23,000
就是可能说是

830
00:28:23,000 --> 00:28:24,000
比如说你可以写游戏

831
00:28:24,000 --> 00:28:25,000
只要 Open G 要写

832
00:28:25,000 --> 00:28:26,000
因为 Open 写游戏的话

833
00:28:26,000 --> 00:28:28,000
可以不用那些Coco的东西嘛

834
00:28:28,000 --> 00:28:30,000
就只有Model那个

835
00:28:30,000 --> 00:28:32,000
Model 我都不知道它能不能

836
00:28:32,000 --> 00:28:33,000
就这怎么样

837
00:28:33,000 --> 00:28:34,000
但肯定如果它支持

838
00:28:34,000 --> 00:28:36,000
肯定是先支持分支

839
00:28:36,000 --> 00:28:37,000
跟 Android 一样我觉得

840
00:28:37,000 --> 00:28:39,000
就那种你不需要

841
00:28:39,000 --> 00:28:40,000
掉用很多系统的东西

842
00:28:40,000 --> 00:28:41,000
就存在做一个

843
00:28:41,000 --> 00:28:43,000
自己在那儿跑的一个英勇

844
00:28:43,000 --> 00:28:44,000
但主要就是游戏了

845
00:28:44,000 --> 00:28:45,000
那可能

846
00:28:45,000 --> 00:28:47,000
然后它给你放在一个container里面

847
00:28:47,000 --> 00:28:48,000
然后这个container 以前的你好

848
00:28:48,000 --> 00:28:50,000
有可能Coco的话

849
00:28:50,000 --> 00:28:52,000
就是走这个东西

850
00:28:52,000 --> 00:28:53,000
对但如果你要说

851
00:28:53,000 --> 00:28:55,000
你要做一个代什么

852
00:28:55,000 --> 00:28:57,000
就写一个App 普通的一个App

853
00:28:57,000 --> 00:28:59,000
然后需要用那个Coco的那些东西的东西的东西

854
00:28:59,000 --> 00:29:00,000
不是Coco那个叫什么

855
00:29:01,000 --> 00:29:03,000
Swift object 和C

856
00:29:03,000 --> 00:29:05,000
就是那个Round Time 不是那个刚才

857
00:29:05,000 --> 00:29:06,000
就是那些库叫什么

858
00:29:06,000 --> 00:29:07,000
不叫Coco

859
00:29:07,000 --> 00:29:08,000
UI 或者是

860
00:29:08,000 --> 00:29:10,000
UI 然后你可能还是要写

861
00:29:10,000 --> 00:29:12,000
用那个RJC或者用Swift 写

862
00:29:12,000 --> 00:29:14,000
然后在Exco的那边

863
00:29:14,000 --> 00:29:15,000
对大家情况这样子

864
00:29:15,000 --> 00:29:16,000
我可能

865
00:29:16,000 --> 00:29:17,000
然后就会说

866
00:29:17,000 --> 00:29:19,000
这个情况就比较有意思

867
00:29:19,000 --> 00:29:21,000
就说这个事情我们不知道

868
00:29:21,000 --> 00:29:22,000
将来会怎么样

869
00:29:22,000 --> 00:29:23,000
但是起码

870
00:29:23,000 --> 00:29:25,000
如果它在半年后真的做了这个

871
00:29:25,000 --> 00:29:28,000
这些已经是他们内部已经放出话了

872
00:29:28,000 --> 00:29:29,000
要做这个事情

873
00:29:29,000 --> 00:29:31,000
但是就等一下慢慢发布嘛

874
00:29:32,000 --> 00:29:34,000
就说Google会有这么一个语言

875
00:29:34,000 --> 00:29:36,000
能够同时监跨平台嘛

876
00:29:36,000 --> 00:29:40,000
Google的话它可以编一照普通的桌面和安卓

877
00:29:40,000 --> 00:29:41,000
包括以后的LS

878
00:29:41,000 --> 00:29:44,000
就可以用一套语言写一套逻辑

879
00:29:44,000 --> 00:29:46,000
而且服务器呢也可以用它写

880
00:29:46,000 --> 00:29:47,000
我觉得这是最妙的一点

881
00:29:47,000 --> 00:29:48,000
对对对

882
00:29:48,000 --> 00:29:51,000
所以这个其实之前在那个Google

883
00:29:51,000 --> 00:29:52,000
Google Inbox你知道吗

884
00:29:52,000 --> 00:29:54,000
就是它之前写那个邮件的口课

885
00:29:54,000 --> 00:29:56,000
他们其实在一定程度上已经做这件事情

886
00:29:56,000 --> 00:29:57,000
但不过它是进用加瓦的

887
00:29:57,000 --> 00:29:58,000
就是所有的那个

888
00:29:58,000 --> 00:29:59,000
就业务逻辑

889
00:29:59,000 --> 00:30:01,000
是用这个加瓦来写

890
00:30:01,000 --> 00:30:03,000
然后通过两个技术吧

891
00:30:03,000 --> 00:30:04,000
然后一个叫做

892
00:30:04,000 --> 00:30:05,000
GWT

893
00:30:05,000 --> 00:30:07,000
把加瓦编一成王爷板

894
00:30:07,000 --> 00:30:08,000
然后在这个

895
00:30:08,000 --> 00:30:09,000
Crom里面跑

896
00:30:10,000 --> 00:30:12,000
然后另外一个是

897
00:30:12,000 --> 00:30:13,000
真的

898
00:30:13,000 --> 00:30:14,000
真的

899
00:30:14,000 --> 00:30:15,000
GWT

900
00:30:15,000 --> 00:30:16,000
Google还在勇马

901
00:30:16,000 --> 00:30:17,000
我不确

902
00:30:17,000 --> 00:30:18,000
他们很多这个

903
00:30:18,000 --> 00:30:19,000
Gmail

904
00:30:19,000 --> 00:30:21,000
好像Gmail的后台也是

905
00:30:21,000 --> 00:30:23,000
也这么多弄出来的老机了

906
00:30:23,000 --> 00:30:25,000
OMF

907
00:30:25,000 --> 00:30:26,000
G

908
00:30:26,000 --> 00:30:27,000
这个不奇怪啊

909
00:30:27,000 --> 00:30:29,000
Google这么大一个JavaShall

910
00:30:29,000 --> 00:30:30,000
有什么好奇怪

911
00:30:30,000 --> 00:30:31,000
我不

912
00:30:31,000 --> 00:30:34,000
可是GWT不是已经早就变成

913
00:30:34,000 --> 00:30:36,000
一个可能性体维护的 framework

914
00:30:36,000 --> 00:30:37,000
什么啊

915
00:30:37,000 --> 00:30:38,000
Google不是自己在主推

916
00:30:38,000 --> 00:30:40,000
安顾到JS之类的东西吗

917
00:30:40,000 --> 00:30:41,000
爸

918
00:30:41,000 --> 00:30:42,000
那个是

919
00:30:42,000 --> 00:30:43,000
就

920
00:30:43,000 --> 00:30:44,000
我理解哈安

921
00:30:44,000 --> 00:30:45,000
Galegade

922
00:30:45,000 --> 00:30:48,000
那些是他们纯粹做网页的前段的时候

923
00:30:48,000 --> 00:30:49,000
用那个没有问题

924
00:30:49,000 --> 00:30:51,000
但如果你上次设计到这种

925
00:30:51,000 --> 00:30:52,000
挂平台的东西的话

926
00:30:52,000 --> 00:30:53,000
他们的就是

927
00:30:53,000 --> 00:30:54,000
所以的

928
00:30:54,000 --> 00:30:55,000
Canonical version

929
00:30:55,000 --> 00:30:56,000
还是加瓦版本的

930
00:30:56,000 --> 00:30:58,000
比如说GMOS这样子

931
00:30:58,000 --> 00:31:00,000
然后那个叫inbox也是这样子

932
00:31:00,000 --> 00:31:01,000
然后呢

933
00:31:01,000 --> 00:31:03,000
他们inbox不是有LS版吗

934
00:31:03,000 --> 00:31:04,000
LS版的

935
00:31:04,000 --> 00:31:05,000
就是夜无邏迹那部分

936
00:31:05,000 --> 00:31:06,000
他们是一个叫做

937
00:31:06,000 --> 00:31:09,000
J2obgc还是什么东西

938
00:31:09,000 --> 00:31:10,000
就是

939
00:31:10,000 --> 00:31:12,000
把加瓦编一成

940
00:31:12,000 --> 00:31:14,000
obgc代码的

941
00:31:14,000 --> 00:31:16,000
Found a lot of sorceries

942
00:31:16,000 --> 00:31:18,000
但是他们这个也有他的道理吗

943
00:31:18,000 --> 00:31:20,000
就是你要

944
00:31:20,000 --> 00:31:22,000
维护同一个产品的夜无邏迹

945
00:31:22,000 --> 00:31:23,000
要保证夸平台

946
00:31:23,000 --> 00:31:25,000
如果你每个平台单独写了

947
00:31:25,000 --> 00:31:26,000
写套的话那肯定

948
00:31:26,000 --> 00:31:28,000
就等于是像什么

949
00:31:28,000 --> 00:31:29,000
Bug啊

950
00:31:29,000 --> 00:31:31,000
那时候开发量就全部每个

951
00:31:31,000 --> 00:31:32,000
就有多少个平台

952
00:31:32,000 --> 00:31:33,000
你要成一多个数嘛

953
00:31:33,000 --> 00:31:34,000
他这样的话

954
00:31:34,000 --> 00:31:36,000
就只用解决一个问题

955
00:31:36,000 --> 00:31:38,000
就一套代码库

956
00:31:38,000 --> 00:31:40,000
然后之后都可以靠这个编辑

957
00:31:40,000 --> 00:31:42,000
就是我这种夸平台的编辑来解决这个问题

958
00:31:42,000 --> 00:31:44,000
在理想情况下是没有

959
00:31:44,000 --> 00:31:45,000
但是

960
00:31:45,000 --> 00:31:46,000
但是他的那个U&A的那部分

961
00:31:46,000 --> 00:31:48,000
比如说像安卓的

962
00:31:48,000 --> 00:31:50,000
U&A他是用这个原生的那个

963
00:31:50,000 --> 00:31:52,000
那个加瓦来写

964
00:31:52,000 --> 00:31:54,000
然后在LS和LBC来封装的

965
00:31:54,000 --> 00:31:56,000
然后但是

966
00:31:56,000 --> 00:31:57,000
就说

967
00:31:57,000 --> 00:31:58,000
这说夜无就是跟那种

968
00:31:58,000 --> 00:32:00,000
平台的关系不是很紧密的

969
00:32:00,000 --> 00:32:01,000
夜无邏迹那部分

970
00:32:01,000 --> 00:32:02,000
他们是用一个加瓦

971
00:32:02,000 --> 00:32:04,000
然后从我这种编辑的方法来试现

972
00:32:04,000 --> 00:32:05,000
OK

973
00:32:05,000 --> 00:32:06,000
那么同样的道理

974
00:32:06,000 --> 00:32:08,000
就说如果以后

975
00:32:08,000 --> 00:32:10,000
勾的话也可以差不多可以

976
00:32:10,000 --> 00:32:11,000
也许可以做类似的事情

977
00:32:11,000 --> 00:32:12,000
嗯

978
00:32:12,000 --> 00:32:13,000
那我说

979
00:32:13,000 --> 00:32:14,000
但这个事情

980
00:32:14,000 --> 00:32:17,000
也跟上一期我们讲的那个

981
00:32:17,000 --> 00:32:19,000
微软的计划有点相关嘛

982
00:32:19,000 --> 00:32:21,000
就是他是要声称是用那个

983
00:32:21,000 --> 00:32:24,000
Dornnet支持安卓

984
00:32:24,000 --> 00:32:26,000
和LS的夸平台的开发

985
00:32:26,000 --> 00:32:28,000
那其实我知道他的用心也很

986
00:32:28,000 --> 00:32:29,000
你很清楚啊

987
00:32:29,000 --> 00:32:31,000
就是顺带甲典丝或

988
00:32:31,000 --> 00:32:33,000
那你们都反正都一套贷马了

989
00:32:33,000 --> 00:32:34,000
那不是说面编一个

990
00:32:34,000 --> 00:32:35,000
温度是放的版本

991
00:32:35,000 --> 00:32:36,000
哈哈哈哈

992
00:32:36,000 --> 00:32:39,000
你只解决那个什么温度是放上面

993
00:32:39,000 --> 00:32:40,000
一个应用数不足

994
00:32:40,000 --> 00:32:41,000
然后这个开发者

995
00:32:41,000 --> 00:32:42,000
又不愿意开发的

996
00:32:42,000 --> 00:32:44,000
这么一个尴尬局面吧

997
00:32:44,000 --> 00:32:45,000
对

998
00:32:45,000 --> 00:32:47,000
但是算是一个机声单带声机的问题

999
00:32:47,000 --> 00:32:48,000
就

1000
00:32:48,000 --> 00:32:49,000
热性训华了

1001
00:32:49,000 --> 00:32:50,000
但是

1002
00:32:50,000 --> 00:32:51,000
所以你不想给我声单

1003
00:32:51,000 --> 00:32:53,000
那我送你个机包声

1004
00:32:53,000 --> 00:32:54,000
所有的

1005
00:32:54,000 --> 00:32:55,000
对你顺手

1006
00:32:55,000 --> 00:32:57,000
顺手帮我扩龙一个带好

1007
00:32:57,000 --> 00:32:58,000
对

1008
00:32:58,000 --> 00:32:59,000
对他就是打了那个小算盘

1009
00:32:59,000 --> 00:33:00,000
我见

1010
00:33:00,000 --> 00:33:01,000
嗯

1011
00:33:01,000 --> 00:33:04,000
那就插播的广告到这里了

1012
00:33:04,000 --> 00:33:05,000
OK

1013
00:33:05,000 --> 00:33:06,000
现在

1014
00:33:06,000 --> 00:33:07,000
正题是什么

1015
00:33:07,000 --> 00:33:08,000
嗯

1016
00:33:08,000 --> 00:33:10,000
我先放音乐吧

1017
00:33:10,000 --> 00:33:11,000
好

1018
00:33:12,000 --> 00:33:13,000
嗯

1019
00:33:13,000 --> 00:33:14,000
我实在是太稀信了

1020
00:33:14,000 --> 00:33:16,000
Sarkasm Self Test Complete

1021
00:33:16,000 --> 00:33:19,000
我们本来打算在这里插入电子游戏

1022
00:33:19,000 --> 00:33:20,000
Porto的主题曲

1023
00:33:20,000 --> 00:33:23,000
Steel Live的一个电子合成器版本

1024
00:33:23,000 --> 00:33:26,000
但是经过事后的一番研究发现

1025
00:33:26,000 --> 00:33:28,000
这首歌的授权

1026
00:33:28,000 --> 00:33:31,000
其实并不是像我原先以为的那样

1027
00:33:31,000 --> 00:33:33,000
以创作公用鼠名

1028
00:33:33,000 --> 00:33:35,000
非常业写一发布

1029
00:33:35,000 --> 00:33:37,000
原作者张森Colton

1030
00:33:37,000 --> 00:33:38,000
其实已经将这首歌的版权

1031
00:33:38,000 --> 00:33:40,000
给了Porto游戏的制作上发了

1032
00:33:41,000 --> 00:33:44,000
所以我们需要先学问一下

1033
00:33:44,000 --> 00:33:47,000
发布是否可以将它用了我们的节目里

1034
00:33:47,000 --> 00:33:49,000
而目前的现状是

1035
00:33:49,000 --> 00:33:52,000
我跟Rail在接下来的

1036
00:33:52,000 --> 00:33:57,000
内容里面会反复提到Porto以及这首歌

1037
00:33:57,000 --> 00:33:59,000
如果你不听一下的话

1038
00:33:59,000 --> 00:34:01,000
可能会有点奇怪

1039
00:34:01,000 --> 00:34:02,000
嗯

1040
00:34:02,000 --> 00:34:05,000
那里我也和大家说一声抱歉了

1041
00:34:05,000 --> 00:34:07,000
I don't blame you

1042
00:34:35,000 --> 00:34:37,000
我们开始由我们的主题曲来

1043
00:34:37,000 --> 00:34:40,000
也对

1044
00:34:40,000 --> 00:34:41,000
然后呃

1045
00:34:41,000 --> 00:34:44,000
原期其实就是看Iting工作

1046
00:34:44,000 --> 00:34:46,000
由主题曲我听眼红的

1047
00:34:46,000 --> 00:34:47,000
我也想要

1048
00:34:47,000 --> 00:34:48,000
但是

1049
00:34:48,000 --> 00:34:50,000
但是一直拖到

1050
00:34:50,000 --> 00:34:52,000
我们已经做了五期了

1051
00:34:52,000 --> 00:34:53,000
十个礼拜了过去

1052
00:34:53,000 --> 00:34:54,000
才

1053
00:34:54,000 --> 00:34:56,000
终于找到了这么一个

1054
00:34:56,000 --> 00:34:59,000
也不算非常合意

1055
00:34:59,000 --> 00:35:01,000
但是觉得还不错的主题曲

1056
00:35:01,000 --> 00:35:02,000
当然

1057
00:35:03,000 --> 00:35:05,000
如果你知道它是什么来头

1058
00:35:05,000 --> 00:35:06,000
你知道它是什么来头

1059
00:35:06,000 --> 00:35:07,000
如果你不知道的话

1060
00:35:07,000 --> 00:35:08,000
它是

1061
00:35:09,000 --> 00:35:11,000
一个游戏就是

1062
00:35:11,000 --> 00:35:12,000
如果

1063
00:35:12,000 --> 00:35:17,000
各位有听前三两期的IT公论的话

1064
00:35:17,000 --> 00:35:18,000
会注意到

1065
00:35:18,000 --> 00:35:19,000
Rail和

1066
00:35:20,000 --> 00:35:24,000
刘一都在节目之中谈到了Porto这个游戏

1067
00:35:24,000 --> 00:35:29,000
然后刚才大家听到这段选率就是Porto一代里面的

1068
00:35:30,000 --> 00:35:31,000
主题曲吧应该算

1069
00:35:32,000 --> 00:35:33,000
因为

1070
00:35:33,000 --> 00:35:36,000
虽然整个完整的

1071
00:35:36,000 --> 00:35:38,000
音乐是在

1072
00:35:38,000 --> 00:35:39,000
它是有歌了

1073
00:35:39,000 --> 00:35:41,000
它是在游戏

1074
00:35:41,000 --> 00:35:43,000
最终打传之后才播出了

1075
00:35:43,000 --> 00:35:45,000
但是其实你一开始游戏那个

1076
00:35:46,000 --> 00:35:49,000
Spoiler Alert

1077
00:35:49,000 --> 00:35:51,000
就是一开始你在游戏里面

1078
00:35:51,000 --> 00:35:53,000
剪写的那个声音机里面放的就是这一首曲

1079
00:35:53,000 --> 00:35:55,000
然后自然你打爆几的时候

1080
00:35:55,000 --> 00:35:58,000
最后出字幕的时候也是放了这个

1081
00:35:58,000 --> 00:36:00,000
就放的是这个完整版了

1082
00:36:00,000 --> 00:36:03,000
然后这首歌会被正式的长一点

1083
00:36:03,000 --> 00:36:07,000
其实我第一次听这首歌还没有玩Porto这个游戏

1084
00:36:07,000 --> 00:36:08,000
但是

1085
00:36:08,000 --> 00:36:10,000
有一个什么机缘巧合

1086
00:36:10,000 --> 00:36:11,000
我就听的那个歌

1087
00:36:11,000 --> 00:36:12,000
我觉得哇好可爱

1088
00:36:12,000 --> 00:36:13,000
真的吗

1089
00:36:13,000 --> 00:36:15,000
你在没有玩任游戏的时候就听过什么

1090
00:36:15,000 --> 00:36:16,000
嗯嗯

1091
00:36:16,000 --> 00:36:17,000
OK

1092
00:36:17,000 --> 00:36:18,000
有意思

1093
00:36:18,000 --> 00:36:20,000
然后他有歌词嘛

1094
00:36:20,000 --> 00:36:21,000
然后他有那个

1095
00:36:21,000 --> 00:36:23,000
那个有一个动画

1096
00:36:23,000 --> 00:36:25,000
效果然后你去看

1097
00:36:25,000 --> 00:36:27,000
那个感觉真的超好

1098
00:36:27,000 --> 00:36:28,000
对

1099
00:36:28,000 --> 00:36:31,000
就是就像我推荐Rail

1100
00:36:31,000 --> 00:36:33,000
就为什么Rail会花一天

1101
00:36:33,000 --> 00:36:36,000
花了一周加一周时间玩了Porto一

1102
00:36:36,000 --> 00:36:39,000
然后又花了一天一整天时间打成Porto2

1103
00:36:39,000 --> 00:36:42,000
就是因为我向他吐血强力推荐

1104
00:36:42,000 --> 00:36:43,000
我逼着他去玩

1105
00:36:43,000 --> 00:36:45,000
因为Rail其实有

1106
00:36:45,000 --> 00:36:50,000
就是玩第一任车说游戏会上兔下不写

1107
00:36:50,000 --> 00:36:54,000
在我的这个强迫之前他还是去玩了一遍

1108
00:36:54,000 --> 00:36:56,000
然后玩的对

1109
00:36:56,000 --> 00:36:58,000
所以他玩的器机也就是希望能够

1110
00:36:58,000 --> 00:37:00,000
我选用这首曲子来作为

1111
00:37:00,000 --> 00:37:02,000
游戏的主题曲

1112
00:37:02,000 --> 00:37:04,000
作为节目主题曲

1113
00:37:04,000 --> 00:37:05,000
然后希望能够

1114
00:37:05,000 --> 00:37:07,000
希望他能够理解这个游戏的

1115
00:37:07,000 --> 00:37:09,000
或者这个这首音乐的

1116
00:37:09,000 --> 00:37:11,000
有意思的地方在哪儿

1117
00:37:11,000 --> 00:37:13,000
但其实我要说到就是

1118
00:37:13,000 --> 00:37:16,000
在我玩的这些之前我光看那个歌

1119
00:37:16,000 --> 00:37:17,000
就已经觉得蛮有意思

1120
00:37:17,000 --> 00:37:18,000
但就是说

1121
00:37:18,000 --> 00:37:20,000
只是对里面的有些歌词的部分

1122
00:37:20,000 --> 00:37:22,000
跟理解不是那么深刻

1123
00:37:22,000 --> 00:37:24,000
不知道为什么他要说那件事

1124
00:37:24,000 --> 00:37:25,000
因为我记得这种你就

1125
00:37:25,000 --> 00:37:26,000
原来是这个意思

1126
00:37:26,000 --> 00:37:29,000
对 比如说对整个歌词里面的每一句

1127
00:37:29,000 --> 00:37:31,000
其实都可以在游戏里面找到线索

1128
00:37:31,000 --> 00:37:34,000
另外这个对

1129
00:37:34,000 --> 00:37:38,000
另外这个歌曲也本身有点很有那个

1130
00:37:38,000 --> 00:37:41,000
因为他本身就是一个gig姐出来

1131
00:37:41,000 --> 00:37:43,000
这首歌的这个作者是一个

1132
00:37:43,000 --> 00:37:45,000
是在gig姐非常有名的一个人

1133
00:37:45,000 --> 00:37:48,000
他的张森Culton

1134
00:37:48,000 --> 00:37:50,000
他写了很多

1135
00:37:50,000 --> 00:37:51,000
说不上快置人口

1136
00:37:51,000 --> 00:37:53,000
但是非常gig的歌

1137
00:37:53,000 --> 00:37:55,000
比如说这首歌的歌词里面有一句

1138
00:37:55,000 --> 00:37:56,000
是

1139
00:37:56,000 --> 00:37:58,000
我说我的歌词是

1140
00:37:58,000 --> 00:38:00,000
我的歌词是我的歌词

1141
00:38:00,000 --> 00:38:02,000
对 还有意思

1142
00:38:02,000 --> 00:38:04,000
对

1143
00:38:04,000 --> 00:38:08,000
有时候我们在我在公司发现这个

1144
00:38:08,000 --> 00:38:10,000
Datline又一次被推迟的时候

1145
00:38:10,000 --> 00:38:13,000
我就会在心里摸摸唱歌

1146
00:38:13,000 --> 00:38:15,000
我的歌词是我的歌词

1147
00:38:15,000 --> 00:38:17,000
我的歌词是我的歌词

1148
00:38:17,000 --> 00:38:18,000
对

1149
00:38:18,000 --> 00:38:21,000
在游戏界其实是非常非常严重的一个问题

1150
00:38:21,000 --> 00:38:25,000
就是游戏作为一种特殊的软件

1151
00:38:25,000 --> 00:38:29,000
其玩家对于跳票的容忍能力是非常非常差的

1152
00:38:29,000 --> 00:38:33,000
除非你是暴雪或者是

1153
00:38:33,000 --> 00:38:39,000
或者是wav这种大公司

1154
00:38:39,000 --> 00:38:46,000
否则你一般很难去面对玩家的愤怒

1155
00:38:46,000 --> 00:38:50,000
而且gamer其实非常容易愤怒的一个人群

1156
00:38:50,000 --> 00:38:53,000
就像之前的gamergares里面

1157
00:38:53,000 --> 00:38:56,000
连暴露出来一个现状

1158
00:38:56,000 --> 00:38:59,000
就是这些一群

1159
00:38:59,000 --> 00:39:01,000
打个几席的人

1160
00:39:01,000 --> 00:39:03,000
和而谋无处恢发

1161
00:39:03,000 --> 00:39:07,000
然后又不知道怎么跟女生交流的这样一群人

1162
00:39:07,000 --> 00:39:09,000
他们的情商是非常低的

1163
00:39:09,000 --> 00:39:12,000
所以他们基本上

1164
00:39:12,000 --> 00:39:15,000
宣扬戏也分的唯一方法就是马尼

1165
00:39:15,000 --> 00:39:18,000
然后游戏公司是被最容易被骂了

1166
00:39:18,000 --> 00:39:21,000
然后就跟狗血喷头的一方

1167
00:39:21,000 --> 00:39:24,000
所以不能按时交付软件

1168
00:39:24,000 --> 00:39:27,000
其实对于他们来说是非常严重的事

1169
00:39:27,000 --> 00:39:29,000
所以从这一点来

1170
00:39:29,000 --> 00:39:34,000
像我这种新季玩家还是蛮难等的

1171
00:39:34,000 --> 00:39:39,000
其实咱们都算是休闲性玩家

1172
00:39:39,000 --> 00:39:42,000
谷会进玩家等新家已经等了

1173
00:39:42,000 --> 00:39:45,000
不知道吧暴雪目的

1174
00:39:45,000 --> 00:39:47,000
有多少遍对

1175
00:39:47,000 --> 00:39:49,000
所以你玩Potal有什么观感

1176
00:39:49,000 --> 00:39:51,000
我先解决那个问题

1177
00:39:51,000 --> 00:39:53,000
我不知道为什么我玩Potal

1178
00:39:53,000 --> 00:39:56,000
我只能玩可能不超过半小时

1179
00:39:56,000 --> 00:39:58,000
不然就会投音响兔

1180
00:39:58,000 --> 00:40:00,000
但是我玩Potal2好像没有这个原因

1181
00:40:00,000 --> 00:40:02,000
但我想不明白为什么

1182
00:40:02,000 --> 00:40:04,000
Potal2的引擎泡头一不一样

1183
00:40:04,000 --> 00:40:08,000
我只关的看画面的时候

1184
00:40:08,000 --> 00:40:10,000
没有看出太大的区别

1185
00:40:10,000 --> 00:40:13,000
Potal2画面的惊喜成都要有1号很多

1186
00:40:13,000 --> 00:40:15,000
因为你说它精度不够

1187
00:40:15,000 --> 00:40:17,000
所以觉得投音响兔

1188
00:40:17,000 --> 00:40:20,000
也有可能是3号1代的真率不够高

1189
00:40:20,000 --> 00:40:23,000
不可能1代的游戏2007年的Potal2

1190
00:40:23,000 --> 00:40:25,000
现在的机器跑肯定没问题

1191
00:40:25,000 --> 00:40:28,000
而且我玩游戏它推荐给我的设置

1192
00:40:28,000 --> 00:40:31,000
都还是蛮高的特效的量的

1193
00:40:31,000 --> 00:40:33,000
机器应该不是问题

1194
00:40:33,000 --> 00:40:35,000
这个事情是一个挺贵

1195
00:40:35,000 --> 00:40:37,000
我玩所有的设计游戏都会

1196
00:40:37,000 --> 00:40:39,000
第一人称是角的

1197
00:40:39,000 --> 00:40:41,000
算是设计游戏

1198
00:40:41,000 --> 00:40:43,000
这个问题1,2

1199
00:40:43,000 --> 00:40:44,000
看它是射程的

1200
00:40:44,000 --> 00:40:47,000
所以就大概20分钟半小时就不行了

1201
00:40:47,000 --> 00:40:49,000
不必得再造不来

1202
00:40:49,000 --> 00:40:51,000
就是要想吐

1203
00:40:51,000 --> 00:40:53,000
你就是传说中猪羊的对呀

1204
00:40:55,000 --> 00:40:59,000
所以我认识投音响兔的风险

1205
00:40:59,000 --> 00:41:01,000
就把Potal也打完了

1206
00:41:01,000 --> 00:41:02,000
你看多了

1207
00:41:02,000 --> 00:41:04,000
太不好意思了

1208
00:41:04,000 --> 00:41:10,000
会不会是因为1代和2代里面的人相机事也不一样

1209
00:41:10,000 --> 00:41:12,000
我还真没看出来

1210
00:41:12,000 --> 00:41:13,000
我比较过一下

1211
00:41:13,000 --> 00:41:16,000
但是没有什么特别明显的区别

1212
00:41:16,000 --> 00:41:17,000
我看

1213
00:41:17,000 --> 00:41:19,000
反正这个事情就很让我奇怪

1214
00:41:19,000 --> 00:41:22,000
也可能是说我玩1的时候

1215
00:41:22,000 --> 00:41:23,000
就什么已经训练过一下了

1216
00:41:23,000 --> 00:41:25,000
然后玩的时候就觉得

1217
00:41:25,000 --> 00:41:27,000
刚之前已经折腾过那么久了

1218
00:41:27,000 --> 00:41:28,000
这次是不是就好一点

1219
00:41:28,000 --> 00:41:30,000
也有可能是2代的场景

1220
00:41:30,000 --> 00:41:33,000
相比1带来说跟空矿一点

1221
00:41:33,000 --> 00:41:35,000
就可能有那种纵身带

1222
00:41:35,000 --> 00:41:37,000
就太容易

1223
00:41:37,000 --> 00:41:38,000
它会大

1224
00:41:38,000 --> 00:41:39,000
看起来很大一些

1225
00:41:40,000 --> 00:41:41,000
嗯

1226
00:41:41,000 --> 00:41:42,000
有可能吧

1227
00:41:42,000 --> 00:41:45,000
然后你说你用一天时间打穿的Potal 2

1228
00:41:45,000 --> 00:41:46,000
我觉得还挺惊讶的

1229
00:41:46,000 --> 00:41:47,000
就是

1230
00:41:47,000 --> 00:41:50,000
我因为Potal 2我可能玩过两次

1231
00:41:50,000 --> 00:41:51,000
三次

1232
00:41:51,000 --> 00:41:52,000
对

1233
00:41:52,000 --> 00:41:56,000
我从来没有说一天在玩这个系列

1234
00:41:56,000 --> 00:41:59,000
Potal 2它的场景是比1要

1235
00:41:59,000 --> 00:42:01,000
大概是4倍左右把我估计

1236
00:42:01,000 --> 00:42:03,000
就是从我的玩的体验来看

1237
00:42:03,000 --> 00:42:06,000
就是整个你打穿的长度

1238
00:42:06,000 --> 00:42:09,000
是1的就只有19个Test Chamber吗

1239
00:42:09,000 --> 00:42:12,000
其实Potal 2不止4倍

1240
00:42:12,000 --> 00:42:14,000
因为Potal 2还有一个协作模式

1241
00:42:14,000 --> 00:42:16,000
那个是无线的对吧

1242
00:42:16,000 --> 00:42:17,000
对

1243
00:42:17,000 --> 00:42:19,000
那个其实也是

1244
00:42:19,000 --> 00:42:21,000
我不是很记得了

1245
00:42:21,000 --> 00:42:24,000
但是我相信它默认带的那些

1246
00:42:24,000 --> 00:42:26,000
Temper也是有效的

1247
00:42:26,000 --> 00:42:27,000
就是如果你有兴趣上

1248
00:42:27,000 --> 00:42:29,000
以后咱们可以试一下

1249
00:42:29,000 --> 00:42:31,000
就是它可以支持两个好友

1250
00:42:31,000 --> 00:42:32,000
对

1251
00:42:32,000 --> 00:42:34,000
就是在Potal 2最后结束的时候

1252
00:42:34,000 --> 00:42:35,000
又要举透

1253
00:42:35,000 --> 00:42:38,000
就是你会被你会看到两个机器人

1254
00:42:38,000 --> 00:42:41,000
一个是成两人是蓝两

1255
00:42:41,000 --> 00:42:45,000
然后你可以和自己同伴各自操作一个

1256
00:42:45,000 --> 00:42:48,000
然后两个机器人各自拿着一把Potal刚

1257
00:42:48,000 --> 00:42:52,000
然后等于你可以在同一时间里面有4个Potal

1258
00:42:52,000 --> 00:42:54,000
然后其中两两是互通的

1259
00:42:54,000 --> 00:42:56,000
然后就可以打出更多组合来

1260
00:42:56,000 --> 00:42:59,000
就你必须在对我配合之下

1261
00:42:59,000 --> 00:43:01,000
才可以解开一些MT

1262
00:43:01,000 --> 00:43:03,000
那你也是有剧情的吗

1263
00:43:03,000 --> 00:43:05,000
没有 没有

1264
00:43:05,000 --> 00:43:06,000
好像

1265
00:43:06,000 --> 00:43:08,000
只是一个连机模式

1266
00:43:08,000 --> 00:43:11,000
好像只是一个写个模式而已

1267
00:43:11,000 --> 00:43:13,000
所以我就说单看

1268
00:43:13,000 --> 00:43:16,000
单看主线 具形的话对

1269
00:43:16,000 --> 00:43:17,000
对对

1270
00:43:17,000 --> 00:43:19,000
具形是蛮长

1271
00:43:19,000 --> 00:43:23,000
我记得我跑完了那个叫什么

1272
00:43:23,000 --> 00:43:27,000
就是从地下爬出来

1273
00:43:27,000 --> 00:43:29,000
不是从地下爬出来

1274
00:43:29,000 --> 00:43:33,000
从这下爬出来见到最开始要拘透了

1275
00:43:33,000 --> 00:43:34,000
怎么办

1276
00:43:34,000 --> 00:43:35,000
拘透了

1277
00:43:35,000 --> 00:43:37,000
就是你找回土豆之后

1278
00:43:37,000 --> 00:43:39,000
我觉得爬出来就完了嘛

1279
00:43:39,000 --> 00:43:42,000
因为之前已经有TES 圈本有打过

1280
00:43:42,000 --> 00:43:43,000
然后之后有一个证实的务情

1281
00:43:43,000 --> 00:43:44,000
你觉得已经蛮长

1282
00:43:44,000 --> 00:43:47,000
最后想不到这段还有一遍TES 圈本

1283
00:43:47,000 --> 00:43:48,000
又有一种新一轮的嘛

1284
00:43:48,000 --> 00:43:49,000
就觉得蛮奇怪

1285
00:43:49,000 --> 00:43:56,000
因为TES 圈本本身也是他游戏最大的魅力

1286
00:43:56,000 --> 00:43:57,000
对对对

1287
00:43:57,000 --> 00:44:00,000
但是我没想到就是自开始有一个TES 圈本

1288
00:44:00,000 --> 00:44:02,000
然后中间有剧情

1289
00:44:02,000 --> 00:44:04,000
完了还有一TES 圈本

1290
00:44:04,000 --> 00:44:05,000
完全没有

1291
00:44:05,000 --> 00:44:07,000
就是这个是我出货遇到的一个地方

1292
00:44:07,000 --> 00:44:10,000
然后就是会觉得有点打到后面就

1293
00:44:10,000 --> 00:44:12,000
怎么没完没了还没完

1294
00:44:12,000 --> 00:44:14,000
对

1295
00:44:14,000 --> 00:44:17,000
但是剧情很有意思

1296
00:44:17,000 --> 00:44:17,000
就很有趣

1297
00:44:17,000 --> 00:44:20,000
然后也不会觉得很无聊的

1298
00:44:20,000 --> 00:44:21,000
OK

1299
00:44:21,000 --> 00:44:24,000
所以你有想明白一代后二代

1300
00:44:24,000 --> 00:44:28,000
你知道一代后二代的主角是同一个人吗

1301
00:44:28,000 --> 00:44:29,000
我知道

1302
00:44:29,000 --> 00:44:31,000
他从最开始接受的时间的线看出来

1303
00:44:31,000 --> 00:44:34,000
就是看出来吗

1304
00:44:34,000 --> 00:44:39,000
对你有想过为什么主角又回去重新做实验了

1305
00:44:39,000 --> 00:44:41,000
这个我都没有下过

1306
00:44:41,000 --> 00:44:42,000
为什么

1307
00:44:42,000 --> 00:44:45,000
就是一代后二代的剧情其实是脸着的

1308
00:44:45,000 --> 00:44:46,000
就是一代的结尾

1309
00:44:46,000 --> 00:44:52,000
你把Galados打报之后到的地面上

1310
00:44:52,000 --> 00:44:54,000
然后看起来在一个看见上停车场的地方

1311
00:44:54,000 --> 00:44:56,000
你会

1312
00:44:56,000 --> 00:44:58,000
但是最跑到1

1313
00:44:58,000 --> 00:45:00,000
刚刚出

1314
00:45:00,000 --> 00:45:03,000
刚刚出的时候最终的结局就是你看

1315
00:45:03,000 --> 00:45:04,000
你重点天日然后就完了

1316
00:45:04,000 --> 00:45:05,000
然后那个是假的

1317
00:45:05,000 --> 00:45:07,000
所以把那个也许那个

1318
00:45:07,000 --> 00:45:12,000
那个也是后来我看了一个网上的别人做的视频

1319
00:45:12,000 --> 00:45:14,000
就是也是他冲这个真人版的

1320
00:45:14,000 --> 00:45:18,000
真人版的一个电影小电影

1321
00:45:18,000 --> 00:45:20,000
就说他好像是冲出去之后发现

1322
00:45:20,000 --> 00:45:21,000
周围的那些景音

1323
00:45:21,000 --> 00:45:22,000
我看起来是真的

1324
00:45:22,000 --> 00:45:25,000
但其实跑到边看都是屏幕对吧

1325
00:45:25,000 --> 00:45:25,000
不是

1326
00:45:25,000 --> 00:45:28,000
就是就是在Potal 2出现之后

1327
00:45:28,000 --> 00:45:30,000
跑到1有了一个update

1328
00:45:30,000 --> 00:45:31,000
有一个patch

1329
00:45:31,000 --> 00:45:33,000
有一个patch把结局改了

1330
00:45:33,000 --> 00:45:37,000
就是你重建天日之后自己受伤了

1331
00:45:37,000 --> 00:45:39,000
然后你

1332
00:45:39,000 --> 00:45:43,000
你低人生视角会感觉到自己正在被一个机器人

1333
00:45:43,000 --> 00:45:45,000
正在被一个什么东西的网会拖

1334
00:45:45,000 --> 00:45:47,000
然后一个机器人的声音说

1335
00:45:47,000 --> 00:45:50,000
请你保持一个party submission

1336
00:45:50,000 --> 00:45:53,000
就是要参加party的这么一个姿势

1337
00:45:53,000 --> 00:45:54,000
然后他把你慢慢往回拖

1338
00:45:54,000 --> 00:45:58,000
然后那个整个的画面才按下去

1339
00:45:58,000 --> 00:46:00,000
然后一代二代之间的巨型

1340
00:46:00,000 --> 00:46:03,000
其实会其实可以通过一个

1341
00:46:03,000 --> 00:46:04,000
一个一部漫画解释

1342
00:46:04,000 --> 00:46:09,000
就是wov专门发了一本漫画

1343
00:46:09,000 --> 00:46:12,000
叫做Potal的labrat

1344
00:46:12,000 --> 00:46:13,000
然后在

1345
00:46:13,000 --> 00:46:17,000
对在这里面解释了整个整件事情来用去卖

1346
00:46:17,000 --> 00:46:19,000
就是

1347
00:46:19,000 --> 00:46:20,000
如果你玩过Potal的话

1348
00:46:20,000 --> 00:46:21,000
你可能会好奇

1349
00:46:21,000 --> 00:46:22,000
就是为什么里面能都死了

1350
00:46:22,000 --> 00:46:25,000
他们是怎么死的

1351
00:46:25,000 --> 00:46:28,000
然后labrat这个漫画其实就解释了这一点

1352
00:46:28,000 --> 00:46:30,000
就是

1353
00:46:30,000 --> 00:46:32,000
但是这个在

1354
00:46:32,000 --> 00:46:32,000
叫什么

1355
00:46:32,000 --> 00:46:34,000
在那个Potal2进场的时候

1356
00:46:34,000 --> 00:46:37,000
就最开始那一些的不对

1357
00:46:37,000 --> 00:46:40,000
所以在Potal2最后那部分的test chamber

1358
00:46:40,000 --> 00:46:42,000
你每次出来不是这个电梯吗

1359
00:46:42,000 --> 00:46:46,000
然后它墙面上不是有一堆破碎的屏幕

1360
00:46:46,000 --> 00:46:48,000
能够看出一点端泥

1361
00:46:48,000 --> 00:46:50,000
然后机器人什么

1362
00:46:50,000 --> 00:46:52,000
突然发标了

1363
00:46:52,000 --> 00:46:53,000
然后把那些人都干掉了

1364
00:46:53,000 --> 00:46:56,000
其实在labatory sign

1365
00:46:56,000 --> 00:46:59,000
abture sign slaftory里面

1366
00:46:59,000 --> 00:47:01,000
人们研究出来了

1367
00:47:01,000 --> 00:47:03,000
就是真正的人工智能

1368
00:47:03,000 --> 00:47:06,000
Glados这个名字的缩写

1369
00:47:06,000 --> 00:47:11,000
就是整个片中的女人工智能的名字

1370
00:47:11,000 --> 00:47:13,000
Glados它的缩写就是

1371
00:47:13,000 --> 00:47:15,000
General Lifeform

1372
00:47:15,000 --> 00:47:19,000
and this GoPro is just the dust

1373
00:47:19,000 --> 00:47:20,000
DOS这个部分就是dos

1374
00:47:20,000 --> 00:47:22,000
然后前面是General Lifeform

1375
00:47:22,000 --> 00:47:26,000
就是它是一种真正有智能的人工智能

1376
00:47:26,000 --> 00:47:27,000
但是人们发现一个问题

1377
00:47:27,000 --> 00:47:31,000
就是在漫画里面有讲说

1378
00:47:31,000 --> 00:47:36,000
每一个人工智能被打开之后

1379
00:47:36,000 --> 00:47:38,000
就是把它推上之后

1380
00:47:38,000 --> 00:47:44,000
大约在16分之1个Pico second之后

1381
00:47:44,000 --> 00:47:46,000
这个人工智能就会试图把人开

1382
00:47:46,000 --> 00:47:50,000
就会开始试图插人

1383
00:47:50,000 --> 00:47:51,000
对

1384
00:47:51,000 --> 00:47:52,000
然后他们的解决方法

1385
00:47:52,000 --> 00:47:54,000
就是拼命网这个人工智能上面加

1386
00:47:54,000 --> 00:47:55,000
所谓的Core

1387
00:47:55,000 --> 00:47:57,000
PersonalityCore

1388
00:47:57,000 --> 00:47:59,000
就是有一个PersonalityCore

1389
00:47:59,000 --> 00:48:00,000
是所谓的MoralCore

1390
00:48:00,000 --> 00:48:03,000
就是让这个人工智能有道德意识

1391
00:48:03,000 --> 00:48:07,000
让他意识到道德杀人是不对的

1392
00:48:07,000 --> 00:48:10,000
然后他这个装上Core之后

1393
00:48:10,000 --> 00:48:13,000
人工智能意识到杀人是不对的

1394
00:48:13,000 --> 00:48:15,000
所以他就换了一个方法杀人

1395
00:48:15,000 --> 00:48:20,000
他在有一个一问词叫做

1396
00:48:20,000 --> 00:48:23,000
Bring Your Cat to Work

1397
00:48:23,000 --> 00:48:26,000
就是带你的猫来上班的一问词上面

1398
00:48:26,000 --> 00:48:29,000
把神经读弃接入到通通系统

1399
00:48:29,000 --> 00:48:30,000
然后把所有人都杀了

1400
00:48:30,000 --> 00:48:31,000
除了一个人

1401
00:48:31,000 --> 00:48:35,000
主角是一个Test object

1402
00:48:35,000 --> 00:48:37,000
然后他不是工作人员

1403
00:48:37,000 --> 00:48:39,000
就是Glato杀了所有的工作人员

1404
00:48:39,000 --> 00:48:41,000
但是工作人员里面有一个人活下来

1405
00:48:41,000 --> 00:48:43,000
这个人叫做

1406
00:48:44,000 --> 00:48:45,000
叫什么

1407
00:48:45,000 --> 00:48:45,000
忘了

1408
00:48:45,000 --> 00:48:50,000
但是就是Liberate就是以他的视角来解释

1409
00:48:50,000 --> 00:48:52,000
整个Porto的一问

1410
00:48:52,000 --> 00:48:58,000
就是Glato杀了所有的工作人员之后开始

1411
00:48:58,000 --> 00:49:00,000
试图想要找到这个工作人员

1412
00:49:00,000 --> 00:49:02,000
然后他继续做实验

1413
00:49:02,000 --> 00:49:08,000
因为ApriceScience在后期已经找不到合适的实验对象

1414
00:49:08,000 --> 00:49:11,000
就是如果你有仔细把这个

1415
00:49:11,000 --> 00:49:13,000
仔细听Porto 2里面的那些对白的话

1416
00:49:13,000 --> 00:49:17,000
你会发现Porto 2一开始是受美国军方的支持

1417
00:49:18,000 --> 00:49:19,000
Porto 2

1418
00:49:19,000 --> 00:49:22,000
Porto 2里面ApriceScience的历史很有意思

1419
00:49:22,000 --> 00:49:26,000
ApriceScience一开始是给美国军方提供

1420
00:49:27,000 --> 00:49:30,000
烧而咳嗦的就是预联的预公司

1421
00:49:30,000 --> 00:49:34,000
然后他他的总裁

1422
00:49:34,000 --> 00:49:37,000
发现预联大叔大火成功之后

1423
00:49:37,000 --> 00:49:40,000
开始急速转向

1424
00:49:40,000 --> 00:49:42,000
开始研究这种叫做

1425
00:49:42,000 --> 00:49:44,000
可以

1426
00:49:44,000 --> 00:49:48,000
就是操空间打开传送美国传制

1427
00:49:48,000 --> 00:49:49,000
开始研发这种传制

1428
00:49:49,000 --> 00:49:52,000
然后一开始的时候美国都有点大

1429
00:49:52,000 --> 00:49:53,000
对

1430
00:49:53,000 --> 00:49:56,000
美国政府给他提供了优秀的军事人材来

1431
00:49:58,000 --> 00:50:01,000
应该是经过挑选的士兵来提供的作实验

1432
00:50:01,000 --> 00:50:05,000
到后来他不得不花钱来顾人作实验

1433
00:50:05,000 --> 00:50:08,000
到最后他连顾人都顾不到了

1434
00:50:08,000 --> 00:50:11,000
只能请强迫自己的顾原人去做实验

1435
00:50:12,000 --> 00:50:16,000
然后到Gladdos的时候

1436
00:50:16,000 --> 00:50:18,000
这个传统还是延续了下来

1437
00:50:18,000 --> 00:50:22,000
就是Gladdos想要找到维尼紧存的顾原人去做实验

1438
00:50:22,000 --> 00:50:30,000
然后这个顾原在机员巧合说的顾意把那个女主角的名字

1439
00:50:30,000 --> 00:50:33,000
推到了整个实验名单的第一位

1440
00:50:34,000 --> 00:50:36,000
就是本来是1600多个后者

1441
00:50:36,000 --> 00:50:38,000
然后他一下子变成了第一个人

1442
00:50:38,000 --> 00:50:39,000
然后就被换一行去做的事

1443
00:50:39,000 --> 00:50:40,000
好

1444
00:50:40,000 --> 00:50:41,000
OK

1445
00:50:41,000 --> 00:50:42,000
这样的

1446
00:50:42,000 --> 00:50:44,000
对 然后看那个漫画

1447
00:50:44,000 --> 00:50:49,000
对 你在这个游戏里面所看到的强迫上的所有的图压

1448
00:50:49,000 --> 00:50:51,000
也都是这个画的

1449
00:50:51,000 --> 00:50:53,000
因为他画的精神分裂症

1450
00:50:53,000 --> 00:50:56,000
然后他在他精神不正常的时候

1451
00:50:56,000 --> 00:50:59,000
他认为自己随身带的那个

1452
00:50:59,000 --> 00:51:02,000
就是上面画了新型图案的那个

1453
00:51:02,000 --> 00:51:06,000
Cube是会跟他对画的

1454
00:51:06,000 --> 00:51:08,000
是他的唯一的 compagnie

1455
00:51:08,000 --> 00:51:09,000
对

1456
00:51:09,000 --> 00:51:14,000
但是这个这个这个秦姐在后面的对白中有机箱被拿来恶搞

1457
00:51:14,000 --> 00:51:22,000
就是比如说在游戏界或者是在西方的O-Mail戏界

1458
00:51:22,000 --> 00:51:27,000
最常最最为人所知的一个Jorgon就是The KKC Line

1459
00:51:27,000 --> 00:51:32,000
然后正确的回应是And the Cube must die for it

1460
00:51:32,000 --> 00:51:33,000
对

1461
00:51:33,000 --> 00:51:38,000
就是在Portal 1带里面应该是第17关我记的

1462
00:51:38,000 --> 00:51:40,000
Test 717

1463
00:51:40,000 --> 00:51:44,000
你用一个上面画的新型的Cube去挡了很多

1464
00:51:44,000 --> 00:51:46,000
你用他替你挡了很多子弹

1465
00:51:46,000 --> 00:51:49,000
因为你不拿他挡的话就死了

1466
00:51:49,000 --> 00:51:51,000
然后等到这个关卡的最结尾

1467
00:51:51,000 --> 00:51:55,000
给拉倒是强迫你把这个Cube正到一个融入里去

1468
00:51:55,000 --> 00:52:00,000
然后你发现自己无论如何都只能把这个Cube正进融入入入里面

1469
00:52:00,000 --> 00:52:02,000
然后才能过这个Test 7本

1470
00:52:02,000 --> 00:52:06,000
然后当你把那个Cube正进去之后给拉倒是对你说

1471
00:52:06,000 --> 00:52:11,000
你把他正进去的速度比其他90%的那块

1472
00:52:14,000 --> 00:52:16,000
是挺黑的

1473
00:52:16,000 --> 00:52:21,000
对你面对白我觉得是这个是你最有内力的地方

1474
00:52:21,000 --> 00:52:30,000
他通过一种非常地humanization的方式来让你觉得自己是一个Test object

1475
00:52:30,000 --> 00:52:33,000
这个人工只能根本不在乎你是谁

1476
00:52:33,000 --> 00:52:35,000
你在其他游戏里面你是主角

1477
00:52:35,000 --> 00:52:39,000
但在这里里面你是一个是任人百步的这么一个角色

1478
00:52:39,000 --> 00:52:44,000
而且就是里面的那种对白的那种AI对话的那种语气

1479
00:52:44,000 --> 00:52:46,000
不知道怎么回事我老是想经理

1480
00:52:46,000 --> 00:52:49,000
想经理说话的感情

1481
00:52:49,000 --> 00:52:51,000
超级Match

1482
00:52:53,000 --> 00:52:56,000
你是说Gladdows还是说后面的Witley

1483
00:52:56,000 --> 00:52:58,000
Gladdows就已经是这样

1484
00:52:58,000 --> 00:52:59,000
What?

1485
00:52:59,000 --> 00:53:02,000
就觉得很有意思啊你不觉得吗

1486
00:53:03,000 --> 00:53:04,000
是Cumhamman

1487
00:53:07,000 --> 00:53:10,000
其实我觉得那个那个那个那个吊吊以后

1488
00:53:10,000 --> 00:53:13,000
我们也可以经常拿来用以后就适合我们这个节目

1489
00:53:19,000 --> 00:53:22,000
对Torren和Gladdows其实同一人陪你

1490
00:53:23,000 --> 00:53:24,000
啊快点

1491
00:53:24,000 --> 00:53:27,000
对等一下Torren是有财词吗

1492
00:53:27,000 --> 00:53:28,000
有啊就是

1493
00:53:28,000 --> 00:53:30,000
We are you

1494
00:53:32,000 --> 00:53:35,000
No heart failings

1495
00:53:37,000 --> 00:53:39,000
他好像唱歌也是他吧

1496
00:53:39,000 --> 00:53:41,000
对唱歌两个人是他吗

1497
00:53:41,000 --> 00:53:43,000
对这个声音唱好好体格节

1498
00:53:44,000 --> 00:53:45,000
对

1499
00:53:46,000 --> 00:53:48,000
回到我们的狗狗

1500
00:53:48,000 --> 00:53:49,000
吊进这个

1501
00:53:50,000 --> 00:53:53,000
一旦变身成Gamer就变不回来了

1502
00:53:54,000 --> 00:53:55,000
回到那个狗狗

1503
00:53:55,000 --> 00:53:57,000
对为什么我们要选择这个

1504
00:53:57,000 --> 00:53:59,000
或者说我为什么要选择Portal的主意取来

1505
00:54:00,000 --> 00:54:03,000
做那个狗狗狗主意取呢

1506
00:54:04,000 --> 00:54:08,000
就是因为我觉得Portal的这个居形设定啊

1507
00:54:08,000 --> 00:54:11,000
就是RTVs and Titans and Wint Mad

1508
00:54:12,000 --> 00:54:14,000
跟Currental Panic多数点关联

1509
00:54:15,000 --> 00:54:19,000
对就比如说这个那个Portal里面

1510
00:54:19,000 --> 00:54:22,000
你也会听到比如说那个系统

1511
00:54:22,000 --> 00:54:26,000
报错说Core Corruption at 100%

1512
00:54:27,000 --> 00:54:29,000
就和那个狗狗狗狗狗狗狗狗狗狗狗

1513
00:54:29,000 --> 00:54:30,000
多少有点

1514
00:54:30,000 --> 00:54:32,000
而且你在游戏里面是

1515
00:54:32,000 --> 00:54:34,000
是literally把那个

1516
00:54:36,000 --> 00:54:39,000
把Gladdows身上的Core一个一个摘下来

1517
00:54:39,000 --> 00:54:42,000
然后然后dump到那个融入里面去

1518
00:54:42,000 --> 00:54:44,000
对真正的Coredow

1519
00:54:44,000 --> 00:54:46,000
对真正的Coredump

1520
00:54:47,000 --> 00:54:48,000
其实就要解释啊

1521
00:54:48,000 --> 00:54:50,000
这里个Core和那个Core还

1522
00:54:50,000 --> 00:54:52,000
此Core非比Core

1523
00:54:52,000 --> 00:54:53,000
对

1524
00:54:53,000 --> 00:54:57,000
为什么Coredump要点Coredump

1525
00:54:57,000 --> 00:54:59,000
Core是来自于哪儿

1526
00:54:59,000 --> 00:55:03,000
可能就可能就已经有两个停重

1527
00:55:03,000 --> 00:55:06,000
把我们的节目叫做叫成硬核恐慌

1528
00:55:06,000 --> 00:55:08,000
哈克斯帅的

1529
00:55:08,000 --> 00:55:09,000
哈克斯帅的

1530
00:55:09,000 --> 00:55:12,000
哈克斯帅的

1531
00:55:12,000 --> 00:55:15,000
有software盘的

1532
00:55:15,000 --> 00:55:18,000
因为我们的节目介绍里面有提到这两个词

1533
00:55:18,000 --> 00:55:21,000
然后一想起来可能就

1534
00:55:21,000 --> 00:55:23,000
一下就不明白那个组合的顺序了

1535
00:55:23,000 --> 00:55:26,000
也挺合复

1536
00:55:26,000 --> 00:55:28,000
这个错误还挺常见的

1537
00:55:28,000 --> 00:55:33,000
对如果如果有这个

1538
00:55:33,000 --> 00:55:34,000
不那么哈克斯帅的

1539
00:55:34,000 --> 00:55:36,000
听众需要在听众的节目的话

1540
00:55:36,000 --> 00:55:37,000
那当然还是解释一下吧

1541
00:55:37,000 --> 00:55:39,000
就是哈克斯的词其实是来自

1542
00:55:39,000 --> 00:55:42,000
最早应该是来自音乐界吧

1543
00:55:42,000 --> 00:55:48,000
哈克斯是指比较直接粗暴

1544
00:55:48,000 --> 00:55:52,000
疯狂程度更强烈的东西

1545
00:55:52,000 --> 00:55:53,000
就是音乐

1546
00:55:53,000 --> 00:55:55,000
比如哈克斯的Rock

1547
00:55:55,000 --> 00:55:57,000
或者是哈克斯Mathau

1548
00:55:57,000 --> 00:56:01,000
就是非常强调那种

1549
00:56:01,000 --> 00:56:05,000
这种音乐形式的纯粹性和激烈性的

1550
00:56:05,000 --> 00:56:08,000
然后这个词间间

1551
00:56:08,000 --> 00:56:10,000
延伸到了

1552
00:56:10,000 --> 00:56:14,000
就开始音乐的流派就装外的一种

1553
00:56:14,000 --> 00:56:16,000
但是这个词间间

1554
00:56:16,000 --> 00:56:18,000
延伸到了日常用里面

1555
00:56:18,000 --> 00:56:21,000
就是形容某种事情非常强烈

1556
00:56:21,000 --> 00:56:25,000
或者是比库更加激烈

1557
00:56:25,000 --> 00:56:28,000
程度很高的一种状态就是哈克斯

1558
00:56:28,000 --> 00:56:31,000
比如说我是一个哈克斯国粉

1559
00:56:31,000 --> 00:56:35,000
或者是我是一个哈克斯的程度的 program

1560
00:56:35,000 --> 00:56:41,000
然后这个词还被逆向延伸

1561
00:56:41,000 --> 00:56:43,000
除了 softcore

1562
00:56:43,000 --> 00:56:45,000
这种延伸词

1563
00:56:45,000 --> 00:56:49,000
就好像韩国被派声出什么chisp啊

1564
00:56:49,000 --> 00:56:51,000
就是这样

1565
00:56:51,000 --> 00:56:53,000
挺有意思的

1566
00:56:53,000 --> 00:57:00,000
但是哈克斯跟Kernel是完全没有关系的

1567
00:57:00,000 --> 00:57:02,000
两件事情的

1568
00:57:02,000 --> 00:57:04,000
Kernel在计算机方面里面

1569
00:57:04,000 --> 00:57:07,000
一般只掏得起头里面

1570
00:57:07,000 --> 00:57:10,000
直接和硬件相关的那部分

1571
00:57:10,000 --> 00:57:13,000
或者说直接管理

1572
00:57:13,000 --> 00:57:16,000
你平时做一个用户

1573
00:57:16,000 --> 00:57:18,000
所用到的程序的程序

1574
00:57:18,000 --> 00:57:21,000
对不知道这样的解释清楚了没有

1575
00:57:21,000 --> 00:57:22,000
但同时

1576
00:57:22,000 --> 00:57:24,000
但我觉得可能这里混小的是

1577
00:57:24,000 --> 00:57:25,000
因为哈克斯国粉

1578
00:57:25,000 --> 00:57:27,000
也有core这些概念嘛

1579
00:57:27,000 --> 00:57:29,000
然后我们马上要说这个core dump

1580
00:57:29,000 --> 00:57:30,000
然后又会有core

1581
00:57:30,000 --> 00:57:32,000
但其实这个core那core是没有关系的

1582
00:57:32,000 --> 00:57:34,000
对core dump是

1583
00:57:36,000 --> 00:57:40,000
是程序出错之后的一种行为

1584
00:57:40,000 --> 00:57:42,000
就是

1585
00:57:42,000 --> 00:57:44,000
尤其是在unix下面

1586
00:57:44,000 --> 00:57:47,000
有些程序如果它出错了的话

1587
00:57:47,000 --> 00:57:51,000
它会把自己在内存之中的直行状态

1588
00:57:52,000 --> 00:57:54,000
存储的硬款上面

1589
00:57:54,000 --> 00:57:56,000
或者是某种方式呈现给你

1590
00:57:57,000 --> 00:57:58,000
让你可以

1591
00:57:58,000 --> 00:58:00,000
这个你试试程序啊

1592
00:58:00,000 --> 00:58:01,000
让程序还可以去

1593
00:58:01,000 --> 00:58:06,000
研究这件事情的案发现场

1594
00:58:06,000 --> 00:58:09,000
然后这个行为叫做core dump

1595
00:58:09,000 --> 00:58:11,000
可是为什么要叫core dump

1596
00:58:11,000 --> 00:58:14,000
因为core来自于早期的一种叫做

1597
00:58:14,000 --> 00:58:16,000
辞心存储气的东西

1598
00:58:16,000 --> 00:58:19,000
就是内存的祖宗

1599
00:58:19,000 --> 00:58:20,000
现代内存的祖宗

1600
00:58:20,000 --> 00:58:21,000
对

1601
00:58:21,000 --> 00:58:23,000
什么是辞心存储气呢

1602
00:58:23,000 --> 00:58:28,000
就是简单来说就是把导线绕在辞圈上面

1603
00:58:28,000 --> 00:58:29,000
辞体啊

1604
00:58:29,000 --> 00:58:30,000
对

1605
00:58:30,000 --> 00:58:31,000
就是一个辞的华

1606
00:58:31,000 --> 00:58:32,000
然后你在上面绕导线

1607
00:58:32,000 --> 00:58:34,000
然后三泡三泡也它就可以存储

1608
00:58:34,000 --> 00:58:36,000
有辞和无辞两种状态

1609
00:58:36,000 --> 00:58:37,000
对

1610
00:58:37,000 --> 00:58:39,000
就可以就这个

1611
00:58:39,000 --> 00:58:41,000
就可以表示零和一了吗

1612
00:58:41,000 --> 00:58:42,000
对

1613
00:58:42,000 --> 00:58:43,000
早期的内存就是这样做出来

1614
00:58:43,000 --> 00:58:46,000
我记得我还读过一篇考古文章说

1615
00:58:46,000 --> 00:58:49,000
我国早期五六十年代

1616
00:58:49,000 --> 00:58:52,000
自行研制器上机的时候

1617
00:58:52,000 --> 00:58:55,000
还进行科学家们的日常生物

1618
00:58:55,000 --> 00:58:57,000
日常工作之一就是绕辞修

1619
00:58:57,000 --> 00:59:01,000
就是把导线在辞点上面绕

1620
00:59:01,000 --> 00:59:03,000
然后做出一个做出一块内存

1621
00:59:03,000 --> 00:59:04,000
对

1622
00:59:04,000 --> 00:59:05,000
而且这个对

1623
00:59:05,000 --> 00:59:06,000
这个内存有多大呢

1624
00:59:06,000 --> 00:59:08,000
就是你绕一个辞修

1625
00:59:08,000 --> 00:59:10,000
你可以你把导线在辞修成长一圈

1626
00:59:10,000 --> 00:59:12,000
你可以绕出一个bit

1627
00:59:12,000 --> 00:59:13,000
然后可以想象一下

1628
00:59:13,000 --> 00:59:16,000
你要绕出16k需要绕多

1629
00:59:16,000 --> 00:59:18,000
它一个辞修大概就跟一个

1630
00:59:18,000 --> 00:59:21,000
就是一枚借质的那个大家差不多

1631
00:59:21,000 --> 00:59:23,000
可能你要把这么小的东西绕上

1632
00:59:23,000 --> 00:59:25,000
几千个然后你才有了

1633
00:59:25,000 --> 00:59:27,000
几K的内存

1634
00:59:27,000 --> 00:59:29,000
8K的内存可以吗

1635
00:59:29,000 --> 00:59:30,000
对

1636
00:59:30,000 --> 00:59:31,000
所以其实

1637
00:59:31,000 --> 00:59:33,000
大家可以去找一下

1638
00:59:33,000 --> 00:59:35,000
我们当时给个连接在

1639
00:59:35,000 --> 00:59:36,000
这个nodes里面好

1640
00:59:36,000 --> 00:59:38,000
你可以去找一下相关的图片来看

1641
00:59:38,000 --> 00:59:39,000
反正这个视觉上

1642
00:59:39,000 --> 00:59:41,000
就算你想起在边辨子的感觉

1643
00:59:41,000 --> 00:59:42,000
对

1644
00:59:42,000 --> 00:59:43,000
其实还是想象正常的

1645
00:59:43,000 --> 00:59:45,000
就是你要仔细想象一下

1646
00:59:45,000 --> 00:59:47,000
当初那么大的一个东西

1647
00:59:47,000 --> 00:59:50,000
现在缩在可能你绕远看不见的一个

1648
00:59:50,000 --> 00:59:52,000
一个迟存的里面

1649
00:59:52,000 --> 00:59:54,000
而且是紧紧过去了

1650
00:59:54,000 --> 00:59:56,000
560两人

1651
00:59:56,000 --> 00:59:58,000
紧紧不

1652
00:59:58,000 --> 01:00:00,000
但是这个Core这个词

1653
01:00:00,000 --> 01:00:04,000
就是Magnetic Core里面的这个Core

1654
01:00:04,000 --> 01:00:06,000
一直延续到今天

1655
01:00:06,000 --> 01:00:08,000
有时候还是会说CoreDump

1656
01:00:08,000 --> 01:00:11,000
这个Core最开始的来源就是远自于此

1657
01:00:11,000 --> 01:00:13,000
所以其实CoreDump

1658
01:00:13,000 --> 01:00:15,000
就是内存进行绕出来而已

1659
01:00:15,000 --> 01:00:16,000
对

1660
01:00:16,000 --> 01:00:17,000
找到这个意思

1661
01:00:17,000 --> 01:00:18,000
没错

1662
01:00:18,000 --> 01:00:20,000
然后提到Magnetic Core

1663
01:00:20,000 --> 01:00:22,000
不能不提到一个奇人

1664
01:00:22,000 --> 01:00:23,000
就是一个华人

1665
01:00:23,000 --> 01:00:24,000
叫王安

1666
01:00:24,000 --> 01:00:25,000
他是

1667
01:00:25,000 --> 01:00:27,000
王安不是李安

1668
01:00:27,000 --> 01:00:28,000
对

1669
01:00:28,000 --> 01:00:29,000
王安不是李安

1670
01:00:29,000 --> 01:00:30,000
现在的

1671
01:00:30,000 --> 01:00:31,000
王安是

1672
01:00:31,000 --> 01:00:33,000
现在李安是图输出软的话

1673
01:00:33,000 --> 01:00:36,000
那时候的王安是一个传奇人物

1674
01:00:36,000 --> 01:00:38,000
他是民国191几年

1675
01:00:38,000 --> 01:00:39,000
应该是

1676
01:00:39,000 --> 01:00:41,000
出生在中国

1677
01:00:41,000 --> 01:00:43,000
他在中国出生了

1678
01:00:43,000 --> 01:00:44,000
他是中国出生了

1679
01:00:44,000 --> 01:00:45,000
对

1680
01:00:45,000 --> 01:00:47,000
然后他去美国

1681
01:00:47,000 --> 01:00:50,000
会成为一个计算机科学的

1682
01:00:50,000 --> 01:00:51,000
对

1683
01:00:51,000 --> 01:00:53,000
他对于

1684
01:00:53,000 --> 01:00:55,000
我们刚才说的

1685
01:00:55,000 --> 01:00:56,000
辞心之种东西

1686
01:00:56,000 --> 01:00:57,000
做出了巨大的贡献

1687
01:00:57,000 --> 01:00:58,000
他可能又

1688
01:00:58,000 --> 01:01:02,000
三四十项专利和辞心相关

1689
01:01:02,000 --> 01:01:04,000
然后1956年的时候

1690
01:01:04,000 --> 01:01:06,000
IBM公司用50万美元

1691
01:01:06,000 --> 01:01:08,000
从他手里买的状利

1692
01:01:08,000 --> 01:01:09,000
1956年的50万美元

1693
01:01:09,000 --> 01:01:10,000
是个什么概念

1694
01:01:10,000 --> 01:01:11,000
大概三多年多了

1695
01:01:11,000 --> 01:01:12,000
他得算一下

1696
01:01:12,000 --> 01:01:13,000
对

1697
01:01:13,000 --> 01:01:14,000
算上偷偷膨胀的话

1698
01:01:14,000 --> 01:01:16,000
是一个天文说字

1699
01:01:16,000 --> 01:01:17,000
这像一了吧

1700
01:01:17,000 --> 01:01:18,000
过一件

1701
01:01:18,000 --> 01:01:19,000
对

1702
01:01:19,000 --> 01:01:21,000
然后他当时创建了

1703
01:01:21,000 --> 01:01:23,000
王安电脑

1704
01:01:23,000 --> 01:01:24,000
在美国

1705
01:01:24,000 --> 01:01:25,000
出的

1706
01:01:25,000 --> 01:01:27,000
这个

1707
01:01:27,000 --> 01:01:30,000
出的设备叫做自处理器

1708
01:01:30,000 --> 01:01:31,000
其实就是个打字机

1709
01:01:31,000 --> 01:01:34,000
但是你可以先

1710
01:01:34,000 --> 01:01:36,000
遇览自己要打的东西

1711
01:01:36,000 --> 01:01:37,000
然后在那打算

1712
01:01:37,000 --> 01:01:39,000
在别人家

1713
01:01:39,000 --> 01:01:40,000
都还用一个

1714
01:01:40,000 --> 01:01:41,000
就是

1715
01:01:41,000 --> 01:01:43,000
有点像计算器养的显示器

1716
01:01:43,000 --> 01:01:44,000
就是单行

1717
01:01:44,000 --> 01:01:46,000
只能显示单个字母的

1718
01:01:46,000 --> 01:01:47,000
显示器的时候

1719
01:01:47,000 --> 01:01:49,000
他已经出了一个

1720
01:01:49,000 --> 01:01:51,000
带这个应机设备

1721
01:01:51,000 --> 01:01:52,000
应机是

1722
01:01:52,000 --> 01:01:53,000
CIRT的这么一个版本

1723
01:01:53,000 --> 01:01:54,000
所以那时候是

1724
01:01:54,000 --> 01:01:56,000
非常非常了不起的一个人

1725
01:01:56,000 --> 01:01:58,000
那个王式电脑就是软案吗

1726
01:01:58,000 --> 01:01:59,000
对

1727
01:01:59,000 --> 01:02:00,000
就是王吗

1728
01:02:00,000 --> 01:02:01,000
那个蓝底白字的一个王

1729
01:02:01,000 --> 01:02:02,000
就是

1730
01:02:02,000 --> 01:02:04,000
就是王安床的公司

1731
01:02:04,000 --> 01:02:06,000
这个可能在国内

1732
01:02:06,000 --> 01:02:07,000
有流行过吗

1733
01:02:07,000 --> 01:02:08,000
好像在90年代

1734
01:02:08,000 --> 01:02:10,000
出的软件有见过吧

1735
01:02:10,000 --> 01:02:12,000
那个时候好像是有一个自处理器的

1736
01:02:12,000 --> 01:02:17,000
但是那次处理器是房安电脑出了吗

1737
01:02:17,000 --> 01:02:19,000
我不但

1738
01:02:19,000 --> 01:02:21,000
但我记得在国内好像

1739
01:02:21,000 --> 01:02:23,000
我三号在哪里

1740
01:02:23,000 --> 01:02:24,000
有印象

1741
01:02:24,000 --> 01:02:25,000
说发现都国内

1742
01:02:25,000 --> 01:02:26,000
也是有一段时间

1743
01:02:26,000 --> 01:02:27,000
有进口过去的

1744
01:02:27,000 --> 01:02:28,000
那时候应该是

1745
01:02:28,000 --> 01:02:29,000
我

1746
01:02:29,000 --> 01:02:31,000
那时候应该是四通吧

1747
01:02:31,000 --> 01:02:32,000
四通比较

1748
01:02:32,000 --> 01:02:34,000
那个是国产的嘛

1749
01:02:34,000 --> 01:02:35,000
但是王式没有

1750
01:02:35,000 --> 01:02:37,000
就有产品进到中国吗

1751
01:02:37,000 --> 01:02:38,000
好像有

1752
01:02:38,000 --> 01:02:40,000
这个我不知道是确定的

1753
01:02:40,000 --> 01:02:41,000
有点久了

1754
01:02:42,000 --> 01:02:43,000
总之大概

1755
01:02:43,000 --> 01:02:44,000
六七十年代的时候

1756
01:02:44,000 --> 01:02:47,000
王安电脑是非常非常了不起的一个公司

1757
01:02:47,000 --> 01:02:49,000
而且当时他基本上是

1758
01:02:49,000 --> 01:02:52,000
以一级之力对挑IBM

1759
01:02:52,000 --> 01:02:54,000
然后来挂掉了

1760
01:02:54,000 --> 01:02:55,000
对

1761
01:02:55,000 --> 01:02:56,000
很简单他没有感伤

1762
01:02:56,000 --> 01:02:58,000
Personal Compute的大潮

1763
01:02:58,000 --> 01:02:59,000
就是他比较

1764
01:02:59,000 --> 01:03:00,000
他比较

1765
01:03:00,000 --> 01:03:01,000
他比较

1766
01:03:01,000 --> 01:03:03,000
他比较刚毕自由嘛

1767
01:03:03,000 --> 01:03:04,000
他觉得

1768
01:03:04,000 --> 01:03:06,000
个人相机和

1769
01:03:06,000 --> 01:03:08,000
微型机的机和

1770
01:03:08,000 --> 01:03:10,000
Mafram相比

1771
01:03:10,000 --> 01:03:13,000
就是玩笑样的东西

1772
01:03:13,000 --> 01:03:15,000
为什么要花费精力在这种东西上面

1773
01:03:15,000 --> 01:03:18,000
但是等到他回过手来的时候已经开网了

1774
01:03:18,000 --> 01:03:20,000
然后整个地瓜就这么垮掉

1775
01:03:20,000 --> 01:03:21,000
还是什么

1776
01:03:21,000 --> 01:03:22,000
见识

1777
01:03:22,000 --> 01:03:23,000
见

1778
01:03:23,000 --> 01:03:24,000
不够有远见

1779
01:03:24,000 --> 01:03:25,000
对

1780
01:03:25,000 --> 01:03:26,000
如果他能够

1781
01:03:26,000 --> 01:03:27,000
对

1782
01:03:27,000 --> 01:03:28,000
我们就不要继续开脑洞

1783
01:03:28,000 --> 01:03:30,000
总之王安这么一个奇人

1784
01:03:30,000 --> 01:03:31,000
还是

1785
01:03:31,000 --> 01:03:32,000
感情进的话

1786
01:03:32,000 --> 01:03:33,000
考古性性的话

1787
01:03:33,000 --> 01:03:34,000
可以去了解

1788
01:03:34,000 --> 01:03:35,000
对

1789
01:03:35,000 --> 01:03:36,000
然后选Personal另外一个旅游

1790
01:03:36,000 --> 01:03:37,000
也就是他

1791
01:03:37,000 --> 01:03:38,000
跟

1792
01:03:38,000 --> 01:03:40,000
他的主角是个女性嘛

1793
01:03:40,000 --> 01:03:41,000
现在这一点

1794
01:03:41,000 --> 01:03:42,000
对

1795
01:03:42,000 --> 01:03:43,000
直乐为此

1796
01:03:43,000 --> 01:03:44,000
因为

1797
01:03:44,000 --> 01:03:45,000
我也不知道

1798
01:03:45,000 --> 01:03:47,000
就在以女性为主角的

1799
01:03:47,000 --> 01:03:49,000
游戏真的不多

1800
01:03:49,000 --> 01:03:50,000
你可能

1801
01:03:50,000 --> 01:03:52,000
除了那些女性像

1802
01:03:52,000 --> 01:03:55,000
专门做给女生玩了

1803
01:03:55,000 --> 01:03:56,000
游戏之外

1804
01:03:56,000 --> 01:03:59,000
专门找一个女性来做主角的

1805
01:03:59,000 --> 01:04:00,000
真的绝无尽有

1806
01:04:00,000 --> 01:04:01,000
公利

1807
01:04:01,000 --> 01:04:02,000
对

1808
01:04:02,000 --> 01:04:03,000
而且

1809
01:04:03,000 --> 01:04:05,000
公利是一个非常

1810
01:04:05,000 --> 01:04:06,000
就是

1811
01:04:06,000 --> 01:04:07,000
物化了

1812
01:04:07,000 --> 01:04:08,000
在最开始的时候

1813
01:04:08,000 --> 01:04:09,000
古古理会是一个

1814
01:04:09,000 --> 01:04:10,000
非常

1815
01:04:10,000 --> 01:04:11,000
做出来给男人看着

1816
01:04:11,000 --> 01:04:13,000
一个一个一个一个

1817
01:04:13,000 --> 01:04:14,000
一个模型

1818
01:04:14,000 --> 01:04:15,000
但是最新一代古古理

1819
01:04:15,000 --> 01:04:16,000
把大不相同了

1820
01:04:16,000 --> 01:04:17,000
但是

1821
01:04:17,000 --> 01:04:18,000
古古理会最开始的时候

1822
01:04:18,000 --> 01:04:19,000
就是一个

1823
01:04:19,000 --> 01:04:20,000
一个

1824
01:04:20,000 --> 01:04:21,000
细腰长腿大胸的

1825
01:04:21,000 --> 01:04:22,000
妹子手里面

1826
01:04:22,000 --> 01:04:24,000
拿两把枪然后出现在

1827
01:04:24,000 --> 01:04:25,000
一直在你面前牛啊牛

1828
01:04:25,000 --> 01:04:26,000
对

1829
01:04:26,000 --> 01:04:27,000
在出现在大众软件的

1830
01:04:27,000 --> 01:04:28,000
丰面上

1831
01:04:28,000 --> 01:04:29,000
然后让你

1832
01:04:29,000 --> 01:04:30,000
基本上就是只有男人

1833
01:04:30,000 --> 01:04:31,000
会去看着这个

1834
01:04:31,000 --> 01:04:32,000
不是

1835
01:04:32,000 --> 01:04:33,000
我来的时候

1836
01:04:33,000 --> 01:04:34,000
有人出了那个裸腿板

1837
01:04:34,000 --> 01:04:35,000
对

1838
01:04:36,000 --> 01:04:37,000
丰面上

1839
01:04:38,000 --> 01:04:39,000
我们是

1840
01:04:39,000 --> 01:04:40,000
怎么能接受

1841
01:04:40,000 --> 01:04:41,000
那个时代640声音

1842
01:04:41,000 --> 01:04:42,000
做八十分钟

1843
01:04:42,000 --> 01:04:43,000
下面就裸腿了

1844
01:04:43,000 --> 01:04:44,000
对啊

1845
01:04:44,000 --> 01:04:45,000
三次我们还

1846
01:04:45,000 --> 01:04:46,000
我还跟Lower2操过

1847
01:04:46,000 --> 01:04:47,000
他那个时候的

1848
01:04:47,000 --> 01:04:48,000
三D特效嘛

1849
01:04:48,000 --> 01:04:50,000
那个会圈的

1850
01:04:50,000 --> 01:04:51,000
那个机肉都是一坨

1851
01:04:51,000 --> 01:04:52,000
一坨一坨

1852
01:04:52,000 --> 01:04:53,000
有轮脚的嘛

1853
01:04:53,000 --> 01:04:54,000
对

1854
01:04:54,000 --> 01:04:55,000
你会看看他的那个胸

1855
01:04:55,000 --> 01:04:56,000
是一个三脚

1856
01:04:56,000 --> 01:04:57,000
一个一个圆坠体

1857
01:04:58,000 --> 01:04:59,000
一个

1858
01:04:59,000 --> 01:05:00,000
哪是圆坠是一个

1859
01:05:00,000 --> 01:05:01,000
是一个三脚脚

1860
01:05:01,000 --> 01:05:02,000
四脚坠

1861
01:05:02,000 --> 01:05:03,000
他可能就是

1862
01:05:03,000 --> 01:05:05,000
很奇怪的一个

1863
01:05:05,000 --> 01:05:06,000
一个画纸

1864
01:05:06,000 --> 01:05:07,000
但是现在就有大不相同

1865
01:05:07,000 --> 01:05:08,000
不过

1866
01:05:08,000 --> 01:05:09,000
Porto里面

1867
01:05:09,000 --> 01:05:10,000
是看不见

1868
01:05:10,000 --> 01:05:12,000
有一种产品

1869
01:05:12,000 --> 01:05:13,000
你可以看见

1870
01:05:13,000 --> 01:05:14,000
对

1871
01:05:14,000 --> 01:05:15,000
你在自己身后

1872
01:05:15,000 --> 01:05:16,000
开一个Porto

1873
01:05:16,000 --> 01:05:17,000
对

1874
01:05:17,000 --> 01:05:18,000
你在自己屁股里面开一个Porto

1875
01:05:18,000 --> 01:05:19,000
或者转脚的时候

1876
01:05:19,000 --> 01:05:20,000
能够看见一个特脸

1877
01:05:20,000 --> 01:05:21,000
但你肯定是看不见全身的

1878
01:05:21,000 --> 01:05:22,000
就可以端相自己

1879
01:05:24,000 --> 01:05:25,000
对

1880
01:05:25,000 --> 01:05:26,000
然后这个女性也被刻画得

1881
01:05:26,000 --> 01:05:27,000
非常

1882
01:05:27,000 --> 01:05:28,000
非常

1883
01:05:28,000 --> 01:05:29,000
就算

1884
01:05:29,000 --> 01:05:30,000
整个

1885
01:05:30,000 --> 01:05:32,000
游戏的这个

1886
01:05:32,000 --> 01:05:34,000
主线就是

1887
01:05:34,000 --> 01:05:36,000
非常的

1888
01:05:36,000 --> 01:05:38,000
A-L-NATED

1889
01:05:38,000 --> 01:05:39,000
就是非常不像一个人

1890
01:05:39,000 --> 01:05:40,000
对

1891
01:05:40,000 --> 01:05:42,000
从头到尾都没有一句话对吧

1892
01:05:42,000 --> 01:05:43,000
对

1893
01:05:43,000 --> 01:05:44,000
这个倒是

1894
01:05:44,000 --> 01:05:46,000
在Porto的

1895
01:05:46,000 --> 01:05:47,000
Porto其实它是

1896
01:05:47,000 --> 01:05:48,000
处在那个

1897
01:05:48,000 --> 01:05:50,000
Half-life的世界里面

1898
01:05:50,000 --> 01:05:51,000
Half-life的

1899
01:05:51,000 --> 01:05:53,000
就是半条命

1900
01:05:53,000 --> 01:05:54,000
后是半摔7

1901
01:05:54,000 --> 01:05:55,000
正确分一方

1902
01:05:55,000 --> 01:05:57,000
而半摔7的这个主角

1903
01:05:57,000 --> 01:05:59,000
Golden Freeman

1904
01:05:59,000 --> 01:06:00,000
也是自始之后

1905
01:06:00,000 --> 01:06:01,000
没有收尾就化了

1906
01:06:01,000 --> 01:06:02,000
就是

1907
01:06:02,000 --> 01:06:03,000
Wolf-Yowba主角

1908
01:06:03,000 --> 01:06:05,000
做成这种

1909
01:06:05,000 --> 01:06:07,000
沉默的主角的传统

1910
01:06:07,000 --> 01:06:08,000
当然他们可能

1911
01:06:08,000 --> 01:06:09,000
自己也在取消这一点

1912
01:06:09,000 --> 01:06:11,000
就是在Porto2的

1913
01:06:11,000 --> 01:06:12,000
有一根

1914
01:06:12,000 --> 01:06:13,000
地方它会让你说

1915
01:06:13,000 --> 01:06:15,000
N-A来

1916
01:06:15,000 --> 01:06:16,000
来说Mok

1917
01:06:16,000 --> 01:06:18,000
然后你的A发现自己跳下

1918
01:06:18,000 --> 01:06:19,000
然后

1919
01:06:19,000 --> 01:06:20,000
然后

1920
01:06:20,000 --> 01:06:22,000
屁和屁幕上

1921
01:06:22,000 --> 01:06:23,000
指示完全千万

1922
01:06:23,000 --> 01:06:24,000
然后那个

1923
01:06:24,000 --> 01:06:25,000
人工智能会取消

1924
01:06:25,000 --> 01:06:26,000
你说

1925
01:06:26,000 --> 01:06:27,000
你很会跳

1926
01:06:27,000 --> 01:06:28,000
我看到了

1927
01:06:28,000 --> 01:06:29,000
好吧

1928
01:06:29,000 --> 01:06:30,000
像是

1929
01:06:30,000 --> 01:06:31,000
是独角你说

1930
01:06:31,000 --> 01:06:34,000
对

1931
01:06:34,000 --> 01:06:36,000
从来没有说过任何事情

1932
01:06:36,000 --> 01:06:38,000
而且

1933
01:06:38,000 --> 01:06:39,000
它跟游戏

1934
01:06:39,000 --> 01:06:40,000
里面

1935
01:06:40,000 --> 01:06:41,000
也没有什么特别的交互

1936
01:06:41,000 --> 01:06:42,000
对

1937
01:06:42,000 --> 01:06:43,000
交互都是拿那个

1938
01:06:43,000 --> 01:06:44,000
Porto枪去

1939
01:06:44,000 --> 01:06:45,000
吸起来了

1940
01:06:45,000 --> 01:06:46,000
对

1941
01:06:46,000 --> 01:06:47,000
对

1942
01:06:47,000 --> 01:06:48,000
对我还蛮奇怪

1943
01:06:48,000 --> 01:06:50,000
当然我觉得这个

1944
01:06:50,000 --> 01:06:51,000
游戏最大的脉

1945
01:06:51,000 --> 01:06:52,000
最大的可圈可点

1946
01:06:52,000 --> 01:06:53,000
就是说还是个拉倒

1947
01:06:53,000 --> 01:06:54,000
就是

1948
01:06:54,000 --> 01:06:56,000
可能人在

1949
01:06:56,000 --> 01:06:58,000
所有的游戏里面

1950
01:06:58,000 --> 01:06:59,000
让人印象深刻的

1951
01:06:59,000 --> 01:07:00,000
Ai

1952
01:07:00,000 --> 01:07:01,000
对

1953
01:07:01,000 --> 01:07:02,000
对

1954
01:07:02,000 --> 01:07:03,000
这样是

1955
01:07:03,000 --> 01:07:04,000
Ai有两个

1956
01:07:04,000 --> 01:07:05,000
一个是

1957
01:07:05,000 --> 01:07:06,000
而且两个碰巧都是女性

1958
01:07:06,000 --> 01:07:07,000
因为是

1959
01:07:07,000 --> 01:07:09,000
黑楼里面的口摊

1960
01:07:09,000 --> 01:07:11,000
或者是微软

1961
01:07:11,000 --> 01:07:12,000
如果不而黑楼的话

1962
01:07:12,000 --> 01:07:13,000
最新出的那个口摊

1963
01:07:13,000 --> 01:07:14,000
就是来自这个

1964
01:07:14,000 --> 01:07:15,000
游戏里面的口摊

1965
01:07:15,000 --> 01:07:16,000
但那个口摊

1966
01:07:16,000 --> 01:07:17,000
是有

1967
01:07:17,000 --> 01:07:18,000
是有形状的

1968
01:07:18,000 --> 01:07:19,000
而且

1969
01:07:19,000 --> 01:07:20,000
是有形体的

1970
01:07:20,000 --> 01:07:21,000
就是你可以看到一个东西

1971
01:07:21,000 --> 01:07:22,000
当然这个东西

1972
01:07:22,000 --> 01:07:23,000
只是它

1973
01:07:23,000 --> 01:07:25,000
把自己

1974
01:07:25,000 --> 01:07:26,000
把自己

1975
01:07:26,000 --> 01:07:27,000
你可以理解

1976
01:07:27,000 --> 01:07:29,000
它的交互介面

1977
01:07:29,000 --> 01:07:32,000
但至少是一个有形体的东西

1978
01:07:32,000 --> 01:07:33,000
而且这个形体

1979
01:07:33,000 --> 01:07:34,000
也是

1980
01:07:34,000 --> 01:07:36,000
被逐渐物化了

1981
01:07:36,000 --> 01:07:37,000
就是第一代

1982
01:07:37,000 --> 01:07:38,000
口摊看起来

1983
01:07:38,000 --> 01:07:39,000
没有什么性别特征

1984
01:07:39,000 --> 01:07:40,000
只能一期

1985
01:07:40,000 --> 01:07:41,000
看上它是个女的

1986
01:07:41,000 --> 01:07:42,000
但是最近的

1987
01:07:42,000 --> 01:07:43,000
最近

1988
01:07:43,000 --> 01:07:45,000
一部黑楼里面

1989
01:07:45,000 --> 01:07:46,000
口摊

1990
01:07:46,000 --> 01:07:47,000
也是被

1991
01:07:47,000 --> 01:07:49,000
塑造成了一个精细的

1992
01:07:49,000 --> 01:07:50,000
大胸长腿

1993
01:07:50,000 --> 01:07:51,000
对对对对

1994
01:07:51,000 --> 01:07:53,000
还是什么

1995
01:07:53,000 --> 01:07:56,000
性别其实还是挺严重的

1996
01:07:56,000 --> 01:07:57,000
没错

1997
01:07:57,000 --> 01:07:58,000
然后

1998
01:07:58,000 --> 01:07:59,000
但是

1999
01:07:59,000 --> 01:08:00,000
Galados完全不一样

2000
01:08:00,000 --> 01:08:01,000
Galados是一个

2001
01:08:01,000 --> 01:08:02,000
就是一个机器

2002
01:08:02,000 --> 01:08:03,000
它只有一位女女的声音

2003
01:08:03,000 --> 01:08:04,000
但是它的

2004
01:08:04,000 --> 01:08:06,000
Personality是

2005
01:08:06,000 --> 01:08:07,000
中性的吧

2006
01:08:07,000 --> 01:08:08,000
不是

2007
01:08:08,000 --> 01:08:09,000
Personality是

2008
01:08:09,000 --> 01:08:11,000
就是它的性格

2009
01:08:11,000 --> 01:08:12,000
它最开始

2010
01:08:12,000 --> 01:08:13,000
其实是由

2011
01:08:13,000 --> 01:08:15,000
Apusher Science的老板

2012
01:08:15,000 --> 01:08:16,000
手下的一个

2013
01:08:16,000 --> 01:08:17,000
就是

2014
01:08:17,000 --> 01:08:19,000
Carlin的住手

2015
01:08:19,000 --> 01:08:21,000
它把它的

2016
01:08:21,000 --> 01:08:22,000
性格特征

2017
01:08:22,000 --> 01:08:23,000
进入到了

2018
01:08:23,000 --> 01:08:24,000
Galados里面

2019
01:08:24,000 --> 01:08:25,000
然后

2020
01:08:25,000 --> 01:08:26,000
Pot 2里面

2021
01:08:26,000 --> 01:08:27,000
我经常有一个地方

2022
01:08:27,000 --> 01:08:28,000
它主动把这一段

2023
01:08:28,000 --> 01:08:30,000
回忆给删掉

2024
01:08:30,000 --> 01:08:31,000
就是它

2025
01:08:31,000 --> 01:08:32,000
抛弃了

2026
01:08:32,000 --> 01:08:33,000
作为

2027
01:08:33,000 --> 01:08:35,000
那个曾经的人的回忆

2028
01:08:35,000 --> 01:08:36,000
对

2029
01:08:36,000 --> 01:08:37,000
对

2030
01:08:37,000 --> 01:08:39,000
关于Pot 2好像

2031
01:08:39,000 --> 01:08:40,000
说得有点多

2032
01:08:40,000 --> 01:08:42,000
总之我对这个

2033
01:08:42,000 --> 01:08:43,000
游戏

2034
01:08:43,000 --> 01:08:45,000
有非常深的感情

2035
01:08:45,000 --> 01:08:46,000
在里面

2036
01:08:46,000 --> 01:08:47,000
所以也决定

2037
01:08:47,000 --> 01:08:48,000
把它

2038
01:08:48,000 --> 01:08:51,000
作为我们节目的主题曲

2039
01:08:51,000 --> 01:08:52,000
然后

2040
01:08:52,000 --> 01:08:54,000
我们

2041
01:08:54,000 --> 01:08:55,000
已经看过

2042
01:08:55,000 --> 01:08:57,000
这一个曲子的

2043
01:08:57,000 --> 01:08:58,000
作者

2044
01:08:58,000 --> 01:08:59,000
把他以

2045
01:08:59,000 --> 01:09:01,000
创作我们

2046
01:09:01,000 --> 01:09:03,000
我们的授权发布过出来

2047
01:09:03,000 --> 01:09:04,000
就是

2048
01:09:04,000 --> 01:09:05,000
这首曲子

2049
01:09:05,000 --> 01:09:06,000
作者

2050
01:09:06,000 --> 01:09:07,000
长得森

2051
01:09:07,000 --> 01:09:08,000
Culton

2052
01:09:08,000 --> 01:09:09,000
然后

2053
01:09:09,000 --> 01:09:10,000
它的

2054
01:09:10,000 --> 01:09:11,000
协议

2055
01:09:11,000 --> 01:09:12,000
它的授权是

2056
01:09:12,000 --> 01:09:13,000
CC

2057
01:09:13,000 --> 01:09:14,000
Buy

2058
01:09:14,000 --> 01:09:16,000
NC

2059
01:09:16,000 --> 01:09:17,000
就是

2060
01:09:17,000 --> 01:09:18,000
你必须

2061
01:09:18,000 --> 01:09:19,000
在用的

2062
01:09:19,000 --> 01:09:20,000
这首歌的时候

2063
01:09:20,000 --> 01:09:21,000
必须提到这个歌试谁写的

2064
01:09:21,000 --> 01:09:22,000
然后

2065
01:09:22,000 --> 01:09:25,000
我们应该不会

2066
01:09:25,000 --> 01:09:26,000
把它用的

2067
01:09:26,000 --> 01:09:27,000
商品图吗

2068
01:09:27,000 --> 01:09:28,000
我们这个

2069
01:09:28,000 --> 01:09:29,000
不拿它们

2070
01:09:29,000 --> 01:09:30,000
来卖

2071
01:09:30,000 --> 01:09:31,000
我们没有卖我们的节目

2072
01:09:31,000 --> 01:09:33,000
然后我们也

2073
01:09:33,000 --> 01:09:34,000
再可以遇见的将来

2074
01:09:34,000 --> 01:09:35,000
不会

2075
01:09:35,000 --> 01:09:36,000
通过做PotCust

2076
01:09:36,000 --> 01:09:39,000
有什么足够多的收入

2077
01:09:39,000 --> 01:09:40,000
所以

2078
01:09:40,000 --> 01:09:41,000
对

2079
01:09:41,000 --> 01:09:42,000
你只要不是

2080
01:09:42,000 --> 01:09:43,000
用它来谋力都可以了

2081
01:09:43,000 --> 01:09:44,000
一个

2082
01:09:44,000 --> 01:09:45,000
你中了什么小插曲

2083
01:09:45,000 --> 01:09:46,000
而且

2084
01:09:46,000 --> 01:09:47,000
就算用了

2085
01:09:47,000 --> 01:09:48,000
因为是短时间30秒钟

2086
01:09:48,000 --> 01:09:50,000
就哪怕是版权作品

2087
01:09:50,000 --> 01:09:51,000
也是可以发动

2088
01:09:51,000 --> 01:09:52,000
就是

2089
01:09:52,000 --> 01:09:53,000
对

2090
01:09:54,000 --> 01:09:55,000
因为

2091
01:09:55,000 --> 01:09:56,000
总之在Licence方面

2092
01:09:56,000 --> 01:09:57,000
应该是没有什么问题

2093
01:09:57,000 --> 01:09:59,000
我们还是考虑了这个

2094
01:09:59,000 --> 01:10:01,000
所以从这一期开始

2095
01:10:01,000 --> 01:10:02,000
我们就有一个

2096
01:10:02,000 --> 01:10:03,000
主题曲了

2097
01:10:03,000 --> 01:10:04,000
大家就不用

2098
01:10:04,000 --> 01:10:05,000
一开场就这样

2099
01:10:05,000 --> 01:10:06,000
什么

2100
01:10:06,000 --> 01:10:07,000
谁

2101
01:10:07,000 --> 01:10:08,000
对

2102
01:10:08,000 --> 01:10:09,000
WATS

2103
01:10:09,000 --> 01:10:10,000
不会

2104
01:10:10,000 --> 01:10:11,000
定期听到我的

2105
01:10:13,000 --> 01:10:14,000
好

2106
01:10:14,000 --> 01:10:17,000
我们终于开始讲这一期的正题了

2107
01:10:17,000 --> 01:10:18,000
对

2108
01:10:18,000 --> 01:10:20,000
其实我们本来是想把这个

2109
01:10:20,000 --> 01:10:22,000
这一期的正题慢慢过度过来

2110
01:10:22,000 --> 01:10:23,000
刚才提到了

2111
01:10:23,000 --> 01:10:25,000
CoreDump提到了

2112
01:10:25,000 --> 01:10:26,000
人工智囊

2113
01:10:26,000 --> 01:10:28,000
然后我们想要

2114
01:10:28,000 --> 01:10:31,000
讲的其实就是

2115
01:10:31,000 --> 01:10:32,000
那一期

2116
01:10:32,000 --> 01:10:33,000
真的

2117
01:10:33,000 --> 01:10:34,000
这里

2118
01:10:34,000 --> 01:10:35,000
一个比较

2119
01:10:35,000 --> 01:10:36,000
真的让的form

2120
01:10:36,000 --> 01:10:38,000
就是生命周期馆

2121
01:10:38,000 --> 01:10:39,000
对

2122
01:10:39,000 --> 01:10:40,000
比如说

2123
01:10:40,000 --> 01:10:41,000
PortPortPort为什么要

2124
01:10:41,000 --> 01:10:43,000
为什么要

2125
01:10:43,000 --> 01:10:45,000
他们为什么要反复提到

2126
01:10:45,000 --> 01:10:46,000
Science

2127
01:10:46,000 --> 01:10:48,000
或者说为什么要反复提到Test

2128
01:10:49,000 --> 01:10:51,000
其实我觉得它

2129
01:10:51,000 --> 01:10:52,000
多少有一点

2130
01:10:52,000 --> 01:10:53,000
就是在

2131
01:10:53,000 --> 01:10:55,000
在潮弄

2132
01:10:55,000 --> 01:10:56,000
或者说在

2133
01:10:56,000 --> 01:10:59,000
套用软程工程里面

2134
01:10:59,000 --> 01:11:01,000
不停的做测试这样一个

2135
01:11:01,000 --> 01:11:02,000
这样一个场

2136
01:11:02,000 --> 01:11:03,000
QA的

2137
01:11:03,000 --> 01:11:04,000
CoreD的试

2138
01:11:04,000 --> 01:11:05,000
没

2139
01:11:05,000 --> 01:11:06,000
没试

2140
01:11:06,000 --> 01:11:07,000
就是那里测

2141
01:11:07,000 --> 01:11:08,000
对

2142
01:11:08,000 --> 01:11:10,000
然后你可以理解为它的测试是

2143
01:11:10,000 --> 01:11:11,000
为了验证武器

2144
01:11:11,000 --> 01:11:13,000
或者是为了验证这个

2145
01:11:13,000 --> 01:11:15,000
PortGun

2146
01:11:15,000 --> 01:11:17,000
或者说

2147
01:11:17,000 --> 01:11:18,000
验证用户

2148
01:11:18,000 --> 01:11:19,000
在用PortGun的时候

2149
01:11:19,000 --> 01:11:20,000
能够想到什么事情

2150
01:11:20,000 --> 01:11:21,000
或者是

2151
01:11:21,000 --> 01:11:23,000
做出什么样的行为来

2152
01:11:23,000 --> 01:11:26,000
以此推进科学的发展

2153
01:11:26,000 --> 01:11:28,000
或者说推进PortGun的法治山

2154
01:11:28,000 --> 01:11:30,000
对

2155
01:11:30,000 --> 01:11:32,000
然后

2156
01:11:32,000 --> 01:11:33,000
这个其实就是

2157
01:11:33,000 --> 01:11:35,000
生命周期馆的迷不分

2158
01:11:35,000 --> 01:11:36,000
当然我们可能不会

2159
01:11:36,000 --> 01:11:38,000
我们暂且先不从

2160
01:11:38,000 --> 01:11:39,000
这么大的角度来说

2161
01:11:39,000 --> 01:11:42,000
就是先从

2162
01:11:42,000 --> 01:11:44,000
比较小的

2163
01:11:44,000 --> 01:11:46,000
切入点来着眼

2164
01:11:46,000 --> 01:11:47,000
对

2165
01:11:47,000 --> 01:11:49,000
比如说

2166
01:11:49,000 --> 01:11:51,000
PortGun是个游戏的

2167
01:11:51,000 --> 01:11:52,000
对

2168
01:11:52,000 --> 01:11:53,000
蛋繁游戏

2169
01:11:53,000 --> 01:11:54,000
都需要跑

2170
01:11:54,000 --> 01:11:55,000
蛋繁游戏

2171
01:11:55,000 --> 01:11:56,000
就和所有程序一样

2172
01:11:56,000 --> 01:11:57,000
都需要跑在

2173
01:11:57,000 --> 01:11:58,000
计算机上

2174
01:11:58,000 --> 01:12:00,000
然后跑在计算机上的时候

2175
01:12:00,000 --> 01:12:01,000
具体当我们说

2176
01:12:01,000 --> 01:12:03,000
一个由一个程序在运行的时候

2177
01:12:03,000 --> 01:12:05,000
我们所指的到

2178
01:12:05,000 --> 01:12:07,000
有什么状态

2179
01:12:07,000 --> 01:12:09,000
其实就是

2180
01:12:09,000 --> 01:12:11,000
我们可以说

2181
01:12:11,000 --> 01:12:12,000
一个程序在运行的时候

2182
01:12:12,000 --> 01:12:14,000
它活在内存里面

2183
01:12:14,000 --> 01:12:15,000
可以就说

2184
01:12:15,000 --> 01:12:17,000
可以吧

2185
01:12:17,000 --> 01:12:18,000
我觉得

2186
01:12:18,000 --> 01:12:19,000
当我们一个程序活在内存里面的时候

2187
01:12:19,000 --> 01:12:21,000
我们就说它正在被运行

2188
01:12:21,000 --> 01:12:24,000
就是一个程序和一个进程的

2189
01:12:24,000 --> 01:12:26,000
具体差异是什么

2190
01:12:26,000 --> 01:12:27,000
那程序

2191
01:12:27,000 --> 01:12:28,000
一个进程就是说

2192
01:12:28,000 --> 01:12:29,000
一个活着的程序

2193
01:12:29,000 --> 01:12:30,000
那么

2194
01:12:30,000 --> 01:12:32,000
程序活着的具体意义是什么

2195
01:12:32,000 --> 01:12:33,000
是它在内存里面

2196
01:12:33,000 --> 01:12:34,000
并且正在被执行

2197
01:12:34,000 --> 01:12:35,000
或者它正在没有被执行

2198
01:12:35,000 --> 01:12:37,000
但它活在内存里面

2199
01:12:37,000 --> 01:12:39,000
对吧

2200
01:12:40,000 --> 01:12:43,000
所以要面临的一个

2201
01:12:43,000 --> 01:12:45,000
就是常我们面临的最常见的

2202
01:12:45,000 --> 01:12:46,000
一个问题是什么

2203
01:12:46,000 --> 01:12:48,000
内存的空间有线吗

2204
01:12:48,000 --> 01:12:50,000
对 就是内存不够怎么办

2205
01:12:50,000 --> 01:12:51,000
对 怎么办

2206
01:12:51,000 --> 01:12:53,000
这个现在可能还好一点

2207
01:12:53,000 --> 01:12:55,000
早期的时候特别明显

2208
01:12:55,000 --> 01:12:57,000
现在内存动作就是什么

2209
01:12:57,000 --> 01:12:58,000
4个机 8个机

2210
01:12:58,000 --> 01:13:00,000
我电脑是16个机的那时候

2211
01:13:00,000 --> 01:13:01,000
对

2212
01:13:01,000 --> 01:13:02,000
那早期可能大家就多少

2213
01:13:02,000 --> 01:13:04,000
5122128

2214
01:13:04,000 --> 01:13:07,000
对 经常被错误的

2215
01:13:07,000 --> 01:13:11,000
而Tribute到BIRGAS身上的名颜是什么

2216
01:13:11,000 --> 01:13:12,000
任何电脑

2217
01:13:12,000 --> 01:13:13,000
640

2218
01:13:13,000 --> 01:13:15,000
对 就是够了

2219
01:13:15,000 --> 01:13:17,000
其实不是他说的对吧

2220
01:13:17,000 --> 01:13:18,000
他没有说的

2221
01:13:18,000 --> 01:13:19,000
不是他说的

2222
01:13:19,000 --> 01:13:20,000
而且

2223
01:13:20,000 --> 01:13:21,000
而且到底是谁说的

2224
01:13:21,000 --> 01:13:23,000
好像也没有人找出来的

2225
01:13:23,000 --> 01:13:25,000
反正就是

2226
01:13:25,000 --> 01:13:27,000
反正他就被黑了嘛

2227
01:13:27,000 --> 01:13:28,000
对 反正大家都喜欢黑头

2228
01:13:28,000 --> 01:13:30,000
跟他脱不了关系

2229
01:13:34,000 --> 01:13:35,000
为什么就把40K的那时候

2230
01:13:35,000 --> 01:13:36,000
就够着

2231
01:13:37,000 --> 01:13:38,000
他那个时候

2232
01:13:38,000 --> 01:13:40,000
1997年嘛

2233
01:13:40,000 --> 01:13:41,000
就是应该出

2234
01:13:41,000 --> 01:13:42,000
那确实啊

2235
01:13:42,000 --> 01:13:43,000
你想想看

2236
01:13:43,000 --> 01:13:44,000
那个时候多少

2237
01:13:44,000 --> 01:13:45,000
一个磁盘

2238
01:13:45,000 --> 01:13:46,000
不用磁盘软盘

2239
01:13:46,000 --> 01:13:47,000
才多少

2240
01:13:47,000 --> 01:13:48,000
才720K标准的

2241
01:13:48,000 --> 01:13:49,000
后来才翻翻

2242
01:13:49,000 --> 01:13:50,000
整1.44兆

2243
01:13:50,000 --> 01:13:51,000
那你还高了

2244
01:13:51,000 --> 01:13:52,000
高密

2245
01:13:52,000 --> 01:13:53,000
高密

2246
01:13:53,000 --> 01:13:54,000
还等死去

2247
01:13:54,000 --> 01:13:55,000
对

2248
01:13:55,000 --> 01:13:56,000
1.44兆

2249
01:13:56,000 --> 01:13:57,000
然后有一个

2250
01:13:57,000 --> 01:13:58,000
你想想一下那个时候

2251
01:13:58,000 --> 01:13:59,000
就你这样想

2252
01:13:59,000 --> 01:14:00,000
今天一样

2253
01:14:00,000 --> 01:14:01,000
你的笔记本的硬盘

2254
01:14:01,000 --> 01:14:03,000
是一个T的大小

2255
01:14:03,000 --> 01:14:04,000
然后你有一个T的内存

2256
01:14:04,000 --> 01:14:05,000
你当然觉得足够了

2257
01:14:05,000 --> 01:14:06,000
嗯

2258
01:14:06,000 --> 01:14:07,000
对

2259
01:14:07,000 --> 01:14:08,000
但是

2260
01:14:08,000 --> 01:14:10,000
现在后来发现

2261
01:14:10,000 --> 01:14:12,000
不对好像不是这样的

2262
01:14:12,000 --> 01:14:14,000
对 就是随着

2263
01:14:14,000 --> 01:14:17,000
一个程序所需要完成的任务的

2264
01:14:17,000 --> 01:14:18,000
复杂

2265
01:14:18,000 --> 01:14:19,000
逐渐便的复杂

2266
01:14:19,000 --> 01:14:20,000
它

2267
01:14:20,000 --> 01:14:22,000
它所需要的内存

2268
01:14:22,000 --> 01:14:23,000
也就是

2269
01:14:23,000 --> 01:14:24,000
几颗几数的

2270
01:14:24,000 --> 01:14:26,000
速度增长

2271
01:14:26,000 --> 01:14:27,000
所以

2272
01:14:27,000 --> 01:14:29,000
那顿不够怎么办

2273
01:14:29,000 --> 01:14:31,000
就变成了一个非常切实问题

2274
01:14:31,000 --> 01:14:33,000
所以在一个

2275
01:14:33,000 --> 01:14:34,000
要考古的话

2276
01:14:34,000 --> 01:14:36,000
从那个时候最开始

2277
01:14:36,000 --> 01:14:37,000
最开始操作系统是一个

2278
01:14:37,000 --> 01:14:38,000
单线

2279
01:14:38,000 --> 01:14:40,000
单进程的东西

2280
01:14:40,000 --> 01:14:41,000
对

2281
01:14:41,000 --> 01:14:42,000
最开始的操作系统

2282
01:14:42,000 --> 01:14:43,000
其实不是个操作系

2283
01:14:43,000 --> 01:14:44,000
它

2284
01:14:44,000 --> 01:14:45,000
或者说没有任何特殊指出

2285
01:14:45,000 --> 01:14:47,000
它只过就是开机

2286
01:14:47,000 --> 01:14:49,000
这个程序被总用运行

2287
01:14:49,000 --> 01:14:50,000
然后你可以用这个自动

2288
01:14:50,000 --> 01:14:51,000
用这个程序去找到

2289
01:14:51,000 --> 01:14:53,000
你想要运行的那个程序

2290
01:14:53,000 --> 01:14:55,000
然后运行那个程序

2291
01:14:55,000 --> 01:14:56,000
在这个过程之中

2292
01:14:56,000 --> 01:14:58,000
你最开始运行的那个程序

2293
01:14:58,000 --> 01:14:59,000
就

2294
01:14:59,000 --> 01:15:00,000
就退出去了

2295
01:15:00,000 --> 01:15:02,000
就不再存在点脑里面了

2296
01:15:02,000 --> 01:15:03,000
然后你接下来运行的这个程序

2297
01:15:03,000 --> 01:15:05,000
它独占整个电脑

2298
01:15:05,000 --> 01:15:08,000
它认为我是活在这个电脑上的

2299
01:15:08,000 --> 01:15:10,000
唯一程序

2300
01:15:10,000 --> 01:15:11,000
而且其实

2301
01:15:11,000 --> 01:15:13,000
几到几遍到今天这一点

2302
01:15:13,000 --> 01:15:14,000
多多少还是成立的

2303
01:15:14,000 --> 01:15:17,000
就是每一个程序都多少认为

2304
01:15:17,000 --> 01:15:19,000
自己拥有整排阴纪

2305
01:15:19,000 --> 01:15:21,000
其实这是一个家

2306
01:15:21,000 --> 01:15:23,000
其实只过是操作系统

2307
01:15:23,000 --> 01:15:25,000
或者是CPU

2308
01:15:25,000 --> 01:15:27,000
给它知道出来的一个换警

2309
01:15:27,000 --> 01:15:28,000
让它活在这个世界上

2310
01:15:28,000 --> 01:15:29,000
其实

2311
01:15:29,000 --> 01:15:30,000
在物理意义上

2312
01:15:30,000 --> 01:15:31,000
在实际意义上

2313
01:15:31,000 --> 01:15:33,000
它正在和别人

2314
01:15:33,000 --> 01:15:36,000
共同享用同一块物内存

2315
01:15:36,000 --> 01:15:38,000
这个可能早期

2316
01:15:38,000 --> 01:15:39,000
用过DOS的用户

2317
01:15:39,000 --> 01:15:40,000
还有这个印象

2318
01:15:40,000 --> 01:15:42,000
你开到DOS

2319
01:15:42,000 --> 01:15:43,000
开个命令

2320
01:15:43,000 --> 01:15:44,000
进了一个程序

2321
01:15:44,000 --> 01:15:45,000
你要干点别的事

2322
01:15:45,000 --> 01:15:46,000
你还得从你退出来

2323
01:15:46,000 --> 01:15:47,000
先保存

2324
01:15:47,000 --> 01:15:48,000
然后退出在其他内外的程序

2325
01:15:48,000 --> 01:15:49,000
做完那个是

2326
01:15:49,000 --> 01:15:50,000
保存内存在地

2327
01:15:50,000 --> 01:15:51,000
再回到之前

2328
01:15:51,000 --> 01:15:53,000
然后后来是在

2329
01:15:53,000 --> 01:15:55,000
Windows 3 or 2

2330
01:15:55,000 --> 01:15:56,000
还是9 or 5的时候

2331
01:15:56,000 --> 01:15:58,000
出现了这个时候

2332
01:15:58,000 --> 01:15:59,000
多人物的这概念了

2333
01:15:59,000 --> 01:16:01,000
Windows 3有多人物

2334
01:16:01,000 --> 01:16:03,000
我不太清楚

2335
01:16:03,000 --> 01:16:06,000
其实我好像没有用Windows 3

2336
01:16:06,000 --> 01:16:08,000
Windows 3.2

2337
01:16:08,000 --> 01:16:10,000
是专门为中国市场做的

2338
01:16:10,000 --> 01:16:12,000
Windows 3.2其实是汉花

2339
01:16:12,000 --> 01:16:14,000
Windows 3.1的汉花

2340
01:16:14,000 --> 01:16:15,000
对

2341
01:16:15,000 --> 01:16:19,000
3.1有多人我们好像没有

2342
01:16:19,000 --> 01:16:21,000
我并不确切地

2343
01:16:21,000 --> 01:16:23,000
记得自己曾经在Windows 3.1时代

2344
01:16:23,000 --> 01:16:25,000
按过Alt

2345
01:16:25,000 --> 01:16:28,000
Alt 财富这个组合

2346
01:16:28,000 --> 01:16:30,000
前方任务

2347
01:16:30,000 --> 01:16:32,000
应该是没有吧

2348
01:16:32,000 --> 01:16:34,000
但至少这个很确定

2349
01:16:34,000 --> 01:16:36,000
Windows 9.5肯定是一个多人物

2350
01:16:36,000 --> 01:16:37,000
到系统了

2351
01:16:37,000 --> 01:16:39,000
我还记得我

2352
01:16:39,000 --> 01:16:42,000
最晚是在

2353
01:16:42,000 --> 01:16:43,000
研究生时代

2354
01:16:43,000 --> 01:16:44,000
还教过一个是

2355
01:16:44,000 --> 01:16:46,000
用Alt 财富

2356
01:16:46,000 --> 01:16:47,000
可以切换到其他程序里面去

2357
01:16:47,000 --> 01:16:49,000
他大为惊讶

2358
01:16:49,000 --> 01:16:51,000
他说原来

2359
01:16:51,000 --> 01:16:52,000
原来

2360
01:16:52,000 --> 01:16:53,000
可以这么玩

2361
01:16:53,000 --> 01:16:54,000
原来我切换到

2362
01:16:54,000 --> 01:16:56,000
原来这样按一下

2363
01:16:56,000 --> 01:16:58,000
原来我刚才在做的事情

2364
01:16:58,000 --> 01:17:00,000
还在继续被做

2365
01:17:02,000 --> 01:17:03,000
但其实这里

2366
01:17:03,000 --> 01:17:06,000
你看除了这个程序的认知上

2367
01:17:06,000 --> 01:17:07,000
有一个过度

2368
01:17:07,000 --> 01:17:09,000
我们作为用户的认知上

2369
01:17:09,000 --> 01:17:11,000
其实也是需要一个过度的

2370
01:17:11,000 --> 01:17:12,000
本来想

2371
01:17:12,000 --> 01:17:14,000
一个机器只能干一件事情对吧

2372
01:17:14,000 --> 01:17:15,000
突然

2373
01:17:15,000 --> 01:17:16,000
能够同时干几件事情

2374
01:17:16,000 --> 01:17:17,000
还是蛮奇怪的

2375
01:17:17,000 --> 01:17:19,000
一个认知上的变化

2376
01:17:19,000 --> 01:17:20,000
对

2377
01:17:20,000 --> 01:17:22,000
但回到游戏上面

2378
01:17:22,000 --> 01:17:24,000
其实在到时

2379
01:17:24,000 --> 01:17:25,000
已经有很多游戏

2380
01:17:25,000 --> 01:17:26,000
可以比如说

2381
01:17:26,000 --> 01:17:28,000
或者说游戏给你观感

2382
01:17:28,000 --> 01:17:29,000
你可以一边放音乐

2383
01:17:29,000 --> 01:17:32,000
至少游戏的背景音乐在播放

2384
01:17:32,000 --> 01:17:34,000
然后你还可以操纵

2385
01:17:34,000 --> 01:17:35,000
里面的人在走路

2386
01:17:35,000 --> 01:17:36,000
然后

2387
01:17:37,000 --> 01:17:41,000
好像也没有那么的让人

2388
01:17:41,000 --> 01:17:42,000
但是但起码

2389
01:17:42,000 --> 01:17:43,000
就说财在这个

2390
01:17:43,000 --> 01:17:44,000
对这个东西的认识上

2391
01:17:44,000 --> 01:17:45,000
他还说

2392
01:17:45,000 --> 01:17:46,000
他在玩这个游戏

2393
01:17:46,000 --> 01:17:48,000
他不能在玩这个游戏的时候

2394
01:17:48,000 --> 01:17:49,000
同时去

2395
01:17:49,000 --> 01:17:51,000
就处理一个什么文字

2396
01:17:51,000 --> 01:17:53,000
编辑一个文本之类的

2397
01:17:53,000 --> 01:17:54,000
对

2398
01:17:54,000 --> 01:17:55,000
虽然那个时代也有什么

2399
01:17:55,000 --> 01:17:58,000
常驻内存的工具

2400
01:17:58,000 --> 01:18:00,000
比如说有些游戏修改工具

2401
01:18:00,000 --> 01:18:02,000
会自己缩在内存一角

2402
01:18:02,000 --> 01:18:03,000
然后让你去弄了一个

2403
01:18:03,000 --> 01:18:05,000
按一个什么快点点

2404
01:18:05,000 --> 01:18:06,000
按一个热件

2405
01:18:06,000 --> 01:18:07,000
整个游戏

2406
01:18:07,000 --> 01:18:10,000
就动节的内容

2407
01:18:10,000 --> 01:18:12,000
然后这个时候你可以用这个小工具来

2408
01:18:12,000 --> 01:18:13,000
修改内存

2409
01:18:13,000 --> 01:18:15,000
然后等你改好的时候

2410
01:18:15,000 --> 01:18:16,000
再重新继续游戏

2411
01:18:16,000 --> 01:18:18,000
其实就是一个第八个嘛

2412
01:18:18,000 --> 01:18:19,000
对对对

2413
01:18:19,000 --> 01:18:21,000
然后重新游戏发现

2414
01:18:21,000 --> 01:18:23,000
A自己忽然有了几万块钱

2415
01:18:23,000 --> 01:18:25,000
有了什么

2416
01:18:25,000 --> 01:18:27,000
有了听尘谷

2417
01:18:27,000 --> 01:18:28,000
对

2418
01:18:28,000 --> 01:18:29,000
这些游戏

2419
01:18:29,000 --> 01:18:31,000
那个时候如此的熟悉

2420
01:18:31,000 --> 01:18:33,000
怎么现在好像

2421
01:18:33,000 --> 01:18:35,000
这些工具那个时候

2422
01:18:35,000 --> 01:18:36,000
那么那么二叔

2423
01:18:36,000 --> 01:18:38,000
能想像现在好一个想法

2424
01:18:38,000 --> 01:18:39,000
只是想起一个

2425
01:18:39,000 --> 01:18:41,000
只能想那个PC Tools

2426
01:18:41,000 --> 01:18:42,000
我也想不出来

2427
01:18:42,000 --> 01:18:43,000
Anyway

2428
01:18:43,000 --> 01:18:45,000
和头再去考古吧

2429
01:18:45,000 --> 01:18:46,000
好一样

2430
01:18:46,000 --> 01:18:47,000
然后就提嘛

2431
01:18:47,000 --> 01:18:48,000
我们能够确切的

2432
01:18:48,000 --> 01:18:49,000
就能够学习的

2433
01:18:49,000 --> 01:18:50,000
就能够开啓大家在一个

2434
01:18:50,000 --> 01:18:51,000
多任务的系统

2435
01:18:51,000 --> 01:18:52,000
不过它那个多任务

2436
01:18:52,000 --> 01:18:53,000
和我们现在多任务还是在

2437
01:18:53,000 --> 01:18:56,000
第一支长还是有很难不一样的

2438
01:18:57,000 --> 01:18:58,000
它是一个所谓的

2439
01:18:58,000 --> 01:18:59,000
叫做

2440
01:18:59,000 --> 01:19:01,000
协作是多任务

2441
01:19:01,000 --> 01:19:02,000
对

2442
01:19:02,000 --> 01:19:03,000
对

2443
01:19:03,000 --> 01:19:04,000
等来说就是

2444
01:19:04,000 --> 01:19:05,000
你是一个程序

2445
01:19:05,000 --> 01:19:06,000
我是一个程序

2446
01:19:06,000 --> 01:19:08,000
我们两个必须

2447
01:19:08,000 --> 01:19:09,000
比较有默契

2448
01:19:09,000 --> 01:19:10,000
一定要说你放长骂

2449
01:19:10,000 --> 01:19:11,000
我正常

2450
01:19:11,000 --> 01:19:12,000
然后

2451
01:19:12,000 --> 01:19:13,000
我先用

2452
01:19:13,000 --> 01:19:14,000
用到我觉得

2453
01:19:14,000 --> 01:19:15,000
可以不用的时候

2454
01:19:15,000 --> 01:19:17,000
我要主用放弃的

2455
01:19:17,000 --> 01:19:18,000
机器的控制权

2456
01:19:18,000 --> 01:19:19,000
交给

2457
01:19:19,000 --> 01:19:20,000
交给

2458
01:19:20,000 --> 01:19:21,000
交给别人

2459
01:19:21,000 --> 01:19:22,000
对

2460
01:19:22,000 --> 01:19:23,000
这个就有点跟

2461
01:19:23,000 --> 01:19:24,000
就做个类比的话

2462
01:19:24,000 --> 01:19:25,000
跟现在哪个事情比较

2463
01:19:25,000 --> 01:19:27,000
像现在跟那个做

2464
01:19:27,000 --> 01:19:29,000
我觉得就是唱可以一样嘛

2465
01:19:29,000 --> 01:19:30,000
就是

2466
01:19:30,000 --> 01:19:31,000
你

2467
01:19:31,000 --> 01:19:33,000
白白

2468
01:19:33,000 --> 01:19:34,000
对

2469
01:19:34,000 --> 01:19:35,000
你要做卖罢的话

2470
01:19:35,000 --> 01:19:36,000
卖罢这种东西

2471
01:19:36,000 --> 01:19:37,000
招人讨厌

2472
01:19:37,000 --> 01:19:38,000
就是因为没有一个

2473
01:19:38,000 --> 01:19:39,000
更强大的

2474
01:19:39,000 --> 01:19:40,000
那个

2475
01:19:40,000 --> 01:19:42,000
一个财判机制

2476
01:19:42,000 --> 01:19:43,000
站在那儿说

2477
01:19:43,000 --> 01:19:44,000
你唱歌我一把

2478
01:19:44,000 --> 01:19:45,000
你唱歌我一把

2479
01:19:45,000 --> 01:19:46,000
你给我

2480
01:19:46,000 --> 01:19:47,000
我把他给别人

2481
01:19:47,000 --> 01:19:48,000
对

2482
01:19:48,000 --> 01:19:49,000
当时的950

2483
01:19:49,000 --> 01:19:50,000
就有点像

2484
01:19:50,000 --> 01:19:51,000
以前你

2485
01:19:51,000 --> 01:19:53,000
以前程序在唱K

2486
01:19:53,000 --> 01:19:54,000
你唱一会儿

2487
01:19:54,000 --> 01:19:55,000
我唱一会儿

2488
01:19:55,000 --> 01:19:56,000
我们要轮廉换对吧

2489
01:19:56,000 --> 01:19:57,000
但如果有一个人

2490
01:19:57,000 --> 01:19:58,000
霸着卖霸不放的话

2491
01:19:58,000 --> 01:19:59,000
有可能就

2492
01:19:59,000 --> 01:20:01,000
用户就说

2493
01:20:01,000 --> 01:20:02,000
怎么又没有下音了

2494
01:20:02,000 --> 01:20:04,000
系统自愿独自这样了

2495
01:20:04,000 --> 01:20:05,000
对啊

2496
01:20:05,000 --> 01:20:06,000
怎么这么卡呀

2497
01:20:06,000 --> 01:20:07,000
重新一下吧

2498
01:20:07,000 --> 01:20:08,000
然后

2499
01:20:08,000 --> 01:20:09,000
大家都每个唱

2500
01:20:09,000 --> 01:20:10,000
对

2501
01:20:10,000 --> 01:20:11,000
鞋多是多人

2502
01:20:11,000 --> 01:20:12,000
我觉得在现在

2503
01:20:12,000 --> 01:20:13,000
我们是长的

2504
01:20:13,000 --> 01:20:14,000
编程过程中

2505
01:20:14,000 --> 01:20:16,000
还有一个比较相关的一个东西

2506
01:20:16,000 --> 01:20:17,000
就是比如说在

2507
01:20:17,000 --> 01:20:18,000
那个Note里面

2508
01:20:18,000 --> 01:20:19,000
因为Note

2509
01:20:19,000 --> 01:20:20,000
是一个单进程的东西

2510
01:20:20,000 --> 01:20:21,000
然后你要做一些

2511
01:20:21,000 --> 01:20:22,000
稍微复杂一点

2512
01:20:22,000 --> 01:20:24,000
或者是需要等待的操作

2513
01:20:24,000 --> 01:20:25,000
比如说你要做I-O的时候

2514
01:20:25,000 --> 01:20:26,000
你得用一个

2515
01:20:26,000 --> 01:20:27,000
所谓的这个

2516
01:20:27,000 --> 01:20:28,000
回掉嘛

2517
01:20:28,000 --> 01:20:29,000
Coreback其实那个时候

2518
01:20:29,000 --> 01:20:30,000
就是一个所谓的

2519
01:20:30,000 --> 01:20:32,000
鞋多是多人物的一个体现

2520
01:20:32,000 --> 01:20:33,000
就是说

2521
01:20:33,000 --> 01:20:34,000
我现在能

2522
01:20:34,000 --> 01:20:35,000
我之前能做的那些什么

2523
01:20:35,000 --> 01:20:36,000
价点纯粹的计算都做完了

2524
01:20:36,000 --> 01:20:37,000
现在我要做一个

2525
01:20:37,000 --> 01:20:38,000
可能我

2526
01:20:38,000 --> 01:20:39,000
不能马上执行的东西

2527
01:20:39,000 --> 01:20:40,000
因为等那个I-O反回嘛

2528
01:20:40,000 --> 01:20:41,000
我先把这个

2529
01:20:41,000 --> 01:20:43,000
所谓这个控制权让出来

2530
01:20:43,000 --> 01:20:45,000
然后我先给你一个回掉韩束

2531
01:20:45,000 --> 01:20:46,000
等这个东西就告诉这个

2532
01:20:46,000 --> 01:20:47,000
调度器说

2533
01:20:48,000 --> 01:20:49,000
等这个

2534
01:20:49,000 --> 01:20:51,000
我要的这个I-O结果

2535
01:20:51,000 --> 01:20:52,000
回来之后

2536
01:20:52,000 --> 01:20:53,000
你再换行

2537
01:20:53,000 --> 01:20:55,000
我接着只是这个回掉程序

2538
01:20:55,000 --> 01:20:56,000
但现在开始我就把这个

2539
01:20:56,000 --> 01:20:57,000
控制权让出去了

2540
01:20:57,000 --> 01:20:58,000
这个就是一个鞋

2541
01:20:58,000 --> 01:20:59,000
做多人物的一个体现

2542
01:20:59,000 --> 01:21:00,000
对

2543
01:21:00,000 --> 01:21:02,000
然后在问的是950

2544
01:21:02,000 --> 01:21:03,000
时代就所有的程序

2545
01:21:03,000 --> 01:21:04,000
你要进行

2546
01:21:04,000 --> 01:21:06,000
系统资源的供想的话

2547
01:21:06,000 --> 01:21:07,000
你真的需要

2548
01:21:07,000 --> 01:21:09,000
做类似的事情

2549
01:21:09,000 --> 01:21:10,000
但是那个时候

2550
01:21:10,000 --> 01:21:12,000
其实当我说的

2551
01:21:12,000 --> 01:21:13,000
问的是950的时候

2552
01:21:13,000 --> 01:21:14,000
内存已经不什么太大了

2553
01:21:14,000 --> 01:21:15,000
对了

2554
01:21:15,000 --> 01:21:16,000
在问的是950之前的

2555
01:21:17,000 --> 01:21:19,000
很长一段时间里面

2556
01:21:19,000 --> 01:21:20,000
怎样优化

2557
01:21:20,000 --> 01:21:22,000
使用有限的内存

2558
01:21:22,000 --> 01:21:24,000
简直是每一个程序源的

2559
01:21:24,000 --> 01:21:25,000
必求可

2560
01:21:25,000 --> 01:21:27,000
我觉得问的是950的也是

2561
01:21:27,000 --> 01:21:28,000
就是起码到了

2562
01:21:28,000 --> 01:21:29,000
到现在都死啊

2563
01:21:29,000 --> 01:21:30,000
我觉得

2564
01:21:30,000 --> 01:21:32,000
现在其实还是有很多

2565
01:21:32,000 --> 01:21:34,000
就是有些程序源

2566
01:21:34,000 --> 01:21:35,000
可以一辈子不碰

2567
01:21:35,000 --> 01:21:37,000
或者在你的从业过程之中

2568
01:21:37,000 --> 01:21:38,000
可能

2569
01:21:39,000 --> 01:21:42,000
你可以一两年不去碰任何和

2570
01:21:42,000 --> 01:21:44,000
那时候关有关的话

2571
01:21:44,000 --> 01:21:46,000
那个时候是做不到的

2572
01:21:46,000 --> 01:21:47,000
对

2573
01:21:47,000 --> 01:21:48,000
现在的话你只要用一个

2574
01:21:48,000 --> 01:21:50,000
所谓的manage的

2575
01:21:50,000 --> 01:21:52,000
language就是管理过的语言

2576
01:21:52,000 --> 01:21:53,000
比如说

2577
01:21:53,000 --> 01:21:54,000
say sharp

2578
01:21:54,000 --> 01:21:55,000
不用那个什么指针

2579
01:21:55,000 --> 01:21:57,000
那个叫不安全指针叫什么

2580
01:21:57,000 --> 01:21:58,000
对

2581
01:21:58,000 --> 01:21:59,000
ansefe

2582
01:21:59,000 --> 01:22:00,000
onsefe point

2583
01:22:00,000 --> 01:22:02,000
然后你说你是用这个

2584
01:22:02,000 --> 01:22:03,000
加法用JVM上面跑

2585
01:22:03,000 --> 01:22:04,000
或者是像什么

2586
01:22:04,000 --> 01:22:05,000
刚才讲node

2587
01:22:05,000 --> 01:22:06,000
还有像很多这种

2588
01:22:06,000 --> 01:22:07,000
交败语言拍场都是

2589
01:22:07,000 --> 01:22:09,000
你都不需要去手工的

2590
01:22:09,000 --> 01:22:11,000
直接去管理分配内存

2591
01:22:11,000 --> 01:22:12,000
这都是

2592
01:22:12,000 --> 01:22:13,000
这个系统或者这个

2593
01:22:13,000 --> 01:22:15,000
遇行时报你解决了

2594
01:22:15,000 --> 01:22:16,000
然后甚至像

2595
01:22:16,000 --> 01:22:17,000
你都是

2596
01:22:17,000 --> 01:22:18,000
不用手工管理

2597
01:22:18,000 --> 01:22:19,000
包括你不用去申请

2598
01:22:19,000 --> 01:22:20,000
你不用去分配

2599
01:22:20,000 --> 01:22:22,000
然后你也不用去担心这个

2600
01:22:22,000 --> 01:22:23,000
这个叫什么

2601
01:22:23,000 --> 01:22:24,000
返回的

2602
01:22:24,000 --> 01:22:25,000
不叫返回

2603
01:22:25,000 --> 01:22:26,000
释放的问题

2604
01:22:26,000 --> 01:22:27,000
对

2605
01:22:27,000 --> 01:22:28,000
但是如果你像在

2606
01:22:28,000 --> 01:22:30,000
还是就用 c 类的语言

2607
01:22:30,000 --> 01:22:31,000
比如说

2608
01:22:31,000 --> 01:22:32,000
say say say 私家家或者是

2609
01:22:32,000 --> 01:22:34,000
现在大家还在寻

2610
01:22:34,000 --> 01:22:35,000
你还是要在

2611
01:22:35,000 --> 01:22:36,000
很多程度上

2612
01:22:36,000 --> 01:22:37,000
是要手工管理内存的

2613
01:22:37,000 --> 01:22:38,000
所以现在有什么

2614
01:22:38,000 --> 01:22:39,000
有什么

2615
01:22:39,000 --> 01:22:40,000
考虑之前的事情

2616
01:22:40,000 --> 01:22:41,000
就是你不需要

2617
01:22:41,000 --> 01:22:43,000
亲自去做这件事情

2618
01:22:43,000 --> 01:22:44,000
你这时候就考虑这件事情

2619
01:22:44,000 --> 01:22:46,000
Sweep的还是需要手工管理内存的

2620
01:22:46,000 --> 01:22:47,000
所以都不需要

2621
01:22:47,000 --> 01:22:48,000
OK他是一个

2622
01:22:48,000 --> 01:22:49,000
management

2623
01:22:49,000 --> 01:22:50,000
management

2624
01:22:50,000 --> 01:22:51,000
他是有关系的

2625
01:22:51,000 --> 01:22:53,000
所以在手工管理内存的时候

2626
01:22:53,000 --> 01:22:55,000
需要做一些什么事情

2627
01:22:56,000 --> 01:22:59,000
我今天看过一些手工管理内存的书

2628
01:22:59,000 --> 01:23:00,000
会提到

2629
01:23:00,000 --> 01:23:01,000
比如说

2630
01:23:01,000 --> 01:23:02,000
你一个程序

2631
01:23:02,000 --> 01:23:03,000
比如说

2632
01:23:03,000 --> 01:23:05,000
你只有一照那存个用

2633
01:23:05,000 --> 01:23:07,000
然后你需要

2634
01:23:07,000 --> 01:23:09,000
调用一堆寒树

2635
01:23:09,000 --> 01:23:12,000
这些所有人家

2636
01:23:12,000 --> 01:23:14,000
寒树加内器可能有两照

2637
01:23:14,000 --> 01:23:16,000
那怎么办呢

2638
01:23:16,000 --> 01:23:18,000
你可以把

2639
01:23:18,000 --> 01:23:19,000
你可以

2640
01:23:19,000 --> 01:23:21,000
这个时候就需要你精心去

2641
01:23:21,000 --> 01:23:23,000
规划寒树的分布

2642
01:23:23,000 --> 01:23:24,000
你要把一些寒树

2643
01:23:24,000 --> 01:23:26,000
打包包在一个正好

2644
01:23:26,000 --> 01:23:27,000
是比如说

2645
01:23:27,000 --> 01:23:29,000
500k的这么一个

2646
01:23:29,000 --> 01:23:31,000
就是

2647
01:23:31,000 --> 01:23:33,000
所谓动态库里面吧

2648
01:23:33,000 --> 01:23:35,000
然后你运行

2649
01:23:35,000 --> 01:23:36,000
比如说你在写一游戏

2650
01:23:36,000 --> 01:23:37,000
然后在游戏里面

2651
01:23:37,000 --> 01:23:39,000
跑这个关卡的时候

2652
01:23:39,000 --> 01:23:41,000
关卡

2653
01:23:41,000 --> 01:23:43,000
就说对了

2654
01:23:43,000 --> 01:23:44,000
跑这个关卡的时候

2655
01:23:44,000 --> 01:23:45,000
你用需要用的这些寒树

2656
01:23:45,000 --> 01:23:46,000
那你就

2657
01:23:46,000 --> 01:23:49,000
在这个时候把这500k的

2658
01:23:49,000 --> 01:23:51,000
库调入内存

2659
01:23:51,000 --> 01:23:52,000
然后去调用这些寒树

2660
01:23:52,000 --> 01:23:53,000
然后等到你

2661
01:23:53,000 --> 01:23:54,000
打完这个关卡的时候

2662
01:23:54,000 --> 01:23:55,000
这些寒树不需要的

2663
01:23:55,000 --> 01:23:56,000
然后再把另外一个寒树

2664
01:23:56,000 --> 01:23:58,000
另外一个库调子

2665
01:23:58,000 --> 01:24:00,000
然后就等于你手工要去

2666
01:24:00,000 --> 01:24:01,000
在你的程序里面

2667
01:24:01,000 --> 01:24:03,000
实现一个内存和理器

2668
01:24:03,000 --> 01:24:06,000
实现一个动态加载性

2669
01:24:06,000 --> 01:24:08,000
诸如此类的细节

2670
01:24:08,000 --> 01:24:09,000
那时候我觉得

2671
01:24:09,000 --> 01:24:11,000
哇靠这些都是黑魔法

2672
01:24:11,000 --> 01:24:14,000
现在可能也多少绝对

2673
01:24:14,000 --> 01:24:15,000
黑魔法

2674
01:24:15,000 --> 01:24:16,000
因为我其实

2675
01:24:16,000 --> 01:24:17,000
个人来讲

2676
01:24:17,000 --> 01:24:19,000
从来没有做过任何内存优化

2677
01:24:19,000 --> 01:24:20,000
方面的东西

2678
01:24:20,000 --> 01:24:21,000
我就已经长大了

2679
01:24:21,000 --> 01:24:23,000
就已经直接进入机会时代了

2680
01:24:23,000 --> 01:24:25,000
幸运进入了

2681
01:24:25,000 --> 01:24:27,000
Gabric Collection无数不在的时代

2682
01:24:27,000 --> 01:24:28,000
而我相信

2683
01:24:28,000 --> 01:24:29,000
现在很多程序

2684
01:24:29,000 --> 01:24:31,000
可能从入门到

2685
01:24:31,000 --> 01:24:33,000
尤其是如果你不是学

2686
01:24:33,000 --> 01:24:35,000
基本上就刻完出身的话

2687
01:24:35,000 --> 01:24:38,000
你可能完全有机会

2688
01:24:38,000 --> 01:24:40,000
就是完全没有接触过

2689
01:24:40,000 --> 01:24:42,000
什么是内存管理

2690
01:24:42,000 --> 01:24:44,000
比如说我本科

2691
01:24:44,000 --> 01:24:45,000
读的不是这个SS

2692
01:24:45,000 --> 01:24:46,000
就是其实我

2693
01:24:46,000 --> 01:24:48,000
等我接触在东西的时候

2694
01:24:48,000 --> 01:24:50,000
那些都停留在课本上

2695
01:24:50,000 --> 01:24:51,000
那概念

2696
01:24:51,000 --> 01:24:52,000
就是我知道了怎么一回事

2697
01:24:52,000 --> 01:24:53,000
原理怎么

2698
01:24:53,000 --> 01:24:54,000
但是我自己其实

2699
01:24:54,000 --> 01:24:57,000
没有听声去操作过那个东西

2700
01:24:57,000 --> 01:24:59,000
这是变相的绣年轻吧

2701
01:24:59,000 --> 01:25:01,000
不是这个是

2702
01:25:01,000 --> 01:25:02,000
就是变相绣这个事情

2703
01:25:02,000 --> 01:25:03,000
底气不足

2704
01:25:03,000 --> 01:25:04,000
不能多学

2705
01:25:04,000 --> 01:25:05,000
好吧

2706
01:25:05,000 --> 01:25:07,000
咱俩其实都比较

2707
01:25:07,000 --> 01:25:08,000
底气不足

2708
01:25:08,000 --> 01:25:09,000
因为

2709
01:25:09,000 --> 01:25:10,000
混蛋你是刻完出身

2710
01:25:10,000 --> 01:25:11,000
怎么能够说你底气不足

2711
01:25:11,000 --> 01:25:13,000
可我也没有写过

2712
01:25:13,000 --> 01:25:14,000
只是一个

2713
01:25:14,000 --> 01:25:16,000
我才是做过一点

2714
01:25:16,000 --> 01:25:17,000
但

2715
01:25:17,000 --> 01:25:18,000
这种巴警的

2716
01:25:18,000 --> 01:25:19,000
在工作或者在

2717
01:25:19,000 --> 01:25:21,000
在事件之中

2718
01:25:21,000 --> 01:25:22,000
利用内存管理的

2719
01:25:22,000 --> 01:25:24,000
知识解决一个时期问题

2720
01:25:24,000 --> 01:25:25,000
可能绝无解写过吧

2721
01:25:25,000 --> 01:25:26,000
从来没有发现过

2722
01:25:26,000 --> 01:25:27,000
但你之前写这个

2723
01:25:27,000 --> 01:25:28,000
LS的时候

2724
01:25:28,000 --> 01:25:29,000
不需要用这个吗

2725
01:25:29,000 --> 01:25:30,000
不需要

2726
01:25:30,000 --> 01:25:31,000
说过管理内存吗

2727
01:25:31,000 --> 01:25:33,000
AMS的所谓管理内存

2728
01:25:33,000 --> 01:25:35,000
你只是需要操心

2729
01:25:35,000 --> 01:25:37,000
不要泄露内存而已

2730
01:25:37,000 --> 01:25:38,000
根本不需要

2731
01:25:38,000 --> 01:25:39,000
就记得是放手

2732
01:25:39,000 --> 01:25:40,000
对

2733
01:25:40,000 --> 01:25:41,000
对

2734
01:25:41,000 --> 01:25:42,000
就是LS已经是一个

2735
01:25:42,000 --> 01:25:43,000
非常非常先进的

2736
01:25:43,000 --> 01:25:45,000
或者说

2737
01:25:45,000 --> 01:25:46,000
ObjectsC

2738
01:25:46,000 --> 01:25:47,000
口口这个运行时

2739
01:25:47,000 --> 01:25:50,000
已经是非常非常先进的一套东西了

2740
01:25:50,000 --> 01:25:51,000
你不需要去

2741
01:25:51,000 --> 01:25:53,000
考虑自己的

2742
01:25:53,000 --> 01:25:54,000
Objects在内存

2743
01:25:54,000 --> 01:25:55,000
你们是怎么样对齐的

2744
01:25:55,000 --> 01:25:56,000
或者是

2745
01:25:56,000 --> 01:25:59,000
怎样就

2746
01:25:59,000 --> 01:26:01,000
很多C时代

2747
01:26:01,000 --> 01:26:03,000
跟这个

2748
01:26:03,000 --> 01:26:04,000
StructLine

2749
01:26:04,000 --> 01:26:05,000
那种东西

2750
01:26:05,000 --> 01:26:06,000
对

2751
01:26:06,000 --> 01:26:07,000
这些东西

2752
01:26:07,000 --> 01:26:08,000
什么Petting

2753
01:26:08,000 --> 01:26:09,000
什么什么

2754
01:26:09,000 --> 01:26:10,000
乃至

2755
01:26:10,000 --> 01:26:12,000
C里面还会说

2756
01:26:12,000 --> 01:26:13,000
黑魔法是

2757
01:26:13,000 --> 01:26:15,000
神优点类型的

2758
01:26:15,000 --> 01:26:16,000
对

2759
01:26:16,000 --> 01:26:17,000
这个我记得

2760
01:26:17,000 --> 01:26:19,000
之前以前学习看

2761
01:26:19,000 --> 01:26:20,000
老谈的时候

2762
01:26:20,000 --> 01:26:21,000
还记得

2763
01:26:21,000 --> 01:26:22,000
还挺对这块还挺

2764
01:26:22,000 --> 01:26:23,000
觉得挺心奇的

2765
01:26:23,000 --> 01:26:24,000
对

2766
01:26:24,000 --> 01:26:25,000
那个时候真的是

2767
01:26:25,000 --> 01:26:26,000
为了省一两个

2768
01:26:26,000 --> 01:26:27,000
Bite可以

2769
01:26:27,000 --> 01:26:28,000
脚筋脑制想好

2770
01:26:28,000 --> 01:26:29,000
懂

2771
01:26:29,000 --> 01:26:30,000
那个什么

2772
01:26:30,000 --> 01:26:31,000
真的

2773
01:26:31,000 --> 01:26:32,000
PimpleTurve

2774
01:26:32,000 --> 01:26:33,000
PimpleList

2775
01:26:33,000 --> 01:26:35,000
这个已经不是

2776
01:26:35,000 --> 01:26:36,000
我也不是

2777
01:26:36,000 --> 01:26:38,000
可能那个时代

2778
01:26:38,000 --> 01:26:39,000
你如果

2779
01:26:39,000 --> 01:26:40,000
不能

2780
01:26:40,000 --> 01:26:42,000
惊喜地去使用那存的话

2781
01:26:42,000 --> 01:26:44,000
就没有什么多的

2782
01:26:44,000 --> 01:26:45,000
存可以跟牛

2783
01:26:45,000 --> 01:26:46,000
那个时候

2784
01:26:46,000 --> 01:26:47,000
就会直接OM了

2785
01:26:47,000 --> 01:26:48,000
对啊

2786
01:26:48,000 --> 01:26:50,000
就没有顺利存这种东西对吧

2787
01:26:50,000 --> 01:26:51,000
也没有

2788
01:26:51,000 --> 01:26:52,000
也没有一个

2789
01:26:52,000 --> 01:26:53,000
运进时

2790
01:26:53,000 --> 01:26:54,000
或者是没有操作性来

2791
01:26:54,000 --> 01:26:55,000
替你去

2792
01:26:55,000 --> 01:26:57,000
去操心这些事情

2793
01:26:57,000 --> 01:26:58,000
你只能一切的动作

2794
01:26:58,000 --> 01:27:00,000
已经一切的自己的动作

2795
01:27:00,000 --> 01:27:01,000
其实现在的话

2796
01:27:01,000 --> 01:27:02,000
很多做这个

2797
01:27:02,000 --> 01:27:03,000
千语十开发的朋友

2798
01:27:03,000 --> 01:27:04,000
他还是要做

2799
01:27:04,000 --> 01:27:05,000
很多这种

2800
01:27:05,000 --> 01:27:06,000
刚才我们讲的那种工作

2801
01:27:06,000 --> 01:27:07,000
就是要考虑

2802
01:27:07,000 --> 01:27:08,000
因为千语十这种

2803
01:27:08,000 --> 01:27:09,000
千语十这种

2804
01:27:09,000 --> 01:27:11,000
跑的那个印建的水平都非常

2805
01:27:11,000 --> 01:27:12,000
安静的表卓来看

2806
01:27:12,000 --> 01:27:13,000
都是非常糟糕的

2807
01:27:13,000 --> 01:27:14,000
对

2808
01:27:14,000 --> 01:27:15,000
上次我还看说那个什么

2809
01:27:15,000 --> 01:27:16,000
现在不是要

2810
01:27:16,000 --> 01:27:17,000
流行一个什么

2811
01:27:17,000 --> 01:27:18,000
Internet的Sense

2812
01:27:18,000 --> 01:27:19,000
误联网的这个时代

2813
01:27:19,000 --> 01:27:20,000
有很多什么

2814
01:27:20,000 --> 01:27:21,000
什么什么什么

2815
01:27:21,000 --> 01:27:22,000
传感器啊

2816
01:27:22,000 --> 01:27:23,000
这种小芯片什么的

2817
01:27:23,000 --> 01:27:25,000
我想看Arm出了一个什么

2818
01:27:25,000 --> 01:27:26,000
一个很常用的芯片

2819
01:27:26,000 --> 01:27:27,000
只有两KB的那一层

2820
01:27:29,000 --> 01:27:30,000
What

2821
01:27:30,000 --> 01:27:31,000
就是那种

2822
01:27:31,000 --> 01:27:32,000
很小的一个传感器的

2823
01:27:32,000 --> 01:27:33,000
一种那种

2824
01:27:33,000 --> 01:27:34,000
好的芯片

2825
01:27:34,000 --> 01:27:35,000
只有两KB的那种像

2826
01:27:35,000 --> 01:27:36,000
哇

2827
01:27:36,000 --> 01:27:37,000
这怎么用

2828
01:27:38,000 --> 01:27:39,000
二十两KB

2829
01:27:39,000 --> 01:27:40,000
不仅要装

2830
01:27:40,000 --> 01:27:41,000
那个

2831
01:27:41,000 --> 01:27:42,000
不仅要装出去

2832
01:27:42,000 --> 01:27:44,000
还要装成讯本秀

2833
01:27:44,000 --> 01:27:46,000
他那个存续是放在ROM里面的

2834
01:27:46,000 --> 01:27:47,000
就是

2835
01:27:47,000 --> 01:27:48,000
两KB是这样的

2836
01:27:48,000 --> 01:27:49,000
这种

2837
01:27:49,000 --> 01:27:50,000
对

2838
01:27:50,000 --> 01:27:51,000
只是运行

2839
01:27:51,000 --> 01:27:52,000
但是那两KB哦

2840
01:27:52,000 --> 01:27:53,000
我觉得可能

2841
01:27:53,000 --> 01:27:55,000
签书开发还

2842
01:27:55,000 --> 01:27:56,000
还有一个

2843
01:27:58,000 --> 01:27:59,000
有一个不那么

2844
01:27:59,000 --> 01:28:00,000
让他

2845
01:28:00,000 --> 01:28:01,000
更复杂的东西

2846
01:28:01,000 --> 01:28:03,000
就是他很少会涉及到

2847
01:28:03,000 --> 01:28:04,000
从一个

2848
01:28:04,000 --> 01:28:05,000
更大的存属器上

2849
01:28:05,000 --> 01:28:06,000
调用数据到

2850
01:28:06,000 --> 01:28:08,000
那存里面这样一个动作

2851
01:28:08,000 --> 01:28:09,000
啊

2852
01:28:09,000 --> 01:28:10,000
他是直接

2853
01:28:10,000 --> 01:28:12,000
对你一开始在写的时候

2854
01:28:12,000 --> 01:28:14,000
就知道整个CPU的这个

2855
01:28:14,000 --> 01:28:16,000
或者整个ROM的

2856
01:28:17,000 --> 01:28:19,000
整个存属器的

2857
01:28:19,000 --> 01:28:20,000
分布会是怎么样的

2858
01:28:20,000 --> 01:28:21,000
有多少都一个用

2859
01:28:21,000 --> 01:28:22,000
然后里面可能有一个

2860
01:28:22,000 --> 01:28:23,000
小小的不足够的

2861
01:28:23,000 --> 01:28:25,000
然后其他所有的空间都是你的

2862
01:28:25,000 --> 01:28:26,000
然后你只要忘记

2863
01:28:26,000 --> 01:28:27,000
而且他

2864
01:28:27,000 --> 01:28:28,000
而且他是一个绝对的

2865
01:28:28,000 --> 01:28:29,000
单人物的系统

2866
01:28:29,000 --> 01:28:30,000
没有人和你

2867
01:28:30,000 --> 01:28:31,000
抢账

2868
01:28:31,000 --> 01:28:32,000
抢资源什么的

2869
01:28:32,000 --> 01:28:33,000
对

2870
01:28:33,000 --> 01:28:34,000
整个

2871
01:28:34,000 --> 01:28:36,000
整个芯片都是你的

2872
01:28:36,000 --> 01:28:37,000
对

2873
01:28:37,000 --> 01:28:38,000
规划方面的

2874
01:28:38,000 --> 01:28:39,000
问头

2875
01:28:39,000 --> 01:28:40,000
那头

2876
01:28:40,000 --> 01:28:42,000
疼的问题可能还少

2877
01:28:42,000 --> 01:28:43,000
但是早期的

2878
01:28:43,000 --> 01:28:44,000
早期

2879
01:28:44,000 --> 01:28:45,000
PCC即便成真

2880
01:28:45,000 --> 01:28:47,000
真的是相当复杂的

2881
01:28:47,000 --> 01:28:48,000
这个是我应该说那句话叫

2882
01:28:48,000 --> 01:28:50,000
这个芯片我已经为你预留了

2883
01:28:51,000 --> 01:28:53,000
这个芯片我今天成功了

2884
01:28:53,000 --> 01:28:54,000
怎么说

2885
01:28:57,000 --> 01:28:59,000
但是到我们

2886
01:28:59,000 --> 01:29:01,000
现在的一些主流

2887
01:29:01,000 --> 01:29:02,000
都一些开发的话

2888
01:29:02,000 --> 01:29:03,000
其实这块

2889
01:29:03,000 --> 01:29:04,000
如果你所说

2890
01:29:04,000 --> 01:29:05,000
其实是没有什么概念

2891
01:29:05,000 --> 01:29:08,000
甚至说连内存本身的

2892
01:29:08,000 --> 01:29:11,000
物理的尺寸都已经被抽象掉了

2893
01:29:11,000 --> 01:29:12,000
因为有这个

2894
01:29:12,000 --> 01:29:14,000
迅速内存这个东西

2895
01:29:14,000 --> 01:29:15,000
对

2896
01:29:15,000 --> 01:29:16,000
操作系统

2897
01:29:16,000 --> 01:29:18,000
给程序展现的是一个

2898
01:29:18,000 --> 01:29:19,000
所以一个连续的

2899
01:29:19,000 --> 01:29:20,000
庞大的

2900
01:29:20,000 --> 01:29:21,000
那个

2901
01:29:21,000 --> 01:29:23,000
那个内存的地址空间

2902
01:29:23,000 --> 01:29:24,000
但是其实

2903
01:29:24,000 --> 01:29:25,000
操作系统的

2904
01:29:25,000 --> 01:29:26,000
在内存

2905
01:29:26,000 --> 01:29:27,000
实际分配的时候

2906
01:29:27,000 --> 01:29:28,000
并不是说

2907
01:29:28,000 --> 01:29:29,000
真的有无限大的一块内存

2908
01:29:29,000 --> 01:29:31,000
给一个程序使用的对吧

2909
01:29:32,000 --> 01:29:33,000
对

2910
01:29:33,000 --> 01:29:35,000
我觉得这个问题可以从程序

2911
01:29:35,000 --> 01:29:36,000
远的角度

2912
01:29:36,000 --> 01:29:38,000
就是从一个操作系统

2913
01:29:38,000 --> 01:29:39,000
使用者的角度来看

2914
01:29:39,000 --> 01:29:41,000
就是它讲话的变成模型

2915
01:29:42,000 --> 01:29:44,000
就是如果没有训内存的话

2916
01:29:44,000 --> 01:29:46,000
你将不得不面对

2917
01:29:46,000 --> 01:29:48,000
我的程序应该放在那这个问题

2918
01:29:48,000 --> 01:29:49,000
对

2919
01:29:49,000 --> 01:29:50,000
就是我在

2920
01:29:50,000 --> 01:29:52,000
我的程序在运行时

2921
01:29:52,000 --> 01:29:55,000
处于内存的什么地方

2922
01:29:55,000 --> 01:29:58,000
难道是一件要我自己来操心的是什么

2923
01:29:58,000 --> 01:29:59,000
对

2924
01:29:59,000 --> 01:30:00,000
对

2925
01:30:00,000 --> 01:30:01,000
对如果没有训内存的话

2926
01:30:01,000 --> 01:30:02,000
你将不得不面对这个问题

2927
01:30:02,000 --> 01:30:04,000
就像早期

2928
01:30:04,000 --> 01:30:07,000
重新回到了

2929
01:30:07,000 --> 01:30:09,000
单击

2930
01:30:09,000 --> 01:30:12,000
程序的这么一个一个一个状态里面

2931
01:30:12,000 --> 01:30:14,000
我要和其他的程序共存吗

2932
01:30:14,000 --> 01:30:16,000
因为就像我刚才说的

2933
01:30:16,000 --> 01:30:19,000
修改内存的小工具一样

2934
01:30:19,000 --> 01:30:21,000
它显然是要考虑自己

2935
01:30:21,000 --> 01:30:22,000
要把自己放在什么地方

2936
01:30:22,000 --> 01:30:24,000
然后它必须跟另外一个程序

2937
01:30:24,000 --> 01:30:26,000
共同享用实体内存

2938
01:30:26,000 --> 01:30:28,000
但是虚拟存的说现在解决这个问题

2939
01:30:28,000 --> 01:30:30,000
就是简单来说

2940
01:30:30,000 --> 01:30:31,000
一个程序

2941
01:30:31,000 --> 01:30:32,000
如果它是32位的

2942
01:30:32,000 --> 01:30:37,000
它会认为自己要将近4G的内存空间

2943
01:30:38,000 --> 01:30:44,000
就是从0X0008个0

2944
01:30:44,000 --> 01:30:45,000
它只有两个

2945
01:30:45,000 --> 01:30:46,000
即逼吧

2946
01:30:46,000 --> 01:30:49,000
没有32位的就不能到4G的空间

2947
01:30:49,000 --> 01:30:52,000
32位不是4G吗

2948
01:30:52,000 --> 01:30:54,000
但是我记得是在

2949
01:30:54,000 --> 01:30:57,000
超级能够预留到1部分

2950
01:30:57,000 --> 01:30:58,000
对对对

2951
01:30:58,000 --> 01:31:02,000
超级能够应该会占用一部分地址的空间

2952
01:31:02,000 --> 01:31:03,000
对

2953
01:31:03,000 --> 01:31:06,000
但是肯定然后能够实际使用到这个地址的空间

2954
01:31:06,000 --> 01:31:08,000
对因为它不是从000开始嘛

2955
01:31:08,000 --> 01:31:10,000
所以肯定是到不到4G的

2956
01:31:10,000 --> 01:31:11,000
对

2957
01:31:11,000 --> 01:31:15,000
大概有3Gb的空间是可以用的

2958
01:31:15,000 --> 01:31:16,000
对对对

2959
01:31:16,000 --> 01:31:17,000
然后

2960
01:31:20,000 --> 01:31:22,000
我记得Windows上面的

2961
01:31:25,000 --> 01:31:27,000
默认空间好像有

2962
01:31:27,000 --> 01:31:29,000
只有两Gb左右

2963
01:31:29,000 --> 01:31:31,000
因为那个是我记得

2964
01:31:31,000 --> 01:31:32,000
Windows有一个

2965
01:31:32,000 --> 01:31:34,000
Windows有一个啟动参数

2966
01:31:34,000 --> 01:31:37,000
就是你还记得BOOT的安安安这个东西吗

2967
01:31:37,000 --> 01:31:38,000
我不知道

2968
01:31:38,000 --> 01:31:39,000
好孤单

2969
01:31:39,000 --> 01:31:40,000
又暴露年龄了

2970
01:31:40,000 --> 01:31:41,000
就是在BOOT的安安里面

2971
01:31:41,000 --> 01:31:43,000
你可以给Windows的啟动

2972
01:31:43,000 --> 01:31:46,000
加上一个slash3G这个选项

2973
01:31:46,000 --> 01:31:47,000
好的

2974
01:31:47,000 --> 01:31:49,000
而且这是XP都有的一个参数

2975
01:31:49,000 --> 01:31:50,000
对

2976
01:31:50,000 --> 01:31:52,000
你加这个参数之后

2977
01:31:53,000 --> 01:31:55,000
操作系统的

2978
01:31:55,000 --> 01:31:58,000
虚拟地址空间会

2979
01:31:58,000 --> 01:32:01,000
才会减少到1G

2980
01:32:01,000 --> 01:32:02,000
然后

2981
01:32:02,000 --> 01:32:04,000
在这种情况下

2982
01:32:04,000 --> 01:32:06,000
程序才有减3G的空间

2983
01:32:06,000 --> 01:32:07,000
对

2984
01:32:07,000 --> 01:32:09,000
如果我们记错的话

2985
01:32:09,000 --> 01:32:11,000
现在我没用过Windows

2986
01:32:11,000 --> 01:32:13,000
就是之前的

2987
01:32:13,000 --> 01:32:15,000
Windows的机器

2988
01:32:15,000 --> 01:32:17,000
如果它是32位的版本的话

2989
01:32:17,000 --> 01:32:19,000
你插上超过4G的内存

2990
01:32:19,000 --> 01:32:20,000
它实际可以使用了

2991
01:32:20,000 --> 01:32:21,000
也只有3个Gb

2992
01:32:21,000 --> 01:32:22,000
对

2993
01:32:22,000 --> 01:32:23,000
我就好像这样子

2994
01:32:23,000 --> 01:32:24,000
对

2995
01:32:25,000 --> 01:32:27,000
不过后来有个什么擴展

2996
01:32:27,000 --> 01:32:29,000
用48位的地址

2997
01:32:29,000 --> 01:32:31,000
来擴展一下

2998
01:32:31,000 --> 01:32:33,000
然后也可以用到

2999
01:32:33,000 --> 01:32:34,000
很多

3000
01:32:34,000 --> 01:32:36,000
就超过4Gb的内存

3001
01:32:36,000 --> 01:32:37,000
这个跟今天的的话

3002
01:32:37,000 --> 01:32:38,000
挺没什么关系

3003
01:32:38,000 --> 01:32:39,000
对

3004
01:32:40,000 --> 01:32:41,000
对

3005
01:32:41,000 --> 01:32:42,000
可以这么说吗

3006
01:32:42,000 --> 01:32:43,000
就是

3007
01:32:44,000 --> 01:32:46,000
386这个系列

3008
01:32:46,000 --> 01:32:48,000
就是我们今天所使用的

3009
01:32:48,000 --> 01:32:49,000
32位

3010
01:32:49,000 --> 01:32:51,000
或者说我们曾经在过去

3011
01:32:51,000 --> 01:32:52,000
因为很长一段时间

3012
01:32:52,000 --> 01:32:54,000
你们是所使用的32位的

3013
01:32:54,000 --> 01:32:55,000
CPU

3014
01:32:55,000 --> 01:32:57,000
其实和

3015
01:32:57,000 --> 01:32:59,000
最古老的8086

3016
01:32:59,000 --> 01:33:00,000
系列是

3017
01:33:01,000 --> 01:33:04,000
基本可以说是一直尖终的

3018
01:33:04,000 --> 01:33:06,000
但是为了保持这种尖终性

3019
01:33:06,000 --> 01:33:07,000
也不得付出很多代价

3020
01:33:07,000 --> 01:33:09,000
其中这一就是

3021
01:33:09,000 --> 01:33:12,000
在比如说后面的寻置模式上面

3022
01:33:12,000 --> 01:33:13,000
或者是

3023
01:33:13,000 --> 01:33:15,000
很多其他地方都有

3024
01:33:15,000 --> 01:33:17,000
不得不做出很多妥协

3025
01:33:17,000 --> 01:33:20,000
然后刚才所说的这个寻置

3026
01:33:20,000 --> 01:33:22,000
其实也是这个妥协的

3027
01:33:22,000 --> 01:33:25,000
一种一种形式

3028
01:33:25,000 --> 01:33:26,000
然后

3029
01:33:26,000 --> 01:33:29,000
Intern在推出64位模式

3030
01:33:29,000 --> 01:33:30,000
我创建的时候

3031
01:33:30,000 --> 01:33:31,000
想要

3032
01:33:31,000 --> 01:33:33,000
曾经想要一老永逸的解决这个问题

3033
01:33:33,000 --> 01:33:34,000
但是

3034
01:33:35,000 --> 01:33:36,000
那个叫做安

3035
01:33:36,000 --> 01:33:38,000
叫什么安藤是吧

3036
01:33:38,000 --> 01:33:39,000
对 安藤创建的

3037
01:33:39,000 --> 01:33:40,000
想要解决这个问题

3038
01:33:40,000 --> 01:33:41,000
但是

3039
01:33:41,000 --> 01:33:42,000
为此

3040
01:33:42,000 --> 01:33:44,000
要付出一个

3041
01:33:44,000 --> 01:33:45,000
就是

3042
01:33:45,000 --> 01:33:46,000
打破这个

3043
01:33:46,000 --> 01:33:48,000
向后尖终性的

3044
01:33:48,000 --> 01:33:49,000
这么一个代价

3045
01:33:49,000 --> 01:33:51,000
所以它最终可吃的失败

3046
01:33:53,000 --> 01:33:56,000
假如听中不还不太清楚这件事情的话

3047
01:33:56,000 --> 01:33:57,000
我们现在用的

3048
01:33:57,000 --> 01:33:59,000
所谓64位处理器其实并不是

3049
01:33:59,000 --> 01:34:00,000
真正以上的64位

3050
01:34:00,000 --> 01:34:01,000
它只是

3051
01:34:02,000 --> 01:34:03,000
由AMD

3052
01:34:04,000 --> 01:34:06,000
来做出了一个

3053
01:34:07,000 --> 01:34:09,000
尾64位系统

3054
01:34:09,000 --> 01:34:11,000
它有一个尖终模式

3055
01:34:11,000 --> 01:34:12,000
对

3056
01:34:12,000 --> 01:34:16,000
它扩展了我们之前使用了三十二位的CPU

3057
01:34:16,000 --> 01:34:18,000
然后让

3058
01:34:18,000 --> 01:34:19,000
它可以处理

3059
01:34:19,000 --> 01:34:20,000
就是怎么说的

3060
01:34:20,000 --> 01:34:22,000
简单来说就是

3061
01:34:22,000 --> 01:34:24,000
AMD64位的CPU

3062
01:34:24,000 --> 01:34:28,000
可与运行三十二位的用程去

3063
01:34:28,000 --> 01:34:29,000
但是安藤的

3064
01:34:29,000 --> 01:34:31,000
也是一个纯粹的64位的处理器

3065
01:34:31,000 --> 01:34:33,000
其实是不行的

3066
01:34:33,000 --> 01:34:34,000
对

3067
01:34:34,000 --> 01:34:35,000
这会导致它就有一个什么

3068
01:34:35,000 --> 01:34:36,000
即和弹的问题

3069
01:34:36,000 --> 01:34:37,000
说

3070
01:34:37,000 --> 01:34:38,000
对

3071
01:34:38,000 --> 01:34:40,000
你有这个64位的机器了

3072
01:34:40,000 --> 01:34:42,000
可是我们有64位程序要跑

3073
01:34:42,000 --> 01:34:44,000
那我要你个64位机器来干什么

3074
01:34:44,000 --> 01:34:46,000
于是它那个纯粹就挂掉了

3075
01:34:46,000 --> 01:34:47,000
对

3076
01:34:47,000 --> 01:34:48,000
这就是为什么

3077
01:34:48,000 --> 01:34:51,000
各位还在用温度式的朋友们

3078
01:34:52,000 --> 01:34:55,000
你们的Program file是下面会有两个

3079
01:34:55,000 --> 01:34:56,000
本节讲

3080
01:34:56,000 --> 01:34:57,000
一个叫Program file

3081
01:34:57,000 --> 01:34:59,000
这个叫做Program file

3082
01:34:59,000 --> 01:35:01,000
X64还是X32

3083
01:35:01,000 --> 01:35:02,000
X86吧

3084
01:35:02,000 --> 01:35:04,000
X86对

3085
01:35:04,000 --> 01:35:06,000
X32X86

3086
01:35:06,000 --> 01:35:07,000
对

3087
01:35:07,000 --> 01:35:08,000
对是这样子

3088
01:35:08,000 --> 01:35:09,000
对

3089
01:35:09,000 --> 01:35:13,000
其中一个里面装着三十二位的程序

3090
01:35:13,000 --> 01:35:17,000
另外一个装着准64位的用程序

3091
01:35:17,000 --> 01:35:19,000
这个在三十二位版的文字上面

3092
01:35:19,000 --> 01:35:20,000
有这个区别吗

3093
01:35:20,000 --> 01:35:21,000
我不太清楚

3094
01:35:21,000 --> 01:35:24,000
在三十二位版的文字上面

3095
01:35:24,000 --> 01:35:27,000
不会有Program files

3096
01:35:27,000 --> 01:35:29,000
不会有Program files

3097
01:35:29,000 --> 01:35:31,000
X64因为

3098
01:35:31,000 --> 01:35:32,000
X86

3099
01:35:32,000 --> 01:35:33,000
对

3100
01:35:33,000 --> 01:35:35,000
因为它默认只有X86

3101
01:35:35,000 --> 01:35:36,000
对

3102
01:35:36,000 --> 01:35:37,000
就只有你一个Program files

3103
01:35:37,000 --> 01:35:38,000
对

3104
01:35:38,000 --> 01:35:40,000
刚才讲到这个虚铭类传的一个

3105
01:35:40,000 --> 01:35:44,000
最主要的用途就是让编程的模型解画

3106
01:35:44,000 --> 01:35:46,000
就是不用去考虑

3107
01:35:46,000 --> 01:35:48,000
说你的这个东西在哪

3108
01:35:48,000 --> 01:35:50,000
这个剩下的这个调度的问题

3109
01:35:50,000 --> 01:35:53,000
是叫给内和来来去操作来做的吗

3110
01:35:53,000 --> 01:35:54,000
对

3111
01:35:54,000 --> 01:35:55,000
这里就有一个概念

3112
01:35:55,000 --> 01:35:57,000
叫做Memory hierarchy

3113
01:35:57,000 --> 01:36:01,000
内存的存主器的等级

3114
01:36:01,000 --> 01:36:05,000
就要等级的Hierarch

3115
01:36:05,000 --> 01:36:07,000
内存层级

3116
01:36:07,000 --> 01:36:08,000
对

3117
01:36:08,000 --> 01:36:10,000
其实我们知道在这个计算这里面

3118
01:36:10,000 --> 01:36:13,000
内存其实也不是一个非常高级别的

3119
01:36:13,000 --> 01:36:15,000
也不像高级

3120
01:36:15,000 --> 01:36:18,000
怎么说最快的一个存主设备吧

3121
01:36:18,000 --> 01:36:22,000
最快存的设备其实是在CPU里面

3122
01:36:22,000 --> 01:36:24,000
叫做基存器的东西

3123
01:36:24,000 --> 01:36:25,000
register

3124
01:36:25,000 --> 01:36:28,000
然后它访问大概是多少一个速度

3125
01:36:28,000 --> 01:36:32,000
在现代的一个CPU上

3126
01:36:32,000 --> 01:36:34,000
访问基存器应该就是

3127
01:36:34,000 --> 01:36:36,000
真的这个有点迷糊

3128
01:36:36,000 --> 01:36:38,000
应该是5NanoSythe

3129
01:36:38,000 --> 01:36:40,000
那个是L1

3130
01:36:40,000 --> 01:36:42,000
访问基存器的速度

3131
01:36:42,000 --> 01:36:43,000
对

3132
01:36:43,000 --> 01:36:45,000
但是这个速度是多少的一个量级

3133
01:36:45,000 --> 01:36:47,000
访问基存器需要时间吗

3134
01:36:47,000 --> 01:36:50,000
但肯定是在物理上是需要时间

3135
01:36:50,000 --> 01:36:52,000
它要等电路反应

3136
01:36:52,000 --> 01:36:55,000
但是是一个非常非常快速的时间

3137
01:36:55,000 --> 01:36:56,000
对

3138
01:36:56,000 --> 01:36:57,000
对

3139
01:36:57,000 --> 01:37:00,000
它只需要几个时钟

3140
01:37:00,000 --> 01:37:01,000
几个时钟

3141
01:37:01,000 --> 01:37:02,000
不用塞口吧

3142
01:37:02,000 --> 01:37:03,000
一个塞口就是读导应该

3143
01:37:03,000 --> 01:37:06,000
一个塞口就可以读一个register吗

3144
01:37:06,000 --> 01:37:08,000
这个我不是很确定

3145
01:37:08,000 --> 01:37:09,000
需要时间回去

3146
01:37:09,000 --> 01:37:10,000
做工具

3147
01:37:11,000 --> 01:37:13,000
我们暴露出了两个人

3148
01:37:13,000 --> 01:37:15,000
第七副组的状况就是

3149
01:37:15,000 --> 01:37:16,000
没有做的融合

3150
01:37:16,000 --> 01:37:18,000
毕竟不是

3151
01:37:18,000 --> 01:37:20,000
毕竟是已经很多年了

3152
01:37:20,000 --> 01:37:21,000
我们没有想到

3153
01:37:21,000 --> 01:37:23,000
我们没有想到会讲这么低层

3154
01:37:23,000 --> 01:37:24,000
没有这个

3155
01:37:24,000 --> 01:37:25,000
就顺便提一下

3156
01:37:25,000 --> 01:37:28,000
然后在CPU内部还要一个叫做

3157
01:37:28,000 --> 01:37:31,000
LE就是Layer1

3158
01:37:31,000 --> 01:37:34,000
L1 cache的这么一个

3159
01:37:34,000 --> 01:37:36,000
就是一级缓存

3160
01:37:36,000 --> 01:37:37,000
这么一个概念

3161
01:37:37,000 --> 01:37:38,000
一级缓存在现在以上

3162
01:37:38,000 --> 01:37:41,000
我们是有一个比相对好的度量的

3163
01:37:41,000 --> 01:37:43,000
就是大概是0.55

3164
01:37:43,000 --> 01:37:45,000
Nanosec

3165
01:37:45,000 --> 01:37:46,000
Nanosec

3166
01:37:46,000 --> 01:37:49,000
一纳苗是多少

3167
01:37:49,000 --> 01:37:54,000
一苗等于10的9字方各纳苗

3168
01:37:54,000 --> 01:37:57,000
然后你访问一个一级缓存的话

3169
01:37:57,000 --> 01:37:59,000
是半个纳苗的时间

3170
01:37:59,000 --> 01:38:00,000
对

3171
01:38:00,000 --> 01:38:01,000
然后

3172
01:38:01,000 --> 01:38:03,000
但如果有一级缓存

3173
01:38:03,000 --> 01:38:05,000
那么自然而然也会有

3174
01:38:05,000 --> 01:38:06,000
所以2级缓存

3175
01:38:06,000 --> 01:38:09,000
2级缓存在现代CPU上

3176
01:38:09,000 --> 01:38:11,000
通常也是在

3177
01:38:11,000 --> 01:38:13,000
这个CPU芯片上的

3178
01:38:13,000 --> 01:38:15,000
但是只是离

3179
01:38:15,000 --> 01:38:17,000
所谓的纪算的内部

3180
01:38:17,000 --> 01:38:19,000
那个元气间的距离要远一点

3181
01:38:19,000 --> 01:38:22,000
然后它的容量也会稍微大一点

3182
01:38:22,000 --> 01:38:25,000
一级缓存通常也就是1、2

3183
01:38:25,000 --> 01:38:27,000
多少可以把32K6是可以的

3184
01:38:27,000 --> 01:38:28,000
对

3185
01:38:28,000 --> 01:38:29,000
对

3186
01:38:29,000 --> 01:38:31,000
L2要大一点

3187
01:38:31,000 --> 01:38:33,000
大一点点

3188
01:38:33,000 --> 01:38:34,000
就是

3189
01:38:34,000 --> 01:38:37,000
L2K2R的缓存的大小

3190
01:38:37,000 --> 01:38:39,000
往往决定了CPU的售价

3191
01:38:39,000 --> 01:38:41,000
就是L1也是

3192
01:38:41,000 --> 01:38:44,000
就越大的L1的价格一般越贵

3193
01:38:44,000 --> 01:38:45,000
这个是肯定是相关的

3194
01:38:45,000 --> 01:38:49,000
因为确实做那个的成本很高

3195
01:38:49,000 --> 01:38:51,000
但是L1的话

3196
01:38:51,000 --> 01:38:53,000
通常也是KB级别吧

3197
01:38:53,000 --> 01:38:54,000
有时候大一点的

3198
01:38:54,000 --> 01:38:55,000
服弃的出力级回到

3199
01:38:55,000 --> 01:38:57,000
一两兆应该是没有问题了

3200
01:38:57,000 --> 01:39:00,000
就每个Core的L2的话差

3201
01:39:01,000 --> 01:39:03,000
但是它的独取的时间

3202
01:39:03,000 --> 01:39:05,000
就会要高一个数乱级的

3203
01:39:05,000 --> 01:39:07,000
然后比如说它会不会再可能

3204
01:39:07,000 --> 01:39:08,000
几个难秒的左右

3205
01:39:08,000 --> 01:39:09,000
比如说这里我们有一个数据

3206
01:39:09,000 --> 01:39:10,000
是给的

3207
01:39:10,000 --> 01:39:11,000
这里是给的

3208
01:39:11,000 --> 01:39:14,000
这个文档我们会放在

3209
01:39:14,000 --> 01:39:16,000
那个nodes里面

3210
01:39:16,000 --> 01:39:18,000
这个文档也非常重要

3211
01:39:18,000 --> 01:39:19,000
如果你是一个程序员的话

3212
01:39:19,000 --> 01:39:20,000
这个文档的名称叫做

3213
01:39:20,000 --> 01:39:23,000
Litancy numbers and program

3214
01:39:23,000 --> 01:39:24,000
You should know

3215
01:39:24,000 --> 01:39:25,000
你是这个 program

3216
01:39:25,000 --> 01:39:27,000
所以你 should know

3217
01:39:27,000 --> 01:39:29,000
L2的独取实现的

3218
01:39:29,000 --> 01:39:30,000
跟它没有左右

3219
01:39:30,000 --> 01:39:33,000
当然还有一些出力机会有像什么

3220
01:39:33,000 --> 01:39:35,000
所以三级环存啊

3221
01:39:35,000 --> 01:39:37,000
没有见过四级环存的东西了

3222
01:39:37,000 --> 01:39:39,000
好像没有四级环存就到那一车了

3223
01:39:39,000 --> 01:39:40,000
对 四级环存

3224
01:39:40,000 --> 01:39:42,000
本人应该就已经是

3225
01:39:42,000 --> 01:39:43,000
很难说

3226
01:39:43,000 --> 01:39:44,000
应该可能也有了

3227
01:39:44,000 --> 01:39:46,000
我没有见过使用的系统上

3228
01:39:46,000 --> 01:39:47,000
有四级环存

3229
01:39:47,000 --> 01:39:48,000
OK

3230
01:39:48,000 --> 01:39:50,000
CPU一般最多的就是三

3231
01:39:50,000 --> 01:39:51,000
就是环存

3232
01:39:51,000 --> 01:39:54,000
这个东西一般是会和CPU做的一起的

3233
01:39:54,000 --> 01:39:55,000
对对

3234
01:39:55,000 --> 01:39:56,000
但是等你

3235
01:39:56,000 --> 01:39:57,000
还不太一样

3236
01:39:57,000 --> 01:39:58,000
三级环存

3237
01:39:58,000 --> 01:40:00,000
有很多是在主板上面的

3238
01:40:00,000 --> 01:40:01,000
什么

3239
01:40:01,000 --> 01:40:02,000
你还记得吗

3240
01:40:02,000 --> 01:40:04,000
这个早年就是90年代末的时候

3241
01:40:04,000 --> 01:40:06,000
有L1R20在板上

3242
01:40:06,000 --> 01:40:07,000
对 是在一个CPU上面

3243
01:40:07,000 --> 01:40:08,000
但是三级环存

3244
01:40:08,000 --> 01:40:09,000
有很多那种连价的

3245
01:40:09,000 --> 01:40:11,000
那不叫连价的主板

3246
01:40:11,000 --> 01:40:12,000
算吧 就是那种

3247
01:40:12,000 --> 01:40:13,000
平

3248
01:40:13,000 --> 01:40:14,000
平明像的主板

3249
01:40:14,000 --> 01:40:15,000
还是

3250
01:40:15,000 --> 01:40:16,000
会有把它做在主板上面

3251
01:40:16,000 --> 01:40:17,000
对 这样的话

3252
01:40:17,000 --> 01:40:18,000
它就可以

3253
01:40:18,000 --> 01:40:20,000
买一个比较便宜的

3254
01:40:20,000 --> 01:40:22,000
CPU不带三级环存

3255
01:40:22,000 --> 01:40:24,000
对 这个是一个

3256
01:40:24,000 --> 01:40:25,000
只是一个工业上的区别

3257
01:40:25,000 --> 01:40:27,000
这逻辑上是没有人和区别

3258
01:40:27,000 --> 01:40:28,000
就是

3259
01:40:28,000 --> 01:40:30,000
就总体来说

3260
01:40:30,000 --> 01:40:32,000
缓存越快

3261
01:40:32,000 --> 01:40:33,000
这个孙子去越快

3262
01:40:33,000 --> 01:40:34,000
它的容量越小

3263
01:40:34,000 --> 01:40:36,000
比如说机唇机就只有几个Word 对吧

3264
01:40:36,000 --> 01:40:38,000
在一个现在的CPU里面

3265
01:40:38,000 --> 01:40:41,000
就一百多个机唇器了

3266
01:40:41,000 --> 01:40:42,000
不得了了

3267
01:40:42,000 --> 01:40:44,000
然后

3268
01:40:44,000 --> 01:40:45,000
但是速度非常快

3269
01:40:45,000 --> 01:40:46,000
但是就

3270
01:40:46,000 --> 01:40:48,000
这个价格最快

3271
01:40:48,000 --> 01:40:50,000
然后一机缓存就即使K

3272
01:40:50,000 --> 01:40:52,000
价格次值速度也次值

3273
01:40:52,000 --> 01:40:54,000
然后最一次累推

3274
01:40:54,000 --> 01:40:55,000
差不多都是

3275
01:40:55,000 --> 01:40:56,000
对

3276
01:40:56,000 --> 01:41:00,000
每跨越一个环存的级别

3277
01:41:00,000 --> 01:41:01,000
它就有

3278
01:41:01,000 --> 01:41:03,000
至少是有一个数量的级的

3279
01:41:03,000 --> 01:41:05,000
容量和

3280
01:41:05,000 --> 01:41:07,000
这个访问速度的变化

3281
01:41:07,000 --> 01:41:08,000
对

3282
01:41:08,000 --> 01:41:09,000
大概是个意思

3283
01:41:09,000 --> 01:41:11,000
但现在就一般来说

3284
01:41:11,000 --> 01:41:12,000
就缓存的话

3285
01:41:12,000 --> 01:41:14,000
我们是看不到说

3286
01:41:14,000 --> 01:41:17,000
一级环存和二级环存的这个实体了

3287
01:41:17,000 --> 01:41:20,000
这个是对于你没有办法去具体的写

3288
01:41:20,000 --> 01:41:21,000
一个程序说

3289
01:41:21,000 --> 01:41:22,000
这个程序只用到一级环存

3290
01:41:22,000 --> 01:41:23,000
对

3291
01:41:23,000 --> 01:41:24,000
对

3292
01:41:24,000 --> 01:41:25,000
因为这个是在调什么

3293
01:41:25,000 --> 01:41:26,000
这个是

3294
01:41:26,000 --> 01:41:27,000
这个是

3295
01:41:27,000 --> 01:41:28,000
这个是

3296
01:41:28,000 --> 01:41:30,000
既然就硬件帮你去调度解决的问题

3297
01:41:30,000 --> 01:41:31,000
当然你会

3298
01:41:31,000 --> 01:41:32,000
会边可以做到

3299
01:41:32,000 --> 01:41:34,000
去选择性的使用

3300
01:41:34,000 --> 01:41:36,000
就成器内的东西

3301
01:41:36,000 --> 01:41:38,000
那个是另外一说

3302
01:41:38,000 --> 01:41:39,000
对

3303
01:41:39,000 --> 01:41:41,000
但是其实就说对于

3304
01:41:41,000 --> 01:41:42,000
一个普通程序来讲

3305
01:41:42,000 --> 01:41:43,000
暴露给你的尺寸

3306
01:41:43,000 --> 01:41:44,000
就只是一个内存地址

3307
01:41:44,000 --> 01:41:45,000
这种一个概念

3308
01:41:45,000 --> 01:41:46,000
然后

3309
01:41:46,000 --> 01:41:47,000
当然我们说内存

3310
01:41:47,000 --> 01:41:49,000
它是一罐机就没了

3311
01:41:49,000 --> 01:41:51,000
所以你还是要把东西放在一个

3312
01:41:51,000 --> 01:41:52,000
可以持久化的程序

3313
01:41:52,000 --> 01:41:53,000
比如说刺板或者

3314
01:41:53,000 --> 01:41:54,000
现在是SSD上面去

3315
01:41:55,000 --> 01:41:56,000
但是你看我头也讲了

3316
01:41:56,000 --> 01:41:57,000
你要把那些东西

3317
01:41:57,000 --> 01:41:59,000
漏的进内存里面才可以用

3318
01:41:59,000 --> 01:42:00,000
才有一个地址

3319
01:42:00,000 --> 01:42:01,000
可以执行

3320
01:42:01,000 --> 01:42:02,000
对

3321
01:42:02,000 --> 01:42:03,000
在这个页面上很方便了

3322
01:42:03,000 --> 01:42:05,000
它把这个

3323
01:42:05,000 --> 01:42:06,000
它在下面有一个

3324
01:42:06,000 --> 01:42:07,000
有一个非常新的页

3325
01:42:07,000 --> 01:42:08,000
对比例

3326
01:42:08,000 --> 01:42:09,000
对

3327
01:42:09,000 --> 01:42:11,000
它把所有的时间都

3328
01:42:11,000 --> 01:42:13,000
成了

3329
01:42:13,000 --> 01:42:15,000
一个

3330
01:42:15,000 --> 01:42:16,000
一个比例

3331
01:42:16,000 --> 01:42:17,000
十一倍

3332
01:42:17,000 --> 01:42:18,000
对

3333
01:42:18,000 --> 01:42:19,000
那么

3334
01:42:19,000 --> 01:42:20,000
In nano-cycle

3335
01:42:20,000 --> 01:42:22,000
成上十一就变成了

3336
01:42:22,000 --> 01:42:23,000
一秒

3337
01:42:23,000 --> 01:42:24,000
对对

3338
01:42:24,000 --> 01:42:25,000
那么

3339
01:42:25,000 --> 01:42:26,000
LE

3340
01:42:26,000 --> 01:42:27,000
换存的

3341
01:42:27,000 --> 01:42:29,000
存记时间大概是半秒钟

3342
01:42:29,000 --> 01:42:30,000
就是

3343
01:42:30,000 --> 01:42:31,000
今天跳了我一下

3344
01:42:31,000 --> 01:42:32,000
先跳一下

3345
01:42:32,000 --> 01:42:33,000
然后二十几换存的

3346
01:42:33,000 --> 01:42:35,000
存记时间大概是七秒钟

3347
01:42:35,000 --> 01:42:37,000
就是你打一个长生的哈起

3348
01:42:37,000 --> 01:42:38,000
大概

3349
01:42:38,000 --> 01:42:39,000
二十几换存就到了

3350
01:42:39,000 --> 01:42:40,000
如果你生活在

3351
01:42:40,000 --> 01:42:41,000
其餐区间里

3352
01:42:41,000 --> 01:42:42,000
你会在这儿唱

3353
01:42:42,000 --> 01:42:43,000
对

3354
01:42:43,000 --> 01:42:45,000
访问内存的时间

3355
01:42:45,000 --> 01:42:46,000
其实

3356
01:42:46,000 --> 01:42:48,000
我们都才觉得内存法问题快了

3357
01:42:48,000 --> 01:42:49,000
因为比刺盘快多少

3358
01:42:49,000 --> 01:42:50,000
但其实你跟

3359
01:42:50,000 --> 01:42:52,000
像这种CRL1

3360
01:42:52,000 --> 01:42:53,000
一级款在二级款存在比起来

3361
01:42:53,000 --> 01:42:55,000
还是非常非常慢的一个东西

3362
01:42:55,000 --> 01:42:57,000
就刚才那个比方

3363
01:42:57,000 --> 01:42:58,000
这里访问内存的话

3364
01:42:58,000 --> 01:42:59,000
大概是在

3365
01:42:59,000 --> 01:43:00,000
现代的机场机场

3366
01:43:00,000 --> 01:43:01,000
大概是一百秒的时候

3367
01:43:01,000 --> 01:43:02,000
就是

3368
01:43:02,000 --> 01:43:03,000
就存上十一的话

3369
01:43:03,000 --> 01:43:04,000
一百秒就是

3370
01:43:04,000 --> 01:43:06,000
将一两分钟左右

3371
01:43:06,000 --> 01:43:07,000
对

3372
01:43:07,000 --> 01:43:09,000
这段时间已经够你刷牙了

3373
01:43:09,000 --> 01:43:10,000
对

3374
01:43:10,000 --> 01:43:11,000
这个

3375
01:43:11,000 --> 01:43:12,000
这个类比还挺有意思的

3376
01:43:12,000 --> 01:43:13,000
大家可以去看一下

3377
01:43:13,000 --> 01:43:14,000
如果

3378
01:43:14,000 --> 01:43:15,000
还有包括一下

3379
01:43:15,000 --> 01:43:16,000
如果你发一个数据包

3380
01:43:16,000 --> 01:43:17,000
会怎么样

3381
01:43:17,000 --> 01:43:18,000
就是

3382
01:43:18,000 --> 01:43:19,000
它是这里给了一个例子

3383
01:43:19,000 --> 01:43:21,000
是从家周发一个数据包到

3384
01:43:21,000 --> 01:43:22,000
合了

3385
01:43:22,000 --> 01:43:23,000
然后再反回来

3386
01:43:23,000 --> 01:43:24,000
就是一个Rom Trip

3387
01:43:24,000 --> 01:43:26,000
那个是五年的时间

3388
01:43:26,000 --> 01:43:27,000
不可想

3389
01:43:27,000 --> 01:43:28,000
网络是很慢的

3390
01:43:28,000 --> 01:43:29,000
没错

3391
01:43:29,000 --> 01:43:30,000
对

3392
01:43:30,000 --> 01:43:33,000
所以在很多时候里面

3393
01:43:33,000 --> 01:43:35,000
很多场景里面

3394
01:43:35,000 --> 01:43:36,000
就是一个

3395
01:43:36,000 --> 01:43:37,000
程序百物了来的

3396
01:43:37,000 --> 01:43:38,000
在那死等

3397
01:43:38,000 --> 01:43:39,000
等Ion嘛

3398
01:43:39,000 --> 01:43:41,000
等对方

3399
01:43:41,000 --> 01:43:42,000
说发

3400
01:43:42,000 --> 01:43:43,000
送一数据包回来

3401
01:43:43,000 --> 01:43:44,000
对

3402
01:43:44,000 --> 01:43:45,000
这里其实

3403
01:43:45,000 --> 01:43:46,000
我们也可以看到了

3404
01:43:46,000 --> 01:43:47,000
刚才那个是说

3405
01:43:47,000 --> 01:43:48,000
等网络是很慢的

3406
01:43:48,000 --> 01:43:49,000
当然我们看一下

3407
01:43:49,000 --> 01:43:50,000
等的一个刺盘

3408
01:43:50,000 --> 01:43:52,000
就是访问一个这个

3409
01:43:52,000 --> 01:43:53,000
刺盘上的文件

3410
01:43:53,000 --> 01:43:54,000
就是独一的文件件

3411
01:43:54,000 --> 01:43:56,000
如果它还没有在那里面的话

3412
01:43:56,000 --> 01:43:57,000
大概是

3413
01:43:57,000 --> 01:43:59,000
16周左右

3414
01:43:59,000 --> 01:44:00,000
16周就是

3415
01:44:00,000 --> 01:44:01,000
四个月把差不多

3416
01:44:01,000 --> 01:44:02,000
对

3417
01:44:02,000 --> 01:44:03,000
如果你喜欢

3418
01:44:03,000 --> 01:44:04,000
也蛮客啊

3419
01:44:04,000 --> 01:44:05,000
对

3420
01:44:05,000 --> 01:44:06,000
所以你看我们现在

3421
01:44:06,000 --> 01:44:07,000
做很多做这个什么

3422
01:44:07,000 --> 01:44:08,000
意步的

3423
01:44:08,000 --> 01:44:09,000
就是现在边城

3424
01:44:09,000 --> 01:44:10,000
很多你要做一些

3425
01:44:10,000 --> 01:44:11,000
所谓

3426
01:44:11,000 --> 01:44:13,000
I-O-Havv的一些

3427
01:44:13,000 --> 01:44:14,000
应用像node

3428
01:44:14,000 --> 01:44:15,000
这种东西

3429
01:44:15,000 --> 01:44:17,000
你到走一步的方法

3430
01:44:17,000 --> 01:44:18,000
就是

3431
01:44:18,000 --> 01:44:20,000
因为你可以看到

3432
01:44:20,000 --> 01:44:22,000
如果你每次I-O都要等同步的话

3433
01:44:22,000 --> 01:44:24,000
你这个程序就没法玩了

3434
01:44:24,000 --> 01:44:25,000
对

3435
01:44:25,000 --> 01:44:26,000
你让无心之中

3436
01:44:26,000 --> 01:44:27,000
浪费了

3437
01:44:27,000 --> 01:44:28,000
非常非常多保卫的CPU

3438
01:44:28,000 --> 01:44:29,000
大部分时间就是

3439
01:44:29,000 --> 01:44:30,000
都是在显制的

3440
01:44:33,000 --> 01:44:35,000
所以有这个

3441
01:44:35,000 --> 01:44:37,000
memory这个内存的成绩

3442
01:44:37,000 --> 01:44:38,000
就是要

3443
01:44:38,000 --> 01:44:39,000
如果我们

3444
01:44:39,000 --> 01:44:40,000
直接把这么多成绩

3445
01:44:40,000 --> 01:44:42,000
暴露给开发轴的话

3446
01:44:42,000 --> 01:44:44,000
那显然这个软件工程

3447
01:44:44,000 --> 01:44:45,000
就不用完了

3448
01:44:45,000 --> 01:44:46,000
天然那里

3449
01:44:46,000 --> 01:44:47,000
第八个内存错

3450
01:44:47,000 --> 01:44:49,000
那个内存的问题都已经够你了

3451
01:44:49,000 --> 01:44:51,000
好玩上一则子

3452
01:44:51,000 --> 01:44:53,000
所以我们把这种

3453
01:44:53,000 --> 01:44:54,000
通过像一些

3454
01:44:54,000 --> 01:44:56,000
首先比如说

3455
01:44:56,000 --> 01:44:57,000
硬件上面

3456
01:44:57,000 --> 01:44:59,000
直接隐藏掉

3457
01:44:59,000 --> 01:45:00,000
一击二击环存

3458
01:45:00,000 --> 01:45:01,000
然后通过这个

3459
01:45:01,000 --> 01:45:02,000
虚拟内存这个干润

3460
01:45:02,000 --> 01:45:03,000
隐藏掉

3461
01:45:03,000 --> 01:45:06,000
磁盘和内存之间的区别

3462
01:45:06,000 --> 01:45:07,000
这样的话可以把

3463
01:45:07,000 --> 01:45:09,000
这个边城模型大幅度解画

3464
01:45:09,000 --> 01:45:10,000
让我们这种

3465
01:45:10,000 --> 01:45:11,000
平庸之辈

3466
01:45:11,000 --> 01:45:13,000
也能够开开心心的鞋上程序

3467
01:45:15,000 --> 01:45:16,000
或者应该

3468
01:45:16,000 --> 01:45:18,000
应该是反过来说

3469
01:45:18,000 --> 01:45:19,000
应该是这种进化

3470
01:45:19,000 --> 01:45:20,000
这种进化就是存在

3471
01:45:20,000 --> 01:45:21,000
是因为

3472
01:45:21,000 --> 01:45:22,000
试图让平庸之辈

3473
01:45:22,000 --> 01:45:23,000
写出来的程序

3474
01:45:23,000 --> 01:45:24,000
也可以在

3475
01:45:24,000 --> 01:45:25,000
也可以比较

3476
01:45:25,000 --> 01:45:26,000
体面的跑根

3477
01:45:26,000 --> 01:45:27,000
然后上方的

3478
01:45:27,000 --> 01:45:28,000
真的是半天都不得了

3479
01:45:28,000 --> 01:45:30,000
或者说是直接就

3480
01:45:30,000 --> 01:45:31,000
夸吓死掉了

3481
01:45:31,000 --> 01:45:32,000
对

3482
01:45:32,000 --> 01:45:33,000
不过这里

3483
01:45:33,000 --> 01:45:34,000
其实还是牵试到

3484
01:45:34,000 --> 01:45:35,000
有一个概念

3485
01:45:35,000 --> 01:45:37,000
就是为什么我们

3486
01:45:37,000 --> 01:45:39,000
要分做很多内存的

3487
01:45:39,000 --> 01:45:41,000
层级

3488
01:45:41,000 --> 01:45:42,000
也就是因为球

3489
01:45:42,000 --> 01:45:43,000
对

3490
01:45:43,000 --> 01:45:45,000
因为内存的造价时

3491
01:45:45,000 --> 01:45:46,000
还是太高

3492
01:45:46,000 --> 01:45:47,000
就是你如果

3493
01:45:47,000 --> 01:45:48,000
大家都做成

3494
01:45:48,000 --> 01:45:49,000
首先物理上做不到

3495
01:45:49,000 --> 01:45:50,000
因为你要做成级存器的话

3496
01:45:50,000 --> 01:45:51,000
你得

3497
01:45:51,000 --> 01:45:52,000
所有东西都在

3498
01:45:52,000 --> 01:45:53,000
那个芯片里面对吧

3499
01:45:53,000 --> 01:45:54,000
但是

3500
01:45:54,000 --> 01:45:55,000
得靠近那个什么

3501
01:45:55,000 --> 01:45:56,000
级算圆器

3502
01:45:56,000 --> 01:45:57,000
但是那个物理空间

3503
01:45:57,000 --> 01:45:58,000
是有线的

3504
01:45:58,000 --> 01:45:59,000
也不可能做到

3505
01:45:59,000 --> 01:46:00,000
第二就是说

3506
01:46:00,000 --> 01:46:01,000
如果能做到

3507
01:46:01,000 --> 01:46:02,000
比如说

3508
01:46:02,000 --> 01:46:03,000
我们都用

3509
01:46:03,000 --> 01:46:04,000
把衣机缓成做成

3510
01:46:04,000 --> 01:46:05,000
500招

3511
01:46:05,000 --> 01:46:07,000
而可能就成一个机

3512
01:46:07,000 --> 01:46:09,000
也可以

3513
01:46:09,000 --> 01:46:10,000
但是

3514
01:46:10,000 --> 01:46:11,000
这个成本就

3515
01:46:11,000 --> 01:46:12,000
不是天文数字了

3516
01:46:12,000 --> 01:46:13,000
不可以想象

3517
01:46:13,000 --> 01:46:14,000
可能

3518
01:46:14,000 --> 01:46:16,000
第二盖是只能买两套

3519
01:46:16,000 --> 01:46:17,000
是

3520
01:46:17,000 --> 01:46:19,000
买的起半台都不错了

3521
01:46:19,000 --> 01:46:22,000
但是

3522
01:46:22,000 --> 01:46:23,000
内存层级

3523
01:46:23,000 --> 01:46:24,000
搞这么复杂

3524
01:46:24,000 --> 01:46:25,000
也是为了

3525
01:46:25,000 --> 01:46:27,000
向线时的一个妥协

3526
01:46:27,000 --> 01:46:28,000
就是在

3527
01:46:28,000 --> 01:46:29,000
我们怎么把这个东西

3528
01:46:29,000 --> 01:46:30,000
做尽量便宜

3529
01:46:30,000 --> 01:46:31,000
那么

3530
01:46:31,000 --> 01:46:32,000
越慢的东西越便宜对吧

3531
01:46:32,000 --> 01:46:33,000
对

3532
01:46:33,000 --> 01:46:34,000
那就慢一点了

3533
01:46:34,000 --> 01:46:36,000
那就要通过这种

3534
01:46:36,000 --> 01:46:39,000
分层级的方式来隐藏掉我们时代

3535
01:46:39,000 --> 01:46:40,000
用一个很便宜

3536
01:46:40,000 --> 01:46:41,000
很慢的一个设计

3537
01:46:41,000 --> 01:46:42,000
对

3538
01:46:42,000 --> 01:46:44,000
然后把剩余的好杠都

3539
01:46:44,000 --> 01:46:45,000
就是

3540
01:46:45,000 --> 01:46:46,000
用在刀上

3541
01:46:46,000 --> 01:46:47,000
不刀尖上

3542
01:46:47,000 --> 01:46:48,000
其实我刚才

3543
01:46:48,000 --> 01:46:50,000
刚才想了一下

3544
01:46:50,000 --> 01:46:52,000
假设一个精人

3545
01:46:52,000 --> 01:46:54,000
一个圆形的精人

3546
01:46:54,000 --> 01:46:57,000
完全用来做幻存

3547
01:46:57,000 --> 01:46:59,000
大概有多少钱

3548
01:46:59,000 --> 01:47:01,000
一个精兴骗吗

3549
01:47:01,000 --> 01:47:02,000
对

3550
01:47:02,000 --> 01:47:04,000
整个一大骗精人

3551
01:47:04,000 --> 01:47:07,000
做成一个幻存

3552
01:47:07,000 --> 01:47:08,000
然后像

3553
01:47:08,000 --> 01:47:09,000
他要能把那样

3554
01:47:09,000 --> 01:47:10,000
装在什么地方

3555
01:47:10,000 --> 01:47:11,000
然后把它

3556
01:47:11,000 --> 01:47:14,000
把它插在CPU什么地方

3557
01:47:14,000 --> 01:47:16,000
这个我还不太

3558
01:47:16,000 --> 01:47:17,000
首先有个物理的线

3559
01:47:17,000 --> 01:47:19,000
就是你访问他的速度

3560
01:47:19,000 --> 01:47:21,000
是很定的嘛

3561
01:47:21,000 --> 01:47:22,000
你就

3562
01:47:22,000 --> 01:47:23,000
打开

3563
01:47:23,000 --> 01:47:24,000
你就你便大了之后

3564
01:47:24,000 --> 01:47:25,000
你访问边缘

3565
01:47:25,000 --> 01:47:26,000
边缘上的那一部分

3566
01:47:26,000 --> 01:47:27,000
必然是要等的嘛

3567
01:47:27,000 --> 01:47:29,000
他怎么做出立题的嘛

3568
01:47:29,000 --> 01:47:30,000
对

3569
01:47:30,000 --> 01:47:31,000
那我小时候有这种

3570
01:47:31,000 --> 01:47:32,000
遇选的想法

3571
01:47:32,000 --> 01:47:33,000
没错

3572
01:47:33,000 --> 01:47:34,000
这是一个很好的想法

3573
01:47:34,000 --> 01:47:35,000
三维不线

3574
01:47:35,000 --> 01:47:36,000
对

3575
01:47:36,000 --> 01:47:37,000
三维不线也是一个很常用的一个思路嘛

3576
01:47:37,000 --> 01:47:38,000
但是问题就说

3577
01:47:38,000 --> 01:47:39,000
这个始终是一个

3578
01:47:39,000 --> 01:47:40,000
从二维变成了三维嘛

3579
01:47:40,000 --> 01:47:43,000
你的这个种的空间始终还是有线

3580
01:47:43,000 --> 01:47:45,000
就不可能无线制的这个

3581
01:47:45,000 --> 01:47:46,000
就是不管是从物理线

3582
01:47:46,000 --> 01:47:48,000
实在角度考虑

3583
01:47:48,000 --> 01:47:49,000
还是从一个经济的角度考虑

3584
01:47:49,000 --> 01:47:51,000
都一定是存在这么一个

3585
01:47:51,000 --> 01:47:53,000
不同等级的存储

3586
01:47:53,000 --> 01:47:56,000
对方认识间和容量的线制了

3587
01:47:56,000 --> 01:47:57,000
除非你在

3588
01:47:57,000 --> 01:47:59,000
可以在非常微小的持络上开大

3589
01:47:59,000 --> 01:48:00,000
都会抛头

3590
01:48:00,000 --> 01:48:01,000
然后

3591
01:48:01,000 --> 01:48:03,000
可以开高尾空间

3592
01:48:03,000 --> 01:48:04,000
对

3593
01:48:04,000 --> 01:48:07,000
彻底解决的方式速度问题

3594
01:48:08,000 --> 01:48:09,000
那个作弊了

3595
01:48:09,000 --> 01:48:12,000
回到我们正常的现实世界

3596
01:48:12,000 --> 01:48:13,000
对

3597
01:48:13,000 --> 01:48:16,000
但有一个挺麻烦的问题就是

3598
01:48:16,000 --> 01:48:18,000
内存它是我们现在用的主要的内存

3599
01:48:18,000 --> 01:48:19,000
它是一个叫做

3600
01:48:19,000 --> 01:48:21,000
一失性的内存

3601
01:48:21,000 --> 01:48:23,000
叫做Valotire的内存

3602
01:48:23,000 --> 01:48:24,000
什么意思呢就是

3603
01:48:24,000 --> 01:48:26,000
Valotire这个词本意是灰发吗

3604
01:48:26,000 --> 01:48:27,000
我记得

3605
01:48:27,000 --> 01:48:28,000
对

3606
01:48:28,000 --> 01:48:29,000
就是灰发的一声

3607
01:48:29,000 --> 01:48:30,000
灰发的一声

3608
01:48:30,000 --> 01:48:31,000
对

3609
01:48:31,000 --> 01:48:32,000
内存灰发

3610
01:48:32,000 --> 01:48:33,000
对

3611
01:48:33,000 --> 01:48:34,000
对

3612
01:48:34,000 --> 01:48:36,000
所以说的一失性就是说

3613
01:48:36,000 --> 01:48:38,000
你一旦锻炼之后

3614
01:48:38,000 --> 01:48:39,000
内存里面存了东西

3615
01:48:39,000 --> 01:48:40,000
BIRD就没有了

3616
01:48:40,000 --> 01:48:41,000
但是

3617
01:48:41,000 --> 01:48:42,000
BIRD这么快就

3618
01:48:42,000 --> 01:48:43,000
因为我记得

3619
01:48:43,000 --> 01:48:45,000
大概产流的

3620
01:48:45,000 --> 01:48:46,000
对

3621
01:48:46,000 --> 01:48:48,000
2010年左右有一群

3622
01:48:48,000 --> 01:48:51,000
有一个安全事人

3623
01:48:51,000 --> 01:48:52,000
展示了

3624
01:48:52,000 --> 01:48:53,000
有点到关系之后

3625
01:48:53,000 --> 01:48:55,000
立刻用叶弹去

3626
01:48:55,000 --> 01:48:56,000
冷冻它

3627
01:48:56,000 --> 01:48:57,000
应该没有叶弹吗

3628
01:48:57,000 --> 01:48:58,000
没有叶弹

3629
01:48:58,000 --> 01:49:00,000
是叶弹吗

3630
01:49:00,000 --> 01:49:01,000
就是立刻把它冷冻住

3631
01:49:01,000 --> 01:49:02,000
然后去

3632
01:49:02,000 --> 01:49:05,000
直接搜了内存里面的数据

3633
01:49:05,000 --> 01:49:06,000
然后

3634
01:49:06,000 --> 01:49:07,000
它可能读出来些许的

3635
01:49:07,000 --> 01:49:08,000
对

3636
01:49:08,000 --> 01:49:09,000
它可能把这个什么

3637
01:49:09,000 --> 01:49:10,000
电子的

3638
01:49:10,000 --> 01:49:11,000
那个

3639
01:49:11,000 --> 01:49:12,000
状态

3640
01:49:12,000 --> 01:49:13,000
在低温状态下

3641
01:49:13,000 --> 01:49:14,000
能够维持一段时间吗

3642
01:49:14,000 --> 01:49:15,000
对

3643
01:49:15,000 --> 01:49:16,000
就像对

3644
01:49:16,000 --> 01:49:17,000
这些

3645
01:49:17,000 --> 01:49:18,000
然后回应

3646
01:49:18,000 --> 01:49:19,000
我们刚才讲的这个Latincy

3647
01:49:19,000 --> 01:49:20,000
就这些

3648
01:49:20,000 --> 01:49:22,000
所有的数据都在冬年

3649
01:49:22,000 --> 01:49:24,000
冬年它十几年

3650
01:49:24,000 --> 01:49:26,000
然后被被被被被被

3651
01:49:26,000 --> 01:49:27,000
拿出来了

3652
01:49:27,000 --> 01:49:29,000
但是

3653
01:49:29,000 --> 01:49:30,000
但是

3654
01:49:30,000 --> 01:49:31,000
我们的日常

3655
01:49:31,000 --> 01:49:32,000
说开开开

3656
01:49:32,000 --> 01:49:33,000
无套奖那种

3657
01:49:33,000 --> 01:49:34,000
极端变态的场景之外

3658
01:49:34,000 --> 01:49:35,000
但是正常情况下

3659
01:49:35,000 --> 01:49:36,000
你断电之后

3660
01:49:36,000 --> 01:49:37,000
内存中的数据

3661
01:49:37,000 --> 01:49:38,000
就已经没有了

3662
01:49:38,000 --> 01:49:39,000
就清零了

3663
01:49:39,000 --> 01:49:40,000
然后你在

3664
01:49:40,000 --> 01:49:41,000
通电的时候

3665
01:49:41,000 --> 01:49:42,000
你没有

3666
01:49:42,000 --> 01:49:43,000
它这些什么

3667
01:49:43,000 --> 01:49:44,000
不记得了

3668
01:49:44,000 --> 01:49:45,000
这个很明显

3669
01:49:45,000 --> 01:49:46,000
明显就是一个问题

3670
01:49:46,000 --> 01:49:47,000
那比如说你电脑关机之后

3671
01:49:47,000 --> 01:49:48,000
什么资料都没有了

3672
01:49:48,000 --> 01:49:49,000
那你搞什么

3673
01:49:49,000 --> 01:49:50,000
白搞了

3674
01:49:50,000 --> 01:49:51,000
对

3675
01:49:51,000 --> 01:49:52,000
这也就是

3676
01:49:52,000 --> 01:49:53,000
我们为什么会

3677
01:49:53,000 --> 01:49:54,000
会需要软盘

3678
01:49:54,000 --> 01:49:55,000
或者说

3679
01:49:55,000 --> 01:49:56,000
需要外置资盘这种东西

3680
01:49:56,000 --> 01:49:57,000
对

3681
01:49:57,000 --> 01:49:58,000
就是一盘

3682
01:49:58,000 --> 01:49:59,000
之前的软盘

3683
01:49:59,000 --> 01:50:00,000
南挖了它

3684
01:50:00,000 --> 01:50:01,000
的存组节

3685
01:50:01,000 --> 01:50:03,000
这就非意识性的存储

3686
01:50:03,000 --> 01:50:04,000
就是断电之后

3687
01:50:04,000 --> 01:50:05,000
还在

3688
01:50:05,000 --> 01:50:06,000
对

3689
01:50:06,000 --> 01:50:07,000
但其实

3690
01:50:07,000 --> 01:50:08,000
这两个中间是

3691
01:50:08,000 --> 01:50:10,000
有一定的这个障碍的

3692
01:50:10,000 --> 01:50:11,000
刚才我们讲了

3693
01:50:11,000 --> 01:50:12,000
因为这双机

3694
01:50:12,000 --> 01:50:13,000
并就

3695
01:50:13,000 --> 01:50:14,000
先把糟糕系统并不能直接

3696
01:50:14,000 --> 01:50:15,000
直接执行一盘上面的东西

3697
01:50:15,000 --> 01:50:16,000
它在先

3698
01:50:16,000 --> 01:50:17,000
读到内存里面去

3699
01:50:17,000 --> 01:50:18,000
所以每次都会有

3700
01:50:18,000 --> 01:50:19,000
这么一个很变态的

3701
01:50:19,000 --> 01:50:21,000
这么一个读取

3702
01:50:21,000 --> 01:50:22,000
然后写内存

3703
01:50:22,000 --> 01:50:23,000
然后

3704
01:50:23,000 --> 01:50:24,000
的一个过程

3705
01:50:24,000 --> 01:50:25,000
然后

3706
01:50:25,000 --> 01:50:27,000
最于一个软件的开发者来讲

3707
01:50:27,000 --> 01:50:28,000
你也要做一些

3708
01:50:28,000 --> 01:50:29,000
很奇怪的事情

3709
01:50:29,000 --> 01:50:30,000
比如说

3710
01:50:30,000 --> 01:50:31,000
我们

3711
01:50:31,000 --> 01:50:32,000
做这个

3712
01:50:32,000 --> 01:50:33,000
所谓会有一个

3713
01:50:33,000 --> 01:50:34,000
训练化解

3714
01:50:34,000 --> 01:50:35,000
训练化的东西

3715
01:50:35,000 --> 01:50:36,000
就是你把一个数据文件

3716
01:50:36,000 --> 01:50:38,000
读到内存中

3717
01:50:38,000 --> 01:50:39,000
然后你要保存的时候

3718
01:50:39,000 --> 01:50:40,000
你还得想办法

3719
01:50:40,000 --> 01:50:41,000
它

3720
01:50:41,000 --> 01:50:42,000
把它写回磁盘

3721
01:50:42,000 --> 01:50:43,000
然后写回磁盘的中间

3722
01:50:43,000 --> 01:50:44,000
你都会想

3723
01:50:44,000 --> 01:50:46,000
怎么把那个内存做到一个结构

3724
01:50:46,000 --> 01:50:49,000
变成磁盘上面的一个

3725
01:50:49,000 --> 01:50:50,000
一组

3726
01:50:50,000 --> 01:50:51,000
二斤制的流

3727
01:50:51,000 --> 01:50:52,000
对吧

3728
01:50:52,000 --> 01:50:53,000
对

3729
01:50:53,000 --> 01:50:55,000
不一定是二斤制的

3730
01:50:55,000 --> 01:50:57,000
最后

3731
01:50:57,000 --> 01:50:58,000
最后不会变成一种

3732
01:50:58,000 --> 01:50:59,000
就

3733
01:50:59,000 --> 01:51:00,000
就和谐要点是

3734
01:51:00,000 --> 01:51:02,000
说这个结

3735
01:51:02,000 --> 01:51:03,000
这个数据结构在内存中

3736
01:51:03,000 --> 01:51:05,000
是存在一定形态的

3737
01:51:05,000 --> 01:51:06,000
一个方式和结构组

3738
01:51:06,000 --> 01:51:08,000
就通过这个指针的方式

3739
01:51:08,000 --> 01:51:09,000
对

3740
01:51:09,000 --> 01:51:10,000
你不是想办法把这个结构

3741
01:51:10,000 --> 01:51:12,000
转化为某种

3742
01:51:12,000 --> 01:51:14,000
可以复原的

3743
01:51:14,000 --> 01:51:16,000
一个一个一个自结串

3744
01:51:16,000 --> 01:51:18,000
或者是二斤制的串

3745
01:51:18,000 --> 01:51:19,000
对

3746
01:51:19,000 --> 01:51:21,000
所以有这么一个训练化解训练化的过程

3747
01:51:21,000 --> 01:51:22,000
其实这点

3748
01:51:22,000 --> 01:51:24,000
是挺折腾的

3749
01:51:24,000 --> 01:51:25,000
就是为什么

3750
01:51:25,000 --> 01:51:27,000
如果假设你想想

3751
01:51:27,000 --> 01:51:30,000
如果我们把内存做成一个

3752
01:51:30,000 --> 01:51:32,000
非意识的

3753
01:51:32,000 --> 01:51:33,000
内存关机之后

3754
01:51:33,000 --> 01:51:35,000
它在锻炼之后

3755
01:51:35,000 --> 01:51:37,000
在通电还能记住之前内容

3756
01:51:37,000 --> 01:51:38,000
你想想一下

3757
01:51:38,000 --> 01:51:39,000
我们这个日常使用的机针机

3758
01:51:39,000 --> 01:51:40,000
就是一个很爽的状态

3759
01:51:40,000 --> 01:51:41,000
开机不用等

3760
01:51:41,000 --> 01:51:42,000
你想

3761
01:51:42,000 --> 01:51:43,000
不用的时候按掉

3762
01:51:43,000 --> 01:51:44,000
把掉电源线

3763
01:51:44,000 --> 01:51:45,000
就是你不用关机

3764
01:51:45,000 --> 01:51:47,000
把电池把掉的没问题

3765
01:51:47,000 --> 01:51:48,000
然后你插电车

3766
01:51:48,000 --> 01:51:50,000
又回到那个画面了

3767
01:51:50,000 --> 01:51:51,000
一模一样

3768
01:51:51,000 --> 01:51:53,000
我有个问题

3769
01:51:53,000 --> 01:51:55,000
比如说mp3不放器

3770
01:51:55,000 --> 01:51:56,000
或者是

3771
01:51:56,000 --> 01:51:59,000
比如说单片机

3772
01:51:59,000 --> 01:52:03,000
有些单片机使用的存主器

3773
01:52:03,000 --> 01:52:05,000
的确是非囊磨的它

3774
01:52:05,000 --> 01:52:06,000
对

3775
01:52:06,000 --> 01:52:07,000
有这种

3776
01:52:07,000 --> 01:52:08,000
有很

3777
01:52:08,000 --> 01:52:10,000
这种叫什么

3778
01:52:10,000 --> 01:52:12,000
比较小的情况下

3779
01:52:12,000 --> 01:52:14,000
它会有那种应用

3780
01:52:14,000 --> 01:52:15,000
就是它能够关掉

3781
01:52:15,000 --> 01:52:16,000
然后重挤就它还在那个状态

3782
01:52:16,000 --> 01:52:17,000
对

3783
01:52:17,000 --> 01:52:18,000
所以这种机器

3784
01:52:18,000 --> 01:52:20,000
实际上是没有

3785
01:52:20,000 --> 01:52:22,000
这个问题存在

3786
01:52:22,000 --> 01:52:24,000
就是它无所谓什么东西

3787
01:52:24,000 --> 01:52:26,000
什么就是它完全不会区分

3788
01:52:26,000 --> 01:52:28,000
什么是一个程序在运行的状态

3789
01:52:28,000 --> 01:52:31,000
以及什么是一个程序被

3790
01:52:31,000 --> 01:52:32,000
被被被被

3791
01:52:32,000 --> 01:52:33,000
加转

3792
01:52:33,000 --> 01:52:34,000
对对对

3793
01:52:34,000 --> 01:52:36,000
被折叠起来被存住起来的状态

3794
01:52:36,000 --> 01:52:37,000
对

3795
01:52:37,000 --> 01:52:38,000
对

3796
01:52:38,000 --> 01:52:39,000
如果它是用这种非意识性的那种状态

3797
01:52:39,000 --> 01:52:41,000
它就是真的可以做到这一点

3798
01:52:41,000 --> 01:52:42,000
而且

3799
01:52:42,000 --> 01:52:44,000
但这个硬件上具体怎么样

3800
01:52:44,000 --> 01:52:45,000
我们先不说

3801
01:52:45,000 --> 01:52:46,000
但我们就只讨论这种

3802
01:52:46,000 --> 01:52:48,000
如果这种是一个主流的方式

3803
01:52:48,000 --> 01:52:49,000
说到我们作为一个开发者

3804
01:52:49,000 --> 01:52:50,000
作为一个城市员

3805
01:52:50,000 --> 01:52:52,000
这边圈模型就很爽了

3806
01:52:52,000 --> 01:52:55,000
比如说你不用想什么什么持久化

3807
01:52:55,000 --> 01:52:58,000
就就像我们现在比如做什么后端开发

3808
01:52:58,000 --> 01:53:01,000
要考虑说这个内存这个机器死机了

3809
01:53:01,000 --> 01:53:03,000
就辐出其当机了

3810
01:53:03,000 --> 01:53:04,000
我那个内存状的数据不就没了吗

3811
01:53:04,000 --> 01:53:06,000
那我又没写到那次盘上面

3812
01:53:06,000 --> 01:53:07,000
不就丢了吗

3813
01:53:07,000 --> 01:53:08,000
对吧

3814
01:53:08,000 --> 01:53:09,000
就会有这种这种单约

3815
01:53:09,000 --> 01:53:11,000
然后会有通通各种方法去

3816
01:53:11,000 --> 01:53:13,000
去想办法

3817
01:53:13,000 --> 01:53:14,000
掩盖

3818
01:53:14,000 --> 01:53:17,000
就是处理针对这种内心受监

3819
01:53:17,000 --> 01:53:19,000
但是如果你的内存是非意识的话

3820
01:53:19,000 --> 01:53:20,000
就很爽了

3821
01:53:20,000 --> 01:53:23,000
那就直接重啟一下对吧

3822
01:53:23,000 --> 01:53:26,000
就在通电还是那个状态

3823
01:53:26,000 --> 01:53:29,000
我们也不用去考虑什么

3824
01:53:29,000 --> 01:53:30,000
训练化解训练化

3825
01:53:30,000 --> 01:53:31,000
就开机干长了

3826
01:53:31,000 --> 01:53:33,000
训练化解决化就是要

3827
01:53:33,000 --> 01:53:36,000
就是我们开机要等那么长的一个时间的最主要的原因

3828
01:53:36,000 --> 01:53:38,000
你要等那个东西从此办上

3829
01:53:38,000 --> 01:53:39,000
加拿大的内存里面去

3830
01:53:39,000 --> 01:53:42,000
要把那个训练化的一个

3831
01:53:42,000 --> 01:53:43,000
亚士能力可以想像上

3832
01:53:43,000 --> 01:53:44,000
它比较压缩

3833
01:53:44,000 --> 01:53:46,000
变成一个转写的结构

3834
01:53:46,000 --> 01:53:48,000
变成内存中的一个结构

3835
01:53:48,000 --> 01:53:50,000
这个是要花时间等着吗

3836
01:53:50,000 --> 01:53:52,000
但是训练化其实还有另外一个用途

3837
01:53:52,000 --> 01:53:55,000
或者说训练化也比较主要的用途

3838
01:53:55,000 --> 01:53:57,000
就是数据传输

3839
01:53:57,000 --> 01:54:00,000
为了传输数据你不得不把它去练化

3840
01:54:00,000 --> 01:54:02,000
传输没解

3841
01:54:02,000 --> 01:54:03,000
本身是传输的时候

3842
01:54:03,000 --> 01:54:05,000
肯定是要进行训练化

3843
01:54:05,000 --> 01:54:06,000
但是就是说

3844
01:54:06,000 --> 01:54:07,000
如果你做一个

3845
01:54:07,000 --> 01:54:08,000
比如说你操细总体每天起动的时候

3846
01:54:08,000 --> 01:54:10,000
你不需要合理传输什么

3847
01:54:10,000 --> 01:54:11,000
你不需要你这个操细总

3848
01:54:11,000 --> 01:54:13,000
不是从另外一个网络上传过来的吗

3849
01:54:13,000 --> 01:54:14,000
对吧

3850
01:54:14,000 --> 01:54:15,000
对

3851
01:54:15,000 --> 01:54:16,000
大部分结果小

3852
01:54:16,000 --> 01:54:17,000
我们napute

3853
01:54:17,000 --> 01:54:19,000
那个情况再说

3854
01:54:19,000 --> 01:54:22,000
你体重你的电脑的时候

3855
01:54:22,000 --> 01:54:26,000
你的操细总是不需要等网络才能启动的吗

3856
01:54:26,000 --> 01:54:27,000
所以这个时候

3857
01:54:27,000 --> 01:54:30,000
如果我们能做到一个非意识的内存的话

3858
01:54:30,000 --> 01:54:31,000
你切都很爽

3859
01:54:31,000 --> 01:54:33,000
开机就可以有了

3860
01:54:33,000 --> 01:54:34,000
关机就可以走了

3861
01:54:36,000 --> 01:54:37,000
但传统上这个是做

3862
01:54:37,000 --> 01:54:39,000
传统上我们做不到

3863
01:54:39,000 --> 01:54:42,000
因为也是一个工业现实和成本的考量

3864
01:54:42,000 --> 01:54:44,000
非意识的内存是有的

3865
01:54:44,000 --> 01:54:46,000
但是一个是比较贵

3866
01:54:46,000 --> 01:54:48,000
另外一个就是它的访问速度

3867
01:54:48,000 --> 01:54:50,000
传取速度不是进入无人意

3868
01:54:50,000 --> 01:54:51,000
对

3869
01:54:51,000 --> 01:54:53,000
最大的问题就是还是太忙了

3870
01:54:53,000 --> 01:54:54,000
满和贵

3871
01:54:54,000 --> 01:54:55,000
就是要么

3872
01:54:55,000 --> 01:54:56,000
都是要么

3873
01:54:56,000 --> 01:54:58,000
要求其中一个的必必

3874
01:54:58,000 --> 01:55:02,000
然后最近有一个所谓的

3875
01:55:02,000 --> 01:55:03,000
第一

3876
01:55:03,000 --> 01:55:05,000
你知道传统那么三大类电容

3877
01:55:05,000 --> 01:55:07,000
不叫这么电器

3878
01:55:07,000 --> 01:55:10,000
电容电组和电稻

3879
01:55:10,000 --> 01:55:11,000
就是稻线没

3880
01:55:12,000 --> 01:55:14,000
我的三大原期剑我记得

3881
01:55:14,000 --> 01:55:15,000
三大三大

3882
01:55:15,000 --> 01:55:17,000
电容电组和电

3883
01:55:17,000 --> 01:55:21,000
其实这块马上就要暴露出这个

3884
01:55:21,000 --> 01:55:23,000
就是纠费不足

3885
01:55:23,000 --> 01:55:26,000
因为不是做一一的

3886
01:55:26,000 --> 01:55:27,000
这块真的完全不自态动

3887
01:55:27,000 --> 01:55:28,000
但是

3888
01:55:28,000 --> 01:55:29,000
我的电路不考过

3889
01:55:30,000 --> 01:55:31,000
我都没写过

3890
01:55:31,000 --> 01:55:33,000
你比我还好

3891
01:55:33,000 --> 01:55:34,000
不好意思

3892
01:55:34,000 --> 01:55:35,000
不

3893
01:55:35,000 --> 01:55:38,000
传统上有那么那几种原期剑

3894
01:55:38,000 --> 01:55:40,000
电组电容电感

3895
01:55:40,000 --> 01:55:42,000
还是三大类没写错

3896
01:55:42,000 --> 01:55:45,000
所谓存在说第四类的这种原期剑

3897
01:55:45,000 --> 01:55:46,000
英文叫做

3898
01:55:46,000 --> 01:55:48,000
memorymemory

3899
01:55:48,000 --> 01:55:50,000
memory

3900
01:55:50,000 --> 01:55:51,000
memory

3901
01:55:51,000 --> 01:55:53,000
然后中文这里

3902
01:55:53,000 --> 01:55:55,000
维基百科的发言叫做

3903
01:55:55,000 --> 01:55:57,000
异主气

3904
01:55:57,000 --> 01:55:59,000
就是记的异

3905
01:55:59,000 --> 01:56:01,000
然后电组的组

3906
01:56:01,000 --> 01:56:02,000
异主气

3907
01:56:02,000 --> 01:56:05,000
它有一些奇怪的

3908
01:56:05,000 --> 01:56:07,000
物理学电器的特性

3909
01:56:07,000 --> 01:56:09,000
然后我去看不太懂

3910
01:56:09,000 --> 01:56:12,000
但是我知道它的作用是什么

3911
01:56:12,000 --> 01:56:14,000
对于一个程序来讲

3912
01:56:14,000 --> 01:56:16,000
它的作用就可以让你实现

3913
01:56:16,000 --> 01:56:17,000
所谓的干讲

3914
01:56:17,000 --> 01:56:20,000
一个是非意识的内存

3915
01:56:20,000 --> 01:56:22,000
对我来说很重要的一点

3916
01:56:22,000 --> 01:56:24,000
然后这个

3917
01:56:24,000 --> 01:56:25,000
就可以实现

3918
01:56:25,000 --> 01:56:27,000
说你的内存和你的硬盘

3919
01:56:27,000 --> 01:56:29,000
是同一个气简

3920
01:56:29,000 --> 01:56:30,000
对

3921
01:56:30,000 --> 01:56:31,000
这是非常非常对

3922
01:56:31,000 --> 01:56:32,000
粗亭没什么

3923
01:56:32,000 --> 01:56:35,000
但其实是一个非常重要的

3924
01:56:35,000 --> 01:56:38,000
如果这东西可以被研发出来

3925
01:56:38,000 --> 01:56:39,000
就是大规模使用的话

3926
01:56:39,000 --> 01:56:42,000
它将会彻底改变我们变成模型

3927
01:56:42,000 --> 01:56:43,000
对

3928
01:56:43,000 --> 01:56:46,000
然后另外一个更牛逼的用途

3929
01:56:46,000 --> 01:56:48,000
但是现在我这个还是没太搞明白

3930
01:56:48,000 --> 01:56:49,000
这个也是因为什么

3931
01:56:49,000 --> 01:56:51,000
电气功

3932
01:56:51,000 --> 01:56:52,000
电气功成

3933
01:56:52,000 --> 01:56:55,000
电气功成绩处不够好的一个原型

3934
01:56:55,000 --> 01:56:56,000
电子功成吗

3935
01:56:56,000 --> 01:56:57,000
电子功成

3936
01:56:57,000 --> 01:56:58,000
我来不来

3937
01:56:58,000 --> 01:57:00,000
这个不是纠结那么多细节的名词了

3938
01:57:00,000 --> 01:57:01,000
还有一个就是说

3939
01:57:01,000 --> 01:57:03,000
它这个异主气可以取代

3940
01:57:03,000 --> 01:57:05,000
那种传统的电路

3941
01:57:05,000 --> 01:57:06,000
我们传统的

3942
01:57:06,000 --> 01:57:08,000
接触电路能做和的方式

3943
01:57:08,000 --> 01:57:09,000
比如说你要做一个那个什么

3944
01:57:09,000 --> 01:57:11,000
NAND gate

3945
01:57:11,000 --> 01:57:13,000
你可以用这个去构成一种

3946
01:57:13,000 --> 01:57:15,000
那种计算的原型界

3947
01:57:15,000 --> 01:57:16,000
然后它会实现更

3948
01:57:16,000 --> 01:57:18,000
小的体积

3949
01:57:18,000 --> 01:57:19,000
然后更

3950
01:57:19,000 --> 01:57:20,000
就更低的功耗吧

3951
01:57:20,000 --> 01:57:22,000
它还是这个意思

3952
01:57:22,000 --> 01:57:24,000
但是这个对计算来讲

3953
01:57:24,000 --> 01:57:26,000
就对它所暴露出来的

3954
01:57:26,000 --> 01:57:27,000
变成模型的改变

3955
01:57:27,000 --> 01:57:28,000
我觉得这个要小一些

3956
01:57:28,000 --> 01:57:30,000
这个是从硬片层面的

3957
01:57:30,000 --> 01:57:32,000
CPU的模型

3958
01:57:32,000 --> 01:57:34,000
暴露出来的使用模型是没有变化的

3959
01:57:34,000 --> 01:57:35,000
使用模型就是说

3960
01:57:35,000 --> 01:57:37,000
对于一个普通开发者来讲

3961
01:57:37,000 --> 01:57:38,000
可能最大的变化还是说

3962
01:57:38,000 --> 01:57:43,000
没有这个内存和这个

3963
01:57:43,000 --> 01:57:47,000
没有以灰发型的内存和不以后

3964
01:57:47,000 --> 01:57:49,000
它是新的内存的区别的

3965
01:57:49,000 --> 01:57:52,000
就是你可以不均再去考虑内存管理

3966
01:57:52,000 --> 01:57:55,000
和从此拍上的交往文件

3967
01:57:55,000 --> 01:57:57,000
因为就只有内存管理这一件事

3968
01:57:57,000 --> 01:57:58,000
对

3969
01:57:58,000 --> 01:57:59,000
而且那个时候

3970
01:57:59,000 --> 01:58:00,000
也不用考虑

3971
01:58:00,000 --> 01:58:01,000
也不用考虑序内化

3972
01:58:01,000 --> 01:58:02,000
解讯内化的东西

3973
01:58:02,000 --> 01:58:04,000
因为你直接操作的

3974
01:58:04,000 --> 01:58:07,000
就是内存中的这个数据结构

3975
01:58:07,000 --> 01:58:08,000
然后这个数据结构关机

3976
01:58:08,000 --> 01:58:11,000
后也是会被持久花下来的

3977
01:58:11,000 --> 01:58:12,000
存下来的

3978
01:58:12,000 --> 01:58:13,000
然后这样你开机的

3979
01:58:13,000 --> 01:58:15,000
你还是回到那个程序原先的状态

3980
01:58:15,000 --> 01:58:16,000
Hello, how you see

3981
01:58:16,000 --> 01:58:18,000
Have you tried turning it off and on again?

3982
01:58:18,000 --> 01:58:19,000
不是

3983
01:58:19,000 --> 01:58:21,000
就可以在物理层面上实现

3984
01:58:21,000 --> 01:58:23,000
我们寻现在用操线的通过

3985
01:58:23,000 --> 01:58:25,000
一寻的内存来做的事情

3986
01:58:25,000 --> 01:58:26,000
对

3987
01:58:26,000 --> 01:58:29,000
我觉得这个对点成模型的改变还是蛮大的

3988
01:58:29,000 --> 01:58:31,000
不过这一点其实也有一些问题

3989
01:58:31,000 --> 01:58:34,000
就是如果你讲假设内存是

3990
01:58:34,000 --> 01:58:36,000
非意识的话

3991
01:58:36,000 --> 01:58:39,000
那么如果中间哪里错了

3992
01:58:39,000 --> 01:58:42,000
Crash然后导致内存状态不对

3993
01:58:42,000 --> 01:58:45,000
这个结果还是蛮奇怪的

3994
01:58:45,000 --> 01:58:46,000
对

3995
01:58:46,000 --> 01:58:49,000
忽然之前你好像没有一个非常好的手段

3996
01:58:49,000 --> 01:58:51,000
去reset了

3997
01:58:51,000 --> 01:58:52,000
对

3998
01:58:52,000 --> 01:58:53,000
以前那个叫什么

3999
01:58:53,000 --> 01:58:55,000
IT crowd里面唱

4000
01:58:55,000 --> 01:58:59,000
对

4001
01:58:59,000 --> 01:59:00,000
就是遇到的问题

4002
01:59:00,000 --> 01:59:02,000
现在重开机重起事实了

4003
01:59:02,000 --> 01:59:03,000
重起没问题

4004
01:59:03,000 --> 01:59:04,000
就还可以

4005
01:59:04,000 --> 01:59:06,000
因为重起就掉电了

4006
01:59:06,000 --> 01:59:07,000
掉电了

4007
01:59:07,000 --> 01:59:08,000
就一些重来

4008
01:59:08,000 --> 01:59:09,000
就有一个所谓的

4009
01:59:09,000 --> 01:59:10,000
一个

4010
01:59:10,000 --> 01:59:12,000
Cling Start

4011
01:59:12,000 --> 01:59:13,000
对

4012
01:59:13,000 --> 01:59:14,000
就是如果

4013
01:59:14,000 --> 01:59:16,000
其算机是一个状态机的话

4014
01:59:16,000 --> 01:59:18,000
那么重起就可以让它回复到

4015
01:59:18,000 --> 01:59:19,000
状态机的那个原点

4016
01:59:19,000 --> 01:59:20,000
一般来说

4017
01:59:20,000 --> 01:59:22,000
程序不稳定

4018
01:59:22,000 --> 01:59:24,000
都是这个状态机走进了一个

4019
01:59:24,000 --> 01:59:26,000
没有被预先的状态里面去

4020
01:59:26,000 --> 01:59:27,000
对

4021
01:59:27,000 --> 01:59:28,000
通过重起

4022
01:59:28,000 --> 01:59:30,000
你可以让它重新回到那个

4023
01:59:30,000 --> 01:59:33,000
至少是造型上机的人所欲想的

4024
01:59:33,000 --> 01:59:34,000
可以被控制

4025
01:59:34,000 --> 01:59:35,000
并且已经

4026
01:59:35,000 --> 01:59:38,000
已经知道它可以走向合处的地方

4027
01:59:38,000 --> 01:59:39,000
对

4028
01:59:39,000 --> 01:59:40,000
所以

4029
01:59:40,000 --> 01:59:41,000
但是如果跟刚讲的

4030
01:59:41,000 --> 01:59:43,000
如果是一个内存是非一世的话

4031
01:59:43,000 --> 01:59:44,000
这一点就行不通了

4032
01:59:44,000 --> 01:59:46,000
就要采取一些极端的手段

4033
01:59:46,000 --> 01:59:48,000
来做这个

4034
01:59:48,000 --> 01:59:49,000
灾难恢复

4035
01:59:49,000 --> 01:59:51,000
还是故障修复之类的事情

4036
01:59:51,000 --> 01:59:53,000
对

4037
01:59:53,000 --> 01:59:55,000
不过但是这个刚刚在讲

4038
01:59:55,000 --> 01:59:56,000
是用这个

4039
01:59:56,000 --> 01:59:58,000
membrister

4040
01:59:58,000 --> 01:59:59,000
membrister

4041
01:59:59,000 --> 02:00:00,000
意图器

4042
02:00:00,000 --> 02:00:03,000
还是说通过迅内存这一点

4043
02:00:03,000 --> 02:00:05,000
我们都是在试图说

4044
02:00:05,000 --> 02:00:07,000
减化这个

4045
02:00:07,000 --> 02:00:11,000
开发者对这个开发难度

4046
02:00:11,000 --> 02:00:14,000
通过这种减少这个

4047
02:00:14,000 --> 02:00:16,000
成极的方式来实现的

4048
02:00:16,000 --> 02:00:17,000
其实现在的程序

4049
02:00:17,000 --> 02:00:18,000
所唯一需要

4050
02:00:18,000 --> 02:00:19,000
或者也不是

4051
02:00:19,000 --> 02:00:23,000
还是争旧需要操心一件事情

4052
02:00:23,000 --> 02:00:25,000
就是训练化和反训练化对吧

4053
02:00:25,000 --> 02:00:26,000
对

4054
02:00:26,000 --> 02:00:28,000
但从整个

4055
02:00:28,000 --> 02:00:31,000
编程的发展的方向来看

4056
02:00:31,000 --> 02:00:32,000
也许这件事情将来

4057
02:00:32,000 --> 02:00:34,000
也是要被

4058
02:00:34,000 --> 02:00:35,000
被淘汰了

4059
02:00:35,000 --> 02:00:36,000
或者说

4060
02:00:36,000 --> 02:00:38,000
人们可以完全不用再去操心

4061
02:00:38,000 --> 02:00:41,000
训练化和反训练化这件事情对不对

4062
02:00:41,000 --> 02:00:42,000
有没有这个

4063
02:00:42,000 --> 02:00:43,000
对

4064
02:00:43,000 --> 02:00:45,000
之前已经有这种各种方法

4065
02:00:45,000 --> 02:00:47,000
可以做的定的事情了

4066
02:00:47,000 --> 02:00:49,000
对

4067
02:00:49,000 --> 02:01:12,000
我刚才用免怀了一下自己当初写《C声去》的时候会在一张纸上写,说有个东西我在什么地方把他MLOG然后要记得应该在什么恰当的时候把他财掉

4068
02:01:13,000 --> 02:01:31,000
就是C1其实远其实给你提问了一个比较贴近硬件的编程模型,但是他声就把分配那存这部分给帮你藏起来,比如说你有想过MLOG究竟做了什么吗?

4069
02:01:31,000 --> 02:01:32,000
我们说会说一个东西分配在堆上,一东西分配在站上,可是堆和站这两个东西,你站你可以通过后面原来草作,可是堆这个东西怎么通过后面原来草作呢?其实是不行的,不是吗?对这个东西其实是操作系统替你虚拟出来的这么一块那存区域而已,而站则是一个...站其实也是后组织的东西,

4070
02:02:01,000 --> 02:02:30,000
但是不用那个,你不用手动去管理他吗?对,堆和站的抽象层级其实是不太一样的,可以这么说了,对,对,但是在那个时候你钓鱼喊说的时候你在这个喊说上面上面有一个本体面量,然后这个本体面量其实就是默认分配在站上,就是站这个东西你是没有一个尺观的印象说到这个东西在站上。

4071
02:02:30,000 --> 02:02:59,000
你只有去研究这个原理的时候,你才会明白什么是站,但是堆这个东西你会有显示的至少两个API去操作它,比如一个是Alog,M.L.C.Alog,然后一个Free,你会通过M.L.C这件事情拿到一个内存的地址,但是站是没有这个东西的,站是不会给你一个东西,让你显示的是Push a Pop的对吧?对,说Pop Dispatch,我们的...

4072
02:03:00,000 --> 02:03:30,000
有台节目,从事上我觉得是初战分分,对吧?对,比我们可能拍这个哈的课很多的,初战分分对,M.L.C.A.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S.S

4073
02:03:30,000 --> 02:04:00,000
他有提示,他抓口中文是什么?购造体,购造韩束的,你还想去考虑一个累的购造,他说是西购韩束,对,西购韩束,我想说这个名字好表,西购韩束,然后在奥朱斯里面你也需要,你还需要去考虑什么事,就是你需要显示去写一个

4074
02:04:00,000 --> 02:04:15,000
一个interface的硬并在天室里面你要写这个蓝日,被DL了,可能时候要做点事情,但是你从来不需要去写试的去调用这个DL了,看说这点和CJ应该是一样的。

4075
02:04:15,000 --> 02:04:21,000
对,他会帮你去考虑那个,但是你还是得要记住那个什么的顺序关系,你写的时候就要留意这一点嘛。

4076
02:04:21,000 --> 02:04:30,000
对,然后C帮你帮程序员在某种程度上减轻了内存管理的

4077
02:04:30,000 --> 02:04:42,000
业务逻辑,你只需要自己去记住这个东西,如果有别人还在用就要试探一次,如果有别人已经不再用了,你就把他锐利子一下就好了。

4078
02:04:42,000 --> 02:04:48,000
然后只要还有一个人在用这个东西就不会被遇行时真正的消货表。

4079
02:04:48,000 --> 02:04:51,000
就是ARC吗?

4080
02:04:51,000 --> 02:05:01,000
对,这是ARC没有A,ARC是康庭,ARC是人要自己去在那边算那个锐利子的多少次,以及那天都多少次。

4081
02:05:01,000 --> 02:05:08,000
ARC帮你解决的这个问题就是你不用再去写试的锐利子的试探了。

4082
02:05:08,000 --> 02:05:09,000
替你帮你试说吗?

4083
02:05:09,000 --> 02:05:14,000
对,就是OJC会在编异期帮你鼠一边。

4084
02:05:14,000 --> 02:05:28,000
好,这今天不是在运行时时输了,对,编异期的时候会帮你鼠一边,你这个东西所有用的地方,他就会帮你自动Return一次,然后所有他觉得你已经不会再用了地方,他就帮你锐利子一下。

4085
02:05:28,000 --> 02:05:43,000
所以那个还是一个比较原始的方法,对,对,对,如果说手动的管理的存是一个老师不强的话,你需要自己打一发上一三,拉一下枪双。

4086
02:05:43,000 --> 02:05:53,000
那ARC就有点像半自动了,现在就是手的公管理内存的时代基本上已经是过去了吧。

4087
02:05:53,000 --> 02:06:05,000
除非你有什么特别,除非你是自己是洗洗洗机或者是编异期的人,否则你一般是不需要操心怎么手工管理内存这件事。

4088
02:06:05,000 --> 02:06:15,000
他有一些那种所谓的什么, perform as critical的东西的时候他会用C和CG拉来写的时候,就还会考虑这个内存管理的问题。

4089
02:06:15,000 --> 02:06:23,000
或者是在面试的时候,告诉你说,你不能使用额外的内存,你应该怎么回答,你应该怎么办。

4090
02:06:23,000 --> 02:06:26,000
那些Gammark。

4091
02:06:26,000 --> 02:06:32,000
现在就是主流的是一个垃圾回收的机制吗?

4092
02:06:32,000 --> 02:06:43,000
对,垃圾回收可以说是进一步解放了,程序案就是你有更加清晰而解化的变成模型,

4093
02:06:43,000 --> 02:06:53,000
当然由此也就降低了,降低了变成的,蛮整说的,提高了你写出烂带麻的几率,应该这么说。

4094
02:06:53,000 --> 02:06:55,000
你说门槛低了吗?

4095
02:06:55,000 --> 02:06:59,000
门槛低有这种负面的意味。门槛低了就好。

4096
02:06:59,000 --> 02:07:05,000
好吧,你是从比较正面的角度理解的这些事情,但我总觉得门槛低了。

4097
02:07:05,000 --> 02:07:10,000
更容易让更多平庸的人写出平庸,但是work的带麻。

4098
02:07:10,000 --> 02:07:21,000
对,但是时间一久就,事实可以这么说,就是变成模型的检化使得大规模的软件协作成为可能。

4099
02:07:22,000 --> 02:07:25,000
不是大家都是大牛的情况也能把这个事情做出来。

4100
02:07:25,000 --> 02:07:31,000
有一群平庸的人也可以写出一个工业级别建装的东西来给大家用,

4101
02:07:31,000 --> 02:07:43,000
而不再需要一群先驱者,一群hikers去,只有他们才可以写出一个真正的居然可以工作的程序来。

4102
02:07:43,000 --> 02:07:44,000
对,对。

4103
02:07:44,000 --> 02:07:48,000
激烈的逻辑其实也蛮好讲的。

4104
02:07:48,000 --> 02:07:59,000
就是他会运行时会去检查你每一个内部的纸征,然后去算,哪些区執没有,不可能再被用到,

4105
02:07:59,000 --> 02:08:03,000
然后他就直接把那些区标记为可以回收掉的。

4106
02:08:03,000 --> 02:08:06,000
对,然后在下一段时间你们把它回收掉。

4107
02:08:06,000 --> 02:08:12,000
但是激烈也有很多不同类型,我们可以找机会再讲。

4108
02:08:12,000 --> 02:08:21,000
你刚才说到那个Go出了1.4,我去看了一下他的release notes,

4109
02:08:21,000 --> 02:08:29,000
里面有一节写到说Change to runtime,他里面写说1.4之前Runtime,

4110
02:08:29,000 --> 02:08:39,000
就是GCR,conconcernsy的支持interface management, maps, slices, strings etc.,

4111
02:08:39,000 --> 02:08:47,000
在1.4之前基本上是以C来写了,然后包括某些部分用了会边的码,

4112
02:08:47,000 --> 02:08:53,000
然后从1.4开始,大部分Runtime都用构来重写了一遍。

4113
02:08:53,000 --> 02:08:56,000
对,对。然后一次,对。

4114
02:08:56,000 --> 02:09:04,000
而且一此来带来了一个提升就是GovernsCollector can scan the stacks of the programs in the runtime,

4115
02:09:05,000 --> 02:09:08,000
然后会有什么关系的解决方式?

4116
02:09:08,000 --> 02:09:11,000
对。之前因为他拿不到运行时的东西,

4117
02:09:11,000 --> 02:09:16,000
所以他的GCA,他的那个那一层,那就会说是imprecise,

4118
02:09:16,000 --> 02:09:19,000
就是不是很精确,有时候会漏掉一些东西,

4119
02:09:19,000 --> 02:09:24,000
但是整体来说还可以吧,他现在变成一个完全精确的,

4120
02:09:24,000 --> 02:09:31,000
就一定知道哪些指针是可以被远程回收的。

4121
02:09:31,000 --> 02:09:33,000
然后他们还要做下班他们要做另外一件事情,

4122
02:09:33,000 --> 02:09:37,000
就是要把这个辣椒的时候做一个完全毕心化的东西,

4123
02:09:37,000 --> 02:09:40,000
因为现在的辣椒会做还是一个Stop the War的嘛。

4124
02:09:41,000 --> 02:09:46,000
加上这边没有这个,这个就话要说严谨一点,

4125
02:09:46,000 --> 02:09:50,000
就是主流的机会MGM,还有这个,

4126
02:09:50,000 --> 02:09:54,000
对,有这个问题就是他在辣椒回收机制运行的期间,

4127
02:09:54,000 --> 02:09:57,000
程序的其他部分是暂停的。

4128
02:09:57,000 --> 02:10:00,000
这是为什么,这就是为什么一Cleaf这么卡。

4129
02:10:02,000 --> 02:10:06,000
对,严谨吧,对,这个对很多应用来说,

4130
02:10:06,000 --> 02:10:07,000
这个就是不可以接受的,

4131
02:10:07,000 --> 02:10:10,000
比如说你写一个股票的实施交易的应用,

4132
02:10:10,000 --> 02:10:15,000
那你可能几十毫秒100毫秒的差别,

4133
02:10:15,000 --> 02:10:18,000
那就是上百万的经济的损失,

4134
02:10:18,000 --> 02:10:20,000
对吧,所以不可能不可避免,

4135
02:10:20,000 --> 02:10:22,000
所以他们有些做金融交易的,

4136
02:10:22,000 --> 02:10:25,000
有些直接用我们的CDR寫,

4137
02:10:25,000 --> 02:10:27,000
就这样不需要去考虑机械的问题,

4138
02:10:27,000 --> 02:10:28,000
然后的是他用那个GVM,

4139
02:10:28,000 --> 02:10:30,000
他是用改良过的,

4140
02:10:30,000 --> 02:10:32,000
这种所谓的Concurrent,

4141
02:10:32,000 --> 02:10:35,000
或者PowerGC,就是并行的机械,

4142
02:10:35,000 --> 02:10:37,000
机械过程中他可以不用停下来个主程序。

4143
02:10:37,000 --> 02:10:40,000
现在Go的他里面还是这个Stop the War的情况,

4144
02:10:40,000 --> 02:10:42,000
但是他说一点五把我记得,

4145
02:10:42,000 --> 02:10:45,000
就下来把他们变成Concurrent。

4146
02:10:45,000 --> 02:10:46,000
对,

4147
02:10:47,000 --> 02:10:49,000
这也就回到了刚才说的这个,

4148
02:10:49,000 --> 02:10:53,000
就是整个内存管理的方向还是朝着让,

4149
02:10:53,000 --> 02:10:58,000
是把话来越省心的方向来演进的,

4150
02:10:58,000 --> 02:11:00,000
但是同时也就造成了,

4151
02:11:00,000 --> 02:11:03,000
在真正那些扔就还是需要,

4152
02:11:03,000 --> 02:11:05,000
像你说的那个股票操作系统,

4153
02:11:05,000 --> 02:11:07,000
Mission Critical的场合,

4154
02:11:07,000 --> 02:11:09,000
还是需要手标管理的声音啊,

4155
02:11:10,000 --> 02:11:13,000
有些事情还是不得不依靠手标管理,

4156
02:11:13,000 --> 02:11:18,000
因为手标你才可以达到手标的方法子,

4157
02:11:18,000 --> 02:11:22,000
对,我记得那个Biana是什么样,

4158
02:11:22,000 --> 02:11:23,000
Biana is just some,

4159
02:11:23,000 --> 02:11:26,000
对,就是CJ家的创始人在,

4160
02:11:26,000 --> 02:11:28,000
我放的是那本书里面,他吐槽,

4161
02:11:28,000 --> 02:11:30,000
吐槽扎吧说,

4162
02:11:32,000 --> 02:11:33,000
他有点选择意思,

4163
02:11:33,000 --> 02:11:38,000
就是说你知道Joyne Strike Fight Jazz F,

4164
02:11:38,000 --> 02:11:40,000
战斗机他是一台CJ家战斗机,

4165
02:11:40,000 --> 02:11:43,000
就是上面所有的代码都是跑的,都是CJ家,

4166
02:11:43,000 --> 02:11:45,000
然后火星探测器你知道吗,

4167
02:11:45,000 --> 02:11:47,000
CJ家鞋了,

4168
02:11:47,000 --> 02:11:49,000
你用扎吧给我写一个看看,

4169
02:11:50,000 --> 02:11:54,000
对,那些的应用场合就比较极大,

4170
02:11:54,000 --> 02:11:57,000
马兴能和环境要求比较恶劣,

4171
02:11:57,000 --> 02:11:58,000
对,在这种情况下,

4172
02:11:58,000 --> 02:12:02,000
你还是不得不手动,

4173
02:12:02,000 --> 02:12:04,000
在家以后的手动去关键那次,

4174
02:12:04,000 --> 02:12:07,000
不过这个也有做到,

4175
02:12:07,000 --> 02:12:10,000
就是在技术进步的,

4176
02:12:10,000 --> 02:12:13,000
之后也有说这个程序,

4177
02:12:13,000 --> 02:12:14,000
还没回过12来,

4178
02:12:14,000 --> 02:12:18,000
没有失应用到最新的方法去做了,

4179
02:12:18,000 --> 02:12:20,000
这里有一个很简单的,

4180
02:12:20,000 --> 02:12:24,000
之前我们提到了训练化解训练化的问题,

4181
02:12:24,000 --> 02:12:26,000
但我们要做一些事情的时候,

4182
02:12:28,000 --> 02:12:29,000
你有一些文件,

4183
02:12:29,000 --> 02:12:31,000
你要在内存里面去展现,

4184
02:12:31,000 --> 02:12:34,000
但是内存又不如这个磁盘大吗?

4185
02:12:35,000 --> 02:12:36,000
对,那么有些人就说,

4186
02:12:36,000 --> 02:12:39,000
那我怎么参加在内存里面去,

4187
02:12:39,000 --> 02:12:41,000
因为只有内存里面,

4188
02:12:41,000 --> 02:12:44,000
只有那个CPU才可以去操作那些数据,

4189
02:12:44,000 --> 02:12:47,000
所以我有一个从磁盘里面读数据,

4190
02:12:47,000 --> 02:12:49,000
读到内存里面去,

4191
02:12:49,000 --> 02:12:50,000
然后再处理,

4192
02:12:50,000 --> 02:12:51,000
然后再处理完毕,

4193
02:12:51,000 --> 02:12:52,000
再读下一段,

4194
02:12:52,000 --> 02:12:53,000
就每个过程,

4195
02:12:54,000 --> 02:12:56,000
但其实在线的操作小动方面,

4196
02:12:56,000 --> 02:12:58,000
这个事情也已经很大程序上,

4197
02:12:58,000 --> 02:12:59,000
可以完全被避免掉了,

4198
02:12:59,000 --> 02:13:02,000
就是通过所谓的使用这个叫做

4199
02:13:03,000 --> 02:13:04,000
Memory Map,

4200
02:13:04,000 --> 02:13:05,000
Memory Mapping,

4201
02:13:05,000 --> 02:13:06,000
内存硬设这个概念吧,

4202
02:13:07,000 --> 02:13:09,000
对,内存硬设大概是什么事情,

4203
02:13:09,000 --> 02:13:10,000
就操作这种情况,

4204
02:13:10,000 --> 02:13:11,000
这么一个机制,

4205
02:13:11,000 --> 02:13:15,000
它可以说你可以指着磁盘上的一个文件大小,

4206
02:13:15,000 --> 02:13:16,000
所以说,

4207
02:13:16,000 --> 02:13:21,000
我要把这一块文件硬设到内存地震里面去,

4208
02:13:21,000 --> 02:13:21,000
这样的话,

4209
02:13:21,000 --> 02:13:23,000
我操作这种,

4210
02:13:23,000 --> 02:13:24,000
我的程序可以直接在,

4211
02:13:25,000 --> 02:13:27,000
请大家在界面上,

4212
02:13:27,000 --> 02:13:29,000
我直接操作内存的一个区块就好了,

4213
02:13:29,000 --> 02:13:32,000
但是具体的那个数据可能并不,

4214
02:13:32,000 --> 02:13:34,000
那个时候并不在内存里面,

4215
02:13:34,000 --> 02:13:37,000
然后这个时候是由操作系统去负责,

4216
02:13:37,000 --> 02:13:41,000
去把那个你要访问的那块内存区块的内容,

4217
02:13:41,000 --> 02:13:44,000
从这个磁盘上加转过来,

4218
02:13:44,000 --> 02:13:49,000
然后再管理如果说这个磁盒内存物理空间不足的情况下,

4219
02:13:49,000 --> 02:13:53,000
再把那些没有用到的那些磁盘上放回磁盘上去,

4220
02:13:53,000 --> 02:13:55,000
就是Memory Map内存硬设就做这么一件事,

4221
02:13:55,000 --> 02:13:59,000
然后其实就在这个就对我们开发者来讲,

4222
02:13:59,000 --> 02:14:00,000
就是一个起发嘛,

4223
02:14:00,000 --> 02:14:01,000
这一篇很好的文章,

4224
02:14:01,000 --> 02:14:04,000
大家会不会放在这个弄子里面,

4225
02:14:04,000 --> 02:14:07,000
这个是Varnish Cash这个软件,

4226
02:14:07,000 --> 02:14:08,000
就是一个法康代理的常用,

4227
02:14:08,000 --> 02:14:10,000
我现在跑服务器后段的话,

4228
02:14:10,000 --> 02:14:12,000
可能会经常接受到这个软件,

4229
02:14:12,000 --> 02:14:14,000
他们的开发者写了一个,

4230
02:14:14,000 --> 02:14:15,000
就是他的标题就是说,

4231
02:14:16,000 --> 02:14:18,000
What's wrong with 1975 programming?

4232
02:14:18,000 --> 02:14:22,000
就是他说1975年的编程模型有什么问题,

4233
02:14:22,000 --> 02:14:24,000
那他很想说主要一个问题,

4234
02:14:24,000 --> 02:14:27,000
就是说刚才一个内存,

4235
02:14:28,000 --> 02:14:31,000
1975年的时候他没有去内存这个概念嘛,

4236
02:14:31,000 --> 02:14:34,000
你真的是需要成续远手工去考虑,

4237
02:14:34,000 --> 02:14:37,000
怎么去从自然要加拆一个文件到内存里面去,

4238
02:14:37,000 --> 02:14:38,000
然后再进行操作,

4239
02:14:38,000 --> 02:14:40,000
然后再写回去找一个过程,

4240
02:14:40,000 --> 02:14:43,000
但是到现在已经有这个虚拟内存,

4241
02:14:43,000 --> 02:14:44,000
这个操作系统,

4242
02:14:44,000 --> 02:14:47,000
就觉得不能造成这种都已经支持这个东西了,

4243
02:14:47,000 --> 02:14:48,000
不然那个MLOG没法写好,

4244
02:14:50,000 --> 02:14:51,000
他这种情况下,

4245
02:14:51,000 --> 02:14:54,000
那么我们写成续的时候就可以不用考虑这个一些东西,

4246
02:14:54,000 --> 02:14:56,000
那比如说最简单的一个,

4247
02:14:56,000 --> 02:14:59,000
刚才讲了一个持久化和非持久化的问题,

4248
02:14:59,000 --> 02:15:01,000
持久化和续连化的问题,

4249
02:15:01,000 --> 02:15:03,000
就是那你可以不用考虑,

4250
02:15:03,000 --> 02:15:04,000
我从内存里面读出一个,

4251
02:15:04,000 --> 02:15:06,000
比如说一个数状结构,

4252
02:15:06,000 --> 02:15:10,000
然后把它写成一个串流在写到自拍上,

4253
02:15:10,000 --> 02:15:11,000
但也直接说,

4254
02:15:11,000 --> 02:15:13,000
我在内存上分配一个,

4255
02:15:13,000 --> 02:15:14,000
比如说一个GB的空间,

4256
02:15:14,000 --> 02:15:16,000
持久化这个数据,

4257
02:15:16,000 --> 02:15:19,000
我直接把这个空间印射到我内存里面去,

4258
02:15:19,000 --> 02:15:22,000
然后直接在里面见我的内存结构,

4259
02:15:22,000 --> 02:15:24,000
然后操作系统会在适当的时候,

4260
02:15:24,000 --> 02:15:28,000
把那些内存里面的数据持久化到自拍上面去,

4261
02:15:28,000 --> 02:15:30,000
从来实现持久化的效果,

4262
02:15:30,000 --> 02:15:31,000
但是作为一个程序源,

4263
02:15:31,000 --> 02:15:33,000
你有并不用担心自己在去,

4264
02:15:33,000 --> 02:15:35,000
真的就是写那个训练化的过程。

4265
02:15:37,000 --> 02:15:40,000
而且一个需要避免的,

4266
02:15:40,000 --> 02:15:41,000
Practice,

4267
02:15:41,000 --> 02:15:44,000
或者说一个需要避免的过早优化,

4268
02:15:44,000 --> 02:15:50,000
就是尽量也不要总觉得自己有些东西放在内存里面,

4269
02:15:50,000 --> 02:15:52,000
好像没有什么用,

4270
02:15:52,000 --> 02:15:55,000
应该先把它从那边挪出来,

4271
02:15:55,000 --> 02:15:57,000
然后放在一个持终上的地方,

4272
02:15:57,000 --> 02:16:00,000
然后一次来达到接受内存的过程。

4273
02:16:00,000 --> 02:16:01,000
接着都应该将会操作系统来一期,

4274
02:16:01,000 --> 02:16:05,000
这件事情也通通应该让操作系统来。

4275
02:16:05,000 --> 02:16:09,000
对,其实说到训练化,

4276
02:16:09,000 --> 02:16:13,000
其实现在有很多网上的云端服务都体重了,

4277
02:16:13,000 --> 02:16:15,000
这样一种变成接口,

4278
02:16:15,000 --> 02:16:17,000
就是你可以在程序里面说,

4279
02:16:17,000 --> 02:16:20,000
比如说我用什么 JavaScript,

4280
02:16:20,000 --> 02:16:24,000
我 JavaScript交给你这样一个数据,

4281
02:16:24,000 --> 02:16:26,000
然后你就把它存下来,

4282
02:16:26,000 --> 02:16:27,000
然后给你药的时候,

4283
02:16:27,000 --> 02:16:29,000
你把它原样交换给我。

4284
02:16:29,000 --> 02:16:31,000
对,对,对,

4285
02:16:31,000 --> 02:16:33,000
这个不关自在网上,

4286
02:16:33,000 --> 02:16:35,000
包括我如果你开发那个OS的话,

4287
02:16:35,000 --> 02:16:36,000
应该它有一个core,

4288
02:16:36,000 --> 02:16:37,000
core data,

4289
02:16:37,000 --> 02:16:39,000
也是做类似的事情。

4290
02:16:39,000 --> 02:16:41,000
core data的编程模型,

4291
02:16:41,000 --> 02:16:45,000
我是觉得不是非常的直观,

4292
02:16:45,000 --> 02:16:46,000
但你可以理解,

4293
02:16:46,000 --> 02:16:49,000
你可以看到它试图为此,

4294
02:16:49,000 --> 02:16:51,000
做出一个比较简单用的接口来,

4295
02:16:51,000 --> 02:16:55,000
但是用出来还是挺麻烦的,我觉得。

4296
02:16:55,000 --> 02:16:57,000
麻烦的点主要在哪里呢?

4297
02:16:58,000 --> 02:16:59,000
罗索是一方面,

4298
02:16:59,000 --> 02:17:02,000
但另外一个是因为obgc的语法播放了。

4299
02:17:02,000 --> 02:17:07,000
对,它是不可避免的,

4300
02:17:07,000 --> 02:17:10,000
但我觉得整个想法,

4301
02:17:10,000 --> 02:17:12,000
就是把训练化和持久化这一层,

4302
02:17:12,000 --> 02:17:17,000
从程序的见面里面分离开,

4303
02:17:17,000 --> 02:17:19,000
我觉得这个是一个挺好的想法。

4304
02:17:19,000 --> 02:17:21,000
对,这是没错的。

4305
02:17:21,000 --> 02:17:24,000
所以,这才是具体到实现的问题。

4306
02:17:24,000 --> 02:17:26,000
怎么就实现一点?

4307
02:17:27,000 --> 02:17:30,000
可能我还是core data用的不够多吧,

4308
02:17:30,000 --> 02:17:31,000
但,

4309
02:17:31,000 --> 02:17:34,000
不过core data的吐槽大人也不少,

4310
02:17:34,000 --> 02:17:37,000
你绝对不是唯一的。

4311
02:17:39,000 --> 02:17:43,000
今天罗罗索说说讲了这么多,

4312
02:17:43,000 --> 02:17:44,000
那一层如何?

4313
02:17:44,000 --> 02:17:46,000
讲得其实还是有点...

4314
02:17:47,000 --> 02:17:48,000
对哪论?

4315
02:17:48,000 --> 02:17:51,000
对,我觉得还是咱们两个工体不够吧。

4316
02:17:52,000 --> 02:17:55,000
完了,以后我们还是少碰这种,

4317
02:17:55,000 --> 02:17:57,000
比较HC和东西比较好。

4318
02:17:57,000 --> 02:17:59,000
大而应的话题,

4319
02:17:59,000 --> 02:18:00,000
我们还是应该指摊封约。

4320
02:18:00,000 --> 02:18:02,000
如果要做这个话题的话,

4321
02:18:02,000 --> 02:18:05,000
我觉得我们可以准备一个两三个月,

4322
02:18:05,000 --> 02:18:08,000
然后写个脚本出来,

4323
02:18:08,000 --> 02:18:08,000
你说什么,

4324
02:18:08,000 --> 02:18:13,000
我说什么,每一句都要精确的有案可查,

4325
02:18:13,000 --> 02:18:15,000
每个数据都要...

4326
02:18:16,000 --> 02:18:19,000
每个数据都要查核对过,对吧?

4327
02:18:19,000 --> 02:18:20,000
比如说,

4328
02:18:20,000 --> 02:18:22,000
RK吃的点击尺,

4329
02:18:22,000 --> 02:18:23,000
做这些多少,

4330
02:18:23,000 --> 02:18:25,000
我们据成不能脱个而出的。

4331
02:18:26,000 --> 02:18:27,000
太丢人了。

4332
02:18:27,000 --> 02:18:28,000
一照,两照,这个我知道。

4333
02:18:28,000 --> 02:18:30,000
OK,两照。

4334
02:18:33,000 --> 02:18:36,000
然后这期的话题,

4335
02:18:36,000 --> 02:18:37,000
之所以会出现,

4336
02:18:37,000 --> 02:18:39,000
其实完全是说到破壞的气氛,

4337
02:18:39,000 --> 02:18:41,000
我必须承认。

4338
02:18:41,000 --> 02:18:42,000
另外一方面也是,

4339
02:18:42,000 --> 02:18:44,000
我之前有一波,

4340
02:18:44,000 --> 02:18:50,000
有此我想到的一个很有名的客喷作家,

4341
02:18:50,000 --> 02:18:53,000
叫做TatChang,

4342
02:18:53,000 --> 02:18:55,000
中文名叫江峰南。

4343
02:18:55,000 --> 02:18:57,000
如果你独客小说的话,

4344
02:18:57,000 --> 02:18:58,000
应该会知道这个人。

4345
02:18:58,000 --> 02:19:00,000
他这个人写过非常多的,

4346
02:19:00,000 --> 02:19:02,000
很有意思的客喷小说,

4347
02:19:02,000 --> 02:19:03,000
他有一部就叫

4348
02:19:03,000 --> 02:19:07,000
The Life Cycle of Software Objects。

4349
02:19:07,000 --> 02:19:13,000
对,软件对象的生命周期,

4350
02:19:13,000 --> 02:19:15,000
他里面讲的就是,

4351
02:19:15,000 --> 02:19:18,000
当然这个,

4352
02:19:18,000 --> 02:19:18,000
去情绪,

4353
02:19:18,000 --> 02:19:20,000
现在看起来好像连老,

4354
02:19:20,000 --> 02:19:22,000
但他写的时候应该挺新的,

4355
02:19:22,000 --> 02:19:22,000
就是,

4356
02:19:24,000 --> 02:19:26,000
大致就是讲有这么一个像

4357
02:19:26,000 --> 02:19:27,000
Second Life,

4358
02:19:27,000 --> 02:19:29,000
这么一个续集世界,

4359
02:19:29,000 --> 02:19:31,000
然后里面有一个公司,

4360
02:19:31,000 --> 02:19:33,000
培养出了一大队人工智能,

4361
02:19:33,000 --> 02:19:37,000
人工智能是活在Second Life

4362
02:19:37,000 --> 02:19:38,000
这个世界里面的,

4363
02:19:38,000 --> 02:19:39,000
当然他不到Second,

4364
02:19:39,000 --> 02:19:40,000
所以早就会给他,

4365
02:19:40,000 --> 02:19:42,000
第一次头Target来的,

4366
02:19:42,000 --> 02:19:45,000
数字地球之类的一个,

4367
02:19:45,000 --> 02:19:47,000
一个续集世界里面,

4368
02:19:47,000 --> 02:19:48,000
然后在这个续集里面,

4369
02:19:48,000 --> 02:19:50,000
跑着一些人工智能,

4370
02:19:50,000 --> 02:19:52,000
然后这些人工智能,

4371
02:19:52,000 --> 02:19:53,000
是真正的智能,

4372
02:19:53,000 --> 02:19:55,000
就是生出来的时候,

4373
02:19:55,000 --> 02:19:56,000
这些人工智能,

4374
02:19:56,000 --> 02:19:57,000
但生的时候,

4375
02:19:57,000 --> 02:19:59,000
是没有什么技能的,

4376
02:19:59,000 --> 02:20:01,000
然后需要一群人,

4377
02:20:01,000 --> 02:20:03,000
在里面训练他们,

4378
02:20:03,000 --> 02:20:04,000
学习,

4379
02:20:04,000 --> 02:20:05,000
然后交通做游戏,

4380
02:20:05,000 --> 02:20:07,000
然后,

4381
02:20:07,000 --> 02:20:07,000
把他们,

4382
02:20:07,000 --> 02:20:09,000
他们有观众方的形体,

4383
02:20:09,000 --> 02:20:10,000
比如说有些人机器能形容,

4384
02:20:10,000 --> 02:20:11,000
有些人压子的形容,

4385
02:20:11,000 --> 02:20:13,000
就是,

4386
02:20:13,000 --> 02:20:15,000
然后除此类,

4387
02:20:15,000 --> 02:20:16,000
然后就讲的是,

4388
02:20:16,000 --> 02:20:18,000
人工智能被培育起来,

4389
02:20:18,000 --> 02:20:20,000
然后这个文章也是,

4390
02:20:20,000 --> 02:20:23,000
这棺文章也是女性视角,

4391
02:20:23,000 --> 02:20:25,000
在棺很奇怪,

4392
02:20:25,000 --> 02:20:26,000
女性视角,

4393
02:20:26,000 --> 02:20:29,000
然后讲的故事也比较,

4394
02:20:29,000 --> 02:20:31,000
其实你读的话,

4395
02:20:31,000 --> 02:20:32,000
你会觉得他说了很多事,

4396
02:20:32,000 --> 02:20:33,000
你能很平淡,

4397
02:20:33,000 --> 02:20:35,000
比如说就讲这个主角是怎么带着

4398
02:20:35,000 --> 02:20:37,000
这些小人工智能们,

4399
02:20:37,000 --> 02:20:37,000
培他们玩,

4400
02:20:37,000 --> 02:20:39,000
然后看他们的一点点的,

4401
02:20:39,000 --> 02:20:41,000
和用户互动,

4402
02:20:41,000 --> 02:20:42,000
然后,

4403
02:20:42,000 --> 02:20:43,000
直到后来有,

4404
02:20:43,000 --> 02:20:44,000
把他们装到,

4405
02:20:44,000 --> 02:20:46,000
就是实体世界里面做出来的机器人,

4406
02:20:46,000 --> 02:20:49,000
就把他们下载到机器人里面,

4407
02:20:49,000 --> 02:20:51,000
然后带着他们去看,

4408
02:20:51,000 --> 02:20:54,000
去体验实体的世界,

4409
02:20:54,000 --> 02:20:55,000
然后,

4410
02:20:55,000 --> 02:20:57,000
以及最后人们是,

4411
02:20:57,000 --> 02:20:57,000
怎样,

4412
02:20:57,000 --> 02:21:00,000
他们的用户是怎样失去了对这种,

4413
02:21:00,000 --> 02:21:01,000
人工智能兴趣,

4414
02:21:01,000 --> 02:21:03,000
然后就,

4415
02:21:03,000 --> 02:21:05,000
把这些人工智能要退还,

4416
02:21:05,000 --> 02:21:07,000
或者是要动机,

4417
02:21:07,000 --> 02:21:09,000
乃至消灰的这名个过程,

4418
02:21:09,000 --> 02:21:10,000
对,

4419
02:21:10,000 --> 02:21:12,000
这篇文章,

4420
02:21:12,000 --> 02:21:14,000
也是有引发我,

4421
02:21:14,000 --> 02:21:17,000
做这样一期主题的人,

4422
02:21:17,000 --> 02:21:17,000
动机之一,

4423
02:21:17,000 --> 02:21:20,000
但是很显然可能,

4424
02:21:20,000 --> 02:21:24,000
出于这个资历和背景的员务,

4425
02:21:24,000 --> 02:21:26,000
还能准备比较仓促,

4426
02:21:26,000 --> 02:21:28,000
做的不是特别的介入人意,

4427
02:21:28,000 --> 02:21:29,000
不过,

4428
02:21:31,000 --> 02:21:31,000
下词吧,

4429
02:21:31,000 --> 02:21:32,000
以后,

4430
02:21:32,000 --> 02:21:32,000
对,

4431
02:21:32,000 --> 02:21:33,000
下试不过来吧,

4432
02:21:34,000 --> 02:21:35,000
好,

4433
02:21:35,000 --> 02:21:37,000
今天的节目就到这里了,

4434
02:21:37,000 --> 02:21:37,000
结职了,

4435
02:21:38,000 --> 02:21:39,000
对,

4436
02:21:39,000 --> 02:21:42,000
然后我们应该会请大家听一遍,

4437
02:21:42,000 --> 02:21:45,000
这个steal life,

4438
02:21:45,000 --> 02:21:47,000
我们的主题曲,

4439
02:21:47,000 --> 02:21:50,000
那就下期再见吧,

4440
02:21:50,000 --> 02:21:51,000
拜拜,

4441
02:21:51,000 --> 02:21:51,000
对,

4442
02:21:51,000 --> 02:21:52,000
忘了,

4443
02:21:52,000 --> 02:21:54,000
这期播出时间的,

4444
02:21:54,000 --> 02:21:56,000
播出之后应该就要剩哪减了吧?

4445
02:21:56,000 --> 02:21:57,000
呃,

4446
02:21:57,000 --> 02:21:58,000
我想想想,

4447
02:21:58,000 --> 02:22:00,000
我们下下期应该是,

4448
02:22:00,000 --> 02:22:02,000
剩哪减的那个周末,

4449
02:22:02,000 --> 02:22:03,000
我们应该没有节目,

4450
02:22:03,000 --> 02:22:05,000
我们是各位柔柏业似的吧,

4451
02:22:05,000 --> 02:22:06,000
这个在意吧,

4452
02:22:06,000 --> 02:22:07,000
这个在意吧,

4453
02:22:08,000 --> 02:22:08,000
对,

4454
02:22:08,000 --> 02:22:08,000
安宁委,

4455
02:22:08,000 --> 02:22:11,000
如果下一周,

4456
02:22:11,000 --> 02:22:13,000
你过生难节的话,

4457
02:22:13,000 --> 02:22:14,000
剩哪减?

4458
02:22:18,000 --> 02:22:18,000
OK,

4459
02:22:18,000 --> 02:22:19,000
就这样,

4460
02:22:19,000 --> 02:22:19,000
OK,

4461
02:22:19,000 --> 02:22:20,000
拜拜,

4462
02:22:20,000 --> 02:22:21,000
拜拜,

