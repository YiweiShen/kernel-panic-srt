1
00:00:00,000 --> 00:00:02,000
3 2 1 开始

2
00:00:02,000 --> 00:00:05,000
3 2 1 开始

3
00:00:05,000 --> 00:00:07,000
你来开场

4
00:00:07,000 --> 00:00:12,000
OK

5
00:00:12,000 --> 00:00:17,000
这次说到你也失去了

6
00:00:17,000 --> 00:00:26,000
全球协调时

7
00:00:26,000 --> 00:00:29,000
不对不对

8
00:00:29,000 --> 00:00:30,000
UTC 是什么来着

9
00:00:30,000 --> 00:00:31,000
协调世界时

10
00:00:31,000 --> 00:00:32,000
我不知道它中文名字叫什么

11
00:00:32,000 --> 00:00:35,000
Universal Coordinated Time

12
00:00:35,000 --> 00:00:39,000
这是法语

13
00:00:39,000 --> 00:00:42,000
Universal Coordinated Time

14
00:00:42,000 --> 00:00:43,000
之类的

15
00:00:43,000 --> 00:00:43,000
OK

16
00:00:43,000 --> 00:00:47,000
现在是协调世界时

17
00:00:47,000 --> 00:00:49,000
UTC 百分号 HDM

18
00:00:49,000 --> 00:00:50,000
百分号 M 分

19
00:00:50,000 --> 00:00:51,000
您正在收听的

20
00:00:51,000 --> 00:00:54,000
或正在反复一听再听的是

21
00:00:54,000 --> 00:00:55,000
内核恐慌一档

22
00:00:55,000 --> 00:00:57,000
IT 的 podcast 节目

23
00:00:57,000 --> 00:00:59,000
主持人是我

24
00:00:59,000 --> 00:01:00,000
武汤还有 Ryu

25
00:01:00,000 --> 00:01:01,000
OK

26
00:01:01,000 --> 00:01:04,000
在今天的节目正式开始之前

27
00:01:04,000 --> 00:01:06,000
我们做一个什么 follow up

28
00:01:06,000 --> 00:01:08,000
点称 FU

29
00:01:08,000 --> 00:01:08,000
对

30
00:01:08,000 --> 00:01:12,000
在阔别了两周之后

31
00:01:12,000 --> 00:01:14,000
大家有听到我们声音的

32
00:01:14,000 --> 00:01:15,000
这两周之间也有一些反馈

33
00:01:15,000 --> 00:01:17,000
但实际上我们这期节目

34
00:01:17,000 --> 00:01:19,000
不是在真正的

35
00:01:19,000 --> 00:01:22,000
您听到这期节目的前一天

36
00:01:22,000 --> 00:01:23,000
或者前两天录的

37
00:01:23,000 --> 00:01:24,000
具体什么时候我们就保密了

38
00:01:24,000 --> 00:01:28,000
但目前我们所得到一些反馈是

39
00:01:29,000 --> 00:01:32,000
一位也是姓吴的推友

40
00:01:32,000 --> 00:01:33,000
在推特上告诉我说

41
00:01:33,000 --> 00:01:36,000
如果想要在

42
00:01:36,000 --> 00:01:38,000
HipHacking Keyboard 上面

43
00:01:38,000 --> 00:01:42,000
使用 HJKL 做方向键的话

44
00:01:42,000 --> 00:01:44,000
可以去加装一个

45
00:01:44,000 --> 00:01:47,000
叫做 TMK Analyze Keyboard Mod

46
00:01:47,000 --> 00:01:48,000
然后这个 Mod 的

47
00:01:48,000 --> 00:01:51,000
我记得我以前应该看到过这个东西

48
00:01:51,000 --> 00:01:53,000
它的根本的理念就是

49
00:01:53,000 --> 00:01:56,000
在这个 HJKB 上面

50
00:01:56,000 --> 00:01:57,000
加装一块

51
00:01:57,000 --> 00:01:57,000
呃

52
00:01:57,000 --> 00:01:58,000
是一块

53
00:01:59,000 --> 00:02:01,000
使用 ARM 处理器的开发板

54
00:02:01,000 --> 00:02:04,000
然后在这个开发板上烧录一个

55
00:02:04,000 --> 00:02:05,000
嗯

56
00:02:05,000 --> 00:02:07,000
烧录一个控制器

57
00:02:07,000 --> 00:02:13,000
然后通过这个控制器做这个键盘和主机之间的传输

58
00:02:13,000 --> 00:02:14,000
呃

59
00:02:14,000 --> 00:02:16,000
传输 Converter 可以这么说

60
00:02:16,000 --> 00:02:17,000
然后就可以让

61
00:02:17,000 --> 00:02:19,000
翻译了一下对吧

62
00:02:19,000 --> 00:02:19,000
对

63
00:02:19,000 --> 00:02:20,000
然后这样就可以让

64
00:02:20,000 --> 00:02:23,000
这样就可以自定义 HipHacking Keyboard 上面的哪些键

65
00:02:23,000 --> 00:02:24,000
有哪些功能

66
00:02:24,000 --> 00:02:27,000
比如说它有一个比较经典的 Mod 是

67
00:02:27,000 --> 00:02:29,000
用空格键做的

68
00:02:29,000 --> 00:02:30,000
当做 FN

69
00:02:30,000 --> 00:02:31,000
也就是说在你按下空格键的时候

70
00:02:31,000 --> 00:02:33,000
你就可以去按 123

71
00:02:33,000 --> 00:02:35,000
然后这个时候 123 就是 FEFRF 3

72
00:02:35,000 --> 00:02:35,000
啊

73
00:02:35,000 --> 00:02:36,000
OK

74
00:02:36,000 --> 00:02:37,000
对

75
00:02:37,000 --> 00:02:38,000
但是

76
00:02:38,000 --> 00:02:42,000
我是觉得要在上面加一个 TZ 开

77
00:02:42,000 --> 00:02:45,000
就是他推荐了一个开发板叫 TZ 开发板

78
00:02:45,000 --> 00:02:46,000
这个开发板足够小

79
00:02:46,000 --> 00:02:49,000
并且可以塞进这个键盘的内部

80
00:02:49,000 --> 00:02:53,000
可我觉得拆开键盘塞一个开发板进去

81
00:02:53,000 --> 00:02:55,000
然后焊啊什么的还是太麻烦

82
00:02:55,000 --> 00:02:57,000
这这这你就不够硬核了

83
00:02:57,000 --> 00:02:58,000
人家都自己组装

84
00:02:58,000 --> 00:03:02,000
从那个什么从零部件开始组装键盘了

85
00:03:02,000 --> 00:03:04,000
对没错

86
00:03:04,000 --> 00:03:06,000
就是说明我还是硬核精神不够啊

87
00:03:06,000 --> 00:03:07,000
需要

88
00:03:07,000 --> 00:03:10,000
需要还是还是需要来试一试这件事情

89
00:03:10,000 --> 00:03:11,000
嗯

90
00:03:11,000 --> 00:03:14,000
而且你就守着离那个 cherry 厂那么近

91
00:03:14,000 --> 00:03:14,000
对吧

92
00:03:14,000 --> 00:03:17,000
这个跟他们没关系啊

93
00:03:17,000 --> 00:03:18,000
我怎么能去他们要几个

94
00:03:18,000 --> 00:03:20,000
我怎么能去跟他们要几个轴

95
00:03:20,000 --> 00:03:20,000
哦

96
00:03:20,000 --> 00:03:22,000
你的意思是我买一堆轴来

97
00:03:22,000 --> 00:03:23,000
然后自己做一个键盘是吧

98
00:03:23,000 --> 00:03:23,000
对啊

99
00:03:23,000 --> 00:03:27,000
这两天前天他们那个什么 Hackernew 上不是有个人就这么干了吗

100
00:03:27,000 --> 00:03:27,000
哎

101
00:03:27,000 --> 00:03:27,000
哎

102
00:03:27,000 --> 00:03:27,000
哎

103
00:03:27,000 --> 00:03:28,000
哎

104
00:03:28,000 --> 00:03:28,000
哎

105
00:03:28,000 --> 00:03:28,000
哎

106
00:03:28,000 --> 00:03:28,000
哎

107
00:03:28,000 --> 00:03:28,000
哎

108
00:03:28,000 --> 00:03:28,000
哎

109
00:03:28,000 --> 00:03:28,000
哎

110
00:03:28,000 --> 00:03:28,000
哎

111
00:03:28,000 --> 00:03:28,000
哎

112
00:03:28,000 --> 00:03:29,000
,

113
00:03:29,000 --> 00:03:30,000
这个还真是一个三粒打印机

114
00:03:30,000 --> 00:03:31,000
这个还是

115
00:03:31,000 --> 00:03:33,000
这个还是真正的硬核好吧

116
00:03:33,000 --> 00:03:34,000
对

117
00:03:34,000 --> 00:03:36,000
其实开源的键盘项目

118
00:03:36,000 --> 00:03:37,000
我以前也见过一个

119
00:03:37,000 --> 00:03:37,000
嗯

120
00:03:37,000 --> 00:03:39,000
就是呃

121
00:03:39,000 --> 00:03:40,000
完全 DIY 的制作

122
00:03:40,000 --> 00:03:42,000
而且网上可以买到他的图纸

123
00:03:42,000 --> 00:03:42,000
嗯

124
00:03:42,000 --> 00:03:45,000
而且我相信那个键盘的壳子就是三粒打印机

125
00:03:45,000 --> 00:03:46,000
哈

126
00:03:46,000 --> 00:03:49,000
对这样出来的那个就是手感和这个材

127
00:03:49,000 --> 00:03:52,000
就做工会存疑吧

128
00:03:52,000 --> 00:03:55,000
很难说啊

129
00:03:55,000 --> 00:03:58,000
我是比较相信现在的三粒打印机

130
00:03:58,000 --> 00:04:02,000
还没能达到我们一个键盘需要的模具的精度

131
00:04:02,000 --> 00:04:05,000
对这个是一个挺挺麻烦的事情

132
00:04:05,000 --> 00:04:08,000
而且就如果像三粒打印真的能做到那个进度

133
00:04:08,000 --> 00:04:11,000
我就想打的还是上次我们说那个 key

134
00:04:11,000 --> 00:04:12,000
cup

135
00:04:12,000 --> 00:04:13,000
keyboard

136
00:04:13,000 --> 00:04:13,000
key

137
00:04:13,000 --> 00:04:14,000
cup

138
00:04:14,000 --> 00:04:14,000
keyboard

139
00:04:14,000 --> 00:04:15,000
cub

140
00:04:15,000 --> 00:04:18,000
我现在想想 cupboard 是那个厨房板吗

141
00:04:18,000 --> 00:04:20,000
就是不是是个板叫什么

142
00:04:20,000 --> 00:04:24,000
哥板不是橱柜的 capboard 就哥板了

143
00:04:24,000 --> 00:04:25,000
放 cap the board

144
00:04:25,000 --> 00:04:26,000
yeah

145
00:04:26,000 --> 00:04:27,000
嗯

146
00:04:27,000 --> 00:04:28,000
OK 啊

147
00:04:28,000 --> 00:04:32,000
另外一个 follow up 是有人说这个车

148
00:04:32,000 --> 00:04:34,000
这是我们第一期的时候讲到哈

149
00:04:34,000 --> 00:04:39,000
那个说这个德国的很多车还有加拿大的很多车的油箱盖是没法锁的

150
00:04:39,000 --> 00:04:46,000
然后他说是油箱盖的锁是由中控所控制的锁之后应该就打不开了

151
00:04:46,000 --> 00:04:48,000
对这个就是这个他应该是这样的

152
00:04:48,000 --> 00:04:49,000
可是他就不是这样的

153
00:04:50,000 --> 00:04:51,000
你确定吗

154
00:04:51,000 --> 00:04:51,000
对啊

155
00:04:51,000 --> 00:04:53,000
我确定我就是当你用遥控

156
00:04:53,000 --> 00:04:54,000
就是你下车

157
00:04:54,000 --> 00:04:55,000
然后遥控钥匙吧

158
00:04:55,000 --> 00:04:56,000
车锁了之后

159
00:04:56,000 --> 00:04:58,000
你就可以打开油箱盖

160
00:04:58,000 --> 00:04:59,000
对的

161
00:04:59,000 --> 00:05:00,000
Holy shit

162
00:05:00,000 --> 00:05:00,000
不难的话

163
00:05:00,000 --> 00:05:01,000
如果中控所锁住之后

164
00:05:01,000 --> 00:05:03,000
这个事情就不存在这个问题了

165
00:05:03,000 --> 00:05:04,000
对吧

166
00:05:04,000 --> 00:05:05,000
这个就是 security design

167
00:05:05,000 --> 00:05:09,000
但是为什么要吐槽他就是因为他不是这样的

168
00:05:09,000 --> 00:05:10,000
OK

169
00:05:10,000 --> 00:05:13,000
所以这个真的是一个挺严重的问题

170
00:05:13,000 --> 00:05:16,000
不我我而且而且我觉得好像日系车都没什么这个问题

171
00:05:16,000 --> 00:05:19,000
就是那个 Jeep 这个系列发现全部都这样

172
00:05:19,000 --> 00:05:20,000
不知道为什么

173
00:05:20,000 --> 00:05:22,000
美国人比较信任别人吗

174
00:05:22,000 --> 00:05:26,000
可能是当初美国人的即便现在美国油价也是非常非常便宜的

175
00:05:27,000 --> 00:05:27,000
不

176
00:05:28,000 --> 00:05:29,000
油都不都算了

177
00:05:29,000 --> 00:05:31,000
万一有的什么三长两

178
00:05:31,000 --> 00:05:34,000
不你看那个什么电影里面最常见的一个什么镜头

179
00:05:34,000 --> 00:05:38,000
那么男那个什么男主角或者是一个坏这个是坏的吗

180
00:05:38,000 --> 00:05:45,000
什么坏一号跑道路街边去要制造一起什么 destruction 的时候就把那个油箱盖拧开

181
00:05:45,000 --> 00:05:46,000
然后这个什么烟头进去

182
00:05:46,000 --> 00:05:48,000
然后自己很很潇洒的走

183
00:05:48,000 --> 00:05:48,000
然后过了十几秒

184
00:05:48,000 --> 00:05:49,000
吧

185
00:05:49,000 --> 00:05:50,000
你就爆炸了

186
00:05:50,000 --> 00:05:54,000
Breaking Bad 里面那个老白就把他的车这样烧

187
00:05:55,000 --> 00:05:55,000
对啊

188
00:05:55,000 --> 00:05:57,000
就你就觉得这个事情

189
00:05:57,000 --> 00:05:57,000
这是多么的好事啊

190
00:05:57,000 --> 00:06:01,000
多么一个多明显的一个 security for

191
00:06:03,000 --> 00:06:06,000
的确应该去库尔之类的地方问一问到底是为什么

192
00:06:06,000 --> 00:06:09,000
为什么是怎么想就好像其实其实还有一个问题就是

193
00:06:10,000 --> 00:06:13,000
包括很多非常现代的车

194
00:06:13,000 --> 00:06:16,000
比如大众的车

195
00:06:16,000 --> 00:06:20,000
他的车灯在你离开驾驶舱拔钥匙之后

196
00:06:20,000 --> 00:06:23,000
如果你不把如果你不在驾驶舱里面把车灯关掉

197
00:06:23,000 --> 00:06:24,000
车灯会一直亮着

198
00:06:24,000 --> 00:06:25,000
直到电池耗尽为止

199
00:06:25,000 --> 00:06:26,000
不会了吧

200
00:06:26,000 --> 00:06:27,000
什么这个我先是了现在

201
00:06:27,000 --> 00:06:29,000
这还这样吗

202
00:06:29,000 --> 00:06:30,000
有些很有很多车都是这样

203
00:06:30,000 --> 00:06:32,000
我们在冰岛就看到一样这样的车

204
00:06:32,000 --> 00:06:37,000
直到他电池就是看到一个灯一点点熄灭都没有人知道那辆车是谁的

205
00:06:37,000 --> 00:06:42,000
我还以为就至少是可能最近几年就是自这个做的车

206
00:06:42,000 --> 00:06:45,000
他有那个功能就是严实关灯

207
00:06:46,000 --> 00:06:49,000
对有些车在你下车之后拔钥匙的时候

208
00:06:49,000 --> 00:06:50,000
如果你忘了关车灯

209
00:06:50,000 --> 00:06:52,000
他会滴滴滴报警

210
00:06:52,000 --> 00:06:55,000
但是如果你不理他的话

211
00:06:55,000 --> 00:06:56,000
他就会让灯一直开着

212
00:06:56,000 --> 00:06:58,000
我怀疑这是有什么用意的

213
00:06:58,000 --> 00:06:59,000
这个我知道

214
00:06:59,000 --> 00:07:02,000
我自己现在那个车就是他会

215
00:07:02,000 --> 00:07:04,000
就你拔钥匙

216
00:07:04,000 --> 00:07:06,000
你能下车锁上车门之后灯会亮一会儿

217
00:07:06,000 --> 00:07:08,000
然后他的那个用意是说

218
00:07:08,000 --> 00:07:12,000
很多这个车是停车库里面

219
00:07:12,000 --> 00:07:12,000
对吧

220
00:07:12,000 --> 00:07:15,000
然后如果晚上的话比较黑的情况下

221
00:07:15,000 --> 00:07:18,000
他可以就照着你回去离开那个地方

222
00:07:18,000 --> 00:07:19,000
然后他再把那个灯熄掉

223
00:07:19,000 --> 00:07:22,000
对我的车有这个功能

224
00:07:22,000 --> 00:07:25,000
但是只需要在钥匙上按一个键

225
00:07:25,000 --> 00:07:26,000
这个灯就会亮

226
00:07:26,000 --> 00:07:27,000
然后亮大概 40 秒 50 秒

227
00:07:27,000 --> 00:07:28,000
他就会自动熄灭

228
00:07:28,000 --> 00:07:29,000
对对对不到

229
00:07:29,000 --> 00:07:31,000
他不会一直亮着

230
00:07:31,000 --> 00:07:34,000
还是有个选项可以把这个东西关掉

231
00:07:34,000 --> 00:07:34,000
还是没有

232
00:07:34,000 --> 00:07:35,000
我忘了

233
00:07:35,000 --> 00:07:36,000
就是三号

234
00:07:36,000 --> 00:07:39,000
这绝对是一个很傻逼的设计之一

235
00:07:39,000 --> 00:07:40,000
而且或者这么讲

236
00:07:40,000 --> 00:07:44,000
就算是你又需要把那个车灯一直亮着

237
00:07:44,000 --> 00:07:46,000
比如说你在野外要做什么事情

238
00:07:46,000 --> 00:07:47,000
对吧

239
00:07:47,000 --> 00:07:48,000
把那个车灯当做一个照明来用

240
00:07:48,000 --> 00:07:49,000
也可以

241
00:07:49,000 --> 00:07:52,000
但是起码你这个车要做一个什么

242
00:07:52,000 --> 00:07:53,000
二备用电源

243
00:07:53,000 --> 00:07:55,000
保证能够下一次能点着

244
00:07:55,000 --> 00:07:56,000
对吧

245
00:07:56,000 --> 00:08:00,000
对你至少应该在电量即将消耗到

246
00:08:00,000 --> 00:08:02,000
只够一次或者两次打火的时候

247
00:08:02,000 --> 00:08:04,000
把这个车灯切断吧

248
00:08:04,000 --> 00:08:04,000
对啊

249
00:08:04,000 --> 00:08:06,000
这个三号他就还不管

250
00:08:06,000 --> 00:08:07,000
接着用

251
00:08:07,000 --> 00:08:09,000
烧光为止

252
00:08:09,000 --> 00:08:14,000
我甚至有可能这个自动关灯的功能是一个选项

253
00:08:14,000 --> 00:08:14,000
去加钱

254
00:08:14,000 --> 00:08:15,000
没有钱就没有

255
00:08:15,000 --> 00:08:17,000
也不是没有可能

256
00:08:17,000 --> 00:08:18,000
因为很多德国厂商非常黑心

257
00:08:18,000 --> 00:08:20,000
就一定要这样

258
00:08:20,000 --> 00:08:21,000
对我讲一个笑话好了

259
00:08:21,000 --> 00:08:22,000
反正已经说到这个远了

260
00:08:22,000 --> 00:08:25,000
就我之前工作的公司有一个

261
00:08:25,000 --> 00:08:28,000
德国人是我们的门房大爷

262
00:08:28,000 --> 00:08:31,000
就是德国几乎每栋建筑都有一个人

263
00:08:31,000 --> 00:08:34,000
专门负责维护这栋建筑这种设施

264
00:08:34,000 --> 00:08:34,000
对

265
00:08:34,000 --> 00:08:35,000
Janitor

266
00:08:35,000 --> 00:08:37,000
Janitor 先生有一天跟我说

267
00:08:37,000 --> 00:08:41,000
他觉得德国的汽车厂商都是 up talker

268
00:08:41,000 --> 00:08:42,000
骗子

269
00:08:42,000 --> 00:08:44,000
说要价太高了

270
00:08:44,000 --> 00:08:45,000
然后他说

271
00:08:45,000 --> 00:08:46,000
我觉得日本车挺好

272
00:08:46,000 --> 00:08:48,000
我说您觉得日本哪辆日本车

273
00:08:48,000 --> 00:08:49,000
哪个日本车的牌子好呢

274
00:08:49,000 --> 00:08:50,000
他想了想说

275
00:08:50,000 --> 00:08:51,000
嗯

276
00:08:51,000 --> 00:08:52,000
现代

277
00:08:52,000 --> 00:08:54,000
哈哈哈哈

278
00:08:54,000 --> 00:08:55,000
哈哈哈哈

279
00:08:55,000 --> 00:08:57,000
不过差不多

280
00:08:57,000 --> 00:08:58,000
反正什么

281
00:08:58,000 --> 00:08:58,000
True story

282
00:08:58,000 --> 00:09:01,000
日本韩国傻傻分不清楚也还不错

283
00:09:01,000 --> 00:09:03,000
不过他这个事情我觉得反映了一个现实

284
00:09:03,000 --> 00:09:04,000
就是这个

285
00:09:04,000 --> 00:09:07,000
就是日系还有特别像韩系厂商

286
00:09:07,000 --> 00:09:10,000
在就是人性化这一方面

287
00:09:10,000 --> 00:09:11,000
当然人性化就体现在

288
00:09:11,000 --> 00:09:13,000
就是车内的一些电子装备啊

289
00:09:13,000 --> 00:09:16,000
一些怎么让你省心和舒坦的

290
00:09:16,000 --> 00:09:18,000
这么一些小配件上

291
00:09:18,000 --> 00:09:19,000
还做的挺好的

292
00:09:19,000 --> 00:09:21,000
本来其实这些东西也花不了多少钱

293
00:09:21,000 --> 00:09:22,000
对吧

294
00:09:22,000 --> 00:09:23,000
比如说他给你搞个什么

295
00:09:23,000 --> 00:09:25,000
我想这前几年还比较

296
00:09:25,000 --> 00:09:27,000
好火的那个蓝牙

297
00:09:27,000 --> 00:09:30,000
你知道很多蓝牙是就现在的车都可能都没有这个问题

298
00:09:30,000 --> 00:09:31,000
前几年的车蓝牙

299
00:09:31,000 --> 00:09:32,000
他是分两种的

300
00:09:32,000 --> 00:09:36,000
你一种是就只能连手机打电话

301
00:09:36,000 --> 00:09:38,000
然后另外一种是可以连这个立体声音乐嘛

302
00:09:39,000 --> 00:09:42,000
然后就有很多很多这种协议

303
00:09:42,000 --> 00:09:45,000
协议级别是不同的协议

304
00:09:45,000 --> 00:09:45,000
来呀

305
00:09:45,000 --> 00:09:46,000
那个叫什么

306
00:09:46,000 --> 00:09:47,000
协议级别

307
00:09:47,000 --> 00:09:49,000
他会传输掉要求会高一点

308
00:09:49,000 --> 00:09:51,000
但是这个东西成本也就是几美元的事情

309
00:09:51,000 --> 00:09:52,000
对吧

310
00:09:52,000 --> 00:09:55,000
然后但是你会发现很多这种日系日韩系的

311
00:09:55,000 --> 00:09:58,000
早上都会把嘴把这两个功能都给做进去

312
00:09:58,000 --> 00:09:59,000
就是 for free

313
00:09:59,000 --> 00:10:00,000
你就有了

314
00:10:00,000 --> 00:10:03,000
然后你看很多这种特别是德系啊

315
00:10:03,000 --> 00:10:04,000
他就会啊

316
00:10:04,000 --> 00:10:06,000
标配是没有这个蓝牙功能的

317
00:10:06,000 --> 00:10:08,000
然后稍微有点什么

318
00:10:08,000 --> 00:10:12,000
你再加再加一千美元给你一个通话的功能

319
00:10:12,000 --> 00:10:16,000
再加一千美元给你一个这个就是播放多媒体

320
00:10:16,000 --> 00:10:17,000
蓝牙播放多媒体的功能

321
00:10:17,000 --> 00:10:20,000
你觉得就是什么

322
00:10:20,000 --> 00:10:24,000
就是你会觉得这个就是完全你作为一个他的一个用户好

323
00:10:24,000 --> 00:10:25,000
但很多人说买的

324
00:10:25,000 --> 00:10:26,000
买的东西

325
00:10:26,000 --> 00:10:29,000
那个什么奔驰宝马的人根本不 care 这种事情

326
00:10:29,000 --> 00:10:29,000
对吧

327
00:10:29,000 --> 00:10:35,000
但是你能对所以所以也无外乎像北美

328
00:10:35,000 --> 00:10:39,000
你可以看到德国的例子就不说德国是个特殊的国家

329
00:10:39,000 --> 00:10:40,000
但你看北美的话

330
00:10:40,000 --> 00:10:43,000
街上跑的大部分还是日系车

331
00:10:43,000 --> 00:10:45,000
这个还是有一定的道理的

332
00:10:45,000 --> 00:10:47,000
对德国人

333
00:10:49,000 --> 00:10:50,000
太过货了

334
00:10:50,000 --> 00:10:52,000
只能这么理解

335
00:10:52,000 --> 00:10:54,000
对对好

336
00:10:54,000 --> 00:10:55,000
两个 follow up 之后

337
00:10:55,000 --> 00:10:57,000
我们进转入今天的正题吧

338
00:10:57,000 --> 00:11:00,000
所以今天我们要讲的一个题目叫做

339
00:11:00,000 --> 00:11:03,000
static site generators

340
00:11:03,000 --> 00:11:06,000
对静态网站生成器

341
00:11:06,000 --> 00:11:10,000
听起来就比上次的键盘要要要哈扣一点

342
00:11:10,000 --> 00:11:13,000
为了弥补我们上次不够汉靠的

343
00:11:13,000 --> 00:11:15,000
不过上期节目的反响好像挺好

344
00:11:15,000 --> 00:11:17,000
至少我女朋友听了很开心

345
00:11:17,000 --> 00:11:18,000
她说她要换新键盘

346
00:11:18,000 --> 00:11:20,000
才了你

347
00:11:20,000 --> 00:11:23,000
对

348
00:11:23,000 --> 00:11:25,000
所以什么是

349
00:11:25,000 --> 00:11:27,000
静态网站生成器

350
00:11:27,000 --> 00:11:30,000
这其实并不是所有人都知道这个概念哈

351
00:11:30,000 --> 00:11:31,000
对

352
00:11:31,000 --> 00:11:33,000
虽然我又忍不住想要说不知道这个概念就不是设定

353
00:11:33,000 --> 00:11:38,000
我发现我每期都因为种种原因

354
00:11:38,000 --> 00:11:40,000
流失了一部分观众听众

355
00:11:44,000 --> 00:11:45,000
对还是解释一下吧

356
00:11:45,000 --> 00:11:49,000
其实静态网站生成器的理念非常简单

357
00:11:49,000 --> 00:11:49,000
就是

358
00:11:51,000 --> 00:11:52,000
生成一些

359
00:11:53,000 --> 00:11:55,000
静态的防御

360
00:11:55,000 --> 00:11:57,000
对不对

361
00:11:57,000 --> 00:11:58,000
反了反了

362
00:11:58,000 --> 00:12:02,000
我应该是先过来就最开始我们做个人主业的时候

363
00:12:02,000 --> 00:12:04,000
大家都应该还记得挺清楚

364
00:12:04,000 --> 00:12:05,000
就是用什么

365
00:12:05,000 --> 00:12:10,000
dreamweaver 还是手工写一个 html 的代码

366
00:12:10,000 --> 00:12:14,000
然后命名成 index.html 或者是 index.htm

367
00:12:14,000 --> 00:12:16,000
htm 这个文件

368
00:12:16,000 --> 00:12:20,000
然后放在网页服务器的某一个

369
00:12:20,000 --> 00:12:22,000
你的 user 目录里面

370
00:12:22,000 --> 00:12:24,000
然后那个时候大家很多人还没有

371
00:12:24,000 --> 00:12:25,000
这个

372
00:12:25,000 --> 00:12:27,000
私有服务器的概念吧

373
00:12:27,000 --> 00:12:30,000
很多人放到是一个就是共享的服务器有一个 tilled

374
00:12:30,000 --> 00:12:33,000
然后你的用户名这么一个目录下面对吧

375
00:12:33,000 --> 00:12:36,000
对波浪线然后用户名 slash

376
00:12:36,000 --> 00:12:38,000
然后你去访问这个网址的时候

377
00:12:38,000 --> 00:12:40,000
比如说我记得我大学的时候

378
00:12:40,000 --> 00:12:43,000
比如说这个学校的名字是 syu.edu.sen

379
00:12:43,000 --> 00:12:46,000
然后有个斜杠 tilled 我的这个选择的用户名

380
00:12:46,000 --> 00:12:51,000
就去访问那个地址就可以打开我的这个叫什么个人主页了

381
00:12:51,000 --> 00:12:52,000
嗯啊这个这个

382
00:12:52,000 --> 00:12:53,000
即便现在即便现在还是有非常非常多的情侣的网址了

383
00:12:53,000 --> 00:12:54,000
嗯啊这个这个即便现在即便现在还是有非常非常多的情侣的网址了

384
00:12:54,000 --> 00:12:56,000
嗯啊这个即便现在即便现在还是有非常非常多的情侣的网址了

385
00:12:56,000 --> 00:13:00,000
尤其是那些在教授里面拿这个在学校里面拿教授

386
00:13:00,000 --> 00:13:03,000
呃叫 tenor

387
00:13:03,000 --> 00:13:05,000
嗯中生教授

388
00:13:05,000 --> 00:13:06,000
中生讲中生教职讲

389
00:13:06,000 --> 00:13:07,000
对

390
00:13:07,000 --> 00:13:08,000
中生教职讲经

391
00:13:08,000 --> 00:13:09,000
嗯

392
00:13:09,000 --> 00:13:10,000
中生教职心

393
00:13:10,000 --> 00:13:11,000
就是中生

394
00:13:11,000 --> 00:13:13,000
你这段抹去吧我求你这段抹去吧

395
00:13:13,000 --> 00:13:14,000
tenor position

396
00:13:14,000 --> 00:13:15,000
啊

397
00:13:15,000 --> 00:13:16,000
对 tenor position

398
00:13:16,000 --> 00:13:17,000
对

399
00:13:17,000 --> 00:13:18,000
OK 重录

400
00:13:18,000 --> 00:13:23,000
嗯就是即便现在很多大学的教授也在他们拿到他们的这个

401
00:13:23,000 --> 00:13:24,000
嗯就是即便现在很多大学的教授也在他们拿到他们的这个

402
00:13:24,000 --> 00:13:35,000
然后 треть一直都是人家在用 Z religion 的这个宣传信息

403
00:13:35,000 --> 00:13:37,000
嗯

404
00:13:37,000 --> 00:13:39,000
例如我没有给教 usted

405
00:13:39,000 --> 00:13:41,000
说 season

406
00:13:41,000 --> 00:13:43,000
他们是авать

407
00:13:43,000 --> 00:13:44,000
evolves

408
00:13:44,000 --> 00:13:49,000
那么后期现在有什么

409
00:13:49,000 --> 00:13:52,000
exterior

410
00:13:52,000 --> 00:13:53,000
wydaje

411
00:13:53,000 --> 00:13:54,000
就是

412
00:13:54,000 --> 00:13:55,000
然后打开他们的网页

413
00:13:55,000 --> 00:13:58,000
我靠一部七成的互联网风格

414
00:13:58,000 --> 00:13:59,000
扑面而来

415
00:13:59,000 --> 00:13:59,000
对

416
00:13:59,000 --> 00:14:04,000
这是其实正儿八经第一代的 static site

417
00:14:04,000 --> 00:14:04,000
对

418
00:14:04,000 --> 00:14:06,000
但是他们不一定是用 generator

419
00:14:06,000 --> 00:14:07,000
generate 出来的

420
00:14:07,000 --> 00:14:08,000
可能是手

421
00:14:08,000 --> 00:14:08,000
他

422
00:14:08,000 --> 00:14:09,000
他

423
00:14:09,000 --> 00:14:10,000
其实也有啊

424
00:14:10,000 --> 00:14:12,000
其实他是有用那个什么

425
00:14:12,000 --> 00:14:12,000
就是

426
00:14:12,000 --> 00:14:14,000
你说 dreamweaver 算不算一个 generator

427
00:14:14,000 --> 00:14:15,000
算其实

428
00:14:15,000 --> 00:14:16,000
我觉得不算

429
00:14:16,000 --> 00:14:18,000
dreamweaver 只能算一个

430
00:14:18,000 --> 00:14:18,000
editor 吧

431
00:14:18,000 --> 00:14:20,000
other software

432
00:14:20,000 --> 00:14:21,000
好吧

433
00:14:21,000 --> 00:14:23,000
然后他会把这个网页放到那个服务器上

434
00:14:23,000 --> 00:14:24,000
就可以访问了

435
00:14:24,000 --> 00:14:24,000
然后这个

436
00:14:24,000 --> 00:14:27,000
这个你就访问那个网址

437
00:14:27,000 --> 00:14:27,000
天天不变

438
00:14:27,000 --> 00:14:28,000
都是那个网页长那个样

439
00:14:28,000 --> 00:14:29,000
就叫静态嘛

440
00:14:29,000 --> 00:14:30,000
它不会变

441
00:14:30,000 --> 00:14:31,000
对

442
00:14:31,000 --> 00:14:33,000
然后这个就是一个所谓的 static site

443
00:14:33,000 --> 00:14:36,000
然后后来的趋势是变成了那个

444
00:14:36,000 --> 00:14:37,000
叫什么动态网站

445
00:14:37,000 --> 00:14:38,000
这个是大概是在

446
00:14:38,000 --> 00:14:41,000
00 年左右吧

447
00:14:41,000 --> 00:14:44,000
就是 00 年到 10 年这段时间

448
00:14:44,000 --> 00:14:46,000
随着改革开放的这段生化

449
00:14:46,000 --> 00:14:49,000
以及这个互联网技术日新月异

450
00:14:49,000 --> 00:14:49,000
人们发现

451
00:14:49,000 --> 00:14:52,000
很多内容其实是可以

452
00:14:52,000 --> 00:14:53,000
当人的

453
00:14:53,000 --> 00:14:54,000
他们问的时候

454
00:14:54,000 --> 00:14:57,000
我才生成出来送给他看的

455
00:14:57,000 --> 00:14:58,000
对

456
00:14:58,000 --> 00:15:00,000
其实这就是动态网站的根本意义

457
00:15:00,000 --> 00:15:04,000
就是动态网站上面一般也许会有一个数据库

458
00:15:04,000 --> 00:15:06,000
然后有一堆程序

459
00:15:06,000 --> 00:15:08,000
然后有一堆预先写好的模板

460
00:15:08,000 --> 00:15:10,000
然后当一个来访

461
00:15:10,000 --> 00:15:12,000
访客来访问你的网站的时候

462
00:15:12,000 --> 00:15:15,000
这些程序从数据库里面取出数据

463
00:15:15,000 --> 00:15:16,000
然后把这些数据填进模板里面

464
00:15:16,000 --> 00:15:18,000
然后动态生成一个网页

465
00:15:18,000 --> 00:15:18,000
对

466
00:15:18,000 --> 00:15:20,000
来给访客看

467
00:15:20,000 --> 00:15:21,000
这就是动态网站

468
00:15:21,000 --> 00:15:22,000
对

469
00:15:22,000 --> 00:15:22,000
那最后先

470
00:15:22,000 --> 00:15:23,000
就可能解释了

471
00:15:23,000 --> 00:15:24,000
什么是动态和静态

472
00:15:24,000 --> 00:15:27,000
但是最近这两三年

473
00:15:27,000 --> 00:15:31,000
以某什么叫 JACO 为代表的

474
00:15:31,000 --> 00:15:34,000
这个静态网站生成器又崛起了

475
00:15:34,000 --> 00:15:34,000
然后这个时候

476
00:15:34,000 --> 00:15:35,000
来吴涛你解释

477
00:15:35,000 --> 00:15:37,000
你觉得什么才叫一个生成器

478
00:15:37,000 --> 00:15:43,000
所谓生成器

479
00:15:43,000 --> 00:15:46,000
其实就是能够按照你预先定义的一组规则

480
00:15:46,000 --> 00:15:50,000
然后自动为你写好的一些

481
00:15:50,000 --> 00:15:53,000
通常是纯

482
00:15:53,000 --> 00:15:53,000
某种

483
00:15:53,000 --> 00:15:56,000
纯文本格式的内容

484
00:15:56,000 --> 00:15:58,000
生成一大堆静态网页

485
00:15:58,000 --> 00:16:02,000
然后就像最古老的那种静态网站一样

486
00:16:02,000 --> 00:16:03,000
供你可以

487
00:16:04,000 --> 00:16:07,000
让你可以不需要任何动态的程序

488
00:16:07,000 --> 00:16:08,000
然后放在网上的某个地方

489
00:16:08,000 --> 00:16:09,000
供人浏览的工具

490
00:16:09,000 --> 00:16:13,000
就叫做动态网站生成器

491
00:16:13,000 --> 00:16:14,000
所以

492
00:16:14,000 --> 00:16:16,000
这就从你个人的角度来讲

493
00:16:16,000 --> 00:16:18,000
你觉得

494
00:16:18,000 --> 00:16:20,000
如果让你比如你现在博客站点是用什么写的

495
00:16:20,000 --> 00:16:22,000
wordpress 还是

496
00:16:22,000 --> 00:16:23,000
JACO

497
00:16:23,000 --> 00:16:23,000
JACO

498
00:16:23,000 --> 00:16:24,000
OK

499
00:16:24,000 --> 00:16:27,000
所以所以但是我记得你之前是用那个 wordpress 写的

500
00:16:27,000 --> 00:16:27,000
对吧

501
00:16:27,000 --> 00:16:28,000
就搬家之前

502
00:16:28,000 --> 00:16:32,000
我之前是用一个自己写的 CMS

503
00:16:32,000 --> 00:16:35,000
但是甚至不算 CMS 是一个自己写的 blog 系统

504
00:16:35,000 --> 00:16:36,000
是用 Lua 写的

505
00:16:36,000 --> 00:16:37,000
是动态的吗

506
00:16:37,000 --> 00:16:38,000
还是静态的

507
00:16:38,000 --> 00:16:39,000
是半动态

508
00:16:39,000 --> 00:16:40,000
因为他没有数据库

509
00:16:40,000 --> 00:16:41,000
就是

510
00:16:41,000 --> 00:16:42,000
这种文件里面拿吗

511
00:16:42,000 --> 00:16:43,000
对吧

512
00:16:43,000 --> 00:16:43,000
就是我有一堆

513
00:16:43,000 --> 00:16:45,000
我有一堆纯文本文件

514
00:16:45,000 --> 00:16:46,000
然后你访问的时候

515
00:16:46,000 --> 00:16:50,000
他把这堆纯文本文件和 template 结合在一起

516
00:16:50,000 --> 00:16:50,000
OK

517
00:16:50,000 --> 00:16:53,000
所以这里有个很关键的问题

518
00:16:53,000 --> 00:16:54,000
我觉得可能一定要解释清楚

519
00:16:54,000 --> 00:16:55,000
也是很多人在纠结

520
00:16:55,000 --> 00:16:57,000
就是我相信听众里面

521
00:16:57,000 --> 00:17:00,000
如果你程序员的话或多或少会会有这种纠结的事情

522
00:17:00,000 --> 00:17:11,000
就是当初你是怎么决定要从一个动态或者是半动态的系统变成一个完全静态的那个博客来做呢

523
00:17:12,000 --> 00:17:15,000
其实我觉得在我身上很简单

524
00:17:15,000 --> 00:17:16,000
就是跟风吧

525
00:17:16,000 --> 00:17:18,000
哈哈哈哈

526
00:17:18,000 --> 00:17:20,000
或者是其实有两方面的原因

527
00:17:20,000 --> 00:17:22,000
一方面是跟风

528
00:17:22,000 --> 00:17:26,000
因为这个这个东西是由 Tom Prentice & Vanna 写的

529
00:17:26,000 --> 00:17:29,000
就是 Github 的创始人

530
00:17:29,000 --> 00:17:32,000
前创始人以及前总裁

531
00:17:32,000 --> 00:17:32,000
对

532
00:17:34,000 --> 00:17:35,000
因为他写了

533
00:17:35,000 --> 00:17:36,000
所以就引起很多人的注意

534
00:17:36,000 --> 00:17:39,000
然后在程序员圈子里面就渐渐流畅开来

535
00:17:39,000 --> 00:17:42,000
然后几乎有一段时间是蔚然成风啊

536
00:17:42,000 --> 00:17:44,000
就好多好多人都换了

537
00:17:44,000 --> 00:17:46,000
然后一方面是因为这个

538
00:17:46,000 --> 00:17:51,000
另一方面是当时我想要把那个路外的站点

539
00:17:52,000 --> 00:17:53,000
程序捡起来写的时候

540
00:17:53,000 --> 00:17:56,000
发现路外已经改的有点弱

541
00:17:56,000 --> 00:17:58,000
当时我依赖的那个包

542
00:17:58,000 --> 00:18:01,000
因为他 0.2 还是那个版本

543
00:18:01,000 --> 00:18:04,000
然后在我当我捡起来的时候已经变成 0.8 了

544
00:18:04,000 --> 00:18:07,000
然后就中间已经变得面目全非

545
00:18:07,000 --> 00:18:11,000
我所有几乎用到的函数全都变了

546
00:18:11,000 --> 00:18:12,000
OK

547
00:18:12,000 --> 00:18:14,000
然后再捡起来写

548
00:18:14,000 --> 00:18:16,000
我觉得有点力不从心

549
00:18:16,000 --> 00:18:17,000
就想说哎呀

550
00:18:17,000 --> 00:18:18,000
干脆转吧

551
00:18:18,000 --> 00:18:21,000
反正我的所有文章都已经是纯文本

552
00:18:21,000 --> 00:18:22,000
就相当于一个

553
00:18:22,000 --> 00:18:24,000
半径开的这么一个状态在了

554
00:18:24,000 --> 00:18:28,000
所以所以差一个这里的教训是一定要做好版本管理

555
00:18:28,000 --> 00:18:29,000
对吧

556
00:18:30,000 --> 00:18:32,000
这版本管理没关系

557
00:18:32,000 --> 00:18:33,000
依赖管理

558
00:18:33,000 --> 00:18:34,000
dependency management

559
00:18:36,000 --> 00:18:39,000
这个是教训是路外要做好他的这个

560
00:18:39,000 --> 00:18:41,000
你自己也没有做好啊

561
00:18:41,000 --> 00:18:43,000
你做好这个不就没有这事了吗

562
00:18:43,000 --> 00:18:48,000
我觉得我的最大的失误就在于我没有及时跟进每个依赖库的开发进度

563
00:18:48,000 --> 00:18:51,000
因为我并不是什么路外痴迷者

564
00:18:51,000 --> 00:18:51,000
我是

565
00:18:52,000 --> 00:18:54,000
可以保持 polyglot 的尊严

566
00:18:54,000 --> 00:18:59,000
我不能一直去死追死追猛打一个一个原部犯法

567
00:18:59,000 --> 00:19:00,000
嗯

568
00:19:00,000 --> 00:19:00,000
对

569
00:19:00,000 --> 00:19:01,000
OK

570
00:19:01,000 --> 00:19:02,000
就是怎么说呢

571
00:19:02,000 --> 00:19:04,000
就是你如果一定要说有什么教训的话

572
00:19:04,000 --> 00:19:07,000
就是不要用太不成熟的技术

573
00:19:07,000 --> 00:19:10,000
尤其是在你想要做一个比较大的东西的时候

574
00:19:10,000 --> 00:19:10,000
嗯

575
00:19:10,000 --> 00:19:13,000
但是我也不是说我的 blog 系统有多大

576
00:19:13,000 --> 00:19:16,000
就是你想做一个比较长时间经营的东西

577
00:19:16,000 --> 00:19:17,000
对

578
00:19:17,000 --> 00:19:19,000
所谓 develop last 的东西的时候

579
00:19:19,000 --> 00:19:20,000
你不要用太新的技术

580
00:19:20,000 --> 00:19:21,000
不然好

581
00:19:21,000 --> 00:19:21,000
不是呢

582
00:19:21,000 --> 00:19:21,000
不然才有那么多机会了

583
00:19:21,000 --> 00:19:22,000
对不对

584
00:19:22,000 --> 00:19:22,000
不要用版本号

585
00:19:22,000 --> 00:19:23,000
还是零到几

586
00:19:23,000 --> 00:19:24,000
不然下降

587
00:19:24,000 --> 00:19:25,000
这就是为什么

588
00:19:25,000 --> 00:19:26,000
这就是为什么

589
00:19:26,000 --> 00:19:28,000
Java 可以活到现在的原因

590
00:19:28,000 --> 00:19:30,000
就是很多很多很多很多

591
00:19:30,000 --> 00:19:33,000
希望能够长时间运行的网站

592
00:19:33,000 --> 00:19:33,000
会选择 Java

593
00:19:33,000 --> 00:19:34,000
因为 Java

594
00:19:34,000 --> 00:19:35,000
它已经死了

595
00:19:35,000 --> 00:19:37,000
死的东西是不会变的

596
00:19:37,000 --> 00:19:40,000
人家不是马上要去什么

597
00:19:40,000 --> 00:19:42,000
1.7 还是 1.8 了吗

598
00:19:42,000 --> 00:19:42,000
1.8

599
00:19:42,000 --> 00:19:45,000
已经不是 1.8 了

600
00:19:45,000 --> 00:19:46,000
就现在从 Java

601
00:19:46,000 --> 00:19:47,000
你太过时了

602
00:19:47,000 --> 00:19:49,000
1.5 开始就直接叫 Java 5

603
00:19:49,000 --> 00:19:50,000
然后 6 7 8

604
00:19:50,000 --> 00:19:50,000
现在是 8

605
00:19:50,000 --> 00:19:53,000
它不打算开始到 2 点几了

606
00:19:53,000 --> 00:19:53,000
对吧

607
00:19:53,000 --> 00:19:55,000
对

608
00:19:55,000 --> 00:19:57,000
Java 8 里面有 generics

609
00:19:57,000 --> 00:19:58,000
对不起

610
00:19:58,000 --> 00:20:00,000
Java 8 里面有匿名函数

611
00:20:00,000 --> 00:20:00,000
Lambda

612
00:20:00,000 --> 00:20:02,000
too late

613
00:20:02,000 --> 00:20:04,000
太晚了

614
00:20:04,000 --> 00:20:05,000
太晚了

615
00:20:05,000 --> 00:20:05,000
OK

616
00:20:05,000 --> 00:20:08,000
所以在迁移过程中

617
00:20:08,000 --> 00:20:10,000
你觉得整个体验怎么样

618
00:20:10,000 --> 00:20:13,000
一开始挺好的

619
00:20:13,000 --> 00:20:16,000
就是刚刚转到 JCO 的时候挺好

620
00:20:16,000 --> 00:20:19,000
但是后来 JCO 升了几次级

621
00:20:19,000 --> 00:20:20,000
我记得有一次是

622
00:20:20,000 --> 00:20:24,000
从 1.8 几

623
00:20:24,000 --> 00:20:26,000
还是从 1.7 几

624
00:20:26,000 --> 00:20:29,000
依赖从 Ruby 1.7 几升到 1.8 几的时候

625
00:20:29,000 --> 00:20:33,000
不停地弹出一个 encoding 的错误

626
00:20:33,000 --> 00:20:34,000
我记得那个错误好像

627
00:20:34,000 --> 00:20:36,000
不止我一个人

628
00:20:36,000 --> 00:20:38,000
很多很多人都受到的影响

629
00:20:38,000 --> 00:20:40,000
但是持续的很懂

630
00:20:40,000 --> 00:20:41,000
但那是第一次不爽

631
00:20:41,000 --> 00:20:44,000
但是随之之后就很多很多次不爽

632
00:20:44,000 --> 00:20:48,000
但你现在还坚持在用的 JCO 在上面跑吗

633
00:20:48,000 --> 00:20:50,000
我主要是不怎么写字了

634
00:20:50,000 --> 00:20:54,000
上一次写好像 JCO 还给了我一些脸面子

635
00:20:54,000 --> 00:20:55,000
还是跑起来了

636
00:20:55,000 --> 00:20:56,000
所以暂时还没有换

637
00:20:56,000 --> 00:21:00,000
等一下你现在这个 setup 是怎么样子的

638
00:21:00,000 --> 00:21:02,000
是在本机跑同步过去

639
00:21:02,000 --> 00:21:03,000
还是在服务器上架了这个

640
00:21:03,000 --> 00:21:08,000
我是把 Repository 共享在 GitHub 上

641
00:21:08,000 --> 00:21:12,000
然后从远程一个 pool

642
00:21:12,000 --> 00:21:15,000
然后在远程 build 吧

643
00:21:15,000 --> 00:21:18,000
这个 build 是你自己服务器上 build 的

644
00:21:18,000 --> 00:21:19,000
还是那个 GitHub

645
00:21:19,000 --> 00:21:20,000
应该是在服务器上 build 的

646
00:21:20,000 --> 00:21:23,000
什么叫应该是

647
00:21:23,000 --> 00:21:24,000
已经不记得了

648
00:21:24,000 --> 00:21:26,000
对我已经很久没有写 blog 了

649
00:21:26,000 --> 00:21:30,000
我现在我之前 blog 总觉得再怎么样

650
00:21:30,000 --> 00:21:31,000
一个月一篇吧

651
00:21:31,000 --> 00:21:32,000
后来上次写是一年以前

652
00:21:32,000 --> 00:21:37,000
上一篇和上上篇的间隔是一年

653
00:21:37,000 --> 00:21:38,000
不过你比我好

654
00:21:38,000 --> 00:21:40,000
我的博客就写过几篇

655
00:21:40,000 --> 00:21:42,000
然后再也没碰过了

656
00:21:42,000 --> 00:21:46,000
对博客程序

657
00:21:46,000 --> 00:21:49,000
从最开始我是用什么

658
00:21:49,000 --> 00:21:49,000
JCO

659
00:21:50,000 --> 00:21:56,000
Blogger.cn

660
00:21:56,000 --> 00:21:57,000
还是

661
00:21:57,000 --> 00:21:58,000
Blogger 啊

662
00:21:58,000 --> 00:22:01,000
是 blogspot 对吧

663
00:22:01,000 --> 00:22:02,000
不是不是不是 blogspot

664
00:22:02,000 --> 00:22:03,000
那个时候还没有 blogspot

665
00:22:03,000 --> 00:22:05,000
2003 年的时候

666
00:22:05,000 --> 00:22:06,000
国内还是国外

667
00:22:06,000 --> 00:22:07,000
国内

668
00:22:07,000 --> 00:22:08,000
第一刚开始两年是在国外

669
00:22:08,000 --> 00:22:09,000
国内啊

670
00:22:09,000 --> 00:22:10,000
那个时候

671
00:22:10,000 --> 00:22:11,000
博客大坝

672
00:22:11,000 --> 00:22:12,000
用不是博客大坝

673
00:22:12,000 --> 00:22:16,000
博客大坝出来要晚多了

674
00:22:16,000 --> 00:22:17,000
我在榕树下写过东西

675
00:22:17,000 --> 00:22:19,000
哈哈哈

676
00:22:19,000 --> 00:22:20,000
对

677
00:22:20,000 --> 00:22:22,000
然后呃

678
00:22:22,000 --> 00:22:23,000
我一年啊

679
00:22:23,000 --> 00:22:24,000
这是太文艺了

680
00:22:24,000 --> 00:22:28,000
那个时候是后来转到一个呃

681
00:22:28,000 --> 00:22:34,000
后来自己出了国之后转到一个自己搭建的

682
00:22:34,000 --> 00:22:36,000
呃

683
00:22:36,000 --> 00:22:37,000
不对不对

684
00:22:37,000 --> 00:22:40,000
出国之前先有一阵子转到了都 news

685
00:22:40,000 --> 00:22:41,000
你知道都 news

686
00:22:41,000 --> 00:22:43,000
这个什么东西什么什么什么都 news

687
00:22:43,000 --> 00:22:45,000
d o n e w s

688
00:22:45,000 --> 00:22:47,000
以前那个 curso

689
00:22:47,000 --> 00:22:49,000
对对对 curso 在上面写的

690
00:22:49,000 --> 00:22:50,000
然后那个那个

691
00:22:50,000 --> 00:22:52,000
blog 程序是一个.net 写的

692
00:22:52,000 --> 00:22:53,000
嗯哼

693
00:22:53,000 --> 00:22:54,000
而且当时我很喜欢他

694
00:22:54,000 --> 00:22:56,000
哈哈哈

695
00:22:56,000 --> 00:23:00,000
后来从那转到了一个自己搭建的 worldpress 上

696
00:23:00,000 --> 00:23:02,000
然后第一次有了自己的域名

697
00:23:02,000 --> 00:23:04,000
叫做 by them by them finster

698
00:23:04,000 --> 00:23:05,000
by them finster

699
00:23:05,000 --> 00:23:06,000
就是在窗子旁边

700
00:23:06,000 --> 00:23:08,000
当时是我和一个曾经很好的朋友一起写

701
00:23:08,000 --> 00:23:09,000
嗯哼

702
00:23:09,000 --> 00:23:13,000
对然后后来呃我们两个分劳燕分飞之后

703
00:23:13,000 --> 00:23:19,000
分别单飞之后呃我搬到了另外一个就是现在的域是 meta

704
00:23:19,000 --> 00:23:20,000
一开始是 meta force

705
00:23:20,000 --> 00:23:21,000
就是 metafox.name

706
00:23:21,000 --> 00:23:24,000
因为.name 是所呃 supposed to be

707
00:23:24,000 --> 00:23:27,000
personal 的对 personalwebsite

708
00:23:27,000 --> 00:23:29,000
但我发现没有人鸟他

709
00:23:29,000 --> 00:23:34,000
基本上稍微有一点呃稍微有点钱的人都会去买.com

710
00:23:34,000 --> 00:23:35,000
.com 便宜啊

711
00:23:35,000 --> 00:23:37,000
他们 10 块钱一年

712
00:23:37,000 --> 00:23:39,000
对我现在就是 metafox.com

713
00:23:39,000 --> 00:23:42,000
你竟然注册到了你当初干嘛去了

714
00:23:42,000 --> 00:23:47,000
不我在我注册到 metafox.name 的

715
00:23:47,000 --> 00:23:50,000
三五年时间之内.com 其实一直都在

716
00:23:50,000 --> 00:23:51,000
但是我就是没有注册

717
00:23:51,000 --> 00:23:51,000
啊

718
00:23:51,000 --> 00:23:53,000
哎他一直在等我

719
00:23:53,000 --> 00:23:56,000
我主对我只能这么理解他一直在等我

720
00:23:56,000 --> 00:24:02,000
然后我前两天上之后发现自己 2001 年的时候写的答案留了当时网址

721
00:24:02,000 --> 00:24:03,000
metafox.name

722
00:24:03,000 --> 00:24:06,000
还被人翻出来说

723
00:24:06,000 --> 00:24:08,000
呃链接差评

724
00:24:08,000 --> 00:24:09,000
因为断了

725
00:24:09,000 --> 00:24:11,000
你没有续费了吗

726
00:24:11,000 --> 00:24:16,000
name.name 一明没有再续费了就没有意义啊说实话没有人会记得

727
00:24:16,000 --> 00:24:18,000
这样不好啊

728
00:24:18,000 --> 00:24:20,000
不我记我觉得有一句谚语说什么你

729
00:24:20,000 --> 00:24:22,000
你把东西传上网他就会永远不会消失

730
00:24:22,000 --> 00:24:23,000
这句话是错的

731
00:24:23,000 --> 00:24:26,000
我觉得太多他的东西都已经永远找到了

732
00:24:26,000 --> 00:24:29,000
对啊不还好有个那个什么

733
00:24:29,000 --> 00:24:31,000
internet archive

734
00:24:31,000 --> 00:24:33,000
可以帮你救回

735
00:24:33,000 --> 00:24:35,000
the so called internet time machine

736
00:24:35,000 --> 00:24:37,000
对那可以帮你救回来

737
00:24:37,000 --> 00:24:40,000
也得到从哪里去有点远了

738
00:24:40,000 --> 00:24:41,000
说回这个

739
00:24:41,000 --> 00:24:42,000
静态

740
00:24:42,000 --> 00:24:44,000
静态网站

741
00:24:44,000 --> 00:24:45,000
我在推特上 follow 了一个人

742
00:24:45,000 --> 00:24:47,000
他的名字叫做 horsemans

743
00:24:47,000 --> 00:24:48,000
就是

744
00:24:48,000 --> 00:24:50,000
horsema

745
00:24:50,000 --> 00:24:51,000
然后 mans

746
00:24:51,000 --> 00:24:54,000
不是 man 而是 mans 就是 mans

747
00:24:54,000 --> 00:24:56,000
我不知道这是复数还是故意恶搞

748
00:24:56,000 --> 00:25:01,000
总之他是一个非常有趣的人他的很多的他的很多推都

749
00:25:01,000 --> 00:25:06,000
非常恶搞你得看一阵子才明白他在讲什么但是看懂了之后就会哈哈大笑

750
00:25:06,000 --> 00:25:09,000
这个 horsemans 他在

751
00:25:09,000 --> 00:25:16,000
大概两周之前就是你们听到这一期 podcast 两周之前他发过这么一条推说

752
00:25:16,000 --> 00:25:18,000
it takes one git repository

753
00:25:18,000 --> 00:25:20,000
to submit

754
00:25:20,000 --> 00:25:20,000
modules

755
00:25:20,000 --> 00:25:22,000
one virtual environment

756
00:25:22,000 --> 00:25:25,000
five direct python dependencies

757
00:25:25,000 --> 00:25:27,000
one node virtual

758
00:25:27,000 --> 00:25:28,000
no this is

759
00:25:28,000 --> 00:25:29,000
nvm 是什么

760
00:25:29,000 --> 00:25:31,000
node virtual

761
00:25:31,000 --> 00:25:32,000
machine

762
00:25:32,000 --> 00:25:34,000
好像就切换 node 版本的好像是

763
00:25:34,000 --> 00:25:35,000
对 anyway

764
00:25:35,000 --> 00:25:37,000
one nvm environment

765
00:25:37,000 --> 00:25:39,000
and one node package

766
00:25:39,000 --> 00:25:41,000
to build my blog

767
00:25:41,000 --> 00:25:41,000
and oh

768
00:25:41,000 --> 00:25:45,000
oh and five and four emacs packages

769
00:25:45,000 --> 00:25:46,000
悲惨的 emacs

770
00:25:46,000 --> 00:25:47,000
我相信

771
00:25:47,000 --> 00:25:48,000
他说的是 JECO 吗

772
00:25:48,000 --> 00:25:50,000
我觉得他应该是我

773
00:25:50,000 --> 00:25:54,000
他说的是这个就是他他如果然后去看了他的 blog

774
00:25:54,000 --> 00:26:01,000
他的 blog 是很短然后最新一篇贴子好像是在讲这个 emacs 的

775
00:26:01,000 --> 00:26:06,000
某个 package 他可以在直接的 emacs 里面写 blog 然后

776
00:26:06,000 --> 00:26:09,000
一键就可以把 blog 部署啊什么的

777
00:26:09,000 --> 00:26:14,000
这这似乎是所有程序员的通病啊花了

778
00:26:14,000 --> 00:26:16,000
72 个小时

779
00:26:16,000 --> 00:26:19,000
连续不断的去琢磨出了最佳的写博客然后

780
00:26:19,000 --> 00:26:23,000
然后完成这个 publish 的整个这个 workflow

781
00:26:23,000 --> 00:26:26,000
然后从此再也不写了

782
00:26:26,000 --> 00:26:27,000
对然后写一个 hello world

783
00:26:27,000 --> 00:26:30,000
I will write my blog

784
00:26:30,000 --> 00:26:32,000
that's it

785
00:26:32,000 --> 00:26:35,000
and that's it

786
00:26:35,000 --> 00:26:37,000
所以你也是这样吗

787
00:26:37,000 --> 00:26:38,000
你转换成 JECO

788
00:26:38,000 --> 00:26:39,000
我不是这样的

789
00:26:39,000 --> 00:26:40,000
还写了几篇是吧

790
00:26:40,000 --> 00:26:44,000
我的 blog 还是有从

791
00:26:44,000 --> 00:26:46,000
可能最早的一篇是 2005 年到现在

792
00:26:46,000 --> 00:26:47,000
不过他

793
00:26:47,000 --> 00:26:48,000
积攒了一些

794
00:26:48,000 --> 00:26:49,000
不过他那个说了也反

795
00:26:49,000 --> 00:26:51,000
反映了一个问题啊

796
00:26:51,000 --> 00:26:53,000
就是现在的

797
00:26:53,000 --> 00:26:54,000
很多这种

798
00:26:54,000 --> 00:26:57,000
非常 hippie 的这种软件的

799
00:26:57,000 --> 00:26:59,000
依赖真是太多了

800
00:26:59,000 --> 00:27:00,000
让我想起了

801
00:27:00,000 --> 00:27:04,000
曾经的所谓 windows 下面的 dll 地域

802
00:27:04,000 --> 00:27:09,000
就是一个新的软件可能要依赖其他几个 dll

803
00:27:09,000 --> 00:27:11,000
这些 dll 又要依赖更多的 dll

804
00:27:11,000 --> 00:27:13,000
然后所有 dll 的版本

805
00:27:13,000 --> 00:27:16,000
都有区别

806
00:27:16,000 --> 00:27:19,000
对然后就会有产生类似的状况

807
00:27:19,000 --> 00:27:22,000
对其实这个 Ruby 我自己并不会

808
00:27:22,000 --> 00:27:25,000
然后我不知道他的那个包管理系统怎么样

809
00:27:25,000 --> 00:27:26,000
但是我看听

810
00:27:26,000 --> 00:27:27,000
太谦虚了

811
00:27:27,000 --> 00:27:28,000
你所谓的不会就是

812
00:27:28,000 --> 00:27:31,000
没有用他写过大型程序的意思

813
00:27:31,000 --> 00:27:33,000
我还真没有用他写过任何东西

814
00:27:33,000 --> 00:27:35,000
对这就是所谓不会是吧

815
00:27:35,000 --> 00:27:36,000
但是你

816
00:27:36,000 --> 00:27:37,000
你

817
00:27:37,000 --> 00:27:37,000
你

818
00:27:37,000 --> 00:27:39,000
读起 Ruby 来感觉比我快

819
00:27:39,000 --> 00:27:40,000
我敢相信

820
00:27:40,000 --> 00:27:41,000
那个语法很接近嘛

821
00:27:41,000 --> 00:27:44,000
也没什么特别难懂的地方啊

822
00:27:44,000 --> 00:27:46,000
所以还是懂的

823
00:27:46,000 --> 00:27:47,000
这个什么出了一旁通了

824
00:27:47,000 --> 00:27:49,000
我觉得稍微编过一段时间

825
00:27:49,000 --> 00:27:51,000
都能达到这个效果

826
00:27:51,000 --> 00:27:52,000
anyway 车员

827
00:27:52,000 --> 00:27:54,000
我想问的一点就是

828
00:27:54,000 --> 00:27:57,000
Ruby 的包管理系统我感觉还可以啊

829
00:27:57,000 --> 00:28:00,000
但那个 GEM 系统

830
00:28:00,000 --> 00:28:04,000
其实算是所有的包管理系统里面

831
00:28:04,000 --> 00:28:05,000
就是

832
00:28:05,000 --> 00:28:08,000
最好的机构之一了吧

833
00:28:08,000 --> 00:28:09,000
对我觉得

834
00:28:09,000 --> 00:28:13,000
我觉得目前看就是在 scripting languages 里面

835
00:28:13,000 --> 00:28:18,000
GEM 不错然后那个就是 NPM Node 那个我觉得还挺好的

836
00:28:18,000 --> 00:28:19,000
对然后

837
00:28:19,000 --> 00:28:21,000
B 人最开始

838
00:28:21,000 --> 00:28:25,000
之前最喜欢的脚本语言 Python 的包管理系统就是

839
00:28:25,000 --> 00:28:27,000
Python

840
00:28:27,000 --> 00:28:29,000
算了不伤感情

841
00:28:29,000 --> 00:28:32,000
不刺激大家了

842
00:28:32,000 --> 00:28:33,000
接着说这个事情

843
00:28:33,000 --> 00:28:38,000
就为什么会需要这么多东西

844
00:28:38,000 --> 00:28:41,000
我觉得设计哲学就是

845
00:28:41,000 --> 00:28:45,000
Battery not included

846
00:28:45,000 --> 00:28:47,000
自备电池要

847
00:28:47,000 --> 00:28:49,000
对你得自备电池

848
00:28:49,000 --> 00:28:56,000
或者说他试图把中心的核心的功能做的尽量的

849
00:28:56,000 --> 00:28:57,000
简短

850
00:28:57,000 --> 00:29:01,000
导致他有非常多的外部依赖

851
00:29:01,000 --> 00:29:05,000
但是这样对使用和配置的话

852
00:29:05,000 --> 00:29:08,000
其实还是蛮大影响的我觉得

853
00:29:08,000 --> 00:29:10,000
对就是

854
00:29:10,000 --> 00:29:11,000
我觉得现在的 Devops

855
00:29:11,000 --> 00:29:14,000
越来越流行

856
00:29:14,000 --> 00:29:18,000
当然 Devops 我们可能也会专门找一期来讲就是

857
00:29:18,000 --> 00:29:19,000
就一分钟的

858
00:29:19,000 --> 00:29:25,000
一方面原因也是现在的软件部署的确是越来越多的

859
00:29:25,000 --> 00:29:28,000
牵扯到了开发人员的 know-how

860
00:29:28,000 --> 00:29:29,000
或者说你要

861
00:29:29,000 --> 00:29:31,000
想要开发一个东西

862
00:29:31,000 --> 00:29:34,000
你必须先要弄明白这个东西会怎样部署

863
00:29:34,000 --> 00:29:35,000
也就

864
00:29:35,000 --> 00:29:39,000
从一个侧面推进了 Devops 这个

865
00:29:39,000 --> 00:29:41,000
交叉行业的

866
00:29:41,000 --> 00:29:42,000
涌现吧

867
00:29:42,000 --> 00:29:45,000
我觉得本来就是应该是立体的为什么要很

868
00:29:45,000 --> 00:29:47,000
以前很残忍的分成

869
00:29:47,000 --> 00:29:49,000
Dev 和 Op 这两个工种呢?

870
00:29:49,000 --> 00:29:51,000
就是很奇怪的一件事情

871
00:29:51,000 --> 00:29:53,000
我觉得是出于正交

872
00:29:53,000 --> 00:29:54,000
就是职能正交的考量

873
00:29:54,000 --> 00:29:59,000
因为你不能期待一个程序员每天写完程序还要去

874
00:29:59,000 --> 00:30:01,000
页里面 uncall 随便

875
00:30:01,000 --> 00:30:04,000
随时静待着服务器要是出了问题

876
00:30:04,000 --> 00:30:07,000
还要爬起来去解服务器的问题

877
00:30:07,000 --> 00:30:09,000
而且人的精力毕竟是有限的

878
00:30:09,000 --> 00:30:13,000
我觉得就是 Devops 的工作在

879
00:30:13,000 --> 00:30:16,000
在你我看来好像没有那么复杂

880
00:30:16,000 --> 00:30:18,000
但其实很多人

881
00:30:18,000 --> 00:30:19,000
呃

882
00:30:19,000 --> 00:30:21,000
对于开发没有什么经验

883
00:30:21,000 --> 00:30:23,000
但是对于配置服务器都很在行

884
00:30:23,000 --> 00:30:26,000
而反过来也有一样有很多很多人

885
00:30:26,000 --> 00:30:29,000
好吧这个事情留到下次

886
00:30:29,000 --> 00:30:31,000
专门讲这个事情再吐槽了

887
00:30:31,000 --> 00:30:36,000
但是就但是这么多包的话

888
00:30:36,000 --> 00:30:40,000
你如果装在服务器上要遇到升级的话你怎么办

889
00:30:40,000 --> 00:30:42,000
比如上次你自己就遇到这个问题

890
00:30:42,000 --> 00:30:45,000
自己写的都会有这个问题

891
00:30:45,000 --> 00:30:47,000
然后你如果依赖别人的

892
00:30:47,000 --> 00:30:49,000
我觉得如果一个比较大的

893
00:30:49,000 --> 00:30:54,000
Ruby 网站真的要面临依赖包升级的话

894
00:30:54,000 --> 00:30:55,000
可能是一个比较浩大的工程

895
00:30:55,000 --> 00:30:56,000
我的网站无所谓

896
00:30:56,000 --> 00:31:01,000
反正没有什么人看就直接把 Nginx 停了就好了

897
00:31:01,000 --> 00:31:02,000
Nginx 不用停

898
00:31:02,000 --> 00:31:05,000
看见看见屎就看见屎呗

899
00:31:05,000 --> 00:31:07,000
但是对于一个相对大的工程来说

900
00:31:07,000 --> 00:31:09,000
这可能是个比较大的问题

901
00:31:09,000 --> 00:31:10,000
OK

902
00:31:10,000 --> 00:31:11,000
嗯

903
00:31:11,000 --> 00:31:12,000
呃

904
00:31:12,000 --> 00:31:15,000
说到这个静态网站升级

905
00:31:15,000 --> 00:31:18,000
其实我之前也在尝试嘛

906
00:31:18,000 --> 00:31:19,000
然后试了几次嘛

907
00:31:19,000 --> 00:31:21,000
我之前也有一个这个借口

908
00:31:21,000 --> 00:31:27,000
大家可能不知道我还在维护那个 apple 4 us.com 那个网站

909
00:31:27,000 --> 00:31:28,000
有人不知道吗

910
00:31:28,000 --> 00:31:29,000
我不确定啊

911
00:31:29,000 --> 00:31:32,000
所以先声明一下

912
00:31:32,000 --> 00:31:39,000
我们 Rail 同学是 apple 4 us.com 的首席技术官

913
00:31:39,000 --> 00:31:42,000
然后我觉得上次上次 Lawrence 说什么

914
00:31:42,000 --> 00:31:47,000
Lawrence 在 IPD 工里面说我是 Type is Beautiful 的 CTO

915
00:31:47,000 --> 00:31:49,000
我听了差点儿把水噴出来

916
00:31:49,000 --> 00:31:50,000
哈哈哈

917
00:31:50,000 --> 00:31:52,000
我不说

918
00:31:52,000 --> 00:31:53,000
算吧

919
00:31:53,000 --> 00:31:54,000
不算因为

920
00:31:54,000 --> 00:31:56,000
即便算也不能算

921
00:31:56,000 --> 00:31:57,000
因为呃

922
00:31:57,000 --> 00:31:58,000
什么叫即便算也不能算

923
00:31:58,000 --> 00:31:59,000
到底是算还是不算

924
00:31:59,000 --> 00:32:03,000
即便真的是 CTO 也不能拿 CTO 这个头显

925
00:32:03,000 --> 00:32:04,000
因为呃

926
00:32:04,000 --> 00:32:07,000
Type is Beautiful 更像一个协作社群

927
00:32:07,000 --> 00:32:10,000
社群是非常

928
00:32:10,000 --> 00:32:13,000
对但社群的存在其实是非常

929
00:32:13,000 --> 00:32:18,000
不是说非常但是在形式上是要排斥这种公司式的

930
00:32:18,000 --> 00:32:19,000
嗯

931
00:32:19,000 --> 00:32:20,000
就是物分配和管理的

932
00:32:20,000 --> 00:32:21,000
对对对

933
00:32:21,000 --> 00:32:22,000
那这是开玩笑的

934
00:32:22,000 --> 00:32:23,000
不用太当情

935
00:32:23,000 --> 00:32:26,000
我知道但对我这次来回赠一款帽子

936
00:32:26,000 --> 00:32:28,000
哈哈哈

937
00:32:28,000 --> 00:32:34,000
对然后那个那个站点其实最开始的时候是跑在一个叫做

938
00:32:34,000 --> 00:32:35,000
我不知道你还记不记得啊

939
00:32:35,000 --> 00:32:37,000
Moveable Type

940
00:32:37,000 --> 00:32:38,000
我当然记得了

941
00:32:38,000 --> 00:32:42,000
我还记得是一个 Pearl 鞋的静态网站生存器

942
00:32:42,000 --> 00:32:44,000
对我还记得

943
00:32:44,000 --> 00:32:45,000
呃

944
00:32:45,000 --> 00:32:48,000
张亮还是谁曾经说过你们的贵网站的这个 Theme 是什么

945
00:32:48,000 --> 00:32:52,000
那个 Theme 创作是多么多么的复杂或者

946
00:32:52,000 --> 00:32:56,000
反正这么一段描述你们一苦思甜的这么一段文字

947
00:32:56,000 --> 00:32:57,000
我还记得

948
00:32:57,000 --> 00:33:01,000
对然后那个大概是 2010 年还是 2011 年的时候吧

949
00:33:01,000 --> 00:33:02,000
然后当时

950
00:33:02,000 --> 00:33:07,000
那是我刚刚就去就加入这个这个这个地下组织

951
00:33:07,000 --> 00:33:08,000
然后

952
00:33:08,000 --> 00:33:12,000
然后他们就说哎要不我们想想这个 Mobile Type 是救火了

953
00:33:12,000 --> 00:33:16,000
然后 Pearl 又是一个没人爱的孩子对吧

954
00:33:16,000 --> 00:33:16,000
呃

955
00:33:16,000 --> 00:33:17,000
对 Pearl 的销城其实也可以是一个很好的一个文字吧

956
00:33:17,000 --> 00:33:19,000
所以我这个销城其实也可以

957
00:33:19,000 --> 00:33:21,000
专门找一期节目来做

958
00:33:21,000 --> 00:33:24,000
说实话我对 Pearl 这个语言还挺有感情的

959
00:33:24,000 --> 00:33:24,000
天啊

960
00:33:24,000 --> 00:33:25,000
好吧

961
00:33:25,000 --> 00:33:28,000
留待留待下次

962
00:33:28,000 --> 00:33:29,000
这次我们专讲这一期

963
00:33:29,000 --> 00:33:32,000
是不是随时逐渐做节目你发现我是一个有点变态的家伙

964
00:33:32,000 --> 00:33:35,000
没有没有这个什么萝卜青菜各有所爱这个没什么

965
00:33:35,000 --> 00:33:36,000
OK

966
00:33:36,000 --> 00:33:37,000
啊

967
00:33:37,000 --> 00:33:39,000
然后就把它

968
00:33:39,000 --> 00:33:40,000
这当时也是隋大流嘛

969
00:33:40,000 --> 00:33:42,000
跟你现在转接口情况实际上是一样

970
00:33:42,000 --> 00:33:45,000
当时就是我们要做一个动态程序

971
00:33:45,000 --> 00:33:47,000
然后就改成了那个 WordPress

972
00:33:47,000 --> 00:33:49,000
改成二点几吧

973
00:33:49,000 --> 00:33:57,000
我还记得爬上你们的站点去写一个把所有的帖子导出来的工具

974
00:33:57,000 --> 00:34:00,000
什么时候的时候

975
00:34:00,000 --> 00:34:01,000
很多年前啊

976
00:34:01,000 --> 00:34:02,000
考古这件事

977
00:34:02,000 --> 00:34:04,000
然后

978
00:34:04,000 --> 00:34:06,000
就是很多年以后发现

979
00:34:06,000 --> 00:34:07,000
诶这个 WordPress

980
00:34:07,000 --> 00:34:13,000
WordPress 有很多插件的经常升级的时候这样说不能用然后就导致根本就不敢点那个升级

981
00:34:13,000 --> 00:34:17,000
然后也其实说我去在那里维护其实也就是

982
00:34:17,000 --> 00:34:19,000
搬掉了让那个网站来能用

983
00:34:19,000 --> 00:34:20,000
不要挂掉就好了

984
00:34:20,000 --> 00:34:21,000
其实也没怎么挂掉

985
00:34:21,000 --> 00:34:22,000
不要挂掉不要被注入

986
00:34:22,000 --> 00:34:23,000
对

987
00:34:23,000 --> 00:34:24,000
其实也没怎么注入

988
00:34:24,000 --> 00:34:26,000
有没有被注入我都不知道

989
00:34:26,000 --> 00:34:28,000
Type is beautiful 曾经被注入过

990
00:34:28,000 --> 00:34:29,000
挺惨的

991
00:34:29,000 --> 00:34:33,000
几乎每一个 PHP 文件都遭到了那个

992
00:34:33,000 --> 00:34:34,000
一段病毒的沾染

993
00:34:34,000 --> 00:34:40,000
看然后不得不让 Rex 上 SSH 去一点点删掉

994
00:34:40,000 --> 00:34:42,000
天哪你这样为难 Rex 那好吗

995
00:34:42,000 --> 00:34:44,000
我不在电脑前

996
00:34:44,000 --> 00:34:45,000
好吧

997
00:34:45,000 --> 00:34:46,000
然后就

998
00:34:46,000 --> 00:34:50,000
就变成一个所谓年久失修的一个网站嘛

999
00:34:50,000 --> 00:34:52,000
然后就也没有办法去改

1000
00:34:52,000 --> 00:34:54,000
然后 PHP 也不想去碰了

1001
00:34:54,000 --> 00:34:55,000
PHP 是一个

1002
00:34:55,000 --> 00:34:56,000
超丑的东西要

1003
00:34:56,000 --> 00:34:58,000
专门吐槽一期这个哈

1004
00:34:58,000 --> 00:35:00,000
对是 Pain in ass

1005
00:35:00,000 --> 00:35:01,000
对然后终于

1006
00:35:01,000 --> 00:35:03,000
若原有 Pain in ass 指数的话

1007
00:35:03,000 --> 00:35:04,000
PHP 绝对是

1008
00:35:04,000 --> 00:35:05,000
爆表了

1009
00:35:05,000 --> 00:35:07,000
超过 10

1010
00:35:07,000 --> 00:35:08,000
好

1011
00:35:08,000 --> 00:35:10,000
然后终于在

1012
00:35:10,000 --> 00:35:11,000
上个月吧

1013
00:35:11,000 --> 00:35:13,000
不对应该是前

1014
00:35:13,000 --> 00:35:13,000
前

1015
00:35:13,000 --> 00:35:15,000
前周还是上周我忘了

1016
00:35:15,000 --> 00:35:16,000
我终于下定决心了

1017
00:35:16,000 --> 00:35:17,000
已经把他

1018
00:35:17,000 --> 00:35:18,000
整个导出来

1019
00:35:18,000 --> 00:35:20,000
做成一个静态博客

1020
00:35:20,000 --> 00:35:22,000
静态站点 mostrar

1021
00:35:22,000 --> 00:35:23,000
我这样好主要

1022
00:35:23,000 --> 00:35:24,000
可以为 .

1023
00:35:24,000 --> 00:35:25,000
你看

1024
00:35:25,000 --> 00:35:27,000
所以其实出

1025
00:35:27,000 --> 00:35:27,000
点很奇怪就是

1026
00:35:27,000 --> 00:35:27,000
就是为了 BA

1027
00:35:27,000 --> 00:35:28,000
微 Lam

1028
00:35:28,000 --> 00:35:28,000
微雷

1029
00:35:28,000 --> 00:35:29,000
先再跟我说

1030
00:35:29,000 --> 00:35:30,000
其实很真

1031
00:35:30,000 --> 00:35:31,000
常 indemили America

1032
00:35:31,000 --> 00:35:32,000
就是那么

1033
00:35:32,000 --> 00:35:33,000
Kazakh

1034
00:35:33,000 --> 00:35:34,000
这就是道理

1035
00:35:34,000 --> 00:35:34,000
很好

1036
00:35:34,000 --> 00:35:36,000
然后现在 sandbox

1037
00:35:36,000 --> 00:35:37,000
好像这个

1038
00:35:37,000 --> 00:35:37,000
淡波

1039
00:35:37,000 --> 00:35:38,000
for small

1040
00:35:38,000 --> 00:35:39,000
暗非常是已经

1041
00:35:39,000 --> 00:35:41,000
所有一个

1042
00:35:41,000 --> 00:35:41,000
CR

1043
00:35:41,000 --> 00:35:42,000
就是

1044
00:35:42,000 --> 00:35:42,000
再开始

1045
00:35:42,000 --> 00:35:43,000
朝 hh

1046
00:35:43,000 --> 00:35:43,000
人吗

1047
00:35:43,000 --> 00:35:44,000
生产的网战

1048
00:35:44,000 --> 00:35:45,000
他再也不是跑在

1049
00:35:45,000 --> 00:35:45,000
位 i

1050
00:35:45,000 --> 00:35:45,000
充

1051
00:35:45,000 --> 00:35:46,000
人

1052
00:35:46,000 --> 00:35:46,000
俱

1053
00:35:46,000 --> 00:35:46,000
cooperate

1054
00:35:46,000 --> 00:35:46,000
等

1055
00:35:46,000 --> 00:35:49,000
然后随之而得好处就是我可以把

1056
00:35:49,000 --> 00:35:50,000
呃

1057
00:35:50,000 --> 00:35:51,000
MySQL 也干掉了

1058
00:35:51,000 --> 00:35:52,000
不用维护 MySQL 了

1059
00:35:52,000 --> 00:35:54,000
又少了一个东西可以管它

1060
00:35:54,000 --> 00:35:55,000
你看作用

1061
00:35:55,000 --> 00:35:56,000
而且没有安全隐患

1062
00:35:56,000 --> 00:35:57,000
呃

1063
00:35:57,000 --> 00:35:58,000
不再有什么安全隐患

1064
00:35:58,000 --> 00:36:00,000
主要只要 EngineX 不出问题

1065
00:36:00,000 --> 00:36:01,000
然后 SSH 不出问题

1066
00:36:01,000 --> 00:36:03,000
我这个站点应该没有什么可以出问题的地方

1067
00:36:04,000 --> 00:36:05,000
对啊

1068
00:36:05,000 --> 00:36:07,000
然后然后顺便改了一下那个模码样式

1069
00:36:07,000 --> 00:36:09,000
然后之前那个也已经太有点古老了

1070
00:36:10,000 --> 00:36:11,000
嗯啊

1071
00:36:11,000 --> 00:36:12,000
对

1072
00:36:12,000 --> 00:36:15,000
所以你是曾经用过这口来生成 AppleForce

1073
00:36:15,000 --> 00:36:16,000
还是说

1074
00:36:16,000 --> 00:36:17,000
对啊

1075
00:36:17,000 --> 00:36:19,000
我理解为你曾经使用这口

1076
00:36:19,000 --> 00:36:20,000
这个这个

1077
00:36:20,000 --> 00:36:22,000
现在这个 AppleForce 不是用 Jaco 生成

1078
00:36:22,000 --> 00:36:23,000
待会是用另外款工具生成

1079
00:36:23,000 --> 00:36:24,000
待会会讲

1080
00:36:24,000 --> 00:36:25,000
但是就最开始的时候

1081
00:36:25,000 --> 00:36:27,000
想做这件事情其实已经想了很久了

1082
00:36:27,000 --> 00:36:31,000
那第一次尝试把他这个 wordpress 改成静态的

1083
00:36:31,000 --> 00:36:32,000
就是用 Jaco

1084
00:36:32,000 --> 00:36:33,000
然后是在

1085
00:36:33,000 --> 00:36:34,000
13 年吧

1086
00:36:34,000 --> 00:36:36,000
去年的上半年应该是

1087
00:36:36,000 --> 00:36:37,000
嗯哼

1088
00:36:37,000 --> 00:36:38,000
然后发现一个很严重的问题

1089
00:36:38,000 --> 00:36:43,000
AppleForce 上面就是一共历史有从 07 年开始发的帖吧

1090
00:36:43,000 --> 00:36:45,000
我看了一下到现在为止

1091
00:36:45,000 --> 00:36:49,000
有差不多 2500 多篇这个帖子

1092
00:36:49,000 --> 00:36:50,000
嗯哼

1093
00:36:50,000 --> 00:36:51,000
你猜一下用 Jaco 生成

1094
00:36:51,000 --> 00:36:53,000
就用 Jaco 的

1095
00:36:53,000 --> 00:36:54,000
就 plugin free

1096
00:36:54,000 --> 00:36:58,000
就是什么插件都不装的情况下生成一遍这个网站要多长时间

1097
00:36:59,000 --> 00:37:03,000
嗯你的生成是指你已经把 mysql 里面的资料

1098
00:37:03,000 --> 00:37:04,000
对对对

1099
00:37:04,000 --> 00:37:07,000
就是就 build 一遍需要多长时间

1100
00:37:08,000 --> 00:37:10,000
啊五分钟

1101
00:37:10,000 --> 00:37:11,000
差不多

1102
00:37:11,000 --> 00:37:14,000
在我的 2.6 Ghz

1103
00:37:15,000 --> 00:37:20,000
core i 7 上就是它可以就是就是如果是单核

1104
00:37:20,000 --> 00:37:21,000
你是在本地 build

1105
00:37:21,000 --> 00:37:23,000
对就在本地测试嘛

1106
00:37:23,000 --> 00:37:25,000
本地 build 就是它可以好像 3.2 G 吧

1107
00:37:25,000 --> 00:37:27,000
这个赫兹的 i 7 上

1108
00:37:27,000 --> 00:37:29,000
我 build 一遍这个帖子需要三分钟

1109
00:37:29,000 --> 00:37:31,000
一分钟还是三分钟

1110
00:37:31,000 --> 00:37:32,000
三分钟好像是

1111
00:37:32,000 --> 00:37:35,000
嗯真的相当长了

1112
00:37:35,000 --> 00:37:36,000
我想想这简

1113
00:37:36,000 --> 00:37:37,000
这完全不能够忍啊

1114
00:37:37,000 --> 00:37:40,000
这个就好像那个 XCD 漫画一样

1115
00:37:40,000 --> 00:37:43,000
两个人在踩在椅子上拼剑

1116
00:37:43,000 --> 00:37:44,000
然后有人说 go back to work

1117
00:37:44,000 --> 00:37:46,000
然后其中一个人说 compiling

1118
00:37:46,000 --> 00:37:47,000
对对对

1119
00:37:47,000 --> 00:37:48,000
对你听

1120
00:37:48,000 --> 00:37:49,000
oh go on

1121
00:37:49,000 --> 00:37:56,000
就你完全完全不能够完全不能够想象在你生成一个静态站点需要这么久吗

1122
00:37:56,000 --> 00:37:58,000
然后觉得这个事情完全不能忍了

1123
00:37:58,000 --> 00:38:00,000
后来就去看了一下

1124
00:38:00,000 --> 00:38:01,000
一搜

1125
00:38:01,000 --> 00:38:03,000
发现这不是我一个人的问题

1126
00:38:03,000 --> 00:38:05,000
就很多人都有都有这个抱怨

1127
00:38:05,000 --> 00:38:07,000
然后追根溯源

1128
00:38:07,000 --> 00:38:08,000
无非就是两点嘛

1129
00:38:08,000 --> 00:38:10,000
一个是 Ruby 这个语言

1130
00:38:10,000 --> 00:38:12,000
应该是本身太慢了

1131
00:38:12,000 --> 00:38:14,000
呃不就这个他的这个语言

1132
00:38:14,000 --> 00:38:15,000
这个官方实现太慢了

1133
00:38:15,000 --> 00:38:16,000
当然肯定有快的那 JRuby

1134
00:38:16,000 --> 00:38:18,000
但没每次试过这么奇异的组合

1135
00:38:18,000 --> 00:38:19,000
JRuby 比 CRuby 快吗

1136
00:38:19,000 --> 00:38:20,000
不可能吗

1137
00:38:20,000 --> 00:38:22,000
我猜应该是吧

1138
00:38:22,000 --> 00:38:23,000
后来我不知道

1139
00:38:23,000 --> 00:38:24,000
我没试过

1140
00:38:24,000 --> 00:38:26,000
JRuby 比 CRuby 快

1141
00:38:26,000 --> 00:38:27,000
我不相信

1142
00:38:27,000 --> 00:38:28,000
好吧我我没试过

1143
00:38:28,000 --> 00:38:29,000
我只是在想啊

1144
00:38:29,000 --> 00:38:30,000
就是这个哎不对

1145
00:38:30,000 --> 00:38:32,000
那个官方的 Ruby 应该是什么 mRuby

1146
00:38:32,000 --> 00:38:33,000
mRi 嘛

1147
00:38:33,000 --> 00:38:34,000
对 mRi

1148
00:38:34,000 --> 00:38:35,000
对然后

1149
00:38:35,000 --> 00:38:37,000
对我也没试过各种奇异组合

1150
00:38:37,000 --> 00:38:40,000
我就用那个 mac os 10 自带那个 Ruby

1151
00:38:40,000 --> 00:38:41,000
然后去跑一下

1152
00:38:41,000 --> 00:38:42,000
然后我往上搜一下

1153
00:38:42,000 --> 00:38:43,000
发现这个是通病嘛

1154
00:38:43,000 --> 00:38:47,000
我现在这个是肯定就是我自己是一己之力是没得救了

1155
00:38:47,000 --> 00:38:48,000
就想想算了

1156
00:38:48,000 --> 00:38:52,000
啊后来我就想那要不自己写一个吧

1157
00:38:52,000 --> 00:38:53,000
就没有这么麻烦

1158
00:38:53,000 --> 00:38:56,000
然后当时就用 Python 写了一个

1159
00:38:56,000 --> 00:39:00,000
我觉得这个应该所有程序员应该是必经之路吧

1160
00:39:00,000 --> 00:39:04,000
就至少要写一到两个这个 static site generator 才才甘心的

1161
00:39:04,000 --> 00:39:07,000
对其实我应该是写过这么一个玩意的

1162
00:39:07,000 --> 00:39:10,000
就是在大学做网站的时候

1163
00:39:10,000 --> 00:39:13,000
但是当然那个时候没有意识到这是一个死亡的

1164
00:39:13,000 --> 00:39:15,000
static site generator

1165
00:39:15,000 --> 00:39:17,000
但它实际上就是一个 static site generator

1166
00:39:17,000 --> 00:39:22,000
就是我们对我在校网站打工的时候

1167
00:39:22,000 --> 00:39:26,000
呃要给当时的美工

1168
00:39:26,000 --> 00:39:28,000
当时美工还不是一个带有贬义的词

1169
00:39:28,000 --> 00:39:31,000
我不知道为什么现在好像说设计师是美工

1170
00:39:31,000 --> 00:39:34,000
他们会感到被侮辱

1171
00:39:34,000 --> 00:39:38,000
但那个时候说美工就是我们网我们学校网站是真的招美工的

1172
00:39:38,000 --> 00:39:39,000
嗯

1173
00:39:39,000 --> 00:39:41,000
他们的职位就写美工

1174
00:39:41,000 --> 00:39:42,000
然后他们美工

1175
00:39:42,000 --> 00:39:44,000
就说了流行切图

1176
00:39:44,000 --> 00:39:45,000
你对切图是什么概念

1177
00:39:45,000 --> 00:39:47,000
你对切图这个东西有概念吗

1178
00:39:47,000 --> 00:39:49,000
就是给一个 photoshop 的

1179
00:39:49,000 --> 00:39:52,000
对吧 psd 切成 table 布局的

1180
00:39:52,000 --> 00:39:53,000
对对对

1181
00:39:53,000 --> 00:39:54,000
静态 html

1182
00:39:54,000 --> 00:40:03,000
然后当时他们想要在没有后端工程师的协作的情况之下

1183
00:40:03,000 --> 00:40:06,000
自己测试一下整个站点跑起来大概是什么样子

1184
00:40:06,000 --> 00:40:07,000
ok

1185
00:40:07,000 --> 00:40:10,000
然后我就写了这么一个工具

1186
00:40:10,000 --> 00:40:11,000
把他们切好的静态图

1187
00:40:12,000 --> 00:40:14,000
利用某种到现在已经记不起来的

1188
00:40:14,000 --> 00:40:18,000
当时自己发明的相当于 template engine 的这么一个东西

1189
00:40:18,000 --> 00:40:21,000
把一些之前定好了什么网站介绍呀

1190
00:40:21,000 --> 00:40:23,000
学工部介绍呀之类的

1191
00:40:23,000 --> 00:40:24,000
灌进去

1192
00:40:24,000 --> 00:40:26,000
然后生成这么一个静态的网站的结构

1193
00:40:26,000 --> 00:40:29,000
是所以已经写你已经你其实也已经写过了

1194
00:40:29,000 --> 00:40:30,000
很多年以前

1195
00:40:30,000 --> 00:40:35,000
对只不过对是在不知不觉的情况下已经写了

1196
00:40:35,000 --> 00:40:37,000
而且是用 sitchop 写的

1197
00:40:37,000 --> 00:40:38,000
天哪

1198
00:40:38,000 --> 00:40:39,000
哈哈哈

1199
00:40:39,000 --> 00:40:40,000
人生的心境

1200
00:40:40,000 --> 00:40:41,000
曾经我也是软皮的

1201
00:40:41,000 --> 00:40:43,000
曾经我也是软饭的

1202
00:40:43,000 --> 00:40:45,000
所以这是你就写

1203
00:40:45,000 --> 00:40:47,000
然后你之后没有再写过另外的吗

1204
00:40:47,000 --> 00:40:49,000
我之后没有

1205
00:40:49,000 --> 00:40:52,000
因为那个时候我觉得这玩意没有什么技术感呀

1206
00:40:52,000 --> 00:40:53,000
确实也是

1207
00:40:53,000 --> 00:40:57,000
然后后来唯一一个写过类似的东西

1208
00:40:57,000 --> 00:41:00,000
就是我说的说过的那个路啊

1209
00:41:00,000 --> 00:41:02,000
半自动化半动态的

1210
00:41:02,000 --> 00:41:04,000
半动态的这么一个 cms

1211
00:41:04,000 --> 00:41:05,000
ok

1212
00:41:05,000 --> 00:41:06,000
blogsystem 对

1213
00:41:06,000 --> 00:41:10,000
然后这个 blogsystem 会把所有的那个

1214
00:41:11,000 --> 00:41:14,000
流评论呀之类的也都生成静态的

1215
00:41:14,000 --> 00:41:18,000
静态的搞不好还是 txt 格式

1216
00:41:18,000 --> 00:41:22,000
因为路啊的那个路啊的一个好处之一就是

1217
00:41:22,000 --> 00:41:25,000
你可以他的那个数组就是他不是数组

1218
00:41:25,000 --> 00:41:28,000
就是路啊里面只有一种数据类型就是 table

1219
00:41:28,000 --> 00:41:32,000
然后这个 table 的语法其实几乎是和 jason 非常像

1220
00:41:32,000 --> 00:41:35,000
是几乎是半 human readable

1221
00:41:35,000 --> 00:41:41,000
所以我就把那个评论直接存成他的原生数据格式

1222
00:41:41,000 --> 00:41:44,000
然后就每个评论就是一个路啊文件

1223
00:41:44,000 --> 00:41:46,000
然后人可以读机器也可以读

1224
00:41:46,000 --> 00:41:47,000
还挺好

1225
00:41:47,000 --> 00:41:48,000
ok

1226
00:41:48,000 --> 00:41:49,000
sounds

1227
00:41:49,000 --> 00:41:52,000
对其实我觉得你你说的这个其实是是正确的

1228
00:41:52,000 --> 00:41:54,000
就是也许如果你在学原程

1229
00:41:54,000 --> 00:41:55,000
然后你有点不知道要干嘛

1230
00:41:55,000 --> 00:41:58,000
那你可以写一个静态网站实声器出来

1231
00:41:58,000 --> 00:42:03,000
这个其实就有点像一个所谓的 kata

1232
00:42:03,000 --> 00:42:09,000
就是就有一本书叫做 pragmatic program

1233
00:42:09,000 --> 00:42:11,000
应该是这本书里面提出的这本书

1234
00:42:11,000 --> 00:42:17,000
就是一个概念就是程序员应该准备几个任务

1235
00:42:17,000 --> 00:42:22,000
然后这些任务可以供他不停的锻炼自己的编程技巧

1236
00:42:22,000 --> 00:42:25,000
然后这种任务就叫做 kata

1237
00:42:25,000 --> 00:42:27,000
或者叫 coran

1238
00:42:27,000 --> 00:42:28,000
然后有很多不同的名字

1239
00:42:28,000 --> 00:42:33,000
但大意就是 kata 这个 kata 原罪日语

1240
00:42:33,000 --> 00:42:39,000
就是日文的汉字形就是形状的形这个字叫做 kata

1241
00:42:39,000 --> 00:42:40,000
嗯

1242
00:42:40,000 --> 00:42:42,000
然后他他嗯

1243
00:42:42,000 --> 00:42:48,000
这个词一般用来描述空手道或者是书法之中的套路

1244
00:42:48,000 --> 00:42:51,000
或者招数或者定式为其的定式

1245
00:42:51,000 --> 00:42:52,000
嗯

1246
00:42:52,000 --> 00:42:54,000
就可以叫做 kata

1247
00:42:54,000 --> 00:42:58,000
但是 programming kata 又和这些招式的 kata 不一样

1248
00:42:58,000 --> 00:43:02,000
就是 programming kata 要比如说我自己比较喜欢的 kata

1249
00:43:02,000 --> 00:43:10,000
就是把实进制的阿拉伯数字转成罗马数字

1250
00:43:10,000 --> 00:43:11,000
嗯

1251
00:43:11,000 --> 00:43:13,000
就是如果我遇到一门新的语言

1252
00:43:13,000 --> 00:43:16,000
我会想要先试试用这个语言做这件事

1253
00:43:16,000 --> 00:43:17,000
嗯

1254
00:43:17,000 --> 00:43:18,000
其实这就是 kata

1255
00:43:18,000 --> 00:43:22,000
对对那我觉得写一个动态网写一个静态网站之声器其实也可以称为 kata

1256
00:43:22,000 --> 00:43:26,000
就是你可以用你刚刚学到语言去写这么一个东西

1257
00:43:26,000 --> 00:43:28,000
然后试着去解决你的问题

1258
00:43:28,000 --> 00:43:31,000
而且你可以写一个然后扔了再写一个

1259
00:43:31,000 --> 00:43:33,000
如果你有兴趣的话

1260
00:43:33,000 --> 00:43:34,000
对

1261
00:43:34,000 --> 00:43:36,000
然后每一次尝试不同的解决方案

1262
00:43:36,000 --> 00:43:38,000
然后对啊

1263
00:43:38,000 --> 00:43:39,000
其实对于编程也是一样的

1264
00:43:39,000 --> 00:43:42,000
其实对于编程也是一个很大的助益

1265
00:43:42,000 --> 00:43:43,000
对对

1266
00:43:43,000 --> 00:43:46,000
就就类似这种编程任务吧

1267
00:43:46,000 --> 00:43:50,000
还有很多比如说你刚才想要写写一个静态网站声声器是一种

1268
00:43:50,000 --> 00:43:52,000
那你可以尝试写一个动态的

1269
00:43:52,000 --> 00:43:53,000
对吧

1270
00:43:53,000 --> 00:43:55,000
还可以做一些七七八八的事情

1271
00:43:55,000 --> 00:43:59,000
对写一个动态的就更有时候可能会觉得更复杂的

1272
00:43:59,000 --> 00:44:01,000
我当时觉得这个应该更复杂的

1273
00:44:01,000 --> 00:44:03,000
现在还有两个复杂的其实差不多

1274
00:44:03,000 --> 00:44:07,000
只不过可能动态的需要你去掌握一些

1275
00:44:07,000 --> 00:44:09,000
比如说怎么样设立一个数据库

1276
00:44:09,000 --> 00:44:14,000
怎么样把所有的该装的东西装起来之类的

1277
00:44:14,000 --> 00:44:19,000
而静态网站声声器的任务相对来说就更纯粹一点

1278
00:44:19,000 --> 00:44:20,000
对对对

1279
00:44:20,000 --> 00:44:22,000
刚讲哪里了

1280
00:44:22,000 --> 00:44:23,000
对啊

1281
00:44:23,000 --> 00:44:24,000
说到后来我写了

1282
00:44:24,000 --> 00:44:25,000
你写了一个

1283
00:44:25,000 --> 00:44:27,000
你用什么用 Python 写的

1284
00:44:27,000 --> 00:44:28,000
对啊

1285
00:44:28,000 --> 00:44:29,000
用 Python 写的

1286
00:44:29,000 --> 00:44:30,000
你是用 Python 写的

1287
00:44:30,000 --> 00:44:31,000
对对

1288
00:44:31,000 --> 00:44:32,000
然后用 Python 写了一个

1289
00:44:32,000 --> 00:44:36,000
然后因为当时我看那个 Jaco 生成 Apple force 那网站慢的一个最主要原因

1290
00:44:36,000 --> 00:44:38,000
它是单核的嘛

1291
00:44:38,000 --> 00:44:39,000
就单核

1292
00:44:39,000 --> 00:44:40,000
它只有一个进程在跑

1293
00:44:40,000 --> 00:44:42,000
然后我看 CPU 占用的时候

1294
00:44:42,000 --> 00:44:43,000
就在它 Build 的过程中

1295
00:44:43,000 --> 00:44:45,000
百分之百一直在那里卡住

1296
00:44:45,000 --> 00:44:49,000
然后我就想那能不能够多核呢

1297
00:44:49,000 --> 00:44:51,000
然后我在 Python 写的时候

1298
00:44:51,000 --> 00:44:57,000
我就把就那个 Multiprocessing 那个那个模块就用多核核来处理

1299
00:44:57,000 --> 00:45:04,000
然后后来做到是就是 Build 的一个 Apple force 同样的同样效果的占

1300
00:45:04,000 --> 00:45:06,000
大概是需要 10 秒左右吧

1301
00:45:06,000 --> 00:45:09,000
就在通通是开 4 个核的情况下

1302
00:45:09,000 --> 00:45:10,000
12 秒

1303
00:45:10,000 --> 00:45:11,000
多少篇文章在这

1304
00:45:11,000 --> 00:45:12,000
2500 多

1305
00:45:12,000 --> 00:45:14,000
2500 多 12 秒

1306
00:45:14,000 --> 00:45:17,000
对就是但我也没有做到特别的优化

1307
00:45:17,000 --> 00:45:20,000
就只是简单的开了一下这个多核而已

1308
00:45:20,000 --> 00:45:21,000
Multiprocess

1309
00:45:21,000 --> 00:45:22,000
对对

1310
00:45:22,000 --> 00:45:25,000
这个可能要扯到另外那个那么 Global interpreter lock 那件事情

1311
00:45:25,000 --> 00:45:28,000
但是想留待留待下次吧

1312
00:45:28,000 --> 00:45:30,000
但是就要 Time stop

1313
00:45:30,000 --> 00:45:34,000
对有一个这么技巧可以去做做到它可以 12 秒

1314
00:45:34,000 --> 00:45:37,000
但是觉得还是不够慢还是不够快

1315
00:45:37,000 --> 00:45:38,000
呃

1316
00:45:38,000 --> 00:45:41,000
就又又又放了那么小半年吧

1317
00:45:41,000 --> 00:45:44,000
然后直到就是前一段时间

1318
00:45:44,000 --> 00:45:47,000
呃是今年开始我迷上写那个 glo 那个语言

1319
00:45:47,000 --> 00:45:52,000
然后前段时间发现有人有人用 glo 写了一个进展生成器叫做

1320
00:45:52,000 --> 00:45:53,000
Ugo

1321
00:45:53,000 --> 00:45:56,000
对 H U G O H 应该是不发音的吧

1322
00:45:56,000 --> 00:45:57,000
对吧

1323
00:45:57,000 --> 00:45:58,000
Ugo

1324
00:45:58,000 --> 00:46:00,000
呃如果你按法语念反正 Ugo

1325
00:46:00,000 --> 00:46:01,000
就是 Ugo

1326
00:46:01,000 --> 00:46:02,000
大作家 Ugo 的名字

1327
00:46:02,000 --> 00:46:03,000
对

1328
00:46:03,000 --> 00:46:06,000
然后我就试了一下

1329
00:46:06,000 --> 00:46:07,000
然后发现它

1330
00:46:07,000 --> 00:46:12,000
Build 整个 2000 篇文章只需要不到一秒钟在我电脑上

1331
00:46:12,000 --> 00:46:13,000
而且只用一个盒

1332
00:46:13,000 --> 00:46:15,000
顿时就败了

1333
00:46:15,000 --> 00:46:16,000
顿时就给他跪了

1334
00:46:16,000 --> 00:46:18,000
是啊

1335
00:46:18,000 --> 00:46:24,000
然后我发现你现在已经是成了半个 go 的叫什么传福音者 evangelist

1336
00:46:24,000 --> 00:46:25,000
对对对对

1337
00:46:25,000 --> 00:46:26,000
对

1338
00:46:26,000 --> 00:46:28,000
传道传教士的传教士

1339
00:46:28,000 --> 00:46:29,000
对

1340
00:46:29,000 --> 00:46:32,000
就确实性能这个性能不得了

1341
00:46:32,000 --> 00:46:36,000
你就其他的那些呃呃不管就其他用脚本语言写的肯定跟这个性能不得了

1342
00:46:36,000 --> 00:46:39,000
肯定跟这个效能是没有办法比的

1343
00:46:39,000 --> 00:46:43,000
而且嗯够这个就 Ugo 就任何用够写的程序都有这个好处

1344
00:46:43,000 --> 00:46:45,000
它的部署相当容易

1345
00:46:45,000 --> 00:46:52,000
这跟他的那个就是他最终生成的那个那个程序是一个 banary 嘛

1346
00:46:52,000 --> 00:46:56,000
你单一一个不需要外部依赖除了 Glibc 哈

1347
00:46:56,000 --> 00:46:59,000
呃这个肯定每个系统都有的嘛

1348
00:46:59,000 --> 00:47:00,000
他不需要任何外部依赖

1349
00:47:00,000 --> 00:47:01,000
不需要装依赖

1350
00:47:01,000 --> 00:47:04,000
然后你所要做的事情就是说你要在服务器上部署

1351
00:47:04,000 --> 00:47:06,000
你就把那个 banary 复制到

1352
00:47:06,000 --> 00:47:09,000
服务器上啊就搞定了

1353
00:47:09,000 --> 00:47:14,000
所以就不会出现刚才你说那个人讲的什么啊一个 git ripple

1354
00:47:14,000 --> 00:47:15,000
然后 tosa mojo

1355
00:47:15,000 --> 00:47:18,000
那一堆乱七八糟的事情就是相当简单容易

1356
00:47:18,000 --> 00:47:20,000
然后性能好

1357
00:47:20,000 --> 00:47:26,000
对他从一个看起来似模似样的这么一个大工具

1358
00:47:26,000 --> 00:47:35,000
进演化到了有点像一个 standalone 的这么一个就是待在这个 localbin 下面一个工一个单一工具

1359
00:47:35,000 --> 00:47:36,000
对对对

1360
00:47:36,000 --> 00:47:39,000
就是这么复杂的任务变得这么简单

1361
00:47:39,000 --> 00:47:42,000
而且这么 battery included

1362
00:47:42,000 --> 00:47:44,000
对就感觉是蛮爽的

1363
00:47:44,000 --> 00:47:47,000
对啊就是当然这个也有代价的哈

1364
00:47:47,000 --> 00:47:50,000
代价就是你丧失了灵活性

1365
00:47:50,000 --> 00:47:53,000
因为起码按目前 go 的这种方法

1366
00:47:53,000 --> 00:47:56,000
他是没有办法动态加载其他代码进去执行的

1367
00:47:56,000 --> 00:48:01,000
当然你要非要说你要自己用 go 实现一个 js 的这个什么 interpreter

1368
00:48:01,000 --> 00:48:05,000
然后你再 load 那个 js 文件或其他脚本文件进去

1369
00:48:05,000 --> 00:48:06,000
那是另外一说

1370
00:48:06,000 --> 00:48:12,000
但是就是标准的情况下你是没有办法再去扩展这个程序本身

1371
00:48:12,000 --> 00:48:14,000
所以这和刚才那些像 jackal 啊

1372
00:48:14,000 --> 00:48:23,000
还有包括现在可能有二就市面上常见的主流的都有可能十几二十个这种金太战的生存器了吧

1373
00:48:23,000 --> 00:48:33,000
对我做功课的时候找到一个网站 github 上面的一个列表叫做 static site generators 列表上面

1374
00:48:33,000 --> 00:48:39,000
我数了一下有 278 个包括 go 在内的 static site generators

1375
00:48:39,000 --> 00:48:41,000
各种各样的语言写出来的

1376
00:48:41,000 --> 00:48:44,000
什么连什么 bash 都有

1377
00:48:44,000 --> 00:48:49,000
然后还有一些可能言和意义上不算是金太网这生存器的东西

1378
00:48:49,000 --> 00:48:53,000
比如说 library load 它也算在里面了

1379
00:48:53,000 --> 00:48:56,000
你这个列表不好啊

1380
00:48:56,000 --> 00:48:58,000
对你有可比性不强

1381
00:48:58,000 --> 00:49:01,000
我待会有一个有人专门做了一个

1382
00:49:01,000 --> 00:49:03,000
就因为市面上有太多金太战的生存器了

1383
00:49:03,000 --> 00:49:05,000
然后你知道

1384
00:49:05,000 --> 00:49:07,000
你说的这个是带投票的是吧

1385
00:49:07,000 --> 00:49:08,000
我好像也看到了

1386
00:49:08,000 --> 00:49:12,000
它有一个很漂亮的功能的还有一个简单的一个就是论述判断

1387
00:49:12,000 --> 00:49:14,000
比如他用的什么模板语言啊

1388
00:49:14,000 --> 00:49:15,000
他这个什么样的方式啊

1389
00:49:15,000 --> 00:49:16,000
协议怎么样的

1390
00:49:16,000 --> 00:49:23,000
就是有人做了一个很漂亮的网站去比较市面上就是已有的这些金太战的生存器

1391
00:49:23,000 --> 00:49:28,000
由此可见这个什么选择困难正严重到了什么样的程度

1392
00:49:28,000 --> 00:49:32,000
对但是我就是我说的

1393
00:49:32,000 --> 00:49:40,000
刚刚另外一个站点上面有一个投票功能就是选你最喜欢的或者说选你最熟悉的

1394
00:49:40,000 --> 00:49:42,000
金太坊的生存器

1395
00:49:42,000 --> 00:49:45,000
JCO 远远领先于所有其他的生存器

1396
00:49:45,000 --> 00:49:47,000
它是鼻祖吗

1397
00:49:47,000 --> 00:49:54,000
对就是这个我们不翻来简单说一下 Tom Patterson Preston Wayland 这些八卦好了

1398
00:49:54,000 --> 00:49:55,000
你说

1399
00:49:55,000 --> 00:49:59,000
就是它是一个很知名很强大的 Ruby 程序

1400
00:49:59,000 --> 00:50:01,000
它创立了 Github

1401
00:50:01,000 --> 00:50:04,000
然后后来做了很长时间的 President

1402
00:50:04,000 --> 00:50:06,000
然后后来前两天吧

1403
00:50:06,000 --> 00:50:09,000
他发了一篇发了一条推还是什么

1404
00:50:09,000 --> 00:50:11,000
说 Goodbye Github

1405
00:50:11,000 --> 00:50:14,000
Hello Octolos Rift

1406
00:50:14,000 --> 00:50:17,000
就是他去做那个 VR 眼镜的

1407
00:50:17,000 --> 00:50:20,000
他去那个做 VR 眼镜公司

1408
00:50:20,000 --> 00:50:22,000
Facebook 买下来了吗那一家

1409
00:50:22,000 --> 00:50:29,000
对但是疯传说八卦说他离职并不是因为他想离职

1410
00:50:29,000 --> 00:50:31,000
而是因为他有一个人

1411
00:50:31,000 --> 00:50:35,000
一个女下属撞到他 harassment

1412
00:50:35,000 --> 00:50:36,000
你不知道吗

1413
00:50:36,000 --> 00:50:39,000
这个事情自然闹得很大的

1414
00:50:39,000 --> 00:50:40,000
我知道

1415
00:50:40,000 --> 00:50:42,000
不然我干嘛要说呢

1416
00:50:42,000 --> 00:50:44,000
我只是来八卦一下

1417
00:50:44,000 --> 00:50:46,000
然后这故事其实还蛮那个的

1418
00:50:46,000 --> 00:50:49,000
而且说他和他的妻子

1419
00:50:49,000 --> 00:50:50,000
对

1420
00:50:50,000 --> 00:50:51,000
同时一起 harass 这个人

1421
00:50:51,000 --> 00:50:54,000
我觉得还挺夸张的

1422
00:50:54,000 --> 00:50:59,000
对就之前有一个 Github 的女员工去网上发了这个说

1423
00:50:59,000 --> 00:51:02,000
Tom Preston Wiener 和他老婆

1424
00:51:02,000 --> 00:51:04,000
一个是性别歧视吧

1425
00:51:04,000 --> 00:51:06,000
一个是然后还是什么 harassment

1426
00:51:06,000 --> 00:51:10,000
一个是基于性别歧视 harassment

1427
00:51:10,000 --> 00:51:13,000
然后另外一个是在办公室里面 stalked

1428
00:51:13,000 --> 00:51:15,000
就是跟踪他什么的

1429
00:51:15,000 --> 00:51:16,000
嗯

1430
00:51:16,000 --> 00:51:20,000
反正这对挺不可思议的

1431
00:51:20,000 --> 00:51:23,000
对然后后来 Tom Preston Wiener 就走路了嘛

1432
00:51:23,000 --> 00:51:27,000
然后他去我不知道他去了 Octolos Rift

1433
00:51:27,000 --> 00:51:28,000
对

1434
00:51:29,000 --> 00:51:35,000
他名义上说有一个调查组调查团来查这件事情

1435
00:51:35,000 --> 00:51:40,000
但是这个被欺负的这个女员工

1436
00:51:40,000 --> 00:51:42,000
说其实根本就没有什么调查团

1437
00:51:42,000 --> 00:51:45,000
他们只是关起门来谈了谈

1438
00:51:45,000 --> 00:51:47,000
觉得这件事情对公司影响太坏

1439
00:51:47,000 --> 00:51:50,000
然后说 Tom 你还是走吧

1440
00:51:50,000 --> 00:51:52,000
然后他们就走了

1441
00:51:52,000 --> 00:51:54,000
对呀

1442
00:51:54,000 --> 00:51:55,000
anyway

1443
00:51:55,000 --> 00:51:58,000
这个 Jaco 其实他因为他是个鼻祖

1444
00:51:58,000 --> 00:52:00,000
然后他发展的比较早

1445
00:52:00,000 --> 00:52:04,000
由此就生成了很多周边产品吧

1446
00:52:04,000 --> 00:52:07,000
或者说衍生产品也是很多人很多人在用

1447
00:52:07,000 --> 00:52:09,000
比如说 Jaco Bootstrap

1448
00:52:09,000 --> 00:52:11,000
就是最开始是用 boost

1449
00:52:11,000 --> 00:52:15,000
推特 booststrap 的主题去包装一个 Jaco

1450
00:52:15,000 --> 00:52:18,000
然后让你直接可以替换主题

1451
00:52:18,000 --> 00:52:19,000
不用自己去定制模板了

1452
00:52:19,000 --> 00:52:22,000
后来又出了一个产品叫做 Octopress

1453
00:52:22,000 --> 00:52:27,000
Octopress 出来的一段时间之内好像我认识的所有事件呢

1454
00:52:27,000 --> 00:52:31,000
我认识的所有稍微有点稍微有点名气

1455
00:52:31,000 --> 00:52:34,000
稍微能够坚持那么写两天 blog 的

1456
00:52:34,000 --> 00:52:37,000
全都把他们的 wordpress 换成了 Octopress

1457
00:52:37,000 --> 00:52:41,000
对就好像那个时候就好像你不用 Octopress

1458
00:52:41,000 --> 00:52:44,000
你就你就就不是你就不是程序员那种感觉

1459
00:52:44,000 --> 00:52:51,000
所以所以那个 Octopress 就是 Jaco 的一个叫什么一个皮

1460
00:52:51,000 --> 00:52:54,000
一个叫什么

1461
00:52:54,000 --> 00:52:56,000
加了插件的爱好品

1462
00:52:56,000 --> 00:53:00,000
一个爱好者定制 deluxe 白金版

1463
00:53:00,000 --> 00:53:01,000
我想起来了

1464
00:53:01,000 --> 00:53:05,000
对我是用那个就是原生的就 Jaco 裸奔就啥也不装

1465
00:53:05,000 --> 00:53:07,000
能跑那个 build 的 apple first 那样

1466
00:53:07,000 --> 00:53:09,000
那个站是三分钟一分钟

1467
00:53:09,000 --> 00:53:12,000
然后装了 Octopress build 出来是五分钟

1468
00:53:12,000 --> 00:53:15,000
然后我就果断的放弃了

1469
00:53:15,000 --> 00:53:20,000
对而且 Octopress 我觉得最大问题是很多

1470
00:53:20,000 --> 00:53:22,000
我相信我相信江江也说过这问题

1471
00:53:22,000 --> 00:53:25,000
就是他的默认主题其实非常难看

1472
00:53:25,000 --> 00:53:30,000
就比那个和 wordpress 默认主题有过之而无不及

1473
00:53:30,000 --> 00:53:31,000
但是非常多的人在用

1474
00:53:31,000 --> 00:53:35,000
所以就让人觉得很很汗颜

1475
00:53:35,000 --> 00:53:37,000
默认主题没有哪个好看的吧

1476
00:53:37,000 --> 00:53:41,000
我觉得 design byprogrammer

1477
00:53:41,000 --> 00:53:42,000
默认主题有好看的

1478
00:53:42,000 --> 00:53:49,000
我觉得哪个什么 sms 软件里面默认主题好看的

1479
00:53:49,000 --> 00:53:52,000
哎呀我回去做两天功课回来再给你答案吧

1480
00:53:52,000 --> 00:53:54,000
你肯定想不出了 anyway

1481
00:53:54,000 --> 00:54:01,000
反正我知道苹果的网站生成器叫什么

1482
00:54:01,000 --> 00:54:03,000
iweb

1483
00:54:03,000 --> 00:54:06,000
对 iweb 不错

1484
00:54:06,000 --> 00:54:09,000
你作为一个果粉不敢反驳吗

1485
00:54:09,000 --> 00:54:12,000
好吧无力

1486
00:54:12,000 --> 00:54:15,000
不过你还别说真有用

1487
00:54:15,000 --> 00:54:19,000
我之前就刚刚讲了我的导师

1488
00:54:19,000 --> 00:54:24,000
他自己有一个在学校挂的个人网站要想做什么

1489
00:54:24,000 --> 00:54:25,000
他说给学生

1490
00:54:25,000 --> 00:54:26,000
比如他要教那门课

1491
00:54:26,000 --> 00:54:27,000
他要布置一些作业

1492
00:54:27,000 --> 00:54:29,000
或者一些什么相关的资料

1493
00:54:29,000 --> 00:54:30,000
他会放上去吗

1494
00:54:30,000 --> 00:54:33,000
他之前还真的是用 iweb 写的

1495
00:54:33,000 --> 00:54:36,000
我相信其实个人主页生成器

1496
00:54:36,000 --> 00:54:38,000
个人主页创作软件这种东西

1497
00:54:38,000 --> 00:54:40,000
是一直都有市场

1498
00:54:40,000 --> 00:54:42,000
就像早期的微软的 front page

1499
00:54:42,000 --> 00:54:44,000
也是想要抓到这一块

1500
00:54:44,000 --> 00:54:47,000
但是没有一个能做的

1501
00:54:47,000 --> 00:54:48,000
真正让不懂电脑的人

1502
00:54:48,000 --> 00:54:50,000
也可以做出一个漂亮的网页来

1503
00:54:50,000 --> 00:54:52,000
即便 iweb 也是有这个问题

1504
00:54:52,000 --> 00:54:53,000
对对对

1505
00:54:53,000 --> 00:54:55,000
可能最接近的应该是那个什么

1506
00:54:55,000 --> 00:54:57,000
就叫 front page 吧

1507
00:54:57,000 --> 00:55:00,000
你说微软的 front page

1508
00:55:00,000 --> 00:55:01,000
从易用性的角度来讲

1509
00:55:01,000 --> 00:55:02,000
因为据说

1510
00:55:02,000 --> 00:55:03,000
我不觉得

1511
00:55:03,000 --> 00:55:05,000
肯定但是不好用的

1512
00:55:05,000 --> 00:55:07,000
但是就算在所有不好用的里面

1513
00:55:07,000 --> 00:55:09,000
它是还算还可以的

1514
00:55:09,000 --> 00:55:10,000
最好用的一个

1515
00:55:10,000 --> 00:55:13,000
就是 the least worst

1516
00:55:13,000 --> 00:55:14,000
对

1517
00:55:14,000 --> 00:55:15,000
鸡蛋里面

1518
00:55:15,000 --> 00:55:17,000
坨子里面拔将军的话

1519
00:55:17,000 --> 00:55:18,000
只能选它

1520
00:55:18,000 --> 00:55:19,000
对对对

1521
00:55:19,000 --> 00:55:23,000
然后因为很多办公室的

1522
00:55:23,000 --> 00:55:25,000
就是小秘书

1523
00:55:25,000 --> 00:55:26,000
老秘书

1524
00:55:26,000 --> 00:55:27,000
就是大妈

1525
00:55:27,000 --> 00:55:29,000
他可能学习也能搞懂

1526
00:55:29,000 --> 00:55:31,000
然后能做出一个页面来

1527
00:55:31,000 --> 00:55:32,000
虽然不好看

1528
00:55:32,000 --> 00:55:34,000
但起码该有的信息都有了

1529
00:55:34,000 --> 00:55:35,000
你就凑合着用吧

1530
00:55:35,000 --> 00:55:38,000
对大妈 usability

1531
00:55:38,000 --> 00:55:39,000
这是成长一个软件

1532
00:55:39,000 --> 00:55:41,000
易用性的非常重要标准

1533
00:55:41,000 --> 00:55:42,000
对对对

1534
00:55:42,000 --> 00:55:45,000
我记得早期苹果还在那边吹嘘

1535
00:55:45,000 --> 00:55:46,000
也不是吹嘘

1536
00:55:46,000 --> 00:55:47,000
就是那个时候的确是实情

1537
00:55:47,000 --> 00:55:49,000
就是七老八十的大妈

1538
00:55:49,000 --> 00:55:52,000
也可以不经指引就使用 ipad

1539
00:55:52,000 --> 00:55:55,000
可是现在苹果已经在 ipad 里面

1540
00:55:55,000 --> 00:55:56,000
内置什么

1541
00:55:56,000 --> 00:55:57,000
tips

1542
00:55:57,000 --> 00:55:58,000
这种 2 b 程序了

1543
00:55:58,000 --> 00:55:59,000
他已经那个什么

1544
00:55:59,000 --> 00:56:01,000
他已经那个投降了嘛

1545
00:56:01,000 --> 00:56:02,000
他已经不再简单了

1546
00:56:02,000 --> 00:56:03,000
对

1547
00:56:03,000 --> 00:56:05,000
任何系统复杂的程度

1548
00:56:05,000 --> 00:56:08,000
都不可能在老太婆有四个了

1549
00:56:08,000 --> 00:56:10,000
对不过 front page 它好用

1550
00:56:10,000 --> 00:56:12,000
其实有一个最核心的一点

1551
00:56:12,000 --> 00:56:14,000
就是它也比较好用

1552
00:56:14,000 --> 00:56:16,000
它应该是就是 piggyback

1553
00:56:16,000 --> 00:56:17,000
到另外一个东西上

1554
00:56:17,000 --> 00:56:18,000
就是那个 word

1555
00:56:18,000 --> 00:56:19,000
因为很多人都学过

1556
00:56:19,000 --> 00:56:21,000
就如果你是在办公室工作

1557
00:56:21,000 --> 00:56:22,000
word 是你跑步

1558
00:56:22,000 --> 00:56:23,000
一定要用的一个东西嘛

1559
00:56:23,000 --> 00:56:25,000
然后那个 front page

1560
00:56:25,000 --> 00:56:26,000
它做的很像 word

1561
00:56:26,000 --> 00:56:29,000
所以其实就学习门槛肯定还是有的

1562
00:56:29,000 --> 00:56:31,000
但是因为你学过 word 之后

1563
00:56:31,000 --> 00:56:33,000
再转过来就没有那么逗了嘛

1564
00:56:33,000 --> 00:56:35,000
对当时让我非常感动

1565
00:56:35,000 --> 00:56:38,000
现在想起来非常汗颜的一件事情

1566
00:56:38,000 --> 00:56:42,000
是我发现当时我装了 dreamweaver

1567
00:56:42,000 --> 00:56:43,000
装了 front page

1568
00:56:43,000 --> 00:56:45,000
还装了一个另外一个什么东西

1569
00:56:45,000 --> 00:56:50,000
应该是 Adobe 的 go live

1570
00:56:50,000 --> 00:56:51,000
是叫 go live 吧

1571
00:56:51,000 --> 00:56:52,000
什么东西

1572
00:56:52,000 --> 00:56:57,000
不行这个东西我一定要搜一下

1573
00:56:57,000 --> 00:57:00,000
就是 Adobe 曾经在收购这个

1574
00:57:00,000 --> 00:57:01,000
macromedia

1575
00:57:01,000 --> 00:57:04,000
macromedia 之前有一款自己的

1576
00:57:04,000 --> 00:57:07,000
那个叫什么

1577
00:57:07,000 --> 00:57:09,000
主页创作软件

1578
00:57:09,000 --> 00:57:11,000
对 Adobe go live

1579
00:57:11,000 --> 00:57:13,000
这个东西实际上

1580
00:57:13,000 --> 00:57:15,000
我在很长一段时间里面都认为

1581
00:57:15,000 --> 00:57:17,000
它比 dreamweaver 好用太多了

1582
00:57:17,000 --> 00:57:18,000
但是在那个时候

1583
00:57:18,000 --> 00:57:20,000
我在

1584
00:57:20,000 --> 00:57:23,000
在 front page go live

1585
00:57:23,000 --> 00:57:24,000
还有 dreamweaver 里面

1586
00:57:24,000 --> 00:57:25,000
同时做了一件事情

1587
00:57:25,000 --> 00:57:27,000
就是我想把一行字

1588
00:57:27,000 --> 00:57:30,000
缩近一段距离

1589
00:57:30,000 --> 00:57:32,000
还是做某一

1590
00:57:32,000 --> 00:57:35,000
想要达成某一个目的的时候

1591
00:57:35,000 --> 00:57:37,000
我发现长按着空格键

1592
00:57:37,000 --> 00:57:38,000
并不能让字

1593
00:57:38,000 --> 00:57:40,000
在所有编辑器里面

1594
00:57:40,000 --> 00:57:41,000
长按空格键

1595
00:57:41,000 --> 00:57:44,000
并不能让字移动到我想要的地方

1596
00:57:44,000 --> 00:57:45,000
front page 可以

1597
00:57:45,000 --> 00:57:46,000
只有 front page 可以

1598
00:57:46,000 --> 00:57:48,000
因为 front page 在里面插了一大堆那个

1599
00:57:48,000 --> 00:57:49,000
NBSP 嘛

1600
00:57:49,000 --> 00:57:51,000
non breakable space

1601
00:57:51,000 --> 00:57:52,000
对

1602
00:57:52,000 --> 00:57:53,000
所以看

1603
00:57:53,000 --> 00:57:54,000
易用性还是很不一样嘛

1604
00:57:54,000 --> 00:57:55,000
intuitive

1605
00:57:55,000 --> 00:57:56,000
对

1606
00:57:56,000 --> 00:57:57,000
very intuitive

1607
00:57:57,000 --> 00:57:58,000
对我要说

1608
00:57:58,000 --> 00:58:00,000
还是要夸他一下

1609
00:58:00,000 --> 00:58:01,000
对

1610
00:58:01,000 --> 00:58:04,000
在那些久远的想要砸电脑的年代

1611
00:58:04,000 --> 00:58:05,000
有这样

1612
00:58:05,000 --> 00:58:07,000
让人耳目一新的软件出现

1613
00:58:07,000 --> 00:58:08,000
真的

1614
00:58:08,000 --> 00:58:10,000
挺感动的

1615
00:58:10,000 --> 00:58:12,000
微小而确定的幸福

1616
00:58:14,000 --> 00:58:16,000
哎呀扯远了

1617
00:58:16,000 --> 00:58:18,000
刚才扯的那几个

1618
00:58:18,000 --> 00:58:20,000
Python 其实还有一个比较知名的

1619
00:58:20,000 --> 00:58:22,000
那个生成机叫做

1620
00:58:22,000 --> 00:58:23,000
Pelican 吧

1621
00:58:23,000 --> 00:58:24,000
这个也是在

1622
00:58:24,000 --> 00:58:25,000
对

1623
00:58:25,000 --> 00:58:26,000
他最早应该有个叫 Hide

1624
00:58:26,000 --> 00:58:27,000
对不对

1625
00:58:29,000 --> 00:58:31,000
对 Hide 是所谓

1626
00:58:31,000 --> 00:58:33,000
Jaco's Evil Twin

1627
00:58:33,000 --> 00:58:35,000
几乎是仿 Jaco 做的

1628
00:58:35,000 --> 00:58:37,000
就有一个是一个印度人做的

1629
00:58:37,000 --> 00:58:38,000
我记得

1630
00:58:38,000 --> 00:58:39,000
是吧

1631
00:58:39,000 --> 00:58:40,000
嗯

1632
00:58:40,000 --> 00:58:41,000
然后还有

1633
00:58:41,000 --> 00:58:42,000
对

1634
00:58:42,000 --> 00:58:44,000
Pelican 是一个法国人叫做

1635
00:58:44,000 --> 00:58:47,000
Alexis Metairie

1636
00:58:48,000 --> 00:58:50,000
对

1637
00:58:50,000 --> 00:58:51,000
是一个法国人

1638
00:58:51,000 --> 00:58:52,000
然后

1639
00:58:52,000 --> 00:58:54,000
他应该是给 Mozia 工作的

1640
00:58:54,000 --> 00:58:55,000
我觉得

1641
00:58:55,000 --> 00:58:56,000
我记得

1642
00:58:56,000 --> 00:58:58,000
然后他的之所以叫 Pelican

1643
00:58:58,000 --> 00:58:59,000
并不是因为叫孔

1644
00:58:59,000 --> 00:59:01,000
Pelican 是孔雀的意思

1645
00:59:01,000 --> 00:59:02,000
嗯

1646
00:59:02,000 --> 00:59:03,000
anyway

1647
00:59:03,000 --> 00:59:05,000
反正 Pelican 他说是一个

1648
00:59:05,000 --> 00:59:07,000
Calpin 的

1649
00:59:07,000 --> 00:59:08,000
Anegram

1650
00:59:08,000 --> 00:59:09,000
Calpon

1651
00:59:09,000 --> 00:59:10,000
不是不是

1652
00:59:10,000 --> 00:59:11,000
这法语不知道怎么

1653
00:59:11,000 --> 00:59:12,000
就法语的笔记本的意思

1654
00:59:12,000 --> 00:59:13,000
我相信应该是 Calpon

1655
00:59:13,000 --> 00:59:14,000
对

1656
00:59:14,000 --> 00:59:16,000
然后法语里面是笔记本的意思

1657
00:59:16,000 --> 00:59:17,000
然后去

1658
00:59:17,000 --> 00:59:19,000
然后去名刘派的

1659
00:59:19,000 --> 00:59:22,000
但是这就是当然还有一个

1660
00:59:22,000 --> 00:59:26,000
在 Jaco 之后开发的也是 G Ruby 的

1661
00:59:26,000 --> 00:59:29,000
生成器叫做 middleman

1662
00:59:29,000 --> 00:59:35,000
middleman 最大的卖点是他支持的插件比 Jaco 还要多

1663
00:59:35,000 --> 00:59:36,000
对

1664
00:59:36,000 --> 00:59:37,000
可扩展性

1665
00:59:37,000 --> 00:59:38,000
可扩展性比 Jaco 还要强

1666
00:59:38,000 --> 00:59:41,000
但也很有可能也比 Jaco 还要慢

1667
00:59:41,000 --> 00:59:42,000
对

1668
00:59:42,000 --> 00:59:43,000
我觉得我们不用挨个介绍

1669
00:59:43,000 --> 00:59:45,000
我觉得要介绍 300 多项的

1670
00:59:45,000 --> 00:59:47,000
说到明年的讲播

1671
00:59:47,000 --> 00:59:48,000
278 对

1672
00:59:48,000 --> 00:59:49,000
对我太多了

1673
00:59:49,000 --> 00:59:50,000
这个类吧

1674
00:59:50,000 --> 00:59:51,000
我相信已经有 342 个了

1675
00:59:51,000 --> 00:59:53,000
Holy shit

1676
00:59:53,000 --> 00:59:55,000
对你不觉得这东西很诡异吗

1677
00:59:55,000 --> 00:59:56,000
所以你也可以写一个

1678
00:59:56,000 --> 00:59:58,000
一帮不怎么写字的程式员

1679
00:59:58,000 --> 01:00:01,000
他天天费了拉劲写那么多东西

1680
01:00:01,000 --> 01:00:02,000
就像我说的

1681
01:00:02,000 --> 01:00:03,000
它是一个 cut

1682
01:00:03,000 --> 01:00:04,000
而且它是一个很好的 cut

1683
01:00:04,000 --> 01:00:05,000
所以你用的是

1684
01:00:05,000 --> 01:00:06,000
如果你要用别人的

1685
01:00:06,000 --> 01:00:07,000
你一定要小心

1686
01:00:07,000 --> 01:00:08,000
你要很容易被坑

1687
01:00:08,000 --> 01:00:09,000
对

1688
01:00:09,000 --> 01:00:12,000
所谓 NIH 情节

1689
01:00:12,000 --> 01:00:13,000
Not invented here

1690
01:00:13,000 --> 01:00:14,000
不是我写的

1691
01:00:14,000 --> 01:00:15,000
所以我一定要自己写一个

1692
01:00:15,000 --> 01:00:16,000
他为什么不好

1693
01:00:16,000 --> 01:00:17,000
因为他不是我写的

1694
01:00:17,000 --> 01:00:19,000
不过我现在心态变了

1695
01:00:19,000 --> 01:00:21,000
你看我为什么

1696
01:00:21,000 --> 01:00:23,000
我自己已经写了一个了

1697
01:00:23,000 --> 01:00:25,000
就性能就应该还还凑合了吧

1698
01:00:25,000 --> 01:00:28,000
但是觉得还是用别人写的比较简单

1699
01:00:28,000 --> 01:00:30,000
懒得去麻烦

1700
01:00:30,000 --> 01:00:32,000
这个叫过来人心态

1701
01:00:32,000 --> 01:00:33,000
大爷已经写过一个了

1702
01:00:33,000 --> 01:00:36,000
我现在有资格 judge 你们这帮人写的东西

1703
01:00:36,000 --> 01:00:37,000
我可以挑一个顺手

1704
01:00:37,000 --> 01:00:39,000
我现在的处处则就是什么

1705
01:00:39,000 --> 01:00:40,000
less code is good code

1706
01:00:40,000 --> 01:00:44,000
no code is great code

1707
01:00:44,000 --> 01:00:45,000
no code is best code

1708
01:00:45,000 --> 01:00:46,000
对

1709
01:00:46,000 --> 01:00:47,000
就这样

1710
01:00:47,000 --> 01:00:50,000
所以能不写自己代码

1711
01:00:50,000 --> 01:00:51,000
就不写自己代码

1712
01:00:51,000 --> 01:00:54,000
然后刚才扯了那七七八八的生成器本身

1713
01:00:54,000 --> 01:00:55,000
其实那个东西

1714
01:00:55,000 --> 01:00:56,000
大家有兴趣

1715
01:00:56,000 --> 01:00:58,000
我们会把列表贴在那里

1716
01:00:58,000 --> 01:00:59,000
大家自己去看

1717
01:00:59,000 --> 01:01:00,000
我现在没得讲

1718
01:01:00,000 --> 01:01:02,000
另外一件事情就是部署

1719
01:01:02,000 --> 01:01:03,000
刚才讲了一半天 dev 了

1720
01:01:03,000 --> 01:01:05,000
现在讲 op 这一块了

1721
01:01:05,000 --> 01:01:06,000
对

1722
01:01:06,000 --> 01:01:08,000
刚刚我在问你

1723
01:01:08,000 --> 01:01:10,000
你也说你在服务器上部署了

1724
01:01:10,000 --> 01:01:12,000
然后其实最开始的时候

1725
01:01:12,000 --> 01:01:13,000
大家还不是这么玩的

1726
01:01:13,000 --> 01:01:15,000
最开始是在自己的

1727
01:01:15,000 --> 01:01:18,000
本地生成一个 public 目录

1728
01:01:18,000 --> 01:01:24,000
然后直接通过比如说 rthink 或者 sap 的方式复制到远程复制上去

1729
01:01:24,000 --> 01:01:26,000
然后搞定对吧

1730
01:01:26,000 --> 01:01:30,000
然后后来或者直接像我这样 git share

1731
01:01:30,000 --> 01:01:31,000
然后 git pool

1732
01:01:31,000 --> 01:01:35,000
对其实这个已经是比较高端的一个方法

1733
01:01:35,000 --> 01:01:37,000
或者说比较麻烦的一个方法

1734
01:01:37,000 --> 01:01:39,000
你得你得铺来铺去

1735
01:01:39,000 --> 01:01:41,000
然后搞来搞去还是挺头痛的对吧

1736
01:01:41,000 --> 01:01:42,000
对

1737
01:01:42,000 --> 01:01:43,000
就愿意的话

1738
01:01:43,000 --> 01:01:44,000
其实 git 可以完全拿来当 sap

1739
01:01:44,000 --> 01:01:46,000
你完全拿来当 sap 用嘛

1740
01:01:46,000 --> 01:01:48,000
就直接给 push 到远端的

1741
01:01:48,000 --> 01:01:50,000
对但是你还得去用命令好嘛

1742
01:01:50,000 --> 01:01:52,000
还是得去麻烦一下

1743
01:01:52,000 --> 01:01:54,000
刚才我讲我现在已经变得很懒的一个人

1744
01:01:54,000 --> 01:01:57,000
可是你生成难道不需要命令吗

1745
01:01:57,000 --> 01:02:00,000
对这就是要讲的事情了

1746
01:02:00,000 --> 01:02:01,000
其实你也不用了

1747
01:02:01,000 --> 01:02:04,000
你生成的时候你是 push 到上面去

1748
01:02:04,000 --> 01:02:08,000
然后服务器里面自动完成了嘛

1749
01:02:08,000 --> 01:02:10,000
不是吗

1750
01:02:10,000 --> 01:02:12,000
我的意思是你在生成的时候

1751
01:02:12,000 --> 01:02:15,000
我的意思是你在生成这个站点的时候

1752
01:02:15,000 --> 01:02:16,000
会使用命令行

1753
01:02:16,000 --> 01:02:18,000
那你为什么会害怕

1754
01:02:18,000 --> 01:02:22,000
或者说为什么会觉得用命令行发布显得多余呢

1755
01:02:22,000 --> 01:02:23,000
就因为我不想

1756
01:02:23,000 --> 01:02:25,000
因为你知道写作的时候

1757
01:02:25,000 --> 01:02:27,000
和在敲命令操作的时候

1758
01:02:27,000 --> 01:02:29,000
我觉得是两种完全不同的心态嘛

1759
01:02:29,000 --> 01:02:31,000
所以我不想在写作的时候

1760
01:02:31,000 --> 01:02:32,000
还要去想

1761
01:02:32,000 --> 01:02:34,000
还要再执行一个命令才能够发布

1762
01:02:34,000 --> 01:02:36,000
为什么不能写存在那个地方

1763
01:02:36,000 --> 01:02:38,000
他就自动给我发布了呢

1764
01:02:38,000 --> 01:02:40,000
因为你不知道自己有没有写好

1765
01:02:40,000 --> 01:02:42,000
他不是有那个 draft 的那个目录

1766
01:02:42,000 --> 01:02:44,000
就草稿那个目录嘛

1767
01:02:44,000 --> 01:02:46,000
什么有 draft 的目录

1768
01:02:46,000 --> 01:02:48,000
Jaco 有 draft 的那个目录啊

1769
01:02:48,000 --> 01:02:49,000
Jaco 有 draft 的目录

1770
01:02:49,000 --> 01:02:50,000
你又落后了

1771
01:02:50,000 --> 01:02:51,000
有啊

1772
01:02:51,000 --> 01:02:53,000
我用版本还没有呢

1773
01:02:53,000 --> 01:02:54,000
我对天翻

1774
01:02:54,000 --> 01:02:55,000
可能是后来加的吧

1775
01:02:55,000 --> 01:02:56,000
anyway

1776
01:02:56,000 --> 01:02:58,000
对应该是个后来加的

1777
01:02:58,000 --> 01:03:01,000
对后来就出现过这么一群用

1778
01:03:01,000 --> 01:03:02,000
就是因为 DrawBox

1779
01:03:02,000 --> 01:03:03,000
后来不是出了 API 吗

1780
01:03:03,000 --> 01:03:06,000
不对 DrawBox 没出 API 之前

1781
01:03:06,000 --> 01:03:07,000
就有人想这么干

1782
01:03:07,000 --> 01:03:08,000
就是他注册了两个

1783
01:03:08,000 --> 01:03:10,000
单独注册了一个 DrawBox 账号

1784
01:03:10,000 --> 01:03:12,000
那个账号在那个

1785
01:03:12,000 --> 01:03:13,000
那个服务器上跑

1786
01:03:13,000 --> 01:03:15,000
然后他把他的那个

1787
01:03:15,000 --> 01:03:17,000
静态目录的那个 source

1788
01:03:17,000 --> 01:03:18,000
那个 directory

1789
01:03:18,000 --> 01:03:19,000
source 那个目录

1790
01:03:19,000 --> 01:03:20,000
跟那个服务器上

1791
01:03:20,000 --> 01:03:22,000
那个 DrawBox 的账号共享了

1792
01:03:22,000 --> 01:03:24,000
然后这样服务器那边就会同步嘛

1793
01:03:24,000 --> 01:03:26,000
然后用一种在 Linux 上

1794
01:03:26,000 --> 01:03:28,000
你可以要么你就 pull 嘛

1795
01:03:28,000 --> 01:03:30,000
你就去去轮循那个目录

1796
01:03:30,000 --> 01:03:31,000
看有没有文件更改

1797
01:03:31,000 --> 01:03:33,000
要么用那个叫什么

1798
01:03:33,000 --> 01:03:34,000
呃

1799
01:03:34,000 --> 01:03:36,000
什么 notification 来的

1800
01:03:36,000 --> 01:03:38,000
Fnotify 还是什么来的

1801
01:03:38,000 --> 01:03:39,000
FS notification

1802
01:03:39,000 --> 01:03:40,000
I know notification

1803
01:03:40,000 --> 01:03:41,000
I know the notification

1804
01:03:41,000 --> 01:03:42,000
I notify 嘛

1805
01:03:42,000 --> 01:03:43,000
对对对

1806
01:03:43,000 --> 01:03:44,000
那个系统

1807
01:03:44,000 --> 01:03:45,000
Linux 有这么一个系统

1808
01:03:45,000 --> 01:03:47,000
2.6 还是 2.几里面开始搭载的

1809
01:03:47,000 --> 01:03:49,000
就他可以通知你说

1810
01:03:49,000 --> 01:03:50,000
你可以

1811
01:03:50,000 --> 01:03:51,000
你可以 watch

1812
01:03:51,000 --> 01:03:53,000
你可以就是叫什么

1813
01:03:53,000 --> 01:03:55,000
观察某一个目录

1814
01:03:55,000 --> 01:03:56,000
然后有变动时间

1815
01:03:56,000 --> 01:03:57,000
那个系统内核会提醒你

1816
01:03:57,000 --> 01:03:59,000
然后你可以再跑一遍嘛

1817
01:03:59,000 --> 01:04:00,000
然后就有人这么干过

1818
01:04:00,000 --> 01:04:01,000
我也这么干过

1819
01:04:01,000 --> 01:04:04,000
我就在监控

1820
01:04:04,000 --> 01:04:05,000
Watch

1821
01:04:05,000 --> 01:04:09,000
监控文件目录的更改

1822
01:04:09,000 --> 01:04:10,000
文件系统的更改

1823
01:04:10,000 --> 01:04:11,000
就是发 OE

1824
01:04:11,000 --> 01:04:12,000
其实是一个非常

1825
01:04:12,000 --> 01:04:13,000
OE

1826
01:04:13,000 --> 01:04:15,000
对是一个非常 general 的需求

1827
01:04:15,000 --> 01:04:16,000
对

1828
01:04:16,000 --> 01:04:18,000
我有时候好奇为什么这么晚才出现这种功能

1829
01:04:18,000 --> 01:04:23,000
其实在好像是 Windows 上先有这个吧

1830
01:04:23,000 --> 01:04:24,000
我记得还是

1831
01:04:24,000 --> 01:04:27,000
还是 BSD 上面先有这个东西

1832
01:04:27,000 --> 01:04:28,000
我忘了

1833
01:04:28,000 --> 01:04:30,000
你说监视一个

1834
01:04:30,000 --> 01:04:31,000
对对对

1835
01:04:31,000 --> 01:04:32,000
文件系统的改变

1836
01:04:32,000 --> 01:04:33,000
对

1837
01:04:33,000 --> 01:04:34,000
Windows 我印象里面没有

1838
01:04:34,000 --> 01:04:35,000
有有有

1839
01:04:35,000 --> 01:04:36,000
Mac 其实是一直有的

1840
01:04:36,000 --> 01:04:38,000
MacBSD 那个好像一直都有

1841
01:04:38,000 --> 01:04:39,000
那个 KQ 嘛

1842
01:04:39,000 --> 01:04:40,000
好像一直都有这个东西

1843
01:04:40,000 --> 01:04:41,000
嗯

1844
01:04:41,000 --> 01:04:42,000
啊

1845
01:04:42,000 --> 01:04:43,000
anyway 说远了

1846
01:04:43,000 --> 01:04:44,000
啊

1847
01:04:44,000 --> 01:04:45,000
就就有人这么干嘛

1848
01:04:45,000 --> 01:04:47,000
然后但是那个东西有一个比较麻烦

1849
01:04:47,000 --> 01:04:54,000
就是设 Dropbox 在 Linux 上面的客户端比较使有很多 bug

1850
01:04:54,000 --> 01:04:55,000
真的会死掉

1851
01:04:55,000 --> 01:04:57,000
然后也不知道为什么

1852
01:04:57,000 --> 01:04:58,000
我从来没用过

1853
01:04:58,000 --> 01:05:01,000
我从来没有 Dropbox 的 Linux 客户端

1854
01:05:01,000 --> 01:05:02,000
是命令行的这样的吗

1855
01:05:02,000 --> 01:05:03,000
还是

1856
01:05:03,000 --> 01:05:04,000
它有两个

1857
01:05:04,000 --> 01:05:05,000
如果你是 Linux

1858
01:05:05,000 --> 01:05:07,000
你是有这个客户端

1859
01:05:07,000 --> 01:05:08,000
它是有那个故意的

1860
01:05:08,000 --> 01:05:09,000
如果你没有的话

1861
01:05:09,000 --> 01:05:10,000
它有一个指命令行的工具

1862
01:05:10,000 --> 01:05:11,000
你还得再设置一遍

1863
01:05:11,000 --> 01:05:12,000
它怎么去

1864
01:05:12,000 --> 01:05:13,000
那个叫什么

1865
01:05:13,000 --> 01:05:14,000
呃

1866
01:05:14,000 --> 01:05:15,000
就就后后台运行

1867
01:05:15,000 --> 01:05:16,000
后台

1868
01:05:16,000 --> 01:05:17,000
后台

1869
01:05:17,000 --> 01:05:18,000
哪上那个也都很

1870
01:05:18,000 --> 01:05:19,000
就那个都可以软

1871
01:05:19,000 --> 01:05:20,000
那个一次性的嘛

1872
01:05:20,000 --> 01:05:21,000
就是你要先运行它

1873
01:05:21,000 --> 01:05:22,000
启动它

1874
01:05:22,000 --> 01:05:23,000
它会生成一个连接

1875
01:05:23,000 --> 01:05:24,000
然后你再把连接复制到你的浏览器里面

1876
01:05:24,000 --> 01:05:25,000
你要授权

1877
01:05:25,000 --> 01:05:26,000
然后有一堆事情挺麻烦的

1878
01:05:26,000 --> 01:05:27,000
但是就那个都一次性的都还好

1879
01:05:27,000 --> 01:05:28,000
但是主要是那个 Dropbox 的客户端

1880
01:05:28,000 --> 01:05:29,000
就是 Kabang Online 那个版本

1881
01:05:29,000 --> 01:05:30,000
就比较不稳定嘛

1882
01:05:30,000 --> 01:05:31,000
你经常会格单差

1883
01:05:31,000 --> 01:05:32,000
我出问题

1884
01:05:32,000 --> 01:05:33,000
然后

1885
01:05:33,000 --> 01:05:34,000
然后

1886
01:05:34,000 --> 01:05:35,000
然后

1887
01:05:35,000 --> 01:05:36,000
然后

1888
01:05:36,000 --> 01:05:37,000
然后

1889
01:05:39,000 --> 01:05:40,000
然后

1890
01:05:40,000 --> 01:05:41,000
然后

1891
01:05:41,000 --> 01:05:42,000
然后

1892
01:05:42,000 --> 01:05:43,000
然后

1893
01:05:43,000 --> 01:05:44,000
同步也不是很及时吧

1894
01:05:44,000 --> 01:05:45,000
因为之前

1895
01:05:45,000 --> 01:05:47,000
我记得那个ежд

1896
01:05:47,000 --> 01:05:48,000
它也得那个也是这么干的

1897
01:05:48,000 --> 01:05:48,000
然后经常会出现

1898
01:05:48,000 --> 01:05:49,000
呃

1899
01:05:49,000 --> 01:05:50,000
就你在本地已经把你的稿放上去

1900
01:05:50,000 --> 01:05:51,000
呃

1901
01:05:51,000 --> 01:05:53,000
然后那个本地的那个桌子

1902
01:05:53,000 --> 01:05:54,000
已经写同步了

1903
01:05:54,000 --> 01:05:54,000
但是服务器上

1904
01:05:54,000 --> 01:05:54,000
那可能要等五 futuristic

1905
01:05:54,000 --> 01:05:55,000
10 分钟

1906
01:05:55,000 --> 01:05:55,000
10 分钟

1907
01:05:55,000 --> 01:05:56,000
才会同步

1908
01:05:56,000 --> 01:05:56,000
才会同步

1909
01:05:56,000 --> 01:05:57,000
嗯

1910
01:05:57,000 --> 01:05:58,000
就是 lights

1911
01:05:58,000 --> 01:05:59,000
现在还是这样吗

1912
01:05:59,000 --> 01:06:00,000
嗯

1913
01:06:00,000 --> 01:06:01,000
现在我不太清楚

1914
01:06:01,000 --> 01:06:02,000
就是有一有一段时间

1915
01:06:02,000 --> 01:06:03,000
很多人抱怨你这个问题吗

1916
01:06:03,000 --> 01:06:04,000
因为我也遇到过

1917
01:06:04,000 --> 01:06:05,000
所以就不是很稳定

1918
01:06:05,000 --> 01:06:06,000
后来他觉得

1919
01:06:06,000 --> 01:06:07,000
就不是很爽

1920
01:06:07,000 --> 01:06:08,000
啊

1921
01:06:08,000 --> 01:06:09,000
但是后来那个桌套子开放

1922
01:06:09,000 --> 01:06:09,000
没办法

1923
01:06:09,000 --> 01:06:13,000
开放的 API 可以直接就是他给你一个 callback

1924
01:06:13,000 --> 01:06:17,000
就是你不用再在服务器上装 Dropbox 客户端

1925
01:06:17,000 --> 01:06:21,000
你只要开一个 web 的那个端

1926
01:06:21,000 --> 01:06:22,000
然后他那边同步了

1927
01:06:22,000 --> 01:06:25,000
Dropbox 服务器会自动给你发一条 HTTP 请求

1928
01:06:25,000 --> 01:06:29,000
然后你再去 Dropbox API 去请求更新的数据就好

1929
01:06:29,000 --> 01:06:31,000
这样的话就可以绕过客户

1930
01:06:31,000 --> 01:06:33,000
你不用使用 Dropbox 的客户端了

1931
01:06:33,000 --> 01:06:34,000
就还好一点

1932
01:06:34,000 --> 01:06:38,000
对 变成模型变成 event driven

1933
01:06:38,000 --> 01:06:39,000
对对其实之前也是 event driven

1934
01:06:39,000 --> 01:06:43,000
但是有一个是你要再运行一个 Dropbox 那个币源的

1935
01:06:43,000 --> 01:06:43,000
私有的客户端

1936
01:06:43,000 --> 01:06:44,000
然后又写的不好嘛

1937
01:06:44,000 --> 01:06:47,000
对所以现在其实更加的好的方法

1938
01:06:47,000 --> 01:06:49,000
然后后来大家觉得

1939
01:06:49,000 --> 01:06:51,000
哎呀 Dropbox 不是那年出过那个事吗

1940
01:06:51,000 --> 01:06:53,000
出过一个事就是有一段时间

1941
01:06:53,000 --> 01:06:56,000
大家的所有账号可以随便都可以访问嘛

1942
01:06:56,000 --> 01:06:58,000
那个系统的漏洞

1943
01:06:58,000 --> 01:07:00,000
对然后后来就觉得

1944
01:07:00,000 --> 01:07:01,000
卧槽这个不靠谱啊

1945
01:07:01,000 --> 01:07:02,000
这个信不过怎么办

1946
01:07:02,000 --> 01:07:06,000
后来那个 Bittorrent 就做 BT 那间公司

1947
01:07:06,000 --> 01:07:08,000
出了一个叫 Bittorrent Sync 这么一个方案

1948
01:07:08,000 --> 01:07:10,000
怎么理解呢

1949
01:07:10,000 --> 01:07:11,000
它就是一个 Dropbox

1950
01:07:11,000 --> 01:07:13,000
但是没有中央服务器的

1951
01:07:13,000 --> 01:07:15,000
就它是一个完全分布式的一个系统

1952
01:07:15,000 --> 01:07:16,000
去中心化

1953
01:07:16,000 --> 01:07:17,000
对对对

1954
01:07:17,000 --> 01:07:18,000
Dropbox 替代

1955
01:07:18,000 --> 01:07:20,000
decentralize Dropbox basically

1956
01:07:20,000 --> 01:07:23,000
就是你可以在你的服务器上装一个它的客户端

1957
01:07:23,000 --> 01:07:24,000
然后你本机装客户端

1958
01:07:24,000 --> 01:07:26,000
本机客户端就跟 Dropbox 上长得一样

1959
01:07:26,000 --> 01:07:27,000
你可以选择一个目录

1960
01:07:27,000 --> 01:07:28,000
它会同步

1961
01:07:28,000 --> 01:07:32,000
然后你把这个这个目录的选择同步到你服务器上去

1962
01:07:32,000 --> 01:07:33,000
然后就可以运行

1963
01:07:33,000 --> 01:07:35,000
然后这个就还不就

1964
01:07:35,000 --> 01:07:37,000
我觉得我试过相当长一段时间吧

1965
01:07:37,000 --> 01:07:38,000
性能还可以

1966
01:07:38,000 --> 01:07:39,000
就是我的个人主

1967
01:07:39,000 --> 01:07:42,000
个人网站之前就用这种方式来实现的

1968
01:07:42,000 --> 01:07:44,000
性能就是速度还行

1969
01:07:44,000 --> 01:07:45,000
然后同步速度也可以

1970
01:07:45,000 --> 01:07:48,000
然后也没有像 Dropbox 客户端那种就隔三差五

1971
01:07:48,000 --> 01:07:49,000
不能同步的情况

1972
01:07:49,000 --> 01:07:51,000
不过它那个因为是去中心化的嘛

1973
01:07:51,000 --> 01:07:52,000
就是我必须得保证

1974
01:07:54,000 --> 01:07:56,000
我的服务器是在线

1975
01:07:56,000 --> 01:07:59,000
但是我的这个本机一定要完成同步之后

1976
01:07:59,000 --> 01:08:00,000
我才能够下线

1977
01:08:00,000 --> 01:08:01,000
不然的话就可能同步到半截

1978
01:08:02,000 --> 01:08:05,000
然后那边还是就服务器端还是用那个 iNotify

1979
01:08:05,000 --> 01:08:08,000
那个接口去侦测有文件的更新

1980
01:08:08,000 --> 01:08:08,000
啊

1981
01:08:08,000 --> 01:08:08,000
嗯

1982
01:08:08,000 --> 01:08:12,000
,然后再去重新重新 rebuild 这个整个整个 site 嘛

1983
01:08:12,000 --> 01:08:14,000
这些都是这个一个技术层面的问题啊

1984
01:08:14,000 --> 01:08:17,000
但是这里有一个共性就是

1985
01:08:17,000 --> 01:08:23,000
它的是等文件系统或者是某种方式来来更新东西的

1986
01:08:23,000 --> 01:08:26,000
这里有个问题就是你可能它会更新到一半

1987
01:08:26,000 --> 01:08:28,000
比如你同时改了五个文件对吧

1988
01:08:28,000 --> 01:08:32,000
它只你它但是你那个文件是每个到每次都要触发一个事件的嘛

1989
01:08:33,000 --> 01:08:35,000
就可能你你在

1990
01:08:35,000 --> 01:08:37,000
所以会导致多次 build

1991
01:08:37,000 --> 01:08:38,000
多次 build 的本身

1992
01:08:38,000 --> 01:08:39,000
但是没有什么问题

1993
01:08:39,000 --> 01:08:40,000
如果速度快的话

1994
01:08:40,000 --> 01:08:42,000
但是因为首先速度不快

1995
01:08:42,000 --> 01:08:43,000
特别是大战点多次 build 的就很慢

1996
01:08:43,000 --> 01:08:45,000
很费这个服务器的资源

1997
01:08:45,000 --> 01:08:48,000
有如果你是单核的一个 VPS 可能会直接卡死

1998
01:08:48,000 --> 01:08:49,000
但这个都不是最核心的问题

1999
01:08:49,000 --> 01:08:51,000
最核心的问题是它如果你是改了一半

2000
01:08:51,000 --> 01:08:54,000
它可能中间状态是不稳定的对吧

2001
01:08:54,000 --> 01:08:57,000
就是它不是一个比如你改了模板

2002
01:08:57,000 --> 01:08:58,000
举个例子

2003
01:08:58,000 --> 01:09:00,000
你可能你改三个模板文件

2004
01:09:00,000 --> 01:09:01,000
它只同步到一个模板文件

2005
01:09:01,000 --> 01:09:03,000
那你会可能中间那些引用就会是错的

2006
01:09:03,000 --> 01:09:06,000
你 build 的失败就会 build 的失败

2007
01:09:06,000 --> 01:09:08,000
这不是什么大问题啊

2008
01:09:08,000 --> 01:09:09,000
嗯

2009
01:09:09,000 --> 01:09:10,000
depend 就如果 build 失败

2010
01:09:10,000 --> 01:09:13,000
就有就有可能看到中间的一个中间状态

2011
01:09:13,000 --> 01:09:16,000
然后如果它又刚好被缓存下的话

2012
01:09:16,000 --> 01:09:18,000
就会很 ugly 嘛

2013
01:09:18,000 --> 01:09:19,000
就不是一个很优雅的方案

2014
01:09:19,000 --> 01:09:23,000
其实对不小心把密码或者情书写上去了

2015
01:09:23,000 --> 01:09:25,000
然后不会这么惨

2016
01:09:25,000 --> 01:09:28,000
就是终止不会这么惨吧

2017
01:09:28,000 --> 01:09:31,000
但但是就是这个我觉得这不是一个优雅的方案

2018
01:09:31,000 --> 01:09:33,000
然后还有一个问题就是刚才讲的嘛

2019
01:09:33,000 --> 01:09:34,000
要命令好像就同步

2020
01:09:34,000 --> 01:09:36,000
它其中始终是一个

2021
01:09:36,000 --> 01:09:36,000
我觉得

2022
01:09:37,000 --> 01:09:38,000
不够

2023
01:09:38,000 --> 01:09:39,000
用户友好的一个方案

2024
01:09:39,000 --> 01:09:41,000
所以在 Apple

2025
01:09:41,000 --> 01:09:44,000
Fast 那个版本我是用了另外一种方法

2026
01:09:44,000 --> 01:09:45,000
就是用 git 来来同步

2027
01:09:45,000 --> 01:09:50,000
然后我是在 github 上面装了去建了一个那个 repository

2028
01:09:50,000 --> 01:09:53,000
然后用那个 github 有一个 webhook

2029
01:09:53,000 --> 01:09:55,000
这个这个接口

2030
01:09:55,000 --> 01:09:57,000
就是它可以等你每次 commit

2031
01:09:57,000 --> 01:10:00,000
它会它会给

2032
01:10:00,000 --> 01:10:04,000
其实就是 git 自己的 hook 在 github 上面的延伸

2033
01:10:04,000 --> 01:10:06,000
对对对对对

2034
01:10:06,000 --> 01:10:07,000
对对就是就是

2035
01:10:07,000 --> 01:10:10,000
就是大概是说你可以自己建一个

2036
01:10:10,000 --> 01:10:13,000
你在服务器上建一个这个 web server

2037
01:10:13,000 --> 01:10:18,000
然后真听这个 github 发过来的这个这个这个事件

2038
01:10:18,000 --> 01:10:21,000
然后它你就会知道有一个完完整整的这个 commit 已经过来了

2039
01:10:21,000 --> 01:10:22,000
比如说你不会出现

2040
01:10:22,000 --> 01:10:24,000
你是看你一个 commit 改了五个文件

2041
01:10:24,000 --> 01:10:27,000
你不会说只只只修改到三个文件

2042
01:10:27,000 --> 01:10:30,000
因为你整个 commit 铺下来肯定是就三五个文件全部都改过了嘛

2043
01:10:30,000 --> 01:10:31,000
对吧

2044
01:10:31,000 --> 01:10:31,000
对

2045
01:10:31,000 --> 01:10:33,000
这就解决了第一个问题

2046
01:10:33,000 --> 01:10:36,000
然后就是然后 git 你铺回来之后

2047
01:10:36,000 --> 01:10:37,000
它不是有一个 post

2048
01:10:37,000 --> 01:10:39,000
merge 这个 hook 嘛

2049
01:10:39,000 --> 01:10:40,000
本地的

2050
01:10:40,000 --> 01:10:41,000
而且在那里写个脚本

2051
01:10:41,000 --> 01:10:43,000
然后在那里运行一下生成就好

2052
01:10:43,000 --> 01:10:45,000
这个整个过程还是蛮优雅的

2053
01:10:45,000 --> 01:10:47,000
然后 post merge 还是 post commit

2054
01:10:47,000 --> 01:10:49,000
post merge 有 post merge 这个东西吗

2055
01:10:49,000 --> 01:10:50,000
post merge 是在

2056
01:10:50,000 --> 01:10:51,000
post commit

2057
01:10:51,000 --> 01:10:55,000
post 应该是 post commit post receive post

2058
01:10:55,000 --> 01:10:56,000
有 post merge

2059
01:10:56,000 --> 01:10:58,000
post merge 是发生在就是

2060
01:10:58,000 --> 01:10:59,000
比如说你因为你在服务器上

2061
01:10:59,000 --> 01:11:01,000
你肯定要把那个东西整个那个 report

2062
01:11:01,000 --> 01:11:02,000
所以抓下来嘛

2063
01:11:02,000 --> 01:11:04,000
那个源对吧

2064
01:11:04,000 --> 01:11:04,000
然后它你

2065
01:11:04,000 --> 01:11:06,000
可是不是每一次都会发生 merge 啊

2066
01:11:06,000 --> 01:11:07,000
你 git post

2067
01:11:07,000 --> 01:11:07,000
pull 的话

2068
01:11:07,000 --> 01:11:10,000
它有可能只是 false forward

2069
01:11:10,000 --> 01:11:13,000
不你是 git pool 嘛

2070
01:11:13,000 --> 01:11:14,000
git pool 的话有可能是 fast forward

2071
01:11:14,000 --> 01:11:18,000
fast forward 不会产生 merge

2072
01:11:18,000 --> 01:11:18,000
你确定吗

2073
01:11:18,000 --> 01:11:21,000
我记得 git pool 好像默认是 git fetch

2074
01:11:21,000 --> 01:11:25,000
git pool 是等于 git fetch 加 git merge

2075
01:11:25,000 --> 01:11:28,000
然后 fast forward 是在 merge 过程中实现的

2076
01:11:28,000 --> 01:11:29,000
不但是这个 merge

2077
01:11:29,000 --> 01:11:31,000
不你的 merge 是只会产生 merge

2078
01:11:31,000 --> 01:11:32,000
commit merge

2079
01:11:32,000 --> 01:11:33,000
不不不不

2080
01:11:33,000 --> 01:11:35,000
就只是 git merge

2081
01:11:35,000 --> 01:11:36,000
就是把那个 head 加到

2082
01:11:36,000 --> 01:11:39,000
就是只是把当前的 local branch

2083
01:11:39,000 --> 01:11:41,000
同步到 remote branch 上

2084
01:11:41,000 --> 01:11:43,000
这叫 merge

2085
01:11:43,000 --> 01:11:44,000
对对对对对对

2086
01:11:44,000 --> 01:11:45,000
应该是这样子

2087
01:11:45,000 --> 01:11:46,000
我读那个

2088
01:11:46,000 --> 01:11:48,000
如果读那个文档没没理解错的话

2089
01:11:48,000 --> 01:11:50,000
但可能我理解错的话

2090
01:11:50,000 --> 01:11:51,000
你去看一遍

2091
01:11:51,000 --> 01:11:53,000
就是整个过程就是说

2092
01:11:53,000 --> 01:11:56,000
就是在那个 git post merge

2093
01:11:56,000 --> 01:12:01,000
那个那个勾子里面调用这个金属蛋生成器跑一遍就完成了

2094
01:12:01,000 --> 01:12:04,000
然后也不会出现这种很诡异的状况

2095
01:12:04,000 --> 01:12:06,000
然后还有一个比较厉害的地方就是我

2096
01:12:06,000 --> 01:12:09,000
可以你知道 github 的那个 web 界面其实做的还不错嘛

2097
01:12:09,000 --> 01:12:13,000
然后你可以直接在上面添加文件或者编辑文件嘛

2098
01:12:14,000 --> 01:12:20,000
所以其实我是把 github 的这个就是 web interface 当成了一个 CMS 来用

2099
01:12:21,000 --> 01:12:24,000
然后现在 github 上面可以创建新文件了吗

2100
01:12:24,000 --> 01:12:25,000
可以啊

2101
01:12:25,000 --> 01:12:29,000
你是那个在上面有个这个路径内那个栏有一个加号

2102
01:12:29,000 --> 01:12:30,000
就是创建文件或者是目录

2103
01:12:30,000 --> 01:12:34,000
因为我记得以前我我我好像想要做同样的事情的时候

2104
01:12:34,000 --> 01:12:35,000
我就懊恼的发现 github

2105
01:12:35,000 --> 01:12:36,000
虽然可以 github

2106
01:12:36,000 --> 01:12:37,000
虽然可以改文件

2107
01:12:37,000 --> 01:12:39,000
但是不能产生新文件

2108
01:12:39,000 --> 01:12:41,000
因为他那个不是太显眼啊

2109
01:12:41,000 --> 01:12:42,000
你要去在那个

2110
01:12:42,000 --> 01:12:45,000
就你开一个任意开个 github repository 的话

2111
01:12:45,000 --> 01:12:47,000
他会在那叫什么位置

2112
01:12:47,000 --> 01:12:52,000
就是顶他会显示一堆文件列表的顶上不是有一个当前那个路径吗

2113
01:12:53,000 --> 01:12:55,000
那个那个墨有一个加号

2114
01:12:55,000 --> 01:12:57,000
你点那个加号就是可以添加新文件

2115
01:12:59,000 --> 01:13:01,000
然后如果你要再添个目录的话

2116
01:13:01,000 --> 01:13:03,000
你就加个斜杠就好了

2117
01:13:04,000 --> 01:13:06,000
哦对行

2118
01:13:06,000 --> 01:13:07,000
下次可以试一试

2119
01:13:07,000 --> 01:13:11,000
我是很久没有在 github 上之前修改文件

2120
01:13:11,000 --> 01:13:15,000
好像只有一两次要去改一个比物的时候用过

2121
01:13:15,000 --> 01:13:16,000
对对

2122
01:13:16,000 --> 01:13:18,000
我觉得这个这个用用力就特别好

2123
01:13:18,000 --> 01:13:19,000
就刚才我讲了

2124
01:13:19,000 --> 01:13:22,000
我不喜欢去碰

2125
01:13:22,000 --> 01:13:22,000
这样不对

2126
01:13:22,000 --> 01:13:24,000
其实我还是蛮喜欢碰命令

2127
01:13:24,000 --> 01:13:26,000
就是在写作东西的时候

2128
01:13:26,000 --> 01:13:27,000
我不想去碰命令

2129
01:13:27,000 --> 01:13:30,000
现在知道这个整个在写作的时候

2130
01:13:30,000 --> 01:13:31,000
我写 blog 本身的时候

2131
01:13:31,000 --> 01:13:36,000
我觉得可能最大的痛苦就在于用 vim 的时候输入法师太糟糕了

2132
01:13:36,000 --> 01:13:40,000
因为不适合写文章只能写程序

2133
01:13:40,000 --> 01:13:48,000
对其实对其实问和输入法是有一曲也不是一曲同工

2134
01:13:48,000 --> 01:13:51,000
就是他们的运作机里其实一样的输入法在中文是一种 mode

2135
01:13:51,000 --> 01:13:53,000
对英文是一种 mode

2136
01:13:53,000 --> 01:13:58,000
对然后 vim 要在你英文的 mode 上加入 commentmode editmode

2137
01:13:58,000 --> 01:14:02,000
所以你大脑要维护这三个 mode 之间的状态机器

2138
01:14:02,000 --> 01:14:03,000
好像就其实还是挺累的

2139
01:14:03,000 --> 01:14:04,000
对啊对啊

2140
01:14:04,000 --> 01:14:05,000
所以在唯一一个在写文章的时候是写文章的 mode

2141
01:14:05,000 --> 01:14:06,000
所以在唯一一个在写文章的时候是写文章的 mode

2142
01:14:06,000 --> 01:14:08,000
写 blog 的时候我们要把 vim

2143
01:14:08,000 --> 01:14:19,000
对啊就现在那个 apple for us 这个这个状态就是比如说我跟就把直接把这个这个 git repository 跟别人共享嘛

2144
01:14:19,000 --> 01:14:20,000
就是把它加入那个 collaborator

2145
01:14:20,000 --> 01:14:22,000
它也可以直接在那边写东西

2146
01:14:22,000 --> 01:14:24,000
然后就可以发布

2147
01:14:24,000 --> 01:14:26,000
它整个过程就很简单

2148
01:14:26,000 --> 01:14:29,000
就是 git 上面添加一个新文件或修改一个文件

2149
01:14:29,000 --> 01:14:32,000
然后那边产生一个这个 commit 的事件

2150
01:14:32,000 --> 01:14:36,000
然后 github 发一个这个 webhook 的情形

2151
01:14:36,000 --> 01:14:37,000
然后那边产生一个这个 webhook 的情形

2152
01:14:37,000 --> 01:14:37,000
然后那边产生一个这个 webhook 的情形

2153
01:14:37,000 --> 01:14:38,000
然后到我的服务器

2154
01:14:38,000 --> 01:14:40,000
我的服务器把那个改动铺回来

2155
01:14:40,000 --> 01:14:43,000
然后跑一遍那个 post merge 的钩子

2156
01:14:43,000 --> 01:14:47,000
然后在那钩子里面再跑一遍那个生成进展点的程序

2157
01:14:47,000 --> 01:14:49,000
然后这个过程就完成了

2158
01:14:49,000 --> 01:14:52,000
整个过程我不需要去接触命令行

2159
01:14:52,000 --> 01:14:53,000
我也不需要维护

2160
01:14:53,000 --> 01:14:58,000
对啊对啊就感觉超爽现在

2161
01:14:58,000 --> 01:15:02,000
你知道一个网站叫 devopsreactions

2162
01:15:02,000 --> 01:15:06,000
devopsreactions.tumblr.com

2163
01:15:06,000 --> 01:15:06,000
不是

2164
01:15:06,000 --> 01:15:08,000
你可以去看一下

2165
01:15:08,000 --> 01:15:10,000
这上面有非常非常搞笑的 gif

2166
01:15:10,000 --> 01:15:11,000
gif 动画

2167
01:15:11,000 --> 01:15:13,000
然后有一个就是

2168
01:15:13,000 --> 01:15:20,000
demonstrating end-to-end automation to new employees

2169
01:15:20,000 --> 01:15:22,000
然后对

2170
01:15:22,000 --> 01:15:23,000
我现在把这个链接发给你

2171
01:15:23,000 --> 01:15:29,000
然后你到时候我一定要把这个贴在节目的链接里面

2172
01:15:29,000 --> 01:15:33,000
这个非常精确的描述了一个不知道你的整个工作流程

2173
01:15:33,000 --> 01:15:36,000
人第一次听到你们整个工作流程之后的感受

2174
01:15:36,000 --> 01:15:40,000
但是你有一点我觉得不得不承认

2175
01:15:40,000 --> 01:15:43,000
就是我把这个整个这个 workflow 设置好之后

2176
01:15:43,000 --> 01:15:47,000
就是你会就怎么讲

2177
01:15:47,000 --> 01:15:51,000
刚才我为什么讲我不喜欢去跑命令行

2178
01:15:51,000 --> 01:15:53,000
去生成一遍这个东西的一个最主要的原因

2179
01:15:53,000 --> 01:15:57,000
就是因为它会添加一个叫做摩擦力

2180
01:15:57,000 --> 01:15:58,000
friction 在里面

2181
01:15:58,000 --> 01:16:01,000
就会让我觉得还有一个步骤没跑完好吗

2182
01:16:01,000 --> 01:16:04,000
如果我要反复去做这个事情就很麻烦嘛

2183
01:16:04,000 --> 01:16:06,000
但是一旦把这个东西整个里面的这个东西都做好之后呢

2184
01:16:06,000 --> 01:16:07,000
整个流程自动化以后

2185
01:16:07,000 --> 01:16:08,000
你不需要操心这种事情

2186
01:16:08,000 --> 01:16:10,000
你就只需要去写或者去改

2187
01:16:10,000 --> 01:16:14,000
你会很愿意去改它的这个比如改错别字

2188
01:16:14,000 --> 01:16:17,000
改标点符号或者改一些模板上的小调整

2189
01:16:17,000 --> 01:16:18,000
你会很愿意去做

2190
01:16:18,000 --> 01:16:19,000
因为整个事情就很简单

2191
01:16:19,000 --> 01:16:24,000
你只要在 GitHub 上编辑一个编辑一个页面保存就可以了

2192
01:16:25,000 --> 01:16:28,000
现在就是非常 frictionless

2193
01:16:28,000 --> 01:16:30,000
非常 smooth 的一个过程

2194
01:16:31,000 --> 01:16:32,000
对

2195
01:16:32,000 --> 01:16:36,000
这个词也经常被用于形容一个理想的软件发布

2196
01:16:36,000 --> 01:16:39,000
流程的这么一个状态

2197
01:16:39,000 --> 01:16:42,000
就是程序员只需要写好

2198
01:16:42,000 --> 01:16:43,000
git push 就可以了

2199
01:16:43,000 --> 01:16:45,000
写好一个测试写好一个功能

2200
01:16:45,000 --> 01:16:49,000
然后只需要 commit push

2201
01:16:49,000 --> 01:16:51,000
然后所有的一切都会自动的被部署

2202
01:16:51,000 --> 01:16:53,000
自动的被测试

2203
01:16:53,000 --> 01:16:55,000
自动的进行回归测试

2204
01:16:55,000 --> 01:16:56,000
自动生成一个 netly build

2205
01:16:56,000 --> 01:16:59,000
然后告诉你软件是不是正常运行

2206
01:16:59,000 --> 01:17:00,000
你还能自动上线

2207
01:17:00,000 --> 01:17:01,000
对这个是最好

2208
01:17:01,000 --> 01:17:02,000
对对

2209
01:17:02,000 --> 01:17:06,000
其实你的对其实你写 blog 的过程非常像

2210
01:17:06,000 --> 01:17:08,000
某种软件的发布流程

2211
01:17:08,000 --> 01:17:09,000
对对

2212
01:17:09,000 --> 01:17:12,000
就发布一个静态站点

2213
01:17:12,000 --> 01:17:13,000
对

2214
01:17:13,000 --> 01:17:16,000
但我觉得其实这也这也恰恰是一个门槛

2215
01:17:16,000 --> 01:17:19,000
就是呃为什么

2216
01:17:19,000 --> 01:17:24,000
换用 static static general 的人都是程序员

2217
01:17:24,000 --> 01:17:25,000
因为太麻烦了

2218
01:17:25,000 --> 01:17:29,000
因为程序员只有不怕麻烦的人才会搞这么麻烦的事

2219
01:17:29,000 --> 01:17:32,000
呃或者反过来说

2220
01:17:32,000 --> 01:17:33,000
我觉得

2221
01:17:33,000 --> 01:17:36,000
普通人且不论普通人有没有这个动作

2222
01:17:36,000 --> 01:17:37,000
就是说

2223
01:17:37,000 --> 01:17:38,000
呃

2224
01:17:38,000 --> 01:17:39,000
普通人之所以不会用

2225
01:17:39,000 --> 01:17:40,000
不会去用这种 static

2226
01:17:40,000 --> 01:17:43,000
side genic 的原因之一就是因为

2227
01:17:43,000 --> 01:17:46,000
既迄今为止没有一个 static

2228
01:17:46,000 --> 01:17:51,000
呃 side genic 是支持所谓的所见及所得编辑吧

2229
01:17:51,000 --> 01:17:54,000
还是有我只不过咕咽了

2230
01:17:54,000 --> 01:17:55,000
generator 肯定是不可以

2231
01:17:55,000 --> 01:17:56,000
如果你说 editor 肯定是有的

2232
01:17:56,000 --> 01:17:58,000
之前那些什么 front page

2233
01:17:58,000 --> 01:18:00,000
或者说因为绝大多数

2234
01:18:00,000 --> 01:18:02,000
你比如说我们刚才讨论的几个呃

2235
01:18:02,000 --> 01:18:04,000
Jaco 呀也好啊

2236
01:18:04,000 --> 01:18:05,000
Middleman 也好啊

2237
01:18:05,000 --> 01:18:06,000
Pelican 也好啊

2238
01:18:06,000 --> 01:18:07,000
还是 Hide 也好啊

2239
01:18:07,000 --> 01:18:10,000
还是包括没有提到的什么 clay 啊

2240
01:18:10,000 --> 01:18:11,000
还是 hexo 啊

2241
01:18:11,000 --> 01:18:12,000
这种嗯

2242
01:18:12,000 --> 01:18:16,000
其实每一个包括包括 yugo 在内都只支持 markdown

2243
01:18:16,000 --> 01:18:21,000
或者是另外一种什么样的就是制标语言写成的

2244
01:18:21,000 --> 01:18:26,000
半呃半原原代码式的呃文档

2245
01:18:26,000 --> 01:18:29,000
对对然后把它转转换成静态页面

2246
01:18:29,000 --> 01:18:30,000
嗯

2247
01:18:30,000 --> 01:18:33,000
有没有一种生成器支持

2248
01:18:33,000 --> 01:18:35,000
就或者说是更小白友好的

2249
01:18:35,000 --> 01:18:38,000
可以让用户通过某种方式

2250
01:18:38,000 --> 01:18:42,000
三毛三位来写出这种所见其所得的东西呢

2251
01:18:42,000 --> 01:18:44,000
有啊 tumblr

2252
01:18:44,000 --> 01:18:48,000
tumblr 不是一个静态生成器啊

2253
01:18:48,000 --> 01:18:49,000
这就是问题所在

2254
01:18:49,000 --> 01:18:50,000
为什么小白用户他不懂这些

2255
01:18:50,000 --> 01:18:52,000
他为什么需要去区分什么是静态

2256
01:18:52,000 --> 01:18:53,000
什么是动态

2257
01:18:53,000 --> 01:18:55,000
他不根本没有关系啊

2258
01:18:55,000 --> 01:18:57,000
对吧

2259
01:18:57,000 --> 01:18:58,000
好吧

2260
01:18:58,000 --> 01:19:03,000
我刚才想的是如果一定要一定有一位某位小白用户勇敢的听了我们的节目

2261
01:19:03,000 --> 01:19:04,000
然后想要去试试

2262
01:19:04,000 --> 01:19:11,000
静态生成器去苦于没有办法大概知道自己的网站跑起来是什么样子的话

2263
01:19:11,000 --> 01:19:13,000
我觉得其实有一个比较好方案

2264
01:19:13,000 --> 01:19:19,000
就是用 moe 之类的呃 markdown 编辑器来写 markdown

2265
01:19:19,000 --> 01:19:27,000
然后在 moe 里面看到这个及时生成出来的基本上带了格式这么一个预览

2266
01:19:27,000 --> 01:19:34,000
然后在保存之后很多静态网站生成器都非常贴心的提供了及时生成的预览

2267
01:19:34,000 --> 01:19:36,000
其实这个是预览功能

2268
01:19:36,000 --> 01:19:38,000
你如果有什么源代码

2269
01:19:38,000 --> 01:19:41,000
如果你某一个原文件有修改

2270
01:19:41,000 --> 01:19:43,000
他会自动把整个网站生成一遍

2271
01:19:43,000 --> 01:19:48,000
然后在你的本地跑一个浏览器来把生成好的网站展现给你看

2272
01:19:48,000 --> 01:19:51,000
感觉有点其实这也算是某种意义上

2273
01:19:51,000 --> 01:19:53,000
但是我所见即受得了感觉好热啊

2274
01:19:53,000 --> 01:19:55,000
哎不过刚才你提到有点我觉得很好啊

2275
01:19:55,000 --> 01:19:58,000
就是呃普通用户用的话

2276
01:19:58,000 --> 01:20:03,000
你刚才讲的比显然能去用 github 做编辑器的人还是多少有点 gig 范儿呢

2277
01:20:03,000 --> 01:20:09,000
呃对你不能指望一个普通人

2278
01:20:09,000 --> 01:20:11,000
刚刚什么是 git

2279
01:20:11,000 --> 01:20:16,000
不能指望某些人去用只会用这个只他能登录 wordpress 就不错了

2280
01:20:16,000 --> 01:20:18,000
然后能在这个 wordpress 后台里面

2281
01:20:18,000 --> 01:20:24,000
呃利用那个所见即所觉的编辑器把自己的文章大概格式一下

2282
01:20:24,000 --> 01:20:25,000
这已经非常不错了

2283
01:20:25,000 --> 01:20:27,000
你要强迫他去用 github 这种东西

2284
01:20:27,000 --> 01:20:30,000
让他理解什么叫 merge commit

2285
01:20:30,000 --> 01:20:32,000
就还是不错

2286
01:20:32,000 --> 01:20:33,000
嗯

2287
01:20:33,000 --> 01:20:34,000
这太强人所难了

2288
01:20:34,000 --> 01:20:41,000
对对对不过嗯这其实又反而变成了那个就是动态站点的一个抢向啊

2289
01:20:41,000 --> 01:20:48,000
就是你知道 wordpress 是有一个叫叫什么 publish 接口的

2290
01:20:48,000 --> 01:20:54,000
就还有一个接口可以让第三方程序通过那个接口给他发布这个网站

2291
01:20:54,000 --> 01:20:57,000
然后有个有个叫什么啊

2292
01:20:57,000 --> 01:21:00,000
什么通过第三方接口 smlrpc 嘛

2293
01:21:00,000 --> 01:21:02,000
就是对对对对对对对对对

2294
01:21:02,000 --> 01:21:05,000
就是从 smlrpc 到 php 那个好多漏洞都是从那来的

2295
01:21:05,000 --> 01:21:09,000
对吧不管但是就是从我们先不讲他的底层实现漂亮漂亮

2296
01:21:09,000 --> 01:21:10,000
对他有这么一个功能

2297
01:21:10,000 --> 01:21:14,000
然后很多人会比如说就刚才我们讲你如果精彩网站生产的话

2298
01:21:14,000 --> 01:21:18,000
你还是在本地编辑一个 markdown 文件放进那个可对应的目录

2299
01:21:18,000 --> 01:21:20,000
或者是你要在 github 上编辑一个东西

2300
01:21:20,000 --> 01:21:26,000
你在这种事情在非 pc 或者 minecraft 上是做不到的嘛

2301
01:21:26,000 --> 01:21:28,000
你比如你在手机上就很麻烦

2302
01:21:28,000 --> 01:21:30,000
你在这个 ipad 上也也做不到这件事情

2303
01:21:30,000 --> 01:21:31,000
但是

2304
01:21:31,000 --> 01:21:33,000
如果你有那种像 wordpress 的接口的话

2305
01:21:33,000 --> 01:21:36,000
你反而是可以做到这件事情的

2306
01:21:36,000 --> 01:21:38,000
你可以在用一个 app 嘛

2307
01:21:38,000 --> 01:21:40,000
然后在编辑文章然后点 publish

2308
01:21:40,000 --> 01:21:43,000
这才是对对这个普通用户友好友好的一个方式嘛

2309
01:21:43,000 --> 01:21:55,000
我相信很多曾经的所谓 blogpublish software 也支持一键保存之后

2310
01:21:55,000 --> 01:21:57,000
同时发布到多个 blog 平台

2311
01:21:57,000 --> 01:21:59,000
其中就包括 wordpress

2312
01:21:59,000 --> 01:22:00,000
还有这种神器

2313
01:22:00,000 --> 01:22:01,000
有个这样的

2314
01:22:01,000 --> 01:22:05,000
对 blog 就是写 blog 用的本机软件

2315
01:22:05,000 --> 01:22:06,000
可是这样意义何在呢

2316
01:22:06,000 --> 01:22:08,000
一个人会同时写很多个 blog

2317
01:22:08,000 --> 01:22:13,000
这种软件存在就是没意义

2318
01:22:13,000 --> 01:22:14,000
所以现在没有人用了

2319
01:22:14,000 --> 01:22:16,000
没有人在提起这种事

2320
01:22:16,000 --> 01:22:18,000
但是我是货真价实的用过这种东西

2321
01:22:18,000 --> 01:22:19,000
好吧

2322
01:22:19,000 --> 01:22:22,000
而且当时非常按人神伤的觉得

2323
01:22:22,000 --> 01:22:25,000
我自己写的这个 blog 系统不能支持这种远程 ipi

2324
01:22:25,000 --> 01:22:26,000
使得太费了

2325
01:22:26,000 --> 01:22:30,000
其实如果你现在做一个这种接口也不错啊

2326
01:22:30,000 --> 01:22:32,000
你把那个接口写一弄一下

2327
01:22:32,000 --> 01:22:35,000
然后这边写一个那个什么 web server

2328
01:22:35,000 --> 01:22:36,000
然后接收那个请求

2329
01:22:36,000 --> 01:22:39,000
然后把那个请求做成一个文件放到本地目录

2330
01:22:39,000 --> 01:22:40,000
然后再跑一遍

2331
01:22:40,000 --> 01:22:42,000
你想了应该不是特别难的一件事情

2332
01:22:42,000 --> 01:22:44,000
对也可以做一个 kata 是吧

2333
01:22:44,000 --> 01:22:47,000
对又是一个又是一个 kata

2334
01:22:47,000 --> 01:22:48,000
only problem is xml

2335
01:22:48,000 --> 01:22:49,000
你又可以用 json 嘛

2336
01:22:49,000 --> 01:22:50,000
还不错

2337
01:22:50,000 --> 01:22:51,000
但是你还得

2338
01:22:51,000 --> 01:22:55,000
但是这个就是你得去说服那些第三方的

2339
01:22:55,000 --> 01:22:57,000
那些人的负责人员

2340
01:22:57,000 --> 01:23:01,000
你得去说服那些第三方的那个 app 的

2341
01:23:01,000 --> 01:23:06,000
就是什么写博客软件的作者支持你这个协议

2342
01:23:06,000 --> 01:23:07,000
那是另外一回事

2343
01:23:07,000 --> 01:23:10,000
所以最好还是实现一个既有的协议

2344
01:23:10,000 --> 01:23:12,000
会比较兼容性好一点

2345
01:23:12,000 --> 01:23:13,000
嗯哼

2346
01:23:13,000 --> 01:23:15,000
对但是就从应用性来讲

2347
01:23:15,000 --> 01:23:18,000
肯定那种是对普通用户更友好的嘛

2348
01:23:18,000 --> 01:23:21,000
但是这种事情我们肯定是不 care 了

2349
01:23:21,000 --> 01:23:22,000
我们是谁

2350
01:23:22,000 --> 01:23:23,000
我们不是普通用户

2351
01:23:23,000 --> 01:23:26,000
哈哈哈哈哈哈

2352
01:23:27,000 --> 01:23:28,000
嗯

2353
01:23:28,000 --> 01:23:31,000
所以我们现在是要推荐一下

2354
01:23:31,000 --> 01:23:35,000
所有对静态网站生成器的人

2355
01:23:35,000 --> 01:23:39,000
所有对静态网站生成器感兴趣的人

2356
01:23:39,000 --> 01:23:40,000
用一下 yugo 嘛

2357
01:23:40,000 --> 01:23:42,000
嗯

2358
01:23:42,000 --> 01:23:45,000
其实我还不确定它真的是适合所有人

2359
01:23:45,000 --> 01:23:47,000
因为它那个没有插件这一点

2360
01:23:47,000 --> 01:23:50,000
真的是挺大的一个局限的

2361
01:23:50,000 --> 01:23:51,000
但是它的模板

2362
01:23:51,000 --> 01:23:53,000
我觉得对于喜欢折腾的人来说

2363
01:23:53,000 --> 01:23:54,000
或者说对于有

2364
01:23:54,000 --> 01:23:56,000
对于不管这个功能有没有用

2365
01:23:56,000 --> 01:23:58,000
现在问这有没有这个功能的人来说

2366
01:23:58,000 --> 01:24:01,000
我的预购可能并不是非常适合

2367
01:24:01,000 --> 01:24:03,000
对而且它上手也不太容易

2368
01:24:03,000 --> 01:24:04,000
它的那个模板语言嘛

2369
01:24:04,000 --> 01:24:07,000
因为是用了 gold 自带那个

2370
01:24:07,000 --> 01:24:10,000
那个就 gold 标准库自带的那个模板语言

2371
01:24:10,000 --> 01:24:12,000
也不是特别的

2372
01:24:12,000 --> 01:24:13,000
这没有名字

2373
01:24:13,000 --> 01:24:18,000
就叫 htmlslashtemplate

2374
01:24:18,000 --> 01:24:19,000
ok

2375
01:24:19,000 --> 01:24:21,000
但是它那个语法

2376
01:24:21,000 --> 01:24:23,000
就不是非常 intuitive

2377
01:24:23,000 --> 01:24:24,000
评译进人吗

2378
01:24:24,000 --> 01:24:25,000
不语法比较简单

2379
01:24:25,000 --> 01:24:28,000
它那个数据那个 data model 比较奇怪

2380
01:24:28,000 --> 01:24:30,000
可能不是那么直观吧

2381
01:24:30,000 --> 01:24:31,000
我觉得

2382
01:24:32,000 --> 01:24:33,000
就特别是如果你习惯了

2383
01:24:33,000 --> 01:24:34,000
像什么 ginger

2384
01:24:34,000 --> 01:24:37,000
还有 ruby 那些什么 leq 那些 template 的时候

2385
01:24:37,000 --> 01:24:39,000
你在用这个可能会觉得有点奇怪

2386
01:24:39,000 --> 01:24:44,000
而且 yoggle 的 document 是稍微有点差的

2387
01:24:45,000 --> 01:24:46,000
ok

2388
01:24:46,000 --> 01:24:47,000
等一下之意就是

2389
01:24:47,000 --> 01:24:48,000
如果你只会这个 php

2390
01:24:48,000 --> 01:24:50,000
就不要来碰一碰

2391
01:24:50,000 --> 01:24:55,000
就我用那个纯粹就只是因为 appleforce 的

2392
01:24:55,000 --> 01:24:57,000
这个就是你到这个量

2393
01:24:57,000 --> 01:25:02,000
就你到这个量及其他的那些机遇脚本解释脚本的生成器

2394
01:25:02,000 --> 01:25:06,000
都是没有办法在几秒之内搞定的嘛

2395
01:25:06,000 --> 01:25:08,000
所以也只有这一招了

2396
01:25:08,000 --> 01:25:13,000
然后就是我自从对爱上勾这个语言之后

2397
01:25:13,000 --> 01:25:16,000
对这个单个文件单个可执行文件

2398
01:25:16,000 --> 01:25:19,000
即可部署这一点是非常的赞

2399
01:25:19,000 --> 01:25:21,000
因为我是一个很懒的人

2400
01:25:21,000 --> 01:25:23,000
我不想去操作服务器

2401
01:25:25,000 --> 01:25:29,000
虽然我一直在操纵各种服务器

2402
01:25:29,000 --> 01:25:31,000
但是我非常讨厌这一点

2403
01:25:31,000 --> 01:25:34,000
所以什么干一行恨一行非常正常

2404
01:25:34,000 --> 01:25:36,000
什么依赖管理啊

2405
01:25:36,000 --> 01:25:39,000
什么部署的版本管理啊

2406
01:25:39,000 --> 01:25:40,000
啊

2407
01:25:40,000 --> 01:25:41,000
not my style

2408
01:25:41,000 --> 01:25:42,000
对

2409
01:25:42,000 --> 01:25:44,000
知道越多就越痛恨他

2410
01:25:44,000 --> 01:25:46,000
但是我觉得勾当这个特性

2411
01:25:46,000 --> 01:25:48,000
可能也跟那个作者有关吧

2412
01:25:48,000 --> 01:25:50,000
作者叫 steve francia

2413
01:25:50,000 --> 01:25:54,000
他就是我去搜这个 yoggle 这个工具的时候

2414
01:25:54,000 --> 01:25:58,000
才知道作者原来就是大名鼎鼎的 spf 13

2415
01:25:58,000 --> 01:26:01,000
我知道这个名字最早是因为他的那个

2416
01:26:01,000 --> 01:26:03,000
the ultimate vim distribution

2417
01:26:03,000 --> 01:26:07,000
就是他在比较早的时候推出了一个

2418
01:26:07,000 --> 01:26:11,000
就算是 vim 的爱好者

2419
01:26:11,000 --> 01:26:16,000
爱好者所做的这么一个多插件

2420
01:26:16,000 --> 01:26:19,000
白金 platinum 典藏版吧这种感觉

2421
01:26:19,000 --> 01:26:21,000
但是我一直不明白这个的 point 何在

2422
01:26:21,000 --> 01:26:23,000
这种东西的意义在哪里

2423
01:26:23,000 --> 01:26:30,000
他向你展示了一个大牛所定制出来的 vim 能有多定级

2424
01:26:30,000 --> 01:26:33,000
好吧但是这样学习成本好高啊

2425
01:26:33,000 --> 01:26:36,000
对我曾经用过一段我曾经用过他一段时间

2426
01:26:36,000 --> 01:26:40,000
但是毕竟 vim 这种如果你既然你是一个会敢于

2427
01:26:40,000 --> 01:26:43,000
或者说已经沦落到要用 vim 的人

2428
01:26:43,000 --> 01:26:45,000
你肯定是一个需求非常特别

2429
01:26:45,000 --> 01:26:51,000
非常没有一种所谓那个叫什么 stop version

2430
01:26:51,000 --> 01:26:52,000
就是没有一个

2431
01:26:53,000 --> 01:26:57,000
从货架上直接拿下来的产品能够完全满足你需求的人

2432
01:26:57,000 --> 01:27:00,000
所以你肯定要把这个东西各种摆弄

2433
01:27:00,000 --> 01:27:04,000
而 spf 13 摆弄出来的这么一个 ultimate vim

2434
01:27:04,000 --> 01:27:10,000
最多起到的作用是不是让小白能够更快的上手

2435
01:27:10,000 --> 01:27:15,000
而是让喜欢折腾的人可以看到这个东西怎么可以被折腾

2436
01:27:15,000 --> 01:27:20,000
包括他组织这个 vim 配置文件的方式啊

2437
01:27:20,000 --> 01:27:21,000
包括管理插件的方式啊

2438
01:27:21,000 --> 01:27:23,000
包括他配置插件的方式啊

2439
01:27:23,000 --> 01:27:26,000
包括他写了一些非常实用的小程序

2440
01:27:26,000 --> 01:27:28,000
所以它是一个标杆的作用

2441
01:27:28,000 --> 01:27:32,000
并不是让你让你直接真的去用这个东西本身

2442
01:27:32,000 --> 01:27:35,000
我相信他还是希望有人能用的

2443
01:27:35,000 --> 01:27:42,000
但我也觉得有如果真的有人会需要用到他所提供的那些所有功能

2444
01:27:42,000 --> 01:27:46,000
那这个人绝对不会满足于就这么用这些功能

2445
01:27:46,000 --> 01:27:47,000
对一定会去定制

2446
01:27:47,000 --> 01:27:48,000
有些拗口啊

2447
01:27:48,000 --> 01:27:52,000
一定会手痒会去折腾他

2448
01:27:52,000 --> 01:27:53,000
对

2449
01:27:53,000 --> 01:27:55,000
对这个人毕竟他也是个很牛的人

2450
01:27:55,000 --> 01:27:59,000
他是芒果的所谓的 developer advocate

2451
01:27:59,000 --> 01:28:00,000
就是我就

2452
01:28:00,000 --> 01:28:07,000
死者代言人是是一部小说用的

2453
01:28:07,000 --> 01:28:08,000
developer advocate

2454
01:28:08,000 --> 01:28:10,000
开发者代言人

2455
01:28:10,000 --> 01:28:11,000
然后

2456
01:28:11,000 --> 01:28:12,000
这就是那个 soul 一下这个职位

2457
01:28:12,000 --> 01:28:14,000
evangelist 的意思吗

2458
01:28:14,000 --> 01:28:16,000
对这个职位到底什么意思

2459
01:28:16,000 --> 01:28:21,000
就是他是为本公司的开发者说话的这么一个人

2460
01:28:21,000 --> 01:28:22,000
就是他会

2461
01:28:22,000 --> 01:28:26,000
他会向外面人宣称本公司产品都用不好

2462
01:28:26,000 --> 01:28:29,000
就忽悠忽悠开发者的人

2463
01:28:29,000 --> 01:28:31,000
对对开发者大呼应可以这么理解

2464
01:28:31,000 --> 01:28:36,000
但是能够做到这种位置的人基本上都非常牛

2465
01:28:36,000 --> 01:28:37,000
嗯哼

2466
01:28:37,000 --> 01:28:38,000
对

2467
01:28:38,000 --> 01:28:40,000
对所以大家可以去尝试一下

2468
01:28:40,000 --> 01:28:43,000
但是痛苦程度

2469
01:28:43,000 --> 01:28:45,000
你们我已经给你们打过预防针了

2470
01:28:45,000 --> 01:28:46,000
你们自己想想去

2471
01:28:46,000 --> 01:28:51,000
如果 pita 指数 pina 指数太高的话

2472
01:28:51,000 --> 01:28:53,000
本站该不负责

2473
01:28:53,000 --> 01:28:54,000
哈哈哈

2474
01:28:54,000 --> 01:28:55,000
对

2475
01:28:55,000 --> 01:28:56,000
嗯

2476
01:28:56,000 --> 01:28:59,000
所以你有兴趣把你的那个什么那个

2477
01:28:59,000 --> 01:29:01,000
博客占点就切过来吗

2478
01:29:01,000 --> 01:29:05,000
不其实我其实我一直在想我要不要把 type of spiffle

2479
01:29:05,000 --> 01:29:07,000
切到静态生成

2480
01:29:07,000 --> 01:29:09,000
他们还是在 wordpress 上面跑的

2481
01:29:09,000 --> 01:29:11,000
因为对现在还跑到 wordpress 上

2482
01:29:11,000 --> 01:29:13,000
而且比较

2483
01:29:13,000 --> 01:29:15,000
我我那是安全的问题

2484
01:29:15,000 --> 01:29:16,000
我都不回答

2485
01:29:16,000 --> 01:29:18,000
有可能造成安全一块

2486
01:29:18,000 --> 01:29:20,000
真正答案是我不知道

2487
01:29:20,000 --> 01:29:21,000
嗯

2488
01:29:21,000 --> 01:29:22,000
肯定不是死

2489
01:29:22,000 --> 01:29:23,000
我觉得

2490
01:29:23,000 --> 01:29:25,000
不是你就这个版本问题没有任何区别

2491
01:29:25,000 --> 01:29:27,000
你就 wordpress 二三四都是有安全的动作

2492
01:29:27,000 --> 01:29:29,000
你说出来又有什么关系

2493
01:29:30,000 --> 01:29:36,000
不我觉得最大的问题可能是在迁移过程中会有很多什么图片呀

2494
01:29:36,000 --> 01:29:37,000
烂七八糟的需要

2495
01:29:37,000 --> 01:29:39,000
对对这是一个最最特性的

2496
01:29:39,000 --> 01:29:41,000
绝对继续改成相对

2497
01:29:41,000 --> 01:29:49,000
因为呃我不知道你是怎么在你的 blog 或者是 apple for us 是怎么在 blog 上插入图片的

2498
01:29:49,000 --> 01:29:51,000
至少我是所有的图片都放在 flickr 上

2499
01:29:51,000 --> 01:29:53,000
但是 flickr 被国内封了

2500
01:29:53,000 --> 01:29:54,000
但我也无所谓

2501
01:29:54,000 --> 01:29:55,000
所以嗯

2502
01:29:55,000 --> 01:29:56,000
这对于我来说不是什么大的问题

2503
01:29:56,000 --> 01:29:58,000
我就把所有图片传到 flickr 上

2504
01:29:58,000 --> 01:30:03,000
然后用 flickr 的共享功能得到那个把这个图片嵌入网址

2505
01:30:03,000 --> 01:30:04,000
呃一串 html

2506
01:30:04,000 --> 01:30:06,000
然后把这段 html 嵌入到我的文章里面

2507
01:30:06,000 --> 01:30:07,000
嗯

2508
01:30:07,000 --> 01:30:08,000
所有的文章

2509
01:30:08,000 --> 01:30:10,000
所以我的文章基本上全都是天生可依制

2510
01:30:10,000 --> 01:30:11,000
嗯

2511
01:30:11,000 --> 01:30:14,000
但是如果你要把 wordpress 里面的文章导出来

2512
01:30:14,000 --> 01:30:18,000
那就必然涉及到一个 asset management 的问题

2513
01:30:18,000 --> 01:30:19,000
就是你要把 wordpress 里面的文章导出来

2514
01:30:19,000 --> 01:30:20,000
不需要把这些图片放去哪

2515
01:30:20,000 --> 01:30:22,000
不需要那个你传到 wordpress

2516
01:30:22,000 --> 01:30:23,000
哎

2517
01:30:23,000 --> 01:30:25,000
等一下 apple for us 之前在 wordpress 的时候

2518
01:30:25,000 --> 01:30:27,000
那些文章都是上传到 wordpress

2519
01:30:27,000 --> 01:30:29,000
有个什么 wp-content

2520
01:30:29,000 --> 01:30:32,000
然后有一个对 upload 还是什么

2521
01:30:32,000 --> 01:30:33,000
images

2522
01:30:33,000 --> 01:30:34,000
对一个 upload images

2523
01:30:34,000 --> 01:30:35,000
对一个目的面

2524
01:30:35,000 --> 01:30:36,000
然后其实很简单

2525
01:30:36,000 --> 01:30:38,000
你就保留那个路径嘛

2526
01:30:38,000 --> 01:30:40,000
你在那个静态正点生成器

2527
01:30:40,000 --> 01:30:42,000
它不是大部分都会有一个这个 static

2528
01:30:42,000 --> 01:30:44,000
或者是类似的这种或者 public 这种目录

2529
01:30:44,000 --> 01:30:46,000
让你放那种不需要经过它处理

2530
01:30:46,000 --> 01:30:48,000
你直接复制过去那堆文件嘛

2531
01:30:48,000 --> 01:30:49,000
嗯

2532
01:30:49,000 --> 01:30:51,000
你就把整个那个 wp-content

2533
01:30:51,000 --> 01:30:53,000
wordpress-wp-content

2534
01:30:53,000 --> 01:30:56,000
然后-upload 这个目录复制过去就好了

2535
01:30:56,000 --> 01:30:57,000
搞定

2536
01:30:57,000 --> 01:30:59,000
不需要做任何修改

2537
01:30:59,000 --> 01:31:00,000
好吧

2538
01:31:00,000 --> 01:31:02,000
那我和 rex 商量一下

2539
01:31:02,000 --> 01:31:07,000
因为我相信现在的评论也已经被转到了 discourse 上了

2540
01:31:07,000 --> 01:31:08,000
所以评论

2541
01:31:08,000 --> 01:31:09,000
对啊我们没有讲这个评论

2542
01:31:09,000 --> 01:31:11,000
这个要补充一下

2543
01:31:11,000 --> 01:31:15,000
对其实从动态网站迁移到静态网站生成器

2544
01:31:15,000 --> 01:31:16,000
最大的两个问题

2545
01:31:16,000 --> 01:31:18,000
我们刚才就已经都说到了

2546
01:31:18,000 --> 01:31:20,000
一个是 asset management

2547
01:31:20,000 --> 01:31:23,000
就是你之前上传的那些图片怎么办

2548
01:31:23,000 --> 01:31:26,000
另外一个就是你之前那些评论怎么办

2549
01:31:26,000 --> 01:31:27,000
对对

2550
01:31:27,000 --> 01:31:28,000
嗯

2551
01:31:28,000 --> 01:31:29,000
所以你知道我怎么处理的吗

2552
01:31:29,000 --> 01:31:31,000
基本上已经都有

2553
01:31:31,000 --> 01:31:32,000
你怎么处理

2554
01:31:32,000 --> 01:31:33,000
就不要评论

2555
01:31:33,000 --> 01:31:35,000
哈哈哈

2556
01:31:35,000 --> 01:31:37,000
这个这个这个我说出这句话

2557
01:31:37,000 --> 01:31:38,000
lawrence 一定很高兴

2558
01:31:38,000 --> 01:31:40,000
哈哈哈

2559
01:31:40,000 --> 01:31:42,000
你我可以理解 lawrence 是这样的人

2560
01:31:42,000 --> 01:31:44,000
这是他的这是他的审美取向

2561
01:31:44,000 --> 01:31:45,000
而且而且我发现有这么一个问题

2562
01:31:45,000 --> 01:31:47,000
就是之前 wordpress 那个评论是可以就是发动的

2563
01:31:47,000 --> 01:31:49,000
自己站点上面吧

2564
01:31:49,000 --> 01:31:53,000
后来已经被那个叫什么 spam bot 自动化了

2565
01:31:53,000 --> 01:31:58,000
就所有的最近因为 amplified 也有好长一段时间没有更新的

2566
01:31:58,000 --> 01:32:00,000
就最近一两年的新增评论

2567
01:32:00,000 --> 01:32:02,000
就基本上全是 spam

2568
01:32:02,000 --> 01:32:03,000
嗯

2569
01:32:03,000 --> 01:32:05,000
所以就关掉就关掉吧

2570
01:32:05,000 --> 01:32:06,000
我也已经无所谓

2571
01:32:06,000 --> 01:32:09,000
对这种态度也是可以理解的

2572
01:32:09,000 --> 01:32:11,000
就你作为一个内容的产出者

2573
01:32:11,000 --> 01:32:14,000
如果你知道自己的内容足够

2574
01:32:14,000 --> 01:32:16,000
你如果你对自己的内容足够有信心

2575
01:32:16,000 --> 01:32:20,000
那么其实是不需要开一天到晚开着评论

2576
01:32:20,000 --> 01:32:27,000
让一个莫名其妄的人可以非常通过非常极低的成本抢到沙发的

2577
01:32:27,000 --> 01:32:32,000
真正想要跟你打交道的人会想方设法的把信息传达给你

2578
01:32:32,000 --> 01:32:33,000
对对

2579
01:32:33,000 --> 01:32:35,000
我觉得不怎么想要告诉你的人

2580
01:32:35,000 --> 01:32:37,000
那就不要看他们评论了

2581
01:32:37,000 --> 01:32:38,000
对我觉得这个是很重要的一点

2582
01:32:38,000 --> 01:32:42,000
就是要通过某种方法提高这个评论的成本

2583
01:32:42,000 --> 01:32:46,000
这样可以才可以有效的降低那种什么什么沙发啊

2584
01:32:46,000 --> 01:32:47,000
板凳啊

2585
01:32:47,000 --> 01:32:48,000
spam

2586
01:32:48,000 --> 01:32:49,000
spam 都不说

2587
01:32:49,000 --> 01:32:51,000
spam 那个是一个技术问题

2588
01:32:51,000 --> 01:32:52,000
I don't like spam

2589
01:32:52,000 --> 01:32:56,000
就现在其实有很多渠道可以给作者提出反馈了

2590
01:32:56,000 --> 01:32:59,000
比如说 Twitter 是一个渠道

2591
01:32:59,000 --> 01:33:00,000
微博是一个渠道

2592
01:33:00,000 --> 01:33:02,000
就再远古一点没有这些东西的时候

2593
01:33:02,000 --> 01:33:03,000
你还可以写邮件对吧

2594
01:33:03,000 --> 01:33:07,000
所以就真正想要给你反馈

2595
01:33:07,000 --> 01:33:11,000
想要给你讨论是一个就是有这种正确姿态的人

2596
01:33:11,000 --> 01:33:13,000
他肯定会有各种方法找到你

2597
01:33:13,000 --> 01:33:16,000
但是你没有必要要把信息传输出来

2598
01:33:16,000 --> 01:33:19,000
你也没有必要把这个评论做的那么易用或者易读

2599
01:33:19,000 --> 01:33:22,000
而且反过来从用户的角度来讲

2600
01:33:22,000 --> 01:33:26,000
其实很多年以前那种各种什么网站也好

2601
01:33:26,000 --> 01:33:28,000
还有什么个人博客也好

2602
01:33:28,000 --> 01:33:29,000
下面都有一个评论

2603
01:33:29,000 --> 01:33:30,000
你就贴了个评论

2604
01:33:30,000 --> 01:33:34,000
你也不大可能会记得回去看博主给你回复了什么

2605
01:33:34,000 --> 01:33:35,000
对吧

2606
01:33:35,000 --> 01:33:38,000
是吧

2607
01:33:38,000 --> 01:33:41,000
我觉得还是跟目前沟通的渠道多起来有关

2608
01:33:41,000 --> 01:33:43,000
有所关联

2609
01:33:43,000 --> 01:33:44,000
因为比如说

2610
01:33:44,000 --> 01:33:46,000
我在德国有一个很好的朋友

2611
01:33:46,000 --> 01:33:48,000
挺好的朋友叫做

2612
01:33:48,000 --> 01:33:49,000
他的网名叫做问号语

2613
01:33:49,000 --> 01:33:51,000
点问号语一定要将一个点

2614
01:33:51,000 --> 01:33:52,000
点问号语

2615
01:33:52,000 --> 01:33:55,000
他就是在我在读我的 blog

2616
01:33:55,000 --> 01:33:59,000
从当时我在德国他在中国

2617
01:33:59,000 --> 01:34:01,000
读一直读到他也来德国念书

2618
01:34:01,000 --> 01:34:06,000
然后后来我们两个在德国见面什么的

2619
01:34:06,000 --> 01:34:09,000
这一系列都是通过他在我的 blog 留言开始

2620
01:34:09,000 --> 01:34:12,000
所以当然这也许只是个例

2621
01:34:12,000 --> 01:34:13,000
因为我可能通过这种方式

2622
01:34:13,000 --> 01:34:15,000
以这种方式认识的朋友只有他一个人

2623
01:34:16,000 --> 01:34:19,000
这可能这也是一种方式

2624
01:34:19,000 --> 01:34:20,000
不管怎么说

2625
01:34:20,000 --> 01:34:21,000
不管怎么说

2626
01:34:21,000 --> 01:34:24,000
这种形式已经变得有点不重要

2627
01:34:24,000 --> 01:34:25,000
对

2628
01:34:25,000 --> 01:34:26,000
而且就是

2629
01:34:26,000 --> 01:34:31,000
而且就现在基本上那种那种就是每个赛的自己的那种评论功能

2630
01:34:31,000 --> 01:34:33,000
都沦为了这个 spam 的战场

2631
01:34:33,000 --> 01:34:35,000
所以很多人就把它彻底关掉

2632
01:34:35,000 --> 01:34:37,000
然后就像刚刚我讲的

2633
01:34:37,000 --> 01:34:40,000
你要找到我很简单去社交媒体上

2634
01:34:40,000 --> 01:34:42,000
找我或者给我发邮件

2635
01:34:42,000 --> 01:34:43,000
然后邮件的话

2636
01:34:43,000 --> 01:34:44,000
只要你愿意找到我

2637
01:34:44,000 --> 01:34:45,000
你总是可以找到我

2638
01:34:46,000 --> 01:34:47,000
对

2639
01:34:47,000 --> 01:34:49,000
邮件地址就在那个什么最顶上

2640
01:34:49,000 --> 01:34:51,000
其实也很简单的一件事

2641
01:34:51,000 --> 01:34:54,000
还有一个就是如果你确实想要评论的话

2642
01:34:54,000 --> 01:34:55,000
也有一些方法

2643
01:34:55,000 --> 01:34:57,000
就国外的话有那个叫

2644
01:34:57,000 --> 01:34:59,000
你叫什么来的

2645
01:34:59,000 --> 01:35:01,000
discus 还是什么

2646
01:35:01,000 --> 01:35:05,000
就是有个第三方的评论的支持的一个平台叫什么

2647
01:35:05,000 --> 01:35:06,000
对

2648
01:35:06,000 --> 01:35:07,000
就是 discus

2649
01:35:07,000 --> 01:35:08,000
discus 对吧

2650
01:35:08,000 --> 01:35:09,000
这个是一个

2651
01:35:09,000 --> 01:35:14,000
然后上次我们讲键盘的时候也提到了 stack overflow 的创始人

2652
01:35:14,000 --> 01:35:15,000
去

2653
01:35:15,000 --> 01:35:18,000
后来做了一个叫 discourse 的这么一个平台

2654
01:35:18,000 --> 01:35:21,000
然后它可以说是一个增强版的 discus

2655
01:35:21,000 --> 01:35:23,000
就增强版的 discus 吧

2656
01:35:23,000 --> 01:35:26,000
就当你可以集中的去

2657
01:35:26,000 --> 01:35:27,000
就作为

2658
01:35:27,000 --> 01:35:29,000
你说作为这个内容的这个提供方也好

2659
01:35:29,000 --> 01:35:30,000
还是内容消费方也好

2660
01:35:30,000 --> 01:35:35,000
你们都可以在一个统一的地方去完成这个评论和回复的功能

2661
01:35:35,000 --> 01:35:37,000
就不是像之前那种

2662
01:35:37,000 --> 01:35:39,000
你可能上了五个博客站点

2663
01:35:39,000 --> 01:35:40,000
你都留了评论

2664
01:35:40,000 --> 01:35:41,000
你还得挨个去看

2665
01:35:41,000 --> 01:35:43,000
这就显然太不用用户友好了嘛

2666
01:35:43,000 --> 01:35:44,000
就是对于增强版的讨论吧

2667
01:35:44,000 --> 01:35:47,000
就是对于真正想要跟你交流的人来讲

2668
01:35:47,000 --> 01:35:49,000
所以这也是一个可以考虑的方法

2669
01:35:49,000 --> 01:35:50,000
然后他们的那个就很简单了

2670
01:35:50,000 --> 01:35:55,000
就是你在你的这个静态博客的页面上嵌入

2671
01:35:55,000 --> 01:35:57,000
一个这个 java 的脚本

2672
01:35:57,000 --> 01:35:58,000
javascript 的脚本

2673
01:35:58,000 --> 01:36:02,000
然后这个 java script 会动态的生成

2674
01:36:02,000 --> 01:36:04,000
一个评论的界面

2675
01:36:04,000 --> 01:36:06,000
然后它可以写评论之后

2676
01:36:06,000 --> 01:36:08,000
就会直接发到那个像 discourse 啊

2677
01:36:08,000 --> 01:36:11,000
或者 discus 这种第三方的评论平台上去

2678
01:36:11,000 --> 01:36:12,000
这也是一种玩法

2679
01:36:12,000 --> 01:36:13,000
不过我不知道

2680
01:36:13,000 --> 01:36:15,000
国内有没有这种类似的东西

2681
01:36:15,000 --> 01:36:19,000
好像国内这个环境不太好

2682
01:36:19,000 --> 01:36:23,000
在网页上内嵌微博

2683
01:36:23,000 --> 01:36:24,000
环境不太好

2684
01:36:24,000 --> 01:36:27,000
现在反正反正我觉得现在还基本上都是一个

2685
01:36:27,000 --> 01:36:30,000
就是说你要在微博上给我留言

2686
01:36:30,000 --> 01:36:32,000
然后你得先粉我对吧

2687
01:36:32,000 --> 01:36:33,000
这种这种方式来做的

2688
01:36:33,000 --> 01:36:34,000
其实也蛮好的

2689
01:36:34,000 --> 01:36:36,000
这样粉丝数也上去了

2690
01:36:36,000 --> 01:36:37,000
这个什么 spam 也控制住了

2691
01:36:37,000 --> 01:36:38,000
大家都蛮开心的

2692
01:36:38,000 --> 01:36:41,000
我觉得也是好事

2693
01:36:41,000 --> 01:36:42,000
对

2694
01:36:42,000 --> 01:36:44,000
而且国内也是很多

2695
01:36:44,000 --> 01:36:46,000
还是有很多人在用什么新浪博客

2696
01:36:46,000 --> 01:36:48,000
或者是天哪真的吗

2697
01:36:48,000 --> 01:36:53,000
还有人在用真的真的还那个 qq 空间

2698
01:36:53,000 --> 01:36:54,000
博客大巴还在吗

2699
01:36:54,000 --> 01:36:57,000
那个空间更是一站式体验

2700
01:36:57,000 --> 01:36:58,000
只要 qq 登录了

2701
01:36:58,000 --> 01:37:01,000
那你在上面干什么都是互动

2702
01:37:01,000 --> 01:37:03,000
那个都不叫博客平台

2703
01:37:03,000 --> 01:37:05,000
那个是社交生态环境

2704
01:37:05,000 --> 01:37:06,000
对生态环境还是差太多

2705
01:37:06,000 --> 01:37:09,000
对所以其实你说小白写博客

2706
01:37:09,000 --> 01:37:11,000
那肯定上什么 facebook 啊之类的写的

2707
01:37:11,000 --> 01:37:14,000
qq 空间里面写的

2708
01:37:14,000 --> 01:37:16,000
这才是正途

2709
01:37:16,000 --> 01:37:18,000
我们谈论的东西有点

2710
01:37:18,000 --> 01:37:20,000
还是有点太脱离现实

2711
01:37:20,000 --> 01:37:21,000
不不不不不脱离现实

2712
01:37:21,000 --> 01:37:24,000
这个什么 our world is reality

2713
01:37:24,000 --> 01:37:28,000
别人的世界都不是现实

2714
01:37:32,000 --> 01:37:35,000
这个这个课要去

2715
01:37:35,000 --> 01:37:37,000
对

2716
01:37:37,000 --> 01:37:39,000
行天就这样

2717
01:37:39,000 --> 01:37:40,000
行啊

2718
01:37:40,000 --> 01:37:42,000
差不多就这样感觉好乱呀

2719
01:37:42,000 --> 01:37:43,000
对

2720
01:37:47,000 --> 01:37:48,000
对我上一期录的时候是深夜

2721
01:37:48,000 --> 01:37:50,000
我觉得好像头脑都看清楚

2722
01:37:50,000 --> 01:37:51,000
这一次又是深夜录了

2723
01:37:51,000 --> 01:37:53,000
所以下次我们改白天好吧

2724
01:37:53,000 --> 01:37:55,000
嗯对下次尽量改个白天吧

2725
01:37:55,000 --> 01:37:57,000
但不管怎么说

2726
01:37:57,000 --> 01:37:58,000
这一期完成了

2727
01:37:58,000 --> 01:38:01,000
那希望大家能够喜欢

2728
01:38:01,000 --> 01:38:05,000
呃现在是 zulu time

2729
01:38:05,000 --> 01:38:08,000
呃百分之百分号

2730
01:38:08,000 --> 01:38:09,000
H 点的朋友们

2731
01:38:09,000 --> 01:38:12,000
也希望大家可以多多支持一下

2732
01:38:12,000 --> 01:38:13,000
就是啊

2733
01:38:13,000 --> 01:38:14,000
这个视频

2734
01:38:14,000 --> 01:38:15,000
有没有很多人

2735
01:38:15,000 --> 01:38:16,000
喜欢我的视频

2736
01:38:16,000 --> 01:38:18,000
也希望大家可以多多支持一下

2737
01:38:18,000 --> 01:38:19,000
我们的频道

2738
01:38:19,000 --> 01:38:20,000
也希望您在周围的朋友

2739
01:38:20,000 --> 01:38:21,000
有兴趣的朋友

2740
01:38:21,000 --> 01:38:22,000
和朋友们

2741
01:38:22,000 --> 01:38:23,000
有兴趣的朋友

2742
01:38:23,000 --> 01:38:24,000
也希望您能够

2743
01:38:24,000 --> 01:38:25,000
以下的视频

2744
01:38:25,000 --> 01:38:26,000
帮我们做出更好的节目

2745
01:38:26,000 --> 01:38:27,000
谢谢大家

2746
01:38:27,000 --> 01:38:28,000
谢谢大家

2747
01:38:28,000 --> 01:38:29,000
谢谢大家

2748
01:38:29,000 --> 01:38:30,000
谢谢大家

2749
01:38:30,000 --> 01:38:31,000
谢谢大家

2750
01:38:31,000 --> 01:38:32,000
谢谢大家

2751
01:38:32,000 --> 01:38:33,000
谢谢大家

2752
01:38:33,000 --> 01:38:34,000
谢谢大家

2753
01:38:34,000 --> 01:38:35,000
谢谢大家

2754
01:38:35,000 --> 01:38:36,000
谢谢大家

2755
01:38:36,000 --> 01:38:37,000
谢谢大家

2756
01:38:37,000 --> 01:38:38,000
谢谢大家

2757
01:38:38,000 --> 01:38:42,000
你知道在 Go 里面

2758
01:38:42,000 --> 01:38:44,000
就是格式化时间

2759
01:38:44,000 --> 01:38:46,000
不是通过这种方式来实现的吗

2760
01:38:46,000 --> 01:38:50,000
那是怎么实现的

2761
01:38:50,000 --> 01:38:52,000
它那个方法很机智的

2762
01:38:52,000 --> 01:38:55,000
就它规定了一个时间点

2763
01:38:55,000 --> 01:38:56,000
就是一个特别时间点

2764
01:38:56,000 --> 01:38:59,000
然后你直接照着

2765
01:38:59,000 --> 01:39:01,000
你想要的格式书写

2766
01:39:01,000 --> 01:39:02,000
那个时间点就好了

2767
01:39:02,000 --> 01:39:04,000
你明白我意思吗

2768
01:39:04,000 --> 01:39:04,000
就是比如说

2769
01:39:04,000 --> 01:39:06,000
你想要格式化是 200

2770
01:39:06,000 --> 01:39:07,000
比较近的 2014

2771
01:39:07,000 --> 01:39:08,000
横杠

2772
01:39:08,000 --> 01:39:11,000
10 月就是 10 杠

2773
01:39:11,000 --> 01:39:12,000
然后 20

2774
01:39:12,000 --> 01:39:13,000
然后杠几点几分

2775
01:39:13,000 --> 01:39:13,000
对吧

2776
01:39:13,000 --> 01:39:15,000
然后你就按

2777
01:39:15,000 --> 01:39:15,000
你想

2778
01:39:15,000 --> 01:39:18,000
你脑海中想象的这个格式

2779
01:39:18,000 --> 01:39:20,000
把它给定的那个时间点

2780
01:39:20,000 --> 01:39:21,000
给你写出来

2781
01:39:21,000 --> 01:39:21,000
然后你用那个

2782
01:39:21,000 --> 01:39:22,000
作为一个格式串

2783
01:39:22,000 --> 01:39:24,000
去 format 的那个字符

2784
01:39:24,000 --> 01:39:24,000
那个时间

2785
01:39:24,000 --> 01:39:26,000
就可以变成你想要的格式

2786
01:39:26,000 --> 01:39:27,000
问题在于

2787
01:39:27,000 --> 01:39:28,000
那个 format 的字符串

2788
01:39:28,000 --> 01:39:29,000
要怎么写

2789
01:39:29,000 --> 01:39:30,000
你刚才说的是

2790
01:39:30,000 --> 01:39:32,000
你有一个知道的时间点

2791
01:39:32,000 --> 01:39:33,000
然后你要把这个

2792
01:39:33,000 --> 01:39:34,000
知道的时间点

2793
01:39:34,000 --> 01:39:36,000
格式化成

2794
01:39:36,000 --> 01:39:36,000
那个

2795
01:39:36,000 --> 01:39:37,000
某一个特定的时间

2796
01:39:37,000 --> 01:39:37,000
不对不对

2797
01:39:37,000 --> 01:39:39,000
就是我一个特定的格式

2798
01:39:39,000 --> 01:39:40,000
你你现在的问题

2799
01:39:40,000 --> 01:39:42,000
就是你有一个任意时间的一个

2800
01:39:42,000 --> 01:39:45,000
一个一个 daytime 的一个一个一个

2801
01:39:45,000 --> 01:39:45,000
变量嘛

2802
01:39:45,000 --> 01:39:46,000
你要把它变成一个

2803
01:39:48,000 --> 01:39:49,000
叫什么

2804
01:39:49,000 --> 01:39:50,000
呃一个字符串

2805
01:39:50,000 --> 01:39:51,000
对吧

2806
01:39:51,000 --> 01:39:51,000
然后这个字符串

2807
01:39:51,000 --> 01:39:53,000
你你心目中是有一个指定的格式

2808
01:39:53,000 --> 01:39:55,000
长的样子的

2809
01:39:55,000 --> 01:39:58,000
然后他在我们比如说 c 系的也或者像拍子

2810
01:39:58,000 --> 01:39:59,000
如比这些语言也好

2811
01:39:59,000 --> 01:40:01,000
就是有一种那种就是 placeholder

2812
01:40:01,000 --> 01:40:02,000
刚才我们讲的百分号 h

2813
01:40:02,000 --> 01:40:02,000
百分号 m

2814
01:40:02,000 --> 01:40:06,000
这个方式来指代某一种类型的时间

2815
01:40:06,000 --> 01:40:06,000
的

2816
01:40:06,000 --> 01:40:06,000
呃

2817
01:40:06,000 --> 01:40:08,000
字符串的形式

2818
01:40:08,000 --> 01:40:09,000
对吧

2819
01:40:09,000 --> 01:40:11,000
对

2820
01:40:11,000 --> 01:40:12,000
然后但是沟里面他就说

2821
01:40:12,000 --> 01:40:13,000
哎

2822
01:40:13,000 --> 01:40:14,000
这个太麻烦

2823
01:40:14,000 --> 01:40:15,000
太不直观了

2824
01:40:15,000 --> 01:40:15,000
比较难

2825
01:40:15,000 --> 01:40:16,000
难

2826
01:40:16,000 --> 01:40:18,000
你你还去查手册怎么怎么看

2827
01:40:18,000 --> 01:40:19,000
这个呢

2828
01:40:19,000 --> 01:40:21,000
你知道基础一件事情就是你记住一个时间点

2829
01:40:21,000 --> 01:40:23,000
就是 2006 年 1 月 2 号

2830
01:40:23,000 --> 01:40:27,000
的 3.4 分 5 秒

2831
01:40:27,000 --> 01:40:29,000
这个时间点

2832
01:40:29,000 --> 01:40:34,000
然后你用你希望的那个格式把这个时间写出来

2833
01:40:34,000 --> 01:40:36,000
就叫成一个字符串

2834
01:40:36,000 --> 01:40:36,000
对吧

2835
01:40:36,000 --> 01:40:40,000
然后你把这个字符串作为这个格式化

2836
01:40:40,000 --> 01:40:42,000
你任意时间的制服错

2837
01:40:42,000 --> 01:40:45,000
他就得到你需要的一个格式

2838
01:40:45,000 --> 01:40:47,000
解释

2839
01:40:47,000 --> 01:40:50,000
可是他怎么知道这个没有解释清楚

2840
01:40:50,000 --> 01:40:55,000
就是他怎么知道这个字符串里面的哪一部分是需要被用目标时间替换掉了

2841
01:40:55,000 --> 01:41:02,000
所以你听刚才我讲的一段是 2006 年 1 月 2 日 34 分 5 秒吗

2842
01:41:02,000 --> 01:41:03,000
嗯

2843
01:41:03,000 --> 01:41:05,000
你看就是

2844
01:41:05,000 --> 01:41:05,000
嗯

2845
01:41:05,000 --> 01:41:05,000
嗯

2846
01:41:05,000 --> 01:41:05,000
嗯

2847
01:41:05,000 --> 01:41:05,000
嗯

2848
01:41:05,000 --> 01:41:06,000
嗯

2849
01:41:06,000 --> 01:41:06,000
嗯

2850
01:41:06,000 --> 01:41:06,000
嗯

2851
01:41:06,000 --> 01:41:06,000
嗯

2852
01:41:06,000 --> 01:41:06,000
嗯

2853
01:41:06,000 --> 01:41:06,000
嗯

2854
01:41:06,000 --> 01:41:06,000
嗯

2855
01:41:06,000 --> 01:41:06,000
嗯

2856
01:41:06,000 --> 01:41:06,000
嗯

2857
01:41:06,000 --> 01:41:06,000
,

2858
01:41:06,000 --> 01:41:07,000
嗯

2859
01:41:07,000 --> 01:41:07,000
嗯

2860
01:41:07,000 --> 01:41:07,000
嗯

2861
01:41:07,000 --> 01:41:07,000
嗯

2862
01:41:07,000 --> 01:41:07,000
嗯

2863
01:41:07,000 --> 01:41:07,000
嗯

2864
01:41:07,000 --> 01:41:07,000
嗯

2865
01:41:07,000 --> 01:41:07,000
嗯

2866
01:41:07,000 --> 01:41:07,000
嗯

2867
01:41:07,000 --> 01:41:07,000
嗯

2868
01:41:07,000 --> 01:41:07,000
嗯

2869
01:41:07,000 --> 01:41:07,000
嗯

2870
01:41:07,000 --> 01:41:07,000
嗯

2871
01:41:07,000 --> 01:41:07,000
嗯

2872
01:41:07,000 --> 01:41:07,000
嗯

2873
01:41:07,000 --> 01:41:07,000
嗯

2874
01:41:07,000 --> 01:41:07,000
嗯

2875
01:41:07,000 --> 01:41:08,000
嗯

2876
01:41:08,000 --> 01:41:08,000
嗯

2877
01:41:08,000 --> 01:41:08,000
嗯

2878
01:41:08,000 --> 01:41:08,000
嗯

2879
01:41:08,000 --> 01:41:08,000
嗯

2880
01:41:08,000 --> 01:41:08,000
嗯

2881
01:41:08,000 --> 01:41:08,000
嗯

2882
01:41:08,000 --> 01:41:08,000
嗯

2883
01:41:08,000 --> 01:41:08,000
嗯

2884
01:41:08,000 --> 01:41:08,000
嗯

2885
01:41:08,000 --> 01:41:08,000
嗯

2886
01:41:08,000 --> 01:41:08,000
嗯

2887
01:41:08,000 --> 01:41:08,000
嗯

2888
01:41:08,000 --> 01:41:08,000
嗯

2889
01:41:08,000 --> 01:41:08,000
嗯

2890
01:41:08,000 --> 01:41:08,000
嗯

2891
01:41:08,000 --> 01:41:08,000
嗯

2892
01:41:08,000 --> 01:41:08,000
嗯

2893
01:41:08,000 --> 01:41:09,000
嗯

2894
01:41:09,000 --> 01:41:09,000
嗯

2895
01:41:09,000 --> 01:41:09,000
嗯

2896
01:41:09,000 --> 01:41:09,000
嗯

2897
01:41:09,000 --> 01:41:09,000
嗯

2898
01:41:09,000 --> 01:41:09,000
嗯

2899
01:41:09,000 --> 01:41:09,000
嗯

2900
01:41:09,000 --> 01:41:09,000
嗯

2901
01:41:09,000 --> 01:41:09,000
嗯

2902
01:41:09,000 --> 01:41:10,000
我大概理解了

2903
01:41:10,000 --> 01:41:40,000
就是你在这里面你给了一个样例字不穿然后他可以自动的三炮智能推导出这里面哪一部分是哪一个时间对对对对是是哪一个时间对可是现在的问题是我比如说我要实现这么一个功能每当你每当你执行到这一个语句的时候他就会打印出当前时间嗯然后当前时间必须是现在是几几点几几分应该怎么实现的你就

2904
01:41:40,000 --> 01:42:09,000
你这你这你这当前时间你是只是取闹那个函数吗对吧你就是闹那个函数得到当前时间的一个变量但是这个变量对他的内部是一个比如说是一个整数来表示从一个 unix time 的方式来表示举个例子但是他跟他怎么格式化这个过程并并并并没有关系啊你还是用这个方式来格式化吗比如说你知道当前是比如说是你要十点十分的话你就你就写个呃我看三分四秒就是 03 冒号 04 就可以了

2905
01:42:10,000 --> 01:42:24,000
你可以看一下他那个那个那个实现那个方那个实现方式非常神奇很很不一样跟就这个好像是我只有在这里面见过这种实现方式就够里面这种方式来实现其他的都是用那种 placeholder 的方式来实现的

2906
01:42:25,000 --> 01:42:26,000
这么说我把我在那个

2907
01:42:28,000 --> 01:42:34,000
咱们已经咱们我现在挺路啊这段应该没办法录进去录进去没关系等老师去剪就好了

2908
01:42:35,000 --> 01:42:39,000
ok 好我给你发一段那个 format 组串你你

2909
01:42:40,000 --> 01:42:46,000
最简单的方法就是你把这一段 pison 代码转换成 go 的方式告诉我叫 go 怎么写出来

2910
01:42:46,000 --> 01:42:48,000
好啊好你你你把它打给我

2911
01:43:02,000 --> 01:43:03,000
嗯 skype

2912
01:43:07,000 --> 01:43:07,000
嗯

2913
01:43:10,000 --> 01:43:18,000
啊就是这样嗯啊我自己就引破了一句我就不写了哈就是我就直接写了

2914
01:43:20,000 --> 01:43:21,000
他给闹点

2915
01:43:26,000 --> 01:43:26,000
是

2916
01:43:38,000 --> 01:43:38,000
你把我意思了吗

2917
01:43:40,000 --> 01:43:46,000
他怎么知道这不是 0304 分而不是 0304 秒 03 分 04 秒因为他的那个指定时间是这个

2918
01:43:52,000 --> 01:43:58,000
就是这里面的三和四就是对应的是三分钟 34 分嘛

2919
01:43:59,000 --> 01:44:08,000
所以这里面每一部分都必须是独特的就这个他的那个指定的那个时间是一圈特别我现在明白了对对对就非常巧嘛

2920
01:44:08,000 --> 01:44:09,000
就等于选一个选一个 standard

2921
01:44:10,000 --> 01:44:18,000
那 format 然后让这个每一个 standard format 都具有独一无二性然后对你总能找然后他可以自动通过通这个 format 来推导出

2922
01:44:20,000 --> 01:44:28,000
我靠这是这算偶尔之念了不但是你不觉得这个很直观吗不需要看就是你只需要记这个哎这个说实话我不觉得我觉得

2923
01:44:29,000 --> 01:44:32,000
这个很好记嘛我觉得第一次看到这个肯定会非常晕的

2924
01:44:32,000 --> 01:44:38,000
对我我第一次看的时候我也觉得哇这这什么好奇怪呀但是用过几次发现哇

2925
01:44:38,000 --> 01:44:40,000
每次都不需要去查手册超好

2926
01:44:40,000 --> 01:44:47,000
好吧也许真的是如同所有所有像我这个传

2927
01:44:48,000 --> 01:44:55,000
够浪福音的人说的一样够浪真的是一个经过深思熟虑的需要解决切实问题才发才发明出来这么一句

2928
01:44:56,000 --> 01:45:00,000
也许这种方式解决切实问题切实的问题的确比较好

2929
01:45:01,000 --> 01:45:07,000
对我就我觉得这个好下次我可以说你可以下次我就可以随便说了现在是现在是

2930
01:45:08,000 --> 01:45:10,000
呃 gmt 格林威治

2931
01:45:10,000 --> 01:45:11,000
标准时

2932
01:45:11,000 --> 01:45:11,000
1.

2933
01:45:12,000 --> 01:45:14,000
54 分 48 秒

2934
01:45:14,000 --> 01:45:15,000
哈哈哈哈

2935
01:45:16,000 --> 01:45:20,000
呃您现在收听到的是我台本好了这期节目就这样了

2936
01:45:20,000 --> 01:45:23,000
哈哈哈拜拜拜拜

2937
01:45:24,000 --> 01:45:25,000
拜拜我再提路

