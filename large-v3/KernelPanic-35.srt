1
00:00:00,000 --> 00:00:01,000
欢迎收听 IPM Podcast

2
00:00:01,000 --> 00:00:02,000
网络旗下的

3
00:00:02,000 --> 00:00:03,000
ID 技术主题娱乐节目

4
00:00:03,000 --> 00:00:04,000
内核恐慌

5
00:00:04,000 --> 00:00:05,000
我们号称 hardcore

6
00:00:05,000 --> 00:00:06,000
但是也没有干货

7
00:00:06,000 --> 00:00:07,000
想听人听

8
00:00:07,000 --> 00:00:08,000
不想听的人就别听

9
00:00:08,000 --> 00:00:10,000
本节目的网址是

10
00:00:10,000 --> 00:00:11,000
kernelpanic.fm

11
00:00:11,000 --> 00:00:12,000
我们推荐大家

12
00:00:12,000 --> 00:00:14,000
使用 podcast 客户端订阅节目

13
00:00:14,000 --> 00:00:17,000
详情请访问 ipm.li.faq

14
00:00:17,000 --> 00:00:19,000
欢迎为本节目捐款

15
00:00:19,000 --> 00:00:20,000
捐款地址是

16
00:00:20,000 --> 00:00:21,000
kernelpanic.fm

17
00:00:21,000 --> 00:00:23,000
捐款结合随意

18
00:00:23,000 --> 00:00:25,000
只要是 8 的正正数倍都可以

19
00:00:25,000 --> 00:00:27,000
捐款不会为你带来什么

20
00:00:27,000 --> 00:00:28,000
不捐也不会让你失去什么

21
00:00:28,000 --> 00:00:29,000
我们的口号是

22
00:00:29,000 --> 00:00:31,000
that's the thing about people

23
00:00:31,000 --> 00:00:33,000
who think they hate computers

24
00:00:33,000 --> 00:00:34,000
what they really hate

25
00:00:34,000 --> 00:00:36,000
is lousy programmers

26
00:00:36,000 --> 00:00:40,000
我问你个问题

27
00:00:40,000 --> 00:00:42,000
你在德国

28
00:00:42,000 --> 00:00:45,000
然后如果你买一些那种

29
00:00:45,000 --> 00:00:46,000
我们叫做 gadgets

30
00:00:46,000 --> 00:00:47,000
就是一些小的硬件产品

31
00:00:47,000 --> 00:00:49,000
各种一些

32
00:00:49,000 --> 00:00:51,000
不是那么太主流的

33
00:00:51,000 --> 00:00:53,000
比较小众的电子产品的时候

34
00:00:53,000 --> 00:00:54,000
你会去哪里买

35
00:00:54,000 --> 00:00:56,000
亚马逊吧

36
00:00:56,000 --> 00:00:58,000
亚马逊德国

37
00:00:58,000 --> 00:00:59,000
基本上是亚马逊

38
00:00:59,000 --> 00:01:01,000
就取决于你说

39
00:01:01,000 --> 00:01:03,000
德语一词是间

40
00:01:03,000 --> 00:01:07,000
取决于你说的东西的

41
00:01:07,000 --> 00:01:09,000
的稀缺程度

42
00:01:09,000 --> 00:01:10,000
或者说它的

43
00:01:10,000 --> 00:01:12,000
小众程度

44
00:01:12,000 --> 00:01:14,000
亚马逊上可能没有卖的

45
00:01:14,000 --> 00:01:15,000
但绝大部分时候

46
00:01:15,000 --> 00:01:18,000
如果你是在某一个广告上看到的话

47
00:01:18,000 --> 00:01:20,000
基本上是亚马逊应该有买

48
00:01:20,000 --> 00:01:22,000
但比如说如果是

49
00:01:22,000 --> 00:01:24,000
比如说像类似于这种

50
00:01:24,000 --> 00:01:26,000
kickstarter 上面那种提到的

51
00:01:26,000 --> 00:01:27,000
那就非常难

52
00:01:27,000 --> 00:01:29,000
什么 indiegogo kickstarter

53
00:01:29,000 --> 00:01:29,000
这上面都有

54
00:01:29,000 --> 00:01:31,000
想卖的东西都是非常难的

55
00:01:31,000 --> 00:01:32,000
就是

56
00:01:32,000 --> 00:01:34,000
当然也取决于通这个开源项目

57
00:01:34,000 --> 00:01:37,000
就是这个 kickstarter 的项目的地点

58
00:01:37,000 --> 00:01:39,000
比如说前一阵子有一个

59
00:01:39,000 --> 00:01:40,000
自行车还是什么东西

60
00:01:40,000 --> 00:01:43,000
他就开的那个是西班牙的

61
00:01:43,000 --> 00:01:46,000
那欧洲来说发货就还可以

62
00:01:46,000 --> 00:01:48,000
但是就是他欧洲本土的都还好的

63
00:01:48,000 --> 00:01:51,000
如果在美国的话就非常非常

64
00:01:51,000 --> 00:01:53,000
那个对

65
00:01:53,000 --> 00:01:55,000
那你平时比如说有没有买什么小的需求

66
00:01:55,000 --> 00:01:58,000
一些小电子产品是在亚马逊德国上买不到的

67
00:01:58,000 --> 00:01:59,000
嗯

68
00:01:59,000 --> 00:02:01,000
其实还挺多

69
00:02:01,000 --> 00:02:03,000
就比如说尤其是一些

70
00:02:03,000 --> 00:02:05,000
阿路易诺方面的

71
00:02:05,000 --> 00:02:06,000
把开发板什么的

72
00:02:06,000 --> 00:02:07,000
这个其实对对对

73
00:02:07,000 --> 00:02:09,000
亚马逊上还是挺难挺少见的

74
00:02:09,000 --> 00:02:11,000
即便有的话可能也比较贵

75
00:02:11,000 --> 00:02:13,000
那所以还有一些替代方案

76
00:02:13,000 --> 00:02:17,000
但就没有什么特别好的

77
00:02:17,000 --> 00:02:18,000
可以一下子说得上名字来到这

78
00:02:19,000 --> 00:02:22,000
那么现在我给你隆重推荐一个很好的去

79
00:02:22,000 --> 00:02:24,000
登登登登登登

80
00:02:24,000 --> 00:02:26,000
阿里 express

81
00:02:26,000 --> 00:02:28,000
天哪好吧

82
00:02:28,000 --> 00:02:29,000
这个是我后来发现的一件事啊

83
00:02:29,000 --> 00:02:29,000
这个是我后来发现的一件事啊

84
00:02:29,000 --> 00:02:29,000
这个是我后来发现的一件事啊

85
00:02:29,000 --> 00:02:31,000
这个挺好玩的

86
00:02:31,000 --> 00:02:33,000
我现在后面会说为什么会发现这个东西啊

87
00:02:33,000 --> 00:02:33,000
嗯

88
00:02:33,000 --> 00:02:35,000
嗯

89
00:02:35,000 --> 00:02:38,000
就阿里 express 是那个阿里巴巴的面向那种海外的

90
00:02:38,000 --> 00:02:40,000
你可以类似于他像

91
00:02:40,000 --> 00:02:43,000
就是阿里面向外国人的淘宝

92
00:02:43,000 --> 00:02:43,000
对

93
00:02:43,000 --> 00:02:44,000
差不多这个意思吧

94
00:02:44,000 --> 00:02:46,000
就像逆向

95
00:02:46,000 --> 00:02:47,000
reverse proxy 一样

96
00:02:47,000 --> 00:02:48,000
但是一个逆向淘宝

97
00:02:48,000 --> 00:02:50,000
逆向海淘应该是

98
00:02:50,000 --> 00:02:50,000
对

99
00:02:50,000 --> 00:02:52,000
因为我发现很多那种电子产品嘛

100
00:02:52,000 --> 00:02:55,000
现在深圳那边都很多在那边生产组装的嘛

101
00:02:55,000 --> 00:02:55,000
对吧

102
00:02:55,000 --> 00:02:57,000
但是你想在国外的话

103
00:02:57,000 --> 00:02:59,000
你买他有些很多那种就不知名的

104
00:02:59,000 --> 00:03:00,000
名厂牌的

105
00:03:00,000 --> 00:03:01,000
但是就比较廉价的

106
00:03:01,000 --> 00:03:03,000
就性价比比较高的那些电子产品

107
00:03:03,000 --> 00:03:04,000
其实还挺难的

108
00:03:04,000 --> 00:03:07,000
后来发现这个阿里 express 上面卖的还挺多的

109
00:03:07,000 --> 00:03:08,000
然后我就悲剧了

110
00:03:08,000 --> 00:03:11,000
因为阿里 express 是不卖到中国的

111
00:03:11,000 --> 00:03:12,000
哎

112
00:03:12,000 --> 00:03:13,000
真的吗

113
00:03:13,000 --> 00:03:16,000
所以阿里 express 上面这些商品到底是出口

114
00:03:16,000 --> 00:03:17,000
OK

115
00:03:17,000 --> 00:03:18,000
就是他那些卖家呢

116
00:03:18,000 --> 00:03:20,000
是只是从中国就是深圳那些地方

117
00:03:20,000 --> 00:03:22,000
他往国外卖

118
00:03:22,000 --> 00:03:24,000
但是他不一般不发往国内

119
00:03:24,000 --> 00:03:26,000
OK

120
00:03:26,000 --> 00:03:29,000
就是宁宁送宁卖洋鬼子

121
00:03:29,000 --> 00:03:29,000
不允许

122
00:03:29,000 --> 00:03:29,000
不允许

123
00:03:29,000 --> 00:03:29,000
不允许

124
00:03:29,000 --> 00:03:30,000
不允许加农

125
00:03:30,000 --> 00:03:33,000
因为国内的话你就直接上淘宝买嘛

126
00:03:33,000 --> 00:03:33,000
一般是这样

127
00:03:34,000 --> 00:03:38,000
但是那你为什么会有这个阿里 express 买到东西

128
00:03:38,000 --> 00:03:40,000
国内买不到的困惑困扰呢

129
00:03:42,000 --> 00:03:43,000
就是个 selection 的问题了

130
00:03:43,000 --> 00:03:46,000
就是我发现有些东西阿里 express 上面卖的

131
00:03:46,000 --> 00:03:48,000
他的那个就卖相啊

132
00:03:48,000 --> 00:03:51,000
还有价格还有那些选择都竟然比淘宝上高

133
00:03:53,000 --> 00:03:55,000
这或许说明了一些问题

134
00:03:55,000 --> 00:03:58,000
这个好像是个挺常见的状况吧

135
00:03:58,000 --> 00:03:59,000
就是

136
00:03:59,000 --> 00:04:03,000
有些制造业的也是如果这个东西是出口的话

137
00:04:03,000 --> 00:04:07,000
那他那个什么 qa 啊什么包装啊都要比给国内的好一点

138
00:04:07,000 --> 00:04:08,000
对对

139
00:04:08,000 --> 00:04:12,000
而且有个很很那个的问题就是你你如果你上两个网站对比一下

140
00:04:12,000 --> 00:04:13,000
就 aliexpress 和淘宝

141
00:04:13,000 --> 00:04:16,000
就那个同样同类商品的介绍

142
00:04:16,000 --> 00:04:18,000
他整个页面的这个设计也好

143
00:04:18,000 --> 00:04:19,000
还有他的这个啊

144
00:04:19,000 --> 00:04:22,000
就是就是商品的介绍

145
00:04:22,000 --> 00:04:24,000
他会阿里 express 上面会干净很多

146
00:04:26,000 --> 00:04:27,000
嗯就淘宝上你知道吗

147
00:04:27,000 --> 00:04:29,000
就是那种乱七八糟的那些店家自己发的那种

148
00:04:29,000 --> 00:04:32,000
那就是很花里胡哨的东西对吧

149
00:04:32,000 --> 00:04:36,000
但是同样的卖家你你如果他你在找他在 aliexpress 上面卖的

150
00:04:36,000 --> 00:04:38,000
或者同类产品的话

151
00:04:38,000 --> 00:04:42,000
他整个页面会会会非非就做的会非常的干净

152
00:04:42,000 --> 00:04:51,000
呃我觉得 aliexpress 上面的东西可能有可能是有一个统一的阿里内部的呃不是不是他也他也是那些卖家自己去去发发布的哦

153
00:04:51,000 --> 00:04:52,000
真的吗

154
00:04:52,000 --> 00:04:55,000
为什么我觉得好像上面英文都还蛮正多

155
00:04:55,000 --> 00:04:55,000
对

156
00:04:55,000 --> 00:04:59,000
所以我我说我后来留意到这个事情是我那天在某个地方发布了

157
00:04:59,000 --> 00:05:03,000
有一个一个这种一个什么机缘巧合的关系吧

158
00:05:03,000 --> 00:05:05,000
看到有一堆人在那里开讲座

159
00:05:05,000 --> 00:05:11,000
然后讲中的那种是如何在亚马逊美国上做这个营销

160
00:05:11,000 --> 00:05:14,000
就他们会专门去培训那些啊

161
00:05:14,000 --> 00:05:20,000
就会有一个什么讲师一样的人去培训那些那些国内的卖家在亚马逊上去做营销

162
00:05:20,000 --> 00:05:22,000
怎么去设计那些折扣点啊

163
00:05:22,000 --> 00:05:25,000
什么怎么选择那个呃

164
00:05:25,000 --> 00:05:27,000
这个这个推销的时间点啊

165
00:05:27,000 --> 00:05:28,000
那些而且还包括这个页面的设计啊

166
00:05:28,000 --> 00:05:29,000
我那个那个

167
00:05:29,000 --> 00:05:31,000
这个产品的描述啊

168
00:05:31,000 --> 00:05:32,000
他们都非常专业的

169
00:05:32,000 --> 00:05:36,000
这个我发现就跟淘宝上那些卖家的那种特别说能感觉就业

170
00:05:36,000 --> 00:05:37,000
这是什么来着

171
00:05:37,000 --> 00:05:39,000
就专业的和业余的区别吧

172
00:05:39,000 --> 00:05:40,000
OK

173
00:05:40,000 --> 00:05:41,000
那过年就国际中队

174
00:05:41,000 --> 00:05:43,000
我国际中队需要培训

175
00:05:43,000 --> 00:05:44,000
对对对

176
00:05:44,000 --> 00:05:46,000
所以所以我就觉得有时候觉得挺尴尬的

177
00:05:46,000 --> 00:05:48,000
就是虽然说这个货源都是来自这里

178
00:05:48,000 --> 00:05:51,000
都是可能是同样的一拨人在做这个事情

179
00:05:51,000 --> 00:05:53,000
但是因为卖区的地方不同

180
00:05:53,000 --> 00:05:55,000
他那个做事的态度完全不一样

181
00:05:56,000 --> 00:05:57,000
是吧

182
00:05:57,000 --> 00:05:58,000
是尴尬还是悲哀啊

183
00:05:58,000 --> 00:05:59,000
我觉得好像挺悲哀

184
00:05:59,000 --> 00:06:00,000
哎

185
00:06:00,000 --> 00:06:01,000
这怎么说

186
00:06:01,000 --> 00:06:02,000
可能市场就这样吧

187
00:06:02,000 --> 00:06:05,000
我我现在这种事情就主观色彩其实挺少的

188
00:06:05,000 --> 00:06:08,000
你我会去想这个为什么会是这么一种结果

189
00:06:08,000 --> 00:06:11,000
它是什么样的一种客观因素造成的

190
00:06:11,000 --> 00:06:13,000
那可能就是市场就是这样哦

191
00:06:13,000 --> 00:06:14,000
对吧

192
00:06:14,000 --> 00:06:15,000
比如同样的一个页面

193
00:06:15,000 --> 00:06:18,000
那花里胡哨的淘宝那种那种商品介绍

194
00:06:18,000 --> 00:06:19,000
大家也应该有印象吧

195
00:06:19,000 --> 00:06:20,000
看到过哈

196
00:06:20,000 --> 00:06:21,000
你会觉得哎

197
00:06:21,000 --> 00:06:22,000
就这样习以为常了

198
00:06:22,000 --> 00:06:23,000
对吧

199
00:06:23,000 --> 00:06:26,000
但是你把那个拿去给了这种什么洋人们用

200
00:06:26,000 --> 00:06:28,000
他们就就不就不待见了

201
00:06:28,000 --> 00:06:29,000
这个吧

202
00:06:29,000 --> 00:06:29,000
他就觉得

203
00:06:29,000 --> 00:06:32,000
你这个不靠谱不在不在那买了

204
00:06:32,000 --> 00:06:34,000
你逼得你掉去做啊

205
00:06:34,000 --> 00:06:36,000
要做到那种非常设计的好一点的

206
00:06:36,000 --> 00:06:36,000
对吧

207
00:06:36,000 --> 00:06:40,000
就是有时候你也不能怪那些什么中国公司啊

208
00:06:40,000 --> 00:06:41,000
不给力

209
00:06:41,000 --> 00:06:43,000
其实他们还是怎么说来的

210
00:06:43,000 --> 00:06:45,000
就是这是被市场选择的结果

211
00:06:45,000 --> 00:06:48,000
就是你至少你本身你都不在乎这种事情

212
00:06:48,000 --> 00:06:49,000
那他为什么在乎这种事情

213
00:06:51,000 --> 00:06:53,000
这个是集生弹弹生机的问题吧

214
00:06:53,000 --> 00:06:57,000
就是因为这个烂就是设计不重视设计的产品太多了

215
00:06:57,000 --> 00:06:59,000
所以啊

216
00:06:59,000 --> 00:06:59,000
是吧

217
00:06:59,000 --> 00:07:02,000
市场产生了一种不重视设计的

218
00:07:02,000 --> 00:07:05,000
不是有可能有可能是这么一个结果

219
00:07:05,000 --> 00:07:07,000
就是说这个中国市场相对的太多了

220
00:07:07,000 --> 00:07:08,000
对吧

221
00:07:08,000 --> 00:07:11,000
总有绝大多数的还是不管你做的多

222
00:07:11,000 --> 00:07:13,000
但都有人买说对没错

223
00:07:13,000 --> 00:07:15,000
只要你东西够便宜

224
00:07:15,000 --> 00:07:17,000
然后就是甚至不一定要便宜

225
00:07:17,000 --> 00:07:17,000
你知道吗

226
00:07:17,000 --> 00:07:19,000
现在我发现那个情况就是有时候你东西不便宜

227
00:07:19,000 --> 00:07:20,000
但是还是有人会买

228
00:07:20,000 --> 00:07:22,000
因为你一个差异可能也就是 5%左右

229
00:07:22,000 --> 00:07:23,000
对吧

230
00:07:23,000 --> 00:07:25,000
然后觉得那我就能找到买了就算了

231
00:07:25,000 --> 00:07:27,000
他也不在乎那些东西

232
00:07:27,000 --> 00:07:29,000
他不会去说进行一个选择

233
00:07:29,000 --> 00:07:30,000
而且市场足够大嘛

234
00:07:30,000 --> 00:07:32,000
总会有生存下来的空间

235
00:07:32,000 --> 00:07:34,000
但如果说你市场是现在只有十分之一

236
00:07:34,000 --> 00:07:39,000
那你可能要进要想办法去想更多的办法去说怎么去提高自己的竞争力

237
00:07:39,000 --> 00:07:41,000
可能会想提高产品的设计啊

238
00:07:41,000 --> 00:07:45,000
提高这个介绍页面的这个 landing page 的这个设计感啊

239
00:07:45,000 --> 00:07:46,000
之类的对吧

240
00:07:46,000 --> 00:07:47,000
所以

241
00:07:48,000 --> 00:07:50,000
就是有有什么样的市场

242
00:07:50,000 --> 00:07:51,000
就有什么样的商家吧

243
00:07:51,000 --> 00:07:55,000
我觉得另外一方面也有可能就是中国的设计成本太低了

244
00:07:55,000 --> 00:07:57,000
就你请一个设计师

245
00:07:57,000 --> 00:07:58,000
你可能给他的你期待的

246
00:07:58,000 --> 00:08:02,000
价格会给他的薪水是非常非常低的

247
00:08:02,000 --> 00:08:05,000
然后在这种情况下其实没有什么好事能拿出来

248
00:08:05,000 --> 00:08:11,000
而且很多就是产品的拥有者会觉得自己是产品拥有者

249
00:08:11,000 --> 00:08:14,000
所以对整个的设计有最终决定权

250
00:08:14,000 --> 00:08:16,000
然后就但是我觉得不是这样的

251
00:08:16,000 --> 00:08:22,000
因为我后来仔细比较过像这个 alexpress 卖的卖的价钱和这个在淘宝上卖的同类商品的价钱

252
00:08:22,000 --> 00:08:24,000
其实很多时候淘宝是要更贵的

253
00:08:25,000 --> 00:08:27,000
也就是说他买同样的东西

254
00:08:27,000 --> 00:08:27,000
他在淘宝上

255
00:08:27,000 --> 00:08:28,000
理论上

256
00:08:28,000 --> 00:08:28,000
他应该赚得更多

257
00:08:28,000 --> 00:08:33,000
因为我不是说他针对专门针对 alexpress 会有设计团队

258
00:08:33,000 --> 00:08:34,000
我只是说真的

259
00:08:34,000 --> 00:08:38,000
我就是有在中国做一个产品的话

260
00:08:38,000 --> 00:08:41,000
他有可能不是会那么重视

261
00:08:41,000 --> 00:08:42,000
不管是包装设计好

262
00:08:42,000 --> 00:08:44,000
还是文案设计也好

263
00:08:44,000 --> 00:08:48,000
或者而且很多时候这个卖东西的人根本就不是商品的经销商

264
00:08:48,000 --> 00:08:49,000
所以

265
00:08:50,000 --> 00:08:52,000
那但是那个 alexpress 卖那些卖家

266
00:08:52,000 --> 00:08:54,000
他也一般一般也不是这个商品经销商

267
00:08:54,000 --> 00:08:57,000
他也只是说做一个渠道而已

268
00:08:57,000 --> 00:08:57,000
是这样的

269
00:08:57,000 --> 00:08:58,000
就是是同

270
00:08:58,000 --> 00:08:59,000
两个东西

271
00:08:59,000 --> 00:09:04,000
但同样就是经营者和产品都是同一波人

272
00:09:04,000 --> 00:09:04,000
同一波产品

273
00:09:04,000 --> 00:09:06,000
只是说因为市场面面对的市场不一样

274
00:09:06,000 --> 00:09:09,000
他们做出来东西的结果是完全不同

275
00:09:11,000 --> 00:09:13,000
你觉得这是一种什么样的

276
00:09:13,000 --> 00:09:15,000
就是成熟市场不成熟市场

277
00:09:15,000 --> 00:09:20,000
但我会觉得此时会就有些听众的脑海里面会飘来

278
00:09:21,000 --> 00:09:22,000
六个字

279
00:09:24,000 --> 00:09:28,000
中国使用习惯或者是 whatever 的类似的一个一个

280
00:09:28,000 --> 00:09:32,000
概念就是在中国就必须是这样的

281
00:09:32,000 --> 00:09:36,000
就他不是一个就比你刚才的这个陈述有价值判断在里面

282
00:09:36,000 --> 00:09:39,000
但是他会觉得中国市场就这样了

283
00:09:39,000 --> 00:09:40,000
不是因为不成熟

284
00:09:40,000 --> 00:09:42,000
而是因为就中国有这个审美习惯

285
00:09:42,000 --> 00:09:47,000
或者是你是说中国人的什么习惯就是跟人偏下于丑吗

286
00:09:47,000 --> 00:09:48,000
我觉得不是这样子的

287
00:09:48,000 --> 00:09:50,000
不是我觉得有一个很很著名很有意思的说法

288
00:09:50,000 --> 00:09:54,000
就是不是有一句话说自然界厌恶真空吗

289
00:09:54,000 --> 00:09:55,000
嗯

290
00:09:55,000 --> 00:09:58,000
就中国用户厌恶版面的空白了啊

291
00:09:58,000 --> 00:09:59,000
空白

292
00:09:59,000 --> 00:10:02,000
所以有有一点缝隙一定要填字上去

293
00:10:02,000 --> 00:10:03,000
对吧

294
00:10:03,000 --> 00:10:10,000
然后然后因为因为所有的地方都充实着所有所有样式广告

295
00:10:10,000 --> 00:10:20,000
不管其实网络上的设计也是从这个现实生活也是对现实生活现实生活的一种投射

296
00:10:20,000 --> 00:10:21,000
假如你在一个

297
00:10:23,000 --> 00:10:25,000
连什么公车的背板

298
00:10:26,000 --> 00:10:27,000
或者是

299
00:10:28,000 --> 00:10:32,000
那个发动机的整流站上都要贴广告的国家

300
00:10:32,000 --> 00:10:37,000
那你很有可能是习惯了在网页上面见碰插针到处飘广告的

301
00:10:37,000 --> 00:10:39,000
但但我说的不是广告的这个这种区别

302
00:10:39,000 --> 00:10:43,000
只是说在他的文案上面他只是他这只是一个方面吧

303
00:10:43,000 --> 00:10:44,000
对吧

304
00:10:44,000 --> 00:10:48,000
然后在那转换到文案上面的就是说能扯多少都扯多少

305
00:10:48,000 --> 00:10:49,000
不管扯的东西是不是真的

306
00:10:49,000 --> 00:10:50,000
然后或者说

307
00:10:51,000 --> 00:10:54,000
有些卖家会把某一段字加粗

308
00:10:54,000 --> 00:10:56,000
然后加小线

309
00:10:56,000 --> 00:10:57,000
然后鞋底啊什么的

310
00:10:57,000 --> 00:10:58,000
这其实都是

311
00:10:58,000 --> 00:11:01,000
都是同一种同一种习惯的各个方面对吧

312
00:11:01,000 --> 00:11:02,000
你不会去

313
00:11:02,000 --> 00:11:11,000
因为你没有在一个简洁直接的现实世界里面生存过

314
00:11:11,000 --> 00:11:17,000
你会觉得网上这种到处乌烟瘴气的这个状况也是可以忍受

315
00:11:17,000 --> 00:11:17,000
或者说

316
00:11:17,000 --> 00:11:19,000
乃至你觉得默认就应该是这样

317
00:11:20,000 --> 00:11:25,000
那你这个的假设是他说他们没有对这个进行一个 AB test 吗

318
00:11:25,000 --> 00:11:26,000
就对比对比判断

319
00:11:26,000 --> 00:11:28,000
就是说他他只是说呃

320
00:11:28,000 --> 00:11:29,000
呃呃

321
00:11:29,000 --> 00:11:33,000
就刚你说那句话的暗含的假设就是所有的就大多数卖家是随波逐流的

322
00:11:33,000 --> 00:11:34,000
看别人怎么写他怎么写

323
00:11:35,000 --> 00:11:42,000
就他没有对这个他写某一种东西对他的这个销售情况做任何一种测试看难懂效果更好

324
00:11:42,000 --> 00:11:50,000
但是我想说的就是其实这些人从我那天我在那里培训他们他们那个现场我看了大概半个小时吧

325
00:11:50,000 --> 00:11:53,000
他们是对这种东西就是这帮卖东西的人啊

326
00:11:53,000 --> 00:11:55,000
但我不知道他是不是淘宝上也是有这种培训

327
00:11:55,000 --> 00:11:58,000
但是起码他在杨柏学校去卖的时候

328
00:11:58,000 --> 00:12:01,000
他会去考虑很多这种数据的这个结果

329
00:12:01,000 --> 00:12:03,000
他会去做测试

330
00:12:03,000 --> 00:12:10,000
OK 我觉得能够用心去参加这种培训班的人应该都不会不屑去做调报

331
00:12:10,000 --> 00:12:13,000
就不会蠢到回随波逐流吧

332
00:12:13,000 --> 00:12:14,000
就是有些人

333
00:12:14,000 --> 00:12:17,000
我觉得这是可能也是商业头脑的一部分吧

334
00:12:17,000 --> 00:12:20,000
就有些人会去想说怎么样做

335
00:12:20,000 --> 00:12:23,000
怎么样写才能让我的东西卖的好一点

336
00:12:23,000 --> 00:12:24,000
或者说每个人都会去想

337
00:12:24,000 --> 00:12:28,000
但是有些人的这个搞出来的东西就比较

338
00:12:28,000 --> 00:12:29,000
比较高感人都

339
00:12:31,000 --> 00:12:33,000
就没有那么就没有那么 low 吧

340
00:12:33,000 --> 00:12:34,000
我觉得

341
00:12:36,000 --> 00:12:37,000
那我就在想就说中

342
00:12:37,000 --> 00:12:43,000
像淘宝这种面向这主要面向中国市场的这种平台什么时候能变得

343
00:12:43,000 --> 00:12:44,000
不说别的了哈

344
00:12:44,000 --> 00:12:50,000
就说能变得像 AliExpress 那种商队来说没有那么五种颜色的文字在同一段话里面出现这种情况

345
00:12:52,000 --> 00:12:54,000
但是但也不是说做多好

346
00:12:54,000 --> 00:12:56,000
但只是说相比来看

347
00:12:56,000 --> 00:12:58,000
同一家集团下面的

348
00:12:58,000 --> 00:12:59,000
两个同类的产品

349
00:12:59,000 --> 00:13:02,000
然后就仅仅是因为面向的市场不一样

350
00:13:02,000 --> 00:13:04,000
他就有如此大的这种变化

351
00:13:04,000 --> 00:13:05,000
对

352
00:13:05,000 --> 00:13:10,000
你我觉得我给 AliExpress 最高的一个评价就是他非常不像中国人

353
00:13:10,000 --> 00:13:11,000
但是我已经有一阵没上他了

354
00:13:11,000 --> 00:13:14,000
你当时印象应该是这样

355
00:13:14,000 --> 00:13:17,000
所以如果你最近有什么买那么小电子产品的需求

356
00:13:17,000 --> 00:13:18,000
你给他试试

357
00:13:18,000 --> 00:13:20,000
我觉得应该会有惊喜

358
00:13:22,000 --> 00:13:23,000
其实

359
00:13:23,000 --> 00:13:24,000
其实这么说吧

360
00:13:24,000 --> 00:13:28,000
就是我最近或者我一段时间以来

361
00:13:28,000 --> 00:13:34,000
都没有什么特别需要从觉得这个东西只有国内才能买到的的欲望或者感觉

362
00:13:35,000 --> 00:13:39,000
可能唯一比较觉得有时候会想买的就是书

363
00:13:41,000 --> 00:13:42,000
有基本上

364
00:13:42,000 --> 00:13:44,000
而且不是不是国内的书

365
00:13:44,000 --> 00:13:46,000
这个概念是中文书

366
00:13:46,000 --> 00:13:48,000
就是不管是什么台湾金石堂

367
00:13:48,000 --> 00:13:49,000
伯克莱之类的

368
00:13:49,000 --> 00:13:55,000
还是中国的各种各样的新书在这这个需求是比较比较严重的

369
00:13:56,000 --> 00:13:57,000
这个没办法

370
00:13:57,000 --> 00:13:58,000
你这个你在德国不

371
00:13:58,000 --> 00:13:59,000
你这个语言环境都不一样

372
00:13:59,000 --> 00:14:02,000
那这个自然是很难的

373
00:14:02,000 --> 00:14:10,000
但是其他的非就是非这种怎么说非精神消费品就好像没有什么特别需要从国内买的

374
00:14:10,000 --> 00:14:12,000
而且或者说国内买不是特别便宜

375
00:14:12,000 --> 00:14:16,000
除非是我们在讨论水货或者是

376
00:14:18,000 --> 00:14:19,000
山寨品

377
00:14:21,000 --> 00:14:23,000
水货这个东西是这样的

378
00:14:23,000 --> 00:14:25,000
就是你要是觉得你要是说你

379
00:14:25,000 --> 00:14:27,000
你要是说好在国内买

380
00:14:27,000 --> 00:14:28,000
比如说一个

381
00:14:28,000 --> 00:14:33,000
日本的什么索尼 RX 100 相机特别在国内特别便宜

382
00:14:33,000 --> 00:14:34,000
那我无话可说

383
00:14:34,000 --> 00:14:35,000
他是水货对吧

384
00:14:35,000 --> 00:14:41,000
中国你要是说我通过偷逃税的方式来获得更便宜的东西是正义的话

385
00:14:41,000 --> 00:14:43,000
那我觉得也也没有什么可以讨论的

386
00:14:43,000 --> 00:14:45,000
但是反过来说

387
00:14:47,000 --> 00:14:51,000
到底有什么东西是在国内合法渠道可以得获得

388
00:14:51,000 --> 00:14:55,000
我在德国没有办法买到好像没有特别多

389
00:14:55,000 --> 00:14:57,000
就在物质产品上面应该是差不多

390
00:14:57,000 --> 00:14:57,000
毕竟是发达国家的产品

391
00:14:57,000 --> 00:14:58,000
对吧

392
00:14:58,000 --> 00:14:59,000
对

393
00:14:59,000 --> 00:15:01,000
而反过来

394
00:15:01,000 --> 00:15:03,000
对这个我要说乐天商城你知道吗

395
00:15:03,000 --> 00:15:04,000
就是日本的那个

396
00:15:04,000 --> 00:15:06,000
乐天不是韩国的吗

397
00:15:06,000 --> 00:15:08,000
乐天是日本的哥哥

398
00:15:08,000 --> 00:15:09,000
是吗

399
00:15:09,000 --> 00:15:11,000
OK 我一直说不是韩国的

400
00:15:11,000 --> 00:15:15,000
阿里 Xpress 的 UI 要比乐天商城好

401
00:15:15,000 --> 00:15:16,000
对

402
00:15:16,000 --> 00:15:17,000
这个还

403
00:15:17,000 --> 00:15:21,000
日本的电商不发达

404
00:15:21,000 --> 00:15:24,000
这个是应该是很多人知道的吧

405
00:15:24,000 --> 00:15:25,000
不

406
00:15:25,000 --> 00:15:26,000
但日本的很多

407
00:15:26,000 --> 00:15:27,000
日商的电商不发达

408
00:15:27,000 --> 00:15:33,000
日本至少在我脸里面是一个比较注重设计的

409
00:15:33,000 --> 00:15:36,000
但这点我觉得其实对我这个也是挺意外的

410
00:15:36,000 --> 00:15:38,000
但是其实我们看的现象来看

411
00:15:38,000 --> 00:15:41,000
日本在互联网这一块其实挺落后的

412
00:15:41,000 --> 00:15:44,000
就是在相比它的发达国家里面的地位来讲

413
00:15:44,000 --> 00:15:47,000
好吧

414
00:15:47,000 --> 00:15:50,000
就跟它独特的这种地理人口环境

415
00:15:50,000 --> 00:15:54,000
日本有点像一个电商的科摩多岛

416
00:15:54,000 --> 00:15:55,000
台湾也是这样子

417
00:15:55,000 --> 00:15:57,000
台湾还好啊

418
00:15:57,000 --> 00:16:00,000
台湾跟日本在这方面其实非常像

419
00:16:00,000 --> 00:16:02,000
它都面临着这个

420
00:16:02,000 --> 00:16:04,000
因为它本身那种就是

421
00:16:04,000 --> 00:16:05,000
就是前电商时代的时候

422
00:16:05,000 --> 00:16:06,000
它已经很发达了

423
00:16:08,000 --> 00:16:09,000
就是没有一个惰性

424
00:16:09,000 --> 00:16:13,000
一个一个就它没有出入大的这个市场的增量

425
00:16:13,000 --> 00:16:17,000
去使得这些这些厂商去愿意在上面做投入吧

426
00:16:17,000 --> 00:16:21,000
所以你看到很多这种日本台湾的这种网站也好

427
00:16:21,000 --> 00:16:24,000
还有这个电商也好的感觉是中国可能 2000 年

428
00:16:24,000 --> 00:16:28,000
或者 90 年代那种设计感觉就很稀松平常

429
00:16:29,000 --> 00:16:36,000
对我们说的是电商网站的设计还是说电商模式是整体

430
00:16:36,000 --> 00:16:39,000
就整体来说都是这样就网站设计可能只是一种比较集中的表象吧

431
00:16:41,000 --> 00:16:44,000
好吧我觉得可能还是体量问题就是这两个国家都太小了

432
00:16:44,000 --> 00:16:53,000
然后你不管欧洲美中欧洲美国还是中国都是一个比较大国的比较比较对

433
00:16:54,000 --> 00:16:55,000
有有足够大的

434
00:16:57,000 --> 00:17:00,000
好了我们不说这些了这这些话题实在是太爱的公论了

435
00:17:02,000 --> 00:17:05,000
没有其实我说到这个刚才讲那么一大堆就是

436
00:17:05,000 --> 00:17:10,000
就是就是有个挺巧的事儿最近那个 code

437
00:17:10,000 --> 00:17:13,000
那个叫那个叫什么 jeff 对吧

438
00:17:13,000 --> 00:17:13,000
对 jeff

439
00:17:14,000 --> 00:17:15,000
对 jeff

440
00:17:15,000 --> 00:17:18,000
他是那个 stack overflow 的那个创始人

441
00:17:19,000 --> 00:17:23,000
他在他的那个个人博客上写了一篇文章叫做 the scooter computer

442
00:17:24,000 --> 00:17:28,000
scooter 是一个就是那个小朋友玩的一个这东西叫什么

443
00:17:28,000 --> 00:17:31,000
对这里是指滑板车不是指那个速可达

444
00:17:32,000 --> 00:17:34,000
对就是滑板车是那种就是有一个小嘎

445
00:17:34,000 --> 00:17:39,000
下面对下面有一个小平板很小的轮踩在上面然后蹬地的对对对对

446
00:17:40,000 --> 00:17:45,000
然后他讲了一个一个什么事儿他就说就是说他想买一个这个这个小型的这种

447
00:17:45,000 --> 00:17:49,000
就 vpn 网关简单来说是这样

448
00:17:49,000 --> 00:17:56,000
他过去他是刷了一台那个华硕的那个 rtn 16 的那个路由器刷那个应该是 openwrt 吧还有 tomato

449
00:17:57,000 --> 00:18:01,000
刷了那个 tomato 之后他就用一个 vpn 就连到他的那个机房里面去嘛

450
00:18:01,000 --> 00:18:03,000
因为他们机房他们还挺

451
00:18:03,000 --> 00:18:07,000
挺传统的他们不是用那个云服务他们还是用那个叫做 colloca

452
00:18:08,000 --> 00:18:12,000
colloca 中文叫什么来的就是自己买服务器放到一个

453
00:18:13,000 --> 00:18:15,000
一个机房的一个架子机房托网吗

454
00:18:15,000 --> 00:18:17,000
租空间对主机托管这一块

455
00:18:18,000 --> 00:18:20,000
因为他所以他有一个 vpn 的这个需求

456
00:18:20,000 --> 00:18:22,000
但后来他想那个那个 vpn 太慢了吧

457
00:18:22,000 --> 00:18:24,000
那个 open ss 版本比较低

458
00:18:24,000 --> 00:18:27,000
然后他想换一个就是这种 fulbloom linux

459
00:18:27,000 --> 00:18:30,000
就是他以前跑的是一个精简版的 linux

460
00:18:30,000 --> 00:18:32,000
觉得不太行版本也很旧也不方便嘛

461
00:18:32,000 --> 00:18:35,000
他想换一个全功能的这个 linux 访问器

462
00:18:36,000 --> 00:18:37,000
就想跑一个那个 x 86 的处理器

463
00:18:38,000 --> 00:18:41,000
然后找了半天跑去那个 aliexpress 找了一个那种

464
00:18:42,000 --> 00:18:44,000
没有没有厂牌的盒子

465
00:18:45,000 --> 00:18:45,000
然后那个

466
00:18:45,000 --> 00:18:46,000
一个就是那种

467
00:18:46,000 --> 00:18:49,000
之前我们提到过一个叫做 internet 叫 nuc 嘛

468
00:18:49,000 --> 00:18:52,000
internet 的叫做 next unit of computing

469
00:18:52,000 --> 00:18:55,000
就是一个大概是 5 寸乘以 5 寸的一个小方盒

470
00:18:56,000 --> 00:18:59,000
然后里面有一个超小的那种叫做 mini itx 主板

471
00:18:59,000 --> 00:19:03,000
然后要整合一个 i 3 或者是 i 5 的这种 cpu

472
00:19:03,000 --> 00:19:05,000
对可以挂在显示器的后面什么的

473
00:19:05,000 --> 00:19:09,000
对可以他有这个他刚好是那个叫做 visa mount

474
00:19:09,000 --> 00:19:11,000
那个大小标准可以挂显示器后面嘛

475
00:19:11,000 --> 00:19:12,000
就那种所谓的小电脑嘛

476
00:19:13,000 --> 00:19:15,000
然后他就买了这么从 aliexpress

477
00:19:15,000 --> 00:19:17,000
买了这么一个小电脑

478
00:19:17,000 --> 00:19:21,000
然后他的配置其实我们看下其实还挺惊人的

479
00:19:21,000 --> 00:19:23,000
这小电脑到 350 导瓦他说

480
00:19:23,000 --> 00:19:29,000
然后是一个 i 5 的 5200 brawell 双核 4 线程的 2.2 G 的 cpu

481
00:19:30,000 --> 00:19:35,000
16 兆的 ddr 3 内存 128 兆的这个 m.2 接口的 ssd

482
00:19:35,000 --> 00:19:40,000
然后有两个千兆的 realtech 8168 的网口

483
00:19:40,000 --> 00:19:42,000
还有这个显示输出这无所谓了

484
00:19:42,000 --> 00:19:45,000
因为他是用来做这个服务器把这用网卡就可以了

485
00:19:45,000 --> 00:19:49,000
然后然后这个事情就刚好就就就触到我了

486
00:19:49,000 --> 00:19:55,000
因为我之前我最近一直在找一台这种家里的这种呃网关

487
00:19:55,000 --> 00:19:57,000
因为我之前都用路由器跑那些东西嘛

488
00:19:57,000 --> 00:20:04,000
就是他说我有一个非常小的那个 tp link 的 w 2703 n 的那个小盒子

489
00:20:04,000 --> 00:20:06,000
他当时买 99 块钱吧

490
00:20:06,000 --> 00:20:07,000
很多年前买的

491
00:20:07,000 --> 00:20:10,000
他是一个 400 兆赫兹的 aetheras 的处理器

492
00:20:10,000 --> 00:20:15,000
然后当时可以刷了那个 openwrt 之后可以跑那个呃

493
00:20:15,000 --> 00:20:20,000
什么 ds 啊 dcp 啊还有一些什么啊 vpn 的服务吗

494
00:20:20,000 --> 00:20:21,000
嗯

495
00:20:21,000 --> 00:20:23,000
他说那个东西性能实在太差了

496
00:20:23,000 --> 00:20:27,000
因为只有 10 只有 32 兆的内存对吧

497
00:20:27,000 --> 00:20:32,000
然后 400 兆赫兹的这个是 mips 的处理器吧

498
00:20:32,000 --> 00:20:34,000
应该是 mips 价格的就就就很弱嘛

499
00:20:34,000 --> 00:20:38,000
就跑就就跑一个什么 10 兆左右的带宽

500
00:20:38,000 --> 00:20:41,000
差不多就把 cpu 撑满了就 vpn 哈

501
00:20:41,000 --> 00:20:45,000
然后但是你我家的那个宽带是那光纤是百兆的吗

502
00:20:45,000 --> 00:20:47,000
就是说经常就就不够用

503
00:20:47,000 --> 00:20:51,000
然后我想后来这个 wire 啊不是是那个

504
00:20:51,000 --> 00:20:55,000
是那个 ars technica 上面有一就 1 月份的时候他们发了篇文章

505
00:20:55,000 --> 00:20:59,000
就比较了一个还算不错的路由器吧

506
00:20:59,000 --> 00:21:03,000
几款有一款是那个 buffalo 的就是这个个 g 300 n

507
00:21:03,000 --> 00:21:06,000
跟我那个 tp 那个那个 703 n 是差不多性能的

508
00:21:07,000 --> 00:21:15,000
和一个就是相对来说好一点的啊呃这个 nix 的算是中档的路由器吧

509
00:21:15,000 --> 00:21:15,000
好

510
00:21:15,000 --> 00:21:15,000
一个

511
00:21:15,000 --> 00:21:19,000
现在目前来说比较高端的 netgear 的那个 nethawkx 6 的那个路由器

512
00:21:20,000 --> 00:21:22,000
然后比较了他们的这个路由的性能

513
00:21:22,000 --> 00:21:24,000
你发现其实你看那张表哈

514
00:21:24,000 --> 00:21:31,000
他在那个呃就是第一连低并发数的时候就是可能比如说 1000 个连接以下的时候

515
00:21:31,000 --> 00:21:34,000
就就就 100 兆的话你看这几个都还没问题

516
00:21:34,000 --> 00:21:36,000
但是如果你放到一个千兆的环境里面去

517
00:21:37,000 --> 00:21:42,000
你可以发现明显就就那个那些中低端的路由器基本上就没有什么性能可言了

518
00:21:42,000 --> 00:21:45,000
就是不说百兆了可能 10 兆都很悬就高并发了

519
00:21:45,000 --> 00:21:46,000
情况下啊

520
00:21:46,000 --> 00:21:55,000
但是你看一下那个 x 86 的就是他跑了一个非常旧的一个 everybridge 的一个一个 x 86 的处理器吧还是 atom 的就是还不是那种什么 i 3 i 5 哈

521
00:21:56,000 --> 00:22:00,000
他的那个路由的性能就是做 nit 嘛对吧

522
00:22:00,000 --> 00:22:04,000
那个 network 就是地址转换的一个性能其实是非常非常高的

523
00:22:04,000 --> 00:22:06,000
他在高并发的情况下也能达到可能差不多

524
00:22:07,000 --> 00:22:09,000
七八百兆的这种一种性能

525
00:22:10,000 --> 00:22:14,000
然后我就就勾起我了那个什么啊

526
00:22:14,000 --> 00:22:15,000
就对吧

527
00:22:15,000 --> 00:22:15,000
那个羊毛啊

528
00:22:15,000 --> 00:22:17,000
买一个这就是被人安利了

529
00:22:17,000 --> 00:22:19,000
被人种草了

530
00:22:19,000 --> 00:22:20,000
没错

531
00:22:20,000 --> 00:22:21,000
对对对

532
00:22:21,000 --> 00:22:25,000
因为因为就是路由性能其实很多人都觉得

533
00:22:27,000 --> 00:22:28,000
就这个东西是挺难去

534
00:22:29,000 --> 00:22:30,000
对于普通消费者很难去度量的

535
00:22:30,000 --> 00:22:33,000
就是说相对来说我们这种比较要求比较高

536
00:22:33,000 --> 00:22:35,000
然后也挺挑剔的

537
00:22:35,000 --> 00:22:39,000
这种这种人才会去琢磨这个我觉得主要是对于普通消费者来说

538
00:22:39,000 --> 00:22:42,000
这个东西他能够给自己带来什么样的注意

539
00:22:42,000 --> 00:22:44,000
好像特别的模糊

540
00:22:44,000 --> 00:22:45,000
比如说

541
00:22:45,000 --> 00:22:46,000
不是那么直观

542
00:22:46,000 --> 00:22:47,000
主要是感受

543
00:22:47,000 --> 00:22:50,000
他们感受得到就是可能家里网慢

544
00:22:50,000 --> 00:22:51,000
特别是有时候可能你觉得网慢

545
00:22:51,000 --> 00:22:53,000
但是找不到原因

546
00:22:53,000 --> 00:22:56,000
你不知道为什么人会直接说直接 blam 运营商说

547
00:22:56,000 --> 00:22:58,000
我靠这个联投的网太慢

548
00:22:58,000 --> 00:23:01,000
或者是沃兰丰的网太慢了

549
00:23:01,000 --> 00:23:01,000
对吧

550
00:23:01,000 --> 00:23:02,000
但是对对对

551
00:23:02,000 --> 00:23:03,000
会说一句会去说

552
00:23:03,000 --> 00:23:05,000
这会不会是我路由器比较差什么的

553
00:23:06,000 --> 00:23:07,000
对对对

554
00:23:07,000 --> 00:23:12,000
所以就很多人就说一直在就是被其实可能现在很多中国在搞光线

555
00:23:12,000 --> 00:23:13,000
进入普及

556
00:23:13,000 --> 00:23:13,000
吗

557
00:23:14,000 --> 00:23:15,000
很多家里装的很多

558
00:23:15,000 --> 00:23:15,000
快了你光线

559
00:23:16,000 --> 00:23:17,000
其实并没有用的多少

560
00:23:17,000 --> 00:23:18,000
特别是家里人稍微多一点

561
00:23:18,000 --> 00:23:20,000
或者设备稍微多一点时候

562
00:23:20,000 --> 00:23:22,000
还有一些人在家里瞎 BT 的时候

563
00:23:23,000 --> 00:23:24,000
就完全不能用了

564
00:23:25,000 --> 00:23:32,000
但就路由性的其实是一个挺难去普通消费者挺能判断的一个话题

565
00:23:32,000 --> 00:23:36,000
现在国内不是也在炒各种什么智能路由在卖吗

566
00:23:36,000 --> 00:23:38,000
但是他们新的机身都不咋地

567
00:23:39,000 --> 00:23:43,000
刚才我们看了两趴是这种所谓 1000 多块钱的所谓高端的家用路由器

568
00:23:43,000 --> 00:23:45,000
在那种高大宽容情况下

569
00:23:45,000 --> 00:23:46,000
其实也挺糟糕的

570
00:23:46,000 --> 00:23:49,000
所以我就一直在想搞一个这种 x 86 的盒子

571
00:23:49,000 --> 00:23:49,000
然后我就去看

572
00:23:50,000 --> 00:23:52,000
因为我在国内

573
00:23:52,000 --> 00:23:53,000
就京东上买的话

574
00:23:53,000 --> 00:23:56,000
其实还是我记得买京东还挺方便的

575
00:23:56,000 --> 00:23:59,000
淘宝上就经常觉得有时候不是很放心

576
00:23:59,000 --> 00:24:00,000
然后如果退货也挺麻烦的

577
00:24:00,000 --> 00:24:02,000
京东上面很多就可以是 7 天

578
00:24:02,000 --> 00:24:03,000
淘宝退货很麻烦

579
00:24:05,000 --> 00:24:05,000
因为他想卖家

580
00:24:06,000 --> 00:24:08,000
你也得跟他去商量那些乱七八糟的事情

581
00:24:08,000 --> 00:24:09,000
但是如果你在京东上买什么

582
00:24:10,000 --> 00:24:11,000
京东自营的话

583
00:24:11,000 --> 00:24:14,000
你调好 7 天无理由退货的话

584
00:24:14,000 --> 00:24:14,000
你根本不可以买到那个东西了

585
00:24:14,000 --> 00:24:15,000
所以他都去买那个东西了

586
00:24:15,000 --> 00:24:16,000
不用讲他直接来上面取

587
00:24:16,000 --> 00:24:17,000
他也不会问你任何问题

588
00:24:17,000 --> 00:24:17,000
对吧

589
00:24:18,000 --> 00:24:19,000
很养顺养的

590
00:24:19,000 --> 00:24:20,000
对

591
00:24:20,000 --> 00:24:22,000
所以我在京东上买了很多这种东西

592
00:24:22,000 --> 00:24:23,000
就去看

593
00:24:23,000 --> 00:24:24,000
就发现

594
00:24:25,000 --> 00:24:26,000
西藏上面买那种

595
00:24:26,000 --> 00:24:29,000
就是大品牌的那些热卖款型还可以

596
00:24:29,000 --> 00:24:33,000
但是一旦遇到这种需求量比较小众的产品

597
00:24:33,000 --> 00:24:35,000
就挺糟糕的了

598
00:24:37,000 --> 00:24:39,000
然后我就想去买这种盒子

599
00:24:39,000 --> 00:24:40,000
因为如果你要做路由的话

600
00:24:40,000 --> 00:24:44,000
那个盒子它最好是有两个网口

601
00:24:44,000 --> 00:24:44,000
对吧

602
00:24:44,000 --> 00:24:47,000
因为一个插光纤的猫

603
00:24:47,000 --> 00:24:50,000
一个插那边的路由器

604
00:24:50,000 --> 00:24:53,000
那边的无线交换机或者怎么样

605
00:24:53,000 --> 00:24:57,000
你就不用用无线路由做它的路由功能

606
00:24:57,000 --> 00:24:58,000
因为反正不好

607
00:24:58,000 --> 00:25:00,000
你可以直接用小电脑做路由功能

608
00:25:00,000 --> 00:25:05,000
然后无线就只做无线的转发和交换机的功能

609
00:25:05,000 --> 00:25:08,000
然后发现这种品牌的

610
00:25:08,000 --> 00:25:13,000
但双网卡的这种小电脑盒子还挺少的

611
00:25:13,000 --> 00:25:14,000
我觉得挺好的

612
00:25:14,000 --> 00:25:17,000
我觉得这种电脑被设计出来的时候

613
00:25:17,000 --> 00:25:23,000
可能其设计者就会说这个东西应该能够拿来被人当路由

614
00:25:23,000 --> 00:25:24,000
否则它不会

615
00:25:24,000 --> 00:25:28,000
应该我觉得不会专门设计出两个网卡接口来

616
00:25:30,000 --> 00:25:31,000
就小众

617
00:25:34,000 --> 00:25:34,000
对好

618
00:25:34,000 --> 00:25:35,000
你去

619
00:25:35,000 --> 00:25:36,000
对

620
00:25:36,000 --> 00:25:38,000
所以当时我就想各种办法

621
00:25:38,000 --> 00:25:40,000
我也想了其他一些方法

622
00:25:40,000 --> 00:25:41,000
就是如果说你只有

623
00:25:41,000 --> 00:25:42,000
因为还有一个问题

624
00:25:42,000 --> 00:25:43,000
就是说你去淘宝上买那些品牌

625
00:25:43,000 --> 00:25:44,000
它都没有品牌吗

626
00:25:44,000 --> 00:25:45,000
你也不知道质量怎么样

627
00:25:45,000 --> 00:25:45,000
对吧

628
00:25:45,000 --> 00:25:46,000
有什么不稳定

629
00:25:46,000 --> 00:25:47,000
你也听不清

630
00:25:47,000 --> 00:25:50,000
可是 AliExpress 不就是相当于

631
00:25:50,000 --> 00:25:53,000
你在 AliExpress 上买和在淘宝上卖有什么差别吗

632
00:25:53,000 --> 00:25:53,000
对

633
00:25:53,000 --> 00:25:55,000
这就是牵涉到另外一个问题

634
00:25:56,000 --> 00:25:59,000
你会发现上面 AliExpress 上面同样的东西

635
00:25:59,000 --> 00:26:01,000
它给就是因为页面的问题

636
00:26:01,000 --> 00:26:04,000
你会觉得这东西卖的东西会更靠谱一点

637
00:26:04,000 --> 00:26:05,000
What

638
00:26:05,000 --> 00:26:09,000
所以这完全是一个卖相给你带来的可靠性的印象差异

639
00:26:09,000 --> 00:26:10,000
就是卖相不够好

640
00:26:10,000 --> 00:26:12,000
淘宝上的卖相就很差

641
00:26:12,000 --> 00:26:13,000
好吧

642
00:26:14,000 --> 00:26:14,000
对

643
00:26:14,000 --> 00:26:18,000
而且产品的选择上面

644
00:26:18,000 --> 00:26:20,000
其实你可以看到它的用心程度完全不一样的

645
00:26:20,000 --> 00:26:21,000
比如说 AliExpress 它同样卖

646
00:26:22,000 --> 00:26:23,000
它是一个无风扇的

647
00:26:23,000 --> 00:26:25,000
就是全个机身是一个铝合金的壳子

648
00:26:25,000 --> 00:26:27,000
被动散热的

649
00:26:28,000 --> 00:26:29,000
你在淘宝上找就很难找这种

650
00:26:30,000 --> 00:26:30,000
然后找出来的时候

651
00:26:30,000 --> 00:26:31,000
你都不知道到底能不能散热

652
00:26:33,000 --> 00:26:34,000
还是因为卖相

653
00:26:34,000 --> 00:26:35,000
是对

654
00:26:35,000 --> 00:26:37,000
AliExpress 它就会讲得很清楚怎么样

655
00:26:37,000 --> 00:26:40,000
然后刚好 Jeff 他那篇文章也他买了

656
00:26:40,000 --> 00:26:42,000
他也拍了照片给我们看

657
00:26:42,000 --> 00:26:44,000
然后他还拆开一步一步

658
00:26:44,000 --> 00:26:46,000
一看我觉得这个卖相还挺好的

659
00:26:46,000 --> 00:26:50,000
虽然说做工也不怎么外观也不怎么漂亮

660
00:26:50,000 --> 00:26:53,000
但是基本上他做过还是挺扎实的

661
00:26:53,000 --> 00:26:55,000
很厚的一个铝合金的盒子

662
00:26:55,000 --> 00:26:55,000
对吧

663
00:26:55,000 --> 00:26:56,000
然后盖一盖

664
00:26:56,000 --> 00:26:57,000
好像是 unibody

665
00:26:57,000 --> 00:26:59,000
对

666
00:26:59,000 --> 00:27:01,000
扎一看好像是那种苹果那种 unibody 的盒子一样

667
00:27:01,000 --> 00:27:02,000
对吧

668
00:27:02,000 --> 00:27:03,000
还挺不错

669
00:27:03,000 --> 00:27:04,000
Anyway

670
00:27:04,000 --> 00:27:06,000
又扯回这篇文章里面讲的东西

671
00:27:06,000 --> 00:27:07,000
对

672
00:27:07,000 --> 00:27:10,000
你看发现你 350 刀大概多少钱

673
00:27:10,000 --> 00:27:12,000
2000 多人民币

674
00:27:12,000 --> 00:27:14,000
就可以买一个性能相当

675
00:27:14,000 --> 00:27:19,000
相当赞的最新一款的处理小电脑了

676
00:27:19,000 --> 00:27:23,000
然后当中录取的话其实还挺不错的

677
00:27:23,000 --> 00:27:24,000
对

678
00:27:24,000 --> 00:27:26,000
我其实有点不明白

679
00:27:26,000 --> 00:27:28,000
就是所谓 scooter computer

680
00:27:28,000 --> 00:27:31,000
它跟 scooter 的共同点到底在哪

681
00:27:31,000 --> 00:27:32,000
小吗

682
00:27:32,000 --> 00:27:33,000
除了小

683
00:27:33,000 --> 00:27:35,000
那为什么不叫 whatever

684
00:27:35,000 --> 00:27:36,000
mini computer

685
00:27:36,000 --> 00:27:39,000
或者是想用小的东西

686
00:27:39,000 --> 00:27:40,000
这个有个比喻

687
00:27:40,000 --> 00:27:42,000
这个之前不是谁来的

688
00:27:42,000 --> 00:27:44,000
谁说是一个 bicycle 来的

689
00:27:44,000 --> 00:27:46,000
OK 乔布斯

690
00:27:46,000 --> 00:27:48,000
对好像是

691
00:27:48,000 --> 00:27:48,000
对

692
00:27:48,000 --> 00:27:50,000
对

693
00:27:50,000 --> 00:27:51,000
对

694
00:27:51,000 --> 00:27:52,000
小布斯说

695
00:27:52,000 --> 00:27:54,000
这个 PC 是一个 truck

696
00:27:54,000 --> 00:27:55,000
是一个卡车

697
00:27:55,000 --> 00:27:57,000
然后那些小电脑是一个

698
00:27:57,000 --> 00:27:59,000
那句话原话什么

699
00:27:59,000 --> 00:28:01,000
computer is a bicycle for your mind

700
00:28:01,000 --> 00:28:02,000
对吧

701
00:28:02,000 --> 00:28:02,000
对

702
00:28:02,000 --> 00:28:06,000
个人电脑是你头脑的一个自行车

703
00:28:06,000 --> 00:28:08,000
可以帮你辅助你的功能

704
00:28:08,000 --> 00:28:12,000
是

705
00:28:12,000 --> 00:28:14,000
但其实乔布斯

706
00:28:14,000 --> 00:28:15,000
这句话我也没有特别理解

707
00:28:15,000 --> 00:28:17,000
就为什么是自行车

708
00:28:17,000 --> 00:28:22,000
因为你需要用自己的脑力去驱动他们

709
00:28:22,000 --> 00:28:22,000
还是

710
00:28:22,000 --> 00:28:26,000
还是说他你还得做点什么

711
00:28:26,000 --> 00:28:29,000
他说这句话的意思还是只是说

712
00:28:29,000 --> 00:28:32,000
这个东西它比你走步要快

713
00:28:32,000 --> 00:28:38,000
有时候这些东西是有点

714
00:28:38,000 --> 00:28:40,000
不是细思极恐

715
00:28:40,000 --> 00:28:43,000
但有点越想越想不明白了

716
00:28:43,000 --> 00:28:43,000
一种

717
00:28:44,000 --> 00:28:44,000
就是说法

718
00:28:44,000 --> 00:28:46,000
不管是所谓 scooter computer

719
00:28:46,000 --> 00:28:50,000
还是还是 computer is the bicycle for your mind

720
00:28:52,000 --> 00:28:53,000
anyway

721
00:28:53,000 --> 00:28:55,000
就说回这个 scooter 这个事情

722
00:28:55,000 --> 00:28:56,000
scooter 是个什么东西

723
00:28:56,000 --> 00:28:58,000
scooter 就是一个非常原始的

724
00:28:58,000 --> 00:29:00,000
它可能比自行车还原始一点

725
00:29:00,000 --> 00:29:02,000
比如说自行车还有什么链条

726
00:29:02,000 --> 00:29:03,000
还有什么这种

727
00:29:03,000 --> 00:29:04,000
就不说变速

728
00:29:04,000 --> 00:29:06,000
就是那种最简单的自行车

729
00:29:06,000 --> 00:29:08,000
它还是有它结果还相对来说比较复杂

730
00:29:08,000 --> 00:29:08,000
对吧

731
00:29:09,000 --> 00:29:11,000
结果简单肯定

732
00:29:11,000 --> 00:29:12,000
但是原始到未必

733
00:29:12,000 --> 00:29:13,000
因为自行车毕竟是一个

734
00:29:14,000 --> 00:29:15,000
18 世纪就出现的东西

735
00:29:15,000 --> 00:29:17,000
在那之前是不可能用 scooter

736
00:29:18,000 --> 00:29:21,000
但是如果你比较一个现代的自行车

737
00:29:21,000 --> 00:29:22,000
现代一个 scooter

738
00:29:22,000 --> 00:29:23,000
你觉得哪个更简单一点

739
00:29:24,000 --> 00:29:25,000
的确不

740
00:29:25,000 --> 00:29:25,000
我刚才说了

741
00:29:25,000 --> 00:29:27,000
scooter 的确更简单一点

742
00:29:27,000 --> 00:29:29,000
但它并不一定更原始

743
00:29:29,000 --> 00:29:29,000
知道吗

744
00:29:30,000 --> 00:29:30,000
ok

745
00:29:31,000 --> 00:29:31,000
对

746
00:29:32,000 --> 00:29:33,000
对

747
00:29:33,000 --> 00:29:35,000
所以 scooter computer

748
00:29:35,000 --> 00:29:37,000
这个叫什么

749
00:29:37,000 --> 00:29:39,000
你刚才说 scooter 中文叫什么来着

750
00:29:39,000 --> 00:29:40,000
滑板车

751
00:29:40,000 --> 00:29:41,000
对

752
00:29:41,000 --> 00:29:43,000
滑板车这种东西就是那种

753
00:29:43,000 --> 00:29:43,000
你可以买一个

754
00:29:43,000 --> 00:29:45,000
然后你需要用一下的时候

755
00:29:45,000 --> 00:29:46,000
就用一下

756
00:29:46,000 --> 00:29:47,000
然后你不需要用的时候

757
00:29:47,000 --> 00:29:49,000
就是一个专专用设备

758
00:29:49,000 --> 00:29:50,000
你可以这么说

759
00:29:51,000 --> 00:29:53,000
我觉得 scooter 的隐喻可能是在这儿

760
00:29:53,000 --> 00:29:55,000
就是 scooter 它是一个

761
00:29:56,000 --> 00:29:58,000
供你短途代步的工具

762
00:29:58,000 --> 00:30:00,000
就是有中预论距离

763
00:30:00,000 --> 00:30:02,000
我记得 Jeff Atwood 在文章里面写

764
00:30:02,000 --> 00:30:04,000
应该是 1-3 英里

765
00:30:04,000 --> 00:30:05,000
对

766
00:30:05,000 --> 00:30:07,000
然后要求地面是平的水泥路面

767
00:30:07,000 --> 00:30:09,000
对 5 公里之内的距离

768
00:30:09,000 --> 00:30:11,000
你可能走过去太远

769
00:30:11,000 --> 00:30:12,000
就可能要一个小时走

770
00:30:12,000 --> 00:30:13,000
人的步行速度应该还不错

771
00:30:13,000 --> 00:30:14,000
但是没想到是 5 公里

772
00:30:14,000 --> 00:30:16,000
你可能走 5 公里要一个小时

773
00:30:16,000 --> 00:30:17,000
但如果你踩滑板车的话

774
00:30:17,000 --> 00:30:20,000
可能就 5 公里还是有点太长

775
00:30:20,000 --> 00:30:21,000
因为 3.3 公里

776
00:30:21,000 --> 00:30:23,000
我骑车上面都觉得稍微有点远

777
00:30:23,000 --> 00:30:26,000
但是滑板车应该是可以接受的

778
00:30:26,000 --> 00:30:28,000
滑板车比如说在展会里面

779
00:30:28,000 --> 00:30:30,000
就是这个展会可能特别大

780
00:30:31,000 --> 00:30:32,000
有十几个展厅

781
00:30:32,000 --> 00:30:34,000
然后你可能需要从一端到另一端

782
00:30:34,000 --> 00:30:35,000
每天

783
00:30:35,000 --> 00:30:36,000
就比如说你是在展厅的工作人员

784
00:30:36,000 --> 00:30:38,000
你可能每天要往返几十次

785
00:30:38,000 --> 00:30:39,000
在这个情况下

786
00:30:39,000 --> 00:30:41,000
走路是非常不经济的

787
00:30:41,000 --> 00:30:42,000
但是你又没办法开车

788
00:30:42,000 --> 00:30:43,000
用一个滑板车

789
00:30:43,000 --> 00:30:43,000
其实是非常不经济的

790
00:30:43,000 --> 00:30:44,000
是非常方便的

791
00:30:45,000 --> 00:30:47,000
所以很多展会的工作人员

792
00:30:47,000 --> 00:30:48,000
都会用滑板车

793
00:30:48,000 --> 00:30:49,000
而且滑板车它的优点

794
00:30:49,000 --> 00:30:51,000
是不像汉兵鞋或者滑板那样

795
00:30:52,000 --> 00:30:53,000
你需要学

796
00:30:53,000 --> 00:30:54,000
需要一个技巧

797
00:30:54,000 --> 00:30:55,000
滑板车基本上你学

798
00:30:55,000 --> 00:30:58,000
只需要半分钟就可以学会

799
00:30:58,000 --> 00:30:58,000
对

800
00:30:58,000 --> 00:31:01,000
而且它就是 hop on

801
00:31:01,000 --> 00:31:03,000
hop off 都比较简单

802
00:31:03,000 --> 00:31:03,000
对

803
00:31:03,000 --> 00:31:06,000
汉兵鞋你还得穿和脱一下

804
00:31:06,000 --> 00:31:06,000
对吧

805
00:31:06,000 --> 00:31:06,000
对

806
00:31:06,000 --> 00:31:09,000
这个隐喻可能就是小的电脑

807
00:31:09,000 --> 00:31:10,000
用起来简单

808
00:31:10,000 --> 00:31:13,000
然后就不用

809
00:31:13,000 --> 00:31:17,000
你麻烦你去专门传一台 pc 来搞这种事情

810
00:31:17,000 --> 00:31:18,000
只要买过来就可以

811
00:31:18,000 --> 00:31:19,000
对

812
00:31:19,000 --> 00:31:20,000
但我想说的是

813
00:31:20,000 --> 00:31:25,000
它虽然说 scooter 这个 computer 非常的好用

814
00:31:25,000 --> 00:31:27,000
但其实它一点也不弱小

815
00:31:27,000 --> 00:31:28,000
你发现刚才我念的配置

816
00:31:29,000 --> 00:31:31,000
它买的 2000 块钱左右的配置

817
00:31:31,000 --> 00:31:32,000
其实是相当强大的

818
00:31:32,000 --> 00:31:34,000
它只是不再时髦了

819
00:31:34,000 --> 00:31:35,000
或者它不在顶尖了

820
00:31:35,000 --> 00:31:38,000
但它绝对是一个 solid 的一个

821
00:31:38,000 --> 00:31:42,000
就是甚至可以说它 2000 块钱的小电脑的性能

822
00:31:42,000 --> 00:31:43,000
是要用到的

823
00:31:43,000 --> 00:31:48,000
是要好于我觉得可能大多数人家里

824
00:31:48,000 --> 00:31:50,000
可能两三年前的台式 pc

825
00:31:50,000 --> 00:31:53,000
或者甚至笔记本的这种性能

826
00:31:53,000 --> 00:31:54,000
对

827
00:31:54,000 --> 00:31:55,000
没错

828
00:31:55,000 --> 00:31:55,000
对

829
00:31:55,000 --> 00:31:57,000
但我一直就有一件事情

830
00:31:57,000 --> 00:31:59,000
我一直就不能释怀

831
00:31:59,000 --> 00:32:00,000
我问你一件事

832
00:32:00,000 --> 00:32:01,000
我现在给你一个任务

833
00:32:01,000 --> 00:32:02,000
就是说

834
00:32:02,000 --> 00:32:05,000
因为这种做这种路由器这种设备

835
00:32:05,000 --> 00:32:07,000
你不需要它有任何显示的功能吗

836
00:32:07,000 --> 00:32:08,000
对吧

837
00:32:08,000 --> 00:32:09,000
嗯

838
00:32:09,000 --> 00:32:10,000
但是

839
00:32:11,000 --> 00:32:12,000
请

840
00:32:12,000 --> 00:32:13,000
请

841
00:32:13,000 --> 00:32:14,000
给我一个

842
00:32:15,000 --> 00:32:17,000
列表或者是几个选择

843
00:32:17,000 --> 00:32:20,000
使得那种就是它的 cpu 的处理能力很强

844
00:32:20,000 --> 00:32:21,000
但是不需要有 gpu

845
00:32:22,000 --> 00:32:24,000
然后它同时又价格比较便宜的

846
00:32:24,000 --> 00:32:28,000
这种硬件配置的这种选择

847
00:32:28,000 --> 00:32:29,000
就发现你是没有找不到

848
00:32:29,000 --> 00:32:32,000
你基本上必须去买一台服务器

849
00:32:32,000 --> 00:32:33,000
这服务器很贵

850
00:32:34,000 --> 00:32:35,000
这其实是对服务器的要求

851
00:32:35,000 --> 00:32:38,000
对我的意思就是你所需要的是一个

852
00:32:38,000 --> 00:32:40,000
microsoft

853
00:32:40,000 --> 00:32:42,000
个人使用的微型服务器

854
00:32:42,000 --> 00:32:43,000
对

855
00:32:43,000 --> 00:32:44,000
没错

856
00:32:44,000 --> 00:32:45,000
其实这种处理

857
00:32:45,000 --> 00:32:46,000
首先从处理器的角度讲

858
00:32:46,000 --> 00:32:47,000
你就很难找

859
00:32:47,000 --> 00:32:48,000
就一般来说

860
00:32:48,000 --> 00:32:49,000
英特尔处理器

861
00:32:49,000 --> 00:32:50,000
它虽然说性能很强的

862
00:32:50,000 --> 00:32:51,000
但是它的价格比较贵

863
00:32:51,000 --> 00:32:56,000
你现在看你 i 5 一个处理器的芯片

864
00:32:56,000 --> 00:32:58,000
大概就是至少是 100 多刀

865
00:32:59,000 --> 00:33:00,000
就成本就厂商的成本是 100 多刀

866
00:33:00,000 --> 00:33:01,000
就大概六七百块钱

867
00:33:01,000 --> 00:33:03,000
但其实里面有很多钱

868
00:33:03,000 --> 00:33:05,000
你其实你根本用不到

869
00:33:05,000 --> 00:33:08,000
因为现在特别像英特尔处的那种集成的处理器

870
00:33:08,000 --> 00:33:11,000
它可能也很大一部分是用做 gpu 的

871
00:33:13,000 --> 00:33:14,000
但是你 gpu 你完全用不到

872
00:33:14,000 --> 00:33:17,000
你做这种就是丢到角落里面

873
00:33:17,000 --> 00:33:20,000
也不管它的那种用途的话

874
00:33:20,000 --> 00:33:21,000
对吧

875
00:33:21,000 --> 00:33:23,000
你就找不到那种

876
00:33:23,000 --> 00:33:25,000
那你再回去找

877
00:33:25,000 --> 00:33:27,000
就只能找那种比如说基于 arm 的

878
00:33:27,000 --> 00:33:27,000
对吧

879
00:33:27,000 --> 00:33:29,000
但你现在你基于 arm 的处理器的话

880
00:33:29,000 --> 00:33:32,000
它的 CPU 的性能

881
00:33:32,000 --> 00:33:33,000
好像又跟不上英特尔的最新的

882
00:33:33,000 --> 00:33:34,000
像什么 Browell

883
00:33:34,000 --> 00:33:36,000
对它功耗低

884
00:33:36,000 --> 00:33:38,000
但是性能又不好

885
00:33:38,000 --> 00:33:39,000
对

886
00:33:39,000 --> 00:33:42,000
比如说我现在都没有找到比较合适的

887
00:33:42,000 --> 00:33:42,000
能够跑的机器

888
00:33:42,000 --> 00:33:46,000
能够跑满一个千兆口的一个基于 arm 的处理

889
00:33:46,000 --> 00:33:47,000
在 SUC

890
00:33:49,000 --> 00:33:51,000
所以就是就挺尴尬的

891
00:33:51,000 --> 00:33:54,000
你有看什么惠普或者是

892
00:33:54,000 --> 00:33:57,000
我还有其他厂商戴尔做过

893
00:33:57,000 --> 00:33:58,000
我看过没有任何一款

894
00:33:58,000 --> 00:34:00,000
他们的 microserver 你有看过

895
00:34:00,000 --> 00:34:01,000
没有

896
00:34:01,000 --> 00:34:03,000
惠普有一款是作为那种 NAS 的

897
00:34:03,000 --> 00:34:06,000
就是做网络存储的那个 microserver

898
00:34:06,000 --> 00:34:09,000
它是可以给你选择用那个是 I 5

899
00:34:09,000 --> 00:34:12,000
还是还有一个是志强的处理器了

900
00:34:12,000 --> 00:34:12,000
但是那个东西

901
00:34:12,000 --> 00:34:14,000
起价是就光是壳子

902
00:34:14,000 --> 00:34:16,000
它是有一个小机箱的

903
00:34:16,000 --> 00:34:17,000
然后带一个主板

904
00:34:17,000 --> 00:34:19,000
然后有一个选择是没有

905
00:34:19,000 --> 00:34:21,000
就是它有几个配置

906
00:34:21,000 --> 00:34:22,000
最低那个就是 barebond

907
00:34:22,000 --> 00:34:24,000
就是小机箱加主板

908
00:34:24,000 --> 00:34:25,000
但是不带处理器

909
00:34:25,000 --> 00:34:26,000
不带硬盘的

910
00:34:26,000 --> 00:34:28,000
大概都是 4000 多块钱

911
00:34:28,000 --> 00:34:29,000
OK

912
00:34:29,000 --> 00:34:34,000
所以要不要有想过买一个旧的版本

913
00:34:35,000 --> 00:34:36,000
没有

914
00:34:36,000 --> 00:34:36,000
没有

915
00:34:37,000 --> 00:34:37,000
OK

916
00:34:38,000 --> 00:34:42,000
不过好像国内的旧的服务器也不知道从哪买

917
00:34:42,000 --> 00:34:46,000
你是说买那种机房用的服务器

918
00:34:46,000 --> 00:34:47,000
对机房的旧服务器

919
00:34:47,000 --> 00:34:51,000
然后有一个很大的问题是它的首先功耗非常大

920
00:34:51,000 --> 00:34:52,000
是吧

921
00:34:52,000 --> 00:34:54,000
都是几百瓦的功耗的

922
00:34:54,000 --> 00:34:55,000
如果全开的话

923
00:34:55,000 --> 00:34:57,000
就待机的话也有七八十瓦

924
00:34:57,000 --> 00:34:58,000
你不可能一直 24 小时开着

925
00:34:58,000 --> 00:35:00,000
第二个你不可以把它放家里

926
00:35:00,000 --> 00:35:02,000
所以它因为非常大

927
00:35:02,000 --> 00:35:03,000
哪怕是一个 EU 的话

928
00:35:03,000 --> 00:35:06,000
它也比我们通常的它宝

929
00:35:06,000 --> 00:35:08,000
但是它很宽

930
00:35:08,000 --> 00:35:09,000
它是一个很大的面积的东西

931
00:35:10,000 --> 00:35:12,000
然后非常的吵

932
00:35:12,000 --> 00:35:14,000
因为它是小风扇

933
00:35:14,000 --> 00:35:15,000
高速的小风扇

934
00:35:15,000 --> 00:35:17,000
造业非常大

935
00:35:17,000 --> 00:35:18,000
你不可能放在家里的

936
00:35:18,000 --> 00:35:19,000
你要找那种

937
00:35:20,000 --> 00:35:21,000
对刚才还有一个需求没有说

938
00:35:21,000 --> 00:35:22,000
就是它要静音

939
00:35:22,000 --> 00:35:22,000
对吧

940
00:35:22,000 --> 00:35:24,000
你要它体积要小要静音

941
00:35:24,000 --> 00:35:26,000
你找到头就发现基本上没有什么可选的

942
00:35:26,000 --> 00:35:32,000
就只有这种被动散热的基于英特尔的这种移动处理器的

943
00:35:32,000 --> 00:35:33,000
这种小电脑才适合

944
00:35:33,000 --> 00:35:36,000
但是他们的价钱这也不算特别便宜

945
00:35:36,000 --> 00:35:37,000
就没有 1000 块钱以下的

946
00:35:38,000 --> 00:35:42,000
但是其实你用到的可能就只有 1000 多块钱左右的部件而已

947
00:35:42,000 --> 00:35:46,000
我前两天是在是看谁在推特上说

948
00:35:46,000 --> 00:35:48,000
他买了一个 HP 的

949
00:35:50,000 --> 00:35:52,000
Microsoft 叫什么 gen 8

950
00:35:52,000 --> 00:35:54,000
就是对刚才我说那个东西

951
00:35:55,000 --> 00:35:55,000
OK

952
00:35:55,000 --> 00:35:57,000
然后它是一个 file server

953
00:35:57,000 --> 00:35:59,000
好像也是四五百刀一个

954
00:36:00,000 --> 00:36:00,000
对

955
00:36:01,000 --> 00:36:03,000
然后那个玩意看起来还不错

956
00:36:03,000 --> 00:36:05,000
而且体也挺大的

957
00:36:05,000 --> 00:36:08,000
其实它跟一个普通的小机箱的那种不是小电脑

958
00:36:08,000 --> 00:36:09,000
那个不是 NUC 这么小

959
00:36:09,000 --> 00:36:12,000
它是一个相对来说比较大一点的

960
00:36:12,000 --> 00:36:12,000
机箱的那个不是 NUC 这么小的那个不是 NUC 这么小的

961
00:36:12,000 --> 00:36:12,000
它是一个相对来说比较大一点的

962
00:36:12,000 --> 00:36:12,000
它是一个相对来说比较大一点的

963
00:36:12,000 --> 00:36:14,000
那个盒子

964
00:36:17,000 --> 00:36:18,000
就放了问题是一个

965
00:36:18,000 --> 00:36:22,000
然后它的功耗和价钱都不是太理想

966
00:36:22,000 --> 00:36:23,000
就不是那种

967
00:36:23,000 --> 00:36:25,000
你绝对不会认为它是一个 scooter computer

968
00:36:26,000 --> 00:36:27,000
这是肯定的

969
00:36:27,000 --> 00:36:27,000
对

970
00:36:27,000 --> 00:36:31,000
这是我再我讲的是买一个什么

971
00:36:31,000 --> 00:36:32,000
Moto cycle computer

972
00:36:36,000 --> 00:36:38,000
但如果你家里没有网络存储的话

973
00:36:38,000 --> 00:36:40,000
用一个来自己搭一个基于

974
00:36:40,000 --> 00:36:41,000
FreeBSD

975
00:36:41,000 --> 00:36:42,000
然后跑 ZFS

976
00:36:42,000 --> 00:36:43,000
其实挺好的

977
00:36:43,000 --> 00:36:45,000
对

978
00:36:45,000 --> 00:36:47,000
我觉得首先还是得置个业

979
00:36:47,000 --> 00:36:50,000
然后就可以在家里面想怎么搞怎么搞

980
00:36:50,000 --> 00:36:51,000
这还是得买房子

981
00:36:51,000 --> 00:36:52,000
对

982
00:36:52,000 --> 00:36:56,000
像我那种租房租就比较尴尬了

983
00:36:56,000 --> 00:36:57,000
是吧

984
00:36:57,000 --> 00:36:58,000
你没有买房租计划

985
00:36:58,000 --> 00:37:00,000
还是这个问题话题太 privilege

986
00:37:00,000 --> 00:37:01,000
太四人了

987
00:37:01,000 --> 00:37:03,000
占五吧

988
00:37:03,000 --> 00:37:05,000
我这个想的挺开的

989
00:37:05,000 --> 00:37:07,000
所以深圳留不住你

990
00:37:07,000 --> 00:37:08,000
倒不是这个意思

991
00:37:08,000 --> 00:37:11,000
我是觉得因为现在中国租售比这么低

992
00:37:11,000 --> 00:37:11,000
对吧

993
00:37:11,000 --> 00:37:12,000
你何必

994
00:37:12,000 --> 00:37:12,000
对吧

995
00:37:12,000 --> 00:37:14,000
说点事

996
00:37:14,000 --> 00:37:15,000
嗯

997
00:37:15,000 --> 00:37:16,000
anyway

998
00:37:16,000 --> 00:37:19,000
说回我要找小电脑的一个终极的原因

999
00:37:19,000 --> 00:37:21,000
其实为了比如说跑 VPN

1000
00:37:21,000 --> 00:37:23,000
因为 Open App

1001
00:37:23,000 --> 00:37:24,000
就是那种路由器

1002
00:37:24,000 --> 00:37:26,000
就是那种家用路由器刷起来

1003
00:37:26,000 --> 00:37:28,000
CPU 不管再牛逼

1004
00:37:28,000 --> 00:37:29,000
你其实发现

1005
00:37:29,000 --> 00:37:32,000
它的性能感差 86 还是挺远的

1006
00:37:32,000 --> 00:37:33,000
对特别是跑到 VPN

1007
00:37:33,000 --> 00:37:35,000
它对计算有要求的时候

1008
00:37:35,000 --> 00:37:38,000
就非常糟糕了

1009
00:37:38,000 --> 00:37:41,000
然后我自己在琢磨写一个 VPN

1010
00:37:41,000 --> 00:37:42,000
嗯哼

1011
00:37:42,000 --> 00:37:47,000
因为之前我当然用一个比较知名的一款

1012
00:37:47,000 --> 00:37:49,000
然后后来因为一些原因

1013
00:37:49,000 --> 00:37:52,000
它的源码被删掉了

1014
00:37:52,000 --> 00:37:53,000
OK

1015
00:37:53,000 --> 00:37:58,000
刚好之前我就我之前 Fork 了一份

1016
00:37:58,000 --> 00:37:59,000
然后就回家再研究

1017
00:37:59,000 --> 00:38:01,000
然后也找了 Github 上面

1018
00:38:01,000 --> 00:38:03,000
可是 Github 是个很好的社交工具

1019
00:38:03,000 --> 00:38:04,000
你可以找到很多类似的东西

1020
00:38:04,000 --> 00:38:06,000
可以学习它们背后的原理

1021
00:38:06,000 --> 00:38:08,000
发现这才挺简单的

1022
00:38:08,000 --> 00:38:09,000
然后我就自己动手写了一个

1023
00:38:09,000 --> 00:38:11,000
然后是用 go 写的

1024
00:38:12,000 --> 00:38:13,000
OK

1025
00:38:13,000 --> 00:38:15,000
然后用 go 写就有一个很明显的后果

1026
00:38:15,000 --> 00:38:19,000
那个被被被出于某种原因删掉的

1027
00:38:19,000 --> 00:38:20,000
那个东西是用什么语言写的

1028
00:38:20,000 --> 00:38:22,000
C 写的

1029
00:38:22,000 --> 00:38:23,000
这目前能是

1030
00:38:23,000 --> 00:38:25,000
我我这大家用的比较多的

1031
00:38:25,000 --> 00:38:26,000
那还都是都是 C 语言写的

1032
00:38:26,000 --> 00:38:29,000
这个东西的 Fork 现在在 Github 上很好找

1033
00:38:29,000 --> 00:38:31,000
很好找

1034
00:38:31,000 --> 00:38:35,000
所以很多人都在趁它被那个什么

1035
00:38:35,000 --> 00:38:38,000
被删掉之前去 Fork 了一遍是吧

1036
00:38:38,000 --> 00:38:41,000
应该说是在就有这种这个事情发生之前

1037
00:38:41,000 --> 00:38:42,000
很多人就 Fork 了一遍

1038
00:38:42,000 --> 00:38:44,000
然后出了这个事情 Fork 人就更多了

1039
00:38:44,000 --> 00:38:45,000
OK

1040
00:38:45,000 --> 00:38:48,000
anyway 这个东西反正就是删不掉了

1041
00:38:48,000 --> 00:38:51,000
已经很多人都会用

1042
00:38:51,000 --> 00:38:51,000
对

1043
00:38:51,000 --> 00:38:54,000
然后它那个是 C 写的非常小小

1044
00:38:54,000 --> 00:38:57,000
就是不到 100 K 编译出来

1045
00:38:57,000 --> 00:39:00,000
可以放到路由器上的话就没问题

1046
00:39:00,000 --> 00:39:01,000
但是我用 go 写的话

1047
00:39:01,000 --> 00:39:03,000
你知道 go 编出来一个 Binary

1048
00:39:03,000 --> 00:39:04,000
大概就是几兆了

1049
00:39:04,000 --> 00:39:07,000
Battery inclusive 问题在

1050
00:39:07,000 --> 00:39:09,000
它带一个 Runtime

1051
00:39:09,000 --> 00:39:10,000
它带一个 GC

1052
00:39:10,000 --> 00:39:11,000
所以会比较大一点的

1053
00:39:11,000 --> 00:39:18,000
然后这样放我之前 703 上就比较不太够了

1054
00:39:18,000 --> 00:39:21,000
因为整个内存的只有 32 兆

1055
00:39:21,000 --> 00:39:23,000
你放一个 Runtime 都有几兆

1056
00:39:23,000 --> 00:39:26,000
在运行的话就 out of memory

1057
00:39:26,000 --> 00:39:28,000
OK

1058
00:39:28,000 --> 00:39:30,000
就会触发 OEM 的 killer 了

1059
00:39:30,000 --> 00:39:33,000
然后性能也是一方面

1060
00:39:33,000 --> 00:39:37,000
因为 go 毕竟还是不如 C 那么轻量级

1061
00:39:37,000 --> 00:39:41,000
所以就有更强大的动力去找一个 x 86 的电脑了

1062
00:39:41,000 --> 00:39:42,000
来跑它

1063
00:39:42,000 --> 00:39:44,000
因为就是扯到刚才那个话题

1064
00:39:44,000 --> 00:39:46,000
就是写一个 VPN 其实还挺有意思的

1065
00:39:46,000 --> 00:39:47,000
你知道怎么弄吗

1066
00:39:47,000 --> 00:39:48,000
怎么弄

1067
00:39:48,000 --> 00:39:50,000
原理很简单

1068
00:39:50,000 --> 00:39:52,000
就是你需要先在

1069
00:39:52,000 --> 00:39:53,000
要实现一个协议站

1070
00:39:53,000 --> 00:39:54,000
我觉得就

1071
00:39:54,000 --> 00:39:55,000
不用那么复杂

1072
00:39:55,000 --> 00:39:57,000
其实现在超线统帮你做了很多事情

1073
00:39:57,000 --> 00:39:59,000
OK

1074
00:39:59,000 --> 00:40:00,000
对你现在你要做一个最基本 VPN

1075
00:40:00,000 --> 00:40:03,000
你要需要在你的电脑里面

1076
00:40:03,000 --> 00:40:07,000
超线统帮你模拟出一块网卡

1077
00:40:07,000 --> 00:40:08,000
虚拟网卡

1078
00:40:08,000 --> 00:40:11,000
然后在 Linux 上面这个一般叫做

1079
00:40:11,000 --> 00:40:13,000
叫做 Tunnel Device

1080
00:40:13,000 --> 00:40:14,000
Tunnel Device

1081
00:40:14,000 --> 00:40:17,000
然后 OS X 上也支持这个东西

1082
00:40:17,000 --> 00:40:22,000
Darwin 有一个就是 10.6 还是 10.8 开始

1083
00:40:22,000 --> 00:40:26,000
它有一个内核就 Darwin 内核级别的支持

1084
00:40:26,000 --> 00:40:28,000
叫做 Utunnel

1085
00:40:28,000 --> 00:40:29,000
你可以建这个东西

1086
00:40:29,000 --> 00:40:30,000
然后建了个 Utunnel 有什么用途

1087
00:40:30,000 --> 00:40:33,000
它就会在你的超线统里面虚拟出一块网卡

1088
00:40:33,000 --> 00:40:34,000
你可以这么理解

1089
00:40:34,000 --> 00:40:36,000
然后你可以绑定 IP 地址做路由规则

1090
00:40:36,000 --> 00:40:41,000
完了之后任何写入网卡的 IP 包

1091
00:40:41,000 --> 00:40:47,000
你可以转发到一个用户进程里面去读写它

1092
00:40:47,000 --> 00:40:51,000
然后你在用户进程里面去做一些包装的

1093
00:40:51,000 --> 00:40:55,000
加密或者是压缩或者是变形

1094
00:40:55,000 --> 00:40:56,000
任何处理都可以

1095
00:40:56,000 --> 00:40:57,000
就随便你想怎么弄

1096
00:40:57,000 --> 00:40:59,000
然后你再通过一些其他方式

1097
00:40:59,000 --> 00:41:01,000
转发到你对应的目标服务器上

1098
00:41:01,000 --> 00:41:03,000
就可以实现一个简易的 VPN 了

1099
00:41:03,000 --> 00:41:03,000
OK

1100
00:41:03,000 --> 00:41:05,000
所以没有那么

1101
00:41:05,000 --> 00:41:09,000
没有之前想象的那么低级

1102
00:41:09,000 --> 00:41:09,000
对

1103
00:41:09,000 --> 00:41:11,000
你不需要从网上实现一个整个

1104
00:41:11,000 --> 00:41:15,000
你只要实现一个用户进程的程序就可以了

1105
00:41:15,000 --> 00:41:15,000
对

1106
00:41:15,000 --> 00:41:16,000
这非常简单

1107
00:41:16,000 --> 00:41:19,000
其实然后写一个 Guardian 没什么差别

1108
00:41:19,000 --> 00:41:20,000
啊

1109
00:41:20,000 --> 00:41:21,000
就写一个守护进程

1110
00:41:21,000 --> 00:41:22,000
没什么差别

1111
00:41:22,000 --> 00:41:23,000
感觉好像

1112
00:41:23,000 --> 00:41:26,000
但就不需要写个写个写个这种 D

1113
00:41:26,000 --> 00:41:27,000
你只要写个潜在程序

1114
00:41:27,000 --> 00:41:30,000
然后用那些什么 SystemD

1115
00:41:30,000 --> 00:41:31,000
还有 LaunchD 来管理

1116
00:41:31,000 --> 00:41:32,000
那就好了

1117
00:41:32,000 --> 00:41:34,000
对

1118
00:41:34,000 --> 00:41:35,000
就过程还是蛮简单的

1119
00:41:35,000 --> 00:41:37,000
然后我后来去就理解了逻辑之后

1120
00:41:37,000 --> 00:41:41,000
动手写其实还挺有意思的

1121
00:41:41,000 --> 00:41:41,000
有一些那种

1122
00:41:41,000 --> 00:41:43,000
low level 的东西

1123
00:41:43,000 --> 00:41:44,000
这还挺好玩的

1124
00:41:44,000 --> 00:41:53,000
然后因为 Go 一般要去在创作系统里面创建 TanelDevice 的话

1125
00:41:53,000 --> 00:41:55,000
你需要调用一些系统

1126
00:41:55,000 --> 00:41:56,000
系统那边

1127
00:41:56,000 --> 00:41:57,000
SystemCore

1128
00:41:57,000 --> 00:41:58,000
对

1129
00:41:58,000 --> 00:42:02,000
然后这几个 SystemCore 直接在 Go 里面其实是没有的

1130
00:42:02,000 --> 00:42:07,000
你要用 SysCore 的 package 去自己去做一些处理

1131
00:42:07,000 --> 00:42:11,000
然后就发现其实我之前想的 Go 可能做一些非常简单的 TanelDevice 的东西

1132
00:42:11,000 --> 00:42:13,000
做一些非常底层的事情还有点难度

1133
00:42:13,000 --> 00:42:14,000
因为毕竟包了一层

1134
00:42:14,000 --> 00:42:17,000
不是直接有那些 C 的那些 Header

1135
00:42:17,000 --> 00:42:17,000
你可以引用

1136
00:42:17,000 --> 00:42:20,000
其实你发现做完之后还是挺简单的

1137
00:42:20,000 --> 00:42:27,000
你直接把那些成量从 user include 里面超过来

1138
00:42:27,000 --> 00:42:29,000
然后再用 SysCore 包一下

1139
00:42:29,000 --> 00:42:31,000
其实也不难

1140
00:42:31,000 --> 00:42:35,000
在很多程度上没有比什么 Python 或者是 Swift 难

1141
00:42:35,000 --> 00:42:38,000
是应该比他们简单

1142
00:42:38,000 --> 00:42:38,000
可能搞不好

1143
00:42:38,000 --> 00:42:39,000
对

1144
00:42:39,000 --> 00:42:40,000
其实挺直接的

1145
00:42:40,000 --> 00:42:41,000
然后

1146
00:42:41,000 --> 00:42:46,000
甚至说你在 Go 里面直接调用一个 C 的库也挺容易的

1147
00:42:46,000 --> 00:42:49,000
就没有我之前想象的那么麻烦

1148
00:42:49,000 --> 00:42:52,000
所以你把这个东西开源了吗

1149
00:42:52,000 --> 00:42:53,000
还没有

1150
00:42:53,000 --> 00:42:55,000
这个我就自己写来玩

1151
00:42:55,000 --> 00:42:56,000
开源没什么意思

1152
00:42:56,000 --> 00:43:00,000
因为其他上面已经有超多的这种同类的实现

1153
00:43:00,000 --> 00:43:01,000
但你可能是 C 写的

1154
00:43:01,000 --> 00:43:02,000
没有 Go 写的

1155
00:43:02,000 --> 00:43:04,000
Go 有一个吧

1156
00:43:04,000 --> 00:43:05,000
好像各把

1157
00:43:05,000 --> 00:43:06,000
但是就原理上差不多

1158
00:43:06,000 --> 00:43:08,000
你知道掌握了这条原理之后

1159
00:43:08,000 --> 00:43:10,000
你用 Python 写也是一样的

1160
00:43:10,000 --> 00:43:11,000
其实

1161
00:43:11,000 --> 00:43:14,000
就只是说效率的问题而已

1162
00:43:14,000 --> 00:43:15,000
但是其实都还好

1163
00:43:15,000 --> 00:43:21,000
如果你在 X 86 的服务器上把这种级别都应该感觉不到任何性能上的差异

1164
00:43:21,000 --> 00:43:26,000
所以你过年的时间就拿来写这个 VP 了吗

1165
00:43:26,000 --> 00:43:28,000
就学习一下

1166
00:43:28,000 --> 00:43:31,000
因为我一直对这块就挺好奇的

1167
00:43:31,000 --> 00:43:34,000
之前我想提一些需求

1168
00:43:34,000 --> 00:43:36,000
发现是 C 写的不太好改

1169
00:43:36,000 --> 00:43:39,000
然后顺便为了去读懂那几个代码

1170
00:43:39,000 --> 00:43:41,000
还复习了一遍 C 的和 D 的代码

1171
00:43:41,000 --> 00:43:44,000
用 C 来做网络编程的一些知识

1172
00:43:44,000 --> 00:43:47,000
等于还那个

1173
00:43:47,000 --> 00:43:48,000
还

1174
00:43:48,000 --> 00:43:50,000
就因为 C 好多好多年以前学了

1175
00:43:50,000 --> 00:43:51,000
其实基本上没怎么用过

1176
00:43:51,000 --> 00:43:53,000
然后现在去看了一下

1177
00:43:53,000 --> 00:43:55,000
觉得还能写一些了

1178
00:43:55,000 --> 00:43:56,000
OK

1179
00:43:56,000 --> 00:44:00,000
最开始我是直接用 C 写了一个最基础的版本

1180
00:44:00,000 --> 00:44:02,000
然后发现其实好像改用 Go 写也可以

1181
00:44:02,000 --> 00:44:03,000
然后就 Go 的话

1182
00:44:03,000 --> 00:44:05,000
整个安全性也好很多

1183
00:44:05,000 --> 00:44:06,000
然后也容易一些

1184
00:44:06,000 --> 00:44:08,000
太容易太多了

1185
00:44:08,000 --> 00:44:09,000
我觉得

1186
00:44:09,000 --> 00:44:09,000
嗯

1187
00:44:09,000 --> 00:44:10,000
嗯

1188
00:44:10,000 --> 00:44:10,000
嗯

1189
00:44:10,000 --> 00:44:10,000
嗯

1190
00:44:11,000 --> 00:44:11,000
对好吧

1191
00:44:11,000 --> 00:44:12,000
你可以怎么说

1192
00:44:12,000 --> 00:44:13,000
至少在 mental model 上

1193
00:44:13,000 --> 00:44:14,000
然后容易太多

1194
00:44:14,000 --> 00:44:15,000
我最近在写

1195
00:44:15,000 --> 00:44:18,000
我最近在做一件

1196
00:44:18,000 --> 00:44:23,000
把一个操作系统性质的东西

1197
00:44:23,000 --> 00:44:26,000
整合进一个 Docker container 的事情

1198
00:44:26,000 --> 00:44:29,000
好多地方要重写

1199
00:44:29,000 --> 00:44:31,000
然后用 Python 写的部分还好

1200
00:44:31,000 --> 00:44:35,000
用 C 写的部分真的是改起来太麻烦了

1201
00:44:35,000 --> 00:44:35,000
这个时候要做什么

1202
00:44:35,000 --> 00:44:37,000
为什么会有这个需求

1203
00:44:37,000 --> 00:44:38,000
就

1204
00:44:38,000 --> 00:44:38,000
嗯

1205
00:44:38,000 --> 00:44:41,000
你看很多

1206
00:44:41,000 --> 00:44:42,000
很多知名的数据库产品

1207
00:44:42,000 --> 00:44:45,000
它现在基本上都提供一个官方的 Docker image

1208
00:44:45,000 --> 00:44:48,000
然后我们也想做一个同样的事情

1209
00:44:48,000 --> 00:44:51,000
但是你在一个 Docker container 里面

1210
00:44:51,000 --> 00:44:53,000
跑一个

1211
00:44:53,000 --> 00:44:53,000
服务

1212
00:44:53,000 --> 00:44:57,000
跑一个数据库进程的一个问题

1213
00:44:57,000 --> 00:45:00,000
就是你需要把数据和配置

1214
00:45:00,000 --> 00:45:02,000
独立出来

1215
00:45:02,000 --> 00:45:02,000
对吧

1216
00:45:02,000 --> 00:45:04,000
因为 container 它本身是

1217
00:45:04,000 --> 00:45:06,000
steadless

1218
00:45:06,000 --> 00:45:06,000
对

1219
00:45:06,000 --> 00:45:08,000
是用完机器的

1220
00:45:08,000 --> 00:45:08,000
应该这么说

1221
00:45:08,000 --> 00:45:10,000
然后可能会希望说

1222
00:45:10,000 --> 00:45:15,000
我需要把数据和原数据和配置和

1223
00:45:15,000 --> 00:45:15,000
啊

1224
00:45:15,000 --> 00:45:21,000
lock 之类的所有的 volume 都挂了 container 里面

1225
00:45:21,000 --> 00:45:25,000
但是根据服务器的实现策略的不同

1226
00:45:25,000 --> 00:45:29,000
这个东西可能光挂进去是不够的

1227
00:45:29,000 --> 00:45:31,000
你要给很多很多其他的东西

1228
00:45:31,000 --> 00:45:33,000
总之

1229
00:45:33,000 --> 00:45:36,000
那随后你怎么解决这个问题

1230
00:45:36,000 --> 00:45:38,000
这不存在什么要解决的问题

1231
00:45:38,000 --> 00:45:40,000
就是你如果你很多东西

1232
00:45:40,000 --> 00:45:44,000
都要改成一个被挂进挂到 container 里面的 volume 的话

1233
00:45:44,000 --> 00:45:48,000
那你就需要改原始的很多逻辑

1234
00:45:48,000 --> 00:45:51,000
比如说这个东西它默认说我要写到一个

1235
00:45:51,000 --> 00:45:52,000
slashdev

1236
00:45:52,000 --> 00:45:56,000
slash 什么 hdd 00 data 之类的这么一个文件里面

1237
00:45:56,000 --> 00:45:58,000
或者这么一个 block device 里面

1238
00:45:58,000 --> 00:46:00,000
然后现在我只有一个 volume 可以用了

1239
00:46:00,000 --> 00:46:02,000
那这个东西就得改

1240
00:46:02,000 --> 00:46:04,000
是一个非常细琐而繁大的东西

1241
00:46:04,000 --> 00:46:06,000
而且散布于大马的各个地方

1242
00:46:06,000 --> 00:46:07,000
OK

1243
00:46:07,000 --> 00:46:08,000
对

1244
00:46:08,000 --> 00:46:10,000
是一个比较

1245
00:46:10,000 --> 00:46:13,000
折磨心智的工作

1246
00:46:13,000 --> 00:46:14,000
然后这个时候你就会觉得

1247
00:46:14,000 --> 00:46:17,000
这种情况下我还要去看这个东西

1248
00:46:17,000 --> 00:46:18,000
仔细看这个东西是不是

1249
00:46:18,000 --> 00:46:20,000
是不是个指针

1250
00:46:20,000 --> 00:46:22,000
是不是个什么 whatever

1251
00:46:22,000 --> 00:46:24,000
什么这个是个 structure

1252
00:46:24,000 --> 00:46:25,000
或者是

1253
00:46:25,000 --> 00:46:29,000
就而且部分有一部分它是用这个 C 档来写的

1254
00:46:29,000 --> 00:46:31,000
就是 C Python

1255
00:46:31,000 --> 00:46:32,000
所以

1256
00:46:32,000 --> 00:46:33,000
然后就去

1257
00:46:33,000 --> 00:46:38,000
用 C 档写不是比用直接写 C 要来的

1258
00:46:38,000 --> 00:46:39,000
就是至少看起来更好

1259
00:46:39,000 --> 00:46:40,000
但是

1260
00:46:40,000 --> 00:46:43,000
如果你发现你要改的东西同时存在于两者之中的话

1261
00:46:43,000 --> 00:46:44,000
嗯

1262
00:46:44,000 --> 00:46:48,000
你就会觉得为什么不只只用一种原型呢

1263
00:46:48,000 --> 00:46:50,000
好吧

1264
00:46:50,000 --> 00:46:52,000
它存在一个 mental model 转换

1265
00:46:52,000 --> 00:46:52,000
对吧

1266
00:46:52,000 --> 00:46:54,000
就是我觉得是就这种感觉

1267
00:46:54,000 --> 00:46:55,000
就是你可能

1268
00:46:55,000 --> 00:46:59,000
如果你一天要改三四种

1269
00:46:59,000 --> 00:47:00,000
三四个地方的代码

1270
00:47:00,000 --> 00:47:03,000
然后每个地方的代码是用不同原型的

1271
00:47:03,000 --> 00:47:03,000
比如说

1272
00:47:04,000 --> 00:47:07,000
我可能要先改一个 bash

1273
00:47:07,000 --> 00:47:08,000
改了 bash 之后

1274
00:47:08,000 --> 00:47:10,000
发现这个地方呼叫了一个

1275
00:47:10,000 --> 00:47:11,000
呃

1276
00:47:11,000 --> 00:47:12,000
Python script

1277
00:47:12,000 --> 00:47:13,000
然后改了 Python script

1278
00:47:13,000 --> 00:47:14,000
反而哎

1279
00:47:14,000 --> 00:47:17,000
这个东西才 import 那个东西是用 sidon 写的

1280
00:47:17,000 --> 00:47:19,000
然后 sidon 进了 sidon 的时候

1281
00:47:19,000 --> 00:47:19,000
哎

1282
00:47:19,000 --> 00:47:21,000
他发现他呼叫的这个函数是用 c 写的

1283
00:47:21,000 --> 00:47:24,000
你会觉得有那种就是我看我刚刚在开飞机

1284
00:47:24,000 --> 00:47:25,000
然后呃

1285
00:47:25,000 --> 00:47:27,000
一下子改开火车

1286
00:47:27,000 --> 00:47:29,000
然后过一会又跑去

1287
00:47:29,000 --> 00:47:30,000
骑自行车

1288
00:47:30,000 --> 00:47:34,000
然后要到最后要去推一个独轮车那种感觉

1289
00:47:34,000 --> 00:47:35,000
就

1290
00:47:35,000 --> 00:47:36,000
嗯

1291
00:47:36,000 --> 00:47:38,000
可能一个好优秀的程序员的一个优秀的程序员的

1292
00:47:38,000 --> 00:47:44,000
特征之一就是他的这个所谓 comfortable zone 特别的特别的广

1293
00:47:44,000 --> 00:47:45,000
嗯

1294
00:47:45,000 --> 00:47:45,000
对吧

1295
00:47:45,000 --> 00:47:47,000
他不会觉得写这个东西太低级

1296
00:47:47,000 --> 00:47:48,000
写的东西太高级

1297
00:47:48,000 --> 00:47:49,000
写的东西多简单

1298
00:47:49,000 --> 00:47:51,000
然后写那个东西就特别的呃

1299
00:47:51,000 --> 00:47:53,000
just get it done

1300
00:47:53,000 --> 00:47:54,000
对

1301
00:47:54,000 --> 00:48:01,000
但是如果你真的要一天到晚在这个不同的抽象层级之间

1302
00:48:01,000 --> 00:48:02,000
怎么说

1303
00:48:02,000 --> 00:48:06,000
就量子物理学量子物理学里面能及跃迁是吧

1304
00:48:06,000 --> 00:48:08,000
你从一个轨道越迁到另外一个轨道是这样的

1305
00:48:08,000 --> 00:48:09,000
能量的呀

1306
00:48:09,000 --> 00:48:11,000
是不是觉得脑子有点乱

1307
00:48:11,000 --> 00:48:11,000
对啊

1308
00:48:11,000 --> 00:48:13,000
然后一天之后你就特别累

1309
00:48:13,000 --> 00:48:13,000
我觉得

1310
00:48:13,000 --> 00:48:14,000
啊

1311
00:48:14,000 --> 00:48:15,000
对

1312
00:48:15,000 --> 00:48:21,000
因为你你需要就在脑子里面构建出一个这个层级的模型

1313
00:48:21,000 --> 00:48:22,000
然后毁掉

1314
00:48:22,000 --> 00:48:23,000
然后去另外一个层级

1315
00:48:23,000 --> 00:48:25,000
然后再毁掉

1316
00:48:25,000 --> 00:48:27,000
哈哈哈

1317
00:48:27,000 --> 00:48:28,000
好吧

1318
00:48:28,000 --> 00:48:28,000
对

1319
00:48:28,000 --> 00:48:31,000
那那最后你最后你是怎么解

1320
00:48:31,000 --> 00:48:32,000
就没有解决啊

1321
00:48:32,000 --> 00:48:35,000
就这就是我一日复一日的工作

1322
00:48:35,000 --> 00:48:38,000
这就我目前在做的事情

1323
00:48:38,000 --> 00:48:39,000
就只要最后

1324
00:48:39,000 --> 00:48:41,000
对

1325
00:48:41,000 --> 00:48:42,000
而且有一个很大的问题

1326
00:48:42,000 --> 00:48:45,000
就是如果说你要保证一套源代码

1327
00:48:45,000 --> 00:48:47,000
同时给出两个发行板

1328
00:48:47,000 --> 00:48:50,000
就是一个正常安装版和一个到客人面子的话

1329
00:48:50,000 --> 00:48:51,000
嗯

1330
00:48:51,000 --> 00:48:59,000
就有很多目前可能还有很多这个编译过程的标的过程的坑需要去填

1331
00:48:59,000 --> 00:49:00,000
就你在标的时候

1332
00:49:00,000 --> 00:49:02,000
你需要说这个东西是标的给一面子

1333
00:49:02,000 --> 00:49:05,000
然后接下来还有测试方面的坑

1334
00:49:05,000 --> 00:49:07,000
就是你可能同一功能在

1335
00:49:08,000 --> 00:49:10,000
普通安装情况下就可以用了

1336
00:49:10,000 --> 00:49:12,000
在因为在道克坑天里面就不行了

1337
00:49:12,000 --> 00:49:14,000
这还要专门去测

1338
00:49:14,000 --> 00:49:19,000
然后对总之这是一个牵一把动全身的这种这种这种

1339
00:49:19,000 --> 00:49:21,000
这么一个项目就

1340
00:49:21,000 --> 00:49:22,000
哈哈哈

1341
00:49:22,000 --> 00:49:23,000
挺累的

1342
00:49:23,000 --> 00:49:27,000
所以你们那个产品是用 c 和拍手混合写的

1343
00:49:27,000 --> 00:49:28,000
呃

1344
00:49:28,000 --> 00:49:30,000
恩正是用 c++写的

1345
00:49:30,000 --> 00:49:38,000
然后就呃一个数据库系统基本上可以切分为或者在我们公司是切分为恩正和呃

1346
00:49:38,000 --> 00:49:40,000
呃所谓 clusteros 两部分

1347
00:49:40,000 --> 00:49:43,000
就或者最重要的两个是这两个切分的

1348
00:49:43,000 --> 00:49:47,000
然后还有一些一堆周边的什么一个专门的开发工具啊之类的

1349
00:49:47,000 --> 00:49:49,000
然后恩正是用 c++写的

1350
00:49:49,000 --> 00:49:51,000
呃就是因为性能的原因是吧

1351
00:49:51,000 --> 00:49:52,000
对

1352
00:49:52,000 --> 00:49:57,000
然后呃 clusteros 和 clusteros 基本上是用 pison 和 c 写的

1353
00:49:57,000 --> 00:49:58,000
ok

1354
00:50:00,000 --> 00:50:06,000
然后还有一大堆什么 driver 就是什么 jdbc 啊 odbc 那个.net 的那个

1355
00:50:06,000 --> 00:50:08,000
那就是根据那个那个要

1356
00:50:08,000 --> 00:50:08,000
对

1357
00:50:08,000 --> 00:50:10,000
抓要 drive 他的语言来决定了

1358
00:50:10,000 --> 00:50:11,000
对

1359
00:50:11,000 --> 00:50:11,000
耶娜对

1360
00:50:13,000 --> 00:50:14,000
也是难为你了

1361
00:50:14,000 --> 00:50:15,000
哎

1362
00:50:15,000 --> 00:50:16,000
不过还挺有意思的

1363
00:50:16,000 --> 00:50:22,000
就是你可能在在离开公司那一刹那你会觉得自己做的东西还是挺有意思的

1364
00:50:22,000 --> 00:50:23,000
或者是挺有意义的

1365
00:50:23,000 --> 00:50:26,000
上升到一个上升到一个形而上的

1366
00:50:26,000 --> 00:50:27,000
在你死的那天

1367
00:50:27,000 --> 00:50:28,000
你说啊

1368
00:50:28,000 --> 00:50:29,000
我也是做过

1369
00:50:29,000 --> 00:50:31,000
对我我为人类做出了一些贡献

1370
00:50:31,000 --> 00:50:31,000
对吧

1371
00:50:31,000 --> 00:50:33,000
不像你在做

1372
00:50:33,000 --> 00:50:34,000
就 sirius

1373
00:50:34,000 --> 00:50:35,000
不像你在做赌球网站的时候

1374
00:50:35,000 --> 00:50:36,000
你会说我靠

1375
00:50:36,000 --> 00:50:38,000
我今天做这个东西不知道要回

1376
00:50:38,000 --> 00:50:40,000
不知道要毁灭了多少家庭

1377
00:50:40,000 --> 00:50:40,000
耶

1378
00:50:40,000 --> 00:50:42,000
哈哈哈哈

1379
00:50:42,000 --> 00:50:42,000
嗯

1380
00:50:42,000 --> 00:50:43,000
嗯

1381
00:50:43,000 --> 00:50:44,000
啊

1382
00:50:44,000 --> 00:50:44,000
好吧

1383
00:50:44,000 --> 00:50:45,000
对

1384
00:50:46,000 --> 00:50:46,000
啊

1385
00:50:46,000 --> 00:50:48,000
所以还是可以说是够哈

1386
00:50:48,000 --> 00:50:50,000
会会感觉会清爽一些

1387
00:50:50,000 --> 00:50:53,000
对回到刚才说的这件事情来就是我觉得如果你能写一个东西

1388
00:50:53,000 --> 00:50:55,000
然后只用这一种语言来写

1389
00:50:55,000 --> 00:50:57,000
然后只用一个呃

1390
00:50:57,000 --> 00:51:00,000
就你有一个比较清晰的嗯

1391
00:51:00,000 --> 00:51:01,000
呃

1392
00:51:01,000 --> 00:51:04,000
割裂的独立的模块

1393
00:51:04,000 --> 00:51:07,000
画的层级是一个比较好的事情

1394
00:51:07,000 --> 00:51:07,000
去

1395
00:51:07,000 --> 00:51:08,000
这是不是要

1396
00:51:08,000 --> 00:51:11,000
求那个语言具备更好的这个什么这个之类的适用性

1397
00:51:11,000 --> 00:51:14,000
就是他就能够写底层的东西

1398
00:51:14,000 --> 00:51:15,000
也能写高层东西

1399
00:51:15,000 --> 00:51:19,000
并且呃就是他对应的那个抽象层级不会特别

1400
00:51:20,000 --> 00:51:20,000
嗯

1401
00:51:21,000 --> 00:51:23,000
就不会特别低或者特别高影响性能

1402
00:51:23,000 --> 00:51:25,000
或者也也或者说是不太好理解

1403
00:51:25,000 --> 00:51:27,000
对你要找一个 sweet spot

1404
00:51:28,000 --> 00:51:29,000
嗯

1405
00:51:29,000 --> 00:51:31,000
sweep 的算是这样的一种语言吧

1406
00:51:32,000 --> 00:51:33,000
呃当时设计的时候就这么考虑吧

1407
00:51:33,000 --> 00:51:36,000
又能写操作系统又能写长程应用

1408
00:51:36,000 --> 00:51:37,000
我经常觉得是应该是

1409
00:51:37,000 --> 00:51:38,000
应该是

1410
00:51:38,000 --> 00:51:38,000
因为

1411
00:51:39,000 --> 00:51:42,000
sweet 现在基本上是苹果把宝都压在 sweep 上

1412
00:51:42,000 --> 00:51:43,000
对

1413
00:51:43,000 --> 00:51:47,000
因为这不是大家在炒那个又在那个苹果的那个软件质量的问题又出来了吗

1414
00:51:47,000 --> 00:51:49,000
然后前段还在

1415
00:51:49,000 --> 00:51:55,000
还他们那个高管还去那个呃节目上那个博客节目上去讲那个我们这如何如何努力啊什么

1416
00:51:55,000 --> 00:51:56,000
这些

1417
00:51:56,000 --> 00:51:57,000
但其实我在想啊

1418
00:51:57,000 --> 00:51:58,000
其实从软件工程的一点都来看

1419
00:51:58,000 --> 00:51:59,000
不就是因为

1420
00:52:00,000 --> 00:52:01,000
这个

1421
00:52:01,000 --> 00:52:02,000
就是软件的复杂度提升了吗

1422
00:52:02,000 --> 00:52:04,000
有现在需求越来越多

1423
00:52:04,000 --> 00:52:04,000
对吧

1424
00:52:04,000 --> 00:52:04,000
各种什么

1425
00:52:04,000 --> 00:52:07,000
而且还处在一个技术转型期

1426
00:52:07,000 --> 00:52:10,000
就是他们之前一直用的那个 objectivec

1427
00:52:10,000 --> 00:52:12,000
它其实是一个

1428
00:52:12,000 --> 00:52:14,000
比较过时的技术吧

1429
00:52:14,000 --> 00:52:17,000
就是说它的那个适用性是比较窄的

1430
00:52:18,000 --> 00:52:19,000
呃

1431
00:52:19,000 --> 00:52:22,000
就他不能他不能用来写这个内核

1432
00:52:22,000 --> 00:52:23,000
因为它不够高效吗

1433
00:52:23,000 --> 00:52:25,000
它是一个有有那个 run time 的系统

1434
00:52:25,000 --> 00:52:26,000
对吧

1435
00:52:26,000 --> 00:52:28,000
他在 c 上面加了一层 run time

1436
00:52:28,000 --> 00:52:29,000
对

1437
00:52:29,000 --> 00:52:29,000
是这样的

1438
00:52:29,000 --> 00:52:29,000
对

1439
00:52:29,000 --> 00:52:32,000
但是也可以吧

1440
00:52:32,000 --> 00:52:33,000
但是只不过没有人要做

1441
00:52:33,000 --> 00:52:36,000
而且或者说以前的电脑性能不允许人们这样做

1442
00:52:36,000 --> 00:52:37,000
那就是

1443
00:52:37,000 --> 00:52:37,000
对

1444
00:52:37,000 --> 00:52:38,000
对

1445
00:52:38,000 --> 00:52:45,000
就是它的修得经济

1446
00:52:45,000 --> 00:52:47,000
因为我们的有机能不够好嘛

1447
00:52:47,000 --> 00:52:47,000
对

1448
00:52:48,000 --> 00:52:50,000
然后另外就另外一方面

1449
00:52:50,000 --> 00:52:52,000
它写那种非常复杂的应用

1450
00:52:52,000 --> 00:52:53,000
它的抽象城级又不够

1451
00:52:53,000 --> 00:52:53,000
对吧

1452
00:52:53,000 --> 00:52:55,000
还是毕竟是一个 c 的语法

1453
00:52:55,000 --> 00:52:55,000
然后各种

1454
00:52:56,000 --> 00:52:56,000
我们也看到了

1455
00:52:56,000 --> 00:52:58,000
连传络参数都那么坑爹

1456
00:52:58,000 --> 00:52:59,000
对

1457
00:52:59,000 --> 00:53:00,000
我觉得青 UNC

1458
00:53:00,000 --> 00:53:01,000
最大的一个问题

1459
00:53:01,000 --> 00:53:02,000
可能是他要求

1460
00:53:02,000 --> 00:53:03,000
就是一个好

1461
00:53:03,000 --> 00:53:03,000
ngc 程序员必须能够

1462
00:53:05,000 --> 00:53:06,000
熟练地在

1463
00:53:06,000 --> 00:53:09,000
他可能就跳成了一个欧的模式

1464
00:53:09,000 --> 00:53:10,000
对

1465
00:53:10,000 --> 00:53:12,000
跳进了那个 smalltalk 模式

1466
00:53:12,000 --> 00:53:15,000
然后他开始打什么 void 星啊

1467
00:53:15,000 --> 00:53:16,000
之类的乱七八糟的时候

1468
00:53:16,000 --> 00:53:17,000
就又回到了 C 模式

1469
00:53:17,000 --> 00:53:19,000
然后你必须在两种模式之间

1470
00:53:19,000 --> 00:53:21,000
之间转来转去

1471
00:53:21,000 --> 00:53:22,000
就有点像一个

1472
00:53:22,000 --> 00:53:22,000
怎么说

1473
00:53:22,000 --> 00:53:23,000
就有点像像瑞士人

1474
00:53:23,000 --> 00:53:25,000
工作的时候说高等德语

1475
00:53:25,000 --> 00:53:27,000
回家了开始说土德语

1476
00:53:27,000 --> 00:53:30,000
然后这样完成一个身份转换

1477
00:53:30,000 --> 00:53:33,000
但是 Swift 就没有这个

1478
00:53:33,000 --> 00:53:35,000
就没有这个坑爹的地方了

1479
00:53:35,000 --> 00:53:39,000
所以也许在不久将来

1480
00:53:39,000 --> 00:53:41,000
优秀的 Swift 程序员要比

1481
00:53:41,000 --> 00:53:43,000
会会会

1482
00:53:43,000 --> 00:53:46,000
或者说成为一个优秀的 Swift 程序员的成本

1483
00:53:46,000 --> 00:53:49,000
应该要比 OpticC 程序员高一点

1484
00:53:49,000 --> 00:53:50,000
低一点

1485
00:53:50,000 --> 00:53:50,000
对

1486
00:53:50,000 --> 00:53:54,000
因为我最近在琢磨这个事儿

1487
00:53:54,000 --> 00:53:55,000
就是因为那个

1488
00:53:55,000 --> 00:53:57,000
我最近写购写的比较多一点

1489
00:53:57,000 --> 00:53:58,000
然后也觉得挺爽的

1490
00:53:58,000 --> 00:53:59,000
但是我还是知道

1491
00:53:59,000 --> 00:54:00,000
它的短板在那里

1492
00:54:00,000 --> 00:54:01,000
因为它是一个有 GC 的语言

1493
00:54:01,000 --> 00:54:02,000
对吧

1494
00:54:02,000 --> 00:54:03,000
有很多厂商

1495
00:54:03,000 --> 00:54:04,000
其实它是不适用的

1496
00:54:04,000 --> 00:54:05,000
非常底层的

1497
00:54:05,000 --> 00:54:05,000
对

1498
00:54:05,000 --> 00:54:05,000
对

1499
00:54:05,000 --> 00:54:06,000
�许它写出来的那个 banner 也比较大

1500
00:54:06,000 --> 00:54:07,000
对吧

1501
00:54:07,000 --> 00:54:08,000
然后说最少的一个

1502
00:54:08,000 --> 00:54:10,000
你就 printf 一个 hello world

1503
00:54:10,000 --> 00:54:11,000
出来也有

1504
00:54:11,000 --> 00:54:13,000
一兆多还是两兆

1505
00:54:13,000 --> 00:54:16,000
就是说也不够那么的轻量级

1506
00:54:16,000 --> 00:54:19,000
然后就做一些

1507
00:54:19,000 --> 00:54:20,000
我觉得网络层的

1508
00:54:20,000 --> 00:54:21,000
网络级别的

1509
00:54:21,000 --> 00:54:23,000
就是我们怎么定义

1510
00:54:23,000 --> 00:54:24,000
就是中等程度的

1511
00:54:24,000 --> 00:54:25,000
中等复杂度的应用

1512
00:54:25,000 --> 00:54:26,000
我觉得还是非常好的

1513
00:54:26,000 --> 00:54:28,000
但是再复杂一些

1514
00:54:28,000 --> 00:54:31,000
就是说一些叫做 DSL

1515
00:54:31,000 --> 00:54:32,000
它可能不太适合写

1516
00:54:32,000 --> 00:54:32,000
对吧

1517
00:54:32,000 --> 00:54:33,000
但底层的

1518
00:54:33,000 --> 00:54:34,000
最简单的一个

1519
00:54:34,000 --> 00:54:35,000
就是你用 go 来

1520
00:54:35,000 --> 00:54:37,000
写安卓的 GUI 这么写

1521
00:54:37,000 --> 00:54:39,000
好像没有什么特别好的

1522
00:54:39,000 --> 00:54:40,000
那个是包的问题

1523
00:54:40,000 --> 00:54:41,000
那个还好

1524
00:54:41,000 --> 00:54:43,000
我就说他的语言的

1525
00:54:43,000 --> 00:54:46,000
语法的抽象程度一般化

1526
00:54:46,000 --> 00:54:48,000
就是你写一些非常复杂的

1527
00:54:48,000 --> 00:54:49,000
高层的应用就不太现实了

1528
00:54:49,000 --> 00:54:51,000
对我的点就是说

1529
00:54:51,000 --> 00:54:53,000
GUI 程序实际上是

1530
00:54:53,000 --> 00:54:54,000
有时候是非常复杂的

1531
00:54:54,000 --> 00:54:55,000
对吧

1532
00:54:55,000 --> 00:54:56,000
你用 Java 不也写了吗

1533
00:54:56,000 --> 00:55:00,000
但是 Java 在另一方面

1534
00:55:00,000 --> 00:55:02,000
可是 Java 和 Object C

1535
00:55:02,000 --> 00:55:04,000
都是相当啰嗦的语言

1536
00:55:04,000 --> 00:55:06,000
啰嗦的语言来写 GUI 是比较

1537
00:55:06,000 --> 00:55:08,000
脑残的是吧

1538
00:55:08,000 --> 00:55:09,000
对吧

1539
00:55:09,000 --> 00:55:10,000
GUI 这个东西是

1540
00:55:10,000 --> 00:55:13,000
最好的 GUI 是描述式的

1541
00:55:13,000 --> 00:55:14,000
对吧

1542
00:55:14,000 --> 00:55:16,000
但是如果你不得不用一种编程语言

1543
00:55:16,000 --> 00:55:16,000
去写

1544
00:55:16,000 --> 00:55:17,000
去

1545
00:55:17,000 --> 00:55:20,000
以编程的方式来生成它的话

1546
00:55:20,000 --> 00:55:21,000
那我觉得其实啰嗦

1547
00:55:21,000 --> 00:55:22,000
不失为一种好事

1548
00:55:22,000 --> 00:55:24,000
因为你能控制的地方

1549
00:55:24,000 --> 00:55:25,000
或者说能

1550
00:55:25,000 --> 00:55:27,000
我明白你的意思

1551
00:55:27,000 --> 00:55:29,000
但是会影响那个效率

1552
00:55:29,000 --> 00:55:29,000
就理解起来

1553
00:55:29,000 --> 00:55:30,000
就有

1554
00:55:30,000 --> 00:55:33,000
我一直坚信这么一种理论

1555
00:55:33,000 --> 00:55:33,000
就是那个

1556
00:55:33,000 --> 00:55:35,000
人的这个

1557
00:55:35,000 --> 00:55:36,000
这个大脑

1558
00:55:36,000 --> 00:55:37,000
这个 processing power

1559
00:55:37,000 --> 00:55:38,000
它的那个

1560
00:55:38,000 --> 00:55:40,000
它的那个处理能力

1561
00:55:40,000 --> 00:55:41,000
是有上限的吧

1562
00:55:41,000 --> 00:55:44,000
如果说你东西太底层了

1563
00:55:44,000 --> 00:55:45,000
或者说这个太 verbose

1564
00:55:45,000 --> 00:55:47,000
就是太啰嗦的话

1565
00:55:47,000 --> 00:55:49,000
其实你一次在头脑中

1566
00:55:49,000 --> 00:55:51,000
你就看一瓶代码吧

1567
00:55:51,000 --> 00:55:52,000
你能知道它在做什么事情

1568
00:55:52,000 --> 00:55:55,000
你能在 hold 住的那个短时间

1569
00:55:55,000 --> 00:55:56,000
能够理解的

1570
00:55:56,000 --> 00:55:57,000
它的那个量是有限的

1571
00:55:57,000 --> 00:55:58,000
这样的话

1572
00:55:58,000 --> 00:55:58,000
你就不能理解

1573
00:55:58,000 --> 00:56:00,000
非常多这种高层次的概念

1574
00:56:00,000 --> 00:56:01,000
也就会使得你这个

1575
00:56:01,000 --> 00:56:02,000
整个的复杂度

1576
00:56:02,000 --> 00:56:03,000
就你能够

1577
00:56:03,000 --> 00:56:04,000
可管理的复杂度

1578
00:56:04,000 --> 00:56:05,000
是有限度的

1579
00:56:05,000 --> 00:56:06,000
这样的话

1580
00:56:06,000 --> 00:56:07,000
如果有一些更加复杂的应用过来

1581
00:56:07,000 --> 00:56:08,000
其实你就不能

1582
00:56:08,000 --> 00:56:10,000
很好地去理解它

1583
00:56:10,000 --> 00:56:11,000
这个时候就会出现

1584
00:56:11,000 --> 00:56:12,000
各种各样的软件的

1585
00:56:12,000 --> 00:56:13,000
质量的问题

1586
00:56:13,000 --> 00:56:15,000
没错

1587
00:56:15,000 --> 00:56:18,000
所以我为什么讲那个

1588
00:56:18,000 --> 00:56:19,000
为什么现在

1589
00:56:19,000 --> 00:56:21,000
一直在炒这个苹果的软件质量下降

1590
00:56:21,000 --> 00:56:22,000
我觉得就是这个东西的一个

1591
00:56:22,000 --> 00:56:24,000
一个结果嘛

1592
00:56:24,000 --> 00:56:26,000
就是 Objective C 导致的这个原因

1593
00:56:26,000 --> 00:56:26,000
对吧

1594
00:56:26,000 --> 00:56:28,000
可能安卓也会遇到类似的问题

1595
00:56:28,000 --> 00:56:29,000
因为 Java 也能谈谈

1596
00:56:29,000 --> 00:56:30,000
可表达性也就只有那样

1597
00:56:30,000 --> 00:56:32,000
但安卓

1598
00:56:32,000 --> 00:56:33,000
不

1599
00:56:33,000 --> 00:56:33,000
Java 可能还有

1600
00:56:33,000 --> 00:56:35,000
一些什么救命的稻草

1601
00:56:35,000 --> 00:56:36,000
什么可以用 Scalar 来写

1602
00:56:36,000 --> 00:56:38,000
反正编程 JVM 就差不多

1603
00:56:38,000 --> 00:56:38,000
对吧

1604
00:56:38,000 --> 00:56:39,000
Java 吧

1605
00:56:39,000 --> 00:56:41,000
Java

1606
00:56:41,000 --> 00:56:43,000
OK

1607
00:56:43,000 --> 00:56:44,000
但是

1608
00:56:44,000 --> 00:56:45,000
但是就是 Go 的话

1609
00:56:45,000 --> 00:56:46,000
其实我也

1610
00:56:46,000 --> 00:56:48,000
我也看不到它作为上层应用

1611
00:56:48,000 --> 00:56:49,000
在这方面有什么

1612
00:56:49,000 --> 00:56:52,000
有任何独到的一个什么方法

1613
00:56:52,000 --> 00:56:54,000
就是它的那个

1614
00:56:54,000 --> 00:56:56,000
这个适用性还是相对来说

1615
00:56:56,000 --> 00:56:57,000
窄一点点吧

1616
00:56:57,000 --> 00:56:58,000
然后大家还要回到

1617
00:56:58,000 --> 00:56:59,000
就是刚才写底层的一些东西

1618
00:56:59,000 --> 00:57:01,000
比较偏向 C

1619
00:57:01,000 --> 00:57:02,000
更接近于

1620
00:57:02,000 --> 00:57:03,000
呃

1621
00:57:03,000 --> 00:57:03,000
呃

1622
00:57:03,000 --> 00:57:05,000
硬件底层的那种

1623
00:57:05,000 --> 00:57:06,000
就是

1624
00:57:06,000 --> 00:57:08,000
各位也不是特别适合

1625
00:57:08,000 --> 00:57:09,000
虽然刚刚说写 VPN 的那种

1626
00:57:09,000 --> 00:57:10,000
也可以算凑合一下

1627
00:57:10,000 --> 00:57:11,000
对吧

1628
00:57:11,000 --> 00:57:15,000
但是还没有像 Swift 那个下线那么那么低

1629
00:57:15,000 --> 00:57:15,000
我觉得

1630
00:57:17,000 --> 00:57:19,000
修下线的时候

1631
00:57:19,000 --> 00:57:19,000
对

1632
00:57:19,000 --> 00:57:20,000
我就够

1633
00:57:20,000 --> 00:57:22,000
就是一个适用的下线

1634
00:57:22,000 --> 00:57:23,000
适用的上线吧

1635
00:57:23,000 --> 00:57:23,000
对啊

1636
00:57:23,000 --> 00:57:24,000
一定要这个这个

1637
00:57:24,000 --> 00:57:25,000
这个叫什么

1638
00:57:25,000 --> 00:57:26,000
dynamic range

1639
00:57:26,000 --> 00:57:27,000
这个一定要广

1640
00:57:27,000 --> 00:57:28,000
动态范围

1641
00:57:28,000 --> 00:57:30,000
这个一定要够广

1642
00:57:30,000 --> 00:57:30,000
对

1643
00:57:30,000 --> 00:57:32,000
就是一种 HDR

1644
00:57:32,000 --> 00:57:32,000
对不对

1645
00:57:32,000 --> 00:57:33,000
对对对

1646
00:57:33,000 --> 00:57:35,000
因为这个是回答你刚才你说那个问题

1647
00:57:35,000 --> 00:57:40,000
就是说如果你只想用一套语言去解决一个非常底层

1648
00:57:40,000 --> 00:57:44,000
同时又有非常上层应用需求的这个一个一个一个问题的话

1649
00:57:44,000 --> 00:57:45,000
好像你只有这么一个方案了

1650
00:57:45,000 --> 00:57:47,000
不然的话就只能混合语言了

1651
00:57:47,000 --> 00:57:48,000
然后合语言就会出现

1652
00:57:48,000 --> 00:57:49,000
刚才说那种不断的

1653
00:57:49,000 --> 00:57:50,000
JavaScript

1654
00:57:50,000 --> 00:57:52,000
对范式迁移的问题

1655
00:57:52,000 --> 00:57:52,000
对

1656
00:57:52,000 --> 00:57:54,000
跟 JavaScript 什么关系

1657
00:57:54,000 --> 00:57:58,000
JavaScript 现在不也是就是前端用后端也用嘛

1658
00:57:58,000 --> 00:58:01,000
就你说一套语言包揽

1659
00:58:01,000 --> 00:58:02,000
就是这个

1660
00:58:02,000 --> 00:58:03,000
没有没有他那个还只是

1661
00:58:03,000 --> 00:58:06,000
这其实也是一种现在被当做 HDR 来用语

1662
00:58:06,000 --> 00:58:08,000
那个是应用传输

1663
00:58:08,000 --> 00:58:10,000
有那我们还不是说这个高低层

1664
00:58:10,000 --> 00:58:12,000
他还是写一个非常高层的应用

1665
00:58:12,000 --> 00:58:14,000
前端写那个故意后端也是写那个

1666
00:58:14,000 --> 00:58:16,000
就是 logic 那部分

1667
00:58:16,000 --> 00:58:20,000
他不是说用来写这个什么 web server 本身

1668
00:58:20,000 --> 00:58:20,000
对

1669
00:58:20,000 --> 00:58:21,000
不能用 JavaScript 来写一个操作

1670
00:58:21,000 --> 00:58:21,000
什么

1671
00:58:21,000 --> 00:58:23,000
呃

1672
00:58:23,000 --> 00:58:26,000
有人这样干过

1673
00:58:26,000 --> 00:58:28,000
对有人这样干过

1674
00:58:28,000 --> 00:58:28,000
对啊

1675
00:58:28,000 --> 00:58:30,000
他在他是用那个什么

1676
00:58:30,000 --> 00:58:32,000
他是用那个 LVM compile 过来的

1677
00:58:32,000 --> 00:58:33,000
然后在 JavaScript 里面去用

1678
00:58:33,000 --> 00:58:35,000
就是把 C 编译成这个 JavaScript

1679
00:58:35,000 --> 00:58:36,000
然后在浏览器里面跑了

1680
00:58:36,000 --> 00:58:38,000
还要是某种的 boss 还是什么来的

1681
00:58:38,000 --> 00:58:39,000
我记得

1682
00:58:39,000 --> 00:58:40,000
JavaScript

1683
00:58:40,000 --> 00:58:41,000
S

1684
00:58:41,000 --> 00:58:42,000
ASM

1685
00:58:43,000 --> 00:58:44,000
对对对当做汇编来用嘛

1686
00:58:44,000 --> 00:58:47,000
这这个不算这个太很科技了

1687
00:58:47,000 --> 00:58:47,000
没错

1688
00:58:47,000 --> 00:58:48,000
是的

1689
00:58:48,000 --> 00:58:51,000
这有点像就是把一个光谱的某一段

1690
00:58:51,000 --> 00:58:54,000
然后把它放大到其他的范围

1691
00:58:54,000 --> 00:58:56,000
太黑了

1692
00:58:56,000 --> 00:58:57,000
啊

1693
00:58:57,000 --> 00:58:58,000
说到那个语言

1694
00:58:58,000 --> 00:58:59,000
那个最近有个小新闻

1695
00:58:59,000 --> 00:59:00,000
就是那个 go 1.6

1696
00:59:00,000 --> 00:59:01,000
因为昨天发布的吧

1697
00:59:01,000 --> 00:59:02,000
2 月 10 日

1698
00:59:03,000 --> 00:59:04,000
是前天前几天了

1699
00:59:04,000 --> 00:59:05,000
2 月 17 号应该是

1700
00:59:05,000 --> 00:59:07,000
17 号是三天前的

1701
00:59:07,000 --> 00:59:08,000
三点前

1702
00:59:08,000 --> 00:59:10,000
然后那个呃那个 1.6

1703
00:59:10,000 --> 00:59:13,000
他有一个非常大的提升

1704
00:59:13,000 --> 00:59:15,000
是把那个就是 gabbage collector 的

1705
00:59:15,000 --> 00:59:16,000
那个就是 GC pause

1706
00:59:16,000 --> 00:59:17,000
GC 暂停

1707
00:59:17,000 --> 00:59:20,000
对那种特别大的那个

1708
00:59:20,000 --> 00:59:21,000
对对对

1709
00:59:21,000 --> 00:59:25,000
对的对对对对对的时候

1710
00:59:25,000 --> 00:59:26,000
呃的的那个 GC

1711
00:59:26,000 --> 00:59:29,000
泡就降低到了可能 10 个毫秒以内吧

1712
00:59:29,000 --> 00:59:30,000
其实还挺惊人的

1713
00:59:30,000 --> 00:59:31,000
我觉得嗯

1714
00:59:31,000 --> 00:59:33,000
就虽然不是完全的

1715
00:59:33,000 --> 00:59:34,000
那种就是所谓 puzzle

1716
00:59:34,000 --> 00:59:36,000
就是无暂停的机子啊

1717
00:59:36,000 --> 00:59:38,000
但是其实已经对绝大多数的

1718
00:59:38,000 --> 00:59:39,000
都非对实时性要求

1719
00:59:39,000 --> 00:59:40,000
没有那么高的应用

1720
00:59:40,000 --> 00:59:41,000
我觉得已经够用了

1721
00:59:41,000 --> 00:59:44,000
再加上你做一些呃稍微基础的

1722
00:59:44,000 --> 00:59:46,000
那个内存管理

1723
00:59:46,000 --> 00:59:47,000
就不要闪烁那么多垃圾的话

1724
00:59:47,000 --> 00:59:50,000
我觉得很多应用用那个构写

1725
00:59:50,000 --> 00:59:52,000
不会比用 JVM 调优过的

1726
00:59:52,000 --> 00:59:55,000
那个就比调用过的 JVM 的那个 GC 的

1727
00:59:55,000 --> 00:59:56,000
来的要弱

1728
00:59:56,000 --> 00:59:56,000
我觉得

1729
00:59:57,000 --> 00:59:59,000
OK 主要是开发效果要好很多

1730
00:59:59,000 --> 01:00:02,000
因为我之前挺我看到有些人在做那个

1731
01:00:02,000 --> 01:00:02,000
嗯

1732
01:00:03,000 --> 01:00:04,000
你这有个叫什么来的

1733
01:00:04,000 --> 01:00:05,000
啊

1734
01:00:05,000 --> 01:00:06,000
广告实时竞价

1735
01:00:07,000 --> 01:00:09,000
广告实时竞价

1736
01:00:09,000 --> 01:00:10,000
就是就是这样吧

1737
01:00:10,000 --> 01:00:11,000
就是你有很多这个广告位

1738
01:00:11,000 --> 01:00:14,000
你要去决根据哪个用户跑过来的

1739
01:00:14,000 --> 01:00:16,000
那个他的那个用户的这个 user profile

1740
01:00:16,000 --> 01:00:18,000
你要决定他给他展示哪个广告

1741
01:00:18,000 --> 01:00:18,000
会效果最好

1742
01:00:18,000 --> 01:00:20,000
然后你能收到更多的钱

1743
01:00:20,000 --> 01:00:21,000
然后能卖出更多的广告

1744
01:00:21,000 --> 01:00:22,000
就是对广告

1745
01:00:22,000 --> 01:00:23,000
有个排名

1746
01:00:23,000 --> 01:00:25,000
他会要在多少毫秒内要完成

1747
01:00:25,000 --> 01:00:26,000
这个

1748
01:00:26,000 --> 01:00:28,000
你可能有几万个广告

1749
01:00:28,000 --> 01:00:29,000
你要选出可能三个

1750
01:00:29,000 --> 01:00:29,000
对吧

1751
01:00:29,000 --> 01:00:31,000
排到这个前面展示给那些用户

1752
01:00:31,000 --> 01:00:32,000
他对这个实时性要求

1753
01:00:32,000 --> 01:00:33,000
还是挺高的

1754
01:00:33,000 --> 01:00:37,000
就把我看到有人在用那个很多国内的这种

1755
01:00:37,000 --> 01:00:40,000
这种这种叫什么叫做 ad exchange 吧

1756
01:00:40,000 --> 01:00:44,000
就是广告的集中地

1757
01:00:44,000 --> 01:00:45,000
他们会用这个来写

1758
01:00:45,000 --> 01:00:46,000
我还我还挺吃惊的

1759
01:00:48,000 --> 01:00:48,000
OK

1760
01:00:49,000 --> 01:00:49,000
对

1761
01:00:49,000 --> 01:00:51,000
因为之前他们一般的

1762
01:00:51,000 --> 01:00:53,000
我听说的一般的做法是开一个那个 jvm

1763
01:00:53,000 --> 01:00:55,000
然后开一个很很大很大的一个 hip

1764
01:00:55,000 --> 01:00:58,000
比如说 8 个 gb 或者 16 个 gb 的 hip

1765
01:00:58,000 --> 01:00:59,000
然后就不管他了

1766
01:00:59,000 --> 01:01:01,000
就就不用考虑那个 gc 的问题

1767
01:01:01,000 --> 01:01:02,000
这样反正只要够大的吧

1768
01:01:02,000 --> 01:01:02,000
我们

1769
01:01:02,000 --> 01:01:03,000
这样

1770
01:01:03,000 --> 01:01:03,000
我们就不管他了

1771
01:01:03,000 --> 01:01:03,000
我们就不管他了

1772
01:01:03,000 --> 01:01:04,000
然后一天再重启一下就好了

1773
01:01:04,000 --> 01:01:04,000
最多

1774
01:01:06,000 --> 01:01:06,000
对

1775
01:01:06,000 --> 01:01:08,000
这其实也是从一个侧面反映

1776
01:01:08,000 --> 01:01:11,000
目前 gbm 是一个非常 robots 的东西

1777
01:01:11,000 --> 01:01:13,000
其实那个很好的

1778
01:01:13,000 --> 01:01:14,000
就只是说他太重了

1779
01:01:14,000 --> 01:01:18,000
就是有些像我们就写那种有 tlq 工作

1780
01:01:18,000 --> 01:01:19,000
什么一种

1781
01:01:19,000 --> 01:01:21,000
你就不希望因为 jvm 起头很慢

1782
01:01:21,000 --> 01:01:23,000
呃

1783
01:01:23,000 --> 01:01:25,000
取决于好吧

1784
01:01:25,000 --> 01:01:25,000
对没错

1785
01:01:25,000 --> 01:01:28,000
在企业级服务器上肯定是非常庞大

1786
01:01:28,000 --> 01:01:30,000
你你不管怎么样

1787
01:01:30,000 --> 01:01:33,000
你就哪怕你是就这边你就写一个简单的

1788
01:01:33,000 --> 01:01:33,000
哈

1789
01:01:33,000 --> 01:01:34,000
罗瓦等就接着跑一下

1790
01:01:34,000 --> 01:01:36,000
他那个接触起头本身可能要耗掉

1791
01:01:36,000 --> 01:01:37,000
可能几百毫秒

1792
01:01:37,000 --> 01:01:40,000
你感觉到他不是那种那种 ins 等的感觉

1793
01:01:40,000 --> 01:01:40,000
你知道吧

1794
01:01:40,000 --> 01:01:42,000
就不是你不是你输入那个命令点一下的

1795
01:01:42,000 --> 01:01:43,000
马上把他都执行完了

1796
01:01:43,000 --> 01:01:44,000
那那种感觉

1797
01:01:44,000 --> 01:01:46,000
他想要顿一下的那种

1798
01:01:47,000 --> 01:01:49,000
但还是分具体实现了

1799
01:01:49,000 --> 01:01:51,000
不过大大部分情况下是这样的

1800
01:01:51,000 --> 01:01:52,000
这是一个

1801
01:01:52,000 --> 01:01:55,000
然后就主对这个什么目前用那个叫什么呢

1802
01:01:55,000 --> 01:01:56,000
openjdk 吧

1803
01:01:56,000 --> 01:01:58,000
还有那个叫好对好

1804
01:01:58,000 --> 01:01:58,000
是吧

1805
01:01:58,000 --> 01:01:59,000
都是那种比较重的

1806
01:01:59,000 --> 01:02:00,000
好像轻量值的也有

1807
01:02:00,000 --> 01:02:02,000
我不知道安卓那个大伙上轻量级吧

1808
01:02:02,000 --> 01:02:03,000
那肯定是啊

1809
01:02:03,000 --> 01:02:06,000
那个那个是个 gip 吗

1810
01:02:06,000 --> 01:02:08,000
但大部分没有人在 pc 上用吗

1811
01:02:08,000 --> 01:02:09,000
只是在那个安卓上跑呀

1812
01:02:09,000 --> 01:02:09,000
嗯

1813
01:02:10,000 --> 01:02:10,000
对

1814
01:02:10,000 --> 01:02:12,000
google 不干这件事情的话不会有人干

1815
01:02:13,000 --> 01:02:13,000
对

1816
01:02:14,000 --> 01:02:14,000
呃

1817
01:02:14,000 --> 01:02:15,000
还说到语言

1818
01:02:15,000 --> 01:02:16,000
刚才也提了 swift

1819
01:02:16,000 --> 01:02:17,000
是不是有什么新新动向吗

1820
01:02:18,000 --> 01:02:19,000
呃

1821
01:02:19,000 --> 01:02:20,000
swift 最近开

1822
01:02:20,000 --> 01:02:21,000
呃

1823
01:02:21,000 --> 01:02:24,000
org 的 swift org 上最近的新闻就是

1824
01:02:25,000 --> 01:02:30,000
跟 g 跟 go 这个比较底层的一个更新来比

1825
01:02:30,000 --> 01:02:32,000
swift 目前在做一些面子工程

1826
01:02:32,000 --> 01:02:32,000
对

1827
01:02:32,000 --> 01:02:34,000
是 face lifting

1828
01:02:34,000 --> 01:02:37,000
就是因为我们都知道 swift 是跟 coco

1829
01:02:37,000 --> 01:02:39,000
api 绑定在一起的吗

1830
01:02:39,000 --> 01:02:41,000
对至少目前是绑定在一起的

1831
01:02:41,000 --> 01:02:42,000
虽然开源之后

1832
01:02:42,000 --> 01:02:43,000
他肯定会做出一些

1833
01:02:43,000 --> 01:02:46,000
比如说在跟这个就结绑啊

1834
01:02:46,000 --> 01:02:49,000
然后去搞一些呃

1835
01:02:49,000 --> 01:02:50,000
直接呼叫

1836
01:02:50,000 --> 01:02:52,000
利用是原生库啊之类的一些工作

1837
01:02:52,000 --> 01:02:55,000
但是目前他做的一件事情就是

1838
01:02:55,000 --> 01:02:57,000
他有一个所谓 api design guideline

1839
01:02:58,000 --> 01:02:59,000
这个肯定要介绍一下背景啊

1840
01:02:59,000 --> 01:03:02,000
因为之前 coco 的 api 是基因

1841
01:03:02,000 --> 01:03:06,000
是因为那个 rgc 定制的嘛

1842
01:03:06,000 --> 01:03:06,000
等于是

1843
01:03:06,000 --> 01:03:06,000
对

1844
01:03:06,000 --> 01:03:08,000
然后他的有些设计

1845
01:03:08,000 --> 01:03:12,000
对是一个非常有些都有些痕迹是非常非常古老的

1846
01:03:12,000 --> 01:03:14,000
来自于七七八十年代的

1847
01:03:14,000 --> 01:03:16,000
对对对对吧

1848
01:03:16,000 --> 01:03:19,000
然后他的就其实我们我之前那个 swift

1849
01:03:19,000 --> 01:03:20,000
是一点是一点零吗

1850
01:03:20,000 --> 01:03:21,000
是一点零啊

1851
01:03:21,000 --> 01:03:22,000
上次发布那个

1852
01:03:22,000 --> 01:03:23,000
呃

1853
01:03:23,000 --> 01:03:25,000
对现在已经呃

1854
01:03:25,000 --> 01:03:26,000
现在二点几点

1855
01:03:26,000 --> 01:03:27,000
2.1 了

1856
01:03:27,000 --> 01:03:27,000
啊 ok

1857
01:03:27,000 --> 01:03:28,000
二点 2.0

1858
01:03:28,000 --> 01:03:30,000
是你说开源的那个版本吗

1859
01:03:30,000 --> 01:03:31,000
开源那个版本是 2.1

1860
01:03:31,000 --> 01:03:31,000
对吧

1861
01:03:31,000 --> 01:03:32,000
2.1 对

1862
01:03:32,000 --> 01:03:33,000
他发布了我去看了一下

1863
01:03:33,000 --> 01:03:35,000
他们那个就标准库吧

1864
01:03:35,000 --> 01:03:36,000
其实挺

1865
01:03:37,000 --> 01:03:38,000
挺没什么

1866
01:03:38,000 --> 01:03:40,000
就是基本上贫瘠非常贫瘠

1867
01:03:40,000 --> 01:03:41,000
对什么都做不了

1868
01:03:41,000 --> 01:03:43,000
然后他说你稍微要做点事

1869
01:03:43,000 --> 01:03:44,000
你得去用那个叫什么

1870
01:03:44,000 --> 01:03:46,000
那个 coco 那套东西对吧

1871
01:03:46,000 --> 01:03:47,000
对你怎么放

1872
01:03:47,000 --> 01:03:50,000
你稍微做点对稍微做一点比较

1873
01:03:51,000 --> 01:03:52,000
non-trivial 的事情

1874
01:03:52,000 --> 01:03:54,000
就基本上 beyond the hello world

1875
01:03:54,000 --> 01:03:56,000
你就得去钻 coco 的东西

1876
01:03:56,000 --> 01:03:58,000
对然后你我一看那个 coco

1877
01:03:58,000 --> 01:04:00,000
那个一个标准库一看

1878
01:04:00,000 --> 01:04:00,000
哇

1879
01:04:00,000 --> 01:04:02,000
那个风格就跟那个 swift 的语言一样

1880
01:04:02,000 --> 01:04:04,000
就完全不是一个风格了

1881
01:04:04,000 --> 01:04:05,000
就觉得

1882
01:04:05,000 --> 01:04:07,000
你会觉得这个这简直就是 80 年代

1883
01:04:07,000 --> 01:04:10,000
那种等宽字体的牵引的操作手册

1884
01:04:10,000 --> 01:04:13,000
然后你的内容放一个比较新的

1885
01:04:13,000 --> 01:04:15,000
放放在了一个非常精美的

1886
01:04:15,000 --> 01:04:17,000
非常现代的天然音乐页面上的感觉

1887
01:04:17,000 --> 01:04:19,000
那因为当时当时他不是说出了

1888
01:04:19,000 --> 01:04:21,000
那个对那个 ubuntu 的支持

1889
01:04:21,000 --> 01:04:21,000
我想说哎

1890
01:04:21,000 --> 01:04:23,000
那这个写服务端和客户端

1891
01:04:23,000 --> 01:04:24,000
都可以搞定了

1892
01:04:24,000 --> 01:04:24,000
对吧

1893
01:04:24,000 --> 01:04:25,000
都还挺好

1894
01:04:25,000 --> 01:04:26,000
我想学一下

1895
01:04:26,000 --> 01:04:26,000
但一看哇

1896
01:04:26,000 --> 01:04:27,000
标准库怎么长这样

1897
01:04:27,000 --> 01:04:28,000
算了

1898
01:04:28,000 --> 01:04:30,000
这就跟那个 go 的区别很大

1899
01:04:30,000 --> 01:04:31,000
go 它标准库是它是就是本来就不一样的

1900
01:04:31,000 --> 01:04:32,000
它是就是本来就不一样的

1901
01:04:32,000 --> 01:04:33,000
就为 go 定制的标准库

1902
01:04:33,000 --> 01:04:35,000
然后功能都挺齐全的

1903
01:04:35,000 --> 01:04:37,000
大部分现在我现在写的很多应用

1904
01:04:37,000 --> 01:04:38,000
都基本上

1905
01:04:38,000 --> 01:04:40,000
就基本上用不到标准库以外的东西

1906
01:04:40,000 --> 01:04:41,000
就可以搞定

1907
01:04:41,000 --> 01:04:42,000
就还觉得挺爽的

1908
01:04:42,000 --> 01:04:43,000
然后你看 swift 的这个

1909
01:04:43,000 --> 01:04:44,000
哇

1910
01:04:44,000 --> 01:04:45,000
完全无法接受

1911
01:04:45,000 --> 01:04:47,000
所以他们这个做这个面子工程

1912
01:04:47,000 --> 01:04:48,000
我觉得还挺有必要的

1913
01:04:48,000 --> 01:04:50,000
就等于是一个迁移

1914
01:04:50,000 --> 01:04:51,000
对

1915
01:04:51,000 --> 01:04:54,000
他们先是出了一个 API design guidelines

1916
01:04:54,000 --> 01:04:56,000
就是你要为这个

1917
01:04:56,000 --> 01:04:59,000
不管是 send library 来设计 API

1918
01:04:59,000 --> 01:05:02,000
还是你要自己开发 swift API

1919
01:05:02,000 --> 01:05:06,000
都最好都应该遵循这个 design guidelines

1920
01:05:06,000 --> 01:05:09,000
就是比如说里面有一些非常细小的

1921
01:05:09,000 --> 01:05:11,000
比如说应该怎么命名你的方法

1922
01:05:11,000 --> 01:05:13,000
怎么要一致

1923
01:05:13,000 --> 01:05:14,000
对

1924
01:05:14,000 --> 01:05:18,000
去使用一些特定的 convention 之类的

1925
01:05:18,000 --> 01:05:21,000
它那个还是为 swift 的下一个版本

1926
01:05:21,000 --> 01:05:22,000
应该是今年年末的时候

1927
01:05:22,000 --> 01:05:23,000
还是明年年初的时候

1928
01:05:23,000 --> 01:05:24,000
swift 3 吧可能是

1929
01:05:24,000 --> 01:05:26,000
对还是说是 2016 年年底

1930
01:05:26,000 --> 01:05:26,000
是不是

1931
01:05:26,000 --> 01:05:27,000
去年说的时候是什么

1932
01:05:27,000 --> 01:05:32,000
应该没有去年说 3

1933
01:05:32,000 --> 01:05:33,000
不是 16 年年底吗

1934
01:05:33,000 --> 01:05:35,000
那是 2.2 吧

1935
01:05:35,000 --> 01:05:36,000
那应该是 2.2

1936
01:05:36,000 --> 01:05:38,000
就 3 还遥遥无期

1937
01:05:38,000 --> 01:05:38,000
3 还要一段时间

1938
01:05:38,000 --> 01:05:39,000
不是遥遥无期

1939
01:05:39,000 --> 01:05:40,000
但是

1940
01:05:40,000 --> 01:05:41,000
17 年了

1941
01:05:41,000 --> 01:05:43,000
对应该是明年

1942
01:05:43,000 --> 01:05:50,000
所以我想了一下还是等他们把 API 的重购吧

1943
01:05:50,000 --> 01:05:52,000
做完然后 3 发布之后才学的

1944
01:05:52,000 --> 01:05:53,000
也来得及

1945
01:05:53,000 --> 01:05:54,000
中间比较厉害

1946
01:05:54,000 --> 01:05:55,000
肯定来得及

1947
01:05:55,000 --> 01:05:59,000
因为现在即便苹果内部都不是非常的依赖 swift

1948
01:05:59,000 --> 01:06:00,000
就是基本上

1949
01:06:00,000 --> 01:06:01,000
但是你看 IOS

1950
01:06:01,000 --> 01:06:02,000
你看 IOS

1951
01:06:02,000 --> 01:06:05,000
那些原生程序里面没有几个是用 swift 写的

1952
01:06:05,000 --> 01:06:06,000
可能计算器是用 swift 写的

1953
01:06:06,000 --> 01:06:09,000
但是他们在 WMDC 上面给出的展示相对

1954
01:06:09,000 --> 01:06:10,000
全部都是用 swift 写的

1955
01:06:10,000 --> 01:06:11,000
是

1956
01:06:11,000 --> 01:06:13,000
但是那只是一个展示

1957
01:06:13,000 --> 01:06:15,000
对内部他们怎么样

1958
01:06:15,000 --> 01:06:16,000
不知道是吧

1959
01:06:16,000 --> 01:06:18,000
其实我觉得他们应该也在做迁移

1960
01:06:18,000 --> 01:06:23,000
分析说好像现在苹果里面能有一成的

1961
01:06:23,000 --> 01:06:26,000
在生产中的代码是用 swift 写的

1962
01:06:26,000 --> 01:06:27,000
就已经不错了

1963
01:06:27,000 --> 01:06:31,000
尤其是 IOS 上面大部分人还是依赖着 swift

1964
01:06:31,000 --> 01:06:37,000
而且什么 itunes 之类的还一直全都是 obj 写的

1965
01:06:37,000 --> 01:06:42,000
因为 swift 是处在一个比较转变化中的状态

1966
01:06:42,000 --> 01:06:44,000
处在一个进化中的状态

1967
01:06:44,000 --> 01:06:45,000
对

1968
01:06:45,000 --> 01:06:47,000
有些东西你可能今天能用明天就坏了

1969
01:06:47,000 --> 01:06:48,000
对吧

1970
01:06:48,000 --> 01:06:54,000
但是你在一个体量的公司里面是不能依赖这种非常 cutting edge 的东西的

1971
01:06:54,000 --> 01:06:56,000
虽然它版本耗尔金 2.0

1972
01:06:56,000 --> 01:06:58,000
它还是有可能消耗不见容

1973
01:06:58,000 --> 01:06:59,000
对吧

1974
01:06:59,000 --> 01:07:00,000
Anyway

1975
01:07:00,000 --> 01:07:01,000
然后

1976
01:07:01,000 --> 01:07:01,000
哎呀

1977
01:07:01,000 --> 01:07:08,000
guideline 的点就是说它有一个比较重大的一个决策

1978
01:07:08,000 --> 01:07:13,000
就是它要做到去 objc 化

1979
01:07:13,000 --> 01:07:14,000
就是 less verbose

1980
01:07:14,000 --> 01:07:17,000
然后两个点是什么

1981
01:07:17,000 --> 01:07:21,000
不要所谓什么 don't surprise an expert

1982
01:07:21,000 --> 01:07:22,000
然后 don't confuse a beginner

1983
01:07:22,000 --> 01:07:23,000
beginner

1984
01:07:25,000 --> 01:07:28,000
就是老手不会觉得惊奇

1985
01:07:28,000 --> 01:07:31,000
然后新手也不会觉得困惑

1986
01:07:31,000 --> 01:07:31,000
嗯

1987
01:07:31,000 --> 01:07:32,000
嗯

1988
01:07:32,000 --> 01:07:33,000
嗯

1989
01:07:33,000 --> 01:07:36,000
在之前的 objc 世界里面这两件事是事情

1990
01:07:36,000 --> 01:07:37,000
然后我觉得是经常发生的

1991
01:07:37,000 --> 01:07:41,000
就是你写的就就像我你可能写了一段时间

1992
01:07:41,000 --> 01:07:43,000
然后再去看一个什么新的 API

1993
01:07:43,000 --> 01:07:43,000
你会说

1994
01:07:43,000 --> 01:07:45,000
呃

1995
01:07:45,000 --> 01:07:45,000
我靠

1996
01:07:45,000 --> 01:07:47,000
你为什么居然要这样

1997
01:07:47,000 --> 01:07:49,000
然后那新手就跟我说完

1998
01:07:49,000 --> 01:07:50,000
新手可能会说

1999
01:07:50,000 --> 01:07:50,000
我靠

2000
01:07:50,000 --> 01:07:52,000
这些为什么有些地方要用 at

2001
01:07:52,000 --> 01:07:54,000
有些地方不要用 at 之类的

2002
01:07:54,000 --> 01:08:00,000
但是如果这个新的 swift 的 API design guideline 可以被

2003
01:08:00,000 --> 01:08:00,000
嗯

2004
01:08:00,000 --> 01:08:00,000
嗯

2005
01:08:00,000 --> 01:08:00,000
嗯

2006
01:08:00,000 --> 01:08:00,000
嗯

2007
01:08:00,000 --> 01:08:00,000
嗯

2008
01:08:00,000 --> 01:08:00,000
嗯

2009
01:08:00,000 --> 01:08:00,000
嗯

2010
01:08:00,000 --> 01:08:00,000
嗯

2011
01:08:00,000 --> 01:08:00,000
嗯

2012
01:08:00,000 --> 01:08:00,000
嗯

2013
01:08:00,000 --> 01:08:00,000
嗯

2014
01:08:00,000 --> 01:08:00,000
嗯

2015
01:08:00,000 --> 01:08:01,000
嗯

2016
01:08:01,000 --> 01:08:01,000
嗯

2017
01:08:01,000 --> 01:08:01,000
嗯

2018
01:08:01,000 --> 01:08:01,000
嗯

2019
01:08:01,000 --> 01:08:01,000
嗯

2020
01:08:01,000 --> 01:08:01,000
嗯

2021
01:08:01,000 --> 01:08:02,000
,

2022
01:08:02,000 --> 01:08:02,000
嗯

2023
01:08:02,000 --> 01:08:02,000
嗯

2024
01:08:02,000 --> 01:08:02,000
嗯

2025
01:08:02,000 --> 01:08:02,000
嗯

2026
01:08:02,000 --> 01:08:02,000
嗯

2027
01:08:02,000 --> 01:08:02,000
嗯

2028
01:08:02,000 --> 01:08:02,000
嗯

2029
01:08:02,000 --> 01:08:02,000
嗯

2030
01:08:02,000 --> 01:08:02,000
嗯

2031
01:08:02,000 --> 01:08:03,000
嗯

2032
01:08:03,000 --> 01:08:03,000
嗯

2033
01:08:03,000 --> 01:08:06,000
怎么想不出那个词是什么来着

2034
01:08:06,000 --> 01:08:10,000
就可以被完全应用到这个现有的 coco 库这样的话

2035
01:08:10,000 --> 01:08:14,000
说或者说先应用到现有的所有的和 coco 之间的绑定上的话

2036
01:08:14,000 --> 01:08:15,000
那可能这些事情都会好很多

2037
01:08:15,000 --> 01:08:17,000
嗯

2038
01:08:17,000 --> 01:08:18,000
嗯

2039
01:08:18,000 --> 01:08:20,000
主要是用起来更舒服了

2040
01:08:20,000 --> 01:08:22,000
然后要打的字更少了

2041
01:08:22,000 --> 01:08:24,000
读起来也就更更流畅了

2042
01:08:24,000 --> 01:08:26,000
比如说有有些非常细小的地方

2043
01:08:26,000 --> 01:08:31,000
但是我觉得最值得一提的就是那个很多 API 的或是部分 API 和

2044
01:08:31,000 --> 01:08:34,000
方法的那个 ns 前缀都要被去掉

2045
01:08:34,000 --> 01:08:38,000
这个其实有点可以探讨一下

2046
01:08:38,000 --> 01:08:41,000
它出现那个 s 前缀是因为那个 c 没有那个

2047
01:08:41,000 --> 01:08:42,000
就是 name scope

2048
01:08:42,000 --> 01:08:45,000
这个 c 没有 name spacing

2049
01:08:45,000 --> 01:08:47,000
但那 update c 没有

2050
01:08:47,000 --> 01:08:48,000
因为 c 没有嘛

2051
01:08:48,000 --> 01:08:49,000
它不能加一个上去

2052
01:08:49,000 --> 01:08:50,000
它可以加一个上去

2053
01:08:50,000 --> 01:08:52,000
但是没有这么做

2054
01:08:52,000 --> 01:08:53,000
anyway 好吧

2055
01:08:53,000 --> 01:08:54,000
对它没有那个 name spacing

2056
01:08:54,000 --> 01:08:56,000
然后 spare 是有的

2057
01:08:56,000 --> 01:08:58,000
所以它不需要这个前缀了

2058
01:08:58,000 --> 01:08:58,000
对

2059
01:08:58,000 --> 01:09:00,000
所以我一直很好奇

2060
01:09:00,000 --> 01:09:02,000
那个事就反正之前我不是在写那个 vpn 的时候

2061
01:09:02,000 --> 01:09:05,000
我会在写一些 c 的一些样本的代码来写

2062
01:09:05,000 --> 01:09:09,000
但 c 里面就真的只有加钱这种方式来做 namespace 吗

2063
01:09:09,000 --> 01:09:10,000
怎么说呢

2064
01:09:10,000 --> 01:09:12,000
就是 c 隐藏局部变量

2065
01:09:12,000 --> 01:09:18,000
或者局部方法的策略

2066
01:09:18,000 --> 01:09:20,000
是把它放在一个文件里面

2067
01:09:20,000 --> 01:09:22,000
就是如果你不希望这个东西被别人看到

2068
01:09:22,000 --> 01:09:24,000
那你就不要把它放在那个

2069
01:09:24,000 --> 01:09:26,000
可以被别人 include 的东西里面

2070
01:09:26,000 --> 01:09:30,000
但是你那个是对外部调整

2071
01:09:30,000 --> 01:09:30,000
但是你对

2072
01:09:30,000 --> 01:09:30,000
对外部调整

2073
01:09:30,000 --> 01:09:31,000
你自己使用的

2074
01:09:31,000 --> 01:09:33,000
你没有办法在 c 的同一个这个程序里面

2075
01:09:33,000 --> 01:09:35,000
你自己造一个不同的 namespace 出来吧

2076
01:09:35,000 --> 01:09:39,000
基本上没有什么太好

2077
01:09:39,000 --> 01:09:40,000
所以就只能加钱这了

2078
01:09:40,000 --> 01:09:42,000
对它有点像

2079
01:09:42,000 --> 01:09:45,000
这个比喻不恰当

2080
01:09:45,000 --> 01:09:47,000
应该就是它比比比比比较像

2081
01:09:48,000 --> 01:09:50,000
比较像 python 的同一个文件里面

2082
01:09:50,000 --> 01:09:55,000
你是没有办法通过一个语言的机制来限制自己说

2083
01:09:55,000 --> 01:09:56,000
这个东西不要被别人访问到

2084
01:09:56,000 --> 01:09:58,000
或者说这个东西不要跟别人撞名的

2085
01:09:58,000 --> 01:10:00,000
python 可以啊

2086
01:10:00,000 --> 01:10:00,000
python 可以啊

2087
01:10:00,000 --> 01:10:01,000
python 是机器文件

2088
01:10:01,000 --> 01:10:02,000
每个文件就是一个

2089
01:10:02,000 --> 01:10:03,000
我刚才就说了

2090
01:10:03,000 --> 01:10:05,000
它在同一个文件里面

2091
01:10:05,000 --> 01:10:06,000
啊啊啊

2092
01:10:06,000 --> 01:10:07,000
就对 c 来说

2093
01:10:07,000 --> 01:10:09,000
它不区分文件嘛

2094
01:10:09,000 --> 01:10:10,000
对

2095
01:10:10,000 --> 01:10:11,000
就文件不是一个边界

2096
01:10:11,000 --> 01:10:12,000
对

2097
01:10:12,000 --> 01:10:13,000
它诞生的状态

2098
01:10:13,000 --> 01:10:14,000
它诞生的那个年代

2099
01:10:14,000 --> 01:10:15,000
它没有这个需求嘛

2100
01:10:15,000 --> 01:10:17,000
所以它也没有办法预见到这一点

2101
01:10:17,000 --> 01:10:19,000
所以现在就只能加钱

2102
01:10:19,000 --> 01:10:20,000
就这种最蠢的方法

2103
01:10:20,000 --> 01:10:22,000
导致那些名字都看起来挺奇怪的

2104
01:10:22,000 --> 01:10:23,000
或者不干净嘛

2105
01:10:23,000 --> 01:10:24,000
至少

2106
01:10:24,000 --> 01:10:25,000
对

2107
01:10:25,000 --> 01:10:26,000
而且另外一个原因

2108
01:10:26,000 --> 01:10:26,000
我觉得可能也是

2109
01:10:26,000 --> 01:10:30,000
没有人试图用 c 的这种

2110
01:10:30,000 --> 01:10:30,000
诞生的状态

2111
01:10:30,000 --> 01:10:31,000
没有

2112
01:10:31,000 --> 01:10:32,000
没有

2113
01:10:32,000 --> 01:10:33,000
没有

2114
01:10:33,000 --> 01:10:36,000
namespace 的语言来构建一个

2115
01:10:36,000 --> 01:10:37,000
如此

2116
01:10:37,000 --> 01:10:38,000
超大型的应用的

2117
01:10:38,000 --> 01:10:38,000
超大的

2118
01:10:38,000 --> 01:10:41,000
操作系统级别的 framework

2119
01:10:41,000 --> 01:10:41,000
对吧

2120
01:10:41,000 --> 01:10:43,000
因为系统 API 本质上

2121
01:10:43,000 --> 01:10:45,000
它是一个非常巨大的软件工程产品

2122
01:10:45,000 --> 01:10:46,000
而

2123
01:10:46,000 --> 01:10:49,000
目前现有的操作系统里面

2124
01:10:49,000 --> 01:10:52,000
几乎只有苹果在用这个

2125
01:10:52,000 --> 01:10:54,000
没有 namespace 的东西吧

2126
01:10:54,000 --> 01:10:56,000
那个 csharp

2127
01:10:56,000 --> 01:10:57,000
csharp 也有 namespace

2128
01:10:57,000 --> 01:10:59,000
对

2129
01:10:59,000 --> 01:10:59,000
对

2130
01:10:59,000 --> 01:11:00,000
csharp

2131
01:11:00,000 --> 01:11:00,000
之前

2132
01:11:00,000 --> 01:11:02,000
思想家有吗

2133
01:11:02,000 --> 01:11:03,000
思想家肯定有

2134
01:11:03,000 --> 01:11:05,000
那个非常

2135
01:11:05,000 --> 01:11:07,000
sorry

2136
01:11:07,000 --> 01:11:09,000
我不是要吐槽思想家这里

2137
01:11:09,000 --> 01:11:12,000
是要说那个两个

2138
01:11:12,000 --> 01:11:14,000
冒号

2139
01:11:14,000 --> 01:11:14,000
对

2140
01:11:14,000 --> 01:11:15,000
两个冒号

2141
01:11:15,000 --> 01:11:16,000
那个操作服

2142
01:11:16,000 --> 01:11:16,000
std

2143
01:11:16,000 --> 01:11:18,000
standard 的冒号什么什么

2144
01:11:18,000 --> 01:11:19,000
对

2145
01:11:19,000 --> 01:11:20,000
它是 namespace 的分构服

2146
01:11:20,000 --> 01:11:21,000
但我想说的不是这个事

2147
01:11:21,000 --> 01:11:26,000
而是 php 里面这个东西有一个专门的称呼

2148
01:11:26,000 --> 01:11:27,000
叫什么来着

2149
01:11:27,000 --> 01:11:28,000
是希伯来语写的

2150
01:11:28,000 --> 01:11:30,000
就是

2151
01:11:30,000 --> 01:11:34,000
如果你在 php 里面打错了两个冒号

2152
01:11:34,000 --> 01:11:37,000
我很有可能记错了

2153
01:11:37,000 --> 01:11:39,000
但是就会出一个

2154
01:11:39,000 --> 01:11:42,000
就是那个出来的错误提示里面

2155
01:11:42,000 --> 01:11:47,000
管这个两个冒号的称呼是一个很奇怪的名字

2156
01:11:47,000 --> 01:11:48,000
然后就查的话

2157
01:11:48,000 --> 01:11:49,000
你会发现它是希伯来语

2158
01:11:49,000 --> 01:11:53,000
就是这个两个冒号这个符号是一个专有名词

2159
01:11:53,000 --> 01:11:54,000
对

2160
01:11:54,000 --> 01:11:55,000
好吧

2161
01:11:55,000 --> 01:11:56,000
我还想到了

2162
01:11:56,000 --> 01:11:57,000
对

2163
01:11:57,000 --> 01:11:59,000
我知道是骰子的四点

2164
01:11:59,000 --> 01:11:59,000
哈哈哈

2165
01:12:00,000 --> 01:12:02,000
四柄

2166
01:12:02,000 --> 01:12:02,000
对

2167
01:12:02,000 --> 01:12:03,000
四柄

2168
01:12:03,000 --> 01:12:04,000
对

2169
01:12:04,000 --> 01:12:04,000
哈哈哈

2170
01:12:04,000 --> 01:12:05,000
然后

2171
01:12:05,000 --> 01:12:07,000
然后

2172
01:12:07,000 --> 01:12:08,000
哈哈哈

2173
01:12:08,000 --> 01:12:09,000
四柄符号

2174
01:12:09,000 --> 01:12:12,000
哈哈哈

2175
01:12:12,000 --> 01:12:12,000
好了

2176
01:12:12,000 --> 01:12:13,000
我来查一下

2177
01:12:13,000 --> 01:12:14,000
你叫什么了

2178
01:12:14,000 --> 01:12:14,000
嗯

2179
01:12:14,000 --> 01:12:15,000
你查

2180
01:12:17,000 --> 01:12:17,000
呃

2181
01:12:17,000 --> 01:12:18,000
这个东西叫做

2182
01:12:19,000 --> 01:12:22,000
php expects t

2183
01:12:22,000 --> 01:12:27,000
pamaim nekudotayim

2184
01:12:27,000 --> 01:12:28,000
what the fuck

2185
01:12:28,000 --> 01:12:29,000
怎么写

2186
01:12:30,000 --> 01:12:31,000
呃

2187
01:12:31,000 --> 01:12:33,000
p a a m

2188
01:12:33,000 --> 01:12:34,000
p a

2189
01:12:34,000 --> 01:12:37,000
对 p a a m a y i m

2190
01:12:37,000 --> 01:12:39,000
然后空格

2191
01:12:39,000 --> 01:12:40,000
等等等你等我来

2192
01:12:40,000 --> 01:12:42,000
n e k u d o t a y i m

2193
01:12:42,000 --> 01:12:45,000
哈哈哈

2194
01:12:45,000 --> 01:12:51,000
哈哈哈

2195
01:12:51,000 --> 01:12:53,000
这

2196
01:12:53,000 --> 01:12:53,000
对

2197
01:12:53,000 --> 01:12:57,000
然后这个东西是希伯来语的

2198
01:12:57,000 --> 01:12:59,000
两个

2199
01:12:59,000 --> 01:13:00,000
两个冒号的

2200
01:13:00,000 --> 01:13:01,000
希伯来语的四柄

2201
01:13:01,000 --> 01:13:02,000
没错

2202
01:13:02,000 --> 01:13:02,000
哈哈哈

2203
01:13:02,000 --> 01:13:04,000
哎怎么为什么会是希伯来语

2204
01:13:04,000 --> 01:13:06,000
那个谁是希伯来人吗

2205
01:13:06,000 --> 01:13:07,000
对啊

2206
01:13:07,000 --> 01:13:08,000
谁啊

2207
01:13:08,000 --> 01:13:10,000
就那个发明者叫什么来着

2208
01:13:10,000 --> 01:13:12,000
嗯啊

2209
01:13:12,000 --> 01:13:13,000
作者是希伯来人

2210
01:13:13,000 --> 01:13:14,000
犹太人作者是犹太人

2211
01:13:14,000 --> 01:13:15,000
对

2212
01:13:15,000 --> 01:13:16,000
ok

2213
01:13:16,000 --> 01:13:16,000
对

2214
01:13:16,000 --> 01:13:19,000
然后这个东西学名叫 scope resolution operator

2215
01:13:19,000 --> 01:13:21,000
其实跟 c c a 是一样的

2216
01:13:21,000 --> 01:13:22,000
就是

2217
01:13:22,000 --> 01:13:24,000
所以我们做一个中文版本

2218
01:13:24,000 --> 01:13:28,000
我们要 t si-bin 这个错误吧

2219
01:13:28,000 --> 01:13:29,000
四柄错误

2220
01:13:29,000 --> 01:13:30,000
哈哈哈

2221
01:13:30,000 --> 01:13:32,000
没错

2222
01:13:32,000 --> 01:13:34,000
哈哈哈

2223
01:13:34,000 --> 01:13:35,000
好了不扯淡

2224
01:13:35,000 --> 01:13:38,000
我们赶紧翻篇吧

2225
01:13:38,000 --> 01:13:39,000
哈哈哈

2226
01:13:39,000 --> 01:13:40,000
好翻篇

2227
01:13:40,000 --> 01:13:42,000
翻篇是那个 parse

2228
01:13:42,000 --> 01:13:44,000
是一个

2229
01:13:45,000 --> 01:13:48,000
移动应用的后端程序服务

2230
01:13:49,000 --> 01:13:51,000
relative 上有一个板块叫做

2231
01:13:51,000 --> 01:13:53,000
explain things like

2232
01:13:53,000 --> 01:13:55,000
as i am five year old

2233
01:13:55,000 --> 01:13:56,000
就是

2234
01:13:56,000 --> 01:13:58,000
假设我只有五岁

2235
01:13:58,000 --> 01:14:00,000
然后请问五岁小孩能懂吗

2236
01:14:00,000 --> 01:14:02,000
我懂的语言来给我解释这是什么东西

2237
01:14:02,000 --> 01:14:03,000
我放弃了

2238
01:14:03,000 --> 01:14:04,000
你来解释

2239
01:14:04,000 --> 01:14:05,000
哈哈哈

2240
01:14:05,000 --> 01:14:06,000
呃

2241
01:14:06,000 --> 01:14:08,000
pulse 是个

2242
01:14:09,000 --> 01:14:10,000
怎么说呢

2243
01:14:10,000 --> 01:14:11,000
就是

2244
01:14:12,000 --> 01:14:13,000
嗯

2245
01:14:13,000 --> 01:14:16,000
就在你在写一个移动应用的时候

2246
01:14:16,000 --> 01:14:17,000
你会有这样的一个需求

2247
01:14:17,000 --> 01:14:20,000
就是你会需要说我需要给

2248
01:14:20,000 --> 01:14:22,000
我需要有一台在网上的服务器给

2249
01:14:22,000 --> 01:14:24,000
嗯

2250
01:14:24,000 --> 01:14:27,000
我的用户发送 push notification

2251
01:14:27,000 --> 01:14:28,000
这个词它其中一个可能

2252
01:14:28,000 --> 01:14:30,000
它有很多其他功能

2253
01:14:30,000 --> 01:14:30,000
对

2254
01:14:30,000 --> 01:14:33,000
比如说存那个用户数据啊

2255
01:14:33,000 --> 01:14:34,000
对

2256
01:14:34,000 --> 01:14:37,000
然后与此同时我还需要把用户的一些呃

2257
01:14:37,000 --> 01:14:39,000
传上来的数据存在某一个特色的地方

2258
01:14:39,000 --> 01:14:41,000
然后所有这些我

2259
01:14:41,000 --> 01:14:44,000
就是比较传统或者比较呃

2260
01:14:44,000 --> 01:14:45,000
嗯

2261
01:14:46,000 --> 01:14:49,000
正常的实现方式是我自己去买一台服务器

2262
01:14:49,000 --> 01:14:52,000
然后自己在这个服务器上写一些

2263
01:14:52,000 --> 01:14:55,000
提供完成这些功能的程序对吧

2264
01:14:55,000 --> 01:14:56,000
所谓的服务端吗

2265
01:14:56,000 --> 01:14:57,000
对

2266
01:14:57,000 --> 01:15:00,000
然后 pulse 这个东西就是把这一块给你

2267
01:15:00,000 --> 01:15:01,000
做成一个服务了

2268
01:15:02,000 --> 01:15:06,000
就可能之前你用烤披萨来打比方的话

2269
01:15:06,000 --> 01:15:10,000
你可能之前需要去自己和面自己去弄烤炉什么的

2270
01:15:10,000 --> 01:15:14,000
然后 pulse 这个 pulse 这个东西就是像一个披萨店

2271
01:15:14,000 --> 01:15:14,000
对吧

2272
01:15:14,000 --> 01:15:15,000
你只说进去

2273
01:15:15,000 --> 01:15:16,000
然后就拿披萨出来就对了

2274
01:15:17,000 --> 01:15:20,000
然后这个披萨就是一个专门给用户用的一个服务

2275
01:15:21,000 --> 01:15:22,000
对呃对

2276
01:15:23,000 --> 01:15:24,000
啊然后他怎么了

2277
01:15:25,000 --> 01:15:26,000
他之前是一个独立的服务吗

2278
01:15:26,000 --> 01:15:30,000
很多人用他觉得就很多那个前段那个应用开发者

2279
01:15:30,000 --> 01:15:34,000
他不具备这个或者不想去自己维护一套后端

2280
01:15:34,000 --> 01:15:35,000
因为挺麻烦的对吧

2281
01:15:35,000 --> 01:15:38,000
你要考虑什么扩展性稳定性维护的问题

2282
01:15:38,000 --> 01:15:40,000
你你就怎么两个人的小作坊

2283
01:15:40,000 --> 01:15:42,000
你写一个前段应用已经够苦哈哈的

2284
01:15:42,000 --> 01:15:43,000
你还要再去自己维护一个后端

2285
01:15:43,000 --> 01:15:45,000
这就就很想死吗

2286
01:15:45,000 --> 01:15:46,000
你找这么一个劳力劳心

2287
01:15:46,000 --> 01:15:49,000
又伤害钱包的

2288
01:15:49,000 --> 01:15:50,000
对对对

2289
01:15:50,000 --> 01:15:52,000
所以就有这么一个第三方的服务

2290
01:15:52,000 --> 01:15:52,000
把说哎

2291
01:15:52,000 --> 01:15:53,000
我帮你的后端搞定

2292
01:15:53,000 --> 01:15:55,000
我提供一个同一个这个 API 的接口

2293
01:15:55,000 --> 01:15:57,000
你直接发送就可以了

2294
01:15:57,000 --> 01:15:57,000
对吧

2295
01:15:57,000 --> 01:15:59,000
那国内有人在做这个事情的吧

2296
01:15:59,000 --> 01:15:59,000
然后

2297
01:16:00,000 --> 01:16:00,000
待会再说

2298
01:16:00,000 --> 01:16:04,000
然后后来这个服务被 Facebook 买了

2299
01:16:04,000 --> 01:16:06,000
就这个团队被 Facebook 收购了

2300
01:16:07,000 --> 01:16:11,000
然后最近 Facebook 决定把它关掉

2301
01:16:11,000 --> 01:16:12,000
然后他们就关满了

2302
01:16:12,000 --> 01:16:14,000
对还没有吧

2303
01:16:14,000 --> 01:16:15,000
应该是到几月

2304
01:16:15,000 --> 01:16:17,000
就是今年他们就宣布自己要关满了

2305
01:16:17,000 --> 01:16:19,000
对对对

2306
01:16:19,000 --> 01:16:22,000
因为这个不是核心应用毕竟

2307
01:16:23,000 --> 01:16:24,000
然后很多就是为什么

2308
01:16:24,000 --> 01:16:26,000
不要把自己的公司卖给 Facebook

2309
01:16:26,000 --> 01:16:29,000
对这个公司人

2310
01:16:29,000 --> 01:16:29,000
他肯定是赚到了

2311
01:16:29,000 --> 01:16:29,000
呀

2312
01:16:29,000 --> 01:16:32,000
就至少从财务上来讲

2313
01:16:32,000 --> 01:16:33,000
还是出入来讲都是好的

2314
01:16:33,000 --> 01:16:36,000
但是对那些用了 PaaS 服务的

2315
01:16:37,000 --> 01:16:39,000
这些应用开发者来说就比较苦逼了

2316
01:16:40,000 --> 01:16:41,000
好吧

2317
01:16:41,000 --> 01:16:41,000
这换一个说法

2318
01:16:41,000 --> 01:16:43,000
这就是为什么你不应该

2319
01:16:43,000 --> 01:16:47,000
就这是为什么开发者不希望看到自己使用的服务

2320
01:16:47,000 --> 01:16:48,000
被卖给了大公司

2321
01:16:49,000 --> 01:16:50,000
对不要卖给任何大公司

2322
01:16:50,000 --> 01:16:52,000
Facebook Google 都不要卖

2323
01:16:52,000 --> 01:16:54,000
因为基本上

2324
01:16:54,000 --> 01:16:56,000
就交到别人手里了

2325
01:16:56,000 --> 01:16:59,000
正常情况下两年真的就用不了了

2326
01:16:59,000 --> 01:16:59,000
对

2327
01:16:59,000 --> 01:17:03,000
其实这里也回到一个事儿

2328
01:17:03,000 --> 01:17:04,000
就是说

2329
01:17:04,000 --> 01:17:06,000
这怎么帕斯这个算是怎么说呢

2330
01:17:06,000 --> 01:17:09,000
算是一个算是一个 software 的 service 吧

2331
01:17:09,000 --> 01:17:10,000
它是一个 sass 对吧

2332
01:17:10,000 --> 01:17:12,000
对于对于这个应用开发者来讲

2333
01:17:12,000 --> 01:17:15,000
因为过去你要可能要搭你去租那个工

2334
01:17:15,000 --> 01:17:17,000
那个什么公用鱼吗

2335
01:17:17,000 --> 01:17:18,000
你算是做一个 s 的平台

2336
01:17:18,000 --> 01:17:19,000
然后自己打一套东西

2337
01:17:19,000 --> 01:17:21,000
或者说你用这个

2338
01:17:21,000 --> 01:17:23,000
它是应该是 pass platform service

2339
01:17:23,000 --> 01:17:24,000
嗯

2340
01:17:24,000 --> 01:17:27,000
或者说你租那个像那个其实之前也很火的

2341
01:17:27,000 --> 01:17:29,000
那个就 app engine 吗

2342
01:17:29,000 --> 01:17:31,000
就是 google 出的 app engine

2343
01:17:31,000 --> 01:17:33,000
国内不是有一大堆在在模仿的吗

2344
01:17:33,000 --> 01:17:36,000
什么什么新浪的 app engine 啊

2345
01:17:36,000 --> 01:17:38,000
什么美团也在搞这个

2346
01:17:38,000 --> 01:17:39,000
我也不知道为什么

2347
01:17:39,000 --> 01:17:42,000
还有什么腾讯啊

2348
01:17:42,000 --> 01:17:44,000
都在还有那个都在做这一方面的

2349
01:17:44,000 --> 01:17:46,000
还有阿里现在阿里也在做这个事情

2350
01:17:46,000 --> 01:17:49,000
就是你用这些第三方的 pass 的时候

2351
01:17:49,000 --> 01:17:51,000
都会形成一种绑定关系

2352
01:17:51,000 --> 01:17:52,000
对吧

2353
01:17:52,000 --> 01:17:53,000
你那个接口就拿了

2354
01:17:53,000 --> 01:17:56,000
如果他他那个接口或者他在功能

2355
01:17:56,000 --> 01:17:58,000
别家别家没有提过呢

2356
01:17:58,000 --> 01:17:59,000
以后你就不能迁移了

2357
01:17:59,000 --> 01:18:00,000
或者不能很方便的迁移

2358
01:18:00,000 --> 01:18:04,000
但是说如果你自己搭的话就不存在这个问题

2359
01:18:04,000 --> 01:18:06,000
因为那个 s 层那个服务器大家都一样

2360
01:18:06,000 --> 01:18:06,000
对吧

2361
01:18:06,000 --> 01:18:08,000
都是跑的一个那个是发行板

2362
01:18:08,000 --> 01:18:10,000
然后你自己装什么 jx 啊

2363
01:18:10,000 --> 01:18:12,000
你自己写客户段

2364
01:18:12,000 --> 01:18:13,000
就那些是一个标准的

2365
01:18:13,000 --> 01:18:16,000
但是 pass 很多都是一个非标准的的东西嘛

2366
01:18:16,000 --> 01:18:19,000
然后这个时候你作为一个这个开发者

2367
01:18:19,000 --> 01:18:22,000
你就要在这两个之间做一个艰难的选择

2368
01:18:22,000 --> 01:18:24,000
比如说想省时间

2369
01:18:24,000 --> 01:18:28,000
然后省事儿去用一个非标准的东西以后跟人迁移呢

2370
01:18:28,000 --> 01:18:28,000
还是说

2371
01:18:29,000 --> 01:18:33,000
从头开始就是我以后就为了我的这个这个自己的独立安全着想

2372
01:18:33,000 --> 01:18:37,000
我要选择一个很标准的就是很多时候就是 s

2373
01:18:37,000 --> 01:18:38,000
然后自己再写服务端

2374
01:18:38,000 --> 01:18:41,000
然后自己去维护这么一个两难的选择

2375
01:18:41,000 --> 01:18:42,000
嗯

2376
01:18:43,000 --> 01:18:46,000
就其实我觉得没有那么啊

2377
01:18:46,000 --> 01:18:48,000
那么那么容易这个选择

2378
01:18:48,000 --> 01:18:51,000
因为很多就不同的这个资源约束情况下不一样

2379
01:18:51,000 --> 01:18:52,000
有些时候说你你不差钱

2380
01:18:52,000 --> 01:18:52,000
对吧

2381
01:18:52,000 --> 01:18:54,000
你差的是时间

2382
01:18:54,000 --> 01:18:57,000
那你可能说那我用一些第三货服务能够尽快虽然可能贵一点

2383
01:18:57,000 --> 01:18:59,000
以后钱钱可能麻烦一点

2384
01:18:59,000 --> 01:19:04,000
但是我现在能够呃很快速的把我这个应用上线验证我这个市场到底行不行

2385
01:19:04,000 --> 01:19:05,000
如果不行

2386
01:19:05,000 --> 01:19:06,000
我就赶快转型做别的了

2387
01:19:06,000 --> 01:19:06,000
对吧

2388
01:19:06,000 --> 01:19:12,000
但又就是说你是觉得这个我以后可能要签的可能性很大

2389
01:19:12,000 --> 01:19:14,000
我这个要一定要要保持自己的独立

2390
01:19:14,000 --> 01:19:17,000
不要被某一个运营商运这个服务商锁死

2391
01:19:17,000 --> 01:19:20,000
那你可能就要开始就要去考虑这些服务的问题

2392
01:19:20,000 --> 01:19:21,000
但是呢

2393
01:19:21,000 --> 01:19:23,000
就可以耽搁你的这个产品开发进度

2394
01:19:23,000 --> 01:19:23,000
对吧

2395
01:19:23,000 --> 01:19:25,000
你可能本来就是人手有限的情况下

2396
01:19:25,000 --> 01:19:27,000
你还得分时间分精力

2397
01:19:27,000 --> 01:19:29,000
去开发这个产品的进度

2398
01:19:29,000 --> 01:19:31,000
这个服务端还要自己去维护

2399
01:19:31,000 --> 01:19:33,000
还要自己考虑这种扩展的问题

2400
01:19:33,000 --> 01:19:33,000
对吧

2401
01:19:33,000 --> 01:19:38,000
所以对所以我觉得很多人说这个就不要用那种第三个服务

2402
01:19:38,000 --> 01:19:40,000
我觉得也不是一个

2403
01:19:40,000 --> 01:19:43,000
不是一个负责任的一个一个一个说法吧

2404
01:19:43,000 --> 01:19:45,000
就是你还是要分析和讨论吧

2405
01:19:45,000 --> 01:19:46,000
其实就对对对对

2406
01:19:46,000 --> 01:19:48,000
其实就跟怎么说过日子一样

2407
01:19:48,000 --> 01:19:49,000
你要一个人的话

2408
01:19:49,000 --> 01:19:51,000
你可能每天下馆的无数无所谓

2409
01:19:51,000 --> 01:19:52,000
但是如果你有七八口人的话

2410
01:19:52,000 --> 01:19:55,000
那可能还是每天自己在家里给大家做饭

2411
01:19:55,000 --> 01:19:57,000
比较就专门有人来做饭

2412
01:19:57,000 --> 01:19:58,000
或者人来做饭来对来

2413
01:19:58,000 --> 01:19:58,000
要来的

2414
01:19:58,000 --> 01:19:59,000
经济

2415
01:19:59,000 --> 01:19:59,000
一点

2416
01:19:59,000 --> 01:20:01,000
对这还是一个体量的问题

2417
01:20:01,000 --> 01:20:03,000
就是你在乎的什么一点

2418
01:20:03,000 --> 01:20:05,000
当然了这个就是说

2419
01:20:05,000 --> 01:20:06,000
嗯

2420
01:20:06,000 --> 01:20:08,000
答案并非那么显然

2421
01:20:08,000 --> 01:20:09,000
不过

2422
01:20:09,000 --> 01:20:13,000
一个很显然的问题就是现在那些用了帕斯的服务

2423
01:20:13,000 --> 01:20:13,000
那些应用

2424
01:20:13,000 --> 01:20:16,000
但是又没有人在继续维护的那些应用

2425
01:20:16,000 --> 01:20:17,000
一旦帕斯停掉的话

2426
01:20:17,000 --> 01:20:19,000
那些用就基本上就就死掉了

2427
01:20:19,000 --> 01:20:20,000
就没办法再用了

2428
01:20:20,000 --> 01:20:22,000
然后据我了解

2429
01:20:22,000 --> 01:20:24,000
像 app store 里面的这个

2430
01:20:24,000 --> 01:20:26,000
这个这个这个管理政策

2431
01:20:26,000 --> 01:20:28,000
就是你一旦比如说你作为开发者

2432
01:20:28,000 --> 01:20:28,000
你一旦上了

2433
01:20:28,000 --> 01:20:30,000
一个应用之后

2434
01:20:30,000 --> 01:20:32,000
你不去管他会怎么样

2435
01:20:34,000 --> 01:20:35,000
比如我不会把你下架

2436
01:20:35,000 --> 01:20:35,000
对吧

2437
01:20:35,000 --> 01:20:38,000
好像是只要你的用户

2438
01:20:38,000 --> 01:20:39,000
只要你的 developer

2439
01:20:40,000 --> 01:20:42,000
你的开发者让每天接的交那 100 刀

2440
01:20:42,000 --> 01:20:43,000
开发者身份还在

2441
01:20:43,000 --> 01:20:44,000
他就不会被下架

2442
01:20:44,000 --> 01:20:48,000
除非他和他里面已经

2443
01:20:48,000 --> 01:20:50,000
他已经不能在新版的 iOS 上跑

2444
01:20:50,000 --> 01:20:53,000
但这种基于服务端挂掉了

2445
01:20:53,000 --> 01:20:55,000
然后肯定应用端还是可以就不受影响的

2446
01:20:56,000 --> 01:20:56,000
不一定

2447
01:20:56,000 --> 01:20:57,000
就是

2448
01:20:57,000 --> 01:20:58,000
大部分来说

2449
01:20:58,000 --> 01:21:02,000
应该是不受就是他还是可以应用本身可以运行的

2450
01:21:02,000 --> 01:21:04,000
就在 ios 上是可以运行

2451
01:21:04,000 --> 01:21:05,000
但是只是因为服务端

2452
01:21:05,000 --> 01:21:06,000
所以应用变成了一个

2453
01:21:06,000 --> 01:21:08,000
就是一个鸡肋了

2454
01:21:08,000 --> 01:21:09,000
没有用的壳子

2455
01:21:09,000 --> 01:21:10,000
对对

2456
01:21:10,000 --> 01:21:14,000
所以我就在想我们怎么就像苹果不是老是喜欢吹嘘

2457
01:21:14,000 --> 01:21:18,000
他自己的应用商里面有多少的几百万几千万的应用

2458
01:21:18,000 --> 01:21:19,000
对吧

2459
01:21:19,000 --> 01:21:20,000
高质量的应用

2460
01:21:20,000 --> 01:21:22,000
主要是重点是有高质量的应用

2461
01:21:22,000 --> 01:21:24,000
他说总数的时候

2462
01:21:24,000 --> 01:21:25,000
他没有说有高质量的

2463
01:21:25,000 --> 01:21:26,000
OK 好吗

2464
01:21:26,000 --> 01:21:27,000
对

2465
01:21:27,000 --> 01:21:27,000
但是

2466
01:21:28,000 --> 01:21:31,000
我就在想其实里面很多都是这种所谓的这种垃圾应用

2467
01:21:31,000 --> 01:21:33,000
就没有办法在那个了

2468
01:21:33,000 --> 01:21:35,000
这个时候怎么办呢

2469
01:21:36,000 --> 01:21:37,000
还占了一个坑位

2470
01:21:38,000 --> 01:21:38,000
没错

2471
01:21:39,000 --> 01:21:42,000
所以就是一个比较其实我觉得 apps 还是有一种

2472
01:21:42,000 --> 01:21:42,000
应该有一种那种

2473
01:21:42,000 --> 01:21:44,000
因为你审核的时候

2474
01:21:44,000 --> 01:21:47,000
你其实是要去验证服务能不能用

2475
01:21:47,000 --> 01:21:48,000
审核人员

2476
01:21:48,000 --> 01:21:49,000
但是我就说

2477
01:21:49,000 --> 01:21:53,000
那是不是可以说你应用每隔一年要 review 一下

2478
01:21:53,000 --> 01:21:55,000
看他到底还能不能用

2479
01:21:55,000 --> 01:21:56,000
如果没有用那种僵尸应用

2480
01:21:56,000 --> 01:21:58,000
是不是就可以该下掉了

2481
01:21:58,000 --> 01:21:58,000
就

2482
01:21:58,000 --> 01:21:59,000
下掉了

2483
01:21:59,000 --> 01:22:01,000
然后把那个名字位置空出来

2484
01:22:01,000 --> 01:22:03,000
让别人接着用还是怎么样

2485
01:22:03,000 --> 01:22:06,000
主要是一个测试比较困难

2486
01:22:08,000 --> 01:22:09,000
测试困难倒不是困难

2487
01:22:09,000 --> 01:22:11,000
审核机制已经有现成了

2488
01:22:11,000 --> 01:22:13,000
只是说成本的问题

2489
01:22:13,000 --> 01:22:13,000
对吧

2490
01:22:13,000 --> 01:22:14,000
你本来现成就忙不过来了

2491
01:22:14,000 --> 01:22:15,000
我说的就是这个

2492
01:22:15,000 --> 01:22:17,000
就是你不可能说以每个应用

2493
01:22:17,000 --> 01:22:20,000
每隔一段时间都要让审核员自己手动去点一遍

2494
01:22:20,000 --> 01:22:23,000
那三年审一下可不可以

2495
01:22:23,000 --> 01:22:26,000
我觉得这个应该是用户可以直接反馈

2496
01:22:26,000 --> 01:22:28,000
就最好能有一个比较简单的反馈功能

2497
01:22:28,000 --> 01:22:30,000
然后用户发现说这个应用不能用了

2498
01:22:30,000 --> 01:22:31,000
反映一下

2499
01:22:31,000 --> 01:22:31,000
对

2500
01:22:31,000 --> 01:22:33,000
然后那边就直接挂下

2501
01:22:33,000 --> 01:22:34,000
就那个什么

2502
01:22:34,000 --> 01:22:38,000
这个苹果给开发者提一个通知

2503
01:22:38,000 --> 01:22:41,000
说你最好在什么半年之内是解决这个问题的

2504
01:22:41,000 --> 01:22:43,000
不然你就下了

2505
01:22:43,000 --> 01:22:43,000
对

2506
01:22:43,000 --> 01:22:45,000
这是一个比较好的方法

2507
01:22:45,000 --> 01:22:50,000
而且其实这个问题并不仅仅是对于使用 PaaS

2508
01:22:50,000 --> 01:22:53,000
这样的服务的应用存在

2509
01:22:53,000 --> 01:22:54,000
可能有些服务

2510
01:22:54,000 --> 01:22:56,000
它是使用一个自己搭建的后代服务器

2511
01:22:56,000 --> 01:22:57,000
但是这个后代服务器也就没了

2512
01:22:57,000 --> 01:22:58,000
公司倒闭了

2513
01:22:58,000 --> 01:22:59,000
对吧

2514
01:22:59,000 --> 01:23:01,000
它也就那样了

2515
01:23:01,000 --> 01:23:02,000
对

2516
01:23:02,000 --> 01:23:03,000
对

2517
01:23:03,000 --> 01:23:05,000
所以这其实是一个

2518
01:23:05,000 --> 01:23:07,000
这个是个管理问题

2519
01:23:07,000 --> 01:23:07,000
我觉得

2520
01:23:07,000 --> 01:23:08,000
对

2521
01:23:08,000 --> 01:23:11,000
但是需要去这些这些应用商店的管理者

2522
01:23:11,000 --> 01:23:13,000
就需要去把它解决好

2523
01:23:13,000 --> 01:23:16,000
然后给一个用户相对来说干净的

2524
01:23:16,000 --> 01:23:17,000
但是这样的话

2525
01:23:17,000 --> 01:23:19,000
他就不能去去 boss 的

2526
01:23:19,000 --> 01:23:21,000
就不能吹嘘他的应用商店

2527
01:23:21,000 --> 01:23:21,000
没有数量的

2528
01:23:21,000 --> 01:23:23,000
因为你看可能如果真的这么一干

2529
01:23:23,000 --> 01:23:25,000
发现一大半都已经没有了

2530
01:23:26,000 --> 01:23:27,000
嗯

2531
01:23:27,000 --> 01:23:27,000
数量

2532
01:23:27,000 --> 01:23:28,000
毕竟

2533
01:23:28,000 --> 01:23:28,000
怎么说呢

2534
01:23:28,000 --> 01:23:30,000
就是你分母足够大

2535
01:23:30,000 --> 01:23:33,000
那分子就是你你基数在那呢

2536
01:23:33,000 --> 01:23:37,000
那你可能存货下来的好应用的概率就比较高嘛

2537
01:23:37,000 --> 01:23:38,000
所以基数还是有意义

2538
01:23:39,000 --> 01:23:39,000
嗯

2539
01:23:40,000 --> 01:23:44,000
可以可以给什么苹果提个这个建议是吧

2540
01:23:44,000 --> 01:23:44,000
对

2541
01:23:45,000 --> 01:23:48,000
呃对帕斯这件事情有一个好处

2542
01:23:48,000 --> 01:23:54,000
就是他在关门之前还是给了一个给你给了你一个善后方案

2543
01:23:54,000 --> 01:23:56,000
就是自己去弄一个服务器

2544
01:23:56,000 --> 01:23:58,000
然后把它的那个

2545
01:23:58,000 --> 01:24:00,000
这一套东西跑在你自己的服务器上

2546
01:24:00,000 --> 01:24:02,000
然后可以用比较小的成本

2547
01:24:02,000 --> 01:24:03,000
来迁移

2548
01:24:03,000 --> 01:24:06,000
因为之前帕斯的那个接口做的还是不错的

2549
01:24:06,000 --> 01:24:12,000
就是基本上没有什么太跟帕斯本身相依赖的东西

2550
01:24:12,000 --> 01:24:15,000
所以就是基本上你最理想的情况下

2551
01:24:15,000 --> 01:24:18,000
你只要在自己的前端换一个那个服务器的

2552
01:24:18,000 --> 01:24:19,000
的地址

2553
01:24:19,000 --> 01:24:22,000
然后整个也就迁移过去

2554
01:24:22,000 --> 01:24:22,000
嗯

2555
01:24:22,000 --> 01:24:26,000
等于自在自己的服务器上 serve 了一个帕斯的那个 application

2556
01:24:26,000 --> 01:24:28,000
然后专门用来

2557
01:24:28,000 --> 01:24:29,000
呃服务你的这个 app

2558
01:24:29,000 --> 01:24:32,000
对

2559
01:24:32,000 --> 01:24:37,000
他们那个这个他们叫做呃帕斯 open source server 吧

2560
01:24:37,000 --> 01:24:38,000
就是帕斯的开源服务器

2561
01:24:38,000 --> 01:24:40,000
然后他是用那个勾写的

2562
01:24:40,000 --> 01:24:42,000
然后就还部署起来一枪

2563
01:24:42,000 --> 01:24:44,000
好像还挺我看了一下还挺简单的

2564
01:24:44,000 --> 01:24:46,000
反正就是一个 binary 丢上去

2565
01:24:46,000 --> 01:24:47,000
what

2566
01:24:47,000 --> 01:24:47,000
哦

2567
01:24:47,000 --> 01:24:50,000
帕斯 server 是 java script 写的吧

2568
01:24:50,000 --> 01:24:51,000
不是吗

2569
01:24:51,000 --> 01:24:53,000
不是帕斯那个 open source server 是勾写的

2570
01:24:53,000 --> 01:24:56,000
ok

2571
01:24:56,000 --> 01:24:58,000
然后他你在搭上

2572
01:24:58,000 --> 01:24:59,000
什么 mysql

2573
01:24:59,000 --> 01:25:00,000
然后那个 readist 之后

2574
01:25:00,000 --> 01:25:01,000
反正也测得用吧

2575
01:25:01,000 --> 01:25:03,000
能够让你再弄

2576
01:25:03,000 --> 01:25:05,000
但就没有那些 pass 的

2577
01:25:05,000 --> 01:25:06,000
比如说自动伸缩啊

2578
01:25:06,000 --> 01:25:09,000
然后那个就是有人帮你维护啊

2579
01:25:09,000 --> 01:25:11,000
这种事情你就要自己解决啊

2580
01:25:11,000 --> 01:25:12,000
ok

2581
01:25:12,000 --> 01:25:15,000
所以就并不是那么美好

2582
01:25:15,000 --> 01:25:16,000
但是至少给了你一条出路

2583
01:25:16,000 --> 01:25:18,000
不像有些服务就关了

2584
01:25:18,000 --> 01:25:18,000
又关了

2585
01:25:18,000 --> 01:25:19,000
你也没什么

2586
01:25:19,000 --> 01:25:21,000
没给你什么替代的方案

2587
01:25:21,000 --> 01:25:25,000
你只能在那边哭诉什么老板皇后不是人是吧

2588
01:25:25,000 --> 01:25:26,000
什么老板什么卷款跑啊什么的啊

2589
01:25:26,000 --> 01:25:27,000
什么卷款跑啊什么的啊

2590
01:25:27,000 --> 01:25:28,000
什么老板什么卷款跑啊什么的啊

2591
01:25:28,000 --> 01:25:29,000
不管我们

2592
01:25:29,000 --> 01:25:31,000
清苍大水妹

2593
01:25:31,000 --> 01:25:32,000
对

2594
01:25:32,000 --> 01:25:32,000
好吧

2595
01:25:32,000 --> 01:25:34,000
那个 pass 就讲到这

2596
01:25:34,000 --> 01:25:35,000
还有一个事

2597
01:25:35,000 --> 01:25:37,000
是也是一个程序员

2598
01:25:37,000 --> 01:25:39,000
我们常用的一个东西啊

2599
01:25:39,000 --> 01:25:40,000
github 最近又怎么了

2600
01:25:40,000 --> 01:25:43,000
这是一个隐忧啊

2601
01:25:43,000 --> 01:25:43,000
悲伤的故事

2602
01:25:43,000 --> 01:25:45,000
悲伤的故事

2603
01:25:45,000 --> 01:25:46,000
他不是一个怎么说呢

2604
01:25:46,000 --> 01:25:47,000
悲伤也没有

2605
01:25:47,000 --> 01:25:49,000
但是他会让你觉得

2606
01:25:49,000 --> 01:25:50,000
呃

2607
01:25:51,000 --> 01:25:54,000
记就是怎么说有一个非常

2608
01:25:54,000 --> 01:25:58,000
中国里面有个非常经典的 expression

2609
01:25:58,000 --> 01:26:00,000
就是说

2610
01:26:00,000 --> 01:26:02,000
就是你被别人牵着走

2611
01:26:02,000 --> 01:26:06,000
或者说你把自己的身家性命托付在别人身上是比较

2612
01:26:06,000 --> 01:26:07,000
呃

2613
01:26:07,000 --> 01:26:08,000
呃

2614
01:26:08,000 --> 01:26:09,000
彻肘的一件事情

2615
01:26:09,000 --> 01:26:11,000
就是你你

2616
01:26:11,000 --> 01:26:13,000
就反正先说这个新闻吧

2617
01:26:13,000 --> 01:26:19,000
就是 github 最近有一个呃管理层面的新闻

2618
01:26:19,000 --> 01:26:22,000
就是他们中层管理

2619
01:26:22,000 --> 01:26:24,000
把他们的中层管理被搭建起来了

2620
01:26:24,000 --> 01:26:28,000
然后高层管理人员有一部分在出逃

2621
01:26:28,000 --> 01:26:29,000
呃

2622
01:26:29,000 --> 01:26:31,000
然后底层也有很多人辞职了

2623
01:26:31,000 --> 01:26:33,000
原因就是 github 因为现在体量越来越大

2624
01:26:33,000 --> 01:26:36,000
就是他他不再是一个早期的那种

2625
01:26:36,000 --> 01:26:37,000
像

2626
01:26:37,000 --> 01:26:40,000
像一个西部牛仔的这么一个公司了

2627
01:26:40,000 --> 01:26:43,000
他现在已经不是有几亿美元的那个

2628
01:26:43,000 --> 01:26:45,000
我才感到是不是说太多了

2629
01:26:45,000 --> 01:26:48,000
就反正他应该是现在是一个身价非常高的

2630
01:26:48,000 --> 01:26:49,000
啊

2631
01:26:49,000 --> 01:26:49,000
二 billion

2632
01:26:49,000 --> 01:26:52,000
对两 billion 美元的

2633
01:26:52,000 --> 01:26:54,000
20 公司

2634
01:26:54,000 --> 01:26:54,000
对吧

2635
01:26:54,000 --> 01:26:56,000
然后呃

2636
01:26:56,000 --> 01:26:57,000
在这种情况之下

2637
01:26:57,000 --> 01:26:57,000
其

2638
01:26:57,000 --> 01:27:00,000
这创始人叫什么

2639
01:27:00,000 --> 01:27:01,000
vanstras

2640
01:27:01,000 --> 01:27:05,000
他想要 chris chris

2641
01:27:05,000 --> 01:27:09,000
他想要让公司保持效率

2642
01:27:09,000 --> 01:27:11,000
所以他就请了一个顾问来

2643
01:27:11,000 --> 01:27:12,000
顾问叫什么来着

2644
01:27:12,000 --> 01:27:13,000
是个好像是个印度名字

2645
01:27:13,000 --> 01:27:18,000
然后这个顾问呃就帮助他设计了一套全新的管理结构

2646
01:27:18,000 --> 01:27:22,000
然后就就管理结构里面最重要的一点就是引入了中层管理人员

2647
01:27:22,000 --> 01:27:27,000
我们知道 github 之前是一个比较所谓 flat 的一个一个管理结构

2648
01:27:27,000 --> 01:27:27,000
就是基本上

2649
01:27:27,000 --> 01:27:28,000
大部分人都是平等的

2650
01:27:28,000 --> 01:27:30,000
你汇报的话

2651
01:27:30,000 --> 01:27:32,000
你可以直接去找什么 cdo 或者是 ceo 汇报

2652
01:27:32,000 --> 01:27:33,000
对吧

2653
01:27:33,000 --> 01:27:35,000
但是现在他要引入中层管理的话

2654
01:27:35,000 --> 01:27:39,000
你就意味着现在又就像一个军队一样会有指挥层级了

2655
01:27:39,000 --> 01:27:41,000
然后这一点就让很多人不爽

2656
01:27:41,000 --> 01:27:42,000
呃

2657
01:27:42,000 --> 01:27:48,000
不管是原来的顶层的管理员还是呃管理人员还是底层的开发人员

2658
01:27:48,000 --> 01:27:48,000
嗯

2659
01:27:48,000 --> 01:27:49,000
呃

2660
01:27:49,000 --> 01:27:52,000
然后很多人就走了

2661
01:27:52,000 --> 01:27:57,000
其实这就是一个典型的一个什么创业公司转向成熟公司

2662
01:27:57,000 --> 01:28:03,000
就是由创始人创始团队转向那种成熟的这种职业经理人的一个过程嘛

2663
01:28:03,000 --> 01:28:05,000
就青春期嘛

2664
01:28:05,000 --> 01:28:07,000
我觉得就是这基本上就叫企业青春期嘛

2665
01:28:07,000 --> 01:28:10,000
你从一个小企业成长到一个大企业

2666
01:28:10,000 --> 01:28:14,000
然后你会发现你不得不应对一些成人世界里面才有困扰

2667
01:28:14,000 --> 01:28:18,000
你当时你以前就假装这些困扰不存在

2668
01:28:19,000 --> 01:28:21,000
然后算了搞这么一套

2669
01:28:21,000 --> 01:28:21,000
对

2670
01:28:21,000 --> 01:28:26,000
但就在这个过程中很容易就是那些这种这种所谓的创始机

2671
01:28:26,000 --> 01:28:28,000
就是我们觉得还是一个小团队

2672
01:28:28,000 --> 01:28:29,000
还是一种有种锐气

2673
01:28:29,000 --> 01:28:39,000
但其实你会逐渐看到他不管在产品的发布上面还是在公司的这个管理上面都逐渐迈入中中年那种感觉

2674
01:28:39,000 --> 01:28:40,000
就很多人觉得不爽的

2675
01:28:40,000 --> 01:28:42,000
然后就让我们创始人团队走了

2676
01:28:42,000 --> 01:28:45,000
然后用这些核心用户也逐渐去就离开了

2677
01:28:45,000 --> 01:28:47,000
前段时间还出了一个什么事

2678
01:28:47,000 --> 01:28:50,000
是有一堆有一个什么公开信啊

2679
01:28:50,000 --> 01:28:56,000
关系说是要是要这个这些开源的那些大的开软件的集体撤出的

2680
01:28:56,000 --> 01:28:58,000
github 转去别的地方

2681
01:28:58,000 --> 01:29:01,000
因为他们提出的要解决他们这种开软软件

2682
01:29:01,000 --> 01:29:05,000
因为大开软软件他管理方式和那种小公司的那种私有代码还是不一样的

2683
01:29:05,000 --> 01:29:06,000
对吧

2684
01:29:06,000 --> 01:29:07,000
包括这种在在一休啊

2685
01:29:07,000 --> 01:29:09,000
提给上面的管理上都不一样

2686
01:29:09,000 --> 01:29:12,000
然后他们提出很多这种需要改进产品上需要改进的点

2687
01:29:12,000 --> 01:29:14,000
那个给他不都没有响应吗

2688
01:29:14,000 --> 01:29:16,000
然后就知道我靠我们不在这里玩了

2689
01:29:16,000 --> 01:29:16,000
对吧

2690
01:29:16,000 --> 01:29:19,000
我们这个就是开源的你自己你自己又不开源

2691
01:29:19,000 --> 01:29:22,000
然后我们提的问题你又不敢我们去别的地方不和你玩了

2692
01:29:22,000 --> 01:29:25,000
然后最近他们就出了一个什么回应说啊

2693
01:29:25,000 --> 01:29:26,000
我们都听到你们意见

2694
01:29:26,000 --> 01:29:28,000
我们要我们要我们要痛改言非

2695
01:29:28,000 --> 01:29:29,000
我们要改

2696
01:29:29,000 --> 01:29:30,000
有出这么一个事

2697
01:29:30,000 --> 01:29:34,000
其实有时候不是特别好的征兆吧

2698
01:29:34,000 --> 01:29:35,000
对这个平台来讲

2699
01:29:36,000 --> 01:29:40,000
给他的公众形象其实一直还好

2700
01:29:40,000 --> 01:29:44,000
我觉得不是那么不虽然不是那么的清明

2701
01:29:44,000 --> 01:29:46,000
但至少还 OK 吧

2702
01:29:46,000 --> 01:29:47,000
至少在开发者眼里面

2703
01:29:47,000 --> 01:29:49,000
给他是一个非常酷的公司

2704
01:29:49,000 --> 01:29:52,000
但是最近的确有几件不酷的事情

2705
01:29:52,000 --> 01:29:54,000
然后你就会心里面会有一个隐忧

2706
01:29:54,000 --> 01:29:56,000
就是会说我靠

2707
01:29:56,000 --> 01:29:58,000
如果明天给他不好用了

2708
01:29:58,000 --> 01:29:59,000
我应该去哪儿

2709
01:29:59,000 --> 01:30:05,000
好像放眼整个互联网没有什么更好的地方

2710
01:30:05,000 --> 01:30:06,000
因为有有有挺多的

2711
01:30:06,000 --> 01:30:08,000
你觉得是这样吗

2712
01:30:08,000 --> 01:30:10,000
除了这个比巴 K

2713
01:30:10,000 --> 01:30:13,000
然后那个给他最近也开了类似的

2714
01:30:13,000 --> 01:30:15,000
给他是一个什么

2715
01:30:15,000 --> 01:30:19,000
给他我这他是他最开始的时候是叫自己自己就是 self host 吗

2716
01:30:19,000 --> 01:30:20,000
你自己要自己装那个

2717
01:30:20,000 --> 01:30:23,000
他现在也开了那种就是公开的托管平台了

2718
01:30:23,000 --> 01:30:25,000
我真的说免费对对好吧

2719
01:30:25,000 --> 01:30:26,000
就其实你可以去试一下

2720
01:30:26,000 --> 01:30:27,000
他们说那个还不错

2721
01:30:27,000 --> 01:30:28,000
我一趟上次看了一下

2722
01:30:28,000 --> 01:30:30,000
就来挺好的

2723
01:30:30,000 --> 01:30:31,000
反正如果等那个给他们玩不下去了

2724
01:30:31,000 --> 01:30:32,000
就签到那边去呗

2725
01:30:32,000 --> 01:30:35,000
那个又没什么太大影响

2726
01:30:35,000 --> 01:30:35,000
那是苦了

2727
01:30:35,000 --> 01:30:37,000
我们这些用高语言的人了

2728
01:30:37,000 --> 01:30:39,000
你说那个一破路径要改一遍

2729
01:30:42,000 --> 01:30:43,000
这就是对

2730
01:30:43,000 --> 01:30:45,000
其实我总觉得这个高吧

2731
01:30:45,000 --> 01:30:52,000
给他们做到就做到原生支持专门的这么一个私有公司的网站还是有点有点过

2732
01:30:52,000 --> 01:30:54,000
那他不是就看着这

2733
01:30:54,000 --> 01:30:55,000
这个要解决了

2734
01:30:55,000 --> 01:30:57,000
也是想他其实也不是说把给他们做的原生

2735
01:30:57,000 --> 01:31:02,000
他就说把那个就他把那个概念就怎么办

2736
01:31:02,000 --> 01:31:04,000
为了简化你的硬泡

2737
01:31:04,000 --> 01:31:07,000
就有两个有两个正交的概念吗

2738
01:31:07,000 --> 01:31:13,000
一个就是说你的这个一泡的名字和这个一泡东西的他所在的这个物理位置

2739
01:31:13,000 --> 01:31:14,000
他们两个合一了

2740
01:31:14,000 --> 01:31:15,000
但其实在一般情况下

2741
01:31:15,000 --> 01:31:17,000
这两个应该是应该是分开来的对吧

2742
01:31:17,000 --> 01:31:18,000
你顶多了一个拍开期

2743
01:31:18,000 --> 01:31:23,000
但是你不应该去考虑说这个拍开去是后死在哪里的

2744
01:31:23,000 --> 01:31:24,000
但是勾勾的色就觉得

2745
01:31:24,000 --> 01:31:27,000
他做了一件非常非常自作聪明的东西

2746
01:31:27,000 --> 01:31:29,000
他会帮你去猜这个

2747
01:31:29,000 --> 01:31:30,000
但你你觉得这个是自作聪明

2748
01:31:30,000 --> 01:31:32,000
我其实我觉得他还是有点他合理性的

2749
01:31:33,000 --> 01:31:34,000
好吧

2750
01:31:34,000 --> 01:31:35,000
这我觉得他很理性的这里就是说

2751
01:31:35,000 --> 01:31:37,000
如果说你你不把这两个合一的话

2752
01:31:37,000 --> 01:31:39,000
你就会引出一个单独的问题

2753
01:31:39,000 --> 01:31:46,000
就是说谁最终决定这个你影破他那个那个被创自负创的唯一性呢

2754
01:31:47,000 --> 01:31:51,000
一个这里是一个这是一种这是另外一种形式的所谓

2755
01:31:51,000 --> 01:31:54,000
看文章和看分析人就是说没错对

2756
01:31:54,000 --> 01:31:57,000
如果你不如果你不让他自己去做这件事情的话

2757
01:31:57,000 --> 01:32:01,000
那你就必须手动的显示的声明说你要去 github 找这个东西

2758
01:32:01,000 --> 01:32:03,000
而这个而这一步实际上是非常讨厌

2759
01:32:05,000 --> 01:32:05,000
对啊

2760
01:32:05,000 --> 01:32:08,000
就是很多包管理就就就卡在这里嘛

2761
01:32:08,000 --> 01:32:14,000
你要解决各种各种麻烦的就去选择到底在哪里找这个包会会不会要有一个集中的一个包管理

2762
01:32:14,000 --> 01:32:19,000
比如说我们现在看比如拍手有那个叫什么拍拍拍吧

2763
01:32:19,000 --> 01:32:21,000
PP 拍拍拍批

2764
01:32:21,000 --> 01:32:24,000
拍分 packageindex 对吧

2765
01:32:24,000 --> 01:32:24,000
对吧

2766
01:32:24,000 --> 01:32:26,000
这个是一个集中的服务

2767
01:32:26,000 --> 01:32:29,000
然后 Ruby 有那个叫 jim 那套吧

2768
01:32:29,000 --> 01:32:30,000
也是这样子的

2769
01:32:30,000 --> 01:32:32,000
甚至你说像 mac 我们常用那个 homebrew

2770
01:32:32,000 --> 01:32:34,000
他也是他虽然是用 github

2771
01:32:34,000 --> 01:32:38,000
但是他还是有一个集中的一个包管就会有一个中心化的东西嘛

2772
01:32:38,000 --> 01:32:39,000
但是 go 那样的话

2773
01:32:39,000 --> 01:32:40,000
他其实有个好处

2774
01:32:40,000 --> 01:32:41,000
就是他可以就是去中心化

2775
01:32:41,000 --> 01:32:47,000
他不存在一个所谓的唯一的或者叫做 official 就官方的一个包的一个一个列表

2776
01:32:49,000 --> 01:32:49,000
对吧

2777
01:32:49,000 --> 01:32:54,000
所以就是我觉得说只能说是在这个设计上这个哲学上不一样

2778
01:32:54,000 --> 01:32:55,000
就是说有一缺点吧

2779
01:32:55,000 --> 01:32:58,000
但是就是会产生一些实际的 complication

2780
01:32:58,000 --> 01:32:59,000
比如说

2781
01:32:59,000 --> 01:33:02,000
个的看来就是如果说你但你这个包的那个管理的地址变了

2782
01:33:02,000 --> 01:33:05,000
那你可能要重新改下你的一波路径

2783
01:33:05,000 --> 01:33:11,000
那但是好处就是说你不用受制于这个一个集中化的那个那个包列表的可可用性

2784
01:33:11,000 --> 01:33:16,000
比如说那个拍皮经常有一段时间经常用不了啊

2785
01:33:16,000 --> 01:33:16,000
就挂掉了

2786
01:33:16,000 --> 01:33:17,000
就是在国内吧

2787
01:33:17,000 --> 01:33:20,000
国内好多依赖拍摄公司都搭建自己的拍皮员

2788
01:33:20,000 --> 01:33:21,000
对对对对对

2789
01:33:21,000 --> 01:33:21,000
所以所以我觉得这个是一个呃也是一个不是那么那么很很强的一个方式吧

2790
01:33:21,000 --> 01:33:28,000
所以我觉得这个是一个呃也是一个不是那么那么黑白分明的事情是你做的不同选择

2791
01:33:28,000 --> 01:33:28,000
就是对

2792
01:33:28,000 --> 01:33:31,000
他们也是要见何取舍

2793
01:33:31,000 --> 01:33:33,000
对这才能有不同的后果

2794
01:33:33,000 --> 01:33:38,000
对对我想说的就是其实 Facebook 在几年前也有这么一次转型

2795
01:33:38,000 --> 01:33:40,000
Facebook 目前活得挺好的嘛

2796
01:33:40,000 --> 01:33:48,000
那希望给他别的就是虽然他可能背弃了一些开源早期小创业公司青春期的理念

2797
01:33:48,000 --> 01:33:50,000
但是还是希望他能活得好一点

2798
01:33:50,000 --> 01:33:50,000
这样

2799
01:33:51,000 --> 01:33:55,000
你我的生活也会继续也也也也会继续保持一个比较高的水准

2800
01:33:55,000 --> 01:34:06,000
我很难想象说将来要找一个开源项目还要去适应不同不同的开源呃版本呃开源 hosting 网站的 EY 什么的

2801
01:34:06,000 --> 01:34:08,000
我想想着对

2802
01:34:08,000 --> 01:34:14,000
其实起码我上次比如说我写这个学这个写 VPN 的时候可以在那个给他把我直接搜一下

2803
01:34:14,000 --> 01:34:19,000
然后有相应的关键词就可以找到呃所谓的试炼项目吗

2804
01:34:19,000 --> 01:34:20,000
然后可以学习他们怎么用呢

2805
01:34:20,000 --> 01:34:21,000
对吧

2806
01:34:21,000 --> 01:34:25,000
对不用再换五个不同的地方去找

2807
01:34:25,000 --> 01:34:27,000
然后嗯不一定好用

2808
01:34:29,000 --> 01:34:30,000
行吧

2809
01:34:30,000 --> 01:34:32,000
今天扯了一多小时

2810
01:34:32,000 --> 01:34:33,000
虽然

2811
01:34:34,000 --> 01:34:36,000
这些主题是什么

2812
01:34:36,000 --> 01:34:38,000
我自己没从 Vpn 开始是吧

2813
01:34:38,000 --> 01:34:41,000
从 righto vpn 开始好吧

2814
01:34:41,000 --> 01:34:43,000
感谢收听 ipn podcast

2815
01:34:43,000 --> 01:34:45,000
访问旗下的 IT 技术主题娱乐节目内容

2816
01:34:45,000 --> 01:34:47,000
我们号称 hardcore

2817
01:34:47,000 --> 01:34:49,000
但是没有干货想听人听不想听人就别听

2818
01:34:49,000 --> 01:34:51,000
你可以为我本

2819
01:34:51,000 --> 01:34:54,000
本节目捐款捐款地址是 kernelpanic.fm slash

2820
01:34:54,000 --> 01:34:56,000
donate 捐款结果随意

2821
01:34:56,000 --> 01:35:00,000
只要是八个正整数倍就可以捐款不会给你带来什么不捐也不会让你失去什么

2822
01:35:00,000 --> 01:35:03,000
我考考是 no hard feelings

2823
01:35:03,000 --> 01:35:09,000
如果你有任何反馈可以发电子邮件到 kernelpanic atipn.li

2824
01:35:09,000 --> 01:35:12,000
同时也欢迎你收听 ipn 旗下的其他几档节目

2825
01:35:12,000 --> 01:35:14,000
IT 公文未知到太一来了流行通信

2826
01:35:14,000 --> 01:35:15,000
high story

2827
01:35:15,000 --> 01:35:16,000
阴影像无资源

2828
01:35:16,000 --> 01:35:18,000
不物质选美和闭卡关

2829
01:35:19,000 --> 01:35:20,000
呃

2830
01:35:20,000 --> 01:35:21,000
应该说一句新年快乐吧?

2831
01:35:21,000 --> 01:35:22,000
嗯

2832
01:35:22,000 --> 01:35:23,000
有点晚了

2833
01:35:23,000 --> 01:35:24,000
好吧

2834
01:35:24,000 --> 01:35:25,000
给大家拜个晚年

2835
01:35:25,000 --> 01:35:26,000
还没有出书呢

2836
01:35:26,000 --> 01:35:27,000
嗯

2837
01:35:27,000 --> 01:35:28,000
这就是猴年吧

2838
01:35:28,000 --> 01:35:29,000
对吧

2839
01:35:29,000 --> 01:35:30,000
codemonkey 新年好

2840
01:35:30,000 --> 01:35:31,000
对

2841
01:35:31,000 --> 01:35:32,000
呃

2842
01:35:32,000 --> 01:35:33,000
我们下期节目再会

2843
01:35:33,000 --> 01:35:34,000
拜拜

