1
00:00:00,000 --> 00:00:02,000
我现在感觉耳机很有问题

2
00:00:02,000 --> 00:00:04,000
因为我现在是用的是 AirPods

3
00:00:04,000 --> 00:00:06,000
等一下我换一下

4
00:00:06,000 --> 00:00:08,000
不要用无线的

5
00:00:08,000 --> 00:00:09,000
找个有线的耳机

6
00:00:09,000 --> 00:00:10,000
不然会很不稳定的

7
00:00:10,000 --> 00:00:12,000
主要是我手机没什么电

8
00:00:12,000 --> 00:00:14,000
行我换好了

9
00:00:14,000 --> 00:00:15,000
好不好意思

10
00:00:15,000 --> 00:00:20,000
所以这回苹果 12 的背上贴的充电就有用了

11
00:00:20,000 --> 00:00:21,000
就是那里可以去边充电

12
00:00:21,000 --> 00:00:23,000
然后下面插个有线耳机

13
00:00:23,000 --> 00:00:24,000
没有因为我买的是 mini

14
00:00:24,000 --> 00:00:25,000
然后这个电量就感觉超小

15
00:00:25,000 --> 00:00:28,000
用到一天晚上就差不多就不够了

16
00:00:28,000 --> 00:00:29,000
真的很差的吗

17
00:00:29,000 --> 00:00:32,000
我还想说那天我去店里试了一下

18
00:00:32,000 --> 00:00:33,000
那个 mini 的手感

19
00:00:33,000 --> 00:00:34,000
我觉得还挺不错的

20
00:00:34,000 --> 00:00:35,000
mini 是很好啊

21
00:00:35,000 --> 00:00:36,000
就是很好

22
00:00:36,000 --> 00:00:38,000
那它肯定电池就没有其他那么大吗

23
00:00:38,000 --> 00:00:41,000
就是很纠结这个事情好烦

24
00:00:41,000 --> 00:00:43,000
它能不能把那个摄像头剪到只剩一个

25
00:00:43,000 --> 00:00:45,000
然后腾点空间给电池

26
00:00:45,000 --> 00:00:49,000
你去跟苹果说吧

27
00:00:49,000 --> 00:00:51,000
好了我们开始录吧

28
00:00:59,000 --> 00:01:11,000
大家好

29
00:01:11,000 --> 00:01:13,000
今天是 2021 年的 3 月 16 号

30
00:01:13,000 --> 00:01:15,000
自弹自唱的第 147 期

31
00:01:15,000 --> 00:01:18,000
同时也是内核恐慌的第 63 期

32
00:01:18,000 --> 00:01:21,000
这也是自弹自唱与内核恐慌的串台

33
00:01:21,000 --> 00:01:24,000
自弹自串的第 10 期

34
00:01:24,000 --> 00:01:26,000
自弹自唱是 The Type 旗下全球首家

35
00:01:26,000 --> 00:01:29,000
用华语制作的字体排音主题播客节目

36
00:01:29,000 --> 00:01:31,000
我是主播

37
00:01:31,000 --> 00:01:32,000
文川西半动影局 Eric

38
00:01:32,000 --> 00:01:33,000
我是主播

39
00:01:33,000 --> 00:01:34,000
黄浦嘉明

40
00:01:34,000 --> 00:01:34,000
秦真宇

41
00:01:34,000 --> 00:01:36,000
陈真宇

42
00:01:36,000 --> 00:01:38,000
内容恐慌是一档

43
00:01:38,000 --> 00:01:39,000
大致以计算机科技

44
00:01:39,000 --> 00:01:41,000
为主题的娱乐 podcast

45
00:01:41,000 --> 00:01:42,000
我们号称硬核

46
00:01:42,000 --> 00:01:43,000
但是也没有什么干货

47
00:01:43,000 --> 00:01:44,000
想听人听

48
00:01:44,000 --> 00:01:45,000
不想听就别听

49
00:01:45,000 --> 00:01:47,000
我们的网址是 pan.icu

50
00:01:47,000 --> 00:01:48,000
您可以在网站上

51
00:01:48,000 --> 00:01:50,000
找到订阅我们的节目

52
00:01:50,000 --> 00:01:51,000
订阅我们节目的方法

53
00:01:51,000 --> 00:01:53,000
以及联络我们的方式

54
00:01:53,000 --> 00:01:53,000
我是吴涛

55
00:01:53,000 --> 00:01:55,000
我是 Rail

56
00:01:55,000 --> 00:01:56,000
友台主播你们好

57
00:01:56,000 --> 00:01:58,000
我们居然已经开始

58
00:01:58,000 --> 00:01:59,000
做第十期的串台了

59
00:01:59,000 --> 00:02:00,000
两位输了

60
00:02:00,000 --> 00:02:02,000
托你们的福啊

61
00:02:02,000 --> 00:02:03,000
我们才能够保持

62
00:02:03,000 --> 00:02:04,000
这个更新的节奏

63
00:02:04,000 --> 00:02:06,000
没关系

64
00:02:06,000 --> 00:02:07,000
反正这期的话

65
00:02:07,000 --> 00:02:08,000
主要是吴涛在说

66
00:02:08,000 --> 00:02:10,000
我只负责听

67
00:02:10,000 --> 00:02:10,000
是这样吗

68
00:02:10,000 --> 00:02:11,000
我怎么

69
00:02:11,000 --> 00:02:12,000
为什么我事先

70
00:02:12,000 --> 00:02:13,000
没有得到通知

71
00:02:13,000 --> 00:02:15,000
现在你知道了

72
00:02:15,000 --> 00:02:17,000
所以让你写这个提纲嘛

73
00:02:17,000 --> 00:02:18,000
因为这次我们来串台的

74
00:02:18,000 --> 00:02:20,000
一个非常重要的主题

75
00:02:20,000 --> 00:02:22,000
宗师级程序员的

76
00:02:22,000 --> 00:02:23,000
字体排音解决方案

77
00:02:23,000 --> 00:02:24,000
我们要来终于

78
00:02:24,000 --> 00:02:26,000
可以来拜一拜

79
00:02:26,000 --> 00:02:27,000
我们的高德纳大先生

80
00:02:27,000 --> 00:02:28,000
是的

81
00:02:28,000 --> 00:02:29,000
其实

83
00:02:59,000 --> 00:03:26,000
With HAB 针在 Banking

84
00:03:26,000 --> 00:03:28,000
也领受到很大的努力

85
00:03:28,000 --> 00:03:29,000
现在 tiene mucho dinero

86
00:03:29,000 --> 00:03:29,000
-马利-我也要的人但是ç决定 picked a child

87
00:03:29,000 --> 00:03:29,000
checkout 我让他们特别快 decode almost get a percent great

88
00:03:29,000 --> 00:03:31,000
然后在我上大学之后

89
00:03:31,000 --> 00:03:32,000
就我大学毕业之后

90
00:03:32,000 --> 00:03:34,000
外部开发的标准变成了

91
00:03:34,000 --> 00:03:37,000
你要以语意的方式去描述整个文档的结构

92
00:03:37,000 --> 00:03:42,000
然后用 CSS 去改变每个文档的样式

93
00:03:42,000 --> 00:03:44,000
然后大概就是在这个时候

94
00:03:44,000 --> 00:03:48,000
我隐约听说了在桌面出版界也有这么一个东西

95
00:03:48,000 --> 00:03:49,000
叫 Tag

96
00:03:49,000 --> 00:03:54,000
但是真正用到它还是到德国之后写硕士论文的时候

97
00:03:54,000 --> 00:03:56,000
就大概明白了这个东西

98
00:03:56,000 --> 00:03:57,000
它的来历以及它的用处

99
00:03:57,000 --> 00:03:59,000
然后怎么说

100
00:03:59,000 --> 00:04:04,000
用自己对 HTML 和 CSS 的理解去使用它

101
00:04:04,000 --> 00:04:05,000
然后碰着头破血流

102
00:04:05,000 --> 00:04:07,000
然后在历经了坎坷之后

103
00:04:07,000 --> 00:04:08,000
终于把论文搞出来了

104
00:04:08,000 --> 00:04:10,000
大概就是我跟 Tag

105
00:04:10,000 --> 00:04:12,000
Latex 的全部的渊源

106
00:04:12,000 --> 00:04:13,000
然后我在毕业之后

107
00:04:13,000 --> 00:04:16,000
2010 年刚刚加入 TIB 的时候

108
00:04:16,000 --> 00:04:18,000
对 TIB 的贡献之一

109
00:04:18,000 --> 00:04:22,000
就是我在 2010 年写过一篇 Computer Modern 的故事

110
00:04:22,000 --> 00:04:24,000
就是高德纳发明的

111
00:04:24,000 --> 00:04:24,000
不是他发明的

112
00:04:24,000 --> 00:04:27,000
他数字化了这款字体

113
00:04:27,000 --> 00:04:27,000
然后用了

114
00:04:27,000 --> 00:04:31,000
来排他的这个 PLCP 的这本书

115
00:04:31,000 --> 00:04:36,000
这本书基本上简短的解释了这个 Latex 的整个的渊源

116
00:04:36,000 --> 00:04:37,000
各位如果有兴趣的话

117
00:04:37,000 --> 00:04:41,000
可以去看一下那个文章在 thetype.com

118
00:04:41,000 --> 00:04:44,000
然后你可以在上面搜 computermodern

119
00:04:44,000 --> 00:04:46,000
然后应该能搜到这篇文章

120
00:04:46,000 --> 00:04:49,000
是 2010 年 2 月 05 号写的

121
00:04:49,000 --> 00:04:53,000
当然我们又会把这篇文章的链接放到今天的 show notes 里面去

122
00:04:53,000 --> 00:04:54,000
大家可以去看哈

123
00:04:54,000 --> 00:04:56,000
2010 年时候的文章

124
00:04:57,000 --> 00:04:58,000
我说完了

125
00:04:58,000 --> 00:05:01,000
那接下来是 Rex

126
00:05:01,000 --> 00:05:02,000
不是 Rex

127
00:05:02,000 --> 00:05:04,000
星系站长

128
00:05:04,000 --> 00:05:06,000
那个 Rail 你说一下

129
00:05:06,000 --> 00:05:12,000
我第一次接触应该是用 Latex 写那个时候

130
00:05:12,000 --> 00:05:13,000
对等下这玩意到底怎么念

131
00:05:13,000 --> 00:05:15,000
我们要不要先科普一下

132
00:05:15,000 --> 00:05:16,000
Latex 你念的是对的

133
00:05:16,000 --> 00:05:17,000
Tech

134
00:05:17,000 --> 00:05:19,000
是拉不是 Lay 对吧

135
00:05:19,000 --> 00:05:21,000
反正我一直念 Latex

136
00:05:21,000 --> 00:05:23,000
其实有人念 Lay 的

137
00:05:23,000 --> 00:05:26,000
但是呢一般我们都念拉

138
00:05:26,000 --> 00:05:26,000
好的

139
00:05:26,000 --> 00:05:27,000
我当时是在 Latex 的

140
00:05:27,000 --> 00:05:30,000
我是在上大学本科的时候

141
00:05:30,000 --> 00:05:32,000
然后写作业

142
00:05:32,000 --> 00:05:34,000
然后我因为我不是写字

143
00:05:34,000 --> 00:05:36,000
就是手写很丑嘛

144
00:05:36,000 --> 00:05:37,000
然后我就不想手写

145
00:05:37,000 --> 00:05:42,000
我都一直从大概应该从大学开始基本上教作业都没有手写过

146
00:05:42,000 --> 00:05:43,000
除了考试是必须手写的

147
00:05:43,000 --> 00:05:47,000
那个时候都是用这个电脑排版好

148
00:05:47,000 --> 00:05:48,000
然后就去打印

149
00:05:48,000 --> 00:05:49,000
然后再教嘛

150
00:05:49,000 --> 00:05:53,000
然后后来是因为学科的就是你有几个课程的关系

151
00:05:53,000 --> 00:05:57,000
它会涉及到比较多的公式和这个

152
00:05:57,000 --> 00:05:59,000
就是数学的一些排版

153
00:05:59,000 --> 00:06:02,000
还有像一些这种图形啊什么的

154
00:06:02,000 --> 00:06:07,000
然后我就想说找一个特别好用的一个工具来解决这个问题嘛

155
00:06:07,000 --> 00:06:09,000
当时 word 肯定是不行的对吧

156
00:06:09,000 --> 00:06:14,000
当时 word 很久已经没有就是那个数学排版工具实在是太垃圾了

157
00:06:14,000 --> 00:06:16,000
所以后来就多多转转

158
00:06:16,000 --> 00:06:20,000
当时也在玩像那个 Linux 啊那些系统嘛

159
00:06:20,000 --> 00:06:22,000
然后就就在找到了这么一个工具

160
00:06:22,000 --> 00:06:25,000
应该是受了谁的蛊惑来着

161
00:06:25,000 --> 00:06:27,000
我想想应该是王寅

162
00:06:27,000 --> 00:06:27,000
如果没错

163
00:06:27,000 --> 00:06:29,000
我没记错的话

164
00:06:29,000 --> 00:06:33,000
对当时他不是写了有有有几篇还影响挺深的一个文章

165
00:06:33,000 --> 00:06:36,000
其中就是在这个都说这个这个拉太和这个东西嘛

166
00:06:36,000 --> 00:06:37,000
然后我就去学了一下

167
00:06:37,000 --> 00:06:39,000
然后费了牛逼自尽

168
00:06:39,000 --> 00:06:43,000
装上了一个这个我们叫什么一个是 distribution

169
00:06:43,000 --> 00:06:45,000
然后就开始用那个写作业

170
00:06:45,000 --> 00:06:47,000
然后后来是写毕业论文

171
00:06:47,000 --> 00:06:49,000
然后去国外上学写作业和毕业论文

172
00:06:49,000 --> 00:06:51,000
差不多也就这么这么干

173
00:06:51,000 --> 00:06:52,000
然后之后就再也没用过

174
00:06:52,000 --> 00:06:54,000
差不多是这么一个过程

175
00:06:55,000 --> 00:06:57,000
所以你的论文也是用拉特和写的啊

176
00:06:57,000 --> 00:06:59,000
啊我毕竟读 CS 嘛

177
00:06:59,000 --> 00:07:02,000
那肯定还是要对吧

178
00:07:02,000 --> 00:07:04,000
这这两者之间有必然的关联吗

179
00:07:04,000 --> 00:07:11,000
就是我信我相信大部分我们听众里面读读 CS 的人也未必是用拉太和写的毕业论文

180
00:07:11,000 --> 00:07:12,000
呃那或者这么说吧

181
00:07:12,000 --> 00:07:14,000
如果你想用拉太写的写论文

182
00:07:14,000 --> 00:07:16,000
然后你又不是 CS 的

183
00:07:16,000 --> 00:07:17,000
你其实是不是很尴尬

184
00:07:17,000 --> 00:07:18,000
那可不一定啊

185
00:07:18,000 --> 00:07:23,000
拉太和其实现在基本上你觉得现在拉太和最大的用途是在哪

186
00:07:23,000 --> 00:07:25,000
就我觉得是

187
00:07:25,000 --> 00:07:26,000
呃

188
00:07:26,000 --> 00:07:27,000
学

194
00:09:57,000 --> 00:09:59,000
拉太和是一个很厚的一本书吧

195
00:09:59,000 --> 00:10:00,000
但大概也有这样子的一个量级

196
00:10:00,000 --> 00:10:02,000
A 5 就是 A 4 的一半吗

197
00:10:02,000 --> 00:10:04,000
1000 页 A 5 那也有 500 页的 A 4

198
00:10:04,000 --> 00:10:06,000
那也是非常厚的一本书

199
00:10:06,000 --> 00:10:07,000
啊对

200
00:10:07,000 --> 00:10:11,000
我知道真一直都在做政界

201
00:10:11,000 --> 00:10:16,000
但是我但是我没有想到就是当时有每个季度 1000 多页的量

202
00:10:16,000 --> 00:10:19,000
就是因为我也没认真看

203
00:10:19,000 --> 00:10:20,000
有的时候会少一点

204
00:10:20,000 --> 00:10:21,000
可能几百页吧

205
00:10:21,000 --> 00:10:23,000
多的时候会比较多

206
00:10:23,000 --> 00:10:24,000
OK 你们继续

207
00:10:24,000 --> 00:10:26,000
Eric 来说一下吧

208
00:10:26,000 --> 00:10:27,000
好

209
00:10:27,000 --> 00:10:33,000
我也是在大学的时候呃第一次知道太和的

210
00:10:33,000 --> 00:10:41,000
每每次在这个创展的时候都要说到我的大学的第二学士是计算机的这样一个黑历史

211
00:10:41,000 --> 00:10:42,000
但是呢

212
00:10:42,000 --> 00:10:48,000
我那时候第二学位的这个论文呢是不并不需要用那么多公式

213
00:10:48,000 --> 00:10:48,000
所以呢

214
00:10:48,000 --> 00:10:54,000
我们当我们当时的那个呃第二学位的论文是不是用太和写的

215
00:10:54,000 --> 00:10:57,000
那我第一学位大家知道我是学日语的吗

216
00:10:57,000 --> 00:10:59,000
那就更更是不用大家都用 word 的

217
00:10:59,000 --> 00:11:03,000
那我用太和的是因为因为我高中也是学理科的吗

218
00:11:03,000 --> 00:11:09,000
所以就要做一些什么卷子之类的内内心东西都是用 word 排的这个公式

219
00:11:09,000 --> 00:11:10,000
然后觉得很难用

220
00:11:10,000 --> 00:11:11,000
到了大学本科以后呢

221
00:11:11,000 --> 00:11:14,000
有那个同学介绍说就咱们理工科的啊

222
00:11:14,000 --> 00:11:15,000
真的就是理工科东西的

223
00:11:15,000 --> 00:11:17,000
比如他们都用太和吗

224
00:11:17,000 --> 00:11:18,000
所以我就拿来用了

225
00:11:18,000 --> 00:11:19,000
可是这个东西太难用

226
00:11:19,000 --> 00:11:21,000
就是因为要组装嘛

227
00:11:21,000 --> 00:11:22,000
就各种各样的包啊

228
00:11:22,000 --> 00:11:23,000
怎么搞不清楚

229
00:11:23,000 --> 00:11:26,000
所以我当时就是为了解决临时的问题

230
00:11:26,000 --> 00:11:31,000
我干脆就是用一个太和先排出需要的公式

231
00:11:31,000 --> 00:11:32,000
然后呢

232
00:11:32,000 --> 00:11:33,000
生成 pdf 以后

233
00:11:33,000 --> 00:11:35,000
然后再把这个 pdf 转取以后

234
00:11:35,000 --> 00:11:39,000
在欠到我呃平面是比如说我用那个一大 street 给他欠进来

235
00:11:39,000 --> 00:11:41,000
我就是为了排这个公式啊

236
00:11:41,000 --> 00:11:43,000
临时给他欠进来而已

237
00:11:43,000 --> 00:11:48,000
我从来没有用太和就做个完整的一个文档

238
00:11:48,000 --> 00:11:49,000
或者就是中文的文档

239
00:11:49,000 --> 00:11:51,000
从来我我从来没有做过

240
00:11:51,000 --> 00:11:54,000
我就是为了导出一个单单独的一个公式

241
00:11:54,000 --> 00:11:56,000
然后就就生成一个东西

242
00:11:56,000 --> 00:11:56,000
就做过

243
00:11:56,000 --> 00:11:57,000
而已

244
00:11:57,000 --> 00:11:57,000
哎

245
00:11:57,000 --> 00:11:59,000
其实我要就我要补充一下

246
00:11:59,000 --> 00:12:01,000
就刚才其实我们都一直在讲

247
00:12:01,000 --> 00:12:06,000
我似乎因为为了这个数学公式才用的这个那台

248
00:12:06,000 --> 00:12:07,000
我后来我刚翻了一下

249
00:12:07,000 --> 00:12:13,000
我之前写的那些什么作业和这个论文的那些啊文档

250
00:12:13,000 --> 00:12:14,000
还还刚还在电脑里面啊

251
00:12:14,000 --> 00:12:17,000
其实其实发现数学公式也不算特别多

252
00:12:17,000 --> 00:12:21,000
但是其实有很多像什么呃程序代码啊

253
00:12:21,000 --> 00:12:22,000
你知道那个就是读 css

254
00:12:22,000 --> 00:12:24,000
他很多是那种伪代码吗

255
00:12:24,000 --> 00:12:25,000
并不是真的那种

256
00:12:25,000 --> 00:12:26,000
你要用这个

257
00:12:26,000 --> 00:12:30,000
就是等宽字体排印的那种真的我们可以编译的那种代码

258
00:12:30,000 --> 00:12:32,000
他很多是伪代码是不等宽

259
00:12:32,000 --> 00:12:33,000
然后有各种很多稀奇古怪的

260
00:12:33,000 --> 00:12:34,000
那些箭头符号啊

261
00:12:34,000 --> 00:12:35,000
那种东西的

262
00:12:35,000 --> 00:12:37,000
比如典型的一个

263
00:12:37,000 --> 00:12:39,000
比如说这个 grammar 的那些 lexer 啊

264
00:12:39,000 --> 00:12:40,000
那些东西

265
00:12:40,000 --> 00:12:42,000
然后还有一个就是当时我想起来了

266
00:12:42,000 --> 00:12:46,000
当时为了用这个东西是为了画那个

267
00:12:46,000 --> 00:12:47,000
这个叫什么呢啊

268
00:12:47,000 --> 00:12:51,000
automata 啊自动机的那个那个图形

269
00:12:51,000 --> 00:12:53,000
然后当时用了一个呃

270
00:12:53,000 --> 00:12:54,000
那个就是太了

271
00:12:54,000 --> 00:12:56,000
那太还有一个专门的这种

272
00:12:56,000 --> 00:12:56,000
因为他在表达的那个图形是什么呢

273
00:12:56,000 --> 00:12:57,000
他也比较灵活吗

274
00:12:57,000 --> 00:12:59,000
他可以做很多的这个插件

275
00:12:59,000 --> 00:13:03,000
当时有一个非常好用的插件应该叫做 tikz

276
00:13:03,000 --> 00:13:04,000
如果没记错名字的话

277
00:13:04,000 --> 00:13:05,000
tix 对

278
00:13:05,000 --> 00:13:06,000
对怎么念

279
00:13:06,000 --> 00:13:07,000
我不知道

280
00:13:07,000 --> 00:13:09,000
反正他的就是四个字母 tikz

281
00:13:09,000 --> 00:13:10,000
应该是 tix

282
00:13:10,000 --> 00:13:12,000
我念 tix

283
00:13:12,000 --> 00:13:13,000
对他就非常灵活

284
00:13:13,000 --> 00:13:19,000
等于是一套类似于您可以认为是一个可编程的绘图的一个语言

285
00:13:19,000 --> 00:13:24,000
在在然后嵌在那个 magnify 里面就可以做各种各样的非常精美的图形

286
00:13:24,000 --> 00:13:26,000
比如说你要这个

287
00:13:26,000 --> 00:13:27,000
箭头转个 35 度半

288
00:13:27,000 --> 00:13:30,000
然后再和另外一个圆圈连起来

289
00:13:30,000 --> 00:13:31,000
再穿过那个圆心

290
00:13:31,000 --> 00:13:32,000
这种之类的事情

291
00:13:32,000 --> 00:13:37,000
就是你用任何其他的现成的工具都是没法去描述这个东西的吗

292
00:13:37,000 --> 00:13:38,000
精确描述哈

293
00:13:38,000 --> 00:13:44,000
所以就就是当时就就其实其实公式道并不是我用它的最核心的一个事情

294
00:13:44,000 --> 00:13:45,000
我后来发现

295
00:13:45,000 --> 00:13:49,000
然后还有个事儿就是刚才真云也提到这个让我也想起来

296
00:13:49,000 --> 00:13:50,000
就是如果说你的那个文档

297
00:13:50,000 --> 00:13:52,000
不要说 1000 页了哈

298
00:13:52,000 --> 00:13:54,000
就超过比如说啊 100 页吧

299
00:13:54,000 --> 00:13:55,000
然后你用这种任何

300
00:13:56,000 --> 00:13:57,000
这种所见即所得的编辑工具

301
00:13:57,000 --> 00:13:58,000
沃尔德也好啊

302
00:13:58,000 --> 00:14:00,000
当时还试过各种什么啊

303
00:14:00,000 --> 00:14:02,000
openoffice 啊这种东西

304
00:14:02,000 --> 00:14:04,000
就是他的那个性能是直线下降的

305
00:14:04,000 --> 00:14:05,000
就是已经超过几十

306
00:14:05,000 --> 00:14:08,000
就就三位数的页码就基本上没法用

307
00:14:08,000 --> 00:14:12,000
那个时候我记得用的那个那个电脑的性能也一般

308
00:14:12,000 --> 00:14:14,000
然后如果是特别长的文档

309
00:14:14,000 --> 00:14:15,000
你一次编

310
00:14:15,000 --> 00:14:18,000
因为那个那个太太可是每次叫编译一次才能输出那个 pdf 的结果

311
00:14:18,000 --> 00:14:20,000
那个编译时间也还蛮长的

312
00:14:20,000 --> 00:14:22,000
后来就是分分成那个章节对吧

313
00:14:22,000 --> 00:14:24,000
我只我在当时我在写这个章节

314
00:14:24,000 --> 00:14:25,000
我就我就只编译了一段时间

315
00:14:26,000 --> 00:14:26,000
当前那个章节

316
00:14:26,000 --> 00:14:28,000
然后最后再合在一起的时候

317
00:14:28,000 --> 00:14:29,000
我在这个合在一起

318
00:14:29,000 --> 00:14:30,000
在编译

319
00:14:30,000 --> 00:14:31,000
这样就可以节省那个时间嘛

320
00:14:31,000 --> 00:14:33,000
虽然也不是所见即所得

321
00:14:33,000 --> 00:14:37,000
但是整个他的那个 feedback loop 就是还是比较比较快的

322
00:14:38,000 --> 00:14:38,000
对

323
00:14:38,000 --> 00:14:41,000
就实际上你的书大到一个规模的时候

324
00:14:41,000 --> 00:14:44,000
你就必须用管理源代码的方式来管理它

325
00:14:44,000 --> 00:14:47,000
其实作家也同样面临着类似的问题

326
00:14:47,000 --> 00:14:51,000
比如说你会遇到什么版本控制或者是插图方面的问题

327
00:14:51,000 --> 00:14:54,000
这个时候所见即所得实际上并不是一个非常好的解决方式

328
00:14:56,000 --> 00:15:00,000
就是总结一下刚才大家的自我描述

329
00:15:00,000 --> 00:15:04,000
我们会发现公式实际上是太和的一个 killer app

330
00:15:04,000 --> 00:15:06,000
这其实跟我现在观察也相似

331
00:15:06,000 --> 00:15:11,000
就是拉太虽然是一个非常怎么说高大上的系统

332
00:15:11,000 --> 00:15:17,000
但是他目前他的发展的这样一个定位

333
00:15:17,000 --> 00:15:19,000
实际上是在一个非常精细的领域

334
00:15:19,000 --> 00:15:22,000
就是公式编辑

335
00:15:22,000 --> 00:15:25,000
以及部分的插图方面

336
00:15:25,000 --> 00:15:26,000
所以我认为这个是一个很重要的问题

337
00:15:26,000 --> 00:15:30,000
你说我们现在这么多出版物有哪个出版物

338
00:15:30,000 --> 00:15:33,000
你听说是用纯粹用拉太来来编排的吗

339
00:15:33,000 --> 00:15:34,000
好像也没有

340
00:15:34,000 --> 00:15:39,000
那他现在可能是一个个人出版的 specialize 的一个巅峰

341
00:15:39,000 --> 00:15:43,000
但是我觉得他在公共领域好像没有获得那么广泛的应用

342
00:15:43,000 --> 00:15:45,000
至少你跟什么 page maker 或者是

343
00:15:45,000 --> 00:15:48,000
这个就是看领域了

344
00:15:48,000 --> 00:15:51,000
反正我觉得理工科类的还有吧

345
00:15:51,000 --> 00:15:54,000
因为理工科类的所有的论文啊

346
00:15:54,000 --> 00:15:55,000
还有那些期刊的话

347
00:15:55,000 --> 00:15:58,000
他既收拉太的论文

348
00:15:58,000 --> 00:16:00,000
他自己出的话也是用太和出的嘛

349
00:16:00,000 --> 00:16:01,000
就是期刊

350
00:16:01,000 --> 00:16:03,000
然后在日本的话

351
00:16:03,000 --> 00:16:05,000
像比如说像理工科类字典

352
00:16:05,000 --> 00:16:07,000
他整本字典都是用太和出的

353
00:16:07,000 --> 00:16:07,000
哦真的

354
00:16:07,000 --> 00:16:10,000
整本字典是用拉太和来做的

355
00:16:10,000 --> 00:16:11,000
对有的

356
00:16:11,000 --> 00:16:12,000
在日本是有的

357
00:16:12,000 --> 00:16:14,000
研播数学词典的第四版

358
00:16:14,000 --> 00:16:17,000
就是全部都用那个拉太和写的

359
00:16:17,000 --> 00:16:18,000
如果说确切的话

360
00:16:18,000 --> 00:16:22,000
是批拉太和的 2 E 那个版本

361
00:16:22,000 --> 00:16:23,000
那个做的

362
00:16:23,000 --> 00:16:25,000
那首先因为他是字典嘛

363
00:16:25,000 --> 00:16:27,000
然后肯定是有一个批处理的东西嘛

364
00:16:27,000 --> 00:16:30,000
因为你知道字典的他这个每个词条

365
00:16:30,000 --> 00:16:33,000
他是非常有规范化的一个一个 format 的一个东西嘛

366
00:16:33,000 --> 00:16:34,000
然后他又是理工类字的

367
00:16:34,000 --> 00:16:36,000
里面有很多公式嘛

368
00:16:36,000 --> 00:16:36,000
对

369
00:16:36,000 --> 00:16:39,000
就我的理解是就是很多人入门拉太和

370
00:16:39,000 --> 00:16:41,000
就是比如说他要写个论文

371
00:16:41,000 --> 00:16:43,000
但是大部分写论文的人

372
00:16:43,000 --> 00:16:46,000
就是我们说 90%的人写论文之后

373
00:16:46,000 --> 00:16:49,000
可能就不会再写第二次论文了

374
00:16:49,000 --> 00:16:51,000
就他对于很多人来说

375
00:16:51,000 --> 00:16:52,000
拉太和的学习过程

376
00:16:52,000 --> 00:16:54,000
可能是一个一生一次的事情

377
00:16:54,000 --> 00:16:54,000
就是

378
00:16:55,000 --> 00:16:56,000
大概跟追姑娘差不多

379
00:16:56,000 --> 00:16:57,000
你可能追一次

380
00:16:57,000 --> 00:16:59,000
你就不用再追第二次了

381
00:16:59,000 --> 00:17:03,000
但是真正会一直把拉太和用下去的人

382
00:17:03,000 --> 00:17:05,000
大部分都是会继承学术界的

383
00:17:05,000 --> 00:17:08,000
或者是学术出版界的

384
00:17:08,000 --> 00:17:11,000
那这非学术界基本上不会有这种

385
00:17:11,000 --> 00:17:14,000
就是工业化或者是这个产业化的需求嘛

386
00:17:14,000 --> 00:17:16,000
除非你是在排版行业生活的

387
00:17:16,000 --> 00:17:19,000
那基本上不会有这个需求

388
00:17:19,000 --> 00:17:22,000
就是我觉得你一个人写论文

389
00:17:22,000 --> 00:17:24,000
其实就大概是一个个人出版的

390
00:17:24,000 --> 00:17:25,000
这么一个点子嘛

391
00:17:25,000 --> 00:17:28,000
你写一个了不起三五百页的论文

392
00:17:28,000 --> 00:17:31,000
毕业级巅峰

393
00:17:31,000 --> 00:17:35,000
对这已经是巅峰级别的一个拉太和的应用了

394
00:17:35,000 --> 00:17:39,000
然后在个人出版领域吧

395
00:17:39,000 --> 00:17:41,000
但是在公共出版领域

396
00:17:41,000 --> 00:17:42,000
可能一本数学词典

397
00:17:42,000 --> 00:17:45,000
而且我觉得数学词典用拉太和的一个很大原因

398
00:17:45,000 --> 00:17:46,000
也是因为公式嘛

399
00:17:46,000 --> 00:17:50,000
就是我们是不是应该还是根据讲稿来

400
00:17:50,000 --> 00:17:52,000
我觉得好像有点带天了

401
00:17:52,000 --> 00:17:53,000
没关系

402
00:17:53,000 --> 00:17:55,000
这个因为我们是一个公司的公司

403
00:17:55,000 --> 00:17:56,000
我们是串台节目

404
00:17:56,000 --> 00:17:57,000
那说实话

405
00:17:57,000 --> 00:17:59,000
从自弹之唱这边过来的听众呢

406
00:17:59,000 --> 00:18:00,000
很多都是设计师嘛

407
00:18:00,000 --> 00:18:02,000
虽然他们就从来就没有接触到

408
00:18:02,000 --> 00:18:05,000
也不知道拉太和是个什么东西

409
00:18:05,000 --> 00:18:05,000
所以呢

410
00:18:05,000 --> 00:18:08,000
我觉得还是得从头到尾给大家解释一下

411
00:18:08,000 --> 00:18:08,000
然后呢

412
00:18:08,000 --> 00:18:09,000
刚才也说了嘛

413
00:18:09,000 --> 00:18:12,000
因为这个东西挺局限于这个理工科类的嘛

414
00:18:12,000 --> 00:18:14,000
那其他领域的人可能也都不知道

415
00:18:14,000 --> 00:18:17,000
即使是理工科类的朋友们

416
00:18:17,000 --> 00:18:20,000
他们可能就一辈子也就是为了写论文用一下而已

417
00:18:20,000 --> 00:18:22,000
然后之后就再也没用过

418
00:18:22,000 --> 00:18:22,000
对

419
00:18:22,000 --> 00:18:25,000
这个前因后果可能也不是很清楚

420
00:18:25,000 --> 00:18:25,000
对

421
00:18:25,000 --> 00:18:30,000
所以还是要从我们的大师高德纳先生开始说起吧

422
00:18:30,000 --> 00:18:31,000
考古开始

423
00:18:31,000 --> 00:18:33,000
行

424
00:18:33,000 --> 00:18:35,000
那我来吧

425
00:18:35,000 --> 00:18:38,000
我们今天这个 podcast 标题

426
00:18:38,000 --> 00:18:40,000
所谓宗师级程序员

427
00:18:40,000 --> 00:18:41,000
其实指的就是一个人

428
00:18:41,000 --> 00:18:44,000
这个人叫做 Donald E. Knuth

429
00:18:44,000 --> 00:18:46,000
他有一个中文名叫做高德纳

430
00:18:46,000 --> 00:18:48,000
他从 1969 年开始写一本书

431
00:18:48,000 --> 00:18:52,000
这本书叫做 The Art of Computer Programming

432
00:18:52,000 --> 00:18:54,000
这本书的简称是 TAOCP

433
00:18:55,000 --> 00:18:57,000
他到现在应该还没写完

434
00:18:57,000 --> 00:18:59,000
据我所知还没写完

435
00:18:59,000 --> 00:19:01,000
这本书是有中意版的

436
00:19:01,000 --> 00:19:04,000
就是各位有兴趣的话可以可以在网上看一下预览的

437
00:19:04,000 --> 00:19:05,000
有吗

438
00:19:05,000 --> 00:19:06,000
有中意版

439
00:19:06,000 --> 00:19:06,000
我都不知道

440
00:19:06,000 --> 00:19:07,000
对

441
00:19:07,000 --> 00:19:10,000
我在我在中国应该是买了中意版的第一卷这样

442
00:19:10,000 --> 00:19:15,000
然后他在 1969 年的时候开始写这本书

443
00:19:15,000 --> 00:19:18,000
第一卷的排印用的是 monotype 的排子机

444
00:19:18,000 --> 00:19:20,000
就是那个时候是完全机械的排子机

445
00:19:20,000 --> 00:19:21,000
对吧

446
00:19:21,000 --> 00:19:22,000
自动助排机

447
00:19:22,000 --> 00:19:25,000
对一个一个非常硬核的这么一个

448
00:19:25,000 --> 00:19:27,000
就他很他很喜欢 monotype 排子机

449
00:19:27,000 --> 00:19:30,000
然后他是当时在美国的 monotype 的排子机排的

450
00:19:30,000 --> 00:19:32,000
然后他第二卷什么时候写好的呢

451
00:19:32,000 --> 00:19:32,000
是七年

452
00:19:32,000 --> 00:19:34,000
七年之后才写完

453
00:19:34,000 --> 00:19:38,000
七年之后是 1976 年

454
00:19:38,000 --> 00:19:39,000
不对不对

455
00:19:39,000 --> 00:19:40,000
不对

456
00:19:40,000 --> 00:19:44,000
1976 年他是第二卷重排的时候

457
00:19:44,000 --> 00:19:45,000
对啊

458
00:19:45,000 --> 00:19:46,000
OK

459
00:19:46,000 --> 00:19:48,000
那就是第二卷的一个 revision 完成的时候

460
00:19:48,000 --> 00:19:50,000
他不得不转向激光照

461
00:19:50,000 --> 00:19:52,000
不是激光照

462
00:19:52,000 --> 00:19:54,000
就是普通的这个照相照拍机

463
00:19:54,000 --> 00:19:55,000
照相排印机

464
00:19:55,000 --> 00:19:56,000
就是这个排版

465
00:19:56,000 --> 00:20:00,000
但是他拿到了那个叫所谓 galley proof

466
00:20:00,000 --> 00:20:01,000
就是样板的时候

467
00:20:01,000 --> 00:20:04,000
他他大概说了一句话

468
00:20:04,000 --> 00:20:05,000
就是 black

469
00:20:05,000 --> 00:20:08,000
就这么一个感叹词吧

470
00:20:08,000 --> 00:20:10,000
就是觉得我靠这是什么

471
00:20:10,000 --> 00:20:14,000
这句话的翻译叫这什么屎

472
00:20:14,000 --> 00:20:18,000
就是这个哎呀我去这种感觉

473
00:20:18,000 --> 00:20:22,000
然后他非常失望

474
00:20:22,000 --> 00:20:25,000
以至于他做一件只有宗师级的程序员

475
00:20:25,000 --> 00:20:25,000
那么他就说了一句话

476
00:20:25,000 --> 00:20:29,000
我做的事情就是他决定自己开发一套系统来完成排版这件事情

477
00:20:29,000 --> 00:20:32,000
就是 from scratch

478
00:20:32,000 --> 00:20:35,000
然后他首先他发明了一种编程语言

479
00:20:35,000 --> 00:20:37,000
这种编程语言叫 web

480
00:20:37,000 --> 00:20:41,000
就是跟我们那个万维网 web 没有关联

481
00:20:41,000 --> 00:20:44,000
他就叫 web 这种编程语言

482
00:20:44,000 --> 00:20:46,000
然后他用这种编程语言

483
00:20:46,000 --> 00:20:48,000
首先开发了一种字体

484
00:20:48,000 --> 00:20:49,000
这种字体叫 metafont

485
00:20:49,000 --> 00:20:55,000
不他开发了一种用于画字体的系统叫做 metafont

486
00:20:55,000 --> 00:20:59,000
metafont 就是什么什么的什么什么

487
00:20:59,000 --> 00:21:01,000
比如说我叫 metafox 就是 fox 的 fox

488
00:21:01,000 --> 00:21:03,000
然后他这个 metafont 就是 font 的 font

489
00:21:03,000 --> 00:21:07,000
那么 metafont 的用处就是你用一个数学公式

490
00:21:07,000 --> 00:21:09,000
类似于数学公式的方式描述出

491
00:21:09,000 --> 00:21:12,000
比如说一个字母的几个点

492
00:21:12,000 --> 00:21:14,000
它们之间的相对位置

493
00:21:14,000 --> 00:21:17,000
比如说我说 m 这个字母的相对位置是

494
00:21:17,000 --> 00:21:20,000
下面的三个点彼此的距离是一样的

495
00:21:20,000 --> 00:21:23,000
然后上面的两个点跟下面的三个点是怎么相连的

496
00:21:23,000 --> 00:21:24,000
OK

497
00:21:24,000 --> 00:21:25,000
然后 metafont 就是这个字母的相对位置

498
00:21:25,000 --> 00:21:28,000
metafont 可以帮你生成出这个字体的

499
00:21:28,000 --> 00:21:32,000
怎么说点阵化的表示来

500
00:21:32,000 --> 00:21:33,000
这是 metafont

501
00:21:33,000 --> 00:21:36,000
然后他用 web 写了另外一套系统

502
00:21:36,000 --> 00:21:37,000
就叫做 tech

503
00:21:37,000 --> 00:21:41,000
然后这个 tech 的功能呢

504
00:21:41,000 --> 00:21:47,000
就是把你的文章排列出一个可以用于打印的格式来

505
00:21:47,000 --> 00:21:49,000
这个格式叫做 dvi

506
00:21:49,000 --> 00:21:53,000
然后他用自己发明的这套工具来排了自己的书

507
00:21:53,000 --> 00:21:54,000
大概就是这么一个

508
00:21:54,000 --> 00:21:55,000
这个格式

509
00:21:55,000 --> 00:21:57,000
听起来好像没有那么怎么样

510
00:21:57,000 --> 00:21:59,000
但是在我们看来就是一个武学宗师

511
00:21:59,000 --> 00:22:01,000
开创了一个门派

512
00:22:01,000 --> 00:22:03,000
然后专门拿来做一件事情

513
00:22:03,000 --> 00:22:03,000
这么一个级别

514
00:22:03,000 --> 00:22:07,000
然后他这套系统呢就从此开源了

515
00:22:07,000 --> 00:22:09,000
然后广为流传

516
00:22:09,000 --> 00:22:10,000
一直活跃到今天

517
00:22:10,000 --> 00:22:13,000
并且这中间有一个比较推波助澜的事情

518
00:22:13,000 --> 00:22:15,000
就是美国数学学会 ams

519
00:22:15,000 --> 00:22:16,000
等于说

520
00:22:16,000 --> 00:22:18,000
亲定了 tech

521
00:22:18,000 --> 00:22:21,000
就是他们的排数学公式的

522
00:22:21,000 --> 00:22:22,000
这么一个工具

523
00:22:22,000 --> 00:22:24,000
所以导致基本上整个数学界

524
00:22:24,000 --> 00:22:26,000
就采用了 tech 这套东西

525
00:22:26,000 --> 00:22:30,000
那数学我们知道实际上是条条大路通向数学

526
00:22:30,000 --> 00:22:33,000
所以反过来导致整个科学界

527
00:22:33,000 --> 00:22:36,000
基本上在你在使用这个公式的时候

528
00:22:36,000 --> 00:22:37,000
都一定会碰到 tech

529
00:22:37,000 --> 00:22:41,000
然后大概现在的状况就是这样了

530
00:22:41,000 --> 00:22:44,000
就是 tech 仍旧是一个被维护的这么一个程序

531
00:22:44,000 --> 00:22:46,000
当然他已经有点过时了

532
00:22:46,000 --> 00:22:47,000
这个我们一会会提到

533
00:22:47,000 --> 00:22:49,000
但是直到现在

534
00:22:49,000 --> 00:22:53,000
他都是在一个稳定维护并且发行中的这么一个程序

535
00:22:53,000 --> 00:22:54,000
这个程序的

536
00:22:54,000 --> 00:22:54,000
这个程序的

537
00:22:54,000 --> 00:22:57,000
历史可以追溯到上个世纪的 70 年代

538
00:22:57,000 --> 00:22:59,000
但是就是这么一个这么一个过程

539
00:22:59,000 --> 00:23:01,000
然后呃

540
00:23:01,000 --> 00:23:04,000
有一个就是我在 tip 上写的那篇文章

541
00:23:04,000 --> 00:23:05,000
computer modern

542
00:23:05,000 --> 00:23:06,000
大家如果去看了的话

543
00:23:06,000 --> 00:23:09,000
会发现那个字体可能有点眼熟

544
00:23:09,000 --> 00:23:13,000
因为如果你 ever 看过一篇比较正式的论文的话

545
00:23:13,000 --> 00:23:15,000
那么他有很大的可能性

546
00:23:15,000 --> 00:23:17,000
现在我觉得可能没没那么流行

547
00:23:17,000 --> 00:23:19,000
但是至少在比如说十年前或者五年前

548
00:23:19,000 --> 00:23:21,000
你去看任何一篇论文

549
00:23:21,000 --> 00:23:24,000
他有可能有八成的概率是用 computer modern 拍的

550
00:23:24,000 --> 00:23:25,000
所以当你看到一篇文论文

551
00:23:25,000 --> 00:23:28,000
他是用 computer modern 来排的话

552
00:23:28,000 --> 00:23:30,000
那他有很大很大的概率就是用 artech 来写

553
00:23:30,000 --> 00:23:32,000
大概是这么一个状况

554
00:23:32,000 --> 00:23:36,000
我跟大家补充一下就是这个时间点哈

555
00:23:36,000 --> 00:23:40,000
首先高德纳先生他现年 83 岁

556
00:23:40,000 --> 00:23:43,000
所以大家首先要看想到这是一位老先生啊

557
00:23:43,000 --> 00:23:44,000
而且还健在

558
00:23:44,000 --> 00:23:45,000
对嗯

559
00:23:45,000 --> 00:23:49,000
他还接着写他能他那套那个计算机程序艺术吗

560
00:23:49,000 --> 00:23:53,000
他本来想是说一共出七卷是吧

561
00:23:53,000 --> 00:23:53,000
结果后来他还接着写了一套计算机程序艺术嘛他本来想是说一共出七卷是吧

562
00:23:53,000 --> 00:23:56,000
结果后来他现在写第四卷开始开始写分册了

563
00:23:56,000 --> 00:23:59,000
所以不知道他一共要出多少本

564
00:23:59,000 --> 00:24:00,000
然后这个时间点呢

565
00:24:00,000 --> 00:24:06,000
如果是我们自然自信上的听众的可能知道我在节目里面讲过很多次就是我们在做印刷的时候

566
00:24:06,000 --> 00:24:08,000
整个技术有三大技术革新嘛

567
00:24:08,000 --> 00:24:12,000
就是从签字到照牌到现在的桌面出版

568
00:24:12,000 --> 00:24:16,000
那么这个事情发生在美国的六七十年代

569
00:24:16,000 --> 00:24:22,000
其实呢就是当时从这个金属活字到这个照相排版转变的这样一个过程

570
00:24:22,000 --> 00:24:23,000
高老师

571
00:24:23,000 --> 00:24:26,000
高先生他当时出卷出到第三版啊

572
00:24:26,000 --> 00:24:28,000
是 1973 年

573
00:24:28,000 --> 00:24:33,000
那时候那个出版社就已经把那个自动注牌机的蒙娜机就已经卖掉了

574
00:24:33,000 --> 00:24:39,000
所以出版社他自己已经没有这个蒙娜就签字的做这个自动注牌机的东西

575
00:24:39,000 --> 00:24:42,000
所以当时他的七五年的第一版再版的时候啊

576
00:24:42,000 --> 00:24:46,000
特地把这个书版送到欧洲的

577
00:24:46,000 --> 00:24:48,000
因为当时欧洲还有老的这个机器可以用

578
00:24:48,000 --> 00:24:52,000
所以特地到欧洲去重新排来给给这个高德纳

579
00:24:52,000 --> 00:24:53,000
因为当时欧洲还有老的这个机器可以用

580
00:24:53,000 --> 00:24:57,000
然后等到 76 年要等第二卷再重版的时候实在是没有

581
00:24:57,000 --> 00:24:59,000
这个花费太大了

582
00:24:59,000 --> 00:25:02,000
从欧洲再导一次的话这个成本太高

583
00:25:02,000 --> 00:25:04,000
所以呢只好用这个照牌机给他排

584
00:25:04,000 --> 00:25:08,000
然后老先生当时就看哇这都什么鬼

585
00:25:08,000 --> 00:25:12,000
所以他就重新自己做了一个 Tech 这个排版软件

586
00:25:12,000 --> 00:25:16,000
那么这个 Tech 最初的这个发布的时间点呢

587
00:25:16,000 --> 00:25:18,000
是 1978 年

588
00:25:18,000 --> 00:25:20,000
也就是 43 年前

589
00:25:20,000 --> 00:25:22,000
43 年前高德纳老先生还是一个

590
00:25:22,000 --> 00:25:22,000
四十三年前的高德纳老先生还是一个

591
00:25:22,000 --> 00:25:23,000
38 岁的

592
00:25:23,000 --> 00:25:25,000
38 岁的

593
00:25:25,000 --> 00:25:26,000
小伙子

594
00:25:26,000 --> 00:25:27,000
对啊

595
00:25:27,000 --> 00:25:28,000
壮年啊

596
00:25:28,000 --> 00:25:29,000
就跟你以前差不多嘛

597
00:25:29,000 --> 00:25:30,000
我好老

598
00:25:30,000 --> 00:25:34,000
不逃事实该是写你自己的出版系统了

599
00:25:34,000 --> 00:25:35,000
对说的对

600
00:25:35,000 --> 00:25:42,000
我要在我要在怎么说 VR 里面弄一个属于未来的这么一个排版系统

601
00:25:42,000 --> 00:25:44,000
我今天把话搁这儿了

602
00:25:44,000 --> 00:25:48,000
所以等到现在就是到后之后我们也会讨论嘛

603
00:25:48,000 --> 00:25:50,000
可能大家现在站到这个高度了

604
00:25:50,000 --> 00:25:52,000
就讲哎呀为什么还连什么 UniCode 不做了吗

605
00:25:52,000 --> 00:25:54,000
因为这个 UniCode 是什么年代的事情

606
00:25:54,000 --> 00:25:55,000
就是他当时写 Tech 的事

607
00:25:55,000 --> 00:26:00,000
1978 年那时候 UniCode 还还还在凉台里面还没出来呢

608
00:26:00,000 --> 00:26:04,000
就是那个时候 ASCII 都不是一个比较广为使用的 standard

609
00:26:04,000 --> 00:26:06,000
对所以呢

610
00:26:06,000 --> 00:26:08,000
78 年那个 Tech 诞生

611
00:26:08,000 --> 00:26:12,000
然后高德纳在 1990 年的 9 月份

612
00:26:12,000 --> 00:26:17,000
他就宣布说这个 Tech 发到 3.1 版本以后就不会有重大更新了

613
00:26:17,000 --> 00:26:18,000
除了修 bug

614
00:26:18,000 --> 00:26:22,000
他其实就是这个项目其实就已经打句号了

615
00:26:22,000 --> 00:26:24,000
刚好是 3.1 版本

616
00:26:24,000 --> 00:26:28,000
我有一个疑问就是他 3.1 版本之前是 1.02.0 这样的吗

617
00:26:28,000 --> 00:26:30,000
还是他一上来就是

618
00:26:30,000 --> 00:26:32,000
应该是的

619
00:26:32,000 --> 00:26:36,000
因为这里有个梗就是 Tech 以及跟 Tech 相关的很多软件

620
00:26:36,000 --> 00:26:39,000
它的版本号都是一个

621
00:26:39,000 --> 00:26:43,000
这个叫什么超越数还是叫什么无理数

622
00:26:43,000 --> 00:26:46,000
但是它是比如说 Tech 的版本号是 Pi

623
00:26:46,000 --> 00:26:49,000
然后 MetaFonts 的版本号是 1

624
00:26:49,000 --> 00:26:51,000
就是那个自然对数的 2 点几的那个

625
00:26:51,000 --> 00:26:53,000
自然对数的底

626
00:26:53,000 --> 00:26:54,000
还有一个什么软件

627
00:26:54,000 --> 00:26:57,000
它的版本号是 0.99999999

628
00:26:57,000 --> 00:26:59,000
就是 1 嘛

629
00:26:59,000 --> 00:27:01,000
它无限接近 1

630
00:27:01,000 --> 00:27:02,000
大概是这样

631
00:27:02,000 --> 00:27:05,000
就高德纳他是一个很喜欢这种各种梗的人

632
00:27:05,000 --> 00:27:06,000
他是一个很 geek 的人

633
00:27:06,000 --> 00:27:07,000
我觉得

634
00:27:07,000 --> 00:27:08,000
他是

635
00:27:08,000 --> 00:27:09,000
对

636
00:27:09,000 --> 00:27:10,000
是那个时代的

637
00:27:10,000 --> 00:27:12,000
那个时代的风格的 geek

638
00:27:12,000 --> 00:27:14,000
就是他非常严谨

639
00:27:14,000 --> 00:27:15,000
然后又特别的

640
00:27:15,000 --> 00:27:18,000
还是相对来说比较比我们这个时代的 geek 要严肃的多了

641
00:27:18,000 --> 00:27:20,000
但是他的内心里面认真是一个 geek

642
00:27:20,000 --> 00:27:22,000
比如说他

643
00:27:22,000 --> 00:27:26,000
他的 TLCP 如果你在里面找到了一个 bug 的话

644
00:27:26,000 --> 00:27:28,000
他会给你寄一张支票

645
00:27:28,000 --> 00:27:31,000
这个支票的金额是 3.14 美元吧

646
00:27:31,000 --> 00:27:32,000
好像还是还是多少钱

647
00:27:32,000 --> 00:27:33,000
不是不是

648
00:27:33,000 --> 00:27:36,000
那个支票是多少钱来着

649
00:27:36,000 --> 00:27:38,000
反正是 2 的正整数

650
00:27:38,000 --> 00:27:39,000
不是反正是 2 的倍数

651
00:27:39,000 --> 00:27:40,000
就是是吗

652
00:27:40,000 --> 00:27:43,000
2 的多少次方之类的

653
00:27:43,000 --> 00:27:44,000
我记得好像是

654
00:27:44,000 --> 00:27:47,000
跟本台的捐款类型是一样的

655
00:27:47,000 --> 00:27:50,000
对其实刚刚武涛说到那个 Tech 做版本号是 1 的

656
00:27:50,000 --> 00:27:52,000
AMAZONMに3500 万要下的

657
00:27:52,000 --> 00:27:53,000
我看在 80%的香港ины

658
00:27:53,000 --> 00:27:54,000
让省得了香港人的政治工作

659
00:27:54,000 --> 00:27:55,000
可能来回 mau

660
00:27:55,000 --> 00:27:57,000
Arbeit itself

661
00:27:57,000 --> 00:27:58,000
这个叫什么

662
00:27:58,000 --> 00:28:00,000
因为武涛分享过

663
00:28:00,000 --> 00:28:02,000
就是说 M 玩没有 rebrand

664
00:28:02,000 --> 00:28:03,000
B Antonio

665
00:28:03,000 --> 00:28:10,000
cosm Mic

666
00:28:10,000 --> 00:28:12,000
然后他却跟一个企业的

667
00:28:12,000 --> 00:28:15,000
verdun

668
00:28:15,000 --> 00:28:18,000
做一个

669
00:28:18,000 --> 00:28:18,000
cada

670
00:28:18,000 --> 00:28:20,000
L 죽尽生

671
00:28:20,000 --> 00:28:20,000
osta

672
00:28:20,000 --> 00:28:22,000
非常流行

673
00:28:22,000 --> 00:28:24,000
曾经也是跟 monotype 绑定的

674
00:28:24,000 --> 00:28:25,000
这样一套字体

675
00:28:25,000 --> 00:28:27,000
大家也可以在过去

676
00:28:27,000 --> 00:28:29,000
以及在今天

677
00:28:29,000 --> 00:28:30,000
甚至在将来的很多出版物上

678
00:28:30,000 --> 00:28:32,000
都会看到它的影子

679
00:28:32,000 --> 00:28:33,000
我打叉问一个问题

680
00:28:33,000 --> 00:28:36,000
这个叫 computer modern 的字体

681
00:28:36,000 --> 00:28:38,000
它看起来一点都不 modern

682
00:28:38,000 --> 00:28:40,000
它的 modern 指的是一种风格

683
00:28:40,000 --> 00:28:42,000
这种风格叫 modern 风格

684
00:28:42,000 --> 00:28:44,000
所谓的在字体中的现代体

685
00:28:44,000 --> 00:28:45,000
它 modern 的时候

686
00:28:45,000 --> 00:28:46,000
是我们还没有出生的时代

687
00:28:46,000 --> 00:28:47,000
对对对

688
00:28:47,000 --> 00:28:48,000
它所谓的 modern

689
00:28:48,000 --> 00:28:50,000
是那种时尚杂志的 modern

690
00:28:50,000 --> 00:28:52,000
computer modern 的一个直系

691
00:28:52,000 --> 00:28:53,000
情属实际上是 died out

692
00:28:53,000 --> 00:28:53,000
狄多

693
00:28:53,000 --> 00:28:54,000
对对对

694
00:28:54,000 --> 00:28:55,000
狄多字体是一个

695
00:28:55,000 --> 00:28:58,000
在 18 世纪吧

696
00:28:58,000 --> 00:28:59,000
出现的这么一个字体

697
00:28:59,000 --> 00:29:00,000
然后那个时代

698
00:29:00,000 --> 00:29:02,000
人们会认为说

699
00:29:02,000 --> 00:29:03,000
我们现在处于现代

700
00:29:03,000 --> 00:29:05,000
在那之前是古代

701
00:29:05,000 --> 00:29:05,000
实际上也是这样的

702
00:29:05,000 --> 00:29:07,000
就是从大概从 19 世纪初

703
00:29:07,000 --> 00:29:09,000
人类进入了这个

704
00:29:09,000 --> 00:29:10,000
所谓什么大爆发

705
00:29:10,000 --> 00:29:11,000
反正有一个英语

706
00:29:11,000 --> 00:29:12,000
有一个词叫 great

707
00:29:12,000 --> 00:29:14,000
什么什么的这个一个时代

708
00:29:14,000 --> 00:29:17,000
然后我们现在还处在这个时代中

709
00:29:17,000 --> 00:29:18,000
这个时代可以视为

710
00:29:18,000 --> 00:29:19,000
现代的开端

711
00:29:19,000 --> 00:29:20,000
所以你叫它

712
00:29:20,000 --> 00:29:21,000
modern 其实也蛮正常

713
00:29:21,000 --> 00:29:23,000
其实我们自谈自唱

714
00:29:23,000 --> 00:29:25,000
在第 137 期

715
00:29:25,000 --> 00:29:27,000
讲过本顿父子的世纪传奇

716
00:29:27,000 --> 00:29:28,000
其实在这里面

717
00:29:28,000 --> 00:29:29,000
我们就讲述了

718
00:29:29,000 --> 00:29:30,000
当时的美国的

719
00:29:30,000 --> 00:29:32,000
其实他本顿父子是工程师

720
00:29:32,000 --> 00:29:35,000
他们制作的这个 century 字体

721
00:29:35,000 --> 00:29:36,000
也就是现在这个

722
00:29:36,000 --> 00:29:39,000
computer modern 的直系的

723
00:29:39,000 --> 00:29:40,000
老祖宗

724
00:29:40,000 --> 00:29:41,000
模板

725
00:29:41,000 --> 00:29:43,000
那如果上述到

726
00:29:43,000 --> 00:29:44,000
我们说是这整个

727
00:29:44,000 --> 00:29:45,000
对于字体来讲

728
00:29:45,000 --> 00:29:47,000
在所谓的现代底

729
00:29:47,000 --> 00:29:48,000
那就要追溯到

730
00:29:48,000 --> 00:29:50,000
字体的什么

731
00:29:50,000 --> 00:29:51,000
就是说

732
00:29:51,000 --> 00:29:52,000
我们讲到伯多尼

733
00:29:52,000 --> 00:29:53,000
然后要讲到狄多

734
00:29:53,000 --> 00:29:55,000
那么大家也可以翻到

735
00:29:55,000 --> 00:29:56,000
我们自弹自唱的

736
00:29:56,000 --> 00:29:58,000
我们在第 125 期讲过狄多

737
00:29:58,000 --> 00:30:01,000
然后在第 131 期讲过伯多尼

738
00:30:01,000 --> 00:30:03,000
大家可以回去听一下

739
00:30:03,000 --> 00:30:05,000
就知道就是当时的所谓的

740
00:30:05,000 --> 00:30:06,000
他当时的现代体

741
00:30:06,000 --> 00:30:08,000
是一个什么样的一个东西

742
00:30:08,000 --> 00:30:09,000
瑞尔

743
00:30:09,000 --> 00:30:11,000
你说为什么他们可以一下子就说起来

744
00:30:11,000 --> 00:30:13,000
我们之前哪一期讲了什么

745
00:30:13,000 --> 00:30:15,000
为什么咱们就做不到

746
00:30:15,000 --> 00:30:17,000
好问题

747
00:30:17,000 --> 00:30:18,000
你们是要打印吗

748
00:30:18,000 --> 00:30:19,000
好问题

749
00:30:19,000 --> 00:30:20,000
好问题

750
00:30:20,000 --> 00:30:22,000
我们就打印一个列表

751
00:30:22,000 --> 00:30:23,000
就你们是怎么做到的

752
00:30:23,000 --> 00:30:25,000
你们身边有一个小秘书吗

753
00:30:25,000 --> 00:30:26,000
还是或者你们

754
00:30:26,000 --> 00:30:28,000
就是把所有的每一期讲了什么

755
00:30:28,000 --> 00:30:31,000
全都随时随地摆在手边

756
00:30:31,000 --> 00:30:33,000
我们只是有个列表而已

757
00:30:33,000 --> 00:30:35,000
我们做了 140 多期

758
00:30:35,000 --> 00:30:37,000
然后我们一期就一个主题

759
00:30:37,000 --> 00:30:39,000
那一期我们

760
00:30:39,000 --> 00:30:40,000
我们花了一个半小时

761
00:30:40,000 --> 00:30:41,000
就讲本顿父子

762
00:30:41,000 --> 00:30:44,000
所以一搜寸还是可以搜到的

763
00:30:44,000 --> 00:30:46,000
武大我给你出个主页

764
00:30:46,000 --> 00:30:47,000
你可以把我们首页打开

765
00:30:47,000 --> 00:30:49,000
我们也有个列表

766
00:30:49,000 --> 00:30:51,000
你用像素字牌的

767
00:30:51,000 --> 00:30:52,000
我看不懂

768
00:30:52,000 --> 00:30:54,000
这太难读了

769
00:30:58,000 --> 00:31:03,000
所以你们找到高德纳老先生发的多少钱了吗

770
00:31:03,000 --> 00:31:04,000
刚才谁在查

771
00:31:04,000 --> 00:31:06,000
我以为前阵也是查了

772
00:31:06,000 --> 00:31:07,000
没有

773
00:31:07,000 --> 00:31:09,000
我来查了

774
00:31:09,000 --> 00:31:14,000
Knotreward check

775
00:31:14,000 --> 00:31:18,000
他每个漏洞的奖金是 2 块 5 毛 6

776
00:31:18,000 --> 00:31:22,000
因为这个 2 块 5 毛 6 是 16 进制的 100 美分

777
00:31:22,000 --> 00:31:23,000
就是第一个

778
00:31:23,000 --> 00:31:24,000
对

779
00:31:24,000 --> 00:31:29,000
然后他有些人打到的支票上面写的是 0 x$1.0

780
00:31:29,000 --> 00:31:34,000
然后是每次就是你下一个人得到这个支票的人

781
00:31:34,000 --> 00:31:36,000
就会在那个数字上乘以 2

782
00:31:36,000 --> 00:31:38,000
直到知道现在是多少

783
00:31:38,000 --> 00:31:40,000
327.68

784
00:31:40,000 --> 00:31:43,000
但是也才 300 多美金

785
00:31:43,000 --> 00:31:46,000
高德纳也其实也不算很多钱了

786
00:31:46,000 --> 00:31:48,000
不是你要知道这个数字上

787
00:31:48,000 --> 00:31:50,000
这个是每次乘以 1 这个是很恐怖的故事

788
00:31:50,000 --> 00:31:53,000
你们还记得那个印度棋盘的故事吗

789
00:31:53,000 --> 00:31:54,000
这个很恐怖的

790
00:31:54,000 --> 00:31:58,000
2005 年的时候总金额就已经超过 2 万美元了

791
00:31:58,000 --> 00:32:00,000
所以高德纳就疯掉了

792
00:32:00,000 --> 00:32:02,000
他就是说我不更新了

793
00:32:02,000 --> 00:32:03,000
就是非常恐怖的

794
00:32:03,000 --> 00:32:06,000
就是逼迫他自己少写 bug 的一个驱动力

795
00:32:06,000 --> 00:32:07,000
你知道吧

796
00:32:07,000 --> 00:32:08,000
为了防止破产

797
00:32:08,000 --> 00:32:11,000
要尽量少的出现 bug

798
00:32:11,000 --> 00:32:14,000
因为下一个 bug 随时肯定让你倾家荡产

799
00:32:14,000 --> 00:32:16,000
不过刚才也说了

800
00:32:16,000 --> 00:32:17,000
他的版本号接近于派

801
00:32:17,000 --> 00:32:18,000
那么其实

802
00:32:18,000 --> 00:32:20,000
一个非常新的一个时间点

803
00:32:20,000 --> 00:32:22,000
就是在今年的 2 月份

804
00:32:22,000 --> 00:32:24,000
2021 年的 2 月份

805
00:32:24,000 --> 00:32:25,000
刚更新了一个版本

806
00:32:25,000 --> 00:32:27,000
然后这个版本号是

807
00:32:27,000 --> 00:32:31,000
3.141592653 版

808
00:32:31,000 --> 00:32:34,000
就已经到 2653 了

809
00:32:34,000 --> 00:32:35,000
其实也还好

810
00:32:35,000 --> 00:32:36,000
你想一下

811
00:32:36,000 --> 00:32:38,000
其实也很容易背的下来

812
00:32:38,000 --> 00:32:39,000
也没更新几版

813
00:32:39,000 --> 00:32:40,000
对啊

814
00:32:40,000 --> 00:32:41,000
你能背到几位

815
00:32:41,000 --> 00:32:45,000
15926535897982462643

816
00:32:45,000 --> 00:32:46,000
以前是可以的

817
00:32:46,000 --> 00:32:47,000
现在不记得了

818
00:32:47,000 --> 00:32:50,000
大概我能背到 50 位还是多少位

819
00:32:50,000 --> 00:32:52,000
Rail 能背到 100 位吧

820
00:32:52,000 --> 00:32:56,000
所以我想确认一下

821
00:32:56,000 --> 00:32:58,000
到 2653 的版本

822
00:32:58,000 --> 00:33:01,000
实际上就是指的是 3.9 版本是吧

823
00:33:01,000 --> 00:33:02,000
你数位数的

824
00:33:02,000 --> 00:33:04,000
就是数它后面有几位的

825
00:33:04,000 --> 00:33:07,000
但是没有很多大的修改的

826
00:33:07,000 --> 00:33:08,000
主要是那些 bug

827
00:33:08,000 --> 00:33:09,000
修 bug 而已

828
00:33:09,000 --> 00:33:11,000
没有重大的功能更新的

829
00:33:11,000 --> 00:33:12,000
其实就是

830
00:33:12,000 --> 00:33:13,000
对

831
00:33:13,000 --> 00:33:15,000
TAC 本身的内核实际上已经比较老了

832
00:33:15,000 --> 00:33:16,000
就是

833
00:33:16,000 --> 00:33:20,000
而且它本身并不是一个特别复杂的系统

834
00:33:20,000 --> 00:33:23,000
就是你把它底层的那个 TAC engine

835
00:33:23,000 --> 00:33:24,000
可以用其他方式来实现

836
00:33:24,000 --> 00:33:26,000
现在实际上比较流行的是

837
00:33:26,000 --> 00:33:27,000
一个叫 PDF TAC

838
00:33:27,000 --> 00:33:30,000
另外一个叫 Z-TAC 应该是

839
00:33:30,000 --> 00:33:32,000
这两个引擎现在是用的比较广泛的

840
00:33:32,000 --> 00:33:37,000
PDF TAC 主要是做那个标点悬挂比较好

841
00:33:37,000 --> 00:33:40,000
然后 PDF TAC 还支持就是直接生成 PDF

842
00:33:40,000 --> 00:33:43,000
而不是要先经过那个 DVI 内部

843
00:33:43,000 --> 00:33:45,000
就是有各种前缀的 TAC

844
00:33:45,000 --> 00:33:47,000
TAC 和他们之间到底是什么关系

845
00:33:47,000 --> 00:33:49,000
其实还挺复杂的这个事

846
00:33:49,000 --> 00:33:52,000
这个你还是要跟大家讲一讲的到后面

847
00:33:52,000 --> 00:33:54,000
TAC 有点像有点像 UNIX

848
00:33:54,000 --> 00:33:57,000
然后对特别像坦克

849
00:33:57,000 --> 00:33:59,000
以 TAC 为源流

850
00:33:59,000 --> 00:34:02,000
衍生了很多其他的发行版

851
00:34:02,000 --> 00:34:03,000
其实用最为人所知的

852
00:34:03,000 --> 00:34:06,000
或者说我们现在最一提到 TAC

853
00:34:06,000 --> 00:34:09,000
或者我们现在一提到这套排版工具

854
00:34:09,000 --> 00:34:11,000
不会是说我用 TAC 写了什么

855
00:34:11,000 --> 00:34:14,000
而是会说这个东西是用 LATAC 写的

856
00:34:14,000 --> 00:34:17,000
就是因为 LATAC 是 TAC 的最知名

857
00:34:17,000 --> 00:34:19,000
也是最早的一个扩展手段

858
00:34:19,000 --> 00:34:20,000
就是 TAC 有点像一个

859
00:34:20,000 --> 00:34:21,000
它有点像 Python

860
00:34:21,000 --> 00:34:23,000
它有点像一种编程语言

861
00:34:23,000 --> 00:34:24,000
然后一个人

862
00:34:24,000 --> 00:34:28,000
他的名字叫做 Leslie Lamport

863
00:34:28,000 --> 00:34:30,000
他也是一个老先生

864
00:34:30,000 --> 00:34:31,000
今年 80 岁

865
00:34:31,000 --> 00:34:33,000
然后他给 TAC 做了一套扩展

866
00:34:33,000 --> 00:34:37,000
就是他用 TAC 写了很多很多东西

867
00:34:37,000 --> 00:34:40,000
比如说你 TAC 打个比方

868
00:34:40,000 --> 00:34:42,000
这个 TAC 原来只能设字体和字号

869
00:34:42,000 --> 00:34:44,000
然后他用 TAC 做了一个扩展手段

870
00:34:44,000 --> 00:34:49,000
可以让他用旧的命令生成了一个新的命令

871
00:34:49,000 --> 00:34:50,000
然后这个新的命令

872
00:34:50,000 --> 00:34:52,000
你可以说比如说我现在要开始写一章

873
00:34:52,000 --> 00:34:54,000
然后我现在要开始写一个新的结

874
00:34:54,000 --> 00:35:00,000
然后这个章和结应该是怎么样被 decorate 之类的

875
00:35:00,000 --> 00:35:01,000
然后他最重要的贡献之一

876
00:35:01,000 --> 00:35:05,000
就是他在这个 LATAC 里面做了一个包管理系统

877
00:35:05,000 --> 00:35:10,000
这个是等于说是一个革命性的这么一个创造

878
00:35:10,000 --> 00:35:13,000
然后有了这套包管理系统之后

879
00:35:13,000 --> 00:35:15,000
就有很多人创造了很多包

880
00:35:15,000 --> 00:35:16,000
然后你用 LATAC

881
00:35:16,000 --> 00:35:19,000
你就可以使用别人写的这些包

882
00:35:19,000 --> 00:35:24,000
来扩展你的来实现你的这个排版的一个目的

883
00:35:24,000 --> 00:35:27,000
这个就是 LATAC

884
00:35:27,000 --> 00:35:29,000
所以这里本质上 TAC

885
00:35:29,000 --> 00:35:32,000
TAC 其实只是一个非常底层的非常这种

886
00:35:32,000 --> 00:35:33,000
就是它是个内核

887
00:35:33,000 --> 00:35:35,000
它是汇编语言的一个东西

888
00:35:35,000 --> 00:35:40,000
但是它并不对它并不就是如果你直接去用它来排版

889
00:35:40,000 --> 00:35:41,000
其实是非常痛苦的

890
00:35:41,000 --> 00:35:43,000
因为就是各种指令都很远远的

891
00:35:43,000 --> 00:35:46,000
所以这个 LATAC 它其实做的是说

892
00:35:46,000 --> 00:35:48,000
我在上面打包做了一些这个抽象

893
00:35:48,000 --> 00:35:49,000
对吧

894
00:35:49,000 --> 00:35:50,000
你看有结构了对吧

895
00:35:50,000 --> 00:35:54,000
然后就是开始出现所谓的这个形式和这个内容

896
00:35:54,000 --> 00:35:56,000
有一点点的这个分离的感觉

897
00:35:56,000 --> 00:35:59,000
然后你可以引用的这个包管理其实是模块化了嘛

898
00:35:59,000 --> 00:36:03,000
让大家能够更好的在上面去做进一步的这个扩展

899
00:36:03,000 --> 00:36:06,000
就他们的语义就是说其实 TAC 就是基基础的排版引擎嘛

900
00:36:06,000 --> 00:36:08,000
然后他们是叫红包是吧

901
00:36:08,000 --> 00:36:10,000
就那个 macro package 是吧

902
00:36:10,000 --> 00:36:11,000
红包吗

903
00:36:11,000 --> 00:36:12,000
中文叫红包吗

904
00:36:12,000 --> 00:36:13,000
听起来怎么这么好

905
00:36:13,000 --> 00:36:14,000
不喜庆

906
00:36:14,000 --> 00:36:15,000
肯定是啊

907
00:36:15,000 --> 00:36:16,000
就红包啊

908
00:36:16,000 --> 00:36:17,000
不然台南叫什么红

909
00:36:17,000 --> 00:36:21,000
这个词就是随着 macrosoft 的办公软件

910
00:36:21,000 --> 00:36:24,000
基本上是在 90 年来在中文世界就铺开了

911
00:36:24,000 --> 00:36:26,000
这个玩意就叫红啊

912
00:36:26,000 --> 00:36:28,000
台湾叫聚集嘛

913
00:36:28,000 --> 00:36:31,000
聚集可能听起来还比较好奇怪

914
00:36:31,000 --> 00:36:35,000
比较好一点的是红这个词已经被传开了吧

915
00:36:38,000 --> 00:36:41,000
我们是不是重点要跟大家讲一下 TAC 的一些特点

916
00:36:41,000 --> 00:36:42,000
好

917
00:36:42,000 --> 00:36:44,000
但是 TAC 有什么特点

918
00:36:44,000 --> 00:36:45,000
难用

919
00:36:45,000 --> 00:36:47,000
最大特点就是免费开源啊

920
00:36:47,000 --> 00:36:48,000
这最重要的呀

921
00:36:48,000 --> 00:36:50,000
说的也是

922
00:36:50,000 --> 00:36:52,000
我前两天在做功课的时候搜到了一篇

923
00:36:52,000 --> 00:36:54,000
一个奇人写了一篇奇文

924
00:36:54,000 --> 00:36:58,000
然后我觉得还是可以在这里念一下的

925
00:36:58,000 --> 00:36:59,000
就是他

926
00:36:59,000 --> 00:37:00,000
那个死恶精病

927
00:37:00,000 --> 00:37:02,000
隶属了 TAC 的种种弊端

928
00:37:02,000 --> 00:37:04,000
然后其中有一段是这样的

929
00:37:04,000 --> 00:37:05,000
我来念一下

930
00:37:05,000 --> 00:37:06,000
你说中文啊

931
00:37:06,000 --> 00:37:07,000
好我来翻译一下

932
00:37:07,000 --> 00:37:10,000
他说因为 TAC 是免费的

933
00:37:10,000 --> 00:37:11,000
所以他限制了

934
00:37:11,000 --> 00:37:16,000
限制了与其竞争的系统和和这个想法发展

935
00:37:16,000 --> 00:37:18,000
如果 TAC 没有被研究出来

936
00:37:18,000 --> 00:37:22,000
并且没有被就是免费的让人使用

937
00:37:22,000 --> 00:37:26,000
那么能够保持这个数学公式的 structure

938
00:37:26,000 --> 00:37:28,000
结构的这些替代的方案

939
00:37:28,000 --> 00:37:30,000
比如说 MathML

940
00:37:30,000 --> 00:37:33,000
这个我们一会儿提到叫 MathMarkup Language

941
00:37:33,000 --> 00:37:34,000
还有 MathMatic

942
00:37:34,000 --> 00:37:36,000
就会比较早的被开发出来

943
00:37:36,000 --> 00:37:39,000
并且也有可能就是会更为广泛的使用

944
00:37:39,000 --> 00:37:40,000
就是他言下之意

945
00:37:40,000 --> 00:37:46,000
Latex 是一个 TAC 是一个比较差的这么一套工具

946
00:37:46,000 --> 00:37:47,000
但是因为它免费

947
00:37:47,000 --> 00:37:48,000
大家都用了

948
00:37:48,000 --> 00:37:49,000
所以大家就不思进取了

949
00:37:49,000 --> 00:37:50,000
是吗

950
00:37:50,000 --> 00:37:53,000
他的意思是接下来他他紧接就说了类似有的话

951
00:37:53,000 --> 00:37:55,000
他说 Free Software

952
00:37:55,000 --> 00:37:57,000
就像就像一种病毒

953
00:37:57,000 --> 00:38:06,000
然后 Free Systems 有这个能力可以去使得任何其他的 protocol 协议或者是设计

954
00:38:06,000 --> 00:38:09,000
包括那些比较好的协议和设计

955
00:38:09,000 --> 00:38:15,000
他有这个让他们全军覆没的这样一种潜力

956
00:38:15,000 --> 00:38:18,000
听起来很像比尔盖茨当年对自由软件的自责

957
00:38:18,000 --> 00:38:19,000
对 Worse is better

958
00:38:19,000 --> 00:38:22,000
然后他说其中的一个例子就是

959
00:38:22,000 --> 00:38:24,000
The various Unix systems

960
00:38:24,000 --> 00:38:26,000
就是各种各样的 Unix 系统

961
00:38:26,000 --> 00:38:29,000
以及他们所对应的协议

962
00:38:29,000 --> 00:38:32,000
然后他说这这些系统和协议

963
00:38:32,000 --> 00:38:36,000
Has done huge irreversible damage to society

964
00:38:36,000 --> 00:38:39,000
他说这些东西对整个社会产生了不足的影响

965
00:38:39,000 --> 00:38:40,000
这些东西对整个社会产生了不足的影响

966
00:38:40,000 --> 00:38:41,000
就是很可逆转的巨大伤害

967
00:38:41,000 --> 00:38:45,000
就是 Worse is better

968
00:38:45,000 --> 00:38:51,000
这可能是我们今天或者我这过去 20 年里面听到的

969
00:38:51,000 --> 00:38:54,000
对于自由软件的最大的一次

970
00:38:54,000 --> 00:38:58,000
最最最严苛的一次指控

971
00:38:58,000 --> 00:39:00,000
我以前没有想过这件事情

972
00:39:00,000 --> 00:39:02,000
但是如果你说他

973
00:39:02,000 --> 00:39:03,000
我们来想想他说有没有道理

974
00:39:03,000 --> 00:39:05,000
可能是有点道理的

975
00:39:05,000 --> 00:39:06,000
但是

976
00:39:06,000 --> 00:39:07,000
看你站的立场是啥了吗

977
00:39:07,000 --> 00:39:08,000
看你站的立场是啥了吗

978
00:39:08,000 --> 00:39:11,000
你你如果是那些想做这个商业软件

979
00:39:11,000 --> 00:39:11,000
对吧

980
00:39:11,000 --> 00:39:13,000
想靠这个赚钱

981
00:39:13,000 --> 00:39:17,000
然后说你要通过这个就是 compete on quality

982
00:39:17,000 --> 00:39:18,000
对吧

983
00:39:18,000 --> 00:39:19,000
你要通过这个品质的竞争

984
00:39:19,000 --> 00:39:21,000
那确实是啊

985
00:39:21,000 --> 00:39:23,000
那很多你就干你这个你这个人就干不下去了

986
00:39:23,000 --> 00:39:24,000
那很多

987
00:39:24,000 --> 00:39:30,000
比如说你你需要聘请这个这个专业的人员来设计制作

988
00:39:30,000 --> 00:39:32,000
然后比如说这些的这些系统

989
00:39:32,000 --> 00:39:34,000
那你肯定就干不过免费的

990
00:39:34,000 --> 00:39:34,000
你就死掉了

991
00:39:34,000 --> 00:39:35,000
对

992
00:39:35,000 --> 00:39:38,000
那我们看到过去自然软件的这个整个历史

993
00:39:38,000 --> 00:39:40,000
不就是在不断的去蚕食那些商业软件

994
00:39:40,000 --> 00:39:43,000
本来可以卖钱的的那些领域吗

995
00:39:43,000 --> 00:39:43,000
对吧

996
00:39:43,000 --> 00:39:45,000
现在连超一些东西也是啊

997
00:39:45,000 --> 00:39:47,000
那个 unix 出来之后

998
00:39:47,000 --> 00:39:47,000
对吧

999
00:39:47,000 --> 00:39:52,000
那是之后你还有什么其他就是非就除了的嘛

1000
00:39:52,000 --> 00:39:55,000
windows 除了这个 mac

1001
00:39:55,000 --> 00:39:58,000
它底下那个 bsd 还在这个就是有一些种商业的

1002
00:39:58,000 --> 00:39:59,000
在拥有之外

1003
00:39:59,000 --> 00:40:02,000
其他那些非常小众都已经非常示威了嘛

1004
00:40:02,000 --> 00:40:04,000
都小就商业软件都已经消亡了

1005
00:40:04,000 --> 00:40:04,000
对

1006
00:40:04,000 --> 00:40:07,000
就好像他提到的这些 various unix

1007
00:40:07,000 --> 00:40:07,000
systems

1008
00:40:07,000 --> 00:40:10,000
这他这里面 unixsystems 包含很多东西

1009
00:40:10,000 --> 00:40:13,000
其中 unix 最最最原本的那 unix

1010
00:40:13,000 --> 00:40:16,000
后来被卖给了卖给谁

1011
00:40:16,000 --> 00:40:17,000
AT&T 还是谁

1012
00:40:17,000 --> 00:40:21,000
他那个真正 unix 的商标实际上是卖钱的

1013
00:40:21,000 --> 00:40:26,000
反倒是后来的什么 bsd 和 linux 之流吧

1014
00:40:26,000 --> 00:40:29,000
把这个卖钱的 unix 给打败了

1015
00:40:29,000 --> 00:40:33,000
比如说当时的就是为什么现在会有 aws

1016
00:40:33,000 --> 00:40:34,000
就是因为当时

1017
00:40:34,000 --> 00:40:34,000
就是因为当时

1018
00:40:34,000 --> 00:40:42,000
亚马逊觉得 sunmicrosystems 的那个 solaris 的那些服务器太贵了

1019
00:40:42,000 --> 00:40:44,000
然后他们转向 linux

1020
00:40:44,000 --> 00:40:46,000
然后 sun 就倒闭了

1021
00:40:48,000 --> 00:40:49,000
声扬也会倒闭

1022
00:40:49,000 --> 00:40:50,000
对

1023
00:40:50,000 --> 00:40:55,000
然后亚马逊发现自己可以用十分之一的价钱达到之前一百倍的容量

1024
00:40:55,000 --> 00:40:59,000
然后他决定把之前多出来这些容量租给别人用

1025
00:40:59,000 --> 00:41:01,000
于是就有了今天的 aws

1026
00:41:01,000 --> 00:41:02,000
诸如此类的事情实际上在一次一次上演了

1027
00:41:02,000 --> 00:41:04,000
诸如此类的事情实际上在一次一次上演了

1028
00:41:04,000 --> 00:41:04,000
诸如此类的事情实际上在一次一次上演了

1029
00:41:04,000 --> 00:41:06,000
但是如果你这样讲的话

1030
00:41:06,000 --> 00:41:09,000
虽然 tech 它本身是免费的嘛

1031
00:41:09,000 --> 00:41:13,000
tech 本身这个 tech 是美国数学学会的商标

1032
00:41:13,000 --> 00:41:16,000
然后 metaforce 也是当时那个出版社

1033
00:41:16,000 --> 00:41:19,000
就是 adison wesley 出版社的商标

1034
00:41:19,000 --> 00:41:21,000
这些商标都是有注册的

1035
00:41:21,000 --> 00:41:24,000
就跟那个 unix 一样

1036
00:41:24,000 --> 00:41:26,000
但是它本身是免费的开源的

1037
00:41:26,000 --> 00:41:28,000
它免费事实上不自由的

1038
00:41:28,000 --> 00:41:30,000
开源他们开源

1039
00:41:30,000 --> 00:41:32,000
所以有人有人骂这个 tech 嘛

1040
00:41:32,000 --> 00:41:34,000
可是 tech 的支持者就说

1041
00:41:34,000 --> 00:41:35,000
我们 tech 多好啊

1042
00:41:35,000 --> 00:41:36,000
我们免费开源

1043
00:41:36,000 --> 00:41:39,000
然后呢跨平台跨设备

1044
00:41:39,000 --> 00:41:40,000
这个最关键的就是说

1045
00:41:40,000 --> 00:41:43,000
同样的输入可以得到同样的效果

1046
00:41:43,000 --> 00:41:45,000
哪怕大家也知道这个 tech 原来是

1047
00:41:45,000 --> 00:41:49,000
40 多年前开发的这样的一个引擎

1048
00:41:49,000 --> 00:41:51,000
但是呢当时高德纳就说

1049
00:41:51,000 --> 00:41:54,000
你无论用任何一台电脑

1050
00:41:54,000 --> 00:41:56,000
输出的效果都是一样的

1051
00:41:56,000 --> 00:41:58,000
这个特别厉害

1052
00:41:58,000 --> 00:42:00,000
然后呢跨设备的意思是

1053
00:42:00,000 --> 00:42:02,000
不仅是屏幕显示

1054
00:42:02,000 --> 00:42:04,000
还有无论后来打印机之类的

1055
00:42:04,000 --> 00:42:05,000
有那个运营机嘛

1056
00:42:05,000 --> 00:42:08,000
哪怕后来后来有那个 poster script 出现

1057
00:42:08,000 --> 00:42:11,000
然后我们有比如说有 pdf

1058
00:42:11,000 --> 00:42:14,000
甚至像哪怕是日本特别专用的

1059
00:42:14,000 --> 00:42:17,000
写言家公司他们自己的电算的

1060
00:42:17,000 --> 00:42:18,000
电商招牌机

1061
00:42:18,000 --> 00:42:20,000
你只要用的是这个 tech

1062
00:42:20,000 --> 00:42:21,000
它出的文本

1063
00:42:21,000 --> 00:42:23,000
最后输出的效果都是一样的

1064
00:42:23,000 --> 00:42:25,000
这个是特别厉害的一个例子

1065
00:42:25,000 --> 00:42:30,000
我们要不接下来就讲一讲 tech

1066
00:42:30,000 --> 00:42:31,000
作为一个软件

1067
00:42:31,000 --> 00:42:34,000
它的 user interface 是怎么样

1068
00:42:34,000 --> 00:42:35,000
用户操作界面是怎么样

1069
00:42:35,000 --> 00:42:37,000
这我觉得可能对于很多设计师

1070
00:42:37,000 --> 00:42:39,000
或者是没有接触和 tech

1071
00:42:39,000 --> 00:42:42,000
但有想要试一试的人来说

1072
00:42:42,000 --> 00:42:44,000
比较重要的一点

1073
00:42:44,000 --> 00:42:46,000
我觉得可能要介绍的是工作流吧

1074
00:42:46,000 --> 00:42:48,000
因为 latex 事实上是没有一个

1075
00:42:48,000 --> 00:42:50,000
于是首先你要学会使用命令哈

1076
00:42:50,000 --> 00:42:53,000
对它事实上是没有一个标准的操作界面的

1077
00:42:53,000 --> 00:42:57,000
就你可能装了某些特定的 tech 的版本

1078
00:42:57,000 --> 00:42:58,000
呃这个我们一会会讲

1079
00:42:58,000 --> 00:43:02,000
那就是然后你会有一个编辑 tech 的环境

1080
00:43:02,000 --> 00:43:04,000
但是没有一个

1081
00:43:04,000 --> 00:43:05,000
东西说你一定要打开这个

1082
00:43:05,000 --> 00:43:07,000
比如说 photoshop 或者是 pages maker

1083
00:43:07,000 --> 00:43:09,000
你有一个主程序要运行

1084
00:43:09,000 --> 00:43:10,000
在 latex 这边是没有的

1085
00:43:10,000 --> 00:43:13,000
就你你可以按照自己喜欢的方式

1086
00:43:13,000 --> 00:43:15,000
用一个你喜欢的编辑软件去做

1087
00:43:15,000 --> 00:43:18,000
你想要做的事情

1088
00:43:18,000 --> 00:43:20,000
本质上它是编程嘛

1089
00:43:20,000 --> 00:43:21,000
它没有一个所谓的

1090
00:43:21,000 --> 00:43:24,000
你说有一个什么专用的程序来使用它

1091
00:43:24,000 --> 00:43:24,000
对吧

1092
00:43:24,000 --> 00:43:26,000
你就是其实是做任何一个

1093
00:43:26,000 --> 00:43:28,000
我们编辑器都可以写

1094
00:43:28,000 --> 00:43:29,000
所以我刚才讲

1095
00:43:29,000 --> 00:43:30,000
你说你要开始使用这个

1096
00:43:30,000 --> 00:43:32,000
你要接触的那个 UI user interface

1097
00:43:32,000 --> 00:43:34,000
就首先你得学会使用命令哈

1098
00:43:34,000 --> 00:43:34,000
好吗

1099
00:43:34,000 --> 00:43:38,000
怎么开始去完成这个转化的过程

1100
00:43:38,000 --> 00:43:39,000
这也是它的特点之一嘛

1101
00:43:39,000 --> 00:43:41,000
就是我们把过整个过程说一下

1102
00:43:41,000 --> 00:43:42,000
就用户啊

1103
00:43:42,000 --> 00:43:46,000
呃是只要有有一个文本编辑器就可以了

1104
00:43:46,000 --> 00:43:47,000
它写的是一个文本文件

1105
00:43:47,000 --> 00:43:50,000
记事本也可以对 tech 它是纯文本

1106
00:43:50,000 --> 00:43:50,000
所以呢

1107
00:43:50,000 --> 00:43:53,000
就是它非常便于传输啊

1108
00:43:53,000 --> 00:43:58,000
编辑你只要你喜欢你个人习惯用的这个文本编辑器

1109
00:43:58,000 --> 00:43:59,000
就可以你用什么都可以

1110
00:43:59,000 --> 00:44:01,000
然后要导到引擎里面去

1111
00:44:01,000 --> 00:44:03,000
当然传统的 latex 的话

1112
00:44:03,000 --> 00:44:03,000
它要中途

1113
00:44:03,000 --> 00:44:06,000
要先生成一个 dvi 文件啊

1114
00:44:06,000 --> 00:44:07,000
这个 dvi

1115
00:44:07,000 --> 00:44:10,000
其实 dvi 是 device independent 的

1116
00:44:10,000 --> 00:44:12,000
就是就设备独立

1117
00:44:12,000 --> 00:44:14,000
它就有一个中途文件

1118
00:44:14,000 --> 00:44:15,000
然后这个这个 dvi 文

1119
00:44:15,000 --> 00:44:17,000
然后根据它的驱动

1120
00:44:17,000 --> 00:44:19,000
然后最后再生成什么 pdf 啊

1121
00:44:19,000 --> 00:44:20,000
或者是打印

1122
00:44:20,000 --> 00:44:22,000
当然了现在的这个 latex

1123
00:44:22,000 --> 00:44:24,000
他们就可以现代 latex

1124
00:44:24,000 --> 00:44:24,000
比如说 Lua latex

1125
00:44:24,000 --> 00:44:29,000
它就可以直接从这个文本文件直接给导出 pdf 了

1126
00:44:29,000 --> 00:44:30,000
所以呢

1127
00:44:30,000 --> 00:44:33,000
这是两个层呃两个步骤的用户呢

1128
00:44:33,000 --> 00:44:33,000
直接

1129
00:44:33,000 --> 00:44:37,000
它要一边它要写一个像命令行一样的一个纯文本

1130
00:44:37,000 --> 00:44:38,000
然后呢

1131
00:44:38,000 --> 00:44:40,000
然后再通过这样一个引擎去

1132
00:44:40,000 --> 00:44:41,000
呃

1133
00:44:41,000 --> 00:44:42,000
生成 pdf

1134
00:44:42,000 --> 00:44:44,000
所以它是一个两个步骤的东西

1135
00:44:44,000 --> 00:44:48,000
而不是所谓的可见即所所见即所得嘛

1136
00:44:48,000 --> 00:44:49,000
对吧

1137
00:44:49,000 --> 00:44:50,000
what you see is what you get

1138
00:44:50,000 --> 00:44:51,000
这是一个它的一个最大的不同嘛

1139
00:44:51,000 --> 00:44:53,000
但其实也有人在上面做一些尝试

1140
00:44:53,000 --> 00:44:56,000
就是说有人做了这种专用的编辑器

1141
00:44:56,000 --> 00:44:58,000
然后你这边输入这个 latex 的指令

1142
00:44:58,000 --> 00:45:02,000
然后是可以就是几乎实现所见即所得

1143
00:45:02,000 --> 00:45:03,000
但是

1144
00:45:03,000 --> 00:45:06,000
就像那个所见即所得的这种这种牌牌标原理一样

1145
00:45:06,000 --> 00:45:08,000
它还是面临着非常不好用的问题

1146
00:45:08,000 --> 00:45:11,000
所以也不是非常的广泛

1147
00:45:11,000 --> 00:45:13,000
就是它还是有代码的嘛

1148
00:45:13,000 --> 00:45:15,000
知乎那个公式编辑器

1149
00:45:15,000 --> 00:45:18,000
其实它提供一个让你点的那么一个界面嘛

1150
00:45:18,000 --> 00:45:20,000
就是你你点一个什么

1151
00:45:20,000 --> 00:45:21,000
比如说根号

1152
00:45:21,000 --> 00:45:25,000
然后它就下面帮你插入 latex 的那个根号的命令

1153
00:45:25,000 --> 00:45:26,000
类似于这些东西

1154
00:45:26,000 --> 00:45:29,000
其实现在要比直接手写的还是要多一些啊

1155
00:45:29,000 --> 00:45:33,000
不就这种还算是就那个这种还是就是说是一个非常短的

1156
00:45:33,000 --> 00:45:34,000
那种就是编写

1157
00:45:34,000 --> 00:45:36,000
然后编译的一个循环嘛

1158
00:45:36,000 --> 00:45:39,000
它还是没有脱离刚才我说的那个命令行的本质

1159
00:45:39,000 --> 00:45:41,000
这里面我说的这种就是可以对它基本上就只能做公式

1160
00:45:41,000 --> 00:45:44,000
你可以就是相对完整的做出的这种编辑器

1161
00:45:44,000 --> 00:45:48,000
最最成熟的应该是那个叫做这怎么念 lix 吗

1162
00:45:48,000 --> 00:45:51,000
lyx 它的网站是 lyx.org

1163
00:45:51,000 --> 00:45:54,000
对 org 的这个你可以去看它有截图

1164
00:45:54,000 --> 00:45:59,000
就它相对来说是更加接近于就是你编辑 word 的那种感觉的

1165
00:45:59,000 --> 00:46:02,000
不过话说回来的话就是我们现在用 tech 都是大家会想到用公式嘛

1166
00:46:02,000 --> 00:46:03,000
可是

1167
00:46:03,000 --> 00:46:07,000
当年高德纳先生他可是真的是要排书的

1168
00:46:07,000 --> 00:46:10,000
他这个很厉害的比如他会算那个换函位置嘛

1169
00:46:10,000 --> 00:46:15,000
然后呢两段对齐这这这这这这都是做很专业的长文排版的东西

1170
00:46:15,000 --> 00:46:18,000
就是他还特地为此去学排版嘛

1171
00:46:18,000 --> 00:46:20,000
就所以高德纳先生很厉害

1172
00:46:20,000 --> 00:46:21,000
可是我们现在主要用的呢

1173
00:46:21,000 --> 00:46:24,000
拿来用的还是拿去排排公式嘛

1174
00:46:24,000 --> 00:46:27,000
这里就有一个问题了哈

1175
00:46:27,000 --> 00:46:29,000
其实就是可以探讨一下

1176
00:46:29,000 --> 00:46:33,000
就是为什么排就是排公式和普通的这个排

1177
00:46:33,000 --> 00:46:33,000
排版的公式是怎么排的

1178
00:46:33,000 --> 00:46:35,000
排版它有什么样的特殊之处

1179
00:46:35,000 --> 00:46:40,000
对使得他必须要呃就专门做这么一套系统

1180
00:46:40,000 --> 00:46:41,000
公式很复杂嘛

1181
00:46:41,000 --> 00:46:42,000
这个大家也都知道

1182
00:46:42,000 --> 00:46:47,000
尤其在签字时代能跟那个公式可就是超级复杂了

1183
00:46:47,000 --> 00:46:50,000
他要在这个字符的周围塞不同的清空嘛

1184
00:46:50,000 --> 00:46:50,000
对吧

1185
00:46:50,000 --> 00:46:54,000
哪怕一个根号就是一个很复杂的一个东西

1186
00:46:54,000 --> 00:46:58,000
根号上面还有一个长度啊什么就乱七八糟的

1187
00:46:58,000 --> 00:47:00,000
都要有复赫的那种

1188
00:47:00,000 --> 00:47:03,000
对对我觉得就是数学公式最麻烦的就是这个公式的这个特殊之处

1189
00:47:03,000 --> 00:47:03,000
这个特殊之处就是这个公式的这个特殊之处

1190
00:47:03,000 --> 00:47:03,000
这个特殊之处就是这个公式的这个特殊之处

1191
00:47:03,000 --> 00:47:08,000
就在于他相对如果我们只是考虑一个最简单的这个就是文本的排印

1192
00:47:08,000 --> 00:47:12,000
他其实主要考虑是相对来说是一个呃一个维度嘛

1193
00:47:12,000 --> 00:47:13,000
就是你那一行到底要出去怎么样

1194
00:47:13,000 --> 00:47:17,000
因为他行业行之间通常来说不会有太大的相互关联

1195
00:47:17,000 --> 00:47:18,000
除非你是断行的那个影响之外

1196
00:47:18,000 --> 00:47:18,000
对吧

1197
00:47:18,000 --> 00:47:23,000
但是数学公式它本质上是一个二维的一个一个画画

1198
00:47:23,000 --> 00:47:24,000
你可以这么理解

1199
00:47:24,000 --> 00:47:27,000
比如说我们常用的这个叫什么来的上标下标

1200
00:47:27,000 --> 00:47:29,000
就是那个指数符号或者是角标符号

1201
00:47:29,000 --> 00:47:30,000
对吧

1202
00:47:30,000 --> 00:47:32,000
它存在说有一个大小的问题

1203
00:47:32,000 --> 00:47:34,000
而且数学公式很多是很多是可以所谓的嵌套的

1204
00:47:34,000 --> 00:47:37,000
就你会 A 的平方的平方的平方

1205
00:47:37,000 --> 00:47:41,000
你要想的那个结果是那个平方的那个角标会逐级变小嘛

1206
00:47:41,000 --> 00:47:45,000
这种需求在普通的这个文字排版上面

1207
00:47:45,000 --> 00:47:46,000
它其实是不存在的

1208
00:47:46,000 --> 00:47:48,000
就相对来说他把这个灵活性是要求非常高

1209
00:47:48,000 --> 00:47:51,000
然后要求你控制他的这个相对位置

1210
00:47:51,000 --> 00:47:53,000
他的首先维度上就变得更广泛

1211
00:47:53,000 --> 00:47:55,000
而且他的大小的精度又要求更高了

1212
00:47:55,000 --> 00:47:59,000
对排数学公式实际上是面临着一个双倍的

1213
00:47:59,000 --> 00:48:00,000
双层的问题

1214
00:48:00,000 --> 00:48:01,000
一个是 unicode 的

1215
00:48:01,000 --> 00:48:05,000
或者说编码需要解决的一个问题

1216
00:48:05,000 --> 00:48:06,000
就是那些周音符号啊

1217
00:48:06,000 --> 00:48:07,000
或者是

1218
00:48:07,000 --> 00:48:08,000
字

1219
00:48:08,000 --> 00:48:10,000
首先有字的问题

1220
00:48:10,000 --> 00:48:13,000
字符的附加的这些零件的排版

1221
00:48:13,000 --> 00:48:14,000
就是定位的问题

1222
00:48:14,000 --> 00:48:15,000
他还有一个问题就是

1223
00:48:15,000 --> 00:48:19,000
他把所有这些东西在一个非线性的方式组合在一起

1224
00:48:19,000 --> 00:48:22,000
他是面临是一个二维的一个空间

1225
00:48:22,000 --> 00:48:24,000
他还不仅仅是一个三维的问题

1226
00:48:24,000 --> 00:48:25,000
所以你要解决这个问题

1227
00:48:25,000 --> 00:48:30,000
实际上是要用比 unicode 更加复杂的一套方法来完成

1228
00:48:30,000 --> 00:48:30,000
对吧

1229
00:48:30,000 --> 00:48:31,000
你还是提到刚才一点

1230
00:48:31,000 --> 00:48:33,000
Tex 出现的时候还没有 unicode 这件事情

1231
00:48:33,000 --> 00:48:37,000
所以当时他要去在数学公司里面大量出现的是什么

1232
00:48:37,000 --> 00:48:39,000
希腊字母啊

1233
00:48:39,000 --> 00:48:41,000
各种奇奇怪怪的这种数学符号啊

1234
00:48:41,000 --> 00:48:42,000
你就从来不会想到过的

1235
00:48:42,000 --> 00:48:45,000
就现在连 unicode 里面都不齐全的那些符号

1236
00:48:45,000 --> 00:48:47,000
他都要在这个系统里面实现出来

1237
00:48:47,000 --> 00:48:49,000
然后还要考虑他各种

1238
00:48:49,000 --> 00:48:50,000
这个在二维二维

1239
00:48:50,000 --> 00:48:55,000
就是两个这个维度上面去的如何相对排布相对大小

1240
00:48:55,000 --> 00:48:58,000
以及每个字型还要处理的好看

1241
00:48:58,000 --> 00:48:58,000
对吧

1242
00:48:58,000 --> 00:49:00,000
这个就太难了

1243
00:49:00,000 --> 00:49:00,000
对

1244
00:49:00,000 --> 00:49:02,000
这的确是一个非常

1245
00:49:02,000 --> 00:49:05,000
只有宗师级成员能解决的编程问题

1246
00:49:05,000 --> 00:49:08,000
这个你不排数学公式你都不知道吧

1247
00:49:08,000 --> 00:49:09,000
就比如说 sin x

1248
00:49:09,000 --> 00:49:12,000
那个 sin 是必须要用正力的罗马体

1249
00:49:12,000 --> 00:49:14,000
然后变量 x 呢

1250
00:49:14,000 --> 00:49:15,000
是要用意大利协体

1251
00:49:15,000 --> 00:49:18,000
就是不做理工科排版都不会意识到这个问题吗

1252
00:49:18,000 --> 00:49:19,000
是

1253
00:49:19,000 --> 00:49:19,000
对吧

1254
00:49:19,000 --> 00:49:20,000
单位的话

1255
00:49:20,000 --> 00:49:23,000
物理量的单位是必须要用正力的罗马体

1256
00:49:23,000 --> 00:49:26,000
但是物理的变量都必须要用意大利协体

1257
00:49:26,000 --> 00:49:27,000
像这个东西

1258
00:49:27,000 --> 00:49:29,000
你跟一般人来讲的话

1259
00:49:29,000 --> 00:49:30,000
他都没有注意到

1260
00:49:30,000 --> 00:49:33,000
哪怕虽然你平时从小中小学

1261
00:49:33,000 --> 00:49:36,000
你看数学课本都是那样排出来的

1262
00:49:36,000 --> 00:49:37,000
然后等你自己来排头

1263
00:49:37,000 --> 00:49:39,000
你就觉得总是没有那个味道

1264
00:49:39,000 --> 00:49:40,000
就感觉排出来不像

1265
00:49:40,000 --> 00:49:42,000
这就是因为他其中有很多

1266
00:49:42,000 --> 00:49:46,000
他有各自的这样的一个排版规则在

1267
00:49:46,000 --> 00:49:46,000
对

1268
00:49:46,000 --> 00:49:48,000
写公式跟排公式

1269
00:49:48,000 --> 00:49:52,000
甚至自动生成公式之间的关系是难度是天长地长

1270
00:49:52,000 --> 00:49:54,000
不过我觉得这里还是我要

1271
00:49:54,000 --> 00:49:58,000
我要夹带死活吐一下草

1272
00:49:58,000 --> 00:49:59,000
就是我觉得

1273
00:49:59,000 --> 00:50:00,000
虽然说他有一个很好的理解力

1274
00:50:00,000 --> 00:50:02,000
但是我觉得你们这个就是一个非常难度

1275
00:50:02,000 --> 00:50:04,000
其实我觉得很多问题都是自找的

1276
00:50:04,000 --> 00:50:05,000
对吧

1277
00:50:05,000 --> 00:50:08,000
没有其他哪个行业有这么多规模的这个需求

1278
00:50:08,000 --> 00:50:10,000
比如像刚才听到这个

1279
00:50:10,000 --> 00:50:14,000
听到 Erik 讲的这个对同一个的概念里面

1280
00:50:14,000 --> 00:50:18,000
还要用不同的这种字符形态来去描述它

1281
00:50:18,000 --> 00:50:20,000
你想手写的数学题不存在这种区别

1282
00:50:20,000 --> 00:50:21,000
就别你可能都是写个 sign

1283
00:50:21,000 --> 00:50:23,000
然后都是你的手写的那种字体

1284
00:50:23,000 --> 00:50:25,000
然后你就区分一个大小写

1285
00:50:25,000 --> 00:50:29,000
区分一个这个罗马的这个字母希腊的字母单译

1286
00:50:29,000 --> 00:50:30,000
可能也是因为字母 26 个

1287
00:50:30,000 --> 00:50:31,000
你才会讨这种东西

1288
00:50:31,000 --> 00:50:33,000
但是到了这个

1289
00:50:33,000 --> 00:50:34,000
这个数码排版了之后

1290
00:50:34,000 --> 00:50:35,000
你就发现

1291
00:50:35,000 --> 00:50:37,000
我有各种各样的

1292
00:50:37,000 --> 00:50:37,000
这种工具

1293
00:50:37,000 --> 00:50:39,000
这种口型性之后

1294
00:50:39,000 --> 00:50:41,000
你就说我要规定说

1295
00:50:41,000 --> 00:50:42,000
这种这个 sign

1296
00:50:42,000 --> 00:50:43,000
要用怎么一个标识来写

1297
00:50:43,000 --> 00:50:45,000
然后我的那个罗马字符上面

1298
00:50:45,000 --> 00:50:46,000
加个尖又是什么意思

1299
00:50:46,000 --> 00:50:47,000
就很多问题

1300
00:50:47,000 --> 00:50:48,000
其实是就研究数学

1301
00:50:48,000 --> 00:50:51,000
这个做这些照牌系统

1302
00:50:51,000 --> 00:50:53,000
或者说是就是这个编辑

1303
00:50:53,000 --> 00:50:54,000
他们自己给自己找的麻烦

1304
00:50:54,000 --> 00:50:56,000
所以咎由自取

1305
00:50:56,000 --> 00:50:57,000
自作孽不可活

1306
00:50:57,000 --> 00:50:59,000
搞得这么麻烦也活该

1307
00:50:59,000 --> 00:51:00,000
你要这样说的话

1308
00:51:00,000 --> 00:51:02,000
这不是代数的

1309
00:51:02,000 --> 00:51:04,000
这个他的宿命所在吗

1310
00:51:04,000 --> 00:51:06,000
他用字母代替数吗

1311
00:51:06,000 --> 00:51:08,000
他肯定是数字母

1312
00:51:08,000 --> 00:51:09,000
肯定是越来越不够的嘛

1313
00:51:09,000 --> 00:51:11,000
一开始我们只有

1314
00:51:11,000 --> 00:51:11,000
那定字母而已

1315
00:51:11,000 --> 00:51:12,000
然后希腊

1316
00:51:12,000 --> 00:51:13,000
我们的希腊字母

1317
00:51:13,000 --> 00:51:15,000
都是数学老师教的吧

1318
00:51:15,000 --> 00:51:15,000
我相信

1319
00:51:15,000 --> 00:51:17,000
希腊字母

1320
00:51:17,000 --> 00:51:18,000
怎么也都是数学老师教的

1321
00:51:18,000 --> 00:51:18,000
是啊

1322
00:51:18,000 --> 00:51:20,000
我的意思就是说

1323
00:51:20,000 --> 00:51:22,000
这他本来是有一些

1324
00:51:22,000 --> 00:51:23,000
就是说有可能

1325
00:51:23,000 --> 00:51:24,000
有其他解决方案的

1326
00:51:24,000 --> 00:51:25,000
比如说为什么一定

1327
00:51:25,000 --> 00:51:26,000
比如说那个叫什么来的

1328
00:51:26,000 --> 00:51:28,000
SAM 的那个操作符号

1329
00:51:28,000 --> 00:51:29,000
一定要是这么一个规定

1330
00:51:29,000 --> 00:51:30,000
一个格式去描述的

1331
00:51:30,000 --> 00:51:31,000
那个大 Sigma 对吧

1332
00:51:31,000 --> 00:51:32,000
对吧 Sigma

1333
00:51:32,000 --> 00:51:33,000
然后下面一个 N

1334
00:51:33,000 --> 00:51:35,000
等于一顶上到多少到无穷

1335
00:51:35,000 --> 00:51:36,000
然后这边是一个什么东西

1336
00:51:36,000 --> 00:51:37,000
为什么一定要这种结构

1337
00:51:37,000 --> 00:51:38,000
他明明有更简单的方式

1338
00:51:38,000 --> 00:51:38,000
可以写

1339
00:51:38,000 --> 00:51:40,000
但给自己找这种麻烦

1340
00:51:40,000 --> 00:51:40,000
对吧

1341
00:51:40,000 --> 00:51:41,000
就 Rail 说了这些东西

1342
00:51:41,000 --> 00:51:42,000
让我想到了很久以前

1343
00:51:42,000 --> 00:51:43,000
读过一篇文章

1344
00:51:43,000 --> 00:51:45,000
就说数学

1345
00:51:45,000 --> 00:51:47,000
为什么会有现在的

1346
00:51:47,000 --> 00:51:48,000
这个就是非常难的

1347
00:51:48,000 --> 00:51:49,000
这个 reputation

1348
00:51:49,000 --> 00:51:52,000
原因之一

1349
00:51:52,000 --> 00:51:53,000
跟他采用的这套符号系统

1350
00:51:53,000 --> 00:51:54,000
是分不开的

1351
00:51:54,000 --> 00:51:56,000
就是数学的这套符号系统

1352
00:51:56,000 --> 00:51:58,000
就好像五线谱

1353
00:51:58,000 --> 00:51:59,000
或者是

1354
00:51:59,000 --> 00:51:59,000
对

1355
00:51:59,000 --> 00:52:01,000
它是一个入门的门槛

1356
00:52:01,000 --> 00:52:03,000
它是一个历史延长下来的

1357
00:52:03,000 --> 00:52:05,000
这么一套自成系统的一个东西

1358
00:52:05,000 --> 00:52:08,000
就假如说我们有一个

1359
00:52:08,000 --> 00:52:10,000
数学的公式的理想模型的话

1360
00:52:10,000 --> 00:52:12,000
它并不是适合于

1361
00:52:12,000 --> 00:52:13,000
它不是设计出来的

1362
00:52:13,000 --> 00:52:15,000
描述这个理想模型的

1363
00:52:15,000 --> 00:52:16,000
最合适的系统

1364
00:52:16,000 --> 00:52:18,000
但是这个系统的存在

1365
00:52:18,000 --> 00:52:19,000
导致于很多人

1366
00:52:19,000 --> 00:52:20,000
他也许有数学天赋

1367
00:52:20,000 --> 00:52:22,000
但是因为没有办法

1368
00:52:22,000 --> 00:52:24,000
去理解这一套符号系统

1369
00:52:24,000 --> 00:52:26,000
而浪费了他的数学天赋

1370
00:52:26,000 --> 00:52:26,000
就好像那些

1371
00:52:26,000 --> 00:52:27,000
有些很

1372
00:52:27,000 --> 00:52:28,000
可能

1373
00:52:28,000 --> 00:52:29,000
音乐上面很有造诣的人

1374
00:52:29,000 --> 00:52:31,000
他不懂五线谱一样

1375
00:52:31,000 --> 00:52:32,000
有些人是靠着

1376
00:52:32,000 --> 00:52:33,000
自己的数学直觉

1377
00:52:33,000 --> 00:52:34,000
可以克服这个的

1378
00:52:34,000 --> 00:52:35,000
比如说那个什么

1379
00:52:35,000 --> 00:52:36,000
印度曾经有过一个

1380
00:52:36,000 --> 00:52:37,000
数学天才叫什么

1381
00:52:37,000 --> 00:52:39,000
拉努马金之类的一个人

1382
00:52:39,000 --> 00:52:40,000
他就是一个

1383
00:52:40,000 --> 00:52:42,000
靠着自己发明出来的

1384
00:52:42,000 --> 00:52:43,000
数学符号

1385
00:52:43,000 --> 00:52:44,000
达到了很多

1386
00:52:44,000 --> 00:52:45,000
怎么说

1387
00:52:45,000 --> 00:52:46,000
那些科班出身的人

1388
00:52:46,000 --> 00:52:47,000
没能达到数学高度

1389
00:52:47,000 --> 00:52:48,000
但是

1390
00:52:48,000 --> 00:52:50,000
不是我们每个普通人

1391
00:52:50,000 --> 00:52:52,000
都可以有这样的能力的

1392
00:52:52,000 --> 00:52:52,000
但是

1393
00:52:52,000 --> 00:52:54,000
这套数学符号

1394
00:52:54,000 --> 00:52:55,000
对于我们

1395
00:52:55,000 --> 00:52:57,000
每个普通人造成的障碍

1396
00:52:57,000 --> 00:52:58,000
确实确确实实在

1397
00:52:58,000 --> 00:52:58,000
在那儿

1398
00:52:58,000 --> 00:53:00,000
就好像你在

1399
00:53:00,000 --> 00:53:00,000
你比如说你在知乎

1400
00:53:00,000 --> 00:53:02,000
或者我他玩什么地方

1401
00:53:02,000 --> 00:53:04,000
你想要本来用自己的书法

1402
00:53:04,000 --> 00:53:05,000
写字写的开开心心的

1403
00:53:05,000 --> 00:53:07,000
忽然你想要插入一个数学公式

1404
00:53:07,000 --> 00:53:09,000
然后你发现自己的书法

1405
00:53:09,000 --> 00:53:11,000
没完全没有办法帮你是插入

1406
00:53:11,000 --> 00:53:12,000
这个公式

1407
00:53:12,000 --> 00:53:15,000
然后你去找怎么样来画一个公式

1408
00:53:15,000 --> 00:53:16,000
呃

1409
00:53:16,000 --> 00:53:16,000
很多人

1410
00:53:16,000 --> 00:53:19,000
那大补业就是自在纸上画

1411
00:53:19,000 --> 00:53:20,000
写一个数学公式

1412
00:53:20,000 --> 00:53:22,000
然后拍下那个纸的照片

1413
00:53:22,000 --> 00:53:22,000
对吧

1414
00:53:22,000 --> 00:53:24,000
在知乎上很多答案都是这样的

1415
00:53:24,000 --> 00:53:26,000
但是也有一些人去会去研究说

1416
00:53:26,000 --> 00:53:26,000
哎呀

1417
00:53:26,000 --> 00:53:28,000
我怎么样用用

1418
00:53:28,000 --> 00:53:29,000
一个比较

1419
00:53:29,000 --> 00:53:30,000
怎么说

1420
00:53:30,000 --> 00:53:33,000
正统的方式来生成一个公式的图片

1421
00:53:33,000 --> 00:53:33,000
对啊

1422
00:53:33,000 --> 00:53:35,000
然后他会去发现呃

1423
00:53:35,000 --> 00:53:37,000
tech 这套东西

1424
00:53:37,000 --> 00:53:38,000
这里面还有一个很核心的问题

1425
00:53:38,000 --> 00:53:42,000
就是说他这套符号系统是呃

1426
00:53:42,000 --> 00:53:43,000
通过各种演进过来的吧

1427
00:53:43,000 --> 00:53:45,000
他并不成体系

1428
00:53:45,000 --> 00:53:47,000
也没有什么规则可言

1429
00:53:47,000 --> 00:53:49,000
然后各他其实是各种不同流派

1430
00:53:49,000 --> 00:53:52,000
最终互相妥协融合的一个结果

1431
00:53:52,000 --> 00:53:54,000
对就导致一个事实的问题

1432
00:53:54,000 --> 00:53:57,000
就是说就不要说你你我们这种非数学专业的

1433
00:53:57,000 --> 00:53:58,000
你肯定看不懂

1434
00:53:58,000 --> 00:53:58,000
对

1435
00:53:58,000 --> 00:53:59,000
就是哪怕你学数学专业的人

1436
00:53:59,000 --> 00:54:02,000
你还是要你看到一篇特别就是特别前沿的这种数学研究

1437
00:54:02,000 --> 00:54:11,000
你还是得去看他他他在那篇论文的引文里面会先逐步定义他用的这套呃专门讨论这个话题的还得想一想不好提

1438
00:54:11,000 --> 00:54:16,000
怎么样子就等于他还他还在不断的自我研发就是叫我们叫什么来的 DSL 对吧

1439
00:54:16,000 --> 00:54:18,000
domain specific language

1440
00:54:18,000 --> 00:54:21,000
这种专用领域的语言他还在不断的延续

1441
00:54:21,000 --> 00:54:26,000
而所有的这些都是没有一个没有一个通用的一个标准的

1442
00:54:26,000 --> 00:54:26,000
对

1443
00:54:26,000 --> 00:54:28,000
而是数学符号内部

1444
00:54:28,000 --> 00:54:29,000
自己也有流派嘛

1445
00:54:29,000 --> 00:54:33,000
就是什么就哪怕我们上学的时候也会学到说

1446
00:54:33,000 --> 00:54:35,000
比如说一个一个矢量的标法

1447
00:54:35,000 --> 00:54:39,000
可能你如果你有粗体的话应该用粗体

1448
00:54:39,000 --> 00:54:40,000
然后没有粗体的话

1449
00:54:40,000 --> 00:54:42,000
你要在上面画一个什么箭头之类的

1450
00:54:42,000 --> 00:54:43,000
对对

1451
00:54:43,000 --> 00:54:45,000
然后有些流派可能已经消失了

1452
00:54:45,000 --> 00:54:49,000
比如说我们现在使用的积分虽然是号称牛顿发明的

1453
00:54:49,000 --> 00:54:55,000
但是我们使用的这个大 S 的这样一个积分符号实际上是莱布尼茨的标法

1454
00:54:55,000 --> 00:54:57,000
牛顿那个标法是非常复杂的

1455
00:54:57,000 --> 00:54:58,000
但即便

1456
00:54:58,000 --> 00:55:01,000
如此我们的那个微分还是有两种方式

1457
00:55:01,000 --> 00:55:01,000
对吧

1458
00:55:01,000 --> 00:55:04,000
一个是什么用那个字母

1459
00:55:04,000 --> 00:55:05,000
那字母叫什么来着

1460
00:55:05,000 --> 00:55:06,000
Ceta

1461
00:55:06,000 --> 00:55:07,000
Ceta

1462
00:55:07,000 --> 00:55:09,000
然后另外一种是用撇

1463
00:55:09,000 --> 00:55:09,000
对吧

1464
00:55:09,000 --> 00:55:10,000
那个怎么念

1465
00:55:10,000 --> 00:55:11,000
我不知道我也忘了

1466
00:55:11,000 --> 00:55:12,000
我一直念 Ceta

1467
00:55:12,000 --> 00:55:13,000
好像是念 Ceta

1468
00:55:13,000 --> 00:55:15,000
我记得肯定不是 Ceta

1469
00:55:15,000 --> 00:55:16,000
那不是 Ceta

1470
00:55:16,000 --> 00:55:18,000
就像一个小 D 一样的东西

1471
00:55:18,000 --> 00:55:19,000
是不是

1472
00:55:19,000 --> 00:55:22,000
而且他们当时发明的符号是手写的吧

1473
00:55:22,000 --> 00:55:23,000
肯定不是排印的嘛

1474
00:55:23,000 --> 00:55:24,000
对啊

1475
00:55:24,000 --> 00:55:26,000
就这是刚刚才我吐槽的另外一件事情嘛

1476
00:55:26,000 --> 00:55:27,000
就是现在我们排印上规定了什么呢

1477
00:55:27,000 --> 00:55:27,000
就是现在我们排印上规定了什么呢

1478
00:55:27,000 --> 00:55:27,000
就是现在我们排印上规定了什么呢

1479
00:55:27,000 --> 00:55:27,000
就是现在我们排印上规定了什么呢

1480
00:55:27,000 --> 00:55:29,000
排印上规定的各种非常细节

1481
00:55:29,000 --> 00:55:32,000
或者说是为了美观也好的这种要求

1482
00:55:32,000 --> 00:55:34,000
其实你在手写上是复刻不出来的

1483
00:55:34,000 --> 00:55:34,000
你手写

1484
00:55:34,000 --> 00:55:37,000
但你可以写的稍微正坎一点

1485
00:55:37,000 --> 00:55:38,000
稍微写的直立一点

1486
00:55:38,000 --> 00:55:40,000
但你有写还有各种弯

1487
00:55:40,000 --> 00:55:41,000
还有各种加花

1488
00:55:41,000 --> 00:55:41,000
对吧

1489
00:55:41,000 --> 00:55:42,000
但其实你在手写里面

1490
00:55:42,000 --> 00:55:44,000
并没有那么多的工具可用

1491
00:55:44,000 --> 00:55:44,000
对吧

1492
00:55:44,000 --> 00:55:47,000
取决于你手写的这个整齐度嘛

1493
00:55:47,000 --> 00:55:49,000
你如果在版书上面写的很快的话

1494
00:55:49,000 --> 00:55:51,000
其实也就很快的一笔带过去

1495
00:55:51,000 --> 00:55:54,000
它在手写过程中和你真的排印中

1496
00:55:54,000 --> 00:55:56,000
它存在一个跳跃的一个过程

1497
00:55:56,000 --> 00:55:57,000
它存在一个跳跃的一个过程

1498
00:55:57,000 --> 00:55:58,000
我再插播一下

1499
00:55:58,000 --> 00:55:59,000
就是我刚才查到了

1500
00:55:59,000 --> 00:56:02,000
首先求导是用 D

1501
00:56:02,000 --> 00:56:03,000
就是字母 D

1502
00:56:03,000 --> 00:56:05,000
DX 比 DY

1503
00:56:05,000 --> 00:56:07,000
然后我刚才说那个符号

1504
00:56:07,000 --> 00:56:08,000
或者说我们刚才手中找到的符号

1505
00:56:08,000 --> 00:56:10,000
不是一个希腊字母

1506
00:56:10,000 --> 00:56:12,000
而是它是偏微分的符号

1507
00:56:12,000 --> 00:56:13,000
它就是 D

1508
00:56:13,000 --> 00:56:17,000
偏微分符号 D 是全导数符号 D 的变体

1509
00:56:17,000 --> 00:56:19,000
它是 D 的另外一种写法

1510
00:56:19,000 --> 00:56:20,000
就是对

1511
00:56:20,000 --> 00:56:22,000
一个草书的写体的那个 D

1512
00:56:22,000 --> 00:56:23,000
D 是什么

1513
00:56:23,000 --> 00:56:26,000
是 differentiation 吗

1514
00:56:26,000 --> 00:56:26,000
derivative

1515
00:56:27,000 --> 00:56:28,000
对

1516
00:56:28,000 --> 00:56:28,000
对

1517
00:56:28,000 --> 00:56:31,000
就是什么

1518
00:56:31,000 --> 00:56:31,000
忘掉

1519
00:56:31,000 --> 00:56:34,000
早就忘光了

1520
00:56:34,000 --> 00:56:37,000
所以这个东西就是他们在发明这个符号的时候

1521
00:56:37,000 --> 00:56:41,000
就是用当时他们觉得最方便的方式发明的

1522
00:56:41,000 --> 00:56:46,000
然后他们就肯定又没有想到后面这个技术发展以后的问题

1523
00:56:46,000 --> 00:56:46,000
对吧

1524
00:56:46,000 --> 00:56:49,000
他们觉得手写当时这个手写起来很方便

1525
00:56:49,000 --> 00:56:51,000
它其实也不一定是为了方便

1526
00:56:51,000 --> 00:56:54,000
它是为了就是为了记录一个词

1527
00:56:54,000 --> 00:56:55,000
因为数学这东西很抽象

1528
00:56:55,000 --> 00:56:56,000
所以它你有

1529
00:56:57,000 --> 00:56:58,000
记不住那么多概念的时候

1530
00:56:58,000 --> 00:57:02,000
你要靠一个 notation 把它写在这个纸上

1531
00:57:02,000 --> 00:57:04,000
然后帮助你去做一些抽象的一些运算

1532
00:57:04,000 --> 00:57:06,000
就是你知道我们去什么求导啊

1533
00:57:06,000 --> 00:57:07,000
做变形的时候

1534
00:57:07,000 --> 00:57:11,000
都并没有去说考虑它的原理

1535
00:57:11,000 --> 00:57:12,000
它在手写的时候

1536
00:57:12,000 --> 00:57:14,000
它就想说就用另外一个方式的话

1537
00:57:14,000 --> 00:57:17,000
它就用一个草书的字体来写嘛

1538
00:57:17,000 --> 00:57:19,000
但可是后来想要排印的时候

1539
00:57:19,000 --> 00:57:20,000
那我就得就就麻烦了

1540
00:57:20,000 --> 00:57:24,000
排印的时候我就得必须要用另外一个签字来做嘛

1541
00:57:24,000 --> 00:57:26,000
这个像国际印标当时也是一样的呀

1542
00:57:26,000 --> 00:57:27,000
国际印标

1543
00:57:27,000 --> 00:57:29,000
大家知道有各种各样莫名其妙的符号嘛

1544
00:57:29,000 --> 00:57:31,000
可是当时已经有签印了

1545
00:57:31,000 --> 00:57:31,000
所以呢

1546
00:57:31,000 --> 00:57:33,000
作为签印来讲

1547
00:57:33,000 --> 00:57:35,000
他们很方便是把字母倒过来

1548
00:57:35,000 --> 00:57:37,000
这个对于签印来讲是很方便的

1549
00:57:37,000 --> 00:57:38,000
所以比如说那个什么

1550
00:57:38,000 --> 00:57:39,000
呃的那个发音的话

1551
00:57:39,000 --> 00:57:41,000
就是倒过来的小写字母义嘛

1552
00:57:41,000 --> 00:57:43,000
对 flip 一下就好了

1553
00:57:43,000 --> 00:57:45,000
手写你要倒写也不方便呀

1554
00:57:45,000 --> 00:57:47,000
这个是在签字的时候是很方便

1555
00:57:47,000 --> 00:57:49,000
可是反过来在电脑里面

1556
00:57:49,000 --> 00:57:51,000
你要输入那个评就超难的

1557
00:57:51,000 --> 00:57:53,000
直到现在你要输都很难输嘛

1558
00:57:53,000 --> 00:57:53,000
对吧

1559
00:57:53,000 --> 00:57:54,000
国际印标这套东西

1560
00:57:54,000 --> 00:57:55,000
对吧

1561
00:57:55,000 --> 00:57:56,000
是是是

1562
00:57:56,000 --> 00:57:57,000
那其实

1563
00:57:57,000 --> 00:57:59,000
泰和他在解决数学公式的时候

1564
00:57:59,000 --> 00:58:00,000
其实也面临着这个问题

1565
00:58:00,000 --> 00:58:03,000
就是说他要输入那些各种各样的

1566
00:58:03,000 --> 00:58:05,000
这个奇怪的符号的时候

1567
00:58:05,000 --> 00:58:06,000
他都是用一个命令的

1568
00:58:06,000 --> 00:58:08,000
就是他要线性化成一个

1569
00:58:08,000 --> 00:58:10,000
这个键盘上就是 asky

1570
00:58:10,000 --> 00:58:12,000
那个就是这个什么

1571
00:58:12,000 --> 00:58:14,000
QWERTY 键盘上存在的这些案件

1572
00:58:14,000 --> 00:58:15,000
嗯

1573
00:58:15,000 --> 00:58:16,000
他对于那个

1574
00:58:16,000 --> 00:58:18,000
把他用一串命令来指代某一个符号嘛

1575
00:58:18,000 --> 00:58:20,000
就跟我们现在转译一样嘛

1576
00:58:20,000 --> 00:58:20,000
对吧

1577
00:58:20,000 --> 00:58:21,000
是的

1578
00:58:21,000 --> 00:58:26,000
就我觉得泰和面临的问题

1579
00:58:26,000 --> 00:58:26,000
跟 CML 说

1580
00:58:26,000 --> 00:58:27,000
几个问题

1581
00:58:27,000 --> 00:58:28,000
是一样的

1582
00:58:28,000 --> 00:58:31,000
当然 HTML 出现要比泰和晚很多

1583
00:58:31,000 --> 00:58:33,000
或者是 XML 出现要比泰和晚很多

1584
00:58:33,000 --> 00:58:35,000
但他们面临的问题和解决问题的方式

1585
00:58:35,000 --> 00:58:36,000
实际上是相似的

1586
00:58:36,000 --> 00:58:36,000
是的

1587
00:58:36,000 --> 00:58:39,000
如果泰和可能因为他出现的比较早

1588
00:58:39,000 --> 00:58:42,000
所以他没有那么考虑考虑周全吧

1589
00:58:42,000 --> 00:58:44,000
但这里其实有个很好的问题

1590
00:58:44,000 --> 00:58:46,000
就是说到底形式和内容

1591
00:58:46,000 --> 00:58:47,000
是不是能够分离的

1592
00:58:47,000 --> 00:58:49,000
我觉得泰和或者是拉泰和也好

1593
00:58:49,000 --> 00:58:52,000
他证明的这件事情是是实现不了的

1594
00:58:52,000 --> 00:58:52,000
就是说

1595
00:58:52,000 --> 00:58:55,000
就是说 HTML 和 CSS

1596
00:58:55,000 --> 00:58:56,000
CSS 一个写语的方式

1597
00:58:56,000 --> 00:58:57,000
一个写语意

1598
00:58:57,000 --> 00:58:58,000
一个写样式

1599
00:58:58,000 --> 00:59:00,000
这件事情只是一个美好的愿望而已

1600
00:59:00,000 --> 00:59:02,000
因为真正你落实到具体的那些

1601
00:59:02,000 --> 00:59:05,000
非标准化文档的那些细节的时候

1602
00:59:05,000 --> 00:59:08,000
你就发现你没有这种形式和那种分离的细节了

1603
00:59:08,000 --> 00:59:09,000
比如说就刚才这个情况嘛

1604
00:59:09,000 --> 00:59:10,000
这个 sum 对吧

1605
00:59:10,000 --> 00:59:13,000
然后从 1 到 100 的这个这个这个积分

1606
00:59:13,000 --> 00:59:14,000
积到多少

1607
00:59:14,000 --> 00:59:15,000
然后再去个什么样的技术

1608
00:59:15,000 --> 00:59:19,000
你如果要去用这个完全形式和内容分开的东西

1609
00:59:19,000 --> 00:59:20,000
去描述他的话

1610
00:59:20,000 --> 00:59:21,000
泰和其实是不支持的

1611
00:59:21,000 --> 00:59:22,000
拉泰和也是不支持的

1612
00:59:22,000 --> 00:59:24,000
他从来没有支持过这件事情

1613
00:59:24,000 --> 00:59:26,000
最终你还是要去描述他的

1614
00:59:26,000 --> 00:59:26,000
这个形式和内容分离的细节

1615
00:59:26,000 --> 00:59:27,000
相对位置

1616
00:59:27,000 --> 00:59:29,000
一定要支持语义的话

1617
00:59:29,000 --> 00:59:31,000
可能只能用 mathml 之类的

1618
00:59:31,000 --> 00:59:34,000
就是 math markup language

1619
00:59:34,000 --> 00:59:35,000
或者 mathematica

1620
00:59:35,000 --> 00:59:35,000
对啊

1621
00:59:35,000 --> 00:59:37,000
所以也就是刚才你念那一段的

1622
00:59:37,000 --> 00:59:38,000
对这个的一个指责嘛

1623
00:59:38,000 --> 00:59:41,000
就是说你除非有一套完整的这种语言

1624
00:59:41,000 --> 00:59:43,000
去是描述一个结构

1625
00:59:43,000 --> 00:59:45,000
就本质上泰和也好

1626
00:59:45,000 --> 00:59:45,000
拉泰和也好

1627
00:59:45,000 --> 00:59:47,000
他去描述一个公式的时候

1628
00:59:47,000 --> 00:59:50,000
他并不单纯的是描述那公式的一个结构

1629
00:59:50,000 --> 00:59:53,000
他其实描述那公式长什么样子

1630
00:59:53,000 --> 00:59:54,000
大概长什么样子

1631
00:59:54,000 --> 00:59:55,000
大致结构是如何

1632
00:59:55,000 --> 00:59:56,000
你并不能从那里来说

1633
00:59:56,000 --> 00:59:58,000
从就所谓什么意思

1634
00:59:58,000 --> 01:00:00,000
如果说你能够永远用这个

1635
01:00:00,000 --> 01:00:01,000
拉泰和去描述一个结构的话

1636
01:00:01,000 --> 01:00:03,000
理论上你是可以去 parse

1637
01:00:03,000 --> 01:00:05,000
去去去叫什么

1638
01:00:05,000 --> 01:00:07,000
去解析他的结构

1639
01:00:07,000 --> 01:00:09,000
得到你想要的那个公式的一些

1640
01:00:09,000 --> 01:00:10,000
比如说变形和运算

1641
01:00:10,000 --> 01:00:11,000
他是可以自作化的对吧

1642
01:00:11,000 --> 01:00:12,000
但在在这件事情

1643
01:00:12,000 --> 01:00:13,000
在泰和里面是无法实现的

1644
01:00:13,000 --> 01:00:15,000
因为他的形式和内容

1645
01:00:15,000 --> 01:00:17,000
在微观的层面上是融合在一起的

1646
01:00:17,000 --> 01:00:19,000
你不要对泰和要求太高啊

1647
01:00:19,000 --> 01:00:20,000
泰和他原来一开始

1648
01:00:20,000 --> 01:00:22,000
他就是一个排版引擎而已

1649
01:00:22,000 --> 01:00:25,000
他跟这个结构一点关系都没有

1650
01:00:25,000 --> 01:00:26,000
我知道

1651
01:00:26,000 --> 01:00:26,000
我知道

1652
01:00:26,000 --> 01:00:27,000
刚才不是在讨论

1653
01:00:27,000 --> 01:00:29,000
就是说拉泰在说

1654
01:00:29,000 --> 01:00:30,000
这个内容和形式的分离

1655
01:00:30,000 --> 01:00:33,000
是对应于这个 HTML 和 CSS

1656
01:00:33,000 --> 01:00:33,000
这个关系吗

1657
01:00:33,000 --> 01:00:36,000
但这个其实我觉得在这里面

1658
01:00:36,000 --> 01:00:37,000
其实并没有很好的体现出这一点

1659
01:00:37,000 --> 01:00:39,000
他只是有这种倾向对吧

1660
01:00:39,000 --> 01:00:41,000
但其实在实现层面上

1661
01:00:41,000 --> 01:00:43,000
他并没有非常彻底的

1662
01:00:43,000 --> 01:00:44,000
去贯彻这件事情

1663
01:00:44,000 --> 01:00:46,000
Eric 说我们不要去指责

1664
01:00:46,000 --> 01:00:47,000
拉泰和这件事情

1665
01:00:47,000 --> 01:00:49,000
但问题我们现在面临一个问题

1666
01:00:49,000 --> 01:00:51,000
就是泰和是业界标准

1667
01:00:51,000 --> 01:00:53,000
如果我能就作为一个魔鬼代言人

1668
01:00:53,000 --> 01:00:54,000
我站到刚才那篇

1669
01:00:54,000 --> 01:00:58,000
批驳泰和的文章的观点上来说一句话

1670
01:00:58,000 --> 01:01:00,000
泰和他实际上的确就是一个

1671
01:01:00,000 --> 01:01:01,000
业界毒瘤这么一个状况

1672
01:01:01,000 --> 01:01:04,000
他你用泰和写出来的公式

1673
01:01:04,000 --> 01:01:05,000
面临的一个问题就是

1674
01:01:05,000 --> 01:01:09,000
他没有办法被很轻易的被

1675
01:01:09,000 --> 01:01:09,000
Parse

1676
01:01:09,000 --> 01:01:11,000
对吧

1677
01:01:11,000 --> 01:01:12,000
而且尤其是现在

1678
01:01:12,000 --> 01:01:13,000
比如说知乎

1679
01:01:13,000 --> 01:01:15,000
你在知乎片文章里面

1680
01:01:15,000 --> 01:01:17,000
生成一个 SVG 格式的公式

1681
01:01:17,000 --> 01:01:20,000
这个 SVG 格式描述的公式

1682
01:01:20,000 --> 01:01:22,000
原原本本的就是公式

1683
01:01:22,000 --> 01:01:23,000
怎么画出来的

1684
01:01:23,000 --> 01:01:26,000
他跟这个公式语义毫无关联

1685
01:01:26,000 --> 01:01:26,000
对吧

1686
01:01:26,000 --> 01:01:27,000
毫无关联

1687
01:01:27,000 --> 01:01:30,000
对我们可不可以说泰和的存在导致了

1688
01:01:30,000 --> 01:01:33,000
整个数学的语义表示

1689
01:01:33,000 --> 01:01:34,000
在互联网上的存在

1690
01:01:34,000 --> 01:01:36,000
处于一个支离破碎的

1691
01:01:36,000 --> 01:01:38,000
这个我觉得也不能这么指责

1692
01:01:38,000 --> 01:01:40,000
这个是一个结果

1693
01:01:40,000 --> 01:01:41,000
但是它并不是核心原因

1694
01:01:41,000 --> 01:01:42,000
是的

1695
01:01:42,000 --> 01:01:44,000
但是就我的意思是说

1696
01:01:44,000 --> 01:01:47,000
你不能说泰和就因此不该被指责了

1697
01:01:47,000 --> 01:01:49,000
因为他是他作为一个事实标准

1698
01:01:49,000 --> 01:01:51,000
他带来了现在业界的这么一个现况

1699
01:01:51,000 --> 01:01:52,000
对吧

1700
01:01:52,000 --> 01:01:53,000
我明白

1701
01:01:53,000 --> 01:01:53,000
你说的意思

1702
01:01:53,000 --> 01:01:55,000
我想表达的点是说

1703
01:01:55,000 --> 01:01:57,000
这件事情你换任何一个软件

1704
01:01:57,000 --> 01:01:58,000
都是不可能实现的

1705
01:01:58,000 --> 01:01:59,000
就是那个 math

1706
01:01:59,000 --> 01:02:00,000
macro language

1707
01:02:00,000 --> 01:02:02,000
也没有实现这一点

1708
01:02:02,000 --> 01:02:04,000
就是因为这个问题出在于

1709
01:02:04,000 --> 01:02:05,000
那个底层

1710
01:02:05,000 --> 01:02:07,000
我们要表示的那套体系

1711
01:02:07,000 --> 01:02:09,000
那套数学符号本身

1712
01:02:09,000 --> 01:02:10,000
就不支持这一点

1713
01:02:10,000 --> 01:02:12,000
它的结构不是那么的清晰明确的

1714
01:02:12,000 --> 01:02:14,000
这是数学符号本身的问题

1715
01:02:14,000 --> 01:02:15,000
而不是描述它

1716
01:02:15,000 --> 01:02:17,000
或者去给它排版了其他的

1717
01:02:17,000 --> 01:02:19,000
这些引擎的问题

1718
01:02:19,000 --> 01:02:21,000
然后这个讨论

1719
01:02:21,000 --> 01:02:23,000
这个讨论就没有结果了

1720
01:02:23,000 --> 01:02:23,000
这个讨论就没有结果了

1721
01:02:23,000 --> 01:02:25,000
那我们在说什么

1722
01:02:25,000 --> 01:02:27,000
这是不可能有结果的

1723
01:02:27,000 --> 01:02:29,000
因为我们不是可以左右

1724
01:02:29,000 --> 01:02:30,000
这个历史进程的人

1725
01:02:30,000 --> 01:02:32,000
我们只是作为历史的批判者

1726
01:02:32,000 --> 01:02:34,000
对滚滚长江东逝水

1727
01:02:34,000 --> 01:02:35,000
对吧

1728
01:02:35,000 --> 01:02:37,000
我们只是两个鱼桥

1729
01:02:37,000 --> 01:02:38,000
在这边喝酒

1730
01:02:38,000 --> 01:02:39,000
然后讨论这些事情

1731
01:02:39,000 --> 01:02:40,000
对

1732
01:02:40,000 --> 01:02:41,000
所以我觉得还是

1733
01:02:41,000 --> 01:02:42,000
就是回到之前那个评述里面

1734
01:02:42,000 --> 01:02:44,000
我觉得目前这么去概括

1735
01:02:44,000 --> 01:02:46,000
它这个是比较

1736
01:02:46,000 --> 01:02:48,000
就是中肯的一个评价

1737
01:02:48,000 --> 01:02:48,000
相对来说

1738
01:02:48,000 --> 01:02:49,000
我觉得就是说

1739
01:02:49,000 --> 01:02:52,000
泰和只是一个底层的

1740
01:02:52,000 --> 01:02:53,000
不涉及说

1741
01:02:53,000 --> 01:02:54,000
内容还是形式的

1742
01:02:54,000 --> 01:02:55,000
这么一个排版引擎

1743
01:02:55,000 --> 01:02:55,000
对

1744
01:02:55,000 --> 01:02:56,000
排版引擎本质上是

1745
01:02:56,000 --> 01:02:57,000
展现的是一个形式

1746
01:02:57,000 --> 01:02:58,000
对不对

1747
01:02:58,000 --> 01:02:59,000
它并不是体现的

1748
01:02:59,000 --> 01:02:59,000
说要内容怎么

1749
01:02:59,000 --> 01:03:01,000
你不可能去通过读

1750
01:03:01,000 --> 01:03:02,000
泰和的圆满

1751
01:03:02,000 --> 01:03:03,000
去读懂这本书长

1752
01:03:03,000 --> 01:03:04,000
你还是要看它最终

1753
01:03:04,000 --> 01:03:05,000
compile 出来的那本书长

1754
01:03:05,000 --> 01:03:06,000
什么样子

1755
01:03:06,000 --> 01:03:07,000
然后呢

1756
01:03:07,000 --> 01:03:09,000
Lamport 在上面做的

1757
01:03:09,000 --> 01:03:10,000
一个重大的一个贡献

1758
01:03:10,000 --> 01:03:12,000
是说在一个无结构的

1759
01:03:12,000 --> 01:03:14,000
这个体系上面

1760
01:03:14,000 --> 01:03:15,000
引入了

1761
01:03:15,000 --> 01:03:17,000
就是这个 macro 的

1762
01:03:17,000 --> 01:03:18,000
这么一个宏观的一个结构

1763
01:03:18,000 --> 01:03:19,000
实现了章节

1764
01:03:19,000 --> 01:03:20,000
对吧

1765
01:03:20,000 --> 01:03:21,000
实现了这个 section

1766
01:03:21,000 --> 01:03:23,000
然后实现了这个数学公式的

1767
01:03:23,000 --> 01:03:23,000
一些

1768
01:03:23,000 --> 01:03:24,000
实现了这个包管理

1769
01:03:24,000 --> 01:03:25,000
实现了这个模块化

1770
01:03:25,000 --> 01:03:26,000
但是呢

1771
01:03:26,000 --> 01:03:28,000
具体的在非常微观的层面上

1772
01:03:28,000 --> 01:03:29,000
它肯定还是无法

1773
01:03:29,000 --> 01:03:31,000
完全的结构化的

1774
01:03:31,000 --> 01:03:31,000
就好像

1775
01:03:31,000 --> 01:03:33,000
我们现在说

1776
01:03:33,000 --> 01:03:36,000
哪怕是说当年提这个 HTML 和 CS 的

1777
01:03:36,000 --> 01:03:37,000
这个形式的那种分离

1778
01:03:37,000 --> 01:03:37,000
提到现在

1779
01:03:37,000 --> 01:03:39,000
我们现在去看 web

1780
01:03:39,000 --> 01:03:40,000
它这两个事情还是

1781
01:03:40,000 --> 01:03:40,000
就是

1782
01:03:40,000 --> 01:03:43,000
就是互相连结在一起的

1783
01:03:43,000 --> 01:03:44,000
你到微观层面上

1784
01:03:44,000 --> 01:03:45,000
还是无法分开的

1785
01:03:45,000 --> 01:03:46,000
所以我觉得这里面

1786
01:03:46,000 --> 01:03:48,000
也就是我们的技术

1787
01:03:48,000 --> 01:03:51,000
理想和客观现实之间的

1788
01:03:51,000 --> 01:03:52,000
这个妥协点

1789
01:03:52,000 --> 01:03:53,000
就是这样子

1790
01:03:53,000 --> 01:03:55,000
我很好奇

1791
01:03:55,000 --> 01:03:57,000
就是你们对那个

1792
01:03:57,000 --> 01:04:00,000
那个 W 3 C 那个 MathML

1793
01:04:00,000 --> 01:04:00,000
什么

1794
01:04:00,000 --> 01:04:02,000
有什么作何评论

1795
01:04:02,000 --> 01:04:04,000
XML 就像暴力一样

1796
01:04:04,000 --> 01:04:05,000
你如果没有解决问题

1797
01:04:05,000 --> 01:04:07,000
你就用更多的暴力

1798
01:04:07,000 --> 01:04:08,000
大概这个感觉

1799
01:04:08,000 --> 01:04:10,000
就是 MathML

1800
01:04:10,000 --> 01:04:12,000
它本质上就是用 XML 来

1801
01:04:12,000 --> 01:04:13,000
就是跌船驾屋嘛

1802
01:04:13,000 --> 01:04:15,000
就不停的加东西嘛

1803
01:04:15,000 --> 01:04:16,000
啰啰嗦嗦的

1804
01:04:16,000 --> 01:04:17,000
XML 就是这样

1805
01:04:17,000 --> 01:04:19,000
XML 作为当时的一个银弹

1806
01:04:19,000 --> 01:04:21,000
就 90 年代的人觉得

1807
01:04:21,000 --> 01:04:22,000
好像

1808
01:04:22,000 --> 01:04:25,000
你用原数据去描述数据

1809
01:04:25,000 --> 01:04:26,000
就可以得到

1810
01:04:26,000 --> 01:04:29,000
就可以让数据更好地被处理

1811
01:04:29,000 --> 01:04:30,000
但是人们会发现

1812
01:04:30,000 --> 01:04:31,000
原数据本身也是数据

1813
01:04:31,000 --> 01:04:33,000
然后你需要给原数据

1814
01:04:33,000 --> 01:04:34,000
加上更多原数据

1815
01:04:34,000 --> 01:04:36,000
这就是无穷尽言

1816
01:04:36,000 --> 01:04:37,000
但我觉得 MathML

1817
01:04:37,000 --> 01:04:40,000
虽然是一个非常复杂的文档

1818
01:04:40,000 --> 01:04:42,000
它本质上也不是让人来写的

1819
01:04:42,000 --> 01:04:43,000
和让人来读的

1820
01:04:43,000 --> 01:04:45,000
它的存在意义就像 XML 一样

1821
01:04:45,000 --> 01:04:46,000
它是为了保存信息

1822
01:04:46,000 --> 01:04:48,000
然后给信息加上原信息

1823
01:04:48,000 --> 01:04:50,000
虽然它的手段非常的拙劣

1824
01:04:50,000 --> 01:04:52,000
或者说非常的啰嗦

1825
01:04:52,000 --> 01:04:52,000
但是

1826
01:04:52,000 --> 01:04:54,000
它还是起到它的应有的目的

1827
01:04:54,000 --> 01:04:56,000
MathML 其实你不用多看

1828
01:04:56,000 --> 01:05:00,000
MathML 就是 HTML for 公式

1829
01:05:00,000 --> 01:05:01,000
就大概这种感觉

1830
01:05:01,000 --> 01:05:02,000
就是它

1831
01:05:02,000 --> 01:05:04,000
你可以把所有的符号

1832
01:05:04,000 --> 01:05:06,000
用那个监控号扩起来

1833
01:05:06,000 --> 01:05:09,000
然后这个监控号里面的文本

1834
01:05:09,000 --> 01:05:11,000
就是告诉你这个符号是干嘛的

1835
01:05:11,000 --> 01:05:13,000
它维系了一套

1836
01:05:13,000 --> 01:05:16,000
数学的公式的语义

1837
01:05:16,000 --> 01:05:18,000
而且它基本上

1838
01:05:18,000 --> 01:05:20,000
没有涉及说

1839
01:05:20,000 --> 01:05:22,000
这个语义应该是怎么用

1840
01:05:22,000 --> 01:05:23,000
用什么样的方法来表示的

1841
01:05:23,000 --> 01:05:24,000
所以理论上

1842
01:05:24,000 --> 01:05:26,000
你可以用一套类似于 CSS 的东西

1843
01:05:26,000 --> 01:05:30,000
来描述一个 MathML 生成的

1844
01:05:30,000 --> 01:05:33,000
用 MathML 来描述的一个数学公式

1845
01:05:33,000 --> 01:05:38,000
而 MathML 本身只负责描述

1846
01:05:38,000 --> 01:05:40,000
这个数学公式里面

1847
01:05:40,000 --> 01:05:42,000
每一个元件之间的关系

1848
01:05:42,000 --> 01:05:43,000
大概这样

1849
01:05:43,000 --> 01:05:44,000
它的最大的问题就是

1850
01:05:44,000 --> 01:05:45,000
你要编辑它

1851
01:05:45,000 --> 01:05:46,000
或者是你要生成它

1852
01:05:46,000 --> 01:05:47,000
是非常麻烦的

1853
01:05:47,000 --> 01:05:48,000
但是你读起来

1854
01:05:48,000 --> 01:05:49,000
其实还是比较简单

1855
01:05:49,000 --> 01:05:52,000
MathML 这名字就很难念了

1856
01:05:52,000 --> 01:05:53,000
Mathematic Markup Language

1857
01:05:53,000 --> 01:05:54,000
这个东西

1858
01:05:54,000 --> 01:05:56,000
它本质上就是

1859
01:05:56,000 --> 01:06:00,000
把 Tech 的理想

1860
01:06:00,000 --> 01:06:02,000
用 XML 这个标记语言

1861
01:06:02,000 --> 01:06:03,000
重新实现一遍

1862
01:06:03,000 --> 01:06:04,000
但其实它们两个都没有实现

1863
01:06:04,000 --> 01:06:05,000
刚才我说的那一点

1864
01:06:05,000 --> 01:06:07,000
不是不是

1865
01:06:07,000 --> 01:06:09,000
我觉得这个还是差别蛮大的

1866
01:06:09,000 --> 01:06:10,000
因为 Tech

1867
01:06:10,000 --> 01:06:12,000
就是我们介绍几个 Tech 的

1868
01:06:12,000 --> 01:06:15,000
最比较基本的命令

1869
01:06:15,000 --> 01:06:17,000
就像 HTML 有什么 EM

1870
01:06:17,000 --> 01:06:20,000
有什么 Strong 一样

1871
01:06:20,000 --> 01:06:21,000
Tech 是有

1872
01:06:21,000 --> 01:06:22,000
比如说 Tech

1873
01:06:22,000 --> 01:06:23,000
text bf boldface

1874
01:06:23,000 --> 01:06:26,000
或者是 text it italic

1875
01:06:26,000 --> 01:06:27,000
诸如此类的

1876
01:06:27,000 --> 01:06:29,000
就是你说 text bf 描述的是什么

1877
01:06:29,000 --> 01:06:30,000
描述的是它的风格

1878
01:06:30,000 --> 01:06:33,000
就是我说接下来这个部分

1879
01:06:33,000 --> 01:06:35,000
要用粗体来描述

1880
01:06:35,000 --> 01:06:36,000
可是这个粗体的意义是什么

1881
01:06:36,000 --> 01:06:40,000
就它跟这个东西的实际语义

1882
01:06:40,000 --> 01:06:41,000
是毫无关联的

1883
01:06:41,000 --> 01:06:43,000
但是 mass ml 这边

1884
01:06:43,000 --> 01:06:44,000
就它的每个标签

1885
01:06:44,000 --> 01:06:46,000
都是跟这个语义相关的

1886
01:06:46,000 --> 01:06:47,000
你不能只说

1887
01:06:47,000 --> 01:06:49,000
这个东西需要用粗体

1888
01:06:49,000 --> 01:06:51,000
你必须在 mass ml 里面

1889
01:06:51,000 --> 01:06:52,000
描述这个粗体

1890
01:06:52,000 --> 01:06:53,000
标出来的东西是什么

1891
01:06:53,000 --> 01:06:55,000
不就粗体这个概念

1892
01:06:55,000 --> 01:06:56,000
在那里面不存在

1893
01:06:56,000 --> 01:06:57,000
它实际上在理念上

1894
01:06:57,000 --> 01:06:58,000
是要比

1895
01:06:58,000 --> 01:06:59,000
对吧

1896
01:06:59,000 --> 01:07:00,000
它其实要表述的是

1897
01:07:00,000 --> 01:07:01,000
这个数学结构怎么回事

1898
01:07:01,000 --> 01:07:02,000
就是它表述的是一个

1899
01:07:02,000 --> 01:07:03,000
我今天开始提出了

1900
01:07:03,000 --> 01:07:04,000
一个第一个问题

1901
01:07:04,000 --> 01:07:06,000
就是数学公式的

1902
01:07:06,000 --> 01:07:07,000
那些各种 notation 的结构

1903
01:07:07,000 --> 01:07:09,000
它想用一个通用的方法

1904
01:07:09,000 --> 01:07:10,000
把它描述出来

1905
01:07:10,000 --> 01:07:12,000
其实这个东西

1906
01:07:12,000 --> 01:07:13,000
本来就是一个

1907
01:07:13,000 --> 01:07:14,000
很困难的一个事情

1908
01:07:14,000 --> 01:07:16,000
就几乎不可能完成的用

1909
01:07:16,000 --> 01:07:18,000
所以它本身的复杂性

1910
01:07:18,000 --> 01:07:19,000
是来源于数学公式

1911
01:07:19,000 --> 01:07:19,000
本身的复杂性

1912
01:07:19,000 --> 01:07:21,000
但它还是

1913
01:07:21,000 --> 01:07:22,000
描述出了数学公式

1914
01:07:22,000 --> 01:07:23,000
之间的关系的

1915
01:07:23,000 --> 01:07:24,000
就好像 Lisp

1916
01:07:24,000 --> 01:07:25,000
比如说 Lisp

1917
01:07:25,000 --> 01:07:26,000
你用 Lisp

1918
01:07:26,000 --> 01:07:27,000
可以描述出任何

1919
01:07:27,000 --> 01:07:28,000
足够复杂的

1920
01:07:28,000 --> 01:07:29,000
任何复杂的数学公式

1921
01:07:29,000 --> 01:07:31,000
都可以用 Lisp 描述出来

1922
01:07:31,000 --> 01:07:32,000
只不过 Lisp 的描述

1923
01:07:32,000 --> 01:07:33,000
你可能

1924
01:07:33,000 --> 01:07:35,000
就是非常反人类的

1925
01:07:35,000 --> 01:07:35,000
对吧

1926
01:07:35,000 --> 01:07:37,000
但它是可以的

1927
01:07:37,000 --> 01:07:38,000
mass ml 实际上

1928
01:07:38,000 --> 01:07:38,000
做到的事情

1929
01:07:38,000 --> 01:07:39,000
跟 Lisp 差不多

1930
01:07:39,000 --> 01:07:39,000
对

1931
01:07:39,000 --> 01:07:41,000
就是说引入一个

1932
01:07:41,000 --> 01:07:42,000
就是数状结构

1933
01:07:42,000 --> 01:07:43,000
去描述

1934
01:07:43,000 --> 01:07:44,000
去描述一个

1935
01:07:44,000 --> 01:07:45,000
数学的 notation

1936
01:07:45,000 --> 01:07:46,000
把它拆解出来

1937
01:07:46,000 --> 01:07:47,000
对

1938
01:07:47,000 --> 01:07:49,000
那这么比的话

1939
01:07:49,000 --> 01:07:51,000
它其实应该说是

1940
01:07:51,000 --> 01:07:51,000
应该是

1941
01:07:51,000 --> 01:07:53,000
它选择的那个载体不好

1942
01:07:53,000 --> 01:07:55,000
这个 mass ml

1943
01:07:55,000 --> 01:07:57,000
这个坑实在是太深了

1944
01:07:57,000 --> 01:08:00,000
所以我们接下来

1945
01:08:00,000 --> 01:08:01,000
要往什么地方讲

1946
01:08:01,000 --> 01:08:02,000
给大家说一下

1947
01:08:02,000 --> 01:08:03,000
各种环境下的 tech

1948
01:08:03,000 --> 01:08:04,000
OK

1949
01:08:04,000 --> 01:08:05,000
对

1950
01:08:05,000 --> 01:08:06,000
到底有多少种

1951
01:08:06,000 --> 01:08:07,000
叉叉 tech

1952
01:08:07,000 --> 01:08:08,000
回乡字回字

1953
01:08:08,000 --> 01:08:09,000
有几种写法

1954
01:08:09,000 --> 01:08:10,000
就多了

1955
01:08:10,000 --> 01:08:11,000
我跟你说

1956
01:08:11,000 --> 01:08:11,000
OK

1957
01:08:11,000 --> 01:08:13,000
假如你听我们的节目

1958
01:08:13,000 --> 01:08:15,000
然后对 tech 产生了兴趣

1959
01:08:15,000 --> 01:08:15,000
那么

1960
01:08:15,000 --> 01:08:17,000
首先最重要的一件事情

1961
01:08:17,000 --> 01:08:18,000
就是获得 tech

1962
01:08:18,000 --> 01:08:20,000
会有这样的人吗

1963
01:08:20,000 --> 01:08:21,000
对

1964
01:08:21,000 --> 01:08:22,000
为什么每次都要拆穿我

1965
01:08:22,000 --> 01:08:24,000
首先你要获得哪一个

1966
01:08:24,000 --> 01:08:25,000
或者说

1967
01:08:25,000 --> 01:08:27,000
假如你是一个即将要写论文的人

1968
01:08:27,000 --> 01:08:29,000
然后你想要尝试一下

1969
01:08:29,000 --> 01:08:30,000
这个传说中

1970
01:08:30,000 --> 01:08:32,000
宗师级程序员使用的解决方案

1971
01:08:32,000 --> 01:08:34,000
那么你需要获得一个

1972
01:08:34,000 --> 01:08:36,000
你所使用的操作系统上的

1973
01:08:36,000 --> 01:08:37,000
tech 环境

1974
01:08:37,000 --> 01:08:39,000
因为在座的四位都是

1975
01:08:39,000 --> 01:08:41,000
mac 用户

1976
01:08:41,000 --> 01:08:42,000
那我们要先从 mac 说起吧

1977
01:08:42,000 --> 01:08:44,000
就我当时用的是

1978
01:08:44,000 --> 01:08:46,000
就叫 mac tech

1979
01:08:46,000 --> 01:08:47,000
那个很老了

1980
01:08:47,000 --> 01:08:49,000
但是我要是没记错的话

1981
01:08:49,000 --> 01:08:50,000
mac tech 是

1982
01:08:50,000 --> 01:08:52,000
现在已经停止开发了

1983
01:08:52,000 --> 01:08:54,000
还有更新版的

1984
01:08:54,000 --> 01:08:57,000
你现在去搜这个 mac tech

1985
01:08:57,000 --> 01:09:00,000
就是 mac.tex 这个东西

1986
01:09:00,000 --> 01:09:02,000
它会让你去到这个

1987
01:09:02,000 --> 01:09:05,000
一个这个 mac tech

1988
01:09:05,000 --> 01:09:06,000
2020 的发行版

1989
01:09:06,000 --> 01:09:07,000
对

1990
01:09:07,000 --> 01:09:08,000
说到这个就要先解释一下

1991
01:09:08,000 --> 01:09:09,000
什么是发行版

1992
01:09:09,000 --> 01:09:11,000
本质上 mac tech

1993
01:09:11,000 --> 01:09:12,000
它是做了一个事

1994
01:09:12,000 --> 01:09:14,000
就是它把常用的那些工具包

1995
01:09:14,000 --> 01:09:16,000
都给你打包在一起

1996
01:09:16,000 --> 01:09:18,000
然后你可以一次去下载完

1997
01:09:18,000 --> 01:09:18,000
安装好

1998
01:09:18,000 --> 01:09:19,000
就可以开始用了

1999
01:09:19,000 --> 01:09:20,000
你不用考虑

2000
01:09:20,000 --> 01:09:20,000
今天刚好

2001
01:09:20,000 --> 01:09:22,000
需要到底你哪些组件

2002
01:09:22,000 --> 01:09:24,000
然后之间相互作用是什么样子

2003
01:09:24,000 --> 01:09:26,000
你可以大致略过这个问题

2004
01:09:26,000 --> 01:09:28,000
就有点像 linux 是一样

2005
01:09:28,000 --> 01:09:28,000
对吧

2006
01:09:28,000 --> 01:09:29,000
我们现在

2007
01:09:29,000 --> 01:09:30,000
我说你要去装一个 linux

2008
01:09:30,000 --> 01:09:31,000
你先选一个发行版

2009
01:09:31,000 --> 01:09:32,000
对吧

2010
01:09:32,000 --> 01:09:33,000
你要选什么

2011
01:09:33,000 --> 01:09:33,000
ubuntu

2012
01:09:33,000 --> 01:09:34,000
fedora 之类的

2013
01:09:34,000 --> 01:09:35,000
对吧

2014
01:09:35,000 --> 01:09:36,000
你要他们把那些打包的工作

2015
01:09:36,000 --> 01:09:37,000
给你做好了

2016
01:09:37,000 --> 01:09:39,000
你去用一个现成的版本就可以了

2017
01:09:39,000 --> 01:09:41,000
mac 下面可能还是用这个

2018
01:09:41,000 --> 01:09:42,000
比较简单一些

2019
01:09:42,000 --> 01:09:44,000
然后如果你在 windows 上的话

2020
01:09:44,000 --> 01:09:46,000
应该去下载

2021
01:09:46,000 --> 01:09:48,000
据我所知应该是 mic tech

2022
01:09:48,000 --> 01:09:50,000
就是 mic

2023
01:09:50,000 --> 01:09:52,000
这个我没用过

2024
01:09:52,000 --> 01:09:54,000
就这个我不知道现在还是不是

2025
01:09:54,000 --> 01:09:56,000
我上本科的时候

2026
01:09:56,000 --> 01:09:59,000
当时用过 windows 写那个系统

2027
01:09:59,000 --> 01:10:01,000
然后装的确实是这个系统

2028
01:10:01,000 --> 01:10:02,000
就是 mic

2029
01:10:02,000 --> 01:10:04,000
mic 还是 mic

2030
01:10:04,000 --> 01:10:05,000
好用吗

2031
01:10:05,000 --> 01:10:07,000
也没有什么好选的

2032
01:10:07,000 --> 01:10:10,000
你是存在说能用和不能用的区别

2033
01:10:10,000 --> 01:10:12,000
其他就是你都有一个新手

2034
01:10:12,000 --> 01:10:13,000
你根本属于不能用的状态

2035
01:10:13,000 --> 01:10:14,000
就不用考虑这个问题了

2036
01:10:14,000 --> 01:10:15,000
你知道吗

2037
01:10:15,000 --> 01:10:19,000
那如果你用 linux 的话

2038
01:10:19,000 --> 01:10:20,000
你需要自己

2039
01:10:20,000 --> 01:10:20,000
手写的

2040
01:10:20,000 --> 01:10:22,000
你需要自己的手写一个 tech 的这么一个系统

2041
01:10:22,000 --> 01:10:24,000
linux 上没有 tech 的包

2042
01:10:24,000 --> 01:10:26,000
所以就是比较尴尬的一件事情

2043
01:10:26,000 --> 01:10:27,000
应该有的吧

2044
01:10:27,000 --> 01:10:29,000
什么 apt 各种

2045
01:10:29,000 --> 01:10:31,000
我在胡扯

2046
01:10:31,000 --> 01:10:36,000
就 linux 上的 tech 实际上是最好的一个

2047
01:10:36,000 --> 01:10:38,000
最好的一个 distribution

2048
01:10:38,000 --> 01:10:39,000
tech live

2049
01:10:39,000 --> 01:10:42,000
这个东西应该是目前最积极维护

2050
01:10:42,000 --> 01:10:44,000
然后也是用户技术最大的一个群体

2051
01:10:44,000 --> 01:10:47,000
也是我印象中体积最庞大的

2052
01:10:47,000 --> 01:10:49,000
他当时我记得是在

2053
01:10:50,000 --> 01:10:50,000
多少

2054
01:10:50,000 --> 01:10:51,000
十几年前

2055
01:10:51,000 --> 01:10:53,000
那个时候互联网的状态

2056
01:10:53,000 --> 01:10:53,000
你想象一下

2057
01:10:53,000 --> 01:10:57,000
他的一个完整的状态包都已经要小十个 GB 了

2058
01:10:57,000 --> 01:10:57,000
你想象一下

2059
01:10:57,000 --> 01:11:02,000
但是不管不管你在哪个平台上用哪个发行版吧

2060
01:11:02,000 --> 01:11:04,000
你的工作流程基本上一样的

2061
01:11:04,000 --> 01:11:08,000
就是你要先写一个成文本的 tech 文件

2062
01:11:08,000 --> 01:11:12,000
然后用你的发行版所提供给你的

2063
01:11:12,000 --> 01:11:18,000
通常是一个叫做 latech 或者是 pdf latech 的程序去处理你写好的文件

2064
01:11:18,000 --> 01:11:20,000
然后他会帮你生成出一个 pdf 文件

2065
01:11:20,000 --> 01:11:46,000
像是这个

2066
01:11:46,000 --> 01:11:46,000
是怎么生成着以什么格式来提问人家也 transfers

2067
01:11:46,000 --> 01:11:46,000
呢

2068
01:11:46,000 --> 01:11:48,000
也不买 жел gesprochen

2069
01:11:48,000 --> 01:11:48,000
nå

2070
01:11:48,000 --> 01:11:49,000
你就 Zo mega

2071
01:11:49,000 --> 01:11:50,000
肯定开 watched

2072
01:11:50,000 --> 01:11:53,000
然后你可能会就你的领域

2073
01:11:53,000 --> 01:11:56,000
需要用到一些你的领域才会使用的包

2074
01:11:56,000 --> 01:11:58,000
如果你的领域比较大众的话

2075
01:11:58,000 --> 01:11:59,000
这个包可能是有很多人维护的

2076
01:11:59,000 --> 01:12:01,000
如果你的领域比较小众的话

2077
01:12:01,000 --> 01:12:04,000
那么很有可能你必须自己亲自去解决一些问题

2078
01:12:04,000 --> 01:12:06,000
太阳用户群里面有一句话说

2079
01:12:06,000 --> 01:12:09,000
You have to know everything to do anything

2080
01:12:09,000 --> 01:12:11,000
这个我深有体会

2081
01:12:11,000 --> 01:12:15,000
你面临着的是一个非常陡峭的学习曲线

2082
01:12:15,000 --> 01:12:15,000
必须说

2083
01:12:15,000 --> 01:12:18,000
然后如果你的论文的时间比较赶的话

2084
01:12:18,000 --> 01:12:22,000
那我劝你还是就是另学一条别的途径

2085
01:12:22,000 --> 01:12:23,000
用模板啊

2086
01:12:23,000 --> 01:12:24,000
对我举个例子

2087
01:12:24,000 --> 01:12:25,000
大家可以体会一下

2088
01:12:25,000 --> 01:12:30,000
就是说如果说我们我们说我们节目也很是很多是程序员听众

2089
01:12:30,000 --> 01:12:34,000
我们当时说这个学习 Vim 这个编辑器是一个非常陡峭的这个学习曲线

2090
01:12:34,000 --> 01:12:37,000
然后但你取完之后是非常好爽的

2091
01:12:37,000 --> 01:12:40,000
那么学习 Tag 或者任何版本的这个上手来讲

2092
01:12:40,000 --> 01:12:42,000
他比那个曲线陡峭多

2093
01:12:42,000 --> 01:12:45,000
你本质上是要学习一门全新的

2094
01:12:45,000 --> 01:12:47,000
你中你也不知道什么原理

2095
01:12:47,000 --> 01:12:48,000
并且他的整个

2096
01:12:48,000 --> 01:12:55,000
他的整个这个设计理念和设计思维都是来自于 50 年前的一套一套编程环境

2097
01:12:55,000 --> 01:12:56,000
本质上你在做这个事情

2098
01:12:56,000 --> 01:13:01,000
这个其实最终就是说自自谈自串的听众朋友们

2099
01:13:01,000 --> 01:13:06,000
是很有可能是 Tag 的这个目标用户群啊

2100
01:13:06,000 --> 01:13:07,000
这这完全重合啊

2101
01:13:07,000 --> 01:13:10,000
既是程序员又要知道怎么排版

2102
01:13:10,000 --> 01:13:13,000
所以中司的这个封装做的不是特别好

2103
01:13:13,000 --> 01:13:14,000
露出的东西太多

2104
01:13:14,000 --> 01:13:17,000
而且本质上你还会得得会排版

2105
01:13:17,000 --> 01:13:18,000
而且你还会得得会排版

2106
01:13:18,000 --> 01:13:25,000
而且事实上我也知道有我们听众里面有就是同时加入我们两个群的听众有 Tag 高手

2107
01:13:25,000 --> 01:13:27,000
的确是有的

2108
01:13:27,000 --> 01:13:28,000
我们之前

2109
01:13:28,000 --> 01:13:33,000
我觉得好像是我们有一个这个朋友还做过这个 Tag 相关的这个开发

2110
01:13:33,000 --> 01:13:35,000
就是之前请过的江江

2111
01:13:35,000 --> 01:13:40,000
所以这些这个什么 Tag 高手听完这期节目是会被气得凸显吗

2112
01:13:40,000 --> 01:13:42,000
我觉得他们也能够理解吧

2113
01:13:42,000 --> 01:13:46,000
毕竟这是一个我们要在短短一两个小时里面解释清楚

2114
01:13:46,000 --> 01:13:48,000
这件事情本身就是一个不可能完成的事情

2115
01:13:48,000 --> 01:13:53,000
所以现在 Tag 是不是在 Mac 上也是可以用了

2116
01:13:53,000 --> 01:13:55,000
它好像已经变成一个跨平台的

2117
01:13:55,000 --> 01:13:56,000
应该是可以的

2118
01:13:56,000 --> 01:13:57,000
应该是可以的

2119
01:13:57,000 --> 01:14:01,000
那个那个 MICTag 也可以在跨平台用了呀

2120
01:14:01,000 --> 01:14:04,000
大家都在想办法去挤占别人的地盘

2121
01:14:04,000 --> 01:14:04,000
对

2122
01:14:04,000 --> 01:14:08,000
而且这个东西实际上是比较惯性导向的

2123
01:14:08,000 --> 01:14:09,000
就是你之前用什么

2124
01:14:09,000 --> 01:14:10,000
你可能之后就一直用什么

2125
01:14:10,000 --> 01:14:16,000
因为大部分使用 Tag 的人实际上是对 Tag 本身的发展没有太多兴趣的

2126
01:14:16,000 --> 01:14:17,000
他们有更多

2127
01:14:17,000 --> 01:14:18,000
只是一个用户

2128
01:14:18,000 --> 01:14:20,000
自己领域的问题需要去解决

2129
01:14:20,000 --> 01:14:21,000
他们可能一开始用什么

2130
01:14:21,000 --> 01:14:22,000
或者他们师兄用什么

2131
01:14:22,000 --> 01:14:23,000
或者他们学校用什么

2132
01:14:23,000 --> 01:14:27,000
就他们学校会给一套那个模板

2133
01:14:27,000 --> 01:14:29,000
然后这个模板在什么环境之下测试的

2134
01:14:29,000 --> 01:14:31,000
他们就会去用那个环境

2135
01:14:31,000 --> 01:14:34,000
大概这样一个模式吧

2136
01:14:34,000 --> 01:14:34,000
对

2137
01:14:34,000 --> 01:14:39,000
因为你要去了解从零开始没有任何别人给你的帮助的话

2138
01:14:39,000 --> 01:14:41,000
其实是非常困难的一件事情

2139
01:14:44,000 --> 01:14:45,000
我问你个问题

2140
01:14:45,000 --> 01:14:48,000
因为这里面估计也只有你有可能干的

2141
01:14:48,000 --> 01:14:53,000
这件事情你写论文或者写作的说自定义过红了

2142
01:14:53,000 --> 01:14:54,000
有啊

2143
01:14:54,000 --> 01:14:57,000
那你自定义的红到哪个程度了

2144
01:14:57,000 --> 01:14:58,000
没有很复杂

2145
01:14:58,000 --> 01:15:00,000
就是大概四五个命令吧

2146
01:15:00,000 --> 01:15:01,000
了不起了

2147
01:15:01,000 --> 01:15:03,000
然后定义成一个红

2148
01:15:03,000 --> 01:15:05,000
我从来没有我自定义的红

2149
01:15:05,000 --> 01:15:06,000
我这么说

2150
01:15:06,000 --> 01:15:08,000
我其实从来没有真正意义上写过 Tag

2151
01:15:08,000 --> 01:15:10,000
我其实都在都在写拉 Tag

2152
01:15:10,000 --> 01:15:12,000
就是 Tag 底层那些命令

2153
01:15:12,000 --> 01:15:14,000
我从来没有碰过

2154
01:15:14,000 --> 01:15:15,000
那这儿我倒是可以介绍一下

2155
01:15:15,000 --> 01:15:18,000
就是 Tag 底层大概是一个什么样子

2156
01:15:18,000 --> 01:15:18,000
就是我从来没有真正意义上写过 Tag

2157
01:15:18,000 --> 01:15:21,000
首先说 Tag 吧

2158
01:15:21,000 --> 01:15:23,000
就是最古早的

2159
01:15:23,000 --> 01:15:24,000
就是原汁原味的 Tag

2160
01:15:24,000 --> 01:15:27,000
有时候也被人们称为 Plain Tag

2161
01:15:27,000 --> 01:15:30,000
它的底层是用一种

2162
01:15:30,000 --> 01:15:33,000
我们最早提到的叫 Web

2163
01:15:33,000 --> 01:15:34,000
这种编程语言写的

2164
01:15:34,000 --> 01:15:36,000
而 Web 看起来是什么样的

2165
01:15:36,000 --> 01:15:39,000
高德纳的另外一个理念叫做

2166
01:15:39,000 --> 01:15:41,000
Literature Programming

2167
01:15:41,000 --> 01:15:42,000
文学编程

2168
01:15:42,000 --> 01:15:44,000
这个文学编程

2169
01:15:44,000 --> 01:15:46,000
这个东西就是他写 Web 的时候

2170
01:15:46,000 --> 01:15:48,000
期间发明的

2171
01:15:48,000 --> 01:15:50,000
出来的一套开发理念

2172
01:15:50,000 --> 01:15:50,000
你可以这么理解

2173
01:15:50,000 --> 01:15:53,000
然后他这套理念大概的意思就是说

2174
01:15:53,000 --> 01:15:55,000
我写程序要像写一篇文章一样

2175
01:15:55,000 --> 01:15:56,000
就是我要有

2176
01:15:56,000 --> 01:15:58,000
启程转合

2177
01:15:58,000 --> 01:16:01,000
就是他要

2178
01:16:01,000 --> 01:16:04,000
他说我要用人类的语言

2179
01:16:04,000 --> 01:16:06,000
用读者能够理解的语言

2180
01:16:06,000 --> 01:16:07,000
去描述这个程序

2181
01:16:07,000 --> 01:16:10,000
然后我这个程序本身是欠在

2182
01:16:10,000 --> 01:16:12,000
我的写的文章里面的

2183
01:16:12,000 --> 01:16:13,000
这个说法可能比较抽象

2184
01:16:13,000 --> 01:16:15,000
具体来说就是说他一开始会

2185
01:16:15,000 --> 01:16:17,000
比如说他用写注释的方式来写说

2186
01:16:17,000 --> 01:16:17,000
我这个程序是欠在我的写的文章里面的

2187
01:16:18,000 --> 01:16:18,000
就是干嘛的

2188
01:16:18,000 --> 01:16:20,000
然后我现在要开始一个 section

2189
01:16:20,000 --> 01:16:23,000
这个 section 里面包含了以下 variable

2190
01:16:23,000 --> 01:16:24,000
然后这些 variable

2191
01:16:24,000 --> 01:16:25,000
每个 variable 是拿来干嘛的

2192
01:16:25,000 --> 01:16:27,000
然后用 Web 呢

2193
01:16:27,000 --> 01:16:29,000
你可以去分析你刚才写的这篇文章

2194
01:16:29,000 --> 01:16:31,000
把里面你所有提到的

2195
01:16:31,000 --> 01:16:32,000
比如说你刚才说我要

2196
01:16:32,000 --> 01:16:34,000
以下要使用

2197
01:16:34,000 --> 01:16:35,000
42 个 variable

2198
01:16:35,000 --> 01:16:36,000
然后每个 variable

2199
01:16:36,000 --> 01:16:37,000
它都有一个描述

2200
01:16:37,000 --> 01:16:38,000
然后用 Web

2201
01:16:38,000 --> 01:16:41,000
可以把这些 variable 描述抽

2202
01:16:41,000 --> 01:16:42,000
抽离出来

2203
01:16:42,000 --> 01:16:43,000
然后生成一个程序

2204
01:16:43,000 --> 01:16:44,000
这个程序是可以编译的

2205
01:16:44,000 --> 01:16:46,000
那么这个程序是什么

2206
01:16:46,000 --> 01:16:47,000
具体是什么程序呢

2207
01:16:47,000 --> 01:16:50,000
在古早的 Plain Tech 里面

2208
01:16:50,000 --> 01:16:52,000
这个程序是 Pascal 的一个字体

2209
01:16:52,000 --> 01:16:55,000
不过我们的节目听众就不用解释

2210
01:16:55,000 --> 01:16:56,000
Pascal 是什么了是吗

2211
01:16:56,000 --> 01:16:57,000
对

2212
01:16:57,000 --> 01:16:59,000
然后它的 Web 有另外一个

2213
01:16:59,000 --> 01:17:01,000
有另外一个工具吧

2214
01:17:01,000 --> 01:17:04,000
这个工具的用途是

2215
01:17:04,000 --> 01:17:05,000
它的作用是

2216
01:17:05,000 --> 01:17:06,000
把你刚才写的这篇文章

2217
01:17:06,000 --> 01:17:08,000
排印出来

2218
01:17:08,000 --> 01:17:11,000
就是生成 Tech 来达到一个

2219
01:17:11,000 --> 01:17:14,000
更加易于阅读的这么一个状态

2220
01:17:14,000 --> 01:17:14,000
就是说它

2221
01:17:14,000 --> 01:17:17,000
它的所谓 Literature Program

2222
01:17:17,000 --> 01:17:19,000
的理念里面实现了两件事情

2223
01:17:19,000 --> 01:17:22,000
一件事情是让你写出来文章

2224
01:17:22,000 --> 01:17:25,000
变成一个可以执行的程序

2225
01:17:25,000 --> 01:17:27,000
另外一个功能是让你写的文章

2226
01:17:27,000 --> 01:17:31,000
有一个适合阅读的 presentation

2227
01:17:31,000 --> 01:17:33,000
这么一个功能

2228
01:17:33,000 --> 01:17:35,000
OK 这是 Plain Tech

2229
01:17:35,000 --> 01:17:36,000
然后这个 Plain Tech

2230
01:17:36,000 --> 01:17:37,000
因为它用的是 Pascal

2231
01:17:37,000 --> 01:17:40,000
然后如果你要坚持使用它的话

2232
01:17:40,000 --> 01:17:42,000
你等于你每一个环境里面

2233
01:17:42,000 --> 01:17:44,000
都要有一个 Pascal 编译器

2234
01:17:44,000 --> 01:17:46,000
而众多都是 Pascal 这个语言

2235
01:17:46,000 --> 01:17:47,000
现在已经示威了

2236
01:17:47,000 --> 01:17:49,000
所以后来有个人写了一个东西

2237
01:17:49,000 --> 01:17:51,000
叫做 Web 2 C

2238
01:17:51,000 --> 01:17:55,000
就是采用 C 语言来描述

2239
01:17:55,000 --> 01:17:58,000
这个 Web 里面的程序

2240
01:17:58,000 --> 01:17:59,000
大概就是这样

2241
01:17:59,000 --> 01:18:00,000
后来有个越南人

2242
01:18:00,000 --> 01:18:04,000
他在捷克的一所大学里面

2243
01:18:04,000 --> 01:18:05,000
念博士的时候

2244
01:18:05,000 --> 01:18:08,000
写了一个程序叫做 PDF Tech

2245
01:18:08,000 --> 01:18:09,000
然后这个 PDF Tech

2246
01:18:09,000 --> 01:18:11,000
他又跳过了

2247
01:18:11,000 --> 01:18:12,000
之前我们一开始介绍的

2248
01:18:12,000 --> 01:18:14,000
那个 Tech 要生成一个 DVI 的这一步

2249
01:18:14,000 --> 01:18:17,000
就是他改为直接生成一个

2250
01:18:17,000 --> 01:18:19,000
PDF 文件

2251
01:18:19,000 --> 01:18:21,000
然后这个东西是用的是 Web 2 C

2252
01:18:21,000 --> 01:18:23,000
就是说现在事实上

2253
01:18:23,000 --> 01:18:26,000
最广为使用的这么一个引擎

2254
01:18:26,000 --> 01:18:28,000
PDF Tech

2255
01:18:28,000 --> 01:18:29,000
它是基于 Web 2 C 的

2256
01:18:29,000 --> 01:18:31,000
然后它最基本的

2257
01:18:31,000 --> 01:18:32,000
最核心的这样一个东西

2258
01:18:32,000 --> 01:18:34,000
是 C 语言的一个字迹

2259
01:18:34,000 --> 01:18:36,000
大概就这样

2260
01:18:36,000 --> 01:18:38,000
然后现在还有一个引擎

2261
01:18:38,000 --> 01:18:39,000
叫做 Lua Tech

2262
01:18:39,000 --> 01:18:40,000
然后 Lua Tech 就是

2263
01:18:40,000 --> 01:18:42,000
试图把 Tet 的整个引擎

2264
01:18:42,000 --> 01:18:43,000
暴露给 Lua

2265
01:18:43,000 --> 01:18:45,000
这个本质上还是

2266
01:18:45,000 --> 01:18:47,000
嵌入到 C 里面的

2267
01:18:47,000 --> 01:18:49,000
这样一个语言

2268
01:18:49,000 --> 01:18:50,000
然后你可以用 Lua

2269
01:18:50,000 --> 01:18:52,000
来做一些比较高层开发

2270
01:18:53,000 --> 01:18:56,000
大概底层是这样一个现状

2271
01:18:56,000 --> 01:18:56,000
没有

2272
01:18:56,000 --> 01:19:00,000
如果你要说这个 Tech 的发展的话

2273
01:19:00,000 --> 01:19:01,000
刚才那个越南人

2274
01:19:01,000 --> 01:19:04,000
那个他是不是叫 Han Tee Tan

2275
01:19:04,000 --> 01:19:05,000
是吧

2276
01:19:05,000 --> 01:19:06,000
我不会念

2277
01:19:06,000 --> 01:19:07,000
我也不会念

2278
01:19:07,000 --> 01:19:08,000
还是不要侮辱越南人

2279
01:19:08,000 --> 01:19:09,000
对不起

2280
01:19:11,000 --> 01:19:12,000
肯定是念错了

2281
01:19:12,000 --> 01:19:13,000
我觉得

2282
01:19:13,000 --> 01:19:17,000
但是因为后面就有很多这样的扩展吧

2283
01:19:17,000 --> 01:19:17,000
对吧

2284
01:19:17,000 --> 01:19:20,000
中国的话不是李阿玲他们就也在做

2285
01:19:20,000 --> 01:19:23,000
他那个是什么 PtechNG 是吧

2286
01:19:23,000 --> 01:19:24,000
这个我还真不知道

2287
01:19:24,000 --> 01:19:27,000
他是用 C 语言开发的

2288
01:19:27,000 --> 01:19:30,000
当年他那个是 YNY 的 Tech

2289
01:19:30,000 --> 01:19:34,000
重新开始写的一个东西

2290
01:19:34,000 --> 01:19:37,000
然后就可以直接输出 PDF 的

2291
01:19:37,000 --> 01:19:38,000
那是李阿玲

2292
01:19:38,000 --> 01:19:39,000
这个东西现在还存在吗

2293
01:19:39,000 --> 01:19:40,000
对李阿玲他自己在维护

2294
01:19:40,000 --> 01:19:43,000
这个名字有点耳熟

2295
01:19:43,000 --> 01:19:43,000
对

2296
01:19:43,000 --> 01:19:45,000
他的真名叫马启元

2297
01:19:45,000 --> 01:19:47,000
然后在知乎上也是很活跃的

2298
01:19:47,000 --> 01:19:47,000
啊

2299
01:19:47,000 --> 01:19:48,000
OK

2300
01:19:48,000 --> 01:19:49,000
太厉害了

2301
01:19:49,000 --> 01:19:51,000
一个人维护这么一整套东西

2302
01:19:51,000 --> 01:19:53,000
那个 LuaTag 补充一点

2303
01:19:53,000 --> 01:19:56,000
他其实是为了解决原始的那个 Tag

2304
01:19:56,000 --> 01:19:58,000
不好编程扩展的问题嘛

2305
01:19:58,000 --> 01:20:01,000
所以他其实把那个 Lua 的那个比较一个

2306
01:20:01,000 --> 01:20:04,000
就是 Lua 本来是一个非常简单的语言

2307
01:20:04,000 --> 01:20:07,000
他在很多游戏里面是作为这种控制语言存在的

2308
01:20:07,000 --> 01:20:10,000
因为他很好的可以很方便的嵌入到 C 里面去

2309
01:20:10,000 --> 01:20:11,000
对吧

2310
01:20:11,000 --> 01:20:17,000
魔术世界 LuaTag 就是说他整个把这个 Lua 的这个解释器嵌到这个 Tag 里面去

2311
01:20:17,000 --> 01:20:19,000
然后你很多事情 Tag 里面不方便做的

2312
01:20:19,000 --> 01:20:21,000
其实对对绝大数据来讲

2313
01:20:21,000 --> 01:20:24,000
就是基本上但凡任何事情你需要编程控制的

2314
01:20:24,000 --> 01:20:26,000
你都转到 Lua 去会比较

2315
01:20:26,000 --> 01:20:28,000
就是你用起来会比较舒服一些

2316
01:20:28,000 --> 01:20:30,000
然后 LuaTag 做了这么一个事

2317
01:20:30,000 --> 01:20:32,000
但是我记得还有好几个

2318
01:20:32,000 --> 01:20:36,000
就当时还存在就是从到 Unicode 过渡的那个阶段嘛

2319
01:20:36,000 --> 01:20:38,000
还有那个叫什么 XETech 嘛

2320
01:20:38,000 --> 01:20:39,000
我不知道这个怎么念

2321
01:20:39,000 --> 01:20:41,000
就是他的 XETech

2322
01:20:41,000 --> 01:20:42,000
ZTech

2323
01:20:42,000 --> 01:20:43,000
ZTech 是吧

2324
01:20:43,000 --> 01:20:43,000
ZTech

2325
01:20:43,000 --> 01:20:43,000
对

2326
01:20:43,000 --> 01:20:46,000
就是就是然后还有各种各种变种

2327
01:20:46,000 --> 01:20:47,000
什么 PDF

2328
01:20:47,000 --> 01:20:48,000
ZTech

2329
01:20:48,000 --> 01:20:50,000
这实在是太多了

2330
01:20:50,000 --> 01:20:51,000
我当时看着头都大了

2331
01:20:51,000 --> 01:20:56,000
但好像现在反而就是该发展的发展

2332
01:20:56,000 --> 01:20:58,000
然后也就他也经过了现代化的过程嘛

2333
01:20:58,000 --> 01:21:01,000
现在留存下来还在活跃开发

2334
01:21:01,000 --> 01:21:02,000
然后功能比较全的

2335
01:21:02,000 --> 01:21:03,000
好像也就那么两三个了

2336
01:21:03,000 --> 01:21:08,000
对 ZTech 应该是可能现在最怎么说高级

2337
01:21:08,000 --> 01:21:10,000
或者说最 feature complete 的一个一个发行榜

2338
01:21:10,000 --> 01:21:12,000
一个引擎啊

2339
01:21:12,000 --> 01:21:15,000
就他首先他一开始出发刚出发的时候

2340
01:21:15,000 --> 01:21:17,000
就是以全面的 Unicode 的支持

2341
01:21:17,000 --> 01:21:18,000
社会出发电脑

2342
01:21:18,000 --> 01:21:20,000
然后他还支持 OpenType 之类的

2343
01:21:20,000 --> 01:21:21,000
你就是你用 ZTech 的话

2344
01:21:21,000 --> 01:21:24,000
你就可以使用你机器上装的文本

2345
01:21:24,000 --> 01:21:25,000
装的字体

2346
01:21:25,000 --> 01:21:26,000
对这是很大的一个坑

2347
01:21:26,000 --> 01:21:27,000
对这是很大的一个坑

2348
01:21:27,000 --> 01:21:32,000
就是你可能说我想要用 Tek 来排我的东西

2349
01:21:32,000 --> 01:21:35,000
但是如果你使用比如说 Teklive 的话

2350
01:21:35,000 --> 01:21:39,000
你会发现自己没有办法使用系统上有的字体

2351
01:21:39,000 --> 01:21:40,000
这是很蛋疼的一件事情

2352
01:21:40,000 --> 01:21:42,000
但是你要是用 ZTech 的话

2353
01:21:42,000 --> 01:21:43,000
就可以绕开这个坑

2354
01:21:43,000 --> 01:21:45,000
ZTech 本最开始的时候

2355
01:21:45,000 --> 01:21:46,000
他就是在那个 MacOS 的那个网站上

2356
01:21:46,000 --> 01:21:47,000
他就是在那个 MacOS 的网站上

2357
01:21:47,000 --> 01:21:48,000
去开发的嘛

2358
01:21:48,000 --> 01:21:50,000
所以他当时搞了那种

2359
01:21:50,000 --> 01:21:52,000
所谓的这种先进的字体排印技术

2360
01:21:52,000 --> 01:21:53,000
各种帘子啊

2361
01:21:53,000 --> 01:21:54,000
Legature 啊

2362
01:21:54,000 --> 01:21:57,000
各种这种就是高级的 OpenType 那些特性

2363
01:21:57,000 --> 01:21:58,000
在其他的当时

2364
01:21:58,000 --> 01:22:00,000
在其他的 Type 发行版里面都是不能支持的

2365
01:22:00,000 --> 01:22:02,000
因为他完全不是一个

2366
01:22:02,000 --> 01:22:04,000
不是一个体系

2367
01:22:04,000 --> 01:22:05,000
也不是一个技术路线

2368
01:22:05,000 --> 01:22:06,000
他然后

2369
01:22:06,000 --> 01:22:07,000
是一个年代的东西

2370
01:22:07,000 --> 01:22:08,000
对完全不是一个年代的东西

2371
01:22:08,000 --> 01:22:09,000
但是当时那个 ZTech

2372
01:22:09,000 --> 01:22:12,000
他把这两个结合在了一起

2373
01:22:12,000 --> 01:22:15,000
然后当时给到我们看到的一些实现的效果

2374
01:22:15,000 --> 01:22:17,000
那是非常非常惊艳的

2375
01:22:17,000 --> 01:22:18,000
By the way

2376
01:22:18,000 --> 01:22:20,000
那个版本号无限

2377
01:22:20,000 --> 01:22:22,000
接近于 0.99999

2378
01:22:22,000 --> 01:22:23,000
就是这个 ZTech

2379
01:22:23,000 --> 01:22:26,000
就像刚才我们讨论的这个

2380
01:22:26,000 --> 01:22:27,000
Latech 还有 ZTech

2381
01:22:27,000 --> 01:22:29,000
包括像 PDF Tech

2382
01:22:29,000 --> 01:22:30,000
他们跟这个

2383
01:22:30,000 --> 01:22:32,000
我们最开始讲的这个

2384
01:22:32,000 --> 01:22:34,000
TechLive 这类的这个发行版

2385
01:22:34,000 --> 01:22:36,000
是什么样的一个关系呢

2386
01:22:36,000 --> 01:22:38,000
还是说后面我们说的这些

2387
01:22:38,000 --> 01:22:39,000
像 Latech 这样的东西

2388
01:22:39,000 --> 01:22:42,000
他们只是负责排版的这个功能

2389
01:22:42,000 --> 01:22:43,000
他们只是一个排版引擎

2390
01:22:43,000 --> 01:22:43,000
是这样的

2391
01:22:43,000 --> 01:22:45,000
这个解释起来又复杂

2392
01:22:45,000 --> 01:22:46,000
ZTech

2393
01:22:46,000 --> 01:22:48,000
应该是比较像引擎的一个东西

2394
01:22:48,000 --> 01:22:50,000
但是 ZTech 面临一个问题

2395
01:22:50,000 --> 01:22:52,000
就是如果你要从头开始支持

2396
01:22:52,000 --> 01:22:54,000
Unicode 和 OpenType 的话

2397
01:22:54,000 --> 01:22:56,000
你会需要更多的工具

2398
01:22:56,000 --> 01:22:58,000
所以 ZTech 除了实现

2399
01:22:58,000 --> 01:23:00,000
Type 这个程序之外

2400
01:23:00,000 --> 01:23:02,000
它还有一些别的什么

2401
01:23:02,000 --> 01:23:04,000
就类似于比如说

2402
01:23:04,000 --> 01:23:07,000
要去处理 Unicode 的

2403
01:23:07,000 --> 01:23:09,000
或者说处理 OpenType 的

2404
01:23:09,000 --> 01:23:11,000
那个字体格式的一些工具

2405
01:23:11,000 --> 01:23:14,000
就等于它有核心的那些程序之外

2406
01:23:14,000 --> 01:23:15,000
还有一些扩展

2407
01:23:16,000 --> 01:23:18,000
但是 PDF Tech 的话

2408
01:23:18,000 --> 01:23:21,000
就是完全只是重新实现了

2409
01:23:21,000 --> 01:23:23,000
Tech 和 Latech 这两个程序

2410
01:23:23,000 --> 01:23:24,000
就他们基本上都是引擎

2411
01:23:24,000 --> 01:23:25,000
但是他们的规模是

2412
01:23:25,000 --> 01:23:27,000
他们的覆盖范围是不一样的

2413
01:23:27,000 --> 01:23:29,000
比如说有些一个可能只是一个内燃机

2414
01:23:29,000 --> 01:23:31,000
另外一个除了内燃机之外

2415
01:23:31,000 --> 01:23:33,000
还有一个那个 PowerTrain 在那边

2416
01:23:33,000 --> 01:23:36,000
那他们跟 TechLive 这样子的

2417
01:23:36,000 --> 01:23:37,000
然后 TechLive 就是

2418
01:23:37,000 --> 01:23:39,000
比如说 TechLive 应该应该用的是 PDF

2419
01:23:39,000 --> 01:23:41,000
Latech 或者他两个都有

2420
01:23:41,000 --> 01:23:43,000
他既有 Tech 也有 PDF Tech

2421
01:23:43,000 --> 01:23:45,000
然后他把所有这些东西外面

2422
01:23:45,000 --> 01:23:46,000
加上一套编辑器啊

2423
01:23:46,000 --> 01:23:48,000
加上那个工作流啊

2424
01:23:48,000 --> 01:23:50,000
然后加上一些教学工具之类的

2425
01:23:50,000 --> 01:23:51,000
然后打包给你

2426
01:23:51,000 --> 01:23:55,000
说到 TechLive

2427
01:23:55,000 --> 01:23:57,000
我们是不是要讲一下

2428
01:23:57,000 --> 01:23:59,000
他这个所谓的他这个官方开发组

2429
01:24:00,000 --> 01:24:03,000
叫做 TOG 的这个 Tech User Group

2430
01:24:03,000 --> 01:24:04,000
应该怎么翻译

2431
01:24:04,000 --> 01:24:05,000
粉丝群吗

2432
01:24:05,000 --> 01:24:08,000
Tech 不是 TechLive 的官方开发组啊

2433
01:24:08,000 --> 01:24:13,000
Tech 是所有的 Tech 的用户的一个群组

2434
01:24:13,000 --> 01:24:14,000
对啊

2435
01:24:14,000 --> 01:24:15,000
Tech 而且

2436
01:24:16,000 --> 01:24:20,000
好那一开始就经常会在里面发一些东西嘛

2437
01:24:20,000 --> 01:24:21,000
在很早以前

2438
01:24:21,000 --> 01:24:24,000
然后会做一些更新啊什么的

2439
01:24:24,000 --> 01:24:26,000
一直都在那个 Tech

2440
01:24:26,000 --> 01:24:30,000
Anyway 我们跟大家介绍一下这个社区吧

2441
01:24:30,000 --> 01:24:33,000
我之前看过他们写的一些论文

2442
01:24:33,000 --> 01:24:34,000
跟自己排行有关的

2443
01:24:34,000 --> 01:24:35,000
我倒是看过一样

2444
01:24:35,000 --> 01:24:36,000
还有一些采访稿

2445
01:24:36,000 --> 01:24:40,000
因为本来 Tech 它就是一个排版引擎嘛

2446
01:24:40,000 --> 01:24:42,000
虽然他们必须要研究排版嘛

2447
01:24:42,000 --> 01:24:45,000
所以很多他们研究的排版的论文

2448
01:24:45,000 --> 01:24:46,000
就发在这个 TechLive 的社区里面

2449
01:24:46,000 --> 01:24:47,000
就是 Tag 上面

2450
01:24:47,000 --> 01:24:50,000
就 Tag 之于 Tech 的关系

2451
01:24:50,000 --> 01:24:57,000
你可以认为有点类似于那个 Gnu 之于这个 Unix 或者是 Linux 这个的一个关系

2452
01:24:57,000 --> 01:24:59,000
这不就是 Python 跟 Pug 之间的关系吗

2453
01:24:59,000 --> 01:25:01,000
Python 跟 PUG 之间就是这样

2454
01:25:01,000 --> 01:25:02,000
对对对

2455
01:25:02,000 --> 01:25:05,000
它有一个这种是一个比较范的那种用户的组织

2456
01:25:05,000 --> 01:25:09,000
然后很多这种项目都是挂在这个组织的这个名下

2457
01:25:09,000 --> 01:25:11,000
或者是被这个组织 sponsor 的

2458
01:25:11,000 --> 01:25:14,000
比如说我们看到刚才提了那好几个 TechLive 啊

2459
01:25:14,000 --> 01:25:15,000
MechTech 啊

2460
01:25:15,000 --> 01:25:16,000
MechTech 啊

2461
01:25:16,000 --> 01:25:19,000
它都是在这个组织的这个旗下

2462
01:25:19,000 --> 01:25:22,000
然后就是这个组织的这个成员吧

2463
01:25:22,000 --> 01:25:23,000
然后在开发维护

2464
01:25:23,000 --> 01:25:24,000
就大概是这么一些

2465
01:25:24,000 --> 01:25:26,000
然后还有一些是非组织的

2466
01:25:26,000 --> 01:25:28,000
就是说就是这就在 Tag

2467
01:25:28,000 --> 01:25:31,000
这个 Tag Group 以外的有这种各种专业分支的领域的

2468
01:25:31,000 --> 01:25:32,000
那也有对吧

2469
01:25:32,000 --> 01:25:36,000
它就不严格是大一统的这么一个群体吧

2470
01:25:36,000 --> 01:25:38,000
因为它原来的名字就是叫 Tech User Group 嘛

2471
01:25:38,000 --> 01:25:39,000
对吧

2472
01:25:39,000 --> 01:25:40,000
Tech 的用户组嘛

2473
01:25:40,000 --> 01:25:42,000
所以呢就简称 TUG

2474
01:25:42,000 --> 01:25:43,000
对对

2475
01:25:43,000 --> 01:25:45,000
你只要用都可以在里面去申请加入

2476
01:25:45,000 --> 01:25:46,000
然后他们呢

2477
01:25:46,000 --> 01:25:48,000
他们有一个叫 Tag Boat

2478
01:25:48,000 --> 01:25:49,000
就拖船嘛

2479
01:25:49,000 --> 01:25:51,000
因为 Tag 本身是拖船的意思嘛

2480
01:25:51,000 --> 01:25:52,000
所以他们

2481
01:25:52,000 --> 01:25:53,000
传了个文字游戏

2482
01:25:53,000 --> 01:25:56,000
他们后来发很多那些发的文章啊

2483
01:25:56,000 --> 01:25:59,000
就都发在那个 Tag Boat 里面

2484
01:25:59,000 --> 01:26:01,000
那里面其实如果

2485
01:26:01,000 --> 01:26:02,000
刚才说的嘛

2486
01:26:02,000 --> 01:26:04,000
有很多采访啊

2487
01:26:04,000 --> 01:26:06,000
去采访高德纳先生啊

2488
01:26:06,000 --> 01:26:08,000
还有各种字体设计师啊

2489
01:26:08,000 --> 01:26:11,000
还有排印的一些研究的论文啊

2490
01:26:11,000 --> 01:26:13,000
就都会发在 Tag Boat 里面

2491
01:26:13,000 --> 01:26:14,000
对说到这里

2492
01:26:14,000 --> 01:26:15,000
我提另外一个东西

2493
01:26:15,000 --> 01:26:16,000
其实非常有意义的

2494
01:26:16,000 --> 01:26:19,000
就是刚才我们讲的 Tag 啊

2495
01:26:19,000 --> 01:26:20,000
那个拉 Tag 也好

2496
01:26:20,000 --> 01:26:22,000
它其实还是偏向于这种文档啊

2497
01:26:22,000 --> 01:26:22,000
文稿啊

2498
01:26:22,000 --> 01:26:24,000
这种长篇的论文为主

2499
01:26:24,000 --> 01:26:27,000
还有一个大的分支的一个流派

2500
01:26:27,000 --> 01:26:30,000
是基于 Tag 来做一些更加 fancy

2501
01:26:30,000 --> 01:26:31,000
就是你想都不想

2502
01:26:31,000 --> 01:26:33,000
想不到的一些这种图形

2503
01:26:33,000 --> 01:26:34,000
你不会觉得它是用那个

2504
01:26:34,000 --> 01:26:36,000
这个 Tag 编出来的

2505
01:26:36,000 --> 01:26:38,000
那个排印出来的东西

2506
01:26:38,000 --> 01:26:38,000
但确实是

2507
01:26:38,000 --> 01:26:41,000
这套体系叫做这个 Context

2508
01:26:41,000 --> 01:26:42,000
有个 T 了哈

2509
01:26:42,000 --> 01:26:42,000
对吧

2510
01:26:42,000 --> 01:26:43,000
编名叫 Context

2511
01:26:43,000 --> 01:26:46,000
就是那个 Context

2512
01:26:46,000 --> 01:26:46,000
那个字啊

2513
01:26:46,000 --> 01:26:48,000
但是它的中间那个 Tex

2514
01:26:48,000 --> 01:26:50,000
是那个 Tag 的那个拼法

2515
01:26:50,000 --> 01:26:51,000
就大写的 T 大写的 X

2516
01:26:51,000 --> 01:26:52,000
然后小写的 E

2517
01:26:52,000 --> 01:26:53,000
这个是干嘛呢

2518
01:26:53,000 --> 01:26:56,000
当时我有一段时间非常痴迷这个东西

2519
01:26:56,000 --> 01:26:56,000
就是

2520
01:26:56,000 --> 01:26:58,000
就你们写 PPT

2521
01:26:58,000 --> 01:26:59,000
要不就是用 PowerPoint

2522
01:26:59,000 --> 01:27:01,000
要不就是用那个

2523
01:27:01,000 --> 01:27:03,000
PowerPoint 是 PPT 嘛

2524
01:27:03,000 --> 01:27:07,000
你写这个幻灯片

2525
01:27:07,000 --> 01:27:09,000
就是数码幻灯片的时候

2526
01:27:09,000 --> 01:27:11,000
你要不就用 PowerPoint 是 PPT

2527
01:27:11,000 --> 01:27:12,000
要不就用那个 Keynote

2528
01:27:12,000 --> 01:27:14,000
最后结尾是那个.k 的那个文件了

2529
01:27:14,000 --> 01:27:15,000
但是

2530
01:27:15,000 --> 01:27:16,000
你也可以用

2531
01:27:16,000 --> 01:27:19,000
Tag 这套逻辑来写这个 slide

2532
01:27:19,000 --> 01:27:21,000
而且当时我记得

2533
01:27:21,000 --> 01:27:23,000
我有很多这个上课的这种教授

2534
01:27:23,000 --> 01:27:25,000
他们的这个版书啊

2535
01:27:25,000 --> 01:27:26,000
他们也有版书的嘛

2536
01:27:26,000 --> 01:27:29,000
就是用这个 Tag 来排版出来

2537
01:27:29,000 --> 01:27:31,000
投射到上面去了

2538
01:27:31,000 --> 01:27:34,000
但是你如果直接用那个原始的那个 Tag

2539
01:27:34,000 --> 01:27:34,000
或者拉 Tag

2540
01:27:34,000 --> 01:27:36,000
你说你把这个正常的

2541
01:27:36,000 --> 01:27:37,000
它是定义一个比如说 letter

2542
01:27:37,000 --> 01:27:38,000
或者是 A 4 的一个纸

2543
01:27:38,000 --> 01:27:40,000
是一个长条的一个结构

2544
01:27:40,000 --> 01:27:42,000
你投到那个屏幕上 4 比 3

2545
01:27:42,000 --> 01:27:43,000
它是一个宽的结构

2546
01:27:43,000 --> 01:27:44,000
不太合适嘛

2547
01:27:44,000 --> 01:27:45,000
然后说你可以说啊

2548
01:27:45,000 --> 01:27:46,000
那我重新把那个纸

2549
01:27:46,000 --> 01:27:47,000
纸横一下

2550
01:27:47,000 --> 01:27:48,000
好像也可以凑合着用

2551
01:27:48,000 --> 01:27:49,000
但是还是排出来

2552
01:27:49,000 --> 01:27:50,000
那个东西是比较无趣嘛

2553
01:27:50,000 --> 01:27:51,000
对吧

2554
01:27:51,000 --> 01:27:52,000
我们知道很多这种版书啊

2555
01:27:52,000 --> 01:27:53,000
或者这种 slide

2556
01:27:53,000 --> 01:27:55,000
它需要有一些有趣的东西

2557
01:27:55,000 --> 01:27:56,000
有需要图形啊

2558
01:27:56,000 --> 01:27:58,000
各种箭头去指点啊

2559
01:27:58,000 --> 01:27:59,000
各种甚至是

2560
01:27:59,000 --> 01:28:01,000
渐变过场动画什么的

2561
01:28:01,000 --> 01:28:04,000
这些在传统的那个拉 Tag 里面

2562
01:28:04,000 --> 01:28:05,000
都是非常难以实现的

2563
01:28:05,000 --> 01:28:08,000
然后就有人搞了这个 context

2564
01:28:08,000 --> 01:28:10,000
contact 这套系统

2565
01:28:10,000 --> 01:28:13,000
它可以实际上非常完美的这种

2566
01:28:13,000 --> 01:28:14,000
就是各种图形啊

2567
01:28:14,000 --> 01:28:16,000
精确的这种图案的生成

2568
01:28:16,000 --> 01:28:17,000
然后你可以做一些动画呀

2569
01:28:17,000 --> 01:28:18,000
特效啊

2570
01:28:18,000 --> 01:28:20,000
你看到那个结果

2571
01:28:20,000 --> 01:28:23,000
你不会认为那个东西是用 Tag 做出来

2572
01:28:23,000 --> 01:28:24,000
但它确实是

2573
01:28:24,000 --> 01:28:25,000
这个大家可以去试一下

2574
01:28:25,000 --> 01:28:28,000
然后就有一个叫做 contextgarden.net

2575
01:28:28,000 --> 01:28:29,000
这个网站上

2576
01:28:29,000 --> 01:28:31,000
是他们的一个相当于是官网的东西嘛

2577
01:28:31,000 --> 01:28:33,000
你可以看一下他的那些试列文件

2578
01:28:33,000 --> 01:28:35,000
那个是非常 fancy 的一个东西

2579
01:28:35,000 --> 01:28:37,000
OK 我明白了

2580
01:28:37,000 --> 01:28:41,000
这个 context 之于你就像 review.js 之于我

2581
01:28:41,000 --> 01:28:42,000
可以这么理解

2582
01:28:42,000 --> 01:28:43,000
就本质上你是

2583
01:28:43,000 --> 01:28:45,000
你是在编程化的方式

2584
01:28:45,000 --> 01:28:47,000
去生成你的那个幻灯片

2585
01:28:47,000 --> 01:28:50,000
而不是用这个鼠标在里下点点点的方式

2586
01:28:50,000 --> 01:28:51,000
来生成这个幻灯片

2587
01:28:51,000 --> 01:28:54,000
你可以精确的描述每一个动效的

2588
01:28:54,000 --> 01:28:55,000
每一个这个数学描述

2589
01:28:55,000 --> 01:28:56,000
你都可以实现出来

2590
01:28:56,000 --> 01:28:59,000
这个当时做出来的非常令人惊艳

2591
01:28:59,000 --> 01:29:00,000
如果你不想使用 Tag 的话

2592
01:29:00,000 --> 01:29:03,000
你可以试试我刚才说的这个 review.js

2593
01:29:03,000 --> 01:29:05,000
就是你如果你觉得 PPT 太过 hardcore

2594
01:29:05,000 --> 01:29:06,000
然后你

2595
01:29:06,000 --> 01:29:09,000
你想要使用编程方式来解决你的幻灯片问题

2596
01:29:09,000 --> 01:29:12,000
你可以试试我刚才说的 review.js

2597
01:29:12,000 --> 01:29:14,000
它是基本上就是你写 JavaScript 的

2598
01:29:14,000 --> 01:29:15,000
然后来生成

2599
01:29:15,000 --> 01:29:16,000
你的幻灯片

2600
01:29:16,000 --> 01:29:16,000
这样

2601
01:29:19,000 --> 01:29:20,000
我想起来了

2602
01:29:20,000 --> 01:29:22,000
刚才我们说到了 Mac 上面

2603
01:29:22,000 --> 01:29:23,000
Linux 上面

2604
01:29:23,000 --> 01:29:24,000
Windows 上面

2605
01:29:24,000 --> 01:29:27,000
但实际上还有现在就是我们现在处在这个网络时代

2606
01:29:27,000 --> 01:29:28,000
还有一个更简单的解决方法

2607
01:29:28,000 --> 01:29:31,000
就是如果你想要使用 Tag 的话

2608
01:29:31,000 --> 01:29:35,000
现在有很多所谓的在线 Tag 编辑器

2609
01:29:35,000 --> 01:29:37,000
然后有些是

2610
01:29:37,000 --> 01:29:39,000
对 software as a service

2611
01:29:39,000 --> 01:29:40,000
在云上的

2612
01:29:40,000 --> 01:29:42,000
对就好像现在我基本上写 Python 程序

2613
01:29:42,000 --> 01:29:44,000
或者写什么小程序的时候

2614
01:29:44,000 --> 01:29:45,000
需要写一个脚本的话

2615
01:29:45,000 --> 01:29:47,000
我已经不会在本地去写它了

2616
01:29:47,000 --> 01:29:50,000
我去去比如说 repair.it

2617
01:29:50,000 --> 01:29:54,000
或者是什么主持类的 online

2618
01:29:54,000 --> 01:29:55,000
直接云编程对吧

2619
01:29:55,000 --> 01:29:58,000
对 Latex 也有这样的云编程环境

2620
01:29:58,000 --> 01:30:02,000
其中比较知名的一个叫 overleaf

2621
01:30:02,000 --> 01:30:05,000
对它是可能现在用户群也蛮多的一个

2622
01:30:05,000 --> 01:30:07,000
虽然我我从来没有用过

2623
01:30:07,000 --> 01:30:09,000
但是有我曾经看到人用过

2624
01:30:09,000 --> 01:30:11,000
然后好像反响还蛮好

2625
01:30:11,000 --> 01:30:13,000
网址就是 overleaf.com

2626
01:30:13,000 --> 01:30:15,000
然后你在上面注册一下

2627
01:30:15,000 --> 01:30:17,000
你会得到一个编辑 Tag 的环境

2628
01:30:17,000 --> 01:30:21,000
然后它会给你实时就像那个 repo 一样

2629
01:30:21,000 --> 01:30:22,000
给你实时的生成一个 pdf

2630
01:30:22,000 --> 01:30:23,000
对还蛮好用的

2631
01:30:23,000 --> 01:30:25,000
而且好像价格也不是很贵吧

2632
01:30:25,000 --> 01:30:27,000
尤其是对学生来说

2633
01:30:27,000 --> 01:30:30,000
一个月九块钱就比如说你要写六个月的论文的话

2634
01:30:30,000 --> 01:30:31,000
你一个月九块钱

2635
01:30:31,000 --> 01:30:34,000
我觉得实在是相当便宜的

2636
01:30:35,000 --> 01:30:37,000
太方便了

2637
01:30:37,000 --> 01:30:41,000
让你一举忘掉如何安装和这个整这个环境的痛苦

2638
01:30:41,000 --> 01:30:43,000
而且随时随地都可以

2639
01:30:43,000 --> 01:30:45,000
你不用担心本地数据丢失

2640
01:30:45,000 --> 01:30:45,000
之类的问题

2641
01:30:45,000 --> 01:30:46,000
它是保存在云端的

2642
01:30:46,000 --> 01:30:49,000
就还是相当推荐的

2643
01:30:49,000 --> 01:30:50,000
这叫什么来着

2644
01:30:50,000 --> 01:30:52,000
Cloud Native Tag

2645
01:30:52,000 --> 01:30:55,000
1976 与 2021 的完美结合

2646
01:30:57,000 --> 01:30:58,000
这个我印象非常深

2647
01:30:58,000 --> 01:31:02,000
当时我在我用的应该是两千零几年的时候

2648
01:31:02,000 --> 01:31:05,000
就是前后晚就是两千零几年到 2010 年

2649
01:31:05,000 --> 01:31:06,000
这段是这个十年

2650
01:31:06,000 --> 01:31:08,000
这个 decade 之间

2651
01:31:08,000 --> 01:31:13,000
就那个时候还没有就是有这种就是云的这种这种 Tag 出现

2652
01:31:13,000 --> 01:31:14,000
但是因为那个时候的这个

2653
01:31:15,000 --> 01:31:16,000
这个 Cloud 的这个 info

2654
01:31:16,000 --> 01:31:18,000
就是设施还没有非常的完善嘛

2655
01:31:18,000 --> 01:31:20,000
就其实非常不好用

2656
01:31:20,000 --> 01:31:22,000
但如果说假设我现在让我丢到一个学校里面

2657
01:31:22,000 --> 01:31:23,000
让我再写一篇

2658
01:31:23,000 --> 01:31:26,000
我估计我也不会在自己电脑上安装这个破玩意儿

2659
01:31:26,000 --> 01:31:27,000
一次一次性的玩意儿

2660
01:31:27,000 --> 01:31:29,000
还是去这种用的云环境比较简单一些

2661
01:31:31,000 --> 01:31:32,000
对是

2662
01:31:32,000 --> 01:31:38,000
所以一个一个标准的这个 Tag 的编写的这个就当那个你编的那个流程是这样

2663
01:31:38,000 --> 01:31:40,000
但是我就说可以描述一下

2664
01:31:40,000 --> 01:31:42,000
当时你看到你电脑屏幕上应该是什么

2665
01:31:42,000 --> 01:31:44,000
比如我通常是一半屏幕

2666
01:31:45,000 --> 01:31:45,000
屏幕对开嘛

2667
01:31:45,000 --> 01:31:47,000
左右两边对吧

2668
01:31:47,000 --> 01:31:48,000
然后一边是这个源代码

2669
01:31:48,000 --> 01:31:53,000
就是那个 Tag 的这个原始的那个点 Tag 那个 source code

2670
01:31:53,000 --> 01:31:57,000
然后另外一边是生成的那个 PDF 的那个窗口对吧

2671
01:31:57,000 --> 01:32:04,000
然后把那个别记器的那个工作流程设为你这边只要以保存这个 Tag 的源代码

2672
01:32:04,000 --> 01:32:07,000
那么就自动在后台编译生成那个 PDF

2673
01:32:07,000 --> 01:32:09,000
然后在右边及时的展示出来

2674
01:32:09,000 --> 01:32:13,000
这样就可以勉强实现所见等

2675
01:32:13,000 --> 01:32:14,000
大概一秒钟

2676
01:32:14,000 --> 01:32:14,000
两秒钟

2677
01:32:14,000 --> 01:32:17,000
三秒钟之后做基础得嘛

2678
01:32:17,000 --> 01:32:21,000
然后当时有一个非常有趣的或者很 tricky 的一个实现的难点

2679
01:32:21,000 --> 01:32:25,000
就是说如果你这篇文章或者你编写的文档有十几页长对吧

2680
01:32:25,000 --> 01:32:29,000
然后你想要肯定是说你当前编写的那边保存的时候

2681
01:32:29,000 --> 01:32:36,000
刚好是他刷新出来在右边的那个 PDF 的那个也是对应到你大致位置的这一行

2682
01:32:36,000 --> 01:32:38,000
但不能严格一一对应

2683
01:32:38,000 --> 01:32:41,000
就这个当时也很多 tricky 的办法在做这件事情

2684
01:32:41,000 --> 01:32:43,000
这个我好像根本没有找到怎么解决

2685
01:32:43,000 --> 01:32:44,000
你刚才说你的典型编写

2686
01:32:44,000 --> 01:32:48,000
但我的典型编写就是就只有原代码而已

2687
01:32:48,000 --> 01:32:50,000
就是我会 concentrate

2688
01:32:50,000 --> 01:32:51,000
我先把内容写完

2689
01:32:51,000 --> 01:32:56,000
然后再一个一个去解决带给我的种种头疼的问题

2690
01:32:56,000 --> 01:32:57,000
嗯

2691
01:32:57,000 --> 01:32:59,000
等于先写再排版这样

2692
01:32:59,000 --> 01:33:02,000
所以你是在编写原代码的时候

2693
01:33:02,000 --> 01:33:04,000
脑子里面在浮现出他应该想要的效果

2694
01:33:04,000 --> 01:33:06,000
然后之后再去 debug

2695
01:33:06,000 --> 01:33:10,000
一个一个人肉 render 的这么一个过程

2696
01:33:10,000 --> 01:33:11,000
所以你写 markdown 也是这样子吧

2697
01:33:11,000 --> 01:33:13,000
先一遍 markdownsource 写完

2698
01:33:13,000 --> 01:33:14,000
然后再 render 出来去 tumbelicard

2699
01:33:14,000 --> 01:33:16,000
然后再开效再 preview 一下

2700
01:33:16,000 --> 01:33:18,000
而不是说这种 side by side 的方式

2701
01:33:18,000 --> 01:33:19,000
对差不多是这样

2702
01:33:19,000 --> 01:33:20,000
ok

2703
01:33:20,000 --> 01:33:22,000
这看你取决于你写什么东西了

2704
01:33:22,000 --> 01:33:25,000
如果你还是一个长的普通的文档的话

2705
01:33:25,000 --> 01:33:26,000
那可能还好点

2706
01:33:26,000 --> 01:33:28,000
因为比如说写论文的话

2707
01:33:28,000 --> 01:33:28,000
对吧

2708
01:33:28,000 --> 01:33:30,000
你论述的东西如果还是很长的话

2709
01:33:30,000 --> 01:33:35,000
你还是想去集中的先把这个论述的这个逻辑先写清楚嘛

2710
01:33:35,000 --> 01:33:38,000
但是如果你要在渲染一个公式的时候

2711
01:33:38,000 --> 01:33:40,000
那你你得先想象一下

2712
01:33:40,000 --> 01:33:40,000
猜一下

2713
01:33:40,000 --> 01:33:42,000
然后渲染出来看一下

2714
01:33:42,000 --> 01:33:42,000
哎

2715
01:33:42,000 --> 01:33:44,000
这个好像又跑位了不行了

2716
01:33:44,000 --> 01:33:44,000
回来调调

2717
01:33:44,000 --> 01:33:46,000
就会出现这个事情吗

2718
01:33:46,000 --> 01:33:48,000
不因为我可能用法比较奇怪

2719
01:33:48,000 --> 01:33:51,000
因为我用这个东西最常用的倒不是写论文这种常文的

2720
01:33:51,000 --> 01:33:53,000
而是写作业的时候

2721
01:33:53,000 --> 01:33:55,000
因为我当时说我写字不是很丑吗

2722
01:33:55,000 --> 01:33:59,000
有时候丑到以至于我自己都不知道我写的草稿上面是什么东西

2723
01:33:59,000 --> 01:34:01,000
所以我写作业的时候

2724
01:34:01,000 --> 01:34:04,000
其实我其实是在电脑上用 tech

2725
01:34:04,000 --> 01:34:07,000
拉 tech 这个方式去一步一步去进行演算的

2726
01:34:07,000 --> 01:34:09,000
所以我一定要看到那个最终结果

2727
01:34:09,000 --> 01:34:10,000
在想下一步是什么

2728
01:34:10,000 --> 01:34:13,000
你用那个做算术是吗

2729
01:34:13,000 --> 01:34:13,000
对对对

2730
01:34:13,000 --> 01:34:14,000
就有点这种感觉

2731
01:34:14,000 --> 01:34:16,000
比如说我要把那个图画到哪里

2732
01:34:16,000 --> 01:34:16,000
下一步怎么来

2733
01:34:16,000 --> 01:34:18,000
我再用那个来画

2734
01:34:18,000 --> 01:34:18,000
对吧

2735
01:34:18,000 --> 01:34:20,000
我不会说我在草稿纸上先把这个

2736
01:34:20,000 --> 01:34:22,000
就是作业写的差不多

2737
01:34:22,000 --> 01:34:23,000
然后再腾一遍

2738
01:34:23,000 --> 01:34:24,000
腾到这个拉 tech 里面

2739
01:34:24,000 --> 01:34:25,000
我不是这么干的

2740
01:34:25,000 --> 01:34:26,000
对

2741
01:34:26,000 --> 01:34:28,000
这还是看你写的内容怎么样吗

2742
01:34:28,000 --> 01:34:30,000
每个人写作的那个环境和写的内容不一样吗

2743
01:34:30,000 --> 01:34:32,000
用法就不一样了吗

2744
01:34:32,000 --> 01:34:32,000
对

2745
01:34:32,000 --> 01:34:34,000
尤其是如果你有很多公式的话

2746
01:34:34,000 --> 01:34:35,000
他要求你你在写公式的时候

2747
01:34:35,000 --> 01:34:39,000
你能够确定知道自己的拉 tech 的公式是写的是对的

2748
01:34:39,000 --> 01:34:42,000
这实际上对于很多人来说还是蛮难的

2749
01:34:42,000 --> 01:34:43,000
很难的一件事情

2750
01:34:43,000 --> 01:34:44,000
就是你想象

2751
01:34:44,000 --> 01:34:44,000
应该是对的

2752
01:34:44,000 --> 01:34:46,000
结果训练出来并不是这个样子

2753
01:34:46,000 --> 01:34:48,000
经常会出现这个情况

2754
01:34:48,000 --> 01:34:49,000
对

2755
01:34:49,000 --> 01:34:50,000
对对

2756
01:34:50,000 --> 01:34:50,000
我忘了说

2757
01:34:50,000 --> 01:34:51,000
还有一个

2758
01:34:51,000 --> 01:34:53,000
我其实应该说是一个三评的

2759
01:34:53,000 --> 01:34:55,000
就是还有一个是那个 tech 的

2760
01:34:55,000 --> 01:34:56,000
拉 tech 的那个对应的手册

2761
01:34:56,000 --> 01:34:59,000
因为你记不住那些符号啊

2762
01:34:59,000 --> 01:35:01,000
或者是那些公式到底是哪个

2763
01:35:01,000 --> 01:35:02,000
你得不断的去翻

2764
01:35:02,000 --> 01:35:05,000
然后包括那个 tikz 的那个绘图的那个工具

2765
01:35:05,000 --> 01:35:06,000
他有一个非常完整的

2766
01:35:06,000 --> 01:35:08,000
就是也是一本书了

2767
01:35:08,000 --> 01:35:08,000
本质上

2768
01:35:08,000 --> 01:35:10,000
的一个 pdf 的册子

2769
01:35:10,000 --> 01:35:12,000
你要去找他里面到底是怎么去画这个箭头

2770
01:35:12,000 --> 01:35:13,000
怎么画到那里去

2771
01:35:13,000 --> 01:35:14,000
就是你

2772
01:35:14,000 --> 01:35:14,000
你

2773
01:35:14,000 --> 01:35:16,000
是要随时去找这个 reference 的

2774
01:35:16,000 --> 01:35:17,000
嗯

2775
01:35:17,000 --> 01:35:18,000
对

2776
01:35:18,000 --> 01:35:19,000
所以就很烦了

2777
01:35:19,000 --> 01:35:19,000
是

2778
01:35:19,000 --> 01:35:22,000
这其实 tech 除了我们讲

2779
01:35:22,000 --> 01:35:23,000
常用于这种数学啊

2780
01:35:23,000 --> 01:35:24,000
理工这种之类

2781
01:35:24,000 --> 01:35:25,000
他还有一些这种奇奇怪怪的

2782
01:35:25,000 --> 01:35:26,000
其他的用法

2783
01:35:26,000 --> 01:35:29,000
比如说有人来用这个做音乐啊

2784
01:35:29,000 --> 01:35:30,000
我也有看到

2785
01:35:30,000 --> 01:35:32,000
就是乐谱也可以用这个 tech 的方式

2786
01:35:32,000 --> 01:35:35,000
就是写出非常严谨的这个美观的这个乐谱嘛

2787
01:35:35,000 --> 01:35:37,000
还有当时我看到还有很多

2788
01:35:37,000 --> 01:35:38,000
反正就是非常小众的用法

2789
01:35:38,000 --> 01:35:39,000
但因为我不是

2790
01:35:39,000 --> 01:35:42,000
我不是做那个方向的这个人嘛

2791
01:35:42,000 --> 01:35:44,000
我太理解他底层

2792
01:35:44,000 --> 01:35:44,000
原理

2793
01:35:44,000 --> 01:35:44,000
是什么

2794
01:35:44,000 --> 01:35:46,000
比如说我一直没有理解

2795
01:35:46,000 --> 01:35:50,000
他那个用太和写五级五线谱是什么一个原理

2796
01:35:50,000 --> 01:35:51,000
你们知道吗

2797
01:35:51,000 --> 01:35:53,000
或者写那个就是那个就是音乐的那些东西

2798
01:35:54,000 --> 01:35:56,000
就他应该也是有什么记号啊

2799
01:35:56,000 --> 01:35:58,000
各种专用的这个红啊之类的

2800
01:35:58,000 --> 01:35:59,000
但是我从来没有用过

2801
01:35:59,000 --> 01:36:01,000
我我从来不知道怎么实现

2802
01:36:01,000 --> 01:36:04,000
因为当时我还做过另外一种一排些比较 crazy 的事情

2803
01:36:04,000 --> 01:36:11,000
就是我不是觉得那个太和的那个红边城有一些那个语法什么的不是太灵活吗

2804
01:36:11,000 --> 01:36:14,000
我甚至还在就是在为了写一个

2805
01:36:14,000 --> 01:36:15,000
写一个复杂的一个图形

2806
01:36:15,000 --> 01:36:19,000
他可能是要如果要手工去写会非常的麻烦

2807
01:36:19,000 --> 01:36:25,000
我甚至是用比如说用拍手写了一个小程序去生成输出的那个结果是拉太后

2808
01:36:25,000 --> 01:36:29,000
然后再看 pdf 得到那个我就想要的那个图形

2809
01:36:29,000 --> 01:36:31,000
非常的没他这个过程

2810
01:36:33,000 --> 01:36:37,000
但事实上那个外部的一个功能就是这个

2811
01:36:37,000 --> 01:36:40,000
他先去读取那段程序

2812
01:36:40,000 --> 01:36:42,000
然后生成一段可以被太和来执行的命令

2813
01:36:42,000 --> 01:36:42,000
然后生成一段可以被太和来执行的命令

2814
01:36:42,000 --> 01:36:44,000
然后生成一段可以被太和来执行的命令

2815
01:36:44,000 --> 01:36:45,000
执行的程序

2816
01:36:45,000 --> 01:36:47,000
他基本上也是一个大法生成器

2817
01:36:47,000 --> 01:36:49,000
做乐谱的那个就是是叫什么

2818
01:36:49,000 --> 01:36:50,000
music tech

2819
01:36:50,000 --> 01:36:51,000
是个 music

2820
01:36:51,000 --> 01:36:52,000
music tech

2821
01:36:52,000 --> 01:36:54,000
应该是 X 的

2822
01:36:54,000 --> 01:36:56,000
music tech

2823
01:36:56,000 --> 01:36:58,000
那我这看人就结果用过

2824
01:36:58,000 --> 01:37:00,000
但我不知道他到底是个怎么一个用法

2825
01:37:00,000 --> 01:37:02,000
但不过他还就就是一个嗯

2826
01:37:02,000 --> 01:37:03,000
还是一个红包吗

2827
01:37:06,000 --> 01:37:08,000
对所以我们今天很很关键一点

2828
01:37:08,000 --> 01:37:09,000
就是说呃

2829
01:37:09,000 --> 01:37:11,000
我们所有在谈这个排版的时候

2830
01:37:11,000 --> 01:37:14,000
他是和字体配套的这个事情很关键

2831
01:37:14,000 --> 01:37:16,000
就像高德纳他当时他做太和的时候

2832
01:37:16,000 --> 01:37:17,000
他他自己做了一套字体

2833
01:37:17,000 --> 01:37:18,000
嗯

2834
01:37:18,000 --> 01:37:23,000
然后这个字体对应的这个排版如何调用之后

2835
01:37:23,000 --> 01:37:24,000
才能做出精细的排版

2836
01:37:24,000 --> 01:37:25,000
否则的话

2837
01:37:25,000 --> 01:37:28,000
他想实现这个他没办没办法调用嘛

2838
01:37:28,000 --> 01:37:28,000
对吧

2839
01:37:28,000 --> 01:37:31,000
我们现在平面设计师经常就是比如说我用 in design

2840
01:37:31,000 --> 01:37:36,000
这个平面设计的这个页面的软件所见及所得

2841
01:37:36,000 --> 01:37:36,000
但是呢

2842
01:37:36,000 --> 01:37:37,000
in design

2843
01:37:37,000 --> 01:37:39,000
他需要调用的是 open type

2844
01:37:39,000 --> 01:37:42,000
这个字体里面的高级排版特性

2845
01:37:42,000 --> 01:37:42,000
嗯

2846
01:37:42,000 --> 01:37:43,000
所以说到底

2847
01:37:43,000 --> 01:37:45,000
就是这个排版引擎和这个字体

2848
01:37:45,000 --> 01:37:46,000
它是相辅相成的

2849
01:37:46,000 --> 01:37:49,000
那两边东西得配的配套好

2850
01:37:49,000 --> 01:37:49,000
嗯

2851
01:37:49,000 --> 01:37:52,000
要不然的话就是很多事情你是在字体层面做呢

2852
01:37:52,000 --> 01:37:54,000
还是到排版引擎做很多事情

2853
01:37:54,000 --> 01:37:55,000
你想不清楚

2854
01:37:55,000 --> 01:37:56,000
有的时候会

2855
01:37:56,000 --> 01:37:59,000
然后高德纳就说什么事情都我来

2856
01:37:59,000 --> 01:38:00,000
嗯

2857
01:38:00,000 --> 01:38:02,000
有了这个 computer mode 的字体

2858
01:38:02,000 --> 01:38:03,000
然后呢

2859
01:38:03,000 --> 01:38:07,000
有了太和他就可以赋予这个作者所有的权利

2860
01:38:07,000 --> 01:38:09,000
fully control of your work

2861
01:38:09,000 --> 01:38:12,000
所以高德纳他自己很开心

2862
01:38:12,000 --> 01:38:13,000
如果你知道怎么

2863
01:38:13,000 --> 01:38:16,000
用的话打个非常大的引号

2864
01:38:16,000 --> 01:38:19,000
就是你要学会那套东西才行

2865
01:38:19,000 --> 01:38:21,000
大宗是不是那么好当的

2866
01:38:21,000 --> 01:38:22,000
你要拿着玄铁剑

2867
01:38:22,000 --> 01:38:25,000
你得先拿得起来会舞才可以

2868
01:38:25,000 --> 01:38:26,000
他是 control free

2869
01:38:26,000 --> 01:38:28,000
这是毫无疑问的

2870
01:38:28,000 --> 01:38:28,000
对

2871
01:38:28,000 --> 01:38:33,000
这其实也是我们在排版工作中遇到的一个难题吧

2872
01:38:33,000 --> 01:38:35,000
就是呃

2873
01:38:35,000 --> 01:38:37,000
我们知道其实无论是早前还是现在

2874
01:38:37,000 --> 01:38:38,000
现在当然更是了

2875
01:38:38,000 --> 01:38:42,000
字体其实已经成为了排版程序的一个构成部分

2876
01:38:42,000 --> 01:38:43,000
如果没有一个

2877
01:38:43,000 --> 01:38:47,000
在功能上符合这个目标排版需求的字体的话

2878
01:38:47,000 --> 01:38:50,000
我们实际上是无法完成整个排版工作的

2879
01:38:50,000 --> 01:38:52,000
那这一点无论是在太和里面

2880
01:38:52,000 --> 01:38:56,000
甚至我们在这个 web 上面就在网页上面也越来越是这样

2881
01:38:56,000 --> 01:39:01,000
我们需要更多的 open type feature 来实现一些复杂的排版

2882
01:39:01,000 --> 01:39:05,000
甚至只是为了实现呃一些复杂文字的排版

2883
01:39:05,000 --> 01:39:07,000
而这些文字的排版都没有什么特殊的需求

2884
01:39:07,000 --> 01:39:09,000
他都不是写公式也不是机乐谱

2885
01:39:09,000 --> 01:39:13,000
他只是想把他自己国家那种语言的文字记录下来

2886
01:39:13,000 --> 01:39:13,000
我们就需要用的文字排版是很重要的

2887
01:39:13,000 --> 01:39:15,000
所以我们就需要用到这样一些复杂的特性

2888
01:39:15,000 --> 01:39:22,000
这也是我们现在越来越难以纯粹的将这个呃内容和样式分离开来的一个原因

2889
01:39:22,000 --> 01:39:23,000
就是我比较好奇

2890
01:39:23,000 --> 01:39:25,000
就是因为我之前在用那个拉太和的时候

2891
01:39:25,000 --> 01:39:30,000
有大量的这种情况是没法用通过这种中间插入到 board

2892
01:39:30,000 --> 01:39:34,000
或者是这种 word office 的方式里面去实现的

2893
01:39:34,000 --> 01:39:36,000
那就必须要在里面同时解决

2894
01:39:36,000 --> 01:39:38,000
但是有一个非常 tricky 的一个需求是这样哈

2895
01:39:38,000 --> 01:39:41,000
比如说你要插一个图对吧

2896
01:39:41,000 --> 01:39:43,000
那个图很多不是有那种所谓的 label 文字的

2897
01:39:43,000 --> 01:39:45,000
那种标签嘛

2898
01:39:45,000 --> 01:39:50,000
你想要那个文字标签的字体形态风格和大小

2899
01:39:50,000 --> 01:39:52,000
有可能文字标签本来就是数学公式对吧

2900
01:39:52,000 --> 01:39:59,000
有可能文字标签本来是一个就是一个要要跟正文的那个字体和那个排音方式要一致的

2901
01:39:59,000 --> 01:40:03,000
那如果说你用一个第三方的这种图片插进去的话

2902
01:40:03,000 --> 01:40:05,000
就会出现这种各种各样奇怪的问题

2903
01:40:05,000 --> 01:40:06,000
比如说最简单的一个情况哈

2904
01:40:06,000 --> 01:40:12,000
就是有我看到很多人就是他不用那个拉太拉太和贴 kz 去生成图片的这种情况下

2905
01:40:12,000 --> 01:40:13,000
他是说我在外面

2906
01:40:13,000 --> 01:40:16,000
找一个通用的画图工具把它画了

2907
01:40:16,000 --> 01:40:23,000
做成一个一个 png 或者是这个 svg 或者是那个叫什么 eps 这种矢量图形或者是位图图形吧

2908
01:40:23,000 --> 01:40:25,000
如果他那个不能用矢量来描述的话

2909
01:40:25,000 --> 01:40:27,000
然后他再导入到这个 word 里面去

2910
01:40:27,000 --> 01:40:29,000
这就导致一个什么问题呢

2911
01:40:29,000 --> 01:40:30,000
因为他本身是两套脱节东西

2912
01:40:30,000 --> 01:40:34,000
那个图片对周围的文字是没有这个意识的

2913
01:40:34,000 --> 01:40:39,000
那么你缩放那个图片就会导致那个图片里面的那些那个 text label

2914
01:40:39,000 --> 01:40:43,000
那些文字标签的大小和外面的那个脱节了

2915
01:40:43,000 --> 01:40:43,000
就完全不一样

2916
01:40:43,000 --> 01:40:45,000
并不联动

2917
01:40:45,000 --> 01:40:49,000
甚至我们看到国内很多那种就是用 word 写文写论文的人

2918
01:40:49,000 --> 01:40:51,000
那个论文一看就是 word 写的

2919
01:40:51,000 --> 01:40:51,000
为什么呢

2920
01:40:51,000 --> 01:40:55,000
因为他里面的那个插入的那个图片是比例是不对的

2921
01:40:55,000 --> 01:41:00,000
然后那个字型和和那个周围的文字是严重脱节

2922
01:41:00,000 --> 01:41:01,000
对吧

2923
01:41:01,000 --> 01:41:02,000
他字号都不一样

2924
01:41:02,000 --> 01:41:04,000
然后这个这个字体都完全是不是一个东西了

2925
01:41:04,000 --> 01:41:07,000
这些都是在 tech 里面解决的比较好

2926
01:41:07,000 --> 01:41:10,000
他是你嵌入了一个 tech 那种 lative 那种图形

2927
01:41:10,000 --> 01:41:12,000
他的那个文字 label

2928
01:41:12,000 --> 01:41:13,000
他还是用 tech 来排版的

2929
01:41:13,000 --> 01:41:15,000
就他会非常的一致

2930
01:41:15,000 --> 01:41:19,000
不你那个图也必须要用按 tech 的那种方法画嘛

2931
01:41:19,000 --> 01:41:20,000
对啊对啊

2932
01:41:20,000 --> 01:41:23,000
所以我就他必须是在同一个语境里面去嘛

2933
01:41:23,000 --> 01:41:24,000
就他没有这个割裂感

2934
01:41:24,000 --> 01:41:25,000
对

2935
01:41:25,000 --> 01:41:30,000
甚至还有像那个我之前刚才讲那个 context 那种非常诡异的需求

2936
01:41:30,000 --> 01:41:32,000
他可以实现什么呢

2937
01:41:32,000 --> 01:41:35,000
就是你的你假设你想象一个页面上有一个插图

2938
01:41:35,000 --> 01:41:36,000
插图里面有一个箭头

2939
01:41:36,000 --> 01:41:41,000
箭头里面指到你这页上某一段话的某一个字上面有一个符号

2940
01:41:41,000 --> 01:41:42,000
他可以指到那个上面去

2941
01:41:42,000 --> 01:41:43,000
这个在普通的那些里面

2942
01:41:43,000 --> 01:41:45,000
那个插图的话是无法实现的嘛

2943
01:41:45,000 --> 01:41:47,000
体系里面

2944
01:41:47,000 --> 01:41:51,000
就他是互相是之间是能够互相理解对方的结构的

2945
01:41:51,000 --> 01:41:52,000
他们说的是同样的语言

2946
01:41:52,000 --> 01:41:55,000
所以他能指的能定位能定的到

2947
01:41:55,000 --> 01:41:56,000
对对对对

2948
01:41:56,000 --> 01:41:57,000
如果你是插图的话

2949
01:41:57,000 --> 01:41:58,000
你就单纯的那种普通的

2950
01:41:58,000 --> 01:41:59,000
比如说是这个这个 png

2951
01:41:59,000 --> 01:42:05,000
你是无法从 png 插图里面去指向你的文档里面的某一个字的嘛

2952
01:42:05,000 --> 01:42:06,000
因为他都不知道你要插下哪一个文档

2953
01:42:06,000 --> 01:42:07,000
对不对

2954
01:42:07,000 --> 01:42:10,000
这个还是有一个非常不一样的体验的

2955
01:42:10,000 --> 01:42:11,000
对

2956
01:42:11,000 --> 01:42:13,000
但其实这样子的这个排版

2957
01:42:13,000 --> 01:42:13,000
他

2958
01:42:13,000 --> 01:42:16,000
他其实之所以他能排的这么准

2959
01:42:16,000 --> 01:42:18,000
他是因为所有的东西都是在一个

2960
01:42:18,000 --> 01:42:22,000
风类接近封闭的环境中实现出来的

2961
01:42:22,000 --> 01:42:24,000
如果从这一点来说

2962
01:42:24,000 --> 01:42:25,000
如果假设我们很极端

2963
01:42:25,000 --> 01:42:27,000
我们说我们写一篇论文

2964
01:42:27,000 --> 01:42:29,000
我们每个字都用 photoshop 来排

2965
01:42:29,000 --> 01:42:30,000
那他最后就是一张位图

2966
01:42:30,000 --> 01:42:32,000
他必然每一个细节都可以排的很准

2967
01:42:32,000 --> 01:42:35,000
之所以我们用 word 来排

2968
01:42:35,000 --> 01:42:39,000
有的时候发现有一些图片的里面内嵌的那些字体的样式

2969
01:42:39,000 --> 01:42:41,000
跟整个文档的样式脱离了

2970
01:42:41,000 --> 01:42:43,000
是因为有可能他这个图片

2971
01:42:43,000 --> 01:42:45,000
并不是这个作者自己做的

2972
01:42:45,000 --> 01:42:47,000
他只能从一个地方拉了一张图片过来

2973
01:42:47,000 --> 01:42:48,000
这图片里面有一些文本

2974
01:42:48,000 --> 01:42:53,000
其实这个图片的生成环境都不是由他自己来控制的

2975
01:42:53,000 --> 01:42:53,000
那自然会产生

2976
01:42:53,000 --> 01:42:55,000
但 Tesla 的好处就是说

2977
01:42:55,000 --> 01:42:57,000
他如果说你都用

2978
01:42:57,000 --> 01:43:00,000
比如说你都用 TIKZ 来这个做图

2979
01:43:00,000 --> 01:43:02,000
他那个图的那部分代码是可以单独拷贝出来的

2980
01:43:02,000 --> 01:43:04,000
所以你只要再做一些小小的修改

2981
01:43:04,000 --> 01:43:08,000
就可以让那张图无缝的迁入到你自己那份文档里面去

2982
01:43:08,000 --> 01:43:11,000
就是你是有那个原代码的

2983
01:43:11,000 --> 01:43:13,000
而不是只有一个最终的结果

2984
01:43:13,000 --> 01:43:18,000
所以当年高老师说的

2985
01:43:18,000 --> 01:43:19,000
我用 Tik 的话

2986
01:43:19,000 --> 01:43:21,000
我是不管你用什么设备

2987
01:43:21,000 --> 01:43:22,000
不用用什么环境

2988
01:43:22,000 --> 01:43:23,000
最后生成东西都是一样的

2989
01:43:23,000 --> 01:43:24,000
对呀

2990
01:43:24,000 --> 01:43:28,000
这个就是他当初用做 Tik 的最基本的一个目的

2991
01:43:28,000 --> 01:43:30,000
所以我就很好奇

2992
01:43:30,000 --> 01:43:33,000
就是现在我们用的那种商业用的排版工具

2993
01:43:33,000 --> 01:43:35,000
他是怎么解决这种类似的需求或者是问题

2994
01:43:35,000 --> 01:43:39,000
如果你在他自家的一个封闭的环境里实现

2995
01:43:39,000 --> 01:43:43,000
其实 Adobe 提供的工具也足以实现这样的需求

2996
01:43:43,000 --> 01:43:47,000
比如说你在 Indesign 里面排一个很复杂的书籍

2997
01:43:47,000 --> 01:43:49,000
这书籍里面可能有一些图片

2998
01:43:49,000 --> 01:43:51,000
甚至图片上面会有一些小的文字标注

2999
01:43:51,000 --> 01:43:54,000
如果你这个图片是用 Photoshop 做的

3000
01:43:54,000 --> 01:43:56,000
或者是用 Illustrator 做的

3001
01:43:56,000 --> 01:43:58,000
然后你把这个 Illustrator 做好的图像文件

3002
01:43:58,000 --> 01:44:00,000
以一个外链 link 的方式

3003
01:44:00,000 --> 01:44:02,000
可以 link 到这个 Indesign 内部

3004
01:44:02,000 --> 01:44:06,000
或者直接插入进去成为这个 Indesign 文档的一部分

3005
01:44:06,000 --> 01:44:09,000
那你也可以几乎保持说

3006
01:44:09,000 --> 01:44:12,000
它不会产生任何意外的情况

3007
01:44:12,000 --> 01:44:13,000
它都是受你控制

3008
01:44:13,000 --> 01:44:16,000
然后你也可以随时在编辑那个图像文件里的内容

3009
01:44:16,000 --> 01:44:19,000
保持一个两边实时的同步更新

3010
01:44:19,000 --> 01:44:21,000
而且是 native 的更新

3011
01:44:21,000 --> 01:44:22,000
它可以实现说

3012
01:44:22,000 --> 01:44:23,000
刚才我说那种情况

3013
01:44:23,000 --> 01:44:26,000
就是某一个图片里面的一个元素

3014
01:44:26,000 --> 01:44:29,000
一个箭头指向这一页

3015
01:44:29,000 --> 01:44:30,000
这个图像以外

3016
01:44:30,000 --> 01:44:35,000
但是还在这一页上的某一个文字的某一个角落

3017
01:44:35,000 --> 01:44:36,000
随便举个例子

3018
01:44:36,000 --> 01:44:39,000
你的意思是假如说我下面这个被指向的文字

3019
01:44:39,000 --> 01:44:42,000
它因为比如说修改文本而被重排了

3020
01:44:42,000 --> 01:44:42,000
所以这个箭头案

3021
01:44:42,000 --> 01:44:44,000
能不能始终指向它是不是

3022
01:44:44,000 --> 01:44:46,000
对啊要跟着它走啊

3023
01:44:46,000 --> 01:44:48,000
不然没有意义吧

3024
01:44:48,000 --> 01:44:51,000
对这部分可能在平面设计软件里还比较受限

3025
01:44:51,000 --> 01:44:53,000
因为这样的需求不强可能

3026
01:44:53,000 --> 01:44:55,000
或者说对平面设计师来说

3027
01:44:55,000 --> 01:44:57,000
如果产生了这样子的情况

3028
01:44:57,000 --> 01:45:00,000
它有可能需要人工来解决这种情况

3029
01:45:00,000 --> 01:45:06,000
因为它有可能觉得机器自动给它重新安排的这个结果并不满意

3030
01:45:06,000 --> 01:45:09,000
对所以这个需求不那么的强

3031
01:45:09,000 --> 01:45:11,000
相对于 real 的要求是

3032
01:45:11,000 --> 01:45:14,000
他们要有所谓 interoperability

3033
01:45:14,000 --> 01:45:16,000
就是可以互相交互

3034
01:45:16,000 --> 01:45:18,000
对对

3035
01:45:18,000 --> 01:45:22,000
这也是用 Tag 中间我产生的一个非常奇妙的一个感觉

3036
01:45:22,000 --> 01:45:24,000
就是说你能感觉到它的强大

3037
01:45:24,000 --> 01:45:26,000
但是你也能感觉到它对你的制约

3038
01:45:26,000 --> 01:45:29,000
就是说有些它给你定义好的东西

3039
01:45:29,000 --> 01:45:30,000
你就只能那么去用它

3040
01:45:30,000 --> 01:45:32,000
比如它那条线要怎么走

3041
01:45:32,000 --> 01:45:35,000
当然你完全可以重新把那个红包打散

3042
01:45:35,000 --> 01:45:38,000
自己写一个让你足够满意的红包

3043
01:45:38,000 --> 01:45:40,000
但是那个过程是非常痛苦的一句

3044
01:45:40,000 --> 01:45:41,000
我就说

3045
01:45:41,000 --> 01:45:41,000
啊

3046
01:45:41,000 --> 01:45:42,000
将军下就用这个

3047
01:45:42,000 --> 01:45:44,000
自己划轮子

3048
01:45:44,000 --> 01:45:47,000
对这张轮子很痛苦

3049
01:45:47,000 --> 01:45:49,000
对其实 real 说的这种情况

3050
01:45:49,000 --> 01:45:54,000
更像是我们现在用这个 web 排版里面实现的一些特性

3051
01:45:54,000 --> 01:45:57,000
也就是它有我们用一个很俗的词

3052
01:45:57,000 --> 01:45:59,000
就是它有一些 responsive 的特性在内

3053
01:45:59,000 --> 01:46:00,000
是是是

3054
01:46:00,000 --> 01:46:02,000
它能根据你这个呈现媒介的改变

3055
01:46:02,000 --> 01:46:05,000
甚至包括你能实时的修改一些文本

3056
01:46:05,000 --> 01:46:09,000
但是还是保持着一些关键的排版特性的稳定性

3057
01:46:09,000 --> 01:46:11,000
就是那个 pdf 不是有一些这种可编

3058
01:46:11,000 --> 01:46:12,000
成的功能吗

3059
01:46:12,000 --> 01:46:13,000
它可以嵌入 javascript

3060
01:46:13,000 --> 01:46:15,000
然后做一些交互吗

3061
01:46:15,000 --> 01:46:20,000
当时有一些那种比较疯狂的那个 text 的那种这种这种就是先锋

3062
01:46:20,000 --> 01:46:22,000
它可以直接生成可交互的 pdf

3063
01:46:22,000 --> 01:46:25,000
比如说最简单的是用那个 context 做那个画轮片对吧

3064
01:46:25,000 --> 01:46:28,000
画轮片不是有所谓的这个这个这个快进一下页

3065
01:46:28,000 --> 01:46:32,000
页首页尾或者是到某一下一个章节的标题这种都有的吗

3066
01:46:32,000 --> 01:46:36,000
它可以在 pdf 里面实现一个导航栏都可以通过这个来实现

3067
01:46:36,000 --> 01:46:38,000
非常的厉害

3068
01:46:38,000 --> 01:46:40,000
对 pdf 实验表单也是可以的

3069
01:46:40,000 --> 01:46:40,000
你可以填表

3070
01:46:40,000 --> 01:46:41,000
对对

3071
01:46:41,000 --> 01:46:44,000
而且它会自动数据收集嘛

3072
01:46:44,000 --> 01:46:47,000
但这个我觉得现在就是反倒是有一点失规了

3073
01:46:47,000 --> 01:46:49,000
就是我发现越到后来哈

3074
01:46:49,000 --> 01:46:52,000
就是说因为太狠说本说白了

3075
01:46:52,000 --> 01:46:57,000
它最终还是 99%是为了打印的那个场景设计的

3076
01:46:57,000 --> 01:46:59,000
排版它核心是一个排版

3077
01:46:59,000 --> 01:47:02,000
你们所有对它的过度使用其实都是误用

3078
01:47:02,000 --> 01:47:03,000
对

3079
01:47:03,000 --> 01:47:04,000
对

3080
01:47:04,000 --> 01:47:07,000
就它还是为了这个打印出来在在使用的嘛

3081
01:47:07,000 --> 01:47:09,000
但其实现在我们看很多

3082
01:47:09,000 --> 01:47:11,000
我其实已经很少

3083
01:47:11,000 --> 01:47:11,000
把

3084
01:47:11,000 --> 01:47:11,000
我其实已经很少

3085
01:47:11,000 --> 01:47:11,000
我其实已经很少把

3086
01:47:11,000 --> 01:47:15,000
一篇论文打印出来再看都是在电脑屏幕上看

3087
01:47:15,000 --> 01:47:21,000
就说那是否还有必要拘泥于这个配置这个页面这个概念的吧

3088
01:47:21,000 --> 01:47:24,000
都已经是这个一代概念已经开始在逐步淡化了

3089
01:47:24,000 --> 01:47:27,000
那像太和他花了很多时间去研究说啊

3090
01:47:27,000 --> 01:47:35,000
我要为了把这个这一片这个文字和这个公式完美的塞进一个固定的尺寸里面空间

3091
01:47:35,000 --> 01:47:36,000
我要做什么标点几呀

3092
01:47:36,000 --> 01:47:41,000
我要做各种什么这种这几件什么分词各种还分内神

3093
01:47:41,000 --> 01:47:44,000
各种这个这种变种吧

3094
01:47:44,000 --> 01:47:52,000
这种这种这种操作的这个公式这么好一行写不下到底应该在 X 还是 Y 哪里打开地方断开这种非常细致的规则

3095
01:47:52,000 --> 01:47:56,000
但随着这种无限就是相对来说灵活的这种展示

3096
01:47:56,000 --> 01:48:01,000
界面的存在他好像这个需求已经不那么强烈了

3097
01:48:01,000 --> 01:48:02,000
那无非看不下

3098
01:48:02,000 --> 01:48:04,000
我就把那个流浪机双口拉宽一点嘛

3099
01:48:06,000 --> 01:48:09,000
在节目里最开始实际上我就提到了这一点

3100
01:48:09,000 --> 01:48:11,000
我觉得现在拉太狠的或者太狠

3101
01:48:11,000 --> 01:48:16,000
人生的定位是一个比较精准的小众的

3102
01:48:18,000 --> 01:48:21,000
局限在插入公式这一部分

3103
01:48:21,000 --> 01:48:28,000
就你拿真正拿来拿太狠来排版的人实际上是就是你越来越少了

3104
01:48:28,000 --> 01:48:33,000
对在整个的个人出版领域里面实际上是已经很小的部分

3105
01:48:33,000 --> 01:48:34,000
就反过来说

3106
01:48:34,000 --> 01:48:37,000
宗师级的解决方案实际上是不适合普通人的

3107
01:48:38,000 --> 01:48:40,000
对对他将排版这样一件

3108
01:48:40,000 --> 01:48:41,000
其实

3109
01:48:41,000 --> 01:48:45,000
依赖于视觉结果的这样一件工作

3110
01:48:45,000 --> 01:48:49,000
给你添加了一个比较抽象的中间中间的这样一个过程

3111
01:48:49,000 --> 01:48:52,000
他需要你用一些相对抽象的方式去描述你的排版

3112
01:48:52,000 --> 01:48:55,000
而不是像早期的平面设计师一样

3113
01:48:55,000 --> 01:48:58,000
他们甚至将一个剪贴画剪下来

3114
01:48:58,000 --> 01:49:00,000
直接粘到纸上的某一个位置

3115
01:49:00,000 --> 01:49:03,000
这样子的一个直观的过程

3116
01:49:03,000 --> 01:49:06,000
我觉得这是他比较难上手的一个原因

3117
01:49:06,000 --> 01:49:07,000
对嗯

3118
01:49:07,000 --> 01:49:09,000
就你使用这个东西是需要经过一套

3119
01:49:09,000 --> 01:49:13,000
你并不就或者说违反直觉的训练的

3120
01:49:14,000 --> 01:49:18,000
这个我觉得在很多设计师这边实际上是一个很大的阻力

3121
01:49:18,000 --> 01:49:22,000
就违反直觉这件事情在设计师这里是行不通的

3122
01:49:22,000 --> 01:49:25,000
也不叫违反直觉就是不直接

3123
01:49:25,000 --> 01:49:26,000
就是你就是脑子

3124
01:49:26,000 --> 01:49:27,000
推举

3125
01:49:27,000 --> 01:49:27,000
我吗

3126
01:49:27,000 --> 01:49:31,000
就就是他没有那么直观的意思

3127
01:49:31,000 --> 01:49:32,000
他不是脑子

3128
01:49:32,000 --> 01:49:32,000
你去点

3129
01:49:32,000 --> 01:49:33,000
他是康特

3130
01:49:33,000 --> 01:49:33,000
应该去

3131
01:49:33,000 --> 01:49:33,000
去

3132
01:49:33,000 --> 01:49:35,000
他是反直觉的

3133
01:49:36,000 --> 01:49:36,000
对对对

3134
01:49:36,000 --> 01:49:37,000
靠近

3135
01:49:37,000 --> 01:49:37,000
他可以去

3136
01:49:37,000 --> 01:49:38,000
去

3137
01:49:38,000 --> 01:49:38,000
就是他是反直觉的

3138
01:49:38,000 --> 01:49:40,000
就是他真的是反人性的

3139
01:49:40,000 --> 01:49:41,000
你知道吗

3140
01:49:41,000 --> 01:49:45,000
他本质上让你变成一个叫做什么来的 interpreter

3141
01:49:45,000 --> 01:49:45,000
对吧

3142
01:49:45,000 --> 01:49:46,000
脚本解释器

3143
01:49:46,000 --> 01:49:48,000
你要去运行这段结果

3144
01:49:48,000 --> 01:49:50,000
大概在在你脑子里面

3145
01:49:50,000 --> 01:49:54,000
肉就是叫什么人脑去演算这个太和排版算法的结果

3146
01:49:54,000 --> 01:49:56,000
得到说他大概会长什么样子

3147
01:49:56,000 --> 01:49:57,000
然后你得得到那个 pdf

3148
01:49:57,000 --> 01:50:00,000
再看到底是不是你想的那个样子

3149
01:50:00,000 --> 01:50:02,000
会不会什么 bonding box overflow 啊

3150
01:50:02,000 --> 01:50:03,000
这种东西就出来了

3151
01:50:03,000 --> 01:50:07,000
这实际上就是编程对于人的异化过程嘛

3152
01:50:07,000 --> 01:50:08,000
他是宗师的

3153
01:50:08,000 --> 01:50:08,000
公司

3154
01:50:08,000 --> 01:50:11,000
他不是普通人的公司

3155
01:50:11,000 --> 01:50:11,000
对啊

3156
01:50:11,000 --> 01:50:11,000
对啊

3157
01:50:11,000 --> 01:50:17,000
但是一开始刚才说到那个连字断词

3158
01:50:17,000 --> 01:50:19,000
还分一神的那个算法

3159
01:50:19,000 --> 01:50:21,000
其实他做的挺好的

3160
01:50:21,000 --> 01:50:22,000
而且呢

3161
01:50:22,000 --> 01:50:25,000
就是因为你人工排版的时候

3162
01:50:25,000 --> 01:50:27,000
你可能只能雇的这一行来排

3163
01:50:27,000 --> 01:50:35,000
但是他现在就是所就是所谓我们现在阿杜比的算法是在单行排版器和段落排版器

3164
01:50:35,000 --> 01:50:38,000
他可以在根据这一整个段落的数行

3165
01:50:38,000 --> 01:50:42,000
他能根据他的公式计算出一个最小的调整值

3166
01:50:42,000 --> 01:50:45,000
然后得出最佳的最下方案嘛

3167
01:50:45,000 --> 01:50:47,000
这个东西呢就是电脑上场做的东西

3168
01:50:47,000 --> 01:50:49,000
这还不是最狠的

3169
01:50:49,000 --> 01:50:51,000
他他他和做的更狠

3170
01:50:51,000 --> 01:50:52,000
在上面他可以做全局的优化

3171
01:50:52,000 --> 01:50:54,000
就是说这一整页里面

3172
01:50:54,000 --> 01:50:56,000
我觉得是不是在这里断

3173
01:50:56,000 --> 01:51:00,000
会导致后面三个五个自然断之后的那个排版的

3174
01:51:00,000 --> 01:51:01,000
所以违反了一个更大的一个代价

3175
01:51:01,000 --> 01:51:04,000
他有一个整篇的全局优化的这个过程

3176
01:51:04,000 --> 01:51:05,000
他有好多个参数嘛

3177
01:51:05,000 --> 01:51:08,000
对而且而且我印象最深的就是说

3178
01:51:08,000 --> 01:51:10,000
他在相当长的一段时期内

3179
01:51:10,000 --> 01:51:12,000
他的那个就是编译啊

3180
01:51:12,000 --> 01:51:13,000
编译那个泰晗文本

3181
01:51:13,000 --> 01:51:15,000
到最终这个 DVI 也好 PDF 的结果

3182
01:51:15,000 --> 01:51:17,000
他不是这个 one pass 的

3183
01:51:17,000 --> 01:51:18,000
他不是一遍就完的

3184
01:51:18,000 --> 01:51:19,000
他可以 multipass

3185
01:51:19,000 --> 01:51:22,000
就是他去不断的去进行这个全局优化

3186
01:51:22,000 --> 01:51:26,000
然后使得说你你他你得到一个整通篇文稿里面

3187
01:51:26,000 --> 01:51:30,000
最小代价去违反那些排版规则的这个

3188
01:51:30,000 --> 01:51:32,000
这个总和的一个总成本吧

3189
01:51:32,000 --> 01:51:34,000
对像这个这类事情的话

3190
01:51:34,000 --> 01:51:36,000
就是计算机所擅长的部分

3191
01:51:36,000 --> 01:51:38,000
就哪怕你是

3192
01:51:38,000 --> 01:51:42,000
一个很训练很几十年的一个高级的一个排版师

3193
01:51:42,000 --> 01:51:44,000
也也不会比这个计算机他做的

3194
01:51:44,000 --> 01:51:46,000
就经过计算以后

3195
01:51:46,000 --> 01:51:48,000
根据这个算法计算出来的演化

3196
01:51:48,000 --> 01:51:50,000
就是采取的最优质会好嘛

3197
01:51:50,000 --> 01:51:51,000
对吧

3198
01:51:51,000 --> 01:51:53,000
所以这部分 tech 是很厉害的

3199
01:51:53,000 --> 01:51:54,000
但是反过来讲

3200
01:51:54,000 --> 01:51:58,000
如果就对于那个公式排版里面

3201
01:51:58,000 --> 01:52:01,000
你比如说你要等号对齐加多少宽啊

3202
01:52:01,000 --> 01:52:03,000
什么这个这个控制多少

3203
01:52:03,000 --> 01:52:07,000
这个东西的话需要人再重再重新去反渲染的话

3204
01:52:07,000 --> 01:52:08,000
这个的确就是

3205
01:52:08,000 --> 01:52:10,000
不是机器所擅长的东西

3206
01:52:10,000 --> 01:52:13,000
然后需要人进行非常多的干预吗

3207
01:52:13,000 --> 01:52:16,000
但是我印象非常深的一个点

3208
01:52:16,000 --> 01:52:17,000
就是说当时因为我自己写论文嘛

3209
01:52:17,000 --> 01:52:19,000
这里面跟普通的排版有点不太一样

3210
01:52:19,000 --> 01:52:21,000
就在于比如说

3211
01:52:21,000 --> 01:52:22,000
比如说我问一个

3212
01:52:22,000 --> 01:52:23,000
我理解应该是这样子

3213
01:52:23,000 --> 01:52:25,000
就是说比如说你拿到一个别人的书

3214
01:52:25,000 --> 01:52:25,000
你要排

3215
01:52:25,000 --> 01:52:27,000
你是不能改书的内容的嘛

3216
01:52:27,000 --> 01:52:27,000
对不对

3217
01:52:27,000 --> 01:52:28,000
对对

3218
01:52:28,000 --> 01:52:29,000
但是因为我是自己写论文

3219
01:52:29,000 --> 01:52:31,000
我知道写到那最后

3220
01:52:31,000 --> 01:52:32,000
最后那一句话的时候

3221
01:52:32,000 --> 01:52:33,000
刚好就多了那么一行

3222
01:52:33,000 --> 01:52:35,000
然后你无论如何都调不回去

3223
01:52:35,000 --> 01:52:38,000
然后就不多一页空空白页的时候

3224
01:52:38,000 --> 01:52:39,000
你说你干脆把最后那段话改一下

3225
01:52:39,000 --> 01:52:41,000
缩短一点点好吗

3226
01:52:41,000 --> 01:52:41,000
对吧

3227
01:52:41,000 --> 01:52:43,000
编辑其实是有这个权限的

3228
01:52:43,000 --> 01:52:46,000
编辑在排版之中起到的作用

3229
01:52:46,000 --> 01:52:47,000
有时候就是这样

3230
01:52:47,000 --> 01:52:48,000
他觉得

3231
01:52:48,000 --> 01:52:49,000
对啊

3232
01:52:49,000 --> 01:52:51,000
这篇文章可能排了一整页

3233
01:52:51,000 --> 01:52:51,000
加一句话

3234
01:52:51,000 --> 01:52:52,000
那我把那句话改一改

3235
01:52:52,000 --> 01:52:54,000
或者把这个篇幅缩一下

3236
01:52:54,000 --> 01:52:55,000
然后跟作者沟通一下

3237
01:52:55,000 --> 01:52:56,000
就好了

3238
01:52:56,000 --> 01:52:56,000
对

3239
01:52:56,000 --> 01:52:58,000
所以编辑有这个权限

3240
01:52:58,000 --> 01:52:59,000
但是排版师没有这个权限

3241
01:52:59,000 --> 01:53:00,000
对

3242
01:53:00,000 --> 01:53:01,000
比如你想

3243
01:53:01,000 --> 01:53:03,000
这是一个非常有名的作家

3244
01:53:03,000 --> 01:53:04,000
一字千金的

3245
01:53:04,000 --> 01:53:05,000
你敢改字吗

3246
01:53:05,000 --> 01:53:05,000
不敢的

3247
01:53:05,000 --> 01:53:06,000
对啊

3248
01:53:06,000 --> 01:53:07,000
就违约了

3249
01:53:07,000 --> 01:53:08,000
会出事故

3250
01:53:08,000 --> 01:53:08,000
的

3251
01:53:08,000 --> 01:53:08,000
这个

3252
01:53:08,000 --> 01:53:10,000
所以呢

3253
01:53:10,000 --> 01:53:11,000
编辑如果觉得有必要

3254
01:53:11,000 --> 01:53:12,000
他可能导回去

3255
01:53:12,000 --> 01:53:14,000
和作者去联系这个事情

3256
01:53:14,000 --> 01:53:15,000
再难的东西

3257
01:53:15,000 --> 01:53:17,000
你排版都能排得好

3258
01:53:17,000 --> 01:53:19,000
这才是你排版师的厉害之处

3259
01:53:19,000 --> 01:53:20,000
你那是改字

3260
01:53:20,000 --> 01:53:21,000
这个算什么

3261
01:53:21,000 --> 01:53:22,000
对吧

3262
01:53:22,000 --> 01:53:23,000
所以本质上

3263
01:53:23,000 --> 01:53:24,000
你看排版师

3264
01:53:24,000 --> 01:53:26,000
本质上也是一个人肉的

3265
01:53:26,000 --> 01:53:26,000
对吧

3266
01:53:26,000 --> 01:53:28,000
就是 layout

3267
01:53:28,000 --> 01:53:29,000
auto layout 计算器

3268
01:53:29,000 --> 01:53:31,000
你要知道怎么排

3269
01:53:31,000 --> 01:53:32,000
才能变得好看

3270
01:53:32,000 --> 01:53:35,000
你脑子中有各种各样的规则

3271
01:53:35,000 --> 01:53:36,000
对

3272
01:53:36,000 --> 01:53:38,000
一个人肉的 page

3273
01:53:38,000 --> 01:53:38,000
对吧

3274
01:53:38,000 --> 01:53:38,000
那个人肉的 page maker 的

3275
01:53:38,000 --> 01:53:40,000
我刚才查了一下

3276
01:53:40,000 --> 01:53:41,000
我才发现 page maker

3277
01:53:41,000 --> 01:53:43,000
这个东西已经在 2004 年的时候

3278
01:53:43,000 --> 01:53:44,000
就早就没有了

3279
01:53:44,000 --> 01:53:45,000
我的天哪

3280
01:53:45,000 --> 01:53:46,000
我看我这些

3281
01:53:46,000 --> 01:53:48,000
我一直想着找个机会去指证你

3282
01:53:48,000 --> 01:53:49,000
但是呢就没有机会

3283
01:53:49,000 --> 01:53:50,000
这十几年来

3284
01:53:50,000 --> 01:53:52,000
我都活在一个谎言里面了

3285
01:53:52,000 --> 01:53:54,000
对我们现在都用 indesign 呢

3286
01:53:54,000 --> 01:53:57,000
而且你讲 indesign 到 20 多年了

3287
01:53:57,000 --> 01:53:57,000
对我知道

3288
01:53:57,000 --> 01:53:58,000
我其实我天天

3289
01:53:58,000 --> 01:54:01,000
就是我刚才所有提到 page maker 的地方

3290
01:54:01,000 --> 01:54:03,000
我想说的其实都是 indesign

3291
01:54:03,000 --> 01:54:04,000
就是那个

3292
01:54:04,000 --> 01:54:05,000
我甚至我知道

3293
01:54:05,000 --> 01:54:07,000
我能想起来那个 logo 是写的 ID

3294
01:54:07,000 --> 01:54:08,000
但是我就想起来

3295
01:54:08,000 --> 01:54:09,000
somehow 把它叫成了 page maker

3296
01:54:09,000 --> 01:54:12,000
上个世纪的记忆实在是

3297
01:54:12,000 --> 01:54:14,000
用 indesign 的话

3298
01:54:14,000 --> 01:54:16,000
先不考虑钱的问题

3299
01:54:16,000 --> 01:54:17,000
它比较贵嘛

3300
01:54:17,000 --> 01:54:18,000
我有可能拿它来写别论吗

3301
01:54:18,000 --> 01:54:21,000
取决于你写什么级别的别论

3302
01:54:21,000 --> 01:54:23,000
就是刚才我想说的一个事情就是

3303
01:54:23,000 --> 01:54:25,000
不管是 tech 还是 indesign

3304
01:54:25,000 --> 01:54:26,000
实际上都有一个问题

3305
01:54:26,000 --> 01:54:28,000
就是它如果你要使用

3306
01:54:28,000 --> 01:54:30,000
比较专业的 plot 工具的话

3307
01:54:30,000 --> 01:54:34,000
他们还是必须使用第三方的东西

3308
01:54:34,000 --> 01:54:35,000
就比如说 matplotlib

3309
01:54:35,000 --> 01:54:37,000
公式很多会比较麻烦

3310
01:54:37,000 --> 01:54:38,000
matplotlib

3311
01:54:38,000 --> 01:54:39,000
对

3312
01:54:39,000 --> 01:54:41,000
它就是没有很好的公式处理工具

3313
01:54:41,000 --> 01:54:44,000
就是会那种根据数据会出来的图

3314
01:54:44,000 --> 01:54:44,000
对吧

3315
01:54:44,000 --> 01:54:46,000
它是没法支持这一点的

3316
01:54:46,000 --> 01:54:47,000
对

3317
01:54:47,000 --> 01:54:49,000
或者是你划一个什么三维界面的

3318
01:54:49,000 --> 01:54:51,000
三维里面的流行之类的东西

3319
01:54:51,000 --> 01:54:55,000
你要怎么用 txt 来画

3320
01:54:55,000 --> 01:54:55,000
不可能的

3321
01:54:55,000 --> 01:54:57,000
所以这些东西其实还是有局限的

3322
01:54:57,000 --> 01:54:58,000
可以的

3323
01:54:58,000 --> 01:55:00,000
txt 可以画

3324
01:55:00,000 --> 01:55:00,000
可以的

3325
01:55:00,000 --> 01:55:01,000
ok

3326
01:55:01,000 --> 01:55:03,000
可以画一些简单的

3327
01:55:03,000 --> 01:55:05,000
然后刚才我不是说我用 python

3328
01:55:05,000 --> 01:55:06,000
写了一个代码输出

3329
01:55:06,000 --> 01:55:07,000
然后

3330
01:55:08,000 --> 01:55:10,000
我用了一个 txt 的秘密来实现绘图

3331
01:55:10,000 --> 01:55:12,000
输出的就是 txt 的代码

3332
01:55:12,000 --> 01:55:15,000
然后它实现了一个我想要的图形

3333
01:55:15,000 --> 01:55:18,000
为的就是解决刚才我说的问题

3334
01:55:18,000 --> 01:55:22,000
它画出图形中间是有一些 text label

3335
01:55:22,000 --> 01:55:24,000
是需要跟周围的长相一致的

3336
01:55:24,000 --> 01:55:27,000
你用任何其他的工具是没有办法实现这一点的

3337
01:55:27,000 --> 01:55:30,000
然后这又退回来软件的本质

3338
01:55:30,000 --> 01:55:33,000
因为 text 它是开放的开源的

3339
01:55:33,000 --> 01:55:34,000
如果你有这个需求

3340
01:55:34,000 --> 01:55:36,000
你自己去写个红写个包

3341
01:55:36,000 --> 01:55:37,000
你自己造个轮子

3342
01:55:37,000 --> 01:55:38,000
然后你就可以添加功能

3343
01:55:38,000 --> 01:55:39,000
你就可以添加功能了

3344
01:55:39,000 --> 01:55:40,000
对吧

3345
01:55:40,000 --> 01:55:41,000
那你自己拿去用去

3346
01:55:41,000 --> 01:55:43,000
但是对于 Adobe 公司来讲

3347
01:55:43,000 --> 01:55:44,000
Indesign 是他们专属的

3348
01:55:44,000 --> 01:55:46,000
然后你这个需求太小了

3349
01:55:46,000 --> 01:55:47,000
我干嘛要给你做呀

3350
01:55:47,000 --> 01:55:47,000
对吧

3351
01:55:47,000 --> 01:55:50,000
然后这个东西

3352
01:55:50,000 --> 01:55:53,000
那你看就回到了那个开始吴涛念的引用

3353
01:55:53,000 --> 01:55:55,000
引用那段对自由软件的指责嘛

3354
01:55:55,000 --> 01:55:55,000
对吧

3355
01:55:55,000 --> 01:55:58,000
确实 Indesign 是一个设计的非常好的工具

3356
01:55:58,000 --> 01:55:59,000
它具备非常

3357
01:55:59,000 --> 01:56:01,000
它凝聚了非常多工程师

3358
01:56:01,000 --> 01:56:04,000
多少多少的这个辛苦劳动的这个结果

3359
01:56:04,000 --> 01:56:06,000
当然他得到的结果也是非常的这种 professional

3360
01:56:06,000 --> 01:56:07,000
专业的这种

3361
01:56:08,000 --> 01:56:08,000
结果

3362
01:56:08,000 --> 01:56:12,000
但是他不能解决我这么一个特别定制化小中的需求呀

3363
01:56:12,000 --> 01:56:15,000
所以你看在这个研究领域啊

3364
01:56:15,000 --> 01:56:18,000
在这种特别是那种探索边界的那些人

3365
01:56:18,000 --> 01:56:20,000
他总是要遇到这种 Edge case

3366
01:56:20,000 --> 01:56:23,000
所以还是要用这种开放的

3367
01:56:23,000 --> 01:56:26,000
这种开源的自由的软件才能够实现他的那种

3368
01:56:26,000 --> 01:56:29,000
可能全世界就只有他这么一个人

3369
01:56:29,000 --> 01:56:31,000
在 20 年时间内用了这么一次

3370
01:56:31,000 --> 01:56:33,000
之后再也没有人想过这种需求了

3371
01:56:33,000 --> 01:56:35,000
Indesign 肯定是不会做的

3372
01:56:35,000 --> 01:56:36,000
对

3373
01:56:36,000 --> 01:56:37,000
其实还是看你怎样

3374
01:56:38,000 --> 01:56:39,000
很凉这个排版的工作量

3375
01:56:39,000 --> 01:56:41,000
比如说我们用 Indesign

3376
01:56:41,000 --> 01:56:46,000
理论上你完全可以人肉的实现所有公式编辑器可以实现的这个事情

3377
01:56:46,000 --> 01:56:47,000
排一个公式

3378
01:56:47,000 --> 01:56:49,000
它结构很复杂

3379
01:56:49,000 --> 01:56:50,000
但它再复杂

3380
01:56:50,000 --> 01:56:52,000
它无非就是在一个二维的平面上

3381
01:56:52,000 --> 01:56:54,000
把人工排它也可以

3382
01:56:54,000 --> 01:56:56,000
文字放到固定的位置

3383
01:56:56,000 --> 01:56:58,000
对对就 Indesign 完全有这个能力

3384
01:56:58,000 --> 01:57:01,000
而且做这件事情未必很复杂

3385
01:57:01,000 --> 01:57:04,000
就是他他的学习成本首先非常的低

3386
01:57:04,000 --> 01:57:06,000
其二就是他未必很复杂

3387
01:57:06,000 --> 01:57:07,000
如果你的公式量不是非常的多

3388
01:57:08,000 --> 01:57:10,000
那就就你这个如果就不成立了

3389
01:57:10,000 --> 01:57:12,000
这个如果不成立

3390
01:57:12,000 --> 01:57:16,000
是说到 Indesign 做这个技术的书籍

3391
01:57:16,000 --> 01:57:17,000
如果我没记错的话

3392
01:57:17,000 --> 01:57:21,000
小零件的 CJKV Information Processing

3393
01:57:21,000 --> 01:57:22,000
应该第二版就是用 Indesign

3394
01:57:22,000 --> 01:57:24,000
一般好像是 PageMaker 排的

3395
01:57:24,000 --> 01:57:27,000
小零件随便写一个技术文档都是用 Indesign 写的

3396
01:57:27,000 --> 01:57:29,000
这么硬核的吗

3397
01:57:29,000 --> 01:57:31,000
他自己一页一页去排吗

3398
01:57:31,000 --> 01:57:32,000
对对对他自己做的

3399
01:57:32,000 --> 01:57:33,000
对对对对

3400
01:57:33,000 --> 01:57:35,000
他是自体界的高德

3401
01:57:35,000 --> 01:57:37,000
所以说到底的话

3402
01:57:37,000 --> 01:57:38,000
对于他来讲的话

3403
01:57:38,000 --> 01:57:41,000
因为写文章是关键用的工具是什么

3404
01:57:41,000 --> 01:57:43,000
就是次要吗

3405
01:57:43,000 --> 01:57:43,000
对于他来讲

3406
01:57:43,000 --> 01:57:45,000
他用 Indesign 上手

3407
01:57:45,000 --> 01:57:46,000
他就用 Indesign 对吧

3408
01:57:46,000 --> 01:57:50,000
这是好像中国有好多企业内部交换文档

3409
01:57:50,000 --> 01:57:51,000
全都是 PPT

3410
01:57:51,000 --> 01:57:53,000
就不管干嘛都是一个 PPT 发过来

3411
01:57:53,000 --> 01:57:56,000
所以我们本质上是需要一张数码白纸

3412
01:57:56,000 --> 01:57:56,000
对吧

3413
01:57:56,000 --> 01:57:58,000
不要给我加那么条条框框

3414
01:57:58,000 --> 01:58:00,000
我自己把它摆到哪里就是哪里

3415
01:58:00,000 --> 01:58:01,000
你所需要的是说

3416
01:58:01,000 --> 01:58:04,000
怎么让我能够自由的通过一个规则

3417
01:58:04,000 --> 01:58:05,000
能够摆在那里而已

3418
01:58:05,000 --> 01:58:07,000
数码纸张其实就是 PD

3419
01:58:07,000 --> 01:58:08,000
F 嘛

3420
01:58:08,000 --> 01:58:09,000
就是它是一个容器嘛

3421
01:58:09,000 --> 01:58:10,000
那你怎么再怎么打印

3422
01:58:10,000 --> 01:58:11,000
怎么画

3423
01:58:11,000 --> 01:58:12,000
这个是另外的事情吗

3424
01:58:12,000 --> 01:58:15,000
但是就是 PDF 没法直接生成嘛

3425
01:58:15,000 --> 01:58:16,000
你得有一个工具才能生成它嘛

3426
01:58:16,000 --> 01:58:20,000
所以 KeynotePPT 反而是比较就是相对来说

3427
01:58:20,000 --> 01:58:22,000
简洁直观的吧

3428
01:58:22,000 --> 01:58:22,000
但确实也是啊

3429
01:58:22,000 --> 01:58:25,000
有我看到很多人最终他搞不定了

3430
01:58:25,000 --> 01:58:29,000
他就直接开一个这个这个这个这个 PPT

3431
01:58:29,000 --> 01:58:29,000
弄成白板

3432
01:58:29,000 --> 01:58:30,000
删掉所有文字

3433
01:58:30,000 --> 01:58:32,000
然后一个一个摆下他需要的那个相对位置

3434
01:58:32,000 --> 01:58:33,000
也可以吧

3435
01:58:33,000 --> 01:58:35,000
本质上是你在白纸上用手写

3436
01:58:35,000 --> 01:58:37,000
然后再把它拍成照是一样的嘛

3437
01:58:37,000 --> 01:58:40,000
PPT 是我在我在研究生的时候

3438
01:58:40,000 --> 01:58:43,000
教的那个提交的论文的那个学术会议

3439
01:58:43,000 --> 01:58:46,000
他应该是他应该也是 IEEE 下属的一个学术会议

3440
01:58:46,000 --> 01:58:49,000
官方推荐的海报排版工具

3441
01:58:49,000 --> 01:58:52,000
他甚至他给的官方

3442
01:58:52,000 --> 01:58:54,000
对就是你的你的你的论文有可能

3443
01:58:54,000 --> 01:58:56,000
就是你的 paper 有可能有两种发表形式嘛

3444
01:58:56,000 --> 01:58:58,000
一种是 presentation

3445
01:58:58,000 --> 01:58:59,000
就是你去那边做一个演讲

3446
01:58:59,000 --> 01:59:00,000
另一种就是 poster

3447
01:59:00,000 --> 01:59:03,000
就是你在会场贴一个海报

3448
01:59:03,000 --> 01:59:04,000
然后你站在海报旁边

3449
01:59:04,000 --> 01:59:06,000
等别人来跟你交流这样子

3450
01:59:06,000 --> 01:59:07,000
然后他的官方

3451
01:59:07,000 --> 01:59:07,000
给你一个海报排版工具

3452
01:59:07,000 --> 01:59:09,000
给你的这个海报的排版模板

3453
01:59:09,000 --> 01:59:11,000
就是一个 pollpoint 的一个文件

3454
01:59:11,000 --> 01:59:14,000
就里面各种什么会议的 logo 啊

3455
01:59:14,000 --> 01:59:15,000
元素啊

3456
01:59:15,000 --> 01:59:18,000
这个指定的字体样式都给你定好了

3457
01:59:18,000 --> 01:59:19,000
对吧

3458
01:59:19,000 --> 01:59:20,000
没有很简单

3459
01:59:20,000 --> 01:59:23,000
就是他会给你一个比较简单的框架吧

3460
01:59:23,000 --> 01:59:25,000
因为那些会议一般他没有什么 logo

3461
01:59:25,000 --> 01:59:28,000
他可能他可能主要还是侧重展示你自己的

3462
01:59:28,000 --> 01:59:29,000
他有一个格式嘛

3463
01:59:29,000 --> 01:59:30,000
对有一个大致的格式

3464
01:59:30,000 --> 01:59:31,000
同样的通用的格式

3465
01:59:31,000 --> 01:59:33,000
标题是什么

3466
01:59:33,000 --> 01:59:34,000
作者是谁

3467
01:59:34,000 --> 01:59:35,000
会议名称

3468
01:59:35,000 --> 01:59:36,000
某某地级界什么什么

3469
01:59:36,000 --> 01:59:38,000
conference 之类的这种

3470
01:59:38,000 --> 01:59:40,000
会给你定好的那个模板

3471
01:59:40,000 --> 01:59:42,000
这就在中间是一个大白板

3472
01:59:42,000 --> 01:59:42,000
你自己写嘛

3473
01:59:42,000 --> 01:59:45,000
但其实你最后交的这个海报

3474
01:59:45,000 --> 01:59:47,000
如果跟他这个格式有很大差异

3475
01:59:47,000 --> 01:59:49,000
但是基本的文本信息是对上的话

3476
01:59:49,000 --> 01:59:52,000
他其实不会干涉你对这个设计的改变

3477
01:59:52,000 --> 01:59:54,000
达到目的就可以的嘛

3478
01:59:54,000 --> 01:59:55,000
毕竟不是一个商业发行

3479
01:59:55,000 --> 01:59:59,000
说到底的话

3480
01:59:59,000 --> 02:00:01,000
对您现在再来讲

3481
02:00:01,000 --> 02:00:04,000
讨论说 Tag 有各种各样的不好的地方

3482
02:00:04,000 --> 02:00:06,000
当时无非就是高端的

3483
02:00:06,000 --> 02:00:06,000
他自己想把这个文件

3484
02:00:06,000 --> 02:00:08,000
把自己书印好了

3485
02:00:08,000 --> 02:00:09,000
然后呢

3486
02:00:09,000 --> 02:00:09,000
人家很牛

3487
02:00:09,000 --> 02:00:12,000
他自己为了自己拍书

3488
02:00:12,000 --> 02:00:14,000
他自己写了一个拍板引擎

3489
02:00:14,000 --> 02:00:15,000
自己做了套自己

3490
02:00:15,000 --> 02:00:17,000
然后他写出来了

3491
02:00:17,000 --> 02:00:18,000
但是他觉得挺好的

3492
02:00:18,000 --> 02:00:19,000
于是呢

3493
02:00:19,000 --> 02:00:20,000
他就开源出来了

3494
02:00:20,000 --> 02:00:21,000
大家也都可以用

3495
02:00:21,000 --> 02:00:23,000
就仅此而已嘛

3496
02:00:23,000 --> 02:00:25,000
事情就结束了嘛

3497
02:00:25,000 --> 02:00:26,000
你们爱怎么用

3498
02:00:26,000 --> 02:00:28,000
你们再爱怎么倒

3499
02:00:28,000 --> 02:00:30,000
这是都是大家后来的事情了

3500
02:00:30,000 --> 02:00:32,000
他原来的目的就想

3501
02:00:32,000 --> 02:00:34,000
只是想他觉得原来那个

3502
02:00:34,000 --> 02:00:36,000
照牌排出来

3503
02:00:36,000 --> 02:00:36,000
那个把他自己的文件

3504
02:00:36,000 --> 02:00:38,000
把自己的书太难看了

3505
02:00:38,000 --> 02:00:40,000
然后他希望他想对他的作品

3506
02:00:40,000 --> 02:00:42,000
有 full control

3507
02:00:42,000 --> 02:00:43,000
完全的控制

3508
02:00:43,000 --> 02:00:44,000
所以呢

3509
02:00:44,000 --> 02:00:46,000
他写出来这样一个东西

3510
02:00:46,000 --> 02:00:48,000
而且也只有像他这样的大师

3511
02:00:48,000 --> 02:00:53,000
才能把自己的字体和渲染引擎写出来

3512
02:00:53,000 --> 02:00:56,000
而且好像自从那之后

3513
02:00:56,000 --> 02:00:59,000
从来没有人想过这件事情了

3514
02:00:59,000 --> 02:01:00,000
我感觉

3515
02:01:00,000 --> 02:01:02,000
就是对吧

3516
02:01:02,000 --> 02:01:04,000
已经没有人有这种胆量

3517
02:01:04,000 --> 02:01:06,000
去尝试这件事情

3518
02:01:06,000 --> 02:01:09,000
对这件事情太跨学科了吧

3519
02:01:09,000 --> 02:01:11,000
他对自己排运的知识要求也非常高

3520
02:01:11,000 --> 02:01:15,000
我记得高德纳好像还跟差不服有过很深度的合作

3521
02:01:15,000 --> 02:01:15,000
对没错

3522
02:01:15,000 --> 02:01:17,000
这我们也可以讲一讲

3523
02:01:17,000 --> 02:01:20,000
对没有他他他当时其实是没想那么多

3524
02:01:20,000 --> 02:01:21,000
他就觉得啊

3525
02:01:21,000 --> 02:01:22,000
这个太难看

3526
02:01:22,000 --> 02:01:22,000
然后自己写个

3527
02:01:22,000 --> 02:01:23,000
然后呢

3528
02:01:23,000 --> 02:01:27,000
他当时一开始觉得说这事情花几个月就能搞定的事情吧

3529
02:01:27,000 --> 02:01:30,000
然后他才发现他太乐观了

3530
02:01:30,000 --> 02:01:31,000
是个大坑

3531
02:01:31,000 --> 02:01:31,000
对

3532
02:01:31,000 --> 02:01:33,000
嗯

3533
02:01:33,000 --> 02:01:34,000
而且呢

3534
02:01:34,000 --> 02:01:34,000
他一开始呢

3535
02:01:34,000 --> 02:01:36,000
就是他决定要做这个字体

3536
02:01:36,000 --> 02:01:36,000
是什么呢

3537
02:01:36,000 --> 02:01:38,000
他其实也想了

3538
02:01:38,000 --> 02:01:40,000
他还想用别人的东西

3539
02:01:40,000 --> 02:01:41,000
而且他那时候失乐

3540
02:01:41,000 --> 02:01:43,000
不是那时候已经有那个实验室

3541
02:01:43,000 --> 02:01:44,000
有一些东西吗

3542
02:01:44,000 --> 02:01:45,000
在打印机啊什么

3543
02:01:45,000 --> 02:01:46,000
他去问嘛

3544
02:01:46,000 --> 02:01:47,000
就是说我能不能用

3545
02:01:47,000 --> 02:01:48,000
然后呢

3546
02:01:48,000 --> 02:01:50,000
失乐跟他谈判的基础就是说

3547
02:01:50,000 --> 02:01:52,000
你可以用我的设备

3548
02:01:52,000 --> 02:01:53,000
但是最后做出来的东西呢

3549
02:01:53,000 --> 02:01:54,000
又归于我失乐

3550
02:01:54,000 --> 02:01:56,000
然后他就不愿意了嘛

3551
02:01:56,000 --> 02:01:59,000
这东西最后做出来应该开源啊

3552
02:01:59,000 --> 02:01:59,000
给大家用吧

3553
02:01:59,000 --> 02:02:01,000
所以他到后来就想不行

3554
02:02:01,000 --> 02:02:02,000
那想来想去

3555
02:02:02,000 --> 02:02:03,000
我还是得自己重新做

3556
02:02:03,000 --> 02:02:05,000
然后他发现

3557
02:02:05,000 --> 02:02:05,000
既然

3558
02:02:05,000 --> 02:02:06,000
目前的事情

3559
02:02:06,000 --> 02:02:07,000
目前所有的东西

3560
02:02:07,000 --> 02:02:09,000
他不能去改动现有的字体嘛

3561
02:02:09,000 --> 02:02:12,000
那他只好就重新再做一个字体

3562
02:02:12,000 --> 02:02:14,000
他要是学习的时候

3563
02:02:14,000 --> 02:02:15,000
发现

3564
02:02:15,000 --> 02:02:16,000
你现在

3565
02:02:16,000 --> 02:02:18,000
无论是那些史量和

3566
02:02:18,000 --> 02:02:19,000
那些点证的字体

3567
02:02:19,000 --> 02:02:20,000
都不能满足他要求

3568
02:02:20,000 --> 02:02:22,000
那我就干脆直接向

3569
02:02:22,000 --> 02:02:25,000
现成的字体设计师

3570
02:02:25,000 --> 02:02:27,000
去学如何画字

3571
02:02:27,000 --> 02:02:28,000
然后再用

3572
02:02:28,000 --> 02:02:30,000
他的这个程序呢

3573
02:02:30,000 --> 02:02:31,000
教电脑如何画字

3574
02:02:31,000 --> 02:02:33,000
其实他做的那个

3575
02:02:33,000 --> 02:02:34,000
MetaFont 的话

3576
02:02:34,000 --> 02:02:35,000
是真正的

3577
02:02:35,000 --> 02:02:36,000
在画这个字嘛

3578
02:02:36,000 --> 02:02:36,000
因为我们

3579
02:02:36,000 --> 02:02:38,000
现在用的这个史量

3580
02:02:38,000 --> 02:02:39,000
史量字体

3581
02:02:39,000 --> 02:02:40,000
它只是轮廓嘛

3582
02:02:40,000 --> 02:02:42,000
就把那个字体的勾边勾出来

3583
02:02:42,000 --> 02:02:44,000
但是 MetaFont 的

3584
02:02:44,000 --> 02:02:45,000
它是真正

3585
02:02:45,000 --> 02:02:47,000
它教它的那个代码

3586
02:02:47,000 --> 02:02:49,000
是在写这个字

3587
02:02:49,000 --> 02:02:49,000
应该怎么写

3588
02:02:49,000 --> 02:02:51,000
一笔一画怎么写

3589
02:02:51,000 --> 02:02:51,000
对

3590
02:02:51,000 --> 02:02:54,000
就最终它是渲染出一个

3591
02:02:54,000 --> 02:02:55,000
位图的格式了

3592
02:02:55,000 --> 02:02:56,000
它的那个是史量的

3593
02:02:56,000 --> 02:02:57,000
但最后它

3594
02:02:57,000 --> 02:02:59,000
它最后必须得渲染成

3595
02:02:59,000 --> 02:03:00,000
渲染成位图

3596
02:03:00,000 --> 02:03:02,000
最后呈现出来嘛

3597
02:03:02,000 --> 02:03:02,000
对吧

3598
02:03:02,000 --> 02:03:03,000
因为这个渲染

3599
02:03:03,000 --> 02:03:04,000
这是最后的事情了

3600
02:03:04,000 --> 02:03:05,000
但是它的那个代码

3601
02:03:05,000 --> 02:03:05,000
最后是

3602
02:03:05,000 --> 02:03:06,000
它的确是

3603
02:03:06,000 --> 02:03:08,000
叫这个点位移

3604
02:03:08,000 --> 02:03:08,000
移多少

3605
02:03:08,000 --> 02:03:10,000
这个笔画是怎么样的

3606
02:03:10,000 --> 02:03:11,000
然后再后在上面长肉

3607
02:03:11,000 --> 02:03:12,000
是什么样的

3608
02:03:12,000 --> 02:03:13,000
它那个 MetaFont

3609
02:03:13,000 --> 02:03:15,000
其实是在画一个字嘛

3610
02:03:15,000 --> 02:03:16,000
它之所以有这样的

3611
02:03:16,000 --> 02:03:17,000
这样一个思路

3612
02:03:17,000 --> 02:03:17,000
就是因为

3613
02:03:17,000 --> 02:03:19,000
它在做字体的话

3614
02:03:19,000 --> 02:03:20,000
它是直接找

3615
02:03:20,000 --> 02:03:22,000
这个字体设计师

3616
02:03:22,000 --> 02:03:22,000
它去

3617
02:03:22,000 --> 02:03:24,000
当时是找查普夫啊

3618
02:03:24,000 --> 02:03:24,000
他们像

3619
02:03:24,000 --> 02:03:25,000
比如我

3620
02:03:25,000 --> 02:03:26,000
我画个字母

3621
02:03:26,000 --> 02:03:28,000
先画右边一笔

3622
02:03:28,000 --> 02:03:29,000
左边一笔

3623
02:03:29,000 --> 02:03:30,000
然后那个称线怎么加

3624
02:03:30,000 --> 02:03:32,000
然后再削掉一点

3625
02:03:32,000 --> 02:03:33,000
就是就一步一步

3626
02:03:33,000 --> 02:03:34,000
真的就是按那个

3627
02:03:34,000 --> 02:03:35,000
写字的那个步骤

3628
02:03:35,000 --> 02:03:36,000
就写出来的

3629
02:03:36,000 --> 02:03:36,000
一步一步

3630
02:03:36,000 --> 02:03:37,000
一笔一笔写出来的

3631
02:03:37,000 --> 02:03:37,000
就是

3632
02:03:37,000 --> 02:03:40,000
MetaFont 是这样的

3633
02:03:40,000 --> 02:03:41,000
就是 MetaFont 的机制

3634
02:03:41,000 --> 02:03:42,000
它是矢量的

3635
02:03:42,000 --> 02:03:44,000
但是 MetaFont

3636
02:03:44,000 --> 02:03:45,000
绘制的结果

3637
02:03:45,000 --> 02:03:46,000
好像是位图

3638
02:03:46,000 --> 02:03:46,000
它是个

3639
02:03:46,000 --> 02:03:47,000
它是个 Rasterizer

3640
02:03:47,000 --> 02:03:49,000
就是你要指定一个

3641
02:03:49,000 --> 02:03:50,000
它你

3642
02:03:50,000 --> 02:03:52,000
你在调用 MetaFont 的时候

3643
02:03:52,000 --> 02:03:52,000
你要是

3644
02:03:52,000 --> 02:03:53,000
你是要指定单位的呀

3645
02:03:53,000 --> 02:03:54,000
那这个单位

3646
02:03:54,000 --> 02:03:55,000
是拿来干什么的

3647
02:03:55,000 --> 02:03:56,000
可能是拿来画

3648
02:03:56,000 --> 02:03:57,000
就是拿来定位的嘛

3649
02:03:57,000 --> 02:03:58,000
对

3650
02:03:58,000 --> 02:03:59,000
因为要 MetaFont

3651
02:03:59,000 --> 02:04:01,000
你还得有字体知识

3652
02:04:01,000 --> 02:04:03,000
而做 MetaFont 的厂商

3653
02:04:03,000 --> 02:04:03,000
非常少

3654
02:04:03,000 --> 02:04:05,000
现在应该已经绝技了吧

3655
02:04:05,000 --> 02:04:06,000
对

3656
02:04:06,000 --> 02:04:09,000
因为特别难写啊

3657
02:04:09,000 --> 02:04:09,000
因为它要

3658
02:04:09,000 --> 02:04:11,000
就是等于教电脑

3659
02:04:11,000 --> 02:04:12,000
怎么写这个字

3660
02:04:12,000 --> 02:04:14,000
因此就是

3661
02:04:14,000 --> 02:04:16,000
要 60 多个参数吧

3662
02:04:16,000 --> 02:04:18,000
就是老多参数了

3663
02:04:18,000 --> 02:04:20,000
这个对于一个设计师

3664
02:04:20,000 --> 02:04:22,000
而且它是

3665
02:04:22,000 --> 02:04:23,000
非常不直观的

3666
02:04:23,000 --> 02:04:23,000
对吧

3667
02:04:23,000 --> 02:04:24,000
你是其实是书

3668
02:04:24,000 --> 02:04:25,000
你是在写代码

3669
02:04:25,000 --> 02:04:26,000
对啊

3670
02:04:26,000 --> 02:04:26,000
对啊

3671
02:04:26,000 --> 02:04:27,000
设了好多遍

3672
02:04:27,000 --> 02:04:28,000
你首先

3673
02:04:28,000 --> 02:04:29,000
我一个新的字体

3674
02:04:29,000 --> 02:04:31,000
要设多少个变量

3675
02:04:31,000 --> 02:04:32,000
你得想嘛

3676
02:04:32,000 --> 02:04:32,000
对吧

3677
02:04:32,000 --> 02:04:34,000
然后一个参数

3678
02:04:34,000 --> 02:04:35,000
然后都要复制

3679
02:04:35,000 --> 02:04:36,000
然后怎样

3680
02:04:36,000 --> 02:04:36,000
那它怎么

3681
02:04:36,000 --> 02:04:37,000
动起来

3682
02:04:37,000 --> 02:04:38,000
怎么加成性

3683
02:04:38,000 --> 02:04:39,000
这个对于一个

3684
02:04:39,000 --> 02:04:40,000
普通的设计师来讲

3685
02:04:40,000 --> 02:04:41,000
太不直观了

3686
02:04:41,000 --> 02:04:42,000
对

3687
02:04:42,000 --> 02:04:43,000
原来是这样

3688
02:04:43,000 --> 02:04:44,000
所以

3689
02:04:44,000 --> 02:04:46,000
其实现在也没有人

3690
02:04:46,000 --> 02:04:48,000
在用这个 MetaFont

3691
02:04:48,000 --> 02:04:49,000
做字

3692
02:04:49,000 --> 02:04:50,000
然后当时我记得

3693
02:04:50,000 --> 02:04:51,000
我用的时候

3694
02:04:51,000 --> 02:04:53,000
其实已经是过了

3695
02:04:53,000 --> 02:04:54,000
那个时间段

3696
02:04:54,000 --> 02:04:55,000
就我用的

3697
02:04:55,000 --> 02:04:55,000
那个时候

3698
02:04:55,000 --> 02:04:56,000
还有两个并行的系统

3699
02:04:56,000 --> 02:04:57,000
就是 Tag

3700
02:04:57,000 --> 02:04:58,000
就是 Tag 系统

3701
02:04:58,000 --> 02:05:00,000
要去引用一个系统字体啊

3702
02:05:00,000 --> 02:05:01,000
是非常困难的

3703
02:05:01,000 --> 02:05:04,000
但是还要转换格式

3704
02:05:04,000 --> 02:05:05,000
要转换成一个 Tag

3705
02:05:05,000 --> 02:05:05,000
很能够认

3706
02:05:05,000 --> 02:05:06,000
不是说

3707
02:05:06,000 --> 02:05:07,000
你丢一个 TTF

3708
02:05:07,000 --> 02:05:08,000
或者是 OpenTag 给它

3709
02:05:08,000 --> 02:05:09,000
它就能用了

3710
02:05:09,000 --> 02:05:10,000
但是后来

3711
02:05:10,000 --> 02:05:12,000
越到后来像什么

3712
02:05:12,000 --> 02:05:13,000
ZTag

3713
02:05:13,000 --> 02:05:15,000
特别是 ZTag 出来之后

3714
02:05:15,000 --> 02:05:16,000
它是可以直接调用系统字体

3715
02:05:16,000 --> 02:05:17,000
因为它是 Mac 上面的

3716
02:05:17,000 --> 02:05:18,000
Mac 上面

3717
02:05:18,000 --> 02:05:20,000
它本来就是把这个 OpenTag 那套

3718
02:05:20,000 --> 02:05:21,000
做成一个系统级别的

3719
02:05:21,000 --> 02:05:22,000
这个 API

3720
02:05:22,000 --> 02:05:23,000
可以暴露给上面的

3721
02:05:23,000 --> 02:05:25,000
这个应用程序嘛

3722
02:05:25,000 --> 02:05:26,000
所以它并没有像

3723
02:05:26,000 --> 02:05:27,000
最原始的那个 Tag 那种

3724
02:05:27,000 --> 02:05:28,000
你还得自己

3725
02:05:28,000 --> 02:05:30,000
用自己的什么 MetaFont 那种

3726
02:05:30,000 --> 02:05:32,000
格式去描述一个字体

3727
02:05:32,000 --> 02:05:33,000
当时还有好多这种

3728
02:05:33,000 --> 02:05:34,000
就是所谓的中间格式

3729
02:05:34,000 --> 02:05:35,000
什么 Font 1 啊

3730
02:05:35,000 --> 02:05:36,000
那也还中间

3731
02:05:36,000 --> 02:05:37,000
还要转很多遍

3732
02:05:37,000 --> 02:05:38,000
后来都是可以直接

3733
02:05:38,000 --> 02:05:40,000
就调用系统里面存在的

3734
02:05:40,000 --> 02:05:42,000
OpenTag 或者 TrueTag 字体

3735
02:05:42,000 --> 02:05:42,000
就可以了

3736
02:05:42,000 --> 02:05:44,000
也就不用再考虑什么

3737
02:05:44,000 --> 02:05:45,000
MetaFont

3738
02:05:45,000 --> 02:05:46,000
包括这个甚至

3739
02:05:46,000 --> 02:05:47,000
这个 Computer Model

3740
02:05:47,000 --> 02:05:48,000
后来也有人转成

3741
02:05:48,000 --> 02:05:48,000
那个 TrueTag

3742
02:05:48,000 --> 02:05:50,000
还是 OpenTag 的格式

3743
02:05:50,000 --> 02:05:51,000
放在那个库里面

3744
02:05:51,000 --> 02:05:53,000
就更直接使用嘛

3745
02:05:53,000 --> 02:05:55,000
而且这很重要一点

3746
02:05:55,000 --> 02:05:56,000
就是说大家感觉

3747
02:05:56,000 --> 02:05:57,000
字体就是它的一个造型

3748
02:05:57,000 --> 02:05:58,000
这个造型轮廓而已

3749
02:05:58,000 --> 02:05:59,000
其实更重要的

3750
02:05:59,000 --> 02:06:00,000
对于排版的来讲

3751
02:06:00,000 --> 02:06:02,000
是很多里面的 Matrix

3752
02:06:02,000 --> 02:06:05,000
就是它的那个度量信息

3753
02:06:05,000 --> 02:06:06,000
里面记录了

3754
02:06:06,000 --> 02:06:07,000
比如说这个基线

3755
02:06:07,000 --> 02:06:08,000
是在什么位置

3756
02:06:08,000 --> 02:06:09,000
然后这个字里

3757
02:06:09,000 --> 02:06:11,000
降步是有多高

3758
02:06:11,000 --> 02:06:12,000
升步有多高

3759
02:06:12,000 --> 02:06:14,000
这些东西都必须要让

3760
02:06:14,000 --> 02:06:15,000
排版引擎进行读取

3761
02:06:15,000 --> 02:06:17,000
它才能调啊

3762
02:06:17,000 --> 02:06:18,000
要不然它找不

3763
02:06:18,000 --> 02:06:19,000
它不认得这个字的话

3764
02:06:19,000 --> 02:06:20,000
它没办法调

3765
02:06:20,000 --> 02:06:21,000
你上下标

3766
02:06:21,000 --> 02:06:23,000
你要给它挪多少位置之类的

3767
02:06:23,000 --> 02:06:24,000
基线要提高多少

3768
02:06:24,000 --> 02:06:25,000
这些东西都必须要

3769
02:06:25,000 --> 02:06:28,000
字体里面先要有这个信息

3770
02:06:28,000 --> 02:06:30,000
然后要让排版引擎知道

3771
02:06:30,000 --> 02:06:32,000
那大家知道 Tag 和原来和

3772
02:06:32,000 --> 02:06:33,000
和 OpenTag

3773
02:06:33,000 --> 02:06:35,000
它原来根本就不是一个体系的

3774
02:06:36,000 --> 02:06:36,000
东西

3775
02:06:36,000 --> 02:06:37,000
所以他们两个人

3776
02:06:37,000 --> 02:06:38,000
集同压缴

3777
02:06:38,000 --> 02:06:39,000
这两个东西之间

3778
02:06:39,000 --> 02:06:39,000
对

3779
02:06:39,000 --> 02:06:43,000
要让他们互相交流到这个信息

3780
02:06:43,000 --> 02:06:44,000
然后让他互相知道这个事情

3781
02:06:44,000 --> 02:06:46,000
就本身就是一个很难的

3782
02:06:46,000 --> 02:06:46,000
对

3783
02:06:46,000 --> 02:06:48,000
原来的话

3784
02:06:48,000 --> 02:06:51,000
高德纳他因为 Metaphone

3785
02:06:51,000 --> 02:06:52,000
是他自己做的

3786
02:06:52,000 --> 02:06:54,000
他所有他自己新定义了一套 Matrix

3787
02:06:54,000 --> 02:06:56,000
然后呢

3788
02:06:56,000 --> 02:06:58,000
让 Tag 能调用

3789
02:06:58,000 --> 02:06:59,000
他自己做东西

3790
02:06:59,000 --> 02:07:00,000
就他自己好调用吗

3791
02:07:00,000 --> 02:07:00,000
对

3792
02:07:00,000 --> 02:07:01,000
这个就正如

3793
02:07:01,000 --> 02:07:04,000
Adobe 他自己 OpenTag

3794
02:07:04,000 --> 02:07:05,000
他这个 Spec

3795
02:07:05,000 --> 02:07:06,000
就是 Adobe 他自己

3796
02:07:06,000 --> 02:07:06,000
开发的

3797
02:07:06,000 --> 02:07:07,000
然后

3798
02:07:07,000 --> 02:07:10,000
InDesign 又是他自己的软件

3799
02:07:10,000 --> 02:07:10,000
所以呢

3800
02:07:10,000 --> 02:07:12,000
他自己的软件掉 OpenTag 的特性

3801
02:07:12,000 --> 02:07:13,000
就掉得特别好嘛

3802
02:07:13,000 --> 02:07:15,000
所以你在方正的软件里面

3803
02:07:15,000 --> 02:07:17,000
排版软引擎里面

3804
02:07:17,000 --> 02:07:19,000
你要用 Adobe 的 OpenTag 的特性

3805
02:07:19,000 --> 02:07:20,000
就特别难受

3806
02:07:20,000 --> 02:07:21,000
就掉不出来嘛

3807
02:07:21,000 --> 02:07:23,000
因为他们不是

3808
02:07:23,000 --> 02:07:24,000
不是一个系统东西

3809
02:07:24,000 --> 02:07:26,000
那这些国产的这些系统软件

3810
02:07:26,000 --> 02:07:28,000
他难道还要说要求

3811
02:07:28,000 --> 02:07:30,000
用国产的自己格式才行吗

3812
02:07:30,000 --> 02:07:32,000
就他这个怎么解决这个问题呢

3813
02:07:32,000 --> 02:07:33,000
在很久以前

3814
02:07:33,000 --> 02:07:35,000
在方正软件

3815
02:07:35,000 --> 02:07:36,000
必须要用方正的软件

3816
02:07:36,000 --> 02:07:37,000
用方正的字体

3817
02:07:37,000 --> 02:07:38,000
以前是不认的

3818
02:07:38,000 --> 02:07:41,000
方正是自己有一个字体格式的

3819
02:07:41,000 --> 02:07:42,000
对没错

3820
02:07:42,000 --> 02:07:43,000
是的

3821
02:07:43,000 --> 02:07:46,000
但后来也是终于可以用 TTF 了

3822
02:07:46,000 --> 02:07:48,000
也能用 OpenTag

3823
02:07:48,000 --> 02:07:49,000
这也是很后面的事情了

3824
02:07:49,000 --> 02:07:53,000
那现在这个业界不都统一到这个

3825
02:07:53,000 --> 02:07:55,000
TrueType 和 OpenType 这两个格式了

3826
02:07:55,000 --> 02:07:57,000
那现在所有的现代

3827
02:07:57,000 --> 02:07:58,000
排版软件都得支持吧

3828
02:07:59,000 --> 02:08:00,000
对啊

3829
02:08:00,000 --> 02:08:01,000
嗯

3830
02:08:01,000 --> 02:08:02,000
但是你也知道吧

3831
02:08:02,000 --> 02:08:03,000
OpenType

3832
02:08:03,000 --> 02:08:06,000
有微软和 Adobe 做的嘛

3833
02:08:06,000 --> 02:08:06,000
OK

3834
02:08:06,000 --> 02:08:09,000
这跟 WPS 之类的差不多嘛

3835
02:08:09,000 --> 02:08:09,000
其实

3836
02:08:09,000 --> 02:08:12,000
支持程度也可以不一样

3837
02:08:12,000 --> 02:08:13,000
因为你想一个字体里面

3838
02:08:13,000 --> 02:08:15,000
现在的 OpenType 字体

3839
02:08:15,000 --> 02:08:16,000
它的特性非常复杂

3840
02:08:16,000 --> 02:08:19,000
它有很多指导你怎样去排版的特性

3841
02:08:19,000 --> 02:08:21,000
而最早的一个 TrueType 的字体

3842
02:08:21,000 --> 02:08:23,000
它其实指核心的功能

3843
02:08:23,000 --> 02:08:25,000
就是描述一个具体的 Glyph

3844
02:08:25,000 --> 02:08:27,000
它的轮廓是什么样的

3845
02:08:27,000 --> 02:08:27,000
比较简单吗

3846
02:08:27,000 --> 02:08:30,000
方正其实它以前就是通过排版引擎

3847
02:08:30,000 --> 02:08:32,000
来实现很多排版的特性

3848
02:08:32,000 --> 02:08:34,000
但是现在可能业界更希望

3849
02:08:34,000 --> 02:08:35,000
大家能够遵循

3850
02:08:35,000 --> 02:08:38,000
OpenType 这个字体里面

3851
02:08:38,000 --> 02:08:39,000
已经写入的一些排版特性

3852
02:08:39,000 --> 02:08:41,000
来实现一些排版

3853
02:08:41,000 --> 02:08:44,000
就是这个权利到底是在排版师那里

3854
02:08:44,000 --> 02:08:46,000
还是在字体设计师那里的问题吗

3855
02:08:46,000 --> 02:08:48,000
在哪个层级你要说好

3856
02:08:48,000 --> 02:08:49,000
然后呢

3857
02:08:49,000 --> 02:08:50,000
你互相能调用就可以嘛

3858
02:08:50,000 --> 02:08:51,000
嗯

3859
02:08:51,000 --> 02:08:54,000
像 Tag 和 Metafound 都是同一个人做的

3860
02:08:54,000 --> 02:08:55,000
所以他自己想清楚

3861
02:08:55,000 --> 02:08:57,000
他自己做互相调用就很顺嘛

3862
02:08:57,000 --> 02:09:00,000
那你到另外一个系统去集通压缠

3863
02:09:00,000 --> 02:09:02,000
这个搞不清楚啊

3864
02:09:02,000 --> 02:09:02,000
是

3865
02:09:02,000 --> 02:09:04,000
因为毕竟互相都不能

3866
02:09:04,000 --> 02:09:07,000
直接干预对方的这个成果吧

3867
02:09:07,000 --> 02:09:08,000
他自己设计师也不能说

3868
02:09:08,000 --> 02:09:10,000
我这个自己只能用在哪些领域

3869
02:09:10,000 --> 02:09:11,000
他也不知道你应用场景是什么

3870
02:09:11,000 --> 02:09:13,000
只能给到你一些啊

3871
02:09:13,000 --> 02:09:14,000
通用的建议对吧

3872
02:09:14,000 --> 02:09:17,000
然后排版师那边对 Hint

3873
02:09:17,000 --> 02:09:19,000
然后排版师那边也也也只能说

3874
02:09:19,000 --> 02:09:22,000
我根据我现在手上这个这个工

3875
02:09:22,000 --> 02:09:25,000
这个作品的特殊的这个情况选择

3876
02:09:25,000 --> 02:09:27,000
要不要启用你的那个 Hint

3877
02:09:27,000 --> 02:09:29,000
还是说我自己自自己定一个规则

3878
02:09:29,000 --> 02:09:30,000
说了算算了对吧

3879
02:09:30,000 --> 02:09:33,000
因为有些特殊情况都要特殊处理的嘛

3880
02:09:33,000 --> 02:09:35,000
搞个很简单的就是网页排版

3881
02:09:35,000 --> 02:09:36,000
连一个航高都算不清楚嘛

3882
02:09:36,000 --> 02:09:37,000
就是这一点嘛

3883
02:09:37,000 --> 02:09:39,000
不同系统的

3884
02:09:39,000 --> 02:09:42,000
他读取的 OpenType 特性里面的字段呢

3885
02:09:42,000 --> 02:09:45,000
航高的那个数据字段是不一样的

3886
02:09:45,000 --> 02:09:48,000
那每个浏览器读出来的数值都不一样

3887
02:09:48,000 --> 02:09:50,000
他算出来的位置就都不一样

3888
02:09:50,000 --> 02:09:51,000
他渲染出来的东西都不一样嘛

3889
02:09:51,000 --> 02:09:55,000
所以这一套有什么国标之类的吗

3890
02:09:55,000 --> 02:09:57,000
还是说就是只有行业标准

3891
02:09:57,000 --> 02:09:59,000
就大家各自去想办法解决

3892
02:09:59,000 --> 02:10:02,000
这典型的 OpenType 就是一个商业标准嘛

3893
02:10:02,000 --> 02:10:02,000
这行业巨头

3894
02:10:03,000 --> 02:10:03,000
是一套系统的

3895
02:10:03,000 --> 02:10:05,000
因为是大厂商做的嘛

3896
02:10:05,000 --> 02:10:08,000
所以大家自然而然的也就都跟进嘛

3897
02:10:08,000 --> 02:10:09,000
从这个侧面来讲的话

3898
02:10:09,000 --> 02:10:11,000
高德纳是一个人挑

3899
02:10:11,000 --> 02:10:14,000
就是单枪匹马做一套系统

3900
02:10:14,000 --> 02:10:18,000
然后我们在这边拿来和整个业界做出来的一套系统相比

3901
02:10:18,000 --> 02:10:20,000
这是大宗师的风范

3902
02:10:20,000 --> 02:10:21,000
不是错了

3903
02:10:21,000 --> 02:10:24,000
是大多数做的时候业界这个事情还不存在

3904
02:10:24,000 --> 02:10:25,000
没有这个业好吗

3905
02:10:25,000 --> 02:10:26,000
业界还不存在

3906
02:10:26,000 --> 02:10:28,000
没有这个行业

3907
02:10:28,000 --> 02:10:31,000
40 多年前 70 年代的事情嘛

3908
02:10:31,000 --> 02:10:32,000
对啊

3909
02:10:32,000 --> 02:10:32,000
所以那时候

3910
02:10:32,000 --> 02:10:34,000
桌面排版是什么

3911
02:10:34,000 --> 02:10:35,000
那时候还没有 Mac

3912
02:10:35,000 --> 02:10:36,000
那个时候 PC 都没有

3913
02:10:36,000 --> 02:10:37,000
还桌面排版

3914
02:10:37,000 --> 02:10:41,000
所以从这个意义上讲

3915
02:10:41,000 --> 02:10:42,000
它真的是一个传奇

3916
02:10:42,000 --> 02:10:44,000
就是一个人开创了一个领域

3917
02:10:44,000 --> 02:10:44,000
但是

3918
02:10:44,000 --> 02:10:48,000
而且这个领域的这个成果到现在还是被

3919
02:10:48,000 --> 02:10:51,000
被一些比较像他一样

3920
02:10:51,000 --> 02:10:54,000
比较喜欢走极端的人所使用的

3921
02:10:54,000 --> 02:10:56,000
而其他的熟民

3922
02:10:56,000 --> 02:10:59,000
或者说没有那么 geek 的人们

3923
02:10:59,000 --> 02:11:00,000
就在使用着另一套

3924
02:11:00,000 --> 02:11:02,000
可能更 user friendly 的系统

3925
02:11:02,000 --> 02:11:06,000
而他们最终的结果几乎是不分伯仲的

3926
02:11:06,000 --> 02:11:08,000
我不知道你嘛

3927
02:11:08,000 --> 02:11:09,000
但是有时候我会觉得

3928
02:11:09,000 --> 02:11:12,000
Tag 排出来的东西太有风格性了

3929
02:11:12,000 --> 02:11:14,000
就是你一看就知道这是 Tag 写的

3930
02:11:14,000 --> 02:11:17,000
但是反过来一个用 word 或者是

3931
02:11:17,000 --> 02:11:19,000
word 也很有风格

3932
02:11:19,000 --> 02:11:22,000
一看就用艺术字

3933
02:11:22,000 --> 02:11:24,000
用 in design 排出来的东西

3934
02:11:24,000 --> 02:11:27,000
你就会不太知道说这个东西到底是怎么来的

3935
02:11:27,000 --> 02:11:31,000
有时候 Tag 风格化可能也不是一件特别好的事情

3936
02:11:31,000 --> 02:11:32,000
这也是程度的问题嘛

3937
02:11:32,000 --> 02:11:34,000
他有点千篇一律啊

3938
02:11:34,000 --> 02:11:38,000
很多人他不会配置那些 Tag 很多个性化的参数

3939
02:11:38,000 --> 02:11:40,000
因为调个性化要牵涉到很多这种参数的变动

3940
02:11:40,000 --> 02:11:42,000
其实有时候不一定能得到好的结果

3941
02:11:42,000 --> 02:11:43,000
对还是那句话

3942
02:11:43,000 --> 02:11:45,000
You have to know everything to do anything

3943
02:11:45,000 --> 02:11:46,000
还是蛮难的

3944
02:11:46,000 --> 02:11:48,000
对啊就哪怕是最简单的

3945
02:11:48,000 --> 02:11:49,000
你就换一个字体

3946
02:11:49,000 --> 02:11:53,000
比如说你就看不惯这个 computer model

3947
02:11:53,000 --> 02:11:55,000
那种圆滚滚的这种长相的字体

3948
02:11:55,000 --> 02:11:56,000
当时我就有这个问题

3949
02:11:56,000 --> 02:11:58,000
我说我换成 Palatino 对吧

3950
02:11:58,000 --> 02:12:00,000
我用的是 Palatino 对

3951
02:12:00,000 --> 02:12:02,000
但是你一旦你用 Palatino

3952
02:12:02,000 --> 02:12:04,000
你就要考虑你的那个公式的问题了

3953
02:12:04,000 --> 02:12:07,000
因为公式的他当时很多那个 Palatino 的那个

3954
02:12:07,000 --> 02:12:11,000
这个就是希腊字母罗马字母

3955
02:12:11,000 --> 02:12:12,000
它是不齐全的

3956
02:12:12,000 --> 02:12:13,000
或者你必须要用那个代替字体

3957
02:12:13,000 --> 02:12:15,000
你就发现公式的特别难看

3958
02:12:15,000 --> 02:12:15,000
这是其一啊

3959
02:12:15,000 --> 02:12:17,000
第二个就是说数学排版

3960
02:12:17,000 --> 02:12:18,000
特别是公式排版的

3961
02:12:18,000 --> 02:12:19,000
但那个间距啊

3962
02:12:19,000 --> 02:12:21,000
那些那些就是 matrix

3963
02:12:21,000 --> 02:12:23,000
就是那些那些数值标注

3964
02:12:23,000 --> 02:12:25,000
它是根据那个字体来定制的

3965
02:12:25,000 --> 02:12:26,000
然后你换一套字体

3966
02:12:26,000 --> 02:12:28,000
对啊他写在字体里头了

3967
02:12:28,000 --> 02:12:29,000
但你就换了字体

3968
02:12:29,000 --> 02:12:30,000
你就发现那个就是更难看

3969
02:12:30,000 --> 02:12:31,000
就没有了

3970
02:12:31,000 --> 02:12:32,000
就很麻烦

3971
02:12:32,000 --> 02:12:34,000
所以到时大家就对最偷懒的方法

3972
02:12:34,000 --> 02:12:35,000
就直接啥也不改

3973
02:12:35,000 --> 02:12:36,000
直接写对吧

3974
02:12:36,000 --> 02:12:37,000
写内容就好了

3975
02:12:37,000 --> 02:12:38,000
不要管他长得

3976
02:12:38,000 --> 02:12:40,000
而且不要去定制他的长相

3977
02:12:40,000 --> 02:12:43,000
所以用 tech 做出来东西都是一样的了

3978
02:12:43,000 --> 02:12:44,000
大家都知道哦

3979
02:12:44,000 --> 02:12:46,000
这是一看就知道这是 tech 写的嘛

3980
02:12:46,000 --> 02:12:49,000
哈哈哈哈

3981
02:12:49,000 --> 02:12:50,000
也是一个传奇啊

3982
02:12:50,000 --> 02:12:52,000
机生单个单身机

3983
02:12:52,000 --> 02:12:53,000
但我不知道好

3984
02:12:53,000 --> 02:12:55,000
就如果说以后的那种论文

3985
02:12:55,000 --> 02:12:58,000
如果不需要考虑是一个页的形式存在

3986
02:12:58,000 --> 02:12:59,000
它可以是一个 scroll 的吧

3987
02:12:59,000 --> 02:13:02,000
一个长卷轴的形式出现

3988
02:13:02,000 --> 02:13:05,000
那其实很多排版的难题可以降很多降很多维度

3989
02:13:05,000 --> 02:13:10,000
对你你的意思是把排版的难题转嫁到浏览器上

3990
02:13:10,000 --> 02:13:12,000
浏览器的引擎实际上就是一个排版引擎嘛

3991
02:13:12,000 --> 02:13:13,000
哈哈哈

3992
02:13:13,000 --> 02:13:14,000
你不需要静态排版的

3993
02:13:14,000 --> 02:13:18,000
然后不是动态版本就一坨屎啊

3994
02:13:18,000 --> 02:13:19,000
现在就是你看 css 排版

3995
02:13:19,000 --> 02:13:21,000
现在能力那么差

3996
02:13:21,000 --> 02:13:22,000
觉得这一点太难了

3997
02:13:22,000 --> 02:13:23,000
这真的太难了

3998
02:13:23,000 --> 02:13:24,000
没有需求嘛

3999
02:13:24,000 --> 02:13:25,000
就是这个问题啊

4000
02:13:25,000 --> 02:13:29,000
浏览器厂商天天要考虑各种安全问题

4001
02:13:29,000 --> 02:13:31,000
还要给你搞这种非常坑爹的这个排版

4002
02:13:31,000 --> 02:13:32,000
嗯

4003
02:13:32,000 --> 02:13:32,000
我气死吧

4004
02:13:32,000 --> 02:13:34,000
你你在 web 排版

4005
02:13:34,000 --> 02:13:36,000
你连对方用什么字体都不知道了

4006
02:13:36,000 --> 02:13:37,000
你得猜

4007
02:13:37,000 --> 02:13:38,000
现在不用了嘛

4008
02:13:38,000 --> 02:13:39,000
现在有 webfont 嘛

4009
02:13:39,000 --> 02:13:40,000
可以指定了吧

4010
02:13:40,000 --> 02:13:44,000
但只是说那个最终体积的问题还是不太好说

4011
02:13:44,000 --> 02:13:47,000
对呀

4012
02:13:47,000 --> 02:13:51,000
不过我们自弹自上也花了两期时间就讲 web 排版的事情

4013
02:13:51,000 --> 02:13:53,000
大家可以回去听啊

4014
02:13:53,000 --> 02:13:54,000
这次他没有说是哪一期

4015
02:13:54,000 --> 02:13:57,000
我我已经很欣慰了

4016
02:13:57,000 --> 02:13:59,000
你一定要逼我说吗

4017
02:13:59,000 --> 02:14:00,000
偶尔我也能依稀想起来

4018
02:14:00,000 --> 02:14:02,000
内核恐慌聊过什么

4019
02:14:02,000 --> 02:14:04,000
因为刚好就是前两期不远

4020
02:14:04,000 --> 02:14:06,000
OK

4021
02:14:06,000 --> 02:14:08,000
那今天也聊了好久

4022
02:14:08,000 --> 02:14:09,000
好了

4023
02:14:09,000 --> 02:14:09,000
差不多了吧

4024
02:14:09,000 --> 02:14:10,000
我们说了这么多

4025
02:14:10,000 --> 02:14:12,000
好难剪了

4026
02:14:12,000 --> 02:14:14,000
是不是要收尾了同学们

4027
02:14:14,000 --> 02:14:14,000
好吧

4028
02:14:14,000 --> 02:14:16,000
来凹处好

4029
02:14:16,000 --> 02:14:18,000
那我们今天的节目呢

4030
02:14:18,000 --> 02:14:21,000
就暂时告一段落

4031
02:14:21,000 --> 02:14:24,000
我们今天也是我们现在在这里提一下这事情

4032
02:14:24,000 --> 02:14:28,000
我们今天也是首次尝试在 clubhouse 上面同步

4033
02:14:28,000 --> 02:14:31,000
我们直播的同步我们录播的这个内容

4034
02:14:31,000 --> 02:14:33,000
然后一个直播的形式

4035
02:14:33,000 --> 02:14:35,000
我们的我们这房间还剩下多少人

4036
02:14:35,000 --> 02:14:38,000
现在还剩下三十多个人

4037
02:14:38,000 --> 02:14:45,000
我们死忠粉丝也非常感谢大家一起跟我们完成了这期节目的录制

4038
02:14:45,000 --> 02:14:47,000
那自弹自唱听众呢

4039
02:14:47,000 --> 02:14:50,000
如果想跟我们交流或者反馈都可以写邮件告诉我们

4040
02:14:50,000 --> 02:14:53,000
我们的邮箱地址是 podcastatthetype.com

4041
02:14:53,000 --> 02:14:57,000
podcastatthetype.com

4042
02:14:57,000 --> 02:14:58,000
同时呢

4043
02:14:58,000 --> 02:14:59,000
大家也可以在新浪微博在推特以及在微信上面

4044
02:14:59,000 --> 02:15:00,000
在推特以及在微信上面

4045
02:15:00,000 --> 02:15:00,000
在微信上面

4046
02:15:00,000 --> 02:15:01,000
在微信上面

4047
02:15:01,000 --> 02:15:06,000
通过搜索 thetype 这个账号关注到我们

4048
02:15:06,000 --> 02:15:10,000
在 Facebook 上搜索 thetype 或者搜索 typeisbeautiful

4049
02:15:10,000 --> 02:15:11,000
也都可以找到我们

4050
02:15:11,000 --> 02:15:14,000
您刚刚收听到的节目是内核恐慌一档

4051
02:15:14,000 --> 02:15:17,000
尽量贴近计算机主题的娱乐 podcast

4052
02:15:17,000 --> 02:15:19,000
我们号称硬活

4053
02:15:19,000 --> 02:15:20,000
但是也没有什么干货

4054
02:15:20,000 --> 02:15:21,000
想听人听不想听人就别听

4055
02:15:21,000 --> 02:15:24,000
我们的网址是 pan.icu

4056
02:15:24,000 --> 02:15:26,000
您可以在网上找到订阅我们节目的方法

4057
02:15:26,000 --> 02:15:27,000
以及联络我们的方式

4058
02:15:27,000 --> 02:15:29,000
如果您期待我们更频繁的更新节目

4059
02:15:29,000 --> 02:15:31,000
欢迎您到爱发店我们捐款

4060
02:15:31,000 --> 02:15:33,000
详情可以在我们的网站上找到

4061
02:15:33,000 --> 02:15:36,000
先发店后催更文明催更从你做起

4062
02:15:36,000 --> 02:15:37,000
如果您觉得意犹未尽

4063
02:15:37,000 --> 02:15:41,000
也欢迎您去收听 Rail 和黄海主持的节目风头圈

4064
02:15:41,000 --> 02:15:43,000
Rail 和任宁主持节目提前怀旧

4065
02:15:43,000 --> 02:15:46,000
以及基本不由无套主持的自弹自穿

4066
02:15:46,000 --> 02:15:48,000
好 感谢大家收听

4067
02:15:48,000 --> 02:15:52,000
本期节目是由 Eric 在 Big Sur 上剪辑制作完成的

4068
02:15:52,000 --> 02:15:53,000
我们下期节目再见

4069
02:15:53,000 --> 02:15:54,000
拜拜

4070
02:15:54,000 --> 02:15:55,000
拜拜

4071
02:15:55,000 --> 02:15:56,000
你还会说这个

4072
02:15:56,000 --> 02:15:58,000
这是 Meta 信息

4073
02:15:58,000 --> 02:15:59,000
就是我很注重 Meta 的

4074
02:15:59,000 --> 02:16:00,000
知道吗

4075
02:16:00,000 --> 02:16:01,000
就是

4076
02:16:01,000 --> 02:16:03,000
像我们会刊不是有封面吗

4077
02:16:03,000 --> 02:16:06,000
那个照片是谁在是几月几号在什么地方拍的吗

4078
02:16:06,000 --> 02:16:09,000
有时候我把那个拍照设备也写进去

4079
02:16:09,000 --> 02:16:11,000
然后我们的编辑就说有必要写吗

4080
02:16:11,000 --> 02:16:13,000
对

