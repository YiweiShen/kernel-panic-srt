1
00:00:00,000 --> 00:00:23,000
你这样侮辱我们的伟大领袖好吗

2
00:00:23,000 --> 00:00:25,000
这真的是他说的

3
00:00:25,000 --> 00:00:28,000
对啊就是他说的

4
00:00:28,000 --> 00:00:30,000
为什么念出来就有点奇怪

5
00:00:30,000 --> 00:00:31,000
没错

6
00:00:31,000 --> 00:00:34,000
没有就是你想一本

7
00:00:34,000 --> 00:00:36,000
就是当时一本书的话

8
00:00:36,000 --> 00:00:38,000
第一页就是应该是要写那个最高指示

9
00:00:38,000 --> 00:00:39,000
所以在开场的时候

10
00:00:39,000 --> 00:00:40,000
创台的开场的时候

11
00:00:40,000 --> 00:00:42,000
首先要念一下最高指示

12
00:00:42,000 --> 00:00:45,000
这次节目是不是要被打上什么分级标签了

13
00:00:45,000 --> 00:00:47,000
还没有我们没有说张字

14
00:00:47,000 --> 00:00:49,000
没关系

15
00:00:49,000 --> 00:00:50,000
不过大家还是要说一下

16
00:00:50,000 --> 00:00:54,000
如果不想提收听体验被阴格的话

17
00:00:54,000 --> 00:00:57,000
还是推荐大家使用泛用型博客客户端

18
00:00:57,000 --> 00:00:59,000
收听我们的节目

19
00:00:59,000 --> 00:01:00,000
对

20
00:01:00,000 --> 00:01:02,000
好了我们终于开始录了

21
00:01:02,000 --> 00:01:23,000
大家好

22
00:01:23,000 --> 00:01:26,000
今天是 2016 年 5 月 17 日

23
00:01:26,000 --> 00:01:27,000
自弹自唱的节目

24
00:01:27,000 --> 00:01:28,000
第 21 期

25
00:01:28,000 --> 00:01:32,000
同时也是内核恐慌的第 39 期

26
00:01:32,000 --> 00:01:33,000
我好突兀啊

27
00:01:33,000 --> 00:01:36,000
自弹自唱是全球首家

28
00:01:36,000 --> 00:01:39,000
用华语制作的字体排音主题播客节目

29
00:01:39,000 --> 00:01:41,000
我是主播文川西版动音剧 Eric

30
00:01:41,000 --> 00:01:45,000
我是主播黄浦江边清真语前真语

31
00:01:45,000 --> 00:01:47,000
内核恐慌是 IPN Podcast

32
00:01:47,000 --> 00:01:49,000
访问旗下的 IT 技术主题娱乐节目

33
00:01:49,000 --> 00:01:50,000
我们号称 Hardcore

34
00:01:50,000 --> 00:01:52,000
但是并没有干货

35
00:01:52,000 --> 00:01:53,000
想听人听不想听就别听

36
00:01:53,000 --> 00:01:54,000
我是吴涛

37
00:01:54,000 --> 00:01:55,000
我是 Rail

38
00:01:55,000 --> 00:01:56,000
哎呀惨了

39
00:01:56,000 --> 00:01:57,000
我们在气势上也觉得很难听

40
00:01:57,000 --> 00:01:58,000
已经输了

41
00:01:58,000 --> 00:02:00,000
他们的开头好华丽啊

42
00:02:00,000 --> 00:02:01,000
对啊

43
00:02:01,000 --> 00:02:03,000
他们还有开头配乐呢

44
00:02:03,000 --> 00:02:05,000
他们有那个

45
00:02:05,000 --> 00:02:06,000
他们有那个

46
00:02:06,000 --> 00:02:08,000
他们有自己的封号你知道吗

47
00:02:09,000 --> 00:02:10,000
哦对对对

48
00:02:10,000 --> 00:02:11,000
那你们也给他起一个呀

49
00:02:11,000 --> 00:02:12,000
哎呦

50
00:02:12,000 --> 00:02:13,000
怎么办呢

51
00:02:13,000 --> 00:02:16,000
而且我们两个封号还是对账加押运的

52
00:02:16,000 --> 00:02:17,000
对啊

53
00:02:17,000 --> 00:02:18,000
这个这个

54
00:02:18,000 --> 00:02:20,000
气势已经输了怎么办

55
00:02:20,000 --> 00:02:21,000
没错没错

56
00:02:21,000 --> 00:02:22,000
咱们俩赶紧想一个

57
00:02:22,000 --> 00:02:24,000
我是莱茵核碳

58
00:02:27,000 --> 00:02:28,000
反了科普

59
00:02:28,000 --> 00:02:32,000
你看他们俩一个西一个江

60
00:02:32,000 --> 00:02:35,000
咱俩肯定要一个河一个海了

61
00:02:35,000 --> 00:02:38,000
或者一个河一个湖什么大西洋岸

62
00:02:38,000 --> 00:02:39,000
我们派平阳平

63
00:02:39,000 --> 00:02:42,000
哈哈哈

64
00:02:42,000 --> 00:02:43,000
算了算了

65
00:02:43,000 --> 00:02:46,000
咱还是不要寄存那个能的

66
00:02:46,000 --> 00:02:48,000
咱们俩是咱们还是 keep humble

67
00:02:48,000 --> 00:02:49,000
对对对

68
00:02:49,000 --> 00:02:51,000
今天是一期挺特别的节目哈

69
00:02:51,000 --> 00:02:55,000
是我们这个自弹自唱和内核恐慌第一次合作

70
00:02:55,000 --> 00:02:55,000
估计是一期挺特别的节目哈是我们这个自弹自唱和内核恐慌第一次合作

71
00:02:55,000 --> 00:02:56,000
估计是一期挺特别的节目哈是我们这个自弹自唱和内核恐慌第一次合作

72
00:02:56,000 --> 00:02:58,000
估计我们要做一系列吧

73
00:02:58,000 --> 00:03:02,000
所以我们今天的那个这个这个系列特别系列

74
00:03:02,000 --> 00:03:06,000
我们几个要起了个单独的名字叫做 kernin panic

75
00:03:06,000 --> 00:03:09,000
对没有听错 kernin panic

76
00:03:09,000 --> 00:03:13,000
而且中文名字叫自弹自串

77
00:03:13,000 --> 00:03:15,000
不是自弹自唱是自弹自串

78
00:03:15,000 --> 00:03:20,000
对因为首先我们是首先我们是串联了一下

79
00:03:20,000 --> 00:03:25,000
然后这个这个自串也是 string 的一个翻译

80
00:03:25,000 --> 00:03:26,000
对

81
00:03:26,000 --> 00:03:28,000
其实 kernin panic 我已经想到了一种症状

82
00:03:28,000 --> 00:03:35,000
就是你在街上看到这个一个一个用用西文排拉宁字母排出来的招牌

83
00:03:35,000 --> 00:03:38,000
然后他的 kernin 非常的使奇怪

84
00:03:38,000 --> 00:03:42,000
就会产生对你就会产生这个 kernin panic 这种心理

85
00:03:42,000 --> 00:03:48,000
欢迎你来到中国任何一个大城市的商场都可以看到 kernin panic 的状况

86
00:03:48,000 --> 00:03:49,000
都可以引发你产生 kernin

87
00:03:49,000 --> 00:03:51,000
我在中国坐地铁天天都会

88
00:03:51,000 --> 00:03:54,000
所以我每天都是恐慌的状态是吗

89
00:03:54,000 --> 00:03:55,000
惶惶不可终日

90
00:03:55,000 --> 00:03:56,000
我我命

91
00:03:56,000 --> 00:03:57,000
没有我觉得还好

92
00:03:57,000 --> 00:04:05,000
这是 type is beautiful 和 ipn 之间的合作

93
00:04:05,000 --> 00:04:09,000
从更深的这个主办方的角度来说

94
00:04:09,000 --> 00:04:11,000
好了好吧

95
00:04:11,000 --> 00:04:12,000
那不是三比一吗

96
00:04:12,000 --> 00:04:15,000
tib 虽然和 ipn 是友台合作关系

97
00:04:15,000 --> 00:04:19,000
但是吴涛还是我们的不是你们的

98
00:04:19,000 --> 00:04:20,000
好吧

99
00:04:20,000 --> 00:04:21,000
吴涛你怎么还在这里

100
00:04:21,000 --> 00:04:24,000
这个这个很重要

101
00:04:26,000 --> 00:04:27,000
这当然重要的

102
00:04:27,000 --> 00:04:29,000
上次我跟那个薄物质串台的时候

103
00:04:29,000 --> 00:04:30,000
婉吟就特别强调这点

104
00:04:30,000 --> 00:04:33,000
到底吴涛是你们的还是我们的问题

105
00:04:33,000 --> 00:04:34,000
但是归根到底肯定还是我们的呀

106
00:04:34,000 --> 00:04:35,000
吴涛是我们忙

107
00:04:35,000 --> 00:04:39,000
哈哈哈哈哈哈哈

108
00:04:39,000 --> 00:04:45,000
所以为什么

109
00:04:45,000 --> 00:04:48,000
那个吴涛没有出现在 type chat 里面

110
00:04:48,000 --> 00:04:49,000
你怎么说呢

111
00:04:49,000 --> 00:04:51,000
就是这个лан结束时

112
00:04:51,000 --> 00:04:51,000
是一个

113
00:04:52,000 --> 00:04:54,000
嗯

114
00:04:54,000 --> 00:04:55,000
玩笑的投选吗

115
00:04:55,000 --> 00:04:56,000
因为我在 tibe

116
00:04:56,000 --> 00:04:57,000
我最开始

117
00:04:57,000 --> 00:05:01,000
接触到 Type is Beautiful 的时候

118
00:05:01,000 --> 00:05:03,000
Type is Beautiful

119
00:05:03,000 --> 00:05:06,000
基本上是一个两个人运作的 blog

120
00:05:06,000 --> 00:05:09,000
然后当时

121
00:05:09,000 --> 00:05:12,000
也是现在我们伟大的站长 Rex

122
00:05:12,000 --> 00:05:16,000
在找一个程序员

123
00:05:16,000 --> 00:05:18,000
就是那种

124
00:05:18,000 --> 00:05:19,000
我有一个伟大的构想

125
00:05:19,000 --> 00:05:21,000
现在就缺一个程序员了

126
00:05:21,000 --> 00:05:24,000
然后我自告奉勇的

127
00:05:24,000 --> 00:05:26,000
自告奉勇的寄了简历给他

128
00:05:26,000 --> 00:05:28,000
正儿八经的寄了简历

129
00:05:28,000 --> 00:05:29,000
寄了简历给他

130
00:05:29,000 --> 00:05:31,000
然后他审了一下说

131
00:05:31,000 --> 00:05:32,000
不错

132
00:05:32,000 --> 00:05:33,000
你来做我们的程序

133
00:05:33,000 --> 00:05:35,000
你来做我们的技术支持

134
00:05:35,000 --> 00:05:38,000
然后我就帮 Type is Beautiful

135
00:05:38,000 --> 00:05:39,000
改了一部分东西

136
00:05:39,000 --> 00:05:43,000
主要是布局

137
00:05:43,000 --> 00:05:46,000
然后一些新功能之类的

138
00:05:46,000 --> 00:05:48,000
其实一直到

139
00:05:48,000 --> 00:05:49,000
我相信一直到现在

140
00:05:49,000 --> 00:05:51,000
我在网站上的 title

141
00:05:51,000 --> 00:05:52,000
都是技术支持

142
00:05:52,000 --> 00:05:53,000
所以

143
00:05:53,000 --> 00:05:56,000
我完全就是一个

144
00:05:56,000 --> 00:05:59,000
打杂的那种感觉

145
00:05:59,000 --> 00:06:00,000
并不是一个 CTO

146
00:06:00,000 --> 00:06:01,000
然后

147
00:06:01,000 --> 00:06:05,000
我也只是在 Type is Beautiful 上

148
00:06:05,000 --> 00:06:06,000
写过一些

149
00:06:06,000 --> 00:06:08,000
主要是翻译的一些作品

150
00:06:08,000 --> 00:06:09,000
就是比如说

151
00:06:09,000 --> 00:06:12,000
好吧

152
00:06:12,000 --> 00:06:13,000
也有自己原创的

153
00:06:13,000 --> 00:06:14,000
但是主要还是翻译

154
00:06:14,000 --> 00:06:15,000
翻译过

155
00:06:15,000 --> 00:06:19,000
DIN 字体的原体的

156
00:06:19,000 --> 00:06:21,000
发明过程什么的

157
00:06:21,000 --> 00:06:22,000
所以本质上

158
00:06:22,000 --> 00:06:23,000
我不是一个

159
00:06:23,000 --> 00:06:26,000
内容输出的这么一个角色

160
00:06:26,000 --> 00:06:28,000
所以参加 Type Chat

161
00:06:28,000 --> 00:06:30,000
其实是有点

162
00:06:30,000 --> 00:06:33,000
肯定会进入那种无话可说的状态

163
00:06:33,000 --> 00:06:33,000
因为很多东西

164
00:06:33,000 --> 00:06:35,000
我只是可能对技术上有所了解

165
00:06:35,000 --> 00:06:36,000
但是不管是审美

166
00:06:36,000 --> 00:06:38,000
还是什么历史渊源上

167
00:06:38,000 --> 00:06:40,000
就完全没有概念

168
00:06:40,000 --> 00:06:42,000
所以我参加 Type Chat

169
00:06:42,000 --> 00:06:43,000
肯定会冷场

170
00:06:43,000 --> 00:06:44,000
别谦虚

171
00:06:44,000 --> 00:06:45,000
没事

172
00:06:45,000 --> 00:06:46,000
但当然我要表个态度

173
00:06:46,000 --> 00:06:48,000
的确是 Type is Beautiful 的人

174
00:06:48,000 --> 00:06:52,000
关键时刻还是站对了

175
00:06:52,000 --> 00:06:56,000
那是现在是战队的时代

176
00:06:56,000 --> 00:06:58,000
其实

177
00:06:58,000 --> 00:07:01,000
我倒在 Type is Beautiful 里面的好多文章

178
00:07:01,000 --> 00:07:02,000
其实我也很受启发的

179
00:07:02,000 --> 00:07:04,000
因为在德国

180
00:07:04,000 --> 00:07:06,000
德国的印刷

181
00:07:06,000 --> 00:07:08,000
排印的历史也是非常悠久的

182
00:07:08,000 --> 00:07:10,000
像我那时候读

183
00:07:10,000 --> 00:07:13,000
关于长 S 那些文章

184
00:07:13,000 --> 00:07:15,000
还有什么关于字体定的那些文章

185
00:07:15,000 --> 00:07:16,000
都是非常受启发的

186
00:07:16,000 --> 00:07:17,000
而且

187
00:07:17,000 --> 00:07:20,000
咱们俩还翻译过很多东西

188
00:07:20,000 --> 00:07:21,000
对吧

189
00:07:21,000 --> 00:07:21,000
那个

190
00:07:21,000 --> 00:07:24,000
信息堂的那个活字字体讲座

191
00:07:24,000 --> 00:07:26,000
当时就是咱们俩分工翻译的

192
00:07:26,000 --> 00:07:28,000
你翻译的汉字那一部分

193
00:07:28,000 --> 00:07:30,000
这是一个漫长的过程

194
00:07:30,000 --> 00:07:31,000
就以我这个日语的水平

195
00:07:31,000 --> 00:07:34,000
我日语只是哑巴日语

196
00:07:34,000 --> 00:07:36,000
有些假名我到现在都是不会念的

197
00:07:36,000 --> 00:07:37,000
但是我是

198
00:07:37,000 --> 00:07:40,000
用这种日语的水平翻译了两篇文章

199
00:07:40,000 --> 00:07:42,000
让我自动觉得非常神奇

200
00:07:42,000 --> 00:07:45,000
我们多才多艺的吴道东学

201
00:07:45,000 --> 00:07:47,000
咱们俩还翻译过一本书不是

202
00:07:47,000 --> 00:07:48,000
对啊

203
00:07:48,000 --> 00:07:49,000
那个字体故事

204
00:07:49,000 --> 00:07:49,000
是

205
00:07:49,000 --> 00:07:51,000
我居然翻译过一本书了

206
00:07:51,000 --> 00:07:52,000
这本书这是什么样的历史啊

207
00:07:52,000 --> 00:07:57,000
差点没有坚持下来的一本书

208
00:07:57,000 --> 00:07:57,000
没有

209
00:07:57,000 --> 00:08:00,000
当年其实我觉得那是放在东西文库里面的

210
00:08:00,000 --> 00:08:02,000
然后我就觉得特别好

211
00:08:02,000 --> 00:08:03,000
因为你是在德国

212
00:08:03,000 --> 00:08:04,000
我在日本

213
00:08:04,000 --> 00:08:05,000
但是咱们俩都不在国内

214
00:08:05,000 --> 00:08:07,000
然后就翻了一个

215
00:08:07,000 --> 00:08:09,000
放到东西文库里面去

216
00:08:09,000 --> 00:08:10,000
也算是名副其实了

217
00:08:10,000 --> 00:08:11,000
没错

218
00:08:11,000 --> 00:08:12,000
这是一个非常

219
00:08:12,000 --> 00:08:13,000
一东一西

220
00:08:13,000 --> 00:08:13,000
对

221
00:08:13,000 --> 00:08:17,000
一个非常跨国化的一个 project

222
00:08:17,000 --> 00:08:18,000
而且我们两个

223
00:08:18,000 --> 00:08:21,000
我和 Eric 其实从来没有见过面

224
00:08:21,000 --> 00:08:21,000
然后我们俩

225
00:08:21,000 --> 00:08:23,000
然后那个协同我们编

226
00:08:23,000 --> 00:08:24,000
你一定要爆这个料吗

227
00:08:24,000 --> 00:08:26,000
很快

228
00:08:26,000 --> 00:08:27,000
很快

229
00:08:27,000 --> 00:08:31,000
然后那个协同我们编辑也从来没有见过我们俩

230
00:08:31,000 --> 00:08:32,000
你们两个后来见过吗

231
00:08:32,000 --> 00:08:33,000
我见过周南

232
00:08:33,000 --> 00:08:34,000
OK

233
00:08:34,000 --> 00:08:38,000
总之他们这个编辑部现在也在做一些非常有意思的事情

234
00:08:38,000 --> 00:08:39,000
也不妨帮他们打个广告

235
00:08:39,000 --> 00:08:42,000
就是他们在做一本叫做离线的杂志

236
00:08:42,000 --> 00:08:43,000
可能我们的听众之间

237
00:08:43,000 --> 00:08:46,000
听众中间已经有很多朋友听说过了

238
00:08:46,000 --> 00:08:47,000
他们是在一个

239
00:08:47,000 --> 00:08:50,000
如今在这样一个数字出版泛滥的时代

240
00:08:50,000 --> 00:08:51,000
监视着这个文化

241
00:08:51,000 --> 00:08:53,000
他们开始做线下杂志的团队

242
00:08:53,000 --> 00:08:55,000
然后他们做杂志也是

243
00:08:55,000 --> 00:08:58,000
主要是 gig 主题吧

244
00:08:58,000 --> 00:08:59,000
什么游戏啊

245
00:08:59,000 --> 00:09:02,000
未来啊

246
00:09:02,000 --> 00:09:03,000
科幻之类的

247
00:09:03,000 --> 00:09:04,000
就感兴趣的朋友可以看一下

248
00:09:04,000 --> 00:09:06,000
他们虽然号称离线

249
00:09:06,000 --> 00:09:08,000
但现在还是有网站的

250
00:09:08,000 --> 00:09:08,000
然后

251
00:09:08,000 --> 00:09:12,000
喜欢的朋友可以入会

252
00:09:12,000 --> 00:09:13,000
我好喜欢这个巨型啊

253
00:09:13,000 --> 00:09:14,000
虽然不是什么

254
00:09:14,000 --> 00:09:16,000
但是他们号称什么

255
00:09:16,000 --> 00:09:17,000
你好喜欢这个巨型

256
00:09:17,000 --> 00:09:20,000
我觉得我可能太久

257
00:09:20,000 --> 00:09:21,000
中文说的太少了

258
00:09:21,000 --> 00:09:22,000
很容易陷入一种

259
00:09:22,000 --> 00:09:26,000
就是使用一个套用一个固定句型的模式

260
00:09:26,000 --> 00:09:27,000
我自己也发现了

261
00:09:27,000 --> 00:09:30,000
挺好挺好

262
00:09:30,000 --> 00:09:30,000
没事没事

263
00:09:30,000 --> 00:09:33,000
我们这个节目可以锻炼你的中文水平

264
00:09:33,000 --> 00:09:35,000
非常感谢

265
00:09:35,000 --> 00:09:36,000
瑞回国以后

266
00:09:36,000 --> 00:09:38,000
是不是觉得自己中文的母语水平

267
00:09:38,000 --> 00:09:39,000
马上就回来了

268
00:09:39,000 --> 00:09:41,000
就我比较一个

269
00:09:41,000 --> 00:09:42,000
你在黑他吗

270
00:09:42,000 --> 00:09:45,000
比较明显的感受是这个

271
00:09:45,000 --> 00:09:48,000
就以前节目里面老是念错字嘛

272
00:09:48,000 --> 00:09:50,000
就现在好像出现这种概率的

273
00:09:50,000 --> 00:09:50,000
要稍微

274
00:09:50,000 --> 00:09:51,000
好

275
00:09:51,000 --> 00:09:51,000
好一点

276
00:09:51,000 --> 00:09:52,000
会有帮助吗

277
00:09:52,000 --> 00:09:56,000
我觉得国内也是那样念的状态

278
00:09:56,000 --> 00:09:59,000
出现这种概率要稍微好一点

279
00:09:59,000 --> 00:10:00,000
这本身就是个病剧

280
00:10:00,000 --> 00:10:05,000
口语里面无所谓

281
00:10:05,000 --> 00:10:06,000
反正我到现在普通话也不好

282
00:10:06,000 --> 00:10:07,000
好吧

283
00:10:07,000 --> 00:10:10,000
我们应该说一下这次节目主题是什么

284
00:10:10,000 --> 00:10:11,000
对对对

285
00:10:11,000 --> 00:10:13,000
我们节目呢

286
00:10:13,000 --> 00:10:15,000
英文名叫 Currently Panic

287
00:10:15,000 --> 00:10:17,000
中文名字叫自弹自串

288
00:10:17,000 --> 00:10:19,000
这个串台节目呢

289
00:10:19,000 --> 00:10:20,000
是我们 TIB 和

290
00:10:21,000 --> 00:10:24,000
PN 网络旗下的内核恐慌的合作节目

291
00:10:24,000 --> 00:10:25,000
那这次作为第一期

292
00:10:25,000 --> 00:10:26,000
我们就应该讲一下

293
00:10:26,000 --> 00:10:28,000
从应该有个主题哈

294
00:10:28,000 --> 00:10:32,000
从用户敲击键盘开始到最终的打印输出

295
00:10:32,000 --> 00:10:34,000
这个过程到底发生了什么

296
00:10:36,000 --> 00:10:38,000
这是一个好长的一个过程

297
00:10:38,000 --> 00:10:40,000
我已经在想到那个程序战

298
00:10:41,000 --> 00:10:43,000
对看到这个主题的第一反应是

299
00:10:45,000 --> 00:10:46,000
这一期讲的完

300
00:10:46,000 --> 00:10:49,000
这是为了感谢听众们的不杀之恩

301
00:10:49,000 --> 00:10:51,000
一定要讲一千零一的

302
00:10:51,000 --> 00:10:52,000
节奏啊

303
00:10:52,000 --> 00:10:53,000
好吧

304
00:10:53,000 --> 00:10:56,000
我看到这主题第一反应是陈玄嘎怎么找女朋友

305
00:10:56,000 --> 00:11:02,000
没有上次就是因为 Rio 不在嘛

306
00:11:02,000 --> 00:11:04,000
然后乌涛自己一个很怨

307
00:11:04,000 --> 00:11:07,000
很怨的女人就录了一期叫编码

308
00:11:07,000 --> 00:11:07,000
对吧

309
00:11:07,000 --> 00:11:12,000
然后就是唯一一期就是和字比较有关系的一期节目

310
00:11:12,000 --> 00:11:14,000
但是就自己一个人录的很不爽

311
00:11:14,000 --> 00:11:15,000
看起来

312
00:11:15,000 --> 00:11:17,000
其实我们之前讲过编程字体的

313
00:11:17,000 --> 00:11:21,000
那一期算是非常和 TypeGolf

314
00:11:21,000 --> 00:11:23,000
有点关系的主题

315
00:11:23,000 --> 00:11:24,000
不过那个时候还没有你们的

316
00:11:24,000 --> 00:11:25,000
好好

317
00:11:25,000 --> 00:11:27,000
所以嘛

318
00:11:27,000 --> 00:11:29,000
就是还程序员也要关心字体的

319
00:11:29,000 --> 00:11:30,000
那做字的呢

320
00:11:30,000 --> 00:11:32,000
也要知道程序应该怎么运行嘛

321
00:11:32,000 --> 00:11:33,000
所以呢

322
00:11:33,000 --> 00:11:34,000
我觉得咱们的串台是非常有意义的呀

323
00:11:34,000 --> 00:11:36,000
嗯

324
00:11:36,000 --> 00:11:37,000
的确

325
00:11:37,000 --> 00:11:38,000
那就串起来喽

326
00:11:42,000 --> 00:11:43,000
基本上今天咱们第一次串嘛

327
00:11:43,000 --> 00:11:45,000
那咱们就从头到尾

328
00:11:45,000 --> 00:11:48,000
先简略的都把从头一个过程先说完

329
00:11:48,000 --> 00:11:49,000
然后呢

330
00:11:49,000 --> 00:11:50,000
留下无数大口的口号

331
00:11:50,000 --> 00:11:51,000
留下无数大口的口号

332
00:11:51,000 --> 00:11:51,000
然后呢

333
00:11:51,000 --> 00:11:53,000
就挖了以后慢慢填呗

334
00:11:53,000 --> 00:11:54,000
以后慢慢填呗

335
00:11:54,000 --> 00:11:55,000
好吧

336
00:11:55,000 --> 00:11:58,000
免得以后没有主题

337
00:11:58,000 --> 00:12:00,000
解决了 B 节目最大的问题

338
00:12:02,000 --> 00:12:03,000
我们现在是选题过身的

339
00:12:03,000 --> 00:12:04,000
怎么办

340
00:12:04,000 --> 00:12:05,000
不是选题过身

341
00:12:05,000 --> 00:12:06,000
换不寡

342
00:12:06,000 --> 00:12:07,000
不换寡换不均嘛

343
00:12:09,000 --> 00:12:12,000
你们把那个和技术有关的主题

344
00:12:12,000 --> 00:12:13,000
给我们圆一半

345
00:12:17,000 --> 00:12:20,000
那你们的努力多说一点呀

346
00:12:20,000 --> 00:12:21,000
或者可以这样吧

347
00:12:21,000 --> 00:12:21,000
我们把 real 给你们

348
00:12:21,000 --> 00:12:23,000
然后把争议给我们

349
00:12:23,000 --> 00:12:24,000
我们两个我们两个可以

350
00:12:24,000 --> 00:12:26,000
嗯

351
00:12:26,000 --> 00:12:28,000
怎么一回事

352
00:12:28,000 --> 00:12:31,000
为什么学习物交换是吧

353
00:12:31,000 --> 00:12:33,000
换搭档俱乐部有那么

354
00:12:33,000 --> 00:12:34,000
人人交换

355
00:12:34,000 --> 00:12:37,000
贵权争乱

356
00:12:37,000 --> 00:12:38,000
对 partner exchange

357
00:12:38,000 --> 00:12:39,000
听起来毫无媒口的感觉

358
00:12:39,000 --> 00:12:43,000
更乱了

359
00:12:43,000 --> 00:12:46,000
好了

360
00:12:46,000 --> 00:12:48,000
我们这个少点下三轮吧

361
00:12:48,000 --> 00:12:49,000
先先

362
00:12:49,000 --> 00:12:50,000
我说说吧

363
00:12:50,000 --> 00:12:50,000
好

364
00:12:50,000 --> 00:12:52,000
都是我一直在下载的

365
00:12:52,000 --> 00:12:53,000
anyway

366
00:12:53,000 --> 00:12:53,000
我们来来点

367
00:12:53,000 --> 00:12:56,000
先来点底层的东西

368
00:12:56,000 --> 00:12:58,000
因为大家一开始就打开电脑是打字嘛

369
00:12:58,000 --> 00:13:01,000
这个字打到电脑里面去

370
00:13:01,000 --> 00:13:02,000
其实是什么样的过程

371
00:13:02,000 --> 00:13:04,000
对吧

372
00:13:04,000 --> 00:13:05,000
呃对

373
00:13:05,000 --> 00:13:07,000
就我们可以从

374
00:13:07,000 --> 00:13:09,000
我觉得可以先讲一下历史渊源

375
00:13:09,000 --> 00:13:13,000
就是世界上为什么有这么多种键盘布局

376
00:13:13,000 --> 00:13:16,000
为什么就可能在中国待久了

377
00:13:16,000 --> 00:13:20,000
你会觉得你会有一种呃想象就是可能全是键盘布局的东西

378
00:13:20,000 --> 00:13:23,000
就是这个键盘长长的都这个样子

379
00:13:23,000 --> 00:13:24,000
但实际上不是啊

380
00:13:24,000 --> 00:13:26,000
嗯

381
00:13:26,000 --> 00:13:31,000
尤其是在日本的朋友们可能会觉得我考日文键盘实在是太复杂了

382
00:13:31,000 --> 00:13:33,000
我第一次见到日文键盘真的有点震惊了

383
00:13:33,000 --> 00:13:39,000
就是你能讲一下就是日本键盘上有一个键叫我转换非转换是干嘛的

384
00:13:39,000 --> 00:13:42,000
对我到现在也不懂我

385
00:13:42,000 --> 00:13:44,000
哈哈哈

386
00:13:44,000 --> 00:13:46,000
因为我一般都不去用那个键

387
00:13:46,000 --> 00:13:48,000
那那个而且是那个 windows 的标准是那样的

388
00:13:48,000 --> 00:13:50,000
然后 mac 是不用的啊

389
00:13:50,000 --> 00:13:52,000
我 mac 上没有转换非转换这个键

390
00:13:52,000 --> 00:13:55,000
对嗯

391
00:13:55,000 --> 00:14:00,000
而且就是因为他们日文的键盘他除他还有那个假名输入的键位

392
00:14:00,000 --> 00:14:05,000
所以他一个键帽上面会有时候有时候会多达四五个字

393
00:14:05,000 --> 00:14:07,000
他一个键帽上要印四五个字

394
00:14:07,000 --> 00:14:09,000
所以那个键日文的键面特别特别花

395
00:14:09,000 --> 00:14:11,000
然后键位又不一样

396
00:14:11,000 --> 00:14:13,000
所以啊还好在日本买 mac 的话

397
00:14:13,000 --> 00:14:14,000
他是有选择

398
00:14:14,000 --> 00:14:15,000
然后我在日本买呢

399
00:14:15,000 --> 00:14:18,000
我都会选择选择那个美国的键盘

400
00:14:18,000 --> 00:14:20,000
要不然的话我都疯掉了嗯

401
00:14:20,000 --> 00:14:21,000
对嗯

402
00:14:21,000 --> 00:14:28,000
因为我之前在德国也也有提到我们之前在那个内核恐慌也提到过这一期嘛

403
00:14:28,000 --> 00:14:29,000
就在德国的时候

404
00:14:29,000 --> 00:14:30,000
那个德国的键盘也是挺奇怪的

405
00:14:30,000 --> 00:14:34,000
不是那种标准的美国键位就国内用那种哈

406
00:14:34,000 --> 00:14:42,000
然后当时我也是在德国待的时候为了买那个美国键位的还专门需要订就是要要特殊订单

407
00:14:42,000 --> 00:14:43,000
他等他送过来

408
00:14:43,000 --> 00:14:44,000
然后在日本的话

409
00:14:44,000 --> 00:14:45,000
因为现在海淘也比较方便吧

410
00:14:45,000 --> 00:14:48,000
很多人也去日本买这个电脑啊

411
00:14:48,000 --> 00:14:49,000
笔记本啊之类的好像也有经常我看到有人买的键盘啊

412
00:14:49,000 --> 00:14:49,000
好像也有经常我看到有人买的键盘啊

413
00:14:49,000 --> 00:14:53,000
然后经常我看到有人买到一个这种日文键盘的笔记本回来

414
00:14:53,000 --> 00:14:54,000
然后用起来挺不方便的

415
00:14:54,000 --> 00:14:56,000
嗯

416
00:14:56,000 --> 00:14:57,000
对的

417
00:14:57,000 --> 00:14:57,000
嗯

418
00:14:57,000 --> 00:15:05,000
其实我们刚才谈到的这三种布局就是世界上最主流的三种布局的一种是国内的所谓

419
00:15:05,000 --> 00:15:09,000
其实就国内这个键盘布局是以北美为主的啊

420
00:15:10,000 --> 00:15:11,000
一个布局叫做

421
00:15:11,000 --> 00:15:14,000
ANSI NC 布局

422
00:15:14,000 --> 00:15:19,000
然后他最大的特点其实就是那个 return 键是一个扁平的长条件

423
00:15:19,000 --> 00:15:24,000
然后他只是比别的键宽一点

424
00:15:24,000 --> 00:15:32,000
然后在德国就有提到这种键盘是所谓一手键盘就是国际标准化组织规定的键盘的

425
00:15:32,000 --> 00:15:36,000
比如说不一定只有德语用法语

426
00:15:36,000 --> 00:15:40,000
包括英国其实也在用这种一艘制式的键盘

427
00:15:40,000 --> 00:15:43,000
他好像要比多出一个键来

428
00:15:43,000 --> 00:15:48,000
然后他最大的特征是那个回车键是一个到 L 型

429
00:15:48,000 --> 00:15:49,000
然后日本的日本的这个

430
00:15:49,000 --> 00:15:53,000
标准当然这个然后应该是 JIS 的标准嘛

431
00:15:53,000 --> 00:15:56,000
就是 Japanese Industrial Standard 标准

432
00:15:56,000 --> 00:15:59,000
然后他也是一个好像也是一个到 L 的键盘

433
00:15:59,000 --> 00:16:02,000
但是他的键还要比一艘多出来一个

434
00:16:02,000 --> 00:16:04,000
如果没有记错的话

435
00:16:04,000 --> 00:16:05,000
还要多

436
00:16:05,000 --> 00:16:06,000
对对对还要多

437
00:16:07,000 --> 00:16:09,000
所以在日本的话

438
00:16:09,000 --> 00:16:13,000
就是普通的日本人他们是用什么用那个日文键盘吗

439
00:16:13,000 --> 00:16:16,000
应该就是键位是差不多的

440
00:16:16,000 --> 00:16:18,000
日文键盘和美国键盘

441
00:16:18,000 --> 00:16:19,000
他们就是也是用

442
00:16:19,000 --> 00:16:26,000
就是在英文字符的键位是和美国键位是一样的

443
00:16:26,000 --> 00:16:31,000
然后呢就是什么后面那些库尔胡安那些那个位置的安排是不一样的

444
00:16:31,000 --> 00:16:36,000
然后绝大多数的日本人现在都使用他们罗马字拼进行输入

445
00:16:36,000 --> 00:16:42,000
虽然日本键位也也支持就是他们直接的那个叫假名输入法

446
00:16:42,000 --> 00:16:45,000
就是按一个键就可以输入一个假名

447
00:16:45,000 --> 00:16:46,000
有这样的输入

448
00:16:46,000 --> 00:16:49,000
但是我见我见过的就是

449
00:16:49,000 --> 00:16:50,000
活人

450
00:16:50,000 --> 00:16:55,000
我见过这么多日本只有尤其只有一个人是用那样的假名直接输入的

451
00:16:55,000 --> 00:16:59,000
因为他要去背那个假名放在在哪个键位吗

452
00:16:59,000 --> 00:17:00,000
哦

453
00:17:00,000 --> 00:17:04,000
所以原来日本人现在已经不用假名输入

454
00:17:04,000 --> 00:17:06,000
就跟那个输五笔差不多吗

455
00:17:06,000 --> 00:17:08,000
应该说跟注音符号差不多

456
00:17:08,000 --> 00:17:12,000
就用假名输入的人跟台湾用注音符号输入的人差不多

457
00:17:12,000 --> 00:17:14,000
但是对

458
00:17:14,000 --> 00:17:18,000
他们就是把这每个假名分配到那个键位上面去

459
00:17:18,000 --> 00:17:18,000
对

460
00:17:18,000 --> 00:17:19,000
那

461
00:17:19,000 --> 00:17:20,000
,不够分吧

462
00:17:20,000 --> 00:17:21,000
对啊

463
00:17:21,000 --> 00:17:23,000
够的他他就是会有会有重复嘛

464
00:17:23,000 --> 00:17:24,000
都用了

465
00:17:24,000 --> 00:17:25,000
假名有多少个

466
00:17:25,000 --> 00:17:27,000
然后还有在五十五十音图嘛

467
00:17:27,000 --> 00:17:29,000
五十音图有五十个

468
00:17:29,000 --> 00:17:31,000
但实际上常用了不到五十个

469
00:17:31,000 --> 00:17:31,000
就四十多个嘛

470
00:17:31,000 --> 00:17:32,000
那也不够啊

471
00:17:32,000 --> 00:17:34,000
你然后他还有评假名还有骗假名

472
00:17:34,000 --> 00:17:37,000
他就所以还有着烟什么的之类的组合

473
00:17:37,000 --> 00:17:38,000
对没错

474
00:17:38,000 --> 00:17:46,000
是的你普通键盘上你加上英文二十六个加十个数字也才三十六再加一堆符号不到五十啊

475
00:17:47,000 --> 00:17:48,000
差不多够了

476
00:17:48,000 --> 00:17:49,000
四十多个嘛

477
00:17:49,000 --> 00:17:53,000
就他那个他就有组合他的那个什么呃帽号呀

478
00:17:53,000 --> 00:17:56,000
又库号啊

479
00:17:56,000 --> 00:17:56,000
豆号啊

480
00:17:56,000 --> 00:17:59,000
大一号小一号全都占对哦

481
00:17:59,000 --> 00:18:01,000
差不多这里有十个那刚好

482
00:18:02,000 --> 00:18:03,000
所以特别花

483
00:18:03,000 --> 00:18:06,000
大家如果去看那个日文的机子键盘标准的话

484
00:18:06,000 --> 00:18:07,000
就他那个剑帽上面特别花

485
00:18:07,000 --> 00:18:08,000
写满了字

486
00:18:08,000 --> 00:18:14,000
然后我记得好像有些还是写在侧面的就去那个如果见我们是比较那种高的不是那种什么巧克力键盘

487
00:18:14,000 --> 00:18:15,000
真的吗

488
00:18:15,000 --> 00:18:18,000
那谁谁是 KB 没有那个是法法语键盘吗

489
00:18:18,000 --> 00:18:19,000
法文键盘就是嗯

490
00:18:19,000 --> 00:18:22,000
就法文键盘的他们数字数字的话默认的话

491
00:18:22,000 --> 00:18:25,000
他们是打出符号的符号

492
00:18:25,000 --> 00:18:28,000
然后要按 shift 键才能打出数字吗

493
00:18:28,000 --> 00:18:31,000
然后有的时候还要必须按左 alt

494
00:18:31,000 --> 00:18:33,000
还是右边的要出的啊

495
00:18:33,000 --> 00:18:33,000
对对对

496
00:18:33,000 --> 00:18:37,000
右边的右边叫 out graphic

497
00:18:37,000 --> 00:18:39,000
就是你要打出一些图像符号的时候

498
00:18:39,000 --> 00:18:44,000
要按所以才会扭曲的出现那种二十进制的技术原则吗

499
00:18:47,000 --> 00:18:48,000
不要再黑法语的数字

500
00:18:49,000 --> 00:18:50,000
好吧

501
00:18:50,000 --> 00:18:59,000
那那所以其实在日本工作的程序员他们用这个日本键盘输入的话会有就是比如说编程号会有障碍吗

502
00:18:59,000 --> 00:19:04,000
会因为就像我到现在为止有时候还会找不到键位

503
00:19:04,000 --> 00:19:08,000
而且呢像在美就是尤其是那些符号类的

504
00:19:08,000 --> 00:19:14,000
然后像扩扩的话在美国扩扩美国键盘上面扩扩都是左右对称的

505
00:19:14,000 --> 00:19:15,000
对九和零嘛

506
00:19:15,000 --> 00:19:16,000
一对一对的嘛

507
00:19:16,000 --> 00:19:18,000
但是在日本键盘的话

508
00:19:18,000 --> 00:19:19,000
它那个中扩号的

509
00:19:19,000 --> 00:19:22,000
它是上下的就不是左右相邻着的

510
00:19:22,000 --> 00:19:25,000
所以有时候就就按的会比较麻烦

511
00:19:25,000 --> 00:19:32,000
然后还有一些很坑爹的就是他当年早期技术把阿斯基转过来的时候

512
00:19:32,000 --> 00:19:39,000
他把那个日元符号和他把反斜杆的那个马位换上了日元符号

513
00:19:39,000 --> 00:19:40,000
一天哪

514
00:19:40,000 --> 00:19:41,000
这这是个啊

515
00:19:41,000 --> 00:19:43,000
对明白了

516
00:19:43,000 --> 00:19:46,000
但你不觉得这解决了一个童年的疑惑吗

517
00:19:46,000 --> 00:19:48,000
就是有时候你有你小时候玩日文游戏的时候

518
00:19:48,000 --> 00:19:51,000
他的那个路径分割符是一个印的符号

519
00:19:52,000 --> 00:19:56,000
对在 windows 他们的那个路径默认是用反斜杠嘛

520
00:19:56,000 --> 00:20:01,000
对所以在当年早期的那个 windows 的日本版的时候

521
00:20:01,000 --> 00:20:04,000
他们路径就是一大堆的日元符号好多钱

522
00:20:06,000 --> 00:20:07,000
不过日元也不止

523
00:20:07,000 --> 00:20:10,000
他其实是公用了一个什么编码是这样子的

524
00:20:10,000 --> 00:20:14,000
他用的就是他当时把马阿斯基拿过来的时候

525
00:20:14,000 --> 00:20:21,000
把阿斯基的那个反斜杆的那个马位给他换成那个日元符号了

526
00:20:21,000 --> 00:20:23,000
那应该是编码没有编正确

527
00:20:23,000 --> 00:20:24,000
这不是一个正不正确的问题

528
00:20:24,000 --> 00:20:30,000
就是你那个时候日文只支持假名和 26 文字母

529
00:20:30,000 --> 00:20:31,000
所以如果你要把

530
00:20:33,000 --> 00:20:35,000
你要把 256 个字符用上的话

531
00:20:35,000 --> 00:20:36,000
其实是完全够的

532
00:20:36,000 --> 00:20:39,000
就是日语在当时不支持汉字

533
00:20:39,000 --> 00:20:42,000
但是支持所有的平价名和片价名

534
00:20:42,000 --> 00:20:45,000
然后可以全能压缩在 256 个字符里面

535
00:20:45,000 --> 00:20:47,000
然后他也是八位了

536
00:20:47,000 --> 00:20:48,000
他不是七位嘛

537
00:20:48,000 --> 00:20:51,000
就是这个 Abit 的编码

538
00:20:51,000 --> 00:20:52,000
阿斯基是七位

539
00:20:52,000 --> 00:20:54,000
阿斯基是对阿斯基是七位

540
00:20:54,000 --> 00:20:58,000
然后他就相当于这是那个日本的西欧扩展

541
00:20:58,000 --> 00:21:01,000
西欧扩展就是在西欧的扩展

542
00:21:01,000 --> 00:21:02,000
那是把第八个用上

543
00:21:02,000 --> 00:21:09,000
然后日语日本当时决定使用一个最不常见的符号来替换掉

544
00:21:09,000 --> 00:21:10,000
替换成印的符号

545
00:21:10,000 --> 00:21:12,000
就把反斜杆给替换掉

546
00:21:12,000 --> 00:21:16,000
因为反斜杆实际上在日常生活中是非常非常少见的

547
00:21:16,000 --> 00:21:18,000
就除了我这次在用啊

548
00:21:18,000 --> 00:21:22,000
就除了编程需要接触到

549
00:21:22,000 --> 00:21:26,000
基本上日常生活里面没有一个地方用到反斜杆

550
00:21:26,000 --> 00:21:27,000
没有啊

551
00:21:27,000 --> 00:21:29,000
编程在反斜杆里面

552
00:21:29,000 --> 00:21:31,000
就是哪个语言里面讲得出用反斜杆的

553
00:21:31,000 --> 00:21:34,000
反斜杆不是转义符吗

554
00:21:34,000 --> 00:21:37,000
对啊

555
00:21:37,000 --> 00:21:38,000
大部分语言转义符都是

556
00:21:38,000 --> 00:21:39,000
不算常用吧

557
00:21:39,000 --> 00:21:41,000
就写转义符的时候

558
00:21:41,000 --> 00:21:42,000
转义符不常用吧

559
00:21:42,000 --> 00:21:42,000
我去

560
00:21:42,000 --> 00:21:43,000
还蛮常用的

561
00:21:43,000 --> 00:21:46,000
然后就是 Windows 的路径了嘛

562
00:21:46,000 --> 00:21:46,000
对

563
00:21:46,000 --> 00:21:47,000
那应该是这样

564
00:21:47,000 --> 00:21:48,000
没错

565
00:21:48,000 --> 00:21:51,000
然后我那时候就开玩笑吧

566
00:21:51,000 --> 00:21:53,000
我在笑上海地铁

567
00:21:53,000 --> 00:21:54,000
他们公共标志的时候

568
00:21:54,000 --> 00:21:56,000
比如几号线的货的几号线

569
00:21:56,000 --> 00:21:57,000
他们用的是反斜杆吗

570
00:21:57,000 --> 00:21:57,000
What

571
00:21:57,000 --> 00:22:00,000
就对上海的那个地铁

572
00:22:00,000 --> 00:22:02,000
比如说此处转二号线和三号线

573
00:22:02,000 --> 00:22:04,000
二杠三的时候

574
00:22:04,000 --> 00:22:05,000
他用的是反斜杆

575
00:22:05,000 --> 00:22:06,000
就整个上海

576
00:22:06,000 --> 00:22:08,000
全上海的地铁线路

577
00:22:08,000 --> 00:22:10,000
他们的那个指示系统都是这么用的

578
00:22:10,000 --> 00:22:12,000
所以我那时候我就笑嘛

579
00:22:12,000 --> 00:22:13,000
我那时候贴出去的时候

580
00:22:13,000 --> 00:22:14,000
我把这张照片给美国人看

581
00:22:14,000 --> 00:22:15,000
给日本人看

582
00:22:15,000 --> 00:22:16,000
然后我说

583
00:22:16,000 --> 00:22:19,000
这是我在现实生活中

584
00:22:19,000 --> 00:22:21,000
第一次看到反斜杆如此大量的使用

585
00:22:21,000 --> 00:22:23,000
然后日本人就笑的不行了

586
00:22:23,000 --> 00:22:23,000
真的

587
00:22:23,000 --> 00:22:26,000
这好像绝无仅有的一件事情

588
00:22:26,000 --> 00:22:27,000
对啊

589
00:22:27,000 --> 00:22:27,000
对

590
00:22:27,000 --> 00:22:29,000
他可能是个左撇子

591
00:22:29,000 --> 00:22:35,000
太奇怪了

592
00:22:35,000 --> 00:22:36,000
但中国的左撇子

593
00:22:36,000 --> 00:22:38,000
好像小时候会很惨

594
00:22:38,000 --> 00:22:39,000
会被逼成右手鞋子

595
00:22:39,000 --> 00:22:40,000
会被作为另类的

596
00:22:40,000 --> 00:22:41,000
我就是这样

597
00:22:41,000 --> 00:22:41,000
常行纠正

598
00:22:41,000 --> 00:22:42,000
我就是这样

599
00:22:42,000 --> 00:22:43,000
我前正硬是左撇子

600
00:22:43,000 --> 00:22:46,000
我应该是

601
00:22:46,000 --> 00:22:50,000
但是我很小就被很多的调整过了

602
00:22:50,000 --> 00:22:51,000
所以你现在是

603
00:22:51,000 --> 00:22:52,000
所以我也搞不清楚

604
00:22:52,000 --> 00:22:53,000
究竟是左右都行呢

605
00:22:53,000 --> 00:22:54,000
还是纯左

606
00:22:54,000 --> 00:22:56,000
你现在是双翘手是吧

607
00:22:56,000 --> 00:22:57,000
没有

608
00:22:57,000 --> 00:22:59,000
就右边稍微顺一点

609
00:22:59,000 --> 00:23:01,000
左边还是能干很多

610
00:23:01,000 --> 00:23:03,000
比较需要力量的事情

611
00:23:03,000 --> 00:23:06,000
你居然能训练成右手比左手的用户

612
00:23:06,000 --> 00:23:07,000
这个实在是

613
00:23:07,000 --> 00:23:09,000
天哪

614
00:23:09,000 --> 00:23:10,000
这不是压抑人性吗

615
00:23:10,000 --> 00:23:10,000
这不是

616
00:23:10,000 --> 00:23:11,000
这不是

617
00:23:11,000 --> 00:23:12,000
好吗

618
00:23:12,000 --> 00:23:16,000
刚才说到左右的键位的问题

619
00:23:16,000 --> 00:23:17,000
像韩文

620
00:23:17,000 --> 00:23:20,000
韩语他们在分配键位的时候

621
00:23:20,000 --> 00:23:22,000
他们就是左右搭配的

622
00:23:22,000 --> 00:23:22,000
他们把

623
00:23:22,000 --> 00:23:25,000
他们把辅音全部分配在左手

624
00:23:25,000 --> 00:23:27,000
然后原音全部分配在右手

625
00:23:27,000 --> 00:23:29,000
所以在他们在打韩文音节的时候

626
00:23:29,000 --> 00:23:31,000
他就辅音原音互相搭配

627
00:23:31,000 --> 00:23:33,000
肯定是左右这样搭配的

628
00:23:33,000 --> 00:23:34,000
那不效率很高啊

629
00:23:34,000 --> 00:23:35,000
左右左

630
00:23:35,000 --> 00:23:36,000
左右左

631
00:23:36,000 --> 00:23:37,000
差不多

632
00:23:37,000 --> 00:23:37,000
对

633
00:23:37,000 --> 00:23:41,000
所以其实这个键位映射的时候

634
00:23:41,000 --> 00:23:41,000
是分配的

635
00:23:41,000 --> 00:23:44,000
还是很需要一些技术的

636
00:23:44,000 --> 00:23:44,000
要不然的话

637
00:23:44,000 --> 00:23:46,000
到时候打字就很痛苦

638
00:23:46,000 --> 00:23:48,000
中文那个五笔分配的时候

639
00:23:48,000 --> 00:23:49,000
有什么讲究吗

640
00:23:49,000 --> 00:23:50,000
好像也忘了

641
00:23:50,000 --> 00:23:52,000
没有中文五笔

642
00:23:52,000 --> 00:23:54,000
就是从那些字根

643
00:23:54,000 --> 00:23:56,000
从 QWRTY 这么分进来

644
00:23:56,000 --> 00:24:00,000
就没有什么讲究左右分布的这种问题

645
00:24:00,000 --> 00:24:01,000
没有

646
00:24:01,000 --> 00:24:02,000
他就直接

647
00:24:02,000 --> 00:24:03,000
好像还是有一些的

648
00:24:03,000 --> 00:24:06,000
我记得好像是中间区域

649
00:24:06,000 --> 00:24:08,000
是比较常用的一些频旁

650
00:24:08,000 --> 00:24:11,000
还是离那个 home road 最近的是最高频的吗

651
00:24:11,000 --> 00:24:11,000
对

652
00:24:11,000 --> 00:24:13,000
对对对

653
00:24:13,000 --> 00:24:15,000
然后还有一个通配符是 Z 是吧

654
00:24:15,000 --> 00:24:16,000
对对对

655
00:24:16,000 --> 00:24:17,000
Z 什么都没有吗

656
00:24:17,000 --> 00:24:17,000
那个

657
00:24:17,000 --> 00:24:18,000
有个通配符吗

658
00:24:18,000 --> 00:24:19,000
嗯

659
00:24:19,000 --> 00:24:20,000
没错

660
00:24:20,000 --> 00:24:21,000
行

661
00:24:21,000 --> 00:24:22,000
咱们是不是要整理一下啊

662
00:24:22,000 --> 00:24:24,000
就是说从键盘

663
00:24:24,000 --> 00:24:25,000
然后键位

664
00:24:25,000 --> 00:24:28,000
然后这个键位的映射这三个不同的东西

665
00:24:28,000 --> 00:24:31,000
大家都应该在先整理清楚才对

666
00:24:31,000 --> 00:24:32,000
OK

667
00:24:32,000 --> 00:24:34,000
首先键位

668
00:24:34,000 --> 00:24:36,000
先说布局吧

669
00:24:36,000 --> 00:24:37,000
就是键盘

670
00:24:37,000 --> 00:24:39,000
我们接受的键盘有实体布局

671
00:24:39,000 --> 00:24:41,000
就是所谓实体布局就是

672
00:24:41,000 --> 00:24:44,000
你看到了这个键上面印着什么样的字母

673
00:24:44,000 --> 00:24:47,000
以及这个键每个键的位置和形状是什么样的

674
00:24:47,000 --> 00:24:49,000
这个基本上是

675
00:24:49,000 --> 00:24:50,000
呃

676
00:24:50,000 --> 00:24:53,000
各个国家民族文化传统的一部分

677
00:24:53,000 --> 00:24:56,000
就是当他们西方国家出现打字机的时候

678
00:24:56,000 --> 00:24:58,000
每个国家的这个打字机的键位都是不一样的

679
00:24:58,000 --> 00:25:02,000
然后这个传统基本上就延续到了电脑时代

680
00:25:02,000 --> 00:25:04,000
当然有些国家因此就被坑了

681
00:25:04,000 --> 00:25:04,000
比如说

682
00:25:05,000 --> 00:25:07,000
我记得好像是

683
00:25:08,000 --> 00:25:10,000
波兰的键盘分为两种

684
00:25:10,000 --> 00:25:11,000
一种是

685
00:25:11,000 --> 00:25:11,000
呃

686
00:25:11,000 --> 00:25:13,000
对一种是

687
00:25:13,000 --> 00:25:16,000
北美传过来的 IBM 尖崇基时代的键盘

688
00:25:16,000 --> 00:25:18,000
另一种是他们自己的那个波兰键盘

689
00:25:18,000 --> 00:25:20,000
然后波兰键盘就非常非常的坑爹

690
00:25:20,000 --> 00:25:25,000
所有的程序员都选择了使用呃美这个英语布局的键盘

691
00:25:25,000 --> 00:25:27,000
呃然后

692
00:25:27,000 --> 00:25:30,000
除了实体布局之外

693
00:25:30,000 --> 00:25:31,000
还有所谓的功能布局

694
00:25:31,000 --> 00:25:32,000
functional layout

695
00:25:32,000 --> 00:25:38,000
然后这个这一层布局是大部分时候对于大部分人对于这个世界上 99%的人来说

696
00:25:38,000 --> 00:25:39,000
如果你不是程序员

697
00:25:39,000 --> 00:25:40,000
然后你也对

698
00:25:40,000 --> 00:25:41,000
对这个

699
00:25:41,000 --> 00:25:43,000
英语键盘没有特别的偏爱的话

700
00:25:43,000 --> 00:25:44,000
基本上呃

701
00:25:44,000 --> 00:25:47,000
功能布局就是你的实体布局

702
00:25:47,000 --> 00:25:51,000
也就是你按下那个键帽上写的反斜杠键

703
00:25:51,000 --> 00:25:53,000
可能在你屏幕上就应该出现反斜杠

704
00:25:53,000 --> 00:25:55,000
但是就是对等的嗯

705
00:25:55,000 --> 00:25:59,000
对但是在其实在几乎每个操作系统里面呃

706
00:25:59,000 --> 00:26:05,000
他都支持把你的实体布局映射到另外一个别的功能布局

707
00:26:05,000 --> 00:26:06,000
也就是你

708
00:26:06,000 --> 00:26:11,000
对于中文用户来说就是你在中英输入法和英文输入法之间切换的方式之中

709
00:26:11,000 --> 00:26:14,000
其实理论上是切换了一个功能布局的

710
00:26:14,000 --> 00:26:18,000
只不过对于拼书入法来说除了功能布局之外

711
00:26:18,000 --> 00:26:19,000
上面还有一层输入法

712
00:26:19,000 --> 00:26:23,000
然后但是对于其他语言的人来说

713
00:26:23,000 --> 00:26:26,000
比如说当我在一个德语键盘上编程的时候

714
00:26:26,000 --> 00:26:30,000
呃如果我觉得这个布局实在是太坑爹了

715
00:26:30,000 --> 00:26:34,000
那我可以选择说呃让操作系统把功能布局设定为英文

716
00:26:34,000 --> 00:26:39,000
这样当我在 M 比如说德语的那个呃就是欧上的加量点

717
00:26:39,000 --> 00:26:40,000
在这个键的时候

718
00:26:40,000 --> 00:26:42,000
它会变成分号

719
00:26:42,000 --> 00:26:45,000
呃这个会省一部分是

720
00:26:45,000 --> 00:26:48,000
但是有些键的位置还是不一样

721
00:26:48,000 --> 00:26:52,000
比如说那个反斜杠在英文布局上应该是在 inter 键的上面

722
00:26:52,000 --> 00:26:55,000
但是在德语键盘上反斜杠还是在左边的 shift 的右边

723
00:26:55,000 --> 00:26:59,000
就是就是你可以改功能布局

724
00:26:59,000 --> 00:27:04,000
但是实体布局还是会限制这个功能布局到底能改成一个什么情况

725
00:27:04,000 --> 00:27:10,000
因为实体布局和你的物理上面你看到的键键帽上面印的那个字是什么样的

726
00:27:10,000 --> 00:27:11,000
是一样的吗

727
00:27:11,000 --> 00:27:12,000
所以呢还好一点

728
00:27:12,000 --> 00:27:19,000
但是当你改完功能布局的时候就是你你实际上 N 的那个键和键帽上面那个字是不一样的

729
00:27:19,000 --> 00:27:21,000
因为你功功能布局改掉了吗

730
00:27:21,000 --> 00:27:23,000
所以我突然理解一件事儿

731
00:27:23,000 --> 00:27:26,000
那个 HHKB 从日本出来是有道理的

732
00:27:26,000 --> 00:27:32,000
无科技键盘其实在 HHKB 之前就有

733
00:27:32,000 --> 00:27:39,000
但那个好像也是一个呃应该也是个 NC 的键盘

734
00:27:39,000 --> 00:27:40,000
对

735
00:27:40,000 --> 00:27:44,000
其实是 KB 的确是无科技键盘里面最最知名的一个

736
00:27:44,000 --> 00:27:45,000
嗯哼

737
00:27:45,000 --> 00:27:46,000
对你那款是无科技的吧

738
00:27:46,000 --> 00:27:47,000
无他

739
00:27:47,000 --> 00:27:48,000
那当然了

740
00:27:48,000 --> 00:27:50,000
就我这样我就不用发愁了

741
00:27:50,000 --> 00:27:52,000
到底是德语还是英语

742
00:27:52,000 --> 00:27:53,000
哈哈哈

743
00:27:53,000 --> 00:27:54,000
对

744
00:27:54,000 --> 00:27:57,000
就是说只要键盘上没有刻字之后嘛

745
00:27:57,000 --> 00:28:00,000
就你就可以随意的去调整你的那个键那个键位映射

746
00:28:00,000 --> 00:28:09,000
这样你就不就是你可以忽略掉这个就什么实体键位和实体那个系统里面键位的这个差异了吗

747
00:28:09,000 --> 00:28:10,000
嗯

748
00:28:10,000 --> 00:28:13,000
但换句话说做一个强迫症就会活的稍微舒服一点

749
00:28:13,000 --> 00:28:17,000
你打个叉一个是你可以把他的剑帽拔下来交换一下位置

750
00:28:17,000 --> 00:28:18,000
哈哈哈

751
00:28:18,000 --> 00:28:23,000
我就这么干的就是我再我再用一块带刻印的 HHKB

752
00:28:23,000 --> 00:28:27,000
我把那个 ESC 键盒最右边的那个那个叫什么键

753
00:28:27,000 --> 00:28:28,000
那个一个点

754
00:28:28,000 --> 00:28:32,000
对就把那两个位置换一下

755
00:28:32,000 --> 00:28:33,000
哈哈

756
00:28:33,000 --> 00:28:34,000
天的

757
00:28:34,000 --> 00:28:35,000
这纯手工

758
00:28:35,000 --> 00:28:36,000
嗯

759
00:28:36,000 --> 00:28:37,000
哎

760
00:28:37,000 --> 00:28:38,000
那我不知道你们实际上呃实际有没有遇到过

761
00:28:38,000 --> 00:28:44,000
就不用这个 QWERTY 布局的用过的什么德沃夏克那个布局的那个

762
00:28:44,000 --> 00:28:45,000
我没有啊

763
00:28:45,000 --> 00:28:52,000
我我有一个我的同事在用就或者说我在直属 team leader 在用德沃夏克的布局

764
00:28:52,000 --> 00:28:53,000
嗯

765
00:28:53,000 --> 00:28:54,000
嗯

766
00:28:54,000 --> 00:28:56,000
我觉得他们就是特别特别惨

767
00:28:56,000 --> 00:28:57,000
会吗

768
00:28:57,000 --> 00:28:59,000
就是每次他自己用他自己设备的话好啊

769
00:28:59,000 --> 00:29:02,000
就是他要用别人设备他每次都得换还是干什么

770
00:29:02,000 --> 00:29:07,000
他还是得强迫的去因为这个世界上毕竟 QWERTY 比较多吗

771
00:29:07,000 --> 00:29:08,000
呃

772
00:29:08,000 --> 00:29:10,000
我觉得德沃夏克并没有快到哪去说什么

773
00:29:10,000 --> 00:29:12,000
但我觉得也是啊

774
00:29:12,000 --> 00:29:14,000
这个习惯问题估计是

775
00:29:14,000 --> 00:29:21,000
而且如果说你你你我们认同那个说呃高频件要离 home road 比较近的话

776
00:29:21,000 --> 00:29:24,000
其实应该就是德沃夏克他的一个逻辑就是这样

777
00:29:24,000 --> 00:29:26,000
他的高频件比较好嘛

778
00:29:26,000 --> 00:29:33,000
就是他分布从从那个概统计概略上来讲比较高频率的基金在那个 home road 附近嘛

779
00:29:34,000 --> 00:29:36,000
然后这个高频件是跟何宇宙的一个计算机呢

780
00:29:36,000 --> 00:29:38,000
高频件是跟和语言相关的

781
00:29:38,000 --> 00:29:39,000
没错

782
00:29:39,000 --> 00:29:42,000
和语言相关和你的这个打的文本相关的

783
00:29:42,000 --> 00:29:44,000
所以理论上应该是用一个无刻印的键盘

784
00:29:44,000 --> 00:29:48,000
然后分析你打过的所有的那个这个就是基建历史

785
00:29:48,000 --> 00:29:50,000
然后重新统计一下这个频率

786
00:29:50,000 --> 00:29:53,000
然后再来排一个适合你的这个 layout

787
00:29:53,000 --> 00:29:56,000
对你的你的专属 layout 吧

788
00:29:56,000 --> 00:29:57,000
从你的专属

789
00:29:57,000 --> 00:30:00,000
从你的专属字体到你的专属输入法

790
00:30:00,000 --> 00:30:03,000
然后现在就是每个人都有自己的键位

791
00:30:03,000 --> 00:30:04,000
这个就傻掉了

792
00:30:04,000 --> 00:30:05,000
没法通用了

793
00:30:06,000 --> 00:30:12,000
如果大家对这个功能布局是不大熟悉的话

794
00:30:12,000 --> 00:30:15,000
如果大家可以其实到操作系统上看一下

795
00:30:15,000 --> 00:30:17,000
在键盘的那个属性上面

796
00:30:17,000 --> 00:30:19,000
它有各种文字

797
00:30:19,000 --> 00:30:21,000
然后呢它有各种各样的那个

798
00:30:21,000 --> 00:30:24,000
可能如果不注意这个功能的朋友

799
00:30:24,000 --> 00:30:26,000
他们从来就没有见过其他布局

800
00:30:26,000 --> 00:30:29,000
所以呢去看一下那个设置下就可以知道非常有意思

801
00:30:29,000 --> 00:30:30,000
Windows 有吗

802
00:30:30,000 --> 00:30:32,000
也有也有

803
00:30:32,000 --> 00:30:34,000
有的

804
00:30:34,000 --> 00:30:35,000
反正你在 OS X 里面呢

805
00:30:35,000 --> 00:30:36,000
有的有的

806
00:30:36,000 --> 00:30:38,000
你如果在改变那个

807
00:30:38,000 --> 00:30:40,000
改变那个输入员的名称的时候

808
00:30:40,000 --> 00:30:41,000
它会给你一个

809
00:30:41,000 --> 00:30:43,000
那个这个输入员看起来

810
00:30:43,000 --> 00:30:45,000
键盘的布局大概是什么样子

811
00:30:45,000 --> 00:30:48,000
对它直接会把那个那个键盘的显示出来对吧

812
00:30:48,000 --> 00:30:50,000
连那个键位都会显示出来

813
00:30:50,000 --> 00:30:52,000
它好像 Windows 有吗

814
00:30:52,000 --> 00:30:55,000
Windows 在那个输入法里面也可以调

815
00:30:55,000 --> 00:30:57,000
但是挺麻烦的

816
00:30:57,000 --> 00:30:58,000
但是它会不会显示这个键位

817
00:30:58,000 --> 00:31:00,000
但你好像没有键位预览吧

818
00:31:00,000 --> 00:31:02,000
这个这个也没有了

819
00:31:02,000 --> 00:31:06,000
键位预览应该是只限于系统自带的那些输入法

820
00:31:06,000 --> 00:31:12,000
键位预览首先你得先和你的那个键盘的那个形状要保持一致嘛

821
00:31:12,000 --> 00:31:14,000
Windows 那么多奇形怪状的键盘

822
00:31:14,000 --> 00:31:16,000
它可能没法做预览吧

823
00:31:16,000 --> 00:31:18,000
好吧

824
00:31:18,000 --> 00:31:19,000
原来坑在这里

825
00:31:19,000 --> 00:31:22,000
你看那个 OS X 里面的那个键位预览

826
00:31:22,000 --> 00:31:27,000
它其实画的是一个标准的这个就 Mac 蓝牙键盘的那种那种那种结构嘛

827
00:31:27,000 --> 00:31:31,000
就以你现在使用的那个这个

828
00:31:31,000 --> 00:31:32,000
我现在用 MacBook 嘛

829
00:31:32,000 --> 00:31:33,000
MacBook Pro 嘛

830
00:31:33,000 --> 00:31:36,000
我现在的这个键位为基础

831
00:31:36,000 --> 00:31:37,000
的映射

832
00:31:37,000 --> 00:31:38,000
诶 吴涛你要可能看一下

833
00:31:38,000 --> 00:31:43,000
你看一下你你是买了一块那个叫什么最新的那个蓝牙蓝牙键盘是不是

834
00:31:43,000 --> 00:31:45,000
我买这个叫英语布局

835
00:31:45,000 --> 00:31:50,000
不不但是就是是最新的不是那个插电池的是自带电池的那个是吧

836
00:31:50,000 --> 00:31:51,000
对没错

837
00:31:51,000 --> 00:31:56,000
然后你看一下那个键盘键盘里面它的那个方向键是什么形式倒梯字形吗

838
00:31:56,000 --> 00:31:57,000
还是怎么样

839
00:31:57,000 --> 00:32:00,000
啊没错是两个被缩小的键

840
00:32:00,000 --> 00:32:03,000
所以它就是使用我当前的键盘的确

841
00:32:03,000 --> 00:32:04,000
嗯 OK

842
00:32:04,000 --> 00:32:06,000
然后就它主要是什么

843
00:32:06,000 --> 00:32:08,000
就是自己自己的东西的话都是那样的

844
00:32:08,000 --> 00:32:09,000
没错

845
00:32:09,000 --> 00:32:10,000
诶 等一下好像有个不一样

846
00:32:10,000 --> 00:32:18,000
在现在最新的那个自带电池的就内置电池的那个苹果蓝牙键盘的那个方向键的左右是全高的了

847
00:32:18,000 --> 00:32:19,000
不是半高的了

848
00:32:19,000 --> 00:32:20,000
是全高的是全高的

849
00:32:20,000 --> 00:32:23,000
我在这个键盘缩略图上看到的也是全高的

850
00:32:23,000 --> 00:32:26,000
对那我看到的我也我是那个是上一代的嘛

851
00:32:26,000 --> 00:32:28,000
我看是半高的左右键

852
00:32:28,000 --> 00:32:33,000
就是它很可能当前设备的样子画出来的

853
00:32:33,000 --> 00:32:34,000
就我们又发现了一个细节

854
00:32:34,000 --> 00:32:36,000
这个可以给郭文

855
00:32:36,000 --> 00:32:38,000
郭粉们去吹一下

856
00:32:38,000 --> 00:32:39,000
可以发给那个什么

857
00:32:39,000 --> 00:32:40,000
你说

858
00:32:40,000 --> 00:32:41,000
tiny little

859
00:32:41,000 --> 00:32:42,000
什么 little detail 什么

860
00:32:42,000 --> 00:32:43,000
那个网站叫什么来的

861
00:32:44,000 --> 00:32:45,000
不知道

862
00:32:45,000 --> 00:32:49,000
有一个网站专门去去搜集这种设计上的小新设

863
00:32:49,000 --> 00:32:50,000
OK

864
00:32:52,000 --> 00:32:54,000
所以就是苹果它能做预览

865
00:32:54,000 --> 00:32:56,000
就是因为它知道你接入的是哪个设备嘛

866
00:32:56,000 --> 00:32:59,000
然后它知道那个设备的那个键位的实际的布局

867
00:32:59,000 --> 00:33:00,000
然后再给你叠上去

868
00:33:00,000 --> 00:33:02,000
你会觉得没有什么意外嘛

869
00:33:03,000 --> 00:33:04,000
对

870
00:33:04,000 --> 00:33:05,000
所以这个时候想起那些

871
00:33:05,000 --> 00:33:07,000
就是现在不是有一些游戏键盘上面

872
00:33:07,000 --> 00:33:08,000
它是那个那个键帽

873
00:33:08,000 --> 00:33:09,000
它没有刻字

874
00:33:09,000 --> 00:33:12,000
它是一个它是一个小的 LED 屏幕嘛

875
00:33:14,000 --> 00:33:15,000
之前叫什么

876
00:33:16,000 --> 00:33:17,000
叫一个很高大上的名字

877
00:33:17,000 --> 00:33:19,000
什么 primeoptimus 之类的

878
00:33:19,000 --> 00:33:23,000
反正就是它每个等于是每个按键的就是一个小屏幕

879
00:33:23,000 --> 00:33:27,000
它可以你可以根据编程的方式改变它上面显示的内容

880
00:33:27,000 --> 00:33:29,000
这样就解决了刻印

881
00:33:29,000 --> 00:33:31,000
没法变换但是没有刻印

882
00:33:31,000 --> 00:33:33,000
有时候又看一下不方便的难题嘛

883
00:33:33,000 --> 00:33:34,000
对

884
00:33:34,000 --> 00:33:35,000
而且那个键盘是彩色的

885
00:33:35,000 --> 00:33:42,000
然后可以比如说你在用 photoshop 的时候直接在那个键上显示这对应了于 photoshop 的那个功能

886
00:33:42,000 --> 00:33:43,000
对对对

887
00:33:43,000 --> 00:33:44,000
没错

888
00:33:44,000 --> 00:33:46,000
还有或者是一个缩略图之类的挺帅气的

889
00:33:46,000 --> 00:33:47,000
对

890
00:33:47,000 --> 00:33:49,000
但后来我记得那个键盘只是量产的

891
00:33:49,000 --> 00:33:53,000
其实限量版的就大概出了一千两千副这样

892
00:33:53,000 --> 00:33:55,000
太贵了吧

893
00:33:55,000 --> 00:33:57,000
你每个键盘都要做一个小屏幕

894
00:33:57,000 --> 00:33:59,000
每个键每个按键都做小屏幕

895
00:33:59,000 --> 00:34:00,000
其实挺麻烦的

896
00:34:00,000 --> 00:34:01,000
好

897
00:34:01,000 --> 00:34:03,000
我觉得我们有点朝这个键盘恐慌的

898
00:34:03,000 --> 00:34:04,000
对吧

899
00:34:04,000 --> 00:34:08,000
但是这个是一个文字书的基础

900
00:34:08,000 --> 00:34:11,000
刚才说了一些我们都是讲的实体的键盘怎么样

901
00:34:11,000 --> 00:34:15,000
那你们有想过在现在触屏上软键盘是不是就没有这个问题了

902
00:34:15,000 --> 00:34:16,000
对

903
00:34:16,000 --> 00:34:19,000
其实对软键盘其实要比实体键盘简单很多

904
00:34:19,000 --> 00:34:21,000
它只是一个

905
00:34:21,000 --> 00:34:24,000
或者说在实现原理上要简单很多

906
00:34:24,000 --> 00:34:28,000
它不存在键盘的什么扫描码是不是

907
00:34:28,000 --> 00:34:31,000
我一直没有理解这个概念到底怎么一回事

908
00:34:31,000 --> 00:34:32,000
没错

909
00:34:32,000 --> 00:34:33,000
对啊

910
00:34:33,000 --> 00:34:36,000
我们就来从这个键盘的描码这个东西跟大家解释解释

911
00:34:36,000 --> 00:34:37,000
好吧

912
00:34:37,000 --> 00:34:40,000
其实键盘本身是一个非常复杂的数码转换系统

913
00:34:40,000 --> 00:34:45,000
就是你把魔术转换系统应该叫的

914
00:34:45,000 --> 00:34:48,000
其实每一个键盘都是一台非常小的计算机

915
00:34:48,000 --> 00:34:50,000
因为每一个键盘在

916
00:34:50,000 --> 00:34:53,000
尤其是 USB 键盘在按下键之后

917
00:34:53,000 --> 00:35:01,000
会需要一个芯片把按下的键的电讯号转化成计算机能懂的一个码

918
00:35:01,000 --> 00:35:03,000
然后这个码就叫扫描码

919
00:35:03,000 --> 00:35:04,000
为什么叫扫描码

920
00:35:04,000 --> 00:35:07,000
就是因为在键盘里面的这颗芯片

921
00:35:07,000 --> 00:35:16,000
它所做的事情就是去扫描一个八成多少的网格

922
00:35:16,000 --> 00:35:19,000
然后所谓扫描的

923
00:35:19,000 --> 00:35:20,000
它的确就是网格吧

924
00:35:20,000 --> 00:35:22,000
横纵多少列的对吧

925
00:35:22,000 --> 00:35:23,000
就是那个网格

926
00:35:23,000 --> 00:35:24,000
我忘了具体的数字

927
00:35:24,000 --> 00:35:27,000
但是基本上就是先看第一排

928
00:35:27,000 --> 00:35:30,000
然后第一排把每一列扫一遍

929
00:35:30,000 --> 00:35:32,000
然后看第二排再把每一列扫一遍

930
00:35:32,000 --> 00:35:34,000
然后这个扫描的速度非常非常快的

931
00:35:34,000 --> 00:35:35,000
像电视一样

932
00:35:35,000 --> 00:35:39,000
你在你以为自己同时按下了两个键

933
00:35:39,000 --> 00:35:41,000
然后计算机上也说好吧

934
00:35:41,000 --> 00:35:42,000
你同时按下两个键

935
00:35:42,000 --> 00:35:48,000
但实际上这个过程是它先看第一排的第六列

936
00:35:48,000 --> 00:35:49,000
然后被按下了

937
00:35:49,000 --> 00:35:52,000
然后它扫描到第二排的第七列

938
00:35:52,000 --> 00:35:53,000
发现也被按下了

939
00:35:53,000 --> 00:35:54,000
然后他会说好

940
00:35:54,000 --> 00:35:56,000
这个用户同时按了两个键

941
00:35:56,000 --> 00:35:58,000
实际上这一切都是顺序发生的

942
00:35:58,000 --> 00:36:00,000
然后这个过程就叫做扫描

943
00:36:00,000 --> 00:36:01,000
然后这个过程扫下来的一个键是什么呢

944
00:36:01,000 --> 00:36:03,000
这个过程扫下来的一个位置

945
00:36:03,000 --> 00:36:06,000
会被转化成一个操作系统可以懂

946
00:36:06,000 --> 00:36:07,000
不是操作系统可以懂

947
00:36:07,000 --> 00:36:10,000
主板可以懂的电讯号

948
00:36:10,000 --> 00:36:13,000
然后这个电讯号本身就叫做扫描码

949
00:36:13,000 --> 00:36:16,000
而且很关键就是在这个步骤的时候

950
00:36:16,000 --> 00:36:18,000
还不知道是什么字

951
00:36:18,000 --> 00:36:23,000
只是这个位置的那个点证位置的那个键被按下去

952
00:36:23,000 --> 00:36:25,000
这个信号被传过去了对吧

953
00:36:25,000 --> 00:36:28,000
然后是由计算机操作系统来决定

954
00:36:28,000 --> 00:36:31,000
按下去的这个码到底带来什么

955
00:36:31,000 --> 00:36:32,000
代表什么字符的

956
00:36:32,000 --> 00:36:34,000
这是这已经是一层映射了

957
00:36:34,000 --> 00:36:37,000
其实就是绝对于对于绝大多数键盘来说

958
00:36:37,000 --> 00:36:38,000
这是有个标准的

959
00:36:38,000 --> 00:36:40,000
尤其是在 ps 2 时代

960
00:36:40,000 --> 00:36:45,000
就是我们的年龄小的听众可能没有见过 ps 2 是什么样子

961
00:36:45,000 --> 00:36:49,000
ps 2 是一个看起来很奇怪的接口

962
00:36:49,000 --> 00:36:51,000
然后这个接口有意

963
00:36:51,000 --> 00:36:54,000
我当时应该是支持三套不同的扫描码吧

964
00:36:54,000 --> 00:36:58,000
就是根据这个主板和操作系统要求

965
00:36:58,000 --> 00:37:01,000
它可以送三种不同的扫描码

966
00:37:01,000 --> 00:37:04,000
但是基本上后来就归一成一种了

967
00:37:04,000 --> 00:37:05,000
然后在这个扫描码里面

968
00:37:05,000 --> 00:37:11,000
我记得之前不是有什么 control 改 caps lock 吗

969
00:37:11,000 --> 00:37:13,000
你要把 caps lock 改成 control 键的话

970
00:37:13,000 --> 00:37:16,000
你要去在操作系统层面

971
00:37:16,000 --> 00:37:17,000
尤其是在 windows 里面

972
00:37:17,000 --> 00:37:19,000
你要把两个扫描码兑换

973
00:37:19,000 --> 00:37:21,000
比如说 3 a 代表 control

974
00:37:21,000 --> 00:37:24,000
1 b 这都 16 进制的数字

975
00:37:24,000 --> 00:37:26,000
代表 caps lock

976
00:37:26,000 --> 00:37:29,000
然后你把这两个扫描码换一下

977
00:37:29,000 --> 00:37:31,000
你就会发现你按下去的那个数字

978
00:37:31,000 --> 00:37:33,000
就会把 caps lock 变成了 control

979
00:37:33,000 --> 00:37:34,000
其实就是这么来的

980
00:37:34,000 --> 00:37:37,000
但是后来到了 USB 时代

981
00:37:37,000 --> 00:37:44,000
绝大部分的 USB 键盘都支持所谓 human interface device protocol

982
00:37:44,000 --> 00:37:47,000
然后在这个 protocol 里面就规定了说

983
00:37:47,000 --> 00:37:50,000
在 USB 上传来一个什么样的信号

984
00:37:50,000 --> 00:37:52,000
对应于一个什么样的按键

985
00:37:52,000 --> 00:37:55,000
或者对应于一个什么样的扫描码

986
00:37:55,000 --> 00:37:59,000
这套扫描码跟 PS 2 时代是不兼容的

987
00:37:59,000 --> 00:38:01,000
但是蓝牙键盘呢

988
00:38:01,000 --> 00:38:03,000
这一段时间就是有一个很大的变化

989
00:38:03,000 --> 00:38:05,000
就是蓝牙键盘的这个扫描码

990
00:38:05,000 --> 00:38:08,000
就是在这个 USB 的这个 HID 的编码

991
00:38:08,000 --> 00:38:10,000
用套用过去了

992
00:38:10,000 --> 00:38:11,000
所以在某种程度上

993
00:38:11,000 --> 00:38:14,000
你的蓝牙键盘其实是一个 USB 键盘

994
00:38:14,000 --> 00:38:20,000
就是在解码这一块是完全按照一个 USB 的 human interface device 来解码

995
00:38:20,000 --> 00:38:22,000
大概就是扫描码的概念

996
00:38:22,000 --> 00:38:24,000
所以它的那个

997
00:38:24,000 --> 00:38:28,000
所以它的码位最后就是传到主板以后

998
00:38:28,000 --> 00:38:30,000
然后再根据刚才说的那个键盘

999
00:38:30,000 --> 00:38:34,000
然后再来让操作系统知道它打下去是什么字

1000
00:38:34,000 --> 00:38:37,000
其实操作系统决定说你按了这个键

1001
00:38:37,000 --> 00:38:39,000
对应了一个什么样的字符

1002
00:38:39,000 --> 00:38:41,000
对,由操作系统来定

1003
00:38:44,000 --> 00:38:47,000
好了,我们终于可以把这个信息传到操作系统

1004
00:38:47,000 --> 00:38:50,000
那操作系统接下来做什么事情

1005
00:38:50,000 --> 00:38:54,000
操作系统接下来要做的一件事情

1006
00:38:54,000 --> 00:38:58,000
实际上是跟键盘扫码没有太多的关系

1007
00:38:58,000 --> 00:39:01,000
没有太多的关联

1008
00:39:01,000 --> 00:39:02,000
我应该这么说吧

1009
00:39:02,000 --> 00:39:10,000
就我们刚才介绍了说从键盘传一个字符到操作系统

1010
00:39:10,000 --> 00:39:12,000
然后现在操作系统其实面临一个问题

1011
00:39:12,000 --> 00:39:14,000
就是操作系统要把这个字符显示出来

1012
00:39:14,000 --> 00:39:18,000
或者说要把它存在内存里面

1013
00:39:18,000 --> 00:39:22,000
那这又涉及到了另外一套编码的问题

1014
00:39:22,000 --> 00:39:26,000
就是你以一个什么样的规则来告诉一块内存里面的问题

1015
00:39:26,000 --> 00:39:27,000
就是你以一个什么样的规则来告诉一块内存里面的问题

1016
00:39:27,000 --> 00:39:28,000
就是你以一个什么样的规则来告诉一块内存里面的问题

1017
00:39:28,000 --> 00:39:32,000
或者是一个硬盘上的一个小区域

1018
00:39:32,000 --> 00:39:35,000
说我要把这个 A 存下来

1019
00:39:35,000 --> 00:39:38,000
这个时候其实是涉及到了文字编码

1020
00:39:38,000 --> 00:39:41,000
但是文字编码跟键盘扫描码其实完全不相干

1021
00:39:41,000 --> 00:39:47,000
键盘扫描码就是为了键盘嘛

1022
00:39:47,000 --> 00:39:48,000
对吧

1023
00:39:48,000 --> 00:39:49,000
对 键盘扫描码是为了

1024
00:39:49,000 --> 00:39:53,000
是为了计算机知道用户按下了什么字符

1025
00:39:53,000 --> 00:39:56,000
但是接下来讨论这个文件编码

1026
00:39:56,000 --> 00:39:57,000
就是要让

1027
00:39:57,000 --> 00:39:58,000
就是要让

1028
00:39:58,000 --> 00:40:04,000
计算机决定在存储某一个字符的时候

1029
00:40:04,000 --> 00:40:07,000
应该把它存成什么样的形式

1030
00:40:07,000 --> 00:40:10,000
或者说用哪个数字来代表这个

1031
00:40:10,000 --> 00:40:13,000
用哪个数字来代表这个字符

1032
00:40:13,000 --> 00:40:14,000
对

1033
00:40:14,000 --> 00:40:17,000
然后在早期也是有很多种字符存在

1034
00:40:17,000 --> 00:40:18,000
比如说

1035
00:40:18,000 --> 00:40:21,000
我记得 IBM 有一种自己的字符

1036
00:40:21,000 --> 00:40:23,000
自己的字符编码

1037
00:40:23,000 --> 00:40:24,000
叫什么

1038
00:40:24,000 --> 00:40:26,000
Q 什么编码

1039
00:40:26,000 --> 00:40:27,000
但是

1040
00:40:27,000 --> 00:40:31,000
基本上现在最通用的一个或者最基本的一个编码

1041
00:40:31,000 --> 00:40:33,000
就是个 ASCII 编码

1042
00:40:33,000 --> 00:40:38,000
我相信可能很多朋友在学编程的时候都背过这个码表

1043
00:40:38,000 --> 00:40:39,000
包括我也背过

1044
00:40:39,000 --> 00:40:40,000
但是

1045
00:40:40,000 --> 00:40:41,000
我现在已经忘光了

1046
00:40:41,000 --> 00:40:42,000
97 是什么

1047
00:40:42,000 --> 00:40:43,000
97 是什么

1048
00:40:43,000 --> 00:40:46,000
97 好耳熟啊

1049
00:40:46,000 --> 00:40:48,000
90 还是字母 B 吧

1050
00:40:48,000 --> 00:40:49,000
是吗

1051
00:40:49,000 --> 00:40:50,000
不是 A 吗

1052
00:40:50,000 --> 00:40:51,000
A 吗

1053
00:40:51,000 --> 00:40:52,000
我忘了

1054
00:40:52,000 --> 00:40:53,000
97 是 A 吗

1055
00:40:53,000 --> 00:40:56,000
就是当时就也是背了好几个就是最常见的

1056
00:40:56,000 --> 00:40:58,000
我只记得 65 是 A

1057
00:40:58,000 --> 00:41:01,000
但是 65 加大小写

1058
00:41:01,000 --> 00:41:03,000
好像大小写嘛

1059
00:41:03,000 --> 00:41:04,000
对 65 是大写的 A

1060
00:41:04,000 --> 00:41:08,000
但是 97-65 好像不是

1061
00:41:08,000 --> 00:41:09,000
对

1062
00:41:09,000 --> 00:41:11,000
大写和小写之间还有一堆特殊符号

1063
00:41:11,000 --> 00:41:13,000
应该有

1064
00:41:13,000 --> 00:41:14,000
所以不一样

1065
00:41:14,000 --> 00:41:15,000
97-65 是 32

1066
00:41:15,000 --> 00:41:17,000
所以那应该的确是小写的 A

1067
00:41:17,000 --> 00:41:20,000
因为他那个 ASCII 的码

1068
00:41:20,000 --> 00:41:22,000
ASCII 表其实设计的挺巧妙的

1069
00:41:22,000 --> 00:41:25,000
如果你遇到一个键盘

1070
00:41:25,000 --> 00:41:26,000
如果你遇到一个码的话

1071
00:41:26,000 --> 00:41:27,000
你把这个第五位

1072
00:41:27,000 --> 00:41:28,000
如果是 0

1073
00:41:28,000 --> 00:41:29,000
你把它变成 1

1074
00:41:29,000 --> 00:41:33,000
就可以让它变成小写字母

1075
00:41:33,000 --> 00:41:35,000
在当初的这个

1076
00:41:35,000 --> 00:41:39,000
很多人还在操作比特时代的时候

1077
00:41:39,000 --> 00:41:41,000
这是一个非常重要的 feature

1078
00:41:41,000 --> 00:41:46,000
所以实境制 97 是那个 ASCII 的小写字母 A

1079
00:41:46,000 --> 00:41:47,000
没错我查了

1080
00:41:47,000 --> 00:41:49,000
非常好

1081
00:41:49,000 --> 00:41:51,000
还好我说对了

1082
00:41:51,000 --> 00:41:53,000
好紧张

1083
00:41:53,000 --> 00:41:54,000
好紧张

1084
00:41:54,000 --> 00:41:56,000
你们紧张什么

1085
00:41:56,000 --> 00:41:57,000
这已经是

1086
00:41:57,000 --> 00:42:01,000
其实计算机里面有非常多这种

1087
00:42:01,000 --> 00:42:03,000
背下来很屌

1088
00:42:03,000 --> 00:42:06,000
但是好像平时没有什么用处的知识

1089
00:42:06,000 --> 00:42:08,000
其实没有什么卵用

1090
00:42:08,000 --> 00:42:10,000
还是有点用的

1091
00:42:10,000 --> 00:42:11,000
你看

1092
00:42:11,000 --> 00:42:16,000
你现在做很多这种网络协议的解析的时候

1093
00:42:16,000 --> 00:42:22,000
你看到用 16 进制 hex 的方式表达的数据包的时候

1094
00:42:22,000 --> 00:42:23,000
你看到

1095
00:42:23,000 --> 00:42:25,000
97

1096
00:42:25,000 --> 00:42:26,000
马上要出

1097
00:42:26,000 --> 00:42:29,000
你就知道后面是可能是一个 printable characters

1098
00:42:29,000 --> 00:42:31,000
就是有东西要写出来的

1099
00:42:31,000 --> 00:42:33,000
97 是实境制

1100
00:42:33,000 --> 00:42:36,000
你要先把 16 进制背下来才对

1101
00:42:36,000 --> 00:42:37,000
对

1102
00:42:37,000 --> 00:42:39,000
16 进制是 61

1103
00:42:42,000 --> 00:42:43,000
好了

1104
00:42:43,000 --> 00:42:45,000
我们不要这么哈图

1105
00:42:48,000 --> 00:42:52,000
但 ASCII 当然也有一个 8 位和 7 位的问题

1106
00:42:52,000 --> 00:42:57,000
我们一个 byte 是 256 个可能性

1107
00:42:57,000 --> 00:42:59,000
8 个位的 bit

1108
00:42:59,000 --> 00:43:02,000
但 ASCII 只用了其中的 7 个位

1109
00:43:02,000 --> 00:43:05,000
顶它高位其实还有点讲究的

1110
00:43:06,000 --> 00:43:07,000
对

1111
00:43:07,000 --> 00:43:09,000
因为还多出来这一位

1112
00:43:09,000 --> 00:43:12,000
这一位最开始是为了扩展准备的

1113
00:43:12,000 --> 00:43:13,000
对

1114
00:43:13,000 --> 00:43:19,000
然后很多拉丁文字都可以通过这一位的方法来把他们的一些

1115
00:43:19,000 --> 00:43:22,000
字母表的大部分都用了

1116
00:43:22,000 --> 00:43:24,000
比如德文就是这样的方式来实现的

1117
00:43:24,000 --> 00:43:25,000
对吧

1118
00:43:25,000 --> 00:43:29,000
对有一个其实西欧所有的语言都可以用这种方式来实现

1119
00:43:29,000 --> 00:43:32,000
就只要他不自服即叫做拉丁一扩展

1120
00:43:32,000 --> 00:43:33,000
对

1121
00:43:33,000 --> 00:43:34,000
嗯

1122
00:43:34,000 --> 00:43:36,000
基本上不超过

1123
00:43:38,000 --> 00:43:41,000
所以它的原理就是就是那一位是控制的

1124
00:43:41,000 --> 00:43:45,000
如果认为控制的就是普通就落回到就是普通的 ASCII 这个

1125
00:43:45,000 --> 00:43:47,000
原最原来的一个码表

1126
00:43:47,000 --> 00:43:48,000
对吧

1127
00:43:48,000 --> 00:43:50,000
然后那位控控上去以后

1128
00:43:50,000 --> 00:43:52,000
然后就可以扩展成 7 台了

1129
00:43:52,000 --> 00:43:55,000
然后他各种当年是各个国家还不一样

1130
00:43:55,000 --> 00:43:56,000
所以各种各样

1131
00:43:56,000 --> 00:43:57,000
刚才也说了

1132
00:43:57,000 --> 00:44:03,000
所以日本的话他就是把扩展为他当年的半角片假名

1133
00:44:03,000 --> 00:44:04,000
对

1134
00:44:04,000 --> 00:44:06,000
只有片假名

1135
00:44:06,000 --> 00:44:07,000
而且是半角

1136
00:44:07,000 --> 00:44:08,000
只有片假名

1137
00:44:08,000 --> 00:44:09,000
OK

1138
00:44:09,000 --> 00:44:11,000
因为他只多出来 128 个位子

1139
00:44:11,000 --> 00:44:13,000
你也放不了多少字符进去

1140
00:44:13,000 --> 00:44:17,000
好吧

1141
00:44:17,000 --> 00:44:21,000
但是好像 50 音图片假名全假名

1142
00:44:21,000 --> 00:44:22,000
就是片假名

1143
00:44:22,000 --> 00:44:24,000
片假名可以加进去

1144
00:44:24,000 --> 00:44:25,000
嗯

1145
00:44:25,000 --> 00:44:26,000
嗯

1146
00:44:26,000 --> 00:44:27,000
嗯

1147
00:44:27,000 --> 00:44:32,000
所以那个因为平假名应该没有什么半角的需求吧

1148
00:44:32,000 --> 00:44:33,000
可能

1149
00:44:33,000 --> 00:44:34,000
是吧

1150
00:44:34,000 --> 00:44:39,000
在实验中应该经常用这个标准半角显示的

1151
00:44:39,000 --> 00:44:41,000
只有片假名会比较多一点

1152
00:44:41,000 --> 00:44:42,000
嗯

1153
00:44:42,000 --> 00:44:45,000
我觉得可能也是因为那个时候只用外来语

1154
00:44:45,000 --> 00:44:48,000
写的情况也比较多

1155
00:44:48,000 --> 00:44:50,000
不就是当年就拍板方式

1156
00:44:50,000 --> 00:44:52,000
就像写电报的时候

1157
00:44:52,000 --> 00:44:53,000
写电报的时候

1158
00:44:53,000 --> 00:44:55,000
日本传统的电报就全是都用片假名

1159
00:44:55,000 --> 00:44:57,000
然后而且比如说他有着音点嘛

1160
00:44:57,000 --> 00:44:59,000
咔加个着音点就变成咔嘛

1161
00:44:59,000 --> 00:45:00,000
嗯

1162
00:45:00,000 --> 00:45:04,000
着音点呢他就是着音点是另外一个字符

1163
00:45:04,000 --> 00:45:06,000
所以他是两个字就变成了

1164
00:45:06,000 --> 00:45:07,000
OK

1165
00:45:07,000 --> 00:45:08,000
所以这里有一个问题

1166
00:45:08,000 --> 00:45:11,000
就是像日文这种情况比较特殊吧

1167
00:45:11,000 --> 00:45:13,000
就是他同样一个意思

1168
00:45:13,000 --> 00:45:15,000
他可以用几套不同的方式来表达

1169
00:45:15,000 --> 00:45:16,000
对吧

1170
00:45:16,000 --> 00:45:17,000
嗯

1171
00:45:17,000 --> 00:45:20,000
就是比如说有各种不同的有用的方式吧

1172
00:45:20,000 --> 00:45:21,000
比如说用汉字写的

1173
00:45:21,000 --> 00:45:24,000
好像也可以用什么什么各种假名的方式来写的

1174
00:45:24,000 --> 00:45:26,000
天皇诏书不是只用片假名写吗

1175
00:45:26,000 --> 00:45:27,000
听不懂

1176
00:45:27,000 --> 00:45:28,000
哎

1177
00:45:28,000 --> 00:45:29,000
那天皇诏书没有就是难

1178
00:45:29,000 --> 00:45:32,000
当时就是用汉文汉字啊

1179
00:45:32,000 --> 00:45:35,000
就日本汉字加片假名

1180
00:45:35,000 --> 00:45:36,000
这样写

1181
00:45:36,000 --> 00:45:37,000
OK

1182
00:45:37,000 --> 00:45:38,000
嗯

1183
00:45:38,000 --> 00:45:41,000
所以最开始那个就是电脑或者说打字机传入日本的时候

1184
00:45:41,000 --> 00:45:44,000
因为因为汉字的一些毕竟表达起来没有那么方便嘛

1185
00:45:44,000 --> 00:45:46,000
他们就说是不是选择更加

1186
00:45:46,000 --> 00:45:48,000
呃容易表达的这种假名的方式来写啊

1187
00:45:48,000 --> 00:45:49,000
嗯

1188
00:45:49,000 --> 00:45:51,000
因为假名是那表英文字嘛

1189
00:45:51,000 --> 00:45:52,000
对啊

1190
00:45:52,000 --> 00:45:54,000
所以在最早就是有电报的时候啊

1191
00:45:54,000 --> 00:45:56,000
还之类的至少要先把这个声音传过去嘛

1192
00:45:56,000 --> 00:45:58,000
就内容要传过去嘛

1193
00:45:58,000 --> 00:45:59,000
嗯

1194
00:45:59,000 --> 00:46:00,000
那正确的表迹法呢

1195
00:46:00,000 --> 00:46:02,000
那是其次的问题嘛

1196
00:46:02,000 --> 00:46:03,000
所以呢

1197
00:46:03,000 --> 00:46:05,000
就是他们就先先把假名给放上去

1198
00:46:05,000 --> 00:46:06,000
OK

1199
00:46:06,000 --> 00:46:07,000
那那有一个问题是这样

1200
00:46:07,000 --> 00:46:12,000
就是说如果说假设日文所有的日日文汉字都可以用假名的方式来写

1201
00:46:12,000 --> 00:46:16,000
那还有什么必要再接着写那些更复杂的方式呢

1202
00:46:16,000 --> 00:46:17,000
嗯

1203
00:46:17,000 --> 00:46:18,000
啊

1204
00:46:18,000 --> 00:46:19,000
这个好像用拼音写的

1205
00:46:19,000 --> 00:46:20,000
写中文啊

1206
00:46:20,000 --> 00:46:21,000
有奇异的

1207
00:46:21,000 --> 00:46:22,000
就很难读啊

1208
00:46:22,000 --> 00:46:24,000
就很难读有时候会有奇异

1209
00:46:24,000 --> 00:46:25,000
OK

1210
00:46:25,000 --> 00:46:26,000
明白明白

1211
00:46:26,000 --> 00:46:27,000
嗯

1212
00:46:27,000 --> 00:46:32,000
这但是问题主要是 real 这个问题是汉字一开始就是一个外来语言

1213
00:46:32,000 --> 00:46:33,000
对于日本人来说

1214
00:46:33,000 --> 00:46:36,000
他就在没有假名的时代

1215
00:46:36,000 --> 00:46:38,000
就或者假名这个词怎么来呢

1216
00:46:38,000 --> 00:46:42,000
就是因为日本人用汉字来代表他们固有语言的读音嘛

1217
00:46:42,000 --> 00:46:45,000
那所以反过来你可以说如果当初没有中国的话

1218
00:46:45,000 --> 00:46:48,000
那日本也可能今天是在用拉丁字母来表现嘛

1219
00:46:48,000 --> 00:46:50,000
拉丁字母来表现其固有语言的读音

1220
00:46:50,000 --> 00:46:51,000
或者像韩语那样

1221
00:46:51,000 --> 00:46:53,000
基本上说不是必须的

1222
00:46:53,000 --> 00:46:54,000
明白明白

1223
00:46:54,000 --> 00:46:55,000
啊对

1224
00:46:55,000 --> 00:46:56,000
嗯

1225
00:46:56,000 --> 00:46:57,000
但韩语走的是另外一条路

1226
00:46:57,000 --> 00:46:58,000
韩语是

1227
00:46:58,000 --> 00:46:59,000
他深造了一套

1228
00:46:59,000 --> 00:47:00,000
对

1229
00:47:00,000 --> 00:47:07,000
是民正音来来来去表表达其固有语言的读音

1230
00:47:07,000 --> 00:47:12,000
但问题韩语和日语最大问题就是他们有太多中文介词了

1231
00:47:12,000 --> 00:47:15,000
然后这个中文介词有可能是没有固有读音的

1232
00:47:15,000 --> 00:47:16,000
就没有训读的

1233
00:47:16,000 --> 00:47:17,000
你你但你

1234
00:47:17,000 --> 00:47:23,000
但你全靠印度的话就有可能产生没有汉字就一定会产生奇异的问题

1235
00:47:23,000 --> 00:47:24,000
对

1236
00:47:24,000 --> 00:47:25,000
啊

1237
00:47:25,000 --> 00:47:27,000
这个介是介东西的介

1238
00:47:27,000 --> 00:47:28,000
不是那个 proposition

1239
00:47:28,000 --> 00:47:30,000
那个介词

1240
00:47:30,000 --> 00:47:31,000
那个介词

1241
00:47:31,000 --> 00:47:32,000
是假借的借

1242
00:47:32,000 --> 00:47:33,000
嗯

1243
00:47:33,000 --> 00:47:34,000
而且呢

1244
00:47:34,000 --> 00:47:37,000
就日文的他的那个原因太简单了啊

1245
00:47:37,000 --> 00:47:38,000
因为有这五个原因

1246
00:47:38,000 --> 00:47:39,000
所以呢

1247
00:47:39,000 --> 00:47:40,000
他的音系越简单

1248
00:47:40,000 --> 00:47:42,000
他的同音词就越多

1249
00:47:42,000 --> 00:47:45,000
这比所以在日文里面他们还多

1250
00:47:45,000 --> 00:47:47,000
所以他们没有办法

1251
00:47:47,000 --> 00:47:48,000
废除汉字

1252
00:47:48,000 --> 00:47:49,000
ok

1253
00:47:49,000 --> 00:47:51,000
因为同音字实在是太多了

1254
00:47:51,000 --> 00:47:53,000
韩文呢还稍微好一点点

1255
00:47:53,000 --> 00:47:54,000
所以呢

1256
00:47:54,000 --> 00:47:58,000
现在就是朝鲜和韩国他们就尽量是不写汉字

1257
00:47:58,000 --> 00:47:59,000
嗯

1258
00:47:59,000 --> 00:48:00,000
虽然他们的词都是汉字词

1259
00:48:00,000 --> 00:48:02,000
但是他们可以尽量不写汉字

1260
00:48:02,000 --> 00:48:04,000
只有在会发发生奇异的时候

1261
00:48:04,000 --> 00:48:06,000
还有一些人名地名的时候

1262
00:48:06,000 --> 00:48:09,000
他们会把那个原来的那个汉字写出来

1263
00:48:09,000 --> 00:48:10,000
对

1264
00:48:10,000 --> 00:48:14,000
这就是为什么很多韩国人的人名一开始没出名之前和出名之后不一样了

1265
00:48:14,000 --> 00:48:16,000
就因为出名之后韩国人会站出来说哦

1266
00:48:16,000 --> 00:48:20,000
这个人的名字其实汉字写作什么什么

1267
00:48:20,000 --> 00:48:22,000
显得没有文化

1268
00:48:22,000 --> 00:48:23,000
还考了一下

1269
00:48:23,000 --> 00:48:25,000
日语好像也有这样的问题

1270
00:48:25,000 --> 00:48:28,000
就是有些人的名字没有汉字

1271
00:48:28,000 --> 00:48:29,000
只有假名

1272
00:48:29,000 --> 00:48:30,000
以前有什么

1273
00:48:30,000 --> 00:48:32,000
对

1274
00:48:32,000 --> 00:48:34,000
泽高惠里香

1275
00:48:34,000 --> 00:48:35,000
对

1276
00:48:35,000 --> 00:48:36,000
记得这么一个人

1277
00:48:36,000 --> 00:48:37,000
对

1278
00:48:37,000 --> 00:48:38,000
对

1279
00:48:38,000 --> 00:48:41,000
首先他的姓比较有意思

1280
00:48:41,000 --> 00:48:43,000
但是他的姓其实是汉字

1281
00:48:43,000 --> 00:48:45,000
就是日语里面就写了泽高两个字

1282
00:48:45,000 --> 00:48:49,000
然后惠里香是他刚出名的时候中国人给他翻的

1283
00:48:49,000 --> 00:48:51,000
后来他专门进入中文市场了

1284
00:48:51,000 --> 00:48:54,000
他的那个经纪人才出来证明说哦

1285
00:48:54,000 --> 00:48:59,000
这个人的这个日本人的汉字应该是泽高英龙华

1286
00:48:59,000 --> 00:49:06,000
英龙华是他专门为中国市场起的一个汉字

1287
00:49:06,000 --> 00:49:08,000
对他之前的这个名只有假名

1288
00:49:08,000 --> 00:49:11,000
就只有英没有字嘛

1289
00:49:11,000 --> 00:49:13,000
所以要用什么字嘛

1290
00:49:13,000 --> 00:49:14,000
OK

1291
00:49:14,000 --> 00:49:16,000
这个我们越扯越远了

1292
00:49:16,000 --> 00:49:17,000
赶快收回来

1293
00:49:17,000 --> 00:49:19,000
我们刚才说的是编码的问题

1294
00:49:19,000 --> 00:49:20,000
同学们

1295
00:49:20,000 --> 00:49:23,000
所以的 asky 有一个码

1296
00:49:23,000 --> 00:49:24,000
这上面有一个位

1297
00:49:24,000 --> 00:49:25,000
它是可以扩展的

1298
00:49:25,000 --> 00:49:26,000
说到这边

1299
00:49:26,000 --> 00:49:27,000
对

1300
00:49:27,000 --> 00:49:28,000
没有继续吗

1301
00:49:28,000 --> 00:49:29,000
好像

1302
00:49:29,000 --> 00:49:31,000
哈哈哈

1303
00:49:31,000 --> 00:49:33,000
讲到哪里了

1304
00:49:33,000 --> 00:49:34,000
对

1305
00:49:34,000 --> 00:49:35,000
哈哈哈

1306
00:49:35,000 --> 00:49:36,000
编码问题

1307
00:49:36,000 --> 00:49:37,000
刚才我们讲那个 asky

1308
00:49:37,000 --> 00:49:38,000
然后和他的扩展拉丁一嘛

1309
00:49:38,000 --> 00:49:39,000
就解决了一些

1310
00:49:39,000 --> 00:49:40,000
呃

1311
00:49:40,000 --> 00:49:42,000
拉丁语系的国家的常见的编码问题

1312
00:49:42,000 --> 00:49:44,000
但是遇到像不管是什么

1313
00:49:44,000 --> 00:49:45,000
就是中日韩

1314
00:49:45,000 --> 00:49:46,000
还有一些可能其他的

1315
00:49:46,000 --> 00:49:51,000
就大字大字符集的这种语言的时候就搞不定了嘛

1316
00:49:51,000 --> 00:49:53,000
所以在那个 unicode

1317
00:49:53,000 --> 00:49:56,000
就上次你单独单口的时候讲过那个事情啊

1318
00:49:56,000 --> 00:50:00,000
事实上之前就各个国家和地区还是有自己不同的标准的

1319
00:50:00,000 --> 00:50:01,000
比如说啊

1320
00:50:01,000 --> 00:50:03,000
中国所谓的这个 gb 国标系对吧

1321
00:50:03,000 --> 00:50:05,000
还有日本那个 js 多少号我忘了

1322
00:50:05,000 --> 00:50:06,000
啊

1323
00:50:06,000 --> 00:50:10,000
还有好像韩语一个什么 call 的什么 kor 什么什么标准的 ks

1324
00:50:10,000 --> 00:50:11,000
ok

1325
00:50:11,000 --> 00:50:13,000
就是就这这一套都是中文的

1326
00:50:13,000 --> 00:50:15,000
就是这这一套都是解决的同样一个问题

1327
00:50:15,000 --> 00:50:16,000
就是说把

1328
00:50:16,000 --> 00:50:17,000
呃

1329
00:50:17,000 --> 00:50:23,000
把一个国家的一些他们就比较标准的一套字符集映射成为一个数字

1330
00:50:23,000 --> 00:50:25,000
然后再把这个数字通过某一种方式

1331
00:50:25,000 --> 00:50:27,000
因为这个数字是抽象的一个数字嘛

1332
00:50:27,000 --> 00:50:28,000
就是 123456

1333
00:50:28,000 --> 00:50:32,000
然后再把这个数字编码成计算机能够识别的一个啊

1334
00:50:32,000 --> 00:50:33,000
beat pattern 对吧

1335
00:50:33,000 --> 00:50:35,000
二进制的一个一个一个表达

1336
00:50:35,000 --> 00:50:38,000
ok

1337
00:50:38,000 --> 00:50:39,000
呃

1338
00:50:39,000 --> 00:50:41,000
所以这也是一个编码的过程过程

1339
00:50:41,000 --> 00:50:42,000
没错对吧

1340
00:50:42,000 --> 00:50:43,000
所以还是从

1341
00:50:43,000 --> 00:50:44,000
而且就是当年嗯

1342
00:50:44,000 --> 00:50:46,000
当年就是各个国家不一样嘛

1343
00:50:46,000 --> 00:50:49,000
所以就编的那个编的号都不一样嘛

1344
00:50:49,000 --> 00:50:50,000
对啊

1345
00:50:50,000 --> 00:50:52,000
就当我们现在就现在在 windows 上还是有这个问题对吧

1346
00:50:52,000 --> 00:50:53,000
现在大家经常说哎

1347
00:50:53,000 --> 00:50:54,000
那个你用 mac 的话

1348
00:50:54,000 --> 00:50:57,000
windows 上面人传给你一个什么文本文件打开

1349
00:50:57,000 --> 00:50:58,000
怎么全是办嘛

1350
00:50:58,000 --> 00:51:08,000
就是因为就是你用 mac 内置的那个 zip 来解压一些呃那个 windows 上压出来的 zip 的时候

1351
00:51:08,000 --> 00:51:10,000
你会发现解出来都是落马

1352
00:51:10,000 --> 00:51:12,000
对这就是因为他就是他就是

1353
00:51:12,000 --> 00:51:20,000
像他们在原始的时候是可能是用的 gb 或者 gbkgb 2312 还有 gb 18030 这几个国标的方法来变

1354
00:51:20,000 --> 00:51:22,000
还有就是像港台台湾吧

1355
00:51:22,000 --> 00:51:23,000
台湾是 big 5 嘛

1356
00:51:23,000 --> 00:51:25,000
香港当初用什么

1357
00:51:25,000 --> 00:51:26,000
我现在不记得了

1358
00:51:26,000 --> 00:51:31,000
像我记得那个时候就是为了看一些繁体字的

1359
00:51:31,000 --> 00:51:35,000
文本好像要手动在网页上选取编码的时代

1360
00:51:35,000 --> 00:51:36,000
嗯

1361
00:51:36,000 --> 00:51:37,000
呃

1362
00:51:37,000 --> 00:51:40,000
香港和台湾用的那个编码还不一样

1363
00:51:40,000 --> 00:51:41,000
台湾是 big 5

1364
00:51:41,000 --> 00:51:42,000
台湾肯定是

1365
00:51:42,000 --> 00:51:44,000
台湾肯定用 big 5 嘛

1366
00:51:44,000 --> 00:51:45,000
香港用什么大五嘛

1367
00:51:45,000 --> 00:51:46,000
真的是大五嘛

1368
00:51:46,000 --> 00:51:47,000
嗯

1369
00:51:47,000 --> 00:51:48,000
看看香港在哪个

1370
00:51:48,000 --> 00:51:52,000
然后我我只记得香港有个什么大五的

1371
00:51:52,000 --> 00:51:54,000
Hong Kong SCS 嘛

1372
00:51:54,000 --> 00:51:55,000
就是他们自己扩展啊

1373
00:51:55,000 --> 00:51:56,000
对对对

1374
00:51:56,000 --> 00:51:58,000
没错

1375
00:51:58,000 --> 00:52:00,000
SCS 是一个字符集

1376
00:52:00,000 --> 00:52:02,000
但是编码应该还是用的 big 5

1377
00:52:02,000 --> 00:52:03,000
啊对没错

1378
00:52:03,000 --> 00:52:05,000
就是他在 big 5 的基础上

1379
00:52:05,000 --> 00:52:08,000
然后就加了一些他们就是香港一些

1380
00:52:08,000 --> 00:52:11,000
对应该港澳台基本都还就是曾经都是用 big 5 的嘛

1381
00:52:11,000 --> 00:52:13,000
就是曾经都是用 big 5

1382
00:52:13,000 --> 00:52:15,000
但是他们字符集各自有一套像

1383
00:52:15,000 --> 00:52:20,000
其实像那个澳门也有自己的一个 MAC 这样

1384
00:52:20,000 --> 00:52:21,000
哦

1385
00:52:21,000 --> 00:52:22,000
那个什么

1386
00:52:22,000 --> 00:52:23,000
OK

1387
00:52:23,000 --> 00:52:24,000
information system character set

1388
00:52:24,000 --> 00:52:27,000
就这个是相当混乱的一个状态嘛

1389
00:52:27,000 --> 00:52:30,000
然后大陆刚刚也有讲自己那条国标的体系

1390
00:52:30,000 --> 00:52:31,000
哎

1391
00:52:31,000 --> 00:52:34,000
后来是有一个所谓的 unicode cjk 统一的一个过程

1392
00:52:34,000 --> 00:52:35,000
统一的过程嘛

1393
00:52:35,000 --> 00:52:36,000
对

1394
00:52:36,000 --> 00:52:38,000
就是很高的 unification 对不对

1395
00:52:38,000 --> 00:52:39,000
嗯

1396
00:52:39,000 --> 00:52:40,000
这个

1397
00:52:40,000 --> 00:52:44,000
然后在那个 gb 我们自己对国内是用 gb 嘛

1398
00:52:44,000 --> 00:52:45,000
比如比如呃

1399
00:52:45,000 --> 00:52:49,000
当年我们是分低低低水准和嗯

1400
00:52:49,000 --> 00:52:51,000
就常用的第一级和第二级嘛

1401
00:52:51,000 --> 00:52:53,000
一级汉字二级汉字

1402
00:52:53,000 --> 00:52:58,000
一级汉字用音对用音序排的二级汉字用那个笔画

1403
00:52:58,000 --> 00:52:59,000
不手排的嘛

1404
00:52:59,000 --> 00:53:02,000
对啊所以肯定是从阿字开始排嘛

1405
00:53:02,000 --> 00:53:05,000
像阿姨的阿这个字在 gb 里面

1406
00:53:05,000 --> 00:53:08,000
嗯嗯在 gb 里面就是很前面嘛

1407
00:53:08,000 --> 00:53:10,000
就是汉字汉字区位的最前面

1408
00:53:10,000 --> 00:53:11,000
嗯

1409
00:53:11,000 --> 00:53:14,000
在什么什么 b 0 a 1 还是 a 2 嘛

1410
00:53:14,000 --> 00:53:16,000
就是从那个区位开始排的

1411
00:53:16,000 --> 00:53:17,000
但是呢

1412
00:53:17,000 --> 00:53:18,000
你说嗯

1413
00:53:18,000 --> 00:53:23,000
所以这个区就当年就还有区位区位码的输入法嘛

1414
00:53:23,000 --> 00:53:27,000
区位就你直接记那个字库里面的那个对字号

1415
00:53:27,000 --> 00:53:29,000
哇这个这个谁会去记这个呀

1416
00:53:29,000 --> 00:53:32,000
区位码我不知道反正区位码其实跟

1417
00:53:32,000 --> 00:53:35,000
跟什么四角号码输入法之类的有一批呢

1418
00:53:35,000 --> 00:53:38,000
就你你要是一个熟练的牌子工人的话呢

1419
00:53:38,000 --> 00:53:39,000
可能常用字的那个

1420
00:53:39,000 --> 00:53:45,000
数码在你脑子里面是可以建立起一对应的标准

1421
00:53:45,000 --> 00:53:47,000
区域码当年发电报的是不是用的这个方法

1422
00:53:47,000 --> 00:53:50,000
没有没有电报码是另外一个电话

1423
00:53:50,000 --> 00:53:54,000
区位码是完全就是按照 gb 的这个区位来算的

1424
00:53:54,000 --> 00:53:56,000
那个不致查是肯定肯定没有办法

1425
00:53:56,000 --> 00:53:59,000
因为本来因为这个编号编码就是变给计算机用的呀

1426
00:53:59,000 --> 00:54:00,000
不是给人看的呀

1427
00:54:00,000 --> 00:54:02,000
电报码是电报码发电报

1428
00:54:02,000 --> 00:54:04,000
但是邮局系统用那个电报的是电报码

1429
00:54:04,000 --> 00:54:05,000
ok

1430
00:54:05,000 --> 00:54:08,000
然后四角号码的话是根据那个汉字的

1431
00:54:08,000 --> 00:54:11,000
上下左右那四个角的那个笔画了

1432
00:54:11,000 --> 00:54:13,000
所以那个是直观的可以看的

1433
00:54:13,000 --> 00:54:15,000
四角号码是多少 make sense

1434
00:54:15,000 --> 00:54:16,000
你可以猜

1435
00:54:16,000 --> 00:54:19,000
但是区位码是你要没见过你就不知道的

1436
00:54:19,000 --> 00:54:21,000
就必须要一个表来查

1437
00:54:21,000 --> 00:54:24,000
就变的号是给给对给电脑去看的呀

1438
00:54:24,000 --> 00:54:25,000
不是给人看的呀

1439
00:54:25,000 --> 00:54:26,000
这个区位码

1440
00:54:26,000 --> 00:54:30,000
然后所以就同样的汉字的话

1441
00:54:30,000 --> 00:54:33,000
因为这比如说他可能在中国是常用的字

1442
00:54:33,000 --> 00:54:37,000
所以他中国给他在这个表里面在 gb 的表里面编了这样一个号

1443
00:54:37,000 --> 00:54:38,000
嗯哼

1444
00:54:38,000 --> 00:54:40,000
然后这边变成另外一个号

1445
00:54:40,000 --> 00:54:41,000
虽然是同样的汉字

1446
00:54:41,000 --> 00:54:43,000
比如说笔画一的一嘛一和嘛

1447
00:54:43,000 --> 00:54:44,000
这个一嘛

1448
00:54:44,000 --> 00:54:48,000
所以后来在做 unicode 的时候说叫全球大统一

1449
00:54:48,000 --> 00:54:49,000
大家都是大家庭嘛

1450
00:54:49,000 --> 00:54:51,000
那汉字本来就这么多

1451
00:54:51,000 --> 00:54:55,000
那为了节省马位干干脆的就能统一就统一了

1452
00:54:55,000 --> 00:54:56,000
所以呢在统一嘛

1453
00:54:56,000 --> 00:54:58,000
unicode 的时候呢

1454
00:54:58,000 --> 00:55:01,000
对于这个他们叫 cjkideograph

1455
00:55:01,000 --> 00:55:02,000
对吧

1456
00:55:02,000 --> 00:55:07,000
对 cjk 表意汉字表意符号

1457
00:55:07,000 --> 00:55:08,000
这个区的话呢

1458
00:55:08,000 --> 00:55:15,000
就尽量的就单年的就把这几这些这几个就是东亚系统的几个汉字的统一起来了

1459
00:55:15,000 --> 00:55:23,000
但是呢管这管这个叫包嗯这个叫有一个术语叫包容还是叫包设就是就是同样的汉认同原则吧

1460
00:55:23,000 --> 00:55:25,000
是认同原则吗

1461
00:55:25,000 --> 00:55:30,000
就是如果你国认为你国的这个字和我国的这个字是同一个字呢

1462
00:55:30,000 --> 00:55:32,000
这两个字就可以合在一起

1463
00:55:32,000 --> 00:55:33,000
嗯对对对

1464
00:55:33,000 --> 00:55:36,000
但是呢问题就是如果就是比如说像一体字东西嘛

1465
00:55:36,000 --> 00:55:39,000
在你你国的这个是分开来的话

1466
00:55:39,000 --> 00:55:41,000
那我收到 unicode 也必须得分开嘛

1467
00:55:41,000 --> 00:55:44,000
要不然就会有一个向后兼容不不行的问题嘛

1468
00:55:44,000 --> 00:55:45,000
对是这样

1469
00:55:45,000 --> 00:55:52,000
嗯所以就单年单年好像就在在那个基本文那个叫基本文平面

1470
00:55:52,000 --> 00:56:02,000
基本多元平面的这个低级的这个 cjk 统一表意符号里面的这个东西呢就是基本上差不多统起来了

1471
00:56:02,000 --> 00:56:05,000
但是问题就是统的那个规则呀就特别的不明确

1472
00:56:05,000 --> 00:56:06,000
有的该统的不同

1473
00:56:06,000 --> 00:56:08,000
有的该分的不分就是这样子

1474
00:56:08,000 --> 00:56:09,000
嗯

1475
00:56:09,000 --> 00:56:11,000
哈哈哈哈

1476
00:56:11,000 --> 00:56:12,000
好哎

1477
00:56:12,000 --> 00:56:16,000
所以那现在比如说啊国内可能还是在用 gb 这套比较多

1478
00:56:16,000 --> 00:56:18,000
特别是在 windows 上面的平台上面啊

1479
00:56:18,000 --> 00:56:20,000
就在日本和韩国的话

1480
00:56:20,000 --> 00:56:23,000
现在用 unicode 编码的是一个常态吗

1481
00:56:23,000 --> 00:56:26,000
还是说还是在沿用自己老的那个什么 js 那套标准

1482
00:56:26,000 --> 00:56:28,000
windows 还是用 gc 呀

1483
00:56:28,000 --> 00:56:29,000
啊还是这样子

1484
00:56:29,000 --> 00:56:32,000
就只有在 mac 上面是用的 unicode

1485
00:56:32,000 --> 00:56:33,000
嗯

1486
00:56:33,000 --> 00:56:34,000
呃首先

1487
00:56:34,000 --> 00:56:35,000
嗯

1488
00:56:35,000 --> 00:56:36,000
那 os 10 的话啊

1489
00:56:36,000 --> 00:56:39,000
从最开始 os 10 一开始诞生就是 unicode 的内核

1490
00:56:39,000 --> 00:56:40,000
对吧

1491
00:56:40,000 --> 00:56:41,000
呃那这有两码事

1492
00:56:41,000 --> 00:56:44,000
第一个就是说因为 windows 上面其实也是 unicode 内核的

1493
00:56:44,000 --> 00:56:47,000
就他只是说在习惯保存成文件的时候

1494
00:56:47,000 --> 00:56:48,000
他有一个编码的过程嘛

1495
00:56:48,000 --> 00:56:52,000
这样的话在那个起码在中文的 windows 版本

1496
00:56:52,000 --> 00:56:56,000
现在默认的应该还是用的那个就是国标那套标准 gbk 吧

1497
00:56:56,000 --> 00:56:59,000
然后你可以选择手工存成 utf 8

1498
00:56:59,000 --> 00:57:02,000
然后他会有一个那个 bomb 在前面啊

1499
00:57:02,000 --> 00:57:03,000
就标识这个东西嘛

1500
00:57:03,000 --> 00:57:05,000
但是我不知道在日日本的话

1501
00:57:05,000 --> 00:57:10,000
这目前大家用的常用的操作系统里面是怎么一个一个做法

1502
00:57:10,000 --> 00:57:11,000
嗯

1503
00:57:11,000 --> 00:57:14,000
如果我们我虽然也不怎么用 windows

1504
00:57:14,000 --> 00:57:15,000
但是嗯

1505
00:57:15,000 --> 00:57:19,000
据我印象的话好像也是就是在他们也是默认 gc

1506
00:57:19,000 --> 00:57:20,000
ok

1507
00:57:20,000 --> 00:57:21,000
就还是就保留的

1508
00:57:21,000 --> 00:57:24,000
就是在 unicode 的这个 unification 之前的做法保留下来了吗

1509
00:57:24,000 --> 00:57:26,000
对的嗯

1510
00:57:26,000 --> 00:57:31,000
那其实就是为什么你在 windows 里面要选择一个所谓 code 配置嘛

1511
00:57:31,000 --> 00:57:32,000
就你一定要在

1512
00:57:32,000 --> 00:57:33,000
对

1513
00:57:33,000 --> 00:57:34,000
马业

1514
00:57:34,000 --> 00:57:38,000
你要在就你要在但当你想要玩日文游戏的时候

1515
00:57:38,000 --> 00:57:40,000
你可以把 code 配置选成日文

1516
00:57:40,000 --> 00:57:45,000
然后这样日文游戏至少正常游戏的时候显示出来是正常的

1517
00:57:45,000 --> 00:57:48,000
但其他操作用的其他部分就全毁了

1518
00:57:49,000 --> 00:57:52,000
对其实就是按 windows 那个比较典型的

1519
00:57:52,000 --> 00:57:54,000
他那个记事本的那个软件

1520
00:57:54,000 --> 00:57:56,000
对对就那个成人编辑器

1521
00:57:56,000 --> 00:57:59,000
对他那个他有一个编码叫 nc 嘛

1522
00:57:59,000 --> 00:58:02,000
就是 american 那个什么 national 就国家标准的

1523
00:58:02,000 --> 00:58:05,000
但其实他除了 ask 2 之外

1524
00:58:05,000 --> 00:58:06,000
那个应该念怎么念

1525
00:58:06,000 --> 00:58:08,000
asky 除了 asky 之外

1526
00:58:08,000 --> 00:58:15,000
对其他的其实他都是一个根据你这个操作系统原地是来帮你自动选一个 code 配置

1527
00:58:15,000 --> 00:58:16,000
没错

1528
00:58:16,000 --> 00:58:17,000
应该是这样的

1529
00:58:17,000 --> 00:58:18,000
没错没错

1530
00:58:18,000 --> 00:58:19,000
所以那个特别坑嘛

1531
00:58:19,000 --> 00:58:20,000
那个特别坑嘛

1532
00:58:20,000 --> 00:58:21,000
对所以其实啊

1533
00:58:21,000 --> 00:58:22,000
对其实 windows 的记事本还挺坑的

1534
00:58:22,000 --> 00:58:26,000
对啊那就是各种那种大家都说打不开是乱码的一个根源问题

1535
00:58:26,000 --> 00:58:30,000
对啊还有那种换行服的问题嘛

1536
00:58:30,000 --> 00:58:31,000
啊对对对也是

1537
00:58:31,000 --> 00:58:33,000
对回车服和换行服

1538
00:58:33,000 --> 00:58:36,000
windows 记事本是不能区分这个

1539
00:58:36,000 --> 00:58:42,000
两个回单一一个 return 和 windows 所谓 catch return new line

1540
00:58:42,000 --> 00:58:45,000
对换行和回车是不一样的嘛

1541
00:58:45,000 --> 00:58:47,000
return 和 enter 嘛

1542
00:58:47,000 --> 00:58:49,000
对对他那个 bomb 也也挺烦的

1543
00:58:49,000 --> 00:58:50,000
其实

1544
00:58:54,000 --> 00:58:55,000
呃

1545
00:58:55,000 --> 00:58:57,000
那我们说到 unicode 了是吧

1546
00:58:57,000 --> 00:58:59,000
对对我们已经说到 unicode 了

1547
00:58:59,000 --> 00:59:01,000
然后当年就是

1548
00:59:01,000 --> 00:59:05,000
有因为汉字的那个有很多一体字

1549
00:59:05,000 --> 00:59:09,000
那当年在做这个 cjk 统一汉字的时候呢

1550
00:59:09,000 --> 00:59:12,000
就因为各个国家的这个标准不一样

1551
00:59:12,000 --> 00:59:16,000
又为了抢后兼容导致当年在做那个标准的时候呢

1552
00:59:16,000 --> 00:59:20,000
这个收和不收统一有没有统起来是非常混乱嘛

1553
00:59:20,000 --> 00:59:25,000
所以到后面在这个 cjk 统一汉字扩展 abcde

1554
00:59:25,000 --> 00:59:27,000
现在已经到 e 区了是吧

1555
00:59:27,000 --> 00:59:29,000
好像是我最近没有怎么去追

1556
00:59:29,000 --> 00:59:30,000
嗯

1557
00:59:30,000 --> 00:59:33,000
有你口的这个 consulting 的新闻

1558
00:59:33,000 --> 00:59:35,000
但他们一直在搞大型的

1559
00:59:35,000 --> 00:59:39,000
对台湾是翻译成什么家宜秉丁物嘛

1560
00:59:39,000 --> 00:59:40,000
就是扩展

1561
00:59:40,000 --> 00:59:41,000
嗯

1562
00:59:41,000 --> 00:59:42,000
嗯

1563
00:59:42,000 --> 00:59:43,000
说法不一样而已

1564
00:59:43,000 --> 00:59:45,000
对然后就是后面就一直都在补

1565
00:59:45,000 --> 00:59:50,000
而且他们要不停的补要保又要保证向前面的那个兼容性的问题嘛

1566
00:59:50,000 --> 00:59:52,000
所以后面就不断的叠加

1567
00:59:52,000 --> 00:59:58,000
所以在日本在 unicode 里面现在就搞的这个一体字的处理非常非常的复杂

1568
00:59:58,000 --> 00:59:59,000
嗯

1569
01:00:00,000 --> 01:00:09,000
有没有有没有发生现在有没有发生一个字在 unicode 里面有多个码点的状的情况

1570
01:00:09,000 --> 01:00:10,000
嗯

1571
01:00:10,000 --> 01:00:12,000
首先说什么叫一个字

1572
01:00:12,000 --> 01:00:14,000
因为同一个字的不一样

1573
01:00:14,000 --> 01:00:17,000
比如说对嗯

1574
01:00:17,000 --> 01:00:18,000
呃

1575
01:00:18,000 --> 01:00:21,000
像比如这个会发生很多很很乱的事情啊

1576
01:00:21,000 --> 01:00:24,000
比如说像那个强调的强

1577
01:00:24,000 --> 01:00:25,000
嗯

1578
01:00:25,000 --> 01:00:27,000
就是右边是虽然的

1579
01:00:27,000 --> 01:00:29,000
所以右上面是个口嘛

1580
01:00:29,000 --> 01:00:30,000
嗯

1581
01:00:30,000 --> 01:00:36,000
然后日本的这边标准的字型呢是是写成那个吧撇折点

1582
01:00:36,000 --> 01:00:38,000
OK

1583
01:00:38,000 --> 01:00:39,000
对啊

1584
01:00:39,000 --> 01:00:40,000
但是嗯

1585
01:00:40,000 --> 01:00:44,000
这两个关系在中国是正体字和一体字的关系

1586
01:00:44,000 --> 01:00:46,000
然后我们不用撇折点

1587
01:00:46,000 --> 01:00:48,000
我们是写成口啊

1588
01:00:48,000 --> 01:00:49,000
嗯

1589
01:00:49,000 --> 01:00:55,000
但是日本呢它是撇折点的那个字型它是是常用汉字的标准字型

1590
01:00:55,000 --> 01:00:56,000
然后写成口呢

1591
01:00:56,000 --> 01:00:59,000
日本有写日本就完全没有写成口这种这种遍体嘛

1592
01:00:59,000 --> 01:01:03,000
写成口呢是他们的一体字

1593
01:01:03,000 --> 01:01:04,000
嗯

1594
01:01:04,000 --> 01:01:05,000
嗯

1595
01:01:05,000 --> 01:01:07,000
那那这个然后还好就是那怎么办

1596
01:01:07,000 --> 01:01:12,000
但是还好的是那还好因为在 unicode 里面这两个字分别有码位

1597
01:01:12,000 --> 01:01:14,000
对这其实就是两个两个码位

1598
01:01:14,000 --> 01:01:15,000
所以呢

1599
01:01:15,000 --> 01:01:16,000
啊

1600
01:01:16,000 --> 01:01:20,000
这这对于这一对字的处理的话是还好是因为有不同的码位

1601
01:01:20,000 --> 01:01:24,000
那我是只要给它分成不同的编码给它编了不同的编码了

1602
01:01:24,000 --> 01:01:27,000
所以呢我只要正确的输入这个码的话

1603
01:01:27,000 --> 01:01:28,000
呃

1604
01:01:28,000 --> 01:01:30,000
你就会呃显示这样的字

1605
01:01:30,000 --> 01:01:38,000
这个是我们要说到后面就是那个字体公司它在在映射的时候映射对的时候就会这样

1606
01:01:38,000 --> 01:01:39,000
嗯

1607
01:01:39,000 --> 01:01:40,000
ok

1608
01:01:40,000 --> 01:01:41,000
如果映如果映射不对的话

1609
01:01:41,000 --> 01:01:44,000
字体公司它有时候它它映射错了

1610
01:01:44,000 --> 01:01:48,000
就中文字体因为中文字体优先是那个口字盘的那个字型嘛

1611
01:01:48,000 --> 01:01:49,000
对

1612
01:01:49,000 --> 01:01:51,000
日文字体会优先那个撇撇点

1613
01:01:51,000 --> 01:01:53,000
呃撇点撇折点的那个字型嘛

1614
01:01:53,000 --> 01:01:56,000
如果他们在这个码位上有个弄错了的话

1615
01:01:56,000 --> 01:01:57,000
在换字换字体的时候也会有这个字体的那个字型嘛

1616
01:01:57,000 --> 01:01:59,000
换字体的时候也会出问题

1617
01:01:59,000 --> 01:02:00,000
啊

1618
01:02:00,000 --> 01:02:06,000
不过这种概率还蛮小的比较大的问题主要是出在输入法给你优先推荐的那个字上

1619
01:02:06,000 --> 01:02:07,000
对你看起来是一样

1620
01:02:07,000 --> 01:02:11,000
但是它是其实你做那个比较的话它两个不同的字嘛

1621
01:02:11,000 --> 01:02:13,000
不同的呃 capture

1622
01:02:13,000 --> 01:02:14,000
嗯

1623
01:02:14,000 --> 01:02:17,000
所以这所以就刚才说到这又是一个不同的层次了

1624
01:02:17,000 --> 01:02:19,000
首先我们是要输入法嘛

1625
01:02:19,000 --> 01:02:26,000
我们从键盘里面打的打进去的那个键位以后要经过输入法的转换换成这个文字的编码

1626
01:02:26,000 --> 01:02:28,000
那这时候换的时候有没有换对

1627
01:02:28,000 --> 01:02:29,000
嗯

1628
01:02:29,000 --> 01:02:32,000
有的时候输入因为输入法特别坑嘛

1629
01:02:32,000 --> 01:02:33,000
有时候他换就跟根本就给他换错掉了

1630
01:02:33,000 --> 01:02:34,000
嗯

1631
01:02:34,000 --> 01:02:40,000
然后操作系统收到这个编码以后他再去拿那个 font 文件

1632
01:02:40,000 --> 01:02:44,000
拿字体文件去调用来显示那个最后要显示那个图形嘛

1633
01:02:44,000 --> 01:02:45,000
那个字型

1634
01:02:45,000 --> 01:02:46,000
对

1635
01:02:46,000 --> 01:02:47,000
嗯

1636
01:02:47,000 --> 01:02:48,000
那那个 font 的那个 mapping 如果又错了的话

1637
01:02:48,000 --> 01:02:50,000
它显示又是一个错的东西

1638
01:02:50,000 --> 01:02:52,000
所以这个有好多层次的

1639
01:02:53,000 --> 01:02:55,000
好多坑啊果然是

1640
01:02:56,000 --> 01:02:59,000
所以我们要把从头到尾再说一遍

1641
01:02:59,000 --> 01:03:00,000
所以现在就好不容易是

1642
01:03:00,000 --> 01:03:01,000
对啊

1643
01:03:01,000 --> 01:03:02,000
我们刚才跳过来

1644
01:03:02,000 --> 01:03:04,000
那输入法应该说一下

1645
01:03:04,000 --> 01:03:08,000
输入法这个层面

1646
01:03:08,000 --> 01:03:13,000
其实跟编码没有太多的关联

1647
01:03:13,000 --> 01:03:15,000
输入法本身是一个

1648
01:03:15,000 --> 01:03:18,000
把你输入的字符

1649
01:03:18,000 --> 01:03:19,000
按照某种规则

1650
01:03:19,000 --> 01:03:21,000
转化为汉字的过程

1651
01:03:21,000 --> 01:03:23,000
就我们假设在讨论的是汉字输入法

1652
01:03:23,000 --> 01:03:26,000
当然日语其实也有输入法这个概念

1653
01:03:26,000 --> 01:03:26,000
但是

1654
01:03:26,000 --> 01:03:30,000
全都考的话

1655
01:03:30,000 --> 01:03:31,000
其实是比较复杂的

1656
01:03:31,000 --> 01:03:34,000
输入法本身其实是一个

1657
01:03:34,000 --> 01:03:40,000
和编码没有太多的关联的过程

1658
01:03:40,000 --> 01:03:43,000
它做的唯一的事情就是把你输入的

1659
01:03:43,000 --> 01:03:46,000
甚至很多时候输入法工作的层面

1660
01:03:46,000 --> 01:03:49,000
是在已经输入的字符的层面

1661
01:03:49,000 --> 01:03:52,000
而和下面的按键是无关的

1662
01:03:52,000 --> 01:03:54,000
当然在 Linux 上面

1663
01:03:54,000 --> 01:03:56,000
你是可以说这个输入法

1664
01:03:56,000 --> 01:03:56,000
这个输入法

1665
01:03:56,000 --> 01:03:56,000
这个输入法

1666
01:03:56,000 --> 01:04:00,000
就有些输入法是工作在那个扫描码层面上的

1667
01:04:00,000 --> 01:04:03,000
你可以说这个输入法直接去

1668
01:04:05,000 --> 01:04:09,000
管理键盘上面给过来的扫描码

1669
01:04:09,000 --> 01:04:14,000
而不是先等待操作系统把扫描码已经转换为字符

1670
01:04:14,000 --> 01:04:16,000
然后去处理字符

1671
01:04:16,000 --> 01:04:19,000
然后其实就是一个巨大的规则库嘛

1672
01:04:19,000 --> 01:04:21,000
就比如说规则库最常见

1673
01:04:21,000 --> 01:04:23,000
最常用的就是拼音规则库

1674
01:04:23,000 --> 01:04:26,000
然后你输入某些特定的拼音

1675
01:04:26,000 --> 01:04:27,000
会得到一个汉字

1676
01:04:27,000 --> 01:04:31,000
输入法这个坑要开嘛

1677
01:04:31,000 --> 01:04:33,000
我们可以介绍各种各样的输入法

1678
01:04:33,000 --> 01:04:34,000
什么一行码呀

1679
01:04:34,000 --> 01:04:36,000
双拼啊

1680
01:04:36,000 --> 01:04:38,000
刚才说的无比自行

1681
01:04:38,000 --> 01:04:41,000
我觉得从广义上来说

1682
01:04:41,000 --> 01:04:44,000
输入法也可以视作一套编码系统

1683
01:04:44,000 --> 01:04:47,000
但是它跟我们所谓的这个计算机字符编码

1684
01:04:47,000 --> 01:04:49,000
这个狭义的编码是不是一回事

1685
01:04:49,000 --> 01:04:54,000
字符编码就不一样

1686
01:04:54,000 --> 01:04:54,000
对

1687
01:04:54,000 --> 01:04:56,000
输入法其实目前最爱的输入法是这个输入法

1688
01:04:56,000 --> 01:04:59,000
最爱的问题就是拼音输入法很有可能是一个动态的编码系统

1689
01:04:59,000 --> 01:05:05,000
就是你每次按键的次完全一样的按键次序输出

1690
01:05:05,000 --> 01:05:07,000
得出来的这个字可能是不一样的

1691
01:05:07,000 --> 01:05:08,000
嗯嗯嗯

1692
01:05:08,000 --> 01:05:10,000
或者说它是一套检索系统

1693
01:05:10,000 --> 01:05:12,000
它能帮你更快的找到你想要的那个字

1694
01:05:13,000 --> 01:05:13,000
没错

1695
01:05:13,000 --> 01:05:15,000
它是一个

1696
01:05:15,000 --> 01:05:16,000
怎样搜索嘛

1697
01:05:16,000 --> 01:05:16,000
编码和简

1698
01:05:16,000 --> 01:05:17,000
对

1699
01:05:17,000 --> 01:05:20,000
当然有些人就因此特别喜欢什么

1700
01:05:20,000 --> 01:05:21,000
我就问了四个人

1701
01:05:21,000 --> 01:05:22,000
就是智能 ABC 输入法

1702
01:05:22,000 --> 01:05:24,000
就是你不管打多少次

1703
01:05:24,000 --> 01:05:25,000
他没有高频线件

1704
01:05:25,000 --> 01:05:28,000
那个功能就是你你打什么知道的

1705
01:05:28,000 --> 01:05:35,000
知那个我以前在第二月永远永远在你每次输入一模一样的

1706
01:05:37,000 --> 01:05:37,000
对

1707
01:05:37,000 --> 01:05:40,000
所以这个是一个叫磁频调整嘛

1708
01:05:40,000 --> 01:05:41,000
就是会根据你输入的

1709
01:05:41,000 --> 01:05:43,000
这边调整可以关掉吧

1710
01:05:43,000 --> 01:05:43,000
对吧

1711
01:05:43,000 --> 01:05:45,000
现在好像都可以关掉的

1712
01:05:45,000 --> 01:05:46,000
可以关掉吧

1713
01:05:46,000 --> 01:05:48,000
其实所以他永远都在那个位置上

1714
01:05:48,000 --> 01:05:49,000
其实挺好的

1715
01:05:49,000 --> 01:05:51,000
像一项有些同学

1716
01:05:51,000 --> 01:05:53,000
他的名字都因为是很复杂吧

1717
01:05:53,000 --> 01:05:55,000
然后就经常在后面告诉你他就经常说啊

1718
01:05:55,000 --> 01:05:55,000
第二排

1719
01:05:55,000 --> 01:05:55,000
第五排

1720
01:05:55,000 --> 01:06:03,000
对你就要翻对对对你 N 第五 N 五页的第六个形象就是什么什么什么的对对对这样体验也也蛮好

1721
01:06:03,000 --> 01:06:05,000
其实但那个基本上是在就是这什么呢

1722
01:06:05,000 --> 01:06:08,000
联机时代之前出现的这种情况

1723
01:06:08,000 --> 01:06:09,000
那现在的话

1724
01:06:09,000 --> 01:06:11,000
我看市面上的大部分输入法

1725
01:06:11,000 --> 01:06:13,000
他除了有这个磁频调整这个选项之外

1726
01:06:13,000 --> 01:06:16,000
他有一个所谓的这个这个词汇库的问题

1727
01:06:16,000 --> 01:06:18,000
而且他不是一个单机的吗

1728
01:06:18,000 --> 01:06:19,000
他是一个联机的

1729
01:06:19,000 --> 01:06:24,000
比如说像我甚至留意到现在那个苹果自带那个拼音行都有这个都有这个东西

1730
01:06:24,000 --> 01:06:25,000
就是你打一针

1731
01:06:25,000 --> 01:06:25,000
你觉得

1732
01:06:25,000 --> 01:06:27,000
那你去流行词汇

1733
01:06:27,000 --> 01:06:29,000
他会自动的会定期更新出来

1734
01:06:29,000 --> 01:06:32,000
还有像什么搜狗书法这种云词

1735
01:06:32,000 --> 01:06:44,000
对这种所有的云词库就是他可以甚至说实时的告诉你说你本来打这个比如说 ABCD 组合出来一个一个拼音的字别人之前可能都没有可能过了一天发现怎么有人说这个东西

1736
01:06:44,000 --> 01:06:46,000
因为是有大量的人打 ABCD

1737
01:06:46,000 --> 01:06:48,000
然后指向了某一个特定的一个词组

1738
01:06:49,000 --> 01:06:50,000
红红火火

1739
01:06:50,000 --> 01:06:51,000
恍恍惚惚

1740
01:06:51,000 --> 01:06:54,000
哈哈哈

1741
01:06:54,000 --> 01:06:55,000
就这个

1742
01:06:55,000 --> 01:06:55,000
这算是

1743
01:06:55,000 --> 01:06:58,000
因为输入法而被创造出来的词汇

1744
01:06:58,000 --> 01:07:00,000
对的

1745
01:07:00,000 --> 01:07:01,000
兰州烧饼

1746
01:07:01,000 --> 01:07:03,000
反过来的

1747
01:07:03,000 --> 01:07:03,000
兰州烧饼

1748
01:07:03,000 --> 01:07:07,000
这是什么梗

1749
01:07:07,000 --> 01:07:08,000
你不知道这个梗吗

1750
01:07:08,000 --> 01:07:09,000
就是楼主

1751
01:07:09,000 --> 01:07:12,000
在论坛时代

1752
01:07:12,000 --> 01:07:14,000
对

1753
01:07:14,000 --> 01:07:17,000
你打 LGSB

1754
01:07:17,000 --> 01:07:19,000
然后如果你不切换输入法的话

1755
01:07:19,000 --> 01:07:21,000
那出来的就是兰州烧饼四个字

1756
01:07:21,000 --> 01:07:21,000
然后

1757
01:07:21,000 --> 01:07:24,000
兰州有烧饼吗

1758
01:07:24,000 --> 01:07:25,000
对

1759
01:07:25,000 --> 01:07:25,000
对

1760
01:07:25,000 --> 01:07:25,000
对

1761
01:07:25,000 --> 01:07:25,000
对

1762
01:07:25,000 --> 01:07:25,000
对

1763
01:07:25,000 --> 01:07:25,000
对

1764
01:07:25,000 --> 01:07:25,000
对

1765
01:07:25,000 --> 01:07:25,000
对

1766
01:07:25,000 --> 01:07:25,000
对

1767
01:07:25,000 --> 01:07:25,000
对

1768
01:07:25,000 --> 01:07:25,000
对

1769
01:07:25,000 --> 01:07:25,000
对

1770
01:07:25,000 --> 01:07:25,000
对

1771
01:07:25,000 --> 01:07:25,000
对

1772
01:07:25,000 --> 01:07:25,000
对

1773
01:07:25,000 --> 01:07:25,000
对

1774
01:07:25,000 --> 01:07:25,000
对

1776
01:07:55,000 --> 01:07:59,000
,

1777
01:07:59,000 --> 01:07:59,000
对

1778
01:07:59,000 --> 01:07:59,000
对

1779
01:07:59,000 --> 01:07:59,000
对

1780
01:07:59,000 --> 01:07:59,000
对

1781
01:07:59,000 --> 01:07:59,000
对

1782
01:07:59,000 --> 01:07:59,000
对

1783
01:07:59,000 --> 01:08:00,000
对

1784
01:08:00,000 --> 01:08:00,000
对

1785
01:08:00,000 --> 01:08:00,000
对

1786
01:08:00,000 --> 01:08:00,000
对

1787
01:08:00,000 --> 01:08:00,000
对

1788
01:08:00,000 --> 01:08:01,000
又是一个大

1789
01:08:01,000 --> 01:08:01,000
很大

1790
01:08:01,000 --> 01:08:02,000
坎多拉盒子

1791
01:08:02,000 --> 01:08:06,000
所以我一直想知道

1792
01:08:06,000 --> 01:08:08,000
这个词在英文世界

1793
01:08:08,000 --> 01:08:10,000
最通用的念法是怎么念

1794
01:08:10,000 --> 01:08:11,000
是那 Emoji 吧

1795
01:08:11,000 --> 01:08:12,000
对

1796
01:08:12,000 --> 01:08:14,000
但我知道它在英文世界

1797
01:08:14,000 --> 01:08:15,000
其实应该是

1798
01:08:15,000 --> 01:08:15,000
是日语的吧

1799
01:08:15,000 --> 01:08:17,000
反正日语叫 Emoji

1800
01:08:18,000 --> 01:08:19,000
对啊

1801
01:08:19,000 --> 01:08:21,000
有很多人念成 Emoji

1802
01:08:21,000 --> 01:08:22,000
这个我是

1803
01:08:22,000 --> 01:08:23,000
可以

1804
01:08:23,000 --> 01:08:24,000
天哪

1805
01:08:24,000 --> 01:08:24,000
Emoji

1806
01:08:24,000 --> 01:08:25,000
Emoji 就是

1807
01:08:25,000 --> 01:08:26,000
会文字

1808
01:08:26,000 --> 01:08:27,000
它写成中文

1809
01:08:27,000 --> 01:08:28,000
就写成会文字

1810
01:08:28,000 --> 01:08:30,000
会就是话的意思

1811
01:08:30,000 --> 01:08:32,000
现在汉字叫

1812
01:08:32,000 --> 01:08:33,000
会文字

1813
01:08:33,000 --> 01:08:33,000
OK

1814
01:08:33,000 --> 01:08:33,000
对

1815
01:08:33,000 --> 01:08:34,000
moji 就是文字

1816
01:08:34,000 --> 01:08:35,000
这两个字

1817
01:08:35,000 --> 01:08:36,000
对

1818
01:08:36,000 --> 01:08:37,000
moji 就是会

1819
01:08:37,000 --> 01:08:40,000
就是话的意思

1820
01:08:40,000 --> 01:08:40,000
对

1821
01:08:40,000 --> 01:08:42,000
会

1822
01:08:42,000 --> 01:08:44,000
会话的会

1823
01:08:44,000 --> 01:08:44,000
话

1824
01:08:44,000 --> 01:08:46,000
所以它其实是一个话

1825
01:08:46,000 --> 01:08:47,000
所以会文字说吧

1826
01:08:47,000 --> 01:08:49,000
天天就是象形文字吗

1827
01:08:49,000 --> 01:08:50,000
不对

1828
01:08:50,000 --> 01:08:51,000
在日里面有两个词

1829
01:08:51,000 --> 01:08:52,000
一个叫 emoji

1830
01:08:52,000 --> 01:08:54,000
一个叫 kaomoji

1831
01:08:54,000 --> 01:08:55,000
kao 是言文

1832
01:08:55,000 --> 01:08:59,000
就是用字符来画出一个人的脸

1833
01:08:59,000 --> 01:09:00,000
对对对

1834
01:09:00,000 --> 01:09:00,000
对

1835
01:09:00,000 --> 01:09:00,000
对

1836
01:09:00,000 --> 01:09:02,000
就是那个什么给人跪了那种

1837
01:09:02,000 --> 01:09:03,000
那个应该叫 emoji

1838
01:09:03,000 --> 01:09:04,000
对

1839
01:09:04,000 --> 01:09:04,000
比如说 ORZ

1840
01:09:04,000 --> 01:09:05,000
对对对

1841
01:09:05,000 --> 01:09:07,000
所以有两个嘛

1842
01:09:07,000 --> 01:09:08,000
反正在日语里面

1843
01:09:08,000 --> 01:09:09,000
emoji 它是一个 e

1844
01:09:09,000 --> 01:09:10,000
它是一个话

1845
01:09:10,000 --> 01:09:10,000
OK

1846
01:09:10,000 --> 01:09:12,000
会文字是一个话

1847
01:09:12,000 --> 01:09:14,000
但是 kaomoji 它是一个文字

1848
01:09:14,000 --> 01:09:17,000
它是用字符组成的一个

1849
01:09:17,000 --> 01:09:18,000
对对对

1850
01:09:18,000 --> 01:09:18,000
一个图形嘛

1851
01:09:18,000 --> 01:09:20,000
它是用文字来表达一个表情

1852
01:09:21,000 --> 01:09:22,000
对

1853
01:09:22,000 --> 01:09:23,000
但是这个东西的话

1854
01:09:23,000 --> 01:09:25,000
其实最早呢

1855
01:09:25,000 --> 01:09:25,000
是从

1856
01:09:25,000 --> 01:09:26,000
英文世界过来的嘛

1857
01:09:26,000 --> 01:09:27,000
就 asky art

1858
01:09:27,000 --> 01:09:29,000
对 asky art

1859
01:09:29,000 --> 01:09:29,000
对吧

1860
01:09:29,000 --> 01:09:31,000
一个冒号

1861
01:09:31,000 --> 01:09:32,000
一个冒号

1862
01:09:32,000 --> 01:09:32,000
一个又跨胡

1863
01:09:32,000 --> 01:09:34,000
就是一个横过来的笑脸嘛

1864
01:09:34,000 --> 01:09:34,000
对吧

1865
01:09:34,000 --> 01:09:36,000
这个是最早最早的一个

1866
01:09:36,000 --> 01:09:39,000
然后这个在日语的是叫 kaomoji

1867
01:09:39,000 --> 01:09:39,000
然后呢

1868
01:09:39,000 --> 01:09:42,000
西方的他们那个都是横过来的嘛

1869
01:09:42,000 --> 01:09:44,000
那东亚的这个言文字

1870
01:09:44,000 --> 01:09:45,000
就是就是正

1871
01:09:45,000 --> 01:09:46,000
我们看的就是正常位置嘛

1872
01:09:46,000 --> 01:09:47,000
就比如说打

1873
01:09:47,000 --> 01:09:49,000
打打两个那个

1874
01:09:49,000 --> 01:09:50,000
那个上仙

1875
01:09:50,000 --> 01:09:51,000
那个符号的话

1876
01:09:51,000 --> 01:09:51,000
cap

1877
01:09:51,000 --> 01:09:54,000
那个那个叫什么呀

1878
01:09:54,000 --> 01:09:54,000
就叫 cap

1879
01:09:54,000 --> 01:09:55,000
对

1880
01:09:55,000 --> 01:09:56,000
上尖号

1881
01:09:56,000 --> 01:09:57,000
对两个上尖的话

1882
01:09:57,000 --> 01:09:58,000
就是两个笑脸嘛

1883
01:09:58,000 --> 01:09:59,000
嗯嗯

1884
01:09:59,000 --> 01:10:01,000
好像叫什么 circle flex

1885
01:10:01,000 --> 01:10:03,000
对那个是言文字

1886
01:10:03,000 --> 01:10:06,000
那言文字道其实它在对计算系统

1887
01:10:06,000 --> 01:10:07,000
它本来就是字符嘛

1888
01:10:07,000 --> 01:10:09,000
就是这种 asky art 嘛

1889
01:10:09,000 --> 01:10:10,000
所以这个的玩

1890
01:10:10,000 --> 01:10:11,000
就不用编码

1891
01:10:11,000 --> 01:10:12,000
它就可以显示出来

1892
01:10:12,000 --> 01:10:12,000
对对

1893
01:10:12,000 --> 01:10:13,000
但是 emoji 的话

1894
01:10:13,000 --> 01:10:14,000
它是一个画

1895
01:10:14,000 --> 01:10:15,000
所以呢

1896
01:10:15,000 --> 01:10:17,000
就必须要通过编码

1897
01:10:17,000 --> 01:10:18,000
给去编一下

1898
01:10:18,000 --> 01:10:21,000
然后再让电脑去调出这个东西出来

1899
01:10:21,000 --> 01:10:23,000
所以就就 emoji 就有两个问题啊

1900
01:10:23,000 --> 01:10:25,000
第一个就是它会在那个

1901
01:10:25,000 --> 01:10:27,000
表里面空出一些特定的东西

1902
01:10:27,000 --> 01:10:29,000
给这些这些图片嘛

1903
01:10:29,000 --> 01:10:31,000
这些小图片什么救护车啊

1904
01:10:31,000 --> 01:10:34,000
火箭啊西瓜飞机之类的这种

1905
01:10:34,000 --> 01:10:36,000
它会留一个这个这个一个点位

1906
01:10:36,000 --> 01:10:38,000
然后再说这个点位是什么意思

1907
01:10:38,000 --> 01:10:40,000
然后你再说对应的这个

1908
01:10:40,000 --> 01:10:40,000
是

1909
01:10:40,000 --> 01:10:43,000
emoji 是用字体来实现的吗

1910
01:10:43,000 --> 01:10:44,000
好像不是自己来实现

1911
01:10:44,000 --> 01:10:45,000
是的呀

1912
01:10:45,000 --> 01:10:45,000
哦

1913
01:10:45,000 --> 01:10:47,000
是

1914
01:10:47,000 --> 01:10:48,000
是的

1915
01:10:48,000 --> 01:10:49,000
所以而且就

1916
01:10:49,000 --> 01:10:52,000
而且这是一个像 apple color emoji

1917
01:10:52,000 --> 01:10:53,000
那个字母

1918
01:10:53,000 --> 01:10:53,000
这个字体

1919
01:10:53,000 --> 01:10:54,000
哦

1920
01:10:54,000 --> 01:10:55,000
它是彩色的字体

1921
01:10:55,000 --> 01:10:59,000
当年就是这也是一个字体技术的一个很重要一点

1922
01:10:59,000 --> 01:11:00,000
就是因为大家默认的话

1923
01:11:00,000 --> 01:11:01,000
那个字体就是黑白的嘛

1924
01:11:01,000 --> 01:11:04,000
就是一个它混的是一个轮廓嘛

1925
01:11:04,000 --> 01:11:04,000
outline

1926
01:11:04,000 --> 01:11:08,000
传统上字字体是一套传统上是一个

1927
01:11:08,000 --> 01:11:09,000
对嗯

1928
01:11:09,000 --> 01:11:12,000
就而且是黑白的就不几乎就不带这个颜色信息的

1929
01:11:12,000 --> 01:11:13,000
好

1930
01:11:13,000 --> 01:11:13,000
但是呢

1931
01:11:13,000 --> 01:11:15,000
就这个 emoji color

1932
01:11:15,000 --> 01:11:16,000
emoji apple color emoji

1933
01:11:16,000 --> 01:11:20,000
它就是第一款就是有带颜色信息的这个字

1934
01:11:20,000 --> 01:11:20,000
哎

1935
01:11:20,000 --> 01:11:21,000
那它是点阵呢

1936
01:11:21,000 --> 01:11:22,000
还是向量的

1937
01:11:22,000 --> 01:11:23,000
嗯

1938
01:11:23,000 --> 01:11:24,000
是位图

1939
01:11:24,000 --> 01:11:25,000
但它存很多

1940
01:11:25,000 --> 01:11:25,000
哦

1941
01:11:25,000 --> 01:11:26,000
对

1942
01:11:26,000 --> 01:11:26,000
对

1943
01:11:26,000 --> 01:11:28,000
或者实现上是位图

1944
01:11:28,000 --> 01:11:29,000
但是

1945
01:11:29,000 --> 01:11:31,000
它实现上是位图

1946
01:11:31,000 --> 01:11:33,000
但是它理论上是可以支持啊

1947
01:11:33,000 --> 01:11:36,000
你说支持彩色的实量图

1948
01:11:36,000 --> 01:11:37,000
我没理解错的话

1949
01:11:37,000 --> 01:11:39,000
就是它这套字体

1950
01:11:39,000 --> 01:11:41,000
它只是存了一套位图的实现

1951
01:11:41,000 --> 01:11:45,000
但是它本身是可以使用彩色 sbg 的

1952
01:11:45,000 --> 01:11:51,000
而且好像微软类似的技术本身就一上来就直接是彩色的实量图

1953
01:11:51,000 --> 01:11:52,000
啊

1954
01:11:52,000 --> 01:11:54,000
那可能是私有技术啊

1955
01:11:54,000 --> 01:11:55,000
ok

1956
01:11:55,000 --> 01:11:55,000
对

1957
01:11:55,000 --> 01:11:59,000
那 apple 的 apple 的这个 color emoji 这套那个 font 的话

1958
01:11:59,000 --> 01:12:01,000
它其实里面是位图嘛

1959
01:12:01,000 --> 01:12:05,000
然后你所以它你仔细看它并不是那如果你只要放大的话

1960
01:12:05,000 --> 01:12:07,000
它并不是无无级放大的

1961
01:12:07,000 --> 01:12:07,000
嗯

1962
01:12:07,000 --> 01:12:09,000
它不是无级放大的

1963
01:12:09,000 --> 01:12:09,000
明白

1964
01:12:09,000 --> 01:12:10,000
它不是无级的

1965
01:12:10,000 --> 01:12:15,000
比如说你 12 point 14 point 16 point 的其实是不大一样的

1966
01:12:15,000 --> 01:12:18,000
其实这里要而且要解释一下那个字体的概念啊

1967
01:12:18,000 --> 01:12:21,000
因为刚才讲了是一个点位和一个东西的对应

1968
01:12:21,000 --> 01:12:22,000
那个东西是什么

1969
01:12:22,000 --> 01:12:23,000
就可能有两种方式

1970
01:12:23,000 --> 01:12:25,000
一种是刚才说的点阵

1971
01:12:25,000 --> 01:12:29,000
就是一个多少几乘几的一个方块里面哪些点是什么颜色

1972
01:12:29,000 --> 01:12:31,000
这么一个一个马赛克吗

1973
01:12:31,000 --> 01:12:32,000
对

1974
01:12:32,000 --> 01:12:34,000
然后另外就是所谓的向量的字体

1975
01:12:34,000 --> 01:12:36,000
就是它存的是一堆这个啊

1976
01:12:36,000 --> 01:12:43,000
这个一些一些 point 这些 point 就它会通过某种方式组合成一个一个区域

1977
01:12:43,000 --> 01:12:46,000
然后汇上颜色之后就变成一个黑白的字号

1978
01:12:46,000 --> 01:12:47,000
啊

1979
01:12:47,000 --> 01:12:48,000
这个字它是一个轮廓

1980
01:12:48,000 --> 01:12:53,000
就轮库就这个怎么把一个形状表达出来

1981
01:12:53,000 --> 01:12:55,000
这个是自自体文件要干的或者是要干的啊

1982
01:12:55,000 --> 01:12:57,000
或者要自库文件要干的事情

1983
01:12:57,000 --> 01:12:57,000
对吧

1984
01:12:58,000 --> 01:12:59,000
对对

1985
01:12:59,000 --> 01:13:02,000
这就是我们平时大家在电脑里面看的 font

1986
01:13:02,000 --> 01:13:03,000
嗯

1987
01:13:03,000 --> 01:13:05,000
这个 font 文件里面到底是什么东西

1988
01:13:05,000 --> 01:13:10,000
对关于那个呃一个 glyph 它本身的这个图像形式

1989
01:13:10,000 --> 01:13:11,000
我觉得按照 real 刚才说了

1990
01:13:11,000 --> 01:13:13,000
我们其实应该可以分成三种

1991
01:13:13,000 --> 01:13:16,000
一种是那种黑白的点阵

1992
01:13:16,000 --> 01:13:19,000
然后另一种是更常见的这个矢量字体

1993
01:13:19,000 --> 01:13:20,000
它是一个矢量的轮廓

1994
01:13:20,000 --> 01:13:21,000
对

1995
01:13:21,000 --> 01:13:24,000
当然这个矢量轮廓可能有很多种描述方式了

1996
01:13:24,000 --> 01:13:24,000
但它

1997
01:13:24,000 --> 01:13:25,000
统一上都是一个轮廓的字体啊

1998
01:13:25,000 --> 01:13:26,000
都是一个矢量轮廓

1999
01:13:26,000 --> 01:13:26,000
对

2000
01:13:26,000 --> 01:13:29,000
还有一种是那个 m 1 之常用的这种图片

2001
01:13:29,000 --> 01:13:31,000
一个彩色的位图

2002
01:13:31,000 --> 01:13:31,000
对

2003
01:13:31,000 --> 01:13:33,000
它比那种点阵的

2004
01:13:33,000 --> 01:13:36,000
我们最早看到那种点阵的那个位图要高端呢

2005
01:13:36,000 --> 01:13:39,000
很多就是说我们可以大致上这样理解

2006
01:13:39,000 --> 01:13:41,000
就他们不是同一种技术

2007
01:13:41,000 --> 01:13:42,000
对对对嗯

2008
01:13:42,000 --> 01:13:46,000
所以最常见的可能最最古老的是那种点阵字库吗

2009
01:13:46,000 --> 01:13:48,000
大家应该还在因为 dos 时代还挺明确的吧

2010
01:13:48,000 --> 01:13:53,000
那个什么 16 乘以 16 个像素的那个叫什么字体来的

2011
01:13:53,000 --> 01:13:54,000
就是当时用 wps

2012
01:13:54,000 --> 01:13:54,000
就是当时用 wps

2013
01:13:54,000 --> 01:13:54,000
就是当时用 wps

2014
01:13:54,000 --> 01:13:54,000
就是当时用 wps

2015
01:13:54,000 --> 01:13:55,000
就是当时用 wps

2016
01:13:55,000 --> 01:13:55,000
就是当时用 wps

2017
01:13:55,000 --> 01:13:56,000
就是当时用 wps

2018
01:13:56,000 --> 01:13:58,000
就是当时用 wps

2019
01:13:58,000 --> 01:13:59,000
哇

2020
01:13:59,000 --> 01:13:59,000
是 fixes

2021
01:13:59,000 --> 01:14:00,000
我怕死

2022
01:14:00,000 --> 01:14:02,000
这个是英文的吗

2023
01:14:02,000 --> 01:14:02,000
还有中文的吗

2024
01:14:02,000 --> 01:14:03,000
有个有个

2025
01:14:03,000 --> 01:14:04,000
有它点阵的送体

2026
01:14:04,000 --> 01:14:05,000
有的

2027
01:14:05,000 --> 01:14:06,000
点阵字库

2028
01:14:06,000 --> 01:14:06,000
有的

2029
01:14:06,000 --> 01:14:07,000
对

2030
01:14:07,000 --> 01:14:07,000
啊

2031
01:14:07,000 --> 01:14:08,000
包括后来

2032
01:14:08,000 --> 01:14:09,000
对啊

2033
01:14:09,000 --> 01:14:12,000
点阵送体在 windows 应该是 7 之前吧

2034
01:14:12,000 --> 01:14:15,000
中意中是什么中意中标送体吗

2035
01:14:15,000 --> 01:14:16,000
啊

2036
01:14:16,000 --> 01:14:23,000
好像是那个现在包括很多的那个现在很多 l 中国的 led 的那个显示屏上还会还会使用这种

2037
01:14:23,000 --> 01:14:23,000
没错

2038
01:14:23,000 --> 01:14:24,000
没错

2039
01:14:24,000 --> 01:14:25,000
有点那套

2040
01:14:25,000 --> 01:14:28,000
那个欢迎领导递零访问之类的那个字

2041
01:14:28,000 --> 01:14:29,000
就是这个

2042
01:14:29,000 --> 01:14:30,000
哈哈

2043
01:14:30,000 --> 01:14:32,000
那个红色的 led 灯屏幕是吧

2044
01:14:32,000 --> 01:14:35,000
大家坐地铁的都地铁上面都是嘛

2045
01:14:35,000 --> 01:14:37,000
就是那显示的是吧

2046
01:14:37,000 --> 01:14:38,000
对对对啊

2047
01:14:38,000 --> 01:14:38,000
啊

2048
01:14:38,000 --> 01:14:40,000
他那个就是那种小型的那个 led 都是那样的吗

2049
01:14:40,000 --> 01:14:41,000
对

2050
01:14:41,000 --> 01:14:47,000
就那个那个中意那个送体应该是有 9 像素到 16 个像素的

2051
01:14:47,000 --> 01:14:48,000
就是每一个就 90

2052
01:14:48,000 --> 01:14:48,000
11

2053
01:14:48,000 --> 01:14:49,000
12

2054
01:14:49,000 --> 01:14:50,000
13

2055
01:14:50,000 --> 01:14:52,000
我记得最小是 11 吧

2056
01:14:52,000 --> 01:14:54,000
是 9 像素是那个 9 像素

2057
01:14:54,000 --> 01:14:59,000
只有那个啊台湾那套字体叫什么

2058
01:14:59,000 --> 01:15:00,000
嗯

2059
01:15:01,000 --> 01:15:04,000
名流体可以支持到 9 像素

2060
01:15:04,000 --> 01:15:07,000
就是中意是从 11 像素开始 11 个像素是吧

2061
01:15:07,000 --> 01:15:08,000
好像 11 到 16 应该是齐的

2062
01:15:08,000 --> 01:15:09,000
我记得

2063
01:15:09,000 --> 01:15:10,000
对

2064
01:15:11,000 --> 01:15:13,000
然后比 11 小的话有些字就卡起来了

2065
01:15:13,000 --> 01:15:16,000
但是好像就完全一团糊了吗

2066
01:15:16,000 --> 01:15:17,000
对

2067
01:15:17,000 --> 01:15:24,000
因为最早时候最早时候我们在做那个网页的时候就大家手工指定说这个最小是 11 个 pixel

2068
01:15:24,000 --> 01:15:25,000
应该是 10.5 个 pixel

2069
01:15:25,000 --> 01:15:27,000
等一下我想纠正一个细节

2070
01:15:27,000 --> 01:15:29,000
就是那个不叫名流体吧

2071
01:15:29,000 --> 01:15:29,000
是吧

2072
01:15:29,000 --> 01:15:30,000
那个叫名利

2073
01:15:30,000 --> 01:15:32,000
然后有一个 u

2074
01:15:32,000 --> 01:15:32,000
这

2075
01:15:33,000 --> 01:15:33,000
对

2076
01:15:33,000 --> 01:15:35,000
哈哈哈哈

2077
01:15:35,000 --> 01:15:36,000
名利 u

2078
01:15:36,000 --> 01:15:36,000
u

2079
01:15:36,000 --> 01:15:37,000
对

2080
01:15:37,000 --> 01:15:38,000
对

2081
01:15:38,000 --> 01:15:39,000
哈哈哈哈

2082
01:15:39,000 --> 01:15:40,000
他那个 u 我一忘记是什么了

2083
01:15:40,000 --> 01:15:42,000
但是他是一个特殊的

2084
01:15:42,000 --> 01:15:43,000
那个 u 代表什么

2085
01:15:43,000 --> 01:15:43,000
哇

2086
01:15:43,000 --> 01:15:46,000
他那个 u 是 ui 的意思吗

2087
01:15:46,000 --> 01:15:47,000
还是什么

2088
01:15:47,000 --> 01:15:50,000
就因为当时 windows 好像对文件名的长度有个限制

2089
01:15:50,000 --> 01:15:53,000
所以他没法完整写完这个字体名称

2090
01:15:53,000 --> 01:15:54,000
原来是这样吧

2091
01:15:54,000 --> 01:15:55,000
好

2092
01:15:55,000 --> 01:15:59,000
怪不得那个小时候觉得那个又要小又要大写

2093
01:15:59,000 --> 01:16:00,000
就很奇怪

2094
01:16:00,000 --> 01:16:01,000
是 ui 还是什么

2095
01:16:01,000 --> 01:16:03,000
就是 u 1 后面的时候不知道是什么了

2096
01:16:03,000 --> 01:16:08,000
那后来我记得 windows 那个终于送应该是到 windows 7 还是 8 的时候

2097
01:16:08,000 --> 01:16:14,000
他他把那个小字号的那个字体也默认用那个雅黑了吗

2098
01:16:14,000 --> 01:16:16,000
就是中文中文的那个字体

2099
01:16:16,000 --> 01:16:18,000
用雅黑来显示了

2100
01:16:18,000 --> 01:16:19,000
然后那个终于

2101
01:16:19,000 --> 01:16:23,000
感应雅黑是从 windows vista 开始的

2102
01:16:23,000 --> 01:16:23,000
已经

2103
01:16:23,000 --> 01:16:24,000
你问了

2104
01:16:24,000 --> 01:16:26,000
那个小字号也是用雅黑了吗

2105
01:16:26,000 --> 01:16:28,000
有雅黑和小字号用雅黑是两个概念

2106
01:16:28,000 --> 01:16:31,000
应该说 vista 的时候中文的

2107
01:16:31,000 --> 01:16:31,000
嗯

2108
01:16:31,000 --> 01:16:32,000
怎么说

2109
01:16:32,000 --> 01:16:36,000
简体中文这边的 ui 字体还是中意送体好像

2110
01:16:36,000 --> 01:16:40,000
但是雅黑已经已经随系统搭载了

2111
01:16:40,000 --> 01:16:40,000
对对对

2112
01:16:40,000 --> 01:16:41,000
还是随 office 搭载

2113
01:16:41,000 --> 01:16:42,000
我不太记得清楚

2114
01:16:42,000 --> 01:16:43,000
有了吗

2115
01:16:43,000 --> 01:16:46,000
呃雅黑应该是随 windows 7 还是 vista 发布的

2116
01:16:46,000 --> 01:16:50,000
然后他有一套那个 c 字头的字体的那个 calibri 啊

2117
01:16:50,000 --> 01:16:51,000
console 啊

2118
01:16:51,000 --> 01:16:53,000
那套是随那个对那个随 cli...那个 windows 7 啊

2119
01:16:53,000 --> 01:16:54,000
对那个随 cli...那个 windows 7 啊

2120
01:16:54,000 --> 01:16:55,000
那个是 cli...那个 windows 7 啊

2121
01:16:55,000 --> 01:16:57,000
那是 clearview

2122
01:16:57,000 --> 01:16:59,000
对那是随 clearview 技术

2123
01:16:59,000 --> 01:17:00,000
对对对

2124
01:17:00,000 --> 01:17:02,000
所发布弄进去的

2125
01:17:02,000 --> 01:17:04,000
然后但是当然也有一个具体原因呢

2126
01:17:04,000 --> 01:17:11,000
就是因为当时就是 windows 用 windows 的那些 pc 很多还是那种低分辨率的屏幕嘛

2127
01:17:11,000 --> 01:17:15,000
就可能是就不太适合用那种小字的

2128
01:17:15,000 --> 01:17:15,000
哎

2129
01:17:15,000 --> 01:17:20,000
这个显示非点证字库的中文字体了

2130
01:17:20,000 --> 01:17:22,000
但后来因为现在这个屏幕分辨率也高些了嘛

2131
01:17:22,000 --> 01:17:24,000
有很多这个 p...这个 windows 7

2132
01:17:24,000 --> 01:17:29,000
那个笔记本特别是适合什么超就是高分屏虽然不是 retina 那么高

2133
01:17:29,000 --> 01:17:30,000
但是也有很多是了

2134
01:17:30,000 --> 01:17:34,000
然后由于这个时候在显示这个雅黑小字号就问题不是那么大了

2135
01:17:34,000 --> 01:17:37,000
嗯哦

2136
01:17:37,000 --> 01:17:39,000
所以我一直想和大家澄清一点

2137
01:17:39,000 --> 01:17:41,000
就是说虽然我们说啊

2138
01:17:41,000 --> 01:17:44,000
字体文件里面有我们有点证字

2139
01:17:44,000 --> 01:17:46,000
我们有矢量也有轮廓字了

2140
01:17:46,000 --> 01:17:47,000
但并不是说啊

2141
01:17:47,000 --> 01:17:50,000
就是啊这个 font 肯定就是点证字

2142
01:17:50,000 --> 01:17:50,000
有的它是这样子

2143
01:17:50,000 --> 01:17:53,000
就像刚才说的 windows

2144
01:17:53,000 --> 01:17:55,000
它默认的 sim 送就是中义送的

2145
01:17:55,000 --> 01:18:01,000
它两套它其实那个 font 文件里面它两两种的字体数据都有的

2146
01:18:01,000 --> 01:18:03,000
对就是然后呢

2147
01:18:03,000 --> 01:18:04,000
由系统来调用

2148
01:18:04,000 --> 01:18:06,000
但在小字号的时候呢

2149
01:18:06,000 --> 01:18:11,000
它就把那些点证的数据拿出来显示在大字号的话

2150
01:18:11,000 --> 01:18:14,000
它把那个轮廓数据拿出来显示

2151
01:18:14,000 --> 01:18:16,000
在那个 font 里面呢

2152
01:18:16,000 --> 01:18:21,000
它里面既有点证的数据又有那个轮廓的数据

2153
01:18:21,000 --> 01:18:23,000
或者说因为因为那个轮廓

2154
01:18:23,000 --> 01:18:25,000
就是轮廓数据它有个叫做 hinting 的一个概念嘛

2155
01:18:25,000 --> 01:18:30,000
就是说告诉你说这个时候如果你遇到一些疑难的时候你怎么去弄

2156
01:18:30,000 --> 01:18:34,000
因为毕竟你把那个轮廓画在一个就是平面的一个矩阵里面

2157
01:18:34,000 --> 01:18:39,000
它有些时候那个因为轮廓的那个曲线是一个数学上是无限大小的

2158
01:18:39,000 --> 01:18:41,000
就没有那个粗细的嘛

2159
01:18:41,000 --> 01:18:45,000
对但是你画到那个点证的时候还是会有一些左右站哪一格的问题

2160
01:18:45,000 --> 01:18:47,000
这会有一些叫做 hinting 的机制

2161
01:18:47,000 --> 01:18:51,000
就告诉你说这个时候你应该放到左边还是右边上面还是下面

2162
01:18:51,000 --> 01:18:53,000
呃如果从这个角度来讲点证字

2163
01:18:53,000 --> 01:18:56,000
这个轮廓的话可以说是一颗比较极端的 hinting 的例子吧

2164
01:18:56,000 --> 01:19:02,000
呃这里说到 hinting 的话呃我们干脆给它翻译成叫渲染提示吧

2165
01:19:02,000 --> 01:19:04,000
这样可能大家会比较清楚一些

2166
01:19:04,000 --> 01:19:11,000
呃呃就是说我即即便你在那个文呃在 font 里面

2167
01:19:11,000 --> 01:19:14,000
你存储的是数学的矢量的轮廓

2168
01:19:14,000 --> 01:19:21,000
但是你最后显示到这个屏幕上屏幕毕竟它是一个山格化的一个东西

2169
01:19:21,000 --> 01:19:22,000
所以呢

2170
01:19:23,000 --> 01:19:24,000
你还要把这个

2171
01:19:24,000 --> 01:19:24,000
我一直念炸

2172
01:19:24,000 --> 01:19:26,000
炸炸

2173
01:19:26,000 --> 01:19:27,000
到底是三格还是炸

2174
01:19:27,000 --> 01:19:30,000
我跟真云还研究过这个东西

2175
01:19:30,000 --> 01:19:31,000
哦好吧

2176
01:19:31,000 --> 01:19:31,000
结论是什么

2177
01:19:31,000 --> 01:19:36,000
结论是这个字的读音是一个坑

2178
01:19:36,000 --> 01:19:38,000
这个字的正音规则是一个坑

2179
01:19:38,000 --> 01:19:40,000
还是念山格炸来

2180
01:19:40,000 --> 01:19:42,000
因为我给它翻谈翻牌了后我还大屎烂了

2181
01:19:42,000 --> 01:19:47,000
对因为呃我觉得严格来说炸才是它的标准音吧

2182
01:19:47,000 --> 01:19:49,000
但是它在很多地方都被误读成山

2183
01:19:49,000 --> 01:19:52,000
所以渐渐的好像字典的正音规则开始

2184
01:19:53,000 --> 01:20:01,000
倾向于将一些经常被念成山的树与野直接标成是山这个山格那山格的话是对我现在是这么逻辑

2185
01:20:01,000 --> 01:20:04,000
就是如果但凡涉及到电脑相关的就是山

2186
01:20:04,000 --> 01:20:07,000
然后但凡涉及到实体的那个那个泥巴

2187
01:20:07,000 --> 01:20:10,000
炸了炸了炸了好吧

2188
01:20:10,000 --> 01:20:12,000
反正你只能分一下应用场景

2189
01:20:12,000 --> 01:20:13,000
那叫什么

2190
01:20:13,000 --> 01:20:14,000
restoration

2191
01:20:14,000 --> 01:20:15,000
什么那英文怎么念来的

2192
01:20:15,000 --> 01:20:16,000
rasterization

2193
01:20:17,000 --> 01:20:18,000
restorize

2194
01:20:18,000 --> 01:20:19,000
restorize

2195
01:20:19,000 --> 01:20:21,000
对就是要因为就涉及到从轮廓性的东西来说呢

2196
01:20:21,000 --> 01:20:23,000
对就是要因为就涉及到从轮廓性的东西来说呢

2197
01:20:23,000 --> 01:20:26,000
那应该是怎么样给套到那个像素矩阵上面这个网网格上去

2198
01:20:26,000 --> 01:20:27,000
像素矩阵上面这个网网格上去

2199
01:20:27,000 --> 01:20:28,000
就这样上去

2200
01:20:28,000 --> 01:20:31,000
所以它不可能是套的正正正好的吗

2201
01:20:31,000 --> 01:20:35,000
那那刚好就套在那个矩阁半点

2202
01:20:35,000 --> 01:20:36,000
那我是往上挪呢

2203
01:20:36,000 --> 01:20:36,000
还是往下挪呢

2204
01:20:36,000 --> 01:20:41,000
这这这有时候的就是就是要渲染引擎来做这个事情

2205
01:20:41,000 --> 01:20:43,000
那 Hinting 这个渲染提示呢

2206
01:20:43,000 --> 01:20:46,000
就是来来进行这样一个工作

2207
01:20:46,000 --> 01:20:47,000
这样提示有两种实现方式

2208
01:20:47,000 --> 01:20:48,000
一种是叫做 Auto Hinting

2209
01:20:48,000 --> 01:20:50,000
就是在那个渲染引擎里面

2210
01:20:50,000 --> 01:20:53,000
他他提供了一个叫通用的一个

2211
01:20:53,000 --> 01:20:54,000
Hinting 的一个一个算法

2212
01:20:54,000 --> 01:20:57,000
然后还有一个就是直接嵌入到字体内部的

2213
01:20:57,000 --> 01:20:58,000
就是说告诉你说渲染引擎

2214
01:20:58,000 --> 01:21:00,000
你虽然得出的是那个结论

2215
01:21:00,000 --> 01:21:02,000
但是我一个字体设计师

2216
01:21:02,000 --> 01:21:02,000
我告诉你

2217
01:21:02,000 --> 01:21:04,000
你我此处应该是这样

2218
01:21:04,000 --> 01:21:08,000
我觉得那个我来我来再补充一点

2219
01:21:08,000 --> 01:21:11,000
跟那个刚才说的这个渲染提示有关的东西

2220
01:21:11,000 --> 01:21:13,000
就首先我觉得这里有一个问题

2221
01:21:13,000 --> 01:21:16,000
就是说一个矢量的轮廓

2222
01:21:16,000 --> 01:21:20,000
它经过了这样一个山格化的过程中

2223
01:21:20,000 --> 01:21:22,000
它肯定不可能是精确的显示

2224
01:21:22,000 --> 01:21:22,000
它会有一种

2225
01:21:22,000 --> 01:21:24,000
失真嘛

2226
01:21:24,000 --> 01:21:26,000
那么这其实是一个下采样的过程

2227
01:21:26,000 --> 01:21:28,000
如果说用计算机的数据来说

2228
01:21:28,000 --> 01:21:33,000
所以他这里有一个有一个信号处理这个数据叫做混叠

2229
01:21:34,000 --> 01:21:37,000
就是说当你从一个模拟的信号

2230
01:21:37,000 --> 01:21:41,000
或者说一个非常高频的信号把它采样成一个低频的信号的时候

2231
01:21:41,000 --> 01:21:42,000
这个信号就会发生一个混叠

2232
01:21:42,000 --> 01:21:44,000
所以我们有一个数据叫反混叠

2233
01:21:44,000 --> 01:21:52,000
但是这个数据在那个字体的这个处理中经常被翻译成叫什么抗拒尺的就是 Antialias

2234
01:21:52,000 --> 01:21:52,000
但是

2235
01:21:52,000 --> 01:21:52,000
Antialias

2236
01:21:52,000 --> 01:21:52,000
对

2237
01:21:52,000 --> 01:21:52,000
对

2238
01:21:52,000 --> 01:21:56,000
Antialias 这个词里面没有拒尺这个字啊

2239
01:21:56,000 --> 01:21:59,000
它的标准翻译应该翻译成抗混叠或者是反混叠

2240
01:21:59,000 --> 01:21:59,000
比如说

2241
01:21:59,000 --> 01:22:01,000
抗拒尺有点像一个意义

2242
01:22:01,000 --> 01:22:04,000
就是解释这个东西最终是来干嘛

2243
01:22:04,000 --> 01:22:04,000
对

2244
01:22:04,000 --> 01:22:06,000
但是所以实际上我们就知道

2245
01:22:06,000 --> 01:22:09,000
我觉得翻译成抗拒尺有点误导

2246
01:22:09,000 --> 01:22:12,000
因为很多时候 Antialias 做的并不是一件抗拒尺的事情

2247
01:22:12,000 --> 01:22:15,000
它可能跟拒尺这个事情完全没有关系的

2248
01:22:15,000 --> 01:22:20,000
有的时候抗拒尺系统会有一套自己固有的方式来绘制这个曲线

2249
01:22:20,000 --> 01:22:22,000
比如说是什么灰度层面的抗拒尺

2250
01:22:22,000 --> 01:22:24,000
抗拒尺之类的

2251
01:22:24,000 --> 01:22:27,000
但是它并不是完全解决这个抗混叠的这件事情

2252
01:22:27,000 --> 01:22:30,000
那么微软想出来的这个 Hinting 的技术

2253
01:22:30,000 --> 01:22:35,000
它是在这个通用的抗拒尺的这种思路上再加了一层

2254
01:22:35,000 --> 01:22:40,000
比如说它将某一些曲线的形状进行了一些变异

2255
01:22:40,000 --> 01:22:43,000
这个变异很可能是不规则的变异

2256
01:22:43,000 --> 01:22:45,000
是需要人工去指导的这个变异

2257
01:22:45,000 --> 01:22:47,000
所以他给它加了一个 Hinting 的信息

2258
01:22:47,000 --> 01:22:49,000
就是一个引导呀

2259
01:22:49,000 --> 01:22:52,000
或者说一个什么提示的信息来告诉这个

2260
01:22:52,000 --> 01:22:55,000
操作系统怎样去改变这个轮廓的形状

2261
01:22:55,000 --> 01:22:58,000
使得它能显示的更加的完美一点

2262
01:22:58,000 --> 01:23:00,000
就大致上是这样的一个过程

2263
01:23:00,000 --> 01:23:02,000
但这引入了一个哲学的一个问题

2264
01:23:02,000 --> 01:23:04,000
就是一个设计哲学的问题

2265
01:23:04,000 --> 01:23:06,000
就是说在 Windows 上

2266
01:23:06,000 --> 01:23:08,000
它因为最开始的时候长期来看

2267
01:23:08,000 --> 01:23:10,000
是相当长的一段时间

2268
01:23:10,000 --> 01:23:12,000
我们在用那种所谓低分辨率的显示设备

2269
01:23:12,000 --> 01:23:13,000
就是可能只有

2270
01:23:13,000 --> 01:23:16,000
我记得我最早的一个图形显示器

2271
01:23:16,000 --> 01:23:18,000
是个 640 x 480 的一个 CRT

2272
01:23:19,000 --> 01:23:20,000
对吧

2273
01:23:20,000 --> 01:23:20,000
然后后来

2274
01:23:20,000 --> 01:23:21,000
最早的显示器

2275
01:23:21,000 --> 01:23:22,000
难道不应该是

2276
01:23:22,000 --> 01:23:23,000
电视吗

2277
01:23:23,000 --> 01:23:23,000
对啊

2278
01:23:23,000 --> 01:23:24,000
就是 CRT

2279
01:23:24,000 --> 01:23:26,000
80 x 40 的字符

2280
01:23:26,000 --> 01:23:27,000
那个太早了

2281
01:23:27,000 --> 01:23:28,000
小霸王起了无穷啊

2282
01:23:28,000 --> 01:23:32,000
就说有故意的时候

2283
01:23:32,000 --> 01:23:34,000
后来是升级成一个什么

2284
01:23:34,000 --> 01:23:37,000
800 x 600 像素的一个

2285
01:23:37,000 --> 01:23:39,000
什么索尼的什么特富龙

2286
01:23:39,000 --> 01:23:42,000
还是什么龙的一个屏幕

2287
01:23:42,000 --> 01:23:44,000
我忘了一个名字了

2288
01:23:44,000 --> 01:23:46,000
然后再后来有了那个 LCD

2289
01:23:46,000 --> 01:23:49,000
我记得当时标准是 1024 x 768 的

2290
01:23:49,000 --> 01:23:51,000
然后已经是非常晚近了

2291
01:23:51,000 --> 01:23:52,000
才出现所谓的

2292
01:23:52,000 --> 01:23:54,000
1024 x 440

2293
01:23:54,000 --> 01:23:56,000
当时自己叫做高分屏的一种

2294
01:23:56,000 --> 01:23:57,000
一种宽屏幕了嘛

2295
01:23:57,000 --> 01:23:59,000
但其实现在

2296
01:23:59,000 --> 01:24:01,000
就在那个时候

2297
01:24:01,000 --> 01:24:02,000
他选择了说

2298
01:24:02,000 --> 01:24:05,000
我们在这个有限的物理基础上

2299
01:24:05,000 --> 01:24:06,000
尽量显示清楚嘛

2300
01:24:06,000 --> 01:24:07,000
所谓清楚

2301
01:24:07,000 --> 01:24:08,000
就是说笔画分明

2302
01:24:08,000 --> 01:24:10,000
不要出现模模糊糊的那种效果

2303
01:24:10,000 --> 01:24:12,000
所以导致刚才我们一个是说

2304
01:24:12,000 --> 01:24:14,000
这个中益送

2305
01:24:14,000 --> 01:24:14,000
全部是点证

2306
01:24:14,000 --> 01:24:15,000
小字号的时候

2307
01:24:15,000 --> 01:24:16,000
全部是点证字库

2308
01:24:16,000 --> 01:24:18,000
还有像那个

2309
01:24:18,000 --> 01:24:20,000
像那个微软

2310
01:24:20,000 --> 01:24:20,000
在那个字体上

2311
01:24:20,000 --> 01:24:22,000
Ariel 和

2312
01:24:22,000 --> 01:24:22,000
不是

2313
01:24:22,000 --> 01:24:24,000
Verdana 当时是在网页排版上

2314
01:24:24,000 --> 01:24:26,000
用的比较多显示文字的嘛

2315
01:24:26,000 --> 01:24:28,000
还有那个叫做 Georgia

2316
01:24:28,000 --> 01:24:31,000
他们都在非

2317
01:24:31,000 --> 01:24:32,000
就没有开抗拒者情况下

2318
01:24:32,000 --> 01:24:33,000
显示的还是一种

2319
01:24:33,000 --> 01:24:34,000
就是你可以看得出明显

2320
01:24:34,000 --> 01:24:36,000
他是一颗一颗小酵素

2321
01:24:36,000 --> 01:24:39,000
构成的这么一个一个字符

2322
01:24:39,000 --> 01:24:39,000
然后后来

2323
01:24:39,000 --> 01:24:40,000
但是你对比一下

2324
01:24:40,000 --> 01:24:41,000
在那个 Mac 上面

2325
01:24:41,000 --> 01:24:42,000
他说嗯

2326
01:24:42,000 --> 01:24:43,000
这个只是就是分

2327
01:24:43,000 --> 01:24:45,000
就显示器分辨率低

2328
01:24:45,000 --> 01:24:47,000
这是一个暂时的物理限制

2329
01:24:47,000 --> 01:24:48,000
时间长他会解决的嘛

2330
01:24:48,000 --> 01:24:50,000
那我说我们从长远的角度来看

2331
01:24:50,000 --> 01:24:52,000
我们不要去做那么太多的

2332
01:24:52,000 --> 01:24:54,000
叫做什么来的局部细节优化吧

2333
01:24:54,000 --> 01:24:55,000
局部优化

2334
01:24:55,000 --> 01:24:57,000
就是 local optimization

2335
01:24:57,000 --> 01:24:59,000
但是就用一种通用的方法去显示

2336
01:24:59,000 --> 01:25:01,000
但虽然看起来就是有点模模糊糊灰的

2337
01:25:01,000 --> 01:25:04,000
但现在看来这个因为屏幕分辨率上上去了嘛

2338
01:25:04,000 --> 01:25:10,000
就反而是我们觉得 Mac 上面显示那套字的比较漂亮

2339
01:25:10,000 --> 01:25:15,000
因为他更加终于反映出那个自己本身的设计师的一个一个形状嘛

2340
01:25:15,000 --> 01:25:16,000
嗯

2341
01:25:16,000 --> 01:25:19,000
这是一个非常重要的一个哲学设计

2342
01:25:19,000 --> 01:25:21,000
哲学的不同取向问题

2343
01:25:21,000 --> 01:25:21,000
对对

2344
01:25:21,000 --> 01:25:22,000
一个是

2345
01:25:22,000 --> 01:25:33,000
在设计如何保持保持字体的设计和如何保持那个清晰的显示这样两个两个取向中

2346
01:25:33,000 --> 01:25:37,000
Windows 他取向的是尽量让他显示的清晰

2347
01:25:37,000 --> 01:25:41,000
所以他不惜牺牲改改去牺牲设计

2348
01:25:41,000 --> 01:25:42,000
他把那个字改掉

2349
01:25:42,000 --> 01:25:45,000
他会把这个显示的像素给挪来挪去

2350
01:25:45,000 --> 01:25:47,000
他特别看重 hinting

2351
01:25:47,000 --> 01:25:49,000
特别看重他的渲染提示

2352
01:25:49,000 --> 01:25:51,000
然后用那个渲染然后去给他挪来挪去

2353
01:25:51,000 --> 01:25:52,000
把那个字挪来挪去

2354
01:25:52,000 --> 01:25:58,000
挪挪挪就去匹配他的显示的像素达到像素的字的显示的清晰度

2355
01:25:58,000 --> 01:26:00,000
但是牺牲了文字的设计形状

2356
01:26:00,000 --> 01:26:01,000
对

2357
01:26:01,000 --> 01:26:01,000
而 mac 呢

2358
01:26:01,000 --> 01:26:05,000
他是为了保证这个字体是原来的形状

2359
01:26:05,000 --> 01:26:10,000
他可能有时候牺牲自己的清晰度

2360
01:26:10,000 --> 01:26:11,000
虽然暂时

2361
01:26:12,000 --> 01:26:13,000
对但是

2362
01:26:13,000 --> 01:26:15,000
比如说在老老的屏幕上

2363
01:26:15,000 --> 01:26:17,000
他可能显示回去比较模糊

2364
01:26:17,000 --> 01:26:20,000
但是随着硬件的现在的逐步的发展的

2365
01:26:20,000 --> 01:26:22,000
他的依然能保持他的

2366
01:26:22,000 --> 01:26:25,000
字体设计他原来的一个造型和形状

2367
01:26:25,000 --> 01:26:26,000
对

2368
01:26:26,000 --> 01:26:29,000
现在我们用的那些智能手机都是高分屏

2369
01:26:29,000 --> 01:26:32,000
基本上就就没不存在这个问题

2370
01:26:34,000 --> 01:26:34,000
所以呀

2371
01:26:34,000 --> 01:26:37,000
windows 还是工程师做出来的呀

2372
01:26:37,000 --> 01:26:39,000
做 mac 的都是艺术家嘛

2373
01:26:39,000 --> 01:26:40,000
就是这一点嘛

2374
01:26:40,000 --> 01:26:43,000
你要是作为一个字体设计师

2375
01:26:43,000 --> 01:26:44,000
就怎么搞的嘛

2376
01:26:44,000 --> 01:26:45,000
对吧

2377
01:26:45,000 --> 01:26:48,000
你我的字就全部都都改掉了

2378
01:26:48,000 --> 01:26:48,000
都不是我的字了

2379
01:26:48,000 --> 01:26:49,000
就跟着

2380
01:26:51,000 --> 01:26:51,000
对

2381
01:26:51,000 --> 01:26:52,000
没办法

2382
01:26:52,000 --> 01:26:54,000
也也不能完全这么说吧

2383
01:26:54,000 --> 01:27:01,000
因为其实早期在三四十年代就是二十二十几三四十年代的时候不是也有什么

2384
01:27:02,000 --> 01:27:03,000
呃 grade based

2385
01:27:03,000 --> 01:27:04,000
呃 type of

2386
01:27:04,000 --> 01:27:08,000
就是他本身就是在是在一个矩阵格上设计的字体

2387
01:27:08,000 --> 01:27:12,000
然后微软早期请来了自己设计师

2388
01:27:12,000 --> 01:27:20,000
其实也是一上来就明确的知道自己需要设计一套在呃当时的高分屏

2389
01:27:20,000 --> 01:27:22,000
现在的低分屏上面

2390
01:27:22,000 --> 01:27:23,000
能够清晰显示字体

2391
01:27:23,000 --> 01:27:25,000
所以这其实也是他们自己的选择了

2392
01:27:25,000 --> 01:27:27,000
就呃

2393
01:27:27,000 --> 01:27:30,000
就是在当时的设计的制约上

2394
01:27:30,000 --> 01:27:31,000
然后尽量去做好的设计

2395
01:27:31,000 --> 01:27:36,000
玩弄一个人在因为其实每个时代都有他们自己的那个字体设计的制约

2396
01:27:36,000 --> 01:27:37,000
嗯

2397
01:27:37,000 --> 01:27:41,000
以前在签字时代其实也有其实多说多多少少也有些自由的

2398
01:27:41,000 --> 01:27:51,000
比如说早期那个喇叭口什么的这种东西都是在签字时代才出现那种为了对抗那个技术上的缺陷而出现的一些特征吧

2399
01:27:51,000 --> 01:27:52,000
就是有墨的那个叫什么

2400
01:27:52,000 --> 01:27:55,000
就是进到别的地方去的那个问题了

2401
01:27:55,000 --> 01:27:56,000
可是你呢

2402
01:27:56,000 --> 01:27:57,000
还有合体字啊

2403
01:27:57,000 --> 01:28:02,000
喇叭口一看汉字的喇叭口一开始是为了抗磨损吧

2404
01:28:02,000 --> 01:28:08,000
呃应该是在照牌时代防止那个这个折角的地方过于圆润

2405
01:28:09,000 --> 01:28:13,000
对照牌是将一个小底片进行缩放这样的过程

2406
01:28:14,000 --> 01:28:15,000
OK

2407
01:28:15,000 --> 01:28:20,000
然后拉丁语的拉丁语的衬线其实最开始也是因为在雕刻的时候

2408
01:28:20,000 --> 01:28:27,000
然后把那个字母雕的比较比较怎么说适合那种刀的硬方结构上比较 OK

2409
01:28:27,000 --> 01:28:29,000
然后刻下又不是太麻烦的话

2410
01:28:29,000 --> 01:28:35,000
趁线其实一开始就是刀的那个雕刻刀的走口

2411
01:28:35,000 --> 01:28:37,000
就最锋利那一部分吗

2412
01:28:37,000 --> 01:28:42,000
对你看最开始的希腊语的希腊语传统上是没有成现体的

2413
01:28:42,000 --> 01:28:45,000
即便现在希腊语在正式场合也是只有黑体的

2414
01:28:45,000 --> 01:28:48,000
你不能因此说就是衬线体就是古典

2415
01:28:48,000 --> 01:28:49,000
因为

2416
01:28:49,000 --> 01:28:51,000
比他更古典的东西是黑体

2417
01:28:52,000 --> 01:28:58,000
所以对我就没识的技术都对字体有技术都对字体有影响

2418
01:28:58,000 --> 01:29:03,000
然后我十年前还是偏爱点阵子

2419
01:29:03,000 --> 01:29:06,000
我不觉得麦克那套比较好看

2420
01:29:06,000 --> 01:29:07,000
说实话

2421
01:29:07,000 --> 01:29:09,000
当然可能也跟我是个程序员有关

2422
01:29:10,000 --> 01:29:11,000
现在是无所谓的

2423
01:29:11,000 --> 01:29:13,000
不过是一个一天晚上买的

2424
01:29:13,000 --> 01:29:15,000
实用主义者

2425
01:29:15,000 --> 01:29:19,000
我觉得其实 windows 那一套在西文字体上的表现并不算差

2426
01:29:19,000 --> 01:29:22,000
就是从最开始直到现在

2427
01:29:22,000 --> 01:29:25,000
我觉得而且他那套系统是一直在改进的

2428
01:29:25,000 --> 01:29:28,000
但是我觉得 windows 犯了比较致命的错误

2429
01:29:28,000 --> 01:29:32,000
是在汉字的 hinting 技术上面走了一些歪路

2430
01:29:32,000 --> 01:29:35,000
走上了不归路

2431
01:29:35,000 --> 01:29:39,000
我觉得就是一方面汉字的 hinting 并不像西文的 hinting 那么容易

2432
01:29:39,000 --> 01:29:45,000
另一方面实际上在操作汉字 hinting 的那一波工程师和设计师团队

2433
01:29:45,000 --> 01:29:47,000
可能对汉字并不是那么的熟悉

2434
01:29:47,000 --> 01:29:49,000
包括在审美上和一些的工程师团队的工作上

2435
01:29:49,000 --> 01:29:52,000
和一些字型的细节上

2436
01:29:52,000 --> 01:29:56,000
所以导致了他们现在汉字的渲染效果就不是那么的理想

2437
01:29:58,000 --> 01:29:59,000
相当长一段时间内

2438
01:29:59,000 --> 01:30:07,000
就是字体渲染引擎这套东西还是在这个就是拉丁语系的这个工程师的指导下开发的吧

2439
01:30:07,000 --> 01:30:07,000
应该

2440
01:30:08,000 --> 01:30:09,000
感觉上是

2441
01:30:09,000 --> 01:30:10,000
是的

2442
01:30:10,000 --> 01:30:16,000
就比较看着有些节就有些选择看在那个母语的人士看起来挺奇怪

2443
01:30:16,000 --> 01:30:17,000
但是也没办法

2444
01:30:17,000 --> 01:30:18,000
因为当时条件有限

2445
01:30:18,000 --> 01:30:19,000
没有那么多人才

2446
01:30:19,000 --> 01:30:19,000
所以

2447
01:30:19,000 --> 01:30:22,000
去弄的现在情况就不一样了

2448
01:30:22,000 --> 01:30:23,000
大家别的不说

2449
01:30:23,000 --> 01:30:26,000
我看现在各个这个什么手机厂都在搞自定义字体了

2450
01:30:26,000 --> 01:30:28,000
还挺厉害的

2451
01:30:28,000 --> 01:30:28,000
对

2452
01:30:28,000 --> 01:30:29,000
现在已经有很多

2453
01:30:29,000 --> 01:30:32,000
从老罗开始吧

2454
01:30:32,000 --> 01:30:36,000
就是从发布一个新系统的时候会把字体拿出来说

2455
01:30:36,000 --> 01:30:38,000
这是我们的一个特征

2456
01:30:38,000 --> 01:30:38,000
对

2457
01:30:38,000 --> 01:30:40,000
这个也挺挺好

2458
01:30:40,000 --> 01:30:42,000
但是还是那个问题

2459
01:30:42,000 --> 01:30:45,000
就是这不同的哲学还是有不同的结论的

2460
01:30:45,000 --> 01:30:46,000
就包括现在刚才武桃提到一个

2461
01:30:46,000 --> 01:30:49,000
就是说在不同的就是为做自己设计的时候

2462
01:30:49,000 --> 01:30:52,000
你也有这种不同的应用场景的考虑嘛

2463
01:30:52,000 --> 01:30:56,000
过去会说是一个什么显示字体和这个打印字体的两种情况也不一样

2464
01:30:56,000 --> 01:30:57,000
对吧

2465
01:30:57,000 --> 01:30:58,000
打印的话

2466
01:30:58,000 --> 01:31:00,000
你用你用什么方式打印

2467
01:31:00,000 --> 01:31:03,000
其实我觉得本质上还是说一个分辨率的问题吧

2468
01:31:03,000 --> 01:31:05,000
就是说因为打印的话

2469
01:31:05,000 --> 01:31:08,000
不管用当时这种就激光还是喷抹

2470
01:31:08,000 --> 01:31:11,000
他的那个就所谓的就是分辨率

2471
01:31:11,000 --> 01:31:15,000
dpi 或者是平面上 pvi 还是有一个数量级的差异

2472
01:31:15,000 --> 01:31:17,000
只是说现在几千的的吧

2473
01:31:17,000 --> 01:31:18,000
dpi 都几千几千

2474
01:31:18,000 --> 01:31:21,000
dpi 一般是最低的也要三也有 300 嘛

2475
01:31:21,000 --> 01:31:23,000
就是有有 300 个 dot

2476
01:31:23,000 --> 01:31:25,000
但是他那个算法不太一样

2477
01:31:25,000 --> 01:31:28,000
因为他是因为比如他喷墨的话就打黑白的情况

2478
01:31:28,000 --> 01:31:30,000
喷墨的墨点不一样

2479
01:31:30,000 --> 01:31:31,000
喷墨的墨点超小

2480
01:31:31,000 --> 01:31:32,000
因为他他有个这个问题

2481
01:31:32,000 --> 01:31:34,000
就是他没有办法调浓度

2482
01:31:34,000 --> 01:31:38,000
就是他不可能说这个墨水有有浓度的深浅

2483
01:31:38,000 --> 01:31:39,000
他只有一种浓度的墨

2484
01:31:39,000 --> 01:31:43,000
但怎么实现这个所谓的这个灰度呢

2485
01:31:43,000 --> 01:31:46,000
就是说靠那个把那个墨小墨点分配的

2486
01:31:46,000 --> 01:31:50,000
这个在单位那个面积上分打的多点还是少点的问题嘛

2487
01:31:50,000 --> 01:31:55,000
那么这个时候 dpi 就和 ppi 有一个最本质的区别

2488
01:31:55,000 --> 01:31:56,000
就是一个像素点

2489
01:31:56,000 --> 01:31:58,000
他其实理论上可以显示

2490
01:31:58,000 --> 01:32:01,000
如果只考虑这个就灰阶的话

2491
01:32:01,000 --> 01:32:03,000
也有 256 种灰度嘛

2492
01:32:03,000 --> 01:32:05,000
就从最黑到最白嘛

2493
01:32:05,000 --> 01:32:11,000
但是你在一个一个同样的小方块面上面打印这个墨点的话

2494
01:32:11,000 --> 01:32:15,000
他其实只能说喷 10 个墨点和 1000 个墨点这种区别

2495
01:32:15,000 --> 01:32:16,000
所以他就有一个最本质的区别

2496
01:32:16,000 --> 01:32:20,000
所以这个时候 dpi 并不能完全和 ppi 的计量方式等同

2497
01:32:20,000 --> 01:32:24,000
但单看数字的话确实通常是要高一个数量级了

2498
01:32:24,000 --> 01:32:25,000
像 1200 啊

2499
01:32:25,000 --> 01:32:27,000
1800 这都还比较常见的嘛

2500
01:32:28,000 --> 01:32:31,000
打印机的那个点都都是几千几千

2501
01:32:31,000 --> 01:32:33,000
对啊 3600 的高级就是专业打印机

2502
01:32:33,000 --> 01:32:35,000
3000 多以上也是很正常的

2503
01:32:35,000 --> 01:32:40,000
所以但现在说我现在看有些这个 retina 的这种屏幕

2504
01:32:40,000 --> 01:32:46,000
现在比如说你看那个 iphone 6 加就那个大号那个他不是说有是是一个三倍的的吗

2505
01:32:46,000 --> 01:32:52,000
三倍的话你再算上他的一个亚像素就是每个每个像素点他是红蓝绿三个颜色嘛

2506
01:32:52,000 --> 01:32:55,000
对然后你再把亚像素也算进去的话

2507
01:32:55,000 --> 01:33:03,000
他的那个实际的呃 ppi 其实可以在很多程度上和那个 dpi 有就在数量级上是可以相提并论的

2508
01:33:03,000 --> 01:33:04,000
接近已经刷屏了

2509
01:33:04,000 --> 01:33:10,000
对对对这个时候就很多人就不是老是说这个那个什么 ipad 的那个高级就是 retina ipad 出来之后

2510
01:33:10,000 --> 01:33:12,000
大家说哇这个就是什么

2511
01:33:12,000 --> 01:33:15,000
就是就是大高精度

2512
01:33:16,000 --> 01:33:24,000
就已经刷的那种彩色杂质封面的那种那种显示质量就是因为这个分辨率达到了一个新的量级之后产生的一个质变

2513
01:33:25,000 --> 01:33:28,000
就终于感觉是是硬在屏幕上的东西

2514
01:33:28,000 --> 01:33:30,000
所以我觉得可能现在越往后走哈

2515
01:33:30,000 --> 01:33:32,000
而且而且现在还有一个新的趋势

2516
01:33:32,000 --> 01:33:35,000
就是那个我们讲那个 vr er 那个眼镜嘛

2517
01:33:35,000 --> 01:33:39,000
他为了实现那个没有没有网格的那种颗粒感

2518
01:33:39,000 --> 01:33:41,000
他也要不断去提高那个像素嘛

2519
01:33:41,000 --> 01:33:44,000
就是以后还就是 PPi 还会往上涨

2520
01:33:44,000 --> 01:33:46,000
可能一一两个数量级

2521
01:33:46,000 --> 01:33:47,000
这个时候我们再看就不存在

2522
01:33:47,000 --> 01:33:48,000
可能是说

2523
01:33:48,000 --> 01:33:50,000
以后的屏幕的质量

2524
01:33:50,000 --> 01:33:52,000
肯定是要高于这个纸张了

2525
01:33:52,000 --> 01:33:54,000
因为纸张它还是不是不够完美

2526
01:33:54,000 --> 01:33:56,000
它的那个精度来讲

2527
01:33:56,000 --> 01:33:58,000
因为你通过的墨汁去控制也好

2528
01:33:58,000 --> 01:34:01,000
还有那个墨水的静染的一个问题

2529
01:34:01,000 --> 01:34:02,000
它可能还不如以后的那些

2530
01:34:02,000 --> 01:34:04,000
超高分辨率的屏幕

2531
01:34:04,000 --> 01:34:06,000
所以我对未来的那种显示技术

2532
01:34:06,000 --> 01:34:08,000
还是挺看好的

2533
01:34:08,000 --> 01:34:11,000
但是我们追逐了这么多年

2534
01:34:11,000 --> 01:34:13,000
终于好不容易才赶上

2535
01:34:13,000 --> 01:34:15,000
这个纸质的精度

2536
01:34:15,000 --> 01:34:15,000
对

2537
01:34:15,000 --> 01:34:18,000
我们现在才赶上

2538
01:34:18,000 --> 01:34:19,000
我想问一下

2539
01:34:19,000 --> 01:34:23,000
你们用的 OS X 的最早的版本是 10.7

2540
01:34:23,000 --> 01:34:27,000
我应该是 10.5 的时候开始用的

2541
01:34:27,000 --> 01:34:28,000
10.5 10.6 的时候

2542
01:34:28,000 --> 01:34:31,000
你们还记得早年

2543
01:34:31,000 --> 01:34:33,000
就是 OS X 他们在抓屏的时候

2544
01:34:33,000 --> 01:34:35,000
在 screen capture 的时候

2545
01:34:35,000 --> 01:34:37,000
最默认是

2546
01:34:37,000 --> 01:34:39,000
现在是默认是 PNG 格式是吧

2547
01:34:39,000 --> 01:34:41,000
不 它还是那个 TIFF

2548
01:34:41,000 --> 01:34:43,000
What? PNG 吧

2549
01:34:43,000 --> 01:34:45,000
反正我用

2550
01:34:45,000 --> 01:34:45,000
是

2551
01:34:45,000 --> 01:34:45,000
是

2552
01:34:45,000 --> 01:34:46,000
,是 png

2553
01:34:46,000 --> 01:34:48,000
control shift 4 的时候会出来

2554
01:34:48,000 --> 01:34:50,000
那个你存一下

2555
01:34:50,000 --> 01:34:52,000
它保存下来默认是 TIFF

2556
01:34:52,000 --> 01:34:54,000
你要再你要手工选一下

2557
01:34:54,000 --> 01:34:55,000
它才会转成 PNG 的

2558
01:34:55,000 --> 01:34:58,000
不是不是默认的是 PNG

2559
01:34:58,000 --> 01:34:59,000
What?

2560
01:34:59,000 --> 01:34:59,000
哪里选?

2561
01:34:59,000 --> 01:35:00,000
默认是 PNG

2562
01:35:00,000 --> 01:35:02,000
你开那个 grab 吗

2563
01:35:02,000 --> 01:35:04,000
你开 grab 你抓屏的时候

2564
01:35:04,000 --> 01:35:07,000
它就是 grab ab 那个程序嘛

2565
01:35:07,000 --> 01:35:08,000
你拍完之后的话

2566
01:35:08,000 --> 01:35:09,000
它保存的时候

2567
01:35:09,000 --> 01:35:11,000
我应该默认的时候应该是

2568
01:35:11,000 --> 01:35:12,000
这个时候是不能选 PNG

2569
01:35:12,000 --> 01:35:13,000
那个可以选

2570
01:35:13,000 --> 01:35:14,000
那个可以选

2571
01:35:14,000 --> 01:35:15,000
不能选 PNG

2572
01:35:15,000 --> 01:35:15,000
但是

2573
01:35:15,000 --> 01:35:18,000
你可以试一下

2574
01:35:18,000 --> 01:35:20,000
我比较确定这个

2575
01:35:20,000 --> 01:35:24,000
What?

2576
01:35:24,000 --> 01:35:27,000
你说用 grab 程序的截图的时候是

2577
01:35:27,000 --> 01:35:28,000
对

2578
01:35:28,000 --> 01:35:29,000
存

2579
01:35:29,000 --> 01:35:31,000
但你用那个快捷键就是用的 grab 吗

2580
01:35:31,000 --> 01:35:32,000
对

2581
01:35:32,000 --> 01:35:34,000
然后它这个时候是 TIF 是不能改的

2582
01:35:34,000 --> 01:35:38,000
你得存完之后再用那个 preview 打开

2583
01:35:38,000 --> 01:35:40,000
然后再另存为 PNG 格式

2584
01:35:40,000 --> 01:35:41,000
对

2585
01:35:41,000 --> 01:35:42,000
ok

2586
01:35:42,000 --> 01:35:45,000
这个就是我最最最最脑火的一个选择

2587
01:35:45,000 --> 01:35:47,000
所以后来我的解决方案就更简单

2588
01:35:47,000 --> 01:35:48,000
就绕过这一条了

2589
01:35:48,000 --> 01:35:51,000
因为 grab 它有两种应用方式

2590
01:35:51,000 --> 01:35:52,000
一个是保存成文件

2591
01:35:52,000 --> 01:35:55,000
另外一个是保存在内存里面

2592
01:35:55,000 --> 01:35:56,000
保存内存里面之后呢

2593
01:35:56,000 --> 01:35:58,000
就是 windows 剪贴板吧

2594
01:35:58,000 --> 01:35:59,000
对没错

2595
01:35:59,000 --> 01:36:02,000
然后这个时候你再开一个空白的 preview

2596
01:36:02,000 --> 01:36:04,000
然后再按粘贴的话

2597
01:36:04,000 --> 01:36:07,000
它会自动把那个粘成一个到 preview 里面去

2598
01:36:07,000 --> 01:36:08,000
那个那个截图

2599
01:36:08,000 --> 01:36:10,000
就是说你在这个时候点保存

2600
01:36:10,000 --> 01:36:11,000
就有 PNG 可以选

2601
01:36:11,000 --> 01:36:12,000
就可以绕过一次

2602
01:36:12,000 --> 01:36:14,000
先存为 TIFF

2603
01:36:14,000 --> 01:36:15,000
然后再转去那个 png 格式

2604
01:36:15,000 --> 01:36:18,000
就会绕成 png 这么一个尴尬的这个状况

2605
01:36:18,000 --> 01:36:20,000
所以你在 mac 上面截图方法和 windows

2606
01:36:20,000 --> 01:36:23,000
和 windows 上人的截图方法是一样的

2607
01:36:23,000 --> 01:36:24,000
哎没错

2608
01:36:24,000 --> 01:36:27,000
哈哈哈没错

2609
01:36:27,000 --> 01:36:31,000
我为什么问这个是因为就在普通的那个 gui 里面

2610
01:36:31,000 --> 01:36:34,000
就大家是默认它是自动会出 ping 嘛

2611
01:36:34,000 --> 01:36:36,000
就是 png 文件

2612
01:36:36,000 --> 01:36:39,000
然后在早期的那个 os 10 里面

2613
01:36:39,000 --> 01:36:42,000
它默认保存是一个 pdf 文件

2614
01:36:42,000 --> 01:36:43,000
嗯

2615
01:36:43,000 --> 01:36:44,000
对

2616
01:36:44,000 --> 01:36:44,000
ok

2617
01:36:44,000 --> 01:36:45,000
pdf 这个事情

2618
01:36:45,000 --> 01:36:46,000
也要可以讲一下

2619
01:36:46,000 --> 01:36:47,000
如果我没记错的话

2620
01:36:47,000 --> 01:36:48,000
对

2621
01:36:48,000 --> 01:36:51,000
因为当时整个那个就是 mac 的

2622
01:36:51,000 --> 01:36:55,000
而且 os 10 的那个 gui 最开始是基于 pdf 同一套技术来做的

2623
01:36:55,000 --> 01:36:56,000
对

2624
01:36:56,000 --> 01:36:58,000
它就等于我是我是想说的这一点

2625
01:36:58,000 --> 01:37:01,000
就是说从 os 10 开始做开始

2626
01:37:01,000 --> 01:37:08,000
它就等于是想把这个所有的这个 GU 这个 UI 印刷在屏幕上

2627
01:37:08,000 --> 01:37:09,000
没错

2628
01:37:09,000 --> 01:37:11,000
它是用一套用于

2629
01:37:11,000 --> 01:37:14,000
描述打印机的方式

2630
01:37:14,000 --> 01:37:14,000
对

2631
01:37:14,000 --> 01:37:17,000
屏幕显示来做屏幕显示的

2632
01:37:17,000 --> 01:37:17,000
对

2633
01:37:17,000 --> 01:37:19,000
所以呢它整个引擎

2634
01:37:19,000 --> 01:37:24,000
但当年它我们应该说我们 mac 的那个文字引擎它是用什么 core text

2635
01:37:24,000 --> 01:37:24,000
嗯

2636
01:37:24,000 --> 01:37:25,000
text 是吧

2637
01:37:25,000 --> 01:37:25,000
是怎么样

2638
01:37:25,000 --> 01:37:26,000
对

2639
01:37:26,000 --> 01:37:27,000
对

2640
01:37:27,000 --> 01:37:28,000
对吧

2641
01:37:28,000 --> 01:37:37,000
但是从 os 10 最早开始它的这个渲染的这个思想就是要把整个 UI 印刷在屏幕上

2642
01:37:37,000 --> 01:37:37,000
对

2643
01:37:38,000 --> 01:37:41,000
对这个这个有个挺好的一个一个一个结果

2644
01:37:41,000 --> 01:37:43,000
就是 pdf 这个格式在 os 10 上制作了一个课程之后呢

2645
01:37:43,000 --> 01:37:45,000
这个是在 os 10 上支持的相当好

2646
01:37:45,000 --> 01:37:47,000
它是原生支持

2647
01:37:47,000 --> 01:37:48,000
对对对不像 windows

2648
01:37:48,000 --> 01:37:49,000
大家开个 pdf

2649
01:37:49,000 --> 01:37:56,000
现在好像 windows 10 有终于有那个原生的呃显示那个 pdf 文件的一个支持了

2650
01:37:56,000 --> 01:38:01,000
我记得之前的版本都还在在对装一个那个叫什么 acrobat reader 吗

2651
01:38:01,000 --> 01:38:02,000
acrobat

2652
01:38:02,000 --> 01:38:04,000
对或者是大家国内用的那个叫

2653
01:38:04,000 --> 01:38:05,000
福星你知道吗

2654
01:38:05,000 --> 01:38:06,000
foxit

2655
01:38:06,000 --> 01:38:08,000
啊啊

2656
01:38:08,000 --> 01:38:09,000
好吧

2657
01:38:09,000 --> 01:38:13,000
呃那个那个那个一个 pdf 有东西很多人用因为那个比较轻量级嘛

2658
01:38:13,000 --> 01:38:13,000
嗯

2659
01:38:13,000 --> 01:38:14,000
acrobat reader 非常重嘛

2660
01:38:14,000 --> 01:38:16,000
嗯

2661
01:38:16,000 --> 01:38:23,000
那不像在 os 10 上那个 preview 这个程序就看图看 pdf 通还有那个叫 eps

2662
01:38:23,000 --> 01:38:27,000
eps 还有 ps 就这几个都是都是同同源的一个技术嘛

2663
01:38:27,000 --> 01:38:29,000
都可以直接显示对呀

2664
01:38:29,000 --> 01:38:29,000
对呀

2665
01:38:29,000 --> 01:38:33,000
非常方便就其实都是都是 ps post script 的曲线嘛

2666
01:38:33,000 --> 01:38:34,000
对对对

2667
01:38:34,000 --> 01:38:37,000
啊对那套叫做 display post script

2668
01:38:37,000 --> 01:38:39,000
嗯

2669
01:38:39,000 --> 01:38:42,000
然后这但这也就扯到之前那个字库文件的问题了

2670
01:38:42,000 --> 01:38:43,000
就字体文件了

2671
01:38:43,000 --> 01:38:44,000
文件的问题了

2672
01:38:44,000 --> 01:38:46,000
终于扯回来了我说

2673
01:38:46,000 --> 01:38:49,000
我好不容易把你们拽回来了

2674
01:38:49,000 --> 01:38:52,000
对因为就是所谓的那种向量字库的话

2675
01:38:52,000 --> 01:38:55,000
它有两种通用的呃比较常用的格式

2676
01:38:55,000 --> 01:38:57,000
一种是叫做 true type

2677
01:38:57,000 --> 01:38:59,000
还有一种叫做 open type

2678
01:38:59,000 --> 01:38:59,000
对吧

2679
01:39:00,000 --> 01:39:00,000
嗯

2680
01:39:00,000 --> 01:39:03,000
然后如果我没记错的话

2681
01:39:03,000 --> 01:39:06,000
open type 是 adobe 和苹果当时搞的

2682
01:39:08,000 --> 01:39:13,000
呃 true type 是苹果等下是微软和苹果

2683
01:39:13,000 --> 01:39:15,000
搞的 open type 是

2684
01:39:15,000 --> 01:39:15,000
啊 adobe 搞的

2685
01:39:15,000 --> 01:39:17,000
微软和 adobe 搞的

2686
01:39:17,000 --> 01:39:19,000
open type 当年就苹果没参加

2687
01:39:19,000 --> 01:39:20,000
open type 对对对

2688
01:39:20,000 --> 01:39:22,000
open type 应该没有苹果是不是

2689
01:39:22,000 --> 01:39:22,000
嗯

2690
01:39:22,000 --> 01:39:23,000
ok 对对对

2691
01:39:23,000 --> 01:39:25,000
open type 苹果没参加

2692
01:39:25,000 --> 01:39:28,000
对其实本质上我觉得大头都是在 adobe 那一边

2693
01:39:28,000 --> 01:39:30,000
他是出版界的老大嘛

2694
01:39:30,000 --> 01:39:32,000
他说什么才是才才能算

2695
01:39:32,000 --> 01:39:36,000
没有最早就是在很久很久以前就是都是 adobe 来做嘛

2696
01:39:36,000 --> 01:39:37,000
对

2697
01:39:37,000 --> 01:39:41,000
然后为了对抗 adobe 苹果和微软这两家居然结合起来一起做出版公司的公司嘛

2698
01:39:41,000 --> 01:39:45,000
居然结合起来一起做出了一个 true type 去对抗 adobe

2699
01:39:46,000 --> 01:39:48,000
所以这是第一次字体大战

2700
01:39:48,000 --> 01:39:51,000
那那个 true typeopen type 的本质区别是什么

2701
01:39:51,000 --> 01:39:52,000
我一直没太搞明白

2702
01:39:52,000 --> 01:39:54,000
open type 是 true type 的一个扩展啊

2703
01:39:54,000 --> 01:39:56,000
没记错

2704
01:39:56,000 --> 01:39:58,000
对 open type 本质上其实就是 true type

2705
01:39:58,000 --> 01:40:00,000
除非有多一些其他的支持

2706
01:40:02,000 --> 01:40:02,000
就是 open type

2707
01:40:02,000 --> 01:40:05,000
他他我们说 open type 有两种意思

2708
01:40:05,000 --> 01:40:09,000
就是那个字体的封装格式和他是一个封装的东西

2709
01:40:09,000 --> 01:40:10,000
还是说他那个轮廓

2710
01:40:10,000 --> 01:40:11,000
是里面的内容

2711
01:40:11,000 --> 01:40:12,000
open type

2712
01:40:12,000 --> 01:40:13,000
对对

2713
01:40:13,000 --> 01:40:14,000
如果说狭义的讲的话

2714
01:40:14,000 --> 01:40:15,000
就 true type

2715
01:40:15,000 --> 01:40:19,000
true type 他个曲线是那个他是二次

2716
01:40:19,000 --> 01:40:19,000
贝塞尔

2717
01:40:19,000 --> 01:40:21,000
贝塞尔曲线

2718
01:40:21,000 --> 01:40:21,000
二次贝塞尔

2719
01:40:21,000 --> 01:40:25,000
然后那个 open type 就是以前的 ps 曲线嘛

2720
01:40:25,000 --> 01:40:27,000
就是三次贝塞尔曲线

2721
01:40:27,000 --> 01:40:29,000
就曲线他本身数学的描述方式是不一样的

2722
01:40:29,000 --> 01:40:31,000
这两种有什么优劣之分吗

2723
01:40:31,000 --> 01:40:33,000
二次和三次的贝塞尔曲线

2724
01:40:33,000 --> 01:40:34,000
有的

2725
01:40:34,000 --> 01:40:37,000
因为二次二次的曲线的话

2726
01:40:37,000 --> 01:40:39,000
他是一段曲线嘛

2727
01:40:39,000 --> 01:40:40,000
他起点和终点是一段曲线嘛

2728
01:40:40,000 --> 01:40:40,000
他起点和终点是一段曲线嘛

2729
01:40:40,000 --> 01:40:43,000
然后中间有个控制点来控制

2730
01:40:43,000 --> 01:40:45,000
你中间控制完左点或者完右点

2731
01:40:45,000 --> 01:40:47,000
那个曲线形状发生变化

2732
01:40:47,000 --> 01:40:49,000
这是 true type 的二次

2733
01:40:49,000 --> 01:40:51,000
那 ps 的

2734
01:40:51,000 --> 01:40:53,000
他是三次

2735
01:40:53,000 --> 01:40:55,000
他三次就是说除了起点终点外

2736
01:40:55,000 --> 01:40:57,000
他有两个控制点来

2737
01:40:57,000 --> 01:40:59,000
手柄来调那个曲线

2738
01:40:59,000 --> 01:41:02,000
所以三次的话

2739
01:41:02,000 --> 01:41:03,000
他那个点要更多

2740
01:41:03,000 --> 01:41:06,000
三次的精度不一定更好吗

2741
01:41:06,000 --> 01:41:09,000
三次的精度应该更好呀

2742
01:41:09,000 --> 01:41:10,000
三次的精度应该更好呀

2743
01:41:10,000 --> 01:41:10,000
所以就进行

2744
01:41:10,000 --> 01:41:14,000
经常会有比如说三次曲线转二次曲线和二次曲线转三次曲线的问题嘛

2745
01:41:14,000 --> 01:41:19,000
三次曲线的点会有损

2746
01:41:19,000 --> 01:41:22,000
三次转二次的时候会有损

2747
01:41:22,000 --> 01:41:25,000
因为三次他本来他用的点更多

2748
01:41:25,000 --> 01:41:28,000
二次只用点更少嘛

2749
01:41:28,000 --> 01:41:30,000
反过来二次转三次的时候

2750
01:41:30,000 --> 01:41:32,000
这个损失就会更少一点

2751
01:41:32,000 --> 01:41:33,000
应该没有损失

2752
01:41:33,000 --> 01:41:35,000
如果你把中间两个控制点放到同一个位置

2753
01:41:35,000 --> 01:41:37,000
就是等于是三次的曲线

2754
01:41:37,000 --> 01:41:40,000
但是表示二次的曲线的那个反

2755
01:41:40,000 --> 01:41:40,000
那个

2756
01:41:40,000 --> 01:41:42,000
同样的

2757
01:41:42,000 --> 01:41:43,000
同样的一个一个曲线嘛

2758
01:41:43,000 --> 01:41:48,000
对这是单纯从曲线的那个数量来来来说了

2759
01:41:48,000 --> 01:41:50,000
当然如果你还有其他的其他的那个参数

2760
01:41:50,000 --> 01:41:51,000
不一样

2761
01:41:51,000 --> 01:41:54,000
他也也也会影响到他这个转的这个压缩的问题

2762
01:41:54,000 --> 01:41:55,000
OK

2763
01:41:55,000 --> 01:41:55,000
好吧

2764
01:41:55,000 --> 01:41:59,000
所以现在常用的就是就出台不得比较多一点吗

2765
01:41:59,000 --> 01:42:00,000
就是 tdf 接位

2766
01:42:00,000 --> 01:42:03,000
windows 一般都用 windows 一般用出台比较多

2767
01:42:03,000 --> 01:42:05,000
而且 windows 他的出台不自体的

2768
01:42:05,000 --> 01:42:10,000
因为他会加很多很多大量的那个那个渲染提示

2769
01:42:10,000 --> 01:42:11,000
就是这个轻体信息

2770
01:42:11,000 --> 01:42:11,000
对

2771
01:42:11,000 --> 01:42:13,000
而 open type 呢

2772
01:42:13,000 --> 01:42:16,000
他们只他只是一个比较宽泛的一个这个心情

2773
01:42:16,000 --> 01:42:17,000
那就大概就是这样子

2774
01:42:17,000 --> 01:42:18,000
嗯

2775
01:42:18,000 --> 01:42:20,000
他就非常就是宽泛的一个形式

2776
01:42:20,000 --> 01:42:23,000
这还是跟应用场景不一样吗

2777
01:42:23,000 --> 01:42:25,000
让出台不的话一般是用于显示的吗

2778
01:42:25,000 --> 01:42:29,000
然后 open type 他那个一般因为就阿都比一般是做打印的东西的吗

2779
01:42:29,000 --> 01:42:30,000
嗯

2780
01:42:30,000 --> 01:42:32,000
windows 他知道也没有吧

2781
01:42:32,000 --> 01:42:35,000
就基本上在 open time 之前

2782
01:42:35,000 --> 01:42:37,000
mac 上面的字体机几乎也都是出台

2783
01:42:37,000 --> 01:42:40,000
就你拿来出台不得买

2784
01:42:40,000 --> 01:42:42,000
就是你如果你是一个设计评论设计师

2785
01:42:42,000 --> 01:42:44,000
你买的字体基本上也都是

2786
01:42:44,000 --> 01:42:49,000
我我我我我我我说说就是阿都比他出的那字体的那些 open type 字体

2787
01:42:49,000 --> 01:42:50,000
他没有很多很挺信息

2788
01:42:50,000 --> 01:42:51,000
是因为他没有必要做嘛

2789
01:42:51,000 --> 01:42:55,000
大家买他那个字体一般是用来专业用打印的吗

2790
01:42:55,000 --> 01:42:59,000
不是用来显示在这这是有一个有一个历史问题

2791
01:42:59,000 --> 01:43:00,000
就是首先是这样子的

2792
01:43:00,000 --> 01:43:03,000
都比最初的那个 postscript

2793
01:43:03,000 --> 01:43:05,000
这是他的专利技术

2794
01:43:05,000 --> 01:43:08,000
然后他在这个专利技术上开发了一种字体格式

2795
01:43:08,000 --> 01:43:09,000
叫 type one

2796
01:43:10,000 --> 01:43:14,000
嗯对这是就是阿都比最经典的 postscript 的技术

2797
01:43:14,000 --> 01:43:17,000
而且也是沿用到现在的一个最好的

2798
01:43:17,000 --> 01:43:20,000
包括像 open type 里面用的曲线信息

2799
01:43:20,000 --> 01:43:22,000
也是这个 type one 为基础的

2800
01:43:22,000 --> 01:43:26,000
那么大家拉的那个三次的但是都是 type one 呢

2801
01:43:26,000 --> 01:43:28,000
他是阿都比的这个私有专利

2802
01:43:28,000 --> 01:43:29,000
他是一个收费专利

2803
01:43:29,000 --> 01:43:31,000
如果你要用 type one 技术

2804
01:43:31,000 --> 01:43:34,000
你得给阿都比支付非常高昂的这个专利费

2805
01:43:34,000 --> 01:43:38,000
所以当时那个无论是微软还是 apple 都不想支付这笔钱

2806
01:43:38,000 --> 01:43:40,000
于是他们合作搞了一段

2807
01:43:40,000 --> 01:43:41,000
一个 true type

2808
01:43:41,000 --> 01:43:45,000
想来就是以不支付专利的方式

2809
01:43:45,000 --> 01:43:47,000
同时使用一个类似于阿都比的技术

2810
01:43:47,000 --> 01:43:48,000
为什么要这么搞呢

2811
01:43:48,000 --> 01:43:52,000
是因为其实当时阿都比还发布了应该是 type three 吧

2812
01:43:52,000 --> 01:43:53,000
我记不太清了

2813
01:43:53,000 --> 01:43:54,000
是 type three

2814
01:43:54,000 --> 01:43:55,000
还是 type four

2815
01:43:55,000 --> 01:43:57,000
他是一个嗯怎么说呢

2816
01:43:57,000 --> 01:43:59,000
他是阿都比的专利技术

2817
01:43:59,000 --> 01:43:59,000
同时呢

2818
01:43:59,000 --> 01:44:02,000
他是一个好像可以免费使用的

2819
01:44:02,000 --> 01:44:06,000
但是这个东西在屏幕上用来做这个

2820
01:44:06,000 --> 01:44:08,000
山格化的效果好像就不好

2821
01:44:08,000 --> 01:44:08,000
具体原因

2822
01:44:08,000 --> 01:44:10,000
我不是很清楚

2823
01:44:10,000 --> 01:44:13,000
而且据说他的那个山格化的效率很低

2824
01:44:13,000 --> 01:44:18,000
所以 apple 和那个 windows 才没有用这一套免费的技术啊

2825
01:44:18,000 --> 01:44:19,000
去搞了自己的东西

2826
01:44:19,000 --> 01:44:23,000
那么后来 windows 上留下了这么多的这个

2827
01:44:23,000 --> 01:44:24,000
true type 字体

2828
01:44:24,000 --> 01:44:27,000
都是因为他们最初使用了这样一套技术

2829
01:44:27,000 --> 01:44:28,000
同时呢

2830
01:44:28,000 --> 01:44:33,000
又设计了很多为这个 true type 优化过的这个字体

2831
01:44:33,000 --> 01:44:33,000
嗯

2832
01:44:33,000 --> 01:44:36,000
这个就要回到最初呃你们在讨论的那个问题

2833
01:44:36,000 --> 01:44:38,000
就是说究竟是二次曲线好

2834
01:44:38,000 --> 01:44:40,000
还是三次曲线好的问题

2835
01:44:40,000 --> 01:44:43,000
我个人觉得两种其实是没有差别的

2836
01:44:43,000 --> 01:44:46,000
因为如果说你给设计师的这个工具就是二次曲线的话

2837
01:44:46,000 --> 01:44:49,000
他就是能用这个工具画出一个完美

2838
01:44:49,000 --> 01:44:51,000
在他看来完美的一条曲线

2839
01:44:51,000 --> 01:44:54,000
但是如果你给他一个三次曲线的工具

2840
01:44:54,000 --> 01:44:57,000
那么他画出来的是三次曲线的完美的曲线

2841
01:44:57,000 --> 01:44:59,000
但是这两种曲线在互相转换的时候

2842
01:44:59,000 --> 01:45:01,000
如果这个转换程序不那么的好的话

2843
01:45:01,000 --> 01:45:03,000
就有可能会出一些问题

2844
01:45:03,000 --> 01:45:06,000
但通常来说这个数学问题并不难解决

2845
01:45:06,000 --> 01:45:10,000
所以我们市面上看到的一些 true type 字体的

2846
01:45:10,000 --> 01:45:11,000
这个曲线质量不好

2847
01:45:11,000 --> 01:45:16,000
多半是由于字体厂商故意将他们转的不怎么好的

2848
01:45:16,000 --> 01:45:18,000
有可能是故意转的不好

2849
01:45:18,000 --> 01:45:20,000
比如有人有人就说

2850
01:45:20,000 --> 01:45:24,000
国内某字体大厂是故意出了一套低质量的 true type 字体

2851
01:45:24,000 --> 01:45:30,000
以便他的那个 open type 字体可以卖出一个比较好的价值

2852
01:45:30,000 --> 01:45:34,000
可以卖专业字体和这种就非专业字体的这个区别定价

2853
01:45:34,000 --> 01:45:36,000
对对对对

2854
01:45:36,000 --> 01:45:37,000
哇太记贼了

2855
01:45:37,000 --> 01:45:37,000
这个

2856
01:45:40,000 --> 01:45:42,000
然后呢

2857
01:45:42,000 --> 01:45:44,000
open type 我们还说他还有一个封装的格式

2858
01:45:44,000 --> 01:45:47,000
他其实这个盒子那里面呢

2859
01:45:47,000 --> 01:45:50,000
他可以把 true type 曲线的东西装在这个盒子里面

2860
01:45:50,000 --> 01:45:53,000
最后包装出来也是一个 open type 字体

2861
01:45:53,000 --> 01:45:54,000
嗯

2862
01:45:54,000 --> 01:45:56,000
这跟和那个视频文件一样的嘛

2863
01:45:56,000 --> 01:45:57,000
对对

2864
01:45:57,000 --> 01:46:00,000
MKV 里面可以装各种各样的视频流音频流嘛

2865
01:46:00,000 --> 01:46:00,000
对

2866
01:46:00,000 --> 01:46:01,000
对

2867
01:46:01,000 --> 01:46:02,000
所以呢

2868
01:46:02,000 --> 01:46:05,000
就是曲线的描述方式和最后那个封装

2869
01:46:05,000 --> 01:46:07,000
封装格式是两个层次的东西

2870
01:46:07,000 --> 01:46:09,000
都可能是 open type

2871
01:46:09,000 --> 01:46:09,000
所以

2872
01:46:10,000 --> 01:46:11,000
这一点有点复杂

2873
01:46:11,000 --> 01:46:14,000
但是现在好像那些呃我看哈

2874
01:46:14,000 --> 01:46:17,000
就是就是 Adobe 现在也有也有在卖那些所谓的专业字体嘛

2875
01:46:17,000 --> 01:46:20,000
他们自己卖的好像基本上还是以 open type 封装为主

2876
01:46:20,000 --> 01:46:22,000
因为 open type 这些比较高阶的特性

2877
01:46:22,000 --> 01:46:25,000
什么什么 optical 那些乱七八糟的

2878
01:46:25,000 --> 01:46:25,000
嗯

2879
01:46:25,000 --> 01:46:27,000
高级特性

2880
01:46:27,000 --> 01:46:28,000
对他有很多 feature

2881
01:46:28,000 --> 01:46:28,000
有很多

2882
01:46:28,000 --> 01:46:30,000
叫什么特征功能嘛

2883
01:46:30,000 --> 01:46:32,000
这个好像 true type 好像就

2884
01:46:32,000 --> 01:46:34,000
暂时好像支持不了吧

2885
01:46:34,000 --> 01:46:37,000
对因为 true type 的规范里面没有那些数据

2886
01:46:37,000 --> 01:46:40,000
就其实他们都是一张张表了

2887
01:46:40,000 --> 01:46:41,000
对对对

2888
01:46:41,000 --> 01:46:42,000
叫 table

2889
01:46:42,000 --> 01:46:42,000
对嗯

2890
01:46:42,000 --> 01:46:45,000
所以现在整个字体格式的嗯

2891
01:46:45,000 --> 01:46:49,000
整个字体格式大取向就是大家都是玩那个 open type 转

2892
01:46:49,000 --> 01:46:50,000
而且刚才也说呢

2893
01:46:50,000 --> 01:46:52,000
open type 他本来就是一个大盒子

2894
01:46:52,000 --> 01:46:56,000
那你原来那个轮廓呢 true type 轮廓曲线也可以装进去

2895
01:46:56,000 --> 01:46:59,000
那很多现在就是把那个曲线的轮廓先装进来

2896
01:46:59,000 --> 01:47:05,000
然后再加上 open type 特有的那些 feature 给封装成一个 open type 的一个字字库

2897
01:47:05,000 --> 01:47:06,000
很多人是这样做

2898
01:47:06,000 --> 01:47:08,000
但我们必须要再重复说一下

2899
01:47:08,000 --> 01:47:09,000
就是说呃

2900
01:47:09,000 --> 01:47:11,000
我们说的这个通常说这个 hinting 技术

2901
01:47:11,000 --> 01:47:15,000
也就是专指 windows 的那一套 hinting 技术

2902
01:47:15,000 --> 01:47:17,000
他是只对 true type 有效的

2903
01:47:17,000 --> 01:47:21,000
而我们说的在这个 post script 上做的这个 hint

2904
01:47:21,000 --> 01:47:25,000
这个 hinting 跟 true type 的 hinting 完全不是一回事

2905
01:47:25,000 --> 01:47:28,000
就虽然他们的名字都叫 hinting 了

2906
01:47:28,000 --> 01:47:29,000
但是对

2907
01:47:29,000 --> 01:47:34,000
但是这个 post script 的这个 hinting 是一个比那个 true type hinting 要微弱的多的

2908
01:47:34,000 --> 01:47:38,000
而且通常可能是在打印设备上才有效的

2909
01:47:38,000 --> 01:47:39,000
我不是很清楚

2910
01:47:39,000 --> 01:47:42,000
总之他们完全不是一个量级的这样一个效果

2911
01:47:42,000 --> 01:47:44,000
嗯哼嗯哼

2912
01:47:44,000 --> 01:47:51,000
他这里要可能不得不提一下那个不同的操作系统的那个他怎么去

2913
01:47:51,000 --> 01:47:53,000
就是他那个叫做渲染引擎的区别了

2914
01:47:53,000 --> 01:47:56,000
这个好像很古老很古老

2915
01:47:56,000 --> 01:48:01,000
以前我们我们还在那个 apple first 的时候有有尝试过写这么一篇系列

2916
01:48:01,000 --> 01:48:03,000
但是后来没有没有做成

2917
01:48:03,000 --> 01:48:05,000
因为实在是太多技术是要弄了

2918
01:48:05,000 --> 01:48:06,000
太空了

2919
01:48:06,000 --> 01:48:07,000
巨大的

2920
01:48:09,000 --> 01:48:12,000
我 windows 和 mac 不一样

2921
01:48:12,000 --> 01:48:14,000
然后各个浏览浏览器不一样

2922
01:48:14,000 --> 01:48:17,000
然后同样浏览器在不同的系统

2923
01:48:17,000 --> 01:48:18,000
对啊对啊对啊

2924
01:48:18,000 --> 01:48:20,000
这个不同版本还不一样

2925
01:48:20,000 --> 01:48:21,000
都疯掉了

2926
01:48:21,000 --> 01:48:24,000
就而且这个东西也在不同的就还在变化中

2927
01:48:24,000 --> 01:48:30,000
比如说那个像微软的那套他们叫做 clear type 的技术也在不断的每一个版本的 windows

2928
01:48:30,000 --> 01:48:33,000
他在不断的优化去发的更新的版本嘛

2929
01:48:33,000 --> 01:48:38,000
还有像那个苹果的什么 cortex 那套也是在不断的变化

2930
01:48:38,000 --> 01:48:39,000
他那个叫什么 aat 吧

2931
01:48:39,000 --> 01:48:43,000
apple advanced typography 那个那个那个渲染器

2932
01:48:43,000 --> 01:48:47,000
那个比较对那个就最最开始是 os 身上是搭载的那个嘛

2933
01:48:47,000 --> 01:48:50,000
后来像什么 cortex 啊又又又开始变了

2934
01:48:50,000 --> 01:48:52,000
就是也不是一个静态的东西

2935
01:48:52,000 --> 01:48:53,000
就很难去讨论它

2936
01:48:53,000 --> 01:48:55,000
嗯

2937
01:48:55,000 --> 01:48:59,000
但我不知道那个安卓和 ios 上面是怎么弄的

2938
01:48:59,000 --> 01:49:01,000
从来没有没见人讲过

2939
01:49:01,000 --> 01:49:05,000
但是基本上 ios 就是就成继承这个

2940
01:49:05,000 --> 01:49:08,000
对啊

2941
01:49:08,000 --> 01:49:08,000
ok

2942
01:49:08,000 --> 01:49:09,000
那安卓怎么一样

2943
01:49:09,000 --> 01:49:10,000
我不知道

2944
01:49:10,000 --> 01:49:12,000
因为安卓他就很奇怪

2945
01:49:12,000 --> 01:49:18,000
因为安卓他不是基于之前的就不是基于这两个 windows 和 stain 的嘛

2946
01:49:18,000 --> 01:49:21,000
他应该是 lindex 来的一套什么技术改的吧

2947
01:49:21,000 --> 01:49:22,000
我不太清楚

2948
01:49:23,000 --> 01:49:28,000
其实 lindex 上面的屏幕显示可以调的部分

2949
01:49:28,000 --> 01:49:29,000
更多

2950
01:49:29,000 --> 01:49:34,000
在 clear type 出现之前就有好几种

2951
01:49:34,000 --> 01:49:37,000
这就基本的四种一种是完全不要

2952
01:49:37,000 --> 01:49:38,000
一种是

2953
01:49:39,000 --> 01:49:41,000
什么使用简单的 hint

2954
01:49:41,000 --> 01:49:44,000
对对对轻微重度和全什么 full hint

2955
01:49:45,000 --> 01:49:51,000
对我相信对这套其实应该也是也是一个比较值得研究一下的话题

2956
01:49:51,000 --> 01:49:53,000
只不过我们在做

2957
01:49:53,000 --> 01:49:57,000
lindex 上面那个常用的那个渲染引擎叫什么来的名字我都忘掉

2958
01:49:57,000 --> 01:50:01,000
以前用那个 ubuntu 做桌面的时候还研究过一段时间

2959
01:50:02,000 --> 01:50:02,000
嗯

2960
01:50:02,000 --> 01:50:07,000
这这个最重要的是它跟那个呃发行板是相关的

2961
01:50:07,000 --> 01:50:09,000
对你要用一些那个

2962
01:50:09,000 --> 01:50:10,000
呃

2963
01:50:10,000 --> 01:50:11,000
嗯

2964
01:50:11,000 --> 01:50:17,000
非 gnome 的嗯嗯嗯对就这个这跟 gnome 有关

2965
01:50:17,000 --> 01:50:18,000
就你用 qt 的话

2966
01:50:18,000 --> 01:50:19,000
qt 字就有一套

2967
01:50:19,000 --> 01:50:21,000
然后用 gnome 的话

2968
01:50:21,000 --> 01:50:22,000
gnome 有一套对

2969
01:50:22,000 --> 01:50:27,000
然后他们全都是就现在就对那个 lindex 的显示

2970
01:50:27,000 --> 01:50:29,000
显示是一个非常巨大的可能

2971
01:50:29,000 --> 01:50:32,000
首先你可能底层有一个 xwindows

2972
01:50:32,000 --> 01:50:37,000
然后 xwindows 完全不去理会 hint 或者是什么啊

2973
01:50:37,000 --> 01:50:37,000
呃

2974
01:50:37,000 --> 01:50:38,000
呃

2975
01:50:38,000 --> 01:50:38,000
呃

2976
01:50:38,000 --> 01:50:38,000
呃

2977
01:50:38,000 --> 01:50:38,000
呃

2978
01:50:38,000 --> 01:50:38,000
呃

2979
01:50:38,000 --> 01:50:38,000
呃

2980
01:50:38,000 --> 01:50:39,000
呃

2981
01:50:39,000 --> 01:50:39,000
呃

2982
01:50:39,000 --> 01:50:39,000
呃

2983
01:50:39,000 --> 01:50:39,000
呃

2984
01:50:39,000 --> 01:50:39,000
呃

2985
01:50:39,000 --> 01:50:39,000
呃

2986
01:50:39,000 --> 01:50:40,000
呃

2987
01:50:40,000 --> 01:50:40,000
呃

2988
01:50:40,000 --> 01:50:40,000
呃

2989
01:50:40,000 --> 01:50:40,000
呃

2990
01:50:40,000 --> 01:50:40,000
呃

2991
01:50:40,000 --> 01:50:40,000
呃

2992
01:50:40,000 --> 01:50:40,000
呃

2993
01:50:40,000 --> 01:50:40,000
呃

2994
01:50:40,000 --> 01:50:40,000
呃

2995
01:50:40,000 --> 01:50:41,000
呃

2996
01:50:41,000 --> 01:50:41,000
呃

2997
01:50:41,000 --> 01:50:41,000
呃

2998
01:50:41,000 --> 01:50:41,000
呃

2999
01:50:41,000 --> 01:50:45,000
然后你在 xwindows 上的基础上有很多人做出不同的这个渲染引擎来

3000
01:50:45,000 --> 01:50:47,000
然后每个渲染引擎也有自己的策略

3001
01:50:47,000 --> 01:50:50,000
所以这个是在 lindex 这边是不能以操作性的话论的

3002
01:50:50,000 --> 01:50:54,000
而是要一发行版和那个呃

3003
01:50:55,000 --> 01:50:57,000
窗口管理器呃

3004
01:50:57,000 --> 01:51:00,000
具体侵攻具体讨论的对哦

3005
01:51:00,000 --> 01:51:02,000
天呐对对这是巨大的巨大

3006
01:51:03,000 --> 01:51:05,000
果然是一辆好坦克

3007
01:51:07,000 --> 01:51:07,000
好了

3008
01:51:07,000 --> 01:51:08,000
现在我们键盘上打了几个

3009
01:51:08,000 --> 01:51:09,000
器材

3010
01:51:09,000 --> 01:51:09,000
打了几个字

3011
01:51:09,000 --> 01:51:10,000
然后呢

3012
01:51:10,000 --> 01:51:13,000
通过我们的建位的输入法

3013
01:51:13,000 --> 01:51:13,000
转出来

3014
01:51:13,000 --> 01:51:18,000
现在再通过调用我们的字库文件

3015
01:51:18,000 --> 01:51:18,000
终于经

3016
01:51:18,000 --> 01:51:20,000
然后还有炫耀

3017
01:51:20,000 --> 01:51:21,000
炫耀跳过

3018
01:51:21,000 --> 01:51:22,000
终于显示在屏幕上

3019
01:51:22,000 --> 01:51:24,000
对

3020
01:51:24,000 --> 01:51:26,000
然后终于显示在屏幕上了

3021
01:51:26,000 --> 01:51:26,000
对

3022
01:51:26,000 --> 01:51:28,000
这个过程还是忽略了很多东西

3023
01:51:28,000 --> 01:51:29,000
比如说那个

3024
01:51:29,000 --> 01:51:34,000
比如说那个

3025
01:51:34,000 --> 01:51:36,000
意义上面加一撇的发育字母

3026
01:51:36,000 --> 01:51:37,000
它可能有好几种

3027
01:51:37,000 --> 01:51:38,000
组合的问题

3028
01:51:38,000 --> 01:51:40,000
可能有好几种组合的方式

3029
01:51:40,000 --> 01:51:40,000
对

3030
01:51:40,000 --> 01:51:42,000
没有没有

3031
01:51:42,000 --> 01:51:43,000
这还涉及到那个

3032
01:51:43,000 --> 01:51:44,000
Unicode 的事情

3033
01:51:44,000 --> 01:51:45,000
它有那个组合

3034
01:51:45,000 --> 01:51:45,000
对

3035
01:51:45,000 --> 01:51:47,000
先不是排版引擎的问题

3036
01:51:47,000 --> 01:51:48,000
而是一个

3037
01:51:48,000 --> 01:51:49,000
就是你怎么把

3038
01:51:49,000 --> 01:51:50,000
编码

3039
01:51:50,000 --> 01:51:52,000
不同的字符组合在一起的问题

3040
01:51:52,000 --> 01:51:54,000
然后还有一个数数的问题

3041
01:51:54,000 --> 01:51:54,000
就是

3042
01:51:54,000 --> 01:51:56,000
对

3043
01:51:56,000 --> 01:51:57,000
你要说意义

3044
01:51:57,000 --> 01:51:59,000
如果这个字符是

3045
01:51:59,000 --> 01:52:00,000
一个意义加一撇

3046
01:52:00,000 --> 01:52:02,000
合成的意义呢

3047
01:52:02,000 --> 01:52:02,000
还是

3048
01:52:02,000 --> 01:52:06,000
它比如说是拉丁一里面的那个

3049
01:52:06,000 --> 01:52:08,000
高位区的

3050
01:52:08,000 --> 01:52:10,000
那个独立的一个字符意义

3051
01:52:10,000 --> 01:52:11,000
这两个字符

3052
01:52:11,000 --> 01:52:13,000
你可能在不同的操作系统里面

3053
01:52:13,000 --> 01:52:15,000
数出来的结果是不一样的

3054
01:52:15,000 --> 01:52:15,000
有些人

3055
01:52:15,000 --> 01:52:17,000
有些他们是两个字

3056
01:52:17,000 --> 01:52:18,000
一个是一个字吧

3057
01:52:18,000 --> 01:52:19,000
有些编程员说

3058
01:52:19,000 --> 01:52:21,000
这是

3059
01:52:21,000 --> 01:52:22,000
两个 byte

3060
01:52:22,000 --> 01:52:25,000
然后有些人有些操作系统

3061
01:52:25,000 --> 01:52:27,000
只会告诉你说这是一个字符

3062
01:52:27,000 --> 01:52:27,000
对

3063
01:52:27,000 --> 01:52:29,000
这些其实也是这个日语里面也有

3064
01:52:29,000 --> 01:52:32,000
就像刚才在日本讲明那个着音点

3065
01:52:32,000 --> 01:52:36,000
它其实也可以通过组合形式来实现的

3066
01:52:36,000 --> 01:52:38,000
所以那也是看起来是一个字

3067
01:52:38,000 --> 01:52:40,000
那其实它是一个马位的字

3068
01:52:40,000 --> 01:52:43,000
就是低区位的一个马位的字

3069
01:52:43,000 --> 01:52:45,000
还是它是两个组合起来的两个字

3070
01:52:45,000 --> 01:52:48,000
日本里面也是有这个问题的

3071
01:52:48,000 --> 01:52:51,000
所以我觉得这还是一个排版引擎的问题

3072
01:52:51,000 --> 01:52:54,000
因为这取决于这个排版引擎

3073
01:52:54,000 --> 01:52:57,000
是否采用了 unicode 标准下的一些肢体技术

3074
01:52:57,000 --> 01:53:00,000
那如果它用了一些传统的

3075
01:53:00,000 --> 01:53:03,000
在 unicode 还没有诞生的那个时代里面

3076
01:53:03,000 --> 01:53:07,000
那它也有自己的一些方式来显示这些字符

3077
01:53:08,000 --> 01:53:10,000
可以这样理解

3078
01:53:10,000 --> 01:53:12,000
这跟排版引擎也不一定

3079
01:53:12,000 --> 01:53:20,000
其实主要还是一个你在一个什么样的逻辑层面上去区分字符的问题

3080
01:53:20,000 --> 01:53:22,000
你要把它规规划的话

3081
01:53:22,000 --> 01:53:23,000
就是好吧

3082
01:53:23,000 --> 01:53:27,000
所有的字符其实归根结底都是 0 和 1 在电脑里

3083
01:53:27,000 --> 01:53:28,000
在计算机里

3084
01:53:28,000 --> 01:53:35,000
但是有些按照某些编程语言或者是操作系统的计算方法

3085
01:53:35,000 --> 01:53:37,000
每 8 个 bit

3086
01:53:37,000 --> 01:53:38,000
就一定会有一个字符

3087
01:53:38,000 --> 01:53:40,000
无论如何是一个字

3088
01:53:40,000 --> 01:53:47,000
那在这些操作系统或者是编程语言里面的可能意义上的加撇就有可能是一或者三个字

3089
01:53:47,000 --> 01:53:53,000
然后但是对于某些更高级的或者说就是划分层面抽象层面更高级的语言

3090
01:53:53,000 --> 01:53:55,000
比如说 swift

3091
01:53:55,000 --> 01:54:05,000
swift 里面它一定会把那个字符串里面能够独立成粗的就是什么什么 cluster

3092
01:54:05,000 --> 01:54:06,000
它单独算成一个字符

3093
01:54:06,000 --> 01:54:08,000
所以这个实际

3094
01:54:08,000 --> 01:54:11,000
长度可能跟最终的那个 byte 长度是不一样的

3095
01:54:11,000 --> 01:54:18,000
而且两个 byte 长度不同的 string 在 swift 里面可能会最终算出来的长度是一样的

3096
01:54:18,000 --> 01:54:22,000
这个反正也是一个很大的问题

3097
01:54:22,000 --> 01:54:27,000
因为你如果单说是排版引擎的话

3098
01:54:27,000 --> 01:54:30,000
你事先给排版引擎什么东西

3099
01:54:30,000 --> 01:54:30,000
对吧

3100
01:54:30,000 --> 01:54:33,000
你事先给他不同的东西

3101
01:54:33,000 --> 01:54:34,000
到排版引擎

3102
01:54:34,000 --> 01:54:36,000
他拿到手头上只有这些零部件

3103
01:54:36,000 --> 01:54:38,000
他只能拿去这样显示

3104
01:54:38,000 --> 01:54:44,000
还有就是我想说的就是在这个年头到现在为止

3105
01:54:44,000 --> 01:54:47,000
大家还是有很多人说那个半角全角的问题

3106
01:54:47,000 --> 01:54:48,000
就是说

3107
01:54:48,000 --> 01:54:49,000
是吗

3108
01:54:49,000 --> 01:54:52,000
西文 140 个字的话

3109
01:54:52,000 --> 01:54:54,000
对应中文应该是 70 个字

3110
01:54:54,000 --> 01:54:58,000
到现在还有人都有这样的感觉

3111
01:54:58,000 --> 01:55:03,000
对全角和半角这两个字最开始原流

3112
01:55:03,000 --> 01:55:06,000
原因应该是在签字时代吧

3113
01:55:06,000 --> 01:55:07,000
对

3114
01:55:08,000 --> 01:55:12,000
就是有些签字是只有一站期

3115
01:55:12,000 --> 01:55:16,000
站另外一些签字的一半的宽度

3116
01:55:16,000 --> 01:55:19,000
然后这些字符就要被叫做半角字符

3117
01:55:19,000 --> 01:55:22,000
它其实就是一个宽度的问题

3118
01:55:22,000 --> 01:55:24,000
就全身半身

3119
01:55:24,000 --> 01:55:26,000
全角半角或者叫全形半形

3120
01:55:26,000 --> 01:55:28,000
那 em 和 en

3121
01:55:28,000 --> 01:55:31,000
这应该是日本人搞出来的概念吧

3122
01:55:32,000 --> 01:55:36,000
但是就是在原来的新闻排版里面

3123
01:55:36,000 --> 01:55:37,000
就是有 em 和 en

3124
01:55:38,000 --> 01:55:42,000
对但是全角半角这个术语应该是日本人搞出来的

3125
01:55:42,000 --> 01:55:45,000
就我们叫成全角半角

3126
01:55:45,000 --> 01:55:46,000
对是日本人

3127
01:55:46,000 --> 01:55:47,000
日本汉字翻译出来的

3128
01:55:47,000 --> 01:55:48,000
对

3129
01:55:48,000 --> 01:55:52,000
全角半角最开始的差异应该是在片假名和

3130
01:55:52,000 --> 01:55:56,000
就是在片假名出现之前

3131
01:55:56,000 --> 01:55:58,000
在全角汉字出现之前

3132
01:55:58,000 --> 01:56:02,000
日语里面就是 js 里面只有半角的假名

3133
01:56:02,000 --> 01:56:04,000
然后等到这个全角汉字出来之后

3134
01:56:04,000 --> 01:56:07,000
他们又出现了全角的假名和全角汉字

3135
01:56:07,000 --> 01:56:08,000
所以这个是全角的假名

3136
01:56:08,000 --> 01:56:13,000
这个时候就需要区别说这个假名是究竟只占显示的一半呢

3137
01:56:13,000 --> 01:56:15,000
还是那个宽的那个版本

3138
01:56:15,000 --> 01:56:21,000
所以这个时候全形半形的概念就被从印刷时代拓展过来

3139
01:56:22,000 --> 01:56:23,000
但是就在编码上

3140
01:56:23,000 --> 01:56:26,000
它其实是单字节和双字节的问题嘛

3141
01:56:26,000 --> 01:56:26,000
对

3142
01:56:28,000 --> 01:56:30,000
就很多人把全角半角和单字节

3143
01:56:30,000 --> 01:56:32,000
双字双字节混在一起

3144
01:56:32,000 --> 01:56:35,000
就比如说其实到到现在为止

3145
01:56:35,000 --> 01:56:37,000
我们大家都已经用 unicode 了

3146
01:56:37,000 --> 01:56:40,000
无论你是半角的字还是全角字

3147
01:56:40,000 --> 01:56:42,000
在 unicode 上它其实都是一个码位

3148
01:56:42,000 --> 01:56:43,000
对

3149
01:56:43,000 --> 01:56:47,000
然后这个码位有可能用一到四个字符来显示

3150
01:56:47,000 --> 01:56:49,000
一到四个 byte

3151
01:56:49,000 --> 01:56:50,000
一到四个

3152
01:56:50,000 --> 01:56:51,000
目前是一到四个

3153
01:56:51,000 --> 01:56:53,000
对它它是个变长的

3154
01:56:53,000 --> 01:56:55,000
目前一到四个 byte 来来来决定

3155
01:56:55,000 --> 01:56:58,000
所以半角和全角差别在这里已经不明显了

3156
01:57:01,000 --> 01:57:06,000
而现在我们随即看到的半角和全角其实是字体厂商为了保留大家的习惯

3157
01:57:06,000 --> 01:57:07,000
他化成半角和半角和全角的差别在这里已经不明显了

3158
01:57:07,000 --> 01:57:09,000
他化成全角而已

3159
01:57:09,000 --> 01:57:12,000
你去调用那个码其实就是一个 unicode 的一个码而已

3160
01:57:12,000 --> 01:57:13,000
对

3161
01:57:13,000 --> 01:57:19,000
那个中文字体里面现在的半角和全角的一个字符的应用规则是怎么样子

3162
01:57:19,000 --> 01:57:22,000
我记得好像就是要全部半角

3163
01:57:22,000 --> 01:57:23,000
全部全角

3164
01:57:23,000 --> 01:57:26,000
就是废除这两个概念是最好的方式

3165
01:57:29,000 --> 01:57:31,000
就所以在 GB 里面

3166
01:57:31,000 --> 01:57:33,000
GB 里面其实它有很多

3167
01:57:33,000 --> 01:57:35,000
比如说像什么俄文的希里尔字母的那些

3168
01:57:35,000 --> 01:57:36,000
它其实在里面画的

3169
01:57:36,000 --> 01:57:37,000
当年他放到 GB 里面

3170
01:57:37,000 --> 01:57:40,000
他意思是全角字

3171
01:57:40,000 --> 01:57:41,000
全角字

3172
01:57:41,000 --> 01:57:42,000
对

3173
01:57:42,000 --> 01:57:43,000
当然也是那个意思

3174
01:57:44,000 --> 01:57:46,000
然后的确是很化那些

3175
01:57:46,000 --> 01:57:48,000
所以国产的那些字体

3176
01:57:48,000 --> 01:57:50,000
他的确是化成全角字了

3177
01:57:50,000 --> 01:57:52,000
然后有人就用那个来排俄文

3178
01:57:52,000 --> 01:57:55,000
然后看出来就是惨不忍睹

3179
01:57:55,000 --> 01:57:57,000
每个字符都见据很大了

3180
01:57:57,000 --> 01:58:00,000
豆瓣上一旦出现俄文书简直是惨不忍睹

3181
01:58:03,000 --> 01:58:03,000
对

3182
01:58:03,000 --> 01:58:06,000
这其实都是一些历史遗留的产物吧

3183
01:58:06,000 --> 01:58:07,000
就是当时因为这个

3184
01:58:07,000 --> 01:58:09,000
编码还没有统一到

3185
01:58:09,000 --> 01:58:13,000
我没有完全统一到 unicode 的那套编码系统上面

3186
01:58:13,000 --> 01:58:17,000
所以导致了中国以前的中国国标

3187
01:58:17,000 --> 01:58:20,000
以前想编码一些西文字符的时候

3188
01:58:20,000 --> 01:58:22,000
他会搞一套自己的规则在里面

3189
01:58:22,000 --> 01:58:25,000
然后又跟 unicode 的那套并不是完全重合

3190
01:58:27,000 --> 01:58:29,000
那问题是现在大家已经是 unicode 的

3191
01:58:29,000 --> 01:58:32,000
但是还要为了保持那个习惯

3192
01:58:32,000 --> 01:58:35,000
所以然后再讲

3193
01:58:35,000 --> 01:58:36,000
而且的确大家能看出来啊

3194
01:58:36,000 --> 01:58:37,000
这是绊脚的字

3195
01:58:37,000 --> 01:58:38,000
那实际上呢

3196
01:58:38,000 --> 01:58:43,000
他那里面的码位已经是一就跟那个双字节单子已经没有关系了

3197
01:58:43,000 --> 01:58:46,000
就就是一个 unicode 码位了都已经是对

3198
01:58:46,000 --> 01:58:48,000
然后实际上他的宽度呢

3199
01:58:48,000 --> 01:58:51,000
是通过字体的字体设计师来去定义的

3200
01:58:51,000 --> 01:58:53,000
他那个 font 里面的定义

3201
01:58:53,000 --> 01:58:56,000
他的宽度他的宽度是排版引擎来决定

3202
01:58:56,000 --> 01:58:58,000
排版引擎和字体提供的一些信息来决定

3203
01:59:01,000 --> 01:59:02,000
所以我一直在想

3204
01:59:02,000 --> 01:59:04,000
现在我们这个什么计算机也好

3205
01:59:04,000 --> 01:59:04,000
手机也好

3206
01:59:04,000 --> 01:59:06,000
系统那么复杂

3207
01:59:06,000 --> 01:59:07,000
也就是我们这些

3208
01:59:07,000 --> 01:59:09,000
人为弄出来的因素

3209
01:59:09,000 --> 01:59:15,000
你看光打一个字显示到这个屏幕上要经过这么大一堆的问题

3210
01:59:15,000 --> 01:59:17,000
然后中间随时可能出现错误

3211
01:59:17,000 --> 01:59:20,000
八个或者是什么系统崩溃

3212
01:59:20,000 --> 01:59:21,000
真的也很正常

3213
01:59:21,000 --> 01:59:23,000
动不动就乱码动不动就崩溃了

3214
01:59:23,000 --> 01:59:24,000
对啊

3215
01:59:24,000 --> 01:59:29,000
真的那个就因为这个 unicode 的这个事情导致很多安全漏洞吗

3216
01:59:29,000 --> 01:59:30,000
也也不出奇啊

3217
01:59:30,000 --> 01:59:36,000
这之前我记得有一有一有一年你们记不记得是有一段那种文字叠加了一起

3218
01:59:36,000 --> 01:59:37,000
然后 iPhone 一打开

3219
01:59:37,000 --> 01:59:38,000
自动死机

3220
01:59:38,000 --> 01:59:40,000
弄一个啊

3221
01:59:40,000 --> 01:59:42,000
哈哈哈

3222
01:59:42,000 --> 01:59:42,000
啊

3223
01:59:42,000 --> 01:59:45,000
对然后那个 safari 乱七打开就自动崩溃吗

3224
01:59:47,000 --> 01:59:49,000
就是因为这个坑爹的事情

3225
01:59:50,000 --> 01:59:53,000
而且因为像尤其是文字编码这个东西的话

3226
01:59:53,000 --> 01:59:55,000
他必须要向后兼容嘛

3227
01:59:55,000 --> 01:59:58,000
就他后面的编码的话尽量要跟前面兼容嘛

3228
01:59:58,000 --> 02:00:00,000
要不然特别特别麻烦吧

3229
02:00:00,000 --> 02:00:01,000
他自会变掉嘛

3230
02:00:01,000 --> 02:00:02,000
就就是对

3231
02:00:02,000 --> 02:00:04,000
所以他越是要向后兼容呢

3232
02:00:04,000 --> 02:00:07,000
就他就他的那个负面的那些债务

3233
02:00:07,000 --> 02:00:08,000
就越来越多

3234
02:00:08,000 --> 02:00:09,000
哈哈哈

3235
02:00:09,000 --> 02:00:11,000
所以他就越容易出 bug

3236
02:00:11,000 --> 02:00:15,000
现在实际上绝大多数人类的复杂系统其复杂性都是历史性

3237
02:00:15,000 --> 02:00:18,000
就是复所有复杂的程度大部分都是历史原因

3238
02:00:18,000 --> 02:00:21,000
就如果你从头开始文明毁灭面了

3239
02:00:21,000 --> 02:00:22,000
啪唧重新设计这个东西

3240
02:00:22,000 --> 02:00:25,000
肯定不会设计成当初那个样子

3241
02:00:25,000 --> 02:00:28,000
大家都搞一个非常简单一般的对对

3242
02:00:28,000 --> 02:00:29,000
嗯

3243
02:00:29,000 --> 02:00:30,000
嗯

3244
02:00:30,000 --> 02:00:31,000
嗯

3245
02:00:31,000 --> 02:00:32,000
嗯

3246
02:00:32,000 --> 02:00:33,000
嗯

3247
02:00:33,000 --> 02:00:34,000
我们说了两个小时

3248
02:00:34,000 --> 02:00:37,000
终于把一个字打显示到屏幕上去了

3249
02:00:37,000 --> 02:00:39,000
但是我们如果要把它打印出来怎么办

3250
02:00:40,000 --> 02:00:40,000
呃

3251
02:00:40,000 --> 02:00:41,000
呵呵

3252
02:00:41,000 --> 02:00:42,000
要再说两个小时

3253
02:00:42,000 --> 02:00:45,000
哈哈哈

3254
02:00:45,000 --> 02:00:48,000
其实其实也没有这么复杂

3255
02:00:48,000 --> 02:00:49,000
就打印出来啊

3256
02:00:49,000 --> 02:00:54,000
对你发你把你的文字的内容发给打印机

3257
02:00:54,000 --> 02:00:56,000
然后打印机内部其实也有一套

3258
02:00:57,000 --> 02:00:57,000
显示系统

3259
02:00:57,000 --> 02:01:06,000
然后这个显示系统只不过他最终形成的那形成的结果是一个实体可见的一张纸

3260
02:01:06,000 --> 02:01:06,000
或者是

3261
02:01:07,000 --> 02:01:12,000
对包括三点几都都其实大多多少少都是一套把这个字体编码

3262
02:01:13,000 --> 02:01:14,000
呃

3263
02:01:14,000 --> 02:01:18,000
把一套编码和其呃对应的形状连联系起来

3264
02:01:18,000 --> 02:01:24,000
然后控制这个控制一个喷头也好或者是吸骨也好

3265
02:01:24,000 --> 02:01:27,000
把这个最终形状显示出来就喷了

3266
02:01:27,000 --> 02:01:30,000
现在打印机应该不需要在内嵌字体了吧

3267
02:01:30,000 --> 02:01:36,000
他都是通过解析一个 ps 的这个或者就是一片就是 ps 的一个一个一个一个

3268
02:01:36,000 --> 02:01:38,000
这个就是一个标准来做的吧

3269
02:01:38,000 --> 02:01:48,000
因为以前我记得所以确实出现过那个所以这个这个要呃真是打印机就是打印机内对他是需要内嵌一个字库才可以打中文吗

3270
02:01:48,000 --> 02:01:49,000
最早的时候

3271
02:01:49,000 --> 02:01:50,000
得到后面都也是

3272
02:01:50,000 --> 02:01:53,000
但有很多 ps 打印机他也要按要安装的吗

3273
02:01:53,000 --> 02:01:54,000
所以就是什么

3274
02:01:54,000 --> 02:01:58,000
我们中老年程序员在继续可以叫告告这小朋友

3275
02:01:58,000 --> 02:02:01,000
当年打印机是要有打印字体的

3276
02:02:01,000 --> 02:02:03,000
要不然他打不出字来是空白的

3277
02:02:03,000 --> 02:02:05,000
对而且在现在如果你运用这个设计的话呢

3278
02:02:05,000 --> 02:02:09,000
现在如果你遇到一些比较极端的例子的话

3279
02:02:09,000 --> 02:02:15,000
有些人还是会选择把那个打呃 pdf 里面的字体转化为曲线

3280
02:02:15,000 --> 02:02:19,000
然后最终给打印机当作一幅画来打

3281
02:02:19,000 --> 02:02:22,000
不然有些字是是是是瓢的对

3282
02:02:22,000 --> 02:02:25,000
对在日文的话经常会出这个问题

3283
02:02:25,000 --> 02:02:31,000
因为就是我我在我比如说我我做的这个排版拍的这个东西

3284
02:02:31,000 --> 02:02:34,000
然后到输出方那边他没有同样的字体文件吗

3285
02:02:34,000 --> 02:02:35,000
那他可能就会

3286
02:02:35,000 --> 02:02:37,000
就会自会变掉

3287
02:02:37,000 --> 02:02:37,000
没有关系

3288
02:02:37,000 --> 02:02:40,000
他有的时候因为设置问题整个那个排版就会崩掉吗

3289
02:02:40,000 --> 02:02:47,000
不光是这个还有像那个现在 pdf 有这个问题就是很多在那个 windows 上面制作的 pdf

3290
02:02:47,000 --> 02:02:55,000
他没有选择那个就是内里欠自己内建或者说把那个字形轮廓作为一个就 subsed 的方式放进去的话

3291
02:02:55,000 --> 02:02:58,000
对在非就没有那个字体文件系统上

3292
02:02:58,000 --> 02:03:01,000
比如说 mac 比如说那上面他就显示是一个方框嘛

3293
02:03:01,000 --> 02:03:04,000
就没有那个字对啊嗯

3294
02:03:04,000 --> 02:03:05,000
所以你看要说的话还是有很多的问题啊

3295
02:03:05,000 --> 02:03:12,000
很多要像什么字体子集内嵌这个事情的话其实还有很多事情要做

3296
02:03:12,000 --> 02:03:22,000
其实 pdf 在这个技这个技术嗯发对这个东亚的这些文本显示的话是发挥了很大的作用的那个 subsed 嘛对吧

3297
02:03:22,000 --> 02:03:27,000
要不然的话他没有办法就把要问 pdf 他的文件要会越来越大

3298
02:03:27,000 --> 02:03:30,000
每个都是几十兆一个哪怕只有两页的字

3299
02:03:31,000 --> 02:03:34,000
当年的话就是为什么出 type 呃

3300
02:03:34,000 --> 02:03:35,000
微软和苹果

3301
02:03:35,000 --> 02:04:05,000
联手起来发出太本的就是这点他要打败阿杜比嗯阿杜比他那时候呢他就是有一个 atm 啊杜比 typemanagement 他就是要来控制呃就是显示字体和打印机的字体给打印机的事就是很精高精度的 psps 软件的 ps 曲线的字体而那给显示的话那就是低端的一个点阵字体嗯所以他需要一个呃他 atm 这样一个软件呢来进行的

3302
02:04:05,000 --> 02:04:06,000
来调配

3303
02:04:07,000 --> 02:04:14,000
然后然后下载以后一起下载然后交给这个输出端去给打印机才才能打印出东西来

3304
02:04:14,000 --> 02:04:22,000
那后来呢就是微软和 apple 他就连联合出了这个出 type 以后他就可以动态的下载这个呃

3305
02:04:23,000 --> 02:04:33,000
这个字体的曲线信息然后直接就传给了打印机啊所以呢就以后呢就就逐渐的就不用打印端的就输出分的这个打印字体

3306
02:04:34,000 --> 02:04:35,000
所以当年的这这样的一个

3307
02:04:35,000 --> 02:04:42,000
呃工作流程的话对这个整个就是 dtp 嘛就桌面排版的流程是一个非常大的一个影响

3308
02:04:44,000 --> 02:04:45,000
天呐这个

3309
02:04:47,000 --> 02:04:54,000
都都很难想象你现在如果要自己搞一套新的操作系统 你要从头把这都做一遍的话不要做到猴年马月去了

3310
02:04:56,000 --> 02:04:59,000
对呀 现在我们随便手标点两下那就印出来了

3311
02:05:00,000 --> 02:05:03,000
所以现在终于知道那么那么那么多 cpu

3312
02:05:03,000 --> 02:05:05,000
的那个性能的提升都跑哪里了

3313
02:05:05,000 --> 02:05:06,000
对 去了

3314
02:05:07,000 --> 02:05:12,000
对啊 这个计算机他在他在辛苦的演算他在算什么东西啊对啊

3315
02:05:13,000 --> 02:05:19,000
对 其实这跟这跟生物也有多少点有点巧合吧 就是人类为什么

3316
02:05:20,000 --> 02:05:21,000
呃眼睛要长在脸上

3317
02:05:23,000 --> 02:05:31,000
听起来很奇怪 就是因为哇 你就是因为眼睛要好牵强的眼睛要尽量接眼睛要尽量靠近大脑

3318
02:05:31,000 --> 02:05:34,000
不然你眼睛比如说你眼睛长在手指上其实更灵魂

3319
02:05:34,000 --> 02:05:48,000
但是呃 呃 神经长在脸上神经链路就更长了是吧 神经链路短 然后那个带宽比较高 然后大脑里面其实和视觉相关的那一块也是特别特别发达

3320
02:05:49,000 --> 02:05:52,000
嗯嗯为什么我扯到这个

3321
02:05:53,000 --> 02:05:54,000
哈哈哈哈

3322
02:05:57,000 --> 02:06:04,000
好吧 既然我们的字终于从打印出来了 我们这一期节目先谈到这里好啊 好啊 其实还是

3323
02:06:04,000 --> 02:06:05,000
嗯

3324
02:06:05,000 --> 02:06:10,000
扯开了开了各一路开了多少盒子 但是都没有都没有给盖上

3325
02:06:11,000 --> 02:06:17,000
哈哈哈哈比如说其实刚才我在想我们遗漏的最最大一个点其实是

3326
02:06:18,000 --> 02:06:20,000
啊 浏览器里面的字

3327
02:06:20,000 --> 02:06:25,000
对就具体的选择过程 就比如说有些人会有会有疑惑说为什么

3328
02:06:27,000 --> 02:06:34,000
啊 我在 word 里面可以把中文字体设置成那么多种什么宋体 凯体 隶书对吧 但是浏览器里面就不可以

3329
02:06:35,000 --> 02:06:38,000
那啊 这我们可以专讲一期

3330
02:06:39,000 --> 02:06:48,000
对啊 web 放啊什么的 包括那个 卧俯格式是什么东西啊 包括 mg 在那个网页上的显示和他在这个传统的

3331
02:06:49,000 --> 02:06:51,000
c 口数据库里面的一些一些坑吧

3332
02:06:53,000 --> 02:07:00,000
哎 你们说的你们都得记着哈 自己说的坑自己填啊 哈哈不能只敢挖 不敢埋啊 自谈自串债务表

3333
02:07:01,000 --> 02:07:02,000
哈哈哈

3334
02:07:02,000 --> 02:07:03,000
哈哈

3335
02:07:04,000 --> 02:07:07,000
柯宁表示很高兴 柯宁柯宁

3336
02:07:11,000 --> 02:07:16,000
好了 那今天的节目就到这里 我们还是欢迎大家继续写邮件给我们反馈

3337
02:07:17,000 --> 02:07:24,000
自谈自唱的联系邮件地址是 podcastatthetype.com podcast 的拼写是 podcast

3338
02:07:25,000 --> 02:07:31,000
the type 的拼写是 the type 我们的联系地址是 podcastatthetype.com

3339
02:07:32,000 --> 02:07:33,000
ok

3340
02:07:34,000 --> 02:07:34,000
no

3341
02:07:34,000 --> 02:07:42,000
谢谢收听 ipn podcast 网络旗下的 it 技术的娱乐节目内恨恐慌 我们号称 hardcore 但是没有干货 想听人听不想听人就别听

3342
02:07:42,000 --> 02:07:46,000
你可以为本节目捐款捐款地址是 kernelpanic.fm slash donate

3343
02:07:47,000 --> 02:07:54,000
捐款结果随意 只要是巴拉的证人数倍就可以捐款 不会给你带来什么不卷也不会让你失去什么 我们口号是 no hot feelings

3344
02:07:55,000 --> 02:07:59,000
如果你有任何反馈 可以发邮件到 kernelpanic atipn.li

3345
02:08:00,000 --> 02:08:01,000
同时也欢迎你收听

3346
02:08:02,000 --> 02:08:03,000
real

3347
02:08:03,000 --> 02:08:04,000
real 主持的风头圈

3348
02:08:05,000 --> 02:08:07,000
以及 ipn 旗下的其他几档节目

3349
02:08:07,000 --> 02:08:13,000
为知道太一来了流行通信 high story 映影像无次元博物志选美必下关一天事件

3350
02:08:14,000 --> 02:08:15,000
我们下期节目再会

3351
02:08:15,000 --> 02:08:16,000
拜拜

3352
02:08:20,000 --> 02:08:24,000
我看你这罐口也来比较顺了 我要念这个时候好像加了一个加速的 fuse

3353
02:08:27,000 --> 02:08:32,000
对你看那些那个什么综艺节目最后要练练那个赞助商名的时候就让他使劲抱

3354
02:08:32,000 --> 02:08:33,000
对对对

3355
02:08:33,000 --> 02:08:35,000
这个这也是一项重要的技能

3356
02:08:36,000 --> 02:08:44,000
都过药品广告播完之后 无论那个药品广告多么的轻松温馨 最后一定要来一个说的特别快的什么请遵一嘱

3357
02:08:45,000 --> 02:08:45,000
之类的

3358
02:08:46,000 --> 02:08:46,000
啊

3359
02:08:48,000 --> 02:08:53,000
请咨询您的医师或您的药剂师 因为那个是广告法规定的吧 必须要讲的 还有什么不需要讲

3360
02:08:55,000 --> 02:09:01,000
嗯嗯哎 吴涛 你不能偷懒啊 就是以后录我们自弹自串的话 你要每期要有个新口号啊

3361
02:09:02,000 --> 02:09:03,000
哎 说了也是

3362
02:09:03,000 --> 02:09:12,000
是啊 这一期没有新口号 但是我之前其实是试图找一个跟字体稍微有点关系的 好吧 本期我们的口号是

3363
02:09:13,000 --> 02:09:15,000
呃 没有口号 不本期我们口号是

3364
02:09:16,000 --> 02:09:16,000
blish

3365
02:09:18,000 --> 02:09:20,000
这个点出于这是什么鬼

3366
02:09:21,000 --> 02:09:25,000
点出于那个 knut 高德纳在排印他的第一版

3367
02:09:26,000 --> 02:09:29,000
呃 tao cp 就是 the art and

3368
02:09:31,000 --> 02:09:33,000
the art of computer program

3369
02:09:33,000 --> 02:09:33,000
呃

3370
02:09:33,000 --> 02:09:42,000
就是计算机的编程艺术的这本书的时候 他看到了自己的初稿的一个小样 然后他当时说

3371
02:09:42,000 --> 02:09:43,000
blish

3372
02:09:43,000 --> 02:09:44,000
所以他写了 tech

3373
02:09:44,000 --> 02:09:46,000
这这这排的是啥呀

3374
02:09:47,000 --> 02:09:47,000
然后

3375
02:09:49,000 --> 02:09:50,000
然后对 然后他就他就专门

3376
02:09:51,000 --> 02:09:58,000
他就专门搞了一套叫做先是搞了 metaphones 然后又 metaphones 然后再搞一套拉带

3377
02:09:59,000 --> 02:10:02,000
到搞了 tech 然后用来排自己的版

3378
02:10:03,000 --> 02:10:05,000
这算是一个比较应景的口号

3379
02:10:06,000 --> 02:10:08,000
所以本期我们的口号就是 blish

3380
02:10:10,000 --> 02:10:17,000
好难念好难念 我不知道他具体是在怎么样 因为 knut 毕竟是个美国人 还也许是念的是

3381
02:10:18,000 --> 02:10:18,000
美

3382
02:10:19,000 --> 02:10:20,000
但

3383
02:10:22,000 --> 02:10:29,000
对 其实我 我们还可以讲讲 就找机会讲讲 metaphones 他的一些设计哲学还是有点意思 而且

3384
02:10:30,000 --> 02:10:32,000
哎呀 有机会我还是想讲那个 tech

3385
02:10:33,000 --> 02:10:37,000
那个好吧 那个那个完全不懂

3386
02:10:40,000 --> 02:10:40,000
的确是

3387
02:10:41,000 --> 02:10:44,000
越来越深了 已经挖到地球内面去了

3388
02:10:45,000 --> 02:10:46,000
哈哈哈哈

