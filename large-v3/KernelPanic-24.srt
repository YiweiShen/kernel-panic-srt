1
00:00:00,000 --> 00:00:04,000
欢迎收听 IPN Podcast 网络旗下的 IT 技术主题娱乐节目

2
00:00:04,000 --> 00:00:05,000
内核恐慌

3
00:00:05,000 --> 00:00:05,000
我们又回来了

4
00:00:05,000 --> 00:00:07,000
我们号称 Hardcore

5
00:00:07,000 --> 00:00:08,000
但是也没有干货

6
00:00:08,000 --> 00:00:09,000
想听的人听

7
00:00:09,000 --> 00:00:10,000
不想听的人就别听

8
00:00:10,000 --> 00:00:13,000
本节目的网址是 ipn.li.com

9
00:00:13,000 --> 00:00:17,000
我们推荐大家使用 Podcast 客户端订阅节目

10
00:00:17,000 --> 00:00:19,000
详情请访问 ipn.li.com

11
00:00:19,000 --> 00:00:21,000
欢迎你为本节目捐款

12
00:00:21,000 --> 00:00:24,000
捐款地址是 ipn.li.com

13
00:00:24,000 --> 00:00:26,000
捐款金额随意

14
00:00:26,000 --> 00:00:28,000
只要是 8 的正常数倍也可以

15
00:00:28,000 --> 00:00:30,000
捐款不会为你带来什么

16
00:00:30,000 --> 00:00:31,000
不捐也不会让你失去什么

17
00:00:31,000 --> 00:00:32,000
我们的口号是

18
00:00:32,000 --> 00:00:34,000
Trust no one

19
00:00:34,000 --> 00:00:35,000
Even your compiler

20
00:00:35,000 --> 00:00:39,000
好久没有念这句话

21
00:00:39,000 --> 00:00:41,000
还可以挺流畅的

22
00:00:41,000 --> 00:00:45,000
所以你一个月玩得可好

23
00:00:45,000 --> 00:00:46,000
还不错

24
00:00:46,000 --> 00:00:48,000
带着爸妈妈去了

25
00:00:48,000 --> 00:00:52,000
以前我学习过

26
00:00:52,000 --> 00:00:53,000
生活过

27
00:00:53,000 --> 00:00:54,000
工作过

28
00:00:54,000 --> 00:00:55,000
战斗过的地方

29
00:00:55,000 --> 00:00:56,000
然后去了些

30
00:00:56,000 --> 00:00:58,000
我觉得就

31
00:00:58,000 --> 00:01:01,000
德语区还比较满

32
00:01:01,000 --> 00:01:02,000
还比较漂亮的一些地方

33
00:01:02,000 --> 00:01:04,000
没有去更远的地方

34
00:01:04,000 --> 00:01:05,000
OK

35
00:01:05,000 --> 00:01:07,000
所以这算是什么

36
00:01:07,000 --> 00:01:09,000
重走长征路

37
00:01:09,000 --> 00:01:10,000
对

38
00:01:10,000 --> 00:01:12,000
就是因为过去的

39
00:01:12,000 --> 00:01:15,000
我来德国有 9 年了

40
00:01:15,000 --> 00:01:18,000
然后过去 9 年里面一般都是

41
00:01:18,000 --> 00:01:20,000
他们只能从电话或者是照片里面

42
00:01:20,000 --> 00:01:22,000
知道我曾经在什么地方待过

43
00:01:22,000 --> 00:01:24,000
然后这次可以身临其境的看一看

44
00:01:24,000 --> 00:01:26,000
我觉得还是挺有意义

45
00:01:26,000 --> 00:01:28,000
所以他们过去从那没去过是吧

46
00:01:28,000 --> 00:01:29,000
对这是第一次来

47
00:01:29,000 --> 00:01:31,000
甚至之前二老连护照都没有

48
00:01:31,000 --> 00:01:33,000
所以这是第一次出国

49
00:01:33,000 --> 00:01:35,000
你也是不孝子孙了

50
00:01:35,000 --> 00:01:39,000
所以另尊另堂去过加拿大

51
00:01:39,000 --> 00:01:41,000
其实也并没有

52
00:01:41,000 --> 00:01:43,000
他们也没有护照

53
00:01:43,000 --> 00:01:46,000
不过他们有比较忙

54
00:01:46,000 --> 00:01:48,000
所以也不太可能走得开

55
00:01:48,000 --> 00:01:49,000
现在

56
00:01:49,000 --> 00:01:53,000
我父母也是其实刚刚才退休

57
00:01:53,000 --> 00:01:55,000
所以也是刚刚写下来

58
00:01:55,000 --> 00:01:57,000
这个挺好的

59
00:01:57,000 --> 00:01:59,000
上次因为你家在天津

60
00:01:59,000 --> 00:02:01,000
所以还是要关心一下

61
00:02:01,000 --> 00:02:03,000
爆炸对你家影响怎么样

62
00:02:03,000 --> 00:02:09,000
我们家距离爆炸现场的直线距离是 30 多公里

63
00:02:09,000 --> 00:02:12,000
所以算是幸免于丹

64
00:02:12,000 --> 00:02:15,000
但如果和其他各位比起来的话

65
00:02:15,000 --> 00:02:17,000
那还是比较近的

66
00:02:17,000 --> 00:02:19,000
然后之前也是比较担心说

67
00:02:19,000 --> 00:02:24,000
如果有泄露的毒害物质在外面

68
00:02:24,000 --> 00:02:26,000
要不要考虑先去

69
00:02:26,000 --> 00:02:27,000
因为我们家是浙江人

70
00:02:27,000 --> 00:02:30,000
其实就是要先回老家避一避风头

71
00:02:30,000 --> 00:02:33,000
所以但目前看来还好

72
00:02:33,000 --> 00:02:34,000
然后我爸妈又特别

73
00:02:34,000 --> 00:02:37,000
我也不知道他们两个都是化工嘛

74
00:02:37,000 --> 00:02:41,000
所以不把这个当事总觉得无所谓

75
00:02:41,000 --> 00:02:46,000
那那我暂时也没有什么特别的影响

76
00:02:46,000 --> 00:02:52,000
所以这个时候你需要那个特别需要那个散公司的保护

77
00:02:52,000 --> 00:02:54,000
安不然了

78
00:02:54,000 --> 00:02:59,000
你说对就是那个换熊镇

79
00:02:59,000 --> 00:03:02,000
preserving the health of the people

80
00:03:02,000 --> 00:03:02,000
ok

81
00:03:02,000 --> 00:03:06,000
the umbrella's motto

82
00:03:06,000 --> 00:03:08,000
aparture science

83
00:03:08,000 --> 00:03:11,000
那个也可以

84
00:03:11,000 --> 00:03:12,000
这个是一个什么

85
00:03:12,000 --> 00:03:16,000
前面那个散公司是那个生化危机的梗

86
00:03:16,000 --> 00:03:17,000
对

87
00:03:17,000 --> 00:03:20,000
那个还挺奇怪的那个

88
00:03:20,000 --> 00:03:22,000
因为我现在在深圳吧

89
00:03:22,000 --> 00:03:24,000
经常在路上我经常看到两次了那个

90
00:03:24,000 --> 00:03:29,000
别人在那个车上贴的散公司的那个标识那些

91
00:03:29,000 --> 00:03:30,000
这是某种

92
00:03:30,000 --> 00:03:32,000
codes 嘛就是

93
00:03:32,000 --> 00:03:34,000
邪教嘛

94
00:03:34,000 --> 00:03:37,000
就我还我还挺挺吃惊的说

95
00:03:37,000 --> 00:03:38,000
这个

96
00:03:38,000 --> 00:03:40,000
还有真爱

97
00:03:40,000 --> 00:03:42,000
还有人在搞这个梗是吧

98
00:03:42,000 --> 00:03:44,000
没错没错

99
00:03:44,000 --> 00:03:50,000
回去我去贴一个 aparture science 在车厢后

100
00:03:50,000 --> 00:03:52,000
其实是个蛮好的点子

101
00:03:52,000 --> 00:03:53,000
可以买得到啊

102
00:03:53,000 --> 00:03:54,000
你可以直接买来贴在车上

103
00:03:54,000 --> 00:03:55,000
就好了

104
00:03:55,000 --> 00:03:59,000
对而且 vav 好像还有 T-shirt 之类的买

105
00:03:59,000 --> 00:04:01,000
全套主题都有的

106
00:04:01,000 --> 00:04:01,000
对

107
00:04:01,000 --> 00:04:04,000
Jinks.com 在卖那个

108
00:04:04,000 --> 00:04:06,000
portal 相关的主题

109
00:04:06,000 --> 00:04:09,000
对就是你之前买你那个那个

110
00:04:09,000 --> 00:04:09,000
那个叫什么

111
00:04:09,000 --> 00:04:11,000
world of art

112
00:04:11,000 --> 00:04:14,000
那个东西有学名吗就是贴那个

113
00:04:14,000 --> 00:04:16,000
笔记本电脑

114
00:04:16,000 --> 00:04:19,000
笔记本电脑背壳那个表面那个纸

115
00:04:19,000 --> 00:04:20,000
就是 sticker

116
00:04:20,000 --> 00:04:22,000
就叫 sticker 吗没有什么其他的

117
00:04:22,000 --> 00:04:23,000
没有什么特别的

118
00:04:23,000 --> 00:04:24,000
因为能贴笔记本电脑的那个纸

119
00:04:24,000 --> 00:04:25,000
对

120
00:04:25,000 --> 00:04:27,000
然后这个笔记本电脑的表面还可以贴别的

121
00:04:27,000 --> 00:04:30,000
也可以贴别的东西的表面

122
00:04:30,000 --> 00:04:34,000
因为那个之前苹果出过一个那个系列广告片

123
00:04:34,000 --> 00:04:35,000
一个广告片嘛

124
00:04:35,000 --> 00:04:37,000
就是他的那个 MacBook Air 上面

125
00:04:37,000 --> 00:04:39,000
贴一大堆 sticker

126
00:04:39,000 --> 00:04:40,000
一大堆 sticker 然后他每个做了一个

127
00:04:40,000 --> 00:04:41,000
这个叫什么

128
00:04:41,000 --> 00:04:42,000
这个叫 slow motion

129
00:04:42,000 --> 00:04:43,000
不叫 slow motion

130
00:04:43,000 --> 00:04:44,000
这个叫什么来的

131
00:04:44,000 --> 00:04:46,000
一个专门的梳理这种拍法

132
00:04:46,000 --> 00:04:47,000
黏土动画嘛

133
00:04:47,000 --> 00:04:49,000
对对对黏土动画就是他

134
00:04:49,000 --> 00:04:51,000
每一张拍了然后做成一帧一帧

135
00:04:51,000 --> 00:04:53,000
然后串起来播着

136
00:04:53,000 --> 00:04:53,000
对

137
00:04:53,000 --> 00:04:54,000
还挺有意思的我看过

138
00:04:54,000 --> 00:04:55,000
对

139
00:04:55,000 --> 00:05:01,000
但是那个苹果官网不卖 sticker 真的太贵了

140
00:05:01,000 --> 00:05:03,000
我今天看了那个之后我好想买

141
00:05:03,000 --> 00:05:05,000
哈哈

142
00:05:05,000 --> 00:05:07,000
不过我觉得这个是迟早的事吧

143
00:05:07,000 --> 00:05:09,000
他们都已经卖就做手机壳了

144
00:05:09,000 --> 00:05:11,000
下一步步就是 sticker 了

145
00:05:11,000 --> 00:05:12,000
嗯

146
00:05:12,000 --> 00:05:13,000
这很难说

147
00:05:13,000 --> 00:05:19,000
我觉得其实一般公司是不太愿意让 sticker 去修改自己 logo 了

148
00:05:19,000 --> 00:05:24,000
就好像那个启动改装车选项的

149
00:05:24,000 --> 00:05:28,000
车厂不会让你把它的 logo 弄成别的颜色一样

150
00:05:29,000 --> 00:05:31,000
他这个 sticker 那个还不算修改吧

151
00:05:31,000 --> 00:05:34,000
他只是说就在那个边缘做一些发挥了

152
00:05:35,000 --> 00:05:36,000
发散开

153
00:05:36,000 --> 00:05:41,000
比如说我特别印象是一个那个钢铁侠的手上不是一个那个亮灯的那个喷东西的那个东西吗

154
00:05:41,000 --> 00:05:42,000
胸前

155
00:05:42,000 --> 00:05:47,000
对他就直接把它装到那个用那个苹果那个那个图标他在

156
00:05:47,000 --> 00:05:50,000
那个 Macbook pro 上是可以发光的嘛

157
00:05:50,000 --> 00:05:50,000
对

158
00:05:51,000 --> 00:05:51,000
挺有意思的

159
00:05:52,000 --> 00:05:54,000
不过现在那个新出的那个 Macbook

160
00:05:54,000 --> 00:05:55,000
12 寸的就没写了

161
00:05:56,000 --> 00:05:57,000
为什么太小了

162
00:05:57,000 --> 00:05:58,000
不发光

163
00:05:58,000 --> 00:06:00,000
哎真的这还蛮遗憾的

164
00:06:02,000 --> 00:06:03,000
好吧那个我们做一下

165
00:06:04,000 --> 00:06:08,000
上一期也就是差不多一个多月以前的 follow up 吧

166
00:06:10,000 --> 00:06:12,000
当时说什么来着

167
00:06:12,000 --> 00:06:14,000
我又不记得上一期说过什么了

168
00:06:14,000 --> 00:06:16,000
对我也忘了说什么

169
00:06:16,000 --> 00:06:19,000
我把 note 写在那里但是我已经想不晓得是怎么一回事了

170
00:06:20,000 --> 00:06:23,000
但是提到这么一个这个概念我想起当时说是一个什么

171
00:06:23,000 --> 00:06:25,000
是一个很精实开发吗

172
00:06:25,000 --> 00:06:25,000
就是

173
00:06:26,000 --> 00:06:26,000
应该是叫做

174
00:06:27,000 --> 00:06:28,000
应该英文叫做 cleanroom

175
00:06:29,000 --> 00:06:29,000
的方法

176
00:06:30,000 --> 00:06:31,000
干净的房子里

177
00:06:31,000 --> 00:06:32,000
当时我记得莫名其妙说

178
00:06:32,000 --> 00:06:34,000
缩层了这个 white room

179
00:06:36,000 --> 00:06:38,000
后来想想应该是和那个

180
00:06:38,000 --> 00:06:39,000
混在一起

181
00:06:41,000 --> 00:06:42,000
对比较绝

182
00:06:45,000 --> 00:06:46,000
小口误无所谓

183
00:06:47,000 --> 00:06:53,000
然后有几位热心听众给我们写了个来信然后

184
00:06:53,000 --> 00:06:58,000
则其中几段念一下吧

185
00:06:58,000 --> 00:07:03,000
首先要为一位不愿透露性命的朋友道个歉

186
00:07:03,000 --> 00:07:06,000
就是有一次我们念了他的信

187
00:07:06,000 --> 00:07:09,000
虽然他写信强烈要求不要念

188
00:07:09,000 --> 00:07:10,000
但我们还是念了

189
00:07:10,000 --> 00:07:12,000
然后某种意义上讲

190
00:07:12,000 --> 00:07:14,000
我们侵犯了叫什么著作权法

191
00:07:14,000 --> 00:07:14,000
是吧

192
00:07:14,000 --> 00:07:17,000
在这边给你道个歉

193
00:07:17,000 --> 00:07:18,000
非常感谢

194
00:07:18,000 --> 00:07:21,000
不过我觉得那封信写的还是蛮好的

195
00:07:21,000 --> 00:07:22,000
不念真的挺可惜

196
00:07:22,000 --> 00:07:25,000
这就是一个借口

197
00:07:25,000 --> 00:07:27,000
所以你去知乎上那个问题下面

198
00:07:27,000 --> 00:07:28,000
自己负荆请罪吧

199
00:07:28,000 --> 00:07:30,000
我已经答了

200
00:07:30,000 --> 00:07:32,000
我觉得就是他问的

201
00:07:32,000 --> 00:07:33,000
OK 好吧

202
00:07:33,000 --> 00:07:35,000
OK

203
00:07:35,000 --> 00:07:38,000
然后上一期节目之后

204
00:07:38,000 --> 00:07:40,000
有一位读者写信来说

205
00:07:40,000 --> 00:07:42,000
这期节目还是老样子

206
00:07:42,000 --> 00:07:43,000
软就软吧

207
00:07:43,000 --> 00:07:45,000
刚刚说到一点让我心动的内容

208
00:07:45,000 --> 00:07:46,000
就戛然而止了

209
00:07:46,000 --> 00:07:48,000
看来中网红成学员

210
00:07:48,000 --> 00:07:50,000
是得认真关注一下自己的前线问题了

211
00:07:50,000 --> 00:07:52,000
这内容便是

212
00:07:52,000 --> 00:07:53,000
吴涛说的

213
00:07:53,000 --> 00:07:56,000
中老年程序员工作了五六年是所处的境地

214
00:07:56,000 --> 00:07:58,000
我个人就处在这样一个境域里

215
00:07:58,000 --> 00:07:59,000
积累不好

216
00:07:59,000 --> 00:08:00,000
很难有突破

217
00:08:00,000 --> 00:08:01,000
又不想转管理

218
00:08:01,000 --> 00:08:02,000
不上不下

219
00:08:02,000 --> 00:08:06,000
瑞欧又说要可能要告别专业程序员了

220
00:08:06,000 --> 00:08:08,000
更是让我内心难以平静

221
00:08:08,000 --> 00:08:14,000
这样的桑苏都觉得自己距离大牛太遥远

222
00:08:14,000 --> 00:08:15,000
是自取其辱

223
00:08:15,000 --> 00:08:18,000
我等鼠辈还怎么苟活下去

224
00:08:18,000 --> 00:08:20,000
祝两位一切顺利

225
00:08:20,000 --> 00:08:21,000
吴涛有个好假期

226
00:08:21,000 --> 00:08:22,000
桑苏

227
00:08:22,000 --> 00:08:24,000
桑苏是

228
00:08:24,000 --> 00:08:28,000
我想想如果没理解错的话

229
00:08:28,000 --> 00:08:31,000
指的是非常有成就的人物

230
00:08:31,000 --> 00:08:31,000
就是

231
00:08:31,000 --> 00:08:33,000
就是说我们吗

232
00:08:33,000 --> 00:08:36,000
说你

233
00:08:36,000 --> 00:08:36,000
缺席的说

234
00:08:36,000 --> 00:08:39,000
这是什么语言

235
00:08:39,000 --> 00:08:42,000
这难道是

236
00:08:42,000 --> 00:08:43,000
这难道是什么

237
00:08:43,000 --> 00:08:46,000
这个古文里的梗吗

238
00:08:47,000 --> 00:08:50,000
突显我们暴露自己没有文化

239
00:08:50,000 --> 00:08:52,000
怎么

240
00:08:52,000 --> 00:08:55,000
不知道

241
00:08:55,000 --> 00:09:01,000
反正我觉得对自己的资质有一个正确的认识

242
00:09:01,000 --> 00:09:02,000
我觉得

243
00:09:02,000 --> 00:09:07,000
但是我觉得这个世界也不一定非要就大牛才需要

244
00:09:07,000 --> 00:09:09,000
不然正常人的生活该怎么过

245
00:09:09,000 --> 00:09:13,000
这就好像那本叫什么 rework

246
00:09:13,000 --> 00:09:15,000
讲 startup 的书

247
00:09:15,000 --> 00:09:17,000
或者你自己忘了在讲什么

248
00:09:17,000 --> 00:09:19,000
讲工作方法书里面提到说

249
00:09:19,000 --> 00:09:21,000
你不一定要成为一个

250
00:09:21,000 --> 00:09:22,000
你不一定要成为一个

251
00:09:22,000 --> 00:09:25,000
了不起的企业才算成功

252
00:09:25,000 --> 00:09:28,000
如果你能成一个小的能够自己维持下去

253
00:09:28,000 --> 00:09:31,000
并且活得很好的小公司同样是一种成功

254
00:09:31,000 --> 00:09:33,000
对吧

255
00:09:33,000 --> 00:09:37,000
对这刚好刚好前面有一个就前几天那个

256
00:09:37,000 --> 00:09:40,000
backblaze 的博客发了篇文章嘛

257
00:09:40,000 --> 00:09:45,000
叫做好像 don't build a billion dollar company

258
00:09:45,000 --> 00:09:46,000
还是什么来的

259
00:09:46,000 --> 00:09:49,000
backblaze 就是现在我在用的一个备份软件

260
00:09:49,000 --> 00:09:50,000
这像今天在跟他们打广告

261
00:09:50,000 --> 00:09:52,000
就是他的那个客户端写的非常不错

262
00:09:52,000 --> 00:09:54,000
然后也很便宜那个

263
00:09:54,000 --> 00:09:58,000
他就说其实因为现在很多这个风投模式

264
00:09:58,000 --> 00:10:02,000
就是说你一定要成为一个就是 the next big thing

265
00:10:02,000 --> 00:10:02,000
对吧

266
00:10:02,000 --> 00:10:04,000
你一定要成为 unicorn

267
00:10:04,000 --> 00:10:06,000
对对不然就没有意思了

268
00:10:06,000 --> 00:10:09,000
当然从风险投资的角度来说确实是这样子的

269
00:10:09,000 --> 00:10:15,000
但是你可以考虑开一个叫做叫 lifestyle business

270
00:10:15,000 --> 00:10:17,000
就是不一定要拿风投的钱

271
00:10:17,000 --> 00:10:19,000
然后只要能够营收平衡

272
00:10:19,000 --> 00:10:21,000
做一个简单单单的这个生意

273
00:10:21,000 --> 00:10:22,000
其实也是可以的

274
00:10:22,000 --> 00:10:25,000
作为一个职业或者人生的选择吧

275
00:10:25,000 --> 00:10:32,000
就不是一定要奔着那个什么市值十亿一百亿一千亿美元的公司去这种情况

276
00:10:32,000 --> 00:10:36,000
是话是这样说吧

277
00:10:36,000 --> 00:10:37,000
就是我们当然永远可以说

278
00:10:37,000 --> 00:10:44,000
在这个世俗的呃衡量成功的观念里面

279
00:10:44,000 --> 00:10:47,000
你只有做到最大最强才是最成功的

280
00:10:47,000 --> 00:10:48,000
但同于此同时

281
00:10:48,000 --> 00:10:51,000
其实你做一个能够自谋其利的

282
00:10:52,000 --> 00:10:57,000
这个自食其利自食其利的自谋职业好像也不错

283
00:10:57,000 --> 00:11:01,000
对对对但是我觉得在程序员这个群体里面可能呃

284
00:11:01,000 --> 00:11:05,000
就因为普遍来说都不会太笨

285
00:11:05,000 --> 00:11:10,000
因为智商是一个做写程序的门槛

286
00:11:10,000 --> 00:11:10,000
对吧

287
00:11:10,000 --> 00:11:19,000
那可能在聪明人里面会更有这样一种追求追取去去试着要追寻

288
00:11:19,000 --> 00:11:22,000
让自己的事业变得最了不起

289
00:11:22,000 --> 00:11:22,000
会是这样的一个方式啊

290
00:11:22,000 --> 00:11:24,000
或者是啊

291
00:11:24,000 --> 00:11:25,000
非大公司不进

292
00:11:25,000 --> 00:11:32,000
或者是非大的这种点子不去想的一种倾向

293
00:11:32,000 --> 00:11:34,000
这种倾向是确实存在的

294
00:11:34,000 --> 00:11:38,000
我觉得据说这是雄性荷尔蒙分泌过剩的结果

295
00:11:40,000 --> 00:11:40,000
呃

296
00:11:40,000 --> 00:11:51,000
也就是说如如如果我们找一个因为某种原因失去了这个激素分泌习惯的程序员

297
00:11:51,000 --> 00:11:52,000
他就不会有

298
00:11:52,000 --> 00:11:53,000
这样的倾向是吗

299
00:11:53,000 --> 00:11:54,000
这很难说

300
00:11:54,000 --> 00:11:55,000
这只是一个说法

301
00:11:55,000 --> 00:11:57,000
我觉得也很难去去去证明他了

302
00:11:57,000 --> 00:12:02,000
但是我觉得就好像不是所有的成功都是一定要什么

303
00:12:02,000 --> 00:12:06,000
所以出人头地你能有一份安稳的生活开心的工作

304
00:12:06,000 --> 00:12:08,000
然后这个想法我叫我 work life balance

305
00:12:08,000 --> 00:12:11,000
就生活工作平行都都很好

306
00:12:11,000 --> 00:12:21,000
其实我觉得也是一种选择就不一定真的要像那个说的一样要成为在某一个领域或者是在某一个人生阶段令令人忘其向的方式啊

307
00:12:21,000 --> 00:12:22,000
就是一向被的大牛

308
00:12:22,000 --> 00:12:25,000
其实这也不是大多数的选择吧

309
00:12:25,000 --> 00:12:27,000
我觉得嗯呃

310
00:12:27,000 --> 00:12:33,000
我觉得可能成为大牛更多的是凭借天赋就已经努力

311
00:12:33,000 --> 00:12:35,000
如果你真的能够成为大牛的话

312
00:12:35,000 --> 00:12:38,000
你就不会去费力想要成为大牛

313
00:12:38,000 --> 00:12:40,000
而如果你不能成为大牛的话

314
00:12:40,000 --> 00:12:43,000
那你不如就接受自己的命运

315
00:12:43,000 --> 00:12:44,000
那你就有什么办法

316
00:12:44,000 --> 00:12:46,000
就好像颜值一样

317
00:12:46,000 --> 00:12:47,000
颜值就是没有别人高

318
00:12:47,000 --> 00:12:48,000
你有什么办法

319
00:12:50,000 --> 00:12:51,000
而且这世界上

320
00:12:51,000 --> 00:12:53,000
这世界上有整容手术

321
00:12:53,000 --> 00:12:55,000
但没有智商提高手术

322
00:12:55,000 --> 00:12:57,000
嗯不也不一定

323
00:12:57,000 --> 00:13:02,000
据说有一些这个叫做呃呃一些药物可以提高自智商

324
00:13:02,000 --> 00:13:05,000
据说你是刺激脑细胞发展吗

325
00:13:05,000 --> 00:13:09,000
还是这是 smartrock 这之类的东西

326
00:13:09,000 --> 00:13:11,000
但我不知道这个靠谱程度怎么样哈

327
00:13:11,000 --> 00:13:13,000
就带带考 ok 节目录完了

328
00:13:13,000 --> 00:13:14,000
你告诉我哪里有吗

329
00:13:14,000 --> 00:13:17,000
那你就不用了吧

330
00:13:17,000 --> 00:13:19,000
哈哈

331
00:13:19,000 --> 00:13:21,000
所以 real

332
00:13:21,000 --> 00:13:25,000
现在不仅仅是可能要告别专业程序员了

333
00:13:25,000 --> 00:13:27,000
墨热目前已经真的告别专业程序了

334
00:13:27,000 --> 00:13:30,000
墨热有迎来他人生中的另一个新的阶段

335
00:13:30,000 --> 00:13:33,000
那么你要不要谈一谈感想

336
00:13:34,000 --> 00:13:34,000
哎

337
00:13:34,000 --> 00:13:36,000
我就想说每个行业都不容易

338
00:13:36,000 --> 00:13:37,000
哈哈哈

339
00:13:38,000 --> 00:13:39,000
就这么简单吗

340
00:13:39,000 --> 00:13:40,000
没有别的吗

341
00:13:40,000 --> 00:13:41,000
嗯没有了

342
00:13:41,000 --> 00:13:43,000
因为也跟他刚开始做嘛

343
00:13:43,000 --> 00:13:46,000
就是还是有一个我还有一个学习的过程

344
00:13:46,000 --> 00:13:46,000
我觉得

345
00:13:47,000 --> 00:13:49,000
所以你现在的工作是完全不用学的吗

346
00:13:50,000 --> 00:13:51,000
其实也不是

347
00:13:51,000 --> 00:13:54,000
我还是希望说就我我现在是这么想的

348
00:13:54,000 --> 00:13:58,000
我觉得写程序这一点可以帮助我提升在其他领域的工作效率

349
00:13:58,000 --> 00:13:59,000
比如说

350
00:13:59,000 --> 00:14:00,000
别人要苦了

351
00:14:00,000 --> 00:14:01,000
他的做一点事

352
00:14:01,000 --> 00:14:05,000
我可以小一些小程序可以帮助我能够更好地完成我的工作

353
00:14:05,000 --> 00:14:06,000
这还挺开心的

354
00:14:06,000 --> 00:14:07,000
其实

355
00:14:08,000 --> 00:14:13,000
那你会觉得自己之前过去这 10 年有 10 年吗

356
00:14:13,000 --> 00:14:19,000
你接受到了编程专业的科班的编程教育对你接下来的工作有什么影响

357
00:14:19,000 --> 00:14:20,000
嗯

358
00:14:20,000 --> 00:14:21,000
还蛮蛮有意义的

359
00:14:21,000 --> 00:14:22,000
其实我自己也有点影响

360
00:14:22,000 --> 00:14:24,000
起码可以和程序员聊的来哈哈哈哈

361
00:14:24,000 --> 00:14:27,000
OK 这是一个比较大的 part

362
00:14:27,000 --> 00:14:32,000
就是程序员在很多时候是不愿意跟不愿意写程序的人聊天的

363
00:14:32,000 --> 00:14:33,000
尤其是同行的

364
00:14:33,000 --> 00:14:35,000
因为思维方式不一样嘛

365
00:14:35,000 --> 00:14:36,000
聊不到一块去

366
00:14:36,000 --> 00:14:37,000
嗯

367
00:14:37,000 --> 00:14:45,000
所以至少我觉得以我以我现在的这个知识储备和这个套词的能力应该还能

368
00:14:45,000 --> 00:14:50,000
在别人没有发现我这个是个彻底的门外汉之前能够今天撑一会儿

369
00:14:50,000 --> 00:14:51,000
嗯

370
00:14:51,000 --> 00:14:53,000
你怎么可能是彻底门外汉呢

371
00:14:53,000 --> 00:14:54,000
你在主持这样一档节目

372
00:14:54,000 --> 00:14:56,000
然后说自己是一个彻底门外汉

373
00:14:56,000 --> 00:14:59,000
你不怕你不怕这个听众的要求

374
00:14:59,000 --> 00:15:01,000
摔耳机就不听了

375
00:15:01,000 --> 00:15:02,000
对啊

376
00:15:02,000 --> 00:15:03,000
好吧

377
00:15:03,000 --> 00:15:04,000
哎

378
00:15:04,000 --> 00:15:06,000
好吧

379
00:15:06,000 --> 00:15:08,000
那接下来念下一封信

380
00:15:08,000 --> 00:15:09,000
嗯

381
00:15:09,000 --> 00:15:10,000
如果有幸被念

382
00:15:10,000 --> 00:15:12,000
求不念出名字和邮箱地址

383
00:15:12,000 --> 00:15:13,000
多谢

384
00:15:13,000 --> 00:15:14,000
五套热友你们好

385
00:15:14,000 --> 00:15:16,000
终于有机会提起电脑写一些反馈

386
00:15:16,000 --> 00:15:18,000
之前许多次听节目有感

387
00:15:18,000 --> 00:15:20,000
甚至做了笔记准备回复

388
00:15:20,000 --> 00:15:22,000
无奈下一次播出的时候才想起来

389
00:15:22,000 --> 00:15:23,000
外汉未曾写成

390
00:15:23,000 --> 00:15:25,000
这也是拖延症

391
00:15:25,000 --> 00:15:26,000
哈哈

392
00:15:26,000 --> 00:15:29,000
听了这次程序病得治

393
00:15:29,000 --> 00:15:31,000
别这样了

394
00:15:31,000 --> 00:15:32,000
不要再逼人家了

395
00:15:32,000 --> 00:15:33,000
好吧

396
00:15:33,000 --> 00:15:34,000
开玩笑

397
00:15:34,000 --> 00:15:36,000
听了这一次程序人之路很有感慨

398
00:15:36,000 --> 00:15:38,000
我的情况可能跟热有点相似

399
00:15:38,000 --> 00:15:40,000
本科修外语和金融

400
00:15:40,000 --> 00:15:42,000
无奈真的放不下这集团体的热爱

401
00:15:42,000 --> 00:15:44,000
曾经自学 java

402
00:15:44,000 --> 00:15:46,000
尝试过科技媒体

403
00:15:46,000 --> 00:15:47,000
终决不够深入

404
00:15:47,000 --> 00:15:49,000
于是决定考研 CS

405
00:15:49,000 --> 00:15:53,000
也考虑过把计算机当作兴趣爱好

406
00:15:53,000 --> 00:15:55,000
但实在是放不下

407
00:15:55,000 --> 00:15:57,000
加上头脑发热选的专业不经如人意

408
00:15:57,000 --> 00:15:59,000
语言就不中讲了

409
00:15:59,000 --> 00:16:03,000
我学的还可能是最令人最令人民讨厌的语言

410
00:16:03,000 --> 00:16:06,000
什么语言最让最令人民讨厌

411
00:16:06,000 --> 00:16:07,000
日语了

412
00:16:07,000 --> 00:16:08,000
那就是是不是

413
00:16:08,000 --> 00:16:11,000
我认为讨厌的语言

414
00:16:11,000 --> 00:16:13,000
阿拉伯语吧

415
00:16:13,000 --> 00:16:16,000
为什么会认为令人民讨厌呢

416
00:16:16,000 --> 00:16:18,000
最令人民讨厌的语言

417
00:16:18,000 --> 00:16:20,000
不知道

418
00:16:20,000 --> 00:16:21,000
好奇

419
00:16:21,000 --> 00:16:23,000
印第语

420
00:16:23,000 --> 00:16:26,000
令人感慨给你拼命

421
00:16:26,000 --> 00:16:28,000
sorry

422
00:16:28,000 --> 00:16:30,000
金融越学越绝的

423
00:16:30,000 --> 00:16:34,000
这玩意也好意思叫科学

424
00:16:34,000 --> 00:16:37,000
不知道 real 放弃商科有没有类似原因

425
00:16:37,000 --> 00:16:38,000
又即

426
00:16:38,000 --> 00:16:42,000
翻转二叉数是说交换二叉数所有子数的左右节点

427
00:16:42,000 --> 00:16:44,000
这是一道很简单的题

428
00:16:44,000 --> 00:16:46,000
在考研题里也算常规题

429
00:16:46,000 --> 00:16:47,000
但就像吴涛说的

430
00:16:47,000 --> 00:16:48,000
会不会是

431
00:16:48,000 --> 00:16:49,000
对默写快盘

432
00:16:49,000 --> 00:16:51,000
又对开发有什么用呢

433
00:16:51,000 --> 00:16:53,000
针对 real 说的商科纸胶计算器

434
00:16:53,000 --> 00:16:54,000
我们金融有一门课

435
00:16:54,000 --> 00:16:57,000
全程教用 Excel 模拟交易组合模型

436
00:16:57,000 --> 00:17:00,000
期末考试是用 Excel 模拟期权组合

437
00:17:00,000 --> 00:17:02,000
可能情况也在变吧

438
00:17:02,000 --> 00:17:03,000
但是这里也可以问一句

439
00:17:03,000 --> 00:17:05,000
这又能有什么用呢

440
00:17:05,000 --> 00:17:07,000
特别是在有现成工具的情况下

441
00:17:07,000 --> 00:17:09,000
我想这两个问题的答案

442
00:17:09,000 --> 00:17:11,000
可能只是简单的帮助理解

443
00:17:11,000 --> 00:17:12,000
会不会

444
00:17:12,000 --> 00:17:15,000
会不用参考的默写一段程度

445
00:17:15,000 --> 00:17:18,000
会不用参考的默写一定程度

446
00:17:18,000 --> 00:17:20,000
上代表着透彻的理解吧

447
00:17:20,000 --> 00:17:22,000
特别是对于初学者来说

448
00:17:22,000 --> 00:17:24,000
只是需要透彻理解的原理

449
00:17:24,000 --> 00:17:27,000
和只需要记住如何使用工具

450
00:17:27,000 --> 00:17:28,000
和参考的界限

451
00:17:28,000 --> 00:17:30,000
是随着时代领域

452
00:17:30,000 --> 00:17:33,000
乃至于工具的获取成本而不断变化的

453
00:17:33,000 --> 00:17:36,000
毕竟没有人不允许你只用乘法

454
00:17:36,000 --> 00:17:39,000
不用用乘法只用加法了不是

455
00:17:41,000 --> 00:17:42,000
这句话什么意思

456
00:17:42,000 --> 00:17:45,000
就是乘法是加法的一个

457
00:17:45,000 --> 00:17:47,000
毕竟没有人不允许你用乘法

458
00:17:47,000 --> 00:17:49,000
只用加法了不是

459
00:17:49,000 --> 00:17:51,000
乘法可以用加法来实现

460
00:17:51,000 --> 00:17:52,000
是

461
00:17:52,000 --> 00:17:53,000
最后

462
00:17:53,000 --> 00:17:55,000
不管 real 如何选择未来的路

463
00:17:55,000 --> 00:17:56,000
住好

464
00:17:56,000 --> 00:17:57,000
武涛听起来生活很舒服

465
00:17:57,000 --> 00:17:59,000
同样住生活有趣

466
00:17:59,000 --> 00:18:01,000
希望贵节目生生不息

467
00:18:03,000 --> 00:18:06,000
这是暗示我们要换主持人了是吧

468
00:18:10,000 --> 00:18:11,000
这个特别有意思

469
00:18:11,000 --> 00:18:13,000
我刚刚讲有一点

470
00:18:13,000 --> 00:18:15,000
他那其实贴挺好的

471
00:18:15,000 --> 00:18:16,000
就是说

472
00:18:16,000 --> 00:18:18,000
起码在初中上

473
00:18:18,000 --> 00:18:21,000
我认为说你能够在黑板上默写出来

474
00:18:21,000 --> 00:18:24,000
就基本可以等同于你是透彻的理解

475
00:18:24,000 --> 00:18:26,000
这个我觉得还是有一定的道理的吧

476
00:18:26,000 --> 00:18:27,000
就是说

477
00:18:27,000 --> 00:18:29,000
有些事情如果你理解他的原理

478
00:18:29,000 --> 00:18:31,000
你是可以叫做推敲出来的

479
00:18:31,000 --> 00:18:34,000
就是从一个基本的原则推敲出来

480
00:18:34,000 --> 00:18:37,000
一些他要让你实现的功能

481
00:18:37,000 --> 00:18:40,000
但是怎么说呢

482
00:18:41,000 --> 00:18:44,000
也不是所有人都能真的有这个能力

483
00:18:44,000 --> 00:18:45,000
我觉得

484
00:18:45,000 --> 00:18:46,000
说也是

485
00:18:46,000 --> 00:18:53,000
其实我觉得先不说前面用什么默写快排之类的

486
00:18:53,000 --> 00:18:56,000
就是你在写一段程序的时候

487
00:18:56,000 --> 00:18:58,000
如果一个函数

488
00:18:59,000 --> 00:19:05,000
你记住的函数的用途以及函数的签名越多

489
00:19:05,000 --> 00:19:08,000
你写程序的时候被打断的概率就越小

490
00:19:09,000 --> 00:19:11,000
这句话我都要再念再说一遍

491
00:19:11,000 --> 00:19:16,000
就是你的你如果你在写程序的时候不停要去查

492
00:19:16,000 --> 00:19:17,000
一个函数的用法

493
00:19:17,000 --> 00:19:19,000
以及函数的签名的话

494
00:19:19,000 --> 00:19:24,000
你流畅写程序的过程就会被打断对吧

495
00:19:24,000 --> 00:19:27,000
这不就是 IDE 大放光彩的时候吗

496
00:19:29,000 --> 00:19:31,000
auto complete

497
00:19:31,000 --> 00:19:34,000
但即便如此

498
00:19:36,000 --> 00:19:38,000
IDE

499
00:19:38,000 --> 00:19:40,000
我还真的没有办法反驳

500
00:19:40,000 --> 00:19:42,000
你心无言以对

501
00:19:42,000 --> 00:19:44,000
对我竟然无言以对

502
00:19:44,000 --> 00:19:46,000
可能是因为目前的状况

503
00:19:46,000 --> 00:19:49,000
我基本上不会用 IDE 来写需要写的东西

504
00:19:49,000 --> 00:19:52,000
所以会有这样的感觉

505
00:19:52,000 --> 00:19:57,000
如果我可以减少去看文档的次数的话

506
00:19:57,000 --> 00:19:59,000
我写程序的效率会变快

507
00:20:00,000 --> 00:20:04,000
对其实就是说这里就两个层次的一个用法

508
00:20:04,000 --> 00:20:05,000
像我们那种苦行僧

509
00:20:05,000 --> 00:20:07,000
他就说记住函数

510
00:20:07,000 --> 00:20:09,000
下次你写的时候就不会忘记它了

511
00:20:09,000 --> 00:20:10,000
对吧

512
00:20:10,000 --> 00:20:13,000
但也有说像 objective C 里面的

513
00:20:13,000 --> 00:20:15,000
函数面那么长

514
00:20:15,000 --> 00:20:16,000
我就算记住了

515
00:20:16,000 --> 00:20:18,000
我光打字也要很久

516
00:20:18,000 --> 00:20:21,000
这个时候 auto complete 还是挺有用的

517
00:20:22,000 --> 00:20:25,000
当然这个问题如果深入下去的话

518
00:20:25,000 --> 00:20:29,000
还是会和语言和具体所使用的环境

519
00:20:29,000 --> 00:20:33,000
以及你开发的程序的复杂程度

520
00:20:33,000 --> 00:20:36,000
无疑是有关系的

521
00:20:36,000 --> 00:20:39,000
就好像建宗和器宗的差别对吧

522
00:20:39,000 --> 00:20:41,000
就我们可能会觉得

523
00:20:43,000 --> 00:20:50,000
因为是做后端或者是做一些不需要特别复杂的东西的

524
00:20:50,000 --> 00:20:53,000
不需要使用特别啰嗦的语言的时候

525
00:20:53,000 --> 00:20:56,000
你会觉得记一些常用的函数

526
00:20:56,000 --> 00:20:58,000
以及它们的用法其实很自然的事情

527
00:20:58,000 --> 00:21:02,000
但是如果你处理的东西的复杂程度真的摆在那了

528
00:21:02,000 --> 00:21:04,000
然后你又不可能脱离 Idea 的话

529
00:21:04,000 --> 00:21:09,000
可能不去记也是一个理性的选择了

530
00:21:09,000 --> 00:21:11,000
对下一条

531
00:21:11,000 --> 00:21:12,000
一位叫做 Jerry

532
00:21:13,000 --> 00:21:15,000
Jerry Lin 的朋友说

533
00:21:15,000 --> 00:21:16,000
提到高能物理

534
00:21:16,000 --> 00:21:19,000
我就默认是高能实验物理

535
00:21:19,000 --> 00:21:20,000
实验高能物理

536
00:21:20,000 --> 00:21:22,000
我们什么时候提到过高能物理

537
00:21:23,000 --> 00:21:24,000
我也忘了

538
00:21:24,000 --> 00:21:26,000
有点年份了

539
00:21:26,000 --> 00:21:27,000
对

540
00:21:27,000 --> 00:21:29,000
这是过了一个月怎么就

541
00:21:31,000 --> 00:21:32,000
忘了这么多

542
00:21:32,000 --> 00:21:34,000
然后他提到了 CERN

543
00:21:34,000 --> 00:21:36,000
就是欧洲原子能中心 CERN

544
00:21:36,000 --> 00:21:38,000
CERN 肯定都很熟悉

545
00:21:38,000 --> 00:21:40,000
毕竟是在欧洲

546
00:21:40,000 --> 00:21:41,000
而且同时又是

547
00:21:41,000 --> 00:21:43,000
WWW 的发源地

548
00:21:43,000 --> 00:21:45,000
括号

549
00:21:45,000 --> 00:21:52,000
WWW 某种意义上说是为了解决高能物理的分布式计算而发明的

550
00:21:52,000 --> 00:21:54,000
这个倒是第一次听说

551
00:21:54,000 --> 00:21:59,000
CERN 有一个叫做 root 的 CPP 计算框架

552
00:21:59,000 --> 00:22:01,000
同时带有 interactive 的环境

553
00:22:01,000 --> 00:22:02,000
类似于 ipython

554
00:22:02,000 --> 00:22:05,000
这个框架有各种数据处理和 plotting 的功能

555
00:22:05,000 --> 00:22:06,000
还蛮好的

556
00:22:06,000 --> 00:22:08,000
就是文档比较 shit

557
00:22:08,000 --> 00:22:11,000
配合他们最近的数据开放项目还是蛮有趣的

558
00:22:11,000 --> 00:22:12,000
好

559
00:22:12,000 --> 00:22:17,000
我还真的不知道

560
00:22:17,000 --> 00:22:21,000
WWW 是为了解决高能物理的分布式计算而发明的

561
00:22:21,000 --> 00:22:23,000
我就记得是写论文

562
00:22:23,000 --> 00:22:24,000
他们要引用东西

563
00:22:24,000 --> 00:22:26,000
然后等一下

564
00:22:26,000 --> 00:22:29,000
他说是 WWW 不是 HTML 是吧

565
00:22:29,000 --> 00:22:36,000
可是 WWW 不就的基本要素不就是一个 web 服务器吗

566
00:22:36,000 --> 00:22:38,000
我去过 CERN

567
00:22:38,000 --> 00:22:40,000
我去过 CERN 参观

568
00:22:40,000 --> 00:22:41,000
然后我还见到了那一台电脑

569
00:22:41,000 --> 00:22:47,000
然后我还去去了 Timberlake 的

570
00:22:47,000 --> 00:22:49,000
他开发出 web 的实验室

571
00:22:49,000 --> 00:22:51,000
是在地下很难讲讲

572
00:22:51,000 --> 00:22:53,000
是在地下的一个实验室里面

573
00:22:53,000 --> 00:22:58,000
然后我印象里面

574
00:22:58,000 --> 00:23:03,000
他只是为了把 hypertext 呈现给大家

575
00:23:03,000 --> 00:23:06,000
一边翻阅而研发出

576
00:23:06,000 --> 00:23:10,000
在 sgml 的基础上开发出了 HTML

577
00:23:10,000 --> 00:23:15,000
然后把它做成一个 web 服务器

578
00:23:15,000 --> 00:23:18,000
这样所有人都做其他人都会去访问他的页面

579
00:23:18,000 --> 00:23:19,000
大概这个样子

580
00:23:20,000 --> 00:23:22,000
你这么一问我也卡住了

581
00:23:22,000 --> 00:23:24,000
追根溯源到底是为了啥

582
00:23:25,000 --> 00:23:28,000
总之化石代的东西外打正招的

583
00:23:28,000 --> 00:23:32,000
就在 CERN 的一台 next 的电脑上被研发出来了

584
00:23:32,000 --> 00:23:36,000
然后 CERN 现在有这样一个叫做 root 的 cpp 计算框架

585
00:23:38,000 --> 00:23:39,000
可以去研究一下

586
00:23:39,000 --> 00:23:43,000
不过 cpp 你有兴趣吗

587
00:23:43,000 --> 00:23:44,000
nope

588
00:23:44,000 --> 00:23:45,000
ok

589
00:23:45,000 --> 00:23:49,000
所以这一封来信的我们的反馈就是 good no

590
00:23:51,000 --> 00:23:52,000
不是呵呵

591
00:23:54,000 --> 00:23:55,000
呵呵太有贬义了

592
00:23:55,000 --> 00:23:56,000
我觉得

593
00:23:56,000 --> 00:23:57,000
没有吧

594
00:23:57,000 --> 00:23:58,000
呵呵是中性的

595
00:23:58,000 --> 00:23:59,000
你确定吗

596
00:23:59,000 --> 00:24:00,000
为什么我总觉得

597
00:24:02,000 --> 00:24:03,000
好吧

598
00:24:03,000 --> 00:24:04,000
那可能我理解不太对

599
00:24:05,000 --> 00:24:07,000
我总觉得呵呵的语义是

600
00:24:07,000 --> 00:24:08,000
呃

601
00:24:09,000 --> 00:24:12,000
哦嗯我知道了

602
00:24:12,000 --> 00:24:16,000
但是就所以呢也没有什么兴趣

603
00:24:16,000 --> 00:24:17,000
所以就呵呵了

604
00:24:17,000 --> 00:24:18,000
所以他是中性的

605
00:24:18,000 --> 00:24:19,000
没有错

606
00:24:20,000 --> 00:24:24,000
而且呵呵更多的时候被使用的场合是

607
00:24:25,000 --> 00:24:27,000
你这种想法真蠢

608
00:24:27,000 --> 00:24:28,000
我懒得跟你辩论

609
00:24:30,000 --> 00:24:34,000
比如说什么对方说 php 是最好的语言

610
00:24:34,000 --> 00:24:35,000
然后你说呵呵

611
00:24:36,000 --> 00:24:37,000
you know

612
00:24:37,000 --> 00:24:38,000
就那种不屑的感觉

613
00:24:39,000 --> 00:24:41,000
呵呵呵呵呵好吧懂了

614
00:24:41,000 --> 00:24:42,000
对 ok

615
00:24:42,000 --> 00:24:43,000
那就我们不合合

616
00:24:43,000 --> 00:24:44,000
嗯谢谢

617
00:24:44,000 --> 00:24:45,000
谢谢

618
00:24:45,000 --> 00:24:46,000
good

619
00:24:46,000 --> 00:24:47,000
因为是 good to know 嘛

620
00:24:47,000 --> 00:24:48,000
就是谢谢了

621
00:24:48,000 --> 00:24:49,000
嗯哼

622
00:24:49,000 --> 00:24:52,000
因为其实 plotting 这个事情其实还要讲一下

623
00:24:52,000 --> 00:24:57,000
我觉得因为之前我上学的时候还经常用那个叫什么

624
00:24:57,000 --> 00:24:58,000
multi plot

625
00:24:58,000 --> 00:24:59,000
啊 ok

626
00:24:59,000 --> 00:25:04,000
然后通过那个那个就是自己写个 pattern 去输出那个点嘛

627
00:25:04,000 --> 00:25:07,000
然后去用 gloom plot 这些东西画

628
00:25:07,000 --> 00:25:09,000
但是画出来的那个

629
00:25:09,000 --> 00:25:11,000
真是惨不忍睹

630
00:25:12,000 --> 00:25:15,000
可是你都在用 pison 了

631
00:25:15,000 --> 00:25:20,000
为什么不用那个叫什么 matplottingmatplotlib 还是叫什么

632
00:25:20,000 --> 00:25:21,000
那个

633
00:25:21,000 --> 00:25:23,000
忘了是为什么

634
00:25:23,000 --> 00:25:24,000
因为当时好像

635
00:25:25,000 --> 00:25:27,000
那个在那个 linux 上面有吗

636
00:25:28,000 --> 00:25:30,000
有啊这是一个跨平台的库

637
00:25:30,000 --> 00:25:31,000
ok

638
00:25:31,000 --> 00:25:33,000
那可能当时比较幼稚

639
00:25:33,000 --> 00:25:35,000
就就只知道用那个 gloom plot

640
00:25:36,000 --> 00:25:37,000
ok

641
00:25:37,000 --> 00:25:38,000
还用过那个

642
00:25:38,000 --> 00:25:44,000
还考虑过用那个啊啊啊 meta post 来来做 plotting 啊

643
00:25:44,000 --> 00:25:48,000
我也是淡碎了 meta post 好古老啊

644
00:25:48,000 --> 00:25:50,000
我已经有三年没有听到过这个名字了

645
00:25:50,000 --> 00:25:52,000
至少因为这些人已经淘汰

646
00:25:52,000 --> 00:25:54,000
基本上没有什么人在用了嘛

647
00:25:54,000 --> 00:25:57,000
所以哪怕是在 litech 这个社区

648
00:25:57,000 --> 00:26:01,000
大家要转用那个什么 pikz 去画图了

649
00:26:01,000 --> 00:26:06,000
所以 meta post 这种比较落后的东西就让他过去吧

650
00:26:06,000 --> 00:26:07,000
随风而去吧

651
00:26:07,000 --> 00:26:08,000
嗯哼

652
00:26:08,000 --> 00:26:09,000
ok

653
00:26:09,000 --> 00:26:10,000
呃

654
00:26:10,000 --> 00:26:11,000
然后是

655
00:26:11,000 --> 00:26:13,000
新闻环节的新闻环节

656
00:26:13,000 --> 00:26:16,000
这个是应该插入那个新闻联播的音效

657
00:26:16,000 --> 00:26:17,000
这些都

658
00:26:17,000 --> 00:26:19,000
嘣嘣嘣

659
00:26:19,000 --> 00:26:21,000
我好久没看电视了

660
00:26:21,000 --> 00:26:22,000
那个音效改了吗

661
00:26:22,000 --> 00:26:24,000
我好怀念这个音效

662
00:26:24,000 --> 00:26:25,000
我已经

663
00:26:26,000 --> 00:26:28,000
好多年没有听过了

664
00:26:28,000 --> 00:26:29,000
对对

665
00:26:29,000 --> 00:26:30,000
呃

666
00:26:30,000 --> 00:26:31,000
观众朋友们

667
00:26:31,000 --> 00:26:34,000
我们本期播报第一则新闻是看看别人家的小孩

668
00:26:34,000 --> 00:26:36,000
其实这些都不是新闻了

669
00:26:36,000 --> 00:26:37,000
这些新闻是

670
00:26:37,000 --> 00:26:41,000
新闻都已经过去三到五周了

671
00:26:41,000 --> 00:26:41,000
至少

672
00:26:41,000 --> 00:26:44,000
然后感兴趣的朋友们其实都已经

673
00:26:44,000 --> 00:26:46,000
都已经听过了

674
00:26:46,000 --> 00:26:49,000
所以我们就算是最近发生的要闻的评论

675
00:26:49,000 --> 00:26:51,000
好

676
00:26:51,000 --> 00:26:53,000
今年第一则新闻是今年 10 岁的

677
00:26:53,000 --> 00:26:56,000
Ryan 是 Doom 和 Quake 的主持人

678
00:26:56,000 --> 00:26:59,000
Oculus Rift CTO John Carmack 的儿子

679
00:26:59,000 --> 00:27:00,000
好

680
00:27:00,000 --> 00:27:01,000
上次节目我们说到了 John Carmack

681
00:27:01,000 --> 00:27:05,000
在他 Oculus VR 的开发环境里面

682
00:27:05,000 --> 00:27:08,000
使用 Skim 作为脚本语言

683
00:27:09,000 --> 00:27:15,000
然后作为一个 Eat Your Own Dog Food 的实践家

684
00:27:15,000 --> 00:27:18,000
他让自己的 10 岁的儿子开始学 Skim

685
00:27:18,000 --> 00:27:22,000
然后在 Racket 开发环境里面写了一款游戏

686
00:27:23,000 --> 00:27:30,000
叫做 MrBarB.Q and Angry Face

687
00:27:31,000 --> 00:27:32,000
不

688
00:27:32,000 --> 00:27:35,000
应该是他这款游戏叫做 Fly

689
00:27:35,000 --> 00:27:39,000
然后 Fly 的主角一看就没玩了

690
00:27:39,000 --> 00:27:40,000
我玩了

691
00:27:40,000 --> 00:27:41,000
我玩了

692
00:27:41,000 --> 00:27:42,000
我还没过

693
00:27:42,000 --> 00:27:47,000
就是他主角就是里面飞行的小人

694
00:27:47,000 --> 00:27:49,000
叫做 MrBarB.Q

695
00:27:49,000 --> 00:27:50,000
听出来了

696
00:27:50,000 --> 00:27:51,000
BarB.Q

697
00:27:51,000 --> 00:27:51,000
对

698
00:27:51,000 --> 00:27:54,000
然后他其实这个游戏中很冷的

699
00:27:54,000 --> 00:27:56,000
烧烤哥

700
00:27:56,000 --> 00:27:59,000
你控制烧烤先生在云里面飞

701
00:27:59,000 --> 00:28:00,000
如果撞到

702
00:28:00,000 --> 00:28:02,000
好像逻辑是撞到云就死

703
00:28:02,000 --> 00:28:03,000
是吧

704
00:28:03,000 --> 00:28:05,000
反正撞到后掉下去都是死了

705
00:28:05,000 --> 00:28:07,000
对其实就是一个 Flappy Bird 的 copy

706
00:28:07,000 --> 00:28:10,000
但是无论如何让人惊讶的是

707
00:28:10,000 --> 00:28:12,000
这是一个小孩写出来

708
00:28:12,000 --> 00:28:14,000
10 岁的小朋友写的

709
00:28:14,000 --> 00:28:16,000
对一个 10 岁的小朋友写出来的 Flappy Bird

710
00:28:16,000 --> 00:28:19,000
我一生中都没有写过一个 Flappy Bird

711
00:28:19,000 --> 00:28:20,000
You know

712
00:28:20,000 --> 00:28:24,000
而且从你的这首太不完整了

713
00:28:24,000 --> 00:28:25,000
你就写一个吧

714
00:28:25,000 --> 00:28:31,000
真的我感觉 Flappy Bird 这个游戏就好像

715
00:28:31,000 --> 00:28:34,000
你做游戏的话就好像它的一个 hello world 一样

716
00:28:35,000 --> 00:28:39,000
做游戏的 hello world 不应该是卢登斯方块吗

717
00:28:39,000 --> 00:28:40,000
你没有写过卢登斯方块吗

718
00:28:40,000 --> 00:28:42,000
好吧

719
00:28:42,000 --> 00:28:44,000
做手游的 hello world

720
00:28:44,000 --> 00:28:45,000
好吧

721
00:28:45,000 --> 00:28:48,000
你可无言对

722
00:28:48,000 --> 00:28:51,000
贪食蛇一笔

723
00:28:51,000 --> 00:28:54,000
Flappy Bird 应该比贪食蛇简单一些

724
00:28:54,000 --> 00:28:56,000
也难说

725
00:28:56,000 --> 00:28:57,000
难说

726
00:28:57,000 --> 00:28:58,000
差不多吧

727
00:28:58,000 --> 00:29:00,000
我觉得我还是觉得贪食蛇更简单一些

728
00:29:00,000 --> 00:29:03,000
因为现在贪食蛇如果你做一个静态场景的话

729
00:29:03,000 --> 00:29:05,000
图形那块会简单一些为了

730
00:29:05,000 --> 00:29:07,000
逻辑也简单

731
00:29:07,000 --> 00:29:08,000
贪食蛇有什么逻辑

732
00:29:08,000 --> 00:29:13,000
贪食蛇基本上就是贪食蛇不用考虑场景生成的问题

733
00:29:13,000 --> 00:29:16,000
只需要随机生成一个苹果就可以了

734
00:29:16,000 --> 00:29:16,000
好吧

735
00:29:17,000 --> 00:29:20,000
但不管所以不管怎么说

736
00:29:20,000 --> 00:29:23,000
这个 10 岁的小孩写出一个 Flappy Bird 的 copy

737
00:29:23,000 --> 00:29:24,000
也是非常了不起

738
00:29:24,000 --> 00:29:25,000
对

739
00:29:25,000 --> 00:29:27,000
他用的开发环节也挺有意思的

740
00:29:27,000 --> 00:29:28,000
Racket 你用过吗

741
00:29:28,000 --> 00:29:28,000
用过

742
00:29:28,000 --> 00:29:31,000
没记错

743
00:29:31,000 --> 00:29:34,000
是 Lay Lisp 不是吗

744
00:29:34,000 --> 00:29:35,000
Racket 是 Skimmet

745
00:29:35,000 --> 00:29:38,000
Skimmet 的一个实现

746
00:29:38,000 --> 00:29:38,000
对

747
00:29:39,000 --> 00:29:41,000
它叫 R 6 什么 S 级

748
00:29:41,000 --> 00:29:42,000
我忘了

749
00:29:42,000 --> 00:29:43,000
还有一个版本号挺奇怪的

750
00:29:43,000 --> 00:29:44,000
OK

751
00:29:44,000 --> 00:29:45,000
对

752
00:29:45,000 --> 00:29:47,000
我就是指的那个 reference 的版本号

753
00:29:47,000 --> 00:29:48,000
然后他把那个 reference

754
00:29:48,000 --> 00:29:49,000
对

755
00:29:49,000 --> 00:29:51,000
Racket 是一个具体的实现

756
00:29:51,000 --> 00:29:53,000
然后现在他有一个叫做 Dr.

757
00:29:53,000 --> 00:29:55,000
Racket 这么一个一套套件

758
00:29:56,000 --> 00:29:57,000
里面包含了各种工具

759
00:29:57,000 --> 00:29:58,000
它比较方便

760
00:29:58,000 --> 00:30:00,000
就可以直接生成一个跨平台的应用

761
00:30:00,000 --> 00:30:01,000
就是可以生成

762
00:30:01,000 --> 00:30:02,000
这个

763
00:30:02,000 --> 00:30:05,000
Olinus 和 windows 和 mac 都可以运行的

764
00:30:05,000 --> 00:30:06,000
这个 Binary

765
00:30:07,000 --> 00:30:14,000
为什么他这个 ryan 没有把 linux 平台的包释出来了

766
00:30:14,000 --> 00:30:17,000
他之前只放出了 mac 和 windows 版本

767
00:30:17,000 --> 00:30:18,000
好问题

768
00:30:18,000 --> 00:30:19,000
我也不知道

769
00:30:19,000 --> 00:30:19,000
嗯

770
00:30:19,000 --> 00:30:20,000
可他不用吧

771
00:30:21,000 --> 00:30:22,000
对

772
00:30:22,000 --> 00:30:24,000
然后他写的这个 fly 的

773
00:30:24,000 --> 00:30:28,000
他写的 fly 的游戏里面有三种模式

774
00:30:28,000 --> 00:30:29,000
一种是 granny 模式

775
00:30:29,000 --> 00:30:30,000
就是非常慢

776
00:30:31,000 --> 00:30:33,000
然后是好像四种模式

777
00:30:33,000 --> 00:30:34,000
脑

778
00:30:35,000 --> 00:30:37,000
老奶奶模式

779
00:30:37,000 --> 00:30:38,000
好困难

780
00:30:38,000 --> 00:30:40,000
祖母模式

781
00:30:40,000 --> 00:30:43,000
然后是正常模式

782
00:30:43,000 --> 00:30:44,000
还有专家模式

783
00:30:44,000 --> 00:30:46,000
好像还有一个叫什么 hypersonic 模式

784
00:30:46,000 --> 00:30:47,000
Hyper mode

785
00:30:47,000 --> 00:30:48,000
就是那个 mode 里面

786
00:30:48,000 --> 00:30:51,000
基本上如果你选择以那个 mode 开始游戏的话

787
00:30:51,000 --> 00:30:53,000
一开场就会死

788
00:30:53,000 --> 00:30:56,000
那个翻译成这么叫做顺难

789
00:30:56,000 --> 00:30:57,000
就坚持 10 秒

790
00:30:57,000 --> 00:30:58,000
模式

791
00:30:58,000 --> 00:30:59,000
OK

792
00:30:59,000 --> 00:31:01,000
我可能 0.5 秒都坚持不了

793
00:31:01,000 --> 00:31:03,000
因为一上来

794
00:31:03,000 --> 00:31:04,000
你只有两个选择

795
00:31:04,000 --> 00:31:05,000
按空格键

796
00:31:05,000 --> 00:31:06,000
或者不按空格键

797
00:31:06,000 --> 00:31:06,000
不按空格键的话

798
00:31:06,000 --> 00:31:08,000
就会撞到下方的云

799
00:31:08,000 --> 00:31:09,000
按空格键的话

800
00:31:09,000 --> 00:31:10,000
就会撞到上方的云

801
00:31:10,000 --> 00:31:11,000
所以

802
00:31:11,000 --> 00:31:11,000
OK

803
00:31:11,000 --> 00:31:12,000
有了

804
00:31:12,000 --> 00:31:13,000
所以

805
00:31:13,000 --> 00:31:14,000
所以你对这事情怎么看

806
00:31:14,000 --> 00:31:15,000
这个小朋友

807
00:31:16,000 --> 00:31:17,000
嗯

808
00:31:18,000 --> 00:31:20,000
钱浪死在沙滩上

809
00:31:20,000 --> 00:31:22,000
已经死了是吧

810
00:31:22,000 --> 00:31:24,000
就我也不知道

811
00:31:24,000 --> 00:31:27,000
这可是 10 岁写游戏是

812
00:31:28,000 --> 00:31:30,000
非常了不起的事情吗

813
00:31:31,000 --> 00:31:32,000
我不知道

814
00:31:32,000 --> 00:31:34,000
但是他的这个就是我们先不说这个品

815
00:31:34,000 --> 00:31:35,000
就是这个

816
00:31:35,000 --> 00:31:36,000
这个效果怎么样

817
00:31:36,000 --> 00:31:38,000
但是我觉得完成度和这个流程

818
00:31:38,000 --> 00:31:40,000
还是挺让我吃惊的

819
00:31:40,000 --> 00:31:43,000
因为你看到他有个介绍

820
00:31:43,000 --> 00:31:45,000
他说他怎么会写这么一个游戏

821
00:31:45,000 --> 00:31:48,000
他让他弟弟还是哥哥帮他做什么配乐

822
00:31:48,000 --> 00:31:49,000
你乱七八糟的

823
00:31:49,000 --> 00:31:50,000
OK

824
00:31:50,000 --> 00:31:53,000
他们有个 team 是 angry face

825
00:31:53,000 --> 00:31:57,000
就是他之前的另外一款游戏里面的

826
00:31:57,000 --> 00:31:59,000
angry face 的笑脸

827
00:31:59,000 --> 00:32:01,000
就是我说怒脸

828
00:32:01,000 --> 00:32:02,000
是他妈给他画

829
00:32:02,000 --> 00:32:04,000
然后他用

830
00:32:04,000 --> 00:32:04,000
对

831
00:32:04,000 --> 00:32:06,000
g amp

832
00:32:06,000 --> 00:32:06,000
jimp

833
00:32:06,000 --> 00:32:09,000
把那个笑脸抠出来

834
00:32:09,000 --> 00:32:10,000
我觉得这个很了不起

835
00:32:10,000 --> 00:32:14,000
而且他还学在这个做这个游戏中

836
00:32:14,000 --> 00:32:17,000
学会了用 blender 做 3 D 模型

837
00:32:17,000 --> 00:32:20,000
还学会用 audacity

838
00:32:20,000 --> 00:32:22,000
就是我们你也用来编辑音频

839
00:32:22,000 --> 00:32:24,000
对我此刻正在 audacity 来录音

840
00:32:24,000 --> 00:32:26,000
对游戏的声音

841
00:32:26,000 --> 00:32:29,000
真是太强了

842
00:32:29,000 --> 00:32:31,000
这是 10 岁的小孩了

843
00:32:31,000 --> 00:32:34,000
这个的确是应该承认的确很强

844
00:32:34,000 --> 00:32:37,000
所以什么基因好还是不一样的

845
00:32:38,000 --> 00:32:40,000
对有家父熏陶

846
00:32:40,000 --> 00:32:43,000
关键是小孩长得逆天的可爱

847
00:32:44,000 --> 00:32:47,000
这倒是打开主页的话

848
00:32:47,000 --> 00:32:49,000
这颜值真的是逼人的

849
00:32:49,000 --> 00:32:50,000
爆表简直

850
00:32:51,000 --> 00:32:53,000
他的网址我一直没想到那是什么意思

851
00:32:53,000 --> 00:32:55,000
他这网址是 ek 3

852
00:32:55,000 --> 00:32:56,000
1 就是数字 1

853
00:32:56,000 --> 00:32:58,000
字母 k 数字 3

854
00:32:58,000 --> 00:32:59,000
字母 c 点靠

855
00:32:59,000 --> 00:33:00,000
我不知道什么意思

856
00:33:00,000 --> 00:33:02,000
1003 c

857
00:33:02,000 --> 00:33:04,000
因为 4 个字母是 103 c 的字母

858
00:33:04,000 --> 00:33:07,000
和数字组合的网址是非常难找

859
00:33:07,000 --> 00:33:09,000
我有点怀疑这个网址其实

860
00:33:09,000 --> 00:33:11,000
4 个字母还蛮常见的

861
00:33:13,000 --> 00:33:14,000
不已经卖光了

862
00:33:14,000 --> 00:33:16,000
现在你去注册

863
00:33:16,000 --> 00:33:17,000
三个的卖光了

864
00:33:17,000 --> 00:33:18,000
我知道 4 个应该还有

865
00:33:19,000 --> 00:33:20,000
你确定吗

866
00:33:21,000 --> 00:33:22,000
ek 3 c

867
00:33:23,000 --> 00:33:24,000
他是.com

868
00:33:24,000 --> 00:33:24,000
ok

869
00:33:24,000 --> 00:33:25,000
maybe

870
00:33:25,000 --> 00:33:26,000
对有可能

871
00:33:26,000 --> 00:33:28,000
因为我有一个三个字母.net

872
00:33:28,000 --> 00:33:29,000
.net 好像不太值钱

873
00:33:31,000 --> 00:33:31,000
对

874
00:33:32,000 --> 00:33:32,000
anyway

875
00:33:32,000 --> 00:33:33,000
好了

876
00:33:33,000 --> 00:33:34,000
这就是

877
00:33:34,000 --> 00:33:38,000
这个什么大人口中别人家

878
00:33:38,000 --> 00:33:40,000
闪闪牛逼的闪闪发光

879
00:33:40,000 --> 00:33:43,000
让你无限自卑的小孩

880
00:33:43,000 --> 00:33:44,000
到此结束

881
00:33:44,000 --> 00:33:47,000
不过他爹毕竟是做游戏的

882
00:33:47,000 --> 00:33:47,000
然后

883
00:33:47,000 --> 00:33:48,000
不不不

884
00:33:48,000 --> 00:33:50,000
这个描述太那个了

885
00:33:50,000 --> 00:33:53,000
他爹毕竟是一个做游戏的十鼻祖

886
00:33:53,000 --> 00:33:58,000
所以他在 about me 的界面里面也写到了

887
00:33:58,000 --> 00:34:02,000
他特别喜欢玩 dragondungeon

888
00:34:02,000 --> 00:34:04,000
然后还列出了自己的阵营

889
00:34:04,000 --> 00:34:08,000
就你会觉得我靠一个 10 岁的小孩

890
00:34:08,000 --> 00:34:11,000
已经开始研究阵营之类的

891
00:34:14,000 --> 00:34:15,000
不过也难说

892
00:34:15,000 --> 00:34:17,000
我相信 70 年代的时候

893
00:34:17,000 --> 00:34:19,000
dnd 作为纸游

894
00:34:19,000 --> 00:34:21,000
就桌面纸游最流行的时候

895
00:34:21,000 --> 00:34:22,000
也许

896
00:34:23,000 --> 00:34:24,000
那时候的小孩也是这样的

897
00:34:24,000 --> 00:34:27,000
就还会自己做数数值卡

898
00:34:27,000 --> 00:34:29,000
自己去算那些莫名其妙的

899
00:34:29,000 --> 00:34:32,000
就好像我小时候玩什么黑白棋

900
00:34:32,000 --> 00:34:34,000
五子棋之类的那种常态

901
00:34:34,000 --> 00:34:36,000
豁免减定之类的

902
00:34:36,000 --> 00:34:39,000
而且他还列出一大堆自己喜欢玩的游戏

903
00:34:39,000 --> 00:34:40,000
其中包括 minecraft

904
00:34:41,000 --> 00:34:43,000
monsterhunter

905
00:34:43,000 --> 00:34:45,000
destiny

906
00:34:45,000 --> 00:34:47,000
还有 summoners war

907
00:34:47,000 --> 00:34:48,000
可是我有点奇怪

908
00:34:48,000 --> 00:34:51,000
就是 destiny 难道不是一个

909
00:34:51,000 --> 00:34:53,000
至少是 teen 的游戏

910
00:34:53,000 --> 00:34:56,000
他没有到那个年龄

911
00:34:56,000 --> 00:34:58,000
他这样赤裸裸的列出来

912
00:34:58,000 --> 00:35:00,000
如果有人去告他爹说

913
00:35:00,000 --> 00:35:04,000
你让小孩玩不符合他年龄的游戏

914
00:35:04,000 --> 00:35:04,000
他怎么办

915
00:35:04,000 --> 00:35:06,000
游戏有分级吗

916
00:35:06,000 --> 00:35:07,000
有啊

917
00:35:07,000 --> 00:35:09,000
我靠天哪

918
00:35:09,000 --> 00:35:09,000
好

919
00:35:09,000 --> 00:35:10,000
real

920
00:35:10,000 --> 00:35:13,000
你之前是生活那块石头下游吗

921
00:35:13,000 --> 00:35:18,000
我生活在一块石头上

922
00:35:18,000 --> 00:35:19,000
天哪

923
00:35:19,000 --> 00:35:21,000
ok

924
00:35:21,000 --> 00:35:23,000
不管怎么说

925
00:35:23,000 --> 00:35:26,000
刚才就是编辑家小孩的故事

926
00:35:26,000 --> 00:35:29,000
下一则新闻是特别搞笑的

927
00:35:29,000 --> 00:35:31,000
就是上周上一次节目我们提到

928
00:35:31,000 --> 00:35:34,000
那个 homebrew 的作者

929
00:35:34,000 --> 00:35:36,000
叫做 max hallwell

930
00:35:36,000 --> 00:35:38,000
去谷歌面试

931
00:35:38,000 --> 00:35:43,000
由于未能在白板上手工完成翻转二叉数的算法

932
00:35:43,000 --> 00:35:44,000
被谷歌拒了

933
00:35:44,000 --> 00:35:44,000
对

934
00:35:44,000 --> 00:35:46,000
我相信谷歌招他的人一定觉得

935
00:35:46,000 --> 00:35:47,000
what the fuck

936
00:35:47,000 --> 00:35:47,000
然后他自己也说

937
00:35:47,000 --> 00:35:48,000
what the fuck

938
00:35:48,000 --> 00:35:52,000
然后他就去了苹果

939
00:35:52,000 --> 00:35:52,000
对

940
00:35:52,000 --> 00:35:54,000
他恶狠狠说了一句

941
00:35:54,000 --> 00:35:55,000
此处不留言

942
00:35:55,000 --> 00:35:56,000
自有留言处

943
00:35:56,000 --> 00:35:57,000
然后就去了苹果

944
00:35:57,000 --> 00:35:59,000
他的推特上发了一个图

945
00:35:59,000 --> 00:36:02,000
背景是苹果的总部

946
00:36:02,000 --> 00:36:03,000
叫做 apple campus

947
00:36:03,000 --> 00:36:06,000
at one infinite loop

948
00:36:06,000 --> 00:36:07,000
然后写了两个字

949
00:36:07,000 --> 00:36:08,000
first day

950
00:36:08,000 --> 00:36:12,000
然后接了个自己的半个脸

951
00:36:12,000 --> 00:36:14,000
然后我也不知道什么意思

952
00:36:14,000 --> 00:36:16,000
反正我觉得这个事情还挺有意思的

953
00:36:16,000 --> 00:36:17,000
给大家分享一下

954
00:36:17,000 --> 00:36:20,000
所以你猜他在听我做什么

955
00:36:20,000 --> 00:36:22,000
不知道搬家了

956
00:36:22,000 --> 00:36:26,000
因为他在回复别人的问题的时候

957
00:36:26,000 --> 00:36:28,000
说你最近怎么样

958
00:36:28,000 --> 00:36:31,000
不是你是通勤还是搬过去了

959
00:36:31,000 --> 00:36:33,000
然后他回说

960
00:36:33,000 --> 00:36:33,000
had to move out of the house

961
00:36:33,000 --> 00:36:34,000
move

962
00:36:34,000 --> 00:36:36,000
所以应该是忙着搬家

963
00:36:36,000 --> 00:36:38,000
所以他肯定是入职了搬过去了

964
00:36:38,000 --> 00:36:42,000
然后我在想他去难道再写一个苹果的

965
00:36:42,000 --> 00:36:46,000
就是 the official package manager for s 10

966
00:36:46,000 --> 00:36:49,000
那不是 app store

967
00:36:49,000 --> 00:36:52,000
也有可能不知道

968
00:36:52,000 --> 00:36:55,000
问题是我觉得就是这样一个人

969
00:36:55,000 --> 00:36:56,000
你把他拉到苹果去

970
00:36:56,000 --> 00:36:58,000
你即便让他继续在那做

971
00:36:58,000 --> 00:37:00,000
叫什么

972
00:37:00,000 --> 00:37:03,000
third level support

973
00:37:03,000 --> 00:37:03,000
就是

974
00:37:03,000 --> 00:37:06,000
为程序员解决程序员的需求

975
00:37:06,000 --> 00:37:08,000
也已经非常有意义了

976
00:37:08,000 --> 00:37:09,000
不是吗

977
00:37:09,000 --> 00:37:11,000
就是你哪怕只在苹果内部

978
00:37:11,000 --> 00:37:13,000
让他为苹果内部的程序员服务

979
00:37:13,000 --> 00:37:14,000
已经

980
00:37:14,000 --> 00:37:17,000
就他不需要去开发什么面向于最终用户的产品

981
00:37:17,000 --> 00:37:19,000
嗯

982
00:37:19,000 --> 00:37:20,000
没错

983
00:37:20,000 --> 00:37:20,000
嗯

984
00:37:20,000 --> 00:37:21,000
好吧

985
00:37:21,000 --> 00:37:22,000
这个小新闻也就到此为止

986
00:37:22,000 --> 00:37:25,000
还有一个最后一则小新闻是

987
00:37:25,000 --> 00:37:26,000
reignitive for android

988
00:37:26,000 --> 00:37:29,000
最近发布了

989
00:37:29,000 --> 00:37:33,000
然后有一个跨时代的理想

990
00:37:33,000 --> 00:37:33,000
可能终于要实现了

991
00:37:33,000 --> 00:37:35,000
就是在同一台电脑上

992
00:37:35,000 --> 00:37:38,000
编改写一套 js 的代码

993
00:37:38,000 --> 00:37:42,000
然后同时在 iphone 和安卓上

994
00:37:42,000 --> 00:37:44,000
渲染出两个原生的界面

995
00:37:44,000 --> 00:37:46,000
这个还是蛮酷的

996
00:37:46,000 --> 00:37:48,000
依次编写到处运行

997
00:37:48,000 --> 00:37:51,000
为什么感觉像 java script

998
00:37:51,000 --> 00:37:54,000
哈哈哈哈

999
00:37:54,000 --> 00:37:56,000
java 和 java script 最终数字同归

1000
00:37:57,000 --> 00:37:58,000
嗯

1001
00:37:58,000 --> 00:38:01,000
他们之前不是问 java 和 java script 的区别是什么吗

1002
00:38:02,000 --> 00:38:03,000
就像雷锋和雷锋是什么样的吗

1003
00:38:03,000 --> 00:38:04,000
雷锋塔的区别

1004
00:38:04,000 --> 00:38:06,000
这我觉得没有那么远

1005
00:38:06,000 --> 00:38:07,000
嗯

1006
00:38:07,000 --> 00:38:08,000
怎么说呢

1007
00:38:08,000 --> 00:38:12,000
我觉得就 java 当初搞 swing 和

1008
00:38:12,000 --> 00:38:14,000
另一套叫什么

1009
00:38:14,000 --> 00:38:15,000
嗯

1010
00:38:15,000 --> 00:38:16,000
那个

1011
00:38:16,000 --> 00:38:18,000
java fx 还是什么

1012
00:38:18,000 --> 00:38:19,000
对

1013
00:38:19,000 --> 00:38:20,000
之类的吧

1014
00:38:20,000 --> 00:38:21,000
对

1015
00:38:21,000 --> 00:38:23,000
其实也是想要跨平台啊

1016
00:38:23,000 --> 00:38:24,000
但

1017
00:38:25,000 --> 00:38:28,000
最终历史的选择是

1018
00:38:29,000 --> 00:38:31,000
有限度的接受他们

1019
00:38:31,000 --> 00:38:33,000
但是很大程度上还是抛弃他们

1020
00:38:33,000 --> 00:38:34,000
对

1021
00:38:34,000 --> 00:38:36,000
现在那个 react native 这套方法

1022
00:38:36,000 --> 00:38:41,000
其实在我看来好像不好说

1023
00:38:41,000 --> 00:38:44,000
你说他是 right once run everywhere

1024
00:38:44,000 --> 00:38:47,000
好像也说得过去吧

1025
00:38:47,000 --> 00:38:50,000
不过他们自己的官方口号是 learn once

1026
00:38:50,000 --> 00:38:50,000
right everywhere

1027
00:38:50,000 --> 00:38:52,000
所以 hard to know

1028
00:38:52,000 --> 00:38:53,000
对啊

1029
00:38:53,000 --> 00:38:57,000
我相信这个技术所解决的一个痛点

1030
00:38:57,000 --> 00:38:58,000
是开发人员的痛点

1031
00:38:58,000 --> 00:39:01,000
但并不是市场的痛点

1032
00:39:01,000 --> 00:39:02,000
每一个平台的用户

1033
00:39:02,000 --> 00:39:03,000
每一个平台的用户

1034
00:39:03,000 --> 00:39:09,000
都希望自己使用的 app 是最快的

1035
00:39:09,000 --> 00:39:11,000
是最经过优化的

1036
00:39:11,000 --> 00:39:11,000
对

1037
00:39:11,000 --> 00:39:12,000
嗯

1038
00:39:13,000 --> 00:39:14,000
只有

1039
00:39:15,000 --> 00:39:15,000
啊

1040
00:39:16,000 --> 00:39:18,000
这个资金和时间不足的公司

1041
00:39:18,000 --> 00:39:22,000
才会想要通过这种一次书写

1042
00:39:23,000 --> 00:39:24,000
呃

1043
00:39:24,000 --> 00:39:27,000
到处运行的方式来完成用户交互的部分

1044
00:39:27,000 --> 00:39:28,000
那

1045
00:39:28,000 --> 00:39:30,000
我觉得他这个有一个好处哈

1046
00:39:30,000 --> 00:39:32,000
就是说至少可以

1047
00:39:32,000 --> 00:39:33,000
如果我们按一个经典的 m

1048
00:39:33,000 --> 00:39:34,000
vc 的结构来讲

1049
00:39:34,000 --> 00:39:37,000
他知道可以实现 model 和 controller

1050
00:39:37,000 --> 00:39:40,000
可以用同一套 js 代码来做

1051
00:39:40,000 --> 00:39:45,000
然后 view 的话就是各平台用各自平台自己原生的那些接口了

1052
00:39:45,000 --> 00:39:46,000
嗯

1053
00:39:46,000 --> 00:39:47,000
啊

1054
00:39:47,000 --> 00:39:48,000
还好吧

1055
00:39:48,000 --> 00:39:48,000
反正

1056
00:39:48,000 --> 00:39:49,000
ok

1057
00:39:49,000 --> 00:39:51,000
就我也很难说

1058
00:39:51,000 --> 00:39:52,000
就是我觉得

1059
00:39:52,000 --> 00:39:55,000
我觉得内心里是抗拒这种东西的

1060
00:39:55,000 --> 00:40:00,000
但是如果跨平台的需求一直在那儿

1061
00:40:00,000 --> 00:40:02,000
也就是换换句话说

1062
00:40:02,000 --> 00:40:03,000
如果安卓和

1063
00:40:03,000 --> 00:40:06,000
apple 阵营的这种

1064
00:40:06,000 --> 00:40:08,000
互相竞争

1065
00:40:08,000 --> 00:40:14,000
互相良性竞争的状况还能持续比如说 10 年

1066
00:40:14,000 --> 00:40:14,000
嗯

1067
00:40:14,000 --> 00:40:17,000
那这一套东西还是大有所谓的

1068
00:40:17,000 --> 00:40:19,000
但是任何一方

1069
00:40:19,000 --> 00:40:23,000
如果流露出了被打败的姿态

1070
00:40:23,000 --> 00:40:26,000
那我觉得这种跨平台的技术也很宽阅哦

1071
00:40:26,000 --> 00:40:29,000
也可能很快就失去它的价值了

1072
00:40:29,000 --> 00:40:32,000
所以说只能走着瞧

1073
00:40:32,000 --> 00:40:32,000
对

1074
00:40:32,000 --> 00:40:34,000
对

1075
00:40:34,000 --> 00:40:35,000
但

1076
00:40:35,000 --> 00:40:36,000
但不管怎么说

1077
00:40:36,000 --> 00:40:38,000
它的学习成本至少不是那么高

1078
00:40:38,000 --> 00:40:41,000
所以学学也没什么太大的问题

1079
00:40:41,000 --> 00:40:42,000
就是

1080
00:40:42,000 --> 00:40:43,000
ok

1081
00:40:43,000 --> 00:40:44,000
好

1082
00:40:44,000 --> 00:40:49,000
今天最后一则新闻是也是前两天才发生的事吧

1083
00:40:49,000 --> 00:40:50,000
对

1084
00:40:50,000 --> 00:40:54,000
就美国有一个叫做阿买的的小男孩

1085
00:40:54,000 --> 00:41:00,000
做了阿买听这个听这个名字就知道他是中东后裔

1086
00:41:00,000 --> 00:41:00,000
对

1087
00:41:00,000 --> 00:41:02,000
他做了一个

1088
00:41:02,000 --> 00:41:09,000
用那些什么各种名字连连机件元气件做了一块表电子表

1089
00:41:10,000 --> 00:41:11,000
穷玩车富儿表

1090
00:41:11,000 --> 00:41:13,000
哈哈哈

1091
00:41:13,000 --> 00:41:17,000
放在这里忽然觉得好违和

1092
00:41:17,000 --> 00:41:20,000
然后他把这个表带到学校去玩

1093
00:41:20,000 --> 00:41:22,000
然后被老师认为是一个炸弹

1094
00:41:23,000 --> 00:41:25,000
对被老师误认为是个炸弹

1095
00:41:25,000 --> 00:41:26,000
然后叫了警察

1096
00:41:26,000 --> 00:41:30,000
然后他被在一个看证所里面待了一段时间

1097
00:41:30,000 --> 00:41:31,000
好像对

1098
00:41:31,000 --> 00:41:35,000
然后这个信用就报道出来了

1099
00:41:35,000 --> 00:41:37,000
啊他叫阿买的是他的名儿

1100
00:41:37,000 --> 00:41:38,000
他姓

1101
00:41:38,000 --> 00:41:39,000
mohamed

1102
00:41:39,000 --> 00:41:41,000
阿买的 mohamed

1103
00:41:41,000 --> 00:41:43,000
这是一个很典型的回教的名字

1104
00:41:43,000 --> 00:41:46,000
就是一就是说是伊斯就是穆斯林的名字

1105
00:41:46,000 --> 00:41:47,000
对

1106
00:41:47,000 --> 00:41:47,000
对

1107
00:41:47,000 --> 00:41:49,000
非常典型的

1108
00:41:49,000 --> 00:41:52,000
然后这个事情在美国就引起了轩然大波

1109
00:41:52,000 --> 00:41:53,000
啊各种各样的事

1110
00:41:53,000 --> 00:41:56,000
我我之前看到的最新消息是那个

1111
00:41:56,000 --> 00:42:00,000
扎克伯格已经给他说亲自邀请他说

1112
00:42:00,000 --> 00:42:01,000
你可以来 Facebook

1113
00:42:01,000 --> 00:42:08,000
然后说好像最近又接受什么奥巴马总统的邀请又 blahblah 了

1114
00:42:08,000 --> 00:42:10,000
反正这个是个挺搞笑的事

1115
00:42:10,000 --> 00:42:12,000
美国政治我们就不去评头论足了

1116
00:42:12,000 --> 00:42:17,000
这个是我们 ipn 旗下最近开了一档节目选美的事情

1117
00:42:17,000 --> 00:42:17,000
对

1118
00:42:17,000 --> 00:42:20,000
但是反正这事情挺好玩的

1119
00:42:20,000 --> 00:42:23,000
就如果这个事情在中国发生会怎么样

1120
00:42:25,000 --> 00:42:26,000
你说的好玩吗

1121
00:42:26,000 --> 00:42:30,000
我觉得其实是很让人哭笑

1122
00:42:30,000 --> 00:42:30,000
让人

1123
00:42:31,000 --> 00:42:33,000
让人想要苦笑的一件事情

1124
00:42:34,000 --> 00:42:37,000
就在这个星球上

1125
00:42:38,000 --> 00:42:39,000
这种

1126
00:42:39,000 --> 00:42:41,000
当然这这种说法非常左派

1127
00:42:41,000 --> 00:42:45,000
我就就是就这种这种族裔和血统带来的问题

1128
00:42:45,000 --> 00:42:45,000
嗯

1129
00:42:45,000 --> 00:42:46,000
居然会影响到你

1130
00:42:47,000 --> 00:42:50,000
在在去做这种啊

1131
00:42:51,000 --> 00:42:53,000
完全跟政治活动无关的

1132
00:42:54,000 --> 00:42:56,000
好比行为的行为

1133
00:42:56,000 --> 00:42:58,000
后居然会影响你做这件事情

1134
00:42:58,000 --> 00:43:01,000
就你因为你的肤色

1135
00:43:01,000 --> 00:43:02,000
或者是你的姓名

1136
00:43:02,000 --> 00:43:03,000
或者是你的长相

1137
00:43:03,000 --> 00:43:03,000
嗯

1138
00:43:03,000 --> 00:43:07,000
会导致你在做某件特定事情的时候

1139
00:43:07,000 --> 00:43:07,000
嗯

1140
00:43:07,000 --> 00:43:08,000
呃

1141
00:43:09,000 --> 00:43:10,000
起

1142
00:43:10,000 --> 00:43:13,000
就突然蒙受这种不白之缘

1143
00:43:13,000 --> 00:43:15,000
我觉得还是挺挺让人悲伤的

1144
00:43:15,000 --> 00:43:15,000
一点

1145
00:43:15,000 --> 00:43:15,000
是

1146
00:43:16,000 --> 00:43:22,000
对这件事情其实我刚才我说这个事情你一听起来可能是阿拉伯人或者是穆斯林

1147
00:43:22,000 --> 00:43:24,000
感觉离我们挺远的

1148
00:43:24,000 --> 00:43:26,000
其实这件事情离我们并不远

1149
00:43:26,000 --> 00:43:29,000
因为前段时间刚好有另外一个事发生了

1150
00:43:29,000 --> 00:43:30,000
就是美国有一个

1151
00:43:30,000 --> 00:43:31,000
我

1152
00:43:31,000 --> 00:43:34,000
我忘了是大学教授还是一个什么样的研究员

1153
00:43:34,000 --> 00:43:35,000
一个很资深的一个人

1154
00:43:35,000 --> 00:43:38,000
他被这个 CIA

1155
00:43:38,000 --> 00:43:43,000
九州情报局指控为是中国的见中国政府的间谍

1156
00:43:43,000 --> 00:43:48,000
就在窃取帮助政府窃取美国的这个研究或者机密研究机密吧

1157
00:43:48,000 --> 00:43:51,000
后来证明他其实是无罪的

1158
00:43:52,000 --> 00:43:53,000
啊

1159
00:43:53,000 --> 00:44:01,000
所以其实那塞的指控无非很多时候也是基于这个呃种族和肤色

1160
00:44:01,000 --> 00:44:03,000
其实也有一点这个种族歧视的成分在里面

1161
00:44:05,000 --> 00:44:10,000
嗯就我不知道哈这些事情在中国发生会怎么样

1162
00:44:10,000 --> 00:44:14,000
我觉得中国没有这么敏感吧

1163
00:44:14,000 --> 00:44:16,000
这其实并不是哎

1164
00:44:16,000 --> 00:44:18,000
只是说你可能没有太留意到

1165
00:44:18,000 --> 00:44:19,000
比如说我举个很简单的例子

1166
00:44:19,000 --> 00:44:22,000
大家就你们听到这句话

1167
00:44:22,000 --> 00:44:25,000
你自己在中国的人想一下

1168
00:44:25,000 --> 00:44:28,000
你在晚上街头碰见一个黑人

1169
00:44:28,000 --> 00:44:29,000
你会怎么样

1170
00:44:31,000 --> 00:44:32,000
呃

1171
00:44:32,000 --> 00:44:34,000
我再玩好吧

1172
00:44:35,000 --> 00:44:38,000
如果没出国的话一定会觉得有点恐怖

1173
00:44:38,000 --> 00:44:40,000
哈哈哈哈

1174
00:44:40,000 --> 00:44:43,000
除了出国更加恐怖

1175
00:44:43,000 --> 00:44:43,000
哈哈

1176
00:44:43,000 --> 00:44:45,000
出国还要看在哪吗

1177
00:44:45,000 --> 00:44:46,000
比如说如果是在巴黎的话

1178
00:44:46,000 --> 00:44:50,000
那可能在皇后区纽约的皇后区

1179
00:44:50,000 --> 00:44:51,000
还是布鲁克林

1180
00:44:51,000 --> 00:44:52,000
这个太正常了

1181
00:44:53,000 --> 00:44:59,000
就还是要跟你你得你你会就我们这种呃

1182
00:44:59,000 --> 00:45:00,000
结合当前的这个社会的影响来说呢

1183
00:45:00,000 --> 00:45:02,000
所谓当前的场景来

1184
00:45:03,000 --> 00:45:05,000
去做出 stereotype 的能力

1185
00:45:05,000 --> 00:45:07,000
实际上是一种生存的本能

1186
00:45:07,000 --> 00:45:10,000
就如果我们在

1187
00:45:10,000 --> 00:45:11,000
呃

1188
00:45:11,000 --> 00:45:13,000
动物园的

1189
00:45:13,000 --> 00:45:16,000
那个观鸟区看到一只老虎

1190
00:45:16,000 --> 00:45:16,000
那

1191
00:45:17,000 --> 00:45:18,000
肯定会吓到死

1192
00:45:18,000 --> 00:45:20,000
但是在老虎区看到老虎就会觉得

1193
00:45:20,000 --> 00:45:21,000
是正常的

1194
00:45:21,000 --> 00:45:22,000
所以你

1195
00:45:22,000 --> 00:45:24,000
你会觉得这个地方是危险的地方

1196
00:45:24,000 --> 00:45:26,000
所以这个地方出现一个危险的人物

1197
00:45:26,000 --> 00:45:29,000
那代表我会可能会产生危险

1198
00:45:29,000 --> 00:45:30,000
这是一

1199
00:45:30,000 --> 00:45:32,000
这是一个很自然的反应

1200
00:45:33,000 --> 00:45:37,000
所以你再说不再为种族主义开脱了

1201
00:45:37,000 --> 00:45:37,000
哈哈

1202
00:45:38,000 --> 00:45:39,000
嗯

1203
00:45:41,000 --> 00:45:43,000
我只能说我理解种族

1204
00:45:43,000 --> 00:45:46,000
就就我能理解种族主义为什么会存在

1205
00:45:47,000 --> 00:45:51,000
但是并不代表我就赞同这种

1206
00:45:52,000 --> 00:45:55,000
呃根据肤色来划定

1207
00:45:55,000 --> 00:45:58,000
其潜在可能性的方法

1208
00:45:58,000 --> 00:45:59,000
嗯

1209
00:45:59,000 --> 00:46:00,000
这个我也说不好

1210
00:46:00,000 --> 00:46:03,000
就其实就穆斯林这件事情来说

1211
00:46:03,000 --> 00:46:05,000
德国目前开放大量难民

1212
00:46:05,000 --> 00:46:07,000
呃涌入境内

1213
00:46:07,000 --> 00:46:11,000
其实里面也是以穆斯林为压倒性走出

1214
00:46:11,000 --> 00:46:11,000
啊

1215
00:46:11,000 --> 00:46:15,000
但不能就因此会认为说

1216
00:46:15,000 --> 00:46:17,000
这个会冲击到德国的

1217
00:46:18,000 --> 00:46:19,000
呃

1218
00:46:19,000 --> 00:46:23,000
宗教组成或者说影响治安之类的

1219
00:46:23,000 --> 00:46:23,000
嗯

1220
00:46:23,000 --> 00:46:24,000
事情

1221
00:46:25,000 --> 00:46:25,000
这

1222
00:46:27,000 --> 00:46:29,000
即便你有这样的恐慌

1223
00:46:29,000 --> 00:46:30,000
这样的担忧

1224
00:46:30,000 --> 00:46:30,000
但是呢

1225
00:46:30,000 --> 00:46:33,000
但是这种事情确实不一定会发生的

1226
00:46:34,000 --> 00:46:38,000
对我觉得这个这个跟我本节目说的有点远

1227
00:46:38,000 --> 00:46:38,000
对

1228
00:46:38,000 --> 00:46:43,000
不过我刚刚我说那个阿玛这个这个这个案子是一个想提另外一个事

1229
00:46:43,000 --> 00:46:46,000
就说就是一般中国有两个含义啊

1230
00:46:46,000 --> 00:46:48,000
一个是说这个一个有种族

1231
00:46:48,000 --> 00:46:52,000
这个明显种族特征的一个小孩在做这么一件事

1232
00:46:52,000 --> 00:46:54,000
明显就被认为是危险的事

1233
00:46:54,000 --> 00:46:55,000
会认为会怎么样

1234
00:46:55,000 --> 00:46:56,000
另外一个就是说其实

1235
00:46:57,000 --> 00:46:59,000
哪怕是一个就正常的中国小孩

1236
00:46:59,000 --> 00:47:00,000
自己用那个这个种族的特征来做这么一件事

1237
00:47:00,000 --> 00:47:01,000
就会被电子人接下来做了一块表

1238
00:47:01,000 --> 00:47:02,000
被带到学校去

1239
00:47:02,000 --> 00:47:04,000
大家会认为他是一个炸弹吗

1240
00:47:05,000 --> 00:47:06,000
肯定不会

1241
00:47:06,000 --> 00:47:09,000
我觉得其实会被在中国反而是会被鼓励的

1242
00:47:09,000 --> 00:47:11,000
我觉得动手能力强啊什么什么的

1243
00:47:11,000 --> 00:47:12,000
对吧

1244
00:47:12,000 --> 00:47:13,000
会被打的吧

1245
00:47:13,000 --> 00:47:14,000
你不写作业搞这些破文

1246
00:47:14,000 --> 00:47:16,000
哈哈哈

1247
00:47:16,000 --> 00:47:18,000
你这是什么样的童年

1248
00:47:18,000 --> 00:47:19,000
呵呵呵

1249
00:47:20,000 --> 00:47:20,000
你不是吗

1250
00:47:20,000 --> 00:47:24,000
我觉得我觉得我小时候想要做一点跟考试无关的事情

1251
00:47:24,000 --> 00:47:26,000
基本上都是会被说的

1252
00:47:26,000 --> 00:47:26,000
不是啊

1253
00:47:26,000 --> 00:47:30,000
我觉得我我感觉小时候的学校还是挺就是自扫父母呀

1254
00:47:30,000 --> 00:47:34,000
好老师还是挺鼓励这种发明创造啊动手能力的

1255
00:47:34,000 --> 00:47:38,000
虽然说在这个绩效考核上

1256
00:47:38,000 --> 00:47:40,000
他们并不是真的是这么想的

1257
00:47:40,000 --> 00:47:43,000
但是起码在心就在舆论上

1258
00:47:43,000 --> 00:47:44,000
大家他们还是会坚持这么说

1259
00:47:46,000 --> 00:47:48,000
所谓绩效考就是情报考试了

1260
00:47:48,000 --> 00:47:50,000
呵呵呵呵呵

1261
00:47:50,000 --> 00:47:50,000
说也是

1262
00:47:50,000 --> 00:47:54,000
我相当于是有次我小时候去航模组

1263
00:47:54,000 --> 00:47:59,000
然后呃我是把飞机的尾巴粘到了还是什么

1264
00:47:59,000 --> 00:48:00,000
不是粘一架

1265
00:48:01,000 --> 00:48:02,000
什么飞机

1266
00:48:02,000 --> 00:48:02,000
嗯

1267
00:48:02,000 --> 00:48:04,000
B 29 之类的一个飞机

1268
00:48:04,000 --> 00:48:07,000
然后把他尾奖尾翼给粘到了

1269
00:48:07,000 --> 00:48:08,000
就是嗯

1270
00:48:08,000 --> 00:48:09,000
嗯

1271
00:48:09,000 --> 00:48:11,000
然后航模老师说了很长一段话

1272
00:48:11,000 --> 00:48:15,000
说什么大意是你在这件事情上花费时间太多了

1273
00:48:15,000 --> 00:48:19,000
什么还是要好好去学习啊

1274
00:48:19,000 --> 00:48:19,000
那种的

1275
00:48:20,000 --> 00:48:20,000
嗯

1276
00:48:20,000 --> 00:48:23,000
然后同样的事情在我上高中的时候又发生了一遍

1277
00:48:23,000 --> 00:48:27,000
我高中的时候在那个围棋社还是什么地方

1278
00:48:27,000 --> 00:48:28,000
应该是围棋社

1279
00:48:28,000 --> 00:48:29,000
跟老师下棋了

1280
00:48:29,000 --> 00:48:35,000
然后有一个同学来找我去什么物理奥赛组还是什么

1281
00:48:35,000 --> 00:48:37,000
然后我就说我下完棋再去

1282
00:48:37,000 --> 00:48:39,000
然后那个下棋老师非常惊讶

1283
00:48:39,000 --> 00:48:41,000
瞪着我说奥赛比较重要

1284
00:48:41,000 --> 00:48:45,000
你怎么能他他这下棋不去不去参加奥赛

1285
00:48:45,000 --> 00:48:46,000
玩你赶紧去

1286
00:48:46,000 --> 00:48:49,000
就他是教围棋的老师啊

1287
00:48:49,000 --> 00:48:50,000
他都说说这样的话

1288
00:48:50,000 --> 00:48:55,000
我觉得随便他他们在人们心目中还是下意识的给这个行当分了个 369 等啊

1289
00:48:56,000 --> 00:48:56,000
对

1290
00:48:56,000 --> 00:48:59,000
然后其实人种也是就是或者说

1291
00:48:59,000 --> 00:49:04,000
足以也是就莫名其妙被分出了 369 的

1292
00:49:05,000 --> 00:49:05,000
唉

1293
00:49:05,000 --> 00:49:08,000
其实我们看来离真正的自由还挺远的

1294
00:49:09,000 --> 00:49:09,000
对

1295
00:49:09,000 --> 00:49:11,000
左派还需要努力啊

1296
00:49:11,000 --> 00:49:14,000
这世界上左棍上去努力

1297
00:49:14,000 --> 00:49:18,000
右棍还是牢牢的把持这个世界

1298
00:49:18,000 --> 00:49:19,000
嗯

1299
00:49:20,000 --> 00:49:21,000
虽然我也是个右棍的

1300
00:49:22,000 --> 00:49:25,000
今天的这个我就不讨论我们的政治倾向了

1301
00:49:25,000 --> 00:49:25,000
哈

1302
00:49:25,000 --> 00:49:29,000
我们今天的新闻环节新闻联播到此结束

1303
00:49:29,000 --> 00:49:31,000
不科技新闻联播到此结束

1304
00:49:32,000 --> 00:49:34,000
科技社会新闻到此结束

1305
00:49:34,000 --> 00:49:34,000
啊

1306
00:49:34,000 --> 00:49:36,000
今天的正题是什么

1307
00:49:37,000 --> 00:49:38,000
嗯

1308
00:49:38,000 --> 00:49:40,000
其实今天的正题是我们没有正题

1309
00:49:40,000 --> 00:49:45,000
就我觉得应该是时候把这个兔子从帽子里面揪出来了

1310
00:49:45,000 --> 00:49:47,000
我们的这个这个这个这个这个我有个梗

1311
00:49:47,000 --> 00:49:49,000
我有个梗啊

1312
00:49:50,000 --> 00:49:51,000
ghost in the xcode

1313
00:49:52,000 --> 00:49:52,000
啊

1314
00:49:53,000 --> 00:49:54,000
come on

1315
00:49:55,000 --> 00:49:55,000
嗯

1316
00:49:56,000 --> 00:49:57,000
不我刚才想说的是从本期节目开始了啊

1317
00:49:57,000 --> 00:49:58,000
不我刚才想说的是从本期节目开始了啊

1318
00:49:58,000 --> 00:49:59,000
不我刚才想说的是从本期节目开始了啊

1319
00:49:59,000 --> 00:50:02,000
我们不会在专门的找一个

1320
00:50:03,000 --> 00:50:06,000
呃编程领域里面的话题

1321
00:50:06,000 --> 00:50:07,000
就不会刻意找

1322
00:50:07,000 --> 00:50:11,000
但有的话也可以讲来来来贯穿整个节目

1323
00:50:11,000 --> 00:50:13,000
就我们之前找话题找得非常辛苦

1324
00:50:13,000 --> 00:50:15,000
所以也造成了

1325
00:50:15,000 --> 00:50:17,000
呃我们在录节目的时候

1326
00:50:17,000 --> 00:50:18,000
每次都非常的

1327
00:50:20,000 --> 00:50:22,000
觉得应该怎么说呢

1328
00:50:22,000 --> 00:50:24,000
觉得投入和产出不成正比吧

1329
00:50:24,000 --> 00:50:26,000
就是那个跟报

1330
00:50:26,000 --> 00:50:28,000
以前那个报纸编辑不一样

1331
00:50:28,000 --> 00:50:29,000
一个选题

1332
00:50:29,000 --> 00:50:29,000
会吗

1333
00:50:29,000 --> 00:50:30,000
对吧

1334
00:50:30,000 --> 00:50:33,000
对我们已经这个什么无狼才尽了

1335
00:50:34,000 --> 00:50:35,000
为什么是无狼才尽

1336
00:50:35,000 --> 00:50:36,000
嗯

1337
00:50:36,000 --> 00:50:38,000
你是说韬狼才尽

1338
00:50:38,000 --> 00:50:41,000
所以你是你你还没才尽是吧

1339
00:50:41,000 --> 00:50:43,000
那从没没没没没就我我是捧啊

1340
00:50:43,000 --> 00:50:44,000
所以你你是主啊

1341
00:50:45,000 --> 00:50:47,000
我记得

1342
00:50:47,000 --> 00:50:51,000
我记得我听谁说有人在 it 公论的

1343
00:50:51,000 --> 00:50:52,000
好像是那次现场吧

1344
00:50:52,000 --> 00:50:56,000
说呃 it 公论是 lawrence 的节目

1345
00:50:56,000 --> 00:50:57,000
real 只是一个捧根的

1346
00:50:57,000 --> 00:50:58,000
嗯嗯

1347
00:50:58,000 --> 00:51:01,000
那我觉得 it 公论那个和我其实是 real 的节目

1348
00:51:01,000 --> 00:51:02,000
然后我是一个捧根

1349
00:51:02,000 --> 00:51:04,000
反了反了反了

1350
00:51:04,000 --> 00:51:05,000
the reverse is true

1351
00:51:06,000 --> 00:51:06,000
come on

1352
00:51:07,000 --> 00:51:09,000
哎不扯这个了

1353
00:51:09,000 --> 00:51:10,000
好吧

1354
00:51:10,000 --> 00:51:11,000
呃其实这个事儿

1355
00:51:11,000 --> 00:51:15,000
但是大家呃今天我们呃上午录的那个 it 公论已经

1356
00:51:15,000 --> 00:51:16,000
大概讲过了

1357
00:51:16,000 --> 00:51:19,000
就是那个 xcode ghost 的这个安全事故吧

1358
00:51:19,000 --> 00:51:22,000
嗯呃来龙去脉就不交代了

1359
00:51:22,000 --> 00:51:24,000
大家呃听到这个词

1360
00:51:24,000 --> 00:51:25,000
如果你不明白是什么

1361
00:51:25,000 --> 00:51:26,000
估计也就没有必要再呃你可以去深究了啊

1362
00:51:26,000 --> 00:51:28,000
你可以去深究

1363
00:51:28,000 --> 00:51:30,000
你可以去先看一下报道

1364
00:51:30,000 --> 00:51:31,000
我们就接着往下讲了

1365
00:51:32,000 --> 00:51:32,000
对

1366
00:51:33,000 --> 00:51:34,000
嗯

1367
00:51:34,000 --> 00:51:36,000
简单来说就是 xcode

1368
00:51:37,000 --> 00:51:39,000
有人下了一个什么啊

1369
00:51:39,000 --> 00:51:39,000
这台就火了

1370
00:51:39,000 --> 00:51:40,000
我还是又讲了

1371
00:51:40,000 --> 00:51:42,000
简单说就是 xcode

1372
00:51:42,000 --> 00:51:45,000
就因为苹果那个 cdm 不给力

1373
00:51:45,000 --> 00:51:49,000
很多开发者顺手下了一个从什么迅雷

1374
00:51:49,000 --> 00:51:50,000
下了一个 xcode 回来

1375
00:51:50,000 --> 00:51:52,000
然后发现编译出来的软件语

1376
00:51:52,000 --> 00:51:54,000
被搞了被装了后门

1377
00:51:54,000 --> 00:51:56,000
究其原因是因为下了编译器

1378
00:51:56,000 --> 00:51:58,000
有问题 xcode 的就被搞过

1379
00:51:59,000 --> 00:52:00,000
对嗯

1380
00:52:00,000 --> 00:52:03,000
所以这件事情我们先先揪一下吧

1381
00:52:03,000 --> 00:52:05,000
你觉得苹果有问题有责任吗

1382
00:52:06,000 --> 00:52:09,000
呃我觉得从技术上来讲

1383
00:52:09,000 --> 00:52:11,000
苹果关苹果屁事啊

1384
00:52:12,000 --> 00:52:15,000
但是从嗯

1385
00:52:15,000 --> 00:52:18,000
从一个比较

1386
00:52:19,000 --> 00:52:21,000
metaphysical 的角度来讲

1387
00:52:21,000 --> 00:52:23,000
苹果采用了这种模式

1388
00:52:23,000 --> 00:52:25,000
导致了会有今天这个下场

1389
00:52:26,000 --> 00:52:26,000
是

1390
00:52:26,000 --> 00:52:28,000
所以这个他的问题在哪里

1391
00:52:28,000 --> 00:52:30,000
就是 centralized

1392
00:52:31,000 --> 00:52:34,000
呃就是这样一种

1393
00:52:34,000 --> 00:52:36,000
独此一家的工具

1394
00:52:36,000 --> 00:52:37,000
嗯

1395
00:52:37,000 --> 00:52:39,000
导致了这种情况的发生

1396
00:52:39,000 --> 00:52:39,000
我觉得

1397
00:52:40,000 --> 00:52:40,000
就是

1398
00:52:41,000 --> 00:52:44,000
这种情况为什么会不会在其他的世界里发生

1399
00:52:44,000 --> 00:52:47,000
就是因为其他世界比如或者说为什么不会在比如说

1400
00:52:47,000 --> 00:52:48,000
c 世界里面发生

1401
00:52:48,000 --> 00:52:50,000
是因为 c 世界里面

1402
00:52:51,000 --> 00:52:51,000
呃

1403
00:52:51,000 --> 00:52:53,000
你有很多编译器可以选择

1404
00:52:53,000 --> 00:52:55,000
而且你也有很多

1405
00:52:55,000 --> 00:52:56,000
下载点

1406
00:52:56,000 --> 00:52:56,000
可以选择啊

1407
00:52:56,000 --> 00:52:58,000
不对啊

1408
00:52:58,000 --> 00:52:59,000
我觉得这个是这个问题

1409
00:52:59,000 --> 00:53:00,000
就是说

1410
00:53:00,000 --> 00:53:01,000
整选答案是不知道

1411
00:53:01,000 --> 00:53:03,000
你不知道其他地方有没有东西的问题

1412
00:53:03,000 --> 00:53:05,000
就他们好像是就很多人说

1413
00:53:05,000 --> 00:53:06,000
那

1414
00:53:06,000 --> 00:53:09,000
你们下的安卓的开发环境会不会有这个问题

1415
00:53:09,000 --> 00:53:10,000
没有人知道

1416
00:53:10,000 --> 00:53:10,000
哦

1417
00:53:10,000 --> 00:53:12,000
安卓是另外一件事呢

1418
00:53:12,000 --> 00:53:12,000
就是

1419
00:53:13,000 --> 00:53:14,000
呃

1420
00:53:14,000 --> 00:53:17,000
安卓的情况其实要比苹果严重很多

1421
00:53:17,000 --> 00:53:20,000
因为安卓的比如说钓鱼平呃什么钓鱼平台

1422
00:53:20,000 --> 00:53:24,000
支付平台是强制你要去或者也不是强制

1423
00:53:24,000 --> 00:53:25,000
就是

1424
00:53:25,000 --> 00:53:26,000
呃

1425
00:53:26,000 --> 00:53:30,000
在安卓里面如果你把一个支付平台连入你的 app 的话

1426
00:53:30,000 --> 00:53:35,000
你是完全可以去读写说这个支付平台里面到底输入了什么信息呢

1427
00:53:35,000 --> 00:53:36,000
但是

1428
00:53:37,000 --> 00:53:37,000
对

1429
00:53:37,000 --> 00:53:41,000
就是因为你在安卓的上面别说话对话框了

1430
00:53:41,000 --> 00:53:42,000
你只需要去

1431
00:53:42,000 --> 00:53:45,000
你甚至都不需要去钓鱼去画一个假的对话框

1432
00:53:45,000 --> 00:53:49,000
你可以直接去读那个跳出来的支付平台的那个对话框里面写了什么

1433
00:53:50,000 --> 00:53:51,000
他没有那个进程分离吗

1434
00:53:52,000 --> 00:53:56,000
他不你都把对方的支付平台的 sdk 集成到你的

1435
00:53:56,000 --> 00:53:58,000
app 里面你要去搞什么进程分离啊

1436
00:53:58,000 --> 00:54:01,000
这个是应用内部的问题

1437
00:54:02,000 --> 00:54:05,000
我觉得没有办法肯定是这样子的

1438
00:54:05,000 --> 00:54:08,000
如果你都不信任没有问题

1439
00:54:08,000 --> 00:54:13,000
但我的问题是说你怎么知道你用的安卓的编译器也好

1440
00:54:13,000 --> 00:54:15,000
或者 c 的编译器也好

1441
00:54:15,000 --> 00:54:16,000
没有被人搞过呢

1442
00:54:16,000 --> 00:54:18,000
我没有办法知道自己的

1443
00:54:18,000 --> 00:54:22,000
所以我觉得这个事情苹果和其他厂商是一样

1444
00:54:22,000 --> 00:54:24,000
就跟他的分发法

1445
00:54:24,000 --> 00:54:24,000
就是

1446
00:54:26,000 --> 00:54:27,000
组织方式是没有关系的

1447
00:54:27,000 --> 00:54:31,000
我的理解就是假如是在其他的

1448
00:54:31,000 --> 00:54:34,000
比如说一个我们想象另外一种软件分发的方式

1449
00:54:35,000 --> 00:54:46,000
就是在苹果这边他只给出一个编译器的 specification

1450
00:54:46,000 --> 00:54:53,000
然后每个国家或者说每一个不同的厂商都可以写出自己的

1451
00:54:53,000 --> 00:54:54,000
为 xcode

1452
00:54:54,000 --> 00:54:55,000
对不起

1453
00:54:56,000 --> 00:54:56,000
你可能想说 всех correspond

1454
00:54:56,000 --> 00:54:57,000
都能对全国人 Si X 之类的人都 email

1455
00:54:57,000 --> 00:55:03,000
ik

1456
00:55:03,000 --> 00:55:22,000
你在高科技领域做事

1457
00:55:22,000 --> 00:55:23,000
修 Curt

1458
00:55:23,000 --> 00:55:24,000
那是在企业很脆弱 experience

1459
00:55:24,000 --> 00:55:25,000
这小板 ORDER

1460
00:55:25,000 --> 00:55:25,000
实际上是你的 casa

1461
00:55:25,000 --> 00:55:25,000
老板一切过客了

1462
00:55:25,000 --> 00:55:25,000
有什么问题

1463
00:55:25,000 --> 00:55:25,000
你都没错

1464
00:55:25,000 --> 00:55:26,000
Rest letzte ask one question

1465
00:55:26,000 --> 00:55:26,000
之类的

1466
00:55:26,000 --> 00:55:28,000
你可以用各种各样的编辑器

1467
00:55:28,000 --> 00:55:30,000
和编辑器和编译器

1468
00:55:30,000 --> 00:55:32,000
来书写一个平台上的

1469
00:55:32,000 --> 00:55:33,000
没有

1470
00:55:33,000 --> 00:55:35,000
我觉得你并没有解决这个问题

1471
00:55:35,000 --> 00:55:37,000
只是把这个问题的皮球

1472
00:55:37,000 --> 00:55:38,000
踢给了另外一波人

1473
00:55:38,000 --> 00:55:38,000
就是说

1474
00:55:38,000 --> 00:55:41,000
你说不会有一个编译器出了问题

1475
00:55:41,000 --> 00:55:42,000
所有人都中招

1476
00:55:42,000 --> 00:55:45,000
而是说因为有 10 个编译器

1477
00:55:45,000 --> 00:55:46,000
可能只有 3 个有问题

1478
00:55:46,000 --> 00:55:49,000
这不已经是很好的了吗

1479
00:55:49,000 --> 00:55:50,000
不但我觉得

1480
00:55:50,000 --> 00:55:51,000
这并不从根本上解决这个问题

1481
00:55:51,000 --> 00:55:52,000
所以我觉得

1482
00:55:52,000 --> 00:55:53,000
这个问题是没有办法

1483
00:55:53,000 --> 00:55:55,000
从根本上被解决的

1484
00:55:55,000 --> 00:55:56,000
为什么你会这么认为呢

1485
00:55:56,000 --> 00:56:01,000
我有什么办法去验证一个

1486
00:56:01,000 --> 00:56:06,000
币源的单一发布者的编辑器

1487
00:56:06,000 --> 00:56:10,000
的编译器是安全没有问题的

1488
00:56:10,000 --> 00:56:12,000
但至少你可以说

1489
00:56:12,000 --> 00:56:14,000
你相信如果这个编译器

1490
00:56:14,000 --> 00:56:17,000
是苹果原始

1491
00:56:17,000 --> 00:56:19,000
就是苹果官方的那一个

1492
00:56:19,000 --> 00:56:21,000
你可以至少相信

1493
00:56:21,000 --> 00:56:22,000
它不会来搞你对吧

1494
00:56:22,000 --> 00:56:24,000
所以你还是要选择相信

1495
00:56:24,000 --> 00:56:25,000
你刚才还是使用

1496
00:56:25,000 --> 00:56:26,000
我相信这个词不是吗

1497
00:56:26,000 --> 00:56:26,000
对

1498
00:56:26,000 --> 00:56:28,000
所以说底层的信任

1499
00:56:28,000 --> 00:56:30,000
你还说你至少要信任一家

1500
00:56:30,000 --> 00:56:31,000
不管是信任哪家也好

1501
00:56:31,000 --> 00:56:33,000
现在的问题就是说

1502
00:56:33,000 --> 00:56:35,000
开发者因为下载

1503
00:56:35,000 --> 00:56:37,000
因为这个网络的问题

1504
00:56:37,000 --> 00:56:37,000
或者 CDN 的问题

1505
00:56:37,000 --> 00:56:40,000
它不能从苹果的官方服务器

1506
00:56:40,000 --> 00:56:42,000
直接下载到一个原始的版本

1507
00:56:42,000 --> 00:56:44,000
或者说它下载过程中

1508
00:56:44,000 --> 00:56:46,000
不是用的 HTPS

1509
00:56:46,000 --> 00:56:47,000
而是用的 HTTP

1510
00:56:47,000 --> 00:56:49,000
然后被上次我们的节目一样

1511
00:56:49,000 --> 00:56:50,000
被那个缓存服务器

1512
00:56:50,000 --> 00:56:52,000
那个运营商的缓存搞了

1513
00:56:52,000 --> 00:56:53,000
它也不能保证

1514
00:56:53,000 --> 00:56:54,000
它下载到的一定就是

1515
00:56:54,000 --> 00:56:56,000
苹果发布的那一个

1516
00:56:56,000 --> 00:56:58,000
所以这里面其实我觉得唯一可以

1517
00:56:58,000 --> 00:57:00,000
唯一可以做的就是验证

1518
00:57:00,000 --> 00:57:02,000
那个哈希验证

1519
00:57:02,000 --> 00:57:07,000
好吧

1520
00:57:07,000 --> 00:57:09,000
所以其实我们两个有点

1521
00:57:09,000 --> 00:57:12,000
就是在不同的层次上讨论这个问题

1522
00:57:12,000 --> 00:57:14,000
我是觉得如果你要

1523
00:57:14,000 --> 00:57:16,000
既然你要分而治之

1524
00:57:16,000 --> 00:57:17,000
对你要分而治

1525
00:57:17,000 --> 00:57:20,000
你既然选择一个单一发布商的话

1526
00:57:20,000 --> 00:57:22,000
你无论如何是会面对这个问题

1527
00:57:22,000 --> 00:57:24,000
因为你就像你刚才说的

1528
00:57:24,000 --> 00:57:27,000
你只是选择相信苹果而已

1529
00:57:27,000 --> 00:57:31,000
你没有办法确认说苹果就没有在自己的编辑里面也做手脚

1530
00:57:31,000 --> 00:57:31,000
对吧

1531
00:57:31,000 --> 00:57:33,000
当然我也相信苹果

1532
00:57:33,000 --> 00:57:36,000
这个他在自己编辑里面做手脚对他没有好处

1533
00:57:36,000 --> 00:57:37,000
对吧

1534
00:57:37,000 --> 00:57:37,000
对

1535
00:57:39,000 --> 00:57:41,000
就我们从另一个角度去出发

1536
00:57:41,000 --> 00:57:42,000
就想这件事情

1537
00:57:42,000 --> 00:57:45,000
我们至少相信他从这个 incentive 方面

1538
00:57:45,000 --> 00:57:48,000
他不会去给自己的编辑去做手脚

1539
00:57:48,000 --> 00:57:51,000
但是就是事情总有一个但是对吧

1540
00:57:51,000 --> 00:57:54,000
就好像当初我你无论你还是我都不会相信你

1541
00:57:54,000 --> 00:57:58,000
你会在自己的硬盘的 BIOS 上面放一个木马了

1542
00:57:58,000 --> 00:57:58,000
不是吗

1543
00:57:58,000 --> 00:58:03,000
但迫于 CIA 的淫威他就是这么做了

1544
00:58:03,000 --> 00:58:04,000
你有什么办法了

1545
00:58:04,000 --> 00:58:04,000
对

1546
00:58:04,000 --> 00:58:09,000
所以从一个我也不知道你作为一个非常 paranoid 的人

1547
00:58:09,000 --> 00:58:12,000
你居然会选择说我就是相信不然也没有办法

1548
00:58:12,000 --> 00:58:16,000
这其实是一个很分裂的行为不是吗

1549
00:58:16,000 --> 00:58:16,000
对

1550
00:58:16,000 --> 00:58:18,000
我觉得这个就是问题所在

1551
00:58:18,000 --> 00:58:21,000
就是说在存在着的 close source

1552
00:58:21,000 --> 00:58:24,000
这个 program 的形成

1553
00:58:24,000 --> 00:58:24,000
就是必然的行为

1554
00:58:24,000 --> 00:58:26,000
就是在一个很远的情况下

1555
00:58:26,000 --> 00:58:30,000
我觉得这个东西都是没有办法去就是彻底相信的

1556
00:58:30,000 --> 00:58:34,000
就好像上次我们讲的我记不记得是在哪里讲的一样

1557
00:58:34,000 --> 00:58:37,000
如果就像 Richard Storman 的说法

1558
00:58:37,000 --> 00:58:40,000
如果这个软件不是你从头到脚写起来的

1559
00:58:40,000 --> 00:58:43,000
如果这个意见连跑到所有的固件不是开源的

1560
00:58:43,000 --> 00:58:45,000
不是你从头到脚被验过的

1561
00:58:45,000 --> 00:58:47,000
这个都是不可以被信任的

1562
00:58:47,000 --> 00:58:49,000
不可以被彻底信任制造

1563
00:58:49,000 --> 00:58:50,000
好吧

1564
00:58:50,000 --> 00:58:54,000
就如果我们在 RMS 和一个完全对计算机

1565
00:58:54,000 --> 00:58:58,000
就是 Granite 之间画一个 scale 的话

1566
00:58:58,000 --> 00:58:59,000
那我觉得在这一点的看法上

1567
00:58:59,000 --> 00:59:02,000
我是比你更接近 RMS

1568
00:59:02,000 --> 00:59:02,000
就是

1569
00:59:03,000 --> 00:59:07,000
我觉得如果真的要彻底解决这个问题

1570
00:59:07,000 --> 00:59:10,000
那你只能说所有人的

1571
00:59:10,000 --> 00:59:14,000
你必须为平台的编辑市场

1572
00:59:14,000 --> 00:59:17,000
你必须开放平台的编辑市场做到一个

1573
00:59:19,000 --> 00:59:21,000
这至少有一个开源的实现

1574
00:59:21,000 --> 00:59:22,000
对吧

1575
00:59:22,000 --> 00:59:22,000
对

1576
00:59:22,000 --> 00:59:24,000
然后才可以保证

1577
00:59:24,000 --> 00:59:26,000
说如果出现了类似的事情

1578
00:59:26,000 --> 00:59:30,000
你所影响的只是选择了那一个编辑器的这些人

1579
00:59:31,000 --> 00:59:34,000
然后其实类似的事情早就出现过了

1580
00:59:34,000 --> 00:59:40,000
就是这并不是什么第一次出现这种非常狗血的事情

1581
00:59:40,000 --> 00:59:44,000
以前在 09 年的时候曾经有一个病毒叫做

1582
00:59:44,000 --> 00:59:46,000
Win 32-Indoc-A

1583
00:59:46,000 --> 00:59:47,000
我查到了

1584
00:59:47,000 --> 00:59:47,000
对

1585
00:59:47,000 --> 00:59:51,000
这个病毒的机理就是感染 Delphi

1586
00:59:52,000 --> 00:59:54,000
2019 年的时候 Delphi 还有什么

1587
00:59:54,000 --> 00:59:56,000
这个病毒是人用的

1588
00:59:56,000 --> 00:59:59,000
它感染 Delphi 5-7 版本的 ID 1

1589
00:59:59,000 --> 01:00:04,000
然后它会使得使用被感染的

1590
01:00:05,000 --> 01:00:08,000
ID 1 所写出来的程序带有一个

1591
01:00:08,000 --> 01:00:10,000
带有这个病毒本身应该是

1592
01:00:11,000 --> 01:00:16,000
但是为什么这个病毒没有造成任何今天还有人想起来的伤害

1593
01:00:16,000 --> 01:00:17,000
就是因为

1594
01:00:18,000 --> 01:00:21,000
用 Delphi 的人在 09 年的时候已经非常少了

1595
01:00:21,000 --> 01:00:22,000
而且 5-7 也是一个相对来说比较古老的病毒

1596
01:00:22,000 --> 01:00:23,000
而且 5-7 也是一个相对来说比较古老的病毒

1597
01:00:23,000 --> 01:00:24,000
而且 5-7 也是一个相对来说比较古老的病毒

1598
01:00:24,000 --> 01:00:24,000
而且 5-7 也是一个相对来说比较古老的病毒

1599
01:00:24,000 --> 01:00:24,000
版本

1600
01:00:25,000 --> 01:00:25,000
对

1601
01:00:25,000 --> 01:00:25,000
但

1602
01:00:26,000 --> 01:00:31,000
但假如苹果在苹果平台上你除了 Xcode 还有别的选择的话

1603
01:00:31,000 --> 01:00:32,000
我觉得

1604
01:00:32,000 --> 01:00:34,000
可能这件事情闹了没有那么大

1605
01:00:35,000 --> 01:00:35,000
对

1606
01:00:35,000 --> 01:00:37,000
至少你说波及面会小一点点是吧

1607
01:00:37,000 --> 01:00:38,000
对

1608
01:00:38,000 --> 01:00:38,000
没错

1609
01:00:39,000 --> 01:00:39,000
嗯

1610
01:00:40,000 --> 01:00:40,000
对

1611
01:00:40,000 --> 01:00:41,000
这单位我也同意

1612
01:00:41,000 --> 01:00:46,000
只是说我觉得还是不能至少从我的角度来讲去相信这件事情

1613
01:00:46,000 --> 01:00:47,000
我觉得还是要有一些技术手段

1614
01:00:47,000 --> 01:00:49,000
因为你看来说只是一个

1615
01:00:49,000 --> 01:00:50,000
怎么说

1616
01:00:50,000 --> 01:00:52,000
政治手段来保证它减小它的波及面

1617
01:00:52,000 --> 01:00:53,000
就是通过

1618
01:00:53,000 --> 01:00:54,000
这个

1619
01:00:54,000 --> 01:00:55,000
这个分分割的方法

1620
01:00:55,000 --> 01:00:58,000
但是我觉得其实有一些技术端是可以探讨的

1621
01:00:58,000 --> 01:01:00,000
比如说最简单的方法

1622
01:01:00,000 --> 01:01:05,000
就是假设我们相信苹果不会给自己的编译器填漏主动填

1623
01:01:05,000 --> 01:01:07,000
添加这个后门的情况下

1624
01:01:07,000 --> 01:01:13,000
那我们说说怎么保证我们拿到的这个 Xcode 的编译器是苹果发布的那一个

1625
01:01:13,000 --> 01:01:15,000
那其实最简单我们方法都有对吧

1626
01:01:15,000 --> 01:01:17,000
做一个那个 shar 1 的那个 hashi

1627
01:01:17,000 --> 01:01:21,000
然后对比一下苹果官方发布通过一个安全的平台

1628
01:01:21,000 --> 01:01:21,000
安全

1629
01:01:21,000 --> 01:01:24,000
就是 HTPS 的方法去发

1630
01:01:24,000 --> 01:01:29,000
发布一个这个某一个固定版本的 X 这个 Xcode 的 hashi

1631
01:01:29,000 --> 01:01:31,000
然后去去去去那个就好了

1632
01:01:31,000 --> 01:01:32,000
还有就是说

1633
01:01:32,000 --> 01:01:35,000
他苹果那个上面不是有那个 code sign 吗

1634
01:01:35,000 --> 01:01:36,000
就是代码签名吗

1635
01:01:36,000 --> 01:01:39,000
那其实可以说啊代码签名

1636
01:01:39,000 --> 01:01:42,000
然后运行的时候苹果系统会报错

1637
01:01:42,000 --> 01:01:44,000
就签名失败的那些都是不被执行了嘛

1638
01:01:44,000 --> 01:01:46,000
对

1639
01:01:46,000 --> 01:01:52,000
我觉得以前我下载 Python 的时候还一定要去看那个下载下载安装包跟

1640
01:01:52,000 --> 01:01:55,000
官网上提供的那个 hashi 是不是一样的

1641
01:01:55,000 --> 01:01:58,000
现在早已不会去做这件事情了

1642
01:01:58,000 --> 01:01:59,000
对对

1643
01:01:59,000 --> 01:02:06,000
这个你看就像你我这么狗血的人也不是所有的时候都要去做这件事情的嘛

1644
01:02:06,000 --> 01:02:11,000
所以我觉得这里面还是有一个机制和习惯的培养的过程吧

1645
01:02:11,000 --> 01:02:12,000
然后但话又说回来

1646
01:02:12,000 --> 01:02:15,000
另一方面就假设哪怕我们能保证

1647
01:02:15,000 --> 01:02:18,000
我们下载的那个 Xcode 也好

1648
01:02:18,000 --> 01:02:19,000
还是其他编译器也好

1649
01:02:19,000 --> 01:02:23,000
都是这个就通过一个安全的可靠的管道

1650
01:02:23,000 --> 01:02:28,000
从一个来源和就是正确来源下载到的原始没有被搞过的版本

1651
01:02:28,000 --> 01:02:33,000
我们还得保证我们机器本就是开发用这个机器本身啊

1652
01:02:33,000 --> 01:02:36,000
它是没有病毒和后和后门的

1653
01:02:36,000 --> 01:02:37,000
或者其他木马的

1654
01:02:37,000 --> 01:02:38,000
因为这样的话

1655
01:02:38,000 --> 01:02:43,000
你装上之后你的那个编写是可以被就改写的嘛

1656
01:02:44,000 --> 01:02:45,000
好吧

1657
01:02:45,000 --> 01:02:47,000
从其实从一个比较极端的角度来讲

1658
01:02:47,000 --> 01:02:53,000
你只能相信你使用你所做的这些措施会保证你的开发机器是没有受到影响

1659
01:02:53,000 --> 01:02:55,000
但是真实的情况是你永远查不过来

1660
01:02:57,000 --> 01:02:59,000
但但但其实我还是就是想啊

1661
01:02:59,000 --> 01:03:03,000
就说其实有没有任何方法一些可以做这件事情呢

1662
01:03:03,000 --> 01:03:06,000
就我觉得还是会有一些机制可以就你就去最简单

1663
01:03:06,000 --> 01:03:11,000
我们目前的一个一个要点就是说防串改嘛

1664
01:03:11,000 --> 01:03:12,000
对吧

1665
01:03:12,000 --> 01:03:15,000
就防串改一个很简单的机制就可以做了

1666
01:03:15,000 --> 01:03:15,000
比如说

1667
01:03:15,000 --> 01:03:19,000
你我们用那个叫做哈希数的方法来做嘛

1668
01:03:19,000 --> 01:03:25,000
比如说因为嗯你任何一个软件放在那个磁盘里面都是在文件系统里面的嘛

1669
01:03:25,000 --> 01:03:26,000
对吧

1670
01:03:26,000 --> 01:03:26,000
嗯

1671
01:03:26,000 --> 01:03:29,000
那么我怎么保证

1672
01:03:29,000 --> 01:03:34,000
当然最最最最根到底整个操作系统的也是一个巨大的这个文件数吗

1673
01:03:34,000 --> 01:03:37,000
对整个磁盘对文件系统上磁盘文件数

1674
01:03:37,000 --> 01:03:41,000
那其实我们是可以因为因为像软件就是这些应用程序

1675
01:03:41,000 --> 01:03:45,000
它有一个特质就是说它基本是一个 immutable 的东西就是它它

1676
01:03:45,000 --> 01:03:48,000
不应该就安装好以后

1677
01:03:48,000 --> 01:03:50,000
它的绝大部分是不应该就是程序那一部分

1678
01:03:50,000 --> 01:03:52,000
我们把程序和数据分开

1679
01:03:52,000 --> 01:03:55,000
你你要修改的东西肯定是属于数据的那一部分吧

1680
01:03:55,000 --> 01:04:01,000
但是这个编辑器本身就你 compiler 本身那些那些东西它应该是不变的

1681
01:04:01,000 --> 01:04:02,000
它不应该被改变

1682
01:04:02,000 --> 01:04:03,000
除非你升级对吧

1683
01:04:04,000 --> 01:04:13,000
那么我们可不可以说对每一个不变的部分就程序的那部分的文件做一个这个做一个哈希

1684
01:04:13,000 --> 01:04:13,000
然后我们按文件数的部分做一个这个做一个哈希

1685
01:04:13,000 --> 01:04:13,000
然后我们按文件数的部分做一个这个做一个哈希

1686
01:04:13,000 --> 01:04:14,000
然后我们按文件数的部分做一个这个做一个哈希

1687
01:04:14,000 --> 01:04:14,000
然后我们按文件数的部分做一个这个做一个哈希

1688
01:04:14,000 --> 01:04:16,000
然后我们按文件数的部分做一个这个做一个哈希

1689
01:04:16,000 --> 01:04:17,000
组织这些哈希

1690
01:04:17,000 --> 01:04:20,000
然后我们在在就是在每一个目录那一层

1691
01:04:21,000 --> 01:04:24,000
再对那个目录里面的文件的哈希做一次哈希

1692
01:04:24,000 --> 01:04:27,000
以此类推会得到一条根

1693
01:04:28,000 --> 01:04:31,000
这个这个 root 就是这个这个树的根部的一个哈希

1694
01:04:31,000 --> 01:04:34,000
然后我们知道一旦这个哈希被改变了的话

1695
01:04:34,000 --> 01:04:38,000
说明这个文件系统中的某一部分是被改变了

1696
01:04:38,000 --> 01:04:41,000
他们可以沿着这个哈对比每个每一个这个 root

1697
01:04:41,000 --> 01:04:43,000
毕竟就每一个这个这个叫做 MAR ecosystem

1698
01:04:43,000 --> 01:04:43,000
这个这个叫做 MAR ecosystem

1699
01:04:43,000 --> 01:04:44,000
这个这个叫做 MAR ecosystem

1700
01:04:44,000 --> 01:04:44,000
这个这个叫做 MAR ecosystem

1701
01:04:44,000 --> 01:04:44,000
这个这个叫做 MAR ecosystem

1702
01:04:44,000 --> 01:04:45,000
因为每一个树的根

1703
01:04:45,000 --> 01:04:46,000
都可以是一个 root

1704
01:04:46,000 --> 01:04:46,000
对吧

1705
01:04:46,000 --> 01:04:49,000
我们对比一个 root 的

1706
01:04:49,000 --> 01:04:50,000
还是可以找到

1707
01:04:50,000 --> 01:04:52,000
哪一个文件被改变了

1708
01:04:52,000 --> 01:04:53,000
对吧

1709
01:04:53,000 --> 01:04:54,000
其实通过这种方式

1710
01:04:54,000 --> 01:04:55,000
我们就可以完全

1711
01:04:55,000 --> 01:04:59,000
能够探知得到

1712
01:04:59,000 --> 01:05:00,000
你的程序

1713
01:05:00,000 --> 01:05:01,000
有没有被

1714
01:05:01,000 --> 01:05:04,000
被叫未授权篡改过

1715
01:05:04,000 --> 01:05:06,000
怎么感觉像 git

1716
01:05:06,000 --> 01:05:08,000
git 其实不就是

1717
01:05:08,000 --> 01:05:09,000
对没错

1718
01:05:09,000 --> 01:05:11,000
本质上就是在做这件事情

1719
01:05:11,000 --> 01:05:12,000
不过说 git

1720
01:05:12,000 --> 01:05:13,000
它是一个链状的结构

1721
01:05:13,000 --> 01:05:15,000
然后文件的哈希

1722
01:05:15,000 --> 01:05:16,000
文件树的哈希

1723
01:05:16,000 --> 01:05:17,000
是一个树状的结构

1724
01:05:17,000 --> 01:05:19,000
而这一点恰恰是在一些

1725
01:05:19,000 --> 01:05:22,000
比较高级的文件系统里面

1726
01:05:22,000 --> 01:05:22,000
已经实现了

1727
01:05:22,000 --> 01:05:24,000
就像 ZFS 里面

1728
01:05:24,000 --> 01:05:26,000
但它不是为了保证

1729
01:05:26,000 --> 01:05:28,000
说你的文件不被篡改

1730
01:05:28,000 --> 01:05:29,000
而是说它是要保证

1731
01:05:29,000 --> 01:05:31,000
因为硬盘本身

1732
01:05:31,000 --> 01:05:33,000
可能会发生一些硬件错误

1733
01:05:33,000 --> 01:05:34,000
导致你的文件被篡改

1734
01:05:34,000 --> 01:05:36,000
它需要能够侦测得到

1735
01:05:36,000 --> 01:05:36,000
这个篡改

1736
01:05:36,000 --> 01:05:37,000
然后同时

1737
01:05:37,000 --> 01:05:39,000
同时一样的东西

1738
01:05:39,000 --> 01:05:39,000
对

1739
01:05:39,000 --> 01:05:42,000
它在算法和

1740
01:05:42,000 --> 01:05:43,000
这个思路上

1741
01:05:43,000 --> 01:05:44,000
是一致的

1742
01:05:44,000 --> 01:05:45,000
就通过一些方法

1743
01:05:45,000 --> 01:05:48,000
能够记录一些

1744
01:05:48,000 --> 01:05:51,000
能够生成一堆数据的指纹

1745
01:05:51,000 --> 01:05:52,000
而且并且能够

1746
01:05:52,000 --> 01:05:53,000
能够快速地探测的

1747
01:05:53,000 --> 01:05:54,000
通过这些指纹

1748
01:05:54,000 --> 01:05:56,000
能够快速地探测到哪些

1749
01:05:56,000 --> 01:05:58,000
哪一个文件的哪一部分

1750
01:05:58,000 --> 01:06:01,000
是被不经意地修改过了

1751
01:06:01,000 --> 01:06:03,000
发生了这个变动

1752
01:06:03,000 --> 01:06:05,000
对吧

1753
01:06:05,000 --> 01:06:06,000
所以其实从这种角度来讲

1754
01:06:06,000 --> 01:06:08,000
我觉得是完全有技术措施

1755
01:06:08,000 --> 01:06:11,000
可能虽然当然要花费一点

1756
01:06:11,000 --> 01:06:12,000
这个计算能力

1757
01:06:12,000 --> 01:06:13,000
就是 CPU 要

1758
01:06:13,000 --> 01:06:14,000
要多算一会儿

1759
01:06:14,000 --> 01:06:17,000
但是其实是完全是有能力去实现说

1760
01:06:17,000 --> 01:06:19,000
这个文件

1761
01:06:19,000 --> 01:06:21,000
就这个软件是

1762
01:06:21,000 --> 01:06:24,000
就是至少是按照原始意图来的

1763
01:06:24,000 --> 01:06:26,000
当然这个另一方面

1764
01:06:26,000 --> 01:06:29,000
就是这次这个 OS X 升级以后

1765
01:06:29,000 --> 01:06:31,000
10.11 CAPTEN 里面

1766
01:06:31,000 --> 01:06:31,000
自带了一个功能

1767
01:06:31,000 --> 01:06:32,000
叫做 Rootless

1768
01:06:32,000 --> 01:06:34,000
Rootless 什么意思

1769
01:06:34,000 --> 01:06:34,000
就是说

1770
01:06:34,000 --> 01:06:35,000
因为以前

1771
01:06:35,000 --> 01:06:36,000
就刚才讲那个问题

1772
01:06:36,000 --> 01:06:39,000
苹果就是苹果的操作系统里面

1773
01:06:39,000 --> 01:06:39,000
一些那些

1774
01:06:39,000 --> 01:06:41,000
系统的核心部件的文件

1775
01:06:41,000 --> 01:06:42,000
是可以被

1776
01:06:42,000 --> 01:06:44,000
超级用户所更改的

1777
01:06:44,000 --> 01:06:45,000
对

1778
01:06:45,000 --> 01:06:47,000
然后大家虽然说我们有这个速度

1779
01:06:47,000 --> 01:06:49,000
这个超级用户和普通权

1780
01:06:49,000 --> 01:06:50,000
就普通权用户隔离

1781
01:06:50,000 --> 01:06:54,000
但是因为很多这个实用实际使用的原因

1782
01:06:54,000 --> 01:06:56,000
大家还是用速度用的比较烂嘛

1783
01:06:56,000 --> 01:06:57,000
对吧

1784
01:06:57,000 --> 01:06:58,000
现在要速度这样

1785
01:06:58,000 --> 01:06:59,000
速度那样

1786
01:06:59,000 --> 01:07:01,000
有些是很蠢的事情

1787
01:07:01,000 --> 01:07:03,000
就是你在你要试图用你的

1788
01:07:03,000 --> 01:07:05,000
你在试图装一个软件

1789
01:07:05,000 --> 01:07:08,000
然后这个软件的那个安装指南上赫然写着速度

1790
01:07:08,000 --> 01:07:08,000
这个速度

1791
01:07:08,000 --> 01:07:09,000
那个对

1792
01:07:09,000 --> 01:07:12,000
然后叫你堂而皇之的叫你输入管理密码

1793
01:07:12,000 --> 01:07:12,000
就

1794
01:07:12,000 --> 01:07:14,000
基本上对

1795
01:07:14,000 --> 01:07:16,000
这从来不会告诫

1796
01:07:16,000 --> 01:07:18,000
你说你这样做可能会对你的系统产生危害

1797
01:07:18,000 --> 01:07:20,000
当然也告

1798
01:07:20,000 --> 01:07:22,000
其实告诫了也没有用

1799
01:07:22,000 --> 01:07:23,000
就好像那个 windows 吧

1800
01:07:23,000 --> 01:07:25,000
然后说我从 xp 还是 windows

1801
01:07:25,000 --> 01:07:28,000
vista 开始

1802
01:07:28,000 --> 01:07:32,000
就他每次这个要就有程序或应用

1803
01:07:32,000 --> 01:07:34,000
要做出对系统修改的时候

1804
01:07:34,000 --> 01:07:35,000
他会弹出一个框

1805
01:07:35,000 --> 01:07:35,000
问你要不要做这个

1806
01:07:35,000 --> 01:07:36,000
要不要做那个

1807
01:07:36,000 --> 01:07:37,000
对对对

1808
01:07:37,000 --> 01:07:38,000
叫什么 uac 之类的

1809
01:07:38,000 --> 01:07:39,000
对对对

1810
01:07:39,000 --> 01:07:40,000
但是你你提出了

1811
01:07:40,000 --> 01:07:42,000
这种用户也就疲劳了

1812
01:07:42,000 --> 01:07:42,000
对

1813
01:07:42,000 --> 01:07:48,000
对这种东西也是十个用户有九个会试图在第一时间让这个对号框赶紧消失

1814
01:07:48,000 --> 01:07:48,000
对

1815
01:07:48,000 --> 01:07:49,000
没错

1816
01:07:49,000 --> 01:07:50,000
根本不会去读上面写什么

1817
01:07:50,000 --> 01:07:55,000
所以所以其实你看这个东西你靠提示用户是没有用的

1818
01:07:55,000 --> 01:07:59,000
因为首先用户并不一定具备这个

1819
01:08:00,000 --> 01:08:03,000
这个能力去判断这个到底是可以还是不可以对吧

1820
01:08:03,000 --> 01:08:04,000
他不具备

1821
01:08:04,000 --> 01:08:07,000
对他不是那个 technical 的一个一个一个知识

1822
01:08:07,000 --> 01:08:10,000
而且说即便是对于这种具备这种知识

1823
01:08:10,000 --> 01:08:12,000
这个能力和知识的用户

1824
01:08:12,000 --> 01:08:12,000
你也不需要去判断这个能力和知识的用户

1825
01:08:12,000 --> 01:08:15,000
你也不可以你也不可能每次都去问他

1826
01:08:15,000 --> 01:08:17,000
因为这个会反而会人会产生疲劳的嘛

1827
01:08:17,000 --> 01:08:19,000
就是说你问他一百次

1828
01:08:19,000 --> 01:08:20,000
他肯定不会再想这个事情了

1829
01:08:20,000 --> 01:08:21,000
对吧

1830
01:08:22,000 --> 01:08:30,000
所以我觉得这不是一个就是如果你的你如果你解决这个权限问题的方式是是询问用户的话

1831
01:08:30,000 --> 01:08:33,000
你就其实已经已经认输了

1832
01:08:33,000 --> 01:08:33,000
你就说啊

1833
01:08:33,000 --> 01:08:34,000
这个问题我解决不了

1834
01:08:34,000 --> 01:08:36,000
你们你自己想办法吧

1835
01:08:36,000 --> 01:08:41,000
但是其实是我觉得是玩玩通过通过设计是可以改变一些就可以做出更好的设计的嘛

1836
01:08:41,000 --> 01:08:43,000
比如刚才讲的那个哈希数的方法

1837
01:08:43,000 --> 01:08:46,000
你可以精确的告诉说文件给出费哪个文件出了问题

1838
01:08:46,000 --> 01:08:48,000
这样可能会有什么后果对吧

1839
01:08:48,000 --> 01:08:49,000
可以做一些事情

1840
01:08:49,000 --> 01:08:51,000
然后就是说啊

1841
01:08:51,000 --> 01:09:03,000
在这个设计系统的时候不应不是不是我们目前那种非黑即白的这种比较简单粗暴的权限的方式是不太不太够用的

1842
01:09:04,000 --> 01:09:09,000
然后这里就涉及到我们要讲的一个非常重要的一个人了

1843
01:09:09,000 --> 01:09:10,000
这个人叫 Daniel J.

1844
01:09:11,000 --> 01:09:13,000
A. Bernstein

1845
01:09:13,000 --> 01:09:14,000
Bernstein

1846
01:09:14,000 --> 01:09:19,000
伯恩伯恩施坦先生对叫他说一下 DJB

1847
01:09:19,000 --> 01:09:23,000
如果这个时候你都你听到这三个你看了三个字母缩写名字的时候

1848
01:09:23,000 --> 01:09:26,000
你都没有一种如雷挂的感觉的话

1849
01:09:26,000 --> 01:09:30,000
说明你的安全安全不太到位

1850
01:09:32,000 --> 01:09:37,000
先普及一下为 DJB 是那个他有个人网站叫做 crypto

1851
01:09:37,000 --> 01:09:40,000
是 cr.yp.to

1852
01:09:40,000 --> 01:09:41,000
你就可以看

1853
01:09:41,000 --> 01:09:42,000
他那就是什么样的事

1854
01:09:42,000 --> 01:09:45,000
crypto 这个单词分裂成三半

1855
01:09:45,000 --> 01:09:47,000
就有点像当初那个 delicious

1856
01:09:47,000 --> 01:09:51,000
对对他是他是哪个爱丁堡大学的

1857
01:09:51,000 --> 01:09:55,000
还是不是他是这个伊利诺伊斯大学

1858
01:09:55,000 --> 01:09:57,000
沙哥分校的教授

1859
01:09:57,000 --> 01:10:01,000
对 OK 是在数学统计和计算机科学系

1860
01:10:01,000 --> 01:10:03,000
哇名字好长

1861
01:10:03,000 --> 01:10:04,000
ok anyway

1862
01:10:04,000 --> 01:10:08,000
就他有一些啊著名的作品最简单的

1863
01:10:08,000 --> 01:10:10,000
大家可能比较哄哄的一个叫 NACL 的这个

1864
01:10:10,000 --> 01:10:14,000
叫做 the networking and cryptography library

1865
01:10:16,000 --> 01:10:20,000
然后还有一些像这个 library 的重要存度是怎么样子呢

1866
01:10:21,000 --> 01:10:26,000
就基本上今天互联网一些应用的基石是依赖于这个库的

1867
01:10:26,000 --> 01:10:30,000
就是安全的安全的网络通信的基石是依赖于这个库的

1868
01:10:30,000 --> 01:10:32,000
为什么他的 CV 上写了他是德国人

1869
01:10:32,000 --> 01:10:36,000
他的 citizen 是就是他是他跟我是同一年生的时候

1870
01:10:36,000 --> 01:10:40,000
10 月 20 日 10 月 29 日出生

1871
01:10:40,000 --> 01:10:42,000
他出生在美国纽约

1872
01:10:42,000 --> 01:10:46,000
但是他的 citizenship 写了呃 USA 和 Germany

1873
01:10:46,000 --> 01:10:48,000
这是为什么

1874
01:10:48,000 --> 01:10:52,000
好问题我也不知道

1875
01:10:52,000 --> 01:10:55,000
OK 你接着说我刚才

1876
01:10:55,000 --> 01:10:57,000
他是德国和美国双国籍

1877
01:10:57,000 --> 01:11:01,000
有可能他是这个他是 by birth 就是拜血缘关系的德国公民吗

1878
01:11:01,000 --> 01:11:04,000
因为他父母一方是德国人

1879
01:11:04,000 --> 01:11:05,000
那他在美国出生

1880
01:11:05,000 --> 01:11:07,000
然后 by birth 又是美国人

1881
01:11:07,000 --> 01:11:09,000
落地嘛落地在美国

1882
01:11:09,000 --> 01:11:10,000
所以又是这个美国人了

1883
01:11:10,000 --> 01:11:10,000
所以又是这个美国人了

1884
01:11:10,000 --> 01:11:14,000
就是他是有这个双重公民身份

1885
01:11:14,000 --> 01:11:16,000
嗯 anyway 他还有一些其他的作品呢

1886
01:11:16,000 --> 01:11:18,000
比如说 DNS curve

1887
01:11:18,000 --> 01:11:20,000
OK 对吧

1888
01:11:20,000 --> 01:11:21,000
DNS curve

1889
01:11:21,000 --> 01:11:22,000
DNS curve 是干嘛的呢

1890
01:11:22,000 --> 01:11:24,000
就是一个

1891
01:11:24,000 --> 01:11:27,000
啊嗯

1892
01:11:27,000 --> 01:11:30,000
这个说起来比较麻烦

1893
01:11:30,000 --> 01:11:32,000
加密的加密的 DNS 吧

1894
01:11:32,000 --> 01:11:33,000
可以这么说

1895
01:11:33,000 --> 01:11:35,000
加密的 DNS 协议可以这么说

1896
01:11:35,000 --> 01:11:40,000
然后呃 Linux 和 Unix 上面用户可能用的比较多的这个 DNS 吧

1897
01:11:40,000 --> 01:11:42,000
就是 DEMON TOOLS

1898
01:11:42,000 --> 01:11:43,000
嗯

1899
01:11:43,000 --> 01:11:44,000
这是他写的

1900
01:11:44,000 --> 01:11:45,000
哈哈

1901
01:11:45,000 --> 01:11:46,000
好

1902
01:11:46,000 --> 01:11:48,000
然后他其他的 Qmail 也是他写的

1903
01:11:48,000 --> 01:11:49,000
嗯

1904
01:11:49,000 --> 01:11:50,000
啊对

1905
01:11:50,000 --> 01:11:51,000
所以当然我都说了嘛

1906
01:11:51,000 --> 01:11:54,000
如果你没觉得这 DJB 三个字母

1907
01:11:54,000 --> 01:11:55,000
如对冠儿的话

1908
01:11:55,000 --> 01:11:57,000
你可能要反思一下自己了

1909
01:11:57,000 --> 01:11:59,000
啊

1910
01:11:59,000 --> 01:12:04,000
他在 2007 年的时候发表了一篇论文

1911
01:12:04,000 --> 01:12:09,000
叫做 some thoughts on security after 10 years of QML 1.0

1912
01:12:09,000 --> 01:12:16,000
就是呃写 QML 1.010 年后关于安全的一些想法

1913
01:12:16,000 --> 01:12:19,000
对虽然原标题没有关于安全这件事情

1914
01:12:19,000 --> 01:12:20,000
哦有 sorry

1915
01:12:20,000 --> 01:12:21,000
some thoughts on security

1916
01:12:21,000 --> 01:12:22,000
on security

1917
01:12:22,000 --> 01:12:23,000
对

1918
01:12:23,000 --> 01:12:24,000
啊

1919
01:12:24,000 --> 01:12:28,000
里面他用了大概多少

1920
01:12:28,000 --> 01:12:29,000
啊

1921
01:12:29,000 --> 01:12:31,000
五个章节吧

1922
01:12:31,000 --> 01:12:37,000
讲了一下他在写 Qmail 这款以安全著称的邮件的这个 DEMON

1923
01:12:37,000 --> 01:12:38,000
DEMON 中文翻译成什么

1924
01:12:38,000 --> 01:12:39,000
我有忘了

1925
01:12:39,000 --> 01:12:40,000
呃

1926
01:12:40,000 --> 01:12:41,000
助手进手护进程

1927
01:12:41,000 --> 01:12:48,000
守护进程的的的这么这么一套工具的一些想法和和这个措施吧

1928
01:12:48,000 --> 01:12:49,000
就简单来说

1929
01:12:49,000 --> 01:12:50,000
嗯

1930
01:12:50,000 --> 01:12:53,000
怎么去写出一个安全可能的软件

1931
01:12:53,000 --> 01:12:57,000
这篇论文我们会贴在这个本期节目的 notes 里面

1932
01:12:57,000 --> 01:12:58,000
哎

1933
01:12:58,000 --> 01:12:59,000
我强烈不是很长

1934
01:12:59,000 --> 01:13:02,000
如果不去看 reference 的话

1935
01:13:02,000 --> 01:13:04,000
基本上只有八页值的样子

1936
01:13:04,000 --> 01:13:05,000
对

1937
01:13:05,000 --> 01:13:08,000
而且它里面其实 technical detail 其实并不多

1938
01:13:08,000 --> 01:13:14,000
他们其实是在一些讨论一些呃就是思路和这个架构的问题

1939
01:13:14,000 --> 01:13:17,000
原则上原则上的对就是对 principle

1940
01:13:18,000 --> 01:13:19,000
对啊

1941
01:13:19,000 --> 01:13:21,000
他说怎么写一个安全的程序呢

1942
01:13:21,000 --> 01:13:27,000
有一些通常的思路叫做首先我们要就是减少 bug 对吧

1943
01:13:27,000 --> 01:13:32,000
因为这是安全的通常就所有的安全漏洞都是 bug

1944
01:13:33,000 --> 01:13:36,000
所以我们怎么样解决这个 bug

1945
01:13:36,000 --> 01:13:37,000
然后这个第二个思路就是

1946
01:13:37,000 --> 01:13:44,000
呃如果我们假定这个出 bug 的概率是相对来说差不多的

1947
01:13:44,000 --> 01:13:46,000
那么这个程序的代码量越少

1948
01:13:46,000 --> 01:13:49,000
他的 bug 的总量是不是可能就越低了

1949
01:13:49,000 --> 01:13:54,000
就一个复杂的程序总是可能比一个啊简单的程序

1950
01:13:54,000 --> 01:13:57,000
就就其他情况一定的其他条件一定的情况下

1951
01:13:57,000 --> 01:14:01,000
肯定是一个更复杂的程序可能还有更多的 bug 对吧

1952
01:14:01,000 --> 01:14:02,000
没错

1953
01:14:02,000 --> 01:14:03,000
对

1954
01:14:03,000 --> 01:14:06,000
然后第三个一个措施就是说啊

1955
01:14:06,000 --> 01:14:08,000
呃叫做什么来着

1956
01:14:08,000 --> 01:14:09,000
减少被信任的代码

1957
01:14:09,000 --> 01:14:11,000
对这里提到有有一个概念

1958
01:14:11,000 --> 01:14:14,000
就是什么叫做信任的代码和不被信任的代码

1959
01:14:14,000 --> 01:14:17,000
就是说信任的代码可以做一些更高权限的事儿

1960
01:14:17,000 --> 01:14:21,000
然后不被信任的代码就必须只能做一些很低权限

1961
01:14:21,000 --> 01:14:23,000
甚至不需要权限的事儿

1962
01:14:23,000 --> 01:14:25,000
然后这样的好处是什么呢

1963
01:14:25,000 --> 01:14:28,000
就是说哪怕不被信任的代码出了 bug

1964
01:14:28,000 --> 01:14:32,000
他的结果也不会导致系统出现安全漏洞

1965
01:14:32,000 --> 01:14:33,000
对

1966
01:14:33,000 --> 01:14:36,000
所以如果我们能够把代码分成这个可行的代码呢

1967
01:14:36,000 --> 01:14:38,000
信任的部分和不可信任的部分

1968
01:14:38,000 --> 01:14:39,000
啊

1969
01:14:39,000 --> 01:14:43,000
并且把不可信任的部分放在一些特特殊的受限制的环境里面去执行

1970
01:14:43,000 --> 01:14:44,000
比如说沙盒模型

1971
01:14:44,000 --> 01:14:45,000
对吧

1972
01:14:45,000 --> 01:14:47,000
对那么这样可以也可以在一定程度上啊

1973
01:14:47,000 --> 01:14:51,000
减低这个这个这种就是安全漏洞的隐化

1974
01:14:51,000 --> 01:14:54,000
因为因为这个情跟前面那个情况一样嘛

1975
01:14:54,000 --> 01:15:01,000
就是因为受限的代码就是受限的代码就是需要应许在更高权限级别的代码的总量减少了吧

1976
01:15:01,000 --> 01:15:04,000
然后我们假设这个代码出现啊

1977
01:15:04,000 --> 01:15:06,000
漏洞的概率是差不多的话

1978
01:15:06,000 --> 01:15:09,000
那肯定代码总量也会减就是至少安全漏洞的隐患会减少了

1979
01:15:09,000 --> 01:15:10,000
对吧

1980
01:15:10,000 --> 01:15:11,000
嗯

1981
01:15:11,000 --> 01:15:17,000
当然还有一些就是他认为是没有什么就是燃病卵的

1982
01:15:17,000 --> 01:15:23,000
就并没有什么用处的呃呃的提升软件安全的办法

1983
01:15:23,000 --> 01:15:26,000
对第一个方法就是 chasing attack

1984
01:15:26,000 --> 01:15:31,000
对就跟着就啊你还是叫被攻击者牵着鼻子走

1985
01:15:31,000 --> 01:15:32,000
对

1986
01:15:32,000 --> 01:15:34,000
我觉得这个翻译好一点

1987
01:15:34,000 --> 01:15:35,000
哈哈哈

1988
01:15:35,000 --> 01:15:36,000
就简单来说就是

1989
01:15:36,000 --> 01:15:40,000
我们说的作用叫做头痛一头一头脚痛一脚的方法

1990
01:15:40,000 --> 01:15:42,000
就是说工具者过来了

1991
01:15:42,000 --> 01:15:43,000
发现哪里漏了

1992
01:15:43,000 --> 01:15:45,000
就扑过去把那个漏洞补上

1993
01:15:45,000 --> 01:15:47,000
然后他攻击就攻击另外一个地方了

1994
01:15:47,000 --> 01:15:49,000
你又扑上去把这个漏洞堵上

1995
01:15:49,000 --> 01:15:52,000
就始终是处于一个相对被动的方法

1996
01:15:52,000 --> 01:15:54,000
就是这个机械被认为呢

1997
01:15:54,000 --> 01:15:57,000
这个是呃不靠谱的

1998
01:15:57,000 --> 01:16:00,000
因为不没有从根源上解决问题了

1999
01:16:00,000 --> 01:16:02,000
对他又顺便黑了一下 firewall

2000
01:16:02,000 --> 01:16:05,000
然后什么防病毒软件啊

2001
01:16:05,000 --> 01:16:09,000
或者什么 intrusion detection system 之类的东西

2002
01:16:09,000 --> 01:16:11,000
对他觉得这些东西都是冉冉乱

2003
01:16:11,000 --> 01:16:14,000
当然这个地方我觉得还是可以反对一下

2004
01:16:14,000 --> 01:16:19,000
就至少 intrusion detection system 可以让你对于正在进行的攻击有所反应

2005
01:16:19,000 --> 01:16:21,000
这已经是一个

2006
01:16:21,000 --> 01:16:30,000
至少你在维护一个维护一些不可能被啊修正的路漏洞的时候会

2007
01:16:30,000 --> 01:16:31,000
这个东西还是很有用

2008
01:16:31,000 --> 01:16:32,000
比如说 ddos

2009
01:16:32,000 --> 01:16:35,000
ddos 本质 ddos 攻击本质上是没有更不可能的

2010
01:16:35,000 --> 01:16:37,000
本身根本跟漏洞没有关系的吧

2011
01:16:37,000 --> 01:16:38,000
他就是

2012
01:16:38,000 --> 01:16:43,000
就是这是一个物理条件所导致的一个安全营

2013
01:16:43,000 --> 01:16:48,000
你在这种情况之下有一个 intrusion detection system 还是很有用的

2014
01:16:48,000 --> 01:16:49,000
嗯

2015
01:16:49,000 --> 01:16:54,000
当然对这个在软件工程的环节上是的确是可以像他说的一样

2016
01:16:54,000 --> 01:16:57,000
做任何东西是没有什么事的确是没有什么卵

2017
01:16:57,000 --> 01:17:00,000
对因为他本质上并没有修正就是

2018
01:17:00,000 --> 01:17:05,000
就改变这个系统是一个千仓百孔的事实对吧

2019
01:17:05,000 --> 01:17:06,000
对没错

2020
01:17:06,000 --> 01:17:13,000
对然后下一条他觉得然并卵的方法叫做减少权限

2021
01:17:13,000 --> 01:17:19,000
对这个其实可能可能跟很多这个就是刚才我们讲的那个速度这个情况有点关系啊

2022
01:17:19,000 --> 01:17:26,000
就是说你降低权限的这个就活的权限分离的这个其实在他看来并没有什么用

2023
01:17:26,000 --> 01:17:33,000
没错这其实有点呃叫什么 contrary to popular belief 就是 minimize privilege

2024
01:17:33,000 --> 01:17:35,000
在他看来是没有太多用的

2025
01:17:35,000 --> 01:17:42,000
因为呃毕竟你有你再怎么 minimize privilege

2026
01:17:42,000 --> 01:17:46,000
那个 privilege 如果你需要的话还是还是还是在哪的对吧

2027
01:17:46,000 --> 01:17:54,000
呃对你只有说我要把这些所有就是需要被 trusted code 减到最少

2028
01:17:54,000 --> 01:17:57,000
你这个 minimize privilege 才有那么一点点的用

2029
01:17:57,000 --> 01:18:03,000
但如果你在 minimize privilege 的同时没有去减少需要被 trusted code

2030
01:18:03,000 --> 01:18:05,000
那你只要给你那一点

2031
01:18:05,000 --> 01:18:08,000
你减点 privilege 你就已经可以为了

2032
01:18:08,000 --> 01:18:19,000
对所以其实逻辑上他觉得这个减少权限的这个一个并不解决实际问题的根本原因就是因为减少权限

2033
01:18:19,000 --> 01:18:27,000
只是说减少了呃一旦出现软件 bug 或者是安全漏洞造成的损失

2034
01:18:27,000 --> 01:18:30,000
而并没有并没有解决安全漏洞本身

2035
01:18:30,000 --> 01:18:33,000
对对所以其中那个我讲他的这个思路是正确的

2036
01:18:33,000 --> 01:18:34,000
因为确实

2037
01:18:34,000 --> 01:18:38,000
他确实并没有减少这个软件漏洞的数量本身嘛

2038
01:18:38,000 --> 01:18:43,000
他只是说减少减少了这个软件漏洞产生的可能产生的影响

2039
01:18:43,000 --> 01:18:47,000
这个这个事情是值得说的

2040
01:18:47,000 --> 01:18:48,000
比如说很简单

2041
01:18:48,000 --> 01:18:49,000
一个例子

2042
01:18:49,000 --> 01:18:51,000
他说你说 minimize 就是减少权限

2043
01:18:51,000 --> 01:18:56,000
比如说现在很多这个这个这个 iOS 的应用也好

2044
01:18:56,000 --> 01:18:57,000
还是安卓应用也好

2045
01:18:57,000 --> 01:18:58,000
他会说哎

2046
01:18:58,000 --> 01:19:00,000
我要你的这个通讯录访问权限对吧

2047
01:19:00,000 --> 01:19:02,000
但其实你知道

2048
01:19:02,000 --> 01:19:03,000
他是会有可能会把这个学习的这个这个这个讯息可以弄到这个条件上去

2049
01:19:03,000 --> 01:19:06,000
有可能会把这个偷偷上传到他的云端

2050
01:19:06,000 --> 01:19:10,000
然后去做一些这种打着你的旗号

2051
01:19:10,000 --> 01:19:11,000
去骚扰你的朋友的事

2052
01:19:11,000 --> 01:19:12,000
对

2053
01:19:12,000 --> 01:19:14,000
这个时候你有两种做法

2054
01:19:14,000 --> 01:19:15,000
你要不就拒绝他

2055
01:19:15,000 --> 01:19:17,000
对你拒绝他显示那个

2056
01:19:17,000 --> 01:19:18,000
然后那个时候就减小了权限了

2057
01:19:18,000 --> 01:19:21,000
这样哪怕他是一个恶意的程序

2058
01:19:21,000 --> 01:19:23,000
他也不会说拿到你的通讯录会怎么样

2059
01:19:23,000 --> 01:19:27,000
但是假设这个软件刚好有这么一小撮功能

2060
01:19:27,000 --> 01:19:30,000
是必须得访问通讯录才能正常使用的

2061
01:19:30,000 --> 01:19:32,000
但这个是随便举个例子

2062
01:19:32,000 --> 01:19:33,000
你又不得不授权他的时候

2063
01:19:33,000 --> 01:19:34,000
这个时候你就很纠结了

2064
01:19:34,000 --> 01:19:36,000
你说那我到底选择

2065
01:19:36,000 --> 01:19:39,000
要不要为了这个功能选择相信他呢

2066
01:19:39,000 --> 01:19:43,000
这个我觉得就是一个挺考验人心的时刻

2067
01:19:43,000 --> 01:19:43,000
没错

2068
01:19:43,000 --> 01:19:45,000
对

2069
01:19:45,000 --> 01:19:47,000
我觉得其实 minimize and privilege

2070
01:19:47,000 --> 01:19:48,000
并不是一个错的举措

2071
01:19:48,000 --> 01:19:50,000
至少你至少在你做

2072
01:19:50,000 --> 01:19:53,000
比如说你是一个 IT and a straighter

2073
01:19:53,000 --> 01:19:57,000
然后你必须给不同的用户分配权限的时候

2074
01:19:57,000 --> 01:20:00,000
minimize and privilege 是一个非常正确的策略

2075
01:20:00,000 --> 01:20:01,000
但是

2076
01:20:01,000 --> 01:20:03,000
我相信作者的意思只是说

2077
01:20:03,000 --> 01:20:06,000
minimize and privilege 并不能减少软件中的 bug

2078
01:20:06,000 --> 01:20:06,000
对

2079
01:20:06,000 --> 01:20:09,000
所以这是两个层面的问题

2080
01:20:09,000 --> 01:20:11,000
我们还是要把这个分得清楚的

2081
01:20:11,000 --> 01:20:15,000
一个是说就解决减少软件 bug

2082
01:20:15,000 --> 01:20:17,000
这个事情的本身来讲

2083
01:20:17,000 --> 01:20:20,000
确实减少权限并没有什么鸟用

2084
01:20:20,000 --> 01:20:25,000
但是就在我们毕竟在实际上还是说不可

2085
01:20:25,000 --> 01:20:27,000
因为不可能保证所有的 bug 都被修复

2086
01:20:27,000 --> 01:20:30,000
所以我们只能说除了在通过措施

2087
01:20:30,000 --> 01:20:33,000
减少 bug 同时还要尽量矫正

2088
01:20:33,000 --> 01:20:35,000
尽量保证如果 bug 发生

2089
01:20:35,000 --> 01:20:38,000
也要减少它的可能产生的负面影响

2090
01:20:38,000 --> 01:20:39,000
对

2091
01:20:39,000 --> 01:20:42,000
也就是从一个是从工程学的角度来讲

2092
01:20:42,000 --> 01:20:44,000
来解来理解

2093
01:20:44,000 --> 01:20:47,000
另外一个则是从这个 and administration 的角度来讲

2094
01:20:47,000 --> 01:20:47,000
对

2095
01:20:47,000 --> 01:20:51,000
然后他说第三条并没有什么

2096
01:20:51,000 --> 01:20:55,000
这不叫并没有什么并没有什么用

2097
01:20:55,000 --> 01:20:58,000
而是说一个一个很常常见的因素

2098
01:20:58,000 --> 01:20:59,000
会导致大家会放弃

2099
01:20:59,000 --> 01:21:00,000
对这个软件的用户

2100
01:21:00,000 --> 01:21:02,000
这个软件安全的追求

2101
01:21:02,000 --> 01:21:05,000
这个理由通常就是性能或者叫速度

2102
01:21:05,000 --> 01:21:09,000
对我们可能为了追求软件的性能或者是一些速度

2103
01:21:09,000 --> 01:21:13,000
去采用一些不那么安全靠谱的这个方案

2104
01:21:13,000 --> 01:21:16,000
或者说这个写法

2105
01:21:16,000 --> 01:21:18,000
一个最简单的例子可能可能这么对比比较好

2106
01:21:18,000 --> 01:21:21,000
比如说这个当然我们是自己举的例子

2107
01:21:21,000 --> 01:21:23,000
并不是他文章说的一个例子

2108
01:21:23,000 --> 01:21:25,000
我们说进程和现成的关系吧

2109
01:21:25,000 --> 01:21:28,000
就通常在可能灵感上这是不成立啊

2110
01:21:28,000 --> 01:21:29,000
比如在 window 上面

2111
01:21:29,000 --> 01:21:35,000
开一个新的现成比开一个新的进程是要开销来的低的吗

2112
01:21:35,000 --> 01:21:36,000
对没错吧

2113
01:21:36,000 --> 01:21:41,000
对但是现成之与现成之间并不能实现内存隔离对吧

2114
01:21:41,000 --> 01:21:44,000
因为他不现成之间是共享内存区域的

2115
01:21:44,000 --> 01:21:46,000
不受操作这种其他保护

2116
01:21:46,000 --> 01:21:47,000
这样的话

2117
01:21:47,000 --> 01:21:50,000
在一个现成里面出现的软件 bug

2118
01:21:50,000 --> 01:21:58,000
或者是漏洞使得他可能造成这个共享内存区域泄漏

2119
01:21:58,000 --> 01:21:59,000
然后这样的话

2120
01:21:59,000 --> 01:22:02,000
就是现成的 bug 会波及到其他现成

2121
01:22:02,000 --> 01:22:10,000
但是如果你不为了这个性能或者是方便的考虑而采用进多进程的模型的话

2122
01:22:10,000 --> 01:22:13,000
进程与进程间的通信是一个明确接口的嘛

2123
01:22:13,000 --> 01:22:18,000
然后他进入之间如果不除非你做特殊的操作

2124
01:22:18,000 --> 01:22:20,000
不然你是没有办法共享内存的嘛

2125
01:22:20,000 --> 01:22:27,000
所以一个进程的这个被 compromise 是不会影响到另外一个进程的安全性的

2126
01:22:27,000 --> 01:22:28,000
对对

2127
01:22:28,000 --> 01:22:32,000
这就是为什么沙盒模型

2128
01:22:32,000 --> 01:22:42,000
然后进程隔离能够使得一些比较失败的程序所产生的一些灾难性的后果

2129
01:22:42,000 --> 01:22:46,000
不会扩散到其他运行的程序上面的原因

2130
01:22:46,000 --> 01:22:50,000
他在文章中举的倒是一个例子

2131
01:22:50,000 --> 01:22:51,000
我觉得挺有意思的

2132
01:22:51,000 --> 01:22:57,000
就是说可以用一个解释器的方法去实现一个简单的限制性的环境

2133
01:22:57,000 --> 01:22:59,000
去做一些基础的处理

2134
01:22:59,000 --> 01:23:06,000
而不是说你直接用比如说用 C 语言写一个邮件地址的解析器

2135
01:23:06,000 --> 01:23:07,000
因为这样的话你很容易

2136
01:23:07,000 --> 01:23:12,000
因为 C 是这种就是什么内存不安全的语言很容易

2137
01:23:12,000 --> 01:23:13,000
很容易轰掉脚的语言

2138
01:23:13,000 --> 01:23:19,000
对很容易叫做 shoot yourself in the foot

2139
01:23:19,000 --> 01:23:22,000
就是拿把枪把自己脚给打了一枪

2140
01:23:22,000 --> 01:23:25,000
对因为因为有这个内存越界啊

2141
01:23:25,000 --> 01:23:27,000
导致各种各样的问题啊

2142
01:23:27,000 --> 01:23:30,000
是使得你可能会出现错误

2143
01:23:30,000 --> 01:23:33,000
但是如果你写一个简单的这个编译这个解释器

2144
01:23:33,000 --> 01:23:40,000
就是一个很简单的虚虚拟的迷你语言去做这个地址解析的话

2145
01:23:40,000 --> 01:23:41,000
可能会好一些对吧

2146
01:23:41,000 --> 01:23:45,000
但是这样很多人会觉得这完全是什么杀鸡用牛刀啊

2147
01:23:45,000 --> 01:23:46,000
何必呢

2148
01:23:46,000 --> 01:23:47,000
对吧

2149
01:23:47,000 --> 01:23:48,000
没错

2150
01:23:48,000 --> 01:23:51,000
所以为了这个性能或者实现效率来讲

2151
01:23:51,000 --> 01:23:54,000
就采取了一些没有那么安全的方法

2152
01:23:54,000 --> 01:23:55,000
嗯

2153
01:23:55,000 --> 01:23:57,000
反正这篇论文是非常具有意义的

2154
01:23:57,000 --> 01:23:59,000
我觉得是一个很严重的研究价值的

2155
01:23:59,000 --> 01:24:02,000
我觉得如果任何一个因为这件事情

2156
01:24:02,000 --> 01:24:08,000
或者是因为之前乃至将以后将会发生的其他事情

2157
01:24:08,000 --> 01:24:11,000
想要让自己写的东西比较安全的朋友的话

2158
01:24:11,000 --> 01:24:14,000
一定要读一读读一读这篇文章

2159
01:24:14,000 --> 01:24:15,000
嗯

2160
01:24:15,000 --> 01:24:17,000
其实他这篇文章我觉得最有价值的是

2161
01:24:17,000 --> 01:24:20,000
那个叫做第四部分和第五部分

2162
01:24:20,000 --> 01:24:21,000
嗯

2163
01:24:21,000 --> 01:24:23,000
第四部分就是说第四部分叫做

2164
01:24:23,000 --> 01:24:25,000
就如何减少代码量

2165
01:24:25,000 --> 01:24:26,000
这个是我最喜欢干的事儿

2166
01:24:26,000 --> 01:24:32,000
我总觉得现在我们很多人写这个代码的习惯就是

2167
01:24:32,000 --> 01:24:33,000
呃

2168
01:24:33,000 --> 01:24:34,000
越多越好

2169
01:24:34,000 --> 01:24:35,000
他现在有一个概念

2170
01:24:35,000 --> 01:24:38,000
我觉得非常就是当然他不是他自己原创的

2171
01:24:38,000 --> 01:24:39,000
是那个 dextra 说的

2172
01:24:39,000 --> 01:24:40,000
就是说

2173
01:24:40,000 --> 01:24:41,000
呃

2174
01:24:41,000 --> 01:24:42,000
呃

2175
01:24:42,000 --> 01:24:43,000
叫什么

2176
01:24:43,000 --> 01:24:50,000
愚蠢的软件经理通常用这个程序员的生产效率去衡量一个呃一个程序员的这个

2177
01:24:50,000 --> 01:24:53,000
通通常用这个代码量去专写的代码行

2178
01:24:53,000 --> 01:24:54,000
对对对

2179
01:24:54,000 --> 01:24:56,000
用一个代码的

2180
01:24:56,000 --> 01:24:57,000
对对对

2181
01:24:57,000 --> 01:24:58,000
这句话再说一遍

2182
01:24:58,000 --> 01:25:00,000
就是一个愚蠢的软件的这个经理

2183
01:25:00,000 --> 01:25:05,000
又或者这个产品项目经理会用这个代码行数去衡量一个程程

2184
01:25:05,000 --> 01:25:06,000
横行的生产力

2185
01:25:06,000 --> 01:25:08,000
也就是说潜才的含义

2186
01:25:08,000 --> 01:25:09,000
就是说代码写的越多

2187
01:25:09,000 --> 01:25:11,000
这个这个程序员越高效

2188
01:25:11,000 --> 01:25:13,000
或者说跟越高产对吧

2189
01:25:13,000 --> 01:25:14,000
对

2190
01:25:14,000 --> 01:25:16,000
因为高产肯定是产出的嘛

2191
01:25:16,000 --> 01:25:18,000
但其实上这个概念是完全错误的

2192
01:25:18,000 --> 01:25:22,000
应该是用消耗的代码量去衡量一个代码

2193
01:25:22,000 --> 01:25:25,000
这个程序员的呃这个生产力

2194
01:25:25,000 --> 01:25:28,000
就是说呃一个为了实现同样的功能

2195
01:25:28,000 --> 01:25:30,000
或者同样的 specification

2196
01:25:30,000 --> 01:25:32,000
一个程序员用的代码量越少

2197
01:25:32,000 --> 01:25:33,000
才应该是越好的

2198
01:25:34,000 --> 01:25:35,000
但这句话也不太对

2199
01:25:35,000 --> 01:25:39,000
因为毕竟还是要考虑的这种这个什么可维护性啊

2200
01:25:39,000 --> 01:25:40,000
易读性啊

2201
01:25:40,000 --> 01:25:41,000
怎么怎么样对吧

2202
01:25:41,000 --> 01:25:42,000
这个深究的

2203
01:25:42,000 --> 01:25:43,000
我觉得这个是

2204
01:25:43,000 --> 01:25:44,000
但起码他提出这个概念

2205
01:25:44,000 --> 01:25:51,000
就是编写的代码量和消耗的代码量是一个两个完全不同的呃这个思路去看这个问题

2206
01:25:52,000 --> 01:25:53,000
没错

2207
01:25:53,000 --> 01:25:54,000
对

2208
01:25:54,000 --> 01:25:55,000
所以当然这个这个这个

2209
01:25:55,000 --> 01:25:58,000
第四节里面这篇论文讲的一个很好的一个几几个点啊

2210
01:25:58,000 --> 01:26:01,000
就是说我们说消消减代码的量

2211
01:26:01,000 --> 01:26:07,000
第一个就是说呃就是把重复的部分做成一个通用的函数了

2212
01:26:07,000 --> 01:26:09,000
哪怕他再小再 trivial

2213
01:26:09,000 --> 01:26:10,000
对吧

2214
01:26:10,000 --> 01:26:12,000
应该用的重复次数过多

2215
01:26:12,000 --> 01:26:14,000
够多的话也是也是值得的

2216
01:26:14,000 --> 01:26:17,000
当然这东西也是有一定的副作用的啊

2217
01:26:17,000 --> 01:26:20,000
就是说在一些这种比较愚蠢的语言里面

2218
01:26:20,000 --> 01:26:23,000
你调用的函数过多其实是会影响你的性能的

2219
01:26:23,000 --> 01:26:24,000
对吧

2220
01:26:24,000 --> 01:26:26,000
就是说你会去应赖这些东西

2221
01:26:26,000 --> 01:26:36,000
当然这个就跟刚才提到的那个为了为了信为了这种微不足道的性能去牺牲了这个呃其他东西是是点了芝麻丢了西瓜

2222
01:26:36,000 --> 01:26:37,000
对没错

2223
01:26:37,000 --> 01:26:43,000
然后这个 4.2 他提到了一个就是说啊如何去处理这个临时错误

2224
01:26:43,000 --> 01:26:44,000
这个是非常重要的

2225
01:26:44,000 --> 01:26:48,000
其实所有的程序里面最麻烦的就是错误处理

2226
01:26:48,000 --> 01:26:53,000
而是说很多人会能很多人这个但这个回到我们之前说的那个就是 exception 机制的问题

2227
01:26:53,000 --> 01:26:55,000
哈就是 exception 机制

2228
01:26:55,000 --> 01:27:03,000
这好像我们第一期的那种对对对 exception 机制是假设这个程序的正常模积是一个呃这个什么正常运行的

2229
01:27:03,000 --> 01:27:07,000
然后这个错误是或者说呃这个异常是需要特别处理的

2230
01:27:07,000 --> 01:27:09,000
但是其实应该是反过来的

2231
01:27:09,000 --> 01:27:12,000
我觉得就是说你默认这个程序是跑不了的

2232
01:27:12,000 --> 01:27:15,000
对默认程序是会各出各种各样的问题的

2233
01:27:15,000 --> 01:27:17,000
你只能一步一步去处理的问题

2234
01:27:17,000 --> 01:27:22,000
然后你当你把所有的呃可能出错的都覆盖到了一个这个程序才是安全无错的嘛

2235
01:27:22,000 --> 01:27:23,000
对吧

2236
01:27:23,000 --> 01:27:30,000
所以为什么也为什么说用这个 exception 机制从本质上而说是不是一个非常靠谱和安全的一个一个一个方法

2237
01:27:30,000 --> 01:27:35,000
听到这里这个高程序员和 c 程序员一定会觉得非常有理

2238
01:27:35,000 --> 01:27:39,000
然后其他所有程序员都觉得我靠这是在说什么邪教

2239
01:27:39,000 --> 01:27:41,000
哈哈哈哈

2240
01:27:41,000 --> 01:27:42,000
我也不知道

2241
01:27:42,000 --> 01:27:49,000
我觉得有时候你使用的这种语言的错误处理机制会会让你产生某种特定的性格

2242
01:27:49,000 --> 01:27:50,000
就是

2243
01:27:50,000 --> 01:27:53,000
我觉得写 4 月人一般都会比较好

2244
01:27:53,000 --> 01:27:55,000
悲观

2245
01:27:55,000 --> 01:27:58,000
你觉得这个东西是很有可能失败的

2246
01:27:58,000 --> 01:28:03,000
就是不管干什么都会说这个玩意错怎么办错怎么办错怎么办

2247
01:28:03,000 --> 01:28:04,000
对

2248
01:28:04,000 --> 01:28:06,000
然后写 java 的可能就不会想那么多

2249
01:28:06,000 --> 01:28:09,000
总是会假设说这个世界会完美运行

2250
01:28:09,000 --> 01:28:11,000
出了错再去想他应该怎么办

2251
01:28:11,000 --> 01:28:12,000
没错

2252
01:28:12,000 --> 01:28:13,000
啊

2253
01:28:13,000 --> 01:28:17,000
就这个 4.3 节他讲了另外一个我觉得挺重要的事儿

2254
01:28:17,000 --> 01:28:19,000
就是还是叫重用网络工具

2255
01:28:19,000 --> 01:28:20,000
嗯

2256
01:28:20,000 --> 01:28:21,000
但这里觉得举的一个例子

2257
01:28:21,000 --> 01:28:23,000
其实我一直很想吐槽的

2258
01:28:23,000 --> 01:28:24,000
对吧

2259
01:28:24,000 --> 01:28:26,000
还有一个另外相关的事情我们可以在这里聊一聊

2260
01:28:26,000 --> 01:28:31,000
就是他聊到一个例子就是 unix 系统里面有以前有一个很通用的工具叫做 i 1

2261
01:28:31,000 --> 01:28:32,000
就是 inet 的 d

2262
01:28:32,000 --> 01:28:34,000
就是 inert 的 demon

2263
01:28:34,000 --> 01:28:35,000
这个这个地面有什么用呢

2264
01:28:35,000 --> 01:28:36,000
就是他的那个作用简单

2265
01:28:36,000 --> 01:28:38,000
他会去嗯

2266
01:28:38,000 --> 01:28:41,000
监听一个这个端口或者几个端口

2267
01:28:41,000 --> 01:28:43,000
然后去帮去接受连接

2268
01:28:43,000 --> 01:28:46,000
然后一旦他接受指定端口有没有个指定连接

2269
01:28:46,000 --> 01:28:49,000
他会启动一个进程

2270
01:28:49,000 --> 01:28:52,000
然后把这个进程的输入套到这个连接上

2271
01:28:52,000 --> 01:28:53,000
然后输出套到这个连接上

2272
01:28:53,000 --> 01:28:55,000
然后这个连接的就一个他就自己有输出出嘛

2273
01:28:55,000 --> 01:28:56,000
对吧

2274
01:28:56,000 --> 01:28:59,000
对他把这个跟那个程序的输出对接起来

2275
01:28:59,000 --> 01:29:00,000
这样的话

2276
01:29:00,000 --> 01:29:06,000
啊其实这个程序本身就不用考虑他的这个输出是从哪里来的

2277
01:29:06,000 --> 01:29:09,000
他只要考虑就输去处理这个输出就好了

2278
01:29:09,000 --> 01:29:10,000
就其他网络的事情也好

2279
01:29:10,000 --> 01:29:12,000
还是说从一个管道过来的也好

2280
01:29:12,000 --> 01:29:14,000
对这个程序来说是透明的

2281
01:29:14,000 --> 01:29:20,000
这样他可以把他就可以重用这个 i 9 的地里面已经实现过的那些网络的机制了

2282
01:29:20,000 --> 01:29:21,000
对吧

2283
01:29:21,000 --> 01:29:22,000
当然他也说了一下原因

2284
01:29:22,000 --> 01:29:23,000
为什么呢

2285
01:29:23,000 --> 01:29:26,000
其他的一些程序不能直接使用这个方法

2286
01:29:26,000 --> 01:29:34,000
但是其实仔细看来就是通可以通过某些方法去去就从架构上的改进是可以重用这一点的

2287
01:29:34,000 --> 01:29:37,000
就想到我在这个当然这个 i 9 的底线用的也不是特别多好

2288
01:29:37,000 --> 01:29:39,000
我想说的是另外一点事

2289
01:29:39,000 --> 01:29:46,000
就现在不是有那个什么 systemd 和之前在 ubuntu 里面用的比较多的那个叫 upstart

2290
01:29:46,000 --> 01:29:52,000
嗯他们本身有一个功能叫做 demonization 这件事情其实是一个非常诡异的事情

2291
01:29:52,000 --> 01:29:53,000
就是你要

2292
01:29:53,000 --> 01:29:55,000
你要让一个程序成为一个守护进程

2293
01:29:55,000 --> 01:29:57,000
在 unix 里面你要做很多事情

2294
01:29:57,000 --> 01:29:58,000
对吧

2295
01:29:58,000 --> 01:29:59,000
你要把它输出

2296
01:29:59,000 --> 01:30:00,000
跟他去调好

2297
01:30:00,000 --> 01:30:02,000
那个那个写脚本写一大堆脚本

2298
01:30:02,000 --> 01:30:04,000
你还得 double fork 对吧

2299
01:30:04,000 --> 01:30:08,000
防止这样因为那个存体被收割掉什么之类的事情

2300
01:30:08,000 --> 01:30:14,000
然后然后也是因为这个所以那个 djp 才写了一个 demon tool 这套工具去完成这个事

2301
01:30:14,000 --> 01:30:15,000
这个事情嘛对吧

2302
01:30:15,000 --> 01:30:17,000
但其实这个事情是完全没有必要去做的

2303
01:30:17,000 --> 01:30:21,000
因为在现代的操作系统里面基本上都有这种自带的工具

2304
01:30:21,000 --> 01:30:23,000
去帮你做这个进程的建设

2305
01:30:23,000 --> 01:30:30,000
监控和这个这个这个管理使得你根本其实不需要写一个传统的传统意义上的 demon 进程

2306
01:30:30,000 --> 01:30:33,000
就是这个守护进程就不需要驻留后台

2307
01:30:33,000 --> 01:30:35,000
你就让那个程序驻留前台就可以了

2308
01:30:35,000 --> 01:30:38,000
然后这个前台的程序会被像 systemd 呀

2309
01:30:38,000 --> 01:30:40,000
还是 upstart 啊

2310
01:30:40,000 --> 01:30:47,000
这种这种这种管理工具去管理使得他能够实现 demon 进程同样的功能

2311
01:30:47,000 --> 01:30:48,000
甚至更好的实现这个功能

2312
01:30:48,000 --> 01:30:51,000
所以应该把这个东西交出去

2313
01:30:51,000 --> 01:30:52,000
让更专业更专注的工具去做这个工作

2314
01:30:52,000 --> 01:31:00,000
而不是说所有人写一个那种 server 的时候都需要去做一个 double fork

2315
01:31:00,000 --> 01:31:02,000
就变成 demon 这种形式

2316
01:31:02,000 --> 01:31:03,000
对

2317
01:31:03,000 --> 01:31:05,000
这个我要吐槽的一个事情

2318
01:31:05,000 --> 01:31:09,000
然后 4.4 节讲了另外一个可以重用的部分就是 access control

2319
01:31:09,000 --> 01:31:10,000
就是这个访问控制

2320
01:31:10,000 --> 01:31:12,000
就在一般的这个 unix 系统里面

2321
01:31:12,000 --> 01:31:18,000
这个文件的权限群系统是一个比较简单和常用的这个访问控制的基础吧

2322
01:31:18,000 --> 01:31:20,000
当然也有很多人说

2323
01:31:20,000 --> 01:31:22,000
那个一个简单的这个用户控制

2324
01:31:22,000 --> 01:31:27,000
用户组和其他这种分类的方法并不能解决所有的问题

2325
01:31:27,000 --> 01:31:29,000
所以也后来了一个叫做 accel 嘛

2326
01:31:29,000 --> 01:31:32,000
access control list 的这种更高级的方式来做

2327
01:31:32,000 --> 01:31:35,000
但是 access control list 其实现在在 windows 里面在 unix

2328
01:31:35,000 --> 01:31:39,000
在类 unix 里面已经不比 windows 里面少了

2329
01:31:39,000 --> 01:31:41,000
对比如说 os 10 就是用的这个嘛

2330
01:31:41,000 --> 01:31:42,000
对

2331
01:31:42,000 --> 01:31:46,000
但 anyway 这个这个是具体这个实现的问题

2332
01:31:46,000 --> 01:31:50,000
就是说这个要点就是说如果系统已经有一个这个 access control 的工具了

2333
01:31:50,000 --> 01:31:51,000
不管是文件系统权限群系统还是什么东西

2334
01:31:52,000 --> 01:31:54,000
也好还是 accel 也好

2335
01:31:54,000 --> 01:31:56,000
就我们应该尽可能去重用它

2336
01:31:56,000 --> 01:32:00,000
就是因为没有编写的代码是最少的代码

2337
01:32:00,000 --> 01:32:02,000
因为如果一个代码量是零的话

2338
01:32:02,000 --> 01:32:04,000
它的 bug 量肯定是零的

2339
01:32:04,000 --> 01:32:05,000
对吧

2340
01:32:05,000 --> 01:32:07,000
所以怎么去重用它就是一个非常要紧的事情的

2341
01:32:07,000 --> 01:32:10,000
就很多人就愿意去重新发明轮子

2342
01:32:10,000 --> 01:32:14,000
要自己搞一套这个自己的用户账号或者权限系统

2343
01:32:14,000 --> 01:32:17,000
但其实是往往是适得其反的

2344
01:32:17,000 --> 01:32:18,000
没错

2345
01:32:18,000 --> 01:32:21,000
然后 4.5 的另外一个重用就是文件系统

2346
01:32:21,000 --> 01:32:24,000
就很多人说我要自己写一个自己的这个 storage layer

2347
01:32:24,000 --> 01:32:26,000
就存储层怎么怎么的

2348
01:32:26,000 --> 01:32:27,000
要做什么什么事

2349
01:32:27,000 --> 01:32:31,000
但其实现代的文件系统就可以做非常非常多的事

2350
01:32:31,000 --> 01:32:34,000
就完成一些基本的存储功能都是没有问题的

2351
01:32:34,000 --> 01:32:42,000
没有必要在这个特别早期或者这个没有那么明确性能瓶颈的时候

2352
01:32:42,000 --> 01:32:45,000
去开发自己的这个文件存储的系统

2353
01:32:45,000 --> 01:32:46,000
对吧

2354
01:32:46,000 --> 01:32:47,000
对

2355
01:32:47,000 --> 01:32:51,000
所以能够就是总体来说 4.4 的一个核心要务就是说

2356
01:32:51,000 --> 01:32:52,000
如何降低代码

2357
01:32:52,000 --> 01:32:57,000
刚才讲的那个就是重用这个的通就如果就简单说重用代码或者重用功能

2358
01:32:57,000 --> 01:33:01,000
比如说用这个函数去去写通用的功能

2359
01:33:01,000 --> 01:33:03,000
然后重用网络工具

2360
01:33:03,000 --> 01:33:05,000
重用这个防线线控制

2361
01:33:05,000 --> 01:33:07,000
重用这个文件系统

2362
01:33:07,000 --> 01:33:08,000
对吧

2363
01:33:08,000 --> 01:33:11,000
这都是一些对基本上都是在教你怎么样怎么样不要去重新发明

2364
01:33:11,000 --> 01:33:12,000
没错

2365
01:33:12,000 --> 01:33:15,000
然后第 5 节其实还是挺有意思

2366
01:33:15,000 --> 01:33:20,000
就刚才讲到我们讲的那个叫做如何去减少这个 trusted code

2367
01:33:20,000 --> 01:33:22,000
受信任代码的部分

2368
01:33:22,000 --> 01:33:25,000
这当然就是从一个架构的方法来做了

2369
01:33:25,000 --> 01:33:26,000
这里又细节比较多

2370
01:33:26,000 --> 01:33:28,000
我们就不就一一过了

2371
01:33:28,000 --> 01:33:31,000
有兴趣的朋友就可以去看一下里面的这个细节

2372
01:33:31,000 --> 01:33:34,000
因为这篇文章总体来说还是不难懂的

2373
01:33:34,000 --> 01:33:37,000
然后只要具备一些基础的这个 unix 相关的知识

2374
01:33:37,000 --> 01:33:40,000
是能够看个 8% 90%的

2375
01:33:40,000 --> 01:33:43,000
然后我相信看了这篇文章以后

2376
01:33:43,000 --> 01:33:46,000
对你以后编写程序也好

2377
01:33:46,000 --> 01:33:47,000
做这个系统架构也好

2378
01:33:47,000 --> 01:33:49,000
会有一个非常大的改观吧

2379
01:33:50,000 --> 01:33:51,000
对

2380
01:33:51,000 --> 01:33:57,000
另外我觉得也可以从软件用户的角度来讲

2381
01:33:57,000 --> 01:34:03,000
来谈一谈怎么样才能避免在重类似于 Xcode ghost 的这样一种

2382
01:34:03,000 --> 01:34:07,000
陷入这样一种窘境里面

2383
01:34:07,000 --> 01:34:11,000
我觉得最重要的一点就是远离国际软件

2384
01:34:11,000 --> 01:34:15,000
或者远离国内的互联网环境

2385
01:34:15,000 --> 01:34:18,000
你说这件事情中招的人

2386
01:34:18,000 --> 01:34:20,000
最大的一个问题不就是这个吗

2387
01:34:20,000 --> 01:34:23,000
就是贪图省事了

2388
01:34:23,000 --> 01:34:30,000
当然一方面也跟强的存在不可分离

2389
01:34:30,000 --> 01:34:32,000
就是在网速非常慢的情况下

2390
01:34:32,000 --> 01:34:34,000
你要连美国的一个服务器下载东西

2391
01:34:34,000 --> 01:34:36,000
的确是很痛苦的一件事情

2392
01:34:36,000 --> 01:34:40,000
我记得在好像不是升级 Xcode

2393
01:34:40,000 --> 01:34:43,000
而是在升级新的

2394
01:34:43,000 --> 01:34:48,000
在下载一个新的 iOS 10 升级包的时候

2395
01:34:48,000 --> 01:34:49,000
两个退伍的

2396
01:34:49,000 --> 01:34:53,000
退伍同时给出了下载升级包的截图

2397
01:34:53,000 --> 01:34:54,000
一个在国内一个在国外

2398
01:34:54,000 --> 01:34:57,000
然后在国内还有 4 个小时

2399
01:34:57,000 --> 01:35:00,000
然后在国外还有两分钟

2400
01:35:00,000 --> 01:35:03,000
其实我觉得反而是苹果的责任

2401
01:35:03,000 --> 01:35:07,000
就是说因为它毕竟是要在中国市场

2402
01:35:07,000 --> 01:35:11,000
长期存在的一间公司

2403
01:35:11,000 --> 01:35:14,000
为什么不在中国市场多做一些

2404
01:35:14,000 --> 01:35:15,000
在中国搞个 CDN 是吧

2405
01:35:15,000 --> 01:35:17,000
它是有 CDN 的

2406
01:35:17,000 --> 01:35:21,000
但是我好奇在于为什么在有 CDN 的情况下还这么慢

2407
01:35:21,000 --> 01:35:25,000
这个是我觉得是不能够接受的

2408
01:35:25,000 --> 01:35:28,000
这难道不是 CDN 的责任吗

2409
01:35:28,000 --> 01:35:30,000
这个是 CDN 的责任没错

2410
01:35:30,000 --> 01:35:32,000
但是这个 CDN 是苹果买的

2411
01:35:32,000 --> 01:35:35,000
或者他去花钱找的技能服务

2412
01:35:35,000 --> 01:35:39,000
当然你可以说中国的网络就是不如美国

2413
01:35:39,000 --> 01:35:41,000
中国网络环境的确是非常复杂的

2414
01:35:41,000 --> 01:35:45,000
你说中国的网络投放做的好的厂家

2415
01:35:45,000 --> 01:35:48,000
其实也只有那几家真正的巨头能做好的

2416
01:35:48,000 --> 01:35:50,000
但是就是找那些巨头合作吧

2417
01:35:50,000 --> 01:35:52,000
这个有什么关系呢

2418
01:35:52,000 --> 01:35:54,000
对吧我觉得是这个是苹果的责任

2419
01:35:54,000 --> 01:35:56,000
他应该把这件事情做好的

2420
01:35:56,000 --> 01:35:58,000
但是他并没有做好

2421
01:35:58,000 --> 01:36:00,000
这个我们就不去吐槽振振

2422
01:36:00,000 --> 01:36:03,000
我们毕竟是一个技术性的节目

2423
01:36:03,000 --> 01:36:05,000
其实有一件事我觉得还可以探讨一下

2424
01:36:05,000 --> 01:36:07,000
就是说刚才我们讲了一些

2425
01:36:07,000 --> 01:36:11,000
一些技术手段去解决这个问题

2426
01:36:11,000 --> 01:36:15,000
但其实有一个细节是在今年的早些时候

2427
01:36:15,000 --> 01:36:18,000
我在那个 go land 的语言组里面问过这个问题

2428
01:36:18,000 --> 01:36:20,000
就是说我问你这个事

2429
01:36:20,000 --> 01:36:24,000
就给定你同一个编译器

2430
01:36:24,000 --> 01:36:25,000
就是这个 bander 是一样的

2431
01:36:25,000 --> 01:36:30,000
然后给定你同一套这个源代码

2432
01:36:30,000 --> 01:36:37,000
你能否保证在不同的机器上去执行同样的这个编译器

2433
01:36:37,000 --> 01:36:44,000
编译同样的源代码得出来的那个结果是叫做 by to byte identical

2434
01:36:44,000 --> 01:36:46,000
每一个字节都是相同的

2435
01:36:46,000 --> 01:36:49,000
就叫我叫 deterministic build

2436
01:36:49,000 --> 01:36:51,000
就是可预测的 build

2437
01:36:51,000 --> 01:36:53,000
这跟编译器的 pulse 有关吗

2438
01:36:53,000 --> 01:36:55,000
有些编译器是不可能给出这样

2439
01:36:55,000 --> 01:36:59,000
哪怕你在同一台机器上只相差一微秒去编译

2440
01:36:59,000 --> 01:37:00,000
它也不一样

2441
01:37:00,000 --> 01:37:02,000
就它会打个 stamp 在里面

2442
01:37:02,000 --> 01:37:04,000
对这就是问题所在了

2443
01:37:04,000 --> 01:37:06,000
就是说因为首先说我先说一下

2444
01:37:06,000 --> 01:37:09,000
为什么我觉得这是一个 deterministic build

2445
01:37:09,000 --> 01:37:12,000
是一个非常好的特性

2446
01:37:12,000 --> 01:37:14,000
因为我们可以很负责

2447
01:37:14,000 --> 01:37:16,000
就是 reproducible

2448
01:37:16,000 --> 01:37:18,000
就是我可以重现这件事情

2449
01:37:18,000 --> 01:37:20,000
因为我说

2450
01:37:20,000 --> 01:37:22,000
如果我的同一套源代码

2451
01:37:22,000 --> 01:37:25,000
因为源代码本身可以用 git

2452
01:37:25,000 --> 01:37:28,000
刚才我讲的 hash 的方式去验证它的等同性

2453
01:37:28,000 --> 01:37:29,000
对吧

2454
01:37:29,000 --> 01:37:31,000
但是我并不知道

2455
01:37:31,000 --> 01:37:33,000
如果我每次同一套源代码

2456
01:37:33,000 --> 01:37:36,000
同一个编译器编出来的结果都是不可

2457
01:37:36,000 --> 01:37:37,000
都是不可

2458
01:37:37,000 --> 01:37:38,000
都不一样的话

2459
01:37:38,000 --> 01:37:44,000
我是没有办法建立源代码和编译出来结果之间的一个因应式的关系的

2460
01:37:44,000 --> 01:37:50,000
因为它有很多其他编量是不在函数的描述中的

2461
01:37:50,000 --> 01:37:51,000
对吧

2462
01:37:51,000 --> 01:37:59,000
所以说后来我就去做了一个很不全面很不靠谱的小调查

2463
01:37:59,000 --> 01:38:03,000
其实大部分的编译语言或者工具都不能做到这一点

2464
01:38:03,000 --> 01:38:04,000
但原意看来假吗

2465
01:38:04,000 --> 01:38:05,000
对

2466
01:38:05,000 --> 01:38:07,000
你要实现你的说

2467
01:38:07,000 --> 01:38:11,000
的 deterministic compiling 的功能的话

2468
01:38:11,000 --> 01:38:21,000
你需要任何一个 compiler 设计者都需要在设计的初期把它当做一个 fundamental 的 goal

2469
01:38:21,000 --> 01:38:24,000
就是一个编译器的设计目标来做

2470
01:38:24,000 --> 01:38:28,000
才可以在最终的编译器的结果上实现

2471
01:38:28,000 --> 01:38:34,000
因为我觉得实现这个目的有一个很明确的要求

2472
01:38:34,000 --> 01:38:37,000
就是要明确的区分哪些是可变的

2473
01:38:37,000 --> 01:38:41,000
哪些是可变的编译条件

2474
01:38:41,000 --> 01:38:44,000
另外一些是哪些是不可变的编译条件

2475
01:38:44,000 --> 01:38:47,000
就是它在编译的时候它必须确定说比如说

2476
01:38:47,000 --> 01:38:51,000
比如说我给出一个优化的 flag

2477
01:38:51,000 --> 01:38:54,000
O 1 还是 O 0 还是 O 3

2478
01:38:54,000 --> 01:38:57,000
给出 O 0 的时候

2479
01:38:57,000 --> 01:39:05,000
所包含的会被编译的部分和 O 3 会被编译的部分其实是不一样的对吧

2480
01:39:05,000 --> 01:39:06,000
这个问题我能够理解

2481
01:39:06,000 --> 01:39:07,000
但是

2482
01:39:07,000 --> 01:39:09,000
我觉得这个就是可能要加一个限制条件

2483
01:39:09,000 --> 01:39:13,000
就是说编译的参数和编译的环境得是相同的

2484
01:39:13,000 --> 01:39:15,000
对吧

2485
01:39:15,000 --> 01:39:19,000
如果我们把编译的过程想象成一个数学的函数

2486
01:39:19,000 --> 01:39:21,000
叫做 F 的话

2487
01:39:21,000 --> 01:39:23,000
它的输入应该包含哪些部分

2488
01:39:23,000 --> 01:39:24,000
我们可以想一下

2489
01:39:24,000 --> 01:39:25,000
包括源代码

2490
01:39:25,000 --> 01:39:28,000
但是最大的问题就是这个函数里面

2491
01:39:28,000 --> 01:39:33,000
所要给出给入的这个变量实在是太多了

2492
01:39:33,000 --> 01:39:35,000
然后你必须在设计函数的时候

2493
01:39:35,000 --> 01:39:36,000
就明确的知道

2494
01:39:36,000 --> 01:39:43,000
哪些变量是可以被包在一个额外的信息里面

2495
01:39:43,000 --> 01:39:49,000
作为整个最终所要递交的 binary 的原信息给出去的

2496
01:39:49,000 --> 01:39:50,000
比如说编译时间

2497
01:39:50,000 --> 01:39:53,000
编译时间你可以不包含在最终的 binary 里面

2498
01:39:53,000 --> 01:39:59,000
你只把它放在一个 binary 的附加包里面给用户

2499
01:40:02,000 --> 01:40:03,000
对了

2500
01:40:03,000 --> 01:40:05,000
就要求你一定要明确的区分

2501
01:40:05,000 --> 01:40:06,000
哪些是可变的

2502
01:40:06,000 --> 01:40:07,000
哪些是不可变的

2503
01:40:07,000 --> 01:40:10,000
对所以我就想说这件事情

2504
01:40:10,000 --> 01:40:12,000
我觉得在技术上应该是可以做到的

2505
01:40:12,000 --> 01:40:13,000
如果我们不做

2506
01:40:13,000 --> 01:40:19,000
哪怕是我们对源代码做一些比较疯狂的 transform

2507
01:40:19,000 --> 01:40:21,000
就是变形应该也是可以做到

2508
01:40:21,000 --> 01:40:23,000
因为只要就我说

2509
01:40:23,000 --> 01:40:28,000
如果我们把编译过程想成一个定义为一个函数的话

2510
01:40:28,000 --> 01:40:30,000
它的那个输入一个函数的输入应该是什么

2511
01:40:30,000 --> 01:40:31,000
应该是这个源代码

2512
01:40:31,000 --> 01:40:34,000
它是一个就是文本的形态

2513
01:40:34,000 --> 01:40:37,000
我们可以直接通过算哈希的方法

2514
01:40:37,000 --> 01:40:38,000
算出它的一个

2515
01:40:38,000 --> 01:40:41,000
可以比较它的一个就不变性

2516
01:40:41,000 --> 01:40:44,000
然后是说各种编译的参数

2517
01:40:44,000 --> 01:40:47,000
我们可以按一个方法给出编译参数应该是相同的

2518
01:40:47,000 --> 01:40:48,000
然后编译环境的

2519
01:40:48,000 --> 01:40:51,000
然后环境其实在某种程度上

2520
01:40:51,000 --> 01:40:52,000
就扯的比较远

2521
01:40:52,000 --> 01:40:54,000
因为可能会牵涉到整个操作系统

2522
01:40:54,000 --> 01:40:57,000
是不是应该一个是可以叫做 immutable 的系统

2523
01:40:57,000 --> 01:40:58,000
对吧

2524
01:40:58,000 --> 01:41:01,000
理论上如果我们不考虑时间的因素的话

2525
01:41:01,000 --> 01:41:04,000
是有办法把编译过程做成一个函数的

2526
01:41:04,000 --> 01:41:05,000
是一个所谓一个

2527
01:41:05,000 --> 01:41:07,000
这个是一个数学意义上的函数

2528
01:41:07,000 --> 01:41:09,000
就是它的给定一个输入

2529
01:41:09,000 --> 01:41:11,000
它的输出是恒定的

2530
01:41:11,000 --> 01:41:13,000
输出是恒定就是 fx 一定等于 1

2531
01:41:13,000 --> 01:41:15,000
它是一个函数编程意义上的函数

2532
01:41:15,000 --> 01:41:16,000
对对对

2533
01:41:16,000 --> 01:41:19,000
它不是一个我们 programming 的函数

2534
01:41:19,000 --> 01:41:22,000
而是一个 mathematical function

2535
01:41:22,000 --> 01:41:23,000
对吧

2536
01:41:23,000 --> 01:41:28,000
然后我的这个问题在那个 go land 的那个 groups 里面

2537
01:41:28,000 --> 01:41:30,000
就还挺多人在下面回复的

2538
01:41:30,000 --> 01:41:34,000
然后后来是说有一个这个就是 go 的

2539
01:41:34,000 --> 01:41:36,000
就 go 语言的开发者

2540
01:41:36,000 --> 01:41:38,000
他说他其实在尝试做这件事

2541
01:41:38,000 --> 01:41:41,000
但是我不知道后来怎么样了

2542
01:41:41,000 --> 01:41:43,000
但他的说法不是用的

2543
01:41:43,000 --> 01:41:45,000
我那个描述叫 deterministic build

2544
01:41:45,000 --> 01:41:48,000
而是说叫做 repeatable build

2545
01:41:48,000 --> 01:41:50,000
所以这件事情还是蛮期待的

2546
01:41:50,000 --> 01:41:54,000
不知道他们会在 1 点几还是 2 点几里面

2547
01:41:54,000 --> 01:41:55,000
把这件事情变成现实

2548
01:41:55,000 --> 01:41:57,000
好吧

2549
01:41:57,000 --> 01:41:59,000
这是一个其实来

2550
01:41:59,000 --> 01:42:02,000
我觉得是一个相对来说比较小众的需求

2551
01:42:02,000 --> 01:42:03,000
或者说它是一个

2552
01:42:03,000 --> 01:42:05,000
很明确的需求

2553
01:42:05,000 --> 01:42:11,000
但是相对于编译器所要完成的许多其他需求来说

2554
01:42:11,000 --> 01:42:15,000
没有那么高优先级的一个需求

2555
01:42:15,000 --> 01:42:17,000
但如果你是说

2556
01:42:17,000 --> 01:42:19,000
你对这个安全有追求能力

2557
01:42:19,000 --> 01:42:22,000
你从安全交你从安全专家的角度来讲

2558
01:42:22,000 --> 01:42:24,000
这个需求毫无疑问是非常重要的

2559
01:42:24,000 --> 01:42:25,000
对

2560
01:42:25,000 --> 01:42:26,000
可是

2561
01:42:26,000 --> 01:42:28,000
如果你

2562
01:42:28,000 --> 01:42:31,000
市场不是那么市场不是这么决策的

2563
01:42:31,000 --> 01:42:32,000
对

2564
01:42:32,000 --> 01:42:34,000
比如说你是一个写 shader 的人

2565
01:42:34,000 --> 01:42:36,000
或者是你是一个写 whatever ui 的人

2566
01:42:36,000 --> 01:42:39,000
你可能会觉得这些事情没有那么重要

2567
01:42:39,000 --> 01:42:40,000
嗯

2568
01:42:40,000 --> 01:42:44,000
速度或者是优化程度才是

2569
01:42:44,000 --> 01:42:48,000
乃至于什么前端后端的清晰分离

2570
01:42:48,000 --> 01:42:51,000
静态分析才是编译器最重要的部分

2571
01:42:51,000 --> 01:42:52,000
对

2572
01:42:52,000 --> 01:42:53,000
不 anyway

2573
01:42:53,000 --> 01:42:55,000
我们这里还是要提一篇

2574
01:42:55,000 --> 01:42:57,000
跟刚才那个没关系

2575
01:42:57,000 --> 01:42:59,000
跟提一个神级一样的论文

2576
01:42:59,000 --> 01:43:01,000
这个是 King Thomason 在

2577
01:43:01,000 --> 01:43:06,000
在 1984 年发表的一篇简短的一个 talk

2578
01:43:06,000 --> 01:43:08,000
他他 1984 年得了图灵奖

2579
01:43:08,000 --> 01:43:12,000
然后他在图灵奖的颁奖礼上说了这些

2580
01:43:12,000 --> 01:43:15,000
对这是一段一个小的 paper

2581
01:43:15,000 --> 01:43:17,000
只有很少三页纸

2582
01:43:17,000 --> 01:43:18,000
非常简单

2583
01:43:18,000 --> 01:43:20,000
他讲了这么一个事儿

2584
01:43:20,000 --> 01:43:22,000
因为 King Thomason 这个人可能还是要

2585
01:43:22,000 --> 01:43:23,000
如果大家名字

2586
01:43:23,000 --> 01:43:25,000
如果这个名字你都没听过的话

2587
01:43:25,000 --> 01:43:26,000
你如果你是程序员的话

2588
01:43:26,000 --> 01:43:28,000
应该去面壁思考了

2589
01:43:28,000 --> 01:43:29,000
哈哈哈

2590
01:43:29,000 --> 01:43:30,000
如果你是 Windows 程序员的话

2591
01:43:30,000 --> 01:43:31,000
挺有可能

2592
01:43:31,000 --> 01:43:32,000
哈哈哈

2593
01:43:32,000 --> 01:43:33,000
哪怕是 Windows 程序员

2594
01:43:33,000 --> 01:43:34,000
我觉得都不是

2595
01:43:34,000 --> 01:43:36,000
因为这是 C 的 B 组吧

2596
01:43:36,000 --> 01:43:38,000
啊

2597
01:43:38,000 --> 01:43:39,000
对好吧

2598
01:43:39,000 --> 01:43:43,000
那 King Thomason 是 Unix 的作者之一

2599
01:43:43,000 --> 01:43:45,000
当年在贝尔实验室的时候

2600
01:43:45,000 --> 01:43:49,000
然后他当然也是 C 的这个作者

2601
01:43:49,000 --> 01:43:56,000
然后到现在他在 Google 是 Go 语言的作者之一

2602
01:43:56,000 --> 01:43:57,000
嗯

2603
01:43:57,000 --> 01:43:58,000
对有这么多官方

2604
01:43:58,000 --> 01:43:59,000
我觉得已经够够那个了

2605
01:43:59,000 --> 01:44:00,000
就不说了

2606
01:44:00,000 --> 01:44:01,000
不用再说别的了

2607
01:44:01,000 --> 01:44:02,000
嗯

2608
01:44:02,000 --> 01:44:07,000
他写这一篇其实实在这个片比刚才一篇轮就就更加技术性了

2609
01:44:07,000 --> 01:44:11,000
因为有没有几个比较 tricky 的一些概念

2610
01:44:11,000 --> 01:44:13,000
其实我到现在我还不是不是特别理解

2611
01:44:13,000 --> 01:44:15,000
那我到你来解释一下

2612
01:44:15,000 --> 01:44:17,000
就是啊

2613
01:44:17,000 --> 01:44:21,000
Xcode Ghost 的这件事情其实并不是什么特别新鲜的事情

2614
01:44:21,000 --> 01:44:27,000
就比如说往回朔有 1 在啊 2012 年的时候有一个

2615
01:44:27,000 --> 01:44:30,000
有一件事件就是 putty 的中文版

2616
01:44:30,000 --> 01:44:32,000
你看又是中文版

2617
01:44:32,000 --> 01:44:34,000
在被人植入了后门

2618
01:44:34,000 --> 01:44:37,000
就是你在使用这个中文版的 putty 的时候

2619
01:44:37,000 --> 01:44:44,000
呃你的 SSH 的呃公钥和私钥都会被上传到一个服务器上

2620
01:44:44,000 --> 01:44:49,000
然后呃你要连接的机器也会被上传到这个服务器上

2621
01:44:49,000 --> 01:44:52,000
所以就是如果你使用了这个被感染的版本的 putty

2622
01:44:52,000 --> 01:44:59,000
那也就等于把你自己的那个服务器的呃钥匙拱手送给了那个感染者

2623
01:44:59,000 --> 01:45:05,000
然后更古早的就是我们之前提到那个 Delphi 7 的 virus

2624
01:45:05,000 --> 01:45:10,000
然后而这一切其实在早在八十年代

2625
01:45:10,000 --> 01:45:16,000
在八四年在那个 ken thompson 的论文里面就已经呃提到这件事情

2626
01:45:16,000 --> 01:45:22,000
就是他那一年他去呃接受 A 3 M 的图灵奖

2627
01:45:22,000 --> 01:45:28,000
然后他在图灵奖上就讲了自己在这个当时的 Ccompiler

2628
01:45:28,000 --> 01:45:29,000
就是这个 Ccompiler

2629
01:45:29,000 --> 01:45:34,000
就是这个复苏的那个 unix 的 CCcompiler 里面植入后门的这件事情

2630
01:45:34,000 --> 01:45:35,000
嗯

2631
01:45:35,000 --> 01:45:37,000
所以这实际上是一件非常古老的事情

2632
01:45:37,000 --> 01:45:39,000
然后

2633
01:45:39,000 --> 01:45:40,000
嗯

2634
01:45:40,000 --> 01:45:44,000
有兴趣的同学可以去看一看这个 ken thompson 的这篇论文

2635
01:45:44,000 --> 01:45:45,000
非常短

2636
01:45:45,000 --> 01:45:46,000
只有三页

2637
01:45:46,000 --> 01:45:47,000
但是对

2638
01:45:47,000 --> 01:45:48,000
因为他毕竟他只是一个讲话嘛

2639
01:45:48,000 --> 01:45:49,000
对

2640
01:45:49,000 --> 01:45:51,000
他只是从这个讲话上来的

2641
01:45:51,000 --> 01:45:52,000
嗯

2642
01:45:52,000 --> 01:45:55,000
其实那篇论文的最后结尾那一段其实还挺有意思的

2643
01:45:55,000 --> 01:45:58,000
就是他在八十年代对这个安全和这个法律啊

2644
01:45:58,000 --> 01:46:00,000
还有这个责任的鉴定

2645
01:46:00,000 --> 01:46:04,000
其实跟我们现在的一些想法还都比较超前嘛

2646
01:46:04,000 --> 01:46:05,000
至少说

2647
01:46:05,000 --> 01:46:06,000
嗯

2648
01:46:06,000 --> 01:46:07,000
嗯

2649
01:46:07,000 --> 01:46:10,000
那这个具体的就不再去描述了

2650
01:46:10,000 --> 01:46:12,000
大家可以自己有兴趣看这篇文章

2651
01:46:12,000 --> 01:46:13,000
对

2652
01:46:13,000 --> 01:46:16,000
而且很有趣的是他在那个文章里面还提到说

2653
01:46:16,000 --> 01:46:19,000
其实这也不是他原创的这种啊

2654
01:46:19,000 --> 01:46:22,000
这这样一种这样一种手段

2655
01:46:22,000 --> 01:46:26,000
他最开始读到这一页这种可能性的攻击的

2656
01:46:26,000 --> 01:46:27,000
是在一个空中的一个时候呢

2657
01:46:27,000 --> 01:46:31,000
在一个空军的杂志上面

2658
01:46:31,000 --> 01:46:38,000
就是一个 unknown 的未知的空军的文档上面

2659
01:46:38,000 --> 01:46:42,000
他读到了这样一种攻击的可能性

2660
01:46:42,000 --> 01:46:46,000
所以可能整个来整个事情的想法

2661
01:46:46,000 --> 01:46:48,000
还要比我们所知道的追溯的更早

2662
01:46:48,000 --> 01:46:49,000
嗯

2663
01:46:49,000 --> 01:46:53,000
但直到今天这样一种这样一种怎么说呢

2664
01:46:53,000 --> 01:46:56,000
安全漏洞还是在背叛着我们

2665
01:46:56,000 --> 01:46:58,000
所以他他那句话他那个文章的标

2666
01:46:58,000 --> 01:47:02,000
这个那个标题叫做 reflection on trusting trust

2667
01:47:02,000 --> 01:47:06,000
就是其实可以对应到刚才我们节目开始的时候

2668
01:47:06,000 --> 01:47:07,000
就关于这个谈讨论开始的时候

2669
01:47:07,000 --> 01:47:08,000
你提到那个问题

2670
01:47:08,000 --> 01:47:11,000
你如何真的信赖你的这个工具呢

2671
01:47:11,000 --> 01:47:16,000
他那边最后结尾的那一段的那个章节的第一段话

2672
01:47:16,000 --> 01:47:18,000
是这么说的哈

2673
01:47:18,000 --> 01:47:20,000
叫做

2674
01:47:20,000 --> 01:47:21,000
啊

2675
01:47:21,000 --> 01:47:25,000
you can't trust code that you did not totally create yourself

2676
01:47:25,000 --> 01:47:26,000
对

2677
01:47:26,000 --> 01:47:27,000
就这其实 rms 嘛

2678
01:47:27,000 --> 01:47:28,000
这就是对

2679
01:47:28,000 --> 01:47:29,000
就是 rms 是一样

2680
01:47:29,000 --> 01:47:32,000
所以也比较巧了

2681
01:47:32,000 --> 01:47:37,000
那他还提到有一个就是我们到其实到我到现在认为就是说这没有就刚刚你说嘛

2682
01:47:37,000 --> 01:47:39,000
如果你真的偏激一点的话

2683
01:47:39,000 --> 01:47:40,000
真的是没有真正的安全的

2684
01:47:40,000 --> 01:47:44,000
因为叫做比如说这个 well installed micro code bug

2685
01:47:44,000 --> 01:47:46,000
will be almost impossible to detect

2686
01:47:46,000 --> 01:47:51,000
就是一个安装的非常精巧的这种就是微代码

2687
01:47:51,000 --> 01:47:55,000
微代码就是像这个呃什么的硬件里面驱动我一个呃小

2688
01:47:55,000 --> 01:47:57,000
小硬件的这个曲程

2689
01:47:57,000 --> 01:48:01,000
或者是一个驱动的那种 bug 基本上不可能被发现的

2690
01:48:01,000 --> 01:48:03,000
因为实在是太难太低层了

2691
01:48:03,000 --> 01:48:04,000
就越低

2692
01:48:04,000 --> 01:48:06,000
越底层的 bug 越难发现

2693
01:48:06,000 --> 01:48:08,000
如果你更进一路更进一步的话

2694
01:48:08,000 --> 01:48:12,000
那在硬件层面上植入的病毒或者是后门

2695
01:48:12,000 --> 01:48:16,000
那在什么不可能在 ic 电路板级别的 bug 是吧

2696
01:48:16,000 --> 01:48:17,000
对啊

2697
01:48:17,000 --> 01:48:18,000
这个据说是有的

2698
01:48:18,000 --> 01:48:19,000
听说那个

2699
01:48:19,000 --> 01:48:22,000
但是小刀小洗没有也没有经过确认

2700
01:48:22,000 --> 01:48:24,000
英特尔的芯片里面

2701
01:48:24,000 --> 01:48:26,000
据说是只有这个 nsc 的后门的

2702
01:48:26,000 --> 01:48:29,000
但是我不知道到底怎么如何实现这一点

2703
01:48:29,000 --> 01:48:30,000
对吗

2704
01:48:30,000 --> 01:48:35,000
所以其实有时候我们嘲笑一些就是龙芯

2705
01:48:35,000 --> 01:48:39,000
或者是国产 cpu 计算机国产化的知识专门

2706
01:48:39,000 --> 01:48:41,000
会说这简直是

2707
01:48:41,000 --> 01:48:43,000
有道理

2708
01:48:43,000 --> 01:48:44,000
哈哈

2709
01:48:44,000 --> 01:48:47,000
对为什么说这么强调自主知识产权

2710
01:48:47,000 --> 01:48:50,000
其实也说的本账就是这么一件事吧

2711
01:48:50,000 --> 01:48:52,000
就是说他说 you can't trust software

2712
01:48:52,000 --> 01:48:54,000
you didn't write your software

2713
01:48:54,000 --> 01:48:56,000
那你也不可能说你

2714
01:48:56,000 --> 01:48:59,000
如果你不能信任不是你自己写的软件

2715
01:48:59,000 --> 01:49:02,000
当然更不可能信任不是你自己造的硬件了

2716
01:49:02,000 --> 01:49:03,000
对吧

2717
01:49:03,000 --> 01:49:04,000
没错

2718
01:49:04,000 --> 01:49:06,000
所以从这个这一点上来说

2719
01:49:06,000 --> 01:49:07,000
这个

2720
01:49:07,000 --> 01:49:09,000
计算机国产化是有其意义的

2721
01:49:09,000 --> 01:49:11,000
或者说按照那个

2722
01:49:11,000 --> 01:49:12,000
那个话来说

2723
01:49:12,000 --> 01:49:14,000
如果你对你的软件

2724
01:49:15,000 --> 01:49:17,000
安全足够介意的话

2725
01:49:17,000 --> 01:49:19,000
你一定要从硬件造起

2726
01:49:19,000 --> 01:49:20,000
对

2727
01:49:20,000 --> 01:49:23,000
而如果你要足够在意你的国家安全的话

2728
01:49:23,000 --> 01:49:24,000
那你必须要做

2729
01:49:24,000 --> 01:49:26,000
你必须要注意你的信息安全

2730
01:49:26,000 --> 01:49:27,000
哈哈

2731
01:49:27,000 --> 01:49:28,000
好吧

2732
01:49:28,000 --> 01:49:31,000
那个今天的节目就到此为止了

2733
01:49:31,000 --> 01:49:33,000
感谢收听 IPN Podcast

2734
01:49:33,000 --> 01:49:37,000
王猫旗下的 IT 技术主题娱乐节目内核恐慌

2735
01:49:37,000 --> 01:49:39,000
我们号称 hardcore

2736
01:49:39,000 --> 01:49:40,000
但是也没有干货

2737
01:49:40,000 --> 01:49:41,000
想听的人听

2738
01:49:41,000 --> 01:49:43,000
不想听的人就别听

2739
01:49:43,000 --> 01:49:45,000
你可以为本节目捐款

2740
01:49:45,000 --> 01:49:48,000
捐款的地址是 ipn.li

2741
01:49:48,000 --> 01:49:50,000
slashkernelpanic

2742
01:49:50,000 --> 01:49:51,000
slashdonate

2743
01:49:51,000 --> 01:49:53,000
捐款金额随意

2744
01:49:53,000 --> 01:49:56,000
是本本的 8 整除的正整数就可以

2745
01:49:56,000 --> 01:49:58,000
捐款不会给你带来什么

2746
01:49:58,000 --> 01:50:00,000
不捐也不会让你失去什么

2747
01:50:00,000 --> 01:50:03,000
我们的口号是 no hard feelings

2748
01:50:03,000 --> 01:50:05,000
本期口号不是这个

2749
01:50:05,000 --> 01:50:08,000
对本期口号是 trust no one

2750
01:50:08,000 --> 01:50:10,000
even your compiler

2751
01:50:10,000 --> 01:50:12,000
and your computer

2752
01:50:12,000 --> 01:50:15,000
and your civil chip

2753
01:50:15,000 --> 01:50:17,000
and your government

2754
01:50:17,000 --> 01:50:19,000
and yourself

2755
01:50:19,000 --> 01:50:20,000
and yourself

2756
01:50:20,000 --> 01:50:22,000
如果你有任何反馈

2757
01:50:22,000 --> 01:50:27,000
可以发电子邮件到 kernelpanicatipn.li

2758
01:50:27,000 --> 01:50:31,000
同时也欢迎您收听 IPN 旗下其他其他几档节目

2759
01:50:31,000 --> 01:50:32,000
IT 公论

2760
01:50:32,000 --> 01:50:33,000
未知到

2761
01:50:33,000 --> 01:50:34,000
太一来了

2762
01:50:34,000 --> 01:50:35,000
流行通讯

2763
01:50:35,000 --> 01:50:36,000
high story

2764
01:50:36,000 --> 01:50:38,000
博物主题节目博物志

2765
01:50:38,000 --> 01:50:40,000
美国大选主题节目

2766
01:50:40,000 --> 01:50:42,000
这件事情看的叫做选美

2767
01:50:42,000 --> 01:50:44,000
我们下期节目再会

2768
01:50:44,000 --> 01:50:47,000
对我们下期节目一定会来的

2769
01:50:47,000 --> 01:50:48,000
虽然这一次停了两周

2770
01:50:48,000 --> 01:50:51,000
然后让很多听众朋友们也觉得非常的

2771
01:50:51,000 --> 01:50:53,000
用一个什么形容词难过

2772
01:50:53,000 --> 01:50:56,000
或者是觉得翘首以盼

2773
01:50:56,000 --> 01:50:58,000
翘首以待

2774
01:50:58,000 --> 01:51:00,000
对其实这期节目差点都没录成

2775
01:51:00,000 --> 01:51:02,000
兄弟们各位听众

2776
01:51:02,000 --> 01:51:05,000
我本来今天是要去慕尼黑的

2777
01:51:05,000 --> 01:51:07,000
然后我女朋友说

2778
01:51:07,000 --> 01:51:08,000
如果不录节目的话

2779
01:51:08,000 --> 01:51:09,000
就不让我出门

2780
01:51:09,000 --> 01:51:12,000
所以我只好在这里录了这些节目

2781
01:51:12,000 --> 01:51:15,000
感谢吴涛女朋友大无畏的牺牲

2782
01:51:15,000 --> 01:51:17,000
让本次节目死灰复燃

2783
01:51:17,000 --> 01:51:18,000
我们下期再见

2784
01:51:18,000 --> 01:51:19,000
拜拜

2785
01:51:21,000 --> 01:51:23,000
对如果没有她的话

2786
01:51:23,000 --> 01:51:25,000
各位可能还要再等

2787
01:51:25,000 --> 01:51:26,000
两周

2788
01:51:26,000 --> 01:51:27,000
对

2789
01:51:27,000 --> 01:51:29,000
好吧

2790
01:51:29,000 --> 01:51:32,000
我们虽然这一期也没有那么精彩

2791
01:51:32,000 --> 01:51:37,000
但我们还是会继续录下去

2792
01:51:37,000 --> 01:51:39,000
其实这期我们发现一个挺好的

2793
01:51:39,000 --> 01:51:41,000
把节目做下去的方法

2794
01:51:41,000 --> 01:51:42,000
什么方法

2795
01:51:42,000 --> 01:51:45,000
每期找一篇论文来讲

2796
01:51:45,000 --> 01:51:46,000
哦

2797
01:51:46,000 --> 01:51:47,000
倒也是可以

2798
01:51:47,000 --> 01:51:50,000
反正不是有什么什么计算机程序员

2799
01:51:50,000 --> 01:51:53,000
必读的 20 篇论文之类的文章

2800
01:51:53,000 --> 01:51:55,000
我们可以去下载

2801
01:51:55,000 --> 01:51:58,000
这样确实要讲那么深度吗

2802
01:51:58,000 --> 01:52:01,000
还是可以的吧

2803
01:52:01,000 --> 01:52:04,000
就基本上如果听完我们这 20 期节目的话

2804
01:52:04,000 --> 01:52:07,000
就可以完成一个叫什么

2805
01:52:07,000 --> 01:52:10,000
韩寿课程

2806
01:52:10,000 --> 01:52:11,000
对

2807
01:52:11,000 --> 01:52:17,000
其实我最近刚刚开始了一门开源的课程

2808
01:52:17,000 --> 01:52:20,000
而且是每写完一个课程之后

2809
01:52:20,000 --> 01:52:22,000
每个课程就要拍一张照片

2810
01:52:22,000 --> 01:52:24,000
然后要

2811
01:52:24,000 --> 01:52:25,000
呃

2812
01:52:25,000 --> 01:52:28,000
敲一段字来证明是你刚刚做这个课程

2813
01:52:28,000 --> 01:52:30,000
是什么方向

2814
01:52:30,000 --> 01:52:31,000
呃

2815
01:52:31,000 --> 01:52:33,000
data science

2816
01:52:33,000 --> 01:52:34,000
哎

2817
01:52:34,000 --> 01:52:35,000
这个是哪一块

2818
01:52:35,000 --> 01:52:36,000
呃

2819
01:52:36,000 --> 01:52:37,000
具体叫做什么

2820
01:52:37,000 --> 01:52:39,000
是考赛尔出的

2821
01:52:39,000 --> 01:52:40,000
叫

2822
01:52:40,000 --> 01:52:41,000
呃

2823
01:52:41,000 --> 01:52:46,000
data analyze and statistical inference

2824
01:52:46,000 --> 01:52:48,000
就讲数据分析

2825
01:52:48,000 --> 01:52:50,000
所以你是重修统计学了

2826
01:52:50,000 --> 01:52:51,000
呃

2827
01:52:51,000 --> 01:52:52,000
有一点吧

2828
01:52:52,000 --> 01:52:53,000
就我对他感兴趣

2829
01:52:53,000 --> 01:52:55,000
主要是因为他特会讲那个 r

2830
01:52:55,000 --> 01:52:58,000
然后我们公司的产品里面也会

2831
01:52:58,000 --> 01:53:00,000
就也支持了 r

2832
01:53:00,000 --> 01:53:02,000
所以我想反正可能将来用得上

2833
01:53:02,000 --> 01:53:04,000
就不如学一学

2834
01:53:04,000 --> 01:53:05,000
而且这个最后是有证书的

2835
01:53:05,000 --> 01:53:06,000
如果你

2836
01:53:06,000 --> 01:53:07,000
就是学完这个

2837
01:53:07,000 --> 01:53:09,000
你就可以给自己标贴个标签

2838
01:53:09,000 --> 01:53:11,000
叫做 I'm a data scientist

2839
01:53:11,000 --> 01:53:14,000
那这还是离太远了

2840
01:53:14,000 --> 01:53:16,000
要真正成为 data scientist 的话

2841
01:53:16,000 --> 01:53:19,000
可能要上另外几门比较深的课

2842
01:53:19,000 --> 01:53:21,000
这这这非常浅显的感觉

2843
01:53:21,000 --> 01:53:22,000
他会讲些什么内容呢

2844
01:53:22,000 --> 01:53:24,000
大概就提纲是什么

2845
01:53:24,000 --> 01:53:25,000
objective

2846
01:53:25,000 --> 01:53:26,000
是

2847
01:53:26,000 --> 01:53:29,000
以上来是讲

2848
01:53:29,000 --> 01:53:30,000
呃

2849
01:53:30,000 --> 01:53:32,000
intro statistics

2850
01:53:32,000 --> 01:53:35,000
然后后面会讲什么

2851
01:53:35,000 --> 01:53:37,000
scatter plot

2852
01:53:37,000 --> 01:53:41,000
然后后面会讲什么 experimental design

2853
01:53:41,000 --> 01:53:45,000
就是如果你要设计一个 experiment 来

2854
01:53:45,000 --> 01:53:47,000
来验证一些同学的观点的话

2855
01:53:47,000 --> 01:53:48,000
会需要

2856
01:53:48,000 --> 01:53:50,000
会需要注意什么

2857
01:53:50,000 --> 01:53:52,000
然后会有什么

2858
01:53:52,000 --> 01:53:55,000
就是使用 R 里面的

2859
01:53:55,000 --> 01:53:57,000
各种各样的 plot 功能

2860
01:53:57,000 --> 01:53:59,000
来建立图表

2861
01:53:59,000 --> 01:54:02,000
来建立 bar plot

2862
01:54:02,000 --> 01:54:03,000
然后告诉你各种 plot

2863
01:54:03,000 --> 01:54:04,000
有什么样的方法

2864
01:54:04,000 --> 01:54:07,000
其实比较 intro 的一门课

2865
01:54:07,000 --> 01:54:09,000
不错

2866
01:54:09,000 --> 01:54:12,000
其实我想起上次是谁说的

2867
01:54:12,000 --> 01:54:15,000
说我们高中大学数学

2868
01:54:15,000 --> 01:54:17,000
学那么多什么微积分

2869
01:54:17,000 --> 01:54:19,000
其实并没有什么鸟用

2870
01:54:19,000 --> 01:54:20,000
对日常生活

2871
01:54:20,000 --> 01:54:23,000
反而是应该把函数

2872
01:54:23,000 --> 01:54:24,000
统计学

2873
01:54:24,000 --> 01:54:25,000
数理统计

2874
01:54:25,000 --> 01:54:27,000
数理统计教得比较深刻

2875
01:54:27,000 --> 01:54:28,000
反而对日常生活

2876
01:54:28,000 --> 01:54:28,000
木瑶说的吧

2877
01:54:28,000 --> 01:54:30,000
应该是吧

2878
01:54:30,000 --> 01:54:31,000
应该是木瑶说的

2879
01:54:31,000 --> 01:54:31,000
对

2880
01:54:31,000 --> 01:54:34,000
我在此深刻表示认同

2881
01:54:34,000 --> 01:54:36,000
好吧

2882
01:54:36,000 --> 01:54:39,000
所以这门课刚刚开了两个礼拜

2883
01:54:39,000 --> 01:54:40,000
如果你们有兴趣的话

2884
01:54:40,000 --> 01:54:42,000
也还是可以跟进来

2885
01:54:42,000 --> 01:54:44,000
然后还挺有意思的

2886
01:54:44,000 --> 01:54:46,000
跟吴涛一起学习进步

2887
01:54:46,000 --> 01:54:51,000
OK

2888
01:54:51,000 --> 01:54:52,000
那就到这了

2889
01:54:52,000 --> 01:54:54,000
我们两周之后再见

