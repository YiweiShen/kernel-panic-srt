1
00:00:00,000 --> 00:00:05,000
欢迎收听 IPN Podcast 的网络器下的 IT 技术主题娱乐节目内核恐慌

2
00:00:05,000 --> 00:00:07,000
我们号称 hardcore 但是也没有干货

3
00:00:07,000 --> 00:00:09,000
想听人听不想听人就别听

4
00:00:09,000 --> 00:00:13,000
本节目的网址是 kernelpanic.fm

5
00:00:13,000 --> 00:00:16,000
我们推荐大家使用 podcast 客户端订阅节目

6
00:00:16,000 --> 00:00:18,000
详情请访问 ipn.fi

7
00:00:18,000 --> 00:00:22,000
欢迎你为本节目捐款

8
00:00:22,000 --> 00:00:25,000
捐款地址是 kernelpanic.fm

9
00:00:25,000 --> 00:00:28,000
捐款金额随意

10
00:00:28,000 --> 00:00:30,000
只要是 8 的正整数倍就可以

11
00:00:30,000 --> 00:00:31,000
捐款不会为你带来什么

12
00:00:31,000 --> 00:00:33,000
不捐也不会让你失去什么

13
00:00:33,000 --> 00:00:35,000
我们口号是

14
00:00:35,000 --> 00:00:37,000
Programming is like sex

15
00:00:37,000 --> 00:00:41,000
One mistake and you have to support it for the rest of your life

16
00:00:41,000 --> 00:00:43,000
这个叫做什么

17
00:00:43,000 --> 00:00:45,000
Accidental baby 吗

18
00:00:45,000 --> 00:00:49,000
就是 Execution

19
00:00:49,000 --> 00:00:53,000
应该在保护级别进行

20
00:00:53,000 --> 00:00:56,000
保护级别限制很多啊

21
00:00:58,000 --> 00:01:01,000
但是不会怀孕

22
00:01:01,000 --> 00:01:03,000
不会触及到这个 kernel

23
00:01:03,000 --> 00:01:04,000
好吧

24
00:01:04,000 --> 00:01:06,000
嗯

25
00:01:06,000 --> 00:01:07,000
大家还是小心行

26
00:01:07,000 --> 00:01:08,000
诶

27
00:01:08,000 --> 00:01:10,000
最近好像国内开放那个什么二胎了

28
00:01:11,000 --> 00:01:13,000
是与时俱进

29
00:01:13,000 --> 00:01:14,000
我们要讨论一下这个了

30
00:01:14,000 --> 00:01:14,000
算了

31
00:01:14,000 --> 00:01:15,000
还是胎医来了

32
00:01:15,000 --> 00:01:16,000
嗯

33
00:01:16,000 --> 00:01:17,000
OK

34
00:01:17,000 --> 00:01:17,000
对

35
00:01:17,000 --> 00:01:20,000
我觉得我们好像也扯不出了什么犊子

36
00:01:20,000 --> 00:01:26,000
其实二胎之前就是对于双方都是独生子女的家长开放了吧

37
00:01:26,000 --> 00:01:30,000
以前是开放叫什么单独二胎吗

38
00:01:30,000 --> 00:01:32,000
就是什么叫单独二胎

39
00:01:32,000 --> 00:01:33,000
这个是怎么解释来的

40
00:01:33,000 --> 00:01:35,000
反正就是如果两方父母都是这个

41
00:01:35,000 --> 00:01:37,000
多生子女的话就可以生两个

42
00:01:37,000 --> 00:01:41,000
就可以然后现在是就是没有任何限制想生两个就生了

43
00:01:41,000 --> 00:01:43,000
就 up to two

44
00:01:43,000 --> 00:01:43,000
OK

45
00:01:43,000 --> 00:01:45,000
嗯

46
00:01:45,000 --> 00:01:47,000
但也有人在扯扯这个事情

47
00:01:47,000 --> 00:01:49,000
就说为什么还有 up to two 这个限制

48
00:01:49,000 --> 00:01:50,000
对吧

49
00:01:50,000 --> 00:01:54,000
其实现在的是人们的生至少城市人口的生育已经非常低了

50
00:01:55,000 --> 00:01:56,000
嗯

51
00:01:56,000 --> 00:01:57,000
是吧

52
00:01:57,000 --> 00:01:58,000
我也觉得是这样

53
00:01:58,000 --> 00:01:59,000
起码我的生意又要是很低的

54
00:01:59,000 --> 00:02:00,000
哈哈哈

55
00:02:01,000 --> 00:02:02,000
啊

56
00:02:02,000 --> 00:02:03,000
好吧

57
00:02:03,000 --> 00:02:07,000
但我相信也许二线城市还是会有一个增长

58
00:02:07,000 --> 00:02:08,000
农村吧

59
00:02:08,000 --> 00:02:16,000
主要还是可能可是农村现在农村大量前两天那个经济学人上还还封面故事就是讲中国的

60
00:02:17,000 --> 00:02:19,000
农村出现大量留守儿童

61
00:02:19,000 --> 00:02:20,000
然后

62
00:02:21,000 --> 00:02:22,000
农村已经没有年轻人了

63
00:02:22,000 --> 00:02:26,000
所以其实农村的生育率也是相当低的

64
00:02:26,000 --> 00:02:26,000
哎

65
00:02:26,000 --> 00:02:27,000
这个还有点意思

66
00:02:27,000 --> 00:02:28,000
我一直不知道怎么算

67
00:02:28,000 --> 00:02:34,000
比如说两个一对农民工去这个从农村去到这个一线城市打工

68
00:02:34,000 --> 00:02:37,000
他这里生了两个小孩算哪边的出身呢

69
00:02:37,000 --> 00:02:38,000
他上不了户口呀

70
00:02:38,000 --> 00:02:42,000
但是对所以所以我说他他他他算哪里的出身算那个城市的吗

71
00:02:42,000 --> 00:02:44,000
算应该是算户籍所在地的出生

72
00:02:44,000 --> 00:02:46,000
就永远是统计

73
00:02:46,000 --> 00:02:47,000
如果你要拿统计资料的话

74
00:02:47,000 --> 00:02:49,000
永远是在户籍所在地呢

75
00:02:49,000 --> 00:02:55,000
那他们要是想给如果要是想给学呃学生想给孩子上户口的话

76
00:02:55,000 --> 00:02:56,000
只能回到那个

77
00:02:56,000 --> 00:02:58,000
呃户籍所在地上

78
00:02:58,000 --> 00:03:00,000
如果不上的话就是黑空已经统计不到对吧

79
00:03:00,000 --> 00:03:01,000
但如果上了的话呢

80
00:03:01,000 --> 00:03:02,000
只能是在户籍所在地

81
00:03:02,000 --> 00:03:04,000
所以你统计的是户籍所在地的出生率

82
00:03:04,000 --> 00:03:07,000
哎呀

83
00:03:07,000 --> 00:03:08,000
哎

84
00:03:08,000 --> 00:03:09,000
cisson failure

85
00:03:09,000 --> 00:03:11,000
sucks

86
00:03:11,000 --> 00:03:12,000
呃好吧

87
00:03:12,000 --> 00:03:14,000
我们今天我们今天这一期是 27 期

88
00:03:14,000 --> 00:03:15,000
然后做一下

89
00:03:15,000 --> 00:03:16,000
呃

90
00:03:16,000 --> 00:03:17,000
听众反馈

91
00:03:17,000 --> 00:03:19,000
但听众反馈是 24 期的

92
00:03:19,000 --> 00:03:21,000
因为上两期我们都请到了嘉宾对吧

93
00:03:21,000 --> 00:03:23,000
对这采访嘉宾

94
00:03:23,000 --> 00:03:25,000
然后没有对我们两个的吐槽

95
00:03:25,000 --> 00:03:26,000
哈哈

96
00:03:26,000 --> 00:03:30,000
为什么二为什么上一期里面的没有反馈了

97
00:03:30,000 --> 00:03:32,000
下载量很高啊

98
00:03:32,000 --> 00:03:33,000
呃

99
00:03:33,000 --> 00:03:36,000
他们都去那个 v 2 ex 反馈了

100
00:03:36,000 --> 00:03:37,000
啊

101
00:03:37,000 --> 00:03:40,000
对对对这个非常合乎情理

102
00:03:40,000 --> 00:03:41,000
哎我去对

103
00:03:41,000 --> 00:03:43,000
因为因为一般我我忘了说哈

104
00:03:43,000 --> 00:03:49,000
就是说我们每期这个 criminal panic 都会在 v 2 ex 的那个 podcast 那节点更新嘛

105
00:03:49,000 --> 00:03:52,000
那下面大家就会有那个点击或者是去评论

106
00:03:52,000 --> 00:03:54,000
然后看了一下数字哈

107
00:03:54,000 --> 00:03:57,000
就是采访 v 2 ex 呃采访 liver 那期

108
00:03:57,000 --> 00:04:00,000
在那里有大概 4000 多次点击

109
00:04:00,000 --> 00:04:04,000
然后我们平时大概是在几百次吧

110
00:04:04,000 --> 00:04:07,000
点击所以是有数量级的区别的

111
00:04:07,000 --> 00:04:11,000
然后他相当当然相应的这个评论也是比较多的

112
00:04:11,000 --> 00:04:13,000
一共有我现在看到有 55 条评论

113
00:04:13,000 --> 00:04:18,000
应该是对他比较活跃的一个讨论组在下面

114
00:04:18,000 --> 00:04:20,000
我看了啊

115
00:04:20,000 --> 00:04:23,000
好多反馈其实都值得念的网站

116
00:04:23,000 --> 00:04:24,000
网站实在有点慢

117
00:04:24,000 --> 00:04:26,000
因为经济学很厉害

118
00:04:26,000 --> 00:04:28,000
real 请投下我的同币

119
00:04:28,000 --> 00:04:30,000
所以说你是靠这个帖子收可能同币

120
00:04:30,000 --> 00:04:33,000
对对我的那个同币已经翻翻了

121
00:04:33,000 --> 00:04:35,000
我应该说我的银币已经翻翻了

122
00:04:35,000 --> 00:04:36,000
我之前是 20 多个银币

123
00:04:36,000 --> 00:04:38,000
我现在只有 50 多个 50 多个银币了

124
00:04:38,000 --> 00:04:40,000
哎呀致富新途径

125
00:04:40,000 --> 00:04:49,000
对于 l 大经历比较熟悉的朋友可以从 1 分 31 小时 32 分左右开始听啊前面一万小时就这样被跳过

126
00:04:49,000 --> 00:04:51,000
所以前面一个半小时我们在扯什么蛋

127
00:04:51,000 --> 00:04:53,000
对就下面下面有一个

128
00:04:53,000 --> 00:04:54,000
这个人说听完了

129
00:04:54,000 --> 00:04:58,000
为什么我感觉几乎 70%以上的聊天内容都曾经在 Livid 的博客里面看过呢

130
00:04:58,000 --> 00:04:59,000
比如 v 2 ex

131
00:04:59,000 --> 00:05:01,000
从 googleapp 引人迁移

132
00:05:01,000 --> 00:05:02,000
Livid 的三个问题

133
00:05:02,000 --> 00:05:04,000
以及 KG 6 间房

134
00:05:04,000 --> 00:05:06,000
和后来去家里工作的事情

135
00:05:06,000 --> 00:05:10,000
我觉得还是有原因的

136
00:05:10,000 --> 00:05:12,000
你之前只是看过对吧

137
00:05:12,000 --> 00:05:13,000
这是这次你听过了

138
00:05:13,000 --> 00:05:14,000
还是有点不一样

139
00:05:14,000 --> 00:05:15,000
没错

140
00:05:15,000 --> 00:05:22,000
而且我们的节目的意图不就是让没有看过的人可以听到 70%的内容

141
00:05:22,000 --> 00:05:24,000
即使的内容就知道

142
00:05:24,000 --> 00:05:26,000
Livin 曾在 blog 里面写过什么

143
00:05:26,000 --> 00:05:26,000
对吧

144
00:05:27,000 --> 00:05:28,000
对

145
00:05:28,000 --> 00:05:31,000
29 了有个吐槽挺好的

146
00:05:31,000 --> 00:05:34,000
ipn 买过最不值得的一名

147
00:05:34,000 --> 00:05:36,000
大概就是 chronalpanic.fm 了

148
00:05:36,000 --> 00:05:39,000
因为吴涛被 ipn.li

149
00:05:39,000 --> 00:05:41,000
slash chronalpanic 被习惯了

150
00:05:41,000 --> 00:05:43,000
这次我们已经改过来这个稿子了

151
00:05:43,000 --> 00:05:44,000
yeah

152
00:05:44,000 --> 00:05:47,000
对 chronalpanic.fm 还是蛮贵的

153
00:05:47,000 --> 00:05:48,000
好贵

154
00:05:48,000 --> 00:05:51,000
一年上 70 到的续费的钱

155
00:05:51,000 --> 00:05:52,000
对

156
00:05:52,000 --> 00:05:55,000
所以我们捐款如果有点用处的话

157
00:05:55,000 --> 00:05:56,000
就用在这了

158
00:05:56,000 --> 00:05:58,000
但可能连这个都不够用

159
00:05:59,000 --> 00:06:02,000
你干嘛这么悲观

160
00:06:02,000 --> 00:06:02,000
其实是够的

161
00:06:03,000 --> 00:06:04,000
good to know

162
00:06:04,000 --> 00:06:05,000
more than that

163
00:06:05,000 --> 00:06:07,000
我还有人非常怀旧的

164
00:06:07,000 --> 00:06:08,000
不是

165
00:06:08,000 --> 00:06:09,000
这就是 Livin

166
00:06:09,000 --> 00:06:15,000
他把当初 badcompany 2 的 app 的截图发上来

167
00:06:17,000 --> 00:06:19,000
我们把这个连接贴到 shownotes 里

168
00:06:19,000 --> 00:06:21,000
大家有兴趣可以去看一下

169
00:06:21,000 --> 00:06:21,000
ok

170
00:06:22,000 --> 00:06:23,000
好吧

171
00:06:24,000 --> 00:06:26,000
正儿八经的听众反馈

172
00:06:26,000 --> 00:06:28,000
有一条是来自这个叫

173
00:06:29,000 --> 00:06:31,000
陈震的朋友

174
00:06:31,000 --> 00:06:33,000
他里面提到了几个问题

175
00:06:33,000 --> 00:06:34,000
这个就是说

176
00:06:34,000 --> 00:06:36,000
这次当然是对我们 24 期节目

177
00:06:36,000 --> 00:06:37,000
是 24 期

178
00:06:37,000 --> 00:06:39,000
有个换专业的事情

179
00:06:39,000 --> 00:06:40,000
说到

180
00:06:40,000 --> 00:06:41,000
对

181
00:06:41,000 --> 00:06:42,000
对

182
00:06:42,000 --> 00:06:45,000
他说我和反馈的听众

183
00:06:45,000 --> 00:06:47,000
有很有相似的情况和想法

184
00:06:47,000 --> 00:06:49,000
当然也做出一些让人惊讶的事情

185
00:06:49,000 --> 00:06:51,000
我本科和研究生都是工程专业

186
00:06:52,000 --> 00:06:54,000
但是一直心水计算机

187
00:06:54,000 --> 00:06:58,000
所以尝试考博是到这个 computer science

188
00:06:59,000 --> 00:07:00,000
好像不是很现实

189
00:07:00,000 --> 00:07:03,000
但目前结果还未知

190
00:07:03,000 --> 00:07:05,000
但是应该希望秒吗

191
00:07:05,000 --> 00:07:08,000
所以未来大概只能继续将计算机当做兴趣爱好

192
00:07:08,000 --> 00:07:10,000
做个学学的爱好者

193
00:07:10,000 --> 00:07:13,000
其实工程专业考去计算机

194
00:07:13,000 --> 00:07:14,000
我觉得还好

195
00:07:15,000 --> 00:07:16,000
对

196
00:07:16,000 --> 00:07:18,000
我觉得要比 the other way around 容易点

197
00:07:19,000 --> 00:07:20,000
比什么

198
00:07:20,000 --> 00:07:22,000
也就是比反过来要容易点

199
00:07:22,000 --> 00:07:22,000
对

200
00:07:22,000 --> 00:07:25,000
因为其实现在我觉得很缺那种

201
00:07:25,000 --> 00:07:28,000
具备足够的计算机的知识

202
00:07:28,000 --> 00:07:30,000
然后同时又精通某一个专业

203
00:07:30,000 --> 00:07:34,000
因为这样你才可以去帮助专业的人

204
00:07:34,000 --> 00:07:36,000
去改善他们的工作状况

205
00:07:36,000 --> 00:07:37,000
写一些比如说对应的软件

206
00:07:38,000 --> 00:07:41,000
或者一些工具这样的东西出现了

207
00:07:41,000 --> 00:07:41,000
对

208
00:07:41,000 --> 00:07:43,000
所以其实我觉得还是很好的一件事情

209
00:07:43,000 --> 00:07:43,000
没错

210
00:07:43,000 --> 00:07:46,000
我觉得计算机就好像英语一样

211
00:07:46,000 --> 00:07:47,000
有专业英语的

212
00:07:47,000 --> 00:07:48,000
也有专业计算机

213
00:07:48,000 --> 00:07:50,000
你专门去学计算机

214
00:07:50,000 --> 00:07:51,000
反而不太好

215
00:07:51,000 --> 00:07:55,000
反而不太可能写出一个某一个 domain 的 application

216
00:07:55,000 --> 00:07:58,000
这个只有那个 domain 的人来写才比较靠谱

217
00:07:58,000 --> 00:07:59,000
没错

218
00:07:59,000 --> 00:07:59,000
没错

219
00:08:00,000 --> 00:08:01,000
接着念他的反馈

220
00:08:01,000 --> 00:08:02,000
就是说

221
00:08:02,000 --> 00:08:05,000
节目最后提到了微积分学习的事情

222
00:08:05,000 --> 00:08:06,000
因为我是工程专业的

223
00:08:06,000 --> 00:08:09,000
大概可以略微说一些自己的看法

224
00:08:09,000 --> 00:08:13,000
工程专业或者所有和力学相关的专业

225
00:08:13,000 --> 00:08:14,000
应该都会发现

226
00:08:14,000 --> 00:08:16,000
微积分的知识是必不可少的

227
00:08:17,000 --> 00:08:18,000
更广义的揣测

228
00:08:18,000 --> 00:08:21,000
所有和连续物理世界相关的领域

229
00:08:21,000 --> 00:08:21,000
都离不开

230
00:08:21,000 --> 00:08:22,000
微积分

231
00:08:22,000 --> 00:08:25,000
其实统计学如果没记错的话

232
00:08:25,000 --> 00:08:28,000
很多概率模型都要用到并不简单的微积分运算

233
00:08:28,000 --> 00:08:30,000
微分运算和积分运算

234
00:08:30,000 --> 00:08:34,000
作为一种和加减乘除病例的更高级的运算手段

235
00:08:34,000 --> 00:08:37,000
对于大部分领域的后续研究都是基本的工具

236
00:08:38,000 --> 00:08:40,000
所以本科学习中较大比重的微积分

237
00:08:40,000 --> 00:08:42,000
个人以为并没有问题

238
00:08:42,000 --> 00:08:45,000
至于大多数人觉得在日常生活中没有什么作用

239
00:08:46,000 --> 00:08:47,000
没必要提

240
00:08:47,000 --> 00:08:48,000
为什么没必要提

241
00:08:48,000 --> 00:08:51,000
他意思是我们在那一期里面

242
00:08:51,000 --> 00:08:53,000
说大多数人觉得日常生活中没有什么作用

243
00:08:53,000 --> 00:08:55,000
这件事情其实没有什么必要说

244
00:08:55,000 --> 00:08:58,000
因为大多数人的感觉又有什么用

245
00:08:58,000 --> 00:08:59,000
又有什么意义

246
00:09:00,000 --> 00:09:00,000
对

247
00:09:02,000 --> 00:09:03,000
二位主播有同感的原因

248
00:09:03,000 --> 00:09:07,000
大概是计算机科学中完全没有微积分应用

249
00:09:07,000 --> 00:09:09,000
毕竟计算机是离散的世界

250
00:09:09,000 --> 00:09:13,000
是数学中非常深入狭窄的一个分支

251
00:09:13,000 --> 00:09:17,000
当然我也完全同意概率论和统计的学习的确不太够

252
00:09:17,000 --> 00:09:19,000
虽然当年是被略得死去活来

253
00:09:20,000 --> 00:09:20,000
嗯

254
00:09:20,000 --> 00:09:21,000
嗯

255
00:09:21,000 --> 00:09:21,000
嗯

256
00:09:21,000 --> 00:09:21,000
嗯

257
00:09:21,000 --> 00:09:22,000
这个是怎么说呢

258
00:09:22,000 --> 00:09:22,000
我觉得是这样子

259
00:09:22,000 --> 00:09:25,000
就是说我的观点是说

260
00:09:25,000 --> 00:09:29,000
不是说微积分不应该重点学

261
00:09:29,000 --> 00:09:32,000
而是说概率统计学的还不够

262
00:09:32,000 --> 00:09:33,000
嗯

263
00:09:33,000 --> 00:09:34,000
是个相对的概念

264
00:09:34,000 --> 00:09:34,000
对吧

265
00:09:34,000 --> 00:09:36,000
就是说如果说你一个危机

266
00:09:36,000 --> 00:09:38,000
然后当然他说日常生活中没有什么作用

267
00:09:38,000 --> 00:09:39,000
所以怎么样

268
00:09:39,000 --> 00:09:44,000
我觉得可能是对通识教育的一个认知

269
00:09:45,000 --> 00:09:48,000
就是说从实用主义的观点出发

270
00:09:48,000 --> 00:09:51,000
就是说如果一个东西在现实生活中

271
00:09:51,000 --> 00:09:53,000
是更加有广泛应用场景的

272
00:09:53,000 --> 00:09:58,000
而另外一个东西在现实生活中可能很多人用不太到

273
00:09:58,000 --> 00:10:00,000
那么作为一个通识教育里面

274
00:10:00,000 --> 00:10:03,000
你去强调平时更加用不到的知识

275
00:10:03,000 --> 00:10:05,000
是不是有点奇怪

276
00:10:05,000 --> 00:10:11,000
或者说至少应该把概率统计放到和微积分同等重要的地位

277
00:10:11,000 --> 00:10:14,000
去教授和教学

278
00:10:14,000 --> 00:10:15,000
对吧

279
00:10:15,000 --> 00:10:16,000
对

280
00:10:16,000 --> 00:10:18,000
我觉得可能对于计算机专业来说

281
00:10:18,000 --> 00:10:19,000
这个

282
00:10:19,000 --> 00:10:20,000
这个微积分学

283
00:10:20,000 --> 00:10:21,000
学

284
00:10:21,000 --> 00:10:22,000
学

285
00:10:22,000 --> 00:10:23,000
一就可以了

286
00:10:23,000 --> 00:10:28,000
然后概率和离散数学应该在比重多一点

287
00:10:28,000 --> 00:10:29,000
对

288
00:10:29,000 --> 00:10:29,000
对

289
00:10:29,000 --> 00:10:31,000
差不多这个意思

290
00:10:31,000 --> 00:10:37,000
当然各个专业有各个专业的特殊的需求

291
00:10:37,000 --> 00:10:38,000
没什么

292
00:10:38,000 --> 00:10:43,000
或者说你是不是说觉得国内这种理工科基础教育一刀切的方法不是很好

293
00:10:44,000 --> 00:10:48,000
还是要针对各个专业有自己的偏重和擅长

294
00:10:48,000 --> 00:10:49,000
我觉得还是应该考虑一下这种问题

295
00:10:50,000 --> 00:10:50,000
对

296
00:10:50,000 --> 00:10:53,000
教育是个大问题

297
00:10:53,000 --> 00:10:53,000
这个

298
00:10:53,000 --> 00:10:54,000
对

299
00:10:54,000 --> 00:10:58,000
下一条听众反馈是一位叫做 Gary 的听众的来信

300
00:10:59,000 --> 00:11:01,000
他是吐槽我们说那个

301
00:11:01,000 --> 00:11:03,000
说程序员的职业选择的

302
00:11:03,000 --> 00:11:04,000
没错

303
00:11:04,000 --> 00:11:06,000
他说这个题目可以聊一天

304
00:11:06,000 --> 00:11:10,000
你们高效的解决了听众反馈后花了一个小时聊游戏

305
00:11:10,000 --> 00:11:13,000
最后聊了半个小时这个题目

306
00:11:13,000 --> 00:11:15,000
然后说意犹未尽

307
00:11:15,000 --> 00:11:20,000
这个我们之后再找机会聊吧

308
00:11:20,000 --> 00:11:20,000
我觉得还可以吧

309
00:11:20,000 --> 00:11:22,000
我觉得还是有很多事情可以讲的

310
00:11:22,000 --> 00:11:22,000
对

311
00:11:22,000 --> 00:11:24,000
毕竟这个是一个

312
00:11:24,000 --> 00:11:27,000
这是一个很水很湿的问题

313
00:11:27,000 --> 00:11:29,000
然后就说很有很多这种

314
00:11:29,000 --> 00:11:31,000
你想象一个场景

315
00:11:31,000 --> 00:11:34,000
两个什么加班过度

316
00:11:34,000 --> 00:11:40,000
然后两眼不满血丝的程序员对坐着什么相对无言

317
00:11:40,000 --> 00:11:43,000
唯有泪千行在聊各自的心酸史

318
00:11:43,000 --> 00:11:45,000
你老婆睡了吗

319
00:11:45,000 --> 00:11:47,000
我老婆也睡了

320
00:11:47,000 --> 00:11:50,000
万管好了吗

321
00:11:50,000 --> 00:11:50,000
对吧

322
00:11:50,000 --> 00:11:52,000
还是你的这个

323
00:11:52,000 --> 00:11:53,000
你老婆怎么样

324
00:11:53,000 --> 00:11:54,000
挺好的

325
00:11:54,000 --> 00:11:55,000
你的背痛问题解决了没

326
00:11:55,000 --> 00:11:59,000
鼠标手是不是还是依旧是吧

327
00:11:59,000 --> 00:12:03,000
还是一种那么虚寒无暖的关切的感觉

328
00:12:03,000 --> 00:12:04,000
立刻开始说

329
00:12:04,000 --> 00:12:07,000
我为了改善症状买了一个那个轨迹球

330
00:12:07,000 --> 00:12:08,000
另外一个说

331
00:12:08,000 --> 00:12:09,000
不是有那种竖起来的鼠标吗

332
00:12:09,000 --> 00:12:11,000
然后就开始套了硬件

333
00:12:11,000 --> 00:12:17,000
最后又扯到了那个什么人体工学键盘上面去对吧

334
00:12:17,000 --> 00:12:18,000
对

335
00:12:18,000 --> 00:12:19,000
这就是死宅啊

336
00:12:19,000 --> 00:12:21,000
这就是死宅啊

337
00:12:21,000 --> 00:12:25,000
下一条听众反馈

338
00:12:25,000 --> 00:12:26,000
武道老师

339
00:12:26,000 --> 00:12:27,000
瑞欧老师

340
00:12:27,000 --> 00:12:29,000
你才是老师

341
00:12:29,000 --> 00:12:30,000
你们好

342
00:12:30,000 --> 00:12:32,000
首先恭喜节目复播

343
00:12:32,000 --> 00:12:34,000
若有幸被朗读

344
00:12:34,000 --> 00:12:35,000
恳请匿名写信

345
00:12:35,000 --> 00:12:36,000
第一次给你们写信

346
00:12:36,000 --> 00:12:39,000
其实跟本期的内容没有太大的关系

347
00:12:39,000 --> 00:12:43,000
这一次又在节目听到了两个本该如雷挂的名字

348
00:12:43,000 --> 00:12:47,000
Daniel J. Bernstein 和 Kate Thompson

349
00:12:47,000 --> 00:12:47,000
嗯

350
00:12:47,000 --> 00:12:48,000
然而是

351
00:12:48,000 --> 00:12:49,000
嗯

352
00:12:49,000 --> 00:12:49,000
嗯

353
00:12:49,000 --> 00:12:49,000
嗯

354
00:12:49,000 --> 00:12:49,000
嗯

357
00:13:49,000 --> 00:13:50,000
Omg

358
00:13:50,000 --> 00:13:50,000
对

359
00:13:50,000 --> 00:13:53,000
这是直呼上面的还是哪一句话说

360
00:13:53,000 --> 00:13:55,000
我应该跟一个女孩子告白吗

361
00:13:55,000 --> 00:14:00,000
当然是告白不是拿来就是告诉对方我要追你的

362
00:14:00,000 --> 00:14:01,000
而是追到了之后

363
00:14:01,000 --> 00:14:04,000
就是宣告战国的

364
00:14:04,000 --> 00:14:05,000
OK

365
00:14:05,000 --> 00:14:08,000
Back to the feedback

366
00:14:08,000 --> 00:14:13,000
这也让我再次体会到紧凭学校里的知识

367
00:14:13,000 --> 00:14:15,000
很难对于某个领域有深入的了解

368
00:14:15,000 --> 00:14:17,000
我相信这并非只是我一个人的情况

369
00:14:17,000 --> 00:14:18,000
身在一所国内

370
00:14:18,000 --> 00:14:19,000
括号

371
00:14:19,000 --> 00:14:22,000
大多数情况下排名 top 5 的学校

372
00:14:22,000 --> 00:14:26,000
很多周围的同学没有 GitHub 的账号

373
00:14:26,000 --> 00:14:28,000
喜欢用 QQ 传代码

374
00:14:28,000 --> 00:14:29,000
写几十行的程序

375
00:14:29,000 --> 00:14:30,000
要开 Visual Studio

376
00:14:30,000 --> 00:14:33,000
翻墙只为上 Facebook

377
00:14:33,000 --> 00:14:36,000
很可能也没有听说过那几个

378
00:14:36,000 --> 00:14:37,000
入类过场的名字

379
00:14:37,000 --> 00:14:40,000
括号更不太可能收听贵节目

380
00:14:40,000 --> 00:14:45,000
虽然有比较强的理论基础作为支撑

381
00:14:45,000 --> 00:14:49,000
写出来的程序一般也能够达到要求

382
00:14:49,000 --> 00:14:51,000
但总觉得这样以后会越来越困难

383
00:14:51,000 --> 00:14:55,000
不过很多同学可能会专注于计算机科学的研究

384
00:14:55,000 --> 00:14:58,000
这些问题未必严重

385
00:14:58,000 --> 00:15:00,000
但是对于以后想要专心写代码

386
00:15:00,000 --> 00:15:01,000
就会头疼了

387
00:15:01,000 --> 00:15:03,000
之前几年一直没有认识到这些问题

388
00:15:03,000 --> 00:15:05,000
从来没有在课外

389
00:15:05,000 --> 00:15:07,000
也很少在课外拓展知识

390
00:15:07,000 --> 00:15:08,000
积累实际经验

391
00:15:08,000 --> 00:15:13,000
工作以后说不定就会变成 V 2 EX 上面被吐槽的奇葩程序

392
00:15:13,000 --> 00:15:17,000
不知道两位老师有没有经历过这样的阶段呢

393
00:15:17,000 --> 00:15:18,000
如果有

394
00:15:18,000 --> 00:15:19,000
又是如何突破

395
00:15:19,000 --> 00:15:19,000
这些问题

396
00:15:19,000 --> 00:15:22,000
这个怎么说呢

397
00:15:22,000 --> 00:15:25,000
Everyone used to be a noob

398
00:15:25,000 --> 00:15:27,000
总会有一个

399
00:15:27,000 --> 00:15:31,000
起码我觉得他起码意识到这个东西是有点意思的

400
00:15:31,000 --> 00:15:32,000
可以怎么说

401
00:15:32,000 --> 00:15:35,000
如果说我们这个 IT 行业还有点这个人文精神的话

402
00:15:35,000 --> 00:15:38,000
可能这也就是所谓这种东西吧

403
00:15:38,000 --> 00:15:39,000
是不是

404
00:15:39,000 --> 00:15:43,000
我觉得其实就是一个 Lore 传承的问题

405
00:15:43,000 --> 00:15:44,000
Lore 这个东西

406
00:15:44,000 --> 00:15:45,000
香谣

407
00:15:45,000 --> 00:15:46,000
Folklore

408
00:15:46,000 --> 00:15:48,000
对 Folklore

409
00:15:48,000 --> 00:15:49,000
你要不去

410
00:15:49,000 --> 00:15:51,000
主动的去接触的话

411
00:15:51,000 --> 00:15:53,000
你是不会知道的

412
00:15:53,000 --> 00:15:56,000
或者说你是需要有人去给你传承的

413
00:15:56,000 --> 00:15:58,000
如果你前人没有告诉你这个东西

414
00:15:58,000 --> 00:16:02,000
或者说你你你所处的圈子不对

415
00:16:02,000 --> 00:16:03,000
那你接触不到这些

416
00:16:03,000 --> 00:16:05,000
我觉得也是挺正常的一件事情

417
00:16:05,000 --> 00:16:12,000
对或者就是你根本就是你在中文圈子里面就的确是很难接触到

418
00:16:12,000 --> 00:16:17,000
Bernstein 或者是 Thompson 这种名字教材里面不会讲嘛

419
00:16:17,000 --> 00:16:18,000
对

420
00:16:18,000 --> 00:16:25,000
然后好像其实这可能跟中文技术资料的匮乏可能也有点关系

421
00:16:25,000 --> 00:16:30,000
就是说你中文的教科书里面基本上就是叙论前言讲一下

422
00:16:30,000 --> 00:16:32,000
然后后面就再也不涉及了

423
00:16:32,000 --> 00:16:34,000
纯干货不讲花边的

424
00:16:34,000 --> 00:16:38,000
后面就是把 index 或者是 user manual 给你翻译一遍

425
00:16:38,000 --> 00:16:42,000
就不会有什么那种外国家在旁边有个小条告诉你

426
00:16:42,000 --> 00:16:43,000
你知道吗

427
00:16:43,000 --> 00:16:44,000
这个谁是干嘛的

428
00:16:44,000 --> 00:16:45,000
还做了什么事

429
00:16:45,000 --> 00:16:46,000
side note

430
00:16:46,000 --> 00:16:47,000
我觉得最开始看的英文是什么样的

431
00:16:47,000 --> 00:16:48,000
最开始看的英文是什么样的

432
00:16:48,000 --> 00:16:50,000
我记得我看过一本文书的时候其实很讨厌 side note

433
00:16:50,000 --> 00:16:56,000
因为 side note 是一个会打断你的阅读 flow 的一个东西

434
00:16:56,000 --> 00:16:58,000
我觉得是的

435
00:16:58,000 --> 00:17:03,000
就是你正在读正文

436
00:17:03,000 --> 00:17:04,000
然后旁边突然出来一个

437
00:17:04,000 --> 00:17:08,000
尤其是那种就是不占据整个页面宽度的 side note

438
00:17:08,000 --> 00:17:13,000
就他在旁边那个测栏的留白里面小条有一个那种

439
00:17:13,000 --> 00:17:14,000
对

440
00:17:14,000 --> 00:17:15,000
然后我就会特别纠结

441
00:17:15,000 --> 00:17:18,000
我说我是应该先把这一段正文读完再去跳

442
00:17:18,000 --> 00:17:19,000
side note

443
00:17:19,000 --> 00:17:21,000
还是根据 side note 的物理位置

444
00:17:21,000 --> 00:17:23,000
实体位置去先读 side note

445
00:17:23,000 --> 00:17:24,000
再跳回去读正文

446
00:17:24,000 --> 00:17:27,000
所以其实我还蛮喜欢有这种 side note

447
00:17:27,000 --> 00:17:28,000
我记得好像

448
00:17:28,000 --> 00:17:30,000
我现在也挺喜欢的

449
00:17:30,000 --> 00:17:33,000
但是就那个时候可能有一种

450
00:17:33,000 --> 00:17:34,000
还是喜欢读干货是吧

451
00:17:34,000 --> 00:17:35,000
那个时候

452
00:17:35,000 --> 00:17:36,000
对

453
00:17:36,000 --> 00:17:39,000
其实如果有 side note 的话

454
00:17:39,000 --> 00:17:40,000
你是可以选择的

455
00:17:40,000 --> 00:17:41,000
你时间不够的话就不要读 side note

456
00:17:41,000 --> 00:17:43,000
side note 之所以是 side note

457
00:17:43,000 --> 00:17:44,000
就因为它没有那么重要

458
00:17:44,000 --> 00:17:45,000
就是 optional content

459
00:17:45,000 --> 00:17:47,000
作者觉得对

460
00:17:47,000 --> 00:17:48,000
我觉得这个其实蛮重要的

461
00:17:48,000 --> 00:17:53,000
就是说起码可能我印象中大学的教材里面

462
00:17:53,000 --> 00:17:55,000
可能这种干货会比较满满

463
00:17:55,000 --> 00:17:57,000
就至少国产教材里面干货会比较满满的

464
00:17:57,000 --> 00:18:05,000
然后像一些洋教材可能就会把这种这些一些诗货混进去

465
00:18:05,000 --> 00:18:06,000
其实我还蛮喜欢看那些诗货的

466
00:18:06,000 --> 00:18:08,000
这样有一个

467
00:18:08,000 --> 00:18:09,000
别的不说

468
00:18:09,000 --> 00:18:10,000
你起码有一个谈资了

469
00:18:10,000 --> 00:18:11,000
对吧

470
00:18:12,000 --> 00:18:12,000
对

471
00:18:12,000 --> 00:18:15,000
就国外的教材比较接近于教学的教材

472
00:18:15,000 --> 00:18:17,000
国内教材更像有考试的教材

473
00:18:18,000 --> 00:18:19,000
好残酷

474
00:18:19,000 --> 00:18:21,000
要不要要不要这么直白

475
00:18:21,000 --> 00:18:23,000
这是鸡精和鸡汤的差别

476
00:18:23,000 --> 00:18:23,000
好吗

477
00:18:23,000 --> 00:18:26,000
就你像你吃国内的这个鸡精的话

478
00:18:26,000 --> 00:18:27,000
你得自己掺水进去

479
00:18:27,000 --> 00:18:29,000
不然又能会大便干燥了

480
00:18:36,000 --> 00:18:37,000
perfect analogy

481
00:18:39,000 --> 00:18:44,000
然后如何说怎么突破这个不用 github

482
00:18:44,000 --> 00:18:45,000
等一下

483
00:18:45,000 --> 00:18:48,000
他说那个大多数情况下排名 top 的学校是哪一间

484
00:18:48,000 --> 00:18:52,000
只有前二是确定了

485
00:18:52,000 --> 00:18:53,000
后面三个一直在换

486
00:18:53,000 --> 00:18:57,000
我想想交打复旦这俩谁排第三

487
00:18:58,000 --> 00:18:59,000
不一定吧

488
00:18:59,000 --> 00:19:01,000
有时候也有经常这种大学参伍起来

489
00:19:01,000 --> 00:19:02,000
什么浙大

490
00:19:02,000 --> 00:19:03,000
好吧

491
00:19:03,000 --> 00:19:05,000
没有长没有某长者的话

492
00:19:05,000 --> 00:19:07,000
可能交打应该还是要靠着

493
00:19:07,000 --> 00:19:10,000
然后复旦之后南京吧

494
00:19:10,000 --> 00:19:11,000
我觉得啊

495
00:19:11,000 --> 00:19:12,000
对对对

496
00:19:12,000 --> 00:19:15,000
像我们这种实名左右的学校就没有这种担忧了

497
00:19:16,000 --> 00:19:18,000
我可以说大多数大多数学校是中大学

498
00:19:18,000 --> 00:19:19,000
就往下 top 10 了吗

499
00:19:22,000 --> 00:19:24,000
中山大学还是要比中南大学高

500
00:19:24,000 --> 00:19:25,000
论入

501
00:19:25,000 --> 00:19:27,000
那你是不是就更不担忧这个问题了

502
00:19:27,000 --> 00:19:28,000
对

503
00:19:28,000 --> 00:19:29,000
who cares

504
00:19:29,000 --> 00:19:31,000
I don't give a fuck

505
00:19:31,000 --> 00:19:33,000
bitch

506
00:19:33,000 --> 00:19:35,000
完了这一期要 explained

507
00:19:35,000 --> 00:19:36,000
算了

508
00:19:36,000 --> 00:19:39,000
他说桌上同学很多没用 github

509
00:19:39,000 --> 00:19:40,000
这个

510
00:19:42,000 --> 00:19:44,000
这怎么说呢

511
00:19:44,000 --> 00:19:45,000
文化吧还是

512
00:19:45,000 --> 00:19:48,000
因为现在好像学校教作业还是 svn 比较多吧

513
00:19:48,000 --> 00:19:50,000
主要是有一个非常讨厌的

514
00:19:51,000 --> 00:19:52,000
不可

515
00:19:52,000 --> 00:19:55,000
需要愉悦的东西在哪

516
00:19:55,000 --> 00:19:56,000
不可说的因素是吧

517
00:19:56,000 --> 00:19:58,000
对有一个不可说的因素在那边

518
00:19:58,000 --> 00:19:59,000
然后另外一个就是

519
00:19:59,000 --> 00:20:01,000
就现在还好也不一定

520
00:20:01,000 --> 00:20:05,000
对 github 的学习曲线还是比较陡峭

521
00:20:05,000 --> 00:20:08,000
嗯上手还蛮简单的吧

522
00:20:08,000 --> 00:20:08,000
至少

523
00:20:10,000 --> 00:20:13,000
xkcd 不是有一个漫画是最清楚的吧

524
00:20:13,000 --> 00:20:14,000
还是忘了

525
00:20:14,000 --> 00:20:14,000
就反正就哎

526
00:20:14,000 --> 00:20:16,000
等等我明白了

527
00:20:16,000 --> 00:20:18,000
因为有可能这个跟后面那个有关系

528
00:20:18,000 --> 00:20:20,000
他说写几十张成绩都要开 virtual studio

529
00:20:20,000 --> 00:20:22,000
说明是在 windows 上面对吧

530
00:20:23,000 --> 00:20:25,000
github 在 windows 上面是一坨屎啊

531
00:20:25,000 --> 00:20:26,000
说的是

532
00:20:26,000 --> 00:20:30,000
对所以可能跟这个系统的选择或者工具链的选择还是有一定的关系

533
00:20:30,000 --> 00:20:31,000
其实一个对

534
00:20:31,000 --> 00:20:32,000
其实一个

535
00:20:32,000 --> 00:20:34,000
嗯

536
00:20:34,000 --> 00:20:35,000
就这么说吧

537
00:20:35,000 --> 00:20:37,000
你我们节目你不喜欢命令行的话

538
00:20:37,000 --> 00:20:39,000
基本上就没有可能用 github 了吧

539
00:20:40,000 --> 00:20:41,000
嗯对

540
00:20:41,000 --> 00:20:42,000
就我们节目之前

541
00:20:43,000 --> 00:20:46,000
不是说就这一期开始已经没有什么主题了

542
00:20:46,000 --> 00:20:47,000
就我们只是胡扯而已

543
00:20:47,000 --> 00:20:48,000
就是然后

544
00:20:48,000 --> 00:20:48,000
但是

545
00:20:48,000 --> 00:20:49,000
但是

546
00:20:49,000 --> 00:20:52,000
备选的主题其实还是有比如说 common line

547
00:20:52,000 --> 00:20:54,000
可以可以讨论一下各种 shell

548
00:20:54,000 --> 00:20:55,000
然后讨论一下 common line

549
00:20:55,000 --> 00:20:56,000
为什么是

550
00:20:57,000 --> 00:20:58,000
为什么一直

551
00:20:58,000 --> 00:21:00,000
赶赶赶赶赶赶快写到下期的提交里面

552
00:21:00,000 --> 00:21:02,000
不然下期又没提说了

553
00:21:02,000 --> 00:21:03,000
说得是对

554
00:21:03,000 --> 00:21:06,000
然后这个 github 是一个其实是一个很奇葩的东西

555
00:21:06,000 --> 00:21:09,000
就是如果你习惯了 common line 的话

556
00:21:09,000 --> 00:21:11,000
你会发现 github 没有一个

557
00:21:11,000 --> 00:21:13,000
那 make so much sense

558
00:21:13,000 --> 00:21:13,000
对了

559
00:21:14,000 --> 00:21:17,000
对没有一个需要用到的

560
00:21:17,000 --> 00:21:17,000
故意的

561
00:21:17,000 --> 00:21:18,000
呃

562
00:21:18,000 --> 00:21:20,000
故意对唯一一个故意

563
00:21:20,000 --> 00:21:23,000
甚至也是在 common line 下面的实现比较

564
00:21:23,000 --> 00:21:24,000
我想了一下这 github 的故意

565
00:21:24,000 --> 00:21:29,000
可能这唯一就是考试看那个看那个就是那个 commit history

566
00:21:29,000 --> 00:21:32,000
tick 对就你只需要一个 tick

567
00:21:32,000 --> 00:21:33,000
对对一个工具

568
00:21:33,000 --> 00:21:34,000
对然后就够了

569
00:21:35,000 --> 00:21:37,000
然后用 qq 传代码

570
00:21:37,000 --> 00:21:38,000
就什么样的精神

571
00:21:39,000 --> 00:21:43,000
因为不是说现在所有的大学生最常用的

572
00:21:43,000 --> 00:21:45,000
我忘了我在什么地方看到的时候

573
00:21:45,000 --> 00:21:47,000
这个现在 90 后

574
00:21:47,000 --> 00:21:47,000
0

575
00:21:47,000 --> 00:21:49,000
为什么常用的东西是 qq

576
00:21:49,000 --> 00:21:51,000
不我明白用 qq 聊天

577
00:21:51,000 --> 00:21:52,000
我完全没有意见

578
00:21:52,000 --> 00:21:54,000
我也用完之前我上大学的时候

579
00:21:54,000 --> 00:21:58,000
问题是说用 qq 传代码是为了哪办呢

580
00:21:59,000 --> 00:22:00,000
因为 qq 可以传文件了

581
00:22:00,000 --> 00:22:02,000
而且所有人都开始 qq 了

582
00:22:02,000 --> 00:22:02,000
不为什么

583
00:22:02,000 --> 00:22:06,000
我知道但为什么要传这个文件

584
00:22:06,000 --> 00:22:06,000
这个文件是代码

585
00:22:07,000 --> 00:22:07,000
why

586
00:22:09,000 --> 00:22:11,000
让我看看你的程序怎么写的

587
00:22:11,000 --> 00:22:12,000
不然你放哪了

588
00:22:12,000 --> 00:22:14,000
那你直接贴代码片段

589
00:22:16,000 --> 00:22:17,000
如果太长了

590
00:22:17,000 --> 00:22:21,000
你会发现这个文件是 qq 的传输有限制

591
00:22:21,000 --> 00:22:22,000
而且还有一个问题

592
00:22:22,000 --> 00:22:24,000
就是你说多个文件的时候是吧

593
00:22:24,000 --> 00:22:27,000
而且还有一个问题就是你我会觉得在

594
00:22:28,000 --> 00:22:30,000
对而且有些人会用奇葩的字体

595
00:22:30,000 --> 00:22:31,000
不是吗

596
00:22:31,000 --> 00:22:33,000
就是非等宽的字体在 qq 里面

597
00:22:33,000 --> 00:22:36,000
然后所以 pastebin 还是很有用的

598
00:22:36,000 --> 00:22:38,000
但国内没有 pastebin

599
00:22:38,000 --> 00:22:40,000
pastebin 也不太好用

600
00:22:40,000 --> 00:22:41,000
如果说多个文件的话

601
00:22:41,000 --> 00:22:43,000
他是 pastebin 单个文件可能还行

602
00:22:43,000 --> 00:22:46,000
所以其实还是这个就有一件

603
00:22:46,000 --> 00:22:47,000
我就知道

604
00:22:47,000 --> 00:22:50,000
纯文本邮件用的还不够熟练的原因

605
00:22:50,000 --> 00:22:53,000
因为其实在据我所知道

606
00:22:53,000 --> 00:22:55,000
就是 git 出现之前

607
00:22:55,000 --> 00:22:56,000
那个 linux kernel 上面

608
00:22:56,000 --> 00:22:58,000
他们做 patch 的时候

609
00:22:58,000 --> 00:22:59,000
都是通过邮件发 diff

610
00:22:59,000 --> 00:23:04,000
所以中国的问题是不会用 diff

611
00:23:04,000 --> 00:23:08,000
中国是 email never took off

612
00:23:08,000 --> 00:23:10,000
大学里面还好吧

613
00:23:10,000 --> 00:23:11,000
你这么觉得吗

614
00:23:11,000 --> 00:23:12,000
我上大学的时候

615
00:23:12,000 --> 00:23:15,000
可是 4 年发过 40 封点邮件就不错

616
00:23:15,000 --> 00:23:16,000
holy shit

617
00:23:16,000 --> 00:23:17,000
怎么可能

618
00:23:17,000 --> 00:23:19,000
差不多吧

619
00:23:19,000 --> 00:23:21,000
就除了申请学校的时候发了很多之外

620
00:23:21,000 --> 00:23:23,000
你平时都不发吗

621
00:23:23,000 --> 00:23:26,000
我上大学的时候 2003

622
00:23:26,000 --> 00:23:30,000
04 年我发邮件给谁

623
00:23:30,000 --> 00:23:31,000
同学

624
00:23:31,000 --> 00:23:33,000
我发邮件给老爸过

625
00:23:33,000 --> 00:23:36,000
对我跟我曾经家属是用邮件发的

626
00:23:36,000 --> 00:23:38,000
这么嫌弃

627
00:23:38,000 --> 00:23:41,000
可是有同学

628
00:23:41,000 --> 00:23:44,000
我们是我也不知道我的同班同学

629
00:23:44,000 --> 00:23:46,000
因为我们是学新宣传的

630
00:23:46,000 --> 00:23:47,000
然后

631
00:23:47,000 --> 00:23:50,000
大概

632
00:23:50,000 --> 00:23:52,000
你们觉得邮件不安全吗

633
00:23:52,000 --> 00:23:54,000
不是 80%的人买了电脑之后

634
00:23:54,000 --> 00:23:59,000
我们就手工把所有的寝室用局域网连下来了

635
00:23:59,000 --> 00:24:00,000
然后

636
00:24:00,000 --> 00:24:01,000
你们学校没有校园网

637
00:24:01,000 --> 00:24:02,000
没有校园

638
00:24:02,000 --> 00:24:03,000
what

639
00:24:03,000 --> 00:24:05,000
就校园网是一个

640
00:24:05,000 --> 00:24:08,000
我们只有自己拨号的上网的宽带

641
00:24:08,000 --> 00:24:10,000
但没有校园内部的局域网

642
00:24:10,000 --> 00:24:12,000
huh

643
00:24:12,000 --> 00:24:13,000
don't ask me why

644
00:24:13,000 --> 00:24:15,000
事实就是

645
00:24:15,000 --> 00:24:16,000
seriously

646
00:24:16,000 --> 00:24:16,000
不会吧

647
00:24:16,000 --> 00:24:17,000
对你们什么

648
00:24:17,000 --> 00:24:20,000
你们什么在那个校园网上传 APN 这种事情

649
00:24:20,000 --> 00:24:21,000
我都只听过

650
00:24:21,000 --> 00:24:21,000
从来没有见过

651
00:24:21,000 --> 00:24:23,000
那你们有 BBS 吗

652
00:24:23,000 --> 00:24:26,000
我们 BBS 是一个 PHP 系统

653
00:24:26,000 --> 00:24:27,000
没有那个

654
00:24:27,000 --> 00:24:27,000
discord

655
00:24:27,000 --> 00:24:28,000
telnet

656
00:24:28,000 --> 00:24:31,000
没有那个没有那个 telnet

657
00:24:31,000 --> 00:24:32,000
好像曾经有啊

658
00:24:32,000 --> 00:24:32,000
云路有啊

659
00:24:32,000 --> 00:24:33,000
我也忘了

660
00:24:33,000 --> 00:24:34,000
但

661
00:24:34,000 --> 00:24:34,000
不会吧

662
00:24:34,000 --> 00:24:36,000
真的假的

663
00:24:36,000 --> 00:24:36,000
对

664
00:24:38,000 --> 00:24:40,000
当然你跟学校有关

665
00:24:40,000 --> 00:24:44,000
因为我最开始在那个校区是一个被后来被合并的校区

666
00:24:44,000 --> 00:24:46,000
所以他本身的基建并没有很多的

667
00:24:46,000 --> 00:24:46,000
不是亲

668
00:24:46,000 --> 00:24:49,000
不是亲生子爹不爱是吧

669
00:24:49,000 --> 00:24:49,000
对

670
00:24:49,000 --> 00:24:50,000
对

671
00:24:50,000 --> 00:24:50,000
好吧

672
00:24:50,000 --> 00:24:52,000
两个疼

673
00:24:52,000 --> 00:24:54,000
摸摸头摸摸头

674
00:24:54,000 --> 00:24:56,000
不见我我上学的时候

675
00:24:56,000 --> 00:24:58,000
校园我还是蛮普及的

676
00:24:58,000 --> 00:25:00,000
起码第一年的时候

677
00:25:01,000 --> 00:25:02,000
嗯

678
00:25:02,000 --> 00:25:03,000
校区是新的

679
00:25:03,000 --> 00:25:04,000
在珠海那边嘛

680
00:25:04,000 --> 00:25:07,000
然后房宿舍也是新的

681
00:25:07,000 --> 00:25:09,000
校园网都还接的可以摆照接住吧

682
00:25:09,000 --> 00:25:09,000
应该是

683
00:25:10,000 --> 00:25:13,000
然后但出出出校区就起码无比了

684
00:25:13,000 --> 00:25:15,000
因为出口带宽比较窄

685
00:25:15,000 --> 00:25:16,000
但是在校区校园

686
00:25:16,000 --> 00:25:18,000
内部的话有各种服务器啊

687
00:25:18,000 --> 00:25:20,000
有机房啊

688
00:25:20,000 --> 00:25:21,000
然后内部资源互相访问啊

689
00:25:21,000 --> 00:25:27,000
当时用什么飞鸽传输 QQ 内部就是各种内网传文件的工具用的还蛮火的

690
00:25:27,000 --> 00:25:30,000
然后电子邮件用的也是应该是蛮多的

691
00:25:30,000 --> 00:25:33,000
然后就拿你看你那个时候也用口口传的

692
00:25:33,000 --> 00:25:40,000
这样的会有对也会有那个时候哥哥好像有出那个群组的功能吗

693
00:25:40,000 --> 00:25:44,000
那个时候就是就在学校里面发一些东西还是可以

694
00:25:44,000 --> 00:25:45,000
但是用邮件的也不少

695
00:25:45,000 --> 00:25:46,000
就可能有三个字的功能嘛

696
00:25:46,000 --> 00:25:48,000
三分之一用邮件三分之二用 QQ 吧

697
00:25:48,000 --> 00:25:50,000
大概是那个不对

698
00:25:50,000 --> 00:25:52,000
应该是就小文件哈

699
00:25:52,000 --> 00:25:56,000
三分之一用邮件三分之二用 QQ 大文件的话可能还是本地什么

700
00:25:56,000 --> 00:25:58,000
就有个叫飞鸽传输的还比较多一些

701
00:25:59,000 --> 00:26:00,000
没有

702
00:26:00,000 --> 00:26:06,000
对然后然后那个就还有还有一个飞鸽传输和那个就是 FTP

703
00:26:06,000 --> 00:26:07,000
就校园内网的 FTP

704
00:26:07,000 --> 00:26:09,000
对我们有一个公众网 FTP

705
00:26:09,000 --> 00:26:11,000
对然后就是上次我说那个故事嘛

706
00:26:11,000 --> 00:26:16,000
有个哥们在自己的那个 PC 上面搞了一个开了个 FTP server

707
00:26:16,000 --> 00:26:19,000
然后我们下开放毛片资源共享吧

708
00:26:19,000 --> 00:26:22,000
对对对这个这些传说都是我们听说的

709
00:26:22,000 --> 00:26:24,000
就像也不是听说我在浙大也见过他们那边的

710
00:26:24,000 --> 00:26:25,000
啊

711
00:26:25,000 --> 00:26:29,000
这个 APN Ad hoc 共享网络是多么的昌盛的

712
00:26:29,000 --> 00:26:30,000
我们学校从来没有发生过

713
00:26:30,000 --> 00:26:33,000
所以你看迅雷还是有群众基础的

714
00:26:33,000 --> 00:26:35,000
嗯

715
00:26:35,000 --> 00:26:38,000
对然后所以说嘛

716
00:26:38,000 --> 00:26:41,000
我就说你如果邮件的需求还是去等一下

717
00:26:41,000 --> 00:26:43,000
那你那你们毕业之后不用邮件吗

718
00:26:43,000 --> 00:26:44,000
在工作的时候

719
00:26:45,000 --> 00:26:46,000
毕业之后当然不用了嘛

720
00:26:46,000 --> 00:26:48,000
你平很多我我毕业就出国了

721
00:26:48,000 --> 00:26:50,000
你当然是一直用邮件

722
00:26:50,000 --> 00:26:52,000
对我的印象就是说哪怕毕业之后

723
00:26:52,000 --> 00:26:53,000
那我当然读商科嘛

724
00:26:53,000 --> 00:26:57,000
就是很多同学他们不管是申请工作简历也好

725
00:26:57,000 --> 00:27:01,000
还是说日常这个同事之间或者跟客户之间沟通也好

726
00:27:01,000 --> 00:27:03,000
他们用邮件的情况还是蛮多的

727
00:27:03,000 --> 00:27:05,000
就 business business 嘛

728
00:27:05,000 --> 00:27:13,000
嗯所以我不觉得在起码我接触那群人里面邮件是一个很陌生的事情

729
00:27:14,000 --> 00:27:16,000
所以我就在想为什么会用 QQ 传

730
00:27:16,000 --> 00:27:16,000
带吗

731
00:27:16,000 --> 00:27:18,000
而不是用邮件发 diff

732
00:27:20,000 --> 00:27:22,000
可能跟那个工具链的教授有关系吧

733
00:27:22,000 --> 00:27:28,000
因为大学就至少我们就所谓的这种就是综合性大学而不是这个叫什么来的大专

734
00:27:28,000 --> 00:27:34,000
他可能会偏向于说理论多一些对这个工具的就比较什么说呢

735
00:27:34,000 --> 00:27:35,000
比较看不起哈

736
00:27:35,000 --> 00:27:41,000
但其实如果 visual studio 有一个一键把 diff 导出为文文文件的功能

737
00:27:41,000 --> 00:27:43,000
我想也许会用的人多一点

738
00:27:43,000 --> 00:27:44,000
I doubt it

739
00:27:45,000 --> 00:27:46,000
不可能为这种问题而有用的啊

740
00:27:46,000 --> 00:27:48,000
这种事情怎么可能发生的未然

741
00:27:48,000 --> 00:27:49,000
是不是我也觉得是这样

742
00:27:49,000 --> 00:27:53,000
所以还是一个其实 cloneline 很故意的争端嘛

743
00:27:53,000 --> 00:27:54,000
就这个分分歧

744
00:27:55,000 --> 00:28:00,000
然后碰巧大多数人可能选择的是这个 windows 平台嘛

745
00:28:00,000 --> 00:28:03,000
所以路径依赖对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对对

746
00:28:04,000 --> 00:28:08,000
所以这位同学不用特别的在意这个的什么工具�的事情

747
00:28:08,000 --> 00:28:10,000
我通常遇到两个比较龟毛用

748
00:28:10,000 --> 00:28:12,000
那个 client 那个 command line 的人

749
00:28:12,000 --> 00:28:13,000
哈哈

750
00:28:13,000 --> 00:28:14,000
对

751
00:28:14,000 --> 00:28:16,000
然后如果你有志于继续发展的话呢

752
00:28:16,000 --> 00:28:18,000
将来其实你也会

753
00:28:19,000 --> 00:28:20,000
呃

754
00:28:20,000 --> 00:28:22,000
用该用的东西

755
00:28:22,000 --> 00:28:25,000
谁谁年轻的时候没有荒唐过不是

756
00:28:26,000 --> 00:28:27,000
ok

757
00:28:28,000 --> 00:28:29,000
ok 呃

758
00:28:29,000 --> 00:28:31,000
另外大车想问一个不相关的问题

759
00:28:31,000 --> 00:28:33,000
热老师接着念他的碗筷吗

760
00:28:33,000 --> 00:28:34,000
这里是对

761
00:28:34,000 --> 00:28:35,000
热老师

762
00:28:36,000 --> 00:28:36,000
呃

763
00:28:36,000 --> 00:28:38,000
提到自己在不同网站的账号

764
00:28:38,000 --> 00:28:39,000
是用不同邮箱注册的

765
00:28:39,000 --> 00:28:40,000
我自己也想效仿

766
00:28:40,000 --> 00:28:42,000
但不清楚该如何管理

767
00:28:42,000 --> 00:28:44,000
以及如何选择个人邮箱的服务商

768
00:28:44,000 --> 00:28:47,000
嗯很多账号似乎不能更改

769
00:28:47,000 --> 00:28:48,000
有号邮箱

770
00:28:48,000 --> 00:28:50,000
那热老师都是重新注册的吗

771
00:28:50,000 --> 00:28:52,000
望赐教不胜感激

772
00:28:52,000 --> 00:28:54,000
嗯好吧请赐教

773
00:28:54,000 --> 00:28:58,000
如何选择个人由个人邮箱服务商

774
00:28:58,000 --> 00:28:59,000
很简单的不用选了就 gmail

775
00:29:01,000 --> 00:29:02,000
因为 gmail 有个那个 hack

776
00:29:02,000 --> 00:29:04,000
就是比如说假设

777
00:29:04,000 --> 00:29:05,000
你的这个

778
00:29:05,000 --> 00:29:07,000
gmail 账号是 for

779
00:29:07,000 --> 00:29:08,000
at gmail

780
00:29:08,000 --> 00:29:09,000
点 com 哈

781
00:29:09,000 --> 00:29:11,000
然后你用 for 一个加号

782
00:29:11,000 --> 00:29:13,000
后面是比如说 bar

783
00:29:13,000 --> 00:29:14,000
at gmail.com

784
00:29:14,000 --> 00:29:15,000
发到这个地址的

785
00:29:15,000 --> 00:29:17,000
还是会进到你 for 的那个邮箱里面去

786
00:29:17,000 --> 00:29:19,000
然后你说 for 加这个 spam

787
00:29:20,000 --> 00:29:22,000
at gmail.com

788
00:29:22,000 --> 00:29:23,000
也是会进到你 for 你们

789
00:29:23,000 --> 00:29:23,000
就加号里面

790
00:29:23,000 --> 00:29:26,000
就填任何东西都会进到你的那个邮箱里面去

791
00:29:26,000 --> 00:29:27,000
就是一个 hack

792
00:29:27,000 --> 00:29:29,000
所以你注册的时候就只需要填

793
00:29:29,000 --> 00:29:30,000
for 然后加

794
00:29:30,000 --> 00:29:32,000
加号任何随机生名字

795
00:29:33,000 --> 00:29:35,000
或者是你随机随机生成的一个代代码

796
00:29:35,000 --> 00:29:36,000
如果你不想被人猜出来的话

797
00:29:37,000 --> 00:29:37,000
对对

798
00:29:37,000 --> 00:29:41,000
然后你再下一次在 spam 里面看到

799
00:29:41,000 --> 00:29:44,000
哦是附加上比如说

800
00:29:44,000 --> 00:29:45,000
美团给你发

801
00:29:45,000 --> 00:29:46,000
哈哈哈

802
00:29:48,000 --> 00:29:50,000
某网站给你发的垃圾邮件

803
00:29:50,000 --> 00:29:52,000
你就知道这个网站把你的邮件卖了

804
00:29:52,000 --> 00:29:53,000
对对不过呢

805
00:29:53,000 --> 00:29:55,000
这东西也有点缺陷

806
00:29:55,000 --> 00:29:57,000
就是说有一些这个网站的那个邮件

807
00:29:57,000 --> 00:29:58,000
地址的这个验证

808
00:29:59,000 --> 00:30:02,000
那个证则表达是是不支持前面有加号的

809
00:30:03,000 --> 00:30:05,000
他会说你这个不是一个合法的邮件地址

810
00:30:06,000 --> 00:30:06,000
没错因为一个合法的邮件地址

811
00:30:06,000 --> 00:30:07,000
是不支持前面有加号的

812
00:30:07,000 --> 00:30:10,000
你的证则表达是是非常非常难以写出来

813
00:30:11,000 --> 00:30:13,000
其实是证则表达是不能表达出来一个合法的

814
00:30:13,000 --> 00:30:15,000
就不不错错了

815
00:30:15,000 --> 00:30:18,000
证则表达甚至于法限制了

816
00:30:18,000 --> 00:30:21,000
他不能表达所有可能邮件地址

817
00:30:21,000 --> 00:30:24,000
ok 然后因为这个大部分人对对

818
00:30:24,000 --> 00:30:27,000
在写一个邮件判断的时候

819
00:30:27,000 --> 00:30:29,000
就写一个非常难易于的判断

820
00:30:30,000 --> 00:30:32,000
而这种判断就会导致一个明明

821
00:30:32,000 --> 00:30:33,000
valid 的邮件

822
00:30:33,000 --> 00:30:35,000
比如说附加 bar at gmail.com

823
00:30:35,000 --> 00:30:37,000
对比如说比如说那个邮件的

824
00:30:37,000 --> 00:30:39,000
前面那部分就邮件地址前面

825
00:30:39,000 --> 00:30:41,000
at 符号前面的部分就可以是中文

826
00:30:42,000 --> 00:30:45,000
但是很多人说这个没见过吗

827
00:30:45,000 --> 00:30:46,000
不合法吗对吧

828
00:30:46,000 --> 00:30:46,000
他觉得不合法

829
00:30:46,000 --> 00:30:49,000
他就说限制前面部分整的是 a 到 z

830
00:30:49,000 --> 00:30:50,000
0 到 9 横线

831
00:30:50,000 --> 00:30:53,000
呃呃减呃不横线和下滑线

832
00:30:53,000 --> 00:30:55,000
然后再就是至少一个对吧

833
00:30:56,000 --> 00:30:59,000
这其实就就很简单粗暴吗

834
00:30:59,000 --> 00:31:00,000
但是你遇到了你也没办法

835
00:31:00,000 --> 00:31:02,000
你也不可能说你每个真的遇到就去改

836
00:31:02,000 --> 00:31:05,000
但是所以怎么解决这个问题你就有了

837
00:31:05,000 --> 00:31:07,000
像我们这么这么高阶用户怎么可能

838
00:31:07,000 --> 00:31:09,000
会满足于用 gmail 这种后续的域名呢

839
00:31:09,000 --> 00:31:10,000
对吧

840
00:31:10,000 --> 00:31:11,000
那你自己注册一个域名吧

841
00:31:12,000 --> 00:31:13,000
然后你可以找一个服务商

842
00:31:13,000 --> 00:31:15,000
比如说那个 google apps

843
00:31:15,000 --> 00:31:17,000
你可以把那个 wild card

844
00:31:17,000 --> 00:31:19,000
wild card

845
00:31:19,000 --> 00:31:21,000
域名打开就是简单说信号吗

846
00:31:21,000 --> 00:31:24,000
只要前面服对通配服就发到任何

847
00:31:25,000 --> 00:31:27,000
呃 at 你邮件

848
00:31:28,000 --> 00:31:30,000
at 你域名的邮件

849
00:31:30,000 --> 00:31:32,000
都会进入到你指定的一个邮箱

850
00:31:33,000 --> 00:31:35,000
也可以这样你就有无限数量邮箱

851
00:31:35,000 --> 00:31:35,000
可以用了吗

852
00:31:35,000 --> 00:31:36,000
你想用什么用什么

853
00:31:37,000 --> 00:31:40,000
嗯然后他提到说很多账号

854
00:31:40,000 --> 00:31:41,000
似乎不能更改邮箱

855
00:31:41,000 --> 00:31:43,000
其实大部分是可以改的吧

856
00:31:43,000 --> 00:31:46,000
你直接不能改的现在都比较少了

857
00:31:46,000 --> 00:31:48,000
比如我们目前为这吐槽对的就是微博了

858
00:31:48,000 --> 00:31:49,000
这变态啊为什么不能改邮箱

859
00:31:49,000 --> 00:31:52,000
我像掉了呢或者换工作了呢对吧

860
00:31:52,000 --> 00:31:54,000
嗯嗯嗯对

861
00:31:55,000 --> 00:31:58,000
所以我是不是重新注册的我不用啊

862
00:31:58,000 --> 00:31:59,000
我因为我注册的时候

863
00:31:59,000 --> 00:32:01,000
就是用的这种方法做的吗

864
00:32:01,000 --> 00:32:03,000
然后遇到那些不能改的

865
00:32:03,000 --> 00:32:06,000
哎就特事特办吧

866
00:32:07,000 --> 00:32:10,000
反正瑞老师的邮箱就是

867
00:32:10,000 --> 00:32:13,000
随机生成随随便随便发什么都可以

868
00:32:13,000 --> 00:32:14,000
哈哈哈对

869
00:32:15,000 --> 00:32:16,000
ok

870
00:32:16,000 --> 00:32:19,000
今天的这个听众反馈环节到这里结束

871
00:32:19,000 --> 00:32:22,000
我们现在进入新闻新闻时间

872
00:32:22,000 --> 00:32:25,000
是此处插入新闻联播片头曲

873
00:32:25,000 --> 00:32:26,000
咚咚咚咚咚

874
00:32:27,000 --> 00:32:28,000
咚咚咚

875
00:32:28,000 --> 00:32:29,000
其实我好多年没看的还是这个曲子吗

876
00:32:29,000 --> 00:32:30,000
应该不一样了吧

877
00:32:30,000 --> 00:32:31,000
应该是应该是吧

878
00:32:31,000 --> 00:32:33,000
这我可能从单

879
00:32:33,000 --> 00:32:35,000
这是不是中国中国境内

880
00:32:35,000 --> 00:32:37,000
除了国歌之外第二眼

881
00:32:37,000 --> 00:32:37,000
单纯的

882
00:32:37,000 --> 00:32:40,000
第二元第二元素的音乐

883
00:32:41,000 --> 00:32:44,000
哈哈哈第一眼素什么国歌国歌对啊

884
00:32:44,000 --> 00:32:46,000
啊不一定还有解放军进行曲是吗

885
00:32:46,000 --> 00:32:47,000
对

886
00:32:47,000 --> 00:32:49,000
嗯啊难说

887
00:32:49,000 --> 00:32:50,000
top 会吧至少对

888
00:32:51,000 --> 00:32:51,000
嗯嗯

889
00:32:52,000 --> 00:32:54,000
呃新闻 number one

890
00:32:54,000 --> 00:32:55,000
啊最近出了一个

891
00:32:56,000 --> 00:32:58,000
就是 ios 上出了一个很好用的

892
00:32:58,000 --> 00:32:59,000
网络调试工具

893
00:32:59,000 --> 00:33:01,000
哎怎么这么说了

894
00:33:01,000 --> 00:33:04,000
叫 search s u r g e

895
00:33:04,000 --> 00:33:07,000
他除了能够列出你的程

896
00:33:07,000 --> 00:33:09,000
你也的都是 naive

897
00:33:09,000 --> 00:33:36,000
你 nécess 去哪里

898
00:33:36,000 --> 00:33:38,000
多念轻生吧

899
00:33:38,000 --> 00:33:39,000
刘亚成吧

900
00:33:39,000 --> 00:33:40,000
可能是

901
00:33:40,000 --> 00:33:41,000
然后他在 media

902
00:33:41,000 --> 00:33:43,000
median 上面

903
00:33:43,000 --> 00:33:44,000
这个网站发了一篇文章

904
00:33:44,000 --> 00:33:46,000
讲 search 的原理与实现

905
00:33:46,000 --> 00:33:48,000
但这个大致可以说一下

906
00:33:48,000 --> 00:33:49,000
就是它是基于

907
00:33:49,000 --> 00:33:54,000
iOS 9 和 OSX 10.11 吧

908
00:33:54,000 --> 00:33:56,000
应该里面出现了一个新特性

909
00:33:56,000 --> 00:33:58,000
叫做 network extension

910
00:33:58,000 --> 00:34:00,000
就是做了一些

911
00:34:00,000 --> 00:34:02,000
底层的网络

912
00:34:02,000 --> 00:34:05,000
网络的一些处理吧

913
00:34:05,000 --> 00:34:07,000
然后他在这篇文章里面

914
00:34:07,000 --> 00:34:09,000
大致的描述了一下

915
00:34:09,000 --> 00:34:11,000
search 的主要的构成部件呀

916
00:34:11,000 --> 00:34:12,000
还有它里面的一些

917
00:34:12,000 --> 00:34:13,000
每个部件是干嘛用的

918
00:34:13,000 --> 00:34:14,000
就是如果说

919
00:34:14,000 --> 00:34:17,000
你对这个东西有兴趣

920
00:34:17,000 --> 00:34:17,000
知道它能

921
00:34:17,000 --> 00:34:19,000
想知道它能干嘛

922
00:34:19,000 --> 00:34:20,000
知道它原理的话

923
00:34:20,000 --> 00:34:21,000
这是一篇非常

924
00:34:21,000 --> 00:34:23,000
很好的一个文章

925
00:34:23,000 --> 00:34:24,000
推荐大家去阅读一下

926
00:34:24,000 --> 00:34:25,000
当然了

927
00:34:25,000 --> 00:34:27,000
顺便也顺手给 search

928
00:34:27,000 --> 00:34:28,000
打一个广告

929
00:34:28,000 --> 00:34:28,000
毕竟是咱们果然

930
00:34:28,000 --> 00:34:29,000
自己写的一个

931
00:34:29,000 --> 00:34:31,000
很有用的工具对吧

932
00:34:31,000 --> 00:34:33,000
所以 search 跟 VPN 的区别在

933
00:34:33,000 --> 00:34:34,000
哦

934
00:34:34,000 --> 00:34:35,000
四年

935
00:34:35,000 --> 00:34:37,000
还是问了这个问题

936
00:34:37,000 --> 00:34:38,000
search 是一个通用的

937
00:34:38,000 --> 00:34:41,000
网络层的一个工具

938
00:34:41,000 --> 00:34:42,000
然后实现 VPN 是其中

939
00:34:42,000 --> 00:34:44,000
它一部分的功能

940
00:34:44,000 --> 00:34:46,000
大概我可以这么解释吧

941
00:34:46,000 --> 00:34:47,000
那么它实现的 VPN 跟

942
00:34:47,000 --> 00:34:50,000
比如说从某网站买来的 VPN

943
00:34:50,000 --> 00:34:51,000
有什么差别

944
00:34:51,000 --> 00:34:53,000
它可能跟就是 iOS 9 里面

945
00:34:53,000 --> 00:34:55,000
它能做到就是说这个

946
00:34:55,000 --> 00:34:57,000
局部代理

947
00:34:57,000 --> 00:34:59,000
因为过去是全局代理嘛

948
00:34:59,000 --> 00:35:00,000
你要不要用 VPN

949
00:35:00,000 --> 00:35:02,000
要不不用 VPN 对吧

950
00:35:02,000 --> 00:35:02,000
对

951
00:35:02,000 --> 00:35:03,000
但现在它用 search 这个方式

952
00:35:03,000 --> 00:35:05,000
它可以做更精细的控制

953
00:35:05,000 --> 00:35:08,000
比如说某些 IP 段用 VPN

954
00:35:08,000 --> 00:35:10,000
某些 IP 段不用 VPN

955
00:35:10,000 --> 00:35:12,000
或者有些某些域名用 VPN

956
00:35:12,000 --> 00:35:13,000
某些域名不走 VPN

957
00:35:13,000 --> 00:35:15,000
就这个规则是可以很灵活的

958
00:35:15,000 --> 00:35:17,000
而且你不用一直去手动维护

959
00:35:17,000 --> 00:35:18,000
这个 VPN

960
00:35:18,000 --> 00:35:19,000
对对对

961
00:35:19,000 --> 00:35:22,000
然后当然这么好的应用呢

962
00:35:22,000 --> 00:35:23,000
我们自然而然要给大家打广告

963
00:35:23,000 --> 00:35:24,000
推荐一下了

964
00:35:24,000 --> 00:35:25,000
对吧

965
00:35:25,000 --> 00:35:27,000
然后当然这个 search 不算便宜

966
00:35:27,000 --> 00:35:29,000
在 app store 里面卖 10 刀

967
00:35:29,000 --> 00:35:30,000
算是

968
00:35:30,000 --> 00:35:31,000
固有所值

969
00:35:31,000 --> 00:35:32,000
对比较贵的一个应用吧

970
00:35:32,000 --> 00:35:34,000
但是考虑到这个东西的复杂性

971
00:35:34,000 --> 00:35:35,000
和这个

972
00:35:35,000 --> 00:35:37,000
有用性

973
00:35:37,000 --> 00:35:39,000
推荐大家支持一下

974
00:35:39,000 --> 00:35:40,000
我们这个国产开发者的

975
00:35:40,000 --> 00:35:42,000
这个一个小工具吧

976
00:35:42,000 --> 00:35:43,000
对

977
00:35:43,000 --> 00:35:44,000
在墙的一面

978
00:35:44,000 --> 00:35:44,000
它不是一个

979
00:35:44,000 --> 00:35:45,000
我们没有收到赞助啊

980
00:35:45,000 --> 00:35:46,000
但这是完全

981
00:35:46,000 --> 00:35:48,000
纯有情

982
00:35:48,000 --> 00:35:49,000
对

983
00:35:49,000 --> 00:35:51,000
也是希望说

984
00:35:51,000 --> 00:35:53,000
有更多的开发者

985
00:35:53,000 --> 00:35:54,000
能够提供一些更好的工具

986
00:35:54,000 --> 00:35:57,000
帮助我们实现一些日常的一些

987
00:35:57,000 --> 00:35:58,000
业务吧

988
00:35:58,000 --> 00:36:02,000
下一条新闻是

989
00:36:02,000 --> 00:36:04,000
一个挺好玩的东西

990
00:36:04,000 --> 00:36:04,000
叫做一个

991
00:36:04,000 --> 00:36:05,000
新的

992
00:36:05,000 --> 00:36:07,000
就是这个图片格式

993
00:36:07,000 --> 00:36:08,000
图像格式

994
00:36:08,000 --> 00:36:11,000
叫做 free lossless image format

995
00:36:11,000 --> 00:36:12,000
fleet

996
00:36:12,000 --> 00:36:14,000
无损的格式的话

997
00:36:14,000 --> 00:36:16,000
也就 png 是现在主流的应用的

998
00:36:16,000 --> 00:36:18,000
无损压缩的格式

999
00:36:18,000 --> 00:36:19,000
然后这个叫做

1000
00:36:19,000 --> 00:36:20,000
fliff

1001
00:36:20,000 --> 00:36:22,000
fliff

1002
00:36:22,000 --> 00:36:24,000
free lossless image format

1003
00:36:24,000 --> 00:36:26,000
它的牛逼之处在于

1004
00:36:26,000 --> 00:36:29,000
它压出来的文件比 png 要小

1005
00:36:29,000 --> 00:36:31,000
嗯哼

1006
00:36:31,000 --> 00:36:34,000
它甚至连比一个

1007
00:36:34,000 --> 00:36:35,000
呃

1008
00:36:35,000 --> 00:36:36,000
很多东西啊

1009
00:36:36,000 --> 00:36:41,000
它比 png 小大概 2 30%

1010
00:36:41,000 --> 00:36:46,000
然后比其他的那些无损格式也跑也是大概小最多 30%左右吧

1011
00:36:46,000 --> 00:36:48,000
就是还挺有意思的

1012
00:36:48,000 --> 00:36:49,000
因为因为无损的话

1013
00:36:49,000 --> 00:36:51,000
其实压缩的比例不是太高吗

1014
00:36:51,000 --> 00:36:55,000
35%smaller than typicalpng files

1015
00:36:55,000 --> 00:36:56,000
嗯

1016
00:36:56,000 --> 00:36:57,000
对

1017
00:36:57,000 --> 00:36:58,000
好吧

1018
00:36:58,000 --> 00:37:02,000
你说在网络越来越快的时代

1019
00:37:02,000 --> 00:37:04,000
呃压缩变小有

1020
00:37:04,000 --> 00:37:06,000
有非常大的意义吗

1021
00:37:06,000 --> 00:37:07,000
有啊

1022
00:37:07,000 --> 00:37:09,000
特别是在那个移动设备上面

1023
00:37:09,000 --> 00:37:12,000
这个带宽还是不太够的

1024
00:37:12,000 --> 00:37:14,000
因为主要网络情况不稳定嘛

1025
00:37:14,000 --> 00:37:17,000
你说在家用宽带可能体会不到这种区别

1026
00:37:17,000 --> 00:37:20,000
但是你在这个 3 g 4 g 上

1027
00:37:20,000 --> 00:37:22,000
特殊信号不太好的时候啊

1028
00:37:22,000 --> 00:37:23,000
能小一点

1029
00:37:23,000 --> 00:37:25,000
还是挺有用的

1030
00:37:25,000 --> 00:37:26,000
而且对于这个

1031
00:37:26,000 --> 00:37:30,000
对于这个就是 cdn 来说就直接是钱啊

1032
00:37:30,000 --> 00:37:32,000
因为现在很多这个比如说图片网站

1033
00:37:32,000 --> 00:37:33,000
它的那个要花一分钱的

1034
00:37:33,000 --> 00:37:34,000
那个要花也很大一部分钱

1035
00:37:34,000 --> 00:37:36,000
到那个 cdn 的流量上面去嘛

1036
00:37:36,000 --> 00:37:37,000
是没错

1037
00:37:37,000 --> 00:37:42,000
如果如果说你按那个能够平平小个 20%的话

1038
00:37:42,000 --> 00:37:43,000
等于你那个 cdn 的非常大了

1039
00:37:43,000 --> 00:37:45,000
大了八折八折了

1040
00:37:45,000 --> 00:37:47,000
这还是很大一笔钱的

1041
00:37:47,000 --> 00:37:48,000
游戏也是

1042
00:37:48,000 --> 00:37:53,000
但这种东西游戏里面的材质采用更小的

1043
00:37:53,000 --> 00:37:56,000
呃更高压缩比压缩算法的话

1044
00:37:56,000 --> 00:37:59,000
整个游戏栏中文件就小了很多

1045
00:37:59,000 --> 00:38:01,000
没错

1046
00:38:01,000 --> 00:38:02,000
呃

1047
00:38:02,000 --> 00:38:06,000
但这种问题的麻烦之处在于它是一个新的格式嘛

1048
00:38:06,000 --> 00:38:08,000
可能这个就是 compatibility 不是很好

1049
00:38:08,000 --> 00:38:11,000
就是设备的支持都会有点问题

1050
00:38:11,000 --> 00:38:15,000
之前那个 google 不是做了个叫做 webp 的格式吗

1051
00:38:15,000 --> 00:38:16,000
嗯

1052
00:38:16,000 --> 00:38:18,000
就用于替代 jpg 和 png

1053
00:38:18,000 --> 00:38:22,000
因为 webp 它是可以从无损到有损之间是可以调的

1054
00:38:22,000 --> 00:38:24,000
然后就出现一个问题

1055
00:38:24,000 --> 00:38:26,000
就是比如说你用这个 chrome 浏览器

1056
00:38:26,000 --> 00:38:28,000
访问 google 的很多这个网站

1057
00:38:28,000 --> 00:38:32,000
它会默认去给你呃提供这个 webp 格式的这个图片

1058
00:38:32,000 --> 00:38:35,000
那么你点这个右键另存为图片的时候

1059
00:38:35,000 --> 00:38:39,000
就会发现哎存下的文件其他其他东西打不开

1060
00:38:39,000 --> 00:38:40,000
那你就比较尴尬了

1061
00:38:40,000 --> 00:38:42,000
你想在其他地方里面用的话

1062
00:38:42,000 --> 00:38:43,000
对吧

1063
00:38:43,000 --> 00:38:45,000
那其实 flash 也有这个问题啊

1064
00:38:45,000 --> 00:38:46,000
就是没错

1065
00:38:46,000 --> 00:38:47,000
对就会有同样的问题

1066
00:38:47,000 --> 00:38:48,000
啊

1067
00:38:48,000 --> 00:38:52,000
所以我觉得可能它它的应用场景还是在比如说你写这个 iOS

1068
00:38:52,000 --> 00:38:55,000
或者是这个安卓的这个嗯 app 的时候

1069
00:38:55,000 --> 00:38:57,000
你可以控制解码器那一段嘛

1070
00:38:57,000 --> 00:38:58,000
嗯

1071
00:38:58,000 --> 00:39:02,000
你说你为了减小你这个资源资源文件的呃大小

1072
00:39:02,000 --> 00:39:05,000
那说你可以用这种自定义的这种格式

1073
00:39:05,000 --> 00:39:08,000
然后你自己再做个自己做一个解压的嘛

1074
00:39:08,000 --> 00:39:10,000
但这有引入另外一个问题了

1075
00:39:10,000 --> 00:39:13,000
你说一般说这个像 png 这种标准格式的

1076
00:39:13,000 --> 00:39:16,000
就是比较流行的格式的这个解码器可能系统自带了

1077
00:39:16,000 --> 00:39:17,000
对吧

1078
00:39:17,000 --> 00:39:18,000
对不用自己再写一个

1079
00:39:18,000 --> 00:39:19,000
但如果你有 flif 的话

1080
00:39:19,000 --> 00:39:22,000
你还是再搭一个这个 de-coder 进去

1081
00:39:22,000 --> 00:39:23,000
或者再等 50 年

1082
00:39:23,000 --> 00:39:24,000
对

1083
00:39:24,000 --> 00:39:28,000
这就可能那个就有一点问题了

1084
00:39:28,000 --> 00:39:29,000
对

1085
00:39:29,000 --> 00:39:30,000
嗯

1086
00:39:30,000 --> 00:39:31,000
下一则新闻是

1087
00:39:31,000 --> 00:39:34,000
163 就网易邮箱好像最近出大事了

1088
00:39:34,000 --> 00:39:36,000
吴涛你知道怎么回事吗

1089
00:39:36,000 --> 00:39:37,000
嗯有很多朋友都中招

1090
00:39:37,000 --> 00:39:42,000
就是啊但是具体的情况我们其实并不是并不很清楚

1091
00:39:42,000 --> 00:39:46,000
因为这是一次比较友善加引号的行为

1092
00:39:46,000 --> 00:39:53,000
就是呃在邮箱在这个事故发生的第一时间被厂商得到的通报

1093
00:39:53,000 --> 00:39:56,000
然后集中的具体的技术细节并没有被披露出来

1094
00:39:56,000 --> 00:39:59,000
当然如果你费心去找的话肯定是可以找到的

1095
00:39:59,000 --> 00:40:01,000
但我们两个没有费心去找

1096
00:40:01,000 --> 00:40:06,000
所以呃仅就知道的情况来看是 163.com

1097
00:40:06,000 --> 00:40:12,000
雷域名的免费邮箱被泄露了大概 1 亿

1098
00:40:12,000 --> 00:40:19,000
I repeat 1 亿个账号的的用户名和密码

1099
00:40:19,000 --> 00:40:20,000
当然密码不是明文

1100
00:40:20,000 --> 00:40:22,000
而是一个 md hash

1101
00:40:22,000 --> 00:40:23,000
md 5 hash

1102
00:40:23,000 --> 00:40:25,000
这不等于明文

1103
00:40:25,000 --> 00:40:26,000
没什么区别

1104
00:40:26,000 --> 00:40:28,000
呃就是去没有加 salt

1105
00:40:28,000 --> 00:40:29,000
这是最大的问题

1106
00:40:29,000 --> 00:40:30,000
就是

1107
00:40:30,000 --> 00:40:32,000
对对对就是又没加 salt

1108
00:40:32,000 --> 00:40:34,000
就是 md 5 的基本是等于明文了

1109
00:40:34,000 --> 00:40:35,000
没错

1110
00:40:35,000 --> 00:40:37,000
就如果各位不知道的话

1111
00:40:37,000 --> 00:40:42,000
那 md 5 md 5 虽然是一个 hashi 算法

1112
00:40:42,000 --> 00:40:45,000
虽然理论上是理论上是它它是单向的

1113
00:40:45,000 --> 00:40:50,000
但是如果你在网上比如搜啊 reverse md 5

1114
00:40:50,000 --> 00:40:52,000
就可以搜到一大堆彩虹表的网站

1115
00:40:52,000 --> 00:40:56,000
就是呃事先已经把 md 5 算出来

1116
00:40:56,000 --> 00:40:59,000
然后你输入一个 md 5 就可以找到那个对应的

1117
00:41:00,000 --> 00:41:02,000
原原来的明文的这么一个网站

1118
00:41:02,000 --> 00:41:05,000
就是就是这算什么叫做硕大无红

1119
00:41:05,000 --> 00:41:06,000
md 5 cracking as a service

1120
00:41:06,000 --> 00:41:07,000
对

1121
00:41:07,000 --> 00:41:08,000
没错

1122
00:41:08,000 --> 00:41:10,000
就是一个硕大无红的 dictionary

1123
00:41:10,000 --> 00:41:11,000
一个

1124
00:41:11,000 --> 00:41:13,000
硕大无红的 hashi 表

1125
00:41:13,000 --> 00:41:14,000
逆向 hashi 表

1126
00:41:14,000 --> 00:41:15,000
对

1127
00:41:15,000 --> 00:41:16,000
嗯

1128
00:41:16,000 --> 00:41:17,000
对

1129
00:41:17,000 --> 00:41:18,000
然后很多朋友就中招了

1130
00:41:18,000 --> 00:41:19,000
因为

1131
00:41:19,000 --> 00:41:20,000
嗯

1132
00:41:20,000 --> 00:41:25,000
163 作为一个历史在中文互联网世界历史最为悠久的

1133
00:41:25,000 --> 00:41:27,000
免费 web 邮件服务

1134
00:41:27,000 --> 00:41:30,000
并且迄今还在活跃的免费 web 邮件服务

1135
00:41:30,000 --> 00:41:33,000
是很多很多用户国内用户都在用的

1136
00:41:33,000 --> 00:41:34,000
嗯

1137
00:41:34,000 --> 00:41:36,000
可能没有 qq 多吧

1138
00:41:36,000 --> 00:41:37,000
但哎

1139
00:41:37,000 --> 00:41:40,000
没有 qq 是目前国内第一大的

1140
00:41:40,000 --> 00:41:41,000
没错

1141
00:41:41,000 --> 00:41:42,000
应该没有 qq 多

1142
00:41:42,000 --> 00:41:44,000
但是仍旧是非常大的用户群

1143
00:41:44,000 --> 00:41:50,000
因为呃那个时候 qq 还叫 i i o i c q 的时代

1144
00:41:50,000 --> 00:41:52,000
呃 163 就已经退出邮箱了

1145
00:41:52,000 --> 00:41:54,000
我还记得 163 是

1146
00:41:54,000 --> 00:41:57,000
当时中国电信最常见的拨号上网的号码

1147
00:41:57,000 --> 00:41:59,000
啊当然我一般都是拨 169

1148
00:41:59,000 --> 00:42:00,000
嘿嘿

1149
00:42:00,000 --> 00:42:03,000
163 的费用要有 169 高

1150
00:42:03,000 --> 00:42:04,000
是这样的

1151
00:42:04,000 --> 00:42:05,000
嗯

1152
00:42:05,000 --> 00:42:06,000
对 163 更贵

1153
00:42:06,000 --> 00:42:07,000
169 便宜一些

1154
00:42:07,000 --> 00:42:08,000
没错

1155
00:42:08,000 --> 00:42:11,000
但问题是但这这两这两个不是一回事

1156
00:42:11,000 --> 00:42:14,000
哈 169 的是这个 163 网易的 163 是 163.com

1157
00:42:14,000 --> 00:42:15,000
对

1158
00:42:15,000 --> 00:42:18,000
那你说那个 163 是电信是 163.net

1159
00:42:18,000 --> 00:42:20,000
不是我的意思是 163.com

1160
00:42:20,000 --> 00:42:22,000
为什么会被人记住

1161
00:42:22,000 --> 00:42:24,000
就是因为那个时候中国电信

1162
00:42:24,000 --> 00:42:26,000
呃用 163 作为上网号码

1163
00:42:26,000 --> 00:42:29,000
然后网易就非常机智的注册了 163.net

1164
00:42:29,000 --> 00:42:30,000
163.com

1165
00:42:30,000 --> 00:42:31,000
然后

1166
00:42:31,000 --> 00:42:32,000
他不是注册的

1167
00:42:32,000 --> 00:42:37,000
就是说他是丁三十很很从那里连连哄带骗弄来

1168
00:42:37,000 --> 00:42:38,000
对就太好吧

1169
00:42:38,000 --> 00:42:39,000
呃

1170
00:42:39,000 --> 00:42:41,000
那你 reference 他弄来了 163.com

1171
00:42:41,000 --> 00:42:42,000
对对对对

1172
00:42:42,000 --> 00:42:43,000
我弄死你

1173
00:42:43,000 --> 00:42:46,000
作为他的那个网易的主力域名

1174
00:42:46,000 --> 00:42:47,000
他当时还有好多

1175
00:42:47,000 --> 00:42:49,000
他有什么 126.com 的

1176
00:42:49,000 --> 00:42:50,000
对

1177
00:42:50,000 --> 00:42:51,000
什么 ye.net

1178
00:42:51,000 --> 00:42:52,000
对好像是这样

1179
00:42:52,000 --> 00:42:53,000
对

1180
00:42:53,000 --> 00:42:54,000
那他搞了一堆

1181
00:42:54,000 --> 00:42:55,000
一大堆

1182
00:42:55,000 --> 00:42:57,000
对他搞了一个邮箱服务集群

1183
00:42:57,000 --> 00:42:58,000
没错

1184
00:42:58,000 --> 00:43:00,000
但是非常非常会押宝的

1185
00:43:00,000 --> 00:43:03,000
就把鸡蛋分散的放在了

1186
00:43:03,000 --> 00:43:04,000
他买了很多篮子

1187
00:43:04,000 --> 00:43:07,000
拿来拿来尽可能的搜刮鸡蛋

1188
00:43:07,000 --> 00:43:10,000
但是 163.com 无论如何是被人

1189
00:43:10,000 --> 00:43:11,000
那作为铭记的一个人

1190
00:43:11,000 --> 00:43:13,000
因为那个时候你一上网就要播 163

1191
00:43:13,000 --> 00:43:18,000
然后你又 163.com 就非常理顺成章的 control 的

1192
00:43:18,000 --> 00:43:20,000
control 的 enter 就就进去了

1193
00:43:20,000 --> 00:43:21,000
对吧

1194
00:43:21,000 --> 00:43:22,000
对对对

1195
00:43:22,000 --> 00:43:27,000
当然了这个他们这个光辉的历史也成为他现在一个

1196
00:43:27,000 --> 00:43:29,000
光辉的历史变成了历史的包袱

1197
00:43:29,000 --> 00:43:30,000
对

1198
00:43:30,000 --> 00:43:33,000
现在因为就用户量这么大

1199
00:43:33,000 --> 00:43:35,000
他当时做那个什么网易通行证

1200
00:43:35,000 --> 00:43:37,000
还是把这个打通了

1201
00:43:37,000 --> 00:43:38,000
打通了

1202
00:43:38,000 --> 00:43:40,000
但是我不知道他们内部怎么样

1203
00:43:40,000 --> 00:43:42,000
但可以一个比较合理的猜测

1204
00:43:42,000 --> 00:43:45,000
是因为网易通行证是一个比较古老的系统

1205
00:43:45,000 --> 00:43:49,000
他可能比如说他以前依赖的像 md 5 单向

1206
00:43:49,000 --> 00:43:51,000
哈希不加盐的价格

1207
00:43:51,000 --> 00:43:52,000
他可能就改不过来了

1208
00:43:52,000 --> 00:43:53,000
对

1209
00:43:53,000 --> 00:43:56,000
那就给之后的安全造成了隐患

1210
00:43:56,000 --> 00:43:58,000
一切问题都是历史一个问题

1211
00:43:58,000 --> 00:43:59,000
是不是

1212
00:43:59,000 --> 00:44:04,000
这个有时候还是要狠下心来把这个 legacy 干掉的

1213
00:44:04,000 --> 00:44:08,000
因为当时因为之后的数据库里面的这一块

1214
00:44:08,000 --> 00:44:10,000
我自认为还挺安全的

1215
00:44:10,000 --> 00:44:11,000
我做的

1216
00:44:11,000 --> 00:44:12,000
原来如此

1217
00:44:12,000 --> 00:44:14,000
原来这一块是知乎

1218
00:44:14,000 --> 00:44:15,000
好吧

1219
00:44:15,000 --> 00:44:16,000
海口夸在这了

1220
00:44:16,000 --> 00:44:18,000
各位将来如果被脱裤的话

1221
00:44:18,000 --> 00:44:19,000
各位可以来找

1222
00:44:19,000 --> 00:44:20,000
我不看

1223
00:44:20,000 --> 00:44:24,000
我就可以明确的说知乎的数据密码是下万之后

1224
00:44:24,000 --> 00:44:25,000
再有一层 bcraft

1225
00:44:25,000 --> 00:44:26,000
哦

1226
00:44:26,000 --> 00:44:29,000
然后脱裤就脱裤吧

1227
00:44:29,000 --> 00:44:30,000
反正算不出密码来无所谓

1228
00:44:30,000 --> 00:44:31,000
哦

1229
00:44:31,000 --> 00:44:33,000
我只是搞他

1230
00:44:33,000 --> 00:44:36,000
所以我每次都很都很开心啊

1231
00:44:36,000 --> 00:44:39,000
那之后我不知道有没有被脱裤裤好

1232
00:44:39,000 --> 00:44:40,000
也可能有人拿过了

1233
00:44:40,000 --> 00:44:42,000
但是人病了是吧

1234
00:44:42,000 --> 00:44:43,000
脱回去也没用

1235
00:44:43,000 --> 00:44:44,000
对对燃病了吗

1236
00:44:44,000 --> 00:44:46,000
你解不出来有什么用呢

1237
00:44:46,000 --> 00:44:51,000
忽然之间这个耳机里传来了某种自豪感

1238
00:44:51,000 --> 00:44:54,000
哈哈哈

1239
00:44:54,000 --> 00:44:55,000
自豪感洋溢着

1240
00:44:55,000 --> 00:44:58,000
房间好吧好吧

1241
00:44:58,000 --> 00:45:05,000
那个下下一条新闻是这个 windows 7 这么老的系统还有什么问题

1242
00:45:05,000 --> 00:45:06,000
windows 7 老吗

1243
00:45:06,000 --> 00:45:11,000
很老了都八八点一九现在都十了

1244
00:45:11,000 --> 00:45:12,000
哦

1245
00:45:12,000 --> 00:45:13,000
哎没有没有九是吧

1246
00:45:13,000 --> 00:45:14,000
有九吗

1247
00:45:14,000 --> 00:45:15,000
没有九

1248
00:45:15,000 --> 00:45:16,000
我跳过了九

1249
00:45:16,000 --> 00:45:17,000
windows 7 8 9

1250
00:45:17,000 --> 00:45:19,000
七把九吃了

1251
00:45:19,000 --> 00:45:20,000
所以没有九

1252
00:45:20,000 --> 00:45:22,000
好吧

1253
00:45:22,000 --> 00:45:23,000
没有九啊

1254
00:45:23,000 --> 00:45:24,000
嗯

1255
00:45:24,000 --> 00:45:25,000
嗯

1256
00:45:25,000 --> 00:45:26,000
他出了什么问题

1257
00:45:26,000 --> 00:45:27,000
windows 7

1258
00:45:27,000 --> 00:45:30,000
windows 7 在前一阵子出了一个非常大的幺蛾子

1259
00:45:30,000 --> 00:45:38,000
就是一堆人发的这个比较听话老师与时俱进注重安全的 windows 用户

1260
00:45:38,000 --> 00:45:39,000
嗯

1261
00:45:39,000 --> 00:45:41,000
哈哈哈

1262
00:45:41,000 --> 00:45:43,000
把这个自动升级打开了

1263
00:45:43,000 --> 00:45:44,000
然后呃

1264
00:45:44,000 --> 00:45:47,000
猛然发现今天的自动升级有点不一样

1265
00:45:47,000 --> 00:45:50,000
就是那个标题是一串乱码

1266
00:45:50,000 --> 00:45:52,000
下载地址也是一串乱码

1267
00:45:52,000 --> 00:45:53,000
呃

1268
00:45:53,000 --> 00:45:56,000
补丁的这个内容描述更是一大堆了嘛

1269
00:45:56,000 --> 00:45:58,000
然后人们就开始慌张了

1270
00:45:58,000 --> 00:46:03,000
因为这个有些人是在补丁已经自动被打好之后才发现的

1271
00:46:03,000 --> 00:46:08,000
然后呃坊间留言四起就说啊 windows 已经被攻陷了

1272
00:46:08,000 --> 00:46:10,000
我们 everyone is doomed

1273
00:46:10,000 --> 00:46:14,000
然后这有这么严重吗

1274
00:46:14,000 --> 00:46:15,000
什么意思

1275
00:46:15,000 --> 00:46:18,000
就这个实际上到底你想怎么样

1276
00:46:18,000 --> 00:46:23,000
其最终结果其实是这个呃微软也找了一个替罪案啊

1277
00:46:23,000 --> 00:46:32,000
就是说啊我们一个搞测试的实习生把一个内部测试这个升级系统的布丁放了出来

1278
00:46:32,000 --> 00:46:33,000
这个布丁是完全无害的

1279
00:46:33,000 --> 00:46:35,000
就是一个就之所以是乱码

1280
00:46:35,000 --> 00:46:38,000
就是因为那些东西只是站位服务而已

1281
00:46:38,000 --> 00:46:40,000
所以实际上没有什么伤害

1282
00:46:40,000 --> 00:46:43,000
然后这个布丁也很快被从网站上撤掉了

1283
00:46:43,000 --> 00:46:45,000
所以他没有造成任何实际伤害

1284
00:46:45,000 --> 00:46:51,000
只不过呃这个 the moral of the story 就是这件事情带给我们的思考

1285
00:46:51,000 --> 00:46:53,000
就是如果这个

1286
00:46:53,000 --> 00:46:58,000
这件事情不甚是一个真正的实际发生了的

1287
00:46:58,000 --> 00:47:01,000
这个安全灾难的话呢

1288
00:47:01,000 --> 00:47:04,000
其后果可能是非常非常严重

1289
00:47:04,000 --> 00:47:09,000
所以现在要有有大面积有效的杀伤力

1290
00:47:09,000 --> 00:47:12,000
就是想办法把那个 windows 的 update 这个东西搞下来是吧

1291
00:47:12,000 --> 00:47:13,000
没错

1292
00:47:13,000 --> 00:47:16,000
如果你想要真正的让全世界陷入团伙的话呢

1293
00:47:16,000 --> 00:47:19,000
可以甚是把 windows 的 update 黑掉

1294
00:47:19,000 --> 00:47:21,000
这感觉是 skynet 要做的事情

1295
00:47:21,000 --> 00:47:23,000
说不定 skynet 已经做了

1296
00:47:23,000 --> 00:47:25,000
我们不知道而已

1297
00:47:25,000 --> 00:47:26,000
今天是万圣节

1298
00:47:26,000 --> 00:47:29,000
我们可以讲讲讲一点鬼故事

1299
00:47:29,000 --> 00:47:30,000
spooky 的东西吧

1300
00:47:30,000 --> 00:47:32,000
想想下这个世界

1301
00:47:32,000 --> 00:47:37,000
就我们所熟知的这个电计算机世界将以如何方式终结

1302
00:47:37,000 --> 00:47:39,000
哎错了错了

1303
00:47:39,000 --> 00:47:41,000
我们今天录制的时候是万圣节

1304
00:47:41,000 --> 00:47:42,000
发布的时候就不是啊

1305
00:47:42,000 --> 00:47:43,000
ok

1306
00:47:43,000 --> 00:47:44,000
嗯

1307
00:47:44,000 --> 00:47:45,000
好吧

1308
00:47:45,000 --> 00:47:46,000
已经过期了

1309
00:47:46,000 --> 00:47:47,000
无效

1310
00:47:47,000 --> 00:47:48,000
好忧伤

1311
00:47:48,000 --> 00:47:49,000
对

1312
00:47:49,000 --> 00:47:52,000
呃说这件事的一个主要的原因是因为

1313
00:47:52,000 --> 00:47:57,000
提一个点就是做我们就是听做这个系统设计也好

1314
00:47:57,000 --> 00:47:58,000
做价格也好

1315
00:47:58,000 --> 00:48:03,000
你永远永远要假设这个网络是不可靠不可信的

1316
00:48:03,000 --> 00:48:04,000
对

1317
00:48:04,000 --> 00:48:07,000
对那么你之后要做的一些事情就很重要了

1318
00:48:07,000 --> 00:48:08,000
比如说

1319
00:48:08,000 --> 00:48:14,000
你可以你要得假设你那个下回来的那个就是通过呃网络传回的文件是被搞过的

1320
00:48:14,000 --> 00:48:15,000
那你必须要还还验证嘛

1321
00:48:15,000 --> 00:48:17,000
你必须要有这个什么啊

1322
00:48:17,000 --> 00:48:20,000
verification 就是哈希通过哈希的方式也好

1323
00:48:20,000 --> 00:48:22,000
还是什么别的签名的方式也好

1324
00:48:22,000 --> 00:48:23,000
对吧

1325
00:48:23,000 --> 00:48:24,000
没错

1326
00:48:24,000 --> 00:48:25,000
你得有这么一个一个过程啊

1327
00:48:25,000 --> 00:48:26,000
永远不要说啊

1328
00:48:26,000 --> 00:48:29,000
我这个因为我这个文件是通过 https 下载的

1329
00:48:29,000 --> 00:48:30,000
所以他就没有问题了

1330
00:48:30,000 --> 00:48:31,000
嗯

1331
00:48:31,000 --> 00:48:32,000
很难讲

1332
00:48:34,000 --> 00:48:35,000
对但啊

1333
00:48:35,000 --> 00:48:40,000
其实反过来说这个信任链是一换套一换的

1334
00:48:40,000 --> 00:48:43,000
如果你说每一换都有可能出问题的话

1335
00:48:43,000 --> 00:48:51,000
那最终的结果就是回到我们上上期上上上期的那个呃口号就是 trust no one

1336
00:48:51,000 --> 00:48:52,000
一个人

1337
00:48:52,000 --> 00:48:56,000
那你可能连硬件都不能相信的

1338
00:48:56,000 --> 00:48:57,000
最后你要相信谁

1339
00:48:57,000 --> 00:48:59,000
你总要在一个地方终结说哦

1340
00:48:59,000 --> 00:49:01,000
这个地方我我没有办法

1341
00:49:01,000 --> 00:49:02,000
我只能选择相信

1342
00:49:02,000 --> 00:49:03,000
但

1343
00:49:03,000 --> 00:49:04,000
对

1344
00:49:04,000 --> 00:49:07,000
这没办法

1345
00:49:07,000 --> 00:49:11,000
但你能说尽可能但是你至少可以避免的情况下

1346
00:49:11,000 --> 00:49:15,000
这些非常明显的可能出幺蛾子的信源一定要加以警惕

1347
00:49:15,000 --> 00:49:16,000
没错

1348
00:49:16,000 --> 00:49:17,000
对

1349
00:49:17,000 --> 00:49:21,000
但是 windows 7 的 update 的这个就所谓 misfire 时间

1350
00:49:21,000 --> 00:49:26,000
也还是呃给我们提了个醒

1351
00:49:26,000 --> 00:49:32,000
就是这种单一的升级的源头

1352
00:49:32,000 --> 00:49:36,000
如果真的出了灾难是有可能非常非常非常灾难性的

1353
00:49:36,000 --> 00:49:38,000
打击好广啊

1354
00:49:38,000 --> 00:49:39,000
app store 被打中了

1355
00:49:39,000 --> 00:49:42,000
然后那个什么 apt 的 source 也被你 cut

1356
00:49:42,000 --> 00:49:47,000
对这就是为什么我们要提倡这个反托拉斯

1357
00:49:47,000 --> 00:49:49,000
为什么要加速加快市场竞争

1358
00:49:49,000 --> 00:49:50,000
为什么要提供提这个信源呢

1359
00:49:50,000 --> 00:49:55,000
我们提这个鼓励自由市场就是要尽量减少这种单点

1360
00:49:55,000 --> 00:49:56,000
啊

1361
00:49:56,000 --> 00:49:59,000
什么 single point of failure 的的出现

1362
00:49:59,000 --> 00:50:01,000
最好你是你是坚持是什么

1363
00:50:01,000 --> 00:50:03,000
就是分裂派的

1364
00:50:03,000 --> 00:50:04,000
没错

1365
00:50:04,000 --> 00:50:05,000
去中心化吧

1366
00:50:05,000 --> 00:50:06,000
这个应该对对对

1367
00:50:06,000 --> 00:50:08,000
你叫你现在要什么来的

1368
00:50:08,000 --> 00:50:10,000
peer to peer 不是 peer to peer

1369
00:50:10,000 --> 00:50:11,000
叫 decentralized

1370
00:50:11,000 --> 00:50:12,000
没错

1371
00:50:12,000 --> 00:50:13,000
比如说 git 对吧

1372
00:50:13,000 --> 00:50:15,000
这个如果你用 svn 的话

1373
00:50:15,000 --> 00:50:16,000
你的 reporters 垮了

1374
00:50:16,000 --> 00:50:18,000
你就完蛋了

1375
00:50:18,000 --> 00:50:19,000
那用 git 的话就没有这个问题

1376
00:50:19,000 --> 00:50:20,000
那

1377
00:50:20,000 --> 00:50:22,000
你怎么去解决这个问题呢

1378
00:50:22,000 --> 00:50:23,000
对

1379
00:50:23,000 --> 00:50:24,000
然后如果你

1380
00:50:24,000 --> 00:50:26,000
如果我们人类多用几个操作系统的话

1381
00:50:26,000 --> 00:50:29,000
不要说什么一个操作系统统一天下呢

1382
00:50:29,000 --> 00:50:32,000
那也许如果真的出了什么非常大的幺蛾子呢

1383
00:50:32,000 --> 00:50:37,000
也许还是有一部分人可以继续正常的从容使用他们的电脑

1384
00:50:37,000 --> 00:50:38,000
对吧

1385
00:50:38,000 --> 00:50:39,000
或者反过来

1386
00:50:39,000 --> 00:50:41,000
也许这个

1387
00:50:41,000 --> 00:50:42,000
补丁的发布过程

1388
00:50:42,000 --> 00:50:46,000
如果要减少补丁发布过程的露呃危险性的话

1389
00:50:46,000 --> 00:50:49,000
也可以把发布的服务器散落在世界各地

1390
00:50:49,000 --> 00:50:51,000
这样比较

1391
00:50:51,000 --> 00:50:55,000
但是如果攻击者从补丁的源头

1392
00:50:55,000 --> 00:50:57,000
源代码上黑它的话呢

1393
00:50:57,000 --> 00:50:59,000
还是不济于事

1394
00:50:59,000 --> 00:51:00,000
对

1395
00:51:00,000 --> 00:51:02,000
你只要有 spov

1396
00:51:02,000 --> 00:51:04,000
single point of failure

1397
00:51:04,000 --> 00:51:06,000
总是会有这种安全隐患出现

1398
00:51:06,000 --> 00:51:07,000
对

1399
00:51:07,000 --> 00:51:08,000
没错

1400
00:51:08,000 --> 00:51:09,000
所以没办法

1401
00:51:09,000 --> 00:51:14,000
我忽然想到一个就是我们公司在搞一个叫做 spov 运动

1402
00:51:14,000 --> 00:51:16,000
single point of truth

1403
00:51:16,000 --> 00:51:18,000
就是要把

1404
00:51:18,000 --> 00:51:20,000
运动公司有一个非常复杂的 ticket system

1405
00:51:20,000 --> 00:51:21,000
啊

1406
00:51:21,000 --> 00:51:23,000
那个面向用户有一套 ticket

1407
00:51:23,000 --> 00:51:25,000
然后面向内部有一套 ticket

1408
00:51:25,000 --> 00:51:26,000
呃

1409
00:51:26,000 --> 00:51:27,000
对

1410
00:51:27,000 --> 00:51:30,000
然后面向程序员又有一套 ticket

1411
00:51:30,000 --> 00:51:31,000
啊

1412
00:51:31,000 --> 00:51:33,000
这三个 ticket system 是彼此不通的

1413
00:51:33,000 --> 00:51:36,000
然后有一个叫做 sport 的运动

1414
00:51:36,000 --> 00:51:37,000
就是要把所有的

1415
00:51:37,000 --> 00:51:42,000
这个 ticket 汇总到同一个平台上

1416
00:51:42,000 --> 00:51:47,000
然后只在一个 ticket 里面追踪所有整个项目的进程和文档啊什么的

1417
00:51:47,000 --> 00:51:48,000
这个 sport 是

1418
00:51:48,000 --> 00:51:49,000
怎么做呢

1419
00:51:49,000 --> 00:51:51,000
single point of truth

1420
00:51:51,000 --> 00:51:52,000
就是

1421
00:51:52,000 --> 00:51:53,000
啊

1422
00:51:53,000 --> 00:51:57,000
其实就是把人手工啊把那个所有的 ticket 汇总到一起

1423
00:51:57,000 --> 00:51:59,000
是一个非常浩瀚的工程

1424
00:51:59,000 --> 00:52:01,000
但是已经做了三五周了

1425
00:52:01,000 --> 00:52:04,000
还还可能只完成了一半了

1426
00:52:04,000 --> 00:52:05,000
但我觉得这个

1427
00:52:05,000 --> 00:52:06,000
这个很快了呀

1428
00:52:06,000 --> 00:52:08,000
三五周都完成了一半了

1429
00:52:08,000 --> 00:52:10,000
毕竟是小公司啊

1430
00:52:10,000 --> 00:52:11,000
然后

1431
00:52:11,000 --> 00:52:12,000
那都是

1432
00:52:12,000 --> 00:52:13,000
agile 一点

1433
00:52:13,000 --> 00:52:14,000
对

1434
00:52:14,000 --> 00:52:15,000
然后这个让我想到的是

1435
00:52:15,000 --> 00:52:16,000
跟刚才的这个啊

1436
00:52:16,000 --> 00:52:19,000
要避免单一点

1437
00:52:19,000 --> 00:52:22,000
失败的思路其实是相反的

1438
00:52:22,000 --> 00:52:24,000
就是信息要尽量集中起来

1439
00:52:24,000 --> 00:52:25,000
但是

1440
00:52:26,000 --> 00:52:28,000
安全性要尽量分散开

1441
00:52:29,000 --> 00:52:30,000
对

1442
00:52:30,000 --> 00:52:31,000
下次不知道新闻啊

1443
00:52:31,000 --> 00:52:33,000
下次讨论是这个 lcap 10

1444
00:52:33,000 --> 00:52:35,000
就是 os 10 10.11

1445
00:52:35,000 --> 00:52:36,000
他出了也挺久了

1446
00:52:36,000 --> 00:52:37,000
我们都装

1447
00:52:37,000 --> 00:52:38,000
你装上了吧

1448
00:52:38,000 --> 00:52:39,000
当然装

1449
00:52:39,000 --> 00:52:40,000
对对我也装

1450
00:52:40,000 --> 00:52:42,000
然后其中有一个对开发者来说

1451
00:52:42,000 --> 00:52:44,000
对我们这种常经常属命令行的人来说

1452
00:52:44,000 --> 00:52:45,000
一个比较大的改动

1453
00:52:46,000 --> 00:52:48,000
就是他这个人称叫做 rootless

1454
00:52:48,000 --> 00:52:50,000
无根的特性

1455
00:52:50,000 --> 00:52:51,000
无根的特性

1456
00:52:51,000 --> 00:52:53,000
也也也叫做

1457
00:52:53,000 --> 00:52:55,000
system integrity protection

1458
00:52:55,000 --> 00:52:57,000
系统完整性保护

1459
00:52:57,000 --> 00:52:58,000
对

1460
00:52:58,000 --> 00:53:00,000
没错这个翻译的还是挺好的

1461
00:53:00,000 --> 00:53:02,000
呃简单来说呢

1462
00:53:02,000 --> 00:53:05,000
就是在 os 10 10.11 里面

1463
00:53:05,000 --> 00:53:06,000
默认情况下

1464
00:53:06,000 --> 00:53:08,000
系统的一些

1465
00:53:08,000 --> 00:53:10,000
根目录的东

1466
00:53:10,000 --> 00:53:11,000
是就是

1467
00:53:11,000 --> 00:53:13,000
用户是不能改的

1468
00:53:13,000 --> 00:53:14,000
哪怕是你用 studio

1469
00:53:14,000 --> 00:53:16,000
用就用 root user 的声音也是不错的

1470
00:53:16,000 --> 00:53:18,000
不可能改动那些目录的

1471
00:53:18,000 --> 00:53:19,000
里面的内容的

1472
00:53:19,000 --> 00:53:21,000
比如说这个跟下面的 user

1473
00:53:21,000 --> 00:53:23,000
跟下面的 bin

1474
00:53:23,000 --> 00:53:25,000
这些比较就是系统核心的应用

1475
00:53:25,000 --> 00:53:27,000
你是没有办法去改动它的

1476
00:53:27,000 --> 00:53:29,000
呃主要是四个地方吧

1477
00:53:29,000 --> 00:53:30,000
slash system

1478
00:53:30,000 --> 00:53:31,000
slash bin

1479
00:53:31,000 --> 00:53:32,000
slash user

1480
00:53:32,000 --> 00:53:33,000
slash sbin

1481
00:53:33,000 --> 00:53:36,000
就是如果你对这个 possix 系统的标准命令数

1482
00:53:36,000 --> 00:53:37,000
比较熟悉的话

1483
00:53:37,000 --> 00:53:39,000
基本上就是 bin user 和 sbin

1484
00:53:39,000 --> 00:53:40,000
三个被保护起来

1485
00:53:40,000 --> 00:53:45,000
然后 slash system 是 os 10 自由的一个

1486
00:53:45,000 --> 00:53:46,000
一个一个

1487
00:53:46,000 --> 00:53:48,000
放生成文件的地方

1488
00:53:48,000 --> 00:53:49,000
对

1489
00:53:49,000 --> 00:53:50,000
嗯

1490
00:53:50,000 --> 00:53:53,000
所以其实这是我们上次有聊到过

1491
00:53:53,000 --> 00:53:55,000
应该是在本书上前几期吧

1492
00:53:55,000 --> 00:53:57,000
有一期聊到过这个事儿

1493
00:53:57,000 --> 00:53:59,000
不然卢涛你怎么看这个特性

1494
00:53:59,000 --> 00:54:01,000
啊

1495
00:54:01,000 --> 00:54:03,000
我觉得这是

1496
00:54:05,000 --> 00:54:07,000
苹果自

1497
00:54:07,000 --> 00:54:09,000
把这个

1498
00:54:09,000 --> 00:54:10,000
slash user

1499
00:54:10,000 --> 00:54:11,000
slash local

1500
00:54:11,000 --> 00:54:12,000
slash bin

1501
00:54:12,000 --> 00:54:15,000
改名为 slash application 之后

1502
00:54:15,000 --> 00:54:17,000
做了第二件好事

1503
00:54:17,000 --> 00:54:20,000
就是防止用户轰掉自己的脚

1504
00:54:20,000 --> 00:54:21,000
嗯

1505
00:54:21,000 --> 00:54:24,000
对你想你不想一不小心来个 rm

1506
00:54:24,000 --> 00:54:26,000
空格斜杠

1507
00:54:26,000 --> 00:54:28,000
回车

1508
00:54:28,000 --> 00:54:30,000
或者是更凶狠一点 rm

1509
00:54:30,000 --> 00:54:32,000
空格横线 rf

1510
00:54:32,000 --> 00:54:34,000
空格斜杠回车

1511
00:54:34,000 --> 00:54:35,000
你就挂了

1512
00:54:35,000 --> 00:54:36,000
对

1513
00:54:36,000 --> 00:54:37,000
呃

1514
00:54:37,000 --> 00:54:38,000
其实

1515
00:54:38,000 --> 00:54:41,000
以上两个语句请不要在家尝试

1516
00:54:41,000 --> 00:54:42,000
对

1517
00:54:42,000 --> 00:54:43,000
哈哈哈

1518
00:54:43,000 --> 00:54:44,000
不要随便听那个功课

1519
00:54:44,000 --> 00:54:46,000
不要在家听那个功课

1520
00:54:46,000 --> 00:54:48,000
你用 10 点 11 就不熟了

1521
00:54:48,000 --> 00:54:49,000
嗯

1522
00:54:49,000 --> 00:54:50,000
对

1523
00:54:50,000 --> 00:54:55,000
然后这个其实归根结底原因还是早期 unix 的用户

1524
00:54:55,000 --> 00:54:57,000
呃

1525
00:54:57,000 --> 00:54:59,000
在吃他们自己的狗粮的时候

1526
00:54:59,000 --> 00:55:02,000
采用一种非常实用主义者的态度

1527
00:55:02,000 --> 00:55:03,000
就是

1528
00:55:03,000 --> 00:55:04,000
嗯

1529
00:55:04,000 --> 00:55:06,000
一个非常简单的原则

1530
00:55:06,000 --> 00:55:07,000
就是

1531
00:55:07,000 --> 00:55:08,000
呃

1532
00:55:08,000 --> 00:55:09,000
用户只有两级

1533
00:55:09,000 --> 00:55:10,000
一个是

1534
00:55:10,000 --> 00:55:12,000
一个是非常不适合的

1535
00:55:12,000 --> 00:55:13,000
一个是

1536
00:55:13,000 --> 00:55:15,000
非常普通的用户

1537
00:55:15,000 --> 00:55:16,000
另外一个就是 root 用户

1538
00:55:16,000 --> 00:55:19,000
然后又 root 用户就是可以做一切事情

1539
00:55:19,000 --> 00:55:20,000
嗯

1540
00:55:20,000 --> 00:55:21,000
句号

1541
00:55:21,000 --> 00:55:24,000
对就就没有再详细的层级了

1542
00:55:24,000 --> 00:55:26,000
在那个没有 acl 的时代

1543
00:55:26,000 --> 00:55:27,000
没有什么

1544
00:55:29,000 --> 00:55:33,000
呃一个复杂的窗口可以让你选这个用户可以干什么

1545
00:55:33,000 --> 00:55:35,000
可以具体的做哪些的时代

1546
00:55:35,000 --> 00:55:36,000
基本上

1547
00:55:36,000 --> 00:55:38,000
这个文件的权限加上

1548
00:55:38,000 --> 00:55:42,000
呃 root 非 root 就是你能对系统做的最好的保护了

1549
00:55:42,000 --> 00:55:44,000
然后这一套东西被

1550
00:55:44,000 --> 00:55:45,000
呃

1551
00:55:45,000 --> 00:55:47,000
OS X 搬过来之后

1552
00:55:47,000 --> 00:55:48,000
呃

1553
00:55:48,000 --> 00:55:51,000
基本上还是保持现状一直到现在

1554
00:55:51,000 --> 00:55:54,000
而而绝大就是对于绝大数用户来说

1555
00:55:54,000 --> 00:55:55,000
呃

1556
00:55:55,000 --> 00:55:57,000
他们完全不会意识到这一点

1557
00:55:57,000 --> 00:56:00,000
但是只要你稍微折腾一下这个系统

1558
00:56:00,000 --> 00:56:01,000
啊

1559
00:56:01,000 --> 00:56:02,000
你会觉得他

1560
00:56:02,000 --> 00:56:05,000
还是相对来说比较 fragile

1561
00:56:05,000 --> 00:56:06,000
就是

1562
00:56:06,000 --> 00:56:07,000
如果你对

1563
00:56:07,000 --> 00:56:08,000
呃

1564
00:56:08,000 --> 00:56:10,000
使用 root 之后会有什么问题呢

1565
00:56:10,000 --> 00:56:11,000
呃

1566
00:56:11,000 --> 00:56:13,000
使用 root 之后会干什么

1567
00:56:14,000 --> 00:56:16,000
会会可能造出什么样的危害

1568
00:56:16,000 --> 00:56:17,000
没有一个清醒的认识的话

1569
00:56:17,000 --> 00:56:19,000
你还是很容易轰掉自己的脚

1570
00:56:19,000 --> 00:56:22,000
而而这个对新的特性的话就是

1571
00:56:23,000 --> 00:56:26,000
呃更进一步帮助用户来杜绝这一点

1572
00:56:26,000 --> 00:56:30,000
对其实我觉得这个东这个特性最大的一个好处啊

1573
00:56:30,000 --> 00:56:34,000
就像我在 24 期里面讨论过的叫做 immutable system

1574
00:56:34,000 --> 00:56:36,000
就是不可变的系统

1575
00:56:36,000 --> 00:56:38,000
就什么意思呢

1576
00:56:38,000 --> 00:56:40,000
就是说整个系统的那些文件经常都是不可变的

1577
00:56:40,000 --> 00:56:42,000
就是你不可以修改它的

1578
00:56:42,000 --> 00:56:46,000
你唯一能做的比如说你送升级的时候就是替换掉整个系统的镜像

1579
00:56:46,000 --> 00:56:50,000
从而可以保证因为类似有点像那个 chrome os 那种吧

1580
00:56:50,000 --> 00:56:52,000
嗯就系统是整个本身是非常安全的

1581
00:56:52,000 --> 00:56:55,000
没过去像 windows 也好还是之前的这个 os 也好

1582
00:56:55,000 --> 00:56:56,000
一个最稳

1583
00:56:56,000 --> 00:56:58,000
对大的不安全因素

1584
00:56:58,000 --> 00:57:02,000
刚才说你说这个用户操呃就是不小心操作

1585
00:57:02,000 --> 00:57:06,000
失误删掉了这个核心的文件导致系统无法使用之外

1586
00:57:06,000 --> 00:57:09,000
这种可能也只有我们这种人才会干的出来哈

1587
00:57:09,000 --> 00:57:15,000
但是对于普通用户来讲可能最重要的是一个反而是安全性的考虑

1588
00:57:15,000 --> 00:57:21,000
就是说一些恶意软件能不能通过修改你系统一些重要文件的方式

1589
00:57:21,000 --> 00:57:25,000
隐藏在你的系统里面去比如说一开机就启动一个什么东西

1590
00:57:25,000 --> 00:57:28,000
然后你没有办法知道或者没有办法删除它对吧

1591
00:57:28,000 --> 00:57:29,000
对

1592
00:57:29,000 --> 00:57:35,000
但有了这个这个 sip 的这个保护的话就可以杜绝这种事情发生嘛

1593
00:57:35,000 --> 00:57:38,000
也可以说你某种程度上说

1594
00:57:38,000 --> 00:57:39,000
呃

1595
00:57:39,000 --> 00:57:45,000
没有通过沙盒机制实现了这个系统呃核心部件的安全性

1596
00:57:45,000 --> 00:57:46,000
没错

1597
00:57:46,000 --> 00:57:54,000
就是从今以后如果一个用户呃一个程序在要做什么时候跳出来让你输入 root 密码

1598
00:57:54,000 --> 00:58:02,000
99%人包括包括程序员都会就是不加思索的直接输入自己的用户的用户密码对吧

1599
00:58:02,000 --> 00:58:07,000
但是在 sip 出来之前这个其实是一个非常危险的举动因为啊

1600
00:58:07,000 --> 00:58:09,000
随时肯定给你中了什么木头

1601
00:58:09,000 --> 00:58:10,000
因为你不知道他要干什么对吧

1602
00:58:10,000 --> 00:58:13,000
OS 10 并不会告诉你他具体要干嘛

1603
00:58:13,000 --> 00:58:15,000
而是 OS 10 自己也不知道他在具体要干嘛

1604
00:58:15,000 --> 00:58:20,000
他只是在说哦这个玩意要权限那那我问给不给权限嘛

1605
00:58:20,000 --> 00:58:21,000
用说给对

1606
00:58:21,000 --> 00:58:23,000
然后我靠机器挂了

1607
00:58:23,000 --> 00:58:24,000
对吧

1608
00:58:24,000 --> 00:58:29,000
这其实 windows 上面也有这个问题就是因为 windows 那个叫什么 uaf 还是叫什么的那个玩意

1609
00:58:29,000 --> 00:58:30,000
UAC

1610
00:58:30,000 --> 00:58:31,000
对对对对对对

1611
00:58:31,000 --> 00:58:32,000
它跳出来

1612
00:58:32,000 --> 00:58:38,000
windows 比较就是怎么说比较啰嗦的一点在这里它会呃有一个 details

1613
00:58:38,000 --> 00:58:39,000
你可以点一点 details

1614
00:58:39,000 --> 00:58:46,000
然后他会说什么这个程序它位于哪个啊嗯嗯路径之下想要干嘛

1615
00:58:46,000 --> 00:58:47,000
或者想要改什么

1616
00:58:47,000 --> 00:58:48,000
他会跟你说一句

1617
00:58:48,000 --> 00:58:51,000
但是嗯也许一开始你会点如果你是一个程序员的话

1618
00:58:51,000 --> 00:58:57,000
或者如果你是一个呃会读所有会读用户学习里面每一句话的德国人的话

1619
00:58:57,000 --> 00:59:00,000
你可能会去读这个里面到底写了什么

1620
00:59:00,000 --> 00:59:05,000
但是在一段时间之后你还是会就是 no brainer 的直接点一下允许对吧

1621
00:59:05,000 --> 00:59:06,000
对对对

1622
00:59:06,000 --> 00:59:07,000
那所以这就是这是一个问题

1623
00:59:07,000 --> 00:59:13,000
所以这就是这是一个典型的技术呃技术呃思维没有考虑这个心理

1624
00:59:13,000 --> 00:59:18,000
就人的本性的一些东西的设计是一个非常失败的产品设计

1625
00:59:18,000 --> 00:59:21,000
但是干少些没什么更好的解决方案哈

1626
00:59:21,000 --> 00:59:22,000
anyway

1627
00:59:22,000 --> 00:59:23,000
那个其实我有一个很好

1628
00:59:23,000 --> 00:59:25,000
我有一个很大的问题

1629
00:59:25,000 --> 00:59:28,000
就在在 os 10 有了这个 sip 这个特性之后哈

1630
00:59:28,000 --> 00:59:30,000
那我们还要这个 root 账号干嘛

1631
00:59:30,000 --> 00:59:31,000
没什么用了呀

1632
00:59:31,000 --> 00:59:32,000
对

1633
00:59:32,000 --> 00:59:34,000
所以应该搞一个 rootless 账号是吧

1634
00:59:34,000 --> 00:59:35,000
rootless

1635
00:59:35,000 --> 00:59:36,000
对

1636
00:59:36,000 --> 00:59:37,000
对所以它应该是 rootless

1637
00:59:37,000 --> 00:59:39,000
但是那还要 sudo 干嘛

1638
00:59:39,000 --> 00:59:43,000
呃好问题

1639
00:59:43,000 --> 00:59:44,000
对吧

1640
00:59:44,000 --> 00:59:52,000
因为其实你用那个你本来一个账号就只分那个叫做 administrator 和这个就是 normal user 嘛

1641
00:59:52,000 --> 00:59:53,000
两种类型的账号对吧

1642
00:59:53,000 --> 01:00:00,000
呃那 root 你反正也不能做什么呃 administrator 干不了的事情呢

1643
01:00:00,000 --> 01:00:02,000
要他干要他有什么用呢

1644
01:00:02,000 --> 01:00:06,000
你就直接做一个这个普通的啊嗯

1645
01:00:06,000 --> 01:00:07,000
嗯

1646
01:00:07,000 --> 01:00:09,000
账号系统然后不要速度好了

1647
01:00:09,000 --> 01:00:10,000
嗯

1648
01:00:10,000 --> 01:00:16,000
我觉得可能还是在多用户的场景之下有一定用途啊

1649
01:00:16,000 --> 01:00:20,000
就你可以多用户的情况下你用自己账号去做这个自己的事情啊

1650
01:00:20,000 --> 01:00:21,000
但你不需要速度啊

1651
01:00:21,000 --> 01:00:25,000
你速度之后才可以做才可以去管理别人文件啊

1652
01:00:25,000 --> 01:00:27,000
如果你是一个管理员的话

1653
01:00:27,000 --> 01:00:29,000
就假如我就我就我就说这个问题嘛

1654
01:00:29,000 --> 01:00:31,000
就说速度不是说你变成别的账号吗

1655
01:00:31,000 --> 01:00:32,000
你是变成 root 嘛

1656
01:00:32,000 --> 01:00:33,000
对

1657
01:00:33,000 --> 01:00:35,000
那但速度也可以变成别的

1658
01:00:35,000 --> 01:00:37,000
就就速度 as another user

1659
01:00:37,000 --> 01:00:38,000
对对对

1660
01:00:38,000 --> 01:00:40,000
但基本来说是速度啊

1661
01:00:40,000 --> 01:00:43,000
是就不加参数的话是 suit as root 嘛

1662
01:00:43,000 --> 01:00:44,000
对吧

1663
01:00:44,000 --> 01:00:45,000
但我就问好

1664
01:00:45,000 --> 01:00:49,000
对我的问题就在于那 root 本身还有意义吗

1665
01:00:49,000 --> 01:00:50,000
嗯

1666
01:00:50,000 --> 01:00:54,000
所以像 ubuntu 那样就完全不设 root 正好了

1667
01:00:54,000 --> 01:00:56,000
就在需要他也有他他也有

1668
01:00:56,000 --> 01:01:01,000
只是说默认是他没有一个不不准登录的不准登

1669
01:01:01,000 --> 01:01:03,000
然后你还是可以速度成 root 的嘛

1670
01:01:03,000 --> 01:01:04,000
我就只是好奇

1671
01:01:04,000 --> 01:01:08,000
在有 sip 的情况下要 root 的账号本身有什么用

1672
01:01:08,000 --> 01:01:09,000
好像没有什么用

1673
01:01:09,000 --> 01:01:11,000
backward compatibility

1674
01:01:11,000 --> 01:01:12,000
有可能

1675
01:01:12,000 --> 01:01:14,000
因为毕竟还是还是一个 postex 系统

1676
01:01:14,000 --> 01:01:15,000
对没错

1677
01:01:15,000 --> 01:01:19,000
嗯然后还有一个挺好玩的问题

1678
01:01:19,000 --> 01:01:22,000
就是说如果这个系统本身是 immutable 的话

1679
01:01:22,000 --> 01:01:25,000
其实可以有有个事情可以做就是节省空间嘛

1680
01:01:25,000 --> 01:01:28,000
因为你知道那个 os 10 还包括像 windows 也一样

1681
01:01:28,000 --> 01:01:31,000
它是有一个叫做所谓的就是 recovery partition

1682
01:01:31,000 --> 01:01:32,000
就是恢复

1683
01:01:32,000 --> 01:01:33,000
恢复

1684
01:01:33,000 --> 01:01:34,000
分区

1685
01:01:34,000 --> 01:01:35,000
对这四个字

1686
01:01:35,000 --> 01:01:36,000
啊

1687
01:01:36,000 --> 01:01:39,000
恢复分区

1688
01:01:39,000 --> 01:01:40,000
挥发挥发肥

1689
01:01:40,000 --> 01:01:43,000
会挥发挥发之后出现了恢复

1690
01:01:43,000 --> 01:01:44,000
恢复分区

1691
01:01:44,000 --> 01:01:50,000
恢复分区的一个主要作用就在于你的之前

1692
01:01:50,000 --> 01:01:52,000
呃在没有 sip 的情况下

1693
01:01:52,000 --> 01:01:56,000
你把自己脚自己脚轰掉删掉了这个跟系统里面的重要文件之后

1694
01:01:56,000 --> 01:02:01,000
你可以通过这个 recover partition 把系统回复到一个可以用的状态嘛

1695
01:02:01,000 --> 01:02:02,000
嗯

1696
01:02:02,000 --> 01:02:07,000
它有一些可能系统一些呃就核心的文件它是在那里还有一个备份的对吧

1697
01:02:07,000 --> 01:02:08,000
嗯

1698
01:02:08,000 --> 01:02:13,000
但如果这个本身是启用了这个 sip 就是系统的核心部件是不可修改的话

1699
01:02:13,000 --> 01:02:17,000
其实恢复恢复分区就没什么实际的意义了

1700
01:02:17,000 --> 01:02:18,000
嗯

1701
01:02:18,000 --> 01:02:21,000
因为你可以保证系统本本体是不被修改的嘛

1702
01:02:21,000 --> 01:02:26,000
然后就可以把那个恢复分区干掉或者是至少重用一部分空间嘛

1703
01:02:26,000 --> 01:02:29,000
通过那个就是 hardlink 的方式对吧

1704
01:02:29,000 --> 01:02:30,000
这倒是

1705
01:02:30,000 --> 01:02:31,000
就是 hardlink 的哎

1706
01:02:31,000 --> 01:02:34,000
不是 hardlink 好像不能跨区是吧

1707
01:02:34,000 --> 01:02:35,000
不能跨 partition

1708
01:02:35,000 --> 01:02:37,000
嗯

1709
01:02:37,000 --> 01:02:38,000
应该是不

1710
01:02:38,000 --> 01:02:39,000
哎

1711
01:02:39,000 --> 01:02:41,000
你得先 mount 才能 hardlink

1712
01:02:41,000 --> 01:02:44,000
我不太清楚这个具体实现方式怎么样子啊

1713
01:02:44,000 --> 01:02:49,000
但是起码恢复分区是在这种情况下是在系统里面看不见的嘛

1714
01:02:49,000 --> 01:02:52,000
对所以我在想你会不会办法这个统就是两个重用一下系统

1715
01:02:52,000 --> 01:02:55,000
因为毕竟恢复分区应该还是有个几个巨大的

1716
01:02:55,000 --> 01:02:58,000
恢复分区不会被恢复分区默认不会被 mount 上

1717
01:02:58,000 --> 01:02:59,000
所以其实在系统使用过程中它是看不到的嘛

1718
01:02:59,000 --> 01:03:00,000
对

1719
01:03:00,000 --> 01:03:01,000
但是不会被系统看到的

1720
01:03:01,000 --> 01:03:03,000
那如果说这个系统本身是保证可以不被修改的

1721
01:03:03,000 --> 01:03:04,000
还要就不需要去干嘛

1722
01:03:04,000 --> 01:03:05,000
对对

1723
01:03:05,000 --> 01:03:06,000
我又在想这个问题啊

1724
01:03:06,000 --> 01:03:07,000
是不是就没有什么必要性了

1725
01:03:07,000 --> 01:03:08,000
就把恢复分区里面那种放回这里的更新档里面就好了

1726
01:03:08,000 --> 01:03:09,000
嗯

1727
01:03:09,000 --> 01:03:10,000
因为恢复分区一个最主要作用就是说如果那个

1728
01:03:10,000 --> 01:03:11,000
还有一个就是软件升级的时候

1729
01:03:11,000 --> 01:03:12,000
你可以直接从那安装系统嘛

1730
01:03:12,000 --> 01:03:13,000
对

1731
01:03:13,000 --> 01:03:14,000
但是你好像没有什么实际的意义

1732
01:03:14,000 --> 01:03:15,000
那个软件是补丁挂掉的话

1733
01:03:15,000 --> 01:03:16,000
就是软件补丁是一个 pull 的

1734
01:03:16,000 --> 01:03:17,000
就是一个 pull 的

1735
01:03:17,000 --> 01:03:18,000
就是一个 pull 的

1736
01:03:18,000 --> 01:03:19,000
就是一个 pull 的

1737
01:03:19,000 --> 01:03:20,000
就是一个 pull 的

1738
01:03:20,000 --> 01:03:21,000
就是一个 pull 的

1739
01:03:30,000 --> 01:03:31,000
如果你把这个坏固定的话

1740
01:03:31,000 --> 01:03:32,000
那你可以通过恢复分区来恢复回来

1741
01:03:32,000 --> 01:03:37,000
anyway 这还是一个挺值得的

1742
01:03:37,000 --> 01:03:38,000
对比较 detail 的

1743
01:03:38,000 --> 01:03:45,000
但对啊对当然在这个 sip 的保护下面

1744
01:03:45,000 --> 01:03:48,000
还是有几个地方是可以被改动的

1745
01:03:48,000 --> 01:03:49,000
他们扔掉的系统一部分

1746
01:03:49,000 --> 01:03:52,000
只不过这部分就是系统特意留出来让你去改的

1747
01:03:52,000 --> 01:03:55,000
就如果你给 user 那块嘛

1748
01:03:55,000 --> 01:03:58,000
对如果你的程序员是 user 对 user 那块

1749
01:03:58,000 --> 01:03:59,000
呃是 user 那块

1750
01:03:59,000 --> 01:04:00,000
对对对对

1751
01:04:00,000 --> 01:04:01,000
user local

1752
01:04:01,000 --> 01:04:02,000
user local

1753
01:04:02,000 --> 01:04:03,000
对对对

1754
01:04:03,000 --> 01:04:04,000
然后呃

1755
01:04:04,000 --> 01:04:06,000
这其实要涉及到另外一个概念

1756
01:04:06,000 --> 01:04:09,000
叫做这个 file system hierarchy standard

1757
01:04:09,000 --> 01:04:10,000
对吧

1758
01:04:10,000 --> 01:04:11,000
对呃

1759
01:04:11,000 --> 01:04:12,000
这个其实一个很扯的事情

1760
01:04:12,000 --> 01:04:14,000
就是说这起码在 linux 里面

1761
01:04:14,000 --> 01:04:17,000
它是有这么一个规范的

1762
01:04:17,000 --> 01:04:20,000
规范就是说这个整个系统的这根目录下面这文件数

1763
01:04:20,000 --> 01:04:21,000
应该是长什么样

1764
01:04:21,000 --> 01:04:24,000
然后各个目的里面放什么东西

1765
01:04:24,000 --> 01:04:27,000
比如说你常常刚提到像那个根下 bin 呀

1766
01:04:27,000 --> 01:04:29,000
根下的 boot 啊

1767
01:04:29,000 --> 01:04:30,000
根下的 etc 呀

1768
01:04:30,000 --> 01:04:31,000
etc

1769
01:04:31,000 --> 01:04:34,000
根下这个呃 sbin 呀

1770
01:04:34,000 --> 01:04:35,000
这些东西

1771
01:04:35,000 --> 01:04:36,000
boot 是 sanda

1772
01:04:36,000 --> 01:04:37,000
不是吧

1773
01:04:37,000 --> 01:04:39,000
boot

1774
01:04:39,000 --> 01:04:41,000
可能是 linux 还有吧

1775
01:04:41,000 --> 01:04:45,000
这个有一个其实有本书叫做 linux haters manual

1776
01:04:45,000 --> 01:04:49,000
如果各位有兴趣的话一定要去看一看里面对这个标准

1777
01:04:49,000 --> 01:04:54,000
呃所谓的这个呃命目录数标准大家吐槽

1778
01:04:54,000 --> 01:04:56,000
就是虽然有这么一个标准存在

1779
01:04:56,000 --> 01:04:58,000
它名字叫标准

1780
01:04:58,000 --> 01:04:59,000
哎它名字叫标准

1781
01:04:59,000 --> 01:05:00,000
不叫标准

1782
01:05:00,000 --> 01:05:02,000
但就反正是叫 standard

1783
01:05:02,000 --> 01:05:03,000
有这么一个 standard 的存在

1784
01:05:03,000 --> 01:05:06,000
但所有人都只是把它当做 reference 来用

1785
01:05:06,000 --> 01:05:07,000
就是嗯哼

1786
01:05:07,000 --> 01:05:08,000
呃

1787
01:05:08,000 --> 01:05:13,000
你只是模糊的知道这个目录大概可以拿来干什么

1788
01:05:13,000 --> 01:05:21,000
但现在的实际情况就是没有两个呃 linux 发行版的这个目录数的形状是一模一样

1789
01:05:21,000 --> 01:05:23,000
这是一个非常

1790
01:05:23,000 --> 01:05:25,000
但有些很丑的

1791
01:05:25,000 --> 01:05:27,000
有些问题比如说像那个

1792
01:05:27,000 --> 01:05:28,000
我问你哈

1793
01:05:28,000 --> 01:05:30,000
你知不知道 bin 和 sbin 的区别是什么

1794
01:05:30,000 --> 01:05:31,000
sbin 是 superbin

1795
01:05:31,000 --> 01:05:33,000
就是只有 superuser 可以用的 bin

1796
01:05:33,000 --> 01:05:36,000
那他们两个哪些放哪些呢

1797
01:05:36,000 --> 01:05:37,000
这个这个界限是什么

1798
01:05:37,000 --> 01:05:42,000
sbin 里面比如说 reboot 在 sbin 里面

1799
01:05:42,000 --> 01:05:43,000
嗯哼

1800
01:05:43,000 --> 01:05:47,000
呃然后 bin 里面是什么 vi 呀之类的东西

1801
01:05:47,000 --> 01:05:54,000
就是就是不会不会就是如果你用起来可能脚被轰掉的东西都在 sbin 里面

1802
01:05:54,000 --> 01:05:55,000
理论上是这样的

1803
01:05:55,000 --> 01:05:56,000
但是实际上也并不是这样的

1804
01:05:56,000 --> 01:05:57,000
就是 bin 里面还是有很多非常强的东西

1805
01:05:57,000 --> 01:05:58,000
但是实际上也并不是这样的东西

1806
01:05:58,000 --> 01:05:59,000
就是比如说 bin 里面还是有很多非常危险的工具

1807
01:05:59,000 --> 01:06:00,000
但

1808
01:06:00,000 --> 01:06:01,000
对

1809
01:06:01,000 --> 01:06:06,000
然后再问你一个 bin 和 userbin 有什么区别

1810
01:06:06,000 --> 01:06:11,000
呃 userbin 和你应该问 userbin 和 userlocalbin 有什么区别

1811
01:06:11,000 --> 01:06:12,000
哈哈哈

1812
01:06:12,000 --> 01:06:18,000
bin 的 bin 里面就是 slashbin 里面应该是系统的核心工具

1813
01:06:18,000 --> 01:06:22,000
而 user slashuser slashbin 里面则是

1814
01:06:22,000 --> 01:06:26,000
就是在比较不那么其实这个在 bsd 上比较好

1815
01:06:26,000 --> 01:06:33,000
就是在那个 kernel space 里面的工具都在 slashbin

1816
01:06:33,000 --> 01:06:36,000
在 user space 里面的都在 user slashbin

1817
01:06:36,000 --> 01:06:38,000
然后 user 还是蛮好的区分

1818
01:06:38,000 --> 01:06:45,000
然后 user slashlocal slashbin 才是呃用户自己装的第三方应用程序应该去的

1819
01:06:45,000 --> 01:06:48,000
对对这如果你要去说的话

1820
01:06:48,000 --> 01:06:50,000
其实这个东西还是比较可以理解的

1821
01:06:50,000 --> 01:06:55,000
但是但是在执行的时候就会出现各种边界模糊的非常非常多的幺蛾子

1822
01:06:55,000 --> 01:06:56,000
就是

1823
01:06:56,000 --> 01:07:00,000
然后然后就是你完全不明白你在分完之后有什么好处

1824
01:07:00,000 --> 01:07:01,000
啊

1825
01:07:01,000 --> 01:07:05,000
治愈的处女座

1826
01:07:05,000 --> 01:07:10,000
或者说最开始的设计者是个处女座

1827
01:07:10,000 --> 01:07:16,000
然后他的这个设计导致了后来的所有的处女座的 linuxuser 都转向了 windows

1828
01:07:16,000 --> 01:07:23,000
因为你会觉得我靠最开始这个你看我刚才说的这三个分类是不是很有逻辑啊

1829
01:07:23,000 --> 01:07:24,000
但是呢

1830
01:07:24,000 --> 01:07:29,000
你去看任何一个实际系统你会觉得我靠怎么每一个工具都

1831
01:07:29,000 --> 01:07:33,000
每一个地方都放一些不该放的那些工具对吧

1832
01:07:33,000 --> 01:07:36,000
就对对对乱七八糟的这是一个阴谋

1833
01:07:36,000 --> 01:07:40,000
这是 linux 使用者希望处女座别用来别来用我们的系统

1834
01:07:40,000 --> 01:07:41,000
就

1835
01:07:41,000 --> 01:07:45,000
不过早期他还是有他一定的这个客观的硬件基础的

1836
01:07:45,000 --> 01:07:49,000
早期像 linux 那些磁盘空间小嘛几百 k 的磁盘空间

1837
01:07:49,000 --> 01:07:50,000
对

1838
01:07:50,000 --> 01:07:52,000
就是几兆的就是很大的了

1839
01:07:52,000 --> 01:07:54,000
后来那个有些人

1840
01:07:54,000 --> 01:07:59,000
有些应用他就没有办法在就是第一个驱动的 first drive

1841
01:07:59,000 --> 01:08:01,000
放下所有的并那些东西

1842
01:08:01,000 --> 01:08:03,000
被迫把一些像后来才出现 user 并

1843
01:08:03,000 --> 01:08:07,000
他可以挂载到不同的一个驱动那个磁盘驱动器上面去嘛

1844
01:08:07,000 --> 01:08:08,000
没错

1845
01:08:08,000 --> 01:08:09,000
所以才导致今天这个局面

1846
01:08:09,000 --> 01:08:13,000
后来我的理解就是很后之后觉得说啊

1847
01:08:13,000 --> 01:08:14,000
我们要这样来区分一下

1848
01:08:14,000 --> 01:08:15,000
因为过去是这样的

1849
01:08:15,000 --> 01:08:17,000
那其实变得很奇怪

1850
01:08:17,000 --> 01:08:22,000
所以现在有一些这个发行就是那个发行板他们在做一个这个就是 unified 的趋势

1851
01:08:22,000 --> 01:08:23,000
就是简化这个

1852
01:08:23,000 --> 01:08:27,000
然后这个像刚才讲的这个并和 user 并的区别

1853
01:08:27,000 --> 01:08:29,000
因为觉得没什么必要了

1854
01:08:29,000 --> 01:08:31,000
因为现在磁盘空间都很大对吧

1855
01:08:31,000 --> 01:08:33,000
其实 OS X 就是做了这件事情

1856
01:08:33,000 --> 01:08:39,000
他非常勇敢的把这个并这种这种非常反二进这种非常反正常人非常 geek 的名字

1857
01:08:39,000 --> 01:08:42,000
换成 applications

1858
01:08:42,000 --> 01:08:43,000
对吧

1859
01:08:43,000 --> 01:08:44,000
这已经是一个

1860
01:08:44,000 --> 01:08:45,000
这个就更大的改变了

1861
01:08:45,000 --> 01:08:49,000
因为过去说我们像在 linux 那些一个应用吧

1862
01:08:49,000 --> 01:08:50,000
一个 software package

1863
01:08:50,000 --> 01:08:52,000
它是要拆成好多好多

1864
01:08:53,000 --> 01:08:55,000
小组件分到不同的地方的

1865
01:08:55,000 --> 01:09:01,000
比如说你这个可执行的 binary 的文件会放在并或者 user 并或者 local 并

1866
01:09:01,000 --> 01:09:03,000
根据你安装的来源不同

1867
01:09:03,000 --> 01:09:04,000
没错

1868
01:09:04,000 --> 01:09:07,000
然后他的这个文档会放在这个什么 man 里面

1869
01:09:07,000 --> 01:09:08,000
是什么

1870
01:09:08,000 --> 01:09:09,000
没够公路来的

1871
01:09:09,000 --> 01:09:13,000
文档是 user slash share 吧

1872
01:09:13,000 --> 01:09:16,000
应该是 shareman 之类的

1873
01:09:16,000 --> 01:09:17,000
usershareman

1874
01:09:17,000 --> 01:09:20,000
然后他的这个他的这个什么 log 文件啊

1875
01:09:20,000 --> 01:09:23,000
又是像这个叫 var 的 log 里面

1876
01:09:23,000 --> 01:09:27,000
然后他的一些其他配置文件是在那一 slash

1877
01:09:27,000 --> 01:09:30,000
adtc 下面 slash 什么一些目录里面

1878
01:09:30,000 --> 01:09:32,000
就非常就分分得很散

1879
01:09:32,000 --> 01:09:36,000
像现在像 debian 啊 ubuntu 啊都是坚持这种这种做法

1880
01:09:36,000 --> 01:09:38,000
其实像那个 os 10 这种说

1881
01:09:38,000 --> 01:09:40,000
我不要你们分这么散

1882
01:09:40,000 --> 01:09:42,000
你一个应用就老老实实成为一个 package

1883
01:09:42,000 --> 01:09:43,000
对吧

1884
01:09:43,000 --> 01:09:44,000
一个 app

1885
01:09:44,000 --> 01:09:46,000
一个目录就是一个一个应用

1886
01:09:46,000 --> 01:09:48,000
然后一个应用就是一个 bundle 这样

1887
01:09:48,000 --> 01:09:50,000
这也有它的优劣就各有好处吧

1888
01:09:50,000 --> 01:09:51,000
就是说

1889
01:09:51,000 --> 01:09:53,000
那从应用性的角度来讲

1890
01:09:53,000 --> 01:09:56,000
肯定可能觉得后一种会比较高级一点

1891
01:09:56,000 --> 01:10:00,000
那但是从这个系统重用和这个处理做的角度来看

1892
01:10:00,000 --> 01:10:03,000
可能觉得前一种会好一些是吧

1893
01:10:03,000 --> 01:10:04,000
对对

1894
01:10:04,000 --> 01:10:06,000
你是按照它的用途分类呢

1895
01:10:06,000 --> 01:10:10,000
还是按照它的使用的主题分类呢

1896
01:10:10,000 --> 01:10:12,000
不过我其实我自己在

1897
01:10:12,000 --> 01:10:16,000
就我自己在像那个 vps 上面的做法

1898
01:10:16,000 --> 01:10:18,000
也是经过了很多变迁

1899
01:10:18,000 --> 01:10:21,000
那最开始的时候可能遵循这个

1900
01:10:21,000 --> 01:10:23,000
这个就是 linux file system hierarchy

1901
01:10:23,000 --> 01:10:25,000
这个就是一个很简单的方式

1902
01:10:25,000 --> 01:10:29,000
会把一些自己编译的或者说空安装的软件放在比如说 user local 里面

1903
01:10:29,000 --> 01:10:30,000
各个包里面是吧

1904
01:10:30,000 --> 01:10:33,000
bin 或者是 etc 里面去

1905
01:10:33,000 --> 01:10:34,000
那其实后来发现

1906
01:10:34,000 --> 01:10:36,000
哎就是 bush

1907
01:10:36,000 --> 01:10:37,000
太麻烦了

1908
01:10:37,000 --> 01:10:41,000
我就放到一个我就放那个 slash opt 就是 optional 嘛

1909
01:10:41,000 --> 01:10:45,000
然后在每一个应用建一个目录把东西都塞在里面去

1910
01:10:45,000 --> 01:10:47,000
这样发现管理起来是更加简单的

1911
01:10:47,000 --> 01:10:49,000
其实我刚才就想吐槽说

1912
01:10:49,000 --> 01:10:51,000
我靠这个还有两个

1913
01:10:51,000 --> 01:10:53,000
我就我们之前说了这个

1914
01:10:53,000 --> 01:10:58,000
user bin 和 user local bin 都还听起来像模像样

1915
01:10:58,000 --> 01:11:01,000
这个 etc 和 opt 是什么鬼

1916
01:11:01,000 --> 01:11:02,000
对吧

1917
01:11:02,000 --> 01:11:05,000
什么是 etc 和 optional 啊

1918
01:11:05,000 --> 01:11:06,000
我靠

1919
01:11:06,000 --> 01:11:10,000
难道 user local bin 里面的东西不是 optional 的吗

1920
01:11:10,000 --> 01:11:11,000
难道

1921
01:11:11,000 --> 01:11:13,000
而且难道什么

1922
01:11:13,000 --> 01:11:16,000
对于 apache 的 configuration

1923
01:11:16,000 --> 01:11:19,000
不应该有一个 dedicated location 吗

1924
01:11:19,000 --> 01:11:21,000
那为什么要把它放在 etc 里面呢

1925
01:11:21,000 --> 01:11:23,000
就一种 what the fuck

1926
01:11:23,000 --> 01:11:24,000
感觉

1927
01:11:24,000 --> 01:11:26,000
对对

1928
01:11:26,000 --> 01:11:31,000
整个这个 fhs 这套规约其实都很是一个 avatory 的东西

1929
01:11:31,000 --> 01:11:36,000
然后说因为历史严格或者是这个过去遵守了这么多年

1930
01:11:36,000 --> 01:11:39,000
约定俗成变成了这么一个奇怪的

1931
01:11:39,000 --> 01:11:41,000
没有什么逻辑和理由的怪胎

1932
01:11:41,000 --> 01:11:42,000
嗯

1933
01:11:42,000 --> 01:11:43,000
就我还蛮支持很多

1934
01:11:43,000 --> 01:11:45,000
现在很多发行板在做一些尝试吧

1935
01:11:45,000 --> 01:11:46,000
他这个东西尽量简化

1936
01:11:46,000 --> 01:11:49,000
像你比如说像 os 10 的方式去看齐了

1937
01:11:49,000 --> 01:11:50,000
没错

1938
01:11:50,000 --> 01:11:51,000
嗯

1939
01:11:51,000 --> 01:11:52,000
啊

1941
01:12:22,000 --> 01:12:23,000
是

1942
01:12:23,000 --> 01:12:24,000
对

1943
01:12:24,000 --> 01:12:25,000
你什么时候安装给打开用户呢

1944
01:12:25,000 --> 01:12:26,000
还能安装给所有用户

1945
01:12:26,000 --> 01:12:27,000
差别

1946
01:12:27,000 --> 01:12:30,000
不是他没有没有这个选项

1947
01:12:30,000 --> 01:12:31,000
你只能安装给这个

1948
01:12:31,000 --> 01:12:32,000
啊

1949
01:12:32,000 --> 01:12:36,000
我现在 application 就是 slashapplication 里面的那些 bundle

1950
01:12:36,000 --> 01:12:37,000
只能有两种情况

1951
01:12:37,000 --> 01:12:39,000
属于某一个安装时候

1952
01:12:39,000 --> 01:12:40,000
他的账户

1953
01:12:40,000 --> 01:12:42,000
和属于这个 root

1954
01:12:42,000 --> 01:12:43,000
啊

1955
01:12:43,000 --> 01:12:44,000
对

1956
01:12:44,000 --> 01:12:46,000
不我的意思是

1957
01:12:46,000 --> 01:12:47,000
就是

1958
01:12:47,000 --> 01:12:51,000
这个官方推荐的四个安装 app 的地方

1959
01:12:51,000 --> 01:12:58,000
并不包括自己的 home 目录下面的 slash applications

1960
01:12:58,000 --> 01:13:00,000
但其实你是可以这么干的

1961
01:13:00,000 --> 01:13:01,000
你是可以这么干的

1962
01:13:01,000 --> 01:13:02,000
但是如果你这么干的话

1963
01:13:02,000 --> 01:13:06,000
你这个 app 只有当前用户可以用

1964
01:13:06,000 --> 01:13:09,000
你都可以用

1965
01:13:09,000 --> 01:13:12,000
都是 global readable 的

1966
01:13:12,000 --> 01:13:14,000
只是说不可以删掉而已

1967
01:13:14,000 --> 01:13:19,000
这个 SIP 还有一个事

1968
01:13:19,000 --> 01:13:22,000
对于我们用 homebrew 的用户来讲

1969
01:13:22,000 --> 01:13:24,000
有超级坑爹的事情

1970
01:13:24,000 --> 01:13:25,000
如果你之前用了 homebrew

1971
01:13:25,000 --> 01:13:28,000
你是升级安装的 10.11

1972
01:13:28,000 --> 01:13:29,000
而不是覆盖安装的话

1973
01:13:29,000 --> 01:13:31,000
你可能之前都有 user local 目录了

1974
01:13:31,000 --> 01:13:33,000
然后你可以把它全新改一下

1975
01:13:33,000 --> 01:13:34,000
不太可能出现问题

1976
01:13:34,000 --> 01:13:37,000
这就不用 studio 了

1977
01:13:37,000 --> 01:13:39,000
但是如果你是全新安装的一个 10.11

1978
01:13:39,000 --> 01:13:41,000
莫非是没有 user local 目录的

1979
01:13:41,000 --> 01:13:42,000
然后如果你见了的话

1980
01:13:42,000 --> 01:13:44,000
提示后提示你不能见

1981
01:13:44,000 --> 01:13:46,000
然后它听了会提醒说

1982
01:13:46,000 --> 01:13:47,000
你不能修改 user

1983
01:13:47,000 --> 01:13:49,000
因为你添加

1984
01:13:49,000 --> 01:13:50,000
user local 等于修改 user

1985
01:13:50,000 --> 01:13:51,000
对吧

1986
01:13:51,000 --> 01:13:54,000
然后你就不得不很坑爹的说

1987
01:13:54,000 --> 01:13:57,000
手工关掉 SIP 的特性

1988
01:13:57,000 --> 01:13:58,000
把 user local 建好之后

1989
01:13:58,000 --> 01:13:59,000
再把 SIP 打开

1990
01:13:59,000 --> 01:14:00,000
对

1991
01:14:00,000 --> 01:14:03,000
然后这个过程牵扯到两次重启动

1992
01:14:03,000 --> 01:14:05,000
但就还好吧

1993
01:14:05,000 --> 01:14:07,000
你为了使用这样

1994
01:14:07,000 --> 01:14:10,000
这么一个 full of awesomeness 的操作系统

1995
01:14:10,000 --> 01:14:11,000
重启动两次还是可以

1996
01:14:11,000 --> 01:14:14,000
不过他们也有说

1997
01:14:14,000 --> 01:14:17,000
其实 homebrew 不用装到 user local 里面

1998
01:14:17,000 --> 01:14:18,000
也可以用

1999
01:14:18,000 --> 01:14:20,000
就是说里面有些可能软件包

2000
01:14:20,000 --> 01:14:22,000
它的默认的路径是什么设置的

2001
01:14:22,000 --> 01:14:27,000
它可能会假设某一些依赖的软件也好

2002
01:14:27,000 --> 01:14:28,000
library 也好

2003
01:14:28,000 --> 01:14:30,000
它是已经在 user local 里面的了

2004
01:14:30,000 --> 01:14:32,000
这个时候你就比较坑

2005
01:14:32,000 --> 01:14:35,000
所以可能另外一种方式就是说

2006
01:14:35,000 --> 01:14:37,000
我们就做一下清洁工作

2007
01:14:37,000 --> 01:14:40,000
把 homebrew 里面的一些软件包

2008
01:14:40,000 --> 01:14:45,000
对 user local 的 hardcoded 的依赖

2009
01:14:45,000 --> 01:14:47,000
把它改成一个可配置的东西

2010
01:14:47,000 --> 01:14:48,000
可能会好一点

2011
01:14:48,000 --> 01:14:52,000
都是可以在编译期的时候

2012
01:14:52,000 --> 01:14:57,000
告诉当前的符入的那个路径在哪吧

2013
01:14:57,000 --> 01:15:00,000
对但不是所有的 formula 都是这么

2014
01:15:00,000 --> 01:15:02,000
都有灵活性

2015
01:15:02,000 --> 01:15:05,000
所以才说刚才要做清理工作

2016
01:15:05,000 --> 01:15:08,000
一个一个去检查那些 formula

2017
01:15:08,000 --> 01:15:11,000
有没有 hardcoded 的依赖

2018
01:15:11,000 --> 01:15:12,000
没错

2019
01:15:12,000 --> 01:15:16,000
我在公司的电脑上其实就是因为我没有 user local 的权限

2020
01:15:16,000 --> 01:15:18,000
我就把 lilu.com 的权限都改成了

2021
01:15:18,000 --> 01:15:20,000
然后我用了一个 liluxbrew

2022
01:15:20,000 --> 01:15:23,000
你知道 liluxbrew 有一个 linux 的 branch 吗

2023
01:15:23,000 --> 01:15:24,000
你为什么要这么坑

2024
01:15:24,000 --> 01:15:26,000
因为我没有 root

2025
01:15:26,000 --> 01:15:29,000
啊这么可怜

2026
01:15:29,000 --> 01:15:29,000
对

2027
01:15:29,000 --> 01:15:31,000
然后就把他们

2028
01:15:31,000 --> 01:15:33,000
一个 rootless 的人

2029
01:15:33,000 --> 01:15:39,000
把他们全都装在到了 twd slash user slash local

2030
01:15:39,000 --> 01:15:40,000
能用吗

2031
01:15:40,000 --> 01:15:42,000
可以啊

2032
01:15:42,000 --> 01:15:43,000
还 ok 吧

2033
01:15:43,000 --> 01:15:44,000
对

2034
01:15:44,000 --> 01:15:48,000
好吧那个 sip 的这个还有这个叫做 rootless

2035
01:15:48,000 --> 01:15:49,000
这个特性说完了

2036
01:15:49,000 --> 01:15:52,000
下一则有点意思的事情是

2037
01:15:52,000 --> 01:15:53,000
这算是难产吧

2038
01:15:53,000 --> 01:15:55,000
千呼万唤是出来

2039
01:15:55,000 --> 01:15:56,000
perl 6 发布了

2040
01:15:56,000 --> 01:15:58,000
还没出来呢其实对

2041
01:15:58,000 --> 01:15:58,000
还没吧

2042
01:15:58,000 --> 01:15:59,000
还是说已经发布了吗

2043
01:15:59,000 --> 01:16:02,000
优爆批发半遮面的状况

2044
01:16:02,000 --> 01:16:06,000
是其实是正确的新闻的说法应该是这样的

2045
01:16:06,000 --> 01:16:07,000
Larry wall 在

2046
01:16:07,000 --> 01:16:09,000
10 月初的时候

2047
01:16:09,000 --> 01:16:11,000
10 月 8 号还是几号的时候

2048
01:16:11,000 --> 01:16:14,000
终于说了一句

2049
01:16:14,000 --> 01:16:17,000
大家圣诞节的时候就可以收到 perl 6 了

2050
01:16:17,000 --> 01:16:19,000
圣诞节是吧

2051
01:16:19,000 --> 01:16:19,000
那还快了

2052
01:16:19,000 --> 01:16:23,000
他说了一个 release date 是今年圣诞节

2053
01:16:23,000 --> 01:16:24,000
ok

2054
01:16:24,000 --> 01:16:25,000
所以

2055
01:16:25,000 --> 01:16:28,000
所以你期待这件事情吗

2056
01:16:28,000 --> 01:16:29,000
我也不知道就

2057
01:16:29,000 --> 01:16:31,000
这就好像是

2058
01:16:31,000 --> 01:16:34,000
有人 15 年前给你许了一个诺言

2059
01:16:34,000 --> 01:16:36,000
然后今天中午要试下

2060
01:16:36,000 --> 01:16:39,000
感觉你已经没有感觉了

2061
01:16:39,000 --> 01:16:41,000
已然不用了是吧

2062
01:16:41,000 --> 01:16:44,000
对啊我记得那个时候还

2063
01:16:44,000 --> 01:16:47,000
2000 年的时候还对 perl 这种

2064
01:16:47,000 --> 01:16:49,000
这种有句话怎么说来着

2065
01:16:49,000 --> 01:16:52,000
PHP 是一种邪恶语言

2066
01:16:52,000 --> 01:16:54,000
但它只是一个

2067
01:16:54,000 --> 01:16:55,000
比较小的邪恶

2068
01:16:55,000 --> 01:16:57,000
因为它是一个

2069
01:16:57,000 --> 01:17:00,000
诚实的业余爱好者写出来的

2070
01:17:00,000 --> 01:17:02,000
分毫

2071
01:17:02,000 --> 01:17:03,000
对 PHP 是小恶

2072
01:17:03,000 --> 01:17:05,000
因为它只是一个

2073
01:17:05,000 --> 01:17:08,000
incompetent 的业余爱好者写出来的

2074
01:17:08,000 --> 01:17:10,000
分毫

2075
01:17:10,000 --> 01:17:11,000
perl 是个大恶

2076
01:17:11,000 --> 01:17:13,000
因为它是一个

2077
01:17:13,000 --> 01:17:15,000
技巧娴熟的

2078
01:17:15,000 --> 01:17:16,000
但是

2079
01:17:16,000 --> 01:17:17,000
非常

2080
01:17:17,000 --> 01:17:18,000
混蛋的

2081
01:17:18,000 --> 01:17:20,000
专业程序员写出来

2082
01:17:20,000 --> 01:17:22,000
哈哈哈哈

2083
01:17:22,000 --> 01:17:24,000
gaggag

2084
01:17:24,000 --> 01:17:26,000
嗯

2085
01:17:26,000 --> 01:17:27,000
啊对

2086
01:17:27,000 --> 01:17:31,000
就是这种感觉就是那个时候 perl 还是一种

2087
01:17:31,000 --> 01:17:33,000
因为那个时候也

2088
01:17:33,000 --> 01:17:38,000
不是写没有写过很多程序也没有那么

2089
01:17:38,000 --> 01:17:43,000
设计过很多语言总觉得 perl 这种看起来像是

2090
01:17:43,000 --> 01:17:46,000
连滚锅键盘写出来的东西

2091
01:17:46,000 --> 01:17:47,000
还挺有意思的

2092
01:17:47,000 --> 01:17:48,000
嗯

2093
01:17:48,000 --> 01:17:52,000
那个时候觉得我靠不知道 perl 6 又会有什么

2094
01:17:52,000 --> 01:17:53,000
了不起的东西

2095
01:17:53,000 --> 01:17:54,000
对吧

2096
01:17:54,000 --> 01:17:58,000
但是 15 年之后就 2010 年的时候就说我们要做 perl 6

2097
01:17:58,000 --> 01:18:01,000
就 2010 年的时候 perl 6 的那个

2098
01:18:01,000 --> 01:18:02,000
specification 已经出来了

2099
01:18:02,000 --> 01:18:04,000
还是已经开始 draft 了

2100
01:18:04,000 --> 01:18:09,000
然后一直 15 年之后才说 perl 6 的 1.0 可能要出来

2101
01:18:09,000 --> 01:18:11,000
这是一种什么样的

2102
01:18:11,000 --> 01:18:13,000
不过其实 perl 这个语言怎么说

2103
01:18:13,000 --> 01:18:15,000
对他感觉还挺复杂的

2104
01:18:15,000 --> 01:18:16,000
就是基本上

2105
01:18:16,000 --> 01:18:20,000
他这么说吧就是他我觉得他是一种属于叫做

2106
01:18:20,000 --> 01:18:23,000
convenience over simplicity

2107
01:18:23,000 --> 01:18:24,000
对就是

2108
01:18:24,000 --> 01:18:25,000
的设计

2109
01:18:25,000 --> 01:18:28,000
perl 是一种

2110
01:18:28,000 --> 01:18:31,000
易于写但不易于读的语言

2111
01:18:31,000 --> 01:18:32,000
就

2112
01:18:32,000 --> 01:18:36,000
语言有些语言容易读又容易写比如说 python

2113
01:18:36,000 --> 01:18:42,000
有些语言容易读但是不容易写比如说 pasco

2114
01:18:42,000 --> 01:18:44,000
或者 faultran

2115
01:18:44,000 --> 01:18:46,000
Faultran 不算容易

2116
01:18:46,000 --> 01:18:47,000
读吧

2117
01:18:47,000 --> 01:18:49,000
但是现在的观点 Faultran 不是非常容易

2118
01:18:49,000 --> 01:18:53,000
然后有些语言是非常容易写但是就是

2119
01:18:53,000 --> 01:18:58,000
一周之后你在读的时候如果你之前没有写文档的话你就会想要回到一周之前杀了

2120
01:18:58,000 --> 01:19:00,000
对

2121
01:19:00,000 --> 01:19:03,000
这个就比如说 brainfuck 和 perl

2122
01:19:03,000 --> 01:19:05,000
就这种感觉

2123
01:19:05,000 --> 01:19:08,000
想不到影响了这么低的等级

2124
01:19:08,000 --> 01:19:08,000
没错

2125
01:19:08,000 --> 01:19:16,000
不但说到其实 perl 这种语法的这种便利性还是挺激励了很多人可能 Ruby 算是

2126
01:19:16,000 --> 01:19:17,000
几大权者吧

2127
01:19:17,000 --> 01:19:24,000
对而且 perl 其实也不是一个始作俑者因为在 perl 出现的时候什么 bash 之类的

2128
01:19:24,000 --> 01:19:28,000
shell 已经有了很多就是非常奇怪的符号

2129
01:19:28,000 --> 01:19:30,000
非常非常非常

2130
01:19:30,000 --> 01:19:32,000
如果你不知道的话你就是猜不出来 convention

2131
01:19:32,000 --> 01:19:37,000
只不过 perl 把他们都花园光大了并且让 perl 变成了

2132
01:19:37,000 --> 01:19:39,000
曾几何时最流行的语言啊

2133
01:19:39,000 --> 01:19:40,000
就像

2134
01:19:40,000 --> 01:19:44,000
那时候 perl 2000 年左右的甚至不用 2000 年 90 年左右的

2135
01:19:44,000 --> 01:19:47,000
perl 的 hype 的程度就像现在的 Ruby

2136
01:19:47,000 --> 01:19:50,000
可能比 Ruby 还要甚一些

2137
01:19:50,000 --> 01:19:52,000
对对对

2138
01:19:52,000 --> 01:19:54,000
back in the heydays of perl

2139
01:19:54,000 --> 01:19:55,000
就是你会觉得我靠

2140
01:19:55,000 --> 01:19:58,000
不会写两句 perl 都不好意思跟人打招呼

2141
01:19:58,000 --> 01:19:59,000
那个时候

2142
01:19:59,000 --> 01:20:03,000
还没有 PHP 呢就你写网页你要么用 C

2143
01:20:03,000 --> 01:20:05,000
用 C

2144
01:20:05,000 --> 01:20:07,000
要么用

2145
01:20:07,000 --> 01:20:09,000
perl

2146
01:20:09,000 --> 01:20:11,000
直到后来才有什么

2147
01:20:11,000 --> 01:20:14,000
PHP 或者 SP 这种让

2148
01:20:14,000 --> 01:20:14,000
RMR 的这种

2149
01:20:14,000 --> 01:20:16,000
都可以去写网页的东西出现

2150
01:20:16,000 --> 01:20:20,000
然后 perl 在那个时候也是 CGI 和

2151
01:20:20,000 --> 01:20:22,000
和

2152
01:20:22,000 --> 01:20:26,000
一些比较常见的 daily automation 的

2153
01:20:26,000 --> 01:20:28,000
最得力的工具

2154
01:20:28,000 --> 01:20:30,000
当时我也是因为这个动机才去学的嘛

2155
01:20:30,000 --> 01:20:33,000
就是觉得我靠这是一个 hacker 的语言

2156
01:20:33,000 --> 01:20:34,000
which is true

2157
01:20:34,000 --> 01:20:34,000
still true

2158
01:20:34,000 --> 01:20:39,000
只不过你看 15 年后当初的 perl 的 hacker

2159
01:20:39,000 --> 01:20:41,000
比如谁唐汉宗你知道这个是什么

2160
01:20:41,000 --> 01:20:42,000
不是啊

2161
01:20:42,000 --> 01:20:44,000
唐汉宗是中文圈里面

2162
01:20:44,000 --> 01:20:45,000
非常台湾人

2163
01:20:45,000 --> 01:20:46,000
中文圈里面

2164
01:20:46,000 --> 01:20:49,000
对 perl 非常有贡献的一个人

2165
01:20:49,000 --> 01:20:51,000
但是具体贡献是什么我不记得了

2166
01:20:51,000 --> 01:20:54,000
但你看 15 年过去唐汉宗已经

2167
01:20:54,000 --> 01:20:56,000
唐汉宗已经变性了

2168
01:20:56,000 --> 01:20:58,000
唐汉宗已经

2169
01:20:58,000 --> 01:20:59,000
去做变性手术

2170
01:20:59,000 --> 01:21:00,000
改名叫唐艳了

2171
01:21:00,000 --> 01:21:01,000
然后

2172
01:21:01,000 --> 01:21:04,000
perl 还没有出来呢

2173
01:21:04,000 --> 01:21:05,000
就是这种感觉

2174
01:21:05,000 --> 01:21:07,000
不仅沧海桑田

2175
01:21:07,000 --> 01:21:09,000
连人都

2176
01:21:09,000 --> 01:21:10,000
人都已经

2177
01:21:10,000 --> 01:21:11,000
对

2178
01:21:11,000 --> 01:21:12,000
不再

2179
01:21:12,000 --> 01:21:14,000
所以 perl 就已经不在了了

2180
01:21:14,000 --> 01:21:16,000
已经不算是一个新语言了

2181
01:21:16,000 --> 01:21:18,000
perl 绝对不新

2182
01:21:18,000 --> 01:21:19,000
perl 是

2183
01:21:19,000 --> 01:21:19,000
perl 6

2184
01:21:19,000 --> 01:21:21,000
perl 6 好吧

2185
01:21:21,000 --> 01:21:22,000
从这个

2186
01:21:22,000 --> 01:21:24,000
因为他的 spec 已经出了那么久了

2187
01:21:24,000 --> 01:21:25,000
大家都该

2188
01:21:25,000 --> 01:21:26,000
激动过了

2189
01:21:26,000 --> 01:21:27,000
都激动过了

2190
01:21:27,000 --> 01:21:28,000
就好像一个

2191
01:21:28,000 --> 01:21:30,000
怀胎 10 年的孩子生下来了

2192
01:21:30,000 --> 01:21:32,000
你说他是一个婴儿呢

2193
01:21:32,000 --> 01:21:35,000
还是说他是一个怪胎

2194
01:21:35,000 --> 01:21:36,000
他是哪家

2195
01:21:36,000 --> 01:21:39,000
哈哈哈

2196
01:21:39,000 --> 01:21:41,000
second quotation of the day

2197
01:21:41,000 --> 01:21:44,000
没错

2198
01:21:44,000 --> 01:21:44,000
好吧

2199
01:21:44,000 --> 01:21:46,000
这个就过一下凡总也不怎么用了

2200
01:21:46,000 --> 01:21:47,000
大家就是

2201
01:21:47,000 --> 01:21:49,000
其实如果你写过 perl

2202
01:21:49,000 --> 01:21:50,000
我相信我们的听众里面

2203
01:21:50,000 --> 01:21:51,000
可能没有什么人

2204
01:21:51,000 --> 01:21:52,000
写着 perl 长大了

2205
01:21:52,000 --> 01:21:53,000
但如果假设

2206
01:21:53,000 --> 01:21:55,000
竟然有的话

2207
01:21:55,000 --> 01:21:56,000
就是你年少时写的 perl

2208
01:21:56,000 --> 01:21:59,000
在 perl 6 里面

2209
01:21:59,000 --> 01:22:00,000
很多地方都不一样了

2210
01:22:00,000 --> 01:22:01,000
然后那个

2211
01:22:01,000 --> 01:22:02,000
比如说一些

2212
01:22:02,000 --> 01:22:02,000
perl 6 里面

2213
01:22:02,000 --> 01:22:04,000
perl 之前 perl 里面

2214
01:22:04,000 --> 01:22:06,000
一些比较奇怪的语义

2215
01:22:06,000 --> 01:22:07,000
在 perl 里面

2216
01:22:07,000 --> 01:22:09,000
perl 6 里面都被改过来了

2217
01:22:09,000 --> 01:22:09,000
比如说什么

2218
01:22:09,000 --> 01:22:10,000
ary

2219
01:22:10,000 --> 01:22:12,000
的 index

2220
01:22:12,000 --> 01:22:12,000
嗯

2221
01:22:12,000 --> 01:22:14,000
我不记得具体是什么

2222
01:22:14,000 --> 01:22:16,000
比如说那个

2223
01:22:16,000 --> 01:22:17,000
我想想

2224
01:22:17,000 --> 01:22:19,000
perl 里面

2225
01:22:19,000 --> 01:22:21,000
ary 要用 at

2226
01:22:21,000 --> 01:22:24,000
做前缀

2227
01:22:24,000 --> 01:22:26,000
然后

2228
01:22:26,000 --> 01:22:29,000
如果你要去 index 里面的一个 item 的时候

2229
01:22:29,000 --> 01:22:31,000
你要把前缀变成 dollar

2230
01:22:31,000 --> 01:22:33,000
因为

2231
01:22:33,000 --> 01:22:34,000
Larry Wall 认为

2232
01:22:34,000 --> 01:22:38,000
在你去 index

2233
01:22:38,000 --> 01:22:40,000
ary 里面的一个

2234
01:22:40,000 --> 01:22:42,000
单一的量的时候

2235
01:22:42,000 --> 01:22:43,000
它是一个 scala

2236
01:22:43,000 --> 01:22:45,000
所以要用 dollar

2237
01:22:45,000 --> 01:22:47,000
就有很多这种

2238
01:22:47,000 --> 01:22:48,000
what the fuck 的地方在

2239
01:22:48,000 --> 01:22:50,000
perl 6 里面都被修复了

2240
01:22:50,000 --> 01:22:52,000
或者说

2241
01:22:52,000 --> 01:22:53,000
对就已经

2242
01:22:53,000 --> 01:22:55,000
姗姗来迟了让你觉得我靠这

2243
01:22:55,000 --> 01:22:57,000
还比较好理解

2244
01:22:57,000 --> 01:22:59,000
但除此之外

2245
01:22:59,000 --> 01:23:00,000
我也不

2246
01:23:00,000 --> 01:23:02,000
会有这个语言会重新兴起来吗

2247
01:23:02,000 --> 01:23:06,000
我觉得不太可能

2248
01:23:06,000 --> 01:23:08,000
反正我对他们其实个人没什么好感

2249
01:23:08,000 --> 01:23:12,000
我觉得他的设计理念跟我的

2250
01:23:12,000 --> 01:23:13,000
很难接受吧真的说是

2251
01:23:13,000 --> 01:23:16,000
但 perl 的

2252
01:23:16,000 --> 01:23:21,000
好处就是有非常多的 one liner

2253
01:23:21,000 --> 01:23:24,000
如果你去花一些时间投资在 perl 上面的话

2254
01:23:24,000 --> 01:23:27,000
还是比较值得的吧

2255
01:23:27,000 --> 01:23:31,000
第一问题是在于你这个经常记不住到底在干嘛

2256
01:23:31,000 --> 01:23:32,000
对你就得去搜

2257
01:23:32,000 --> 01:23:34,000
然后搜一个 perl 6 的 one liner

2258
01:23:34,000 --> 01:23:36,000
perl 的 one liner 就可以解决很多问题

2259
01:23:36,000 --> 01:23:39,000
而且在很多操作系统上面

2260
01:23:39,000 --> 01:23:42,000
不一定有 ruby 但是

2261
01:23:42,000 --> 01:23:43,000
基本上不会没什么问题的

2262
01:23:43,000 --> 01:23:45,000
没有 perl 这种感觉

2263
01:23:45,000 --> 01:23:46,000
嗯

2264
01:23:46,000 --> 01:23:48,000
嗯

2265
01:23:48,000 --> 01:23:50,000
差不多是这样吧

2266
01:23:50,000 --> 01:23:52,000
perl 6 的新闻就到此为止了

2267
01:23:52,000 --> 01:23:53,000
大家有兴趣的去

2268
01:23:53,000 --> 01:23:55,000
去缅怀一下就去看一下

2269
01:23:55,000 --> 01:23:56,000
嗯

2270
01:23:56,000 --> 01:23:59,000
这个有一个下面这个新闻是个大事

2271
01:23:59,000 --> 01:24:01,000
这个叫做 let's encrypt

2272
01:24:01,000 --> 01:24:03,000
这个这个这个

2273
01:24:03,000 --> 01:24:05,000
就算那个 API 吗还是一个服务

2274
01:24:05,000 --> 01:24:07,000
他的那个证书

2275
01:24:07,000 --> 01:24:09,000
已经被交叉了

2276
01:24:09,000 --> 01:24:11,000
sign sign 的

2277
01:24:11,000 --> 01:24:13,000
签名过了

2278
01:24:13,000 --> 01:24:15,000
这可能要解释一下什么是

2279
01:24:15,000 --> 01:24:17,000
应该说已经被 trusted

2280
01:24:17,000 --> 01:24:18,000
就是已经被

2281
01:24:18,000 --> 01:24:19,000
信任

2282
01:24:19,000 --> 01:24:21,000
主流的浏览器 trust

2283
01:24:21,000 --> 01:24:22,000
就是信任了

2284
01:24:22,000 --> 01:24:23,000
对

2285
01:24:23,000 --> 01:24:25,000
啊

2286
01:24:25,000 --> 01:24:28,000
这怎么说先说 let's encrypt 是个啥吧

2287
01:24:28,000 --> 01:24:31,000
let's encrypt 是一个这个

2288
01:24:31,000 --> 01:24:33,000
一套服务一套

2289
01:24:33,000 --> 01:24:36,000
开源的软件和服务吧

2290
01:24:36,000 --> 01:24:37,000
它可以使得

2291
01:24:37,000 --> 01:24:37,000
你

2292
01:24:37,000 --> 01:24:40,000
部署到一个客户端到你的服务器的时候

2293
01:24:40,000 --> 01:24:42,000
他自动帮你去配置这个服务器的这个对 SSL 证书吧

2294
01:24:42,000 --> 01:24:43,000
他自动帮你去配置这个服务器的这个对 SSL 证书吧

2295
01:24:43,000 --> 01:24:45,000
他自动帮你去配置这个服务器的这个对 SSL 证书吧

2296
01:24:45,000 --> 01:24:46,000
和那个

2297
01:24:46,000 --> 01:24:48,000
包括这个

2298
01:24:48,000 --> 01:24:50,000
证书的签发呀

2299
01:24:50,000 --> 01:24:53,000
这个 key 的这个生成啊

2300
01:24:53,000 --> 01:24:55,000
还有包括这个证书的过期

2301
01:24:55,000 --> 01:24:57,000
自动升级呀自动这个

2302
01:24:57,000 --> 01:24:59,000
自动重新

2303
01:24:59,000 --> 01:25:00,000
重新申请吧

2304
01:25:00,000 --> 01:25:02,000
这个整套的流程都完了

2305
01:25:02,000 --> 01:25:05,000
可能说起来比较奇怪啊为什么会有这个东西存在

2306
01:25:05,000 --> 01:25:09,000
其实应该说一开始要解释存在一个什么样的问题或者他的愿景是什么

2307
01:25:09,000 --> 01:25:10,000
对对对

2308
01:25:10,000 --> 01:25:12,000
就其实问题也

2309
01:25:12,000 --> 01:25:12,000
也

2310
01:25:13,000 --> 01:25:15,000
是一两句话就可以概括了就是

2311
01:25:15,000 --> 01:25:18,000
现在大家上了网

2312
01:25:18,000 --> 01:25:22,000
每一个请求如果你不做特殊要求的话都是明信片

2313
01:25:22,000 --> 01:25:23,000
就

2314
01:25:23,000 --> 01:25:27,000
HTTP 是明文的任何就是

2315
01:25:27,000 --> 01:25:30,000
你在和别的电脑谈话的时候

2316
01:25:30,000 --> 01:25:33,000
你和那个电脑之间的任何

2317
01:25:33,000 --> 01:25:37,000
内容都可以被中间经历的所有电脑

2318
01:25:37,000 --> 01:25:38,000
看到

2319
01:25:38,000 --> 01:25:39,000
而

2320
01:25:39,000 --> 01:25:43,000
HTPS 的或者 less encrypted 的愿景就是

2321
01:25:43,000 --> 01:25:48,000
希望把所有这些明信片都变成信件就是默认上面是要盖层信封的如果你

2322
01:25:49,000 --> 01:25:52,000
不去拆的话或者说如果你不十点进的话你是看不到内容的

2323
01:25:53,000 --> 01:25:54,000
这愿景就是这个

2324
01:25:54,000 --> 01:25:56,000
但是此前存在一个什么问题呢就是

2325
01:25:57,000 --> 01:25:59,000
作为一个普通的站长来说

2326
01:25:59,000 --> 01:26:00,000
你要去

2327
01:26:01,000 --> 01:26:02,000
首先得花钱

2328
01:26:02,000 --> 01:26:04,000
这是最大的门槛

2329
01:26:04,000 --> 01:26:06,000
但也不一定也有免费的

2330
01:26:06,000 --> 01:26:08,000
对但是你在买那个

2331
01:26:09,000 --> 01:26:10,000
服务的时候是花了钱的

2332
01:26:10,000 --> 01:26:12,000
如果你用一个免费空间的话他是有的

2333
01:26:13,000 --> 01:26:16,000
不是不是证书也有免费的但是限制

2334
01:26:16,000 --> 01:26:20,000
但是前提是你得去买一个什么 domain 之类的东西

2335
01:26:21,000 --> 01:26:23,000
签发证书跟

2336
01:26:25,000 --> 01:26:27,000
如果你没有独立 domain 的话

2337
01:26:27,000 --> 01:26:29,000
这个没有区别

2338
01:26:29,000 --> 01:26:32,000
你用 HTTP 也要买 domain

2339
01:26:33,000 --> 01:26:33,000
也要买域名

2340
01:26:34,000 --> 01:26:40,000
最大问题就是说大部分的这个 SSL 证书是好用的或者说这个兼容性

2341
01:26:40,000 --> 01:26:41,000
比较好的

2342
01:26:42,000 --> 01:26:43,000
会比较贵

2343
01:26:44,000 --> 01:26:47,000
而且这个跟域名还有点关系比如说

2344
01:26:47,000 --> 01:26:52,000
现在免费一般就是单一域名的证书比如说 IPN 的话

2345
01:26:52,000 --> 01:26:56,000
你只能买 3 w.ipn.li 这个域名的证书

2346
01:26:57,000 --> 01:26:58,000
我想说比如说

2347
01:26:58,000 --> 01:27:02,000
XXX 就是千万可以计划任意的.ipn.li

2348
01:27:02,000 --> 01:27:05,000
这个域名都可以用的话就叫做 wildcard 证书的话

2349
01:27:05,000 --> 01:27:10,000
一年就得好几十刀到几百刀根据你这个验证的程度不一样

2350
01:27:10,000 --> 01:27:12,000
所以还是有经济

2351
01:27:12,000 --> 01:27:14,000
价钱倒好说了

2352
01:27:14,000 --> 01:27:16,000
最主要的是这个

2353
01:27:16,000 --> 01:27:19,000
配置非常非常非常复杂

2354
01:27:19,000 --> 01:27:20,000
因为首先申请这个

2355
01:27:21,000 --> 01:27:23,000
数字证书你要做几件事情

2356
01:27:23,000 --> 01:27:24,000
首先你得验证你是这个

2357
01:27:25,000 --> 01:27:26,000
域名的实际控制人

2358
01:27:26,000 --> 01:27:27,000
他要做几件事了

2359
01:27:28,000 --> 01:27:29,000
有一些比较

2360
01:27:29,000 --> 01:27:31,000
简单的他可以说你在

2361
01:27:31,000 --> 01:27:34,000
域名上放一个什么特殊的指定文件他可以验证你的

2362
01:27:34,000 --> 01:27:35,000
也可以

2363
01:27:35,000 --> 01:27:37,000
但一般来说就是给你的这个

2364
01:27:37,000 --> 01:27:40,000
比如说是给这个 webmaster at

2365
01:27:40,000 --> 01:27:40,000
这个域名的

2366
01:27:41,000 --> 01:27:41,000
一个邮箱

2367
01:27:42,000 --> 01:27:43,000
他发一封这个信

2368
01:27:43,000 --> 01:27:44,000
里面有一个 code

2369
01:27:45,000 --> 01:27:47,000
你收到 code 证明说

2370
01:27:47,000 --> 01:27:48,000
你确实是这个

2371
01:27:49,000 --> 01:27:51,000
域名的实际控制人因为你是 webmaster 这个账号

2372
01:27:52,000 --> 01:27:54,000
但这整个是挺坑爹的

2373
01:27:55,000 --> 01:27:58,000
完了之后你还得生成这个相应的公钥和私钥

2374
01:27:58,000 --> 01:28:00,000
要敲一大堆命令

2375
01:28:00,000 --> 01:28:02,000
然后用那个

2376
01:28:02,000 --> 01:28:05,000
用你的这个私钥去生成一个

2377
01:28:06,000 --> 01:28:07,000
request

2378
01:28:07,000 --> 01:28:09,000
certificate request

2379
01:28:09,000 --> 01:28:10,000
公钥去生成

2380
01:28:11,000 --> 01:28:12,000
一个 certification request

2381
01:28:13,000 --> 01:28:15,000
对对然后证明然后你再把这个 certificate request

2382
01:28:15,000 --> 01:28:20,000
发给你的这个叫做这个签发你的这个 SNL 证书的这个机构

2383
01:28:20,000 --> 01:28:22,000
一般叫做 CA 嘛

2384
01:28:22,000 --> 01:28:25,000
然后他会根据你的情况再给你

2385
01:28:25,000 --> 01:28:27,000
签一份证书回来

2386
01:28:27,000 --> 01:28:28,000
然后你再把证书

2387
01:28:29,000 --> 01:28:29,000
打包

2388
01:28:29,000 --> 01:28:32,000
到你一个一个正确的格式

2389
01:28:33,000 --> 01:28:35,000
然后让配置你的这个 web

2390
01:28:35,000 --> 01:28:37,000
浮起 web server

2391
01:28:37,000 --> 01:28:38,000
去 load 这个证书

2392
01:28:39,000 --> 01:28:40,000
然后使得

2393
01:28:40,000 --> 01:28:42,000
人家访问 43 端口的时候

2394
01:28:42,000 --> 01:28:43,000
能够

2395
01:28:43,000 --> 01:28:44,000
正确的读取到这个证书

2396
01:28:44,000 --> 01:28:49,000
这过程相当繁琐和麻烦因为我维护那个 IPM 之下的现在比如说我们 10 档节目

2397
01:28:50,000 --> 01:28:51,000
每档节目都有自己的网

2398
01:28:51,000 --> 01:28:52,000
这个独立的域名

2399
01:28:53,000 --> 01:28:56,000
然后 IPM 自己还有一个域名就有 11 个域名了对吧

2400
01:28:56,000 --> 01:28:57,000
然后 10 个域名

2401
01:28:57,000 --> 01:28:58,000
还有 other for us

2402
01:28:59,000 --> 01:29:04,000
那个也是还有我个人自己的对吧就一大堆的域名

2403
01:29:04,000 --> 01:29:06,000
我得要去每一个都得走这么一个流程

2404
01:29:07,000 --> 01:29:08,000
这过程是很坑爹的

2405
01:29:09,000 --> 01:29:09,000
所以我们

2406
01:29:09,000 --> 01:29:10,000
Mr encryption

2407
01:29:10,000 --> 01:29:16,000
所以其实如果能一套自动化的工具或者这个工具料也好还是一个服务要能够把这个

2408
01:29:17,000 --> 01:29:17,000
过程

2409
01:29:17,000 --> 01:29:20,000
减轻一下负担其实蛮好

2410
01:29:20,000 --> 01:29:21,000
并且免费

2411
01:29:21,000 --> 01:29:23,000
对如果能免费就更好了

2412
01:29:23,000 --> 01:29:24,000
那 let's encrypt

2413
01:29:24,000 --> 01:29:26,000
就是干这么一件事

2414
01:29:26,000 --> 01:29:27,000
所以讲人之来

2415
01:29:27,000 --> 01:29:30,000
就相当于 homebrew 之余

2416
01:29:30,000 --> 01:29:31,000
less encrypt

2417
01:29:31,000 --> 01:29:32,000
之余 SSL

2418
01:29:32,000 --> 01:29:35,000
就相当于 homebrew 之余下载 config

2419
01:29:36,000 --> 01:29:37,000
make making start

2420
01:29:38,000 --> 01:29:40,000
这个这个比喻还挺好

2421
01:29:41,000 --> 01:29:42,000
是一件非常好的事情

2422
01:29:43,000 --> 01:29:47,000
然后 10 月 19 号的时候 less encrypt 的根证书终于被

2423
01:29:47,000 --> 01:29:49,000
所有浏览器

2424
01:29:49,000 --> 01:29:50,000
所

2425
01:29:50,000 --> 01:29:50,000
所信了

2426
01:29:51,000 --> 01:29:54,000
这个过程讲起来比较复杂

2427
01:29:54,000 --> 01:29:56,000
对 less encrypt 已经有几年了

2428
01:29:56,000 --> 01:29:57,000
四五年了吧至少

2429
01:29:58,000 --> 01:29:59,000
没有吧他是

2430
01:29:59,000 --> 01:30:02,000
去年才开始做的吧

2431
01:30:03,000 --> 01:30:06,000
对这个东西的主要的幕后推手是 mozilla

2432
01:30:09,000 --> 01:30:10,000
是谁来着

2433
01:30:11,000 --> 01:30:11,000
对

2434
01:30:11,000 --> 01:30:13,000
Current Sponsors

2435
01:30:13,000 --> 01:30:16,000
mozilla 然后这个全球最大的

2436
01:30:16,000 --> 01:30:17,000
CNN

2437
01:30:17,000 --> 01:30:18,000
Achamai

2438
01:30:19,000 --> 01:30:20,000
然后还有 EFF

2439
01:30:21,000 --> 01:30:22,000
斯科还有 EFF

2440
01:30:23,000 --> 01:30:25,000
还有 University of Michigan

2441
01:30:25,000 --> 01:30:26,000
What?我怎么没看到

2442
01:30:27,000 --> 01:30:27,000
这是 Founder

2443
01:30:28,000 --> 01:30:30,000
密歇根州立大学

2444
01:30:35,000 --> 01:30:40,000
就有了这套系统之后刚才我说那些繁琐的事情就可以解释了但是有一个问题

2445
01:30:41,000 --> 01:30:42,000
就回到刚才我们讲的

2446
01:30:42,000 --> 01:30:42,000
Spoof

2447
01:30:43,000 --> 01:30:44,000
Single Pointed Filler

2448
01:30:44,000 --> 01:30:46,000
如果谁把 less encrypt 给黑了

2449
01:30:46,000 --> 01:30:49,000
所有用的这个 less encrypt

2450
01:30:49,000 --> 01:30:50,000
都

2451
01:30:50,000 --> 01:30:51,000
都傻逼了

2452
01:30:53,000 --> 01:30:55,000
其实还有一点就是说这个

2453
01:30:55,000 --> 01:30:58,000
我们这个 SSL 用的这个 CA 体系啊

2454
01:30:58,000 --> 01:31:01,000
就是这个 certificate authority 的体系是相当脆弱的

2455
01:31:03,000 --> 01:31:08,000
因为现在就是说那个这可能要先扯一下犊子就是这个 CA 体系到底是怎么一回事

2456
01:31:08,000 --> 01:31:10,000
简单来说就是说你在你的这个电脑里面

2457
01:31:11,000 --> 01:31:12,000
操作系统也好浏览器也好

2458
01:31:12,000 --> 01:31:14,000
他有一堆默认的这种所谓的 CA 证书

2459
01:31:15,000 --> 01:31:17,000
这些 CA 证书本身是

2460
01:31:18,000 --> 01:31:19,000
就是一个

2461
01:31:20,000 --> 01:31:20,000
怎么说来的

2462
01:31:22,000 --> 01:31:24,000
他本身是受信任的他信任是

2463
01:31:24,000 --> 01:31:27,000
是因为你操作系统的这个发行商

2464
01:31:27,000 --> 01:31:32,000
觉得认为这些系统这些 CA 机构是可以信赖的

2465
01:31:32,000 --> 01:31:33,000
然后

2466
01:31:33,000 --> 01:31:36,000
这些 CA 机构在签发二级证书

2467
01:31:37,000 --> 01:31:40,000
然后这些证书再去签发三级证书

2468
01:31:41,000 --> 01:31:43,000
给我们这些这个实际的域名的所有人

2469
01:31:44,000 --> 01:31:44,000
然后

2470
01:31:45,000 --> 01:31:45,000
就等于是

2471
01:31:45,000 --> 01:31:47,000
他们这些 CA 证书证明

2472
01:31:48,000 --> 01:31:49,000
我们是

2473
01:31:49,000 --> 01:31:52,000
假设说是 ipn.li 这个域名的实际所有者

2474
01:31:52,000 --> 01:31:54,000
然后这个证书是合法的

2475
01:31:55,000 --> 01:31:56,000
但是问题在于哪里呢

2476
01:31:56,000 --> 01:32:01,000
就 CA 证书和 CA 证书之间是没有功能区隔的

2477
01:32:01,000 --> 01:32:02,000
就是说

2478
01:32:02,000 --> 01:32:06,000
CA 就是这个 certificate authority 机构 A

2479
01:32:06,000 --> 01:32:08,000
这个就是 A 签发者

2480
01:32:08,000 --> 01:32:10,000
是可以签发 ipn.li 这个证书的

2481
01:32:11,000 --> 01:32:14,000
B 签发者也可以签发 ipn.li 的证书

2482
01:32:14,000 --> 01:32:16,000
那么你会发现

2483
01:32:16,000 --> 01:32:16,000
就是说

2484
01:32:17,000 --> 01:32:22,000
在浏览器或超小区中内置的大概二三十个还是三十十个这种 CA 证书里面

2485
01:32:23,000 --> 01:32:25,000
有任何一家这个 CA 证书的

2486
01:32:26,000 --> 01:32:28,000
跟证书的这个持有的机构

2487
01:32:28,000 --> 01:32:29,000
出了问题

2488
01:32:29,000 --> 01:32:32,000
那么全世界的这个 SSL 证书

2489
01:32:33,000 --> 01:32:35,000
都不会不靠谱

2490
01:32:36,000 --> 01:32:37,000
比如说各位

2491
01:32:38,000 --> 01:32:40,000
非常喜欢删除的

2492
01:32:40,000 --> 01:32:42,000
CNIC 证书

2493
01:32:44,000 --> 01:32:45,000
是一个臭名昭著的流氓证书

2494
01:32:47,000 --> 01:32:48,000
流氓的国度嘛

2495
01:32:49,000 --> 01:32:50,000
当然是流氓的证书

2496
01:32:51,000 --> 01:32:53,000
这就变成了一个木桶原理了

2497
01:32:53,000 --> 01:32:56,000
你所有的 CA 证书组成一块

2498
01:32:56,000 --> 01:32:57,000
一个源头

2499
01:32:57,000 --> 01:32:58,000
你的安全就是里面的水

2500
01:32:59,000 --> 01:33:00,000
你的安全完全取决于

2501
01:33:01,000 --> 01:33:01,000
里面最

2502
01:33:01,000 --> 01:33:03,000
最差的那一块

2503
01:33:03,000 --> 01:33:05,000
那个安全性怎么样

2504
01:33:05,000 --> 01:33:07,000
其实整个体系是非常脆弱的

2505
01:33:08,000 --> 01:33:09,000
就是它

2506
01:33:09,000 --> 01:33:10,000
本质上还是一个现实性的

2507
01:33:11,000 --> 01:33:11,000
就是

2508
01:33:12,000 --> 01:33:13,000
好吧你

2509
01:33:13,000 --> 01:33:15,000
你弄了一台电脑在上面

2510
01:33:15,000 --> 01:33:16,000
做一些计算然后

2511
01:33:17,000 --> 01:33:19,000
计算结果我要去信任你的话

2512
01:33:19,000 --> 01:33:21,000
我要依赖谁呢

2513
01:33:22,000 --> 01:33:23,000
只能依赖你的机构

2514
01:33:23,000 --> 01:33:25,000
你的机构要去找谁来为你背书呢

2515
01:33:26,000 --> 01:33:27,000
可能要去找一个主管部门

2516
01:33:27,000 --> 01:33:29,000
主管部门又要去找谁背书呢

2517
01:33:29,000 --> 01:33:31,000
然后这样一层一层追究

2518
01:33:31,000 --> 01:33:34,000
追根结底还是要回到这个国家机器上面对吧

2519
01:33:35,000 --> 01:33:37,000
但是如果国家机器本身就是不可信任的

2520
01:33:38,000 --> 01:33:39,000
那这个系统不就是完蛋了吗

2521
01:33:40,000 --> 01:33:41,000
对而且

2522
01:33:42,000 --> 01:33:43,000
他这个完蛋还不在于

2523
01:33:43,000 --> 01:33:46,000
这个危害还不仅仅在于这点就算如果假设

2524
01:33:46,000 --> 01:33:50,000
如果你说这个中国的国家机构不可信那你只影响中国的证书

2525
01:33:50,000 --> 01:33:51,000
都还好是吧

2526
01:33:51,000 --> 01:33:58,000
或者说中国的证书不可信会影响到所有其他国家的所有网站

2527
01:33:59,000 --> 01:33:59,000
对对对

2528
01:33:59,000 --> 01:34:00,000
然后

2529
01:34:01,000 --> 01:34:03,000
最近这个赛门铁克就出了这么一个幺蛾子

2530
01:34:04,000 --> 01:34:06,000
就是那个 Google

2531
01:34:07,000 --> 01:34:10,000
发现赛门铁克签发了一堆

2532
01:34:10,000 --> 01:34:12,000
根本不存在的域名的

2533
01:34:13,000 --> 01:34:15,000
这个证书或者是

2534
01:34:16,000 --> 01:34:16,000
就是

2535
01:34:16,000 --> 01:34:18,000
就不该他签发的那些

2536
01:34:18,000 --> 01:34:20,000
这些证书他也在签发

2537
01:34:20,000 --> 01:34:21,000
这就

2538
01:34:21,000 --> 01:34:22,000
会有问题了吧

2539
01:34:22,000 --> 01:34:25,000
对这是好像一个外交官的卖护照一样

2540
01:34:26,000 --> 01:34:27,000
非常恐怖的事情

2541
01:34:28,000 --> 01:34:29,000
对然后

2542
01:34:29,000 --> 01:34:34,000
在 Google 跟那个赛门铁克提出这个问题之后赛门铁克做了一次这个审计

2543
01:34:34,000 --> 01:34:35,000
Security Audit

2544
01:34:35,000 --> 01:34:37,000
然后说解决了这个大概几

2545
01:34:38,000 --> 01:34:39,000
好像是五个吧这个

2546
01:34:39,000 --> 01:34:40,000
错误签发的证书

2547
01:34:41,000 --> 01:34:41,000
之后

2548
01:34:41,000 --> 01:34:43,000
Google 说没有

2549
01:34:43,000 --> 01:34:44,000
Google 说

2550
01:34:44,000 --> 01:34:44,000
又发现

2551
01:34:45,000 --> 01:34:46,000
我操不止五个

2552
01:34:46,000 --> 01:34:51,000
差不多有一百多个这个证书是你错误那个赛门铁克这个签发有问题的

2553
01:34:52,000 --> 01:34:55,000
这就把 Google 惹毛了因为 Google

2554
01:34:56,000 --> 01:34:59,000
这种级别的服务很容易被我们搞嘛

2555
01:34:59,000 --> 01:35:01,000
对吧所以他对这件事情是很介意的

2556
01:35:02,000 --> 01:35:04,000
所以后来他们做了一个完全的审计发现一共有

2557
01:35:05,000 --> 01:35:07,000
160 几个证书

2558
01:35:07,000 --> 01:35:10,000
被错误的签发了还有

2559
01:35:10,000 --> 01:35:13,000
两千五将近 2500 个证书

2560
01:35:13,000 --> 01:35:17,000
给签发给那些根本就没有被注册过的居民就完全是有问题的嘛

2561
01:35:17,000 --> 01:35:20,000
说明这个赛门铁克内部的这个安全管理那个流程是

2562
01:35:21,000 --> 01:35:21,000
一塌糊涂的

2563
01:35:22,000 --> 01:35:22,000
对

2564
01:35:22,000 --> 01:35:26,000
然后这个就那个于是 Google 就毫不犹豫的直接打脸了

2565
01:35:26,000 --> 01:35:30,000
就这个警告这个赛门铁克然后要求赛门铁克今后

2566
01:35:30,000 --> 01:35:35,000
就从明年 2010 年 6 月 1 号开始的所有的签发过程都必须公开

2567
01:35:37,000 --> 01:35:40,000
就这个是一个非常严格的非常严

2568
01:35:40,000 --> 01:35:42,000
严厉的一个要求吧

2569
01:35:42,000 --> 01:35:45,000
对了一个惩罚就说这个你这个赛门铁克更不靠谱

2570
01:35:45,000 --> 01:35:50,000
就还有更有可能就是说如果你这种事再犯就直接吊销你的这个 CA 的权限了对吧

2571
01:35:51,000 --> 01:35:52,000
就好像我们在

2572
01:35:53,000 --> 01:35:57,000
这个我们的系统里面默默的关掉了 CNIC 的这个 CNIC 证书一样

2573
01:35:58,000 --> 01:36:00,000
是基于一些这个基础的信任的问题

2574
01:36:02,000 --> 01:36:04,000
所以其实

2575
01:36:04,000 --> 01:36:09,000
就很多人在思考怎么去能够干掉这个 C 就是 Certificate Authority

2576
01:36:09,000 --> 01:36:09,000
这套

2577
01:36:09,000 --> 01:36:10,000
这 CA 的权限

2578
01:36:10,000 --> 01:36:12,000
这套系统因为确实太脆弱了

2579
01:36:13,000 --> 01:36:14,000
而且在现在这种

2580
01:36:14,000 --> 01:36:17,000
就是政治环境又不太稳定的情况下

2581
01:36:18,000 --> 01:36:20,000
是很容易被拿来搞别的事情

2582
01:36:22,000 --> 01:36:23,000
我们环境是越来越恶劣

2583
01:36:26,000 --> 01:36:29,000
暂时还没有什么更好的这个替代的

2584
01:36:29,000 --> 01:36:30,000
就简单好用的这个

2585
01:36:31,000 --> 01:36:31,000
替代的

2586
01:36:31,000 --> 01:36:32,000
方法吧

2587
01:36:32,000 --> 01:36:34,000
所以目前为止也就只能说

2588
01:36:35,000 --> 01:36:37,000
首先说加快着 HTPS 的普及

2589
01:36:37,000 --> 01:36:38,000
然后就说

2590
01:36:39,000 --> 01:36:40,000
想一些

2591
01:36:40,000 --> 01:36:41,000
这个替代的方法

2592
01:36:42,000 --> 01:36:43,000
比如说这个叫 Certificate Pinning

2593
01:36:43,000 --> 01:36:45,000
就是证书

2594
01:36:46,000 --> 01:36:47,000
固定证书吧

2595
01:36:47,000 --> 01:36:48,000
就是说我之前

2596
01:36:48,000 --> 01:36:51,000
访问过一次之后就在浏览这边记住这个网站的证书

2597
01:36:51,000 --> 01:36:54,000
下次访问这个网站的时候发现证书改变了

2598
01:36:54,000 --> 01:36:57,000
就会提醒用户说这个网站的证书突然改了

2599
01:36:57,000 --> 01:36:58,000
因为一般情况下这个是

2600
01:37:00,000 --> 01:37:01,000
就不应该这样嘛

2601
01:37:01,000 --> 01:37:03,000
不会出现证书突然改变的情况

2602
01:37:04,000 --> 01:37:04,000
如果出现你就要小心

2603
01:37:05,000 --> 01:37:05,000
是什么问题

2604
01:37:06,000 --> 01:37:09,000
对对对有点那个意思

2605
01:37:10,000 --> 01:37:12,000
还有就是加强这个审计了

2606
01:37:12,000 --> 01:37:14,000
比如说 Google 的夸不证明器里面

2607
01:37:14,000 --> 01:37:16,000
它会向 Google 发送这些

2608
01:37:16,000 --> 01:37:17,000
证书的一些

2609
01:37:17,000 --> 01:37:18,000
一些记录吧

2610
01:37:18,000 --> 01:37:21,000
那 Google 可以从通过一些技术方法去分析

2611
01:37:22,000 --> 01:37:24,000
是不是某一个网站的证书被恶意替换了

2612
01:37:25,000 --> 01:37:26,000
对吧对

2613
01:37:27,000 --> 01:37:30,000
但是总的来说我觉得这套体系还是不靠谱的

2614
01:37:30,000 --> 01:37:30,000
那么

2615
01:37:31,000 --> 01:37:32,000
替代的方案

2616
01:37:33,000 --> 01:37:35,000
比如说像我们叫 Web of Trust

2617
01:37:35,000 --> 01:37:37,000
就是说如果我们不信任任何这个

2618
01:37:37,000 --> 01:37:40,000
不信任单一这个跟证书的情况下

2619
01:37:40,000 --> 01:37:42,000
我们怎么去构建一个

2620
01:37:42,000 --> 01:37:43,000
更加可靠的

2621
01:37:43,000 --> 01:37:44,000
系统去解决这个问题

2622
01:37:45,000 --> 01:37:45,000
这个

2623
01:37:46,000 --> 01:37:47,000
这工程还是蛮复杂的

2624
01:37:47,000 --> 01:37:49,000
我也不是这个专业人士

2625
01:37:49,000 --> 01:37:50,000
不下 BB 了

2626
01:37:51,000 --> 01:37:53,000
就留给各位听众作为今天的作业题吧

2627
01:37:54,000 --> 01:37:56,000
脑力练习对吧

2628
01:37:56,000 --> 01:37:59,000
如何在不信任任何人的情况下开始信任所有人

2629
01:38:00,000 --> 01:38:02,000
内核恐慌之脑洞大开的环节

2630
01:38:04,000 --> 01:38:06,000
我感觉我们的那个邮箱要被要爆了

2631
01:38:06,000 --> 01:38:08,000
其实可以做一个 IMDB 或者这个

2632
01:38:09,000 --> 01:38:10,000
Rotentalk

2633
01:38:10,000 --> 01:38:13,000
Tomato for websites

2634
01:38:13,000 --> 01:38:15,000
那你怎么保证这个 website

2635
01:38:15,000 --> 01:38:16,000
本身的

2636
01:38:16,000 --> 01:38:16,000
可信

2637
01:38:17,000 --> 01:38:18,000
就由他由这个

2638
01:38:18,000 --> 01:38:19,000
这个

2639
01:38:19,000 --> 01:38:22,000
Rotentomato for websites 来办法找书啊

2640
01:38:23,000 --> 01:38:27,000
那我就说你那你怎么保证这个站点本身的这个安全性

2641
01:38:28,000 --> 01:38:29,000
谁来办法他自己的证书

2642
01:38:30,000 --> 01:38:31,000
去中心化

2643
01:38:31,000 --> 01:38:33,000
我也不知道怎么办

2644
01:38:33,000 --> 01:38:34,000
你还是要有一个

2645
01:38:34,000 --> 01:38:36,000
你说我们讲 Web of Trust

2646
01:38:36,000 --> 01:38:38,000
始终是要有一个起点的对吧

2647
01:38:38,000 --> 01:38:39,000
可以利用比特币

2648
01:38:39,000 --> 01:38:42,000
类似的原理就是每一台计算机要生成一个信任

2649
01:38:43,000 --> 01:38:44,000
信任 token

2650
01:38:44,000 --> 01:38:45,000
的

2651
01:38:45,000 --> 01:38:47,000
时候都必须依赖所有其他的计算机

2652
01:38:48,000 --> 01:38:48,000
然后

2653
01:38:49,000 --> 01:38:51,000
你在对对对这是一个

2654
01:38:51,000 --> 01:38:52,000
突破的点

2655
01:38:52,000 --> 01:38:53,000
但是现在就觉得

2656
01:38:53,000 --> 01:38:57,000
首先一个问题是这个延迟太高了因为比特币的那个传播

2657
01:38:57,000 --> 01:38:58,000
他不是实时的吗

2658
01:38:59,000 --> 01:39:02,000
怎么怎么怎么去协调这件事情还是

2659
01:39:02,000 --> 01:39:03,000
挺头痛的

2660
01:39:06,000 --> 01:39:08,000
这个就算是家庭作业吧

2661
01:39:08,000 --> 01:39:09,000
我们今天扯独子也不想

2662
01:39:09,000 --> 01:39:11,000
今天就扯到这里差不多了

2663
01:39:11,000 --> 01:39:12,000
节目时间好像比

2664
01:39:12,000 --> 01:39:17,000
往前短了一些但是我们有没有什么主题可以再讲了

2665
01:39:18,000 --> 01:39:22,000
所以刚才的 moral of the story 就是审计是重要的

2666
01:39:24,000 --> 01:39:25,000
信任是重要的

2667
01:39:25,000 --> 01:39:26,000
安全问题是重要的

2668
01:39:28,000 --> 01:39:30,000
其实审计的重要性我还是

2669
01:39:31,000 --> 01:39:32,000
我女朋友是个审计吧所以

2670
01:39:33,000 --> 01:39:35,000
还是在最近两年才意识到了

2671
01:39:35,000 --> 01:39:36,000
此前我总觉得这个

2672
01:39:38,000 --> 01:39:39,000
企业的自律或者是

2673
01:39:40,000 --> 01:39:46,000
这个有外部事务审计事务所的他律是一个可有可无的东西但

2674
01:39:46,000 --> 01:39:50,000
和女朋友在一起之后才发现我考原来这个玩意真的是

2675
01:39:50,000 --> 01:39:51,000
哪儿必非如此

2676
01:39:51,000 --> 01:39:53,000
对非常非常重要的一个东西

2677
01:39:56,000 --> 01:39:57,000
我们所有人的身家性领袭

2678
01:39:58,000 --> 01:39:58,000
压在

2679
01:39:59,000 --> 01:40:00,000
比如说 Google 或者是

2680
01:40:02,000 --> 01:40:03,000
微软的内部审计

2681
01:40:05,000 --> 01:40:06,000
想内部审计致敬也

2682
01:40:07,000 --> 01:40:07,000
还有外部审计

2683
01:40:08,000 --> 01:40:08,000
好吧

2684
01:40:09,000 --> 01:40:12,000
感谢收听 IPM Podcast 网络旗下的

2685
01:40:13,000 --> 01:40:14,000
IT 技术主题娱乐节目

2686
01:40:15,000 --> 01:40:15,000
内核恐慌

2687
01:40:16,000 --> 01:40:18,000
我们号称 hard core 但是也没有什么干货

2688
01:40:19,000 --> 01:40:21,000
想听的人听不想听的人就别听

2689
01:40:21,000 --> 01:40:26,000
您可以为本节目捐款捐款地址是 kernelpanic.fm

2690
01:40:26,000 --> 01:40:26,000
slash

2691
01:40:27,000 --> 01:40:27,000
donate

2692
01:40:28,000 --> 01:40:29,000
捐款金额随意

2693
01:40:29,000 --> 01:40:31,000
只要是 8 的正整数

2694
01:40:31,000 --> 01:40:32,000
就可以

2695
01:40:33,000 --> 01:40:34,000
正整数倍

2696
01:40:34,000 --> 01:40:37,000
对只要是 8 的正整数倍就可以

2697
01:40:38,000 --> 01:40:39,000
捐款不会给你带来什么

2698
01:40:39,000 --> 01:40:41,000
我们的口号是

2699
01:40:41,000 --> 01:40:43,000
No hard feelings

2700
01:40:44,000 --> 01:40:48,000
如果你有任何反馈可以发电子邮件到 kernelpanic

2701
01:40:48,000 --> 01:40:50,000
atipn.li

2702
01:40:50,000 --> 01:40:53,000
同时也欢迎您收听 IPM 旗下其他各种节目

2703
01:40:54,000 --> 01:40:54,000
IT 公论

2704
01:40:55,000 --> 01:40:55,000
未知道

2705
01:40:55,000 --> 01:40:56,000
太一来了

2706
01:40:56,000 --> 01:40:57,000
流行通信

2707
01:40:58,000 --> 01:40:58,000
High story

2708
01:40:59,000 --> 01:40:59,000
印象

2709
01:41:00,000 --> 01:41:01,000
无次元

2710
01:41:02,000 --> 01:41:05,000
印象印象印象无次元无次元

2711
01:41:05,000 --> 01:41:09,000
上次我们在跟 Livit 做节目的时候最后我说

2712
01:41:09,000 --> 01:41:12,000
我只念了七个然后问你说

2713
01:41:12,000 --> 01:41:13,000
我念完了吗

2714
01:41:13,000 --> 01:41:14,000
然后我说

2715
01:41:15,000 --> 01:41:15,000
念完了

2716
01:41:16,000 --> 01:41:18,000
然后漏了这两个

2717
01:41:18,000 --> 01:41:21,000
海南老师新开的这个博物志和选美

2718
01:41:22,000 --> 01:41:23,000
我们下期节目再会

2719
01:41:24,000 --> 01:41:24,000
我们下期节目再会

2720
01:41:25,000 --> 01:41:25,000
拜拜

