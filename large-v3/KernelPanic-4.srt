1
00:00:00,000 --> 00:00:04,000
感觉今天这个话题有点太大

2
00:00:04,000 --> 00:00:08,000
不知道能不能在一两个小时内讲得清楚

3
00:00:08,000 --> 00:00:12,000
对 而且我觉得有可能我们两个的能力 handle 不了

4
00:00:12,000 --> 00:00:13,000
对

5
00:00:13,000 --> 00:00:16,000
我们两个其实也不是在这个话题上面

6
00:00:16,000 --> 00:00:19,000
非常有经验的两个人

7
00:00:19,000 --> 00:00:20,000
关键是我觉得

8
00:00:20,000 --> 00:00:23,000
首先我们两个都是一个 Vim 的中度用户

9
00:00:23,000 --> 00:00:27,000
这个在本来就是在什么起点上就是有偏见的

10
00:00:27,000 --> 00:00:28,000
对

11
00:00:28,000 --> 00:00:30,000
所以我们算是一个

12
00:00:30,000 --> 00:00:34,000
别人叫什么 informed opinion

13
00:00:34,000 --> 00:00:36,000
我们这边是 opinion information

14
00:00:36,000 --> 00:00:38,000
对

15
00:00:38,000 --> 00:00:42,000
所以如果你不是 Vim 用户

16
00:00:42,000 --> 00:00:47,000
或者你听到觉得有些不赞同的观点

17
00:00:47,000 --> 00:00:48,000
请记住这一点

18
00:00:48,000 --> 00:00:51,000
我们这是两个具有偏见的人

19
00:00:51,000 --> 00:00:53,000
在聊一件非常个性化的东西

20
00:00:53,000 --> 00:00:54,000
对

21
00:00:54,000 --> 00:00:56,000
我们虚心接受

22
00:00:56,000 --> 00:00:56,000
坚决不改

23
00:00:56,000 --> 00:00:57,000
哈哈

24
00:00:57,000 --> 00:00:57,000
哈哈

25
00:00:57,000 --> 00:00:58,000
哈哈

41
00:08:28,000 --> 00:08:29,000
小众的语言

42
00:08:29,000 --> 00:08:33,000
那么你肯定是这个很小众语言的这个铁杆粉丝

43
00:08:33,000 --> 00:08:34,000
你可能很经常会觉得哎呀

44
00:08:34,000 --> 00:08:37,000
这个问题为什么不用这个语言写

45
00:08:37,000 --> 00:08:39,000
这个写出来方会很优雅啊

46
00:08:39,000 --> 00:08:40,000
结果会多好

47
00:08:40,000 --> 00:08:42,000
而且一旦有很多人这么写的话

48
00:08:42,000 --> 00:08:45,000
那我很多 library 就是所谓的库就已经有现成的

49
00:08:45,000 --> 00:08:47,000
我也不用自己再动手写

50
00:08:47,000 --> 00:08:49,000
我就可以直接拿来用就可以了

51
00:08:49,000 --> 00:08:53,000
那么出于这种比较自立的角度去看的话

52
00:08:53,000 --> 00:08:56,000
你的一个默认的倾向就应该是就如果你真的是很喜欢的语言

53
00:08:56,000 --> 00:08:56,000
就应该是就如果你真的是很喜欢的语言

54
00:08:56,000 --> 00:08:56,000
就应该是就如果你真的是很喜欢的语言

55
00:08:56,000 --> 00:08:57,000
就应该是就如果你真的是很喜欢的语言

56
00:08:57,000 --> 00:08:58,000
真的是很喜欢这个东西的话

57
00:08:58,000 --> 00:09:02,000
你会把它推荐给你认识的或者不认识的人

58
00:09:02,000 --> 00:09:06,000
然后让他们也能够像你一样认识到它的好处和优点

59
00:09:06,000 --> 00:09:08,000
从而加入你的行列

60
00:09:08,000 --> 00:09:09,000
从而为这个东西

61
00:09:09,000 --> 00:09:12,000
就所谓扩大这个东西的 mind share

62
00:09:12,000 --> 00:09:17,000
然后对于这样对于你个体而言也是非常有利的一个结果

63
00:09:17,000 --> 00:09:21,000
我不知道这样讲说清楚刚才我讲那个意思

64
00:09:21,000 --> 00:09:22,000
是我可以理解

65
00:09:22,000 --> 00:09:25,000
就是换一种话换一个角度说

66
00:09:25,000 --> 00:09:27,000
每一种工具或者说

67
00:09:27,000 --> 00:09:27,000
比如说我们

68
00:09:27,000 --> 00:09:28,000
非常推崇的 Vim

69
00:09:28,000 --> 00:09:30,000
就你和我都是 Vim 党

70
00:09:30,000 --> 00:09:34,000
那我们两个会对于这种工具所推崇

71
00:09:34,000 --> 00:09:38,000
或者说这种这个工具的设计者所使用

72
00:09:38,000 --> 00:09:42,000
在工具之中注入了这么一种使用哲学

73
00:09:42,000 --> 00:09:43,000
或者说使用模式

74
00:09:43,000 --> 00:09:46,000
产生一定的意见

75
00:09:46,000 --> 00:09:48,000
然后我们会认为

76
00:09:48,000 --> 00:09:52,000
同样持有这样意见的使用者

77
00:09:52,000 --> 00:09:54,000
是我们的同类

78
00:09:54,000 --> 00:09:57,000
但是在一些其他编辑器里面

79
00:09:57,000 --> 00:09:57,000
我们会认为

80
00:09:57,000 --> 00:10:00,000
可能没有这样的倾向

81
00:10:00,000 --> 00:10:01,000
或者说这样的倾向会比较少

82
00:10:01,000 --> 00:10:03,000
比如说我们很少会

83
00:10:03,000 --> 00:10:05,000
也许这样的地方真的有

84
00:10:05,000 --> 00:10:07,000
但是我们很少会听说有什么

85
00:10:07,000 --> 00:10:12,000
notepad 用户会组成这么一个信息小组

86
00:10:12,000 --> 00:10:15,000
或者是更大众

87
00:10:15,000 --> 00:10:16,000
Eclipse

88
00:10:16,000 --> 00:10:20,000
我觉得 Eclipse 好像也是一个非常非常路人的这么一个编辑器

89
00:10:20,000 --> 00:10:23,000
很少会有人非常以使用 Eclipse 为

90
00:10:23,000 --> 00:10:27,000
为一种身份认同的标志

91
00:10:27,000 --> 00:10:28,000
有可能是因为它太普遍了

92
00:10:28,000 --> 00:10:30,000
有可能是因为它太平庸了

93
00:10:30,000 --> 00:10:35,000
但对于任何一种稍微具有一些

94
00:10:35,000 --> 00:10:38,000
就像我说的这种使用哲学在里面的工具来说

95
00:10:38,000 --> 00:10:41,000
这种用户情节是很容易产生的

96
00:10:41,000 --> 00:10:42,000
就像你说的

97
00:10:42,000 --> 00:10:43,000
对

98
00:10:43,000 --> 00:10:46,000
所以反正就是有一个什么身份认同在里面

99
00:10:46,000 --> 00:10:48,000
我觉得我们会找到自己的同类

100
00:10:48,000 --> 00:10:50,000
然后去交流一些使用体验

101
00:10:50,000 --> 00:10:51,000
心得体会

102
00:10:51,000 --> 00:10:53,000
包括什么各种插件之类的

103
00:10:53,000 --> 00:10:56,000
然后反正我个人会有这种

104
00:10:56,000 --> 00:10:57,000
这种感觉是很重要的

105
00:10:57,000 --> 00:10:57,000
这种倾向吧

106
00:10:57,000 --> 00:10:58,000
反正

107
00:10:58,000 --> 00:10:59,000
对

108
00:10:59,000 --> 00:11:01,000
OK

109
00:11:01,000 --> 00:11:03,000
今天然后我们还是从这个最

110
00:11:03,000 --> 00:11:05,000
也不叫最古老

111
00:11:05,000 --> 00:11:09,000
就是真吵得最凶的两大编辑器开始入手

112
00:11:09,000 --> 00:11:11,000
最经典的一场战力分析开始

113
00:11:11,000 --> 00:11:12,000
对

114
00:11:12,000 --> 00:11:16,000
先讲的那个是我和吴涛都很喜欢的 Vim

115
00:11:16,000 --> 00:11:21,000
其实 Vim 其实它不仅仅是一个编辑器

116
00:11:21,000 --> 00:11:21,000
对吧

117
00:11:21,000 --> 00:11:22,000
对

118
00:11:22,000 --> 00:11:25,000
Vim 其实一组编辑器的最早最早的

119
00:11:25,000 --> 00:11:27,000
就是 Vim 编辑器

120
00:11:27,000 --> 00:11:28,000
就是 Vim 这种编辑器

121
00:11:28,000 --> 00:11:35,000
可以追溯到一个叫做 X 的 Tax Editor

122
00:11:35,000 --> 00:11:42,000
就是它最早是在 UNIX 上面的一个行编辑器

123
00:11:42,000 --> 00:11:44,000
就是我们现在的编辑器

124
00:11:44,000 --> 00:11:46,000
司空监管的都是一次可以编辑很多很多行

125
00:11:46,000 --> 00:11:49,000
然后在当时 X 这个编辑器

126
00:11:49,000 --> 00:11:50,000
它一次只能编辑一行

127
00:11:50,000 --> 00:11:52,000
就是你打开文件

128
00:11:52,000 --> 00:11:53,000
打开一个文件

129
00:11:53,000 --> 00:11:55,000
你一次只能看到一行或者几行内容

130
00:11:55,000 --> 00:11:56,000
然后你所有的编辑

131
00:11:56,000 --> 00:11:58,000
都针对着几行完成

132
00:11:58,000 --> 00:11:59,000
对

133
00:11:59,000 --> 00:12:01,000
然后这是 1976 年写成的一个工具

134
00:12:01,000 --> 00:12:03,000
对

135
00:12:03,000 --> 00:12:05,000
它是非常非常古老的一个工具

136
00:12:05,000 --> 00:12:05,000
对

137
00:12:05,000 --> 00:12:06,000
V

138
00:12:06,000 --> 00:12:09,000
就是在 EX 之后出现了一个工具

139
00:12:09,000 --> 00:12:10,000
叫做 V

140
00:12:10,000 --> 00:12:11,000
也就是 VI

141
00:12:11,000 --> 00:12:16,000
VI 出现的目的是

142
00:12:16,000 --> 00:12:20,000
把 X 的行编辑扩展到多行编辑

143
00:12:20,000 --> 00:12:25,000
也就是我们现在能够看到的这种

144
00:12:25,000 --> 00:12:26,000
多行编辑器的一种工具

145
00:12:26,000 --> 00:12:29,000
就是一个命令行终端上的版本

146
00:12:29,000 --> 00:12:31,000
然后我们所使用的 VIM 呢

147
00:12:31,000 --> 00:12:35,000
又是一个荷兰程序员

148
00:12:35,000 --> 00:12:39,000
把原始的 VI 程序扩展之后

149
00:12:39,000 --> 00:12:42,000
改名叫做 VI improved

150
00:12:42,000 --> 00:12:46,000
然后一直维护到现在这么一个工具

151
00:12:46,000 --> 00:12:48,000
所以我们其实讨论 VIM 的时候

152
00:12:48,000 --> 00:12:50,000
讨论是一组 VIM

153
00:12:50,000 --> 00:12:51,000
包括这个 VIM 还有

154
00:12:51,000 --> 00:12:52,000
比如说 MacVim

155
00:12:52,000 --> 00:12:55,000
这样在专门在 Mac 上面运行的

156
00:12:55,000 --> 00:12:56,000
或者是 GVIM

157
00:12:56,000 --> 00:12:58,000
专门在 Xwindow

158
00:12:58,000 --> 00:13:02,000
或者是 GNOME 下面运行的图形界面

159
00:13:02,000 --> 00:13:05,000
这些运行都可以算到 VIM 里面

160
00:13:05,000 --> 00:13:05,000
对

161
00:13:05,000 --> 00:13:09,000
而且 VIM 还有一些后来的新的

162
00:13:09,000 --> 00:13:10,000
后继者吧

163
00:13:10,000 --> 00:13:12,000
比如最近比较火的一个叫做

164
00:13:12,000 --> 00:13:14,000
那个叫 NeoVIM

165
00:13:14,000 --> 00:13:15,000
对吧

166
00:13:15,000 --> 00:13:15,000
对

167
00:13:15,000 --> 00:13:16,000
NeoVIM

168
00:13:16,000 --> 00:13:17,000
它是把

169
00:13:17,000 --> 00:13:18,000
在 VIM 的

170
00:13:18,000 --> 00:13:19,000
它也不是

171
00:13:19,000 --> 00:13:21,000
它是等于是重写了一遍了

172
00:13:21,000 --> 00:13:25,000
我理解 NeoVIM 的理念是

173
00:13:25,000 --> 00:13:26,000
VIM 这个编辑

174
00:13:26,000 --> 00:13:30,000
作为一个非常注重

175
00:13:30,000 --> 00:13:34,000
兼容性的代码库

176
00:13:34,000 --> 00:13:35,000
有太多太多问题

177
00:13:35,000 --> 00:13:39,000
所以他们把里面比较重要的组件重写了一遍

178
00:13:39,000 --> 00:13:42,000
比如说把单元测试全都重写了一遍

179
00:13:42,000 --> 00:13:43,000
然后把

180
00:13:43,000 --> 00:13:49,000
应该是把 VIM script 的解析器用 Lua 重写了一遍

181
00:13:49,000 --> 00:13:53,000
然后以此带来的改进

182
00:13:53,000 --> 00:13:56,000
就是整个代码库变得更易读了

183
00:13:56,000 --> 00:13:56,000
然后

184
00:13:56,000 --> 00:13:59,000
维护起来比较容易

185
00:13:59,000 --> 00:14:01,000
因为我们知道

186
00:14:01,000 --> 00:14:03,000
VIM 这个编译器

187
00:14:03,000 --> 00:14:05,000
虽然使用的人非常非常多

188
00:14:05,000 --> 00:14:07,000
contribute 也非常非常多

189
00:14:07,000 --> 00:14:07,000
但是

190
00:14:07,000 --> 00:14:09,000
其核心维护者

191
00:14:09,000 --> 00:14:10,000
其实只有一个人

192
00:14:10,000 --> 00:14:11,000
这个人就是

193
00:14:11,000 --> 00:14:12,000
原作者

194
00:14:12,000 --> 00:14:13,000
对

195
00:14:13,000 --> 00:14:14,000
原作者叫

196
00:14:14,000 --> 00:14:15,000
Bram Molena

197
00:14:15,000 --> 00:14:17,000
Molena

198
00:14:17,000 --> 00:14:17,000
对

199
00:14:17,000 --> 00:14:19,000
是一个河南名字

200
00:14:19,000 --> 00:14:19,000
河南语

201
00:14:19,000 --> 00:14:20,000
河南名字

202
00:14:20,000 --> 00:14:21,000
比较

203
00:14:21,000 --> 00:14:22,000
他是一个河南人

204
00:14:22,000 --> 00:14:24,000
生于 1961 年

205
00:14:24,000 --> 00:14:26,000
现在在苏伊士做 Google 员工

206
00:14:26,000 --> 00:14:29,000
我相信我 somehow 在苏伊士的街头见到过这个人

207
00:14:29,000 --> 00:14:30,000
但是我不敢确定

208
00:14:30,000 --> 00:14:31,000
因为

209
00:14:31,000 --> 00:14:32,000
对

210
00:14:32,000 --> 00:14:35,000
因为如果你去 Wikipedia 上看他的词条的话

211
00:14:35,000 --> 00:14:39,000
就是他有一张非常知名的照片

212
00:14:39,000 --> 00:14:42,000
他穿着一件胸前印着 slashcode 的 slash

213
00:14:42,000 --> 00:14:45,000
然后下面写个问号的黑 T 恤

214
00:14:45,000 --> 00:14:46,000
黑色 T 恤的

215
00:14:46,000 --> 00:14:48,000
所以我对他的相貌还是比较有

216
00:14:48,000 --> 00:14:50,000
比较有概念的

217
00:14:50,000 --> 00:14:52,000
所以那天也许我在苏伊士街头看到过他

218
00:14:52,000 --> 00:14:53,000
但是不敢确定

219
00:14:53,000 --> 00:14:54,000
对

220
00:14:54,000 --> 00:14:56,000
他现在是 Google 员工

221
00:14:56,000 --> 00:14:58,000
就是 Google 是一个聚集了很多

222
00:14:58,000 --> 00:15:00,000
这种神人的地方

223
00:15:00,000 --> 00:15:04,000
之前 Python 的作者好像也在 Google 吧

224
00:15:04,000 --> 00:15:05,000
现在已经去了 Dropbox

225
00:15:05,000 --> 00:15:06,000
对

226
00:15:06,000 --> 00:15:06,000
现在已经 Dropbox

227
00:15:06,000 --> 00:15:10,000
这个人他是 Vim 项目的所谓

228
00:15:10,000 --> 00:15:11,000
The single point of failure

229
00:15:11,000 --> 00:15:13,000
就是一旦这个人

230
00:15:13,000 --> 00:15:13,000
管了

231
00:15:13,000 --> 00:15:17,000
如果 Bram 某一天出去街上

232
00:15:17,000 --> 00:15:20,000
被这个苏伊士的电车给撞死了

233
00:15:20,000 --> 00:15:22,000
那么 Vim 这个项目也就完蛋了

234
00:15:22,000 --> 00:15:23,000
估计

235
00:15:23,000 --> 00:15:24,000
God forbid

236
00:15:24,000 --> 00:15:25,000
对

237
00:15:25,000 --> 00:15:26,000
千万不要发现了

238
00:15:26,000 --> 00:15:27,000
因为有人

239
00:15:27,000 --> 00:15:28,000
我没有看过

240
00:15:28,000 --> 00:15:30,000
但是我之前有缩耳

241
00:15:30,000 --> 00:15:32,000
我就是看 NeoVim 那件事的事情

242
00:15:32,000 --> 00:15:37,000
就是 Vim 本身代码库的写法是比较古怪的

243
00:15:37,000 --> 00:15:37,000
对

244
00:15:37,000 --> 00:15:43,000
肯定是一个所谓逐渐生长起来的这么一个项目

245
00:15:43,000 --> 00:15:46,000
它不是一开始就有一个比较宏大的规划

246
00:15:46,000 --> 00:15:51,000
或者说在所谓 Architecture 这一部分做的不是很好

247
00:15:51,000 --> 00:15:52,000
其实

248
00:15:52,000 --> 00:15:52,000
对

249
00:15:52,000 --> 00:15:56,000
你可以说它甚至是不是一个很优美的代码库

250
00:15:56,000 --> 00:15:56,000
对

251
00:15:56,000 --> 00:16:00,000
也是为什么 NeoVim 那帮人想着

252
00:16:00,000 --> 00:16:00,000
哇靠

253
00:16:00,000 --> 00:16:01,000
这个没法忍了

254
00:16:01,000 --> 00:16:02,000
我们还是自己从

255
00:16:02,000 --> 00:16:07,000
他们之前也想给那个 Bram 提一个 patch

256
00:16:07,000 --> 00:16:10,000
因为他好像这个很久没有用那个分布式代码管理吧

257
00:16:10,000 --> 00:16:10,000
我记得

258
00:16:10,000 --> 00:16:13,000
反正想给他提个 patch

259
00:16:13,000 --> 00:16:15,000
然后就经常被拒掉了

260
00:16:15,000 --> 00:16:18,000
然后他就那算我们自己搞一个好了

261
00:16:18,000 --> 00:16:19,000
还有一个问题

262
00:16:19,000 --> 00:16:21,000
就是 Vim 这个代码库

263
00:16:21,000 --> 00:16:26,000
它兼容非常非常非常多的系统和平台

264
00:16:26,000 --> 00:16:30,000
而且这些所有的接口代码都是他一个人在维护的

265
00:16:30,000 --> 00:16:32,000
就 Bram 一个人在维护的

266
00:16:32,000 --> 00:16:35,000
那么有些那种奇奇怪怪的平台

267
00:16:35,000 --> 00:16:38,000
现在我估计很多人从来不是说没有见过

268
00:16:38,000 --> 00:16:39,000
可能听都没有听过

269
00:16:39,000 --> 00:16:40,000
对

270
00:16:40,000 --> 00:16:41,000
什么 B E O S

271
00:16:41,000 --> 00:16:42,000
或者是什么

272
00:16:42,000 --> 00:16:45,000
Omega 还是 Amiga

273
00:16:45,000 --> 00:16:48,000
Omega

274
00:16:48,000 --> 00:16:51,000
反正有很多这种奇奇怪怪的平台

275
00:16:51,000 --> 00:16:55,000
至少我觉得像我们这种新生代

276
00:16:55,000 --> 00:16:56,000
就是后面

277
00:16:56,000 --> 00:17:01,000
的什么不是六七十年代出生的那帮人是不知道那些系统是长什么

278
00:17:01,000 --> 00:17:01,000
对

279
00:17:01,000 --> 00:17:05,000
就是可能就是在西欧某个国家的某个角落里面

280
00:17:05,000 --> 00:17:08,000
有一个从六十年代运行至今的系统上面必须要跑 Vim

281
00:17:08,000 --> 00:17:11,000
然后他就必须维护这一份代码

282
00:17:11,000 --> 00:17:11,000
对

283
00:17:11,000 --> 00:17:15,000
然后就其实像很多像比如像 NEOVim 这种新兴的项目

284
00:17:15,000 --> 00:17:16,000
他就说哇

285
00:17:16,000 --> 00:17:18,000
那我为什么要花时间花精力去支持那么多

286
00:17:18,000 --> 00:17:23,000
可能地球上绝大部分都根本没有听说过的那种平台或者系统

287
00:17:23,000 --> 00:17:26,000
就这里是一个就是减少的一个问题

288
00:17:26,000 --> 00:17:26,000
就是减少的一个问题

289
00:17:26,000 --> 00:17:26,000
就是减少的一个问题

290
00:17:26,000 --> 00:17:27,000
减少代码量的一个办法吧

291
00:17:27,000 --> 00:17:28,000
没错

292
00:17:28,000 --> 00:17:29,000
对

293
00:17:29,000 --> 00:17:31,000
这就刚才也就提到了 Vim 的一个优点

294
00:17:31,000 --> 00:17:34,000
就是所谓的 Ubiquitous

295
00:17:34,000 --> 00:17:35,000
无处不在

296
00:17:35,000 --> 00:17:36,000
对

297
00:17:36,000 --> 00:17:37,000
就你很有可能

298
00:17:37,000 --> 00:17:40,000
就我们既然谈到了 Vim 和 EMAC 之间的圣战

299
00:17:40,000 --> 00:17:42,000
那基本上我们可以说

300
00:17:42,000 --> 00:17:44,000
现在就可以说出 Vim 的一个优点

301
00:17:44,000 --> 00:17:50,000
就是几乎你有机会碰触到的任何一台 UNIX 电脑

302
00:17:50,000 --> 00:17:51,000
类 UNIX 电脑

303
00:17:51,000 --> 00:17:54,000
基本上都会有 Vim 的某种形式存在

304
00:17:54,000 --> 00:17:55,000
但是 EMAC 就不一定了

305
00:17:55,000 --> 00:17:56,000
对

306
00:17:56,000 --> 00:17:56,000
对

307
00:17:56,000 --> 00:18:01,000
这之前我经常在导腾这个 Linux 的路由器

308
00:18:01,000 --> 00:18:03,000
还有很多这种所谓的

309
00:18:03,000 --> 00:18:06,000
就是经典版或者是嵌入式的系统里面

310
00:18:06,000 --> 00:18:08,000
你这样会发现它默认自在一个

311
00:18:08,000 --> 00:18:14,000
就是 VI 或者是 Vim Tiny 这种超小型的 Vim 编辑器

312
00:18:14,000 --> 00:18:16,000
不是全部特性都有的

313
00:18:16,000 --> 00:18:19,000
然后但是 EMAC 这种是肯定找不到的

314
00:18:19,000 --> 00:18:21,000
对

315
00:18:21,000 --> 00:18:22,000
所以它就是无处不在

316
00:18:22,000 --> 00:18:23,000
没有记错

317
00:18:23,000 --> 00:18:25,000
V 应该是

318
00:18:25,000 --> 00:18:25,000
VI 应该是

319
00:18:26,000 --> 00:18:28,000
POSIX 标准的一部分吧

320
00:18:28,000 --> 00:18:30,000
好像是啊

321
00:18:30,000 --> 00:18:34,000
如果你要让你的系统符合 POSIX

322
00:18:34,000 --> 00:18:38,000
或者是就是 MAC 过的那个叫什么

323
00:18:38,000 --> 00:18:39,000
Single Unix Specification

324
00:18:39,000 --> 00:18:42,000
那你的系统里面必须包含 VI

325
00:18:42,000 --> 00:18:43,000
天哪

326
00:18:43,000 --> 00:18:45,000
这个 Specification 也管的太多了吧

327
00:18:45,000 --> 00:18:46,000
对

328
00:18:46,000 --> 00:18:48,000
好像这个还包括

329
00:18:48,000 --> 00:18:50,000
好像 PRO 也是一部分

330
00:18:50,000 --> 00:18:51,000
不要吧

331
00:18:51,000 --> 00:18:51,000
真的

332
00:18:51,000 --> 00:18:52,000
对

333
00:18:52,000 --> 00:18:52,000
anyway

334
00:18:52,000 --> 00:18:53,000
真的

335
00:18:53,000 --> 00:18:54,000
不开玩笑

336
00:18:54,000 --> 00:18:55,000
OK

337
00:18:55,000 --> 00:18:55,000
喂

338
00:18:56,000 --> 00:18:58,000
但 EMAC 是不是我就不知道

339
00:18:58,000 --> 00:19:00,000
感觉三观又被刷新了

340
00:19:00,000 --> 00:19:06,000
所以为什么 Vim 或者说类 Vim 的这种编辑器会这么的普及

341
00:19:06,000 --> 00:19:08,000
而 EMAC 却没有呢

342
00:19:08,000 --> 00:19:10,000
这里有什么技术的原因

343
00:19:10,000 --> 00:19:14,000
我觉得主要的一个原因还是 VI 或者说 Vim

344
00:19:14,000 --> 00:19:15,000
其实它不是

345
00:19:15,000 --> 00:19:18,000
它不单单是一种编辑器

346
00:19:18,000 --> 00:19:18,000
它是一个

347
00:19:18,000 --> 00:19:20,000
它是一种语言

348
00:19:20,000 --> 00:19:21,000
就是它是一种

349
00:19:21,000 --> 00:19:22,000
它是一种思维方式

350
00:19:22,000 --> 00:19:23,000
你可以说

351
00:19:23,000 --> 00:19:24,000
它是一种

352
00:19:24,000 --> 00:19:26,000
你告诉编辑器的方式

353
00:19:26,000 --> 00:19:31,000
你告诉编辑器你想要做的事情的一套机制

354
00:19:31,000 --> 00:19:32,000
而这套机制本身并不

355
00:19:32,000 --> 00:19:37,000
其实并不依赖于 VI 或者是 Vim 所存在着

356
00:19:37,000 --> 00:19:42,000
所以它也就被移植到了各种各样的地方

357
00:19:42,000 --> 00:19:51,000
比如说现在基本上任何稍微主流一点的编辑器里面都会有 VI 或者是类 Vim 的 key binding 可以选

358
00:19:51,000 --> 00:19:54,000
但是这个如果这样说来的话

359
00:19:54,000 --> 00:19:56,000
其实反而是 EMAC 那种 key binding 的方式是很重要的

360
00:19:56,000 --> 00:19:56,000
所以我认为

361
00:19:56,000 --> 00:19:58,000
key binding 会比较常见一点

362
00:19:58,000 --> 00:19:59,000
就是在非

363
00:19:59,000 --> 00:20:00,000
就在大部分的编辑器里面

364
00:20:00,000 --> 00:20:01,000
比如上次我们已经聊到了

365
00:20:01,000 --> 00:20:09,000
在这个 Mac 上面大部分的文本输入框是自带一些基本的 EMAC 的这个 key binding 的

366
00:20:09,000 --> 00:20:10,000
不

367
00:20:10,000 --> 00:20:10,000
但问题在于

368
00:20:10,000 --> 00:20:11,000
比如说你说

369
00:20:11,000 --> 00:20:12,000
你说 Eclipse

370
00:20:12,000 --> 00:20:15,000
Eclipse 或者是

371
00:20:15,000 --> 00:20:20,000
或者是那个 NetBeans 之类的 IDE 里面

372
00:20:20,000 --> 00:20:23,000
是不会有 EMAC 的 key binding

373
00:20:23,000 --> 00:20:25,000
但是 Vim key binding

374
00:20:25,000 --> 00:20:26,000
肯定会有

375
00:20:26,000 --> 00:20:27,000
有人实现出来

376
00:20:27,000 --> 00:20:31,000
这个有点意思

377
00:20:31,000 --> 00:20:32,000
对这其中原因

378
00:20:32,000 --> 00:20:35,000
我觉得就是因为 Vim 本身是一种语言

379
00:20:35,000 --> 00:20:36,000
对这里要

380
00:20:36,000 --> 00:20:38,000
可能不是很多人都用

381
00:20:38,000 --> 00:20:40,000
或者说是学了一下

382
00:20:40,000 --> 00:20:42,000
但是没有坚持到底

383
00:20:42,000 --> 00:20:45,000
就是 Vim 的它的魅力或者优势在哪里

384
00:20:45,000 --> 00:20:46,000
就刚才讲了

385
00:20:46,000 --> 00:20:49,000
它有一个所谓的语言之类

386
00:20:49,000 --> 00:20:52,000
但我们待会会解释这个语言是什么样的

387
00:20:52,000 --> 00:20:55,000
然后另外一个特点就是所谓的模态这一点

388
00:20:55,000 --> 00:20:59,000
所以这两者其实是相辅相成的

389
00:20:59,000 --> 00:20:59,000
可以说

390
00:20:59,000 --> 00:21:00,000
我们先讲哪一个

391
00:21:00,000 --> 00:21:02,000
对

392
00:21:02,000 --> 00:21:04,000
其实现在就可以解释一下了

393
00:21:04,000 --> 00:21:05,000
到底为什么

394
00:21:05,000 --> 00:21:06,000
或者说首先解释一下

395
00:21:06,000 --> 00:21:08,000
Vim 为什么这么难

396
00:21:08,000 --> 00:21:11,000
或者说怎么样才能让 Vim 变得不那么难

397
00:21:11,000 --> 00:21:14,000
就是你要先理解一个概念

398
00:21:14,000 --> 00:21:14,000
就是

399
00:21:14,000 --> 00:21:19,000
或者说你要从自己的使用习惯之中

400
00:21:19,000 --> 00:21:21,000
观察出一个概念来

401
00:21:21,000 --> 00:21:22,000
也就是

402
00:21:22,000 --> 00:21:24,000
你最终写

403
00:21:25,000 --> 00:21:27,000
出来的文本里面

404
00:21:27,000 --> 00:21:30,000
你是看不到任何

405
00:21:30,000 --> 00:21:33,000
移动光标或者修改的痕迹的

406
00:21:33,000 --> 00:21:34,000
对不对

407
00:21:34,000 --> 00:21:34,000
对

408
00:21:34,000 --> 00:21:36,000
因为那个是撰写的过程

409
00:21:36,000 --> 00:21:38,000
跟最终的产品是没有关系的

410
00:21:38,000 --> 00:21:41,000
也就是说当我们在写一篇文章的时候

411
00:21:41,000 --> 00:21:43,000
我们按下一些键的时候

412
00:21:43,000 --> 00:21:46,000
所达成的目的是

413
00:21:46,000 --> 00:21:51,000
让这些键所代表的字符成为最终文章的一部分

414
00:21:51,000 --> 00:21:52,000
这是一种状态

415
00:21:52,000 --> 00:21:54,000
而另一种状态

416
00:21:54,000 --> 00:21:54,000
就是

417
00:21:54,000 --> 00:21:54,000
就是

418
00:21:54,000 --> 00:21:54,000
就是

419
00:21:54,000 --> 00:21:54,000
就是

420
00:21:54,000 --> 00:21:54,000
就是

421
00:21:54,000 --> 00:21:54,000
就是

422
00:21:54,000 --> 00:21:54,000
就是

423
00:21:54,000 --> 00:21:54,000
就是

424
00:21:54,000 --> 00:21:54,000
就是

425
00:21:54,000 --> 00:21:54,000
就是

426
00:21:54,000 --> 00:21:54,000
就是

427
00:21:54,000 --> 00:21:54,000
就是

428
00:21:54,000 --> 00:21:54,000
就是

429
00:21:54,000 --> 00:21:54,000
就是

430
00:21:54,000 --> 00:21:55,000
就是

431
00:21:55,000 --> 00:21:55,000
就是

439
00:25:25,000 --> 00:25:27,000
Just

440
00:25:27,000 --> 00:25:28,000
就是

441
00:25:28,000 --> 00:25:28,000
就是

442
00:25:28,000 --> 00:25:28,000
就是

443
00:25:28,000 --> 00:25:28,000
就是

444
00:25:28,000 --> 00:25:28,000
就是

445
00:25:28,000 --> 00:25:28,000
就

446
00:25:28,000 --> 00:25:29,000
就是

447
00:25:29,000 --> 00:25:29,000
就

448
00:25:29,000 --> 00:25:29,000
就是

449
00:25:29,000 --> 00:25:29,000
就是

450
00:25:29,000 --> 00:25:29,000
就是

451
00:25:29,000 --> 00:25:29,000
就是

452
00:25:29,000 --> 00:25:29,000
这个

453
00:25:29,000 --> 00:25:29,000
这个

454
00:25:29,000 --> 00:25:30,000
这个

455
00:25:30,000 --> 00:25:30,000
命令

456
00:25:30,000 --> 00:25:32,000
就跟你讲的这个在

457
00:25:32,000 --> 00:25:32,000
在

458
00:25:32,000 --> 00:25:33,000
的专业数学叫做

459
00:25:33,000 --> 00:25:34,000
Normal Mode

460
00:25:34,000 --> 00:25:35,000
普通模式

461
00:25:35,000 --> 00:25:36,000
啊

462
00:25:36,000 --> 00:25:37,000
其实我觉得这里有个

463
00:25:37,000 --> 00:25:38,000
啊

464
00:25:38,000 --> 00:25:39,000
上次来在跟 Lawrence 讨论这个问题啊

465
00:25:39,000 --> 00:25:40,000
就是说

466
00:25:40,000 --> 00:25:40,000
就是说

467
00:25:40,000 --> 00:25:40,000
就是说

468
00:25:40,000 --> 00:25:43,000
写程序和写

469
00:25:43,000 --> 00:25:43,000
写程序和写

470
00:25:43,000 --> 00:25:43,000
写程序和写

471
00:25:43,000 --> 00:25:44,000
写程序和写

472
00:25:44,000 --> 00:25:46,000
普通的文章有一个很大的区别

473
00:25:46,000 --> 00:25:47,000
我觉得就是

474
00:25:47,000 --> 00:25:49,000
可能写程序的时候你更多的时候

475
00:25:49,000 --> 00:25:50,000
不是在真的在写

476
00:25:50,000 --> 00:25:52,000
而跟他说在读你之前写过的程序

477
00:25:52,000 --> 00:25:56,000
然后再做一些轻度的修改

478
00:25:56,000 --> 00:25:58,000
对或者说写文程序的

479
00:25:58,000 --> 00:26:00,000
80%的时间是在改

480
00:26:00,000 --> 00:26:01,000
对是在读

481
00:26:01,000 --> 00:26:02,000
是在不停的调试

482
00:26:02,000 --> 00:26:05,000
是在不停的更正你脑海中

483
00:26:05,000 --> 00:26:06,000
之中的这个运算模型

484
00:26:06,000 --> 00:26:08,000
对不过这样说其实也不太对

485
00:26:08,000 --> 00:26:10,000
因为我知道很多文章写出来

486
00:26:10,000 --> 00:26:11,000
也是要经常改的

487
00:26:11,000 --> 00:26:13,000
但是我不知道你怎么样

488
00:26:13,000 --> 00:26:15,000
但至少我在写文章的时候

489
00:26:15,000 --> 00:26:17,000
会有那种就是写到

490
00:26:17,000 --> 00:26:18,000
在 zone 里面的时候

491
00:26:18,000 --> 00:26:20,000
会有那种行云流水的感觉

492
00:26:20,000 --> 00:26:21,000
一气呵成

493
00:26:21,000 --> 00:26:21,000
不会要跳来跳去

494
00:26:21,000 --> 00:26:23,000
会一次写很多很多字

495
00:26:23,000 --> 00:26:24,000
就很少

496
00:26:24,000 --> 00:26:29,000
基本上修改会集中在一个阶段里面改

497
00:26:29,000 --> 00:26:30,000
但是写程序就很少这样

498
00:26:30,000 --> 00:26:31,000
对对对

499
00:26:31,000 --> 00:26:33,000
而且就是刚才我也讲了

500
00:26:33,000 --> 00:26:34,000
写程序更多

501
00:26:34,000 --> 00:26:35,000
就是我们所谓的写程序

502
00:26:35,000 --> 00:26:36,000
更多的时候你是在翻出

503
00:26:36,000 --> 00:26:38,000
你之前写过的程序

504
00:26:38,000 --> 00:26:40,000
或者是别人之前写过的程序

505
00:26:40,000 --> 00:26:42,000
然后你再去做一些阅读

506
00:26:42,000 --> 00:26:43,000
然后做一些小的调整而已

507
00:26:43,000 --> 00:26:44,000
并不是真的

508
00:26:44,000 --> 00:26:46,000
你每次都在从头到尾去

509
00:26:46,000 --> 00:26:47,000
就是 write from scratch

510
00:26:47,000 --> 00:26:50,000
从头到尾完完全全的

511
00:26:50,000 --> 00:26:50,000
写一个新的程序出来

512
00:26:50,000 --> 00:26:51,000
这种事情是

513
00:26:51,000 --> 00:26:53,000
这种时候是相当相当少的

514
00:26:53,000 --> 00:26:54,000
对

515
00:26:54,000 --> 00:26:57,000
所以所以就是为什么在 Vim 里面

516
00:26:57,000 --> 00:26:59,000
你如果不做任何处理

517
00:26:59,000 --> 00:27:00,000
不做任何特别的配置的话

518
00:27:00,000 --> 00:27:01,000
你进到里面去

519
00:27:01,000 --> 00:27:03,000
它默认的那个模式

520
00:27:03,000 --> 00:27:04,000
叫做是那个

521
00:27:04,000 --> 00:27:04,000
刚才你讲的这个

522
00:27:04,000 --> 00:27:06,000
所谓的命令模式

523
00:27:06,000 --> 00:27:07,000
就是 normal mode

524
00:27:07,000 --> 00:27:08,000
普通模式

525
00:27:08,000 --> 00:27:08,000
对普通模式

526
00:27:08,000 --> 00:27:10,000
而且对于一个

527
00:27:10,000 --> 00:27:14,000
对于一个日常的 Vim 的用户来讲

528
00:27:14,000 --> 00:27:16,000
它也应该把绝大多数的时间

529
00:27:16,000 --> 00:27:18,000
花在这个普通模式里面

530
00:27:18,000 --> 00:27:19,000
对

531
00:27:20,000 --> 00:27:22,000
那反过来就是在 emacs 下面

532
00:27:22,000 --> 00:27:26,000
其实也可以意识到

533
00:27:26,000 --> 00:27:28,000
当你打开 emacs 之后

534
00:27:28,000 --> 00:27:30,000
你基本上你会下意识的按住 control

535
00:27:30,000 --> 00:27:32,000
然后去做一些事情

536
00:27:32,000 --> 00:27:32,000
就是

537
00:27:32,000 --> 00:27:37,000
在你不会一上来就写什么东西

538
00:27:37,000 --> 00:27:40,000
在这个至少你要做的一件事情

539
00:27:40,000 --> 00:27:41,000
是移动光标

540
00:27:41,000 --> 00:27:42,000
把光标插入到

541
00:27:42,000 --> 00:27:45,000
移动到你想要插入文字的部分

542
00:27:45,000 --> 00:27:47,000
然后才会开始编辑吧

543
00:27:47,000 --> 00:27:47,000
对

544
00:27:47,000 --> 00:27:49,000
那么在

545
00:27:49,000 --> 00:27:49,000
在

546
00:27:49,000 --> 00:27:49,000
在

548
00:28:19,000 --> 00:28:22,000
我现在要切换到那种模式

549
00:28:22,000 --> 00:28:24,000
然后你可以一直保留在那种模式之下

550
00:28:24,000 --> 00:28:24,000
对

551
00:28:24,000 --> 00:28:26,000
或者说你这么理解

552
00:28:26,000 --> 00:28:27,000
就是在 emacs 里面

553
00:28:27,000 --> 00:28:29,000
你采用快捷键的时候

554
00:28:29,000 --> 00:28:33,000
其实你是已经在短暂的时间内进

555
00:28:33,000 --> 00:28:35,000
就是在快捷键按下这个过程中

556
00:28:35,000 --> 00:28:38,000
你已经在极短的时间内进入到某一种模式里面

557
00:28:38,000 --> 00:28:41,000
然后再在那个模式去进行一个制定的操作

558
00:28:41,000 --> 00:28:46,000
而此时你并没有在真正的插入

559
00:28:46,000 --> 00:28:47,000
或者是撰写某一个文档

560
00:28:47,000 --> 00:28:48,000
对

561
00:28:48,000 --> 00:28:49,000
而 Vim 的

562
00:28:49,000 --> 00:28:49,000
所以我现在要切换到那种模式之下

563
00:28:49,000 --> 00:28:53,000
所谓编辑模式和命令模式之间的差别就在于

564
00:28:53,000 --> 00:28:58,000
就好像就相当于你找到什么东西

565
00:28:58,000 --> 00:29:00,000
找到本书压住了你的 control 键

566
00:29:00,000 --> 00:29:01,000
这个时候

567
00:29:01,000 --> 00:29:02,000
对

568
00:29:02,000 --> 00:29:04,000
这个时候你按键盘上的任何一个字母

569
00:29:04,000 --> 00:29:06,000
你都是在进行快捷键

570
00:29:06,000 --> 00:29:06,000
对

571
00:29:06,000 --> 00:29:08,000
你都是在做一个

572
00:29:08,000 --> 00:29:09,000
做一种

573
00:29:09,000 --> 00:29:09,000
做一种

574
00:29:09,000 --> 00:29:11,000
给出命令

575
00:29:11,000 --> 00:29:14,000
而不是书写字母的行为

576
00:29:14,000 --> 00:29:16,000
也就是比如说

577
00:29:16,000 --> 00:29:17,000
比如说 F

578
00:29:17,000 --> 00:29:19,000
那假如你的 control 键一切都在这边

579
00:29:19,000 --> 00:29:20,000
就被按住了

580
00:29:20,000 --> 00:29:22,000
那你敲一下 F

581
00:29:22,000 --> 00:29:25,000
你所要做的事情是搜寻什么东西

582
00:29:25,000 --> 00:29:26,000
那么在 Vim 里面

583
00:29:26,000 --> 00:29:28,000
当你切换到普通模式之后

584
00:29:28,000 --> 00:29:30,000
你只要按一下 F 键

585
00:29:30,000 --> 00:29:34,000
你就可以去找你要找的某一个字符

586
00:29:34,000 --> 00:29:37,000
不过有一个可能在

587
00:29:37,000 --> 00:29:39,000
就是在术语上

588
00:29:39,000 --> 00:29:40,000
有一个可能比较容易混淆的地方

589
00:29:40,000 --> 00:29:43,000
其实在 emacs 里面也有 mode 这个概念

590
00:29:43,000 --> 00:29:45,000
对

591
00:29:45,000 --> 00:29:49,000
但 emacs mode 指的是完全不一样的什么东西

592
00:29:49,000 --> 00:29:50,000
比如说

593
00:29:50,000 --> 00:29:54,000
比如说 emacs

594
00:29:54,000 --> 00:29:57,000
它打开一个 latech 文件

595
00:29:57,000 --> 00:29:58,000
它会进入所谓 latech mode

596
00:29:58,000 --> 00:30:01,000
那这个 mode 其实就相当于

597
00:30:01,000 --> 00:30:04,000
如果你是一个 Vim 使用者

598
00:30:04,000 --> 00:30:05,000
你对 emacs 不是很熟

599
00:30:05,000 --> 00:30:06,000
我们两个对 emacs 都不是很熟

600
00:30:06,000 --> 00:30:10,000
而 emacs mode 其实对于 Vim 来说

601
00:30:10,000 --> 00:30:13,000
就相当于 Vim 的 file type

602
00:30:13,000 --> 00:30:18,000
就是针对某一种特别的文件类型

603
00:30:18,000 --> 00:30:19,000
或者说针对某一种特别的文件类型

604
00:30:19,000 --> 00:30:21,000
或者说针对某一种特别的编辑状态

605
00:30:21,000 --> 00:30:22,000
而激活一种模式

606
00:30:22,000 --> 00:30:26,000
而这个跟 Vim 的所谓 mode

607
00:30:26,000 --> 00:30:28,000
其实是完全不同的两个概念

608
00:30:28,000 --> 00:30:29,000
对

609
00:30:29,000 --> 00:30:31,000
所以就是从刚才讲到

610
00:30:31,000 --> 00:30:32,000
emacs 的 mode

611
00:30:32,000 --> 00:30:35,000
其实是大约略等同于 emacs 的

612
00:30:35,000 --> 00:30:37,000
Vim 的叫什么

613
00:30:37,000 --> 00:30:39,000
ft plugin 这个东西

614
00:30:39,000 --> 00:30:39,000
对

615
00:30:39,000 --> 00:30:41,000
file type plugin

616
00:30:41,000 --> 00:30:43,000
然后

617
00:30:43,000 --> 00:30:45,000
对

618
00:30:45,000 --> 00:30:47,000
我们是接着说 Vim 的问题

619
00:30:47,000 --> 00:30:49,000
还是就是每一个

620
00:30:49,000 --> 00:30:53,000
点都尽量对照两种编辑器来说

621
00:30:53,000 --> 00:30:53,000
嗯

622
00:30:53,000 --> 00:30:55,000
这还是对照一下吧

623
00:30:55,000 --> 00:30:57,000
因为这个本来就是回顾这个圣战嘛

624
00:30:57,000 --> 00:30:59,000
我们还是要把最基本的那些要点

625
00:30:59,000 --> 00:31:00,000
打给理一下

626
00:31:00,000 --> 00:31:01,000
对

627
00:31:01,000 --> 00:31:04,000
那其实那这种模态的区分

628
00:31:04,000 --> 00:31:07,000
也就导致了 Vim 如此难学

629
00:31:07,000 --> 00:31:09,000
或者说很多人会觉得

630
00:31:09,000 --> 00:31:12,000
Vim 是一种非常非常奇怪的编辑器的一个原因之一

631
00:31:12,000 --> 00:31:12,000
对因为他觉得

632
00:31:12,000 --> 00:31:14,000
我觉得他是不够

633
00:31:14,000 --> 00:31:16,000
或者很多人觉得他不够直观嘛

634
00:31:16,000 --> 00:31:17,000
就是因为这个模态

635
00:31:17,000 --> 00:31:18,000
我想不出在生活中

636
00:31:18,000 --> 00:31:21,000
有什么样的地方是有模态这个概念

637
00:31:21,000 --> 00:31:23,000
对

638
00:31:23,000 --> 00:31:26,000
因为键盘其实是一个非常奇怪的

639
00:31:26,000 --> 00:31:28,000
奇怪的输入工具

640
00:31:28,000 --> 00:31:29,000
如果要我说的话

641
00:31:29,000 --> 00:31:30,000
嗯

642
00:31:30,000 --> 00:31:34,000
如果你把键盘上所有的功能键拿掉

643
00:31:34,000 --> 00:31:38,000
control out command escape

644
00:31:38,000 --> 00:31:40,000
乃至所有的 F 键都拿掉的话

645
00:31:40,000 --> 00:31:41,000
嗯

646
00:31:41,000 --> 00:31:44,000
你要怎样才能

647
00:31:44,000 --> 00:31:47,000
改变功标的位置呢

648
00:31:48,000 --> 00:31:50,000
就方向键要拿掉

649
00:31:50,000 --> 00:31:52,000
或者说你要怎样是先查找

650
00:31:52,000 --> 00:31:53,000
没有这种功能键

651
00:31:53,000 --> 00:31:56,000
只有这个字母键或者字符号键的时候

652
00:31:56,000 --> 00:31:57,000
怎么去操作

653
00:31:57,000 --> 00:31:59,000
如果你的键盘只能插入的话

654
00:31:59,000 --> 00:32:00,000
你应该怎样修改

655
00:32:00,000 --> 00:32:03,000
你的那你的你屏幕上的内容呢

656
00:32:03,000 --> 00:32:04,000
哼

657
00:32:04,000 --> 00:32:07,000
就如果就假如说

658
00:32:07,000 --> 00:32:09,000
其中的一种解决方式是 touch screen

659
00:32:09,000 --> 00:32:12,000
那么我们是不是可以理解为

660
00:32:12,000 --> 00:32:12,000
在

661
00:32:12,000 --> 00:32:15,000
或者鼠标嘛

662
00:32:15,000 --> 00:32:17,000
用鼠标去移动的时候

663
00:32:17,000 --> 00:32:18,000
你是在进入一种

664
00:32:18,000 --> 00:32:20,000
另外一种模态里面

665
00:32:20,000 --> 00:32:21,000
对

666
00:32:21,000 --> 00:32:22,000
或者说你面对的是一台

667
00:32:22,000 --> 00:32:24,000
是一部是一个 touch screen

668
00:32:24,000 --> 00:32:26,000
那么你可以用手指去点

669
00:32:26,000 --> 00:32:27,000
你要改的那个文字

670
00:32:27,000 --> 00:32:28,000
然后选中它

671
00:32:28,000 --> 00:32:31,000
然后再在你的键盘上面改

672
00:32:31,000 --> 00:32:33,000
那么这一种情况是不是存在的

673
00:32:33,000 --> 00:32:34,000
其实已经存在了

674
00:32:34,000 --> 00:32:37,000
就是你在你在你的手机上去修改什么东西的时候

675
00:32:37,000 --> 00:32:38,000
嗯

676
00:32:38,000 --> 00:32:41,000
你要选中一个文字

677
00:32:41,000 --> 00:32:43,000
你所做的事情并不是按住 shift 键

678
00:32:43,000 --> 00:32:44,000
然后选方向键

679
00:32:44,000 --> 00:32:45,000
因为手机键盘上

680
00:32:45,000 --> 00:32:47,000
反正也没有方向键

681
00:32:47,000 --> 00:32:47,000
对吧

682
00:32:47,000 --> 00:32:48,000
哈哈哈哈

683
00:32:48,000 --> 00:32:49,000
对

684
00:32:49,000 --> 00:32:51,000
你要用手去点那个字母

685
00:32:51,000 --> 00:32:52,000
按住松开

686
00:32:52,000 --> 00:32:53,000
然后这个字

687
00:32:53,000 --> 00:32:55,000
这个单词被选中了

688
00:32:55,000 --> 00:32:58,000
那其实在你移动手指到键盘上

689
00:32:58,000 --> 00:33:00,000
和你移动手指到

690
00:33:00,000 --> 00:33:02,000
你要选的那个单词之间

691
00:33:02,000 --> 00:33:03,000
你已经在做这种切换了

692
00:33:03,000 --> 00:33:04,000
只不过你不会

693
00:33:04,000 --> 00:33:05,000
你会觉得这个

694
00:33:05,000 --> 00:33:07,000
这种切换非常自然

695
00:33:07,000 --> 00:33:10,000
但是当一个编辑器跳出来告诉你说

696
00:33:10,000 --> 00:33:10,000
哦

697
00:33:10,000 --> 00:33:12,000
你要明确的告诉我

698
00:33:12,000 --> 00:33:14,000
你要处于哪种状态之中的时候

699
00:33:14,000 --> 00:33:16,000
你可能就不习惯了

700
00:33:16,000 --> 00:33:17,000
对

701
00:33:17,000 --> 00:33:18,000
不过就像你说的

702
00:33:18,000 --> 00:33:20,000
现实生活中好像是没有一种

703
00:33:20,000 --> 00:33:26,000
没有一种非常明显的会切换状态的

704
00:33:26,000 --> 00:33:28,000
嗯

705
00:33:28,000 --> 00:33:32,000
我只非能想到例子就是游戏

706
00:33:32,000 --> 00:33:32,000
比如说

707
00:33:32,000 --> 00:33:35,000
比如说有些游戏里面

708
00:33:36,000 --> 00:33:36,000
嗯

709
00:33:36,000 --> 00:33:38,000
早期的命令征服

710
00:33:38,000 --> 00:33:41,000
你在战略地图上可以选择

711
00:33:41,000 --> 00:33:43,000
接下来要打北非的什么地方

712
00:33:43,000 --> 00:33:46,000
而你选择之后

713
00:33:46,000 --> 00:33:47,000
才开始关卡

714
00:33:47,000 --> 00:33:48,000
在这个关卡里面

715
00:33:48,000 --> 00:33:51,000
你才会去真正的进行这场战争

716
00:33:51,000 --> 00:33:52,000
也许这是一个

717
00:33:52,000 --> 00:33:55,000
可以类比的模式

718
00:33:55,000 --> 00:33:57,000
但其实还是差的挺远

719
00:33:57,000 --> 00:33:58,000
对

720
00:33:58,000 --> 00:34:00,000
我就觉得这个是模态这个概念

721
00:34:00,000 --> 00:34:04,000
始终对于初学者来讲很大的门槛

722
00:34:04,000 --> 00:34:05,000
就是因为他没有在现实生活中

723
00:34:05,000 --> 00:34:09,000
有一个可以所谓可以隐喻的一个东西

724
00:34:09,000 --> 00:34:10,000
对

725
00:34:10,000 --> 00:34:11,000
但其实这也就是为什么

726
00:34:11,000 --> 00:34:12,000
很多人说

727
00:34:12,000 --> 00:34:17,000
VI 是一种比较社群化的编辑器

728
00:34:17,000 --> 00:34:18,000
就是

729
00:34:18,000 --> 00:34:18,000
就是

731
00:34:48,000 --> 00:34:50,000
这种模式是不适合新人入门的

732
00:34:50,000 --> 00:34:53,000
所以其实你可以到我们也看到了

733
00:34:53,000 --> 00:34:56,000
Vim 这种方式其实非常叫做什么

734
00:34:56,000 --> 00:34:58,000
不 newbie friendly

735
00:34:58,000 --> 00:34:58,000
对

736
00:34:58,000 --> 00:35:02,000
也有一些尝试在改变这么一个状况

737
00:35:02,000 --> 00:35:06,000
就是先所谓的先把你骗进来再讲

738
00:35:06,000 --> 00:35:08,000
所以现在有特别是在

739
00:35:08,000 --> 00:35:13,000
我记得在就现在 Vim 的正式的版本里面有一个叫什么

740
00:35:13,000 --> 00:35:14,000
就是什么初学者模式吧

741
00:35:14,000 --> 00:35:18,000
就他默认是禁用掉这个模态的这个这个形式吧

742
00:35:18,000 --> 00:35:20,000
就是你进去始终都是编辑状态

743
00:35:20,000 --> 00:35:25,000
然后但是我自己是没有用过那种方式

744
00:35:25,000 --> 00:35:26,000
我也不知道

745
00:35:26,000 --> 00:35:28,000
我也对我们都太晚了

746
00:35:28,000 --> 00:35:30,000
没有赶上这种 user friendly 的时代

747
00:35:30,000 --> 00:35:33,000
对就这个就好像说你

748
00:35:33,000 --> 00:35:36,000
我不知道那个的意义何在

749
00:35:36,000 --> 00:35:38,000
当然你可以把初学者领进来

750
00:35:38,000 --> 00:35:42,000
但是你并没有让他认识到这个模态的本质在哪里

751
00:35:42,000 --> 00:35:44,000
其实好像也没有什么太大用处

752
00:35:44,000 --> 00:35:47,000
就是这样变得和另外一个普通编辑器也没有什么区别了

753
00:35:47,000 --> 00:35:48,000
嗯

755
00:36:18,000 --> 00:36:21,000
那你觉得这个模式有没有被他勾引入门的吗

756
00:36:21,000 --> 00:36:25,000
应该是我有看到过某一个什么书或者某一个人怎么样在用

757
00:36:25,000 --> 00:36:28,000
但是我现在想不起来这个这个过程是怎么一回事

758
00:36:28,000 --> 00:36:34,000
不过不过可能跟这个可能跟这个什么 personality 的这些有有一点关系

759
00:36:34,000 --> 00:36:36,000
好就在相当长一段时间内

760
00:36:36,000 --> 00:36:39,000
我这个有一个人格上的缺陷就是

761
00:36:39,000 --> 00:36:44,000
我会去去如果有一就有一堆同类或者做同样的事情的东西

762
00:36:44,000 --> 00:36:46,000
我一定要选出一个最好的

763
00:36:48,000 --> 00:36:53,000
就比如说现在你给我摆如果现在我啥不知道你现在摆了两个编辑在我面前

764
00:36:53,000 --> 00:36:55,000
我一定要比较这两个编辑器哪个好

765
00:36:55,000 --> 00:36:59,000
但这个最好是就带引号的就是对于个人来讲我觉得是最好的

766
00:36:59,000 --> 00:37:02,000
然后我就是你一定要找出一个适合你自己的

767
00:37:02,000 --> 00:37:05,000
对我一定要分出来一个分出来一个

768
00:37:05,000 --> 00:37:10,000
我觉得这个这个比那个更加适合我或者就在我地里面这个是更好的

769
00:37:10,000 --> 00:37:12,000
当时就出现这么一个状态

770
00:37:12,000 --> 00:37:17,000
就是其实我是在 vim 和 me mac 里面就是都还摇摆了一段时间后来觉得感觉 vim 这种方式比较好

771
00:37:17,000 --> 00:37:25,000
然后我觉得就后来就选了在在用 vim 现在就算是一个所谓的什么终极用户

772
00:37:25,000 --> 00:37:33,000
所以你是在有对比的前提之下习惯了或者说选择了对

773
00:37:33,000 --> 00:37:37,000
OK 这个我的经历几乎不一样

774
00:37:37,000 --> 00:37:44,000
就是呃我在最开始接触到 vii 的时候完全不知道 emax 是什么

775
00:37:44,000 --> 00:37:47,000
OK 所以所以你是在一个无知的情况下

776
00:37:47,000 --> 00:37:55,000
大家选择了对我记得那是我就是可能初中毕业还是什么时候

777
00:37:55,000 --> 00:37:57,000
就就就又暴露年龄了

778
00:37:57,000 --> 00:37:59,000
看你又可以说你你你眼睛了

779
00:37:59,000 --> 00:38:02,000
对反正就是在中学当我还是一个中学生的时候

780
00:38:02,000 --> 00:38:09,000
我买了一本 em unix 命令手册之类这么一本书

781
00:38:09,000 --> 00:38:13,000
因为那个时候就装了 windows 和 links 的双系统

782
00:38:13,000 --> 00:38:17,000
那个时候 links 刚刚进入中国就我记得装的是什么 slack 文件

783
00:38:17,000 --> 00:38:21,000
还是什么就是现在几乎没有在碰的一个发行板

784
00:38:21,000 --> 00:38:27,000
嗯然后迫不及待去学命令嗯嗯

785
00:38:27,000 --> 00:38:31,000
在这本命令手册里面有那么别的命令

786
00:38:31,000 --> 00:38:33,000
大概就是那么四五行五六行

787
00:38:33,000 --> 00:38:35,000
然后讲这个命令能干嘛

788
00:38:35,000 --> 00:38:40,000
然后给你两个例子嗯而 vii 的而轮到 vii 这个命令的时候

789
00:38:40,000 --> 00:38:46,000
这个这个命令手册大概写了一本书四五页对四四五页

790
00:38:46,000 --> 00:38:48,000
我说我打药这是什么东西

791
00:38:48,000 --> 00:38:50,000
它只是个编辑器而已至于吗

792
00:38:50,000 --> 00:38:55,000
然后呃用起来用了一段就刚开始用的时候也觉得匪夷所思

793
00:38:55,000 --> 00:39:02,000
但是大概过了两三个星期有那么一个就是所谓的 urica moment

794
00:39:02,000 --> 00:39:07,000
就是啊我我明白了这么一个顿悟时刻对顿悟了

795
00:39:07,000 --> 00:39:14,000
然后啊也就从此一直用它天哪你你你初中就在看 unix 的书

796
00:39:14,000 --> 00:39:15,000
你当时在哪里

797
00:39:15,000 --> 00:39:16,000
在大学

798
00:39:16,000 --> 00:39:18,000
天津啊 OK 所以大城市还是好

799
00:39:18,000 --> 00:39:22,000
你看像我们那种我家乡那种不不不我是天津城乡集合部的

800
00:39:22,000 --> 00:39:26,000
那也比我们那种特别的偏远地区要好啊好吧

801
00:39:26,000 --> 00:39:29,000
你太谦虚了在那个时候没有互联网啊

802
00:39:29,000 --> 00:39:32,000
就基本上所有的发行板或者有换会有互联网存在

803
00:39:32,000 --> 00:39:35,000
有拨号的然后有发行板因为另一个发行板存在

804
00:39:35,000 --> 00:39:46,000
基本上一定要去呃就类似于五道口或者是就天津市类似于五道口的地方去逃才可以找到的 OK 对呃那个时候已经是中文版还是中文版

805
00:39:46,000 --> 00:39:49,000
那个时候没有中文版的 Linux

806
00:39:49,000 --> 00:39:53,000
就那个啊我记得有有一个中文版 Linux 叫什么红旗 Linux

807
00:39:53,000 --> 00:39:57,000
哈哈哈哈对有确实有这么一个东西

808
00:39:57,000 --> 00:40:01,000
这是有这么一个东西好像还在好像还在真的吗

809
00:40:01,000 --> 00:40:05,000
好像我上次见到我忘了还是已经转型了还是什么

810
00:40:05,000 --> 00:40:15,000
我这个我才不太清楚我不知道对但那个时候我也我可能是出于某种呃因为你用过道斯吗

811
00:40:15,000 --> 00:40:19,000
肯定用过啊对啊所以所以你也不是很年轻吗

812
00:40:19,000 --> 00:40:25,000
你知道真正真正年轻的人认为呃电脑开机就应该自动显示那个

813
00:40:25,000 --> 00:40:30,000
Win 的桌面然后和一个指针的如果那个跳出来一个

814
00:40:30,000 --> 00:40:37,000
C 冒泡行的反斜杠大约号然后一闪一闪的光标他会觉得电脑坏

815
00:40:37,000 --> 00:40:42,000
对确实对对大多数来说那个时候就是啊搞不定了怎么办

816
00:40:42,000 --> 00:40:45,000
对那么以电脑以民营行入门的

817
00:40:45,000 --> 00:40:48,000
人来就是对于

818
00:40:48,000 --> 00:40:53,000
命令行时代入门电脑人来说好像在学另外一个命令行是很自然的事情

819
00:40:53,000 --> 00:40:57,000
处理旁通吗我觉得这个这个应该对但现在好像已经

820
00:40:57,000 --> 00:41:03,000
你已经很难你甚至可以找到一种人就是他只会用图形化界面来编程

821
00:41:03,000 --> 00:41:10,000
大多数如果切换到用图形化的方式来编呃就是在图形在一个在一个 windows 开发者大部分都这样吧

822
00:41:12,000 --> 00:41:15,000
那就首先有一个鸡和蛋的问题因为 windows 上面并没有一个好

823
00:41:15,000 --> 00:41:23,000
用的命令行或者是你用的命令行也干不了太多事但现在还有那个什么 power shell 那个是另外一回事就在相当长一段时间内是这样子的

824
00:41:23,000 --> 00:41:43,000
嗯对应该或者说你不能说我觉得你不能说就是我不是为 windows 程序员证明但你这个在这一点上也许是因为绝大多数人在学习编程的时候接触到的操作系统是 windows

825
00:41:43,000 --> 00:41:44,000
嗯哼

826
00:41:44,000 --> 00:41:50,000
你不能因此说大多数 windows 程序员都只会在图形界面下编程

827
00:41:50,000 --> 00:41:57,000
我就说他因为 windows 上没有一个好用的命令行界面嘛就说就命令行的这么一个接口那你也不能拿他干嘛对吧

828
00:41:57,000 --> 00:41:58,000
ok

829
00:41:58,000 --> 00:41:59,000
yeah

830
00:41:59,000 --> 00:42:00,000
whatever

831
00:42:00,000 --> 00:42:06,000
对我们这次我们这一次的 flamework 主题还是编辑器之战而不是操作系统之战

832
00:42:06,000 --> 00:42:07,000
下次

833
00:42:07,000 --> 00:42:08,000
对下次

834
00:42:08,000 --> 00:42:12,000
对回到 vim 的

835
00:42:12,000 --> 00:42:13,000
我们刚才讲了

836
00:42:13,000 --> 00:42:16,000
我们刚才讲了 vim 的操作模式对吧

837
00:42:16,000 --> 00:42:17,000
对的

838
00:42:17,000 --> 00:42:36,000
那么除了模态编辑模式是一个巨大的门槛之外还有什么门槛或者说还有什么点让你觉得或者说你会觉得 vim 是非常不平静人的一个地方的的一种工具就是他的那个配置和就是所谓的扩展就他有一个叫做语言嘛

839
00:42:36,000 --> 00:42:37,000
叫做 vim script

840
00:42:37,000 --> 00:42:38,000
啊

841
00:42:38,000 --> 00:42:40,000
我觉得这个语言是相当古怪的

842
00:42:40,000 --> 00:42:44,000
就哪怕以现在的不就不不管以现在还是古代的观点

843
00:42:44,000 --> 00:42:47,000
我觉得他的语言的这个这门语言都是挺奇怪的

844
00:42:47,000 --> 00:42:53,000
对最简单的最简单的从审美的角度讲 vim script 是种非常丑陋的语言

845
00:42:53,000 --> 00:43:03,000
对这点和 emacs 有非常大的区别啊 emacs 有一个非常优美的 lisp 的语言作为他的基础

846
00:43:03,000 --> 00:43:04,000
对

847
00:43:04,000 --> 00:43:05,000
甚至 emacs

848
00:43:05,000 --> 00:43:08,000
甚至你都可以说 emacs 他并不是一个编辑器

849
00:43:08,000 --> 00:43:09,000
他就是用这个叫什么 e-learning 的语言啊

850
00:43:09,000 --> 00:43:17,000
就是一个叫什么 elitelisp 写的一个叫什么操作系统

851
00:43:17,000 --> 00:43:23,000
对就有一句很知名的话说 emacs 是一个操作系统

852
00:43:23,000 --> 00:43:26,000
他只是偶尔能被用来修改文字

853
00:43:26,000 --> 00:43:33,000
而 v 而 v 则是一个基本上只能修改文字的这么一个小工具而已

854
00:43:33,000 --> 00:43:34,000
对啊

855
00:43:34,000 --> 00:43:35,000
我就为什么这么讲呢

856
00:43:35,000 --> 00:43:38,000
就是刚才讲那个 vim script 这门语言首先是比较古怪的

857
00:43:38,000 --> 00:43:42,000
然后他的整个就他他不光是语法古怪啊

858
00:43:42,000 --> 00:43:48,000
他整个这种编程的就是整个这个编这个这个这种运行环境也是比较受限的吧

859
00:43:48,000 --> 00:43:52,000
相对于那个 emacs 那个 elitelisp 而言

860
00:43:52,000 --> 00:43:58,000
因为那时候他的那个自由度和灵活度就不管是从这个语法的角度来讲

861
00:43:58,000 --> 00:44:00,000
因为如果你知道 lisp 是什么的话

862
00:44:00,000 --> 00:44:02,000
那你就知道大概会什么一个状况

863
00:44:02,000 --> 00:44:07,000
然后他的这个啊就是可以供你修改或者是改呃

864
00:44:07,000 --> 00:44:11,000
扩展的部分也是非常庞大的

865
00:44:11,000 --> 00:44:17,000
而这样导致一个结果就是 v 很多人就是拿来就是做一个比较简单的编辑工具

866
00:44:17,000 --> 00:44:19,000
是有所谓的小儿砖嘛

867
00:44:19,000 --> 00:44:23,000
然后 emacs 就很多人来扩展来做来奇奇怪怪的事情了

868
00:44:23,000 --> 00:44:27,000
比如说有人来用 emacs 在写聊天程序啊

869
00:44:27,000 --> 00:44:30,000
网页浏览器但是文字版本的哈

870
00:44:30,000 --> 00:44:31,000
而且可以插图

871
00:44:31,000 --> 00:44:32,000
其实也可以插图的

872
00:44:32,000 --> 00:44:37,000
对我在做功课的时候还在库尔是看到了一个人演示的

873
00:44:37,000 --> 00:44:41,000
就是如何在半个小时之内用 e lips

874
00:44:41,000 --> 00:44:46,000
呃用 elisp 来写一个那个 spotify 的 client

875
00:44:46,000 --> 00:44:51,000
就你可以在他可以在对他可以在 emacs 里面搜索 spotify 上那首歌

876
00:44:51,000 --> 00:44:55,000
然后在 emacs 里面告诉 spotify 把这首歌放出来

877
00:44:55,000 --> 00:44:57,000
对就是还可以还可以写游戏

878
00:44:57,000 --> 00:45:05,000
所以所以你知道这样他的这个作用领域就完全不仅仅是一个编辑器那么简单

879
00:45:05,000 --> 00:45:07,000
对 emacs 对于很多应用器的工作是很重要的

880
00:45:07,000 --> 00:45:12,000
对因为在 emacs 用户来说是一个开机之后不管有时候没事先打开的一个工具

881
00:45:12,000 --> 00:45:15,000
对但是在 vi 在 vim 用户里面很少会看到这种现象

882
00:45:15,000 --> 00:45:21,000
所以他们其实并不需要管是什么样的操作系统那都是一个虚拟机而已

883
00:45:21,000 --> 00:45:23,000
对不管怎么说我先我先打开就是了

884
00:45:23,000 --> 00:45:27,000
对先打开 emacs 之后其他的底层系统就已经无所谓了

885
00:45:27,000 --> 00:45:33,000
对其实这也就导致就是说在使用 vi 的时候

886
00:45:33,000 --> 00:45:36,000
你不得不大量的去利用外部工具

887
00:45:36,000 --> 00:45:42,000
利用外部工具来完成 vi 或者 vim 本身不支持的一些功能

888
00:45:42,000 --> 00:45:46,000
对而在 emacs 里面你基本上可以永远待在 emacs 里

889
00:45:46,000 --> 00:45:50,000
对比如说这里说个我最我个人最常用的一个状况

890
00:45:50,000 --> 00:45:53,000
就是因为我做的很多都是服务器端的东西

891
00:45:53,000 --> 00:45:55,000
那么需要去远程调试对吧

892
00:45:55,000 --> 00:46:00,000
然后远程调试的话你要通过命令行比如说 ssh 登录过去

893
00:46:00,000 --> 00:46:04,000
但显然至少到目前为止我并没有发现在 vim 下面有一个可以就是嵌入到 vim 里面的功能

894
00:46:04,000 --> 00:46:05,000
对吧那我现在就在 vim 里面的功能里面的功能是什么呢

895
00:46:05,000 --> 00:46:10,000
就是嵌入到 vim 里面的这么一个终端的一个插件对吧

896
00:46:10,000 --> 00:46:13,000
所以我还是得一边开一个这个 vim 编辑器的窗口

897
00:46:13,000 --> 00:46:19,000
然后一边再开一个这个终端的这个窗口去做这个操作

898
00:46:19,000 --> 00:46:21,000
但这点我发现在 emacs 上面就完全不一样

899
00:46:21,000 --> 00:46:24,000
emacs 就是直接全屏是一个 emacs 的窗口

900
00:46:24,000 --> 00:46:27,000
然后里面再画出一部分来做一个终端的插件

901
00:46:27,000 --> 00:46:30,000
然后这样登录去操作这样

902
00:46:30,000 --> 00:46:34,000
对在开 vim 的时候你很少有说

903
00:46:34,000 --> 00:46:35,000
是开了的

904
00:46:35,000 --> 00:46:36,000
对的

905
00:46:36,000 --> 00:46:41,000
因为这些工作都在 vim 里面完成的这样一种情形存在

906
00:46:41,000 --> 00:46:45,000
但反过来在 emacs 里面基本上进去就不需要再出来

907
00:46:45,000 --> 00:46:56,000
对甚至就是甚至我在找例子的时候找到了这么一个场景

908
00:46:56,000 --> 00:46:59,000
就是有一个有一个应该是在实验室工作的人

909
00:46:59,000 --> 00:47:04,000
他说在 emacs 上面因为 emacs 支持在

910
00:47:04,000 --> 00:47:06,000
实验室 x windows 系统

911
00:47:06,000 --> 00:47:09,000
然后他可以同时连接到多个 xserva

912
00:47:09,000 --> 00:47:11,000
然后他可以做到这样一件事情就是

913
00:47:11,000 --> 00:47:14,000
你他在办公室里面开一台电脑

914
00:47:14,000 --> 00:47:16,000
然后在实验室里面又有几台电脑

915
00:47:16,000 --> 00:47:19,000
他可以在办公室里面打开一个 emacs

916
00:47:19,000 --> 00:47:25,000
然后远程告诉实验室里面某一台电脑上面的 x windows

917
00:47:25,000 --> 00:47:30,000
server 出现请出现一个 emacs 窗口

918
00:47:30,000 --> 00:47:33,000
他做完他的办公室做完这件事情之后走到实验室

919
00:47:33,000 --> 00:47:39,000
做实验然后就可以转身在实验室的电脑上

920
00:47:39,000 --> 00:47:44,000
在他刚刚打开的那个办公室 emacs 窗口里面输入数据

921
00:47:44,000 --> 00:47:49,000
这是一个非常对这是一件非常匪夷所思的功能

922
00:47:49,000 --> 00:47:52,000
但所以你看这个就是可以做的

923
00:47:52,000 --> 00:47:57,000
但其实你是看他这样就是或者说 emacs 用户在很多年以前

924
00:47:57,000 --> 00:48:01,000
就已经实现了现在苹果所谓的叫什么 continuity 的功能了

925
00:48:01,000 --> 00:48:02,000
对 handle world

926
00:48:02,000 --> 00:48:07,000
这不就是对虽然还是有一个人工干预的对 handle

927
00:48:07,000 --> 00:48:09,000
在人工有虽然有一个人工干预的过程

928
00:48:09,000 --> 00:48:12,000
但他已经在那了就是如果你懂得怎么用的话

929
00:48:12,000 --> 00:48:14,000
你是可以实现的而且很快

930
00:48:14,000 --> 00:48:17,000
但是反过来如果你有 vim 的话

931
00:48:17,000 --> 00:48:20,000
这种功能你就可能唯一能做的就是你走到实验室

932
00:48:20,000 --> 00:48:26,000
然后用实验室的 ssh 回来的 ssh 连接到那个办公室的电脑上

933
00:48:26,000 --> 00:48:31,000
然后在那边编辑你刚才编辑的文件你甚至不能重用一个 vim

934
00:48:31,000 --> 00:48:32,000
vim 的功能了

935
00:48:32,000 --> 00:48:37,000
所以你必须用 vim session 或者说你必须用比如说 tmax 这样的东西

936
00:48:37,000 --> 00:48:39,000
等一下 vim 好像有一个这个 server mode

937
00:48:39,000 --> 00:48:42,000
我记得但是我从来没有用过我也没有用过

938
00:48:42,000 --> 00:48:44,000
对我记得有这么一个东西确实是可以这么干

939
00:48:44,000 --> 00:48:47,000
就是这里要解释一下什么是 server mode

940
00:48:47,000 --> 00:48:52,000
就是我们常讲的编辑器其实如果以大体来分可以分为两部分

941
00:48:52,000 --> 00:48:55,000
就一个是所谓的前端就他展示给你那些字符

942
00:48:55,000 --> 00:48:59,000
然后那些你现在看的部分那个那一部分

943
00:48:59,000 --> 00:49:02,000
然后他其实后面跑的是一个所谓的这回的这个

944
00:49:02,000 --> 00:49:03,000
编辑器的内核

945
00:49:03,000 --> 00:49:07,000
然后那个内核其实在操作内存中边间的一块区域嘛对吧

946
00:49:07,000 --> 00:49:09,000
然后通时磁盘上的一个文件

947
00:49:09,000 --> 00:49:14,000
对通常的话我这两块是在同一个进程或者同一台机器上面的

948
00:49:14,000 --> 00:49:17,000
至少是在同一台机器上面的就是你编辑本地的文件嘛

949
00:49:17,000 --> 00:49:22,000
然后刚才讲的那个 server mode 其实可以让你把这两个分开

950
00:49:22,000 --> 00:49:25,000
就是你可以在比如本地启动一个 vim 的前端

951
00:49:25,000 --> 00:49:27,000
然后他连接的不是你本地的

952
00:49:27,000 --> 00:49:29,000
他编辑的不是你一个本地的文件

953
00:49:29,000 --> 00:49:31,000
而是连接到远程的一台

954
00:49:31,000 --> 00:49:33,000
vim 的 server 上面去

955
00:49:33,000 --> 00:49:38,000
然后通过这种方式去编去控制远程那台 server

956
00:49:38,000 --> 00:49:41,000
编辑他的内存或者是中的一个区块

957
00:49:41,000 --> 00:49:43,000
就编辑他的那个一个文件嘛

958
00:49:43,000 --> 00:49:44,000
所以其实也是这样做

959
00:49:44,000 --> 00:49:50,000
但是在现实中我似乎还没有发现有什么场合能用到这一点

960
00:49:50,000 --> 00:49:57,000
对因为 vim 的使用模式和 invex 使用模式基本上就是两个极端

961
00:49:57,000 --> 00:50:00,000
vim 就是 vim 非常小

962
00:50:00,000 --> 00:50:01,000
嗯

963
00:50:01,000 --> 00:50:02,000
它启动非常快

964
00:50:02,000 --> 00:50:04,000
就像一个命令一样

965
00:50:04,000 --> 00:50:07,000
一打 vim 它立刻就会弹出来一个窗口

966
00:50:07,000 --> 00:50:11,000
而 emax 则是一个启动相对来说比较慢的这么一个工具

967
00:50:11,000 --> 00:50:17,000
所以使用 vim 的习惯也就是多次的进入 vim

968
00:50:17,000 --> 00:50:18,000
多次的切出 vim

969
00:50:18,000 --> 00:50:24,000
然后把 vim 作为你一系列工具之中的一个组件使用

970
00:50:24,000 --> 00:50:29,000
而 emax 反过来呢基本上就是你进去之后就想办法不要从里面出了

971
00:50:29,000 --> 00:50:30,000
一切功能或者一切功能都可以用到你手里面了

972
00:50:31,000 --> 00:50:34,000
所以这些工具尽量在 emax 里面内部解决

973
00:50:34,000 --> 00:50:38,000
所以 vim 应该是一个你的系统里面的常驻进程

974
00:50:38,000 --> 00:50:40,000
你说 emax 应该是常驻进程吧

975
00:50:40,000 --> 00:50:44,000
对对对 emax 应该是你的系统的一个常驻进程

976
00:50:44,000 --> 00:50:49,000
对因为你在这个对你在这个 emax 里面基本上可以做任何事情

977
00:50:49,000 --> 00:50:53,000
比如说看当前的日历啊这种小儿科的事情全都可以在 emax 里面完成

978
00:50:53,000 --> 00:50:55,000
甚至还可以玩俄罗斯方块

979
00:50:55,000 --> 00:50:58,000
emax 内置了俄罗斯方块功能

980
00:50:58,000 --> 00:51:00,000
这也是 vim 所缺乏的一个一个功能

981
00:51:00,000 --> 00:51:04,000
缺乏一个一个一个一个特征

982
00:51:04,000 --> 00:51:07,000
还有一点我觉得我一直想挺羡慕的啊

983
00:51:07,000 --> 00:51:11,000
就 emax 的这个特性就是 emax 的图形界面模式

984
00:51:11,000 --> 00:51:16,000
它是可以使用多种字就是多种字体组合的

985
00:51:16,000 --> 00:51:19,000
ok 那这个要比 vim 好多了

986
00:51:19,000 --> 00:51:21,000
对然后这个有什么用呢就是啊

987
00:51:21,000 --> 00:51:25,000
之前这个是我看我一个朋友在大学的时候用过的

988
00:51:25,000 --> 00:51:29,000
就是他当时他那我我

989
00:51:29,000 --> 00:51:33,000
就他写那个论文或者看论文写的写文档的时候

990
00:51:33,000 --> 00:51:35,000
他会用那个 lite 来写嘛

991
00:51:35,000 --> 00:51:38,000
然后他他是一个 emax 用户

992
00:51:38,000 --> 00:51:40,000
然后我去他那里看的时候就会发现

993
00:51:40,000 --> 00:51:43,000
他的那个界面的那个

994
00:51:43,000 --> 00:51:49,000
就他可以用那个某一种 emax 的 mode 展直接展示出

995
00:51:49,000 --> 00:51:50,000
比如说这是一个标题

996
00:51:50,000 --> 00:51:52,000
它会大一点的字

997
00:51:52,000 --> 00:51:53,000
然后这个是正文

998
00:51:53,000 --> 00:51:55,000
它会小它会是一个正文的字体

999
00:51:55,000 --> 00:51:56,000
然后它是你看到什么二级标题

1000
00:51:56,000 --> 00:51:59,000
它又会是介于大标题和正文之间的一个字体

1001
00:51:59,000 --> 00:52:01,000
或者是一个字号或者另外一种形态的字

1002
00:52:01,000 --> 00:52:03,000
就是他伴所见即所得

1003
00:52:03,000 --> 00:52:04,000
对对对就这个意思

1004
00:52:04,000 --> 00:52:07,000
而且他可以在因为 emax 的图形界面其实非常牛逼

1005
00:52:07,000 --> 00:52:11,000
他可以插入什么干净讲一波音乐这种小儿可以可以做

1006
00:52:11,000 --> 00:52:13,000
还可以插插入图形嘛

1007
00:52:13,000 --> 00:52:16,000
他甚至可以通过一个一个一个插件

1008
00:52:16,000 --> 00:52:18,000
就 emax 插件

1009
00:52:18,000 --> 00:52:24,000
及时的渲染你在 emax 的文档里面输入的一条 lite 的公式

1010
00:52:24,000 --> 00:52:27,000
然后把那个渲染的结果以图片的形式展现在那里

1011
00:52:27,000 --> 00:52:29,000
实现一个所基本上实现一个

1012
00:52:29,000 --> 00:52:33,000
所见即所得的这边一个 litex 的编辑的结果

1013
00:52:33,000 --> 00:52:37,000
嗯嗯啊这个是这个是这个是当时永远做不到的

1014
00:52:37,000 --> 00:52:40,000
因为因为的它是一个就不管你怎么改

1015
00:52:40,000 --> 00:52:43,000
它始终是默认是一个单一字体界面

1016
00:52:43,000 --> 00:52:46,000
而且它的那个都是一个所谓懂宽字体嘛

1017
00:52:46,000 --> 00:52:49,000
对就是你在唯一能做的就是语法高亮

1018
00:52:49,000 --> 00:52:50,000
去改变自己的颜色啊

1019
00:52:50,000 --> 00:52:53,000
或者加什么下划线啊之类的东西

1020
00:52:53,000 --> 00:52:57,000
但是你并不能说你在同一个文档中的一部分才有一种字体

1021
00:52:57,000 --> 00:52:58,000
然后另外一部分才能用字体

1022
00:52:58,000 --> 00:52:59,000
你当然

1023
00:52:59,000 --> 00:53:01,000
你更加不能插入图片

1024
00:53:01,000 --> 00:53:03,000
因为它根本没有这种接口嘛

1025
00:53:03,000 --> 00:53:06,000
所以所以这一点上我觉得从啊

1026
00:53:06,000 --> 00:53:08,000
就所以其实从这角度来讲

1027
00:53:08,000 --> 00:53:15,000
你你并不能把 vim 和 emax 作为两个同等的产品来对比

1028
00:53:15,000 --> 00:53:18,000
它就是所谓的就不是苹果和橘子的区别

1029
00:53:18,000 --> 00:53:22,000
对这是好像嗯

1030
00:53:22,000 --> 00:53:26,000
其实但是这种比较真就是有意义的

1031
00:53:26,000 --> 00:53:28,000
或者说真就是时常被拿出来说的

1032
00:53:28,000 --> 00:53:30,000
因为就有点像啊

1033
00:53:30,000 --> 00:53:33,000
安卓的和和和 iPhone 之间的差别

1034
00:53:33,000 --> 00:53:34,000
iPhone 同时是硬件

1035
00:53:34,000 --> 00:53:35,000
同时是软件

1036
00:53:35,000 --> 00:53:38,000
同时是一家公司所提供的一系列服务

1037
00:53:38,000 --> 00:53:40,000
但安卓的只是一个操作系统而已

1038
00:53:40,000 --> 00:53:42,000
嗯但人们即便如此

1039
00:53:42,000 --> 00:53:44,000
人们还是会把他们拿出来相应的

1040
00:53:44,000 --> 00:53:50,000
嗯对但 vim 和 emax 之间的差别大概大致类似

1041
00:53:50,000 --> 00:53:53,000
但我仍旧认为这样的比较还是有意义的

1042
00:53:53,000 --> 00:53:57,000
对对就就反正就是刚才说的那种那个 emax 能做的很多事情

1043
00:53:57,000 --> 00:53:59,000
其实 vim 是做不到的嘛

1044
00:53:59,000 --> 00:54:01,000
就我有时候还是挺羡慕的

1045
00:54:01,000 --> 00:54:04,000
然后也也尝试过很多次去学那个 emax

1046
00:54:04,000 --> 00:54:08,000
但是因为模态又没有模态这个东西嘛啊

1047
00:54:08,000 --> 00:54:11,000
也一直就是觉得挺沮丧的

1048
00:54:11,000 --> 00:54:12,000
不过后来有

1049
00:54:12,000 --> 00:54:14,000
我向你介绍一个插件叫 evil

1050
00:54:14,000 --> 00:54:15,000
哈哈哈

1051
00:54:15,000 --> 00:54:16,000
是 evil

1052
00:54:16,000 --> 00:54:18,000
不是叫 evil 吧

1053
00:54:18,000 --> 00:54:19,000
叫什么来的

1054
00:54:19,000 --> 00:54:23,000
对反正大概意思就是 emax 上有一个一个插件

1055
00:54:23,000 --> 00:54:25,000
刚才讲了可以插件啊

1056
00:54:25,000 --> 00:54:27,000
他完全模拟了

1057
00:54:27,000 --> 00:54:30,000
呃呃 vim 的模态系统

1058
00:54:30,000 --> 00:54:33,000
然后在 emax 里面也可以做

1059
00:54:33,000 --> 00:54:35,000
然后后来我据说哈

1060
00:54:35,000 --> 00:54:38,000
我这个没有没有真心自求证过

1061
00:54:38,000 --> 00:54:42,000
据说是比 vim 自己的模态做的还好

1062
00:54:42,000 --> 00:54:48,000
对这就是 vivi 和 emax 的最大的一个区别

1063
00:54:48,000 --> 00:54:50,000
就是 emax 车可以成为 vim

1064
00:54:50,000 --> 00:54:52,000
但是 vim 永远不会成为 emax

1065
00:54:52,000 --> 00:54:53,000
对

1066
00:54:53,000 --> 00:54:55,000
这人说好像有点自黑的意思

1067
00:54:55,000 --> 00:54:57,000
嗯也没错

1068
00:54:57,000 --> 00:54:58,000
没有吧

1069
00:54:58,000 --> 00:55:00,000
我觉得这还是还蛮值得自豪的

1070
00:55:00,000 --> 00:55:03,000
因为呃反过来想 emax 的用户可以说

1071
00:55:03,000 --> 00:55:05,000
我们可以做这个可以做那个

1072
00:55:05,000 --> 00:55:06,000
嗯是我们可以说

1073
00:55:06,000 --> 00:55:12,000
嗯我们只需要精集中注意力做一件事情就好了

1074
00:55:12,000 --> 00:55:18,000
那其他需要其他的功能就交给其他的工具去实现就好了

1075
00:55:18,000 --> 00:55:20,000
对回到最开始说的这是一种哲学

1076
00:55:20,000 --> 00:55:23,000
然后使用哲学的拥吻或者思维状态的一个

1077
00:55:23,000 --> 00:55:25,000
对对对一个差别吧

1078
00:55:25,000 --> 00:55:26,000
对我我觉得我们都是那种人就是喜欢

1079
00:55:26,000 --> 00:55:29,000
一个很小所谓的 unix 哲学嘛

1080
00:55:29,000 --> 00:55:31,000
就是 do one thing and do it well 嘛

1081
00:55:31,000 --> 00:55:32,000
对

1082
00:55:32,000 --> 00:55:37,000
然后其实我在就是我们在本质上都是排斥那种所谓大全的方案的

1083
00:55:37,000 --> 00:55:40,000
比如上次你讲那个 system d 的那个时候

1084
00:55:40,000 --> 00:55:46,000
我应该我也能也能也也能够感觉得到你是不太喜欢那那套方案的

1085
00:55:46,000 --> 00:55:52,000
对这但其实如果去追溯这两个工具的出身的话

1086
00:55:52,000 --> 00:55:55,000
你就会意识到 vi 其实就是一类的方案

1087
00:55:55,000 --> 00:56:01,000
其实就是一类就从一开始从 1976 年他就是 lint unix 一部分

1088
00:56:01,000 --> 00:56:04,000
而 emax 是由 gnu 的创始人所写的

1089
00:56:04,000 --> 00:56:05,000
reacher storm

1090
00:56:05,000 --> 00:56:07,000
gnu 的创始人对 rms

1091
00:56:07,000 --> 00:56:10,000
就是 stallman 写这个东西的时候

1092
00:56:10,000 --> 00:56:16,000
他其实当然他仍旧是在一台 lint unix 的机器上所写出来的

1093
00:56:16,000 --> 00:56:21,000
可是我觉得 emax 这个东西本质上还是违背 unix 的哲学

1094
00:56:21,000 --> 00:56:24,000
对他是一个就是所谓的大叫什么大教堂嘛

1095
00:56:25,000 --> 00:56:29,000
对他就是一个八杂他就是一个可思议中

1096
00:56:29,000 --> 00:56:31,000
对啊所以

1097
00:56:31,000 --> 00:56:36,000
但是有时候你也不得不承认他有时候你有一个就是

1098
00:56:36,000 --> 00:56:40,000
像那种小儿精的时候有时候所谓的边界的问题是比较难

1099
00:56:40,000 --> 00:56:44,000
就配合起来会有各种各样的不不让你不爽的地方

1100
00:56:44,000 --> 00:56:47,000
比如说对那个 vm 你要去调一些外部的工具

1101
00:56:47,000 --> 00:56:53,000
那么你知道那个在 unix 里面这种工具之间互相调一般就只能通过那个传闻本去去做这个输出的这种工具

1102
00:56:53,000 --> 00:56:58,000
去做这个输出的这种事情来来进行一些交互嘛

1103
00:56:58,000 --> 00:57:05,000
但是这个而且他缺乏一种就是比较比较 unified 的这样一种这样一种调用方式

1104
00:57:05,000 --> 00:57:13,000
比如说呃我刚刚一个小时之前用到的就是比如说我要在 vm 里面格式化 json

1105
00:57:13,000 --> 00:57:23,000
对我现在比较流行的或者说比较 de facto 的优雅解决方式调用 python 来格式化 json

1106
00:57:23,000 --> 00:57:29,000
那么你就会意识到你要在一个外部你就要在 vm vi 这样一种工具里面调用一个外部工具

1107
00:57:29,000 --> 00:57:40,000
而这个外部工具的输出呃以及他的输入其实都是某种跨进程完成的这样一种

1108
00:57:40,000 --> 00:57:46,000
对这样一种结果你会觉得非常的有一种很很很不爽的感觉

1109
00:57:46,000 --> 00:57:52,000
我可能具体描述他们但是在 emacs 下面你可能只需要敲几个组合键就完了

1110
00:57:52,000 --> 00:57:53,000
对而且也有一个

1111
00:57:53,000 --> 00:57:56,000
然后整个过程就好像你不会觉得自己离开了一次编辑器

1112
00:57:56,000 --> 00:58:02,000
但是在 vm 里面你会很明确的感觉到哦刚才这个东西是用 python 来做的

1113
00:58:02,000 --> 00:58:09,000
对我觉得这可能跟那个 emacs 的叫做什么 lisp 的根基有一点呃或多或少的关系哈

1114
00:58:09,000 --> 00:58:16,000
就是你知道在呃曾经有一种操作系统是用 lisp 写的

1115
00:58:16,000 --> 00:58:20,000
就曾经有一种硬件是专门为了跑 lisp 操作系统的 lisp machine

1116
00:58:20,000 --> 00:58:22,000
对然后它里面的所有装备都是用 lisp 的

1117
00:58:22,000 --> 00:58:28,000
然后它里面的所有状态都是可以被修改的可以被及时修改的

1118
00:58:28,000 --> 00:58:34,000
就是对 lisp 这种语言最大的魅力也就在于它的它的它就像围棋一样它的基础非常简单

1119
00:58:34,000 --> 00:58:40,000
但是对它可以不停的修改自身然后可以不停的在运行时添加语言本身的功能

1120
00:58:40,000 --> 00:58:46,000
对就是说明一个什么问题呢就是它的进程之间的边界其实是比较模糊的

1121
00:58:46,000 --> 00:58:51,000
因为整个如果整个操作系统的所有的状态都是可以随意的访问和修改的话

1122
00:58:51,000 --> 00:58:57,000
那就不存在说像比如说 unix 这种这种相对于就是每个进程之间完全割裂

1123
00:58:57,000 --> 00:59:03,000
然后你只能通过简单的输出或者其他的 IPC 的方式来实现这个进程之间的通信

1124
00:59:03,000 --> 00:59:06,000
这种肯定是有一定的这个代价和门槛

1125
00:59:06,000 --> 00:59:11,000
刚才讲的你比如说你只能依赖于文一般情况下你是只能依赖于文本的方式来实现的

1126
00:59:11,000 --> 00:59:19,000
就会导致同一个数据你要不断的把它序列化然后反序列化成一个内存中的内存中的一个结构嘛

1127
00:59:19,000 --> 00:59:21,000
但是如果你像

1128
00:59:21,000 --> 00:59:26,000
像 Lisp machine 这种方式或者说在 emacs 里面这种方式你整个都是在同一个进程里面的

1129
00:59:26,000 --> 00:59:28,000
当然 Lisp machine 就比较极端

1130
00:59:28,000 --> 00:59:32,000
因为整个系统都是一个进程你可以这么理解吧

1131
00:59:32,000 --> 00:59:38,000
那么这样的话就不存在说你每次要序列去把一个内存中的结构序列化成文本

1132
00:59:38,000 --> 00:59:41,000
然后再去到另外一个地方解序列化出来

1133
00:59:41,000 --> 00:59:46,000
这个本来也是一个损耗嘛而且也就是多余的工作

1134
00:59:46,000 --> 00:59:50,000
我有一个问题就是 Lisp machine 的 CPU 是什么呢

1135
00:59:51,000 --> 00:59:53,000
CPU 仍旧是传统意义上的 CPU 吧

1136
00:59:53,000 --> 01:00:00,000
它不是在 CPU 级别提供什么什么什么 Card、CDR 这种这种

1137
01:00:00,000 --> 01:00:02,000
好像是好像是这样的

1138
01:00:02,000 --> 01:00:04,000
真的吗这这可能吗

1139
01:00:04,000 --> 01:00:08,000
为什么不可能那只有那只有几个什么七个还是八个的圆嘛

1140
01:00:08,000 --> 01:00:11,000
就是那个最原始的那几个那几个表达就可以了

1141
01:00:11,000 --> 01:00:18,000
对可是这样这样的芯片真的存在吗就是专门直接解释执行 Lisp 语句的芯片

1142
01:00:18,000 --> 01:00:19,000
我没记错应该是这样的

1143
01:00:19,000 --> 01:00:20,000
确定吗

1144
01:00:20,000 --> 01:00:23,000
可以再查一下你你你你问一下

1145
01:00:23,000 --> 01:00:24,000
因为我记得是这样子的

1146
01:00:24,000 --> 01:00:26,000
就如果至少 Lisp machine 不是的话

1147
01:00:26,000 --> 01:00:28,000
曾经有人做过这样的东西

1148
01:00:28,000 --> 01:00:30,000
但是虽然性能怎么样我们再说

1149
01:00:30,000 --> 01:00:32,000
但是起码是存在过这么一种东西的

1150
01:00:32,000 --> 01:00:39,000
对我相信如果能在硬件上完成一个 Lisp 圆的硬件解释器的话

1151
01:00:39,000 --> 01:00:44,000
那的确是非常非常 alien 的一种东西

1152
01:00:44,000 --> 01:00:48,000
它还是通过这个汇编成机器语呀

1153
01:00:48,000 --> 01:00:50,000
但是它应该是在硬件层面有的

1154
01:00:50,000 --> 01:00:52,000
对这个 Lisp 的特性有所支持的

1155
01:00:52,000 --> 01:00:54,000
OK

1156
01:00:54,000 --> 01:00:58,000
也不是完全的通过那种方式你讲那个方式来实现

1157
01:00:58,000 --> 01:01:00,000
但是差不太远了已经

1158
01:01:00,000 --> 01:01:01,000
OK

1159
01:01:01,000 --> 01:01:02,000
对

1160
01:01:02,000 --> 01:01:04,000
回到回到回到 emax

1161
01:01:04,000 --> 01:01:07,000
对 emax 的非常非常诱人的一点

1162
01:01:07,000 --> 01:01:10,000
大概也就得在于 elips

1163
01:01:10,000 --> 01:01:12,000
elisp 这种语言上面了

1164
01:01:12,000 --> 01:01:13,000
嗯

1165
01:01:13,000 --> 01:01:17,000
对我其实有好多次下决心要学一学 Lisp

1166
01:01:17,000 --> 01:01:18,000
学一学 emax

1167
01:01:18,000 --> 01:01:19,000
也就是因为

1168
01:01:19,000 --> 01:01:20,000
想要找一个

1169
01:01:20,000 --> 01:01:22,000
真正的能够用到 Lisp 的地方

1170
01:01:22,000 --> 01:01:23,000
嗯

1171
01:01:23,000 --> 01:01:24,000
嗯

1172
01:01:24,000 --> 01:01:29,000
不过每次都是因为就是小拇指或者是大拇指开始抱怨

1173
01:01:29,000 --> 01:01:31,000
然后想还是还是算了吧

1174
01:01:31,000 --> 01:01:32,000
健康要紧

1175
01:01:32,000 --> 01:01:37,000
这个就是我们上应该是前一期提到的这个键盘的问题

1176
01:01:37,000 --> 01:01:40,000
就是 emax 的过多的使用快捷键

1177
01:01:40,000 --> 01:01:44,000
而且在目前的主流的键盘的布局上面

1178
01:01:44,000 --> 01:01:49,000
这些快捷键对你的手指特别是小指都是一个极大的考验

1179
01:01:49,000 --> 01:01:50,000
对

1180
01:01:50,000 --> 01:01:55,000
然后如果你不想你在可能 40 岁之前就是手指或者手掌废掉的话

1181
01:01:55,000 --> 01:01:58,000
可能需要要做一些比较大的调整才可以了

1182
01:01:58,000 --> 01:02:01,000
对如果你不想在手上面出现什么拇指外翻

1183
01:02:01,000 --> 01:02:04,000
小指外翻这种症状的话

1184
01:02:04,000 --> 01:02:05,000
这还是所以应该买的

1185
01:02:05,000 --> 01:02:08,000
我们不应该这么我们不应该这样误导听众

1186
01:02:08,000 --> 01:02:10,000
所以应该买那个 padel

1187
01:02:10,000 --> 01:02:13,000
对呀买那个踏板是挺有用的

1188
01:02:13,000 --> 01:02:14,000
嗯

1189
01:02:14,000 --> 01:02:18,000
对其实这边也可以解释一下就是如果我们听众没有用过一个 padel

1190
01:02:18,000 --> 01:02:20,000
如果没有用过 emax 的话

1191
01:02:20,000 --> 01:02:24,000
那么 emax 的绝大部分操作都有一个对应的快捷键

1192
01:02:24,000 --> 01:02:27,000
比如说退出 emax 是什么

1193
01:02:27,000 --> 01:02:28,000
Ctrl X

1194
01:02:28,000 --> 01:02:29,000
Ctrl C

1195
01:02:29,000 --> 01:02:30,000
对

1196
01:02:30,000 --> 01:02:32,000
应该是吧

1197
01:02:32,000 --> 01:02:33,000
还是

1198
01:02:33,000 --> 01:02:40,000
对就是大而且大部分 emax 的快捷键都是要按两次

1199
01:02:40,000 --> 01:02:43,000
就是你不仅仅是像比如说 windows 里面

1200
01:02:43,000 --> 01:02:45,000
Ctrl X 是剪切

1201
01:02:45,000 --> 01:02:46,000
在 emax 里面

1202
01:02:46,000 --> 01:02:47,000
嗯

1203
01:02:47,000 --> 01:02:52,000
你为了退出编辑器要按 Ctrl X 松开再按 Ctrl C

1204
01:02:52,000 --> 01:02:53,000
对

1205
01:02:53,000 --> 01:02:56,000
就绝大部分命令都有两到三个快捷键

1206
01:02:56,000 --> 01:02:57,000
需要依次按下

1207
01:02:57,000 --> 01:03:01,000
对所以所以刚才我们讲你知道为什么你的那个小小拇指会很快要废掉了吗

1208
01:03:01,000 --> 01:03:02,000
也是这个原因

1209
01:03:02,000 --> 01:03:05,000
你你刚刚听你乍听可能没有什么

1210
01:03:05,000 --> 01:03:08,000
但是想象一下你每要你要你每要改一个单词

1211
01:03:08,000 --> 01:03:09,000
每要改一个行字

1212
01:03:09,000 --> 01:03:12,000
你就必须按两三次 control

1213
01:03:12,000 --> 01:03:14,000
那对于时间一长的话

1214
01:03:14,000 --> 01:03:16,000
对于你的小指其实伤害相当大

1215
01:03:16,000 --> 01:03:17,000
而且我觉得

1216
01:03:17,000 --> 01:03:22,000
我觉得他那些快捷键的那个就是我觉得很难就是我可能也是用的不够熟练啊

1217
01:03:22,000 --> 01:03:25,000
但是我觉得好像很难记住哎

1218
01:03:25,000 --> 01:03:27,000
对就是经常有 list

1219
01:03:27,000 --> 01:03:36,000
那个 emax 用户跟我说什么 emax 用的快捷键比较符合直觉就 control X 其实是 extended commands

1220
01:03:36,000 --> 01:03:39,000
然后 Ctrl C 就是 whatever

1221
01:03:39,000 --> 01:03:40,000
Ctrl C 不是 cancel 吗

1222
01:03:40,000 --> 01:03:41,000
就 extended command

1223
01:03:41,000 --> 01:03:44,000
然后 cancel 其实还是挺好记的

1224
01:03:44,000 --> 01:03:45,000
可是反过来

1225
01:03:45,000 --> 01:03:46,000
嗯

1226
01:03:46,000 --> 01:03:48,000
你可以说 control n next

1227
01:03:48,000 --> 01:03:50,000
还是移动光标向前

1228
01:03:50,000 --> 01:03:51,000
对吧

1229
01:03:51,000 --> 01:03:52,000
还是

1230
01:03:52,000 --> 01:03:54,000
还是向下翻

1231
01:03:54,000 --> 01:03:56,000
我往下

1232
01:03:56,000 --> 01:03:57,000
下一个

1233
01:03:57,000 --> 01:03:58,000
next

1234
01:03:58,000 --> 01:03:59,000
对

1235
01:03:59,000 --> 01:04:00,000
control p 是往回

1236
01:04:00,000 --> 01:04:01,000
然后 control f 是向前

1237
01:04:01,000 --> 01:04:02,000
光标向右

1238
01:04:02,000 --> 01:04:04,000
或者说 control b 是光标向左

1239
01:04:04,000 --> 01:04:05,000
就是 next

1240
01:04:05,000 --> 01:04:06,000
previous

1241
01:04:06,000 --> 01:04:07,000
forward

1242
01:04:07,000 --> 01:04:08,000
backward

1243
01:04:08,000 --> 01:04:09,000
这些是符合直觉的

1244
01:04:09,000 --> 01:04:10,000
可是其实也不一定

1245
01:04:10,000 --> 01:04:12,000
如果你是母语是英文来讲

1246
01:04:12,000 --> 01:04:14,000
你觉得还可以猜想出来一个什么 next

1247
01:04:14,000 --> 01:04:15,000
previous 那些

1248
01:04:15,000 --> 01:04:17,000
但是如果你母语不是英文

1249
01:04:17,000 --> 01:04:19,000
或者是甚至你比如说你母语是德文

1250
01:04:19,000 --> 01:04:20,000
你想一下

1251
01:04:20,000 --> 01:04:21,000
这个符合直觉吗

1252
01:04:21,000 --> 01:04:22,000
我觉得也不一定

1253
01:04:22,000 --> 01:04:28,000
德语可能也还行

1254
01:04:28,000 --> 01:04:29,000
对 anyway

1255
01:04:29,000 --> 01:04:32,000
但这不就回到了美国中心论

1256
01:04:32,000 --> 01:04:33,000
对

1257
01:04:33,000 --> 01:04:36,000
而且这样其实同样的问题在 vim 上面也有

1258
01:04:36,000 --> 01:04:39,000
对也是

1259
01:04:39,000 --> 01:04:40,000
change

1260
01:04:40,000 --> 01:04:42,000
change 或者是 yank

1261
01:04:42,000 --> 01:04:44,000
为什么 y 代表减千

1262
01:04:44,000 --> 01:04:46,000
为什么代表复制

1263
01:04:46,000 --> 01:04:48,000
因为 y stand for yank

1264
01:04:48,000 --> 01:04:51,000
可是你要不是你不是英语母语者的话

1265
01:04:51,000 --> 01:04:52,000
yank 这个词到底什么意思

1266
01:04:52,000 --> 01:04:53,000
其实我很懒

1267
01:04:53,000 --> 01:04:54,000
我才明白

1268
01:04:54,000 --> 01:04:55,000
其实就算你是母语

1269
01:04:55,000 --> 01:04:56,000
你看见 yank

1270
01:04:56,000 --> 01:04:58,000
你不是你没有理解 vim 的概念

1271
01:04:58,000 --> 01:05:01,000
你知道 yank 也是很很费解的一个概念

1272
01:05:01,000 --> 01:05:02,000
对

1273
01:05:02,000 --> 01:05:03,000
对回到 e-max

1274
01:05:03,000 --> 01:05:06,000
e-max 里面有些快捷键的确是

1275
01:05:06,000 --> 01:05:07,000
至少你按下去之后

1276
01:05:07,000 --> 01:05:09,000
你是比较容易记下来的

1277
01:05:09,000 --> 01:05:11,000
但是另外一些都不是

1278
01:05:11,000 --> 01:05:13,000
比如说向下翻译品是 control v

1279
01:05:13,000 --> 01:05:15,000
那我可以把 v

1280
01:05:15,000 --> 01:05:16,000
我不知道 v 代表什么

1281
01:05:16,000 --> 01:05:17,000
v 代表

1282
01:05:17,000 --> 01:05:20,000
至少我是把它理解为下箭头

1283
01:05:20,000 --> 01:05:23,000
就是 v 是向下翻译

1284
01:05:23,000 --> 01:05:25,000
也是因为 v 是一个向下的箭头

1285
01:05:25,000 --> 01:05:27,000
这可能是有两个二的

1286
01:05:27,000 --> 01:05:33,000
所以这里是什么图形法加英文混合记忆

1287
01:05:33,000 --> 01:05:35,000
对不然你告诉我它是什么

1288
01:05:35,000 --> 01:05:37,000
v stand for what

1289
01:05:37,000 --> 01:05:38,000
对

1290
01:05:38,000 --> 01:05:41,000
然后 control v 是下翻

1291
01:05:41,000 --> 01:05:42,000
那请你猜一猜

1292
01:05:42,000 --> 01:05:44,000
请你猜一猜什么是上翻

1293
01:05:44,000 --> 01:05:45,000
各位听众

1294
01:05:45,000 --> 01:05:46,000
各位亲爱的听众

1295
01:05:46,000 --> 01:05:48,000
请你猜一猜向上翻是什么

1296
01:05:48,000 --> 01:05:49,000
是 b 吗

1297
01:05:49,000 --> 01:05:50,000
好像是是不是

1298
01:05:50,000 --> 01:05:52,000
向上翻译品是 meta

1299
01:05:52,000 --> 01:05:54,000
也是 alt 加 v

1300
01:05:54,000 --> 01:05:56,000
what the fuck

1301
01:05:56,000 --> 01:05:58,000
所以

1302
01:05:58,000 --> 01:06:01,000
对这里是有一点

1303
01:06:01,000 --> 01:06:02,000
也可以

1304
01:06:02,000 --> 01:06:03,000
他可以这么理解

1305
01:06:03,000 --> 01:06:04,000
就是 v 是一个翻译的

1306
01:06:04,000 --> 01:06:10,000
但是然后方向是由快捷键来控制的

1307
01:06:10,000 --> 01:06:11,000
好吧

1308
01:06:11,000 --> 01:06:21,000
我们的先 retour

1309
01:06:21,000 --> 01:06:23,000
比如说这个

1310
01:06:23,000 --> 01:06:25,000
其实有点不太有趣

1311
01:06:25,000 --> 01:06:36,000
它放一个的

1312
01:06:37,000 --> 01:06:39,000
dice

1313
01:06:39,000 --> 01:06:40,000
lagi

1314
01:06:40,000 --> 01:06:41,000
他们之下编辑器

1315
01:06:41,000 --> 01:06:44,000
在他们之下编辑文档

1316
01:06:44,000 --> 01:06:46,000
你取决于你的视角

1317
01:06:46,000 --> 01:06:49,000
你可能觉得非常的老掉牙

1318
01:06:49,000 --> 01:06:52,000
但也有可能会觉得非常的酷

1319
01:06:52,000 --> 01:06:57,000
我相信可能还是觉得

1320
01:06:57,000 --> 01:06:59,000
在命令行之下修改文件

1321
01:06:59,000 --> 01:07:01,000
比较老掉牙的人居多吧

1322
01:07:01,000 --> 01:07:02,000
我就觉得

1323
01:07:02,000 --> 01:07:04,000
我觉得首先一点就是

1324
01:07:04,000 --> 01:07:07,000
他们至少从观感上

1325
01:07:07,000 --> 01:07:09,000
就是 Vim 和 eMax 来讲

1326
01:07:09,000 --> 01:07:10,000
他们在观感上

1327
01:07:10,000 --> 01:07:11,000
都是一个不美的应用

1328
01:07:11,000 --> 01:07:14,000
这倒是不足

1329
01:07:14,000 --> 01:07:15,000
这倒的确是个

1330
01:07:15,000 --> 01:07:18,000
对 起码我知道很多

1331
01:07:18,000 --> 01:07:22,000
从 Mac 的铁杆用户

1332
01:07:22,000 --> 01:07:24,000
他都不是特别喜欢这两个

1333
01:07:24,000 --> 01:07:25,000
他们会喜欢一些

1334
01:07:25,000 --> 01:07:27,000
就 Mac 原生的

1335
01:07:27,000 --> 01:07:29,000
然后是具有

1336
01:07:29,000 --> 01:07:30,000
就原生图形界面的

1337
01:07:30,000 --> 01:07:31,000
这么一个编辑器

1338
01:07:31,000 --> 01:07:32,000
就被最早的什么

1339
01:07:32,000 --> 01:07:35,000
像什么 BB Edit 这种东西

1340
01:07:35,000 --> 01:07:38,000
对 因为一方面也是

1341
01:07:38,000 --> 01:07:39,000
他们

1342
01:07:39,000 --> 01:07:40,000
有图形界面

1343
01:07:40,000 --> 01:07:41,000
另一方面也是

1344
01:07:41,000 --> 01:07:43,000
他们没有那么多奇奇怪怪的

1345
01:07:43,000 --> 01:07:44,000
比如说

1346
01:07:44,000 --> 01:07:46,000
其实刚才我们说到

1347
01:07:46,000 --> 01:07:48,000
Ctrl 加 N 是向下

1348
01:07:48,000 --> 01:07:50,000
Ctrl 加 P 是向前

1349
01:07:50,000 --> 01:07:51,000
向上

1350
01:07:51,000 --> 01:07:53,000
Ctrl F Ctrl B 这些

1351
01:07:53,000 --> 01:07:56,000
也是不那么符合直觉的

1352
01:07:56,000 --> 01:07:57,000
就如果你去

1353
01:07:57,000 --> 01:08:00,000
如果你习惯了在 Word 里面

1354
01:08:00,000 --> 01:08:03,000
按方向键来改变光标位置的话

1355
01:08:03,000 --> 01:08:05,000
方向键是很符合直觉的话

1356
01:08:05,000 --> 01:08:06,000
对 方向键

1357
01:08:06,000 --> 01:08:08,000
画了箭头

1358
01:08:08,000 --> 01:08:08,000
你按下去

1359
01:08:08,000 --> 01:08:09,000
然后光标

1360
01:08:09,000 --> 01:08:11,000
这是几乎不言自明的一个

1361
01:08:11,000 --> 01:08:14,000
而且它那个箭头的摆

1362
01:08:14,000 --> 01:08:16,000
那几个键的方向和摆布

1363
01:08:16,000 --> 01:08:19,000
都是一眼就能看懂的

1364
01:08:19,000 --> 01:08:22,000
对 虽然在早期键盘上

1365
01:08:22,000 --> 01:08:23,000
四个箭头的排布

1366
01:08:23,000 --> 01:08:25,000
也是有过一番变革

1367
01:08:25,000 --> 01:08:26,000
就不是

1368
01:08:26,000 --> 01:08:28,000
其实如果要追溯

1369
01:08:28,000 --> 01:08:29,000
计算机键盘的发展史的话

1370
01:08:29,000 --> 01:08:32,000
键盘没有方向键

1371
01:08:32,000 --> 01:08:33,000
就早期的键盘

1372
01:08:33,000 --> 01:08:36,000
对 比如说中华学习机的方向键

1373
01:08:36,000 --> 01:08:39,000
中华学习机的方向键

1374
01:08:39,000 --> 01:08:42,000
是一个巨大的正方形

1375
01:08:42,000 --> 01:08:45,000
然后沿对角线被切成了四块

1376
01:08:45,000 --> 01:08:46,000
What?

1377
01:08:47,000 --> 01:08:47,000
Yes

1378
01:08:47,000 --> 01:08:49,000
就是一个巨大的正方形

1379
01:08:49,000 --> 01:08:50,000
所以你看

1380
01:08:50,000 --> 01:08:52,000
对角线被切成了四块

1381
01:08:52,000 --> 01:08:54,000
然后你有四个三角

1382
01:08:54,000 --> 01:08:54,000
对

1383
01:08:54,000 --> 01:08:56,000
然后朝上的那一个三角

1384
01:08:56,000 --> 01:08:58,000
上面画了一个

1385
01:08:58,000 --> 01:09:00,000
朝上的一个倒三角

1386
01:09:00,000 --> 01:09:02,000
上面画了一个朝上的正三角

1387
01:09:02,000 --> 01:09:07,000
这个方向键

1388
01:09:07,000 --> 01:09:08,000
其实就有点像什么

1389
01:09:08,000 --> 01:09:08,000
Xbox

1390
01:09:09,000 --> 01:09:10,000
Xbox 手柄那种感觉

1391
01:09:10,000 --> 01:09:11,000
明白了

1392
01:09:11,000 --> 01:09:11,000
对

1393
01:09:11,000 --> 01:09:14,000
甚至早期也有键盘是比如说

1394
01:09:14,000 --> 01:09:15,000
只有左右方向

1395
01:09:15,000 --> 01:09:17,000
只有左右键头

1396
01:09:17,000 --> 01:09:17,000
没有上下键头

1397
01:09:17,000 --> 01:09:18,000
那怎么上下呢

1398
01:09:18,000 --> 01:09:19,000
或者是

1399
01:09:19,000 --> 01:09:20,000
就没有上下路呢

1400
01:09:20,000 --> 01:09:21,000
OK

1401
01:09:21,000 --> 01:09:24,000
起码我们知道 Vim 的

1402
01:09:24,000 --> 01:09:25,000
就是 Vim 作者

1403
01:09:25,000 --> 01:09:26,000
VI 作者

1404
01:09:26,000 --> 01:09:28,000
Vim 作者

1405
01:09:28,000 --> 01:09:29,000
VI 的作者

1406
01:09:29,000 --> 01:09:30,000
VI 作者那台键

1407
01:09:30,000 --> 01:09:34,000
那台键盘是没有方向键的

1408
01:09:34,000 --> 01:09:35,000
然后它在 HJKL 上面

1409
01:09:35,000 --> 01:09:37,000
那四个字母上面

1410
01:09:37,000 --> 01:09:38,000
是有四个方向键

1411
01:09:38,000 --> 01:09:40,000
分别是那四个方向

1412
01:09:40,000 --> 01:09:43,000
对

1413
01:09:43,000 --> 01:09:44,000
对

1414
01:09:44,000 --> 01:09:45,000
Billy Joy 用的那台电脑

1415
01:09:45,000 --> 01:09:45,000
其实在

1416
01:09:45,000 --> 01:09:46,000
如果你搜

1417
01:09:46,000 --> 01:09:48,000
你在网上搜一下 VI Keyboard

1418
01:09:48,000 --> 01:09:49,000
然后搜 Billy Joy

1419
01:09:49,000 --> 01:09:50,000
Bill Joy

1420
01:09:50,000 --> 01:09:51,000
sorry

1421
01:09:51,000 --> 01:09:51,000
Bill Joy

1422
01:09:51,000 --> 01:09:53,000
就可以找到它

1423
01:09:53,000 --> 01:09:55,000
最开始用的那台电脑的键盘

1424
01:09:55,000 --> 01:09:56,000
你会觉得

1425
01:09:56,000 --> 01:09:58,000
在这个电脑上

1426
01:09:58,000 --> 01:10:00,000
在这个键盘上开发出 VI

1427
01:10:00,000 --> 01:10:01,000
其实是非常合理的

1428
01:10:01,000 --> 01:10:04,000
所以唯一你觉得

1429
01:10:04,000 --> 01:10:05,000
那个 VI 的键

1430
01:10:05,000 --> 01:10:07,000
就排布不合理

1431
01:10:07,000 --> 01:10:08,000
那是因为你的键盘不对

1432
01:10:08,000 --> 01:10:09,000
对

1433
01:10:09,000 --> 01:10:09,000
没错

1434
01:10:09,000 --> 01:10:11,000
这是为什么要买一台

1435
01:10:11,000 --> 01:10:12,000
买一支 HPG Keyboard

1436
01:10:12,000 --> 01:10:13,000
可以忘掉

1437
01:10:13,000 --> 01:10:14,000
忘掉键

1438
01:10:14,000 --> 01:10:16,000
那个什么键上的音的那些东西

1439
01:10:16,000 --> 01:10:17,000
然后自己改吧

1440
01:10:17,000 --> 01:10:18,000
对

1441
01:10:18,000 --> 01:10:19,000
在推特上有一个

1442
01:10:19,000 --> 01:10:21,000
有一位听众也反馈说

1443
01:10:21,000 --> 01:10:23,000
听了我们的节目之后

1444
01:10:23,000 --> 01:10:24,000
终于买了这个

1445
01:10:24,000 --> 01:10:27,000
心里长草很久的 HPG Keyboard

1446
01:10:27,000 --> 01:10:29,000
然后用得很爽

1447
01:10:29,000 --> 01:10:31,000
但是被室友投诉说太吵了

1448
01:10:31,000 --> 01:10:34,000
这个副作用

1449
01:10:34,000 --> 01:10:36,000
一概不承担后果

1450
01:10:36,000 --> 01:10:37,000
没错

1451
01:10:37,000 --> 01:10:38,000
没事

1452
01:10:38,000 --> 01:10:38,000
没事

1453
01:10:38,000 --> 01:10:39,000
又扯远了

1454
01:10:39,000 --> 01:10:41,000
讲回基于图形界面的编辑器

1455
01:10:41,000 --> 01:10:44,000
最近比较火的几个是

1456
01:10:44,000 --> 01:10:45,000
Sublime

1457
01:10:45,000 --> 01:10:46,000
Sublime 是一个比较火的

1458
01:10:46,000 --> 01:10:47,000
然后它是一个

1459
01:10:47,000 --> 01:10:49,000
它其实是一个跨平台的编辑器

1460
01:10:49,000 --> 01:10:53,000
然后我没有用过它在其他系统上的怎么样

1461
01:10:53,000 --> 01:10:54,000
但我在 Mac 上面

1462
01:10:54,000 --> 01:10:57,000
我还真没感觉到它是一个跨平台的

1463
01:10:57,000 --> 01:10:59,000
它做的原生还挺好的

1464
01:10:59,000 --> 01:11:00,000
对

1465
01:11:00,000 --> 01:11:02,000
其实它的跨平台是

1466
01:11:02,000 --> 01:11:06,000
不像 Eclipse 或者是其他什么东西

1467
01:11:06,000 --> 01:11:06,000
它的快捷键

1468
01:11:06,000 --> 01:11:08,000
就是在 Eclipse 里面

1469
01:11:08,000 --> 01:11:08,000
快捷键是一个快捷键的

1470
01:11:08,000 --> 01:11:09,000
在各个平台之下

1471
01:11:09,000 --> 01:11:10,000
基本上是一致的

1472
01:11:10,000 --> 01:11:11,000
在 Sublime 里面

1473
01:11:12,000 --> 01:11:12,000
对

1474
01:11:12,000 --> 01:11:13,000
在 Sublime 里面

1475
01:11:13,000 --> 01:11:16,000
很多快捷键在不同的平台之下

1476
01:11:16,000 --> 01:11:17,000
是不一样的

1477
01:11:17,000 --> 01:11:18,000
Windows 和 Linux 比较像

1478
01:11:18,000 --> 01:11:19,000
但是 Mac 下面

1479
01:11:19,000 --> 01:11:21,000
有那 Command 键

1480
01:11:22,000 --> 01:11:22,000
对

1481
01:11:22,000 --> 01:11:26,000
就是快捷键其实差蛮多的

1482
01:11:26,000 --> 01:11:27,000
我最开始用 Sublime 是在 Windows 上面

1483
01:11:27,000 --> 01:11:29,000
而且我觉得它的那个

1484
01:11:29,000 --> 01:11:30,000
就是它的那个

1485
01:11:30,000 --> 01:11:31,000
叫什么

1486
01:11:31,000 --> 01:11:33,000
图形界面的表达的元素

1487
01:11:33,000 --> 01:11:34,000
我觉得很

1488
01:11:34,000 --> 01:11:35,000
就是还挺原生的

1489
01:11:35,000 --> 01:11:36,000
但是虽然说

1490
01:11:36,000 --> 01:11:37,000
它的风格和

1491
01:11:37,000 --> 01:11:38,000
和这个

1492
01:11:38,000 --> 01:11:39,000
Mac 本

1493
01:11:39,000 --> 01:11:40,000
OS X 本身是不一样

1494
01:11:40,000 --> 01:11:41,000
但是我觉得

1495
01:11:41,000 --> 01:11:43,000
就没有太违和感

1496
01:11:43,000 --> 01:11:45,000
这一点跟后面要讲到的

1497
01:11:45,000 --> 01:11:46,000
那个什么 Eclipse

1498
01:11:46,000 --> 01:11:48,000
那支流是差很大的

1499
01:11:48,000 --> 01:11:49,000
对 没错

1500
01:11:49,000 --> 01:11:51,000
而且 Sublime

1501
01:11:51,000 --> 01:11:55,000
如果各位还在苦于找不到一款

1502
01:11:55,000 --> 01:11:57,000
或者说各位刚学编程

1503
01:11:57,000 --> 01:11:59,000
现在还正要寻找一款

1504
01:11:59,000 --> 01:12:02,000
适合初学者的编辑器的话

1505
01:12:02,000 --> 01:12:03,000
我觉得 Sublime Text

1506
01:12:03,000 --> 01:12:04,000
其实是非常好的

1507
01:12:04,000 --> 01:12:06,000
虽然它要钱

1508
01:12:06,000 --> 01:12:07,000
对 它不是一个免费的

1509
01:12:07,000 --> 01:12:08,000
它是

1510
01:12:08,000 --> 01:12:08,000
对

1511
01:12:08,000 --> 01:12:09,000
但你不

1512
01:12:09,000 --> 01:12:10,000
但你不交钱的话

1513
01:12:10,000 --> 01:12:10,000
它也只是

1514
01:12:10,000 --> 01:12:12,000
提时不时的跳出来一个

1515
01:12:12,000 --> 01:12:13,000
不一样

1516
01:12:13,000 --> 01:12:14,000
请你买吧

1517
01:12:14,000 --> 01:12:15,000
然后你按一下 ENC

1518
01:12:15,000 --> 01:12:16,000
它就消失了

1519
01:12:16,000 --> 01:12:17,000
对 功能上没有任何阉割

1520
01:12:17,000 --> 01:12:19,000
时间上也没有限制

1521
01:12:19,000 --> 01:12:20,000
唯一就是让你会有点

1522
01:12:20,000 --> 01:12:21,000
小不爽

1523
01:12:21,000 --> 01:12:24,000
对 是一个非常非常友善的编辑器

1524
01:12:24,000 --> 01:12:25,000
它还有什么新版本了

1525
01:12:25,000 --> 01:12:27,000
对吧 现在是有三了

1526
01:12:27,000 --> 01:12:28,000
对 Sublime Text

1527
01:12:28,000 --> 01:12:29,000
现在处于二

1528
01:12:29,000 --> 01:12:30,000
就像 Python 一样

1529
01:12:30,000 --> 01:12:32,000
处于二和三的割裂状态

1530
01:12:32,000 --> 01:12:33,000
它怎么一回事

1531
01:12:33,000 --> 01:12:34,000
就是说新版本还没有

1532
01:12:34,000 --> 01:12:35,000
就不够好吗

1533
01:12:35,000 --> 01:12:36,000
还是

1534
01:12:36,000 --> 01:12:38,000
Sublime Text 2

1535
01:12:38,000 --> 01:12:41,000
算是第一次发明的轮子

1536
01:12:41,000 --> 01:12:44,000
然后作者觉得还是不够好

1537
01:12:44,000 --> 01:12:46,000
所以要重启路道再写一遍

1538
01:12:46,000 --> 01:12:48,000
那 Sublime 1 是长什么样子

1539
01:12:48,000 --> 01:12:49,000
这我还真不知道

1540
01:12:49,000 --> 01:12:51,000
我也是从 2 开始

1541
01:12:51,000 --> 01:12:52,000
对 我没有见过 1 长什么样

1542
01:12:52,000 --> 01:12:54,000
估计不是太好应该

1543
01:12:54,000 --> 01:12:54,000
对

1544
01:12:54,000 --> 01:12:57,000
另外一个比较老牌的编辑器

1545
01:12:57,000 --> 01:12:58,000
可能很多用户

1546
01:12:58,000 --> 01:13:00,000
对 Mac 用户可能都用过

1547
01:13:00,000 --> 01:13:01,000
叫做 TextMate

1548
01:13:02,000 --> 01:13:03,000
对 我也用过

1549
01:13:03,000 --> 01:13:06,000
但时间不是很长

1550
01:13:06,000 --> 01:13:07,000
对 它最早的时候

1551
01:13:07,000 --> 01:13:08,000
就 TextMate

1552
01:13:08,000 --> 01:13:09,000
1 的时候

1553
01:13:09,000 --> 01:13:10,000
它也是一个付费软件

1554
01:13:10,000 --> 01:13:11,000
而且价格还不便宜

1555
01:13:11,000 --> 01:13:13,000
我记得

1556
01:13:13,000 --> 01:13:15,000
不是 80 多刀

1557
01:13:15,000 --> 01:13:16,000
还是多少钱

1558
01:13:16,000 --> 01:13:18,000
反正至少是多于

1559
01:13:18,000 --> 01:13:19,000
好像 60 欧左右应该是

1560
01:13:19,000 --> 01:13:20,000
对

1561
01:13:20,000 --> 01:13:21,000
你买了吗

1562
01:13:21,000 --> 01:13:22,000
没有买

1563
01:13:22,000 --> 01:13:23,000
我也没有

1564
01:13:23,000 --> 01:13:25,000
然后后来作者

1565
01:13:25,000 --> 01:13:27,000
也是因为卖编辑器赚的

1566
01:13:27,000 --> 01:13:29,000
听说是赚翻了

1567
01:13:29,000 --> 01:13:30,000
然后也就没有什么动力

1568
01:13:30,000 --> 01:13:31,000
再写二版

1569
01:13:31,000 --> 01:13:32,000
后来他就干脆

1570
01:13:32,000 --> 01:13:33,000
把二版做了一半的

1571
01:13:33,000 --> 01:13:34,000
二版的代码

1572
01:13:34,000 --> 01:13:36,000
就是开源了

1573
01:13:36,000 --> 01:13:38,000
然后现在是一个社区维护的

1574
01:13:38,000 --> 01:13:39,000
一个编辑器

1575
01:13:39,000 --> 01:13:41,000
现在是出了二的

1576
01:13:41,000 --> 01:13:43,000
Beta 6 还是 7

1577
01:13:43,000 --> 01:13:43,000
应该是

1578
01:13:43,000 --> 01:13:45,000
就快要正式发布了

1579
01:13:45,000 --> 01:13:47,000
然后现在是一个变成一个免费

1580
01:13:47,000 --> 01:13:49,000
并且开源的一个编辑器

1581
01:13:49,000 --> 01:13:51,000
所以如果你是 Mac 用户

1582
01:13:51,000 --> 01:13:52,000
然后你也想试一下

1583
01:13:52,000 --> 01:13:55,000
经典传统的编辑器的话

1584
01:13:55,000 --> 01:13:56,000
你可以试试

1585
01:13:56,000 --> 01:14:00,000
因为有很多所谓的资深 Mac 开发者

1586
01:14:00,000 --> 01:14:04,000
也是对什么 TextMate 的死忠

1587
01:14:04,000 --> 01:14:05,000
对

1588
01:14:05,000 --> 01:14:08,000
甚至你去找一些比较早的

1589
01:14:08,000 --> 01:14:11,000
早期的 Rails 的那个 screencast

1590
01:14:11,000 --> 01:14:12,000
对

1591
01:14:12,000 --> 01:14:14,000
里面几乎每一个 Rails 的开发者

1592
01:14:14,000 --> 01:14:15,000
都在用 TextMate

1593
01:14:15,000 --> 01:14:17,000
好像 TextMate 活起来

1594
01:14:17,000 --> 01:14:19,000
也就是因为那个 DHH

1595
01:14:19,000 --> 01:14:20,000
对吧

1596
01:14:20,000 --> 01:14:23,000
Devi Hampson

1597
01:14:23,000 --> 01:14:23,000
对

1598
01:14:23,000 --> 01:14:25,000
我只记得他有对的

1599
01:14:25,000 --> 01:14:28,000
就是 Ruby on Rails 的作者

1600
01:14:28,000 --> 01:14:31,000
因为他一直用 TextMate

1601
01:14:31,000 --> 01:14:32,000
然后导致了

1602
01:14:32,000 --> 01:14:35,000
他做了很多这个叫什么

1603
01:14:35,000 --> 01:14:35,000
那个

1604
01:14:35,000 --> 01:14:36,000
那个

1605
01:14:36,000 --> 01:14:38,000
就 Rails 的

1606
01:14:38,000 --> 01:14:38,000
那个

1607
01:14:38,000 --> 01:14:38,000
那个

1608
01:14:38,000 --> 01:14:39,000
Screencast

1609
01:14:39,000 --> 01:14:40,000
就是视频的节目

1610
01:14:40,000 --> 01:14:42,000
然后里面都都当时出来的时候

1611
01:14:42,000 --> 01:14:45,000
大家对我其实也是因为那个被惊艳到

1612
01:14:45,000 --> 01:14:48,000
就当时他用了一个配色吧

1613
01:14:48,000 --> 01:14:49,000
其实 TextMate 自带的一个配色

1614
01:14:49,000 --> 01:14:50,000
好像是这样

1615
01:14:50,000 --> 01:14:52,000
然后显示那个 Ruby 的代码

1616
01:14:52,000 --> 01:14:56,000
你知道 Ruby 的代码的本来也比较好看嘛

1617
01:14:56,000 --> 01:14:58,000
然后再加上那个漂亮的语法高亮

1618
01:14:58,000 --> 01:15:00,000
再加上一个长得很漂亮的编辑器

1619
01:15:00,000 --> 01:15:01,000
大家都觉得哇

1620
01:15:01,000 --> 01:15:02,000
这个好漂亮什么

1621
01:15:02,000 --> 01:15:03,000
赶快去买

1622
01:15:03,000 --> 01:15:04,000
然后也就 TextMate

1623
01:15:04,000 --> 01:15:07,000
就是好像应该在我印象中也是从那里活起来的

1624
01:15:07,000 --> 01:15:08,000
没错对

1625
01:15:08,000 --> 01:15:12,000
Ruby 就是这样吸引了一大群外贸协会的这个程序员

1626
01:15:12,000 --> 01:15:14,000
完了完了

1627
01:15:14,000 --> 01:15:15,000
我也是外贸协会的

1628
01:15:15,000 --> 01:15:15,000
好惨

1629
01:15:15,000 --> 01:15:19,000
我觉得其实多少多少有点是有点这样

1630
01:15:19,000 --> 01:15:20,000
对

1631
01:15:20,000 --> 01:15:22,000
这个故事说明一个什么道理啊

1632
01:15:22,000 --> 01:15:23,000
就是哪怕你是做一个

1633
01:15:23,000 --> 01:15:26,000
这甚至不是一个科技产品

1634
01:15:26,000 --> 01:15:28,000
你是一个纯粹的工具

1635
01:15:28,000 --> 01:15:32,000
你也是要考虑它的这个所谓的 Design

1636
01:15:32,000 --> 01:15:33,000
这个就外观怎么样

1637
01:15:33,000 --> 01:15:34,000
如果你外观不好看

1638
01:15:34,000 --> 01:15:35,000
你做的再好

1639
01:15:35,000 --> 01:15:36,000
可能在推广

1640
01:15:36,000 --> 01:15:37,000
或者是 Marketing 的时候

1641
01:15:37,000 --> 01:15:38,000
都没办法

1642
01:15:38,000 --> 01:15:39,000
就没有会有很大的阻力吧

1643
01:15:39,000 --> 01:15:40,000
我觉得

1644
01:15:40,000 --> 01:15:41,000
对

1645
01:15:41,000 --> 01:15:43,000
我觉得对说到这件事情

1646
01:15:43,000 --> 01:15:47,000
我就想起来之所以我很讨厌 C++

1647
01:15:47,000 --> 01:15:48,000
嗯

1648
01:15:48,000 --> 01:15:51,000
甚至是一种非理性的讨厌 C++

1649
01:15:51,000 --> 01:15:56,000
部分原因也是因为在刚刚接触 Visual Basic

1650
01:15:56,000 --> 01:15:59,000
就是微软的 Visual Basic C++的时候

1651
01:15:59,000 --> 01:16:01,000
不是 Visual Basic C++

1652
01:16:01,000 --> 01:16:03,000
Visual Studio C++

1653
01:16:03,000 --> 01:16:04,000
就叫 Visual C++吧

1654
01:16:04,000 --> 01:16:05,000
应该那个时候

1655
01:16:05,000 --> 01:16:07,000
VC 对好像应该是

1656
01:16:07,000 --> 01:16:07,000
对

1657
01:16:07,000 --> 01:16:08,000
Visual C++

1658
01:16:08,000 --> 01:16:09,000
但是它在 Visual C++6.0 的时候

1659
01:16:09,000 --> 01:16:13,000
它的那个用的内置字体是 Fixed SOS

1660
01:16:13,000 --> 01:16:14,000
Fixed System

1661
01:16:14,000 --> 01:16:18,000
我觉得我靠怎么一个写程序的界面

1662
01:16:18,000 --> 01:16:19,000
可以用这么丑字体

1663
01:16:19,000 --> 01:16:21,000
你觉得那个 Fixed System 丑吗

1664
01:16:21,000 --> 01:16:24,000
我当时觉得相当丑

1665
01:16:24,000 --> 01:16:27,000
对我这里要自曝一下黑历史

1666
01:16:27,000 --> 01:16:29,000
当时我还觉得我觉得那个还就是

1667
01:16:29,000 --> 01:16:30,000
啊

1668
01:16:30,000 --> 01:16:33,000
因为当时在 windows 上面可选的等宽字体有限嘛

1669
01:16:33,000 --> 01:16:36,000
也不像现在说大家都很都可以选

1670
01:16:36,000 --> 01:16:37,000
首先那个 windows 本来那个字体线

1671
01:16:37,000 --> 01:16:37,000
好

1672
01:16:37,000 --> 01:16:38,000
现在就比较糟糕

1673
01:16:38,000 --> 01:16:39,000
而且就是非

1674
01:16:39,000 --> 01:16:41,000
那个时候还肯定是非 written 的屏幕

1675
01:16:41,000 --> 01:16:43,000
什么 640 乘以 480 的分辨率

1676
01:16:43,000 --> 01:16:45,000
就基本上都是那种所谓像素字体

1677
01:16:45,000 --> 01:16:48,000
然后在当时问的上面

1678
01:16:48,000 --> 01:16:50,000
仅有的那些字体里面

1679
01:16:50,000 --> 01:16:51,000
我觉得 fake system

1680
01:16:51,000 --> 01:16:54,000
算是一个还能看不错的了吧

1681
01:16:54,000 --> 01:16:56,000
不然你还要为什么选 Corea 吗

1682
01:16:56,000 --> 01:16:57,000
Corea

1683
01:16:57,000 --> 01:16:58,000
那不就更丑

1684
01:16:58,000 --> 01:17:00,000
我觉得 Corea 很漂亮

1685
01:17:00,000 --> 01:17:01,000
那个时候

1686
01:17:01,000 --> 01:17:03,000
Corea 的那个 0 和 0 都是分不清楚的

1687
01:17:03,000 --> 01:17:05,000
我是用

1688
01:17:05,000 --> 01:17:10,000
我曾经用过 Georgia 做变成字体

1689
01:17:10,000 --> 01:17:11,000
为了好看

1690
01:17:11,000 --> 01:17:11,000
对

1691
01:17:11,000 --> 01:17:14,000
为了好看选择 Georgia 做变成字体

1692
01:17:14,000 --> 01:17:15,000
OK

1693
01:17:15,000 --> 01:17:15,000
哇

1694
01:17:15,000 --> 01:17:17,000
你说还是很早以前就践行过

1695
01:17:17,000 --> 01:17:18,000
非等宽字体了

1696
01:17:18,000 --> 01:17:20,000
这个还是挺先锋的

1697
01:17:20,000 --> 01:17:23,000
年少轻狂

1698
01:17:23,000 --> 01:17:24,000
扯远了

1699
01:17:24,000 --> 01:17:26,000
我也年轻过

1700
01:17:26,000 --> 01:17:28,000
对

1701
01:17:28,000 --> 01:17:28,000
所以

1702
01:17:28,000 --> 01:17:30,000
还跟他讲哪里

1703
01:17:30,000 --> 01:17:32,000
继续说吧

1704
01:17:32,000 --> 01:17:33,000
反正扯远扯远

1705
01:17:33,000 --> 01:17:34,000
fixed system

1706
01:17:34,000 --> 01:17:35,000
一个优点是

1707
01:17:35,000 --> 01:17:37,000
他和送体

1708
01:17:37,000 --> 01:17:39,000
一起显示的时候

1709
01:17:39,000 --> 01:17:40,000
一个 2 比 1 的关系

1710
01:17:40,000 --> 01:17:42,000
对正好是 2 比 1 的关系

1711
01:17:42,000 --> 01:17:43,000
然后我看这个编辑信息

1712
01:17:43,000 --> 01:17:45,000
我靠英文是 fixed system

1713
01:17:45,000 --> 01:17:46,000
然后中文动不动出来什么

1714
01:17:46,000 --> 01:17:48,000
烫烫烫烫烫

1715
01:17:48,000 --> 01:17:51,000
我讲起我为什么喜欢

1716
01:17:51,000 --> 01:17:52,000
那个 fixed system

1717
01:17:52,000 --> 01:17:54,000
这个字体了

1718
01:17:54,000 --> 01:17:54,000
当时

1719
01:17:54,000 --> 01:17:57,000
因为一些莫名其妙的原因

1720
01:17:57,000 --> 01:17:58,000
我在一个

1721
01:17:58,000 --> 01:17:59,000
做

1722
01:17:59,000 --> 01:18:00,000
就是专注于做

1723
01:18:00,000 --> 01:18:02,000
嵌入式系统的论坛上

1724
01:18:02,000 --> 01:18:03,000
应该叫 C 51 吧

1725
01:18:03,000 --> 01:18:04,000
我记得这个 C 51 论坛

1726
01:18:04,000 --> 01:18:05,000
啊

1727
01:18:05,000 --> 01:18:05,000
51 芯片

1728
01:18:05,000 --> 01:18:06,000
对对对

1729
01:18:06,000 --> 01:18:07,000
51 单片机

1730
01:18:07,000 --> 01:18:08,000
你也上过

1731
01:18:08,000 --> 01:18:09,000
当时我让你看

1732
01:18:09,000 --> 01:18:10,000
我没上过这个

1733
01:18:10,000 --> 01:18:12,000
但是你一说 51 呢

1734
01:18:12,000 --> 01:18:13,000
又是芯片

1735
01:18:13,000 --> 01:18:14,000
只能是 51 单片机

1736
01:18:14,000 --> 01:18:15,000
对那个应该是在

1737
01:18:15,000 --> 01:18:16,000
我想想

1738
01:18:16,000 --> 01:18:17,000
应该是 98

1739
01:18:17,000 --> 01:18:18,000
或者 99 年的时候

1740
01:18:18,000 --> 01:18:20,000
然后当时我去

1741
01:18:20,000 --> 01:18:21,000
那个 CVC 面上

1742
01:18:21,000 --> 01:18:22,000
看到有一个人

1743
01:18:22,000 --> 01:18:23,000
贴了一个

1744
01:18:23,000 --> 01:18:24,000
现在

1745
01:18:24,000 --> 01:18:25,000
我们回过头去看

1746
01:18:25,000 --> 01:18:25,000
应该是叫一个

1747
01:18:25,000 --> 01:18:27,000
screencast 的一个东西

1748
01:18:27,000 --> 01:18:28,000
但是现在 screencast

1749
01:18:28,000 --> 01:18:29,000
就是一个录制屏幕

1750
01:18:29,000 --> 01:18:30,000
用一个视频的方式来做

1751
01:18:30,000 --> 01:18:32,000
他那也是 screencast

1752
01:18:32,000 --> 01:18:33,000
不过他那个时间方式

1753
01:18:33,000 --> 01:18:34,000
非常奇怪

1754
01:18:34,000 --> 01:18:35,000
他也是

1755
01:18:35,000 --> 01:18:36,000
不是录制屏幕上

1756
01:18:36,000 --> 01:18:37,000
一个人在讲

1757
01:18:37,000 --> 01:18:37,000
啊

1758
01:18:37,000 --> 01:18:42,000
然后那个他他那个软件不是我们现在一个视频文件

1759
01:18:42,000 --> 01:18:43,000
他是一个特殊的一个

1760
01:18:43,000 --> 01:18:46,000
可是感觉就是一一针一针放这个屏幕的截图

1761
01:18:46,000 --> 01:18:46,000
这种感觉

1762
01:18:46,000 --> 01:18:48,000
而且压缩的还蛮好的

1763
01:18:48,000 --> 01:18:49,000
啊

1764
01:18:49,000 --> 01:18:50,000
另外

1765
01:18:50,000 --> 01:18:54,000
然后就是有一个人在在在展示他怎么用一个那个什么

1766
01:18:54,000 --> 01:18:56,000
我忘了一个是波兰还是什么

1767
01:18:56,000 --> 01:18:57,000
一个开发器编写

1768
01:18:57,000 --> 01:19:01,000
写开发这个用 C 语言写这个签误式代码

1769
01:19:01,000 --> 01:19:05,000
然后他当时用的那个字体的编那个编辑的字体就是那个 fix system

1770
01:19:05,000 --> 01:19:06,000
coder

1771
01:19:06,000 --> 01:19:11,000
我会不会应该不是应该没有那么那个是后来才有的应该很很老的一个编辑

1772
01:19:11,000 --> 01:19:12,000
我也现在一家想不起

1773
01:19:12,000 --> 01:19:13,000
但 anyway

1774
01:19:13,000 --> 01:19:14,000
这个不是重点

1775
01:19:14,000 --> 01:19:16,000
重点是那个人的声音超好听

1776
01:19:16,000 --> 01:19:19,000
然后那因为那个时候我完全不懂编程

1777
01:19:19,000 --> 01:19:24,000
我那个时候还在就是就就就因为还没有上那个编程课

1778
01:19:24,000 --> 01:19:25,000
也不知道什么

1779
01:19:25,000 --> 01:19:27,000
就是只是看到好奇有这么一个东西

1780
01:19:27,000 --> 01:19:28,000
就觉得挺有意思的

1781
01:19:28,000 --> 01:19:28,000
就是我对

1782
01:19:28,000 --> 01:19:33,000
而且我对签我到现在为止都对签入式开发都一点门路都没有摸着的

1783
01:19:33,000 --> 01:19:34,000
但是就是因为看了边界那个人的声音

1784
01:19:34,000 --> 01:19:36,000
好像我把那个视频反过来看了 50 遍

1785
01:19:38,000 --> 01:19:39,000
我妈呀

1786
01:19:39,000 --> 01:19:40,000
你不仅是外表学会

1787
01:19:40,000 --> 01:19:41,000
你还是声音学会

1788
01:19:41,000 --> 01:19:42,000
声控声控

1789
01:19:42,000 --> 01:19:43,000
不好意思

1790
01:19:43,000 --> 01:19:47,000
而且而且他那个我怀疑那个人用的是一款机械键盘

1791
01:19:48,000 --> 01:19:51,000
就是他他在说他不是选择用机器

1792
01:19:51,000 --> 01:19:53,000
而是那个时代只有机器

1793
01:19:53,000 --> 01:19:55,000
有可能就是他在解说的过程

1794
01:19:55,000 --> 01:19:58,000
他会边解说边敲那个那个边写代码

1795
01:19:58,000 --> 01:20:02,000
然后那个声音咔咔作响又很清脆又超好听

1796
01:20:02,000 --> 01:20:03,000
然后那个人的声线又很好

1797
01:20:03,000 --> 01:20:04,000
就是

1798
01:20:04,000 --> 01:20:07,000
其实后来我想了其实也不一定是那个人声音

1799
01:20:07,000 --> 01:20:11,000
就是刚好可能他他那个某一个频段刚好对我来说比较有吸引力

1800
01:20:11,000 --> 01:20:13,000
就听着好爽

1801
01:20:13,000 --> 01:20:14,000
然后是女的吗

1802
01:20:14,000 --> 01:20:19,000
男的一个一个一个比较一个浑厚的男生的声音

1803
01:20:19,000 --> 01:20:20,000
OK

1804
01:20:20,000 --> 01:20:21,000
我就哇这个声音太好听了

1805
01:20:21,000 --> 01:20:24,000
我每次反复听了 50 遍

1806
01:20:24,000 --> 01:20:25,000
我现在找不到那个文件了

1807
01:20:25,000 --> 01:20:28,000
我能找出来都可以把它录下来给你们听一下

1808
01:20:28,000 --> 01:20:30,000
但是非常抱歉

1809
01:20:30,000 --> 01:20:31,000
系统天一过很多年了

1810
01:20:31,000 --> 01:20:32,000
已经找不到那个

1811
01:20:32,000 --> 01:20:33,000
不知道不知道有没有是 512 电片机的那个电源

1812
01:20:33,000 --> 01:20:34,000
不知道不知道有没有是 512 电片机的那个电源

1813
01:20:34,000 --> 01:20:39,000
我希望我们的资深用户听了我们的节目之后可以找到这篇视频

1814
01:20:39,000 --> 01:20:40,000
我希望他找到一个问题

1815
01:20:40,000 --> 01:20:41,000
我也不一定能放得了

1816
01:20:41,000 --> 01:20:46,000
他那个是一个可应该是一个可以执行的一个东西

1817
01:20:46,000 --> 01:20:50,000
就是他自己你小小年纪对于信息安全这么没有

1818
01:20:50,000 --> 01:20:55,000
不不就是他不是就他是这个也就是他那个和说温度上很多这种东西

1819
01:20:55,000 --> 01:20:58,000
因为没有这个通用的播放器嘛

1820
01:20:58,000 --> 01:21:02,000
很多那种特殊的媒体格式都是自带一个播放器来了

1821
01:21:03,000 --> 01:21:04,000
就打包成一个

1822
01:21:04,000 --> 01:21:04,000
耶

1823
01:21:04,000 --> 01:21:05,000
那种东西

1824
01:21:05,000 --> 01:21:05,000
那种东西

1825
01:21:05,000 --> 01:21:06,000
那种东西

1826
01:21:06,000 --> 01:21:07,000
那个时候也不懂安全什么的

1827
01:21:07,000 --> 01:21:11,000
那种那个时候真的是很傻很天真

1828
01:21:11,000 --> 01:21:12,000
基本上为所欲为啊

1829
01:21:12,000 --> 01:21:13,000
如果现在也现在也是啊

1830
01:21:13,000 --> 01:21:14,000
温度是上面

1831
01:21:14,000 --> 01:21:14,000
温度是上面

1832
01:21:14,000 --> 01:21:14,000
温度是上面

1833
01:21:14,000 --> 01:21:15,000
温度是上面

1834
01:21:15,000 --> 01:21:16,000
可能还好

1835
01:21:16,000 --> 01:21:16,000
好吧

1836
01:21:16,000 --> 01:21:18,000
安全上大家也是挺注重

1837
01:21:18,000 --> 01:21:21,000
但是相信我就那个时候应该是九温度是 95 吧

1838
01:21:21,000 --> 01:21:24,000
对我没记错的话肯定是没有这个概念的

1839
01:21:24,000 --> 01:21:24,000
对

1840
01:21:24,000 --> 01:21:25,000
对

1841
01:21:25,000 --> 01:21:25,000
对

1842
01:21:25,000 --> 01:21:25,000
对

1843
01:21:25,000 --> 01:21:25,000
对

1844
01:21:25,000 --> 01:21:26,000
对

1845
01:21:26,000 --> 01:21:26,000
对

1846
01:21:26,000 --> 01:21:26,000
对

1847
01:21:26,000 --> 01:21:27,000
对

1848
01:21:27,000 --> 01:21:27,000
讲哪里

1849
01:21:27,000 --> 01:21:27,000
对

1850
01:21:27,000 --> 01:21:27,000
对

1851
01:21:27,000 --> 01:21:28,000
对

1852
01:21:28,000 --> 01:21:28,000
对

1853
01:21:28,000 --> 01:21:28,000
对

1854
01:21:28,000 --> 01:21:28,000
对

1855
01:21:28,000 --> 01:21:28,000
对

1856
01:21:28,000 --> 01:21:28,000
对

1857
01:21:28,000 --> 01:21:28,000
对

1858
01:21:28,000 --> 01:21:28,000
对

1859
01:21:28,000 --> 01:21:28,000
对

1860
01:21:28,000 --> 01:21:29,000
对

1861
01:21:29,000 --> 01:21:29,000
对

1862
01:21:29,000 --> 01:21:29,000
对

1863
01:21:29,000 --> 01:21:29,000
对

1864
01:21:29,000 --> 01:21:29,000
对

1865
01:21:29,000 --> 01:21:29,000
对

1866
01:21:29,000 --> 01:21:30,000
对

1867
01:21:30,000 --> 01:21:30,000
对

1868
01:21:30,000 --> 01:21:31,000
对

1869
01:21:31,000 --> 01:21:32,000
对

1870
01:21:32,000 --> 01:21:33,000
还有一个是

1871
01:21:33,000 --> 01:21:35,000
这是你写的

1872
01:21:35,000 --> 01:21:37,000
这个我其实用的很少

1873
01:21:37,000 --> 01:21:38,000
我有听说过

1874
01:21:38,000 --> 01:21:39,000
对

1875
01:21:39,000 --> 01:21:43,000
我不知道我不确定他应该念什么

1876
01:21:43,000 --> 01:21:44,000
因为他没有那个意义的

1877
01:21:44,000 --> 01:21:45,000
他的拼法是

1878
01:21:45,000 --> 01:21:48,000
就是法语的拼法

1879
01:21:48,000 --> 01:21:51,000
而不是英语的

1880
01:21:51,000 --> 01:21:54,000
我所以我怀疑他是不是念

1881
01:21:54,000 --> 01:21:57,000
那我们先姑且这样念吧

1882
01:21:57,000 --> 01:21:57,000
对

1883
01:21:57,000 --> 01:21:58,000
就是巧克力编辑器

1884
01:21:58,000 --> 01:21:59,000
巧克力编辑器

1885
01:21:59,000 --> 01:22:07,000
巧克力编辑器是一个号称要做的 default native os 10 editor 的一个编辑器

1886
01:22:07,000 --> 01:22:07,000
好像没做成

1887
01:22:07,000 --> 01:22:09,000
而且他也是要钱的

1888
01:22:09,000 --> 01:22:11,000
而且他只有 15 天的试用期

1889
01:22:11,000 --> 01:22:22,000
但是基本上很多用户都会觉得他是更加像 taxmate 的一个编辑器

1890
01:22:22,000 --> 01:22:23,000
一个 clone

1891
01:22:23,000 --> 01:22:23,000
对吧

1892
01:22:23,000 --> 01:22:24,000
对

1893
01:22:24,000 --> 01:22:27,000
有一点点像 taxmate 的精神继承者

1894
01:22:27,000 --> 01:22:29,000
就是他有一批核心的功能

1895
01:22:29,000 --> 01:22:30,000
做的非常好

1896
01:22:30,000 --> 01:22:32,000
做的非常的实用

1897
01:22:32,000 --> 01:22:34,000
但是除此之外

1898
01:22:34,000 --> 01:22:36,000
可扩展性并不是很好

1899
01:22:36,000 --> 01:22:39,000
因为 sublime text 的一大优点

1900
01:22:39,000 --> 01:22:42,000
就是 sublime text 有一大批

1901
01:22:42,000 --> 01:22:45,000
非常优良的插件可以用

1902
01:22:45,000 --> 01:22:46,000
而且有内置的

1903
01:22:46,000 --> 01:22:47,000
也不是内置的

1904
01:22:47,000 --> 01:22:49,000
就是有一个插件管理器可以安装

1905
01:22:49,000 --> 01:22:51,000
但是 tax chocolate

1906
01:22:51,000 --> 01:22:53,000
巧克力编辑器

1907
01:22:53,000 --> 01:22:57,000
至少就我所知是没有的

1908
01:22:57,000 --> 01:22:59,000
但他仍旧是一个

1909
01:22:59,000 --> 01:23:01,000
相当称首的编辑器

1910
01:23:01,000 --> 01:23:05,000
我印象中用巧克力编辑器的人

1911
01:23:05,000 --> 01:23:08,000
似乎从在 web 开发的比较多

1912
01:23:08,000 --> 01:23:10,000
就是做什么写 css

1913
01:23:10,000 --> 01:23:12,000
写 html 代码的

1914
01:23:12,000 --> 01:23:13,000
好像用的比较多

1915
01:23:13,000 --> 01:23:14,000
但是用它来编程的

1916
01:23:14,000 --> 01:23:16,000
我见到人不是特别多

1917
01:23:16,000 --> 01:23:18,000
反正

1918
01:23:18,000 --> 01:23:20,000
好像的确如此

1919
01:23:20,000 --> 01:23:25,000
因为我自己也只是大概用过那么一两天

1920
01:23:25,000 --> 01:23:28,000
就尝鲜一样用了一两天

1921
01:23:28,000 --> 01:23:29,000
然后下次再想想

1922
01:23:29,000 --> 01:23:31,000
去把它编辑

1923
01:23:31,000 --> 01:23:33,000
然后再想来粗 Jim

1924
01:23:33,000 --> 01:23:34,000
过去

1925
01:23:34,000 --> 01:23:35,000
J zrobić你看

1926
01:23:35,000 --> 01:23:36,000
有没有

1927
01:23:36,000 --> 01:23:37,000
你看看

1928
01:23:37,000 --> 01:23:39,000
那个

1929
01:23:39,000 --> 01:23:39,000
기도不唬惔

1930
01:23:39,000 --> 01:23:52,000
Strom

1931
01:23:52,000 --> 01:23:53,000
出现 charged

1932
01:23:53,000 --> 01:23:55,000
录影

1933
01:23:55,000 --> 01:23:55,000
这个萤岸

1934
01:23:55,000 --> 01:23:59,000
然后

1935
01:23:59,000 --> 01:24:02,000
是用来修改二进制文件

1936
01:24:02,000 --> 01:24:03,000
然后改成文件之类的

1937
01:24:03,000 --> 01:24:04,000
那个时候一定要用 all-tribe

1938
01:24:04,000 --> 01:24:06,000
它有一个很方便的

1939
01:24:06,000 --> 01:24:07,000
一个 hex mode 的编辑模式

1940
01:24:07,000 --> 01:24:07,000
对吧

1941
01:24:07,000 --> 01:24:08,000
对

1942
01:24:08,000 --> 01:24:10,000
如果你不知道的话

1943
01:24:10,000 --> 01:24:11,000
对

1944
01:24:11,000 --> 01:24:11,000
那个时候

1945
01:24:11,000 --> 01:24:13,000
就是我那个时候

1946
01:24:13,000 --> 01:24:15,000
因为不是还并不懂编程

1947
01:24:15,000 --> 01:24:16,000
只是想要

1948
01:24:16,000 --> 01:24:18,000
想要改一下存文件

1949
01:24:18,000 --> 01:24:20,000
然后赶紧过这一关的时候

1950
01:24:20,000 --> 01:24:23,000
会产生这样的迷思

1951
01:24:23,000 --> 01:24:26,000
就是你要改 16 进制代码

1952
01:24:26,000 --> 01:24:27,000
就必须用 hex-cited

1953
01:24:27,000 --> 01:24:27,000
不对

1954
01:24:27,000 --> 01:24:28,000
当然不是有一个什么

1955
01:24:28,000 --> 01:24:31,000
有各种这种游戏的辅助工具

1956
01:24:31,000 --> 01:24:32,000
可以帮你改

1957
01:24:32,000 --> 01:24:33,000
就直接可以

1958
01:24:33,000 --> 01:24:34,000
DOS 下面有 PC-Tools

1959
01:24:34,000 --> 01:24:34,000
对

1960
01:24:34,000 --> 01:24:36,000
而且还有什么金山游侠

1961
01:24:36,000 --> 01:24:37,000
你记不记得

1962
01:24:37,000 --> 01:24:40,000
金山游侠是改那村

1963
01:24:40,000 --> 01:24:40,000
对

1964
01:24:40,000 --> 01:24:42,000
可是金山游侠出来

1965
01:24:42,000 --> 01:24:43,000
已经比 hex-cited 晚很多

1966
01:24:43,000 --> 01:24:44,000
对

1967
01:24:44,000 --> 01:24:45,000
就是这一类的

1968
01:24:45,000 --> 01:24:47,000
就是专门改游戏的

1969
01:24:47,000 --> 01:24:48,000
就是在最开始的时候

1970
01:24:48,000 --> 01:24:48,000
我有的

1971
01:24:48,000 --> 01:24:49,000
我所有的迷思

1972
01:24:49,000 --> 01:24:51,000
就是在 Windows 下面

1973
01:24:51,000 --> 01:24:52,000
要改 16 进制的东西

1974
01:24:52,000 --> 01:24:53,000
就必须用 hex-cited

1975
01:24:53,000 --> 01:24:53,000
对

1976
01:24:53,000 --> 01:24:55,000
还有一个

1977
01:24:55,000 --> 01:24:56,000
我不记得

1978
01:24:56,000 --> 01:24:58,000
你用 hex-cited

1979
01:24:58,000 --> 01:24:58,000
写过程序

1980
01:24:58,000 --> 01:24:59,000
我没有

1981
01:24:59,000 --> 01:25:00,000
我很少用

1982
01:25:00,000 --> 01:25:02,000
我一直想吐槽

1983
01:25:02,000 --> 01:25:03,000
为什么我不喜欢

1984
01:25:03,000 --> 01:25:03,000
那个

1985
01:25:03,000 --> 01:25:05,000
Ultra

1986
01:25:05,000 --> 01:25:07,000
UltraEdit

1987
01:25:07,000 --> 01:25:08,000
UltraEdit 的一个原因

1988
01:25:08,000 --> 01:25:08,000
就是它上面

1989
01:25:08,000 --> 01:25:09,000
你摸着打开

1990
01:25:09,000 --> 01:25:11,000
有一排的那个 toolbar

1991
01:25:11,000 --> 01:25:12,000
不 三排的 toolbar

1992
01:25:12,000 --> 01:25:13,000
对

1993
01:25:13,000 --> 01:25:15,000
UltraEdit 是一个非常像

1994
01:25:15,000 --> 01:25:17,000
把自己伪装成一个

1995
01:25:17,000 --> 01:25:18,000
IDE 的编辑器

1996
01:25:18,000 --> 01:25:19,000
对

1997
01:25:19,000 --> 01:25:20,000
就是我当时看

1998
01:25:20,000 --> 01:25:21,000
我就被震惊了

1999
01:25:21,000 --> 01:25:22,000
我说这什么

2000
01:25:22,000 --> 01:25:23,000
怎么这么多

2001
01:25:23,000 --> 01:25:25,000
然后因为在我印象中

2002
01:25:25,000 --> 01:25:26,000
如果你是一个编辑

2003
01:25:26,000 --> 01:25:27,000
你是一个文本编辑器

2004
01:25:27,000 --> 01:25:28,000
然后你看

2005
01:25:28,000 --> 01:25:30,000
还有三排的 toolbar

2006
01:25:30,000 --> 01:25:31,000
意思你是要鼓励我用鼠标

2007
01:25:31,000 --> 01:25:33,000
没错

2008
01:25:33,000 --> 01:25:34,000
然后那个时候

2009
01:25:34,000 --> 01:25:35,000
我已经是深信说

2010
01:25:35,000 --> 01:25:36,000
鼠标和键盘之间

2011
01:25:36,000 --> 01:25:38,000
相互一直切换起来

2012
01:25:38,000 --> 01:25:39,000
切换去是一个

2013
01:25:39,000 --> 01:25:41,000
非常低效的一个过程

2014
01:25:41,000 --> 01:25:42,000
没错

2015
01:25:42,000 --> 01:25:42,000
然后我觉得

2016
01:25:42,000 --> 01:25:43,000
这完全不能忍

2017
01:25:43,000 --> 01:25:45,000
说到 UltraEdit

2018
01:25:45,000 --> 01:25:48,000
就是我之前在想说

2019
01:25:48,000 --> 01:25:51,000
你说编辑器和 IDE 之间的界限

2020
01:25:51,000 --> 01:25:52,000
到底在哪呢

2021
01:25:52,000 --> 01:25:53,000
我曾经一度想说

2022
01:25:53,000 --> 01:25:55,000
一个非常表面的现象

2023
01:25:55,000 --> 01:25:58,000
就是 IDE 一定是用 splash screen

2024
01:25:58,000 --> 01:26:00,000
就一定会一上来

2025
01:26:00,000 --> 01:26:02,000
给你一个启动图案的

2026
01:26:02,000 --> 01:26:03,000
但是反过来想

2027
01:26:03,000 --> 01:26:05,000
UltraEdit 它明明是一个编辑器

2028
01:26:05,000 --> 01:26:06,000
可是它有一个 splash screen

2029
01:26:06,000 --> 01:26:07,000
我觉得是这样

2030
01:26:07,000 --> 01:26:10,000
如果你能在编辑器里面完成

2031
01:26:10,000 --> 01:26:13,000
就是 code compile debug

2032
01:26:13,000 --> 01:26:14,000
这个流程的

2033
01:26:14,000 --> 01:26:15,000
就算 IDE 了

2034
01:26:15,000 --> 01:26:19,000
可是比如说什么 EditPlus 之类的东西

2035
01:26:19,000 --> 01:26:20,000
也是可以配置成这样

2036
01:26:20,000 --> 01:26:23,000
你就是把它当成 IDE 再用了

2037
01:26:23,000 --> 01:26:24,000
其实我界定

2038
01:26:24,000 --> 01:26:26,000
它是不是 IDE 有一个地方

2039
01:26:26,000 --> 01:26:26,000
我觉得

2040
01:26:26,000 --> 01:26:28,000
我一般用这个标准来判断的

2041
01:26:28,000 --> 01:26:31,000
但是这个很土的一个标准

2042
01:26:31,000 --> 01:26:33,000
就是如果编译错了

2043
01:26:33,000 --> 01:26:35,000
它能不能够直接给我跳到

2044
01:26:35,000 --> 01:26:37,000
那个出错那条的行号那里去

2045
01:26:37,000 --> 01:26:38,000
或者给我高亮出来

2046
01:26:38,000 --> 01:26:40,000
有没有 debug 功能

2047
01:26:40,000 --> 01:26:41,000
有没有动态追踪

2048
01:26:41,000 --> 01:26:43,000
就有没有那个 feedback

2049
01:26:43,000 --> 01:26:44,000
如果有的话

2050
01:26:44,000 --> 01:26:45,000
它就算 IDE

2051
01:26:45,000 --> 01:26:47,000
这是一个不错的标准

2052
01:26:47,000 --> 01:26:49,000
但其实这个是很有问题的

2053
01:26:49,000 --> 01:26:50,000
因为现在比如说

2054
01:26:50,000 --> 01:26:53,000
我现在用在 Vim 里有一个插件

2055
01:26:53,000 --> 01:26:56,000
叫做叫什么来的

2056
01:26:56,000 --> 01:26:56,000
Syntactic

2057
01:26:56,000 --> 01:26:57,000
对对对

2058
01:26:57,000 --> 01:26:58,000
Syntactic

2059
01:26:58,000 --> 01:26:59,000
叫 Syntactic

2060
01:26:59,000 --> 01:27:01,000
就是那个插件

2061
01:27:01,000 --> 01:27:03,000
它会告诉你出错的地方的行号

2062
01:27:03,000 --> 01:27:04,000
然后我用一个

2063
01:27:04,000 --> 01:27:04,000
就是 Syntactic

2064
01:27:04,000 --> 01:27:07,000
可是那是一个静态分析

2065
01:27:07,000 --> 01:27:07,000
对

2066
01:27:07,000 --> 01:27:09,000
它就说它严格来说

2067
01:27:09,000 --> 01:27:11,000
不算是一个叫什么

2068
01:27:11,000 --> 01:27:14,000
动态追踪

2069
01:27:14,000 --> 01:27:15,000
对

2070
01:27:15,000 --> 01:27:18,000
它并没有办法很直接的告诉你

2071
01:27:18,000 --> 01:27:19,000
编译器告诉你的结果

2072
01:27:19,000 --> 01:27:21,000
它只是通过一个语法分析来做

2073
01:27:21,000 --> 01:27:24,000
但是现在有一点界限很模糊的地方

2074
01:27:24,000 --> 01:27:25,000
就是比如说现在我写 Go

2075
01:27:25,000 --> 01:27:27,000
然后我有一个 Go 语言的插件

2076
01:27:27,000 --> 01:27:28,000
它会直接

2077
01:27:28,000 --> 01:27:28,000
因为 Go

2078
01:27:28,000 --> 01:27:29,000
你保存的时候

2079
01:27:29,000 --> 01:27:32,000
它就会直接用一个小

2080
01:27:32,000 --> 01:27:33,000
Go format

2081
01:27:33,000 --> 01:27:33,000
对

2082
01:27:33,000 --> 01:27:36,000
它会默认检查你那个是可不可以被编译的

2083
01:27:36,000 --> 01:27:37,000
就是有没有什么编译错误

2084
01:27:37,000 --> 01:27:38,000
因为勾编译很快

2085
01:27:38,000 --> 01:27:40,000
这个其实也无所谓

2086
01:27:40,000 --> 01:27:42,000
然后其实如果按刚才定义来说

2087
01:27:42,000 --> 01:27:43,000
这也算是一个 ID 了

2088
01:27:43,000 --> 01:27:45,000
好像似乎也不太对

2089
01:27:45,000 --> 01:27:49,000
所以我说刚才只是我以前用的一个很土的标准

2090
01:27:49,000 --> 01:27:50,000
对

2091
01:27:50,000 --> 01:27:55,000
但起码有一点就是你不可以在编译器里面跑一个 compiler 之类的

2092
01:27:55,000 --> 01:27:57,000
编辑器里面跑 compiler

2093
01:27:57,000 --> 01:27:58,000
所以那个还是不算

2094
01:27:58,000 --> 01:27:59,000
不算 ID

2095
01:27:59,000 --> 01:28:00,000
对

2096
01:28:00,000 --> 01:28:03,000
或者说更权威的一种方法

2097
01:28:03,000 --> 01:28:05,000
就是去这个工具的官方网站上看

2098
01:28:05,000 --> 01:28:06,000
自己说什么

2099
01:28:06,000 --> 01:28:09,000
他告诉他会不会说这是一款 ID

2100
01:28:09,000 --> 01:28:10,000
如果是的话

2101
01:28:10,000 --> 01:28:10,000
好吧

2102
01:28:10,000 --> 01:28:11,000
那当他 ID 好

2103
01:28:11,000 --> 01:28:11,000
对

2104
01:28:11,000 --> 01:28:14,000
Windows 上面还有一个

2105
01:28:14,000 --> 01:28:17,000
我当时用的是一个挺有意思的编辑器

2106
01:28:17,000 --> 01:28:19,000
叫 Find

2107
01:28:19,000 --> 01:28:20,000
你还记得吗

2108
01:28:20,000 --> 01:28:26,000
好像那个东西是和某一个 Python 的发行板一起打包发布的

2109
01:28:26,000 --> 01:28:28,000
我也不太记得

2110
01:28:28,000 --> 01:28:28,000
但是我记得是一个发行板

2111
01:28:28,000 --> 01:28:29,000
他是和谁一起发布了

2112
01:28:29,000 --> 01:28:31,000
但是我想他还在吗

2113
01:28:31,000 --> 01:28:34,000
是叫 SITE

2114
01:28:34,000 --> 01:28:35,000
我记得是不是

2115
01:28:35,000 --> 01:28:36,000
对对对对

2116
01:28:36,000 --> 01:28:37,000
我用过他

2117
01:28:37,000 --> 01:28:38,000
我确定我用过他

2118
01:28:38,000 --> 01:28:39,000
他好像是和

2119
01:28:40,000 --> 01:28:44,000
某一个特定的 Python 发行板一起打包发布

2120
01:28:44,000 --> 01:28:44,000
对对

2121
01:28:44,000 --> 01:28:45,000
现在还有现在还有这个东西

2122
01:28:45,000 --> 01:28:47,000
就是他要他叫什么

2123
01:28:47,000 --> 01:28:50,000
他是 Scientist 是一个我们编辑器

2124
01:28:50,000 --> 01:28:53,000
然后他他本来是为了展示一个叫做

2125
01:28:53,000 --> 01:28:54,000
哇

2126
01:28:54,000 --> 01:28:54,000
这怎么念

2127
01:28:54,000 --> 01:28:56,000
Scientilla

2128
01:28:56,000 --> 01:28:58,000
Scientilla

2129
01:28:58,000 --> 01:28:59,000
Scientilla

2130
01:28:59,000 --> 01:29:01,000
Scientilla 是一个什么玩意儿

2131
01:29:01,000 --> 01:29:04,000
就是他是一个编辑器组件

2132
01:29:04,000 --> 01:29:07,000
就是他是一个用来写编辑器的一个 library

2133
01:29:07,000 --> 01:29:08,000
OK

2134
01:29:08,000 --> 01:29:08,000
对

2135
01:29:08,000 --> 01:29:11,000
然后这个 Scientist 就是为了展示这个 library

2136
01:29:11,000 --> 01:29:13,000
然后他本来这个

2137
01:29:13,000 --> 01:29:15,000
我记得如果我没记错的话

2138
01:29:15,000 --> 01:29:17,000
他本来是要卖这个组件的 license 的

2139
01:29:17,000 --> 01:29:19,000
然后为了卖这个 license

2140
01:29:19,000 --> 01:29:21,000
他就要先展示一下这个 Scient

2141
01:29:21,000 --> 01:29:22,000
这个他能做什么

2142
01:29:22,000 --> 01:29:26,000
然后当时我就被他一些很多比较新奇的特性所震惊了

2143
01:29:26,000 --> 01:29:27,000
就当时比如说

2144
01:29:27,000 --> 01:29:32,000
他支持这个多种字体跟 emacs 那种是一样的

2145
01:29:32,000 --> 01:29:32,000
嗯

2146
01:29:32,000 --> 01:29:34,000
然后他可以支持等宽非等宽的

2147
01:29:34,000 --> 01:29:35,000
就是同时使用

2148
01:29:35,000 --> 01:29:37,000
然后语法高亮那些

2149
01:29:37,000 --> 01:29:41,000
就当时我在在那个这个来说

2150
01:29:41,000 --> 01:29:41,000
哇

2151
01:29:41,000 --> 01:29:42,000
这个还这么牛逼

2152
01:29:42,000 --> 01:29:44,000
还是挺挺少见

2153
01:29:44,000 --> 01:29:44,000
因为当时你知道

2154
01:29:44,000 --> 01:29:46,000
那个是从 nopad

2155
01:29:46,000 --> 01:29:49,000
记事本过渡过来找的第一款编辑器

2156
01:29:49,000 --> 01:29:50,000
你知道吗

2157
01:29:50,000 --> 01:29:51,000
啊

2158
01:29:51,000 --> 01:29:54,000
原来有这么一段黑历史

2159
01:29:54,000 --> 01:29:56,000
而且他是一个免费的哈

2160
01:29:56,000 --> 01:29:57,000
呃

2161
01:29:57,000 --> 01:29:57,000
就感觉啊

2162
01:29:57,000 --> 01:29:59,000
还是相当不错

2163
01:29:59,000 --> 01:30:00,000
我不知道现在怎么样

2164
01:30:00,000 --> 01:30:00,000
哇

2165
01:30:00,000 --> 01:30:01,000
他现在还有竟然还有 macos 版

2166
01:30:01,000 --> 01:30:03,000
还在 macapp store 里面

2167
01:30:03,000 --> 01:30:06,000
我一定要下一个下一个来用来还回旧

2168
01:30:06,000 --> 01:30:07,000
来免费

2169
01:30:07,000 --> 01:30:09,000
这个编辑器应该已经有一定年头了吧

2170
01:30:09,000 --> 01:30:10,000
至少也是有个十年八年的

2171
01:30:10,000 --> 01:30:16,000
你想我用的时候是在我想想应该是在 2000 年左右吧

2172
01:30:16,000 --> 01:30:19,000
windows xp 的早期的时候

2173
01:30:19,000 --> 01:30:21,000
所以是有十几年的历史了

2174
01:30:21,000 --> 01:30:22,000
对

2175
01:30:22,000 --> 01:30:25,000
我早期用到了 windows 上的编辑器

2176
01:30:25,000 --> 01:30:27,000
或者说编辑器

2177
01:30:27,000 --> 01:30:27,000
比较

2178
01:30:27,000 --> 01:30:31,000
印象深刻的一个叫做 edit plus

2179
01:30:31,000 --> 01:30:33,000
图标是一个红色的笔记本

2180
01:30:33,000 --> 01:30:36,000
这个图标是个红色的翻开了半页的笔记本

2181
01:30:36,000 --> 01:30:37,000
ok

2182
01:30:37,000 --> 01:30:38,000
edit plus

2183
01:30:38,000 --> 01:30:39,000
我来看一看

2184
01:30:39,000 --> 01:30:40,000
那是不是还存在

2185
01:30:40,000 --> 01:30:44,000
什么你已经阵亡

2186
01:30:44,000 --> 01:30:45,000
哎

2187
01:30:45,000 --> 01:30:46,000
还存在

2188
01:30:46,000 --> 01:30:49,000
最近更新是 3 月 27 日

2189
01:30:49,000 --> 01:30:49,000
今年

2190
01:30:49,000 --> 01:30:52,000
而且他真的假的

2191
01:30:52,000 --> 01:30:53,000
这图标还是没有变

2192
01:30:53,000 --> 01:30:54,000
是一个红色的笔记本

2193
01:30:54,000 --> 01:30:55,000
翻开了一半

2194
01:30:55,000 --> 01:30:56,000
好吧

2195
01:30:56,000 --> 01:30:56,000
卧槽

2196
01:30:56,000 --> 01:30:57,000
卧槽

2197
01:30:57,000 --> 01:30:58,000
这个 scientist 我疯了

2198
01:30:58,000 --> 01:30:59,000
你知道他卖多少钱吗

2199
01:30:59,000 --> 01:31:00,000
多少

2200
01:31:00,000 --> 01:31:01,000
42 美元

2201
01:31:01,000 --> 01:31:03,000
oh my fucking god

2202
01:31:03,000 --> 01:31:04,000
他的整个 4.2 兆

2203
01:31:04,000 --> 01:31:07,000
4.2 兆

2204
01:31:07,000 --> 01:31:10,000
在 mac app store 里面

2205
01:31:10,000 --> 01:31:10,000
太屌了

2206
01:31:10,000 --> 01:31:12,000
太屌了

2207
01:31:12,000 --> 01:31:12,000
对对对

2208
01:31:12,000 --> 01:31:14,000
他确实是有一个自带的

2209
01:31:14,000 --> 01:31:16,000
好像他就是用 python 来 script

2210
01:31:16,000 --> 01:31:16,000
还是怎么样

2211
01:31:16,000 --> 01:31:17,000
我忘了

2212
01:31:17,000 --> 01:31:18,000
很有可能

2213
01:31:18,000 --> 01:31:20,000
因为我在我的印象里面

2214
01:31:20,000 --> 01:31:21,000
我在我的脑海里面

2215
01:31:21,000 --> 01:31:22,000
somehow 这个

2216
01:31:22,000 --> 01:31:23,000
跟 python 有点关系

2217
01:31:23,000 --> 01:31:25,000
3 te 对和 python

2218
01:31:25,000 --> 01:31:26,000
有 fade

2219
01:31:26,000 --> 01:31:29,000
非常浓烈的关联

2220
01:31:29,000 --> 01:31:29,000
我想起来了

2221
01:31:29,000 --> 01:31:31,000
我曾经用他来写过

2222
01:31:31,000 --> 01:31:31,000
litech

2223
01:31:31,000 --> 01:31:33,000
好

2224
01:31:33,000 --> 01:31:35,000
就是因为他有多种语法高调

2225
01:31:35,000 --> 01:31:36,000
然后字体不一样

2226
01:31:36,000 --> 01:31:37,000
就刚才有讲

2227
01:31:37,000 --> 01:31:39,000
我是一直很羡慕 emax 那个特性

2228
01:31:39,000 --> 01:31:41,000
ok

2229
01:31:41,000 --> 01:31:45,000
我的 litech 的

2230
01:31:45,000 --> 01:31:50,000
原文件是在 note

2231
01:31:50,000 --> 01:31:51,000
pals plus plus 里面写的

2232
01:31:51,000 --> 01:31:53,000
它是一个只能使用等宽字体的

2233
01:31:53,000 --> 01:31:55,000
好像是的

2234
01:31:55,000 --> 01:31:55,000
对

2235
01:31:55,000 --> 01:31:56,000
我觉得就是有时候

2236
01:31:56,000 --> 01:31:57,000
感觉不是

2237
01:31:57,000 --> 01:31:59,000
就只是通过语法高调

2238
01:31:59,000 --> 01:32:00,000
有时候很难一言扫

2239
01:32:00,000 --> 01:32:02,000
你为什么会对所见就这种半所见

2240
01:32:02,000 --> 01:32:02,000
不是所见

2241
01:32:02,000 --> 01:32:05,000
每一所见就有这么强烈的需求

2242
01:32:05,000 --> 01:32:07,000
我是希望能够我不看编译结果

2243
01:32:07,000 --> 01:32:08,000
只看编码

2244
01:32:08,000 --> 01:32:12,000
能够很扫很快的扫清楚文档的原始结构

2245
01:32:12,000 --> 01:32:13,000
比如说大标题

2246
01:32:13,000 --> 01:32:15,000
二级标题这样的一些东西

2247
01:32:15,000 --> 01:32:17,000
然后如果你每个字都是一样大

2248
01:32:17,000 --> 01:32:18,000
只是通过颜色来区别的话

2249
01:32:18,000 --> 01:32:20,000
其实有一定的难度的

2250
01:32:20,000 --> 01:32:21,000
特别是文档比较长的时候

2251
01:32:21,000 --> 01:32:23,000
说的没错

2252
01:32:23,000 --> 01:32:24,000
你这么一说

2253
01:32:24,000 --> 01:32:25,000
我忽然想起来

2254
01:32:25,000 --> 01:32:26,000
我在本科作别

2255
01:32:26,000 --> 01:32:27,000
设计的时候

2256
01:32:27,000 --> 01:32:31,000
要看一个非常庞大的 C 库

2257
01:32:31,000 --> 01:32:35,000
然后当时当了一个半编辑器

2258
01:32:35,000 --> 01:32:38,000
的代码阅读工具

2259
01:32:38,000 --> 01:32:41,000
这个代码阅读工具的优点之一

2260
01:32:41,000 --> 01:32:43,000
也是它可以把

2261
01:32:43,000 --> 01:32:47,000
比如说函数的名字用大号字体显示

2262
01:32:47,000 --> 01:32:51,000
然后一些经常出现的变量

2263
01:32:51,000 --> 01:32:53,000
可以用比较深的颜色显示

2264
01:32:53,000 --> 01:32:55,000
可是具体叫什么忘记了

2265
01:32:55,000 --> 01:32:56,000
但是当时

2266
01:32:56,000 --> 01:32:57,000
搜寻它的时候

2267
01:32:57,000 --> 01:33:00,000
就说它是一款非常适合阅读代码的编辑器

2268
01:33:00,000 --> 01:33:01,000
OK

2269
01:33:01,000 --> 01:33:02,000
其实我觉得

2270
01:33:02,000 --> 01:33:03,000
其实从这个

2271
01:33:03,000 --> 01:33:05,000
如果你从纯粹从这个字体

2272
01:33:05,000 --> 01:33:06,000
和这个排版的角度来讲

2273
01:33:06,000 --> 01:33:09,000
就是这种方式也未尝不可

2274
01:33:09,000 --> 01:33:10,000
对不对

2275
01:33:10,000 --> 01:33:12,000
我现在有这种

2276
01:33:12,000 --> 01:33:13,000
就是这么一种想法

2277
01:33:13,000 --> 01:33:15,000
因为有时候你真的看了一整屏的

2278
01:33:15,000 --> 01:33:17,000
大小都一样的代码的时候

2279
01:33:17,000 --> 01:33:18,000
还是挺辛苦的

2280
01:33:18,000 --> 01:33:19,000
对

2281
01:33:19,000 --> 01:33:22,000
对

2282
01:33:22,000 --> 01:33:23,000
接着说 Windows 上面的编辑器

2283
01:33:23,000 --> 01:33:24,000
另外一个就是

2284
01:33:24,000 --> 01:33:25,000
我刚刚提到了

2285
01:33:25,000 --> 01:33:26,000
这个 NotePad

2286
01:33:26,000 --> 01:33:30,000
好像是台湾人开发的

2287
01:33:30,000 --> 01:33:31,000
对

2288
01:33:31,000 --> 01:33:34,000
我记得在我切换到 Linux 之前

2289
01:33:34,000 --> 01:33:35,000
它是我

2290
01:33:35,000 --> 01:33:39,000
几乎是最默认的一款编辑器了吧

2291
01:33:39,000 --> 01:33:43,000
不管是写文章还是写代码

2292
01:33:43,000 --> 01:33:44,000
基本上我都用它

2293
01:33:44,000 --> 01:33:45,000
OK

2294
01:33:45,000 --> 01:33:47,000
而且它启动快

2295
01:33:47,000 --> 01:33:49,000
对大文件的处理也很好

2296
01:33:49,000 --> 01:33:51,000
就是比较小巧精致

2297
01:33:51,000 --> 01:33:52,000
对

2298
01:33:52,000 --> 01:33:54,000
而且应该也是完全免费

2299
01:33:54,000 --> 01:33:54,000
对

2300
01:33:54,000 --> 01:33:55,000
你说这个我突然想起来

2301
01:33:55,000 --> 01:33:56,000
其实我也见过很多人说这个

2302
01:33:56,000 --> 01:33:56,000
对

2303
01:33:56,000 --> 01:33:56,000
对

2304
01:33:56,000 --> 01:33:56,000
对

2305
01:33:56,000 --> 01:33:56,000
对

2306
01:33:56,000 --> 01:33:56,000
对

2307
01:33:56,000 --> 01:33:56,000
对

2308
01:33:56,000 --> 01:33:56,000
对

2309
01:33:56,000 --> 01:33:56,000
对

2310
01:33:56,000 --> 01:33:56,000
对

2311
01:33:56,000 --> 01:33:56,000
对

2312
01:33:56,000 --> 01:33:56,000
对

2313
01:33:56,000 --> 01:33:56,000
对

2314
01:33:56,000 --> 01:33:56,000
对

2319
01:35:56,000 --> 01:35:56,000
the

2320
01:35:56,000 --> 01:35:57,000
对

2321
01:35:57,000 --> 01:35:57,000
对

2322
01:35:57,000 --> 01:35:57,000
对

2323
01:35:57,000 --> 01:35:57,000
对

2324
01:35:57,000 --> 01:35:57,000
对

2325
01:35:57,000 --> 01:35:57,000
对

2326
01:35:57,000 --> 01:35:57,000
对

2327
01:35:57,000 --> 01:35:58,000
对

2328
01:35:58,000 --> 01:35:58,000
对

2329
01:35:58,000 --> 01:35:58,000
对

2330
01:35:58,000 --> 01:35:58,000
对

2331
01:35:58,000 --> 01:35:58,000
对

2332
01:35:58,000 --> 01:35:58,000
对

2333
01:35:58,000 --> 01:35:58,000
对

2334
01:35:58,000 --> 01:35:58,000
对

2335
01:35:58,000 --> 01:35:58,000
对

2336
01:35:58,000 --> 01:35:58,000
对

2337
01:35:58,000 --> 01:35:58,000
对

2338
01:35:58,000 --> 01:35:58,000
对

2339
01:35:58,000 --> 01:35:58,000
对

2340
01:35:58,000 --> 01:35:58,000
对

2341
01:35:58,000 --> 01:35:58,000
对

2342
01:35:58,000 --> 01:35:58,000
对

2343
01:35:58,000 --> 01:35:59,000
对

2344
01:35:59,000 --> 01:35:59,000
对

2345
01:35:59,000 --> 01:35:59,000
就是

2346
01:35:59,000 --> 01:36:01,000
这怎么这么描述

2347
01:36:01,000 --> 01:36:03,000
它都是一个原生的代码实现的一个编辑器

2348
01:36:03,000 --> 01:36:09,000
然后最近有一些基于 WebKit 的编辑器出现了

2349
01:36:09,000 --> 01:36:13,000
最比较典型的代表就是 GitHub Atom

2350
01:36:13,000 --> 01:36:14,000
对

2351
01:36:14,000 --> 01:36:15,000
GitHub Atom

2352
01:36:15,000 --> 01:36:17,000
而且你知道的比较多

2353
01:36:17,000 --> 01:36:17,000
它其实是

2354
01:36:17,000 --> 01:36:19,000
你可以理解它是一个浏览器

2355
01:36:19,000 --> 01:36:21,000
伪装成一个编辑器的样子

2356
01:36:21,000 --> 01:36:22,000
对

2357
01:36:22,000 --> 01:36:26,000
就好像有一些基于网页的编辑器

2358
01:36:26,000 --> 01:36:28,000
在线编辑器叫什么

2359
01:36:28,000 --> 01:36:29,000
CodeAnywhere

2360
01:36:29,000 --> 01:36:32,000
有个比较著名叫 CodeMirror

2361
01:36:32,000 --> 01:36:34,000
OK

2362
01:36:34,000 --> 01:36:36,000
但我记得我用过的那个叫 CodeAnywhere

2363
01:36:36,000 --> 01:36:38,000
然后就是一个

2364
01:36:38,000 --> 01:36:40,000
你打开一个网页

2365
01:36:40,000 --> 01:36:42,000
然后这个网页上面会给你显示一个编辑器

2366
01:36:42,000 --> 01:36:44,000
你可以在这个编辑器里面操作文件

2367
01:36:44,000 --> 01:36:47,000
只不过这些文件都是在云端的

2368
01:36:47,000 --> 01:36:49,000
然后也有什么语法标量

2369
01:36:49,000 --> 01:36:52,000
然后你点一下那个发布键

2370
01:36:52,000 --> 01:36:55,000
它就可以把你写好的东西发布出来

2371
01:36:55,000 --> 01:36:55,000
对

2372
01:36:55,000 --> 01:36:58,000
然后这个 Atom 这样的编辑器

2373
01:36:58,000 --> 01:37:02,000
就可以视为这样一种离线版本的浏览器里面的编辑器

2374
01:37:02,000 --> 01:37:03,000
但是我有一点

2375
01:37:03,000 --> 01:37:06,000
如果你真的去看它这种具体的实现

2376
01:37:06,000 --> 01:37:09,000
以及它整个的运行的逻辑

2377
01:37:09,000 --> 01:37:13,000
你会觉得这完全就不适合用来做一个编辑器

2378
01:37:13,000 --> 01:37:14,000
因为它毕竟是个浏览器

2379
01:37:14,000 --> 01:37:15,000
比如你要实现

2380
01:37:15,000 --> 01:37:16,000
比如最简单的一个例子

2381
01:37:16,000 --> 01:37:18,000
你要实现光标那一束

2382
01:37:18,000 --> 01:37:19,000
然后再不断的变

2383
01:37:19,000 --> 01:37:22,000
你是要去通过这个 CS 样式表

2384
01:37:22,000 --> 01:37:24,000
样式表去做一个动画

2385
01:37:24,000 --> 01:37:25,000
然后你要去衡量

2386
01:37:25,000 --> 01:37:27,000
衡量那个位置

2387
01:37:27,000 --> 01:37:30,000
大概是在这个文档的哪一个相对的位移上面去

2388
01:37:30,000 --> 01:37:33,000
反正就整个过程是很扭曲的

2389
01:37:33,000 --> 01:37:34,000
所以我到现在为止

2390
01:37:34,000 --> 01:37:36,000
我也没看出来

2391
01:37:36,000 --> 01:37:37,000
就是大家你看

2392
01:37:37,000 --> 01:37:38,000
如果你是一个网页

2393
01:37:38,000 --> 01:37:39,000
然后你需要

2394
01:37:39,000 --> 01:37:42,000
比如说你是一个什么所谓的云编辑器

2395
01:37:42,000 --> 01:37:43,000
我可以理解

2396
01:37:43,000 --> 01:37:45,000
因为你最终是要在网页里面实现

2397
01:37:45,000 --> 01:37:46,000
你有这个平台的限制

2398
01:37:46,000 --> 01:37:47,000
但是就像那个 GitHub

2399
01:37:47,000 --> 01:37:48,000
就是 Atom 这种东西

2400
01:37:48,000 --> 01:37:49,000
我到目前为止

2401
01:37:49,000 --> 01:37:52,000
我还是不能理解它的这个意义何在

2402
01:37:52,000 --> 01:37:54,000
或者为什么要做这么一个东西

2403
01:37:54,000 --> 01:38:00,000
它可能就是把 WebKit 当做

2404
01:38:00,000 --> 01:38:05,000
就像 JVM 或者是.NET 这样一个运行时来使用

2405
01:38:05,000 --> 01:38:08,000
然后用它来写成去的一个尝试吧

2406
01:38:08,000 --> 01:38:08,000
我觉得

2407
01:38:08,000 --> 01:38:11,000
就什么 WebKit as an OS

2408
01:38:11,000 --> 01:38:11,000
对

2409
01:38:11,000 --> 01:38:13,000
你把 WebKit 当做一个 OS 来使用

2410
01:38:13,000 --> 01:38:15,000
或者当做一个 library 来使用

2411
01:38:15,000 --> 01:38:16,000
当一个 framework 来使用

2412
01:38:16,000 --> 01:38:16,000
对

2413
01:38:16,000 --> 01:38:18,000
但是他们也没有

2414
01:38:18,000 --> 01:38:19,000
就是这个编辑做出来的时候

2415
01:38:19,000 --> 01:38:22,000
他也没有说有什么相对于

2416
01:38:22,000 --> 01:38:22,000
非常了不起的

2417
01:38:22,000 --> 01:38:23,000
对

2418
01:38:23,000 --> 01:38:24,000
我没有看出来

2419
01:38:24,000 --> 01:38:25,000
起码我到目前为止没有看出来

2420
01:38:25,000 --> 01:38:28,000
它有什么不得了的创新

2421
01:38:28,000 --> 01:38:31,000
或者是有什么足够吸引我的特性

2422
01:38:31,000 --> 01:38:32,000
让我去试一下

2423
01:38:32,000 --> 01:38:33,000
而且最关键是

2424
01:38:33,000 --> 01:38:36,000
我当然自己现在是所谓的 alpha 版本

2425
01:38:36,000 --> 01:38:37,000
就是很容易挂掉

2426
01:38:37,000 --> 01:38:39,000
现在还是太不完善了

2427
01:38:39,000 --> 01:38:40,000
而且很不稳定

2428
01:38:40,000 --> 01:38:41,000
不完善

2429
01:38:41,000 --> 01:38:44,000
而且对资源的占用也是非常可观的

2430
01:38:44,000 --> 01:38:47,000
因为你想你在滥用一个浏览器

2431
01:38:47,000 --> 01:38:49,000
然后去实现一个编辑器

2432
01:38:49,000 --> 01:38:50,000
的功能

2433
01:38:50,000 --> 01:38:51,000
对吧

2434
01:38:51,000 --> 01:38:54,000
所以是挺古怪的一件事情

2435
01:38:54,000 --> 01:38:57,000
还有一个编辑器

2436
01:38:57,000 --> 01:38:59,000
这里是你也写了

2437
01:38:59,000 --> 01:39:00,000
但是我也要大力推荐的

2438
01:39:00,000 --> 01:39:01,000
叫做 acme

2439
01:39:02,000 --> 01:39:04,000
acme 这个编辑器是

2440
01:39:04,000 --> 01:39:06,000
你确定你要大力推荐吗

2441
01:39:06,000 --> 01:39:08,000
我的推荐不是说你要去用

2442
01:39:08,000 --> 01:39:09,000
你要去什么

2443
01:39:09,000 --> 01:39:11,000
去真的去用它作为主力

2444
01:39:11,000 --> 01:39:13,000
但是你应该去了解一下的一些

2445
01:39:13,000 --> 01:39:15,000
一些很奇怪的一些哲学

2446
01:39:15,000 --> 01:39:17,000
我觉得是对去了解一下

2447
01:39:17,000 --> 01:39:19,000
就是上世纪

2448
01:39:19,000 --> 01:39:21,000
70 80 年代有这么八九十年代

2449
01:39:21,000 --> 01:39:23,000
应该是八九十年代有这么一群人

2450
01:39:23,000 --> 01:39:25,000
曾经有过这样的想象

2451
01:39:25,000 --> 01:39:26,000
嗯

2452
01:39:26,000 --> 01:39:28,000
编辑器有可能是这个样子的

2453
01:39:28,000 --> 01:39:29,000
对啊

2454
01:39:29,000 --> 01:39:32,000
这是其实 acme 对说的 acme 就不能不说

2455
01:39:32,000 --> 01:39:33,000
plan 9 嘛

2456
01:39:33,000 --> 01:39:38,000
plan 9 其实就是这样一种非常了不起的先锋性的尝试

2457
01:39:38,000 --> 01:39:40,000
只不过它没有成功吧

2458
01:39:40,000 --> 01:39:44,000
对 plan 9 的目的是作为一个什么叫做

2459
01:39:44,000 --> 01:39:45,000
更好的 unix

2460
01:39:45,000 --> 01:39:48,000
对就比 unix 还 unix 的 unix

2461
01:39:48,000 --> 01:39:49,000
对 next generation unix

2462
01:39:49,000 --> 01:39:50,000
就是 plan 9

2463
01:39:50,000 --> 01:39:56,000
但是后来也现在你可以去下载虚拟机比较方便

2464
01:39:56,000 --> 01:39:57,000
可以在虚拟机上跑来玩

2465
01:39:57,000 --> 01:40:00,000
但是作为生产用肯定不太现实了

2466
01:40:00,000 --> 01:40:04,000
anyway acme 这个编辑器就是在 plan 9 里面

2467
01:40:04,000 --> 01:40:09,000
就是 rollpike 为了在 plan 9 里面写程序

2468
01:40:09,000 --> 01:40:11,000
于是给自己开发了这么一个编辑器

2469
01:40:11,000 --> 01:40:15,000
但是后来他现在用它来写构程序了

2470
01:40:15,000 --> 01:40:19,000
然后这编辑器有什么特别的地方呢

2471
01:40:19,000 --> 01:40:21,000
我觉得就说两点比较表面的

2472
01:40:21,000 --> 01:40:25,000
因为我也没有真的实际去很长时间用过它

2473
01:40:25,000 --> 01:40:29,000
但是首先第一个他默认使用是不等宽字体的

2474
01:40:29,000 --> 01:40:32,000
这个就觉得非常奇怪

2475
01:40:32,000 --> 01:40:33,000
我说为什么会这样

2476
01:40:33,000 --> 01:40:36,000
当然我记得他给过一个解释

2477
01:40:36,000 --> 01:40:40,000
就是觉得他说不等宽字体的程序更加易读

2478
01:40:40,000 --> 01:40:43,000
不等宽的程序更加美观

2479
01:40:43,000 --> 01:40:45,000
就看起来更加好看

2480
01:40:45,000 --> 01:40:46,000
以我幼小的心灵来看

2481
01:40:46,000 --> 01:40:49,000
在 georgia 这个字体下面

2482
01:40:49,000 --> 01:40:52,000
程序看起来好像要更优雅一些

2483
01:40:52,000 --> 01:40:53,000
不管其他代码质量怎么样

2484
01:40:53,000 --> 01:40:55,000
但至少看起来比较优雅

2485
01:40:55,000 --> 01:40:57,000
然后先生如果你们不等宽字体

2486
01:40:57,000 --> 01:40:59,000
怎么去对齐那些东西呢

2487
01:40:59,000 --> 01:41:01,000
对齐没有那么重要

2488
01:41:01,000 --> 01:41:02,000
没有你想象中的重要

2489
01:41:02,000 --> 01:41:05,000
而且他用那个 tab

2490
01:41:05,000 --> 01:41:08,000
我们现在一般的做法是把 tab 转换成

2491
01:41:08,000 --> 01:41:10,000
比如说四个空格来做

2492
01:41:10,000 --> 01:41:12,000
但是在 acme 或者在

2493
01:41:12,000 --> 01:41:14,000
你知道勾语言里面的

2494
01:41:14,000 --> 01:41:16,000
缩进默认使用 tab 吗

2495
01:41:16,000 --> 01:41:17,000
真的

2496
01:41:17,000 --> 01:41:17,000
真的

2497
01:41:17,000 --> 01:41:20,000
我以为现在全世界已经

2498
01:41:20,000 --> 01:41:21,000
没有完全倒向空格

2499
01:41:21,000 --> 01:41:24,000
那个什么 go land 里面的

2500
01:41:24,000 --> 01:41:25,000
就是你用 go format

2501
01:41:25,000 --> 01:41:26,000
如果你不改配置

2502
01:41:26,000 --> 01:41:28,000
他默认会帮你重新用 tab 来做缩进

2503
01:41:28,000 --> 01:41:30,000
就是在这里面是一样

2504
01:41:30,000 --> 01:41:31,000
因为 tab 有个好处

2505
01:41:31,000 --> 01:41:31,000
就是他可以

2506
01:41:31,000 --> 01:41:32,000
如果你是不等宽的话

2507
01:41:32,000 --> 01:41:34,000
他也可以能够帮你对齐

2508
01:41:34,000 --> 01:41:34,000
对

2509
01:41:34,000 --> 01:41:37,000
但也不是所有情况下能

2510
01:41:37,000 --> 01:41:39,000
大部分时候就能用了

2511
01:41:39,000 --> 01:41:41,000
然后另外一点就是

2512
01:41:41,000 --> 01:41:44,000
worldpack 这个人是不用语法高量的

2513
01:41:44,000 --> 01:41:45,000
你能想象吗

2514
01:41:45,000 --> 01:41:47,000
这个还好吧

2515
01:41:47,000 --> 01:41:49,000
就是呃

2516
01:41:49,000 --> 01:41:50,000
我也不知道

2517
01:41:50,000 --> 01:41:57,000
我有一点感觉就是语法高量和等宽

2518
01:41:57,000 --> 01:42:00,000
和包括那个小键盘

2519
01:42:00,000 --> 01:42:04,000
这些东西都是可有可无的

2520
01:42:04,000 --> 01:42:06,000
somehow overrated

2521
01:42:06,000 --> 01:42:09,000
但这一点我一直是很不能理解

2522
01:42:09,000 --> 01:42:11,000
因为虽然说他这个 acme

2523
01:42:11,000 --> 01:42:13,000
他是默认是使用非等宽字体的

2524
01:42:13,000 --> 01:42:15,000
但是他只有一个大小

2525
01:42:15,000 --> 01:42:16,000
而且只能有一种字体

2526
01:42:16,000 --> 01:42:17,000
对吧

2527
01:42:17,000 --> 01:42:17,000
我

2528
01:42:17,000 --> 01:42:18,000
我看的样子是这样子

2529
01:42:18,000 --> 01:42:19,000
对

2530
01:42:19,000 --> 01:42:21,000
至少在目前版本来说是这样

2531
01:42:21,000 --> 01:42:21,000
对

2532
01:42:21,000 --> 01:42:22,000
这就会有一个问题

2533
01:42:22,000 --> 01:42:24,000
就是啊

2534
01:42:24,000 --> 01:42:27,000
你没有办法通过改变字型

2535
01:42:27,000 --> 01:42:30,000
或者是字体的大小来区分这个

2536
01:42:30,000 --> 01:42:31,000
这个呃

2537
01:42:31,000 --> 01:42:32,000
远代码的结构

2538
01:42:32,000 --> 01:42:34,000
或者是这个文档的结构

2539
01:42:34,000 --> 01:42:34,000
啊

2540
01:42:34,000 --> 01:42:35,000
那么刚才我讲了嘛

2541
01:42:35,000 --> 01:42:40,000
如果一般的做法就是你用语法高量的方式来来分清除这个结构啊

2542
01:42:40,000 --> 01:42:43,000
但是 worldpack 这种大神级的人物

2543
01:42:43,000 --> 01:42:46,000
他他说我们我们大神写程序

2544
01:42:46,000 --> 01:42:47,000
从来不需要语法高量的方式

2545
01:42:47,000 --> 01:42:48,000
语法高量

2546
01:42:48,000 --> 01:42:50,000
那那就没有办法了

2547
01:42:50,000 --> 01:42:52,000
但是我我一直很难想象

2548
01:42:52,000 --> 01:42:54,000
就是我也尝试过一下哈

2549
01:42:54,000 --> 01:42:55,000
但是还是很别扭

2550
01:42:55,000 --> 01:42:56,000
我不知道你怎么觉得

2551
01:42:57,000 --> 01:43:00,000
我其实在很长时间里

2552
01:43:00,000 --> 01:43:02,000
在我比较小的时候写程序

2553
01:43:02,000 --> 01:43:03,000
我是不知道怎么开源

2554
01:43:03,000 --> 01:43:04,000
哈哈哈

2555
01:43:04,000 --> 01:43:08,000
是那个时候我是用就单色的呃

2556
01:43:08,000 --> 01:43:11,000
单色的模式来写过很长时间的程序

2557
01:43:11,000 --> 01:43:13,000
甚至就是我我应该跟你说过吧

2558
01:43:13,000 --> 01:43:17,000
就是我最开始学写写写写写写程序的时候

2559
01:43:17,000 --> 01:43:19,000
是用笔写在纸上的

2560
01:43:19,000 --> 01:43:23,000
那那个时候难道我要用不同的颜色去写一段程序吗

2561
01:43:23,000 --> 01:43:25,000
所以也没什么吧

2562
01:43:25,000 --> 01:43:25,000
OK

2563
01:43:25,000 --> 01:43:26,000
而且你知道

2564
01:43:26,000 --> 01:43:30,000
所以所以我知道这些就什么大神级程序员的先例都是这样的

2565
01:43:30,000 --> 01:43:31,000
不不不不不

2566
01:43:31,000 --> 01:43:32,000
这跟大神不神没有关系

2567
01:43:32,000 --> 01:43:36,000
这只是一个由简入奢易由奢入简难的问题吧

2568
01:43:36,000 --> 01:43:39,000
就是如果你就我的第一台电脑是一台 apple two

2569
01:43:39,000 --> 01:43:40,000
ok

2570
01:43:40,000 --> 01:43:43,000
然后 apple two 上面的 basic 是只有一种颜色的

2571
01:43:43,000 --> 01:43:44,000
蓝底白字吧

2572
01:43:44,000 --> 01:43:45,000
好像还是 ok

2573
01:43:45,000 --> 01:43:47,000
然后你可以在 logo 和页面上写一下

2574
01:43:47,000 --> 01:43:49,000
然后在 logo 和 basic 模式之间切换

2575
01:43:49,000 --> 01:43:52,000
可是不管 logo 还是 basic 都没有一发高亮

2576
01:43:52,000 --> 01:43:55,000
甚至在 logo 这种括号套括号的语言里面

2577
01:43:55,000 --> 01:43:57,000
括号是没办法配对的

2578
01:43:57,000 --> 01:44:00,000
就是你必须手你靠肉眼去配对

2579
01:44:00,000 --> 01:44:03,000
看你的那个两个括号是不是是不是配等了

2580
01:44:03,000 --> 01:44:05,000
如果不等的话

2581
01:44:05,000 --> 01:44:07,000
也许你这一个程序就要 debug 一个下午

2582
01:44:07,000 --> 01:44:10,000
你都不知道那个缺失的缺失括号在哪

2583
01:44:10,000 --> 01:44:13,000
但是我也不知道

2584
01:44:13,000 --> 01:44:16,000
那个时候我从来没有想过

2585
01:44:16,000 --> 01:44:17,000
没有

2586
01:44:17,000 --> 01:44:20,000
的那个东西会让我造成什么障碍

2587
01:44:20,000 --> 01:44:21,000
ok

2588
01:44:21,000 --> 01:44:24,000
那如果你现在呢

2589
01:44:24,000 --> 01:44:27,000
就是你我相信现在你应该是习惯了这个语法高亮吧

2590
01:44:27,000 --> 01:44:29,000
现在

2591
01:44:29,000 --> 01:44:35,000
有时候可能也会觉得没有语法高亮是不太好的

2592
01:44:35,000 --> 01:44:37,000
那是就是有时候写

2593
01:44:37,000 --> 01:44:39,000
比如说写一个非常复杂的

2594
01:44:39,000 --> 01:44:44,000
就打尤其是打开刚刚打开一个文件的时候

2595
01:44:44,000 --> 01:44:44,000
比如说

2596
01:44:44,000 --> 01:44:45,000
嗯

2597
01:44:45,000 --> 01:44:46,000
嗯

2598
01:44:46,000 --> 01:44:46,000
嗯

2599
01:44:46,000 --> 01:44:46,000
嗯

2600
01:44:46,000 --> 01:44:46,000
嗯

2601
01:44:46,000 --> 01:44:46,000
嗯

2602
01:44:46,000 --> 01:44:46,000
嗯

2603
01:44:46,000 --> 01:44:46,000
嗯

2604
01:44:46,000 --> 01:44:46,000
嗯

2605
01:44:46,000 --> 01:44:46,000
嗯

2606
01:44:46,000 --> 01:44:46,000
嗯

2607
01:44:46,000 --> 01:44:46,000
嗯

2608
01:44:46,000 --> 01:44:46,000
嗯

2609
01:44:46,000 --> 01:44:46,000
嗯

2610
01:44:46,000 --> 01:44:46,000
嗯

2611
01:44:46,000 --> 01:44:46,000
嗯

2612
01:44:46,000 --> 01:44:46,000
嗯

2613
01:44:46,000 --> 01:44:46,000
嗯

2614
01:44:46,000 --> 01:44:46,000
嗯

2615
01:44:46,000 --> 01:44:46,000
嗯

2616
01:44:46,000 --> 01:44:46,000
嗯

2617
01:44:46,000 --> 01:44:46,000
嗯

2618
01:44:46,000 --> 01:44:47,000
嗯

2619
01:44:47,000 --> 01:44:50,000
OK

2620
01:44:50,000 --> 01:44:50,000
嗯

2621
01:44:50,000 --> 01:44:50,000
嗯

2622
01:44:50,000 --> 01:44:50,000
嗯

2623
01:44:50,000 --> 01:44:50,000
嗯

2624
01:44:50,000 --> 01:44:50,000
嗯

2625
01:44:50,000 --> 01:44:50,000
嗯

2626
01:44:50,000 --> 01:44:50,000
嗯

2627
01:44:50,000 --> 01:44:50,000
嗯

2628
01:44:50,000 --> 01:44:50,000
嗯

2629
01:44:50,000 --> 01:44:51,000
嗯

2630
01:44:51,000 --> 01:44:51,000
嗯

2631
01:44:51,000 --> 01:44:51,000
嗯

2632
01:44:51,000 --> 01:44:51,000
嗯

2633
01:44:51,000 --> 01:44:51,000
嗯

2634
01:44:51,000 --> 01:44:52,000
嗯

2635
01:44:53,000 --> 01:44:53,000
嗯

2636
01:44:53,000 --> 01:44:54,000
嗯

2637
01:44:54,000 --> 01:44:55,000
打开之后

2638
01:44:55,000 --> 01:44:56,000
vim

2639
01:44:56,000 --> 01:44:57,000
默认把它显示为单色的

2640
01:44:57,000 --> 01:44:58,000
我可

2641
01:44:58,000 --> 01:45:02,000
我有时候可能要过一段时间才会意识到这个东西没有语法高亮

2642
01:45:02,000 --> 01:45:02,000
哈哈

2643
01:45:02,000 --> 01:45:04,000
ok

2644
01:45:04,000 --> 01:45:04,000
呃

2645
01:45:04,000 --> 01:45:05,000
这还蛮新鲜

2646
01:45:05,000 --> 01:45:05,000
反正我

2647
01:45:05,000 --> 01:45:07,000
我现在就遇到一个状况是这样子

2648
01:45:07,000 --> 01:45:10,000
就因为我要去登录很多一个服务器吗

2649
01:45:10,000 --> 01:45:10,000
然后

2650
01:45:10,000 --> 01:45:15,000
你知道我也不是说在每个服务器上都配置我的这个 vim 的那些东西

2651
01:45:15,000 --> 01:45:16,000
那懒吗

2652
01:45:16,000 --> 01:45:16,000
还是因为

2653
01:45:16,000 --> 01:45:17,000
对

2654
01:45:17,000 --> 01:45:18,000
比如说你编辑一些配置文件

2655
01:45:18,000 --> 01:45:21,000
有时候它就没有这个语法高量

2656
01:45:21,000 --> 01:45:22,000
然后就觉得

2657
01:45:22,000 --> 01:45:22,000
哎呀

2658
01:45:22,000 --> 01:45:24,000
好不习惯

2659
01:45:24,000 --> 01:45:25,000
觉得很没有安全感

2660
01:45:25,000 --> 01:45:25,000
你知道吗

2661
01:45:25,000 --> 01:45:26,000
因为语法高量

2662
01:45:26,000 --> 01:45:26,000
它可以

2663
01:45:26,000 --> 01:45:27,000
有时候可以

2664
01:45:27,000 --> 01:45:28,000
如果你看颜色不对

2665
01:45:28,000 --> 01:45:29,000
一般都是你那个语法错了

2666
01:45:29,000 --> 01:45:31,000
对

2667
01:45:31,000 --> 01:45:31,000
其实是

2668
01:45:31,000 --> 01:45:32,000
对语法高量

2669
01:45:32,000 --> 01:45:35,000
毫无疑问是有助于你发现

2670
01:45:35,000 --> 01:45:36,000
问题的

2671
01:45:36,000 --> 01:45:37,000
代码之中的问题的

2672
01:45:37,000 --> 01:45:37,000
对

2673
01:45:37,000 --> 01:45:39,000
然后就会有一种

2674
01:45:39,000 --> 01:45:41,000
叫什么不安全的感觉

2675
01:45:41,000 --> 01:45:42,000
对

2676
01:45:42,000 --> 01:45:43,000
这算了

2677
01:45:43,000 --> 01:45:43,000
我是把语法高量

2678
01:45:43,000 --> 01:45:45,000
做语法检查了

2679
01:45:45,000 --> 01:45:46,000
我觉得你们都有 paranoid

2680
01:45:46,000 --> 01:45:49,000
anyway

2681
01:45:49,000 --> 01:45:50,000
就所以我

2682
01:45:50,000 --> 01:45:52,000
所以我一直很难想象

2683
01:45:52,000 --> 01:45:53,000
在现在这种情况下

2684
01:45:53,000 --> 01:45:55,000
放取语法高量会怎么样

2685
01:45:55,000 --> 01:45:56,000
不过后来我想了一下

2686
01:45:56,000 --> 01:45:57,000
就是其实

2687
01:45:57,000 --> 01:45:59,000
在 go 这个

2688
01:45:59,000 --> 01:46:00,000
这个

2689
01:46:00,000 --> 01:46:02,000
如果你只写 go 程序的话

2690
01:46:02,000 --> 01:46:03,000
可能没有这个太大的障碍

2691
01:46:03,000 --> 01:46:05,000
因为你知道如果

2692
01:46:05,000 --> 01:46:07,000
你的

2693
01:46:07,000 --> 01:46:08,000
就哪怕你没有语法高量

2694
01:46:08,000 --> 01:46:09,000
然后你

2695
01:46:09,000 --> 01:46:10,000
如果你配置你编辑

2696
01:46:10,000 --> 01:46:11,000
默认保存跑一下

2697
01:46:11,000 --> 01:46:12,000
那 go format 的话

2698
01:46:12,000 --> 01:46:14,000
它是会提醒你

2699
01:46:14,000 --> 01:46:15,000
哪里错了的

2700
01:46:15,000 --> 01:46:16,000
就这个是编译

2701
01:46:16,000 --> 01:46:17,000
编辑器级别的检查

2702
01:46:17,000 --> 01:46:19,000
不是说只是从语法上面来检查

2703
01:46:19,000 --> 01:46:23,000
所以从这个角度来说

2704
01:46:23,000 --> 01:46:24,000
你没有语法编辑器

2705
01:46:24,000 --> 01:46:26,000
其实没有语法高量

2706
01:46:26,000 --> 01:46:27,000
其实也是挺安全的

2707
01:46:27,000 --> 01:46:28,000
起码写 go

2708
01:46:28,000 --> 01:46:29,000
但是如果你是写 python

2709
01:46:29,000 --> 01:46:31,000
或者想写 ruby 这种动态语言

2710
01:46:31,000 --> 01:46:32,000
就完全不行了

2711
01:46:32,000 --> 01:46:34,000
因为那种东西你不跑起来

2712
01:46:34,000 --> 01:46:35,000
或者说你跑起来

2713
01:46:35,000 --> 01:46:37,000
没有跑到代码内

2714
01:46:37,000 --> 01:46:40,000
你去可能都不会很好的发现

2715
01:46:40,000 --> 01:46:40,000
那个问题

2716
01:46:41,000 --> 01:46:42,000
对

2717
01:46:42,000 --> 01:46:43,000
所以是这样

2718
01:46:43,000 --> 01:46:46,000
所以我觉得这里还是有一点区别

2719
01:46:46,000 --> 01:46:47,000
可能是为什么像 roepike

2720
01:46:47,000 --> 01:46:49,000
因为他也是 go 的作者

2721
01:46:49,000 --> 01:46:57,000
他能敢于用什么 acme 来写程序

2722
01:46:57,000 --> 01:46:59,000
而不用担心写错

2723
01:46:59,000 --> 01:47:01,000
反正大流程序员应该是不会出错的

2724
01:47:01,000 --> 01:47:03,000
可能是这样

2725
01:47:03,000 --> 01:47:04,000
对

2726
01:47:04,000 --> 01:47:06,000
然后 acme 在我看来

2727
01:47:06,000 --> 01:47:07,000
它有

2728
01:47:07,000 --> 01:47:10,000
它比较 hardcore 的一点

2729
01:47:10,000 --> 01:47:12,000
就是它有点像 lisp

2730
01:47:12,000 --> 01:47:15,000
它的很多东西是可以

2731
01:47:16,000 --> 01:47:17,000
在运行时改变的

2732
01:47:17,000 --> 01:47:21,000
比如说我们司空见惯的这样一个 layout

2733
01:47:21,000 --> 01:47:24,000
就是下面是一片可以编辑的区域

2734
01:47:24,000 --> 01:47:25,000
然后上面有一堆菜单栏

2735
01:47:25,000 --> 01:47:27,000
菜单栏里面的每个命令

2736
01:47:27,000 --> 01:47:31,000
比如说 edit view 或者是 format

2737
01:47:31,000 --> 01:47:36,000
你会觉得点 edit

2738
01:47:36,000 --> 01:47:38,000
然后下面出现一个 drop down list

2739
01:47:38,000 --> 01:47:39,000
然后从里面选一个命令

2740
01:47:39,000 --> 01:47:40,000
是非常自然的事情

2741
01:47:40,000 --> 01:47:41,000
但是你有没有想过

2742
01:47:41,000 --> 01:47:45,000
假如说菜单栏这一行里面的

2743
01:47:45,000 --> 01:47:48,000
每一个字符也都是可以更改的呢

2744
01:47:48,000 --> 01:47:51,000
而 acme 它就是这样一种编辑器

2745
01:47:51,000 --> 01:47:52,000
acme 的

2746
01:47:52,000 --> 01:47:54,000
你打开一个 buffer

2747
01:47:54,000 --> 01:47:58,000
或者是打开一个编辑文件的区域的时候

2748
01:47:58,000 --> 01:48:02,000
它上面会有一排菜单栏那样的东西

2749
01:48:02,000 --> 01:48:04,000
而且它的确也是菜单栏

2750
01:48:04,000 --> 01:48:05,000
比如说有 edit

2751
01:48:05,000 --> 01:48:07,000
有 del 之类的

2752
01:48:07,000 --> 01:48:08,000
然后比如说你点一下 edit

2753
01:48:08,000 --> 01:48:10,000
而且我记得应该是

2754
01:48:10,000 --> 01:48:11,000
对 acme 是一个

2755
01:48:11,000 --> 01:48:15,000
一定要用三件鼠标才能操作的编辑器

2756
01:48:15,000 --> 01:48:18,000
你用左键点一行文字是选中它

2757
01:48:18,000 --> 01:48:20,000
然后用中键点一行文字是 whatever

2758
01:48:20,000 --> 01:48:22,000
应该是执行吧

2759
01:48:22,000 --> 01:48:25,000
然后用右键点又有其他的功用

2760
01:48:25,000 --> 01:48:28,000
就是如果你用左键点一下

2761
01:48:28,000 --> 01:48:31,000
那个菜单栏里面的 edit

2762
01:48:31,000 --> 01:48:33,000
不会有任何反应

2763
01:48:33,000 --> 01:48:35,000
你只会把光标放在 edit 那边

2764
01:48:35,000 --> 01:48:37,000
然后此时你可以改变这个 edit

2765
01:48:37,000 --> 01:48:39,000
比如说你可以把 edit 这个词删掉

2766
01:48:39,000 --> 01:48:40,000
然后把它改成

2767
01:48:40,000 --> 01:48:43,000
比如说 del

2768
01:48:43,000 --> 01:48:45,000
然后你再用你的中键去

2769
01:48:45,000 --> 01:48:45,000
再用你的中键去

2770
01:48:45,000 --> 01:48:46,000
点一下这个 del

2771
01:48:46,000 --> 01:48:47,000
你会发现

2772
01:48:47,000 --> 01:48:51,000
你原来在那个编辑区里面

2773
01:48:51,000 --> 01:48:53,000
被选中了一段文字

2774
01:48:53,000 --> 01:48:54,000
被删掉了

2775
01:48:54,000 --> 01:48:57,000
对就是它是一个

2776
01:48:57,000 --> 01:49:02,000
它的所谓可定制的这么一个功能

2777
01:49:02,000 --> 01:49:06,000
被扩展到了用户界面本身

2778
01:49:06,000 --> 01:49:07,000
而且

2779
01:49:07,000 --> 01:49:10,000
所以它是一个可以编辑自己的编辑器

2780
01:49:10,000 --> 01:49:14,000
对它不仅能够配置自己

2781
01:49:14,000 --> 01:49:15,000
而且能够编辑自己

2782
01:49:15,000 --> 01:49:15,000
对

2783
01:49:15,000 --> 01:49:19,000
就是非常先锋的一种使用方式

2784
01:49:19,000 --> 01:49:20,000
应该说

2785
01:49:20,000 --> 01:49:21,000
就像我说的

2786
01:49:21,000 --> 01:49:22,000
就像 Lisp 一样

2787
01:49:22,000 --> 01:49:25,000
它的使用是如此灵活

2788
01:49:25,000 --> 01:49:27,000
以至于人们不知道应该怎么使用它

2789
01:49:27,000 --> 01:49:31,000
对

2790
01:49:31,000 --> 01:49:34,000
所以其实你看

2791
01:49:34,000 --> 01:49:37,000
像他们之前那个购语言的那个

2792
01:49:37,000 --> 01:49:38,000
那个什么

2793
01:49:38,000 --> 01:49:39,000
这个日期的展示

2794
01:49:39,000 --> 01:49:40,000
就觉得很奇怪

2795
01:49:40,000 --> 01:49:40,000
对吧

2796
01:49:40,000 --> 01:49:42,000
这种方式编辑也是很奇怪

2797
01:49:42,000 --> 01:49:43,000
对

2798
01:49:43,000 --> 01:49:45,000
有时候我觉得这些比较

2799
01:49:45,000 --> 01:49:45,000
比较有用的方式

2800
01:49:45,000 --> 01:49:46,000
比较

2801
01:49:46,000 --> 01:49:49,000
unorthodox 的

2802
01:49:49,000 --> 01:49:52,000
就是非正统的方式

2803
01:49:52,000 --> 01:49:55,000
或者说非我们五倍平庸之人

2804
01:49:55,000 --> 01:49:56,000
所能理解

2805
01:49:56,000 --> 01:49:58,000
想象出的特别的方式

2806
01:49:58,000 --> 01:49:59,000
有时候比较

2807
01:49:59,000 --> 01:50:01,000
非常的 pragmatic

2808
01:50:01,000 --> 01:50:03,000
有时候就非常的 alien

2809
01:50:03,000 --> 01:50:04,000
非常非常的

2810
01:50:04,000 --> 01:50:08,000
就非常奇异

2811
01:50:08,000 --> 01:50:10,000
有时候不知道是件好事还是坏事

2812
01:50:10,000 --> 01:50:12,000
但无论如何对于你的

2813
01:50:12,000 --> 01:50:15,000
跳出你的这个 comfortable zone

2814
01:50:15,000 --> 01:50:15,000
是有据实的

2815
01:50:15,000 --> 01:50:16,000
有帮助

2816
01:50:16,000 --> 01:50:16,000
对

2817
01:50:16,000 --> 01:50:18,000
就有时候你真的是

2818
01:50:18,000 --> 01:50:21,000
如果你听到一个非常激进

2819
01:50:21,000 --> 01:50:23,000
古怪或奇怪的观点

2820
01:50:23,000 --> 01:50:23,000
而且有这有

2821
01:50:23,000 --> 01:50:25,000
你有知道一个是一个

2822
01:50:25,000 --> 01:50:27,000
什么很厉害的人在这么做

2823
01:50:27,000 --> 01:50:29,000
你可能要放下所有成见

2824
01:50:29,000 --> 01:50:30,000
然后去看一下

2825
01:50:30,000 --> 01:50:31,000
想一想

2826
01:50:31,000 --> 01:50:32,000
就是所谓的叫什么

2827
01:50:32,000 --> 01:50:34,000
give you five minutes

2828
01:50:34,000 --> 01:50:36,000
去去去想一下

2829
01:50:36,000 --> 01:50:37,000
他为什么会这样

2830
01:50:37,000 --> 01:50:37,000
有什么

2831
01:50:37,000 --> 01:50:38,000
对

2832
01:50:38,000 --> 01:50:39,000
你就像一个风险投资人

2833
01:50:39,000 --> 01:50:41,000
然后进来一个站着经营的创业者

2834
01:50:41,000 --> 01:50:43,000
你要先听听他

2835
01:50:43,000 --> 01:50:44,000
到底要说什么不是

2836
01:50:44,000 --> 01:50:45,000
然后想一想

2837
01:50:45,000 --> 01:50:47,000
这个东西能不能成立

2838
01:50:47,000 --> 01:50:47,000
对

2839
01:50:47,000 --> 01:50:49,000
所以有时候会

2840
01:50:49,000 --> 01:50:51,000
你会觉得学到一些完全不一样的

2841
01:50:51,000 --> 01:50:52,000
新鲜的一些东西

2842
01:50:52,000 --> 01:50:52,000
我觉得

2843
01:50:52,000 --> 01:50:53,000
对

2844
01:50:53,000 --> 01:50:55,000
而且就像风险投资商一样

2845
01:50:55,000 --> 01:50:56,000
如果你听

2846
01:50:56,000 --> 01:50:58,000
你接受了这个观点之后

2847
01:50:58,000 --> 01:50:58,000
你觉得

2848
01:50:58,000 --> 01:51:00,000
你愿意把你的时间

2849
01:51:00,000 --> 01:51:03,000
这一个资本投入进去

2850
01:51:03,000 --> 01:51:04,000
学习一下

2851
01:51:04,000 --> 01:51:06,000
投资在这个 idea 上面

2852
01:51:06,000 --> 01:51:09,000
也许将来的回报是非常高的

2853
01:51:09,000 --> 01:51:10,000
就好像

2854
01:51:10,000 --> 01:51:11,000
就比如说 vim

2855
01:51:11,000 --> 01:51:14,000
就是我在 kura 上找到了一个对比

2856
01:51:14,000 --> 01:51:15,000
那个 vim 和 emax

2857
01:51:15,000 --> 01:51:16,000
的答案里面

2858
01:51:16,000 --> 01:51:18,000
这个作者就说

2859
01:51:18,000 --> 01:51:20,000
你在 vim 里面的投资

2860
01:51:20,000 --> 01:51:23,000
会对于你一生来说

2861
01:51:23,000 --> 01:51:24,000
都是有不注意的

2862
01:51:24,000 --> 01:51:25,000
而且可以在

2863
01:51:25,000 --> 01:51:27,000
零零碩碩很多其他的

2864
01:51:27,000 --> 01:51:29,000
那个工具里面得到应用

2865
01:51:29,000 --> 01:51:30,000
比如说

2866
01:51:30,000 --> 01:51:31,000
最简单的一个例子

2867
01:51:31,000 --> 01:51:32,000
j 和 k

2868
01:51:32,000 --> 01:51:34,000
这个

2869
01:51:34,000 --> 01:51:36,000
你按下 j 是下一个

2870
01:51:36,000 --> 01:51:37,000
按下 k 是上一个

2871
01:51:37,000 --> 01:51:37,000
在

2872
01:51:37,000 --> 01:51:39,000
就下一行上一行

2873
01:51:39,000 --> 01:51:41,000
在 vim 里面是这样

2874
01:51:41,000 --> 01:51:42,000
在 gmail 里面也是这样

2875
01:51:42,000 --> 01:51:43,000
对

2876
01:51:43,000 --> 01:51:43,000
所以

2877
01:51:43,000 --> 01:51:45,000
gmail 里面如果你启用了一个

2878
01:51:45,000 --> 01:51:46,000
叫什么

2879
01:51:46,000 --> 01:51:48,000
快捷键模式的话

2880
01:51:48,000 --> 01:51:50,000
你会发现有很多这种键绑定式

2881
01:51:50,000 --> 01:51:51,000
非常有 vim 风格

2882
01:51:51,000 --> 01:51:52,000
对

2883
01:51:52,000 --> 01:51:55,000
就是如果你学会了 vim 之后

2884
01:51:55,000 --> 01:51:58,000
你的经验是可以应用在很多

2885
01:51:58,000 --> 01:52:00,000
其他的工具上面的

2886
01:52:00,000 --> 01:52:00,000
而反过来

2887
01:52:00,000 --> 01:52:03,000
如果你把你的时间花在 emax 上面的话

2888
01:52:03,000 --> 01:52:06,000
你会发现你就局限在 emax 里面了

2889
01:52:06,000 --> 01:52:08,000
当然 emax 是一个非常庞大

2890
01:52:08,000 --> 01:52:09,000
广大的天地

2891
01:52:09,000 --> 01:52:10,000
但是

2892
01:52:10,000 --> 01:52:13,000
你所有的知识就仅仅只是在 emax 内部

2893
01:52:13,000 --> 01:52:13,000
而已

2894
01:52:13,000 --> 01:52:15,000
当然部分原因

2895
01:52:15,000 --> 01:52:17,000
也就是因为 lisp 这个东西

2896
01:52:17,000 --> 01:52:19,000
对

2897
01:52:19,000 --> 01:52:19,000
就是一个

2898
01:52:19,000 --> 01:52:20,000
对

2899
01:52:20,000 --> 01:52:20,000
还有一个

2900
01:52:20,000 --> 01:52:26,000
最早的 firefox 有一个插件叫做

2901
01:52:26,000 --> 01:52:28,000
vaporator 吧

2902
01:52:28,000 --> 01:52:29,000
应该是

2903
01:52:29,000 --> 01:52:33,000
就是可以让你的 firefox 的

2904
01:52:33,000 --> 01:52:35,000
你不用鼠标操作浏览器了

2905
01:52:35,000 --> 01:52:37,000
你可以用命令行

2906
01:52:37,000 --> 01:52:38,000
不是命令行

2907
01:52:38,000 --> 01:52:40,000
就是 vim 快捷键的方式去操作

2908
01:52:40,000 --> 01:52:41,000
它来翻译

2909
01:52:41,000 --> 01:52:43,000
你居然没有在用这种东西吗

2910
01:52:43,000 --> 01:52:44,000
我有

2911
01:52:44,000 --> 01:52:45,000
firefox

2912
01:52:45,000 --> 01:52:46,000
很早之前就在用这个

2913
01:52:46,000 --> 01:52:47,000
后来也有一个

2914
01:52:47,000 --> 01:52:49,000
在 chrome 上面也有

2915
01:52:49,000 --> 01:52:51,000
我一直都在用它

2916
01:52:51,000 --> 01:52:53,000
最开始是在用一个叫做

2917
01:52:53,000 --> 01:52:55,000
最开始是用一个叫做 vimnium

2918
01:52:55,000 --> 01:52:59,000
后来现在用东西叫做 cvim

2919
01:52:59,000 --> 01:53:00,000
就是小写的 c

2920
01:53:00,000 --> 01:53:01,000
然后换成 vim

2921
01:53:01,000 --> 01:53:03,000
就是 chrome vim

2922
01:53:03,000 --> 01:53:04,000
可以理解

2923
01:53:04,000 --> 01:53:07,000
而且这个插件已经逆天到什么地步

2924
01:53:07,000 --> 01:53:08,000
就是它可以在里面

2925
01:53:08,000 --> 01:53:12,000
进入这个 visual mode

2926
01:53:12,000 --> 01:53:14,000
就是你用 j 向下移动

2927
01:53:15,000 --> 01:53:17,000
然后用 f

2928
01:53:17,000 --> 01:53:19,000
然后你按下 f 之后

2929
01:53:19,000 --> 01:53:21,000
屏幕上所有的链接都会被高亮

2930
01:53:21,000 --> 01:53:24,000
然后每一个链接会有一个

2931
01:53:24,000 --> 01:53:26,000
两个字母到三个字母的组合

2932
01:53:26,000 --> 01:53:27,000
然后你接下来按那两个字母

2933
01:53:27,000 --> 01:53:28,000
那个链接就会被打开

2934
01:53:28,000 --> 01:53:29,000
这个我就知道

2935
01:53:29,000 --> 01:53:31,000
也有这个功能吗

2936
01:53:31,000 --> 01:53:31,000
对

2937
01:53:31,000 --> 01:53:34,000
然后最逆天的是你按下 v

2938
01:53:34,000 --> 01:53:35,000
就进入了 visual mode

2939
01:53:35,000 --> 01:53:37,000
在 visual mode 之下

2940
01:53:37,000 --> 01:53:40,000
你按 j 和 k 可以移动光标

2941
01:53:40,000 --> 01:53:41,000
对

2942
01:53:41,000 --> 01:53:43,000
然后在你移动光标的同时

2943
01:53:43,000 --> 01:53:44,000
可以选中文字

2944
01:53:44,000 --> 01:53:48,000
然后这个时候再回到 normal mode

2945
01:53:48,000 --> 01:53:49,000
按一下 y

2946
01:53:49,000 --> 01:53:51,000
你就可以把刚才选中的文字

2947
01:53:51,000 --> 01:53:54,000
复制到剪贴板里面

2948
01:53:54,000 --> 01:53:55,000
完全不需要用鼠标

2949
01:53:55,000 --> 01:53:58,000
我之前用过非常长一段时间

2950
01:53:58,000 --> 01:53:59,000
那个 vibrator

2951
01:53:59,000 --> 01:54:02,000
后来切到那个 chrome

2952
01:54:02,000 --> 01:54:04,000
当时最早的时候 chrome 是没有这种插件的

2953
01:54:04,000 --> 01:54:05,000
也就没有用了

2954
01:54:05,000 --> 01:54:06,000
后来好像也就把这些事情

2955
01:54:06,000 --> 01:54:09,000
对我是第一时间出现这样的插件的时候

2956
01:54:09,000 --> 01:54:10,000
就开始用

2957
01:54:10,000 --> 01:54:12,000
所以我一直非常关注

2958
01:54:12,000 --> 01:54:14,000
我可以凭着

2959
01:54:14,000 --> 01:54:16,000
自己这个小白鼠的经验来

2960
01:54:16,000 --> 01:54:18,000
向大家拍着胸部推广

2961
01:54:18,000 --> 01:54:20,000
cvim 这个插件

2962
01:54:20,000 --> 01:54:22,000
一定绝对是所有的

2963
01:54:22,000 --> 01:54:23,000
cvim 对吧

2964
01:54:23,000 --> 01:54:23,000
对

2965
01:54:23,000 --> 01:54:24,000
cvim 对

2966
01:54:24,000 --> 01:54:28,000
所有的这个 vim 化 chrome 的插件里面

2967
01:54:28,000 --> 01:54:29,000
最好用的一个

2968
01:54:29,000 --> 01:54:32,000
那个什么 safari 有类似这种东西吗

2969
01:54:32,000 --> 01:54:35,000
safari 有一个

2970
01:54:35,000 --> 01:54:37,000
但是缺的要死

2971
01:54:37,000 --> 01:54:37,000
对

2972
01:54:37,000 --> 01:54:38,000
这就是为什么

2973
01:54:38,000 --> 01:54:39,000
有一天

2974
01:54:39,000 --> 01:54:40,000
就是不是

2975
01:54:40,000 --> 01:54:43,000
那个刚生了 yosemite 之后

2976
01:54:43,000 --> 01:54:44,000
用了大概

2977
01:54:44,000 --> 01:54:47,000
四个小时的 safari

2978
01:54:47,000 --> 01:54:49,000
然后屁股尿流的逃回了 chrome

2979
01:54:49,000 --> 01:54:51,000
就是因为完全不能用了

2980
01:54:51,000 --> 01:54:53,000
我明白你的苦衷

2981
01:54:53,000 --> 01:54:57,000
因为现在我现在我相当长一段 safari 作为的主力浏览器了

2982
01:54:57,000 --> 01:55:00,000
但所谓主力就 60%左右的时间

2983
01:55:00,000 --> 01:55:04,000
因为很多时候要切到 chrome 连用那个 flash 插件

2984
01:55:04,000 --> 01:55:05,000
非常不幸

2985
01:55:05,000 --> 01:55:09,000
但是我发现自从有这个多点触控的触摸板之后

2986
01:55:09,000 --> 01:55:11,000
我就很少用那种方式

2987
01:55:11,000 --> 01:55:13,000
就是浏览网页的时候

2988
01:55:13,000 --> 01:55:14,000
少使用了

2989
01:55:14,000 --> 01:55:16,000
使用键盘操作

2990
01:55:16,000 --> 01:55:17,000
不

2991
01:55:17,000 --> 01:55:21,000
可是你觉得你真的觉得多点触控要比用键盘方便吗

2992
01:55:21,000 --> 01:55:22,000
呃不会啊

2993
01:55:22,000 --> 01:55:25,000
就从销量上讲肯定是不不不不好的

2994
01:55:25,000 --> 01:55:26,000
但是我懒

2995
01:55:26,000 --> 01:55:28,000
我发现我现在越来越懒了

2996
01:55:28,000 --> 01:55:30,000
就是懒得去配懒得去碰它

2997
01:55:30,000 --> 01:55:32,000
然后去配置那么多东西

2998
01:55:32,000 --> 01:55:34,000
然后呃

2999
01:55:34,000 --> 01:55:36,000
你可能是受了什么重呢

3000
01:55:36,000 --> 01:55:39,000
即便不用配置的话

3001
01:55:39,000 --> 01:55:42,000
呃多点触控

3002
01:55:42,000 --> 01:55:44,000
我就是我现在

3003
01:55:44,000 --> 01:55:47,000
我现在就是下意识的会去按空格键向下翻页

3004
01:55:47,000 --> 01:55:49,000
在在浏览器里面

3005
01:55:49,000 --> 01:55:51,000
而不是用两指向下卷动

3006
01:55:51,000 --> 01:55:53,000
但是你要向上翻怎么办

3007
01:55:53,000 --> 01:55:54,000
你没办法向上翻

3008
01:55:54,000 --> 01:55:58,000
但是 99%的时间你难道不都是在向下翻吗

3009
01:55:58,000 --> 01:56:00,000
有就向上有这么一个问题

3010
01:56:00,000 --> 01:56:03,000
就空格键它翻页它那个高度是固定的嘛

3011
01:56:03,000 --> 01:56:05,000
就一次都是翻译品吗

3012
01:56:05,000 --> 01:56:07,000
可这难道不是一件好事吗

3013
01:56:07,000 --> 01:56:13,000
呃为有时候我我想把我因为我不说你这一个网页从上到下一个一个一个网页哈

3014
01:56:13,000 --> 01:56:14,000
我想把我

3015
01:56:14,000 --> 01:56:16,000
因为我现在读到可能这个网页的下半部分了

3016
01:56:16,000 --> 01:56:17,000
我有一种不好的习惯

3017
01:56:17,000 --> 01:56:23,000
我会想把我正在读的那一部分字挪到屏幕的中间就高度的中间来读

3018
01:56:23,000 --> 01:56:25,000
所以你是那个很臭

3019
01:56:25,000 --> 01:56:30,000
家 L 的就是 emax 里面的可能出在我怎么会知道

3020
01:56:31,000 --> 01:56:37,000
emax 的快捷键而不知道 VM 里面没有这个功能也可以问的快捷键是什么

3021
01:56:37,000 --> 01:56:38,000
哈

3022
01:56:38,000 --> 01:56:42,000
那为什么你我还这个用的满少的你也不记得你也不记得

3023
01:56:42,000 --> 01:56:44,000
但是在 VM 在 emax 里面

3024
01:56:44,000 --> 01:56:46,000
这个网络是很少在 L

3025
01:56:46,000 --> 01:56:47,000
我记得可以试一下

3026
01:56:48,000 --> 01:56:49,000
我试一下

3027
01:56:49,000 --> 01:56:52,000
就是把当前好像移动到屏幕的中间对对对对对

3028
01:56:52,000 --> 01:56:54,000
我知道你说的那个东西

3029
01:56:54,000 --> 01:56:55,000
如果没记错的话

3030
01:56:55,000 --> 01:57:00,000
应该是这个不是一直下一行还是 J 什么

3031
01:57:00,000 --> 01:57:00,000
啊

3032
01:57:00,000 --> 01:57:02,000
威小姐记不清楚了

3033
01:57:02,000 --> 01:57:02,000
密度吧

3034
01:57:02,000 --> 01:57:04,000
对看想不想对

3035
01:57:04,000 --> 01:57:05,000
anyway 啊

3036
01:57:05,000 --> 01:57:08,000
就是就我知道这个习惯其实效效率挺低

3037
01:57:08,000 --> 01:57:10,000
但是就是手贱

3038
01:57:10,000 --> 01:57:12,000
忍不住要去拨弄一下这个触碰板

3039
01:57:12,000 --> 01:57:14,000
而且就是如果你用触控板的话

3040
01:57:14,000 --> 01:57:16,000
你可以很方便的

3041
01:57:16,000 --> 01:57:19,000
因为这个时候这张网就特别是在麦克上面下哈

3042
01:57:19,000 --> 01:57:22,000
这个网页的这个流畅程度就像一张纸一样

3043
01:57:22,000 --> 01:57:27,000
你可以摆到你想要的任何一个像素的位置和精度吗

3044
01:57:27,000 --> 01:57:27,000
嗯嗯啊

3045
01:57:27,000 --> 01:57:29,000
所以我觉得这个时候还蛮好的

3046
01:57:29,000 --> 01:57:34,000
所以现在我就一直在用触摸板再去浏览网页去滑来滑去

3047
01:57:34,000 --> 01:57:39,000
而且又是那个 safari 面可以用这个叫什么左滑右滑去回退那些吗

3048
01:57:40,000 --> 01:57:41,000
chrome 里面可以啊

3049
01:57:41,000 --> 01:57:42,000
的 chrome 里面没有什么东西啊

3050
01:57:42,000 --> 01:57:43,000
没有事

3051
01:57:43,000 --> 01:57:45,000
只不过是视觉效果不是不是不是

3052
01:57:45,000 --> 01:57:49,000
我觉得他的那个对这个触摸板的反馈跟发丝发是不一样的啊

3053
01:57:49,000 --> 01:57:50,000
对有点 buggy

3054
01:57:50,000 --> 01:57:51,000
对很奇怪

3055
01:57:51,000 --> 01:57:52,000
我不知道为什么

3056
01:57:52,000 --> 01:57:55,000
但是 safari 的那个感觉流畅的多啊

3057
01:57:55,000 --> 01:57:55,000
然后我很喜欢哎

3058
01:57:55,000 --> 01:58:07,000
我想起来了对在 vm 里面这个功能是 z.z.对 z.是把当前行就是颗色所在当前好像挪到屏幕的中间

3059
01:58:08,000 --> 01:58:09,000
是这样吗

3060
01:58:09,000 --> 01:58:10,000
哎

3061
01:58:10,000 --> 01:58:11,000
真的吗

3062
01:58:11,000 --> 01:58:11,000
ok

3063
01:58:12,000 --> 01:58:17,000
就是这个使用来压制的 11 S 是真的进步高分知道了

3064
01:58:18,000 --> 01:58:20,000
1000

3065
01:58:20,000 --> 01:58:21,000
25

3066
01:58:21,000 --> 01:58:22,000
成功了

3067
01:58:22,000 --> 01:58:23,000
借着这个功能

3068
01:58:23,000 --> 01:58:25,000
能不能通过这个方式

3069
01:58:25,000 --> 01:58:25,000
只会显示一下

3070
01:58:25,000 --> 01:58:26,000
就无所谓了

3071
01:58:27,000 --> 01:58:27,000
可以吗

3072
01:58:27,000 --> 01:58:27,000
所以是我们讲的话

3073
01:58:27,000 --> 01:58:30,000
就是这个可见我这个功能也是不常用的

3074
01:58:30,000 --> 01:58:30,000
ok

3075
01:58:32,000 --> 01:58:37,000
第一就刚才就是那个问题就是其实我现在越来越懒 能系统原生的就用系统原生的懒得去配置了

3076
01:58:40,000 --> 01:58:40,000
对

3077
01:58:40,000 --> 01:58:42,000
用 Linux 图形版的话

3078
01:58:42,000 --> 01:58:42,000
还是 Win

3079
01:58:42,000 --> 01:58:46,000
那有没有什么初学者

3080
01:58:46,000 --> 01:58:47,000
友好的编辑器

3081
01:58:47,000 --> 01:58:51,000
它有一个 Gedit

3082
01:58:51,000 --> 01:58:52,000
我记得

3083
01:58:52,000 --> 01:58:55,000
可是 Gedit 是一个非常废的编辑器

3084
01:58:55,000 --> 01:58:55,000
要我说的

3085
01:58:55,000 --> 01:58:58,000
你要初学者那么高级强大的编辑器

3086
01:58:58,000 --> 01:59:01,000
他也可以找不着方向

3087
01:59:01,000 --> 01:59:03,000
好吧

3088
01:59:03,000 --> 01:59:06,000
可是我觉得 Gedit 就有点像 NotePad

3089
01:59:06,000 --> 01:59:08,000
一开始就不应该

3090
01:59:08,000 --> 01:59:09,000
我觉得它比 NotePad 好多了

3091
01:59:09,000 --> 01:59:12,000
你这样踩它真的好吗

3092
01:59:12,000 --> 01:59:13,000
好吧

3093
01:59:13,000 --> 01:59:15,000
还有一个

3094
01:59:15,000 --> 01:59:17,000
叫什么 Nano

3095
01:59:17,000 --> 01:59:19,000
Nano

3096
01:59:19,000 --> 01:59:21,000
Nano 可以叫什么

3097
01:59:21,000 --> 01:59:23,000
乞丐版 eMax

3098
01:59:23,000 --> 01:59:25,000
Nano Pico

3099
01:59:25,000 --> 01:59:27,000
就像 Microsoft

3100
01:59:27,000 --> 01:59:28,000
Nuosoft

3101
01:59:28,000 --> 01:59:30,000
Nano 下面还有个 Pico

3102
01:59:30,000 --> 01:59:33,000
这些一个一个比小

3103
01:59:33,000 --> 01:59:35,000
那个就纯粹是给

3104
01:59:35,000 --> 01:59:37,000
就是

3105
01:59:37,000 --> 01:59:38,000
千年等一回

3106
01:59:38,000 --> 01:59:39,000
配置

3107
01:59:39,000 --> 01:59:40,000
一个配置文件的时候用的

3108
01:59:40,000 --> 01:59:42,000
而且真的很小

3109
01:59:42,000 --> 01:59:44,000
对

3110
01:59:44,000 --> 01:59:45,000
Nano 是非常非常小

3111
01:59:45,000 --> 01:59:46,000
但我

3112
01:59:46,000 --> 01:59:48,000
我每次用 Nano 都有一种

3113
01:59:48,000 --> 01:59:50,000
我到底在用什么的错觉

3114
01:59:50,000 --> 01:59:51,000
我到底是在干嘛

3115
01:59:51,000 --> 01:59:54,000
乞丐版 eMax 都说了吗

3116
01:59:54,000 --> 01:59:54,000
对

3117
01:59:54,000 --> 01:59:55,000
可是

3118
01:59:55,000 --> 01:59:58,000
就它只有最基本的 eMax 的键榜地

3119
01:59:58,000 --> 02:00:01,000
没有任何可以扩展的功能

3120
02:00:01,000 --> 02:00:01,000
对

3121
02:00:01,000 --> 02:00:03,000
就我何必如此呢

3122
02:00:03,000 --> 02:00:04,000
我只需要

3123
02:00:04,000 --> 02:00:06,000
立刻退出这个 Gedit 编辑器

3124
02:00:06,000 --> 02:00:08,000
然后设定一下 Edit 编辑

3125
02:00:08,000 --> 02:00:08,000
就可以

3126
02:00:09,000 --> 02:00:10,000
因为它小

3127
02:00:10,000 --> 02:00:13,000
它可以在很多这种发行版里面

3128
02:00:13,000 --> 02:00:14,000
作为一个最最基础的

3129
02:00:14,000 --> 02:00:15,000
这个编辑器在用

3130
02:00:15,000 --> 02:00:18,000
可是 V 也不大

3131
02:00:18,000 --> 02:00:18,000
就像

3132
02:00:18,000 --> 02:00:21,000
就像 Mac 上面的默认 Vim

3133
02:00:21,000 --> 02:00:23,000
我刚才查了一下是 1.5 兆

3134
02:00:23,000 --> 02:00:25,000
然后 eMax 24 兆

3135
02:00:25,000 --> 02:00:27,000
你这就已经用兆来衡量了

3136
02:00:27,000 --> 02:00:27,000
人家

3137
02:00:27,000 --> 02:00:29,000
Pico 是 K 是吧

3138
02:00:29,000 --> 02:00:30,000
要用 KB 来衡量

3139
02:00:30,000 --> 02:00:31,000
OK

3140
02:00:31,000 --> 02:00:33,000
还是有很大的数量级的差异的

3141
02:00:33,000 --> 02:00:34,000
这里面

3142
02:00:34,000 --> 02:00:35,000
所以我还是能理解

3143
02:00:35,000 --> 02:00:36,000
就是有时候

3144
02:00:36,000 --> 02:00:38,000
比如说它根本就不需要编辑什么

3145
02:00:38,000 --> 02:00:39,000
就是临时

3146
02:00:39,000 --> 02:00:40,000
可能改配置文件

3147
02:00:40,000 --> 02:00:41,000
某一个字符

3148
02:00:41,000 --> 02:00:42,000
或者某一个

3149
02:00:42,000 --> 02:00:43,000
改一行

3150
02:00:43,000 --> 02:00:43,000
对

3151
02:00:43,000 --> 02:00:45,000
所以它根本也就不需要

3152
02:00:45,000 --> 02:00:46,000
那么多麻烦的功能

3153
02:00:46,000 --> 02:00:48,000
就其实也还可以理解吧

3154
02:00:48,000 --> 02:00:49,000
OK

3155
02:00:49,000 --> 02:00:51,000
不需要

3156
02:00:51,000 --> 02:00:52,000
可是不需要麻烦的功能

3157
02:00:52,000 --> 02:00:54,000
你干嘛要上 Linux

3158
02:00:54,000 --> 02:00:56,000
有什么办法

3159
02:00:56,000 --> 02:00:58,000
对

3160
02:00:58,000 --> 02:01:02,000
我们基本上聊完了编辑器

3161
02:01:02,000 --> 02:01:02,000
对

3162
02:01:02,000 --> 02:01:05,000
可以终于进入

3163
02:01:05,000 --> 02:01:06,000
这节目已经过去了

3164
02:01:06,000 --> 02:01:07,000
四分之三的时候

3165
02:01:07,000 --> 02:01:08,000
终于

3166
02:01:08,000 --> 02:01:09,000
可以进入

3167
02:01:09,000 --> 02:01:11,000
我们的下一个环节

3168
02:01:11,000 --> 02:01:13,000
就是 IDE 了

3169
02:01:13,000 --> 02:01:14,000
我不知道

3170
02:01:14,000 --> 02:01:16,000
我都不知道这个怎么从何讲起

3171
02:01:16,000 --> 02:01:19,000
其实首先我自己用的 IDE

3172
02:01:19,000 --> 02:01:21,000
是用的非常少

3173
02:01:21,000 --> 02:01:22,000
OK

3174
02:01:22,000 --> 02:01:23,000
我是因为工作原因

3175
02:01:23,000 --> 02:01:24,000
不得不用 IDE

3176
02:01:24,000 --> 02:01:27,000
所以你在工作中哪个 Eclipse

3177
02:01:27,000 --> 02:01:30,000
我用 Eclipse 和 Xcode

3178
02:01:30,000 --> 02:01:31,000
OK

3179
02:01:31,000 --> 02:01:33,000
因为我讲一下感受

3180
02:01:33,000 --> 02:01:37,000
用 Eclipse 的时候

3181
02:01:37,000 --> 02:01:38,000
感觉在地狱

3182
02:01:38,000 --> 02:01:40,000
用 Xcode 的时候

3183
02:01:40,000 --> 02:01:45,000
好像回到了天堂还是太夸张了

3184
02:01:45,000 --> 02:01:46,000
就我们可以这样说

3185
02:01:46,000 --> 02:01:47,000
Xcode 只有两

3186
02:01:47,000 --> 02:01:48,000
Xcode 就

3187
02:01:48,000 --> 02:01:52,000
先说 Visual Studio 好了

3188
02:01:52,000 --> 02:01:52,000
OK

3189
02:01:52,000 --> 02:01:53,000
Visual Studio

3190
02:01:53,000 --> 02:01:56,000
作为 Windows 上的老牌

3191
02:01:56,000 --> 02:02:00,000
或者说甚至说是龙头老大的 IDE

3192
02:02:00,000 --> 02:02:02,000
它有很多很多版本

3193
02:02:02,000 --> 02:02:02,000
对吧

3194
02:02:02,000 --> 02:02:02,000
对

3195
02:02:02,000 --> 02:02:04,000
有 Ultimate 版本

3196
02:02:04,000 --> 02:02:05,000
有 Prenum 版本

3197
02:02:05,000 --> 02:02:06,000
有 Test Pro 版本

3198
02:02:06,000 --> 02:02:07,000
有 Pro 版本

3199
02:02:07,000 --> 02:02:08,000
还有什么 Express Edition

3200
02:02:08,000 --> 02:02:09,000
Whatever

3201
02:02:09,000 --> 02:02:12,000
所以它们这些版本有什么区别吗

3202
02:02:12,000 --> 02:02:12,000
对

3203
02:02:12,000 --> 02:02:13,000
其实是有区别的

3204
02:02:13,000 --> 02:02:15,000
它专门有一页

3205
02:02:15,000 --> 02:02:15,000
一个 metrics

3206
02:02:15,000 --> 02:02:18,000
来告诉你每一个版本之间

3207
02:02:18,000 --> 02:02:20,000
有什么样具体的差别

3208
02:02:20,000 --> 02:02:22,000
比如说 Ultimate 有所谓的

3209
02:02:22,000 --> 02:02:25,000
Record Tracing 功能

3210
02:02:25,000 --> 02:02:28,000
就是你可以把用户的交互录下来

3211
02:02:28,000 --> 02:02:32,000
然后重新播放用户的交互

3212
02:02:32,000 --> 02:02:34,000
然后在播放的过程中去 debug

3213
02:02:34,000 --> 02:02:35,000
之类

3214
02:02:35,000 --> 02:02:36,000
匪夷所思

3215
02:02:36,000 --> 02:02:37,000
凤凰凛角用的

3216
02:02:37,000 --> 02:02:38,000
都

3217
02:02:38,000 --> 02:02:40,000
都在 Ultimate 里面有所体现

3218
02:02:40,000 --> 02:02:43,000
然后 Pro 版本基本上是最亲民的一个版本

3219
02:02:43,000 --> 02:02:45,000
但仍旧是要钱的

3220
02:02:45,000 --> 02:02:48,000
我记得还有一个免费的针对学生的版本

3221
02:02:48,000 --> 02:02:49,000
对

3222
02:02:49,000 --> 02:02:50,000
What

3223
02:02:50,000 --> 02:02:51,000
针对学生

3224
02:02:51,000 --> 02:02:53,000
你是说 Express Edition 吗

3225
02:02:53,000 --> 02:02:53,000
还是

3226
02:02:53,000 --> 02:02:54,000
就叫 Express

3227
02:02:54,000 --> 02:02:55,000
Express 是免费的吗

3228
02:02:55,000 --> 02:02:58,000
Express Edition 可并不是针对学生

3229
02:02:58,000 --> 02:03:00,000
它只是针对那些

3230
02:03:00,000 --> 02:03:02,000
我不知道怎么形容

3231
02:03:02,000 --> 02:03:04,000
因为其实微软

3232
02:03:04,000 --> 02:03:04,000
Light User

3233
02:03:04,000 --> 02:03:06,000
对

3234
02:03:06,000 --> 02:03:07,000
微软给编辑器

3235
02:03:07,000 --> 02:03:08,000
微软给 IDE

3236
02:03:08,000 --> 02:03:10,000
定一个价格

3237
02:03:10,000 --> 02:03:11,000
或者说微软 IDE 是要钱的

3238
02:03:11,000 --> 02:03:13,000
在我们小时候

3239
02:03:13,000 --> 02:03:13,000
在我小时候

3240
02:03:13,000 --> 02:03:15,000
看起来好像是天经地义的事情

3241
02:03:15,000 --> 02:03:17,000
因为 Microsoft 不就是这样吗

3242
02:03:17,000 --> 02:03:18,000
什么东西都要钱

3243
02:03:18,000 --> 02:03:19,000
但

3244
02:03:19,000 --> 02:03:21,000
可是不就是因为这个

3245
02:03:21,000 --> 02:03:22,000
大家才去选择 Linux

3246
02:03:22,000 --> 02:03:22,000
可是

3247
02:03:22,000 --> 02:03:25,000
现在已经 2014 年了

3248
02:03:25,000 --> 02:03:28,000
Microsoft 仍旧靠卖 IDE 来赚钱

3249
02:03:28,000 --> 02:03:29,000
我觉得这个是比较

3250
02:03:29,000 --> 02:03:30,000
让人费解的一件事情

3251
02:03:30,000 --> 02:03:31,000
它这些的

3252
02:03:31,000 --> 02:03:33,000
就是购买者

3253
02:03:33,000 --> 02:03:34,000
大部分是企业

3254
02:03:34,000 --> 02:03:35,000
所以反正企业有钱

3255
02:03:35,000 --> 02:03:37,000
该宰就宰呗

3256
02:03:37,000 --> 02:03:37,000
对

3257
02:03:37,000 --> 02:03:38,000
所以

3258
02:03:38,000 --> 02:03:39,000
You are welcome

3259
02:03:39,000 --> 02:03:39,000
但

3260
02:03:39,000 --> 02:03:42,000
可是早期好吧

3261
02:03:42,000 --> 02:03:42,000
对吧

3262
02:03:42,000 --> 02:03:43,000
我也不知道该怎么

3263
02:03:43,000 --> 02:03:45,000
问题在于

3264
02:03:45,000 --> 02:03:47,000
对

3265
02:03:47,000 --> 02:03:49,000
你觉得它应该免费吗

3266
02:03:49,000 --> 02:03:49,000
还是怎么样

3267
02:03:49,000 --> 02:03:50,000
我是觉得

3268
02:03:50,000 --> 02:03:52,000
作为一个开发工具来说

3269
02:03:52,000 --> 02:03:55,000
难道更多的开发者

3270
02:03:55,000 --> 02:03:57,000
为你开发出更多的 APP 来说

3271
02:03:57,000 --> 02:03:57,000
对

3272
02:03:57,000 --> 02:03:58,000
难道不应该是

3273
02:03:58,000 --> 02:04:00,000
对你这个平台的那种注意吗

3274
02:04:00,000 --> 02:04:00,000
为什么要

3275
02:04:00,000 --> 02:04:02,000
为开发工具收费呢

3276
02:04:02,000 --> 02:04:04,000
这是一个好问题

3277
02:04:04,000 --> 02:04:05,000
这个怎么

3278
02:04:05,000 --> 02:04:06,000
你还记得那个

3279
02:04:06,000 --> 02:04:07,000
Steve Bormel

3280
02:04:07,000 --> 02:04:08,000
那个 Developer

3281
02:04:08,000 --> 02:04:09,000
developer

3282
02:04:09,000 --> 02:04:09,000
developer

3283
02:04:09,000 --> 02:04:10,000
developer

3284
02:04:10,000 --> 02:04:12,000
然后一窝

3285
02:04:12,000 --> 02:04:13,000
一窝下面还有汗

3286
02:04:13,000 --> 02:04:14,000
但是我们要

3287
02:04:14,000 --> 02:04:15,000
但是你买个编辑器

3288
02:04:15,000 --> 02:04:16,000
我们收你 300 刀

3289
02:04:16,000 --> 02:04:17,000
对没错

3290
02:04:17,000 --> 02:04:19,000
what the fuck

3291
02:04:19,000 --> 02:04:20,000
这个应该

3292
02:04:20,000 --> 02:04:20,000
express 版本

3293
02:04:20,000 --> 02:04:21,000
应该是免费的

3294
02:04:21,000 --> 02:04:22,000
就是可以

3295
02:04:22,000 --> 02:04:23,000
对 express 版本是免费的

3296
02:04:23,000 --> 02:04:25,000
但是 express 不能装插件

3297
02:04:25,000 --> 02:04:26,000
这就是这个意思

3298
02:04:26,000 --> 02:04:27,000
就是

3299
02:04:27,000 --> 02:04:28,000
对

3300
02:04:28,000 --> 02:04:29,000
我的毕业设计

3301
02:04:29,000 --> 02:04:30,000
是用

3302
02:04:30,000 --> 02:04:32,000
C-sharp 写的

3303
02:04:32,000 --> 02:04:33,000
然后我当时用的

3304
02:04:33,000 --> 02:04:34,000
应该就是 C-sharp 的

3305
02:04:34,000 --> 02:04:34,000
那个 express edition

3306
02:04:34,000 --> 02:04:35,000
OK

3307
02:04:35,000 --> 02:04:36,000
因为我

3308
02:04:36,000 --> 02:04:37,000
我也不知道

3309
02:04:37,000 --> 02:04:38,000
我们学校可能是有

3310
02:04:38,000 --> 02:04:39,000
Visual Studio 的

3311
02:04:39,000 --> 02:04:41,000
但只不过可能晚了十年

3312
02:04:41,000 --> 02:04:41,000
就是

3313
02:04:41,000 --> 02:04:43,000
是十年前的版本之类的

3314
02:04:43,000 --> 02:04:45,000
然后 Dawnette 那套东西

3315
02:04:45,000 --> 02:04:47,000
当时刚刚流行起来

3316
02:04:47,000 --> 02:04:47,000
根本还没有

3317
02:04:47,000 --> 02:04:48,000
因为我

3318
02:04:48,000 --> 02:04:49,000
我是从

3319
02:04:49,000 --> 02:04:52,000
visual basic

3320
02:04:52,000 --> 02:04:53,000
每次都要说

3321
02:04:53,000 --> 02:04:55,000
visual basic 这是什么

3322
02:04:55,000 --> 02:04:56,000
就每次都是

3323
02:04:56,000 --> 02:04:56,000
真爱

3324
02:04:56,000 --> 02:04:57,000
都是

3325
02:04:57,000 --> 02:04:59,000
暴露了

3326
02:04:59,000 --> 02:05:01,000
被压抑的这个

3327
02:05:01,000 --> 02:05:02,000
这个欲望

3328
02:05:02,000 --> 02:05:03,000
就是 visual basic

3329
02:05:03,000 --> 02:05:03,000
对

3330
02:05:03,000 --> 02:05:04,000
我最开始是用

3331
02:05:04,000 --> 02:05:06,000
Visual C++

3332
02:05:06,000 --> 02:05:07,000
6.0 吧

3333
02:05:07,000 --> 02:05:08,000
应该是

3334
02:05:08,000 --> 02:05:10,000
后来用 7.0

3335
02:05:10,000 --> 02:05:11,000
然后当 Dawnette 出来之后

3336
02:05:11,000 --> 02:05:12,000
立刻抛弃了

3337
02:05:12,000 --> 02:05:13,000
现在大家去用 Dawnette

3338
02:05:13,000 --> 02:05:14,000
因为觉得

3339
02:05:14,000 --> 02:05:15,000
C-sharp 当时

3340
02:05:15,000 --> 02:05:16,000
真觉得 C-sharp

3341
02:05:16,000 --> 02:05:17,000
是逆天级别的

3342
02:05:17,000 --> 02:05:19,000
那个好用的语言

3343
02:05:19,000 --> 02:05:20,000
对啊

3344
02:05:20,000 --> 02:05:21,000
因为那个时候

3345
02:05:21,000 --> 02:05:22,000
其实现在也是

3346
02:05:22,000 --> 02:05:23,000
现在它还是一个

3347
02:05:23,000 --> 02:05:24,000
设计的非常

3348
02:05:24,000 --> 02:05:25,000
好

3349
02:05:25,000 --> 02:05:25,000
就

3350
02:05:25,000 --> 02:05:28,000
起码有 85 分吧

3351
02:05:28,000 --> 02:05:28,000
的语言

3352
02:05:28,000 --> 02:05:29,000
对

3353
02:05:29,000 --> 02:05:32,000
是一个非常仅次于

3354
02:05:32,000 --> 02:05:34,000
此处

3355
02:05:34,000 --> 02:05:36,000
此处填入你最喜欢的语言

3356
02:05:36,000 --> 02:05:36,000
对

3357
02:05:36,000 --> 02:05:37,000
此处

3358
02:05:37,000 --> 02:05:39,000
仅次于 Dollar language 的语言

3359
02:05:39,000 --> 02:05:41,000
对

3360
02:05:41,000 --> 02:05:43,000
因为那个时候

3361
02:05:43,000 --> 02:05:44,000
我还挺喜欢 Pascal

3362
02:05:44,000 --> 02:05:45,000
就是 Delphi 的

3363
02:05:45,000 --> 02:05:47,000
然后 Delphi 的那个作者

3364
02:05:47,000 --> 02:05:48,000
跑去

3365
02:05:48,000 --> 02:05:49,000
做了 C-sharp

3366
02:05:49,000 --> 02:05:50,000
我也就觉得

3367
02:05:50,000 --> 02:05:51,000
C-sharp 应该是

3368
02:05:51,000 --> 02:05:52,000
Next Generation

3369
02:05:52,000 --> 02:05:56,000
黑的 language

3370
02:05:56,000 --> 02:05:57,000
但是

3371
02:05:57,000 --> 02:05:57,000
对啊

3372
02:05:57,000 --> 02:05:58,000
那个时候谁能想到

3373
02:05:58,000 --> 02:05:59,000
自己有一天会

3374
02:05:59,000 --> 02:06:00,000
会

3375
02:06:00,000 --> 02:06:01,000
彻底转向

3376
02:06:01,000 --> 02:06:02,000
彻底转向 Mac

3377
02:06:02,000 --> 02:06:04,000
那也没

3378
02:06:04,000 --> 02:06:05,000
这都是后话

3379
02:06:05,000 --> 02:06:07,000
就那个时候觉得

3380
02:06:07,000 --> 02:06:10,000
为什么我用苹果

3381
02:06:10,000 --> 02:06:12,000
为什么我用微软的东西

3382
02:06:12,000 --> 02:06:14,000
微软开发软件

3383
02:06:14,000 --> 02:06:15,000
微软还要向我收钱

3384
02:06:15,000 --> 02:06:17,000
其实现在我觉得它政策

3385
02:06:17,000 --> 02:06:17,000
就这样子吧

3386
02:06:17,000 --> 02:06:18,000
就是比如说现在很多

3387
02:06:18,000 --> 02:06:21,000
它对这种大学有这种

3388
02:06:21,000 --> 02:06:22,000
就是它现在叫什么

3389
02:06:22,000 --> 02:06:23,000
Dream Spark

3390
02:06:23,000 --> 02:06:23,000
这个项目

3391
02:06:23,000 --> 02:06:24,000
以前叫

3392
02:06:24,000 --> 02:06:24,000
对 Dream Spark

3393
02:06:24,000 --> 02:06:27,000
以前叫做 Academy Alliance

3394
02:06:27,000 --> 02:06:29,000
就是你如果你是大学的学生

3395
02:06:29,000 --> 02:06:30,000
然后至少你是读这个软工

3396
02:06:30,000 --> 02:06:31,000
或者是 CS 的

3397
02:06:31,000 --> 02:06:34,000
它可以去系里面申请一个账号

3398
02:06:34,000 --> 02:06:35,000
然后可以免费下载

3399
02:06:35,000 --> 02:06:37,000
微软的大部分产品

3400
02:06:37,000 --> 02:06:37,000
就是对吧就是这个方式是很重要的

3401
02:06:37,000 --> 02:06:38,000
就像什么 Office

3402
02:06:38,000 --> 02:06:38,000
操作系统

3403
02:06:38,000 --> 02:06:40,000
还有这种开发工具

3404
02:06:40,000 --> 02:06:42,000
一套都是可以免费拿的

3405
02:06:42,000 --> 02:06:43,000
然后我记得 Dream Spark

3406
02:06:43,000 --> 02:06:45,000
曾几何时是

3407
02:06:45,000 --> 02:06:47,000
各个高校基本上是

3408
02:06:47,000 --> 02:06:48,000
趋之若鹜的一个东西

3409
02:06:48,000 --> 02:06:51,000
但是现在据说是微软的销售代表

3410
02:06:51,000 --> 02:06:53,000
要去高校里面求说

3411
02:06:53,000 --> 02:06:54,000
哎呀跟我们签一个吧

3412
02:06:54,000 --> 02:06:55,000
我们免费给你们

3413
02:06:55,000 --> 02:06:58,000
你们只需要搭设一下

3414
02:06:58,000 --> 02:06:59,000
就什么可以了

3415
02:06:59,000 --> 02:07:00,000
甚至是你们什么所有的

3416
02:07:00,000 --> 02:07:03,000
Access 都可以在我们这边托管

3417
02:07:03,000 --> 02:07:04,000
什么的

3418
02:07:04,000 --> 02:07:06,000
现在 Dream Spark

3419
02:07:06,000 --> 02:07:07,000
好像真的已经补的

3420
02:07:07,000 --> 02:07:07,000
那么

3421
02:07:07,000 --> 02:07:08,000
就微软现在

3422
02:07:08,000 --> 02:07:09,000
不那么必要

3423
02:07:09,000 --> 02:07:10,000
非常示威

3424
02:07:10,000 --> 02:07:11,000
正在渐渐

3425
02:07:11,000 --> 02:07:13,000
正在渐渐的淡出

3426
02:07:13,000 --> 02:07:15,000
现在的显学是学什么

3427
02:07:15,000 --> 02:07:16,000
Object C

3428
02:07:16,000 --> 02:07:17,000
然后开发 App

3429
02:07:17,000 --> 02:07:17,000
所以

3430
02:07:17,000 --> 02:07:19,000
不我觉得这跟显学没有关系

3431
02:07:19,000 --> 02:07:21,000
就是比如说

3432
02:07:21,000 --> 02:07:25,000
我们平时谈论的什么 Lino 的

3433
02:07:25,000 --> 02:07:27,000
或者是 DigitalOcean

3434
02:07:27,000 --> 02:07:29,000
这些 VPS 提供商们

3435
02:07:29,000 --> 02:07:31,000
有哪一家是提供

3436
02:07:31,000 --> 02:07:32,000
.NET 环境的吗

3437
02:07:32,000 --> 02:07:33,000
没有

3438
02:07:33,000 --> 02:07:36,000
你说服务器吗

3439
02:07:37,000 --> 02:07:38,000
对啊

3440
02:07:38,000 --> 02:07:41,000
就 VPS 提供商有谁家是在提供服务端的

3441
02:07:41,000 --> 02:07:45,000
AWS 它是有 Windows Server 可以用的

3442
02:07:45,000 --> 02:07:47,000
不过要贵一些

3443
02:07:47,000 --> 02:07:47,000
有多少呢

3444
02:07:47,000 --> 02:07:48,000
1%吗

3445
02:07:48,000 --> 02:07:51,000
对我们接触的应该不是很多

3446
02:07:51,000 --> 02:07:53,000
我觉得感觉这一步就是用

3447
02:07:53,000 --> 02:07:55,000
因为要跑那些大部分还是企业的场合

3448
02:07:55,000 --> 02:07:56,000
感觉比较多一点

3449
02:07:56,000 --> 02:07:58,000
但有一个例外就是那个 Stackoverflow

3450
02:07:58,000 --> 02:07:59,000
对

3451
02:07:59,000 --> 02:08:02,000
对你讲确实这是一个问题

3452
02:08:02,000 --> 02:08:06,000
就在我们就所谓的 WebApp 兴起的这个时间

3453
02:08:06,000 --> 02:08:07,000
微软是什么时候开始用的呢?

3454
02:08:07,000 --> 02:08:10,000
其实是输掉了这个市场的吗

3455
02:08:10,000 --> 02:08:16,000
对它已经双方变得非常的非常的无关紧要了

3456
02:08:16,000 --> 02:08:19,000
对这个就是你要我现在去回忆自己

3457
02:08:19,000 --> 02:08:22,000
就是有一天这几天我在反思

3458
02:08:22,000 --> 02:08:23,000
就是我在上次节目里面说到

3459
02:08:23,000 --> 02:08:28,000
自己花在微软上面的时间都蹉跎掉了

3460
02:08:28,000 --> 02:08:29,000
真的是这样吗

3461
02:08:29,000 --> 02:08:36,000
就是我真的后悔自己曾经努力学过

3462
02:08:37,000 --> 02:08:47,000
ина

3463
02:08:47,000 --> 02:08:49,000
我在未经认发掘中

3464
02:08:52,000 --> 02:08:53,000
所以我觉得这样子吧

3465
02:08:53,000 --> 02:08:54,000
人类 зовут视渣

3466
02:08:55,000 --> 02:08:57,000
Randondere

3467
02:08:57,000 --> 02:08:59,000
他所说的你不要我的电脑

3468
02:08:59,000 --> 02:09:00,000
是时间 Oh

3469
02:09:00,000 --> 02:09:01,000
他说没错

3470
02:09:01,000 --> 02:09:02,000
许 gun

3471
02:09:02,000 --> 02:09:03,000
如果你就投入 Lion

3472
02:09:03,000 --> 02:09:05,000
因为 Roland

3473
02:09:05,000 --> 02:09:06,000
真的是ие

3474
02:09:07,000 --> 02:09:10,000
我们最开始的讲了 mindshare 的问题

3475
02:09:10,000 --> 02:09:12,000
我觉得其实你从现在的来看

3476
02:09:12,000 --> 02:09:14,000
微软它真的是已经输掉了

3477
02:09:14,000 --> 02:09:16,000
就起码如果你是一个开发者

3478
02:09:16,000 --> 02:09:18,000
你能够自由选择的情况下

3479
02:09:18,000 --> 02:09:19,000
他已经输掉了这一部分人的

3480
02:09:19,000 --> 02:09:21,000
所谓的 mindshare

3481
02:09:21,000 --> 02:09:22,000
这点你可以刚刚我们讲了

3482
02:09:23,000 --> 02:09:25,000
比如说他可能很多人会选择去做 webapp

3483
02:09:25,000 --> 02:09:27,000
去学什么动态语言去做

3484
02:09:27,000 --> 02:09:29,000
然后也不需要 windows 的东西

3485
02:09:29,000 --> 02:09:31,000
那也不需要在 windows 上面跑

3486
02:09:31,000 --> 02:09:33,000
然后有很多人学开发

3487
02:09:34,000 --> 02:09:35,000
哪怕是企业应用

3488
02:09:35,000 --> 02:09:37,000
他就现在大部分应该还是 java 程序比较多

3489
02:09:39,000 --> 02:09:41,000
这个我还真不敢说

3490
02:09:41,000 --> 02:09:42,000
就是我说起码服务端的

3491
02:09:42,000 --> 02:09:44,000
我感觉是 java 或者多的

3492
02:09:44,000 --> 02:09:46,000
但是如果你是前陈子找工作的时候

3493
02:09:46,000 --> 02:09:48,000
我出于好奇也输入了什么

3494
02:09:48,000 --> 02:09:49,000
downnet 或者 csharp

3495
02:09:49,000 --> 02:09:50,000
或者之类的

3496
02:09:50,000 --> 02:09:51,000
前面是有的

3497
02:09:51,000 --> 02:09:51,000
搜一下

3498
02:09:52,000 --> 02:09:54,000
而且还不少至少在

3499
02:09:54,000 --> 02:09:56,000
就他其实他就用分两部分

3500
02:09:56,000 --> 02:09:59,000
一个就是他跑在服务器端的一些东西

3501
02:09:59,000 --> 02:10:00,000
然后是跑在客户端的东西

3502
02:10:00,000 --> 02:10:02,000
对客户端这边应该还是 windows 的

3503
02:10:02,000 --> 02:10:03,000
就是就是 vc

3504
02:10:03,000 --> 02:10:05,000
然后 visual studio 这些的

3505
02:10:05,000 --> 02:10:06,000
天下这没有问题

3506
02:10:06,000 --> 02:10:07,000
对然后但是在移动上面

3507
02:10:07,000 --> 02:10:09,000
现在大部分人要么就是开发安卓

3508
02:10:09,000 --> 02:10:11,000
要么好像是开发这个 iOS

3509
02:10:11,000 --> 02:10:13,000
肯定是没什么 windows

3510
02:10:13,000 --> 02:10:15,000
phone 的用户是非常少的

3511
02:10:15,000 --> 02:10:17,000
对而开发网页程序的话

3512
02:10:17,000 --> 02:10:18,000
webapplication 的话

3513
02:10:18,000 --> 02:10:20,000
根本用不着

3514
02:10:20,000 --> 02:10:22,000
用 csharp 的也是凤毛麟角

3515
02:10:22,000 --> 02:10:24,000
对非常非常至少在欧洲是这样

3516
02:10:24,000 --> 02:10:26,000
对不管是全球全球发文的都是这样

3517
02:10:26,000 --> 02:10:29,000
不但我觉得中国这个市场好像还是

3518
02:10:29,000 --> 02:10:31,000
csharp 份额还是挺高的

3519
02:10:31,000 --> 02:10:34,000
因为盗版给他助长了

3520
02:10:34,000 --> 02:10:34,000
对

3521
02:10:34,000 --> 02:10:34,000
因为

3522
02:10:34,000 --> 02:10:36,000
在中国市场份了

3523
02:10:36,000 --> 02:10:39,000
是对中国的对为什么

3524
02:10:39,000 --> 02:10:40,000
的为什么明天

3525
02:10:40,000 --> 02:10:42,000
未来的希望就在中国

3526
02:10:42,000 --> 02:10:44,000
但是在中国又被搞了反垄断

3527
02:10:44,000 --> 02:10:45,000
也是很惨的

3528
02:10:46,000 --> 02:10:46,000
真的吗

3529
02:10:46,000 --> 02:10:47,000
你不知道吗

3530
02:10:47,000 --> 02:10:49,000
最近什么时候是最近这一年

3531
02:10:49,000 --> 02:10:50,000
已经被搞得很惨

3532
02:10:51,000 --> 02:10:51,000
ok

3533
02:10:52,000 --> 02:10:54,000
所以他的日子肯定是不好过的

3534
02:10:54,000 --> 02:10:56,000
所以他现在也是要急着求变

3535
02:10:57,000 --> 02:11:00,000
因为再过可能这种趋势再十几年

3536
02:11:00,000 --> 02:11:01,000
未来就是一个不知名的小公司

3537
02:11:03,000 --> 02:11:04,000
刚才你说那个什么未来

3538
02:11:04,000 --> 02:11:05,000
变得无关紧要了

3539
02:11:05,000 --> 02:11:06,000
这个还蛮巧的

3540
02:11:06,000 --> 02:11:09,000
我在支付上有一篇回答

3541
02:11:09,000 --> 02:11:11,000
当时问是 windows 8 的一些事情

3542
02:11:11,000 --> 02:11:15,000
但是我讲的一个回答也是也就提到了这么一个概念

3543
02:11:15,000 --> 02:11:19,000
晚点我把连接放到 notes 里面

3544
02:11:19,000 --> 02:11:20,000
大家有兴趣可以去看一下

3545
02:11:20,000 --> 02:11:23,000
扯的又比较远了

3546
02:11:23,000 --> 02:11:24,000
然后说回来

3547
02:11:24,000 --> 02:11:25,000
然后 Eclipse

3548
02:11:25,000 --> 02:11:26,000
说回 visual studio

3549
02:11:26,000 --> 02:11:26,000
对

3550
02:11:26,000 --> 02:11:27,000
对

3551
02:11:27,000 --> 02:11:31,000
刚才原启是说 visual studio 非常多的版本

3552
02:11:31,000 --> 02:11:33,000
而 xcode

3553
02:11:34,000 --> 02:11:36,000
只有一个或者说他有两个版本

3554
02:11:36,000 --> 02:11:39,000
一个不稳定的版本和一个更不稳定的版本

3555
02:11:39,000 --> 02:11:42,000
这个黑的漂亮

3556
02:11:42,000 --> 02:11:45,000
而为了更不稳定的版本

3557
02:11:45,000 --> 02:11:48,000
你需要交一笔钱成为

3558
02:11:48,000 --> 02:11:51,000
iOS 开发商

3559
02:11:51,000 --> 02:11:53,000
iOS 开发者或者是麦开发者

3560
02:11:53,000 --> 02:11:57,000
才可以下载到更不稳定的版本

3561
02:11:57,000 --> 02:11:59,000
但默认的稳定的版本

3562
02:11:59,000 --> 02:12:01,000
就是比较稳定的版本

3563
02:12:01,000 --> 02:12:02,000
是免费不要钱

3564
02:12:02,000 --> 02:12:04,000
他是从 4 吧开始是在

3565
02:12:04,000 --> 02:12:07,000
在 app store 里面可以免费下载了

3566
02:12:07,000 --> 02:12:07,000
对

3567
02:12:07,000 --> 02:12:10,000
然后我记得我还付钱买过他免费之前的版本

3568
02:12:10,000 --> 02:12:10,000
5 块钱

3569
02:12:10,000 --> 02:12:13,000
我记得 5 美元

3570
02:12:13,000 --> 02:12:13,000
对

3571
02:12:13,000 --> 02:12:15,000
xcode 曾几何时也是要收费的

3572
02:12:15,000 --> 02:12:18,000
三对三之前是要收费的

3573
02:12:18,000 --> 02:12:18,000
对

3574
02:12:18,000 --> 02:12:20,000
就是非模态窗口的版本

3575
02:12:20,000 --> 02:12:22,000
对

3576
02:12:22,000 --> 02:12:26,000
然后我还当时是因为要写一个 openGL 的程序

3577
02:12:26,000 --> 02:12:28,000
因为上一个图形的课

3578
02:12:28,000 --> 02:12:30,000
然后要写一些这部分这些东西

3579
02:12:30,000 --> 02:12:33,000
然后当时觉得有两个做法

3580
02:12:33,000 --> 02:12:34,000
我在 mac 上面开发

3581
02:12:34,000 --> 02:12:36,000
对今天其实有三个

3582
02:12:36,000 --> 02:12:37,000
要不我用 Eclipse 写

3583
02:12:37,000 --> 02:12:39,000
这个就直接被我否定掉了

3584
02:12:39,000 --> 02:12:41,000
那待会会解释为什么

3585
02:12:41,000 --> 02:12:43,000
然后因为我用命令行

3586
02:12:43,000 --> 02:12:43,000
我用 vim 写

3587
02:12:43,000 --> 02:12:44,000
然后命令行写

3588
02:12:44,000 --> 02:12:49,000
但是你知道用那种方式写 c 或者是写 openGL 的代码

3589
02:12:49,000 --> 02:12:50,000
其实非常痛苦的

3590
02:12:50,000 --> 02:12:52,000
因为没有自动补齐

3591
02:12:52,000 --> 02:12:54,000
ok

3592
02:12:54,000 --> 02:12:56,000
另外版本你去发现就是用 xcode

3593
02:12:56,000 --> 02:12:58,000
然后当时想了想买吧

3594
02:12:58,000 --> 02:13:01,000
就为了写作业就买了

3595
02:13:01,000 --> 02:13:02,000
然后后来我买了过了差不多不到一个月了

3596
02:13:02,000 --> 02:13:04,000
然后后来我买了过了差不多不到一个月了

3597
02:13:04,000 --> 02:13:04,000
然后后来我买了过了差不多不到一个月了

3598
02:13:04,000 --> 02:13:05,000
然后后来我买了过了差不多不到一个月了

3599
02:13:05,000 --> 02:13:07,000
他就说他全部免费了

3600
02:13:07,000 --> 02:13:08,000
嗯

3601
02:13:08,000 --> 02:13:09,000
啊

3602
02:13:09,000 --> 02:13:10,000
就很很沮丧

3603
02:13:10,000 --> 02:13:11,000
哈哈

3604
02:13:12,000 --> 02:13:13,000
好吧

3605
02:13:14,000 --> 02:13:14,000
ok

3606
02:13:14,000 --> 02:13:14,000
对

3607
02:13:14,000 --> 02:13:16,000
现在讲到那个

3608
02:13:16,000 --> 02:13:17,000
你一颗 vish

3609
02:13:17,000 --> 02:13:18,000
你还要补充的吗

3610
02:13:19,000 --> 02:13:20,000
嗯

3611
02:13:20,000 --> 02:13:22,000
vish studio 有什么要补充的

3612
02:13:22,000 --> 02:13:22,000
我也不知道

3613
02:13:22,000 --> 02:13:25,000
我其实有很多是很多年没有用 vish studio

3614
02:13:25,000 --> 02:13:28,000
但是我在前两天看到一句话说

3615
02:13:28,000 --> 02:13:32,000
呃 vish studio 比 xcode 好了一万个 eclipse 之间

3616
02:13:32,000 --> 02:13:34,000
好了一万个 eclipse

3617
02:13:34,000 --> 02:13:34,000
eclipse

3618
02:13:34,000 --> 02:13:35,000
这么多

3619
02:13:35,000 --> 02:13:39,000
我怎么感觉有五十步一百步的感觉

3620
02:13:40,000 --> 02:13:41,000
嗯

3621
02:13:41,000 --> 02:13:44,000
也许 vish studio 是很屌啊

3622
02:13:44,000 --> 02:13:49,000
就 intellisense 可能是所有的自动补全里面最聪明的一个

3623
02:13:49,000 --> 02:13:50,000
啊

3624
02:13:50,000 --> 02:13:51,000
也是最

3625
02:13:52,000 --> 02:13:53,000
看起来最舒服

3626
02:13:53,000 --> 02:13:55,000
或者说细节最多的一个

3627
02:13:55,000 --> 02:13:58,000
因为 windows 我觉得微软东西就是有这样一种特征

3628
02:13:58,000 --> 02:14:00,000
就是事无巨细都要告诉你

3629
02:14:00,000 --> 02:14:01,000
嗯

3630
02:14:01,000 --> 02:14:03,000
都要都要来问你

3631
02:14:03,000 --> 02:14:03,000
或者说都要

3632
02:14:03,000 --> 02:14:06,000
都要给提供你一个可能

3633
02:14:06,000 --> 02:14:09,000
就是我刚才就我为了玩这个文明超越地球

3634
02:14:09,000 --> 02:14:10,000
嗯

3635
02:14:10,000 --> 02:14:11,000
装了一个 windows 8

3636
02:14:11,000 --> 02:14:14,000
然后我发现 windows 8 的考文件的时候

3637
02:14:14,000 --> 02:14:15,000
如果你愿意的话

3638
02:14:15,000 --> 02:14:16,000
你可以点一个更多详情

3639
02:14:16,000 --> 02:14:19,000
然后这个更多详情里面会跳出来一个

3640
02:14:21,000 --> 02:14:21,000
呃

3641
02:14:22,000 --> 02:14:26,000
实时拷贝速度的一个线图

3642
02:14:26,000 --> 02:14:27,000
对对

3643
02:14:28,000 --> 02:14:28,000
那很帅吗

3644
02:14:28,000 --> 02:14:31,000
就是我觉得哇靠

3645
02:14:31,000 --> 02:14:32,000
这样无关的信息

3646
02:14:32,000 --> 02:14:33,000
你告诉我真的有意义吗

3647
02:14:33,000 --> 02:14:35,000
很多人会看这个的

3648
02:14:35,000 --> 02:14:36,000
我不知道为什么

3649
02:14:36,000 --> 02:14:37,000
啊

3650
02:14:37,000 --> 02:14:37,000
好吧

3651
02:14:37,000 --> 02:14:39,000
时间太多了

3652
02:14:39,000 --> 02:14:40,000
哈哈哈

3653
02:14:40,000 --> 02:14:41,000
没比

3654
02:14:41,000 --> 02:14:41,000
嗯

3655
02:14:42,000 --> 02:14:43,000
呃

3656
02:14:43,000 --> 02:14:44,000
eclips

3657
02:14:44,000 --> 02:14:44,000
对

3658
02:14:44,000 --> 02:14:45,000
这

3659
02:14:45,000 --> 02:14:46,000
visual studio 就是这样的东西

3660
02:14:46,000 --> 02:14:48,000
就会告诉你非常非常多的

3661
02:14:48,000 --> 02:14:51,000
其实你也不知道是有用还是没用的知识

3662
02:14:51,000 --> 02:14:51,000
呃

3663
02:14:51,000 --> 02:14:53,000
信息在那边摆在那边

3664
02:14:53,000 --> 02:14:53,000
嗯

3665
02:14:53,000 --> 02:14:54,000
对

3666
02:14:54,000 --> 02:14:55,000
是

3667
02:14:55,000 --> 02:14:58,000
但我但我仍然要承认它是一个非常好的变迹

3668
02:14:58,000 --> 02:14:59,000
就是一个非常好的案例

3669
02:14:59,000 --> 02:15:01,000
就是至少我的印象里面

3670
02:15:01,000 --> 02:15:01,000
嗯

3671
02:15:01,000 --> 02:15:03,000
好用的吧

3672
02:15:03,000 --> 02:15:03,000
至少

3673
02:15:03,000 --> 02:15:05,000
好用

3674
02:15:05,000 --> 02:15:06,000
而且它从来不 crash

3675
02:15:06,000 --> 02:15:09,000
而且它的文档非常非常全面

3676
02:15:09,000 --> 02:15:09,000
对

3677
02:15:09,000 --> 02:15:10,000
这个这个是什么

3678
02:15:10,000 --> 02:15:11,000
嗯

3679
02:15:11,000 --> 02:15:12,000
呃

3680
02:15:12,000 --> 02:15:13,000
xcode 不能比的啊

3681
02:15:13,000 --> 02:15:14,000
对

3682
02:15:14,000 --> 02:15:18,000
xcode 就有 xcode 有很多非常 xcode

3683
02:15:18,000 --> 02:15:23,000
给我感觉有点像刚刚接触那个 micromedia 的一那一套变迹器

3684
02:15:23,000 --> 02:15:25,000
那就是 micromedia 还是 micromedia 的时代

3685
02:15:25,000 --> 02:15:25,000
嗯

3686
02:15:25,000 --> 02:15:27,000
flash 呀

3687
02:15:27,000 --> 02:15:28,000
呃

3688
02:15:28,000 --> 02:15:28,000
fireworks 啊

3689
02:15:28,000 --> 02:15:30,000
之类的这些东西

3690
02:15:30,000 --> 02:15:33,000
就是有很多细小的功能隐藏在某一块的东西

3691
02:15:33,000 --> 02:15:34,000
嗯

3692
02:15:34,000 --> 02:15:35,000
如果你不知道怎么用的话

3693
02:15:35,000 --> 02:15:37,000
那你就弄死也找不到

3694
02:15:37,000 --> 02:15:38,000
对没错

3695
02:15:38,000 --> 02:15:40,000
对对这个导引是一个问题

3696
02:15:40,000 --> 02:15:44,000
但是就是说从因为我你也做这个 object city 开发好

3697
02:15:44,000 --> 02:15:46,000
就从实际使用的角度来讲

3698
02:15:46,000 --> 02:15:48,000
你觉得这两个有什么可比的地方吗

3699
02:15:50,000 --> 02:15:53,000
呃 xcode 缺少一些

3700
02:15:53,000 --> 02:15:56,000
有时候我觉得非常简单

3701
02:15:56,000 --> 02:15:57,000
但是它就是没有的功能

3702
02:15:57,000 --> 02:15:59,000
就是非常必要的就是没有的功能

3703
02:15:59,000 --> 02:16:00,000
比如说呢

3704
02:16:01,000 --> 02:16:02,000
嗯

3705
02:16:02,000 --> 02:16:03,000
比如说嗯

3706
02:16:03,000 --> 02:16:03,000
嗯

3707
02:16:04,000 --> 02:16:06,000
就是有没有什么一个具体的例子

3708
02:16:06,000 --> 02:16:10,000
你觉得是我现在一时还真的想不出来

3709
02:16:11,000 --> 02:16:13,000
但是那或者或者这么问

3710
02:16:13,000 --> 02:16:16,000
就是你在他日常使用的过程中

3711
02:16:16,000 --> 02:16:19,000
你有觉得他有哪点地方让你非常不爽的地方

3712
02:16:19,000 --> 02:16:20,000
或者让你非常爽

3713
02:16:20,000 --> 02:16:22,000
或者让你非常不爽的地方都可以

3714
02:16:23,000 --> 02:16:24,000
呃

3715
02:16:24,000 --> 02:16:29,000
让我比较不爽的地方可能是有时候他的窗口

3716
02:16:29,000 --> 02:16:29,000
嗯

3717
02:16:29,000 --> 02:16:30,000
就是他的某些

3718
02:16:31,000 --> 02:16:33,000
布局是非常

3719
02:16:33,000 --> 02:16:34,000
让人难受的

3720
02:16:34,000 --> 02:16:37,000
比如说你要去去点一个什么东西

3721
02:16:37,000 --> 02:16:41,000
你会虚你会发现这个东西的空间做的非常非常小

3722
02:16:41,000 --> 02:16:42,000
呃

3723
02:16:44,000 --> 02:16:46,000
然后你要去改变他的大小呢

3724
02:16:46,000 --> 02:16:50,000
你会觉得自己已经有的那个编辑区域被压缩了

3725
02:16:50,000 --> 02:16:50,000
嗯

3726
02:16:50,000 --> 02:16:52,000
就布局不是很合理

3727
02:16:52,000 --> 02:16:54,000
对我觉得布局并不是很合理

3728
02:16:54,000 --> 02:16:55,000
嗯

3729
02:16:55,000 --> 02:16:56,000
另外就是他的那个自动补全

3730
02:16:56,000 --> 02:16:57,000
有时候就是

3731
02:16:58,000 --> 02:17:00,000
很长一段时间里面都非常纯

3732
02:17:00,000 --> 02:17:02,000
比如说他他有时候会

3733
02:17:03,000 --> 02:17:08,000
不能理解为什么你要就是有两个有就有时候他是

3734
02:17:08,000 --> 02:17:11,000
你有时候你会觉得他们是非常笨的

3735
02:17:11,000 --> 02:17:14,000
就是比如说有两个一模一样的呃

3736
02:17:14,000 --> 02:17:19,000
有两个前十个字母一模一样的呃

3737
02:17:19,000 --> 02:17:19,000
函数

3738
02:17:19,000 --> 02:17:20,000
啊

3739
02:17:20,000 --> 02:17:23,000
然后你挑了前几个字母

3740
02:17:23,000 --> 02:17:24,000
你挑了几个字母

3741
02:17:24,000 --> 02:17:27,000
他非要把那个不常用的摆在上面

3742
02:17:27,000 --> 02:17:29,000
你要么要按 tab 键

3743
02:17:29,000 --> 02:17:31,000
然后补全到那个

3744
02:17:31,000 --> 02:17:32,000
不一样的字母

3745
02:17:32,000 --> 02:17:33,000
不一样的字母

3746
02:17:33,000 --> 02:17:35,000
不一样开始的地方

3747
02:17:35,000 --> 02:17:35,000
ok

3748
02:17:36,000 --> 02:17:37,000
然后再打下一个字母

3749
02:17:37,000 --> 02:17:39,000
再出下一个字母

3750
02:17:39,000 --> 02:17:44,000
要么就要按一下下或者是什么键去去去手动选中

3751
02:17:44,000 --> 02:17:44,000
嗯

3752
02:17:44,000 --> 02:17:46,000
你真正想要打的那个

3753
02:17:46,000 --> 02:17:47,000
哪个东西

3754
02:17:47,000 --> 02:17:48,000
嗯

3755
02:17:48,000 --> 02:17:50,000
这个时候你就会觉得 intelisense 真的是非常非常聪明

3756
02:17:50,000 --> 02:17:53,000
就是他会去猜你最想要的是哪一个

3757
02:17:53,000 --> 02:17:53,000
就他会

3758
02:17:53,000 --> 02:17:56,000
现在 xcode 可能是要比以前好很多

3759
02:17:56,000 --> 02:17:56,000
ok

3760
02:17:57,000 --> 02:18:03,000
至少这这两天我在就是最近我在写 swift 的时候感觉好像是没有以前那么不爽

3761
02:18:03,000 --> 02:18:05,000
就稳定性的也有提高吗

3762
02:18:05,000 --> 02:18:09,000
就至少稳定性现在看有人说要 crash 掉或者是没有失去响应

3763
02:18:09,000 --> 02:18:09,000
这样

3764
02:18:09,000 --> 02:18:20,000
我记得曾经在 4.g 的时候有一个版本在那个 app store 里面得到了一星半还是什么

3765
02:18:20,000 --> 02:18:24,000
就是因为那版非常非常就是大概平均半个小时 crashes

3766
02:18:24,000 --> 02:18:26,000
然后我现在经常遇到一个问题是什么

3767
02:18:26,000 --> 02:18:30,000
他会跳出来一个半透明的提示框说什么

3768
02:18:30,000 --> 02:18:31,000
呃 internalmoji

3769
02:18:31,000 --> 02:18:32,000
呃 internalmoji

3770
02:18:32,000 --> 02:18:33,000
呃 internalmoji

3771
02:18:33,000 --> 02:18:36,000
i ask you for syntax highlighting has crashed

3772
02:18:36,000 --> 02:18:37,000
呃

3773
02:18:37,000 --> 02:18:41,000
please restart xcode 之类的这么一个提示框

3774
02:18:41,000 --> 02:18:44,000
就是他告诉你我内部有一个组件 crash

3775
02:18:44,000 --> 02:18:48,000
你有可能的话请你重新启动重新启动一下 xcode

3776
02:18:48,000 --> 02:18:49,000
我就 what the fuck

3777
02:18:49,000 --> 02:18:51,000
对

3778
02:18:51,000 --> 02:18:56,000
另外还有一个就是我我专门为了 xcode 买了一个小程序啊

3779
02:18:56,000 --> 02:18:58,000
叫做 watchdog 啊

3780
02:18:58,000 --> 02:18:59,000
是干嘛的

3781
02:18:59,000 --> 02:19:02,000
watchdog 应该是卖大概 10 欧还是 9 欧

3782
02:19:02,000 --> 02:19:03,000
嗯反正

3783
02:19:03,000 --> 02:19:04,000
很便宜的工具

3784
02:19:04,000 --> 02:19:09,000
嗯他唯一的功能就是在你退出 xcode 的时候自动帮你把 xcode 所有的中间文件删掉

3785
02:19:09,000 --> 02:19:11,000
有有什么问题吗

3786
02:19:11,000 --> 02:19:11,000
为什么要这样

3787
02:19:11,000 --> 02:19:18,000
就是据很多很多那个呃 xcode 用户的经验来看

3788
02:19:18,000 --> 02:19:22,000
嗯大部分时候如果 xcode 的行为怪异

3789
02:19:22,000 --> 02:19:25,000
你只需要把目前你只需要把它的所有临时文件删掉

3790
02:19:25,000 --> 02:19:27,000
然后重新启动一遍就可以了

3791
02:19:27,000 --> 02:19:30,000
所以这个插件的意图就在于那你干脆你每次一罐 xcode 了

3792
02:19:30,000 --> 02:19:32,000
我立刻就把这些所有来文件全都清除掉了

3793
02:19:32,000 --> 02:19:33,000
天呐

3794
02:19:33,000 --> 02:19:35,000
那代价无非就是下一次启动的时候

3795
02:19:35,000 --> 02:19:36,000
慢一点

3796
02:19:36,000 --> 02:19:37,000
可能稍微慢一点吧

3797
02:19:37,000 --> 02:19:40,000
但却以此换来了更多的稳定性

3798
02:19:40,000 --> 02:19:45,000
哇天呐这个这个

3799
02:19:45,000 --> 02:19:51,000
对而且就是我必须要保护我必须要保护的一点就是现在的 playground 非常爽啊

3800
02:19:51,000 --> 02:19:54,000
就是 playground 就是 xcode 里面那个功能

3801
02:19:54,000 --> 02:19:56,000
你可以在左边输入代码

3802
02:19:56,000 --> 02:19:58,000
然后右边就有一个很简单的窗口

3803
02:19:58,000 --> 02:20:00,000
左边可以输入代码

3804
02:20:00,000 --> 02:20:02,000
嗯窗口右半可以输出

3805
02:20:02,000 --> 02:20:04,000
左边输入的代码

3806
02:20:04,000 --> 02:20:07,000
呃所会展现出来的东西

3807
02:20:07,000 --> 02:20:09,000
比如说你写个 fall 循环

3808
02:20:09,000 --> 02:20:13,000
然后右边就会出现这个 fall 循环被执行多少次

3809
02:20:13,000 --> 02:20:15,000
以及中间如果有输出结果的话

3810
02:20:15,000 --> 02:20:17,000
他会把中间的输出结果也显示在右边

3811
02:20:17,000 --> 02:20:18,000
就不需要你做什么

3812
02:20:18,000 --> 02:20:19,000
你只要把语句写出来

3813
02:20:19,000 --> 02:20:20,000
然后按回车

3814
02:20:20,000 --> 02:20:24,000
然后他就会自动实时的去演算左边的语言

3815
02:20:24,000 --> 02:20:27,000
然后在右边显示出左边演算的结果来

3816
02:20:27,000 --> 02:20:29,000
就是如果你看过那个 keynote 的话

3817
02:20:29,000 --> 02:20:32,000
那次 wwckeynote 的话

3818
02:20:32,000 --> 02:20:32,000
呃

3819
02:20:32,000 --> 02:20:34,000
当时演示的就是这个功能

3820
02:20:34,000 --> 02:20:36,000
我必须说这个 playground 非常爽

3821
02:20:36,000 --> 02:20:39,000
但是 playground 经常 crash 在我手里

3822
02:20:39,000 --> 02:20:45,000
就是 swift 它是一种伪装成动态源的静态源

3823
02:20:45,000 --> 02:20:47,000
它每一次都要编译

3824
02:20:47,000 --> 02:20:51,000
但是它经常编译到一半就挂了

3825
02:20:51,000 --> 02:20:53,000
然后导致整个 playground 都挂了

3826
02:20:53,000 --> 02:21:00,000
所以什么苹果的这个软功的质量是真的这么糟糕吗

3827
02:21:00,000 --> 02:21:01,000
还是

3828
02:21:01,000 --> 02:21:02,000
我觉得

3829
02:21:02,000 --> 02:21:04,000
是想就是你必须要正视这一点

3830
02:21:04,000 --> 02:21:07,000
就是苹果它毕竟是个硬件公司

3831
02:21:07,000 --> 02:21:09,000
或者说它是一个一体化集成公司

3832
02:21:09,000 --> 02:21:11,000
而微软是专门做软件的

3833
02:21:11,000 --> 02:21:13,000
对这里面还是有微软也有 xbox

3834
02:21:13,000 --> 02:21:14,000
我承认微软也有 xbox

3835
02:21:14,000 --> 02:21:18,000
但是但是从基因上来看

3836
02:21:18,000 --> 02:21:21,000
苹果做的软件的确是不如 make sure

3837
02:21:21,000 --> 02:21:24,000
呃就从稳定性的角度来看吗

3838
02:21:24,000 --> 02:21:24,000
对

3839
02:21:24,000 --> 02:21:26,000
或者从乃至从易用性

3840
02:21:26,000 --> 02:21:29,000
或者说从从 user friendly 的角度来看

3841
02:21:29,000 --> 02:21:31,000
都 xcode 都远远输了

3842
02:21:31,000 --> 02:21:32,000
远远输于微软

3843
02:21:32,000 --> 02:21:34,000
对对我这个我必须承认

3844
02:21:34,000 --> 02:21:34,000
ok

3845
02:21:34,000 --> 02:21:38,000
所以他的那他的好处就他比微软对的好的好的

3846
02:21:38,000 --> 02:21:39,000
哪好在哪里

3847
02:21:39,000 --> 02:21:41,000
他有他有选择吗

3848
02:21:41,000 --> 02:21:42,000
他有好处吗

3849
02:21:42,000 --> 02:21:43,000
不我我就是如果你可以选的情况下

3850
02:21:43,000 --> 02:21:47,000
嗯

3851
02:21:47,000 --> 02:21:48,000
比如说你们都写 c 程序

3852
02:21:48,000 --> 02:21:49,000
因为微软 studio 也可以写 c 程序

3853
02:21:49,000 --> 02:21:50,000
然后 xcode 也可以写 c 程序

3854
02:21:50,000 --> 02:21:54,000
就不是写跟某一个平台直接相关的那种东西的话

3855
02:21:54,000 --> 02:21:55,000
嗯

3856
02:21:55,000 --> 02:21:57,000
嗯

3857
02:21:57,000 --> 02:21:58,000
说实话

3858
02:21:58,000 --> 02:22:01,000
我想不出来什么非常好的

3859
02:22:01,000 --> 02:22:01,000
就比如说

3860
02:22:01,000 --> 02:22:03,000
我刚才第一反应是自体渲染

3861
02:22:03,000 --> 02:22:04,000
哈哈哈

3862
02:22:04,000 --> 02:22:11,000
对因为微软微软 studio 下面的就是或者说 windows 下面自体渲染是我现在已经不太能容忍了

3863
02:22:11,000 --> 02:22:16,000
那但是如果你真要说我要写一个不去考虑跨平台

3864
02:22:16,000 --> 02:22:17,000
嗯

3865
02:22:17,000 --> 02:22:20,000
当然 xcode 下面写不了什么跨平台的东西

3866
02:22:20,000 --> 02:22:21,000
嗯

3867
02:22:21,000 --> 02:22:24,000
不是可以写我他有什么 python 模式

3868
02:22:24,000 --> 02:22:27,000
所以 xcode 有 python 模式

3869
02:22:27,000 --> 02:22:29,000
就就可以这么干哈

3870
02:22:29,000 --> 02:22:31,000
但是因为他毕竟可以当成一个编辑器来用

3871
02:22:31,000 --> 02:22:31,000
对

3872
02:22:31,000 --> 02:22:32,000
对

3873
02:22:32,000 --> 02:22:34,000
别当成一个编辑器来用吧

3874
02:22:34,000 --> 02:22:35,000
ok

3875
02:22:35,000 --> 02:22:36,000
那我也要比较这个 point 何在的话

3876
02:22:36,000 --> 02:22:38,000
只是这样说而已

3877
02:22:38,000 --> 02:22:38,000
嗯

3878
02:22:38,000 --> 02:22:43,000
对对我觉得这一点上微软 studio 也许是完胜 xcode 的

3879
02:22:43,000 --> 02:22:45,000
但我还是不会用去

3880
02:22:45,000 --> 02:22:46,000
但我还是不会选为了

3881
02:22:46,000 --> 02:22:47,000
就是因为太丑了

3882
02:22:48,000 --> 02:22:49,000
对

3883
02:22:49,000 --> 02:22:52,000
就是因为他已经不是我的平台了

3884
02:22:52,000 --> 02:22:53,000
不是我的世界的一部分了

3885
02:22:53,000 --> 02:22:56,000
就是但是他对我来说是一种已经是一种比较陌生的东西

3886
02:22:56,000 --> 02:23:01,000
说你你你你你把自己变得再好有什么用

3887
02:23:01,000 --> 02:23:01,000
他已经往前走了啊

3888
02:23:01,000 --> 02:23:02,000
对

3889
02:23:02,000 --> 02:23:04,000
好悲伤的一个故事

3890
02:23:04,000 --> 02:23:05,000
对

3891
02:23:05,000 --> 02:23:06,000
eclipse

3892
02:23:06,000 --> 02:23:07,000
对

3893
02:23:07,000 --> 02:23:09,000
eclipse 可能是比较

3894
02:23:09,000 --> 02:23:10,000
嗯

3895
02:23:10,000 --> 02:23:11,000
非常

3896
02:23:11,000 --> 02:23:12,000
平庸的一个 ide 吧

3897
02:23:12,000 --> 02:23:13,000
应该说

3898
02:23:13,000 --> 02:23:14,000
这叫这能叫品用来形成

3899
02:23:14,000 --> 02:23:15,000
不就是大而全的庸种一个东西吗

3900
02:23:15,000 --> 02:23:16,000
不他所谓平庸就是应该 eclipse 可以在所有平台上使用

3901
02:23:16,000 --> 02:23:17,000
对

3902
02:23:17,000 --> 02:23:18,000
然后因为 x 最长

3903
02:23:18,000 --> 02:23:19,000
这最多是一个平庸的一个东西

3904
02:23:19,000 --> 02:23:20,000
对

3905
02:23:20,000 --> 02:23:21,000
对

3906
02:23:21,000 --> 02:23:22,000
对

3907
02:23:22,000 --> 02:23:23,000
对

3908
02:23:23,000 --> 02:23:24,000
对

3909
02:23:24,000 --> 02:23:25,000
对

3910
02:23:25,000 --> 02:23:26,000
对

3911
02:23:26,000 --> 02:23:27,000
对

3912
02:23:27,000 --> 02:23:28,000
对

3913
02:23:28,000 --> 02:23:29,000
对

3914
02:23:29,000 --> 02:23:30,000
对

3915
02:23:30,000 --> 02:23:31,000
对

3916
02:23:31,000 --> 02:23:32,000
对

3917
02:23:32,000 --> 02:23:33,000
对对

3918
02:23:33,000 --> 02:23:34,000
就是

3919
02:23:34,000 --> 02:23:38,000
就是

3920
02:23:38,000 --> 02:23:39,000
对

3921
02:23:39,000 --> 02:23:52,000
这个

3922
02:23:52,000 --> 02:23:53,000
filos milliseconomy

3923
02:23:53,000 --> 02:23:56,000
就是在在 é

3924
02:23:56,000 --> 02:23:59,000
当人是在一类五组

3925
02:23:59,000 --> 02:24:00,000
正问

3926
02:24:00,000 --> 02:24:00,000
复数

3927
02:24:00,000 --> 02:24:01,000
就是我现在所做的事情

3928
02:24:01,000 --> 02:24:03,000
就我发现有个问题

3929
02:24:03,000 --> 02:24:06,000
就是就学校里面教人写

3930
02:24:06,000 --> 02:24:08,000
因为现在大部分

3931
02:24:08,000 --> 02:24:10,000
就学校里面大部分教

3932
02:24:10,000 --> 02:24:12,000
是用 Java 写那个入门

3933
02:24:12,000 --> 02:24:13,000
学 CS 入门那些东西

3934
02:24:13,000 --> 02:24:15,000
然后发现他们都在用 Eclipse

3935
02:24:15,000 --> 02:24:16,000
对

3936
02:24:16,000 --> 02:24:18,000
Eclipse 对

3937
02:24:18,000 --> 02:24:20,000
这也是平庸的一个点

3938
02:24:20,000 --> 02:24:22,000
就是如果一个人

3939
02:24:22,000 --> 02:24:23,000
在学校里面学过 Java

3940
02:24:23,000 --> 02:24:25,000
那他基本上就很有可能

3941
02:24:25,000 --> 02:24:26,000
用过 Eclipse

3942
02:24:26,000 --> 02:24:28,000
惯性了对吧

3943
02:24:28,000 --> 02:24:29,000
对就是教材就会说

3944
02:24:29,000 --> 02:24:31,000
你去下载一个这个工具

3945
02:24:31,000 --> 02:24:32,000
他会一步一步告诉你

3946
02:24:32,000 --> 02:24:33,000
怎么去完成这个配置

3947
02:24:33,000 --> 02:24:34,000
在你没有一个偏好的情况之下

3948
02:24:34,000 --> 02:24:35,000
你当然要按照教材上

3949
02:24:35,000 --> 02:24:37,000
告诉你的事情来做

3950
02:24:37,000 --> 02:24:39,000
对吧

3951
02:24:39,000 --> 02:24:39,000
对

3952
02:24:39,000 --> 02:24:42,000
然后这就导致了 Eclipse

3953
02:24:42,000 --> 02:24:43,000
是一个非常没有

3954
02:24:43,000 --> 02:24:45,000
你谈到它的时候

3955
02:24:45,000 --> 02:24:47,000
你就好像谈论空气或者水

3956
02:24:47,000 --> 02:24:49,000
你对它没有什么偏好

3957
02:24:49,000 --> 02:24:49,000
或者是

3958
02:24:49,000 --> 02:24:51,000
没有性格的东西

3959
02:24:51,000 --> 02:24:51,000
对

3960
02:24:51,000 --> 02:24:54,000
人们只能吐槽说

3961
02:24:54,000 --> 02:24:56,000
比如说 Eclipse 在 Mac 上

3962
02:24:56,000 --> 02:24:56,000
非常非常慢

3963
02:24:56,000 --> 02:24:58,000
不光是 Mac 吧

3964
02:24:58,000 --> 02:24:59,000
所有系统上都很慢

3965
02:24:59,000 --> 02:24:59,000
对

3966
02:24:59,000 --> 02:25:02,000
我觉得在 Linux 上还可以

3967
02:25:02,000 --> 02:25:02,000
还可以

3968
02:25:02,000 --> 02:25:03,000
但是在 Mac 上

3969
02:25:03,000 --> 02:25:04,000
就是经常会卡到

3970
02:25:04,000 --> 02:25:05,000
我也不知道

3971
02:25:05,000 --> 02:25:06,000
应该跟项目有关

3972
02:25:06,000 --> 02:25:09,000
就是我现在做的项目是一个

3973
02:25:09,000 --> 02:25:12,000
我来说一个词

3974
02:25:12,000 --> 02:25:13,000
你不要被吓到

3975
02:25:13,000 --> 02:25:14,000
Maven

3976
02:25:14,000 --> 02:25:16,000
对

3977
02:25:16,000 --> 02:25:19,000
是用 Maven 来管理

3978
02:25:19,000 --> 02:25:20,000
这个软件包的

3979
02:25:20,000 --> 02:25:21,000
然后

3980
02:25:21,000 --> 02:25:24,000
我们这个项目

3981
02:25:24,000 --> 02:25:26,000
大概有 70 到 80 个

3982
02:25:26,000 --> 02:25:28,000
Maven

3983
02:25:28,000 --> 02:25:29,000
Module 吧

3984
02:25:29,000 --> 02:25:30,000
OK

3985
02:25:30,000 --> 02:25:31,000
Maven Project

3986
02:25:31,000 --> 02:25:32,000
然后

3987
02:25:32,000 --> 02:25:34,000
每次去刷新的时候

3988
02:25:34,000 --> 02:25:36,000
就是 Eclipse 要在后台去更新

3989
02:25:36,000 --> 02:25:37,000
整个

3990
02:25:37,000 --> 02:25:39,000
整个项目的

3991
02:25:39,000 --> 02:25:40,000
Dependency 的时候

3992
02:25:40,000 --> 02:25:41,000
可能

3993
02:25:41,000 --> 02:25:43,000
整个程序可以

3994
02:25:43,000 --> 02:25:44,000
长达 20 分钟

3995
02:25:44,000 --> 02:25:45,000
时序响应

3996
02:25:45,000 --> 02:25:47,000
这在 Linux 上面

3997
02:25:47,000 --> 02:25:48,000
是完全不会出现的

3998
02:25:48,000 --> 02:25:49,000
OK

3999
02:25:49,000 --> 02:25:50,000
对

4000
02:25:50,000 --> 02:25:51,000
就是实现的问题

4001
02:25:51,000 --> 02:25:54,000
它不对

4002
02:25:54,000 --> 02:25:55,000
它应该是 Java 写的

4003
02:25:55,000 --> 02:25:56,000
如果虚拟机没有

4004
02:25:56,000 --> 02:25:56,000
它是 Java 写的

4005
02:25:56,000 --> 02:25:58,000
JVM 没有问题的话

4006
02:25:58,000 --> 02:25:59,000
不能

4007
02:25:59,000 --> 02:26:01,000
可能并该出现这种

4008
02:26:01,000 --> 02:26:01,000
这么大的差异

4009
02:26:01,000 --> 02:26:02,000
我觉得肯定是

4010
02:26:02,000 --> 02:26:03,000
肯定是实现的问题

4011
02:26:03,000 --> 02:26:04,000
就是它的

4012
02:26:04,000 --> 02:26:06,000
可能三炮现成模型不是很

4013
02:26:06,000 --> 02:26:07,000
不是很科学

4014
02:26:07,000 --> 02:26:12,000
导致 UI 的现成会长时间的持续响应

4015
02:26:12,000 --> 02:26:13,000
哇

4016
02:26:13,000 --> 02:26:15,000
有可能是在 Maven 的

4017
02:26:15,000 --> 02:26:18,000
GUI 那套是不是没有弄好

4018
02:26:18,000 --> 02:26:19,000
很有可能

4019
02:26:19,000 --> 02:26:19,000
对

4020
02:26:19,000 --> 02:26:23,000
我其实我有用过一段时间的 Eclipse

4021
02:26:23,000 --> 02:26:25,000
因为要去阅卷

4022
02:26:25,000 --> 02:26:27,000
就是做助教的话

4023
02:26:27,000 --> 02:26:28,000
要写好作业

4024
02:26:28,000 --> 02:26:29,000
然后就会

4025
02:26:29,000 --> 02:26:31,000
因为你今天刚才也讲了

4026
02:26:31,000 --> 02:26:33,000
问你们他是有一个惯性的

4027
02:26:33,000 --> 02:26:35,000
就学生学校里面老师交用

4028
02:26:35,000 --> 02:26:38,000
然后学生也要用我打开他的工程文件

4029
02:26:38,000 --> 02:26:40,000
因为只能用不然的话

4030
02:26:40,000 --> 02:26:41,000
我还得再去折腾一下

4031
02:26:41,000 --> 02:26:42,000
他怎么去配置

4032
02:26:42,000 --> 02:26:43,000
他每一个工程是怎么样

4033
02:26:43,000 --> 02:26:44,000
对吧

4034
02:26:44,000 --> 02:26:46,000
还是挺坑爹的

4035
02:26:46,000 --> 02:26:48,000
我对他的最恶劣的印象

4036
02:26:48,000 --> 02:26:49,000
就是他实在是太丑了

4037
02:26:49,000 --> 02:26:54,000
这个我已经好吧

4038
02:26:54,000 --> 02:26:55,000
他比 Visho

4039
02:26:55,000 --> 02:26:57,000
他比我见过的任何一款编辑都要丑

4040
02:26:58,000 --> 02:27:03,000
因为他对没有一个

4041
02:27:03,000 --> 02:27:04,000
就是怎么说呢

4042
02:27:04,000 --> 02:27:08,000
就是 Eclipse 他的组织模式导致了

4043
02:27:08,000 --> 02:27:10,000
他必然是这样一个宿命

4044
02:27:10,000 --> 02:27:12,000
他用了一个

4045
02:27:12,000 --> 02:27:16,000
他其实你也他也不算是用的是一个跨平台的 GUI 套件

4046
02:27:16,000 --> 02:27:18,000
因为我看他的元素

4047
02:27:18,000 --> 02:27:21,000
有些还是在 Mac 上是原生的 Mac 元素

4048
02:27:21,000 --> 02:27:22,000
但是一到他编辑器

4049
02:27:22,000 --> 02:27:24,000
就是 IDE 里面的那些东西

4050
02:27:24,000 --> 02:27:25,000
一些部件的时候

4051
02:27:25,000 --> 02:27:26,000
你就会明显的发现

4052
02:27:26,000 --> 02:27:27,000
这和其他这种完全不一样

4053
02:27:27,000 --> 02:27:28,000
对吧

4054
02:27:28,000 --> 02:27:28,000
对吧

4055
02:27:28,000 --> 02:27:28,000
对吧

4056
02:27:28,000 --> 02:27:28,000
对吧

4057
02:27:28,000 --> 02:27:28,000
对吧

4058
02:27:28,000 --> 02:27:28,000
对吧

4059
02:27:28,000 --> 02:27:28,000
对吧

4060
02:27:28,000 --> 02:27:28,000
对吧

4061
02:27:28,000 --> 02:27:28,000
对吧

4062
02:27:28,000 --> 02:27:28,000
对吧

4063
02:27:28,000 --> 02:27:28,000
对吧

4064
02:27:28,000 --> 02:27:28,000
对吧

4065
02:27:28,000 --> 02:27:28,000
对吧

4066
02:27:28,000 --> 02:27:30,000
对没错

4067
02:27:30,000 --> 02:27:33,000
而且在我不知道 Windows 上面是有没有这个问题

4068
02:27:33,000 --> 02:27:37,000
但他在 Linux 上面好像他还装的装的挺好的

4069
02:27:37,000 --> 02:27:38,000
就模拟的挺好

4070
02:27:38,000 --> 02:27:40,000
也可能是这个选择

4071
02:27:40,000 --> 02:27:41,000
就 GTK 的情况下吧

4072
02:27:41,000 --> 02:27:43,000
他还还凑合

4073
02:27:43,000 --> 02:27:47,000
但是在在 Mac 上或者在 Windows 上

4074
02:27:47,000 --> 02:27:48,000
他就是长得很奇怪

4075
02:27:48,000 --> 02:27:53,000
这其实可能也是因为就是他他用的那一套叫什么

4076
02:27:53,000 --> 02:27:55,000
Standard Widget SWT

4077
02:27:55,000 --> 02:27:57,000
Standard Widget 2 K

4078
02:27:57,000 --> 02:27:57,000
Suite

4079
02:27:57,000 --> 02:27:57,000
Suite

4080
02:27:57,000 --> 02:27:57,000
Suite

4081
02:27:57,000 --> 02:27:58,000
Suite

4082
02:27:58,000 --> 02:27:59,000
Suite

4083
02:27:59,000 --> 02:27:59,000
对

4084
02:27:59,000 --> 02:28:00,000
是一套

4085
02:28:00,000 --> 02:28:01,000
的确也是一套

4086
02:28:01,000 --> 02:28:03,000
可能只有 Eclipse 在用的东西吧

4087
02:28:03,000 --> 02:28:09,000
还是 SWT 好像就是专门为了 Eclipse 而开发出来的东西吗

4088
02:28:09,000 --> 02:28:09,000
应该是这样吧

4089
02:28:09,000 --> 02:28:11,000
我记得我没记错的话

4090
02:28:11,000 --> 02:28:13,000
就是他会用这么一套跨平台东西去做

4091
02:28:13,000 --> 02:28:14,000
然后搞的

4092
02:28:14,000 --> 02:28:14,000
对

4093
02:28:14,000 --> 02:28:17,000
虽然在每个平台上你说都长得一样了

4094
02:28:17,000 --> 02:28:17,000
没有问题

4095
02:28:17,000 --> 02:28:19,000
可是这实在是太丑了

4096
02:28:19,000 --> 02:28:20,000
怎么能够

4097
02:28:20,000 --> 02:28:24,000
而且他那些窗口

4098
02:28:24,000 --> 02:28:26,000
你刚才说什么 Xcode 的窗口的布局

4099
02:28:26,000 --> 02:28:28,000
可能不是很合理

4100
02:28:28,000 --> 02:28:28,000
对吧

4101
02:28:28,000 --> 02:28:32,000
他起码他好歹还长得还可以

4102
02:28:32,000 --> 02:28:33,000
长得还能看

4103
02:28:33,000 --> 02:28:33,000
对吧

4104
02:28:33,000 --> 02:28:34,000
他至少是漂亮的

4105
02:28:34,000 --> 02:28:34,000
对

4106
02:28:34,000 --> 02:28:35,000
这个没错

4107
02:28:35,000 --> 02:28:36,000
Eclipse 这种布局

4108
02:28:36,000 --> 02:28:36,000
我

4109
02:28:36,000 --> 02:28:40,000
这已经不能用

4110
02:28:40,000 --> 02:28:42,000
用丑来形容了

4111
02:28:42,000 --> 02:28:42,000
简直

4112
02:28:42,000 --> 02:28:43,000
对于外贸协会来说

4113
02:28:43,000 --> 02:28:45,000
这是非常非常不能忍受的一件事

4114
02:28:45,000 --> 02:28:45,000
对

4115
02:28:45,000 --> 02:28:47,000
而且你说这都是什么乱七八糟的玩意

4116
02:28:47,000 --> 02:28:49,000
而且他那些各种图标也非常诡异

4117
02:28:49,000 --> 02:28:51,000
就是

4118
02:28:51,000 --> 02:28:55,000
你会想这是一个什么样的设计师设计出来的图标

4119
02:28:55,000 --> 02:28:58,000
好像

4120
02:28:58,000 --> 02:28:59,000
的确有

4121
02:28:59,000 --> 02:29:00,000
你这么一说

4122
02:29:00,000 --> 02:29:02,000
我也觉得好像是挺奇怪

4123
02:29:02,000 --> 02:29:05,000
就完全不能反映他要代表的那个意思

4124
02:29:05,000 --> 02:29:06,000
我觉得就是

4125
02:29:06,000 --> 02:29:07,000
好吧

4126
02:29:07,000 --> 02:29:09,000
也可能是他那套语会

4127
02:29:09,000 --> 02:29:10,000
我没有我至今

4128
02:29:10,000 --> 02:29:12,000
至今为止没有理解到的一个结果

4129
02:29:12,000 --> 02:29:13,000
反正

4130
02:29:13,000 --> 02:29:13,000
对

4131
02:29:13,000 --> 02:29:18,000
我想到的一件完全无关的事情

4132
02:29:18,000 --> 02:29:19,000
就是图标

4133
02:29:19,000 --> 02:29:21,000
其实图标设计的一个问题

4134
02:29:21,000 --> 02:29:23,000
就是我在大上大学的时候

4135
02:29:23,000 --> 02:29:26,000
有一天去参加一个

4136
02:29:28,000 --> 02:29:31,000
web 设计的一个展会之类的

4137
02:29:31,000 --> 02:29:32,000
不展会

4138
02:29:32,000 --> 02:29:36,000
就是一个颁奖会之类的这么一个活动

4139
02:29:36,000 --> 02:29:39,000
然后就做的时候有一个教美术

4140
02:29:39,000 --> 02:29:42,000
还是教什么视觉传达的一个老师

4141
02:29:42,000 --> 02:29:45,000
在那边指导台上的人用 powerpoint

4142
02:29:45,000 --> 02:29:48,000
然后他说一直说点那个酒杯

4143
02:29:48,000 --> 02:29:50,000
点那个酒杯

4144
02:29:50,000 --> 02:29:51,000
点那个酒杯的图标

4145
02:29:51,000 --> 02:29:55,000
然后我想 powerpoint 上面

4146
02:29:55,000 --> 02:29:57,000
为什么会有一个酒杯的图标呢

4147
02:29:57,000 --> 02:29:58,000
结果是哪个图标呢

4148
02:29:58,000 --> 02:30:02,000
结果是当时的 powerpoint

4149
02:30:02,000 --> 02:30:04,000
2002 还是什么

4150
02:30:04,000 --> 02:30:07,000
反正是某一个特定版本的 powerpoint

4151
02:30:07,000 --> 02:30:08,000
可能现在还是这样

4152
02:30:08,000 --> 02:30:13,000
就是有一个快捷的图标是进入展示模式

4153
02:30:13,000 --> 02:30:14,000
就是把你

4154
02:30:14,000 --> 02:30:15,000
你平时不是你打开

4155
02:30:15,000 --> 02:30:17,000
不是处于编辑模式吗

4156
02:30:17,000 --> 02:30:19,000
就是左边是 slides

4157
02:30:19,000 --> 02:30:21,000
然后右边是那个正要被编辑的 slides

4158
02:30:21,000 --> 02:30:24,000
然后你点一下那个图标

4159
02:30:24,000 --> 02:30:25,000
就可以立即进入放映模式

4160
02:30:25,000 --> 02:30:26,000
对

4161
02:30:26,000 --> 02:30:28,000
然后那个图标

4162
02:30:28,000 --> 02:30:28,000
对

4163
02:30:28,000 --> 02:30:30,000
那个图标其实是一个

4164
02:30:30,000 --> 02:30:31,000
是一个

4165
02:30:31,000 --> 02:30:35,000
就是下面是一个支架

4166
02:30:35,000 --> 02:30:37,000
那个放映机的吧

4167
02:30:37,000 --> 02:30:37,000
支一张白纸

4168
02:30:37,000 --> 02:30:39,000
不是不是不是放映机

4169
02:30:39,000 --> 02:30:40,000
就是那种 whiteboard

4170
02:30:40,000 --> 02:30:42,000
早期的 whiteboard 是一张纸

4171
02:30:42,000 --> 02:30:44,000
就是是一个 board

4172
02:30:44,000 --> 02:30:45,000
然后上面挂了很多纸

4173
02:30:45,000 --> 02:30:46,000
物理的 slides

4174
02:30:46,000 --> 02:30:48,000
对物理的 slides

4175
02:30:48,000 --> 02:30:50,000
然后这个 slides

4176
02:30:50,000 --> 02:30:51,000
这个下面是一个支架

4177
02:30:51,000 --> 02:30:54,000
上面是一张纸的这么一个图标

4178
02:30:54,000 --> 02:30:55,000
被那个老师认成了酒杯

4179
02:30:55,000 --> 02:30:57,000
这件事情一直

4180
02:30:58,000 --> 02:30:59,000
一直深深地印在我的脑海里

4181
02:30:59,000 --> 02:31:00,000
我就觉得

4182
02:31:00,000 --> 02:31:01,000
对

4183
02:31:01,000 --> 02:31:02,000
这交互设计

4184
02:31:02,000 --> 02:31:03,000
有时候你不会理解

4185
02:31:03,000 --> 02:31:06,000
你不会明白你的用户把它理解为什么

4186
02:31:06,000 --> 02:31:06,000
就比如说

4187
02:31:06,000 --> 02:31:08,000
还有一例就是

4188
02:31:08,000 --> 02:31:10,000
common conquer 里面

4189
02:31:10,000 --> 02:31:11,000
那个

4190
02:31:11,000 --> 02:31:14,000
有三个工具

4191
02:31:14,000 --> 02:31:15,000
最左边是修理

4192
02:31:15,000 --> 02:31:18,000
中间是贩卖

4193
02:31:18,000 --> 02:31:18,000
对

4194
02:31:18,000 --> 02:31:19,000
一个钱

4195
02:31:19,000 --> 02:31:20,000
就是你可以把自己的技术卖掉

4196
02:31:20,000 --> 02:31:22,000
左边是个扳手

4197
02:31:22,000 --> 02:31:24,000
然后右边是个刀来的标志

4198
02:31:24,000 --> 02:31:24,000
对

4199
02:31:24,000 --> 02:31:26,000
然后那我想说

4200
02:31:28,000 --> 02:31:30,000
用扳手可以修理

4201
02:31:30,000 --> 02:31:34,000
用刀了不就是买建筑吗

4202
02:31:34,000 --> 02:31:37,000
不对不对

4203
02:31:37,000 --> 02:31:37,000
反过来

4204
02:31:37,000 --> 02:31:39,000
用刀了可以把建筑卖掉

4205
02:31:39,000 --> 02:31:41,000
那用扳手难道不就是

4206
02:31:41,000 --> 02:31:43,000
造一个建筑出来吗

4207
02:31:43,000 --> 02:31:44,000
然后

4208
02:31:44,000 --> 02:31:47,000
对我把自己所有建筑卖掉了

4209
02:31:47,000 --> 02:31:48,000
我把自己所有建筑卖掉了

4210
02:31:48,000 --> 02:31:51,000
然后试图重新把基地再搭一遍

4211
02:31:51,000 --> 02:31:52,000
用扳手

4212
02:31:52,000 --> 02:31:55,000
对

4213
02:31:55,000 --> 02:31:56,000
一上来把自己的大门也卖掉了

4214
02:31:56,000 --> 02:31:58,000
所以什么图标设计

4215
02:31:58,000 --> 02:31:59,000
还是有点很重要

4216
02:31:59,000 --> 02:32:01,000
对交互设计还是很重要的

4217
02:32:01,000 --> 02:32:01,000
就像你说的

4218
02:32:01,000 --> 02:32:02,000
有时候

4219
02:32:02,000 --> 02:32:04,000
如果你不太明白

4220
02:32:04,000 --> 02:32:06,000
jar 这个单词

4221
02:32:06,000 --> 02:32:09,000
在英语里面可以指代罐子的话

4222
02:32:09,000 --> 02:32:10,000
你是不太明白

4223
02:32:10,000 --> 02:32:11,000
为什么 Eclipse 要把那个

4224
02:32:11,000 --> 02:32:13,000
那个 jar 文件

4225
02:32:13,000 --> 02:32:14,000
画成一个罐子

4226
02:32:14,000 --> 02:32:16,000
然后里面装着零和一

4227
02:32:16,000 --> 02:32:18,000
的确是挺耳朵

4228
02:32:18,000 --> 02:32:21,000
关于 Eclipse 的吐槽

4229
02:32:21,000 --> 02:32:22,000
还有一个就是它

4230
02:32:22,000 --> 02:32:24,000
你们觉得它非常慢

4231
02:32:24,000 --> 02:32:26,000
对啊

4232
02:32:26,000 --> 02:32:27,000
我刚才已经说了

4233
02:32:27,000 --> 02:32:27,000
就是

4234
02:32:27,000 --> 02:32:27,000
就是

4235
02:32:28,000 --> 02:32:29,000
它慢不是那种

4236
02:32:29,000 --> 02:32:32,000
可以接受的慢

4237
02:32:32,000 --> 02:32:33,000
它不是那种可以忍受

4238
02:32:33,000 --> 02:32:34,000
你说点一下

4239
02:32:34,000 --> 02:32:35,000
可能卡一下这样子

4240
02:32:35,000 --> 02:32:37,000
它是一种整个流程都会觉得

4241
02:32:37,000 --> 02:32:39,000
连输入一个字

4242
02:32:39,000 --> 02:32:40,000
你都会觉得它有点慢的那种慢

4243
02:32:40,000 --> 02:32:41,000
但可能这次

4244
02:32:41,000 --> 02:32:43,000
就好像 somehow 你输入一个字符

4245
02:32:43,000 --> 02:32:44,000
它要更新整个 UI 的感觉

4246
02:32:44,000 --> 02:32:47,000
对就是有一种黏质的感觉

4247
02:32:47,000 --> 02:32:49,000
我不知道我怎么描述准不准确

4248
02:32:49,000 --> 02:32:50,000
就是你会觉得

4249
02:32:50,000 --> 02:32:52,000
你跟 UI 交互的时候

4250
02:32:52,000 --> 02:32:54,000
你在写代码的时候

4251
02:32:54,000 --> 02:32:57,000
你永远不可能找到那种流畅的感觉

4252
02:32:58,000 --> 02:32:59,000
没错

4253
02:32:59,000 --> 02:33:00,000
是这样的

4254
02:33:00,000 --> 02:33:01,000
我一直不明白为什么

4255
02:33:01,000 --> 02:33:02,000
刚才你可以说

4256
02:33:02,000 --> 02:33:03,000
这个可能是这个什么

4257
02:33:03,000 --> 02:33:05,000
用那个 JVM 虚拟机

4258
02:33:05,000 --> 02:33:06,000
它可能这个 latency

4259
02:33:06,000 --> 02:33:09,000
不如用原生的像 C 或者 C++这种

4260
02:33:09,000 --> 02:33:11,000
不需要 GC 的语言

4261
02:33:11,000 --> 02:33:12,000
或者这种来的要直接

4262
02:33:12,000 --> 02:33:14,000
但是语言我们不管了

4263
02:33:14,000 --> 02:33:15,000
但是就是说

4264
02:33:15,000 --> 02:33:17,000
这个最终的给我的体验就是

4265
02:33:17,000 --> 02:33:18,000
我如果可能

4266
02:33:18,000 --> 02:33:21,000
我肯定不会再想在这里面写东西了

4267
02:33:21,000 --> 02:33:22,000
没错

4268
02:33:22,000 --> 02:33:23,000
对

4269
02:33:23,000 --> 02:33:26,000
就是基本上我也曾经挣扎过

4270
02:33:26,000 --> 02:33:28,000
就是我想要切换到那个

4271
02:33:28,000 --> 02:33:28,000
一个语言的

4272
02:33:28,000 --> 02:33:29,000
IntelliJ 下面

4273
02:33:29,000 --> 02:33:32,000
但是 B 公司的项目

4274
02:33:32,000 --> 02:33:34,000
其实是非常 Eclipse 依赖的

4275
02:33:34,000 --> 02:33:36,000
因为是 legacy code

4276
02:33:36,000 --> 02:33:38,000
所以然后里面有很多

4277
02:33:38,000 --> 02:33:38,000
比如说启动项目

4278
02:33:38,000 --> 02:33:40,000
或者是

4279
02:33:40,000 --> 02:33:42,000
启动项目可能有十几个

4280
02:33:42,000 --> 02:33:45,000
每一个分别启动一个

4281
02:33:45,000 --> 02:33:48,000
启动整个组件里面的

4282
02:33:48,000 --> 02:33:49,000
某一个特定的组件

4283
02:33:49,000 --> 02:33:52,000
然后打开一个窗口

4284
02:33:52,000 --> 02:33:53,000
windows 之类的

4285
02:33:53,000 --> 02:33:54,000
这些东西我基本上

4286
02:33:54,000 --> 02:33:56,000
直到现在就快要离职了

4287
02:33:56,000 --> 02:33:57,000
我都没有时间去

4288
02:33:57,000 --> 02:33:58,000
弄明白

4289
02:33:58,000 --> 02:33:59,000
它到底是启动了哪一个组件

4290
02:33:59,000 --> 02:34:04,000
但整个程序基本上脱离 Eclipse

4291
02:34:04,000 --> 02:34:05,000
是非常难以使用的

4292
02:34:05,000 --> 02:34:08,000
或者是难以维护的

4293
02:34:08,000 --> 02:34:10,000
但是我还是成功的做到了

4294
02:34:10,000 --> 02:34:12,000
在 80%的时间里面

4295
02:34:12,000 --> 02:34:14,000
能用 Vim 改的部分

4296
02:34:14,000 --> 02:34:15,000
就用 Vim 改

4297
02:34:15,000 --> 02:34:18,000
我宁可用 Vim 改完 Java

4298
02:34:18,000 --> 02:34:21,000
然后用 Synthetic 去看一下

4299
02:34:21,000 --> 02:34:22,000
有没有语法错误

4300
02:34:22,000 --> 02:34:23,000
然后编译

4301
02:34:23,000 --> 02:34:24,000
如果编译不过了

4302
02:34:24,000 --> 02:34:25,000
我再回去改

4303
02:34:25,000 --> 02:34:27,000
我宁可这样也不愿意去启动 Eclipse

4304
02:34:28,000 --> 02:34:30,000
你看这把人逼成什么样子

4305
02:34:30,000 --> 02:34:31,000
对

4306
02:34:31,000 --> 02:34:31,000
就可以想象

4307
02:34:31,000 --> 02:34:33,000
他的 pay in ass 的指数有多高

4308
02:34:33,000 --> 02:34:34,000
对

4309
02:34:34,000 --> 02:34:35,000
反正就是刚才讲的

4310
02:34:35,000 --> 02:34:36,000
它没有那种

4311
02:34:36,000 --> 02:34:39,000
让你很畅快的感觉

4312
02:34:39,000 --> 02:34:40,000
所以我很难想象

4313
02:34:40,000 --> 02:34:41,000
有人会在里面

4314
02:34:41,000 --> 02:34:43,000
做到出一个好的产品

4315
02:34:43,000 --> 02:34:44,000
我问你一件事情

4316
02:34:44,000 --> 02:34:47,000
你觉得技术上存在一种人

4317
02:34:47,000 --> 02:34:49,000
能够理解 Lixip 的所有功能

4318
02:34:49,000 --> 02:34:51,000
那些按钮的组合是在干嘛吗

4319
02:34:51,000 --> 02:34:55,000
我觉得 Eclipse 就像 C++一样

4320
02:34:55,000 --> 02:34:55,000
任何一个说

4321
02:34:55,000 --> 02:34:57,000
我精通 Eclipse 的人都在扯淡

4322
02:34:58,000 --> 02:35:01,000
所以没有一个人是理解

4323
02:35:01,000 --> 02:35:04,000
所有的按钮或者功能是干嘛的

4324
02:35:04,000 --> 02:35:07,000
可以这样说

4325
02:35:07,000 --> 02:35:09,000
我相信如果你愿意穷尽

4326
02:35:09,000 --> 02:35:13,000
你两三年的时间去研究一个版本的话

4327
02:35:13,000 --> 02:35:14,000
应该是可以研究到

4328
02:35:14,000 --> 02:35:14,000
他会更新

4329
02:35:14,000 --> 02:35:16,000
最近又更新了一个版本

4330
02:35:16,000 --> 02:35:18,000
现在版本叫什么

4331
02:35:18,000 --> 02:35:19,000
Luna 还是叫什么

4332
02:35:19,000 --> 02:35:22,000
现在应该已经出了 Luna 版本

4333
02:35:22,000 --> 02:35:24,000
我还在用之前那个什么

4334
02:35:24,000 --> 02:35:26,000
反正木星

4335
02:35:26,000 --> 02:35:27,000
我们卫星的名字

4336
02:35:27,000 --> 02:35:27,000
我的天啊

4337
02:35:28,000 --> 02:35:31,000
还有一个事情就是

4338
02:35:31,000 --> 02:35:32,000
据我所知

4339
02:35:32,000 --> 02:35:34,000
好像安卓开发

4340
02:35:34,000 --> 02:35:36,000
安卓 studio

4341
02:35:36,000 --> 02:35:38,000
好像是基于 Eclipse 改的

4342
02:35:38,000 --> 02:35:39,000
是吧

4343
02:35:39,000 --> 02:35:39,000
对

4344
02:35:39,000 --> 02:35:43,000
安卓的开发最开始是一定要装 Eclipse 的插件

4345
02:35:43,000 --> 02:35:45,000
我觉得当时就已经 turn me off 了

4346
02:35:45,000 --> 02:35:47,000
那我这辈子都不要用安卓的开发程序了

4347
02:35:47,000 --> 02:35:49,000
居然用 Eclipse

4348
02:35:49,000 --> 02:35:50,000
然后

4349
02:35:50,000 --> 02:35:51,000
对

4350
02:35:51,000 --> 02:35:53,000
而且 Google App Engine

4351
02:35:53,000 --> 02:35:57,000
其实早期也是支持你用一个 Eclipse

4352
02:35:57,000 --> 02:36:01,000
因为它支持 Java 的那个人形态

4353
02:36:01,000 --> 02:36:02,000
对

4354
02:36:02,000 --> 02:36:02,000
对

4355
02:36:02,000 --> 02:36:03,000
对

4356
02:36:03,000 --> 02:36:03,000
然后

4357
02:36:03,000 --> 02:36:07,000
我就安卓那次我一直有一个假说

4358
02:36:07,000 --> 02:36:09,000
那也肯定是不对的

4359
02:36:09,000 --> 02:36:11,000
但是我倾向于这么想

4360
02:36:11,000 --> 02:36:16,000
我们老是说安卓上面的应用整体来说

4361
02:36:16,000 --> 02:36:18,000
不如 iOS 上面的好看

4362
02:36:18,000 --> 02:36:20,000
我在想是不是

4363
02:36:20,000 --> 02:36:21,000
和开发工具有关吗

4364
02:36:21,000 --> 02:36:22,000
你想象一下

4365
02:36:22,000 --> 02:36:24,000
如果你一个作为一个

4366
02:36:24,000 --> 02:36:25,000
比如说你是一个就是什么

4367
02:36:25,000 --> 02:36:26,000
所谓的独立开发者

4368
02:36:26,000 --> 02:36:27,000
那种大公司

4369
02:36:27,000 --> 02:36:27,000
你之后有大公司之后有什么东西呢

4370
02:36:27,000 --> 02:36:28,000
你自己单独的美工那种东西

4371
02:36:28,000 --> 02:36:29,000
再说

4372
02:36:29,000 --> 02:36:31,000
就是你作为一个

4373
02:36:31,000 --> 02:36:32,000
这种小的两三个人

4374
02:36:32,000 --> 02:36:34,000
或者一个人的团队

4375
02:36:34,000 --> 02:36:34,000
不是团队

4376
02:36:34,000 --> 02:36:35,000
就是两三个团队和一个人

4377
02:36:35,000 --> 02:36:36,000
你自己一个独立的

4378
02:36:36,000 --> 02:36:38,000
就单一单人开发者

4379
02:36:38,000 --> 02:36:42,000
你面对着这么一个丑陋的一个界面

4380
02:36:42,000 --> 02:36:44,000
你有心情做出一个很漂亮的产品

4381
02:36:44,000 --> 02:36:46,000
我一直很怀疑这件事情

4382
02:36:46,000 --> 02:36:48,000
起码我每次看到 Eclipse 的时候

4383
02:36:48,000 --> 02:36:51,000
我的心态就觉得很焦躁

4384
02:36:51,000 --> 02:36:52,000
很焦虑

4385
02:36:52,000 --> 02:36:53,000
没错

4386
02:36:53,000 --> 02:36:56,000
所以这里可能会影响很多心情吧

4387
02:36:56,000 --> 02:36:56,000
我觉得

4388
02:36:56,000 --> 02:36:57,000
对

4389
02:36:57,000 --> 02:36:57,000
对

4390
02:36:57,000 --> 02:36:57,000
对

4391
02:36:57,000 --> 02:37:01,000
就好像 Xcode 再怎么丑

4392
02:37:01,000 --> 02:37:02,000
再怎么不好用

4393
02:37:02,000 --> 02:37:03,000
好像还长得可以

4394
02:37:03,000 --> 02:37:07,000
画窗体的部分还是比较漂亮

4395
02:37:07,000 --> 02:37:10,000
但是反过来在 Virals Studio 下面

4396
02:37:10,000 --> 02:37:14,000
一显示一个 Windows Form 1

4397
02:37:14,000 --> 02:37:16,000
然后里面一堆小点

4398
02:37:16,000 --> 02:37:17,000
我立刻就觉得

4399
02:37:17,000 --> 02:37:18,000
我靠是什么

4400
02:37:18,000 --> 02:37:21,000
就它那个小点作用是为了让你定位

4401
02:37:21,000 --> 02:37:21,000
对吧

4402
02:37:21,000 --> 02:37:22,000
是定位用的

4403
02:37:22,000 --> 02:37:23,000
就是 Grid

4404
02:37:23,000 --> 02:37:26,000
但是明显不如 Xcode 的那个叫什么

4405
02:37:26,000 --> 02:37:27,000
那个线条

4406
02:37:27,000 --> 02:37:27,000
Guideline

4407
02:37:27,000 --> 02:37:27,000
好用

4408
02:37:27,000 --> 02:37:28,000
漂亮

4409
02:37:28,000 --> 02:37:28,000
漂亮

4410
02:37:28,000 --> 02:37:30,000
而且长得丑

4411
02:37:30,000 --> 02:37:31,000
但你其实也不能一个人论

4412
02:37:31,000 --> 02:37:31,000
对吧

4413
02:37:31,000 --> 02:37:34,000
比如说 App Store 里面

4414
02:37:34,000 --> 02:37:37,000
同样有非常多丑的令人发指的 App

4415
02:37:37,000 --> 02:37:41,000
而安卓的下面也的确有比较精美的

4416
02:37:41,000 --> 02:37:43,000
肯定是有什么例外的

4417
02:37:43,000 --> 02:37:44,000
反例永远是存在的

4418
02:37:44,000 --> 02:37:47,000
但我承认你说的有道理

4419
02:37:47,000 --> 02:37:48,000
就是开发者的

4420
02:37:48,000 --> 02:37:50,000
如果面对一个丑陋的工具

4421
02:37:50,000 --> 02:37:51,000
做出来的东西

4422
02:37:51,000 --> 02:37:52,000
很有可能也是丑陋

4423
02:37:52,000 --> 02:37:53,000
进猪者吃

4424
02:37:53,000 --> 02:37:56,000
进魔杖黑

4425
02:37:56,000 --> 02:37:56,000
对

4426
02:37:56,000 --> 02:37:57,000
远离 X 3

4427
02:37:57,000 --> 02:37:58,000
障碍生命

4428
02:37:58,000 --> 02:38:00,000
别这样

4429
02:38:00,000 --> 02:38:04,000
不过如果说你是一个 Java 开发者

4430
02:38:04,000 --> 02:38:09,000
然后你想要尝试一款 IDE 的话

4431
02:38:09,000 --> 02:38:15,000
如果没有现有项目的限制

4432
02:38:15,000 --> 02:38:17,000
真的 Intellij

4433
02:38:17,000 --> 02:38:20,000
基本上是非常适合的一个选择

4434
02:38:20,000 --> 02:38:21,000
我觉得

4435
02:38:21,000 --> 02:38:24,000
因为或者说在 Java 开发

4436
02:38:24,000 --> 02:38:25,000
就以我有限的

4437
02:38:25,000 --> 02:38:27,000
粗险的 Java 开发经验

4438
02:38:27,000 --> 02:38:28,000
来看 Intellij

4439
02:38:28,000 --> 02:38:29,000
NetBeans

4440
02:38:29,000 --> 02:38:29,000
Eclipse

4441
02:38:29,000 --> 02:38:31,000
基本上是三大

4442
02:38:31,000 --> 02:38:33,000
最常被用到的站外地

4443
02:38:33,000 --> 02:38:34,000
而在这里面 Intellij

4444
02:38:34,000 --> 02:38:36,000
算是一个非常用心做的产品

4445
02:38:36,000 --> 02:38:40,000
而且 Intellij 背后的这个公司

4446
02:38:40,000 --> 02:38:42,000
叫什么 JetBrains

4447
02:38:42,000 --> 02:38:44,000
他们还做了很多其他的

4448
02:38:44,000 --> 02:38:45,000
很精雅的产品

4449
02:38:45,000 --> 02:38:46,000
比如说

4450
02:38:46,000 --> 02:38:48,000
PHP 的 PHP Storm

4451
02:38:48,000 --> 02:38:53,000
有 C++的叫做 C-Line

4452
02:38:53,000 --> 02:38:57,000
就是不是海狮的 C-Line

4453
02:38:57,000 --> 02:39:00,000
而是 C 然后 Line 就是 C 狮子

4454
02:39:00,000 --> 02:39:03,000
然后还有包括 JetBrains

4455
02:39:03,000 --> 02:39:06,000
还做了一款 Object C 的 IDE

4456
02:39:06,000 --> 02:39:09,000
我觉得这个也很让人震惊

4457
02:39:09,000 --> 02:39:11,000
就是 Object C 开发者

4458
02:39:11,000 --> 02:39:12,000
对

4459
02:39:12,000 --> 02:39:15,000
MAC 开发者本身就已经是一个小群体了

4460
02:39:15,000 --> 02:39:17,000
而这个小群体里面

4461
02:39:17,000 --> 02:39:18,000
再分一位

4462
02:39:18,000 --> 02:39:22,000
用 Xcode 的这种舍我其谁的工具的人

4463
02:39:22,000 --> 02:39:25,000
其实也习惯了

4464
02:39:25,000 --> 02:39:26,000
没有选择

4465
02:39:26,000 --> 02:39:26,000
而你居然以为

4466
02:39:26,000 --> 02:39:29,000
为这么样的学生开发出了这么一款 IDE 来

4467
02:39:29,000 --> 02:39:31,000
而且我用了用感觉还不错

4468
02:39:31,000 --> 02:39:33,000
也挺难得的

4469
02:39:33,000 --> 02:39:35,000
刚才你也说了

4470
02:39:35,000 --> 02:39:36,000
Xcode 有那么多问题

4471
02:39:36,000 --> 02:39:40,000
所以它能做一个 Alternative 应该是挺好的

4472
02:39:40,000 --> 02:39:41,000
没错

4473
02:39:41,000 --> 02:39:43,000
然后 JetBrains 还有 Python 的 IDE

4474
02:39:43,000 --> 02:39:45,000
就是 Python 如果我一定要用一个 IDE 的话

4475
02:39:45,000 --> 02:39:47,000
我应该会首先想到

4476
02:39:47,000 --> 02:39:53,000
JetBrains 出的这个叫做 PYCharm 的 IDE

4477
02:39:53,000 --> 02:39:54,000
也是蛮好的

4478
02:39:54,000 --> 02:39:55,000
对

4479
02:39:55,000 --> 02:39:56,000
对

4480
02:39:56,000 --> 02:39:58,000
PyCharm 也是他们出的原来

4481
02:39:58,000 --> 02:39:59,000
PyCharm 是他们出的

4482
02:39:59,000 --> 02:40:00,000
我知道

4483
02:40:00,000 --> 02:40:04,000
这个好像知道还有不少 Python 的用户在用 JetBrains

4484
02:40:04,000 --> 02:40:05,000
相当好用其实

4485
02:40:05,000 --> 02:40:06,000
对

4486
02:40:06,000 --> 02:40:09,000
IntelliJ 支持多种配色

4487
02:40:09,000 --> 02:40:10,000
然后要比 Eclipse 快很多

4488
02:40:10,000 --> 02:40:11,000
这是很关键点

4489
02:40:11,000 --> 02:40:13,000
比 Eclipse 快很多

4490
02:40:13,000 --> 02:40:19,000
然后它的智能补全也是相当的聪明

4491
02:40:19,000 --> 02:40:21,000
最大的问题可能就是 IntelliJ 本身有两个版本

4492
02:40:21,000 --> 02:40:23,000
一个是社区版免费

4493
02:40:23,000 --> 02:40:25,000
但是缺乏很多功能

4494
02:40:25,000 --> 02:40:25,000
比如说

4495
02:40:25,000 --> 02:40:26,000
尤其是你要做一个 JetBrains 的应用程序

4496
02:40:26,000 --> 02:40:28,000
你要做 JIE 开发的话

4497
02:40:28,000 --> 02:40:30,000
要用到很多

4498
02:40:30,000 --> 02:40:31,000
就 whatever

4499
02:40:31,000 --> 02:40:33,000
奇奇怪怪的功能

4500
02:40:33,000 --> 02:40:33,000
那个

4501
02:40:33,000 --> 02:40:36,000
SE 版本是没有

4502
02:40:36,000 --> 02:40:37,000
Community Edition 是没有的

4503
02:40:37,000 --> 02:40:39,000
你必须花钱去买那个

4504
02:40:39,000 --> 02:40:41,000
IntelliJ 的

4505
02:40:41,000 --> 02:40:42,000
它是 Dual License

4506
02:40:42,000 --> 02:40:44,000
对 Dual License

4507
02:40:44,000 --> 02:40:46,000
当然你可以以学生身份去买

4508
02:40:46,000 --> 02:40:47,000
应该可以

4509
02:40:47,000 --> 02:40:49,000
你不要不然你帮我买一个吧

4510
02:40:49,000 --> 02:40:50,000
可以啊

4511
02:40:50,000 --> 02:40:51,000
回头我给你钱你帮我买一个

4512
02:40:51,000 --> 02:40:51,000
好

4513
02:40:51,000 --> 02:40:52,000
我还挺想弄一个

4514
02:40:52,000 --> 02:40:55,000
当然我将来做 JIE 的可能性也微乎其微

4515
02:40:55,000 --> 02:40:55,000
不过

4516
02:40:55,000 --> 02:40:59,000
对 JETBRAINS 曾经在 2014 年

4517
02:40:59,000 --> 02:41:02,000
2012 年的时候搞过一个大促销

4518
02:41:02,000 --> 02:41:04,000
就是世界毁灭的那一天

4519
02:41:04,000 --> 02:41:06,000
就是传言

4520
02:41:06,000 --> 02:41:08,000
马雅人说世界要毁灭的那一天

4521
02:41:08,000 --> 02:41:09,000
他们搞了一个大促销

4522
02:41:09,000 --> 02:41:13,000
所有的那个 IDE 的 license

4523
02:41:13,000 --> 02:41:15,000
好像统一价 50 欧还是多少

4524
02:41:15,000 --> 02:41:16,000
我就可以买下来

4525
02:41:16,000 --> 02:41:18,000
我非常后悔错过那次大促销

4526
02:41:18,000 --> 02:41:19,000
如果世界都毁灭了

4527
02:41:19,000 --> 02:41:21,000
你买个 license 干什么

4528
02:41:21,000 --> 02:41:23,000
说得也是

4529
02:41:23,000 --> 02:41:25,000
当时就独立吧

4530
02:41:25,000 --> 02:41:25,000
当时就独立吧

4531
02:41:25,000 --> 02:41:26,000
我都在读书了

4532
02:41:26,000 --> 02:41:27,000
世界没有毁灭

4533
02:41:27,000 --> 02:41:28,000
我很伤心

4534
02:41:28,000 --> 02:41:31,000
别别别

4535
02:41:31,000 --> 02:41:32,000
别了

4536
02:41:32,000 --> 02:41:33,000
OK

4537
02:41:33,000 --> 02:41:34,000
对啊还有吗

4538
02:41:34,000 --> 02:41:35,000
差不多这期没有了

4539
02:41:35,000 --> 02:41:37,000
对我们本来还想说一下

4540
02:41:37,000 --> 02:41:38,000
就是简单的说一下

4541
02:41:38,000 --> 02:41:41,000
应该选择编辑器还是选择 IDE

4542
02:41:41,000 --> 02:41:43,000
如果你是一个编程初学者的话

4543
02:41:43,000 --> 02:41:45,000
这个其实也不方便展开了

4544
02:41:45,000 --> 02:41:49,000
我觉得简单一句话就是选你觉得舒服一点

4545
02:41:49,000 --> 02:41:51,000
一个方式吧

4546
02:41:51,000 --> 02:41:53,000
因为有时候我觉得

4547
02:41:53,000 --> 02:41:54,000
有些人喜欢 IDE 的原因是

4548
02:41:54,000 --> 02:41:55,000
有些人喜欢 IDE 的原因是

4549
02:41:55,000 --> 02:41:58,000
其实就是 IDE 有一种仪式感

4550
02:41:58,000 --> 02:41:59,000
就是你打开 IDE

4551
02:41:59,000 --> 02:42:01,000
你会觉得自己切换到一种工作的状态

4552
02:42:01,000 --> 02:42:04,000
而你仅仅使用一个单独的编辑器的话

4553
02:42:04,000 --> 02:42:05,000
你好像我在干嘛

4554
02:42:05,000 --> 02:42:06,000
玩票

4555
02:42:06,000 --> 02:42:07,000
写这么一个

4556
02:42:07,000 --> 02:42:10,000
对写好像一个文件在编辑器里面出现

4557
02:42:10,000 --> 02:42:12,000
和在 IDE 里面出现

4558
02:42:12,000 --> 02:42:16,000
或者甚至说在一个编辑器的编辑窗口里面出现

4559
02:42:16,000 --> 02:42:20,000
和在一个 IDE 的所谓什么工程管理器里面出现

4560
02:42:20,000 --> 02:42:21,000
庄重感不一样的

4561
02:42:21,000 --> 02:42:22,000
对庄重感是不一样的

4562
02:42:22,000 --> 02:42:24,000
这个对这个细小的心理上的感觉

4563
02:42:24,000 --> 02:42:25,000
这个细小的心理上的感觉

4564
02:42:25,000 --> 02:42:27,000
这个细小的心理上的差别其实还是挺重要的

4565
02:42:27,000 --> 02:42:28,000
对

4566
02:42:28,000 --> 02:42:29,000
对

4567
02:42:29,000 --> 02:42:32,000
你是你我觉得你应该是会选择编辑器吧

4568
02:42:32,000 --> 02:42:34,000
我没有需要用到 IDE 的场合起码

4569
02:42:34,000 --> 02:42:35,000
对这也是

4570
02:42:35,000 --> 02:42:36,000
对所以没有需求

4571
02:42:36,000 --> 02:42:40,000
也许有一天你终于走入工业界

4572
02:42:40,000 --> 02:42:42,000
你会觉得 IDE 是一个

4573
02:42:42,000 --> 02:42:46,000
你爱爱爱的

4574
02:42:46,000 --> 02:42:50,000
就是又爱又恨的这种感觉

4575
02:42:50,000 --> 02:42:51,000
好吧

4576
02:42:51,000 --> 02:42:53,000
我在我在想象一下会有什么想法

4577
02:42:53,000 --> 02:42:56,000
我们最可能目前最靠谱的场合是

4578
02:42:56,000 --> 02:42:59,000
因为我一直想学就是 LS 开发

4579
02:42:59,000 --> 02:43:01,000
然后可能会接触 X

4580
02:43:01,000 --> 02:43:03,000
其实 Xcode 之前也已经用过了

4581
02:43:03,000 --> 02:43:04,000
就是写作业的时候

4582
02:43:04,000 --> 02:43:06,000
还有 Eclipse 也用

4583
02:43:06,000 --> 02:43:09,000
就是给别人改好别人作业的时候用

4584
02:43:09,000 --> 02:43:11,000
Visual Studio 好像还没有碰过

4585
02:43:11,000 --> 02:43:12,000
不打算碰了

4586
02:43:12,000 --> 02:43:13,000
但是就这两个来讲

4587
02:43:13,000 --> 02:43:15,000
可能 Xcode 会是如果要用 IDE 的话

4588
02:43:15,000 --> 02:43:17,000
可能会是 Xcode

4589
02:43:17,000 --> 02:43:20,000
可以去试一下

4590
02:43:20,000 --> 02:43:21,000
我希望等我用

4591
02:43:21,000 --> 02:43:22,000
太烦了

4592
02:43:22,000 --> 02:43:23,000
等我用到的时候

4593
02:43:23,000 --> 02:43:25,000
他就不要再那么不稳定了

4594
02:43:25,000 --> 02:43:27,000
hopefully

4595
02:43:27,000 --> 02:43:31,000
你就最好坚持用比较不稳定的版本

4596
02:43:31,000 --> 02:43:33,000
而不要用更不稳定的版本

4597
02:43:33,000 --> 02:43:36,000
我一般还是选择不折腾的

4598
02:43:36,000 --> 02:43:39,000
就是一定用官方发布的稳定版什么

4599
02:43:39,000 --> 02:43:41,000
Developer Preview 什么离我远一点

4600
02:43:41,000 --> 02:43:44,000
对 Xcode 用户最悲惨的时刻

4601
02:43:44,000 --> 02:43:46,000
莫过于苹果说 Xcode 新版出了

4602
02:43:46,000 --> 02:43:47,000
请你升级

4603
02:43:47,000 --> 02:43:49,000
升级时候发现它一直 crush

4604
02:43:49,000 --> 02:43:51,000
对

4605
02:43:52,000 --> 02:43:55,000
这是一个非常令人讨厌的事情

4606
02:43:55,000 --> 02:43:56,000
好吧

4607
02:43:56,000 --> 02:43:57,000
好吧

4608
02:43:57,000 --> 02:44:00,000
这一次时间也蛮长的

4609
02:44:00,000 --> 02:44:02,000
不知道最后会减出来多久

4610
02:44:04,000 --> 02:44:05,000
非常凑巧的是

4611
02:44:05,000 --> 02:44:08,000
本期节目录制完成之后的周三

4612
02:44:08,000 --> 02:44:10,000
也就是 11 月 12 日

4613
02:44:10,000 --> 02:44:15,000
微软将其.NET 平台的服务器端开源

4614
02:44:15,000 --> 02:44:21,000
并且宣传会扩展支持 Linux 和 macOS 平台

4615
02:44:21,000 --> 02:44:23,000
与此同时

4616
02:44:23,000 --> 02:44:26,000
我们提到的 Visual Studio 也推出了一个叫做

4617
02:44:26,000 --> 02:44:33,000
Community Edition 2013 的版本

4618
02:44:33,000 --> 02:44:35,000
它是免费的

4619
02:44:35,000 --> 02:44:39,000
所以我跟 Ryo 大概也都会去下载

4620
02:44:39,000 --> 02:44:43,000
然后试着用一下看看观感如何

