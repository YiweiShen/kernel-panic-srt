1
00:00:00,000 --> 00:00:02,000
321 开始

2
00:00:02,000 --> 00:00:22,000
大家好

3
00:00:22,000 --> 00:00:25,000
今天是 7 月 26 号

4
00:00:25,000 --> 00:00:26,000
自弹自唱的第 26 期

5
00:00:26,000 --> 00:00:29,000
同时也是内核恐慌

6
00:00:29,000 --> 00:00:30,000
应该是第 42 期

7
00:00:30,000 --> 00:00:33,000
我希望是第 42 期

8
00:00:33,000 --> 00:00:35,000
或者是 41 期

9
00:00:35,000 --> 00:00:37,000
为什么不可能吧

10
00:00:37,000 --> 00:00:38,000
不一定

11
00:00:38,000 --> 00:00:42,000
同时也是内核恐慌

12
00:00:42,000 --> 00:00:45,000
第 41 和 42 的纠缠态那一期

13
00:00:45,000 --> 00:00:46,000
OK

14
00:00:46,000 --> 00:00:48,000
大家听到的时候

15
00:00:48,000 --> 00:00:48,000
才可以 review

16
00:00:48,000 --> 00:00:49,000
这到底是哪一期

17
00:00:49,000 --> 00:00:53,000
自弹自唱是全球首家

18
00:00:53,000 --> 00:00:55,000
用华语制作的

19
00:00:55,000 --> 00:00:56,000
字体白音主题播客节目

20
00:00:56,000 --> 00:00:57,000
我是主播

21
00:00:57,000 --> 00:00:58,000
文川西半东音剧 Eric

22
00:00:58,000 --> 00:00:59,000
我是主播

23
00:00:59,000 --> 00:01:01,000
黄浦江边清真语

24
00:01:01,000 --> 00:01:01,000
钱真语

25
00:01:01,000 --> 00:01:04,000
您正在收听

26
00:01:04,000 --> 00:01:04,000
IPM Podcast

27
00:01:04,000 --> 00:01:06,000
网络旗下的 IT 技术主题

28
00:01:06,000 --> 00:01:06,000
娱乐节目内核恐慌

29
00:01:06,000 --> 00:01:07,000
我们号称 Hardcore

30
00:01:07,000 --> 00:01:08,000
但是也没有干货

31
00:01:08,000 --> 00:01:09,000
想听人听不想听人就别听

32
00:01:09,000 --> 00:01:11,000
我是吴涛

33
00:01:11,000 --> 00:01:11,000
我是 Rail

34
00:01:11,000 --> 00:01:12,000
我就不报花名

35
00:01:12,000 --> 00:01:13,000
对我们还没想起

36
00:01:13,000 --> 00:01:14,000
那个花名

37
00:01:14,000 --> 00:01:15,000
还是对吧

38
00:01:15,000 --> 00:01:16,000
气势上

39
00:01:16,000 --> 00:01:17,000
算了吧

40
00:01:17,000 --> 00:01:17,000
何必

41
00:01:17,000 --> 00:01:20,000
但是吴涛上次来

42
00:01:20,000 --> 00:01:21,000
我来我们自弹自唱

43
00:01:21,000 --> 00:01:21,000
做嘉宾的时候

44
00:01:21,000 --> 00:01:22,000
已经有花名了

45
00:01:22,000 --> 00:01:23,000
我帮他起的

46
00:01:23,000 --> 00:01:25,000
我觉得那个还是

47
00:01:25,000 --> 00:01:26,000
对称之有愧

48
00:01:26,000 --> 00:01:27,000
因为我现在已经

49
00:01:27,000 --> 00:01:28,000
不带来音和发了

50
00:01:29,000 --> 00:01:30,000
离多老好

51
00:01:30,000 --> 00:01:31,000
可能还近一点

52
00:01:31,000 --> 00:01:33,000
所以还是算了吧

53
00:01:33,000 --> 00:01:34,000
纽伦堡内

54
00:01:34,000 --> 00:01:36,000
麦塔胡

55
00:01:36,000 --> 00:01:38,000
好

56
00:01:38,000 --> 00:01:41,000
我们成全

57
00:01:41,000 --> 00:01:43,000
to the bone

58
00:01:43,000 --> 00:01:44,000
不要这一套

59
00:01:44,000 --> 00:01:44,000
好了

60
00:01:44,000 --> 00:01:48,000
今天有没有口号吗

61
00:01:48,000 --> 00:01:50,000
今天好像也没有口号

62
00:01:50,000 --> 00:01:52,000
Heroes never die

63
00:01:52,000 --> 00:01:54,000
太扯了

64
00:01:54,000 --> 00:01:55,000
好了

65
00:01:55,000 --> 00:01:57,000
自弹自串

66
00:01:57,000 --> 00:01:58,000
我们这是第二期节目

67
00:01:58,000 --> 00:01:59,000
在

68
00:01:59,000 --> 00:02:01,000
第二期节目正式进入主题之前

69
00:02:01,000 --> 00:02:02,000
我们先来看一下

70
00:02:02,000 --> 00:02:04,000
第一期自弹自串

71
00:02:04,000 --> 00:02:05,000
有一些听众反馈

72
00:02:05,000 --> 00:02:05,000
对吧

73
00:02:05,000 --> 00:02:07,000
真宇

74
00:02:07,000 --> 00:02:08,000
是

75
00:02:08,000 --> 00:02:10,000
那我来说一下

76
00:02:10,000 --> 00:02:13,000
首先我们收到了一封邮件

77
00:02:13,000 --> 00:02:15,000
一位署名叫虎

78
00:02:15,000 --> 00:02:15,000
虎萨

79
00:02:15,000 --> 00:02:16,000
是吧

80
00:02:16,000 --> 00:02:17,000
这个字面

81
00:02:17,000 --> 00:02:18,000
虎萨的一位听众

82
00:02:18,000 --> 00:02:19,000
跟我们的反馈

83
00:02:19,000 --> 00:02:20,000
是纠正读音的

84
00:02:20,000 --> 00:02:22,000
这个老传统

85
00:02:22,000 --> 00:02:23,000
他说四位主播好

86
00:02:23,000 --> 00:02:25,000
再次小小纠正一下

87
00:02:25,000 --> 00:02:26,000
吃线的吃念吃

88
00:02:26,000 --> 00:02:28,000
歌曲的曲念曲

89
00:02:28,000 --> 00:02:29,000
好吧

90
00:02:29,000 --> 00:02:29,000
为什么

91
00:02:29,000 --> 00:02:30,000
好吧

92
00:02:30,000 --> 00:02:32,000
别问为什么

93
00:02:32,000 --> 00:02:34,000
就是这样

94
00:02:34,000 --> 00:02:35,000
多音字就是这样

95
00:02:35,000 --> 00:02:36,000
我们买了

96
00:02:36,000 --> 00:02:38,000
曲是 curve

97
00:02:38,000 --> 00:02:40,000
然后曲是 melody

98
00:02:40,000 --> 00:02:42,000
song

99
00:02:42,000 --> 00:02:45,000
好吧

100
00:02:45,000 --> 00:02:46,000
这可能跟以前什么

101
00:02:46,000 --> 00:02:47,000
一个是动词

102
00:02:47,000 --> 00:02:49,000
一个是形容词有关系

103
00:02:49,000 --> 00:02:51,000
或者一个是名词

104
00:02:51,000 --> 00:02:52,000
一个是名词

105
00:02:52,000 --> 00:02:53,000
一个是形容词

106
00:02:53,000 --> 00:02:53,000
好像不行

107
00:02:53,000 --> 00:02:55,000
曲线是从

108
00:02:55,000 --> 00:02:57,000
九曲十八弯的那个曲来的

109
00:02:57,000 --> 00:02:57,000
对吧

110
00:02:57,000 --> 00:02:58,000
就是拐弯的意思

111
00:02:58,000 --> 00:02:59,000
对吧

112
00:02:59,000 --> 00:02:59,000
对吧

113
00:02:59,000 --> 00:02:59,000
对

114
00:02:59,000 --> 00:03:02,000
曲是

115
00:03:02,000 --> 00:03:04,000
曲是歌曲的曲

116
00:03:04,000 --> 00:03:05,000
对啊

117
00:03:05,000 --> 00:03:07,000
所以刚才你又念错了

118
00:03:07,000 --> 00:03:08,000
是曲线吗

119
00:03:08,000 --> 00:03:10,000
九曲十八弯

120
00:03:10,000 --> 00:03:10,000
对

121
00:03:10,000 --> 00:03:13,000
我念的是九曲十八弯

122
00:03:13,000 --> 00:03:13,000
对

123
00:03:13,000 --> 00:03:14,000
你变成那个曲吗

124
00:03:14,000 --> 00:03:16,000
勾曲那个曲了

125
00:03:16,000 --> 00:03:18,000
这个字

126
00:03:18,000 --> 00:03:19,000
这个字本意是指什么

127
00:03:19,000 --> 00:03:21,000
这个字本来指的是

128
00:03:21,000 --> 00:03:24,000
是弯曲还是歌曲呢

129
00:03:24,000 --> 00:03:26,000
本意应该是弯曲

130
00:03:26,000 --> 00:03:29,000
然后歌曲是隐身意

131
00:03:29,000 --> 00:03:30,000
指式字

132
00:03:30,000 --> 00:03:31,000
一开始是指一个弯

133
00:03:31,000 --> 00:03:36,000
一开始是指一个弯折了的事物

134
00:03:36,000 --> 00:03:37,000
对啊

135
00:03:37,000 --> 00:03:39,000
所以还是弯是弯曲

136
00:03:39,000 --> 00:03:40,000
是它的本

137
00:03:40,000 --> 00:03:41,000
这个词源本意

138
00:03:41,000 --> 00:03:43,000
OK

139
00:03:43,000 --> 00:03:44,000
所以音乐是隐身意

140
00:03:44,000 --> 00:03:47,000
所以它还有一个意思

141
00:03:47,000 --> 00:03:49,000
就是我们都有用过的

142
00:03:49,000 --> 00:03:49,000
就是你们

143
00:03:49,000 --> 00:03:50,000
在你们猜一下

144
00:03:50,000 --> 00:03:51,000
用这个用途的时候

145
00:03:51,000 --> 00:03:52,000
念哪个音

146
00:03:52,000 --> 00:03:53,000
就是用那个

147
00:03:53,000 --> 00:03:54,000
发酵做酒的一个东西

148
00:03:54,000 --> 00:03:55,000
曲吧

149
00:03:55,000 --> 00:03:56,000
那是另一个字

150
00:03:56,000 --> 00:03:57,000
那是

151
00:03:57,000 --> 00:03:59,000
那是另外一个词

152
00:03:59,000 --> 00:03:59,000
讲话来了吧

153
00:03:59,000 --> 00:04:00,000
对

154
00:04:00,000 --> 00:04:02,000
但那是另一个字

155
00:04:02,000 --> 00:04:02,000
就繁体

156
00:04:02,000 --> 00:04:03,000
它是一个卖字的旁的

157
00:04:03,000 --> 00:04:04,000
对对对

158
00:04:04,000 --> 00:04:05,000
那其实是另一个

159
00:04:05,000 --> 00:04:06,000
那个其实念曲

160
00:04:06,000 --> 00:04:07,000
念曲

161
00:04:07,000 --> 00:04:07,000
一声

162
00:04:07,000 --> 00:04:08,000
OK

163
00:04:08,000 --> 00:04:09,000
一声

164
00:04:09,000 --> 00:04:10,000
第一声

165
00:04:10,000 --> 00:04:10,000
对

166
00:04:10,000 --> 00:04:11,000
对第一声曲

167
00:04:11,000 --> 00:04:12,000
对

168
00:04:12,000 --> 00:04:13,000
酒曲

169
00:04:13,000 --> 00:04:15,000
阳和大曲

170
00:04:15,000 --> 00:04:15,000
诶

171
00:04:15,000 --> 00:04:15,000
广告

172
00:04:15,000 --> 00:04:18,000
没说清

173
00:04:18,000 --> 00:04:19,000
一会儿得闭掉

174
00:04:19,000 --> 00:04:19,000
闭掉

175
00:04:19,000 --> 00:04:20,000
好吧

176
00:04:20,000 --> 00:04:22,000
然后还有一个

177
00:04:22,000 --> 00:04:23,000
曲

178
00:04:23,000 --> 00:04:25,000
是另外一个字

179
00:04:25,000 --> 00:04:26,000
是卖字旁

180
00:04:26,000 --> 00:04:27,000
一个菊花的菊

181
00:04:27,000 --> 00:04:28,000
不要那个草字头

182
00:04:29,000 --> 00:04:31,000
那也是

183
00:04:31,000 --> 00:04:32,000
那也是那个

184
00:04:32,000 --> 00:04:34,000
就是教母嘛

185
00:04:34,000 --> 00:04:35,000
对对对

186
00:04:35,000 --> 00:04:35,000
就这个是

187
00:04:35,000 --> 00:04:37,000
这个是这个曲

188
00:04:37,000 --> 00:04:37,000
就酒曲

189
00:04:37,000 --> 00:04:39,000
这个曲的一体字吧

190
00:04:39,000 --> 00:04:39,000
好像是

191
00:04:39,000 --> 00:04:41,000
没有

192
00:04:41,000 --> 00:04:42,000
所以你现在说的就是说

193
00:04:42,000 --> 00:04:44,000
其实原来繁体字是三个字

194
00:04:44,000 --> 00:04:45,000
然后简化

195
00:04:45,000 --> 00:04:46,000
就变成一个字而已

196
00:04:46,000 --> 00:04:50,000
那个是用酒曲的那个曲

197
00:04:50,000 --> 00:04:51,000
是简化成了这个东西

198
00:04:51,000 --> 00:04:53,000
但是前面那个弯曲和

199
00:04:53,000 --> 00:04:55,000
这个小犬

200
00:04:55,000 --> 00:04:57,000
他们好像原始就这样吧

201
00:04:57,000 --> 00:04:58,000
对对对

202
00:04:59,000 --> 00:05:00,000
他们原来是两个字嘛

203
00:05:00,000 --> 00:05:01,000
就是没错没错

204
00:05:01,000 --> 00:05:03,000
现在被那个简并成了一个字

205
00:05:03,000 --> 00:05:05,000
这个还可以是一个信

206
00:05:05,000 --> 00:05:06,000
好

207
00:05:06,000 --> 00:05:07,000
再考你们了

208
00:05:07,000 --> 00:05:08,000
用作信的时候

209
00:05:08,000 --> 00:05:08,000
那念几声

210
00:05:08,000 --> 00:05:09,000
吃

211
00:05:09,000 --> 00:05:10,000
对吃

212
00:05:10,000 --> 00:05:12,000
应该是念医生吧

213
00:05:12,000 --> 00:05:12,000
吃

214
00:05:12,000 --> 00:05:13,000
吃羊嘛

215
00:05:13,000 --> 00:05:13,000
就是

216
00:05:13,000 --> 00:05:16,000
我记得那个下午江湖里面

217
00:05:16,000 --> 00:05:17,000
某派掌门人

218
00:05:17,000 --> 00:05:18,000
是不是就姓吃

219
00:05:18,000 --> 00:05:18,000
对对

220
00:05:18,000 --> 00:05:20,000
用作信是念医生的

221
00:05:20,000 --> 00:05:21,000
对

222
00:05:21,000 --> 00:05:22,000
好吧

223
00:05:22,000 --> 00:05:23,000
这个中文真是坑爹啊

224
00:05:23,000 --> 00:05:24,000
诶

225
00:05:24,000 --> 00:05:25,000
我问你们一个事

226
00:05:25,000 --> 00:05:25,000
那天那天

227
00:05:25,000 --> 00:05:26,000
那天我问到

228
00:05:26,000 --> 00:05:27,000
那天我想到的

229
00:05:27,000 --> 00:05:29,000
就是手机

230
00:05:29,000 --> 00:05:30,000
和掌机有什么区别

231
00:05:30,000 --> 00:05:35,000
掌机是 Handle 的游戏机

232
00:05:35,000 --> 00:05:36,000
掌上游戏机的

233
00:05:36,000 --> 00:05:36,000
对

234
00:05:36,000 --> 00:05:38,000
但是手机呢

235
00:05:38,000 --> 00:05:40,000
手机是指

236
00:05:40,000 --> 00:05:43,000
手上电话机

237
00:05:43,000 --> 00:05:44,000
手持电话机

238
00:05:44,000 --> 00:05:45,000
然后我问你

239
00:05:45,000 --> 00:05:45,000
这是一个

240
00:05:45,000 --> 00:05:46,000
没有这个

241
00:05:46,000 --> 00:05:47,000
这个

242
00:05:47,000 --> 00:05:49,000
context 基础的

243
00:05:49,000 --> 00:05:50,000
外国人来学中文

244
00:05:50,000 --> 00:05:51,000
你说他怎么区分

245
00:05:51,000 --> 00:05:52,000
这两个东西呢

246
00:05:52,000 --> 00:05:54,000
诶

247
00:05:54,000 --> 00:05:55,000
但是英文里面有

248
00:05:55,000 --> 00:05:56,000
Handset 这个词吧

249
00:05:56,000 --> 00:05:58,000
德语里面手机是 Handy 嘛

250
00:05:58,000 --> 00:05:58,000
对吧

251
00:05:59,000 --> 00:06:00,000
对

252
00:06:00,000 --> 00:06:00,000
然后那个

253
00:06:00,000 --> 00:06:03,000
最早的那个 PDA 是 Palm

254
00:06:03,000 --> 00:06:03,000
对吧

255
00:06:03,000 --> 00:06:04,000
对

256
00:06:04,000 --> 00:06:06,000
Palm 就是掌嘛

257
00:06:06,000 --> 00:06:07,000
嗯

258
00:06:07,000 --> 00:06:07,000
掌机

259
00:06:07,000 --> 00:06:08,000
怎么说

260
00:06:08,000 --> 00:06:09,000
什么时候变成游戏机了

261
00:06:09,000 --> 00:06:10,000
掌上游戏机啊

262
00:06:10,000 --> 00:06:11,000
对嘛对嘛

263
00:06:11,000 --> 00:06:11,000
不是变了

264
00:06:11,000 --> 00:06:13,000
这是个缩写吗

265
00:06:13,000 --> 00:06:14,000
这是个简称嘛

266
00:06:14,000 --> 00:06:15,000
那手机呢

267
00:06:15,000 --> 00:06:16,000
手持

268
00:06:16,000 --> 00:06:17,000
手持电话机

269
00:06:17,000 --> 00:06:18,000
我刚才不是说了吗

270
00:06:18,000 --> 00:06:19,000
原来是这么来的

271
00:06:19,000 --> 00:06:20,000
那手持和掌持

272
00:06:20,000 --> 00:06:21,000
有什么区别

273
00:06:21,000 --> 00:06:22,000
掌上

274
00:06:22,000 --> 00:06:23,000
和手持

275
00:06:23,000 --> 00:06:24,000
我就说没有

276
00:06:24,000 --> 00:06:26,000
就是手持和掌上

277
00:06:26,000 --> 00:06:26,000
有什么区别

278
00:06:26,000 --> 00:06:29,000
其实没有太大的区别了

279
00:06:29,000 --> 00:06:30,000
因为这只是一个

280
00:06:30,000 --> 00:06:32,000
语用的习惯吧

281
00:06:32,000 --> 00:06:33,000
至少在我看完

282
00:06:33,000 --> 00:06:33,000
就是嘛

283
00:06:33,000 --> 00:06:34,000
所以说

284
00:06:34,000 --> 00:06:35,000
所以很坑嘛

285
00:06:35,000 --> 00:06:35,000
就是没有

286
00:06:35,000 --> 00:06:36,000
没有任何理由

287
00:06:36,000 --> 00:06:37,000
因为他

288
00:06:37,000 --> 00:06:38,000
你说手上拿个电话

289
00:06:38,000 --> 00:06:39,000
和手上拿个游戏机

290
00:06:39,000 --> 00:06:40,000
有本质区别吗

291
00:06:40,000 --> 00:06:41,000
掌上电话

292
00:06:41,000 --> 00:06:42,000
这个说法好像

293
00:06:42,000 --> 00:06:43,000
对啊对啊

294
00:06:43,000 --> 00:06:44,000
但其实这个问题在

295
00:06:44,000 --> 00:06:46,000
在英文里也会出现

296
00:06:46,000 --> 00:06:47,000
比如给你一个

297
00:06:47,000 --> 00:06:48,000
手字母缩写的词

298
00:06:48,000 --> 00:06:49,000
它有可能代表了

299
00:06:49,000 --> 00:06:50,000
多个词

300
00:06:50,000 --> 00:06:51,000
必须有一个语境

301
00:06:51,000 --> 00:06:52,000
才可以去解读它

302
00:06:52,000 --> 00:06:53,000
对对对

303
00:06:53,000 --> 00:06:54,000
我就是说这个

304
00:06:54,000 --> 00:06:55,000
就是中文有时候

305
00:06:55,000 --> 00:06:56,000
就是得靠这种 context

306
00:06:56,000 --> 00:06:57,000
去积累

307
00:06:57,000 --> 00:06:57,000
没有

308
00:06:57,000 --> 00:06:58,000
没有什么

309
00:06:58,000 --> 00:06:58,000
任何

310
00:06:59,000 --> 00:06:59,000
语文

311
00:06:59,000 --> 00:07:01,000
任何语言都一样

312
00:07:01,000 --> 00:07:02,000
给你一个 cell

313
00:07:02,000 --> 00:07:03,000
你没有上下位

314
00:07:03,000 --> 00:07:04,000
你怎么知道

315
00:07:04,000 --> 00:07:05,000
它指的是求是

316
00:07:05,000 --> 00:07:05,000
还是

317
00:07:05,000 --> 00:07:05,000
还是

318
00:07:05,000 --> 00:07:07,000
细胞

319
00:07:07,000 --> 00:07:08,000
还是那个

320
00:07:08,000 --> 00:07:10,000
不是通讯的

321
00:07:10,000 --> 00:07:11,000
那个通讯

322
00:07:11,000 --> 00:07:13,000
对吧

323
00:07:13,000 --> 00:07:15,000
但这两个是同源的呀

324
00:07:15,000 --> 00:07:16,000
而且在我们今天的

325
00:07:16,000 --> 00:07:17,000
这个话题下

326
00:07:17,000 --> 00:07:19,000
cell 好像在中文里

327
00:07:19,000 --> 00:07:21,000
还被翻译成位是吧

328
00:07:21,000 --> 00:07:21,000
比如那个

329
00:07:21,000 --> 00:07:22,000
吃喂马的位

330
00:07:22,000 --> 00:07:24,000
其实指的就是 cell

331
00:07:24,000 --> 00:07:26,000
是这样的吗

332
00:07:26,000 --> 00:07:26,000
对

333
00:07:26,000 --> 00:07:27,000
吃喂马就是

334
00:07:27,000 --> 00:07:28,000
roll cell 的意思

335
00:07:28,000 --> 00:07:29,000
好

336
00:07:29,000 --> 00:07:29,000
好

346
00:11:59,000 --> 00:12:00,000
Ja

347
00:12:00,000 --> 00:12:02,000
就是一 Pea

348
00:12:02,000 --> 00:12:02,000
0

349
00:12:02,000 --> 00:12:04,000
有 biomimic

350
00:12:04,000 --> 00:12:25,000
必须要

351
00:12:25,000 --> 00:12:27,000
还可以

352
00:12:27,000 --> 00:12:29,000
也还可以

353
00:12:29,000 --> 00:12:32,000
叫 Fundamental Theorem of Arithmetic

354
00:12:32,000 --> 00:12:34,000
中文叫

355
00:12:34,000 --> 00:12:36,000
算术基本定理

356
00:12:36,000 --> 00:12:39,000
算术基本定理

357
00:12:39,000 --> 00:12:40,000
算术基本定理

358
00:12:40,000 --> 00:12:40,000
这就是说

359
00:12:40,000 --> 00:12:42,000
每个大于一的自然数

360
00:12:42,000 --> 00:12:44,000
均可以写为知数的基

361
00:12:44,000 --> 00:12:46,000
而且这些因子

362
00:12:46,000 --> 00:12:47,000
它有一个唯一的表述

363
00:12:47,000 --> 00:12:48,000
按照大小排列之后

364
00:12:48,000 --> 00:12:50,000
只有一种表示

365
00:12:50,000 --> 00:12:51,000
这跟后面我们要讲的

366
00:12:51,000 --> 00:12:54,000
这不就是质因数分解吗

367
00:12:54,000 --> 00:12:55,000
还不一样

368
00:12:55,000 --> 00:12:56,000
不一样

369
00:12:56,000 --> 00:12:57,000
他讲的是另外一个事

370
00:12:57,000 --> 00:12:59,000
其实这个跟我们后面要讲的

371
00:12:59,000 --> 00:13:00,000
那个 unicode

372
00:13:00,000 --> 00:13:01,000
那个 normalization 有点关

373
00:13:01,000 --> 00:13:03,000
有点异曲同工的意思

374
00:13:03,000 --> 00:13:04,000
OK

375
00:13:04,000 --> 00:13:07,000
所以你要先

376
00:13:07,000 --> 00:13:08,000
首先这是正准数

377
00:13:08,000 --> 00:13:09,000
而且你要先

378
00:13:09,000 --> 00:13:10,000
先要断定说

379
00:13:10,000 --> 00:13:11,000
什么是质数

380
00:13:11,000 --> 00:13:12,000
对

381
00:13:12,000 --> 00:13:14,000
然后它有一种唯一的分解法

382
00:13:14,000 --> 00:13:15,000
对

383
00:13:15,000 --> 00:13:18,000
然后这个就是算术基本定理

384
00:13:18,000 --> 00:13:21,000
我们为什么从键盘扯到这边

385
00:13:21,000 --> 00:13:22,000
对 为什么扯到这边

386
00:13:22,000 --> 00:13:24,000
说法国人拆那个数

387
00:13:24,000 --> 00:13:26,000
好吧

388
00:13:26,000 --> 00:13:26,000
OK

389
00:13:26,000 --> 00:13:27,000
好

390
00:13:27,000 --> 00:13:27,000
好

392
00:13:57,000 --> 00:14:01,000
好

393
00:14:01,000 --> 00:14:02,000
per 木

394
00:14:02,000 --> 00:14:03,000
而且这个 ranks

395
00:14:03,000 --> 00:14:03,000
肯定还有互联网

396
00:14:03,000 --> 00:14:04,000
多郭

397
00:14:04,000 --> 00:14:05,000
或 FIN share

398
00:14:05,000 --> 00:14:05,000
对

399
00:14:05,000 --> 00:14:06,000
Var

400
00:14:06,000 --> 00:14:08,000
虽然没有

401
00:14:08,000 --> 00:14:09,000
也不一定

402
00:14:09,000 --> 00:14:10,000
有据悉

403
00:14:10,000 --> 00:14:11,000
我们很多搜索

404
00:14:11,000 --> 00:14:11,000
可以查

405
00:14:11,000 --> 00:14:12,000
你来一个

406
00:14:12,000 --> 00:14:13,000
attachment

407
00:14:13,000 --> 00:14:14,000
我们的

408
00:14:14,000 --> 00:14:14,000
版井

409
00:14:14,000 --> 00:14:15,000
系统

410
00:14:15,000 --> 00:14:16,000
谷这个

411
00:14:16,000 --> 00:14:16,000
也是

412
00:14:16,000 --> 00:14:17,000
我们的

413
00:14:17,000 --> 00:14:17,000
同一个

414
00:14:17,000 --> 00:14:18,000
复聚

415
00:14:18,000 --> 00:14:19,000
ils

416
00:14:19,000 --> 00:14:19,000
添加

417
00:14:19,000 --> 00:14:21,000
我们可以用

418
00:14:21,000 --> 00:14:21,000
点

419
00:14:21,000 --> 00:14:22,000
彩 mots

420
00:14:22,000 --> 00:14:22,000
着

421
00:14:22,000 --> 00:14:22,000
员

422
00:14:22,000 --> 00:14:23,000
有

423
00:14:23,000 --> 00:14:24,000
跟

424
00:14:24,000 --> 00:14:24,000
这个

425
00:14:24,000 --> 00:14:25,000
那个

426
00:14:26,000 --> 00:14:27,000
調整

427
00:14:27,000 --> 00:14:27,000
busy

428
00:14:27,000 --> 00:14:29,000
在前面国际长途分开吗

429
00:14:29,000 --> 00:14:30,000
对

430
00:14:30,000 --> 00:14:32,000
很多人不知道这个事情

431
00:14:32,000 --> 00:14:33,000
就是怎么拨国际长途

432
00:14:33,000 --> 00:14:35,000
就为什么是区号都是零

433
00:14:35,000 --> 00:14:36,000
然后一个什么

434
00:14:36,000 --> 00:14:38,000
要省掉那个零

435
00:14:38,000 --> 00:14:39,000
对吧

436
00:14:39,000 --> 00:14:39,000
不是

437
00:14:39,000 --> 00:14:41,000
有些国家是不省的

438
00:14:41,000 --> 00:14:42,000
不是中国

439
00:14:42,000 --> 00:14:42,000
对

440
00:14:42,000 --> 00:14:44,000
省不省是看电话规则

441
00:14:44,000 --> 00:14:45,000
不是这样的

442
00:14:45,000 --> 00:14:46,000
中国是这样的

443
00:14:46,000 --> 00:14:47,000
就是说如果中国你拨零

444
00:14:47,000 --> 00:14:50,000
然后你再加一个数字的话

445
00:14:50,000 --> 00:14:52,000
首先如果你拨本

446
00:14:52,000 --> 00:14:54,000
就不需要拨区号的话

447
00:14:54,000 --> 00:14:55,000
肯定不会是零开头的

448
00:14:55,000 --> 00:14:56,000
对不对

449
00:14:56,000 --> 00:14:59,000
然后如果你要拨另外一个区的话

450
00:14:59,000 --> 00:15:01,000
你肯定是零加一个非零数字开头的

451
00:15:01,000 --> 00:15:03,000
他就知道你在拨区号了

452
00:15:03,000 --> 00:15:03,000
对不对

453
00:15:03,000 --> 00:15:05,000
但是你拨零零的话

454
00:15:05,000 --> 00:15:07,000
其实就是变成所谓的加号

455
00:15:07,000 --> 00:15:09,000
对

456
00:15:09,000 --> 00:15:11,000
就是国际的 prefix

457
00:15:11,000 --> 00:15:12,000
就它是这么来区分的

458
00:15:12,000 --> 00:15:12,000
对

459
00:15:12,000 --> 00:15:13,000
OK

460
00:15:13,000 --> 00:15:16,000
然后这个时候就牵涉到一个表达的问题了

461
00:15:16,000 --> 00:15:18,000
就是说比如说我们中国会写

462
00:15:18,000 --> 00:15:19,000
假设比如说深圳是

463
00:15:19,000 --> 00:15:20,000
0755

464
00:15:20,000 --> 00:15:21,000
对对对

465
00:15:21,000 --> 00:15:22,000
深圳是 0755

466
00:15:22,000 --> 00:15:22,000
对吧

467
00:15:22,000 --> 00:15:25,000
但是如果说你从外国打到深圳的话

468
00:15:25,000 --> 00:15:26,000
你是拨零零

469
00:15:26,000 --> 00:15:27,000
86

470
00:15:27,000 --> 00:15:29,000
86 是中国的国际区号代码

471
00:15:29,000 --> 00:15:31,000
然后这个时候你就不会拨零 75

472
00:15:31,000 --> 00:15:32,000
你只会拨 755

473
00:15:32,000 --> 00:15:35,000
因为前面 86 已经确定了你是中国

474
00:15:35,000 --> 00:15:38,000
然后你要在下面就跟着要拨区了

475
00:15:38,000 --> 00:15:39,000
对吧

476
00:15:39,000 --> 00:15:41,000
所以你看很多人写的名片上的表达

477
00:15:41,000 --> 00:15:42,000
他会写加号

478
00:15:42,000 --> 00:15:43,000
86

479
00:15:43,000 --> 00:15:44,000
然后零括号

480
00:15:44,000 --> 00:15:46,000
括号表示 optional 是可选的

481
00:15:46,000 --> 00:15:48,000
然后是 755

482
00:15:48,000 --> 00:15:49,000
后面再跟一个

483
00:15:49,000 --> 00:15:51,000
你确定零是可选的吗

484
00:15:51,000 --> 00:15:54,000
我的理解是不是每个国家打

485
00:15:54,000 --> 00:15:57,000
这个就是不是从每个国家打外国的电话的时候

486
00:15:57,000 --> 00:15:58,000
这个零都是可以省略的

487
00:15:58,000 --> 00:15:59,000
中国是可选的

488
00:15:59,000 --> 00:16:01,000
没有绝大多数都是的

489
00:16:01,000 --> 00:16:02,000
就我的经验来讲的话

490
00:16:02,000 --> 00:16:04,000
只有意大利不行

491
00:16:04,000 --> 00:16:06,000
因为就意大利他们本身那个号就是

492
00:16:06,000 --> 00:16:07,000
就是有一个零

493
00:16:07,000 --> 00:16:08,000
所以那个零就不用省

494
00:16:08,000 --> 00:16:10,000
就是它的开头是零

495
00:16:10,000 --> 00:16:11,000
有零开头的这个

496
00:16:11,000 --> 00:16:12,000
对对

497
00:16:12,000 --> 00:16:14,000
就是意大利之类的

498
00:16:14,000 --> 00:16:16,000
这其实是有一份国际标准的

499
00:16:16,000 --> 00:16:18,000
就是国际有个叫 ITU 的

500
00:16:18,000 --> 00:16:20,000
跟通信有关的组织

501
00:16:20,000 --> 00:16:23,000
他对这个电话号码的注记格式

502
00:16:23,000 --> 00:16:23,000
对

503
00:16:23,000 --> 00:16:24,000
对

504
00:16:24,000 --> 00:16:25,000
这个电话号码的注记格式

505
00:16:25,000 --> 00:16:27,000
包括有些零是不是可以放在括号里

506
00:16:27,000 --> 00:16:29,000
就是可选的这个格式

507
00:16:29,000 --> 00:16:29,000
对对

508
00:16:29,000 --> 00:16:31,000
首先它的书写是有一个规范的

509
00:16:31,000 --> 00:16:33,000
其次就这个书写对应的规范

510
00:16:33,000 --> 00:16:36,000
其实是跟各国的这个电话制式的

511
00:16:36,000 --> 00:16:38,000
有关的

512
00:16:38,000 --> 00:16:38,000
对对

513
00:16:38,000 --> 00:16:40,000
其实这个电话号码要不要加零

514
00:16:40,000 --> 00:16:41,000
这个零可不可以省略

515
00:16:41,000 --> 00:16:44,000
以及它是不是可选的

516
00:16:44,000 --> 00:16:46,000
其实是跟那个模拟时代的

517
00:16:46,000 --> 00:16:47,000
这个通信的原理

518
00:16:47,000 --> 00:16:48,000
就那个叫什么

519
00:16:48,000 --> 00:16:49,000
晨空机的那个东西是吧

520
00:16:49,000 --> 00:16:51,000
这应该是可以查证的

521
00:16:51,000 --> 00:16:51,000
只是

522
00:16:51,000 --> 00:16:53,000
我已经学了

523
00:16:53,000 --> 00:16:54,000
一些东西

524
00:16:54,000 --> 00:16:55,000
有点记得不太清楚

525
00:16:55,000 --> 00:16:56,000
对对

526
00:16:56,000 --> 00:16:58,000
这个时候要透露那个你的底牌了吗

527
00:16:58,000 --> 00:16:59,000
没有没有

528
00:16:59,000 --> 00:17:02,000
我们真语的专业

529
00:17:02,000 --> 00:17:04,000
其实是

530
00:17:04,000 --> 00:17:05,000
好吧

531
00:17:05,000 --> 00:17:08,000
其实那个这个跟通信比较相关

532
00:17:08,000 --> 00:17:09,000
但我的专业

533
00:17:09,000 --> 00:17:11,000
虽然有一些跟通信相关的东西

534
00:17:11,000 --> 00:17:13,000
但还离得有一点远

535
00:17:13,000 --> 00:17:15,000
只是会顺带的学到一些

536
00:17:15,000 --> 00:17:16,000
听众朋友们

537
00:17:16,000 --> 00:17:18,000
我郑重的告诉你们一个惊人的事实

538
00:17:18,000 --> 00:17:20,000
在座的四位主持里面

539
00:17:20,000 --> 00:17:23,000
竟然全部都是具有理工科背景的

540
00:17:23,000 --> 00:17:24,000
这很惊人吗

541
00:17:24,000 --> 00:17:26,000
是不是很正常吗

542
00:17:26,000 --> 00:17:28,000
我一直以为你们两个是文科生

543
00:17:28,000 --> 00:17:30,000
我可能太看不起他们了

544
00:17:30,000 --> 00:17:32,000
你不能因为他们两个是男子唱的

545
00:17:32,000 --> 00:17:34,000
就看不起他们吧

546
00:17:34,000 --> 00:17:37,000
不要看不起文科生

547
00:17:37,000 --> 00:17:38,000
不是

548
00:17:38,000 --> 00:17:39,000
这不是

549
00:17:39,000 --> 00:17:39,000
这个是一个

550
00:17:39,000 --> 00:17:41,000
这个是一个什么来的

551
00:17:41,000 --> 00:17:42,000
所谓这个什么

552
00:17:42,000 --> 00:17:43,000
物以类聚人以群分

553
00:17:43,000 --> 00:17:45,000
所以我们要搞这个什么大串联嘛

554
00:17:45,000 --> 00:17:48,000
结果发现串来串去还是一伙人

555
00:17:48,000 --> 00:17:51,000
你对文科生有什么幻想

556
00:17:51,000 --> 00:17:53,000
因为觉得特别文艺嘛

557
00:17:53,000 --> 00:17:53,000
就这个

558
00:17:53,000 --> 00:17:54,000
挺好的

559
00:17:54,000 --> 00:17:55,000
就缺这个东西

560
00:17:55,000 --> 00:17:57,000
自男自唱不文艺

561
00:17:57,000 --> 00:17:58,000
Rex 是学什么的

562
00:17:58,000 --> 00:18:01,000
Rex 之前念了一个博士

563
00:18:01,000 --> 00:18:04,000
那个哲学的博士

564
00:18:04,000 --> 00:18:07,000
Rex 应该是我们这里比较偏

565
00:18:07,000 --> 00:18:09,000
社科类的吧

566
00:18:09,000 --> 00:18:13,000
Rex 是念哲学硕士

567
00:18:13,000 --> 00:18:16,000
之前他是本科学经济的好像

568
00:18:16,000 --> 00:18:17,000
还好

569
00:18:17,000 --> 00:18:20,000
终于有一个非理工背景的人

570
00:18:20,000 --> 00:18:23,000
可是 Rex

571
00:18:23,000 --> 00:18:25,000
不愿意上咱们的节目

572
00:18:25,000 --> 00:18:27,000
对啊

573
00:18:27,000 --> 00:18:28,000
Rex 好像都没有出现过

574
00:18:28,000 --> 00:18:28,000
怎么一回事

575
00:18:28,000 --> 00:18:29,000
对

576
00:18:29,000 --> 00:18:31,000
他连自弹自唱都没有上

577
00:18:31,000 --> 00:18:32,000
没错

578
00:18:32,000 --> 00:18:34,000
太不给面子了

579
00:18:34,000 --> 00:18:35,000
没关系

580
00:18:35,000 --> 00:18:36,000
主编大人出场的话

581
00:18:36,000 --> 00:18:37,000
要一个隆重的仪式

582
00:18:37,000 --> 00:18:39,000
我已经给他安排好话题了

583
00:18:39,000 --> 00:18:41,000
请大家期待

584
00:18:41,000 --> 00:18:41,000
OK

585
00:18:41,000 --> 00:18:42,000
非常好

586
00:18:42,000 --> 00:18:45,000
好

587
00:18:45,000 --> 00:18:47,000
我们推进到最后一个听众反馈

588
00:18:47,000 --> 00:18:48,000
最后一个

589
00:18:48,000 --> 00:18:51,000
最后一个也是在 TIB 上

590
00:18:51,000 --> 00:18:52,000
给我们的留言的

591
00:18:52,000 --> 00:18:53,000
他的 ID 是

592
00:18:53,000 --> 00:18:53,000
linkz

593
00:18:53,000 --> 00:18:55,000
然后他说

594
00:18:55,000 --> 00:18:56,000
说到反斜杠

595
00:18:56,000 --> 00:18:57,000
我首先想到的是

596
00:18:57,000 --> 00:18:58,000
Tag

597
00:18:58,000 --> 00:19:00,000
我们上期其实提了一下 Tag

598
00:19:00,000 --> 00:19:01,000
但没有细讲了

599
00:19:01,000 --> 00:19:03,000
Tag 在反斜杠里

600
00:19:03,000 --> 00:19:05,000
就是作为转移符吗

601
00:19:05,000 --> 00:19:05,000
还是什么

602
00:19:05,000 --> 00:19:08,000
反斜杠在 Tag 里作为转移符

603
00:19:08,000 --> 00:19:08,000
对没错

604
00:19:08,000 --> 00:19:10,000
就是以反斜杠开头的一个

605
00:19:10,000 --> 00:19:12,000
一个标志符

606
00:19:12,000 --> 00:19:13,000
然后后面可以

607
00:19:13,000 --> 00:19:14,000
可选用花光号

608
00:19:14,000 --> 00:19:16,000
方光号的一个

609
00:19:16,000 --> 00:19:17,000
parameter

610
00:19:17,000 --> 00:19:19,000
在 Tag 里面

611
00:19:19,000 --> 00:19:20,000
还有一些什么

612
00:19:20,000 --> 00:19:21,000
希腊文字

613
00:19:21,000 --> 00:19:22,000
也都是用

614
00:19:22,000 --> 00:19:22,000
都是

615
00:19:22,000 --> 00:19:23,000
就是像转移符

616
00:19:23,000 --> 00:19:24,000
一样

617
00:19:24,000 --> 00:19:25,000
都用反斜杠开始用

618
00:19:25,000 --> 00:19:25,000
对

619
00:19:25,000 --> 00:19:27,000
说到这个反斜杠

620
00:19:27,000 --> 00:19:28,000
我上次终于见到有人

621
00:19:28,000 --> 00:19:30,000
真人在我现实生活中的

622
00:19:30,000 --> 00:19:30,000
一个朋友

623
00:19:30,000 --> 00:19:31,000
他用反斜杠表示

624
00:19:31,000 --> 00:19:34,000
或者就是 A 或者 B

625
00:19:34,000 --> 00:19:35,000
上海很多

626
00:19:35,000 --> 00:19:37,000
不是

627
00:19:37,000 --> 00:19:39,000
在现实生活中

628
00:19:39,000 --> 00:19:40,000
就是不是在

629
00:19:40,000 --> 00:19:41,000
魔幻都市里

630
00:19:41,000 --> 00:19:42,000
而是在

631
00:19:42,000 --> 00:19:46,000
上海人就这样

632
00:19:46,000 --> 00:19:48,000
被你抛离了现实生活

633
00:19:48,000 --> 00:19:52,000
对

634
00:19:52,000 --> 00:19:53,000
反正我还在

635
00:19:53,000 --> 00:19:55,000
当时看了还是蛮吃惊的

636
00:19:55,000 --> 00:19:56,000
我都很想问说

637
00:19:56,000 --> 00:19:57,000
为什么要用这个

638
00:19:57,000 --> 00:19:58,000
不

639
00:19:58,000 --> 00:19:59,000
你还没有说清楚

640
00:19:59,000 --> 00:20:01,000
他在什么情况下用的

641
00:20:01,000 --> 00:20:02,000
这个

642
00:20:02,000 --> 00:20:03,000
就是他写两个选项

643
00:20:03,000 --> 00:20:05,000
我们说比如说

644
00:20:05,000 --> 00:20:07,000
就中国里面你会写 A 或者 B 的时候

645
00:20:07,000 --> 00:20:09,000
你会把他利用斜杠

646
00:20:09,000 --> 00:20:10,000
把它表示选项

647
00:20:10,000 --> 00:20:11,000
他是在手写

648
00:20:11,000 --> 00:20:14,000
还是在打字的时候

649
00:20:14,000 --> 00:20:16,000
是打字

650
00:20:16,000 --> 00:20:17,000
对打字的时候

651
00:20:17,000 --> 00:20:19,000
而且他两种混用关键是你写的

652
00:20:19,000 --> 00:20:20,000
所以他在他看来

653
00:20:20,000 --> 00:20:21,000
这个左滑右滑

654
00:20:21,000 --> 00:20:22,000
其实是一样

655
00:20:22,000 --> 00:20:23,000
逼死处女士

656
00:20:23,000 --> 00:20:24,000
处女作吗

657
00:20:24,000 --> 00:20:26,000
但其实想想好像也没什么区别

658
00:20:26,000 --> 00:20:27,000
就是左滑和右滑有什么区别

659
00:20:27,000 --> 00:20:28,000
确实没什么区别

660
00:20:28,000 --> 00:20:29,000
在座有处女作吗

661
00:20:29,000 --> 00:20:30,000
没有

662
00:20:30,000 --> 00:20:32,000
但是我不能弄人这样

663
00:20:32,000 --> 00:20:37,000
尤其是在一篇文章里面就混用这个东西

664
00:20:37,000 --> 00:20:37,000
对

665
00:20:37,000 --> 00:20:39,000
它其实是个约定了

666
00:20:39,000 --> 00:20:41,000
就是你单纯从这个作用上来说

667
00:20:41,000 --> 00:20:42,000
你用左

668
00:20:42,000 --> 00:20:45,000
左斜和右斜都是能起到同样的作用

669
00:20:45,000 --> 00:20:46,000
那我问一个问题

670
00:20:46,000 --> 00:20:49,000
你说在那种阿拉伯文

671
00:20:49,000 --> 00:20:51,000
这种从右向左写文字里面

672
00:20:51,000 --> 00:20:51,000
他用什么

673
00:20:51,000 --> 00:20:53,000
阿拉伯文的逗号都是

674
00:20:53,000 --> 00:20:53,000
都是文字的选项

675
00:20:53,000 --> 00:20:55,000
往右逗的

676
00:20:55,000 --> 00:20:56,000
你知道吗

677
00:20:56,000 --> 00:20:57,000
刚好做了个近面对称

678
00:20:57,000 --> 00:20:57,000
对

679
00:20:57,000 --> 00:21:01,000
还有阿拉伯文的问号也是近面对称的

680
00:21:01,000 --> 00:21:01,000
就是那样

681
00:21:01,000 --> 00:21:02,000
不逃你解释一下

682
00:21:02,000 --> 00:21:05,000
你们德国为什么前面那个引号要放在下面

683
00:21:05,000 --> 00:21:06,000
这就是德意志的传统

684
00:21:06,000 --> 00:21:09,000
就从那个哥特文字

685
00:21:09,000 --> 00:21:11,000
就是从那个哥特体的时代

686
00:21:11,000 --> 00:21:12,000
Black Letter 的时代

687
00:21:12,000 --> 00:21:14,000
那个引号就一直是在那

688
00:21:14,000 --> 00:21:16,000
就左下右上对吧

689
00:21:16,000 --> 00:21:16,000
应该是

690
00:21:16,000 --> 00:21:17,000
对

691
00:21:17,000 --> 00:21:19,000
就一开始是在左下

692
00:21:19,000 --> 00:21:21,000
而且那个引号引的方向也是反的

693
00:21:21,000 --> 00:21:23,000
然后中文的那个方括号

694
00:21:23,000 --> 00:21:25,000
是左上右下对吧

695
00:21:25,000 --> 00:21:26,000
这个比较 make sense

696
00:21:26,000 --> 00:21:27,000
中文竖排的时候

697
00:21:27,000 --> 00:21:30,000
那个就是一个符号

698
00:21:30,000 --> 00:21:32,000
也是应该从左上角开始写嘛

699
00:21:32,000 --> 00:21:33,000
那所以写符号

700
00:21:33,000 --> 00:21:34,000
也应该在左上

701
00:21:34,000 --> 00:21:36,000
竖排是右上左下

702
00:21:36,000 --> 00:21:38,000
对竖排是右上左下

703
00:21:38,000 --> 00:21:38,000
对

704
00:21:38,000 --> 00:21:40,000
为什么呢

705
00:21:40,000 --> 00:21:42,000
竖排右上左下的话

706
00:21:42,000 --> 00:21:43,000
符合就是笔顺

707
00:21:43,000 --> 00:21:45,000
如果你是左上的话

708
00:21:45,000 --> 00:21:47,000
就变成要运笔的话

709
00:21:47,000 --> 00:21:48,000
要写两笔

710
00:21:48,000 --> 00:21:49,000
对对对

711
00:21:49,000 --> 00:21:51,000
你右上左下的话

712
00:21:51,000 --> 00:21:53,000
就符合书写的笔顺

713
00:21:53,000 --> 00:21:53,000
就是横转的笔顺

714
00:21:53,000 --> 00:21:53,000
就是横转的笔顺

715
00:21:53,000 --> 00:21:55,000
就是横折和竖折

716
00:21:55,000 --> 00:21:57,000
make sense

717
00:21:57,000 --> 00:21:59,000
这也是假设是右利手的情况

718
00:21:59,000 --> 00:22:01,000
但是中文默认都是这样的

719
00:22:01,000 --> 00:22:01,000
左利手你也不可能

720
00:22:01,000 --> 00:22:04,000
从左下开始写一个

721
00:22:04,000 --> 00:22:07,000
条然后右折嘛

722
00:22:07,000 --> 00:22:08,000
都很怪嘛

723
00:22:08,000 --> 00:22:10,000
中文的基本笔划顺

724
00:22:10,000 --> 00:22:12,000
就叫从左往右

725
00:22:12,000 --> 00:22:13,000
从上到下嘛

726
00:22:13,000 --> 00:22:13,000
那比如说阿拉伯

727
00:22:13,000 --> 00:22:15,000
那些是默认是左利手

728
00:22:15,000 --> 00:22:15,000
也不是

729
00:22:15,000 --> 00:22:16,000
因为他们的运笔的话

730
00:22:16,000 --> 00:22:18,000
要从右往左划嘛

731
00:22:18,000 --> 00:22:20,000
就是横要往右往左划横

732
00:22:20,000 --> 00:22:21,000
但阿拉伯人大部分

733
00:22:21,000 --> 00:22:22,000
也是右利手呀

734
00:22:22,000 --> 00:22:25,000
但我只是说文

735
00:22:25,000 --> 00:22:26,000
就是文字

736
00:22:26,000 --> 00:22:27,000
从文字上想

737
00:22:27,000 --> 00:22:30,000
所以还是一个习惯问题

738
00:22:30,000 --> 00:22:31,000
还是一个习惯问题

739
00:22:31,000 --> 00:22:34,000
就没有什么不能改的

740
00:22:34,000 --> 00:22:36,000
就可能有一定的偶然因素

741
00:22:36,000 --> 00:22:38,000
所以汉字的运笔的话

742
00:22:38,000 --> 00:22:40,000
默认是从左往右

743
00:22:40,000 --> 00:22:41,000
比如说你写一个口

744
00:22:41,000 --> 00:22:42,000
口的最后一笔的话

745
00:22:42,000 --> 00:22:43,000
你不可能

746
00:22:43,000 --> 00:22:43,000
就我

747
00:22:43,000 --> 00:22:44,000
就顺便

748
00:22:44,000 --> 00:22:47,000
就第二笔画画画画回来

749
00:22:47,000 --> 00:22:49,000
从右往左就连成了一笔

750
00:22:49,000 --> 00:22:49,000
不能这样的

751
00:22:49,000 --> 00:22:50,000
你要另外起第三笔

752
00:22:50,000 --> 00:22:52,000
从左往右写

753
00:22:52,000 --> 00:22:53,000
他是在画圈

754
00:22:53,000 --> 00:22:54,000
就是中文默认

755
00:22:54,000 --> 00:22:55,000
只能从左往右嘛

756
00:22:55,000 --> 00:22:57,000
他没有从右往左的笔画

757
00:22:57,000 --> 00:22:58,000
中文

758
00:22:58,000 --> 00:23:00,000
好吧

759
00:23:00,000 --> 00:23:03,000
这样我们终于

760
00:23:03,000 --> 00:23:05,000
花了半个小时的时间

761
00:23:05,000 --> 00:23:06,000
把反馈说完了

762
00:23:06,000 --> 00:23:07,000
那我们现在终于

763
00:23:07,000 --> 00:23:08,000
可以进入正题了

764
00:23:08,000 --> 00:23:08,000
OK

765
00:23:08,000 --> 00:23:13,000
我们上次第一期节目

766
00:23:13,000 --> 00:23:14,000
把从头到尾

767
00:23:14,000 --> 00:23:15,000
大概过了一遍

768
00:23:15,000 --> 00:23:18,000
我们敲下一个键盘

769
00:23:18,000 --> 00:23:20,000
然后让一个字显示在屏幕

770
00:23:20,000 --> 00:23:21,000
最后打印出来

771
00:23:21,000 --> 00:23:22,000
终于发生了什么

772
00:23:22,000 --> 00:23:22,000
那我们现在呢

773
00:23:22,000 --> 00:23:22,000
我们现在呢

774
00:23:22,000 --> 00:23:22,000
我们现在呢

775
00:23:22,000 --> 00:23:25,000
终于可以开始拆开来

776
00:23:25,000 --> 00:23:26,000
一步一步讲了

777
00:23:26,000 --> 00:23:31,000
但今天讲的好像也不是键盘吧

778
00:23:31,000 --> 00:23:32,000
今天我们讲什么

779
00:23:32,000 --> 00:23:34,000
讲乱码是吗

780
00:23:34,000 --> 00:23:34,000
对

781
00:23:34,000 --> 00:23:36,000
这个有点像

782
00:23:36,000 --> 00:23:38,000
这个有点像从显示开始了

783
00:23:38,000 --> 00:23:40,000
先从显示的

784
00:23:40,000 --> 00:23:42,000
这个这一层面来讲

785
00:23:42,000 --> 00:23:43,000
为什么有时候会看到

786
00:23:43,000 --> 00:23:44,000
我们不想看的东西

787
00:23:44,000 --> 00:23:45,000
或者我们想看的东西

788
00:23:45,000 --> 00:23:48,000
显示出来是错误的

789
00:23:48,000 --> 00:23:50,000
其实首先这个概念

790
00:23:50,000 --> 00:23:52,000
就是客户

791
00:23:52,000 --> 00:23:52,000
就是从这个角度来看

792
00:23:52,000 --> 00:23:53,000
从用户来讲的话

793
00:23:53,000 --> 00:23:55,000
他显示不正常

794
00:23:55,000 --> 00:23:56,000
他就觉得是乱码

795
00:23:56,000 --> 00:23:59,000
其实这个乱码的背后有很多不一样的道理

796
00:23:59,000 --> 00:23:59,000
对吧

797
00:23:59,000 --> 00:24:04,000
就是因为如果你一直从那个字面上来讲乱码

798
00:24:04,000 --> 00:24:05,000
就是首先你有个码

799
00:24:05,000 --> 00:24:06,000
然后那个码不对了

800
00:24:06,000 --> 00:24:07,000
就变成乱码

801
00:24:07,000 --> 00:24:08,000
可是呢

802
00:24:08,000 --> 00:24:11,000
实际上的并不并不一定完全都是码的问题

803
00:24:11,000 --> 00:24:14,000
有时候还有这个字库显示的问题或者其他问题

804
00:24:14,000 --> 00:24:16,000
对吧

805
00:24:16,000 --> 00:24:18,000
英语里面过了乱码叫什么

806
00:24:18,000 --> 00:24:19,000
不知道哎

807
00:24:19,000 --> 00:24:21,000
因为里面会有乱码吧

808
00:24:21,000 --> 00:24:21,000
对

809
00:24:21,000 --> 00:24:22,000
因为英文里面就有阿斯基文字码嘛

810
00:24:22,000 --> 00:24:22,000
对因为英文里面就有阿斯基文字码嘛

811
00:24:22,000 --> 00:24:24,000
所以他们不存在乱码

812
00:24:24,000 --> 00:24:28,000
而且呢就是说乱码也就是我们我们双字节开始的

813
00:24:28,000 --> 00:24:29,000
所以呢在日本来讲

814
00:24:29,000 --> 00:24:31,000
日本他们说在英文世界里

815
00:24:31,000 --> 00:24:32,000
他们都把乱码叫成墨鸡八 K

816
00:24:32,000 --> 00:24:34,000
是我们日语传过去的

817
00:24:34,000 --> 00:24:35,000
叫什么

818
00:24:35,000 --> 00:24:39,000
因为日语叫墨鸡八 K

819
00:24:39,000 --> 00:24:40,000
就是文字

820
00:24:40,000 --> 00:24:41,000
OK

821
00:24:41,000 --> 00:24:42,000
墨鸡是文字嘛

822
00:24:42,000 --> 00:24:44,000
然后八 K 也就是变化嘛

823
00:24:44,000 --> 00:24:46,000
就是文字变掉了

824
00:24:46,000 --> 00:24:46,000
OK

825
00:24:46,000 --> 00:24:49,000
德语里面叫猜心

826
00:24:49,000 --> 00:24:51,000
就是符号沙拉

827
00:24:51,000 --> 00:24:52,000
哈

828
00:24:52,000 --> 00:24:53,000
对

829
00:24:53,000 --> 00:24:57,000
就好像沙沙拉一样被拌在一起了

830
00:24:57,000 --> 00:25:00,000
那英文叫什么呀

831
00:25:00,000 --> 00:25:01,000
Including error

832
00:25:01,000 --> 00:25:02,000
从来没遇到过这种概念

833
00:25:02,000 --> 00:25:04,000
编码错误啊应该就这样

834
00:25:04,000 --> 00:25:10,000
不就是就是因为就感觉这个事情在英文里面就是挺难出现的

835
00:25:10,000 --> 00:25:11,000
你想象一下

836
00:25:11,000 --> 00:25:12,000
他们都是那个阿斯基的吧

837
00:25:12,000 --> 00:25:17,000
大部分都基本上所有的这个这个编码方式都都兼容他们

838
00:25:17,000 --> 00:25:18,000
即便如此

839
00:25:18,000 --> 00:25:19,000
比如说他们看到一个

840
00:25:19,000 --> 00:25:20,000
比如说俄语

841
00:25:20,000 --> 00:25:21,000
对

842
00:25:21,000 --> 00:25:21,000
对

843
00:25:21,000 --> 00:25:21,000
对

844
00:25:21,000 --> 00:25:22,000
,对

845
00:25:22,000 --> 00:25:23,000
所以这个这个那个编码

846
00:25:23,000 --> 00:25:25,000
然后用什么

847
00:25:25,000 --> 00:25:28,000
呃用用一手 8859 来显示的时候

848
00:25:28,000 --> 00:25:30,000
那同样是没有任何意义的文字

849
00:25:30,000 --> 00:25:35,000
那他们对这个玩意对这个东西总有一个做总得有个称呼啊

850
00:25:36,000 --> 00:25:41,000
反正在维基上面有一个这样相关的一个页面叫摩几八 K

851
00:25:41,000 --> 00:25:43,000
就是日文的那个音

852
00:25:44,000 --> 00:25:45,000
OK

853
00:25:45,000 --> 00:25:49,000
就音译的日语是 garbo 的 text

854
00:25:49,000 --> 00:25:49,000
OK

855
00:25:49,000 --> 00:25:50,000
好吗

856
00:25:50,000 --> 00:25:51,000
德语就是猜心

857
00:25:51,000 --> 00:25:52,000
萨拉对应着

858
00:25:52,000 --> 00:25:53,000
对

859
00:25:53,000 --> 00:25:54,000
对

860
00:25:54,000 --> 00:25:54,000
对啊

861
00:25:54,000 --> 00:25:59,000
这个德文的猜测萨拉这个配置呃这个就翻译成乱码嘛

862
00:25:59,000 --> 00:26:02,000
然后日语呃英文界面就是摩几八 K

863
00:26:02,000 --> 00:26:02,000
嗯

864
00:26:02,000 --> 00:26:05,000
所以英文其实它是那个直译了

865
00:26:05,000 --> 00:26:06,000
对它直译了

866
00:26:06,000 --> 00:26:06,000
OK

867
00:26:06,000 --> 00:26:11,000
所以英语没有一个原声的这个就像是 emoji

868
00:26:11,000 --> 00:26:16,000
就是日文对这现代这个字符编码的一些贡献

869
00:26:16,000 --> 00:26:18,000
对

870
00:26:18,000 --> 00:26:20,000
这其实是一个比较本地化的一个说法

871
00:26:20,000 --> 00:26:21,000
就是

872
00:26:21,000 --> 00:26:25,000
这种事情可能只是在东亚地区最先出现

873
00:26:25,000 --> 00:26:30,000
然后日本又是一个最早在这个 CJK 领域确定了字符

874
00:26:30,000 --> 00:26:32,000
比较标准字符集的这样一个国家

875
00:26:32,000 --> 00:26:34,000
所以他们可能最早遇到这个问题

876
00:26:34,000 --> 00:26:36,000
他们就创了一个术语这样

877
00:26:36,000 --> 00:26:39,000
所以我们要从字符集和编码开始说

878
00:26:39,000 --> 00:26:40,000
可以

879
00:26:40,000 --> 00:26:42,000
嗯

880
00:26:42,000 --> 00:26:44,000
那先讲中文吧

881
00:26:44,000 --> 00:26:44,000
嗯

882
00:26:44,000 --> 00:26:46,000
中文的 GB 编码是不能不说的

883
00:26:46,000 --> 00:26:47,000
好吧

884
00:26:47,000 --> 00:26:48,000
是不是应该先讲

885
00:26:48,000 --> 00:26:50,000
先讲汉字整个的这个

886
00:26:50,000 --> 00:26:51,000
嗯

887
00:26:51,000 --> 00:26:58,000
因为实际上那个东亚地区以 CJK 为核心的这个字符集的标准

888
00:26:58,000 --> 00:27:00,000
最早是日本人做的

889
00:27:00,000 --> 00:27:01,000
就是 JIS 嘛

890
00:27:01,000 --> 00:27:02,000
嗯

891
00:27:02,000 --> 00:27:02,000
对

892
00:27:02,000 --> 00:27:08,000
日本日本在那个时代有比较强烈的支持日本的需求

893
00:27:08,000 --> 00:27:10,000
因为日本是东亚第一个开始

894
00:27:10,000 --> 00:27:12,000
呃

895
00:27:12,000 --> 00:27:14,000
电子化的国家

896
00:27:14,000 --> 00:27:14,000
应该这么说

897
00:27:14,000 --> 00:27:16,000
对

898
00:27:16,000 --> 00:27:21,000
或者我觉得一部分原因也是因为他们最早能够在计算机上勉强地说的

899
00:27:21,000 --> 00:27:21,000
嗯

900
00:27:21,000 --> 00:27:23,000
所以他们就想着使用一些本地的文字

901
00:27:23,000 --> 00:27:28,000
比如他们将那个片甲名用 asky 的扩展实现了

902
00:27:28,000 --> 00:27:31,000
日本最早的一个这个文字编码呢

903
00:27:31,000 --> 00:27:34,000
应该是 JIS 的 0201 啊

904
00:27:34,000 --> 00:27:35,000
他是个单字节的

905
00:27:35,000 --> 00:27:35,000
很关键

906
00:27:35,000 --> 00:27:39,000
他把这个七位的 asky 呢

907
00:27:39,000 --> 00:27:43,000
给他扩展上面放入了他们的绊脚的片甲名

908
00:27:43,000 --> 00:27:44,000
而且呢

909
00:27:44,000 --> 00:27:45,000
他们在这里面呢

910
00:27:45,000 --> 00:27:47,000
还有和 asky 相比呢

911
00:27:47,000 --> 00:27:48,000
还有两个字不一样

912
00:27:48,000 --> 00:27:49,000
嗯

913
00:27:49,000 --> 00:27:51,000
他们在那个九十九二呢

914
00:27:51,000 --> 00:27:53,000
那一号原来是反斜杠

915
00:27:53,000 --> 00:27:54,000
然后在这个 JIS 里面

916
00:27:54,000 --> 00:27:56,000
他给他换成了日元符号

917
00:27:56,000 --> 00:28:00,000
然后在 126 号里面原来是一个那个波浪啊

918
00:28:00,000 --> 00:28:01,000
但是呢

919
00:28:01,000 --> 00:28:03,000
在这个 JIS 里面给他换成了

920
00:28:03,000 --> 00:28:05,000
就是这叫什么上画线

921
00:28:05,000 --> 00:28:06,000
也不是下画线

922
00:28:06,000 --> 00:28:07,000
也不是中画线

923
00:28:07,000 --> 00:28:08,000
那个联子符

924
00:28:08,000 --> 00:28:10,000
而是一个上画线

925
00:28:10,000 --> 00:28:10,000
所以呃

926
00:28:10,000 --> 00:28:12,000
这个比较古老了

927
00:28:12,000 --> 00:28:16,000
因为已经是 1969 年 6 月 1 号制定的

928
00:28:16,000 --> 00:28:20,000
这个可是日本最老最旧的一个文字系统啊

929
00:28:20,000 --> 00:28:21,000
就是文字编码

930
00:28:21,000 --> 00:28:23,000
对

931
00:28:23,000 --> 00:28:27,000
这是第一次他们就是在这个计算机上面的实现了呃日文

932
00:28:27,000 --> 00:28:29,000
嗯

933
00:28:29,000 --> 00:28:32,000
就为什么那个时候要选片甲名不选平甲名

934
00:28:32,000 --> 00:28:34,000
那就是传音嘛

935
00:28:34,000 --> 00:28:34,000
呃

936
00:28:34,000 --> 00:28:36,000
就是打电报嘛

937
00:28:36,000 --> 00:28:38,000
因为这主要是为了通信的方便

938
00:28:38,000 --> 00:28:39,000
OK

939
00:28:39,000 --> 00:28:41,000
对

940
00:28:41,000 --> 00:28:45,000
就其实那个通常来说在技术领域是将日

941
00:28:45,000 --> 00:28:49,000
日本的这个书写系统对应到四种那个字符上

942
00:28:49,000 --> 00:28:51,000
就是四种文字上

943
00:28:51,000 --> 00:28:55,000
也就是在 writing system 下面他用了四种的 script

944
00:28:55,000 --> 00:28:58,000
一种是所谓的罗马字

945
00:28:58,000 --> 00:29:00,000
也就是拉丁文啊

946
00:29:00,000 --> 00:29:01,000
另一种就是片甲名

947
00:29:01,000 --> 00:29:02,000
还有一种平甲名

948
00:29:02,000 --> 00:29:03,000
最后才是汉字

949
00:29:03,000 --> 00:29:06,000
呃

950
00:29:06,000 --> 00:29:07,000
我是打个叉问个问题

951
00:29:07,000 --> 00:29:08,000
日本有没有想过

952
00:29:08,000 --> 00:29:11,000
有没有过要把汉字整个废掉的思潮

953
00:29:11,000 --> 00:29:12,000
就是只用甲名

954
00:29:12,000 --> 00:29:14,000
有应该有吧

955
00:29:14,000 --> 00:29:16,000
对应该有嗯

956
00:29:16,000 --> 00:29:20,000
然后因为朝鲜就是有这样的字

957
00:29:20,000 --> 00:29:21,000
而且朝鲜的确是

958
00:29:21,000 --> 00:29:24,000
就是朝鲜半岛朝鲜已经成功了吗

959
00:29:24,000 --> 00:29:26,000
就朝鲜的话他已经几乎就都不用了

960
00:29:26,000 --> 00:29:27,000
韩国的话呢

961
00:29:27,000 --> 00:29:28,000
就是偶尔还用

962
00:29:28,000 --> 00:29:31,000
但是呢现在也是尽量都是用那个

963
00:29:31,000 --> 00:29:32,000
燕文

964
00:29:32,000 --> 00:29:35,000
燕文对中文叫中文习惯叫燕文

965
00:29:35,000 --> 00:29:38,000
对但是他们他们他们他们不喜欢燕文这个词

966
00:29:38,000 --> 00:29:42,000
他们觉得燕文这个词是有有歧视

967
00:29:42,000 --> 00:29:45,000
所以呢他们更喜欢用汉语这个词

968
00:29:45,000 --> 00:29:48,000
所以汉语和燕文其实还有两个词

969
00:29:48,000 --> 00:29:50,000
对啊

970
00:29:50,000 --> 00:29:51,000
因为燕文燕

971
00:29:51,000 --> 00:29:52,000
所谓的燕是燕语的燕嘛

972
00:29:52,000 --> 00:29:54,000
就是俗俗字的嘛

973
00:29:54,000 --> 00:29:57,000
嗯嗯俗字的意思

974
00:29:57,000 --> 00:29:59,000
但是日本人倒是很乖的用甲名嘛

975
00:29:59,000 --> 00:30:01,000
因为甲名的对应的是真名

976
00:30:01,000 --> 00:30:03,000
所谓的真名就是汉字

977
00:30:03,000 --> 00:30:05,000
对日本人还怪怪的

978
00:30:05,000 --> 00:30:06,000
不是借的意思吗

979
00:30:06,000 --> 00:30:07,000
在这里就是假借嘛

980
00:30:07,000 --> 00:30:08,000
对啊

981
00:30:08,000 --> 00:30:11,000
所以甲名的还有他的反义词是真名吗

982
00:30:11,000 --> 00:30:12,000
所谓的真名就是汉字

983
00:30:12,000 --> 00:30:14,000
所以后来呃

984
00:30:14,000 --> 00:30:15,000
即使后面呢

985
00:30:15,000 --> 00:30:19,000
就是在用片甲加入片

986
00:30:19,000 --> 00:30:20,000
嗯这什么半角片甲名义

987
00:30:21,000 --> 00:30:24,000
就是后进行了从七八年开始

988
00:30:24,000 --> 00:30:27,000
他们后来八三年九零一年九七年改了好多次

989
00:30:27,000 --> 00:30:33,000
然后后面就逐渐的就是就是相当于就是在区位码里面把所有的字都加进去了

990
00:30:33,000 --> 00:30:34,000
够够用吗

991
00:30:34,000 --> 00:30:37,000
就是那个码数也是不停不停的加呀

992
00:30:37,000 --> 00:30:39,000
所以没没改一次的话

993
00:30:39,000 --> 00:30:41,000
就是字数越来越多

994
00:30:41,000 --> 00:30:43,000
因为你用那个 asky

995
00:30:43,000 --> 00:30:45,000
你把高位字上之后也就一百二十八个码点

996
00:30:45,000 --> 00:30:49,000
asky 只用来实现那个半角甲名

997
00:30:49,000 --> 00:30:51,000
对嗯 asky 的括成是这样的

998
00:30:51,000 --> 00:30:52,000
就是 asky 的括成

999
00:30:52,000 --> 00:30:59,000
他当然有一个 jace 的 roman 的就是一个对 asky 的一个可以说是一个 asky 的一个 variation

1000
00:30:59,000 --> 00:31:02,000
你但你说半角甲还有全角甲

1001
00:31:02,000 --> 00:31:04,000
啊对一开始只有半角甲命

1002
00:31:04,000 --> 00:31:06,000
这个概念其实有点有点乱了

1003
00:31:06,000 --> 00:31:08,000
我们是不是可以趁机来这个整理一下

1004
00:31:08,000 --> 00:31:10,000
就是所谓的这个半角甲名

1005
00:31:10,000 --> 00:31:15,000
他一方面指的是这个甲名的宽度是那个全宽汉字的一半

1006
00:31:15,000 --> 00:31:20,000
然后同时另一方面他也同意的指向了说这个字符

1007
00:31:20,000 --> 00:31:24,000
就是使用了一个字节这样子的一个意思

1008
00:31:24,000 --> 00:31:25,000
所以在上次节目我也说过

1009
00:31:25,000 --> 00:31:27,000
就是所谓的单字节

1010
00:31:27,000 --> 00:31:32,000
双字节和半角全角原来是两个概念嘛

1011
00:31:32,000 --> 00:31:33,000
但是呢

1012
00:31:33,000 --> 00:31:36,000
就是说在字体排音里面是半所谓的半角全角

1013
00:31:36,000 --> 00:31:38,000
他只是一个宽度的概念而已

1014
00:31:38,000 --> 00:31:42,000
对对半角全角其实应该局限于描述视觉上的一个效果

1015
00:31:42,000 --> 00:31:45,000
对他是实际物理上面的一个宽度问题

1016
00:31:45,000 --> 00:31:46,000
然后呢

1017
00:31:46,000 --> 00:31:50,000
单字节双字节这就是是编码的问题吗嗯

1018
00:31:50,000 --> 00:31:56,000
而在在很久以前的确半半角的就是单字节

1019
00:31:56,000 --> 00:31:58,000
然后全角的就是双字节

1020
00:31:58,000 --> 00:32:01,000
所以呢就有人开始混用了

1021
00:32:01,000 --> 00:32:06,000
嗯对而且这个混用其实是带有一定的主动性的

1022
00:32:06,000 --> 00:32:08,000
就是说他们并不是错误的用了他

1023
00:32:08,000 --> 00:32:13,000
而是希望以这种方式帮助别人理解和记忆

1024
00:32:13,000 --> 00:32:13,000
这两个吗

1025
00:32:13,000 --> 00:32:15,000
到了现在混在一起了呀

1026
00:32:15,000 --> 00:32:19,000
所以那个假名到底是就是说

1027
00:32:19,000 --> 00:32:20,000
就是说

1028
00:32:20,000 --> 00:32:23,000
这个数一共能不能装到 128 个码点里面去

1029
00:32:23,000 --> 00:32:26,000
实际上呢就是在最早的时候呢

1030
00:32:26,000 --> 00:32:29,000
呃他就是即使 x 的 0208 的话

1031
00:32:29,000 --> 00:32:31,000
他只赚了 94 个字嘛

1032
00:32:31,000 --> 00:32:33,000
就是就只装了那个半角片假名

1033
00:32:33,000 --> 00:32:35,000
就就就就这样差不多用完了吗

1034
00:32:35,000 --> 00:32:38,000
128 个点你用了 90 几个 94 个

1035
00:32:38,000 --> 00:32:40,000
那那全角的跟这个半角的有什么

1036
00:32:40,000 --> 00:32:42,000
全角是都用两个字符了吗

1037
00:32:42,000 --> 00:32:43,000
就用两个字节来表示的

1038
00:32:43,000 --> 00:32:45,000
不就是但是他表达的

1039
00:32:45,000 --> 00:32:46,000
他就说一个半角的假名

1040
00:32:46,000 --> 00:32:47,000
一个全角的假名

1041
00:32:47,000 --> 00:32:48,000
他表示的是同一个东西吗

1042
00:32:48,000 --> 00:32:49,000
是同一个东西

1043
00:32:49,000 --> 00:32:50,000
所以现在就变得

1044
00:32:50,000 --> 00:32:50,000
做两套了

1045
00:32:50,000 --> 00:32:54,000
呃为什么要做两套

1046
00:32:54,000 --> 00:32:57,000
因为因为那个半角假名显示的时候

1047
00:32:57,000 --> 00:33:00,000
有一个就是一开始的那个 gist 假名

1048
00:33:00,000 --> 00:33:03,000
的呃片假名在显示的时候

1049
00:33:03,000 --> 00:33:05,000
它的宽度和英文字母是一样的

1050
00:33:05,000 --> 00:33:09,000
对然后为了到就是所以后来有了

1051
00:33:09,000 --> 00:33:11,000
那个全宽度的汉字的时候

1052
00:33:11,000 --> 00:33:14,000
那个你在全宽度的汉字里面

1053
00:33:14,000 --> 00:33:17,000
夹杂着显示半宽度的片假名就很丑

1054
00:33:17,000 --> 00:33:19,000
所以就做一套全宽度的

1055
00:33:20,000 --> 00:33:21,000
全角假名

1056
00:33:21,000 --> 00:33:23,000
就是这么来的

1057
00:33:23,000 --> 00:33:24,000
所以我理解一下

1058
00:33:24,000 --> 00:33:27,000
就是说呃因为是为了对齐的需求

1059
00:33:27,000 --> 00:33:30,000
因为那个时候是都是那种就是就是 column display

1060
00:33:30,000 --> 00:33:32,000
就是正正烈的显示器

1061
00:33:32,000 --> 00:33:35,000
就为了满足那个跟英文对齐的需求

1062
00:33:35,000 --> 00:33:38,000
所以我们强制就是牺牲了美观程度

1063
00:33:38,000 --> 00:33:41,000
把那个假名压缩成半观的

1064
00:33:41,000 --> 00:33:41,000
对

1065
00:33:41,000 --> 00:33:45,000
然后后来因为有因为因为就变成那个图形

1066
00:33:45,000 --> 00:33:47,000
graphic 的就界面的时候

1067
00:33:47,000 --> 00:33:48,000
就是为了好看

1068
00:33:48,000 --> 00:33:49,000
其实他应该是假名是应该是假名的

1069
00:33:49,000 --> 00:33:51,000
应该和汉字等宽的

1070
00:33:51,000 --> 00:33:52,000
没有到 graphic 时代

1071
00:33:52,000 --> 00:33:56,000
就是在那个显示器可以设置为双字节宽的时代就开始了

1072
00:33:57,000 --> 00:33:59,000
对就跟汉字一样嘛

1073
00:33:59,000 --> 00:34:01,000
那这个需求就是因为是为了好看

1074
00:34:01,000 --> 00:34:01,000
就是为了好看

1075
00:34:01,000 --> 00:34:06,000
你在如果你两个汉字中间加了一个半宽度的假名就很丑嘛

1076
00:34:06,000 --> 00:34:08,000
而且字表啊什么

1077
00:34:08,000 --> 00:34:10,000
那些全都全都非常难

1078
00:34:10,000 --> 00:34:11,000
就还是为了对齐

1079
00:34:11,000 --> 00:34:14,000
只是说以前是因为了半对半宽是为了和英文字母对齐

1080
00:34:14,000 --> 00:34:15,000
是为了和汉字对齐

1081
00:34:15,000 --> 00:34:17,000
是为了和汉字对齐

1082
00:34:18,000 --> 00:34:19,000
哇

1083
00:34:19,000 --> 00:34:19,000
但是呢

1084
00:34:19,000 --> 00:34:22,000
就是比如说在日日本的

1085
00:34:22,000 --> 00:34:24,000
比如说当年就 iMode 的手机时代

1086
00:34:24,000 --> 00:34:25,000
日本的手机时代

1087
00:34:25,000 --> 00:34:27,000
因为片假名它是表英文字嘛

1088
00:34:27,000 --> 00:34:31,000
所以片假名的外来语往往都写的很长

1089
00:34:31,000 --> 00:34:36,000
所以他故意用半角片假名是为了省空间

1090
00:34:36,000 --> 00:34:40,000
节约屏幕空间有这么做的

1091
00:34:40,000 --> 00:34:41,000
为什么要会德语

1092
00:34:41,000 --> 00:34:44,000
对德文的单词那么长

1093
00:34:44,000 --> 00:34:46,000
德语你那个每个词都不行

1094
00:34:46,000 --> 00:34:48,000
都那么长又没有空格

1095
00:34:48,000 --> 00:34:49,000
所以说需要大量使用

1096
00:34:49,000 --> 00:34:51,000
编写和缩写

1097
00:34:51,000 --> 00:34:54,000
所以在在从字体排音的传统上来讲

1098
00:34:54,000 --> 00:34:59,000
德文是大量使用和字 ligature 和窄体字 context

1099
00:34:59,000 --> 00:35:01,000
对是这样

1100
00:35:01,000 --> 00:35:03,000
尤其在高速公路路牌上

1101
00:35:03,000 --> 00:35:05,000
半宽的假名看起来会不会很别扭

1102
00:35:05,000 --> 00:35:06,000
因为那么窄

1103
00:35:06,000 --> 00:35:08,000
会有一点

1104
00:35:08,000 --> 00:35:09,000
确实会有一点

1105
00:35:09,000 --> 00:35:11,000
反正我觉得很丑

1106
00:35:11,000 --> 00:35:13,000
对它是一种妥协

1107
00:35:13,000 --> 00:35:15,000
嗯

1108
00:35:15,000 --> 00:35:15,000
OK

1109
00:35:15,000 --> 00:35:17,000
那所以于是下一个问题就来了

1110
00:35:17,000 --> 00:35:23,000
就是说那半宽的假名对应的那个那个码点和全宽就是双字节的对应的码点

1111
00:35:23,000 --> 00:35:26,000
他他他有这个就是是一样的吗

1112
00:35:28,000 --> 00:35:29,000
或者这么问吧

1113
00:35:29,000 --> 00:35:31,000
就是说如果现在现代的这个来处理的话

1114
00:35:31,000 --> 00:35:33,000
他是两个字符

1115
00:35:33,000 --> 00:35:34,000
是是是是不一样的

1116
00:35:36,000 --> 00:35:37,000
OK

1117
00:35:37,000 --> 00:35:39,000
那个在 unicode 里面的那个 codepoint

1118
00:35:39,000 --> 00:35:40,000
它是一样的吗

1119
00:35:40,000 --> 00:35:41,000
好像也不一样了

1120
00:35:41,000 --> 00:35:42,000
不一样

1121
00:35:42,000 --> 00:35:45,000
unicode 他为了向后兼容

1122
00:35:45,000 --> 00:35:45,000
所以呢

1123
00:35:45,000 --> 00:35:46,000
他也不一样

1124
00:35:46,000 --> 00:35:47,000
对对

1125
00:35:47,000 --> 00:35:51,000
那那如果说我们现在重新来设计这么一件事

1126
00:35:51,000 --> 00:35:53,000
其实他应该是从同一个 codepoint

1127
00:35:53,000 --> 00:35:57,000
但是在那个就是 render 渲染的时候应该选择不同的宽度

1128
00:35:57,000 --> 00:35:58,000
以适应那个对齐就可以了

1129
00:35:58,000 --> 00:36:01,000
对从理想角度的话确实是可以这样做的

1130
00:36:01,000 --> 00:36:02,000
是没错

1131
00:36:02,000 --> 00:36:03,000
对

1132
00:36:03,000 --> 00:36:03,000
但对

1133
00:36:03,000 --> 00:36:05,000
那但这是一个向后兼容的

1134
00:36:05,000 --> 00:36:07,000
人类史就要重写了

1135
00:36:07,000 --> 00:36:07,000
对

1136
00:36:07,000 --> 00:36:11,000
对

1137
00:36:11,000 --> 00:36:12,000
这其实是一个无法避免的问题了

1138
00:36:12,000 --> 00:36:15,000
因为就是这个编码的发展就是向后兼容

1139
00:36:15,000 --> 00:36:16,000
有这个需求

1140
00:36:16,000 --> 00:36:17,000
所以他一定会保留的

1141
00:36:17,000 --> 00:36:18,000
对

1142
00:36:18,000 --> 00:36:22,000
所以以前是做了很多莫名其妙的事情

1143
00:36:22,000 --> 00:36:26,000
然后后面来的新方案就不停不停的要为前面的擦屁股

1144
00:36:27,000 --> 00:36:28,000
擦屁股

1145
00:36:28,000 --> 00:36:33,000
然后后面我们就终于有了双字节了

1146
00:36:33,000 --> 00:36:33,000
对吧

1147
00:36:34,000 --> 00:36:36,000
有了双字节就有了区位

1148
00:36:36,000 --> 00:36:38,000
就所谓的以前的区位码

1149
00:36:38,000 --> 00:36:41,000
日本好像叫区点是吧

1150
00:36:41,000 --> 00:36:41,000
对

1151
00:36:41,000 --> 00:36:42,000
日本叫区点

1152
00:36:42,000 --> 00:36:45,000
那英文区就是区是肉嘛

1153
00:36:45,000 --> 00:36:46,000
就第几排嘛

1154
00:36:46,000 --> 00:36:46,000
肉

1155
00:36:46,000 --> 00:36:47,000
然后那个

1156
00:36:47,000 --> 00:36:49,000
点就是刚说的就是 cell

1157
00:36:49,000 --> 00:36:50,000
嗯

1158
00:36:50,000 --> 00:36:51,000
嗯

1159
00:36:51,000 --> 00:36:52,000
嗯

1160
00:36:52,000 --> 00:36:53,000
就是举这个行和列吧

1161
00:36:53,000 --> 00:36:54,000
嗯

1162
00:36:54,000 --> 00:36:57,000
所以他他是真的是有一个表

1163
00:36:57,000 --> 00:37:01,000
然后一行是多几行几列是什么字会有这么一个表出来

1164
00:37:01,000 --> 00:37:02,000
对吧

1165
00:37:02,000 --> 00:37:02,000
对的

1166
00:37:02,000 --> 00:37:03,000
嗯

1167
00:37:03,000 --> 00:37:10,000
然后后来咱们中国的 GB 的设计就是完全延就是延期的这个技术的整个设计系统

1168
00:37:10,000 --> 00:37:11,000
而且

1169
00:37:11,000 --> 00:37:13,000
是所以双字节和这个区域码都是日本人发的

1170
00:37:13,000 --> 00:37:15,000
最早是日本的是技术

1171
00:37:15,000 --> 00:37:16,000
对

1172
00:37:16,000 --> 00:37:17,000
嗯

1179
00:40:17,000 --> 00:40:21,000
就是他排布这个区位表的一种方式

1180
00:40:21,000 --> 00:40:25,000
对号入座就是 94 是 94 是座位

1181
00:40:25,000 --> 00:40:29,000
而那些那些字呢就是把把他安到这个座位上去

1182
00:40:29,000 --> 00:40:31,000
那所以我可以这么理解吗

1183
00:40:31,000 --> 00:40:37,000
就是在这个 94 乘以 94 一个方格子里面前半部分是常用的汉字

1184
00:40:37,000 --> 00:40:38,000
然后是按应序排的

1185
00:40:38,000 --> 00:40:41,000
后半部分是不常用的汉字上不手牌的

1186
00:40:41,000 --> 00:40:45,000
嗯就是什么成第 16 到 55 区是一级汉字

1187
00:40:45,000 --> 00:40:46,000
然后一所有一级汉字放在一级汉字上是一级汉字的

1188
00:40:46,000 --> 00:40:49,000
就是从第 16 区到第 55 区

1189
00:40:49,000 --> 00:40:56,000
就是相当于一级汉字按拼音次序排列一共 3753755 个

1190
00:40:56,000 --> 00:41:00,000
然后从第 56 区开始一直到第 87 区是二级汉字

1191
00:41:00,000 --> 00:41:03,000
然后排了 3003108 个嘛

1192
00:41:03,000 --> 00:41:06,000
然后前面还有什么特殊符号之类的

1193
00:41:06,000 --> 00:41:07,000
对啊

1194
00:41:07,000 --> 00:41:11,000
那个阿字嘛就是音序里面第一个字嘛

1195
00:41:11,000 --> 00:41:15,000
就是他区位码是 1601 就是他 16 区的第一个

1196
00:41:15,000 --> 00:41:18,000
所以大家如果去翻这个 GB 的话

1197
00:41:18,000 --> 00:41:23,000
他就每个汉字他只是给每个汉字安排了一个座位

1198
00:41:23,000 --> 00:41:27,000
嗯嗯所以呢比如说阿字是 1601 嘛

1199
00:41:27,000 --> 00:41:32,000
嗯嗯但问题是后面呢我们就好

1200
00:41:32,000 --> 00:41:34,000
我们这个 1601 就怎么编成码

1201
00:41:34,000 --> 00:41:37,000
这是编这是另外一个编码的事情

1202
00:41:37,000 --> 00:41:40,000
对我们刚刚讲的都是一些字符集的事情

1203
00:41:40,000 --> 00:41:42,000
对所以呢不仅是有字

1204
00:41:42,000 --> 00:41:44,000
然后还要有个编码的过程

1205
00:41:44,000 --> 00:41:46,000
我们先有我们先找到那么多字

1206
00:41:46,000 --> 00:41:48,000
然后呢再给他安排这么多码位

1207
00:41:48,000 --> 00:41:51,000
然后给给给他放上去以后了还要进行编码

1208
00:41:51,000 --> 00:41:52,000
嗯

1209
00:41:53,000 --> 00:41:55,000
哎等等我我打个叉问一个

1210
00:41:55,000 --> 00:41:58,000
就所以区位码和那个 unicode 的那个 code point

1211
00:41:58,000 --> 00:41:59,000
是可以对应起来的对吧

1212
00:41:59,000 --> 00:42:05,000
可以对应但是呢呃就是排列方式是完全不一样的

1213
00:42:06,000 --> 00:42:10,000
就是说应该说 GB 2312 他这份国家标准

1214
00:42:10,000 --> 00:42:13,000
他同时设计两部分一部分他设计的是一个

1215
00:42:13,000 --> 00:42:19,000
我们常称叫做呃编码字符集的这样一个字符集标准

1216
00:42:19,000 --> 00:42:25,000
而另一部分他也同时包含了一套这个编码的 incoding 的一套规则

1217
00:42:25,000 --> 00:42:28,000
对啊那那我重新描述一下应该是这么说

1218
00:42:28,000 --> 00:42:32,000
就是说呃 GB 2312 这个我们作为编码方式来讲的时候

1219
00:42:32,000 --> 00:42:36,000
它是对应的是 utf 8 utf 16 tf 32 这种东西

1220
00:42:36,000 --> 00:42:42,000
然后 GB 2312 这个标这个这个这个规范里面的那个区位

1221
00:42:43,000 --> 00:42:46,000
和区位码其实对应 unicode 的那个 code point

1222
00:42:46,000 --> 00:42:51,000
GB 2312 就相当于一个只有一个编码方只有 utf 16 编码方案的 unicode

1223
00:42:51,000 --> 00:42:55,000
对没错没错嗯嗯嗯 OK

1224
00:42:55,000 --> 00:42:57,000
啊所以你听出来

1225
00:42:57,000 --> 00:43:03,000
啊现在来讲这个 GB 2312 作为编码方式的时候他怎么玩的吗

1226
00:43:03,000 --> 00:43:05,000
作为编码方式来这么玩

1227
00:43:05,000 --> 00:43:10,000
就其实就是每个就其实跟 gdf 16 一样嘛

1228
00:43:10,000 --> 00:43:12,000
就是每个汉字和符号都需要两个字节

1229
00:43:13,000 --> 00:43:14,000
因为一个字节放不下

1230
00:43:14,000 --> 00:43:18,000
然后呃第一个字节叫高位第二个字节叫低位

1231
00:43:18,000 --> 00:43:24,000
然后呃高位高位有一个高位高位有一个对应的方法

1232
00:43:24,000 --> 00:43:28,000
就是把一一一共用了 87 个区嘛

1233
00:43:28,000 --> 00:43:30,000
就是 96 区没有用完

1234
00:43:30,000 --> 00:43:32,000
然后从一区到 87 区

1235
00:43:32,000 --> 00:43:36,000
那个二级汉字加上特殊符号就已经排完了

1236
00:43:36,000 --> 00:43:42,000
所以他就把那个呃字节 0 x 1 0 xA 0 就是

1237
00:43:43,000 --> 00:43:48,000
呃 16 进制的 A 0 加上 1 到 87

1238
00:43:48,000 --> 00:43:53,000
然后低位字节是 1 到 94 加上 0 xA 0

1239
00:43:53,000 --> 00:43:55,000
所以如果你有一个呃

1240
00:43:55,000 --> 00:44:01,000
所以 0 xA 0 0 xA 1 0 xA 1 就是相当于呃第一区的第一位

1241
00:44:01,000 --> 00:44:02,000
就这么来的

1242
00:44:02,000 --> 00:44:09,000
然后高位字节呃就是相当于 0 xB 0 到 0 xF 7

1243
00:44:09,000 --> 00:44:11,000
低位字节是 0 xA 1 到 0 xFE

1244
00:44:11,000 --> 00:44:12,000
然后一共就是 0 xB 0 到 0 xF 7

1245
00:44:12,000 --> 00:44:13,000
然后一共就是 0 xB 0 到 0 xF 7

1246
00:44:13,000 --> 00:44:17,000
当然有 6768 个马位

1247
00:44:17,000 --> 00:44:18,000
然后有一些是空的

1248
00:44:18,000 --> 00:44:21,000
对

1249
00:44:21,000 --> 00:44:26,000
所以他这个高位字节和低位字节其实并没和那个区

1250
00:44:26,000 --> 00:44:27,000
没有什么关系

1251
00:44:27,000 --> 00:44:33,000
对高位字节低位字节完全对应于呃区号加上

1252
00:44:33,000 --> 00:44:35,000
嗯

1253
00:44:35,000 --> 00:44:38,000
呃相当于 X 和 Y 嘛

1254
00:44:38,000 --> 00:44:39,000
对

1255
00:44:39,000 --> 00:44:40,000
嗯

1256
00:44:40,000 --> 00:44:41,000
相当于 X 和 Y

1257
00:44:41,000 --> 00:44:42,000
就是说这两个

1258
00:44:42,000 --> 00:44:44,000
我们刚才讲那个 true

1259
00:44:44,000 --> 00:44:45,000
它是一个方格

1260
00:44:45,000 --> 00:44:47,000
就是 94 乘 94

1261
00:44:47,000 --> 00:44:49,000
所以刚好如果用两个字节来表示

1262
00:44:49,000 --> 00:44:51,000
就高位字节对应的是行

1263
00:44:51,000 --> 00:44:53,000
然后低位字节对应的是列

1264
00:44:53,000 --> 00:44:54,000
是这样

1265
00:44:54,000 --> 00:44:56,000
是这个意思对吧

1266
00:44:56,000 --> 00:45:00,000
实际上是一个 87 到 94 的长方形区

1267
00:45:00,000 --> 00:45:03,000
有几个区是没有用的对吧

1268
00:45:03,000 --> 00:45:03,000
对

1269
00:45:03,000 --> 00:45:05,000
87 以后到 94 区就没有用了

1270
00:45:05,000 --> 00:45:07,000
所以其实并不是一个方

1271
00:45:07,000 --> 00:45:08,000
90 乘 94 方的格子

1272
00:45:08,000 --> 00:45:10,000
它没有填满

1273
00:45:10,000 --> 00:45:10,000
有空

1274
00:45:10,000 --> 00:45:11,000
它没有填满

1275
00:45:11,000 --> 00:45:12,000
就有座位空着

1276
00:45:12,000 --> 00:45:14,000
但大致上可以认为高位字节表示行

1277
00:45:14,000 --> 00:45:16,000
然后低位字节表示列

1278
00:45:16,000 --> 00:45:19,000
然后中间有些特殊的那个空格的地方

1279
00:45:19,000 --> 00:45:19,000
对

1280
00:45:19,000 --> 00:45:23,000
然后这个每个都要加上这个 16 进制的 A 0

1281
00:45:23,000 --> 00:45:25,000
就是可以转换为 ASCII 的那个

1282
00:45:25,000 --> 00:45:27,000
就是第一位置为一的时候

1283
00:45:27,000 --> 00:45:29,000
就 128 起

1284
00:45:29,000 --> 00:45:30,000
OK

1285
00:45:30,000 --> 00:45:31,000
make sense

1286
00:45:31,000 --> 00:45:33,000
刚才说了 2312

1287
00:45:33,000 --> 00:45:36,000
它只有六千多个汉字不够用

1288
00:45:36,000 --> 00:45:38,000
所以后来就又进行了扩展

1289
00:45:38,000 --> 00:45:41,000
后面就有什么 GBK

1290
00:45:41,000 --> 00:45:42,000
然后后面还有 GBK

1291
00:45:42,000 --> 00:45:43,000
然后还有 GB 18030

1292
00:45:43,000 --> 00:45:44,000
对

1293
00:45:44,000 --> 00:45:46,000
我们小时候有很多同学的那个名字

1294
00:45:46,000 --> 00:45:48,000
就是起一个冷屁的名字

1295
00:45:48,000 --> 00:45:49,000
然后到时候去录什么准考证

1296
00:45:49,000 --> 00:45:51,000
就录不出来

1297
00:45:51,000 --> 00:45:53,000
就是因为这个派

1298
00:45:53,000 --> 00:45:56,000
比如说两个吉祥的吉念折

1299
00:45:56,000 --> 00:46:00,000
陶折

1300
00:46:00,000 --> 00:46:05,000
这个字原来是作为哲学的折的一体字

1301
00:46:05,000 --> 00:46:06,000
废弃不用的

1302
00:46:06,000 --> 00:46:08,000
所以在当时的那个 GB 2312 里面

1303
00:46:08,000 --> 00:46:09,000
是没有这个字的

1304
00:46:09,000 --> 00:46:11,000
OK

1305
00:46:11,000 --> 00:46:12,000
我

1306
00:46:12,000 --> 00:46:13,000
当时有个同学叫什么

1307
00:46:13,000 --> 00:46:14,000
叫

1308
00:46:14,000 --> 00:46:17,000
他什么利微

1309
00:46:17,000 --> 00:46:18,000
对

1310
00:46:18,000 --> 00:46:20,000
他中间有一个那个利字

1311
00:46:20,000 --> 00:46:22,000
好像是木字旁

1312
00:46:22,000 --> 00:46:23,000
右边有一个

1313
00:46:23,000 --> 00:46:26,000
看起来像威海的威

1314
00:46:26,000 --> 00:46:27,000
但是下面是个乐

1315
00:46:27,000 --> 00:46:30,000
就很冷屁的一个字

1316
00:46:30,000 --> 00:46:31,000
每次录准考证

1317
00:46:31,000 --> 00:46:33,000
他就叫断空格威

1318
00:46:33,000 --> 00:46:35,000
好可怜

1319
00:46:35,000 --> 00:46:38,000
当时我记得就是为了解决

1320
00:46:38,000 --> 00:46:41,000
用 GB 2312 这个字符机不够用

1321
00:46:41,000 --> 00:46:42,000
那种生屁字

1322
00:46:42,000 --> 00:46:45,000
很多人是用那个喂图的方式

1323
00:46:45,000 --> 00:46:47,000
是表示那些生屁字的

1324
00:46:47,000 --> 00:46:48,000
就直接画个图写

1325
00:46:48,000 --> 00:46:49,000
还有人手写吧不是

1326
00:46:49,000 --> 00:46:50,000
就是机器打不出来

1327
00:46:50,000 --> 00:46:51,000
就随后面手写

1328
00:46:51,000 --> 00:46:53,000
再补一个是吧

1329
00:46:53,000 --> 00:46:56,000
对这也是个解放

1330
00:46:56,000 --> 00:46:58,000
和那个用喂图的方式差不多

1331
00:46:58,000 --> 00:47:00,000
就那有一个问题

1332
00:47:00,000 --> 00:47:02,000
就 GBK 和 GB 18030

1333
00:47:02,000 --> 00:47:04,000
也是用两个喂的吗

1334
00:47:04,000 --> 00:47:06,000
就是双字节

1335
00:47:06,000 --> 00:47:09,000
GB 18030 本身两个字节够吗

1336
00:47:09,000 --> 00:47:11,000
应该要用四字节

1337
00:47:11,000 --> 00:47:12,000
它是变成了的

1338
00:47:12,000 --> 00:47:12,000
应该是

1339
00:47:12,000 --> 00:47:15,000
对 GB 230 它是四字节的

1340
00:47:15,000 --> 00:47:15,000
那 GBK 呢

1341
00:47:15,000 --> 00:47:18,000
如果按照刚才那个 GB 2312 的编码方式

1342
00:47:18,000 --> 00:47:20,000
那我们高位都不用都留出来

1343
00:47:20,000 --> 00:47:22,000
就是就每你两个字节

1344
00:47:22,000 --> 00:47:24,000
其实只有一共 14 个位可以用

1345
00:47:24,000 --> 00:47:28,000
14 的 2 的 14 次方应该是 16384 个字

1346
00:47:28,000 --> 00:47:33,000
然后 GBK 其实收入了 21886 个

1347
00:47:33,000 --> 00:47:34,000
其实肯定是不够用的

1348
00:47:34,000 --> 00:47:37,000
所以怎么解决这个问题

1349
00:47:37,000 --> 00:47:39,000
所以刚才我那个算法不对

1350
00:47:39,000 --> 00:47:40,000
它那个双字节

1351
00:47:40,000 --> 00:47:42,000
它只算第一个字节

1352
00:47:42,000 --> 00:47:44,000
那个第一位是不能用的

1353
00:47:44,000 --> 00:47:48,000
其实是应该有 15 个位可以用

1354
00:47:48,000 --> 00:47:51,000
15 个位的话其实可以用到 32000 多个

1355
00:47:51,000 --> 00:47:53,000
那个那个那个叫什么

1356
00:47:53,000 --> 00:47:56,000
所以 GBK 是双字节的

1357
00:47:56,000 --> 00:48:00,000
然后 GB 18030 的话是双字节四字节会用的

1358
00:48:00,000 --> 00:48:00,000
对

1359
00:48:00,000 --> 00:48:04,000
GBK 本身它不是一个正式的 GB

1360
00:48:04,000 --> 00:48:06,000
GBK 是微软搞的是不是

1361
00:48:06,000 --> 00:48:07,000
对

1362
00:48:07,000 --> 00:48:10,000
它就是内码是扩的 K 是扩展的扩嘛

1363
00:48:10,000 --> 00:48:10,000
嗯

1364
00:48:10,000 --> 00:48:11,000
但是它它本身

1365
00:48:11,000 --> 00:48:13,000
扩展的扩

1366
00:48:13,000 --> 00:48:15,000
就是汉字内码扩展规范嘛

1367
00:48:15,000 --> 00:48:17,000
但是它本身它没有号

1368
00:48:17,000 --> 00:48:19,000
其实因为它不是一个正式的 GB

1369
00:48:19,000 --> 00:48:20,000
对

1370
00:48:20,000 --> 00:48:21,000
GB 是国标的意思吗

1371
00:48:21,000 --> 00:48:23,000
它不是一个正式的国标文件

1372
00:48:23,000 --> 00:48:23,000
对

1373
00:48:23,000 --> 00:48:25,000
其实我们说 GBK 的时候

1374
00:48:25,000 --> 00:48:28,000
大多数指的是它的那个字符集标准

1375
00:48:28,000 --> 00:48:30,000
而不是指它的编码方式

1376
00:48:30,000 --> 00:48:32,000
那么 GBK 这个字符集

1377
00:48:32,000 --> 00:48:35,000
你完全可以用 unicode 来给它编码

1378
00:48:35,000 --> 00:48:39,000
那那那那那 GBK 和 GB 2312 是什么关系

1379
00:48:39,000 --> 00:48:39,000
呃

1380
00:48:39,000 --> 00:48:40,000
GB 2312 呢

1381
00:48:40,000 --> 00:48:42,000
它首先定义了一个字符集

1382
00:48:42,000 --> 00:48:44,000
就定了一个字符集的标准

1383
00:48:44,000 --> 00:48:45,000
同时呢

1384
00:48:45,000 --> 00:48:47,000
它还给了一套编码方案

1385
00:48:47,000 --> 00:48:48,000
OK

1386
00:48:48,000 --> 00:48:51,000
但但是同时 GB 2312 的那个字符集

1387
00:48:51,000 --> 00:48:53,000
我们也可以用 unicode 来给它编码

1388
00:48:53,000 --> 00:48:54,000
也就是说一个字符集

1389
00:48:54,000 --> 00:48:58,000
它可是可以用很多种编码方式来实现它的

1390
00:48:58,000 --> 00:49:00,000
同时一种编码方式

1391
00:49:00,000 --> 00:49:03,000
它也是可以去编很多个不同的字符集的

1392
00:49:03,000 --> 00:49:05,000
就它们并不是一个完全一一对应的关系

1393
00:49:05,000 --> 00:49:06,000
对

1394
00:49:06,000 --> 00:49:09,000
所以其实我们在讨论这些的时候

1395
00:49:09,000 --> 00:49:10,000
只要时刻上的字符集呢

1396
00:49:10,000 --> 00:49:10,000
只要时刻上的字符集呢

1397
00:49:10,000 --> 00:49:11,000
对了区分清楚

1398
00:49:11,000 --> 00:49:13,000
我们是在说一个字符集

1399
00:49:13,000 --> 00:49:15,000
还是在说一个编码方式的话

1400
00:49:15,000 --> 00:49:16,000
就不太会混淆

1401
00:49:16,000 --> 00:49:17,000
嗯

1402
00:49:17,000 --> 00:49:18,000
好

1403
00:49:18,000 --> 00:49:20,000
但从字符集的来讲的话

1404
00:49:20,000 --> 00:49:23,000
所以就现在就是大家在买字体的时候

1405
00:49:23,000 --> 00:49:25,000
就经常会说这个字体显示不出来嘛

1406
00:49:25,000 --> 00:49:29,000
那在做在中国的字体厂商的话

1407
00:49:29,000 --> 00:49:33,000
肯定他说首先是要做 GB 2312 里面的

1408
00:49:33,000 --> 00:49:34,000
它那个字呃

1409
00:49:34,000 --> 00:49:36,000
一共是六千多个字嘛

1410
00:49:36,000 --> 00:49:37,000
他是先做这个

1411
00:49:37,000 --> 00:49:37,000
然后

1412
00:49:37,000 --> 00:49:39,000
就那些是必须

1413
00:49:39,000 --> 00:49:39,000
对

1414
00:49:39,000 --> 00:49:40,000
一般来讲就是这是

1415
00:49:40,000 --> 00:49:40,000
就是这个字体的

1416
00:49:40,000 --> 00:49:41,000
最低的门槛

1417
00:49:41,000 --> 00:49:42,000
嗯

1418
00:49:42,000 --> 00:49:45,000
然后后面有支持 GBK 的

1419
00:49:45,000 --> 00:49:46,000
的字库

1420
00:49:46,000 --> 00:49:48,000
然后有支持

1421
00:49:48,000 --> 00:49:50,000
GB 1803 里的字库

1422
00:49:50,000 --> 00:49:50,000
说实话

1423
00:49:50,000 --> 00:49:53,000
GB 1803 里的字库还非常少

1424
00:49:53,000 --> 00:49:55,000
现在字实在是太多了

1425
00:49:55,000 --> 00:49:57,000
对完整支持的非常少

1426
00:49:57,000 --> 00:49:59,000
对反正是六万六万多了

1427
00:49:59,000 --> 00:50:00,000
因为那时候在做的时候

1428
00:50:00,000 --> 00:50:04,000
把那个什么少数民族兄弟兄弟民族的一些文字

1429
00:50:04,000 --> 00:50:06,000
也一起做进去了吗

1430
00:50:06,000 --> 00:50:08,000
对一个不小心

1431
00:50:08,000 --> 00:50:10,000
可能就超过了

1432
00:50:10,000 --> 00:50:10,000
open type

1433
00:50:10,000 --> 00:50:12,000
单个文件的

1434
00:50:12,000 --> 00:50:12,000
对

1435
00:50:12,000 --> 00:50:13,000
的限制

1436
00:50:13,000 --> 00:50:14,000
对

1437
00:50:14,000 --> 00:50:15,000
因为一个 open type

1438
00:50:15,000 --> 00:50:18,000
他是用一个 unsigned short 的

1439
00:50:18,000 --> 00:50:21,000
所以只有六万也只有六万多个吧

1440
00:50:21,000 --> 00:50:23,000
就应该是六五五五五三五多少

1441
00:50:23,000 --> 00:50:25,000
六五五三五五对

1442
00:50:25,000 --> 00:50:25,000
对了

1443
00:50:25,000 --> 00:50:27,000
对六五三六对

1444
00:50:27,000 --> 00:50:28,000
很有可能就放不下

1445
00:50:28,000 --> 00:50:30,000
然后再从编码方式的说

1446
00:50:30,000 --> 00:50:31,000
刚才我们也讨论了嘛

1447
00:50:31,000 --> 00:50:33,000
那 GB 2312 和 GBK 呢

1448
00:50:33,000 --> 00:50:35,000
都是双字呃都是双字节的字符集的

1449
00:50:35,000 --> 00:50:39,000
那 GB 1803 里的是单字节

1450
00:50:39,000 --> 00:50:40,000
双字节四字节

1451
00:50:40,000 --> 00:50:42,000
就是它是变长的

1452
00:50:42,000 --> 00:50:43,000
嗯

1453
00:50:43,000 --> 00:50:45,000
这个思想的话跟 unicode 就是一样的吗

1454
00:50:45,000 --> 00:50:47,000
哎

1455
00:50:47,000 --> 00:50:48,000
我问一个问题啊

1456
00:50:48,000 --> 00:50:52,000
就是 GB 18030 那个码点和 unicode 的码点是重合的吗

1457
00:50:52,000 --> 00:50:53,000
不一样

1458
00:50:53,000 --> 00:50:54,000
也不一样

1459
00:50:54,000 --> 00:50:57,000
就后来是那个就是那个后面要讲那个 CJKunification 的关系

1460
00:50:57,000 --> 00:50:58,000
对

1461
00:50:58,000 --> 00:50:59,000
所以就是同样一个字的话

1462
00:50:59,000 --> 00:51:01,000
在 GB 里面它是这个座位

1463
00:51:01,000 --> 00:51:03,000
它是这个座位要用这个编码

1464
00:51:03,000 --> 00:51:04,000
但是呢

1465
00:51:04,000 --> 00:51:07,000
在在 unicode 的话它是另外一个座位要另外一个编码

1466
00:51:07,000 --> 00:51:09,000
那那 GB 2312 GBK 和 GB 1803 呢是什么样的呢

1467
00:51:09,000 --> 00:51:11,000
它们是一个超级的关系吗

1468
00:51:11,000 --> 00:51:12,000
还是也不一样

1469
00:51:12,000 --> 00:51:14,000
基本上是互相兼容的啊

1470
00:51:14,000 --> 00:51:15,000
就是向后兼容

1471
00:51:15,000 --> 00:51:16,000
对向后兼容的

1472
00:51:16,000 --> 00:51:24,000
就是 GB 2 就 GBK 里面包含 GB 2312312 那些字并全部的字在那个对应的位置上

1473
00:51:24,000 --> 00:51:29,000
然后 GB 18030 是包含 GBK 全部的字并且也是在那个位置上

1474
00:51:29,000 --> 00:51:30,000
对

1475
00:51:30,000 --> 00:51:31,000
对对对对

1476
00:51:31,000 --> 00:51:34,000
那就是就是一个超级一个比一个大的概念了

1477
00:51:34,000 --> 00:51:35,000
对

1478
00:51:35,000 --> 00:51:36,000
对对对

1479
00:51:36,000 --> 00:51:38,000
在这个 GB 的这一系列字符集呢

1480
00:51:38,000 --> 00:51:43,000
这一系列字符集里面最坑的只有 GB 12345 这个标准

1481
00:51:43,000 --> 00:51:47,000
那么其他的都是一个就是越向后越往前兼容

1482
00:51:47,000 --> 00:51:50,000
就是说后来的肯定是兼容前来的这样

1483
00:51:50,000 --> 00:51:54,000
所以我们在这里有机会一定要说一下 GB 12345

1484
00:51:54,000 --> 00:51:56,000
这是什么

1485
00:51:56,000 --> 00:51:58,000
一个特别坑

1486
00:51:58,000 --> 00:52:00,000
GB 12345 我从来没有听过这个东西

1487
00:52:00,000 --> 00:52:01,000
对

1488
00:52:01,000 --> 00:52:06,000
GB 12345 是那个字体圈的一个噩梦

1489
00:52:06,000 --> 00:52:08,000
都说不到这个东西了

1490
00:52:08,000 --> 00:52:12,000
就经常说的就是那个什么繁体字字符集嘛

1491
00:52:12,000 --> 00:52:16,000
它其实呢编码呢就是跟那个 2312 是一样的

1492
00:52:16,000 --> 00:52:20,000
哦可以看成一一二 GB 2312 的繁体版本

1493
00:52:20,000 --> 00:52:23,000
共收录有 6,866 个汉字

1494
00:52:23,000 --> 00:52:25,000
对但多了几个

1495
00:52:25,000 --> 00:52:29,000
因为大家知道就是繁减不是一一对应的

1496
00:52:29,000 --> 00:52:30,000
没错

1497
00:52:30,000 --> 00:52:37,000
那在汉字在简化的时候一般是多繁对把好多个繁体字同时简化成一个简体字

1498
00:52:37,000 --> 00:52:43,000
所以原来它就是在 GB 2312 是定的是简体字嘛

1499
00:52:43,000 --> 00:52:48,000
那它改成 12345 的时候它字它要写繁体字它就要变多嘛

1500
00:52:48,000 --> 00:52:49,000
对

1501
00:52:49,000 --> 00:52:52,000
但是这个一繁多繁对一简的时候怎么办呢

1502
00:52:52,000 --> 00:52:57,000
它就会挑选一个就是简体字对应的繁体字先安上去

1503
00:52:57,000 --> 00:53:01,000
然后剩下的那些剩下来的繁体字它统一放到最后

1504
00:53:01,000 --> 00:53:03,000
码位上的统一放到最后

1505
00:53:03,000 --> 00:53:06,000
就是之前那个说的那些空位的那些地方

1506
00:53:06,000 --> 00:53:07,000
对

1507
00:53:07,000 --> 00:53:09,000
简繁转化这里可能要提一下

1508
00:53:09,000 --> 00:53:12,000
刚才说多繁对一简其实也有一简对多繁

1509
00:53:12,000 --> 00:53:13,000
就是多

1510
00:53:13,000 --> 00:53:14,000
说错了

1511
00:53:14,000 --> 00:53:20,000
就是一繁对多简是我们讲说一简对多繁是非常常见的

1512
00:53:20,000 --> 00:53:25,000
但是一繁对多简的话它其实往往是一个一体字之间

1513
00:53:25,000 --> 00:53:28,000
但是的确也有相互的关系也有

1514
00:53:28,000 --> 00:53:32,000
它不是一个对这个这个数学上怎么描述这种函数的概念来的

1515
00:53:32,000 --> 00:53:35,000
我想这不是函数单设不是一个单设

1516
00:53:35,000 --> 00:53:38,000
不是一个单设的一个概念

1517
00:53:38,000 --> 00:53:42,000
一繁对多简比如说乾坤的钱

1518
00:53:42,000 --> 00:53:47,000
对在繁体字里的话它可能是干也可能是钱

1519
00:53:47,000 --> 00:53:49,000
它是一个多音字

1520
00:53:49,000 --> 00:53:54,000
但是对到简体的就跟因为它用途不同就把它分化成了这种不同的写法了

1521
00:53:54,000 --> 00:53:58,000
对它把干的这个时候呢对应到另外一个字上去了嘛

1522
00:53:58,000 --> 00:54:00,000
所以呢这个多音字就变成了一个单音字

1523
00:54:00,000 --> 00:54:02,000
专指乾坤的钱

1524
00:54:02,000 --> 00:54:05,000
是所以其实很多那个很多那个朋友信了

1525
00:54:05,000 --> 00:54:09,000
写的那种就是网页在线的什么减反转化工具都是不合格的

1526
00:54:09,000 --> 00:54:13,000
呃对如果你的算法很简单的话确实会输错

1527
00:54:13,000 --> 00:54:18,000
就他很多很多人都是直接拿一个那个就是那个那个那个 dictionary 的表

1528
00:54:18,000 --> 00:54:20,000
就是一这个换成那个就完了吧

1529
00:54:20,000 --> 00:54:24,000
但其实是要根据语境和那个前后文来来决定的

1530
00:54:24,000 --> 00:54:28,000
对吧乾坤换成干坤呢有还蛮多的

1531
00:54:28,000 --> 00:54:34,000
然后说到这个 GB 12345 的字体产品的话我们也必须要说一下对吧

1532
00:54:34,000 --> 00:54:36,000
因为内码是一样的嘛

1533
00:54:36,000 --> 00:54:44,000
所以在国内的一些大的字体产商他们曾经就是有到现在也有他们所谓的繁体汉字的字库

1534
00:54:44,000 --> 00:54:50,000
就以换字库的形式来实现繁体而不没有换内码

1535
00:54:50,000 --> 00:54:52,000
就是因为那个 GB 2345 的问题嘛

1536
00:54:52,000 --> 00:54:56,000
对所以呢就是因为他们用 12345 来来做编码嘛

1537
00:54:56,000 --> 00:54:57,000
对对对

1538
00:54:57,000 --> 00:55:04,000
这个他只是在表面因为到了用字库显示他其实就是最后显示的层层级呢

1539
00:55:04,000 --> 00:55:06,000
他码其实没变嘛

1540
00:55:06,000 --> 00:55:07,000
对

1541
00:55:07,000 --> 00:55:15,000
这样的话这样做出来的 GB 12345 的繁体字库就不能解决一减对多反的问题

1542
00:55:15,000 --> 00:55:17,000
然后就经常出错字

1543
00:55:17,000 --> 00:55:22,000
比如说永何九年岁在魁丑嘛

1544
00:55:22,000 --> 00:55:24,000
那个丑字就变成了没丑的丑了

1545
00:55:24,000 --> 00:55:30,000
所以呢我曾经在我的微博上讲到这个如果一个产品啊

1546
00:55:30,000 --> 00:55:32,000
他一个自购产品如果会导致错字库的话呢

1547
00:55:32,000 --> 00:55:33,000
如果一个产品啊他一个自购产品如果会导致错字库的话呢

1548
00:55:33,000 --> 00:55:34,000
如果一个产品啊他一个自购产品如果会导致错字库的话呢

1549
00:55:34,000 --> 00:55:37,000
我觉得这是这应该讲是一个不及格的产品

1550
00:55:37,000 --> 00:55:40,000
但是他的自我设计方式下他没有别的解决方案了呀

1551
00:55:40,000 --> 00:55:46,000
对所以就是说就是应该废除用 GB 12345 来分装库

1552
00:55:46,000 --> 00:55:48,000
就那个那个本来就是一个 hack

1553
00:55:48,000 --> 00:55:54,000
对那是一个固定时期的产物而且是一个不成熟的产物

1554
00:55:54,000 --> 00:55:55,000
过度方案呗

1555
00:55:55,000 --> 00:55:57,000
现在其实都就刚刚我们说嘛

1556
00:55:57,000 --> 00:55:59,000
这样我们都没有听过 GB 12345 这个规范

1557
00:55:59,000 --> 00:56:01,000
其实应该用的也不多了吧

1558
00:56:01,000 --> 00:56:03,000
对就因为国内有几个产品呢

1559
00:56:03,000 --> 00:56:05,000
就是因为国内有几个大厂

1560
00:56:05,000 --> 00:56:10,000
就是大家现在去买繁体字库的话有很多就是这样的

1561
00:56:10,000 --> 00:56:14,000
所以呢又另外一个问题就是说繁简转换应该怎么转换

1562
00:56:14,000 --> 00:56:19,000
就不能单纯的就是像用这个 GB 12345 的字库到最后

1563
00:56:19,000 --> 00:56:22,000
只转字库而没有转码

1564
00:56:22,000 --> 00:56:25,000
我们应该彻头彻尾的把码换掉

1565
00:56:25,000 --> 00:56:28,000
就不能用那种 dirty the hack

1566
00:56:28,000 --> 00:56:32,000
可是就是因为有大厂中国的很多大厂的话都做了

1567
00:56:32,000 --> 00:56:34,000
也 GB 12345 的字库

1568
00:56:34,000 --> 00:56:37,000
所以导致现在街头巷尾很多错字都是这样

1569
00:56:37,000 --> 00:56:38,000
我都去砍了

1570
00:56:38,000 --> 00:56:42,000
这是名副其实的文字狱啊

1571
00:56:46,000 --> 00:56:49,000
好吧那我们终于可以说 Unicode 的问题了

1572
00:56:49,000 --> 00:56:53,000
Windows 的那个要不要先讲一下

1573
00:56:53,000 --> 00:56:56,000
就为什么世界上会先有 GBK

1574
00:56:56,000 --> 00:56:57,000
就是因为

1575
00:56:57,000 --> 00:57:01,000
操作迅速的发展已经远远超过了国家制定标准的发展

1576
00:57:02,000 --> 00:57:08,000
然后操作系统厂商微软不得不先解决了一个人们必须要解决的痛点

1577
00:57:08,000 --> 00:57:11,000
然后国家才跟上的推出了 GBK

1578
00:57:11,000 --> 00:57:12,000
GB 2

1579
00:57:12,000 --> 00:57:17,000
那个什么 18030 来取代 GBK

1580
00:57:17,000 --> 00:57:19,000
我觉得从这个侧面其实反映出了

1581
00:57:19,000 --> 00:57:23,000
现在我们已经处在一个接近于那种

1582
00:57:23,000 --> 00:57:26,000
就是跨国的

1583
00:57:26,000 --> 00:57:27,000
或者怎么说呢

1584
00:57:27,000 --> 00:57:32,000
从这件事情开始是跨国的公司取代政府来解决了这个问题

1585
00:57:32,000 --> 00:57:35,000
解决你的一些民生问题的一个时代

1586
00:57:35,000 --> 00:57:36,000
其实就是从这里

1587
00:57:36,000 --> 00:57:38,000
从这种事情开始

1588
00:57:38,000 --> 00:57:41,000
如果你要说的话也肯定就是政治

1589
00:57:41,000 --> 00:57:43,000
政治肯定是落后的

1590
00:57:43,000 --> 00:57:45,000
永远都是经济先行的嘛

1591
00:57:45,000 --> 00:57:50,000
所以我们现在是我的意思是在信息时代之前

1592
00:57:50,000 --> 00:58:00,000
很少会有一个公司会在这种跨国的超越政府界限的这个程度上来改变我们的信息

1593
00:58:00,000 --> 00:58:03,000
这个程度上来改变我们的生活

1594
00:58:03,000 --> 00:58:04,000
大国吧

1595
00:58:04,000 --> 00:58:06,000
小国其实这种事情经常发生

1596
00:58:06,000 --> 00:58:07,000
以前可能是有

1597
00:58:07,000 --> 00:58:09,000
但以前以前 IBM 之类的

1598
00:58:09,000 --> 00:58:13,000
他们做的事情可能更多的也就是做制定一个国内标准

1599
00:58:13,000 --> 00:58:15,000
在国内工业界的标准

1600
00:58:15,000 --> 00:58:17,000
但是在微软这件事情上

1601
00:58:17,000 --> 00:58:21,000
你由一个外国厂商来搞一个你国文字

1602
00:58:21,000 --> 00:58:24,000
这好像还是前就是前所未有的事情

1603
00:58:24,000 --> 00:58:25,000
我觉得

1604
00:58:25,000 --> 00:58:26,000
就是对于小国来说

1605
00:58:26,000 --> 00:58:28,000
这种事情应该经常发生啊

1606
00:58:28,000 --> 00:58:29,000
就是比如说周边那些

1607
00:58:29,000 --> 00:58:31,000
可能人口也很少

1608
00:58:31,000 --> 00:58:32,000
占地面积很小的国家

1609
00:58:32,000 --> 00:58:35,000
他真的什么技术都是要由别人提供给他的

1610
00:58:35,000 --> 00:58:36,000
别人先用了

1611
00:58:36,000 --> 00:58:37,000
他才说我们来可以

1612
00:58:37,000 --> 00:58:39,000
就这样支持他了

1613
00:58:39,000 --> 00:58:42,000
就继承标准

1614
00:58:42,000 --> 00:58:47,000
对其实类似的例子在这个 CJK 领域并不罕见

1615
00:58:47,000 --> 00:58:49,000
比如说那个自负机标准

1616
00:58:49,000 --> 00:58:51,000
像香港的那个自负机标准

1617
00:58:51,000 --> 00:58:56,000
其实主要就是由华康和蒙娜两家自体公司来推动的

1618
00:58:56,000 --> 00:58:58,000
那么香港显然就是属于一个

1619
00:58:58,000 --> 00:59:02,000
政府在这方面管制力不强的这样一个地区

1620
00:59:02,000 --> 00:59:03,000
就曾经了

1621
00:59:03,000 --> 00:59:11,000
对那么包括像新加坡也是新加坡早期是直接照搬了 GB 2312 来作为他们这个文字标准的

1622
00:59:11,000 --> 00:59:13,000
那么后期 unicode 出来之后

1623
00:59:13,000 --> 00:59:20,000
他们又收录了一部分这个号称来源是新加坡的一部分汉字

1624
00:59:20,000 --> 00:59:21,000
但是实际上

1625
00:59:21,000 --> 00:59:23,000
这就是为什么维基百科里面有马兴简历

1626
00:59:23,000 --> 00:59:24,000
对但实际上呢

1627
00:59:24,000 --> 00:59:27,000
那个至今好像没有明确的来源说

1628
00:59:27,000 --> 00:59:32,000
这个新加坡来源的汉字是他们政府官方给的

1629
00:59:32,000 --> 00:59:34,000
对的确是有的

1630
00:59:34,000 --> 00:59:35,000
的确是有的

1631
00:59:35,000 --> 00:59:38,000
就是在新加坡当时他有新加坡的一些简化字

1632
00:59:38,000 --> 00:59:40,000
就和大陆简体不一样的

1633
00:59:40,000 --> 00:59:42,000
有几十个字数量不多

1634
00:59:42,000 --> 00:59:45,000
这里可能要插一下历史啊

1635
00:59:45,000 --> 00:59:47,000
就中国大陆搞简化字的时候

1636
00:59:47,000 --> 00:59:48,000
新加坡也跟着搞了是吧

1637
00:59:48,000 --> 00:59:52,000
当时他们做这个简化的背景和目的是什么

1638
00:59:52,000 --> 00:59:55,000
应该还是为了提高识字率吧

1639
00:59:55,000 --> 00:59:56,000
这个出发点都是类似的

1640
00:59:57,000 --> 01:00:05,000
就是要我倒觉得是为了贴合当时就中华人中有一个怎么说呢

1641
01:00:05,000 --> 01:00:07,000
就站起来的国家吗

1642
01:00:07,000 --> 01:00:08,000
不是吗

1643
01:00:08,000 --> 01:00:10,000
就新加坡不是也搞了一个

1644
01:00:10,000 --> 01:00:13,000
不是民族认同感

1645
01:00:13,000 --> 01:00:16,000
而是因为新加坡本来就是一个华人建立的国家

1646
01:00:16,000 --> 01:00:19,000
然后他们看到这个就是母国非常强盛

1647
01:00:19,000 --> 01:00:21,000
就就新向往之吗

1648
01:00:21,000 --> 01:00:25,000
或者说出是出一种就是现在也有这种强势文化出现了

1649
01:00:25,000 --> 01:00:26,000
然后这个

1650
01:00:26,000 --> 01:00:27,000
呃

1651
01:00:27,000 --> 01:00:31,000
不是强势文化而是一个就是有一个独立自主的国家出现了

1652
01:00:31,000 --> 01:00:33,000
那就采取采用了这样一种

1653
01:00:33,000 --> 01:00:36,000
就处处我觉得是出于一种民族认同感

1654
01:00:36,000 --> 01:00:37,000
来做的

1655
01:00:37,000 --> 01:00:41,000
不像那个不就是信因为现在大家都很讨厌中国的

1656
01:00:41,000 --> 01:00:45,000
那个时候中国刚出现的时候还是比较让全球华人为之一振的吗

1657
01:00:45,000 --> 01:00:47,000
对有可能有一部分这个因素

1658
01:00:47,000 --> 01:00:56,000
但是呃我我的观点是认为还是因为新加坡其实在那个时期并没有这方面的专家来具体的制定一个新的标准的能力

1659
01:00:56,000 --> 01:00:57,000
所以我觉得这个是一个很重要的问题啊

1660
01:00:57,000 --> 01:01:05,000
所以他们情愿去搬一个在文化上面和在这个身份认同上都跟他们接近的国家的一个成熟标准

1661
01:01:05,000 --> 01:01:09,000
不问题是你你你这个回避了一点就是他们还有一个选择就是什么也不做啊

1662
01:01:09,000 --> 01:01:11,000
继续用继续用繁体啊

1663
01:01:11,000 --> 01:01:13,000
为什么一定要你是说为什么要做简化是吗

1664
01:01:13,000 --> 01:01:15,000
对啊

1665
01:01:15,000 --> 01:01:16,000
OK

1666
01:01:16,000 --> 01:01:23,000
是这样子新加坡使用的汉字他们在 1969 年他们颁布了新加坡的简体字表

1667
01:01:23,000 --> 01:01:26,000
呃然后这个简体字比有 502 个字

1668
01:01:26,000 --> 01:01:29,000
所以他们一般把这个称为 502 简体字表

1669
01:01:29,000 --> 01:01:35,000
然后这这个简体字表和中华人民共和国的汉字简呃简化方案是不一样的

1670
01:01:35,000 --> 01:01:39,000
然后里面呢有 67 个字呢是不一样的

1671
01:01:39,000 --> 01:01:41,000
嗯

1672
01:01:41,000 --> 01:01:43,000
那怎么处理

1673
01:01:43,000 --> 01:01:51,000
然后 1976 年的时候呢新加坡又又说他们倒过来呃完全采用呃中华人民共和国的简体字

1674
01:01:51,000 --> 01:01:53,000
就把那 67 个也干掉了

1675
01:01:53,000 --> 01:01:55,000
对所以呢这 67 个字呢就是

1676
01:01:55,000 --> 01:02:00,000
曾经出现过但是呢现在已经不用的字

1677
01:02:00,000 --> 01:02:01,000
嗯

1678
01:02:01,000 --> 01:02:03,000
但是 unicode 这垃圾堆应该也装进去了

1679
01:02:03,000 --> 01:02:05,000
对对对对所以要装进去

1680
01:02:05,000 --> 01:02:06,000
对有一些是装进去了

1681
01:02:06,000 --> 01:02:07,000
没错

1682
01:02:07,000 --> 01:02:08,000
全部装进去了应该是

1683
01:02:08,000 --> 01:02:11,000
我就你刚才 real 问说那个时候怎么处理

1684
01:02:11,000 --> 01:02:15,000
因为那 1969 年的时候那个时候你处于不一样的签字就可以了嘛

1685
01:02:15,000 --> 01:02:17,000
那个时候没有电话的问题

1686
01:02:17,000 --> 01:02:18,000
对啊

1687
01:02:18,000 --> 01:02:19,000
这个意思

1688
01:02:19,000 --> 01:02:20,000
对啊

1689
01:02:20,000 --> 01:02:22,000
嗯就不存在码点这个问题了

1690
01:02:22,000 --> 01:02:24,000
对啊对所以我觉得他们用回 gb 2312 的这个问题呢

1691
01:02:24,000 --> 01:02:27,000
就是他们没这个能力来做这方面新的技术规格

1692
01:02:27,000 --> 01:02:28,000
这不划算吗

1693
01:02:28,000 --> 01:02:30,000
你本来人口少的国家你要做这种吃力不讨好的事情何必呢

1694
01:02:30,000 --> 01:02:31,000
嗯

1695
01:02:31,000 --> 01:02:32,000
就像直接那个小什么

1696
01:02:32,000 --> 01:02:33,000
按我们现在的话

1697
01:02:33,000 --> 01:02:34,000
好话说叫直接来 for carry use

1698
01:02:34,000 --> 01:02:35,000
嗯

1699
01:02:35,000 --> 01:02:36,000
对这个历史包括在这个 big five

1700
01:02:36,000 --> 01:02:37,000
big five 也是开始照搬了这次的规范

1701
01:02:37,000 --> 01:02:38,000
然后自己做了一些扩展

1702
01:02:38,000 --> 01:02:39,000
嗯

1703
01:02:39,000 --> 01:02:40,000
嗯

1704
01:02:40,000 --> 01:02:41,000
嗯

1705
01:02:41,000 --> 01:02:42,000
嗯

1706
01:02:42,000 --> 01:02:43,000
嗯

1707
01:02:43,000 --> 01:02:44,000
嗯

1708
01:02:44,000 --> 01:02:45,000
嗯

1709
01:02:45,000 --> 01:02:46,000
嗯

1710
01:02:46,000 --> 01:02:47,000
嗯

1711
01:02:47,000 --> 01:02:48,000
嗯

1712
01:02:48,000 --> 01:02:49,000
嗯

1713
01:02:49,000 --> 01:02:50,000
嗯

1714
01:02:50,000 --> 01:02:51,000
嗯

1715
01:02:51,000 --> 01:02:52,000
嗯

1716
01:02:52,000 --> 01:02:53,000
嗯

1717
01:02:53,000 --> 01:02:54,000
嗯

1718
01:02:54,000 --> 01:02:55,000
嗯

1719
01:02:55,000 --> 01:02:56,000
嗯

1720
01:02:56,000 --> 01:02:57,000
嗯

1721
01:02:57,000 --> 01:02:58,000
嗯

1722
01:02:58,000 --> 01:02:59,000
对

1723
01:02:59,000 --> 01:03:00,000
嗯

1724
01:03:00,000 --> 01:03:01,000
对

1725
01:03:01,000 --> 01:03:02,000
嗯

1726
01:03:02,000 --> 01:03:03,000
嗯

1727
01:03:03,000 --> 01:03:04,000
嗯

1728
01:03:04,000 --> 01:03:05,000
嗯

1729
01:03:05,000 --> 01:03:06,000
对

1730
01:03:06,000 --> 01:03:07,000
Mutta

1731
01:03:07,000 --> 01:03:08,000
酷

1732
01:03:08,000 --> 01:03:09,000
可是 mnt

1733
01:03:09,000 --> 01:03:11,000
��

1734
01:03:22,000 --> 01:03:23,000
嗯

1735
01:03:23,000 --> 01:03:23,000
我

1736
01:03:23,000 --> 01:03:24,000
在默认

1737
01:03:24,000 --> 01:03:26,000
比如说你中文版的 Windows

1738
01:03:26,000 --> 01:03:28,000
你用记事本默认保存的时候

1739
01:03:28,000 --> 01:03:30,000
它选择的编码方式是什么

1740
01:03:30,000 --> 01:03:31,000
我是这么理解的

1741
01:03:31,000 --> 01:03:34,000
Windows 里面有一个默认的码本

1742
01:03:34,000 --> 01:03:36,000
就是有一个 code page

1743
01:03:36,000 --> 01:03:36,000
你得去选

1744
01:03:36,000 --> 01:03:38,000
然后你选什么

1745
01:03:38,000 --> 01:03:40,000
它默认的储存就是什么

1746
01:03:40,000 --> 01:03:41,000
如果你是中文版 Windows 的话

1747
01:03:41,000 --> 01:03:46,000
默认就是 GB 18030 应该是

1748
01:03:46,000 --> 01:03:47,000
对 我就这个意思

1749
01:03:47,000 --> 01:03:48,000
就是说它等于是给

1750
01:03:48,000 --> 01:03:51,000
某一个区域版本的 Windows

1751
01:03:51,000 --> 01:03:55,000
选择了一个默认的保存的编码方式

1752
01:03:55,000 --> 01:03:56,000
和打开

1753
01:03:56,000 --> 01:03:58,000
对 打开和 decode

1754
01:03:58,000 --> 01:03:59,000
就好像有些人玩日文游戏

1755
01:03:59,000 --> 01:04:01,000
一定要先把 code page 改成日文的

1756
01:04:01,000 --> 01:04:02,000
然后在玩的时候

1757
01:04:02,000 --> 01:04:03,000
日文的游戏才不会显示热门

1758
01:04:03,000 --> 01:04:05,000
但是其他系统的所有部分就是热门

1759
01:04:05,000 --> 01:04:06,000
没错

1760
01:04:06,000 --> 01:04:09,000
所以 Windows 用的 code page

1761
01:04:09,000 --> 01:04:11,000
到底默认是 GBK 还是 GB 18030 的

1762
01:04:11,000 --> 01:04:13,000
我记得是 18030

1763
01:04:13,000 --> 01:04:15,000
我上一次改的时候应该还是 18030

1764
01:04:15,000 --> 01:04:17,000
现在已经变成 18030 了

1765
01:04:17,000 --> 01:04:19,000
因为那个时候没有 GBK 的时候

1766
01:04:19,000 --> 01:04:20,000
你自然就是

1767
01:04:20,000 --> 01:04:23,000
就没有 18030 的时候自然就是 GBK

1768
01:04:23,000 --> 01:04:24,000
但是现在有标准

1769
01:04:24,000 --> 01:04:26,000
会牵涉到 Windows 不同版本

1770
01:04:26,000 --> 01:04:28,000
它有不同行为的结果了吧

1771
01:04:28,000 --> 01:04:30,000
是没错

1772
01:04:30,000 --> 01:04:33,000
然后因为刚才我们讲的

1773
01:04:33,000 --> 01:04:37,000
GB 2312 GBK 和 GB 18030

1774
01:04:37,000 --> 01:04:40,000
它是一个逐渐超级的一个关系

1775
01:04:40,000 --> 01:04:42,000
所以新版本的 Windows

1776
01:04:42,000 --> 01:04:45,000
它总是能兼容旧版本的文件的

1777
01:04:45,000 --> 01:04:48,000
理论上是这样

1778
01:04:48,000 --> 01:04:50,000
这个其实需要找一种

1779
01:04:50,000 --> 01:04:53,000
Windows 对 Windows 的编程比较熟悉的人来解释

1780
01:04:53,000 --> 01:04:55,000
他们的编码方式是向后兼容的

1781
01:04:55,000 --> 01:04:57,000
对

1782
01:04:57,000 --> 01:04:59,000
所以就不存在说 Windows

1783
01:04:59,000 --> 01:05:02,000
比如说 Windows 10 默认是 GB 18030 中文版

1784
01:05:02,000 --> 01:05:03,000
不对

1785
01:05:03,000 --> 01:05:04,000
它应该用 Unicode 吧

1786
01:05:04,000 --> 01:05:05,000
anyway

1787
01:05:05,000 --> 01:05:07,000
假设它是用 GB 180

1788
01:05:07,000 --> 01:05:09,000
它存回去就还可以

1789
01:05:09,000 --> 01:05:10,000
也可以打开之前 Windows

1790
01:05:10,000 --> 01:05:13,000
比如说 XP 用 GBK 编码的时候存的东西

1791
01:05:13,000 --> 01:05:13,000
对

1792
01:05:13,000 --> 01:05:15,000
这是肯定可以的

1793
01:05:15,000 --> 01:05:15,000
OK

1794
01:05:15,000 --> 01:05:17,000
所以就是说

1795
01:05:17,000 --> 01:05:19,000
代码页

1796
01:05:19,000 --> 01:05:19,000
这个 code page

1797
01:05:19,000 --> 01:05:20,000
这个事情

1798
01:05:20,000 --> 01:05:22,000
的话就只有 Windows 在用

1799
01:05:22,000 --> 01:05:23,000
IBM 的那套架构

1800
01:05:23,000 --> 01:05:26,000
对

1801
01:05:26,000 --> 01:05:29,000
因为在其他的像比如说 Mac 和 Linux 上面

1802
01:05:29,000 --> 01:05:30,000
它是你让你直接在

1803
01:05:30,000 --> 01:05:32,000
就是叫什么

1804
01:05:32,000 --> 01:05:34,000
就是保存的时候文件编辑器

1805
01:05:34,000 --> 01:05:37,000
它是用那个 charset 的一个标志吧

1806
01:05:37,000 --> 01:05:37,000
应该

1807
01:05:37,000 --> 01:05:38,000
对

1808
01:05:38,000 --> 01:05:38,000
没错

1809
01:05:38,000 --> 01:05:41,000
这是两种编码的标记的哲学吧

1810
01:05:41,000 --> 01:05:42,000
可以说是

1811
01:05:42,000 --> 01:05:45,000
一个是全系统的

1812
01:05:45,000 --> 01:05:47,000
一个是那个 per file

1813
01:05:47,000 --> 01:05:50,000
终于讲清楚

1814
01:05:50,000 --> 01:05:50,000
这个

1815
01:05:50,000 --> 01:05:51,000
要做什么

1816
01:05:51,000 --> 01:05:51,000
这个 wouldn't

1817
01:05:52,000 --> 01:05:52,000
我们了

1818
01:05:52,000 --> 01:05:53,000
我们现在好

1819
01:05:53,000 --> 01:05:54,000
不-

1820
01:05:54,000 --> 01:05:55,000
大家可以训练一下

1821
01:05:55,000 --> 01:05:58,000
把它的作品

1822
01:05:58,000 --> 01:05:59,000
唱成干 Fen

1823
01:05:59,000 --> 01:06:01,000
пес

1824
01:06:01,000 --> 01:06:02,000
我希驯了

1825
01:06:02,000 --> 01:06:02,000
你听听

1826
01:06:02,000 --> 01:06:03,000
一听

1827
01:06:03,000 --> 01:06:03,000
对

1828
01:06:03,000 --> 01:06:04,000
你看

1829
01:06:04,000 --> 01:06:05,000
我听不明白

1830
01:06:05,000 --> 01:06:07,000
我们 passwords

1831
01:06:07,000 --> 01:06:09,000
restored

1832
01:06:09,000 --> 01:06:11,000
甚至 ushima

1833
01:06:11,000 --> 01:06:12,000
disk

1834
01:06:12,000 --> 01:06:13,000
成功后台

1835
01:06:13,000 --> 01:06:16,000
还有一个

1836
01:06:16,000 --> 01:06:18,000
两 n

1837
01:06:18,000 --> 01:06:19,000
Batman

1838
01:06:19,000 --> 01:06:20,000
能够油装的

1839
01:06:20,000 --> 01:06:21,000
好像听起来很高级

1840
01:06:21,000 --> 01:06:22,000
猜很杀了

1841
01:06:22,000 --> 01:06:27,000
OK

1842
01:06:27,000 --> 01:06:29,000
现在终于进入到了

1843
01:06:29,000 --> 01:06:30,000
Unicode 的时代

1844
01:06:30,000 --> 01:06:31,000
其实这两个是并存的吧

1845
01:06:31,000 --> 01:06:34,000
在时间观念上是有重叠了

1846
01:06:34,000 --> 01:06:36,000
应该说 Unicode

1847
01:06:36,000 --> 01:06:38,000
它作为一个独立的

1848
01:06:38,000 --> 01:06:39,000
这样一个机构

1849
01:06:39,000 --> 01:06:40,000
它希望能推动

1850
01:06:40,000 --> 01:06:43,000
全球文字编码和字符集的

1851
01:06:43,000 --> 01:06:45,000
这两套标准都统一的

1852
01:06:45,000 --> 01:06:47,000
这样一个目标吧

1853
01:06:47,000 --> 01:06:48,000
应该说

1854
01:06:48,000 --> 01:06:49,000
但是同时

1855
01:06:49,000 --> 01:06:50,000
它又不能去废除

1856
01:06:50,000 --> 01:06:52,000
那些地方性的编码方案

1857
01:06:52,000 --> 01:06:54,000
对

1858
01:06:54,000 --> 01:06:56,000
就只能想办法去都兼容

1859
01:06:56,000 --> 01:06:58,000
所以这样造成一个结果的话

1860
01:06:58,000 --> 01:07:00,000
它就是不可能向后兼容了

1861
01:07:00,000 --> 01:07:03,000
就必须要改 mapping 了

1862
01:07:03,000 --> 01:07:03,000
对

1863
01:07:03,000 --> 01:07:06,000
最先的那个 ASCII 的

1864
01:07:06,000 --> 01:07:08,000
必须是这个什么

1865
01:07:08,000 --> 01:07:09,000
美国人发明的

1866
01:07:09,000 --> 01:07:11,000
美国中心主义

1867
01:07:11,000 --> 01:07:12,000
应该说 Unicode

1868
01:07:12,000 --> 01:07:13,000
它用

1869
01:07:13,000 --> 01:07:15,000
它定义字符集的时候

1870
01:07:15,000 --> 01:07:16,000
它创造了一个

1871
01:07:16,000 --> 01:07:18,000
它称为叫什么

1872
01:07:18,000 --> 01:07:19,000
Unicode

1873
01:07:19,000 --> 01:07:20,000
什么 scalar

1874
01:07:20,000 --> 01:07:21,000
那个叫什么

1875
01:07:21,000 --> 01:07:22,000
scalar value

1876
01:07:22,000 --> 01:07:23,000
是吧

1877
01:07:23,000 --> 01:07:24,000
就是它所谓的

1878
01:07:24,000 --> 01:07:26,000
它这个 Unicode 的标量值的

1879
01:07:26,000 --> 01:07:27,000
这样一个

1880
01:07:27,000 --> 01:07:29,000
非常规范的标记方式

1881
01:07:29,000 --> 01:07:31,000
那么这个值的

1882
01:07:31,000 --> 01:07:33,000
这个数值显然跟 ASCII 和

1883
01:07:33,000 --> 01:07:35,000
我们传统见到的一些编码的数值

1884
01:07:35,000 --> 01:07:37,000
就我们所谓的这个内码数值

1885
01:07:37,000 --> 01:07:38,000
都是不一样的

1886
01:07:38,000 --> 01:07:40,000
它是一套完全独立的方案

1887
01:07:40,000 --> 01:07:42,000
但同时那个 Unicode

1888
01:07:42,000 --> 01:07:43,000
创造了这个

1889
01:07:43,000 --> 01:07:45,000
三个主流的编码方案

1890
01:07:45,000 --> 01:07:46,000
Unicode 的那个 UTF-8

1891
01:07:46,000 --> 01:07:48,000
16 和 32 里面

1892
01:07:48,000 --> 01:07:49,000
16

1893
01:07:49,000 --> 01:07:51,000
应该是兼容 ASCII 的

1894
01:07:51,000 --> 01:07:51,000
但是

1895
01:07:51,000 --> 01:07:52,000
不

1896
01:07:52,000 --> 01:07:54,000
8 是兼容 ASCII 的

1897
01:07:54,000 --> 01:07:55,000
但是那个 16 和 32

1898
01:07:55,000 --> 01:07:56,000
就是完全独立的

1899
01:07:56,000 --> 01:07:58,000
因为字节宽度不一样了

1900
01:07:58,000 --> 01:07:59,000
对

1901
01:07:59,000 --> 01:08:04,000
就是 32 是一个固定宽度的一个编码方案

1902
01:08:04,000 --> 01:08:05,000
那么它的这个

1903
01:08:05,000 --> 01:08:07,000
它是一个比较漂亮的编码方案

1904
01:08:07,000 --> 01:08:09,000
它的这个编码的数值

1905
01:08:09,000 --> 01:08:12,000
跟那个 Unicode 的那个 scalar value

1906
01:08:12,000 --> 01:08:13,000
是一一对应的

1907
01:08:13,000 --> 01:08:15,000
因为它最宽

1908
01:08:15,000 --> 01:08:16,000
有四个字节了

1909
01:08:16,000 --> 01:08:16,000
对

1910
01:08:16,000 --> 01:08:18,000
它是可以完全写出来这个

1911
01:08:18,000 --> 01:08:19,000
那么这个

1912
01:08:19,000 --> 01:08:19,000
16 的话

1913
01:08:19,000 --> 01:08:20,000
就是由那个

1914
01:08:20,000 --> 01:08:24,000
双字节和四字节切换的这样一个模式

1915
01:08:24,000 --> 01:08:25,000
8 的话

1916
01:08:25,000 --> 01:08:27,000
就是一个在单字节模式下

1917
01:08:27,000 --> 01:08:28,000
是兼容 ASCII 的

1918
01:08:28,000 --> 01:08:31,000
你虽然那个四个是很漂亮的

1919
01:08:31,000 --> 01:08:33,000
但是固定四个的话就很浪费

1920
01:08:33,000 --> 01:08:35,000
如果你只存储

1921
01:08:35,000 --> 01:08:36,000
比如说西文的话

1922
01:08:36,000 --> 01:08:38,000
就非常浪费

1923
01:08:38,000 --> 01:08:40,000
所以后来大家就觉得

1924
01:08:40,000 --> 01:08:41,000
比较经济的方式

1925
01:08:41,000 --> 01:08:43,000
还是用变长的方式比较好

1926
01:08:43,000 --> 01:08:45,000
对

1927
01:08:45,000 --> 01:08:46,000
这样呢就

1928
01:08:46,000 --> 01:08:48,000
而且还有一个问题是

1929
01:08:48,000 --> 01:08:52,000
就是那个定常的有解决不了的

1930
01:08:52,000 --> 01:08:53,000
待会会提到

1931
01:08:53,000 --> 01:08:56,000
所以刚才说的区位嘛

1932
01:08:56,000 --> 01:08:57,000
区有 row

1933
01:08:57,000 --> 01:08:59,000
然后位是 cell

1934
01:08:59,000 --> 01:09:01,000
然后后面就开始有个平面了

1935
01:09:01,000 --> 01:09:03,000
就叫 pline

1936
01:09:03,000 --> 01:09:04,000
然后好几个平面呢

1937
01:09:04,000 --> 01:09:06,000
又变成一个 group

1938
01:09:06,000 --> 01:09:07,000
变成一个组

1939
01:09:08,000 --> 01:09:09,000
这是整

1940
01:09:09,000 --> 01:09:11,000
这个是 Unicode

1941
01:09:11,000 --> 01:09:14,000
这是整个 Unicode 它的一个

1942
01:09:14,000 --> 01:09:16,000
它必须要有这么多个座位

1943
01:09:16,000 --> 01:09:18,000
才能把所有的全世界的

1944
01:09:18,000 --> 01:09:20,000
这些字给安排下去

1945
01:09:20,000 --> 01:09:25,000
然后就会有我们常说的一个词

1946
01:09:25,000 --> 01:09:25,000
就是什么

1947
01:09:25,000 --> 01:09:27,000
基本多语言平面吧

1948
01:09:27,000 --> 01:09:28,000
就是 BMP

1949
01:09:28,000 --> 01:09:31,000
Basic Multilingual Plane

1950
01:09:31,000 --> 01:09:34,000
就是所谓的地灵面吧

1951
01:09:34,000 --> 01:09:36,000
这个地灵面应该说就是

1952
01:09:36,000 --> 01:09:38,000
是一个双字节的

1953
01:09:38,000 --> 01:09:41,000
就 16 个 bit 的这样子的

1954
01:09:41,000 --> 01:09:43,000
一个字符集的组合嘛

1955
01:09:43,000 --> 01:09:44,000
这是因为早期 Unicode

1956
01:09:44,000 --> 01:09:46,000
它没有想到会进来那么多的字符

1957
01:09:46,000 --> 01:09:47,000
越加越多

1958
01:09:47,000 --> 01:09:48,000
它就

1959
01:09:48,000 --> 01:09:50,000
就只定了这样一个平面

1960
01:09:50,000 --> 01:09:52,000
对这个平面就是成为了一个

1961
01:09:52,000 --> 01:09:54,000
最基本的叫地灵平面

1962
01:09:54,000 --> 01:09:56,000
或者叫 BMP 这样子

1963
01:09:56,000 --> 01:09:57,000
这说什么来着

1964
01:09:57,000 --> 01:10:02,000
65,536 个码位已经够用了

1965
01:10:02,000 --> 01:10:04,000
对事实证明是不够的

1966
01:10:04,000 --> 01:10:04,000
嗯

1967
01:10:06,000 --> 01:10:08,000
所以这里其实我们还是要把那个

1968
01:10:08,000 --> 01:10:11,000
刚才那个东西再再稍微形象解释一下

1969
01:10:11,000 --> 01:10:13,000
就说我们刚才讲哈

1970
01:10:13,000 --> 01:10:15,000
那个 GB 232 它规定了一个方格嘛

1971
01:10:15,000 --> 01:10:18,000
94 乘以 94 这么一个区间啊

1972
01:10:18,000 --> 01:10:18,000
有些空啊

1973
01:10:18,000 --> 01:10:19,000
没用

1974
01:10:19,000 --> 01:10:21,000
但是它是一个也是一个矩阵嘛

1975
01:10:21,000 --> 01:10:25,000
然后 Unicode 其实这个我们讲的这个 BMP 这个基本面

1976
01:10:25,000 --> 01:10:26,000
其实大致上可以对应为那个

1977
01:10:26,000 --> 01:10:30,000
不过它是一个 256 乘以 256 的一个

1978
01:10:30,000 --> 01:10:33,000
那就是乘出来就是 65,536

1979
01:10:33,000 --> 01:10:36,000
65,536 个座位

1980
01:10:36,000 --> 01:10:37,000
就是这个码位

1981
01:10:38,000 --> 01:10:38,000
对

1982
01:10:38,000 --> 01:10:41,000
但其实这只是为了好看

1983
01:10:41,000 --> 01:10:43,000
它本质上还是一长串就是一个

1984
01:10:43,000 --> 01:10:45,000
就是它如果我应该想象到一个竖轴上

1985
01:10:45,000 --> 01:10:47,000
它应该是一个一维的一个东西

1986
01:10:48,000 --> 01:10:48,000
对

1987
01:10:48,000 --> 01:10:52,000
然后在碗里面填上就各国的文字

1988
01:10:52,000 --> 01:10:52,000
对吧

1989
01:10:52,000 --> 01:10:55,000
这是刚才我们说的这个码位的事情

1990
01:10:58,000 --> 01:11:02,000
然后这个基本平面里面有些什么字是什么规定的

1991
01:11:02,000 --> 01:11:04,000
就有有什么讲究吗

1992
01:11:04,000 --> 01:11:05,000
就是按顺序碗里填呗

1993
01:11:05,000 --> 01:11:05,000
哎呀

1994
01:11:05,000 --> 01:11:08,000
这个这个区区区位就非常多了

1995
01:11:08,000 --> 01:11:10,000
OK 那那比如说我问一个问题啊

1996
01:11:10,000 --> 01:11:11,000
就是说

1997
01:11:11,000 --> 01:11:12,000
呃

1998
01:11:12,000 --> 01:11:17,000
中文字是放就大部分中文字是放在那个基本平面里面的吧

1999
01:11:17,000 --> 01:11:17,000
对

2000
01:11:18,000 --> 01:11:22,000
呃常用的 OK 一级汉字基本都在里面

2001
01:11:22,000 --> 01:11:24,000
那比如说对应刚刚才我们说的那些东西

2002
01:11:24,000 --> 01:11:28,000
就是说不是 GBR 312 里面所有的字符都在基本面里面吧

2003
01:11:28,000 --> 01:11:29,000
嗯

2004
01:11:30,000 --> 01:11:32,000
它有再扩展面的

2005
01:11:32,000 --> 01:11:32,000
对

2006
01:11:32,000 --> 01:11:35,000
那就是在后面的其他的面上的确是有的

2007
01:11:35,000 --> 01:11:36,000
OK

2008
01:11:36,000 --> 01:11:38,000
OK 明白

2009
01:11:38,000 --> 01:11:40,000
那那再问一个问题啊

2010
01:11:40,000 --> 01:11:46,000
就是说在这个 unicode 的基本面里面的那个码位的那个中文类就是就基本汉字

2011
01:11:46,000 --> 01:11:46,000
这个 unicode 里面已经有一个形式了啊

2012
01:11:46,000 --> 01:11:46,000
这个 unicode 里面已经有一个形式了啊

2013
01:11:46,000 --> 01:11:46,000
这个 unicode 里面已经有一个形式了啊

2014
01:11:46,000 --> 01:11:46,000
这个 unicode 里面已经有一个形式了啊

2015
01:11:46,000 --> 01:11:46,000
这个 unicode 里面已经有一个形式了啊

2016
01:11:46,000 --> 01:11:48,000
这个 unicode 里面已经有一个新的称呼

2017
01:11:48,000 --> 01:11:51,000
就是 CJK 统一表意文字了

2018
01:11:51,000 --> 01:11:52,000
这不仅是中文了

2019
01:11:52,000 --> 01:11:55,000
就是中日汉就大家啊

2020
01:11:55,000 --> 01:11:59,000
全球大一统的字型一样的文字全都会塞在里面

2021
01:11:59,000 --> 01:12:03,000
OK 这里这里就说要解释一下为什么会有这么一个事儿

2022
01:12:03,000 --> 01:12:05,000
就是它的逻辑是什么

2023
01:12:05,000 --> 01:12:06,000
就是啊

2024
01:12:06,000 --> 01:12:12,000
它的逻辑就是 unicode 是针对这个 script 这种东西来划分它的 block 的

2025
01:12:12,000 --> 01:12:13,000
我们刚刚说了

2026
01:12:13,000 --> 01:12:16,000
就是说这个日语日语

2027
01:12:16,000 --> 01:12:16,000
或者说日文

2028
01:12:16,000 --> 01:12:18,000
它作为一个书写系统

2029
01:12:18,000 --> 01:12:19,000
其实它用到了四种文字

2030
01:12:19,000 --> 01:12:20,000
就是包括拉丁

2031
01:12:20,000 --> 01:12:21,000
平假名

2032
01:12:21,000 --> 01:12:23,000
片假名和汉字

2033
01:12:23,000 --> 01:12:26,000
那么 unicode 认为你日本用的汉字

2034
01:12:26,000 --> 01:12:27,000
韩国用的汉字

2035
01:12:27,000 --> 01:12:27,000
中国用的汉字

2036
01:12:27,000 --> 01:12:28,000
以及越南用的汉字

2037
01:12:28,000 --> 01:12:29,000
它们都是汉字

2038
01:12:29,000 --> 01:12:31,000
这一种 script

2039
01:12:31,000 --> 01:12:33,000
你们都应该统一起来

2040
01:12:33,000 --> 01:12:34,000
既然明明是一个字

2041
01:12:34,000 --> 01:12:36,000
而且写法基本上也一样

2042
01:12:36,000 --> 01:12:37,000
那为什么不能就用一个马位

2043
01:12:37,000 --> 01:12:39,000
比如说汉字一二三

2044
01:12:39,000 --> 01:12:41,000
各个地区大家都长得都一样

2045
01:12:41,000 --> 01:12:44,000
就没有必要用三个马位分别的马位嘛

2046
01:12:44,000 --> 01:12:45,000
所以呢

2047
01:12:45,000 --> 01:12:45,000
大家呢

2048
01:12:45,000 --> 01:12:46,000
比如说汉字的一

2049
01:12:46,000 --> 01:12:48,000
那大家就统一起来吧

2050
01:12:48,000 --> 01:12:48,000
嗯

2051
01:12:48,000 --> 01:12:53,000
那所以这里就牵涉到一个所谓的这个汉字的追根溯源的问题了嘛

2052
01:12:53,000 --> 01:12:54,000
就是说

2053
01:12:54,000 --> 01:12:55,000
呃

2054
01:12:55,000 --> 01:12:56,000
因为日文和韩文里面的汉字

2055
01:12:56,000 --> 01:12:59,000
它的来源是来自于中文的那个字嘛

2056
01:12:59,000 --> 01:13:00,000
那就说

2057
01:13:00,000 --> 01:13:01,000
对呃

2058
01:13:01,000 --> 01:13:03,000
就要问日本人民说

2059
01:13:03,000 --> 01:13:03,000
哎

2060
01:13:03,000 --> 01:13:06,000
你们觉得你们这个汉字是对应到中国的哪个啊

2061
01:13:06,000 --> 01:13:07,000
还有问韩国人民说

2062
01:13:07,000 --> 01:13:07,000
哎

2063
01:13:07,000 --> 01:13:09,000
你们认为你们这个汉字对应到中国的哪一个

2064
01:13:09,000 --> 01:13:11,000
那肯定

2065
01:13:11,000 --> 01:13:12,000
肯定会出现

2066
01:13:12,000 --> 01:13:13,000
对应到中文

2067
01:13:13,000 --> 01:13:13,000
对对对

2068
01:13:13,000 --> 01:13:15,000
就是那肯定会出现一种情况

2069
01:13:15,000 --> 01:13:16,000
就是说

2070
01:13:16,000 --> 01:13:17,000
他们觉得

2071
01:13:17,000 --> 01:13:20,000
就是韩国人觉得我这个字应该对应到中文那个字

2072
01:13:20,000 --> 01:13:21,000
然后日

2073
01:13:21,000 --> 01:13:24,000
日本人觉得这个字我应该对应到中文另外一个字

2074
01:13:24,000 --> 01:13:24,000
对对吧

2075
01:13:24,000 --> 01:13:25,000
非常混乱

2076
01:13:25,000 --> 01:13:26,000
嗯

2077
01:13:26,000 --> 01:13:27,000
对

2078
01:13:27,000 --> 01:13:27,000
OK

2079
01:13:27,000 --> 01:13:28,000
这个怎么解决了

2080
01:13:28,000 --> 01:13:29,000
但是

2081
01:13:29,000 --> 01:13:29,000
呃

2082
01:13:29,000 --> 01:13:31,000
首先一个原则就是呃

2083
01:13:31,000 --> 01:13:32,000
在做 unicode 的时候

2084
01:13:32,000 --> 01:13:35,000
大家各个国家先把各国的那个标准拿出来嘛

2085
01:13:35,000 --> 01:13:37,000
日本又能拿出他的 G 4

2086
01:13:37,000 --> 01:13:39,000
韩国拿出他的 KS

2087
01:13:39,000 --> 01:13:40,000
呃

2088
01:13:40,000 --> 01:13:41,000
咱们中国拿出的是 GB

2089
01:13:41,000 --> 01:13:42,000
还有台呃

2090
01:13:42,000 --> 01:13:45,000
台湾地区还有他们拿出他的大五嘛

2091
01:13:45,000 --> 01:13:46,000
然后呢

2092
01:13:46,000 --> 01:13:46,000
呃

2093
01:13:46,000 --> 01:13:46,000
呃

2094
01:13:46,000 --> 01:13:48,000
,中国拿的是 GB 哪个?

2095
01:13:48,000 --> 01:13:50,000
要么 030 还是 GBK 还是 GB 2312

2096
01:13:50,000 --> 01:13:50,000
呃

2097
01:13:50,000 --> 01:13:54,000
不同的历史阶段应该拿出的是不同的文件

2098
01:13:54,000 --> 01:13:54,000
对

2099
01:13:54,000 --> 01:13:54,000
好吧

2100
01:13:54,000 --> 01:13:56,000
但但中文的情况比较简单

2101
01:13:56,000 --> 01:13:58,000
因为至少他我们是相互兼容的嘛

2102
01:13:58,000 --> 01:13:58,000
嗯

2103
01:13:58,000 --> 01:13:59,000
对对

2104
01:13:59,000 --> 01:14:02,000
就还不至于说乱掉这种情况

2105
01:14:02,000 --> 01:14:02,000
对

2106
01:14:02,000 --> 01:14:04,000
然后呃

2107
01:14:04,000 --> 01:14:05,000
先拿出来的时候呢

2108
01:14:05,000 --> 01:14:06,000
就是各个国家拿出来

2109
01:14:06,000 --> 01:14:08,000
他如果他的一个首先一个原则就是说

2110
01:14:08,000 --> 01:14:10,000
如果你在这些字哈

2111
01:14:10,000 --> 01:14:13,000
原来你在这个规

2112
01:14:13,000 --> 01:14:14,000
比如说在 GB 里面

2113
01:14:14,000 --> 01:14:15,000
他本来就是两个字的话

2114
01:14:15,000 --> 01:14:16,000
那

2115
01:14:16,000 --> 01:14:19,000
我放到这个 unicode 里面也是两个字

2116
01:14:19,000 --> 01:14:21,000
就是原规则分开的话

2117
01:14:21,000 --> 01:14:22,000
我现在也分开

2118
01:14:22,000 --> 01:14:23,000
我不会给他合在一起

2119
01:14:23,000 --> 01:14:24,000
嗯

2120
01:14:24,000 --> 01:14:28,000
这因为他要保证就是所谓的相互兼容嘛

2121
01:14:28,000 --> 01:14:29,000
但这里有个问题哈

2122
01:14:29,000 --> 01:14:36,000
就是说因为就我理解就是日文的汉字和这个朝这个韩文的汉字里面应该都是对应的繁体字吧

2123
01:14:36,000 --> 01:14:37,000
不一定

2124
01:14:37,000 --> 01:14:38,000
不一定非常复杂

2125
01:14:38,000 --> 01:14:40,000
也一定

2126
01:14:40,000 --> 01:14:41,000
对 OK

2127
01:14:41,000 --> 01:14:43,000
因为日文有日文汉字

2128
01:14:43,000 --> 01:14:44,000
然后刚才说吧

2129
01:14:44,000 --> 01:14:45,000
各个国家的简化都不一样

2130
01:14:45,000 --> 01:14:46,000
比如说新加坡吧

2131
01:14:46,000 --> 01:14:48,000
新加坡他有新加坡的简化汉字

2132
01:14:48,000 --> 01:14:50,000
然后日文有日文的简化汉字

2133
01:14:50,000 --> 01:14:51,000
日文还有简化汉字

2134
01:14:51,000 --> 01:14:52,000
对

2135
01:14:52,000 --> 01:14:53,000
对

2136
01:14:53,000 --> 01:14:53,000
嗯

2137
01:14:53,000 --> 01:14:54,000
有啊

2138
01:14:54,000 --> 01:14:57,000
而且还有经常会简化以后张冠李代的字

2139
01:14:57,000 --> 01:14:58,000
比如说

2140
01:14:58,000 --> 01:14:59,000
呃

2141
01:14:59,000 --> 01:15:00,000
文艺的艺

2142
01:15:00,000 --> 01:15:05,000
在日文的这个文艺的艺的简化就是草字头底下个白云的云

2143
01:15:05,000 --> 01:15:07,000
然后这个字在中文里面是有的

2144
01:15:07,000 --> 01:15:09,000
中文里面是另外一个字

2145
01:15:09,000 --> 01:15:10,000
为什么追这种情况呢

2146
01:15:10,000 --> 01:15:16,000
就因为你国没有权利去管理我去约束我国怎么简化字

2147
01:15:16,000 --> 01:15:16,000
对吧

2148
01:15:16,000 --> 01:15:18,000
不不不我我持这个意思就是说

2149
01:15:18,000 --> 01:15:20,000
就是日文简化这个意义

2150
01:15:20,000 --> 01:15:22,000
意志简化成云的时候

2151
01:15:22,000 --> 01:15:26,000
他没有说去看一下别人怎么做平行发展

2152
01:15:26,000 --> 01:15:27,000
他为什么要去看别人怎么做了

2153
01:15:27,000 --> 01:15:27,000
啊

2154
01:15:27,000 --> 01:15:30,000
就我国就在日本里面

2155
01:15:30,000 --> 01:15:32,000
在日本人的汉字里面没有云这个字嘛

2156
01:15:32,000 --> 01:15:34,000
就没有上草下云这个字啊

2157
01:15:34,000 --> 01:15:35,000
那他为什么不能用呢

2158
01:15:35,000 --> 01:15:36,000
所以有吗

2159
01:15:36,000 --> 01:15:36,000
就说吧

2160
01:15:36,000 --> 01:15:38,000
如果人的历史可以改写的话

2161
01:15:38,000 --> 01:15:41,000
当年如果大家简化汉字都商量一下就好了

2162
01:15:41,000 --> 01:15:42,000
不是如果对

2163
01:15:42,000 --> 01:15:46,000
如果我们黄汉早早一点统一世界的话就没有指数了

2164
01:15:46,000 --> 01:15:49,000
哈哈哈

2165
01:15:49,000 --> 01:15:51,000
或者对从从这个今日的角度讲

2166
01:15:51,000 --> 01:15:55,000
如果当年大日本建立什么东亚共荣圈的也没有这个

2167
01:15:55,000 --> 01:15:56,000
哈哈哈

2168
01:15:56,000 --> 01:15:58,000
就解决一切问题都不成问题了

2169
01:15:58,000 --> 01:16:04,000
对一切一切汉一切技术问题其实归根结底都是政治问题

2170
01:16:04,000 --> 01:16:05,000
这老师所以呢

2171
01:16:05,000 --> 01:16:08,000
最初期比如说那出现这种情况怎么解决呢

2172
01:16:08,000 --> 01:16:11,000
就是比如说刚才说文艺的这个意志的时候到 unicode 里面怎么办

2173
01:16:11,000 --> 01:16:13,000
就只能各给一个码点吗

2174
01:16:13,000 --> 01:16:17,000
但是嗯现在事实上呢是只有一个码点

2175
01:16:17,000 --> 01:16:20,000
然后这个码点呢是草草的头一个云

2176
01:16:20,000 --> 01:16:21,000
然后呢

2177
01:16:21,000 --> 01:16:22,000
日本人用这个字

2178
01:16:22,000 --> 01:16:25,000
把它当成艺术的意义在用一字

2179
01:16:25,000 --> 01:16:28,000
中国人用这个字我拿出当云云中生的云

2180
01:16:28,000 --> 01:16:31,000
对因为只是只是编码

2181
01:16:31,000 --> 01:16:32,000
然后用来显示嘛

2182
01:16:32,000 --> 01:16:34,000
自至于他是什么语义

2183
01:16:34,000 --> 01:16:35,000
这个是没有关系的吗

2184
01:16:37,000 --> 01:16:40,000
哦 OK 这相当于一种各个啊

2185
01:16:40,000 --> 01:16:43,000
你这只规定只规定形状

2186
01:16:43,000 --> 01:16:43,000
不规定一种是什么意思嘛

2187
01:16:43,000 --> 01:16:44,000
对啊

2188
01:16:44,000 --> 01:16:47,000
因为本来本来你这个收的那个字符集的话

2189
01:16:47,000 --> 01:16:51,000
只是给每个字编一个座位而已嘛

2190
01:16:52,000 --> 01:16:52,000
嗯对对

2191
01:16:52,000 --> 01:16:57,000
他并不需要赋予对现在首先他们在 cjk 统一汉子

2192
01:16:57,000 --> 01:17:00,000
只是大家各个各自把各国选手拉出来嘛

2193
01:17:00,000 --> 01:17:01,000
对吧嗯 OK

2194
01:17:01,000 --> 01:17:03,000
所以最初的统一汉子呢

2195
01:17:03,000 --> 01:17:06,000
有 209 千嗯 941 个字

2196
01:17:06,000 --> 01:17:13,000
然后呢中国国标当时就是拉出了那个 2312 和 12345 嗯

2197
01:17:13,000 --> 01:17:18,000
然后台湾的台湾有他们的 cns 啊

2198
01:17:18,000 --> 01:17:22,000
然后日本呢日本就是祭祀的那个 0208

2199
01:17:22,000 --> 01:17:26,000
嗯大概也是有 11000 多个字

2200
01:17:26,000 --> 01:17:30,000
嗯韩国的话韩国特别坑汉子不是有多音字吗

2201
01:17:30,000 --> 01:17:35,000
韩国的他们的 ks 的那个编码里面呢

2202
01:17:35,000 --> 01:17:39,000
他只是因为大家知道韩文他是发音吗

2203
01:17:39,000 --> 01:17:40,000
他发音会对一个字

2204
01:17:40,000 --> 01:17:43,000
那多导致于多个发音

2205
01:17:43,000 --> 01:17:46,000
都对同一个汉字啊

2206
01:17:46,000 --> 01:17:46,000
那他们怎么解决

2207
01:17:46,000 --> 01:17:47,000
他们没有解决这个问题

2208
01:17:47,000 --> 01:17:50,000
没有他们没有解决这个问题

2209
01:17:50,000 --> 01:17:53,000
在韩文的他们 ks 的那个编码里面

2210
01:17:53,000 --> 01:17:56,000
汉字有重复就是啊

2211
01:17:56,000 --> 01:17:57,000
他是取音的

2212
01:17:57,000 --> 01:17:59,000
他是取形和音

2213
01:17:59,000 --> 01:18:00,000
就是同一个形

2214
01:18:00,000 --> 01:18:01,000
但不同读音的时候

2215
01:18:01,000 --> 01:18:02,000
比方说那个曲吧

2216
01:18:02,000 --> 01:18:05,000
歌曲和这个呃曲线

2217
01:18:05,000 --> 01:18:07,000
他会还会把他有两个对

2218
01:18:07,000 --> 01:18:11,000
所以在韩国的比如说 ksc 的那个 5601 里面

2219
01:18:11,000 --> 01:18:13,000
他有 4888 个字

2220
01:18:13,000 --> 01:18:13,000
但是呢

2221
01:18:13,000 --> 01:18:16,000
其中呢有 268 个字是重复的

2222
01:18:16,000 --> 01:18:18,000
然后转到有你这个 unicode cjk 的时候

2223
01:18:18,000 --> 01:18:20,000
都我们都给他合一了吗

2224
01:18:20,000 --> 01:18:21,000
没有合一

2225
01:18:21,000 --> 01:18:25,000
因为要保留就是说还要向后建议原则

2226
01:18:25,000 --> 01:18:28,000
刚才说了我们说的第一个原则就是自离分

2227
01:18:28,000 --> 01:18:31,000
有呃自缘分离原来原来是分的话

2228
01:18:31,000 --> 01:18:32,000
我必须要分

2229
01:18:32,000 --> 01:18:35,000
要不然的话你就没办法向后进入我的吗

2230
01:18:35,000 --> 01:18:36,000
呃就所谓的向后进入啊

2231
01:18:36,000 --> 01:18:37,000
ok

2232
01:18:37,000 --> 01:18:39,000
ok ok

2233
01:18:39,000 --> 01:18:43,000
所以所以就说 cjk 这个这个 unification 其实是说

2234
01:18:43,000 --> 01:18:46,000
韩国的汉字和日本的汉字和韩国的汉子

2235
01:18:46,000 --> 01:18:48,000
如果有如果如果有长得差不多的就混成一个

2236
01:18:48,000 --> 01:18:50,000
但是如果他们本身里面是有两个的

2237
01:18:50,000 --> 01:18:52,000
我们就不合了

2238
01:18:52,000 --> 01:18:52,000
嗯

2239
01:18:52,000 --> 01:18:53,000
所以呢

2240
01:18:53,000 --> 01:18:57,000
导致于这个和和分的这个规则特别的混乱

2241
01:18:57,000 --> 01:19:00,000
有的该和的不合该分的不分之类的

2242
01:19:01,000 --> 01:19:04,000
所以其实为了就为了省那么那么小几个码点

2243
01:19:04,000 --> 01:19:06,000
我不如说直接复制过来

2244
01:19:06,000 --> 01:19:07,000
就画区吗

2245
01:19:07,000 --> 01:19:11,000
跟那个 ip 地址一样说这一块你们中国人拿去啊够用了吧

2246
01:19:11,000 --> 01:19:12,000
不用再生气了

2247
01:19:12,000 --> 01:19:13,000
对啊随便你怎么样

2248
01:19:13,000 --> 01:19:17,000
然后这这一块韩国人你们拿去随便你们怎么弄

2249
01:19:17,000 --> 01:19:18,000
然后这块日本人拿去你们随便怎么用

2250
01:19:18,000 --> 01:19:19,000
对吧

2251
01:19:19,000 --> 01:19:20,000
这不会更更简单一点

2252
01:19:20,000 --> 01:19:23,000
但是这样就背离了 unicode 想要 unify 的初衷了

2253
01:19:23,000 --> 01:19:25,000
因为运口的一开始的一个

2254
01:19:26,000 --> 01:19:30,000
目的不就是让所有的字型如果相似的话

2255
01:19:30,000 --> 01:19:34,000
就是就他们的意思就是如果这个世界上有这样一个符号

2256
01:19:34,000 --> 01:19:34,000
嗯

2257
01:19:34,000 --> 01:19:36,000
他在哪里的写法都是

2258
01:19:36,000 --> 01:19:38,000
都基本上是同一个事物

2259
01:19:38,000 --> 01:19:40,000
比如说白云或者是白云

2260
01:19:40,000 --> 01:19:43,000
那个可以用那个 normalization 来解决吗

2261
01:19:43,000 --> 01:19:47,000
嗯比较复杂

2262
01:19:47,000 --> 01:19:53,000
然后因为然后这可是 normalization 最终的结果不就还是会像现在一样

2263
01:19:53,000 --> 01:19:57,000
不就是但是是一个一个是可选一个是强加的问题吗

2264
01:19:57,000 --> 01:19:57,000
对吧

2265
01:19:57,000 --> 01:20:02,000
因为 unification 是你在制定规范的时候要要选就给就申请 ip 地址的时候

2266
01:20:02,000 --> 01:20:06,000
申请这个马位的时候就要先选好说我们这个共用一个马位吗

2267
01:20:06,000 --> 01:20:08,000
但是就说你又要保持向后兼容的话

2268
01:20:08,000 --> 01:20:11,000
其实做这个事情是平白无故增加了复杂度吗

2269
01:20:11,000 --> 01:20:12,000
那如果你说 normalization 做为一个实用的方式的话呢

2270
01:20:12,000 --> 01:20:13,000
那如果你说 normalization 做为一个实用的方式的话呢

2271
01:20:13,000 --> 01:20:13,000
那如果你说 normalization 做为一个实用的方式的话呢

2272
01:20:13,000 --> 01:20:15,000
就是虽然我可以向后兼容

2273
01:20:15,000 --> 01:20:19,000
但是为了说得出来大家都还能够一个可比的话

2274
01:20:19,000 --> 01:20:20,000
我们再用一个 normalization 的规则

2275
01:20:20,000 --> 01:20:23,000
把它换成一个统一的表达不就好了吗

2276
01:20:27,000 --> 01:20:28,000
好啊你可以这么说

2277
01:20:28,000 --> 01:20:32,000
但我觉得 unicode 的初衷可能是

2278
01:20:32,000 --> 01:20:38,000
在 unicode 制定的理念里面兼容既有编码

2279
01:20:38,000 --> 01:20:39,000
并不是占第一位

2280
01:20:39,000 --> 01:20:40,000
就是

2281
01:20:40,000 --> 01:20:43,000
人家的理想是就是从

2282
01:20:43,000 --> 01:20:43,000
英文和的理想是从

2283
01:20:43,000 --> 01:20:43,000
英文和的理想是从

2284
01:20:43,000 --> 01:20:45,000
之后再无再无别的编码

2285
01:20:45,000 --> 01:20:46,000
对吧

2286
01:20:46,000 --> 01:20:49,000
那如果你说你一定要保留原有的

2287
01:20:49,000 --> 01:20:51,000
那个东西那相当于

2288
01:20:51,000 --> 01:20:53,000
出中就没有了

2289
01:20:53,000 --> 01:20:55,000
他的主要诉求

2290
01:20:55,000 --> 01:20:57,000
其实一开始的确就是为了

2291
01:20:57,000 --> 01:20:59,000
大幅度减少这个收入的汉字的字数

2292
01:20:59,000 --> 01:21:00,000
然后呢

2293
01:21:00,000 --> 01:21:03,000
然后就尽量去尊重各地的习惯自行

2294
01:21:03,000 --> 01:21:05,000
那就是你原来是分离的

2295
01:21:05,000 --> 01:21:06,000
你就分离嘛

2296
01:21:06,000 --> 01:21:07,000
然后能合的就合在一起嘛

2297
01:21:07,000 --> 01:21:11,000
对就还是统一为主

2298
01:21:11,000 --> 01:21:12,000
对对是比较灵活

2299
01:21:12,000 --> 01:21:14,000
但是就因为这个灵活的话

2300
01:21:14,000 --> 01:21:16,000
灵活就是复杂度

2301
01:21:16,000 --> 01:21:19,000
所以他说他的编码是针对字

2302
01:21:19,000 --> 01:21:21,000
而不是对字型

2303
01:21:21,000 --> 01:21:23,000
就是对 character 进行编码

2304
01:21:23,000 --> 01:21:24,000
而不是对 griff

2305
01:21:24,000 --> 01:21:26,000
明白明白

2306
01:21:26,000 --> 01:21:28,000
那其实也不太对

2307
01:21:28,000 --> 01:21:31,000
刚才你说那个文艺的意志就不符合这个逻辑了

2308
01:21:31,000 --> 01:21:33,000
但是呢

2309
01:21:33,000 --> 01:21:35,000
他们就是对字啊

2310
01:21:35,000 --> 01:21:36,000
所以就很复杂的确

2311
01:21:36,000 --> 01:21:39,000
像合起来比如说

2312
01:21:39,000 --> 01:21:40,000
那个户口的户

2313
01:21:40,000 --> 01:21:42,000
中国大陆的话户的第一

2314
01:21:42,000 --> 01:21:44,000
就是一个字形

2315
01:21:44,000 --> 01:21:45,000
然后呢

2316
01:21:45,000 --> 01:21:46,000
台湾是一撇

2317
01:21:46,000 --> 01:21:47,000
是方向不一样吗

2318
01:21:47,000 --> 01:21:49,000
但是这个字呢

2319
01:21:49,000 --> 01:21:50,000
在 unicode 的话

2320
01:21:50,000 --> 01:21:52,000
我们被当时就是认为是一个字嘛

2321
01:21:52,000 --> 01:21:53,000
所以呢

2322
01:21:53,000 --> 01:21:55,000
就只给他一个座位

2323
01:21:55,000 --> 01:21:56,000
就导致于就是各个地区

2324
01:21:56,000 --> 01:21:58,000
如果想要他们各自的字形的话

2325
01:21:58,000 --> 01:22:00,000
就显示不出来

2326
01:22:00,000 --> 01:22:05,000
就不能通过这个就马位来展现了嘛

2327
01:22:05,000 --> 01:22:07,000
就只能通过字体个位

2328
01:22:07,000 --> 01:22:08,000
对

2329
01:22:08,000 --> 01:22:08,000
对

2330
01:22:08,000 --> 01:22:10,000
所以这个就是一个字形

2331
01:22:10,000 --> 01:22:11,000
这个字形是一个字形

2332
01:22:11,000 --> 01:22:14,000
通过字体个位对实现了

2333
01:22:14,000 --> 01:22:17,000
所以所以就说这不是字的区别

2334
01:22:17,000 --> 01:22:18,000
而是字形的区别

2335
01:22:18,000 --> 01:22:20,000
那等一下我有一个问题啊

2336
01:22:20,000 --> 01:22:21,000
如果是这样的话

2337
01:22:21,000 --> 01:22:25,000
我们做那种就是多语言文本的时候怎么办

2338
01:22:25,000 --> 01:22:30,000
所以非常一靠你所用的那个字库文件

2339
01:22:30,000 --> 01:22:32,000
那字库文件不可能啊

2340
01:22:32,000 --> 01:22:34,000
就他会有这种

2341
01:22:34,000 --> 01:22:36,000
就是

2342
01:22:36,000 --> 01:22:37,000
对应一个满位他有多个字

2343
01:22:37,000 --> 01:22:38,000
对

2344
01:22:38,000 --> 01:22:40,000
比如说

2345
01:22:40,000 --> 01:22:41,000
source handsense

2346
01:22:41,000 --> 01:22:43,000
适圆黑体

2347
01:22:43,000 --> 01:22:45,000
应该说他是唯一的一个

2348
01:22:45,000 --> 01:22:49,000
她是现存世上唯一一个能找到

2349
01:22:49,000 --> 01:22:53,000
试图去解决刚才 real 提出这个问题的这样一个字体工程项目

2350
01:22:53,000 --> 01:22:54,000
对

2351
01:22:54,000 --> 01:22:55,000
那就如果说

2352
01:22:55,000 --> 01:22:57,000
举个很简单例子

2353
01:22:57,000 --> 01:22:58,000
假设我要做这个 CGK

2354
01:22:58,000 --> 01:23:00,000
不就是你们我们假设自谈

2355
01:23:00,000 --> 01:23:02,000
字唱

2356
01:23:02,000 --> 01:23:03,000
要出一个节目

2357
01:23:03,000 --> 01:23:06,000
然后出一个这种印刷品来说这几个字的区别

2358
01:23:06,000 --> 01:23:08,000
然后你们用 Unico 编码的时候要写出这个字

2359
01:23:08,000 --> 01:23:09,000
你能

2360
01:23:09,000 --> 01:23:10,000
采取的方法就只有两个

2361
01:23:10,000 --> 01:23:10,000
要么找到这个字

2362
01:23:10,000 --> 01:23:11,000
装手

2363
01:23:11,000 --> 01:23:14,000
那种带有 CJK 不同字型

2364
01:23:14,000 --> 01:23:15,000
Variation 的这种字体文件

2365
01:23:15,000 --> 01:23:16,000
一个可以搞定

2366
01:23:16,000 --> 01:23:20,000
然后你在编辑器里面去选择它

2367
01:23:20,000 --> 01:23:21,000
另外一个就是说

2368
01:23:21,000 --> 01:23:23,000
选三个不同的字体

2369
01:23:23,000 --> 01:23:24,000
然后手工的去调那个字体

2370
01:23:24,000 --> 01:23:26,000
那个字应该用哪个字体

2371
01:23:26,000 --> 01:23:27,000
对的

2372
01:23:27,000 --> 01:23:31,000
这种时候可能直接写 markdown

2373
01:23:31,000 --> 01:23:32,000
会比较简单

2374
01:23:32,000 --> 01:23:35,000
你要么在 unicode 层面

2375
01:23:35,000 --> 01:23:37,000
确保你写的每一个字是正确的

2376
01:23:37,000 --> 01:23:40,000
否则就只能用 markdown 来辅助

2377
01:23:40,000 --> 01:23:42,000
什么 markdown

2378
01:23:42,000 --> 01:23:45,000
其实就是 HTML

2379
01:23:45,000 --> 01:23:46,000
你在那个时候标出说

2380
01:23:46,000 --> 01:23:48,000
这一段文字是日文的

2381
01:23:48,000 --> 01:23:48,000
对

2382
01:23:48,000 --> 01:23:52,000
到时候再在 sense 里面指定说

2383
01:23:52,000 --> 01:23:53,000
这一段用日文字体

2384
01:23:53,000 --> 01:23:55,000
就不能直接用一个很简单的那种

2385
01:23:55,000 --> 01:23:58,000
你得人为加入一些 metadata 才行

2386
01:23:58,000 --> 01:23:58,000
对

2387
01:23:58,000 --> 01:24:00,000
所以其实还是刚才那个问题

2388
01:24:00,000 --> 01:24:02,000
刚才 unicode 的 unification

2389
01:24:02,000 --> 01:24:03,000
它是带来的后果

2390
01:24:03,000 --> 01:24:05,000
就是在混排文字的时候

2391
01:24:05,000 --> 01:24:06,000
出现那种不可指定

2392
01:24:06,000 --> 01:24:08,000
就是不能很方便的指定的情况下

2393
01:24:08,000 --> 01:24:09,000
因为理想情况下

2394
01:24:09,000 --> 01:24:10,000
如果这三个

2395
01:24:10,000 --> 01:24:10,000
在那一段文字体中

2396
01:24:10,000 --> 01:24:11,000
那个互字的

2397
01:24:11,000 --> 01:24:12,000
那个三个国家的不同写法

2398
01:24:12,000 --> 01:24:13,000
是没有统一的话

2399
01:24:13,000 --> 01:24:15,000
其实你是很可以很方便的

2400
01:24:15,000 --> 01:24:17,000
让系统自动去 fallback

2401
01:24:17,000 --> 01:24:19,000
到对应国家的那个字上面去

2402
01:24:19,000 --> 01:24:20,000
但是话说回来

2403
01:24:20,000 --> 01:24:22,000
如果这是混排系统的话

2404
01:24:22,000 --> 01:24:23,000
你别说是机器了

2405
01:24:23,000 --> 01:24:24,000
连人都看不出来

2406
01:24:24,000 --> 01:24:25,000
比如说中国两个字

2407
01:24:25,000 --> 01:24:28,000
中国大陆的写法和日本的写法

2408
01:24:28,000 --> 01:24:30,000
是完全一模一样的

2409
01:24:30,000 --> 01:24:31,000
所以如果你单写中国两个字

2410
01:24:31,000 --> 01:24:33,000
你不知道这是日文还是中文

2411
01:24:33,000 --> 01:24:34,000
而且你不知道

2412
01:24:34,000 --> 01:24:35,000
它指的是中国

2413
01:24:35,000 --> 01:24:35,000
还是日本的中国

2414
01:24:35,000 --> 01:24:36,000
意思也不一样

2415
01:24:36,000 --> 01:24:37,000
对

2416
01:24:37,000 --> 01:24:38,000
因为日本也有中国地区

2417
01:24:38,000 --> 01:24:39,000
什么意思

2418
01:24:39,000 --> 01:24:40,000
对

2419
01:24:40,000 --> 01:24:42,000
日本有一个地区就叫中国

2420
01:24:42,000 --> 01:24:45,000
所以这就是为什么

2421
01:24:45,000 --> 01:24:46,000
在历史上

2422
01:24:46,000 --> 01:24:47,000
日本管中国

2423
01:24:47,000 --> 01:24:49,000
他们喜欢叫支那

2424
01:24:49,000 --> 01:24:51,000
就是因为如果说中国的话

2425
01:24:51,000 --> 01:24:51,000
对

2426
01:24:51,000 --> 01:24:54,000
他们就指的是日本的中国地区

2427
01:24:54,000 --> 01:24:55,000
就是广岛的那附近

2428
01:24:55,000 --> 01:24:56,000
那叫日本

2429
01:24:56,000 --> 01:24:58,000
那是日本的中国地区

2430
01:24:58,000 --> 01:24:58,000
对

2431
01:24:58,000 --> 01:24:59,000
所以他们选择了这个

2432
01:24:59,000 --> 01:25:01,000
法语词的法语

2433
01:25:01,000 --> 01:25:01,000
是吧

2434
01:25:01,000 --> 01:25:02,000
看起来比较洋气

2435
01:25:02,000 --> 01:25:05,000
支那不是法语词

2436
01:25:05,000 --> 01:25:07,000
应该是吧

2437
01:25:07,000 --> 01:25:08,000
它应该是那个 China 的

2438
01:25:08,000 --> 01:25:10,000
支那是从 C 呢

2439
01:25:10,000 --> 01:25:10,000
对

2440
01:25:10,000 --> 01:25:12,000
就是印度

2441
01:25:12,000 --> 01:25:12,000
就是

2442
01:25:12,000 --> 01:25:15,000
是印度那边过来的是吧

2443
01:25:15,000 --> 01:25:16,000
印度

2444
01:25:16,000 --> 01:25:17,000
就是那个什么 C 呢

2445
01:25:17,000 --> 01:25:18,000
Sino

2446
01:25:18,000 --> 01:25:18,000
对啊

2447
01:25:18,000 --> 01:25:19,000
现在英文也是我们

2448
01:25:19,000 --> 01:25:20,000
Sino 派

2449
01:25:20,000 --> 01:25:21,000
就是同源嘛

2450
01:25:21,000 --> 01:25:21,000
对啊

2451
01:25:21,000 --> 01:25:23,000
就像什么 Sino

2452
01:25:23,000 --> 01:25:25,000
Sino American Relationship

2453
01:25:25,000 --> 01:25:26,000
对吧

2454
01:25:26,000 --> 01:25:26,000
对对对

2455
01:25:26,000 --> 01:25:27,000
你就是这个词源

2456
01:25:27,000 --> 01:25:28,000
有时候就挺

2457
01:25:28,000 --> 01:25:30,000
就有时候看那个说

2458
01:25:30,000 --> 01:25:31,000
说支那是一个什么

2459
01:25:31,000 --> 01:25:32,000
歧视性的称呼

2460
01:25:32,000 --> 01:25:33,000
我就觉得挺扯的

2461
01:25:33,000 --> 01:25:34,000
你自己翻译

2462
01:25:34,000 --> 01:25:34,000
那时候你不写的

2463
01:25:34,000 --> 01:25:35,000
什么 Sino 什么什么

2464
01:25:35,000 --> 01:25:37,000
所以其实支那

2465
01:25:37,000 --> 01:25:38,000
这是一个历史上

2466
01:25:38,000 --> 01:25:40,000
就很常用的一个词字

2467
01:25:40,000 --> 01:25:40,000
对吧

2468
01:25:40,000 --> 01:25:40,000
对

2469
01:25:40,000 --> 01:25:41,000
只是到

2470
01:25:41,000 --> 01:25:42,000
因为到后面打仗了以后

2471
01:25:42,000 --> 01:25:44,000
才变成有歧视

2472
01:25:44,000 --> 01:25:46,000
这原来它完全没有这个意思的

2473
01:25:46,000 --> 01:25:47,000
就没有歧视的

2474
01:25:47,000 --> 01:25:48,000
明白明白

2475
01:25:48,000 --> 01:25:49,000
OK

2476
01:25:49,000 --> 01:25:50,000
所以的话

2477
01:25:50,000 --> 01:25:51,000
就这个退回来讲

2478
01:25:51,000 --> 01:25:52,000
就是你如果单纯写

2479
01:25:52,000 --> 01:25:54,000
这中国这两个字的话

2480
01:25:54,000 --> 01:25:54,000
你更

2481
01:25:54,000 --> 01:25:56,000
别说是机器了

2482
01:25:56,000 --> 01:25:57,000
连人也看不出来

2483
01:25:57,000 --> 01:25:59,000
这到底是中文还是日文

2484
01:25:59,000 --> 01:25:59,000
所以呢

2485
01:25:59,000 --> 01:26:00,000
还是要

2486
01:26:00,000 --> 01:26:03,000
非常仔仔细细的去 mark

2487
01:26:03,000 --> 01:26:04,000
对

2488
01:26:04,000 --> 01:26:06,000
你是要给它一个 locale 的

2489
01:26:06,000 --> 01:26:07,000
这样一个信息

2490
01:26:07,000 --> 01:26:10,000
它才能更加正确地

2491
01:26:10,000 --> 01:26:12,000
和精确地显示这个

2492
01:26:12,000 --> 01:26:13,000
你所想要的结果

2493
01:26:13,000 --> 01:26:17,000
就其实是一个信息处理的一种架构

2494
01:26:17,000 --> 01:26:18,000
或者哲学吧

2495
01:26:18,000 --> 01:26:20,000
这个其实大家可以去看

2496
01:26:20,000 --> 01:26:22,000
那个小零件写的那本 CJKV 的

2497
01:26:22,000 --> 01:26:24,000
这个信息处理的那本书

2498
01:26:24,000 --> 01:26:27,000
它应该算是一个这方面的专家

2499
01:26:27,000 --> 01:26:31,000
然后它应该方方面面都会照顾到这些问题

2500
01:26:31,000 --> 01:26:32,000
然后告诉你

2501
01:26:32,000 --> 01:26:33,000
在不同的层面

2502
01:26:33,000 --> 01:26:35,000
他们分别是用什么样的技术去解决

2503
01:26:35,000 --> 01:26:39,000
我们不可能依赖 UNIQLO 的这样一种技术方案

2504
01:26:39,000 --> 01:26:40,000
来解决所有的问题

2505
01:26:40,000 --> 01:26:45,000
所以刚刚你们说中文的中国和日文的中国

2506
01:26:45,000 --> 01:26:47,000
在 UNIQLO 里面是不同的点位

2507
01:26:47,000 --> 01:26:48,000
一样的

2508
01:26:48,000 --> 01:26:49,000
完全一样的点位

2509
01:26:49,000 --> 01:26:52,000
但是写出来是一样的吗

2510
01:26:52,000 --> 01:26:53,000
就不涉及这个问题

2511
01:26:53,000 --> 01:26:54,000
写出来完全一样

2512
01:26:54,000 --> 01:26:54,000
对对没错

2513
01:26:54,000 --> 01:26:59,000
写出来完全一样取决于你从谁的角度来看

2514
01:26:59,000 --> 01:27:02,000
就是假如你是一个日本人写了中国两个字

2515
01:27:02,000 --> 01:27:03,000
然后你让中国来看

2516
01:27:03,000 --> 01:27:04,000
可能看不出来

2517
01:27:04,000 --> 01:27:06,000
但如果你用一个日文字体的话

2518
01:27:06,000 --> 01:27:08,000
你会看到中国这两个字

2519
01:27:08,000 --> 01:27:10,000
在日文和中文字体里面

2520
01:27:10,000 --> 01:27:11,000
有不一样的风格

2521
01:27:11,000 --> 01:27:12,000
所以多少还是能判断出来

2522
01:27:12,000 --> 01:27:13,000
这是一个

2523
01:27:13,000 --> 01:27:16,000
就是有可能你可以判断出来

2524
01:27:16,000 --> 01:27:17,000
这是日文的中国

2525
01:27:17,000 --> 01:27:18,000
就是看语意了

2526
01:27:18,000 --> 01:27:20,000
就是看上下文在讲什么

2527
01:27:20,000 --> 01:27:21,000
不是看语意

2528
01:27:21,000 --> 01:27:21,000
就是看字型

2529
01:27:21,000 --> 01:27:23,000
他的意思是看 design

2530
01:27:23,000 --> 01:27:23,000
因为

2531
01:27:23,000 --> 01:27:25,000
看那个形状

2532
01:27:25,000 --> 01:27:26,000
对

2533
01:27:26,000 --> 01:27:30,000
每个国家的字型的标准都有多少区别

2534
01:27:30,000 --> 01:27:32,000
那是 design 风格的问题

2535
01:27:32,000 --> 01:27:33,000
设计风格的问题

2536
01:27:33,000 --> 01:27:38,000
所以 CJK 统一汉字

2537
01:27:38,000 --> 01:27:39,000
它叫统一表格

2538
01:27:40,000 --> 01:27:42,000
就是表义文字

2539
01:27:42,000 --> 01:27:44,000
对

2540
01:27:44,000 --> 01:27:47,000
所以后来就一直

2541
01:27:47,000 --> 01:27:48,000
当然字是不够用

2542
01:27:48,000 --> 01:27:50,000
所以就一直扩展

2543
01:27:50,000 --> 01:27:51,000
然后后面就扩展 A 区

2544
01:27:51,000 --> 01:27:52,000
扩展 B 区

2545
01:27:52,000 --> 01:27:55,000
我们大陆说扩展 ABCDE

2546
01:27:55,000 --> 01:27:57,000
现在已经有 E 区了

2547
01:27:57,000 --> 01:28:00,000
台湾他们那边说扩展甲乙丙丁物

2548
01:28:00,000 --> 01:28:01,000
说法不一样而已

2549
01:28:01,000 --> 01:28:02,000
其实东西是一样的

2550
01:28:02,000 --> 01:28:03,000
现在有 F 区了是吗

2551
01:28:03,000 --> 01:28:04,000
都已经到

2552
01:28:04,000 --> 01:28:06,000
所以这字是越来越多

2553
01:28:06,000 --> 01:28:08,000
好像是有了

2554
01:28:08,000 --> 01:28:09,000
各种考古挖掘的东西

2555
01:28:09,000 --> 01:28:11,000
这种考古挖出来一些新字

2556
01:28:11,000 --> 01:28:12,000
又得加进去

2557
01:28:12,000 --> 01:28:13,000
对

2558
01:28:13,000 --> 01:28:16,000
而且什么转转小转大转之类的

2559
01:28:16,000 --> 01:28:17,000
都可以讲

2560
01:28:17,000 --> 01:28:18,000
对

2561
01:28:18,000 --> 01:28:21,000
所以因为本身 unicode

2562
01:28:21,000 --> 01:28:23,000
它本身也一直都在更新

2563
01:28:23,000 --> 01:28:29,000
至少 unicode 的 8.0 的话

2564
01:28:29,000 --> 01:28:32,000
已经有扩展 E 区了

2565
01:28:32,000 --> 01:28:33,000
这是已经有了

2566
01:28:33,000 --> 01:28:35,000
这是我已经收进去了

2567
01:28:35,000 --> 01:28:36,000
对

2568
01:28:36,000 --> 01:28:39,000
所以以后我们不能说把什么扫进固职

2569
01:28:39,000 --> 01:28:40,000
堆里面

2570
01:28:40,000 --> 01:28:42,000
我们得扫进 unicode 垃圾坑里面

2571
01:28:46,000 --> 01:28:47,000
好

2572
01:28:47,000 --> 01:28:48,000
就是说到 unicode 的字的问题

2573
01:28:48,000 --> 01:28:49,000
对吧

2574
01:28:49,000 --> 01:28:51,000
然后 unicode 的编码问题呢

2575
01:28:51,000 --> 01:28:52,000
这个坑真大了

2576
01:28:52,000 --> 01:28:56,000
之前吴涛在那一单那期单口节目里面

2577
01:28:56,000 --> 01:28:57,000
已经大概讲过了

2578
01:28:57,000 --> 01:28:59,000
这里要不要再重申一遍

2579
01:28:59,000 --> 01:29:01,000
为什么你们都记得那期

2580
01:29:01,000 --> 01:29:02,000
我讲了什么

2581
01:29:02,000 --> 01:29:04,000
我现在完全不记得自己那一期讲

2582
01:29:04,000 --> 01:29:05,000
我也录这节目

2583
01:29:05,000 --> 01:29:07,000
我还特地翻出来听了一遍

2584
01:29:07,000 --> 01:29:09,000
结果听到后面有一个人

2585
01:29:09,000 --> 01:29:10,000
他居然是情绪人

2586
01:29:10,000 --> 01:29:11,000
怎么找女朋友

2587
01:29:11,000 --> 01:29:12,000
这什么鬼

2588
01:29:12,000 --> 01:29:16,000
其实我也写了一篇很简单的一个博客吧

2589
01:29:16,000 --> 01:29:18,000
去说大概记录了一下

2590
01:29:18,000 --> 01:29:21,000
我当时学习这个坑的一个结果

2591
01:29:21,000 --> 01:29:26,000
这个编码方式的 UTF 8 和 UTF 16 什么什么

2592
01:29:26,000 --> 01:29:29,000
但是你们详细的说一下

2593
01:29:29,000 --> 01:29:30,000
其实这个坑还蛮多的

2594
01:29:30,000 --> 01:29:31,000
这个我可以讲一下

2595
01:29:31,000 --> 01:29:32,000
对

2596
01:29:32,000 --> 01:29:36,000
就最开始的时候其实没有 UTF 16 的

2597
01:29:36,000 --> 01:29:38,000
最开始的时候叫 UCS 2

2598
01:29:38,000 --> 01:29:39,000
对

2599
01:29:39,000 --> 01:29:40,000
没错

2600
01:29:40,000 --> 01:29:43,000
这个坑也是一个历史遗留问题

2601
01:29:43,000 --> 01:29:44,000
对

2602
01:29:44,000 --> 01:29:47,000
然后 UCS 2 其实它只是编码了

2603
01:29:47,000 --> 01:29:49,000
刚才讲的那个叫做 BMP 嘛

2604
01:29:49,000 --> 01:29:50,000
就是基本平面

2605
01:29:50,000 --> 01:29:51,000
嗯

2606
01:29:51,000 --> 01:29:54,000
就是一共有 65,536 个点

2607
01:29:54,000 --> 01:29:55,000
对吧

2608
01:29:55,000 --> 01:29:57,000
然后就很简单嘛

2609
01:29:57,000 --> 01:30:00,000
就是没有任何额外的东西

2610
01:30:00,000 --> 01:30:04,000
然后 UCS 2 和 UTF 16 的区别是什么呢

2611
01:30:04,000 --> 01:30:08,000
就是 UTF 16 里面其实是等于 UCS 2

2612
01:30:08,000 --> 01:30:11,000
然后加了那个叫做 Serigate Parent

2613
01:30:11,000 --> 01:30:12,000
Serigate Parent 中文叫什么

2614
01:30:12,000 --> 01:30:14,000
代理队

2615
01:30:14,000 --> 01:30:15,000
对

2616
01:30:15,000 --> 01:30:17,000
我不知道

2617
01:30:17,000 --> 01:30:18,000
对

2618
01:30:18,000 --> 01:30:19,000
我不一直都不知道中文叫什么

2619
01:30:19,000 --> 01:30:20,000
或者这么理解吧

2620
01:30:20,000 --> 01:30:26,000
UCS 2 可以大致等同于 GB 2312 对于中文的概念

2621
01:30:26,000 --> 01:30:28,000
因为它就是一个定常的

2622
01:30:28,000 --> 01:30:29,000
没有任何特殊东西的

2623
01:30:29,000 --> 01:30:32,000
就只是那么多个点位而已

2624
01:30:32,000 --> 01:30:33,000
然后当时

2625
01:30:33,000 --> 01:30:35,000
但是因为当时已经突破了基本平面了

2626
01:30:35,000 --> 01:30:36,000
对吧

2627
01:30:36,000 --> 01:30:37,000
就是要想办法了嘛

2628
01:30:37,000 --> 01:30:43,000
要想办法表达 65,536 个这个点之外的东西怎么办

2629
01:30:43,000 --> 01:30:44,000
想出这么一个 hack

2630
01:30:44,000 --> 01:30:47,000
就是说在那个基本平面里面抠出了一小段

2631
01:30:47,000 --> 01:30:49,000
大概是我看看

2632
01:30:49,000 --> 01:30:55,000
这个是这个 16 进制编码是 D 800 到 DFF

2633
01:30:55,000 --> 01:31:00,000
这几个字符是用做 Serigate Parent

2634
01:31:00,000 --> 01:31:02,000
Serigate Parent 是什么意思

2635
01:31:02,000 --> 01:31:06,000
等于是从两个字节的一个定常编码里面

2636
01:31:06,000 --> 01:31:09,000
Markup 就是刚才讲吴涛说的做标记

2637
01:31:09,000 --> 01:31:11,000
用一个对做了一个特殊标记

2638
01:31:11,000 --> 01:31:13,000
说从这些字符之间的东西

2639
01:31:13,000 --> 01:31:15,000
你要进行一个特殊处理

2640
01:31:15,000 --> 01:31:17,000
使得我们可以超出基本平面

2641
01:31:17,000 --> 01:31:20,000
那个 65,536 个字符的限制

2642
01:31:20,000 --> 01:31:22,000
这个就是 UTF 16

2643
01:31:22,000 --> 01:31:24,000
他当时做出这个编码方案

2644
01:31:24,000 --> 01:31:27,000
其实就还是为了省资源对吧

2645
01:31:27,000 --> 01:31:29,000
就是节省编码

2646
01:31:29,000 --> 01:31:31,000
对是因为是这样

2647
01:31:31,000 --> 01:31:33,000
就是说如果当时有一个

2648
01:31:33,000 --> 01:31:35,000
就刚才讲 UCS 2 是一个非常简单的编码方式嘛

2649
01:31:35,000 --> 01:31:38,000
其实对应的还有一个叫 UCS 4

2650
01:31:38,000 --> 01:31:41,000
就是四个字节 32 位的东西

2651
01:31:41,000 --> 01:31:45,000
然后 UCS 4 本质上就是 UTF 32

2652
01:31:45,000 --> 01:31:49,000
它是一个固定的

2653
01:31:49,000 --> 01:31:51,000
对对就是定常编码

2654
01:31:51,000 --> 01:31:52,000
就很浪费嘛

2655
01:31:52,000 --> 01:31:54,000
就是你一个字母 A 的话

2656
01:31:54,000 --> 01:31:55,000
也要用那个字节

2657
01:31:55,000 --> 01:31:56,000
特别浪费

2658
01:31:56,000 --> 01:31:58,000
对对所以后来权衡一下

2659
01:31:58,000 --> 01:32:00,000
就是说我们还是用内部

2660
01:32:00,000 --> 01:32:02,000
还是用 UTF 16

2661
01:32:02,000 --> 01:32:05,000
用 UCS 2 定常的编码

2662
01:32:05,000 --> 01:32:07,000
但是要为了超出

2663
01:32:07,000 --> 01:32:09,000
要解决那个超出基本平衡的问题

2664
01:32:09,000 --> 01:32:12,000
所以加了这个 Seregade pair 这种这种 hack

2665
01:32:12,000 --> 01:32:15,000
使得 UCS 2 变成了 UTF 16

2666
01:32:15,000 --> 01:32:16,000
这么一个过程

2667
01:32:16,000 --> 01:32:17,000
就看那个标记

2668
01:32:17,000 --> 01:32:18,000
有了这个标记以后

2669
01:32:18,000 --> 01:32:21,000
我就要用另外一个了对吧

2670
01:32:21,000 --> 01:32:23,000
就是就是你搜嘛

2671
01:32:23,000 --> 01:32:25,000
搜那个 UCS 2 里面的那个 Seregade pair

2672
01:32:25,000 --> 01:32:27,000
那段是没有没有定义的嘛

2673
01:32:27,000 --> 01:32:29,000
那用上人为规定说

2674
01:32:29,000 --> 01:32:32,000
如果你看到有这种这种 Seregade pair 的字符

2675
01:32:32,000 --> 01:32:35,000
就知道你这个是 UTF 16

2676
01:32:35,000 --> 01:32:36,000
所以这些 Seregade pair 里面的东西

2677
01:32:36,000 --> 01:32:38,000
你要特殊处理嘛

2678
01:32:38,000 --> 01:32:42,000
反正也是一个很很大很大的坑

2679
01:32:42,000 --> 01:32:44,000
然后说到这个定常编码

2680
01:32:44,000 --> 01:32:45,000
就因为可定常编码

2681
01:32:45,000 --> 01:32:46,000
就会牵涉到一个

2682
01:32:46,000 --> 01:32:49,000
这个所谓的这个顺序的问题

2683
01:32:49,000 --> 01:32:52,000
这又是一个更大的坑

2684
01:32:52,000 --> 01:32:53,000
深坑

2685
01:32:53,000 --> 01:32:56,000
这其实是那个非单字节编码

2686
01:32:56,000 --> 01:32:57,000
都要牵涉

2687
01:32:57,000 --> 01:32:58,000
非单字节编码

2688
01:32:58,000 --> 01:32:59,000
都有这个很明显的问题

2689
01:32:59,000 --> 01:33:01,000
这个不光是在字符编码上

2690
01:33:01,000 --> 01:33:03,000
其实在计算机的这个数字的表达上

2691
01:33:03,000 --> 01:33:04,000
也会有这个问题

2692
01:33:04,000 --> 01:33:07,000
比如说我们常说计算机一个一个字节

2693
01:33:07,000 --> 01:33:08,000
就最小单位嘛

2694
01:33:08,000 --> 01:33:10,000
是就是八个位对吧

2695
01:33:10,000 --> 01:33:11,000
但是两个字节

2696
01:33:11,000 --> 01:33:13,000
就是你表示 16 位整数的时候

2697
01:33:13,000 --> 01:33:14,000
也会牵涉到哪个是高位

2698
01:33:14,000 --> 01:33:15,000
哪个是低

2699
01:33:15,000 --> 01:33:16,000
就哪边是高位

2700
01:33:16,000 --> 01:33:17,000
哪边是低位的问题嘛

2701
01:33:18,000 --> 01:33:19,000
对

2702
01:33:19,000 --> 01:33:21,000
然后就会所谓的

2703
01:33:21,000 --> 01:33:23,000
我们就会牵涉到那个叫做 indium

2704
01:33:23,000 --> 01:33:24,000
indium 中文翻成什么

2705
01:33:26,000 --> 01:33:27,000
端吧

2706
01:33:27,000 --> 01:33:28,000
就翻成端

2707
01:33:28,000 --> 01:33:30,000
一般那个就是端系

2708
01:33:30,000 --> 01:33:32,000
对我们一般管那个叫端式嘛

2709
01:33:33,000 --> 01:33:34,000
就大端

2710
01:33:34,000 --> 01:33:36,000
大端和大尾和小尾

2711
01:33:36,000 --> 01:33:37,000
这个是个专门名称

2712
01:33:37,000 --> 01:33:38,000
我今天说大头小头

2713
01:33:38,000 --> 01:33:39,000
端式

2714
01:33:40,000 --> 01:33:43,000
对他其实表示的就是大头派小头派嘛

2715
01:33:43,000 --> 01:33:44,000
没错了

2716
01:33:44,000 --> 01:33:46,000
就原原作是指这个嘛

2717
01:33:46,000 --> 01:33:48,000
就在格雷夫游记的原作里面是指

2718
01:33:48,000 --> 01:33:50,000
小人国在打内战的时候

2719
01:33:50,000 --> 01:33:51,000
他其实是使了那个意思

2720
01:33:51,000 --> 01:33:54,000
说吃鸡蛋要从大头开始敲

2721
01:33:54,000 --> 01:33:55,000
还是从小头开始敲

2722
01:33:55,000 --> 01:33:57,000
然后因此还发过六次叛乱

2723
01:33:58,000 --> 01:33:59,000
对对对

2724
01:33:59,000 --> 01:34:01,000
ending 就是从那个鸡蛋的那个两头

2725
01:34:01,000 --> 01:34:02,000
那个地方来的吧好像

2726
01:34:02,000 --> 01:34:03,000
对啊

2727
01:34:03,000 --> 01:34:04,000
对对对

2728
01:34:04,000 --> 01:34:08,000
然后然后这个坑就比较深了

2729
01:34:08,000 --> 01:34:09,000
就是说简单来讲就是那头

2730
01:34:09,000 --> 01:34:11,000
就是对于一个数字来讲

2731
01:34:11,000 --> 01:34:13,000
比如是对于一个 16 位的整数来讲

2732
01:34:13,000 --> 01:34:15,000
你觉得第一就是从左到右数

2733
01:34:15,000 --> 01:34:16,000
左边是高位呢

2734
01:34:16,000 --> 01:34:17,000
还是右边是高位

2735
01:34:17,000 --> 01:34:18,000
对吧

2736
01:34:19,000 --> 01:34:20,000
嗯没错吧

2737
01:34:20,000 --> 01:34:21,000
我想想

2738
01:34:21,000 --> 01:34:22,000
对对对

2739
01:34:23,000 --> 01:34:26,000
就是大端式的话就是左边是高位

2740
01:34:26,000 --> 01:34:28,000
小端式就是右边是高位

2741
01:34:28,000 --> 01:34:30,000
对但是在字符集的时候

2742
01:34:30,000 --> 01:34:31,000
这个坑就又多了

2743
01:34:31,000 --> 01:34:32,000
就会牵涉到

2744
01:34:32,000 --> 01:34:35,000
因为我想想怎么表述这个东西

2745
01:34:35,000 --> 01:34:39,000
就是首先你要看它的这个字节的组合

2746
01:34:39,000 --> 01:34:41,000
是怎样分成一个一个单元的

2747
01:34:41,000 --> 01:34:43,000
然后它在每个单元的内部

2748
01:34:43,000 --> 01:34:45,000
会有一个端式的这个

2749
01:34:45,000 --> 01:34:47,000
不因为有有有有这么一个问题

2750
01:34:47,000 --> 01:34:48,000
可能要解释一下

2751
01:34:48,000 --> 01:34:49,000
就是说在数字上面

2752
01:34:49,000 --> 01:34:53,000
我们写一般是说是从左往右写

2753
01:34:53,000 --> 01:34:54,000
对吧

2754
01:34:54,000 --> 01:34:55,000
我们正常的是个书写顺序

2755
01:34:55,000 --> 01:34:58,000
但是在表达那个如果是位的话

2756
01:34:58,000 --> 01:35:00,000
如果你是小端大端小端

2757
01:35:00,000 --> 01:35:01,000
就某一端的时候

2758
01:35:01,000 --> 01:35:04,000
它是最右边那个位开始起

2759
01:35:04,000 --> 01:35:06,000
因为你想就是低位高位的话

2760
01:35:06,000 --> 01:35:08,000
就个位数是在右边嘛

2761
01:35:08,000 --> 01:35:11,000
然后越高位的话是越往左写嘛

2762
01:35:11,000 --> 01:35:13,000
越往左边的是越高位嘛

2763
01:35:14,000 --> 01:35:16,000
对对这个也是一个很深的一个

2764
01:35:18,000 --> 01:35:22,000
经常经常我搞不清楚这里面到底是哪个是哪个原理啊

2765
01:35:22,000 --> 01:35:24,000
就是你想如果我们把那个位

2766
01:35:24,000 --> 01:35:27,000
作为一个图形化的方式表达在眼前的话

2767
01:35:27,000 --> 01:35:31,000
你发现它其实是从右边开始进行的

2768
01:35:31,000 --> 01:35:33,000
然后又会再增加的

2769
01:35:33,000 --> 01:35:34,000
嗯哼

2770
01:35:34,000 --> 01:35:35,000
没有的意思吗

2771
01:35:35,000 --> 01:35:37,000
对就是比如说零零一

2772
01:35:37,000 --> 01:35:38,000
然后 10

2773
01:35:38,000 --> 01:35:39,000
然后 11

2774
01:35:39,000 --> 01:35:40,000
100

2775
01:35:40,000 --> 01:35:42,000
100 这样的方式

2776
01:35:42,000 --> 01:35:43,000
对吧

2777
01:35:43,000 --> 01:35:44,000
哈哈哈哈哈

2778
01:35:44,000 --> 01:35:45,000
我觉得这样

2779
01:35:45,000 --> 01:35:46,000
就说出来好

2780
01:35:46,000 --> 01:35:48,000
大家肯定晕了

2781
01:35:48,000 --> 01:35:49,000
anyway

2782
01:35:49,000 --> 01:35:50,000
哎

2783
01:35:50,000 --> 01:35:51,000
没错

2784
01:35:51,000 --> 01:35:52,000
得在脑中画一下

2785
01:35:52,000 --> 01:35:53,000
对

2786
01:35:53,000 --> 01:35:55,000
其实我们只是要认可这个世界上

2787
01:35:55,000 --> 01:35:57,000
事实上存在了这样两种顺时

2788
01:35:57,000 --> 01:35:58,000
那么这两种顺时

2789
01:35:58,000 --> 01:36:00,000
实际上是由计算机

2790
01:36:00,000 --> 01:36:02,000
硬件架构所决定的

2791
01:36:02,000 --> 01:36:02,000
一派架构

2792
01:36:02,000 --> 01:36:05,000
它就是以这个小端式来保存它的数据

2793
01:36:05,000 --> 01:36:06,000
而另一端

2794
01:36:06,000 --> 01:36:09,000
另一种架构就是以大端式来保存它的数据

2795
01:36:09,000 --> 01:36:10,000
对

2796
01:36:10,000 --> 01:36:12,000
然后这个在我们常用的计算机里面

2797
01:36:12,000 --> 01:36:13,000
intel 架构

2798
01:36:13,000 --> 01:36:15,000
就是我们现在用的 x 86

2799
01:36:15,000 --> 01:36:17,000
它是一个小端设计的

2800
01:36:17,000 --> 01:36:17,000
对

2801
01:36:17,000 --> 01:36:20,000
但是在互联网上

2802
01:36:20,000 --> 01:36:22,000
我们基本上所有的这个通讯协议

2803
01:36:22,000 --> 01:36:24,000
以及这个网络标准

2804
01:36:24,000 --> 01:36:26,000
全部都是以大端来设计的

2805
01:36:26,000 --> 01:36:28,000
所以坑就从这里开始了

2806
01:36:28,000 --> 01:36:29,000
没错

2807
01:36:29,000 --> 01:36:33,000
这是不是跟早期的服务器用的那个架构有关

2808
01:36:33,000 --> 01:36:36,000
因为早期的那个做互联网的那些服务器

2809
01:36:36,000 --> 01:36:37,000
都不是 intel 的处理器

2810
01:36:37,000 --> 01:36:39,000
都是一些其他那些

2811
01:36:39,000 --> 01:36:41,000
现在已经销声匿迹的那些处理器

2812
01:36:41,000 --> 01:36:44,000
都基于 unix 的其实是吧

2813
01:36:44,000 --> 01:36:45,000
不

2814
01:36:45,000 --> 01:36:46,000
那个是操作系统的

2815
01:36:46,000 --> 01:36:46,000
那个还没有

2816
01:36:46,000 --> 01:36:48,000
这个是一个硬件层

2817
01:36:48,000 --> 01:36:49,000
这很低层的

2818
01:36:49,000 --> 01:36:49,000
然后就

2819
01:36:49,000 --> 01:36:50,000
对对

2820
01:36:50,000 --> 01:36:53,000
早期的很多那个做互联网的服务器

2821
01:36:53,000 --> 01:36:54,000
还有包括那些开发

2822
01:36:54,000 --> 01:36:56,000
就是最开始做什么

2823
01:36:56,000 --> 01:36:57,000
upend 那些用的机器

2824
01:36:57,000 --> 01:36:58,000
他们其实很多都是大端的

2825
01:36:58,000 --> 01:36:59,000
就是 big ending 的

2826
01:36:59,000 --> 01:37:03,000
所以就他们的用的那些机器变成了一个正统

2827
01:37:03,000 --> 01:37:06,000
然后反而现在我们做小端的那个 intel 的处理器

2828
01:37:06,000 --> 01:37:08,000
到时候就为什么你写 c 程序的时候

2829
01:37:08,000 --> 01:37:09,000
还要有一个什么

2830
01:37:09,000 --> 01:37:13,000
host h 2 n

2831
01:37:13,000 --> 01:37:14,000
h 2 l

2832
01:37:14,000 --> 01:37:16,000
h 2 l 和 l 2 h

2833
01:37:16,000 --> 01:37:20,000
就是转换网络的端和这个本地的这个

2834
01:37:20,000 --> 01:37:21,000
host to local 是吧

2835
01:37:21,000 --> 01:37:23,000
对对对

2836
01:37:23,000 --> 01:37:27,000
那个小端序是 vax 和 intel 的架构

2837
01:37:27,000 --> 01:37:29,000
大端序是摩托罗拉和 sum 的那个架构

2838
01:37:29,000 --> 01:37:30,000
没错没错

2839
01:37:30,000 --> 01:37:33,000
就是什么 spark 啊那些东西

2840
01:37:33,000 --> 01:37:37,000
anyway 说回这个就在这个字体这个 utf-8 编码

2841
01:37:37,000 --> 01:37:40,000
utf-16 和 utf-32 编码也有这个同样的问题

2842
01:37:40,000 --> 01:37:44,000
就是说第一个字节到底代表是小头还是大头

2843
01:37:46,000 --> 01:37:47,000
所以他要做标注

2844
01:37:47,000 --> 01:37:48,000
对吧

2845
01:37:48,000 --> 01:37:48,000
对

2846
01:37:48,000 --> 01:37:54,000
所以为了就是他说他们就没有说我们大家都规定一律是用像比如像网络上

2847
01:37:54,000 --> 01:37:58,000
大家都规定说因为在所有的这个 rfc 的规范里面

2848
01:37:58,000 --> 01:37:59,000
只要涉及网络的都是用的那个大头啊

2849
01:37:59,000 --> 01:38:01,000
大端设计嘛

2850
01:38:01,000 --> 01:38:06,000
但是在文本上面其实并没有这么一个统一就是约定俗成的一个规定

2851
01:38:06,000 --> 01:38:07,000
所以就两种都存在

2852
01:38:07,000 --> 01:38:12,000
所以说存在说叫做 utf-16 就是 l 1 和 utf-16

2853
01:38:12,000 --> 01:38:14,000
b 1

2854
01:38:14,000 --> 01:38:18,000
打 b 1 对就两种不同的表达方这个存储方式

2855
01:38:18,000 --> 01:38:23,000
所以你们看到很多这个 windows 上面的那个那个

2856
01:38:24,000 --> 01:38:26,000
文本编辑器吧

2857
01:38:26,000 --> 01:38:26,000
txtedit

2858
01:38:26,000 --> 01:38:27,000
记事本

2859
01:38:27,000 --> 01:38:28,000
记事本

2860
01:38:29,000 --> 01:38:29,000
对对对

2861
01:38:29,000 --> 01:38:32,000
记事本对他会给你这个选项

2862
01:38:32,000 --> 01:38:37,000
然后因为存在这个 b 1 和 l 1 的区这个问题呢

2863
01:38:37,000 --> 01:38:39,000
就是很多人啊就为了解

2864
01:38:39,000 --> 01:38:40,000
为了标志书

2865
01:38:40,000 --> 01:38:42,000
这个文本到底是大端是小端的

2866
01:38:42,000 --> 01:38:44,000
我们有一个规定

2867
01:38:44,000 --> 01:38:49,000
就是说用 utf-16 编码的文本会在他的第一个字符

2868
01:38:49,000 --> 01:38:54,000
应该是把前两个字符会放过放了放一个特殊的标志

2869
01:38:54,000 --> 01:38:56,000
叫做 bone byte order mark

2870
01:38:56,000 --> 01:38:57,000
这叫什么

2871
01:38:57,000 --> 01:38:58,000
字序

2872
01:38:58,000 --> 01:38:58,000
嗯

2873
01:38:59,000 --> 01:39:01,000
字节序列标志吧

2874
01:39:01,000 --> 01:39:05,000
那标志这个我这个序列是大是大头还是小头

2875
01:39:05,000 --> 01:39:06,000
对对对

2876
01:39:06,000 --> 01:39:11,000
然后这个这个 bone 其实是一个两个字节的特殊型特殊位

2877
01:39:11,000 --> 01:39:13,000
它是很取巧了

2878
01:39:13,000 --> 01:39:17,000
因为它其实是那个 unicode 的那个 fe ff 这个字

2879
01:39:17,000 --> 01:39:19,000
但是这个字呢

2880
01:39:19,000 --> 01:39:22,000
叫 zero width no break space

2881
01:39:22,000 --> 01:39:28,000
就是零宽的一个不间断的不可分割的空白

2882
01:39:28,000 --> 01:39:28,000
所以呢

2883
01:39:28,000 --> 01:39:28,000
所以呢

2884
01:39:28,000 --> 01:39:28,000
所以呢

2885
01:39:28,000 --> 01:39:28,000
所以呢

2886
01:39:28,000 --> 01:39:28,000
所以呢

2887
01:39:28,000 --> 01:39:28,000
所以呢

2888
01:39:28,000 --> 01:39:28,000
所以呢

2889
01:39:28,000 --> 01:39:28,000
所以呢

2890
01:39:28,000 --> 01:39:28,000
所以呢

2891
01:39:28,000 --> 01:39:28,000
所以呢

2892
01:39:28,000 --> 01:39:28,000
所以呢

2893
01:39:28,000 --> 01:39:29,000
所以呢

2894
01:39:29,000 --> 01:39:29,000
所以呢

2895
01:39:29,000 --> 01:39:29,000
所以呢

2896
01:39:29,000 --> 01:39:29,000
所以呢

2897
01:39:29,000 --> 01:39:29,000
所以呢

2898
01:39:29,000 --> 01:39:29,000
所以呢

2899
01:39:29,000 --> 01:39:30,000
所以呢

2900
01:39:30,000 --> 01:39:30,000
所以呢

2901
01:39:30,000 --> 01:39:30,000
所以呢

2902
01:39:30,000 --> 01:39:30,000
所以呢

2903
01:39:30,000 --> 01:39:30,000
所以呢

2904
01:39:30,000 --> 01:39:30,000
所以呢

2905
01:39:30,000 --> 01:39:32,000
你表面你看不出来有这个字

2906
01:39:32,000 --> 01:39:36,000
这是一个非常这是一个很容易很容易把人坑死了

2907
01:39:36,000 --> 01:39:36,000
坑

2908
01:39:36,000 --> 01:39:37,000
就是因为你看不到这个字

2909
01:39:37,000 --> 01:39:42,000
你必须用一个能够看见看不到的东西的编辑机来看

2910
01:39:42,000 --> 01:39:43,000
你才能看到这个东西

2911
01:39:43,000 --> 01:39:47,000
当时想出这个招子的也应该脱出这个卡了

2912
01:39:47,000 --> 01:39:48,000
对的

2913
01:39:48,000 --> 01:39:51,000
但是他当时就是因为这个字看不见

2914
01:39:51,000 --> 01:39:53,000
所以才能用来做这个 hack 嘛

2915
01:39:53,000 --> 01:39:56,000
对他当时觉得自己这个 hack 还挺挺技巧的

2916
01:39:56,000 --> 01:39:57,000
对

2917
01:39:57,000 --> 01:39:58,000
对

2918
01:39:58,000 --> 01:39:59,000
但是现在的这个用这个 hack 的方式是什么呢

2919
01:39:59,000 --> 01:40:00,000
就是这个 unicode 的规范

2920
01:40:00,000 --> 01:40:06,000
他已经不推荐你再把这个 bomb 当成这个零宽的空格来用了

2921
01:40:06,000 --> 01:40:09,000
他只推荐你用来标记这个字节式

2922
01:40:09,000 --> 01:40:09,000
对

2923
01:40:10,000 --> 01:40:12,000
现在不是应该用 utf-8

2924
01:40:12,000 --> 01:40:14,000
为什么还要推荐 utf-16

2925
01:40:14,000 --> 01:40:18,000
就是对于 unicode 的他这个规范书来说

2926
01:40:18,000 --> 01:40:20,000
他认为这个字节式的标记

2927
01:40:20,000 --> 01:40:23,000
即使是对于 utf-8 的编码也有一定的作用

2928
01:40:23,000 --> 01:40:26,000
因为他能明确的告诉你这个文本处理的软件

2929
01:40:26,000 --> 01:40:28,000
你这个就是用 unicode 的编码

2930
01:40:28,000 --> 01:40:29,000
好吧

2931
01:40:29,000 --> 01:40:33,000
不需要 utf-8 不需要这个东西啊

2932
01:40:33,000 --> 01:40:34,000
怎么说呢

2933
01:40:34,000 --> 01:40:38,000
就是 unicode 他是这样号称的啦

2934
01:40:38,000 --> 01:40:43,000
就是说即使你这个用 utf-8 这样没有端式的编码方式来编码

2935
01:40:43,000 --> 01:40:47,000
那么我如果看到了这个 bomb 的这个标记位的话

2936
01:40:47,000 --> 01:40:53,000
那么我可以提前就知道这些文本一定是用 unicode 的某一种编码方案来编码

2937
01:40:53,000 --> 01:40:56,000
你就不用去考虑别的编码方案

2938
01:40:56,000 --> 01:40:56,000
对

2939
01:40:56,000 --> 01:40:59,000
就是说那这里就会会涉及一个问题

2940
01:40:59,000 --> 01:40:59,000
就是说

2941
01:40:59,000 --> 01:41:04,000
在其他所有编码方案里面都没有出现过 bomb 这个东西是吧

2942
01:41:04,000 --> 01:41:05,000
就不会在开头

2943
01:41:05,000 --> 01:41:07,000
就如果或者说他做了一个约定

2944
01:41:07,000 --> 01:41:09,000
一旦在开头出现这个标记位的时候

2945
01:41:09,000 --> 01:41:12,000
我就认为他是那个 unicode 的编码

2946
01:41:12,000 --> 01:41:13,000
他能做出这个约定

2947
01:41:13,000 --> 01:41:18,000
他肯定是说统计过市面上所有存现存用过的这个编码方案

2948
01:41:18,000 --> 01:41:20,000
不管是日本的韩国的还是在欧洲的也好

2949
01:41:20,000 --> 01:41:24,000
他的都不会出现这么一个这么一个组合

2950
01:41:24,000 --> 01:41:27,000
就是这个 fe ff 这个位

2951
01:41:27,000 --> 01:41:29,000
对那应该是

2952
01:41:29,000 --> 01:41:31,000
因为这个字符本身呃

2953
01:41:31,000 --> 01:41:34,000
作为一个非标记字符来用

2954
01:41:34,000 --> 01:41:35,000
他就是一个很罕见的嘛

2955
01:41:35,000 --> 01:41:37,000
他是一个零宽的这样一个空格

2956
01:41:37,000 --> 01:41:40,000
如果你正确的使用这个空格的话

2957
01:41:40,000 --> 01:41:43,000
他是不会出现在这个一个字符串的开头的

2958
01:41:43,000 --> 01:41:45,000
因为他的语义决定了

2959
01:41:45,000 --> 01:41:48,000
他一定是出现在一些字符串的中间的

2960
01:41:48,000 --> 01:41:48,000
ok

2961
01:41:48,000 --> 01:41:50,000
make sense

2962
01:41:50,000 --> 01:41:51,000
anyway

2963
01:41:51,000 --> 01:41:52,000
无论如何怎么说

2964
01:41:52,000 --> 01:41:53,000
这还是一个 bad idea

2965
01:41:53,000 --> 01:41:57,000
他的存在就是一个 bad idea

2966
01:41:57,000 --> 01:41:58,000
所以那个 windows

2967
01:41:58,000 --> 01:42:00,000
记事本他呃

2968
01:42:00,000 --> 01:42:02,000
你在保存这个文件的时候

2969
01:42:02,000 --> 01:42:04,000
他有个选项叫 unicode

2970
01:42:04,000 --> 01:42:07,000
然后又有个选项叫 unicode big end

2971
01:42:07,000 --> 01:42:09,000
然后如果那就大家会想什么鬼

2972
01:42:09,000 --> 01:42:11,000
因为他是第一个选项 unicode

2973
01:42:11,000 --> 01:42:15,000
他就是默认的说这个就是 utf 的 16

2974
01:42:15,000 --> 01:42:17,000
而且呢是默认是小头的

2975
01:42:17,000 --> 01:42:20,000
所以他还会有另外一个选项是 unicode

2976
01:42:20,000 --> 01:42:20,000
big end

2977
01:42:20,000 --> 01:42:23,000
这个用大头来保存

2978
01:42:23,000 --> 01:42:25,000
所以这也是一个坑对不对

2979
01:42:25,000 --> 01:42:26,000
因为你选 unicode

2980
01:42:26,000 --> 01:42:27,000
因为它并不是一个编码

2981
01:42:27,000 --> 01:42:27,000
对啊

2982
01:42:27,000 --> 01:42:28,000
而且然后他有第三个编码是这个编码

2983
01:42:28,000 --> 01:42:30,000
第三个选项是 utf 8

2984
01:42:30,000 --> 01:42:32,000
这其实也是如果你要这样讲

2985
01:42:32,000 --> 01:42:34,000
这是 unicode 的一种编码方式而已嘛

2986
01:42:34,000 --> 01:42:39,000
就是他把他把两个完全不在一个逻辑层面的概念全部放在一堆

2987
01:42:39,000 --> 01:42:40,000
然后揉成了一堆

2988
01:42:41,000 --> 01:42:44,000
对他这个菜单显示的很奇怪

2989
01:42:44,000 --> 01:42:45,000
就是他不应该这样表述

2990
01:42:45,000 --> 01:42:47,000
对他的这个术语比较乱了

2991
01:42:47,000 --> 01:42:51,000
所以把那个什么做记事本的那个产品经理托手去砍了

2992
01:42:51,000 --> 01:42:52,000
你今天要砍多少人呢

2993
01:42:55,000 --> 01:42:57,000
不不合逻辑的通通砍死了

2994
01:42:58,000 --> 01:43:02,000
所以 windows 记事本他到保存了以后了

2995
01:43:02,000 --> 01:43:03,000
他啊

2996
01:43:03,000 --> 01:43:05,000
这个报本但大家都会有是吧

2997
01:43:05,000 --> 01:43:05,000
嗯

2998
01:43:05,000 --> 01:43:06,000
写标记了以后

2999
01:43:06,000 --> 01:43:12,000
呃不会呃只会用就在一个正常符合逻辑的编辑器里面

3000
01:43:12,000 --> 01:43:15,000
他应该只会用 utf 16 或者 utf 3

3001
01:43:15,000 --> 01:43:15,000
哎

3002
01:43:15,000 --> 01:43:18,000
等于这份三号是规定的一点顺序

3003
01:43:18,000 --> 01:43:19,000
呃

3004
01:43:19,000 --> 01:43:21,000
他也有两种顺是可以用的

3005
01:43:21,000 --> 01:43:23,000
就是说 16 和 32 的时候

3006
01:43:23,000 --> 01:43:28,000
所以这就是为什么 windows 他会在那个 unicode 的上面加一个呃

3007
01:43:28,000 --> 01:43:31,000
带不带 be 这个标记的区分了

3008
01:43:31,000 --> 01:43:35,000
不但是他里面不能选 utf 32 啊

3009
01:43:35,000 --> 01:43:36,000
呃

3010
01:43:36,000 --> 01:43:40,000
对他的产品逻辑是说就是当我标明了这个 bomb 的时候

3011
01:43:40,000 --> 01:43:42,000
他有可能是用 utf 16 编码

3012
01:43:42,000 --> 01:43:43,000
有可能是用 32 编码了

3013
01:43:43,000 --> 01:43:46,000
所以他就用 unicode 的来指代这两种

3014
01:43:46,000 --> 01:43:48,000
哈哈哈

3015
01:43:48,000 --> 01:43:48,000
然后同时呢

3016
01:43:48,000 --> 01:43:51,000
他那个认为 utf 8 是不需要这个的

3017
01:43:51,000 --> 01:43:53,000
所以他说 utf 8 的时候呢

3018
01:43:53,000 --> 01:43:58,000
只用一个标准的编码方案来指代他现在的这个文件重点

3019
01:43:58,000 --> 01:43:59,000
啊

3020
01:43:59,000 --> 01:44:04,000
记得是 anyway 就是我们最终得出结论就是千万不要用 windows 的记事本

3021
01:44:04,000 --> 01:44:05,000
如果你也要用情义

3022
01:44:05,000 --> 01:44:07,000
务必记得用 utf 8 编码

3023
01:44:07,000 --> 01:44:17,000
或者说从今天开始所有的设计跟文字相关的跟编程相关的任何是有文本的东西一定要用 utf 8 来编

3024
01:44:17,000 --> 01:44:19,000
就可以来存就可以了

3025
01:44:19,000 --> 01:44:20,000
其他的都是都是邪教

3026
01:44:22,000 --> 01:44:22,000
嗯

3027
01:44:23,000 --> 01:44:23,000
哎

3028
01:44:23,000 --> 01:44:28,000
windows 记事本会在 utf 8 的编码文件里面还会加加一串字

3029
01:44:28,000 --> 01:44:28,000
是

3030
01:44:28,000 --> 01:44:29,000
加一个字节串

3031
01:44:29,000 --> 01:44:30,000
没错

3032
01:44:30,000 --> 01:44:33,000
所以这是要他为什么还要画舌天族呢

3033
01:44:33,000 --> 01:44:34,000
就就刚才你说那个问题

3034
01:44:34,000 --> 01:44:37,000
也虽然是 utf 8 了

3035
01:44:37,000 --> 01:44:39,000
但是他又加了一个这个他还是想加一些这些东西

3036
01:44:39,000 --> 01:44:41,000
他觉得保险嘛

3037
01:44:42,000 --> 01:44:43,000
让人家知道啊

3038
01:44:43,000 --> 01:44:45,000
就我我这肯定是有你扣是吧

3039
01:44:45,000 --> 01:44:45,000
对吧

3040
01:44:45,000 --> 01:44:48,000
托出去砍的是很正常的处理方式

3041
01:44:48,000 --> 01:44:48,000
好吧

3042
01:44:54,000 --> 01:44:55,000
windows 的那个坑终于踩过了

3043
01:44:55,000 --> 01:44:58,000
现在我们来讲这个 utf 8 还没讲啊

3044
01:44:58,000 --> 01:45:00,000
有什么发需要讲吗

3045
01:45:00,000 --> 01:45:01,000
呃

3046
01:45:01,000 --> 01:45:02,000
因为地方其实挺好挺好解释的

3047
01:45:02,000 --> 01:45:03,000
可以讲

3048
01:45:03,000 --> 01:45:04,000
那个说出来吧

3049
01:45:04,000 --> 01:45:05,000
我好累

3050
01:45:05,000 --> 01:45:06,000
我说

3051
01:45:06,000 --> 01:45:08,000
哈哈哈

3052
01:45:08,000 --> 01:45:11,000
为什么在这个时候就要把锅甩给我

3053
01:45:11,000 --> 01:45:13,000
因为我把该砍人都砍掉了

3054
01:45:13,000 --> 01:45:16,000
剩下都是给你讲个讲这个很很完美的世界了

3055
01:45:17,000 --> 01:45:18,000
啊

3056
01:45:18,000 --> 01:45:19,000
天好吧

3057
01:45:19,000 --> 01:45:23,000
有些有些发是一个目前看来比较完美的编码方案

3058
01:45:23,000 --> 01:45:24,000
the holy grail

3059
01:45:24,000 --> 01:45:25,000
coding

3060
01:45:26,000 --> 01:45:28,000
可以这么可以这么说吧

3061
01:45:28,000 --> 01:45:32,000
就是虽然它还是带有一些美国重心主义的色彩

3062
01:45:32,000 --> 01:45:39,000
但是呃基本上已经在战地和效率方面打了一个均衡

3063
01:45:40,000 --> 01:45:40,000
啊

3064
01:45:40,000 --> 01:45:42,000
我得有点发虽然叫有天发

3065
01:45:42,000 --> 01:45:47,000
但是它是它是一种所谓的呃 viral lens

3066
01:45:47,000 --> 01:45:49,000
就是可变长度的字符编码

3067
01:45:50,000 --> 01:45:52,000
就是说一个字或者说一个符号

3068
01:45:52,000 --> 01:45:56,000
比如说我们抢常见的这些 emo 展之类的呃

3069
01:45:56,000 --> 01:45:58,000
有可能用一个字

3070
01:45:58,000 --> 01:45:59,000
一个 byte

3071
01:45:59,000 --> 01:46:03,000
就是 8 个 bit 或者呃最多可以用到 6 个

3072
01:46:03,000 --> 01:46:04,000
目前是 6 个吧

3073
01:46:04,000 --> 01:46:06,000
6 个 byte

3074
01:46:06,000 --> 01:46:08,000
以前是 4 个啊

3075
01:46:09,000 --> 01:46:10,000
现在是 6 个

3076
01:46:10,000 --> 01:46:11,000
最多可以用到 6 个字节

3077
01:46:11,000 --> 01:46:16,000
就是 6 8 48 个 bit 来代表一个符号

3078
01:46:17,000 --> 01:46:21,000
然后其中最原始的那 128 个 asky 的字符

3079
01:46:22,000 --> 01:46:24,000
这些就就和 asky 一模一样

3080
01:46:24,000 --> 01:46:26,000
就是只需要一个字节

3081
01:46:26,000 --> 01:46:26,000
也就是说一个 utf-8 的字符就只需要一个字节

3082
01:46:26,000 --> 01:46:26,000
也就是说一个 utf-8 的字符就只需要一个字节

3083
01:46:26,000 --> 01:46:28,000
也就是说一个 utf-8 的字符就只需要一个字节

3084
01:46:28,000 --> 01:46:29,000
呃文件

3085
01:46:29,000 --> 01:46:32,000
如果他只用那个 asky 字符来写的话

3086
01:46:32,000 --> 01:46:38,000
他和 asky 编码的那个呃文件是一模一样

3087
01:46:38,000 --> 01:46:41,000
然后带有附加符号的什么

3088
01:46:41,000 --> 01:46:43,000
就比如说德语的 u 啊

3089
01:46:43,000 --> 01:46:46,000
然后什么阿拉伯语啊

3090
01:46:46,000 --> 01:46:47,000
嗯

3091
01:46:48,000 --> 01:46:50,000
俄罗斯用那个叫什么西里尔字母之类的

3092
01:46:50,000 --> 01:46:54,000
就从从这些字母开始就全都需要两个字节编码

3093
01:46:55,000 --> 01:46:58,000
然后中文则需要

3094
01:46:58,000 --> 01:46:59,000
三到四个字节

3095
01:46:59,000 --> 01:47:02,000
基本上大部分中文都是需要三个三三到三到四个字节

3096
01:47:02,000 --> 01:47:03,000
对

3097
01:47:03,000 --> 01:47:05,000
然后嗯

3098
01:47:06,000 --> 01:47:11,000
就是在尤其是那个在 unicode 里面所谓叫什么 bmp

3099
01:47:11,000 --> 01:47:12,000
bmp 的全称是什么

3100
01:47:12,000 --> 01:47:15,000
basic multilingual plane

3101
01:47:15,000 --> 01:47:18,000
呃基本多语言平面的那个 play

3102
01:47:18,000 --> 01:47:23,000
这个位面里面基本上全都在啊三个字节里面

3103
01:47:23,000 --> 01:47:27,000
所以汉字在和和用用它来编的话

3104
01:47:27,000 --> 01:47:29,000
基本上全都是三个字节编码

3105
01:47:29,000 --> 01:47:30,000
呃

3106
01:47:30,000 --> 01:47:37,000
也就是说如果你用英文 F 8 来编一个之前是用 gb 2312 编的呃

3107
01:47:37,000 --> 01:47:38,000
呃

3108
01:47:38,000 --> 01:47:38,000
文件的话

3109
01:47:38,000 --> 01:47:42,000
那他的尺寸可能会扩大 50%

3110
01:47:42,000 --> 01:47:43,000
嗯

3111
01:47:43,000 --> 01:47:47,000
这可能是他的唯一一个对对于中文使用者来说

3112
01:47:47,000 --> 01:47:50,000
但是他唯一一个比较不好的地方

3113
01:47:50,000 --> 01:47:54,000
但其实这个问题在现代都是用压缩技术的情况下

3114
01:47:54,000 --> 01:47:56,000
完全没有任何区别

3115
01:47:56,000 --> 01:47:56,000
对

3116
01:47:56,000 --> 01:47:57,000
对

3117
01:47:57,000 --> 01:47:57,000
对

3118
01:47:57,000 --> 01:47:57,000
对

3120
01:48:27,000 --> 01:48:29,000
,所以他就开始开始定义了嘛

3121
01:48:29,000 --> 01:48:36,000
所以其应用也基本上就是 2000 年之后出的操作系统才开始比较大规模使用了

3122
01:48:36,000 --> 01:48:38,000
嗯应该不是 utf-8 很早就有了

3123
01:48:38,000 --> 01:48:47,000
不,utf-8 在呃怎么说有一个官方的定义文件应该是在 2000 年

3124
01:48:47,000 --> 01:48:52,000
就是他第一版的那个第一版的那个或者说最新修订版本应该是在 2000 年

3125
01:48:52,000 --> 01:48:57,000
然后他最开始的起源可能是在 96 年就反正早的四五年内就

3126
01:48:57,000 --> 01:48:59,000
好吧

3127
01:48:59,000 --> 01:49:08,000
就是三年转,他不是他其实不是一个特别老就特别古老的那个编码或者说他是一个相对来说比较新的编码用方式

3128
01:49:08,000 --> 01:49:13,000
然后呃目前来讲应用还不是特别的广泛

3129
01:49:13,000 --> 01:49:20,000
但是我们所希望达到理想国的状态就是全世界就只用 utf-8 这样一种编码

3130
01:49:21,000 --> 01:49:25,000
哎刚才说了 windows windows 内部是不是用天发的对吧

3131
01:49:25,000 --> 01:49:26,000
是用那个没有系统

3132
01:49:26,000 --> 01:49:31,000
背部会用 utf-8 因为它是变长的变长是很不利于处理的啊

3133
01:49:31,000 --> 01:49:40,000
对所以其实 utf-8 它的最大优势是在于这个不同的就是什么跨平台的或者说可交换的这样一个场景

3134
01:49:40,000 --> 01:49:45,000
就就我们说到 utf-8 或者 utf-16 的时候其实啊

3135
01:49:45,000 --> 01:49:52,000
在现实中强调都是兼容性都是在他存到磁盘上就就序列化之后的一个结果了嗯

3136
01:49:52,000 --> 01:49:58,000
条件多量把 Joint 逮�綑上设定是比如说发动一个自己的存在的领域

3137
01:49:58,000 --> 01:49:59,000
comeback

3138
01:49:59,000 --> 01:50:00,000
但就是纯 purchasing

3139
01:50:00,000 --> 01:50:02,000
然后 arp Rams

3140
01:50:02,000 --> 01:50:04,000
我们带了这个一个很严格的选项

3141
01:50:04,000 --> 01:50:06,000
因为这个和现在 DIY 装置

3142
01:50:06,000 --> 01:50:07,000
它 requ 运和 uger

3143
01:50:07,000 --> 01:50:13,000
solamente

3144
01:50:13,000 --> 01:50:20,000
确保你走到路杆你很容易被控制

3145
01:50:20,000 --> 01:50:20,000
médias

3146
01:50:20,000 --> 01:50:21,000
这里 elemento

3147
01:50:21,000 --> 01:50:21,000
可以

3148
01:50:21,000 --> 01:50:21,000
可以

3149
01:50:21,000 --> 01:50:22,000
可以

3150
01:50:22,000 --> 01:50:23,000
第一个位如果是 0 的话

3151
01:50:23,000 --> 01:50:26,000
它肯定是 ASCII 的编码

3152
01:50:26,000 --> 01:50:30,000
然后如果你怎么辨认说接下来两个比特是一个双比特的

3153
01:50:30,000 --> 01:50:32,000
UTF-8 的字符

3154
01:50:32,000 --> 01:50:33,000
就是看第一个比

3155
01:50:33,000 --> 01:50:34,000
第一个 byte

3156
01:50:34,000 --> 01:50:35,000
sorry

3157
01:50:35,000 --> 01:50:37,000
我刚才应该说字节

3158
01:50:37,000 --> 01:50:44,000
如果你怎么你怎样才能辨认出接下来两个字节是一个双字节的 UTF-8 的编码呢

3159
01:50:44,000 --> 01:50:46,000
就是要看第一个字节的前两位

3160
01:50:46,000 --> 01:50:47,000
如果是 1

3161
01:50:47,000 --> 01:50:48,000
然后第三位是 0 的话

3162
01:50:48,000 --> 01:50:54,000
就这意味着这是一个双字节的 UTF 码

3163
01:50:54,000 --> 01:50:56,000
如果有三个 1

3164
01:50:56,000 --> 01:50:57,000
然后一个 0 的话

3165
01:50:57,000 --> 01:51:00,000
那也就意味着它是一个三字节的 UTF 码

3166
01:51:00,000 --> 01:51:01,000
然后除了第一位之外

3167
01:51:01,000 --> 01:51:04,000
其他后面的几个字节

3168
01:51:04,000 --> 01:51:05,000
每个字节的前两位都是 10

3169
01:51:05,000 --> 01:51:07,000
对

3170
01:51:07,000 --> 01:51:09,000
然后这样到

3171
01:51:09,000 --> 01:51:15,000
如果你有六个字节来表示一个码位的话

3172
01:51:15,000 --> 01:51:17,000
那它就是 111161

3173
01:51:17,000 --> 01:51:18,000
然后如果你有六个字节来表示一个码位的话

3174
01:51:18,000 --> 01:51:19,000
然后接一个 0

3175
01:51:19,000 --> 01:51:19,000
对

3176
01:51:19,000 --> 01:51:26,000
然后就可以把接下来的剩下的五个 byte 也都以 10 开头跟在它后面

3177
01:51:26,000 --> 01:51:27,000
然后来代表一个字符

3178
01:51:30,000 --> 01:51:31,000
差不多就这样了

3179
01:51:31,000 --> 01:51:32,000
还有什么要介绍

3180
01:51:32,000 --> 01:51:37,000
所以就是称此 UTF-8 16 个字节为一个东西

3181
01:51:37,000 --> 01:51:39,000
为一个 code

3182
01:51:40,000 --> 01:51:40,000
对

3183
01:51:40,000 --> 01:51:41,000
OK

3184
01:51:43,000 --> 01:51:44,000
这个道不一定

3185
01:51:44,000 --> 01:51:45,000
他的这个道不一定

3186
01:51:45,000 --> 01:51:47,000
不能再扩了吗

3187
01:51:47,000 --> 01:51:47,000
就是说

3188
01:51:47,000 --> 01:51:49,000
你可能不能用这一套

3189
01:51:49,000 --> 01:51:52,000
第一位完全是 7 个 1 一个 0 是吧

3190
01:51:52,000 --> 01:51:53,000
就是说你不

3191
01:51:53,000 --> 01:51:59,000
你可能不能在这种方式上继续扩展他的这个字符的这个量了吧

3192
01:51:59,000 --> 01:52:01,000
但是你还可以用一些别的方式

3193
01:52:01,000 --> 01:52:06,000
比如你可以通过中间串一个什么特殊的字符来告诉

3194
01:52:06,000 --> 01:52:08,000
他他他这样设计是有有目的的

3195
01:52:08,000 --> 01:52:09,000
就是说这么设计

3196
01:52:09,000 --> 01:52:12,000
他最后有一个有一个很重要的特性要要要解释一下

3197
01:52:12,000 --> 01:52:14,000
不然的话就很容易乱掉

3198
01:52:14,000 --> 01:52:16,000
嗯

3199
01:52:16,000 --> 01:52:17,000
就是说因为

3200
01:52:17,000 --> 01:52:22,000
因为变变长和就为什么刚才讲那个操作系统内部执行的时候都一定是用定场的

3201
01:52:22,000 --> 01:52:23,000
定场

3202
01:52:23,000 --> 01:52:25,000
他如果做那个叫什么跳转啊

3203
01:52:25,000 --> 01:52:27,000
计算 offset 就是那个位移的话

3204
01:52:27,000 --> 01:52:28,000
但是很简单的

3205
01:52:28,000 --> 01:52:30,000
当然他可以乘以整数的课

3206
01:52:30,000 --> 01:52:30,000
没错没错

3207
01:52:30,000 --> 01:52:32,000
但是变长的话就不具备这个问题了

3208
01:52:32,000 --> 01:52:35,000
变长的话要要避免的一个很大的问题

3209
01:52:35,000 --> 01:52:37,000
就是说在一个相当长的文本里面

3210
01:52:37,000 --> 01:52:40,000
假设部分字符出现问题

3211
01:52:40,000 --> 01:52:47,000
可能是因为磁盘存储的介质的损坏或者网络传输的问题导致中间部分那个字节发生变化的

3212
01:52:47,000 --> 01:52:51,000
我们能够很快的辨认出来那部分哪部分是坏的

3213
01:52:51,000 --> 01:52:58,000
并且在那个坏的那个字节或者那几个字节之后立即重新的找回你的那个起点

3214
01:52:58,000 --> 01:52:59,000
就是你怎么因为是变长

3215
01:52:59,000 --> 01:53:03,000
你不知道接下来的那个那个那个字符的起点在哪里吗

3216
01:53:04,000 --> 01:53:06,000
就中间几个码坏掉

3217
01:53:06,000 --> 01:53:06,000
对对对

3218
01:53:06,000 --> 01:53:08,000
就说这个是一种很危险的

3219
01:53:08,000 --> 01:53:12,000
就是很很不健壮的一种一种设计嘛

3220
01:53:12,000 --> 01:53:14,000
所以但是 UTF-8 这种设计

3221
01:53:14,000 --> 01:53:17,000
它可以导致说他就你能够很快的叫做 self-sale

3222
01:53:17,000 --> 01:53:20,000
就是可以自己同步

3223
01:53:20,000 --> 01:53:22,000
因为你只要看每一个字节

3224
01:53:22,000 --> 01:53:23,000
因为你自然搜索的是每个字节

3225
01:53:23,000 --> 01:53:25,000
每个字节的这样去跳嘛

3226
01:53:25,000 --> 01:53:27,000
你只要看每个字节的前两位

3227
01:53:27,000 --> 01:53:34,000
你就能够知道他这个是不是某一个这个一个这个字字就 character 的起点

3228
01:53:34,000 --> 01:53:36,000
因为如果他是 10 开头的话

3229
01:53:36,000 --> 01:53:37,000
或者是零几开的话

3230
01:53:37,000 --> 01:53:40,000
他肯定不是他肯定肯定他是第一位是零的话

3231
01:53:40,000 --> 01:53:41,000
他肯定是一个单一字节

3232
01:53:41,000 --> 01:53:43,000
他就是一个字符的起点

3233
01:53:43,000 --> 01:53:43,000
对吧

3234
01:53:43,000 --> 01:53:45,000
然后如果他是 10 开头的话

3235
01:53:45,000 --> 01:53:47,000
他肯定不是他是前面一个字符的一部分

3236
01:53:47,000 --> 01:53:47,000
对吧

3237
01:53:47,000 --> 01:53:48,000
对

3238
01:53:48,000 --> 01:53:49,000
所以他可以跳过去

3239
01:53:49,000 --> 01:53:51,000
就可以直接 skip

3240
01:53:51,000 --> 01:53:54,000
直到你又发现一个第一位是零

3241
01:53:54,000 --> 01:53:58,000
或者或者是 1111 这种开头的

3242
01:53:58,000 --> 01:53:59,000
就是根据那个前缀那个表嘛

3243
01:53:59,000 --> 01:54:02,000
所以这个是一个很重要的特性

3244
01:54:02,000 --> 01:54:04,000
如果说一旦这个结构被破坏的话

3245
01:54:04,000 --> 01:54:07,000
这个 UTF-8 的见状性就不复存在了

3246
01:54:07,000 --> 01:54:10,000
对在编码方案的这个层面确实是这样

3247
01:54:10,000 --> 01:54:11,000
我刚刚想说的意思就是说

3248
01:54:11,000 --> 01:54:14,000
其实我们可能不必担心

3249
01:54:14,000 --> 01:54:16,000
用 UTF-8 这种编码方案

3250
01:54:16,000 --> 01:54:17,000
会导致有些问题

3251
01:54:17,000 --> 01:54:20,000
有一天说我们想用的字符数不够用

3252
01:54:20,000 --> 01:54:20,000
对

3253
01:54:20,000 --> 01:54:21,000
对

3254
01:54:21,000 --> 01:54:23,000
他其实可以可以添加别的方案进去

3255
01:54:23,000 --> 01:54:25,000
将这个范围扩了更多

3256
01:54:25,000 --> 01:54:27,000
就反正其实起码到目前为止

3257
01:54:27,000 --> 01:54:31,000
六个字节的这个飞标的也已经就足够用了吧

3258
01:54:31,000 --> 01:54:32,000
对对

3259
01:54:32,000 --> 01:54:36,000
希望我们不要再往这个 unicode 垃圾堆里面再塞东西了

3260
01:54:37,000 --> 01:54:40,000
可是 unicode 这个垃圾堆还一直都在

3261
01:54:40,000 --> 01:54:43,000
而且他现在有一个非常重大的缺口

3262
01:54:43,000 --> 01:54:44,000
理论上可以无限 c

3263
01:54:44,000 --> 01:54:46,000
就是那个 emoji 的这个缺口

3264
01:54:47,000 --> 01:54:50,000
表情文字

3265
01:54:50,000 --> 01:54:52,000
那个那个坑我们是这次讲还是下次讲

3266
01:54:52,000 --> 01:54:55,000
我们可以专门找一次

3267
01:54:55,000 --> 01:54:56,000
专门来讲

3268
01:54:56,000 --> 01:54:58,000
因为这可以专门找一些来讲各种各样有趣的

3269
01:54:58,000 --> 01:54:58,000
OK

3270
01:54:58,000 --> 01:54:59,000
就是说

3271
01:54:59,000 --> 01:55:03,000
以及有一些根本就不知道为什么要放在那里

3272
01:55:03,000 --> 01:55:07,000
因为这里面有一个一个悬浮在半空中的男人

3273
01:55:07,000 --> 01:55:08,000
对吧

3274
01:55:08,000 --> 01:55:10,000
这个 emoji 到底有什么意义

3275
01:55:10,000 --> 01:55:16,000
但就是说这个是一个就象形文字始终是要解决的问题

3276
01:55:16,000 --> 01:55:17,000
就是就是

3277
01:55:17,000 --> 01:55:22,000
他是不是一个封闭的集合

3278
01:55:22,000 --> 01:55:22,000
对对

3279
01:55:22,000 --> 01:55:24,000
你们你很就很麻烦

3280
01:55:24,000 --> 01:55:25,000
你说不清楚

3281
01:55:25,000 --> 01:55:27,000
比如说你刚才你问他问那个问题

3282
01:55:27,000 --> 01:55:29,000
一个漂浮在半空中的男人表达了这么一个象形文字

3283
01:55:29,000 --> 01:55:30,000
emoji

3284
01:55:30,000 --> 01:55:33,000
他和我们考古挖出一个固执

3285
01:55:33,000 --> 01:55:35,000
这里面写了一个通甲字

3286
01:55:35,000 --> 01:55:35,000
有什么区别

3287
01:55:35,000 --> 01:55:37,000
通甲字至少有意义

3288
01:55:37,000 --> 01:55:38,000
他写错了

3289
01:55:38,000 --> 01:55:40,000
为什么他写错了就有意义

3290
01:55:40,000 --> 01:55:41,000
我们要表达

3291
01:55:41,000 --> 01:55:43,000
现代人要表达一个东西就没有意义呢

3292
01:55:43,000 --> 01:55:44,000
就我觉得这种

3293
01:55:44,000 --> 01:55:46,000
这种就是你

3294
01:55:46,000 --> 01:55:47,000
这是个政治问题

3295
01:55:47,000 --> 01:55:47,000
对吧

3296
01:55:47,000 --> 01:55:47,000
对吧

3297
01:55:47,000 --> 01:55:48,000
对你去考他的这个

3298
01:55:48,000 --> 01:55:49,000
不是通甲字

3299
01:55:49,000 --> 01:55:51,000
你至少知道他有意义

3300
01:55:51,000 --> 01:55:54,000
但是这个就至少你可以推测出来

3301
01:55:54,000 --> 01:55:55,000
他代表的意义是什么

3302
01:55:55,000 --> 01:55:57,000
可是这个悬浮在空中的男人

3303
01:55:57,000 --> 01:55:58,000
这个意义是什么

3304
01:55:58,000 --> 01:55:59,000
都很多人不知道的

3305
01:55:59,000 --> 01:56:01,000
我也不知道

3306
01:56:01,000 --> 01:56:02,000
你那解释一下

3307
01:56:02,000 --> 01:56:04,000
不是这个意义

3308
01:56:04,000 --> 01:56:10,000
这个符号最开始是出现在微软的 webdings 里面

3309
01:56:10,000 --> 01:56:15,000
然后是一个

3310
01:56:15,000 --> 01:56:16,000
马威多少

3311
01:56:16,000 --> 01:56:17,000
我是

3312
01:56:17,000 --> 01:56:21,000
你怎么搜

3313
01:56:21,000 --> 01:56:22,000
悬浮在办公中的男人吗

3314
01:56:22,000 --> 01:56:25,000
leviating man emoji

3315
01:56:25,000 --> 01:56:26,000
对

3316
01:56:26,000 --> 01:56:27,000
man in business suit

3317
01:56:27,000 --> 01:56:28,000
leviating

3318
01:56:28,000 --> 01:56:30,000
就搜这个

3319
01:56:30,000 --> 01:56:32,000
U 1 加 5

3320
01:56:32,000 --> 01:56:35,000
U 加 1 F 574

3321
01:56:35,000 --> 01:56:38,000
浮在地面上的西装男

3322
01:56:38,000 --> 01:56:41,000
对

3323
01:56:41,000 --> 01:56:42,000
这是什么鬼

3324
01:56:42,000 --> 01:56:43,000
这个

3325
01:56:43,000 --> 01:56:44,000
这个

3326
01:56:44,000 --> 01:56:46,000
Emoji 最开始出现在 webding 里面

3327
01:56:46,000 --> 01:56:46,000
然后

3328
01:56:46,000 --> 01:56:47,000
他的

3329
01:56:47,000 --> 01:56:49,000
意义是一个感叹号

3330
01:56:49,000 --> 01:56:52,000
然后这个感叹号的风格

3331
01:56:52,000 --> 01:56:54,000
就像一个 rude boy logo

3332
01:56:54,000 --> 01:56:55,000
然后是在

3333
01:56:55,000 --> 01:57:00,000
是一个叫做 the specials 的乐队

3334
01:57:00,000 --> 01:57:03,000
所出的一张照片里面

3335
01:57:03,000 --> 01:57:09,000
你要是按日本念读音的话

3336
01:57:09,000 --> 01:57:10,000
就是 emoji

3337
01:57:10,000 --> 01:57:11,000
emoji

3338
01:57:11,000 --> 01:57:11,000
对

3339
01:57:11,000 --> 01:57:12,000
emoji

3340
01:57:12,000 --> 01:57:14,000
这么说

3341
01:57:14,000 --> 01:57:15,000
他确实有点像一个感叹号

3342
01:57:15,000 --> 01:57:17,000
因为就是他的那个人

3343
01:57:17,000 --> 01:57:19,000
悬浮在空中地下有个投影

3344
01:57:19,000 --> 01:57:21,000
正好是感叹号的那一点

3345
01:57:21,000 --> 01:57:27,000
好吧

3346
01:57:27,000 --> 01:57:28,000
什么鬼

3347
01:57:28,000 --> 01:57:28,000
对

3348
01:57:28,000 --> 01:57:32,000
这个玩意在 uniqlo 720 的时候进入了 uniqlo

3349
01:57:32,000 --> 01:57:36,000
所以吴涛在这个 emoji 这个

3350
01:57:36,000 --> 01:57:39,000
这个争论里面是持这个保守派的

3351
01:57:39,000 --> 01:57:41,000
什么叫保守派

3352
01:57:41,000 --> 01:57:43,000
左派和右派的区别是什么

3353
01:57:43,000 --> 01:57:43,000
右派是应该

3354
01:57:43,000 --> 01:57:44,000
就是 uniqlo 的那个工作组里面就说我们不要加这个

3355
01:57:44,000 --> 01:57:45,000
就是 uniqlo 的那个工作组里面就说我们不要加这个保守派的

3356
01:57:45,000 --> 01:57:45,000
就是 uniqlo 的那个工作组里面就说我们不要加这个保守派的

3357
01:57:45,000 --> 01:57:46,000
就是 uniqlo 的那个工作组里面就说我们不要加这个保守派的

3358
01:57:47,000 --> 01:57:48,000
这么多乱七八糟的东西进来

3359
01:57:48,000 --> 01:57:51,000
这个是我觉得界线是很难界定的

3360
01:57:51,000 --> 01:57:53,000
你怎么区分什么叫乱七八糟

3361
01:57:53,000 --> 01:57:58,000
就是我就觉得这个就是象形文字不封闭的导致的一个必然结果嘛

3362
01:57:58,000 --> 01:57:58,000
对

3363
01:57:58,000 --> 01:58:00,000
但主要就是他不是一个封闭的集合嘛

3364
01:58:00,000 --> 01:58:02,000
退一万步

3365
01:58:02,000 --> 01:58:02,000
对啊

3366
01:58:02,000 --> 01:58:05,000
这个边界随时都在扩的就很麻烦

3367
01:58:05,000 --> 01:58:05,000
对

3368
01:58:05,000 --> 01:58:07,000
所以这个东西是一个深坑

3369
01:58:07,000 --> 01:58:08,000
没有没有办法

3370
01:58:08,000 --> 01:58:13,000
就是如果说这个 uniqlo 的里面那帮人觉得不应该加 email 举进来的话

3371
01:58:13,000 --> 01:58:16,000
那也不要从固执的里面找那个生 p 字进来的

3372
01:58:16,000 --> 01:58:16,000
是一个原理嘛

3373
01:58:16,000 --> 01:58:18,000
嗯

3374
01:58:18,000 --> 01:58:18,000
对

3375
01:58:18,000 --> 01:58:22,000
事实上将这个 emoji 当成一种字符

3376
01:58:22,000 --> 01:58:25,000
这个观念本身就是一个比较激进的观念

3377
01:58:25,000 --> 01:58:28,000
它本身不是一种文字

3378
01:58:28,000 --> 01:58:32,000
但是从技术上的实现来讲的话倒是 OK 的

3379
01:58:32,000 --> 01:58:34,000
因为你从 font 的技术上实现来讲

3380
01:58:34,000 --> 01:58:35,000
我就是一个码

3381
01:58:35,000 --> 01:58:38,000
然后显示一个 griff 嘛

3382
01:58:38,000 --> 01:58:40,000
griff 其实就是一个图案嘛

3383
01:58:40,000 --> 01:58:40,000
对吧

3384
01:58:40,000 --> 01:58:42,000
从技术显示来讲

3385
01:58:42,000 --> 01:58:43,000
这就是很正常的

3386
01:58:43,000 --> 01:58:46,000
它是一个典型由技术来推动标准

3387
01:58:46,000 --> 01:58:46,000
就由技术显示来推动标准

3388
01:58:46,000 --> 01:58:51,000
就由实作来推动这个标准改变的这样一个问题了

3389
01:58:51,000 --> 01:58:51,000
好吧

3390
01:58:51,000 --> 01:58:53,000
emoji 咱们还是下次来说

3391
01:58:53,000 --> 01:58:54,000
对对对

3392
01:58:54,000 --> 01:58:57,000
而且我觉得就是它还推出来一个扩展

3393
01:58:57,000 --> 01:59:02,000
就是一个三维的符号应不应该算作一个 emoji

3394
01:59:04,000 --> 01:59:08,000
一个三维的符号是什么意思

3395
01:59:08,000 --> 01:59:09,000
就是同样一个

3396
01:59:09,000 --> 01:59:13,000
有一个平面的脸和一个立体的脸

3397
01:59:13,000 --> 01:59:14,000
它算一个符号吗

3398
01:59:14,000 --> 01:59:15,000
啊

3399
01:59:15,000 --> 01:59:15,000
啊

3400
01:59:15,000 --> 01:59:16,000
这就刚才我们说的那个符号

3401
01:59:16,000 --> 01:59:18,000
我说的那个户的三种写法

3402
01:59:18,000 --> 01:59:20,000
它算一个还是算三个呢

3403
01:59:20,000 --> 01:59:21,000
对

3404
01:59:21,000 --> 01:59:22,000
没错

3405
01:59:22,000 --> 01:59:24,000
就很难去划分这个东西

3406
01:59:24,000 --> 01:59:29,000
所以我觉得不把那个到底是表音表意还是表形

3407
01:59:29,000 --> 01:59:29,000
这个东西定下来

3408
01:59:29,000 --> 01:59:31,000
这个东西永远都是有争议的

3409
01:59:31,000 --> 01:59:32,000
嗯

3410
01:59:32,000 --> 01:59:34,000
好吧

3411
01:59:34,000 --> 01:59:35,000
那那要不刹个车

3412
01:59:35,000 --> 01:59:36,000
然后我们下次接着讲

3413
01:59:36,000 --> 01:59:37,000
OK

3414
01:59:37,000 --> 01:59:40,000
所以我们今天究竟有没有讲到乱码这些事情

3415
01:59:40,000 --> 01:59:43,000
我大概还是讲了吧

3416
01:59:43,000 --> 01:59:44,000
大概还是讲到了

3417
01:59:44,000 --> 01:59:44,000
对

3418
01:59:44,000 --> 01:59:45,000
嗯

3419
01:59:45,000 --> 01:59:46,000
嗯

3420
01:59:46,000 --> 01:59:46,000
嗯

3421
01:59:46,000 --> 01:59:46,000
嗯

3422
01:59:46,000 --> 01:59:46,000
嗯

3424
02:00:16,000 --> 02:00:17,000
嗯

3425
02:00:17,000 --> 02:00:17,000
嗯

3426
02:00:17,000 --> 02:00:17,000
嗯

3427
02:00:17,000 --> 02:00:17,000
嗯

3428
02:00:17,000 --> 02:00:17,000
嗯

3429
02:00:17,000 --> 02:00:17,000
嗯

3430
02:00:17,000 --> 02:00:17,000
嗯

3431
02:00:17,000 --> 02:00:18,000
嗯

3432
02:00:18,000 --> 02:00:18,000
嗯

3433
02:00:18,000 --> 02:00:18,000
嗯

3434
02:00:18,000 --> 02:00:18,000
嗯

3435
02:00:18,000 --> 02:00:18,000
嗯

3436
02:00:18,000 --> 02:00:18,000
嗯

3437
02:00:18,000 --> 02:00:18,000
嗯

3438
02:00:18,000 --> 02:00:18,000
嗯

3439
02:00:18,000 --> 02:00:18,000
嗯

3440
02:00:18,000 --> 02:00:18,000
嗯

3441
02:00:18,000 --> 02:00:18,000
嗯

3442
02:00:18,000 --> 02:00:18,000
嗯

3443
02:00:18,000 --> 02:00:18,000
嗯

3444
02:00:18,000 --> 02:00:19,000
嗯

3445
02:00:19,000 --> 02:00:19,000
嗯

3446
02:00:19,000 --> 02:00:19,000
嗯

3447
02:00:19,000 --> 02:00:19,000
嗯

3448
02:00:19,000 --> 02:00:19,000
嗯

3449
02:00:19,000 --> 02:00:19,000
嗯

3450
02:00:19,000 --> 02:00:19,000
嗯

3451
02:00:19,000 --> 02:00:19,000
嗯

3452
02:00:19,000 --> 02:00:19,000
嗯

3453
02:00:19,000 --> 02:00:19,000
嗯

3454
02:00:19,000 --> 02:00:19,000
嗯

3455
02:00:19,000 --> 02:00:19,000
嗯

3456
02:00:19,000 --> 02:00:19,000
嗯

3457
02:00:19,000 --> 02:00:25,000
正确的编译出来啊编码编出来然后传输过来然后�是在你的一些浏览器里面

3458
02:00:25,000 --> 02:00:29,000
对它已经经过了和各层的处理

3459
02:00:29,000 --> 02:00:39,000
不过实际上那个我们应该知道就是说呃像 html 它的这个解析规则里它的这个健壮性还是比较强的他应该能容一定的编码错误的

3460
02:00:39,000 --> 02:00:42,000
嗯

3461
02:00:42,000 --> 02:00:42,000
是的

3462
02:00:42,000 --> 02:00:50,000
那当然了要不然的话你想在传输过程中又是掉包又是乱又顺序又会乱的对吧

3463
02:00:50,000 --> 02:00:56,000
各种各样我指的是就是比如说那个我这个浏览器把它误认成另一种与它不符合的编码

3464
02:00:56,000 --> 02:01:01,000
其实在不少情况下就因为大家都对 asky 的兼容比较好嘛

3465
02:01:01,000 --> 02:01:07,000
那么 html 用到一些关键的这个标记符号都是 asky 里面的

3466
02:01:07,000 --> 02:01:10,000
所以它其实还是可以正确的渲染一部分呢

3467
02:01:10,000 --> 02:01:11,000
嗯

3468
02:01:11,000 --> 02:01:12,000
嗯

3469
02:01:12,000 --> 02:01:12,000
嗯

3470
02:01:12,000 --> 02:01:12,000
嗯

3471
02:01:12,000 --> 02:01:12,000
嗯

3472
02:01:12,000 --> 02:01:12,000
嗯

3473
02:01:12,000 --> 02:01:12,000
嗯

3474
02:01:12,000 --> 02:01:12,000
嗯

3475
02:01:12,000 --> 02:01:14,000
,

3476
02:01:14,000 --> 02:01:14,000
嗯

3477
02:01:14,000 --> 02:01:14,000
嗯

3478
02:01:14,000 --> 02:01:17,000
好吧

3479
02:01:17,000 --> 02:01:18,000
那今天时间有限

3480
02:01:18,000 --> 02:01:21,000
那就暂时先杀到这边

3481
02:01:21,000 --> 02:01:23,000
我们下次再接着讲

3482
02:01:23,000 --> 02:01:27,000
感谢大家的收听

3483
02:01:27,000 --> 02:01:30,000
那大家可以从各种社交网络上关注我们

3484
02:01:30,000 --> 02:01:32,000
那自弹自唱呢

3485
02:01:32,000 --> 02:01:37,000
在新浪微博微信公众号以及推特的账号的名字都是 the type

3486
02:01:37,000 --> 02:01:38,000
thetype

3487
02:01:38,000 --> 02:01:42,000
在 facebook 上面的可以通过 type is beautiful 找到我们

3488
02:01:42,000 --> 02:01:42,000
那我们下期再见

3489
02:01:42,000 --> 02:01:46,000
那也欢迎大家用邮件的方式来给我们写反馈

3490
02:01:46,000 --> 02:01:49,000
我们的邮箱是 podcastatthetype.com

3491
02:01:49,000 --> 02:01:51,000
podcast 的拼写是 podcst

3492
02:01:51,000 --> 02:01:54,000
the type 的拼写是 the type 的拼写是 thetype

3493
02:01:54,000 --> 02:01:57,000
podcastatthetype.com

3494
02:01:57,000 --> 02:01:58,000
欢迎大家给我们捐款

3495
02:01:58,000 --> 02:02:02,000
让我们努力把节目做成最好的全球最好的字体播客

3496
02:02:02,000 --> 02:02:06,000
感谢收听 ipnpodcast

3497
02:02:06,000 --> 02:02:09,000
网络直下的 it 技术主题娱乐节目内核恐慌

3498
02:02:09,000 --> 02:02:10,000
我们号称 hardcore

3499
02:02:10,000 --> 02:02:10,000
但是也没有干货

3500
02:02:10,000 --> 02:02:12,000
想听人听不想听人就别说了

3501
02:02:12,000 --> 02:02:13,000
别听了

3502
02:02:13,000 --> 02:02:14,000
你可以为本节目捐款

3503
02:02:14,000 --> 02:02:16,000
地址是 kernelpanic.fm

3504
02:02:16,000 --> 02:02:16,000
slashdonate

3505
02:02:16,000 --> 02:02:18,000
捐款金额随意

3506
02:02:18,000 --> 02:02:19,000
只要是八的正整数倍就可以

3507
02:02:19,000 --> 02:02:20,000
捐款不会给你带什么

3508
02:02:20,000 --> 02:02:22,000
不捐也不会让你失去什么

3509
02:02:22,000 --> 02:02:24,000
我们的口号是 no hard feelings

3510
02:02:24,000 --> 02:02:25,000
如果你有任何反馈

3511
02:02:25,000 --> 02:02:27,000
可以发邮件到 kernelpanic

3512
02:02:27,000 --> 02:02:28,000
atipn.li

3513
02:02:28,000 --> 02:02:30,000
同时也欢迎你收听

3514
02:02:30,000 --> 02:02:32,000
Rio 主持的风头圈

3515
02:02:32,000 --> 02:02:34,000
以及 ipn 旗下的其他几档节目

3516
02:02:34,000 --> 02:02:35,000
未知到太一来了

3517
02:02:35,000 --> 02:02:36,000
流行通信

3518
02:02:36,000 --> 02:02:37,000
high story

3519
02:02:37,000 --> 02:02:38,000
阴影像无词源

3520
02:02:38,000 --> 02:02:39,000
博物志

3521
02:02:39,000 --> 02:02:39,000
选美

3522
02:02:39,000 --> 02:02:40,000
陛下观一天世界

3523
02:02:40,000 --> 02:02:41,000
时尚怪物

3524
02:02:42,000 --> 02:02:44,000
我们下期节目再会

3525
02:02:44,000 --> 02:02:45,000
拜拜

3526
02:02:45,000 --> 02:02:46,000
拜拜

