1
00:00:00,000 --> 00:00:04,000
大家好,欢迎收听第八期的内核恐慌,我是 Ryo

2
00:00:04,000 --> 00:00:05,000
我是吴涛

3
00:00:05,000 --> 00:00:06,000
新年快乐

4
00:00:06,000 --> 00:00:12,000
所以今天我们节目开始之前还是先做一个 follow up 吧

5
00:00:12,000 --> 00:00:13,000
对

6
00:00:13,000 --> 00:00:18,000
先是我自我检讨,我又念错了,应该是称木皆是

7
00:00:18,000 --> 00:00:22,000
你念唐木皆是,我听的时候就觉得好像不太对

8
00:00:22,000 --> 00:00:24,000
然后就查了一下果然不是唐木皆是

9
00:00:24,000 --> 00:00:27,000
但 too late,就对

10
00:00:27,000 --> 00:00:30,000
然后我也念错了字

11
00:00:30,000 --> 00:00:33,000
而且这个错我觉得有点

12
00:00:33,000 --> 00:00:35,000
不可原谅是不是

13
00:00:35,000 --> 00:00:40,000
原谅总是可以原谅,我总是原谅自己

14
00:00:40,000 --> 00:00:44,000
就是这个粘贴我总是念成粘贴

15
00:00:44,000 --> 00:00:48,000
但我觉得首先粘这个字是个多音字吧

16
00:00:48,000 --> 00:00:53,000
然后我个人在听到粘贴的时候会觉得有点不舒服

17
00:00:53,000 --> 00:00:57,000
所以我可能在很小的时候就知道我读错了

18
00:00:57,000 --> 00:00:59,000
但是我一直都没有改过

19
00:00:59,000 --> 00:01:02,000
其实这个事情我也一直挺模糊的

20
00:01:02,000 --> 00:01:03,000
后来我还专门去查了一下

21
00:01:03,000 --> 00:01:05,000
就是有听众指出这个错误之后

22
00:01:05,000 --> 00:01:07,000
我专门去查了一下词典

23
00:01:07,000 --> 00:01:09,000
我说哎呀原来是这样的

24
00:01:09,000 --> 00:01:13,000
就是说作动词的时候一定是念粘贴的

25
00:01:13,000 --> 00:01:14,000
然后名词的话

26
00:01:14,000 --> 00:01:16,000
这个就是米字旁这个字

27
00:01:16,000 --> 00:01:21,000
米字旁这个字念粘的时候只是做一个人的姓而已

28
00:01:21,000 --> 00:01:22,000
就姓氏

29
00:01:22,000 --> 00:01:25,000
然后粘性的粘是另外一个

30
00:01:25,000 --> 00:01:26,000
是这个叫鼠字旁

31
00:01:26,000 --> 00:01:27,000
不是米字旁

32
00:01:27,000 --> 00:01:30,000
米字旁的粘在某些词典里面说

33
00:01:30,000 --> 00:01:32,000
它是鼠字旁的那个粘的一体字

34
00:01:32,000 --> 00:01:33,000
怎么这么乱

35
00:01:33,000 --> 00:01:34,000
对

36
00:01:34,000 --> 00:01:40,000
所以我做内核恐慌以来最大的收获之一就是语文变得好一点

37
00:01:40,000 --> 00:01:45,000
话也讲的溜了是吧

38
00:01:45,000 --> 00:01:46,000
对

39
00:01:46,000 --> 00:01:49,000
这是一个出乎意料的收获

40
00:01:49,000 --> 00:01:50,000
加引号的收获

41
00:01:50,000 --> 00:01:52,000
这也是个进步

42
00:01:52,000 --> 00:01:53,000
其实我也是

43
00:01:53,000 --> 00:01:55,000
对

44
00:01:55,000 --> 00:01:56,000
其实就

45
00:01:56,000 --> 00:01:57,000
嗯

46
00:01:57,000 --> 00:02:00,000
我们两个在上一期录音的时候说

47
00:02:00,000 --> 00:02:05,000
如果我们下一期做 feedback 的话

48
00:02:05,000 --> 00:02:08,000
会把前两期的 feedback 综合在一起

49
00:02:08,000 --> 00:02:10,000
反馈给大家

50
00:02:10,000 --> 00:02:16,000
但是目前看来不知道是因为过节的缘故还是怎么样

51
00:02:16,000 --> 00:02:19,000
就过去两期好像没有什么反响

52
00:02:19,000 --> 00:02:22,000
不管是在社交网络上还是在邮件里面

53
00:02:22,000 --> 00:02:25,000
当然就还是有一些反响

54
00:02:25,000 --> 00:02:27,000
但没有我们想象的反响

55
00:02:27,000 --> 00:02:27,000
但是我们两个在上一期录音的时候说

56
00:02:27,000 --> 00:02:27,000
我们两个在上一期录音的时候说

57
00:02:27,000 --> 00:02:29,000
因为我开始预想的是

58
00:02:29,000 --> 00:02:34,000
至少我们在做 memory management 那一期

59
00:02:34,000 --> 00:02:36,000
可能放了很多很低级的错误

60
00:02:36,000 --> 00:02:39,000
但目前看来没有什么人指出

61
00:02:39,000 --> 00:02:41,000
反而是比如说粘贴粘成粘贴

62
00:02:41,000 --> 00:02:43,000
粘贴粘成粘贴这样低级的语文错误

63
00:02:43,000 --> 00:02:45,000
总是有听众指出来

64
00:02:45,000 --> 00:02:50,000
不过可能也是因为播客媒介的限制

65
00:02:50,000 --> 00:02:54,000
就是有时候你要挑错

66
00:02:54,000 --> 00:02:55,000
你总得知道你要错在哪里

67
00:02:55,000 --> 00:02:55,000
对吧

68
00:02:55,000 --> 00:02:57,000
但是有时候你听过之后

69
00:02:57,000 --> 00:02:58,000
不一定能记得下来

70
00:02:58,000 --> 00:03:00,000
或者是你当时想听到了

71
00:03:00,000 --> 00:03:02,000
但是可能一下没联系到之前

72
00:03:02,000 --> 00:03:03,000
他说了什么东西

73
00:03:03,000 --> 00:03:03,000
所以

74
00:03:03,000 --> 00:03:06,000
就好像我们在开车的时候

75
00:03:06,000 --> 00:03:10,000
一起听初战分配

76
00:03:10,000 --> 00:03:12,000
或者是流行通信的时候

77
00:03:12,000 --> 00:03:12,000
对啊

78
00:03:12,000 --> 00:03:15,000
这地方说的好像不太对

79
00:03:15,000 --> 00:03:16,000
然后讨论一阵

80
00:03:16,000 --> 00:03:18,000
但是也不会想起来

81
00:03:18,000 --> 00:03:21,000
要给主持人一些反馈

82
00:03:21,000 --> 00:03:22,000
对啊

83
00:03:22,000 --> 00:03:24,000
所以这里就是有这个问题

84
00:03:24,000 --> 00:03:26,000
大概咱们两个已经在

85
00:03:26,000 --> 00:03:27,000
已经在

86
00:03:27,000 --> 00:03:29,000
被很多人在驾驶舱里面骂了很多次了

87
00:03:29,000 --> 00:03:30,000
但

88
00:03:30,000 --> 00:03:31,000
这俩傻逼的

89
00:03:31,000 --> 00:03:32,000
对又说错了

90
00:03:32,000 --> 00:03:34,000
这种低级错误都犯哈哈

91
00:03:34,000 --> 00:03:36,000
但咱们两个也都听不到

92
00:03:36,000 --> 00:03:36,000
所以

93
00:03:36,000 --> 00:03:40,000
所以还是应该求反馈

94
00:03:40,000 --> 00:03:40,000
就是

95
00:03:40,000 --> 00:03:41,000
不要再

96
00:03:41,000 --> 00:03:43,000
等一下默默的骂完

97
00:03:43,000 --> 00:03:44,000
就爽了

98
00:03:44,000 --> 00:03:45,000
我们还是要多听一下

99
00:03:45,000 --> 00:03:45,000
然后

100
00:03:45,000 --> 00:03:47,000
对不仅要当时骂

101
00:03:47,000 --> 00:03:48,000
还要这个

102
00:03:48,000 --> 00:03:50,000
事后还得接着来信

103
00:03:50,000 --> 00:03:51,000
这个对

104
00:03:51,000 --> 00:03:54,000
记录下来发源

105
00:03:54,000 --> 00:03:56,000
但是我们该不该是另一回事

106
00:03:56,000 --> 00:03:56,000
对

107
00:03:57,000 --> 00:04:00,000
那起码有机会可以共同提高嘛

108
00:04:00,000 --> 00:04:03,000
就是如果听众朋友们也有

109
00:04:03,000 --> 00:04:05,000
犯我们类似错误的

110
00:04:05,000 --> 00:04:06,000
就起码我们在

111
00:04:06,000 --> 00:04:08,000
点讨自己错误的时候

112
00:04:08,000 --> 00:04:09,000
你们也能够

113
00:04:09,000 --> 00:04:11,000
知道自己过往的哪里错了

114
00:04:11,000 --> 00:04:12,000
对

115
00:04:12,000 --> 00:04:14,000
而且我觉得一个 podcast

116
00:04:14,000 --> 00:04:15,000
可能最恐怖的事情

117
00:04:15,000 --> 00:04:16,000
不是被很多很多人骂

118
00:04:16,000 --> 00:04:18,000
而是根本没有人去理睬

119
00:04:18,000 --> 00:04:19,000
所以

120
00:04:19,000 --> 00:04:21,000
如果一个 podcast

121
00:04:21,000 --> 00:04:23,000
总是得不到回应的话

122
00:04:23,000 --> 00:04:24,000
也许就觉得

123
00:04:24,000 --> 00:04:25,000
让制作人觉得

124
00:04:25,000 --> 00:04:26,000
做下去有什么意义呢

125
00:04:26,000 --> 00:04:28,000
但是如果有很多人骂的话

126
00:04:28,000 --> 00:04:29,000
反而有可能我就说

127
00:04:29,000 --> 00:04:31,000
这个还是有点人听的

128
00:04:31,000 --> 00:04:31,000
那我就继续做

129
00:04:31,000 --> 00:04:33,000
你说是不是

130
00:04:33,000 --> 00:04:35,000
你说不是贱吗

131
00:04:35,000 --> 00:04:36,000
对

132
00:04:36,000 --> 00:04:38,000
轮穿不了轮穿

133
00:04:38,000 --> 00:04:39,000
anyway

134
00:04:39,000 --> 00:04:42,000
接下来的一条反馈是

135
00:04:42,000 --> 00:04:44,000
听众 lock.e

136
00:04:44,000 --> 00:04:45,000
发给我的

137
00:04:45,000 --> 00:04:48,000
发给我们的邮箱里面的一条

138
00:04:48,000 --> 00:04:49,000
说他说

139
00:04:49,000 --> 00:04:51,000
Sweet is 没有 gabbage collection

140
00:04:51,000 --> 00:04:53,000
这个是正确的

141
00:04:53,000 --> 00:04:54,000
因为我又回去看了一遍

142
00:04:54,000 --> 00:04:56,000
因为我之所以会有

143
00:04:56,000 --> 00:04:56,000
另外

144
00:04:56,000 --> 00:04:58,000
Sweet 有 GC 的印象是

145
00:04:58,000 --> 00:05:00,000
在最开始的那个

146
00:05:00,000 --> 00:05:03,000
Sweet 的 announcement 的视频里面

147
00:05:03,000 --> 00:05:06,000
当时有一幅图嘛

148
00:05:06,000 --> 00:05:09,000
就写出那 Sweet 的各项新特性

149
00:05:09,000 --> 00:05:12,000
然后我记得里面有 gabbage collection

150
00:05:12,000 --> 00:05:13,000
可是我回去翻了一遍

151
00:05:13,000 --> 00:05:14,000
发现其实是没有的

152
00:05:15,000 --> 00:05:16,000
对

153
00:05:16,000 --> 00:05:18,000
然后

154
00:05:18,000 --> 00:05:21,000
其实还是 reference counting

155
00:05:21,000 --> 00:05:22,000
只不过

156
00:05:22,000 --> 00:05:24,000
automated

157
00:05:24,000 --> 00:05:26,000
然后也一直没有注意到这件事情

158
00:05:26,000 --> 00:05:28,000
对所以这件事情是我们错了

159
00:05:28,000 --> 00:05:30,000
然后这个我不知道为什么

160
00:05:30,000 --> 00:05:32,000
lock.e 这位听众用 QQ 邮箱发给我们的

161
00:05:32,000 --> 00:05:35,000
但是我回复的时候说

162
00:05:35,000 --> 00:05:36,000
投币失败

163
00:05:36,000 --> 00:05:38,000
难道 QQ 不能收到 Gmail

164
00:05:40,000 --> 00:05:43,000
你知道最近出了一点点问题吗

165
00:05:43,000 --> 00:05:44,000
听说

166
00:05:44,000 --> 00:05:47,000
但是印象中还是 QQ

167
00:05:47,000 --> 00:05:49,000
Gmail 好像没有什么仇吧

168
00:05:49,000 --> 00:05:50,000
对因为不是那个

169
00:05:50,000 --> 00:05:52,000
因为 QQ 他邮箱他在海外

170
00:05:52,000 --> 00:05:53,000
或者在至少在香港吧

171
00:05:53,000 --> 00:05:54,000
应该是做过什么

172
00:05:55,000 --> 00:05:56,000
呃

173
00:05:56,000 --> 00:05:57,000
就是呃

174
00:05:57,000 --> 00:06:00,000
就墙外服务器的应该是没有问题的

175
00:06:00,000 --> 00:06:01,000
不知道你这个情况怎么一回事

176
00:06:01,000 --> 00:06:04,000
不过你这这里反馈了这里讲了也可以了吗

177
00:06:04,000 --> 00:06:05,000
对

178
00:06:05,000 --> 00:06:05,000
嗯

179
00:06:05,000 --> 00:06:09,000
然后有位听众呃来信说

180
00:06:09,000 --> 00:06:12,000
Ubuntu Mono 也是也是一个不错的变成字体

181
00:06:12,000 --> 00:06:15,000
而这一点我觉得我是不能接受

182
00:06:15,000 --> 00:06:16,000
我也不能接受

183
00:06:16,000 --> 00:06:19,000
Ubuntu 那一套字体真是太丑了

184
00:06:19,000 --> 00:06:20,000
对

185
00:06:20,000 --> 00:06:21,000
不光是 mono 那一个

186
00:06:21,000 --> 00:06:24,000
他还有一个那个界面的 UI 的字体叫什么来的

187
00:06:24,000 --> 00:06:28,000
就是 14 点几里面

188
00:06:28,000 --> 00:06:30,000
就是那个整个他的桌面环境里面默认的

189
00:06:30,000 --> 00:06:32,000
Ubuntu display 吗

190
00:06:32,000 --> 00:06:33,000
还是叫什么忘了

191
00:06:33,000 --> 00:06:35,000
反正他自己处理的很这里就是那种感觉是很

192
00:06:35,000 --> 00:06:37,000
就是所有的所有的转角都是圆形的

193
00:06:37,000 --> 00:06:38,000
那个对

194
00:06:38,000 --> 00:06:41,000
这他就是为了突出这个人文主义

195
00:06:41,000 --> 00:06:43,000
就是以人为本的这个这个这个哲学吧

196
00:06:43,000 --> 00:06:45,000
就实在是太丑了

197
00:06:45,000 --> 00:06:46,000
实在是太丑了

198
00:06:46,000 --> 00:06:48,000
把一套科技字体

199
00:06:48,000 --> 00:06:48,000
不也不是科技

200
00:06:48,000 --> 00:06:53,000
反正就把他的试图通过字体来反射出他那种圆滑的

201
00:06:53,000 --> 00:06:56,000
具有人情味的这么一套系统

202
00:06:56,000 --> 00:06:59,000
但我觉得是失败了

203
00:06:59,000 --> 00:07:01,000
但不是针对这个听众

204
00:07:01,000 --> 00:07:05,000
但我是觉得使用 Ubuntu mono

205
00:07:05,000 --> 00:07:08,000
并是作为变成字体的人

206
00:07:08,000 --> 00:07:09,000
真是没有什么评分

207
00:07:09,000 --> 00:07:11,000
sorry

208
00:07:11,000 --> 00:07:13,000
非常对不起

209
00:07:13,000 --> 00:07:15,000
但比如说就是

210
00:07:15,000 --> 00:07:17,000
我专门又去看了一下

211
00:07:17,000 --> 00:07:23,000
就这个字体甚至大写的 i 比小写的 l 要短一点

212
00:07:23,000 --> 00:07:23,000
然后

213
00:07:23,000 --> 00:07:30,000
你在你就是他会让你的阅读量的视线变得比较受到干扰

214
00:07:30,000 --> 00:07:32,000
就是不一致了吗

215
00:07:32,000 --> 00:07:39,000
你会情不自禁的去不你会情不自禁去注意到这款字体的夹扩弧的设计上面

216
00:07:39,000 --> 00:07:42,000
就是对这个感觉就是每次感觉啊

217
00:07:42,000 --> 00:07:44,000
这好像有点太对

218
00:07:44,000 --> 00:07:46,000
他会他会非常跳脱出来

219
00:07:46,000 --> 00:07:50,000
会会像是会呐喊着让你注意到他的存在不够撒走的对

220
00:07:50,000 --> 00:07:53,000
这是这是非常非常影响

221
00:07:53,000 --> 00:07:56,000
字体质量的一个一个一个特性

222
00:07:56,000 --> 00:07:58,000
就其实还是因为丑

223
00:07:58,000 --> 00:08:00,000
而且丑的那么那么喧嚣

224
00:08:00,000 --> 00:08:02,000
哎

225
00:08:02,000 --> 00:08:04,000
这丑话说够了

226
00:08:04,000 --> 00:08:05,000
还好还好

227
00:08:05,000 --> 00:08:07,000
我们这个审美取向比较一致

228
00:08:07,000 --> 00:08:09,000
不然这里再打起来

229
00:08:09,000 --> 00:08:09,000
对

230
00:08:09,000 --> 00:08:11,000
呃

231
00:08:11,000 --> 00:08:11,000
对

232
00:08:11,000 --> 00:08:14,000
我觉得这可能是 it 公论比较具有可听性的一个特点

233
00:08:14,000 --> 00:08:16,000
就是呃

234
00:08:16,000 --> 00:08:22,000
你跟 lawrence 的的观点总是趋趋向于不同的

235
00:08:22,000 --> 00:08:23,000
嗯

236
00:08:23,000 --> 00:08:25,000
而咱们这边总是说你说什么什么

237
00:08:25,000 --> 00:08:26,000
我说对对对

238
00:08:26,000 --> 00:08:27,000
然后我说什么

239
00:08:27,000 --> 00:08:27,000
你说对对对

240
00:08:27,000 --> 00:08:29,000
对

241
00:08:29,000 --> 00:08:33,000
实际上咱们都是这个什么同行呢

242
00:08:33,000 --> 00:08:34,000
对实际上咱俩是一个阵营

243
00:08:34,000 --> 00:08:36,000
下次应该请个另一个阵营了

244
00:08:36,000 --> 00:08:38,000
但我也不知道

245
00:08:38,000 --> 00:08:39,000
但嗯好吧

246
00:08:39,000 --> 00:08:42,000
嗯

247
00:08:42,000 --> 00:08:44,000
然后 it 公论上一期

248
00:08:44,000 --> 00:08:45,000
就我们上一期录音的时候

249
00:08:45,000 --> 00:08:48,000
你告诉我说要听下一期的工作

250
00:08:48,000 --> 00:08:50,000
关于苹果开发者的部分

251
00:08:50,000 --> 00:08:51,000
你们吐槽了

252
00:08:51,000 --> 00:08:53,000
苹果开对于开发者是多么的不友好

253
00:08:53,000 --> 00:08:55,000
但嗯

254
00:08:55,000 --> 00:08:57,000
怎么说呢

255
00:08:57,000 --> 00:08:57,000
我觉得

256
00:08:57,000 --> 00:09:00,000
这里面有一点

257
00:09:00,000 --> 00:09:04,000
就是我强调的是苹果对于开发者好的那部分

258
00:09:04,000 --> 00:09:08,000
是他们的工程师所呈现出来的

259
00:09:08,000 --> 00:09:10,000
对于开发者的那一面

260
00:09:10,000 --> 00:09:13,000
而你们所强调的则是其审核部门

261
00:09:13,000 --> 00:09:16,000
或者说他们呃

262
00:09:16,000 --> 00:09:18,000
管控的这一部分

263
00:09:18,000 --> 00:09:20,000
对于开发者不友好的部分

264
00:09:20,000 --> 00:09:21,000
对

265
00:09:21,000 --> 00:09:22,000
我觉得两者其实是

266
00:09:22,000 --> 00:09:23,000
但是

267
00:09:23,000 --> 00:09:24,000
是冲突的

268
00:09:24,000 --> 00:09:24,000
但是在我看来

269
00:09:24,000 --> 00:09:27,000
就是我比较看重的是工程师的那部分

270
00:09:27,000 --> 00:09:32,000
因为我自己反正不是一个要给什么第三方开发

271
00:09:32,000 --> 00:09:32,000
呃

272
00:09:32,000 --> 00:09:34,000
要给最终用户做 app 的人

273
00:09:34,000 --> 00:09:35,000
嗯

274
00:09:35,000 --> 00:09:37,000
那我所关注的只管写的爽了

275
00:09:37,000 --> 00:09:38,000
对

276
00:09:38,000 --> 00:09:40,000
我所关注的只是他提供了什么样的工具

277
00:09:40,000 --> 00:09:41,000
以及他

278
00:09:41,000 --> 00:09:43,000
他的生态系统看起来是怎么样的

279
00:09:43,000 --> 00:09:46,000
但至于这趟生态系统能不能被管理层

280
00:09:46,000 --> 00:09:47,000
呃

281
00:09:47,000 --> 00:09:48,000
以一种什么样的形式

282
00:09:48,000 --> 00:09:53,000
转化为对于最终用户友好的一部分

283
00:09:53,000 --> 00:09:53,000
嗯

284
00:09:53,000 --> 00:09:56,000
我觉得这个对于我们来说没有什么抗论

285
00:09:56,000 --> 00:09:56,000
就

286
00:09:57,000 --> 00:09:58,000
对

287
00:09:58,000 --> 00:10:00,000
而且而且说实话

288
00:10:00,000 --> 00:10:07,000
当我第一次听说呃 pico 要在那个呃 today

289
00:10:07,000 --> 00:10:09,000
veget 里面做一个计算器的时候

290
00:10:09,000 --> 00:10:12,000
我的第一反应其实是为什么要做计算器呢

291
00:10:13,000 --> 00:10:15,000
就我觉得这个东西不属于 today

292
00:10:15,000 --> 00:10:16,000
你们有我的意思吗

293
00:10:16,000 --> 00:10:17,000
嗯哼

294
00:10:17,000 --> 00:10:18,000
就是 today

295
00:10:18,000 --> 00:10:20,000
today 觉得他那个语境不对

296
00:10:20,000 --> 00:10:21,000
不服了那个东西

297
00:10:21,000 --> 00:10:23,000
这个东西不应该出现在哪儿

298
00:10:23,000 --> 00:10:27,000
就我是 somehow 支持审核者的决定的

299
00:10:27,000 --> 00:10:28,000
嗯哼

300
00:10:29,000 --> 00:10:30,000
嗯

301
00:10:30,000 --> 00:10:30,000
怎么说呢

302
00:10:30,000 --> 00:10:31,000
就是

303
00:10:32,000 --> 00:10:40,000
就是你你是就是你是严格按照那个 todayview 的那个名字或者这个这个含义来确定他应该包含什么东西不应该包含什么东西吗

304
00:10:40,000 --> 00:10:41,000
对

305
00:10:41,000 --> 00:10:43,000
当然你也可以说 today 里面出现了很多东西

306
00:10:43,000 --> 00:10:46,000
其实都不一定跟 today 完全相关

307
00:10:46,000 --> 00:10:47,000
就是这条线是很难划定的

308
00:10:47,000 --> 00:10:48,000
这个我承认

309
00:10:48,000 --> 00:10:52,000
比如说 Evernote 或者是或者是呃 instapaper 在那边出现一个 vrp

310
00:10:52,000 --> 00:10:53,000
在那边出现一个 vrp

311
00:10:53,000 --> 00:10:59,000
这个 widget 显示你可以读的东西或者是你可以直接在 Evernote 里面做一些事情

312
00:10:59,000 --> 00:10:59,000
嗯

313
00:10:59,000 --> 00:11:01,000
可能也跟 today 没有什么直接的关系

314
00:11:01,000 --> 00:11:12,000
但是 peacock 这个东西在我看来你在一个本来是应该提供呃通知和总结的地方做了一个计算器

315
00:11:12,000 --> 00:11:14,000
在我看来这是 missiles

316
00:11:14,000 --> 00:11:18,000
对这个这个怎么讲呢

317
00:11:18,000 --> 00:11:20,000
就是说呃肯定

318
00:11:20,000 --> 00:11:22,000
从不敢讲

319
00:11:22,000 --> 00:11:23,000
你是一个非常合理的计算机

320
00:11:23,000 --> 00:11:26,000
你这个不应该出现在那个地方是吧

321
00:11:26,000 --> 00:11:27,000
你就为什么要出现在那个地方

322
00:11:27,000 --> 00:11:33,000
但是我觉得这个这个选择的自由是不是难道不是应该用户来决定的吗

323
00:11:33,000 --> 00:11:36,000
呃用户是不知道自己要什么

324
00:11:36,000 --> 00:11:37,000
那但问题就是说

325
00:11:37,000 --> 00:11:38,000
如果他这么说

326
00:11:38,000 --> 00:11:39,000
就是好

327
00:11:39,000 --> 00:11:40,000
那我也是个用户

328
00:11:40,000 --> 00:11:43,000
那我觉得这个地方不应该出现 peacock

329
00:11:43,000 --> 00:11:44,000
你怎么说

330
00:11:44,000 --> 00:11:47,000
那你就不要那你就不要装备就是那个不是默认启动的吗

331
00:11:47,000 --> 00:11:48,000
你要提啊

332
00:11:48,000 --> 00:11:53,000
你意思是在审核者那边不应该替用户做出决定

333
00:11:53,000 --> 00:11:54,000
这个东西不可以在那出现

334
00:11:54,000 --> 00:12:02,000
对对就说除非他除非他违违违反了某一条这个就说对你这个东西有明显的损害对吧

335
00:12:02,000 --> 00:12:04,000
是这种不痛不痒的事情

336
00:12:04,000 --> 00:12:09,000
那我的就是默认的一个选择就是不要限制选择的自由吗

337
00:12:10,000 --> 00:12:17,000
OK 所以没有人阻止没有人阻止你去往这个 today 那个 view 里面加一个计算器

338
00:12:17,000 --> 00:12:18,000
但是也没有人

339
00:12:18,000 --> 00:12:19,000
强迫你往里面加对吧

340
00:12:19,000 --> 00:12:21,000
这这完全是一个用户可以选择的东西

341
00:12:21,000 --> 00:12:23,000
而且他默认是默认是没有的

342
00:12:25,000 --> 00:12:27,000
OK 所以实际上这是一种管理哲学的分歧

343
00:12:27,000 --> 00:12:31,000
就是你觉得你你不应该替用户做出太多的决定

344
00:12:31,000 --> 00:12:33,000
而我觉得你应该

345
00:12:34,000 --> 00:12:38,000
我或者我应该替用户做出一些看起来让我觉得不爽的

346
00:12:38,000 --> 00:12:41,000
我觉得你可以做替用户做决定

347
00:12:41,000 --> 00:12:51,000
比如说你默认你给那个你再给一个在比如说这个开发者责任里面说明说特别特别不应该是主要用来干什么的啊

348
00:12:51,000 --> 00:12:51,000
然后你不

349
00:12:51,000 --> 00:12:52,000
鼓励什么东西

350
00:12:52,000 --> 00:12:54,000
但是你不能说因为我不鼓励这个

351
00:12:54,000 --> 00:12:56,000
所以我完全禁止你做这个对吧

352
00:12:56,000 --> 00:12:59,000
因为这个并不是一个

353
00:12:59,000 --> 00:13:00,000
就是有些人就是愿意这样使用的

354
00:13:00,000 --> 00:13:02,000
因为那个方便嘛

355
00:13:02,000 --> 00:13:08,000
拉下来之后他就他并不是把这个特别又当成一个跟按字面意义上讲的是今日相关的事情

356
00:13:08,000 --> 00:13:17,000
而是说作为一个能够比较快捷的启动一个或者更甚至不用启动程序的一个完成一个功能的方式嘛

357
00:13:17,000 --> 00:13:17,000
对吧

358
00:13:17,000 --> 00:13:19,000
这个也很难很难说

359
00:13:20,000 --> 00:13:20,000
好吧

360
00:13:20,000 --> 00:13:21,000
但在我看来

361
00:13:21,000 --> 00:13:34,000
这就好像在 bookmark 上面用一个 java script 的小程序来来完成一件事情叫什么 bookmarklet 一样是一种是种误用吧

362
00:13:34,000 --> 00:13:37,000
但是这个你但你不可不可否认

363
00:13:37,000 --> 00:13:38,000
就是说这种情况有些

364
00:13:38,000 --> 00:13:39,000
对他是方便

365
00:13:39,000 --> 00:13:40,000
但是他错了

366
00:13:40,000 --> 00:13:42,000
power power user 他就是要这样用嘛

367
00:13:42,000 --> 00:13:47,000
就是我不反对说你你你只只只出一种他应该做什么

368
00:13:47,000 --> 00:13:50,000
但是你不能说我禁止完全禁止你做什么

369
00:13:50,000 --> 00:13:51,000
你你是

370
00:13:51,000 --> 00:13:53,000
你就是一个

371
00:13:53,000 --> 00:13:54,000
就你并不是用户自己的用户

372
00:13:54,000 --> 00:13:56,000
他可能他就是需要这样的需求对吧

373
00:13:56,000 --> 00:13:57,000
他发现也可以这么用

374
00:13:57,000 --> 00:13:59,000
我觉得觉得还挺方便的

375
00:13:59,000 --> 00:14:01,000
你为什么要干涉用户的用户的自由

376
00:14:01,000 --> 00:14:02,000
如果让这种逻辑发展下去

377
00:14:02,000 --> 00:14:04,000
那这个不就成了独裁专制吗

378
00:14:04,000 --> 00:14:10,000
那 OS 上面我们那些什么定制化的什么什么 prouser 的工具的不要搞了

379
00:14:10,000 --> 00:14:13,000
不但我觉得这个不算独裁专制吧

380
00:14:13,000 --> 00:14:14,000
这个算比如说

381
00:14:15,000 --> 00:14:19,000
你这实际上是把是虽然

382
00:14:19,000 --> 00:14:21,000
但是这个这用这个词造句你是

383
00:14:21,000 --> 00:14:25,000
你是愿意说虽然这样做是错的

384
00:14:25,000 --> 00:14:27,000
但是用户有这样的需求

385
00:14:27,000 --> 00:14:29,000
还是说虽然用户有这个需求

386
00:14:29,000 --> 00:14:30,000
但是这样做是错的呢

387
00:14:30,000 --> 00:14:34,000
那那我可以说就其实这样就好像怎么说

388
00:14:34,000 --> 00:14:35,000
花园里面的草坪

389
00:14:35,000 --> 00:14:36,000
嗯

390
00:14:36,000 --> 00:14:43,000
你说虽然用户从 A 点走到 B 点直接穿过草坪是最方便的

391
00:14:43,000 --> 00:14:45,000
但是我就不要

392
00:14:45,000 --> 00:14:46,000
我不要这样修路

393
00:14:46,000 --> 00:14:48,000
因为那样会破坏草坪的整个设计

394
00:14:48,000 --> 00:14:49,000
或者美观

395
00:14:49,000 --> 00:14:50,000
你也可以说

396
00:14:50,000 --> 00:14:51,000
虽然这样设计

397
00:14:51,000 --> 00:14:51,000
看起来是不错的

398
00:14:51,000 --> 00:14:52,000
看起来是横并竖直的

399
00:14:52,000 --> 00:14:57,000
但是会使得用户从 A 点到 B 点不得不绕一段弯路

400
00:14:57,000 --> 00:14:59,000
他有可能会去踩草坪

401
00:14:59,000 --> 00:15:01,000
这个跟专制没什么关系吧

402
00:15:01,000 --> 00:15:07,000
这只是一种就是我愿意把我的这套设计哲学放在我的软件仓库里面

403
00:15:08,000 --> 00:15:11,000
或者说施加在我的餐厅软件仓库上面

404
00:15:11,000 --> 00:15:13,000
那你不爱用可以别用啊

405
00:15:13,000 --> 00:15:15,000
你不想进六花可以别进啊

406
00:15:15,000 --> 00:15:16,000
这跟独裁没什么关系吧

407
00:15:16,000 --> 00:15:19,000
但问题是说你你这样你这样限制了之后

408
00:15:19,000 --> 00:15:20,000
你得到了什么呢

409
00:15:21,000 --> 00:15:23,000
我得到了我的

410
00:15:23,000 --> 00:15:24,000
你认为的美观对吧

411
00:15:24,000 --> 00:15:25,000
对啊

412
00:15:25,000 --> 00:15:27,000
就如果我是一个园林设计者的话

413
00:15:27,000 --> 00:15:31,000
我希望我的游园客人来欣赏园林

414
00:15:31,000 --> 00:15:33,000
或者说使用我园林在我园林里面玩

415
00:15:33,000 --> 00:15:35,000
那我不希望他们踩草坪

416
00:15:35,000 --> 00:15:37,000
这难道不是对的吗

417
00:15:37,000 --> 00:15:38,000
所以我觉得这里要讲

418
00:15:38,000 --> 00:15:41,000
我就是这个以前也有很多人引用的那个故事啊

419
00:15:41,000 --> 00:15:44,000
说这个迪斯尼的公园里面怎么修草坪

420
00:15:44,000 --> 00:15:45,000
就先把草坪铺上

421
00:15:45,000 --> 00:15:47,000
然后让游客随便进去踩

422
00:15:47,000 --> 00:15:49,000
然后踩过一段时间之后

423
00:15:49,000 --> 00:15:51,000
看哪个地方的脚印多

424
00:15:51,000 --> 00:15:51,000
就在那天上去踩草坪了

425
00:15:51,000 --> 00:15:52,000
挖一条路

426
00:15:52,000 --> 00:15:52,000
修一条路

427
00:15:52,000 --> 00:15:54,000
对这个我也听过

428
00:15:54,000 --> 00:15:55,000
但这是一种

429
00:15:55,000 --> 00:15:56,000
这是一种

430
00:15:56,000 --> 00:15:57,000
怎么说呢

431
00:15:57,000 --> 00:15:59,000
这是一种没有设计的设计啊

432
00:15:59,000 --> 00:16:00,000
就是无为而治嘛

433
00:16:00,000 --> 00:16:02,000
就随机应变设计嘛

434
00:16:02,000 --> 00:16:05,000
但我就想要修一条像那个

435
00:16:05,000 --> 00:16:06,000
修一个像那个

436
00:16:06,000 --> 00:16:09,000
发射赛工一样的横平竖直的草坪

437
00:16:09,000 --> 00:16:11,000
那这套方法就行不通了呀

438
00:16:11,000 --> 00:16:13,000
所以我说我就是要这么任性

439
00:16:13,000 --> 00:16:14,000
对啊

440
00:16:14,000 --> 00:16:15,000
但我也不知道

441
00:16:15,000 --> 00:16:18,000
我觉得苹果是一个比较 control freak 的公司

442
00:16:18,000 --> 00:16:21,000
但是起码他现在 back off

443
00:16:21,000 --> 00:16:21,000
就是

444
00:16:21,000 --> 00:16:23,000
他已经取消了两个节点

445
00:16:23,000 --> 00:16:24,000
因为这个

446
00:16:24,000 --> 00:16:28,000
因为其实你从这个取舍利益的角度来讲

447
00:16:28,000 --> 00:16:29,000
确实是真的很不值得

448
00:16:29,000 --> 00:16:33,000
因为首先这个 todayview 这个东西本来就是一个深造出来的一个功能

449
00:16:33,000 --> 00:16:36,000
然后真正有没有多少用户需求

450
00:16:36,000 --> 00:16:36,000
就很难讲

451
00:16:36,000 --> 00:16:39,000
而且其实按照我自己的观察来看

452
00:16:39,000 --> 00:16:41,000
我完全意义的验证

453
00:16:41,000 --> 00:16:44,000
按照你刚才讲的那种字面上的这个 todayview 的东西

454
00:16:44,000 --> 00:16:46,000
我其实我是很少去用它的

455
00:16:46,000 --> 00:16:48,000
但是如果有一个什么小工具那里

456
00:16:48,000 --> 00:16:50,000
我现在有装一个小工具在里面

457
00:16:50,000 --> 00:16:51,000
但是我还有

458
00:16:51,000 --> 00:16:51,000
我经常去看它

459
00:16:51,000 --> 00:16:53,000
就所以这里面就是说

460
00:16:53,000 --> 00:16:56,000
你可以去深造出来一个东西

461
00:16:56,000 --> 00:16:58,000
但是它是不是真的符合用户的需求

462
00:16:58,000 --> 00:16:59,000
这个是很难说的

463
00:16:59,000 --> 00:17:01,000
所以我觉得面对这种情况的话

464
00:17:01,000 --> 00:17:05,000
还是就是给开发者和用户一个选择的自由

465
00:17:05,000 --> 00:17:07,000
我觉得这种方式是更好的

466
00:17:07,000 --> 00:17:08,000
对

467
00:17:08,000 --> 00:17:14,000
我觉得其实更加合理的一个选择是开放那个

468
00:17:14,000 --> 00:17:19,000
从下面往上拉的那个叫什么 control center 的

469
00:17:19,000 --> 00:17:19,000
对对对

470
00:17:19,000 --> 00:17:20,000
的 widget

471
00:17:20,000 --> 00:17:21,000
开发

472
00:17:21,000 --> 00:17:23,000
因为计算器

473
00:17:23,000 --> 00:17:25,000
如果你可以替换那个默认计算器的话

474
00:17:25,000 --> 00:17:27,000
那我觉得我没有任何话说了

475
00:17:27,000 --> 00:17:30,000
因为那个地方本来就是让你干那个事情用的

476
00:17:30,000 --> 00:17:30,000
对吧

477
00:17:30,000 --> 00:17:33,000
就它那个其实它有点性质不一样

478
00:17:33,000 --> 00:17:34,000
就 control center 里面

479
00:17:34,000 --> 00:17:35,000
就你拉下来

480
00:17:35,000 --> 00:17:37,000
它比如四个这个快捷启动

481
00:17:37,000 --> 00:17:41,000
它默认的是这个电筒

482
00:17:41,000 --> 00:17:42,000
然后这个什么

483
00:17:42,000 --> 00:17:45,000
是这个闹钟

484
00:17:45,000 --> 00:17:46,000
手边没有

485
00:17:46,000 --> 00:17:47,000
对秒表

486
00:17:47,000 --> 00:17:48,000
然后是计算器

487
00:17:48,000 --> 00:17:49,000
然后照相机

488
00:17:49,000 --> 00:17:49,000
对

489
00:17:49,000 --> 00:17:49,000
对

490
00:17:49,000 --> 00:17:49,000
对

491
00:17:49,000 --> 00:17:50,000
对

492
00:17:50,000 --> 00:17:50,000
对

493
00:17:50,000 --> 00:17:50,000
对

494
00:17:50,000 --> 00:17:50,000
对

495
00:17:50,000 --> 00:17:50,000
对

496
00:17:50,000 --> 00:17:50,000
对

497
00:17:50,000 --> 00:17:50,000
对

498
00:17:50,000 --> 00:17:50,000
对

499
00:17:50,000 --> 00:17:50,000
对

500
00:17:50,000 --> 00:17:50,000
对

501
00:17:50,000 --> 00:17:50,000
对

502
00:17:50,000 --> 00:17:50,000
对

503
00:17:50,000 --> 00:17:50,000
对

505
00:18:20,000 --> 00:18:21,000
this is what I said

506
00:18:21,000 --> 00:18:24,000
为什么要应该开放这个东西的

507
00:18:24,000 --> 00:18:26,000
是那个开发 API

508
00:18:26,000 --> 00:18:29,000
就如果我可以自由定义这四个快捷方式的话

509
00:18:29,000 --> 00:18:34,000
那 todavio 不就可以去服务其本该服务的东西了吗

510
00:18:34,000 --> 00:18:35,000
所以这里来讲

511
00:18:35,000 --> 00:18:36,000
就是它有点不一样

512
00:18:36,000 --> 00:18:38,000
就是那个像 peacock 那个那件事情里面

513
00:18:38,000 --> 00:18:43,000
它是等于是在那个 todavio 里面直接做了一个计算机

514
00:18:43,000 --> 00:18:44,000
你甚至都不需要单独启动它

515
00:18:44,000 --> 00:18:47,000
但是如果你用这个 control center 下面那四个钮

516
00:18:47,000 --> 00:18:49,000
你其实还是要启动那个程序

517
00:18:49,000 --> 00:18:50,000
还是要跳一下的嘛

518
00:18:50,000 --> 00:18:50,000
对

519
00:18:50,000 --> 00:18:52,000
你用完之后还得再跳回来

520
00:18:52,000 --> 00:18:52,000
对吧

521
00:18:52,000 --> 00:18:56,000
所以其实你说那下面 control center 那四个快捷方菜单

522
00:18:56,000 --> 00:18:59,000
对应的那个 APP 其实应该是那个叫什么

523
00:18:59,000 --> 00:18:59,000
launch

524
00:18:59,000 --> 00:19:01,000
launch pro 还是 launch center 吧

525
00:19:01,000 --> 00:19:02,000
对

526
00:19:02,000 --> 00:19:06,000
然后它也在那个 todavio 里面做了这种快速启动的一个扭

527
00:19:06,000 --> 00:19:07,000
就是它在里面放了几个那种

528
00:19:07,000 --> 00:19:10,000
那种你自定义的这个 icon

529
00:19:10,000 --> 00:19:13,000
然后你拉下来之后就把它这个点进去嘛

530
00:19:13,000 --> 00:19:16,000
但是从这种角度来讲

531
00:19:16,000 --> 00:19:17,000
你说其实是你

532
00:19:17,000 --> 00:19:19,000
它苹果应该开放那四个

533
00:19:19,000 --> 00:19:20,000
其实是满足

534
00:19:20,000 --> 00:19:23,000
刚才你讲那个 launch pro 还是 launch center 那个软件

535
00:19:23,000 --> 00:19:25,000
对 todavio 的滥用的问题嘛

536
00:19:25,000 --> 00:19:29,000
但是你就是像 peacock 这种

537
00:19:29,000 --> 00:19:32,000
它甚至都不需要启动别的地方去

538
00:19:32,000 --> 00:19:33,000
其实还是很难讲的

539
00:19:33,000 --> 00:19:34,000
或者说

540
00:19:34,000 --> 00:19:36,000
就是人们就是需要

541
00:19:36,000 --> 00:19:40,000
因为这个 iOS 这个是一个单一 APP

542
00:19:40,000 --> 00:19:43,000
就是在 foreground 的这种情况的这种前提下

543
00:19:43,000 --> 00:19:46,000
你怎么去减少这个 APP 间切换的成本

544
00:19:46,000 --> 00:19:48,000
就 todavio 可能给出了一个

545
00:19:48,000 --> 00:19:49,000
可以

546
00:19:49,000 --> 00:19:50,000
可以

547
00:19:50,000 --> 00:19:50,000
可以

548
00:19:50,000 --> 00:19:50,000
可以

549
00:19:50,000 --> 00:19:51,000
,用的地方

550
00:19:51,000 --> 00:19:54,000
但是它对现在对应方的限制还比较死

551
00:19:54,000 --> 00:19:55,000
那你不如再加一个什么

552
00:19:55,000 --> 00:19:56,000
比方现在打开 todavio

553
00:19:56,000 --> 00:19:58,000
不是上面有三个 type 吗

554
00:19:58,000 --> 00:19:59,000
todavio notification

555
00:19:59,000 --> 00:20:01,000
那你在旁边给一个什么

556
00:20:01,000 --> 00:20:02,000
什么 dashboard

557
00:20:02,000 --> 00:20:05,000
因为这个在 iOS 上也有这个概念嘛

558
00:20:05,000 --> 00:20:06,000
你在里面搞了的话

559
00:20:06,000 --> 00:20:08,000
那可以自己加一些随意

560
00:20:08,000 --> 00:20:12,000
就是要求没有那么限制严格的东西

561
00:20:12,000 --> 00:20:13,000
也其实也是一个不错的思路

562
00:20:13,000 --> 00:20:15,000
我觉得

563
00:20:15,000 --> 00:20:19,000
所以我觉得鲑云接底还是一个教读死的招

564
00:20:19,000 --> 00:20:20,000
就是

565
00:20:20,000 --> 00:20:24,000
苹果这一套死板管制的哲学没有贯彻下来

566
00:20:24,000 --> 00:20:29,000
就是我觉得你是其实你是希望苹果变得更像安卓不是吗

567
00:20:29,000 --> 00:20:36,000
就是就更松散一些朝就是按照让软件按照用户的需求去生长出来

568
00:20:36,000 --> 00:20:38,000
而不是一上来做一个 grand design

569
00:20:38,000 --> 00:20:39,000
然后

570
00:20:39,000 --> 00:20:46,000
但实际上 iOS 这么多年这么几年的演化并确实是照在这条路上走下去的呀

571
00:20:46,000 --> 00:20:50,000
很多东西他都不是说苹果自己拍脑袋想出来的呀

572
00:20:50,000 --> 00:20:51,000
他只是说他自己做了一个方案

573
00:20:51,000 --> 00:20:53,000
是说看到别的平台用户用的很好

574
00:20:53,000 --> 00:20:56,000
然后把这个东西就是借鉴过来吧

575
00:20:56,000 --> 00:20:59,000
我都不说甚至是什么官方压死同仁就对对对

576
00:20:59,000 --> 00:21:00,000
就这样做出来

577
00:21:00,000 --> 00:21:02,000
然后他自己盗用

578
00:21:02,000 --> 00:21:09,000
就是我相信绝大多数软件都不是这么一个就起码就是针对这种用户的这种软件哈

579
00:21:09,000 --> 00:21:11,000
他都不是一个最终设计出来一个东西

580
00:21:11,000 --> 00:21:14,000
而可能更真的是要用户体验出来的对

581
00:21:14,000 --> 00:21:15,000
但这没有一个度的问题

582
00:21:15,000 --> 00:21:18,000
就是你在多大程度上让用户来使用导向

583
00:21:18,000 --> 00:21:19,000
你在多大程度上要让别人去采草品

584
00:21:20,000 --> 00:21:23,000
还是你你完全不去预设

585
00:21:23,000 --> 00:21:30,000
就是你从完全不去预设用户怎么从 A 点走到 B 点和精确的设计出从 A 点走到 B 点的每一步

586
00:21:30,000 --> 00:21:34,000
是中间是有很大的回旋空间的

587
00:21:34,000 --> 00:21:35,000
就是一个灰色地带嘛

588
00:21:35,000 --> 00:21:37,000
你你对

589
00:21:37,000 --> 00:21:40,000
anyway 这个问题太 IT 功诺了

590
00:21:40,000 --> 00:21:40,000
太 soft call 了

591
00:21:40,000 --> 00:21:41,000
我们不要再讨论

592
00:21:41,000 --> 00:21:44,000
对不过其实回到你刚才你讲那一点哈

593
00:21:44,000 --> 00:21:49,000
就是你刚才也提到说你你觉得最爽的就是苹果的工程团队带给你那些东西

594
00:21:49,000 --> 00:21:49,000
比如说

595
00:21:49,000 --> 00:21:49,000
对

596
00:21:49,000 --> 00:21:49,000
在

597
00:21:49,000 --> 00:21:50,000
在

598
00:21:50,000 --> 00:21:52,000
,去年 WBC 上他展示那些 API 呀

599
00:21:52,000 --> 00:21:54,000
那些底层技术上你很兴奋

600
00:21:54,000 --> 00:21:54,000
对吧

601
00:21:54,000 --> 00:21:57,000
但是你对这个审核这块其实完全不感冒

602
00:21:57,000 --> 00:22:00,000
因为首先第一个你并不是一个

603
00:22:00,000 --> 00:22:01,000
我不是一种开发者

604
00:22:01,000 --> 00:22:05,000
对你不需要去面对这个的审核不过的后果

605
00:22:05,000 --> 00:22:09,000
但我就这里我觉得正是刚才我们讨论的那一那一堆事情反映出来的一个一个结果哈

606
00:22:09,000 --> 00:22:11,000
就是说呃

607
00:22:11,000 --> 00:22:14,000
其实也大家都在这次是这么一个观点吗

608
00:22:14,000 --> 00:22:15,000
就很多人嗯

609
00:22:15,000 --> 00:22:19,000
这工程团队给了开发者这么很爽的一个选择很爽的

610
00:22:19,000 --> 00:22:23,000
那么技术可以去去玩或者说你做炫技吧

611
00:22:23,000 --> 00:22:26,000
但是开发者花时间做出来之后

612
00:22:26,000 --> 00:22:28,000
然后省成对趴给人家聚了

613
00:22:28,000 --> 00:22:31,000
这个就是一个很恶劣的结果嘛

614
00:22:31,000 --> 00:22:33,000
就是怎么左手打右手啊

615
00:22:33,000 --> 00:22:33,000
对

616
00:22:33,000 --> 00:22:35,000
而且会有寒蝉效应

617
00:22:35,000 --> 00:22:36,000
就对啊

618
00:22:36,000 --> 00:22:38,000
就会有懒得做了

619
00:22:38,000 --> 00:22:42,000
就不光这个是会有这个很负面的影响吗

620
00:22:42,000 --> 00:22:43,000
包括舆论上也好

621
00:22:43,000 --> 00:22:46,000
包括对开发者心态上的影响也好

622
00:22:46,000 --> 00:22:49,000
然后现在就说很多这个批评苹果这个审核

623
00:22:49,000 --> 00:22:50,000
这个呃

624
00:22:50,000 --> 00:22:54,000
这这个这一套东西的人就这么就就有使这么一种观点

625
00:22:54,000 --> 00:22:56,000
就是在上一期我们来的功能也提到了哈

626
00:22:56,000 --> 00:23:00,000
就说安卓现在已经越来越好用对吧

627
00:23:00,000 --> 00:23:07,000
嗯特别是在 5 0 之后就是我看到身边哪怕是很多这个之前的 LS 的死忠的用户都觉得诶

628
00:23:07,000 --> 00:23:10,000
这个确实真的啊做的不错

629
00:23:10,000 --> 00:23:10,000
呃

630
00:23:10,000 --> 00:23:14,000
然后我们就种种所周知安卓是一个相对开放的系统吧

631
00:23:14,000 --> 00:23:15,000
就没有那么多呃

632
00:23:15,000 --> 00:23:17,000
条条框框的限制

633
00:23:17,000 --> 00:23:18,000
那这样的话

634
00:23:18,000 --> 00:23:19,000
苹果

635
00:23:19,000 --> 00:23:19,000
在这种情况下

636
00:23:19,000 --> 00:23:28,000
这样给自己给自己打脸其实是会造成这这某种某种程度上是有一个对开发者的驱动力

637
00:23:28,000 --> 00:23:29,000
让他去说哎

638
00:23:29,000 --> 00:23:31,000
那我不要再拼我在那边开发好了

639
00:23:31,000 --> 00:23:34,000
我去给看可以安卓开发不用说这么多气

640
00:23:34,000 --> 00:23:35,000
对吧

641
00:23:35,000 --> 00:23:44,000
对对所以其实这个对他的生态来讲其实叫什么自自毁基石自为有个什么成语来的啊

642
00:23:44,000 --> 00:23:44,000
哎

643
00:23:44,000 --> 00:23:45,000
你还是不要讲了

644
00:23:45,000 --> 00:23:46,000
别人又被挑错了

645
00:23:46,000 --> 00:23:48,000
对嗯

646
00:23:48,000 --> 00:23:49,000
我

647
00:23:49,000 --> 00:23:49,000
好吧

648
00:23:49,000 --> 00:23:51,000
有这么一个成语吗

649
00:23:51,000 --> 00:23:52,000
有一个什么

650
00:23:52,000 --> 00:23:53,000
嗯

651
00:23:53,000 --> 00:23:54,000
自费无功

652
00:23:54,000 --> 00:23:56,000
我也不知道之类的肯定是有一个什么的

653
00:23:56,000 --> 00:23:57,000
但我想想不起来了

654
00:23:57,000 --> 00:23:57,000
哎

655
00:23:57,000 --> 00:23:59,000
你下一个不重要

656
00:23:59,000 --> 00:24:02,000
但我觉得至少从我的角度来讲就是呃

657
00:24:02,000 --> 00:24:05,000
如果我真的不要去做 iOS 的话

658
00:24:05,000 --> 00:24:05,000
嗯

659
00:24:05,000 --> 00:24:06,000
我宁可试一试 windows

660
00:24:06,000 --> 00:24:07,000
风

661
00:24:07,000 --> 00:24:08,000
因为哈哈

662
00:24:08,000 --> 00:24:09,000
为什么

663
00:24:09,000 --> 00:24:11,000
加吧太恶心啊

664
00:24:11,000 --> 00:24:14,000
勾浪可以完全是写安卓的之前

665
00:24:14,000 --> 00:24:17,000
我应该是绝对不会去碰安卓

666
00:24:17,000 --> 00:24:18,000
你可以试试用 scala 写安卓程序

667
00:24:18,000 --> 00:24:18,000
你可以试试用 scala 写安卓程序

668
00:24:18,000 --> 00:24:19,000
你可以试试用 scala 写安卓程序

669
00:24:19,000 --> 00:24:20,000
呃

670
00:24:20,000 --> 00:24:23,000
口罩这个过程应该是蛮酸爽的

671
00:24:23,000 --> 00:24:24,000
呃

672
00:24:24,000 --> 00:24:25,000
算了吧

673
00:24:25,000 --> 00:24:25,000
好吧

674
00:24:25,000 --> 00:24:27,000
还是算了吧

675
00:24:27,000 --> 00:24:28,000
嗯

676
00:24:28,000 --> 00:24:29,000
等温度是风

677
00:24:29,000 --> 00:24:30,000
你可以用 c 上写的吧

678
00:24:30,000 --> 00:24:30,000
对啊

679
00:24:30,000 --> 00:24:31,000
很爽

680
00:24:31,000 --> 00:24:32,000
嗯

681
00:24:32,000 --> 00:24:33,000
哎

682
00:24:33,000 --> 00:24:33,000
对啊

683
00:24:33,000 --> 00:24:34,000
那如果这样的话

684
00:24:34,000 --> 00:24:35,000
其实还可以建议你试一下

685
00:24:35,000 --> 00:24:37,000
因为据说啊

686
00:24:37,000 --> 00:24:40,000
我这个微软不止也在推这个 windows 风的应用

687
00:24:40,000 --> 00:24:42,000
他们最缺的就是应用嘛

688
00:24:42,000 --> 00:24:44,000
然后说如果你这个应用做的好

689
00:24:44,000 --> 00:24:45,000
他还有钱奖励哦

690
00:24:45,000 --> 00:24:46,000
嗯

691
00:24:46,000 --> 00:24:49,000
但我还是不会去做一些

692
00:24:49,000 --> 00:24:51,000
就是用户用的东西啊

693
00:24:51,000 --> 00:24:53,000
就基本上还是会

694
00:24:53,000 --> 00:24:54,000
我也不知道我究竟做过什么

695
00:24:54,000 --> 00:24:56,000
其实也没有做过什么

696
00:24:56,000 --> 00:24:57,000
就只是因为公司的原因

697
00:24:57,000 --> 00:24:58,000
而且我已经换了公司了

698
00:24:58,000 --> 00:25:02,000
可能也不需要再汤这汤活水了

699
00:25:02,000 --> 00:25:02,000
嗯

700
00:25:02,000 --> 00:25:03,000
但

701
00:25:03,000 --> 00:25:08,000
所以所以你还是打算安安静静的做一个高冷的企业开发者

702
00:25:08,000 --> 00:25:09,000
很难说

703
00:25:09,000 --> 00:25:10,000
就

704
00:25:10,000 --> 00:25:10,000
anyway

705
00:25:10,000 --> 00:25:15,000
反正我正式工作是应该在这一期播出的时候

706
00:25:15,000 --> 00:25:18,000
我已经上了三天班了

707
00:25:18,000 --> 00:25:20,000
所以嗯嗯嗯

708
00:25:20,000 --> 00:25:21,000
在下一期节目的时候

709
00:25:21,000 --> 00:25:26,000
我们应该可以对我只能我会对自己会做什么有一个清晰的了解

710
00:25:26,000 --> 00:25:33,000
以及呃那个时候就可以知道自己是不是还继续要在移动开发这一块

711
00:25:33,000 --> 00:25:36,000
有什么建建树或者是发展

712
00:25:36,000 --> 00:25:37,000
好吧

713
00:25:37,000 --> 00:25:37,000
嗯

714
00:25:37,000 --> 00:25:38,000
下次再说吧

715
00:25:38,000 --> 00:25:39,000
嗯

716
00:25:39,000 --> 00:25:39,000
嗯

717
00:25:39,000 --> 00:25:41,000
嗯

718
00:25:41,000 --> 00:25:48,000
然后还有一位评听众提到我们作为两个派对 Nista

719
00:25:48,000 --> 00:25:48,000
嗯

720
00:25:48,000 --> 00:25:48,000
嗯

721
00:25:48,000 --> 00:25:48,000
嗯

722
00:25:48,000 --> 00:25:48,000
嗯

723
00:25:48,000 --> 00:25:48,000
嗯

724
00:25:48,000 --> 00:25:48,000
嗯

725
00:25:48,000 --> 00:25:53,000
等等派对 Nista 的辅数应该是派对 Nisty

726
00:25:53,000 --> 00:25:55,000
哈哈哈

727
00:25:55,000 --> 00:25:57,000
对因为我我我刚刚从意大利回来

728
00:25:57,000 --> 00:25:58,000
然后

729
00:25:58,000 --> 00:25:59,000
嗯

730
00:25:59,000 --> 00:25:59,000
呃

731
00:25:59,000 --> 00:26:00,000
非常非常冷

732
00:26:00,000 --> 00:26:03,000
然后在在呃

733
00:26:03,000 --> 00:26:06,000
在和朋友们聊天的时候说什么

734
00:26:06,000 --> 00:26:07,000
呃

735
00:26:07,000 --> 00:26:18,000
我们非常注重这个意大利就是德国人非常注重在说外来语的时候一定要按照外来语的正确的语法去去变革啊

736
00:26:18,000 --> 00:26:18,000
什么的

737
00:26:18,000 --> 00:26:23,000
比如说 espresso 的复数不是 espressos 而是 espressi

738
00:26:23,000 --> 00:26:24,000
嗯

739
00:26:24,000 --> 00:26:26,000
所以你你不能说我要两杯 espresso

740
00:26:26,000 --> 00:26:28,000
而要说我要两杯 espressi

741
00:26:28,000 --> 00:26:30,000
然后意大利人摇着头说 no

742
00:26:30,000 --> 00:26:30,000
no

743
00:26:30,000 --> 00:26:31,000
no

744
00:26:31,000 --> 00:26:31,000
呃

745
00:26:31,000 --> 00:26:38,000
在意大利如果如果你在意大利之外的地方这么说可能是非常正确高逼格的

746
00:26:38,000 --> 00:26:41,000
但在意大利你说两杯咖啡就行了

747
00:26:41,000 --> 00:26:43,000
因为意大利人咖啡默认就是 espresso

748
00:26:43,000 --> 00:26:44,000
哈哈哈

749
00:26:44,000 --> 00:26:44,000
对

750
00:26:44,000 --> 00:26:48,000
然后派对 Nista 因为他是意大利

751
00:26:48,000 --> 00:26:48,000
嗯

752
00:26:48,000 --> 00:26:49,000
意大利语吧

753
00:26:49,000 --> 00:26:51,000
所以他的复数应该是派对 Nista

754
00:26:51,000 --> 00:26:51,000
嗯

755
00:26:51,000 --> 00:26:52,000
哼

756
00:26:52,000 --> 00:26:52,000
啊

757
00:26:52,000 --> 00:26:54,000
这里对又给科普了

758
00:26:54,000 --> 00:26:58,000
就这个其实我在支付上经常有有有图过几次槽的哈

759
00:26:58,000 --> 00:27:04,000
就是经常会呃应该是在前去年还是前年的时候吧

760
00:27:04,000 --> 00:27:07,000
有人在支付上去哪里去招这个派送程序员

761
00:27:07,000 --> 00:27:10,000
他说他自己是他们要招派送呢

762
00:27:10,000 --> 00:27:10,000
派送呢

763
00:27:10,000 --> 00:27:11,000
呀

764
00:27:11,000 --> 00:27:12,000
我们之前吐槽过了

765
00:27:12,000 --> 00:27:17,000
但对这没办法中国的英语教育就在这可能跟中国的英语教育也扯不上不过

766
00:27:17,000 --> 00:27:17,000
也就你没有在

767
00:27:17,000 --> 00:27:19,000
那个文化圈子里面

768
00:27:19,000 --> 00:27:20,000
呃

769
00:27:20,000 --> 00:27:20,000
不

770
00:27:20,000 --> 00:27:22,000
我觉得这个就是很奇怪的地方

771
00:27:22,000 --> 00:27:25,000
如果你真的是要招这个是就是那么好

772
00:27:25,000 --> 00:27:29,000
所谓哈尔康拍送的这个对你至少应该有点文化是吧

773
00:27:29,000 --> 00:27:31,000
对你知道要要知道这个这个 jargon 是什么

774
00:27:31,000 --> 00:27:32,000
对吧

775
00:27:32,000 --> 00:27:33,000
对

776
00:27:33,000 --> 00:27:34,000
然后如果你知道拍送的很好

777
00:27:34,000 --> 00:27:36,000
默认已经废了

778
00:27:36,000 --> 00:27:37,000
对

779
00:27:37,000 --> 00:27:39,000
就好像 ruby

780
00:27:39,000 --> 00:27:40,000
也废了

781
00:27:40,000 --> 00:27:42,000
ruby ruby 什么 ruby

782
00:27:42,000 --> 00:27:43,000
对呃

783
00:27:43,000 --> 00:27:44,000
那个比较好

784
00:27:44,000 --> 00:27:45,000
那个比较比较常见嘛

785
00:27:45,000 --> 00:27:47,000
因为歪结尾的一般都会怎么变

786
00:27:47,000 --> 00:27:49,000
但是像拍桑这种情况

787
00:27:49,000 --> 00:27:51,000
很多人拍子也是外界

788
00:27:51,000 --> 00:27:52,000
哦

789
00:27:52,000 --> 00:27:52,000
不

790
00:27:52,000 --> 00:27:52,000
对

791
00:27:52,000 --> 00:27:54,000
sorry

792
00:27:54,000 --> 00:27:54,000
我二了

793
00:27:54,000 --> 00:27:55,000
没什么啊

794
00:27:55,000 --> 00:28:00,000
就想到别的地方去就就很容易忘文生意就跟我们看中文一样嘛

795
00:28:00,000 --> 00:28:03,000
能唐木接舌明明就是恩结尾吗

796
00:28:03,000 --> 00:28:04,000
加一多简单

797
00:28:04,000 --> 00:28:05,000
是

798
00:28:05,000 --> 00:28:06,000
哈哈

799
00:28:06,000 --> 00:28:07,000
OK

800
00:28:07,000 --> 00:28:09,000
还是没文化关键是对

801
00:28:09,000 --> 00:28:11,000
然后刚才说什么来着呃

802
00:28:11,000 --> 00:28:11,000
拍子

803
00:28:11,000 --> 00:28:13,000
你是他我们作为两个拍子

804
00:28:13,000 --> 00:28:16,000
你自己居然不知道居然没有提到拍子的 packaging

805
00:28:16,000 --> 00:28:17,000
呃

806
00:28:17,000 --> 00:28:17,000
就是康达

807
00:28:17,000 --> 00:28:17,000
这套

808
00:28:17,000 --> 00:28:18,000
东西

809
00:28:18,000 --> 00:28:19,000
嗯哼

810
00:28:19,000 --> 00:28:19,000
呃

811
00:28:19,000 --> 00:28:20,000
你有什么说的吗

812
00:28:20,000 --> 00:28:21,000
我是真的不知道

813
00:28:21,000 --> 00:28:22,000
what

814
00:28:22,000 --> 00:28:25,000
我没有你不知道安的康的吗

815
00:28:25,000 --> 00:28:25,000
哦

816
00:28:25,000 --> 00:28:28,000
他是他是之前很早就有的吗

817
00:28:28,000 --> 00:28:30,000
还是他有一阵了吧

818
00:28:30,000 --> 00:28:34,000
就是就是我之前不是提起来我在折腾 p y q t 吗

819
00:28:34,000 --> 00:28:34,000
嗯嗯

820
00:28:34,000 --> 00:28:35,000
呃

821
00:28:35,000 --> 00:28:39,000
什么皮尔推就是这这 ipython qt console

822
00:28:39,000 --> 00:28:39,000
嗯嗯

823
00:28:39,000 --> 00:28:40,000
呃

824
00:28:40,000 --> 00:28:47,000
其实部分原因就是因为我想要在电脑上不装安的康达搞出一个 ipython 的 qt console

825
00:28:47,000 --> 00:28:48,000
是啊

826
00:28:48,000 --> 00:28:48,000
呃

827
00:28:48,000 --> 00:28:51,000
因为安的空的安的空的实际上是一个嗯

828
00:28:52,000 --> 00:28:52,000
怎么说呢

829
00:28:52,000 --> 00:28:57,000
给小白用户们使用的 Python distribution

830
00:28:57,000 --> 00:29:00,000
就是比如说数据分析师

831
00:29:00,000 --> 00:29:02,000
或者是尤其是在

832
00:29:02,000 --> 00:29:06,000
就是非 CS 人士用 Python 的

833
00:29:06,000 --> 00:29:08,000
就是一些不得不写程序

834
00:29:08,000 --> 00:29:10,000
但是没有系统的学过怎么写程序的人

835
00:29:10,000 --> 00:29:13,000
比如说什么搞生物的

836
00:29:13,000 --> 00:29:15,000
要处理细胞图像

837
00:29:15,000 --> 00:29:17,000
或者是搞化学的

838
00:29:17,000 --> 00:29:19,000
要做一些化学计算

839
00:29:19,000 --> 00:29:21,000
因为 Python 毕竟是一个在科学计算领域

840
00:29:21,000 --> 00:29:25,000
非常非常受欢迎的主流语言

841
00:29:25,000 --> 00:29:27,000
教学语言吗

842
00:29:27,000 --> 00:29:28,000
对不只是教学

843
00:29:28,000 --> 00:29:29,000
就是在科研领域

844
00:29:29,000 --> 00:29:30,000
教学

845
00:29:30,000 --> 00:29:33,000
这个也不能算教学语言

846
00:29:33,000 --> 00:29:36,000
它是正儿八经的很多科研人员的

847
00:29:36,000 --> 00:29:37,000
第一生产力语言

848
00:29:37,000 --> 00:29:38,000
这个我知道

849
00:29:38,000 --> 00:29:40,000
就是像 NumericPy

850
00:29:40,000 --> 00:29:43,000
它也是这种长几家应用出来的结果

851
00:29:43,000 --> 00:29:46,000
你的意思是它使用 Python 作为

852
00:29:46,000 --> 00:29:49,000
操作界面而使用

853
00:29:49,000 --> 00:29:51,000
而让开发者可以用

854
00:29:51,000 --> 00:29:51,000
用

855
00:29:51,000 --> 00:29:52,000
到数学库

856
00:29:52,000 --> 00:29:53,000
就是对啊

857
00:29:53,000 --> 00:29:54,000
对啊

858
00:29:54,000 --> 00:29:57,000
在这个意义上教水是吧

859
00:29:57,000 --> 00:29:58,000
其实这么说也不对

860
00:29:58,000 --> 00:30:00,000
因为教水应该是联合各不同组件

861
00:30:00,000 --> 00:30:01,000
不 anyway

862
00:30:01,000 --> 00:30:03,000
就是说他们用它

863
00:30:03,000 --> 00:30:04,000
因为它这个比较简单

864
00:30:04,000 --> 00:30:05,000
这个语法比较简单

865
00:30:05,000 --> 00:30:07,000
然后相对直观一点

866
00:30:07,000 --> 00:30:09,000
然后去用到一些什么第三方的库

867
00:30:09,000 --> 00:30:10,000
去做一些科学计算

868
00:30:10,000 --> 00:30:13,000
这些我是有所耳闻的

869
00:30:13,000 --> 00:30:14,000
不过我这现在反应过来

870
00:30:14,000 --> 00:30:17,000
我为什么我没有听说过这个东西了

871
00:30:17,000 --> 00:30:18,000
因为你不是搞这个

872
00:30:18,000 --> 00:30:20,000
不是你看你我像小白用户吗

873
00:30:21,000 --> 00:30:23,000
你刚才说他小白用户用的

874
00:30:23,000 --> 00:30:24,000
那我不是啊

875
00:30:24,000 --> 00:30:25,000
对

876
00:30:25,000 --> 00:30:26,000
对

877
00:30:26,000 --> 00:30:30,000
ana coda 就是大网或者比较大的网舌

878
00:30:30,000 --> 00:30:32,000
就是 ana coda 应该没错吧

879
00:30:32,000 --> 00:30:34,000
ana coda 这个 c 应该是网舌的意思吧

880
00:30:34,000 --> 00:30:35,000
别别要给人吐槽

881
00:30:35,000 --> 00:30:36,000
对我不知道啊

882
00:30:36,000 --> 00:30:38,000
但我觉得 ana coda 应该没错

883
00:30:38,000 --> 00:30:39,000
某种网舌

884
00:30:39,000 --> 00:30:39,000
然后对

885
00:30:39,000 --> 00:30:42,000
然后它就是一个 python 的 distribution

886
00:30:42,000 --> 00:30:46,000
它它把它等于把 python 包装在了一个安装包里面

887
00:30:46,000 --> 00:30:47,000
然后如果你是做

888
00:30:47,000 --> 00:30:51,000
你是要学比如说数据图像处理啊

889
00:30:51,000 --> 00:30:51,000
或者是

890
00:30:51,000 --> 00:30:55,000
你要搞什么化学生物学方面的计算啊

891
00:30:55,000 --> 00:30:56,000
甚至物理学有运用吧

892
00:30:56,000 --> 00:30:57,000
我不知道

893
00:30:57,000 --> 00:30:59,000
然后你可以安装 ana coda

894
00:30:59,000 --> 00:31:01,000
然后啪一下你什么都有

895
00:31:01,000 --> 00:31:01,000
嗯

896
00:31:01,000 --> 00:31:05,000
什么 qtipython 的笔记本啊

897
00:31:05,000 --> 00:31:06,000
console 啊

898
00:31:06,000 --> 00:31:07,000
numpy 啊

899
00:31:07,000 --> 00:31:07,000
全都有

900
00:31:07,000 --> 00:31:15,000
然后安装和删除这些 python 的包也通过

901
00:31:15,000 --> 00:31:16,000
也都是通过一个图形界面

902
00:31:16,000 --> 00:31:18,000
就有点像 sigwin

903
00:31:18,000 --> 00:31:20,000
大概那种感觉吧

904
00:31:20,000 --> 00:31:21,000
然后

905
00:31:21,000 --> 00:31:23,000
然后所谓 conda 就是一个

906
00:31:23,000 --> 00:31:27,000
就是你怎么把自己的 package

907
00:31:27,000 --> 00:31:30,000
打包给 ana coda 用

908
00:31:30,000 --> 00:31:31,000
是这么一套东西

909
00:31:31,000 --> 00:31:32,000
ok

910
00:31:32,000 --> 00:31:35,000
对它几乎是一个 python 的平行宇宙吧

911
00:31:35,000 --> 00:31:36,000
那我们

912
00:31:36,000 --> 00:31:41,000
那所以其实就是说这种专业开发者肯定是不会接触到的了

913
00:31:41,000 --> 00:31:42,000
也不一定吧

914
00:31:42,000 --> 00:31:45,000
因为 ana coda 里面的包其实也都是

915
00:31:45,000 --> 00:31:48,000
几乎所有的常见的 python 包

916
00:31:48,000 --> 00:31:49,000
ana coda 里面都有吧

917
00:31:49,000 --> 00:31:51,000
我甚至怀疑 ana coda 其实就是

918
00:31:51,000 --> 00:31:56,000
把定期会把 python 上面的那个包全都包一遍

919
00:31:56,000 --> 00:32:01,000
然后装一个就是包装成 ana coda 的格式

920
00:32:01,000 --> 00:32:04,000
然后给那个科学计算领域的用户用

921
00:32:04,000 --> 00:32:07,000
因为他们根本不关心我们这些工程师在干嘛

922
00:32:07,000 --> 00:32:10,000
他只是关心造出来的东西他能用就行了

923
00:32:10,000 --> 00:32:15,000
然后你只要提供一个傻瓜化男装界面就就蛮好的

924
00:32:15,000 --> 00:32:18,000
well speaking of there's only one way to do things

925
00:32:18,000 --> 00:32:20,000
yes exactly

926
00:32:20,000 --> 00:32:21,000
there's another way

927
00:32:21,000 --> 00:32:25,000
对啊来再接着科呃接接接着有文化一点

928
00:32:25,000 --> 00:32:28,000
ana coda 这个中文叫做

929
00:32:28,000 --> 00:32:30,000
森林的森

930
00:32:30,000 --> 00:32:30,000
然后这个字

931
00:32:30,000 --> 00:32:31,000
森吗

932
00:32:31,000 --> 00:32:33,000
不森染

933
00:32:33,000 --> 00:32:36,000
从这旁一个再不要上面那一横

934
00:32:36,000 --> 00:32:38,000
就是再见的再不要上面那一横

935
00:32:38,000 --> 00:32:39,000
啊

936
00:32:39,000 --> 00:32:41,000
然后这个叫做

937
00:32:41,000 --> 00:32:47,000
铲鱼热带南美洲的大蟒蛇可用森身体绞死猎物

938
00:32:47,000 --> 00:32:49,000
一称大水蟒

939
00:32:50,000 --> 00:32:51,000
ok 啊

940
00:32:51,000 --> 00:32:53,000
我又学了一个词

941
00:32:53,000 --> 00:32:57,000
就想觉得好像之前看过一部

942
00:32:58,000 --> 00:33:01,000
恐怖片或者是不是恐怖片

943
00:33:01,000 --> 00:33:02,000
惊悚的虽然了吧

944
00:33:02,000 --> 00:33:05,000
就是讲有一道非常非常大的蟒蛇

945
00:33:05,000 --> 00:33:07,000
然后怎么搞人的是

946
00:33:07,000 --> 00:33:10,000
90 年代的片子吧

947
00:33:10,000 --> 00:33:10,000
嗯

948
00:33:10,000 --> 00:33:14,000
就因为那个时候有时有不有不什么那个嗯

949
00:33:14,000 --> 00:33:17,000
讲鳄鱼的空片很很很卖座

950
00:33:17,000 --> 00:33:19,000
然后他们就拍了一个什么

951
00:33:19,000 --> 00:33:21,000
搞不好叫什么狂蟒之灾呢

952
00:33:21,000 --> 00:33:22,000
这么优点

953
00:33:22,000 --> 00:33:24,000
然后我说其名字

954
00:33:24,000 --> 00:33:25,000
对

955
00:33:25,000 --> 00:33:26,000
对

956
00:33:26,000 --> 00:33:27,000
一定是台湾或者香港人翻译的

957
00:33:27,000 --> 00:33:28,000
对

958
00:33:28,000 --> 00:33:30,000
然后片名应该就想按的扣的

959
00:33:30,000 --> 00:33:31,000
但 ok

960
00:33:31,000 --> 00:33:31,000
哎

961
00:33:31,000 --> 00:33:32,000
没不重要

962
00:33:32,000 --> 00:33:34,000
嗯

963
00:33:34,000 --> 00:33:36,000
还有一个叫做尼克斯的东西

964
00:33:36,000 --> 00:33:37,000
其实我也没有用过

965
00:33:37,000 --> 00:33:38,000
有没有听说过

966
00:33:38,000 --> 00:33:39,000
准确来说

967
00:33:39,000 --> 00:33:41,000
尼克斯不就是尼克斯 os 的那个吗

968
00:33:41,000 --> 00:33:42,000
不不

969
00:33:42,000 --> 00:33:42,000
这个是拍手的

970
00:33:42,000 --> 00:33:45,000
尼克斯这个刚刚我们提到另外一个

971
00:33:45,000 --> 00:33:46,000
尼克斯是另外一个东西

972
00:33:46,000 --> 00:33:47,000
啊

973
00:33:47,000 --> 00:33:48,000
这个那这个我也不知道

974
00:33:48,000 --> 00:33:50,000
我一开始以为他就是那个啊

975
00:33:50,000 --> 00:33:50,000
嗯

976
00:33:50,000 --> 00:33:50,000
嗯

977
00:33:50,000 --> 00:33:51,000
嗯

978
00:33:51,000 --> 00:33:52,000
,尼克斯 os 的尼克斯

979
00:33:52,000 --> 00:33:53,000
啊

980
00:33:53,000 --> 00:33:54,000
所以

981
00:33:54,000 --> 00:33:55,000
哎

982
00:33:55,000 --> 00:33:56,000
怎么说呢

983
00:33:56,000 --> 00:33:57,000
莽然无知啊

984
00:33:57,000 --> 00:33:58,000
我们

985
00:33:58,000 --> 00:33:59,000
这这这不怪咱们吧

986
00:33:59,000 --> 00:34:03,000
我觉得这个他都这个已经什么四分五裂成这样了

987
00:34:03,000 --> 00:34:04,000
我也没什么好说的了

988
00:34:04,000 --> 00:34:06,000
哈哈哈

989
00:34:06,000 --> 00:34:07,000
来这句

990
00:34:07,000 --> 00:34:08,000
对啊

991
00:34:08,000 --> 00:34:10,000
我们反正我反正我是不怎么用了

992
00:34:10,000 --> 00:34:11,000
随便

993
00:34:11,000 --> 00:34:12,000
嗯

994
00:34:12,000 --> 00:34:14,000
对安的靠带我其实我装过一次

995
00:34:14,000 --> 00:34:15,000
但我不记得为什么了

996
00:34:15,000 --> 00:34:17,000
我用了大概两三天就把它删了

997
00:34:17,000 --> 00:34:19,000
好像是有一个我

998
00:34:19,000 --> 00:34:20,000
我不能理

999
00:34:20,000 --> 00:34:23,000
不能理解还是不能接受的呃

1000
00:34:23,000 --> 00:34:25,000
收 stop

1001
00:34:25,000 --> 00:34:26,000
但我不确定了

1002
00:34:26,000 --> 00:34:28,000
是因为他装了之后

1003
00:34:28,000 --> 00:34:31,000
system python 就就就坏了

1004
00:34:31,000 --> 00:34:32,000
还是还是 somehow

1005
00:34:32,000 --> 00:34:33,000
someway

1006
00:34:33,000 --> 00:34:35,000
有一个东西不能用

1007
00:34:35,000 --> 00:34:37,000
因为我大概三年前用过一次

1008
00:34:37,000 --> 00:34:39,000
但对具体也不记得

1009
00:34:39,000 --> 00:34:41,000
嗯

1010
00:34:41,000 --> 00:34:42,000
ok

1011
00:34:42,000 --> 00:34:43,000
过吧

1012
00:34:43,000 --> 00:34:44,000
呵呵

1013
00:34:44,000 --> 00:34:44,000
过

1014
00:34:44,000 --> 00:34:47,000
嗯

1015
00:34:47,000 --> 00:34:48,000
还有什么没有什么

1016
00:34:48,000 --> 00:34:50,000
对那另外一个 feedback 就是我

1017
00:34:50,000 --> 00:34:52,000
我给呃

1018
00:34:52,000 --> 00:34:55,000
Valve 写了邮件说我们能不能用 steelalive

1019
00:34:55,000 --> 00:34:56,000
作为我们的 sim 上啊

1020
00:34:56,000 --> 00:35:00,000
然后对一直到现在都没有人理我

1021
00:35:00,000 --> 00:35:01,000
没有 Ack

1022
00:35:01,000 --> 00:35:03,000
我们会不会有听众在 Valve 工作呢

1023
00:35:03,000 --> 00:35:07,000
Valve 应该有很多华人华人程序员的

1024
00:35:07,000 --> 00:35:09,000
这个应该是他们的法务部门吧

1025
00:35:09,000 --> 00:35:10,000
我觉得对

1026
00:35:10,000 --> 00:35:14,000
但如果你能够 somehow someway 接触到有内部人

1027
00:35:14,000 --> 00:35:15,000
最好是吧

1028
00:35:15,000 --> 00:35:20,000
对有有知道我们这个问题能够是由谁来解决

1029
00:35:20,000 --> 00:35:22,000
能不能帮帮我们的忙

1030
00:35:22,000 --> 00:35:23,000
贵些了贵些了

1031
00:35:23,000 --> 00:35:24,000
对贵些了贵些了

1032
00:35:24,000 --> 00:35:25,000
嗯

1033
00:35:25,000 --> 00:35:26,000
如果帮不了的话

1034
00:35:26,000 --> 00:35:27,000
I don't blame you

1035
00:35:27,000 --> 00:35:30,000
哈哈哈

1036
00:35:30,000 --> 00:35:31,000
对好吧

1037
00:35:31,000 --> 00:35:32,000
ok

1038
00:35:32,000 --> 00:35:34,000
呃 feedback 结束了

1039
00:35:34,000 --> 00:35:36,000
那接下来进入我们的当当当新闻会计

1040
00:35:36,000 --> 00:35:38,000
呵呵

1041
00:35:38,000 --> 00:35:39,000
来吧

1042
00:35:39,000 --> 00:35:42,000
呃对其实上一期呃 it 公众也提到了

1043
00:35:42,000 --> 00:35:47,000
就是 doctor dobs 呃这个这个在线杂志停刊

1044
00:35:47,000 --> 00:35:48,000
嗯

1045
00:35:48,000 --> 00:35:49,000
嗯

1046
00:35:49,000 --> 00:35:50,000
当然他不是停刊啊

1047
00:35:50,000 --> 00:35:52,000
他只是把他只是不再更新了

1048
00:35:52,000 --> 00:35:54,000
整个网站还是还是在那

1049
00:35:54,000 --> 00:35:56,000
我当时停刊不就是这个意思吗

1050
00:35:56,000 --> 00:35:59,000
停刊也有可能是整个网站要撤下来

1051
00:35:59,000 --> 00:36:00,000
因为他后来不不不

1052
00:36:00,000 --> 00:36:05,000
你说这个停刊这个字可能是从传统杂志的这个来的一个概念吗

1053
00:36:05,000 --> 00:36:07,000
就停止发行嘛

1054
00:36:07,000 --> 00:36:07,000
对吧

1055
00:36:07,000 --> 00:36:10,000
但是你之前买过的旧的还在你家里啊

1056
00:36:10,000 --> 00:36:11,000
好吧

1057
00:36:11,000 --> 00:36:15,000
说说所以其实还是有点嗯这个

1058
00:36:15,000 --> 00:36:17,000
就在这个语境下面其实还蛮好的

1059
00:36:17,000 --> 00:36:18,000
嗯

1060
00:36:18,000 --> 00:36:19,000
对

1063
00:37:19,000 --> 00:37:23,000
比如说教你怎么去写图像处理方面的

1064
00:37:23,000 --> 00:37:23,000
嗯

1065
00:37:23,000 --> 00:37:24,000
也不是图像处理

1066
00:37:24,000 --> 00:37:25,000
就是就是 graphic

1067
00:37:25,000 --> 00:37:26,000
programming

1068
00:37:26,000 --> 00:37:27,000
嗯

1069
00:37:27,000 --> 00:37:29,000
怎么说呢

1070
00:37:29,000 --> 00:37:29,000
对

1071
00:37:29,000 --> 00:37:32,000
就这一方面主题的一系列文章

1072
00:37:32,000 --> 00:37:35,000
他最开始其实就是在 Doctor DOPS 上面连载啊

1073
00:37:35,000 --> 00:37:39,000
然后整个连载最后集结成书放在网上

1074
00:37:39,000 --> 00:37:42,000
直到现在都是非常非常经典的一本书

1075
00:37:42,000 --> 00:37:43,000
OK

1076
00:37:43,000 --> 00:37:43,000
对

1077
00:37:43,000 --> 00:37:46,000
所以你对这个还是很有很有感情的

1078
00:37:46,000 --> 00:37:47,000
对啊

1079
00:37:47,000 --> 00:37:48,000
而且我也不知道就 doctors dobs

1080
00:37:48,000 --> 00:37:49,000
现在你看到这些这些书字里面呢

1081
00:37:49,000 --> 00:37:51,000
就有点像一个

1082
00:37:51,000 --> 00:37:53,000
每次上台的网站

1083
00:37:53,000 --> 00:37:54,000
你就看到那种

1084
00:37:54,000 --> 00:37:57,000
那种 90 年代的气息扑面而来

1085
00:37:57,000 --> 00:37:59,000
就让人觉得这是我的青少年

1086
00:37:59,000 --> 00:38:00,000
这是我的童年

1087
00:38:00,000 --> 00:38:04,000
不过怎么说呢

1088
00:38:04,000 --> 00:38:06,000
就这一类的专业网站

1089
00:38:06,000 --> 00:38:09,000
其实在广告模式情况下

1090
00:38:09,000 --> 00:38:11,000
还是挺难生存的吧

1091
00:38:11,000 --> 00:38:12,000
特别现在就有很多这种

1092
00:38:12,000 --> 00:38:13,000
所谓新媒体战

1093
00:38:13,000 --> 00:38:16,000
一直在抢眼球的情况下

1094
00:38:16,000 --> 00:38:19,000
我虽然这件事情

1095
00:38:19,000 --> 00:38:20,000
虽然让我伤感

1096
00:38:20,000 --> 00:38:21,000
但我从来不觉得

1097
00:38:21,000 --> 00:38:22,000
它是意外的事情

1098
00:38:22,000 --> 00:38:24,000
或者说它是不可理解的事情

1099
00:38:24,000 --> 00:38:26,000
因为我们每个人都知道

1100
00:38:26,000 --> 00:38:30,000
这样的内容 heavy 的网站

1101
00:38:30,000 --> 00:38:34,000
是很难在我们现在

1102
00:38:34,000 --> 00:38:35,000
这样一种经济环境下

1103
00:38:35,000 --> 00:38:36,000
生存下去的

1104
00:38:36,000 --> 00:38:38,000
因为没有人知道

1105
00:38:38,000 --> 00:38:41,000
怎样用好的内容赚钱

1106
00:38:41,000 --> 00:38:42,000
就没法量化嘛

1107
00:38:42,000 --> 00:38:43,000
这个东西

1108
00:38:43,000 --> 00:38:43,000
对

1109
00:38:43,000 --> 00:38:45,000
而不像杂志

1110
00:38:45,000 --> 00:38:46,000
你可以说

1111
00:38:46,000 --> 00:38:47,000
这本杂志就卖这么多

1112
00:38:47,000 --> 00:38:50,000
然后每一版广告都是定价上

1113
00:38:50,000 --> 00:38:52,000
现在是一个非常混乱的时代

1114
00:38:52,000 --> 00:38:53,000
没有人知道应该怎么

1115
00:38:53,000 --> 00:38:55,000
怎么用好的内容

1116
00:38:55,000 --> 00:38:56,000
所以其实还是应该就说

1117
00:38:56,000 --> 00:38:58,000
比如说像那个 Dr.Dobbs

1118
00:38:58,000 --> 00:39:01,000
他可以说恢复我们会员制啊

1119
00:39:01,000 --> 00:39:03,000
就说需要订阅才能看啊

1120
00:39:03,000 --> 00:39:04,000
之类的

1121
00:39:04,000 --> 00:39:06,000
这样起码他的这个会稳定一点吗

1122
00:39:06,000 --> 00:39:08,000
哎

1123
00:39:08,000 --> 00:39:09,000
也许吧

1124
00:39:09,000 --> 00:39:09,000
我也不知道

1125
00:39:09,000 --> 00:39:10,000
但

1126
00:39:10,000 --> 00:39:11,000
不过

1127
00:39:11,000 --> 00:39:12,000
嗯

1128
00:39:12,000 --> 00:39:13,000
完了就完了吧

1129
00:39:13,000 --> 00:39:15,000
还是还会有后继者

1130
00:39:15,000 --> 00:39:16,000
哈哈哈

1131
00:39:16,000 --> 00:39:17,000
嗯

1132
00:39:17,000 --> 00:39:18,000
而且凭良心说话

1133
00:39:18,000 --> 00:39:22,000
就是我其实也不会去专门关注 Dr.Dobbs

1134
00:39:22,000 --> 00:39:23,000
最近有什么更新

1135
00:39:23,000 --> 00:39:24,000
甚至我不知道

1136
00:39:24,000 --> 00:39:25,000
偶尔看一遍的

1137
00:39:25,000 --> 00:39:26,000
你买杂志吗

1138
00:39:26,000 --> 00:39:28,000
传统传统的传统意义上的电脑杂志

1139
00:39:28,000 --> 00:39:29,000
你还买吗

1140
00:39:29,000 --> 00:39:29,000
哇

1141
00:39:29,000 --> 00:39:32,000
很久以前还很久很久以前买

1142
00:39:32,000 --> 00:39:33,000
但是大家都是这样吗

1143
00:39:33,000 --> 00:39:35,000
对自从有了互联网之后

1144
00:39:35,000 --> 00:39:37,000
就再也不花钱买杂志了

1145
00:39:37,000 --> 00:39:37,000
对啊

1146
00:39:37,000 --> 00:39:38,000
就我小时候还会觉得

1147
00:39:38,000 --> 00:39:43,000
我小时候有一个朋友会把一整年的大软件

1148
00:39:43,000 --> 00:39:44,000
排在书架里面

1149
00:39:44,000 --> 00:39:44,000
然后呢

1150
00:39:44,000 --> 00:39:46,000
一整年的那个书籍

1151
00:39:46,000 --> 00:39:49,000
就书的那个侧面会会连成一个图案

1152
00:39:49,000 --> 00:39:51,000
我当时觉得哇将来长大了

1153
00:39:51,000 --> 00:39:51,000
我也要干这个

1154
00:39:51,000 --> 00:39:54,000
说来上次我回家的时候

1155
00:39:54,000 --> 00:39:56,000
清理家里的那个什么

1156
00:39:56,000 --> 00:39:58,000
就我的自己的书架

1157
00:39:58,000 --> 00:40:00,000
把那些都当废纸卖掉了

1158
00:40:00,000 --> 00:40:01,000
真的

1159
00:40:01,000 --> 00:40:04,000
这件事情我应该还是不会干的

1160
00:40:04,000 --> 00:40:06,000
就我小时候存攒的那些杂志

1161
00:40:06,000 --> 00:40:09,000
我觉得还是去让他们压在那儿好了

1162
00:40:09,000 --> 00:40:10,000
没有什么用啊

1163
00:40:11,000 --> 00:40:11,000
就

1164
00:40:11,000 --> 00:40:14,000
为什么一定所有事情都要有用

1165
00:40:14,000 --> 00:40:16,000
我这

1166
00:40:16,000 --> 00:40:17,000
先解释一下这个情况

1167
00:40:17,000 --> 00:40:20,000
就是说因为那个要放其他东西嘛

1168
00:40:20,000 --> 00:40:21,000
然后堆不下了

1169
00:40:21,000 --> 00:40:22,000
然后 OK

1170
00:40:22,000 --> 00:40:24,000
所以你是有空间需求

1171
00:40:24,000 --> 00:40:24,000
哦不

1172
00:40:24,000 --> 00:40:27,000
而且我有这个什么洁癖

1173
00:40:27,000 --> 00:40:27,000
整理拼

1174
00:40:27,000 --> 00:40:28,000
你有整理拼

1175
00:40:28,000 --> 00:40:29,000
OK

1176
00:40:29,000 --> 00:40:30,000
就是反正也没什么用嘛

1177
00:40:30,000 --> 00:40:32,000
过期的信息

1178
00:40:32,000 --> 00:40:33,000
然后你也不知道

1179
00:40:33,000 --> 00:40:34,000
古玩商最爱你们这种人了

1180
00:40:34,000 --> 00:40:37,000
就是你们这种人的存在使得古玩

1181
00:40:37,000 --> 00:40:42,000
只是一些文物可以在可以可以不定时的重见天日

1182
00:40:42,000 --> 00:40:43,000
如果每个人都没有整理拼的话

1183
00:40:43,000 --> 00:40:46,000
每个人的阁楼里面都堆满了各种各样的

1184
00:40:46,000 --> 00:40:47,000
各种各样的

1185
00:40:47,000 --> 00:40:49,000
在那个时代毫不稀奇

1186
00:40:49,000 --> 00:40:51,000
但是过上二三十年就非常非常

1187
00:40:51,000 --> 00:40:53,000
让人让人

1188
00:40:53,000 --> 00:40:55,000
爱不释手的东西

1189
00:40:55,000 --> 00:40:58,000
如果没有整理拼的人群存在的话

1190
00:40:58,000 --> 00:41:00,000
这些东西永远不会重见天日

1191
00:41:00,000 --> 00:41:02,000
不过我很难想象

1192
00:41:02,000 --> 00:41:04,000
什么这个

1193
00:41:04,000 --> 00:41:07,000
过期杂志能成为什么一个玩物

1194
00:41:07,000 --> 00:41:09,000
过期杂志的确很难成为玩物

1195
00:41:09,000 --> 00:41:09,000
但

1196
00:41:09,000 --> 00:41:11,000
我

1197
00:41:11,000 --> 00:41:13,000
所以起码还是

1198
00:41:13,000 --> 00:41:15,000
就在可以预见的将来

1199
00:41:15,000 --> 00:41:16,000
这个东西都值得讨论了

1200
00:41:16,000 --> 00:41:17,000
它是会成为一个负担

1201
00:41:17,000 --> 00:41:19,000
而不会成为一个有价值的东西

1202
00:41:19,000 --> 00:41:20,000
就可能唯一的价值就是

1203
00:41:20,000 --> 00:41:23,000
缅怀一下什么逝去的青春

1204
00:41:23,000 --> 00:41:26,000
它有展示的价值和收藏

1205
00:41:26,000 --> 00:41:27,000
我也不知道

1206
00:41:27,000 --> 00:41:29,000
它又不是四大名处

1207
00:41:29,000 --> 00:41:31,000
它我给展示给谁看

1208
00:41:31,000 --> 00:41:32,000
不

1209
00:41:32,000 --> 00:41:36,000
这就好像一台古旧的计算机一样

1210
00:41:36,000 --> 00:41:37,000
它没有什么使用价值的

1211
00:41:37,000 --> 00:41:38,000
可是它摆在那儿

1212
00:41:38,000 --> 00:41:40,000
就是可以让人觉得你很有文化

1213
00:41:40,000 --> 00:41:40,000
不是

1214
00:41:40,000 --> 00:41:45,000
你真的觉得大众大众软件

1215
00:41:45,000 --> 00:41:46,000
会让你显得很有文化

1216
00:41:46,000 --> 00:41:47,000
我这个

1217
00:41:47,000 --> 00:41:47,000
我都在鬼扯了

1218
00:41:47,000 --> 00:41:48,000
我也不知道

1219
00:41:48,000 --> 00:41:49,000
I doubt it

1220
00:41:49,000 --> 00:41:49,000
不

1221
00:41:49,000 --> 00:41:51,000
你有一个什么 PTP 10 或者 11

1222
00:41:51,000 --> 00:41:52,000
你摆在家里可能还行

1223
00:41:52,000 --> 00:41:55,000
但是像这种东西

1224
00:41:55,000 --> 00:41:56,000
Imagine that

1225
00:41:56,000 --> 00:41:58,000
十年之后你有了一个大宅子

1226
00:41:58,000 --> 00:42:00,000
然后大宅子里面有一个书房

1227
00:42:00,000 --> 00:42:03,000
书房里面摆了一大堆过

1228
00:42:03,000 --> 00:42:04,000
大众软件

1229
00:42:04,000 --> 00:42:05,000
九十年代的期刊

1230
00:42:05,000 --> 00:42:08,000
然后每一本都压得像钻石

1231
00:42:08,000 --> 00:42:10,000
压得像压得像大理石样品

1232
00:42:10,000 --> 00:42:11,000
然后摆在书架上

1233
00:42:11,000 --> 00:42:14,000
然后这个时候你的童年朋友们来玩的时候

1234
00:42:14,000 --> 00:42:14,000
就说

1235
00:42:14,000 --> 00:42:15,000
哇

1236
00:42:15,000 --> 00:42:16,000
你还收着九十年代的大众软件

1237
00:42:16,000 --> 00:42:18,000
这难道不是一个谈资吗

1238
00:42:18,000 --> 00:42:20,000
难道他不会让我你是一个 weirdo 吗

1239
00:42:20,000 --> 00:42:25,000
对吧

1240
00:42:25,000 --> 00:42:26,000
next

1241
00:42:26,000 --> 00:42:33,000
所以我们两个其实还是有分歧的

1242
00:42:33,000 --> 00:42:36,000
我们两个在价值观上还是有分歧的

1243
00:42:36,000 --> 00:42:39,000
太好了

1244
00:42:39,000 --> 00:42:41,000
有得聊了

1245
00:42:41,000 --> 00:42:46,000
然后另外一个就是我前两期也提到的

1246
00:42:46,000 --> 00:42:47,000
一个 unantech

1247
00:42:47,000 --> 00:42:48,000
嗯

1248
00:42:48,000 --> 00:42:51,000
也是他没有停刊了

1249
00:42:51,000 --> 00:42:52,000
但是他被卖给了 perch

1250
00:42:52,000 --> 00:42:53,000
这个你们也在啊

1251
00:42:53,000 --> 00:42:54,000
听我们聊过

1252
00:42:54,000 --> 00:42:56,000
这个我没有什么太多可说的

1253
00:42:56,000 --> 00:42:57,000
但我也觉得挺可惜的

1254
00:42:57,000 --> 00:43:00,000
其实事情就他没什么就这个还好啊

1255
00:43:00,000 --> 00:43:02,000
他卖给那个就是换了这个东家而已

1256
00:43:02,000 --> 00:43:05,000
但是编辑团队啊还是没变

1257
00:43:05,000 --> 00:43:06,000
然后他还是独立运作的

1258
00:43:06,000 --> 00:43:07,000
这个其实倒没什么

1259
00:43:07,000 --> 00:43:09,000
但是其实也反映出一个现象吧

1260
00:43:09,000 --> 00:43:10,000
就是

1261
00:43:10,000 --> 00:43:18,000
但是他们说的理由之一就是这样可以增强他们在这个广告买主那里的一个什么就竞争力嘛

1262
00:43:18,000 --> 00:43:21,000
就是因为你大平台这个买主更多嘛

1263
00:43:21,000 --> 00:43:23,000
就是这个是就是潜台词

1264
00:43:23,000 --> 00:43:26,000
就是说他作为一个独立的这么一个网站

1265
00:43:26,000 --> 00:43:28,000
均匀的广告收入

1266
00:43:28,000 --> 00:43:31,000
其实要么就是没有终究还是要去

1267
00:43:31,000 --> 00:43:33,000
终究还是需要更多的钱

1268
00:43:33,000 --> 00:43:33,000
对

1269
00:43:33,000 --> 00:43:36,000
所以其实跟那个 doctor 到面临的是同样的问题

1270
00:43:36,000 --> 00:43:38,000
只是说他的那个程度没有那么严重

1271
00:43:38,000 --> 00:43:40,000
而且他现在是说找到了一个

1272
00:43:40,000 --> 00:43:42,000
一个还不错的买家

1273
00:43:42,000 --> 00:43:45,000
然后能够就起码我们希望他能够解决问题吧

1274
00:43:45,000 --> 00:43:49,000
但是可能再过个两三年发现卖回去还是不行

1275
00:43:49,000 --> 00:43:50,000
那再怎么样呢

1276
00:43:50,000 --> 00:43:51,000
我们也不知道

1277
00:43:51,000 --> 00:43:54,000
但是像这种所谓的这种 hardcore 媒体

1278
00:43:54,000 --> 00:44:00,000
包括 B 节目在内都有这种呃用户群体的这读者群体会听众群体比较小众

1279
00:44:00,000 --> 00:44:04,000
然后没有办法呃可以持续盈利化做下去的情况

1280
00:44:04,000 --> 00:44:04,000
对吧

1281
00:44:04,000 --> 00:44:06,000
起码我们现在还是在免费做这件事情

1282
00:44:06,000 --> 00:44:07,000
对不对

1283
00:44:07,000 --> 00:44:10,000
就没有任何收费的这个呃

1284
00:44:10,000 --> 00:44:11,000
尝试吗

1285
00:44:11,000 --> 00:44:12,000
目前还征兆

1286
00:44:12,000 --> 00:44:15,000
而且我们收的话大概也是就 donate

1287
00:44:15,000 --> 00:44:17,000
就只捐捐赠而已

1288
00:44:17,000 --> 00:44:18,000
对对

1289
00:44:18,000 --> 00:44:20,000
但是就像他并不可能

1290
00:44:20,000 --> 00:44:21,000
就我们不可能说哎

1291
00:44:21,000 --> 00:44:23,000
我们来全职做这个东西

1292
00:44:23,000 --> 00:44:23,000
对吧

1293
00:44:23,000 --> 00:44:25,000
你肯定养活不了我们两个人

1294
00:44:25,000 --> 00:44:25,000
嗯

1295
00:44:27,000 --> 00:44:27,000
好吧

1296
00:44:27,000 --> 00:44:28,000
嗯

1297
00:44:28,000 --> 00:44:28,000
OK

1298
00:44:28,000 --> 00:44:31,000
现在开始今天的正题哈

1299
00:44:31,000 --> 00:44:35,000
其实今天我们准备刚才扯了差不多 45 分钟的毒色

1300
00:44:35,000 --> 00:44:36,000
对

1301
00:44:36,000 --> 00:44:40,000
我们今天准备准备延续着之前的那个话题吧

1302
00:44:40,000 --> 00:44:40,000
也不记得了

1303
00:44:40,000 --> 00:44:42,000
那个方向走下去

1304
00:44:42,000 --> 00:44:45,000
今天我们讲了一些这个运维的一些东西

1305
00:44:45,000 --> 00:44:45,000
对

1306
00:44:45,000 --> 00:44:51,000
上一期我们说的东西其实有一点像从啊

1307
00:44:51,000 --> 00:44:56,000
从小处就是从非常小的一个单独的程序运行

1308
00:44:56,000 --> 00:45:01,000
或者说一群程序在一个在一个操作系统上运行的时候

1309
00:45:01,000 --> 00:45:02,000
嗯

1310
00:45:02,000 --> 00:45:02,000
呃

1311
00:45:02,000 --> 00:45:04,000
他们的周期生存周期管理

1312
00:45:04,000 --> 00:45:06,000
然后我们上一期又提到了这些东西

1313
00:45:06,000 --> 00:45:10,000
当你把它从你开发那台计算机上拿出来

1314
00:45:10,000 --> 00:45:12,000
放到其他计算机或者反过来

1315
00:45:12,000 --> 00:45:15,000
你怎么把别人开发好的程序放到你的计算机上用的时候

1316
00:45:15,000 --> 00:45:16,000
嗯

1317
00:45:16,000 --> 00:45:16,000
呃

1318
00:45:16,000 --> 00:45:19,000
去管理他的他的生存周期

1319
00:45:19,000 --> 00:45:20,000
嗯

1320
00:45:20,000 --> 00:45:24,000
而这一期我们想要说的其实就是你怎么用它

1321
00:45:24,000 --> 00:45:37,000
你怎样才能在就是整你一个人作为一个开发者管理一堆程序和你一个公司去管理一堆你开发出来的程序

1322
00:45:37,000 --> 00:45:39,000
跑在一堆服务器上去管理一堆程序

1323
00:45:39,000 --> 00:45:40,000
嗯

1324
00:45:40,000 --> 00:45:43,000
然后在这些服务器上其实又是一个更大的层级

1325
00:45:43,000 --> 00:45:46,000
然后我们今天想要讨论的其实是这件事

1326
00:45:46,000 --> 00:45:50,000
在这个之前可能先要引入一个概念

1327
00:45:50,000 --> 00:45:52,000
就是说本身有两个概念

1328
00:45:52,000 --> 00:45:53,000
就是一个叫 dev 一个叫 op

1329
00:45:53,000 --> 00:45:56,000
就是开发者和运营者这两种身份

1330
00:45:56,000 --> 00:45:59,000
我们传统上应该是分离的吧

1331
00:45:59,000 --> 00:46:01,000
这大部分那种传统企业里面都是这样

1332
00:46:01,000 --> 00:46:03,000
对所谓 dev 就是 developer

1333
00:46:03,000 --> 00:46:03,000
啊

1334
00:46:03,000 --> 00:46:04,000
开发者

1335
00:46:04,000 --> 00:46:07,000
然后开发者的传统意义上的

1336
00:46:07,000 --> 00:46:08,000
嗯

1337
00:46:08,000 --> 00:46:09,000
应该包括哪些呢

1338
00:46:09,000 --> 00:46:12,000
我觉得可以包括比如说 programmers 肯定吧

1339
00:46:12,000 --> 00:46:12,000
嗯

1340
00:46:12,000 --> 00:46:13,000
他们是 developer

1341
00:46:13,000 --> 00:46:14,000
然后 testers

1342
00:46:14,000 --> 00:46:15,000
对

1343
00:46:15,000 --> 00:46:17,000
testers 应该其实也是开发团队的一部分

1344
00:46:17,000 --> 00:46:18,000
对

1345
00:46:18,000 --> 00:46:21,000
它是最保证这个产品质量的最后一个环节吗

1346
00:46:21,000 --> 00:46:22,000
对

1347
00:46:22,000 --> 00:46:22,000
然后

1348
00:46:22,000 --> 00:46:23,000
wait a second

1349
00:46:23,000 --> 00:46:25,000
QA 是最后一个环节

1350
00:46:25,000 --> 00:46:28,000
还是 QA 和 testers 一般是混在一起的

1351
00:46:28,000 --> 00:46:29,000
呃

1352
00:46:29,000 --> 00:46:32,000
就它开发者自己有一套标准化的测试一般是

1353
00:46:32,000 --> 00:46:36,000
然后 QA 是在就是这么白盒和黑盒嘛

1354
00:46:36,000 --> 00:46:36,000
对吧

1355
00:46:36,000 --> 00:46:36,000
对

1356
00:46:36,000 --> 00:46:39,000
就是要一个黑盒测试嘛

1357
00:46:39,000 --> 00:46:39,000
就 QA 是最后一个环节嘛

1358
00:46:39,000 --> 00:46:42,000
QA 那个环节要保证最后最终的那个结果

1359
00:46:42,000 --> 00:46:45,000
然后就是这个产品出来

1360
00:46:45,000 --> 00:46:48,000
然后运维的人把它负责

1361
00:46:48,000 --> 00:46:49,000
就是 operator

1362
00:46:49,000 --> 00:46:51,000
把它弄到机器上去跑

1363
00:46:51,000 --> 00:46:54,000
然后保证它能够连续稳定的工作下去

1364
00:46:54,000 --> 00:46:54,000
然后

1365
00:46:54,000 --> 00:46:55,000
对

1366
00:46:55,000 --> 00:46:57,000
然后这一部分就是 operator

1367
00:46:57,000 --> 00:47:01,000
ops 应该是 operations 还是 operators

1368
00:47:01,000 --> 00:47:03,000
比如 developer

1369
00:47:03,000 --> 00:47:04,000
developer operator

1370
00:47:04,000 --> 00:47:04,000
OK

1371
00:47:04,000 --> 00:47:06,000
operator 包括哪些人

1372
00:47:06,000 --> 00:47:06,000
包括

1373
00:47:06,000 --> 00:47:08,000
呃

1374
00:47:08,000 --> 00:47:08,000
呃

1375
00:47:08,000 --> 00:47:09,000
首先那些管理人员

1376
00:47:09,000 --> 00:47:10,000
网络的肯定是 operator

1377
00:47:10,000 --> 00:47:13,000
网管网络管理员有算是

1378
00:47:13,000 --> 00:47:20,000
然后 system admin 其实是更更更 proper 的一个头衔吧

1379
00:47:20,000 --> 00:47:21,000
对对 system administrator 系统管理

1380
00:47:21,000 --> 00:47:26,000
然后还有 database administrator 应该也算是 ops 的一部分吧

1381
00:47:26,000 --> 00:47:28,000
DBA

1382
00:47:28,000 --> 00:47:29,000
DBA 其实界量的之间

1383
00:47:29,000 --> 00:47:33,000
就只要是在一个是在开发时的工种

1384
00:47:33,000 --> 00:47:34,000
一个是在运行时的工种嘛

1385
00:47:35,000 --> 00:47:36,000
呃

1386
00:47:36,000 --> 00:47:37,000
可以这么理解吧

1387
00:47:37,000 --> 00:47:38,000
但至少在我接触的过程中呢

1388
00:47:38,000 --> 00:47:38,000
呃

1389
00:47:38,000 --> 00:47:38,000
呃

1390
00:47:38,000 --> 00:47:38,000
呃

1391
00:47:38,000 --> 00:47:38,000
呃

1392
00:47:38,000 --> 00:47:38,000
呃

1393
00:47:38,000 --> 00:47:38,000
呃

1394
00:47:38,000 --> 00:47:38,000
呃

1395
00:47:38,000 --> 00:47:38,000
呃

1396
00:47:38,000 --> 00:47:38,000
呃

1397
00:47:38,000 --> 00:47:38,000
呃

1398
00:47:38,000 --> 00:47:39,000
呃

1399
00:47:39,000 --> 00:47:39,000
呃

1400
00:47:39,000 --> 00:47:39,000
呃

1401
00:47:39,000 --> 00:47:39,000
呃

1402
00:47:39,000 --> 00:47:39,000
呃

1403
00:47:39,000 --> 00:47:39,000
呃

1404
00:47:39,000 --> 00:47:39,000
呃

1405
00:47:39,000 --> 00:47:39,000
呃

1406
00:47:39,000 --> 00:47:40,000
呃

1407
00:47:40,000 --> 00:47:40,000
呃

1408
00:47:40,000 --> 00:47:41,000
呃

1409
00:47:41,000 --> 00:47:41,000
呃

1410
00:47:41,000 --> 00:47:41,000
呃

1411
00:47:41,000 --> 00:47:41,000
呃

1412
00:47:41,000 --> 00:47:42,000
呃

1413
00:47:42,000 --> 00:47:42,000
呃

1414
00:47:42,000 --> 00:47:42,000
呃

1415
00:47:42,000 --> 00:47:43,000
呃

1416
00:47:43,000 --> 00:47:43,000
呃

1417
00:47:43,000 --> 00:47:43,000
呃

1418
00:47:43,000 --> 00:47:55,000
呃

1419
00:47:55,000 --> 00:47:56,000
呃

1420
00:47:56,000 --> 00:47:57,000
呃

1421
00:47:57,000 --> 00:47:57,000
呃

1422
00:47:57,000 --> 00:47:57,000
呃

1423
00:47:57,000 --> 00:47:57,000
呃

1424
00:47:57,000 --> 00:47:57,000
对

1425
00:47:57,000 --> 00:48:02,000
然后他们两者之间的这个这个这个兴趣其实有冲突的

1426
00:48:02,000 --> 00:48:02,000
嗯

1427
00:48:03,000 --> 00:48:03,000
对

1428
00:48:03,000 --> 00:48:06,000
就那像我们上次提到那个知乎帖子里面说

1429
00:48:06,000 --> 00:48:07,000
屁股决定脑袋

1430
00:48:07,000 --> 00:48:08,000
哈哈哈

1431
00:48:08,000 --> 00:48:09,000
对

1432
00:48:09,000 --> 00:48:11,000
开发者的屁股坐在

1433
00:48:11,000 --> 00:48:13,000
他们要做新的东西

1434
00:48:13,000 --> 00:48:15,000
他们要改变世界

1435
00:48:15,000 --> 00:48:16,000
这一部分

1436
00:48:16,000 --> 00:48:19,000
最新的

1437
00:48:19,000 --> 00:48:21,000
最炫的技术

1438
00:48:21,000 --> 00:48:21,000
对

1439
00:48:21,000 --> 00:48:23,000
所以他们是奥巴马派的

1440
00:48:23,000 --> 00:48:24,000
We want change

1441
00:48:24,000 --> 00:48:28,000
但是 Obs 这一派就比较保守

1442
00:48:28,000 --> 00:48:30,000
他们说我们要叫什么

1443
00:48:30,000 --> 00:48:31,000
稳定

1444
00:48:31,000 --> 00:48:33,000
reliability

1445
00:48:33,000 --> 00:48:36,000
就是你跑什么东西千万不要坏

1446
00:48:36,000 --> 00:48:38,000
坏了我们就有了麻烦

1447
00:48:38,000 --> 00:48:41,000
就要被什么半夜三点

1448
00:48:41,000 --> 00:48:42,000
被一个 call 起来

1449
00:48:42,000 --> 00:48:44,000
然后去看服务器当机了

1450
00:48:44,000 --> 00:48:45,000
怎么办

1451
00:48:45,000 --> 00:48:46,000
没错

1452
00:48:46,000 --> 00:48:49,000
而 developer 担心的则是

1453
00:48:49,000 --> 00:48:50,000
不开发新的东西

1454
00:48:50,000 --> 00:48:51,000
我就没饭吃了

1455
00:48:51,000 --> 00:48:57,000
所以传统上在这些企业里面

1456
00:48:57,000 --> 00:48:59,000
现在这两个工作是完全分离的

1457
00:48:59,000 --> 00:49:01,000
他们有不同的职责

1458
00:49:01,000 --> 00:49:03,000
他们有不同的侧重点

1459
00:49:03,000 --> 00:49:05,000
刚才讲也是因为屁股决定脑袋

1460
00:49:05,000 --> 00:49:08,000
所以他们对工具的选择也好

1461
00:49:08,000 --> 00:49:08,000
对

1462
00:49:08,000 --> 00:49:11,000
包括操作系统的选择也好

1463
00:49:11,000 --> 00:49:14,000
他们都是有不同的取向的

1464
00:49:14,000 --> 00:49:15,000
对

1465
00:49:15,000 --> 00:49:17,000
而且他们会不停的互相 blame

1466
00:49:17,000 --> 00:49:18,000
出了问题

1467
00:49:18,000 --> 00:49:21,000
开发那些傻逼写的什么破玩意

1468
00:49:21,000 --> 00:49:22,000
一开就死机

1469
00:49:22,000 --> 00:49:24,000
我说因为那帮傻逼

1470
00:49:24,000 --> 00:49:26,000
我写的这些东西好好的

1471
00:49:26,000 --> 00:49:27,000
就是跑不起来

1472
00:49:27,000 --> 00:49:28,000
蠢不蠢

1473
00:49:28,000 --> 00:49:33,000
所以其实这两个人割裂

1474
00:49:33,000 --> 00:49:34,000
还是有点问题的

1475
00:49:34,000 --> 00:49:36,000
大家刚才也看到了

1476
00:49:36,000 --> 00:49:38,000
所以最近的

1477
00:49:38,000 --> 00:49:39,000
也不叫最近

1478
00:49:39,000 --> 00:49:40,000
应该有好几年

1479
00:49:40,000 --> 00:49:41,000
这种流行的一个趋势

1480
00:49:41,000 --> 00:49:42,000
就是说

1481
00:49:42,000 --> 00:49:44,000
我们不要分这么小

1482
00:49:44,000 --> 00:49:45,000
我们就是二合

1483
00:49:45,000 --> 00:49:46,000
就这么合体

1484
00:49:46,000 --> 00:49:48,000
我们就叫做什么 devil

1485
00:49:48,000 --> 00:49:50,000
就是他既是开发者

1486
00:49:50,000 --> 00:49:51,000
他又是运维的人员

1487
00:49:51,000 --> 00:49:52,000
就是说

1488
00:49:52,000 --> 00:49:53,000
就是简单来讲

1489
00:49:53,000 --> 00:49:55,000
就是开发者说

1490
00:49:55,000 --> 00:49:56,000
deploy your own shit

1491
00:49:56,000 --> 00:49:59,000
你自己的狗屎

1492
00:49:59,000 --> 00:50:00,000
你自己去部署

1493
00:50:00,000 --> 00:50:01,000
然后你自己去运维

1494
00:50:01,000 --> 00:50:02,000
吃你自己的狗屎

1495
00:50:02,000 --> 00:50:04,000
吃然后部署你自己写出来的屎

1496
00:50:04,000 --> 00:50:05,000
对

1497
00:50:05,000 --> 00:50:08,000
然后其实从大的一个点头来说

1498
00:50:08,000 --> 00:50:08,000
其实从大的一个点头来说

1499
00:50:08,000 --> 00:50:09,000
从这个角度来讲

1500
00:50:09,000 --> 00:50:10,000
就是这个可能

1501
00:50:10,000 --> 00:50:11,000
就刚才我们讲的是一个

1502
00:50:11,000 --> 00:50:13,000
比较直白的描述

1503
00:50:13,000 --> 00:50:15,000
但是有一些比如说

1504
00:50:15,000 --> 00:50:17,000
很 enterprise 的说法

1505
00:50:17,000 --> 00:50:17,000
就是说什么

1506
00:50:17,000 --> 00:50:19,000
end to end ownership

1507
00:50:19,000 --> 00:50:24,000
就是说你这个软件的工程的

1508
00:50:24,000 --> 00:50:25,000
这个 ownership

1509
00:50:25,000 --> 00:50:27,000
就是这个权责在哪里

1510
00:50:27,000 --> 00:50:28,000
你是从头到尾

1511
00:50:28,000 --> 00:50:31,000
从它的制作到它的最终使用

1512
00:50:31,000 --> 00:50:32,000
你都是要负权责的

1513
00:50:33,000 --> 00:50:33,000
对

1514
00:50:33,000 --> 00:50:35,000
从收集用户的需求开始

1515
00:50:35,000 --> 00:50:38,000
然后到把最终产品呈现给你

1516
00:50:38,000 --> 00:50:40,000
给用户使用为止

1517
00:50:40,000 --> 00:50:44,000
整个过程你都要自己去完成

1518
00:50:44,000 --> 00:50:45,000
对

1519
00:50:45,000 --> 00:50:46,000
就这样的话

1520
00:50:46,000 --> 00:50:48,000
就是理论上说

1521
00:50:48,000 --> 00:50:51,000
是可以对开发者也好

1522
00:50:51,000 --> 00:50:52,000
还是运维者也好

1523
00:50:52,000 --> 00:50:54,000
它有更大的一个激励机制

1524
00:50:54,000 --> 00:50:54,000
因为传统上

1525
00:50:54,000 --> 00:50:56,000
开发和运维分开的话

1526
00:50:56,000 --> 00:50:58,000
有一个这么一个不太好的地方

1527
00:50:58,000 --> 00:51:00,000
就是开发者开发完毕之后

1528
00:51:00,000 --> 00:51:02,000
觉得这个事情就跟我没关系了

1529
00:51:02,000 --> 00:51:04,000
然后这个东西到底跑起来怎么样

1530
00:51:04,000 --> 00:51:05,000
性能怎么样

1531
00:51:05,000 --> 00:51:07,000
就是他们就比较

1532
00:51:07,000 --> 00:51:09,000
不太关心了

1533
00:51:09,000 --> 00:51:11,000
然后这样的话

1534
00:51:11,000 --> 00:51:12,000
从来得到的成就感

1535
00:51:12,000 --> 00:51:16,000
可能那个东西是我从头到脚负责到底的

1536
00:51:16,000 --> 00:51:17,000
然后你最终用上来看

1537
00:51:17,000 --> 00:51:18,000
牛逼吧

1538
00:51:18,000 --> 00:51:20,000
那种成就感可能就没有那么强烈

1539
00:51:20,000 --> 00:51:22,000
所以从某种意义上来讲

1540
00:51:22,000 --> 00:51:24,000
这种所谓 DevOps 运动

1541
00:51:24,000 --> 00:51:25,000
或者说这个 end-to-end ownership

1542
00:51:25,000 --> 00:51:29,000
它其实有一种也是激励开发者

1543
00:51:29,000 --> 00:51:32,000
有更多的动力去做事的一个方法

1544
00:51:32,000 --> 00:51:33,000
我觉得

1545
00:51:33,000 --> 00:51:34,000
没错

1546
00:51:34,000 --> 00:51:37,000
当然同时它这个 DevOps 运动

1547
00:51:37,000 --> 00:51:41,000
就是它对这个软件从业者的技能的要求

1548
00:51:41,000 --> 00:51:44,000
就有了更进一步的要求了

1549
00:51:44,000 --> 00:51:47,000
或者说我们之前有一个另外一个概念叫做 Full Stack Developer

1550
00:51:47,000 --> 00:51:49,000
就是所谓全站工程师

1551
00:51:49,000 --> 00:51:53,000
就是你要从这个硬件底层到最终用户界面

1552
00:51:53,000 --> 00:51:55,000
每一个步骤

1553
00:51:55,000 --> 00:51:56,000
你都你不说要精通

1554
00:51:56,000 --> 00:51:57,000
起码也要了解

1555
00:51:57,000 --> 00:51:59,000
你至少要知道出了问题

1556
00:51:59,000 --> 00:52:01,000
去在哪一层去解决

1557
00:52:01,000 --> 00:52:02,000
那就说这个是一个所谓的

1558
00:52:02,000 --> 00:52:04,000
如果把这个定为一个终极目标的话

1559
00:52:04,000 --> 00:52:08,000
DevOps 其实就是再往这个目标上又更进了一步

1560
00:52:08,000 --> 00:52:09,000
对

1561
00:52:09,000 --> 00:52:12,000
而且其实我觉得 DevOps 有点多少有点

1562
00:52:12,000 --> 00:52:15,000
back to the roots 的感觉

1563
00:52:15,000 --> 00:52:17,000
就是在很古早的时代

1564
00:52:17,000 --> 00:52:18,000
每一个程序员都是 DevOps

1565
00:52:20,000 --> 00:52:20,000
对

1566
00:52:20,000 --> 00:52:23,000
还没有出现这个

1567
00:52:23,000 --> 00:52:24,000
还没有出现分野

1568
00:52:24,000 --> 00:52:24,000
对吧

1569
00:52:24,000 --> 00:52:25,000
对

1570
00:52:25,000 --> 00:52:30,000
但是分工就是软件工程变得越来越大的时候

1571
00:52:30,000 --> 00:52:31,000
一个人的 scope

1572
00:52:31,000 --> 00:52:34,000
可能没办法 cover 到那么大的

1573
00:52:34,000 --> 00:52:34,000
对吧

1574
00:52:34,000 --> 00:52:35,000
范围

1575
00:52:35,000 --> 00:52:36,000
但是

1576
00:52:36,000 --> 00:52:42,000
那个时候的思潮就是要让这一群 Devs 做 Devs 的事情

1577
00:52:42,000 --> 00:52:44,000
然后一群 Ops 做 Ops 的事情

1578
00:52:44,000 --> 00:52:46,000
但是现在潮流又反过来了

1579
00:52:46,000 --> 00:52:50,000
就是要希望一个人能够完成所有的事情

1580
00:52:50,000 --> 00:52:51,000
因为这样才可以得到

1581
00:52:51,000 --> 00:52:52,000
怎么说呢

1582
00:52:52,000 --> 00:52:55,000
比较高质量的软件

1583
00:52:55,000 --> 00:52:59,000
并且也会让整个开发过程变得更加敏捷一点

1584
00:52:59,000 --> 00:53:02,000
其实刚才讲了那么多

1585
00:53:02,000 --> 00:53:04,000
我们还是要探究一下 DevOps

1586
00:53:04,000 --> 00:53:04,000
这个背景

1587
00:53:04,000 --> 00:53:08,000
刚才讲一个激励因素是一个方面

1588
00:53:08,000 --> 00:53:11,000
其实我觉得可能从一个务实的角度来讲

1589
00:53:11,000 --> 00:53:13,000
就特别是现在我们不是流行创业小团队吗

1590
00:53:13,000 --> 00:53:14,000
小团队的话

1591
00:53:14,000 --> 00:53:18,000
那么就隐含的一个前提

1592
00:53:18,000 --> 00:53:19,000
就是人少

1593
00:53:19,000 --> 00:53:20,000
每个人都要会什么

1594
00:53:20,000 --> 00:53:20,000
对

1595
00:53:20,000 --> 00:53:22,000
就是说我可能这个团队我就三个人

1596
00:53:22,000 --> 00:53:24,000
如果说你这个三个人

1597
00:53:24,000 --> 00:53:27,000
然后你说你其中一个人只写代码

1598
00:53:27,000 --> 00:53:28,000
另外一个只运维

1599
00:53:28,000 --> 00:53:32,000
这显然那可能平时写代码的人就一直在写代码

1600
00:53:32,000 --> 00:53:33,000
然后运维的人部署完了

1601
00:53:33,000 --> 00:53:34,000
也没什么事干了

1602
00:53:34,000 --> 00:53:34,000
对吧

1603
00:53:34,000 --> 00:53:37,000
就其实对这个资源的利用也是不太合理的

1604
00:53:37,000 --> 00:53:39,000
然后另外一方面就是说

1605
00:53:39,000 --> 00:53:43,000
小公司可能也没有那么那么划分明确的东西

1606
00:53:43,000 --> 00:53:46,000
因为如果你一旦划分明确的话

1607
00:53:46,000 --> 00:53:48,000
你就要在不同的人员之间沟通

1608
00:53:48,000 --> 00:53:50,000
沟通的话

1609
00:53:50,000 --> 00:53:55,000
其实对这个效率是有很大的折损的

1610
00:53:55,000 --> 00:53:55,000
对

1611
00:53:55,000 --> 00:53:58,000
如果你说你是一个小团队的话

1612
00:53:58,000 --> 00:54:01,000
你肯定是要尽量减少这种折损

1613
00:54:01,000 --> 00:54:03,000
因为你没有那么多人去

1614
00:54:03,000 --> 00:54:04,000
你没有那么多总的

1615
00:54:04,000 --> 00:54:07,000
那个什么脑力去消耗

1616
00:54:07,000 --> 00:54:09,000
你要把这些东西全部用在实际的价值上面去

1617
00:54:09,000 --> 00:54:11,000
你得让他们都

1618
00:54:11,000 --> 00:54:14,000
他就是在真正实在在做事

1619
00:54:14,000 --> 00:54:15,000
所以其实从这个点来讲

1620
00:54:15,000 --> 00:54:17,000
就是 DevOps 这个运动

1621
00:54:17,000 --> 00:54:19,000
还是从很多务实的考虑出来的结果吧

1622
00:54:19,000 --> 00:54:20,000
我觉得

1623
00:54:20,000 --> 00:54:21,000
没错

1624
00:54:21,000 --> 00:54:25,000
那要成为一个 DevOps

1625
00:54:25,000 --> 00:54:28,000
其实说难也不难

1626
00:54:28,000 --> 00:54:29,000
但是说简单也不是很简单吧

1627
00:54:29,000 --> 00:54:31,000
就如果你只是一个

1628
00:54:31,000 --> 00:54:34,000
或者说我是一个很普通的

1629
00:54:34,000 --> 00:54:36,000
学了一点编程的人

1630
00:54:36,000 --> 00:54:40,000
我怎样才能知道自己要成为一个 DevOps

1631
00:54:40,000 --> 00:54:43,000
需要哪些额外的知识呢

1632
00:54:43,000 --> 00:54:47,000
就是其实这个问题有点让我想起

1633
00:54:47,000 --> 00:54:51,000
就是之前不只是在知乎上

1634
00:54:51,000 --> 00:54:52,000
就是很多地方都会出现那个问题

1635
00:54:52,000 --> 00:54:54,000
就是我是学计算机的

1636
00:54:54,000 --> 00:54:58,000
但是我的亲戚朋友让我修电脑

1637
00:54:58,000 --> 00:54:58,000
我不会修

1638
00:54:58,000 --> 00:55:01,000
我应该怎么让他们理解

1639
00:55:01,000 --> 00:55:03,000
我是学计算机的

1640
00:55:03,000 --> 00:55:04,000
但是我不应该会修电脑的

1641
00:55:04,000 --> 00:55:04,000
但是我不应该会修电脑的

1642
00:55:04,000 --> 00:55:04,000
但是我不应该会修电脑的

1643
00:55:04,000 --> 00:55:08,000
我觉得我对这个问题的回答就是

1644
00:55:08,000 --> 00:55:10,000
你一个学计算机的

1645
00:55:10,000 --> 00:55:11,000
怎么可以不会修电脑

1646
00:55:11,000 --> 00:55:17,000
但是现在想想这种反应

1647
00:55:17,000 --> 00:55:18,000
可能是

1648
00:55:18,000 --> 00:55:19,000
错了

1649
00:55:19,000 --> 00:55:20,000
是不那么

1650
00:55:20,000 --> 00:55:22,000
至少是政治不正确的

1651
00:55:22,000 --> 00:55:24,000
就是你不能要求每一个人

1652
00:55:24,000 --> 00:55:26,000
所选择的专业

1653
00:55:26,000 --> 00:55:27,000
都是他真正

1654
00:55:27,000 --> 00:55:30,000
这么说好像太黑了

1655
00:55:30,000 --> 00:55:32,000
都是他真正所喜欢的

1656
00:55:32,000 --> 00:55:34,000
这个没什么好黑的

1657
00:55:34,000 --> 00:55:34,000
这个现实的专业

1658
00:55:34,000 --> 00:55:37,000
我相信很多人就学的专业

1659
00:55:37,000 --> 00:55:40,000
都不是他自己真正喜欢的东西

1660
00:55:40,000 --> 00:55:40,000
对

1661
00:55:40,000 --> 00:55:44,000
在报计算机科学专业之前

1662
00:55:44,000 --> 00:55:45,000
可能完全不知道

1663
00:55:45,000 --> 00:55:46,000
计算机科学到底是干嘛

1664
00:55:46,000 --> 00:55:47,000
对啊

1665
00:55:47,000 --> 00:55:49,000
这个是我没有经历过的

1666
00:55:49,000 --> 00:55:52,000
这是我不能理解的一种现象

1667
00:55:52,000 --> 00:55:56,000
但我觉得可能具体去想

1668
00:55:56,000 --> 00:55:58,000
也没什么可以后悔的

1669
00:55:58,000 --> 00:56:00,000
可能有些人就是这样的

1670
00:56:00,000 --> 00:56:01,000
但在我看来

1671
00:56:01,000 --> 00:56:03,000
一个学计算机的不会修电脑

1672
00:56:03,000 --> 00:56:04,000
是挺

1673
00:56:04,000 --> 00:56:05,000
让人费解的一件事情

1674
00:56:05,000 --> 00:56:06,000
甚至会

1675
00:56:06,000 --> 00:56:08,000
在主观上

1676
00:56:08,000 --> 00:56:09,000
去寻找一个

1677
00:56:09,000 --> 00:56:11,000
怎么才能让别人明白

1678
00:56:11,000 --> 00:56:13,000
我学计算机的

1679
00:56:13,000 --> 00:56:14,000
就不会修电脑

1680
00:56:14,000 --> 00:56:15,000
是一件正常的事情

1681
00:56:15,000 --> 00:56:18,000
anyway

1682
00:56:18,000 --> 00:56:21,000
就回到 DevOps 这个话题

1683
00:56:21,000 --> 00:56:21,000
就是我觉得

1684
00:56:21,000 --> 00:56:23,000
这就有点像

1685
00:56:23,000 --> 00:56:25,000
你要成为一个 DevOps

1686
00:56:25,000 --> 00:56:26,000
但是你只会 Dev

1687
00:56:26,000 --> 00:56:27,000
可能就有点像

1688
00:56:27,000 --> 00:56:28,000
你是一个学计算机的人

1689
00:56:28,000 --> 00:56:29,000
然后你要学会

1690
00:56:29,000 --> 00:56:30,000
怎么修计算机一样

1691
00:56:30,000 --> 00:56:31,000
是一个从

1692
00:56:31,000 --> 00:56:32,000
从

1693
00:56:32,000 --> 00:56:34,000
偏向理论的部分

1694
00:56:34,000 --> 00:56:34,000
去学计算机的人

1695
00:56:34,000 --> 00:56:37,000
转向于理论和实践

1696
00:56:37,000 --> 00:56:38,000
相结合的

1697
00:56:38,000 --> 00:56:39,000
一个状态的过程

1698
00:56:39,000 --> 00:56:43,000
然后还有一部分人

1699
00:56:43,000 --> 00:56:44,000
是从

1700
00:56:44,000 --> 00:56:45,000
然后转向 DevOps

1701
00:56:45,000 --> 00:56:47,000
他们又需要学习什么东西

1702
00:56:47,000 --> 00:56:48,000
对

1703
00:56:48,000 --> 00:56:50,000
这个其实也挺有意思的

1704
00:56:50,000 --> 00:56:50,000
就是

1705
00:56:50,000 --> 00:56:53,000
想象你是一个

1706
00:56:53,000 --> 00:56:55,000
在中国村电脑城

1707
00:56:55,000 --> 00:56:57,000
传奇长大的孩子

1708
00:56:57,000 --> 00:56:59,000
然后

1709
00:56:59,000 --> 00:57:01,000
在生命的某一时刻

1710
00:57:01,000 --> 00:57:03,000
你突然决定说

1711
00:57:03,000 --> 00:57:03,000
我

1712
00:57:03,000 --> 00:57:04,000
对

1714
00:57:34,000 --> 00:57:36,000
什么思科中

1715
00:57:36,000 --> 00:57:38,000
还很牛逼的时候

1716
00:57:38,000 --> 00:57:39,000
不是有什么各种认证吗

1717
00:57:39,000 --> 00:57:42,000
就是什么

1718
00:57:42,000 --> 00:57:44,000
还有好几个

1719
00:57:44,000 --> 00:57:45,000
什么 CCEP

1720
00:57:45,000 --> 00:57:45,000
什么

1721
00:57:45,000 --> 00:57:46,000
一下缩写

1722
00:57:46,000 --> 00:57:47,000
我就想不起来

1723
00:57:47,000 --> 00:57:49,000
就是专门教你

1724
00:57:49,000 --> 00:57:50,000
怎么去管理一个

1725
00:57:50,000 --> 00:57:51,000
组建计算机网络

1726
00:57:51,000 --> 00:57:52,000
管理计算机网络

1727
00:57:52,000 --> 00:57:53,000
然后包括很多人

1728
00:57:53,000 --> 00:57:56,000
也就是从这个地方入手

1729
00:57:56,000 --> 00:57:57,000
然后开始去接触

1730
00:57:57,000 --> 00:57:58,000
服务器的

1731
00:57:58,000 --> 00:58:00,000
起码就中国互联网

1732
00:58:00,000 --> 00:58:01,000
早期创业那一帮人

1733
00:58:01,000 --> 00:58:03,000
很多是从这种渠道出来的

1734
00:58:03,000 --> 00:58:04,000
哦

1735
00:58:04,000 --> 00:58:05,000
我明白了

1736
00:58:05,000 --> 00:58:08,000
就是就等于把计算机网络管理

1737
00:58:08,000 --> 00:58:10,000
作为一种技能来教授

1738
00:58:10,000 --> 00:58:11,000
对对

1739
00:58:11,000 --> 00:58:12,000
这就是一个还有

1740
00:58:12,000 --> 00:58:13,000
还可以搬证书的技能

1741
00:58:13,000 --> 00:58:15,000
当然是很多人有这种方式

1742
00:58:15,000 --> 00:58:16,000
我知道这个东西

1743
00:58:16,000 --> 00:58:18,000
那个时候虽然我还小

1744
00:58:18,000 --> 00:58:19,000
但我总觉得这些东西应该是

1745
00:58:19,000 --> 00:58:23,000
至少是就是你得先会写程序

1746
00:58:23,000 --> 00:58:24,000
才会去考的一个东西

1747
00:58:24,000 --> 00:58:25,000
不需要

1748
00:58:25,000 --> 00:58:26,000
完全不需要

1749
00:58:26,000 --> 00:58:28,000
原来如此

1750
00:58:28,000 --> 00:58:30,000
有什么北大青鸟

1751
00:58:30,000 --> 00:58:31,000
你还有吗

1752
00:58:31,000 --> 00:58:32,000
这种各种培训班

1753
00:58:32,000 --> 00:58:33,000
也是在做这种事情

1754
00:58:33,000 --> 00:58:34,000
记得记得

1755
00:58:34,000 --> 00:58:35,000
现在怎么蓝翔技教

1756
00:58:35,000 --> 00:58:37,000
估计在各做一个事吧

1757
00:58:37,000 --> 00:58:37,000
OK

1758
00:58:37,000 --> 00:58:39,000
对就是这方面

1759
00:58:39,000 --> 00:58:41,000
是属于一个比较成熟的

1760
00:58:41,000 --> 00:58:42,000
因为因为网络

1761
00:58:42,000 --> 00:58:44,000
其实它是一个演进

1762
00:58:44,000 --> 00:58:46,000
相对于相对来说比较慢

1763
00:58:46,000 --> 00:58:47,000
就是它的这个技术

1764
00:58:47,000 --> 00:58:48,000
是比较稳定的一个东西

1765
00:58:48,000 --> 00:58:51,000
然后就会有一些这种

1766
00:58:51,000 --> 00:58:53,000
成熟的培训体系来做

1767
00:58:53,000 --> 00:58:56,000
教大家怎么去使用组件网络

1768
00:58:56,000 --> 00:58:58,000
怎么去调试之类的东西

1769
00:58:58,000 --> 00:59:02,000
然后很多这个公司招人的时候

1770
00:59:02,000 --> 00:59:04,000
也会去选择

1771
00:59:04,000 --> 00:59:04,000
就是

1772
00:59:04,000 --> 00:59:05,000
说我来找一个网络管理员

1773
00:59:05,000 --> 00:59:06,000
把这个东西弄好就好了

1774
00:59:06,000 --> 00:59:07,000
好吧

1775
00:59:07,000 --> 00:59:09,000
现在我大概明白了

1776
00:59:09,000 --> 00:59:10,000
对了

1777
00:59:10,000 --> 00:59:11,000
OK

1778
00:59:11,000 --> 00:59:12,000
对

1779
00:59:12,000 --> 00:59:14,000
那好吧

1780
00:59:14,000 --> 00:59:15,000
那我们来说说

1781
00:59:15,000 --> 00:59:16,000
做一个 divops

1782
00:59:16,000 --> 00:59:17,000
到底需要哪些知识

1783
00:59:17,000 --> 00:59:20,000
首先你得知道

1784
00:59:20,000 --> 00:59:20,000
软件工程

1785
00:59:20,000 --> 00:59:21,000
对吧

1786
00:59:21,000 --> 00:59:21,000
对

1787
00:59:21,000 --> 00:59:24,000
包括软件工程的

1788
00:59:24,000 --> 00:59:24,000
所有的那些东西

1789
00:59:24,000 --> 00:59:26,000
什么算法

1790
00:59:26,000 --> 00:59:28,000
什么东西的之类的

1791
00:59:28,000 --> 00:59:29,000
你得全会

1792
00:59:29,000 --> 00:59:31,000
你得先把那个东西做出来

1793
00:59:31,000 --> 00:59:31,000
对吧

1794
00:59:31,000 --> 00:59:32,000
你得是一个

1795
00:59:32,000 --> 00:59:33,000
是一个厨师

1796
00:59:33,000 --> 00:59:34,000
对

1797
00:59:34,000 --> 00:59:36,000
或者说我们前两期提及的这些内容

1798
00:59:36,000 --> 00:59:37,000
你得会

1799
00:59:37,000 --> 00:59:37,000
你得会

1800
00:59:37,000 --> 00:59:40,000
然后在那些基础上

1801
00:59:40,000 --> 00:59:41,000
你还得知道

1802
00:59:41,000 --> 00:59:43,000
现代的一个服务器

1803
00:59:43,000 --> 00:59:45,000
是怎么样子

1804
00:59:45,000 --> 00:59:45,000
现在一个

1805
00:59:45,000 --> 00:59:47,000
它需要一个什么样操作系统

1806
00:59:47,000 --> 00:59:48,000
它需要有什么工具

1807
00:59:48,000 --> 00:59:49,000
刚才我讲

1808
00:59:49,000 --> 00:59:51,000
我们待会会提到一些部署的一些工具

1809
00:59:51,000 --> 00:59:54,000
然后你还得知道网络的基础的一些东西

1810
00:59:54,000 --> 00:59:55,000
是怎么样子的

1811
00:59:55,000 --> 00:59:58,000
什么 TCP IP 几层几层

1812
00:59:58,000 --> 00:59:59,000
然后每个包干嘛的

1813
00:59:59,000 --> 01:00:00,000
然后每一层能做什么

1814
01:00:00,000 --> 01:00:02,000
因为这样的话

1815
01:00:02,000 --> 01:00:03,000
你出了问题

1816
01:00:03,000 --> 01:00:03,000
你才好找到一些工具

1817
01:00:03,000 --> 01:00:05,000
才要出错嘛

1818
01:00:05,000 --> 01:00:07,000
然后你还得会在

1819
01:00:07,000 --> 01:00:10,000
比如说 Linux 的系统上面配置这些东西

1820
01:00:10,000 --> 01:00:13,000
使得它能达到你的一些效果

1821
01:00:13,000 --> 01:00:16,000
你还得知道操作系统的底层

1822
01:00:16,000 --> 01:00:18,000
什么那些调度怎么样子

1823
01:00:18,000 --> 01:00:20,000
然后如此种种吧

1824
01:00:20,000 --> 01:00:21,000
对

1825
01:00:21,000 --> 01:00:22,000
所以总结出来

1826
01:00:22,000 --> 01:00:24,000
就是要有计算机网络方面的知识

1827
01:00:24,000 --> 01:00:27,000
要有计算机架构方面的知识

1828
01:00:27,000 --> 01:00:27,000
对

1829
01:00:27,000 --> 01:00:30,000
并且还要有实践技能

1830
01:00:30,000 --> 01:00:32,000
其实我觉得最重要的一点就是

1831
01:00:32,000 --> 01:00:33,000
你得明白

1832
01:00:33,000 --> 01:00:40,000
怎么样才能隔着网络去操纵一台远程的计算机

1833
01:00:40,000 --> 01:00:44,000
就是当你看不到那台计算机的时候

1834
01:00:44,000 --> 01:00:45,000
怎么才能操作它

1835
01:00:45,000 --> 01:00:49,000
去探测远程计算机的状态

1836
01:00:49,000 --> 01:00:50,000
去配置远程计算机的功能

1837
01:00:50,000 --> 01:00:55,000
然后把你的软件通过一个非同性化的方式

1838
01:00:55,000 --> 01:00:56,000
去部署到那台计算机上

1839
01:00:56,000 --> 01:01:03,000
然后才能去考虑怎么样把它运行起来之类的

1840
01:01:03,000 --> 01:01:03,000
而这些东西

1841
01:01:03,000 --> 01:01:06,000
其实都是跟编程没有什么直接关系的

1842
01:01:06,000 --> 01:01:08,000
对

1843
01:01:08,000 --> 01:01:09,000
可以这么说吧

1844
01:01:09,000 --> 01:01:09,000
对

1845
01:01:09,000 --> 01:01:11,000
就是如果你习惯了

1846
01:01:11,000 --> 01:01:14,000
在一个 IDE 里面写出一个程序

1847
01:01:14,000 --> 01:01:17,000
然后点一下 IDE 的那个 play button

1848
01:01:17,000 --> 01:01:19,000
然后这个程序就跑起来的话

1849
01:01:19,000 --> 01:01:21,000
那么可能到这个点上

1850
01:01:21,000 --> 01:01:24,000
你对于怎样才能让这个程序

1851
01:01:24,000 --> 01:01:26,000
在一个远程的计算机上跑起来

1852
01:01:26,000 --> 01:01:28,000
是茫然无知的

1853
01:01:28,000 --> 01:01:30,000
这块知识是非常需要

1854
01:01:30,000 --> 01:01:33,000
需要 DevOps 掌握的

1855
01:01:33,000 --> 01:01:33,000
对

1856
01:01:33,000 --> 01:01:38,000
换句话说 DevOps 其实是需要一个软件工程师

1857
01:01:38,000 --> 01:01:42,000
成为一个计算机行业的文艺复兴人

1858
01:01:42,000 --> 01:01:43,000
他得什么都会

1859
01:01:43,000 --> 01:01:48,000
然后包括你得如果拿餐厅来做比较好了

1860
01:01:48,000 --> 01:01:50,000
你得是成为一个小餐馆的老板

1861
01:01:50,000 --> 01:01:52,000
你得从采购原材料开始

1862
01:01:52,000 --> 01:01:53,000
到制作原材料

1863
01:01:53,000 --> 01:01:54,000
到上菜

1864
01:01:54,000 --> 01:01:56,000
到包括回收盘子洗碗

1865
01:01:56,000 --> 01:01:58,000
全套都得搞定

1866
01:01:58,000 --> 01:02:01,000
而不是说像一个五星级酒店大厨

1867
01:02:01,000 --> 01:02:03,000
你只用掌勺就可以了

1868
01:02:03,000 --> 01:02:03,000
对

1869
01:02:03,000 --> 01:02:06,000
所以这种要求还是蛮高的

1870
01:02:06,000 --> 01:02:09,000
可能说到这儿就有些人已经望而却步了

1871
01:02:09,000 --> 01:02:10,000
就我不要当 DevOps

1872
01:02:10,000 --> 01:02:11,000
我好好写我的程序

1873
01:02:11,000 --> 01:02:11,000
好累

1874
01:02:11,000 --> 01:02:12,000
对

1875
01:02:12,000 --> 01:02:16,000
这好像好像好像有些后端程序员会说

1876
01:02:16,000 --> 01:02:17,000
哎呀前面那套不要搞

1877
01:02:17,000 --> 01:02:19,000
或者是

1878
01:02:19,000 --> 01:02:24,000
对回到那个 computer science 的专业生的比喻

1879
01:02:24,000 --> 01:02:26,000
就是哎呀我干嘛要学电脑

1880
01:02:26,000 --> 01:02:29,000
其实可能有时候我也会有这样的想法

1881
01:02:29,000 --> 01:02:29,000
就是

1882
01:02:29,000 --> 01:02:33,000
这个东西坏了

1883
01:02:33,000 --> 01:02:34,000
你要我修

1884
01:02:34,000 --> 01:02:40,000
但其实我是没有那么多时间精力或者是 knowhow 去搞定这件事情

1885
01:02:40,000 --> 01:02:41,000
嗯

1886
01:02:41,000 --> 01:02:43,000
嗯

1887
01:02:43,000 --> 01:02:45,000
对

1888
01:02:45,000 --> 01:02:48,000
这可能对这个广度的需求会比较高

1889
01:02:48,000 --> 01:02:52,000
但对深度的需求其实也没有那么多

1890
01:02:52,000 --> 01:02:59,000
比如说你可能并不真正的需要完全理解这个 Linux 的什么内核才能做 DevOps

1891
01:02:59,000 --> 01:02:59,000
对吧

1892
01:02:59,000 --> 01:03:01,000
其实也没有那个必要

1893
01:03:01,000 --> 01:03:03,000
就是说并不是说我们刚才提到那些东西

1894
01:03:03,000 --> 01:03:05,000
你都要每个都要完全精通而已

1895
01:03:05,000 --> 01:03:06,000
啊

1896
01:03:06,000 --> 01:03:09,000
你就有时候可能只是作为一个工具的需求

1897
01:03:09,000 --> 01:03:11,000
你知道出了问题怎么去解决它

1898
01:03:11,000 --> 01:03:11,000
你并不

1899
01:03:11,000 --> 01:03:14,000
但如果你有兴趣或者有这个学有余力哈

1900
01:03:14,000 --> 01:03:17,000
你愿意去去去再钻研某一个自己的短板

1901
01:03:17,000 --> 01:03:19,000
其实当然也是很好的

1902
01:03:19,000 --> 01:03:22,000
但是我觉得也不要想的那么太可怕吧

1903
01:03:22,000 --> 01:03:22,000
我觉得

1904
01:03:22,000 --> 01:03:23,000
嗯

1905
01:03:23,000 --> 01:03:27,000
而且还有很重要的点就是要掌握一门 script language

1906
01:03:27,000 --> 01:03:28,000
或者是

1907
01:03:28,000 --> 01:03:31,000
几门 script language

1908
01:03:31,000 --> 01:03:32,000
除了除了 shell script 之外

1909
01:03:32,000 --> 01:03:33,000
还有掌握什么的

1910
01:03:33,000 --> 01:03:35,000
什么 Ruby 和 Python 之类的

1911
01:03:35,000 --> 01:03:40,000
因为我们接下来提到很多 opt-to 其实都是逃不了的

1912
01:03:40,000 --> 01:03:41,000
对逃不掉的

1913
01:03:42,000 --> 01:03:42,000
好

1914
01:03:42,000 --> 01:03:47,000
那么开始介绍这些运维的一些常见的工具吧

1915
01:03:47,000 --> 01:03:48,000
好了

1916
01:03:48,000 --> 01:03:49,000
好呀

1917
01:03:49,000 --> 01:03:51,000
最简单的一个也是可能比较稍微古老

1918
01:03:51,000 --> 01:03:56,000
或者是这个没有那么吓人的一个工具叫做 fabric

1919
01:03:57,000 --> 01:03:59,000
这就是我们 Pythonista 喜欢的东西

1920
01:04:00,000 --> 01:04:01,000
对这是一个什么呢

1921
01:04:01,000 --> 01:04:03,000
这是一个可以用

1922
01:04:03,000 --> 01:04:07,000
Python 脚本语言来编程控制

1923
01:04:07,000 --> 01:04:09,000
或者说你就写几个 Python 脚本来

1924
01:04:09,000 --> 01:04:16,000
然后来控制这个远向某几台远程服务器发送指令的一个工具

1925
01:04:16,000 --> 01:04:17,000
可以这么说

1926
01:04:17,000 --> 01:04:20,000
就是其实它是非常简单的一个

1927
01:04:20,000 --> 01:04:22,000
让你可以

1928
01:04:22,000 --> 01:04:27,000
几批量处理一堆远程计算机上

1929
01:04:27,000 --> 01:04:31,000
比如说在在在一堆远程计算机上同时运行一个程序

1930
01:04:31,000 --> 01:04:33,000
然后看他们的

1931
01:04:33,000 --> 01:04:33,000
嗯

1932
01:04:33,000 --> 01:04:35,000
看他们输出结果之类的

1933
01:04:35,000 --> 01:04:37,000
这样一个一个很简单的工具

1934
01:04:37,000 --> 01:04:39,000
就是简单

1935
01:04:39,000 --> 01:04:43,000
就是它可以让你通过 SSH 协议

1936
01:04:43,000 --> 01:04:45,000
就其实它就是一个可编程的 SSH 客户

1937
01:04:45,000 --> 01:04:45,000
对没错

1938
01:04:45,000 --> 01:04:46,000
可以这么讲

1939
01:04:46,000 --> 01:04:49,000
然后 Ruby 那边有一个叫做 Capistrano

1940
01:04:49,000 --> 01:04:52,000
这可能这就是一个意大利词

1941
01:04:52,000 --> 01:04:53,000
应该看起来像

1942
01:04:53,000 --> 01:04:57,000
的这么一个工具 Capistrano

1943
01:04:57,000 --> 01:05:01,000
然后它也是利用了 Ruby 的这张比较

1944
01:05:01,000 --> 01:05:03,000
强力的工具

1945
01:05:03,000 --> 01:05:07,000
就是它可以用 Ruby 的写 DSL 的功能

1946
01:05:07,000 --> 01:05:09,000
搞出这么一套东西

1947
01:05:09,000 --> 01:05:12,000
就是它也是一个 Ruby Jam

1948
01:05:12,000 --> 01:05:17,000
然后也是可以定义一大堆在远程机器上跑起来的东西

1949
01:05:17,000 --> 01:05:20,000
诸如此类的

1950
01:05:20,000 --> 01:05:21,000
只不过是 Ruby 这一边的

1951
01:05:21,000 --> 01:05:26,000
而且可能应该是要比 Fabric 更强大一点

1952
01:05:26,000 --> 01:05:27,000
我觉得

1953
01:05:27,000 --> 01:05:28,000
嗯

1954
01:05:28,000 --> 01:05:31,000
但是不管是这个叫什么 Capistrano 和这个 Fabric 也好啊

1955
01:05:31,000 --> 01:05:32,000
它都有一个这个很

1956
01:05:32,000 --> 01:05:33,000
就它很强大一点的东西啊

1957
01:05:33,000 --> 01:05:34,000
很很很简单的一个工具

1958
01:05:34,000 --> 01:05:36,000
就是你只要理解 SSH 怎么回事

1959
01:05:36,000 --> 01:05:37,000
就基本上能够写

1960
01:05:37,000 --> 01:05:40,000
能够用它来做一些自动化的工作

1961
01:05:40,000 --> 01:05:43,000
但是它的问题在哪里呢

1962
01:05:43,000 --> 01:05:46,000
就是如果它要批量处理多台机器的话

1963
01:05:46,000 --> 01:05:47,000
就同时处理多台机器的话

1964
01:05:47,000 --> 01:05:52,000
它它要求那些机器的状态是一致的

1965
01:05:52,000 --> 01:05:53,000
对

1966
01:05:53,000 --> 01:05:55,000
哎不然会出现什么问题呢

1967
01:05:55,000 --> 01:05:56,000
就是你写一个脚本

1968
01:05:56,000 --> 01:05:57,000
它可能

1969
01:05:57,000 --> 01:05:58,000
呃

1970
01:05:58,000 --> 01:06:02,000
但你可以说什么用易夫语句去判断它当前的状态是怎么样子

1971
01:06:02,000 --> 01:06:03,000
但是总总体来讲呢

1972
01:06:03,000 --> 01:06:03,000
呃

1973
01:06:03,000 --> 01:06:07,000
如果你的这个操作多台机器的状态不一致

1974
01:06:07,000 --> 01:06:11,000
那么你可能执行的每一条指令的成功与失败就不确定

1975
01:06:11,000 --> 01:06:11,000
对吧

1976
01:06:11,000 --> 01:06:17,000
这样的话你对接下来的要做的操作就会变得分支很多

1977
01:06:17,000 --> 01:06:19,000
就管理起来并不方便

1978
01:06:19,000 --> 01:06:21,000
就这一批工具

1979
01:06:21,000 --> 01:06:26,000
这两个就这两个工具代表这一这一个层这个抽抽抽像层级的工具

1980
01:06:26,000 --> 01:06:31,000
所能帮你做的事情只是把你的一些

1981
01:06:31,000 --> 01:06:32,000
呃

1982
01:06:33,000 --> 01:06:36,000
日常或者经常需要用到的命令自动化而已

1983
01:06:36,000 --> 01:06:38,000
它并不能替你解决

1984
01:06:38,000 --> 01:06:46,000
如果远程机器对于某一个指令的回响和你期望的不一样该怎么办

1985
01:06:46,000 --> 01:06:48,000
这个问题

1986
01:06:48,000 --> 01:06:49,000
对啊

1987
01:06:49,000 --> 01:06:50,000
对其实在说这个之前

1988
01:06:50,000 --> 01:06:52,000
我们应该先说如果是手工作应该怎么样子啊

1989
01:06:52,000 --> 01:06:54,000
才有才有个比较明显的对比啊

1990
01:06:54,000 --> 01:06:56,000
嗯 OK

1991
01:06:56,000 --> 01:06:58,000
对手手工管理一个服务器怎么样

1992
01:06:58,000 --> 01:07:01,000
一般就是说你通过什么 SSH 登录上去

1993
01:07:01,000 --> 01:07:02,000
然后运行一堆指令

1994
01:07:02,000 --> 01:07:02,000
把你的手工管理器的功能都做好啊

1995
01:07:02,000 --> 01:07:04,000
把你的软件步入上去跑起来

1996
01:07:04,000 --> 01:07:06,000
然后查看一下状态

1997
01:07:06,000 --> 01:07:07,000
看是否正常对吧

1998
01:07:07,000 --> 01:07:08,000
对哎

1999
01:07:08,000 --> 01:07:10,000
这其实车牵扯了一个问题

2000
01:07:10,000 --> 01:07:12,000
就是你要想要成为大网子的话

2001
01:07:12,000 --> 01:07:16,000
或者说你想要了解如何远程操作一台计算机的话

2002
01:07:16,000 --> 01:07:17,000
最好的方法是什么呢

2003
01:07:17,000 --> 01:07:20,000
是不是用一台真正意义上远程计算机呢

2004
01:07:20,000 --> 01:07:23,000
就买一个买买一个 VPS

2005
01:07:23,000 --> 01:07:24,000
嗯对啊

2006
01:07:24,000 --> 01:07:25,000
这个就能练手吗

2007
01:07:25,000 --> 01:07:29,000
现在也没有有很方便的这种什么第三方的云的工具

2008
01:07:29,000 --> 01:07:32,000
国内有很多国外也有什么最近比较火的

2009
01:07:32,000 --> 01:07:34,000
DigitalOcean

2010
01:07:34,000 --> 01:07:35,000
它也很便宜

2011
01:07:35,000 --> 01:07:37,000
一个月你转了吗

2012
01:07:37,000 --> 01:07:37,000
五块钱

2013
01:07:37,000 --> 01:07:38,000
我有它的号

2014
01:07:38,000 --> 01:07:40,000
但我还没我自己用

2015
01:07:40,000 --> 01:07:44,000
OK 我现在的 Metafox.com 的域名是 DigitalOcean

2016
01:07:44,000 --> 01:07:47,000
你已经不会在 Lino 上面了

2017
01:07:47,000 --> 01:07:51,000
对嗯对后来 Lino 的也是升级了吧

2018
01:07:51,000 --> 01:07:52,000
你是在它升级之前转的是吧

2019
01:07:52,000 --> 01:07:54,000
我是在它升级之前转

2020
01:07:54,000 --> 01:07:55,000
就它升级之后

2021
01:07:55,000 --> 01:07:57,000
其实两家的那个竞争力也是差不多的

2022
01:07:57,000 --> 01:08:00,000
就所以我们我就没有切了

2023
01:08:00,000 --> 01:08:01,000
对啊

2024
01:08:01,000 --> 01:08:02,000
然后传统的有那个

2025
01:08:02,000 --> 01:08:04,000
Lino

2026
01:08:04,000 --> 01:08:05,000
Lino

2027
01:08:05,000 --> 01:08:06,000
Lino

2028
01:08:06,000 --> 01:08:07,000
对

2029
01:08:07,000 --> 01:08:11,000
啊还有一些像国内的什么各种云啊

2030
01:08:11,000 --> 01:08:12,000
青云啊

2031
01:08:12,000 --> 01:08:13,000
什么还有什么阿里云啊

2032
01:08:14,000 --> 01:08:16,000
这里有一个这里有个问题

2033
01:08:16,000 --> 01:08:22,000
就是我们所在这里推荐的是一个真正一是一台真正一样的计算机

2034
01:08:22,000 --> 01:08:24,000
而不是像 Google App Engine 或者是

2035
01:08:24,000 --> 01:08:26,000
我不知道阿里云是干嘛的

2036
01:08:26,000 --> 01:08:29,000
阿里云跟亚马逊那种差不多

2037
01:08:29,000 --> 01:08:30,000
对

2038
01:08:30,000 --> 01:08:31,000
也不对吧

2039
01:08:31,000 --> 01:08:32,000
就是它有很庞大的

2040
01:08:32,000 --> 01:08:33,000
很大的产品的子类

2041
01:08:33,000 --> 01:08:37,000
但是它的虚拟机是跟 EC 2 差不多

2042
01:08:37,000 --> 01:08:38,000
OK

2043
01:08:38,000 --> 01:08:40,000
OK

2044
01:08:40,000 --> 01:08:42,000
对所以比较好玩一下

2045
01:08:42,000 --> 01:08:46,000
拥有一台真正意义上的被虚拟出来的计算机

2046
01:08:46,000 --> 01:08:50,000
而不是仅仅是一个能够跑你的程序的容器

2047
01:08:50,000 --> 01:08:53,000
两者还是还是有蛮大的区别的后者

2048
01:08:53,000 --> 01:08:57,000
对于 DevOps 功力的培养可能没有什么注意吧

2049
01:08:57,000 --> 01:08:58,000
也是有了

2050
01:08:58,000 --> 01:08:59,000
但没有那么多

2051
01:08:59,000 --> 01:09:00,000
呵呵呵呵

2052
01:09:00,000 --> 01:09:02,000
啊

2053
01:09:02,000 --> 01:09:02,000
就所以最原始的

2054
01:09:02,000 --> 01:09:07,000
原始的方法就是你直接登录到某一台远程的计算机或者是 VPS 上面去

2055
01:09:07,000 --> 01:09:08,000
去做一些操作

2056
01:09:08,000 --> 01:09:10,000
然后查看运行状态嘛

2057
01:09:10,000 --> 01:09:11,000
刚才也讲了

2058
01:09:11,000 --> 01:09:12,000
然后

2059
01:09:12,000 --> 01:09:13,000
呃

2060
01:09:13,000 --> 01:09:15,000
但如果你有不止一台的话

2061
01:09:15,000 --> 01:09:16,000
你有四五台的时候

2062
01:09:16,000 --> 01:09:19,000
这个整个你每台都重复这个操作就比较繁琐了

2063
01:09:19,000 --> 01:09:25,000
然后像 Fabric 这种工具就是说能够帮你去自动化掉重复的那部分

2064
01:09:25,000 --> 01:09:28,000
但是如果你的机器多了多了之后

2065
01:09:28,000 --> 01:09:32,000
这样就不可避免的有些机器的状态可能并不是非常一致

2066
01:09:32,000 --> 01:09:32,000
这个时候

2067
01:09:32,000 --> 01:09:37,000
你就要一些更加高级的或者说这个呃功能更强大

2068
01:09:37,000 --> 01:09:45,000
然后抽象层级更高的一些工具来帮助你解决这个呃数量庞大的这个服务器的管理吧

2069
01:09:45,000 --> 01:09:46,000
啊一般怎么一般怎么说

2070
01:09:46,000 --> 01:09:48,000
就说如果你假设你有超过

2071
01:09:49,000 --> 01:09:50,000
啊十台吧

2072
01:09:50,000 --> 01:09:51,000
比如这个这个数目之后

2073
01:09:52,000 --> 01:09:56,000
你再用像用 Fabric 这种工具来管理就可能不是那么有效了

2074
01:09:57,000 --> 01:10:01,000
对那个有一个数字是人类同一时间可以关注到的

2075
01:10:02,000 --> 01:10:05,000
就是这个数字的最高数量是多少七五到七

2076
01:10:05,000 --> 01:10:06,000
嗯

2077
01:10:06,000 --> 01:10:10,000
对我觉得其实超过五台基本上就有点让人力不从心

2078
01:10:10,000 --> 01:10:12,000
对这是这样

2079
01:10:12,000 --> 01:10:19,000
那然后就会引入像这个叫 puppet 和 chef 这种叫做 configuration management tool

2080
01:10:19,000 --> 01:10:21,000
对配置管理工具

2081
01:10:21,000 --> 01:10:23,000
对 puppet 就是

2082
01:10:25,000 --> 01:10:26,000
小木偶

2083
01:10:26,000 --> 01:10:27,000
嗯对吧

2084
01:10:27,000 --> 01:10:29,000
然后 chef 就是厨师

2085
01:10:29,000 --> 01:10:32,000
对这其实也是两 chef 这个这个

2086
01:10:32,000 --> 01:10:37,000
这个 metaphor 可能还更圈一点

2087
01:10:37,000 --> 01:10:38,000
就是更绕人一点

2088
01:10:38,000 --> 01:10:40,000
就是 chef 其实它的 metaphor 是

2089
01:10:40,000 --> 01:10:42,000
你给他准备了一个菜单

2090
01:10:42,000 --> 01:10:44,000
然后 chef 可以按单做菜

2091
01:10:44,000 --> 01:10:47,000
就 chef 这个工具可以给你按单做菜

2092
01:10:47,000 --> 01:10:49,000
而 puppet 这个名字的 metaphor

2093
01:10:49,000 --> 01:10:52,000
则是你管理那些计算机

2094
01:10:52,000 --> 01:10:55,000
就好像去操纵一些木偶一样

2095
01:10:55,000 --> 01:10:56,000
提现木偶的

2096
01:10:56,000 --> 01:10:58,000
对提现木偶

2097
01:10:58,000 --> 01:11:00,000
那么他们两个其实都是

2098
01:11:01,000 --> 01:11:02,000
目前是竞争关系吧应该说

2099
01:11:02,000 --> 01:11:04,000
一直都是吧

2100
01:11:04,000 --> 01:11:07,000
对就是经常会有

2101
01:11:07,000 --> 01:11:08,000
Python 还是 Ruby

2102
01:11:08,000 --> 01:11:10,000
Puppet 还是 Chef 之类的

2103
01:11:10,000 --> 01:11:12,000
这样也是一个 flame war 的一个起点

2104
01:11:12,000 --> 01:11:13,000
又一个圣战

2105
01:11:13,000 --> 01:11:14,000
对又一个圣战

2106
01:11:14,000 --> 01:11:16,000
但我觉得 Puppet 和 Chef

2107
01:11:16,000 --> 01:11:17,000
好像是没有那么

2108
01:11:17,000 --> 01:11:20,000
没有那么吵起来的吧

2109
01:11:20,000 --> 01:11:22,000
因为两者还是太相像了

2110
01:11:22,000 --> 01:11:23,000
他们是

2111
01:11:23,000 --> 01:11:25,000
都是 Ruby 社区里面的东西嘛

2112
01:11:25,000 --> 01:11:27,000
然后他们只是说在设计哲学上

2113
01:11:27,000 --> 01:11:27,000
有所不同

2114
01:11:27,000 --> 01:11:29,000
但是因为我们

2115
01:11:29,000 --> 01:11:32,000
反正处于敌对阵营也无所谓了

2116
01:11:32,000 --> 01:11:33,000
但是

2117
01:11:33,000 --> 01:11:35,000
就他们在干什么呢

2118
01:11:35,000 --> 01:11:36,000
我觉得这个是更加重要的一个问题

2119
01:11:36,000 --> 01:11:37,000
没错

2120
01:11:37,000 --> 01:11:40,000
你解释一下

2121
01:11:40,000 --> 01:11:41,000
还是

2122
01:11:41,000 --> 01:11:42,000
你来吧

2123
01:11:42,000 --> 01:11:44,000
他们的

2124
01:11:44,000 --> 01:11:47,000
好吧

2125
01:11:47,000 --> 01:11:48,000
就是

2126
01:11:48,000 --> 01:11:50,000
你有一个

2127
01:11:50,000 --> 01:11:52,000
我们可以把一台远程的计算机

2128
01:11:52,000 --> 01:11:55,000
想象成一个原始材料

2129
01:11:55,000 --> 01:11:58,000
然后如果我们沿用 Chef 的

2130
01:11:58,000 --> 01:11:59,000
metaphor 的话

2131
01:11:59,000 --> 01:12:01,000
那么就是我要提供一个菜单

2132
01:12:01,000 --> 01:12:02,000
嗯

2133
01:12:02,000 --> 01:12:02,000
嗯

2140
01:15:02,000 --> 01:15:03,000
,对吧

2141
01:15:03,000 --> 01:15:05,000
这个就是你所谓的控制那台电脑

2142
01:15:05,000 --> 01:15:08,000
比如说你用你的笔记本上操作这个 fabric

2143
01:15:08,000 --> 01:15:10,000
然后去向那个远程

2144
01:15:10,000 --> 01:15:11,000
这样你发送指令

2145
01:15:11,000 --> 01:15:12,000
然后那个在执行

2146
01:15:12,000 --> 01:15:15,000
就是你的控制逻辑还是在这个叫什么

2147
01:15:15,000 --> 01:15:15,000
嗯

2148
01:15:15,000 --> 01:15:17,000
你的控制本机上本机上面

2149
01:15:17,000 --> 01:15:18,000
对不是在服务器上面的

2150
01:15:18,000 --> 01:15:20,000
然后像 Puppet 和 Chef 这两种

2151
01:15:20,000 --> 01:15:21,000
我觉得大部分情况下

2152
01:15:21,000 --> 01:15:22,000
他的那个控制逻辑

2153
01:15:22,000 --> 01:15:26,000
其实是已经移交到了这个服务器上就在运行

2154
01:15:26,000 --> 01:15:27,000
对吧

2155
01:15:27,000 --> 01:15:27,000
对

2156
01:15:27,000 --> 01:15:30,000
因为你在本机上你所做的只是下命令

2157
01:15:30,000 --> 01:15:32,000
而不是对

2158
01:15:32,000 --> 01:15:32,000
或者说你

2159
01:15:32,000 --> 01:15:36,000
做的只是描述你要达到什么样的效果

2160
01:15:36,000 --> 01:15:37,000
对

2161
01:15:37,000 --> 01:15:41,000
而不是你怎么样完成我想要达到的效果

2162
01:15:41,000 --> 01:15:42,000
嗯

2163
01:15:42,000 --> 01:15:42,000
嗯

2164
01:15:42,000 --> 01:15:43,000
对

2165
01:15:43,000 --> 01:15:47,000
然后这两个工具都是 Ruby 写的

2166
01:15:47,000 --> 01:15:49,000
其实在相当长一段时间内

2167
01:15:49,000 --> 01:15:53,000
这两个也就是在是在那个 DevOps 这个这个市场上

2168
01:15:53,000 --> 01:15:55,000
占主导地位的一个工具

2169
01:15:55,000 --> 01:15:55,000
对

2170
01:15:55,000 --> 01:15:56,000
De facto standard

2171
01:15:56,000 --> 01:15:57,000
对

2172
01:15:57,000 --> 01:15:58,000
然后后来

2173
01:15:58,000 --> 01:15:59,000
嗯

2174
01:15:59,000 --> 01:16:00,000
我们这个

2175
01:16:00,000 --> 01:16:01,000
哎不对

2176
01:16:01,000 --> 01:16:02,000
就 Python 这个

2177
01:16:02,000 --> 01:16:07,000
这阵营的这这这些哥们们终于站不住

2178
01:16:07,000 --> 01:16:08,000
就是什么

2179
01:16:08,000 --> 01:16:09,000
就是忍不住了哈

2180
01:16:09,000 --> 01:16:14,000
因为因为其实在这之前 Ruby 在这个服务局

2181
01:16:14,000 --> 01:16:17,000
因为这一块其实并没有多少人在用吧

2182
01:16:17,000 --> 01:16:19,000
刚照我的理解就出在 Ruby

2183
01:16:19,000 --> 01:16:21,000
其实这个语言是非常有意思的一个

2184
01:16:21,000 --> 01:16:23,000
就是在 Ruby on Rails 出现之前

2185
01:16:23,000 --> 01:16:25,000
Ruby 是一个没人理睬的语言吧

2186
01:16:25,000 --> 01:16:26,000
我觉得对对对

2187
01:16:26,000 --> 01:16:28,000
就那个时候什么 Zoap 呀

2188
01:16:28,000 --> 01:16:32,000
什么那个就 Python 是一个主导地位的语言

2189
01:16:32,000 --> 01:16:32,000
对呀

2190
01:16:32,000 --> 01:16:36,000
不当前当年 Zoap 可是跟什么 J 2 E

2191
01:16:36,000 --> 01:16:37,000
呃不呃 J 1

2192
01:16:37,000 --> 01:16:40,000
Java 1 评分究策的一个东西吧

2193
01:16:40,000 --> 01:16:40,000
对

2194
01:16:40,000 --> 01:16:46,000
就你你要在服务器端完成一个大型的呃应用软件

2195
01:16:46,000 --> 01:16:48,000
好像在 Ruby on Rails 出现之前

2196
01:16:48,000 --> 01:16:51,000
要么 Java 要么就 Python

2197
01:16:51,000 --> 01:16:54,000
要么就就其他的什么更更偏本的东西

2198
01:16:54,000 --> 01:16:54,000
嗯

2199
01:16:54,000 --> 01:16:57,000
但是 Ruby on Rails 出现之后就

2200
01:16:57,000 --> 01:16:59,000
几乎一夜之间

2201
01:16:59,000 --> 01:17:02,000
就颁倒了整个开发社区的气氛

2202
01:17:02,000 --> 01:17:03,000
对

2203
01:17:03,000 --> 01:17:07,000
然后我们就看到很多这种呃开发运维工具都是基于 Ruby 来写的

2204
01:17:07,000 --> 01:17:12,000
而且就是那个在我还是 Python 那个阵营的时候

2205
01:17:12,000 --> 01:17:14,000
我曾经一度怀疑说哎呀

2206
01:17:14,000 --> 01:17:16,000
是不是应该转向 Ruby 那个阵营呀

2207
01:17:16,000 --> 01:17:21,000
那么多新的有意思的工具都是从那个 Ruby 阵营过来的

2208
01:17:21,000 --> 01:17:23,000
而且因为那个时候 Ruby 正在 hype 嘛

2209
01:17:23,000 --> 01:17:25,000
而且 Ruby 一直都在 hype

2210
01:17:25,000 --> 01:17:25,000
对

2211
01:17:25,000 --> 01:17:26,000
对

2212
01:17:26,000 --> 01:17:26,000
呃

2213
01:17:26,000 --> 01:17:26,000
呃

2214
01:17:26,000 --> 01:17:27,000
呃

2215
01:17:27,000 --> 01:17:27,000
呃

2216
01:17:27,000 --> 01:17:27,000
呃

2217
01:17:27,000 --> 01:17:27,000
呃

2218
01:17:27,000 --> 01:17:27,000
呃

2219
01:17:27,000 --> 01:17:27,000
呃

2220
01:17:27,000 --> 01:17:27,000
呃

2221
01:17:27,000 --> 01:17:27,000
呃

2222
01:17:27,000 --> 01:17:27,000
呃

2223
01:17:27,000 --> 01:17:28,000
呃

2224
01:17:28,000 --> 01:17:28,000
呃

2225
01:17:28,000 --> 01:17:28,000
呃

2226
01:17:28,000 --> 01:17:28,000
呃

2227
01:17:28,000 --> 01:17:28,000
呃

2228
01:17:28,000 --> 01:17:28,000
呃

2229
01:17:28,000 --> 01:17:29,000
呃

2230
01:17:29,000 --> 01:17:29,000
呃

2231
01:17:32,000 --> 01:17:32,000
海

2232
01:17:32,000 --> 01:17:32,000
海

2233
01:17:32,000 --> 01:17:33,000
海

2234
01:17:33,000 --> 01:17:33,000
海

2235
01:17:35,000 --> 01:17:35,000
大

2236
01:17:36,000 --> 01:17:37,000
quis

2237
01:17:37,000 --> 01:17:37,000
驾

2238
01:17:37,000 --> 01:17:37,000
驾

2239
01:17:39,000 --> 01:17:39,000
戕

2240
01:17:39,000 --> 01:17:39,000
戕

2241
01:17:39,000 --> 01:17:40,000
cross

2242
01:17:40,000 --> 01:17:40,000
轕

2243
01:17:40,000 --> 01:17:40,000
轕

2244
01:17:40,000 --> 01:17:41,000
轕

2245
01:17:41,000 --> 01:17:41,000
轕

2246
01:17:41,000 --> 01:17:42,000
轆

2247
01:17:42,000 --> 01:17:42,000
轕

2248
01:17:42,000 --> 01:17:43,000
abl

2249
01:17:44,000 --> 01:17:44,000
载

2250
01:17:44,000 --> 01:17:44,000
载

2251
01:17:44,000 --> 01:17:45,000
载

2252
01:17:45,000 --> 01:17:45,000
载

2253
01:17:45,000 --> 01:17:45,000
载

2254
01:17:45,000 --> 01:17:45,000
载

2255
01:17:45,000 --> 01:17:45,000
载

2256
01:17:45,000 --> 01:17:46,000
载

2257
01:17:46,000 --> 01:17:46,000
载

2258
01:17:46,000 --> 01:17:46,000
载

2259
01:17:46,000 --> 01:17:46,000
载

2260
01:17:47,000 --> 01:17:47,000
载

2261
01:17:47,000 --> 01:17:48,000
载

2262
01:17:48,000 --> 01:17:48,000
载

2263
01:17:48,000 --> 01:17:48,000
载

2264
01:17:48,000 --> 01:17:49,000
载

2265
01:17:49,000 --> 01:17:49,000
载

2266
01:17:49,000 --> 01:17:49,000
载

2267
01:17:49,000 --> 01:17:50,000
载

2268
01:17:50,000 --> 01:17:50,000
载

2269
01:17:50,000 --> 01:17:50,000
载

2270
01:17:50,000 --> 01:17:50,000
载

2271
01:17:50,000 --> 01:17:51,000
载

2272
01:17:51,000 --> 01:17:51,000
载

2273
01:17:52,000 --> 01:17:52,000
但

2274
01:17:52,000 --> 01:17:53,000
然后真

2275
01:17:53,000 --> 01:17:54,000
如果一充满

2276
01:17:54,000 --> 01:17:54,000
但是

2277
01:17:54,000 --> 01:17:54,000
此

2278
01:17:54,000 --> 01:17:54,000
者

2279
01:17:54,000 --> 01:17:54,000
如果一押

2280
01:17:54,000 --> 01:17:54,000
但是

2281
01:17:54,000 --> 01:17:55,000
这样

2282
01:17:55,000 --> 01:17:55,000
这

2283
01:17:55,000 --> 01:17:55,000
至果

2284
01:17:55,000 --> 01:17:55,000
也

2285
01:17:55,000 --> 01:17:56,000
也

2286
01:17:56,000 --> 01:17:56,000
也

2287
01:17:56,000 --> 01:17:57,000
工具吧

2288
01:17:57,000 --> 01:17:58,000
如果没有这个东西

2289
01:17:58,000 --> 01:18:00,000
可能这一切都不会存在

2290
01:18:00,000 --> 01:18:00,000
没错

2291
01:18:00,000 --> 01:18:01,000
所以 Rule Your Rails

2292
01:18:01,000 --> 01:18:02,000
其实是一个

2293
01:18:02,000 --> 01:18:04,000
功不可没的起点

2294
01:18:04,000 --> 01:18:05,000
KeyRF

2295
01:18:05,000 --> 01:18:06,000
然后当然

2296
01:18:06,000 --> 01:18:08,000
Python 虽然没闲着

2297
01:18:08,000 --> 01:18:10,000
后来就出了两套

2298
01:18:10,000 --> 01:18:11,000
新一代的

2299
01:18:11,000 --> 01:18:14,000
Configuration Management Tool

2300
01:18:14,000 --> 01:18:16,000
其中一个叫做 Sort

2301
01:18:16,000 --> 01:18:17,000
一个言

2302
01:18:17,000 --> 01:18:19,000
然后另外一个叫做 Ansible

2303
01:18:19,000 --> 01:18:20,000
Ansible

2304
01:18:20,000 --> 01:18:22,000
Ansible 是一个缩写吧

2305
01:18:22,000 --> 01:18:25,000
而且不是什么

2306
01:18:25,000 --> 01:18:27,000
你这么一问

2307
01:18:27,000 --> 01:18:27,000
我还真不知道

2308
01:18:27,000 --> 01:18:28,000
可以查一下

2309
01:18:28,000 --> 01:18:29,000
Ansible 到底什么意思

2310
01:18:29,000 --> 01:18:34,000
Ansible is Simple IT Automation

2311
01:18:34,000 --> 01:18:37,000
Wait a second

2312
01:18:37,000 --> 01:18:38,000
LE 是哪来的

2313
01:18:40,000 --> 01:18:44,000
对

2314
01:18:44,000 --> 01:18:47,000
计算机界有两件最难的事情

2315
01:18:47,000 --> 01:18:49,000
一件是 Caching Validation

2316
01:18:49,000 --> 01:18:50,000
另一件就是 Naming Things

2317
01:18:50,000 --> 01:18:54,000
而比这所有更难的一件事情

2318
01:18:54,000 --> 01:18:55,000
就是 Figure Out

2319
01:18:55,000 --> 01:18:58,000
这个东西是怎么被命名的

2320
01:18:58,000 --> 01:19:00,000
对

2321
01:19:00,000 --> 01:19:04,000
这个不去追究什么意思

2322
01:19:04,000 --> 01:19:06,000
我也没有查到

2323
01:19:06,000 --> 01:19:09,000
但是这两个都有一个共同点

2324
01:19:09,000 --> 01:19:09,000
就说

2325
01:19:09,000 --> 01:19:11,000
应该是说

2326
01:19:11,000 --> 01:19:11,000
先说

2327
01:19:11,000 --> 01:19:13,000
Puppet 和 Chef

2328
01:19:13,000 --> 01:19:16,000
他们的编写脚本的东西

2329
01:19:16,000 --> 01:19:17,000
都是使用了 Ruby 的脚本

2330
01:19:17,000 --> 01:19:19,000
然后用 DSL 的方法来写

2331
01:19:19,000 --> 01:19:21,000
我查到了

2332
01:19:21,000 --> 01:19:22,000
是什么

2333
01:19:22,000 --> 01:19:25,000
它居然是恩德游戏里面的安塞波

2334
01:19:25,000 --> 01:19:25,000
对

2335
01:19:25,000 --> 01:19:26,000
什么呀

2336
01:19:26,000 --> 01:19:30,000
就是有一个非常非常非常非常 awesome

2337
01:19:30,000 --> 01:19:31,000
史诗级别的科幻小说

2338
01:19:31,000 --> 01:19:32,000
如果你没看过的话

2339
01:19:32,000 --> 01:19:33,000
一定要去给我看

2340
01:19:33,000 --> 01:19:36,000
叫做安德的游戏

2341
01:19:36,000 --> 01:19:38,000
前这次

2342
01:19:38,000 --> 01:19:38,000
去年被拍成

2343
01:19:38,000 --> 01:19:39,000
前年没拍

2344
01:19:39,000 --> 01:19:39,000
去年

2345
01:19:39,000 --> 01:19:41,000
被拍成了电影

2346
01:19:41,000 --> 01:19:42,000
谁写的

2347
01:19:42,000 --> 01:19:44,000
Scott Cod

2348
01:19:44,000 --> 01:19:48,000
叫卡德吧

2349
01:19:48,000 --> 01:19:50,000
我记得中文好像

2350
01:19:50,000 --> 01:19:50,000
我看短

2351
01:19:50,000 --> 01:19:51,000
安德游戏

2352
01:19:51,000 --> 01:19:52,000
sorry

2353
01:19:52,000 --> 01:19:53,000
原谅我的语无伦次

2354
01:19:53,000 --> 01:19:55,000
因为这部科幻小说

2355
01:19:55,000 --> 01:19:55,000
实在是太难了

2356
01:19:55,000 --> 01:19:56,000
太史诗级别了

2357
01:19:56,000 --> 01:19:57,000
就是

2358
01:19:57,000 --> 01:20:00,000
作者应该叫 Scott Cod

2359
01:20:00,000 --> 01:20:01,000
斯科特卡德

2360
01:20:01,000 --> 01:20:03,000
然后他写了一系列

2361
01:20:03,000 --> 01:20:05,000
有一个

2362
01:20:05,000 --> 01:20:08,000
也不是小男孩

2363
01:20:08,000 --> 01:20:11,000
但是在安德的游戏这部书里面

2364
01:20:11,000 --> 01:20:12,000
他还是一个小男孩

2365
01:20:12,000 --> 01:20:13,000
的

2366
01:20:13,000 --> 01:20:15,000
为主角的科幻小说

2367
01:20:15,000 --> 01:20:17,000
然后这部科幻小说

2368
01:20:17,000 --> 01:20:18,000
第一卷就叫做

2369
01:20:18,000 --> 01:20:19,000
Enders Game

2370
01:20:19,000 --> 01:20:21,000
就是终结者的游戏

2371
01:20:21,000 --> 01:20:23,000
但是中文一般翻译成

2372
01:20:23,000 --> 01:20:24,000
安德的游戏

2373
01:20:24,000 --> 01:20:25,000
因为这个

2374
01:20:25,000 --> 01:20:26,000
主角就是安德

2375
01:20:26,000 --> 01:20:27,000
我们一起做的话

2376
01:20:27,000 --> 01:20:28,000
主角叫安德

2377
01:20:28,000 --> 01:20:30,000
然后它是非常非常好看的

2378
01:20:30,000 --> 01:20:32,000
一部科幻片

2379
01:20:32,000 --> 01:20:33,000
科幻电影

2380
01:20:33,000 --> 01:20:34,000
2003 年的时候

2381
01:20:34,000 --> 01:20:35,000
这部电影

2382
01:20:35,000 --> 01:20:35,000
这个

2383
01:20:35,000 --> 01:20:37,000
sorry

2384
01:20:37,000 --> 01:20:38,000
它是非常好看

2385
01:20:38,000 --> 01:20:41,000
好看的一部科幻小说

2386
01:20:41,000 --> 01:20:42,000
然后 2003 年的时候

2387
01:20:42,000 --> 01:20:44,000
它被翻拍成了电影

2388
01:20:44,000 --> 01:20:46,000
但是电影没有原著的

2389
01:20:46,000 --> 01:20:47,000
十分之一吧

2390
01:20:47,000 --> 01:20:47,000
我觉得

2391
01:20:47,000 --> 01:20:49,000
视觉效果是很炫了

2392
01:20:49,000 --> 01:20:51,000
但是原著里面的很多

2393
01:20:51,000 --> 01:20:53,000
非常让人激动

2394
01:20:53,000 --> 01:20:55,000
或者哪只难过的片子

2395
01:20:55,000 --> 01:20:57,000
其实都没有呈现得很好

2396
01:20:57,000 --> 01:20:59,000
然后这一部

2397
01:20:59,000 --> 01:21:00,000
这不是所有小说改变成电影的

2398
01:21:00,000 --> 01:21:01,000
然后小说

2399
01:21:01,000 --> 01:21:03,000
读过小说的人都有这种感觉吗

2400
01:21:03,000 --> 01:21:04,000
也不尽然吧

2401
01:21:04,000 --> 01:21:07,000
就有些电影让我觉得比小说要好

2402
01:21:07,000 --> 01:21:08,000
OK

2403
01:21:08,000 --> 01:21:10,000
但一时也想不出来

2404
01:21:10,000 --> 01:21:13,000
但总之这部电影里面有

2405
01:21:13,000 --> 01:21:15,000
就是讲述的是人类和

2406
01:21:15,000 --> 01:21:17,000
一个虫族

2407
01:21:17,000 --> 01:21:17,000
就是

2408
01:21:17,000 --> 01:21:19,000
对

2409
01:21:19,000 --> 01:21:20,000
就有点像那个

2410
01:21:20,000 --> 01:21:23,000
星之马里面的 Zerg 的感觉

2411
01:21:23,000 --> 01:21:24,000
但是这部小说出来的时候

2412
01:21:24,000 --> 01:21:25,000
呃

2413
01:21:25,000 --> 01:21:25,000
呃

2414
01:21:25,000 --> 01:21:26,000
1985 年的小说

2415
01:21:26,000 --> 01:21:27,000
这是

2416
01:21:27,000 --> 01:21:28,000
那个时候还远远没有字

2417
01:21:28,000 --> 01:21:29,000
什么星舰 Star

2418
01:21:29,000 --> 01:21:30,000
Star Trooper

2419
01:21:30,000 --> 01:21:31,000
呃

2420
01:21:31,000 --> 01:21:33,000
那个星舰散兵那部科幻电影

2421
01:21:33,000 --> 01:21:34,000
可能也可能都没有出来

2422
01:21:34,000 --> 01:21:35,000
然后

2423
01:21:35,000 --> 01:21:39,000
在里面他描写了一个人类和遥远的虫族之间的战争

2424
01:21:39,000 --> 01:21:40,000
然后

2425
01:21:40,000 --> 01:21:40,000
呃

2426
01:21:40,000 --> 01:21:43,000
其中里面有一种超光速通信工具

2427
01:21:43,000 --> 01:21:44,000
嗯

2428
01:21:44,000 --> 01:21:45,000
就叫做安赛波

2429
01:21:45,000 --> 01:21:46,000
安赛波

2430
01:21:46,000 --> 01:21:48,000
所以这个名字认不来

2431
01:21:48,000 --> 01:21:49,000
OK

2432
01:21:49,000 --> 01:21:49,000
啊

2433
01:21:49,000 --> 01:21:50,000
我立刻

2434
01:21:50,000 --> 01:21:52,000
我立刻爱上了这个软件

2435
01:21:52,000 --> 01:21:53,000
哈哈哈

2436
01:21:53,000 --> 01:21:55,000
其实这里啊

2437
01:21:55,000 --> 01:21:56,000
说到了一个问题啊

2438
01:21:56,000 --> 01:21:56,000
就是说呃

2439
01:21:56,000 --> 01:21:58,000
为什么呃

2440
01:21:58,000 --> 01:22:00,000
他们要做这个东西

2441
01:22:00,000 --> 01:22:01,000
其实也是因为

2442
01:22:01,000 --> 01:22:04,000
就他们很多人抱怨这个 Puppet 和 Shaft 太慢了嘛

2443
01:22:04,000 --> 01:22:09,000
就是你如果你管理什么几百几百什么上千台机器的时候

2444
01:22:09,000 --> 01:22:10,000
那个什么归宿啊

2445
01:22:10,000 --> 01:22:12,000
就是你只运行完一个脚本

2446
01:22:12,000 --> 01:22:14,000
肯定要半个小时这样啊

2447
01:22:14,000 --> 01:22:16,000
他说要从根本上解决这个问题

2448
01:22:16,000 --> 01:22:19,000
那个什么就不能那些是救不回来了

2449
01:22:19,000 --> 01:22:21,000
你要重新要什么 start over

2450
01:22:21,000 --> 01:22:23,000
你才可以解决这个问题

2451
01:22:23,000 --> 01:22:25,000
然后就有这么两个

2452
01:22:25,000 --> 01:22:26,000
pilot 社区来的工具啊

2453
01:22:26,000 --> 01:22:27,000
一个叫做 sort

2454
01:22:27,000 --> 01:22:27,000
一个叫安赛波

2455
01:22:27,000 --> 01:22:28,000
刚才你也提了

2456
01:22:28,000 --> 01:22:30,000
然后他们的一个特点呢

2457
01:22:30,000 --> 01:22:36,000
就是用户看到的一个特点就是他们的这个配置语言是 yaml 就是

2458
01:22:37,000 --> 01:22:38,000
哇

2459
01:22:38,000 --> 01:22:38,000
最要解释

2460
01:22:38,000 --> 01:22:39,000
yes another markup

2461
01:22:39,000 --> 01:22:41,000
yes another markup language

2462
01:22:41,000 --> 01:22:44,000
就是一个比 XML 简单

2463
01:22:44,000 --> 01:22:45,000
然后比 JSON 强大

2464
01:22:45,000 --> 01:22:49,000
然后跟 JSON 是一个 JSON 的超级的这么一个配置语言

2465
01:22:49,000 --> 01:22:49,000
嗯

2466
01:22:49,000 --> 01:22:53,000
而且他最大优点是人类读的时候也非常舒畅

2467
01:22:53,000 --> 01:22:54,000
就可以手写

2468
01:22:54,000 --> 01:22:54,000
然后可以

2469
01:22:54,000 --> 01:22:56,000
可以可以裸眼读

2470
01:22:56,000 --> 01:22:57,000
不需要借助任何工具

2471
01:22:57,000 --> 01:22:59,000
还比较爽

2472
01:22:59,000 --> 01:23:00,000
读 XML 让人想死

2473
01:23:00,000 --> 01:23:00,000
对吧

2474
01:23:00,000 --> 01:23:02,000
对 Basen 略好

2475
01:23:02,000 --> 01:23:06,000
但是读 yaml 就非常像读一个正常的人类文档

2476
01:23:06,000 --> 01:23:07,000
JSON 读起来还行

2477
01:23:07,000 --> 01:23:08,000
就是写写太费劲了

2478
01:23:08,000 --> 01:23:10,000
各种限制比较多

2479
01:23:10,000 --> 01:23:12,000
比如说不能加注释啊

2480
01:23:12,000 --> 01:23:13,000
然后 key 必须要扩起来啊

2481
01:23:13,000 --> 01:23:14,000
blah blah

2482
01:23:14,000 --> 01:23:16,000
然后之类的啊

2483
01:23:16,000 --> 01:23:19,000
这个跟 Pubby 和 Chef 他们在就起码在用的时候

2484
01:23:19,000 --> 01:23:21,000
有个很鲜明的对比

2485
01:23:21,000 --> 01:23:24,000
就是 Pubby 和 Chef 他们都是用那个 Ruby 的直接说又是一个 class 文件啊

2486
01:23:24,000 --> 01:23:24,000
就是用那个 Ruby 的直接说又是一个 class 文件啊

2487
01:23:24,000 --> 01:23:25,000
就是用那个 Ruby 的直接说又是一个 class 文件啊

2488
01:23:25,000 --> 01:23:25,000
对

2489
01:23:25,000 --> 01:23:26,000
啊

2490
01:23:26,000 --> 01:23:28,000
然后这里就有一个取舍的好

2491
01:23:28,000 --> 01:23:32,000
或者说你想为什么 Python 是不用 Python 写呢

2492
01:23:32,000 --> 01:23:36,000
当然其中一个主要的原因是因为 Python 写 DSL 并不方便

2493
01:23:36,000 --> 01:23:38,000
然后语法限制比较多

2494
01:23:38,000 --> 01:23:42,000
然后 Python 其实本身就有点像 DSL

2495
01:23:42,000 --> 01:23:42,000
但

2496
01:23:42,000 --> 01:23:48,000
或者我觉得我知道我这个描述可能非常怪异

2497
01:23:48,000 --> 01:23:50,000
但 Python 给人的感觉就是

2498
01:23:50,000 --> 01:23:54,000
它明明是一种泛用的编程语言

2499
01:23:54,000 --> 01:23:57,000
但是你在写它的时候就好像觉得自己在写某种

2500
01:23:57,000 --> 01:23:58,000
英文吗

2501
01:23:58,000 --> 01:23:59,000
某一种

2502
01:23:59,000 --> 01:24:03,000
对某一种不那么像写程序的程序

2503
01:24:03,000 --> 01:24:06,000
而 DSL 给人的感觉其实也是这样

2504
01:24:06,000 --> 01:24:11,000
但问题是说 Python 的它的那个语法限制比较多嘛

2505
01:24:11,000 --> 01:24:13,000
比如说它对这个对缩进有要求

2506
01:24:13,000 --> 01:24:16,000
然后对这个 block 也有要求

2507
01:24:16,000 --> 01:24:18,000
就不像 Ruby 的语法那么灵活

2508
01:24:18,000 --> 01:24:20,000
这样的话作为一个配置工具

2509
01:24:20,000 --> 01:24:23,000
你要求这个用户学的东西就比较多了

2510
01:24:24,000 --> 01:24:27,000
但是说我也一直没搞明白这个的这个的点在哪里

2511
01:24:27,000 --> 01:24:30,000
因为你始终还是要学 Python 这个语言才能用的嘛

2512
01:24:30,000 --> 01:24:32,000
不过呢

2513
01:24:32,000 --> 01:24:36,000
它用那个 YAML 这种也是有一个比较明显的好处的

2514
01:24:36,000 --> 01:24:42,000
就是说它可以比较方便的用机器去读这些配置文件

2515
01:24:42,000 --> 01:24:44,000
然后去用机器去处理它

2516
01:24:44,000 --> 01:24:47,000
因为这和 Ruby 的那种方式那种就不太一样

2517
01:24:47,000 --> 01:24:51,000
因为 Ruby 那种的话你必须运行过才可以对吧

2518
01:24:51,000 --> 01:24:52,000
它并不是一个

2519
01:24:52,000 --> 01:24:53,000
就太多了

2520
01:24:54,000 --> 01:24:54,000
怎么讲了

2521
01:24:54,000 --> 01:24:56,000
它并不是一个就是 code is code

2522
01:24:56,000 --> 01:24:59,000
然后这个 data is data

2523
01:24:59,000 --> 01:25:01,000
对它这两个是分离的

2524
01:25:01,000 --> 01:25:03,000
然后在 Python 的这个 YAML 这种方式的话

2525
01:25:03,000 --> 01:25:04,000
就是说 code is data

2526
01:25:04,000 --> 01:25:05,000
data is code

2527
01:25:05,000 --> 01:25:07,000
就有点这个意思在里面

2528
01:25:07,000 --> 01:25:08,000
没错

2529
01:25:08,000 --> 01:25:11,000
虽然 YAML 本身并不能直接执行

2530
01:25:11,000 --> 01:25:12,000
还是要依靠这个 Python 去解析它

2531
01:25:12,000 --> 01:25:13,000
对

2532
01:25:13,000 --> 01:25:15,000
而且我觉得另外一个优点就是

2533
01:25:15,000 --> 01:25:18,000
在 Python 的 chef 里面你可以

2534
01:25:18,000 --> 01:25:19,000
因为它是 DSL

2535
01:25:19,000 --> 01:25:21,000
它毕竟还是它还是 Ruby

2536
01:25:21,000 --> 01:25:22,000
你还是可以编程的

2537
01:25:22,000 --> 01:25:22,000
嗯

2538
01:25:22,000 --> 01:25:24,000
而写 YAML 的时候

2539
01:25:24,000 --> 01:25:25,000
它会强迫你

2540
01:25:25,000 --> 01:25:26,000
或者它会提示你

2541
01:25:26,000 --> 01:25:27,000
你不能够编程了

2542
01:25:27,000 --> 01:25:28,000
对你不能再编程了

2543
01:25:28,000 --> 01:25:30,000
这个地方你该 declarative

2544
01:25:30,000 --> 01:25:31,000
给我好好 declarative

2545
01:25:31,000 --> 01:25:34,000
你不要再像写 chef

2546
01:25:34,000 --> 01:25:35,000
或 public 脚本的时候

2547
01:25:35,000 --> 01:25:37,000
你可以加入一些私货

2548
01:25:37,000 --> 01:25:38,000
你可以说这个地方

2549
01:25:38,000 --> 01:25:39,000
我要做一些东西

2550
01:25:39,000 --> 01:25:41,000
而因为我可以

2551
01:25:41,000 --> 01:25:42,000
所以我要做

2552
01:25:42,000 --> 01:25:42,000
对

2553
01:25:42,000 --> 01:25:44,000
但这个就是有时候是一个

2554
01:25:44,000 --> 01:25:45,000
怎么讲呢

2555
01:25:45,000 --> 01:25:49,000
一个可维护性和易用性之间的权衡

2556
01:25:49,000 --> 01:25:52,000
就是因为其实如果你真的去用

2557
01:25:52,000 --> 01:25:52,000
那个按键

2558
01:25:52,000 --> 01:25:52,000
那个按键

2559
01:25:52,000 --> 01:25:54,000
这种一些

2560
01:25:54,000 --> 01:25:55,000
因为我用 sort 没有用过

2561
01:25:55,000 --> 01:25:58,000
就是我用过按键就是去做一些部署

2562
01:25:58,000 --> 01:26:00,000
然后其实你这用的会发现

2563
01:26:00,000 --> 01:26:01,000
就是你有时候还是逃不掉

2564
01:26:01,000 --> 01:26:04,000
要做一些比如说简单的循环

2565
01:26:04,000 --> 01:26:06,000
那种这种批量的操作的时候

2566
01:26:06,000 --> 01:26:10,000
你还是用很坑爹的用那个 YAML 的语法去写一些东西

2567
01:26:10,000 --> 01:26:13,000
但这好处就是说你知道那里是在干嘛

2568
01:26:13,000 --> 01:26:15,000
然后你能比较好的判断

2569
01:26:15,000 --> 01:26:18,000
这个用程序去判断他的那个状态

2570
01:26:18,000 --> 01:26:19,000
但是

2571
01:26:19,000 --> 01:26:21,000
但是写起来就比较比较费劲了

2572
01:26:21,000 --> 01:26:22,000
然后那个

2573
01:26:22,000 --> 01:26:25,000
语法因为他并不是一个完整的编程语言嘛

2574
01:26:25,000 --> 01:26:27,000
就很怪异的一个状态

2575
01:26:27,000 --> 01:26:28,000
但是这个时候你就用

2576
01:26:28,000 --> 01:26:30,000
如果用 Ruby 的这种方式去写的话

2577
01:26:30,000 --> 01:26:32,000
就会会爽很多

2578
01:26:32,000 --> 01:26:33,000
只要你只要你会 Ruby 嘛

2579
01:26:33,000 --> 01:26:34,000
你写个循环多简单对吧

2580
01:26:34,000 --> 01:26:37,000
那个所有的语法都知道啊

2581
01:26:37,000 --> 01:26:39,000
你该操作怎么就很都很都很正常

2582
01:26:39,000 --> 01:26:42,000
所以这里是一个不同的这个什么设计

2583
01:26:42,000 --> 01:26:44,000
哲学的这个区别了

2584
01:26:44,000 --> 01:26:49,000
而且我觉得这个问题可能也不仅仅是在安斯劳这边会有

2585
01:26:49,000 --> 01:26:52,000
那你刚才说描述的情况让我想起了

2586
01:26:52,000 --> 01:26:52,000
就是

2587
01:26:52,000 --> 01:26:53,000
就是 AngularJS

2588
01:26:53,000 --> 01:26:57,000
AngularJS 在很大一部分程度上是

2589
01:26:57,000 --> 01:27:01,000
试图去把 HTML 的语义扩展出来

2590
01:27:01,000 --> 01:27:04,000
就是 AngularJS 可以自定义一个 HTML tag

2591
01:27:04,000 --> 01:27:08,000
然后这个 HTML tag 所呈现出来的东西

2592
01:27:08,000 --> 01:27:10,000
它的外观以及它的行为

2593
01:27:10,000 --> 01:27:15,000
可以通过 HTML 和 CSS 和 JavaScript 去定义

2594
01:27:15,000 --> 01:27:17,000
但是你在定义的过程中会发现

2595
01:27:17,000 --> 01:27:19,000
有时候你几乎是在用 HTML 来编程

2596
01:27:19,000 --> 01:27:22,000
就你会试图

2597
01:27:22,000 --> 01:27:25,000
用 HTML 写一些和逻辑相关的东西

2598
01:27:25,000 --> 01:27:26,000
这个让我觉得挺不爽的

2599
01:27:26,000 --> 01:27:28,000
但很显然这也是

2600
01:27:28,000 --> 01:27:30,000
这也不是 HTML 的错

2601
01:27:30,000 --> 01:27:31,000
然后在安斯劳这边

2602
01:27:31,000 --> 01:27:32,000
这也不是 YAML 的错

2603
01:27:32,000 --> 01:27:36,000
就是有时候有些场景逼迫你不得不这样做

2604
01:27:36,000 --> 01:27:42,000
而工具的切分则是相对来说比较分明的

2605
01:27:42,000 --> 01:27:46,000
你不可能在这里面有那么多的灵活性

2606
01:27:46,000 --> 01:27:46,000
如果你要

2607
01:27:46,000 --> 01:27:50,000
如果你要尊重工具之间的区别的话

2608
01:27:50,000 --> 01:27:51,000
对

2609
01:27:51,000 --> 01:27:51,000
对

2610
01:27:51,000 --> 01:27:51,000
对

2611
01:27:51,000 --> 01:27:51,000
对

2612
01:27:51,000 --> 01:27:51,000
对

2613
01:27:51,000 --> 01:27:51,000
对

2614
01:27:51,000 --> 01:27:51,000
对

2615
01:27:51,000 --> 01:27:51,000
对

2616
01:27:51,000 --> 01:27:51,000
对

2617
01:27:51,000 --> 01:27:51,000
对

2618
01:27:51,000 --> 01:27:52,000
对

2619
01:27:52,000 --> 01:27:52,000
good

2620
01:27:52,000 --> 01:27:52,000
んと

2621
01:27:52,000 --> 01:27:53,000
对

2622
01:27:53,000 --> 01:27:54,000
对

2623
01:27:54,000 --> 01:27:55,000
eso

2624
01:27:55,000 --> 01:27:57,000
ö

2625
01:27:57,000 --> 01:27:57,000
ö

2626
01:28:14,000 --> 01:28:14,000
等等

2627
01:28:15,000 --> 01:28:16,000
ush

2628
01:28:16,000 --> 01:28:17,000
poz

2629
01:28:17,000 --> 01:28:17,000
艺

2630
01:28:17,000 --> 01:28:18,000
蛋

2631
01:28:18,000 --> 01:28:18,000
봐요

2632
01:28:18,000 --> 01:28:20,000
这是一个比较担心的一个问题

2633
01:28:20,000 --> 01:28:21,000
就是特别是看到按死吧

2634
01:28:21,000 --> 01:28:22,000
吐槽一下

2635
01:28:22,000 --> 01:28:23,000
其实

2636
01:28:23,000 --> 01:28:25,000
为什么没有人用

2637
01:28:25,000 --> 01:28:26,000
Lisp 写一个

2638
01:28:26,000 --> 01:28:29,000
这个配置工具

2639
01:28:29,000 --> 01:28:30,000
就没有这个问题了

2640
01:28:30,000 --> 01:28:31,000
这个真的是

2641
01:28:31,000 --> 01:28:32,000
Data is code

2642
01:28:32,000 --> 01:28:32,000
Code is data

2643
01:28:32,000 --> 01:28:34,000
这个还真有

2644
01:28:34,000 --> 01:28:35,000
就是

2645
01:28:35,000 --> 01:28:38,000
当然我不确定

2646
01:28:38,000 --> 01:28:40,000
这个是不是你真的要的

2647
01:28:40,000 --> 01:28:41,000
但是你知道

2648
01:28:41,000 --> 01:28:42,000
基于 Lisp 的

2649
01:28:42,000 --> 01:28:44,000
那个 Java dialect

2650
01:28:44,000 --> 01:28:45,000
反了

2651
01:28:45,000 --> 01:28:48,000
基于 JVM 的 Lisp dialect

2652
01:28:48,000 --> 01:28:49,000
Closure

2653
01:28:49,000 --> 01:28:50,000
对

2654
01:28:50,000 --> 01:28:51,000
有一个

2655
01:28:51,000 --> 01:28:53,000
运媒工具叫做

2656
01:28:53,000 --> 01:28:55,000
应该是叫做 Palette

2657
01:28:55,000 --> 01:28:58,000
就是用 Closure 写的

2658
01:28:58,000 --> 01:28:59,000
所以它的配置文本

2659
01:28:59,000 --> 01:29:00,000
它的配置文本

2660
01:29:00,000 --> 01:29:02,000
其实就是它的运行脚本

2661
01:29:02,000 --> 01:29:04,000
脚本及配置

2662
01:29:04,000 --> 01:29:05,000
配置及脚本

2663
01:29:05,000 --> 01:29:07,000
然后它的那个什么脚本

2664
01:29:07,000 --> 01:29:08,000
也是可以当做

2665
01:29:08,000 --> 01:29:09,000
Data 来处理的

2666
01:29:09,000 --> 01:29:10,000
所以没错

2667
01:29:10,000 --> 01:29:11,000
存在这个问题了

2668
01:29:11,000 --> 01:29:11,000
对

2669
01:29:11,000 --> 01:29:13,000
这个东西叫做 Palette

2670
01:29:13,000 --> 01:29:15,000
但是因为它需要 Java dependency

2671
01:29:15,000 --> 01:29:16,000
就是你本来

2672
01:29:16,000 --> 01:29:18,000
搞东西可能已经非常臃肿

2673
01:29:18,000 --> 01:29:20,000
然后还要加一个 Java dependency

2674
01:29:20,000 --> 01:29:21,000
对

2675
01:29:21,000 --> 01:29:23,000
这个可能就是一个

2676
01:29:23,000 --> 01:29:24,000
比较麻烦的问题

2677
01:29:24,000 --> 01:29:24,000
因为像

2678
01:29:24,000 --> 01:29:26,000
如果你凡是一个东西

2679
01:29:26,000 --> 01:29:27,000
是基于 JVM 的话

2680
01:29:27,000 --> 01:29:28,000
那你首先

2681
01:29:28,000 --> 01:29:29,000
你的目标机器上

2682
01:29:29,000 --> 01:29:30,000
你至少要得有一个

2683
01:29:30,000 --> 01:29:31,000
才可以运行了

2684
01:29:31,000 --> 01:29:31,000
对吧

2685
01:29:31,000 --> 01:29:34,000
然后 JVM 的启动

2686
01:29:34,000 --> 01:29:36,000
那些也并不算得迅速

2687
01:29:36,000 --> 01:29:38,000
对于一个那种

2688
01:29:38,000 --> 01:29:39,000
如果你需要轻量级的

2689
01:29:39,000 --> 01:29:40,000
做一些配置

2690
01:29:40,000 --> 01:29:41,000
其实我觉得可能

2691
01:29:41,000 --> 01:29:43,000
不是特别好的一个选择

2692
01:29:43,000 --> 01:29:43,000
对

2693
01:29:43,000 --> 01:29:45,000
所以 Palette 不是非常适合

2694
01:29:45,000 --> 01:29:46,000
你一些比较

2695
01:29:46,000 --> 01:29:49,000
中等量级的

2696
01:29:49,000 --> 01:29:50,000
尤其是如果你的

2697
01:29:50,000 --> 01:29:51,000
你要部署的东西

2698
01:29:51,000 --> 01:29:53,000
本身跟 Java 没什么关系

2699
01:29:53,000 --> 01:29:54,000
图这么一个 Java dependency

2700
01:29:54,000 --> 01:29:55,000
简直是

2701
01:29:55,000 --> 01:29:57,000
payness

2702
01:29:57,000 --> 01:29:57,000
对

2703
01:29:57,000 --> 01:29:58,000
何必呢

2704
01:29:58,000 --> 01:29:58,000
真的

2705
01:29:58,000 --> 01:30:00,000
OK

2706
01:30:00,000 --> 01:30:02,000
那说回 Sort 和 Ansemble

2707
01:30:02,000 --> 01:30:03,000
这两个东西

2708
01:30:03,000 --> 01:30:04,000
他们的

2709
01:30:04,000 --> 01:30:05,000
还有在设计程序上

2710
01:30:05,000 --> 01:30:07,000
跟 Popping Chef

2711
01:30:07,000 --> 01:30:08,000
还有点不一样

2712
01:30:08,000 --> 01:30:09,000
没错

2713
01:30:09,000 --> 01:30:11,000
就

2714
01:30:11,000 --> 01:30:13,000
至少 Sort 这个东西

2715
01:30:13,000 --> 01:30:14,000
是比较

2716
01:30:14,000 --> 01:30:16,000
Sort 其实有点像

2717
01:30:16,000 --> 01:30:18,000
Fabric

2718
01:30:18,000 --> 01:30:19,000
在某种程度上

2719
01:30:19,000 --> 01:30:20,000
只不过 Sort

2720
01:30:20,000 --> 01:30:21,000
会比较

2721
01:30:21,000 --> 01:30:23,000
怎么说呢

2722
01:30:23,000 --> 01:30:24,000
就更加

2723
01:30:24,000 --> 01:30:27,000
是 Fabric 的升级版本

2724
01:30:27,000 --> 01:30:27,000
就是

2725
01:30:27,000 --> 01:30:29,000
首先 Sort 是基于

2726
01:30:29,000 --> 01:30:30,000
ZeroMQ 的

2727
01:30:30,000 --> 01:30:32,000
其他的 Popping Chef 也好

2728
01:30:32,000 --> 01:30:33,000
全都是基于 SSH

2729
01:30:33,000 --> 01:30:35,000
就是它的底层传输协议

2730
01:30:35,000 --> 01:30:36,000
都是 SSH

2731
01:30:36,000 --> 01:30:39,000
而 Sort 则是基于 ZeroMQ 的

2732
01:30:39,000 --> 01:30:41,000
什么是 ZeroMQ

2733
01:30:41,000 --> 01:30:42,000
你来解释一下

2734
01:30:42,000 --> 01:30:44,000
ZeroMQ 你可以认为

2735
01:30:44,000 --> 01:30:47,000
它是一个增强版的套节字

2736
01:30:47,000 --> 01:30:47,000
Socket

2737
01:30:47,000 --> 01:30:50,000
然后它可以让你

2738
01:30:50,000 --> 01:30:51,000
做

2739
01:30:51,000 --> 01:30:53,000
因为你知道我们通常用的 TCP Socket

2740
01:30:53,000 --> 01:30:54,000
它是一个基于流的

2741
01:30:54,000 --> 01:30:55,000
基于 Stream 的

2742
01:30:55,000 --> 01:30:58,000
你不知道流的开头结尾怎么样

2743
01:30:58,000 --> 01:30:59,000
你得去读内容

2744
01:30:59,000 --> 01:31:01,000
然后自己定义协议去判断

2745
01:31:01,000 --> 01:31:02,000
然后 ZeroMQ 的话

2746
01:31:02,000 --> 01:31:03,000
它是基于 Message

2747
01:31:03,000 --> 01:31:04,000
就是基于消息的

2748
01:31:04,000 --> 01:31:08,000
消息的话就是一个有固定的

2749
01:31:08,000 --> 01:31:09,000
也不叫固定长途

2750
01:31:09,000 --> 01:31:11,000
它是你可以每一个消息之间

2751
01:31:11,000 --> 01:31:13,000
它是有一个固定边界的

2752
01:31:13,000 --> 01:31:14,000
你知道消息之间消息怎么样

2753
01:31:14,000 --> 01:31:17,000
然后它可以让你做一些比较

2754
01:31:17,000 --> 01:31:19,000
普通的这种 Socket 做不到的事情

2755
01:31:19,000 --> 01:31:23,000
比如说它可以让你做一个什么

2756
01:31:23,000 --> 01:31:23,000
Pop Sub

2757
01:31:23,000 --> 01:31:25,000
可以做一个 Q

2758
01:31:25,000 --> 01:31:28,000
这种更加丰富多样的一个拓扑结构

2759
01:31:28,000 --> 01:31:33,000
然后它的性能是非常不错的一个通讯工具

2760
01:31:33,000 --> 01:31:33,000
对

2761
01:31:33,000 --> 01:31:35,000
Broadcast 之类的

2762
01:31:35,000 --> 01:31:38,000
当然它最大的败笔可能是用 C 再加写

2763
01:31:38,000 --> 01:31:42,000
它就安装和依赖会比较麻烦

2764
01:31:42,000 --> 01:31:45,000
我记得在什么地方读过 ZeroMQ 的作者说

2765
01:31:45,000 --> 01:31:47,000
如果上天给他再来一次机会

2766
01:31:47,000 --> 01:31:49,000
他会选择用 C 来重写 ZeroMQ

2767
01:31:49,000 --> 01:31:52,000
ZeroMQ 原作者

2768
01:31:52,000 --> 01:31:56,000
就 ZeroMQ 他已经跟原作者分裂了

2769
01:31:56,000 --> 01:31:59,000
他就自己真的用 C 再写

2770
01:31:59,000 --> 01:31:59,000
C 重写了吗

2771
01:31:59,000 --> 01:32:00,000
真的吗

2772
01:32:00,000 --> 01:32:02,000
叫 NanoMessage

2773
01:32:02,000 --> 01:32:03,000
NanoMSG

2774
01:32:03,000 --> 01:32:05,000
也就是那个人

2775
01:32:05,000 --> 01:32:06,000
作者之一干的

2776
01:32:06,000 --> 01:32:09,000
然后 ZeroMQ 他现在是一个

2777
01:32:09,000 --> 01:32:11,000
有一个公司来推动的事情

2778
01:32:11,000 --> 01:32:13,000
那个作者之一他出去搞了这个东西

2779
01:32:13,000 --> 01:32:15,000
然后他就改用 C 写了

2780
01:32:15,000 --> 01:32:17,000
对

2781
01:32:17,000 --> 01:32:18,000
嗯哼

2782
01:32:18,000 --> 01:32:19,000
总之 SAT 就是一个

2783
01:32:19,000 --> 01:32:21,000
基于 ZeroMQ 的这样一个

2784
01:32:21,000 --> 01:32:24,000
Message Bus

2785
01:32:24,000 --> 01:32:27,000
来写的这么一套配置工具

2786
01:32:27,000 --> 01:32:30,000
然后他其实也是要有一台 Master

2787
01:32:30,000 --> 01:32:33,000
然后 Clients 在那边叫做 Minions

2788
01:32:33,000 --> 01:32:34,000
就那个

2789
01:32:34,000 --> 01:32:38,000
Dispersible Me 里面的那个 Minions

2790
01:32:38,000 --> 01:32:40,000
一群群小黄人

2791
01:32:40,000 --> 01:32:41,000
对香蕉人

2792
01:32:41,000 --> 01:32:41,000
对

2793
01:32:41,000 --> 01:32:42,000
然后他的功能

2794
01:32:42,000 --> 01:32:43,000
就是小兵的意思了

2795
01:32:43,000 --> 01:32:44,000
对吧

2796
01:32:44,000 --> 01:32:45,000
我怎么记得

2797
01:32:45,000 --> 01:32:47,000
Minions 其实是普通嘛

2798
01:32:47,000 --> 01:32:47,000
就是

2799
01:32:47,000 --> 01:32:49,000
随着我的

2800
01:32:49,000 --> 01:32:49,000
我的

2801
01:32:49,000 --> 01:32:51,000
控我手下的小喽啰

2802
01:32:51,000 --> 01:32:52,000
被我控制的

2803
01:32:52,000 --> 01:32:52,000
小喽啰

2804
01:32:52,000 --> 01:32:53,000
对这个词

2805
01:32:53,000 --> 01:32:55,000
我记得这个词

2806
01:32:55,000 --> 01:32:59,000
我是从那个 Dungeon Keeper 里面学到的

2807
01:32:59,000 --> 01:33:01,000
又暴露年龄了

2808
01:33:01,000 --> 01:33:01,000
对

2809
01:33:01,000 --> 01:33:02,000
嗯

2810
01:33:02,000 --> 01:33:03,000
对

2811
01:33:03,000 --> 01:33:04,000
然后 SAT 是一个相对来说

2812
01:33:04,000 --> 01:33:07,000
要比 Public Chef 简单多的工具

2813
01:33:07,000 --> 01:33:12,000
他整个安装过程就是在 Master 上安一个包

2814
01:33:12,000 --> 01:33:14,000
然后在 Clients 上安一个包

2815
01:33:14,000 --> 01:33:14,000
然后就完了

2816
01:33:14,000 --> 01:33:16,000
嗯

2817
01:33:16,000 --> 01:33:19,000
这一点可能跟那个 Answer

2818
01:33:19,000 --> 01:33:21,000
就是还区别蛮大的

2819
01:33:21,000 --> 01:33:24,000
就是 Answer 其实是不需要在客户端上安装任何东西的

2820
01:33:24,000 --> 01:33:30,000
但是 Answer 在服务端上安装的东西是专门要写本书的

2821
01:33:30,000 --> 01:33:33,000
就那个也不是专门写本书

2822
01:33:33,000 --> 01:33:38,000
反正专门有个教程来教你怎么在服务端上安装一个 Answer

2823
01:33:38,000 --> 01:33:39,000
但是

2824
01:33:39,000 --> 01:33:43,000
你可以不用装但是就是如果你是数量不多的情况下

2825
01:33:43,000 --> 01:33:45,000
对

2826
01:33:45,000 --> 01:33:47,000
Answer 也是由企业级解决方案的吧

2827
01:33:47,000 --> 01:33:49,000
就是要装一个 Console 什么的

2828
01:33:49,000 --> 01:33:50,000
其实这几个都是嘛

2829
01:33:50,000 --> 01:33:52,000
就是像 Public 也好

2830
01:33:52,000 --> 01:33:52,000
Chef 也好

2831
01:33:52,000 --> 01:33:52,000
Salt

2832
01:33:52,000 --> 01:33:54,000
Answer 他们都是一个共同的一个方式

2833
01:33:54,000 --> 01:34:00,000
就是说他们有一个这个商业公司来提供这种商业级别的就付费的商业支持

2834
01:34:00,000 --> 01:34:03,000
但同时又有个开放的社区版本

2835
01:34:03,000 --> 01:34:06,000
就是所有的都是基于一个开源软件

2836
01:34:06,000 --> 01:34:08,000
然后开源社区的

2837
01:34:08,000 --> 01:34:12,000
然后做一些商业化的这个支持的这么一种盈利模式

2838
01:34:12,000 --> 01:34:13,000
嗯

2839
01:34:13,000 --> 01:34:14,000
应该这么说是安全的

2840
01:34:14,000 --> 01:34:15,000
对

2841
01:34:15,000 --> 01:34:15,000
对

2842
01:34:17,000 --> 01:34:17,000
嗯

2843
01:34:17,000 --> 01:34:18,000
当然我记得 SaaS

2844
01:34:18,000 --> 01:34:19,000
其实也是有

2845
01:34:19,000 --> 01:34:21,000
所谓 Masterless

2846
01:34:21,000 --> 01:34:23,000
的一个模式

2847
01:34:23,000 --> 01:34:28,000
但我们就是我们这一期最大的问题就是我们两个其实都没有什么实际的使用经验

2848
01:34:28,000 --> 01:34:30,000
而且我只用过这个 Answer

2849
01:34:30,000 --> 01:34:32,000
SaaS 其实我是没有没怎么用

2850
01:34:32,000 --> 01:34:33,000
OK

2851
01:34:33,000 --> 01:34:35,000
是他比 Answer 后出现吗

2852
01:34:35,000 --> 01:34:36,000
应该是对对

2853
01:34:36,000 --> 01:34:38,000
其实 SaaS 最简单的用法

2854
01:34:38,000 --> 01:34:39,000
我不知道 Answer 能不能做这件事情

2855
01:34:39,000 --> 01:34:43,000
就是 SaaS 最简单的用法就是比如说 SaaS 专门有个命令行工就叫 SaaS

2856
01:34:43,000 --> 01:34:45,000
SaaS

2857
01:34:45,000 --> 01:34:47,000
然后那个

2858
01:34:48,000 --> 01:34:49,000
Hostname

2859
01:34:49,000 --> 01:34:53,000
Hostname 可以用比如说那个 Asterisk

2860
01:34:53,000 --> 01:34:53,000
Asterisk

2861
01:34:53,000 --> 01:34:54,000
就是

2862
01:34:54,000 --> 01:34:55,000
信号

2863
01:34:55,000 --> 01:35:03,000
信号来指代所有可以被抵达的这个 Minion

2864
01:35:03,000 --> 01:35:04,000
然后 SaaS

2865
01:35:04,000 --> 01:35:05,000
信号

2866
01:35:05,000 --> 01:35:07,000
然后 Ping

2867
01:35:07,000 --> 01:35:08,000
然后所有的那个

2868
01:35:09,000 --> 01:35:10,000
嗯

2869
01:35:10,000 --> 01:35:12,000
Miniframe 都会执行 Ping 命令

2870
01:35:12,000 --> 01:35:13,000
诸如此类的

2871
01:35:13,000 --> 01:35:15,000
就是它有最简单的一个用法

2872
01:35:15,000 --> 01:35:17,000
就是直接用命令行下面的 SaaS

2873
01:35:17,000 --> 01:35:18,000
嗯

2874
01:35:18,000 --> 01:35:19,000
然后你也可以在

2875
01:35:19,000 --> 01:35:21,000
在 master 上面说所有的 mini

2876
01:35:21,000 --> 01:35:24,000
SaaS 所有的 mini 一起来比如说

2877
01:35:24,000 --> 01:35:26,000
install package vim

2878
01:35:26,000 --> 01:35:27,000
嗯

2879
01:35:27,000 --> 01:35:30,000
然后所有的 mini 也就会去安装 mini

2880
01:35:30,000 --> 01:35:31,000
安装 vim

2881
01:35:31,000 --> 01:35:37,000
然后接下来就是你可以写一个脚本来批量完成一些

2882
01:35:37,000 --> 01:35:41,000
叫做 formula

2883
01:35:41,000 --> 01:35:43,000
对这个应该是跟 brew 一样叫做 formula

2884
01:35:43,000 --> 01:35:44,000
嗯

2885
01:35:44,000 --> 01:35:45,000
就是你可以执行一系列脚本

2886
01:35:45,000 --> 01:35:47,000
然后这些脚本叫做 formula

2887
01:35:47,000 --> 01:35:48,000
可以就有点像

2888
01:35:48,000 --> 01:35:48,000
呃

2889
01:35:48,000 --> 01:35:53,000
puppet 或者是 chef 那样可以自动化完成一些

2890
01:35:53,000 --> 01:35:55,000
一系列一系列作用

2891
01:35:55,000 --> 01:35:57,000
呃一系列行动这样

2892
01:35:57,000 --> 01:35:58,000
嗯

2893
01:35:58,000 --> 01:36:04,000
所以所以为什么说就实际用的时候为什么呃这个 ansible 还还好也好还是这个 sort 也好

2894
01:36:04,000 --> 01:36:08,000
它会比 puppet 和 chef 这种跑起来更快呢

2895
01:36:08,000 --> 01:36:11,000
这里可能要解稍微解释一下哈

2896
01:36:11,000 --> 01:36:11,000
嗯

2897
01:36:11,000 --> 01:36:16,000
就是说呃因为也是因为刚才也提到那个叫那个配置语言的一个关系吧

2898
01:36:16,000 --> 01:36:17,000
就是说

2899
01:36:17,000 --> 01:36:17,000
嗯

2900
01:36:17,000 --> 01:36:18,000
puppet 和 chef 这种跑起来更快呢

2901
01:36:18,000 --> 01:36:18,000
嗯

2902
01:36:18,000 --> 01:36:23,000
因为这个 puppet 和 chef 它它配它每个机器上它要跑一遍那个脚本

2903
01:36:23,000 --> 01:36:28,000
它跑完之后才能知道这个状态是否达到你所要的需求对吧

2904
01:36:28,000 --> 01:36:32,000
就每次你不管做什么感动他都要把那个脚本完整的从头到尾跑一遍

2905
01:36:32,000 --> 01:36:37,000
但是像 sort 和 ansible 这两个东西它是因为它的配置文件是一个描述性的语言嘛

2906
01:36:37,000 --> 01:36:40,000
这不是语言就是描述性的数数字结构

2907
01:36:40,000 --> 01:36:44,000
这样的话它可以直接跳过中间已经满足的那些东西

2908
01:36:44,000 --> 01:36:47,000
它不需要每次都执行完那个脚本

2909
01:36:47,000 --> 01:36:47,000
对

2910
01:36:47,000 --> 01:36:48,000
我对

2911
01:36:48,000 --> 01:36:50,000
这么描述应该是正确的吧

2912
01:36:50,000 --> 01:36:51,000
应该是正确的吧

2913
01:36:51,000 --> 01:36:52,000
对

2914
01:36:52,000 --> 01:36:52,000
对

2915
01:36:52,000 --> 01:36:52,000
啊

2916
01:36:52,000 --> 01:36:59,000
就是所以可以有很大程度上可以减减少这个每一台机每一台服务器上需要等待的时间

2917
01:36:59,000 --> 01:37:02,000
这样的话可以大幅度提高这个部署的速度嘛

2918
01:37:02,000 --> 01:37:03,000
没错

2919
01:37:03,000 --> 01:37:05,000
嗯

2920
01:37:05,000 --> 01:37:06,000
呃

2921
01:37:06,000 --> 01:37:09,000
然后这几个常见 opt 我们就讲到这里

2922
01:37:09,000 --> 01:37:12,000
下面还有一些不常见的就带过吧

2923
01:37:12,000 --> 01:37:15,000
有个什么 pull 的 rex 你也你也写到哟

2924
01:37:15,000 --> 01:37:18,000
对 rex 是一个

2925
01:37:18,000 --> 01:37:21,000
反正也是有其中的那个 pull 现在还有人在用吗

2926
01:37:21,000 --> 01:37:25,000
我现在就是不要这样这么这么说真的不太好啊

2927
01:37:25,000 --> 01:37:37,000
对但是确实是不太不太流行的一个我的前前公司安装的一个一套机房组件我忘了是什么好像是某一套电源电源管理系统

2928
01:37:37,000 --> 01:37:41,000
电源管理系统对给了一批配置工具

2929
01:37:41,000 --> 01:37:42,000
嗯

2930
01:37:42,000 --> 01:37:46,000
然后就用 pull 写的就感觉就是新的那些工具基本上都没有用 pull 写的了

2931
01:37:46,000 --> 01:37:48,000
对 pull 是一个

2932
01:37:48,000 --> 01:37:51,000
这个 pull 就是 80 年的 80 年的 ruby 嘛

2933
01:37:51,000 --> 01:37:53,000
对一个 hype 的劲儿

2934
01:37:53,000 --> 01:37:56,000
对对对对现在好像已经过期了

2935
01:37:56,000 --> 01:37:59,000
对这么说应该是安全不会被人喷吧

2936
01:37:59,000 --> 01:38:01,000
应该很难说 pull 也是有

2937
01:38:01,000 --> 01:38:06,000
我想最最最近我用的一个 pull 写的工具还蛮令我意外的

2938
01:38:06,000 --> 01:38:13,000
那个 linode 它不是开发了一个命令行工具让他可以不用网页版不用登录网页可以直接操纵那个虚拟机吗

2939
01:38:13,000 --> 01:38:14,000
嗯

2940
01:38:14,000 --> 01:38:15,000
那种东西 pull 写的

2941
01:38:15,000 --> 01:38:16,000
安装过程

2942
01:38:16,000 --> 01:38:17,000
fucking god

2943
01:38:18,000 --> 01:38:19,000
你试下在 brew 里面安装的话

2944
01:38:19,000 --> 01:38:22,000
你会发现那个安装过程超级超级长

2945
01:38:22,000 --> 01:38:25,000
他下载可能好几百个 pull 的包

2946
01:38:25,000 --> 01:38:26,000
ok

2947
01:38:26,000 --> 01:38:28,000
天呐我真是

2948
01:38:28,000 --> 01:38:29,000
anyway

2949
01:38:29,000 --> 01:38:30,000
啊

2950
01:38:30,000 --> 01:38:33,000
就是唯一一个现代一点的 pull 的用户

2951
01:38:33,000 --> 01:38:35,000
然后给我感觉是这么糟糕

2952
01:38:35,000 --> 01:38:39,000
所以你可以想想这个后面是多么惨烈的一个状况

2953
01:38:39,000 --> 01:38:40,000
anyway

2954
01:38:40,000 --> 01:38:44,000
下面我们过渡到今天最最核心的内容

2955
01:38:44,000 --> 01:38:47,000
就是 containerization

2956
01:38:48,000 --> 01:38:52,000
这个要先解释一下 containerization 是什么玩意

2957
01:38:52,000 --> 01:38:54,000
其实简单上就是集装箱嘛

2958
01:38:54,000 --> 01:38:56,000
对集装箱化

2959
01:38:56,000 --> 01:38:57,000
对集装箱化

2960
01:38:57,000 --> 01:39:03,000
对但是要解释集装箱可能要牵涉到那我们在讲集装箱化是在软件世界里面讲的

2961
01:39:03,000 --> 01:39:05,000
对我们在讲一个 metaphor

2962
01:39:05,000 --> 01:39:10,000
但是其实在现实世界里面这个 metaphor 也是同样同等重要的

2963
01:39:10,000 --> 01:39:15,000
对就 containerization 可能是人类最重要的发明之一

2964
01:39:15,000 --> 01:39:16,000
不可能没有之一

2965
01:39:16,000 --> 01:39:17,000
可能最重要的发明

2966
01:39:18,000 --> 01:39:20,000
不可能人类最重要的发明是火

2967
01:39:20,000 --> 01:39:21,000
好吧

2968
01:39:21,000 --> 01:39:22,000
或者互联网

2969
01:39:22,000 --> 01:39:23,000
现代社会

2970
01:39:23,000 --> 01:39:26,000
现代社会集装箱是一个

2971
01:39:26,000 --> 01:39:27,000
如果有排前十的话

2972
01:39:27,000 --> 01:39:31,000
可能至少能列到前五

2973
01:39:31,000 --> 01:39:31,000
好吧

2974
01:39:31,000 --> 01:39:34,000
我们来排一排好

2975
01:39:34,000 --> 01:39:34,000
算了

2976
01:39:34,000 --> 01:39:36,000
总之

2977
01:39:36,000 --> 01:39:37,000
总之

2978
01:39:37,000 --> 01:39:43,000
抽水马桶和集装箱可能是彻底让我们变得文明起来的必要条件

2979
01:39:43,000 --> 01:39:43,000
两个必要条件

2980
01:39:43,000 --> 01:39:44,000
嗯

2981
01:39:44,000 --> 01:39:45,000
就是如果没有集装箱

2982
01:39:45,000 --> 01:39:47,000
就肯定没有什么现代什么全球化

2983
01:39:48,000 --> 01:39:51,000
现代经济我们也没有办法在这扯什么犊子

2984
01:39:51,000 --> 01:39:52,000
没错

2985
01:39:52,000 --> 01:39:53,000
嗯

2986
01:39:53,000 --> 01:39:53,000
为什么呢

2987
01:39:53,000 --> 01:39:54,000
因为

2988
01:39:55,000 --> 01:39:56,000
呃

2989
01:39:56,000 --> 01:39:57,000
曾经有这么一个时代

2990
01:39:57,000 --> 01:39:59,000
甚至离我们不是特别遥远

2991
01:39:59,000 --> 01:40:01,000
就是在二战

2992
01:40:01,000 --> 01:40:03,000
应该是在二战之前

2993
01:40:03,000 --> 01:40:04,000
就是大概六

2994
01:40:04,000 --> 01:40:05,000
这么画一分水岭的话

2995
01:40:05,000 --> 01:40:07,000
就是 191960 年之前

2996
01:40:07,000 --> 01:40:12,000
整个世界的航运系统是

2997
01:40:13,000 --> 01:40:14,000
怎么说呢

2998
01:40:14,000 --> 01:40:15,000
分散的

2999
01:40:15,000 --> 01:40:17,000
是没有一个统一的

3000
01:40:17,000 --> 01:40:19,000
没有就是这么说吧

3001
01:40:19,000 --> 01:40:20,000
就 60 年代之前

3002
01:40:20,000 --> 01:40:22,000
在集装箱发展出来之前

3003
01:40:22,000 --> 01:40:23,000
嗯

3004
01:40:23,000 --> 01:40:26,000
整个人类的物流系统是非常臃肿和零散的

3005
01:40:27,000 --> 01:40:30,000
对这里要可能要一个比较形象的描述哈

3006
01:40:30,000 --> 01:40:31,000
就是说

3007
01:40:31,000 --> 01:40:32,000
假设啊

3008
01:40:32,000 --> 01:40:32,000
嗯

3009
01:40:32,000 --> 01:40:34,000
我到底在德国对吧

3010
01:40:34,000 --> 01:40:35,000
对我在加拿大

3011
01:40:35,000 --> 01:40:38,000
然后你准备给我运 10 吨大米过来

3012
01:40:38,000 --> 01:40:39,000
举个例子

3013
01:40:39,000 --> 01:40:40,000
我们虽然不明白为什么这么干

3014
01:40:40,000 --> 01:40:44,000
但是可以可以讲一下这个过程就是要会有多繁琐

3015
01:40:44,000 --> 01:40:47,000
因为你你你首先你是在一个内陆的城市对吧

3016
01:40:47,000 --> 01:40:49,000
对不是在海港

3017
01:40:49,000 --> 01:40:52,000
你得先把那 10 吨大米想办法装到一个车上面或者火车上面

3018
01:40:52,000 --> 01:40:55,000
然后这个火车或者是卡车拖到一个德国的一个海港上

3019
01:40:55,000 --> 01:40:56,000
然后再装船

3020
01:40:56,000 --> 01:40:57,000
那再运到我这里来

3021
01:40:57,000 --> 01:41:00,000
我这里边是我这里是个港口可能还好

3022
01:41:00,000 --> 01:41:02,000
但是就就说说你那段吧

3023
01:41:02,000 --> 01:41:05,000
应该主要的运输的难度都已经能够覆盖的到了

3024
01:41:05,000 --> 01:41:08,000
因为这个米是一个小颗粒嘛

3025
01:41:08,000 --> 01:41:08,000
散装的东西

3026
01:41:08,000 --> 01:41:10,000
啊

3027
01:41:10,000 --> 01:41:12,000
首先你第一步就是你要解决一个容器的问题

3028
01:41:12,000 --> 01:41:14,000
米是装在袋子里还是装在桶里呢

3029
01:41:14,000 --> 01:41:16,000
袋子和桶都有各有各的各有各的优点

3030
01:41:16,000 --> 01:41:17,000
比如说袋子比较好

3031
01:41:17,000 --> 01:41:19,000
比较比较灵活

3032
01:41:19,000 --> 01:41:21,000
你可以把几袋米都叠在一起

3033
01:41:21,000 --> 01:41:22,000
但是袋子容易破

3034
01:41:22,000 --> 01:41:23,000
不过是有这个问题

3035
01:41:23,000 --> 01:41:25,000
就是说呃不是所有的地方

3036
01:41:25,000 --> 01:41:27,000
因为你你装袋是要有成本的嘛

3037
01:41:27,000 --> 01:41:29,000
袋子首先本身是要成十吨大米

3038
01:41:29,000 --> 01:41:29,000
你要装多大

3039
01:41:29,000 --> 01:41:33,000
也要说是装那种我们常见的那种什么几十公斤的一个小袋

3040
01:41:33,000 --> 01:41:35,000
你得装好几多少几百包吧

3041
01:41:35,000 --> 01:41:37,000
几几千包这样的

3042
01:41:37,000 --> 01:41:40,000
然后就其实这个是一个你装田的时候就是一个成本

3043
01:41:40,000 --> 01:41:43,000
然后如果像像这种城这种规模的运输的话

3044
01:41:43,000 --> 01:41:45,000
很多人他们都是所谓的用这个散货

3045
01:41:45,000 --> 01:41:46,000
就是你直接装到一个

3046
01:41:46,000 --> 01:41:47,000
大

3047
01:41:47,000 --> 01:41:47,000
大

3048
01:41:47,000 --> 01:41:48,000
大的容器里面

3049
01:41:48,000 --> 01:41:50,000
然后整就不用再分袋小装的

3050
01:41:50,000 --> 01:41:52,000
然后再装过再再运输这样

3051
01:41:52,000 --> 01:41:53,000
对

3052
01:41:53,000 --> 01:41:57,000
但是散货的盒子又有一个又不能太大

3053
01:41:57,000 --> 01:41:58,000
又不能太小

3054
01:41:58,000 --> 01:41:59,000
呃散货的话

3055
01:41:59,000 --> 01:42:00,000
你要比如说你现在有个卡车对吧

3056
01:42:00,000 --> 01:42:02,000
你先散货装那个卡车上面

3057
01:42:02,000 --> 01:42:06,000
你也得把想办法把那个东西那些米装到那个卡车里面去

3058
01:42:06,000 --> 01:42:07,000
对吧

3059
01:42:07,000 --> 01:42:09,000
然后卡车有不同的尺寸

3060
01:42:09,000 --> 01:42:09,000
对吧

3061
01:42:09,000 --> 01:42:11,000
你可能你可能一个车装不了

3062
01:42:11,000 --> 01:42:12,000
你还得搞几个车

3063
01:42:12,000 --> 01:42:15,000
能十吨可能体现不出来

3064
01:42:15,000 --> 01:42:17,000
有些卡车一十吨就能装上来

3065
01:42:17,000 --> 01:42:17,000
那

3066
01:42:17,000 --> 01:42:17,000
那你怎么办

3067
01:42:17,000 --> 01:42:19,000
你可能要运好几卡车

3068
01:42:19,000 --> 01:42:21,000
那可能卡车的这个形状还不一样

3069
01:42:21,000 --> 01:42:22,000
那你怎么办

3070
01:42:22,000 --> 01:42:24,000
然后你到了这卡车到了海港边

3071
01:42:24,000 --> 01:42:26,000
如果你是散货的话

3072
01:42:26,000 --> 01:42:29,000
你得想办法怎么去装到这个一个船上

3073
01:42:29,000 --> 01:42:31,000
因为船不只装一百吨或者一十吨嘛

3074
01:42:31,000 --> 01:42:35,000
你要想怎么去和其他的东西呃共共就是什么

3075
01:42:35,000 --> 01:42:38,000
就是怎么摆和其他的你船上其他物品

3076
01:42:38,000 --> 01:42:39,000
一些怎么摆

3077
01:42:39,000 --> 01:42:40,000
如果你是散货的话

3078
01:42:40,000 --> 01:42:43,000
你还得考虑在海上的时候下防潮怎么办

3079
01:42:43,000 --> 01:42:44,000
路上有下雨怎么办

3080
01:42:44,000 --> 01:42:45,000
对吧

3081
01:42:45,000 --> 01:42:46,000
各种各样的怎么办

3082
01:42:46,000 --> 01:42:48,000
有人偷盗窃怎么办

3083
01:42:48,000 --> 01:42:50,000
然后装货的时候还有一个很大的

3084
01:42:50,000 --> 01:42:51,000
你散货的话

3085
01:42:51,000 --> 01:42:51,000
你可能怎么装

3086
01:42:51,000 --> 01:42:56,000
你拿个最传统的时候是一些人拿个那个什么铲子

3087
01:42:56,000 --> 01:42:58,000
一一铲一铲的往上铲对吧

3088
01:42:58,000 --> 01:42:59,000
对你就这个就够了

3089
01:42:59,000 --> 01:43:00,000
没一样吗

3090
01:43:00,000 --> 01:43:02,000
现在即便现在没船还是这样的

3091
01:43:02,000 --> 01:43:05,000
没船还是这样的吗

3092
01:43:05,000 --> 01:43:10,000
对航就是在蓝银河里面经常还是可以看到一些运那个在产的

3093
01:43:10,000 --> 01:43:12,000
对他们不是还还仍旧不是用集装箱

3094
01:43:12,000 --> 01:43:14,000
因为仍旧不是用集装箱了

3095
01:43:14,000 --> 01:43:15,000
但他们也不是用产

3096
01:43:15,000 --> 01:43:16,000
他们是用什么卷样机

3097
01:43:16,000 --> 01:43:17,000
卷样机之类的

3098
01:43:17,000 --> 01:43:19,000
就是还是自动化了对吧

3099
01:43:19,000 --> 01:43:25,000
对但是你需要有也这你不可能说你用用运煤的东西再去运这个运大米嘛

3100
01:43:25,000 --> 01:43:29,000
就是说你用你卷煤那个东西肯定不能用来卷大米

3101
01:43:29,000 --> 01:43:31,000
因为它互相污染对吧

3102
01:43:31,000 --> 01:43:34,000
对所以看我们就互相污染也是一个很重要的问题

3103
01:43:34,000 --> 01:43:36,000
没错

3104
01:43:36,000 --> 01:43:40,000
然后就是这个运就每在每切换一次模式的切换一次运输模式

3105
01:43:40,000 --> 01:43:44,000
比如说你从卡车转到船或者就是卡车转到火车这种模式的时候

3106
01:43:44,000 --> 01:43:45,000
你知道有一个转换的过程

3107
01:43:45,000 --> 01:43:46,000
这个费

3108
01:43:46,000 --> 01:43:47,000
费时费力

3109
01:43:47,000 --> 01:43:50,000
然后有可能会有损耗会有损耗对

3110
01:43:50,000 --> 01:43:55,000
你可能每次会产掉一些到到地上的或者说就产坏了一些

3111
01:43:55,000 --> 01:43:57,000
因为就有些那种米是长条的嘛

3112
01:43:57,000 --> 01:43:59,000
你产下去可能就断成两节了

3113
01:43:59,000 --> 01:44:00,000
对吧

3114
01:44:00,000 --> 01:44:00,000
没错

3115
01:44:00,000 --> 01:44:03,000
就每一个环节都会出现这么一个问题

3116
01:44:03,000 --> 01:44:08,000
所以后来就有一个这个什么跨时代的发明

3117
01:44:08,000 --> 01:44:10,000
就集装箱就很出世了

3118
01:44:10,000 --> 01:44:10,000
对

3119
01:44:10,000 --> 01:44:13,000
集装箱其实我们现在司空见惯

3120
01:44:13,000 --> 01:44:16,000
但是细细想来

3121
01:44:16,000 --> 01:44:16,000
其实

3122
01:44:16,000 --> 01:44:18,000
其实是一个挺了不起的东西

3123
01:44:18,000 --> 01:44:18,000
对

3124
01:44:18,000 --> 01:44:20,000
就他解决了刚才我们讲的一系列的问题哈

3125
01:44:20,000 --> 01:44:22,000
没错

3126
01:44:22,000 --> 01:44:24,000
就是你讲像一个刚做的盒子

3127
01:44:24,000 --> 01:44:25,000
一个是刚做的

3128
01:44:25,000 --> 01:44:26,000
应该是刚还是履啊

3129
01:44:26,000 --> 01:44:27,000
刚做的盒子

3130
01:44:27,000 --> 01:44:28,000
刚做的盒子

3131
01:44:28,000 --> 01:44:29,000
你往里面放什么东西

3132
01:44:29,000 --> 01:44:31,000
然后整个盒子作为一个整体

3133
01:44:31,000 --> 01:44:34,000
可以被搬到船上

3134
01:44:34,000 --> 01:44:35,000
被放在火车上

3135
01:44:35,000 --> 01:44:36,000
被放在汽车上

3136
01:44:36,000 --> 01:44:39,000
然后甚至有

3137
01:44:39,000 --> 01:44:40,000
我记得我们家

3138
01:44:40,000 --> 01:44:43,000
因为我们家曾经从兰州搬到天津

3139
01:44:43,000 --> 01:44:45,000
那整个搬家的过程其实就是

3140
01:44:45,000 --> 01:44:46,000
买个机车

3141
01:44:46,000 --> 01:44:47,000
机装箱的

3142
01:44:47,000 --> 01:44:49,000
公司运来的一个机装箱

3143
01:44:49,000 --> 01:44:51,000
然后我们家占其中一半

3144
01:44:51,000 --> 01:44:54,000
然后另外一个邻居占其中另一半

3145
01:44:54,000 --> 01:44:56,000
然后整个机装箱被运到天津

3146
01:44:56,000 --> 01:44:59,000
然后我们再把机装箱从我们新疆门口拆下来

3147
01:44:59,000 --> 01:44:59,000
对

3148
01:44:59,000 --> 01:45:01,000
搬里面的家具一个搬出来

3149
01:45:01,000 --> 01:45:03,000
就是我们可以看到在用机装箱之后

3150
01:45:03,000 --> 01:45:07,000
首先解决了这个模式切换中间的一个损耗的问题

3151
01:45:07,000 --> 01:45:07,000
就是说

3152
01:45:07,000 --> 01:45:09,000
因为机装箱作为整体处理嘛

3153
01:45:09,000 --> 01:45:11,000
你再从这个卡

3154
01:45:11,000 --> 01:45:13,000
你机装箱装到一个卡车上面去

3155
01:45:13,000 --> 01:45:15,000
然后再从卡车装到火车上面去

3156
01:45:15,000 --> 01:45:16,000
中间

3157
01:45:16,000 --> 01:45:17,000
只需要一个吊一下

3158
01:45:17,000 --> 01:45:19,000
不需要再把里面东西每个一个

3159
01:45:19,000 --> 01:45:20,000
就像你搬家一样

3160
01:45:20,000 --> 01:45:22,000
不需要把里面每个家具架式再搬出来

3161
01:45:22,000 --> 01:45:25,000
然后再放到火车上再摆一遍

3162
01:45:25,000 --> 01:45:26,000
然后在这火车上挪下来

3163
01:45:26,000 --> 01:45:28,000
再放到船上再摆一遍

3164
01:45:28,000 --> 01:45:28,000
这样

3165
01:45:28,000 --> 01:45:31,000
每次切换就是一个简单的挪一下

3166
01:45:31,000 --> 01:45:32,000
吊车吊一下就好了

3167
01:45:32,000 --> 01:45:34,000
不需要这个也没有损耗

3168
01:45:34,000 --> 01:45:37,000
然后因为它是这个整个它是封起来的嘛

3169
01:45:37,000 --> 01:45:39,000
就是说它可以做到什么

3170
01:45:39,000 --> 01:45:40,000
所谓的这个 weatherproof

3171
01:45:40,000 --> 01:45:41,000
就是不怕

3172
01:45:41,000 --> 01:45:43,000
就风雨无阻啊

3173
01:45:43,000 --> 01:45:43,000
对

3174
01:45:43,000 --> 01:45:45,000
因为你可以铁盒里面

3175
01:45:45,000 --> 01:45:46,000
你可以做

3176
01:45:46,000 --> 01:45:46,000
你可以做一个

3177
01:45:46,000 --> 01:45:47,000
包括加固啊

3178
01:45:47,000 --> 01:45:48,000
密封啊

3179
01:45:48,000 --> 01:45:50,000
这些东西的保温啊

3180
01:45:50,000 --> 01:45:50,000
对

3181
01:45:50,000 --> 01:45:53,000
而且更重要一点就是你可以让卖

3182
01:45:53,000 --> 01:45:56,000
让这个收货人和送货人都放心的一个

3183
01:45:56,000 --> 01:45:57,000
一个一个

3184
01:45:57,000 --> 01:45:57,000
可以锁起来

3185
01:45:57,000 --> 01:45:59,000
就是它会对

3186
01:45:59,000 --> 01:46:01,000
每个集装箱在上船的时候会锁起来

3187
01:46:01,000 --> 01:46:02,000
然后下船的时候

3188
01:46:02,000 --> 01:46:04,000
收货人可以验证这个风条

3189
01:46:04,000 --> 01:46:05,000
被拆过

3190
01:46:05,000 --> 01:46:05,000
对

3191
01:46:05,000 --> 01:46:06,000
如果被拆过了

3192
01:46:06,000 --> 01:46:07,000
可以拒收

3193
01:46:07,000 --> 01:46:07,000
对

3194
01:46:07,000 --> 01:46:09,000
就跟那个快递一样

3195
01:46:09,000 --> 01:46:10,000
没错

3196
01:46:10,000 --> 01:46:11,000
而且它可以

3197
01:46:11,000 --> 01:46:12,000
可以说

3198
01:46:12,000 --> 01:46:13,000
因为集装箱

3199
01:46:13,000 --> 01:46:14,000
它是密封

3200
01:46:14,000 --> 01:46:15,000
就是每个东西可以密封起来

3201
01:46:15,000 --> 01:46:16,000
如果你对

3202
01:46:16,000 --> 01:46:17,000
这个串位的要求更严重

3203
01:46:17,000 --> 01:46:18,000
你还可以再做一些

3204
01:46:18,000 --> 01:46:20,000
在集装箱内部再做一些特别的处理

3205
01:46:20,000 --> 01:46:21,000
对吧

3206
01:46:21,000 --> 01:46:21,000
没错

3207
01:46:21,000 --> 01:46:22,000
比如说你这就可以保证

3208
01:46:22,000 --> 01:46:23,000
让你说同一车

3209
01:46:23,000 --> 01:46:25,000
你可以一车运大米

3210
01:46:25,000 --> 01:46:26,000
一车运大粪

3211
01:46:26,000 --> 01:46:29,000
如果你真的愿意这么干的

3212
01:46:29,000 --> 01:46:30,000
真的是可以这么做的

3213
01:46:30,000 --> 01:46:30,000
因为

3214
01:46:30,000 --> 01:46:31,000
因为我们可以

3215
01:46:31,000 --> 01:46:32,000
对

3216
01:46:32,000 --> 01:46:34,000
就是完全不会互相影响

3217
01:46:34,000 --> 01:46:35,000
而且

3218
01:46:35,000 --> 01:46:37,000
就你内部做到任何的防护处理也好

3219
01:46:37,000 --> 01:46:40,000
包括那个制冷的那些什么方法也好

3220
01:46:40,000 --> 01:46:41,000
对于这个运输

3221
01:46:41,000 --> 01:46:43,000
这个船或者是卡车上

3222
01:46:43,000 --> 01:46:44,000
它都可以做到

3223
01:46:44,000 --> 01:46:45,000
它可以不

3224
01:46:45,000 --> 01:46:45,000
不

3225
01:46:45,000 --> 01:46:47,000
不用知道你内部做了什么处理

3226
01:46:47,000 --> 01:46:48,000
它不用知道这些细节

3227
01:46:48,000 --> 01:46:49,000
对

3228
01:46:49,000 --> 01:46:52,000
它有一个非常好的封装在那边

3229
01:46:52,000 --> 01:46:52,000
对

3230
01:46:52,000 --> 01:46:53,000
所以我们看看还有什么

3231
01:46:53,000 --> 01:46:54,000
就是一个

3232
01:46:54,000 --> 01:46:56,000
一大特性就是 isolation

3233
01:46:56,000 --> 01:46:57,000
对

3234
01:46:57,000 --> 01:46:58,000
就是隔离

3235
01:46:58,000 --> 01:46:59,000
这是一个很重要的一个东西

3236
01:46:59,000 --> 01:47:00,000
然后第二个就是标准化

3237
01:47:00,000 --> 01:47:01,000
叫 standardization

3238
01:47:01,000 --> 01:47:03,000
因为所有的集装箱都是

3239
01:47:03,000 --> 01:47:04,000
也不叫所有的集装箱

3240
01:47:04,000 --> 01:47:06,000
就它有规定的尺寸

3241
01:47:06,000 --> 01:47:07,000
就只有那么几种尺寸

3242
01:47:07,000 --> 01:47:08,000
对

3243
01:47:08,000 --> 01:47:09,000
我们计算的话

3244
01:47:09,000 --> 01:47:12,000
应该是短集装箱 20 英寸

3245
01:47:12,000 --> 01:47:13,000
sorry

3246
01:47:13,000 --> 01:47:14,000
20 英尺

3247
01:47:14,000 --> 01:47:15,000
然后 20 英尺的

3248
01:47:15,000 --> 01:47:16,000
柜子是短柜

3249
01:47:16,000 --> 01:47:18,000
然后 40 英尺的是长柜

3250
01:47:18,000 --> 01:47:20,000
它只有长短的区别

3251
01:47:20,000 --> 01:47:22,000
然后它的截面都是一样大

3252
01:47:22,000 --> 01:47:24,000
我没记错的话

3253
01:47:24,000 --> 01:47:25,000
是宽度

3254
01:47:25,000 --> 01:47:27,000
因为我要说到一本书

3255
01:47:27,000 --> 01:47:29,000
宽度是固定的

3256
01:47:29,000 --> 01:47:31,000
但是高度其实还是有几种标准的

3257
01:47:31,000 --> 01:47:34,000
但只不过目前所见的

3258
01:47:34,000 --> 01:47:35,000
最常见的一种就是

3259
01:47:35,000 --> 01:47:38,000
应该是高度和宽度

3260
01:47:38,000 --> 01:47:40,000
几乎一致的一个版本

3261
01:47:40,000 --> 01:47:41,000
其他的就比较小

3262
01:47:41,000 --> 01:47:43,000
就方盒子

3263
01:47:43,000 --> 01:47:43,000
对

3264
01:47:43,000 --> 01:47:45,000
长条盒

3265
01:47:45,000 --> 01:47:45,000
长条盒

3266
01:47:45,000 --> 01:47:45,000
长条盒

3267
01:47:45,000 --> 01:47:46,000
对

3268
01:47:46,000 --> 01:47:46,000
长条的盒子

3269
01:47:46,000 --> 01:47:47,000
然后你在

3270
01:47:47,000 --> 01:47:50,000
现在的码头和 60 年代之前的码头

3271
01:47:50,000 --> 01:47:52,000
是完全不一样的

3272
01:47:52,000 --> 01:47:53,000
就现在的码头去

3273
01:47:53,000 --> 01:47:55,000
码头区就是一大堆

3274
01:47:55,000 --> 01:47:59,000
但是 60 年代以前的码头

3275
01:47:59,000 --> 01:47:59,000
全是散货

3276
01:47:59,000 --> 01:48:00,000
对地上

3277
01:48:00,000 --> 01:48:06,000
全都是从轮船通向岸边的桥

3278
01:48:06,000 --> 01:48:07,000
然后有吊车

3279
01:48:07,000 --> 01:48:09,000
然后更重要的是

3280
01:48:09,000 --> 01:48:10,000
那个时候的码头上

3281
01:48:10,000 --> 01:48:12,000
有非常非常非常多的码头工人

3282
01:48:12,000 --> 01:48:13,000
叫

3283
01:48:13,000 --> 01:48:14,000
他们就是

3284
01:48:14,000 --> 01:48:15,000
码头工人

3285
01:48:15,000 --> 01:48:16,000
码头工人叫 docker

3286
01:48:16,000 --> 01:48:17,000
对 docker

3287
01:48:17,000 --> 01:48:19,000
然后这些 docker 他们的

3288
01:48:19,000 --> 01:48:21,000
最大的

3289
01:48:21,000 --> 01:48:23,000
任务之一就是把

3290
01:48:23,000 --> 01:48:25,000
散货从船上搬到岸上

3291
01:48:25,000 --> 01:48:27,000
或者从岸上搬到船上

3292
01:48:27,000 --> 01:48:28,000
然后这群

3293
01:48:28,000 --> 01:48:29,000
码头工人是

3294
01:48:29,000 --> 01:48:31,000
因为他们是纯粹卖苦力的这么一群人

3295
01:48:31,000 --> 01:48:32,000
就薪水又低

3296
01:48:32,000 --> 01:48:33,000
然后

3297
01:48:33,000 --> 01:48:34,000
然后

3298
01:48:34,000 --> 01:48:35,000
经常偷货

3299
01:48:35,000 --> 01:48:35,000
非常差

3300
01:48:35,000 --> 01:48:35,000
对

3301
01:48:35,000 --> 01:48:36,000
然后

3302
01:48:36,000 --> 01:48:36,000
然后

3303
01:48:36,000 --> 01:48:37,000
然后又没有什么教养

3304
01:48:37,000 --> 01:48:38,000
就经常偷货

3305
01:48:38,000 --> 01:48:39,000
然后

3306
01:48:39,000 --> 01:48:40,000
打架

3307
01:48:40,000 --> 01:48:40,000
更恐怖

3308
01:48:40,000 --> 01:48:40,000
对

3309
01:48:40,000 --> 01:48:42,000
他们还会结成帮派之类的

3310
01:48:42,000 --> 01:48:44,000
因为天津以前就是一个

3311
01:48:44,000 --> 01:48:45,000
码头吧

3312
01:48:45,000 --> 01:48:47,000
天津有一群非常有名的

3313
01:48:47,000 --> 01:48:48,000
有一个

3314
01:48:48,000 --> 01:48:50,000
应该不是帮派

3315
01:48:50,000 --> 01:48:51,000
是一类人

3316
01:48:51,000 --> 01:48:52,000
就叫混混

3317
01:48:52,000 --> 01:48:53,000
混混他们的

3318
01:48:53,000 --> 01:48:55,000
发家地之一就是码头

3319
01:48:55,000 --> 01:48:56,000
码头工人

3320
01:48:56,000 --> 01:48:57,000
对

3321
01:48:57,000 --> 01:48:59,000
但是

3322
01:48:59,000 --> 01:49:01,000
所以在这个

3323
01:49:01,000 --> 01:49:02,000
直装箱出现之后

3324
01:49:02,000 --> 01:49:04,000
这群码头工人就已经消失了

3325
01:49:04,000 --> 01:49:05,000
就

3326
01:49:05,000 --> 01:49:07,000
他们不被需要了

3327
01:49:07,000 --> 01:49:08,000
十几年的时间吧

3328
01:49:08,000 --> 01:49:09,000
就完全淘汰了

3329
01:49:09,000 --> 01:49:10,000
改变了

3330
01:49:10,000 --> 01:49:10,000
对

3331
01:49:10,000 --> 01:49:12,000
现在已经很难找到一个人说

3332
01:49:12,000 --> 01:49:13,000
我是在码头扛麻包

3333
01:49:13,000 --> 01:49:14,000
是

3334
01:49:14,000 --> 01:49:14,000
不

3335
01:49:14,000 --> 01:49:14,000
这

3336
01:49:14,000 --> 01:49:14,000
这

3337
01:49:14,000 --> 01:49:15,000
genres

3338
01:49:15,000 --> 01:49:16,000
也太小了

3339
01:49:16,000 --> 01:49:17,000
他们已经降级了

3340
01:49:17,000 --> 01:49:17,000
一定不可能已经行

3341
01:49:17,000 --> 01:49:19,000
可能只有在一些非常遥远的

3342
01:49:19,000 --> 01:49:19,000
小港口

3343
01:49:19,000 --> 01:49:21,000
非常非常小的

3344
01:49:21,000 --> 01:49:21,000
小国家

3345
01:49:21,000 --> 01:49:22,000
或者是非常

3346
01:49:22,000 --> 01:49:24,000
甚至我们这种第三世纪国家

3347
01:49:24,000 --> 01:49:25,000
中国这种第三世纪国家

3348
01:49:25,000 --> 01:49:27,000
都已经可能不再存在了

3349
01:49:27,000 --> 01:49:28,000
对

3350
01:49:28,000 --> 01:49:30,000
而那个时候

3351
01:49:30,000 --> 01:49:32,000
商船水手们可以在港口

3352
01:49:32,000 --> 01:49:34,000
上岸玩好几天

3353
01:49:34,000 --> 01:49:35,000
因为装货实在是太满

3354
01:49:35,000 --> 01:49:35,000
对

3355
01:49:35,000 --> 01:49:37,000
现在基本上是

3356
01:49:37,000 --> 01:49:39,000
你只能你到一个港口

3357
01:49:39,000 --> 01:49:40,000
抽两根烟

3358
01:49:40,000 --> 01:49:41,000
又得上车走

3359
01:49:41,000 --> 01:49:42,000
换个补给就要走了

3360
01:49:42,000 --> 01:49:42,000
就卸完了

3361
01:49:42,000 --> 01:49:43,000
对

3362
01:49:43,000 --> 01:49:43,000
没错

3363
01:49:43,000 --> 01:49:44,000
那这个

3364
01:49:44,000 --> 01:49:46,000
来说回集装箱这个东西本身

3365
01:49:46,000 --> 01:49:48,000
就我们看了它的一些属性什么样是好的

3366
01:49:48,000 --> 01:49:51,000
刚才讲了一个是就是隔离 isolation

3367
01:49:51,000 --> 01:49:52,000
标准化

3368
01:49:52,000 --> 01:49:53,000
它的尺寸是标准化的

3369
01:49:53,000 --> 01:49:54,000
这样的话标准化有什么

3370
01:49:54,000 --> 01:49:55,000
隔离有什么好处

3371
01:49:55,000 --> 01:49:57,000
就是隔离的话可以保证

3372
01:49:57,000 --> 01:49:58,000
集装箱之间互不影响嘛

3373
01:49:58,000 --> 01:50:00,000
这样我可以把不同

3374
01:50:00,000 --> 01:50:05,000
不同内含不同物品的集装箱混合摆放

3375
01:50:05,000 --> 01:50:07,000
不是之间不会影响

3376
01:50:07,000 --> 01:50:09,000
然后标准化有一个好处

3377
01:50:09,000 --> 01:50:12,000
就是说除了我们可以能比较简单的摆

3378
01:50:12,000 --> 01:50:13,000
因为大家尺寸都一样

3379
01:50:13,000 --> 01:50:15,000
直接是摆可能能摆多少摆多少

3380
01:50:15,000 --> 01:50:19,000
另外还可以共用搬运的机械

3381
01:50:19,000 --> 01:50:21,000
比如刚才讲我们讲装散货的话

3382
01:50:21,000 --> 01:50:22,000
你运煤的散货

3383
01:50:22,000 --> 01:50:23,000
你不能用来运大米

3384
01:50:23,000 --> 01:50:26,000
但是如果你用集装箱化的话

3385
01:50:26,000 --> 01:50:28,000
你运煤的机器也可以运来运大米

3386
01:50:28,000 --> 01:50:30,000
因为它都是处理集装箱而已

3387
01:50:30,000 --> 01:50:30,000
对吧

3388
01:50:30,000 --> 01:50:31,000
叫什么荷

3389
01:50:31,000 --> 01:50:33,000
叫什么龙门钓

3390
01:50:33,000 --> 01:50:33,000
对不对

3391
01:50:33,000 --> 01:50:34,000
叫龙门钓

3392
01:50:34,000 --> 01:50:35,000
叫 cray

3393
01:50:35,000 --> 01:50:36,000
cray 是荷

3394
01:50:36,000 --> 01:50:39,000
龙门钓叫龙门钓

3395
01:50:39,000 --> 01:50:41,000
就那种码头机械

3396
01:50:41,000 --> 01:50:42,000
cray 和龙门钓

3397
01:50:42,000 --> 01:50:43,000
可能还

3398
01:50:43,000 --> 01:50:44,000
不是完全一样

3399
01:50:44,000 --> 01:50:45,000
cray 还是要

3400
01:50:45,000 --> 01:50:47,000
cray 是一个饭的东西

3401
01:50:47,000 --> 01:50:48,000
对吧

3402
01:50:48,000 --> 01:50:50,000
cray 还是包括那种

3403
01:50:50,000 --> 01:50:50,000
包括那种

3404
01:50:50,000 --> 01:50:52,000
有一个摇臂出去的东西

3405
01:50:52,000 --> 01:50:54,000
但是龙门钓是专门指

3406
01:50:54,000 --> 01:50:56,000
像龙门一样的东西

3407
01:50:56,000 --> 01:50:57,000
anyway

3408
01:50:57,000 --> 01:51:00,000
所以这个就是

3409
01:51:00,000 --> 01:51:02,000
集装箱之后就改变了

3410
01:51:02,000 --> 01:51:03,000
人类的运输

3411
01:51:03,000 --> 01:51:04,000
然后才使得

3412
01:51:04,000 --> 01:51:06,000
中国的产品

3413
01:51:06,000 --> 01:51:09,000
能够很快速的运到美国去销售

3414
01:51:09,000 --> 01:51:10,000
这样才有了全球化

3415
01:51:10,000 --> 01:51:12,000
这就是为什么

3416
01:51:12,000 --> 01:51:13,000
我们说

3417
01:51:13,000 --> 01:51:16,000
集装箱是对中国非常重要的一个东西

3418
01:51:16,000 --> 01:51:17,000
因为如果没有集装箱的话

3419
01:51:17,000 --> 01:51:19,000
可能现在不可能有什么

3420
01:51:19,000 --> 01:51:20,000
我们还在北朝的时代

3421
01:51:20,000 --> 01:51:24,000
我们还不是什么中国世界工厂

3422
01:51:24,000 --> 01:51:25,000
这是根本不可能的

3423
01:51:25,000 --> 01:51:26,000
那个时候

3424
01:51:26,000 --> 01:51:28,000
如果没有集装箱的话

3425
01:51:28,000 --> 01:51:28,000
可能

3426
01:51:28,000 --> 01:51:30,000
别说从中国运到美国了

3427
01:51:30,000 --> 01:51:33,000
可能从江苏运到山东

3428
01:51:33,000 --> 01:51:36,000
都是非常非常不划算的一件事情

3429
01:51:36,000 --> 01:51:39,000
说了这么久

3430
01:51:39,000 --> 01:51:39,000
集装箱

3431
01:51:39,000 --> 01:51:41,000
其实我们还是要说一个

3432
01:51:41,000 --> 01:51:42,000
就是在软件世界里面

3433
01:51:42,000 --> 01:51:43,000
集装箱是一个很重要的东西

3434
01:51:43,000 --> 01:51:44,000
是一个什么样的概念

3435
01:51:44,000 --> 01:51:45,000
稍微等一下

3436
01:51:45,000 --> 01:51:47,000
我最后提一件事情

3437
01:51:47,000 --> 01:51:50,000
就是如果刚才我们说的这段话

3438
01:51:50,000 --> 01:51:52,000
对你没有产生太多的困扰

3439
01:51:52,000 --> 01:51:53,000
反正你觉得挺有意思的话

3440
01:51:53,000 --> 01:51:54,000
你可以去看一本书

3441
01:51:54,000 --> 01:51:56,000
叫做集装箱改变世界

3442
01:51:56,000 --> 01:51:59,000
你听标题就这么

3443
01:51:59,000 --> 01:52:00,000
没错

3444
01:52:00,000 --> 01:52:01,000
它是应该也是

3445
01:52:01,000 --> 01:52:03,000
是一注吧

3446
01:52:03,000 --> 01:52:04,000
但是我读的是中文版

3447
01:52:04,000 --> 01:52:05,000
我相信这本书还是能买得到的

3448
01:52:05,000 --> 01:52:07,000
然后我回头会把这本书的

3449
01:52:07,000 --> 01:52:10,000
链接加到我们的 show note 里面

3450
01:52:10,000 --> 01:52:10,000
OK

3451
01:52:10,000 --> 01:52:11,000
OK

3452
01:52:11,000 --> 01:52:12,000
我们现在来说

3453
01:52:12,000 --> 01:52:13,000
这个软件世界里面

3454
01:52:13,000 --> 01:52:14,000
集装箱

3455
01:52:14,000 --> 01:52:18,000
传统上我们部署的一个软件的时候

3456
01:52:18,000 --> 01:52:20,000
其实你那个服务器上面

3457
01:52:20,000 --> 01:52:21,000
是一个开放的东西

3458
01:52:21,000 --> 01:52:22,000
它是一个状态机

3459
01:52:22,000 --> 01:52:24,000
你把那个东西上进去

3460
01:52:24,000 --> 01:52:27,000
这个过程就有点像装散货

3461
01:52:27,000 --> 01:52:30,000
就是它们互相之间是有点影响的

3462
01:52:30,000 --> 01:52:32,000
而且它们怎么说呢

3463
01:52:32,000 --> 01:52:32,000
比如说你在服务器上

3464
01:52:32,000 --> 01:52:34,000
要装一个数据库

3465
01:52:34,000 --> 01:52:35,000
然后再装一个什么

3466
01:52:35,000 --> 01:52:36,000
你自己的软件

3467
01:52:36,000 --> 01:52:37,000
那搞不好

3468
01:52:37,000 --> 01:52:39,000
指不定数据库依赖的什么东西

3469
01:52:39,000 --> 01:52:41,000
和你的软件就冲突了

3470
01:52:41,000 --> 01:52:42,000
你还得想办法去解决它

3471
01:52:42,000 --> 01:52:43,000
对吧

3472
01:52:43,000 --> 01:52:45,000
它并不是一个完全隔离的一个东西

3473
01:52:45,000 --> 01:52:47,000
包括不同的应用之间

3474
01:52:47,000 --> 01:52:48,000
可能互相会对

3475
01:52:48,000 --> 01:52:50,000
可能会共享某一个文件

3476
01:52:50,000 --> 01:52:51,000
或者说这个数据库觉得

3477
01:52:51,000 --> 01:52:53,000
这个程序会觉得

3478
01:52:53,000 --> 01:52:54,000
我要改那个文件

3479
01:52:54,000 --> 01:52:55,000
那个程序会觉得

3480
01:52:55,000 --> 01:52:57,000
你怎么改了我那个文件

3481
01:52:57,000 --> 01:52:57,000
对吧

3482
01:52:57,000 --> 01:52:59,000
这个东西是可能会出现的一个问题

3483
01:52:59,000 --> 01:53:02,000
然后他们对资源的

3484
01:53:02,000 --> 01:53:06,000
他们的安装方式也是一个非标准化的

3485
01:53:06,000 --> 01:53:08,000
就是说你安装数据库的方法

3486
01:53:08,000 --> 01:53:09,000
和你安装一个什么

3487
01:53:09,000 --> 01:53:12,000
TOMCAT 的方法可能并不一样

3488
01:53:12,000 --> 01:53:14,000
对这回到我们上一期讲的内容

3489
01:53:14,000 --> 01:53:19,000
就是可能两个软件所需要的包管理系统

3490
01:53:19,000 --> 01:53:20,000
是完全不一样的

3491
01:53:20,000 --> 01:53:22,000
就会出现这种不一致的一个状况

3492
01:53:22,000 --> 01:53:25,000
所以如果我们能够把刚才讲的

3493
01:53:25,000 --> 01:53:26,000
集装箱那几个概念拿起来

3494
01:53:26,000 --> 01:53:30,000
拿过来用到这个软件部署里面

3495
01:53:30,000 --> 01:53:32,000
是不是就会情况好很多呢

3496
01:53:32,000 --> 01:53:35,000
我们能不能说装个软件就好像

3497
01:53:35,000 --> 01:53:37,000
怎么讲呢

3498
01:53:37,000 --> 01:53:40,000
就你直接就把它那个文件传上去就好了

3499
01:53:40,000 --> 01:53:41,000
或者执行同一个命令就好了

3500
01:53:41,000 --> 01:53:42,000
它互相之间绝对不会

3501
01:53:42,000 --> 01:53:47,000
对就之前的思潮可能是说这一传货

3502
01:53:47,000 --> 01:53:51,000
就是如果说以台积存机是一艘船的话

3503
01:53:51,000 --> 01:53:54,000
那么可能说这艘船上装一群猪

3504
01:53:54,000 --> 01:53:55,000
然后装一坨米

3505
01:53:55,000 --> 01:53:59,000
然后之前的思潮可能是把仓室里面的这一块

3506
01:53:59,000 --> 01:54:00,000
画给猪

3507
01:54:00,000 --> 01:54:01,000
然后另一部分画给米

3508
01:54:01,000 --> 01:54:03,000
但是此时就有一个问题

3509
01:54:03,000 --> 01:54:05,000
就是他们两个有可能是互相影响的

3510
01:54:05,000 --> 01:54:07,000
就万一猪圈翻了

3511
01:54:07,000 --> 01:54:09,000
然后猪跑出来把米拱了

3512
01:54:09,000 --> 01:54:11,000
那你说你是救猪呢

3513
01:54:11,000 --> 01:54:12,000
还是救米

3514
01:54:12,000 --> 01:54:15,000
但是 continuation 就有一点

3515
01:54:15,000 --> 01:54:18,000
就有一点的

3516
01:54:18,000 --> 01:54:21,000
其实这类比不是特别的合适

3517
01:54:21,000 --> 01:54:22,000
因为真正的 continuation

3518
01:54:22,000 --> 01:54:25,000
其实是把猪和米分别装了两条船

3519
01:54:25,000 --> 01:54:28,000
不对是装到两个盒子里面

3520
01:54:28,000 --> 01:54:33,000
但这两个盒子在 continuation 的世界

3521
01:54:33,000 --> 01:54:34,000
就是如果是 proper

3522
01:54:34,000 --> 01:54:36,000
像 docker 这样的 continuation 的话

3523
01:54:36,000 --> 01:54:39,000
他们两个其实是跑在两个不同的讯息机上

3524
01:54:39,000 --> 01:54:41,000
他们是他们时间不存在

3525
01:54:41,000 --> 01:54:42,000
不是不是

3526
01:54:42,000 --> 01:54:44,000
他们是在同一个虚拟同一个机器里面

3527
01:54:44,000 --> 01:54:47,000
但是只是在不同的子子区域里面

3528
01:54:47,000 --> 01:54:48,000
啊 ok

3529
01:54:48,000 --> 01:54:49,000
对

3530
01:54:49,000 --> 01:54:50,000
好吧

3531
01:54:50,000 --> 01:54:51,000
嗯

3532
01:54:51,000 --> 01:54:52,000
就是说

3533
01:54:52,000 --> 01:54:53,000
呃

3534
01:54:53,000 --> 01:54:56,000
然后我们还想如果能够所有软件都不要去说

3535
01:54:56,000 --> 01:54:59,000
我你那个第一那个数据库要有什么 apt 来装

3536
01:54:59,000 --> 01:55:02,000
然后你自己的应用程序要用一个自己的方法来装

3537
01:55:02,000 --> 01:55:03,000
不要搞这些麻烦的方法

3538
01:55:03,000 --> 01:55:05,000
不要搞三十二种不同的安装方式

3539
01:55:05,000 --> 01:55:06,000
对吧

3540
01:55:06,000 --> 01:55:10,000
那我们所有的方式都用同一种方式安装过去

3541
01:55:10,000 --> 01:55:11,000
这样不就更好吗

3542
01:55:11,000 --> 01:55:12,000
对吧

3543
01:55:12,000 --> 01:55:12,000
对

3544
01:55:12,000 --> 01:55:12,000
对

3545
01:55:12,000 --> 01:55:17,000
最先实践这种想法的其实也也有叫做虚拟机这个概念

3546
01:55:17,000 --> 01:55:18,000
对吧

3547
01:55:18,000 --> 01:55:18,000
对

3548
01:55:18,000 --> 01:55:20,000
虚拟机能够虚拟机里面

3549
01:55:20,000 --> 01:55:23,000
然后有一个叫做 virtual appliance 这么一个概念啊

3550
01:55:23,000 --> 01:55:27,000
我不知道你可能除了大众 virtual box 应该可能看到有这么一个 import appliance

3551
01:55:27,000 --> 01:55:29,000
这么一个东西

3552
01:55:29,000 --> 01:55:30,000
什么意思呢

3553
01:55:30,000 --> 01:55:34,000
就是说我们部署软件的单位不再是某一个软件

3554
01:55:34,000 --> 01:55:35,000
某一个应用

3555
01:55:35,000 --> 01:55:37,000
某一个应用呃为单位了

3556
01:55:37,000 --> 01:55:40,000
而是说我们以整个把这个应用所需要的所有环境

3557
01:55:40,000 --> 01:55:42,000
包括它的操作系统啊

3558
01:55:42,000 --> 01:55:43,000
包括他所依赖的文件啊

3559
01:55:43,000 --> 01:55:45,000
包括他的一个数据啊

3560
01:55:45,000 --> 01:55:46,000
还有他的什么啊

3561
01:55:46,000 --> 01:55:49,000
几个就各种这样

3562
01:55:49,000 --> 01:55:50,000
因为他一下需要依赖的环境嘛

3563
01:55:50,000 --> 01:55:53,000
打包成一个虚拟机

3564
01:55:53,000 --> 01:55:57,000
然后再部署到某一个实体的这个物理的服务器上去运行

3565
01:55:57,000 --> 01:55:58,000
这个在很长的时间里面

3566
01:55:58,000 --> 01:55:59,000
大家啊

3567
01:55:59,000 --> 01:56:00,000
他都是这么的

3568
01:56:00,000 --> 01:56:03,000
就是什么像像那个亚马逊的那个一 C 2 嘛

3569
01:56:03,000 --> 01:56:04,000
就这方式来做的

3570
01:56:04,000 --> 01:56:05,000
就说呃

3571
01:56:05,000 --> 01:56:08,000
我把我的应用都打包成一个完整的虚拟机

3572
01:56:08,000 --> 01:56:10,000
然后我所我需要用用的时候就开一个虚拟机嘛

3573
01:56:10,000 --> 01:56:11,000
然后我所我需要用用的时候就开一个虚拟机

3574
01:56:11,000 --> 01:56:11,000
然后我所我需要用用的时候就开一个虚拟机

3575
01:56:11,000 --> 01:56:12,000
然后我所我需要用用的时候就开一个虚拟机

3576
01:56:12,000 --> 01:56:13,000
然后我所我需要用用的时候就开一个虚拟机

3577
01:56:13,000 --> 01:56:15,000
然后我也不去改虚拟机里面的内容

3578
01:56:15,000 --> 01:56:17,000
就是让他运行就好了

3579
01:56:17,000 --> 01:56:19,000
然后如果不需要我就把这个虚拟机关上

3580
01:56:20,000 --> 01:56:23,000
对吧对这就实现了我们刚才讲的那个什么标准化

3581
01:56:23,000 --> 01:56:25,000
因为所有的都是不管你里面装什么

3582
01:56:25,000 --> 01:56:28,000
对就是你这开发者只要负责建好这个虚拟机

3583
01:56:28,000 --> 01:56:31,000
我因为的时候我就是只负责开关这个虚拟机就好了

3584
01:56:31,000 --> 01:56:32,000
然后如果某个虚拟机坏了

3585
01:56:32,000 --> 01:56:34,000
我就把它呃关掉

3586
01:56:34,000 --> 01:56:36,000
然后在另外开个新的

3587
01:56:36,000 --> 01:56:38,000
就实现了这个标准化和这个隔离

3588
01:56:38,000 --> 01:56:40,000
这确实是好的啊

3589
01:56:40,000 --> 01:56:42,000
也在相当长时间时间内

3590
01:56:42,000 --> 01:56:45,000
我们都知道很多这个厂商都甚至到现在都是主流吧

3591
01:56:45,000 --> 01:56:47,000
可以呃对就是到目前为止

3592
01:56:47,000 --> 01:56:50,000
这还是一个起码有半壁江山这么一个状态

3593
01:56:50,000 --> 01:56:52,000
但是虚拟机有一个什么问题呢

3594
01:56:52,000 --> 01:56:55,000
就是他的那个资源损耗是比较高的

3595
01:56:55,000 --> 01:56:56,000
因为你想象一个虚拟机的话

3596
01:56:56,000 --> 01:56:58,000
你其实要首先你要虚拟一个操作系统

3597
01:56:58,000 --> 01:56:59,000
对吧

3598
01:56:59,000 --> 01:57:01,000
对那我们得看虚拟一个操作系统

3599
01:57:01,000 --> 01:57:04,000
你要至少哪怕你最精简的一个 Linux 的

3600
01:57:04,000 --> 01:57:05,000
也不叫最精简

3601
01:57:05,000 --> 01:57:07,000
就是一个正常的一个 Linux 的发行版

3602
01:57:07,000 --> 01:57:10,000
你运行起来可能都需要占掉个

3603
01:57:10,000 --> 01:57:10,000
可能几百万的

3604
01:57:10,000 --> 01:57:12,000
几百两三百兆的内存

3605
01:57:12,000 --> 01:57:14,000
就是这个内存的 overhead

3606
01:57:14,000 --> 01:57:16,000
可以再小一点的对

3607
01:57:16,000 --> 01:57:19,000
至少是在一两百这个两三百这个范围内吧

3608
01:57:19,000 --> 01:57:21,000
然后一码磁盘空间

3609
01:57:21,000 --> 01:57:23,000
你可能每个虚拟机至少装完那个系统

3610
01:57:23,000 --> 01:57:25,000
都是至少是一两个机了

3611
01:57:25,000 --> 01:57:27,000
然后再装你的应用又是一堆空间在那里

3612
01:57:27,000 --> 01:57:30,000
对然后这个虚拟机运行的时候

3613
01:57:30,000 --> 01:57:34,000
因为他是在之前没有这个硬件虚拟的

3614
01:57:34,000 --> 01:57:37,000
就是没有那个这个这个硬件支持的情况下

3615
01:57:37,000 --> 01:57:38,000
虚拟机的运行效率还会打折

3616
01:57:38,000 --> 01:57:39,000
对吧

3617
01:57:39,000 --> 01:57:40,000
因为你虚拟机

3618
01:57:40,000 --> 01:57:43,000
代码是在一个虚拟的环境里面运行的

3619
01:57:43,000 --> 01:57:46,000
还要再转化成那个真实的

3620
01:57:46,000 --> 01:57:47,000
在硬件上运行的代码

3621
01:57:47,000 --> 01:57:48,000
还要经过一层转化

3622
01:57:48,000 --> 01:57:50,000
但后来有这个芯片

3623
01:57:50,000 --> 01:57:52,000
那个 CPU 级别的虚拟化支持

3624
01:57:52,000 --> 01:57:54,000
这个情况会好很多

3625
01:57:54,000 --> 01:57:56,000
但是并不是完全是一个无碍的

3626
01:57:56,000 --> 01:57:58,000
特别是在面对 IO 啊

3627
01:57:58,000 --> 01:58:00,000
内存读写这一块的时候

3628
01:58:00,000 --> 01:58:01,000
还是有一个比较大的瓶颈

3629
01:58:01,000 --> 01:58:02,000
就是对

3630
01:58:02,000 --> 01:58:05,000
他只是解决了计算计算能力的方面的问题

3631
01:58:05,000 --> 01:58:07,000
但没有解决 IO 方面的

3632
01:58:07,000 --> 01:58:08,000
对损耗还是很很大的

3633
01:58:08,000 --> 01:58:10,000
就是应该目的

3634
01:58:10,000 --> 01:58:10,000
有一个比较

3635
01:58:10,000 --> 01:58:13,000
怎么说一个默认的数字吧

3636
01:58:13,000 --> 01:58:16,000
就是可能是 1%到 20%这么一个损耗

3637
01:58:16,000 --> 01:58:17,000
就是性能上的损耗

3638
01:58:17,000 --> 01:58:19,000
就啊

3639
01:58:19,000 --> 01:58:21,000
然后这个虚拟机的在启动的时候也比较慢

3640
01:58:21,000 --> 01:58:22,000
比如说你开一个虚拟机

3641
01:58:22,000 --> 01:58:24,000
你只要等它没操作系统

3642
01:58:24,000 --> 01:58:25,000
完全 boot 一遍吧

3643
01:58:25,000 --> 01:58:28,000
至少你最快也得个二三十秒吧

3644
01:58:28,000 --> 01:58:31,000
我们看到一般的一个发行版

3645
01:58:31,000 --> 01:58:31,000
对

3646
01:58:31,000 --> 01:58:32,000
嗯

3647
01:58:32,000 --> 01:58:34,000
所以就有人在想说

3648
01:58:34,000 --> 01:58:37,000
那我们能不能够再保留虚拟机那些好处

3649
01:58:37,000 --> 01:58:38,000
比如说隔离

3650
01:58:38,000 --> 01:58:39,000
然后标准化

3651
01:58:39,000 --> 01:58:40,000
这些好处

3652
01:58:40,000 --> 01:58:40,000
同时解决了

3653
01:58:40,000 --> 01:58:41,000
他的问题呢

3654
01:58:41,000 --> 01:58:44,000
就是说他的就是能够让他更加快速的启动

3655
01:58:44,000 --> 01:58:45,000
然后啊

3656
01:58:45,000 --> 01:58:47,000
就不再是说几十秒

3657
01:58:47,000 --> 01:58:50,000
我们能做到说几十毫秒或者几百毫秒的级别的启动

3658
01:58:50,000 --> 01:58:51,000
或者是杀掉他

3659
01:58:51,000 --> 01:58:56,000
让我们同时能够不不去浪费那么多的资源

3660
01:58:56,000 --> 01:58:57,000
在虚拟机本身上面

3661
01:58:57,000 --> 01:59:00,000
而是把资源集中到这个应用上面去跑呢

3662
01:59:00,000 --> 01:59:02,000
于是就有这个 container

3663
01:59:02,000 --> 01:59:04,000
这个概念就是就横空出世了

3664
01:59:05,000 --> 01:59:06,000
终于说了

3665
01:59:07,000 --> 01:59:08,000
终于说了 container

3666
01:59:08,000 --> 01:59:09,000
就是集装箱

3667
01:59:09,000 --> 01:59:10,000
这个概念

3668
01:59:10,000 --> 01:59:11,000
对

3669
01:59:11,000 --> 01:59:15,000
然后这个这个趋势也被一些人称为所谓

3670
01:59:15,000 --> 01:59:17,000
Docker Apocalypse

3671
01:59:17,000 --> 01:59:19,000
就是

3672
01:59:19,000 --> 01:59:23,000
他是一种灾难性的

3673
01:59:23,000 --> 01:59:26,000
就在在某些传统主义者的人看来

3674
01:59:26,000 --> 01:59:28,000
这是某种灾难性的变革

3675
01:59:28,000 --> 01:59:30,000
就是程序和

3676
01:59:30,000 --> 01:59:37,000
机和跑他和他所运行的环境之间的隔离变得越来越

3677
01:59:37,000 --> 01:59:39,000
越来越

3678
01:59:39,000 --> 01:59:40,000
就是有些人说

3679
01:59:40,000 --> 01:59:45,000
其实不喜欢这样多出来的这一层的隔离和抽象

3680
01:59:45,000 --> 01:59:48,000
但是目前看来

3681
01:59:48,000 --> 01:59:49,000
这个趋势的确是

3682
01:59:49,000 --> 01:59:54,000
带来优势要远远大于他所损失的一点

3683
01:59:54,000 --> 02:00:00,000
就是你们不能再和一个比较 native 的环境所互通

3684
02:00:00,000 --> 02:00:01,000
而带来的便利的

3685
02:00:01,000 --> 02:00:02,000
对

3686
02:00:02,000 --> 02:00:05,000
那接着说这个 Docker

3687
02:00:05,000 --> 02:00:09,000
最开始的时候是 Linux 有一个内核的一些功能

3688
02:00:09,000 --> 02:00:10,000
叫做 Cgroup

3689
02:00:10,000 --> 02:00:11,000
对

3690
02:00:11,000 --> 02:00:12,000
Control Groups 吧

3691
02:00:12,000 --> 02:00:13,000
Control Groups 没错

3692
02:00:13,000 --> 02:00:15,000
对他能做些什么事呢

3693
02:00:15,000 --> 02:00:23,000
他可以让你在在一个 Linux 的系统上面去划分出一群这个进程

3694
02:00:23,000 --> 02:00:27,000
然后让他们共让他们让他们不叫不叫划分出一群

3695
02:00:27,000 --> 02:00:30,000
应该是做一个这么一个容器

3696
02:00:30,000 --> 02:00:31,000
就刚才讲的 container 吧

3697
02:00:31,000 --> 02:00:33,000
然后他你可以先的这个容器

3698
02:00:33,000 --> 02:00:35,000
他能够使用的这个资源的比率

3699
02:00:35,000 --> 02:00:39,000
你可以先就是你可以让容器之间互相隔离

3700
02:00:39,000 --> 02:00:40,000
Cgroups 好像一看起来是一个很好的方法

3701
02:00:40,000 --> 02:00:43,000
一开始就叫什么 process container 之类的一个名字

3702
02:00:43,000 --> 02:00:46,000
但后来才改成 control groups

3703
02:00:46,000 --> 02:00:49,000
对因为有一个有一个什么命名上的冲突

3704
02:00:49,000 --> 02:00:49,000
后来忘了

3705
02:00:52,000 --> 02:00:59,000
OK 有可能我觉得有可能是那个时候觉得 container 这个词指的太就指位太不明了

3706
02:00:59,000 --> 02:01:00,000
太太不明确了

3707
02:01:00,000 --> 02:01:02,000
所以才改成 control group

3708
02:01:02,000 --> 02:01:06,000
对在 Linux 世界里面好像 group 这个这个这个概念更容易理解一些

3709
02:01:06,000 --> 02:01:08,000
哈哈哈

3710
02:01:08,000 --> 02:01:09,000
anyway

3711
02:01:09,000 --> 02:01:10,000
就之前就说有有这么一个内核的功能呢

3712
02:01:10,000 --> 02:01:12,000
一个内核的一个支持吧

3713
02:01:12,000 --> 02:01:16,000
那你可以划分出这个资源的这个限制互相之间

3714
02:01:16,000 --> 02:01:19,000
他们是不可以比如说不可以访问的

3715
02:01:19,000 --> 02:01:23,000
可以限定他只能使用多少多少比例的这个 CPU 啊

3716
02:01:23,000 --> 02:01:25,000
多少笔记的内存这样啊

3717
02:01:25,000 --> 02:01:31,000
这样就可以在很大程度上实现说我们运行的时候互相不干扰

3718
02:01:32,000 --> 02:01:33,000
对甚至都不知道别人的存在

3719
02:01:33,000 --> 02:01:35,000
对甚至不知道对方的存在

3720
02:01:35,000 --> 02:01:36,000
就是对于我来说

3721
02:01:36,000 --> 02:01:40,000
我以为我我这个这个程序认为我是这个

3722
02:01:40,000 --> 02:01:42,000
在这台机上运行的唯一的程序

3723
02:01:42,000 --> 02:01:43,000
但其实不是

3724
02:01:43,000 --> 02:01:45,000
但你也用的不是虚拟机的方法

3725
02:01:45,000 --> 02:01:47,000
这样的话就有个好处

3726
02:01:47,000 --> 02:01:49,000
就说他没有虚拟机那些那些损耗嘛

3727
02:01:49,000 --> 02:01:51,000
别没有这个这个转化那一层

3728
02:01:51,000 --> 02:01:55,000
因为所有东西都是还是在直接在这个硬件上运行的嘛

3729
02:01:55,000 --> 02:01:56,000
对啊

3730
02:01:56,000 --> 02:01:58,000
但是还有一个要解决的问题

3731
02:01:58,000 --> 02:01:59,000
就是说那磁盘怎么办

3732
02:01:59,000 --> 02:02:01,000
就是还有个文件系统呢

3733
02:02:01,000 --> 02:02:02,000
对吧啊

3734
02:02:02,000 --> 02:02:07,000
然后 Cgroup control group 还有一个就是还能够划分不同的文件

3735
02:02:07,000 --> 02:02:12,000
就是说让不同的进程看到的自己的那个那个文件的目录数是唯一是独立的

3736
02:02:12,000 --> 02:02:13,000
分分隔的

3737
02:02:13,000 --> 02:02:15,000
嗯

3738
02:02:15,000 --> 02:02:18,000
这样的话就可以让啊互相之间

3739
02:02:18,000 --> 02:02:21,000
比如说我同样要读取什么 ETC 下面的一个配置文件的时候

3740
02:02:21,000 --> 02:02:23,000
大家可以读到不同的版本

3741
02:02:23,000 --> 02:02:26,000
或者改修改的时候互相不冲突

3742
02:02:26,000 --> 02:02:30,000
对其实就是一个对操作系统级别的虚拟机

3743
02:02:30,000 --> 02:02:34,000
但他又不是他不是重量级的虚拟机

3744
02:02:34,000 --> 02:02:34,000
对对

3745
02:02:35,000 --> 02:02:37,000
他提供了讯息的功能

3746
02:02:37,000 --> 02:02:38,000
但是他并不是一个讯息

3747
02:02:38,000 --> 02:02:41,000
对就是一个超轻量级的一个讯息吧

3748
02:02:41,000 --> 02:02:43,000
然后虚拟系数啊

3749
02:02:43,000 --> 02:02:46,000
可以说然后看说不他能够启动那些

3750
02:02:46,000 --> 02:02:48,000
其中这个这个隔离也非常快

3751
02:02:48,000 --> 02:02:51,000
他就是什么都几十毫秒几百毫秒级别就可以建立出

3752
02:02:51,000 --> 02:02:53,000
这新建一个看错过

3753
02:02:53,000 --> 02:02:55,000
那可以在几十毫秒几百毫秒

3754
02:02:55,000 --> 02:02:57,000
这个量级上把他把他杀掉

3755
02:02:57,000 --> 02:02:58,000
就基本上都没可以

3756
02:02:58,000 --> 02:03:00,000
他是一个就是基石的一个过程

3757
02:03:00,000 --> 02:03:02,000
而不是像像那个虚拟机

3758
02:03:02,000 --> 02:03:04,000
你还要等取等他启动

3759
02:03:04,000 --> 02:03:06,000
然后等他这个退出

3760
02:03:06,000 --> 02:03:06,000
要要等那个几十秒之后就要出现了

3761
02:03:06,000 --> 02:03:09,000
几十秒的就是一个数量级的提升

3762
02:03:09,000 --> 02:03:10,000
两三个数量级的提升了

3763
02:03:10,000 --> 02:03:11,000
没错

3764
02:03:11,000 --> 02:03:11,000
嗯

3765
02:03:11,000 --> 02:03:13,000
啊

3766
02:03:13,000 --> 02:03:16,000
然后有了这么一个基础技术之后呢

3767
02:03:16,000 --> 02:03:19,000
就后来有一个公司叫做 Docker

3768
02:03:19,000 --> 02:03:21,000
出了一个啊

3769
02:03:21,000 --> 02:03:23,000
基于这个 Cgroups 的一个技术

3770
02:03:23,000 --> 02:03:25,000
就叫做 Docker

3771
02:03:25,000 --> 02:03:28,000
对 Docker 就是刚才我们讲的码头工人嘛

3772
02:03:28,000 --> 02:03:34,000
就是负责建这个负责搬运货物的一个东西

3773
02:03:34,000 --> 02:03:36,000
但虽然 Docker 已经绝种了

3774
02:03:36,000 --> 02:03:36,000
现在

3775
02:03:36,000 --> 02:03:37,000
这个工种已经绝种了

3776
02:03:37,000 --> 02:03:40,000
但是他把这个名字借过来了

3777
02:03:40,000 --> 02:03:43,000
他说我们是当然他的他的 logo 不是一个正在扛马包的码头工人

3778
02:03:43,000 --> 02:03:46,000
而是一个运的集装箱的鲸鱼

3779
02:03:46,000 --> 02:03:49,000
承载着一群集一堆集装箱的一个鲸鱼

3780
02:03:49,000 --> 02:03:50,000
这还蛮可爱的

3781
02:03:50,000 --> 02:03:52,000
对呃

3782
02:03:52,000 --> 02:03:57,000
就他是把因为是 CtrlQ 他是一个内核内核的一个一些 API 嘛

3783
02:03:57,000 --> 02:04:02,000
所以他要有一个什么呃叫什么用户可以直接要操作他的一个界面

3784
02:04:02,000 --> 02:04:03,000
最开始的时候

3785
02:04:03,000 --> 02:04:05,000
Linux 支持 LXC 的一个东西吧

3786
02:04:05,000 --> 02:04:06,000
但是那个也不是非常好用的吧

3787
02:04:06,000 --> 02:04:09,000
就是非常友好也不是非常好用

3788
02:04:09,000 --> 02:04:14,000
然后多可就说那我们提供一个更加好用完善的工具

3789
02:04:14,000 --> 02:04:15,000
对

3790
02:04:15,000 --> 02:04:21,000
就是 Docker 目前有图形应该也是用命令行界面的命令行界面的东西

3791
02:04:21,000 --> 02:04:22,000
对他用起来有点像 Git

3792
02:04:24,000 --> 02:04:26,000
对有点有点类似感觉吧

3793
02:04:26,000 --> 02:04:27,000
对嗯

3794
02:04:28,000 --> 02:04:29,000
啊

3795
02:04:29,000 --> 02:04:31,000
然后他是一个什么东西呢

3796
02:04:31,000 --> 02:04:35,000
就他就是利用这个 CtrlQ 实现内核的一些特性

3797
02:04:35,000 --> 02:04:36,000
然后让你能够快速的

3798
02:04:36,000 --> 02:04:40,000
呃清建出一个一个的所谓的 container 一个一个集装箱

3799
02:04:40,000 --> 02:04:42,000
让每个集装箱可以做些什么事儿

3800
02:04:42,000 --> 02:04:44,000
就是说你这上面包含呃他们推荐的方式

3801
02:04:44,000 --> 02:04:49,000
就一个集装上面只包含一个主要的软件哈

3802
02:04:49,000 --> 02:04:50,000
对说你就运行一个数据库

3803
02:04:50,000 --> 02:04:51,000
就是运行一个数据库

3804
02:04:51,000 --> 02:04:53,000
不要搞一些别的东西

3805
02:04:53,000 --> 02:04:55,000
然后运行一个程序一个应用就是单独的一个应用

3806
02:04:55,000 --> 02:04:57,000
不要塞五个应用在一个 container 里面

3807
02:04:57,000 --> 02:04:59,000
这样这样不方便管理吗

3808
02:04:59,000 --> 02:05:01,000
呃有了这些集装箱之后

3809
02:05:01,000 --> 02:05:03,000
他他都可提供了这么一套工具

3810
02:05:03,000 --> 02:05:05,000
能够标准化的去去安装它

3811
02:05:05,000 --> 02:05:07,000
然后可以标准化的去部署它

3812
02:05:07,000 --> 02:05:10,000
这样就可以实现 container 那些所有的好处

3813
02:05:10,000 --> 02:05:14,000
然后也可以避免那个虚拟机的那些资源损耗高的问题

3814
02:05:14,000 --> 02:05:15,000
没错

3815
02:05:15,000 --> 02:05:22,000
而且他还大幅度的简化了一个呃软件部署者

3816
02:05:22,000 --> 02:05:26,000
也就是或者说我们刚才说的这个 DevOps 的工作量

3817
02:05:26,000 --> 02:05:30,000
就是呃之前我们会觉得用 Chef 好像已经

3818
02:05:31,000 --> 02:05:33,000
相当简便了

3819
02:05:33,000 --> 02:05:37,000
用 Chef 或者 Puppet 来来来描述整个的部署过程已经相当简便了

3820
02:05:37,000 --> 02:05:42,000
但是使用 Docker 的时候你会觉得原来整个过程还可以更加抽象

3821
02:05:42,000 --> 02:05:43,000
更加简便一点

3822
02:05:43,000 --> 02:05:44,000
嗯哼

3823
02:05:44,000 --> 02:05:51,000
就是之前你还需要去操心你从哪里获得一个一个一个一个操作系统

3824
02:05:51,000 --> 02:05:52,000
你还要去操心

3825
02:05:52,000 --> 02:05:57,000
因为 Puppet 毕竟还是要运行在一个特定的操作系统之上的

3826
02:05:57,000 --> 02:05:57,000
对

3827
02:05:57,000 --> 02:05:59,000
呃但是 Docker 也需要

3828
02:05:59,000 --> 02:06:00,000
但呃

3829
02:06:00,000 --> 02:06:00,000
呃

3830
02:06:00,000 --> 02:06:06,000
Puppet 所关心的抽象是在操作系统级别以下

3831
02:06:06,000 --> 02:06:10,000
可是从 Docker 开始这个抽象就已经包含操作系统本身在内了

3832
02:06:10,000 --> 02:06:15,000
这是一个非常了不起的一个一个一个一个封装层级

3833
02:06:15,000 --> 02:06:15,000
对

3834
02:06:15,000 --> 02:06:16,000
而且就怎么说

3835
02:06:16,000 --> 02:06:19,000
就是说如果用 Docker 这种方式来部署的话

3836
02:06:19,000 --> 02:06:24,000
这开发者和运运为者做的事情其实是非常呃叫什么

3837
02:06:24,000 --> 02:06:26,000
用的工具是类似同样的工具了

3838
02:06:26,000 --> 02:06:27,000
因为在过去的话

3839
02:06:27,000 --> 02:06:29,000
开发者其实并不

3840
02:06:29,000 --> 02:06:30,000
你开发的过程中至少是

3841
02:06:30,000 --> 02:06:32,000
并不需要用到 Puppet 也好

3842
02:06:32,000 --> 02:06:34,000
还有刚才讲 Chef 那套那些东西懂吗

3843
02:06:34,000 --> 02:06:36,000
因为那个只是部署时候才用到的

3844
02:06:36,000 --> 02:06:39,000
但是如果你用 Docker 来做这个开发的话

3845
02:06:39,000 --> 02:06:43,000
其实你发现你在开发的时候就已经是在 Docker 里面去

3846
02:06:43,000 --> 02:06:43,000
对

3847
02:06:43,000 --> 02:06:43,000
做开发

3848
02:06:43,000 --> 02:06:46,000
你可以一上来就说我要一个什么样的 Docker

3849
02:06:46,000 --> 02:06:46,000
然后呃

3850
02:06:46,000 --> 02:06:48,000
里面在配置那个 Docker

3851
02:06:48,000 --> 02:06:48,000
那个 container

3852
02:06:48,000 --> 02:06:49,000
一上来我就说

3853
02:06:49,000 --> 02:06:53,000
我就知道了这个东西最终会跑在一个什么样的环境里面

3854
02:06:53,000 --> 02:06:54,000
嗯哼

3855
02:06:54,000 --> 02:06:58,000
然后你怎么你在开发的时候去怎么去构建那个 container 的环境

3856
02:06:58,000 --> 02:07:00,000
或者是你怎么去构建你的那个呃

3857
02:07:00,000 --> 02:07:02,000
软件最终运行的环境

3858
02:07:02,000 --> 02:07:06,000
也就正是你在最后部署的时候运维的时候要

3859
02:07:07,000 --> 02:07:08,000
用的同样的环境

3860
02:07:08,000 --> 02:07:09,000
就是你用的是同样一套工具

3861
02:07:09,000 --> 02:07:11,000
同样一套命令去执行这个东西

3862
02:07:11,000 --> 02:07:13,000
这样的话就有什么好处呢

3863
02:07:13,000 --> 02:07:14,000
运运我的时候

3864
02:07:14,000 --> 02:07:18,000
你只用只需要拿到开发好的这个 Docker 的 container

3865
02:07:18,000 --> 02:07:21,000
然后直接把它部署到这个物理的机器上去就好了

3866
02:07:21,000 --> 02:07:24,000
并不需要做任何特别多的额外的操作

3867
02:07:24,000 --> 02:07:29,000
但额外的操作就可能在这个那个目标的机器上装上这个 Docker 本身哈

3868
02:07:29,000 --> 02:07:29,000
对

3869
02:07:29,000 --> 02:07:30,000
换言之

3870
02:07:30,000 --> 02:07:31,000
呃

3871
02:07:31,000 --> 02:07:33,000
从从 Docker 之后

3872
02:07:33,000 --> 02:07:36,000
整个软件的开发过程就变成了 dev

3873
02:07:36,000 --> 02:07:39,000
在 container 里面开发一个东西

3874
02:07:39,000 --> 02:07:41,000
然后 ops 接过 container

3875
02:07:41,000 --> 02:07:43,000
然后把它放在一个呃

3876
02:07:43,000 --> 02:07:45,000
实真正的运行环境上

3877
02:07:45,000 --> 02:07:48,000
然后整个过程中你会发现 devops 好像

3878
02:07:48,000 --> 02:07:51,000
因此而变得非常简单

3879
02:07:51,000 --> 02:07:51,000
对啊

3880
02:07:52,000 --> 02:07:52,000
呃

3881
02:07:52,000 --> 02:07:54,000
多感另外一个重要的贡献

3882
02:07:54,000 --> 02:07:58,000
就是说他把这个文件系统虚拟化做的比较好

3883
02:07:58,000 --> 02:07:59,000
就是说我们过去

3884
02:07:59,000 --> 02:08:00,000
比如说刚才讲的那个

3885
02:08:00,000 --> 02:08:01,000
虚拟机需要

3886
02:08:01,000 --> 02:08:02,000
如果你看五个虚拟机

3887
02:08:02,000 --> 02:08:03,000
那你还要建五个虚拟机镜像

3888
02:08:03,000 --> 02:08:05,000
那么他们那个呃

3889
02:08:05,000 --> 02:08:08,000
每个机器要占用那个系统要占用一定的空间

3890
02:08:08,000 --> 02:08:10,000
然后应用它占用的空间

3891
02:08:10,000 --> 02:08:10,000
对吧

3892
02:08:10,000 --> 02:08:10,000
对啊

3893
02:08:10,000 --> 02:08:13,000
多可说那首先我们不需要这个虚拟每一个操作系统了

3894
02:08:13,000 --> 02:08:15,000
我们不需要我们这条就省掉了

3895
02:08:15,000 --> 02:08:19,000
然后这个就是我们那个文件系统是一个很叫什么 copy

3896
02:08:19,000 --> 02:08:20,000
allright 的系统

3897
02:08:20,000 --> 02:08:21,000
嗯

3898
02:08:21,000 --> 02:08:24,000
就是说我如果我在文件系统做一个改进的话

3899
02:08:24,000 --> 02:08:26,000
我只需要记录他修改那部分

3900
02:08:26,000 --> 02:08:29,000
然后如果其他的共享的部分就可以可以共享到这个

3901
02:08:29,000 --> 02:08:31,000
磁盘空间嘛

3902
02:08:31,000 --> 02:08:37,000
这样的话我哪怕我开一十个一百个这个多可的 container 的同时运行的时候

3903
02:08:37,000 --> 02:08:40,000
我并不需要真的浪费一百份的磁盘空间

3904
02:08:40,000 --> 02:08:42,000
对嗯

3905
02:08:42,000 --> 02:08:44,000
这个是非常了不得的一个一个贡献吧

3906
02:08:44,000 --> 02:08:45,000
没错嗯

3907
02:08:45,000 --> 02:08:49,000
可以看到多可这个工具是非常强大的一个东西

3908
02:08:49,000 --> 02:08:51,000
但是多可本身还是要跑在一个系统上面的嘛

3909
02:08:51,000 --> 02:08:54,000
在无帮就这个 14 点零四开始

3910
02:08:54,000 --> 02:08:56,000
他就官方已经有支持了

3911
02:08:56,000 --> 02:08:59,000
然后这个你只要在那个 apg 里面安装一下

3912
02:08:59,000 --> 02:08:59,000
那个

3913
02:08:59,000 --> 02:09:02,000
我发的那个主机就可以变成一个多可主机

3914
02:09:02,000 --> 02:09:06,000
然后你自己可以在里面运行一些多可的 container 就好了

3915
02:09:06,000 --> 02:09:10,000
对或者说就你就可以在这台机器上将你自己的 pk

3916
02:09:10,000 --> 02:09:10,000
甚

3917
02:09:10,000 --> 02:09:11,000
呃

3918
02:09:11,000 --> 02:09:11,000
docker eyes

3919
02:09:11,000 --> 02:09:12,000
嗯

3920
02:09:12,000 --> 02:09:14,000
对让他跑在一个容器里面

3921
02:09:14,000 --> 02:09:16,000
这套界面还是挺容易用的

3922
02:09:16,000 --> 02:09:19,000
而且我或者想起来有一个优点

3923
02:09:19,000 --> 02:09:22,000
就是你可以保留一个嗯

3924
02:09:22,000 --> 02:09:25,000
保留某一个开发版本的一个 image

3925
02:09:25,000 --> 02:09:25,000
嗯

3926
02:09:25,000 --> 02:09:28,000
就是对好像是这样的吧

3927
02:09:28,000 --> 02:09:29,000
对就是你可以在里面运行

3928
02:09:29,000 --> 02:09:30,000
一个程序

3929
02:09:30,000 --> 02:09:32,000
然后把它存成一个 image

3930
02:09:32,000 --> 02:09:34,000
然后你每次打开这个 image 的时候

3931
02:09:34,000 --> 02:09:37,000
你会得到这个程序在那个时候运行时刻

3932
02:09:37,000 --> 02:09:38,000
嗯

3933
02:09:38,000 --> 02:09:38,000
啊

3934
02:09:38,000 --> 02:09:41,000
就在那个时候的部署是不部署部署状态

3935
02:09:41,000 --> 02:09:46,000
对他等于又成了某一种很特别的版本控制系统啊

3936
02:09:46,000 --> 02:09:49,000
他所控制的是一个软件的运行状态的版本

3937
02:09:49,000 --> 02:09:50,000
嗯

3938
02:09:50,000 --> 02:09:54,000
或者说是把整个操作系统的状态进行了一个版本控制吧

3939
02:09:54,000 --> 02:09:58,000
对有点像那个 vmware 里面的呃

3940
02:09:58,000 --> 02:09:58,000
virtual box 里面的 snapchat 吧

3941
02:09:58,000 --> 02:09:58,000
嗯

3942
02:09:58,000 --> 02:09:58,000
嗯

3943
02:09:58,000 --> 02:09:58,000
嗯

3944
02:09:58,000 --> 02:09:59,000
嗯

3945
02:09:59,000 --> 02:09:59,000
嗯

3946
02:09:59,000 --> 02:09:59,000
嗯

3947
02:09:59,000 --> 02:09:59,000
嗯

3948
02:09:59,000 --> 02:09:59,000
嗯

3949
02:09:59,000 --> 02:09:59,000
嗯

3950
02:09:59,000 --> 02:09:59,000
嗯

3951
02:09:59,000 --> 02:09:59,000
嗯

3952
02:09:59,000 --> 02:09:59,000
嗯

3953
02:09:59,000 --> 02:09:59,000
嗯

3954
02:09:59,000 --> 02:09:59,000
嗯

3955
02:09:59,000 --> 02:09:59,000
嗯

3956
02:09:59,000 --> 02:10:00,000
is

3957
02:10:00,000 --> 02:10:00,000
snapshot

3958
02:10:00,000 --> 02:10:00,000
对

3959
02:10:00,000 --> 02:10:01,000
对

3960
02:10:01,000 --> 02:10:03,000
但是它比那个 snapshot 比较轻量为什么多

3961
02:10:03,000 --> 02:10:04,000
而且快嘛

3962
02:10:04,000 --> 02:10:05,000
没错

3963
02:10:05,000 --> 02:10:06,000
呃

3964
02:10:06,000 --> 02:10:07,000
但是还有人觉得这样

3965
02:10:08,000 --> 02:10:09,000
还是太麻烦了

3966
02:10:09,000 --> 02:10:12,000
那个就是所谓的 docker 的这个什么宿主机啊

3967
02:10:12,000 --> 02:10:13,000
就是太复杂了

3968
02:10:13,000 --> 02:10:14,000
对

3969
02:10:14,000 --> 02:10:16,000
就有很多人在做一些新的尝试

3970
02:10:16,000 --> 02:10:17,000
比如说最

3971
02:10:17,000 --> 02:10:21,000
可能大家听的比较多的是一个叫做 core os 的这么一个场子

3972
02:10:21,000 --> 02:10:25,000
就是它是一个经典版的 linux 系统

3973
02:10:25,000 --> 02:10:25,000
然后它的

3974
02:10:25,000 --> 02:10:27,000
然后它也是基于 cglobe

3975
02:10:28,000 --> 02:10:29,000
啊

3976
02:10:29,000 --> 02:10:30,000
对 它最开始是

3977
02:10:30,000 --> 02:10:31,000
它现在还是

3978
02:10:31,000 --> 02:10:31,000
目前为止

3979
02:10:31,000 --> 02:10:33,000
它还是基于 Docker 的

3980
02:10:33,000 --> 02:10:33,000
就是说

3981
02:10:33,000 --> 02:10:34,000
它就是给你提供一个

3982
02:10:34,000 --> 02:10:36,000
精简版的 Docker 的运行环境

3983
02:10:36,000 --> 02:10:37,000
然后你直接在里面去

3984
02:10:37,000 --> 02:10:39,000
就是它的这个

3985
02:10:39,000 --> 02:10:40,000
Core OS 本身

3986
02:10:40,000 --> 02:10:41,000
是非常精简的东西

3987
02:10:41,000 --> 02:10:42,000
里面并没有很多东西

3988
02:10:42,000 --> 02:10:43,000
然后你所有的

3989
02:10:43,000 --> 02:10:45,000
应用的部署

3990
02:10:45,000 --> 02:10:46,000
都是在 Core OS 里面

3991
02:10:46,000 --> 02:10:47,000
跑一个 Docker

3992
02:10:47,000 --> 02:10:47,000
然后在 Docker 里面

3993
02:10:47,000 --> 02:10:49,000
在建构筒的

3994
02:10:49,000 --> 02:10:50,000
这个虚拟机去跑

3995
02:10:50,000 --> 02:10:52,000
Cartooner 去跑

3996
02:10:52,000 --> 02:10:53,000
当然他们最近

3997
02:10:53,000 --> 02:10:54,000
也在搞一个

3998
02:10:54,000 --> 02:10:55,000
因为他们跟 Docker

3999
02:10:55,000 --> 02:10:56,000
因为 Docker

4000
02:10:56,000 --> 02:10:56,000
背后还有一个公司

4001
02:10:56,000 --> 02:10:58,000
叫 Docker Incorporated

4002
02:10:58,000 --> 02:10:59,000
他们之间

4003
02:10:59,000 --> 02:11:00,000
有一些利益的冲突

4004
02:11:00,000 --> 02:11:01,000
他们不是一家的

4005
02:11:01,000 --> 02:11:03,000
或者说他们的设计

4006
02:11:03,000 --> 02:11:04,000
哲学有点不一样

4007
02:11:04,000 --> 02:11:06,000
对 他们这个设计理念

4008
02:11:06,000 --> 02:11:07,000
有点不一样

4009
02:11:07,000 --> 02:11:08,000
然后商业的利益

4010
02:11:08,000 --> 02:11:10,000
也有点冲突

4011
02:11:10,000 --> 02:11:11,000
所以他们最近

4012
02:11:11,000 --> 02:11:12,000
在搞一个所谓的

4013
02:11:12,000 --> 02:11:14,000
Docker 的一个分支

4014
02:11:14,000 --> 02:11:14,000
一个 Fork

4015
02:11:14,000 --> 02:11:16,000
去把一些

4016
02:11:16,000 --> 02:11:17,000
标准化的东西定下来

4017
02:11:17,000 --> 02:11:18,000
但是这个我们就

4018
02:11:18,000 --> 02:11:19,000
不去纠结那些细节了

4019
02:11:19,000 --> 02:11:21,000
其实说穿了就是

4020
02:11:21,000 --> 02:11:22,000
原教旨主义和

4021
02:11:22,000 --> 02:11:24,000
和这个什么

4022
02:11:24,000 --> 02:11:26,000
商业利益之间的冲突

4023
02:11:26,000 --> 02:11:27,000
对

4024
02:11:27,000 --> 02:11:27,000
对

4025
02:11:27,000 --> 02:11:28,000
对

4026
02:11:28,000 --> 02:11:29,000
�然后 Ubuntu

4027
02:11:29,000 --> 02:11:30,000
他们也没有闲着

4028
02:11:30,000 --> 02:11:31,000
他们前一段时间

4029
02:11:31,000 --> 02:11:32,000
也发布了一个

4030
02:11:32,000 --> 02:11:33,000
叫做 Ubuntu Core

4031
02:11:33,000 --> 02:11:34,000
这么的一个

4032
02:11:34,000 --> 02:11:36,000
新的 Ubuntu 的发行版

4033
02:11:36,000 --> 02:11:38,000
这个也比较好玩的一点

4034
02:11:38,000 --> 02:11:40,000
就是说

4035
02:11:40,000 --> 02:11:41,000
它连这个

4036
02:11:41,000 --> 02:11:42,000
这个母系统本身

4037
02:11:42,000 --> 02:11:44,000
都变成一个 Docker 的

4038
02:11:44,000 --> 02:11:47,000
Docker 化的一个东西了吧

4039
02:11:47,000 --> 02:11:47,000
你可以这么想

4040
02:11:47,000 --> 02:11:48,000
What

4041
02:11:48,000 --> 02:11:49,000
就是

4042
02:11:49,000 --> 02:11:51,000
因为母系统

4043
02:11:51,000 --> 02:11:52,000
素组机的系统里面

4044
02:11:52,000 --> 02:11:52,000
它还是可以

4045
02:11:52,000 --> 02:11:53,000
有一些状态要改的

4046
02:11:53,000 --> 02:11:54,000
然后它的设计

4047
02:11:54,000 --> 02:11:56,000
这些还是不是非常

4048
02:11:56,000 --> 02:11:57,000
稳健的

4049
02:11:57,000 --> 02:11:57,000
但是刚才

4050
02:11:57,000 --> 02:11:59,000
我们讲利用这种 image 的这种版本

4051
02:11:59,000 --> 02:12:00,000
控制的一种方式

4052
02:12:00,000 --> 02:12:03,000
它可以做到连这个宿主机的升级

4053
02:12:03,000 --> 02:12:05,000
和这个维护都变成一个

4054
02:12:05,000 --> 02:12:06,000
非常确定化的东西

4055
02:12:06,000 --> 02:12:07,000
就是如果中途失败

4056
02:12:07,000 --> 02:12:09,000
可以是可以回滚的

4057
02:12:09,000 --> 02:12:12,000
然后就变成就变成这个

4058
02:12:12,000 --> 02:12:15,000
就是用 Docker 来控制 Docker 宿主机了

4059
02:12:15,000 --> 02:12:16,000
你可以大概是这个意思

4060
02:12:16,000 --> 02:12:18,000
OK 有意思

4061
02:12:18,000 --> 02:12:20,000
对就比较好

4062
02:12:20,000 --> 02:12:22,000
但是整个来说呢

4063
02:12:22,000 --> 02:12:24,000
对 Docker 现在还是比较一个

4064
02:12:24,000 --> 02:12:26,000
新兴的技术吧

4065
02:12:26,000 --> 02:12:28,000
就是说你如果要用到生产中

4066
02:12:28,000 --> 02:12:30,000
可能还是要先实践一下

4067
02:12:30,000 --> 02:12:32,000
也有也有不少的坑

4068
02:12:32,000 --> 02:12:33,000
因为 Docker 本身是一个

4069
02:12:33,000 --> 02:12:35,000
还在不断完成中的系统

4070
02:12:35,000 --> 02:12:36,000
对可能就是因为这些坑

4071
02:12:36,000 --> 02:12:38,000
就是刚才说到的

4072
02:12:38,000 --> 02:12:40,000
这个所谓 Docker Apocalypse

4073
02:12:40,000 --> 02:12:42,000
所以也指的就是这些

4074
02:12:42,000 --> 02:12:43,000
就是有些人对于

4075
02:12:43,000 --> 02:12:45,000
对此之怀疑态度的会觉得

4076
02:12:45,000 --> 02:12:47,000
因为这个东西还不成熟

4077
02:12:47,000 --> 02:12:48,000
就是哪怕我们两个

4078
02:12:48,000 --> 02:12:49,000
我们两个觉得

4079
02:12:49,000 --> 02:12:51,000
这是一个划时代的伟大发明

4080
02:12:51,000 --> 02:12:53,000
也不可能拍着胸部说

4081
02:12:53,000 --> 02:12:54,000
这个东西肯定会在十年之后

4082
02:12:54,000 --> 02:12:56,000
成为绝对的

4083
02:12:56,000 --> 02:12:56,000
主流

4084
02:12:56,000 --> 02:12:57,000
对

4085
02:12:57,000 --> 02:12:59,000
但是我觉得趋势还是要

4086
02:12:59,000 --> 02:13:00,000
再往那个方向走

4087
02:13:00,000 --> 02:13:02,000
对因为就像集装箱一样

4088
02:13:02,000 --> 02:13:04,000
很难想象将来

4089
02:13:04,000 --> 02:13:05,000
没有这种便利的话

4090
02:13:05,000 --> 02:13:09,000
还能有什么更好的方式

4091
02:13:09,000 --> 02:13:10,000
来管理

4092
02:13:10,000 --> 02:13:14,000
来让每个人都可以更加

4093
02:13:14,000 --> 02:13:15,000
低门槛的成为 DevOps

4094
02:13:15,000 --> 02:13:16,000
对

4095
02:13:16,000 --> 02:13:18,000
可能这是最好的一种方法

4096
02:13:18,000 --> 02:13:18,000
对

4097
02:13:18,000 --> 02:13:21,000
所以如果你作为一个开发者

4098
02:13:21,000 --> 02:13:23,000
然后你想成为这个 DevOps

4099
02:13:23,000 --> 02:13:25,000
你想去接触一下 Docker 这些东西呢

4100
02:13:25,000 --> 02:13:26,000
就也有很多的方法

4101
02:13:26,000 --> 02:13:26,000
可以尝试

4102
02:13:26,000 --> 02:13:28,000
比如说你自己在电脑上

4103
02:13:28,000 --> 02:13:30,000
装一个免费的这个 VirtualBox

4104
02:13:30,000 --> 02:13:33,000
然后你再装一个这个 Docker

4105
02:13:33,000 --> 02:13:34,000
或者装一个 Ubuntu 也好

4106
02:13:34,000 --> 02:13:35,000
然后在这里面装 Docker

4107
02:13:35,000 --> 02:13:37,000
或者装个 CoreOS 也可以

4108
02:13:37,000 --> 02:13:38,000
当然也有个

4109
02:13:38,000 --> 02:13:40,000
如果你是在 Mac 上面的话

4110
02:13:40,000 --> 02:13:42,000
有一个我们有一个更简单的方式

4111
02:13:42,000 --> 02:13:43,000
就是 Docker

4112
02:13:43,000 --> 02:13:45,000
这个社区提供了一个叫做

4113
02:13:45,000 --> 02:13:46,000
Boot 2 Docker 的这么一个

4114
02:13:46,000 --> 02:13:49,000
极度精简版的另一个系统

4115
02:13:49,000 --> 02:13:50,000
然后你可以

4116
02:13:50,000 --> 02:13:51,000
里面他做的唯一一件事情

4117
02:13:51,000 --> 02:13:52,000
就是让你跑 Docker

4118
02:13:52,000 --> 02:13:54,000
然后我给这个系统

4119
02:13:54,000 --> 02:13:56,000
这个 Boot 2 Docker

4120
02:13:56,000 --> 02:13:56,000
这个这个 Docker 的这个系统

4121
02:13:56,000 --> 02:13:58,000
作为一个命令行的小工具

4122
02:13:58,000 --> 02:14:02,000
各位现在正在听这个

4123
02:14:02,000 --> 02:14:05,000
我们的 Ryo 同学在 Brag

4124
02:14:05,000 --> 02:14:07,000
他写的一个自我推广

4125
02:14:07,000 --> 02:14:10,000
一个用 Docker 的小命令行工具

4126
02:14:10,000 --> 02:14:12,000
叫做叫什么

4127
02:14:12,000 --> 02:14:14,000
Boot 2 Docker Client

4128
02:14:14,000 --> 02:14:14,000
对对对

4129
02:14:14,000 --> 02:14:17,000
Boot 2 Docker-CLI

4130
02:14:17,000 --> 02:14:18,000
对

4131
02:14:18,000 --> 02:14:20,000
然后你可以在那个 Homebrew 里面

4132
02:14:20,000 --> 02:14:21,000
装 Mac 上面

4133
02:14:21,000 --> 02:14:23,000
因为这个主要是给 Mac 用户开发的

4134
02:14:23,000 --> 02:14:25,000
因为那个 Docker 不能原生运行

4135
02:14:25,000 --> 02:14:26,000
智能运行

4136
02:14:26,000 --> 02:14:27,000
原生运行在 Linux 上面是什么

4137
02:14:27,000 --> 02:14:28,000
对

4138
02:14:28,000 --> 02:14:29,000
所以你肯定是需要一个虚拟机的

4139
02:14:29,000 --> 02:14:31,000
才能在 Mac 上面跑的

4140
02:14:31,000 --> 02:14:32,000
然后这个工具可以干嘛呢

4141
02:14:32,000 --> 02:14:36,000
可以帮你一件事的去完成

4142
02:14:36,000 --> 02:14:38,000
只要你这样装上那个 VirtualBox 之后

4143
02:14:38,000 --> 02:14:39,000
他可以一件事的帮你建装好

4144
02:14:39,000 --> 02:14:41,000
这个 Boot 2 Docker 东西

4145
02:14:41,000 --> 02:14:44,000
然后可以让你很方便的去操纵

4146
02:14:44,000 --> 02:14:46,000
这个虚拟机的里面的一些概念吧

4147
02:14:46,000 --> 02:14:50,000
然后之后你可以再用 Docker 去跟这个用

4148
02:14:50,000 --> 02:14:52,000
Boot 2 Docker 装好的一个

4149
02:14:52,000 --> 02:14:55,000
好知道用 Boot 2 Docker 装好的一个 Docker 速度

4150
02:14:55,000 --> 02:14:56,000
速度机

4151
02:14:56,000 --> 02:15:00,000
的去可以去玩吧

4152
02:15:00,000 --> 02:15:02,000
就可以去学习里面的东西

4153
02:15:02,000 --> 02:15:03,000
好累

4154
02:15:03,000 --> 02:15:07,000
对大概就这个意思

4155
02:15:07,000 --> 02:15:09,000
可以去学习了

4156
02:15:09,000 --> 02:15:12,000
然后现在我们要在节目的最后要扯一点

4157
02:15:12,000 --> 02:15:15,000
玄学

4158
02:15:15,000 --> 02:15:17,000
对就是扯一些有的没的

4159
02:15:17,000 --> 02:15:19,000
不干不湿

4160
02:15:19,000 --> 02:15:21,000
可能还是偏湿的一些东西吧

4161
02:15:21,000 --> 02:15:24,000
对就是其实我们刚才讲那么多东西

4162
02:15:24,000 --> 02:15:25,000
就是我们

4163
02:15:25,000 --> 02:15:25,000
为什么我们要扯一些东西

4164
02:15:25,000 --> 02:15:27,000
为什么要这么多工具去做这些东西

4165
02:15:27,000 --> 02:15:29,000
其实要解决什么问题

4166
02:15:29,000 --> 02:15:32,000
就是如果我们把那个一个一台服务器

4167
02:15:32,000 --> 02:15:34,000
作为一个状态机的话

4168
02:15:34,000 --> 02:15:36,000
其实我们就是可以看到那些工具的一个

4169
02:15:36,000 --> 02:15:38,000
一个发展方向

4170
02:15:38,000 --> 02:15:41,000
就是把这个状态机进而变得无状态

4171
02:15:42,000 --> 02:15:44,000
状态机不可能无状态

4172
02:15:44,000 --> 02:15:46,000
而我觉得可能正确的说

4173
02:15:46,000 --> 02:15:50,000
应该是让状态机的状态变化

4174
02:15:50,000 --> 02:15:52,000
是可预测的吗

4175
02:15:52,000 --> 02:15:52,000
是可

4176
02:15:52,000 --> 02:15:55,000
这么说可能也不是特别

4177
02:15:55,000 --> 02:15:56,000
精确

4178
02:15:56,000 --> 02:15:58,000
我们刚才想要表达什么意思

4179
02:15:58,000 --> 02:16:00,000
就是服务器是一大堆状态机

4180
02:16:00,000 --> 02:16:03,000
就是状态机是一个

4181
02:16:03,000 --> 02:16:05,000
算了我不解释什么状态机了

4182
02:16:05,000 --> 02:16:08,000
就是如果把服务器视为状态机的话

4183
02:16:08,000 --> 02:16:10,000
那么我们的终极理想就是

4184
02:16:10,000 --> 02:16:13,000
我不用去操心状态机

4185
02:16:13,000 --> 02:16:18,000
从状态 A 变到状态 B 的过程

4186
02:16:18,000 --> 02:16:20,000
究竟需要做哪些事情

4187
02:16:20,000 --> 02:16:23,000
我只操心让它从状态 A 变到状态 B

4188
02:16:23,000 --> 02:16:25,000
可控

4189
02:16:25,000 --> 02:16:27,000
有反应

4190
02:16:27,000 --> 02:16:31,000
并且可以同时在很多很多机器上运行

4191
02:16:31,000 --> 02:16:31,000
对

4192
02:16:31,000 --> 02:16:35,000
就是说我们希望能够有成百上千的

4193
02:16:35,000 --> 02:16:39,000
我们不用一个通过很 impartial

4194
02:16:39,000 --> 02:16:40,000
很命令式的方式去指定

4195
02:16:40,000 --> 02:16:42,000
它怎么切换状态的状态机

4196
02:16:42,000 --> 02:16:45,000
我只能告诉它说进入 A 状态

4197
02:16:45,000 --> 02:16:47,000
然后它们就全部进入了 A 状态了

4198
02:16:47,000 --> 02:16:47,000
对

4199
02:16:47,000 --> 02:16:51,000
这就有点像 DisposableMe 里面的

4200
02:16:51,000 --> 02:16:52,000
Minion 一样

4201
02:16:52,000 --> 02:16:54,000
我们理想状态是

4202
02:16:54,000 --> 02:16:57,000
不是告诉每一个单独的 Minion

4203
02:16:57,000 --> 02:16:58,000
Kevin 你去拿那个

4204
02:16:58,000 --> 02:17:01,000
然后 Mike 你去拿那个

4205
02:17:01,000 --> 02:17:03,000
然后拿两个不同的工具

4206
02:17:03,000 --> 02:17:06,000
把缩小射线枪偷出来

4207
02:17:06,000 --> 02:17:07,000
我只需要下一颗 Minion

4208
02:17:07,000 --> 02:17:09,000
你们去把缩小射线枪给我偷出来

4209
02:17:09,000 --> 02:17:11,000
至于怎么完成的我不管

4210
02:17:11,000 --> 02:17:14,000
这是我们想要达到的终极目标

4211
02:17:14,000 --> 02:17:16,000
说实话其实还是懒

4212
02:17:16,000 --> 02:17:21,000
我觉得我们这一期讲的 Docker

4213
02:17:21,000 --> 02:17:23,000
其实也是第三层的

4214
02:17:23,000 --> 02:17:24,000
所谓的 Lifecycle

4215
02:17:24,000 --> 02:17:25,000
Management

4216
02:17:25,000 --> 02:17:27,000
就是 Server as a State Machine

4217
02:17:27,000 --> 02:17:29,000
as a Service

4218
02:17:29,000 --> 02:17:31,000
我们要管理它们的 Lifecycle

4219
02:17:31,000 --> 02:17:32,000
然后

4220
02:17:32,000 --> 02:17:38,000
所有这一切都希望能够尽可能的自动化

4221
02:17:38,000 --> 02:17:40,000
尽可能的无痛的实现

4222
02:17:40,000 --> 02:17:43,000
所以归根结底其实还是因为懒

4223
02:17:43,000 --> 02:17:44,000
或者说

4224
02:17:44,000 --> 02:17:46,000
叫做削减复杂度

4225
02:17:46,000 --> 02:17:48,000
就是说如果你要

4226
02:17:48,000 --> 02:17:49,000
你要关注每一台机器

4227
02:17:49,000 --> 02:17:50,000
它具体的状态怎么样

4228
02:17:50,000 --> 02:17:52,000
然后每台机器状态还不一样

4229
02:17:52,000 --> 02:17:53,000
你再去手工一个一个解决的话

4230
02:17:53,000 --> 02:17:54,000
这个就

4231
02:17:54,000 --> 02:17:55,000
就太复杂了

4232
02:17:55,000 --> 02:17:57,000
我们想的方法就是说

4233
02:17:57,000 --> 02:18:00,000
能够通过这种把它

4234
02:18:00,000 --> 02:18:03,000
首先是一个描述性的语言去指定它的状态

4235
02:18:03,000 --> 02:18:06,000
然后用工具去实现说

4236
02:18:06,000 --> 02:18:08,000
我不管你是什么状态

4237
02:18:08,000 --> 02:18:10,000
你就变成这样状态就好了

4238
02:18:10,000 --> 02:18:14,000
来做到把这个事情尽量变得简化一点

4239
02:18:14,000 --> 02:18:16,000
然后就简化的目标是什么

4240
02:18:16,000 --> 02:18:19,000
就是我还是说能够希望很快速方便的

4241
02:18:19,000 --> 02:18:22,000
能够去伸缩我们计算资源

4242
02:18:22,000 --> 02:18:23,000
然后去应对

4243
02:18:23,000 --> 02:18:24,000
随时变化的事情

4244
02:18:24,000 --> 02:18:26,000
变化的工作负担

4245
02:18:26,000 --> 02:18:26,000
工作负荷

4246
02:18:26,000 --> 02:18:27,000
没错

4247
02:18:27,000 --> 02:18:29,000
所以这

4248
02:18:29,000 --> 02:18:33,000
然后我们让状态机变得所谓

4249
02:18:33,000 --> 02:18:35,000
不是 stateless

4250
02:18:35,000 --> 02:18:38,000
但是是某种意义上的

4251
02:18:38,000 --> 02:18:42,000
在我们的最终用户的视角看来

4252
02:18:42,000 --> 02:18:44,000
是处于 stateless 的状态的

4253
02:18:44,000 --> 02:18:49,000
这样一种思潮

4254
02:18:49,000 --> 02:18:50,000
或者说这样一种哲学

4255
02:18:50,000 --> 02:18:53,000
其理念和 functional programming

4256
02:18:53,000 --> 02:18:55,000
其实是相通的

4257
02:18:55,000 --> 02:18:55,000
对

4258
02:18:55,000 --> 02:18:57,000
就说我们如果我们把每一个

4259
02:18:57,000 --> 02:19:00,000
因为我们为什么要弄那么多服务器跑起来

4260
02:19:00,000 --> 02:19:02,000
就是因为它要完成一个功能

4261
02:19:02,000 --> 02:19:03,000
那所谓完成功能就是说

4262
02:19:03,000 --> 02:19:05,000
它服务器接受一个输入用户的请求

4263
02:19:05,000 --> 02:19:06,000
对吧

4264
02:19:06,000 --> 02:19:07,000
然后它要完成一个输出

4265
02:19:07,000 --> 02:19:11,000
就是产生用户的这个返回给用户的结果

4266
02:19:11,000 --> 02:19:15,000
就我们是希望每一个这个这个这个我们叫做服务器也好

4267
02:19:15,000 --> 02:19:17,000
还是叫做这个 container 也好

4268
02:19:17,000 --> 02:19:22,000
我们希望它的这个输入输出是能够呃呃就是无状态的

4269
02:19:22,000 --> 02:19:25,000
就是说我们只要有同样的另外一个 container

4270
02:19:25,000 --> 02:19:26,000
或者同样的另外一个服务器

4271
02:19:26,000 --> 02:19:27,000
我给它同样的输出

4272
02:19:27,000 --> 02:19:29,000
它能够产生同样的输出嘛

4273
02:19:29,000 --> 02:19:30,000
对没有副作用

4274
02:19:30,000 --> 02:19:35,000
对就是然后这样没有副作用的话就可以让我们很方便的去管理他们嘛

4275
02:19:35,000 --> 02:19:36,000
也可以对调配资源啊

4276
02:19:36,000 --> 02:19:37,000
调度资源啊

4277
02:19:37,000 --> 02:19:44,000
就对我们就可以像把整个服务器像一个函数一样组建起来

4278
02:19:44,000 --> 02:19:46,000
然后每次扔进去

4279
02:19:46,000 --> 02:19:50,000
我们想我们知道会得到什么样输出的输入就可以了

4280
02:19:50,000 --> 02:19:52,000
而不是像在

4281
02:19:52,000 --> 02:19:53,000
命令式变成那样

4282
02:19:53,000 --> 02:19:56,000
还要去操心此时的整个程序处于什么状态

4283
02:19:56,000 --> 02:19:56,000
对

4284
02:19:56,000 --> 02:19:57,000
哎

4285
02:19:57,000 --> 02:20:00,000
这个我们是不是忘了提 Nexus

4286
02:20:00,000 --> 02:20:00,000
Nexus

4287
02:20:00,000 --> 02:20:03,000
它的最终目标不就是要达到这个效果

4288
02:20:03,000 --> 02:20:04,000
哎

4289
02:20:04,000 --> 02:20:06,000
对这个其实应该要讲的

4290
02:20:06,000 --> 02:20:08,000
不过因为我自己也没有用过

4291
02:20:08,000 --> 02:20:10,000
只是在关注这个东西哈

4292
02:20:10,000 --> 02:20:14,000
就是没有太多的实际的这个应用应用的场景

4293
02:20:14,000 --> 02:20:16,000
而且它那个本身也不太成熟嘛

4294
02:20:16,000 --> 02:20:18,000
还是在一个开发

4295
02:20:18,000 --> 02:20:20,000
它还是一个比较香

4296
02:20:20,000 --> 02:20:21,000
比较先锋式的

4297
02:20:21,000 --> 02:20:22,000
比较先锋式的

4298
02:20:22,000 --> 02:20:32,000
比较比较比较更加纯粹的这么一个朝着 stateless 的的管理工具的一个一个尝试的

4299
02:20:32,000 --> 02:20:32,000
对

4300
02:20:32,000 --> 02:20:36,000
因为 Docker 这种思路就是说我们不改变目前的操作系统

4301
02:20:36,000 --> 02:20:38,000
就是你现在 Docker 里面跑的东西还是一个

4302
02:20:38,000 --> 02:20:41,000
就是我们所谓的这个常规的一个操作系统嘛

4303
02:20:41,000 --> 02:20:43,000
就它里面还是有那些状态的

4304
02:20:43,000 --> 02:20:47,000
但就是说我们只是说因为我们用一个皈依化的方式去生成它

4305
02:20:47,000 --> 02:20:50,000
然后我们就是 hopefully 哈

4306
02:20:50,000 --> 02:20:51,000
就是我们希望

4307
02:20:51,000 --> 02:20:52,000
对

4308
02:20:52,000 --> 02:20:54,000
我们通过皈依化的方式去生成它

4309
02:20:54,000 --> 02:20:57,000
得到的结果是一个大家都一样的结果

4310
02:20:57,000 --> 02:20:59,000
但是并不能保证它运行一段时间之后

4311
02:20:59,000 --> 02:21:03,000
它每个个同样就同样方生成的这个 container

4312
02:21:03,000 --> 02:21:05,000
它不会出现所谓 diverge

4313
02:21:05,000 --> 02:21:07,000
就是出现分野嘛

4314
02:21:07,000 --> 02:21:09,000
就是说这个运行的一段时间变成这个状态

4315
02:21:09,000 --> 02:21:12,000
然后那个运行的时间变成另一个状态

4316
02:21:12,000 --> 02:21:12,000
没错

4317
02:21:12,000 --> 02:21:16,000
但是像那个 Nix 这种东西的话

4318
02:21:16,000 --> 02:21:18,000
其实它又想做更进一步的

4319
02:21:18,000 --> 02:21:20,000
它们我们只要把这个操作系统变成

4320
02:21:20,000 --> 02:21:21,000
本身变成是一个

4321
02:21:22,000 --> 02:21:23,000
stateless 的东西

4322
02:21:23,000 --> 02:21:28,000
就是它的其实是更加一个更激进的一个方法吧

4323
02:21:28,000 --> 02:21:28,000
我觉得

4324
02:21:28,000 --> 02:21:29,000
对

4325
02:21:29,000 --> 02:21:30,000
但是通常来说呢

4326
02:21:30,000 --> 02:21:32,000
这种更加激进的方法

4327
02:21:32,000 --> 02:21:36,000
一般都是不会成功的

4328
02:21:36,000 --> 02:21:39,000
就是对软件工程来讲

4329
02:21:39,000 --> 02:21:41,000
我觉得这个向后兼容

4330
02:21:41,000 --> 02:21:43,000
还有这个所谓的这个规模优势

4331
02:21:43,000 --> 02:21:46,000
还是有点用处吧

4332
02:21:46,000 --> 02:21:48,000
就是说 Nix 那个它其实更加类似于

4333
02:21:48,000 --> 02:21:51,000
Brand to Core 那种比较极端的一种方式

4334
02:21:52,000 --> 02:21:54,000
去改变我们的这个部署的环境

4335
02:21:54,000 --> 02:21:58,000
但愿是吧

4336
02:21:58,000 --> 02:22:02,000
但我还是希望它能够做起来

4337
02:22:02,000 --> 02:22:04,000
我应该说但愿不是吧

4338
02:22:04,000 --> 02:22:06,000
我觉得在服务端

4339
02:22:06,000 --> 02:22:11,000
其实人们接受变革的阻力

4340
02:22:11,000 --> 02:22:13,000
还是要比在其他领域少一些

4341
02:22:13,000 --> 02:22:15,000
因为在服务端

4342
02:22:15,000 --> 02:22:19,000
其实首先人们对产品没有太多感情

4343
02:22:19,000 --> 02:22:20,000
不像

4344
02:22:20,000 --> 02:22:22,000
就没有用户了

4345
02:22:22,000 --> 02:22:24,000
对我们不会说我是果粉

4346
02:22:24,000 --> 02:22:26,000
或者说我有苹果的使用习惯

4347
02:22:26,000 --> 02:22:29,000
我们都是一堆见风使舵的人

4348
02:22:29,000 --> 02:22:33,000
对我们在看得见摸得着的

4349
02:22:33,000 --> 02:22:34,000
这种消费品

4350
02:22:34,000 --> 02:22:36,000
消费点的产品领域

4351
02:22:36,000 --> 02:22:38,000
会有这样的教派的存在

4352
02:22:38,000 --> 02:22:39,000
就是你我都是

4353
02:22:39,000 --> 02:22:40,000
我不知道你是不是

4354
02:22:40,000 --> 02:22:43,000
但我是一个苹果教徒

4355
02:22:43,000 --> 02:22:46,000
但在服务端可能不会有

4356
02:22:46,000 --> 02:22:47,000
会更加理性一些

4357
02:22:47,000 --> 02:22:49,000
对会更加利益趋势

4358
02:22:49,000 --> 02:22:50,000
或者是 lazy driven 一点

4359
02:22:50,000 --> 02:22:51,000
对对

4360
02:22:51,000 --> 02:22:52,000
就是什么

4361
02:22:52,000 --> 02:22:52,000
好我用什么

4362
02:22:52,000 --> 02:22:53,000
我不会去

4363
02:22:53,000 --> 02:22:56,000
而且在服务端

4364
02:22:56,000 --> 02:22:57,000
有好处就是

4365
02:22:57,000 --> 02:22:58,000
好是有一个明确的标准的

4366
02:22:58,000 --> 02:23:01,000
如果我用这个比你一快

4367
02:23:01,000 --> 02:23:02,000
二简单

4368
02:23:02,000 --> 02:23:02,000
那它就是好

4369
02:23:02,000 --> 02:23:03,000
对吧

4370
02:23:03,000 --> 02:23:06,000
但是在我们可能

4371
02:23:06,000 --> 02:23:07,000
消费级别都有一些看不着

4372
02:23:07,000 --> 02:23:10,000
中端电子用户会有一些非常难以理解的

4373
02:23:10,000 --> 02:23:11,000
非理性的因素在内

4374
02:23:11,000 --> 02:23:13,000
对有感性的因素在内

4375
02:23:13,000 --> 02:23:13,000
对

4376
02:23:13,000 --> 02:23:16,000
比如说我就是习惯关闭按钮在左上角

4377
02:23:16,000 --> 02:23:18,000
没有理由

4378
02:23:18,000 --> 02:23:19,000
对没有什么理由

4379
02:23:19,000 --> 02:23:21,000
你能告诉我说

4380
02:23:21,000 --> 02:23:22,000
在右上角就是要别的

4381
02:23:22,000 --> 02:23:23,000
在左上角好吗

4382
02:23:23,000 --> 02:23:24,000
我就是喜欢

4383
02:23:24,000 --> 02:23:24,000
我就是说不好

4384
02:23:24,000 --> 02:23:25,000
你咬我呀

4385
02:23:25,000 --> 02:23:25,000
对吧

4386
02:23:25,000 --> 02:23:27,000
我就觉得那个 OS 10 的字体渲染

4387
02:23:27,000 --> 02:23:28,000
比 Windows 的好

4388
02:23:28,000 --> 02:23:29,000
你能把我咋定了

4389
02:23:29,000 --> 02:23:30,000
对你咬我呀

4390
02:23:30,000 --> 02:23:30,000
对

4391
02:23:30,000 --> 02:23:32,000
但是在服务端就不会有这种

4392
02:23:32,000 --> 02:23:33,000
不会有这样的问题

4393
02:23:33,000 --> 02:23:34,000
真的是真刀真枪

4394
02:23:34,000 --> 02:23:37,000
没有什么

4395
02:23:37,000 --> 02:23:38,000
就一切都是可以量化的

4396
02:23:38,000 --> 02:23:41,000
这可能是你为什么喜欢后端的原因吧

4397
02:23:41,000 --> 02:23:41,000
对啊

4398
02:23:41,000 --> 02:23:43,000
就是一切都是可控的

4399
02:23:43,000 --> 02:23:43,000
对

4400
02:23:43,000 --> 02:23:45,000
你倾向于一切都是可控可以量化

4401
02:23:45,000 --> 02:23:46,000
可以可以抉择

4402
02:23:46,000 --> 02:23:48,000
所以

4403
02:23:48,000 --> 02:23:51,000
对从这个角度讲

4404
02:23:51,000 --> 02:23:51,000
可能

4405
02:23:51,000 --> 02:23:54,000
NyxOS 还是会有

4406
02:23:54,000 --> 02:23:55,000
还是会

4407
02:23:55,000 --> 02:23:57,000
后来居上了

4408
02:23:57,000 --> 02:23:59,000
如果他真的有他宣称的那么好

4409
02:23:59,000 --> 02:24:01,000
当然其作者也说了

4410
02:24:01,000 --> 02:24:04,000
NyxOS is not for the faint of heart for now

4411
02:24:04,000 --> 02:24:06,000
所以说小白物竞

4412
02:24:06,000 --> 02:24:07,000
对

4413
02:24:07,000 --> 02:24:10,000
如果你没有一些功力

4414
02:24:10,000 --> 02:24:12,000
没有想要折腾的心念的话

4415
02:24:12,000 --> 02:24:14,000
最好还是不要碰它

4416
02:24:14,000 --> 02:24:15,000
不过那个 one to core

4417
02:24:15,000 --> 02:24:17,000
那个还比较用户友好

4418
02:24:17,000 --> 02:24:18,000
可以去玩一下

4419
02:24:18,000 --> 02:24:20,000
如果你觉得 NyxOS 太

4420
02:24:20,000 --> 02:24:20,000
太

4421
02:24:20,000 --> 02:24:21,000
太

4422
02:24:21,000 --> 02:24:22,000
Hardcore 的话

4423
02:24:22,000 --> 02:24:22,000
对

4424
02:24:22,000 --> 02:24:24,000
这个 ubuntu core

4425
02:24:24,000 --> 02:24:25,000
这个还比较

4426
02:24:25,000 --> 02:24:26,000
比较好玩

4427
02:24:26,000 --> 02:24:27,000
就问我自己是试了一下

4428
02:24:27,000 --> 02:24:28,000
还挺还

4429
02:24:28,000 --> 02:24:29,000
我觉得还不错吧

4430
02:24:29,000 --> 02:24:31,000
就那个理念也挺简单的

4431
02:24:31,000 --> 02:24:34,000
好吧

4432
02:24:34,000 --> 02:24:34,000
那我们

4433
02:24:34,000 --> 02:24:37,000
大概聊完了

4434
02:24:37,000 --> 02:24:39,000
这个最后一期的

4435
02:24:39,000 --> 02:24:40,000
sorry

4436
02:24:40,000 --> 02:24:42,000
2015 年第一期的

4437
02:24:42,000 --> 02:24:44,000
内核恐慌

4438
02:24:44,000 --> 02:24:45,000
我们今天的主题是

4439
02:24:45,000 --> 02:24:47,000
其实也是延伸了前两期的

4440
02:24:47,000 --> 02:24:48,000
life cycle management

4441
02:24:48,000 --> 02:24:50,000
我们今天讲的是

4442
02:24:50,000 --> 02:24:50,000
continuous management

4443
02:24:50,000 --> 02:24:50,000
continuous management

4444
02:24:50,000 --> 02:24:50,000
continuous management

4445
02:24:50,000 --> 02:24:50,000
continuous management

4446
02:24:50,000 --> 02:24:51,000
continuous management

4447
02:24:51,000 --> 02:24:51,000
continuization

4448
02:24:51,000 --> 02:24:51,000
continuization

4449
02:24:51,000 --> 02:24:53,000
就是

4450
02:24:53,000 --> 02:24:54,000
continuization

4451
02:24:54,000 --> 02:24:55,000
集装箱化

4452
02:24:55,000 --> 02:24:56,000
可以这么说吗

4453
02:24:56,000 --> 02:24:57,000
对

4454
02:24:57,000 --> 02:24:58,000
软件部署的集装箱化

4455
02:24:58,000 --> 02:24:59,000
以及 devops

4456
02:24:59,000 --> 02:25:02,000
我觉得我从今天开始

4457
02:25:02,000 --> 02:25:05,000
一定要每一期都说那个罐口

4458
02:25:05,000 --> 02:25:07,000
因为好像其他节目都说

4459
02:25:07,000 --> 02:25:08,000
我不说不太好

4460
02:25:08,000 --> 02:25:13,000
北美山地时间 2006 年 1 月 2 日下午

4461
02:25:13,000 --> 02:25:14,000
3 点 04 分 05 秒

4462
02:25:14,000 --> 02:25:16,000
您正在收听的是

4463
02:25:16,000 --> 02:25:17,000
您正在收听的是

4464
02:25:17,000 --> 02:25:19,000
IPM podcast 网络旗下的

4465
02:25:19,000 --> 02:25:21,000
IT 技术的

4466
02:25:21,000 --> 02:25:22,000
主题节目

4467
02:25:22,000 --> 02:25:23,000
内核恐慌

4468
02:25:23,000 --> 02:25:24,000
我们号称 hardcore

4469
02:25:24,000 --> 02:25:25,000
但是也没有干货

4470
02:25:25,000 --> 02:25:26,000
想听的人听

4471
02:25:26,000 --> 02:25:28,000
不想听的人就不要听

4472
02:25:28,000 --> 02:25:31,000
同时 IPM 旗下的其他无量 podcast

4473
02:25:31,000 --> 02:25:33,000
包括 softcore 技术主题节目

4474
02:25:33,000 --> 02:25:35,000
IT 公论

4475
02:25:35,000 --> 02:25:38,000
同样也是由 Rail 和另外一位

4476
02:25:38,000 --> 02:25:39,000
我们的制作人 Lawrence

4477
02:25:39,000 --> 02:25:40,000
一起主持

4478
02:25:40,000 --> 02:25:41,000
还有医疗主题节目

4479
02:25:41,000 --> 02:25:42,000
太一来了

4480
02:25:43,000 --> 02:25:46,000
美食节目未知道

4481
02:25:46,000 --> 02:25:48,000
以及不只谈艺术的艺术类节目

4482
02:25:48,000 --> 02:25:49,000
流行通信

4483
02:25:49,000 --> 02:25:51,000
它的英文名字叫做 pop dispatch

4484
02:25:51,000 --> 02:25:53,000
千万不要记错成出债分派

4485
02:25:53,000 --> 02:25:56,000
最后还有

4486
02:25:56,000 --> 02:25:58,000
其实我是非常推荐

4487
02:25:58,000 --> 02:26:00,000
流行通信这场节目的

4488
02:26:00,000 --> 02:26:03,000
就是我觉得尤其是死城们应该听一听

4489
02:26:03,000 --> 02:26:05,000
因为我和我朋友

4490
02:26:05,000 --> 02:26:07,000
唤醒一下脑中已经快要死去的艺术

4491
02:26:07,000 --> 02:26:08,000
感性那一部分是不是

4492
02:26:08,000 --> 02:26:09,000
对

4493
02:26:09,000 --> 02:26:11,000
就是我和我女朋友在听这个节目的时候

4494
02:26:11,000 --> 02:26:14,000
就说如果我们内核恐慌

4495
02:26:14,000 --> 02:26:17,000
有我们自己的一个 pattern 的话

4496
02:26:17,000 --> 02:26:18,000
或者一个怎么说

4497
02:26:18,000 --> 02:26:19,000
一个家辉一个族辉的话

4498
02:26:19,000 --> 02:26:21,000
那肯定到处都是

4499
02:26:21,000 --> 02:26:21,000
直线

4500
02:26:21,000 --> 02:26:25,000
所有地方都是 90 度角

4501
02:26:25,000 --> 02:26:28,000
但是如果你在听出债分派

4502
02:26:28,000 --> 02:26:29,000
pop dispatch

4503
02:26:29,000 --> 02:26:30,000
流行通信的时候

4504
02:26:30,000 --> 02:26:30,000
你会觉得

4505
02:26:30,000 --> 02:26:32,000
就有时候你会觉得

4506
02:26:32,000 --> 02:26:37,000
从一个死理型派的角度

4507
02:26:37,000 --> 02:26:38,000
会觉得主持人好像有点脱线

4508
02:26:38,000 --> 02:26:40,000
乱糟糟的

4509
02:26:40,000 --> 02:26:41,000
不知道在讲什么

4510
02:26:41,000 --> 02:26:43,000
可能这才是

4511
02:26:43,000 --> 02:26:46,000
我们所缺失的那一部分

4512
02:26:46,000 --> 02:26:46,000
让我们成为

4513
02:26:46,000 --> 02:26:49,000
让我们去更具有人情味的一部分

4514
02:26:49,000 --> 02:26:50,000
就是如果他们有

4515
02:26:50,000 --> 02:26:51,000
他们的主题

4516
02:26:51,000 --> 02:26:52,000
主题图案的话

4517
02:26:52,000 --> 02:26:54,000
可能是都是非常柔美的曲线

4518
02:26:54,000 --> 02:26:55,000
像云一样

4519
02:26:55,000 --> 02:26:57,000
对水云文

4520
02:26:57,000 --> 02:27:00,000
对所以我还是非常推荐各位

4521
02:27:00,000 --> 02:27:04,000
喜欢收听我们节目的听众的话

4522
02:27:04,000 --> 02:27:07,000
一定也一定要去听一下流行通信

4523
02:27:07,000 --> 02:27:09,000
但如果你不喜欢听我们节目的话

4524
02:27:09,000 --> 02:27:13,000
也非常欢迎您去听流行通信

4525
02:27:13,000 --> 02:27:15,000
对然后 ipn 还有一款节目

4526
02:27:15,000 --> 02:27:17,000
就是我也不知道在播什么的

4527
02:27:17,000 --> 02:27:19,000
无主题节目无次元

4528
02:27:19,000 --> 02:27:20,000
对没有固定时长

4529
02:27:20,000 --> 02:27:21,000
没有禁忌

4530
02:27:21,000 --> 02:27:22,000
没有主播

4531
02:27:22,000 --> 02:27:24,000
没有主题

4532
02:27:24,000 --> 02:27:25,000
无次元

4533
02:27:25,000 --> 02:27:26,000
好

4534
02:27:26,000 --> 02:27:28,000
欢迎收听本期内核国

4535
02:27:28,000 --> 02:27:30,000
对了还有个事情我们忘了说

4536
02:27:30,000 --> 02:27:33,000
非常高兴

4537
02:27:33,000 --> 02:27:35,000
这个 2014 年

4538
02:27:35,000 --> 02:27:36,000
就你们听到这期节目的时候

4539
02:27:36,000 --> 02:27:37,000
2014 年已经结束了

4540
02:27:37,000 --> 02:27:38,000
但是有一个

4541
02:27:38,000 --> 02:27:39,000
我们录这期节的时候

4542
02:27:39,000 --> 02:27:41,000
2014 年也结束了

4543
02:27:41,000 --> 02:27:41,000
是吗

4544
02:27:41,000 --> 02:27:43,000
对 2014 年已经结束了

4545
02:27:43,000 --> 02:27:46,000
不过我们在

4546
02:27:46,000 --> 02:27:47,000
我们节目

4547
02:27:47,000 --> 02:27:49,000
第八期了

4548
02:27:49,000 --> 02:27:50,000
在 2014 年

4549
02:27:50,000 --> 02:27:51,000
做了 77

4550
02:27:51,000 --> 02:27:53,000
然后非常高兴上

4551
02:27:53,000 --> 02:27:55,000
荣登苹果的这个

4552
02:27:55,000 --> 02:27:57,000
2014 这个活动的

4553
02:27:57,000 --> 02:27:59,000
推荐榜里面

4554
02:27:59,000 --> 02:28:00,000
对没错

4555
02:28:00,000 --> 02:28:01,000
其实

4556
02:28:01,000 --> 02:28:02,000
是干嘛的

4557
02:28:02,000 --> 02:28:05,000
就他大概是一个全球性的活动

4558
02:28:05,000 --> 02:28:05,000
就是

4559
02:28:05,000 --> 02:28:07,000
大家来学编程吧

4560
02:28:07,000 --> 02:28:08,000
对对对

4561
02:28:08,000 --> 02:28:09,000
推进这个

4562
02:28:09,000 --> 02:28:09,000
就是这个

4563
02:28:09,000 --> 02:28:13,000
就把编程作为通识教育的一部分

4564
02:28:13,000 --> 02:28:14,000
让更多人来能够接触他

4565
02:28:14,000 --> 02:28:15,000
而不是说

4566
02:28:15,000 --> 02:28:16,000
我是小白

4567
02:28:16,000 --> 02:28:17,000
我什么都不懂

4568
02:28:17,000 --> 02:28:18,000
不要告诉我那些什么东西

4569
02:28:18,000 --> 02:28:20,000
你们连奥巴马都就写加巴 Script 了

4570
02:28:20,000 --> 02:28:20,000
是吧

4571
02:28:20,000 --> 02:28:21,000
对

4572
02:28:21,000 --> 02:28:24,000
所以这个事情还是蛮值得高兴的

4573
02:28:24,000 --> 02:28:24,000
但是

4574
02:28:24,000 --> 02:28:24,000
对

4575
02:28:24,000 --> 02:28:25,000
有人说

4576
02:28:25,000 --> 02:28:26,000
咱们两个可以互相

4577
02:28:26,000 --> 02:28:27,000
互相

4578
02:28:27,000 --> 02:28:29,000
恭维一番

4579
02:28:29,000 --> 02:28:30,000
Unbelievable

4580
02:28:30,000 --> 02:28:31,000
You

4581
02:28:31,000 --> 02:28:32,000
Subject Name Here

4582
02:28:32,000 --> 02:28:34,000
Must be the pride of

4583
02:28:34,000 --> 02:28:34,000
Subject

4584
02:28:34,000 --> 02:28:35,000
Hometown Here

4585
02:28:35,000 --> 02:28:36,000
耶

4586
02:28:36,000 --> 02:28:37,000
耶

4587
02:28:37,000 --> 02:28:39,000
不过也有人说

4588
02:28:39,000 --> 02:28:40,000
我们这个

4589
02:28:40,000 --> 02:28:41,000
这么讲那么多

4590
02:28:41,000 --> 02:28:42,000
是不是对

4591
02:28:42,000 --> 02:28:45,000
对初学编程者太难了

4592
02:28:45,000 --> 02:28:46,000
我是这么想的

4593
02:28:46,000 --> 02:28:48,000
其实我们讲的很多概念

4594
02:28:48,000 --> 02:28:48,000
应该是

4595
02:28:48,000 --> 02:28:49,000
主要的目的

4596
02:28:49,000 --> 02:28:50,000
还是唤起大家

4597
02:28:50,000 --> 02:28:50,000
对

4598
02:28:50,000 --> 02:28:52,000
对这个的兴趣

4599
02:28:52,000 --> 02:28:54,000
我们有吗

4600
02:28:54,000 --> 02:28:55,000
有这个

4601
02:28:55,000 --> 02:28:56,000
我不知道

4602
02:28:56,000 --> 02:28:57,000
我希望是这样子

4603
02:28:57,000 --> 02:28:59,000
我也不知道

4604
02:28:59,000 --> 02:29:01,000
我觉得还是那句话

4605
02:29:01,000 --> 02:29:02,000
就是这款节目

4606
02:29:02,000 --> 02:29:03,000
我们想做就做

4607
02:29:03,000 --> 02:29:04,000
想听的人听

4608
02:29:04,000 --> 02:29:05,000
不想听的人就不想听

4609
02:29:05,000 --> 02:29:05,000
对

4610
02:29:05,000 --> 02:29:06,000
然后

4611
02:29:06,000 --> 02:29:07,000
Anyway

4612
02:29:07,000 --> 02:29:10,000
不过这个还是蛮可喜可贺的事情

4613
02:29:10,000 --> 02:29:12,000
做了几天

4614
02:29:12,000 --> 02:29:13,000
还是有

4615
02:29:13,000 --> 02:29:14,000
有什么

4616
02:29:14,000 --> 02:29:15,000
有所

4617
02:29:15,000 --> 02:29:17,000
被人认识

4618
02:29:17,000 --> 02:29:18,000
然后能够

4619
02:29:18,000 --> 02:29:18,000
对

4620
02:29:18,000 --> 02:29:19,000
被更多人知道

4621
02:29:19,000 --> 02:29:20,000
然后能拿到

4622
02:29:20,000 --> 02:29:20,000
对

4623
02:29:20,000 --> 02:29:21,000
回想 2014 年

4624
02:29:21,000 --> 02:29:24,000
觉得这件事情还是挺值得教的

4625
02:29:24,000 --> 02:29:24,000
对

4626
02:29:24,000 --> 02:29:26,000
那也可以贴个章

4627
02:29:26,000 --> 02:29:28,000
Our code recommended

4628
02:29:28,000 --> 02:29:30,000
耶

4629
02:29:30,000 --> 02:29:30,000
好了

4630
02:29:30,000 --> 02:29:31,000
好吧

4631
02:29:31,000 --> 02:29:32,000
今天我们到此为止了

4632
02:29:32,000 --> 02:29:33,000
下期再见

4633
02:29:33,000 --> 02:29:34,000
拜拜

4634
02:29:34,000 --> 02:29:34,000
再见

4635
02:29:34,000 --> 02:29:35,000
拜拜

