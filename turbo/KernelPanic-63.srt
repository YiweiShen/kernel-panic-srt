1
00:00:00,000 --> 00:00:02,000
我现在感觉耳机很有问题

2
00:00:02,000 --> 00:00:04,000
因为我现在是用的是 AirPods

3
00:00:04,000 --> 00:00:06,000
等一下我换一下

4
00:00:06,000 --> 00:00:08,000
不要用无线的

5
00:00:08,000 --> 00:00:09,000
找个有线的耳机

6
00:00:09,000 --> 00:00:10,000
不然会很不稳定的用

7
00:00:10,000 --> 00:00:12,000
主要是我手机没什么电

8
00:00:12,000 --> 00:00:14,000
行我换好了

9
00:00:14,000 --> 00:00:15,000
好不好意思

10
00:00:15,000 --> 00:00:20,000
所以这回苹果 12 的背上贴的充电就有用了

11
00:00:20,000 --> 00:00:21,000
就是那里可以去编充电

12
00:00:21,000 --> 00:00:23,000
然后下面插着有线耳机

13
00:00:23,000 --> 00:00:24,000
没有因为我买的是 mini

14
00:00:24,000 --> 00:00:25,000
然后这个电量就感觉超小

15
00:00:25,000 --> 00:00:29,000
用到一天晚上就差不多就不够了

16
00:00:29,000 --> 00:00:29,000
真的很差的吗

17
00:00:29,000 --> 00:00:32,000
我还想说那天我去店里试了一下

18
00:00:32,000 --> 00:00:33,000
那个 mini 的手感

19
00:00:33,000 --> 00:00:34,000
我觉得还挺不错的

20
00:00:34,000 --> 00:00:35,000
mini 是很好啊

21
00:00:35,000 --> 00:00:36,000
就是很好

22
00:00:36,000 --> 00:00:38,000
那它肯定电池就没有其他那么大嘛

23
00:00:38,000 --> 00:00:41,000
就是很纠结这个事情好烦

24
00:00:41,000 --> 00:00:43,000
它能不能把那个摄像头捡到只剩一个

25
00:00:43,000 --> 00:00:45,000
然后腾点空间给电池

26
00:00:45,000 --> 00:00:49,000
你去跟苹果说吧

27
00:00:49,000 --> 00:00:51,000
好了我们开始录吧

28
00:00:51,000 --> 00:00:51,000
嗯

29
00:00:51,000 --> 00:01:11,000
大家好

30
00:01:11,000 --> 00:01:13,000
今天是 2021 年的 3 月 16 号

31
00:01:13,000 --> 00:01:15,000
自弹自创的第 147 期

32
00:01:15,000 --> 00:01:18,000
同时也是内核恐慌的第 63 期

33
00:01:18,000 --> 00:01:21,000
这也是自弹自唱与内核恐慌的串台

34
00:01:21,000 --> 00:01:24,000
自弹自串的第 10 期

35
00:01:24,000 --> 00:01:26,000
自弹自唱是 The Type 旗下全球首家

36
00:01:26,000 --> 00:01:30,000
用华语制作的字体排应主题播客节目

37
00:01:30,000 --> 00:01:31,000
我是主播

38
00:01:31,000 --> 00:01:32,000
文川西班动营局 Eric

39
00:01:32,000 --> 00:01:33,000
我是主播

40
00:01:33,000 --> 00:01:34,000
黄埔下面清真语

41
00:01:34,000 --> 00:01:35,000
闲真语

42
00:01:35,000 --> 00:01:38,000
那个恐慌是一档

43
00:01:38,000 --> 00:01:41,000
大致以计算机科技为主题的娱乐 podcast

44
00:01:41,000 --> 00:01:42,000
我们号称硬核

45
00:01:42,000 --> 00:01:43,000
但是也没有什么干货

46
00:01:43,000 --> 00:01:44,000
想听人听

47
00:01:44,000 --> 00:01:45,000
不想听人就别听

48
00:01:45,000 --> 00:01:47,000
我们的网址是 pan.icu

49
00:01:47,000 --> 00:01:50,000
您可以在网站上找到订阅我们的节目

50
00:01:50,000 --> 00:01:51,000
订阅我们节目的方法

51
00:01:51,000 --> 00:01:53,000
以及联络我们的方式

52
00:01:53,000 --> 00:01:53,000
我是吴涛

53
00:01:53,000 --> 00:01:55,000
我是 Rail

54
00:01:55,000 --> 00:01:56,000
友台主播

55
00:01:56,000 --> 00:01:56,000
你们好

56
00:01:56,000 --> 00:01:59,000
我们居然已经开始做第 10 期的创台了

57
00:01:59,000 --> 00:02:00,000
两位数了

58
00:02:00,000 --> 00:02:02,000
托你们的福啊

59
00:02:02,000 --> 00:02:04,000
我们才能够保持这个更新的节奏

60
00:02:04,000 --> 00:02:06,000
没关系

61
00:02:06,000 --> 00:02:07,000
反正这期的话

62
00:02:07,000 --> 00:02:08,000
主要是吴涛在说

63
00:02:08,000 --> 00:02:10,000
我只负责听

64
00:02:10,000 --> 00:02:10,000
是这样吗

65
00:02:10,000 --> 00:02:11,000
我怎么

66
00:02:11,000 --> 00:02:13,000
为什么我事先没有得到通知

67
00:02:13,000 --> 00:02:15,000
现在你知道了

68
00:02:15,000 --> 00:02:17,000
所以让你写这个提纲嘛

69
00:02:17,000 --> 00:02:20,000
因为这次我们来创台的一个非常重要的主题

70
00:02:20,000 --> 00:02:23,000
宗师级程序员的字体排应几个方案

71
00:02:23,000 --> 00:02:27,000
我们要来终于可以来拜一拜我们的高德纳大先生

72
00:02:27,000 --> 00:02:28,000
是的

73
00:02:28,000 --> 00:02:30,000
其实我不知道你们两个

74
00:02:30,000 --> 00:02:34,000
就是我跟 Rail 都只是用 Latech 写过论文而已

75
00:02:34,000 --> 00:02:36,000
你们两个就是

76
00:02:36,000 --> 00:02:36,000
或者说

77
00:02:36,000 --> 00:02:39,000
不如我们四个人轮流来说一说

78
00:02:39,000 --> 00:02:42,000
怎么知道 Latech 或者说 Tek 这段事情的吧

79
00:02:42,000 --> 00:02:45,000
我先说吧

80
00:02:45,000 --> 00:02:48,000
我应该是在本科的时候知道了这个人

81
00:02:48,000 --> 00:02:49,000
他的事

82
00:02:49,000 --> 00:02:51,000
就是他写了这本书

83
00:02:51,000 --> 00:02:54,000
但是那个时候我对 Tek 这个东西还没有什么概念

84
00:02:54,000 --> 00:02:58,000
我大概是在本科的时候接触了 Web 编程

85
00:02:58,000 --> 00:03:01,000
然后学了什么 HTML 啊

86
00:03:01,000 --> 00:03:02,000
CSS 之类的

87
00:03:02,000 --> 00:03:06,000
然后那个时候正好是赶上了 Web 前段开发了一次革新吧

88
00:03:06,000 --> 00:03:07,000
就是在

89
00:03:07,000 --> 00:03:15,000
在我上大学之前 Web 开发基本上就是你在 Photoshop 或者是 whatever 什么 Dreamweaver 之类的地方里面

90
00:03:15,000 --> 00:03:16,000
做一个设计

91
00:03:16,000 --> 00:03:19,000
然后把这个设计切成很多小块

92
00:03:19,000 --> 00:03:23,000
然后这个设计工具会帮你转换成一个 table

93
00:03:23,000 --> 00:03:29,000
然后你用编程语言去等于轮流转换这个 table 里面的每一个块

94
00:03:29,000 --> 00:03:31,000
然后在我上大学之后

95
00:03:31,000 --> 00:03:37,000
就我大学毕业之后 Web 开发的标准变成了你要以语意的方式去描述整个文档的结构

96
00:03:37,000 --> 00:03:42,000
然后用 CSS 去改变每个文档的样式

97
00:03:42,000 --> 00:03:49,000
然后大概就是在这个时候我隐约听说了在桌面出版界也有这么一个东西就叫 Tek

98
00:03:49,000 --> 00:03:54,000
但是真正用到它还是到了德国之后写硕士论文的时候

99
00:03:54,000 --> 00:03:57,000
就大概明白了这个东西它的来历以及它的用处

100
00:03:57,000 --> 00:04:04,000
然后怎么说用自己对 HTML 和 CSS 的理解去使用它

101
00:04:04,000 --> 00:04:05,000
然后碰着头破血流

102
00:04:05,000 --> 00:04:08,000
然后在历经了坎坷之后终于把论文搞出来了

103
00:04:08,000 --> 00:04:12,000
但大概就是我跟 Tek 的全部的约约

104
00:04:12,000 --> 00:04:13,000
然后我在毕业之后

105
00:04:13,000 --> 00:04:16,000
2010 年刚刚加入 TIB 的时候

106
00:04:16,000 --> 00:04:18,000
对 TIB 的贡献之一

107
00:04:18,000 --> 00:04:22,000
就是我在 2010 年写过一篇 Computer Modern 的故事

108
00:04:22,000 --> 00:04:24,000
就是高德纳发明的

109
00:04:24,000 --> 00:04:24,000
不是他发明的

110
00:04:24,000 --> 00:04:27,000
他数字化了这款字体

111
00:04:27,000 --> 00:04:30,000
然后用来排他的这个 PLCP 的这本书

112
00:04:30,000 --> 00:04:33,000
这本书上基本上简短的解释了

113
00:04:33,000 --> 00:04:36,000
这个 LATIF 的整个的渊源

114
00:04:36,000 --> 00:04:37,000
各位如果有兴趣的话

115
00:04:37,000 --> 00:04:41,000
可以去看一下那个文章在 thetype.com

116
00:04:41,000 --> 00:04:44,000
然后你可以在上面搜 Computer Modern

117
00:04:44,000 --> 00:04:45,000
然后应该能搜到这篇文章

118
00:04:45,000 --> 00:04:48,000
是 2010 年 2 月 05 号写的

119
00:04:48,000 --> 00:04:51,000
当然我们又会把这篇文章的链接

120
00:04:51,000 --> 00:04:53,000
放到今天的 show notes 里面

121
00:04:53,000 --> 00:04:56,000
大家可以去看 2010 年时候的文章

122
00:04:56,000 --> 00:04:58,000
行我说完了

123
00:04:58,000 --> 00:05:00,000
那接下来谁

124
00:05:00,000 --> 00:05:00,000
REX

125
00:05:00,000 --> 00:05:02,000
不是 REX

126
00:05:02,000 --> 00:05:04,000
行系站长

127
00:05:04,000 --> 00:05:06,000
那个 Rail 你说一下

128
00:05:06,000 --> 00:05:09,000
我第一次接触

129
00:05:09,000 --> 00:05:12,000
应该是用 LATIF 写那个时候

130
00:05:12,000 --> 00:05:12,000
对等一下

131
00:05:12,000 --> 00:05:13,000
这玩意到底怎么念

132
00:05:13,000 --> 00:05:14,000
我们要不要先科普一下

133
00:05:14,000 --> 00:05:15,000
LATIF

134
00:05:15,000 --> 00:05:16,000
你念的是对的

135
00:05:16,000 --> 00:05:17,000
TEC

136
00:05:17,000 --> 00:05:18,000
是 LAT 不是 LAT

137
00:05:18,000 --> 00:05:19,000
对吧

138
00:05:19,000 --> 00:05:19,000
LAT

139
00:05:19,000 --> 00:05:21,000
反正我一直念 LATIF

140
00:05:21,000 --> 00:05:21,000
对

141
00:05:21,000 --> 00:05:23,000
其实有人念 LATIF

142
00:05:23,000 --> 00:05:25,000
但是一般我们都念 LATIF

143
00:05:25,000 --> 00:05:26,000
好的

144
00:05:26,000 --> 00:05:30,000
我当时是在上大学本科的时候

145
00:05:30,000 --> 00:05:32,000
然后写作业

146
00:05:32,000 --> 00:05:33,000
然后我

147
00:05:33,000 --> 00:05:34,000
因为我不是写字

148
00:05:34,000 --> 00:05:36,000
就是手写很丑嘛

149
00:05:36,000 --> 00:05:37,000
然后我就不想手写

150
00:05:37,000 --> 00:05:38,000
我都一直从大概

151
00:05:38,000 --> 00:05:41,000
应该从大学开始

152
00:05:41,000 --> 00:05:42,000
基本上教作业都没有手写过

153
00:05:42,000 --> 00:05:43,000
除了考试是必须手写的

154
00:05:43,000 --> 00:05:44,000
那个时候

155
00:05:44,000 --> 00:05:47,000
我都是用这个电脑排版好

156
00:05:47,000 --> 00:05:48,000
然后就去打印

157
00:05:48,000 --> 00:05:48,000
然后再教嘛

158
00:05:48,000 --> 00:05:50,000
然后后来

159
00:05:50,000 --> 00:05:51,000
是因为学科的

160
00:05:51,000 --> 00:05:53,000
就是你有几个课程的关系

161
00:05:53,000 --> 00:05:56,000
它会涉及到比较多的公式

162
00:05:56,000 --> 00:05:59,000
和这个就是数学的一些排版

163
00:05:59,000 --> 00:06:02,000
还有像一些这种图形啊什么的

164
00:06:02,000 --> 00:06:03,000
然后我就想说

165
00:06:03,000 --> 00:06:06,000
找一个特别好用的一个工具

166
00:06:06,000 --> 00:06:07,000
来解决这个问题嘛

167
00:06:07,000 --> 00:06:09,000
当时 Word 肯定是不行的

168
00:06:09,000 --> 00:06:09,000
对吧

169
00:06:09,000 --> 00:06:10,000
当时 Word 很久已经没有

170
00:06:10,000 --> 00:06:12,000
就是那个数学排版工具

171
00:06:12,000 --> 00:06:14,000
实在是太垃圾了

172
00:06:14,000 --> 00:06:16,000
所以后来就多多转转

173
00:06:16,000 --> 00:06:19,000
当时也在玩像那个 Linux 啊

174
00:06:19,000 --> 00:06:20,000
那些系统嘛

175
00:06:20,000 --> 00:06:22,000
然后就在找到了这么一个工具

176
00:06:22,000 --> 00:06:25,000
应该是受了谁的蛊惑来着

177
00:06:25,000 --> 00:06:26,000
我想想

178
00:06:26,000 --> 00:06:26,000
应该是王盈

179
00:06:26,000 --> 00:06:28,000
如果没错的话

180
00:06:28,000 --> 00:06:29,000
我没记错的话

181
00:06:29,000 --> 00:06:29,000
对

182
00:06:29,000 --> 00:06:31,000
当时他不是写了

183
00:06:31,000 --> 00:06:33,000
有几篇还影响挺深的

184
00:06:33,000 --> 00:06:33,000
一个文章

185
00:06:33,000 --> 00:06:34,000
其实就是在这个

186
00:06:34,000 --> 00:06:35,000
都说这个

187
00:06:35,000 --> 00:06:36,000
这个拉太和这个东西嘛

188
00:06:36,000 --> 00:06:37,000
然后我就去学了一下

189
00:06:37,000 --> 00:06:38,000
然后

190
00:06:38,000 --> 00:06:39,000
费了牛逼紫禁

191
00:06:39,000 --> 00:06:41,000
装上了一个这个

192
00:06:41,000 --> 00:06:42,000
我们叫什么

193
00:06:42,000 --> 00:06:43,000
一个是 distribution

194
00:06:43,000 --> 00:06:45,000
然后就开始用那个写作业

195
00:06:45,000 --> 00:06:47,000
然后后来是写毕业论文

196
00:06:47,000 --> 00:06:48,000
然后去国外上学

197
00:06:48,000 --> 00:06:49,000
写作业和毕业论文

198
00:06:49,000 --> 00:06:51,000
差不多也就这么干

199
00:06:51,000 --> 00:06:52,000
然后之后就再也没用过

200
00:06:52,000 --> 00:06:54,000
差不多是这么一个过程

201
00:06:54,000 --> 00:06:57,000
所以你的论文也是用拉太和写的

202
00:06:57,000 --> 00:06:59,000
我毕竟读 CS 嘛

203
00:06:59,000 --> 00:07:00,000
那肯定还是要

204
00:07:00,000 --> 00:07:01,000
对吧

205
00:07:01,000 --> 00:07:04,000
这两者之间有毕业的关联吗

206
00:07:04,000 --> 00:07:04,000
就是

207
00:07:04,000 --> 00:07:06,000
我相信大部分

208
00:07:06,000 --> 00:07:07,000
我们听众里面

209
00:07:07,000 --> 00:07:10,000
读 CS 的人也未必是用拉太和写的

210
00:07:10,000 --> 00:07:10,000
毕业论文

211
00:07:10,000 --> 00:07:12,000
那或者这么说吧

212
00:07:12,000 --> 00:07:14,000
如果你又想用拉太和写的写论文

213
00:07:14,000 --> 00:07:15,000
然后你又不是 CS 的

214
00:07:15,000 --> 00:07:17,000
其实是不是很尴尬

215
00:07:17,000 --> 00:07:18,000
那可不一定啊

216
00:07:18,000 --> 00:07:19,000
拉太和

217
00:07:19,000 --> 00:07:20,000
其实现在基本上

218
00:07:20,000 --> 00:07:23,000
你觉得现在拉太和最大的用途是在哪

219
00:07:23,000 --> 00:07:23,000
就

220
00:07:23,000 --> 00:07:25,000
我觉得是

221
00:07:25,000 --> 00:07:30,000
任何业界需要公式的地方

222
00:07:30,000 --> 00:07:31,000
但实际上

223
00:07:31,000 --> 00:07:33,000
Compute Science 并不是一个最需要公式的地方

224
00:07:33,000 --> 00:07:33,000
OK

225
00:07:33,000 --> 00:07:34,000
但 anyway

226
00:07:34,000 --> 00:07:35,000
那个时候我需要

227
00:07:35,000 --> 00:07:36,000
然后

228
00:07:36,000 --> 00:07:38,000
但我当时有一个

229
00:07:38,000 --> 00:07:39,000
但我们在学校外面租房子住嘛

230
00:07:39,000 --> 00:07:40,000
有一个室友

231
00:07:40,000 --> 00:07:42,000
他是读工程的

232
00:07:42,000 --> 00:07:43,000
就是那种 Engineering

233
00:07:43,000 --> 00:07:45,000
他好像也是用拉太和写

234
00:07:45,000 --> 00:07:46,000
毕业论文比较多

235
00:07:46,000 --> 00:07:47,000
因为他们论文也比较长

236
00:07:47,000 --> 00:07:49,000
有比较多复杂的计算的过程嘛

237
00:07:49,000 --> 00:07:51,000
所以他们也是用那个的

238
00:07:51,000 --> 00:07:52,000
所以反正就是

239
00:07:52,000 --> 00:07:54,000
都在用

240
00:07:54,000 --> 00:07:56,000
就反而是用 word 的那些是比较

241
00:07:56,000 --> 00:07:57,000
相对来说少一点点吧

242
00:07:57,000 --> 00:07:59,000
对

243
00:07:59,000 --> 00:08:01,000
郑宇你是怎么用上

244
00:08:01,000 --> 00:08:03,000
你是怎么接触到 Tech 的吧

245
00:08:03,000 --> 00:08:04,000
你介绍一下好了

246
00:08:04,000 --> 00:08:07,000
其实真瑜也是本科用

247
00:08:07,000 --> 00:08:09,000
拉太和写的论文

248
00:08:09,000 --> 00:08:10,000
怎么可能

249
00:08:10,000 --> 00:08:13,000
我觉得我应该

250
00:08:13,000 --> 00:08:15,000
我应该引用那个就是

251
00:08:15,000 --> 00:08:16,000
你们先聊

252
00:08:16,000 --> 00:08:17,000
我有点事先走

253
00:08:17,000 --> 00:08:19,000
我其实没有

254
00:08:19,000 --> 00:08:22,000
我其实至今没有用过 Tech

255
00:08:22,000 --> 00:08:25,000
来做任何事情吧

256
00:08:25,000 --> 00:08:25,000
应该说

257
00:08:25,000 --> 00:08:25,000
对

258
00:08:25,000 --> 00:08:27,000
我怎么知道 Tech

259
00:08:27,000 --> 00:08:29,000
我觉得我是因为先知道了你们

260
00:08:29,000 --> 00:08:30,000
所以才知道了 Tech

261
00:08:30,000 --> 00:08:33,000
这我们受宠若惊啊

262
00:08:33,000 --> 00:08:34,000
我们简直

263
00:08:34,000 --> 00:08:38,000
居然做到了什么新进火船的这样一个

264
00:08:38,000 --> 00:08:39,000
对我的 Tech 的认知

265
00:08:39,000 --> 00:08:40,000
其实是一个就是

266
00:08:40,000 --> 00:08:41,000
就像刚才

267
00:08:41,000 --> 00:08:43,000
瑞和吴涛也说的

268
00:08:43,000 --> 00:08:45,000
就是它是一个在公式领域

269
00:08:45,000 --> 00:08:46,000
非常有用的

270
00:08:46,000 --> 00:08:47,000
这样子的一个排版工具

271
00:08:47,000 --> 00:08:50,000
但其实我曾经大概在

272
00:08:50,000 --> 00:08:51,000
可能在五六年前吧

273
00:08:51,000 --> 00:08:52,000
一度有

274
00:08:52,000 --> 00:08:54,000
有想过要去用 Tech

275
00:08:54,000 --> 00:08:55,000
因为我当时有一个

276
00:08:55,000 --> 00:08:56,000
非常实际的需求

277
00:08:56,000 --> 00:08:57,000
就是我当时差不多

278
00:08:57,000 --> 00:08:59,000
每个季度都会有一个

279
00:08:59,000 --> 00:09:01,000
类似像

280
00:09:01,000 --> 00:09:03,000
内部刊物排版的这样一个工作

281
00:09:03,000 --> 00:09:05,000
那个刊物的页数非常的多

282
00:09:05,000 --> 00:09:06,000
大概是在千页

283
00:09:06,000 --> 00:09:09,000
这样子的一个数量级的

284
00:09:09,000 --> 00:09:10,000
所以我当时其实有想过

285
00:09:10,000 --> 00:09:11,000
要用 Tech 去做一个

286
00:09:11,000 --> 00:09:13,000
比较自动化的排版的流程

287
00:09:13,000 --> 00:09:15,000
但后来一直

288
00:09:15,000 --> 00:09:17,000
一直没有动力去做这个事情

289
00:09:17,000 --> 00:09:17,000
等等

290
00:09:17,000 --> 00:09:18,000
你说你每个月要排

291
00:09:18,000 --> 00:09:20,000
一千页的内部刊物

292
00:09:20,000 --> 00:09:21,000
每个季度左右

293
00:09:21,000 --> 00:09:21,000
对

294
00:09:21,000 --> 00:09:23,000
每个季度三个月左右

295
00:09:23,000 --> 00:09:24,000
每个季

296
00:09:24,000 --> 00:09:26,000
每三个月要排一千页

297
00:09:26,000 --> 00:09:27,000
Oh my God

298
00:09:27,000 --> 00:09:30,000
我不见心里涌起了一丝

299
00:09:30,000 --> 00:09:31,000
怎么说同情

300
00:09:31,000 --> 00:09:32,000
什么内容啊

301
00:09:32,000 --> 00:09:34,000
好奇的问一下

302
00:09:34,000 --> 00:09:36,000
是我当时在的一个团队

303
00:09:36,000 --> 00:09:38,000
我们自己做的一些出版

304
00:09:38,000 --> 00:09:40,000
其实这个大家可以找到的

305
00:09:40,000 --> 00:09:41,000
我当时在那个团队叫做政见

306
00:09:41,000 --> 00:09:43,000
然后我们的当时的出版物

307
00:09:43,000 --> 00:09:46,000
是以继刊或者半年刊的方式来发布的

308
00:09:46,000 --> 00:09:48,000
其实是将大家写的一些文章合起来

309
00:09:48,000 --> 00:09:50,000
当然这个一千页的开本

310
00:09:50,000 --> 00:09:52,000
是一个 A 5 左右的开本

311
00:09:52,000 --> 00:09:54,000
而且字号相对算是比较大的

312
00:09:54,000 --> 00:09:57,000
所以工作量可能没有那么的多吧

313
00:09:57,000 --> 00:09:59,000
但大概也有这样子的一个量子

314
00:09:59,000 --> 00:10:00,000
A 5 就是 A 4 的一半嘛

315
00:10:00,000 --> 00:10:02,000
一千页 A 5 那也有五百页的 A 4

316
00:10:02,000 --> 00:10:04,000
那也是非常厚的一本书

317
00:10:04,000 --> 00:10:06,000
对

318
00:10:06,000 --> 00:10:10,000
我知道真一直都在做政见

319
00:10:10,000 --> 00:10:13,000
但是我没有想到

320
00:10:13,000 --> 00:10:16,000
当时有每个季度一千多页的量

321
00:10:16,000 --> 00:10:19,000
因为我也没认真看

322
00:10:19,000 --> 00:10:20,000
有的时候会少一点

323
00:10:20,000 --> 00:10:21,000
可能几百页吧

324
00:10:21,000 --> 00:10:23,000
多的时候会比较多

325
00:10:23,000 --> 00:10:24,000
OK 你们继续

326
00:10:24,000 --> 00:10:26,000
Eric 来说一下吧

327
00:10:26,000 --> 00:10:26,000
好

328
00:10:26,000 --> 00:10:28,000
那你很对

329
00:10:28,000 --> 00:10:30,000
我也是在大学的时候

330
00:10:30,000 --> 00:10:32,000
第一次知道 Tech 的

331
00:10:32,000 --> 00:10:35,000
每次创展的时候都要说到

332
00:10:35,000 --> 00:10:38,000
我的大学的第二学试

333
00:10:38,000 --> 00:10:40,000
是计算机的这样一个黑历史

334
00:10:40,000 --> 00:10:45,000
但是我那时候第二学位的论文

335
00:10:45,000 --> 00:10:47,000
并不需要用那么多公式

336
00:10:47,000 --> 00:10:52,000
所以我们当时的第二学位的论文

337
00:10:52,000 --> 00:10:54,000
不是用 Tech 写的

338
00:10:54,000 --> 00:10:55,000
那我第一学位

339
00:10:55,000 --> 00:10:56,000
大家也知道我是学日语的

340
00:10:56,000 --> 00:10:58,000
那就更是不用大家都用 Word

341
00:10:58,000 --> 00:11:01,000
那我用 Tech 的是因为

342
00:11:01,000 --> 00:11:03,000
因为我高中也是学理科的

343
00:11:03,000 --> 00:11:06,000
所以就要做一些什么卷子之类的

344
00:11:06,000 --> 00:11:08,000
那些东西都是用 Word 排的公式

345
00:11:08,000 --> 00:11:09,000
然后觉得很难用

346
00:11:09,000 --> 00:11:11,000
到了大学本科以后

347
00:11:11,000 --> 00:11:13,000
有同学介绍说

348
00:11:13,000 --> 00:11:14,000
理工科的

349
00:11:14,000 --> 00:11:15,000
真的就是理工科同学的

350
00:11:15,000 --> 00:11:16,000
他们都用 Tech

351
00:11:16,000 --> 00:11:18,000
所以我就拿来用了

352
00:11:18,000 --> 00:11:19,000
可是这个东西太难用

353
00:11:19,000 --> 00:11:21,000
就是因为要组装

354
00:11:21,000 --> 00:11:22,000
就各种各样的包

355
00:11:22,000 --> 00:11:23,000
什么搞不清楚

356
00:11:23,000 --> 00:11:26,000
所以我当时就是为了解决临时的问题

357
00:11:26,000 --> 00:11:28,000
我干脆就是用一个 Tech

358
00:11:28,000 --> 00:11:31,000
先排出需要的公式

359
00:11:31,000 --> 00:11:33,000
然后生成 PDF 以后

360
00:11:33,000 --> 00:11:35,000
然后再把这个 PDF 转取以后

361
00:11:35,000 --> 00:11:36,000
再嵌到我

362
00:11:36,000 --> 00:11:37,000
平面是比如说我用那个

363
00:11:37,000 --> 00:11:39,000
Illustrate 给它嵌进来

364
00:11:39,000 --> 00:11:41,000
我就是为了排这个公式

365
00:11:41,000 --> 00:11:42,000
临时给它嵌进来而已

366
00:11:42,000 --> 00:11:44,000
我从来没有用 Tech

367
00:11:44,000 --> 00:11:47,000
就做个完整的一个文档

368
00:11:47,000 --> 00:11:49,000
或者就是中文的文档

369
00:11:49,000 --> 00:11:50,000
从来我从来没有做过

370
00:11:50,000 --> 00:11:52,000
我就是为了导出一个单

371
00:11:52,000 --> 00:11:54,000
单独的一个公式

372
00:11:54,000 --> 00:11:56,000
然后就生成一个东西

373
00:11:56,000 --> 00:11:57,000
就做过而已

374
00:11:57,000 --> 00:11:59,000
其实我要补充一下

375
00:11:59,000 --> 00:12:01,000
就刚才其实我们都一直在讲

376
00:12:01,000 --> 00:12:05,000
似乎因为为了这个数学公式才用的这个

377
00:12:05,000 --> 00:12:07,000
我后来我刚翻了一下

378
00:12:07,000 --> 00:12:12,000
我之前写的那些什么作业和论文的那些文档

379
00:12:12,000 --> 00:12:14,000
刚刚还在电脑里面

380
00:12:14,000 --> 00:12:17,000
其实发现数学公式也不算特别多

381
00:12:17,000 --> 00:12:21,000
但是其实有很多像什么程序代码

382
00:12:21,000 --> 00:12:22,000
你知道那个就是读 CS

383
00:12:22,000 --> 00:12:24,000
它很多是那种伪代码

384
00:12:24,000 --> 00:12:25,000
并不是真的那种

385
00:12:25,000 --> 00:12:28,000
你要用这个就是等宽字体排音的那种

386
00:12:28,000 --> 00:12:30,000
真的我们可以编译的那种代码

387
00:12:30,000 --> 00:12:31,000
它很多是伪代码

388
00:12:31,000 --> 00:12:32,000
是不等宽

389
00:12:32,000 --> 00:12:33,000
然后有各种很多稀奇古怪的

390
00:12:33,000 --> 00:12:34,000
箭头符号啊

391
00:12:34,000 --> 00:12:35,000
那种东西的

392
00:12:35,000 --> 00:12:36,000
比如典型的一个

393
00:12:36,000 --> 00:12:38,000
比如说这个 grammar 的那些

394
00:12:38,000 --> 00:12:39,000
lexer 那些东西

395
00:12:39,000 --> 00:12:41,000
然后还有一个就是

396
00:12:41,000 --> 00:12:42,000
当时我想起来了

397
00:12:42,000 --> 00:12:43,000
当时为了用这个东西

398
00:12:43,000 --> 00:12:45,000
是为了画那个

399
00:12:45,000 --> 00:12:47,000
这个叫做什么呢

400
00:12:47,000 --> 00:12:50,000
自动机的那个图形

401
00:12:50,000 --> 00:12:52,000
然后当时用了一个

402
00:12:52,000 --> 00:12:54,000
那个就是 Latec

403
00:12:54,000 --> 00:12:56,000
有一个专门这种

404
00:12:56,000 --> 00:12:57,000
因为 Latec 比较灵活嘛

405
00:12:57,000 --> 00:12:58,000
它可以做很多的这个插件

406
00:12:58,000 --> 00:13:00,000
当时有一个非常好用的插件

407
00:13:00,000 --> 00:13:03,000
应该叫做 T-I-K-Z

408
00:13:03,000 --> 00:13:04,000
如果没记错名字的话

409
00:13:04,000 --> 00:13:05,000
Tix 对

410
00:13:05,000 --> 00:13:05,000
对

411
00:13:05,000 --> 00:13:06,000
怎么念

412
00:13:06,000 --> 00:13:07,000
我不知道

413
00:13:07,000 --> 00:13:09,000
反正它的就是四个字母

414
00:13:09,000 --> 00:13:09,000
T-I-K-Z

415
00:13:09,000 --> 00:13:10,000
应该是 Tix

416
00:13:10,000 --> 00:13:11,000
我念 Tix

417
00:13:11,000 --> 00:13:11,000
Tix

418
00:13:11,000 --> 00:13:12,000
对

419
00:13:12,000 --> 00:13:13,000
它就非常灵活

420
00:13:13,000 --> 00:13:14,000
等于是一套

421
00:13:14,000 --> 00:13:15,000
类似于

422
00:13:15,000 --> 00:13:16,000
您可以认为是一个

423
00:13:16,000 --> 00:13:19,000
可编程的绘图的一个语言

424
00:13:19,000 --> 00:13:19,000
在

425
00:13:19,000 --> 00:13:21,000
然后嵌在那个 Latec 里面

426
00:13:21,000 --> 00:13:23,000
就可以做各种各样的

427
00:13:23,000 --> 00:13:24,000
非常精美的图形

428
00:13:24,000 --> 00:13:25,000
比如说你要

429
00:13:25,000 --> 00:13:27,000
这个箭头转个 35 度半

430
00:13:27,000 --> 00:13:28,000
然后再和另外一个

431
00:13:28,000 --> 00:13:30,000
圆圈连起来

432
00:13:30,000 --> 00:13:31,000
再穿过那个圆心

433
00:13:31,000 --> 00:13:32,000
这种之类的事情

434
00:13:32,000 --> 00:13:33,000
就是你用任何

435
00:13:33,000 --> 00:13:35,000
其他的现成的工具

436
00:13:35,000 --> 00:13:36,000
都是没法去描述

437
00:13:36,000 --> 00:13:36,000
这个东西的

438
00:13:36,000 --> 00:13:37,000
精确描述

439
00:13:37,000 --> 00:13:38,000
所以

440
00:13:38,000 --> 00:13:40,000
就是当时就

441
00:13:40,000 --> 00:13:42,000
其实公式倒并不是我

442
00:13:42,000 --> 00:13:44,000
用它的最核心的一个事情

443
00:13:44,000 --> 00:13:45,000
我后来发现

444
00:13:45,000 --> 00:13:46,000
然后还有一个事

445
00:13:46,000 --> 00:13:47,000
就是刚才

446
00:13:47,000 --> 00:13:48,000
曾宇也提到这个

447
00:13:48,000 --> 00:13:49,000
让我也想起来

448
00:13:49,000 --> 00:13:50,000
就是如果说你的那个文档

449
00:13:50,000 --> 00:13:51,000
不要说 1000 页了

450
00:13:51,000 --> 00:13:54,000
就超过比如说 100 页吧

451
00:13:54,000 --> 00:13:55,000
然后你用这种任何

452
00:13:55,000 --> 00:13:57,000
这种所见即所得的编辑工具

453
00:13:57,000 --> 00:13:58,000
Word 也好

454
00:13:58,000 --> 00:14:00,000
当时还试过各种什么

455
00:14:00,000 --> 00:14:01,000
Open Office

456
00:14:01,000 --> 00:14:02,000
这种东西

457
00:14:02,000 --> 00:14:03,000
就是它的那个性能

458
00:14:03,000 --> 00:14:04,000
是直线下降的

459
00:14:04,000 --> 00:14:05,000
就是已经超过几十

460
00:14:05,000 --> 00:14:07,000
就三位数的页

461
00:14:07,000 --> 00:14:08,000
就基本上没法用了

462
00:14:08,000 --> 00:14:09,000
那个时候我记得用的

463
00:14:09,000 --> 00:14:11,000
那个电脑的性能也一般

464
00:14:11,000 --> 00:14:14,000
然后如果是特别长的文档

465
00:14:14,000 --> 00:14:14,000
你一次编

466
00:14:14,000 --> 00:14:15,000
因为那个 Latex

467
00:14:15,000 --> 00:14:16,000
每次叫编译一次

468
00:14:16,000 --> 00:14:18,000
才能输出那个 PDF 的结果

469
00:14:18,000 --> 00:14:20,000
编译时间也还蛮长的

470
00:14:20,000 --> 00:14:20,000
后来就是分

471
00:14:20,000 --> 00:14:22,000
分成那个章节

472
00:14:22,000 --> 00:14:22,000
对吧

473
00:14:22,000 --> 00:14:23,000
我在当时

474
00:14:23,000 --> 00:14:24,000
我在写这个章节

475
00:14:24,000 --> 00:14:24,000
我就

476
00:14:24,000 --> 00:14:26,000
我就只编译当前那个章节

477
00:14:26,000 --> 00:14:28,000
然后最后再合在一起的时候

478
00:14:28,000 --> 00:14:29,000
我在这个

479
00:14:29,000 --> 00:14:30,000
合在一起再编译

480
00:14:30,000 --> 00:14:31,000
这样就可以节省那个时间

481
00:14:31,000 --> 00:14:33,000
虽然也不是所见即所得

482
00:14:33,000 --> 00:14:34,000
但是整个它的那个

483
00:14:34,000 --> 00:14:35,000
feedback loop

484
00:14:35,000 --> 00:14:37,000
就是还是比较比较快的

485
00:14:38,000 --> 00:14:38,000
对

486
00:14:38,000 --> 00:14:39,000
就实际上你的书

487
00:14:39,000 --> 00:14:41,000
大到一个规模的时候

488
00:14:41,000 --> 00:14:42,000
你就必须用

489
00:14:42,000 --> 00:14:43,000
管理原代码的方式

490
00:14:43,000 --> 00:14:43,000
来管理它

491
00:14:43,000 --> 00:14:46,000
其实作家也

492
00:14:46,000 --> 00:14:46,000
从而面临着

493
00:14:46,000 --> 00:14:47,000
类似一个问题

494
00:14:47,000 --> 00:14:48,000
比如说你会遇到

495
00:14:48,000 --> 00:14:49,000
什么版本控制

496
00:14:49,000 --> 00:14:51,000
或者是插图方面的问题

497
00:14:51,000 --> 00:14:52,000
这个时候

498
00:14:52,000 --> 00:14:52,000
所见即所得

499
00:14:52,000 --> 00:14:53,000
实际上并不是一个

500
00:14:53,000 --> 00:14:55,000
非常好的解决方式

501
00:14:55,000 --> 00:14:58,000
就是总结一下

502
00:14:58,000 --> 00:15:00,000
刚才大家的自我描述

503
00:15:00,000 --> 00:15:01,000
我们会发现

504
00:15:01,000 --> 00:15:02,000
公式实际上是

505
00:15:02,000 --> 00:15:04,000
Tech 的一个 killer app

506
00:15:04,000 --> 00:15:06,000
这其实跟我现在观察也相似

507
00:15:06,000 --> 00:15:11,000
就是 Latech 虽然是一个非常怎么说高大上的系统

508
00:15:11,000 --> 00:15:19,000
但是它目前它的发展的这样一个定位实际上是在一个非常精细的领域

509
00:15:19,000 --> 00:15:22,000
就是公式编辑

510
00:15:22,000 --> 00:15:25,000
以及部分的插图方面

511
00:15:25,000 --> 00:15:28,000
你说我们现在这么多出版物

512
00:15:28,000 --> 00:15:30,000
有哪个出版物

513
00:15:30,000 --> 00:15:33,000
你听说是用纯粹用 Latech 来编排的吗

514
00:15:33,000 --> 00:15:34,000
好像也没有

515
00:15:34,000 --> 00:15:37,000
Latech 现在可能是一个个人出版的

516
00:15:37,000 --> 00:15:39,000
specialize 的一个巅峰

517
00:15:39,000 --> 00:15:41,000
但是我觉得它在公共领域

518
00:15:41,000 --> 00:15:43,000
好像没有获得那么广泛的应用

519
00:15:43,000 --> 00:15:45,000
至少你跟什么 pagemaker 或者是

520
00:15:45,000 --> 00:15:48,000
这个就是看领域了

521
00:15:48,000 --> 00:15:51,000
反正我觉得理工科类的还有吧

522
00:15:51,000 --> 00:15:55,000
因为理工科类的所有的论文啊还有那些期刊的话

523
00:15:55,000 --> 00:15:58,000
它既收 Latech 的论文

524
00:15:58,000 --> 00:16:00,000
它自己出的话也是用 Latech 出的嘛

525
00:16:00,000 --> 00:16:01,000
就是期刊

526
00:16:01,000 --> 00:16:03,000
然后在日本的话

527
00:16:03,000 --> 00:16:05,000
像比如说什么理工科类字典啊

528
00:16:05,000 --> 00:16:07,000
它整本字典都是用 Latech 出的

529
00:16:07,000 --> 00:16:08,000
哦真的啊

530
00:16:08,000 --> 00:16:10,000
整本字典是用 Latech 来做的

531
00:16:10,000 --> 00:16:11,000
对有的

532
00:16:11,000 --> 00:16:12,000
在日本是有的

533
00:16:12,000 --> 00:16:17,000
研波数学词典的第四版就是全部都用那个 Latech 写的

534
00:16:17,000 --> 00:16:17,000
哦

535
00:16:17,000 --> 00:16:22,000
如果说确切的话是 pLatech 的 2 e 那个版本

536
00:16:22,000 --> 00:16:23,000
那个做的

537
00:16:23,000 --> 00:16:25,000
那首先因为它是字典嘛

538
00:16:25,000 --> 00:16:27,000
然后肯定是有一个批处理的东西嘛

539
00:16:27,000 --> 00:16:30,000
因为你知道字典的它这个每个词条

540
00:16:30,000 --> 00:16:33,000
它是非常有规范化的一个 format 的一个东西嘛

541
00:16:33,000 --> 00:16:34,000
然后它又是理工类字的

542
00:16:34,000 --> 00:16:35,000
里面又有很多公式嘛

543
00:16:35,000 --> 00:16:36,000
对

544
00:16:36,000 --> 00:16:40,000
就我的理解是就是很多人入文 Latech 就是

545
00:16:40,000 --> 00:16:41,000
比如说他要写个论文

546
00:16:41,000 --> 00:16:43,000
但是大部分写论文的人

547
00:16:43,000 --> 00:16:46,000
就是我们说 90%的人写了论文之后

548
00:16:46,000 --> 00:16:49,000
可能就不会再写第二次论文了

549
00:16:49,000 --> 00:16:52,000
就他对于很多人来说 Latech 的学习过程

550
00:16:52,000 --> 00:16:54,000
可能是一个一生一次的事情

551
00:16:54,000 --> 00:16:56,000
就是大概跟追姑娘差不多

552
00:16:56,000 --> 00:16:59,000
你可能追一次你就不用再追第二次了

553
00:16:59,000 --> 00:17:03,000
但是真正会一直把 Latech 用不下去的人

554
00:17:03,000 --> 00:17:05,000
大部分都是会寄身学术界的

555
00:17:05,000 --> 00:17:07,000
或者是学术出版界的

556
00:17:07,000 --> 00:17:11,000
那这非学术界基本上不会有这种

557
00:17:11,000 --> 00:17:14,000
就是工业化或者是这个产业化的需求嘛

558
00:17:14,000 --> 00:17:16,000
除非你是在排版行业生活的

559
00:17:16,000 --> 00:17:19,000
那基本上不会有这个需求

560
00:17:19,000 --> 00:17:22,000
就是我觉得你一个人写论文

561
00:17:22,000 --> 00:17:25,000
其实就大概是一个个人出版的这么一个巅峰了

562
00:17:25,000 --> 00:17:29,000
你写一个了不起三五百页的论文

563
00:17:29,000 --> 00:17:30,000
毕业级别

564
00:17:30,000 --> 00:17:35,000
对这已经是巅峰级别的一个 Latech 的应用了

565
00:17:35,000 --> 00:17:39,000
然后在个人出版领域吧

566
00:17:39,000 --> 00:17:42,000
但是在公共出版领域可能一本数学词典

567
00:17:42,000 --> 00:17:45,000
而且我觉得数学词典用 Latech 的一个很大领域

568
00:17:45,000 --> 00:17:46,000
也是因为公式嘛

569
00:17:46,000 --> 00:17:50,000
就是我们是不是应该还是跟就讲稿来

570
00:17:50,000 --> 00:17:52,000
我觉得好像有点带天了

571
00:17:52,000 --> 00:17:53,000
没关系

572
00:17:53,000 --> 00:17:56,000
这个因为我们是创台节目

573
00:17:56,000 --> 00:17:59,000
那说实话从自弹之上这边过来的听众呢

574
00:17:59,000 --> 00:18:00,000
很多都是设计师嘛

575
00:18:00,000 --> 00:18:02,000
虽然他们就从来就没有接触到

576
00:18:02,000 --> 00:18:05,000
也不知道 Latech 是个什么东西

577
00:18:05,000 --> 00:18:08,000
所以呢我觉得还是得从头到尾给大家解释一下

578
00:18:08,000 --> 00:18:09,000
然后呢刚才也说了嘛

579
00:18:09,000 --> 00:18:12,000
因为这个东西挺局限于这个理工科类的嘛

580
00:18:12,000 --> 00:18:14,000
那其他领域的人可能也都不知道

581
00:18:14,000 --> 00:18:17,000
即使是理工科类的朋友们

582
00:18:17,000 --> 00:18:20,000
他们可能就一辈子也就是为了写论文用一下而已

583
00:18:20,000 --> 00:18:21,000
然后之后就再也没用过

584
00:18:21,000 --> 00:18:25,000
对这个前后果可能也不是很清楚

585
00:18:25,000 --> 00:18:30,000
对所以还是要从我们的大师高德纳新顺开说起吧

586
00:18:30,000 --> 00:18:31,000
考古开始

587
00:18:31,000 --> 00:18:35,000
行那我来吧

588
00:18:35,000 --> 00:18:38,000
我们今天这个 podcast 标题

589
00:18:38,000 --> 00:18:40,000
所谓宗师级程序员

590
00:18:40,000 --> 00:18:41,000
其实指的就是一个人

591
00:18:41,000 --> 00:18:44,000
这个人叫做 Donald E. Knut

592
00:18:44,000 --> 00:18:46,000
他有一个中文名叫做高德纳

593
00:18:46,000 --> 00:18:48,000
他从 1969 年开始写一本书

594
00:18:48,000 --> 00:18:52,000
这本书叫做 The Art of Computer Programming

595
00:18:52,000 --> 00:18:55,000
这本书的简称是 T-A-O-C-P

596
00:18:55,000 --> 00:18:57,000
他到现在应该还没写完

597
00:18:57,000 --> 00:18:58,000
据我所知

598
00:18:58,000 --> 00:18:59,000
还没写完

599
00:18:59,000 --> 00:19:01,000
这本书是有中益版的

600
00:19:01,000 --> 00:19:02,000
就是各位有兴趣的话

601
00:19:02,000 --> 00:19:04,000
可以在网上看一下预览的

602
00:19:04,000 --> 00:19:04,000
有吗

603
00:19:04,000 --> 00:19:06,000
有中益版

604
00:19:06,000 --> 00:19:06,000
我都不知道

605
00:19:06,000 --> 00:19:06,000
对

606
00:19:06,000 --> 00:19:09,000
我在中国应该是买了中益版的第一卷

607
00:19:09,000 --> 00:19:10,000
这样

608
00:19:10,000 --> 00:19:12,000
然后他在 1969 年的时候

609
00:19:12,000 --> 00:19:14,000
开始写这本书

610
00:19:14,000 --> 00:19:18,000
第一卷的牌印用的是 Monotype 的牌子机

611
00:19:18,000 --> 00:19:20,000
就是那个时候是完全机械的牌子机

612
00:19:20,000 --> 00:19:21,000
对吧

613
00:19:21,000 --> 00:19:22,000
自动驻牌机

614
00:19:22,000 --> 00:19:22,000
对

615
00:19:22,000 --> 00:19:25,000
一个非常硬核的这么一个

616
00:19:25,000 --> 00:19:27,000
就他很喜欢 Monotype 牌子机

617
00:19:27,000 --> 00:19:30,000
然后他是当时在美国的 Monotype 牌子机牌的

618
00:19:30,000 --> 00:19:32,000
然后他第二卷什么时候写好的呢

619
00:19:32,000 --> 00:19:32,000
是七年

620
00:19:32,000 --> 00:19:34,000
七年之后才写好

621
00:19:34,000 --> 00:19:37,000
七年之后是 1976 年

622
00:19:38,000 --> 00:19:38,000
不对

623
00:19:38,000 --> 00:19:40,000
不对

624
00:19:40,000 --> 00:19:42,000
1976 年

625
00:19:42,000 --> 00:19:44,000
他是第二卷重牌的时候

626
00:19:44,000 --> 00:19:45,000
对

627
00:19:45,000 --> 00:19:45,000
OK

628
00:19:45,000 --> 00:19:48,000
那就是第二卷的一个 revision 完成的时候

629
00:19:48,000 --> 00:19:50,000
他不得不转向激光照

630
00:19:50,000 --> 00:19:52,000
不是激光照

631
00:19:52,000 --> 00:19:54,000
就是普通的这个照相照牌机

632
00:19:54,000 --> 00:19:55,000
照相排音机来排版

633
00:19:55,000 --> 00:20:00,000
但是他拿到那个叫所谓 Galley Proof

634
00:20:00,000 --> 00:20:01,000
就是样板的时候

635
00:20:01,000 --> 00:20:04,000
他大概说了一句话

636
00:20:04,000 --> 00:20:05,000
就是 Black

637
00:20:05,000 --> 00:20:08,000
就这么一个感叹词吧

638
00:20:08,000 --> 00:20:10,000
就是觉得我靠这是什么

639
00:20:10,000 --> 00:20:14,000
这句话的翻译叫这什么屎

640
00:20:14,000 --> 00:20:18,000
就是这个我去这种感觉

641
00:20:18,000 --> 00:20:22,000
然后他非常失望

642
00:20:22,000 --> 00:20:25,000
以至于他做一件只有宗师级的程序员能做的事情

643
00:20:25,000 --> 00:20:29,000
就是他决定自己开发一套系统来完成排版这件事情

644
00:20:29,000 --> 00:20:31,000
就是 from scratch

645
00:20:31,000 --> 00:20:35,000
然后他首先他发明了一种编程员

646
00:20:35,000 --> 00:20:37,000
这种编程员叫 web

647
00:20:37,000 --> 00:20:41,000
就是跟我们那个万维网 web 没有关联

648
00:20:41,000 --> 00:20:43,000
他就叫 web 这种编程员

649
00:20:43,000 --> 00:20:45,000
然后他用这种编程员

650
00:20:45,000 --> 00:20:47,000
首先开发了一种字体

651
00:20:47,000 --> 00:20:49,000
这种字体叫 metafont

652
00:20:49,000 --> 00:20:53,000
不他开发了一种用于画字体的系统

653
00:20:53,000 --> 00:20:54,000
叫做 metafont

654
00:20:54,000 --> 00:20:59,000
meta 这个前缀就是什么什么的什么什么

655
00:20:59,000 --> 00:21:00,000
比如说我叫 metafox

656
00:21:00,000 --> 00:21:01,000
就是 fox 的 fox

657
00:21:01,000 --> 00:21:03,000
然后他这个 metafont 就是 font 的 font

658
00:21:03,000 --> 00:21:06,000
那么 metafont 的用处就是

659
00:21:06,000 --> 00:21:07,000
你用一个数学公式

660
00:21:07,000 --> 00:21:09,000
类似于数学公式的方式描述出

661
00:21:09,000 --> 00:21:12,000
比如说一个字母的几个点

662
00:21:12,000 --> 00:21:14,000
它们之间的相对位置

663
00:21:14,000 --> 00:21:17,000
比如说我说 m 这个字母的相对位置是

664
00:21:17,000 --> 00:21:20,000
下面的三个点彼此的距离是一样的

665
00:21:20,000 --> 00:21:23,000
然后上面的两个点跟下面的三个点是怎么相连的

666
00:21:23,000 --> 00:21:24,000
OK

667
00:21:24,000 --> 00:21:27,000
然后 metafont 可以帮你生成出这个字体的

668
00:21:27,000 --> 00:21:32,000
怎么说点阵化的表示来

669
00:21:32,000 --> 00:21:33,000
这是 metafont

670
00:21:33,000 --> 00:21:36,000
然后他用 web 写了另外一套系统

671
00:21:36,000 --> 00:21:37,000
就叫做 tech

672
00:21:37,000 --> 00:21:40,000
然后这个 tech 的功能呢

673
00:21:40,000 --> 00:21:45,000
就是把你的文章排列出一个

674
00:21:45,000 --> 00:21:47,000
可以用于打印的格式来

675
00:21:47,000 --> 00:21:49,000
这个格式叫做 DVI

676
00:21:49,000 --> 00:21:53,000
然后他用自己发明的这套工具来排了自己的书

677
00:21:53,000 --> 00:21:54,000
大概就是这么一个

678
00:21:54,000 --> 00:21:57,000
听起来好像没有那么怎么样

679
00:21:57,000 --> 00:21:59,000
但是在我们看来就是一个武学宗师

680
00:21:59,000 --> 00:22:01,000
开创了一个门派

681
00:22:01,000 --> 00:22:03,000
然后专门拿来做一件事情这么一个级别

682
00:22:03,000 --> 00:22:07,000
然后他这套系统呢就从此开源了

683
00:22:07,000 --> 00:22:09,000
然后广为流传

684
00:22:09,000 --> 00:22:10,000
一直活跃到今天

685
00:22:10,000 --> 00:22:13,000
并且这中间有一个比较推波助澜的事情

686
00:22:13,000 --> 00:22:15,000
就是美国数学学会 AMS

687
00:22:15,000 --> 00:22:22,000
等于说签订了 tech 就是他们的排数学公式的这么一个工具

688
00:22:22,000 --> 00:22:26,000
所以导致基本上整个数学界就采用了 tech 这套东西

689
00:22:26,000 --> 00:22:30,000
那数学我们知道实际上是条条大陆通向数学

690
00:22:30,000 --> 00:22:37,000
所以反过来导致整个科学界基本上在你在使用这个公式的时候都一定会碰到 tech

691
00:22:37,000 --> 00:22:41,000
然后大概现在的状况就是这样了

692
00:22:41,000 --> 00:22:44,000
就是 tech 仍旧是一个被维护的这么一个程序

693
00:22:44,000 --> 00:22:46,000
当然它已经有点过时了

694
00:22:46,000 --> 00:22:47,000
这个我们一会儿会提到

695
00:22:47,000 --> 00:22:53,000
但是直到现在它都是在一个稳定维护并且发行中的这么一个程序

696
00:22:53,000 --> 00:22:57,000
这个程序的历史可以追溯到上个世纪的 70 年代

697
00:22:57,000 --> 00:23:00,000
但是就是这么一个这么一个过程

698
00:23:00,000 --> 00:23:04,000
然后呃有一个就是我在 TIB 上写的那篇文章

699
00:23:04,000 --> 00:23:05,000
Compute Modern

700
00:23:05,000 --> 00:23:09,000
大家如果去看的话会发现那个字体可能有点眼熟

701
00:23:09,000 --> 00:23:13,000
因为如果你 ever 看过一篇比较正式的论文的话

702
00:23:13,000 --> 00:23:15,000
那么它有很大的可能性

703
00:23:15,000 --> 00:23:17,000
现在我觉得可能没那么流行

704
00:23:17,000 --> 00:23:19,000
但是至少在比如说十年前或者五年前

705
00:23:19,000 --> 00:23:21,000
你去看任何一篇论文

706
00:23:21,000 --> 00:23:24,000
它有可能有八成的概率是用 Compute Modern 排的

707
00:23:24,000 --> 00:23:25,000
所以当你看到一篇文论文

708
00:23:25,000 --> 00:23:27,000
它是用 Compute Modern 来排的话

709
00:23:27,000 --> 00:23:29,000
那它有很大很大的概率

710
00:23:29,000 --> 00:23:30,000
就是用 ATAC 来写

711
00:23:30,000 --> 00:23:32,000
大概是这么一个状况

712
00:23:32,000 --> 00:23:35,000
我跟大家补充一下就是这个时间点

713
00:23:35,000 --> 00:23:40,000
首先高德纳先生他现年 83 岁

714
00:23:40,000 --> 00:23:43,000
所以大家首先要想到这是一位老先生

715
00:23:43,000 --> 00:23:44,000
而且还健在

716
00:23:44,000 --> 00:23:45,000
对

717
00:23:45,000 --> 00:23:49,000
他还接着写他那套计算机程序艺术

718
00:23:49,000 --> 00:23:52,000
他本来想是说一共出 7 卷是吧

719
00:23:52,000 --> 00:23:56,000
结果后来他现在写第四卷开始写分册了

720
00:23:56,000 --> 00:23:57,000
所以不知道他一共要出多少本

721
00:23:57,000 --> 00:24:00,000
然后这个时间点呢

722
00:24:00,000 --> 00:24:02,000
如果是我们自团自探听众呢

723
00:24:02,000 --> 00:24:04,000
可能知道我在节目里面讲过很多次

724
00:24:04,000 --> 00:24:05,000
就是我们在做印刷的时候

725
00:24:05,000 --> 00:24:08,000
整个技术有三大技术革新嘛

726
00:24:08,000 --> 00:24:11,000
就是从签字到照牌到现在的桌面出版

727
00:24:11,000 --> 00:24:16,000
那么这个事情发生在美国的六七十年代

728
00:24:16,000 --> 00:24:19,000
其实呢就是当时从这个金属活字

729
00:24:19,000 --> 00:24:22,000
到这个照相牌版转变的这样一个过程

730
00:24:22,000 --> 00:24:25,000
高老先生他当时出卷

731
00:24:25,000 --> 00:24:26,000
出到第三版啊

732
00:24:26,000 --> 00:24:28,000
是 1973 年

733
00:24:28,000 --> 00:24:30,000
那时候那个出版社就已经把那个

734
00:24:30,000 --> 00:24:33,000
这个自动助牌机的蒙娜机就已经卖掉了

735
00:24:33,000 --> 00:24:37,000
所以出版社他自己已经没有这个蒙娜

736
00:24:37,000 --> 00:24:39,000
就签字做这个自动助牌机的东西

737
00:24:39,000 --> 00:24:42,000
所以当时他的七五年的第一版再版的时候啊

738
00:24:42,000 --> 00:24:46,000
特地把这个书版送到欧洲的

739
00:24:46,000 --> 00:24:48,000
因为当时欧洲还有老的这个机器可以用

740
00:24:48,000 --> 00:24:51,000
所以特地到欧洲去重新牌来给

741
00:24:51,000 --> 00:24:53,000
给这个高德纳用

742
00:24:53,000 --> 00:24:54,000
然后等到七六年

743
00:24:54,000 --> 00:24:56,000
要等第二军再重版

744
00:24:56,000 --> 00:24:57,000
实在是没有

745
00:24:57,000 --> 00:24:59,000
这个花费太大了

746
00:24:59,000 --> 00:25:00,000
这个从欧洲再倒一次的话

747
00:25:00,000 --> 00:25:02,000
这个成本太高

748
00:25:02,000 --> 00:25:04,000
所以呢只好用这个照牌机给他牌

749
00:25:04,000 --> 00:25:07,000
然后老先生就当时就看

750
00:25:07,000 --> 00:25:08,000
哇这都什么鬼

751
00:25:08,000 --> 00:25:12,000
所以他就重新自己做了一个 TEC 这个排版软件

752
00:25:12,000 --> 00:25:16,000
那么这个 TEC 最初的这个发布的时间点呢

753
00:25:16,000 --> 00:25:18,000
是 1978 年

754
00:25:18,000 --> 00:25:20,000
也就是 43 年前

755
00:25:20,000 --> 00:25:23,000
43 年前高德纳老先生还是一个 38 岁的

756
00:25:23,000 --> 00:25:25,000
对

757
00:25:25,000 --> 00:25:26,000
小伙子

758
00:25:26,000 --> 00:25:27,000
对啊

759
00:25:27,000 --> 00:25:28,000
壮年啊

760
00:25:28,000 --> 00:25:29,000
就跟你现在差不多嘛

761
00:25:29,000 --> 00:25:30,000
我好老

762
00:25:30,000 --> 00:25:34,000
不他老是是该是写你自己的出版系统了

763
00:25:34,000 --> 00:25:36,000
对说的对

764
00:25:36,000 --> 00:25:43,000
我要在我要在怎么说 VR 里面弄一个属于未来的这么一个排版系统

765
00:25:43,000 --> 00:25:44,000
我今天把它画割这儿了

766
00:25:44,000 --> 00:25:48,000
所以等到现在就是到后之后我们也会讨论嘛

767
00:25:48,000 --> 00:25:50,000
可能大家现在站到这个高度了

768
00:25:50,000 --> 00:25:53,000
然后就讲哎呦我为什么还连什么 UNICO 都不支持的

769
00:25:53,000 --> 00:25:54,000
UNICO 是什么年代的事情

770
00:25:54,000 --> 00:25:56,000
就他当时写 TEC 是 1978 年

771
00:25:56,000 --> 00:26:00,000
那时候 UNICO 还还在娘胎里面还没出来呢

772
00:26:00,000 --> 00:26:05,000
就是那个时候 ASCII 都不是一个比较广为使用的 standard

773
00:26:05,000 --> 00:26:05,000
对

774
00:26:05,000 --> 00:26:06,000
所以呢

775
00:26:06,000 --> 00:26:08,000
78 年那个 TEC 诞生

776
00:26:08,000 --> 00:26:12,000
然后高德纳在 1990 年的 9 月份

777
00:26:12,000 --> 00:26:17,000
他就宣布说这个 TEC 发到 3.1 版本以后就不会有重大更新了

778
00:26:17,000 --> 00:26:18,000
除了修 bug

779
00:26:18,000 --> 00:26:22,000
他其实就是这个项目其实就已经打句号了

780
00:26:22,000 --> 00:26:24,000
刚好是 3.1 版本

781
00:26:24,000 --> 00:26:25,000
我有个疑问

782
00:26:25,000 --> 00:26:29,000
就是他 3.1 版之前是 1.0 2.0 这样的吗

783
00:26:29,000 --> 00:26:30,000
还是他一上来就是

784
00:26:30,000 --> 00:26:31,000
应该是的

785
00:26:31,000 --> 00:26:33,000
应该是的

786
00:26:33,000 --> 00:26:37,000
因为这里有个梗就是 TEC 以及跟 TEC 相关的很多软件

787
00:26:37,000 --> 00:26:39,000
他的版本号都是一个

788
00:26:39,000 --> 00:26:41,000
这个叫什么超越数

789
00:26:41,000 --> 00:26:42,000
还是叫什么无理

790
00:26:42,000 --> 00:26:43,000
无理数

791
00:26:43,000 --> 00:26:44,000
是无理数

792
00:26:44,000 --> 00:26:44,000
但是他是

793
00:26:44,000 --> 00:26:47,000
比如说 TEC 的版本号是 Pi

794
00:26:47,000 --> 00:26:50,000
然后 Metaphons 的版本号是 E

795
00:26:50,000 --> 00:26:51,000
就是那个自然对数的 E

796
00:26:51,000 --> 00:26:52,000
二点几的

797
00:26:52,000 --> 00:26:53,000
自然对数的 D

798
00:26:53,000 --> 00:26:55,000
还有一个什么软件

799
00:26:55,000 --> 00:26:58,000
他的版本号是 0.9999999999

800
00:26:58,000 --> 00:27:00,000
就是 1 嘛

801
00:27:00,000 --> 00:27:01,000
他无限接近 1

802
00:27:01,000 --> 00:27:03,000
大概是这样

803
00:27:03,000 --> 00:27:03,000
就高德纳

804
00:27:03,000 --> 00:27:06,000
他是一个很喜欢这种各种梗的人

805
00:27:06,000 --> 00:27:07,000
他是一个很 geek 的人

806
00:27:07,000 --> 00:27:07,000
我觉得

807
00:27:07,000 --> 00:27:08,000
他是

808
00:27:08,000 --> 00:27:08,000
对

809
00:27:08,000 --> 00:27:11,000
就是是那个时代的

810
00:27:11,000 --> 00:27:13,000
那个时代的风格的 geek

811
00:27:13,000 --> 00:27:14,000
就是他非常

812
00:27:14,000 --> 00:27:15,000
他非常严谨

813
00:27:15,000 --> 00:27:16,000
然后又特别的

814
00:27:16,000 --> 00:27:19,000
还是相对来说比较比我们这个时代的 geek 要严肃得多了

815
00:27:19,000 --> 00:27:21,000
但是他内心里面认为这是一个 geek

816
00:27:21,000 --> 00:27:21,000
比如说他

817
00:27:21,000 --> 00:27:25,000
他的 TLCP

818
00:27:25,000 --> 00:27:27,000
如果你在里面找到了一个 bug 的话

819
00:27:27,000 --> 00:27:29,000
他会给你寄一张支票

820
00:27:29,000 --> 00:27:31,000
这个支票的金额是 3.14 美元吧

821
00:27:31,000 --> 00:27:33,000
好像还是多少钱

822
00:27:33,000 --> 00:27:34,000
不是不是

823
00:27:34,000 --> 00:27:36,000
那个支票是多少钱来着

824
00:27:36,000 --> 00:27:38,000
反正是 2 的正整数倍

825
00:27:38,000 --> 00:27:39,000
不是

826
00:27:39,000 --> 00:27:40,000
反正是 2 的倍数

827
00:27:40,000 --> 00:27:41,000
是吗

828
00:27:41,000 --> 00:27:42,000
2 的多少次方

829
00:27:42,000 --> 00:27:43,000
嗯

830
00:27:43,000 --> 00:27:44,000
之类的

831
00:27:44,000 --> 00:27:44,000
我记得好像是

832
00:27:44,000 --> 00:27:47,000
跟本台的捐款类型是一样的

833
00:27:47,000 --> 00:27:48,000
对

834
00:27:48,000 --> 00:27:52,000
其实刚刚武涛说到那个 geek 所包含的第一套的这个字体

835
00:27:52,000 --> 00:27:54,000
就是所谓的 computer modern

836
00:27:54,000 --> 00:27:56,000
大家应该是非常眼熟

837
00:27:56,000 --> 00:27:57,000
因为为什么呢

838
00:27:57,000 --> 00:28:00,000
就是我们其实在大概十来七节目前

839
00:28:00,000 --> 00:28:02,000
讲到了另一位字体设计师叫

840
00:28:02,000 --> 00:28:04,000
Morris Fuller-Benton

841
00:28:04,000 --> 00:28:05,000
他所设计的

842
00:28:05,000 --> 00:28:06,000
他所指导设计的

843
00:28:06,000 --> 00:28:08,000
有一款很著名的字体叫 Sentry

844
00:28:08,000 --> 00:28:09,000
而这个 computer modern

845
00:28:09,000 --> 00:28:12,000
其实他的这个字型的设计呢

846
00:28:12,000 --> 00:28:13,000
是跟 Sentry 非常的接近的

847
00:28:13,000 --> 00:28:18,000
或者说 Sentry 是 computer modern 的一个直接的复刻的栏本

848
00:28:18,000 --> 00:28:19,000
所以在这个意义上

849
00:28:19,000 --> 00:28:22,000
Sentry 作为一款非常流行

850
00:28:22,000 --> 00:28:25,000
曾经也是跟 monotype 绑定的这样一套字体

851
00:28:25,000 --> 00:28:27,000
大家也可以在过去

852
00:28:27,000 --> 00:28:29,000
以及在今天

853
00:28:29,000 --> 00:28:30,000
甚至在将来的很多出版物上

854
00:28:30,000 --> 00:28:32,000
都会看到它的影子

855
00:28:32,000 --> 00:28:33,000
我打差问一个问题

856
00:28:33,000 --> 00:28:36,000
这个叫 computer modern 的这个字体

857
00:28:36,000 --> 00:28:38,000
它看起来一点都不 modern

858
00:28:38,000 --> 00:28:40,000
它的 modern 指的是一种风格

859
00:28:40,000 --> 00:28:41,000
这种风格叫 modern 风格

860
00:28:41,000 --> 00:28:44,000
所谓的在字体中的现代体

861
00:28:44,000 --> 00:28:46,000
它 modern 的时候是我们还没有出生的时候

862
00:28:46,000 --> 00:28:47,000
对对对

863
00:28:47,000 --> 00:28:50,000
它所谓的 modern 是那种时尚杂志的 modern

864
00:28:50,000 --> 00:28:52,000
computer modern 的一个直系亲属

865
00:28:52,000 --> 00:28:53,000
实际上是 Diedot

866
00:28:53,000 --> 00:28:53,000
狄多

867
00:28:53,000 --> 00:28:54,000
对对对

868
00:28:54,000 --> 00:28:58,000
狄多字体是一个在 18 世纪吧

869
00:28:58,000 --> 00:28:59,000
出现的这么一个字体

870
00:28:59,000 --> 00:29:02,000
然后那个时代人们会认为说

871
00:29:02,000 --> 00:29:03,000
我们现在处于现代

872
00:29:03,000 --> 00:29:05,000
在那之前是古代

873
00:29:05,000 --> 00:29:05,000
实际上也是这样的

874
00:29:05,000 --> 00:29:07,000
就是从大概从 19 世纪初

875
00:29:07,000 --> 00:29:10,000
人类进入了这个所谓什么大爆发

876
00:29:10,000 --> 00:29:12,000
反正有一个英语有一个词叫 grade

877
00:29:12,000 --> 00:29:14,000
什么什么的这个一个时代

878
00:29:14,000 --> 00:29:17,000
然后我们现在还处在这个时代中

879
00:29:17,000 --> 00:29:19,000
这个时代可以视为现代的开端

880
00:29:19,000 --> 00:29:21,000
所以你叫他 modern 其实也蛮正常

881
00:29:21,000 --> 00:29:26,000
其实我们自谈自唱在第 137 期讲过

882
00:29:26,000 --> 00:29:27,000
本顿父子的世纪传奇

883
00:29:27,000 --> 00:29:30,000
其实在这里面我们就讲述了当时的美国的

884
00:29:30,000 --> 00:29:32,000
其实他本顿父子是工程师

885
00:29:32,000 --> 00:29:35,000
他们制作的这个 centry 字体

886
00:29:35,000 --> 00:29:39,000
也就是现在这个 computer modern 的直系的

887
00:29:39,000 --> 00:29:40,000
老祖宗

888
00:29:40,000 --> 00:29:41,000
母版

889
00:29:41,000 --> 00:29:45,000
那如果上述到我们说是这整个对于字体来讲

890
00:29:45,000 --> 00:29:47,000
这所谓的现代体

891
00:29:47,000 --> 00:29:51,000
那就要追溯到字体的什么伯多尼

892
00:29:51,000 --> 00:29:52,000
然后要讲到狄多

893
00:29:52,000 --> 00:29:56,000
那么大家也可以翻到我们自然自创的

894
00:29:56,000 --> 00:29:58,000
我们在第 125 期讲过狄多

895
00:29:58,000 --> 00:30:01,000
然后在第 131 期讲过伯多尼

896
00:30:01,000 --> 00:30:03,000
这大家可以回去听一下就知道

897
00:30:03,000 --> 00:30:05,000
就是当时的所谓的

898
00:30:05,000 --> 00:30:08,000
他当时的现代体是一个什么样的一个东西

899
00:30:08,000 --> 00:30:11,000
Rail 你说为什么他们可以一下子就说起来

900
00:30:11,000 --> 00:30:14,000
我们之前哪一期讲了什么

901
00:30:14,000 --> 00:30:15,000
为什么咱们就做不到

902
00:30:15,000 --> 00:30:17,000
好问题

903
00:30:17,000 --> 00:30:21,000
你们需要打印一个 list

904
00:30:21,000 --> 00:30:23,000
就你们是怎么做到的

905
00:30:23,000 --> 00:30:25,000
你们身边有一个小秘书吗

906
00:30:25,000 --> 00:30:28,000
还是或者你们就是把所有的每一期讲了什么

907
00:30:28,000 --> 00:30:30,000
全都随时随地摆在手边

908
00:30:30,000 --> 00:30:32,000
我们只是有个列表而已

909
00:30:32,000 --> 00:30:34,000
我们做了 140 多期

910
00:30:34,000 --> 00:30:35,000
140 多期

911
00:30:35,000 --> 00:30:37,000
然后我们一期就一个主题

912
00:30:37,000 --> 00:30:41,000
那一期我们我们花了一个半小时就讲本顿父子

913
00:30:41,000 --> 00:30:43,000
所以一搜寸还是可以搜到的

914
00:30:43,000 --> 00:30:45,000
武汤我跟你出个主意

915
00:30:45,000 --> 00:30:47,000
你可以把我们首页打开

916
00:30:47,000 --> 00:30:48,000
我们也有个列表

917
00:30:48,000 --> 00:30:51,000
你用像素字牌的

918
00:30:51,000 --> 00:30:53,000
我看不懂

919
00:30:53,000 --> 00:30:54,000
这太难读了

920
00:30:54,000 --> 00:31:03,000
所以你们找到那个高德纳老先生发的那个多少钱了吗

921
00:31:03,000 --> 00:31:04,000
刚才谁在查

922
00:31:04,000 --> 00:31:06,000
我以为钱证也是查了

923
00:31:06,000 --> 00:31:07,000
没有没有

924
00:31:07,000 --> 00:31:10,000
我来查吧

925
00:31:10,000 --> 00:31:11,000
Knotchek

926
00:31:11,000 --> 00:31:13,000
Knotchek

927
00:31:13,000 --> 00:31:18,000
他每个漏洞的奖金是 2 块 5 毛 6

928
00:31:18,000 --> 00:31:23,000
因为这个 2 块 5 毛 6 是 16 进制的 100 美分

929
00:31:23,000 --> 00:31:23,000
就是第一个

930
00:31:23,000 --> 00:31:24,000
对

931
00:31:24,000 --> 00:31:29,000
然后他有些人拿到的支票上面写的是 0 x$1.0

932
00:31:29,000 --> 00:31:36,000
然后是每次就是你每次下一个人得到这个支票的人就会在那个数字上乘以 2

933
00:31:36,000 --> 00:31:38,000
直到知道现在是多少

934
00:31:38,000 --> 00:31:40,000
327.68

935
00:31:40,000 --> 00:31:41,000
嗯

936
00:31:41,000 --> 00:31:44,000
但是也才 300 多美金嘛

937
00:31:44,000 --> 00:31:47,000
那高德纳也其实也不算很多钱了

938
00:31:47,000 --> 00:31:47,000
不是啊

939
00:31:47,000 --> 00:31:50,000
你要知道这个是每次乘以下这个是很恐怖的故事

940
00:31:50,000 --> 00:31:53,000
你们还记得那个印度那个棋盘的故事吗

941
00:31:53,000 --> 00:31:54,000
这个很恐怖的

942
00:31:54,000 --> 00:31:58,000
2005 年的时候总金额就已经超过 2 万美元了

943
00:31:58,000 --> 00:32:00,000
所以高德纳就疯掉了嘛

944
00:32:00,000 --> 00:32:00,000
他啊

945
00:32:00,000 --> 00:32:02,000
就是说我不更新了

946
00:32:02,000 --> 00:32:02,000
对

947
00:32:02,000 --> 00:32:03,000
就是非常恐怖的

948
00:32:03,000 --> 00:32:06,000
就是逼迫他自己少写 bug 的一个驱动力

949
00:32:06,000 --> 00:32:06,000
你知道吧

950
00:32:06,000 --> 00:32:08,000
为了防止破产

951
00:32:08,000 --> 00:32:11,000
要尽量少的出现 bug

952
00:32:11,000 --> 00:32:14,000
因为下一个 bug 随时肯定让你倾家荡产

953
00:32:14,000 --> 00:32:16,000
不过刚才也说了嘛

954
00:32:16,000 --> 00:32:17,000
他的版本号接近于 Pi

955
00:32:17,000 --> 00:32:21,000
那么其实一个非常新的一个时间点

956
00:32:21,000 --> 00:32:23,000
就是在今年的 2 月份

957
00:32:23,000 --> 00:32:25,000
2021 年的 2 月份

958
00:32:25,000 --> 00:32:26,000
刚更新的一个版本

959
00:32:26,000 --> 00:32:31,000
然后这个版本号是 3.141592653 版

960
00:32:31,000 --> 00:32:34,000
就已经到 2653 了

961
00:32:34,000 --> 00:32:36,000
其实也还好

962
00:32:36,000 --> 00:32:37,000
你想一下

963
00:32:37,000 --> 00:32:38,000
其实也很容易背的下来

964
00:32:38,000 --> 00:32:39,000
也没更新几版

965
00:32:39,000 --> 00:32:40,000
对啊

966
00:32:40,000 --> 00:32:42,000
你能背到几位

967
00:32:42,000 --> 00:32:46,000
以前是可以的

968
00:32:46,000 --> 00:32:47,000
现在不记得

969
00:32:47,000 --> 00:32:50,000
大概我能背到 50 位还是多少位

970
00:32:50,000 --> 00:32:51,000
Rail 能背到 100 位吧

971
00:32:51,000 --> 00:32:56,000
所以我想确认一下

972
00:32:56,000 --> 00:32:58,000
这个到这个 2653 的版本

973
00:32:58,000 --> 00:33:01,000
实际上就是指的是 3.9 版本

974
00:33:01,000 --> 00:33:01,000
是吧

975
00:33:01,000 --> 00:33:02,000
你数位数的

976
00:33:02,000 --> 00:33:03,000
就是数到后面有几位的

977
00:33:03,000 --> 00:33:04,000
好

978
00:33:04,000 --> 00:33:07,000
但是没有很多这个大的修改了

979
00:33:07,000 --> 00:33:08,000
主要是那些 bug

980
00:33:08,000 --> 00:33:09,000
修 bug 而已

981
00:33:09,000 --> 00:33:11,000
没有重大的功能更新了

982
00:33:11,000 --> 00:33:12,000
其实就是

983
00:33:12,000 --> 00:33:13,000
对

984
00:33:13,000 --> 00:33:16,000
TAC 本身的令和实际上已经比较老了

985
00:33:16,000 --> 00:33:16,000
就是

986
00:33:16,000 --> 00:33:20,000
而且它本身并不是一个特别复杂的系统

987
00:33:20,000 --> 00:33:23,000
就是你把它底层的那个 TAC engine

988
00:33:23,000 --> 00:33:25,000
可以用其他方式来实现

989
00:33:25,000 --> 00:33:26,000
现在实际上比较流行的是

990
00:33:26,000 --> 00:33:27,000
一个叫 PDF TAC

991
00:33:27,000 --> 00:33:29,000
另外一个叫 ZTAC

992
00:33:29,000 --> 00:33:30,000
应该是

993
00:33:30,000 --> 00:33:32,000
这两个引擎现在是用的比较广泛的

994
00:33:32,000 --> 00:33:34,000
PDF TAC 主要是

995
00:33:34,000 --> 00:33:37,000
做那个标点悬挂比较好

996
00:33:37,000 --> 00:33:39,000
然后 PDF TAC 还支持

997
00:33:39,000 --> 00:33:40,000
就是直接生成 PDF

998
00:33:40,000 --> 00:33:43,000
而不是要先经过那个 DVI 那一步

999
00:33:43,000 --> 00:33:45,000
就是有各种前缀的 TAC

1000
00:33:45,000 --> 00:33:47,000
他们他们之间到底是什么关系

1001
00:33:47,000 --> 00:33:48,000
其实还挺复杂的

1002
00:33:48,000 --> 00:33:49,000
这个事

1003
00:33:49,000 --> 00:33:52,000
这个你还是要跟他家讲一讲的到后面

1004
00:33:52,000 --> 00:33:54,000
TAC 有点像有点像 UNIX

1005
00:33:54,000 --> 00:33:55,000
然后

1006
00:33:55,000 --> 00:33:56,000
对

1007
00:33:56,000 --> 00:33:57,000
特别像坦克

1008
00:33:57,000 --> 00:33:57,000
对

1009
00:33:57,000 --> 00:33:59,000
以 TAC 为原流呢

1010
00:33:59,000 --> 00:34:02,000
衍生了很多其他的发行版

1011
00:34:02,000 --> 00:34:03,000
其中最为人所知的

1012
00:34:03,000 --> 00:34:06,000
或者说我们现在最一提到 TAC

1013
00:34:06,000 --> 00:34:09,000
或者我们现在一提到这套排版工具

1014
00:34:09,000 --> 00:34:12,000
不会是说我用 TAC 写了什么什么

1015
00:34:12,000 --> 00:34:14,000
而是会说这个东西是用 Latec 写的

1016
00:34:14,000 --> 00:34:17,000
就是因为 Latec 是 TAC 的

1017
00:34:17,000 --> 00:34:19,000
最知名也是最早的一个扩展手段

1018
00:34:19,000 --> 00:34:21,000
就是 TAC 有点像一个

1019
00:34:21,000 --> 00:34:22,000
他有点像 Poison

1020
00:34:22,000 --> 00:34:23,000
他有点像一种变成语言

1021
00:34:23,000 --> 00:34:24,000
然后一个人

1022
00:34:24,000 --> 00:34:28,000
他的名字叫做 Leslie Lamport

1023
00:34:28,000 --> 00:34:28,000
应该是

1024
00:34:28,000 --> 00:34:30,000
他也是一个老先生

1025
00:34:30,000 --> 00:34:31,000
今年 80 岁

1026
00:34:31,000 --> 00:34:34,000
然后他给 TAC 做了一套扩展

1027
00:34:34,000 --> 00:34:37,000
就是他用 TAC 写了很多很多东西

1028
00:34:37,000 --> 00:34:40,000
比如说你 TAC 打个比方

1029
00:34:40,000 --> 00:34:43,000
这个 TAC 原来只能设字体和字号

1030
00:34:43,000 --> 00:34:44,000
然后他用 TAC 做了扩展

1031
00:34:44,000 --> 00:34:45,000
可以让

1032
00:34:45,000 --> 00:34:49,000
他用旧的命令生成了一个新的命令

1033
00:34:49,000 --> 00:34:51,000
然后这个新的命令你可以说

1034
00:34:51,000 --> 00:34:52,000
比如说我现在要开始写一张

1035
00:34:52,000 --> 00:34:54,000
然后我要现在要开始写一个新的结

1036
00:34:54,000 --> 00:34:56,000
然后这个张和结

1037
00:34:56,000 --> 00:35:00,000
应该是怎么样被 decorate 之类的

1038
00:35:00,000 --> 00:35:02,000
然后他最重要的贡献之一

1039
00:35:02,000 --> 00:35:04,000
就是他在这个 Latec 里面

1040
00:35:04,000 --> 00:35:06,000
做了一个包管理系统

1041
00:35:06,000 --> 00:35:11,000
这个是等于说是一个革命性的这么一个创造

1042
00:35:11,000 --> 00:35:14,000
然后有了这套包管理系统之后

1043
00:35:14,000 --> 00:35:16,000
就有很多人创造了很多包

1044
00:35:16,000 --> 00:35:16,000
然后你用 Latec

1045
00:35:16,000 --> 00:35:19,000
你就可以使用别人写的这些包

1046
00:35:19,000 --> 00:35:20,000
来扩展你的

1047
00:35:20,000 --> 00:35:24,000
来实现你的这个排版的一个目的

1048
00:35:24,000 --> 00:35:26,000
这个就是 Latec

1049
00:35:26,000 --> 00:35:27,000
对

1050
00:35:27,000 --> 00:35:29,000
所以这里本质上 TAC

1051
00:35:29,000 --> 00:35:32,000
TAC 其实只是一个非常底层的

1052
00:35:32,000 --> 00:35:34,000
非常这种就是它是一个内核

1053
00:35:34,000 --> 00:35:35,000
它是汇编语言的一个东西

1054
00:35:35,000 --> 00:35:38,000
但是它并不对

1055
00:35:38,000 --> 00:35:40,000
它并不就是如果你直接去用它来排版

1056
00:35:40,000 --> 00:35:41,000
其实是非常痛苦的

1057
00:35:41,000 --> 00:35:43,000
因为就是各种指令都很原始

1058
00:35:43,000 --> 00:35:45,000
所以这个 Latec

1059
00:35:45,000 --> 00:35:46,000
它其实做的是说

1060
00:35:46,000 --> 00:35:47,000
我在上面打包

1061
00:35:47,000 --> 00:35:48,000
做了一些这个抽象

1062
00:35:48,000 --> 00:35:48,000
对吧

1063
00:35:48,000 --> 00:35:49,000
你看有结构了

1064
00:35:49,000 --> 00:35:50,000
对吧

1065
00:35:50,000 --> 00:35:51,000
然后就是开始出现

1066
00:35:51,000 --> 00:35:53,000
所谓的这个形式和这个内容

1067
00:35:53,000 --> 00:35:56,000
有一点点的这个分离的感觉

1068
00:35:56,000 --> 00:35:57,000
然后你可以引用的这个包管理

1069
00:35:57,000 --> 00:35:58,000
其实是模块化了

1070
00:35:58,000 --> 00:36:00,000
让大家能够更好的在上面

1071
00:36:00,000 --> 00:36:02,000
去做进一步的这个扩展

1072
00:36:02,000 --> 00:36:04,000
就他们的语意就是说

1073
00:36:04,000 --> 00:36:06,000
其实 TAC 就是基础的排版引擎嘛

1074
00:36:06,000 --> 00:36:08,000
然后他们是叫红包是吧

1075
00:36:08,000 --> 00:36:10,000
就那个 Macro Package 是吧

1076
00:36:10,000 --> 00:36:11,000
红包吗

1077
00:36:11,000 --> 00:36:12,000
中文叫红包吗

1078
00:36:12,000 --> 00:36:13,000
听起来怎么这么喜庆

1079
00:36:13,000 --> 00:36:15,000
肯定是啊

1080
00:36:15,000 --> 00:36:16,000
就红包啊

1081
00:36:16,000 --> 00:36:17,000
不然台湾叫什么

1082
00:36:17,000 --> 00:36:21,000
红这个词就是随着 Macrosoft 的办公软件

1083
00:36:21,000 --> 00:36:23,000
基本上是在 90 年来

1084
00:36:23,000 --> 00:36:24,000
在中文世界就铺开了

1085
00:36:24,000 --> 00:36:25,000
这个玩意就叫红啊

1086
00:36:25,000 --> 00:36:28,000
台湾叫聚集嘛

1087
00:36:28,000 --> 00:36:30,000
聚集可能听起来还比较

1088
00:36:30,000 --> 00:36:31,000
就好奇怪

1089
00:36:31,000 --> 00:36:32,000
比较好一点的是

1090
00:36:32,000 --> 00:36:35,000
红这个词已经被传开了

1091
00:36:35,000 --> 00:36:40,000
我们是不是重点要跟大家讲一下

1092
00:36:40,000 --> 00:36:41,000
TAC 的一些特点

1093
00:36:41,000 --> 00:36:42,000
好啊

1094
00:36:42,000 --> 00:36:44,000
但是 TAC 有什么特点

1095
00:36:44,000 --> 00:36:44,000
难用

1096
00:36:44,000 --> 00:36:47,000
最大特点就是免费开源啊

1097
00:36:47,000 --> 00:36:48,000
这最重要的呀

1098
00:36:48,000 --> 00:36:50,000
说得也是

1099
00:36:50,000 --> 00:36:51,000
我前两天在做功课的时候

1100
00:36:51,000 --> 00:36:52,000
搜到了一篇

1101
00:36:52,000 --> 00:36:54,000
一个奇人写了一篇奇文

1102
00:36:54,000 --> 00:36:57,000
然后我觉得还是可以在这里念一下

1103
00:36:57,000 --> 00:36:58,000
就是他

1104
00:36:58,000 --> 00:37:00,000
那个死鹅精病

1105
00:37:00,000 --> 00:37:02,000
隶属了 TAC 的种种弊端

1106
00:37:02,000 --> 00:37:04,000
然后其中有一段是这样的

1107
00:37:04,000 --> 00:37:05,000
我来念一下

1108
00:37:05,000 --> 00:37:06,000
你说中文啊

1109
00:37:06,000 --> 00:37:06,000
好

1110
00:37:06,000 --> 00:37:07,000
我来翻译一下

1111
00:37:07,000 --> 00:37:08,000
他说

1112
00:37:08,000 --> 00:37:10,000
因为 TAC 是免费的

1113
00:37:10,000 --> 00:37:14,000
所以他限制了与其竞争的系统和

1114
00:37:14,000 --> 00:37:16,000
和这个想法发展

1115
00:37:16,000 --> 00:37:18,000
如果 TAC 没有被研究出来

1116
00:37:18,000 --> 00:37:19,000
并且没有被

1117
00:37:19,000 --> 00:37:22,000
就是免费的让人使用

1118
00:37:22,000 --> 00:37:26,000
那么能够保持这个数学公式的

1119
00:37:26,000 --> 00:37:26,000
structure

1120
00:37:26,000 --> 00:37:28,000
结构的这些替代的方案

1121
00:37:28,000 --> 00:37:30,000
比如说 MathML

1122
00:37:30,000 --> 00:37:31,000
这个我们一会儿提到

1123
00:37:31,000 --> 00:37:33,000
叫 Math Markov Language

1124
00:37:33,000 --> 00:37:34,000
还有 Mathematic

1125
00:37:34,000 --> 00:37:37,000
就会比较早的被开发出来

1126
00:37:37,000 --> 00:37:40,000
并且也有可能就是会更为广泛的使用

1127
00:37:40,000 --> 00:37:41,000
就是他言下之意

1128
00:37:41,000 --> 00:37:42,000
Latech 是一个

1129
00:37:42,000 --> 00:37:46,000
TAC 是一个比较差的这么一套工具

1130
00:37:46,000 --> 00:37:47,000
但是因为它免费

1131
00:37:47,000 --> 00:37:48,000
大家都用了

1132
00:37:48,000 --> 00:37:50,000
所以大家就不思计取了

1133
00:37:50,000 --> 00:37:50,000
是吗

1134
00:37:50,000 --> 00:37:51,000
他的意思是

1135
00:37:51,000 --> 00:37:53,000
接下来他紧接着就说了

1136
00:37:53,000 --> 00:37:53,000
类似的一句话

1137
00:37:53,000 --> 00:37:54,000
他说

1138
00:37:54,000 --> 00:37:55,000
Free Software

1139
00:37:55,000 --> 00:37:57,000
就像一种病毒

1140
00:37:57,000 --> 00:37:59,000
然后 Free Systems

1141
00:37:59,000 --> 00:38:03,000
有这个能力可以去使得任何其他的

1142
00:38:03,000 --> 00:38:06,000
protocol 协议或者是设计

1143
00:38:06,000 --> 00:38:09,000
包括那些比较好的协议和设计

1144
00:38:09,000 --> 00:38:12,000
他有这个

1145
00:38:12,000 --> 00:38:15,000
让他们全军覆没的这样一种潜力

1146
00:38:15,000 --> 00:38:17,000
听起来很像比尔盖茨当年

1147
00:38:17,000 --> 00:38:18,000
对自由软件的自责

1148
00:38:18,000 --> 00:38:19,000
对

1149
00:38:19,000 --> 00:38:19,000
Worse is better

1150
00:38:19,000 --> 00:38:20,000
然后他说

1151
00:38:20,000 --> 00:38:22,000
其中一个例子就是

1152
00:38:22,000 --> 00:38:24,000
The various Unix systems

1153
00:38:24,000 --> 00:38:26,000
就是各种各样的 Unix 系统

1154
00:38:26,000 --> 00:38:29,000
以及他们所对应的协议

1155
00:38:29,000 --> 00:38:30,000
然后他说

1156
00:38:30,000 --> 00:38:32,000
这些系统和协议

1157
00:38:32,000 --> 00:38:36,000
has done huge irreversible damage to society

1158
00:38:36,000 --> 00:38:38,000
他说这些东西对整个社会

1159
00:38:38,000 --> 00:38:41,000
产生了不可逆转的巨大的伤害

1160
00:38:41,000 --> 00:38:44,000
就是 Worse is better

1161
00:38:44,000 --> 00:38:47,000
这可能是我们今天

1162
00:38:47,000 --> 00:38:50,000
或者我这过去 20 年里面

1163
00:38:50,000 --> 00:38:53,000
听到了对于自由软件的

1164
00:38:53,000 --> 00:38:53,000
最大的一次

1165
00:38:53,000 --> 00:38:57,000
最严苛的一次指控

1166
00:38:57,000 --> 00:38:59,000
就我以前没有想过这些事情

1167
00:38:59,000 --> 00:39:01,000
但是如果你说他

1168
00:39:01,000 --> 00:39:02,000
不

1169
00:39:02,000 --> 00:39:03,000
我们来想想他说的有没有道理

1170
00:39:03,000 --> 00:39:04,000
可能是有点道理的

1171
00:39:04,000 --> 00:39:05,000
但是

1172
00:39:05,000 --> 00:39:08,000
看你站的立场是啥了吗

1173
00:39:08,000 --> 00:39:09,000
你如果是那些

1174
00:39:09,000 --> 00:39:11,000
想做这个商业软件

1175
00:39:11,000 --> 00:39:12,000
对吧

1176
00:39:12,000 --> 00:39:13,000
想靠这个赚钱

1177
00:39:13,000 --> 00:39:15,000
然后说你要通过这个

1178
00:39:15,000 --> 00:39:17,000
就是 compete on quality

1179
00:39:17,000 --> 00:39:18,000
对吧

1180
00:39:18,000 --> 00:39:19,000
你要通过这个品质的竞争

1181
00:39:19,000 --> 00:39:21,000
那确实是啊

1182
00:39:21,000 --> 00:39:22,000
那很多你就干

1183
00:39:22,000 --> 00:39:23,000
你这个人就干不下去了吗

1184
00:39:23,000 --> 00:39:24,000
那很多

1185
00:39:24,000 --> 00:39:27,000
比如说你需要聘请这个

1186
00:39:27,000 --> 00:39:30,000
这个专业的人来设计制作

1187
00:39:30,000 --> 00:39:32,000
然后比如说这些的这些系统

1188
00:39:32,000 --> 00:39:34,000
那你肯定就干不过免费的

1189
00:39:34,000 --> 00:39:34,000
你就死掉了

1190
00:39:34,000 --> 00:39:35,000
对

1191
00:39:35,000 --> 00:39:37,000
那我们看到过去自由软件的

1192
00:39:37,000 --> 00:39:38,000
这个整个历史

1193
00:39:38,000 --> 00:39:40,000
不就是在不断的去蚕食

1194
00:39:40,000 --> 00:39:40,000
那些商业软件

1195
00:39:40,000 --> 00:39:43,000
本来可以卖钱的那些领域嘛

1196
00:39:43,000 --> 00:39:43,000
对吧

1197
00:39:43,000 --> 00:39:45,000
现在连超欧系统也是啊

1198
00:39:45,000 --> 00:39:47,000
那个 unix 出来之后

1199
00:39:47,000 --> 00:39:47,000
对吧

1200
00:39:47,000 --> 00:39:48,000
Linux 之后

1201
00:39:48,000 --> 00:39:49,000
你还有什么

1202
00:39:49,000 --> 00:39:51,000
其他就是非

1203
00:39:51,000 --> 00:39:52,000
就除了什么

1204
00:39:52,000 --> 00:39:53,000
Windows

1205
00:39:53,000 --> 00:39:55,000
除了这个 Mac

1206
00:39:55,000 --> 00:39:56,000
它底下那个 BSD

1207
00:39:56,000 --> 00:39:58,000
还在这个就是有一些

1208
00:39:58,000 --> 00:39:59,000
这种商业的在用途之外

1209
00:39:59,000 --> 00:40:00,000
其他那些非常小众

1210
00:40:00,000 --> 00:40:02,000
都已经非常示威了嘛

1211
00:40:02,000 --> 00:40:02,000
都小

1212
00:40:02,000 --> 00:40:04,000
就商业软件都已经消亡了

1213
00:40:04,000 --> 00:40:04,000
对

1214
00:40:04,000 --> 00:40:06,000
就好像他提到这些

1215
00:40:06,000 --> 00:40:07,000
Virus Unix Systems

1216
00:40:07,000 --> 00:40:08,000
他这里面

1217
00:40:08,000 --> 00:40:09,000
Unix Systems

1218
00:40:09,000 --> 00:40:10,000
包括很多东西

1219
00:40:10,000 --> 00:40:11,000
其中 unix 最

1220
00:40:11,000 --> 00:40:13,000
最原本的 unix

1221
00:40:13,000 --> 00:40:15,000
后来被卖给了

1222
00:40:15,000 --> 00:40:16,000
卖给了谁

1223
00:40:16,000 --> 00:40:17,000
AT&T 还是谁

1224
00:40:17,000 --> 00:40:20,000
他那个真正 unix 的商标

1225
00:40:20,000 --> 00:40:21,000
实际上是卖钱的

1226
00:40:21,000 --> 00:40:24,000
反倒是后来的什么 BSD 和 Linux

1227
00:40:24,000 --> 00:40:26,000
之流吧

1228
00:40:26,000 --> 00:40:29,000
把这个卖钱的 unix 给打败了

1229
00:40:29,000 --> 00:40:31,000
比如说当时的

1230
00:40:31,000 --> 00:40:33,000
就是为什么现在会有 AWS

1231
00:40:33,000 --> 00:40:34,000
就是因为当时

1232
00:40:34,000 --> 00:40:36,000
亚马逊觉得

1233
00:40:36,000 --> 00:40:38,000
Sum Microsystem 的那个

1234
00:40:38,000 --> 00:40:41,000
Solaris 的那些服务器太贵了

1235
00:40:41,000 --> 00:40:43,000
然后他们转向 Linux

1236
00:40:43,000 --> 00:40:46,000
然后 Sum 就倒闭了

1237
00:40:46,000 --> 00:40:47,000
对

1238
00:40:47,000 --> 00:40:49,000
生养也会倒闭

1239
00:40:49,000 --> 00:40:50,000
对

1240
00:40:50,000 --> 00:40:52,000
然后亚马逊发现自己

1241
00:40:52,000 --> 00:40:53,000
可以用十分之一的价钱

1242
00:40:53,000 --> 00:40:55,000
达到之前一百倍的容量

1243
00:40:55,000 --> 00:40:57,000
然后他决定把之前

1244
00:40:57,000 --> 00:40:58,000
多出来这些容量

1245
00:40:58,000 --> 00:40:59,000
租给别人用

1246
00:40:59,000 --> 00:41:01,000
于是就有了今天的 AWS

1247
00:41:01,000 --> 00:41:03,000
这诸如此类的事情

1248
00:41:03,000 --> 00:41:04,000
实际上在一次一次的上演

1249
00:41:04,000 --> 00:41:06,000
但是如果你这样讲的话

1250
00:41:06,000 --> 00:41:09,000
虽然 Tek 它本身是免费的

1251
00:41:09,000 --> 00:41:10,000
Tek 本身

1252
00:41:10,000 --> 00:41:13,000
这个 Tek 是美国数学学会的商标

1253
00:41:13,000 --> 00:41:16,000
然后 Metaphons 也是当时出版社

1254
00:41:16,000 --> 00:41:19,000
就是 Edison Wesley 出版社的商标

1255
00:41:19,000 --> 00:41:21,000
这些商标都是有注册的

1256
00:41:21,000 --> 00:41:23,000
就跟那个 Unix 一样

1257
00:41:23,000 --> 00:41:25,000
但是它本身是免费的

1258
00:41:25,000 --> 00:41:26,000
开源的

1259
00:41:26,000 --> 00:41:26,000
对

1260
00:41:26,000 --> 00:41:27,000
它们免费事实上不自由

1261
00:41:27,000 --> 00:41:28,000
对吧

1262
00:41:28,000 --> 00:41:29,000
开源

1263
00:41:29,000 --> 00:41:30,000
他们开源

1264
00:41:30,000 --> 00:41:32,000
所以有人骂这个 Tek

1265
00:41:32,000 --> 00:41:34,000
可是 Tek 的支持者就说

1266
00:41:34,000 --> 00:41:35,000
我们 Tek 多好

1267
00:41:35,000 --> 00:41:36,000
我们免费开源

1268
00:41:36,000 --> 00:41:38,000
然后跨平台

1269
00:41:38,000 --> 00:41:39,000
跨设备

1270
00:41:39,000 --> 00:41:39,000
这个是最关键的

1271
00:41:39,000 --> 00:41:41,000
就是说同样的输入

1272
00:41:41,000 --> 00:41:43,000
可以得到同样的效果

1273
00:41:43,000 --> 00:41:44,000
哪怕大家也知道

1274
00:41:44,000 --> 00:41:45,000
这个 Tek 原来是

1275
00:41:45,000 --> 00:41:47,000
40 多年前开发的

1276
00:41:47,000 --> 00:41:49,000
这样的一个引擎

1277
00:41:49,000 --> 00:41:51,000
但是当时高德纳就说

1278
00:41:51,000 --> 00:41:54,000
你无论用任何一台电脑

1279
00:41:54,000 --> 00:41:56,000
输出的效果都是一样的

1280
00:41:56,000 --> 00:41:58,000
这个特别厉害

1281
00:41:58,000 --> 00:42:00,000
然后跨设备的意思是

1282
00:42:00,000 --> 00:42:02,000
不仅是屏幕显示

1283
00:42:02,000 --> 00:42:04,000
还有无论后来有打印机

1284
00:42:04,000 --> 00:42:07,000
哪怕后来有 Poster Script 出现

1285
00:42:07,000 --> 00:42:10,000
然后我们比如说有 PDF

1286
00:42:10,000 --> 00:42:14,000
甚至像哪怕是日本特别专用的

1287
00:42:14,000 --> 00:42:14,000
写研家公司

1288
00:42:14,000 --> 00:42:17,000
他们自己的电商照牌机

1289
00:42:17,000 --> 00:42:20,000
你只要用的是这个 Tek 和他出的文本

1290
00:42:20,000 --> 00:42:22,000
最后输出效果都是一样的

1291
00:42:22,000 --> 00:42:25,000
这个是特别厉害的一个例子

1292
00:42:25,000 --> 00:42:29,000
我们要不接下来就讲一讲

1293
00:42:29,000 --> 00:42:31,000
Tek 作为一个软件

1294
00:42:31,000 --> 00:42:33,000
它的 user interface 是怎么样

1295
00:42:33,000 --> 00:42:35,000
也就是它的用户操作界面是怎么样

1296
00:42:35,000 --> 00:42:37,000
这我觉得可能对于很多设计师

1297
00:42:37,000 --> 00:42:39,000
或者是没有接触和 Tek

1298
00:42:39,000 --> 00:42:42,000
但有想要试一试的人来说

1299
00:42:42,000 --> 00:42:43,000
比较重要的一点

1300
00:42:43,000 --> 00:42:45,000
我觉得可能要介绍的是工作流吧

1301
00:42:45,000 --> 00:42:47,000
因为 Latech 事实上是没有一个

1302
00:42:47,000 --> 00:42:50,000
于是首先你要学会使用命令

1303
00:42:50,000 --> 00:42:53,000
对它事实上是没有一个标准的操作界面的

1304
00:42:53,000 --> 00:42:56,000
你可能装了某些特定的 Tek 的版本

1305
00:42:56,000 --> 00:42:58,000
这个我们一会会讲

1306
00:42:58,000 --> 00:43:02,000
然后你会有一个编辑 Tek 的环境

1307
00:43:02,000 --> 00:43:05,000
但是没有一个东西说你一定要打开这个

1308
00:43:05,000 --> 00:43:07,000
比如说 Photoshop 或者是 PageMaker

1309
00:43:07,000 --> 00:43:08,000
你有一个主程序要运行

1310
00:43:08,000 --> 00:43:10,000
在 Latech 这边是没有的

1311
00:43:10,000 --> 00:43:13,000
你可以按照自己喜欢的方式

1312
00:43:13,000 --> 00:43:17,000
用一个你喜欢的编辑软件去做你想要做的事情

1313
00:43:17,000 --> 00:43:19,000
本质上它是编程嘛

1314
00:43:19,000 --> 00:43:21,000
它没有一个所谓的

1315
00:43:21,000 --> 00:43:24,000
你说有一个什么专用的程序来使用它

1316
00:43:24,000 --> 00:43:24,000
对吧

1317
00:43:24,000 --> 00:43:26,000
你就是其实是用任何一个

1318
00:43:26,000 --> 00:43:27,000
我们编辑器都可以写

1319
00:43:27,000 --> 00:43:29,000
所以我刚才讲

1320
00:43:29,000 --> 00:43:30,000
你说你要开始使用这个

1321
00:43:30,000 --> 00:43:31,000
你要接触的那个 UI

1322
00:43:31,000 --> 00:43:32,000
Uter interface

1323
00:43:32,000 --> 00:43:34,000
就首先你得学会使用命令好吗

1324
00:43:34,000 --> 00:43:37,000
怎么开始去完成这个转化的过程

1325
00:43:37,000 --> 00:43:39,000
这也是它的特点之一嘛

1326
00:43:39,000 --> 00:43:41,000
就是我们把整个过程说一下

1327
00:43:41,000 --> 00:43:46,000
就用户是只要有一个文本编辑器就可以了

1328
00:43:46,000 --> 00:43:47,000
它写的是一个文本文件

1329
00:43:47,000 --> 00:43:48,000
记事本也可以

1330
00:43:48,000 --> 00:43:50,000
对 Tek 它是纯文本

1331
00:43:50,000 --> 00:43:53,000
所以它非常便于传输编辑

1332
00:43:53,000 --> 00:43:58,000
你只要你喜欢你个人习惯用的文本编辑器就可以了

1333
00:43:58,000 --> 00:43:59,000
你用什么都可以

1334
00:43:59,000 --> 00:44:01,000
然后导到引擎里面去

1335
00:44:01,000 --> 00:44:02,000
当然传统的 Tek 的话

1336
00:44:02,000 --> 00:44:05,000
它要中途要先生成一个 DVI 文件

1337
00:44:05,000 --> 00:44:07,000
这个 DVI

1338
00:44:07,000 --> 00:44:09,000
其实 DVI 是 Device Independent

1339
00:44:09,000 --> 00:44:12,000
就是设备独立

1340
00:44:12,000 --> 00:44:13,000
它有一个中途文件

1341
00:44:13,000 --> 00:44:15,000
然后这个 DVI

1342
00:44:15,000 --> 00:44:17,000
然后根据它的驱动

1343
00:44:17,000 --> 00:44:19,000
然后最后再生成什么 PDF

1344
00:44:19,000 --> 00:44:20,000
或者是打印

1345
00:44:20,000 --> 00:44:22,000
当然了现在的这个 Latec

1346
00:44:22,000 --> 00:44:22,000
他们就可以

1347
00:44:22,000 --> 00:44:24,000
现代 Latec

1348
00:44:24,000 --> 00:44:24,000
比如说 LuanLatec

1349
00:44:24,000 --> 00:44:27,000
它就可以直接从这个文本文件

1350
00:44:27,000 --> 00:44:29,000
直接给导出 PDF 了

1351
00:44:29,000 --> 00:44:29,000
所以呢

1352
00:44:29,000 --> 00:44:30,000
这是两个层

1353
00:44:30,000 --> 00:44:32,000
两个步骤的

1354
00:44:32,000 --> 00:44:33,000
用户呢

1355
00:44:33,000 --> 00:44:34,000
直接他要一边

1356
00:44:34,000 --> 00:44:36,000
他要写一个像命令行一样的一个纯文本

1357
00:44:36,000 --> 00:44:38,000
然后呢

1358
00:44:38,000 --> 00:44:40,000
要再通过这样一个引擎去

1359
00:44:40,000 --> 00:44:42,000
生成 PDF

1360
00:44:42,000 --> 00:44:44,000
所以它是一个两个步骤东西

1361
00:44:44,000 --> 00:44:48,000
而不是所谓的可见即所得嘛

1362
00:44:48,000 --> 00:44:49,000
对吧

1363
00:44:49,000 --> 00:44:49,000
我有 SIS

1364
00:44:49,000 --> 00:44:50,000
我有 G

1365
00:44:50,000 --> 00:44:51,000
这是一个它的最大的不同

1366
00:44:51,000 --> 00:44:53,000
但其实也有人在上面做一些尝试

1367
00:44:53,000 --> 00:44:56,000
就是说有人做了这种专用的编辑器

1368
00:44:56,000 --> 00:44:58,000
然后你这边输入这个 Latec 的指令

1369
00:44:58,000 --> 00:45:02,000
然后是可以就是几乎实现所谓即所得

1370
00:45:02,000 --> 00:45:06,000
但是和所有的所谓即所得的这种这种排标人

1371
00:45:06,000 --> 00:45:06,000
一样

1372
00:45:06,000 --> 00:45:08,000
它还是面临着非常不好用的问题

1373
00:45:08,000 --> 00:45:11,000
所以也不是非常的广泛

1374
00:45:11,000 --> 00:45:12,000
就是它还是有代码的嘛

1375
00:45:12,000 --> 00:45:15,000
知乎那个公式编辑器

1376
00:45:15,000 --> 00:45:18,000
其实它提供一个让你点的那么一个界面

1377
00:45:18,000 --> 00:45:20,000
就是你点一个什么比如说根号

1378
00:45:20,000 --> 00:45:24,000
然后它就下面帮你插入 Latec 的那个根号的命令

1379
00:45:24,000 --> 00:45:26,000
类似于这些东西

1380
00:45:26,000 --> 00:45:29,000
其实现在要比直接手写的还是要多一些

1381
00:45:29,000 --> 00:45:30,000
就这种还算是

1382
00:45:30,000 --> 00:45:33,000
就那个那种还是就是说是一个非常短的那种

1383
00:45:33,000 --> 00:45:34,000
就是编写

1384
00:45:34,000 --> 00:45:36,000
然后编译的一个循环嘛

1385
00:45:36,000 --> 00:45:38,000
它还是没有脱离刚才我说的那个命令行的本质

1386
00:45:38,000 --> 00:45:40,000
这里面我说这种就是可以

1387
00:45:40,000 --> 00:45:41,000
对它基本上就只能做工事

1388
00:45:41,000 --> 00:45:44,000
对你可以就是相对完整的做出的这种编辑器

1389
00:45:44,000 --> 00:45:47,000
最最成熟的应该是那个叫做

1390
00:45:47,000 --> 00:45:47,000
这怎么念

1391
00:45:47,000 --> 00:45:48,000
Lix 吗

1392
00:45:48,000 --> 00:45:49,000
L-Y-X

1393
00:45:49,000 --> 00:45:52,000
它的网站是 L-Y-X-O-R-G-O-R-G-的这个

1394
00:45:52,000 --> 00:45:53,000
你可以去看一下它有截图

1395
00:45:53,000 --> 00:45:56,000
就它相对来说是更加接近于

1396
00:45:56,000 --> 00:45:58,000
就是你编辑 word 的那种感觉的

1397
00:45:58,000 --> 00:46:00,000
不过话说回来的话

1398
00:46:00,000 --> 00:46:01,000
就是我们现在用 Tek 都是

1399
00:46:01,000 --> 00:46:02,000
大家会想到用工事嘛

1400
00:46:02,000 --> 00:46:04,000
可是当年高德纳先生

1401
00:46:04,000 --> 00:46:06,000
他可是真的是要排书的

1402
00:46:06,000 --> 00:46:08,000
他这个很厉害的

1403
00:46:08,000 --> 00:46:10,000
比如他会算那个换行位置嘛

1404
00:46:10,000 --> 00:46:11,000
然后呢两段对齐

1405
00:46:11,000 --> 00:46:15,000
这其实这就都是做很专业的长文排版的东西

1406
00:46:15,000 --> 00:46:18,000
就是他还特地为此去学排版嘛

1407
00:46:18,000 --> 00:46:20,000
就很所以高德纳先生很厉害

1408
00:46:20,000 --> 00:46:21,000
可是我们现在主要用的呢

1409
00:46:21,000 --> 00:46:24,000
男孩用的还是来去排工事嘛

1410
00:46:24,000 --> 00:46:27,000
对这里就有一个问题了哈

1411
00:46:27,000 --> 00:46:29,000
其实就是可以探讨一下

1412
00:46:29,000 --> 00:46:33,000
就是为什么排就是排工事和普通的这个排版

1413
00:46:33,000 --> 00:46:35,000
它有什么样的特殊之处

1414
00:46:35,000 --> 00:46:39,000
对使得他必须要呃就专门做这么一套系统

1415
00:46:39,000 --> 00:46:41,000
公事很复杂嘛

1416
00:46:41,000 --> 00:46:42,000
这个大家也都知道

1417
00:46:42,000 --> 00:46:44,000
尤其在签字时代

1418
00:46:44,000 --> 00:46:47,000
那个那个公事可就是超级复杂了

1419
00:46:47,000 --> 00:46:49,000
才要在这个字符的周围

1420
00:46:49,000 --> 00:46:50,000
塞不同的签控嘛

1421
00:46:50,000 --> 00:46:50,000
对吧

1422
00:46:50,000 --> 00:46:52,000
哪怕一个根号

1423
00:46:52,000 --> 00:46:54,000
就是一个很复杂的一个东西

1424
00:46:54,000 --> 00:46:55,000
根号上面还有一个

1425
00:46:55,000 --> 00:46:57,000
那个长度啊

1426
00:46:57,000 --> 00:46:58,000
什么就乱七八糟的

1427
00:46:58,000 --> 00:47:00,000
都要有附和的那种

1428
00:47:00,000 --> 00:47:01,000
对

1429
00:47:01,000 --> 00:47:03,000
对我觉得就是数学公事最麻烦的地方

1430
00:47:03,000 --> 00:47:04,000
就在于他相对

1431
00:47:04,000 --> 00:47:06,000
如果我们只是考虑一个最简单的

1432
00:47:06,000 --> 00:47:08,000
这个就是文本的排音

1433
00:47:08,000 --> 00:47:09,000
他其实主要考虑是

1434
00:47:09,000 --> 00:47:10,000
相对来说是一个

1435
00:47:10,000 --> 00:47:12,000
呃一个维度吧

1436
00:47:12,000 --> 00:47:13,000
就是你那一行到底要出去怎么样

1437
00:47:13,000 --> 00:47:14,000
因为他行一行之间

1438
00:47:14,000 --> 00:47:17,000
通常来说不会有太大的相互观点

1439
00:47:17,000 --> 00:47:18,000
除非你是断行的那个影响之外

1440
00:47:18,000 --> 00:47:18,000
对吧

1441
00:47:18,000 --> 00:47:19,000
但是数学公事

1442
00:47:19,000 --> 00:47:21,000
它本质上是一个

1443
00:47:21,000 --> 00:47:23,000
二维的一个一个画画

1444
00:47:23,000 --> 00:47:24,000
你可以这么理解

1445
00:47:24,000 --> 00:47:24,000
比如说

1446
00:47:24,000 --> 00:47:27,000
我们常用的这个叫什么来的

1447
00:47:27,000 --> 00:47:27,000
上标下标

1448
00:47:27,000 --> 00:47:28,000
就是那个指数符号

1449
00:47:28,000 --> 00:47:29,000
或者是角标符号

1450
00:47:29,000 --> 00:47:30,000
对吧

1451
00:47:30,000 --> 00:47:32,000
它存在说有一个大小的问题

1452
00:47:32,000 --> 00:47:33,000
而且数学公事很多是

1453
00:47:33,000 --> 00:47:34,000
很多是可以所谓的嵌套的

1454
00:47:34,000 --> 00:47:35,000
就你会

1455
00:47:35,000 --> 00:47:37,000
A 的平方的平方的平方

1456
00:47:37,000 --> 00:47:38,000
你要想的那个结果是

1457
00:47:38,000 --> 00:47:40,000
那个平方的那个角标会

1458
00:47:40,000 --> 00:47:41,000
无极变小嘛

1459
00:47:41,000 --> 00:47:45,000
这种需求在普通的这个文字排版上面

1460
00:47:45,000 --> 00:47:46,000
它其实是不存在的

1461
00:47:46,000 --> 00:47:47,000
就相对于他把这个灵活性

1462
00:47:47,000 --> 00:47:48,000
是要求非常高

1463
00:47:48,000 --> 00:47:49,000
然后要求你控制

1464
00:47:49,000 --> 00:47:51,000
它的这个相对位置

1465
00:47:51,000 --> 00:47:53,000
它的首先维度上就变得更广泛

1466
00:47:53,000 --> 00:47:54,000
而且它的大小的精度

1467
00:47:54,000 --> 00:47:55,000
又要求更高了

1468
00:47:55,000 --> 00:47:58,000
排数学公事实际上是面临着

1469
00:47:58,000 --> 00:48:00,000
一个双倍的双层的问题

1470
00:48:00,000 --> 00:48:01,000
一个是 unicode

1471
00:48:01,000 --> 00:48:03,000
或者说编码

1472
00:48:03,000 --> 00:48:05,000
需要解决的一个问题

1473
00:48:05,000 --> 00:48:07,000
就是那些中音符号或者是

1474
00:48:07,000 --> 00:48:08,000
一些字

1475
00:48:08,000 --> 00:48:10,000
首先有字的问题

1476
00:48:10,000 --> 00:48:13,000
字符的附加了这些零件的排版

1477
00:48:13,000 --> 00:48:14,000
就是定位的问题

1478
00:48:14,000 --> 00:48:15,000
它还有一个问题

1479
00:48:15,000 --> 00:48:16,000
就是它把所有这些东西

1480
00:48:16,000 --> 00:48:19,000
在一个非线性的方式组合在一起

1481
00:48:19,000 --> 00:48:22,000
它是面临是一个二维的一个空间

1482
00:48:22,000 --> 00:48:24,000
它还不仅仅是一个三维的问题

1483
00:48:24,000 --> 00:48:25,000
所以你要解决这个问题

1484
00:48:25,000 --> 00:48:28,000
实际上是要用比 unicode

1485
00:48:28,000 --> 00:48:30,000
更加复杂的一套方法来完成它

1486
00:48:30,000 --> 00:48:31,000
你还是提到刚才一点

1487
00:48:31,000 --> 00:48:32,000
Tex 出现的时候

1488
00:48:32,000 --> 00:48:33,000
还没有 unicode 这件事情

1489
00:48:33,000 --> 00:48:34,000
所以当时它要去

1490
00:48:34,000 --> 00:48:37,000
在数学公司里面大量出现的

1491
00:48:37,000 --> 00:48:38,000
什么希腊字母

1492
00:48:38,000 --> 00:48:40,000
各种奇奇怪怪的这种数学符号

1493
00:48:40,000 --> 00:48:42,000
你就从来不会想到过的

1494
00:48:42,000 --> 00:48:43,000
就现在连 unicode 里面

1495
00:48:43,000 --> 00:48:45,000
都不齐全的那些符号

1496
00:48:45,000 --> 00:48:47,000
它都要在这个系统里面实现出来

1497
00:48:47,000 --> 00:48:49,000
然后还要考虑它各种

1498
00:48:49,000 --> 00:48:50,000
这个在二维

1499
00:48:50,000 --> 00:48:53,000
就是两个维度商店区的

1500
00:48:53,000 --> 00:48:55,000
如何相对排布相对大小

1501
00:48:55,000 --> 00:48:58,000
以及每个字型还要处理的好看

1502
00:48:58,000 --> 00:48:58,000
对吧

1503
00:48:58,000 --> 00:48:59,000
这个就太难了

1504
00:48:59,000 --> 00:49:00,000
对

1505
00:49:00,000 --> 00:49:02,000
这的确是一个非常

1506
00:49:02,000 --> 00:49:05,000
只有宗师级成员能解决的编程问题

1507
00:49:05,000 --> 00:49:07,000
这个你不排数学公式

1508
00:49:07,000 --> 00:49:08,000
你都不知道吗

1509
00:49:08,000 --> 00:49:09,000
就比如说 Sine X

1510
00:49:09,000 --> 00:49:12,000
那个 Sine 是必须要用正立的罗马体

1511
00:49:12,000 --> 00:49:14,000
然后变量 X 呢

1512
00:49:14,000 --> 00:49:15,000
是要用意大利鞋体

1513
00:49:15,000 --> 00:49:17,000
就是不做理工科排版

1514
00:49:17,000 --> 00:49:18,000
都不会意识到这个问题吗

1515
00:49:18,000 --> 00:49:19,000
是

1516
00:49:19,000 --> 00:49:19,000
对吧

1517
00:49:19,000 --> 00:49:20,000
单位的话

1518
00:49:20,000 --> 00:49:21,000
物理量的单位

1519
00:49:21,000 --> 00:49:23,000
是必须要用正立的罗马体

1520
00:49:23,000 --> 00:49:24,000
但是物理的变量

1521
00:49:24,000 --> 00:49:26,000
都必须要用意大利鞋体

1522
00:49:26,000 --> 00:49:27,000
像这个东西

1523
00:49:27,000 --> 00:49:29,000
你跟一般人来讲的话

1524
00:49:29,000 --> 00:49:30,000
他都没有注意到

1525
00:49:30,000 --> 00:49:32,000
哪怕虽然你平时从小

1526
00:49:32,000 --> 00:49:34,000
中小时你看数学课本

1527
00:49:34,000 --> 00:49:36,000
都是那样排出来的

1528
00:49:36,000 --> 00:49:37,000
然后等你自己来排到

1529
00:49:37,000 --> 00:49:39,000
你就觉得总是没有那个味道

1530
00:49:39,000 --> 00:49:40,000
就感觉排出来不像

1531
00:49:40,000 --> 00:49:42,000
这是因为它其中有很多

1532
00:49:42,000 --> 00:49:46,000
它有各自的这样的一个排版规则在

1533
00:49:46,000 --> 00:49:46,000
对

1534
00:49:46,000 --> 00:49:48,000
写公式跟排公式

1535
00:49:48,000 --> 00:49:51,000
甚至自动生成公式之间的关系是

1536
00:49:51,000 --> 00:49:52,000
难度是天长力

1537
00:49:52,000 --> 00:49:54,000
不过我觉得这里还是我要

1538
00:49:54,000 --> 00:49:58,000
我要夹带丝或土一下草

1539
00:49:58,000 --> 00:50:01,000
就是我觉得虽然说它有更加难度

1540
00:50:01,000 --> 00:50:03,000
其实我觉得很多问题都是自找的

1541
00:50:03,000 --> 00:50:04,000
对吧

1542
00:50:04,000 --> 00:50:06,000
没有其他哪个行业有这么多

1543
00:50:06,000 --> 00:50:07,000
龟毛的这个需求

1544
00:50:07,000 --> 00:50:09,000
比如像刚才你听到这个

1545
00:50:09,000 --> 00:50:11,000
听到 Eric 讲的这个

1546
00:50:11,000 --> 00:50:13,000
对同一个概念里面

1547
00:50:13,000 --> 00:50:16,000
还要用不同的这种字符形态

1548
00:50:16,000 --> 00:50:17,000
来去描述它

1549
00:50:17,000 --> 00:50:18,000
你想手写的数学体

1550
00:50:18,000 --> 00:50:19,000
不存在这种区别

1551
00:50:19,000 --> 00:50:19,000
对不对

1552
00:50:19,000 --> 00:50:21,000
你可能都是写个 sign

1553
00:50:21,000 --> 00:50:22,000
然后都是你的手写的那种字符

1554
00:50:22,000 --> 00:50:24,000
然后你就区分一个大小写

1555
00:50:24,000 --> 00:50:27,000
区分一个这个罗马的这个字母

1556
00:50:27,000 --> 00:50:27,000
希腊的字母

1557
00:50:27,000 --> 00:50:29,000
当然也可能也是因为字母 26 个

1558
00:50:29,000 --> 00:50:30,000
你不够用了

1559
00:50:30,000 --> 00:50:31,000
你才会讨责这种东西

1560
00:50:31,000 --> 00:50:34,000
但是到了这个这个数码排版之后

1561
00:50:34,000 --> 00:50:35,000
你就发现

1562
00:50:35,000 --> 00:50:37,000
我有各种各样的这种工具

1563
00:50:37,000 --> 00:50:39,000
这种口情性之后

1564
00:50:39,000 --> 00:50:41,000
你就说我要规定说

1565
00:50:41,000 --> 00:50:43,000
这种这个 sign 要用这么一标识来写

1566
00:50:43,000 --> 00:50:45,000
然后我的那个罗马字符上面

1567
00:50:45,000 --> 00:50:46,000
加个尖又是什么意思

1568
00:50:46,000 --> 00:50:47,000
就很多问题其实是

1569
00:50:47,000 --> 00:50:48,000
就研究数学

1570
00:50:48,000 --> 00:50:51,000
这个做这些照牌系统

1571
00:50:51,000 --> 00:50:53,000
或者说是就是这个编辑

1572
00:50:53,000 --> 00:50:54,000
他们自己给自己找的麻烦

1573
00:50:54,000 --> 00:50:56,000
所以咎由自取

1574
00:50:56,000 --> 00:50:57,000
自作你也不可活

1575
00:50:57,000 --> 00:50:59,000
搞得这么麻烦也活该

1576
00:50:59,000 --> 00:51:00,000
你要这样说

1577
00:51:00,000 --> 00:51:02,000
这不是代数的

1578
00:51:02,000 --> 00:51:04,000
这个他的宿命所在吗

1579
00:51:04,000 --> 00:51:06,000
他用字母代替数吗

1580
00:51:06,000 --> 00:51:07,000
他肯定是数

1581
00:51:07,000 --> 00:51:09,000
字母肯定是越来越不够的嘛

1582
00:51:09,000 --> 00:51:11,000
一开始我们只用纳定字母而已

1583
00:51:11,000 --> 00:51:12,000
然后希腊

1584
00:51:12,000 --> 00:51:13,000
我们的希腊字母

1585
00:51:13,000 --> 00:51:15,000
都是数学老师教的吧

1586
00:51:15,000 --> 00:51:16,000
我相信其他字母

1587
00:51:16,000 --> 00:51:18,000
怎么也都是数学老师教的

1588
00:51:18,000 --> 00:51:18,000
是啊

1589
00:51:18,000 --> 00:51:20,000
我的意思就是说

1590
00:51:20,000 --> 00:51:22,000
这他本来是有一些

1591
00:51:22,000 --> 00:51:24,000
就是说有可能有其他解决方案的

1592
00:51:24,000 --> 00:51:25,000
比如说为什么一定

1593
00:51:25,000 --> 00:51:26,000
比如说那个叫什么来的

1594
00:51:26,000 --> 00:51:28,000
SUM 的那个操作符号

1595
00:51:28,000 --> 00:51:29,000
一定要是这么一个规定的一个格式

1596
00:51:29,000 --> 00:51:30,000
去描述的命

1597
00:51:30,000 --> 00:51:31,000
那个大是一个码

1598
00:51:31,000 --> 00:51:31,000
对吧

1599
00:51:31,000 --> 00:51:32,000
对吧

1600
00:51:32,000 --> 00:51:32,000
Sigma

1601
00:51:32,000 --> 00:51:33,000
然后下面一个 N

1602
00:51:33,000 --> 00:51:35,000
等于顶上到多少到无穷

1603
00:51:35,000 --> 00:51:36,000
然后这边是一个什么东西

1604
00:51:36,000 --> 00:51:37,000
为什么一定要这种结构

1605
00:51:37,000 --> 00:51:38,000
它明明有更简单的方式

1606
00:51:38,000 --> 00:51:38,000
可以写

1607
00:51:38,000 --> 00:51:40,000
给自己找这种麻烦

1608
00:51:40,000 --> 00:51:40,000
对吧

1609
00:51:40,000 --> 00:51:41,000
就 Rail 说的这些东西

1610
00:51:41,000 --> 00:51:42,000
让我想到了很久以前

1611
00:51:42,000 --> 00:51:45,000
读过那篇文章就说数学

1612
00:51:45,000 --> 00:51:47,000
为什么会有现在的这个

1613
00:51:47,000 --> 00:51:49,000
就是非常难的这个 reputation

1614
00:51:50,000 --> 00:51:52,000
原因之一

1615
00:51:52,000 --> 00:51:53,000
跟他采用的这套符号系统

1616
00:51:53,000 --> 00:51:54,000
是分不开的

1617
00:51:54,000 --> 00:51:56,000
就是数学的这套符号系统

1618
00:51:56,000 --> 00:51:58,000
就好像五线谱

1619
00:51:58,000 --> 00:51:59,000
或者是

1620
00:51:59,000 --> 00:51:59,000
对

1621
00:51:59,000 --> 00:52:01,000
它是一个入门的门槛

1622
00:52:01,000 --> 00:52:03,000
它是一个历史严惩下来的

1623
00:52:03,000 --> 00:52:05,000
这么一套自成系统的一个东西

1624
00:52:05,000 --> 00:52:07,000
就假数

1625
00:52:07,000 --> 00:52:10,000
假如说我们有一个数学的公式的理想模型的话

1626
00:52:10,000 --> 00:52:12,000
它并不是适合于

1627
00:52:12,000 --> 00:52:13,000
它不是设计出来的

1628
00:52:13,000 --> 00:52:16,000
描述这个理想模型的最合适的系统

1629
00:52:16,000 --> 00:52:18,000
但是这个系统的存在

1630
00:52:18,000 --> 00:52:19,000
导致于很多人

1631
00:52:19,000 --> 00:52:20,000
他也许有数学天赋

1632
00:52:20,000 --> 00:52:24,000
但是他因为没有办法去理解这套符号系统

1633
00:52:24,000 --> 00:52:26,000
而浪费了他的数学天赋

1634
00:52:26,000 --> 00:52:26,000
就好像那些

1635
00:52:26,000 --> 00:52:27,000
有些很

1636
00:52:27,000 --> 00:52:29,000
可能音乐上面很有造诣的人

1637
00:52:29,000 --> 00:52:31,000
他不懂五线谱一样

1638
00:52:31,000 --> 00:52:33,000
有些人是靠着自己的数学直觉

1639
00:52:33,000 --> 00:52:34,000
可以克服这个的

1640
00:52:34,000 --> 00:52:35,000
比如说那个什么

1641
00:52:35,000 --> 00:52:37,000
印度曾经有过一个数学天才

1642
00:52:37,000 --> 00:52:39,000
叫什么拉努马金之类的一个人

1643
00:52:39,000 --> 00:52:43,000
他就是一个靠着自己发明出来的数学符号

1644
00:52:43,000 --> 00:52:44,000
达到了很多

1645
00:52:44,000 --> 00:52:46,000
怎么说那些科班出身的人

1646
00:52:46,000 --> 00:52:47,000
没能达到数学高度

1647
00:52:47,000 --> 00:52:50,000
但是不是我们每个普通人

1648
00:52:50,000 --> 00:52:52,000
都可以有这样的能力的

1649
00:52:52,000 --> 00:52:54,000
但是这套数学符号

1650
00:52:54,000 --> 00:52:57,000
对于我们每个普通人造成的障碍

1651
00:52:57,000 --> 00:52:58,000
确实确确实实在那

1652
00:52:58,000 --> 00:52:59,000
就好像你在

1653
00:52:59,000 --> 00:53:01,000
你比如说你在知乎或者 whatever

1654
00:53:01,000 --> 00:53:01,000
什么地方

1655
00:53:01,000 --> 00:53:03,000
你想要本来用自己的输入法

1656
00:53:03,000 --> 00:53:05,000
写字写的开开心心的

1657
00:53:05,000 --> 00:53:07,000
忽然你想要插入一个数学公式

1658
00:53:07,000 --> 00:53:09,000
然后你发现你自己的输入法

1659
00:53:09,000 --> 00:53:11,000
完全没有办法帮你插入这个公式

1660
00:53:11,000 --> 00:53:14,000
然后你去找怎么样来画一个公式

1661
00:53:14,000 --> 00:53:17,000
很多人 ended up with

1662
00:53:17,000 --> 00:53:20,000
就是在纸上写一个数学公式

1663
00:53:20,000 --> 00:53:21,000
然后拍一下那个纸的照片

1664
00:53:21,000 --> 00:53:22,000
对吧

1665
00:53:22,000 --> 00:53:24,000
在知乎上很多答案都是这样的

1666
00:53:24,000 --> 00:53:26,000
但是也有一些人会去研究说

1667
00:53:26,000 --> 00:53:29,000
我怎么样用一个比较

1668
00:53:29,000 --> 00:53:33,000
怎么说正统的方式来生成一个公式的图片

1669
00:53:33,000 --> 00:53:37,000
然后他会去发现 Tech 这套东西

1670
00:53:37,000 --> 00:53:38,000
这里面还有一个很核心的问题

1671
00:53:38,000 --> 00:53:43,000
就是说他这套符号系统是通过各种演进过来的

1672
00:53:43,000 --> 00:53:47,000
他并不成体系也没有什么规则可言

1673
00:53:47,000 --> 00:53:49,000
然后他其实是各种不同流派

1674
00:53:49,000 --> 00:53:52,000
最终互相妥协融合的一个结果

1675
00:53:52,000 --> 00:53:52,000
对

1676
00:53:52,000 --> 00:53:54,000
就导致一个事实的问题

1677
00:53:54,000 --> 00:53:55,000
就是说就不要说你

1678
00:53:55,000 --> 00:53:57,000
你我们这种非数学专业的人

1679
00:53:57,000 --> 00:53:58,000
你肯定看不懂

1680
00:53:58,000 --> 00:53:59,000
就是哪怕你学数学专业的人

1681
00:53:59,000 --> 00:54:00,000
你还是要你看到一篇特别

1682
00:54:00,000 --> 00:54:02,000
就是特别前沿的这种数学研究

1683
00:54:02,000 --> 00:54:05,000
你还是得去看他在那篇论文的影文里面

1684
00:54:05,000 --> 00:54:10,000
会先逐步定义他用的这套专门讨论这个话题的

1685
00:54:10,000 --> 00:54:11,000
还得想一想

1686
00:54:11,000 --> 00:54:12,000
符号题是怎么样子

1687
00:54:12,000 --> 00:54:14,000
就等于他还在不断的自我研发

1688
00:54:14,000 --> 00:54:15,000
就是就我们叫什么来的

1689
00:54:15,000 --> 00:54:16,000
DSL 对吧

1690
00:54:16,000 --> 00:54:18,000
Domain Specific Language

1691
00:54:18,000 --> 00:54:19,000
专用领域的语言

1692
00:54:19,000 --> 00:54:20,000
他还在不断的延续

1693
00:54:20,000 --> 00:54:25,000
而所有的这些都是没有一个通用的一个标准的

1694
00:54:25,000 --> 00:54:26,000
对

1695
00:54:26,000 --> 00:54:29,000
而且数学符号内部自己也有流派

1696
00:54:29,000 --> 00:54:30,000
就是什么

1697
00:54:30,000 --> 00:54:33,000
就哪怕我们上学的时候也会学到说

1698
00:54:33,000 --> 00:54:35,000
比如说一个一个矢量的标法

1699
00:54:35,000 --> 00:54:38,000
可能你如果你有粗体的话

1700
00:54:38,000 --> 00:54:39,000
应该用粗体

1701
00:54:39,000 --> 00:54:40,000
然后没有粗体的话

1702
00:54:40,000 --> 00:54:42,000
你要在上面画一个什么箭头之类的

1703
00:54:42,000 --> 00:54:43,000
对对

1704
00:54:43,000 --> 00:54:45,000
然后有些流派可能已经消失了

1705
00:54:45,000 --> 00:54:47,000
比如说我们现在使用的积分

1706
00:54:47,000 --> 00:54:49,000
虽然是号称牛顿发明的

1707
00:54:49,000 --> 00:54:53,000
但是我们使用的这个大 S 的这样一个积分符号

1708
00:54:53,000 --> 00:54:55,000
实际上是莱布尼兹的标法

1709
00:54:55,000 --> 00:54:57,000
牛顿那个标法是非常复杂的

1710
00:54:57,000 --> 00:54:58,000
但即便如此

1711
00:54:58,000 --> 00:55:01,000
我们的那个微分还是有两种方式

1712
00:55:01,000 --> 00:55:01,000
对吧

1713
00:55:01,000 --> 00:55:04,000
一个是什么用那个字母

1714
00:55:04,000 --> 00:55:05,000
那字母叫什么来着

1715
00:55:05,000 --> 00:55:05,000
θ

1716
00:55:05,000 --> 00:55:06,000
θ

1717
00:55:06,000 --> 00:55:08,000
然后另外一种是用撇

1718
00:55:08,000 --> 00:55:09,000
对吧

1719
00:55:09,000 --> 00:55:10,000
那个怎么念我不知道

1720
00:55:10,000 --> 00:55:11,000
我也忘了

1721
00:55:11,000 --> 00:55:12,000
我一直念θ

1722
00:55:12,000 --> 00:55:13,000
好像是念θ

1723
00:55:13,000 --> 00:55:14,000
但肯定不是θ

1724
00:55:14,000 --> 00:55:16,000
那不是θ

1725
00:55:16,000 --> 00:55:18,000
就像一个小 D 一样的东西

1726
00:55:18,000 --> 00:55:18,000
是不是

1727
00:55:18,000 --> 00:55:22,000
而且他们当时发明的符号的时候是手写的吧

1728
00:55:22,000 --> 00:55:23,000
肯定不是排印的吗

1729
00:55:23,000 --> 00:55:24,000
对啊

1730
00:55:24,000 --> 00:55:26,000
就刚才我吐槽了另外一件事情

1731
00:55:26,000 --> 00:55:29,000
就是现在我们排印上规定的各种非常细节

1732
00:55:29,000 --> 00:55:32,000
或者说是为了美观也好的这种要求

1733
00:55:32,000 --> 00:55:34,000
其实你在手写上是复刻不出来的

1734
00:55:34,000 --> 00:55:34,000
你手写

1735
00:55:34,000 --> 00:55:37,000
但你可以写的稍微正开一点

1736
00:55:37,000 --> 00:55:38,000
稍微写的直立一点

1737
00:55:38,000 --> 00:55:39,000
但你有写

1738
00:55:39,000 --> 00:55:40,000
还有各种弯

1739
00:55:40,000 --> 00:55:41,000
还有各种加花

1740
00:55:41,000 --> 00:55:41,000
对吧

1741
00:55:41,000 --> 00:55:44,000
但其实你在手写里面并没有那么多的工具可用

1742
00:55:44,000 --> 00:55:44,000
对吧

1743
00:55:44,000 --> 00:55:47,000
取决于你手写的整齐度

1744
00:55:47,000 --> 00:55:49,000
你如果板书上面写的很快的话

1745
00:55:49,000 --> 00:55:51,000
其实也就很快的一笔带过去

1746
00:55:51,000 --> 00:55:54,000
他在手写过程中和你真的排印中

1747
00:55:54,000 --> 00:55:57,000
他存在一个跳跃的一个过程

1748
00:55:57,000 --> 00:55:58,000
我再查过一下

1749
00:55:58,000 --> 00:55:59,000
就是我刚才查到吧

1750
00:55:59,000 --> 00:56:02,000
首先求导是用 D

1751
00:56:02,000 --> 00:56:03,000
就是字母 D

1752
00:56:03,000 --> 00:56:05,000
DX 比 DY

1753
00:56:05,000 --> 00:56:07,000
然后我刚才说那个符号

1754
00:56:07,000 --> 00:56:08,000
或者说我们刚才手写找到的符号

1755
00:56:08,000 --> 00:56:10,000
不是一个希腊字母

1756
00:56:10,000 --> 00:56:12,000
而是它是偏微分的符号

1757
00:56:12,000 --> 00:56:13,000
它就是 D

1758
00:56:13,000 --> 00:56:15,000
偏微分符号 D

1759
00:56:15,000 --> 00:56:17,000
是全导数符号 D 的变体

1760
00:56:17,000 --> 00:56:19,000
它是 D 的另外一种写法

1761
00:56:19,000 --> 00:56:20,000
就是对

1762
00:56:20,000 --> 00:56:22,000
有一个草书的写体的那个 D

1763
00:56:22,000 --> 00:56:23,000
D 是什么

1764
00:56:23,000 --> 00:56:26,000
是 Differentiation 吗

1765
00:56:26,000 --> 00:56:28,000
Derivative 应该是吧

1766
00:56:28,000 --> 00:56:29,000
Derivative

1767
00:56:29,000 --> 00:56:29,000
对

1768
00:56:29,000 --> 00:56:30,000
导嘛

1769
00:56:30,000 --> 00:56:30,000
对

1770
00:56:30,000 --> 00:56:31,000
就是什么忘道

1771
00:56:31,000 --> 00:56:34,000
早就忘光了

1772
00:56:34,000 --> 00:56:35,000
所以这个东西就是

1773
00:56:35,000 --> 00:56:37,000
他们在发明这个符号的时候

1774
00:56:37,000 --> 00:56:39,000
就是用当时他们觉得

1775
00:56:39,000 --> 00:56:41,000
最方便的方式发明的

1776
00:56:41,000 --> 00:56:43,000
然后他们就肯定又没有想到

1777
00:56:43,000 --> 00:56:46,000
后面这个技术发展以后的问题

1778
00:56:46,000 --> 00:56:46,000
对吧

1779
00:56:46,000 --> 00:56:47,000
他们觉得手写

1780
00:56:47,000 --> 00:56:49,000
当时这个手写起来很方便

1781
00:56:49,000 --> 00:56:51,000
它其实也不一定是为了方便

1782
00:56:51,000 --> 00:56:52,000
它是为了

1783
00:56:52,000 --> 00:56:54,000
就是为了记录一个词

1784
00:56:54,000 --> 00:56:55,000
因为数学这东西很抽象

1785
00:56:55,000 --> 00:56:57,000
所以你有时候记不住

1786
00:56:57,000 --> 00:56:58,000
那么多概念的时候

1787
00:56:58,000 --> 00:56:59,000
你要靠一个 notation

1788
00:56:59,000 --> 00:57:02,000
把它写在这个纸上

1789
00:57:02,000 --> 00:57:03,000
然后帮助你去做一些抽象的

1790
00:57:03,000 --> 00:57:04,000
一些运算

1791
00:57:04,000 --> 00:57:05,000
就是你知道我们

1792
00:57:05,000 --> 00:57:06,000
什么求导啊

1793
00:57:06,000 --> 00:57:07,000
做变形的时候

1794
00:57:07,000 --> 00:57:09,000
都并没有去说

1795
00:57:09,000 --> 00:57:11,000
考虑它的原理

1796
00:57:11,000 --> 00:57:12,000
它在手写的时候

1797
00:57:12,000 --> 00:57:13,000
它就想说

1798
00:57:13,000 --> 00:57:14,000
就用另外一个方式的话

1799
00:57:14,000 --> 00:57:17,000
它就用一个草书的字体来写嘛

1800
00:57:17,000 --> 00:57:19,000
但可是后来想要排印的时候

1801
00:57:19,000 --> 00:57:19,000
那我就得

1802
00:57:19,000 --> 00:57:20,000
就麻烦了

1803
00:57:20,000 --> 00:57:21,000
排印的时候

1804
00:57:21,000 --> 00:57:22,000
我就得必须要

1805
00:57:22,000 --> 00:57:24,000
用另外一个签字来做嘛

1806
00:57:24,000 --> 00:57:25,000
这个像国际音标

1807
00:57:25,000 --> 00:57:26,000
当时也是一样的呀

1808
00:57:26,000 --> 00:57:27,000
国际音标

1809
00:57:27,000 --> 00:57:28,000
大家知道有各种各样

1810
00:57:28,000 --> 00:57:29,000
莫名其妙的符号嘛

1811
00:57:29,000 --> 00:57:31,000
可是当时已经有牵印了

1812
00:57:31,000 --> 00:57:31,000
所以呢

1813
00:57:31,000 --> 00:57:33,000
作为牵印来讲

1814
00:57:33,000 --> 00:57:34,000
他们很方便

1815
00:57:34,000 --> 00:57:35,000
是把字母倒过来

1816
00:57:35,000 --> 00:57:36,000
这个对于牵印来讲

1817
00:57:36,000 --> 00:57:37,000
是很方便的

1818
00:57:37,000 --> 00:57:38,000
所以比如说那个什么

1819
00:57:38,000 --> 00:57:39,000
呃的那个发音的话

1820
00:57:39,000 --> 00:57:40,000
就是倒过来的

1821
00:57:40,000 --> 00:57:41,000
小写字母 E 嘛

1822
00:57:41,000 --> 00:57:42,000
对

1823
00:57:42,000 --> 00:57:43,000
Flip 一下就好了

1824
00:57:43,000 --> 00:57:45,000
手写你要倒写也不方便呀

1825
00:57:45,000 --> 00:57:47,000
这个是在签字的时候

1826
00:57:47,000 --> 00:57:47,000
是很方便

1827
00:57:47,000 --> 00:57:48,000
可是反过来

1828
00:57:48,000 --> 00:57:49,000
在电脑里面

1829
00:57:49,000 --> 00:57:50,000
你要输入那个评

1830
00:57:50,000 --> 00:57:51,000
就超难的

1831
00:57:51,000 --> 00:57:52,000
直到现在你要输

1832
00:57:52,000 --> 00:57:53,000
都很难输嘛

1833
00:57:53,000 --> 00:57:53,000
对吧

1834
00:57:53,000 --> 00:57:54,000
国际音标这套东西

1835
00:57:54,000 --> 00:57:55,000
对吧

1836
00:57:55,000 --> 00:57:56,000
是是是

1837
00:57:56,000 --> 00:57:57,000
那其实泰河

1838
00:57:57,000 --> 00:57:59,000
他在解决数学公社的时候

1839
00:57:59,000 --> 00:58:00,000
其实也面临着这个问题

1840
00:58:00,000 --> 00:58:02,000
就是说他要输入那些

1841
00:58:02,000 --> 00:58:03,000
各种各样的

1842
00:58:03,000 --> 00:58:05,000
这个奇怪的符号的时候

1843
00:58:05,000 --> 00:58:06,000
他都是用一个命令的

1844
00:58:06,000 --> 00:58:08,000
就他要线性化成一个

1845
00:58:08,000 --> 00:58:10,000
这个键盘上

1846
00:58:10,000 --> 00:58:11,000
就是 ASCII

1847
00:58:11,000 --> 00:58:12,000
那个就是这个什么

1848
00:58:12,000 --> 00:58:12,000
QWERTY 键盘上

1849
00:58:12,000 --> 00:58:14,000
存在的这些案件

1850
00:58:14,000 --> 00:58:16,000
还对于那个

1851
00:58:16,000 --> 00:58:17,000
把它用一串命令

1852
00:58:17,000 --> 00:58:18,000
来指代某一个符号嘛

1853
00:58:18,000 --> 00:58:20,000
就跟我们现在转易一样嘛

1854
00:58:20,000 --> 00:58:20,000
对吧

1855
00:58:20,000 --> 00:58:21,000
是的

1856
00:58:21,000 --> 00:58:26,000
我觉得泰河面临的问题

1857
00:58:26,000 --> 00:58:27,000
跟 HTML 所解决的问题

1858
00:58:27,000 --> 00:58:28,000
实际上一样的

1859
00:58:28,000 --> 00:58:30,000
当然 HTML 出现

1860
00:58:30,000 --> 00:58:31,000
要比泰河晚很多

1861
00:58:31,000 --> 00:58:32,000
或者是 XML 出现

1862
00:58:32,000 --> 00:58:33,000
要比泰河晚很多

1863
00:58:33,000 --> 00:58:34,000
但他们面临的问题

1864
00:58:34,000 --> 00:58:35,000
和解决问题的方式

1865
00:58:35,000 --> 00:58:36,000
实际上是相似的

1866
00:58:36,000 --> 00:58:38,000
不过泰河可能

1867
00:58:38,000 --> 00:58:39,000
因为它出现的比较早

1868
00:58:39,000 --> 00:58:40,000
所以它没有那么

1869
00:58:40,000 --> 00:58:42,000
考虑周全吧

1870
00:58:42,000 --> 00:58:43,000
在这里其实有个

1871
00:58:43,000 --> 00:58:44,000
很好的问题

1872
00:58:44,000 --> 00:58:46,000
就是说到底形式和内容

1873
00:58:46,000 --> 00:58:47,000
是不是能够分离的

1874
00:58:47,000 --> 00:58:48,000
我觉得泰河

1875
00:58:48,000 --> 00:58:49,000
或者是 Latech 也好

1876
00:58:49,000 --> 00:58:50,000
它证明的这件事情

1877
00:58:50,000 --> 00:58:52,000
是实现不了的

1878
00:58:52,000 --> 00:58:55,000
就是说 HTML 和 CSS

1879
00:58:55,000 --> 00:58:57,000
一个写语义

1880
00:58:57,000 --> 00:58:58,000
一个写样式

1881
00:58:58,000 --> 00:58:59,000
这件事情只是一个

1882
00:58:59,000 --> 00:59:00,000
美好的愿望而已

1883
00:59:00,000 --> 00:59:01,000
因为真正你落实到

1884
00:59:01,000 --> 00:59:02,000
具体的那些

1885
00:59:02,000 --> 00:59:04,000
非标准化文档的

1886
00:59:04,000 --> 00:59:05,000
那些细节的时候

1887
00:59:05,000 --> 00:59:06,000
你就发现

1888
00:59:06,000 --> 00:59:07,000
你没有这种形式上

1889
00:59:07,000 --> 00:59:08,000
那种分离的细节了

1890
00:59:08,000 --> 00:59:08,000
比如说就刚才

1891
00:59:08,000 --> 00:59:09,000
这个情况嘛

1892
00:59:09,000 --> 00:59:10,000
这个 SUM 对吧

1893
00:59:10,000 --> 00:59:12,000
然后从 1 到 100 的

1894
00:59:12,000 --> 00:59:13,000
这个积分

1895
00:59:13,000 --> 00:59:14,000
积到多少

1896
00:59:14,000 --> 00:59:15,000
然后再去个什么样的技术

1897
00:59:15,000 --> 00:59:17,000
你如果要去用

1898
00:59:17,000 --> 00:59:19,000
这个完全形式和内容

1899
00:59:19,000 --> 00:59:19,000
分开的东西

1900
00:59:19,000 --> 00:59:20,000
去描述它的话

1901
00:59:20,000 --> 00:59:21,000
泰河其实是不支持的

1902
00:59:21,000 --> 00:59:22,000
Latech 也是不支持的

1903
00:59:22,000 --> 00:59:23,000
他从来没有支持过

1904
00:59:23,000 --> 00:59:24,000
这件事情

1905
00:59:24,000 --> 00:59:26,000
最终你还是要去描述

1906
00:59:26,000 --> 00:59:27,000
它的相对位置

1907
00:59:27,000 --> 00:59:29,000
一定要支持语义的话

1908
00:59:29,000 --> 00:59:31,000
可能只能用 MassML 之类的

1909
00:59:31,000 --> 00:59:34,000
Mass Markup Language

1910
00:59:34,000 --> 00:59:34,000
或者 Mathematical

1911
00:59:34,000 --> 00:59:35,000
对啊

1912
00:59:35,000 --> 00:59:36,000
所以也就是刚才

1913
00:59:36,000 --> 00:59:37,000
你念那一段的

1914
00:59:37,000 --> 00:59:38,000
对这个的一个指责嘛

1915
00:59:38,000 --> 00:59:40,000
就是说你除非有一套

1916
00:59:40,000 --> 00:59:41,000
完整的这种语言

1917
00:59:41,000 --> 00:59:43,000
去支持描述一个结构

1918
00:59:43,000 --> 00:59:44,000
就本质上

1919
00:59:44,000 --> 00:59:45,000
泰河也好

1920
00:59:45,000 --> 00:59:45,000
Latech 也好

1921
00:59:45,000 --> 00:59:47,000
它去描述一个公式的时候

1922
00:59:47,000 --> 00:59:49,000
它并不单纯的是

1923
00:59:49,000 --> 00:59:50,000
描述那公式的一个结构

1924
00:59:50,000 --> 00:59:52,000
它其实描述那公式

1925
00:59:52,000 --> 00:59:53,000
长什么样子

1926
00:59:53,000 --> 00:59:54,000
大概长什么样子

1927
00:59:54,000 --> 00:59:55,000
大致结构是如何

1928
00:59:55,000 --> 00:59:57,000
你并不能从

1929
00:59:57,000 --> 00:59:58,000
就什么意思

1930
00:59:58,000 --> 00:59:59,000
如果说你能够用一个

1931
00:59:59,000 --> 01:00:00,000
用这个 Latech

1932
01:00:00,000 --> 01:00:01,000
去描述一个结构的话

1933
01:00:01,000 --> 01:00:03,000
理论上你是可以去

1934
01:00:03,000 --> 01:00:03,000
Parse

1935
01:00:03,000 --> 01:00:05,000
去解析

1936
01:00:05,000 --> 01:00:07,000
它的结构

1937
01:00:07,000 --> 01:00:08,000
得到你想要的

1938
01:00:08,000 --> 01:00:09,000
那个公式的一些

1939
01:00:09,000 --> 01:00:10,000
比如说变形和运算

1940
01:00:10,000 --> 01:00:11,000
它是可以自动化的

1941
01:00:11,000 --> 01:00:11,000
对吧

1942
01:00:11,000 --> 01:00:12,000
但在这件事情

1943
01:00:12,000 --> 01:00:13,000
在 Tek 里面是无法实现的

1944
01:00:13,000 --> 01:00:15,000
因为它的形式和内容

1945
01:00:15,000 --> 01:00:16,000
在微观的层面上

1946
01:00:16,000 --> 01:00:17,000
是融合在一起的

1947
01:00:17,000 --> 01:00:19,000
你不要对 Tek 要求太高

1948
01:00:19,000 --> 01:00:20,000
Tek 它原来一开始

1949
01:00:20,000 --> 01:00:22,000
它就是个排版引擎而已

1950
01:00:22,000 --> 01:00:23,000
它跟这个结构

1951
01:00:23,000 --> 01:00:25,000
一点关系都没有

1952
01:00:25,000 --> 01:00:26,000
我知道

1953
01:00:26,000 --> 01:00:27,000
刚才不是在讨论

1954
01:00:27,000 --> 01:00:28,000
就是说 Latech

1955
01:00:28,000 --> 01:00:30,000
在说这个内容和形式的分离

1956
01:00:30,000 --> 01:00:31,000
是对应于

1957
01:00:31,000 --> 01:00:33,000
这个 HTML 和 CSS 这个关系

1958
01:00:33,000 --> 01:00:34,000
但这个其实我觉得

1959
01:00:34,000 --> 01:00:36,000
在这里面

1960
01:00:36,000 --> 01:00:36,000
其实并没有

1961
01:00:36,000 --> 01:00:37,000
很好的体现出这一点

1962
01:00:37,000 --> 01:00:39,000
它只是有这种倾向

1963
01:00:39,000 --> 01:00:39,000
对吧

1964
01:00:39,000 --> 01:00:41,000
但其实在实现层面上

1965
01:00:41,000 --> 01:00:42,000
它并没有

1966
01:00:42,000 --> 01:00:43,000
非常彻底的

1967
01:00:43,000 --> 01:00:44,000
去贯彻这件事情

1968
01:00:44,000 --> 01:00:44,000
Eric 说

1969
01:00:44,000 --> 01:00:46,000
我们不要去指责

1970
01:00:46,000 --> 01:00:47,000
Latech 这件事情

1971
01:00:47,000 --> 01:00:47,000
但问题

1972
01:00:47,000 --> 01:00:49,000
我们现在面临一个问题

1973
01:00:49,000 --> 01:00:51,000
就是 Tek 是业界标准

1974
01:00:51,000 --> 01:00:52,000
如果我能

1975
01:00:52,000 --> 01:00:53,000
就作为一个魔鬼代言人

1976
01:00:53,000 --> 01:00:54,000
我站到刚才那篇

1977
01:00:54,000 --> 01:00:56,000
批驳 Tek 的文章的

1978
01:00:56,000 --> 01:00:58,000
观点上来说一句话

1979
01:00:58,000 --> 01:00:59,000
Tek 它实际上

1980
01:00:59,000 --> 01:01:00,000
的确就是一个

1981
01:01:00,000 --> 01:01:01,000
业界独流这么一个状况

1982
01:01:01,000 --> 01:01:04,000
你用 Tek 写出来的公式

1983
01:01:04,000 --> 01:01:05,000
面临的一个问题

1984
01:01:05,000 --> 01:01:07,000
就是它没有办法被

1985
01:01:07,000 --> 01:01:09,000
很轻易的被

1986
01:01:09,000 --> 01:01:09,000
Parse

1987
01:01:09,000 --> 01:01:10,000
意向 Parse

1988
01:01:10,000 --> 01:01:11,000
对吧

1989
01:01:11,000 --> 01:01:12,000
而且尤其是现在

1990
01:01:12,000 --> 01:01:13,000
比如说知乎

1991
01:01:13,000 --> 01:01:15,000
你在知乎篇文章里面

1992
01:01:15,000 --> 01:01:15,000
生成一个

1993
01:01:15,000 --> 01:01:17,000
SVG 格式的公式

1994
01:01:17,000 --> 01:01:19,000
这个 SVG 格式

1995
01:01:19,000 --> 01:01:20,000
描述的公式

1996
01:01:20,000 --> 01:01:22,000
原原本本的

1997
01:01:22,000 --> 01:01:22,000
就是一个公式

1998
01:01:22,000 --> 01:01:24,000
怎么画出来的

1999
01:01:24,000 --> 01:01:25,000
它跟这个公式的语意

2000
01:01:25,000 --> 01:01:26,000
毫无关联

2001
01:01:26,000 --> 01:01:26,000
对吧

2002
01:01:26,000 --> 01:01:27,000
毫无关联

2003
01:01:27,000 --> 01:01:28,000
对我们可不可以说

2004
01:01:28,000 --> 01:01:29,000
Tek 的存在

2005
01:01:29,000 --> 01:01:33,000
导致了整个数学的语意表示

2006
01:01:33,000 --> 01:01:34,000
在互联网上的存在

2007
01:01:34,000 --> 01:01:36,000
处于一个支离破碎的

2008
01:01:36,000 --> 01:01:38,000
这个我觉得也不能这么指责

2009
01:01:38,000 --> 01:01:40,000
这个是一个结果

2010
01:01:40,000 --> 01:01:41,000
但是它并不是核心原因

2011
01:01:41,000 --> 01:01:42,000
是的

2012
01:01:42,000 --> 01:01:44,000
但是就我的意思是说

2013
01:01:44,000 --> 01:01:46,000
你不能说 Tek 就因此

2014
01:01:46,000 --> 01:01:47,000
不该被指责了

2015
01:01:47,000 --> 01:01:48,000
因为它是

2016
01:01:48,000 --> 01:01:49,000
它作为一个事实标准

2017
01:01:49,000 --> 01:01:51,000
它带来了现在业界的

2018
01:01:51,000 --> 01:01:51,000
这么一个现况

2019
01:01:51,000 --> 01:01:52,000
对吧

2020
01:01:52,000 --> 01:01:53,000
我明白你说的意思

2021
01:01:53,000 --> 01:01:55,000
我想表达的点是说

2022
01:01:55,000 --> 01:01:57,000
这件事情你换任何一个软件

2023
01:01:57,000 --> 01:01:58,000
都是不可能实现的

2024
01:01:58,000 --> 01:01:59,000
那老师

2025
01:01:59,000 --> 01:01:59,000
就是那个 Math

2026
01:01:59,000 --> 01:02:00,000
Macrof Language

2027
01:02:00,000 --> 01:02:02,000
也没有实现这一点

2028
01:02:02,000 --> 01:02:05,000
就是因为这个问题出在于

2029
01:02:05,000 --> 01:02:05,000
那个底层

2030
01:02:05,000 --> 01:02:07,000
我们要表示的那套体系

2031
01:02:07,000 --> 01:02:09,000
那套数学符号本身

2032
01:02:09,000 --> 01:02:10,000
就不支持这一点

2033
01:02:10,000 --> 01:02:11,000
它的结构

2034
01:02:11,000 --> 01:02:12,000
不是那么的清晰明确的

2035
01:02:12,000 --> 01:02:14,000
这是数学符号本身的问题

2036
01:02:14,000 --> 01:02:15,000
而不是描述它

2037
01:02:15,000 --> 01:02:17,000
或者去给它排版的

2038
01:02:17,000 --> 01:02:18,000
其他的这些

2039
01:02:18,000 --> 01:02:18,000
没错

2040
01:02:18,000 --> 01:02:19,000
引擎的问题

2041
01:02:19,000 --> 01:02:21,000
然后这个讨论

2042
01:02:21,000 --> 01:02:23,000
这个讨论就没有结果了

2043
01:02:23,000 --> 01:02:25,000
那我们在说什么

2044
01:02:25,000 --> 01:02:27,000
这是不可能有结果的

2045
01:02:27,000 --> 01:02:30,000
因为我们不是可以左右这个历史进程的人

2046
01:02:30,000 --> 01:02:32,000
我们只是作为历史的批判者

2047
01:02:32,000 --> 01:02:34,000
对滚滚长江东试水

2048
01:02:34,000 --> 01:02:35,000
对吧

2049
01:02:35,000 --> 01:02:37,000
我们只是两个渔桥

2050
01:02:37,000 --> 01:02:38,000
在这边喝酒

2051
01:02:38,000 --> 01:02:39,000
然后讨论这些事情

2052
01:02:39,000 --> 01:02:40,000
对

2053
01:02:40,000 --> 01:02:41,000
所以我觉得还是

2054
01:02:41,000 --> 01:02:42,000
就是回到之前那个评书里面

2055
01:02:42,000 --> 01:02:45,000
我觉得目前这么去概括它

2056
01:02:45,000 --> 01:02:46,000
这个是比较

2057
01:02:46,000 --> 01:02:48,000
就是中肯的一个评价

2058
01:02:48,000 --> 01:02:48,000
相对来说

2059
01:02:48,000 --> 01:02:49,000
我觉得就是说

2060
01:02:49,000 --> 01:02:52,000
泰河只是一个底层的

2061
01:02:52,000 --> 01:02:53,000
不涉及说内容

2062
01:02:53,000 --> 01:02:55,000
还是形式的这么一个排版引擎

2063
01:02:55,000 --> 01:02:55,000
对

2064
01:02:55,000 --> 01:02:57,000
因为还把引擎本质上展现的是一个形式

2065
01:02:57,000 --> 01:02:58,000
对不对

2066
01:02:58,000 --> 01:02:59,000
它并不是体现的内容

2067
01:02:59,000 --> 01:03:02,000
你不可能去通过读泰河的圆码

2068
01:03:02,000 --> 01:03:03,000
去读懂这本书涨

2069
01:03:03,000 --> 01:03:05,000
你还是要看它最终 compile 出来的那本书涨

2070
01:03:05,000 --> 01:03:06,000
什么样子

2071
01:03:06,000 --> 01:03:07,000
然后呢

2072
01:03:07,000 --> 01:03:10,000
Lamport 在上面做的一个重大的一个贡献

2073
01:03:10,000 --> 01:03:18,000
是说在一个无结构的这个体系上面引入了就是这个 macro 的这么一个宏观的一个结构

2074
01:03:18,000 --> 01:03:20,000
实现了章节对吧

2075
01:03:20,000 --> 01:03:21,000
实现了这个 section

2076
01:03:21,000 --> 01:03:24,000
然后实现了这个数学公式的一些实现了这个包管理

2077
01:03:24,000 --> 01:03:25,000
实现了这个模块化

2078
01:03:25,000 --> 01:03:26,000
但是呢

2079
01:03:26,000 --> 01:03:28,000
具体的在非常微观的层面上

2080
01:03:28,000 --> 01:03:31,000
它肯定还是无法完全的结构化

2081
01:03:31,000 --> 01:03:33,000
就好像我们现在说

2082
01:03:33,000 --> 01:03:37,000
哪怕是说当年提这个 html 和 cs 的这个形式的那个分离

2083
01:03:37,000 --> 01:03:37,000
提到现在

2084
01:03:37,000 --> 01:03:39,000
我们现在去看 web

2085
01:03:39,000 --> 01:03:43,000
它这两个事情还是就是就是互相连结在一起的

2086
01:03:43,000 --> 01:03:45,000
你就到微观前面上还是无法分开

2087
01:03:45,000 --> 01:03:48,000
所以我觉得这里面也就是我们的技术

2088
01:03:48,000 --> 01:03:52,000
理想和客观现实之间的这个妥协点

2089
01:03:52,000 --> 01:03:53,000
就是这样子

2090
01:03:53,000 --> 01:04:00,000
诶 我很好奇就是你们对那个那个 w 3 c 那个 massml 什么

2091
01:04:00,000 --> 01:04:02,000
有什么作合评论

2092
01:04:02,000 --> 01:04:04,000
xml 就像暴力一样

2093
01:04:04,000 --> 01:04:05,000
你如果没有解决问题

2094
01:04:05,000 --> 01:04:07,000
你就用更多的暴力

2095
01:04:07,000 --> 01:04:08,000
大概这个感觉

2096
01:04:08,000 --> 01:04:12,000
就是 massml 它本质上就是用 xml 来

2097
01:04:12,000 --> 01:04:13,000
就是叠船架屋嘛

2098
01:04:13,000 --> 01:04:15,000
就不停的夹东西嘛

2099
01:04:15,000 --> 01:04:16,000
啰啰嗦嗦的

2100
01:04:16,000 --> 01:04:17,000
xml 就是这样

2101
01:04:17,000 --> 01:04:19,000
xml 作为当时的一个银蛋

2102
01:04:19,000 --> 01:04:23,000
就 90 年代的人觉得好像你用

2103
01:04:23,000 --> 01:04:26,000
原数据去描述数据就可以得到

2104
01:04:26,000 --> 01:04:29,000
就可以让数据更好的被处理

2105
01:04:29,000 --> 01:04:31,000
但是人们会发现原数据本身也是数据

2106
01:04:31,000 --> 01:04:34,000
然后你需要给原数据加上更多原数据

2107
01:04:34,000 --> 01:04:36,000
你只只虽然无穷尽也

2108
01:04:36,000 --> 01:04:39,000
但我觉得 massml 虽然是一个非常复杂的文档

2109
01:04:39,000 --> 01:04:43,000
它本质上也不是让人来写的和让人来读的

2110
01:04:43,000 --> 01:04:45,000
它的存在意义就像 xml 一样

2111
01:04:45,000 --> 01:04:46,000
它是为了保存信息

2112
01:04:46,000 --> 01:04:48,000
然后给信息加上原信息

2113
01:04:48,000 --> 01:04:50,000
虽然它的手段非常的拙劣

2114
01:04:50,000 --> 01:04:51,000
或者说非常的啰嗦

2115
01:04:51,000 --> 01:04:54,000
但是它还是起到它的应有的目的

2116
01:04:54,000 --> 01:04:56,000
其实你不用多看

2117
01:04:56,000 --> 01:05:00,000
massml 就是 html for 公式

2118
01:05:00,000 --> 01:05:01,000
就带来这种感觉

2119
01:05:01,000 --> 01:05:06,000
就是它你可以把所有的符号用监控号扩起来

2120
01:05:06,000 --> 01:05:11,000
然后监控号里面的文本就是告诉你这个符号是干嘛的

2121
01:05:11,000 --> 01:05:16,000
它维系了一套数学的公式的语义

2122
01:05:16,000 --> 01:05:23,000
而且它基本上没有涉及说这个语音应该是怎么用什么样的方法来表示的

2123
01:05:23,000 --> 01:05:30,000
所以理论上你可以用一套类似于 css 的东西来描述一个 massml 生成的

2124
01:05:30,000 --> 01:05:33,000
用 massml 来描述的一个数学公式

2125
01:05:33,000 --> 01:05:42,000
而 massml 本身只负责描述这个数学公式里面每一个元件之间的关系

2126
01:05:42,000 --> 01:05:43,000
大概这样

2127
01:05:43,000 --> 01:05:47,000
它的最大的问题就是你要编辑它或者是你要生成它是非常麻烦的

2128
01:05:47,000 --> 01:05:49,000
但是你读起来其实还是比较简单

2129
01:05:49,000 --> 01:05:52,000
massml 这名字就很难念

2130
01:05:52,000 --> 01:05:53,000
mathematic markup language

2131
01:05:53,000 --> 01:06:03,000
这个东西它本质上就是把 tech 的理想用 xml 这个标记语言重新实现一遍

2132
01:06:03,000 --> 01:06:05,000
但其实他们两个都没有实现刚才我说的那一点

2133
01:06:05,000 --> 01:06:09,000
不是不是我觉得这个还是差别蛮大的

2134
01:06:09,000 --> 01:06:15,000
因为 tech 就是我们介绍几个 tech 的最比较基本的那个命令

2135
01:06:15,000 --> 01:06:20,000
就像 html 有什么 em 有什么 strong 一样

2136
01:06:20,000 --> 01:06:26,000
tech 是有比如说 textbf boldface 或者是 textit italic

2137
01:06:26,000 --> 01:06:27,000
诸如此类的

2138
01:06:27,000 --> 01:06:29,000
就是你说 textbf 描述的是什么

2139
01:06:29,000 --> 01:06:30,000
描述的是它的风格

2140
01:06:30,000 --> 01:06:35,000
就是我说接下来这个部分要用粗体来描述

2141
01:06:35,000 --> 01:06:36,000
可是这个粗体的意义是什么

2142
01:06:36,000 --> 01:06:41,000
就它跟这个东西的实际语意是毫无关联的

2143
01:06:41,000 --> 01:06:44,000
但是 massml 这边就它的每个标签

2144
01:06:44,000 --> 01:06:46,000
都是跟这个语意相关的

2145
01:06:46,000 --> 01:06:49,000
你不能只说这个东西需要用粗体

2146
01:06:49,000 --> 01:06:53,000
你必须在 massml 里面描述这个粗体标出来的东西是什么

2147
01:06:53,000 --> 01:06:56,000
就粗体这个概念在那里面不存在

2148
01:06:56,000 --> 01:06:58,000
它实际上在理念上是要比

2149
01:06:58,000 --> 01:06:59,000
对吧

2150
01:06:59,000 --> 01:07:01,000
它其实要表述的是这个数学结构怎么回事

2151
01:07:01,000 --> 01:07:02,000
就是它表述的是一个

2152
01:07:02,000 --> 01:07:04,000
这样我开始提出了一个第一个问题

2153
01:07:04,000 --> 01:07:07,000
就是数学公式的那些各种 notation 的结构

2154
01:07:07,000 --> 01:07:10,000
它想用一个通用的方法把它描述出来

2155
01:07:10,000 --> 01:07:14,000
其实这个东西本来就是一个很困难的

2156
01:07:14,000 --> 01:07:16,000
这个事情就几乎不可能完全的用

2157
01:07:16,000 --> 01:07:19,000
所以它本身的复杂性是来源于数学公式本身的复杂性

2158
01:07:19,000 --> 01:07:23,000
但它还是描述出了数学公式之间的关系的

2159
01:07:23,000 --> 01:07:24,000
就好像 lisp

2160
01:07:24,000 --> 01:07:25,000
比如说 lisp

2161
01:07:25,000 --> 01:07:28,000
你用 lisp 可以描述出任何足够复杂的

2162
01:07:28,000 --> 01:07:31,000
就任何复杂的数学公式都可以用 lisp 描述出来

2163
01:07:31,000 --> 01:07:32,000
只不过 lisp 的那个描述

2164
01:07:32,000 --> 01:07:35,000
你可能就是非常反人类的

2165
01:07:35,000 --> 01:07:35,000
对吧

2166
01:07:35,000 --> 01:07:37,000
但它是可以的

2167
01:07:37,000 --> 01:07:39,000
massml 实际上做到的事情跟 lisp 差不多

2168
01:07:39,000 --> 01:07:40,000
对啊

2169
01:07:40,000 --> 01:07:43,000
就是说引入一个这个就是数状结构去描述

2170
01:07:43,000 --> 01:07:47,000
去描述一个数学的那个 notation 把它拆解出来嘛

2171
01:07:47,000 --> 01:07:47,000
对

2172
01:07:47,000 --> 01:07:49,000
那这么比的话

2173
01:07:49,000 --> 01:07:53,000
它其实应该说是应该是它选择的那个载体不好嘛

2174
01:07:53,000 --> 01:07:57,000
这个 mathml 这个坑实在太深了

2175
01:07:57,000 --> 01:08:01,000
所以我们接下来要往什么地方讲

2176
01:08:01,000 --> 01:08:03,000
给大家说一下各种环境下的 tech 嘛

2177
01:08:03,000 --> 01:08:04,000
OK

2178
01:08:04,000 --> 01:08:07,000
对到底有多少种 XXtech

2179
01:08:07,000 --> 01:08:09,000
回乡字回字有几种写法

2180
01:08:09,000 --> 01:08:11,000
那就多了我跟你说

2181
01:08:11,000 --> 01:08:11,000
OK

2182
01:08:11,000 --> 01:08:13,000
假如你听我们的节目

2183
01:08:13,000 --> 01:08:15,000
然后对 tech 产生了兴趣

2184
01:08:15,000 --> 01:08:18,000
那么首先最重要的一件事情就是获得 tech

2185
01:08:18,000 --> 01:08:20,000
会有这样的人吗

2186
01:08:20,000 --> 01:08:22,000
为什么每次都要拆穿我

2187
01:08:22,000 --> 01:08:24,000
首先你要获得哪一个 tech

2188
01:08:24,000 --> 01:08:27,000
或者说假如你是一个即将要写论文的人

2189
01:08:27,000 --> 01:08:29,000
然后你想要尝试一下这个传说中

2190
01:08:29,000 --> 01:08:32,000
中世纪程序员使用的解决方案

2191
01:08:32,000 --> 01:08:34,000
那么你需要获得一个

2192
01:08:34,000 --> 01:08:37,000
你所使用的操作性能上的 tech 环境

2193
01:08:37,000 --> 01:08:41,000
因为在座的四位都是 Mac 用户

2194
01:08:41,000 --> 01:08:42,000
那我们要先从 Mac 说起吧

2195
01:08:42,000 --> 01:08:44,000
就我当时用的是

2196
01:08:44,000 --> 01:08:46,000
就叫 Mactech

2197
01:08:46,000 --> 01:08:47,000
那个很老了

2198
01:08:47,000 --> 01:08:49,000
但是我要是没记错的话

2199
01:08:49,000 --> 01:08:52,000
Mactech 是现在已经停止开发了

2200
01:08:52,000 --> 01:08:53,000
嗯

2201
01:08:53,000 --> 01:08:54,000
还有更新版的

2202
01:08:54,000 --> 01:08:57,000
你现在去搜这个 Mactech

2203
01:08:57,000 --> 01:09:00,000
就是 MAC.TEX 这个东西

2204
01:09:00,000 --> 01:09:06,000
它会让你去到这个一个这个 Mactech 2020 的发行版

2205
01:09:06,000 --> 01:09:09,000
对说到这个就要先解释一下什么是发行版

2206
01:09:09,000 --> 01:09:12,000
本质上 Mactech 它是做了一个事

2207
01:09:12,000 --> 01:09:16,000
就是它把常用的那些工具包都给你打包在一起

2208
01:09:16,000 --> 01:09:19,000
然后你可以一次去下载完安装好就可以开始用了

2209
01:09:19,000 --> 01:09:22,000
你不用考虑今天需要到底哪些组件

2210
01:09:22,000 --> 01:09:24,000
然后组件相互作用是什么样子

2211
01:09:24,000 --> 01:09:26,000
你可以大致略过这个问题

2212
01:09:26,000 --> 01:09:28,000
就有点像 Linux 是一样对吧

2213
01:09:28,000 --> 01:09:30,000
我们现在不是说你要去装一个 Linux

2214
01:09:30,000 --> 01:09:30,000
对吧

2215
01:09:30,000 --> 01:09:32,000
你先选一个发行版对吧

2216
01:09:32,000 --> 01:09:33,000
你要选什么 Ubuntu 啊

2217
01:09:33,000 --> 01:09:35,000
Fedora 啊之类的对吧

2218
01:09:35,000 --> 01:09:37,000
你要他们把那些打包的工作给你做好了

2219
01:09:37,000 --> 01:09:39,000
你去用一个现成的版本就可以了

2220
01:09:39,000 --> 01:09:42,000
那 Mac 上面可能还是用这个比较简单一些

2221
01:09:42,000 --> 01:09:44,000
然后如果你在 Windows 上的话

2222
01:09:44,000 --> 01:09:46,000
应该去下载

2223
01:09:46,000 --> 01:09:48,000
据我所知应该是 Mictech

2224
01:09:48,000 --> 01:09:51,000
就是 M-I-K-T-E-X

2225
01:09:51,000 --> 01:09:53,000
这个我没用过啊

2226
01:09:53,000 --> 01:09:54,000
就这个我不知道现在还是不是

2227
01:09:54,000 --> 01:09:56,000
我上本科的时候

2228
01:09:56,000 --> 01:09:59,000
当时用过 Windows 写系统

2229
01:09:59,000 --> 01:10:01,000
然后装的确实是这个系统

2230
01:10:01,000 --> 01:10:02,000
就是 MIC

2231
01:10:02,000 --> 01:10:04,000
MIC 还是 MIC

2232
01:10:04,000 --> 01:10:05,000
太好用了

2233
01:10:05,000 --> 01:10:07,000
也没有什么其他好选的

2234
01:10:07,000 --> 01:10:10,000
你就你是存在说能用和不能用的区别

2235
01:10:10,000 --> 01:10:12,000
其他就你都你对于一个新手

2236
01:10:12,000 --> 01:10:13,000
你根本属于不能用的状态

2237
01:10:13,000 --> 01:10:14,000
就不用考虑这个问题了

2238
01:10:14,000 --> 01:10:15,000
你知道吗

2239
01:10:15,000 --> 01:10:19,000
那如果你用 Linux 的话呢

2240
01:10:19,000 --> 01:10:22,000
你需要自己手写一个 Tek 的这么一个系统

2241
01:10:22,000 --> 01:10:24,000
Linux 上没有 Tek 的包

2242
01:10:24,000 --> 01:10:26,000
所以就是比较尴尬的一件事情

2243
01:10:26,000 --> 01:10:27,000
应该有的吧

2244
01:10:27,000 --> 01:10:28,000
什么 apt 各种

2245
01:10:28,000 --> 01:10:31,000
我在胡说

2246
01:10:31,000 --> 01:10:34,000
就 Linux 上的 Tek

2247
01:10:34,000 --> 01:10:36,000
实际上是最好的一个

2248
01:10:36,000 --> 01:10:37,000
最好的一个 distribution

2249
01:10:37,000 --> 01:10:38,000
Teklive

2250
01:10:38,000 --> 01:10:42,000
这个东西应该是目前最积极维护

2251
01:10:42,000 --> 01:10:44,000
然后也是用户技术最大的一个群体

2252
01:10:44,000 --> 01:10:45,000
也是我印象中

2253
01:10:45,000 --> 01:10:47,000
体积最庞大的

2254
01:10:47,000 --> 01:10:49,000
他当时我记得是在

2255
01:10:49,000 --> 01:10:50,000
多少

2256
01:10:50,000 --> 01:10:51,000
十几年前

2257
01:10:51,000 --> 01:10:53,000
那个时候互联网状态想象一下

2258
01:10:53,000 --> 01:10:54,000
他的一个完整安装包

2259
01:10:54,000 --> 01:10:56,000
都已经要小十个 GB 了

2260
01:10:56,000 --> 01:10:57,000
你想象一下

2261
01:10:57,000 --> 01:10:58,000
但是不管

2262
01:10:58,000 --> 01:11:00,000
不管你在哪个平台上

2263
01:11:00,000 --> 01:11:02,000
用哪个发行版吧

2264
01:11:02,000 --> 01:11:04,000
你的工作流程基本上一样的

2265
01:11:04,000 --> 01:11:06,000
就是你要先写一个

2266
01:11:06,000 --> 01:11:08,000
纯文本的 Tek 文件

2267
01:11:08,000 --> 01:11:12,000
然后用你的发行版所提供给你的

2268
01:11:12,000 --> 01:11:14,000
通常是一个叫做 Latec

2269
01:11:14,000 --> 01:11:15,000
或者是 PDF

2270
01:11:15,000 --> 01:11:18,000
Latec 的程序去处理你写好的文件

2271
01:11:18,000 --> 01:11:20,000
然后他会帮你生成出一个 PDF 文件来

2272
01:11:20,000 --> 01:11:22,000
但这里面有很多坑

2273
01:11:22,000 --> 01:11:23,000
就是虽然我刚才讲了这个过程

2274
01:11:23,000 --> 01:11:24,000
听起来轻包淡写

2275
01:11:24,000 --> 01:11:25,000
但实际上这里面有很多很多坑

2276
01:11:25,000 --> 01:11:26,000
比如说

2277
01:11:26,000 --> 01:11:29,000
你写的东西要不要支持中文

2278
01:11:29,000 --> 01:11:31,000
是不是要支持 CJK

2279
01:11:31,000 --> 01:11:35,000
然后你写的东西是不是要支持插图

2280
01:11:35,000 --> 01:11:39,000
就是除了刚才 Rail 提到的 TekZ 之外

2281
01:11:39,000 --> 01:11:42,000
你要不要支持其他格式的插图

2282
01:11:42,000 --> 01:11:43,000
如果你要的话

2283
01:11:43,000 --> 01:11:44,000
你必须做出选择

2284
01:11:44,000 --> 01:11:45,000
然后你必须注意

2285
01:11:45,000 --> 01:11:48,000
你的插图是怎么生成的

2286
01:11:48,000 --> 01:11:50,000
以什么格式来提供给他

2287
01:11:50,000 --> 01:11:53,000
然后你可能会就你的领域

2288
01:11:53,000 --> 01:11:55,000
需要用到一些你的领域

2289
01:11:55,000 --> 01:11:56,000
才会使用的包

2290
01:11:56,000 --> 01:11:58,000
如果你领域比较大众的话

2291
01:11:58,000 --> 01:11:59,000
这个包可能是有很多人维护的

2292
01:11:59,000 --> 01:12:01,000
如果你领域比较小众的话

2293
01:12:01,000 --> 01:12:01,000
那么很有可能

2294
01:12:01,000 --> 01:12:04,000
你必须自己亲自去解决一些问题

2295
01:12:04,000 --> 01:12:06,000
太阳能用户群里面有一句话说

2296
01:12:06,000 --> 01:12:09,000
You have to know everything to do anything

2297
01:12:09,000 --> 01:12:11,000
这个我深有体会

2298
01:12:11,000 --> 01:12:15,000
你面临着的是一个非常陡峭的学习曲线

2299
01:12:15,000 --> 01:12:15,000
必须说

2300
01:12:15,000 --> 01:12:18,000
然后如果你的论文的时间比较赶的话

2301
01:12:18,000 --> 01:12:19,000
那我劝你还是

2302
01:12:19,000 --> 01:12:22,000
就是另寻一条别的图

2303
01:12:22,000 --> 01:12:23,000
用模板啊

2304
01:12:23,000 --> 01:12:24,000
对我举个例子

2305
01:12:24,000 --> 01:12:25,000
大家可以体会一下

2306
01:12:25,000 --> 01:12:27,000
就是说如果说我们

2307
01:12:27,000 --> 01:12:30,000
我们说我们节目也很多是程序员听众

2308
01:12:30,000 --> 01:12:32,000
我们当时说这个学习 VIM 这个编辑器

2309
01:12:32,000 --> 01:12:34,000
是一个非常陡峭的这个学习曲线

2310
01:12:34,000 --> 01:12:37,000
但你取完之后是非常好爽的

2311
01:12:37,000 --> 01:12:40,000
那么学习 Tek 或者任何版本的这个上水来讲

2312
01:12:40,000 --> 01:12:42,000
他比那个曲线都较多了

2313
01:12:42,000 --> 01:12:43,000
对

2314
01:12:43,000 --> 01:12:45,000
你本质上是要学习一名全新的

2315
01:12:45,000 --> 01:12:47,000
你中你也不知道什么原理

2316
01:12:47,000 --> 01:12:49,000
并且他的整个

2317
01:12:49,000 --> 01:12:52,000
他的整个这个设计理念和设计思维

2318
01:12:52,000 --> 01:12:53,000
都是来自于 50 年前的

2319
01:12:53,000 --> 01:12:55,000
一套一套编程环境

2320
01:12:55,000 --> 01:12:56,000
本质上你在做这个事情

2321
01:12:56,000 --> 01:12:58,000
这个其实最终就是说

2322
01:12:58,000 --> 01:13:01,000
自谈自串的听众朋友们

2323
01:13:01,000 --> 01:13:06,000
是很有可能是 Tek 的这个目标用户群啊

2324
01:13:06,000 --> 01:13:07,000
这这完全重合啊

2325
01:13:07,000 --> 01:13:10,000
既是程序员又要知道怎么排版

2326
01:13:10,000 --> 01:13:13,000
所以宗司的这个封装做的不是特别好

2327
01:13:13,000 --> 01:13:14,000
露出的东西太多

2328
01:13:14,000 --> 01:13:17,000
而且本质上你还会得得会排版

2329
01:13:17,000 --> 01:13:19,000
而且事实上我也知道有

2330
01:13:19,000 --> 01:13:21,000
我们听众里面有

2331
01:13:21,000 --> 01:13:24,000
就是同时加入我们两个群的听众

2332
01:13:24,000 --> 01:13:26,000
有 Tek 高手

2333
01:13:26,000 --> 01:13:27,000
的确是有的

2334
01:13:27,000 --> 01:13:28,000
我们之前

2335
01:13:28,000 --> 01:13:31,000
我觉得好像是我们有一个这个朋友

2336
01:13:31,000 --> 01:13:33,000
还做过这个 Tek 相关的这个开发

2337
01:13:33,000 --> 01:13:35,000
就是之前请过的江江

2338
01:13:35,000 --> 01:13:39,000
所以这些这个什么 Tek 高手听完这期节目

2339
01:13:39,000 --> 01:13:40,000
是会被气得突显吗

2340
01:13:40,000 --> 01:13:42,000
我觉得他们也能够理解吧

2341
01:13:42,000 --> 01:13:46,000
毕竟这是一个我们要在短短一两个小时里面解释清楚

2342
01:13:46,000 --> 01:13:49,000
这件事情本身就是一个不可能完成的任务

2343
01:13:49,000 --> 01:13:53,000
所以现在 TekLive 是不是在 Mac 上也是可以用了

2344
01:13:53,000 --> 01:13:55,000
它好像已经变成一个跨平台的

2345
01:13:55,000 --> 01:13:56,000
应该是可以的

2346
01:13:56,000 --> 01:13:57,000
应该是可以的

2347
01:13:57,000 --> 01:14:01,000
那个那个 MICTek 也可以在跨平台用了

2348
01:14:01,000 --> 01:14:04,000
大家都在想办法去挤占别人的地盘

2349
01:14:04,000 --> 01:14:04,000
对

2350
01:14:04,000 --> 01:14:08,000
而且这个东西实际上是比较惯性导向的

2351
01:14:08,000 --> 01:14:09,000
就是你之前用什么

2352
01:14:09,000 --> 01:14:10,000
你可能之后就一直用什么

2353
01:14:10,000 --> 01:14:15,000
因为大部分使用 Tek 的人实际上是对 Tek 本身的发展

2354
01:14:15,000 --> 01:14:16,000
没有太多兴趣的

2355
01:14:16,000 --> 01:14:17,000
他们有更多

2356
01:14:17,000 --> 01:14:18,000
只是一个用户

2357
01:14:18,000 --> 01:14:19,000
自己领域的问题需要去解决

2358
01:14:19,000 --> 01:14:21,000
他们可能一开始用什么

2359
01:14:21,000 --> 01:14:22,000
或者他们的师兄用什么

2360
01:14:22,000 --> 01:14:23,000
或者他们的学校用什么

2361
01:14:23,000 --> 01:14:26,000
就他们学校会给一套那个模板

2362
01:14:26,000 --> 01:14:29,000
然后这个博板在什么环境之下测试的

2363
01:14:29,000 --> 01:14:31,000
他们就会去用那个环境

2364
01:14:31,000 --> 01:14:34,000
大概这样一个一个模式吧

2365
01:14:34,000 --> 01:14:34,000
对

2366
01:14:34,000 --> 01:14:37,000
因为你要去了解从从零开始

2367
01:14:37,000 --> 01:14:39,000
没有任何别人给你的帮助的话

2368
01:14:39,000 --> 01:14:41,000
其实是非常困难的一件事情

2369
01:14:41,000 --> 01:14:45,000
我问你个问题

2370
01:14:45,000 --> 01:14:48,000
因为这里面估计也只有你有可能干这件事情

2371
01:14:48,000 --> 01:14:51,000
你写论文或者写作业的时候

2372
01:14:51,000 --> 01:14:53,000
自定义过红了

2373
01:14:53,000 --> 01:14:54,000
有啊

2374
01:14:54,000 --> 01:14:57,000
那你自定义的红到哪个程度了

2375
01:14:57,000 --> 01:14:58,000
没有很复杂

2376
01:14:58,000 --> 01:15:00,000
就是大概四五个命令吧

2377
01:15:00,000 --> 01:15:01,000
了不起了

2378
01:15:01,000 --> 01:15:03,000
然后定义成一个红

2379
01:15:03,000 --> 01:15:04,000
我从来没有

2380
01:15:04,000 --> 01:15:05,000
我自定义的红

2381
01:15:05,000 --> 01:15:06,000
我这么说

2382
01:15:06,000 --> 01:15:08,000
我其实从来没有真正意义上写过 Tek

2383
01:15:08,000 --> 01:15:11,000
我其实都在写 Latech

2384
01:15:11,000 --> 01:15:12,000
就是 Tek 底层那些命令

2385
01:15:12,000 --> 01:15:14,000
我从来没有碰过

2386
01:15:14,000 --> 01:15:15,000
那这儿我倒是可以介绍一下

2387
01:15:15,000 --> 01:15:16,000
就是 Tek 底层

2388
01:15:16,000 --> 01:15:17,000
大概是一个什么样子

2389
01:15:18,000 --> 01:15:21,000
首先说 Tek 吧

2390
01:15:21,000 --> 01:15:23,000
就是最古早的

2391
01:15:23,000 --> 01:15:24,000
就是原汁原味的 Tek

2392
01:15:24,000 --> 01:15:27,000
会有时候也被人称为 Planetech

2393
01:15:27,000 --> 01:15:30,000
它的底层是用一种

2394
01:15:30,000 --> 01:15:33,000
我们最好提到的叫 Web

2395
01:15:33,000 --> 01:15:34,000
这种编程员写的

2396
01:15:34,000 --> 01:15:36,000
而 Web 看起来是什么样呢

2397
01:15:36,000 --> 01:15:41,000
高德纳的另外一个理念叫做 Literature Programming

2398
01:15:41,000 --> 01:15:42,000
文学编程

2399
01:15:42,000 --> 01:15:45,000
这个文学编程这个东西

2400
01:15:45,000 --> 01:15:46,000
就是他写 Web 的时候

2401
01:15:46,000 --> 01:15:49,000
期间发明出来的一套开发理念

2402
01:15:49,000 --> 01:15:50,000
你可以这么理解

2403
01:15:50,000 --> 01:15:52,000
然后他这套理念

2404
01:15:52,000 --> 01:15:53,000
大概的意思就是说

2405
01:15:53,000 --> 01:15:55,000
我写程序要像写一篇文章一样

2406
01:15:55,000 --> 01:15:58,000
就是我要有起程转合

2407
01:15:58,000 --> 01:16:01,000
就是他要

2408
01:16:01,000 --> 01:16:04,000
他说我要用人类的语言

2409
01:16:04,000 --> 01:16:06,000
用读者能够理解的语言

2410
01:16:06,000 --> 01:16:07,000
去描述这个程序

2411
01:16:07,000 --> 01:16:10,000
然后我这个程序本身是欠在

2412
01:16:10,000 --> 01:16:12,000
这个我的写的文章里面的

2413
01:16:12,000 --> 01:16:13,000
这个说法可能比较抽象

2414
01:16:13,000 --> 01:16:14,000
具体来说就是说

2415
01:16:14,000 --> 01:16:15,000
他一开始会

2416
01:16:15,000 --> 01:16:17,000
比如说他用写注释的方式来写

2417
01:16:17,000 --> 01:16:18,000
说我这个程序是干嘛的

2418
01:16:18,000 --> 01:16:20,000
然后我现在要开始一个 section

2419
01:16:20,000 --> 01:16:23,000
这个 section 里面包含了以下 variable

2420
01:16:23,000 --> 01:16:24,000
然后这些 variable

2421
01:16:24,000 --> 01:16:25,000
每个 variable 是拿来干嘛的

2422
01:16:25,000 --> 01:16:27,000
然后用 vibe 呢

2423
01:16:27,000 --> 01:16:29,000
你可以去分析你刚才写的这篇文章

2424
01:16:29,000 --> 01:16:31,000
把里面你所有提到的

2425
01:16:31,000 --> 01:16:32,000
比如说你刚才说

2426
01:16:32,000 --> 01:16:35,000
我以下要使用 42 个 variable

2427
01:16:35,000 --> 01:16:36,000
然后每个 variable

2428
01:16:36,000 --> 01:16:37,000
它都有一个描述

2429
01:16:37,000 --> 01:16:38,000
然后用 vibe

2430
01:16:38,000 --> 01:16:40,000
可以把这些 variable 的描述

2431
01:16:40,000 --> 01:16:42,000
抽离出来

2432
01:16:42,000 --> 01:16:43,000
然后生成一个程序

2433
01:16:43,000 --> 01:16:44,000
这个程序是可以编译的

2434
01:16:44,000 --> 01:16:46,000
那么这个程序是什么

2435
01:16:46,000 --> 01:16:47,000
具体是什么程序呢

2436
01:16:47,000 --> 01:16:50,000
在古早的 plain tech 里面

2437
01:16:50,000 --> 01:16:52,000
这个程序是 passcode 的一个字

2438
01:16:52,000 --> 01:16:54,000
不过我们的节目的听众

2439
01:16:54,000 --> 01:16:55,000
就不用解释 passcode

2440
01:16:55,000 --> 01:16:56,000
是什么了是吗

2441
01:16:56,000 --> 01:16:57,000
对

2442
01:16:57,000 --> 01:17:01,000
然后它的 web 有另外一个工具吧

2443
01:17:01,000 --> 01:17:04,000
这个工具的用途是

2444
01:17:04,000 --> 01:17:06,000
它的作用是把你刚才写的这篇文章

2445
01:17:06,000 --> 01:17:08,000
排印出来

2446
01:17:08,000 --> 01:17:11,000
就是生成 tech 来达到一个

2447
01:17:11,000 --> 01:17:14,000
更加易于阅读的这么一个状态

2448
01:17:14,000 --> 01:17:14,000
就是说它

2449
01:17:14,000 --> 01:17:18,000
它的所谓 literature programming 的理念里面

2450
01:17:18,000 --> 01:17:19,000
实现了两件事情

2451
01:17:19,000 --> 01:17:22,000
一件事情是让你写出来文章

2452
01:17:22,000 --> 01:17:24,000
变成一个可以执行的程序

2453
01:17:24,000 --> 01:17:27,000
另外一个功能是让你写的文章

2454
01:17:27,000 --> 01:17:31,000
有一个适合阅读的 presentation

2455
01:17:31,000 --> 01:17:33,000
这么一个功能

2456
01:17:33,000 --> 01:17:33,000
OK

2457
01:17:33,000 --> 01:17:34,000
这是 plain tech

2458
01:17:34,000 --> 01:17:36,000
然后这个 plain tech

2459
01:17:36,000 --> 01:17:37,000
因为它用的是 passcode

2460
01:17:37,000 --> 01:17:40,000
然后如果你要坚持使用它的话

2461
01:17:40,000 --> 01:17:42,000
你等于你每一个环境里面

2462
01:17:42,000 --> 01:17:44,000
都要有一个 passcode 编译器

2463
01:17:44,000 --> 01:17:46,000
而众所说是 passcode 这个语言

2464
01:17:46,000 --> 01:17:47,000
现在已经示威了

2465
01:17:47,000 --> 01:17:49,000
所以后来有的人写了一个东西

2466
01:17:49,000 --> 01:17:51,000
叫做 web 2 c

2467
01:17:51,000 --> 01:17:55,000
就是采用 c 语言来描述

2468
01:17:55,000 --> 01:17:58,000
这个 web 里面的程序

2469
01:17:58,000 --> 01:17:59,000
大概就是这样

2470
01:17:59,000 --> 01:18:00,000
后来有个越南人

2471
01:18:00,000 --> 01:18:04,000
他在捷克的一所大学里面

2472
01:18:04,000 --> 01:18:05,000
cweb 念博士的时候

2473
01:18:05,000 --> 01:18:06,000
写了一个程序

2474
01:18:06,000 --> 01:18:08,000
叫做 pdf tech

2475
01:18:08,000 --> 01:18:09,000
然后这个 pdf tech

2476
01:18:09,000 --> 01:18:11,000
他又跳过了

2477
01:18:11,000 --> 01:18:12,000
之前我们一开始介绍的

2478
01:18:12,000 --> 01:18:14,000
那个 tech 要生成一个 dvi 的这一步

2479
01:18:14,000 --> 01:18:19,000
就是他改为直接生成一个 pdf 文件

2480
01:18:19,000 --> 01:18:21,000
然后这个东西是用的是 web 2 c

2481
01:18:21,000 --> 01:18:23,000
就是说现在事实上

2482
01:18:23,000 --> 01:18:26,000
最广为使用的这么一个引擎

2483
01:18:26,000 --> 01:18:28,000
是 pdf tech

2484
01:18:28,000 --> 01:18:29,000
它是基于 web 2 c 的

2485
01:18:29,000 --> 01:18:31,000
然后它最基本的

2486
01:18:31,000 --> 01:18:34,000
最核心的这样一个东西是 c 语言的一个子节

2487
01:18:34,000 --> 01:18:36,000
大概就这样

2488
01:18:36,000 --> 01:18:39,000
然后现在还有一个引擎叫做 lua tech

2489
01:18:39,000 --> 01:18:42,000
然后 lua tech 就是试图把 tech 的整个引擎

2490
01:18:42,000 --> 01:18:44,000
暴露给 lua 这个

2491
01:18:44,000 --> 01:18:48,000
本质上还是嵌入到 c 里面的这样一个语言

2492
01:18:48,000 --> 01:18:52,000
然后你可以用 lua 来做一些比较高层开发

2493
01:18:52,000 --> 01:18:55,000
大概底层是这样一个现状

2494
01:18:55,000 --> 01:18:59,000
没有如果你要说这个 tech 的发展的话

2495
01:18:59,000 --> 01:19:01,000
刚才那个越南人

2496
01:19:01,000 --> 01:19:04,000
它是不是叫 han te tan 是吧

2497
01:19:04,000 --> 01:19:06,000
我不会念

2498
01:19:06,000 --> 01:19:07,000
我也不会念

2499
01:19:07,000 --> 01:19:08,000
我觉得还是不要侮辱越南人

2500
01:19:08,000 --> 01:19:09,000
对不起

2501
01:19:09,000 --> 01:19:13,000
肯定是念错了我觉得

2502
01:19:13,000 --> 01:19:16,000
但是因为后面就有很多这样的扩展

2503
01:19:16,000 --> 01:19:17,000
对吧

2504
01:19:17,000 --> 01:19:20,000
中国的话不是李亚灵他们也在做

2505
01:19:20,000 --> 01:19:21,000
他这个是什么

2506
01:19:21,000 --> 01:19:23,000
p tech ng 是吧

2507
01:19:23,000 --> 01:19:24,000
这个我还真不知道

2508
01:19:24,000 --> 01:19:27,000
他是用 c 语言开发的

2509
01:19:27,000 --> 01:19:34,000
的那个当年他那个是 yny 的 tech 重新开始写的写的一个东西

2510
01:19:34,000 --> 01:19:37,000
然后直接是然后就可以直接输出 pdf 的

2511
01:19:37,000 --> 01:19:38,000
那是李亚灵

2512
01:19:38,000 --> 01:19:39,000
这个东西现在还存在吗

2513
01:19:39,000 --> 01:19:40,000
李亚灵他自己在维护啊

2514
01:19:40,000 --> 01:19:43,000
这个名字这个名字有点耳熟啊

2515
01:19:43,000 --> 01:19:45,000
对啊他的真名叫马启元

2516
01:19:45,000 --> 01:19:47,000
然后在知乎上也是很活跃的呀

2517
01:19:47,000 --> 01:19:47,000
OK

2518
01:19:47,000 --> 01:19:51,000
太厉害了一个人维护这么一整套东西

2519
01:19:51,000 --> 01:19:53,000
那个陆亚太后补处一点

2520
01:19:53,000 --> 01:19:58,000
他其实是为了解决原始的那个太后不好编程扩展的问题嘛

2521
01:19:58,000 --> 01:20:04,000
所以他其实把那个陆亚的那个比较一个就是陆亚本来是一个非常简单的语言

2522
01:20:04,000 --> 01:20:07,000
他在很多游戏里面是作为这种控制语言存在的

2523
01:20:07,000 --> 01:20:11,000
因为他很好的可以很方便的嵌入到 c 里面去对吧

2524
01:20:11,000 --> 01:20:17,000
然后陆亚太后就是说他整个把这个陆亚的这个这个解释器嵌到这个太后里面去

2525
01:20:17,000 --> 01:20:19,000
然后你很多事情太后里面不方便做的

2526
01:20:19,000 --> 01:20:26,000
其实对对绝大出来讲就是基本上但凡任何事情你需要编程控制的你都转到陆亚去会比较

2527
01:20:26,000 --> 01:20:28,000
就是你用起来会比较舒服一些

2528
01:20:28,000 --> 01:20:30,000
然后陆亚太后做了这么一个事

2529
01:20:30,000 --> 01:20:36,000
但是我记得还有好几个就当时还存在就是从到 unicode 的过渡的那个阶段嘛

2530
01:20:36,000 --> 01:20:39,000
还有那个叫什么 XETech 嘛我不知道这个怎么念

2531
01:20:39,000 --> 01:20:41,000
就是他的 XETEX

2532
01:20:41,000 --> 01:20:42,000
Ztech

2533
01:20:42,000 --> 01:20:42,000
Ztech

2534
01:20:42,000 --> 01:20:43,000
对对

2535
01:20:43,000 --> 01:20:48,000
就是就是然后还有各种各种变种什么 PDFZtech

2536
01:20:48,000 --> 01:20:50,000
这实在是太多了

2537
01:20:50,000 --> 01:20:51,000
我当时看的头都大了

2538
01:20:51,000 --> 01:20:56,000
但好像现在反而就是该发展的发展

2539
01:20:56,000 --> 01:20:58,000
然后也就他也经过了现代化的过程嘛

2540
01:20:58,000 --> 01:21:01,000
现在流存下来还在活跃开发

2541
01:21:01,000 --> 01:21:03,000
然后功能比较全的好像也就那么两三个了

2542
01:21:03,000 --> 01:21:08,000
对 Ztech 应该是可能现在最怎么说高级

2543
01:21:08,000 --> 01:21:10,000
或者说最 feature complete 的一个发行榜

2544
01:21:10,000 --> 01:21:12,000
一个引擎

2545
01:21:12,000 --> 01:21:15,000
就他首先他一开始出发刚出发的时候

2546
01:21:15,000 --> 01:21:17,000
就是以全面的 unicode 的支持为出发电脑

2547
01:21:17,000 --> 01:21:20,000
然后他还支持 open type 之类的

2548
01:21:20,000 --> 01:21:21,000
你就是你用 Ztech 的话

2549
01:21:21,000 --> 01:21:23,000
你就可以使用你机器上装的文本

2550
01:21:23,000 --> 01:21:24,000
装的字体

2551
01:21:24,000 --> 01:21:26,000
对这是很大的一个坑

2552
01:21:26,000 --> 01:21:26,000
对

2553
01:21:26,000 --> 01:21:27,000
这是很大的一个坑

2554
01:21:27,000 --> 01:21:32,000
就是你可能说我想要用 tech 来排我的东西

2555
01:21:32,000 --> 01:21:35,000
但是如果你使用比如说 techlive 的话

2556
01:21:35,000 --> 01:21:38,000
你会发现自己没有办法使用系统上有的字体

2557
01:21:38,000 --> 01:21:40,000
这是很淡疼的一件事情

2558
01:21:40,000 --> 01:21:43,000
但是你要是用 Ztech 的话就可以绕开这个坑

2559
01:21:43,000 --> 01:21:44,000
Ztech 本最开始的时候

2560
01:21:44,000 --> 01:21:48,000
他就是在那个 macOS 上面去开发的嘛

2561
01:21:48,000 --> 01:21:50,000
所以他当时搞了这种

2562
01:21:50,000 --> 01:21:52,000
所谓的这种先进的字体排音技术

2563
01:21:52,000 --> 01:21:53,000
各种帘子啊

2564
01:21:53,000 --> 01:21:54,000
literature 啊

2565
01:21:54,000 --> 01:21:57,000
各种这种就是高级的 open type 那些特性

2566
01:21:57,000 --> 01:21:58,000
在其他的当时

2567
01:21:58,000 --> 01:22:00,000
在其他的 type 发行榜里面都是不能支持的

2568
01:22:00,000 --> 01:22:02,000
因为他完全不是一个

2569
01:22:02,000 --> 01:22:04,000
一个不是一个体系

2570
01:22:04,000 --> 01:22:05,000
也不是一个技术路线

2571
01:22:05,000 --> 01:22:07,000
然后但是一个年代的东西

2572
01:22:07,000 --> 01:22:08,000
对完全不是一个年代的东西

2573
01:22:08,000 --> 01:22:12,000
但是当时那个 Ztech 他把这两个结合在了一起

2574
01:22:12,000 --> 01:22:15,000
然后当时给到我们看到的一些实现的效果

2575
01:22:15,000 --> 01:22:17,000
那是非常非常惊艳的

2576
01:22:17,000 --> 01:22:18,000
那 by the way

2577
01:22:18,000 --> 01:22:21,000
那个版本号无限接近于 1

2578
01:22:21,000 --> 01:22:23,000
就是 0.99999 就是这个 Ztech

2579
01:22:23,000 --> 01:22:27,000
就像刚才我们讨论的这个 Latech 还有 Ztech

2580
01:22:27,000 --> 01:22:29,000
包括像 PDFtech

2581
01:22:29,000 --> 01:22:33,000
他们跟这个我们最开始讲的这个 techlive

2582
01:22:33,000 --> 01:22:36,000
这类的这个发行版是什么样的一个关系呢

2583
01:22:36,000 --> 01:22:38,000
还是说后面我们说的这些

2584
01:22:38,000 --> 01:22:39,000
像 Latech 这样的东西

2585
01:22:39,000 --> 01:22:42,000
他们只是负责排版的这个功能

2586
01:22:42,000 --> 01:22:43,000
他们只是一个排版引擎

2587
01:22:43,000 --> 01:22:43,000
是这样的

2588
01:22:43,000 --> 01:22:45,000
这个解释起来又复杂

2589
01:22:45,000 --> 01:22:48,000
Ztech 应该是比较像引擎的一个东西

2590
01:22:48,000 --> 01:22:50,000
但是 Ztech 面临的一个问题就是

2591
01:22:50,000 --> 01:22:54,000
如果你要从头开始支持 unicode 和 open type 的话

2592
01:22:54,000 --> 01:22:56,000
你会需要更多的工具

2593
01:22:56,000 --> 01:22:58,000
所以 Ztech 除了实现

2594
01:22:58,000 --> 01:22:59,000
呃

2595
01:22:59,000 --> 01:23:00,000
Ztech 这个这个程序之外

2596
01:23:00,000 --> 01:23:02,000
他有一些别的什么

2597
01:23:02,000 --> 01:23:07,000
就类似于比如说要去处理 unicode 的

2598
01:23:07,000 --> 01:23:11,000
或者说处处理 open type 的那个字体格式的一些工具

2599
01:23:11,000 --> 01:23:12,000
呃

2600
01:23:12,000 --> 01:23:14,000
就等于他有核心的那些程序之外

2601
01:23:14,000 --> 01:23:15,000
还有一些扩展

2602
01:23:15,000 --> 01:23:17,000
而 PTFtech 的话

2603
01:23:17,000 --> 01:23:20,000
就是完全只是重新实现了

2604
01:23:20,000 --> 01:23:22,000
tech 和 Latech 这两个程序

2605
01:23:22,000 --> 01:23:23,000
就他们基本上都是引擎

2606
01:23:23,000 --> 01:23:24,000
但是他们的规模是

2607
01:23:24,000 --> 01:23:27,000
他们的覆盖范围是不一样的

2608
01:23:27,000 --> 01:23:29,000
比如说有些一个可能只是一个内燃机

2609
01:23:29,000 --> 01:23:30,000
另外一个除了内燃机之外

2610
01:23:30,000 --> 01:23:33,000
还有一个那个 powertrain 在那边

2611
01:23:33,000 --> 01:23:35,000
那他们跟 techlive 这样子的

2612
01:23:35,000 --> 01:23:37,000
然后 techlive 就是

2613
01:23:37,000 --> 01:23:39,000
比如说 techlive 应该用的是 PTFLatech

2614
01:23:39,000 --> 01:23:40,000
或者是他两个都有

2615
01:23:40,000 --> 01:23:42,000
他既有 tech 也有 PTFtech

2616
01:23:42,000 --> 01:23:46,000
然后他把所有这些东西外面加上一套编辑器

2617
01:23:46,000 --> 01:23:48,000
加上那个工作流

2618
01:23:48,000 --> 01:23:50,000
然后加上一些教育工具之类的

2619
01:23:50,000 --> 01:23:52,000
然后打包给你

2620
01:23:52,000 --> 01:23:57,000
说到 techlive 我们是不是要讲一下

2621
01:23:57,000 --> 01:23:59,000
他这个所谓的他这个官方开发组

2622
01:23:59,000 --> 01:24:03,000
叫做 TUG 的这个 techusergroup

2623
01:24:03,000 --> 01:24:04,000
应该怎么翻译

2624
01:24:04,000 --> 01:24:05,000
粉丝群吗

2625
01:24:05,000 --> 01:24:08,000
tech 不是 techlive 的官方开发组

2626
01:24:08,000 --> 01:24:13,000
tech 是所有的 tech 的用户的一个群组

2627
01:24:13,000 --> 01:24:14,000
对啊

2628
01:24:14,000 --> 01:24:20,000
tech 而且高德纳一开始就经常会在里面发些东西嘛

2629
01:24:20,000 --> 01:24:21,000
在很早以前

2630
01:24:21,000 --> 01:24:24,000
然后会做一些更新啊什么的

2631
01:24:24,000 --> 01:24:26,000
一直都在那个 tech

2632
01:24:26,000 --> 01:24:30,000
Anyway 我们跟大家介绍一下这个社区吧

2633
01:24:30,000 --> 01:24:33,000
我之前看过他们写的一些论文

2634
01:24:33,000 --> 01:24:34,000
跟自己排音有关的

2635
01:24:34,000 --> 01:24:36,000
我倒是看过一两个

2636
01:24:36,000 --> 01:24:36,000
还有一些采访稿

2637
01:24:36,000 --> 01:24:40,000
因为本来 tech 它就是一个排版引擎嘛

2638
01:24:40,000 --> 01:24:42,000
虽然他们必须要研究排版嘛

2639
01:24:42,000 --> 01:24:45,000
所以很多他们研究的排版的论文

2640
01:24:45,000 --> 01:24:47,000
就发在这个 tug 上面

2641
01:24:47,000 --> 01:24:50,000
就 tug 之于 tech 的关系

2642
01:24:50,000 --> 01:24:53,000
你可以认为有点类似于那个 Gnu

2643
01:24:53,000 --> 01:24:57,000
之于这个 unix 或者 xinex 这个的一个关系

2644
01:24:57,000 --> 01:24:59,000
这不就是 python 跟 pug 之间的关系吗

2645
01:24:59,000 --> 01:25:01,000
python 跟 pug 之间就是这样

2646
01:25:01,000 --> 01:25:02,000
对对对

2647
01:25:02,000 --> 01:25:05,000
它有一个这种是一个比较 fun 的那种用户的组织

2648
01:25:05,000 --> 01:25:09,000
然后很多这种项目都是挂在这个组织的这个名下

2649
01:25:09,000 --> 01:25:11,000
或者是被这个组织 sponsor 的

2650
01:25:11,000 --> 01:25:14,000
比如说我们看到刚才提了那好几个 tech live

2651
01:25:14,000 --> 01:25:15,000
machtech

2652
01:25:15,000 --> 01:25:16,000
machtech

2653
01:25:16,000 --> 01:25:19,000
它都是在这个组织的这个旗下

2654
01:25:19,000 --> 01:25:22,000
然后就这个组织的这个成员吧

2655
01:25:22,000 --> 01:25:24,000
然后在开发维护就大概是这么一些

2656
01:25:24,000 --> 01:25:26,000
然后还有一些是非组织的

2657
01:25:26,000 --> 01:25:30,000
就是说就是这就在这个 tug group 以外的

2658
01:25:30,000 --> 01:25:31,000
有这种各种专业分支的领域的

2659
01:25:31,000 --> 01:25:32,000
那也有对吧

2660
01:25:32,000 --> 01:25:36,000
它就不严格是大一统的这么一个群体吧

2661
01:25:36,000 --> 01:25:38,000
因为它原来的名字就是叫 tech user group 嘛

2662
01:25:38,000 --> 01:25:39,000
对吧

2663
01:25:39,000 --> 01:25:40,000
tech 的用户组嘛

2664
01:25:40,000 --> 01:25:42,000
所以呢就简称 teug

2665
01:25:42,000 --> 01:25:43,000
对对

2666
01:25:43,000 --> 01:25:45,000
你只要用都可以在里面去申请加入

2667
01:25:45,000 --> 01:25:46,000
然后他们呢

2668
01:25:46,000 --> 01:25:48,000
他们有一个叫 tugboat

2669
01:25:48,000 --> 01:25:49,000
就拖船嘛

2670
01:25:49,000 --> 01:25:51,000
因为 tug 本身是拖船的意思嘛

2671
01:25:51,000 --> 01:25:52,000
所以他们

2672
01:25:52,000 --> 01:25:53,000
反而有文字游戏

2673
01:25:53,000 --> 01:25:56,000
他们后来发很多那些发的文章啊

2674
01:25:56,000 --> 01:25:59,000
就都都发在那个 tugboat 里面

2675
01:25:59,000 --> 01:26:01,000
那里面其实如果

2676
01:26:01,000 --> 01:26:02,000
刚才说的嘛

2677
01:26:02,000 --> 01:26:04,000
很多采访啊

2678
01:26:04,000 --> 01:26:06,000
去采访高德纳先生啊

2679
01:26:06,000 --> 01:26:08,000
还有各种字体设计师啊

2680
01:26:08,000 --> 01:26:11,000
还有排印的一些研究的论文啊

2681
01:26:11,000 --> 01:26:13,000
就都会发在 tugboat 里面

2682
01:26:13,000 --> 01:26:14,000
对说到这里

2683
01:26:14,000 --> 01:26:15,000
我提另外一个东西

2684
01:26:15,000 --> 01:26:17,000
其实非常有意思的

2685
01:26:17,000 --> 01:26:18,000
就是刚才我们讲的

2686
01:26:18,000 --> 01:26:19,000
太和啊

2687
01:26:19,000 --> 01:26:20,000
那这个拉太和也好

2688
01:26:20,000 --> 01:26:22,000
它其实还是偏向于这种文档啊

2689
01:26:22,000 --> 01:26:22,000
文稿啊

2690
01:26:22,000 --> 01:26:24,000
这种长篇的论文为主

2691
01:26:24,000 --> 01:26:27,000
还有一个大的分支的一个流派

2692
01:26:27,000 --> 01:26:30,000
是基于太和来做一些更加 fancy

2693
01:26:30,000 --> 01:26:31,000
就是你想都不想

2694
01:26:31,000 --> 01:26:33,000
想不到的一些那种图形

2695
01:26:33,000 --> 01:26:34,000
你不会觉得它是用那个

2696
01:26:34,000 --> 01:26:36,000
这个太和编出来的

2697
01:26:36,000 --> 01:26:38,000
那个排印出来的东西

2698
01:26:38,000 --> 01:26:38,000
但确实是

2699
01:26:38,000 --> 01:26:41,000
这套体系叫做这个 context

2700
01:26:41,000 --> 01:26:42,000
有个 T 了哈

2701
01:26:42,000 --> 01:26:43,000
有个 T 叫 context

2702
01:26:43,000 --> 01:26:46,000
就是那个 context 的那个词

2703
01:26:46,000 --> 01:26:47,000
但是它的中间那个

2704
01:26:47,000 --> 01:26:50,000
Tex 是那个 tech 的那个拼法

2705
01:26:50,000 --> 01:26:51,000
就大写的 T

2706
01:26:51,000 --> 01:26:51,000
大写的 X

2707
01:26:51,000 --> 01:26:52,000
小写的 E

2708
01:26:52,000 --> 01:26:53,000
这个是干嘛呢

2709
01:26:53,000 --> 01:26:54,000
当时我有一段时间

2710
01:26:54,000 --> 01:26:56,000
非常痴迷这个东西

2711
01:26:56,000 --> 01:26:56,000
就是

2712
01:26:56,000 --> 01:26:58,000
就你们写 PPT

2713
01:26:58,000 --> 01:26:59,000
要不就是用 PowerPoint

2714
01:26:59,000 --> 01:27:01,000
要不就是用那个

2715
01:27:01,000 --> 01:27:03,000
这 PowerPoint 是 PPT 嘛

2716
01:27:03,000 --> 01:27:08,000
你写这个换灯片

2717
01:27:08,000 --> 01:27:09,000
就是数码换灯片的时候

2718
01:27:09,000 --> 01:27:10,000
你要不就用 PowerPoint

2719
01:27:10,000 --> 01:27:11,000
是 PPT

2720
01:27:11,000 --> 01:27:12,000
要不就用那个 keynote

2721
01:27:12,000 --> 01:27:14,000
最后结尾是那个点 key 的那个文件

2722
01:27:14,000 --> 01:27:19,000
但是你也可以用太和这套逻辑来写这个 slides

2723
01:27:19,000 --> 01:27:23,000
而且当时我记得我有很多这个上课的那种教授

2724
01:27:23,000 --> 01:27:25,000
他们的这个版书啊

2725
01:27:25,000 --> 01:27:26,000
他们也有版书的嘛

2726
01:27:26,000 --> 01:27:29,000
就是用这个这个 tech 来排版出来

2727
01:27:29,000 --> 01:27:31,000
投射到上面去了

2728
01:27:31,000 --> 01:27:34,000
但是你如果直接用那个原始的那个 tech

2729
01:27:34,000 --> 01:27:34,000
或者拉抬和

2730
01:27:34,000 --> 01:27:36,000
你说你把这个正常

2731
01:27:36,000 --> 01:27:37,000
它是定义一个

2732
01:27:37,000 --> 01:27:38,000
比如说 letter 或者是 A 4 的一个指

2733
01:27:38,000 --> 01:27:40,000
是一个长条的一个结构

2734
01:27:40,000 --> 01:27:42,000
你投到那个屏幕上 4 比 3

2735
01:27:42,000 --> 01:27:43,000
它是一个宽的结构

2736
01:27:43,000 --> 01:27:44,000
不太合适嘛

2737
01:27:44,000 --> 01:27:45,000
那么说你可以说啊

2738
01:27:45,000 --> 01:27:47,000
那我重新把那个指横一下

2739
01:27:47,000 --> 01:27:48,000
好像也可以凑了个用

2740
01:27:48,000 --> 01:27:50,000
但是还是排出来那个东西是比较无趣嘛

2741
01:27:50,000 --> 01:27:51,000
对吧

2742
01:27:51,000 --> 01:27:52,000
我们知道很多这种版书啊

2743
01:27:52,000 --> 01:27:53,000
或者这种 slides

2744
01:27:53,000 --> 01:27:55,000
它需要有一些有趣的东西

2745
01:27:55,000 --> 01:27:56,000
有些图形啊

2746
01:27:56,000 --> 01:27:58,000
各种箭头去指点啊

2747
01:27:58,000 --> 01:27:59,000
各种甚至是

2748
01:27:59,000 --> 01:28:01,000
渐变过场动画什么的

2749
01:28:01,000 --> 01:28:04,000
这些在传统的那个 latech 里面

2750
01:28:04,000 --> 01:28:05,000
都是非常难以实现的

2751
01:28:05,000 --> 01:28:08,000
然后就有人搞了这个 context

2752
01:28:08,000 --> 01:28:10,000
contact 这套系统

2753
01:28:10,000 --> 01:28:13,000
它可以实际上非常完美的这种

2754
01:28:13,000 --> 01:28:14,000
就是各种图形啊

2755
01:28:14,000 --> 01:28:16,000
精确的这种图案的生成

2756
01:28:16,000 --> 01:28:17,000
然后你可以做一些动画呀

2757
01:28:17,000 --> 01:28:18,000
特效啊

2758
01:28:18,000 --> 01:28:20,000
你看到那个结果

2759
01:28:20,000 --> 01:28:22,000
你不会认为那个东西是用

2760
01:28:22,000 --> 01:28:23,000
tech 做出来

2761
01:28:23,000 --> 01:28:24,000
但它确实是

2762
01:28:24,000 --> 01:28:25,000
这大家可以去试一下

2763
01:28:25,000 --> 01:28:27,000
然后就有个叫做 context

2764
01:28:27,000 --> 01:28:29,000
garden.net 这个网站上

2765
01:28:29,000 --> 01:28:31,000
它们的一个相当于是官网的东西嘛

2766
01:28:31,000 --> 01:28:33,000
你可以看一下它的那些事列文件

2767
01:28:33,000 --> 01:28:35,000
那个是非常 fancy 的一个东西

2768
01:28:35,000 --> 01:28:36,000
OK

2769
01:28:36,000 --> 01:28:37,000
我明白了

2770
01:28:37,000 --> 01:28:39,000
这个 context 之于你

2771
01:28:39,000 --> 01:28:41,000
就像 review.js 之于我

2772
01:28:41,000 --> 01:28:42,000
可以这么理解

2773
01:28:42,000 --> 01:28:43,000
就本质上你是

2774
01:28:43,000 --> 01:28:45,000
你是在编程化的方式

2775
01:28:45,000 --> 01:28:47,000
去生成你的那个幻灯片

2776
01:28:47,000 --> 01:28:49,000
而不是用这个鼠标在那里下

2777
01:28:49,000 --> 01:28:50,000
点点点的方式

2778
01:28:50,000 --> 01:28:50,000
生成这个幻灯片

2779
01:28:50,000 --> 01:28:56,000
你可以精确的描述每一个动效的每一个这个数学描述你都可以实现出来

2780
01:28:56,000 --> 01:28:58,000
这个当时做出来的非常令人惊艳

2781
01:28:58,000 --> 01:29:00,000
如果你不想使用 tech 的话

2782
01:29:00,000 --> 01:29:03,000
你可以试试我刚才说的这个 review.js

2783
01:29:03,000 --> 01:29:05,000
就是你如果你觉得 PPT 太古 hardcore

2784
01:29:05,000 --> 01:29:09,000
然后你你想要使用编程方式来解决你的幻灯片问题

2785
01:29:09,000 --> 01:29:11,000
你可以试试我刚才说的 review.js

2786
01:29:11,000 --> 01:29:14,000
它是基本上就是你写 javascript

2787
01:29:14,000 --> 01:29:16,000
然后来生成你的幻灯片这样

2788
01:29:16,000 --> 01:29:20,000
我想起来了

2789
01:29:20,000 --> 01:29:22,000
刚才我们说到了 Mac 上面

2790
01:29:22,000 --> 01:29:24,000
Linux 上面和 Windows 上面

2791
01:29:24,000 --> 01:29:24,000
但实际上还有

2792
01:29:24,000 --> 01:29:27,000
现在就是我们现在处在这个网络时代

2793
01:29:27,000 --> 01:29:28,000
还有一个更简单的解决方法

2794
01:29:28,000 --> 01:29:30,000
就是如果你想要使用 tech 的话

2795
01:29:30,000 --> 01:29:34,000
现在有很多所谓的在线 tech 编辑器

2796
01:29:34,000 --> 01:29:35,000
SaaS

2797
01:29:35,000 --> 01:29:36,000
然后有些是

2798
01:29:36,000 --> 01:29:37,000
对

2799
01:29:37,000 --> 01:29:39,000
Software as a Service

2800
01:29:39,000 --> 01:29:40,000
在云上的

2801
01:29:40,000 --> 01:29:40,000
对

2802
01:29:40,000 --> 01:29:42,000
就好像现在我基本上写 python 程序

2803
01:29:42,000 --> 01:29:44,000
或者写什么小程序的时候

2804
01:29:44,000 --> 01:29:45,000
需要写一个脚本的话

2805
01:29:45,000 --> 01:29:47,000
我已经不会在本地去写它了

2806
01:29:47,000 --> 01:29:50,000
我去比如说 review.it

2807
01:29:50,000 --> 01:29:51,000
或者是什么

2808
01:29:51,000 --> 01:29:54,000
诸如此类的 online

2809
01:29:54,000 --> 01:29:55,000
直接云编程

2810
01:29:55,000 --> 01:29:55,000
对吧

2811
01:29:55,000 --> 01:29:56,000
对

2812
01:29:56,000 --> 01:29:58,000
late 也有这样云编程环境

2813
01:29:58,000 --> 01:30:01,000
其中比较知名的一个叫 overleaf

2814
01:30:01,000 --> 01:30:02,000
对

2815
01:30:02,000 --> 01:30:05,000
它是可能现在用户群也蛮多的一个

2816
01:30:05,000 --> 01:30:07,000
虽然我从来没有用过

2817
01:30:07,000 --> 01:30:09,000
但是有我曾经看到人用过

2818
01:30:09,000 --> 01:30:11,000
然后好像反响还蛮好

2819
01:30:11,000 --> 01:30:13,000
网址就是 overleaf.com

2820
01:30:13,000 --> 01:30:14,000
然后你在上面注册一下

2821
01:30:14,000 --> 01:30:17,000
你就会得到一个编辑 tech 的环境

2822
01:30:17,000 --> 01:30:19,000
然后它会给你实时的

2823
01:30:19,000 --> 01:30:20,000
就像那个 repo 一样

2824
01:30:20,000 --> 01:30:22,000
给你实时的生成一个 pdf

2825
01:30:22,000 --> 01:30:23,000
对

2826
01:30:23,000 --> 01:30:23,000
还蛮好用的

2827
01:30:23,000 --> 01:30:25,000
而且好像价格也不是很贵吧

2828
01:30:25,000 --> 01:30:26,000
尤其是对学生来说

2829
01:30:26,000 --> 01:30:28,000
一个月 9 块钱

2830
01:30:28,000 --> 01:30:30,000
就比如说你要写 6 个月的论文的话

2831
01:30:30,000 --> 01:30:31,000
你一个月 9 块钱

2832
01:30:31,000 --> 01:30:34,000
我觉得实在是相当便宜的

2833
01:30:34,000 --> 01:30:36,000
太方便了

2834
01:30:36,000 --> 01:30:38,000
然后你一举忘掉

2835
01:30:38,000 --> 01:30:41,000
如何安装和整这个环境的痛苦

2836
01:30:41,000 --> 01:30:42,000
而且随时随时都可以

2837
01:30:42,000 --> 01:30:45,000
你不用担心本地数据丢失之类的问题

2838
01:30:45,000 --> 01:30:46,000
它是保存在云端的

2839
01:30:46,000 --> 01:30:49,000
就还是相当推荐的

2840
01:30:49,000 --> 01:30:49,000
对

2841
01:30:49,000 --> 01:30:50,000
这叫什么来的

2842
01:30:50,000 --> 01:30:51,000
Cloud Native Tech

2843
01:30:51,000 --> 01:30:55,000
就 1976 与 20221 的完美结合

2844
01:30:55,000 --> 01:30:58,000
这个我印象非常深

2845
01:30:58,000 --> 01:30:59,000
当时我在

2846
01:30:59,000 --> 01:31:01,000
我用的应该是 2000 几年的时候

2847
01:31:01,000 --> 01:31:02,000
就是前后

2848
01:31:02,000 --> 01:31:05,000
就是 2000 几年到 2010 年

2849
01:31:05,000 --> 01:31:06,000
这段是这个 10 年

2850
01:31:06,000 --> 01:31:08,000
这个 decade 之间

2851
01:31:08,000 --> 01:31:09,000
就那个时候还没有

2852
01:31:09,000 --> 01:31:10,000
就是有这种

2853
01:31:10,000 --> 01:31:11,000
就是云的这种

2854
01:31:11,000 --> 01:31:13,000
这种太后出现

2855
01:31:13,000 --> 01:31:14,000
但是因为那个时候的

2856
01:31:14,000 --> 01:31:16,000
这个 Cloud 的这个 info

2857
01:31:16,000 --> 01:31:18,000
就是旧设施还没有非常的完善

2858
01:31:18,000 --> 01:31:19,000
就是其实非常不好用

2859
01:31:19,000 --> 01:31:20,000
但如果说

2860
01:31:20,000 --> 01:31:22,000
假设我现在让我丢到一个学校里面

2861
01:31:22,000 --> 01:31:23,000
让我再写一篇

2862
01:31:23,000 --> 01:31:24,000
我估计我也不会在自己店上

2863
01:31:24,000 --> 01:31:25,000
安装这个破玩意

2864
01:31:25,000 --> 01:31:27,000
一次性的破玩意

2865
01:31:27,000 --> 01:31:28,000
还是去这种

2866
01:31:28,000 --> 01:31:29,000
用这种云环镜比较简单一些

2867
01:31:29,000 --> 01:31:31,000
对

2868
01:31:31,000 --> 01:31:32,000
是的

2869
01:31:32,000 --> 01:31:34,000
所以一个标准的

2870
01:31:34,000 --> 01:31:35,000
这个泰河的编写的

2871
01:31:35,000 --> 01:31:36,000
就当然

2872
01:31:36,000 --> 01:31:38,000
你编的那个流程是这样

2873
01:31:38,000 --> 01:31:39,000
但是我就说

2874
01:31:39,000 --> 01:31:40,000
可以描述一下

2875
01:31:40,000 --> 01:31:41,000
当时你看到你店的屏幕上

2876
01:31:41,000 --> 01:31:42,000
应该是什么

2877
01:31:42,000 --> 01:31:43,000
比如我通常是

2878
01:31:43,000 --> 01:31:44,000
一半屏幕

2879
01:31:44,000 --> 01:31:45,000
就屏幕对开

2880
01:31:45,000 --> 01:31:46,000
左右两边

2881
01:31:46,000 --> 01:31:46,000
对吧

2882
01:31:46,000 --> 01:31:48,000
然后一边是这个原代码

2883
01:31:48,000 --> 01:31:49,000
就是那个泰河

2884
01:31:49,000 --> 01:31:50,000
Latech 的这个原始的

2885
01:31:50,000 --> 01:31:51,000
那个点

2886
01:31:51,000 --> 01:31:53,000
泰河那个 source code

2887
01:31:53,000 --> 01:31:55,000
然后另外一边是生成的

2888
01:31:55,000 --> 01:31:56,000
那个 PDF 的那个窗口

2889
01:31:56,000 --> 01:31:56,000
对吧

2890
01:31:56,000 --> 01:31:58,000
然后把那个

2891
01:31:58,000 --> 01:32:01,000
编辑器的那个工作流程设为

2892
01:32:01,000 --> 01:32:02,000
你这边只要一保存

2893
01:32:02,000 --> 01:32:04,000
这个泰河的原代码

2894
01:32:04,000 --> 01:32:05,000
那边就自动在后台

2895
01:32:05,000 --> 01:32:07,000
编译生成那个 PDF

2896
01:32:07,000 --> 01:32:09,000
然后在右边及时的展示出来

2897
01:32:09,000 --> 01:32:12,000
这样就可以勉强实现所见

2898
01:32:12,000 --> 01:32:14,000
等大概一秒钟

2899
01:32:14,000 --> 01:32:14,000
两秒钟

2900
01:32:14,000 --> 01:32:15,000
三秒钟之后

2901
01:32:15,000 --> 01:32:16,000
做记所得嘛

2902
01:32:16,000 --> 01:32:19,000
然后当时有一个非常有趣的

2903
01:32:19,000 --> 01:32:21,000
或者很 tricky 的一个实现的难点

2904
01:32:21,000 --> 01:32:21,000
就是说

2905
01:32:21,000 --> 01:32:22,000
如果你这篇文章

2906
01:32:22,000 --> 01:32:24,000
或者你编写的这个文档

2907
01:32:24,000 --> 01:32:24,000
有十几页长

2908
01:32:24,000 --> 01:32:25,000
对吧

2909
01:32:25,000 --> 01:32:27,000
然后你想要肯定是说

2910
01:32:27,000 --> 01:32:28,000
你当前编写的那边

2911
01:32:28,000 --> 01:32:29,000
保存的时候

2912
01:32:29,000 --> 01:32:31,000
刚好是他刷新出来

2913
01:32:31,000 --> 01:32:33,000
在右边的那个 PDF 的

2914
01:32:33,000 --> 01:32:34,000
那个也是对应到你

2915
01:32:34,000 --> 01:32:36,000
大致位置的这一行

2916
01:32:36,000 --> 01:32:37,000
但不能严格一一对应

2917
01:32:37,000 --> 01:32:40,000
就这个当时也很多 tricky 的办法

2918
01:32:40,000 --> 01:32:41,000
在做这件事情

2919
01:32:41,000 --> 01:32:43,000
这个话根本没有找到怎么解决

2920
01:32:43,000 --> 01:32:45,000
你刚才说你的典型编辑界面

2921
01:32:45,000 --> 01:32:46,000
但我的典型编辑界面

2922
01:32:46,000 --> 01:32:48,000
就是就只有原代码

2923
01:32:48,000 --> 01:32:50,000
就是我会 concentrate

2924
01:32:50,000 --> 01:32:51,000
我先把内容写完

2925
01:32:51,000 --> 01:32:54,000
然后再一个一个去解决

2926
01:32:54,000 --> 01:32:56,000
带给我的种种头疼的问题

2927
01:32:56,000 --> 01:32:59,000
等于先写再排版这样

2928
01:32:59,000 --> 01:33:00,000
那所以你是在

2929
01:33:00,000 --> 01:33:01,000
在编写原代码的时候

2930
01:33:01,000 --> 01:33:03,000
脑子里面在浮现出

2931
01:33:03,000 --> 01:33:04,000
他应该想要的效果

2932
01:33:04,000 --> 01:33:05,000
然后之后再去 debug

2933
01:33:05,000 --> 01:33:06,000
对

2934
01:33:06,000 --> 01:33:09,000
一个一个人兽 render 的这么一个过程

2935
01:33:09,000 --> 01:33:11,000
所以你写 markdown 也是这样子吧

2936
01:33:11,000 --> 01:33:13,000
先一遍 markdownsource 写完

2937
01:33:13,000 --> 01:33:14,000
然后再 render

2938
01:33:14,000 --> 01:33:15,000
从 HT 的那儿看效

2939
01:33:15,000 --> 01:33:16,000
再 preview 一下

2940
01:33:16,000 --> 01:33:18,000
而不是说这种 side by side 的方式

2941
01:33:18,000 --> 01:33:18,000
对

2942
01:33:18,000 --> 01:33:19,000
差不多是这样

2943
01:33:19,000 --> 01:33:19,000
OK

2944
01:33:19,000 --> 01:33:22,000
这看你取决于你写什么东西了

2945
01:33:22,000 --> 01:33:25,000
如果你还是一个长的普通的文档的话

2946
01:33:25,000 --> 01:33:26,000
那可能还好

2947
01:33:26,000 --> 01:33:28,000
因为比如说写论文的话

2948
01:33:28,000 --> 01:33:28,000
对吧

2949
01:33:28,000 --> 01:33:29,000
你论述的东西

2950
01:33:29,000 --> 01:33:30,000
如果还是很长的话

2951
01:33:30,000 --> 01:33:32,000
你还是想去集中的

2952
01:33:32,000 --> 01:33:35,000
先把这个论述的这个逻辑先写清楚嘛

2953
01:33:35,000 --> 01:33:38,000
但是如果你要在渲染一个公式的时候

2954
01:33:38,000 --> 01:33:40,000
你得先想象一下猜一下

2955
01:33:40,000 --> 01:33:41,000
然后渲染出来看一下

2956
01:33:41,000 --> 01:33:43,000
这个好像又跑位了

2957
01:33:43,000 --> 01:33:44,000
不行了

2958
01:33:44,000 --> 01:33:45,000
回来调调

2959
01:33:45,000 --> 01:33:46,000
就会出现这个事情嘛

2960
01:33:46,000 --> 01:33:48,000
不因为我可能用法比较奇怪

2961
01:33:48,000 --> 01:33:50,000
因为我用这个东西最常用的

2962
01:33:50,000 --> 01:33:51,000
倒不是写论文这种常文的

2963
01:33:51,000 --> 01:33:53,000
而是写作业的时候

2964
01:33:53,000 --> 01:33:55,000
因为我当时说我写字不是很丑嘛

2965
01:33:55,000 --> 01:33:56,000
有时候丑到

2966
01:33:56,000 --> 01:33:58,000
以至于我自己也都不知道

2967
01:33:58,000 --> 01:33:59,000
我写的草稿上面是什么东西

2968
01:33:59,000 --> 01:34:01,000
所以我写作业的时候

2969
01:34:01,000 --> 01:34:04,000
其实我其实是在电脑上用 Tek

2970
01:34:04,000 --> 01:34:07,000
拉 Tek 这个方式去一步一步去进行演算的

2971
01:34:07,000 --> 01:34:09,000
所以我一定要看到那个最终结果

2972
01:34:09,000 --> 01:34:10,000
在想下一步是什么

2973
01:34:10,000 --> 01:34:13,000
你用那个做算数是吧

2974
01:34:13,000 --> 01:34:13,000
对对对对

2975
01:34:13,000 --> 01:34:14,000
就有点这种感觉

2976
01:34:14,000 --> 01:34:16,000
比如说我要把那个图画到那

2977
01:34:16,000 --> 01:34:16,000
下一步怎么来的

2978
01:34:16,000 --> 01:34:18,000
我再用那个来画

2979
01:34:18,000 --> 01:34:20,000
对吧我不会说我在草稿纸上先把这个

2980
01:34:20,000 --> 01:34:22,000
就是作业写的差不多

2981
01:34:22,000 --> 01:34:23,000
然后再腾一遍

2982
01:34:23,000 --> 01:34:24,000
腾到这个 Lateek 里面

2983
01:34:24,000 --> 01:34:25,000
我不是这么干的

2984
01:34:25,000 --> 01:34:28,000
对就还是看你写的内容怎么样嘛

2985
01:34:28,000 --> 01:34:30,000
每个人写作的那个环境和写的内容不一样嘛

2986
01:34:30,000 --> 01:34:32,000
用法就不一样了嘛

2987
01:34:32,000 --> 01:34:34,000
对尤其是如果你有很多公式的话

2988
01:34:34,000 --> 01:34:35,000
他要求你你在写公式的时候

2989
01:34:35,000 --> 01:34:38,000
你能够确定知道自己的 Lateek 的公式是写

2990
01:34:38,000 --> 01:34:39,000
写的是对的

2991
01:34:39,000 --> 01:34:42,000
这实际上对于很多人来说还是蛮难的

2992
01:34:42,000 --> 01:34:43,000
很难的一件事情

2993
01:34:43,000 --> 01:34:44,000
就是你想象它应该是对的

2994
01:34:44,000 --> 01:34:46,000
结果迅然它并不是这个样子

2995
01:34:46,000 --> 01:34:48,000
经常会出现这种情况

2996
01:34:48,000 --> 01:34:50,000
对对我忘了说

2997
01:34:50,000 --> 01:34:51,000
还有一个

2998
01:34:51,000 --> 01:34:53,000
我其实应该说是一个三屏的

2999
01:34:53,000 --> 01:34:55,000
就是还有一个是那个 Tek 的

3000
01:34:55,000 --> 01:34:56,000
Lateek 的那个对应的手册

3001
01:34:56,000 --> 01:34:59,000
因为你记不住那些符号啊

3002
01:34:59,000 --> 01:35:01,000
或者是那些公式到底是哪个

3003
01:35:01,000 --> 01:35:02,000
你得不断的去翻

3004
01:35:02,000 --> 01:35:05,000
然后包括那个 TIKZ 的那个绘图的那个工具

3005
01:35:05,000 --> 01:35:06,000
它有一个非常完整的

3006
01:35:06,000 --> 01:35:08,000
就是也是一本书了

3007
01:35:08,000 --> 01:35:10,000
本质上的一个 PDF 的册子

3008
01:35:10,000 --> 01:35:11,000
你要去找它里面

3009
01:35:11,000 --> 01:35:12,000
到底是怎么去画这个箭头

3010
01:35:12,000 --> 01:35:13,000
怎么画到那里去

3011
01:35:13,000 --> 01:35:16,000
就是你是要随时去找这个 reference 的

3012
01:35:16,000 --> 01:35:18,000
对

3013
01:35:18,000 --> 01:35:19,000
所以就很烦呢

3014
01:35:19,000 --> 01:35:19,000
是

3015
01:35:19,000 --> 01:35:22,000
这其实 Tek 除了我们讲

3016
01:35:22,000 --> 01:35:23,000
常用于这种数学啊

3017
01:35:23,000 --> 01:35:24,000
理工这种之类的

3018
01:35:24,000 --> 01:35:25,000
它还有一些这种奇奇怪怪的

3019
01:35:25,000 --> 01:35:26,000
其他的用法

3020
01:35:26,000 --> 01:35:29,000
比如说有人来用这个做音乐

3021
01:35:29,000 --> 01:35:30,000
我也有看到

3022
01:35:30,000 --> 01:35:32,000
就是乐谱也可以用这个 Tek 的方式

3023
01:35:32,000 --> 01:35:34,000
就是写出非常严谨的

3024
01:35:34,000 --> 01:35:35,000
这个美观的这个乐谱嘛

3025
01:35:35,000 --> 01:35:37,000
还有当时我看到还有很多

3026
01:35:37,000 --> 01:35:38,000
反正就是非常小众的用法

3027
01:35:38,000 --> 01:35:42,000
但因为我不是我不是做那个方向的这个人嘛

3028
01:35:42,000 --> 01:35:44,000
我太理解它底层原理是什么

3029
01:35:44,000 --> 01:35:46,000
比如说我一直没有理解

3030
01:35:46,000 --> 01:35:49,000
它那个用 Tek 写五线

3031
01:35:49,000 --> 01:35:49,000
不是什么一个原理

3032
01:35:49,000 --> 01:35:50,000
你们知道吗

3033
01:35:50,000 --> 01:35:54,000
或者写那个就是那个就是音乐的那些东西

3034
01:35:54,000 --> 01:35:56,000
就它应该也是有什么记号啊

3035
01:35:56,000 --> 01:35:58,000
各种专用的这个红啊之类的

3036
01:35:58,000 --> 01:35:59,000
但是我从来没用过

3037
01:35:59,000 --> 01:36:01,000
我从来不知道这怎么实现

3038
01:36:01,000 --> 01:36:04,000
因为当时我还做过另外一件一些比较 crazy 的事情

3039
01:36:04,000 --> 01:36:10,000
就是我不是觉得那个 Tek 的那个红编程有一些那个语法什么的

3040
01:36:10,000 --> 01:36:11,000
不是太灵活吗

3041
01:36:11,000 --> 01:36:15,000
我甚至还在就是在为了写一个写一个复杂的一个图形

3042
01:36:15,000 --> 01:36:18,000
它可能是要如果要手工去写会非常的麻烦

3043
01:36:18,000 --> 01:36:22,000
我甚至是用比如说用 python 写了一个小程序

3044
01:36:22,000 --> 01:36:25,000
去生成输出的那个结果是 latec

3045
01:36:25,000 --> 01:36:27,000
然后再 compile 成 pdf

3046
01:36:27,000 --> 01:36:29,000
得到那个我最想要的那个图形

3047
01:36:29,000 --> 01:36:31,000
非常的 meta 这个过程

3048
01:36:31,000 --> 01:36:37,000
但事实上那个 web 的一个功能就是这个

3049
01:36:37,000 --> 01:36:40,000
它先去读取那一段程序

3050
01:36:40,000 --> 01:36:45,000
然后生成一段可以被 Tek 来执行的程序

3051
01:36:45,000 --> 01:36:47,000
基本上也是一个代码生成器

3052
01:36:47,000 --> 01:36:50,000
做乐谱的那个是叫什么 music tech

3053
01:36:50,000 --> 01:36:52,000
那叫 music tech 吧

3054
01:36:52,000 --> 01:36:54,000
那是 x 的

3055
01:36:54,000 --> 01:36:58,000
但我这看人就结果用过

3056
01:36:58,000 --> 01:36:59,000
但我不知道它到底是个怎么一个用法

3057
01:36:59,000 --> 01:37:01,000
但不过它还就是一个

3058
01:37:01,000 --> 01:37:03,000
嗯还是一个红包嘛

3059
01:37:03,000 --> 01:37:08,000
对所以我们今天很关键一点就是说

3060
01:37:08,000 --> 01:37:11,000
呃我们所有在谈这个排版的时候

3061
01:37:11,000 --> 01:37:13,000
它是和字体配套的这个事情很关键

3062
01:37:13,000 --> 01:37:16,000
就像高德纳他当时他做 Tek 的时候

3063
01:37:16,000 --> 01:37:17,000
他他自己做了一套字体

3064
01:37:17,000 --> 01:37:18,000
呃

3065
01:37:18,000 --> 01:37:23,000
然后这个字体对应的这个排版如何调用之后

3066
01:37:23,000 --> 01:37:24,000
才能做出精细的排版

3067
01:37:24,000 --> 01:37:25,000
否则的话

3068
01:37:25,000 --> 01:37:27,000
他想实现这个的话

3069
01:37:27,000 --> 01:37:28,000
没办法调用嘛

3070
01:37:28,000 --> 01:37:28,000
对吧

3071
01:37:28,000 --> 01:37:30,000
我们现在平面设计师经常就是

3072
01:37:30,000 --> 01:37:33,000
比如说我用 InDesign 这个平面设计的

3073
01:37:33,000 --> 01:37:36,000
这个页面的软件所见其所得

3074
01:37:36,000 --> 01:37:36,000
但是呢

3075
01:37:36,000 --> 01:37:39,000
InDesign 它需要调用的是 OpenType

3076
01:37:39,000 --> 01:37:42,000
这个字体里面的高级排版特性

3077
01:37:42,000 --> 01:37:42,000
嗯

3078
01:37:42,000 --> 01:37:45,000
所以说到底就是这个排版引擎和这个字体

3079
01:37:45,000 --> 01:37:47,000
它是相辅相成的

3080
01:37:47,000 --> 01:37:49,000
两边东西得配套好

3081
01:37:49,000 --> 01:37:49,000
嗯

3082
01:37:49,000 --> 01:37:51,000
要不然的话就是很多事情

3083
01:37:51,000 --> 01:37:52,000
你是在字体层面做呢

3084
01:37:52,000 --> 01:37:53,000
还是到排版引擎做呢

3085
01:37:53,000 --> 01:37:56,000
很多事情你想不清楚有的时候会

3086
01:37:56,000 --> 01:37:59,000
然后高德纳就说什么事情都我来

3087
01:37:59,000 --> 01:37:59,000
嗯

3088
01:37:59,000 --> 01:38:02,000
有了这个 Computer Mode 的字体

3089
01:38:02,000 --> 01:38:03,000
然后呢

3090
01:38:03,000 --> 01:38:03,000
有了 Tekho

3091
01:38:03,000 --> 01:38:07,000
他就可以赋予这个作者所有的权利

3092
01:38:07,000 --> 01:38:09,000
Fully Control of your work

3093
01:38:09,000 --> 01:38:12,000
所以高德纳他自己很开心

3094
01:38:12,000 --> 01:38:14,000
如果你知道怎么用的话

3095
01:38:14,000 --> 01:38:15,000
打个非常大的引号

3096
01:38:15,000 --> 01:38:18,000
就是你要学会那套东西才行

3097
01:38:18,000 --> 01:38:21,000
大宗是不是那么好当的

3098
01:38:21,000 --> 01:38:22,000
你要拿着悬铁件

3099
01:38:22,000 --> 01:38:24,000
你得先拿得起来会武才可以

3100
01:38:24,000 --> 01:38:26,000
他是 Control Frame

3101
01:38:26,000 --> 01:38:27,000
这是毫无疑问的

3102
01:38:28,000 --> 01:38:28,000
对

3103
01:38:28,000 --> 01:38:31,000
这其实也是我们在排版工作中

3104
01:38:31,000 --> 01:38:33,000
遇到的一个难题吧

3105
01:38:33,000 --> 01:38:35,000
就是我们知道

3106
01:38:35,000 --> 01:38:37,000
其实无论是早前还是现在

3107
01:38:37,000 --> 01:38:38,000
现在当然更是了

3108
01:38:38,000 --> 01:38:41,000
字体其实已经成为了排版程序的

3109
01:38:41,000 --> 01:38:42,000
一个构成部分

3110
01:38:42,000 --> 01:38:47,000
如果没有一个在功能上符合这个目标排版需求的字体的话

3111
01:38:47,000 --> 01:38:50,000
我们实际上是无法完成整个排版工作的

3112
01:38:50,000 --> 01:38:52,000
那这一点无论是在 Tekho 里面

3113
01:38:52,000 --> 01:38:54,000
甚至我们在这个 Web 上面

3114
01:38:54,000 --> 01:38:56,000
就在网页上面也越来越是这样

3115
01:38:56,000 --> 01:38:58,000
我们需要更多的 OpenType Feature

3116
01:38:58,000 --> 01:39:01,000
来实现一些复杂的排版

3117
01:39:01,000 --> 01:39:05,000
甚至只是为了实现一些复杂文字的排版

3118
01:39:05,000 --> 01:39:07,000
而这些文字的排版都没有什么特殊的需求

3119
01:39:07,000 --> 01:39:08,000
他都不是写公式

3120
01:39:08,000 --> 01:39:09,000
也不是基月谱

3121
01:39:09,000 --> 01:39:13,000
他只是想把他自己国家那种语言的文字记录下来

3122
01:39:13,000 --> 01:39:15,000
我们就需要用到这样一些复杂的特性

3123
01:39:15,000 --> 01:39:19,000
这也是我们现在越来越难以纯粹的将这个

3124
01:39:19,000 --> 01:39:22,000
内容和样式分离开来的一个原因

3125
01:39:22,000 --> 01:39:23,000
我比较好奇就是

3126
01:39:23,000 --> 01:39:25,000
因为我之前在用那个 LaTeX 的时候

3127
01:39:25,000 --> 01:39:27,000
有大量的这种情况是没法

3128
01:39:27,000 --> 01:39:30,000
用通过这种中间插入到 Word

3129
01:39:30,000 --> 01:39:34,000
或者是这种 Word Office 的方式里面去实现的

3130
01:39:34,000 --> 01:39:36,000
那就必须要在里面同时解决

3131
01:39:36,000 --> 01:39:38,000
当时有一个非常 tricky 的一个需求是这样

3132
01:39:38,000 --> 01:39:40,000
比如说你要插一个图对吧

3133
01:39:40,000 --> 01:39:42,000
那个图很多不是有那种所谓的

3134
01:39:42,000 --> 01:39:44,000
label 文字的那种标签吗

3135
01:39:44,000 --> 01:39:48,000
你想要那个文字标签的字体形态

3136
01:39:48,000 --> 01:39:50,000
风格和大小

3137
01:39:50,000 --> 01:39:51,000
有可能文字标签本来就是有数学公式

3138
01:39:51,000 --> 01:39:52,000
对吧

3139
01:39:52,000 --> 01:39:53,000
有可能文字标签本来是一个

3140
01:39:53,000 --> 01:39:58,000
就是一个要跟正文的那个字体和那个排音方式

3141
01:39:58,000 --> 01:39:59,000
是要一致的

3142
01:39:59,000 --> 01:40:03,000
那如果说你用一个第三方的这种图片插进去的话

3143
01:40:03,000 --> 01:40:04,000
就会出现各种各样奇怪的问题

3144
01:40:04,000 --> 01:40:05,000
比如说最简单一个情况

3145
01:40:05,000 --> 01:40:07,000
就是我看到很多人就是

3146
01:40:07,000 --> 01:40:12,000
他不用那个 LaTeX 和 TiKZ 去生成图片的这种情况下

3147
01:40:12,000 --> 01:40:16,000
他是说我在外面找一个通用的画图工具把它画了

3148
01:40:16,000 --> 01:40:19,000
做成一个 PNG 或者是这个 SVG

3149
01:40:19,000 --> 01:40:22,000
或者是那个叫什么 EPS 这种矢量图形

3150
01:40:22,000 --> 01:40:23,000
或者是位图图形

3151
01:40:23,000 --> 01:40:24,000
如果他那个不能用矢量来描述的话

3152
01:40:24,000 --> 01:40:27,000
然后他再导入到这个 Word 里面去

3153
01:40:27,000 --> 01:40:28,000
这个导致一个什么问题呢

3154
01:40:28,000 --> 01:40:30,000
因为他本身上是两套脱节东西

3155
01:40:30,000 --> 01:40:33,000
那个图片对周围的文字是没有这个意识的

3156
01:40:33,000 --> 01:40:35,000
那么你说放那个图片

3157
01:40:35,000 --> 01:40:38,000
就会导致那个图片里面的那些

3158
01:40:38,000 --> 01:40:39,000
那个 Text Label

3159
01:40:39,000 --> 01:40:43,000
那些文字标签的大小和外面的那个脱节了

3160
01:40:43,000 --> 01:40:43,000
就完全不一样

3161
01:40:43,000 --> 01:40:44,000
脱节了嘛

3162
01:40:44,000 --> 01:40:45,000
并不联动

3163
01:40:45,000 --> 01:40:47,000
甚至我们看到国内很多那种

3164
01:40:47,000 --> 01:40:49,000
就是用 Word 写论文的人

3165
01:40:49,000 --> 01:40:51,000
那个论文一看就是 Word 写的

3166
01:40:51,000 --> 01:40:51,000
为什么呢

3167
01:40:51,000 --> 01:40:54,000
因为他里面的那个插入的那个图片

3168
01:40:54,000 --> 01:40:56,000
是比例是不对的

3169
01:40:56,000 --> 01:40:59,000
然后那个字形和和那个周围的文字

3170
01:40:59,000 --> 01:41:00,000
是严重脱节

3171
01:41:00,000 --> 01:41:01,000
对吧

3172
01:41:01,000 --> 01:41:02,000
他字号都不一样

3173
01:41:02,000 --> 01:41:04,000
然后这个这个字体的完全不是一个东西了

3174
01:41:04,000 --> 01:41:07,000
这些都是在 Tag 里面解决的比较好

3175
01:41:07,000 --> 01:41:10,000
它是你嵌入了一个 Tag 那种 Lative 那种图形

3176
01:41:10,000 --> 01:41:12,000
它的那个文字 Label

3177
01:41:12,000 --> 01:41:13,000
它还是用 Tag 来排版的

3178
01:41:13,000 --> 01:41:15,000
就它会非常的一致

3179
01:41:15,000 --> 01:41:19,000
不你那个图也必须要用按 Tag 的方法画嘛

3180
01:41:19,000 --> 01:41:20,000
对啊

3181
01:41:20,000 --> 01:41:20,000
对啊

3182
01:41:20,000 --> 01:41:23,000
所以我觉得它必须是在同一个语境里面去嘛

3183
01:41:23,000 --> 01:41:24,000
就它没有这个割裂感

3184
01:41:24,000 --> 01:41:25,000
对

3185
01:41:25,000 --> 01:41:27,000
甚至

3186
01:41:27,000 --> 01:41:28,000
还有像那个

3187
01:41:28,000 --> 01:41:29,000
我之前刚才讲那个 Context

3188
01:41:29,000 --> 01:41:30,000
非常诡异的需求

3189
01:41:30,000 --> 01:41:32,000
它可以实现什么呢

3190
01:41:32,000 --> 01:41:32,000
就是你的

3191
01:41:32,000 --> 01:41:34,000
你假设你想象一个页面上

3192
01:41:34,000 --> 01:41:35,000
有一个插图

3193
01:41:35,000 --> 01:41:36,000
插图里面有一个箭头

3194
01:41:36,000 --> 01:41:37,000
箭头里面指到

3195
01:41:37,000 --> 01:41:41,000
你这页上某一段话的某一个字上面有一个符号

3196
01:41:41,000 --> 01:41:42,000
它可以指到那个上面去

3197
01:41:42,000 --> 01:41:43,000
这个在普通的那些里面

3198
01:41:43,000 --> 01:41:45,000
那个插图的话是无法实现的嘛

3199
01:41:45,000 --> 01:41:47,000
体系里面

3200
01:41:47,000 --> 01:41:48,000
就它是互相是之间

3201
01:41:48,000 --> 01:41:51,000
是能够互相理解对方的结构的

3202
01:41:51,000 --> 01:41:52,000
他们说的是同样的语言

3203
01:41:52,000 --> 01:41:53,000
所以它能指的

3204
01:41:53,000 --> 01:41:55,000
能定位能定得到

3205
01:41:55,000 --> 01:41:56,000
对对对对

3206
01:41:56,000 --> 01:41:57,000
如果你是插图的话

3207
01:41:57,000 --> 01:41:58,000
你就单纯的那种普通的

3208
01:41:58,000 --> 01:41:59,000
比如说是这个这个 PNG

3209
01:41:59,000 --> 01:42:02,000
你是无法从 PNG 插图里面去指向

3210
01:42:02,000 --> 01:42:05,000
你的文档里面的某一个字的嘛

3211
01:42:05,000 --> 01:42:06,000
因为他都不知道你要插向哪一个文档

3212
01:42:06,000 --> 01:42:07,000
对不对

3213
01:42:07,000 --> 01:42:10,000
这个还是有一个非常不一样的体验的

3214
01:42:10,000 --> 01:42:13,000
对但其实这样子的这个排版

3215
01:42:13,000 --> 01:42:16,000
它它其实之所以它能排的这么准

3216
01:42:16,000 --> 01:42:18,000
它是因为所有的东西都是在一个

3217
01:42:18,000 --> 01:42:19,000
风

3218
01:42:19,000 --> 01:42:22,000
类似接近封闭的环境中实现出来的

3219
01:42:22,000 --> 01:42:24,000
如果从这点来说

3220
01:42:24,000 --> 01:42:25,000
如果假设我们很极端

3221
01:42:25,000 --> 01:42:27,000
我们说我们写一篇论文

3222
01:42:27,000 --> 01:42:29,000
我们每个字都用 Photoshop 来排

3223
01:42:29,000 --> 01:42:30,000
那它最后就是一张位图

3224
01:42:30,000 --> 01:42:32,000
它必然每一个细节都可以排的很准

3225
01:42:32,000 --> 01:42:35,000
之所以我们用 Word 来排

3226
01:42:35,000 --> 01:42:37,000
有的时候发现有一些图片的

3227
01:42:37,000 --> 01:42:41,000
里面内嵌的那些字体的样式跟整个文档的样式脱离了

3228
01:42:41,000 --> 01:42:43,000
是因为有可能它这个图片

3229
01:42:43,000 --> 01:42:45,000
并不是这个作者自己做的

3230
01:42:45,000 --> 01:42:47,000
它只能从什么地方拉了一张图片过来

3231
01:42:47,000 --> 01:42:48,000
这图片里面有一些文本

3232
01:42:48,000 --> 01:42:53,000
其实这个图片的生成环境都不是由它自己来控制的

3233
01:42:53,000 --> 01:42:54,000
那自然会产生这种图片

3234
01:42:54,000 --> 01:43:00,000
对好处就是说它如果说你都用比如说你都用 TIKZ 来这个做图

3235
01:43:00,000 --> 01:43:02,000
它那个图的那部分代码是可以单独拷贝出来的

3236
01:43:02,000 --> 01:43:04,000
所以你只要再做一些小小的修改

3237
01:43:04,000 --> 01:43:08,000
就可以让那张图无缝的嵌入到你自己那份文档里面去

3238
01:43:08,000 --> 01:43:10,000
就是你是有那个原代码的

3239
01:43:10,000 --> 01:43:13,000
而不是只有一个最终的结果

3240
01:43:13,000 --> 01:43:18,000
所以当年高老师说的

3241
01:43:18,000 --> 01:43:19,000
我用 Tek 的话

3242
01:43:19,000 --> 01:43:21,000
我是不管你用什么设备

3243
01:43:21,000 --> 01:43:22,000
不用用什么环境

3244
01:43:22,000 --> 01:43:23,000
最后生成东西都是一样的嘛

3245
01:43:23,000 --> 01:43:24,000
对啊

3246
01:43:24,000 --> 01:43:28,000
这个就是它当初又做 Tek 的最基本的一个目的

3247
01:43:28,000 --> 01:43:28,000
对啊

3248
01:43:28,000 --> 01:43:30,000
所以我就很好奇嘛

3249
01:43:30,000 --> 01:43:33,000
就是现在我们用的这种商业用的排版工具

3250
01:43:33,000 --> 01:43:35,000
它是怎么解决这种类似的这种需求或者是问题

3251
01:43:35,000 --> 01:43:39,000
如果你在它自家的一个封闭的环境里实现

3252
01:43:39,000 --> 01:43:43,000
其实 Adobe 提供的工具也足以实现这样的需求

3253
01:43:43,000 --> 01:43:47,000
比如说你在 InDesign 里面排一个很复杂的书籍

3254
01:43:47,000 --> 01:43:49,000
这书籍里面可能有一些图片

3255
01:43:49,000 --> 01:43:51,000
甚至图片上面会有一些小的文字标注

3256
01:43:51,000 --> 01:43:54,000
如果你这个图片是用 Photoshop 做的

3257
01:43:54,000 --> 01:43:56,000
或者是用 Ellustrater 做的

3258
01:43:56,000 --> 01:43:58,000
然后你把这个 Ellustrater 做好的图像文件

3259
01:43:58,000 --> 01:44:00,000
以一个外链 link 的方式

3260
01:44:00,000 --> 01:44:02,000
可以 link 到这个 InDesign 内部

3261
01:44:02,000 --> 01:44:06,000
或者直接插入进去成为这个 InDesign 文档的一部分

3262
01:44:06,000 --> 01:44:09,000
那你也可以几乎保持说

3263
01:44:09,000 --> 01:44:12,000
它不会产生任何意外的情况

3264
01:44:12,000 --> 01:44:13,000
它都是受你控制的

3265
01:44:13,000 --> 01:44:16,000
然后你也可以随时的在编辑那个图像文件里的内容

3266
01:44:16,000 --> 01:44:19,000
保持一个两边实时的同步更新

3267
01:44:19,000 --> 01:44:21,000
而且是 Native 的更新

3268
01:44:21,000 --> 01:44:22,000
它可以实现说

3269
01:44:22,000 --> 01:44:23,000
刚才我说那种情况

3270
01:44:23,000 --> 01:44:26,000
就是某一个图片里面的一个元素

3271
01:44:26,000 --> 01:44:29,000
一个箭头指向这一页

3272
01:44:29,000 --> 01:44:30,000
这个图像以外

3273
01:44:30,000 --> 01:44:35,000
但是还在这一页上的某一个文字的某一个角落

3274
01:44:35,000 --> 01:44:35,000
随便举个例子

3275
01:44:35,000 --> 01:44:37,000
你的意思是假如说

3276
01:44:37,000 --> 01:44:39,000
我下面这个被指向的文字

3277
01:44:39,000 --> 01:44:42,000
它因为比如说修改文本而被重排了

3278
01:44:42,000 --> 01:44:44,000
所以这个箭头还能不能始终指向它

3279
01:44:44,000 --> 01:44:44,000
是不是

3280
01:44:44,000 --> 01:44:45,000
对啊

3281
01:44:45,000 --> 01:44:46,000
要跟着它走啊

3282
01:44:46,000 --> 01:44:48,000
不然没有意义吧

3283
01:44:48,000 --> 01:44:51,000
对这部分可能在平面设计软件里还比较受限

3284
01:44:51,000 --> 01:44:53,000
因为这样的需求不强可能

3285
01:44:53,000 --> 01:44:55,000
或者说对平面设计师来说

3286
01:44:55,000 --> 01:44:57,000
如果产生了这样子的情况

3287
01:44:57,000 --> 01:45:00,000
它有可能需要人工来解决这种情况

3288
01:45:00,000 --> 01:45:06,000
因为它有可能觉得机器自动给它重新安排的这个结果并不满意

3289
01:45:06,000 --> 01:45:08,000
对所以这个需求不那么强

3290
01:45:08,000 --> 01:45:14,000
就相当于 Rail 的要求是他们要有所谓 inter-operability

3291
01:45:14,000 --> 01:45:16,000
就是可以互相交互

3292
01:45:16,000 --> 01:45:17,000
这个

3293
01:45:17,000 --> 01:45:18,000
对对

3294
01:45:18,000 --> 01:45:22,000
所以这也是就是用 TAC 中间我产生的一个非常奇妙的一个感觉

3295
01:45:22,000 --> 01:45:24,000
就是说你能感觉到它的强大

3296
01:45:24,000 --> 01:45:26,000
但是你也能感觉到它对你的制约

3297
01:45:26,000 --> 01:45:29,000
就是说有些它给你定义好的东西

3298
01:45:29,000 --> 01:45:30,000
你就只能那么去用它

3299
01:45:30,000 --> 01:45:32,000
比如说那条线要怎么走

3300
01:45:32,000 --> 01:45:35,000
如果你要你当然你完全可以重新把那个红包打散

3301
01:45:35,000 --> 01:45:38,000
自己写一个让你足够满意的红包对吧

3302
01:45:38,000 --> 01:45:40,000
但是那个过程是非常痛苦的

3303
01:45:40,000 --> 01:45:42,000
以至于我就说将军下就用这个

3304
01:45:42,000 --> 01:45:44,000
自己画轮子

3305
01:45:44,000 --> 01:45:47,000
对这张轮子很痛苦的

3306
01:45:47,000 --> 01:45:49,000
对其实 Rail 说的这种情况

3307
01:45:49,000 --> 01:45:54,000
更像是我们现在用这个 web 排版里面实现的一些特性

3308
01:45:54,000 --> 01:45:57,000
也就是它由我们用一个很俗的词法

3309
01:45:57,000 --> 01:45:59,000
就是它有一些 responsive 的特性在

3310
01:45:59,000 --> 01:46:00,000
是是是

3311
01:46:00,000 --> 01:46:02,000
它能根据你这个呈现为界的改变

3312
01:46:02,000 --> 01:46:05,000
甚至包括你能实时的修改一些文本

3313
01:46:05,000 --> 01:46:09,000
但是还是保持着一些关键的排版特性的稳定性

3314
01:46:09,000 --> 01:46:12,000
就是那个 pdf 不是有一些这种可编程的功能吗

3315
01:46:12,000 --> 01:46:14,000
它可以嵌入 javascript 然后做一些交互吗

3316
01:46:14,000 --> 01:46:17,000
当时有一些那种比较疯狂的那个 text 的那种

3317
01:46:17,000 --> 01:46:19,000
这种就是先锋

3318
01:46:19,000 --> 01:46:22,000
它可以直接生成可交互的 pdf

3319
01:46:22,000 --> 01:46:24,000
比如说最简单的是用那个 contact 做那个幻灯片

3320
01:46:24,000 --> 01:46:25,000
对吧

3321
01:46:25,000 --> 01:46:26,000
幻灯片不是有所谓的这个

3322
01:46:26,000 --> 01:46:28,000
这个这个快进下一页

3323
01:46:28,000 --> 01:46:29,000
页首页尾

3324
01:46:29,000 --> 01:46:32,000
或者到某一下一个章节的标题这种都有的吗

3325
01:46:32,000 --> 01:46:35,000
它可以在 pdf 里面实现一个导航栏

3326
01:46:35,000 --> 01:46:36,000
都可以通过这个来实现

3327
01:46:36,000 --> 01:46:37,000
非常的厉害

3328
01:46:37,000 --> 01:46:39,000
对 pdf 时间表单也是可以的

3329
01:46:39,000 --> 01:46:40,000
你可以填表

3330
01:46:40,000 --> 01:46:41,000
对

3331
01:46:41,000 --> 01:46:43,000
而且它会自动数据收集

3332
01:46:43,000 --> 01:46:47,000
但这个我觉得现在就是反倒是有一点示威了

3333
01:46:47,000 --> 01:46:48,000
就是我发现越到后来

3334
01:46:48,000 --> 01:46:49,000
就是说

3335
01:46:49,000 --> 01:46:52,000
因为 tet 说本说白了

3336
01:46:52,000 --> 01:46:57,000
它最终还是 99%是为了打印的那个场景设计的

3337
01:46:57,000 --> 01:46:57,000
排版

3338
01:46:57,000 --> 01:46:59,000
它核心是一个排版

3339
01:46:59,000 --> 01:47:02,000
你们所有对它的过度使用其实都是误用

3340
01:47:02,000 --> 01:47:03,000
对

3341
01:47:03,000 --> 01:47:04,000
对

3342
01:47:04,000 --> 01:47:07,000
就它还是为了这个打印出来再使用的吗

3343
01:47:07,000 --> 01:47:09,000
但其实现在我们看很多

3344
01:47:09,000 --> 01:47:13,000
我其实已经很少把一篇论文打印出来再看

3345
01:47:13,000 --> 01:47:15,000
都是在电脑屏幕上看

3346
01:47:15,000 --> 01:47:19,000
就说那是否还有必要拘泥于这个 page

3347
01:47:19,000 --> 01:47:20,000
这个页面这个概念

3348
01:47:20,000 --> 01:47:21,000
对吧

3349
01:47:21,000 --> 01:47:21,000
都已经

3350
01:47:21,000 --> 01:47:24,000
其实这个概念已经开始在逐步淡化了

3351
01:47:24,000 --> 01:47:27,000
那像 tet 他花了很多时间去研究说啊

3352
01:47:27,000 --> 01:47:35,000
我要为了把这个这一片这个文字和这个公式完美的塞进一个固定的尺寸里面空间

3353
01:47:35,000 --> 01:47:36,000
我要做什么标点几呀

3354
01:47:36,000 --> 01:47:38,000
我要做各种什么这种

3355
01:47:38,000 --> 01:47:39,000
这种什么分词

3356
01:47:39,000 --> 01:47:41,000
各种 hyphenation

3357
01:47:41,000 --> 01:47:44,000
各种这个这种变种吧

3358
01:47:44,000 --> 01:47:45,000
这种这种这种操作

3359
01:47:45,000 --> 01:47:46,000
对这个公式这么好

3360
01:47:46,000 --> 01:47:47,000
一行写不下

3361
01:47:47,000 --> 01:47:49,000
到底应该在 x 还是 y

3362
01:47:49,000 --> 01:47:50,000
哪里哪个地方断开

3363
01:47:50,000 --> 01:47:52,000
这种非常细致的规则

3364
01:47:52,000 --> 01:47:56,000
那随着这种无限就是相对来说灵活的这种展示

3365
01:47:56,000 --> 01:47:57,000
啊

3366
01:47:57,000 --> 01:47:59,000
界面的存在

3367
01:47:59,000 --> 01:48:01,000
他好像这个需求已经不那么强烈了

3368
01:48:01,000 --> 01:48:01,000
那无非看不下

3369
01:48:01,000 --> 01:48:04,000
我就把那个流来机窗口拉宽一点嘛

3370
01:48:04,000 --> 01:48:06,000
对

3371
01:48:06,000 --> 01:48:08,000
在节目的最开始实际上我就提到了这一点

3372
01:48:08,000 --> 01:48:10,000
我觉得现在拉 TEC

3373
01:48:10,000 --> 01:48:15,000
或者 TEC 本身的定位是一个比较精准的

3374
01:48:15,000 --> 01:48:16,000
小众的

3375
01:48:16,000 --> 01:48:20,000
局限在插入公式这一部分

3376
01:48:20,000 --> 01:48:24,000
就你拿真正拿来拿 TEC 来排版的人

3377
01:48:24,000 --> 01:48:25,000
实际上是

3378
01:48:25,000 --> 01:48:26,000
就是你

3379
01:48:26,000 --> 01:48:27,000
越来越少了

3380
01:48:27,000 --> 01:48:29,000
对在整个的

3381
01:48:29,000 --> 01:48:30,000
呃

3382
01:48:30,000 --> 01:48:31,000
个人出版领域里面

3383
01:48:31,000 --> 01:48:33,000
实际上是已经很小的一部分了

3384
01:48:33,000 --> 01:48:34,000
就反过来说

3385
01:48:34,000 --> 01:48:37,000
宗师级的解决方案实际上是不适合普通人的

3386
01:48:37,000 --> 01:48:38,000
对

3387
01:48:38,000 --> 01:48:39,000
对

3388
01:48:39,000 --> 01:48:40,000
他将排版这样一件

3389
01:48:40,000 --> 01:48:44,000
其实高度依赖于视觉结果的这样一件工作

3390
01:48:44,000 --> 01:48:45,000
呃

3391
01:48:45,000 --> 01:48:49,000
给你添加了一个比较抽象的中间中间的这样一个过程

3392
01:48:49,000 --> 01:48:52,000
他需要你用一些相对抽象的方式去描述你的排版

3393
01:48:52,000 --> 01:48:54,000
而不是呃

3394
01:48:54,000 --> 01:48:55,000
像早期的平面设计师一样

3395
01:48:55,000 --> 01:48:57,000
他们甚至将一个呃

3396
01:48:57,000 --> 01:49:00,000
剪贴画剪下来直接粘到纸上的某一个位置

3397
01:49:00,000 --> 01:49:02,000
这样子的一个直观的过程

3398
01:49:02,000 --> 01:49:05,000
我觉得这是他比较难上手的一个原因

3399
01:49:05,000 --> 01:49:06,000
对

3400
01:49:06,000 --> 01:49:07,000
嗯

3401
01:49:07,000 --> 01:49:09,000
就你使用这个东西是需要经过一套

3402
01:49:09,000 --> 01:49:10,000
你并不

3403
01:49:10,000 --> 01:49:13,000
就或者说违反直觉的训练的

3404
01:49:13,000 --> 01:49:18,000
这个我觉得在很多设计师这边实际上是一个很大的阻力

3405
01:49:18,000 --> 01:49:22,000
就违反直觉这件事情在设计师这里是行不通的

3406
01:49:22,000 --> 01:49:23,000
也不叫违反直觉

3407
01:49:23,000 --> 01:49:24,000
就是不直接

3408
01:49:24,000 --> 01:49:25,000
就是

3409
01:49:25,000 --> 01:49:26,000
就 not intuitive

3410
01:49:26,000 --> 01:49:31,000
就是他没有那么直观的意思

3411
01:49:31,000 --> 01:49:32,000
他不是 not intuitive

3412
01:49:32,000 --> 01:49:33,000
他是 counter intuitive

3413
01:49:33,000 --> 01:49:35,000
他是反直觉

3414
01:49:35,000 --> 01:49:36,000
对对对

3415
01:49:36,000 --> 01:49:41,000
就是他说的是反言性的你知道吗

3416
01:49:41,000 --> 01:49:44,000
他本质上让你变成一个叫做什么来的

3417
01:49:44,000 --> 01:49:45,000
interpreter 对吧

3418
01:49:45,000 --> 01:49:46,000
脚本解释器

3419
01:49:46,000 --> 01:49:48,000
你要去运行这段结果

3420
01:49:48,000 --> 01:49:50,000
大概在你脑子里面

3421
01:49:50,000 --> 01:49:50,000
肉就是

3422
01:49:50,000 --> 01:49:51,000
就是什么

3423
01:49:51,000 --> 01:49:54,000
人脑去演算这个太和排版算法的结果

3424
01:49:54,000 --> 01:49:56,000
得到说他大概会长什么样子

3425
01:49:56,000 --> 01:49:57,000
然后你得得到那个 PDF

3426
01:49:57,000 --> 01:50:00,000
在看到底是不是你想的那个样子

3427
01:50:00,000 --> 01:50:00,000
会不会什么

3428
01:50:00,000 --> 01:50:02,000
bounding box overflow 啊

3429
01:50:02,000 --> 01:50:03,000
这种东西就出来了

3430
01:50:03,000 --> 01:50:07,000
这实际上就是编程对于人的异化过程嘛

3431
01:50:07,000 --> 01:50:08,000
他是宗师的工具

3432
01:50:08,000 --> 01:50:10,000
他不是普通人的工具

3433
01:50:10,000 --> 01:50:11,000
对啊

3434
01:50:11,000 --> 01:50:12,000
对啊

3435
01:50:12,000 --> 01:50:17,000
但是一开始刚才说到那个连字断词

3436
01:50:17,000 --> 01:50:19,000
hyphenation 的那个算法

3437
01:50:19,000 --> 01:50:21,000
其实他做的挺好的

3438
01:50:21,000 --> 01:50:22,000
而且呢

3439
01:50:22,000 --> 01:50:25,000
就是因为你人工排版的时候

3440
01:50:25,000 --> 01:50:27,000
你可能只能顾的这一行来排

3441
01:50:27,000 --> 01:50:30,000
但是他现在就是所谓我们现在

3442
01:50:30,000 --> 01:50:35,000
Adobe 的算法是单行排版器和段落排版器

3443
01:50:35,000 --> 01:50:38,000
他可以在根据这一整个段落的数行

3444
01:50:38,000 --> 01:50:42,000
那他能根据他的公式计算出一个最小的调整值

3445
01:50:42,000 --> 01:50:45,000
然后得出最佳的最下方案嘛

3446
01:50:45,000 --> 01:50:47,000
这个东西呢就是电脑上场做的东西

3447
01:50:47,000 --> 01:50:49,000
这还不是最狠的

3448
01:50:49,000 --> 01:50:51,000
太和做的更狠在上面

3449
01:50:51,000 --> 01:50:52,000
他可以做全局的优化

3450
01:50:52,000 --> 01:50:54,000
就是说这一整页里面

3451
01:50:54,000 --> 01:50:56,000
我觉得是不是要在这里断

3452
01:50:56,000 --> 01:51:00,000
会导致后面三个五个自然断之后的那个排版的

3453
01:51:00,000 --> 01:51:01,000
所以违反了一个更大的一个代价

3454
01:51:01,000 --> 01:51:04,000
他有一个整篇的全局优化的这个过程

3455
01:51:04,000 --> 01:51:05,000
他有好多个参数嘛

3456
01:51:05,000 --> 01:51:06,000
对

3457
01:51:06,000 --> 01:51:07,000
而且我印象最深的

3458
01:51:07,000 --> 01:51:10,000
就是说他在相当长的一段时期内

3459
01:51:10,000 --> 01:51:12,000
他的那个就是编译啊

3460
01:51:12,000 --> 01:51:13,000
编译那个太和文本

3461
01:51:13,000 --> 01:51:15,000
到最终这个 DVIA 好 PDF 的结果

3462
01:51:15,000 --> 01:51:17,000
他不是这个 one pass 的

3463
01:51:17,000 --> 01:51:18,000
他不是一遍就完了

3464
01:51:18,000 --> 01:51:19,000
他可以 multi pass

3465
01:51:19,000 --> 01:51:22,000
就是他去不断的去进行这个全局优化

3466
01:51:22,000 --> 01:51:26,000
然后使得说你得到一个整通篇文稿里面

3467
01:51:26,000 --> 01:51:29,000
最小代价去违反那些排版规则的

3468
01:51:29,000 --> 01:51:32,000
这个这个总和的一个总成本吧

3469
01:51:32,000 --> 01:51:33,000
对

3470
01:51:33,000 --> 01:51:34,000
像这个这类事情的话

3471
01:51:34,000 --> 01:51:36,000
就是计算机所上长的部分

3472
01:51:36,000 --> 01:51:39,000
就哪怕你是一个很训练

3473
01:51:39,000 --> 01:51:41,000
很几十年的一个高级的一个排版师

3474
01:51:41,000 --> 01:51:44,000
也不会比这个计算机

3475
01:51:44,000 --> 01:51:46,000
他做的就经过计算以后

3476
01:51:46,000 --> 01:51:47,000
根据这个算法计算出来的

3477
01:51:47,000 --> 01:51:48,000
这个演化

3478
01:51:48,000 --> 01:51:50,000
采取的一个最优质会好嘛

3479
01:51:50,000 --> 01:51:50,000
对吧

3480
01:51:50,000 --> 01:51:53,000
所以这部分太和是很厉害的

3481
01:51:53,000 --> 01:51:53,000
是

3482
01:51:53,000 --> 01:51:54,000
但是反过来讲

3483
01:51:54,000 --> 01:51:58,000
如果就对于那个公式排版里面

3484
01:51:58,000 --> 01:52:01,000
比如说你要等号对齐加多少宽啊

3485
01:52:01,000 --> 01:52:03,000
什么这个控制多少

3486
01:52:03,000 --> 01:52:04,000
这个东西的话

3487
01:52:04,000 --> 01:52:07,000
需要人再重新去反渲染的话

3488
01:52:07,000 --> 01:52:07,000
这个的确就是

3489
01:52:07,000 --> 01:52:10,000
不是机器所擅长的东西

3490
01:52:10,000 --> 01:52:13,000
然后需要人进行非常多的干预嘛

3491
01:52:13,000 --> 01:52:16,000
那当时我印象非常深的一个一个点

3492
01:52:16,000 --> 01:52:17,000
就是说当时我自己写论文嘛

3493
01:52:17,000 --> 01:52:19,000
这里面跟普通的排版有点不太一样

3494
01:52:19,000 --> 01:52:20,000
就在于

3495
01:52:20,000 --> 01:52:21,000
比如说

3496
01:52:21,000 --> 01:52:22,000
比如说我问一个

3497
01:52:22,000 --> 01:52:23,000
我理解应该是这样子

3498
01:52:23,000 --> 01:52:23,000
就是说

3499
01:52:23,000 --> 01:52:25,000
比如说你拿到一个别人的书

3500
01:52:25,000 --> 01:52:25,000
你要排

3501
01:52:25,000 --> 01:52:27,000
你是不能改书的嘛

3502
01:52:27,000 --> 01:52:27,000
对不对

3503
01:52:27,000 --> 01:52:27,000
对

3504
01:52:27,000 --> 01:52:29,000
但是因为我是自己写论文

3505
01:52:29,000 --> 01:52:31,000
我知道写到那最后

3506
01:52:31,000 --> 01:52:32,000
最后那一句话的时候

3507
01:52:32,000 --> 01:52:33,000
刚好就多了那么一行

3508
01:52:33,000 --> 01:52:35,000
然后你无论如何都调不回去

3509
01:52:35,000 --> 01:52:38,000
然后就多一页空白页的时候

3510
01:52:38,000 --> 01:52:39,000
你说你干脆把最后那段话改一下

3511
01:52:39,000 --> 01:52:40,000
缩短一点点

3512
01:52:40,000 --> 01:52:41,000
对吧

3513
01:52:41,000 --> 01:52:43,000
编辑其实是有这个权限的

3514
01:52:43,000 --> 01:52:46,000
编辑在排版之中起到的作用

3515
01:52:46,000 --> 01:52:47,000
有时候就是这样

3516
01:52:47,000 --> 01:52:48,000
他觉得

3517
01:52:48,000 --> 01:52:49,000
对啊

3518
01:52:49,000 --> 01:52:51,000
这篇文章可能排了一整页

3519
01:52:51,000 --> 01:52:51,000
加一句话

3520
01:52:51,000 --> 01:52:52,000
那我把那一句话改一改

3521
01:52:52,000 --> 01:52:54,000
或者把这个篇幅缩一下

3522
01:52:54,000 --> 01:52:55,000
然后跟作者沟通一下

3523
01:52:55,000 --> 01:52:56,000
就好

3524
01:52:56,000 --> 01:52:56,000
对

3525
01:52:56,000 --> 01:52:58,000
所以编辑有这个权限

3526
01:52:58,000 --> 01:52:59,000
但是排版师没有这个权限

3527
01:52:59,000 --> 01:53:00,000
对

3528
01:53:00,000 --> 01:53:01,000
比如你想

3529
01:53:01,000 --> 01:53:03,000
这是一个非常有名的作家

3530
01:53:03,000 --> 01:53:04,000
一字千金的

3531
01:53:04,000 --> 01:53:05,000
你敢改字吗

3532
01:53:05,000 --> 01:53:05,000
不敢的

3533
01:53:05,000 --> 01:53:06,000
对啊

3534
01:53:06,000 --> 01:53:07,000
就违约了

3535
01:53:07,000 --> 01:53:08,000
会出事故的

3536
01:53:08,000 --> 01:53:11,000
这个所以呢编辑如果觉得有必要

3537
01:53:11,000 --> 01:53:14,000
他可能倒回去和作者去联系这个事情

3538
01:53:14,000 --> 01:53:15,000
再难的东西

3539
01:53:15,000 --> 01:53:17,000
你对排版都能排得好

3540
01:53:17,000 --> 01:53:19,000
这才是你排版师的厉害之处

3541
01:53:19,000 --> 01:53:20,000
你那是改字

3542
01:53:20,000 --> 01:53:21,000
这个算什么

3543
01:53:21,000 --> 01:53:22,000
对吧

3544
01:53:22,000 --> 01:53:26,000
所以本质上你看排版师本质上也是一个人肉的那个对吧

3545
01:53:26,000 --> 01:53:28,000
那个就是 layout 的

3546
01:53:28,000 --> 01:53:29,000
auto layout 的计算器

3547
01:53:29,000 --> 01:53:32,000
你要知道怎么排才能变得好看

3548
01:53:32,000 --> 01:53:35,000
你脑子中有各种各样的规则

3549
01:53:35,000 --> 01:53:36,000
对

3550
01:53:36,000 --> 01:53:38,000
一个人肉的 pagemaker 的

3551
01:53:38,000 --> 01:53:40,000
我刚才查了一下

3552
01:53:40,000 --> 01:53:43,000
我才发现 pagemaker 这个东西已经在 2004 年的时候就

3553
01:53:43,000 --> 01:53:44,000
早就没有了

3554
01:53:44,000 --> 01:53:45,000
我的天哪

3555
01:53:45,000 --> 01:53:48,000
我一直想着找个机会在指证你

3556
01:53:48,000 --> 01:53:49,000
但是呢就没有机会

3557
01:53:49,000 --> 01:53:51,000
这十几年来我都活在一个谎言里

3558
01:53:51,000 --> 01:53:54,000
对我们现在都用 indesign 呢

3559
01:53:54,000 --> 01:53:57,000
而且你讲 indesign 到 20 多年了

3560
01:53:57,000 --> 01:53:57,000
对我知道

3561
01:53:57,000 --> 01:54:01,000
我其实我天天就是我刚才所有提到 pagemaker 的地方

3562
01:54:01,000 --> 01:54:03,000
我想说的其实都是 indesign

3563
01:54:03,000 --> 01:54:05,000
就是那个我甚至我知道

3564
01:54:05,000 --> 01:54:07,000
我能想起来那个 logo 是写的 ID

3565
01:54:07,000 --> 01:54:09,000
但是我就 somehow 把它叫成了 pagemaker

3566
01:54:09,000 --> 01:54:12,000
上个世纪的记忆实在是

3567
01:54:12,000 --> 01:54:14,000
用 indesign 的话

3568
01:54:14,000 --> 01:54:16,000
先不考虑钱的问题

3569
01:54:16,000 --> 01:54:17,000
它比较贵嘛

3570
01:54:17,000 --> 01:54:18,000
我有可能拿它来写毕业论文吗

3571
01:54:18,000 --> 01:54:21,000
取决于你写什么级别的毕业论文

3572
01:54:21,000 --> 01:54:23,000
就是刚才我想说了一个事情就是

3573
01:54:23,000 --> 01:54:25,000
不管是 Tek 还是 indesign

3574
01:54:25,000 --> 01:54:26,000
实际上都有一个问题

3575
01:54:26,000 --> 01:54:30,000
就是它如果你要使用比较专业的 plot 工具的话

3576
01:54:30,000 --> 01:54:34,000
他们还是必须使用第三方的东西

3577
01:54:34,000 --> 01:54:35,000
就比如说 matplotlib

3578
01:54:35,000 --> 01:54:37,000
公式很多会比较麻烦

3579
01:54:37,000 --> 01:54:38,000
对

3580
01:54:38,000 --> 01:54:41,000
它就是没有很好的公式处理工具

3581
01:54:41,000 --> 01:54:44,000
就是会那种根据数据会出来的图

3582
01:54:44,000 --> 01:54:44,000
对吧

3583
01:54:44,000 --> 01:54:46,000
它是没法支持这一点的

3584
01:54:46,000 --> 01:54:51,000
对或者是你画一个什么三维界面的三维里面的流行之类的东西

3585
01:54:51,000 --> 01:54:55,000
你要怎么用 tikz 来画不可能的

3586
01:54:55,000 --> 01:54:57,000
所以这些东西其实还是有局限

3587
01:54:57,000 --> 01:54:58,000
可以的

3588
01:54:58,000 --> 01:54:59,000
tikz 可以画

3589
01:54:59,000 --> 01:55:00,000
可以的

3590
01:55:00,000 --> 01:55:01,000
OK

3591
01:55:01,000 --> 01:55:03,000
可以画一些简单的

3592
01:55:03,000 --> 01:55:06,000
然后刚才我不是说我用 python 写了一个代码输出这个

3593
01:55:06,000 --> 01:55:09,000
然后 tikz 的命令来实现绘图吗

3594
01:55:09,000 --> 01:55:12,000
输出的就是 tikz 的那个代码

3595
01:55:12,000 --> 01:55:14,000
然后它实现了一个我想要的那个图形

3596
01:55:14,000 --> 01:55:17,000
为的就是解决刚才我说的那个问题

3597
01:55:17,000 --> 01:55:19,000
就是它画出那个图形

3598
01:55:19,000 --> 01:55:21,000
中间是有一些这个 tikz label

3599
01:55:21,000 --> 01:55:23,000
是需要跟周围的那个长相一致的

3600
01:55:23,000 --> 01:55:26,000
那你用任何其他的工具是没有办法实现这一点的吗

3601
01:55:26,000 --> 01:55:30,000
然后这又退回来这个软件的本质

3602
01:55:30,000 --> 01:55:31,000
就是因为 tikz 它是开放的

3603
01:55:31,000 --> 01:55:32,000
开圆的

3604
01:55:32,000 --> 01:55:33,000
如果你有这个需求

3605
01:55:33,000 --> 01:55:35,000
你自己去写个红写个包

3606
01:55:35,000 --> 01:55:36,000
你自己你自己造个轮子

3607
01:55:36,000 --> 01:55:38,000
然后你就可以添加功能

3608
01:55:38,000 --> 01:55:39,000
你就可以添加功能了吗

3609
01:55:39,000 --> 01:55:39,000
对吧

3610
01:55:39,000 --> 01:55:41,000
那你自己拿去用去

3611
01:55:41,000 --> 01:55:43,000
但是对于阿杜比公司来讲

3612
01:55:43,000 --> 01:55:44,000
印第在是他们专属的

3613
01:55:44,000 --> 01:55:46,000
然后你这个需求太小了

3614
01:55:46,000 --> 01:55:47,000
我干嘛要给你做呀

3615
01:55:47,000 --> 01:55:47,000
对吧

3616
01:55:47,000 --> 01:55:50,000
然后这个东西

3617
01:55:50,000 --> 01:55:53,000
那你看就回到了那个开始吴涛念的

3618
01:55:53,000 --> 01:55:55,000
引用那一段对自由软件的指责吗

3619
01:55:55,000 --> 01:55:55,000
对吧

3620
01:55:55,000 --> 01:55:58,000
确实印第在是一个设计的非常好的工具

3621
01:55:58,000 --> 01:55:59,000
它具备非常

3622
01:55:59,000 --> 01:56:01,000
它凝聚了非常多工程师

3623
01:56:01,000 --> 01:56:04,000
多少多少的这个辛苦劳动的这个结果

3624
01:56:04,000 --> 01:56:05,000
当然它得到的结果

3625
01:56:05,000 --> 01:56:06,000
也是非常的这种

3626
01:56:06,000 --> 01:56:08,000
professional 专业的这种结果

3627
01:56:08,000 --> 01:56:10,000
但是它不能解决我这么一个

3628
01:56:10,000 --> 01:56:12,000
特别定制化小众的需求呀

3629
01:56:12,000 --> 01:56:15,000
所以你看在这个研究领域啊

3630
01:56:15,000 --> 01:56:18,000
在这种特别是那种探索边界的那些人

3631
01:56:18,000 --> 01:56:20,000
他总是要遇到这种 etcase

3632
01:56:20,000 --> 01:56:23,000
所以还是要用这种开放的

3633
01:56:23,000 --> 01:56:25,000
这种开源的自由的软件

3634
01:56:25,000 --> 01:56:26,000
才能够实现它的那种

3635
01:56:26,000 --> 01:56:28,000
可能全世界就只有它

3636
01:56:28,000 --> 01:56:31,000
这么一个人在 20 年时间内用了这么一次

3637
01:56:31,000 --> 01:56:33,000
之后再也没有想过这个需求

3638
01:56:33,000 --> 01:56:35,000
因为印第在肯定是不会做的

3639
01:56:35,000 --> 01:56:36,000
对

3640
01:56:36,000 --> 01:56:39,000
其实还是看你怎样衡量这个排版的工作量

3641
01:56:39,000 --> 01:56:40,000
比如说我们用印第在

3642
01:56:40,000 --> 01:56:43,000
理论上你完全可以人肉的实现

3643
01:56:43,000 --> 01:56:46,000
所有公式编辑器可以实现的这个事情

3644
01:56:46,000 --> 01:56:47,000
排一个公式

3645
01:56:47,000 --> 01:56:49,000
它结构很复杂

3646
01:56:49,000 --> 01:56:49,000
但它再复杂

3647
01:56:49,000 --> 01:56:52,000
它无非就是在一个二维的平面上

3648
01:56:52,000 --> 01:56:55,000
把这些文字放到固定的位置

3649
01:56:55,000 --> 01:56:58,000
对对就印第在完全有这个能力

3650
01:56:58,000 --> 01:57:01,000
而且做这件事情未必很复杂

3651
01:57:01,000 --> 01:57:03,000
就是它的学习成本首先非常的低

3652
01:57:03,000 --> 01:57:06,000
其二就是它未必很复杂

3653
01:57:06,000 --> 01:57:08,000
如果你的公式量不是非常的多

3654
01:57:08,000 --> 01:57:10,000
那你这个如果就不成立了

3655
01:57:10,000 --> 01:57:10,000
说到这个印第在案

3656
01:57:10,000 --> 01:57:12,000
你这个如果不成立

3657
01:57:12,000 --> 01:57:16,000
说到印第在案做这个技术类书记

3658
01:57:16,000 --> 01:57:17,000
如果我没记错的话

3659
01:57:17,000 --> 01:57:21,000
小零件的 CJKV Information Processing

3660
01:57:21,000 --> 01:57:22,000
应该第二版就是用印第在案

3661
01:57:22,000 --> 01:57:24,000
一版好像是 PageMaker 拍的

3662
01:57:24,000 --> 01:57:26,000
小零件随便写一个技术文档

3663
01:57:26,000 --> 01:57:27,000
都是用印第在案写的

3664
01:57:27,000 --> 01:57:29,000
这么硬核的吗

3665
01:57:29,000 --> 01:57:31,000
他自己页页去排吗

3666
01:57:31,000 --> 01:57:31,000
对对对

3667
01:57:31,000 --> 01:57:32,000
他自己做的

3668
01:57:32,000 --> 01:57:33,000
对对对

3669
01:57:33,000 --> 01:57:35,000
他是自天界的高德纳

3670
01:57:35,000 --> 01:57:37,000
所以说到底的话

3671
01:57:37,000 --> 01:57:38,000
对于他来讲的话

3672
01:57:38,000 --> 01:57:40,000
因为写文章是关键

3673
01:57:40,000 --> 01:57:41,000
用的工具是什么

3674
01:57:41,000 --> 01:57:43,000
就是次要嘛

3675
01:57:43,000 --> 01:57:43,000
对于他来讲

3676
01:57:43,000 --> 01:57:45,000
他用印第在案上手

3677
01:57:45,000 --> 01:57:46,000
他就用印第在嘛

3678
01:57:46,000 --> 01:57:46,000
对吧

3679
01:57:46,000 --> 01:57:48,000
这是好像中国有好多企业

3680
01:57:48,000 --> 01:57:50,000
内部交换文档

3681
01:57:50,000 --> 01:57:51,000
全都是 PPT 啊

3682
01:57:51,000 --> 01:57:52,000
就不管干嘛

3683
01:57:52,000 --> 01:57:53,000
都是一个 PPT 发过来

3684
01:57:53,000 --> 01:57:56,000
所以我们本质上是需要一张数码白纸

3685
01:57:56,000 --> 01:57:56,000
对吧

3686
01:57:56,000 --> 01:57:58,000
不要给我夹那么条条框框

3687
01:57:58,000 --> 01:57:59,000
我自己把它摆到哪里

3688
01:57:59,000 --> 01:58:00,000
就是哪里

3689
01:58:00,000 --> 01:58:01,000
你所需要的是说

3690
01:58:01,000 --> 01:58:03,000
怎么让我能够自由的

3691
01:58:03,000 --> 01:58:04,000
通过一个规则

3692
01:58:04,000 --> 01:58:05,000
能够摆在那里而已

3693
01:58:05,000 --> 01:58:07,000
数码纸张其实就是 PDF 嘛

3694
01:58:07,000 --> 01:58:09,000
就是它是一个容器嘛

3695
01:58:09,000 --> 01:58:10,000
那你怎么再怎么打印

3696
01:58:10,000 --> 01:58:11,000
怎么画

3697
01:58:11,000 --> 01:58:12,000
这个是另外的事情嘛

3698
01:58:12,000 --> 01:58:15,000
但是就是 PDF 没法直接生成嘛

3699
01:58:15,000 --> 01:58:16,000
你得有一个工具才能生成它嘛

3700
01:58:16,000 --> 01:58:18,000
所以 Keynote 啊 PPT

3701
01:58:18,000 --> 01:58:19,000
反而是比较

3702
01:58:19,000 --> 01:58:21,000
就是相当来说简洁直观的嘛

3703
01:58:21,000 --> 01:58:22,000
那确实也是啊

3704
01:58:22,000 --> 01:58:25,000
我看到很多人最终他搞不定了

3705
01:58:25,000 --> 01:58:28,000
他就直接开一个这个这个这个这个 PPT

3706
01:58:28,000 --> 01:58:29,000
弄成白板

3707
01:58:29,000 --> 01:58:30,000
删掉所有文字

3708
01:58:30,000 --> 01:58:31,000
然后一个一个摆下

3709
01:58:31,000 --> 01:58:32,000
他需要的那个相对位置

3710
01:58:32,000 --> 01:58:33,000
也可以吧

3711
01:58:33,000 --> 01:58:35,000
本质上是你在白纸上用手写

3712
01:58:35,000 --> 01:58:37,000
然后再把它拍成照是一样的嘛

3713
01:58:37,000 --> 01:58:38,000
呃 PPT 是我

3714
01:58:38,000 --> 01:58:40,000
我在我在研究生的时候

3715
01:58:40,000 --> 01:58:43,000
教的那个提教的论文的那个学术会议

3716
01:58:43,000 --> 01:58:44,000
他应该是

3717
01:58:44,000 --> 01:58:46,000
他应该也是 IEEE 下属的一个学术会议

3718
01:58:46,000 --> 01:58:49,000
官方推荐的海报排版工具

3719
01:58:49,000 --> 01:58:51,000
海报

3720
01:58:51,000 --> 01:58:52,000
甚至他给的官方

3721
01:58:52,000 --> 01:58:54,000
对就是你的你的你的论文有可能

3722
01:58:54,000 --> 01:58:56,000
就是你的 paper 有可能有两种发表形式嘛

3723
01:58:56,000 --> 01:58:58,000
一种是呃 presentation

3724
01:58:58,000 --> 01:58:59,000
就是你去那边做一个演讲

3725
01:58:59,000 --> 01:59:00,000
另一种就是 poster

3726
01:59:00,000 --> 01:59:03,000
就是你在会场贴一个海报

3727
01:59:03,000 --> 01:59:05,000
然后你站在海报旁边等别人来跟你交流

3728
01:59:05,000 --> 01:59:06,000
这样子

3729
01:59:06,000 --> 01:59:09,000
然后他的官方给你的这个排海报的排版模板

3730
01:59:09,000 --> 01:59:11,000
就是一个 portpoint 的一个文件

3731
01:59:11,000 --> 01:59:14,000
就里面各种什么会议的 logo 啊

3732
01:59:14,000 --> 01:59:15,000
元素啊

3733
01:59:15,000 --> 01:59:18,000
这个指定的字体样式都给你定好了

3734
01:59:18,000 --> 01:59:19,000
对吧

3735
01:59:19,000 --> 01:59:20,000
没有很简单

3736
01:59:20,000 --> 01:59:23,000
就是他会给你一个比较简单的框架吧

3737
01:59:23,000 --> 01:59:25,000
因为那些会议一般他没有什么 logo

3738
01:59:25,000 --> 01:59:28,000
他可能他可能主要还是侧重展示你自己的

3739
01:59:28,000 --> 01:59:29,000
他有一个格式嘛

3740
01:59:29,000 --> 01:59:30,000
对有一个大致的格式

3741
01:59:30,000 --> 01:59:31,000
这个同样的通用的格式

3742
01:59:31,000 --> 01:59:33,000
标题是什么

3743
01:59:33,000 --> 01:59:34,000
作者是谁

3744
01:59:34,000 --> 01:59:35,000
会议名称

3745
01:59:35,000 --> 01:59:37,000
某某第几届什么什么

3746
01:59:37,000 --> 01:59:39,000
conference 之类的这种会给你定好了

3747
01:59:39,000 --> 01:59:40,000
那个模板

3748
01:59:40,000 --> 01:59:42,000
就在中间是一个大白板你自己写嘛

3749
01:59:42,000 --> 01:59:45,000
但其实你最后教的这个海报

3750
01:59:45,000 --> 01:59:47,000
如果跟他这个格式有很大的差异

3751
01:59:47,000 --> 01:59:49,000
但是基本的文本信息是对上的话

3752
01:59:49,000 --> 01:59:52,000
他其实不会干涉你对这个设计的改变

3753
01:59:52,000 --> 01:59:54,000
达到目的就可以了嘛

3754
01:59:54,000 --> 01:59:55,000
毕竟不是一个商业发行

3755
01:59:55,000 --> 01:59:59,000
说到底的话

3756
01:59:59,000 --> 02:00:00,000
对

3757
02:00:00,000 --> 02:00:01,000
现在再来讲

3758
02:00:01,000 --> 02:00:02,000
讨论说

3759
02:00:02,000 --> 02:00:04,000
泰河有各种各样的不好的地方

3760
02:00:04,000 --> 02:00:06,000
当时无非就是高德呢

3761
02:00:06,000 --> 02:00:08,000
他自己想把自己书印好了

3762
02:00:08,000 --> 02:00:09,000
然后呢

3763
02:00:09,000 --> 02:00:09,000
人家很牛

3764
02:00:09,000 --> 02:00:12,000
他自己为了自己拍书

3765
02:00:12,000 --> 02:00:14,000
他自己写了一个拍板引擎

3766
02:00:14,000 --> 02:00:15,000
自己做了一套自己

3767
02:00:15,000 --> 02:00:17,000
然后他写出来了

3768
02:00:17,000 --> 02:00:18,000
但是他觉得挺好的

3769
02:00:18,000 --> 02:00:19,000
于是呢

3770
02:00:19,000 --> 02:00:20,000
他就开源出来了

3771
02:00:20,000 --> 02:00:21,000
大家也都可以用

3772
02:00:21,000 --> 02:00:23,000
就仅此而已嘛

3773
02:00:23,000 --> 02:00:25,000
事情就结束了嘛

3774
02:00:25,000 --> 02:00:26,000
你们爱怎么用

3775
02:00:26,000 --> 02:00:27,000
你们再爱怎么

3776
02:00:27,000 --> 02:00:28,000
再怎么倒

3777
02:00:28,000 --> 02:00:30,000
这都是大家后来的事情了

3778
02:00:30,000 --> 02:00:32,000
他原来的目的就想

3779
02:00:32,000 --> 02:00:33,000
只是想

3780
02:00:33,000 --> 02:00:34,000
他觉得原来那个

3781
02:00:34,000 --> 02:00:36,000
赵牌排出来

3782
02:00:36,000 --> 02:00:38,000
那个把他自己的书太难看了

3783
02:00:38,000 --> 02:00:39,000
然后他希望他想对

3784
02:00:39,000 --> 02:00:42,000
他的作品有 full control

3785
02:00:42,000 --> 02:00:43,000
完全的控制

3786
02:00:43,000 --> 02:00:44,000
所以呢

3787
02:00:44,000 --> 02:00:46,000
他写出来这样一个东西

3788
02:00:46,000 --> 02:00:48,000
而且也只有像他这样的大事

3789
02:00:48,000 --> 02:00:53,000
才能把自己的字体和渲染引擎写出来嘛

3790
02:00:53,000 --> 02:00:56,000
而且好像自从那之后

3791
02:00:56,000 --> 02:00:59,000
从来没有人想过这件事情的

3792
02:00:59,000 --> 02:01:00,000
我感觉

3793
02:01:00,000 --> 02:01:02,000
就是对吧

3794
02:01:02,000 --> 02:01:06,000
已经没有人有这种胆量去尝试这件事情

3795
02:01:06,000 --> 02:01:07,000
对

3796
02:01:07,000 --> 02:01:09,000
这件事情太跨学科了吧

3797
02:01:09,000 --> 02:01:11,000
他对自己排应的知识要求也非常高

3798
02:01:11,000 --> 02:01:14,000
我记得高德纳好像还跟 TAPV 有过

3799
02:01:14,000 --> 02:01:15,000
很深度的合作

3800
02:01:15,000 --> 02:01:15,000
对没错

3801
02:01:15,000 --> 02:01:16,000
这我们也可以讲一讲

3802
02:01:16,000 --> 02:01:17,000
对

3803
02:01:17,000 --> 02:01:18,000
没有

3804
02:01:18,000 --> 02:01:20,000
他当时其实没想那么多

3805
02:01:20,000 --> 02:01:21,000
他就觉得啊

3806
02:01:21,000 --> 02:01:22,000
这个太难看

3807
02:01:22,000 --> 02:01:22,000
然后自己写个

3808
02:01:22,000 --> 02:01:23,000
然后呢

3809
02:01:23,000 --> 02:01:24,000
他当时一开始觉得说

3810
02:01:24,000 --> 02:01:27,000
这事情花几个月就能搞定的事情吧

3811
02:01:27,000 --> 02:01:30,000
然后他才发现他太乐观了

3812
02:01:30,000 --> 02:01:31,000
是个大坑

3813
02:01:31,000 --> 02:01:34,000
而且呢

3814
02:01:34,000 --> 02:01:34,000
他一开始呢

3815
02:01:34,000 --> 02:01:37,000
就是他决定要做这个字体的时候

3816
02:01:37,000 --> 02:01:38,000
他其实也想的

3817
02:01:38,000 --> 02:01:40,000
他还想用别人的东西

3818
02:01:40,000 --> 02:01:41,000
而且他那时候失乐

3819
02:01:41,000 --> 02:01:43,000
不是那时候已经有那个实验室

3820
02:01:43,000 --> 02:01:44,000
有一些东西嘛

3821
02:01:44,000 --> 02:01:45,000
他打印机啊什么

3822
02:01:45,000 --> 02:01:46,000
他去问嘛

3823
02:01:46,000 --> 02:01:47,000
就是说我能不能用

3824
02:01:47,000 --> 02:01:48,000
然后呢

3825
02:01:48,000 --> 02:01:49,000
失乐跟他谈判的基础

3826
02:01:49,000 --> 02:01:50,000
就是说

3827
02:01:50,000 --> 02:01:52,000
你可以用我的设备

3828
02:01:52,000 --> 02:01:53,000
但是最后做出来的东西呢

3829
02:01:53,000 --> 02:01:54,000
又归于我失乐

3830
02:01:54,000 --> 02:01:56,000
然后他就不愿意了嘛

3831
02:01:56,000 --> 02:01:58,000
这东西最后做出来

3832
02:01:58,000 --> 02:01:59,000
应该开源啊

3833
02:01:59,000 --> 02:01:59,000
给大家用嘛

3834
02:01:59,000 --> 02:02:01,000
所以他后来就想

3835
02:02:01,000 --> 02:02:01,000
不行

3836
02:02:01,000 --> 02:02:02,000
那想来想去

3837
02:02:02,000 --> 02:02:03,000
我还是得自己重新做

3838
02:02:03,000 --> 02:02:05,000
然后他发现

3839
02:02:05,000 --> 02:02:07,000
既然目前所有东西

3840
02:02:07,000 --> 02:02:09,000
他不能去改动现有的字体嘛

3841
02:02:09,000 --> 02:02:12,000
那他只好就重新再做一个字体

3842
02:02:12,000 --> 02:02:14,000
他要去学习的时候

3843
02:02:14,000 --> 02:02:16,000
发现你现在

3844
02:02:16,000 --> 02:02:19,000
无论是那些矢量和那些点阵的字体

3845
02:02:19,000 --> 02:02:20,000
都不能满足他要求

3846
02:02:20,000 --> 02:02:25,000
那我就干脆直接向现成的字体设计师

3847
02:02:25,000 --> 02:02:27,000
去学如何画字

3848
02:02:27,000 --> 02:02:30,000
然后再用他的这个程序呢

3849
02:02:30,000 --> 02:02:31,000
教电脑如何画字

3850
02:02:31,000 --> 02:02:34,000
其实他做的那个 metaphone 的话

3851
02:02:34,000 --> 02:02:36,000
是真正的在画这个字嘛

3852
02:02:36,000 --> 02:02:39,000
因为我们现在用的这个矢量字体

3853
02:02:39,000 --> 02:02:40,000
它只是轮廓嘛

3854
02:02:40,000 --> 02:02:42,000
就把那个字体的勾边勾出来

3855
02:02:42,000 --> 02:02:44,000
但是 metaphone 的

3856
02:02:44,000 --> 02:02:46,000
它是真正它教

3857
02:02:46,000 --> 02:02:48,000
它的那个代码是在写

3858
02:02:48,000 --> 02:02:49,000
这个字应该怎么写

3859
02:02:49,000 --> 02:02:51,000
一比一画怎么写

3860
02:02:51,000 --> 02:02:55,000
就最终它是渲染出一个位图的格式了

3861
02:02:55,000 --> 02:02:56,000
它的那个是矢量的

3862
02:02:56,000 --> 02:03:00,000
但最后它最后必须得渲染成位图

3863
02:03:00,000 --> 02:03:02,000
最后呈现出来嘛

3864
02:03:02,000 --> 02:03:02,000
对吧

3865
02:03:02,000 --> 02:03:04,000
因为这个渲染就是最后的事情了

3866
02:03:04,000 --> 02:03:05,000
但是它的那个代码最后是

3867
02:03:05,000 --> 02:03:08,000
它的确是叫这个点位移

3868
02:03:08,000 --> 02:03:08,000
移多少

3869
02:03:08,000 --> 02:03:10,000
这个笔画是怎么样的

3870
02:03:10,000 --> 02:03:12,000
然后再后在上面长肉是什么样的

3871
02:03:12,000 --> 02:03:13,000
它的 metaphone 的

3872
02:03:13,000 --> 02:03:15,000
其实是在画了个字嘛

3873
02:03:15,000 --> 02:03:16,000
它之所以有这样的

3874
02:03:16,000 --> 02:03:17,000
这样一个思路

3875
02:03:17,000 --> 02:03:18,000
就是因为它在做字体

3876
02:03:18,000 --> 02:03:22,000
它是直接找这个字体设计师

3877
02:03:22,000 --> 02:03:24,000
但它就单纯去找查普夫啊

3878
02:03:24,000 --> 02:03:24,000
他们像

3879
02:03:24,000 --> 02:03:26,000
比如我我画个字母

3880
02:03:26,000 --> 02:03:28,000
先画右边一笔

3881
02:03:28,000 --> 02:03:29,000
左边一笔

3882
02:03:29,000 --> 02:03:30,000
然后那个称线怎么加

3883
02:03:30,000 --> 02:03:32,000
然后再削掉一点

3884
02:03:32,000 --> 02:03:33,000
就是就一步一步

3885
02:03:33,000 --> 02:03:35,000
真的就是按那个写字的那个步骤

3886
02:03:35,000 --> 02:03:36,000
就写出来的

3887
02:03:36,000 --> 02:03:37,000
一笔一笔写出来的

3888
02:03:37,000 --> 02:03:37,000
就是

3889
02:03:37,000 --> 02:03:40,000
metaphone 是这样的

3890
02:03:40,000 --> 02:03:41,000
就是 metaphone 的机制

3891
02:03:41,000 --> 02:03:42,000
它是矢量的

3892
02:03:42,000 --> 02:03:45,000
但是 metaphone 的绘制的结果

3893
02:03:45,000 --> 02:03:46,000
好像是位图

3894
02:03:46,000 --> 02:03:47,000
它是个

3895
02:03:47,000 --> 02:03:49,000
就是你要指定一个

3896
02:03:49,000 --> 02:03:52,000
你在调用 metaphone 的时候

3897
02:03:52,000 --> 02:03:52,000
你要是

3898
02:03:52,000 --> 02:03:53,000
你是要指定单位的

3899
02:03:53,000 --> 02:03:55,000
那这个单位是拿来干什么的

3900
02:03:55,000 --> 02:03:57,000
那可能是拿来定位的嘛

3901
02:03:57,000 --> 02:03:58,000
对

3902
02:03:58,000 --> 02:03:59,000
因为要 metaphone

3903
02:03:59,000 --> 02:04:01,000
你还得有字体知识

3904
02:04:01,000 --> 02:04:03,000
而做 metaphone 的厂商非常少

3905
02:04:03,000 --> 02:04:05,000
现在应该已经绝技了

3906
02:04:05,000 --> 02:04:06,000
对

3907
02:04:06,000 --> 02:04:09,000
因为特别难写啊

3908
02:04:09,000 --> 02:04:09,000
因为它要

3909
02:04:09,000 --> 02:04:11,000
就是等于教电脑

3910
02:04:11,000 --> 02:04:12,000
怎么写这个字

3911
02:04:12,000 --> 02:04:14,000
因此就是

3912
02:04:14,000 --> 02:04:16,000
要 60 多个参数吧

3913
02:04:16,000 --> 02:04:18,000
就是老多参数了

3914
02:04:18,000 --> 02:04:20,000
这个对于一个设计师

3915
02:04:20,000 --> 02:04:23,000
而且它是非常不直观的

3916
02:04:23,000 --> 02:04:23,000
对吧

3917
02:04:23,000 --> 02:04:24,000
你是其实是书

3918
02:04:24,000 --> 02:04:25,000
你是在写代码

3919
02:04:25,000 --> 02:04:26,000
对啊

3920
02:04:26,000 --> 02:04:26,000
对啊

3921
02:04:26,000 --> 02:04:27,000
设了好多变

3922
02:04:27,000 --> 02:04:28,000
你首先

3923
02:04:28,000 --> 02:04:29,000
我一个新的字体

3924
02:04:29,000 --> 02:04:31,000
要设多少个变量

3925
02:04:31,000 --> 02:04:32,000
你得想嘛

3926
02:04:32,000 --> 02:04:32,000
对吧

3927
02:04:32,000 --> 02:04:34,000
然后一个参数

3928
02:04:34,000 --> 02:04:35,000
然后都要复制

3929
02:04:35,000 --> 02:04:36,000
然后怎么

3930
02:04:36,000 --> 02:04:37,000
那它怎么动起来

3931
02:04:37,000 --> 02:04:38,000
怎么加衬线

3932
02:04:38,000 --> 02:04:39,000
这个对于一个

3933
02:04:39,000 --> 02:04:40,000
普通的设计师来讲

3934
02:04:40,000 --> 02:04:41,000
太不直观了

3935
02:04:41,000 --> 02:04:42,000
对

3936
02:04:42,000 --> 02:04:43,000
原来是这样

3937
02:04:43,000 --> 02:04:44,000
所以

3938
02:04:44,000 --> 02:04:45,000
所以其实

3939
02:04:45,000 --> 02:04:46,000
现在也没有人

3940
02:04:46,000 --> 02:04:48,000
在用这个 metaphone

3941
02:04:48,000 --> 02:04:49,000
做字

3942
02:04:49,000 --> 02:04:50,000
然后当时我记得

3943
02:04:50,000 --> 02:04:51,000
我用的时候

3944
02:04:51,000 --> 02:04:53,000
其实已经是过了

3945
02:04:53,000 --> 02:04:54,000
那个时间段

3946
02:04:54,000 --> 02:04:55,000
就我用的

3947
02:04:55,000 --> 02:04:55,000
那个时候

3948
02:04:55,000 --> 02:04:56,000
还有两个并行的系统

3949
02:04:56,000 --> 02:04:57,000
就是 TAC

3950
02:04:57,000 --> 02:04:58,000
就是 TAC 系统

3951
02:04:58,000 --> 02:05:00,000
要去引用一个系统字体

3952
02:05:00,000 --> 02:05:01,000
是非常困难的

3953
02:05:01,000 --> 02:05:04,000
但是还要转换格式

3954
02:05:04,000 --> 02:05:05,000
要转换成一个 TAC

3955
02:05:05,000 --> 02:05:05,000
能够认

3956
02:05:05,000 --> 02:05:07,000
不是说你丢一个 TTF

3957
02:05:07,000 --> 02:05:08,000
或者是 OpenTAC 给它

3958
02:05:08,000 --> 02:05:09,000
它就能用了

3959
02:05:09,000 --> 02:05:10,000
但是后来

3960
02:05:10,000 --> 02:05:12,000
越到后来像什么

3961
02:05:12,000 --> 02:05:13,000
ZTAC

3962
02:05:13,000 --> 02:05:14,000
特别是 ZTAC

3963
02:05:14,000 --> 02:05:15,000
出来之后

3964
02:05:15,000 --> 02:05:16,000
它是可以直接调用系统字体

3965
02:05:16,000 --> 02:05:17,000
因为它是 Mac 上面的

3966
02:05:17,000 --> 02:05:18,000
Mac 上面

3967
02:05:18,000 --> 02:05:19,000
它本来就是把这个 OpenType

3968
02:05:19,000 --> 02:05:21,000
那套做成一个系统级别的

3969
02:05:21,000 --> 02:05:22,000
这个 API

3970
02:05:22,000 --> 02:05:23,000
可以暴露给上面的

3971
02:05:23,000 --> 02:05:24,000
这个应用程序

3972
02:05:24,000 --> 02:05:26,000
所以它并没有像

3973
02:05:26,000 --> 02:05:27,000
最原始的那个 TAC 那种

3974
02:05:27,000 --> 02:05:28,000
你还得自己

3975
02:05:28,000 --> 02:05:30,000
用自己的什么 metaphone

3976
02:05:30,000 --> 02:05:31,000
那种格式

3977
02:05:31,000 --> 02:05:32,000
去描述一个字体

3978
02:05:32,000 --> 02:05:32,000
当时还有好多这种

3979
02:05:32,000 --> 02:05:34,000
就是所谓的中间格式

3980
02:05:34,000 --> 02:05:35,000
什么 phone 1

3981
02:05:35,000 --> 02:05:36,000
那中间还要转

3982
02:05:36,000 --> 02:05:37,000
转很多遍

3983
02:05:37,000 --> 02:05:38,000
后来都是可以直接

3984
02:05:38,000 --> 02:05:40,000
就调用系统里面存在的

3985
02:05:40,000 --> 02:05:41,000
OpenType

3986
02:05:41,000 --> 02:05:42,000
或者 TrueType 字体

3987
02:05:42,000 --> 02:05:42,000
就可以了

3988
02:05:42,000 --> 02:05:43,000
也就不用再考虑

3989
02:05:43,000 --> 02:05:45,000
什么 metaphone

3990
02:05:45,000 --> 02:05:46,000
包括这个

3991
02:05:46,000 --> 02:05:47,000
甚至这个 ComputerModern

3992
02:05:47,000 --> 02:05:48,000
后来也有人转成

3993
02:05:48,000 --> 02:05:48,000
那个 TrueType

3994
02:05:48,000 --> 02:05:50,000
还是 OpenType 的格式

3995
02:05:50,000 --> 02:05:51,000
放在那个库里面

3996
02:05:51,000 --> 02:05:53,000
就共直接使用

3997
02:05:53,000 --> 02:05:55,000
而且这很重要一点

3998
02:05:55,000 --> 02:05:56,000
就是说大家感觉

3999
02:05:56,000 --> 02:05:57,000
字体就是它的一个造型

4000
02:05:57,000 --> 02:05:58,000
这个造型轮廓而已

4001
02:05:58,000 --> 02:05:59,000
其实更重要的

4002
02:05:59,000 --> 02:06:00,000
对于排版的来讲

4003
02:06:00,000 --> 02:06:02,000
是很多里面的 metrics

4004
02:06:02,000 --> 02:06:05,000
就是它的那个度量信息

4005
02:06:05,000 --> 02:06:06,000
里面记录了

4006
02:06:06,000 --> 02:06:07,000
比如说这个基线

4007
02:06:07,000 --> 02:06:08,000
是在什么位置

4008
02:06:08,000 --> 02:06:09,000
然后这个字体

4009
02:06:09,000 --> 02:06:11,000
降步是有多高

4010
02:06:11,000 --> 02:06:12,000
深步有多高

4011
02:06:12,000 --> 02:06:14,000
这些东西都必须要让

4012
02:06:14,000 --> 02:06:15,000
排版引擎进行读取

4013
02:06:15,000 --> 02:06:17,000
它才能调啊

4014
02:06:17,000 --> 02:06:18,000
要不然它找

4015
02:06:18,000 --> 02:06:19,000
它不认得这个字的话

4016
02:06:19,000 --> 02:06:20,000
它没办法调

4017
02:06:20,000 --> 02:06:21,000
你上下标

4018
02:06:21,000 --> 02:06:23,000
你要给它挪多少位置之类的

4019
02:06:23,000 --> 02:06:24,000
极限要提高多少

4020
02:06:24,000 --> 02:06:25,000
这些东西都必须要

4021
02:06:25,000 --> 02:06:28,000
字体里面先要有这个信息

4022
02:06:28,000 --> 02:06:30,000
然后要让排版引擎知道

4023
02:06:30,000 --> 02:06:31,000
那大家知道

4024
02:06:31,000 --> 02:06:33,000
TAC 和原来和 OpenType

4025
02:06:33,000 --> 02:06:35,000
它原来根本就不是一个体系的

4026
02:06:35,000 --> 02:06:36,000
这个东西

4027
02:06:36,000 --> 02:06:37,000
所以他们两个人

4028
02:06:37,000 --> 02:06:39,000
这两个东西之间

4029
02:06:39,000 --> 02:06:39,000
对

4030
02:06:39,000 --> 02:06:43,000
要让他们互相交流到这个信息

4031
02:06:43,000 --> 02:06:44,000
然后让他们互相知道这个事情

4032
02:06:44,000 --> 02:06:46,000
就本身就是一个很难的

4033
02:06:46,000 --> 02:06:46,000
对

4034
02:06:46,000 --> 02:06:48,000
原来的话

4035
02:06:48,000 --> 02:06:51,000
高德纳他因为 Metaphone

4036
02:06:51,000 --> 02:06:52,000
是他自己做的

4037
02:06:52,000 --> 02:06:54,000
他所有他自己新定义了一套 metrics

4038
02:06:54,000 --> 02:06:56,000
然后呢

4039
02:06:56,000 --> 02:06:58,000
让 TAC 能调用

4040
02:06:58,000 --> 02:06:59,000
他自己做东西

4041
02:06:59,000 --> 02:07:00,000
就他自己好调用嘛

4042
02:07:00,000 --> 02:07:01,000
这个就正如

4043
02:07:01,000 --> 02:07:03,000
Adobe 他自己

4044
02:07:03,000 --> 02:07:04,000
OpenType

4045
02:07:04,000 --> 02:07:05,000
他这个 spec

4046
02:07:05,000 --> 02:07:06,000
就是 Adobe 他自己开发的

4047
02:07:06,000 --> 02:07:08,000
然后 InDesign

4048
02:07:08,000 --> 02:07:10,000
又是他自己的软件

4049
02:07:10,000 --> 02:07:10,000
所以呢

4050
02:07:10,000 --> 02:07:11,000
他自己的软件调

4051
02:07:11,000 --> 02:07:12,000
OpenType 特性

4052
02:07:12,000 --> 02:07:13,000
就调得特别好嘛

4053
02:07:13,000 --> 02:07:15,000
所以你在方正的软件里面

4054
02:07:15,000 --> 02:07:17,000
排版软件里面

4055
02:07:17,000 --> 02:07:19,000
你要用 Adobe 的 OpenType 特性

4056
02:07:19,000 --> 02:07:20,000
就特别难受

4057
02:07:20,000 --> 02:07:21,000
就调不出来嘛

4058
02:07:21,000 --> 02:07:23,000
因为他们不是

4059
02:07:23,000 --> 02:07:24,000
不是一个系统东西

4060
02:07:24,000 --> 02:07:25,000
那这些国产的

4061
02:07:25,000 --> 02:07:26,000
这些系统软件

4062
02:07:26,000 --> 02:07:27,000
他难道还要说

4063
02:07:27,000 --> 02:07:30,000
要求用国产的字体格式才行吗

4064
02:07:30,000 --> 02:07:31,000
就他这个怎么解决这个问题呢

4065
02:07:31,000 --> 02:07:33,000
在很久以前

4066
02:07:33,000 --> 02:07:35,000
在方正软件外

4067
02:07:35,000 --> 02:07:36,000
必须要用方正的字体

4068
02:07:36,000 --> 02:07:37,000
以前是不认的

4069
02:07:37,000 --> 02:07:40,000
就方正自己有一个字体格式的

4070
02:07:40,000 --> 02:07:42,000
对 没错 是的

4071
02:07:42,000 --> 02:07:45,000
但后来也是终于可以用 TDF 了

4072
02:07:45,000 --> 02:07:47,000
也能用 OpenType

4073
02:07:47,000 --> 02:07:48,000
这也是很后面的事情了

4074
02:07:48,000 --> 02:07:51,000
那现在这个业界不都统一到

4075
02:07:51,000 --> 02:07:53,000
这个 TrueType OpenType

4076
02:07:53,000 --> 02:07:54,000
这两个格式了

4077
02:07:54,000 --> 02:07:57,000
那现在所有的现代排版软件

4078
02:07:57,000 --> 02:07:58,000
都得支持吧

4079
02:07:58,000 --> 02:08:00,000
对啊

4080
02:08:00,000 --> 02:08:01,000
但是你也知道吧

4081
02:08:01,000 --> 02:08:02,000
OpenType

4082
02:08:02,000 --> 02:08:05,000
有时候微软和 Adobe 做的嘛

4083
02:08:05,000 --> 02:08:06,000
OK

4084
02:08:06,000 --> 02:08:09,000
这跟 WPS 之类的差不多嘛

4085
02:08:09,000 --> 02:08:10,000
其实

4086
02:08:10,000 --> 02:08:12,000
支持程度也可以不一样

4087
02:08:12,000 --> 02:08:13,000
因为你想一个字体里面

4088
02:08:13,000 --> 02:08:15,000
现在的 OpenType 字体

4089
02:08:15,000 --> 02:08:16,000
它的特性非常复杂

4090
02:08:16,000 --> 02:08:18,000
它有很多指导

4091
02:08:18,000 --> 02:08:19,000
你怎样去排版的特性

4092
02:08:19,000 --> 02:08:21,000
而最早的一个 TrueType 的字体

4093
02:08:21,000 --> 02:08:23,000
它其实指核心的功能

4094
02:08:23,000 --> 02:08:25,000
就是描述一个具体的 Glyph

4095
02:08:25,000 --> 02:08:27,000
它的轮廓是什么样的

4096
02:08:27,000 --> 02:08:27,000
比较简单嘛

4097
02:08:27,000 --> 02:08:30,000
方正其实它以前就是通过排版引擎

4098
02:08:30,000 --> 02:08:32,000
来实现很多排版的特性

4099
02:08:32,000 --> 02:08:34,000
但是现在可能业界更希望

4100
02:08:34,000 --> 02:08:36,000
大家能够遵循 OpenType

4101
02:08:36,000 --> 02:08:38,000
这个字体里面

4102
02:08:38,000 --> 02:08:39,000
已经写入的一些排版特性

4103
02:08:39,000 --> 02:08:41,000
来实现一些排版

4104
02:08:41,000 --> 02:08:44,000
就是这个权力到底是在排版师那里

4105
02:08:44,000 --> 02:08:46,000
还是在字体设计师那里的问题

4106
02:08:46,000 --> 02:08:48,000
在哪个层级你要说好

4107
02:08:48,000 --> 02:08:49,000
然后呢

4108
02:08:49,000 --> 02:08:50,000
你互相能调用就可以嘛

4109
02:08:50,000 --> 02:08:53,000
像 Tek 和 MetalFond

4110
02:08:53,000 --> 02:08:54,000
都是同一个人做的

4111
02:08:54,000 --> 02:08:55,000
所以他自己想清楚

4112
02:08:55,000 --> 02:08:56,000
他自己做

4113
02:08:56,000 --> 02:08:57,000
互相调用就很顺嘛

4114
02:08:57,000 --> 02:08:59,000
那你到另外一个系统去

4115
02:08:59,000 --> 02:09:00,000
集同压缴

4116
02:09:00,000 --> 02:09:01,000
这个搞不清楚啊

4117
02:09:01,000 --> 02:09:07,000
是因为毕竟互相都不都不能直接干预对方的这个成果吧

4118
02:09:07,000 --> 02:09:10,000
他自己设计师也不能说我这个自己只能用在哪些领域

4119
02:09:10,000 --> 02:09:11,000
他也不知道你应用场景是什么

4120
02:09:11,000 --> 02:09:14,000
只能给到你一些通用的建议

4121
02:09:14,000 --> 02:09:14,000
对吧

4122
02:09:14,000 --> 02:09:16,000
然后排版师那边

4123
02:09:16,000 --> 02:09:16,000
对

4124
02:09:16,000 --> 02:09:24,000
然后排版师那边也只能说我根据我现在手上这个作品的特殊的情况

4125
02:09:24,000 --> 02:09:27,000
选择要不要启用你的那个平台

4126
02:09:27,000 --> 02:09:29,000
还是说我自己自己定一个规则

4127
02:09:29,000 --> 02:09:30,000
说了算了算了

4128
02:09:30,000 --> 02:09:30,000
对吧

4129
02:09:30,000 --> 02:09:32,000
因为有些特殊情况要特殊处理的嘛

4130
02:09:32,000 --> 02:09:33,000
那搞个很简单的

4131
02:09:33,000 --> 02:09:35,000
就是网页排版

4132
02:09:35,000 --> 02:09:36,000
连一个行高都算不清楚嘛

4133
02:09:36,000 --> 02:09:37,000
就是这一点嘛

4134
02:09:37,000 --> 02:09:39,000
不同系统的

4135
02:09:39,000 --> 02:09:42,000
他读取的 OpenType 特性里面的字段

4136
02:09:42,000 --> 02:09:45,000
行高的那个数据字段是不一样的

4137
02:09:45,000 --> 02:09:48,000
那每个浏览器读出来的数值都不一样

4138
02:09:48,000 --> 02:09:50,000
他算出来的位置就不都不一样

4139
02:09:50,000 --> 02:09:52,000
他渲染出来的东西都不一样嘛

4140
02:09:52,000 --> 02:09:55,000
所以这一套有什么国标之类的吗

4141
02:09:55,000 --> 02:09:57,000
还是说就是只有行业标准

4142
02:09:57,000 --> 02:09:59,000
就大家各自去想办法解决

4143
02:09:59,000 --> 02:10:02,000
这典型的 OpenType 就是一个商业标准嘛

4144
02:10:02,000 --> 02:10:03,000
这行业巨头首先提出来的

4145
02:10:03,000 --> 02:10:05,000
因为是大厂商做的嘛

4146
02:10:05,000 --> 02:10:05,000
所以呢

4147
02:10:05,000 --> 02:10:08,000
大家自然而然的也就都跟进嘛

4148
02:10:08,000 --> 02:10:09,000
从这个侧面来讲的话

4149
02:10:09,000 --> 02:10:11,000
高的那是一个人挑

4150
02:10:11,000 --> 02:10:14,000
就是单枪匹马做一套系统

4151
02:10:14,000 --> 02:10:18,000
然后我们在这边拿来和整个业界做出来的一套系统相比

4152
02:10:18,000 --> 02:10:20,000
这是大宗师的风范

4153
02:10:20,000 --> 02:10:20,000
对

4154
02:10:20,000 --> 02:10:21,000
不是错了

4155
02:10:21,000 --> 02:10:23,000
是大多数做的时候

4156
02:10:23,000 --> 02:10:24,000
业界这个事情还不存在

4157
02:10:24,000 --> 02:10:25,000
没有这个业好吗

4158
02:10:25,000 --> 02:10:26,000
业界还不存在

4159
02:10:26,000 --> 02:10:26,000
对

4160
02:10:26,000 --> 02:10:28,000
没有这个行业

4161
02:10:28,000 --> 02:10:30,000
40 多年

4162
02:10:30,000 --> 02:10:31,000
其实 70 年代的事情嘛

4163
02:10:31,000 --> 02:10:32,000
对啊

4164
02:10:32,000 --> 02:10:34,000
所以那时候桌面排版是什么

4165
02:10:34,000 --> 02:10:35,000
那时候还没有 Mac

4166
02:10:35,000 --> 02:10:36,000
那个时候 PC 都没有

4167
02:10:36,000 --> 02:10:37,000
还桌面排版

4168
02:10:37,000 --> 02:10:38,000
对

4169
02:10:38,000 --> 02:10:41,000
所以从这个意义上讲

4170
02:10:41,000 --> 02:10:42,000
它真的是一个传奇

4171
02:10:42,000 --> 02:10:44,000
就是一个人开创了一个领域

4172
02:10:44,000 --> 02:10:45,000
但是

4173
02:10:45,000 --> 02:10:48,000
而且这个领域的这个成果到现在还是被

4174
02:10:48,000 --> 02:10:51,000
被一些比较像他一样

4175
02:10:51,000 --> 02:10:54,000
比较喜欢走极端的人所使用着

4176
02:10:54,000 --> 02:11:02,000
而其他的熟民或说没有那么 geek 的人们就在使用着另一套可能更 user friendly 的系统

4177
02:11:02,000 --> 02:11:06,000
而他们的最终的结果几乎是不分博种的

4178
02:11:06,000 --> 02:11:08,000
我不知道你们啊

4179
02:11:08,000 --> 02:11:12,000
但是有时候我会觉得太和排出来东西太有风格性了

4180
02:11:12,000 --> 02:11:14,000
就是你一看就知道这是太和写的

4181
02:11:14,000 --> 02:11:18,000
但是反过来一个用 word 或者是

4182
02:11:18,000 --> 02:11:19,000
word 也很有风格

4183
02:11:19,000 --> 02:11:22,000
一看就用艺术字

4184
02:11:22,000 --> 02:11:24,000
用 inDesign 排出来东西

4185
02:11:24,000 --> 02:11:28,000
你就会不太知道说这个东西到底是怎么来的

4186
02:11:28,000 --> 02:11:31,000
有时候太风格化可能也不是一件特别好的事情

4187
02:11:31,000 --> 02:11:32,000
这也是程度的问题

4188
02:11:32,000 --> 02:11:34,000
它有点千篇一律

4189
02:11:34,000 --> 02:11:38,000
很多人他不会配置那些太很多个性化的参数

4190
02:11:38,000 --> 02:11:40,000
因为调个性化要牵涉到很多这种参数的变动

4191
02:11:40,000 --> 02:11:42,000
其实有时候不一定能得到好的结果

4192
02:11:42,000 --> 02:11:43,000
对还是那句话

4193
02:11:43,000 --> 02:11:45,000
You have to know everything to do anything

4194
02:11:45,000 --> 02:11:46,000
还是蛮难

4195
02:11:46,000 --> 02:11:47,000
对啊

4196
02:11:47,000 --> 02:11:48,000
就哪怕是最简单的

4197
02:11:48,000 --> 02:11:49,000
你就换一个字体

4198
02:11:49,000 --> 02:11:53,000
比如说你就看不惯这个 computer model

4199
02:11:53,000 --> 02:11:54,000
那种圆滚滚的这种长相的字体

4200
02:11:54,000 --> 02:11:56,000
当时我就有这个问题

4201
02:11:56,000 --> 02:11:58,000
我说我换成那个 Palatino 对吧

4202
02:11:58,000 --> 02:12:00,000
我用的是 Palatino 对

4203
02:12:00,000 --> 02:12:02,000
对但是你一旦你用 Palatino

4204
02:12:02,000 --> 02:12:04,000
你就要考虑你的那个公式的问题了

4205
02:12:04,000 --> 02:12:07,000
因为公式的他当时很多那个 Palatino 的

4206
02:12:07,000 --> 02:12:11,000
这个就是希腊字母罗马字母

4207
02:12:11,000 --> 02:12:12,000
它是不齐全的

4208
02:12:12,000 --> 02:12:13,000
或者你必须要用那个代替自己

4209
02:12:13,000 --> 02:12:15,000
你就发现公式的特别难看

4210
02:12:15,000 --> 02:12:15,000
这是其一

4211
02:12:15,000 --> 02:12:17,000
第二个就是说数学排版

4212
02:12:17,000 --> 02:12:18,000
特别是公式排版的

4213
02:12:18,000 --> 02:12:19,000
但那个鉴距啊

4214
02:12:19,000 --> 02:12:21,000
那些那些就是 matrix

4215
02:12:21,000 --> 02:12:23,000
那些那些数值标注

4216
02:12:23,000 --> 02:12:25,000
它是根据那个字体来定制的

4217
02:12:25,000 --> 02:12:26,000
然后你画一套字体

4218
02:12:26,000 --> 02:12:28,000
它写在字体里头了

4219
02:12:28,000 --> 02:12:29,000
但你就画一套字体

4220
02:12:29,000 --> 02:12:30,000
你就发现那个就是更难看

4221
02:12:30,000 --> 02:12:31,000
对吧

4222
02:12:31,000 --> 02:12:31,000
就没有了

4223
02:12:31,000 --> 02:12:32,000
就很麻烦

4224
02:12:32,000 --> 02:12:34,000
所以到时大家就最偷懒的方法

4225
02:12:34,000 --> 02:12:34,000
就直接用

4226
02:12:34,000 --> 02:12:35,000
啥也不敢

4227
02:12:35,000 --> 02:12:36,000
直接写对吧

4228
02:12:36,000 --> 02:12:37,000
写内容就好了

4229
02:12:37,000 --> 02:12:37,000
不要管它长相

4230
02:12:37,000 --> 02:12:38,000
还是这个问题吧

4231
02:12:38,000 --> 02:12:40,000
而且不要去定制它的长相

4232
02:12:40,000 --> 02:12:43,000
所以用 Tek 做出来的东西都是一样的了

4233
02:12:43,000 --> 02:12:43,000
大家都知道

4234
02:12:43,000 --> 02:12:46,000
这一看就知道这是 Tek 写的嘛

4235
02:12:46,000 --> 02:12:50,000
也是一个传奇

4236
02:12:50,000 --> 02:12:52,000
鸡身单的单身鸡

4237
02:12:52,000 --> 02:12:52,000
但我不知道

4238
02:12:52,000 --> 02:12:55,000
如果说以后的那种论文

4239
02:12:55,000 --> 02:12:58,000
如果不需要考虑是一个页的形式存在

4240
02:12:58,000 --> 02:12:59,000
它可以是一个 scroll

4241
02:12:59,000 --> 02:13:01,000
一个长卷轴的形式出现

4242
02:13:01,000 --> 02:13:03,000
但其实很多排版的难题

4243
02:13:03,000 --> 02:13:05,000
可以降很多维度

4244
02:13:05,000 --> 02:13:05,000
对

4245
02:13:05,000 --> 02:13:08,000
你的意思是把排版的难题转嫁到浏览器上

4246
02:13:08,000 --> 02:13:12,000
浏览器的引擎实际上就是一个排版引擎

4247
02:13:12,000 --> 02:13:14,000
你不需要静态排版的

4248
02:13:14,000 --> 02:13:14,000
然后

4249
02:13:14,000 --> 02:13:17,000
动态排版就是一坨屎

4250
02:13:17,000 --> 02:13:19,000
现在就是你看 CSS 排版

4251
02:13:19,000 --> 02:13:20,000
现在能力那么差

4252
02:13:20,000 --> 02:13:21,000
觉得这一点

4253
02:13:21,000 --> 02:13:22,000
太难了

4254
02:13:22,000 --> 02:13:23,000
这真的太难了

4255
02:13:23,000 --> 02:13:24,000
没有需求嘛

4256
02:13:24,000 --> 02:13:25,000
就是这个问题

4257
02:13:25,000 --> 02:13:26,000
明乱机场上

4258
02:13:26,000 --> 02:13:28,000
天天要考虑各种安全问题

4259
02:13:28,000 --> 02:13:31,000
还要给你搞这种非常坑爹的排版

4260
02:13:31,000 --> 02:13:33,000
那怎么气死吧你

4261
02:13:33,000 --> 02:13:34,000
你在 web 排版

4262
02:13:34,000 --> 02:13:36,000
你连对方用什么字体都不知道了

4263
02:13:36,000 --> 02:13:37,000
你得猜

4264
02:13:37,000 --> 02:13:38,000
现在不用了嘛

4265
02:13:38,000 --> 02:13:39,000
现在有 ifont 嘛

4266
02:13:39,000 --> 02:13:40,000
可以指定了吧

4267
02:13:40,000 --> 02:13:41,000
但只是说

4268
02:13:41,000 --> 02:13:44,000
最终体积的问题还是不太好说

4269
02:13:44,000 --> 02:13:45,000
对呀

4270
02:13:45,000 --> 02:13:50,000
不过我们自弹之上也花了两期时间

4271
02:13:50,000 --> 02:13:51,000
就讲 web 排版的事情

4272
02:13:51,000 --> 02:13:52,000
大家可以回去听

4273
02:13:52,000 --> 02:13:54,000
这次他没有说是哪一期

4274
02:13:54,000 --> 02:13:56,000
我已经很欣慰了

4275
02:13:56,000 --> 02:13:58,000
你一定要逼我说吗

4276
02:13:58,000 --> 02:14:00,000
偶尔我也能一期想起来

4277
02:14:00,000 --> 02:14:02,000
那和恐慌聊过什么

4278
02:14:02,000 --> 02:14:04,000
因为刚好就是前两期

4279
02:14:04,000 --> 02:14:04,000
不远

4280
02:14:04,000 --> 02:14:06,000
OK

4281
02:14:06,000 --> 02:14:08,000
那今天也聊了好久

4282
02:14:08,000 --> 02:14:08,000
好了

4283
02:14:08,000 --> 02:14:09,000
差不多了吧

4284
02:14:09,000 --> 02:14:11,000
我们说了这么多好难解呢

4285
02:14:11,000 --> 02:14:13,000
是不是要收尾了同学们

4286
02:14:13,000 --> 02:14:14,000
好吧

4287
02:14:14,000 --> 02:14:14,000
来

4288
02:14:14,000 --> 02:14:15,000
outro

4289
02:14:15,000 --> 02:14:18,000
好那我们今天的节目呢

4290
02:14:18,000 --> 02:14:20,000
就暂时告一段路

4291
02:14:20,000 --> 02:14:22,000
我们今天也是

4292
02:14:22,000 --> 02:14:24,000
我们现在在这里提一下这事情

4293
02:14:24,000 --> 02:14:27,000
我们今天也是首次尝试在 clubhouse 上面

4294
02:14:27,000 --> 02:14:29,000
同步我们直播的

4295
02:14:29,000 --> 02:14:31,000
同步我们录播的这个内容

4296
02:14:31,000 --> 02:14:33,000
然后一个直播的形式

4297
02:14:33,000 --> 02:14:35,000
我们的我们这房间还剩下多少人现在

4298
02:14:35,000 --> 02:14:38,000
还剩下三十多个人

4299
02:14:38,000 --> 02:14:40,000
我们的死忠粉丝

4300
02:14:40,000 --> 02:14:44,000
也非常感谢大家一起跟我们完成了这期节目的录制

4301
02:14:44,000 --> 02:14:47,000
那自谈自唱听众呢

4302
02:14:47,000 --> 02:14:49,000
如果想跟我们交流或者反馈

4303
02:14:49,000 --> 02:14:50,000
都可以写邮件告诉我们

4304
02:14:50,000 --> 02:14:53,000
我们的邮箱地址是 podcastatthetype.com

4305
02:14:53,000 --> 02:14:57,000
podcastatthetype.com

4306
02:14:57,000 --> 02:14:59,000
同时呢大家也可以在新浪微博

4307
02:14:59,000 --> 02:15:03,000
在推特以及在微信上面通过搜索 thetype

4308
02:15:03,000 --> 02:15:06,000
thetype 这个账号关注到我们

4309
02:15:06,000 --> 02:15:08,000
在 facebook 上搜索 thetype

4310
02:15:08,000 --> 02:15:10,000
或者搜索 typeisbeautiful

4311
02:15:10,000 --> 02:15:11,000
也都可以找到我们

4312
02:15:11,000 --> 02:15:14,000
您刚刚收听到的节目是

4313
02:15:14,000 --> 02:15:15,000
内核恐慌一档

4314
02:15:15,000 --> 02:15:17,000
尽量贴近计算机主题的娱乐 podcast

4315
02:15:17,000 --> 02:15:19,000
我们号称硬活

4316
02:15:19,000 --> 02:15:20,000
但是也没有什么干货

4317
02:15:20,000 --> 02:15:21,000
想听人听不想听人听别听

4318
02:15:21,000 --> 02:15:24,000
我们的网址是 pan.icu

4319
02:15:24,000 --> 02:15:26,000
您可以在网上找到订阅我们节目的方法

4320
02:15:26,000 --> 02:15:27,000
以及联络我们的方式

4321
02:15:27,000 --> 02:15:30,000
如果您期待我们更频繁的更新节目

4322
02:15:30,000 --> 02:15:31,000
欢迎您到爱发电我们捐款

4323
02:15:31,000 --> 02:15:33,000
相信可以在我们的网站上找到

4324
02:15:33,000 --> 02:15:34,000
先发电后催更

4325
02:15:34,000 --> 02:15:36,000
文明催更从你做起

4326
02:15:36,000 --> 02:15:37,000
如果您觉得意欲未尽

4327
02:15:37,000 --> 02:15:39,000
也欢迎您去收听

4328
02:15:39,000 --> 02:15:40,000
Rail 和黄海主持的节目

4329
02:15:40,000 --> 02:15:41,000
风头圈

4330
02:15:41,000 --> 02:15:43,000
Rail 和任宁主持的节目

4331
02:15:43,000 --> 02:15:43,000
提前怀旧

4332
02:15:43,000 --> 02:15:45,000
以及基本不由无套主持的

4333
02:15:45,000 --> 02:15:46,000
自坦自串

4334
02:15:46,000 --> 02:15:47,000
好

4335
02:15:47,000 --> 02:15:49,000
感谢大家收听

4336
02:15:49,000 --> 02:15:50,000
本期节目是由 Eric

4337
02:15:50,000 --> 02:15:52,000
在 Big Sur 上剪辑制作完成的

4338
02:15:52,000 --> 02:15:53,000
我们下期节目再见

4339
02:15:53,000 --> 02:15:54,000
拜拜

4340
02:15:54,000 --> 02:15:55,000
拜拜

4341
02:15:55,000 --> 02:15:56,000
哇你还会说这个

4342
02:15:56,000 --> 02:15:58,000
这是 Meta 信息呀

4343
02:15:58,000 --> 02:16:00,000
就是我很注重 Meta 的知道吗

4344
02:16:00,000 --> 02:16:03,000
就像我们会看不是有封面吗

4345
02:16:03,000 --> 02:16:04,000
那照片是谁

4346
02:16:04,000 --> 02:16:06,000
在几月几号在什么地方拍的吗

4347
02:16:06,000 --> 02:16:08,000
有时候我把那个拍照设备也写进去

4348
02:16:08,000 --> 02:16:10,000
然后我们的编辑就说

4349
02:16:10,000 --> 02:16:11,000
有必要写吗

4350
02:16:11,000 --> 02:16:19,000
我给你 Elizabeth

4351
02:16:19,000 --> 02:16:20,000
人生意

4352
02:16:20,000 --> 02:16:20,000
stimuli

4353
02:16:20,000 --> 02:16:25,000
无心

4354
02:16:25,000 --> 02:16:29,000
你

4355
02:16:29,000 --> 02:16:30,000
啊

4356
02:16:30,000 --> 02:16:31,000
你

4357
02:16:31,000 --> 02:16:32,000
啊

4358
02:16:32,000 --> 02:16:33,000
髒

4359
02:16:33,000 --> 02:16:35,000
techno

4360
02:16:35,000 --> 02:16:35,000
ное

4361
02:16:35,000 --> 02:16:36,000
啊

4362
02:16:36,000 --> 02:16:37,000
daar

4363
02:16:37,000 --> 02:16:37,000
lar

4364
02:16:37,000 --> 02:16:38,000
与

4365
02:16:38,000 --> 02:16:38,000
娅

