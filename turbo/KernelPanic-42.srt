1
00:00:00,000 --> 00:00:02,000
321 开始

2
00:00:02,000 --> 00:00:22,000
大家好

3
00:00:22,000 --> 00:00:26,000
今天是 7 月 26 号自弹至上的第 26 期

4
00:00:26,000 --> 00:00:30,000
同时也是内核恐慌应该是第 42 期

5
00:00:30,000 --> 00:00:33,000
我希望是第 42 期

6
00:00:33,000 --> 00:00:35,000
或者是 41 期

7
00:00:35,000 --> 00:00:37,000
为什么不可能吧

8
00:00:37,000 --> 00:00:39,000
不一定吧

9
00:00:39,000 --> 00:00:45,000
我这个同时也是内核恐慌第 41 和 42 的纠缠态那一期

10
00:00:45,000 --> 00:00:46,000
OK

11
00:00:46,000 --> 00:00:49,000
大家听到的时候才可以 review 这到底是哪一期

12
00:00:52,000 --> 00:00:53,000
自弹之唱是全球首家

13
00:00:53,000 --> 00:00:56,000
用华语制作的字体白音主题博客节目

14
00:00:56,000 --> 00:00:58,000
我是主播文川西班东音局 Eric

15
00:00:58,000 --> 00:01:01,000
我是主播黄埔江边清真鱼前真鱼

16
00:01:02,000 --> 00:01:04,000
您正在收听 IPM Podcast

17
00:01:04,000 --> 00:01:06,000
网络旗下的 IT 技术主题娱乐节目内核武皇

18
00:01:06,000 --> 00:01:07,000
我们号称 Hardcore

19
00:01:07,000 --> 00:01:08,000
但是没有干货

20
00:01:08,000 --> 00:01:09,000
想听人听不想听人就别听

21
00:01:09,000 --> 00:01:11,000
我是吴套

22
00:01:11,000 --> 00:01:11,000
我是 Rail

23
00:01:11,000 --> 00:01:12,000
我就不报画名

24
00:01:12,000 --> 00:01:14,000
对我们还没想起那个画名

25
00:01:14,000 --> 00:01:15,000
还是对吧

26
00:01:15,000 --> 00:01:16,000
气势上

27
00:01:16,000 --> 00:01:17,000
算了吧

28
00:01:17,000 --> 00:01:17,000
合必

29
00:01:17,000 --> 00:01:22,000
但是吴套上次来我们自弹之间做嘉宾的时候已经有花名了

30
00:01:22,000 --> 00:01:23,000
我帮他起的

31
00:01:23,000 --> 00:01:25,000
我觉得那个还是对

32
00:01:25,000 --> 00:01:26,000
称之有亏

33
00:01:26,000 --> 00:01:29,000
因为我现在已经不再来一个合法了

34
00:01:29,000 --> 00:01:31,000
离多岛好像可能还近一点的

35
00:01:31,000 --> 00:01:33,000
所以还是算了

36
00:01:33,000 --> 00:01:36,000
纽伦堡内卖塔湖啊

37
00:01:36,000 --> 00:01:41,000
我们成全

38
00:01:41,000 --> 00:01:44,000
to the bone 不要这一套

39
00:01:44,000 --> 00:01:44,000
好了

40
00:01:44,000 --> 00:01:47,000
今天有没有口号吗

41
00:01:47,000 --> 00:01:50,000
今天好像也没有口号

42
00:01:50,000 --> 00:01:52,000
Heroes Never Die

43
00:01:52,000 --> 00:01:54,000
太扯了

44
00:01:54,000 --> 00:01:55,000
好了

45
00:01:55,000 --> 00:01:57,000
自弹自串

46
00:01:57,000 --> 00:01:59,000
我们这是第二期节目

47
00:01:59,000 --> 00:02:01,000
在第二期节目正式进入主题之前

48
00:02:01,000 --> 00:02:04,000
我们先来看一下第一期自弹之串

49
00:02:04,000 --> 00:02:05,000
有一些听众反馈

50
00:02:05,000 --> 00:02:05,000
对吧

51
00:02:05,000 --> 00:02:06,000
郑宇

52
00:02:06,000 --> 00:02:06,000
嗯

53
00:02:06,000 --> 00:02:07,000
是

54
00:02:07,000 --> 00:02:10,000
那我来说一下

55
00:02:10,000 --> 00:02:12,000
首先我们收到了一封邮件

56
00:02:12,000 --> 00:02:14,000
一位署名叫胡

57
00:02:14,000 --> 00:02:16,000
胡萨是吧

58
00:02:16,000 --> 00:02:16,000
这个字

59
00:02:16,000 --> 00:02:19,000
胡萨的一位听众给我们的反馈

60
00:02:19,000 --> 00:02:21,000
是纠正读音的这个老传统

61
00:02:21,000 --> 00:02:23,000
他说四位主播好

62
00:02:23,000 --> 00:02:24,000
再次小小纠正一下

63
00:02:24,000 --> 00:02:26,000
曲线的曲念曲

64
00:02:26,000 --> 00:02:28,000
歌曲的曲念曲

65
00:02:28,000 --> 00:02:29,000
好吧

66
00:02:29,000 --> 00:02:29,000
为什么

67
00:02:29,000 --> 00:02:30,000
好吧

68
00:02:30,000 --> 00:02:32,000
别问为什么

69
00:02:32,000 --> 00:02:34,000
就是这样

70
00:02:34,000 --> 00:02:35,000
多音字就是这样

71
00:02:35,000 --> 00:02:35,000
OK

72
00:02:35,000 --> 00:02:36,000
我们明白了

73
00:02:36,000 --> 00:02:38,000
曲是 curve

74
00:02:38,000 --> 00:02:40,000
然后曲是 melody

75
00:02:40,000 --> 00:02:40,000
对

76
00:02:40,000 --> 00:02:41,000
啊

77
00:02:41,000 --> 00:02:42,000
song

78
00:02:42,000 --> 00:02:45,000
好吧

79
00:02:45,000 --> 00:02:46,000
这可能跟以前什么

80
00:02:46,000 --> 00:02:47,000
一个是动词

81
00:02:47,000 --> 00:02:49,000
一个是形容词有关系

82
00:02:49,000 --> 00:02:49,000
或者

83
00:02:49,000 --> 00:02:49,000
对

84
00:02:49,000 --> 00:02:51,000
一个是名词

85
00:02:51,000 --> 00:02:52,000
一个是名词

86
00:02:52,000 --> 00:02:53,000
一个是形容词

87
00:02:53,000 --> 00:02:53,000
好像不行

88
00:02:53,000 --> 00:02:55,000
曲线是从

89
00:02:55,000 --> 00:02:57,000
九曲十八弯的那个曲来的

90
00:02:57,000 --> 00:02:57,000
对吧

91
00:02:57,000 --> 00:02:58,000
就是拐弯的意思

92
00:02:58,000 --> 00:02:59,000
对吧

93
00:02:59,000 --> 00:02:59,000
对

94
00:02:59,000 --> 00:03:01,000
啊

95
00:03:01,000 --> 00:03:02,000
曲是

96
00:03:02,000 --> 00:03:04,000
曲是歌曲的曲

97
00:03:04,000 --> 00:03:05,000
对啊

98
00:03:05,000 --> 00:03:07,000
所以刚才你又念错了

99
00:03:07,000 --> 00:03:08,000
是曲线吗

100
00:03:08,000 --> 00:03:10,000
九曲十八弯

101
00:03:10,000 --> 00:03:10,000
对对对

102
00:03:10,000 --> 00:03:11,000
对

103
00:03:11,000 --> 00:03:13,000
我念的是九曲十八弯

104
00:03:13,000 --> 00:03:13,000
对对对

105
00:03:13,000 --> 00:03:14,000
你是变成那个曲吗

106
00:03:14,000 --> 00:03:16,000
勾曲那个曲了

107
00:03:16,000 --> 00:03:18,000
这个字

108
00:03:18,000 --> 00:03:19,000
这个字本意是指什么

109
00:03:19,000 --> 00:03:21,000
这个字本来指的是

110
00:03:21,000 --> 00:03:23,000
是弯曲还是歌曲呢

111
00:03:23,000 --> 00:03:26,000
本意应该是弯曲

112
00:03:26,000 --> 00:03:29,000
然后歌曲是隐身意

113
00:03:29,000 --> 00:03:30,000
指式字

114
00:03:30,000 --> 00:03:31,000
一开始是指一个弯

115
00:03:31,000 --> 00:03:36,000
一开始指一个弯折了的事物

116
00:03:36,000 --> 00:03:37,000
对啊

117
00:03:37,000 --> 00:03:40,000
所以还是弯是弯曲是他的本

118
00:03:40,000 --> 00:03:41,000
这个词源本意

119
00:03:41,000 --> 00:03:43,000
OK

120
00:03:43,000 --> 00:03:44,000
所以音乐是隐身意

121
00:03:44,000 --> 00:03:47,000
所以他还有一个意思

122
00:03:47,000 --> 00:03:49,000
就是我们都有用过的嘛

123
00:03:49,000 --> 00:03:49,000
就是你们

124
00:03:49,000 --> 00:03:50,000
在你们猜一下

125
00:03:50,000 --> 00:03:52,000
用这个用途的时候念哪个音

126
00:03:52,000 --> 00:03:54,000
就是用那个发酵做酒

127
00:03:54,000 --> 00:03:55,000
曲吧

128
00:03:55,000 --> 00:03:56,000
那是另一个字

129
00:03:56,000 --> 00:03:59,000
那是另外一个词讲话来的吧

130
00:03:59,000 --> 00:04:00,000
对

131
00:04:00,000 --> 00:04:02,000
但那是另一个字

132
00:04:02,000 --> 00:04:02,000
就繁体

133
00:04:02,000 --> 00:04:04,000
它是有个卖字的旁的吧

134
00:04:04,000 --> 00:04:04,000
对对对

135
00:04:04,000 --> 00:04:05,000
那其实是另一个字

136
00:04:05,000 --> 00:04:06,000
那个其实念曲

137
00:04:06,000 --> 00:04:07,000
念曲

138
00:04:07,000 --> 00:04:07,000
医生

139
00:04:07,000 --> 00:04:08,000
OK

140
00:04:08,000 --> 00:04:09,000
医生

141
00:04:09,000 --> 00:04:10,000
第一声

142
00:04:10,000 --> 00:04:10,000
对

143
00:04:10,000 --> 00:04:11,000
对第一声曲

144
00:04:11,000 --> 00:04:12,000
对

145
00:04:12,000 --> 00:04:13,000
九曲

146
00:04:13,000 --> 00:04:15,000
洋河大曲

147
00:04:15,000 --> 00:04:15,000
广告

148
00:04:15,000 --> 00:04:18,000
没说起

149
00:04:18,000 --> 00:04:19,000
一会儿你 B 掉

150
00:04:19,000 --> 00:04:20,000
好吧

151
00:04:20,000 --> 00:04:22,000
然后还有一个

152
00:04:22,000 --> 00:04:23,000
曲

153
00:04:23,000 --> 00:04:25,000
是另外一个字

154
00:04:25,000 --> 00:04:26,000
是麦字旁

155
00:04:26,000 --> 00:04:27,000
一个菊花的菊

156
00:04:27,000 --> 00:04:28,000
不要那个草字头

157
00:04:28,000 --> 00:04:31,000
那也是

158
00:04:31,000 --> 00:04:32,000
那也是那个

159
00:04:32,000 --> 00:04:34,000
就是酵母嘛

160
00:04:34,000 --> 00:04:35,000
对对对

161
00:04:35,000 --> 00:04:35,000
就这个是

162
00:04:35,000 --> 00:04:37,000
这个是这个曲

163
00:04:37,000 --> 00:04:39,000
就九曲这个曲的一体字吧

164
00:04:39,000 --> 00:04:39,000
好像是

165
00:04:39,000 --> 00:04:41,000
没有

166
00:04:41,000 --> 00:04:42,000
所以你现在说的

167
00:04:42,000 --> 00:04:42,000
就是说

168
00:04:42,000 --> 00:04:44,000
其实原来繁体字是三个字

169
00:04:44,000 --> 00:04:45,000
然后简化

170
00:04:45,000 --> 00:04:46,000
就变成一个字而已

171
00:04:46,000 --> 00:04:48,000
不

172
00:04:48,000 --> 00:04:50,000
那个是用九曲的那个曲

173
00:04:50,000 --> 00:04:51,000
是简化成了这个东西

174
00:04:51,000 --> 00:04:55,000
但是前面那个弯曲和这个小犬

175
00:04:55,000 --> 00:04:57,000
他们好像原始就这样吧

176
00:04:57,000 --> 00:04:59,000
对对对

177
00:04:59,000 --> 00:05:00,000
他们原来是两个字嘛

178
00:05:00,000 --> 00:05:01,000
没错没错

179
00:05:01,000 --> 00:05:03,000
现在被那个简并成了一个字

180
00:05:03,000 --> 00:05:05,000
这个还可以是一个姓

181
00:05:05,000 --> 00:05:06,000
好

182
00:05:06,000 --> 00:05:07,000
再考你们了

183
00:05:07,000 --> 00:05:08,000
用作姓的时候

184
00:05:08,000 --> 00:05:08,000
他念几声

185
00:05:08,000 --> 00:05:09,000
曲

186
00:05:09,000 --> 00:05:10,000
对

187
00:05:10,000 --> 00:05:12,000
应该是念医生嘛

188
00:05:12,000 --> 00:05:12,000
曲

189
00:05:12,000 --> 00:05:13,000
曲阳嘛

190
00:05:13,000 --> 00:05:13,000
就是

191
00:05:13,000 --> 00:05:16,000
我记得那个下午江湖里面

192
00:05:16,000 --> 00:05:17,000
某派掌门人

193
00:05:17,000 --> 00:05:18,000
是不是就姓曲

194
00:05:18,000 --> 00:05:18,000
对对

195
00:05:18,000 --> 00:05:20,000
用作姓是念医生的

196
00:05:20,000 --> 00:05:21,000
对

197
00:05:21,000 --> 00:05:22,000
好吧

198
00:05:22,000 --> 00:05:23,000
这个中文真是坑爹啊

199
00:05:23,000 --> 00:05:25,000
我问你们一个事

200
00:05:25,000 --> 00:05:26,000
那天那天那天我问到

201
00:05:26,000 --> 00:05:27,000
那天我想到的

202
00:05:27,000 --> 00:05:30,000
你说手机和掌机有什么区别

203
00:05:30,000 --> 00:05:33,000
掌机

204
00:05:33,000 --> 00:05:36,000
掌上游戏机的

205
00:05:36,000 --> 00:05:36,000
对

206
00:05:36,000 --> 00:05:37,000
但是手机呢

207
00:05:37,000 --> 00:05:40,000
手机是指

208
00:05:40,000 --> 00:05:43,000
手上电话机

209
00:05:43,000 --> 00:05:44,000
手持电话机

210
00:05:44,000 --> 00:05:45,000
然后我问你

211
00:05:45,000 --> 00:05:47,000
这是一个没有这个

212
00:05:47,000 --> 00:05:47,000
这个

213
00:05:47,000 --> 00:05:50,000
context 基础的外国人来学中文

214
00:05:50,000 --> 00:05:52,000
你说他怎么区分这两个东西呢

215
00:05:52,000 --> 00:05:56,000
但是英文里面有 handset 这个词

216
00:05:56,000 --> 00:05:56,000
有

217
00:05:56,000 --> 00:05:58,000
德语里面手机是 handy 嘛

218
00:05:58,000 --> 00:05:59,000
对吧

219
00:05:59,000 --> 00:05:59,000
对

220
00:05:59,000 --> 00:06:00,000
然后那个

221
00:06:00,000 --> 00:06:03,000
最早的那个 pd 是 palm

222
00:06:03,000 --> 00:06:04,000
对吧

223
00:06:04,000 --> 00:06:04,000
对

224
00:06:04,000 --> 00:06:05,000
palm 就是掌

225
00:06:05,000 --> 00:06:06,000
掌机

226
00:06:06,000 --> 00:06:07,000
掌机

227
00:06:07,000 --> 00:06:09,000
怎么说什么时候变成游戏机了

228
00:06:09,000 --> 00:06:10,000
掌上游戏机

229
00:06:10,000 --> 00:06:11,000
对吧

230
00:06:11,000 --> 00:06:11,000
对吧

231
00:06:11,000 --> 00:06:11,000
不是变来

232
00:06:11,000 --> 00:06:13,000
这是个缩写吗

233
00:06:13,000 --> 00:06:14,000
这是个简称吗

234
00:06:14,000 --> 00:06:15,000
那手机呢

235
00:06:15,000 --> 00:06:17,000
手持手持电话机

236
00:06:17,000 --> 00:06:18,000
我刚才不是说了

237
00:06:18,000 --> 00:06:19,000
原来是这么来的

238
00:06:19,000 --> 00:06:21,000
那手持和掌持有什么区别

239
00:06:21,000 --> 00:06:23,000
掌上和手持

240
00:06:23,000 --> 00:06:24,000
我就说没有

241
00:06:24,000 --> 00:06:26,000
就是手持和掌上有什么区别

242
00:06:26,000 --> 00:06:28,000
其实没有太大的区别

243
00:06:28,000 --> 00:06:31,000
因为这只是一个语用的习惯

244
00:06:31,000 --> 00:06:33,000
至少在我看完

245
00:06:33,000 --> 00:06:33,000
就是嘛

246
00:06:33,000 --> 00:06:35,000
所以说我说很坑嘛

247
00:06:35,000 --> 00:06:36,000
就是没有任何理由

248
00:06:36,000 --> 00:06:37,000
因为他

249
00:06:37,000 --> 00:06:39,000
你说手上拿个电话和手上拿个游戏机

250
00:06:39,000 --> 00:06:40,000
有本质区别吗

251
00:06:40,000 --> 00:06:41,000
掌上电话

252
00:06:41,000 --> 00:06:42,000
这个说法好想

253
00:06:42,000 --> 00:06:43,000
对啊

254
00:06:43,000 --> 00:06:46,000
但其实这个问题在英文里也会出现

255
00:06:46,000 --> 00:06:48,000
比如给你一个手字母缩写的词

256
00:06:48,000 --> 00:06:50,000
他有可能代表了多个词

257
00:06:50,000 --> 00:06:52,000
必须有一个语境才可以去解读它

258
00:06:52,000 --> 00:06:53,000
对对对对

259
00:06:53,000 --> 00:06:54,000
我就是说这个

260
00:06:54,000 --> 00:06:57,000
就是中文有时候就是得靠这种 context 去积累

261
00:06:57,000 --> 00:06:57,000
没有

262
00:06:57,000 --> 00:06:58,000
没有什么

263
00:06:58,000 --> 00:07:01,000
任何语言都一样

264
00:07:01,000 --> 00:07:02,000
给你一个 cell

265
00:07:02,000 --> 00:07:03,000
你没有上下来

266
00:07:03,000 --> 00:07:05,000
你怎么知道他指的是求是还是

267
00:07:05,000 --> 00:07:05,000
还是

268
00:07:05,000 --> 00:07:07,000
细胞

269
00:07:07,000 --> 00:07:08,000
还是那个

270
00:07:08,000 --> 00:07:11,000
不是通讯的那个通讯

271
00:07:11,000 --> 00:07:11,000
通讯

272
00:07:11,000 --> 00:07:13,000
对吧

273
00:07:13,000 --> 00:07:15,000
但这两个是同源的

274
00:07:15,000 --> 00:07:17,000
而且在我们今天的这个话题下

275
00:07:17,000 --> 00:07:21,000
cell 好像在中文里还被翻译成为是吧

276
00:07:21,000 --> 00:07:24,000
比如那个趋味码的为其实指的就是 cell

277
00:07:24,000 --> 00:07:25,000
是这样的吗

278
00:07:25,000 --> 00:07:28,000
对趋味码就是 rollcell 的意思

279
00:07:28,000 --> 00:07:29,000
OK

280
00:07:29,000 --> 00:07:31,000
Good to know

281
00:07:31,000 --> 00:07:40,000
第二个是在 TIB 的这个帖子下面给我们留言

282
00:07:40,000 --> 00:07:41,000
其实有两位给我们留言

283
00:07:41,000 --> 00:07:46,000
一位说有关这位的署名叫 Johnny Young

284
00:07:46,000 --> 00:07:48,000
他应该是一位韩国人

285
00:07:48,000 --> 00:07:50,000
这也是我们听众嘛

286
00:07:50,000 --> 00:07:51,000
对

287
00:07:51,000 --> 00:07:54,000
但看他这个信的写法有点像韩国

288
00:07:54,000 --> 00:07:54,000
是吧

289
00:07:54,000 --> 00:07:56,000
你们这么国际话

290
00:07:56,000 --> 00:07:56,000
信

291
00:07:56,000 --> 00:08:04,000
他说有关键盘键位和键位的映射的移动设备

292
00:08:04,000 --> 00:08:06,000
貌似又是一般风景了吧

293
00:08:06,000 --> 00:08:09,000
各国的九键布局之类的

294
00:08:09,000 --> 00:08:10,000
他的意思就是说

295
00:08:10,000 --> 00:08:13,000
我们那期说到键盘和键位映射的时候

296
00:08:13,000 --> 00:08:16,000
没有提到这个九键布局的键盘

297
00:08:16,000 --> 00:08:18,000
九键是那个九宫阁那种吗

298
00:08:18,000 --> 00:08:18,000
对

299
00:08:18,000 --> 00:08:20,000
应该是吧

300
00:08:20,000 --> 00:08:21,000
就 Tenkey 是那个叫什么

301
00:08:21,000 --> 00:08:23,000
在英文里面叫 Tenkey 吧

302
00:08:23,000 --> 00:08:25,000
是叫 Tenkey 吗

303
00:08:25,000 --> 00:08:25,000
对

304
00:08:25,000 --> 00:08:26,000
实键

305
00:08:26,000 --> 00:08:27,000
这也叫 Tenkey

306
00:08:27,000 --> 00:08:29,000
为什么是 Tenkey 呢

307
00:08:29,000 --> 00:08:31,000
因为 1234567890

308
00:08:31,000 --> 00:08:31,000
就是 10 个键吧

309
00:08:31,000 --> 00:08:32,000
里面有 0

310
00:08:32,000 --> 00:08:33,000
为什么叫九宫阁

311
00:08:33,000 --> 00:08:36,000
他是一个

312
00:08:36,000 --> 00:08:39,000
他是一个一般来说是一个三乘四的矩阵

313
00:08:39,000 --> 00:08:40,000
但是

314
00:08:40,000 --> 00:08:41,000
对啊

315
00:08:41,000 --> 00:08:42,000
应该是 12 个键吧

316
00:08:42,000 --> 00:08:46,000
在那个就英文版的那个 iOS 里面

317
00:08:46,000 --> 00:08:48,000
你加那个九宫阁键盘

318
00:08:48,000 --> 00:08:49,000
他英文也是叫拼音

319
00:08:49,000 --> 00:08:50,000
然后 10

320
00:08:50,000 --> 00:08:50,000
就是 Tenkey

321
00:08:50,000 --> 00:08:51,000
10 个键

322
00:08:51,000 --> 00:08:52,000
那个

323
00:08:52,000 --> 00:08:55,000
没 sense

324
00:08:55,000 --> 00:08:57,000
所以其实这里有一个问题是这样的

325
00:08:57,000 --> 00:09:01,000
我一直很不确定这种触屏的这种屏幕上的输入法

326
00:09:01,000 --> 00:09:03,000
他有那个就是

327
00:09:03,000 --> 00:09:04,000
叫什么

328
00:09:04,000 --> 00:09:06,000
那个 keycode 这概念吗

329
00:09:06,000 --> 00:09:07,000
应该没有了吧

330
00:09:07,000 --> 00:09:08,000
触屏上面应该没有吧

331
00:09:08,000 --> 00:09:09,000
但是以前

332
00:09:09,000 --> 00:09:10,000
就是电话机上是什么

333
00:09:10,000 --> 00:09:11,000
怎么实现的

334
00:09:11,000 --> 00:09:13,000
电话机是模拟信号

335
00:09:13,000 --> 00:09:16,000
电话机以前是靠声音长短实现的

336
00:09:16,000 --> 00:09:16,000
对

337
00:09:16,000 --> 00:09:17,000
对

338
00:09:17,000 --> 00:09:19,000
做了一个 modern 那种方式

339
00:09:19,000 --> 00:09:20,000
对

340
00:09:20,000 --> 00:09:24,000
所以其实我们可以认为这个九键布局的这个键盘

341
00:09:24,000 --> 00:09:27,000
它相当于是含了一层这个输入法

342
00:09:27,000 --> 00:09:29,000
如果它不只是输入数字的话

343
00:09:29,000 --> 00:09:31,000
可以这么理解

344
00:09:31,000 --> 00:09:31,000
对

345
00:09:31,000 --> 00:09:32,000
而且那个还挺复杂的

346
00:09:32,000 --> 00:09:35,000
他比如说那个那个 10 key 上面不是每个键

347
00:09:35,000 --> 00:09:36,000
它有三个字母吗

348
00:09:36,000 --> 00:09:37,000
ABC

349
00:09:37,000 --> 00:09:37,000
A

350
00:09:37,000 --> 00:09:38,000
D

351
00:09:38,000 --> 00:09:38,000
E

352
00:09:38,000 --> 00:09:38,000
F

353
00:09:38,000 --> 00:09:38,000
这种

354
00:09:38,000 --> 00:09:41,000
然后就是在欧美生活的人很多都知道

355
00:09:41,000 --> 00:09:43,000
就是他们会那个电话号码

356
00:09:43,000 --> 00:09:44,000
他不会写

357
00:09:44,000 --> 00:09:45,000
比如中国都是号的时候

358
00:09:45,000 --> 00:09:48,000
8888666 这种什么比较好记的数字

359
00:09:48,000 --> 00:09:50,000
但他们会很取巧的

360
00:09:50,000 --> 00:09:51,000
直接把那个转写成

361
00:09:51,000 --> 00:09:53,000
他需要的那个字母的组合

362
00:09:53,000 --> 00:09:57,000
比如说那个苹果的那个 800 电话

363
00:09:57,000 --> 00:09:58,000
他写的是 800

364
00:09:58,000 --> 00:09:59,000
然后 A

365
00:09:59,000 --> 00:09:59,000
Apple

366
00:09:59,000 --> 00:10:00,000
对吧

367
00:10:00,000 --> 00:10:01,000
对

368
00:10:01,000 --> 00:10:01,000
然后你就

369
00:10:01,000 --> 00:10:03,000
你就照着那个 10 key 上面

370
00:10:03,000 --> 00:10:04,000
比如你拿出你的那个

371
00:10:04,000 --> 00:10:05,000
那个手机

372
00:10:05,000 --> 00:10:08,000
然后你找那个不耗那个键盘

373
00:10:08,000 --> 00:10:09,000
你看他每个键

374
00:10:09,000 --> 00:10:10,000
就是下面

375
00:10:10,000 --> 00:10:10,000
A 是 2

376
00:10:10,000 --> 00:10:11,000
对

377
00:10:11,000 --> 00:10:11,000
你就按 A

378
00:10:11,000 --> 00:10:12,000
然后就是 2

379
00:10:12,000 --> 00:10:13,000
P 是 7

380
00:10:13,000 --> 00:10:14,000
按两下

381
00:10:14,000 --> 00:10:15,000
就 277

382
00:10:15,000 --> 00:10:18,000
27753

383
00:10:18,000 --> 00:10:18,000
对

384
00:10:18,000 --> 00:10:18,000
对

385
00:10:18,000 --> 00:10:19,000
就打到是

386
00:10:19,000 --> 00:10:21,000
比如说就是苹果的一个客服电话

387
00:10:21,000 --> 00:10:24,000
就很多厂商就会去做这么一种转化

388
00:10:24,000 --> 00:10:27,000
但好像我中国从来没有见过这么用过

389
00:10:27,000 --> 00:10:31,000
毕竟不是一个拉丁字母为基础的过程

390
00:10:31,000 --> 00:10:32,000
但这个

391
00:10:32,000 --> 00:10:34,000
其实我觉得这个还挺有用的

392
00:10:34,000 --> 00:10:35,000
就比较好记

393
00:10:35,000 --> 00:10:36,000
就是

394
00:10:36,000 --> 00:10:38,000
你看如果像中国记个电话号码

395
00:10:38,000 --> 00:10:40,000
就只能死记音被号码

396
00:10:40,000 --> 00:10:41,000
或者是用这个

397
00:10:41,000 --> 00:10:41,000
呃

398
00:10:41,000 --> 00:10:42,000
谐音嘛

399
00:10:42,000 --> 00:10:44,000
所以各种连号啊

400
00:10:44,000 --> 00:10:45,000
8

401
00:10:45,000 --> 00:10:46,000
6 啊

402
00:10:46,000 --> 00:10:46,000
0 啊

403
00:10:46,000 --> 00:10:46,000
什么的

404
00:10:46,000 --> 00:10:47,000
就大家特别喜好

405
00:10:47,000 --> 00:10:48,000
我觉得一个问题

406
00:10:48,000 --> 00:10:49,000
一个一个很大的问题

407
00:10:49,000 --> 00:10:50,000
就是中文的那个

408
00:10:50,000 --> 00:10:51,000
中文中

409
00:10:51,000 --> 00:10:54,000
汉语记数字太方便了

410
00:10:54,000 --> 00:10:55,000
记数字太方便了

411
00:10:55,000 --> 00:10:55,000
对

412
00:10:55,000 --> 00:10:57,000
就全面都是单音节字的

413
00:10:57,000 --> 00:10:58,000
对

414
00:10:58,000 --> 00:10:59,000
而且就是我在

415
00:10:59,000 --> 00:11:01,000
因为你在欧洲一般都会隔血嘛

416
00:11:01,000 --> 00:11:03,000
法国会两位两位隔血

417
00:11:03,000 --> 00:11:04,000
我又想到

418
00:11:04,000 --> 00:11:05,000
发黑马哥

419
00:11:05,000 --> 00:11:06,000
又要跟法国

420
00:11:06,000 --> 00:11:11,000
但是德语里面也是各位数先念的是吧

421
00:11:11,000 --> 00:11:12,000
如果是几十几个方便

422
00:11:12,000 --> 00:11:16,000
我一定念电话一般不会那么复杂

423
00:11:16,000 --> 00:11:18,000
就电话看情况嘛

424
00:11:18,000 --> 00:11:20,000
但是当然有些人也是两位两位的

425
00:11:20,000 --> 00:11:21,000
记数的话

426
00:11:21,000 --> 00:11:23,000
就德语跟英文是比较相近的吧

427
00:11:23,000 --> 00:11:27,000
就除了最末两位比较坑爹之外

428
00:11:27,000 --> 00:11:27,000
其他还好

429
00:11:27,000 --> 00:11:27,000
不要

430
00:11:27,000 --> 00:11:30,000
德文里面那就是最末两位就是

431
00:11:30,000 --> 00:11:33,000
他需要先念歌为数再念十位数是吧

432
00:11:33,000 --> 00:11:34,000
英文也是一样的吧

433
00:11:34,000 --> 00:11:36,000
那英文是 64

434
00:11:36,000 --> 00:11:38,000
比如说 64 嘛

435
00:11:38,000 --> 00:11:39,000
64 嘛

436
00:11:39,000 --> 00:11:40,000
但是德文

437
00:11:40,000 --> 00:11:41,000
德文是倒过来的吧

438
00:11:41,000 --> 00:11:43,000
德文是 4 和 60

439
00:11:43,000 --> 00:11:44,000
对啊

440
00:11:44,000 --> 00:11:45,000
德文是倒过来的

441
00:11:45,000 --> 00:11:46,000
460

442
00:11:46,000 --> 00:11:46,000
你说这个意思

443
00:11:46,000 --> 00:11:47,000
对

444
00:11:47,000 --> 00:11:49,000
德文是倒过来的

445
00:11:49,000 --> 00:11:51,000
就只有最后两位不一样的

446
00:11:51,000 --> 00:11:54,000
但其实就是有个念法的问题

447
00:11:54,000 --> 00:11:56,000
比如说中文里面会说三个五

448
00:11:56,000 --> 00:11:58,000
然后英文里面会说 triple five

449
00:11:58,000 --> 00:11:59,000
对吧

450
00:11:59,000 --> 00:12:00,000
然后说两个八

451
00:12:00,000 --> 00:12:01,000
你会说 double eight

452
00:12:01,000 --> 00:12:04,000
然后如果比较长的数字的话

453
00:12:04,000 --> 00:12:05,000
其实一般都是一组一组念的

454
00:12:05,000 --> 00:12:07,000
就是两位数两位数的念吧

455
00:12:07,000 --> 00:12:08,000
英文里面

456
00:12:08,000 --> 00:12:11,000
法国人要说四个二十加八

457
00:12:11,000 --> 00:12:12,000
然后脑子里面全乱了

458
00:12:12,000 --> 00:12:14,000
一团降伏

459
00:12:14,000 --> 00:12:17,000
还得先把那个电话号码拆成一个数

460
00:12:17,000 --> 00:12:18,000
然后这个叫什么来的

461
00:12:18,000 --> 00:12:20,000
那个数论叫什么来的

462
00:12:20,000 --> 00:12:24,000
就是每一个自然数可以拆成这么几个数

463
00:12:24,000 --> 00:12:27,000
就是那个质数的那种什么 power 的组合

464
00:12:27,000 --> 00:12:32,000
叫 fundamental theorem of arithmetic

465
00:12:32,000 --> 00:12:36,000
中文叫算术基本定理

466
00:12:36,000 --> 00:12:39,000
算术基本定理

467
00:12:39,000 --> 00:12:40,000
算术基本定理

468
00:12:40,000 --> 00:12:40,000
这就是说

469
00:12:40,000 --> 00:12:44,000
每个大英语一的自然数均可以写为支数的基

470
00:12:44,000 --> 00:12:46,000
而且这些因子

471
00:12:46,000 --> 00:12:47,000
就他有一个唯一的表示

472
00:12:47,000 --> 00:12:50,000
按照大小排列之后只有一种表示

473
00:12:50,000 --> 00:12:52,000
这跟后面那个我们要讲的那个 unicode

474
00:12:52,000 --> 00:12:54,000
这不就是质因数分解吗

475
00:12:54,000 --> 00:12:55,000
还不一样

476
00:12:55,000 --> 00:12:56,000
还不一样

477
00:12:56,000 --> 00:12:56,000
不一样

478
00:12:56,000 --> 00:12:57,000
他讲的是另外一个事

479
00:12:57,000 --> 00:13:00,000
就是说其实这个跟我们后面要讲的那个 unicode

480
00:13:00,000 --> 00:13:03,000
那个 normalization 有点异曲同工的意思

481
00:13:03,000 --> 00:13:04,000
OK

482
00:13:04,000 --> 00:13:05,000
对

483
00:13:05,000 --> 00:13:07,000
所以你要先

484
00:13:07,000 --> 00:13:08,000
首先是正整数

485
00:13:08,000 --> 00:13:11,000
而且你要先要断定什么是质数

486
00:13:11,000 --> 00:13:12,000
对对对

487
00:13:12,000 --> 00:13:14,000
然后他有一种唯一的分解法

488
00:13:14,000 --> 00:13:15,000
对

489
00:13:15,000 --> 00:13:18,000
然后这个就是算术基本定理

490
00:13:18,000 --> 00:13:21,000
我们为什么从键盘扯到这边

491
00:13:21,000 --> 00:13:22,000
对为什么扯到这边

492
00:13:22,000 --> 00:13:24,000
说法国人拆那个数

493
00:13:24,000 --> 00:13:26,000
好吧

494
00:13:26,000 --> 00:13:30,000
各国念这个电话号码的

495
00:13:30,000 --> 00:13:33,000
习惯应该是有一定的规律的

496
00:13:33,000 --> 00:13:38,000
我记得 wikipedia 还有一个页面是专门汇总各国的这个习惯

497
00:13:38,000 --> 00:13:43,000
所以是你们念中国的手机号是先念就是比如说 344

498
00:13:43,000 --> 00:13:45,000
一般是 344 这样的

499
00:13:45,000 --> 00:13:45,000
OK

500
00:13:45,000 --> 00:13:46,000
不不看那个吧

501
00:13:46,000 --> 00:13:47,000
很多人是 335 是吧

502
00:13:47,000 --> 00:13:49,000
看那个看那个就是叫什么

503
00:13:49,000 --> 00:13:51,000
就区号的区区分吗

504
00:13:51,000 --> 00:13:54,000
比如说中国的手机号码都是同意都是 11 位吗

505
00:13:54,000 --> 00:13:55,000
都是 344 吗

506
00:13:55,000 --> 00:13:56,000
嗯

507
00:13:56,000 --> 00:13:58,000
然后那个坐机号码就不一定了

508
00:13:58,000 --> 00:14:00,000
因为有些地区是最开始是

509
00:14:00,000 --> 00:14:02,000
这还有历史有 5 位 6 位 7 位 8 位的吗

510
00:14:02,000 --> 00:14:03,000
对

511
00:14:03,000 --> 00:14:05,000
现在基本都是 8 位的

512
00:14:05,000 --> 00:14:06,000
8 位就是 44

513
00:14:06,000 --> 00:14:07,000
大城市一般都是 8 位

514
00:14:07,000 --> 00:14:07,000
44 吗

515
00:14:07,000 --> 00:14:08,000
像小城市

516
00:14:08,000 --> 00:14:12,000
而且主要是还有他有那个就是长途电话的区号吗

517
00:14:12,000 --> 00:14:15,000
区号理论上讲就是三位或者四位

518
00:14:15,000 --> 00:14:16,000
中国是三位或者四位的

519
00:14:16,000 --> 00:14:17,000
嗯

520
00:14:17,000 --> 00:14:17,000
对

521
00:14:17,000 --> 00:14:19,000
日本是有两位的

522
00:14:19,000 --> 00:14:20,000
因为小切

523
00:14:20,000 --> 00:14:23,000
7 号其实是那个两位或三位

524
00:14:23,000 --> 00:14:24,000
然后补一个 0 的

525
00:14:24,000 --> 00:14:26,000
就国内拨是补 0 吗

526
00:14:26,000 --> 00:14:26,000
对

527
00:14:26,000 --> 00:14:29,000
要跟那个国际长途分开吗

528
00:14:29,000 --> 00:14:30,000
对

529
00:14:30,000 --> 00:14:32,000
这个很多人不知道这个事情

530
00:14:32,000 --> 00:14:33,000
就是怎么拨那个国际长途

531
00:14:33,000 --> 00:14:35,000
就为什么是区号都是 0

532
00:14:35,000 --> 00:14:36,000
然后一个什么

533
00:14:36,000 --> 00:14:37,000
要要要对

534
00:14:37,000 --> 00:14:38,000
要省掉那个 0

535
00:14:38,000 --> 00:14:39,000
对吧

536
00:14:39,000 --> 00:14:39,000
不是

537
00:14:39,000 --> 00:14:41,000
有些国家是不省的

538
00:14:41,000 --> 00:14:42,000
不是不是中国

539
00:14:42,000 --> 00:14:42,000
对

540
00:14:42,000 --> 00:14:44,000
省不省是看那个电话规则

541
00:14:44,000 --> 00:14:45,000
不是这样的

542
00:14:45,000 --> 00:14:46,000
中国是这样的

543
00:14:46,000 --> 00:14:47,000
就说如果中国你拨 0

544
00:14:47,000 --> 00:14:50,000
然后你再加一个数字的话

545
00:14:50,000 --> 00:14:52,000
首先如果你拨本

546
00:14:52,000 --> 00:14:53,000
你 local number

547
00:14:53,000 --> 00:14:54,000
就不需要拨区号的话

548
00:14:54,000 --> 00:14:55,000
肯定不会是 0 开头的

549
00:14:55,000 --> 00:14:56,000
对不对

550
00:14:56,000 --> 00:14:59,000
然后如果你要拨另外一个区的话

551
00:14:59,000 --> 00:15:01,000
你可能是 0 加一个非 0 数字开头的

552
00:15:01,000 --> 00:15:03,000
他就知道你再拨区号了

553
00:15:03,000 --> 00:15:03,000
对不对

554
00:15:03,000 --> 00:15:05,000
但是你拨 00 的话

555
00:15:05,000 --> 00:15:07,000
其实就是变成那个所谓的那个加号吗

556
00:15:07,000 --> 00:15:09,000
对

557
00:15:09,000 --> 00:15:11,000
就是国际的那个 prefix

558
00:15:11,000 --> 00:15:12,000
就他是这么来区分的

559
00:15:12,000 --> 00:15:12,000
对

560
00:15:12,000 --> 00:15:13,000
OK

561
00:15:13,000 --> 00:15:16,000
然后这个时候就牵涉到一个表达

562
00:15:16,000 --> 00:15:16,000
我会拨打的问题了

563
00:15:16,000 --> 00:15:18,000
就是说比如说我们中国会写

564
00:15:18,000 --> 00:15:19,000
假设比如说深圳是

565
00:15:19,000 --> 00:15:21,000
0755

566
00:15:21,000 --> 00:15:21,000
075

567
00:15:21,000 --> 00:15:21,000
对对对

568
00:15:21,000 --> 00:15:22,000
深圳是 0755

569
00:15:22,000 --> 00:15:22,000
对吧

570
00:15:22,000 --> 00:15:25,000
但是如果说你从外国打到深圳的话

571
00:15:25,000 --> 00:15:27,000
你是拨 0086

572
00:15:27,000 --> 00:15:29,000
86 是中国的那个国际区号代码

573
00:15:29,000 --> 00:15:31,000
然后这个时候你就不会要不会拨 075

574
00:15:31,000 --> 00:15:32,000
你只会拨 75

575
00:15:32,000 --> 00:15:35,000
因为前面 86 已经确定了你是这个中国

576
00:15:35,000 --> 00:15:38,000
然后你要在下面就跟着要拨区了嘛

577
00:15:38,000 --> 00:15:39,000
对吧

578
00:15:39,000 --> 00:15:41,000
所以你看很多人写的名片上的表达

579
00:15:41,000 --> 00:15:43,000
他会写加号 86

580
00:15:43,000 --> 00:15:44,000
然后 0

581
00:15:44,000 --> 00:15:44,000
括号

582
00:15:44,000 --> 00:15:47,000
括号表示 optional 是可选的嘛

583
00:15:47,000 --> 00:15:48,000
然后是 755

584
00:15:48,000 --> 00:15:49,000
后面再跟一个

585
00:15:49,000 --> 00:15:49,000
Wait a second

586
00:15:49,000 --> 00:15:51,000
你确定这个 0 是可选的吗

587
00:15:51,000 --> 00:15:54,000
就是我的理解是不是每个国家打这个

588
00:15:54,000 --> 00:15:57,000
就是不是从每个国家打外国的电话的时候

589
00:15:57,000 --> 00:15:58,000
这个 0 都是可以省略的

590
00:15:58,000 --> 00:15:59,000
中国是可选的

591
00:15:59,000 --> 00:16:00,000
没有

592
00:16:00,000 --> 00:16:01,000
绝大多数都是的

593
00:16:01,000 --> 00:16:02,000
就我的经验来讲的话

594
00:16:02,000 --> 00:16:04,000
只有意大利不行

595
00:16:04,000 --> 00:16:06,000
因为就是意大利他们本身那个号就是

596
00:16:06,000 --> 00:16:07,000
就是有一个 0

597
00:16:07,000 --> 00:16:08,000
所以那个 0 就不用省

598
00:16:08,000 --> 00:16:10,000
就是他的开头是 0

599
00:16:10,000 --> 00:16:11,000
有 0 开头的这个

600
00:16:11,000 --> 00:16:12,000
对

601
00:16:12,000 --> 00:16:12,000
对

602
00:16:12,000 --> 00:16:13,000
就是意大利这些

603
00:16:13,000 --> 00:16:14,000
OK

604
00:16:14,000 --> 00:16:16,000
这其实是有一份国际标准的

605
00:16:16,000 --> 00:16:18,000
就是国际有个叫 ITU 的

606
00:16:18,000 --> 00:16:20,000
跟通信有关的组织

607
00:16:20,000 --> 00:16:21,000
国际通信联盟

608
00:16:21,000 --> 00:16:23,000
他对这个电话号码的助记格式

609
00:16:23,000 --> 00:16:23,000
对

610
00:16:23,000 --> 00:16:25,000
他对这个电话号码的助记格式

611
00:16:25,000 --> 00:16:27,000
包括有些 0 是不是可以放在括号里

612
00:16:27,000 --> 00:16:29,000
就是可选的这个格式

613
00:16:29,000 --> 00:16:29,000
对对对

614
00:16:29,000 --> 00:16:31,000
首先他的书写是有一个规范的

615
00:16:31,000 --> 00:16:32,000
其次

616
00:16:32,000 --> 00:16:33,000
就这个书写对应的规范

617
00:16:33,000 --> 00:16:36,000
其实是跟各国的这个电话制式的

618
00:16:36,000 --> 00:16:38,000
有关的

619
00:16:38,000 --> 00:16:38,000
对对

620
00:16:38,000 --> 00:16:40,000
其实这个电话号码要不要加 0

621
00:16:40,000 --> 00:16:41,000
这个 0 可不可以省略

622
00:16:41,000 --> 00:16:44,000
以及他是不是可选的

623
00:16:44,000 --> 00:16:46,000
其实是跟那个模拟时代的

624
00:16:46,000 --> 00:16:47,000
这个通信的原理

625
00:16:47,000 --> 00:16:49,000
就那个叫什么存控机的那个东西

626
00:16:49,000 --> 00:16:49,000
是吧

627
00:16:49,000 --> 00:16:51,000
这应该是可以查证的

628
00:16:51,000 --> 00:16:51,000
只是

629
00:16:51,000 --> 00:16:54,000
我以前学的一些东西

630
00:16:54,000 --> 00:16:55,000
有点记得不太清楚

631
00:16:55,000 --> 00:16:56,000
对对

632
00:16:56,000 --> 00:16:58,000
这个时候要透露那个你的底牌了吗

633
00:16:58,000 --> 00:16:59,000
没有没有

634
00:16:59,000 --> 00:17:02,000
我们真语的专业

635
00:17:02,000 --> 00:17:04,000
其实是

636
00:17:04,000 --> 00:17:05,000
好吧

637
00:17:05,000 --> 00:17:08,000
其实那个这个跟通信比较相关

638
00:17:08,000 --> 00:17:09,000
但我的专业

639
00:17:09,000 --> 00:17:11,000
虽然有一些跟通信相关的东西

640
00:17:11,000 --> 00:17:12,000
但还有

641
00:17:12,000 --> 00:17:13,000
离得有一点远

642
00:17:13,000 --> 00:17:15,000
只是会顺带的学到一些

643
00:17:15,000 --> 00:17:16,000
听众朋友们

644
00:17:16,000 --> 00:17:18,000
我真正的告诉你们一个惊人的事实

645
00:17:18,000 --> 00:17:20,000
在座的四位主持里面

646
00:17:20,000 --> 00:17:20,000
竟然

647
00:17:20,000 --> 00:17:23,000
全部都是具有理工科背景的

648
00:17:23,000 --> 00:17:24,000
这很惊人吗

649
00:17:24,000 --> 00:17:26,000
这不是很正常吗

650
00:17:26,000 --> 00:17:28,000
我一直以为你们两个是文科生

651
00:17:28,000 --> 00:17:30,000
我可能太看不起他们了

652
00:17:30,000 --> 00:17:32,000
你不能因为他们两个是弹子唱的

653
00:17:32,000 --> 00:17:36,000
就看不起他们了

654
00:17:36,000 --> 00:17:38,000
不要看不起文科生

655
00:17:38,000 --> 00:17:38,000
不是

656
00:17:38,000 --> 00:17:39,000
这不是这个是一个

657
00:17:39,000 --> 00:17:41,000
这个是一个什么来的

658
00:17:41,000 --> 00:17:43,000
所谓这个什么物以类聚

659
00:17:43,000 --> 00:17:43,000
人以群分

660
00:17:43,000 --> 00:17:45,000
所以我们要搞这个什么大串联

661
00:17:45,000 --> 00:17:48,000
结果发现串来串去还是一伙人

662
00:17:48,000 --> 00:17:50,000
你对文科生有什么

663
00:17:50,000 --> 00:17:51,000
幻想是吧

664
00:17:51,000 --> 00:17:53,000
因为觉得特别文艺

665
00:17:53,000 --> 00:17:54,000
挺好的

666
00:17:54,000 --> 00:17:55,000
我就缺这个东西

667
00:17:55,000 --> 00:17:57,000
自然自唱不文艺

668
00:17:57,000 --> 00:17:58,000
Rex 是学什么的

669
00:17:58,000 --> 00:17:59,000
Rex 以前

670
00:17:59,000 --> 00:18:01,000
之前的年龄念了一个博士

671
00:18:01,000 --> 00:18:04,000
那个哲学的博士

672
00:18:04,000 --> 00:18:04,000
现在

673
00:18:04,000 --> 00:18:09,000
Rex 应该是我们这里比较偏社科类的吧

674
00:18:09,000 --> 00:18:10,000
Wait a second

675
00:18:10,000 --> 00:18:13,000
Rex 是念哲学硕士

676
00:18:13,000 --> 00:18:14,000
应该是

677
00:18:14,000 --> 00:18:15,000
之前他是本科学

678
00:18:15,000 --> 00:18:16,000
学经济的好像

679
00:18:16,000 --> 00:18:17,000
还好

680
00:18:17,000 --> 00:18:17,000
还好

681
00:18:17,000 --> 00:18:20,000
终于有一个非理工背景的人

682
00:18:20,000 --> 00:18:25,000
可是 Rex 不愿意上咱们的节目

683
00:18:25,000 --> 00:18:27,000
对啊

684
00:18:27,000 --> 00:18:28,000
Rex 好像都没有出现过

685
00:18:28,000 --> 00:18:28,000
怎么一回事

686
00:18:28,000 --> 00:18:29,000
对

687
00:18:29,000 --> 00:18:31,000
他连自弹自唱都没有上

688
00:18:31,000 --> 00:18:32,000
没错

689
00:18:32,000 --> 00:18:34,000
太不给面子了

690
00:18:34,000 --> 00:18:35,000
没关系

691
00:18:35,000 --> 00:18:36,000
我主编大人出场的话

692
00:18:36,000 --> 00:18:37,000
要一个隆重的仪式

693
00:18:37,000 --> 00:18:39,000
我已经给他安排好话题了

694
00:18:39,000 --> 00:18:41,000
请大家期待

695
00:18:41,000 --> 00:18:41,000
OK

696
00:18:41,000 --> 00:18:42,000
非常好

697
00:18:42,000 --> 00:18:45,000
好

698
00:18:45,000 --> 00:18:47,000
我们推进到最后一个听众反馈

699
00:18:47,000 --> 00:18:48,000
最后一个

700
00:18:48,000 --> 00:18:51,000
最后一个也是在 TIP 上

701
00:18:51,000 --> 00:18:52,000
给我们的留言

702
00:18:52,000 --> 00:18:54,000
他的 ID 是 link 0

703
00:18:54,000 --> 00:18:55,000
然后他说

704
00:18:55,000 --> 00:18:56,000
说到反斜杠

705
00:18:56,000 --> 00:18:57,000
我首先想到的是

706
00:18:57,000 --> 00:18:58,000
TAC

707
00:18:58,000 --> 00:19:00,000
我们上期其实提了一下 TAC

708
00:19:00,000 --> 00:19:01,000
但没有细讲

709
00:19:01,000 --> 00:19:05,000
TAC 在反斜杠里就是作为转移符吗

710
00:19:05,000 --> 00:19:05,000
还是什么

711
00:19:05,000 --> 00:19:08,000
反斜杠在 TAC 里作为转移符

712
00:19:08,000 --> 00:19:08,000
对没错

713
00:19:08,000 --> 00:19:12,000
就是以反斜杠开头的一个标志符

714
00:19:12,000 --> 00:19:17,000
然后后面可选用花过号方过号的一个 parameter

715
00:19:17,000 --> 00:19:21,000
在 TAC 里面还有一些什么希腊文字

716
00:19:21,000 --> 00:19:22,000
也都是用

717
00:19:22,000 --> 00:19:24,000
都是像转移符一样

718
00:19:24,000 --> 00:19:25,000
都用反斜杠开始用

719
00:19:25,000 --> 00:19:25,000
对

720
00:19:25,000 --> 00:19:27,000
说到这个反斜杠

721
00:19:27,000 --> 00:19:28,000
我上次终于见到有人

722
00:19:28,000 --> 00:19:30,000
真人在我现实生活中的一个朋友

723
00:19:30,000 --> 00:19:31,000
他用反斜杠表示

724
00:19:31,000 --> 00:19:34,000
或者就是 A 或者 B

725
00:19:34,000 --> 00:19:35,000
上海很多

726
00:19:35,000 --> 00:19:39,000
不是在现实生活中

727
00:19:39,000 --> 00:19:41,000
就是不是在魔幻都市里

728
00:19:41,000 --> 00:19:42,000
而是在

729
00:19:42,000 --> 00:19:48,000
上海人就这样被你抛离的现实生活

730
00:19:48,000 --> 00:19:52,000
对

731
00:19:52,000 --> 00:19:55,000
反正我还当时看来还是蛮吃惊的

732
00:19:55,000 --> 00:19:56,000
我都很想问说

733
00:19:56,000 --> 00:19:57,000
为什么要用这个

734
00:19:57,000 --> 00:19:58,000
不

735
00:19:58,000 --> 00:19:59,000
你还没用说清楚

736
00:19:59,000 --> 00:20:01,000
他在什么情况下用了这个

737
00:20:01,000 --> 00:20:03,000
就是他写两个选项

738
00:20:03,000 --> 00:20:04,000
我们说比如说

739
00:20:04,000 --> 00:20:07,000
就中文里面你会写 A 或者 B 的时候

740
00:20:07,000 --> 00:20:08,000
你会把他

741
00:20:08,000 --> 00:20:10,000
那种鞋杠把它表示选项

742
00:20:10,000 --> 00:20:11,000
他是在手写

743
00:20:11,000 --> 00:20:14,000
还是在打字的时候

744
00:20:14,000 --> 00:20:16,000
是那个打字

745
00:20:16,000 --> 00:20:17,000
对打字的时候

746
00:20:17,000 --> 00:20:19,000
而且他两种混用关键是

747
00:20:19,000 --> 00:20:20,000
所以他在他看来

748
00:20:20,000 --> 00:20:22,000
这个左滑右滑其实是一样

749
00:20:22,000 --> 00:20:24,000
就是逼死处女座

750
00:20:24,000 --> 00:20:25,000
但其实想一下

751
00:20:25,000 --> 00:20:26,000
好像也没什么区别

752
00:20:26,000 --> 00:20:27,000
就是左滑和右滑有什么区别

753
00:20:27,000 --> 00:20:28,000
确实没什么区别

754
00:20:28,000 --> 00:20:29,000
在座有处女座吗

755
00:20:29,000 --> 00:20:30,000
没有

756
00:20:30,000 --> 00:20:32,000
但是我不能农人这样

757
00:20:32,000 --> 00:20:35,000
尤其是在一篇文章里面

758
00:20:35,000 --> 00:20:36,000
就混用这个东西

759
00:20:36,000 --> 00:20:37,000
对

760
00:20:37,000 --> 00:20:39,000
他其实是个约定了

761
00:20:39,000 --> 00:20:41,000
就是你单纯从这个作用上来说

762
00:20:41,000 --> 00:20:42,000
你用左

763
00:20:42,000 --> 00:20:43,000
左斜和右斜

764
00:20:43,000 --> 00:20:45,000
都是能起到同样的作用

765
00:20:45,000 --> 00:20:46,000
那我问一个问题

766
00:20:46,000 --> 00:20:47,000
你说在那种

767
00:20:47,000 --> 00:20:49,000
阿拉伯文

768
00:20:49,000 --> 00:20:51,000
这种从右向左写文字里面

769
00:20:51,000 --> 00:20:51,000
他用什么

770
00:20:51,000 --> 00:20:52,000
阿拉伯文的逗号

771
00:20:52,000 --> 00:20:55,000
都是往右逗的

772
00:20:55,000 --> 00:20:56,000
你知道吗

773
00:20:56,000 --> 00:20:57,000
刚好做了个镜面对称

774
00:20:57,000 --> 00:20:57,000
对

775
00:20:57,000 --> 00:20:58,000
还有阿拉伯文的问号

776
00:20:58,000 --> 00:21:00,000
也是镜面对称的

777
00:21:00,000 --> 00:21:01,000
就是那样

778
00:21:01,000 --> 00:21:02,000
阿拉伯文

779
00:21:02,000 --> 00:21:03,000
你解释一下你们德国

780
00:21:03,000 --> 00:21:04,000
为什么前面那个引号

781
00:21:04,000 --> 00:21:05,000
要放在下面

782
00:21:05,000 --> 00:21:06,000
这就是德意志的传统

783
00:21:06,000 --> 00:21:09,000
就从那个哥特文字

784
00:21:09,000 --> 00:21:11,000
就是从那个哥特体的时代

785
00:21:11,000 --> 00:21:12,000
Black Letter 的时代

786
00:21:12,000 --> 00:21:14,000
那个引号就一直是在那

787
00:21:14,000 --> 00:21:16,000
就左下右上对吧

788
00:21:16,000 --> 00:21:16,000
应该是

789
00:21:16,000 --> 00:21:17,000
对

790
00:21:17,000 --> 00:21:19,000
就一开始是在左下

791
00:21:19,000 --> 00:21:21,000
而且那个引号引的方向

792
00:21:21,000 --> 00:21:21,000
也是反的

793
00:21:21,000 --> 00:21:23,000
然后中文的那个方

794
00:21:23,000 --> 00:21:25,000
括号是左上右下对吧

795
00:21:25,000 --> 00:21:26,000
这个比较 make sense

796
00:21:26,000 --> 00:21:27,000
中文竖排的时候

797
00:21:27,000 --> 00:21:30,000
那个就是一个符号

798
00:21:30,000 --> 00:21:31,000
也是应该从左上角开始写

799
00:21:31,000 --> 00:21:33,000
那所以写符号

800
00:21:33,000 --> 00:21:34,000
也应该在左上

801
00:21:34,000 --> 00:21:36,000
竖排是右上左下

802
00:21:36,000 --> 00:21:36,000
what

803
00:21:36,000 --> 00:21:38,000
对竖排是右上左下

804
00:21:38,000 --> 00:21:38,000
对

805
00:21:38,000 --> 00:21:40,000
为什么呢

806
00:21:40,000 --> 00:21:42,000
竖排右上左下的话

807
00:21:42,000 --> 00:21:43,000
符合就是笔顺

808
00:21:43,000 --> 00:21:45,000
如果你是左上的话

809
00:21:45,000 --> 00:21:47,000
就变成要运笔的话

810
00:21:47,000 --> 00:21:48,000
要写两笔是吧

811
00:21:48,000 --> 00:21:49,000
对对对

812
00:21:49,000 --> 00:21:51,000
你右上左下的话

813
00:21:51,000 --> 00:21:53,000
就符合书写的笔顺

814
00:21:53,000 --> 00:21:53,000
就是横折嘛

815
00:21:53,000 --> 00:21:55,000
就是横折和竖折

816
00:21:55,000 --> 00:21:57,000
make sense

817
00:21:57,000 --> 00:21:59,000
这也是假设是右利手的情况

818
00:21:59,000 --> 00:22:01,000
但是中文默认都是这样的

819
00:22:01,000 --> 00:22:04,000
左利手你也不可能从左下开始写一个

820
00:22:04,000 --> 00:22:05,000
挑

821
00:22:05,000 --> 00:22:07,000
然后右折嘛

822
00:22:07,000 --> 00:22:08,000
都很怪嘛

823
00:22:08,000 --> 00:22:09,000
就是

824
00:22:09,000 --> 00:22:10,000
中文的基本笔画是

825
00:22:10,000 --> 00:22:13,000
要从左往右从上到下嘛

826
00:22:13,000 --> 00:22:14,000
那比如说阿拉伯那些

827
00:22:14,000 --> 00:22:15,000
默认是左利手

828
00:22:15,000 --> 00:22:16,000
因为他们的运笔的话

829
00:22:16,000 --> 00:22:18,000
要从右往左划嘛

830
00:22:18,000 --> 00:22:20,000
就是横要往右往左划横

831
00:22:20,000 --> 00:22:22,000
但阿拉伯人大部分也是右利手呀

832
00:22:22,000 --> 00:22:24,000
嗯

833
00:22:24,000 --> 00:22:25,000
但我只是说文

834
00:22:25,000 --> 00:22:26,000
就是文字

835
00:22:26,000 --> 00:22:27,000
从文字上想

836
00:22:27,000 --> 00:22:28,000
嗯

837
00:22:28,000 --> 00:22:30,000
所以还是一个习惯问题

838
00:22:30,000 --> 00:22:31,000
还是一个习惯问题

839
00:22:31,000 --> 00:22:34,000
就没有什么不能改的

840
00:22:34,000 --> 00:22:36,000
这可能有一定的偶然因素

841
00:22:36,000 --> 00:22:38,000
所以汉字的运笔的话

842
00:22:38,000 --> 00:22:40,000
默认是从左往右的

843
00:22:40,000 --> 00:22:41,000
比如说你写一个口

844
00:22:41,000 --> 00:22:42,000
口的最后一笔的话

845
00:22:42,000 --> 00:22:43,000
你不可能就

846
00:22:43,000 --> 00:22:44,000
我最顺便

847
00:22:44,000 --> 00:22:47,000
就第二笔画画画画画回来

848
00:22:47,000 --> 00:22:49,000
从右往左就连成一笔

849
00:22:49,000 --> 00:22:49,000
不能这样的

850
00:22:49,000 --> 00:22:50,000
你要另外起第三笔

851
00:22:50,000 --> 00:22:52,000
从左往右写

852
00:22:52,000 --> 00:22:53,000
那是在画圈

853
00:22:53,000 --> 00:22:55,000
就是中文默认只能从左往右嘛

854
00:22:55,000 --> 00:22:58,000
他没有从右往左的笔画中文

855
00:22:58,000 --> 00:22:59,000
嗯

856
00:22:59,000 --> 00:23:00,000
嗯

857
00:23:00,000 --> 00:23:01,000
OK 明白了

858
00:23:01,000 --> 00:23:02,000
好吧

859
00:23:02,000 --> 00:23:05,000
这样我们终于花了半个小时的时间

860
00:23:05,000 --> 00:23:06,000
把反馈说完了

861
00:23:06,000 --> 00:23:08,000
那我们现在终于可以进入正题了

862
00:23:08,000 --> 00:23:08,000
OK

863
00:23:08,000 --> 00:23:13,000
我们上次第一期节目

864
00:23:13,000 --> 00:23:15,000
把从头到尾大概过了一遍

865
00:23:15,000 --> 00:23:16,000
嗯

866
00:23:16,000 --> 00:23:18,000
我们敲下一个键盘

867
00:23:18,000 --> 00:23:20,000
然后让一个字显示在屏幕

868
00:23:20,000 --> 00:23:22,000
最后打印出来终于发生了什么

869
00:23:22,000 --> 00:23:22,000
那我们现在呢

870
00:23:22,000 --> 00:23:25,000
终于可以开始拆开了

871
00:23:25,000 --> 00:23:26,000
一步一步讲了

872
00:23:26,000 --> 00:23:27,000
嗯

873
00:23:27,000 --> 00:23:31,000
但今天讲的好像也不是键盘吧

874
00:23:31,000 --> 00:23:32,000
今天我们讲什么

875
00:23:32,000 --> 00:23:34,000
讲乱码是吗

876
00:23:34,000 --> 00:23:34,000
对

877
00:23:34,000 --> 00:23:36,000
这个有点像

878
00:23:36,000 --> 00:23:38,000
这个有点像从显示开始了

879
00:23:38,000 --> 00:23:39,000
从

880
00:23:39,000 --> 00:23:41,000
先从显示的这个

881
00:23:41,000 --> 00:23:42,000
这一层面来讲

882
00:23:42,000 --> 00:23:44,000
为什么有时候会看到我们不想看的东西

883
00:23:44,000 --> 00:23:45,000
或者我们想看的东西

884
00:23:45,000 --> 00:23:47,000
显出来是错误的

885
00:23:48,000 --> 00:23:48,000
嗯

886
00:23:48,000 --> 00:23:50,000
其实首先这个概念哈

887
00:23:50,000 --> 00:23:50,000
就是

888
00:23:50,000 --> 00:23:52,000
客户

889
00:23:52,000 --> 00:23:53,000
就是从用户来讲的话

890
00:23:53,000 --> 00:23:54,000
他显示不正常

891
00:23:54,000 --> 00:23:55,000
他就觉得是乱码

892
00:23:55,000 --> 00:23:58,000
其实这个乱码的背后有很多不一样的

893
00:23:58,000 --> 00:23:59,000
道理

894
00:23:59,000 --> 00:23:59,000
对吧

895
00:23:59,000 --> 00:23:59,000
就是

896
00:23:59,000 --> 00:24:04,000
因为如果你一直从那个字面上来讲乱码

897
00:24:04,000 --> 00:24:05,000
就是首先你有个码

898
00:24:05,000 --> 00:24:06,000
然后那个码不对了

899
00:24:06,000 --> 00:24:07,000
就变成乱码

900
00:24:07,000 --> 00:24:08,000
可是呢

901
00:24:08,000 --> 00:24:08,000
实际上呢

902
00:24:08,000 --> 00:24:11,000
并不并不一定完全都是码的问题

903
00:24:11,000 --> 00:24:14,000
有时候还有这个字库显示的问题

904
00:24:14,000 --> 00:24:14,000
或者其他问题

905
00:24:14,000 --> 00:24:15,000
对吧

906
00:24:15,000 --> 00:24:17,000
英语里面有个乱码叫什么

907
00:24:17,000 --> 00:24:19,000
不知道哎

908
00:24:19,000 --> 00:24:20,000
英语里面会有乱码吗

909
00:24:20,000 --> 00:24:21,000
对

910
00:24:21,000 --> 00:24:23,000
因为英文里面就是 ASCII 嘛

911
00:24:23,000 --> 00:24:24,000
虽然他们不存在乱码

912
00:24:24,000 --> 00:24:25,000
而且呢

913
00:24:25,000 --> 00:24:28,000
就是说乱码也就是我们双字节开始的

914
00:24:28,000 --> 00:24:28,000
所以呢

915
00:24:28,000 --> 00:24:29,000
在日本来讲呢

916
00:24:29,000 --> 00:24:30,000
日本他们说

917
00:24:30,000 --> 00:24:32,000
在英文世界里他们都把乱码叫成

918
00:24:32,000 --> 00:24:34,000
Moji bakke 是我们日语传过去的

919
00:24:34,000 --> 00:24:35,000
叫什么

920
00:24:35,000 --> 00:24:39,000
因为日语叫 Moji bakke

921
00:24:39,000 --> 00:24:40,000
就是文字

922
00:24:40,000 --> 00:24:41,000
OK

923
00:24:41,000 --> 00:24:42,000
Moji 是文字嘛

924
00:24:42,000 --> 00:24:44,000
然后 bakke 就是变化嘛

925
00:24:44,000 --> 00:24:46,000
就是文字变掉了

926
00:24:46,000 --> 00:24:46,000
OK

927
00:24:46,000 --> 00:24:48,000
德语里面叫

928
00:24:48,000 --> 00:24:49,000
呃

929
00:24:49,000 --> 00:24:49,000
猜信

930
00:24:49,000 --> 00:24:51,000
就是符号沙拉

931
00:24:51,000 --> 00:24:52,000
哈

932
00:24:52,000 --> 00:24:53,000
对

933
00:24:53,000 --> 00:24:55,000
就好像沙拉一样被

934
00:24:55,000 --> 00:24:57,000
被拌在一起了

935
00:24:57,000 --> 00:25:00,000
那英文叫什么呀

936
00:25:00,000 --> 00:25:01,000
Incoding error

937
00:25:01,000 --> 00:25:02,000
他从来没遇到

938
00:25:02,000 --> 00:25:04,000
编码错误啊

939
00:25:04,000 --> 00:25:04,000
应该就讲

940
00:25:04,000 --> 00:25:06,000
不就是

941
00:25:06,000 --> 00:25:07,000
就是因为

942
00:25:07,000 --> 00:25:09,000
就感觉这个事情在英文里面

943
00:25:09,000 --> 00:25:10,000
就是挺难出现的

944
00:25:10,000 --> 00:25:11,000
你想象一下

945
00:25:11,000 --> 00:25:12,000
他们都是那个 ASCII 的吧

946
00:25:12,000 --> 00:25:13,000
大部分都

947
00:25:13,000 --> 00:25:17,000
基本上所有的这个这个编码方式都都兼容他们

948
00:25:17,000 --> 00:25:18,000
那即便如此

949
00:25:18,000 --> 00:25:20,000
比如说他们看到一个呃

950
00:25:20,000 --> 00:25:22,000
比如说俄语的那个编码

951
00:25:22,000 --> 00:25:24,000
然后用什么呃

952
00:25:24,000 --> 00:25:28,000
用用 ISO 8859 来显示的时候

953
00:25:28,000 --> 00:25:30,000
那同样是没有任何意义的文字呀

954
00:25:30,000 --> 00:25:33,000
那他们对这个东西总有一个

955
00:25:33,000 --> 00:25:35,000
总得有个称呼啊

956
00:25:35,000 --> 00:25:40,000
反正在维基上面有一个这样相关的一个页面

957
00:25:40,000 --> 00:25:40,000
叫 moji bakke

958
00:25:40,000 --> 00:25:43,000
就是日文的那个音

959
00:25:43,000 --> 00:25:45,000
OK

960
00:25:45,000 --> 00:25:47,000
就英语的日语

961
00:25:47,000 --> 00:25:48,000
Garble

962
00:25:48,000 --> 00:25:49,000
Garble 的 text

963
00:25:49,000 --> 00:25:50,000
OK 好吗

964
00:25:50,000 --> 00:25:51,000
德语就是猜信萨拉图

965
00:25:51,000 --> 00:25:52,000
对应的

966
00:25:52,000 --> 00:25:55,000
对啊

967
00:25:55,000 --> 00:25:56,000
这个德文的猜信萨拉这个 page

968
00:25:56,000 --> 00:25:59,000
这个就翻译成乱码吧

969
00:25:59,000 --> 00:26:00,000
然后日语

970
00:26:00,000 --> 00:26:01,000
英文介面就是 moji bakke

971
00:26:01,000 --> 00:26:05,000
所以英文其实它是那个直译了

972
00:26:05,000 --> 00:26:06,000
对它直译了

973
00:26:06,000 --> 00:26:06,000
OK

974
00:26:06,000 --> 00:26:08,000
所以英语没有一个原声的

975
00:26:08,000 --> 00:26:10,000
这个就像是 emoji

976
00:26:10,000 --> 00:26:16,000
就是日文对这现代这个字符编码的一些贡献

977
00:26:16,000 --> 00:26:18,000
对

978
00:26:18,000 --> 00:26:20,000
这其实是一个比较本地化的一个说法

979
00:26:20,000 --> 00:26:21,000
就是

980
00:26:21,000 --> 00:26:25,000
这种事情可能只是在东亚地区最先出现

981
00:26:25,000 --> 00:26:30,000
然后日本又是一个最早在这个 CJK 领域确定了字符

982
00:26:30,000 --> 00:26:32,000
比较标准字符级的这样一个国家

983
00:26:32,000 --> 00:26:34,000
所以他们可能最早遇到这个问题

984
00:26:34,000 --> 00:26:36,000
他们就创了一个书语这样

985
00:26:36,000 --> 00:26:39,000
所以我们要从字符级和编码开始说

986
00:26:39,000 --> 00:26:41,000
确实

987
00:26:41,000 --> 00:26:43,000
那先讲中文吧

988
00:26:43,000 --> 00:26:46,000
中文的 GB 编码是不能不说的

989
00:26:46,000 --> 00:26:47,000
好吧

990
00:26:47,000 --> 00:26:48,000
是不是应该先讲

991
00:26:48,000 --> 00:26:50,000
先讲汉字整个的这个

992
00:26:50,000 --> 00:26:53,000
因为实际上那个

993
00:26:53,000 --> 00:26:58,000
东亚地区以 CJK 为核心的这个字符级的标准

994
00:26:58,000 --> 00:27:00,000
最早是日本人做的

995
00:27:00,000 --> 00:27:01,000
就是 GIS 嘛

996
00:27:01,000 --> 00:27:02,000
对

997
00:27:02,000 --> 00:27:08,000
日本日本在那个时代有比较强烈的支持日本的需求

998
00:27:08,000 --> 00:27:14,000
因为日本是东亚第一个开始电子化的国家

999
00:27:14,000 --> 00:27:14,000
应该这么说

1000
00:27:14,000 --> 00:27:16,000
对

1001
00:27:16,000 --> 00:27:20,000
或者我觉得一部分原因也是因为他们最早能够在计算机上

1002
00:27:20,000 --> 00:27:23,000
勉强的使用一些本地的文字

1003
00:27:23,000 --> 00:27:27,000
比如他们将那个片甲名用 ASCII 的扩展实现了

1004
00:27:27,000 --> 00:27:31,000
日本最早的一个这个文字编码呢

1005
00:27:31,000 --> 00:27:33,000
应该是 GIS 的 0201

1006
00:27:33,000 --> 00:27:35,000
它是个单字节的

1007
00:27:35,000 --> 00:27:35,000
很关键

1008
00:27:35,000 --> 00:27:39,000
它把这个七位的 ASCII 呢

1009
00:27:39,000 --> 00:27:40,000
给它扩展上面

1010
00:27:40,000 --> 00:27:42,000
放入了他们的半角的偏甲名

1011
00:27:42,000 --> 00:27:44,000
而且呢

1012
00:27:44,000 --> 00:27:45,000
他们在这里面呢

1013
00:27:45,000 --> 00:27:47,000
还和 ASCII 相比呢

1014
00:27:47,000 --> 00:27:48,000
还有两个字不一样

1015
00:27:48,000 --> 00:27:49,000
呃

1016
00:27:49,000 --> 00:27:52,000
他们在那个 92 那一号原来是反斜杠

1017
00:27:52,000 --> 00:27:54,000
然后在这个 GIS 里面

1018
00:27:54,000 --> 00:27:56,000
他给它换成了日元符号

1019
00:27:56,000 --> 00:28:00,000
然后在 126 号里面原来是一个那个波浪

1020
00:28:00,000 --> 00:28:01,000
但是呢

1021
00:28:01,000 --> 00:28:03,000
在这个 GIS 里面给它换成了

1022
00:28:03,000 --> 00:28:04,000
就叫什么

1023
00:28:04,000 --> 00:28:05,000
上华线

1024
00:28:05,000 --> 00:28:06,000
这不是下华线

1025
00:28:06,000 --> 00:28:08,000
也不是中华线那个联子符

1026
00:28:08,000 --> 00:28:09,000
而是一个上华线

1027
00:28:09,000 --> 00:28:10,000
所以呃

1028
00:28:10,000 --> 00:28:12,000
这个比较古老了

1029
00:28:12,000 --> 00:28:15,000
因为已经是 1969 年 6 月 1 号制定的

1030
00:28:15,000 --> 00:28:20,000
这个可是日本最老最旧的一个文字系统

1031
00:28:20,000 --> 00:28:21,000
呃就是文字编码

1032
00:28:21,000 --> 00:28:27,000
所以这是第一次他们就是在这个计算机上面的实现的呃

1033
00:28:27,000 --> 00:28:27,000
日文

1034
00:28:27,000 --> 00:28:28,000
嗯

1035
00:28:28,000 --> 00:28:32,000
就为什么那个时候要选片甲名不选评甲名

1036
00:28:32,000 --> 00:28:34,000
那就是传音嘛

1037
00:28:34,000 --> 00:28:36,000
呃就是打电报嘛

1038
00:28:36,000 --> 00:28:38,000
因为这主要是为了通信的方便

1039
00:28:38,000 --> 00:28:39,000
OK

1040
00:28:39,000 --> 00:28:49,000
对就其实那个通常来说在技术领域是将日本的这个书写系统对应到四种那个字符上

1041
00:28:49,000 --> 00:28:51,000
就是四种文字上

1042
00:28:51,000 --> 00:28:55,000
也就是在 writing system 下面他用了四种的 script

1043
00:28:55,000 --> 00:28:58,000
一种是所谓的罗马字

1044
00:28:58,000 --> 00:29:00,000
也就是拉丁文啊

1045
00:29:00,000 --> 00:29:01,000
另一种就是片甲名

1046
00:29:01,000 --> 00:29:02,000
还有一种平甲名

1047
00:29:02,000 --> 00:29:03,000
最后才是汉字

1048
00:29:03,000 --> 00:29:05,000
呃

1049
00:29:05,000 --> 00:29:07,000
我打个插问的问题

1050
00:29:07,000 --> 00:29:08,000
日本有没有想过

1051
00:29:08,000 --> 00:29:11,000
有没有过要把汉字整个废大的词穹

1052
00:29:11,000 --> 00:29:12,000
就是只用甲名

1053
00:29:12,000 --> 00:29:14,000
有

1054
00:29:14,000 --> 00:29:14,000
应该有吧

1055
00:29:14,000 --> 00:29:15,000
对应该有

1056
00:29:15,000 --> 00:29:16,000
嗯

1057
00:29:16,000 --> 00:29:20,000
然后因为朝鲜就是有这样的字

1058
00:29:20,000 --> 00:29:22,000
而且朝鲜的确是就是朝鲜半岛

1059
00:29:22,000 --> 00:29:24,000
朝鲜已经成功了吗

1060
00:29:24,000 --> 00:29:26,000
就朝鲜的话他已经几乎就都不用了

1061
00:29:26,000 --> 00:29:28,000
韩国的话呢就是偶尔还用

1062
00:29:28,000 --> 00:29:31,000
但是呢现在也就尽量都是用那个

1063
00:29:31,000 --> 00:29:31,000
那个

1064
00:29:31,000 --> 00:29:32,000
验文

1065
00:29:32,000 --> 00:29:32,000
验文

1066
00:29:32,000 --> 00:29:33,000
对中文叫

1067
00:29:33,000 --> 00:29:35,000
中文习惯叫验文

1068
00:29:35,000 --> 00:29:35,000
嗯

1069
00:29:35,000 --> 00:29:35,000
对

1070
00:29:35,000 --> 00:29:38,000
但是他们他们他们不喜欢验文这个词

1071
00:29:38,000 --> 00:29:41,000
他们觉得验文这个词是有有歧视

1072
00:29:41,000 --> 00:29:44,000
所以呢他们更喜欢用汉格这个词

1073
00:29:44,000 --> 00:29:45,000
嗯

1074
00:29:45,000 --> 00:29:45,000
嗯

1075
00:29:45,000 --> 00:29:47,000
所以汉格和验文其实还有两个词

1076
00:29:47,000 --> 00:29:48,000
对

1077
00:29:48,000 --> 00:29:49,000
嗯

1078
00:29:49,000 --> 00:29:52,000
因为验文验所谓的验是验语的验嘛

1079
00:29:52,000 --> 00:29:53,000
就是俗

1080
00:29:53,000 --> 00:29:54,000
俗字的嘛

1081
00:29:54,000 --> 00:29:55,000
嗯

1082
00:29:55,000 --> 00:29:55,000
嗯

1083
00:29:55,000 --> 00:29:56,000
俗字的意思

1084
00:29:56,000 --> 00:29:57,000
嗯

1085
00:29:57,000 --> 00:29:59,000
但是日本人倒是很乖的用假名嘛

1086
00:29:59,000 --> 00:30:01,000
因为假名的对应的是真名

1087
00:30:01,000 --> 00:30:03,000
所谓的真名就是汉字

1088
00:30:03,000 --> 00:30:03,000
对

1089
00:30:03,000 --> 00:30:04,000
日本人还乖乖

1090
00:30:04,000 --> 00:30:06,000
假不是贱的意思吗

1091
00:30:06,000 --> 00:30:06,000
在这里

1092
00:30:06,000 --> 00:30:07,000
就是假贱嘛

1093
00:30:07,000 --> 00:30:08,000
对啊

1094
00:30:08,000 --> 00:30:11,000
所以假名的还有它的反义词是真名嘛

1095
00:30:11,000 --> 00:30:12,000
所谓的真名就是汉字

1096
00:30:12,000 --> 00:30:14,000
所以后来呃

1097
00:30:14,000 --> 00:30:15,000
基斯后面呢

1098
00:30:15,000 --> 00:30:17,000
就是在用验甲

1099
00:30:17,000 --> 00:30:19,000
加入验

1100
00:30:19,000 --> 00:30:19,000
嗯

1101
00:30:19,000 --> 00:30:20,000
就是什么

1102
00:30:20,000 --> 00:30:22,000
半角验甲名以后进行了

1103
00:30:22,000 --> 00:30:24,000
从 78 年开始

1104
00:30:24,000 --> 00:30:25,000
他们后来 83 年

1105
00:30:25,000 --> 00:30:26,000
90 年

1106
00:30:26,000 --> 00:30:27,000
97 年改了好多次

1107
00:30:27,000 --> 00:30:29,000
然后后面就逐渐的就是

1108
00:30:29,000 --> 00:30:31,000
就是相当于就是在区位码里面

1109
00:30:31,000 --> 00:30:33,000
把所有的字都加进去了

1110
00:30:33,000 --> 00:30:34,000
够用吗

1111
00:30:34,000 --> 00:30:36,000
就是那个码数

1112
00:30:36,000 --> 00:30:37,000
也是不停不停的加呀

1113
00:30:37,000 --> 00:30:39,000
所以没没改一次的话

1114
00:30:39,000 --> 00:30:40,000
就是字数越来越多

1115
00:30:40,000 --> 00:30:42,000
因为你用那个 ASCII

1116
00:30:42,000 --> 00:30:44,000
你把高位置上之后

1117
00:30:44,000 --> 00:30:45,000
也只有 128 个码点

1118
00:30:45,000 --> 00:30:48,000
ASCII 只用来实现那个半角假名

1119
00:30:48,000 --> 00:30:49,000
对

1120
00:30:49,000 --> 00:30:50,000
嗯

1121
00:30:50,000 --> 00:30:51,000
ASCII 的扩展

1122
00:30:51,000 --> 00:30:52,000
就是 ASCII 扩展

1123
00:30:52,000 --> 00:30:52,000
它当然有一个

1124
00:30:52,000 --> 00:30:54,000
这次的 Roman 的

1125
00:30:54,000 --> 00:30:55,000
就是一个

1126
00:30:55,000 --> 00:30:56,000
对 ASCII 的一个

1127
00:30:56,000 --> 00:30:58,000
可以说是一个 ASCII 的一个

1128
00:30:58,000 --> 00:30:59,000
variation

1129
00:30:59,000 --> 00:31:01,000
你说半角假名

1130
00:31:01,000 --> 00:31:02,000
还有全角假名

1131
00:31:02,000 --> 00:31:02,000
对

1132
00:31:02,000 --> 00:31:04,000
一开始只有半角假名

1133
00:31:04,000 --> 00:31:05,000
这个概念其实有点

1134
00:31:05,000 --> 00:31:06,000
有点乱了

1135
00:31:06,000 --> 00:31:07,000
我们是不是可以趁机来

1136
00:31:07,000 --> 00:31:08,000
这个整理一下

1137
00:31:08,000 --> 00:31:10,000
就是所谓的这个半角假名

1138
00:31:10,000 --> 00:31:11,000
它一方面指的是

1139
00:31:11,000 --> 00:31:12,000
这个假名的宽度

1140
00:31:12,000 --> 00:31:14,000
是那个全宽

1141
00:31:14,000 --> 00:31:15,000
汉字的一半

1142
00:31:15,000 --> 00:31:16,000
然后同时

1143
00:31:16,000 --> 00:31:17,000
另一方面

1144
00:31:17,000 --> 00:31:19,000
它也同意的指向了说

1145
00:31:19,000 --> 00:31:22,000
这个字符只使用了一个字节

1146
00:31:22,000 --> 00:31:23,000
这样子的一个意思

1147
00:31:23,000 --> 00:31:25,000
所以在上次节目

1148
00:31:25,000 --> 00:31:25,000
我也说过

1149
00:31:25,000 --> 00:31:27,000
就是所谓的单字节

1150
00:31:27,000 --> 00:31:28,000
双字节

1151
00:31:28,000 --> 00:31:29,000
和半角

1152
00:31:29,000 --> 00:31:30,000
拳角

1153
00:31:30,000 --> 00:31:31,000
原来是两个概念

1154
00:31:31,000 --> 00:31:32,000
但是呢

1155
00:31:32,000 --> 00:31:34,000
就是说在字体排音里面

1156
00:31:34,000 --> 00:31:34,000
是半

1157
00:31:34,000 --> 00:31:35,000
所谓的半角

1158
00:31:35,000 --> 00:31:36,000
拳角

1159
00:31:36,000 --> 00:31:38,000
它只是一个宽度的概念而已

1160
00:31:38,000 --> 00:31:38,000
对

1161
00:31:38,000 --> 00:31:38,000
对

1162
00:31:38,000 --> 00:31:39,000
半角拳角

1163
00:31:39,000 --> 00:31:42,000
其实应该局限于描述视觉上的一个效果

1164
00:31:42,000 --> 00:31:42,000
对

1165
00:31:42,000 --> 00:31:45,000
它是实际物理上面的一个宽度问题

1166
00:31:45,000 --> 00:31:46,000
然后呢

1167
00:31:46,000 --> 00:31:47,000
单字节

1168
00:31:47,000 --> 00:31:47,000
双字节

1169
00:31:47,000 --> 00:31:49,000
这就是编码的问题

1170
00:31:49,000 --> 00:31:52,000
而在很久以前

1171
00:31:52,000 --> 00:31:53,000
的确

1172
00:31:53,000 --> 00:31:56,000
半角的就是单字节

1173
00:31:56,000 --> 00:31:58,000
然后拳角的就是双字节

1174
00:31:58,000 --> 00:31:59,000
所以呢

1175
00:31:59,000 --> 00:32:01,000
就有人开始混用了

1176
00:32:01,000 --> 00:32:02,000
对

1177
00:32:02,000 --> 00:32:03,000
而且这个混用

1178
00:32:03,000 --> 00:32:06,000
其实是带有一定的主动性的

1179
00:32:06,000 --> 00:32:06,000
就是说

1180
00:32:06,000 --> 00:32:08,000
它们并不是错误的用了它

1181
00:32:08,000 --> 00:32:10,000
而是希望以这种方式

1182
00:32:10,000 --> 00:32:13,000
帮助别人理解和记忆

1183
00:32:13,000 --> 00:32:13,000
这两个嘛

1184
00:32:13,000 --> 00:32:15,000
到了现在混在一起了呀

1185
00:32:15,000 --> 00:32:19,000
所以那个假名到底是

1186
00:32:19,000 --> 00:32:19,000
就是说

1187
00:32:19,000 --> 00:32:20,000
个数一共

1188
00:32:20,000 --> 00:32:23,000
能不能装到 128 个码点里面去

1189
00:32:23,000 --> 00:32:24,000
实际上呢

1190
00:32:24,000 --> 00:32:26,000
就是在最早的时候呢

1191
00:32:26,000 --> 00:32:27,000
它就是

1192
00:32:27,000 --> 00:32:29,000
G 4 X 的 0208 的话

1193
00:32:29,000 --> 00:32:31,000
它只装了 94 个字嘛

1194
00:32:31,000 --> 00:32:33,000
就是就只装了那个半角拼假名

1195
00:32:33,000 --> 00:32:34,000
就就就就

1196
00:32:34,000 --> 00:32:35,000
就差不多用完了吗

1197
00:32:35,000 --> 00:32:36,000
128 个点

1198
00:32:36,000 --> 00:32:37,000
你用了 90 几个

1199
00:32:37,000 --> 00:32:38,000
94 个

1200
00:32:38,000 --> 00:32:39,000
那那拳角的跟这个半角的

1201
00:32:39,000 --> 00:32:40,000
有什么

1202
00:32:40,000 --> 00:32:42,000
全角就都用两个字符了吗

1203
00:32:42,000 --> 00:32:43,000
就用两个字节来表示了

1204
00:32:43,000 --> 00:32:45,000
就是但是它表达的

1205
00:32:45,000 --> 00:32:45,000
它比如说

1206
00:32:45,000 --> 00:32:46,000
一个半角的假名

1207
00:32:46,000 --> 00:32:47,000
一个拳角的

1208
00:32:47,000 --> 00:32:48,000
它表示的是同一个东西吗

1209
00:32:48,000 --> 00:32:49,000
是同一个东西

1210
00:32:49,000 --> 00:32:50,000
所以现在就变成做两套了

1211
00:32:50,000 --> 00:32:54,000
为什么要做两套

1212
00:32:54,000 --> 00:32:54,000
因为

1213
00:32:54,000 --> 00:32:57,000
因为那个半角假名显示的时候

1214
00:32:57,000 --> 00:32:58,000
有一个

1215
00:32:58,000 --> 00:32:59,000
就是一开始的那个

1216
00:32:59,000 --> 00:33:00,000
G 4 的假名

1217
00:33:00,000 --> 00:33:01,000
的

1218
00:33:01,000 --> 00:33:01,000
呃

1219
00:33:01,000 --> 00:33:03,000
片假名在显示的时候

1220
00:33:03,000 --> 00:33:05,000
它的宽度和英文字母是一样的

1221
00:33:05,000 --> 00:33:06,000
对

1222
00:33:06,000 --> 00:33:07,000
然后为了

1223
00:33:07,000 --> 00:33:09,000
到就是所以后来有了那个

1224
00:33:09,000 --> 00:33:11,000
全宽度的汉字的时候

1225
00:33:11,000 --> 00:33:12,000
那个你在

1226
00:33:12,000 --> 00:33:14,000
全宽度的汉字里面

1227
00:33:14,000 --> 00:33:17,000
夹杂着显示半宽度的片假名

1228
00:33:17,000 --> 00:33:17,000
就很丑

1229
00:33:17,000 --> 00:33:19,000
所以就做一套全宽度的

1230
00:33:19,000 --> 00:33:21,000
全角假名

1231
00:33:21,000 --> 00:33:22,000
就是这么来

1232
00:33:22,000 --> 00:33:24,000
所以我理解一下

1233
00:33:24,000 --> 00:33:25,000
就是说

1234
00:33:25,000 --> 00:33:25,000
呃

1235
00:33:25,000 --> 00:33:27,000
因为是为了对齐的需求

1236
00:33:27,000 --> 00:33:28,000
因为那个时候是都是那种

1237
00:33:28,000 --> 00:33:30,000
就是就是 column display

1238
00:33:30,000 --> 00:33:32,000
就是正正列的显示器

1239
00:33:32,000 --> 00:33:32,000
嘛

1240
00:33:32,000 --> 00:33:35,000
就为了满足那个跟英文对齐的需求

1241
00:33:35,000 --> 00:33:36,000
所以我们强制

1242
00:33:36,000 --> 00:33:38,000
就是牺牲了这个美观程度

1243
00:33:38,000 --> 00:33:41,000
把那个假名压缩成半宽的

1244
00:33:41,000 --> 00:33:41,000
对

1245
00:33:41,000 --> 00:33:43,000
然后后来因为有

1246
00:33:43,000 --> 00:33:46,000
因为就变成那种图形 graphic

1247
00:33:46,000 --> 00:33:47,000
就介面的时候

1248
00:33:47,000 --> 00:33:48,000
就是为了好看

1249
00:33:48,000 --> 00:33:49,000
其实他应该是

1250
00:33:49,000 --> 00:33:51,000
假名是应该和汉字等宽的

1251
00:33:51,000 --> 00:33:52,000
没有到 graphic 时代

1252
00:33:52,000 --> 00:33:56,000
就是在那个显示器可以设置为双字节宽的时代就开始了

1253
00:33:56,000 --> 00:33:58,000
对就跟汉字一样

1254
00:33:58,000 --> 00:34:01,000
这个需求就是因为是为了好看

1255
00:34:01,000 --> 00:34:01,000
是为了好看

1256
00:34:01,000 --> 00:34:06,000
因为在如果你两个汉字中间加着一个半宽度的假名就很丑

1257
00:34:06,000 --> 00:34:08,000
而且制表啊什么

1258
00:34:08,000 --> 00:34:09,000
但是呢全都非常难

1259
00:34:09,000 --> 00:34:11,000
就还是为了对齐

1260
00:34:11,000 --> 00:34:13,000
只是说以前是因为了半宽

1261
00:34:13,000 --> 00:34:14,000
是为了和英文字母对齐

1262
00:34:14,000 --> 00:34:15,000
是为了和汉字对齐

1263
00:34:15,000 --> 00:34:17,000
是为了和汉字对齐

1264
00:34:17,000 --> 00:34:22,000
但是呢就是比如说在日本的

1265
00:34:22,000 --> 00:34:24,000
比如说当年就 iMode 手机时代

1266
00:34:24,000 --> 00:34:25,000
日本的手机时代

1267
00:34:25,000 --> 00:34:27,000
因为片甲名它是表英文字嘛

1268
00:34:27,000 --> 00:34:31,000
所以片甲名的外来语往往都写得很长

1269
00:34:31,000 --> 00:34:36,000
所以他故意用半角片甲名是为了省空间

1270
00:34:36,000 --> 00:34:40,000
节约屏幕空间有这么做的

1271
00:34:40,000 --> 00:34:41,000
为什么要黑德语

1272
00:34:41,000 --> 00:34:44,000
对德文的单词那么长

1273
00:34:44,000 --> 00:34:46,000
德语你那个每个词都不写

1274
00:34:46,000 --> 00:34:47,000
都那么长又没有空格

1275
00:34:47,000 --> 00:34:50,000
德语说必须要大量使用简写和缩写

1276
00:34:50,000 --> 00:34:54,000
所以在从字体排音的传统上来讲

1277
00:34:54,000 --> 00:34:56,000
德文是大量使用和字

1278
00:34:56,000 --> 00:34:58,000
和窄体字

1279
00:34:58,000 --> 00:35:01,000
对是这样

1280
00:35:01,000 --> 00:35:02,000
尤其在高速公路路牌上

1281
00:35:02,000 --> 00:35:05,000
半宽的甲名看起来会不会很别扭

1282
00:35:05,000 --> 00:35:06,000
因为那么窄

1283
00:35:06,000 --> 00:35:07,000
会有一点

1284
00:35:07,000 --> 00:35:09,000
确实会有一点

1285
00:35:09,000 --> 00:35:10,000
反正我觉得很丑

1286
00:35:10,000 --> 00:35:12,000
对它是一种妥协

1287
00:35:12,000 --> 00:35:15,000
OK

1288
00:35:15,000 --> 00:35:17,000
所以于是下一个问题就来了

1289
00:35:17,000 --> 00:35:21,000
就是说半宽的甲名对应的码点和全宽

1290
00:35:21,000 --> 00:35:23,000
就是双字节的对应的码点

1291
00:35:23,000 --> 00:35:26,000
它有这个是一样的吗

1292
00:35:26,000 --> 00:35:29,000
或者这么问

1293
00:35:29,000 --> 00:35:31,000
就是说如果在现代的来处理的话

1294
00:35:31,000 --> 00:35:32,000
它是两个字符

1295
00:35:32,000 --> 00:35:34,000
是不一样的

1296
00:35:34,000 --> 00:35:36,000
OK

1297
00:35:36,000 --> 00:35:39,000
在 unicode 里面的那个 code point

1298
00:35:39,000 --> 00:35:40,000
它是一样的吗

1299
00:35:40,000 --> 00:35:41,000
好像也不一样

1300
00:35:41,000 --> 00:35:42,000
不一样

1301
00:35:42,000 --> 00:35:44,000
unicode 它为了向后金融

1302
00:35:44,000 --> 00:35:46,000
所以它也不一样

1303
00:35:46,000 --> 00:35:46,000
对

1304
00:35:46,000 --> 00:35:51,000
那如果说我们现在重新来设计这么一件事

1305
00:35:51,000 --> 00:35:53,000
其实它应该是从同一个 code point

1306
00:35:53,000 --> 00:35:55,000
但是在那个就是 render 渲染的时候

1307
00:35:55,000 --> 00:35:57,000
应该选择不同的宽度

1308
00:35:57,000 --> 00:35:58,000
以适应那个对齐就可以了

1309
00:35:58,000 --> 00:35:58,000
对

1310
00:35:58,000 --> 00:36:00,000
从理想角度的话

1311
00:36:00,000 --> 00:36:01,000
确实是可以这样做的

1312
00:36:01,000 --> 00:36:02,000
是没错

1313
00:36:02,000 --> 00:36:03,000
对

1314
00:36:03,000 --> 00:36:03,000
但对

1315
00:36:03,000 --> 00:36:05,000
但这是一个向后兼容的

1316
00:36:05,000 --> 00:36:07,000
人类史就要重写了

1317
00:36:07,000 --> 00:36:07,000
对

1318
00:36:07,000 --> 00:36:09,000
对

1319
00:36:09,000 --> 00:36:12,000
这其实是一个无法避免的问题了

1320
00:36:12,000 --> 00:36:14,000
因为就是这个编码的发展

1321
00:36:14,000 --> 00:36:15,000
就是向后兼容

1322
00:36:15,000 --> 00:36:16,000
有这个需求

1323
00:36:16,000 --> 00:36:18,000
所以它一定会保留两套

1324
00:36:18,000 --> 00:36:19,000
对

1325
00:36:19,000 --> 00:36:20,000
对

1326
00:36:20,000 --> 00:36:22,000
以前是做了很多莫名其妙的事情

1327
00:36:22,000 --> 00:36:27,000
然后后面来的新方案就不停不停地要为前面的擦屁股

1328
00:36:27,000 --> 00:36:28,000
擦屁股

1329
00:36:28,000 --> 00:36:30,000
好烦

1330
00:36:30,000 --> 00:36:33,000
然后后面我们就终于有了双字节了

1331
00:36:33,000 --> 00:36:34,000
对吧

1332
00:36:34,000 --> 00:36:36,000
有了双字节就有了曲位

1333
00:36:36,000 --> 00:36:38,000
就所谓的以前的曲位码

1334
00:36:38,000 --> 00:36:39,000
对

1335
00:36:39,000 --> 00:36:41,000
日本好像叫曲点是吧

1336
00:36:41,000 --> 00:36:41,000
对

1337
00:36:41,000 --> 00:36:42,000
日本叫曲点

1338
00:36:42,000 --> 00:36:44,000
那英文曲就是

1339
00:36:44,000 --> 00:36:45,000
曲是 row 嘛

1340
00:36:45,000 --> 00:36:46,000
就第几排嘛

1341
00:36:46,000 --> 00:36:46,000
row

1342
00:36:46,000 --> 00:36:48,000
然后那个点就是刚才说的

1343
00:36:48,000 --> 00:36:49,000
sell

1344
00:36:49,000 --> 00:36:49,000
嗯

1345
00:36:49,000 --> 00:36:51,000
就是

1346
00:36:51,000 --> 00:36:53,000
举这个行和列吧

1347
00:36:53,000 --> 00:36:54,000
嗯

1348
00:36:54,000 --> 00:36:57,000
所以它是真的是有一个表

1349
00:36:57,000 --> 00:36:58,000
然后一行是多

1350
00:36:58,000 --> 00:37:00,000
几行几列是什么字

1351
00:37:00,000 --> 00:37:01,000
会有这么一个表出来

1352
00:37:01,000 --> 00:37:01,000
对吧

1353
00:37:01,000 --> 00:37:01,000
对的

1354
00:37:01,000 --> 00:37:02,000
嗯

1355
00:37:02,000 --> 00:37:06,000
然后后来咱们中国的 GB 的设计

1356
00:37:06,000 --> 00:37:07,000
就是完全延

1357
00:37:07,000 --> 00:37:09,000
就是延习了这个 GIS 的整个设计系统

1358
00:37:09,000 --> 00:37:10,000
而且

1359
00:37:10,000 --> 00:37:13,000
所以双字节和那个曲码都是日本人

1360
00:37:13,000 --> 00:37:14,000
最早是日本的

1361
00:37:14,000 --> 00:37:15,000
是 GIS

1362
00:37:15,000 --> 00:37:15,000
对

1363
00:37:15,000 --> 00:37:17,000
而且呢

1364
00:37:17,000 --> 00:37:18,000
咱们就和

1365
00:37:18,000 --> 00:37:19,000
也是学习日本的

1366
00:37:19,000 --> 00:37:21,000
就是把汉字根据使用频率

1367
00:37:21,000 --> 00:37:23,000
分成了两个等级

1368
00:37:23,000 --> 00:37:23,000
长

1369
00:37:23,000 --> 00:37:25,000
就是常用字和次常用字

1370
00:37:25,000 --> 00:37:26,000
嗯

1371
00:37:26,000 --> 00:37:30,000
然后日本他们叫第一水准汉字和第二水准汉字嘛

1372
00:37:30,000 --> 00:37:31,000
在

1373
00:37:31,000 --> 00:37:33,000
怎么一流和二流的感觉

1374
00:37:33,000 --> 00:37:35,000
就是根据那个平使用的频率

1375
00:37:35,000 --> 00:37:36,000
嗯

1376
00:37:36,000 --> 00:37:39,000
那咱们到 GB 的 2312 也是嘛

1377
00:37:39,000 --> 00:37:40,000
就是

1378
00:37:40,000 --> 00:37:44,000
而且咱们就是常用字的话是按照音序排列的

1379
00:37:44,000 --> 00:37:46,000
那次常用字就是按照

1380
00:37:46,000 --> 00:37:46,000
笔画

1381
00:37:46,000 --> 00:37:47,000
不手

1382
00:37:47,000 --> 00:37:48,000
是笔画

1383
00:37:48,000 --> 00:37:48,000
不手

1384
00:37:48,000 --> 00:37:50,000
按照不手

1385
00:37:50,000 --> 00:37:52,000
按不手排列的

1386
00:37:52,000 --> 00:37:52,000
对

1387
00:37:52,000 --> 00:37:52,000
就这个

1388
00:37:52,000 --> 00:37:53,000
这个

1389
00:37:53,000 --> 00:37:53,000
这个

1390
00:37:53,000 --> 00:37:54,000
这个表哈

1391
00:37:54,000 --> 00:37:58,000
就是有这个按两个音序和这个不手排列的这个表

1392
00:37:58,000 --> 00:38:00,000
是后来所有做这个

1393
00:38:00,000 --> 00:38:01,000
就是

1394
00:38:01,000 --> 00:38:02,000
的书法

1395
00:38:02,000 --> 00:38:04,000
然后转换到汉字那个基础吗

1396
00:38:04,000 --> 00:38:04,000
对啊

1397
00:38:04,000 --> 00:38:05,000
内核恐慌

1398
00:38:05,000 --> 00:38:06,000
就是吴陶单独做一期

1399
00:38:06,000 --> 00:38:08,000
就是做了编码那一期嘛

1400
00:38:08,000 --> 00:38:08,000
他开始

1401
00:38:08,000 --> 00:38:09,000
一开始就说了一个问题

1402
00:38:09,000 --> 00:38:10,000
首先是个

1403
00:38:10,000 --> 00:38:11,000
encoding

1404
00:38:11,000 --> 00:38:13,000
就是编码和解码的过程

1405
00:38:13,000 --> 00:38:13,000
对吧

1406
00:38:13,000 --> 00:38:14,000
所以 GB

1407
00:38:14,000 --> 00:38:15,000
比如说 GB 2312

1408
00:38:15,000 --> 00:38:17,000
他到底规定了什么东西

1409
00:38:17,000 --> 00:38:19,000
他不仅是规定了那个字汇

1410
00:38:19,000 --> 00:38:21,000
就是我要收这么多汉字

1411
00:38:21,000 --> 00:38:22,000
而且呢

1412
00:38:22,000 --> 00:38:23,000
他还规定了就是

1413
00:38:23,000 --> 00:38:25,000
要怎么来编这个码

1414
00:38:25,000 --> 00:38:25,000
嗯

1415
00:38:25,000 --> 00:38:27,000
就说那个

1416
00:38:27,000 --> 00:38:28,000
这个就是 GB 2312

1417
00:38:28,000 --> 00:38:29,000
那个那个书里面

1418
00:38:29,000 --> 00:38:30,000
应该是有一个很

1419
00:38:30,000 --> 00:38:31,000
很长的一个列表

1420
00:38:31,000 --> 00:38:33,000
把那个去每个区位的

1421
00:38:33,000 --> 00:38:35,000
那个汉字都写那

1422
00:38:35,000 --> 00:38:36,000
然后再规定一个方法

1423
00:38:36,000 --> 00:38:37,000
去怎么去

1424
00:38:37,000 --> 00:38:38,000
所以拿那个汉字

1425
00:38:38,000 --> 00:38:40,000
因为 GB 2312

1426
00:38:40,000 --> 00:38:41,000
他的正式名字叫

1427
00:38:41,000 --> 00:38:44,000
信息交换用汉字编码字符集

1428
00:38:44,000 --> 00:38:47,000
首先他是要信息交换的

1429
00:38:47,000 --> 00:38:48,000
然后呢

1430
00:38:48,000 --> 00:38:50,000
他是给汉字进行编码的

1431
00:38:50,000 --> 00:38:51,000
然后呢

1432
00:38:51,000 --> 00:38:52,000
是一个字符

1433
00:38:52,000 --> 00:38:53,000
然后有个字符

1434
00:38:53,000 --> 00:38:54,000
字符集

1435
00:38:54,000 --> 00:38:55,000
character set

1436
00:38:55,000 --> 00:38:56,000
这样一个东西

1437
00:38:56,000 --> 00:38:56,000
嗯

1438
00:38:56,000 --> 00:38:57,000
OK

1439
00:38:57,000 --> 00:39:00,000
他是 94 个区嘛

1440
00:39:00,000 --> 00:39:00,000
94 个区

1441
00:39:00,000 --> 00:39:01,000
94 个位嘛

1442
00:39:01,000 --> 00:39:03,000
然后就有这么多

1443
00:39:03,000 --> 00:39:04,000
这个码位

1444
00:39:04,000 --> 00:39:05,000
然后把

1445
00:39:05,000 --> 00:39:10,000
6763 个汉字给放进去

1446
00:39:10,000 --> 00:39:10,000
当然了

1447
00:39:10,000 --> 00:39:11,000
除了汉字以外

1448
00:39:11,000 --> 00:39:12,000
还有那些什么图形符号啊

1449
00:39:12,000 --> 00:39:14,000
什么的一些的

1450
00:39:14,000 --> 00:39:14,000
嗯

1451
00:39:14,000 --> 00:39:15,000
等一下

1452
00:39:15,000 --> 00:39:16,000
你说 94 个区

1453
00:39:16,000 --> 00:39:16,000
94 个吗

1454
00:39:16,000 --> 00:39:17,000
是说有这个这个

1455
00:39:17,000 --> 00:39:18,000
这个举

1456
00:39:18,000 --> 00:39:18,000
94 乘 94

1457
00:39:18,000 --> 00:39:19,000
94 乘 94

1458
00:39:19,000 --> 00:39:20,000
对

1459
00:39:20,000 --> 00:39:22,000
一个格子对吧

1460
00:39:22,000 --> 00:39:24,000
这个跟祭祀是一样的

1461
00:39:24,000 --> 00:39:24,000
嗯

1462
00:39:24,000 --> 00:39:26,000
那你那个刚才说

1463
00:39:26,000 --> 00:39:27,000
常用和不常用

1464
00:39:27,000 --> 00:39:28,000
从哪里体现出来呢

1465
00:39:28,000 --> 00:39:30,000
常用不常用

1466
00:39:30,000 --> 00:39:31,000
是两个集合嘛

1467
00:39:31,000 --> 00:39:33,000
就是就是人是

1468
00:39:33,000 --> 00:39:33,000
常用不常用

1469
00:39:33,000 --> 00:39:34,000
是人为规定的

1470
00:39:34,000 --> 00:39:35,000
两个集合嘛

1471
00:39:35,000 --> 00:39:37,000
然后他们以先后次去排

1472
00:39:37,000 --> 00:39:39,000
就是如果在那个表格里面

1473
00:39:39,000 --> 00:39:39,000
他他

1474
00:39:39,000 --> 00:39:40,000
因为你刚才讲

1475
00:39:40,000 --> 00:39:41,000
有两种方式来排序嘛

1476
00:39:41,000 --> 00:39:42,000
一种是按这个读音排

1477
00:39:42,000 --> 00:39:43,000
一个是按手排

1478
00:39:43,000 --> 00:39:44,000
嗯

1479
00:39:44,000 --> 00:39:45,000
其实不是这样

1480
00:39:45,000 --> 00:39:45,000
如果在

1481
00:39:45,000 --> 00:39:46,000
就有点混

1482
00:39:46,000 --> 00:39:46,000
就是说

1483
00:39:46,000 --> 00:39:49,000
首先将他们分成了常用和不常用

1484
00:39:49,000 --> 00:39:50,000
两个区块吧

1485
00:39:50,000 --> 00:39:51,000
你可以理解成

1486
00:39:51,000 --> 00:39:52,000
然后有

1487
00:39:52,000 --> 00:39:52,000
对

1488
00:39:52,000 --> 00:39:52,000
两个

1489
00:39:52,000 --> 00:39:54,000
两类字

1490
00:39:54,000 --> 00:39:54,000
你先给

1491
00:39:54,000 --> 00:39:54,000
对对对

1492
00:39:54,000 --> 00:39:55,000
先把那个字

1493
00:39:55,000 --> 00:39:56,000
嗯

1494
00:39:56,000 --> 00:39:56,000
对

1495
00:39:56,000 --> 00:39:57,000
然后把这个字

1496
00:39:57,000 --> 00:39:59,000
我们一般叫 class

1497
00:39:59,000 --> 00:40:01,000
就一个 class 叫常用

1498
00:40:01,000 --> 00:40:01,000
OK

1499
00:40:01,000 --> 00:40:03,000
或者说叫一级汉字

1500
00:40:03,000 --> 00:40:04,000
另一个 class 是不常用

1501
00:40:04,000 --> 00:40:05,000
叫二级汉字

1502
00:40:05,000 --> 00:40:06,000
那么在一级汉字

1503
00:40:06,000 --> 00:40:07,000
这个 class 内部

1504
00:40:07,000 --> 00:40:09,000
它的排序是按音讯的

1505
00:40:09,000 --> 00:40:10,000
而在二级汉字内部

1506
00:40:10,000 --> 00:40:11,000
它的排序是按部手的

1507
00:40:11,000 --> 00:40:15,000
那跟这个 94 x 94 这个格子

1508
00:40:15,000 --> 00:40:16,000
有什么

1509
00:40:16,000 --> 00:40:16,000
呃

1510
00:40:16,000 --> 00:40:20,000
94 x 94 只是它排布这个区位表的一种方式

1511
00:40:20,000 --> 00:40:22,000
对号入座

1512
00:40:22,000 --> 00:40:24,000
就是 94 x 94 是座位

1513
00:40:24,000 --> 00:40:26,000
而那些那些字呢

1514
00:40:26,000 --> 00:40:29,000
就是把它安到这个座位上去

1515
00:40:29,000 --> 00:40:32,000
那所以我可以这么理解吗

1516
00:40:32,000 --> 00:40:35,000
就是在这个 94 x 94 一个方格子里面

1517
00:40:35,000 --> 00:40:37,000
前半部分是常用的汉字

1518
00:40:37,000 --> 00:40:38,000
然后是按音讯排的

1519
00:40:38,000 --> 00:40:40,000
后半部分是不常用的汉字

1520
00:40:40,000 --> 00:40:41,000
上不手排

1521
00:40:41,000 --> 00:40:42,000
就是什么

1522
00:40:42,000 --> 00:40:45,000
第 16 到 55 区是一级汉字

1523
00:40:45,000 --> 00:40:48,000
然后所有一级汉字放在这里面

1524
00:40:48,000 --> 00:40:50,000
就是从第 16 区到第 55 区

1525
00:40:50,000 --> 00:40:51,000
全就是相当于

1526
00:40:51,000 --> 00:40:54,000
一级汉字按拼音次序排列

1527
00:40:54,000 --> 00:40:56,000
一共 3755 个

1528
00:40:56,000 --> 00:40:59,000
然后从第 56 区开始

1529
00:40:59,000 --> 00:41:01,000
一直到第 87 区是二级汉字

1530
00:41:01,000 --> 00:41:04,000
然后排了 308 个

1531
00:41:04,000 --> 00:41:06,000
然后前面还有什么特殊符号之类的

1532
00:41:08,000 --> 00:41:08,000
对

1533
00:41:08,000 --> 00:41:10,000
那个阿字嘛

1534
00:41:10,000 --> 00:41:12,000
就是音讯里面第一个字嘛

1535
00:41:12,000 --> 00:41:14,000
它区位码是 1601

1536
00:41:14,000 --> 00:41:15,000
就是他 16 区的第一个

1537
00:41:15,000 --> 00:41:18,000
所以大家如果去翻这个 Gb 的话

1538
00:41:18,000 --> 00:41:19,000
他就每个汉字

1539
00:41:19,000 --> 00:41:23,000
他只是给每个汉字安排了一个座位

1540
00:41:23,000 --> 00:41:24,000
嗯

1541
00:41:24,000 --> 00:41:25,000
嗯

1542
00:41:25,000 --> 00:41:25,000
所以呢

1543
00:41:25,000 --> 00:41:27,000
比如说阿字是 1601 嘛

1544
00:41:27,000 --> 00:41:28,000
嗯

1545
00:41:28,000 --> 00:41:31,000
但问题是后面呢

1546
00:41:31,000 --> 00:41:32,000
我们就好

1547
00:41:32,000 --> 00:41:34,000
我们这个 1601 就怎么编成码

1548
00:41:34,000 --> 00:41:35,000
这是编

1549
00:41:35,000 --> 00:41:37,000
这是另外一个编码的事情

1550
00:41:37,000 --> 00:41:38,000
对

1551
00:41:38,000 --> 00:41:40,000
我们刚刚讲的都是一些字符级的事情

1552
00:41:40,000 --> 00:41:41,000
对

1553
00:41:41,000 --> 00:41:42,000
所以呢

1554
00:41:42,000 --> 00:41:42,000
不仅是有字

1555
00:41:42,000 --> 00:41:44,000
然后还要有个编码的过程

1556
00:41:44,000 --> 00:41:45,000
我们先有

1557
00:41:45,000 --> 00:41:46,000
我们先找到这么多字

1558
00:41:46,000 --> 00:41:47,000
然后呢

1559
00:41:47,000 --> 00:41:49,000
再给他安排这么多码位

1560
00:41:49,000 --> 00:41:50,000
然后给他放下去以后了

1561
00:41:50,000 --> 00:41:51,000
还要进行编码

1562
00:41:51,000 --> 00:41:52,000
嗯

1563
00:41:52,000 --> 00:41:54,000
诶等等

1564
00:41:54,000 --> 00:41:55,000
我打个差问一个

1565
00:41:55,000 --> 00:41:58,000
就所以区位码和那个 unicode 的那个 code point

1566
00:41:58,000 --> 00:41:59,000
是可以对应起来的

1567
00:41:59,000 --> 00:41:59,000
对吧

1568
00:41:59,000 --> 00:42:00,000
可以对应

1569
00:42:00,000 --> 00:42:01,000
但是呢

1570
00:42:01,000 --> 00:42:02,000
呃

1571
00:42:02,000 --> 00:42:05,000
就是排列方式是完全不一样的

1572
00:42:05,000 --> 00:42:07,000
就是说

1573
00:42:07,000 --> 00:42:08,000
应该说 Gb 2312

1574
00:42:08,000 --> 00:42:10,000
它这份国家标准

1575
00:42:10,000 --> 00:42:12,000
它同时设计两部分

1576
00:42:12,000 --> 00:42:14,000
一部分它设计的是一个

1577
00:42:14,000 --> 00:42:16,000
我们常称叫做呃

1578
00:42:16,000 --> 00:42:19,000
编码字符级的这样一个字符级标准

1579
00:42:19,000 --> 00:42:20,000
而另一部分

1580
00:42:20,000 --> 00:42:25,000
它也同时包含了一套这个编码的 encoding 的一套规则

1581
00:42:25,000 --> 00:42:26,000
对

1582
00:42:26,000 --> 00:42:28,000
那那我重新描述一下

1583
00:42:28,000 --> 00:42:28,000
应该是这么说

1584
00:42:28,000 --> 00:42:29,000
就是说

1585
00:42:29,000 --> 00:42:29,000
呃

1586
00:42:29,000 --> 00:42:30,000
Gb 2312

1587
00:42:30,000 --> 00:42:33,000
这个我们作为编码方式来讲的时候

1588
00:42:33,000 --> 00:42:35,000
它是对应的是 UTF 8

1589
00:42:35,000 --> 00:42:35,000
UTF 16

1590
00:42:35,000 --> 00:42:37,000
UTF 32 这种东西

1591
00:42:37,000 --> 00:42:37,000
然后

1592
00:42:37,000 --> 00:42:39,000
Gb 2312 这个标

1593
00:42:39,000 --> 00:42:41,000
这个这个这个规范里面

1594
00:42:41,000 --> 00:42:44,000
那个区位和区位码

1595
00:42:44,000 --> 00:42:46,000
其实对应 unicode 的那个 code point

1596
00:42:46,000 --> 00:42:48,000
Gb 2312 就相当于一个只有一个编码方案

1597
00:42:48,000 --> 00:42:50,000
只有 UTF 16 编码方案的 unicode

1598
00:42:50,000 --> 00:42:52,000
对

1599
00:42:52,000 --> 00:42:53,000
没错

1600
00:42:53,000 --> 00:42:53,000
没错

1601
00:42:53,000 --> 00:42:53,000
嗯

1602
00:42:53,000 --> 00:42:54,000
对

1603
00:42:54,000 --> 00:42:54,000
嗯

1604
00:42:54,000 --> 00:42:55,000
OK

1605
00:42:55,000 --> 00:43:03,000
现在来讲这个 Gb 2312 作为编码方式的时候

1606
00:43:03,000 --> 00:43:03,000
它怎么玩的吗

1607
00:43:03,000 --> 00:43:05,000
作为编码方式来怎么

1608
00:43:05,000 --> 00:43:07,000
就其实

1609
00:43:07,000 --> 00:43:08,000
就是每个

1610
00:43:08,000 --> 00:43:10,000
就其实跟 UTF 16 一样

1611
00:43:10,000 --> 00:43:13,000
就是每个汉字和符号都需要两个字节

1612
00:43:13,000 --> 00:43:14,000
因为一个字节放不下

1613
00:43:14,000 --> 00:43:17,000
然后第一个字节叫高位

1614
00:43:17,000 --> 00:43:18,000
第二个字叫低位

1615
00:43:18,000 --> 00:43:21,000
然后高位

1616
00:43:21,000 --> 00:43:23,000
高位有一个高位

1617
00:43:23,000 --> 00:43:24,000
高位有一个对应的方法

1618
00:43:24,000 --> 00:43:25,000
就是把一一

1619
00:43:25,000 --> 00:43:28,000
一共用了 87 个区

1620
00:43:28,000 --> 00:43:30,000
就是 96 区没有用完

1621
00:43:30,000 --> 00:43:33,000
然后从一区到 87 区

1622
00:43:33,000 --> 00:43:36,000
那个二级汉字加上特殊符号就已经排完了

1623
00:43:36,000 --> 00:43:40,000
所以他就把那个呃

1624
00:43:40,000 --> 00:43:41,000
字节 0 X 1

1625
00:43:41,000 --> 00:43:42,000
0 XA 0

1626
00:43:42,000 --> 00:43:43,000
就是

1627
00:43:43,000 --> 00:43:46,000
16 进制的 A 0

1628
00:43:46,000 --> 00:43:48,000
加上 11 到 87

1629
00:43:48,000 --> 00:43:51,000
然后低位字节是 1 到 94

1630
00:43:51,000 --> 00:43:52,000
加上 0 XA 0

1631
00:43:52,000 --> 00:43:55,000
所以如果你有一个呃

1632
00:43:55,000 --> 00:43:57,000
所以 0 XA 0

1633
00:43:57,000 --> 00:43:58,000
0 XA 1

1634
00:43:58,000 --> 00:43:59,000
0 XA 1

1635
00:43:59,000 --> 00:44:00,000
就是相当于呃

1636
00:44:00,000 --> 00:44:01,000
第一区的第一位

1637
00:44:01,000 --> 00:44:03,000
就这么来的

1638
00:44:03,000 --> 00:44:05,000
然后高位字节呃

1639
00:44:05,000 --> 00:44:09,000
就是相当于 0 XB 0 到 0 XF 7

1640
00:44:09,000 --> 00:44:12,000
低位字节是 0 XA 1 到 0 XFE

1641
00:44:12,000 --> 00:44:16,000
然后一共有 6768 个马位

1642
00:44:16,000 --> 00:44:19,000
然后有一些是空的

1643
00:44:19,000 --> 00:44:19,000
对

1644
00:44:19,000 --> 00:44:24,000
所以他这个高位字节和低位字节

1645
00:44:24,000 --> 00:44:26,000
其实并没和那个区

1646
00:44:26,000 --> 00:44:26,000
没关系

1647
00:44:26,000 --> 00:44:27,000
没有什么关系

1648
00:44:27,000 --> 00:44:28,000
对高位字和低位字节

1649
00:44:28,000 --> 00:44:31,000
完全对应于呃

1650
00:44:31,000 --> 00:44:32,000
呃

1651
00:44:32,000 --> 00:44:34,000
区号加上呃

1652
00:44:34,000 --> 00:44:36,000
呃

1653
00:44:36,000 --> 00:44:38,000
相当于 X 和 Y

1654
00:44:38,000 --> 00:44:39,000
对

1655
00:44:39,000 --> 00:44:41,000
相当于 X 和 Y

1656
00:44:41,000 --> 00:44:41,000
就说

1657
00:44:41,000 --> 00:44:42,000
就两个

1658
00:44:42,000 --> 00:44:43,000
因为那个表

1659
00:44:43,000 --> 00:44:44,000
那个我们刚才讲那个 tree

1660
00:44:44,000 --> 00:44:45,000
它是一个方格

1661
00:44:45,000 --> 00:44:47,000
就是 94 x 94

1662
00:44:47,000 --> 00:44:49,000
所以刚刚我如果用两个字节来表示

1663
00:44:49,000 --> 00:44:51,000
就高位字节对应的是行

1664
00:44:51,000 --> 00:44:53,000
然后低位字节对应的是列

1665
00:44:53,000 --> 00:44:54,000
是这样

1666
00:44:54,000 --> 00:44:56,000
是这个意思对吧

1667
00:44:56,000 --> 00:45:00,000
就是实际上是一个 87 到 94 的长方形区

1668
00:45:00,000 --> 00:45:00,000
哦

1669
00:45:00,000 --> 00:45:02,000
有几个区是没有用的对吧

1670
00:45:02,000 --> 00:45:03,000
对

1671
00:45:03,000 --> 00:45:05,000
87 以后到 94 区就没有用了

1672
00:45:05,000 --> 00:45:07,000
所以其实并不是一个方

1673
00:45:07,000 --> 00:45:08,000
90 x 94 方的格子

1674
00:45:08,000 --> 00:45:09,000
而是

1675
00:45:09,000 --> 00:45:10,000
它没有填满

1676
00:45:10,000 --> 00:45:10,000
有空

1677
00:45:10,000 --> 00:45:10,000
对

1678
00:45:10,000 --> 00:45:11,000
它没有

1679
00:45:11,000 --> 00:45:12,000
就有座位控着

1680
00:45:12,000 --> 00:45:14,000
但但大致上可以认为高位字节表示行

1681
00:45:14,000 --> 00:45:16,000
然后低位字节表示行

1682
00:45:16,000 --> 00:45:19,000
然后中间有些特殊的那个空格的地方

1683
00:45:19,000 --> 00:45:19,000
对

1684
00:45:19,000 --> 00:45:23,000
然后这个每个都要加上这个 16 进制的 A 0

1685
00:45:23,000 --> 00:45:27,000
就是可以转换为 ASCII 的那个就是第一位置为 1 的时候嘛

1686
00:45:27,000 --> 00:45:29,000
就 128 起

1687
00:45:29,000 --> 00:45:30,000
OK

1688
00:45:30,000 --> 00:45:31,000
make sense

1689
00:45:31,000 --> 00:45:36,000
刚才说了 2312 它只有 6000 多个汉字不够用嘛

1690
00:45:36,000 --> 00:45:38,000
所以后来就又进行了扩展

1691
00:45:38,000 --> 00:45:41,000
后面就有什么 GBK

1692
00:45:41,000 --> 00:45:43,000
然后后面还有 GB 18030 嘛

1693
00:45:43,000 --> 00:45:44,000
对

1694
00:45:44,000 --> 00:45:46,000
我们小时候有很多同学的那个名字

1695
00:45:46,000 --> 00:45:48,000
就是起一个冷屁的名字

1696
00:45:48,000 --> 00:45:49,000
然后到时候去录什么准考证

1697
00:45:49,000 --> 00:45:51,000
烂七八糟就录不出来

1698
00:45:51,000 --> 00:45:52,000
嗯

1699
00:45:52,000 --> 00:45:53,000
就是因为这个派

1700
00:45:53,000 --> 00:45:55,000
比如说啊

1701
00:45:55,000 --> 00:45:57,000
什么两个吉祥的吉念哲嘛

1702
00:45:57,000 --> 00:45:58,000
嗯

1703
00:45:58,000 --> 00:46:00,000
陶哲的诺

1704
00:46:00,000 --> 00:46:00,000
对

1705
00:46:00,000 --> 00:46:01,000
对

1706
00:46:01,000 --> 00:46:05,000
这个字原来是作为哲学的哲的一体字

1707
00:46:05,000 --> 00:46:05,000
废弃不用的

1708
00:46:05,000 --> 00:46:06,000
所以呢

1709
00:46:06,000 --> 00:46:08,000
在当时的那个 GB 2312 里面呢

1710
00:46:08,000 --> 00:46:09,000
是没有这个字的

1711
00:46:09,000 --> 00:46:11,000
OK

1712
00:46:11,000 --> 00:46:13,000
我当时有个同学叫什么

1713
00:46:13,000 --> 00:46:14,000
叫

1714
00:46:14,000 --> 00:46:16,000
他

1715
00:46:16,000 --> 00:46:18,000
什么立威的

1716
00:46:18,000 --> 00:46:20,000
他中间有一个那个立字好像是

1717
00:46:20,000 --> 00:46:23,000
木字旁右边有一个

1718
00:46:23,000 --> 00:46:25,000
呃

1719
00:46:25,000 --> 00:46:26,000
看起来像微海的微

1720
00:46:26,000 --> 00:46:27,000
但是下面是个乐

1721
00:46:27,000 --> 00:46:30,000
就很冷屁的一个字

1722
00:46:30,000 --> 00:46:31,000
每次录录录录录

1723
00:46:31,000 --> 00:46:32,000
他就叫段

1724
00:46:32,000 --> 00:46:33,000
空格飞

1725
00:46:33,000 --> 00:46:34,000
哈哈哈哈

1726
00:46:34,000 --> 00:46:36,000
好可怜啊

1727
00:46:36,000 --> 00:46:38,000
哎当时我记得就是为了解决这个

1728
00:46:38,000 --> 00:46:40,000
用 GB 2312 这个字符

1729
00:46:40,000 --> 00:46:42,000
基不勾用这种生辟字

1730
00:46:42,000 --> 00:46:42,000
很多人

1731
00:46:42,000 --> 00:46:43,000
呃

1732
00:46:43,000 --> 00:46:44,000
是用那个

1733
00:46:44,000 --> 00:46:47,000
卫图的方式是表示那些生辟字的

1734
00:46:47,000 --> 00:46:48,000
就直接画个图写

1735
00:46:48,000 --> 00:46:48,000
还有人手写吧

1736
00:46:48,000 --> 00:46:49,000
不是

1737
00:46:49,000 --> 00:46:50,000
就是机器打不出来吗

1738
00:46:50,000 --> 00:46:51,000
就随随后面手写

1739
00:46:51,000 --> 00:46:52,000
不

1740
00:46:52,000 --> 00:46:53,000
再补一个是吧

1741
00:46:53,000 --> 00:46:53,000
嗯

1742
00:46:53,000 --> 00:46:54,000
啊

1743
00:46:54,000 --> 00:46:55,000
对

1744
00:46:55,000 --> 00:46:56,000
这也是这也是个解决方

1745
00:46:56,000 --> 00:46:58,000
和那个用卫图的方式差不多

1746
00:46:58,000 --> 00:46:59,000
就

1747
00:46:59,000 --> 00:47:00,000
那有一个问题

1748
00:47:00,000 --> 00:47:02,000
就 GBK 和 GB 18030

1749
00:47:02,000 --> 00:47:04,000
也是用两个位的吗

1750
00:47:04,000 --> 00:47:06,000
就是双字节

1751
00:47:06,000 --> 00:47:08,000
GB 18030 本身

1752
00:47:08,000 --> 00:47:09,000
两个字节够吗

1753
00:47:09,000 --> 00:47:11,000
应该要用四字节

1754
00:47:11,000 --> 00:47:12,000
应该是

1755
00:47:12,000 --> 00:47:12,000
对

1756
00:47:12,000 --> 00:47:15,000
GB 130 它是四字节的

1757
00:47:15,000 --> 00:47:15,000
那 GBK 呢

1758
00:47:15,000 --> 00:47:18,000
如果按照刚才那个 GB 2312 的编码方式

1759
00:47:18,000 --> 00:47:20,000
那我们高位都不用都流出来

1760
00:47:20,000 --> 00:47:21,000
就是就每

1761
00:47:21,000 --> 00:47:24,000
你两个字节其实只有一共 14 个位可以用

1762
00:47:24,000 --> 00:47:25,000
14 个位

1763
00:47:25,000 --> 00:47:28,000
2 的 14 次方应该是 16384 个字

1764
00:47:28,000 --> 00:47:32,000
然后 GBK 其实收入了 21880

1765
00:47:32,000 --> 00:47:33,000
886 个字

1766
00:47:33,000 --> 00:47:34,000
其实肯定是不够用的呀

1767
00:47:34,000 --> 00:47:35,000
嗯

1768
00:47:35,000 --> 00:47:35,000
嗯

1769
00:47:35,000 --> 00:47:37,000
所以怎么解决这个问题呢

1770
00:47:37,000 --> 00:47:38,000
嗯

1771
00:47:38,000 --> 00:47:39,000
所以刚才我那个算法不对

1772
00:47:39,000 --> 00:47:40,000
他那个双字节

1773
00:47:40,000 --> 00:47:42,000
他只算第一个字节的那个

1774
00:47:42,000 --> 00:47:44,000
那个第一位是不能用的

1775
00:47:44,000 --> 00:47:44,000
其实是

1776
00:47:44,000 --> 00:47:48,000
应该有 15 个位可以用

1777
00:47:48,000 --> 00:47:48,000
15 个位的话

1778
00:47:48,000 --> 00:47:49,000
其实可以用到

1779
00:47:49,000 --> 00:47:51,000
32,000 多个

1780
00:47:51,000 --> 00:47:52,000
那个

1781
00:47:52,000 --> 00:47:52,000
那个

1782
00:47:52,000 --> 00:47:53,000
那个叫什么

1783
00:47:53,000 --> 00:47:55,000
所以 GBK 是双字节的

1784
00:47:55,000 --> 00:47:57,000
然后 GB 18030 的话

1785
00:47:57,000 --> 00:47:59,000
是双字节四字节会用的

1786
00:47:59,000 --> 00:48:00,000
对

1787
00:48:00,000 --> 00:48:01,000
GBK 本身

1788
00:48:01,000 --> 00:48:03,000
它不是一个正式的 GB

1789
00:48:03,000 --> 00:48:05,000
GBK 是微软搞的

1790
00:48:05,000 --> 00:48:05,000
是不是

1791
00:48:05,000 --> 00:48:06,000
对

1792
00:48:06,000 --> 00:48:07,000
嗯

1793
00:48:07,000 --> 00:48:08,000
它就是内码是扩

1794
00:48:08,000 --> 00:48:10,000
K 是扩展的扩嘛

1795
00:48:10,000 --> 00:48:10,000
嗯

1796
00:48:10,000 --> 00:48:11,000
但是它

1797
00:48:11,000 --> 00:48:11,000
它本身

1798
00:48:11,000 --> 00:48:13,000
扩展的扩

1799
00:48:13,000 --> 00:48:13,000
但是就是

1800
00:48:13,000 --> 00:48:15,000
汉字内码扩展规范嘛

1801
00:48:15,000 --> 00:48:16,000
但是它本身

1802
00:48:16,000 --> 00:48:17,000
它没有号

1803
00:48:17,000 --> 00:48:19,000
其实因为它不是一个正式的 GB

1804
00:48:19,000 --> 00:48:20,000
对

1805
00:48:20,000 --> 00:48:21,000
GB 是国标的意思吗

1806
00:48:21,000 --> 00:48:23,000
它不是一个正式的国标文件

1807
00:48:23,000 --> 00:48:23,000
对

1808
00:48:23,000 --> 00:48:25,000
其实我们说 GBK 的时候

1809
00:48:25,000 --> 00:48:27,000
大多数指的是

1810
00:48:27,000 --> 00:48:28,000
它的那个字符机标准

1811
00:48:28,000 --> 00:48:29,000
而不是指

1812
00:48:29,000 --> 00:48:30,000
它的编码方式

1813
00:48:30,000 --> 00:48:32,000
那么 GBK 这个字符机

1814
00:48:32,000 --> 00:48:33,000
你完全可以用

1815
00:48:33,000 --> 00:48:35,000
Unical 的来给它编码

1816
00:48:35,000 --> 00:48:35,000
那

1817
00:48:35,000 --> 00:48:39,000
那 GBK 和 GB 2312 是什么关系

1818
00:48:39,000 --> 00:48:39,000
呃

1819
00:48:39,000 --> 00:48:40,000
GB 2312 呢

1820
00:48:40,000 --> 00:48:42,000
它首先定义了一个字符机

1821
00:48:42,000 --> 00:48:44,000
就定了一个字符机的标准

1822
00:48:44,000 --> 00:48:45,000
同时呢

1823
00:48:45,000 --> 00:48:47,000
它还给了一套编码方案

1824
00:48:47,000 --> 00:48:48,000
OK

1825
00:48:48,000 --> 00:48:51,000
但是同时 GB 2312 的那个字符机

1826
00:48:51,000 --> 00:48:53,000
我们也可以用 Unical 的来给它编码

1827
00:48:53,000 --> 00:48:53,000
也就是说

1828
00:48:53,000 --> 00:48:54,000
一个字符机

1829
00:48:54,000 --> 00:48:58,000
它可是可以用很多种编码方式来实现它的

1830
00:48:58,000 --> 00:49:00,000
同时一种编码方式

1831
00:49:00,000 --> 00:49:03,000
它也是可以去编很多个不同的字符机的

1832
00:49:03,000 --> 00:49:05,000
就它们并不是一个完全一一对应的关系

1833
00:49:05,000 --> 00:49:06,000
对

1834
00:49:06,000 --> 00:49:09,000
所以其实我们在讨论这些的时候

1835
00:49:09,000 --> 00:49:11,000
只要时刻的区分清楚

1836
00:49:11,000 --> 00:49:13,000
我们是在说一个字符机

1837
00:49:13,000 --> 00:49:15,000
还是在说一个编码方式的话

1838
00:49:15,000 --> 00:49:16,000
就不太会混淆

1839
00:49:16,000 --> 00:49:18,000
嗯嗯嗯

1840
00:49:18,000 --> 00:49:18,000
好

1841
00:49:18,000 --> 00:49:20,000
单从字符机的来讲的话

1842
00:49:20,000 --> 00:49:20,000
所以呢

1843
00:49:20,000 --> 00:49:23,000
就现在就是大家在买字体的时候

1844
00:49:23,000 --> 00:49:25,000
就经常会说这个字体显示不出来嘛

1845
00:49:25,000 --> 00:49:26,000
那在做

1846
00:49:26,000 --> 00:49:27,000
在

1847
00:49:27,000 --> 00:49:29,000
中国的字体厂商的话

1848
00:49:29,000 --> 00:49:31,000
肯定它是首先是要

1849
00:49:31,000 --> 00:49:33,000
做 GB 2312 里面的

1850
00:49:33,000 --> 00:49:34,000
它那个字

1851
00:49:34,000 --> 00:49:34,000
呃

1852
00:49:34,000 --> 00:49:36,000
一共是 6000 多个字嘛

1853
00:49:36,000 --> 00:49:37,000
它是先做这个

1854
00:49:37,000 --> 00:49:37,000
然后

1855
00:49:37,000 --> 00:49:39,000
就那些是必须支持的

1856
00:49:39,000 --> 00:49:41,000
对一般来讲就是这是最低的门槛

1857
00:49:41,000 --> 00:49:43,000
嗯

1858
00:49:43,000 --> 00:49:45,000
然后后面有支持 GBK 的

1859
00:49:45,000 --> 00:49:46,000
的字库

1860
00:49:46,000 --> 00:49:48,000
然后有支持

1861
00:49:48,000 --> 00:49:48,000
呃

1862
00:49:48,000 --> 00:49:50,000
GB 18030 的字库

1863
00:49:50,000 --> 00:49:50,000
说实话

1864
00:49:50,000 --> 00:49:51,000
GB 18

1865
00:49:51,000 --> 00:49:52,000
支持 18030 的字库

1866
00:49:52,000 --> 00:49:53,000
还非常少

1867
00:49:53,000 --> 00:49:53,000
现在

1868
00:49:53,000 --> 00:49:55,000
字实在是太多了

1869
00:49:55,000 --> 00:49:56,000
对

1870
00:49:56,000 --> 00:49:57,000
完整支持的非常少

1871
00:49:57,000 --> 00:49:58,000
对

1872
00:49:58,000 --> 00:49:59,000
反正是 6 万 6 万多了

1873
00:49:59,000 --> 00:50:00,000
所以那时候后在做的时候

1874
00:50:00,000 --> 00:50:04,000
把那个什么少数民族兄弟兄弟民族的一些文字

1875
00:50:04,000 --> 00:50:05,000
也一起做进去了吗

1876
00:50:05,000 --> 00:50:07,000
对

1877
00:50:07,000 --> 00:50:10,000
一个不小心可能就超过了

1878
00:50:10,000 --> 00:50:11,000
OpenType 单个文件的

1879
00:50:11,000 --> 00:50:13,000
Glyph 的限制

1880
00:50:13,000 --> 00:50:14,000
对

1881
00:50:14,000 --> 00:50:15,000
因为一个 OpenType

1882
00:50:15,000 --> 00:50:16,000
它是用一个

1883
00:50:16,000 --> 00:50:18,000
Unsigned Short 的

1884
00:50:18,000 --> 00:50:19,000
所以只有 6 万

1885
00:50:19,000 --> 00:50:21,000
也只有 6 万多个吧

1886
00:50:21,000 --> 00:50:22,000
就应该是 655 多少

1887
00:50:22,000 --> 00:50:24,000
6535

1888
00:50:24,000 --> 00:50:25,000
对

1889
00:50:25,000 --> 00:50:25,000
对

1890
00:50:25,000 --> 00:50:25,000
对

1891
00:50:25,000 --> 00:50:26,000
6536

1892
00:50:26,000 --> 00:50:26,000
对

1893
00:50:26,000 --> 00:50:28,000
很有可能就放不下

1894
00:50:28,000 --> 00:50:30,000
然后再从编码方式的说

1895
00:50:30,000 --> 00:50:31,000
刚才我们也讨论了

1896
00:50:31,000 --> 00:50:33,000
那 GB 2312 和 GBK 呢

1897
00:50:33,000 --> 00:50:35,000
都是双字截的字符级的

1898
00:50:35,000 --> 00:50:37,000
那 GB 18030 呢

1899
00:50:37,000 --> 00:50:39,000
是单字截

1900
00:50:39,000 --> 00:50:40,000
双字截

1901
00:50:40,000 --> 00:50:40,000
四字截

1902
00:50:40,000 --> 00:50:42,000
就是它是变长的

1903
00:50:42,000 --> 00:50:43,000
嗯

1904
00:50:43,000 --> 00:50:44,000
这个思想的话

1905
00:50:44,000 --> 00:50:45,000
跟 Unicode 就是一样的嘛

1906
00:50:45,000 --> 00:50:47,000
哎

1907
00:50:47,000 --> 00:50:48,000
我问一个问题啊

1908
00:50:48,000 --> 00:50:50,000
就是 GB 18030 那个码点

1909
00:50:50,000 --> 00:50:52,000
和 Unicode 的码点是重合的吗

1910
00:50:52,000 --> 00:50:53,000
不一样

1911
00:50:53,000 --> 00:50:54,000
也不一样

1912
00:50:54,000 --> 00:50:55,000
就后来是那个

1913
00:50:55,000 --> 00:50:57,000
就是后面要讲那个 CGK Unification

1914
00:50:57,000 --> 00:50:58,000
对

1915
00:50:58,000 --> 00:50:59,000
所以就是同样一个字的话

1916
00:50:59,000 --> 00:51:00,000
在 GB 里面

1917
00:51:00,000 --> 00:51:01,000
它是这个座位

1918
00:51:01,000 --> 00:51:02,000
它是这个座位

1919
00:51:02,000 --> 00:51:03,000
要用这个编码

1920
00:51:03,000 --> 00:51:04,000
但是呢

1921
00:51:04,000 --> 00:51:05,000
在在 Unicode 的话

1922
00:51:05,000 --> 00:51:06,000
它是另外一个座位

1923
00:51:06,000 --> 00:51:07,000
要另外一个编码

1924
00:51:07,000 --> 00:51:09,000
那那 GB 2312

1925
00:51:09,000 --> 00:51:10,000
GBK 和 GB 18030

1926
00:51:10,000 --> 00:51:12,000
它们是一个超级的关系吗

1927
00:51:12,000 --> 00:51:13,000
还是也不一样

1928
00:51:13,000 --> 00:51:15,000
基本上是互相兼容的

1929
00:51:15,000 --> 00:51:16,000
就是向后兼容

1930
00:51:16,000 --> 00:51:16,000
对

1931
00:51:16,000 --> 00:51:17,000
向后兼容的

1932
00:51:17,000 --> 00:51:19,000
就是 GBK 里面

1933
00:51:19,000 --> 00:51:22,000
包含 GB 2312 那些字

1934
00:51:22,000 --> 00:51:23,000
全部的字

1935
00:51:23,000 --> 00:51:24,000
在那个对应的位置上

1936
00:51:24,000 --> 00:51:26,000
然后 GB 18030

1937
00:51:26,000 --> 00:51:28,000
是包含 GBK 全部的字

1938
00:51:28,000 --> 00:51:29,000
并且也是在那个位置上

1939
00:51:29,000 --> 00:51:30,000
对

1940
00:51:30,000 --> 00:51:31,000
对

1941
00:51:31,000 --> 00:51:33,000
那就是一个超级

1942
00:51:33,000 --> 00:51:34,000
一个比一个大的概念

1943
00:51:34,000 --> 00:51:35,000
对

1944
00:51:35,000 --> 00:51:36,000
对对

1945
00:51:36,000 --> 00:51:39,000
在这个 GB 的这一系列

1946
00:51:39,000 --> 00:51:40,000
字符集里面

1947
00:51:40,000 --> 00:51:42,000
最坑的只有 GB 2345

1948
00:51:42,000 --> 00:51:42,000
这个标准

1949
00:51:42,000 --> 00:51:45,000
那么其他的都是一个

1950
00:51:45,000 --> 00:51:46,000
就是越向后

1951
00:51:46,000 --> 00:51:47,000
越往前兼容

1952
00:51:47,000 --> 00:51:48,000
就是说

1953
00:51:48,000 --> 00:51:50,000
后来的肯定是兼容前来的

1954
00:51:50,000 --> 00:51:52,000
所以我们在这里有机会

1955
00:51:52,000 --> 00:51:54,000
一定要说一下 GB 12345

1956
00:51:54,000 --> 00:51:55,000
这是什么

1957
00:51:55,000 --> 00:51:58,000
一个特别坑

1958
00:51:58,000 --> 00:51:59,000
GB 12345

1959
00:51:59,000 --> 00:52:00,000
我从来没有听过这个东西

1960
00:52:00,000 --> 00:52:01,000
对

1961
00:52:01,000 --> 00:52:04,000
GB 12345 是那个

1962
00:52:04,000 --> 00:52:06,000
字体圈的一个噩梦

1963
00:52:06,000 --> 00:52:08,000
都说不到这个东西

1964
00:52:08,000 --> 00:52:10,000
就经常说的就是那个什么

1965
00:52:10,000 --> 00:52:12,000
繁体字字符集

1966
00:52:12,000 --> 00:52:14,000
它其实编码的就是跟那个

1967
00:52:14,000 --> 00:52:16,000
2312 是一样的

1968
00:52:16,000 --> 00:52:20,000
可以看成 GB 2312 的繁体版本

1969
00:52:20,000 --> 00:52:23,000
共收入又 6866 个汉字

1970
00:52:23,000 --> 00:52:23,000
对

1971
00:52:23,000 --> 00:52:25,000
但多了几个

1972
00:52:25,000 --> 00:52:27,000
因为大家知道就是繁简

1973
00:52:27,000 --> 00:52:29,000
不是一一对应的

1974
00:52:29,000 --> 00:52:29,000
没错

1975
00:52:29,000 --> 00:52:31,000
那在汉字在简化的时候

1976
00:52:31,000 --> 00:52:33,000
一般是多繁对

1977
00:52:33,000 --> 00:52:35,000
把好多个繁体字

1978
00:52:35,000 --> 00:52:37,000
同时简化成一个简体字

1979
00:52:37,000 --> 00:52:41,000
所以原来他就是在 GB 2312

1980
00:52:41,000 --> 00:52:43,000
是定的是简体字嘛

1981
00:52:43,000 --> 00:52:45,000
那他改成 12345 的时候

1982
00:52:45,000 --> 00:52:47,000
他自他要写繁体字

1983
00:52:47,000 --> 00:52:48,000
他就要变多嘛

1984
00:52:48,000 --> 00:52:48,000
对

1985
00:52:48,000 --> 00:52:50,000
但是这个一繁

1986
00:52:50,000 --> 00:52:52,000
多繁对一简的时候怎么办呢

1987
00:52:52,000 --> 00:52:54,000
他就会挑选一个

1988
00:52:54,000 --> 00:52:56,000
就是简体字

1989
00:52:56,000 --> 00:52:57,000
对应的繁体字先按上去

1990
00:52:57,000 --> 00:52:59,000
然后剩下的那些

1991
00:52:59,000 --> 00:53:00,000
剩下来的繁体字

1992
00:53:00,000 --> 00:53:02,000
他统一放到最后

1993
00:53:02,000 --> 00:53:04,000
马位上的统一放到最后

1994
00:53:04,000 --> 00:53:06,000
就是之前那个说的那些空位的那些地方

1995
00:53:06,000 --> 00:53:07,000
对

1996
00:53:07,000 --> 00:53:10,000
简繁转化这里可能要提一下

1997
00:53:10,000 --> 00:53:11,000
刚才说多繁对一简

1998
00:53:11,000 --> 00:53:12,000
其实也有一简对多繁

1999
00:53:12,000 --> 00:53:13,000
就是多

2000
00:53:13,000 --> 00:53:14,000
我说错

2001
00:53:14,000 --> 00:53:15,000
就是

2002
00:53:15,000 --> 00:53:17,000
一繁对多繁是什么

2003
00:53:17,000 --> 00:53:17,000
你想要说

2004
00:53:17,000 --> 00:53:20,000
一简对多繁是非常常见的

2005
00:53:20,000 --> 00:53:24,000
但是一繁对多繁的话

2006
00:53:24,000 --> 00:53:26,000
它其实往往是一个一体字之间的

2007
00:53:26,000 --> 00:53:26,000
对

2008
00:53:26,000 --> 00:53:27,000
但是的确也有

2009
00:53:27,000 --> 00:53:28,000
相互的关系

2010
00:53:28,000 --> 00:53:28,000
也有

2011
00:53:28,000 --> 00:53:29,000
它不是一个

2012
00:53:29,000 --> 00:53:30,000
对

2013
00:53:30,000 --> 00:53:33,000
这个数学上怎么描述这种函数的概念来的

2014
00:53:33,000 --> 00:53:33,000
我一下忘了

2015
00:53:33,000 --> 00:53:34,000
这不是函数

2016
00:53:34,000 --> 00:53:34,000
单摄

2017
00:53:34,000 --> 00:53:36,000
不是一个单摄

2018
00:53:36,000 --> 00:53:37,000
对

2019
00:53:37,000 --> 00:53:39,000
不是单摄的一个概念

2020
00:53:39,000 --> 00:53:40,000
一繁对多繁

2021
00:53:40,000 --> 00:53:42,000
比如说乾坤的钱

2022
00:53:42,000 --> 00:53:43,000
对

2023
00:53:43,000 --> 00:53:44,000
对

2024
00:53:44,000 --> 00:53:45,000
在繁体字里的话

2025
00:53:45,000 --> 00:53:46,000
它可能是干

2026
00:53:46,000 --> 00:53:47,000
也可能是钱

2027
00:53:47,000 --> 00:53:48,000
它是一个多因字

2028
00:53:48,000 --> 00:53:51,000
但是对到简体的就跟

2029
00:53:51,000 --> 00:53:52,000
因为它用途不同

2030
00:53:52,000 --> 00:53:54,000
就把它分化成两种不同的写法了

2031
00:53:54,000 --> 00:53:55,000
对

2032
00:53:55,000 --> 00:53:57,000
它把干的这个时候呢

2033
00:53:57,000 --> 00:53:58,000
对应到另外一个字上去了嘛

2034
00:53:58,000 --> 00:53:59,000
所以呢

2035
00:53:59,000 --> 00:54:01,000
这个多因字就变成了一个单因子

2036
00:54:01,000 --> 00:54:02,000
专指乾坤的钱

2037
00:54:02,000 --> 00:54:04,000
所以其实很多那个

2038
00:54:04,000 --> 00:54:06,000
很多那个朋友写的那种

2039
00:54:06,000 --> 00:54:08,000
就是网页在线的什么减繁转化工具

2040
00:54:08,000 --> 00:54:10,000
都是不合格的

2041
00:54:10,000 --> 00:54:10,000
对

2042
00:54:10,000 --> 00:54:12,000
如果你的算法很简单的话

2043
00:54:12,000 --> 00:54:13,000
确实回书册

2044
00:54:13,000 --> 00:54:14,000
就它很多

2045
00:54:14,000 --> 00:54:15,000
很多人都是直接拿一个那个

2046
00:54:15,000 --> 00:54:16,000
就是那个

2047
00:54:16,000 --> 00:54:18,000
那个 dictionary 的表

2048
00:54:18,000 --> 00:54:19,000
就是一

2049
00:54:19,000 --> 00:54:20,000
这个换成那个就完了嘛

2050
00:54:20,000 --> 00:54:22,000
但其实是要根据语境和那个

2051
00:54:22,000 --> 00:54:24,000
前后文来来决定的

2052
00:54:24,000 --> 00:54:25,000
对吧

2053
00:54:25,000 --> 00:54:27,000
乾坤换成干坤呢

2054
00:54:27,000 --> 00:54:28,000
有还蛮多的

2055
00:54:28,000 --> 00:54:31,000
然后说到这个 GBR

2056
00:54:31,000 --> 00:54:33,000
2345 的字体产品的话

2057
00:54:33,000 --> 00:54:34,000
我们也必须要说一下

2058
00:54:34,000 --> 00:54:34,000
对吧

2059
00:54:34,000 --> 00:54:36,000
因为内码是一样的嘛

2060
00:54:36,000 --> 00:54:38,000
所以在国内的一些

2061
00:54:38,000 --> 00:54:39,000
大的字体产商

2062
00:54:39,000 --> 00:54:40,000
他们曾经就是有

2063
00:54:40,000 --> 00:54:42,000
到现在也有

2064
00:54:42,000 --> 00:54:44,000
他们所谓的繁体汉字的字库

2065
00:54:44,000 --> 00:54:49,000
就以换字库的形式来实现繁体

2066
00:54:49,000 --> 00:54:50,000
而不没有换内码

2067
00:54:50,000 --> 00:54:52,000
就是因为那个 GBR 2345 的问题嘛

2068
00:54:52,000 --> 00:54:53,000
对

2069
00:54:53,000 --> 00:54:53,000
所以呢

2070
00:54:53,000 --> 00:54:56,000
就是因为他们用 12345 来做编码嘛

2071
00:54:56,000 --> 00:54:57,000
对

2072
00:54:57,000 --> 00:54:59,000
它只是在表面

2073
00:54:59,000 --> 00:55:02,000
因为到了用字库显示

2074
00:55:02,000 --> 00:55:04,000
它其实是最后显示的层级了嘛

2075
00:55:04,000 --> 00:55:06,000
它码其实没变嘛

2076
00:55:06,000 --> 00:55:06,000
对

2077
00:55:06,000 --> 00:55:07,000
嗯

2078
00:55:07,000 --> 00:55:08,000
这样的话

2079
00:55:08,000 --> 00:55:11,000
这样做出来的 GBR 2345 的繁体字库

2080
00:55:11,000 --> 00:55:14,000
就不能解决

2081
00:55:14,000 --> 00:55:15,000
一简对多反的问题

2082
00:55:15,000 --> 00:55:17,000
然后就经常出错字

2083
00:55:17,000 --> 00:55:18,000
比如说

2084
00:55:18,000 --> 00:55:23,000
永和九年岁在魁丑嘛

2085
00:55:23,000 --> 00:55:25,000
那个丑子就变成了美丑的丑了

2086
00:55:25,000 --> 00:55:25,000
所以呢

2087
00:55:25,000 --> 00:55:27,000
我曾经在我的微博上讲

2088
00:55:27,000 --> 00:55:30,000
这个如果一个产品

2089
00:55:30,000 --> 00:55:32,000
它一个字库产品

2090
00:55:32,000 --> 00:55:34,000
如果会导致错字的话

2091
00:55:34,000 --> 00:55:35,000
我觉得这是

2092
00:55:35,000 --> 00:55:38,000
这应该讲是一个不及格的产品

2093
00:55:38,000 --> 00:55:39,000
但是它的自我设计方式

2094
00:55:39,000 --> 00:55:40,000
它没有别的解决方案了呀

2095
00:55:40,000 --> 00:55:41,000
对

2096
00:55:41,000 --> 00:55:42,000
所以就是说

2097
00:55:42,000 --> 00:55:42,000
进

2098
00:55:42,000 --> 00:55:47,000
就是应该废除用 GBR 2345 来分装字库

2099
00:55:47,000 --> 00:55:47,000
就那个

2100
00:55:47,000 --> 00:55:49,000
那个本来就是一个 hack

2101
00:55:49,000 --> 00:55:49,000
对

2102
00:55:49,000 --> 00:55:52,000
那是一个固定时期的产物

2103
00:55:52,000 --> 00:55:54,000
而且是一个不成熟的产物

2104
00:55:54,000 --> 00:55:55,000
就过度方案呗

2105
00:55:55,000 --> 00:55:56,000
现在其实都

2106
00:55:56,000 --> 00:55:58,000
就刚刚我们说嘛

2107
00:55:58,000 --> 00:56:00,000
我们都没有听过 GBR 2345 这个规范

2108
00:56:00,000 --> 00:56:01,000
其实应该用的也不多了吧

2109
00:56:01,000 --> 00:56:03,000
对

2110
00:56:03,000 --> 00:56:05,000
就因为国内有几个大厂

2111
00:56:05,000 --> 00:56:08,000
就是大家现在去买繁体字库的话

2112
00:56:08,000 --> 00:56:10,000
有很多就是这样的

2113
00:56:10,000 --> 00:56:10,000
所以呢

2114
00:56:10,000 --> 00:56:12,000
另外一个问题

2115
00:56:12,000 --> 00:56:14,000
就是说繁简转换应该怎么转换

2116
00:56:14,000 --> 00:56:18,000
就不能单纯的就是像用这个 GBR 2345 的字库

2117
00:56:18,000 --> 00:56:21,000
到最后只转字库而没有转码

2118
00:56:21,000 --> 00:56:24,000
我们应该彻头彻尾的把码换掉

2119
00:56:24,000 --> 00:56:26,000
就不能用那种

2120
00:56:26,000 --> 00:56:27,000
dirty 的 hack

2121
00:56:27,000 --> 00:56:30,000
可是就是因为有大厂

2122
00:56:30,000 --> 00:56:32,000
中国的很多大厂的话

2123
00:56:32,000 --> 00:56:34,000
都做了 GBR 2345 的字库

2124
00:56:34,000 --> 00:56:37,000
所以导致现在街头下尾很多错字都是这样

2125
00:56:37,000 --> 00:56:39,000
头头去砍了

2126
00:56:39,000 --> 00:56:42,000
这是名副歧视的文字语啊

2127
00:56:43,000 --> 00:56:47,000
好吧

2128
00:56:47,000 --> 00:56:49,000
那我们终于可以说 UNICOL 的问题了

2129
00:56:49,000 --> 00:56:53,000
Windows 的那个要不要先讲一下

2130
00:56:53,000 --> 00:56:56,000
就为什么世界上会先有 GBK

2131
00:56:56,000 --> 00:57:02,000
就是因为操作系统的发展已经远远超过了国家制定标准的发展

2132
00:57:02,000 --> 00:57:08,000
然后操作系统厂商微软不得不先解决了一个人们必须要解决的痛点

2133
00:57:08,000 --> 00:57:11,000
然后国家才跟上的推出了 GBK

2134
00:57:11,000 --> 00:57:12,000
GBR 2

2135
00:57:12,000 --> 00:57:14,000
什么

2136
00:57:14,000 --> 00:57:15,000
18030

2137
00:57:15,000 --> 00:57:17,000
来取代 GBK

2138
00:57:17,000 --> 00:57:17,000
对

2139
00:57:17,000 --> 00:57:19,000
我觉得从这个侧面其实反映出了

2140
00:57:19,000 --> 00:57:23,000
现在我们已经处在一个接近于那种

2141
00:57:23,000 --> 00:57:26,000
跨国的

2142
00:57:26,000 --> 00:57:27,000
或者怎么说

2143
00:57:27,000 --> 00:57:29,000
从这件事上开始

2144
00:57:29,000 --> 00:57:35,000
跨国的公司取代政府来解决你的一些民生问题的一个时代

2145
00:57:35,000 --> 00:57:38,000
其实就是从这里从这种事情开始

2146
00:57:38,000 --> 00:57:39,000
对

2147
00:57:39,000 --> 00:57:40,000
如果你要说的话

2148
00:57:40,000 --> 00:57:41,000
也肯定就是政治

2149
00:57:41,000 --> 00:57:43,000
政治可能是落后的

2150
00:57:43,000 --> 00:57:45,000
永远都是经济先行的嘛

2151
00:57:45,000 --> 00:57:46,000
所以我们现在

2152
00:57:46,000 --> 00:57:51,000
我意思是在信息时代之前

2153
00:57:51,000 --> 00:58:02,000
很少会有一个公司会在这种跨国的超越政府界限的程度上来改变我们的生活

2154
00:58:02,000 --> 00:58:04,000
大国吧

2155
00:58:04,000 --> 00:58:05,000
小国其实这种事情经常发生

2156
00:58:05,000 --> 00:58:07,000
以前可能是有

2157
00:58:07,000 --> 00:58:09,000
但以前 IBM 之类的

2158
00:58:09,000 --> 00:58:12,000
他们做的事情可能更多的也就是做一个国内标准

2159
00:58:12,000 --> 00:58:14,000
国内工业界的标准

2160
00:58:14,000 --> 00:58:17,000
但是在微软这件事情上

2161
00:58:17,000 --> 00:58:19,000
你由一个外国厂商来搞一个

2162
00:58:19,000 --> 00:58:20,000
你国文字

2163
00:58:20,000 --> 00:58:24,000
这好像还是前所未有的事情

2164
00:58:24,000 --> 00:58:25,000
我觉得

2165
00:58:25,000 --> 00:58:26,000
就是对于小国来说

2166
00:58:26,000 --> 00:58:27,000
这种事情应该经常发生

2167
00:58:27,000 --> 00:58:31,000
就是比如说周边那些可能人口也很少

2168
00:58:31,000 --> 00:58:33,000
占地面积很小的国家

2169
00:58:33,000 --> 00:58:35,000
他真的什么技术都是要由别人提供给他的

2170
00:58:35,000 --> 00:58:36,000
别人先用了

2171
00:58:36,000 --> 00:58:37,000
他才说我们来可以

2172
00:58:37,000 --> 00:58:40,000
就这样支持他了

2173
00:58:40,000 --> 00:58:42,000
就继承标准

2174
00:58:42,000 --> 00:58:44,000
对其实类似的例子

2175
00:58:44,000 --> 00:58:47,000
在这个 CJK 领域并不罕见

2176
00:58:47,000 --> 00:58:49,000
比如说那个自伏级标准

2177
00:58:49,000 --> 00:58:51,000
像香港的那个自伏级标准

2178
00:58:51,000 --> 00:58:54,000
其实主要就是由华康和蒙娜

2179
00:58:54,000 --> 00:58:56,000
两家自体公司来推动

2180
00:58:56,000 --> 00:58:58,000
那么香港显然就是属于一个

2181
00:58:58,000 --> 00:59:02,000
政府在这方面管制力不强的这样一个地区

2182
00:59:02,000 --> 00:59:04,000
就曾经了

2183
00:59:04,000 --> 00:59:06,000
对那么包括像新加坡也是

2184
00:59:06,000 --> 00:59:11,000
新加坡早期是直接照搬了 GB 2312 来作为他们这个文字标准的

2185
00:59:11,000 --> 00:59:14,000
那么后期 unicode 出来之后

2186
00:59:14,000 --> 00:59:20,000
他们又收录了一部分这个号称来源是新加坡的一部分汉字

2187
00:59:20,000 --> 00:59:22,000
但是实际上

2188
00:59:22,000 --> 00:59:24,000
这就是为什么维基百科里没有马新简历

2189
00:59:24,000 --> 00:59:25,000
对但实际上呢

2190
00:59:25,000 --> 00:59:28,000
那个至今好像没有明确的来源说

2191
00:59:28,000 --> 00:59:32,000
这个新加坡来源的汉字是他们政府官方给的

2192
00:59:32,000 --> 00:59:34,000
不对的确是有的

2193
00:59:34,000 --> 00:59:35,000
的确是有的

2194
00:59:35,000 --> 00:59:38,000
就是在新加坡当时他有新加坡的一些简化字

2195
00:59:38,000 --> 00:59:40,000
就和大陆简体不一样的

2196
00:59:40,000 --> 00:59:42,000
有几十个字数量不多

2197
00:59:42,000 --> 00:59:45,000
OK 这里可能要插一下历史啊

2198
00:59:45,000 --> 00:59:47,000
就中国大陆搞简化字的时候

2199
00:59:47,000 --> 00:59:48,000
新加坡也跟着搞了是吧

2200
00:59:48,000 --> 00:59:52,000
当时他们做这个简化的背景和目的是什么

2201
00:59:52,000 --> 00:59:55,000
应该还是为了提高十字率吧

2202
00:59:55,000 --> 00:59:58,000
这个出发点都是类似

2203
00:59:58,000 --> 01:00:02,000
我倒觉得是为了贴合当时

2204
01:00:02,000 --> 01:00:05,000
就中华人中有一个怎么说呢

2205
01:00:05,000 --> 01:00:07,000
就站起来的国家嘛

2206
01:00:07,000 --> 01:00:09,000
不是吗

2207
01:00:09,000 --> 01:00:10,000
就新加坡不是也搞了一个

2208
01:00:10,000 --> 01:00:13,000
不是民族认同感

2209
01:00:13,000 --> 01:00:16,000
而是因为新加坡本来就是一个华人建立了国家

2210
01:00:16,000 --> 01:00:20,000
然后他们看到这个就是母国非常强盛

2211
01:00:20,000 --> 01:00:22,000
就就心向往之吧

2212
01:00:22,000 --> 01:00:23,000
或者说出是出一种

2213
01:00:23,000 --> 01:00:25,000
就是现在也有这种强势文化出现了

2214
01:00:25,000 --> 01:00:28,000
然后这个不是强势文化

2215
01:00:28,000 --> 01:00:30,000
而是一个就是有一个独立自主的国家出现了

2216
01:00:30,000 --> 01:00:33,000
那就采取采用了这样一种

2217
01:00:33,000 --> 01:00:37,000
就出我觉得是出一种民族认同感来做的

2218
01:00:37,000 --> 01:00:41,000
不像那个不就因为现在大家都很讨厌中国的

2219
01:00:41,000 --> 01:00:43,000
那个时候中国刚出现的时候还是比较

2220
01:00:43,000 --> 01:00:45,000
让全球华人为之一阵的

2221
01:00:45,000 --> 01:00:47,000
对有可能有一部分这个因素

2222
01:00:47,000 --> 01:00:50,000
但是我我的观点是认为

2223
01:00:50,000 --> 01:00:52,000
还是因为新加坡其实在那个时期

2224
01:00:52,000 --> 01:00:57,000
并没有这方面的专家来具体的制定一个新的标准的能力

2225
01:00:57,000 --> 01:01:03,000
所以他们情愿去搬一个在文化上面和在这个身份认同上

2226
01:01:03,000 --> 01:01:05,000
都跟他们接近的国家的一个成熟标志

2227
01:01:05,000 --> 01:01:07,000
不问题是你你你这个回避了一点

2228
01:01:07,000 --> 01:01:09,000
就是他们还有一个选择就是什么也不做

2229
01:01:09,000 --> 01:01:11,000
继续用继续用繁体

2230
01:01:11,000 --> 01:01:11,000
为什么一定要

2231
01:01:11,000 --> 01:01:13,000
你是说为什么要做简化

2232
01:01:13,000 --> 01:01:14,000
是吗

2233
01:01:14,000 --> 01:01:15,000
对啊

2234
01:01:15,000 --> 01:01:15,000
OK

2235
01:01:15,000 --> 01:01:17,000
是这样子

2236
01:01:17,000 --> 01:01:18,000
新加坡使用的汉字

2237
01:01:18,000 --> 01:01:21,000
他们在 1969 年

2238
01:01:21,000 --> 01:01:23,000
他们颁布了新加坡的简体字表

2239
01:01:23,000 --> 01:01:26,000
然后这个简体字表 502 个字

2240
01:01:26,000 --> 01:01:29,000
所以他们一般把这个称为 502 简体字表

2241
01:01:29,000 --> 01:01:35,000
然后这个简体字表和中华人民共和国的汉字简化方案是不一样的

2242
01:01:35,000 --> 01:01:39,000
然后里面呢有 67 个字呢是不一样的

2243
01:01:40,000 --> 01:01:40,000
嗯

2244
01:01:40,000 --> 01:01:42,000
看看怎么处理

2245
01:01:42,000 --> 01:01:46,000
然后 1976 年的时候呢

2246
01:01:46,000 --> 01:01:51,000
新加坡又又说他们倒过来完全采用中华人民共和国的简体字

2247
01:01:51,000 --> 01:01:53,000
就把那 67 个也干掉了

2248
01:01:53,000 --> 01:01:54,000
对

2249
01:01:54,000 --> 01:01:54,000
所以呢

2250
01:01:54,000 --> 01:01:57,000
这 67 个字呢就是曾经出现过

2251
01:01:57,000 --> 01:02:00,000
但是呢现在已经不用的字

2252
01:02:00,000 --> 01:02:01,000
嗯

2253
01:02:01,000 --> 01:02:04,000
但是 unicode 的垃圾堆应该也装进去了

2254
01:02:04,000 --> 01:02:04,000
对对对对

2255
01:02:04,000 --> 01:02:05,000
所以要装进去

2256
01:02:05,000 --> 01:02:07,000
对有一些是装进去了

2257
01:02:07,000 --> 01:02:08,000
对全部装进去了

2258
01:02:08,000 --> 01:02:09,000
应该是

2259
01:02:09,000 --> 01:02:12,000
你刚才 Rail 问说那个时候怎么处理

2260
01:02:12,000 --> 01:02:16,000
因为那 1969 年的时候那个时候你住一不一样的签字就可以了

2261
01:02:16,000 --> 01:02:17,000
那个时候没有电子化的问题

2262
01:02:17,000 --> 01:02:18,000
对啊

2263
01:02:18,000 --> 01:02:19,000
这个意思

2264
01:02:19,000 --> 01:02:20,000
对啊

2265
01:02:20,000 --> 01:02:20,000
嗯

2266
01:02:20,000 --> 01:02:22,000
就不存在马点这个问题吗

2267
01:02:22,000 --> 01:02:23,000
对啊

2268
01:02:23,000 --> 01:02:23,000
对

2269
01:02:23,000 --> 01:02:27,000
所以我觉得他们用回 GP 2312 也是因为他们处理不了新的问题

2270
01:02:27,000 --> 01:02:31,000
就是他们没这个能力来做这方面新的技术规格

2271
01:02:31,000 --> 01:02:33,000
这不划算吗

2272
01:02:33,000 --> 01:02:37,000
你本来人口少的国家你要做这种吃力不讨好的事情何必呢

2273
01:02:37,000 --> 01:02:38,000
嗯

2274
01:02:38,000 --> 01:02:42,000
就像直接那个像什么按我们现在的话行话说叫直接来 fork and reuse

2275
01:02:42,000 --> 01:02:48,000
对这个历史包括在这个 big five

2276
01:02:48,000 --> 01:02:52,000
big five 也是开始照搬了 JES 的规范

2277
01:02:52,000 --> 01:02:53,000
然后自己做了一些扩展

2278
01:02:53,000 --> 01:02:55,000
OK

2279
01:02:55,000 --> 01:02:59,000
所以现在有个历史遗留问题啊

2280
01:02:59,000 --> 01:03:02,000
就是说当比如说当时说微软搞了那个 GBK

2281
01:03:02,000 --> 01:03:04,000
然后后来国家补了一个这个

2282
01:03:04,000 --> 01:03:05,000
GB 18030

2283
01:03:05,000 --> 01:03:09,000
那么实际上在这个微软的超过系统里面

2284
01:03:09,000 --> 01:03:13,000
到底是用编码的时候是用 GBK 还是 GB 18030

2285
01:03:13,000 --> 01:03:18,000
Windows 的内核应该是用 unicode 的对吧

2286
01:03:18,000 --> 01:03:20,000
对对对那个都一样嘛

2287
01:03:20,000 --> 01:03:23,000
就是他们内核表示他就是多国语言肯定是要用统一的标准

2288
01:03:23,000 --> 01:03:24,000
但是在默认

2289
01:03:24,000 --> 01:03:26,000
比如说你有中文版的这个 Windows

2290
01:03:26,000 --> 01:03:28,000
你用那个记事本默认保存的时候

2291
01:03:28,000 --> 01:03:30,000
他选择的标码方式是

2292
01:03:30,000 --> 01:03:31,000
我是这么理解的

2293
01:03:31,000 --> 01:03:34,000
Windows 里面有一个默认的那个码本

2294
01:03:34,000 --> 01:03:36,000
就是有一个 code page

2295
01:03:36,000 --> 01:03:36,000
你得去选

2296
01:03:36,000 --> 01:03:38,000
然后你选什么

2297
01:03:38,000 --> 01:03:40,000
他默认的储存就是什么

2298
01:03:40,000 --> 01:03:40,000
对对对

2299
01:03:40,000 --> 01:03:41,000
如果你是中文版 Windows 的话

2300
01:03:41,000 --> 01:03:46,000
默认就是 GB 18030 应该是

2301
01:03:46,000 --> 01:03:47,000
对对对

2302
01:03:47,000 --> 01:03:47,000
我就这个意思

2303
01:03:47,000 --> 01:03:51,000
就是说他等于是给这个某一个区域版本的 Windows

2304
01:03:51,000 --> 01:03:55,000
选择了一个默认的保存的这个编码方式吗

2305
01:03:55,000 --> 01:03:56,000
和打开对

2306
01:03:56,000 --> 01:03:58,000
打开和那个 decode

2307
01:03:58,000 --> 01:03:59,000
就好像有些人玩日文游戏

2308
01:03:59,000 --> 01:04:01,000
一定要先把那个 code page 改成日文的

2309
01:04:01,000 --> 01:04:02,000
然后在玩的时候

2310
01:04:02,000 --> 01:04:04,000
日文的游戏才不会显示乱码

2311
01:04:04,000 --> 01:04:05,000
但是其他系统的所有部分都是乱码了

2312
01:04:05,000 --> 01:04:06,000
没错

2313
01:04:06,000 --> 01:04:09,000
所以那个现在就 Windows 用的那个 code page

2314
01:04:09,000 --> 01:04:11,000
到底默认是 GBK 还是 GB 18030 的

2315
01:04:11,000 --> 01:04:13,000
我记得是 18030

2316
01:04:13,000 --> 01:04:15,000
如果我上一次改的时候应该还是 18030

2317
01:04:15,000 --> 01:04:17,000
现在已经变得 18030 了

2318
01:04:17,000 --> 01:04:18,000
现在已经改了

2319
01:04:18,000 --> 01:04:19,000
对因为那个时候没有 GBK 的时候

2320
01:04:19,000 --> 01:04:20,000
你自然就是

2321
01:04:20,000 --> 01:04:23,000
就没有 18030 的时候自然就是 GBK

2322
01:04:23,000 --> 01:04:24,000
但现在有效率

2323
01:04:24,000 --> 01:04:25,000
那就最不重要

2324
01:04:25,000 --> 01:04:26,000
可以牵涉在 Windows 不同版本

2325
01:04:26,000 --> 01:04:28,000
它有不同行为的这个结果了吧

2326
01:04:28,000 --> 01:04:30,000
是没错

2327
01:04:30,000 --> 01:04:37,000
那然后因为刚才我们讲的那个 GB 2312 GBK 和 GB 18030

2328
01:04:37,000 --> 01:04:40,000
它是一个逐渐超级的一个关系

2329
01:04:40,000 --> 01:04:42,000
所以新版本的 Windows

2330
01:04:42,000 --> 01:04:45,000
它总是能兼容旧版本的那个文件的吗

2331
01:04:45,000 --> 01:04:48,000
理论上是这样

2332
01:04:48,000 --> 01:04:50,000
这个其实是要找一个 Windows

2333
01:04:50,000 --> 01:04:53,000
对 Windows 的编程比较熟悉的人来解释

2334
01:04:53,000 --> 01:04:55,000
他们的编码方式是向后兼容的

2335
01:04:55,000 --> 01:04:57,000
对

2336
01:04:57,000 --> 01:04:57,000
OK

2337
01:04:57,000 --> 01:04:59,000
所以就不存在说 Windows

2338
01:04:59,000 --> 01:05:02,000
比如说 Windows 10 默认是 GB 18030 中文版

2339
01:05:02,000 --> 01:05:03,000
不对

2340
01:05:03,000 --> 01:05:04,000
它应该用 unicode 吧

2341
01:05:04,000 --> 01:05:07,000
Anyway 假设它是用 GB 180

2342
01:05:07,000 --> 01:05:09,000
它存回去就还可以

2343
01:05:09,000 --> 01:05:10,000
也可以打开之前 Windows

2344
01:05:10,000 --> 01:05:13,000
比如说 XP 用 GBK 编码的时候存的东西

2345
01:05:13,000 --> 01:05:15,000
对这是肯定可以的

2346
01:05:15,000 --> 01:05:15,000
OK

2347
01:05:15,000 --> 01:05:19,000
所以就是说那个代码页

2348
01:05:19,000 --> 01:05:20,000
这个 code page 这个事情的话

2349
01:05:20,000 --> 01:05:22,000
就只有 Windows 在用

2350
01:05:22,000 --> 01:05:23,000
IBM 的那套架构

2351
01:05:23,000 --> 01:05:25,000
对

2352
01:05:25,000 --> 01:05:27,000
因为在其他的

2353
01:05:27,000 --> 01:05:29,000
像比如说 Mac 和 Linux 上面

2354
01:05:29,000 --> 01:05:30,000
它是你让你直接在

2355
01:05:30,000 --> 01:05:32,000
就是叫什么

2356
01:05:32,000 --> 01:05:34,000
就是保存的时候文件编辑器

2357
01:05:34,000 --> 01:05:37,000
它是用那个 chasset 的一个标志吧

2358
01:05:37,000 --> 01:05:37,000
应该

2359
01:05:37,000 --> 01:05:38,000
对没错

2360
01:05:38,000 --> 01:05:41,000
这是两种编码的标记的哲学吧

2361
01:05:41,000 --> 01:05:42,000
可以说是

2362
01:05:42,000 --> 01:05:45,000
一个是全系统的

2363
01:05:45,000 --> 01:05:47,000
一个是那个 profile

2364
01:05:47,000 --> 01:05:52,000
终于讲清楚这个 Windows 和 GB 的那些东西了

2365
01:05:52,000 --> 01:05:53,000
现在开始

2366
01:05:53,000 --> 01:05:55,000
我不知道我们听众有没有被我们绕晕

2367
01:05:55,000 --> 01:05:59,000
我觉得其实对于很多听众来说

2368
01:05:59,000 --> 01:06:00,000
可能并没有

2369
01:06:00,000 --> 01:06:01,000
他们看那句被我们绕晕了

2370
01:06:01,000 --> 01:06:04,000
有一种

2371
01:06:04,000 --> 01:06:06,000
无套那个什么沙拉怎么说来的

2372
01:06:06,000 --> 01:06:09,000
对对

2373
01:06:09,000 --> 01:06:12,000
听了一脑的沙拉

2374
01:06:12,000 --> 01:06:14,000
以后

2375
01:06:14,000 --> 01:06:16,000
对以后说你一脑浆糊

2376
01:06:16,000 --> 01:06:18,000
说你一脑猜是沙拉

2377
01:06:18,000 --> 01:06:20,000
这个比较好

2378
01:06:20,000 --> 01:06:21,000
听起来很高级

2379
01:06:21,000 --> 01:06:22,000
猜很沙拉

2380
01:06:22,000 --> 01:06:27,000
OK

2381
01:06:27,000 --> 01:06:30,000
现在终于进入到了 unicode 的时代

2382
01:06:30,000 --> 01:06:31,000
就这样是并存的吧

2383
01:06:31,000 --> 01:06:34,000
在时间观念上是有重叠了

2384
01:06:34,000 --> 01:06:39,000
应该说 unicode 它作为一个独立的这样一个机构

2385
01:06:39,000 --> 01:06:43,000
它希望能推动全球文字编码和字符集的

2386
01:06:43,000 --> 01:06:47,000
这两套标准都统一的这样一个目标吧

2387
01:06:47,000 --> 01:06:48,000
应该说

2388
01:06:48,000 --> 01:06:52,000
但是同时它又不能去废除那些地方性的编码方案

2389
01:06:52,000 --> 01:06:54,000
对

2390
01:06:54,000 --> 01:06:57,000
就只能想办法去都兼容呗

2391
01:06:57,000 --> 01:06:58,000
所以这样照成一个结果的话

2392
01:06:58,000 --> 01:07:00,000
它就是不可能向后兼容了

2393
01:07:00,000 --> 01:07:02,000
就必须要改

2394
01:07:02,000 --> 01:07:03,000
改 mapping 了

2395
01:07:03,000 --> 01:07:04,000
对对对

2396
01:07:04,000 --> 01:07:06,000
最先的那个 ASCII 的码位

2397
01:07:06,000 --> 01:07:07,000
它是保留的

2398
01:07:07,000 --> 01:07:08,000
第一是这个什么

2399
01:07:08,000 --> 01:07:09,000
美国人发明的码

2400
01:07:09,000 --> 01:07:11,000
美国重心主义

2401
01:07:11,000 --> 01:07:12,000
应该说 unicode

2402
01:07:12,000 --> 01:07:13,000
它用

2403
01:07:13,000 --> 01:07:15,000
它定义字符集的时候

2404
01:07:15,000 --> 01:07:16,000
它创造了一个

2405
01:07:16,000 --> 01:07:18,000
它称为叫什么

2406
01:07:18,000 --> 01:07:19,000
unicode 的什么

2407
01:07:19,000 --> 01:07:20,000
scalar

2408
01:07:20,000 --> 01:07:20,000
scalar

2409
01:07:20,000 --> 01:07:21,000
那个叫什么

2410
01:07:21,000 --> 01:07:22,000
scalar value

2411
01:07:22,000 --> 01:07:23,000
是吧

2412
01:07:23,000 --> 01:07:24,000
就是它所谓的

2413
01:07:24,000 --> 01:07:27,000
它这个 unicode 的标量值的这样一个

2414
01:07:27,000 --> 01:07:29,000
非常规范的标记方式

2415
01:07:29,000 --> 01:07:31,000
那么这个值的

2416
01:07:31,000 --> 01:07:33,000
这个数值显然跟 ASCII 和我们传统

2417
01:07:33,000 --> 01:07:35,000
见到了一些编码的数值

2418
01:07:35,000 --> 01:07:38,000
就我们所谓的这个内码数值都是不一样的

2419
01:07:38,000 --> 01:07:40,000
它是一套完全独立的方案

2420
01:07:40,000 --> 01:07:45,000
但同时那个 unicode 创造了这个三个主流的编码方案

2421
01:07:45,000 --> 01:07:45,000
unicode

2422
01:07:45,000 --> 01:07:48,000
那个 utf 816 和 32 里面

2423
01:07:48,000 --> 01:07:51,000
16 应该是兼容 ASCII 的

2424
01:07:51,000 --> 01:07:51,000
但是

2425
01:07:51,000 --> 01:07:52,000
不对

2426
01:07:52,000 --> 01:07:54,000
8 是兼容 ASCII 的

2427
01:07:54,000 --> 01:07:56,000
但是那个 16 和 32 就是完全独立的

2428
01:07:56,000 --> 01:07:59,000
因为字节宽度不一样的嘛

2429
01:07:59,000 --> 01:08:00,000
对对对

2430
01:08:00,000 --> 01:08:04,000
就是 32 是一个固定宽度的一个编码方案

2431
01:08:04,000 --> 01:08:05,000
那么它的这个

2432
01:08:05,000 --> 01:08:07,000
它是一个比较漂亮的编码方案

2433
01:08:07,000 --> 01:08:13,000
它的这个编码的数值跟 unicode 的 scalar value 是一一对应的

2434
01:08:13,000 --> 01:08:15,000
因为它最宽嘛

2435
01:08:15,000 --> 01:08:16,000
有四个字节了

2436
01:08:16,000 --> 01:08:16,000
对

2437
01:08:16,000 --> 01:08:18,000
它是可以完全写出来这个

2438
01:08:18,000 --> 01:08:19,000
那么这个 16 的话

2439
01:08:19,000 --> 01:08:24,000
就是由那个双字节和四字节切换的这样一个模式

2440
01:08:24,000 --> 01:08:28,000
8 的话就是一个在单字节模式下是兼容 ASCII 的

2441
01:08:28,000 --> 01:08:31,000
你虽然那个四个是很漂亮的嘛

2442
01:08:31,000 --> 01:08:33,000
但是固定四个的话就很浪费

2443
01:08:33,000 --> 01:08:36,000
如果你存储比如说西文的话

2444
01:08:36,000 --> 01:08:38,000
就非常浪费

2445
01:08:38,000 --> 01:08:43,000
所以后来大家就觉得比较经济的方式还是用变长的方式比较好

2446
01:08:43,000 --> 01:08:45,000
对

2447
01:08:45,000 --> 01:08:46,000
这样的就

2448
01:08:46,000 --> 01:08:52,000
而且还有一个问题是就是那个定长的有解决不了的

2449
01:08:52,000 --> 01:08:52,000
待会提到

2450
01:08:52,000 --> 01:08:56,000
所以刚才说的区位嘛

2451
01:08:56,000 --> 01:08:57,000
区有 row

2452
01:08:57,000 --> 01:08:59,000
然后位是 cell

2453
01:08:59,000 --> 01:09:01,000
然后后面就开始有一个平面了

2454
01:09:01,000 --> 01:09:02,000
就叫 plying

2455
01:09:02,000 --> 01:09:04,000
然后好几个平面呢

2456
01:09:04,000 --> 01:09:05,000
又变成一个 group

2457
01:09:05,000 --> 01:09:07,000
变成一个组

2458
01:09:07,000 --> 01:09:09,000
这是整

2459
01:09:09,000 --> 01:09:11,000
这个是 unicode 的

2460
01:09:11,000 --> 01:09:13,000
这是整个 unicode

2461
01:09:13,000 --> 01:09:14,000
它的一个

2462
01:09:14,000 --> 01:09:16,000
它必须要有这么多个座位

2463
01:09:16,000 --> 01:09:20,000
才能把所有全世界这些字给安排下去

2464
01:09:20,000 --> 01:09:25,000
然后就会有我们常说的一个词

2465
01:09:25,000 --> 01:09:25,000
就是什么

2466
01:09:25,000 --> 01:09:27,000
基本多语言平面吧

2467
01:09:27,000 --> 01:09:28,000
就是 bmp

2468
01:09:28,000 --> 01:09:31,000
basic multilingual plane

2469
01:09:31,000 --> 01:09:34,000
就是所谓的第零面嘛

2470
01:09:34,000 --> 01:09:38,000
这个第零面应该说就是是一个双字节的

2471
01:09:38,000 --> 01:09:43,000
就是 16 个 bit 的这样子的一个字符级的组合嘛

2472
01:09:43,000 --> 01:09:46,000
这是因为早期 unicode 它没有想到会进来那么多的字符

2473
01:09:46,000 --> 01:09:47,000
越加越多

2474
01:09:47,000 --> 01:09:49,000
它就只定了这样一个平面

2475
01:09:49,000 --> 01:09:55,000
对这个平面就是成为了一个最基本的叫第零平面或者叫 bmp 这样子

2476
01:09:55,000 --> 01:09:57,000
这说什么来着

2477
01:09:57,000 --> 01:10:00,000
65,536 个马位已经够用了

2478
01:10:00,000 --> 01:10:02,000
对

2479
01:10:02,000 --> 01:10:04,000
事实证明是不够的

2480
01:10:04,000 --> 01:10:06,000
嗯

2481
01:10:06,000 --> 01:10:11,000
所以这里其实我们还是要把刚才那个东西再稍微形象解释一下

2482
01:10:11,000 --> 01:10:13,000
就说我们刚才讲

2483
01:10:13,000 --> 01:10:15,000
gb 232 它规定了一个方格

2484
01:10:15,000 --> 01:10:17,000
94 乘以 94 这么一个区间

2485
01:10:17,000 --> 01:10:18,000
然后有些空还没用

2486
01:10:18,000 --> 01:10:20,000
但是它是一个也是一个矩阵嘛

2487
01:10:20,000 --> 01:10:24,000
然后 unicode 其实这个我们讲的这个 bmp 这个基本面

2488
01:10:24,000 --> 01:10:29,000
其实大致上可以对应为那个不过它是一个 25256 乘以 256 的一个比例

2489
01:10:29,000 --> 01:10:35,000
那就是乘出来就是 6553665536 个座位啊

2490
01:10:35,000 --> 01:10:36,000
就是这个马位

2491
01:10:36,000 --> 01:10:37,000
嗯

2492
01:10:37,000 --> 01:10:38,000
对

2493
01:10:38,000 --> 01:10:40,000
但其实这只是为了好看

2494
01:10:40,000 --> 01:10:41,000
它本质上还是一长串

2495
01:10:41,000 --> 01:10:44,000
就是一个就是它如果我们应该想象它一个竖轴上

2496
01:10:44,000 --> 01:10:46,000
它应该是一个一维的一个东西

2497
01:10:46,000 --> 01:10:48,000
对

2498
01:10:48,000 --> 01:10:52,000
然后在碗里面添上就各国的文字对吧

2499
01:10:52,000 --> 01:10:55,000
这是刚才我们说的这个马位的事情

2500
01:10:55,000 --> 01:10:57,000
嗯

2501
01:10:57,000 --> 01:11:02,000
然后这个基本平面里面有些什么字是什么规定的

2502
01:11:02,000 --> 01:11:03,000
就有有什么讲究吗

2503
01:11:03,000 --> 01:11:05,000
就是按顺序碗里填呗

2504
01:11:05,000 --> 01:11:08,000
哎呀这个这个区区区味就非常多了

2505
01:11:08,000 --> 01:11:08,000
OK

2506
01:11:08,000 --> 01:11:10,000
那那比如说我问一个问题啊

2507
01:11:10,000 --> 01:11:11,000
就是说呃

2508
01:11:11,000 --> 01:11:16,000
中文字是放这就大部分中文字是放在那个基本平面里面

2509
01:11:16,000 --> 01:11:17,000
对

2510
01:11:17,000 --> 01:11:18,000
呃

2511
01:11:18,000 --> 01:11:19,000
常用的

2512
01:11:19,000 --> 01:11:20,000
OK

2513
01:11:20,000 --> 01:11:22,000
一级汉字基本都在里面

2514
01:11:22,000 --> 01:11:25,000
那比如说对应刚刚才我们说的那些东西就是说

2515
01:11:25,000 --> 01:11:29,000
不是 GBR 32 里面所有的字符都在基本面里面吧

2516
01:11:29,000 --> 01:11:29,000
嗯

2517
01:11:29,000 --> 01:11:32,000
它有在扩展面

2518
01:11:32,000 --> 01:11:36,000
就是在后面的其他的面上的的确是有的

2519
01:11:36,000 --> 01:11:36,000
OK

2520
01:11:36,000 --> 01:11:37,000
OK

2521
01:11:37,000 --> 01:11:40,000
那那那再问一个问题啊

2522
01:11:40,000 --> 01:11:46,000
就是说在这个 unicode 的基本面里面的那个马位的那个中文类就是就是基本汉字

2523
01:11:46,000 --> 01:11:51,000
这个 unicode 里面已经有一个新的称呼就是 CJK 统一表意文字了

2524
01:11:51,000 --> 01:11:55,000
这不仅是中文了就是中日韩就大家啊

2525
01:11:55,000 --> 01:11:59,000
全球大一统的字形一样的文字全都会塞在里面

2526
01:11:59,000 --> 01:11:59,000
OK

2527
01:11:59,000 --> 01:12:05,000
这里这里就说要解释一下为什么会有这么一个事就是它的逻辑是什么

2528
01:12:05,000 --> 01:12:12,000
它的逻辑就是 unicode 是针对这个 script 这种东西来划分它的 block 的

2529
01:12:12,000 --> 01:12:23,000
我们刚刚说了就是说这个日语日语或者说日文它作为一个书写系统其实它用到了四种文字就是包括拉丁平假名片假名和汉字

2530
01:12:23,000 --> 01:12:31,000
那么 unicode 认为你日本用的汉字韩国用的汉字中国用的汉字以及越南用的汉字他们都是汉字这一种 script

2531
01:12:31,000 --> 01:12:33,000
你们都应该统一起来

2532
01:12:33,000 --> 01:12:37,000
既然明明是一个字而且写法基本上也一样那为什么不能就用一个马位

2533
01:12:37,000 --> 01:12:43,000
比如说汉字一二三各个地区大家都长得都一样就没有必要用三个马位分别的马位嘛

2534
01:12:43,000 --> 01:12:47,000
所以呢大致比如说汉字的一那大家就统一起来吧

2535
01:12:47,000 --> 01:12:48,000
嗯

2536
01:12:48,000 --> 01:12:53,000
那所以这里就牵涉了一个所谓的这个汉字的追根溯源的问题了嘛

2537
01:12:53,000 --> 01:12:59,000
就是说呃因为日文和韩文里面的汉字它的来源是来自于中文的那个字嘛

2538
01:12:59,000 --> 01:13:06,000
那就说呃就要问日本人民说呃你们觉得你们这个汉字是对应到中国的哪个啊

2539
01:13:06,000 --> 01:13:09,000
还有韩国人民说呃你们认为你们这个汉对应到中国的哪一个啊

2540
01:13:09,000 --> 01:13:12,000
那肯定会出现

2541
01:13:12,000 --> 01:13:13,000
我们听说要对应到中文

2542
01:13:13,000 --> 01:13:13,000
对对对

2543
01:13:13,000 --> 01:13:16,000
就是那肯定会出现一种情况就是说

2544
01:13:16,000 --> 01:13:17,000
他们觉得就是

2545
01:13:17,000 --> 01:13:20,000
就是韩国人觉得我这个字应该对应到中文那个字

2546
01:13:20,000 --> 01:13:23,000
然后是日本人觉得这个字我应该对应到中文另外一个字

2547
01:13:23,000 --> 01:13:24,000
对对吧

2548
01:13:24,000 --> 01:13:25,000
非常混乱

2549
01:13:25,000 --> 01:13:26,000
嗯

2550
01:13:26,000 --> 01:13:27,000
对

2551
01:13:27,000 --> 01:13:32,000
OK 这个怎么解决的当时呃首先一个原则就是呃在做优尼克的时候

2552
01:13:32,000 --> 01:13:35,000
大家各个国家先把各国的那个标准拿出来嘛

2553
01:13:35,000 --> 01:13:37,000
日本又能拿出他的祭祀

2554
01:13:37,000 --> 01:13:41,000
韩国拿出他的 KS 呃咱们中国拿出的是 GB

2555
01:13:41,000 --> 01:13:45,000
还有呃台台湾地区还有他们拿出他的大物嘛

2556
01:13:45,000 --> 01:13:46,000
然后呢

2557
01:13:46,000 --> 01:13:48,000
那中国拿的是 GB 哪个

2558
01:13:48,000 --> 01:13:50,000
18030 还是 GBK 还是 GB 2312

2559
01:13:50,000 --> 01:13:53,000
呃不同的历史阶段应该拿出的是不同的文件

2560
01:13:53,000 --> 01:13:54,000
对

2561
01:13:54,000 --> 01:13:54,000
好吧

2562
01:13:54,000 --> 01:13:58,000
但但中文的情况比较简单因为至少他我们是相互兼容的嘛

2563
01:13:58,000 --> 01:13:58,000
嗯

2564
01:13:58,000 --> 01:13:59,000
对对

2565
01:13:59,000 --> 01:14:02,000
就还不至于说乱掉的情况

2566
01:14:02,000 --> 01:14:02,000
对

2567
01:14:02,000 --> 01:14:03,000
然后呃

2568
01:14:03,000 --> 01:14:05,000
先拿出来的时候呢

2569
01:14:05,000 --> 01:14:08,000
就是各个国家拿出来他如他的一个首先一个原子就是说

2570
01:14:08,000 --> 01:14:12,000
如果你在这些字哈原来你在这个

2571
01:14:12,000 --> 01:14:15,000
比如说在 GB 里面他本来就是两个字的话

2572
01:14:15,000 --> 01:14:19,000
那我放到这个 unicode 里面也是两个字

2573
01:14:19,000 --> 01:14:21,000
就是原规则分开的话

2574
01:14:21,000 --> 01:14:22,000
我现在也分开

2575
01:14:22,000 --> 01:14:23,000
我不会给他合在一起

2576
01:14:23,000 --> 01:14:23,000
嗯

2577
01:14:23,000 --> 01:14:27,000
就因为他要保证就是所谓的向后兼容嘛

2578
01:14:27,000 --> 01:14:28,000
那这里有个问题哈

2579
01:14:28,000 --> 01:14:29,000
就是说

2580
01:14:29,000 --> 01:14:36,000
因为就我理解就是日文的汉字和这个潮这个韩文的汉字里面应该都是对应的繁体字吧

2581
01:14:36,000 --> 01:14:37,000
不一定

2582
01:14:37,000 --> 01:14:38,000
不一定

2583
01:14:38,000 --> 01:14:38,000
非常复杂

2584
01:14:38,000 --> 01:14:40,000
对

2585
01:14:40,000 --> 01:14:40,000
OK

2586
01:14:40,000 --> 01:14:42,000
因为日文有日文汉字

2587
01:14:42,000 --> 01:14:44,000
然后刚才说吧

2588
01:14:44,000 --> 01:14:45,000
各个国家的简化都不一样

2589
01:14:45,000 --> 01:14:47,000
比如说新加坡他有新加坡的简化汉字

2590
01:14:47,000 --> 01:14:49,000
然后日文有日文的简化汉字

2591
01:14:49,000 --> 01:14:51,000
日文还有简化汉字

2592
01:14:51,000 --> 01:14:52,000
对

2593
01:14:52,000 --> 01:14:53,000
嗯

2594
01:14:53,000 --> 01:14:53,000
有啊

2595
01:14:53,000 --> 01:14:54,000
嗯

2596
01:14:54,000 --> 01:14:57,000
而且还有经常会简化以后张冠礼带的字

2597
01:14:57,000 --> 01:14:58,000
比如说呃

2598
01:14:58,000 --> 01:15:00,000
文艺的义

2599
01:15:00,000 --> 01:15:02,000
在日文的这个文艺的义的简化

2600
01:15:02,000 --> 01:15:05,000
就是草字头底下个白云的云

2601
01:15:05,000 --> 01:15:07,000
然后这个字在中文里面是有的

2602
01:15:07,000 --> 01:15:09,000
中文里面是另外一个字

2603
01:15:09,000 --> 01:15:10,000
为什么会追这种情况呢

2604
01:15:10,000 --> 01:15:16,000
就因为你国没有权利去管理我去约束我国怎么简化字对吧

2605
01:15:16,000 --> 01:15:21,000
不不我持这个意思就是说就是日文简化这个义字简化成云的时候

2606
01:15:21,000 --> 01:15:24,000
他没有去看一下别人怎么做

2607
01:15:24,000 --> 01:15:25,000
是平行发展

2608
01:15:25,000 --> 01:15:27,000
他为什么要去看别人怎么做

2609
01:15:27,000 --> 01:15:27,000
OK

2610
01:15:27,000 --> 01:15:32,000
就我国就在日本里面在日本的汉字里面没有云这个字嘛

2611
01:15:32,000 --> 01:15:34,000
就没有上草下云这个字啊

2612
01:15:34,000 --> 01:15:35,000
那他为什么不能用呢

2613
01:15:35,000 --> 01:15:38,000
所以就说吧如果人的历史可以改写的话

2614
01:15:38,000 --> 01:15:41,000
当年如果大家简化汉字都商量一下就好了

2615
01:15:41,000 --> 01:15:42,000
不是如果对

2616
01:15:42,000 --> 01:15:46,000
如果我们黄汉早一点统一世界的话就没有这种问题

2617
01:15:46,000 --> 01:15:51,000
或者对从从这个今日的角度讲

2618
01:15:51,000 --> 01:15:55,000
如果当年大日本建立了什么东亚共同圈的也没有这个问题

2619
01:15:55,000 --> 01:15:55,000
对

2620
01:15:55,000 --> 01:15:58,000
一切问题都不成问题了

2621
01:15:58,000 --> 01:16:03,000
对一切一切一切技术问题其实归根这里都是政治问题

2622
01:16:03,000 --> 01:16:04,000
这老师

2623
01:16:04,000 --> 01:16:05,000
所以呢最初期

2624
01:16:05,000 --> 01:16:08,000
比如说那出现这种情况怎么解决呢

2625
01:16:08,000 --> 01:16:10,000
就是比如说刚才说文艺的这个义字的时候

2626
01:16:10,000 --> 01:16:11,000
到 unicode 里面怎么办

2627
01:16:11,000 --> 01:16:13,000
就只能各个一个码点吗

2628
01:16:13,000 --> 01:16:16,000
但是现在事实上呢是只有一个码点

2629
01:16:16,000 --> 01:16:20,000
然后这个码点呢是草上草子头个云

2630
01:16:20,000 --> 01:16:23,000
然后呢日本人用这个字把它当成艺术的义字

2631
01:16:23,000 --> 01:16:24,000
在用

2632
01:16:24,000 --> 01:16:28,000
中国人用这个字拿出当云来用

2633
01:16:28,000 --> 01:16:28,000
对

2634
01:16:28,000 --> 01:16:32,000
因为只是编码然后用来显示嘛

2635
01:16:32,000 --> 01:16:34,000
至于它是什么语意

2636
01:16:34,000 --> 01:16:35,000
这个是没有关系的嘛

2637
01:16:35,000 --> 01:16:37,000
哦

2638
01:16:37,000 --> 01:16:38,000
OK

2639
01:16:38,000 --> 01:16:39,000
这相当于意中更好

2640
01:16:39,000 --> 01:16:40,000
你

2641
01:16:40,000 --> 01:16:42,000
就只规定

2642
01:16:42,000 --> 01:16:43,000
只规定形状

2643
01:16:43,000 --> 01:16:44,000
不规定意义

2644
01:16:44,000 --> 01:16:44,000
对啊

2645
01:16:44,000 --> 01:16:45,000
因为本来

2646
01:16:45,000 --> 01:16:47,000
本来你这个收的那个字符集的话

2647
01:16:47,000 --> 01:16:48,000
只是

2648
01:16:48,000 --> 01:16:51,000
给每个字编一个座位而已嘛

2649
01:16:51,000 --> 01:16:52,000
嗯

2650
01:16:52,000 --> 01:16:52,000
对对

2651
01:16:52,000 --> 01:16:54,000
它并不需要赋予含义

2652
01:16:54,000 --> 01:16:59,000
现在首先他们在 CJK 统一汉字只是大家各个各自把各国选手拉出来嘛

2653
01:16:59,000 --> 01:17:00,000
对吧

2654
01:17:00,000 --> 01:17:01,000
嗯

2655
01:17:01,000 --> 01:17:01,000
OK

2656
01:17:01,000 --> 01:17:04,000
所以最初的统一汉字呢有 209 千

2657
01:17:04,000 --> 01:17:05,000
呃 941 个字

2658
01:17:05,000 --> 01:17:07,000
然后呢中国国标

2659
01:17:07,000 --> 01:17:12,000
当时就是拉出了那个 2312 和 12345

2660
01:17:12,000 --> 01:17:12,000
嗯

2661
01:17:12,000 --> 01:17:13,000
嗯

2662
01:17:13,000 --> 01:17:16,000
然后台湾的台湾有他们的 CNS

2663
01:17:16,000 --> 01:17:17,000
嗯

2664
01:17:17,000 --> 01:17:18,000
嗯

2665
01:17:18,000 --> 01:17:19,000
然后日本呢

2666
01:17:19,000 --> 01:17:21,000
日本就是祭祀的那个 0208

2667
01:17:21,000 --> 01:17:22,000
嗯

2668
01:17:22,000 --> 01:17:25,000
大概也是有一万一千多个字

2669
01:17:25,000 --> 01:17:26,000
嗯

2670
01:17:26,000 --> 01:17:27,000
韩国的话

2671
01:17:27,000 --> 01:17:28,000
韩国特别坑

2672
01:17:28,000 --> 01:17:30,000
汉字不是有多音字吗

2673
01:17:30,000 --> 01:17:34,000
韩国的他们的 KS 的那个编码里面呢

2674
01:17:34,000 --> 01:17:35,000
它只是

2675
01:17:35,000 --> 01:17:38,000
因为大家知道韩文它是发音嘛

2676
01:17:38,000 --> 01:17:40,000
发音会对一个字

2677
01:17:40,000 --> 01:17:45,000
那多一导致于多个发音都对同一个汉字

2678
01:17:45,000 --> 01:17:45,000
嗯

2679
01:17:45,000 --> 01:17:46,000
那他们怎么解决这个问题

2680
01:17:46,000 --> 01:17:47,000
他们没有解决这个问题

2681
01:17:47,000 --> 01:17:48,000
没有

2682
01:17:48,000 --> 01:17:49,000
他们没有解决这个问题

2683
01:17:49,000 --> 01:17:52,000
在韩文的他们 KS 的那个编码里面

2684
01:17:52,000 --> 01:17:54,000
汉字有重复

2685
01:17:54,000 --> 01:17:56,000
就是啊

2686
01:17:56,000 --> 01:17:57,000
它是取音的

2687
01:17:57,000 --> 01:17:59,000
它是取形和音

2688
01:17:59,000 --> 01:18:00,000
就是同一个形

2689
01:18:00,000 --> 01:18:01,000
在不同读音的时候

2690
01:18:01,000 --> 01:18:02,000
比如刚才我们那个曲吧

2691
01:18:02,000 --> 01:18:04,000
歌曲和这个呃

2692
01:18:04,000 --> 01:18:05,000
曲线

2693
01:18:05,000 --> 01:18:07,000
它会还会把它有两个码点

2694
01:18:07,000 --> 01:18:08,000
所以在韩国的

2695
01:18:08,000 --> 01:18:10,000
比如说 KSC 的那个 5601 里面

2696
01:18:10,000 --> 01:18:12,000
它有 4888 个字

2697
01:18:12,000 --> 01:18:13,000
但是呢

2698
01:18:13,000 --> 01:18:14,000
其中呢

2699
01:18:14,000 --> 01:18:15,000
有 268 个字是重复的

2700
01:18:15,000 --> 01:18:17,000
然后转到

2701
01:18:17,000 --> 01:18:18,000
那个 Unical CGK 的时候

2702
01:18:18,000 --> 01:18:20,000
都我们都给它合一了吗

2703
01:18:20,000 --> 01:18:21,000
没有合一

2704
01:18:21,000 --> 01:18:22,000
因为要保留

2705
01:18:22,000 --> 01:18:23,000
就是说

2706
01:18:23,000 --> 01:18:23,000
还要相互介入

2707
01:18:23,000 --> 01:18:25,000
自圆分离原则

2708
01:18:25,000 --> 01:18:26,000
刚才说了

2709
01:18:26,000 --> 01:18:27,000
我们说的第一个原则

2710
01:18:27,000 --> 01:18:28,000
就是自离分

2711
01:18:28,000 --> 01:18:29,000
自圆分离原则

2712
01:18:29,000 --> 01:18:31,000
原来是分的话

2713
01:18:31,000 --> 01:18:32,000
我必须要分

2714
01:18:32,000 --> 01:18:33,000
要不然的话

2715
01:18:33,000 --> 01:18:34,000
你就没办法相互介入了

2716
01:18:34,000 --> 01:18:36,000
就所谓的相互介入

2717
01:18:36,000 --> 01:18:36,000
OK

2718
01:18:36,000 --> 01:18:38,000
OK

2719
01:18:38,000 --> 01:18:38,000
OK

2720
01:18:38,000 --> 01:18:42,000
所以就说 CJK 这个 Unification

2721
01:18:42,000 --> 01:18:42,000
其实是说

2722
01:18:42,000 --> 01:18:46,000
中国的汉字和日本的汉字和韩国的汉字

2723
01:18:46,000 --> 01:18:46,000
如果有如果

2724
01:18:46,000 --> 01:18:48,000
如果有长得差不多的就混成一个

2725
01:18:48,000 --> 01:18:50,000
但是如果他们本身里面是有两个的

2726
01:18:50,000 --> 01:18:51,000
我们就不合了

2727
01:18:51,000 --> 01:18:52,000
嗯

2728
01:18:52,000 --> 01:18:53,000
所以呢

2729
01:18:53,000 --> 01:18:57,000
导致于这个和和分的这个规则特别的混乱

2730
01:18:57,000 --> 01:18:58,000
有的该和的不合

2731
01:18:58,000 --> 01:19:00,000
该分的不分之类的

2732
01:19:00,000 --> 01:19:02,000
所以其实为了

2733
01:19:02,000 --> 01:19:04,000
就为了省那么那么小几个码点

2734
01:19:04,000 --> 01:19:06,000
我不如说直接复制过来

2735
01:19:06,000 --> 01:19:07,000
就是画区嘛

2736
01:19:07,000 --> 01:19:08,000
跟那个 IP 地址一样

2737
01:19:08,000 --> 01:19:10,000
说这一块你们中国人拿去啊

2738
01:19:10,000 --> 01:19:10,000
够用了吧

2739
01:19:10,000 --> 01:19:11,000
不够再升级

2740
01:19:11,000 --> 01:19:13,000
随便你怎么样

2741
01:19:13,000 --> 01:19:16,000
然后这一块韩国人你们拿去

2742
01:19:16,000 --> 01:19:16,000
随便你们怎么弄

2743
01:19:16,000 --> 01:19:18,000
然后这块日本人拿去

2744
01:19:18,000 --> 01:19:18,000
你们随便怎么用

2745
01:19:18,000 --> 01:19:19,000
对吧

2746
01:19:19,000 --> 01:19:20,000
这会更简单一点

2747
01:19:20,000 --> 01:19:21,000
但是这样就背离了

2748
01:19:21,000 --> 01:19:23,000
Unical 的想要 Unify 的初衷了

2749
01:19:23,000 --> 01:19:25,000
Unical 的一开始的一个

2750
01:19:25,000 --> 01:19:28,000
目的不就是让所有的字型

2751
01:19:28,000 --> 01:19:29,000
如果相似的话

2752
01:19:29,000 --> 01:19:32,000
就是他们的意思就是

2753
01:19:32,000 --> 01:19:34,000
如果这个世界上有这样一个符号

2754
01:19:34,000 --> 01:19:36,000
他在哪里的写法都是

2755
01:19:36,000 --> 01:19:38,000
都基本上是同一个事物

2756
01:19:38,000 --> 01:19:40,000
比如说白云或者是白云

2757
01:19:40,000 --> 01:19:43,000
那个可以用那个 Normalization 来解决吗

2758
01:19:43,000 --> 01:19:46,000
嗯

2759
01:19:46,000 --> 01:19:47,000
比较复杂

2760
01:19:47,000 --> 01:19:48,000
然后因为

2761
01:19:48,000 --> 01:19:51,000
可是 Normalization 最终的结果

2762
01:19:51,000 --> 01:19:53,000
不就还是会像现在一样

2763
01:19:53,000 --> 01:19:54,000
就是但是是一个

2764
01:19:54,000 --> 01:19:55,000
一个是可选

2765
01:19:55,000 --> 01:19:57,000
一个是强加的问题吗

2766
01:19:57,000 --> 01:19:57,000
对吧

2767
01:19:57,000 --> 01:19:59,000
因为 Unification 是你在制定规范的时候

2768
01:19:59,000 --> 01:20:00,000
要选

2769
01:20:00,000 --> 01:20:01,000
就给

2770
01:20:01,000 --> 01:20:02,000
就申请 IP 地址的时候

2771
01:20:02,000 --> 01:20:03,000
申请这个马位的时候

2772
01:20:03,000 --> 01:20:04,000
就要先选好说

2773
01:20:04,000 --> 01:20:06,000
我们这个共用一个马位吗

2774
01:20:06,000 --> 01:20:06,000
但是就说

2775
01:20:06,000 --> 01:20:08,000
你又要保持向后兼容的话

2776
01:20:08,000 --> 01:20:10,000
其实做这个事情是平白无故

2777
01:20:10,000 --> 01:20:11,000
增加到复杂度吗

2778
01:20:11,000 --> 01:20:12,000
那如果你说 Normalization

2779
01:20:12,000 --> 01:20:14,000
作为一个事后的一个东西

2780
01:20:14,000 --> 01:20:15,000
就虽然我可以向后兼容

2781
01:20:15,000 --> 01:20:16,000
但是为了说

2782
01:20:16,000 --> 01:20:17,000
都出来

2783
01:20:17,000 --> 01:20:19,000
大家都还能够一个可比的话

2784
01:20:19,000 --> 01:20:20,000
我们再用一个 Normalization 的规则

2785
01:20:20,000 --> 01:20:22,000
把它换成一个统一的表达

2786
01:20:22,000 --> 01:20:23,000
不就好了吗

2787
01:20:23,000 --> 01:20:25,000
make sense

2788
01:20:25,000 --> 01:20:27,000
好吧

2789
01:20:27,000 --> 01:20:28,000
你可以这么说

2790
01:20:28,000 --> 01:20:32,000
但我觉得 Unical 的初衷可能是

2791
01:20:32,000 --> 01:20:36,000
就是 Unical 的在 Unical 的制定的理念里面

2792
01:20:36,000 --> 01:20:38,000
兼容既有编码

2793
01:20:38,000 --> 01:20:39,000
并不是占第一位

2794
01:20:39,000 --> 01:20:39,000
对

2795
01:20:39,000 --> 01:20:39,000
就是

2796
01:20:39,000 --> 01:20:42,000
Unical 的理想是

2797
01:20:42,000 --> 01:20:45,000
就是从 Unical 之后再无别的编码

2798
01:20:45,000 --> 01:20:46,000
对吧

2799
01:20:46,000 --> 01:20:50,000
那如果你说你一定要保留原有的那个东西

2800
01:20:50,000 --> 01:20:53,000
那相当于 Unical 的初衷就没有了

2801
01:20:53,000 --> 01:20:55,000
它的主要诉求

2802
01:20:55,000 --> 01:20:59,000
其实一开始的确就是为了大幅度减少收入的汉子的字数

2803
01:20:59,000 --> 01:21:03,000
然后就尽量去尊重各地的习惯自行

2804
01:21:03,000 --> 01:21:05,000
那就是你原来是分离的

2805
01:21:05,000 --> 01:21:06,000
你就分离

2806
01:21:06,000 --> 01:21:07,000
然后能合的就合在一起

2807
01:21:07,000 --> 01:21:09,000
对

2808
01:21:09,000 --> 01:21:11,000
就还是统一为主

2809
01:21:11,000 --> 01:21:11,000
对对

2810
01:21:11,000 --> 01:21:12,000
是比较灵活

2811
01:21:12,000 --> 01:21:14,000
但是就因为这个灵活的话

2812
01:21:14,000 --> 01:21:15,000
是就

2813
01:21:15,000 --> 01:21:16,000
灵活就是复杂度

2814
01:21:16,000 --> 01:21:19,000
所以他说他的编码是针对字

2815
01:21:19,000 --> 01:21:21,000
而不是对字形

2816
01:21:21,000 --> 01:21:23,000
就是对 character 进行编码

2817
01:21:23,000 --> 01:21:24,000
而不是对 glyph

2818
01:21:24,000 --> 01:21:25,000
OK

2819
01:21:25,000 --> 01:21:25,000
明白

2820
01:21:25,000 --> 01:21:26,000
明白

2821
01:21:26,000 --> 01:21:28,000
那其实也不太对

2822
01:21:28,000 --> 01:21:31,000
刚才你说那个文艺的意志就不符合这个逻辑了

2823
01:21:31,000 --> 01:21:33,000
但是呢

2824
01:21:33,000 --> 01:21:35,000
他们只是对字啊

2825
01:21:35,000 --> 01:21:36,000
所以就很复杂

2826
01:21:36,000 --> 01:21:40,000
的确像合起来比如说那个户口的户

2827
01:21:40,000 --> 01:21:43,000
中国大陆的话户的第一笔是点吧

2828
01:21:43,000 --> 01:21:46,000
在台日本是一红

2829
01:21:46,000 --> 01:21:48,000
然后呢

2830
01:21:48,000 --> 01:21:49,000
台湾是一撇

2831
01:21:49,000 --> 01:21:51,000
是方向不一样吗

2832
01:21:51,000 --> 01:21:52,000
但是这个字呢

2833
01:21:52,000 --> 01:21:53,000
在 unico 的话

2834
01:21:53,000 --> 01:21:56,000
我们被当时就是认为是一个字嘛

2835
01:21:56,000 --> 01:21:57,000
所以呢

2836
01:21:57,000 --> 01:21:59,000
就只给他一个座位

2837
01:21:59,000 --> 01:22:01,000
这导致于就是各个地区

2838
01:22:01,000 --> 01:22:03,000
如果想要他们各自的字形的话

2839
01:22:03,000 --> 01:22:04,000
就显示不出来

2840
01:22:04,000 --> 01:22:07,000
就要不能通过这个

2841
01:22:07,000 --> 01:22:08,000
就马位来

2842
01:22:08,000 --> 01:22:10,000
来展现了吗

2843
01:22:10,000 --> 01:22:12,000
就只能通过字体

2844
01:22:12,000 --> 01:22:13,000
个位置来实现

2845
01:22:13,000 --> 01:22:13,000
对

2846
01:22:13,000 --> 01:22:14,000
所以

2847
01:22:14,000 --> 01:22:17,000
所以就说这不是字的区别

2848
01:22:17,000 --> 01:22:18,000
而是字形的区别

2849
01:22:18,000 --> 01:22:19,000
那等一下

2850
01:22:19,000 --> 01:22:20,000
我有一个问题

2851
01:22:20,000 --> 01:22:21,000
如果说这样的话

2852
01:22:21,000 --> 01:22:22,000
我们做那种

2853
01:22:22,000 --> 01:22:24,000
就是多语言文本的时候怎么办

2854
01:22:24,000 --> 01:22:26,000
所以非常

2855
01:22:26,000 --> 01:22:29,000
依靠你所用的那个字库文件

2856
01:22:29,000 --> 01:22:32,000
那字库文件不可能

2857
01:22:32,000 --> 01:22:33,000
就他会有这种

2858
01:22:33,000 --> 01:22:34,000
就是

2859
01:22:34,000 --> 01:22:36,000
对应一个马位

2860
01:22:36,000 --> 01:22:38,000
他有多个字形的

2861
01:22:38,000 --> 01:22:39,000
比如说

2862
01:22:39,000 --> 01:22:39,000
OK

2863
01:22:39,000 --> 01:22:41,000
Source Hand Sense

2864
01:22:41,000 --> 01:22:43,000
思源黑体

2865
01:22:43,000 --> 01:22:45,000
应该说它是唯一的一个

2866
01:22:45,000 --> 01:22:46,000
对

2867
01:22:46,000 --> 01:22:49,000
它是现存市场唯一一个能找到

2868
01:22:49,000 --> 01:22:50,000
试图去解决

2869
01:22:50,000 --> 01:22:53,000
刚才 Ru 提出这个问题的这样一个字体工程项目

2870
01:22:53,000 --> 01:22:54,000
对

2871
01:22:54,000 --> 01:22:55,000
那就是如果说

2872
01:22:55,000 --> 01:22:56,000
举个很简单的例子

2873
01:22:56,000 --> 01:22:58,000
假设我要做这个 CJK

2874
01:22:58,000 --> 01:22:58,000
不

2875
01:22:58,000 --> 01:22:59,000
就是你们

2876
01:22:59,000 --> 01:23:00,000
我们假设字团

2877
01:23:00,000 --> 01:23:02,000
字场

2878
01:23:02,000 --> 01:23:03,000
要出一个节目

2879
01:23:03,000 --> 01:23:06,000
然后出一个这种印刷品来说这几个字的区别

2880
01:23:06,000 --> 01:23:07,000
然后你们用 unicode 编码的时候

2881
01:23:07,000 --> 01:23:08,000
要写出这几个字

2882
01:23:08,000 --> 01:23:10,000
你能采取的方法就只有两个

2883
01:23:10,000 --> 01:23:11,000
要么找这种

2884
01:23:11,000 --> 01:23:14,000
带有这个 CJK 不同字形

2885
01:23:14,000 --> 01:23:15,000
variation 的这种字体文件

2886
01:23:15,000 --> 01:23:16,000
一个可以搞定

2887
01:23:16,000 --> 01:23:17,000
然后你在那个

2888
01:23:17,000 --> 01:23:20,000
那个就是编辑器里面去选择它

2889
01:23:20,000 --> 01:23:21,000
另外一个就是说

2890
01:23:21,000 --> 01:23:23,000
选三个不同的字体

2891
01:23:23,000 --> 01:23:24,000
然后手工的去调那个字体

2892
01:23:24,000 --> 01:23:25,000
对

2893
01:23:25,000 --> 01:23:26,000
那个字应该用那个字体

2894
01:23:26,000 --> 01:23:27,000
对的

2895
01:23:27,000 --> 01:23:27,000
对

2896
01:23:27,000 --> 01:23:27,000
是的

2897
01:23:27,000 --> 01:23:29,000
对

2898
01:23:29,000 --> 01:23:32,000
这种时候可能直接写 markdown 会比较简单

2899
01:23:32,000 --> 01:23:32,000
就

2900
01:23:32,000 --> 01:23:37,000
你要么在 unicode 层面确保你写的每一个字是正确的

2901
01:23:37,000 --> 01:23:40,000
否则就只能用 markdown 来辅助

2902
01:23:40,000 --> 01:23:41,000
怎么

2903
01:23:41,000 --> 01:23:42,000
什么 markdown

2904
01:23:42,000 --> 01:23:42,000
sorry

2905
01:23:42,000 --> 01:23:42,000
就是

2906
01:23:42,000 --> 01:23:45,000
其实就是 html

2907
01:23:45,000 --> 01:23:48,000
就是你在那个时候标出说这一段文字是日文

2908
01:23:48,000 --> 01:23:48,000
对

2909
01:23:48,000 --> 01:23:49,000
对

2910
01:23:49,000 --> 01:23:49,000
对

2911
01:23:49,000 --> 01:23:49,000
没错

2912
01:23:49,000 --> 01:23:53,000
到时候在那个 sensus 里面指定说这一段用日文字体

2913
01:23:53,000 --> 01:23:53,000
是的

2914
01:23:53,000 --> 01:23:55,000
就不能直接用一个很简单的那种

2915
01:23:55,000 --> 01:23:58,000
就你得加人为的加入一些 metadata 才行

2916
01:23:58,000 --> 01:23:58,000
对

2917
01:23:58,000 --> 01:23:58,000
对

2918
01:23:58,000 --> 01:24:00,000
所以其实还是刚才那个问题

2919
01:24:00,000 --> 01:24:02,000
就是刚才 unicode 的 unification

2920
01:24:02,000 --> 01:24:03,000
它是带来的后果

2921
01:24:03,000 --> 01:24:06,000
就是在混排文字的时候出现那种不可指

2922
01:24:06,000 --> 01:24:08,000
就是不能很方便的指定的情况下

2923
01:24:08,000 --> 01:24:09,000
没理想情况下

2924
01:24:09,000 --> 01:24:13,000
如果这三个的那个互字的那个三个国家的不同写法是没有统一的话

2925
01:24:13,000 --> 01:24:18,000
其实你是很可以很方便的让系统自动去 fallback 到对应国家的那个

2926
01:24:18,000 --> 01:24:19,000
那个字上面去

2927
01:24:19,000 --> 01:24:20,000
但是话说回来

2928
01:24:20,000 --> 01:24:22,000
如果这是混排系统的话

2929
01:24:22,000 --> 01:24:23,000
你别说是机器了

2930
01:24:23,000 --> 01:24:24,000
连人都看不出来

2931
01:24:24,000 --> 01:24:25,000
比如说中国两个字

2932
01:24:25,000 --> 01:24:30,000
中国大陆的写法和日本的写法是完全一模一样的

2933
01:24:30,000 --> 01:24:30,000
所以呢

2934
01:24:30,000 --> 01:24:31,000
如果你单写中国两个字

2935
01:24:31,000 --> 01:24:33,000
你不知道这是日文还是中文

2936
01:24:33,000 --> 01:24:35,000
而且你不知道它指的是中国还是日本的中国

2937
01:24:35,000 --> 01:24:36,000
意思也不一样

2938
01:24:36,000 --> 01:24:37,000
对

2939
01:24:37,000 --> 01:24:38,000
因为日本也有中国地区

2940
01:24:38,000 --> 01:24:39,000
什么意思

2941
01:24:39,000 --> 01:24:42,000
日本有一个地区就叫中国

2942
01:24:42,000 --> 01:24:46,000
所以这就是为什么在历史上

2943
01:24:46,000 --> 01:24:49,000
日本管中国他们喜欢叫支那

2944
01:24:49,000 --> 01:24:51,000
就是因为如果说中国的话

2945
01:24:51,000 --> 01:24:51,000
对

2946
01:24:51,000 --> 01:24:54,000
他们就指的是日本的中国地区

2947
01:24:54,000 --> 01:24:55,000
就是广岛的那附近

2948
01:24:55,000 --> 01:24:56,000
那叫日本

2949
01:24:56,000 --> 01:24:58,000
那是日本的中国地区

2950
01:24:58,000 --> 01:24:58,000
对

2951
01:24:58,000 --> 01:25:01,000
所以他们选择了这个法语词的法语是吧

2952
01:25:01,000 --> 01:25:02,000
看起来比较洋气

2953
01:25:02,000 --> 01:25:05,000
支那不是法语词

2954
01:25:05,000 --> 01:25:07,000
应该是吧

2955
01:25:07,000 --> 01:25:08,000
它应该是那个 China 的

2956
01:25:08,000 --> 01:25:10,000
支那是从 Sina 来的

2957
01:25:10,000 --> 01:25:12,000
就是印度就是

2958
01:25:12,000 --> 01:25:15,000
是印度那边过来的是吧

2959
01:25:15,000 --> 01:25:16,000
印度

2960
01:25:16,000 --> 01:25:17,000
就是那个什么 Sino

2961
01:25:17,000 --> 01:25:18,000
Sino

2962
01:25:18,000 --> 01:25:18,000
对啊

2963
01:25:18,000 --> 01:25:19,000
现在英文也是我们

2964
01:25:19,000 --> 01:25:20,000
Sino 派

2965
01:25:20,000 --> 01:25:21,000
就是同源

2966
01:25:21,000 --> 01:25:21,000
对啊

2967
01:25:21,000 --> 01:25:23,000
就像什么 Sino

2968
01:25:23,000 --> 01:25:25,000
Sino American Relationship

2969
01:25:25,000 --> 01:25:26,000
对吧

2970
01:25:26,000 --> 01:25:26,000
对对对

2971
01:25:26,000 --> 01:25:27,000
你就是这个词源

2972
01:25:27,000 --> 01:25:28,000
有时候就挺

2973
01:25:28,000 --> 01:25:30,000
就有时候看那个说

2974
01:25:30,000 --> 01:25:32,000
说支那是一个什么歧视性的称物

2975
01:25:32,000 --> 01:25:33,000
我就觉得挺扯的

2976
01:25:33,000 --> 01:25:34,000
你自己翻译那时候

2977
01:25:34,000 --> 01:25:35,000
你不写的什么 Sino

2978
01:25:35,000 --> 01:25:35,000
什么什么

2979
01:25:35,000 --> 01:25:37,000
所以其实支那

2980
01:25:37,000 --> 01:25:40,000
这是一个历史上就很常用的一个词

2981
01:25:40,000 --> 01:25:40,000
对

2982
01:25:40,000 --> 01:25:42,000
只是到因为到后面打仗了以后

2983
01:25:42,000 --> 01:25:44,000
才变成有歧视

2984
01:25:44,000 --> 01:25:46,000
这原来他完全没有这个意思的

2985
01:25:46,000 --> 01:25:47,000
就没有歧视的

2986
01:25:47,000 --> 01:25:48,000
明白明白

2987
01:25:48,000 --> 01:25:49,000
OK

2988
01:25:49,000 --> 01:25:51,000
所以的话就这个退回来讲

2989
01:25:51,000 --> 01:25:52,000
就是你如果单纯写

2990
01:25:52,000 --> 01:25:54,000
这中国这两个字的话

2991
01:25:54,000 --> 01:25:56,000
你更别说是机器了

2992
01:25:56,000 --> 01:25:57,000
连人也看不出来

2993
01:25:57,000 --> 01:25:59,000
就到底是中文还是日文

2994
01:25:59,000 --> 01:26:00,000
所以还是要

2995
01:26:00,000 --> 01:26:03,000
非常仔仔细细的去 mark

2996
01:26:03,000 --> 01:26:04,000
对

2997
01:26:04,000 --> 01:26:07,000
你是要给他一个 locale 的这样一个信息

2998
01:26:07,000 --> 01:26:11,000
他才能更加正确和精确的显示

2999
01:26:11,000 --> 01:26:13,000
这个你所想要的结果

3000
01:26:13,000 --> 01:26:18,000
就其实是一个信息处理的一种架构或者哲学吧

3001
01:26:18,000 --> 01:26:21,000
这个其实大家可以去看那个小林剑写的那本

3002
01:26:21,000 --> 01:26:24,000
CJKV 的这个信息处理的那本书了

3003
01:26:24,000 --> 01:26:27,000
他应该算是一个这方面的专家

3004
01:26:27,000 --> 01:26:31,000
然后他应该方方面面都会照顾到这些问题

3005
01:26:31,000 --> 01:26:32,000
然后告诉你

3006
01:26:32,000 --> 01:26:35,000
在不同的层面他们分别是用什么样的技术去解决的

3007
01:26:35,000 --> 01:26:40,000
我们不可能依赖 unico 的这样一种技术方案来解决所有的问题

3008
01:26:40,000 --> 01:26:47,000
所以刚刚你们说那个中文的中国和日文的中国在 unico 里面是不同的点位

3009
01:26:47,000 --> 01:26:48,000
一样的

3010
01:26:48,000 --> 01:26:49,000
一样的

3011
01:26:49,000 --> 01:26:49,000
完全一样的

3012
01:26:49,000 --> 01:26:52,000
但是写出来是一样的吗

3013
01:26:52,000 --> 01:26:53,000
就不涉及这个问题

3014
01:26:53,000 --> 01:26:54,000
写出来完全一样

3015
01:26:54,000 --> 01:26:54,000
对对没错

3016
01:26:54,000 --> 01:26:59,000
写出来完全一样取决于你从谁的角度来看

3017
01:26:59,000 --> 01:27:02,000
就是假如你是一个日本人写了中国两个字

3018
01:27:02,000 --> 01:27:03,000
然后你让中国来看

3019
01:27:03,000 --> 01:27:04,000
可能看不出来

3020
01:27:04,000 --> 01:27:06,000
但如果你用一个日文字体的话

3021
01:27:06,000 --> 01:27:11,000
你会看到中国这两个字在日文和中文字体里面有不一样的风格

3022
01:27:11,000 --> 01:27:12,000
所以多少还是能判断出来

3023
01:27:12,000 --> 01:27:13,000
这是一个

3024
01:27:13,000 --> 01:27:16,000
就是有可能你可以判断出来

3025
01:27:16,000 --> 01:27:17,000
这是日本的中国

3026
01:27:17,000 --> 01:27:18,000
就是看语意了

3027
01:27:18,000 --> 01:27:20,000
就是看那个上下文在讲什么

3028
01:27:20,000 --> 01:27:21,000
不是看语意

3029
01:27:21,000 --> 01:27:21,000
就是看字形

3030
01:27:21,000 --> 01:27:23,000
他的意思是那个看 design

3031
01:27:23,000 --> 01:27:23,000
因为

3032
01:27:23,000 --> 01:27:25,000
看那个形状

3033
01:27:25,000 --> 01:27:26,000
对

3034
01:27:26,000 --> 01:27:30,000
每个国家的那个字形的标准都有多少区别

3035
01:27:30,000 --> 01:27:32,000
那是 design 风格的问题

3036
01:27:32,000 --> 01:27:33,000
设计风格的问题

3037
01:27:33,000 --> 01:27:35,000
所以呢

3038
01:27:35,000 --> 01:27:38,000
这个 CJK 统一汉字

3039
01:27:38,000 --> 01:27:41,000
它叫统一表意文字

3040
01:27:41,000 --> 01:27:43,000
对

3041
01:27:43,000 --> 01:27:46,000
所以后来就一直

3042
01:27:46,000 --> 01:27:48,000
当然字是不够用

3043
01:27:48,000 --> 01:27:49,000
所以就一直扩展

3044
01:27:49,000 --> 01:27:51,000
然后后面就扩展 A 区

3045
01:27:51,000 --> 01:27:51,000
扩展 B 区

3046
01:27:51,000 --> 01:27:55,000
我们大陆说扩展 ABCDE

3047
01:27:55,000 --> 01:27:56,000
现在已经有 E 区了

3048
01:27:56,000 --> 01:27:58,000
台湾他们那边说扩展

3049
01:27:58,000 --> 01:27:59,000
甲乙丙丁物

3050
01:27:59,000 --> 01:28:00,000
这个说法不一样而已

3051
01:28:00,000 --> 01:28:02,000
其实这东西是一样的

3052
01:28:02,000 --> 01:28:03,000
现在有 F 区了

3053
01:28:03,000 --> 01:28:03,000
是吗

3054
01:28:03,000 --> 01:28:04,000
都已经到

3055
01:28:04,000 --> 01:28:05,000
所以字是越来越多

3056
01:28:05,000 --> 01:28:06,000
越来越多

3057
01:28:06,000 --> 01:28:08,000
好像是有了

3058
01:28:08,000 --> 01:28:11,000
各种考古挖出来一些新字

3059
01:28:11,000 --> 01:28:11,000
又得加进去

3060
01:28:11,000 --> 01:28:12,000
对

3061
01:28:12,000 --> 01:28:14,000
而且什么转

3062
01:28:14,000 --> 01:28:15,000
小转

3063
01:28:15,000 --> 01:28:16,000
大转

3064
01:28:16,000 --> 01:28:17,000
之类的都可以加

3065
01:28:17,000 --> 01:28:17,000
对啊

3066
01:28:17,000 --> 01:28:18,000
就是

3067
01:28:18,000 --> 01:28:19,000
所以呢

3068
01:28:19,000 --> 01:28:21,000
因为本身 UNICO

3069
01:28:21,000 --> 01:28:23,000
它本身也一直都在更新

3070
01:28:23,000 --> 01:28:29,000
至少 UNICO 的 8.0 的话

3071
01:28:29,000 --> 01:28:30,000
已经有扩

3072
01:28:30,000 --> 01:28:32,000
已经到扩展 E 区了

3073
01:28:32,000 --> 01:28:33,000
这是已经有了

3074
01:28:33,000 --> 01:28:34,000
这是已经收

3075
01:28:34,000 --> 01:28:35,000
已经收进去了

3076
01:28:35,000 --> 01:28:35,000
对

3077
01:28:35,000 --> 01:28:37,000
所以以后我们不能说

3078
01:28:37,000 --> 01:28:39,000
把那个什么扫进固纸堆里面

3079
01:28:39,000 --> 01:28:41,000
我们得扫进 UNICO 这个垃圾坑里面

3080
01:28:41,000 --> 01:28:46,000
好

3081
01:28:46,000 --> 01:28:48,000
这是说到 UNICO 的这个字的问题

3082
01:28:48,000 --> 01:28:48,000
对吧

3083
01:28:48,000 --> 01:28:50,000
然后 UNICO 的编码问题呢

3084
01:28:50,000 --> 01:28:52,000
这个坑就大了

3085
01:28:52,000 --> 01:28:53,000
之前吴涛在那个

3086
01:28:53,000 --> 01:28:56,000
那一期单口节目里面

3087
01:28:56,000 --> 01:28:57,000
已经大开讲过了

3088
01:28:57,000 --> 01:28:59,000
这里要不要再重申一遍

3089
01:28:59,000 --> 01:29:01,000
为什么你们都记得那一期

3090
01:29:01,000 --> 01:29:01,000
我讲了什么

3091
01:29:01,000 --> 01:29:03,000
我现在完全不记得自己那一期讲

3092
01:29:03,000 --> 01:29:05,000
魏璐这节目

3093
01:29:05,000 --> 01:29:06,000
我还特地翻出来听了一遍

3094
01:29:06,000 --> 01:29:09,000
结果听到后面居然是

3095
01:29:09,000 --> 01:29:10,000
情绪演怎么找女朋友

3096
01:29:10,000 --> 01:29:11,000
这什么鬼

3097
01:29:11,000 --> 01:29:14,000
其实我也写了一篇

3098
01:29:14,000 --> 01:29:16,000
很简单的一个博客吧

3099
01:29:16,000 --> 01:29:17,000
去说这个

3100
01:29:17,000 --> 01:29:18,000
大概记录了一下

3101
01:29:18,000 --> 01:29:21,000
我当时学习这个坑的一个结果

3102
01:29:21,000 --> 01:29:25,000
这个编码方式的那个 UTF 8

3103
01:29:25,000 --> 01:29:26,000
和 UTF 16 什么什么

3104
01:29:26,000 --> 01:29:28,000
但是你们详细的说一下

3105
01:29:28,000 --> 01:29:30,000
其实这个坑还蛮多的

3106
01:29:30,000 --> 01:29:31,000
这个我可以讲一下

3107
01:29:31,000 --> 01:29:32,000
对

3108
01:29:32,000 --> 01:29:33,000
就最开始的时候

3109
01:29:33,000 --> 01:29:35,000
其实没有 UTF 16 的

3110
01:29:35,000 --> 01:29:38,000
最开始的时候就叫 UCS 2

3111
01:29:38,000 --> 01:29:39,000
对没错

3112
01:29:39,000 --> 01:29:43,000
这个坑也是一个历史一流问题

3113
01:29:43,000 --> 01:29:43,000
对

3114
01:29:43,000 --> 01:29:47,000
然后 UCS 2 其实它只是编码了

3115
01:29:47,000 --> 01:29:48,000
刚才讲的那个叫做 BMP

3116
01:29:48,000 --> 01:29:49,000
就是基本平面

3117
01:29:49,000 --> 01:29:53,000
就是一共有 6 万 5 千 5 百 36 个点

3118
01:29:53,000 --> 01:29:54,000
对吧

3119
01:29:54,000 --> 01:29:56,000
然后就很简单

3120
01:29:56,000 --> 01:29:59,000
就是没有任何额外的东西

3121
01:29:59,000 --> 01:30:03,000
然后 UCS 2 和 UTF 16 的区别是什么

3122
01:30:03,000 --> 01:30:07,000
就是 UTF 16 里面其实是等于 UCS 2

3123
01:30:07,000 --> 01:30:11,000
然后加了那个叫做 Seregate Parent

3124
01:30:11,000 --> 01:30:12,000
Seregate Parent 中文叫什么

3125
01:30:12,000 --> 01:30:13,000
代理对

3126
01:30:13,000 --> 01:30:16,000
对

3127
01:30:16,000 --> 01:30:18,000
我一直不知道中文叫什么

3128
01:30:18,000 --> 01:30:20,000
或者这么理解吧

3129
01:30:20,000 --> 01:30:24,000
UCS 2 可以大致等同于这个 GB 2312

3130
01:30:24,000 --> 01:30:25,000
对于中文的概念

3131
01:30:25,000 --> 01:30:28,000
因为它就是一个定长的

3132
01:30:28,000 --> 01:30:29,000
没有任何特殊东西的

3133
01:30:29,000 --> 01:30:31,000
就只是那么多个点位而已

3134
01:30:31,000 --> 01:30:32,000
然后当时

3135
01:30:32,000 --> 01:30:34,000
但是因为当时已经突破了

3136
01:30:34,000 --> 01:30:35,000
那个基本平面了

3137
01:30:35,000 --> 01:30:35,000
对吧

3138
01:30:35,000 --> 01:30:42,000
就是要想办法表达 65,536 个点之外的东西

3139
01:30:42,000 --> 01:30:43,000
怎么办

3140
01:30:43,000 --> 01:30:44,000
想出这么一个 hack

3141
01:30:44,000 --> 01:30:46,000
就是说在那个基本平面里面

3142
01:30:46,000 --> 01:30:47,000
抠出了一小段

3143
01:30:47,000 --> 01:30:48,000
大概是

3144
01:30:48,000 --> 01:30:49,000
我看看

3145
01:30:49,000 --> 01:30:52,000
这个是这个 16 进制编码

3146
01:30:52,000 --> 01:30:54,000
是 D 800 到 DFF

3147
01:30:54,000 --> 01:30:58,000
这几个字符

3148
01:30:58,000 --> 01:31:00,000
是用作 Seregate Pair

3149
01:31:00,000 --> 01:31:02,000
Seregate Pair 是什么意思

3150
01:31:02,000 --> 01:31:05,000
等于是从两个字节的

3151
01:31:05,000 --> 01:31:06,000
一个定长编码里面

3152
01:31:06,000 --> 01:31:07,000
Markup

3153
01:31:07,000 --> 01:31:08,000
就是刚才讲

3154
01:31:08,000 --> 01:31:09,000
无头说的方法

3155
01:31:09,000 --> 01:31:09,000
做标记

3156
01:31:09,000 --> 01:31:09,000
用一个

3157
01:31:09,000 --> 01:31:10,000
对

3158
01:31:10,000 --> 01:31:11,000
做了一个特殊标记

3159
01:31:11,000 --> 01:31:13,000
说从这些字符之间的东西

3160
01:31:13,000 --> 01:31:15,000
你要进行一个特殊处理

3161
01:31:15,000 --> 01:31:17,000
使得我们可以超出

3162
01:31:17,000 --> 01:31:17,000
基本平面

3163
01:31:17,000 --> 01:31:20,000
那个 65,536 个字符的限制

3164
01:31:20,000 --> 01:31:22,000
这个就是 UTF 16

3165
01:31:22,000 --> 01:31:23,000
他当时

3166
01:31:23,000 --> 01:31:25,000
做出这个编码方案

3167
01:31:25,000 --> 01:31:27,000
其实还是为了省资源

3168
01:31:27,000 --> 01:31:27,000
对吧

3169
01:31:27,000 --> 01:31:29,000
就是节省编码

3170
01:31:29,000 --> 01:31:30,000
对

3171
01:31:30,000 --> 01:31:30,000
对

3172
01:31:30,000 --> 01:31:31,000
是因为是这样

3173
01:31:31,000 --> 01:31:32,000
就是说

3174
01:31:32,000 --> 01:31:33,000
如果当时有一个

3175
01:31:33,000 --> 01:31:34,000
就刚才讲 UCS 2

3176
01:31:34,000 --> 01:31:35,000
是一个非常简单的编码方式

3177
01:31:35,000 --> 01:31:36,000
其实对应的

3178
01:31:36,000 --> 01:31:38,000
还有一个叫 UCS 4

3179
01:31:38,000 --> 01:31:38,000
就是

3180
01:31:38,000 --> 01:31:39,000
对

3181
01:31:39,000 --> 01:31:40,000
就是四个字节

3182
01:31:40,000 --> 01:31:41,000
32 位的东西

3183
01:31:41,000 --> 01:31:43,000
然后 UCS 4

3184
01:31:43,000 --> 01:31:45,000
本质上就是 UTF 32

3185
01:31:45,000 --> 01:31:46,000
它是一个

3186
01:31:46,000 --> 01:31:49,000
它是一个固定的

3187
01:31:49,000 --> 01:31:50,000
对

3188
01:31:50,000 --> 01:31:51,000
就是定长编码

3189
01:31:51,000 --> 01:31:52,000
就很浪费

3190
01:31:52,000 --> 01:31:54,000
就是你一个字母 A 的话

3191
01:31:54,000 --> 01:31:55,000
也要用那个

3192
01:31:55,000 --> 01:31:56,000
特别浪费

3193
01:31:56,000 --> 01:31:57,000
对

3194
01:31:57,000 --> 01:31:57,000
对

3195
01:31:57,000 --> 01:31:58,000
所以后来权衡一下

3196
01:31:58,000 --> 01:31:59,000
就是说

3197
01:31:59,000 --> 01:31:59,000
我们还是用

3198
01:31:59,000 --> 01:32:00,000
就是内部

3199
01:32:00,000 --> 01:32:01,000
还是用 UTF 16

3200
01:32:01,000 --> 01:32:03,000
用 UCS 2

3201
01:32:03,000 --> 01:32:05,000
这个定长的比较好

3202
01:32:05,000 --> 01:32:06,000
但是要为了

3203
01:32:06,000 --> 01:32:07,000
要解决

3204
01:32:07,000 --> 01:32:09,000
那个超出基本平面的问题

3205
01:32:09,000 --> 01:32:10,000
所以加了这个

3206
01:32:10,000 --> 01:32:11,000
surrogate pair

3207
01:32:11,000 --> 01:32:11,000
这种

3208
01:32:11,000 --> 01:32:12,000
这种 hack

3209
01:32:12,000 --> 01:32:14,000
使得 UCS 2

3210
01:32:14,000 --> 01:32:15,000
变成了 UTF 16

3211
01:32:15,000 --> 01:32:16,000
这么一个博程

3212
01:32:16,000 --> 01:32:17,000
就看那个标记

3213
01:32:17,000 --> 01:32:18,000
有了这个标记以后

3214
01:32:18,000 --> 01:32:20,000
我就要用另外一个了

3215
01:32:20,000 --> 01:32:20,000
对吧

3216
01:32:20,000 --> 01:32:23,000
就是你搜

3217
01:32:23,000 --> 01:32:24,000
搜那个 UCS 2 里面的

3218
01:32:24,000 --> 01:32:25,000
那个 surrogate pair

3219
01:32:25,000 --> 01:32:27,000
那段是没有定义的

3220
01:32:27,000 --> 01:32:29,000
用上人为规定说

3221
01:32:29,000 --> 01:32:30,000
如果你看到有这种

3222
01:32:30,000 --> 01:32:32,000
这种 surrogate pair 的字符

3223
01:32:32,000 --> 01:32:35,000
就知道你这个是 UTF 16

3224
01:32:35,000 --> 01:32:36,000
所以这些 surrogate pair 里面东西

3225
01:32:36,000 --> 01:32:37,000
你要特殊处理

3226
01:32:37,000 --> 01:32:41,000
反正也是一个很大的坑

3227
01:32:41,000 --> 01:32:44,000
然后说到这个定长编码

3228
01:32:44,000 --> 01:32:45,000
就 unicor 定长编码

3229
01:32:45,000 --> 01:32:46,000
就会牵涉到一个

3230
01:32:46,000 --> 01:32:48,000
这个所谓的顺序的问题

3231
01:32:48,000 --> 01:32:51,000
这又是一个更大的坑

3232
01:32:51,000 --> 01:32:53,000
深坑

3233
01:32:53,000 --> 01:32:56,000
这其实是那个非单字节编码

3234
01:32:56,000 --> 01:32:57,000
都要牵涉

3235
01:32:57,000 --> 01:32:58,000
对非单字节编码

3236
01:32:58,000 --> 01:32:59,000
都有这个很明显的问题

3237
01:32:59,000 --> 01:33:01,000
这个不光是在字符编码上

3238
01:33:01,000 --> 01:33:02,000
其实在计算机的

3239
01:33:02,000 --> 01:33:03,000
这个数字的表达上

3240
01:33:03,000 --> 01:33:04,000
也会有这个问题

3241
01:33:04,000 --> 01:33:05,000
比如说我们常说

3242
01:33:05,000 --> 01:33:07,000
计算机一个字节

3243
01:33:07,000 --> 01:33:08,000
就最小单位

3244
01:33:08,000 --> 01:33:10,000
是就是八个位

3245
01:33:10,000 --> 01:33:10,000
对吧

3246
01:33:10,000 --> 01:33:11,000
但是两个字节

3247
01:33:11,000 --> 01:33:13,000
就是你表示 16 位整数的时候

3248
01:33:13,000 --> 01:33:14,000
也会牵涉到哪个是高位

3249
01:33:14,000 --> 01:33:15,000
哪个是低位

3250
01:33:15,000 --> 01:33:16,000
就是哪边是高位

3251
01:33:16,000 --> 01:33:17,000
哪边是低位的问题

3252
01:33:17,000 --> 01:33:18,000
对

3253
01:33:18,000 --> 01:33:21,000
然后就会所谓的

3254
01:33:21,000 --> 01:33:22,000
我们就会牵涉到那个

3255
01:33:22,000 --> 01:33:23,000
叫做 indian

3256
01:33:23,000 --> 01:33:24,000
indian 中文翻成什么

3257
01:33:24,000 --> 01:33:27,000
端吧

3258
01:33:27,000 --> 01:33:28,000
就翻成端

3259
01:33:28,000 --> 01:33:30,000
一般那个就是端系

3260
01:33:30,000 --> 01:33:32,000
对我们一般管那个叫端式

3261
01:33:32,000 --> 01:33:35,000
就大端和大尾和小尾

3262
01:33:35,000 --> 01:33:36,000
这个是个章语名

3263
01:33:36,000 --> 01:33:37,000
我今天说大头小头

3264
01:33:37,000 --> 01:33:38,000
对端式

3265
01:33:38,000 --> 01:33:41,000
对他其实表示的就是头

3266
01:33:41,000 --> 01:33:42,000
大头派小头派

3267
01:33:42,000 --> 01:33:43,000
没错了

3268
01:33:43,000 --> 01:33:45,000
就原作是指这个

3269
01:33:45,000 --> 01:33:48,000
就在格列夫游记的原作里面是指

3270
01:33:48,000 --> 01:33:50,000
小人国在打内战的时候

3271
01:33:50,000 --> 01:33:51,000
他其实是使了那个意思

3272
01:33:51,000 --> 01:33:53,000
说吃鸡蛋要从大头开始敲

3273
01:33:53,000 --> 01:33:55,000
还是从小头开始敲

3274
01:33:55,000 --> 01:33:57,000
然后因此还发过六次叛乱

3275
01:33:57,000 --> 01:33:58,000
对对对

3276
01:33:58,000 --> 01:34:00,000
indian 就是从那个鸡蛋的那个两头

3277
01:34:00,000 --> 01:34:01,000
那个地方来的吧

3278
01:34:01,000 --> 01:34:01,000
好像

3279
01:34:01,000 --> 01:34:02,000
对

3280
01:34:02,000 --> 01:34:03,000
他用了那个小固

3281
01:34:03,000 --> 01:34:04,000
对对对

3282
01:34:04,000 --> 01:34:05,000
然后

3283
01:34:05,000 --> 01:34:07,000
然后这个坑就比较深了

3284
01:34:07,000 --> 01:34:08,000
就是说简单来讲

3285
01:34:08,000 --> 01:34:09,000
就是内头

3286
01:34:09,000 --> 01:34:10,000
就是对于一个数字来讲

3287
01:34:10,000 --> 01:34:13,000
比如说对于一个 16 位的整数来讲

3288
01:34:13,000 --> 01:34:15,000
你觉得第一就是从左到右数

3289
01:34:15,000 --> 01:34:16,000
左边是高位呢

3290
01:34:16,000 --> 01:34:17,000
还是右边是高位

3291
01:34:17,000 --> 01:34:18,000
对吧

3292
01:34:18,000 --> 01:34:19,000
嗯

3293
01:34:19,000 --> 01:34:20,000
没错吧

3294
01:34:20,000 --> 01:34:21,000
我想想

3295
01:34:21,000 --> 01:34:22,000
对对对

3296
01:34:22,000 --> 01:34:25,000
就是大端式的话

3297
01:34:25,000 --> 01:34:26,000
就是左边是高位

3298
01:34:26,000 --> 01:34:28,000
小端式就是右边是高位

3299
01:34:28,000 --> 01:34:28,000
对

3300
01:34:28,000 --> 01:34:30,000
但是在字符级的时候

3301
01:34:30,000 --> 01:34:31,000
这个坑就又多了

3302
01:34:31,000 --> 01:34:32,000
就会牵涉到

3303
01:34:32,000 --> 01:34:32,000
因为

3304
01:34:32,000 --> 01:34:35,000
我想想怎么表述这个东西

3305
01:34:35,000 --> 01:34:39,000
就是首先你要看他的这个字节的组合

3306
01:34:39,000 --> 01:34:41,000
是怎样分成一个一个单元的

3307
01:34:41,000 --> 01:34:43,000
然后他在每个单元的内部

3308
01:34:43,000 --> 01:34:45,000
会有一个端式的这个

3309
01:34:45,000 --> 01:34:46,000
对

3310
01:34:46,000 --> 01:34:47,000
因为有有有有这么一个问题

3311
01:34:47,000 --> 01:34:48,000
可能要解释一下

3312
01:34:48,000 --> 01:34:50,000
就是说在数字上面

3313
01:34:50,000 --> 01:34:53,000
我们写一般是说是从左往右

3314
01:34:53,000 --> 01:34:53,000
对对吧

3315
01:34:53,000 --> 01:34:55,000
我们正常的是个书写顺序

3316
01:34:55,000 --> 01:34:58,000
但是在表达那个如果是位的话

3317
01:34:58,000 --> 01:35:00,000
如果你是小的大端小端

3318
01:35:00,000 --> 01:35:01,000
就某一端的时候

3319
01:35:01,000 --> 01:35:04,000
它是最右边那个位开始起的

3320
01:35:04,000 --> 01:35:06,000
因为你想就是低位高位的话

3321
01:35:06,000 --> 01:35:08,000
各位数是在右边

3322
01:35:08,000 --> 01:35:10,000
然后越高位的话是越往左写

3323
01:35:10,000 --> 01:35:12,000
越往左边的是越高位

3324
01:35:12,000 --> 01:35:15,000
对对

3325
01:35:15,000 --> 01:35:16,000
这个也是一个很深的一个

3326
01:35:16,000 --> 01:35:19,000
经常经常我搞不清楚

3327
01:35:19,000 --> 01:35:22,000
这里面到底是哪个是哪个原理

3328
01:35:22,000 --> 01:35:24,000
就是你想如果我们把那个位

3329
01:35:24,000 --> 01:35:27,000
作为一个图形化的方式表达在眼前的话

3330
01:35:27,000 --> 01:35:31,000
你会发现它其实是从右边开始增加的

3331
01:35:31,000 --> 01:35:33,000
嗯哼

3332
01:35:33,000 --> 01:35:34,000
你明白我的意思吗

3333
01:35:34,000 --> 01:35:34,000
对

3334
01:35:34,000 --> 01:35:36,000
就是比如说 01

3335
01:35:36,000 --> 01:35:37,000
然后 10

3336
01:35:37,000 --> 01:35:38,000
然后 11

3337
01:35:38,000 --> 01:35:39,000
100

3338
01:35:39,000 --> 01:35:40,000
110

3339
01:35:40,000 --> 01:35:41,000
这样的方式

3340
01:35:41,000 --> 01:35:41,000
对吧

3341
01:35:41,000 --> 01:35:43,000
我觉得这样

3342
01:35:43,000 --> 01:35:45,000
就说出来好

3343
01:35:45,000 --> 01:35:47,000
大家肯定晕了

3344
01:35:47,000 --> 01:35:47,000
anyway

3345
01:35:47,000 --> 01:35:48,000
没错

3346
01:35:48,000 --> 01:35:50,000
得再脑筹化一下

3347
01:35:50,000 --> 01:35:50,000
对

3348
01:35:50,000 --> 01:35:53,000
其实我们只需要认可

3349
01:35:53,000 --> 01:35:56,000
这个世界上事实上存在了这样两种顺势

3350
01:35:56,000 --> 01:36:01,000
那么这两种顺势实际上是由计算机这个体系的硬件架构所决定的

3351
01:36:01,000 --> 01:36:05,000
一派架构它就是以这个小端式来保存它的数据

3352
01:36:05,000 --> 01:36:09,000
而另一端另一种架构就是以大端式来保存它的数据

3353
01:36:09,000 --> 01:36:10,000
对

3354
01:36:10,000 --> 01:36:13,000
然后这个在我们常用的计算机里面英特尔架构

3355
01:36:13,000 --> 01:36:15,000
就是我们现在用的 X 86

3356
01:36:15,000 --> 01:36:17,000
它是一个小端设计的

3357
01:36:17,000 --> 01:36:17,000
嗯

3358
01:36:17,000 --> 01:36:17,000
对

3359
01:36:17,000 --> 01:36:22,000
但是在互联网上我们所基本上所有的这个通讯协议

3360
01:36:22,000 --> 01:36:25,000
以及这个网络标准全部都是以大端来设计的

3361
01:36:25,000 --> 01:36:28,000
所以坑就从这里开始了

3362
01:36:28,000 --> 01:36:29,000
没错

3363
01:36:29,000 --> 01:36:33,000
这是不是跟早期的服务器用的那个架构有关

3364
01:36:33,000 --> 01:36:37,000
因为早期的那个做互联网的那些服务器都不是英特尔的处理器

3365
01:36:37,000 --> 01:36:41,000
都是一些其他那些现在已经销声匿迹的那些处理器

3366
01:36:41,000 --> 01:36:44,000
都基于 UNIX 的其实是吧

3367
01:36:44,000 --> 01:36:45,000
不那个是操作系统的

3368
01:36:45,000 --> 01:36:46,000
那个还没有

3369
01:36:46,000 --> 01:36:48,000
这个是一个硬件层

3370
01:36:48,000 --> 01:36:49,000
这很低层的

3371
01:36:49,000 --> 01:36:50,000
然后就对对

3372
01:36:50,000 --> 01:36:53,000
早期的那些很多那个做互联网的服务器啊

3373
01:36:53,000 --> 01:36:57,000
还有包括那些开发就是最开始说什么 APA 那些用的机器

3374
01:36:57,000 --> 01:36:59,000
他们其实很多都是大端的就是 big ending 的

3375
01:36:59,000 --> 01:37:03,000
所以就他们的用的那些机器变成了一个正统

3376
01:37:03,000 --> 01:37:06,000
然后反而现在我们做小端的那个英特尔的处理器到时候

3377
01:37:06,000 --> 01:37:09,000
就为什么你写 C 程序的时候还要有一个什么

3378
01:37:09,000 --> 01:37:20,000
host H 2 N H 2 L H 2 L 和 L 2 H 就是转换网络的端和这个本地的这个

3379
01:37:20,000 --> 01:37:21,000
host to local 是吧

3380
01:37:21,000 --> 01:37:23,000
对对对

3381
01:37:23,000 --> 01:37:27,000
对那个小端序是 VAX 和英特的架构

3382
01:37:27,000 --> 01:37:29,000
大端序是摩托罗拉和桑的那个架构

3383
01:37:29,000 --> 01:37:30,000
没错没错

3384
01:37:30,000 --> 01:37:32,000
就是什么 spark 啊那些东西

3385
01:37:32,000 --> 01:37:34,000
anyway 说回这个啊

3386
01:37:34,000 --> 01:37:40,000
就在这个字体这个 UTF 8 编码 UTF 16 和 UTF 32 编码也有这个同样的问题

3387
01:37:40,000 --> 01:37:45,000
就是说第一个字节到底代表是小头还是大头

3388
01:37:45,000 --> 01:37:48,000
所以他要做标注然后对吧

3389
01:37:48,000 --> 01:37:53,000
对所以为了就是他们就没有说我们大家都规定一律是用像

3390
01:37:53,000 --> 01:37:57,000
比如像网络上大家都规定说因为在所有的这个 RFC 的规范里面

3391
01:37:57,000 --> 01:38:00,000
只要涉及网络的都是用的那个大端设计嘛

3392
01:38:00,000 --> 01:38:05,000
但是在文本上面其实并没有这么一个统一就是约定俗存的一个规定

3393
01:38:05,000 --> 01:38:12,000
所以就两种都存在所以说存在说叫做 UTF 16 就是 L 1 和 UTF 16

3394
01:38:12,000 --> 01:38:13,000
B 1

3395
01:38:13,000 --> 01:38:18,000
B 1 对就两种不同的表达方这个存储方式

3396
01:38:18,000 --> 01:38:21,000
所以你们看到很多这个啊

3397
01:38:21,000 --> 01:38:23,000
Windows 上面的那个啊

3398
01:38:23,000 --> 01:38:24,000
那个

3399
01:38:24,000 --> 01:38:26,000
文本编辑器吧

3400
01:38:26,000 --> 01:38:27,000
text editor

3401
01:38:27,000 --> 01:38:28,000
记事本

3402
01:38:28,000 --> 01:38:29,000
记事本

3403
01:38:29,000 --> 01:38:30,000
对对对

3404
01:38:30,000 --> 01:38:31,000
记事本

3405
01:38:31,000 --> 01:38:32,000
对他会给你这个选项

3406
01:38:32,000 --> 01:38:37,000
然后因为存在这个 B 1 和 L 1 的区这个问题呢

3407
01:38:37,000 --> 01:38:39,000
就是很多人啊

3408
01:38:39,000 --> 01:38:42,000
就为了解决为了标志出这个文本到底是大端是小端的

3409
01:38:42,000 --> 01:38:46,000
我们有一个规定就是说用 UTF 16 编码的文本

3410
01:38:46,000 --> 01:38:49,000
会在他的第一个字符

3411
01:38:49,000 --> 01:38:50,000
应该是不

3412
01:38:50,000 --> 01:38:51,000
填两个字符

3413
01:38:51,000 --> 01:38:54,000
会放一个特殊的标志

3414
01:38:54,000 --> 01:38:55,000
叫做 Bone

3415
01:38:55,000 --> 01:38:57,000
Byte Order Mark

3416
01:38:57,000 --> 01:38:58,000
这叫什么

3417
01:38:58,000 --> 01:38:59,000
字续

3418
01:38:59,000 --> 01:39:01,000
字节序列标志

3419
01:39:01,000 --> 01:39:02,000
标志

3420
01:39:02,000 --> 01:39:04,000
这个我这个序列是大

3421
01:39:04,000 --> 01:39:05,000
是大头还是小头

3422
01:39:05,000 --> 01:39:06,000
对对对

3423
01:39:06,000 --> 01:39:11,000
然后这个这个 Bone 其实是一个两个字节的特殊型

3424
01:39:11,000 --> 01:39:12,000
特殊位

3425
01:39:12,000 --> 01:39:13,000
他是很取巧了

3426
01:39:13,000 --> 01:39:14,000
因为他呃

3427
01:39:14,000 --> 01:39:15,000
呃

3428
01:39:15,000 --> 01:39:18,000
其实是那个 UNICOD 的那个 FEFF 这个字

3429
01:39:18,000 --> 01:39:19,000
但是这个字呢

3430
01:39:19,000 --> 01:39:23,000
叫 Zero width no break space

3431
01:39:23,000 --> 01:39:28,000
就是零宽的一个不不间断的不可分割的空白

3432
01:39:28,000 --> 01:39:29,000
所以呢

3433
01:39:29,000 --> 01:39:32,000
他对你表面你看不出来有这个字

3434
01:39:32,000 --> 01:39:36,000
这是一个非常这是一个很容易把人坑死的坑

3435
01:39:36,000 --> 01:39:37,000
就是因为你看不到这个字

3436
01:39:37,000 --> 01:39:38,000
对

3437
01:39:38,000 --> 01:39:42,000
你必须用一个能够看见看不到的东西的编辑机来看

3438
01:39:42,000 --> 01:39:43,000
你才能看到这个东西

3439
01:39:43,000 --> 01:39:44,000
对对

3440
01:39:44,000 --> 01:39:46,000
当时想出这个招的也应该脱出最可的

3441
01:39:47,000 --> 01:39:48,000
对的

3442
01:39:48,000 --> 01:39:50,000
但是他当时就是因为这个字看不见

3443
01:39:50,000 --> 01:39:52,000
所以才能用来做这个 hack 嘛

3444
01:39:52,000 --> 01:39:56,000
对他当时觉得自己这个 hack 还挺挺技巧的

3445
01:39:56,000 --> 01:39:58,000
对

3446
01:39:58,000 --> 01:39:59,000
对

3447
01:39:59,000 --> 01:40:00,000
但是现在的这个 UNICOD 的规范

3448
01:40:00,000 --> 01:40:06,000
他已经不推荐你再把这个 BOM 当成这个零宽的空格来用了

3449
01:40:06,000 --> 01:40:09,000
他只推荐你用来标记这个字节式

3450
01:40:09,000 --> 01:40:10,000
对

3451
01:40:10,000 --> 01:40:12,000
现在不是应该用 UTF 8

3452
01:40:12,000 --> 01:40:14,000
为什么还有人推荐用 UTF 16

3453
01:40:14,000 --> 01:40:18,000
就是对于 UNICOD 的他这个规范书来说

3454
01:40:18,000 --> 01:40:20,000
他认为这个字节式的标记

3455
01:40:20,000 --> 01:40:23,000
即使是对于 UTF 8 的编码也有一定的作用

3456
01:40:23,000 --> 01:40:26,000
因为他能明确的告诉你这个文本处理的软件

3457
01:40:26,000 --> 01:40:28,000
你这个就是用 UNICOD 的编码

3458
01:40:28,000 --> 01:40:29,000
好吧

3459
01:40:30,000 --> 01:40:32,000
不需要 UTF 8 不需要这个东西

3460
01:40:33,000 --> 01:40:34,000
怎么说呢

3461
01:40:34,000 --> 01:40:35,000
就是

3462
01:40:35,000 --> 01:40:37,000
UNICOD 它是这样号称的了

3463
01:40:37,000 --> 01:40:38,000
就是说

3464
01:40:38,000 --> 01:40:42,000
即使你这个用 UTF 8 这样没有端序的编码方式来编码

3465
01:40:42,000 --> 01:40:46,000
那么我如果看到了这个 BOM 的这个标记位的话

3466
01:40:46,000 --> 01:40:52,000
那么我可以提前就知道这些文本一定是用 UNICOD 的某一种编码方案来编码

3467
01:40:53,000 --> 01:40:55,000
你就不用去考虑别的编码方案

3468
01:40:55,000 --> 01:40:56,000
对

3469
01:40:56,000 --> 01:40:59,000
就是说那那这里就会会设计一个问题

3470
01:40:59,000 --> 01:41:03,000
就是说在其他所有编码方案里面都没有出现过 BOM 这个东西是吧

3471
01:41:03,000 --> 01:41:05,000
就不会再开头

3472
01:41:05,000 --> 01:41:07,000
就如果或者说他做了一个约定

3473
01:41:07,000 --> 01:41:09,000
一旦在开头出现这个标记位的时候

3474
01:41:09,000 --> 01:41:11,000
我就认为他是那个 UNICOD

3475
01:41:11,000 --> 01:41:12,000
那是那个 UNICOD 的编码

3476
01:41:12,000 --> 01:41:14,000
他能做出这个约定

3477
01:41:14,000 --> 01:41:18,000
他肯定是说统计过市面上所有存存用过的这个编码方案

3478
01:41:18,000 --> 01:41:21,000
不管是日本的韩国的还是大欧洲的也好

3479
01:41:21,000 --> 01:41:25,000
他的都不会出现这么一个这么一个组合

3480
01:41:25,000 --> 01:41:27,000
就是这个 FEFF 这个位

3481
01:41:28,000 --> 01:41:29,000
对那应该是

3482
01:41:29,000 --> 01:41:34,000
因为这个字符本身作为一个非标记字符来用

3483
01:41:34,000 --> 01:41:35,000
他就是一个很罕见的

3484
01:41:35,000 --> 01:41:37,000
他是一个零宽的这样一个空格

3485
01:41:37,000 --> 01:41:40,000
如果你正确的使用这个空格的话

3486
01:41:40,000 --> 01:41:43,000
他是不会出现在这个一个字符串的开头的

3487
01:41:43,000 --> 01:41:45,000
因为他的语意决定了

3488
01:41:45,000 --> 01:41:48,000
他一定是出现在一些字符串的中间的

3489
01:41:48,000 --> 01:41:49,000
OK

3490
01:41:49,000 --> 01:41:50,000
make sense

3491
01:41:50,000 --> 01:41:51,000
Anyway

3492
01:41:51,000 --> 01:41:52,000
无论如何怎么说

3493
01:41:52,000 --> 01:41:53,000
这还是一个 bad idea

3494
01:41:55,000 --> 01:41:57,000
他的存在就是一个 bad idea

3495
01:41:57,000 --> 01:41:59,000
所以那个 windows 记事本

3496
01:41:59,000 --> 01:42:02,000
你在保存这个文件的时候

3497
01:42:02,000 --> 01:42:04,000
他有个选项叫 unicode

3498
01:42:04,000 --> 01:42:07,000
然后又有个选项叫 unicode bigendian

3499
01:42:07,000 --> 01:42:10,000
然后如果大家会想什么鬼

3500
01:42:10,000 --> 01:42:11,000
因为他是第一个选项 unicode

3501
01:42:11,000 --> 01:42:15,000
他就是默认的说这个就是 UTF 的 16

3502
01:42:15,000 --> 01:42:17,000
而且默认是小头的

3503
01:42:17,000 --> 01:42:19,000
所以他还会有另外一个选项

3504
01:42:19,000 --> 01:42:21,000
是 unicode bigendian

3505
01:42:21,000 --> 01:42:22,000
这个用大头来保存

3506
01:42:22,000 --> 01:42:25,000
所以这也是一个坑对不对

3507
01:42:25,000 --> 01:42:26,000
因为你选 unicode

3508
01:42:26,000 --> 01:42:27,000
unicode 并不是一个编码

3509
01:42:27,000 --> 01:42:28,000
对啊

3510
01:42:28,000 --> 01:42:29,000
而且然后他还有第三个选项

3511
01:42:29,000 --> 01:42:30,000
是 UTF 8

3512
01:42:30,000 --> 01:42:31,000
这其实也是

3513
01:42:31,000 --> 01:42:32,000
如果你要这样讲

3514
01:42:32,000 --> 01:42:34,000
这是 unicode 的一种编码方式而已

3515
01:42:34,000 --> 01:42:36,000
就是他把他把两个完全

3516
01:42:36,000 --> 01:42:38,000
不在一个逻辑层面的概念

3517
01:42:38,000 --> 01:42:39,000
全部放在一堆

3518
01:42:39,000 --> 01:42:40,000
然后揉成了一堆

3519
01:42:41,000 --> 01:42:44,000
对他这个菜单显示的很奇怪

3520
01:42:44,000 --> 01:42:45,000
就是他不应该这样表述

3521
01:42:45,000 --> 01:42:47,000
对他的这个术语比较乱了

3522
01:42:47,000 --> 01:42:50,000
所以把那个什么做记事本的那个产品经理

3523
01:42:50,000 --> 01:42:51,000
突然说去砍了

3524
01:42:51,000 --> 01:42:53,000
你今天要砍多少人呢

3525
01:42:55,000 --> 01:42:58,000
不合逻辑的通通砍死了

3526
01:42:59,000 --> 01:43:02,000
所以 Windows 记事本他到保存了以后

3527
01:43:02,000 --> 01:43:05,000
他这个 boom 大家都会有是吧

3528
01:43:05,000 --> 01:43:06,000
写标记了以后

3529
01:43:06,000 --> 01:43:07,000
不会

3530
01:43:07,000 --> 01:43:09,000
只会用

3531
01:43:09,000 --> 01:43:12,000
就在一个正常符合逻辑的编辑机里面

3532
01:43:12,000 --> 01:43:15,000
他应该只会用 UTF 16 或者 UTF 3

3533
01:43:15,000 --> 01:43:17,000
等下 UTF 3 好像是规定的 endian 顺序

3534
01:43:18,000 --> 01:43:20,000
他也有两种顺序可以用的

3535
01:43:20,000 --> 01:43:22,000
就是说 16 和 32 的时候

3536
01:43:22,000 --> 01:43:24,000
所以这就是为什么 Windows 他会

3537
01:43:24,000 --> 01:43:27,000
在那个 unicode 上面加一个

3538
01:43:27,000 --> 01:43:30,000
带不带 BE 这个标记的区分了

3539
01:43:30,000 --> 01:43:35,000
不但是他里面不能选 UTF 3

3540
01:43:35,000 --> 01:43:40,000
对他的产品逻辑是说就是当我标明了这个 boom 的时候

3541
01:43:40,000 --> 01:43:42,000
他有可能是用 UTF 16 编码

3542
01:43:42,000 --> 01:43:43,000
有可能是用 32 编码的

3543
01:43:43,000 --> 01:43:46,000
所以他就用 unicode 来指代这两种

3544
01:43:46,000 --> 01:43:51,000
然后同时呢他那个认为 UTF 8 是不需要这个的

3545
01:43:51,000 --> 01:43:53,000
所以他说 UTF 8 的时候呢

3546
01:43:53,000 --> 01:43:58,000
只用一个标准的编码方案来指代他现在的这个文件状态

3547
01:43:58,000 --> 01:44:00,000
Jesus

3548
01:44:00,000 --> 01:44:04,000
Anyway 就是我们最终得出结论就是千万不要用 Windows 记事本

3549
01:44:04,000 --> 01:44:07,000
如果你也要勿必记得用 UTF 8 编码

3550
01:44:07,000 --> 01:44:12,000
或者说从今天开始所有的涉及跟文字相关的

3551
01:44:12,000 --> 01:44:15,000
跟编程相关的任何是有文本的东西

3552
01:44:15,000 --> 01:44:18,000
一定要用 UTF 8 来编就可以了

3553
01:44:18,000 --> 01:44:20,000
其他的都是都是邪教

3554
01:44:20,000 --> 01:44:29,000
Windows 记事本会在 UTF 8 的编码文件里面还会加一串字

3555
01:44:29,000 --> 01:44:30,000
加一个字节串

3556
01:44:30,000 --> 01:44:31,000
没错

3557
01:44:31,000 --> 01:44:32,000
所以这是要脱了

3558
01:44:32,000 --> 01:44:33,000
他为什么还要画舌天竹呢

3559
01:44:33,000 --> 01:44:35,000
就刚才你说那个问题

3560
01:44:35,000 --> 01:44:37,000
虽然是 UTF 8

3561
01:44:37,000 --> 01:44:38,000
但是他又加了一个这个东西

3562
01:44:38,000 --> 01:44:40,000
他还是想加一些这些东西

3563
01:44:40,000 --> 01:44:41,000
他觉得保险嘛

3564
01:44:42,000 --> 01:44:45,000
让人家知道我这肯定是 unicode

3565
01:44:45,000 --> 01:44:46,000
对吧

3566
01:44:46,000 --> 01:44:48,000
脱出去砍的是很正常的处理方式

3567
01:44:48,000 --> 01:44:49,000
好吧

3568
01:44:49,000 --> 01:44:54,000
好

3569
01:44:54,000 --> 01:44:56,000
Windows 的那个坑终于踩过了

3570
01:44:56,000 --> 01:44:57,000
现在我们来讲这个

3571
01:44:57,000 --> 01:44:58,000
UTF 8 还没讲

3572
01:44:58,000 --> 01:45:00,000
UTF 8 需要讲吗

3573
01:45:00,000 --> 01:45:03,000
因为你发现其实挺好解释的可以讲

3574
01:45:03,000 --> 01:45:04,000
说说

3575
01:45:04,000 --> 01:45:05,000
我好累

3576
01:45:05,000 --> 01:45:06,000
我说

3577
01:45:09,000 --> 01:45:11,000
为什么在这个时候就要把锅赏给我

3578
01:45:11,000 --> 01:45:13,000
因为我把该坎的人都砍掉了

3579
01:45:13,000 --> 01:45:16,000
剩下都是跟你讲这个很完美的世界了

3580
01:45:17,000 --> 01:45:18,000
天

3581
01:45:19,000 --> 01:45:20,000
好吧

3582
01:45:20,000 --> 01:45:23,000
UTF 8 是一个目前看来比较完美的编码方案

3583
01:45:23,000 --> 01:45:25,000
The Holy Grail of Recoding

3584
01:45:27,000 --> 01:45:28,000
可以这么说

3585
01:45:28,000 --> 01:45:31,000
就是虽然它还是带有一些美国重心主义的色彩

3586
01:45:31,000 --> 01:45:40,000
但是基本上已经在占地和效率方面达到一个捐衡

3587
01:45:40,000 --> 01:45:42,000
UTF 8 虽然叫 UTF 8

3588
01:45:42,000 --> 01:45:45,000
但是它是一种所谓的

3589
01:45:46,000 --> 01:45:47,000
Variable Lens

3590
01:45:47,000 --> 01:45:49,000
就是可变长度的字符编码

3591
01:45:49,000 --> 01:45:52,000
就是说一个字或者说一个符号

3592
01:45:52,000 --> 01:45:55,000
比如说我们常见的这些 emoji 之类的

3593
01:45:56,000 --> 01:45:59,000
有可能用一个字一个 byte

3594
01:46:00,000 --> 01:46:03,000
就是 8 个 bit 或者最多可以用到 6 个

3595
01:46:03,000 --> 01:46:04,000
目前是 6 个吧

3596
01:46:05,000 --> 01:46:06,000
6 个 byte

3597
01:46:06,000 --> 01:46:07,000
以前是 4 个

3598
01:46:10,000 --> 01:46:11,000
现在是 6 个最多可以用到 6 个字

3599
01:46:11,000 --> 01:46:14,000
就是 68 48 个 bit

3600
01:46:14,000 --> 01:46:16,000
来代表一个符号

3601
01:46:16,000 --> 01:46:21,000
然后其中最原始的那 128 个 ASCII 的字符

3602
01:46:22,000 --> 01:46:24,000
这些就和 ASCII 一模一样

3603
01:46:24,000 --> 01:46:26,000
就是只需要一个字节

3604
01:46:26,000 --> 01:46:28,000
也就是说一个 UTF 8 的文件

3605
01:46:28,000 --> 01:46:32,000
如果它只用那个 ASCII 字符来写的话

3606
01:46:32,000 --> 01:46:37,000
它和 ASCII 编码的那个文件是一模一样

3607
01:46:38,000 --> 01:46:41,000
然后带有附加符号的什么

3608
01:46:42,000 --> 01:46:43,000
就比如说德语的语

3609
01:46:43,000 --> 01:46:45,000
然后什么阿拉伯语

3610
01:46:45,000 --> 01:46:46,000
阿拉伯语

3611
01:46:48,000 --> 01:46:50,000
俄罗斯用那个叫什么希里尔字母之类的

3612
01:46:50,000 --> 01:46:54,000
就从这些字母开始就全都需要两个字这边吧

3613
01:46:55,000 --> 01:46:59,000
然后中文则需要 3 到 4 个字

3614
01:46:59,000 --> 01:47:02,000
基本上大部分中文都是需要 3 到 4 个字

3615
01:47:02,000 --> 01:47:03,000
对

3616
01:47:03,000 --> 01:47:10,000
然后就是在尤其是那个在 unicode 里面所谓叫什么 BMP

3617
01:47:10,000 --> 01:47:12,000
BMP 的全称是什么

3618
01:47:12,000 --> 01:47:15,000
Basic Multilingual Plane

3619
01:47:15,000 --> 01:47:18,000
基本多语言平面的那个 Plane

3620
01:47:18,000 --> 01:47:23,000
这个位面里面基本上全都在三个字节里面

3621
01:47:23,000 --> 01:47:27,000
所以汉字在和用用它来编的话

3622
01:47:27,000 --> 01:47:29,000
基本上全都是三个字节

3623
01:47:29,000 --> 01:47:36,000
也就是说如果你用 UX 8 来编一个之前是用 GP 2312 编的

3624
01:47:36,000 --> 01:47:38,000
文件的话

3625
01:47:38,000 --> 01:47:42,000
那它的尺寸可能会扩大 50%

3626
01:47:43,000 --> 01:47:45,000
这可能是它的唯一个

3627
01:47:45,000 --> 01:47:47,000
对于中文使用者来说

3628
01:47:47,000 --> 01:47:50,000
但是它唯一一个比较不好的地方

3629
01:47:50,000 --> 01:47:54,000
但其实这个问题在现代都是用压缩技术的情况下

3630
01:47:54,000 --> 01:47:56,000
完全没有任何区别

3631
01:47:56,000 --> 01:48:01,000
对就是耗费的这些多余的空间

3632
01:48:01,000 --> 01:48:07,000
基本上只在网络传输和磁盘比较昂贵的时代

3633
01:48:07,000 --> 01:48:09,000
是一个比较大的招费

3634
01:48:09,000 --> 01:48:11,000
但是在目前带宽这样的话

3635
01:48:11,000 --> 01:48:14,000
大部分时候即便不压缩都还好

3636
01:48:14,000 --> 01:48:15,000
都还 OK 了

3637
01:48:15,000 --> 01:48:18,000
对你看一些文本能值多少个

3638
01:48:18,000 --> 01:48:19,000
你随便下个图不就没了

3639
01:48:19,000 --> 01:48:22,000
对

3640
01:48:22,000 --> 01:48:25,000
然后 UX 8 最开始好像是在两个月

3641
01:48:25,000 --> 01:48:29,000
好像是在 2000 年左右开始定义了

3642
01:48:29,000 --> 01:48:33,000
所以其应用也基本上就是 2000 年之后出的操作信用

3643
01:48:33,000 --> 01:48:36,000
才开始比较大规模使用

3644
01:48:36,000 --> 01:48:38,000
应该不是 UX 8 很早就有了

3645
01:48:40,000 --> 01:48:42,000
不 UTF 8 在

3646
01:48:42,000 --> 01:48:44,000
怎么说

3647
01:48:44,000 --> 01:48:47,000
有一个官方的定义文件应该是在 2000 年

3648
01:48:47,000 --> 01:48:49,000
就是它们第一版的

3649
01:48:49,000 --> 01:48:52,000
或者说最新修订版本应该是在 2000 年

3650
01:48:52,000 --> 01:48:54,000
然后它最开始的起源可能是在 9

3651
01:48:54,000 --> 01:48:55,000
可能是在 96 年

3652
01:48:55,000 --> 01:48:56,000
就反正早了

3653
01:48:56,000 --> 01:48:57,000
93 年

3654
01:48:57,000 --> 01:48:58,000
好吧

3655
01:48:58,000 --> 01:48:59,000
93 年

3656
01:48:59,000 --> 01:49:01,000
它其实不是一个特别老

3657
01:49:01,000 --> 01:49:04,000
就特别古老的编码

3658
01:49:04,000 --> 01:49:08,000
或者说它是一个相对来说比较新的编码用方式

3659
01:49:08,000 --> 01:49:12,000
然后目前来讲应用还不是特别的广泛

3660
01:49:12,000 --> 01:49:21,000
但是我们所希望达到理想国的状态就是全世界就只用 UTF 8 这样一种编码

3661
01:49:21,000 --> 01:49:23,000
刚才说了 Windows

3662
01:49:23,000 --> 01:49:25,000
Windows 内部是不是用 UTF 8 的对吧

3663
01:49:25,000 --> 01:49:26,000
是用那个双方的

3664
01:49:26,000 --> 01:49:27,000
没有系统内部会用 UTF 8 的

3665
01:49:27,000 --> 01:49:28,000
因为它是变长的

3666
01:49:28,000 --> 01:49:30,000
变长是很不利于处理的

3667
01:49:30,000 --> 01:49:31,000
对

3668
01:49:31,000 --> 01:49:40,000
所以其实 UTF 8 它的最大优势是在于不同的就是什么跨平台的或者说可交换的这样一个场景

3669
01:49:40,000 --> 01:49:46,000
就我们说到 UTF 8 或者 UTF 16 的时候其实在现实中

3670
01:49:46,000 --> 01:49:47,000
强调的都是兼容性

3671
01:49:47,000 --> 01:49:52,000
都是在它存到磁盘上就是序列化之后的一个结果了

3672
01:49:54,000 --> 01:49:59,000
互联网工程工作小组要求所有的互联网协议都必须支持 UTF 8

3673
01:49:59,000 --> 01:50:02,000
就唯一的全球认可的一个标准

3674
01:50:02,000 --> 01:50:08,000
然后互联网邮件联盟是建议所有的电子邮件的软件都支持 UTF 8

3675
01:50:08,000 --> 01:50:09,000
但这个是有点困难

3676
01:50:09,000 --> 01:50:10,000
是

3677
01:50:10,000 --> 01:50:11,000
对

3678
01:50:11,000 --> 01:50:14,000
邮件的话还有很复杂

3679
01:50:14,000 --> 01:50:15,000
对

3680
01:50:15,000 --> 01:50:20,000
然后 UTF 8 的编码方式其实也比较好理解

3681
01:50:20,000 --> 01:50:24,000
因为 8 比特的第一个位如果是 0 的话

3682
01:50:24,000 --> 01:50:26,000
它肯定是 ASCII 的编码

3683
01:50:26,000 --> 01:50:32,000
然后如果你怎么辨认说接下来两个比特是一个双比特的 UTF 8 的字符

3684
01:50:32,000 --> 01:50:33,000
就是看第一个比

3685
01:50:33,000 --> 01:50:34,000
第一个 byte

3686
01:50:34,000 --> 01:50:35,000
sorry

3687
01:50:35,000 --> 01:50:37,000
我刚才应该说字节

3688
01:50:37,000 --> 01:50:44,000
如果你怎样才能辨认出接下来两个字节是一个双字节的 UTF 8 的编码

3689
01:50:44,000 --> 01:50:48,000
就是要看第一个字节的前两位如果是 1 然后第三位是 0 的话

3690
01:50:48,000 --> 01:50:55,000
那就这意味着这是一个双字节的 UTF 码

3691
01:50:55,000 --> 01:50:57,000
如果有三个 1 然后一个 0 的话

3692
01:50:57,000 --> 01:51:00,000
那也就意味着它是一个三字节的 UTF 码

3693
01:51:00,000 --> 01:51:06,000
然后除了第一位之外其他的后面的几个字节每个字节的前两位都是 10

3694
01:51:06,000 --> 01:51:08,000
对

3695
01:51:08,000 --> 01:51:15,000
然后这样到如果你有 6 个字节来表示一个马位的话

3696
01:51:15,000 --> 01:51:19,000
那它就是 161 然后接一个 0

3697
01:51:19,000 --> 01:51:20,000
对

3698
01:51:20,000 --> 01:51:26,000
然后就可以把接下来的剩下的 5 个 byte 也都以 10 开头跟在它后面

3699
01:51:26,000 --> 01:51:28,000
然后来代表一个字符

3700
01:51:30,000 --> 01:51:31,000
差不多就这样了

3701
01:51:31,000 --> 01:51:32,000
还有什么要介绍的

3702
01:51:32,000 --> 01:51:39,000
所以就是称死 UTF 8 是 6 个字节为一个东西为一个 code

3703
01:51:40,000 --> 01:51:41,000
对

3704
01:51:41,000 --> 01:51:42,000
OK

3705
01:51:43,000 --> 01:51:44,000
这个倒不一定

3706
01:51:44,000 --> 01:51:45,000
他的这个倒不一定

3707
01:51:45,000 --> 01:51:46,000
不能再扩了吗

3708
01:51:46,000 --> 01:51:47,000
What

3709
01:51:47,000 --> 01:51:49,000
就是说你可能不能用这一套

3710
01:51:49,000 --> 01:51:52,000
第一位完全是 7 个 1 一个 0 是吧

3711
01:51:52,000 --> 01:51:59,000
就是说你不你可能不能在这种方式上继续扩展它的这个字符的这个量了吧

3712
01:51:59,000 --> 01:52:02,000
但是你还可以用一些别的方式

3713
01:52:02,000 --> 01:52:06,000
比如你可以通过中间串一个什么特殊的字符来告诉

3714
01:52:06,000 --> 01:52:08,000
他他他这样设计是有有目的的

3715
01:52:08,000 --> 01:52:12,000
就是说这个设计它最后有一个有一个很重要的特性要要解释一下

3716
01:52:12,000 --> 01:52:14,000
不然的话就很容易乱掉

3717
01:52:16,000 --> 01:52:17,000
嗯

3718
01:52:17,000 --> 01:52:22,000
就是说因为变长和就为什么刚才讲那个操作系统内部执行的时候都一定是用定长的

3719
01:52:22,000 --> 01:52:27,000
定长它都如果做那个叫什么跳转啊计算 offset 就是那个位移的话

3720
01:52:27,000 --> 01:52:29,000
但是很简单的

3721
01:52:29,000 --> 01:52:30,000
它是乘以整数的课

3722
01:52:30,000 --> 01:52:31,000
没错没错

3723
01:52:31,000 --> 01:52:33,000
但是变长的话就不具备这个问题了

3724
01:52:33,000 --> 01:52:35,000
变长的话要避免的一个很大的问题

3725
01:52:35,000 --> 01:52:38,000
就是说在一个相当长的文本里面

3726
01:52:38,000 --> 01:52:43,000
假设部分字符出现问题可能是因为磁盘存储的介质的损坏

3727
01:52:43,000 --> 01:52:48,000
或者是网络传输的问题导致中间部分那个字节发生变化的时候

3728
01:52:48,000 --> 01:52:51,000
我们能够很快的辨认出来那部分哪部分是坏的

3729
01:52:51,000 --> 01:52:55,000
并且在那个坏的那个字节或者那几个字节之后

3730
01:52:55,000 --> 01:52:58,000
立即重新的找回你的那个起点

3731
01:52:58,000 --> 01:53:03,000
就是你怎么因为是变长你不知道接下来的那个那个那个字符的起点在哪里吗

3732
01:53:03,000 --> 01:53:07,000
就中间几个码坏掉后面的字绝乱

3733
01:53:07,000 --> 01:53:08,000
对对对对对

3734
01:53:08,000 --> 01:53:12,000
这个是一种很危险的就是很很不健壮的一种一种设计

3735
01:53:12,000 --> 01:53:18,000
所以但是 UTF 8 这种设计它可以导致说它就你能够很快的叫做 self synchronizing

3736
01:53:18,000 --> 01:53:20,000
就是可以自己同步

3737
01:53:20,000 --> 01:53:22,000
因为你只要看每一个字节

3738
01:53:22,000 --> 01:53:25,000
因为你自权搜索就是每个字节每个字节的这样去跳

3739
01:53:25,000 --> 01:53:32,000
你只要看每个字节的前两位你就能够知道它这个是不是某一个这个一个这个字

3740
01:53:32,000 --> 01:53:34,000
就 character 的起点

3741
01:53:34,000 --> 01:53:38,000
因为如果它是 10 开头的话或者是零几开的话它肯定不是

3742
01:53:38,000 --> 01:53:41,000
它肯定肯定比如它是第一位是零的话它肯定是一个单一字节

3743
01:53:41,000 --> 01:53:43,000
它就是一个字符的起点对吧

3744
01:53:43,000 --> 01:53:47,000
然后如果它是 10 开头的话它肯定不是它是前面一个字符的一部分

3745
01:53:47,000 --> 01:53:50,000
对对所以它可以跳过去

3746
01:53:50,000 --> 01:53:51,000
就可以直接 skip

3747
01:53:51,000 --> 01:54:00,000
直到你又发现一个第一位是零或者或者是 11 这种开头的就根据那个前缀那个表嘛

3748
01:54:00,000 --> 01:54:02,000
所以这个是一个很重要的特性

3749
01:54:02,000 --> 01:54:04,000
如果说一旦这个结构被破坏的话

3750
01:54:04,000 --> 01:54:06,000
这个 UTF 8 的见状性就不复存在了

3751
01:54:06,000 --> 01:54:10,000
对在编码方案的这个层面确实是这样

3752
01:54:10,000 --> 01:54:12,000
对我刚刚想说的意思就是说

3753
01:54:12,000 --> 01:54:16,000
其实我们可能不必担心用 UTF 8 这种编码方案

3754
01:54:16,000 --> 01:54:20,000
会导致有一天说我们想用的字符数不够用

3755
01:54:20,000 --> 01:54:26,000
对它其实可以添加别的方案进去将这个范围扩得更多

3756
01:54:26,000 --> 01:54:32,000
就反正其实起码到目前为止六个字节的这个飞标的也已经就足够用了吧

3757
01:54:32,000 --> 01:54:36,000
对对希望我们不要再往这个 UNICO 垃圾堆里面再塞东西了

3758
01:54:36,000 --> 01:54:40,000
可是 UNICO 垃圾堆还一直都在

3759
01:54:40,000 --> 01:54:47,000
而且它现在有一个非常重大的缺口理论上可以无限 C 就是那个 EMOGE 的这个缺口

3760
01:54:47,000 --> 01:54:53,000
表情文字那个坑我们是这次讲还是下次讲

3761
01:54:53,000 --> 01:54:56,000
我们可以专门找一期专门来讲

3762
01:54:56,000 --> 01:54:59,000
可以专门找一期来讲各种各样有趣的 EMOGE

3763
01:54:59,000 --> 01:55:04,000
就是说以及有一些根本就不知道为什么要放在那的 EMOGE

3764
01:55:04,000 --> 01:55:08,000
EMOGE 里面有一个悬浮在半空中的男人对吧

3765
01:55:08,000 --> 01:55:10,000
这个 EMOGE 到底有什么意义

3766
01:55:10,000 --> 01:55:17,000
但就说这个是一个就是像型文字始终是要解决的问题

3767
01:55:17,000 --> 01:55:22,000
它是不是一个封闭的集合

3768
01:55:22,000 --> 01:55:23,000
对对

3769
01:55:23,000 --> 01:55:25,000
你很就很麻烦你说不清楚

3770
01:55:25,000 --> 01:55:27,000
比如说你刚才吴涛问那个问题

3771
01:55:27,000 --> 01:55:30,000
一个漂浮在半空中的男人表达了这么一个像型文字的 EMOGE

3772
01:55:30,000 --> 01:55:35,000
他和我们考古挖出一个固执这里面写了一个通假字有什么区别

3773
01:55:35,000 --> 01:55:37,000
通假字至少有意义

3774
01:55:37,000 --> 01:55:39,000
他写错了

3775
01:55:39,000 --> 01:55:40,000
为什么他写错了就有意义

3776
01:55:40,000 --> 01:55:44,000
我们要表达现代人要表达一个东西就没有意义

3777
01:55:44,000 --> 01:55:46,000
我觉得这种

3778
01:55:46,000 --> 01:55:47,000
这是个政治问题

3779
01:55:47,000 --> 01:55:49,000
对你去考察到这个 signatics

3780
01:55:49,000 --> 01:55:51,000
通假字你至少知道它有意义

3781
01:55:51,000 --> 01:55:55,000
但是至少你可以推测出来它代表的意义是什么

3782
01:55:55,000 --> 01:55:58,000
可是悬浮在空中的男人这个意义是什么

3783
01:55:58,000 --> 01:56:00,000
都很多人不知道的

3784
01:56:00,000 --> 01:56:01,000
我也不知道

3785
01:56:01,000 --> 01:56:02,000
就我也不知道

3786
01:56:02,000 --> 01:56:03,000
你也得解释一下

3787
01:56:03,000 --> 01:56:04,000
不是

3788
01:56:04,000 --> 01:56:10,000
这个符号最开始是出现在微软的 webdings 里面

3789
01:56:10,000 --> 01:56:17,000
然后是一个马尾多少

3790
01:56:17,000 --> 01:56:19,000
稍等我找一找

3791
01:56:19,000 --> 01:56:23,000
你怎么搜悬浮在办公中的男人吗

3792
01:56:23,000 --> 01:56:26,000
Leviating man emoji

3793
01:56:26,000 --> 01:56:28,000
Man in business suits

3794
01:56:28,000 --> 01:56:30,000
Leviating

3795
01:56:30,000 --> 01:56:31,000
搜这个

3796
01:56:31,000 --> 01:56:32,000
U 1 加 5

3797
01:56:32,000 --> 01:56:33,000
1 加

3798
01:56:33,000 --> 01:56:34,000
不

3799
01:56:34,000 --> 01:56:35,000
U 加 1

3800
01:56:35,000 --> 01:56:36,000
F 574

3801
01:56:36,000 --> 01:56:39,000
浮在地面上的四中男

3802
01:56:39,000 --> 01:56:40,000
哈哈哈哈

3803
01:56:40,000 --> 01:56:41,000
对

3804
01:56:41,000 --> 01:56:42,000
这是什么鬼

3805
01:56:42,000 --> 01:56:43,000
这个

3806
01:56:43,000 --> 01:56:44,000
这个

3807
01:56:44,000 --> 01:56:46,000
Umoji 最开始出现在 webding 里面

3808
01:56:46,000 --> 01:56:49,000
然后它的意义是一个感叹号

3809
01:56:49,000 --> 01:56:54,000
然后这个感叹号的风格就像一个 Rudeboy logo

3810
01:56:54,000 --> 01:56:55,000
然后是在

3811
01:56:55,000 --> 01:57:02,000
是一个叫做 The Specials 的乐队所出的一张账片里面

3812
01:57:03,000 --> 01:57:05,000
是你 emoja 还是 emoji

3813
01:57:05,000 --> 01:57:06,000
Emoji

3814
01:57:06,000 --> 01:57:10,000
你要是按日文念读音的话就是 emoji

3815
01:57:10,000 --> 01:57:11,000
Emoji

3816
01:57:11,000 --> 01:57:12,000
对

3817
01:57:12,000 --> 01:57:13,000
Emoji

3818
01:57:13,000 --> 01:57:14,000
OK

3819
01:57:14,000 --> 01:57:15,000
这么说它确实有点像一个感叹号

3820
01:57:15,000 --> 01:57:19,000
因为就是它的那个人悬浮在空中地下有个投影

3821
01:57:19,000 --> 01:57:21,000
正好是感叹号的那一叠

3822
01:57:21,000 --> 01:57:23,000
哈哈哈哈

3823
01:57:23,000 --> 01:57:25,000
哈哈哈哈

3824
01:57:25,000 --> 01:57:26,000
嗯

3825
01:57:26,000 --> 01:57:27,000
好吧

3826
01:57:27,000 --> 01:57:28,000
什么鬼

3827
01:57:28,000 --> 01:57:32,000
对这个玩意在 Unicode 7.0 的时候进入了 Unicode

3828
01:57:32,000 --> 01:57:33,000
就

3829
01:57:33,000 --> 01:57:34,000
所以

3830
01:57:34,000 --> 01:57:35,000
所以

3831
01:57:35,000 --> 01:57:39,000
吴涛在这个 Emoji 这个争论里面是持这个保守派的

3832
01:57:39,000 --> 01:57:40,000
什么叫保守派

3833
01:57:40,000 --> 01:57:43,000
左派和右派的区别是什么

3834
01:57:43,000 --> 01:57:44,000
右派是应该

3835
01:57:44,000 --> 01:57:48,000
就是 Unicode 的那个工作组里面就说我们不要加这么多乱七八糟的东西进来

3836
01:57:48,000 --> 01:57:51,000
这个是我觉得界限是很难界定的

3837
01:57:51,000 --> 01:57:53,000
你怎么区分什么叫乱七八糟的

3838
01:57:53,000 --> 01:57:57,000
就是我就觉得这个就是象形文字不封闭的导致的一个必然结果嘛

3839
01:57:57,000 --> 01:57:58,000
对

3840
01:57:58,000 --> 01:58:00,000
它主要就是它不是一个封闭的集合嘛

3841
01:58:00,000 --> 01:58:01,000
退一个万步

3842
01:58:01,000 --> 01:58:02,000
对啊

3843
01:58:02,000 --> 01:58:04,000
你这个边界随时都在扩的就很麻烦

3844
01:58:04,000 --> 01:58:05,000
对

3845
01:58:05,000 --> 01:58:07,000
所以这个东西是一个深坑没有没有办法

3846
01:58:07,000 --> 01:58:12,000
就是如果说这个 Unicode 里面那帮人觉得不应该加 Emoji 进来的话

3847
01:58:12,000 --> 01:58:15,000
那也不要从固执的里面找那个深坑进来的

3848
01:58:15,000 --> 01:58:16,000
是一个原理嘛

3849
01:58:16,000 --> 01:58:17,000
嗯

3850
01:58:17,000 --> 01:58:18,000
对

3851
01:58:18,000 --> 01:58:22,000
事实上将这个 Emoji 当成一种字符

3852
01:58:22,000 --> 01:58:26,000
这个观念本身就是一个比较激进的观念

3853
01:58:26,000 --> 01:58:28,000
它本身不是一种文字

3854
01:58:28,000 --> 01:58:31,000
但是从技术上的实现来讲的话

3855
01:58:31,000 --> 01:58:32,000
倒是 OK 的

3856
01:58:32,000 --> 01:58:34,000
因为你从 Font 的计算实现来讲

3857
01:58:34,000 --> 01:58:35,000
我就是一个码

3858
01:58:35,000 --> 01:58:38,000
然后显示一个 Glyph 嘛

3859
01:58:38,000 --> 01:58:40,000
Glyph 其实就是一个图案嘛

3860
01:58:40,000 --> 01:58:41,000
对吧

3861
01:58:41,000 --> 01:58:42,000
嗯

3862
01:58:42,000 --> 01:58:43,000
从技术显示来讲

3863
01:58:43,000 --> 01:58:44,000
这是很正常的

3864
01:58:44,000 --> 01:58:46,000
它是一个典型由技术来推动标准

3865
01:58:46,000 --> 01:58:49,000
就由技术实作来推动这个标准

3866
01:58:49,000 --> 01:58:51,000
改变的这样一个问题

3867
01:58:51,000 --> 01:58:52,000
好吧

3868
01:58:52,000 --> 01:58:53,000
Emoji 咱们还是下次来说

3869
01:58:53,000 --> 01:58:54,000
对对对

3870
01:58:54,000 --> 01:58:58,000
而且我觉得就是它还推出来一个扩展

3871
01:58:58,000 --> 01:59:01,000
就是一个三维的符号

3872
01:59:01,000 --> 01:59:03,000
应不应该算作一个 Emoji

3873
01:59:06,000 --> 01:59:08,000
一个三维的符号是什么意思

3874
01:59:08,000 --> 01:59:10,000
就是同样一个

3875
01:59:10,000 --> 01:59:13,000
有一个平面的脸和一个立体的脸

3876
01:59:13,000 --> 01:59:14,000
它算一个符号吗

3877
01:59:15,000 --> 01:59:16,000
啊

3878
01:59:16,000 --> 01:59:18,000
这就刚才我们说的那个户的三种写法

3879
01:59:18,000 --> 01:59:20,000
它算一个还是算三个

3880
01:59:21,000 --> 01:59:22,000
对

3881
01:59:22,000 --> 01:59:23,000
没错

3882
01:59:23,000 --> 01:59:24,000
就很难去划分这个东西

3883
01:59:24,000 --> 01:59:25,000
所以我觉得

3884
01:59:25,000 --> 01:59:28,000
不把那个到底是表音表意还是表形

3885
01:59:28,000 --> 01:59:29,000
这个东西定下来

3886
01:59:29,000 --> 01:59:31,000
这个东西永远都是有争议的

3887
01:59:31,000 --> 01:59:32,000
嗯

3888
01:59:33,000 --> 01:59:34,000
好吧

3889
01:59:34,000 --> 01:59:35,000
那那要不刷个车

3890
01:59:35,000 --> 01:59:37,000
然后我们下次接着讲

3891
01:59:37,000 --> 01:59:38,000
OK

3892
01:59:38,000 --> 01:59:41,000
所以我们今天究竟有没有讲到乱码这些事情

3893
01:59:42,000 --> 01:59:43,000
我大概还是讲了

3894
01:59:43,000 --> 01:59:44,000
大概还是讲到了

3895
01:59:44,000 --> 01:59:45,000
对

3896
01:59:46,000 --> 01:59:47,000
嗯

3897
01:59:47,000 --> 01:59:51,000
嗯就是说我们讲到了这个一些编码的基本的原理

3898
01:59:51,000 --> 01:59:55,000
然后梳理了一下这个字符级规范的这个发展的历史

3899
01:59:55,000 --> 01:59:58,000
那么在这两个环节中如果有一个环节出错了

3900
01:59:58,000 --> 02:00:00,000
其实首先就会导致乱码

3901
02:00:00,000 --> 02:00:03,000
然后最后我们还讲了这个字节端续的问题

3902
02:00:03,000 --> 02:00:08,000
它也是导致乱码的一个实践中经常遇到的因素的

3903
02:00:09,000 --> 02:00:10,000
嗯

3904
02:00:11,000 --> 02:00:16,000
其实大家要珍惜每天你在网页上看出来的这些字符

3905
02:00:16,000 --> 02:00:21,000
因为它突破千线万线被正确的编码编出来

3906
02:00:21,000 --> 02:00:23,000
编码编出来然后传输过来

3907
02:00:23,000 --> 02:00:25,000
然后显示在你的浏览器里面

3908
02:00:25,000 --> 02:00:26,000
嗯

3909
02:00:26,000 --> 02:00:27,000
对

3910
02:00:27,000 --> 02:00:29,000
它已经经过了各层的处理

3911
02:00:29,000 --> 02:00:32,000
不过实际上那个我们应该知道就是说

3912
02:00:32,000 --> 02:00:35,000
呃像 HTML 它的这个解析规则里

3913
02:00:35,000 --> 02:00:37,000
它的这个见状性还是比较强的

3914
02:00:37,000 --> 02:00:40,000
它应该能容一定的编码错误对吧

3915
02:00:41,000 --> 02:00:42,000
嗯

3916
02:00:42,000 --> 02:00:43,000
是的

3917
02:00:43,000 --> 02:00:46,000
那当然了要不然的话你想在传输过程中

3918
02:00:46,000 --> 02:00:48,000
又是掉包又是乱

3919
02:00:48,000 --> 02:00:49,000
又顺序又会乱的

3920
02:00:49,000 --> 02:00:50,000
对吧

3921
02:00:50,000 --> 02:00:51,000
各种各样的事情

3922
02:00:51,000 --> 02:00:56,000
我指的是就是比如说那个我这个浏览器把它误认成另一种与它不符合的编码

3923
02:00:56,000 --> 02:01:01,000
其实在不少情况下就因为大家都对 ASCII 的兼容比较好

3924
02:01:01,000 --> 02:01:07,000
那么 HTML 用到一些关键的这个标记符号都是 ASCII 里面

3925
02:01:07,000 --> 02:01:10,000
所以它其实还是可以正确的渲染一部分

3926
02:01:11,000 --> 02:01:12,000
嗯

3927
02:01:12,000 --> 02:01:14,000
嗯就至少它那个 mark 是对的

3928
02:01:14,000 --> 02:01:15,000
嗯

3929
02:01:15,000 --> 02:01:17,000
好吧

3930
02:01:17,000 --> 02:01:21,000
好吧那今天时间有限那就暂时先杀到这边

3931
02:01:21,000 --> 02:01:23,000
我们下次再接着讲

3932
02:01:23,000 --> 02:01:26,000
感谢大家的收听

3933
02:01:26,000 --> 02:01:30,000
那大家可以从各种社交网络上关注我们

3934
02:01:30,000 --> 02:01:31,000
那自谈自唱呢

3935
02:01:31,000 --> 02:01:36,000
在新浪微博微信公众号以及推特的账号的名字都是 TheType

3936
02:01:36,000 --> 02:01:39,000
T-H-E-T-Y-P-E

3937
02:01:39,000 --> 02:01:42,000
在 Facebook 上面呢可以通过 Type is Beautiful 找到我们

3938
02:01:43,000 --> 02:01:46,000
那也欢迎大家用邮件的方式来给我们写反馈

3939
02:01:46,000 --> 02:01:49,000
我们的邮箱是 podcastatthetype.com

3940
02:01:49,000 --> 02:01:51,000
podcast 的评写是 PODCAST

3941
02:01:51,000 --> 02:01:54,000
TheType 的评写是 T-H-E-T-Y-P-E

3942
02:01:54,000 --> 02:01:56,000
podcastatthetype.com

3943
02:01:56,000 --> 02:01:58,000
欢迎大家给我们捐款

3944
02:01:58,000 --> 02:02:02,000
让我们努力把节目做成最好的全球最好的字体播客

3945
02:02:03,000 --> 02:02:06,000
感谢收听 IPM Podcast 的

3946
02:02:06,000 --> 02:02:08,000
网络旗下的 IT 技术主题娱乐节目内核恐慌

3947
02:02:08,000 --> 02:02:10,000
我们号称 hardcore

3948
02:02:10,000 --> 02:02:11,000
但是也没有干货

3949
02:02:11,000 --> 02:02:13,000
想听人听不想听人就别听

3950
02:02:13,000 --> 02:02:14,000
你可以为本节目捐款

3951
02:02:14,000 --> 02:02:16,000
地址是 colonopanic.fm

3952
02:02:16,000 --> 02:02:17,000
slash donate

3953
02:02:17,000 --> 02:02:19,000
捐款金额所以只要是 8 的正整数倍就可以

3954
02:02:19,000 --> 02:02:20,000
捐款不会给你带什么

3955
02:02:20,000 --> 02:02:22,000
不卷也不会让你失去什么

3956
02:02:22,000 --> 02:02:24,000
我们的口号是 No Hard Feelings

3957
02:02:24,000 --> 02:02:26,000
如果你有任何反馈可以发邮件到

3958
02:02:26,000 --> 02:02:29,000
colonopanic.ipn.li

3959
02:02:29,000 --> 02:02:30,000
同时也欢迎你收听

3960
02:02:30,000 --> 02:02:32,000
锐主持的风头圈

3961
02:02:32,000 --> 02:02:34,000
以及 IPN 旗下的其他几档节目

3962
02:02:34,000 --> 02:02:35,000
未知到太一来了

3963
02:02:35,000 --> 02:02:36,000
流行通信

3964
02:02:36,000 --> 02:02:37,000
high story

3965
02:02:37,000 --> 02:02:38,000
映影像无次元

3966
02:02:38,000 --> 02:02:39,000
博物质选美

3967
02:02:39,000 --> 02:02:40,000
必下观一天世界

3968
02:02:40,000 --> 02:02:41,000
时尚怪物

3969
02:02:41,000 --> 02:02:44,000
我们下期节目再会

3970
02:02:44,000 --> 02:02:45,000
拜拜

3971
02:02:45,000 --> 02:02:46,000
拜拜

3972
02:02:46,000 --> 02:02:47,000
拜拜

3973
02:02:54,000 --> 02:02:55,000
拜拜

3974
02:02:55,000 --> 02:02:56,000
拜拜

3975
02:02:56,000 --> 02:02:57,000
拜拜

3976
02:02:57,000 --> 02:02:58,000
拜拜

