1
00:00:00,000 --> 00:00:05,000
您正在收听 IPM Podcast 的网络旗下的 IT 技术主题娱乐节目《内核恐慌》

2
00:00:05,000 --> 00:00:07,000
我们号称 Hardcore 但是也没有干货

3
00:00:07,000 --> 00:00:09,000
想听的人听 不想听的人就别听

4
00:00:09,000 --> 00:00:12,000
本节目的网址是 CernalPanic.fm

5
00:00:12,000 --> 00:00:14,000
我们推荐大家使用 Podcast 客户端订阅节目

6
00:00:14,000 --> 00:00:17,000
详情请访问 ipm.li.faq

7
00:00:17,000 --> 00:00:18,000
欢迎你为本节目捐款

8
00:00:18,000 --> 00:00:21,000
捐款地址是 CernalPanic.fm.donate

9
00:00:21,000 --> 00:00:24,000
捐款机能随意 只要是扒了正整数倍都可以

10
00:00:24,000 --> 00:00:25,000
捐款不会为你带来什么

11
00:00:25,000 --> 00:00:27,000
不捐也不会让你失去什么

12
00:00:27,000 --> 00:00:28,000
我们的口号是

13
00:00:28,000 --> 00:00:38,000
这是什么 这是一个叫做 Janet Raynor 的

14
00:00:38,000 --> 00:00:42,000
美国前司法部长说的

15
00:00:42,000 --> 00:00:44,000
当时是 1998 年

16
00:00:44,000 --> 00:00:48,000
互联网犯罪出漏端倪的时代

17
00:00:48,000 --> 00:00:51,000
他在一个听证会上说

18
00:00:51,000 --> 00:00:54,000
国家就是当时美国要建立一个叫做

19
00:00:54,000 --> 00:00:56,000
National Infrastructure Protection Center

20
00:00:56,000 --> 00:01:01,000
就类似一个互联网安全局的这么一个东西

21
00:01:01,000 --> 00:01:06,000
意思就为了保障美国的 Infrastructure

22
00:01:06,000 --> 00:01:07,000
就是信息产业的技术建设

23
00:01:07,000 --> 00:01:10,000
然后他在听证会上说了这么一句话

24
00:01:10,000 --> 00:01:16,000
他把 Computers 和 Weapons of Mass Destruction 并列

25
00:01:16,000 --> 00:01:21,000
这是十几年前的事了

26
00:01:21,000 --> 00:01:22,000
不过今天

27
00:01:22,000 --> 00:01:23,000
挺远见的

28
00:01:23,000 --> 00:01:23,000
其实

29
00:01:23,000 --> 00:01:24,000
对

30
00:01:24,000 --> 00:01:26,000
当时大家都觉得很可笑

31
00:01:26,000 --> 00:01:31,000
因为那个时候一说到 Weapon of Mass Destruction

32
00:01:31,000 --> 00:01:32,000
就会想到伊拉克

33
00:01:32,000 --> 00:01:35,000
就什么化学武器之类的

34
00:01:35,000 --> 00:01:37,000
但是现在看来

35
00:01:37,000 --> 00:01:40,000
这个计算机产生的伤害

36
00:01:40,000 --> 00:01:44,000
也是的确是一个在很大数量计算产生的

37
00:01:44,000 --> 00:01:45,000
对

38
00:01:45,000 --> 00:01:48,000
那个这么前人还是很有远战

39
00:01:48,000 --> 00:01:49,000
前瞻性的

40
00:01:49,000 --> 00:01:51,000
但那个时候就想到了这个后果

41
00:01:51,000 --> 00:01:52,000
对

42
00:01:52,000 --> 00:01:53,000
其实过去 20 年里面

43
00:01:53,000 --> 00:01:57,000
因为计算机产生的巨大的灾害

44
00:01:57,000 --> 00:02:00,000
也不是一两次的事情

45
00:02:00,000 --> 00:02:01,000
简直每年都有好几次

46
00:02:01,000 --> 00:02:02,000
对吧

47
00:02:02,000 --> 00:02:04,000
而且是近几年就是越演越烈

48
00:02:04,000 --> 00:02:07,000
你现在那些什么 Infrastructure

49
00:02:07,000 --> 00:02:10,000
技术设施里面用到那个信息技术

50
00:02:10,000 --> 00:02:13,000
或者说电脑的越来越多了

51
00:02:13,000 --> 00:02:16,000
现在电网都要搞什么智能电网

52
00:02:16,000 --> 00:02:16,000
是吧

53
00:02:16,000 --> 00:02:19,000
好像还可以联网无线读那个电表

54
00:02:19,000 --> 00:02:19,000
我记得

55
00:02:19,000 --> 00:02:20,000
对

56
00:02:20,000 --> 00:02:22,000
然后什么核能电站之类的

57
00:02:22,000 --> 00:02:23,000
就更别说了

58
00:02:23,000 --> 00:02:25,000
就以前总是觉得好像

59
00:02:25,000 --> 00:02:27,000
我记得那个时候

60
00:02:27,000 --> 00:02:29,000
小时候看什么的一个 hacker

61
00:02:29,000 --> 00:02:31,000
给物贾导演示

62
00:02:31,000 --> 00:02:33,000
用一台电脑和一个电话

63
00:02:33,000 --> 00:02:34,000
和一个调整电话器

64
00:02:34,000 --> 00:02:34,000
加一部电话线

65
00:02:34,000 --> 00:02:36,000
就什么 somehow 侵入了 Joseph

66
00:02:36,000 --> 00:02:37,000
什么某台

67
00:02:37,000 --> 00:02:41,000
某一艘巡洋舰上的 Joseph

68
00:02:41,000 --> 00:02:42,000
系统什么的

69
00:02:42,000 --> 00:02:43,000
然后大家都很震惊

70
00:02:43,000 --> 00:02:44,000
可是现在想想

71
00:02:44,000 --> 00:02:46,000
你不需要搞这种东西

72
00:02:46,000 --> 00:02:47,000
你只需要去弄一个什么核电站

73
00:02:47,000 --> 00:02:48,000
然后容易可以了

74
00:02:48,000 --> 00:02:52,000
造成的灾害要比一艘军舰能造成的灾害更大

75
00:02:52,000 --> 00:02:54,000
就是那个灾害是蛮大的吧 Jif

76
00:02:54,000 --> 00:02:55,000
嗯

77
00:02:55,000 --> 00:02:58,000
那那边好像是有核弹的吧

78
00:02:58,000 --> 00:03:01,000
核动力学生姐

79
00:03:01,000 --> 00:03:03,000
那么应该没有核弹吧

80
00:03:03,000 --> 00:03:06,000
它没有那种战术核武器弹头

81
00:03:06,000 --> 00:03:08,000
不一定吧

82
00:03:08,000 --> 00:03:10,000
就这应该不是常规

83
00:03:10,000 --> 00:03:11,000
会带在船上了吧

84
00:03:11,000 --> 00:03:13,000
难说哎

85
00:03:13,000 --> 00:03:14,000
好吧

86
00:03:14,000 --> 00:03:19,000
我们需要请一个美国军方的人来

87
00:03:19,000 --> 00:03:21,000
你说那些军队的计算机

88
00:03:21,000 --> 00:03:22,000
跑的什么系统

89
00:03:22,000 --> 00:03:24,000
Windows

90
00:03:24,000 --> 00:03:27,000
对我记得好像之前看到过是谁

91
00:03:27,000 --> 00:03:28,000
是说那个

92
00:03:28,000 --> 00:03:31,000
F 16 还是 F 22

93
00:03:31,000 --> 00:03:32,000
那个战斗计算跑的是 XP

94
00:03:32,000 --> 00:03:37,000
还是 Windows 2000 我忘了

95
00:03:37,000 --> 00:03:39,000
就是某一个还比较关键的系统

96
00:03:39,000 --> 00:03:40,000
F 16 不太可能

97
00:03:40,000 --> 00:03:42,000
因为 F 16 我记得在看过一个

98
00:03:42,000 --> 00:03:45,000
就基本上这个战斗机的操作系统

99
00:03:45,000 --> 00:03:48,000
肯定是一个半实时的专有操作系统吧

100
00:03:48,000 --> 00:03:49,000
它分几部分吗

101
00:03:49,000 --> 00:03:51,000
就跟那个车一样吗

102
00:03:51,000 --> 00:03:53,000
就是你看有个 subsystem 是

103
00:03:53,000 --> 00:03:53,000
对对对

104
00:03:53,000 --> 00:03:56,000
它不是说这些核心控制组件

105
00:03:56,000 --> 00:03:58,000
那就肯定是要需要一个实时的系统吧

106
00:03:58,000 --> 00:03:59,000
它可能会是一些什么

107
00:03:59,000 --> 00:04:03,000
比如说随便说通讯组件

108
00:04:03,000 --> 00:04:04,000
战斗机有没有娱乐模块

109
00:04:04,000 --> 00:04:07,000
玩着玩着玩着

110
00:04:07,000 --> 00:04:09,000
坠机因为

111
00:04:09,000 --> 00:04:12,000
因为驾驶员在那边玩什么

112
00:04:12,000 --> 00:04:14,000
叫什么空缸接龙

113
00:04:14,000 --> 00:04:15,000
红星弹

114
00:04:15,000 --> 00:04:19,000
还有之前说那个不是有那种无人机吗

115
00:04:19,000 --> 00:04:21,000
就是那种军用无人机

116
00:04:21,000 --> 00:04:24,000
它不是有这种远程操纵它的系统吗

117
00:04:24,000 --> 00:04:25,000
好像也是跑在 Windows

118
00:04:25,000 --> 00:04:27,000
XP 还是什么版本上面的

119
00:04:27,000 --> 00:04:29,000
这个是有可能的

120
00:04:29,000 --> 00:04:30,000
就你做

121
00:04:30,000 --> 00:04:32,000
因为你专门为一个远程操作系统开发

122
00:04:32,000 --> 00:04:34,000
先开发一个操作系统的

123
00:04:34,000 --> 00:04:37,000
先不说成本

124
00:04:37,000 --> 00:04:40,000
就是你开发出来这个操作系统的稳定性

125
00:04:40,000 --> 00:04:41,000
可能还不如 Windows

126
00:04:41,000 --> 00:04:41,000
对吧

127
00:04:41,000 --> 00:04:44,000
这也是有可能的

128
00:04:44,000 --> 00:04:45,000
好吧

129
00:04:45,000 --> 00:04:46,000
就其实全世界的军队

130
00:04:46,000 --> 00:04:48,000
可能我不知道俄罗斯怎么样

131
00:04:48,000 --> 00:04:49,000
但其实全世界的军队

132
00:04:49,000 --> 00:04:51,000
只要是设计到计算机的部分

133
00:04:51,000 --> 00:04:52,000
它基本上全都是

134
00:04:52,000 --> 00:04:54,000
就是普通的计算机系统

135
00:04:54,000 --> 00:04:55,000
基本上全都是 Windows

136
00:04:55,000 --> 00:04:56,000
办公吗

137
00:04:56,000 --> 00:04:57,000
你说

138
00:04:57,000 --> 00:04:58,000
对

139
00:04:58,000 --> 00:04:59,000
但是它那个是遥控无人机

140
00:04:59,000 --> 00:05:01,000
就是遥控无人机的系统

141
00:05:01,000 --> 00:05:02,000
我觉得还是挺敏感的

142
00:05:02,000 --> 00:05:03,000
如果你想象一下

143
00:05:03,000 --> 00:05:06,000
那个无人机本来在老远的地方跑

144
00:05:06,000 --> 00:05:10,000
然后驾驶员坐在一个很安全的一个 bunker 里面

145
00:05:10,000 --> 00:05:12,000
很猥琐的开的那个东西

146
00:05:12,000 --> 00:05:13,000
对吧

147
00:05:13,000 --> 00:05:14,000
开无声机的人

148
00:05:14,000 --> 00:05:16,000
很多都是在美国本土遥控无人机的

149
00:05:16,000 --> 00:05:17,000
好像

150
00:05:17,000 --> 00:05:18,000
它那个延迟怎么解决

151
00:05:18,000 --> 00:05:19,000
不知道

152
00:05:19,000 --> 00:05:21,000
但是我好像看过一个报道

153
00:05:21,000 --> 00:05:21,000
就是

154
00:05:21,000 --> 00:05:22,000
对

155
00:05:22,000 --> 00:05:22,000
我知道

156
00:05:22,000 --> 00:05:23,000
心理问题

157
00:05:23,000 --> 00:05:27,000
因为每天去上班就是去操纵杀人

158
00:05:27,000 --> 00:05:31,000
然后下班之后看到周围的那个什么欢声笑语

159
00:05:31,000 --> 00:05:32,000
然后就想

160
00:05:32,000 --> 00:05:32,000
我靠

161
00:05:32,000 --> 00:05:34,000
我为什么要干这种事

162
00:05:34,000 --> 00:05:35,000
刚刷了五个

163
00:05:35,000 --> 00:05:37,000
他那种如果是这样的

164
00:05:37,000 --> 00:05:37,000
远的话

165
00:05:37,000 --> 00:05:39,000
他那个延迟问题怎么解决的呢

166
00:05:39,000 --> 00:05:40,000
不知道

167
00:05:40,000 --> 00:05:42,000
这个是很好的问题

168
00:05:42,000 --> 00:05:43,000
就是你开着开着

169
00:05:43,000 --> 00:05:44,000
你无人机的飞机本来又快嘛

170
00:05:44,000 --> 00:05:46,000
你说你个什么车

171
00:05:46,000 --> 00:05:46,000
你过一

172
00:05:46,000 --> 00:05:47,000
什么

173
00:05:47,000 --> 00:05:48,000
不是说一秒吧

174
00:05:48,000 --> 00:05:50,000
0.1 秒

175
00:05:50,000 --> 00:05:51,000
已经开过了

176
00:05:51,000 --> 00:05:52,000
可能在高速路上开

177
00:05:52,000 --> 00:05:53,000
可能开过多少

178
00:05:53,000 --> 00:05:54,000
这个

179
00:05:54,000 --> 00:05:55,000
我觉得这个就是

180
00:05:55,000 --> 00:05:56,000
这个时差

181
00:05:56,000 --> 00:05:58,000
可能就是你说 0.1 秒这个级别的时差

182
00:05:58,000 --> 00:05:59,000
可能没有什么太大的问题

183
00:05:59,000 --> 00:06:00,000
因为首先

184
00:06:00,000 --> 00:06:02,000
Jone 在一个很高的地段防飞

185
00:06:02,000 --> 00:06:04,000
然后地面上那个车辆

186
00:06:04,000 --> 00:06:08,000
可能哪怕时速 50 公里每小时

187
00:06:08,000 --> 00:06:10,000
在他看来也只不过是在缓缓移动而已

188
00:06:10,000 --> 00:06:11,000
然后

189
00:06:11,000 --> 00:06:14,000
然后第二就是那个 Jone 上带的导弹

190
00:06:14,000 --> 00:06:15,000
肯定都是有制导的

191
00:06:15,000 --> 00:06:17,000
就是他肯定能

192
00:06:17,000 --> 00:06:19,000
你只要确定这个车前面

193
00:06:19,000 --> 00:06:22,000
这么方圆 50 米之内没有遮蔽屋呢

194
00:06:22,000 --> 00:06:23,000
发一个导弹过去

195
00:06:23,000 --> 00:06:24,000
导弹自己就追过去了

196
00:06:24,000 --> 00:06:28,000
就其实不需要很精确的去控制它的

197
00:06:28,000 --> 00:06:28,000
对

198
00:06:28,000 --> 00:06:31,000
我觉得实时性有可能不是特别重要

199
00:06:31,000 --> 00:06:33,000
尤其是在侦查和

200
00:06:33,000 --> 00:06:38,000
就发动这种精确制导打击的时候

201
00:06:38,000 --> 00:06:40,000
你有一定的那个时间延迟

202
00:06:40,000 --> 00:06:41,000
其实并不是太大的问题

203
00:06:41,000 --> 00:06:42,000
OK

204
00:06:42,000 --> 00:06:45,000
所以他只需要安全

205
00:06:45,000 --> 00:06:47,000
然后能够比较方便的

206
00:06:47,000 --> 00:06:49,000
同时开五个状对吧

207
00:06:49,000 --> 00:06:50,000
对

208
00:06:50,000 --> 00:06:51,000
好吧

209
00:06:51,000 --> 00:06:54,000
我们首先要

210
00:06:54,000 --> 00:06:58,000
讨论一下与本节目相关的一些

211
00:06:58,000 --> 00:07:00,000
一件事情

212
00:07:00,000 --> 00:07:03,000
这个要说

213
00:07:03,000 --> 00:07:05,000
就是

214
00:07:05,000 --> 00:07:08,000
建于某些人事上的变动

215
00:07:08,000 --> 00:07:10,000
本节目

216
00:07:10,000 --> 00:07:13,000
首先 IT 公论节目停播了

217
00:07:13,000 --> 00:07:14,000
然后本节目改成

218
00:07:14,000 --> 00:07:17,000
从本期开始改成不定期播出

219
00:07:17,000 --> 00:07:19,000
背景原因就不解释了

220
00:07:19,000 --> 00:07:21,000
但是反正就是这么一件事

221
00:07:21,000 --> 00:07:25,000
在将来我们基本上有一个节奏

222
00:07:25,000 --> 00:07:28,000
就是说大概两周或两个人会想起来录一下

223
00:07:28,000 --> 00:07:28,000
但是

224
00:07:28,000 --> 00:07:33,000
建于目前的这个人生和事业的状态

225
00:07:33,000 --> 00:07:36,000
好像 hold 住这个节奏也不是那么容易

226
00:07:36,000 --> 00:07:38,000
所以以后网纳上要做一个按钮

227
00:07:38,000 --> 00:07:40,000
今天恐慌妈按一下

228
00:07:40,000 --> 00:07:42,000
他会告诉你是还是不是

229
00:07:42,000 --> 00:07:46,000
那个弄一个 twitter 账号和

230
00:07:46,000 --> 00:07:48,000
不对

231
00:07:48,000 --> 00:07:49,000
我们就在官方的账号上说

232
00:07:49,000 --> 00:07:50,000
今天没更新

233
00:07:50,000 --> 00:07:51,000
句号

234
00:07:51,000 --> 00:07:52,000
今天没更新

235
00:07:52,000 --> 00:07:53,000
句号

236
00:07:53,000 --> 00:07:56,000
你不定期嘛

237
00:07:56,000 --> 00:07:58,000
你得让他们来

238
00:07:58,000 --> 00:07:59,000
来破嘛

239
00:07:59,000 --> 00:08:01,000
就得做一个按钮

240
00:08:01,000 --> 00:08:01,000
按一下

241
00:08:01,000 --> 00:08:02,000
对吧

242
00:08:02,000 --> 00:08:03,000
今天恐慌吗

243
00:08:03,000 --> 00:08:04,000
不恐慌

244
00:08:04,000 --> 00:08:05,000
今天恐慌吗

245
00:08:05,000 --> 00:08:06,000
不恐慌

246
00:08:06,000 --> 00:08:07,000
the panic button

247
00:08:07,000 --> 00:08:08,000
这个东西

248
00:08:08,000 --> 00:08:10,000
叫做 the panic button

249
00:08:10,000 --> 00:08:11,000
你可以买个那个红色的那个

250
00:08:11,000 --> 00:08:12,000
对

251
00:08:12,000 --> 00:08:13,000
按一下

252
00:08:13,000 --> 00:08:13,000
然后当头

253
00:08:13,000 --> 00:08:15,000
装一个 arduino 进去

254
00:08:15,000 --> 00:08:16,000
按一下

255
00:08:16,000 --> 00:08:17,000
然后那边连出一个结果

256
00:08:17,000 --> 00:08:19,000
BB 叫的话就是有

257
00:08:19,000 --> 00:08:21,000
BB 没叫的话就是没有

258
00:08:21,000 --> 00:08:25,000
我们可以卖这个赚点钱

259
00:08:25,000 --> 00:08:28,000
panic button

260
00:08:28,000 --> 00:08:29,000
cernal panic button

261
00:08:29,000 --> 00:08:32,000
the kernel panic button

262
00:08:32,000 --> 00:08:34,000
然后下面那个那个按钮下面

263
00:08:34,000 --> 00:08:35,000
负养小字

264
00:08:35,000 --> 00:08:36,000
你永远不知道

265
00:08:36,000 --> 00:08:37,000
你按一下之后会发生什么

266
00:08:37,000 --> 00:08:41,000
于是听众来信说

267
00:08:41,000 --> 00:08:43,000
按了之后女朋友回应了

268
00:08:43,000 --> 00:08:46,000
不是我干

269
00:08:46,000 --> 00:08:50,000
天哪

270
00:08:50,000 --> 00:08:53,000
我本节目要污名化了

271
00:08:53,000 --> 00:08:53,000
我觉得

272
00:08:53,000 --> 00:08:57,000
logo 可以改成一大大的屋子

273
00:08:57,000 --> 00:08:59,000
对

274
00:08:59,000 --> 00:09:00,000
反正就是那件事

275
00:09:00,000 --> 00:09:06,000
然后这期节目的稿件

276
00:09:06,000 --> 00:09:08,000
其实在三

277
00:09:08,000 --> 00:09:10,000
至少三周之前写的

278
00:09:10,000 --> 00:09:12,000
所以那个时候还是件大新闻的

279
00:09:12,000 --> 00:09:14,000
事情就是

280
00:09:14,000 --> 00:09:19,000
npm 整个 stack 几乎都回到了

281
00:09:19,000 --> 00:09:21,000
就是那天出了这件事情之后

282
00:09:21,000 --> 00:09:22,000
有很多活动网站

283
00:09:22,000 --> 00:09:23,000
当然没有立刻挂掉

284
00:09:23,000 --> 00:09:24,000
但是

285
00:09:24,000 --> 00:09:28,000
有很多网站的开发都被迫停止了

286
00:09:28,000 --> 00:09:29,000
或者说更新

287
00:09:29,000 --> 00:09:31,000
部署都被迫停止了

288
00:09:31,000 --> 00:09:33,000
当然我印象里

289
00:09:33,000 --> 00:09:34,000
我好像没有遇到这样一个网站

290
00:09:34,000 --> 00:09:37,000
不过在新闻上看起来

291
00:09:37,000 --> 00:09:38,000
好像这件事情当时蛮大的

292
00:09:38,000 --> 00:09:40,000
这事要解释一下

293
00:09:40,000 --> 00:09:41,000
来龙去脉吗

294
00:09:41,000 --> 00:09:42,000
需要吧

295
00:09:42,000 --> 00:09:44,000
我就从最早最早说起

296
00:09:44,000 --> 00:09:49,000
有一个远在新西兰的

297
00:09:49,000 --> 00:09:52,000
在地球的另外一边的一位叫做

298
00:09:52,000 --> 00:09:54,000
Azer Khoshlu

299
00:09:54,000 --> 00:09:56,000
这好像是个土耳其人的名字

300
00:09:56,000 --> 00:09:57,000
但是

301
00:09:57,000 --> 00:09:59,000
这个人在奥克兰

302
00:09:59,000 --> 00:10:04,000
他写了一个 extension

303
00:10:04,000 --> 00:10:05,000
叫做 KIK

304
00:10:05,000 --> 00:10:09,000
然后这个 extension 是发布在 npm 上面

305
00:10:09,000 --> 00:10:14,000
然后有一天他收到了一封信

306
00:10:14,000 --> 00:10:18,000
这封信是来自于一个叫做 KIK 的厂商

307
00:10:18,000 --> 00:10:19,000
KIK

308
00:10:19,000 --> 00:10:21,000
然后这个 KIK

309
00:10:21,000 --> 00:10:22,000
后来我发现我还装过

310
00:10:22,000 --> 00:10:25,000
它是一个及时通讯软件

311
00:10:25,000 --> 00:10:27,000
就有点像 WhatsApp 之类的这么一个东西

312
00:10:27,000 --> 00:10:28,000
但是远没有

313
00:10:28,000 --> 00:10:28,000
WhatsApp 红

314
00:10:28,000 --> 00:10:30,000
然后用户群

315
00:10:30,000 --> 00:10:31,000
可能有一部分

316
00:10:31,000 --> 00:10:32,000
但是也不是特别多

317
00:10:32,000 --> 00:10:34,000
然后他写来了

318
00:10:34,000 --> 00:10:35,000
他的律师

319
00:10:35,000 --> 00:10:35,000
不

320
00:10:35,000 --> 00:10:36,000
不对

321
00:10:36,000 --> 00:10:37,000
不是律师

322
00:10:37,000 --> 00:10:41,000
这个 KIK 的负责人之一

323
00:10:41,000 --> 00:10:44,000
给 Azer Khoshlu 写了一封信

324
00:10:44,000 --> 00:10:45,000
说

325
00:10:45,000 --> 00:10:47,000
你把

326
00:10:47,000 --> 00:10:51,000
你写这个 KIK 的 extension 改名字

327
00:10:51,000 --> 00:10:54,000
因为我公司也要出一个 extension

328
00:10:54,000 --> 00:10:55,000
然后

329
00:10:55,000 --> 00:10:58,000
Azer 大概回了一句说

330
00:10:58,000 --> 00:11:03,000
这种要求我不会接受

331
00:11:03,000 --> 00:11:05,000
对

332
00:11:05,000 --> 00:11:07,000
这个公司负责人写的信里面

333
00:11:07,000 --> 00:11:07,000
这么一句话

334
00:11:07,000 --> 00:11:09,000
就是如果你做的话

335
00:11:09,000 --> 00:11:13,000
这件事情就不会牵扯到律师了

336
00:11:13,000 --> 00:11:15,000
就这么一句话

337
00:11:15,000 --> 00:11:17,000
就是你可以把它理解为是一种某种

338
00:11:17,000 --> 00:11:19,000
非常隐晦的威胁

339
00:11:19,000 --> 00:11:21,000
或者非常名目障碍的威胁

340
00:11:21,000 --> 00:11:22,000
就是如果你要不干的话

341
00:11:22,000 --> 00:11:24,000
我就告你

342
00:11:24,000 --> 00:11:25,000
然后

343
00:11:25,000 --> 00:11:25,000
然后

344
00:11:25,000 --> 00:11:31,000
Azer Khoshlu 就又回了一句说什么

345
00:11:31,000 --> 00:11:34,000
你给我三万美元

346
00:11:34,000 --> 00:11:35,000
给三万元

347
00:11:35,000 --> 00:11:36,000
咱们就

348
00:11:36,000 --> 00:11:39,000
我就可以把这个名字卖给你

349
00:11:39,000 --> 00:11:42,000
然后 KIK 的人回了一句说

350
00:11:42,000 --> 00:11:44,000
This is going to nowhere

351
00:11:44,000 --> 00:11:47,000
就他没有直接回答说

352
00:11:47,000 --> 00:11:48,000
我要不要出这三万美元

353
00:11:48,000 --> 00:11:51,000
而是说这件事情这样的话就什么也干不了

354
00:11:51,000 --> 00:11:59,000
言下之意就是说你他 KIK 这个公司的要求就是你无偿的立刻的把这个 KIK 这个名字给我们

355
00:11:59,000 --> 00:12:01,000
然后呢

356
00:12:01,000 --> 00:12:02,000
嗯

357
00:12:02,000 --> 00:12:09,000
这个 NPM 就是管 NPM 的这个这个组织也牵扯其中

358
00:12:09,000 --> 00:12:12,000
简单来说就是我已经很久没有看这个新闻了

359
00:12:12,000 --> 00:12:14,000
所以具体的人名什么都不记得

360
00:12:14,000 --> 00:12:16,000
但大概就是 NPM 的事情

361
00:12:16,000 --> 00:12:21,000
NPM 最后人做了一件事情就是把 KIK 这个东西呃强行下架

362
00:12:21,000 --> 00:12:23,000
下架

363
00:12:23,000 --> 00:12:24,000
这个词

364
00:12:24,000 --> 00:12:25,000
Azer

365
00:12:25,000 --> 00:12:28,000
把 Azer 写的这个 KIK 的酷

366
00:12:28,000 --> 00:12:30,000
强行从网站上拿掉

367
00:12:30,000 --> 00:12:31,000
嗯

368
00:12:31,000 --> 00:12:33,000
然后 Azer 一下子火了

369
00:12:33,000 --> 00:12:37,000
他就把自己之前写的好几十个

370
00:12:37,000 --> 00:12:38,000
呃

371
00:12:38,000 --> 00:12:40,000
Extension

372
00:12:40,000 --> 00:12:41,000
都一次性撤销

373
00:12:41,000 --> 00:12:44,000
然后这一下子就整个回答了

374
00:12:44,000 --> 00:12:46,000
因为呃

375
00:12:46,000 --> 00:12:51,000
尤其是他在写的一个他写的一个叫做 LeftPad 这么一个 library

376
00:12:51,000 --> 00:12:55,000
被很多很多很多很多其他的呃

377
00:12:55,000 --> 00:13:00,000
框架或者是呃程序间接或者直接的使用

378
00:13:00,000 --> 00:13:14,000
然后当他把这个 LeftPad 撤掉之后呃整个所有依赖于这个框架的呃依赖于这个库的框架网站全都全都没有办法在呃在更新的时候找到这个库然后也就瘫痪了

379
00:13:14,000 --> 00:13:21,000
大概就是这么一点事有没有一种那个什么你拿了一块砖然后那个雷锋塔就忽然倒下的感觉

380
00:13:21,000 --> 00:13:22,000
哈哈哈哈哈哈

381
00:13:22,000 --> 00:13:28,000
对大概就是这样一种听起来非常可笑的连锁反应

382
00:13:28,000 --> 00:13:45,000
这而且非常有意思的事情就是或者非常荒诞的事情就是这个 LeftPad 这这一个很小的 library 他真正有效部分可能就 15 行代码了不起 15 行代码

383
00:13:45,000 --> 00:13:56,000
然后这个东西在他下架就是他被这个开发者主动撤销的时候他被下载了大概 200200 多万次应该是

384
00:13:56,000 --> 00:14:07,000
那这里可能要稍微解释一下这个 npm 怎么一个工作方式不然的话很多不是做这个 JS 开发人不太理解为什么会产生这么大的一个影响

385
00:14:07,000 --> 00:14:18,000
我简单来说就是 JS 这个东西他一开始不是拿来干这个然后正因为如此他也没有一大堆配套的相应的基础设施

386
00:14:18,000 --> 00:14:36,000
就是我们群众喜欢了 Python 或者是哪知 Java 都有这样一样的句话就是说 battery included 就是你在使用这个语言的时候你使用的不仅你就是他 offer 给你的不仅仅是语言本身还有一大堆可以直接拿来就用的

387
00:14:36,000 --> 00:14:42,000
直接拿来就用的做其他事情的一些东西然后这些东西这些组件这些辅助工就没有到库对吧

388
00:14:42,000 --> 00:14:49,000
嗯嗯然后 JS 悔就悔在他他没有他没有这个东西什么他 offer 的东西他本身就只有他语言本身

389
00:14:49,000 --> 00:15:01,000
当然他有一部分是在他出生的那时哪一个时刻就被设计来让他和和与他绑定在一起的那些东西

390
00:15:01,000 --> 00:15:07,000
比如说什么浏览器的窗口浏览器里面的组件之类的但是出的这边也没有别的

391
00:15:07,000 --> 00:15:11,000
就比如说这个 leftpad 他实现的功能其实很简单就是把一个数字

392
00:15:11,000 --> 00:15:23,000
嗯在这个数字左边填上 0 填比如说你有一个数字是 42 然后你要把这个 42 写成 00042

393
00:15:23,000 --> 00:15:33,000
为什么你可能有一个五位数的 index 然后你希望他你在排列的时候可以按这个呃字母顺序排列那你如果在每个数字前面填上 0 的话呢

394
00:15:33,000 --> 00:15:39,000
他排列起来就是一个正常的顺序对吧就就这么一个简单的功能这个呃呃 JSquid 是没有的

395
00:15:39,000 --> 00:15:47,000
没有的所以当有个人携帅这个呃呃凯数写出来之后就很多很多人去用

396
00:15:47,000 --> 00:15:53,000
但是偏偏这个凯数他不是圆或者说元框架那一部分

397
00:15:53,000 --> 00:16:03,000
所以当这个非常小的一个非常小但是非常重要的基石不再可以直接获得的时候

398
00:16:03,000 --> 00:16:06,000
那整个上层建筑就塌了

399
00:16:06,000 --> 00:16:08,000
但是别的语言也有这个

400
00:16:08,000 --> 00:16:10,000
同样的问题

401
00:16:10,000 --> 00:16:11,000
为什么就是只有在 NPM

402
00:16:11,000 --> 00:16:13,000
或者说在 JS 那边

403
00:16:13,000 --> 00:16:14,000
有这么严重的后果

404
00:16:14,000 --> 00:16:17,000
我觉得其实就是一个规模的问题

405
00:16:17,000 --> 00:16:18,000
就是你在

406
00:16:18,000 --> 00:16:21,000
比如说 Java 世界里面

407
00:16:21,000 --> 00:16:22,000
大家也有很多

408
00:16:22,000 --> 00:16:23,000
也有很多人去用

409
00:16:23,000 --> 00:16:24,000
那个 Google 的 Grab

410
00:16:24,000 --> 00:16:25,000
对吧

411
00:16:25,000 --> 00:16:26,000
但是一方面 Google

412
00:16:26,000 --> 00:16:27,000
是一个非常比较

413
00:16:27,000 --> 00:16:29,000
比较靠谱的这么一个公司

414
00:16:29,000 --> 00:16:30,000
它不是一个个人

415
00:16:30,000 --> 00:16:31,000
它不会说今天这个玩意儿

416
00:16:31,000 --> 00:16:32,000
我要撤了

417
00:16:32,000 --> 00:16:33,000
我就直接撤了

418
00:16:33,000 --> 00:16:35,000
另一方面

419
00:16:35,000 --> 00:16:38,000
就是如果你不用 Gava 的时候

420
00:16:38,000 --> 00:16:40,000
你即便完全不涉及

421
00:16:40,000 --> 00:16:42,000
任何其他第三类

422
00:16:42,000 --> 00:16:43,000
第三方库的时候

423
00:16:43,000 --> 00:16:44,000
你使用 Java

424
00:16:44,000 --> 00:16:45,000
人家就可以直接用

425
00:16:45,000 --> 00:16:47,000
它内置的所有的这些 Library

426
00:16:47,000 --> 00:16:50,000
这一部分是在你下载 Java

427
00:16:50,000 --> 00:16:51,000
乃至于你把 Java

428
00:16:51,000 --> 00:16:52,000
部署到一台机器上的时候

429
00:16:52,000 --> 00:16:55,000
你可以 take it for granted

430
00:16:55,000 --> 00:16:56,000
它一定在哪

431
00:16:56,000 --> 00:16:57,000
但是在

432
00:16:57,000 --> 00:16:58,000
就标准库嘛

433
00:16:58,000 --> 00:16:58,000
所谓的

434
00:16:58,000 --> 00:16:59,000
对

435
00:16:59,000 --> 00:17:01,000
但是在 NPM 世界里面

436
00:17:01,000 --> 00:17:02,000
这一点是不成立的

437
00:17:02,000 --> 00:17:04,000
就是对

438
00:17:04,000 --> 00:17:07,000
你必须每一次部署的时候

439
00:17:07,000 --> 00:17:10,000
你都要从 NPM 网站上面下载一大堆东西

440
00:17:10,000 --> 00:17:13,000
我觉得这里有两个问题

441
00:17:13,000 --> 00:17:16,000
就是说一个是说标准库到底应该有多大多小的问题

442
00:17:16,000 --> 00:17:20,000
然后像 JS 和 Lua

443
00:17:20,000 --> 00:17:22,000
也都算是比较极端的

444
00:17:22,000 --> 00:17:24,000
它的标准库都非常 tiny

445
00:17:24,000 --> 00:17:24,000
对吧

446
00:17:24,000 --> 00:17:25,000
非常小

447
00:17:25,000 --> 00:17:27,000
就大部分功能是要靠

448
00:17:27,000 --> 00:17:30,000
就是第三方库来实现的

449
00:17:30,000 --> 00:17:31,000
这个本身

450
00:17:31,000 --> 00:17:33,000
我觉得倒还没有多大的问题

451
00:17:33,000 --> 00:17:35,000
你看现在 Python 也有

452
00:17:35,000 --> 00:17:38,000
就现在面临这么一个干卡的状态

453
00:17:38,000 --> 00:17:41,000
Python 常年以这个什么自带电池

454
00:17:41,000 --> 00:17:42,000
这个自居

455
00:17:42,000 --> 00:17:43,000
对吧

456
00:17:43,000 --> 00:17:44,000
现在都这么多年

457
00:17:44,000 --> 00:17:47,000
自带电池要么是容量太小

458
00:17:47,000 --> 00:17:48,000
要么就是特别不经用

459
00:17:48,000 --> 00:17:48,000
反正

460
00:17:48,000 --> 00:17:49,000
对啊

461
00:17:49,000 --> 00:17:50,000
都不好使

462
00:17:50,000 --> 00:17:52,000
但是因为它又是标准库的一部分

463
00:17:52,000 --> 00:17:55,000
你又不能把它撤掉

464
00:17:55,000 --> 00:17:57,000
不然它的隐藏的依赖就不太对了

465
00:17:57,000 --> 00:17:59,000
所以这是一个两个极端的问题

466
00:17:59,000 --> 00:18:01,000
但我觉得可能

467
00:18:01,000 --> 00:18:04,000
JS 的最主要的问题就是

468
00:18:04,000 --> 00:18:06,000
同样是用第三方库

469
00:18:06,000 --> 00:18:07,000
它的所谓的力度

470
00:18:07,000 --> 00:18:08,000
就是 Granularity

471
00:18:08,000 --> 00:18:12,000
就是一个库到底是应该包含多大的功能

472
00:18:12,000 --> 00:18:13,000
还是像一个库

473
00:18:13,000 --> 00:18:17,000
它好像走到了一个比较极端的一个状态

474
00:18:17,000 --> 00:18:19,000
好像之前就是这个 LeftPad 这个事情

475
00:18:19,000 --> 00:18:20,000
这个腰子捅出来

476
00:18:20,000 --> 00:18:22,000
之后大家去看一下 NPM 上面那些

477
00:18:22,000 --> 00:18:25,000
下载量比较火的所谓的库

478
00:18:25,000 --> 00:18:27,000
好像最极端有个只有一行代吗

479
00:18:27,000 --> 00:18:29,000
对

480
00:18:29,000 --> 00:18:31,000
有一个叫做 Is Array 的库

481
00:18:31,000 --> 00:18:32,000
只有一行代吗

482
00:18:32,000 --> 00:18:32,000
就是

483
00:18:32,000 --> 00:18:37,000
就判断一个变量是否是一个数组吧

484
00:18:37,000 --> 00:18:38,000
对

485
00:18:38,000 --> 00:18:39,000
对

486
00:18:39,000 --> 00:18:41,000
就这就变得很奇怪了

487
00:18:41,000 --> 00:18:44,000
因为在在大部分的其他的这个语言里面

488
00:18:44,000 --> 00:18:47,000
像不管是这个 Python 也好

489
00:18:47,000 --> 00:18:50,000
或者说是就常见的一些语言里面

490
00:18:50,000 --> 00:18:53,000
它在这个就是操作同类数据结构

491
00:18:53,000 --> 00:18:57,000
或者说是做同类相关工作的那些功能

492
00:18:57,000 --> 00:18:59,000
它会被就是归类为一个

493
00:18:59,000 --> 00:19:02,000
或者是两三个这种库里面

494
00:19:02,000 --> 00:19:05,000
它不会猜到说判断一个数

495
00:19:05,000 --> 00:19:07,000
判断一个变量是否为数组

496
00:19:07,000 --> 00:19:08,000
这么一种功能

497
00:19:08,000 --> 00:19:10,000
会单独的成为一个库对吧

498
00:19:10,000 --> 00:19:11,000
对

499
00:19:11,000 --> 00:19:14,000
这其实是一个语言设计上的缺陷

500
00:19:14,000 --> 00:19:16,000
导致了这么一个目前的这样的一个状况

501
00:19:16,000 --> 00:19:20,000
就是因为可能这个 JavaScript 的设计

502
00:19:20,000 --> 00:19:23,000
是根本不会想到有一天会有人

503
00:19:23,000 --> 00:19:27,000
真的去操心要判断一个东西是不是数组这件事情

504
00:19:27,000 --> 00:19:29,000
所以这功能根本就没有做出来对吧

505
00:19:29,000 --> 00:19:31,000
然后如果你直接去看

506
00:19:31,000 --> 00:19:33,000
但就算没做出来

507
00:19:33,000 --> 00:19:36,000
但是这个就这个比如说刚才想这个 LeftPad 也好

508
00:19:36,000 --> 00:19:39,000
它为什么不是一个这个叫做什么

509
00:19:39,000 --> 00:19:43,000
处理自负串的一个库的功能

510
00:19:43,000 --> 00:19:45,000
而是要单独成为一个库的

511
00:19:45,000 --> 00:19:46,000
好吧

512
00:19:46,000 --> 00:19:49,000
如果抛开语言设计本身问题

513
00:19:49,000 --> 00:19:51,000
我觉得可能还是一个 community

514
00:19:51,000 --> 00:20:00,000
就是这个社群没有建立起一个比较合理的组织类库的组织标准库的方式

515
00:20:00,000 --> 00:20:07,000
它有点像一个就沿用那个 Bazaar 和 Casidual 的比喻的话

516
00:20:07,000 --> 00:20:11,000
它没有试图去建立起来建立起一个比较系统化的

517
00:20:11,000 --> 00:20:16,000
更有更有条理的这么一个类库的结构

518
00:20:16,000 --> 00:20:19,000
而是就任其发展

519
00:20:19,000 --> 00:20:24,000
就可能这个即便是 Bazaar 和 Bazaar 之间也有区别的吧

520
00:20:24,000 --> 00:20:26,000
那其他语言的 Bazaar 可能是一个

521
00:20:26,000 --> 00:20:29,000
比如说一个经过有多少有这么一点管理的那种

522
00:20:29,000 --> 00:20:32,000
自由市场

523
00:20:32,000 --> 00:20:38,000
但是在 NPM 这边可能就是几十万个仓摊子那样

524
00:20:38,000 --> 00:20:40,000
堆在一片平地上

525
00:20:40,000 --> 00:20:44,000
但这里有一个问题就是说

526
00:20:44,000 --> 00:20:48,000
它为什么这个社区会产生这么一种文化

527
00:20:48,000 --> 00:20:51,000
然后后来就有人去追根溯源

528
00:20:51,000 --> 00:20:53,000
就到底去看为什么会是

529
00:20:53,000 --> 00:20:57,000
就别的语言都没有这么干了

530
00:20:57,000 --> 00:20:59,000
别的语言都是老老实实的一个

531
00:20:59,000 --> 00:21:01,000
比如说有一个 string library 对吧

532
00:21:01,000 --> 00:21:02,000
它做一些 string 的操作

533
00:21:02,000 --> 00:21:04,000
有一些这个什么比如说 big number 的 library

534
00:21:04,000 --> 00:21:06,000
做一堆 big number 的事情

535
00:21:06,000 --> 00:21:09,000
但是因为 JS 他要

536
00:21:09,000 --> 00:21:12,000
JS 大部分就分前端和后端的

537
00:21:12,000 --> 00:21:15,000
前端是要放在扣端里面去执行的嘛

538
00:21:15,000 --> 00:21:16,000
对

539
00:21:16,000 --> 00:21:21,000
那也就是说每次用户打开这个网页的时候

540
00:21:21,000 --> 00:21:25,000
都要重新再下载一遍这个网页的上面的这个 JS 代码

541
00:21:25,000 --> 00:21:28,000
那么为了提高这个响应速度呢

542
00:21:28,000 --> 00:21:30,000
他们就会有一种

543
00:21:30,000 --> 00:21:31,000
呃

544
00:21:31,000 --> 00:21:35,000
诉求就是要这个代码的体量尽量的小

545
00:21:35,000 --> 00:21:39,000
然后就变成一个很尴尬的问题

546
00:21:39,000 --> 00:21:44,000
就是说如果我我指数要用这个一个字符串呃

547
00:21:44,000 --> 00:21:48,000
函数包函数库里面某一个函数的话

548
00:21:48,000 --> 00:21:52,000
我是不是要把整个字符串整个字符串这个呃

549
00:21:52,000 --> 00:21:54,000
这个叫函数库都引进来

550
00:21:54,000 --> 00:21:59,000
嗯所以我只需要就像一个汉字字体一样

551
00:21:59,000 --> 00:22:02,000
我最如果我能指引进那些我需要的东西就好

552
00:22:02,000 --> 00:22:05,000
对所以其实就遇到一个就是在 JS 社区里面

553
00:22:05,000 --> 00:22:10,000
他们遇到了一个代码重用和这个结构

554
00:22:10,000 --> 00:22:14,000
这个代码组织呃出现了一个比较矛盾的一个地方

555
00:22:14,000 --> 00:22:17,000
就是说如果从代码重用的角度来讲

556
00:22:17,000 --> 00:22:19,000
你肯定是说某一个功能做的越细越好

557
00:22:19,000 --> 00:22:22,000
这样看就比如说每一个函数都可能是只有两三行

558
00:22:22,000 --> 00:22:25,000
然后他完全一个可以单独拿出来用对吧

559
00:22:25,000 --> 00:22:28,000
但是在代码组织上面呃如果你是这么干了的话

560
00:22:28,000 --> 00:22:32,000
然后你就变发现你会变得呃

561
00:22:32,000 --> 00:22:35,000
所有的这个功能你都要去就你 import

562
00:22:35,000 --> 00:22:40,000
你看一下一个比较正常的一个 JS 的一个一个文件

563
00:22:40,000 --> 00:22:42,000
你看他头头部的那些 require 啊

564
00:22:42,000 --> 00:22:45,000
还有现在用 JS 那些 yes 6 的话

565
00:22:45,000 --> 00:22:47,000
是 import 的语句都会非常非常多

566
00:22:47,000 --> 00:22:50,000
因为他飞的飞的就是每一个都非常细碎嘛

567
00:22:50,000 --> 00:22:53,000
这样的呃呃

568
00:22:53,000 --> 00:22:56,000
这导致就是刚才讲的这个他有一个这个数据

569
00:22:56,000 --> 00:22:59,000
是为了降低这个代码的呃整个尺度

570
00:22:59,000 --> 00:23:03,000
就是说我只我只用了那一部分功能我就不需要引入全部的东西了

571
00:23:03,000 --> 00:23:06,000
但其实在其他语言上这个东西是可以

572
00:23:06,000 --> 00:23:10,000
这个矛盾是可以解决的可以通过用技术的方式解决

573
00:23:10,000 --> 00:23:13,000
叫做什么呃就是无用代码消除嘛

574
00:23:13,000 --> 00:23:15,000
比如你引用了一个函数库

575
00:23:15,000 --> 00:23:17,000
假设它如果里面有 10 个函数

576
00:23:17,000 --> 00:23:20,000
然后你只用了其中一个另外 9 个都没有用到的话

577
00:23:20,000 --> 00:23:24,000
那理论上是可以通过呃编译器啊

578
00:23:24,000 --> 00:23:26,000
或者其他方法把那些就是所谓的 dead code

579
00:23:26,000 --> 00:23:29,000
你从你从来也不会引用到的代码给消除掉对吧

580
00:23:29,000 --> 00:23:32,000
但是要实现这一点呢

581
00:23:32,000 --> 00:23:35,000
必须要编译器对这个语法的静态分析

582
00:23:35,000 --> 00:23:40,000
要有比较深入的理解就是他可以他必须要明确的知道在编译期间

583
00:23:40,000 --> 00:23:45,000
就不是在运行期间啊就是要这个代码你是不会用到的

584
00:23:45,000 --> 00:23:48,000
那不管通过这个什么动态加载啊还是什么方式

585
00:23:48,000 --> 00:23:50,000
你肯定是不会引用到那部分代码

586
00:23:50,000 --> 00:23:53,000
所以编译器可以很安全的把它们移除掉

587
00:23:53,000 --> 00:23:58,000
但是这一点在很多静态动态语言里面

588
00:23:58,000 --> 00:24:01,000
像 java 啊 python 啊 ruby 啊

589
00:24:01,000 --> 00:24:03,000
lua 我不太清楚可不可以哈

590
00:24:03,000 --> 00:24:05,000
都是比较难实现的

591
00:24:05,000 --> 00:24:08,000
因为编译器没有办法在静态的时候

592
00:24:08,000 --> 00:24:11,000
就绝对有可信的把握

593
00:24:11,000 --> 00:24:14,000
表明那个代码是不会被引用到的

594
00:24:14,000 --> 00:24:20,000
因为有可能那部分代码在这个程序运行期间

595
00:24:20,000 --> 00:24:24,000
被动态的一个命名方式或者是改名还是怎么样

596
00:24:24,000 --> 00:24:25,000
取代引入进来

597
00:24:25,000 --> 00:24:28,000
而这个这个是你在近代分析的时候没法做的

598
00:24:30,000 --> 00:24:36,000
所以这个语言特性的导致在有这种需求的情况下

599
00:24:36,000 --> 00:24:39,000
我们只好采用手工的方式把代码切得非常细

600
00:24:39,000 --> 00:24:42,000
然后这样我们只引用需要的部分

601
00:24:42,000 --> 00:24:44,000
这样等于是人工的告诉他说

602
00:24:44,000 --> 00:24:47,000
我只需要这个 leftpad 不需要 rightpad 这个功能

603
00:24:47,000 --> 00:24:48,000
对吧

604
00:24:48,000 --> 00:24:49,000
对

605
00:24:49,000 --> 00:24:52,000
所以规定这一天还是一个语言设定的

606
00:24:52,000 --> 00:24:55,000
或者语言特性导致的一个问题

607
00:24:55,000 --> 00:24:59,000
但其实这个问题在后端是不存在的

608
00:24:59,000 --> 00:25:03,000
就是像 NPM 现在很多人是用来做那个就是后端的程序

609
00:25:03,000 --> 00:25:08,000
因为后端你没有这个要把代码精简的很小的需求

610
00:25:08,000 --> 00:25:08,000
对吧

611
00:25:08,000 --> 00:25:13,000
因为你说哪怕是在做挺复杂的一个后端程序

612
00:25:13,000 --> 00:25:15,000
哪怕是用 JSI 写的话

613
00:25:15,000 --> 00:25:17,000
几十张三百张不得了的

614
00:25:17,000 --> 00:25:18,000
然后对于本地次

615
00:25:18,000 --> 00:25:24,000
但问题在于这个就是发生了 NPM 发生的这个幺蛾子

616
00:25:24,000 --> 00:25:26,000
其实也是对后端有影响

617
00:25:26,000 --> 00:25:30,000
因为后端里面可能也有很多人在用 leftpad 这个酷

618
00:25:30,000 --> 00:25:31,000
对吧

619
00:25:31,000 --> 00:25:32,000
对没错

620
00:25:32,000 --> 00:25:35,000
后端的影响只不过是不能不能一时半会不能开发而已

621
00:25:35,000 --> 00:25:38,000
这个问题就在于这个 JS 这个语言

622
00:25:38,000 --> 00:25:42,000
除了他传统上是用来做写前端程序

623
00:25:42,000 --> 00:25:44,000
现在也在被用来写后端程序了

624
00:25:44,000 --> 00:25:49,000
那于是就会发现说我们是不是要从同一套

625
00:25:49,000 --> 00:25:50,000
同一个代码库

626
00:25:50,000 --> 00:25:52,000
同一个代码仓库

627
00:25:52,000 --> 00:25:53,000
就 NPM 吧

628
00:25:53,000 --> 00:25:54,000
这个就比较有火的例子

629
00:25:54,000 --> 00:26:01,000
那如果你重用了那些为前端代码优化组织的一个代码库的话

630
00:26:01,000 --> 00:26:03,000
你后端是不是也会产生同样的问题

631
00:26:03,000 --> 00:26:06,000
就哪怕说你后端没有这个要压缩代码量的需求

632
00:26:06,000 --> 00:26:13,000
你可以接受一个你引入了一个字符串处理的库里面

633
00:26:13,000 --> 00:26:15,000
你只用了其中一个函数而其他 99 个你都用不到

634
00:26:15,000 --> 00:26:17,000
这对你来说没有任何影响

635
00:26:17,000 --> 00:26:21,000
但是因为现在我们讲前后端统一的话

636
00:26:21,000 --> 00:26:24,000
JS 在这边跑到最远的嘛

637
00:26:24,000 --> 00:26:30,000
那他就没有办法说那我后端就采用另外一套组织代码

638
00:26:30,000 --> 00:26:31,000
这个代码库的方式了嘛

639
00:26:31,000 --> 00:26:34,000
这些新的搞笑之说在于它是无解的

640
00:26:34,000 --> 00:26:39,000
我觉得就是你在目前这个呃现实情况之下

641
00:26:39,000 --> 00:26:42,000
你没有办法杜绝说下次就不会出现这样的事情

642
00:26:43,000 --> 00:26:49,000
你也不你也没有一个比较简单的一揽子解决方法说

643
00:26:49,000 --> 00:26:50,000
这个语言要这样改革

644
00:26:50,000 --> 00:26:51,000
因为这个语言现在

645
00:26:52,000 --> 00:26:54,000
amcast script 就不属于任何人

646
00:26:54,000 --> 00:26:55,000
它是一个 standard 对吧

647
00:26:55,000 --> 00:26:59,000
你它不像 pison 有这么一个独裁者可以说啊

648
00:26:59,000 --> 00:27:00,000
这个语言要这样做

649
00:27:00,000 --> 00:27:03,000
于是哄一下大家都这样做

650
00:27:03,000 --> 00:27:04,000
我觉得有个解啊

651
00:27:04,000 --> 00:27:08,000
其实因为最简单的一个事情就是说

652
00:27:08,000 --> 00:27:13,000
那你既然就假设我们不想去浪费人力物力

653
00:27:13,000 --> 00:27:17,000
去重新组织这些已有的这个 JS 的那些代码库

654
00:27:17,000 --> 00:27:19,000
我们还说就重用现在这套模式下

655
00:27:19,000 --> 00:27:24,000
你怎么可以避免其中某一个这个库被删掉了

656
00:27:24,000 --> 00:27:27,000
然后导致你整个这个软件大厦都崩塌掉

657
00:27:27,000 --> 00:27:28,000
这种事情发生

658
00:27:28,000 --> 00:27:32,000
那你可以学这个什么购烂的方法吗

659
00:27:32,000 --> 00:27:33,000
你做一个 vendor 对吧

660
00:27:33,000 --> 00:27:36,000
就是你把那个外部的这代码依赖也放进

661
00:27:36,000 --> 00:27:38,000
你自己代码仓库里面去

662
00:27:38,000 --> 00:27:40,000
这样然后外部的修改

663
00:27:40,000 --> 00:27:44,000
你是作为整个代码的一个修改的部分去做

664
00:27:44,000 --> 00:27:46,000
对就是说啊

665
00:27:46,000 --> 00:27:49,000
我们可能从稳定稳定稳定稳定

666
00:27:49,000 --> 00:27:51,000
系统稳定和这个整个啊

667
00:27:51,000 --> 00:27:54,000
叫什么开发部署过程的

668
00:27:54,000 --> 00:27:56,000
可靠性的角度来讲

669
00:27:56,000 --> 00:28:07,000
你应该把那些任何会影响到你呃代码的运作的组件都视为你这个项目的一部分

670
00:28:07,000 --> 00:28:09,000
并且管理起来

671
00:28:09,000 --> 00:28:09,000
嗯

672
00:28:09,000 --> 00:28:12,000
其实在早期没有互联网的时代

673
00:28:12,000 --> 00:28:13,000
大家都是这样做的

674
00:28:13,000 --> 00:28:15,000
对

675
00:28:15,000 --> 00:28:18,000
这就变成了一个就变成一个一个习惯使然的东西

676
00:28:18,000 --> 00:28:19,000
大家都觉得啊

677
00:28:19,000 --> 00:28:22,000
我们这个我们这个呃

678
00:28:22,000 --> 00:28:25,000
服务器和这个开发自己都是一直联网的

679
00:28:25,000 --> 00:28:26,000
没联网我们啥也干不了的

680
00:28:26,000 --> 00:28:26,000
对吧

681
00:28:26,000 --> 00:28:27,000
所以如果这样的话

682
00:28:27,000 --> 00:28:28,000
我可以依赖啊

683
00:28:28,000 --> 00:28:32,000
然后我们假设那个 npm 这个这个呃

684
00:28:32,000 --> 00:28:33,000
这个代码托管的一个仓库

685
00:28:33,000 --> 00:28:36,000
它是一直是呃

686
00:28:36,000 --> 00:28:37,000
持续可用的

687
00:28:37,000 --> 00:28:39,000
那确实相比于说呃

688
00:28:39,000 --> 00:28:41,000
Python 的那个 PyP 对吧

689
00:28:41,000 --> 00:28:45,000
Python Package Index 的可用性来说

690
00:28:45,000 --> 00:28:49,000
这个 npm 确实是领先好多可能好多个数量级的

691
00:28:49,000 --> 00:28:50,000
对就是因为它太可靠了

692
00:28:50,000 --> 00:28:54,000
所以对很难没有人想过说这玩意居然会当

693
00:28:54,000 --> 00:28:56,000
对没错

694
00:28:56,000 --> 00:28:59,000
然后也没有人也之前也没有人遇到说呃

695
00:28:59,000 --> 00:29:00,000
别人放上去的代码

696
00:29:00,000 --> 00:29:02,000
然后就是被撤下来

697
00:29:02,000 --> 00:29:03,000
被撤下来这么一个事

698
00:29:03,000 --> 00:29:05,000
而且是而且尤其我觉得就是

699
00:29:05,000 --> 00:29:10,000
有些代码库可能是这个作者就干脆就不就不管了

700
00:29:10,000 --> 00:29:11,000
但不管他哪怕不管的时候

701
00:29:11,000 --> 00:29:14,000
他也不会主动就是把他撤下来

702
00:29:14,000 --> 00:29:14,000
对

703
00:29:14,000 --> 00:29:15,000
而更别说

704
00:29:15,000 --> 00:29:16,000
他觉得是 abandon

705
00:29:16,000 --> 00:29:17,000
他不是 removed 的

706
00:29:17,000 --> 00:29:18,000
对吧

707
00:29:18,000 --> 00:29:18,000
对

708
00:29:18,000 --> 00:29:21,000
而这个人就是他出一种

709
00:29:21,000 --> 00:29:22,000
你可能说 revenge

710
00:29:22,000 --> 00:29:24,000
这个这样一个心理

711
00:29:24,000 --> 00:29:25,000
就做了这样件事情

712
00:29:25,000 --> 00:29:29,000
他这个后果其实还是挺严重的

713
00:29:29,000 --> 00:29:32,000
就几乎和我们这个本期的口号相当呼应了

714
00:29:32,000 --> 00:29:35,000
就是这也算是某种 mass distraction

715
00:29:35,000 --> 00:29:39,000
对这个是一个挺好玩的一个事儿

716
00:29:39,000 --> 00:29:42,000
当然扯到这里就不得不说一句

717
00:29:42,000 --> 00:29:46,000
就是经常写也写 go 也写 js

718
00:29:46,000 --> 00:29:49,000
js 就是说代码重用到了一个比较变态的一个程度

719
00:29:49,000 --> 00:29:50,000
对吧

720
00:29:50,000 --> 00:29:54,000
我为了为了不要重复写是否一直 re 这个函数

721
00:29:54,000 --> 00:29:57,000
我都要把它单独抽象成一个库

722
00:29:58,000 --> 00:30:04,000
但其实在我知道比如说在 go land 的这个就所谓的 best practice 里面

723
00:30:04,000 --> 00:30:07,000
他们经常会说如果这个功能很简单

724
00:30:07,000 --> 00:30:08,000
你可以随手写出来

725
00:30:08,000 --> 00:30:11,000
你就不要去引用一个外部的依赖了

726
00:30:13,000 --> 00:30:15,000
这是两种哲学

727
00:30:15,000 --> 00:30:18,000
因为就有些我看评论

728
00:30:18,000 --> 00:30:23,000
leftpad 这个是的 blog 里面也会说这么一个简单的功能

729
00:30:23,000 --> 00:30:29,000
为什么很多人都选择要去首先你要去 inpand 上搜这样一个库对吧

730
00:30:29,000 --> 00:30:33,000
然后搜到了去 include 他的这样一个过程

731
00:30:33,000 --> 00:30:37,000
其实并不比你自己写一个要容易多少

732
00:30:38,000 --> 00:30:40,000
那为什么会有这样两种哲学存在

733
00:30:40,000 --> 00:30:41,000
一种就是说好吧

734
00:30:41,000 --> 00:30:44,000
这么简单的东西最好自己写一个

735
00:30:44,000 --> 00:30:47,000
而与之相反的就是有些人会说

736
00:30:47,000 --> 00:30:49,000
既然已经有人发明了轮子

737
00:30:49,000 --> 00:30:50,000
你为什么还要自己再弄一个

738
00:30:50,000 --> 00:30:55,000
就代码重用到是否是要追求到一个极致

739
00:30:55,000 --> 00:30:58,000
我的一个程序里面不会出现一行重复的代码

740
00:30:58,000 --> 00:31:02,000
这整个程序没有一行是我自己写的

741
00:31:02,000 --> 00:31:03,000
这种感觉

742
00:31:03,000 --> 00:31:06,000
我可以用别人写好的代码

743
00:31:06,000 --> 00:31:07,000
用别人写好的类裤

744
00:31:07,000 --> 00:31:08,000
用别人写好的

745
00:31:08,000 --> 00:31:11,000
用别人开发好的框架

746
00:31:11,000 --> 00:31:15,000
然后我只需要往里面填内容就可以了

747
00:31:15,000 --> 00:31:18,000
当然这里有一个很好的一个反驳

748
00:31:18,000 --> 00:31:22,000
就是因为这个 js 这个语言的坑实在是太多了

749
00:31:22,000 --> 00:31:24,000
哪怕你是否写一个像一字 array 这种

750
00:31:24,000 --> 00:31:26,000
这种看起来很简单的函数

751
00:31:26,000 --> 00:31:28,000
你用逻辑去推理

752
00:31:28,000 --> 00:31:30,000
应该他应该这样判断这样判断

753
00:31:30,000 --> 00:31:34,000
最后发现你查一下实际的比较可靠的写法是

754
00:31:34,000 --> 00:31:37,000
wtf 这为什么会考虑这么多奇怪的

755
00:31:37,000 --> 00:31:40,000
to string.call

756
00:31:40,000 --> 00:31:41,000
然后那个 object

757
00:31:41,000 --> 00:31:43,000
然后判断这个 to string

758
00:31:43,000 --> 00:31:48,000
call 的 object 上面得到的内容是不是 object area

759
00:31:48,000 --> 00:31:49,000
我觉得这个已经很扯了

760
00:31:49,000 --> 00:31:51,000
就是你要判断一个东西是不是数组

761
00:31:51,000 --> 00:31:53,000
在 JavaScript 里面

762
00:31:53,000 --> 00:31:55,000
居然要通过比较自动转的方式

763
00:31:55,000 --> 00:31:56,000
我觉得这个实在是

764
00:31:56,000 --> 00:31:57,000
Holy Christ

765
00:31:57,000 --> 00:32:05,000
对所以其实这件事情也是有它的这个客观原因的

766
00:32:05,000 --> 00:32:08,000
就是说不是说因为我们这个 JS 程序员懒

767
00:32:08,000 --> 00:32:10,000
还是说都是些对吧

768
00:32:10,000 --> 00:32:15,000
因为就是通常外界可能这个对 JS 开发者有一种偏见

769
00:32:15,000 --> 00:32:18,000
就是说是一帮没经过正统科班教育的

770
00:32:18,000 --> 00:32:20,000
啥也不懂的小年轻对吧

771
00:32:20,000 --> 00:32:22,000
这么一种成见的印象

772
00:32:22,000 --> 00:32:26,000
对但其实从实用的角度来讲

773
00:32:26,000 --> 00:32:28,000
他们采取这么方式做也是

774
00:32:28,000 --> 00:32:31,000
所谓的为了更就减小成本嘛

775
00:32:31,000 --> 00:32:31,000
简单来说

776
00:32:31,000 --> 00:32:34,000
因为你自己要去去写一个

777
00:32:34,000 --> 00:32:36,000
哪怕是看起来非常简单

778
00:32:36,000 --> 00:32:38,000
通俗一懂的一个功能

779
00:32:38,000 --> 00:32:41,000
都要去理解 JS 这个语言设计层面

780
00:32:41,000 --> 00:32:45,000
或者说在某一个这个运行室里面的各种各样的坑

781
00:32:45,000 --> 00:32:47,000
然后你如果与其这样

782
00:32:47,000 --> 00:32:49,000
你还不如说让别人先把这个坑踩完

783
00:32:49,000 --> 00:32:50,000
虽然很简单

784
00:32:50,000 --> 00:32:53,000
但是可以确保那个坑是已经是已知的

785
00:32:53,000 --> 00:32:54,000
已经被踩实了

786
00:32:54,000 --> 00:32:57,000
对已经被前任的尸骨填平了

787
00:32:57,000 --> 00:32:57,000
对

788
00:32:57,000 --> 00:33:06,000
所以其实我不知道你没有最近关注 JS 他们在做一个新的技术

789
00:33:06,000 --> 00:33:07,000
也不知道跟 JS 没什么关系了

790
00:33:07,000 --> 00:33:08,000
叫做 WebAssembly

791
00:33:08,000 --> 00:33:11,000
Web 会编语言

792
00:33:11,000 --> 00:33:11,000
对

793
00:33:11,000 --> 00:33:12,000
对

794
00:33:12,000 --> 00:33:13,000
就是对

795
00:33:13,000 --> 00:33:18,000
相当于一个最基本的子集

796
00:33:18,000 --> 00:33:21,000
然后其他的高端语言可以编译成这个技术的自己

797
00:33:21,000 --> 00:33:22,000
然后跑到浏览器

798
00:33:22,000 --> 00:33:23,000
对

799
00:33:23,000 --> 00:33:25,000
因为现在其实最麻烦的问题就是说

800
00:33:25,000 --> 00:33:28,000
为什么 JS 是变成一个大家要追求的一件事情

801
00:33:28,000 --> 00:33:31,000
虽然我们都知道这个语言的各种坑设计的也很烂

802
00:33:31,000 --> 00:33:32,000
对吧

803
00:33:32,000 --> 00:33:33,000
因为你没得选择

804
00:33:33,000 --> 00:33:35,000
你在前端这个浏览器里面

805
00:33:35,000 --> 00:33:36,000
你只能用这个语言

806
00:33:36,000 --> 00:33:42,000
那你要反过来问为什么这个浏览器不搭载一些比较 sane

807
00:33:42,000 --> 00:33:46,000
比较看起来没那么疯狂的的运行师呢

808
00:33:46,000 --> 00:33:48,000
这个一个是有历史原因先来后到的关系

809
00:33:48,000 --> 00:33:48,000
对吧

810
00:33:48,000 --> 00:33:51,000
那毕竟最开始的时候浏览器支持那么多

811
00:33:51,000 --> 00:33:57,000
但你也不得不好奇说你说像现在这个像 Chrome 的市场占有地位

812
00:33:57,000 --> 00:34:00,000
和这个叫什么 WebKit

813
00:34:00,000 --> 00:34:06,000
或者说 WebKit 唯一核心的这种浏览器的这种这种市场占有地位

814
00:34:06,000 --> 00:34:08,000
而且其实跟 WebKit 没什么关系

815
00:34:08,000 --> 00:34:10,000
它是另外的一个 js 的引擎吧

816
00:34:10,000 --> 00:34:14,000
但是就说你说我们把这个

817
00:34:14,000 --> 00:34:18,000
其实只要两三家公司这个合起来推荐事情

818
00:34:18,000 --> 00:34:20,000
就可以完全剃掉那个 js

819
00:34:20,000 --> 00:34:20,000
对啊

820
00:34:20,000 --> 00:34:23,000
不是有那么多什么 consultium 之类的东西存在

821
00:34:23,000 --> 00:34:25,000
就为什么不能一起来推荐这些

822
00:34:25,000 --> 00:34:27,000
对因为其实你看一下

823
00:34:27,000 --> 00:34:29,000
现在只需要说把 Google 出码

824
00:34:29,000 --> 00:34:32,000
然后苹果出码和微软出码

825
00:34:32,000 --> 00:34:35,000
就可以把可能 90%多的这个浏览器市场

826
00:34:35,000 --> 00:34:39,000
里面内置的这个解析器引擎给换过来

827
00:34:39,000 --> 00:34:39,000
对吧

828
00:34:39,000 --> 00:34:40,000
对

829
00:34:40,000 --> 00:34:44,000
但是就既然像什么 css 标准都可以去换

830
00:34:44,000 --> 00:34:49,000
为什么浏览器里面出一个加一个新的运行时是不可以的呢

831
00:34:49,000 --> 00:34:55,000
上 WebAssembly 也算是从 Mazzilla 那边出来的一种尝试吧

832
00:34:55,000 --> 00:35:01,000
然后那就说我们不要直接运行一些非常底层的代码

833
00:35:01,000 --> 00:35:03,000
像类似于 bycode 吧

834
00:35:03,000 --> 00:35:04,000
你可以这么理解

835
00:35:04,000 --> 00:35:08,000
然后这个 bycode 可以被浏览器里面这代的引擎

836
00:35:08,000 --> 00:35:12,000
用 JT 的方式比较方便的编译好

837
00:35:12,000 --> 00:35:17,000
然后它也同时可以是比较容易成为其他语言的一个 target

838
00:35:17,000 --> 00:35:17,000
对吧

839
00:35:17,000 --> 00:35:18,000
就是你写

840
00:35:18,000 --> 00:35:20,000
你哪怕你写 Java

841
00:35:20,000 --> 00:35:21,000
你写 C

842
00:35:21,000 --> 00:35:23,000
你写 Go

843
00:35:23,000 --> 00:35:23,000
Python

844
00:35:23,000 --> 00:35:26,000
它都可以比较容易的通过 compiler

845
00:35:26,000 --> 00:35:31,000
编译器把它编译成一个 WebAssembly 的一个中间的一个表现形式

846
00:35:31,000 --> 00:35:32,000
IL 吧算是

847
00:35:32,000 --> 00:35:36,000
然后再被浏览器解析成

848
00:35:36,000 --> 00:35:38,000
根据它不同的架构

849
00:35:38,000 --> 00:35:40,000
解析成可以执行的代码

850
00:35:40,000 --> 00:35:41,000
这样是不是就好一些呢

851
00:35:41,000 --> 00:35:44,000
这样是不是就可以说大家都不用都去写 JS 了

852
00:35:44,000 --> 00:35:49,000
Java 说好好好我早就做过了我也早就失败了

853
00:35:49,000 --> 00:35:58,000
对以前那个叫什么 Java Applet 还是叫什么来的

854
00:35:58,000 --> 00:35:59,000
Java Applet

855
00:35:59,000 --> 00:35:59,000
Applet

856
00:35:59,000 --> 00:36:00,000
跑在城

857
00:36:00,000 --> 00:36:04,000
就如果各位如果居然有这个年轻的听众

858
00:36:04,000 --> 00:36:06,000
我们也不知道 Java Applet 是什么

859
00:36:06,000 --> 00:36:09,000
它有点像一个有点像 Flash

860
00:36:09,000 --> 00:36:11,000
就是你用 Java 写译程序

861
00:36:11,000 --> 00:36:14,000
然后这个比喻还挺贴切的

862
00:36:14,000 --> 00:36:17,000
对然后它可以跑在浏览器里面

863
00:36:17,000 --> 00:36:20,000
然后那个浏览器里面会会有那么一小块区域

864
00:36:20,000 --> 00:36:21,000
明明嵌在网页里面

865
00:36:21,000 --> 00:36:24,000
但是看起来会网页

866
00:36:24,000 --> 00:36:26,000
看起来不是普通的网页的元素

867
00:36:26,000 --> 00:36:31,000
我记得以前学的时候还写过什么实现一个倒影效果之类的

868
00:36:34,000 --> 00:36:35,000
对

869
00:36:35,000 --> 00:36:38,000
后来好像我在做助教的时候还写过一个 Java Applet

870
00:36:38,000 --> 00:36:40,000
就模拟那个 AutoCAD

871
00:36:40,000 --> 00:36:42,000
就是 AutoCAD 那个

872
00:36:42,000 --> 00:36:44,000
建了一些基本功能

873
00:36:44,000 --> 00:36:45,000
因为对

874
00:36:45,000 --> 00:36:49,000
因为我们学校学那个机械设计的那帮人

875
00:36:49,000 --> 00:36:51,000
买不起 AutoCAD

876
00:36:51,000 --> 00:36:53,000
或者说德国没有盗版

877
00:36:53,000 --> 00:36:54,000
所以就自己占了一个

878
00:36:54,000 --> 00:36:59,000
对他们必须在那个网页上练习如果是有 AutoCAD

879
00:36:59,000 --> 00:37:03,000
但是那个不可能每一个人都每天去机房

880
00:37:03,000 --> 00:37:05,000
所以就做这么一个在线教学系统

881
00:37:05,000 --> 00:37:09,000
就是让大家去学 AutoCAD 怎么用

882
00:37:09,000 --> 00:37:12,000
我写过这么一个东西就是用 Java Applet 做的

883
00:37:12,000 --> 00:37:15,000
这是一个 AutoCAD emulator

884
00:37:15,000 --> 00:37:16,000
对

885
00:37:16,000 --> 00:37:20,000
当然没有那么 emulator 那么强

886
00:37:20,000 --> 00:37:24,000
他只是提供一些最基本的 behavior 那个练习

887
00:37:24,000 --> 00:37:27,000
比如说画圆画方量距离影响角度之类的

888
00:37:27,000 --> 00:37:27,000
对

889
00:37:27,000 --> 00:37:33,000
那个 Applet 后来是怎么开始从江湖上消失匿迹了

890
00:37:33,000 --> 00:37:34,000
就没有人用的

891
00:37:34,000 --> 00:37:36,000
为什么呢

892
00:37:36,000 --> 00:37:40,000
一方面就比如说 Flash 能够流传下来

893
00:37:40,000 --> 00:37:41,000
就存活下来

894
00:37:41,000 --> 00:37:46,000
一方面是因为 Flash 能够提供很多非常酷炫的交互功能

895
00:37:46,000 --> 00:37:51,000
另外一方面 Flash 可以播放视频对吧

896
00:37:51,000 --> 00:37:55,000
这个在教主把它提出来是件事的之前

897
00:37:55,000 --> 00:37:56,000
所有人都觉得理所应当

898
00:37:56,000 --> 00:37:58,000
就是 Flash 就是来播放视频的

899
00:37:58,000 --> 00:37:59,000
但是对

900
00:37:59,000 --> 00:38:00,000
但是 Applet

901
00:38:00,000 --> 00:38:03,000
Java Applet 没有任何这方面的优势

902
00:38:03,000 --> 00:38:06,000
你使用 Java Applet 来写出来的程序

903
00:38:06,000 --> 00:38:09,000
可能是要比使用 JavaScript 来写

904
00:38:09,000 --> 00:38:10,000
或者 Flash 来

905
00:38:10,000 --> 00:38:14,000
可能要比用 Flash 或者 JavaScript 来写

906
00:38:14,000 --> 00:38:14,000
没错

907
00:38:14,000 --> 00:38:16,000
Flash 使用的语言是 ActionScript

908
00:38:16,000 --> 00:38:17,000
ActionScript 的惹性程度

909
00:38:17,000 --> 00:38:19,000
其实和 JavaScript 不想上下

910
00:38:19,000 --> 00:38:20,000
它就是一个变种吗

911
00:38:20,000 --> 00:38:21,000
对

912
00:38:21,000 --> 00:38:23,000
他们都是 AkmaScript

913
00:38:23,000 --> 00:38:28,000
然后但是唯一这样一个优点

914
00:38:28,000 --> 00:38:30,000
是对于开发人员来说

915
00:38:30,000 --> 00:38:31,000
就是你在写 Java Applet 的时候

916
00:38:31,000 --> 00:38:32,000
你用的是 Java

917
00:38:32,000 --> 00:38:35,000
你没有那么痛苦

918
00:38:35,000 --> 00:38:41,000
但能够达到效果和能够完成的事情

919
00:38:41,000 --> 00:38:43,000
都没有 Flash 那么好

920
00:38:43,000 --> 00:38:49,000
所以这其实是一个用户选择的过程

921
00:38:49,000 --> 00:38:52,000
所以 Applet 后来是被 Flash 插件给干掉了

922
00:38:52,000 --> 00:38:53,000
几乎可以这么说

923
00:38:53,000 --> 00:38:55,000
因为在早期

924
00:38:55,000 --> 00:38:58,000
哪怕现在你在某些网站上

925
00:38:58,000 --> 00:38:59,000
还是会遇到这样的

926
00:38:59,000 --> 00:39:01,000
Applet 这个时候网站会问说

927
00:39:01,000 --> 00:39:04,000
你要启用这个外部程序吗

928
00:39:04,000 --> 00:39:06,000
至少我就是如果你把那个

929
00:39:06,000 --> 00:39:08,000
Plugin 关掉的话

930
00:39:08,000 --> 00:39:10,000
网站浏览器可能会问你

931
00:39:10,000 --> 00:39:12,000
你说你要启用这个外部程序吗

932
00:39:12,000 --> 00:39:14,000
因为我觉得我遇到这种情况的话

933
00:39:14,000 --> 00:39:18,000
基本上都是可能用到很老的

934
00:39:18,000 --> 00:39:20,000
什么教学软件才会遇到这种情况

935
00:39:20,000 --> 00:39:27,000
基本上任何新出的后来或者比较大众一点东西都没有用到这个 Applet 这个技术

936
00:39:27,000 --> 00:39:27,000
对

937
00:39:27,000 --> 00:39:31,000
我意思是那个时候就很多人都会出现这样的

938
00:39:31,000 --> 00:39:34,000
那个时候还有微软的 ActiveX 对吧

939
00:39:34,000 --> 00:39:36,000
就一大堆插件

940
00:39:36,000 --> 00:39:43,000
那其实走向 B 的一个结果就是所有这些插件里面可能只有一两个能够存活下来

941
00:39:43,000 --> 00:39:48,000
那存活下来就是 Flash 和 ActiveX 也存活了很长一段时间

942
00:39:48,000 --> 00:39:50,000
不过现在好了

943
00:39:50,000 --> 00:39:53,000
你看像 Applet 已经嗝屁了

944
00:39:53,000 --> 00:39:57,000
然后 Adobe 也在说不要用 Flash 开发新东西了

945
00:39:57,000 --> 00:40:00,000
然后 ActiveX 好像也挂掉了吧

946
00:40:00,000 --> 00:40:03,000
在那个 Edge 里面已经没有了

947
00:40:03,000 --> 00:40:04,000
我记得

948
00:40:04,000 --> 00:40:08,000
我记得前两年还有很多人在那个抱怨网银

949
00:40:08,000 --> 00:40:09,000
中国的网银全都是 ActiveX

950
00:40:09,000 --> 00:40:10,000
现在好像没有了

951
00:40:10,000 --> 00:40:12,000
现在大家都有手机网银

952
00:40:12,000 --> 00:40:14,000
谁还管你那个浏览器里面怎么样

953
00:40:14,000 --> 00:40:15,000
啊

954
00:40:15,000 --> 00:40:16,000
原来如此

955
00:40:16,000 --> 00:40:16,000
OK

956
00:40:16,000 --> 00:40:17,000
对吧

957
00:40:17,000 --> 00:40:20,000
所以中国的网银问题是这样解释

958
00:40:20,000 --> 00:40:21,000
对啊

959
00:40:21,000 --> 00:40:22,000
那个问题就只是说

960
00:40:22,000 --> 00:40:26,000
因为那个什么 PC 这个整个 use case 被淘汰掉了

961
00:40:26,000 --> 00:40:28,000
所以大家根本不 care 这件事情了

962
00:40:28,000 --> 00:40:30,000
现在你说我要去银行转

963
00:40:30,000 --> 00:40:32,000
我要去用那个银行转账的功能

964
00:40:32,000 --> 00:40:34,000
肯定不会打开银行网站的

965
00:40:34,000 --> 00:40:36,000
打开那个手机网银点点就完了

966
00:40:36,000 --> 00:40:37,000
对吧

967
00:40:37,000 --> 00:40:40,000
或者还有就是那个支付宝和微信转账

968
00:40:40,000 --> 00:40:40,000
也很方便

969
00:40:40,000 --> 00:40:41,000
对吧

970
00:40:41,000 --> 00:40:43,000
就大家也就随你去吧

971
00:40:43,000 --> 00:40:45,000
你爱怎么弄怎么弄去

972
00:40:45,000 --> 00:40:46,000
OK

973
00:40:46,000 --> 00:40:48,000
相比之下

974
00:40:48,000 --> 00:40:49,000
德国的网银还是一直建的

975
00:40:49,000 --> 00:40:52,000
而且用的还挺方便的

976
00:40:52,000 --> 00:40:53,000
这个在

977
00:40:53,000 --> 00:40:56,000
就我现在转账基本上还是用网银

978
00:40:56,000 --> 00:40:58,000
而且德国的网银

979
00:40:58,000 --> 00:40:59,000
你那个银行有移动吧

980
00:40:59,000 --> 00:41:00,000
有移动 APP 吗

981
00:41:00,000 --> 00:41:01,000
可以转账吗

982
00:41:01,000 --> 00:41:02,000
有移动 APP

983
00:41:02,000 --> 00:41:03,000
有移动 APP 可以转账

984
00:41:03,000 --> 00:41:04,000
OK

985
00:41:04,000 --> 00:41:07,000
但是移动 APP 扔就

986
00:41:07,000 --> 00:41:08,000
它有两个 APP

987
00:41:08,000 --> 00:41:09,000
一个是生成验证码的 APP

988
00:41:09,000 --> 00:41:11,000
另外一个是网银本身

989
00:41:11,000 --> 00:41:12,000
它为什么不撞到一起

990
00:41:12,000 --> 00:41:17,000
因为生成验证码的 APP 可以

991
00:41:17,000 --> 00:41:19,000
不需要登录

992
00:41:19,000 --> 00:41:21,000
就扫描一个

993
00:41:21,000 --> 00:41:24,000
它不是二维码

994
00:41:24,000 --> 00:41:28,000
它是一个彩色的原点构成的这样一张图

995
00:41:28,000 --> 00:41:29,000
然后

996
00:41:29,000 --> 00:41:30,000
那也是二维码

997
00:41:30,000 --> 00:41:32,000
二维码有很多是表现形式的

998
00:41:32,000 --> 00:41:35,000
它不是 QR code

999
00:41:35,000 --> 00:41:35,000
也不是什么

1000
00:41:35,000 --> 00:41:39,000
就它不是任何我已知的二维码

1001
00:41:39,000 --> 00:41:39,000
它是一种

1002
00:41:39,000 --> 00:41:44,000
比如说机票上面有时候会出现一个 S type code

1003
00:41:44,000 --> 00:41:44,000
对吧

1004
00:41:44,000 --> 00:41:45,000
它什么都不是

1005
00:41:45,000 --> 00:41:47,000
它不是任何我已知的

1006
00:41:47,000 --> 00:41:49,000
单色的二维码

1007
00:41:49,000 --> 00:41:51,000
它是一个彩色的二维码

1008
00:41:51,000 --> 00:41:51,000
它是红

1009
00:41:51,000 --> 00:41:58,000
对红绿蓝三种颜色的原点排列在一个正方形里面

1010
00:41:58,000 --> 00:42:01,000
然后用生成验证码的 APP 去扫

1011
00:42:01,000 --> 00:42:04,000
扫了之后会生成一个七位的数字

1012
00:42:04,000 --> 00:42:06,000
然后你把这个七位的数字填到网页

1013
00:42:06,000 --> 00:42:11,000
或者是手机网银的验证码那一栏里面

1014
00:42:11,000 --> 00:42:12,000
然后就去转账

1015
00:42:12,000 --> 00:42:13,000
这个所谓合适

1016
00:42:13,000 --> 00:42:24,000
好像这是从早期的德国网银的支付生成器流传下来了

1017
00:42:24,000 --> 00:42:26,000
就是以前德国网银的使用方法是

1018
00:42:26,000 --> 00:42:29,000
把一张卡插到一个小设备里面

1019
00:42:29,000 --> 00:42:31,000
然后这个设备你一般要花 10 欧元买

1020
00:42:31,000 --> 00:42:34,000
然后拿这个设备对准屏幕

1021
00:42:34,000 --> 00:42:37,000
屏幕上会出现两个闪烁的黑色的光斑

1022
00:42:37,000 --> 00:42:41,000
然后支付码生成器

1023
00:42:41,000 --> 00:42:42,000
上面有两个感光元件

1024
00:42:42,000 --> 00:42:45,000
会去感受光斑的闪烁频率

1025
00:42:45,000 --> 00:42:46,000
然后给你显示一个数字出来

1026
00:42:46,000 --> 00:42:49,000
然后你把这个数字填到网页上

1027
00:42:49,000 --> 00:42:52,000
这可能是一种用户习惯的遗传

1028
00:42:52,000 --> 00:42:54,000
国内的银行

1029
00:42:54,000 --> 00:42:56,000
好忘了是哪家银行之前也

1030
00:42:56,000 --> 00:42:57,000
就国内银行也干过

1031
00:42:57,000 --> 00:42:59,000
采用过各种各样奇怪的技术方案

1032
00:42:59,000 --> 00:43:02,000
我记得很早以前好像是建行

1033
00:43:02,000 --> 00:43:04,000
有一个他会给你一张纸

1034
00:43:04,000 --> 00:43:09,000
纸上有一个不规则排列的一个矩阵

1035
00:43:09,000 --> 00:43:11,000
每一格是一个数字

1036
00:43:11,000 --> 00:43:14,000
然后你在登录的时候

1037
00:43:14,000 --> 00:43:16,000
你要按照它屏幕提示

1038
00:43:16,000 --> 00:43:17,000
在哪一格

1039
00:43:17,000 --> 00:43:19,000
输哪一格哪一行的

1040
00:43:19,000 --> 00:43:20,000
就哪一行哪一格的数字

1041
00:43:20,000 --> 00:43:21,000
然后再输连续

1042
00:43:21,000 --> 00:43:24,000
这个其实是一个很古老的密码

1043
00:43:24,000 --> 00:43:26,000
就是密码本的方式

1044
00:43:26,000 --> 00:43:33,000
就在我小时候玩一个什么三国游戏的时候

1045
00:43:33,000 --> 00:43:36,000
就是每次打开这个游戏就要输入密码本上了

1046
00:43:36,000 --> 00:43:37,000
对对对对

1047
00:43:37,000 --> 00:43:38,000
然后这个

1048
00:43:38,000 --> 00:43:40,000
然后魔术世界也用了

1049
00:43:40,000 --> 00:43:41,000
对那张纸用几次

1050
00:43:41,000 --> 00:43:42,000
最后还得就无效了

1051
00:43:42,000 --> 00:43:44,000
就得再换一张新的

1052
00:43:44,000 --> 00:43:45,000
因为他需要

1053
00:43:45,000 --> 00:43:47,000
因为每个人拿那个本是不一样的

1054
00:43:47,000 --> 00:43:50,000
对德国网银也有这样的

1055
00:43:50,000 --> 00:43:52,000
德国网银不过方法更简单

1056
00:43:52,000 --> 00:43:56,000
就是很多网银就是如果你不一定是网银

1057
00:43:56,000 --> 00:43:57,000
还有电话银行

1058
00:43:57,000 --> 00:44:02,000
就是他会给你寄一个有 100 个数字的纸

1059
00:44:02,000 --> 00:44:06,000
然后你每次要干什么

1060
00:44:06,000 --> 00:44:07,000
然后你就可以把这个数字

1061
00:44:07,000 --> 00:44:10,000
他会说我要你的第 56 个密码

1062
00:44:10,000 --> 00:44:12,000
然后你把第 56 个密码给他

1063
00:44:12,000 --> 00:44:14,000
然后第 56 个密码就作废

1064
00:44:14,000 --> 00:44:15,000
对对对对我也用过

1065
00:44:15,000 --> 00:44:17,000
之前我有那个 18 卡産的时候

1066
00:44:17,000 --> 00:44:18,000
他也给我一张纸这个

1067
00:44:18,000 --> 00:44:18,000
对

1068
00:44:18,000 --> 00:44:20,000
这是密码学里面

1069
00:44:20,000 --> 00:44:21,000
其实最安全的一种方式

1070
00:44:21,000 --> 00:44:24,000
就是不可破解的一次一密

1071
00:44:24,000 --> 00:44:27,000
这也算是早期形态的

1072
00:44:27,000 --> 00:44:28,000
这个什么两部验证吧

1073
00:44:28,000 --> 00:44:29,000
因为你除了知道

1074
00:44:29,000 --> 00:44:31,000
你的银行账户的密码之外

1075
00:44:31,000 --> 00:44:32,000
你还得知道

1076
00:44:32,000 --> 00:44:33,000
你还得拿到那个小本

1077
00:44:33,000 --> 00:44:35,000
然后按照那个规则

1078
00:44:35,000 --> 00:44:35,000
等于是验证

1079
00:44:35,000 --> 00:44:36,000
你有没有那个小本吗

1080
00:44:36,000 --> 00:44:38,000
对

1081
00:44:38,000 --> 00:44:39,000
挺搞笑的

1082
00:44:39,000 --> 00:44:40,000
对

1083
00:44:40,000 --> 00:44:42,000
其实现在的 authenticator

1084
00:44:42,000 --> 00:44:43,000
也都是一次一密了

1085
00:44:43,000 --> 00:44:44,000
在这个意义上

1086
00:44:44,000 --> 00:44:46,000
现在的那个比较常用的

1087
00:44:46,000 --> 00:44:47,000
就是那种基于时间的

1088
00:44:47,000 --> 00:44:49,000
这种一个变动的码嘛

1089
00:44:49,000 --> 00:44:50,000
对

1090
00:44:50,000 --> 00:44:52,000
我手机上装是 Google

1091
00:44:52,000 --> 00:44:53,000
BattleNet

1092
00:44:53,000 --> 00:44:55,000
Dropbox

1093
00:44:55,000 --> 00:44:56,000
还有什么

1094
00:44:56,000 --> 00:44:57,000
其他堆

1095
00:44:57,000 --> 00:44:58,000
GitHub

1096
00:44:58,000 --> 00:44:58,000
对

1097
00:44:58,000 --> 00:44:59,000
对

1098
00:44:59,000 --> 00:44:59,000
对

1099
00:44:59,000 --> 00:45:00,000
苹果

1100
00:45:00,000 --> 00:45:01,000
你是用你的客户端

1101
00:45:01,000 --> 00:45:02,000
我用那个 authi

1102
00:45:02,000 --> 00:45:04,000
我就用

1103
00:45:04,000 --> 00:45:05,000
authenticator

1104
00:45:05,000 --> 00:45:07,000
authenticator

1105
00:45:07,000 --> 00:45:07,000
对

1106
00:45:07,000 --> 00:45:08,000
他那个

1107
00:45:08,000 --> 00:45:09,000
这有什么差别吗

1108
00:45:09,000 --> 00:45:11,000
难道这里面有

1109
00:45:11,000 --> 00:45:12,000
你们唐索瓦的那个

1110
00:45:12,000 --> 00:45:14,000
authentic

1111
00:45:14,000 --> 00:45:14,000
authenticator

1112
00:45:14,000 --> 00:45:15,000
有一个挺好的

1113
00:45:15,000 --> 00:45:17,000
他可以做到那个 todayview 的

1114
00:45:17,000 --> 00:45:18,000
那个里面

1115
00:45:18,000 --> 00:45:19,000
直接显示几个

1116
00:45:19,000 --> 00:45:20,000
你解锁状态下

1117
00:45:20,000 --> 00:45:21,000
是可以不用打开

1118
00:45:21,000 --> 00:45:22,000
那个应用

1119
00:45:22,000 --> 00:45:23,000
直接看的

1120
00:45:23,000 --> 00:45:24,000
常用的那几个

1121
00:45:24,000 --> 00:45:25,000
一二三

1122
00:45:25,000 --> 00:45:27,000
可以看常用的六个

1123
00:45:27,000 --> 00:45:29,000
这个两部验证的那个 code

1124
00:45:29,000 --> 00:45:31,000
OK

1125
00:45:31,000 --> 00:45:32,000
那我应该就装一张

1126
00:45:32,000 --> 00:45:33,000
然后之前

1127
00:45:33,000 --> 00:45:35,000
之前我用那个 authenticator

1128
00:45:35,000 --> 00:45:36,000
最主要的原因

1129
00:45:36,000 --> 00:45:37,000
他当时说

1130
00:45:37,000 --> 00:45:38,000
他是有一个

1131
00:45:38,000 --> 00:45:39,000
一个 Mac 上面的

1132
00:45:39,000 --> 00:45:41,000
一个附属软件

1133
00:45:41,000 --> 00:45:42,000
可以通过蓝牙的方式

1134
00:45:42,000 --> 00:45:44,000
直接读取你那个 code

1135
00:45:44,000 --> 00:45:45,000
就可以减轻复制了

1136
00:45:45,000 --> 00:45:48,000
OK

1137
00:45:48,000 --> 00:45:49,000
但是后来其实用了

1138
00:45:49,000 --> 00:45:50,000
发现根本就不稳定

1139
00:45:50,000 --> 00:45:52,000
因为那个 iOS 上面蓝牙

1140
00:45:52,000 --> 00:45:53,000
不是随时都

1141
00:45:53,000 --> 00:45:54,000
就他不能

1142
00:45:54,000 --> 00:45:56,000
他不能一直在后台启动

1143
00:45:56,000 --> 00:45:56,000
那个应用

1144
00:45:56,000 --> 00:45:58,000
所以他跟那个 Mac

1145
00:45:58,000 --> 00:45:58,000
对

1146
00:45:58,000 --> 00:46:00,000
是不稳定的

1147
00:46:00,000 --> 00:46:01,000
这还是发现

1148
00:46:01,000 --> 00:46:02,000
还是改了 today

1149
00:46:02,000 --> 00:46:04,000
在这位置里面直接拉下来

1150
00:46:04,000 --> 00:46:05,000
然后输一下比较简单

1151
00:46:05,000 --> 00:46:06,000
反正就六位数

1152
00:46:06,000 --> 00:46:08,000
OK

1153
00:46:08,000 --> 00:46:10,000
说到这个 iOS 蓝牙

1154
00:46:10,000 --> 00:46:11,000
这是

1155
00:46:11,000 --> 00:46:12,000
我前两天买了一个

1156
00:46:12,000 --> 00:46:15,000
我前两天车坏了

1157
00:46:15,000 --> 00:46:15,000
就是

1158
00:46:15,000 --> 00:46:17,000
开了一半的时候会说

1159
00:46:17,000 --> 00:46:17,000
就是

1160
00:46:17,000 --> 00:46:19,000
尤其在高速上面

1161
00:46:19,000 --> 00:46:21,000
就是我正在用 150 的速度

1162
00:46:21,000 --> 00:46:22,000
超车

1163
00:46:22,000 --> 00:46:22,000
不好意思

1164
00:46:22,000 --> 00:46:23,000
你的轮子已经没有了

1165
00:46:24,000 --> 00:46:26,000
在超车道上

1166
00:46:26,000 --> 00:46:28,000
他忽然显示一个

1167
00:46:28,000 --> 00:46:30,000
就是翻译过来就是

1168
00:46:30,000 --> 00:46:31,000
引擎出力

1169
00:46:31,000 --> 00:46:33,000
降低

1170
00:46:33,000 --> 00:46:36,000
就是引擎出力降低

1171
00:46:36,000 --> 00:46:37,000
就大概这么一条

1172
00:46:37,000 --> 00:46:39,000
就是输出不足吗

1173
00:46:39,000 --> 00:46:40,000
对

1174
00:46:40,000 --> 00:46:41,000
引擎出力不足

1175
00:46:41,000 --> 00:46:41,000
然后

1176
00:46:41,000 --> 00:46:43,000
非常尴尬

1177
00:46:43,000 --> 00:46:45,000
你在超 150 的时候

1178
00:46:45,000 --> 00:46:47,000
右边的车可能 130

1179
00:46:47,000 --> 00:46:48,000
超不动了

1180
00:46:48,000 --> 00:46:50,000
你就超不动了

1181
00:46:50,000 --> 00:46:50,000
然后

1182
00:46:50,000 --> 00:46:53,000
右边的车上看啥子

1183
00:46:53,000 --> 00:46:54,000
看着我

1184
00:46:54,000 --> 00:46:54,000
然后

1185
00:46:54,000 --> 00:46:57,000
因为在德国右侧超车

1186
00:46:57,000 --> 00:46:58,000
理论上是犯法

1187
00:46:58,000 --> 00:46:59,000
对吧

1188
00:46:59,000 --> 00:46:59,000
就他没办法

1189
00:46:59,000 --> 00:47:00,000
但是我就是那么

1190
00:47:00,000 --> 00:47:02,000
我既不比他快

1191
00:47:02,000 --> 00:47:04,000
我也只好比他慢下来

1192
00:47:04,000 --> 00:47:06,000
所以他就只好从右侧超过我

1193
00:47:06,000 --> 00:47:07,000
然后我再

1194
00:47:07,000 --> 00:47:08,000
并到他后面去

1195
00:47:08,000 --> 00:47:08,000
就

1196
00:47:08,000 --> 00:47:11,000
其实这个场景是非常危险的

1197
00:47:11,000 --> 00:47:11,000
因为

1198
00:47:11,000 --> 00:47:12,000
我在高速上还好

1199
00:47:12,000 --> 00:47:13,000
那假如是那种

1200
00:47:13,000 --> 00:47:14,000
那种两车道的

1201
00:47:14,000 --> 00:47:16,000
中间是虚线的地方

1202
00:47:16,000 --> 00:47:17,000
我到左边去超车

1203
00:47:17,000 --> 00:47:18,000
然后超到一半

1204
00:47:18,000 --> 00:47:19,000
突然引擎没力了

1205
00:47:19,000 --> 00:47:20,000
然后对面来的车

1206
00:47:20,000 --> 00:47:21,000
不就把我撞死了

1207
00:47:21,000 --> 00:47:22,000
对吧

1208
00:47:22,000 --> 00:47:24,000
不然你这个时候不应该减速

1209
00:47:24,000 --> 00:47:25,000
然后等那个

1210
00:47:25,000 --> 00:47:26,000
你就被那个车

1211
00:47:26,000 --> 00:47:27,000
到你前面

1212
00:47:27,000 --> 00:47:28,000
你再切回去

1213
00:47:28,000 --> 00:47:29,000
对

1214
00:47:29,000 --> 00:47:30,000
是应该这么做

1215
00:47:30,000 --> 00:47:31,000
但是如果来不及呢

1216
00:47:31,000 --> 00:47:32,000
对吧

1217
00:47:32,000 --> 00:47:33,000
如果来不及

1218
00:47:33,000 --> 00:47:34,000
就是很危险的一件事情

1219
00:47:34,000 --> 00:47:34,000
就

1220
00:47:34,000 --> 00:47:36,000
我在减速的过程之中

1221
00:47:36,000 --> 00:47:37,000
对面来车怎么办

1222
00:47:37,000 --> 00:47:38,000
对吧

1223
00:47:38,000 --> 00:47:41,000
然后我就想说

1224
00:47:41,000 --> 00:47:44,000
那个买一个 OBD 的

1225
00:47:44,000 --> 00:47:44,000
那个

1226
00:47:44,000 --> 00:47:46,000
你买了个蓝牙的

1227
00:47:46,000 --> 00:47:47,000
对不对

1228
00:47:47,000 --> 00:47:48,000
对

1229
00:47:48,000 --> 00:47:48,000
买了个蓝牙

1230
00:47:48,000 --> 00:47:49,000
奶衣

1231
00:47:49,000 --> 00:47:52,000
然后就蠢了

1232
00:47:52,000 --> 00:47:55,000
IOS 是连不了

1233
00:47:55,000 --> 00:47:56,000
这个 OBD 的蓝牙的

1234
00:47:56,000 --> 00:47:56,000
对

1235
00:47:56,000 --> 00:47:58,000
它要求是安卓的手机

1236
00:47:58,000 --> 00:47:59,000
所以我被迫

1237
00:47:59,000 --> 00:48:00,000
我去换了一个蓝牙的版本

1238
00:48:00,000 --> 00:48:01,000
对对

1239
00:48:01,000 --> 00:48:03,000
换了一个 WiFi 的版本

1240
00:48:03,000 --> 00:48:03,000
对

1241
00:48:03,000 --> 00:48:05,000
因为那个 IOS 的蓝牙

1242
00:48:05,000 --> 00:48:06,000
你不愿意的情况下

1243
00:48:06,000 --> 00:48:07,000
它是没有那个

1244
00:48:07,000 --> 00:48:08,000
Console 的那个

1245
00:48:08,000 --> 00:48:09,000
那个 Profile

1246
00:48:09,000 --> 00:48:10,000
然后你就读不到

1247
00:48:10,000 --> 00:48:11,000
那个 OBD 蓝牙

1248
00:48:11,000 --> 00:48:13,000
传给你的信息

1249
00:48:13,000 --> 00:48:13,000
对

1250
00:48:13,000 --> 00:48:15,000
这实在是

1251
00:48:15,000 --> 00:48:15,000
嗯

1252
00:48:15,000 --> 00:48:16,000
是不是傻

1253
00:48:16,000 --> 00:48:18,000
好吧

1254
00:48:18,000 --> 00:48:20,000
不过类似信息也不是第一次了

1255
00:48:20,000 --> 00:48:21,000
就是很多东西都是

1256
00:48:21,000 --> 00:48:23,000
安卓可以做

1257
00:48:23,000 --> 00:48:24,000
IOS 不能做

1258
00:48:24,000 --> 00:48:26,000
对啊

1259
00:48:26,000 --> 00:48:27,000
那个毕竟就是什么

1260
00:48:27,000 --> 00:48:28,000
限制程度不一样

1261
00:48:28,000 --> 00:48:30,000
In the name of security

1262
00:48:30,000 --> 00:48:31,000
对

1263
00:48:31,000 --> 00:48:33,000
In the name of freedom

1264
00:48:33,000 --> 00:48:36,000
I choose Android

1265
00:48:36,000 --> 00:48:38,000
所以后来你那个车怎么一回事

1266
00:48:38,000 --> 00:48:42,000
是后来读了一个

1267
00:48:42,000 --> 00:48:44,000
Error code 是什么

1268
00:48:44,000 --> 00:48:46,000
柴油预热的

1269
00:48:46,000 --> 00:48:48,000
读数不正常

1270
00:48:48,000 --> 00:48:50,000
然后你买的是柴油车

1271
00:48:50,000 --> 00:48:52,000
那当然

1272
00:48:52,000 --> 00:48:53,000
在欧洲

1273
00:48:53,000 --> 00:48:56,000
在欧洲柴油有补贴的

1274
00:48:56,000 --> 00:48:59,000
那你那个车被召回了吗

1275
00:48:59,000 --> 00:48:59,000
现在

1276
00:48:59,000 --> 00:49:00,000
没有

1277
00:49:00,000 --> 00:49:01,000
我是沃尔沃

1278
00:49:01,000 --> 00:49:03,000
我不买德国车液

1279
00:49:03,000 --> 00:49:04,000
对

1280
00:49:04,000 --> 00:49:08,000
不过沃尔沃之后

1281
00:49:08,000 --> 00:49:09,000
也可能爆出一个什么

1282
00:49:09,000 --> 00:49:09,000
Diesel gate

1283
00:49:09,000 --> 00:49:12,000
也不是没有可能

1284
00:49:12,000 --> 00:49:13,000
我有个朋友

1285
00:49:13,000 --> 00:49:14,000
就也不是没有可能

1286
00:49:14,000 --> 00:49:15,000
这句话

1287
00:49:15,000 --> 00:49:15,000
发明人

1288
00:49:15,000 --> 00:49:17,000
回忆说

1289
00:49:17,000 --> 00:49:20,000
我是他认识的人里面

1290
00:49:20,000 --> 00:49:21,000
唯一一个

1291
00:49:21,000 --> 00:49:23,000
就在德国的华人里面

1292
00:49:23,000 --> 00:49:26,000
唯一一个没有买德国车的人

1293
00:49:26,000 --> 00:49:27,000
对

1294
00:49:27,000 --> 00:49:28,000
在德国买德国车更便宜吗

1295
00:49:28,000 --> 00:49:30,000
反正要比在中国买原船

1296
00:49:30,000 --> 00:49:31,000
原船的德国车便宜

1297
00:49:31,000 --> 00:49:32,000
那肯定没有

1298
00:49:32,000 --> 00:49:33,000
没有关税吧

1299
00:49:33,000 --> 00:49:33,000
起来

1300
00:49:33,000 --> 00:49:34,000
对

1301
00:49:34,000 --> 00:49:36,000
但是

1302
00:49:36,000 --> 00:49:38,000
德国车还是

1303
00:49:38,000 --> 00:49:40,000
反正喜欢买不起

1304
00:49:40,000 --> 00:49:42,000
买不起都不喜欢

1305
00:49:42,000 --> 00:49:43,000
所以买两瓦尔沃

1306
00:49:43,000 --> 00:49:44,000
你喜欢的什么

1307
00:49:44,000 --> 00:49:45,000
宝马 M 4

1308
00:49:45,000 --> 00:49:48,000
M 4 多少钱

1309
00:49:48,000 --> 00:49:49,000
五六万

1310
00:49:49,000 --> 00:49:50,000
六七万

1311
00:49:50,000 --> 00:49:51,000
不知道

1312
00:49:51,000 --> 00:49:52,000
那瓦尔沃多少钱

1313
00:49:52,000 --> 00:49:52,000
瓦尔沃

1314
00:49:52,000 --> 00:49:53,000
瓦尔沃一万多

1315
00:49:53,000 --> 00:49:55,000
它这么多

1316
00:49:55,000 --> 00:49:57,000
对啊

1317
00:49:57,000 --> 00:49:59,000
就双门叫车而已嘛

1318
00:49:59,000 --> 00:50:00,000
好玩

1319
00:50:00,000 --> 00:50:02,000
对

1320
00:50:02,000 --> 00:50:03,000
回到这个

1321
00:50:03,000 --> 00:50:04,000
就是反正柴油

1322
00:50:04,000 --> 00:50:06,000
预热器的一个什么东西坏了

1323
00:50:06,000 --> 00:50:07,000
就是这个东西

1324
00:50:07,000 --> 00:50:08,000
对

1325
00:50:08,000 --> 00:50:09,000
下周要去换

1326
00:50:09,000 --> 00:50:11,000
柴油预热器等等

1327
00:50:11,000 --> 00:50:12,000
柴油什么预热

1328
00:50:12,000 --> 00:50:14,000
因为柴油是就

1329
00:50:14,000 --> 00:50:15,000
呃

1330
00:50:15,000 --> 00:50:16,000
内燃机里面

1331
00:50:16,000 --> 00:50:17,000
呃

1332
00:50:17,000 --> 00:50:19,000
它是个冲压引燃的嘛

1333
00:50:19,000 --> 00:50:20,000
不需要火花塞嘛

1334
00:50:20,000 --> 00:50:22,000
但为什么要预热呢

1335
00:50:22,000 --> 00:50:22,000
对对对

1336
00:50:22,000 --> 00:50:22,000
汽油是要用

1337
00:50:22,000 --> 00:50:24,000
汽油是要用火花塞的

1338
00:50:24,000 --> 00:50:25,000
而柴油是直接压下去

1339
00:50:25,000 --> 00:50:26,000
柴油就会自燃

1340
00:50:26,000 --> 00:50:27,000
就会

1341
00:50:27,000 --> 00:50:27,000
就会

1342
00:50:27,000 --> 00:50:28,000
着着着的

1343
00:50:28,000 --> 00:50:29,000
然后

1344
00:50:29,000 --> 00:50:29,000
对

1345
00:50:29,000 --> 00:50:31,000
在天比较冷的时候

1346
00:50:31,000 --> 00:50:33,000
柴油可能要先预热

1347
00:50:33,000 --> 00:50:34,000
才可以

1348
00:50:34,000 --> 00:50:36,000
它不然不能雾化是吧

1349
00:50:36,000 --> 00:50:36,000
对

1350
00:50:36,000 --> 00:50:38,000
它雾化的不完全

1351
00:50:38,000 --> 00:50:40,000
然后就会积碳啊什么的

1352
00:50:40,000 --> 00:50:41,000
就燃烧不完全

1353
00:50:41,000 --> 00:50:42,000
所以有这么一个预热

1354
00:50:42,000 --> 00:50:43,000
预热装置

1355
00:50:43,000 --> 00:50:44,000
早期的柴油车里面

1356
00:50:44,000 --> 00:50:45,000
会有一个

1357
00:50:45,000 --> 00:50:47,000
预标盘上会有一个看起来像保险色一样的东西

1358
00:50:47,000 --> 00:50:48,000
一个灯

1359
00:50:48,000 --> 00:50:50,000
那个灯亮的时候就意味着它的预热

1360
00:50:50,000 --> 00:50:53,000
但是现在就是比较新的柴油车都没有这个功能

1361
00:50:53,000 --> 00:50:54,000
就没有这个

1362
00:50:54,000 --> 00:50:55,000
没有这个显示

1363
00:50:55,000 --> 00:50:56,000
但是它还是会默默的预热

1364
00:50:56,000 --> 00:50:58,000
然后这个默默的预热

1365
00:50:58,000 --> 00:50:58,000
如果

1366
00:50:58,000 --> 00:50:59,000
呃

1367
00:50:59,000 --> 00:51:00,000
失败的话

1368
00:51:00,000 --> 00:51:01,000
就

1369
00:51:01,000 --> 00:51:03,000
有可能产生这样的问题

1370
00:51:03,000 --> 00:51:03,000
哦

1371
00:51:03,000 --> 00:51:04,000
我明白了

1372
00:51:04,000 --> 00:51:06,000
所以后来你是怎么

1373
00:51:06,000 --> 00:51:07,000
怎么解决的

1374
00:51:07,000 --> 00:51:08,000
没有解决

1375
00:51:08,000 --> 00:51:09,000
下周二续修了

1376
00:51:09,000 --> 00:51:09,000
哈哈

1377
00:51:09,000 --> 00:51:14,000
我还以为你用那个什么

1378
00:51:14,000 --> 00:51:15,000
OBD 的那个那个

1379
00:51:15,000 --> 00:51:16,000
那个什么

1380
00:51:16,000 --> 00:51:17,000
那个那个那个

1381
00:51:17,000 --> 00:51:17,000
那个一个小挂件

1382
00:51:17,000 --> 00:51:18,000
然后巴巴巴弄一下

1383
00:51:18,000 --> 00:51:19,000
就可以把它修好

1384
00:51:19,000 --> 00:51:19,000
哦

1385
00:51:19,000 --> 00:51:21,000
这个硬件的东西

1386
00:51:21,000 --> 00:51:24,000
零件的问题是没有办法通过软件的 hack 来接

1387
00:51:24,000 --> 00:51:25,000
之前

1388
00:51:25,000 --> 00:51:26,000
之前我也买了

1389
00:51:26,000 --> 00:51:27,000
我也不是买

1390
00:51:27,000 --> 00:51:28,000
就是朋友给我一个那个

1391
00:51:28,000 --> 00:51:30,000
OBD 的那种接蓝牙

1392
00:51:30,000 --> 00:51:31,000
是接蓝牙了

1393
00:51:31,000 --> 00:51:32,000
对没错

1394
00:51:32,000 --> 00:51:33,000
然后也是连那个

1395
00:51:33,000 --> 00:51:35,000
iOS 没法连

1396
00:51:35,000 --> 00:51:37,000
然后连 Mac 可以读出来

1397
00:51:37,000 --> 00:51:38,000
呃

1398
00:51:38,000 --> 00:51:38,000
就还

1399
00:51:38,000 --> 00:51:39,000
但是也不是很稳定吧

1400
00:51:39,000 --> 00:51:40,000
然后

1401
00:51:40,000 --> 00:51:42,000
最后还是找了一个安卓手机上面

1402
00:51:42,000 --> 00:51:43,000
有一个挺好的应用

1403
00:51:43,000 --> 00:51:44,000
连上去

1404
00:51:44,000 --> 00:51:47,000
才能够把里面的一个 error code 给消掉

1405
00:51:47,000 --> 00:51:48,000
OK

1406
00:51:48,000 --> 00:51:50,000
哦

1407
00:51:50,000 --> 00:51:52,000
那你买的这个 OBD 还是挺高级的

1408
00:51:52,000 --> 00:51:52,000
就是可以

1409
00:51:52,000 --> 00:51:53,000
可以 program 的

1410
00:51:53,000 --> 00:51:55,000
就是我买的这个 OBD 是只读的

1411
00:51:55,000 --> 00:51:58,000
就它只能读出引擎的错误代码

1412
00:51:58,000 --> 00:51:59,000
嗯

1413
00:51:59,000 --> 00:52:00,000
对

1414
00:52:00,000 --> 00:52:02,000
就我需要的也只是

1415
00:52:02,000 --> 00:52:04,000
就不能写回是吧

1416
00:52:04,000 --> 00:52:04,000
OK

1417
00:52:04,000 --> 00:52:04,000
对

1418
00:52:04,000 --> 00:52:05,000
就你要说

1419
00:52:05,000 --> 00:52:08,000
我把那个 error code

1420
00:52:08,000 --> 00:52:10,000
有一个叫什么

1421
00:52:10,000 --> 00:52:11,000
反正就

1422
00:52:11,000 --> 00:52:13,000
错误代码存储器

1423
00:52:13,000 --> 00:52:15,000
你可以清零

1424
00:52:15,000 --> 00:52:16,000
然后把它清零的话

1425
00:52:16,000 --> 00:52:17,000
那个错误代码就没了

1426
00:52:17,000 --> 00:52:19,000
然后这个功能是需要写的

1427
00:52:19,000 --> 00:52:19,000
对

1428
00:52:19,000 --> 00:52:20,000
没错

1429
00:52:20,000 --> 00:52:22,000
不但你这样

1430
00:52:22,000 --> 00:52:23,000
如果你只读的话

1431
00:52:23,000 --> 00:52:23,000
你打算干嘛呢

1432
00:52:23,000 --> 00:52:25,000
你读出来没有用

1433
00:52:25,000 --> 00:52:26,000
我想知道为什么呀

1434
00:52:26,000 --> 00:52:26,000
我只是想知道这个

1435
00:52:26,000 --> 00:52:27,000
就是因为这

1436
00:52:27,000 --> 00:52:31,000
你要知道为什么你直接送去一场修补就完了

1437
00:52:31,000 --> 00:52:34,000
可是送去一场修补是得约时间嘛

1438
00:52:34,000 --> 00:52:36,000
因为德国这点很讨厌

1439
00:52:36,000 --> 00:52:37,000
就是你不管干嘛你都要事先约

1440
00:52:37,000 --> 00:52:38,000
有没有

1441
00:52:38,000 --> 00:52:38,000
就

1442
00:52:38,000 --> 00:52:40,000
这个所有的资本主义发达管家都这样

1443
00:52:40,000 --> 00:52:41,000
对

1444
00:52:41,000 --> 00:52:43,000
我想知道这个问题是不是严重

1445
00:52:43,000 --> 00:52:44,000
是不是很严重

1446
00:52:44,000 --> 00:52:49,000
因为在网上搜这个错误代码的时候

1447
00:52:49,000 --> 00:52:50,000
有些人说他当场就停下来

1448
00:52:50,000 --> 00:52:51,000
然后直接让拖车了

1449
00:52:51,000 --> 00:52:53,000
车拖到修车厂去了

1450
00:52:53,000 --> 00:52:57,000
我就想说这个问题到底是严重到这个程度呢

1451
00:52:57,000 --> 00:52:58,000
还是说我可以继续开一阵

1452
00:52:58,000 --> 00:53:02,000
现在你的结论是还可以继续开一阵

1453
00:53:02,000 --> 00:53:04,000
对

1454
00:53:04,000 --> 00:53:06,000
反正每天开个几公里是没问题

1455
00:53:06,000 --> 00:53:08,000
所以你看这个

1456
00:53:08,000 --> 00:53:10,000
这种车这种这种蠢东西

1457
00:53:10,000 --> 00:53:13,000
它的这个 Air reporting 实在是太差了

1458
00:53:13,000 --> 00:53:13,000
是吧

1459
00:53:13,000 --> 00:53:16,000
为了你知道这个问题到底的严重性

1460
00:53:16,000 --> 00:53:18,000
你还得专门买个东西去读出来

1461
00:53:18,000 --> 00:53:20,000
他为什么不直接做到一半反正显示呢

1462
00:53:20,000 --> 00:53:22,000
因为这是一个

1463
00:53:22,000 --> 00:53:26,000
你要给那些不那么 taxary 的人

1464
00:53:26,000 --> 00:53:28,000
看一条非常复杂的凑材码

1465
00:53:28,000 --> 00:53:29,000
因为这

1466
00:53:29,000 --> 00:53:32,000
不是他可以翻译为那个比较容易理解的文字

1467
00:53:32,000 --> 00:53:35,000
那其实是为了这个其实是为了那个

1468
00:53:35,000 --> 00:53:37,000
保护那个维修店的利益的吗

1469
00:53:37,000 --> 00:53:39,000
嗯

1470
00:53:39,000 --> 00:53:42,000
翻译成比较容易理解的文字

1471
00:53:42,000 --> 00:53:44,000
比如说请维修

1472
00:53:44,000 --> 00:53:46,000
可是最容易理解的文字不就是

1473
00:53:46,000 --> 00:53:47,000
请把你的车带到 4 S 店吧

1474
00:53:47,000 --> 00:53:48,000
就很多

1475
00:53:48,000 --> 00:53:49,000
不是啊

1476
00:53:49,000 --> 00:53:51,000
比如说就好像我们做写代码一样吧

1477
00:53:51,000 --> 00:53:54,000
你出错年分个优先级对吧

1478
00:53:54,000 --> 00:53:55,000
你会有这个 warning critical

1479
00:53:55,000 --> 00:53:57,000
有 debug 而已对吧

1480
00:53:57,000 --> 00:53:59,000
那你好歹出一个这个等级嘛

1481
00:53:59,000 --> 00:54:02,000
我到底是要就地就不能开了等到救援

1482
00:54:02,000 --> 00:54:04,000
还是说可以开到就近的修车厂去弄一弄

1483
00:54:04,000 --> 00:54:05,000
还是怎么样对吧

1484
00:54:05,000 --> 00:54:06,000
你起码有

1485
00:54:06,000 --> 00:54:07,000
这个还是有吧

1486
00:54:07,000 --> 00:54:08,000
就是没有啊

1487
00:54:08,000 --> 00:54:08,000
我觉得

1488
00:54:08,000 --> 00:54:11,000
大部分车是会有会有什么

1489
00:54:11,000 --> 00:54:13,000
就是手册上会写啊

1490
00:54:13,000 --> 00:54:15,000
比如说这个红色的那个发动机的那个灯

1491
00:54:15,000 --> 00:54:16,000
亮起来的时候

1492
00:54:16,000 --> 00:54:18,000
你就应该立刻靠边停

1493
00:54:18,000 --> 00:54:20,000
然后去店里面修嘛

1494
00:54:20,000 --> 00:54:23,000
那当时你出那个的时候

1495
00:54:23,000 --> 00:54:25,000
他也不是亮了那个红色的灯吗

1496
00:54:25,000 --> 00:54:25,000
对

1497
00:54:25,000 --> 00:54:26,000
他没有亮那个红色的灯

1498
00:54:26,000 --> 00:54:28,000
但是我自己想要知道

1499
00:54:28,000 --> 00:54:29,000
这个玩意到底有多远种

1500
00:54:29,000 --> 00:54:31,000
对

1501
00:54:31,000 --> 00:54:33,000
我的看就是很多车里面

1502
00:54:33,000 --> 00:54:36,000
他就不具备这种区别对待

1503
00:54:36,000 --> 00:54:38,000
或者说告诉你一个大致的

1504
00:54:38,000 --> 00:54:40,000
一个自我诊断的一个结果

1505
00:54:40,000 --> 00:54:41,000
就告诉你说要修了

1506
00:54:41,000 --> 00:54:42,000
说了什么事不知道

1507
00:54:42,000 --> 00:54:44,000
对吧

1508
00:54:44,000 --> 00:54:44,000
傻不傻

1509
00:54:44,000 --> 00:54:46,000
好吧

1510
00:54:46,000 --> 00:54:49,000
但不管怎么说 OBT 接口这个东西

1511
00:54:49,000 --> 00:54:54,000
我觉得如果你真的对车的状况感兴趣的话

1512
00:54:54,000 --> 00:54:55,000
还是可以买一个

1513
00:54:55,000 --> 00:54:58,000
然后用手机看一看

1514
00:54:58,000 --> 00:54:59,000
尤其如果你有一个安卓手机

1515
00:54:59,000 --> 00:55:01,000
你可以得到很多消息

1516
00:55:01,000 --> 00:55:03,000
你可以去买一个那个谁

1517
00:55:03,000 --> 00:55:05,000
之前他们都经常在打广告

1518
00:55:05,000 --> 00:55:06,000
那个叫 automatic

1519
00:55:06,000 --> 00:55:10,000
你说在 podcast 上面都打广告

1520
00:55:10,000 --> 00:55:11,000
对对对对

1521
00:55:11,000 --> 00:55:15,000
那个已经前年上前年就已经有了

1522
00:55:15,000 --> 00:55:17,000
他就是一个 OBD 的蓝阳的 Dongle

1523
00:55:17,000 --> 00:55:19,000
但是他可以跟 iPhone 共同使用

1524
00:55:19,000 --> 00:55:21,000
OK

1525
00:55:21,000 --> 00:55:24,000
然后他可以告诉你常见错误

1526
00:55:24,000 --> 00:55:26,000
会翻译成我说的人话

1527
00:55:26,000 --> 00:55:27,000
告诉你到底严不严重

1528
00:55:27,000 --> 00:55:29,000
他能大致的记录下来

1529
00:55:29,000 --> 00:55:33,000
我想想应该是你行车的那个

1530
00:55:33,000 --> 00:55:34,000
就通过那个

1531
00:55:34,000 --> 00:55:37,000
就是叫什么

1532
00:55:37,000 --> 00:55:38,000
你行车的这个状态

1533
00:55:38,000 --> 00:55:39,000
比如说你是加速了多少

1534
00:55:39,000 --> 00:55:41,000
然后那个有个这种曲线吧

1535
00:55:41,000 --> 00:55:41,000
好像是

1536
00:55:41,000 --> 00:55:43,000
OK

1537
00:55:43,000 --> 00:55:44,000
就还挺有意义

1538
00:55:44,000 --> 00:55:47,000
这个什么 Dash Command 之类的 app 也可以

1539
00:55:47,000 --> 00:55:48,000
对对

1540
00:55:48,000 --> 00:55:49,000
原理都是一样的

1541
00:55:49,000 --> 00:55:49,000
就是用 OBT

1542
00:55:49,000 --> 00:55:53,000
但是说他这个包装成产品感会比较好一点

1543
00:55:53,000 --> 00:55:53,000
据说是这样

1544
00:55:53,000 --> 00:55:55,000
然后也贵一点

1545
00:55:55,000 --> 00:55:56,000
贵很多

1546
00:55:56,000 --> 00:55:59,000
你那个 OBT 的那个 Dongle 多少钱

1547
00:55:59,000 --> 00:56:00,000
5 欧

1548
00:56:00,000 --> 00:56:01,000
20 欧吧

1549
00:56:01,000 --> 00:56:03,000
那你还是买的挺贵的

1550
00:56:03,000 --> 00:56:05,000
其实 EB 上买大概 3 块钱

1551
00:56:05,000 --> 00:56:06,000
3 刀一个

1552
00:56:06,000 --> 00:56:07,000
15 欧

1553
00:56:07,000 --> 00:56:08,000
15 欧

1554
00:56:08,000 --> 00:56:13,000
那个 WiFi 的版本要比来了蛮很贵

1555
00:56:13,000 --> 00:56:15,000
那肯定

1556
00:56:15,000 --> 00:56:16,000
那肯定复杂一些

1557
00:56:16,000 --> 00:56:20,000
然后那个 automatic 那个好像 100 刀

1558
00:56:20,000 --> 00:56:21,000
OK

1559
00:56:21,000 --> 00:56:24,000
好吧

1560
00:56:24,000 --> 00:56:24,000
也值得

1561
00:56:24,000 --> 00:56:26,000
其实如果你真的对自己的车

1562
00:56:26,000 --> 00:56:28,000
那么有兴趣了解

1563
00:56:28,000 --> 00:56:33,000
好因为去 4 S 店修可能一次就要两三百四四五百

1564
00:56:34,000 --> 00:56:34,000
对

1565
00:56:35,000 --> 00:56:37,000
你看这就是我为什么不喜欢

1566
00:56:38,000 --> 00:56:41,000
这个 car ownership 的一个很重要的原因

1567
00:56:41,000 --> 00:56:43,000
因为什么事情都要自己操心的

1568
00:56:43,000 --> 00:56:44,000
这太多啰嗦的事情了

1569
00:56:44,000 --> 00:56:48,000
我要的是你把我从 A 安全带到 B

1570
00:56:48,000 --> 00:56:50,000
我才不管你到底怎么出了什么问题

1571
00:56:51,000 --> 00:56:52,000
说得是

1572
00:56:52,000 --> 00:56:54,000
对啊

1573
00:56:54,000 --> 00:56:56,000
所以你看现在就是一个滴滴重度用户

1574
00:56:56,000 --> 00:57:00,000
好吧

1575
00:57:00,000 --> 00:57:03,000
好像纯了有点远

1576
00:57:03,000 --> 00:57:06,000
对我们觉得将来可以开一个副节目

1577
00:57:06,000 --> 00:57:09,000
汽车恐慌

1578
00:57:09,000 --> 00:57:10,000
发动机恐慌

1579
00:57:10,000 --> 00:57:14,000
对其实

1580
00:57:14,000 --> 00:57:17,000
其实 IPN 是应该开一档汽车节目

1581
00:57:17,000 --> 00:57:18,000
但是

1582
00:57:18,000 --> 00:57:19,000
不对应该先开摩托车节目

1583
00:57:19,000 --> 00:57:22,000
摩托车节目没有

1584
00:57:22,000 --> 00:57:24,000
听受众群太少了

1585
00:57:24,000 --> 00:57:25,000
我当然是举双

1586
00:57:25,000 --> 00:57:26,000
名字我都给你想好了

1587
00:57:26,000 --> 00:57:27,000
就叫 Zen

1588
00:57:27,000 --> 00:57:33,000
好吧

1589
00:57:33,000 --> 00:57:35,000
那我们还是扯回来好了

1590
00:57:35,000 --> 00:57:36,000
OK

1591
00:57:36,000 --> 00:57:38,000
接着说我们的

1592
00:57:38,000 --> 00:57:40,000
第二条新闻

1593
00:57:40,000 --> 00:57:41,000
天哪

1594
00:57:41,000 --> 00:57:42,000
才说到第二条

1595
00:57:42,000 --> 00:57:43,000
第二条

1596
00:57:43,000 --> 00:57:44,000
旧闻

1597
00:57:44,000 --> 00:57:47,000
bash for windows

1598
00:57:47,000 --> 00:57:50,000
汽软最近是不是缝了

1599
00:57:50,000 --> 00:57:54,000
我倒觉得微软现在终于清醒过来

1600
00:57:54,000 --> 00:57:58,000
意识到大势已去

1601
00:57:58,000 --> 00:57:59,000
是吧

1602
00:57:59,000 --> 00:58:00,000
对

1603
00:58:00,000 --> 00:58:02,000
意识到自己不能再逆历史洪流而动

1604
00:58:02,000 --> 00:58:03,000
不能再

1605
00:58:03,000 --> 00:58:04,000
不能再

1606
00:58:05,000 --> 00:58:06,000
口出什么

1607
00:58:06,000 --> 00:58:11,000
Linux is a cancer 之类的

1608
00:58:11,000 --> 00:58:11,000
嗯哼

1609
00:58:11,000 --> 00:58:14,000
它已经被 Cancer 上升了

1610
00:58:14,000 --> 00:58:16,000
反正对对对

1611
00:58:16,000 --> 00:58:18,000
现在微软已经被

1612
00:58:18,000 --> 00:58:21,000
这个 Cancer 所同化

1613
00:58:21,000 --> 00:58:23,000
我记得有一个贴在保险杠上的贴纸

1614
00:58:23,000 --> 00:58:24,000
就是

1615
00:58:24,000 --> 00:58:26,000
We are Linux

1616
00:58:26,000 --> 00:58:26,000
不

1617
00:58:26,000 --> 00:58:28,000
We are Windows

1618
00:58:28,000 --> 00:58:30,000
We are Legion

1619
00:58:30,000 --> 00:58:31,000
We will conquer you

1620
00:58:31,000 --> 00:58:32,000
就是

1621
00:58:32,000 --> 00:58:37,000
这应该是点出 Star Trek 里面那个 Borg

1622
00:58:37,000 --> 00:58:39,000
就是有一个种族叫 Borg

1623
00:58:39,000 --> 00:58:41,000
他们里面的人没有

1624
00:58:41,000 --> 00:58:42,000
嗯

1625
00:58:42,000 --> 00:58:44,000
个体思考的意识

1626
00:58:44,000 --> 00:58:47,000
然后一定要同化其他的族群

1627
00:58:47,000 --> 00:58:51,000
然后把他们加到自己的这个所谓 Hive Mind 里面来

1628
00:58:51,000 --> 00:58:54,000
然后 Windows 就是这样一种感觉

1629
00:58:54,000 --> 00:58:56,000
但现在反过来

1630
00:58:56,000 --> 00:58:56,000
现在是

1631
00:58:56,000 --> 00:59:01,000
Microsoft 被这个 Hive Mind 那次同化

1632
00:59:01,000 --> 00:59:04,000
在这个 Windows 里面加了一个 Linux 的字系统

1633
00:59:04,000 --> 00:59:05,000
嗯

1634
00:59:05,000 --> 00:59:06,000
对

1635
00:59:06,000 --> 00:59:08,000
这个是 3 月 30 号的新闻

1636
00:59:08,000 --> 00:59:09,000
天哪

1637
00:59:09,000 --> 00:59:12,000
我们已经过去将近 4 个礼拜了

1638
00:59:12,000 --> 00:59:14,000
一个多月吧

1639
00:59:14,000 --> 00:59:15,000
嗯

1640
00:59:15,000 --> 00:59:15,000
没有

1641
00:59:15,000 --> 00:59:16,000
没有一个多月了

1642
00:59:16,000 --> 00:59:17,000
今天是啊

1643
00:59:17,000 --> 00:59:18,000
生日快乐

1644
00:59:18,000 --> 00:59:19,000
Rail

1645
00:59:19,000 --> 00:59:20,000
哈哈哈哈

1646
00:59:20,000 --> 00:59:21,000
这

1647
00:59:21,000 --> 00:59:22,000
这有差大

1648
00:59:22,000 --> 00:59:25,000
各位听众朋友们

1649
00:59:25,000 --> 00:59:26,000
今天我们录音的这一天

1650
00:59:26,000 --> 00:59:27,000
呃

1651
00:59:27,000 --> 00:59:28,000
4 月 23 日是 Rail

1652
00:59:28,000 --> 00:59:30,000
Rail 先生的生日

1653
00:59:30,000 --> 00:59:31,000
嗯

1654
00:59:31,000 --> 00:59:32,000
Rail

1655
00:59:32,000 --> 00:59:33,000
请问你多少岁了

1656
00:59:33,000 --> 00:59:35,000
这个能讲吗

1657
00:59:35,000 --> 00:59:35,000
这个不能讲

1658
00:59:35,000 --> 00:59:37,000
我靠

1659
00:59:37,000 --> 00:59:38,000
为什么

1660
00:59:38,000 --> 00:59:41,000
那你讲我现在又比你年轻了吧

1661
00:59:41,000 --> 00:59:42,000
哦

1662
00:59:42,000 --> 00:59:42,000
靠

1663
00:59:42,000 --> 00:59:43,000
没关系

1664
00:59:43,000 --> 00:59:44,000
我已经习惯了

1665
00:59:44,000 --> 00:59:46,000
不能说

1666
00:59:46,000 --> 00:59:47,000
不能说

1667
00:59:47,000 --> 00:59:48,000
好吧

1668
00:59:48,000 --> 00:59:50,000
但是对

1669
00:59:50,000 --> 00:59:51,000
我们的 Rail 终于又长大了一次

1670
00:59:51,000 --> 00:59:54,000
接着说这个 Bash for Windows

1671
00:59:54,000 --> 00:59:58,000
他其实后来我看了一些相关的资料

1672
00:59:58,000 --> 00:59:59,000
说其实原来 NT 的时候

1673
00:59:59,000 --> 01:00:01,000
之前就已经有个一个 Posic Mode

1674
01:00:01,000 --> 01:00:02,000
对吧

1675
01:00:02,000 --> 01:00:03,000
对

1676
01:00:03,000 --> 01:00:04,000
但是那个东西从来没有

1677
01:00:04,000 --> 01:00:06,000
从来没有

1678
01:00:06,000 --> 01:00:06,000
那个时候

1679
01:00:06,000 --> 01:00:09,000
我永远觉得我要把那个别人都干掉嘛

1680
01:00:09,000 --> 01:00:12,000
所以就虽然有虽然技术上是可行的

1681
01:00:12,000 --> 01:00:14,000
但是并没有去推这个东西好像

1682
01:00:14,000 --> 01:00:15,000
对

1683
01:00:15,000 --> 01:00:16,000
因为

1684
01:00:16,000 --> 01:00:19,000
但是现在时代不同了

1685
01:00:19,000 --> 01:00:20,000
所以那个时候的这个

1686
01:00:20,000 --> 01:00:21,000
Windows 将何日下

1687
01:00:21,000 --> 01:00:22,000
对吧

1688
01:00:22,000 --> 01:00:23,000
对

1689
01:00:23,000 --> 01:00:24,000
以为会失败了

1690
01:00:24,000 --> 01:00:25,000
这样的现在会被拿回来

1691
01:00:25,000 --> 01:00:26,000
就其实你要先考虑

1692
01:00:26,000 --> 01:00:27,000
就是说为什么

1693
01:00:27,000 --> 01:00:29,000
古软会出这么一招

1694
01:00:29,000 --> 01:00:30,000
我们先不说技术词面的问题

1695
01:00:30,000 --> 01:00:31,000
先说 why 吧

1696
01:00:31,000 --> 01:00:32,000
就他为什么要做这个

1697
01:00:32,000 --> 01:00:35,000
这吸引 Linux 的程序员

1698
01:00:35,000 --> 01:00:39,000
我觉得这可能是那个 Azure strategy 的一部分

1699
01:00:39,000 --> 01:00:47,000
就是我觉得这个东西的出现还是为了服务端考量

1700
01:00:47,000 --> 01:00:48,000
就是微软想到说好吧

1701
01:00:48,000 --> 01:00:53,000
反正服务端的这个软件我是干不过 Linux 上面

1702
01:00:53,000 --> 01:00:54,000
Linux 平台上面的东西

1703
01:00:54,000 --> 01:00:56,000
就是我在或者说微软说好吧

1704
01:00:56,000 --> 01:01:06,000
我在服务器端是不可能成为或者重新恢复成为一个占主导地位的平台了对吧

1705
01:01:06,000 --> 01:01:10,000
那推连求一四我至少可以在上面卖服务卖软件吧

1706
01:01:10,000 --> 01:01:13,000
我要在传上卖服务卖软件的话

1707
01:01:13,000 --> 01:01:15,000
就面临这个问题

1708
01:01:15,000 --> 01:01:16,000
我既然没有这个平台

1709
01:01:16,000 --> 01:01:19,000
我怎么跟这个平台上的软件和服务互通呢

1710
01:01:19,000 --> 01:01:25,000
那难道我要逼迫我的用户去使用一个 Linux 来操作我的平台吗

1711
01:01:25,000 --> 01:01:28,000
操作我在这个平台上面的软件吗

1712
01:01:28,000 --> 01:01:34,000
那我不如推连求一四提供一个专门用来操作服务器组件的接口

1713
01:01:34,000 --> 01:01:36,000
我觉得就是这么一个这么一个战略

1714
01:01:36,000 --> 01:01:43,000
因为我之前接触到的一些就是能说的不能说的案例

1715
01:01:43,000 --> 01:01:44,000
我有这么一个感觉就是

1716
01:01:44,000 --> 01:01:56,000
微软他想把一些现在比较流行的在 Linux 上面起源的一些服务端偏向的工具

1717
01:01:56,000 --> 01:01:57,000
弄到他平台上去

1718
01:01:57,000 --> 01:01:59,000
比如之前那是 Docker 对吧

1719
01:01:59,000 --> 01:02:04,000
但是回头一看发现

1720
01:02:04,000 --> 01:02:05,000
移不过来

1721
01:02:05,000 --> 01:02:11,000
因为 Docker 它是完全基于比如说它是基于这个一个 Linux 系统的

1722
01:02:11,000 --> 01:02:11,000
对吧

1723
01:02:11,000 --> 01:02:15,000
比如说你 Docker 的那个叫什么 Cgroups

1724
01:02:15,000 --> 01:02:18,000
只有那个内核才有的

1725
01:02:18,000 --> 01:02:20,000
然后 Docker 的客户端

1726
01:02:20,000 --> 01:02:23,000
它也是虽然能跑在 Windows 上面去

1727
01:02:23,000 --> 01:02:25,000
但是坑比较多嘛

1728
01:02:25,000 --> 01:02:31,000
然后还有就是整个这个 Docker file 里面的脚本也是基于 Bash 来写的

1729
01:02:31,000 --> 01:02:32,000
对吧

1730
01:02:32,000 --> 01:02:32,000
对

1731
01:02:32,000 --> 01:02:37,000
那么它这样的话就很不方便大家用

1732
01:02:37,000 --> 01:02:39,000
就会发现那些做后端的

1733
01:02:39,000 --> 01:02:40,000
然后还在用 Windows

1734
01:02:40,000 --> 01:02:42,000
基本上就是跑着一个虚拟机

1735
01:02:42,000 --> 01:02:45,000
或者是连到 SSH 到服务器上去操作

1736
01:02:45,000 --> 01:02:47,000
整个 Windows 的壳就可以是非常

1737
01:02:47,000 --> 01:02:49,000
就是一个显示屏幕而已

1738
01:02:49,000 --> 01:02:51,000
就整个 Windows 是一个 terminal 而已

1739
01:02:51,000 --> 01:02:52,000
对

1740
01:02:52,000 --> 01:02:55,000
但我觉得可能对它长远来看也不是特别好

1741
01:02:55,000 --> 01:02:57,000
因为包括一些新的组件啊

1742
01:02:57,000 --> 01:03:00,000
也不会说基于这种场合来考虑

1743
01:03:00,000 --> 01:03:01,000
然后对吧

1744
01:03:01,000 --> 01:03:06,000
这个毕竟微软从那个什么 Balmer 的那个 Developers

1745
01:03:06,000 --> 01:03:06,000
Developers

1746
01:03:06,000 --> 01:03:07,000
Developers

1747
01:03:07,000 --> 01:03:10,000
它还是里面上理解这件事情的

1748
01:03:10,000 --> 01:03:14,000
至少你还想经过了这个 Windows Mobile

1749
01:03:14,000 --> 01:03:16,000
这个惨痛的教训之后

1750
01:03:16,000 --> 01:03:18,000
发现没有人鸟它是多么难受的一件事

1751
01:03:18,000 --> 01:03:18,000
对吧

1752
01:03:18,000 --> 01:03:22,000
所以现在要把这些人抢回来怎么办呢

1753
01:03:22,000 --> 01:03:26,000
那只能说是那多给一点甜头咯

1754
01:03:26,000 --> 01:03:31,000
英文里面专门有一个词叫什么 Condiscenting

1755
01:03:31,000 --> 01:03:35,000
就是翻译成中文因为什么趋尊降贵的

1756
01:03:35,000 --> 01:03:39,000
降低身段来满足你这种感觉

1757
01:03:39,000 --> 01:03:44,000
这个还挺有趣的一个事

1758
01:03:44,000 --> 01:03:45,000
包括今天我们提到过的那个

1759
01:03:45,000 --> 01:03:48,000
要把 Microsoft Circle Server

1760
01:03:48,000 --> 01:03:50,000
Port 在 Windows 那边去

1761
01:03:50,000 --> 01:03:52,000
差不多也是类似的事情吧

1762
01:03:52,000 --> 01:03:53,000
对

1763
01:03:53,000 --> 01:03:57,000
所以这次这个 Bash Folder 是怎么实现的

1764
01:03:57,000 --> 01:03:58,000
对

1765
01:03:58,000 --> 01:04:00,000
就是我之前想说好吧

1766
01:04:00,000 --> 01:04:02,000
那难道不过就是一个另外一种

1767
01:04:02,000 --> 01:04:05,000
就是像什么 Sequence

1768
01:04:05,000 --> 01:04:09,000
或者是之类的那种重新编译的形式吧

1769
01:04:09,000 --> 01:04:11,000
难道不是那样的吗

1770
01:04:11,000 --> 01:04:13,000
后来才发现这一次

1771
01:04:13,000 --> 01:04:14,000
完全不是

1772
01:04:14,000 --> 01:04:14,000
对

1773
01:04:14,000 --> 01:04:15,000
阵仗还是蛮大的

1774
01:04:15,000 --> 01:04:19,000
就是它实际实现的原理居然是

1775
01:04:19,000 --> 01:04:22,000
直接把一个 Ubuntu 上面的那个 ELF

1776
01:04:22,000 --> 01:04:26,000
就是相当于 Linux 下面的 EXE 的格式

1777
01:04:26,000 --> 01:04:28,000
拿过来

1778
01:04:28,000 --> 01:04:28,000
bit for bit

1779
01:04:28,000 --> 01:04:30,000
checksum for checksum

1780
01:04:30,000 --> 01:04:31,000
run

1781
01:04:31,000 --> 01:04:32,000
就

1782
01:04:32,000 --> 01:04:33,000
a binary

1783
01:04:33,000 --> 01:04:35,000
run indirectly in Windows

1784
01:04:35,000 --> 01:04:37,000
这个还是挺好奇的

1785
01:04:37,000 --> 01:04:37,000
就

1786
01:04:37,000 --> 01:04:40,000
二进制兼容的这么一个字系统

1787
01:04:40,000 --> 01:04:40,000
没错

1788
01:04:40,000 --> 01:04:41,000
没错

1789
01:04:41,000 --> 01:04:42,000
所以它是做了一个什么

1790
01:04:42,000 --> 01:04:44,000
中间做了一个翻译层是吧

1791
01:04:44,000 --> 01:04:45,000
一个兼容层

1792
01:04:45,000 --> 01:04:50,000
好像是说它在 Windows

1793
01:04:50,000 --> 01:04:54,000
NT 的内核上面加了一个 Linux 内核

1794
01:04:54,000 --> 01:04:58,000
然后在这个内核上面暴露出了一系列

1795
01:04:58,000 --> 01:05:03,000
就是直接在二进制层面上兼容 system call 的一对 API

1796
01:05:03,000 --> 01:05:04,000
对

1797
01:05:04,000 --> 01:05:06,000
其实你看一下这个事情还是蛮神奇的

1798
01:05:06,000 --> 01:05:11,000
就是说之前有那个 Linux 上面有一个叫做 Y 的东西

1799
01:05:11,000 --> 01:05:11,000
对

1800
01:05:11,000 --> 01:05:12,000
葡萄酒那个字

1801
01:05:12,000 --> 01:05:14,000
Y is not an emulator

1802
01:05:14,000 --> 01:05:16,000
对

1803
01:05:16,000 --> 01:05:20,000
它的缩写是一个 Y 不是模拟器

1804
01:05:20,000 --> 01:05:20,000
对吧

1805
01:05:20,000 --> 01:05:21,000
对

1806
01:05:21,000 --> 01:05:25,000
但是 Y 的一个重要的功能是可以在 Linux 上面直接运行

1807
01:05:25,000 --> 01:05:29,000
不禁修改一样运行原生的 Windows 程序

1808
01:05:29,000 --> 01:05:29,000
对

1809
01:05:29,000 --> 01:05:34,000
然后等于 Windows 再会做了一个算 Line 吗

1810
01:05:34,000 --> 01:05:35,000
有人说它应该叫 Line

1811
01:05:35,000 --> 01:05:37,000
reverseLine

1812
01:05:37,000 --> 01:05:40,000
就是 Line is not a Linux emulator

1813
01:05:40,000 --> 01:05:44,000
然后它等于是我看了一下一个相关的这条介绍

1814
01:05:44,000 --> 01:05:47,000
它等于是做了一个翻译层

1815
01:05:47,000 --> 01:05:53,000
把 Linux 原生的那些 Banery 的程序

1816
01:05:53,000 --> 01:05:57,000
对 Linux kernel 的一个系统调用

1817
01:05:57,000 --> 01:06:02,000
转换成对 NT 系统的内核的调用

1818
01:06:02,000 --> 01:06:03,000
对

1819
01:06:03,000 --> 01:06:04,000
其实仔细

1820
01:06:04,000 --> 01:06:06,000
我觉得这句话说的简单

1821
01:06:06,000 --> 01:06:09,000
里面的功能量还是非常非常大

1822
01:06:09,000 --> 01:06:09,000
我看

1823
01:06:09,000 --> 01:06:11,000
这感觉好单疼

1824
01:06:11,000 --> 01:06:13,000
对啊

1825
01:06:13,000 --> 01:06:13,000
真的

1826
01:06:13,000 --> 01:06:18,000
你会想想这两个系统真是千差万别啊

1827
01:06:18,000 --> 01:06:18,000
什么

1828
01:06:18,000 --> 01:06:22,000
自幅宽度

1829
01:06:22,000 --> 01:06:23,000
什么文件系统

1830
01:06:23,000 --> 01:06:24,000
然后什么

1831
01:06:24,000 --> 01:06:27,000
还有那个 device files

1832
01:06:27,000 --> 01:06:28,000
对

1833
01:06:28,000 --> 01:06:29,000
驱动器

1834
01:06:29,000 --> 01:06:30,000
的实践

1835
01:06:30,000 --> 01:06:31,000
天

1836
01:06:31,000 --> 01:06:35,000
所以说到这个事之前我们要不得不提之前

1837
01:06:35,000 --> 01:06:36,000
那个什么中间

1838
01:06:36,000 --> 01:06:37,000
还没蔑视

1839
01:06:37,000 --> 01:06:40,000
就夭转到那个所谓的安卓的那个那个层

1840
01:06:40,000 --> 01:06:41,000
那个虚拟层

1841
01:06:41,000 --> 01:06:42,000
你还记得吗

1842
01:06:42,000 --> 01:06:43,000
当时不是说

1843
01:06:43,000 --> 01:06:44,000
我们还介绍过呢

1844
01:06:44,000 --> 01:06:45,000
对对对对

1845
01:06:45,000 --> 01:06:46,000
当时不是 Windows Mobile

1846
01:06:46,000 --> 01:06:51,000
他说要直接可以运行原生的安卓程序不经常修改

1847
01:06:51,000 --> 01:06:52,000
我觉得原理应该跟这个是差不多的

1848
01:06:52,000 --> 01:06:58,000
就提供一个安卓的这么一个一个一个一个一个 compatibility layer 嘛

1849
01:06:58,000 --> 01:06:59,000
一个一个兼容层

1850
01:06:59,000 --> 01:07:02,000
然后让安卓以为他跑到一个安卓系统上面

1851
01:07:02,000 --> 01:07:05,000
但其实背后都是由这个 Windows 的内核来实现

1852
01:07:05,000 --> 01:07:08,000
在原理上应该两个是差不多的

1853
01:07:08,000 --> 01:07:10,000
但时间肯定是差很远的

1854
01:07:10,000 --> 01:07:11,000
对

1855
01:07:11,000 --> 01:07:15,000
我觉得这一点真是微软也是吓了很多学会

1856
01:07:15,000 --> 01:07:18,000
就为了你看那个展示

1857
01:07:18,000 --> 01:07:20,000
为了扭转颓势对吧

1858
01:07:20,000 --> 01:07:20,000
对

1859
01:07:20,000 --> 01:07:22,000
你看那个演示好像很简单

1860
01:07:22,000 --> 01:07:25,000
他就是启动一个 terminal

1861
01:07:25,000 --> 01:07:28,000
然后输入一些 Linux 的命令

1862
01:07:28,000 --> 01:07:29,000
然后按回车

1863
01:07:29,000 --> 01:07:31,000
他这些命令就会执行了

1864
01:07:31,000 --> 01:07:33,000
你会觉得这有什么神奇的

1865
01:07:33,000 --> 01:07:35,000
这不是很多人都已经在做的吗

1866
01:07:35,000 --> 01:07:37,000
这你在观感上

1867
01:07:37,000 --> 01:07:41,000
他好像跟一个 SSH 或者跟一个什么 Sigwin 之类的

1868
01:07:41,000 --> 01:07:42,000
没有太大的区别

1869
01:07:42,000 --> 01:07:47,000
甚至跟什么 Github 的那个 Github command line for Windows

1870
01:07:47,000 --> 01:07:48,000
都没有太大的差别

1871
01:07:48,000 --> 01:07:53,000
但是你会想说我靠他微软在做这件事情

1872
01:07:53,000 --> 01:07:55,000
他做到了一个什么深的地步

1873
01:07:55,000 --> 01:07:58,000
然后你会觉得我靠

1874
01:07:58,000 --> 01:07:59,000
这真的是

1875
01:07:59,000 --> 01:08:01,000
微软不是以前的微软

1876
01:08:01,000 --> 01:08:10,000
但他做了这件事情之后就会挺麻烦了

1877
01:08:10,000 --> 01:08:12,000
就 Windows 上会出现三套

1878
01:08:12,000 --> 01:08:14,000
command line 的东西

1879
01:08:14,000 --> 01:08:17,000
应该是最老的那个最破的那个 DOS

1880
01:08:17,000 --> 01:08:18,000
DOS promote 对吧

1881
01:08:18,000 --> 01:08:20,000
那个叫 CMD 的那个窗口

1882
01:08:20,000 --> 01:08:24,000
然后是 Windows Vista

1883
01:08:24,000 --> 01:08:26,000
还是 Windows 7 里面出的那个叫 PowerShell

1884
01:08:26,000 --> 01:08:27,000
对

1885
01:08:27,000 --> 01:08:28,000
然后不对四套

1886
01:08:28,000 --> 01:08:29,000
然后是这个

1887
01:08:29,000 --> 01:08:31,000
这个叫 Bash for Windows

1888
01:08:31,000 --> 01:08:35,000
就是 Windows Subsystem for Linux

1889
01:08:35,000 --> 01:08:38,000
然后还有第三方做 Sigwin 那套东西

1890
01:08:38,000 --> 01:08:38,000
对

1891
01:08:38,000 --> 01:08:45,000
我觉得此时心情最复杂的应该是 PowerShell 的重度用户

1892
01:08:45,000 --> 01:08:47,000
他们会说

1893
01:08:47,000 --> 01:08:49,000
本来是皇太子

1894
01:08:49,000 --> 01:08:50,000
这样被贬出了

1895
01:08:50,000 --> 01:08:51,000
我是亲儿子

1896
01:08:51,000 --> 01:08:54,000
现在感觉好像要废了我另立太子

1897
01:08:54,000 --> 01:09:01,000
但是我觉得这类似的历史在微软的历史上已经上演了很多次了

1898
01:09:01,000 --> 01:09:03,000
什么 Sewerlite

1899
01:09:03,000 --> 01:09:04,000
对吧

1900
01:09:04,000 --> 01:09:06,000
还有什么

1901
01:09:06,000 --> 01:09:07,000
什么

1902
01:09:07,000 --> 01:09:09,000
CM 时代有一大堆

1903
01:09:09,000 --> 01:09:12,000
OLE 好像也是这样

1904
01:09:12,000 --> 01:09:13,000
也是类似一个下场

1905
01:09:13,000 --> 01:09:14,000
OLE

1906
01:09:14,000 --> 01:09:16,000
这个我当时学什么

1907
01:09:16,000 --> 01:09:19,000
学 Fox Pro 的时候还用到过这个东西

1908
01:09:19,000 --> 01:09:20,000
天

1909
01:09:20,000 --> 01:09:24,000
Fox Space 还是 Fox

1910
01:09:24,000 --> 01:09:25,000
Fox Space 吧

1911
01:09:25,000 --> 01:09:27,000
Fox Space

1912
01:09:27,000 --> 01:09:30,000
Fox Pro 是 Fox Space 的生体版

1913
01:09:30,000 --> 01:09:31,000
OK

1914
01:09:31,000 --> 01:09:35,000
Fox Pro 是不是后来在 Access 的前身

1915
01:09:35,000 --> 01:09:36,000
不是

1916
01:09:36,000 --> 01:09:37,000
两条线是吧

1917
01:09:37,000 --> 01:09:39,000
我有点记不太清楚

1918
01:09:39,000 --> 01:09:42,000
我以前不是叫 MetaFox

1919
01:09:42,000 --> 01:09:44,000
然后如果在 IRC 上

1920
01:09:44,000 --> 01:09:48,000
IRC 的客户端不是会让你填一个用户名

1921
01:09:48,000 --> 01:09:50,000
然后还让你填另外一个

1922
01:09:50,000 --> 01:09:53,000
就是说如果你的你选的用户名被占用了

1923
01:09:53,000 --> 01:09:54,000
另外一个用户名是什么

1924
01:09:54,000 --> 01:09:57,000
然后我在那个用户名里面就会写

1925
01:09:57,000 --> 01:09:59,000
填 MetaFox Pro

1926
01:09:59,000 --> 01:10:01,000
哈哈哈哈哈哈哈哈

1927
01:10:01,000 --> 01:10:02,000
哈哈哈哈哈哈

1928
01:10:02,000 --> 01:10:05,000
哈哈哈哈

1929
01:10:05,000 --> 01:10:06,000
自以为很妙的梗

1930
01:10:06,000 --> 01:10:09,000
挺好的挺好的

1931
01:10:09,000 --> 01:10:11,000
所以我觉得对

1932
01:10:11,000 --> 01:10:13,000
powershell 的用户们也不用太伤心

1933
01:10:13,000 --> 01:10:16,000
因为你既然入了微软的门

1934
01:10:16,000 --> 01:10:17,000
你就要不停的学习

1935
01:10:17,000 --> 01:10:18,000
对吧

1936
01:10:18,000 --> 01:10:19,000
那其实在 Links 世界里面

1937
01:10:19,000 --> 01:10:22,000
也是一天到晚就要不停的学习

1938
01:10:22,000 --> 01:10:25,000
而且微软方面至少会给你一个战略说好吧

1939
01:10:25,000 --> 01:10:27,000
这个东西是我们接下来一段时间的重点

1940
01:10:27,000 --> 01:10:29,000
不管信不信他至少会说这句话

1941
01:10:29,000 --> 01:10:31,000
可是在 Links 世界里面可能

1942
01:10:31,000 --> 01:10:34,000
哗明天忽然 Hacker News 上面出了一个头条

1943
01:10:34,000 --> 01:10:35,000
你就会发现

1944
01:10:35,000 --> 01:10:36,000
握靠

1945
01:10:36,000 --> 01:10:37,000
这玩意不学不行

1946
01:10:37,000 --> 01:10:39,000
对

1947
01:10:39,000 --> 01:10:42,000
所以其实在哪家都不容易

1948
01:10:42,000 --> 01:10:44,000
这个还是好的

1949
01:10:44,000 --> 01:10:51,000
以后就说指望着我们在 Linux 上面和 Mac 上面用的比较熟手的一些工具

1950
01:10:51,000 --> 01:10:53,000
可以直接在 Windows 上面跑了吗

1951
01:10:53,000 --> 01:10:54,000
对

1952
01:10:54,000 --> 01:10:55,000
比如说不是有个笑话吗

1953
01:10:55,000 --> 01:10:59,000
说那个以前 RM-RF

1954
01:10:59,000 --> 01:11:05,000
新这个这个这个这个 Trick 只能骗一骗小白

1955
01:11:05,000 --> 01:11:08,000
现在握靠所有的 Windows 用户可以真的执行了

1956
01:11:08,000 --> 01:11:09,000
哈哈哈哈哈哈

1957
01:11:09,000 --> 01:11:12,000
哈哈哈哈哈哈哈哈

1958
01:11:12,000 --> 01:11:14,000
对这个不错这个不错

1959
01:11:14,000 --> 01:11:17,000
到时候应该做一个什么点憋梯是吧

1960
01:11:17,000 --> 01:11:20,000
诶等一下他需要可以直接直接导笑的文件了

1961
01:11:20,000 --> 01:11:22,000
可以双击就执行的

1962
01:11:22,000 --> 01:11:23,000
他权限怎么办呢

1963
01:11:23,000 --> 01:11:24,000
好好起啊

1964
01:11:24,000 --> 01:11:25,000
嗯

1965
01:11:25,000 --> 01:11:26,000
不知道

1966
01:11:26,000 --> 01:11:29,000
我其实看了这个新闻之后我从来没有用过它

1967
01:11:29,000 --> 01:11:32,000
就我理论上我是可以重新启动到 Windows 里面

1968
01:11:32,000 --> 01:11:34,000
然后装一个然后试一试

1969
01:11:34,000 --> 01:11:37,000
但是你为什么做这么蛋疼的事情

1970
01:11:37,000 --> 01:11:38,000
嗯对

1971
01:11:38,000 --> 01:11:43,000
我能重新启动到 Windows 里面打新院的游戏的这件事情都没有做过

1972
01:11:43,000 --> 01:11:44,000
嗯

1973
01:11:44,000 --> 01:11:47,000
装一个 bash 字系统

1974
01:11:47,000 --> 01:11:53,000
不过 Mac 上面的也其实后多后少有一丢丢这种问题吧

1975
01:11:53,000 --> 01:11:55,000
因为 Mac 它毕竟不是 Linux 嘛

1976
01:11:55,000 --> 01:11:56,000
它是一个 BSD 的系统嘛

1977
01:11:56,000 --> 01:11:58,000
嗯嗯然后

1978
01:11:58,000 --> 01:12:02,000
对有些命令在你你从那个如果你是你读了

1979
01:12:02,000 --> 01:12:04,000
它不是 Gnu 那套东西吗

1980
01:12:04,000 --> 01:12:07,000
很火的那本书什么 Copy and Paste from Slack Overflow

1981
01:12:07,000 --> 01:12:15,000
最近 Twitter 上的那个 meme 就是一堆程序员在贴各种各样的被篡改的 Auralee 的书名

1982
01:12:15,000 --> 01:12:16,000
你有注意到吗

1983
01:12:16,000 --> 01:12:17,000
我看待了

1984
01:12:17,000 --> 01:12:18,000
看待了

1985
01:12:18,000 --> 01:12:21,000
对什么 how to complain the customer

1986
01:12:21,000 --> 01:12:25,000
或者是什么 how to copy and paste from Slack Overflow

1987
01:12:25,000 --> 01:12:30,000
中国也有一系列什么 C++从入门到放弃

1988
01:12:30,000 --> 01:12:35,000
之类的

1989
01:12:35,000 --> 01:12:40,000
哎你还别说我真的是看完实际上那个那个大部头真的看完就放弃了

1990
01:12:40,000 --> 01:12:45,000
我是初中的时候读了有什么 21 天精通私家家

1991
01:12:45,000 --> 01:12:48,000
我就我搞了这一辈子都不要再学此

1992
01:12:48,000 --> 01:12:56,000
对你会觉得这科系它那个叫什么内生的复杂度已经这样了还了得

1993
01:12:56,000 --> 01:12:57,000
对

1994
01:12:57,000 --> 01:13:03,000
然后对说回这个就是你会觉得你会发现在 Stag Overflow 上

1995
01:13:03,000 --> 01:13:08,000
Copy and Paste 下来的命令在这个 Mac 上面很有可能是用不了的

1996
01:13:08,000 --> 01:13:10,000
因为有很多东西都不一样

1997
01:13:10,000 --> 01:13:13,000
然后 Stag Overflow 很多问题就是什么

1998
01:13:13,000 --> 01:13:19,000
比如说我想要找到一个巧妙的方法来 one line 解决一个特定的文本处理的问题

1999
01:13:19,000 --> 01:13:27,000
然后什么但凡涉及到 Sed 或者是什么 Grap 之类的 one liner

2000
01:13:27,000 --> 01:13:32,000
那个 Stag Overflow 上最高的答案下面肯定会有一代代人评论说

2001
01:13:32,000 --> 01:13:34,000
这个在 Mac 上面跑不了

2002
01:13:34,000 --> 01:13:38,000
然后要么是原打主要么是那个下面的评论者就会说

2003
01:13:38,000 --> 01:13:42,000
好吧这个是一个就是这个如果你写这么写的话

2004
01:13:42,000 --> 01:13:45,000
就给出另外一个方案说这样应该是在所有平台上都可以跑

2005
01:13:45,000 --> 01:13:49,000
或者给出一个 Mac 特定的版本这个就很淡淡

2006
01:13:49,000 --> 01:13:55,000
嗯嗯但就像那些命令行工具有些还可以就想办法兼容一下

2007
01:13:55,000 --> 01:13:58,000
或者是出出格式命令行参数不太一样可以整一整

2008
01:13:58,000 --> 01:14:01,000
但有些东西是内核级别的就没法弄了

2009
01:14:01,000 --> 01:14:03,000
就是说对吧又收回那个 Docker

2010
01:14:03,000 --> 01:14:08,000
Docker 是没办法在原生在 BSD 上跑的

2011
01:14:08,000 --> 01:14:10,000
因为它寄 Inxt-C Groups

2012
01:14:10,000 --> 01:14:12,000
其实这个 BSD 也比较冤

2013
01:14:12,000 --> 01:14:17,000
因为 BSD 上面其实 JAL 出现的要比 Docker 要早很多

2014
01:14:17,000 --> 01:14:18,000
但是没办法

2015
01:14:18,000 --> 01:14:22,000
这个是毕竟是什么小众没人爱

2016
01:14:22,000 --> 01:14:23,000
就没人开发

2017
01:14:23,000 --> 01:14:26,000
没有 Google 在前面推哪有后面的这些事

2018
01:14:26,000 --> 01:14:27,000
对吧

2019
01:14:27,000 --> 01:14:29,000
天命不在此没办法

2020
01:14:29,000 --> 01:14:30,000
对

2021
01:14:30,000 --> 01:14:35,000
但是我觉得这件事情其实对于 Mac 用户的影响

2022
01:14:35,000 --> 01:14:38,000
对于 Mac 也有一定的影响

2023
01:14:38,000 --> 01:14:40,000
可能会有一批开发者

2024
01:14:40,000 --> 01:14:44,000
他受购了 Mac 然后转回去 Windows

2025
01:14:44,000 --> 01:14:44,000
对

2026
01:14:44,000 --> 01:14:48,000
或者反过来说他一直想要买个 Mac

2027
01:14:48,000 --> 01:14:52,000
就是因为想要获得操纵服务器的

2028
01:14:52,000 --> 01:14:53,000
便捷

2029
01:14:53,000 --> 01:14:55,000
interoperability

2030
01:14:55,000 --> 01:14:59,000
然后但是他又不喜欢 Mac 这一套

2031
01:14:59,000 --> 01:15:00,000
对吧

2032
01:15:00,000 --> 01:15:01,000
你在切换到 Mac 的时候

2033
01:15:01,000 --> 01:15:03,000
有一堆使用习惯要转换的

2034
01:15:03,000 --> 01:15:05,000
他只是想要用那个命令行而已

2035
01:15:05,000 --> 01:15:05,000
对吧

2036
01:15:05,000 --> 01:15:07,000
他现在有一个全新的选择

2037
01:15:07,000 --> 01:15:09,000
就是直接装一个 Linx Subsystem

2038
01:15:09,000 --> 01:15:11,000
也是蛮爽

2039
01:15:11,000 --> 01:15:12,000
没错

2040
01:15:12,000 --> 01:15:13,000
对

2041
01:15:13,000 --> 01:15:15,000
这个坑不知道有多深

2042
01:15:15,000 --> 01:15:17,000
大家自己慢慢去踩吧

2043
01:15:17,000 --> 01:15:18,000
对

2044
01:15:18,000 --> 01:15:22,000
可能会影响 Mac 的销量

2045
01:15:22,000 --> 01:15:24,000
这个倒不至于

2046
01:15:24,000 --> 01:15:26,000
先来看一季度的

2047
01:15:26,000 --> 01:15:29,000
今年一季度的 PC 的销量是

2048
01:15:29,000 --> 01:15:31,000
出货量下降到百分之九点几吧

2049
01:15:31,000 --> 01:15:34,000
应该是到了十年前的水平了

2050
01:15:34,000 --> 01:15:35,000
OK

2051
01:15:35,000 --> 01:15:40,000
然后好像增长的也就是 Mac 和每一家我忘了

2052
01:15:40,000 --> 01:15:44,000
所以其实现在我们很多人用 Mac

2053
01:15:44,000 --> 01:15:47,000
他也像我们这种还是用另一行的就开发者了

2054
01:15:47,000 --> 01:15:48,000
其他人用的也少了

2055
01:15:48,000 --> 01:15:49,000
好吧

2056
01:15:49,000 --> 01:15:54,000
可能对开发者对开发者购买的机器的数量

2057
01:15:54,000 --> 01:15:57,000
应该对于总销量的影响不会特别大

2058
01:15:57,000 --> 01:15:58,000
对对

2059
01:15:58,000 --> 01:16:02,000
所以看吧

2060
01:16:02,000 --> 01:16:06,000
还挺期待今年 WDX 上那个 Mac 会到底整什么腰

2061
01:16:06,000 --> 01:16:07,000
不是说要改名了吗

2062
01:16:07,000 --> 01:16:08,000
要改名叫 macOS 吗

2063
01:16:08,000 --> 01:16:09,000
macOS

2064
01:16:09,000 --> 01:16:10,000
macOS

2065
01:16:10,000 --> 01:16:10,000
有可能

2066
01:16:10,000 --> 01:16:11,000
macOS

2067
01:16:11,000 --> 01:16:11,000
有可能

2068
01:16:11,000 --> 01:16:12,000
macOS

2069
01:16:12,000 --> 01:16:14,000
我觉得 macOS 挺好

2070
01:16:14,000 --> 01:16:15,000
macOS 的名字挺好的

2071
01:16:15,000 --> 01:16:16,000
macOS

2072
01:16:16,000 --> 01:16:17,000
就把那个 X 去掉了吗

2073
01:16:17,000 --> 01:16:20,000
对回归到早期的那个

2074
01:16:20,000 --> 01:16:24,000
半个机器半个人脸的那个

2075
01:16:24,000 --> 01:16:29,000
因为那个 X 我老是想着它是 10 嘛

2076
01:16:29,000 --> 01:16:29,000
对吧

2077
01:16:29,000 --> 01:16:31,000
罗马数字的 10

2078
01:16:31,000 --> 01:16:34,000
但是马上要出 11 了的话怎么办呢

2079
01:16:34,000 --> 01:16:35,000
对

2080
01:16:35,000 --> 01:16:36,000
已经是 11 了吧

2081
01:16:36,000 --> 01:16:39,000
我们现在是 10.11 对不对

2082
01:16:39,000 --> 01:16:41,000
10.11 啊

2083
01:16:41,000 --> 01:16:42,000
那个 X

2084
01:16:42,000 --> 01:16:43,000
10 还是不动的

2085
01:16:43,000 --> 01:16:44,000
代表主完美好

2086
01:16:44,000 --> 01:16:47,000
所以前面那个 version 10 其实已经没有什么本质的意义了

2087
01:16:47,000 --> 01:16:48,000
就可以直接拿掉了嘛

2088
01:16:48,000 --> 01:16:49,000
对

2089
01:16:49,000 --> 01:16:51,000
所以那个 X 也没有

2090
01:16:51,000 --> 01:16:52,000
不断进化就可以了

2091
01:16:52,000 --> 01:16:54,000
就像 Windows 一直叫 Windows 其实也挺好

2092
01:16:54,000 --> 01:16:56,000
没有啊

2093
01:16:56,000 --> 01:16:56,000
还有 Windows 6

2094
01:16:56,000 --> 01:16:57,000
7

2095
01:16:57,000 --> 01:16:57,000
没有 6

2096
01:16:57,000 --> 01:16:57,000
7

2097
01:16:57,000 --> 01:17:00,000
如果 Windows 一直叫 Windows 的话

2098
01:17:00,000 --> 01:17:02,000
Windows 的整个命名就是

2099
01:17:02,000 --> 01:17:03,000
对

2100
01:17:03,000 --> 01:17:06,000
那个 Windows 10 不也说是最后一个大版本吗

2101
01:17:06,000 --> 01:17:07,000
对

2102
01:17:07,000 --> 01:17:07,000
是这样

2103
01:17:07,000 --> 01:17:09,000
那以后就没有 Windows 10

2104
01:17:09,000 --> 01:17:11,000
他们应该叫 10 点几吧

2105
01:17:11,000 --> 01:17:12,000
我估计

2106
01:17:12,000 --> 01:17:13,000
会叫上一阵子

2107
01:17:13,000 --> 01:17:14,000
应该会

2108
01:17:14,000 --> 01:17:16,000
就直接就

2109
01:17:16,000 --> 01:17:18,000
其实像用户隐藏

2110
01:17:18,000 --> 01:17:19,000
隐瞒版本号嘛

2111
01:17:19,000 --> 01:17:21,000
就是我一直在用最新版本的 Windows

2112
01:17:21,000 --> 01:17:22,000
嗯哼

2113
01:17:22,000 --> 01:17:27,000
然后只有你在需要知道的时候才会像什么去看 Chrome 当前的版本号

2114
01:17:27,000 --> 01:17:30,000
然后去看是一个一串数字

2115
01:17:30,000 --> 01:17:30,000
真是

2116
01:17:30,000 --> 01:17:35,000
我觉得微软做这件事情是其实是挺挺挺麻烦的挺难的

2117
01:17:36,000 --> 01:17:37,000
它要兼容的系统太多了

2118
01:17:37,000 --> 01:17:39,000
就是大家都用最新版

2119
01:17:39,000 --> 01:17:44,000
因为它要做的那个兼容性测试的那个数量级不是别人可以比的

2120
01:17:44,000 --> 01:17:45,000
好吧

2121
01:17:45,000 --> 01:17:46,000
历史包袱太重

2122
01:17:46,000 --> 01:17:49,000
但各种各样奇怪的机型组合兼容机对吧

2123
01:17:49,000 --> 01:17:50,000
没法弄

2124
01:17:50,000 --> 01:17:51,000
对

2125
01:17:51,000 --> 01:17:53,000
测试都做了

2126
01:17:53,000 --> 01:17:54,000
说到 MacBook

2127
01:17:54,000 --> 01:17:57,000
那个最新的那个 RetinaMacBook 你要买吗

2128
01:17:57,000 --> 01:17:59,000
就打算买啊

2129
01:17:59,000 --> 01:18:01,000
但是现在有点纠结它那个

2130
01:18:01,000 --> 01:18:03,000
是买给你自己还是买给你了

2131
01:18:03,000 --> 01:18:05,000
我自己它已经有一个上一代的那个那个了

2132
01:18:05,000 --> 01:18:07,000
就它够用了

2133
01:18:07,000 --> 01:18:09,000
难道不是你买新的给它用

2134
01:18:09,000 --> 01:18:10,000
然后它把那个淘汰给你用

2135
01:18:10,000 --> 01:18:14,000
不是应该各自独立升级吗

2136
01:18:14,000 --> 01:18:15,000
OK

2137
01:18:15,000 --> 01:18:18,000
你们的婚姻关系还是比较正常的

2138
01:18:18,000 --> 01:18:21,000
没有剥削关系是吧

2139
01:18:21,000 --> 01:18:27,000
那个最新款的那个有一个比较纠结的事情就是

2140
01:18:27,000 --> 01:18:30,000
我不知道到底能不能接一个 4 K 的显示器

2141
01:18:30,000 --> 01:18:32,000
然后跑 60 赫兹的刷新率

2142
01:18:32,000 --> 01:18:34,000
那我看了一下

2143
01:18:34,000 --> 01:18:39,000
这苹果官方的那个 TechSpec 下面说是最多到 30 赫兹的

2144
01:18:39,000 --> 01:18:39,000
就 4 K 的话

2145
01:18:39,000 --> 01:18:41,000
但是

2146
01:18:41,000 --> 01:18:42,000
4 K 是 30 赫兹

2147
01:18:42,000 --> 01:18:43,000
但是我看那个

2148
01:18:43,000 --> 01:18:45,000
你接 4 K 是拿来干嘛的

2149
01:18:45,000 --> 01:18:48,000
不因为那个 MacBook 屏幕只有 12 寸嘛

2150
01:18:48,000 --> 01:18:50,000
而且那个比较小嘛

2151
01:18:50,000 --> 01:18:53,000
你也不可能把那个作为主屏来用

2152
01:18:53,000 --> 01:18:55,000
虽然也凑合其实

2153
01:18:55,000 --> 01:18:56,000
但是你想用的舒服一点

2154
01:18:56,000 --> 01:18:59,000
你还想接一个外接的大屏幕

2155
01:18:59,000 --> 01:19:02,000
然后把它就 dock 到那里比较方便一些了

2156
01:19:02,000 --> 01:19:05,000
就我想买它纯粹是因为出差的时候

2157
01:19:05,000 --> 01:19:07,000
它比较轻便好戴

2158
01:19:07,000 --> 01:19:08,000
但在家的时候

2159
01:19:08,000 --> 01:19:11,000
我还是想用一个大屏幕

2160
01:19:11,000 --> 01:19:12,000
比较看起来舒服一些

2161
01:19:12,000 --> 01:19:14,000
这样的话就会有这个需求

2162
01:19:14,000 --> 01:19:17,000
就是我想要一个 retina 的外接的

2163
01:19:17,000 --> 01:19:18,000
至少是 1080 p 的屏幕

2164
01:19:18,000 --> 01:19:19,000
就 4 K 屏嘛

2165
01:19:19,000 --> 01:19:21,000
但是 4 K 屏现在 MacBook

2166
01:19:21,000 --> 01:19:24,000
它那个不是只有一个 USB-C 口输出吗

2167
01:19:24,000 --> 01:19:29,000
苹果目前官方的转接头只有两种是可以输出视频的

2168
01:19:29,000 --> 01:19:32,000
一个是 USB 转 HDMI

2169
01:19:32,000 --> 01:19:34,000
一个是 USB 转 VGA

2170
01:19:34,000 --> 01:19:36,000
VGA 显然不可能上 4 K 了

2171
01:19:36,000 --> 01:19:37,000
这个就不用想了

2172
01:19:37,000 --> 01:19:38,000
HDMI 能上

2173
01:19:38,000 --> 01:19:42,000
但是我看一下它的官方标称支持到 30 赫兹的刷新率

2174
01:19:42,000 --> 01:19:45,000
就会有一点卡的感觉

2175
01:19:45,000 --> 01:19:49,000
我觉得如果你是做文本处理或者是展示的话

2176
01:19:49,000 --> 01:19:49,000
30 赫兹的刷新率

2177
01:19:49,000 --> 01:19:50,000
就还可以凑合是吧

2178
01:19:50,000 --> 01:19:52,000
除非你要看视频

2179
01:19:52,000 --> 01:19:53,000
那的确

2180
01:19:53,000 --> 01:19:55,000
看视频其实不用

2181
01:19:55,000 --> 01:19:58,000
大部分视频就只有 24 赫兹

2182
01:19:58,000 --> 01:19:59,000
对啊

2183
01:19:59,000 --> 01:20:00,000
那其实反而没有这个问题

2184
01:20:00,000 --> 01:20:02,000
打 LZ 是个问题

2185
01:20:02,000 --> 01:20:04,000
但是 MacBook 也不可能打

2186
01:20:04,000 --> 01:20:05,000
对它玩游戏不太现实

2187
01:20:05,000 --> 01:20:06,000
但是那个

2188
01:20:06,000 --> 01:20:08,000
就是滚屏的时候

2189
01:20:08,000 --> 01:20:10,000
它那个就是所谓 smoothness

2190
01:20:10,000 --> 01:20:11,000
OK

2191
01:20:11,000 --> 01:20:12,000
就会成问题了

2192
01:20:12,000 --> 01:20:13,000
有的有的

2193
01:20:13,000 --> 01:20:15,000
就是你在刷网页的时候

2194
01:20:15,000 --> 01:20:16,000
总会感觉到它在卡

2195
01:20:16,000 --> 01:20:17,000
对对

2196
01:20:17,000 --> 01:20:20,000
还是包括你那个光标的那个移动

2197
01:20:20,000 --> 01:20:21,000
也感觉是一卡一卡的

2198
01:20:21,000 --> 01:20:23,000
对

2199
01:20:23,000 --> 01:20:25,000
所以这个这是一个挺糟糕的事

2200
01:20:25,000 --> 01:20:27,000
但是我后来去查了那个

2201
01:20:27,000 --> 01:20:28,000
Intel 的那个官方的文档

2202
01:20:28,000 --> 01:20:31,000
MacBook 里面搭载的那个叫

2203
01:20:31,000 --> 01:20:35,000
Intel HD Graphics 515 的版在能 IGP

2204
01:20:35,000 --> 01:20:39,000
它是支持 4 K 输出的

2205
01:20:39,000 --> 01:20:42,000
用那个 DisplayPort 的这个一个接口

2206
01:20:42,000 --> 01:20:48,000
然后我看那个 Apple 的官方的那个 Text Pack 也说

2207
01:20:48,000 --> 01:20:52,000
这个 USB-C 口是支持原生 DisplayPort 输出的

2208
01:20:52,000 --> 01:20:56,000
我好像看到一个一转四的接口

2209
01:20:56,000 --> 01:20:58,000
就是一边是 USB-C

2210
01:20:58,000 --> 01:21:01,000
另外一边是 USB-A 的接口

2211
01:21:01,000 --> 01:21:02,000
一个电源口

2212
01:21:02,000 --> 01:21:05,000
一个 HDMI 口和一个 CenterPort 的口

2213
01:21:05,000 --> 01:21:06,000
就是 DisplayPort 的口

2214
01:21:06,000 --> 01:21:08,000
有可能

2215
01:21:08,000 --> 01:21:10,000
有这种转接头吗

2216
01:21:10,000 --> 01:21:12,000
还是我记错的

2217
01:21:12,000 --> 01:21:14,000
第四种并不是第四种

2218
01:21:14,000 --> 01:21:14,000
而是另外一种

2219
01:21:14,000 --> 01:21:16,000
肯定不是苹果官方的

2220
01:21:16,000 --> 01:21:16,000
反正

2221
01:21:16,000 --> 01:21:18,000
好吧

2222
01:21:18,000 --> 01:21:21,000
反正就是说现在官方没有一个 USB-C

2223
01:21:21,000 --> 01:21:24,000
转 DisplayPort 输出的这么一个接口

2224
01:21:24,000 --> 01:21:27,000
那么也就是说

2225
01:21:27,000 --> 01:21:29,000
即便我有一个 4 K 显示器

2226
01:21:29,000 --> 01:21:31,000
我也接不上去

2227
01:21:31,000 --> 01:21:33,000
就接不到 60 赫兹

2228
01:21:33,000 --> 01:21:35,000
没有 DisplayPort 输出

2229
01:21:35,000 --> 01:21:39,000
这确是个挺严重的问题

2230
01:21:39,000 --> 01:21:41,000
对啊

2231
01:21:41,000 --> 01:21:44,000
所以正在纠结是要买这个呢

2232
01:21:44,000 --> 01:21:47,000
还是等今年的更新的 MacBook Pro

2233
01:21:47,000 --> 01:21:51,000
我肯定是要等更新的 MacBook Pro

2234
01:21:51,000 --> 01:21:53,000
因为便携性对于我来说

2235
01:21:53,000 --> 01:21:54,000
不是一个特别大的诉求

2236
01:21:54,000 --> 01:21:55,000
其实我觉得

2237
01:21:55,000 --> 01:21:56,000
你不带出去是吧

2238
01:21:56,000 --> 01:21:59,000
其实我觉得你说你出差的时候

2239
01:21:59,000 --> 01:22:00,000
需要一定的便携性

2240
01:22:00,000 --> 01:22:01,000
但是我想请问说

2241
01:22:01,000 --> 01:22:03,000
你出差又不是徒步对吧

2242
01:22:03,000 --> 01:22:05,000
你电脑也是放在包里

2243
01:22:05,000 --> 01:22:07,000
然后上车就放在旁边

2244
01:22:07,000 --> 01:22:10,000
然后到酒店去酒店的过程

2245
01:22:10,000 --> 01:22:12,000
你也会坐车什么的

2246
01:22:12,000 --> 01:22:14,000
你不是一直背在身上

2247
01:22:14,000 --> 01:22:15,000
为什么那么强调重量

2248
01:22:15,000 --> 01:22:18,000
因为就是要一直背在身上

2249
01:22:18,000 --> 01:22:20,000
你不是靠自己

2250
01:22:20,000 --> 01:22:23,000
你不需要背在身上一直走路

2251
01:22:23,000 --> 01:22:24,000
还是你真的有这个需求

2252
01:22:24,000 --> 01:22:28,000
那我又不是一直就是开车出行

2253
01:22:28,000 --> 01:22:30,000
打车有时候要等一下吧

2254
01:22:30,000 --> 01:22:31,000
还要上下楼什么的

2255
01:22:31,000 --> 01:22:35,000
就是能轻便肯定是一个更好的

2256
01:22:35,000 --> 01:22:36,000
一个属性嘛

2257
01:22:36,000 --> 01:22:37,000
你太瘦了

2258
01:22:37,000 --> 01:22:41,000
应该练得壮的一点

2259
01:22:41,000 --> 01:22:42,000
这个就解决了

2260
01:22:42,000 --> 01:22:43,000
应该去健身了

2261
01:22:43,000 --> 01:22:47,000
我是觉得

2262
01:22:47,000 --> 01:22:49,000
我是个人没有体会到

2263
01:22:49,000 --> 01:22:51,000
带一台比较轻的电脑

2264
01:22:51,000 --> 01:22:54,000
和一台和我现在这台 MacBook Pro

2265
01:22:54,000 --> 01:22:55,000
之间有什么本质上的区别

2266
01:22:55,000 --> 01:22:56,000
因为我之前我带过

2267
01:22:56,000 --> 01:22:58,000
我太太那台出去出国

2268
01:22:58,000 --> 01:22:59,000
才试过一次

2269
01:22:59,000 --> 01:23:00,000
感觉真的挺好的

2270
01:23:00,000 --> 01:23:00,000
对吧

2271
01:23:00,000 --> 01:23:01,000
现在我又没有什么

2272
01:23:01,000 --> 01:23:06,000
特别计算能力的要求

2273
01:23:06,000 --> 01:23:08,000
所以性能上应该还好

2274
01:23:08,000 --> 01:23:09,000
主要就是说

2275
01:23:09,000 --> 01:23:10,000
外接屏幕这件事情

2276
01:23:10,000 --> 01:23:12,000
确实是一个很大的挑战

2277
01:23:12,000 --> 01:23:13,000
OK

2278
01:23:13,000 --> 01:23:15,000
但还有一个方案就是说

2279
01:23:15,000 --> 01:23:16,000
那就不要买这个了

2280
01:23:16,000 --> 01:23:18,000
买个什么 iPad 出差用

2281
01:23:18,000 --> 01:23:19,000
因为出差大部分时候

2282
01:23:19,000 --> 01:23:20,000
看东西

2283
01:23:20,000 --> 01:23:21,000
我觉得你们商务人士

2284
01:23:21,000 --> 01:23:23,000
好像没有什么太多的

2285
01:23:23,000 --> 01:23:25,000
使用全尺寸键盘的需求

2286
01:23:25,000 --> 01:23:27,000
我反正出门要买

2287
01:23:27,000 --> 01:23:28,000
其实不是的

2288
01:23:28,000 --> 01:23:29,000
要写很多邮件

2289
01:23:29,000 --> 01:23:31,000
好吧

2290
01:23:31,000 --> 01:23:32,000
蓝牙键盘就带

2291
01:23:32,000 --> 01:23:34,000
带那个键盘的 cover

2292
01:23:34,000 --> 01:23:34,000
对

2293
01:23:34,000 --> 01:23:36,000
这个我也有考虑过

2294
01:23:36,000 --> 01:23:36,000
用一个 iPad

2295
01:23:36,000 --> 01:23:38,000
然后配一个无线键盘

2296
01:23:38,000 --> 01:23:39,000
或者自己买那个 iPad Pro

2297
01:23:39,000 --> 01:23:40,000
然后带那个

2298
01:23:40,000 --> 01:23:41,000
那个 Apple 什么

2299
01:23:41,000 --> 01:23:42,000
Smart Keyboard

2300
01:23:42,000 --> 01:23:43,000
那个东西

2301
01:23:43,000 --> 01:23:45,000
我去店里设了一下

2302
01:23:45,000 --> 01:23:49,000
那个手感还是差一些

2303
01:23:49,000 --> 01:23:50,000
最关键的是

2304
01:23:50,000 --> 01:23:52,000
在飞机的

2305
01:23:52,000 --> 01:23:55,000
就它能不能放在膝盖上用

2306
01:23:55,000 --> 01:23:57,000
因为它重心不对

2307
01:23:57,000 --> 01:23:57,000
对

2308
01:23:57,000 --> 01:23:59,000
只能放在一个板上用

2309
01:23:59,000 --> 01:24:00,000
放板上的话

2310
01:24:00,000 --> 01:24:01,000
就会有一个问题

2311
01:24:01,000 --> 01:24:03,000
就是比如说你在飞机的

2312
01:24:03,000 --> 01:24:03,000
那个经济舱

2313
01:24:03,000 --> 01:24:04,000
对吧

2314
01:24:04,000 --> 01:24:05,000
我们这还是只能做经济舱

2315
01:24:05,000 --> 01:24:07,000
后面

2316
01:24:07,000 --> 01:24:09,000
放起来会有点坑

2317
01:24:09,000 --> 01:24:11,000
然后

2318
01:24:11,000 --> 01:24:14,000
那个键盘也没那么方便

2319
01:24:14,000 --> 01:24:16,000
所以我现在挺纠结

2320
01:24:16,000 --> 01:24:17,000
到底到底要怎么办

2321
01:24:17,000 --> 01:24:19,000
有机会有 iPad Pro

2322
01:24:19,000 --> 01:24:19,000
这故事告诉我们

2323
01:24:19,000 --> 01:24:20,000
如果想用

2324
01:24:20,000 --> 01:24:21,000
如果想好好的用 Tablet

2325
01:24:21,000 --> 01:24:23,000
请每次飞行都买商务上

2326
01:24:23,000 --> 01:24:27,000
没错

2327
01:24:27,000 --> 01:24:28,000
就会好

2328
01:24:28,000 --> 01:24:30,000
会好很多体验

2329
01:24:30,000 --> 01:24:30,000
对

2330
01:24:30,000 --> 01:24:32,000
键盘体验不好怎么办

2331
01:24:32,000 --> 01:24:33,000
请买商务上

2332
01:24:33,000 --> 01:24:34,000
但软件也是一个问题啊

2333
01:24:34,000 --> 01:24:35,000
就是经常

2334
01:24:35,000 --> 01:24:37,000
我其实想尝试很久

2335
01:24:37,000 --> 01:24:39,000
用那个 iPad 来做一些办公的东西

2336
01:24:39,000 --> 01:24:41,000
但是你发现用一圈

2337
01:24:41,000 --> 01:24:42,000
有一些这种

2338
01:24:42,000 --> 01:24:44,000
基本的文档处理

2339
01:24:44,000 --> 01:24:47,000
还是很不方便的

2340
01:24:47,000 --> 01:24:48,000
在市场的软件

2341
01:24:48,000 --> 01:24:50,000
在一台纯粹

2342
01:24:50,000 --> 01:24:52,000
Tablet 上用还是比较单的

2343
01:24:52,000 --> 01:24:54,000
主要是没有光标

2344
01:24:54,000 --> 01:24:55,000
然后你要操作

2345
01:24:55,000 --> 01:24:57,000
比如说一个电子表格的话

2346
01:24:57,000 --> 01:24:58,000
你就挺惨了

2347
01:24:58,000 --> 01:24:58,000
一直要在这里

2348
01:24:58,000 --> 01:24:59,000
拿起来

2349
01:24:59,000 --> 01:25:00,000
抹屏幕放下去

2350
01:25:00,000 --> 01:25:02,000
拿起来抹屏幕放下去

2351
01:25:02,000 --> 01:25:03,000
对

2352
01:25:03,000 --> 01:25:03,000
因为这个时候

2353
01:25:03,000 --> 01:25:05,000
一定有听众会跳出来说

2354
01:25:05,000 --> 01:25:06,000
谁让你不买 Surface

2355
01:25:06,000 --> 01:25:06,000
对吧

2356
01:25:06,000 --> 01:25:07,000
Surface 没这个问题

2357
01:25:07,000 --> 01:25:09,000
Surface 最后

2358
01:25:09,000 --> 01:25:10,000
是被黑得很惨的

2359
01:25:10,000 --> 01:25:12,000
那是做工的问题吧

2360
01:25:12,000 --> 01:25:14,000
那品控不好

2361
01:25:14,000 --> 01:25:14,000
但在用户交互上

2362
01:25:14,000 --> 01:25:15,000
对

2363
01:25:15,000 --> 01:25:17,000
但在用户交互上

2364
01:25:17,000 --> 01:25:18,000
我觉得 Surface 的

2365
01:25:18,000 --> 01:25:20,000
就如果你习惯了

2366
01:25:20,000 --> 01:25:21,000
摊一套的话

2367
01:25:21,000 --> 01:25:22,000
其实还是很舒服

2368
01:25:22,000 --> 01:25:23,000
Surfacebook

2369
01:25:23,000 --> 01:25:24,000
我同时买了一个

2370
01:25:24,000 --> 01:25:25,000
然后我用了一下

2371
01:25:25,000 --> 01:25:27,000
我觉得不太好

2372
01:25:27,000 --> 01:25:31,000
其实我也是去店里面摸了那个

2373
01:25:31,000 --> 01:25:34,000
我之前不是那个 Surfacebook 出来的时候

2374
01:25:34,000 --> 01:25:35,000
咱们两个一直在那边嗨

2375
01:25:35,000 --> 01:25:36,000
然后说哇

2376
01:25:36,000 --> 01:25:37,000
这个干净

2377
01:25:37,000 --> 01:25:38,000
这个解决了是吧

2378
01:25:38,000 --> 01:25:40,000
Shut up and take my money

2379
01:25:40,000 --> 01:25:42,000
然后到电影一摸

2380
01:25:42,000 --> 01:25:43,000
我靠

2381
01:25:43,000 --> 01:25:44,000
What the hell

2382
01:25:44,000 --> 01:25:45,000
对

2383
01:25:45,000 --> 01:25:47,000
这感觉

2384
01:25:47,000 --> 01:25:47,000
这是

2385
01:25:47,000 --> 01:25:49,000
那不是华翔北

2386
01:25:49,000 --> 01:25:51,000
什么人想出来的点子吗

2387
01:25:51,000 --> 01:25:52,000
怎么会做得这么难

2388
01:25:52,000 --> 01:25:57,000
所以现在就很尴尬了

2389
01:25:57,000 --> 01:26:00,000
就是喜欢这个 iPad 这种 form factor

2390
01:26:00,000 --> 01:26:01,000
这种重量大小

2391
01:26:01,000 --> 01:26:04,000
和很多时候的交互方式

2392
01:26:04,000 --> 01:26:06,000
比如说就看电子书啊

2393
01:26:06,000 --> 01:26:06,000
看文档

2394
01:26:06,000 --> 01:26:07,000
看报表什么的

2395
01:26:07,000 --> 01:26:08,000
都挺方便的

2396
01:26:08,000 --> 01:26:11,000
但是你一旦想用它做点什么事

2397
01:26:11,000 --> 01:26:12,000
就会发现

2398
01:26:12,000 --> 01:26:14,000
好像不是太好

2399
01:26:14,000 --> 01:26:18,000
不知道时间之后会变成什么样

2400
01:26:18,000 --> 01:26:21,000
会是这种 Fusion 操作出现

2401
01:26:21,000 --> 01:26:22,000
那不就是

2402
01:26:22,000 --> 01:26:23,000
这不就是 Windows 吗

2403
01:26:23,000 --> 01:26:24,000
Windows 10 啊

2404
01:26:24,000 --> 01:26:26,000
就所有人都敢用 Windows 10

2405
01:26:26,000 --> 01:26:27,000
不其实我觉得这个是这样

2406
01:26:27,000 --> 01:26:30,000
就是我们还处在那种过渡时期

2407
01:26:30,000 --> 01:26:32,000
但是你回过头去看早年的那些

2408
01:26:32,000 --> 01:26:35,000
在那个 GUI 出现之前

2409
01:26:35,000 --> 01:26:36,000
大家用那个

2410
01:26:36,000 --> 01:26:38,000
你记不记得最早用那个 WPS

2411
01:26:38,000 --> 01:26:41,000
是在那个字符界面里面弄的

2412
01:26:41,000 --> 01:26:42,000
对啊

2413
01:26:42,000 --> 01:26:43,000
那个叫什么

2414
01:26:43,000 --> 01:26:44,000
我觉得

2415
01:26:44,000 --> 01:26:44,000
系统

2416
01:26:44,000 --> 01:26:45,000
我现在想不起名字了

2417
01:26:45,000 --> 01:26:46,000
就叫 WPS

2418
01:26:46,000 --> 01:26:47,000
不是不是

2419
01:26:47,000 --> 01:26:47,000
他起动

2420
01:26:47,000 --> 01:26:48,000
CCED

2421
01:26:48,000 --> 01:26:48,000
对对对

2422
01:26:48,000 --> 01:26:51,000
你还记得这个

2423
01:26:51,000 --> 01:26:51,000
当然

2424
01:26:51,000 --> 01:26:53,000
我有时候在想

2425
01:26:53,000 --> 01:26:53,000
就是我说

2426
01:26:53,000 --> 01:26:55,000
我现在有时候在那个 VIM 上面

2427
01:26:55,000 --> 01:26:56,000
写同学的时候就经常会想

2428
01:26:56,000 --> 01:26:58,000
我现在操作电脑

2429
01:26:58,000 --> 01:27:00,000
编辑文本的方式

2430
01:27:00,000 --> 01:27:03,000
其实跟 10 岁的时候没有什么差别

2431
01:27:03,000 --> 01:27:05,000
You know

2432
01:27:05,000 --> 01:27:06,000
但你这中间

2433
01:27:06,000 --> 01:27:08,000
我们用 Terminal 的色体内就在

2434
01:27:08,000 --> 01:27:09,000
就等没有经

2435
01:27:09,000 --> 01:27:10,000
就没有

2436
01:27:10,000 --> 01:27:11,000
怎么说的

2437
01:27:11,000 --> 01:27:13,000
就是和 70 年代都没有什么差别

2438
01:27:13,000 --> 01:27:14,000
没错

2439
01:27:14,000 --> 01:27:14,000
没错

2440
01:27:14,000 --> 01:27:17,000
因为中间你那个 GUI 的发展的

2441
01:27:17,000 --> 01:27:17,000
这个好处

2442
01:27:17,000 --> 01:27:20,000
ID 的好处都是被我们主动放弃了

2443
01:27:20,000 --> 01:27:21,000
对

2444
01:27:21,000 --> 01:27:23,000
所见即所得的

2445
01:27:23,000 --> 01:27:25,000
所得对于我们来说并没有太多的注意

2446
01:27:25,000 --> 01:27:26,000
不光是这个问题

2447
01:27:26,000 --> 01:27:28,000
还有包括像比如说

2448
01:27:28,000 --> 01:27:29,000
因为假设我们用这个 IDE 的话

2449
01:27:29,000 --> 01:27:31,000
或者说我们不用 Terminal

2450
01:27:31,000 --> 01:27:33,000
不用基于字符的界面的话

2451
01:27:33,000 --> 01:27:35,000
是基于这种图形的 GUI 的界面的话

2452
01:27:35,000 --> 01:27:37,000
起码很多显示的内容

2453
01:27:37,000 --> 01:27:38,000
它是更方便的

2454
01:27:38,000 --> 01:27:39,000
比如说你更显示这个

2455
01:27:39,000 --> 01:27:40,000
这个什么 Project Tree

2456
01:27:40,000 --> 01:27:40,000
对吧

2457
01:27:40,000 --> 01:27:42,000
显示这个 Debug Information

2458
01:27:42,000 --> 01:27:43,000
那些

2459
01:27:43,000 --> 01:27:44,000
其实要好很多的

2460
01:27:44,000 --> 01:27:46,000
因为不是每一个信息都需要占

2461
01:27:46,000 --> 01:27:48,000
那么大一个字符的位置

2462
01:27:48,000 --> 01:27:51,000
可能是一些很微小的东西就可以了

2463
01:27:51,000 --> 01:27:52,000
但是呢

2464
01:27:52,000 --> 01:27:55,000
因为你习惯了某一种操作方式

2465
01:27:55,000 --> 01:27:57,000
然后又希望一种解

2466
01:27:57,000 --> 01:28:00,000
一种一种解这种这种限制吧

2467
01:28:00,000 --> 01:28:00,000
你反而会觉得

2468
01:28:00,000 --> 01:28:02,000
哎呀换一个好像太麻烦了

2469
01:28:02,000 --> 01:28:04,000
然后又没有觉得

2470
01:28:04,000 --> 01:28:06,000
感觉到明显的好处

2471
01:28:06,000 --> 01:28:07,000
然后再重新学一下

2472
01:28:07,000 --> 01:28:09,000
学一套东西就不是很方便了

2473
01:28:09,000 --> 01:28:10,000
我觉得有点

2474
01:28:10,000 --> 01:28:14,000
现在像我们用那些日常的办公软件也好

2475
01:28:14,000 --> 01:28:17,000
切不到这个平板上面去

2476
01:28:17,000 --> 01:28:19,000
可能很大程度里面就遇到

2477
01:28:19,000 --> 01:28:20,000
同样一个尴尬

2478
01:28:20,000 --> 01:28:21,000
就是我觉得啊

2479
01:28:21,000 --> 01:28:23,000
之前那个什么 office

2480
01:28:23,000 --> 01:28:24,000
excel 都用的挺好的

2481
01:28:24,000 --> 01:28:26,000
用手标点来点去

2482
01:28:26,000 --> 01:28:27,000
刷率也挺高的

2483
01:28:27,000 --> 01:28:30,000
各种流程啊 workflow 都做的挺好的

2484
01:28:30,000 --> 01:28:32,000
然后你发现他用一个全新的

2485
01:28:32,000 --> 01:28:36,000
还没有被怎么被优化过的一种使用过程

2486
01:28:36,000 --> 01:28:38,000
就会觉得很别扭了

2487
01:28:38,000 --> 01:28:48,000
所以其实是不是说应该后面会有一堆的新的基于这种叫什么来的

2488
01:28:48,000 --> 01:28:57,000
触摸的交互模式或者是用笔的那种交互模式来操作工作流的新的软件

2489
01:28:57,000 --> 01:29:07,000
不是说我们直接把 office 啊那套套件或者说其他某个编那个 ID 的环境挪到这个 iPad 上面去这么这么简单粗暴的一种方法

2490
01:29:07,000 --> 01:29:10,000
那种感觉就好像啊

2491
01:29:10,000 --> 01:29:11,000
这个比喻不好啊

2492
01:29:11,000 --> 01:29:16,000
因为其实在 GUI 的情况下用一个 terminal emulator 其实效果是更好的

2493
01:29:16,000 --> 01:29:18,000
嗯对的确是啊

2494
01:29:18,000 --> 01:29:25,000
而且你可以有很多个 terminal emulator 在自由的千万来千万去的感觉

2495
01:29:25,000 --> 01:29:28,000
对啊对啊对啊

2496
01:29:28,000 --> 01:29:29,000
哎

2497
01:29:29,000 --> 01:29:30,000
字符界面也可以啊

2498
01:29:30,000 --> 01:29:32,000
那个什么 Ctrl F 1 Ctrl F 2

2499
01:29:32,000 --> 01:29:35,000
Tmax

2500
01:29:35,000 --> 01:29:36,000
位置在 Lit

2501
01:29:36,000 --> 01:29:37,000
Tmax 也是一个方案

2502
01:29:37,000 --> 01:29:38,000
对对对对

2503
01:29:38,000 --> 01:29:44,000
所以说到这个我最近我专门去下了那个 Visual Studio Code 回来用

2504
01:29:44,000 --> 01:29:46,000
哦感觉怎么样

2505
01:29:46,000 --> 01:29:47,000
哦感觉怎么样

2506
01:29:47,000 --> 01:29:49,000
他们他们说评价还不错

2507
01:29:49,000 --> 01:29:52,000
然后我打开一下感觉确实还可以

2508
01:29:52,000 --> 01:29:54,000
有一些讨巧的设计吧

2509
01:29:56,000 --> 01:30:00,000
对比如说我记得印象很深的一个就是你写了一个 CSS selector

2510
01:30:00,000 --> 01:30:02,000
然后鼠标悬定在上面

2511
01:30:02,000 --> 01:30:04,000
他会给出一个范例

2512
01:30:04,000 --> 01:30:10,000
就是这个 CSS selector 对应的那个 HTML 的 structure 大概是什么样

2513
01:30:10,000 --> 01:30:11,000
对对对对

2514
01:30:11,000 --> 01:30:13,000
当时在推上看见简直是惊为天人

2515
01:30:13,000 --> 01:30:16,000
这个玩意怎么早就没有人做

2516
01:30:16,000 --> 01:30:18,000
对吧

2517
01:30:18,000 --> 01:30:19,000
所以其实你看

2518
01:30:19,000 --> 01:30:23,000
我觉得就现在这个我们现在丢掉或者怎么样

2519
01:30:23,000 --> 01:30:28,000
就是其实完全不是因为这个平板本身有多少不好

2520
01:30:28,000 --> 01:30:33,000
而是说我们还没有想出一个在那上面能够怎么更好的完成我们现有的工作

2521
01:30:33,000 --> 01:30:38,000
而不是说到现在的调查框框限制的这些新型的软件出来

2522
01:30:38,000 --> 01:30:39,000
对

2523
01:30:39,000 --> 01:30:40,000
是这样

2524
01:30:40,000 --> 01:30:42,000
所以你要不要去写一个

2525
01:30:42,000 --> 01:30:46,000
想法都太好了

2526
01:30:46,000 --> 01:30:48,000
但是真正推动历史前进的不会是我

2527
01:30:48,000 --> 01:30:53,000
你是说我们要先死在沙滩上才可以是吧

2528
01:30:53,000 --> 01:30:54,000
对

2529
01:30:54,000 --> 01:30:57,000
有可能 10 年之后我们都会觉得

2530
01:30:58,000 --> 01:31:01,000
就大部分人的使用习惯会议中

2531
01:31:01,000 --> 01:31:03,000
会议中我们不能接受的方式

2532
01:31:03,000 --> 01:31:05,000
就等我们老死

2533
01:31:05,000 --> 01:31:09,000
等我们退休那天去看后来的那个小朋友们

2534
01:31:09,000 --> 01:31:10,000
这怎么弄都是在那边

2535
01:31:10,000 --> 01:31:11,000
就说我说我操纵

2536
01:31:11,000 --> 01:31:13,000
操纵一个虚拟空间里面的对象

2537
01:31:13,000 --> 01:31:14,000
对

2538
01:31:14,000 --> 01:31:15,000
你们不觉得别扭吗

2539
01:31:15,000 --> 01:31:16,000
你们不觉得累吗

2540
01:31:16,000 --> 01:31:19,000
手指什么都摸不到

2541
01:31:19,000 --> 01:31:20,000
怎么可能

2542
01:31:21,000 --> 01:31:22,000
这种感觉

2543
01:31:22,000 --> 01:31:23,000
对

2544
01:31:23,000 --> 01:31:27,000
你看最近那个 MagicLeave 发的那个新的那个 demo 视频

2545
01:31:27,000 --> 01:31:28,000
没

2546
01:31:28,000 --> 01:31:29,000
我听很多人说过了

2547
01:31:29,000 --> 01:31:30,000
但是具体内容是什么

2548
01:31:30,000 --> 01:31:31,000
我一直没有时间去看

2549
01:31:31,000 --> 01:31:32,000
到底是什么

2550
01:31:32,000 --> 01:31:33,000
其实也没什么

2551
01:31:33,000 --> 01:31:37,000
就是他在一个真实困扬的一些信息

2552
01:31:37,000 --> 01:31:39,000
然后你可以去交互操作它

2553
01:31:39,000 --> 01:31:41,000
OK

2554
01:31:41,000 --> 01:31:42,000
然后是裸眼

2555
01:31:42,000 --> 01:31:43,000
其实我觉得这个东西

2556
01:31:43,000 --> 01:31:46,000
他说是直接通过他们那个

2557
01:31:46,000 --> 01:31:49,000
那个叫一个眼镜吧

2558
01:31:49,000 --> 01:31:51,000
拍的就是没有经过任何后期处理

2559
01:31:51,000 --> 01:31:52,000
但是谁知道呢

2560
01:31:52,000 --> 01:31:53,000
当年那个什么 hololens

2561
01:31:53,000 --> 01:31:54,000
他也这么说

2562
01:31:54,000 --> 01:31:56,000
但出来用的时候也不就那样了

2563
01:31:56,000 --> 01:31:57,000
对吧

2564
01:31:57,000 --> 01:32:00,000
所以这个事情还是要持适当的怀疑态度

2565
01:32:00,000 --> 01:32:03,000
我觉得那个就好嘛

2566
01:32:03,000 --> 01:32:06,000
就是就不用考虑到底是这个要有平板

2567
01:32:06,000 --> 01:32:08,000
还是要用这个

2568
01:32:08,000 --> 01:32:10,000
这个现在的那个屏幕了

2569
01:32:10,000 --> 01:32:12,000
因为他在那么大的一个尺度上面

2570
01:32:12,000 --> 01:32:14,000
我觉得这两个就可以可以融合了

2571
01:32:15,000 --> 01:32:16,000
嗯

2572
01:32:16,000 --> 01:32:17,000
因为对吧

2573
01:32:17,000 --> 01:32:19,000
你不存在这个这个交后的问题

2574
01:32:19,000 --> 01:32:20,000
整个空间都是你的画布

2575
01:32:20,000 --> 01:32:21,000
对吧

2576
01:32:21,000 --> 01:32:22,000
不存在说

2577
01:32:22,000 --> 01:32:24,000
对也许将来就不存在

2578
01:32:24,000 --> 01:32:26,000
一定要订商务舱的问题了

2579
01:32:26,000 --> 01:32:29,000
反正你所谓都是戴着一个眼镜

2580
01:32:29,000 --> 01:32:30,000
对吧

2581
01:32:30,000 --> 01:32:31,000
戴着一个

2582
01:32:31,000 --> 01:32:35,000
把你和身边的座舱隔离开来的眼镜

2583
01:32:35,000 --> 01:32:37,000
然后你在虚拟世界里面完成你的工作

2584
01:32:37,000 --> 01:32:38,000
别人看不到你在做什么

2585
01:32:38,000 --> 01:32:41,000
你也完全不需要去操心

2586
01:32:41,000 --> 01:32:43,000
前面以背离你太近这种事情

2587
01:32:43,000 --> 01:32:45,000
因为只要他不压到你的眼睛上

2588
01:32:45,000 --> 01:32:46,000
就无所谓

2589
01:32:47,000 --> 01:32:49,000
也是也是可以

2590
01:32:49,000 --> 01:32:51,000
也想想也挺好的

2591
01:32:51,000 --> 01:32:52,000
好吧

2592
01:32:52,000 --> 01:32:53,000
今天差不多在这里吧

2593
01:32:53,000 --> 01:32:54,000
对

2594
01:32:54,000 --> 01:32:55,000
对

2595
01:32:55,000 --> 01:32:56,000
我们本来还有一条是什么

2596
01:32:56,000 --> 01:32:57,000
互联网域名管理办法

2597
01:32:57,000 --> 01:33:02,000
就是要求所有的域名都必须在中国境内注册的那样

2598
01:33:02,000 --> 01:33:03,000
那样一条

2599
01:33:03,000 --> 01:33:05,000
政令

2600
01:33:05,000 --> 01:33:06,000
行政命令

2601
01:33:06,000 --> 01:33:07,000
但是

2602
01:33:07,000 --> 01:33:10,000
反正是件很蠢的事情

2603
01:33:10,000 --> 01:33:11,000
就不展开头了

2604
01:33:12,000 --> 01:33:14,000
为什么你会说他蠢

2605
01:33:15,000 --> 01:33:20,000
蠢是从网站运营者的角度来看的

2606
01:33:20,000 --> 01:33:23,000
就你要从国家管理者的角度来看

2607
01:33:23,000 --> 01:33:26,000
就你要从国家管理者的角度来看

2608
01:33:26,000 --> 01:33:27,000
就你不少吧

2609
01:33:27,000 --> 01:33:28,000
当然是

2610
01:33:28,000 --> 01:33:29,000
对啊

2611
01:33:29,000 --> 01:33:30,000
对

2612
01:33:30,000 --> 01:33:31,000
蠢的意思就是这件事情对于

2613
01:33:31,000 --> 01:33:34,000
就对于我们这种声斗小民来说是比较让人讨厌的

2614
01:33:34,000 --> 01:33:36,000
就是你要在中国开一个网站

2615
01:33:36,000 --> 01:33:38,000
你必须在中国境内注册这个域名

2616
01:33:38,000 --> 01:33:42,000
那也就意味着其实你的所谓国际化

2617
01:33:42,000 --> 01:33:46,000
或者你脱离政府监管这件事情就不可能了

2618
01:33:46,000 --> 01:33:48,000
就他看你不爽的话

2619
01:33:48,000 --> 01:33:50,000
可以随时把你这样一个域名不存在

2620
01:33:50,000 --> 01:33:52,000
那你就无所谓什么

2621
01:33:52,000 --> 01:33:53,000
好吧我在国外有一网站

2622
01:33:53,000 --> 01:33:54,000
然后你可以来看

2623
01:33:54,000 --> 01:33:59,000
那这件事情在中国可能就将来就不可能了

2624
01:33:59,000 --> 01:34:01,000
就是因为你的域名在中国根本不存在

2625
01:34:01,000 --> 01:34:05,000
而不是你在中国没有办法连接到网站

2626
01:34:05,000 --> 01:34:06,000
这么简单

2627
01:34:07,000 --> 01:34:08,000
对

2628
01:34:08,000 --> 01:34:11,000
这个白名单制应该是一个

2629
01:34:11,000 --> 01:34:12,000
目前看来板上钉钉的事情

2630
01:34:12,000 --> 01:34:14,000
时间推特早晚的问题了

2631
01:34:14,000 --> 01:34:16,000
对

2632
01:34:16,000 --> 01:34:20,000
这只不过是在温水煮青蛙的过程中升高一度

2633
01:34:20,000 --> 01:34:21,000
对

2634
01:34:21,000 --> 01:34:27,000
我想这里其实有一个挺好的事情就是

2635
01:34:27,000 --> 01:34:29,000
互联网的全球化这个趋势已经完完了

2636
01:34:29,000 --> 01:34:31,000
我觉得

2637
01:34:31,000 --> 01:34:32,000
互联网全球化的幻梦已经破灭了

2638
01:34:32,000 --> 01:34:33,000
对

2639
01:34:33,000 --> 01:34:35,000
因为互联网这个东西

2640
01:34:35,000 --> 01:34:36,000
只要政府存在对互联网的监管就不会停止

2641
01:34:36,000 --> 01:34:39,000
那当所有国家的政府一致认为

2642
01:34:39,000 --> 01:34:42,000
互联网是一片必须需要被监管的空间的时候

2643
01:34:42,000 --> 01:34:47,000
所谓什么自由网络中立这些事情都可以去死

2644
01:34:47,000 --> 01:34:48,000
没错

2645
01:34:48,000 --> 01:34:49,000
所以还是之前回答某一个推友的回复

2646
01:34:49,000 --> 01:34:50,000
说你不可能指望一个所有的硬件计数设施

2647
01:34:50,000 --> 01:34:51,000
都是被主权国家掌控的一个

2648
01:34:51,000 --> 01:34:52,000
一个

2649
01:34:52,000 --> 01:34:53,000
一个

2650
01:34:53,000 --> 01:34:54,000
一个

2651
01:34:54,000 --> 01:34:55,000
一个

2652
01:34:55,000 --> 01:34:56,000
一个

2653
01:34:56,000 --> 01:34:57,000
一个

2654
01:34:57,000 --> 01:34:58,000
一个

2655
01:34:58,000 --> 01:34:59,000
一个

2656
01:34:59,000 --> 01:35:00,000
一个

2657
01:35:00,000 --> 01:35:01,000
一个

2658
01:35:01,000 --> 01:35:02,000
一个

2659
01:35:02,000 --> 01:35:03,000
一个

2660
01:35:03,000 --> 01:35:04,000
一个

2661
01:35:04,000 --> 01:35:05,000
一个

2662
01:35:05,000 --> 01:35:06,000
一个

2663
01:35:06,000 --> 01:35:07,000
一个

2664
01:35:07,000 --> 01:35:08,000
一个

2665
01:35:08,000 --> 01:35:09,000
一个

2666
01:35:09,000 --> 01:35:10,000
一个

2667
01:35:10,000 --> 01:35:11,000
一个

2668
01:35:11,000 --> 01:35:12,000
一个

2669
01:35:12,000 --> 01:35:13,000
一个

2670
01:35:13,000 --> 01:35:14,000
一个

2671
01:35:14,000 --> 01:35:15,000
一个

2672
01:35:15,000 --> 01:35:16,000
一个

2673
01:35:16,000 --> 01:35:18,000
一个

2674
01:35:18,000 --> 01:35:19,000
一个

2675
01:35:19,000 --> 01:35:22,000
一个

2676
01:35:22,000 --> 01:35:23,000
一个

2677
01:35:23,000 --> 01:35:24,000
一个

2678
01:35:24,000 --> 01:35:27,000
一个

2679
01:35:27,000 --> 01:35:40,000
是可能

2680
01:35:40,000 --> 01:35:41,000
可能长期的维持

2681
01:35:41,000 --> 01:35:42,000
所谓自由和开放

2682
01:35:42,000 --> 01:35:43,000
对

2683
01:35:43,000 --> 01:35:44,000
你不可能指望一个在

2684
01:35:44,000 --> 01:35:45,000
由政府所控制的世界里面

2685
01:35:45,000 --> 01:35:47,000
那个世界不就是无政府主义的世界吗

2686
01:35:47,000 --> 01:35:50,000
那一切所有的国家都

2687
01:35:50,000 --> 01:35:53,000
政府只在非常小的规模上存在

2688
01:35:53,000 --> 01:35:54,000
你可以自己选择说

2689
01:35:54,000 --> 01:35:57,000
这个公司管理我的这件事情

2690
01:35:57,000 --> 01:35:58,000
那公司管理我的那件事情

2691
01:35:58,000 --> 01:36:00,000
然后世界上不存在一个大一统的

2692
01:36:00,000 --> 01:36:02,000
任何地域之内

2693
01:36:02,000 --> 01:36:03,000
不存在一个大一统的政府

2694
01:36:03,000 --> 01:36:06,000
只有在那样的世界里面

2695
01:36:06,000 --> 01:36:07,000
可能说网络才是一个真正

2696
01:36:07,000 --> 01:36:10,000
不受监管的空间

2697
01:36:10,000 --> 01:36:12,000
但是在目前我们这个平行宇宙里面

2698
01:36:12,000 --> 01:36:13,000
这是不可能

2699
01:36:13,000 --> 01:36:15,000
在这个位面上面

2700
01:36:15,000 --> 01:36:17,000
这是一场幻梦

2701
01:36:17,000 --> 01:36:21,000
所以本质上来讲

2702
01:36:21,000 --> 01:36:27,000
OpenWeb 需要的实现的前提是

2703
01:36:27,000 --> 01:36:29,000
就是叫什么

2704
01:36:29,000 --> 01:36:30,000
去国家化

2705
01:36:30,000 --> 01:36:32,000
对

2706
01:36:32,000 --> 01:36:33,000
就是如果有一天

2707
01:36:33,000 --> 01:36:35,000
全人类可以站在一起

2708
01:36:35,000 --> 01:36:39,000
什么欢乐送的歌词终究成真的时候

2709
01:36:39,000 --> 01:36:41,000
可能有

2710
01:36:41,000 --> 01:36:46,000
不知道能不能看到

2711
01:36:46,000 --> 01:36:49,000
如果明天外星人入侵的话

2712
01:36:49,000 --> 01:36:53,000
可能中共全球世界的国家就会被摧毁

2713
01:36:53,000 --> 01:36:56,000
那不会出一个世界政府

2714
01:36:56,000 --> 01:36:58,000
就有可能

2715
01:36:58,000 --> 01:37:03,000
全世界人民被迫在疫情的威胁之下团结起来

2716
01:37:03,000 --> 01:37:05,000
然后国家就死消灵

2717
01:37:05,000 --> 01:37:09,000
但是这前提是外星人得来

2718
01:37:09,000 --> 01:37:11,000
不用外星人

2719
01:37:11,000 --> 01:37:12,000
来一颗小星星也可以

2720
01:37:12,000 --> 01:37:17,000
小星星炸了不就没了吗

2721
01:37:17,000 --> 01:37:19,000
你得想办法把它弄炸了才可以

2722
01:37:19,000 --> 01:37:20,000
对

2723
01:37:20,000 --> 01:37:21,000
那无非就是什么

2724
01:37:21,000 --> 01:37:25,000
联合管理会的五个常委

2725
01:37:25,000 --> 01:37:26,000
然后联合起来

2726
01:37:26,000 --> 01:37:30,000
然后加上日本德国造一个超级核武器

2727
01:37:30,000 --> 01:37:31,000
然后发出去

2728
01:37:31,000 --> 01:37:32,000
不就完了吗

2729
01:37:32,000 --> 01:37:33,000
对

2730
01:37:33,000 --> 01:37:34,000
但是这个过程

2731
01:37:34,000 --> 01:37:35,000
国家的消失有什么

2732
01:37:35,000 --> 01:37:36,000
这个过程如果

2733
01:37:36,000 --> 01:37:38,000
比如说那个小星星比较大

2734
01:37:38,000 --> 01:37:38,000
对吧

2735
01:37:38,000 --> 01:37:39,000
就没有那么简单了

2736
01:37:39,000 --> 01:37:41,000
我觉得好吧

2737
01:37:41,000 --> 01:37:43,000
那 ISS 都能上天

2738
01:37:43,000 --> 01:37:45,000
国家也没有消失

2739
01:37:45,000 --> 01:37:48,000
也是

2740
01:37:48,000 --> 01:37:49,000
你看文明里面

2741
01:37:49,000 --> 01:37:54,000
你要造一个去阿尔法森陀瑞的火箭

2742
01:37:54,000 --> 01:37:56,000
你一个国家也可以造出来

2743
01:37:56,000 --> 01:37:56,000
对吧

2744
01:37:56,000 --> 01:37:58,000
你不需要把其他所有国家都灭了

2745
01:37:58,000 --> 01:38:00,000
说到这个东西

2746
01:38:00,000 --> 01:38:01,000
好像最近那个谁

2747
01:38:01,000 --> 01:38:03,000
霍金是不是搞了个什么要额子

2748
01:38:03,000 --> 01:38:04,000
要弄这个事

2749
01:38:04,000 --> 01:38:05,000
他要跟外星人来弄

2750
01:38:05,000 --> 01:38:06,000
对

2751
01:38:06,000 --> 01:38:10,000
他要发一堆小飞行器过去

2752
01:38:10,000 --> 01:38:10,000
好像是这么说

2753
01:38:10,000 --> 01:38:11,000
对

2754
01:38:11,000 --> 01:38:14,000
说不定还真的

2755
01:38:14,000 --> 01:38:15,000
身体迷命

2756
01:38:15,000 --> 01:38:16,000
说不定还真的能招过来

2757
01:38:16,000 --> 01:38:19,000
好吧

2758
01:38:19,000 --> 01:38:20,000
Let's see

2759
01:38:20,000 --> 01:38:21,000
OK

2760
01:38:21,000 --> 01:38:22,000
感谢收听 IPN Podcast

2761
01:38:22,000 --> 01:38:24,000
网络写下的 IT 基础

2762
01:38:24,000 --> 01:38:25,000
与娱乐节目内很恐慌

2763
01:38:25,000 --> 01:38:26,000
号称 hardcore

2764
01:38:26,000 --> 01:38:27,000
但是也没有干货

2765
01:38:27,000 --> 01:38:28,000
想听人听

2766
01:38:28,000 --> 01:38:29,000
不想听人就别听

2767
01:38:29,000 --> 01:38:31,000
您可以为本节目捐款

2768
01:38:31,000 --> 01:38:32,000
地址是

2769
01:38:32,000 --> 01:38:33,000
kernelpanic.fm

2770
01:38:33,000 --> 01:38:35,000
slash donate

2771
01:38:35,000 --> 01:38:36,000
捐款经营随意

2772
01:38:36,000 --> 01:38:38,000
只要是 8 的正整数倍就可以

2773
01:38:38,000 --> 01:38:40,000
捐款不会给你带来什么

2774
01:38:40,000 --> 01:38:41,000
不捐也不会让你失去什么

2775
01:38:41,000 --> 01:38:42,000
我们的口号是

2776
01:38:42,000 --> 01:38:43,000
No hard feelings

2777
01:38:43,000 --> 01:38:45,000
如果你有任何反馈

2778
01:38:45,000 --> 01:38:46,000
可以发邮件到

2779
01:38:46,000 --> 01:38:49,000
kernelpanicatipn.t

2780
01:38:49,000 --> 01:38:51,000
同时也欢迎你收听

2781
01:38:51,000 --> 01:38:53,000
Rail 主持的风头圈

2782
01:38:53,000 --> 01:38:57,000
以及 IPN 旗下的其他节目

2783
01:38:57,000 --> 01:38:59,000
未知到太一来了

2784
01:38:59,000 --> 01:38:59,000
流行通信

2785
01:38:59,000 --> 01:39:00,000
high story

2786
01:39:00,000 --> 01:39:00,000
映影像

2787
01:39:00,000 --> 01:39:01,000
无次元

2788
01:39:01,000 --> 01:39:02,000
博物质

2789
01:39:02,000 --> 01:39:02,000
选美

2790
01:39:02,000 --> 01:39:04,000
毕下关和一天世界

2791
01:39:04,000 --> 01:39:05,000
我们下期节目再会

2792
01:39:05,000 --> 01:39:10,000
没筹

2793
01:39:11,000 --> 01:39:12,000
优优质

2794
01:39:12,000 --> 01:39:14,000
kap

2795
01:39:14,000 --> 01:39:17,000
了

2796
01:39:17,000 --> 01:39:18,000
lock

