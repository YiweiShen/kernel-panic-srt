1
00:00:00,000 --> 00:00:05,000
欢迎收听 IPN Podcast 的网络旗下的 IT 技术主题娱乐节目内核恐慌

2
00:00:05,000 --> 00:00:07,000
我们号称 Hardcore 但是也没有干货

3
00:00:07,000 --> 00:00:09,000
想听人听不想听人都别听

4
00:00:09,000 --> 00:00:13,000
本节目的网址是 kernelpanic.fm

5
00:00:13,000 --> 00:00:16,000
我们推荐大家使用 Podcast 客户端订阅节目

6
00:00:16,000 --> 00:00:20,000
相请请访问 ipn.fi.faq

7
00:00:20,000 --> 00:00:22,000
欢迎你为本节目捐款

8
00:00:22,000 --> 00:00:26,000
捐款地址是 kernelpanic.fm.donate

9
00:00:26,000 --> 00:00:30,000
捐款经常所益只要是 8 的正整数倍就可以

10
00:00:30,000 --> 00:00:31,000
捐款不会给你带来什么

11
00:00:31,000 --> 00:00:33,000
不捐也不会让你失去什么

12
00:00:33,000 --> 00:00:34,000
我们口号是

13
00:00:34,000 --> 00:00:37,000
Programming is like sex

14
00:00:37,000 --> 00:00:41,000
One mistake and you have to support it for the rest of your life

15
00:00:41,000 --> 00:00:43,000
这个叫做什么

16
00:00:43,000 --> 00:00:45,000
Accidental baby

17
00:00:45,000 --> 00:00:49,000
就是 Execution

18
00:00:49,000 --> 00:00:53,000
应该在保护级别之心

19
00:00:53,000 --> 00:00:56,000
保护级别限制很多

20
00:00:56,000 --> 00:00:59,000
但是不会怀孕

21
00:00:59,000 --> 00:01:03,000
不会触及到这个 kernel

22
00:01:03,000 --> 00:01:04,000
好吧

23
00:01:04,000 --> 00:01:07,000
大家还是小心行

24
00:01:07,000 --> 00:01:10,000
最近好像国内开放什么二胎了

25
00:01:10,000 --> 00:01:12,000
是

26
00:01:12,000 --> 00:01:14,000
与时俱进我们要讨论一下这个

27
00:01:14,000 --> 00:01:15,000
算了还是太一来了

28
00:01:15,000 --> 00:01:16,000
OK

29
00:01:16,000 --> 00:01:19,000
对我觉得我们好像也扯不出了什么毒子

30
00:01:19,000 --> 00:01:26,000
其实二胎之前就是对于双方都是独生子女的家长开放的吧

31
00:01:26,000 --> 00:01:30,000
以前是开放叫做什么单独二胎

32
00:01:30,000 --> 00:01:32,000
就是怎么叫单独二胎

33
00:01:32,000 --> 00:01:33,000
这个是怎么解释来的

34
00:01:33,000 --> 00:01:36,000
反正就是如果两方父母都是独生子女的话就可以生了

35
00:01:36,000 --> 00:01:37,000
就可以

36
00:01:37,000 --> 00:01:40,000
然后现在是没有任何限制

37
00:01:40,000 --> 00:01:41,000
想生两个就生了

38
00:01:41,000 --> 00:01:42,000
就 up to two

39
00:01:42,000 --> 00:01:43,000
OK

40
00:01:43,000 --> 00:01:49,000
但是也有人在扯这个事情就说为什么还有 up to two 这个限制

41
00:01:49,000 --> 00:01:50,000
对吧

42
00:01:50,000 --> 00:01:51,000
其实现在人们的生

43
00:01:51,000 --> 00:01:54,000
至少城市人口的生互欲望已经非常低了

44
00:01:54,000 --> 00:01:55,000
嗯

45
00:01:55,000 --> 00:01:57,000
是吧

46
00:01:57,000 --> 00:01:58,000
我也觉得是这样

47
00:01:58,000 --> 00:01:59,000
起码我的生互欲望是很低的

48
00:01:59,000 --> 00:02:02,000
好吧

49
00:02:02,000 --> 00:02:02,000
好吧

50
00:02:02,000 --> 00:02:06,000
但我相信也许二线城市还是会有一个增长

51
00:02:06,000 --> 00:02:08,000
农村吧

52
00:02:08,000 --> 00:02:08,000
主要还是可能

53
00:02:08,000 --> 00:02:11,000
可是农村现在农村大量

54
00:02:11,000 --> 00:02:14,000
前两天那个经济学人上还还封面故事

55
00:02:14,000 --> 00:02:19,000
就是讲中国的农村出现大量留守儿童

56
00:02:19,000 --> 00:02:22,000
然后农村已经没有年轻人了

57
00:02:22,000 --> 00:02:26,000
所以其实农村的生育率也是相当低的

58
00:02:26,000 --> 00:02:26,000
哎

59
00:02:26,000 --> 00:02:27,000
这个还有点意思

60
00:02:27,000 --> 00:02:28,000
我一直不知道怎么算

61
00:02:28,000 --> 00:02:30,000
比如说两个一对农民工

62
00:02:30,000 --> 00:02:34,000
去这个从农村去到这个一线城市打工

63
00:02:34,000 --> 00:02:35,000
然后他在那里生了两个小孩

64
00:02:35,000 --> 00:02:37,000
算哪边的出生呢

65
00:02:37,000 --> 00:02:38,000
他上不了户口呀

66
00:02:38,000 --> 00:02:38,000
但是

67
00:02:38,000 --> 00:02:41,000
所以所以我说他他他他他算哪里的出生

68
00:02:41,000 --> 00:02:42,000
算这个城市的吗

69
00:02:42,000 --> 00:02:44,000
算应该是算户籍所在地的出生

70
00:02:44,000 --> 00:02:46,000
就永远是统计

71
00:02:46,000 --> 00:02:47,000
如果你要拿统计资料的话

72
00:02:47,000 --> 00:02:49,000
永远是在户籍所在地哪

73
00:02:49,000 --> 00:02:51,000
那他们要是想给

74
00:02:51,000 --> 00:02:53,000
如果要是想给学生

75
00:02:53,000 --> 00:02:55,000
想给孩子上户口的话

76
00:02:55,000 --> 00:02:58,000
只能回到那个户籍所在地上

77
00:02:58,000 --> 00:02:59,000
如果不上的话

78
00:02:59,000 --> 00:03:00,000
就是黑库已经统计不到对吧

79
00:03:00,000 --> 00:03:01,000
但如果上了的话

80
00:03:01,000 --> 00:03:02,000
只能是在户籍所在地

81
00:03:02,000 --> 00:03:04,000
所以统计的是户籍所在地的出生率

82
00:03:07,000 --> 00:03:07,000
yeah

83
00:03:08,000 --> 00:03:09,000
System failure

84
00:03:10,000 --> 00:03:11,000
sucks

85
00:03:12,000 --> 00:03:12,000
好吧

86
00:03:12,000 --> 00:03:14,000
我们这一期是 27 期

87
00:03:14,000 --> 00:03:17,000
然后做一下听众反馈

88
00:03:17,000 --> 00:03:19,000
但听众反馈是 24 期的

89
00:03:19,000 --> 00:03:21,000
因为上面两期我们都请到了嘉宾

90
00:03:21,000 --> 00:03:21,000
对吧

91
00:03:22,000 --> 00:03:22,000
对

92
00:03:22,000 --> 00:03:23,000
就采访

93
00:03:23,000 --> 00:03:24,000
嘉宾

94
00:03:24,000 --> 00:03:26,000
然后没有对我们两个的吐槽

95
00:03:26,000 --> 00:03:30,000
为什么上一期 Limit 没有反馈了

96
00:03:30,000 --> 00:03:31,000
下载量很高

97
00:03:31,000 --> 00:03:35,000
他们都去 V 2 EX 反馈了

98
00:03:35,000 --> 00:03:36,000
对对对

99
00:03:36,000 --> 00:03:36,000
非常合乎情理

100
00:03:36,000 --> 00:03:37,000
对

101
00:03:37,000 --> 00:03:38,000
因为我忘了说

102
00:03:38,000 --> 00:03:46,000
就是说我们每期 Curlum Panic 都会在 V 2 EX 的 Podcast 节点更新

103
00:03:46,000 --> 00:03:52,000
希望大家会有点击或者是去评论

104
00:03:52,000 --> 00:03:53,000
然后看了一下数字

105
00:03:53,000 --> 00:03:58,000
采访 Libit 那期在那里有大概 4000 多次点击

106
00:03:58,000 --> 00:04:00,000
然后我们平时大概是在几百次吧

107
00:04:00,000 --> 00:04:01,000
点击

108
00:04:01,000 --> 00:04:03,000
所以是有数量级的区别的

109
00:04:03,000 --> 00:04:07,000
然后它相当相应的这个评论也是比较多的

110
00:04:07,000 --> 00:04:11,000
一共有我现在看到有 55 条评论

111
00:04:11,000 --> 00:04:12,000
应该是对

112
00:04:12,000 --> 00:04:15,000
还是比较活跃的一个讨论组在下面

113
00:04:15,000 --> 00:04:16,000
我看见了

114
00:04:16,000 --> 00:04:17,000
好多反馈其实都值得念

115
00:04:17,000 --> 00:04:19,000
网站实在有点慢

116
00:04:19,000 --> 00:04:21,000
Li 的经济学很厉害

117
00:04:21,000 --> 00:04:23,000
Rail 已经走向我的同币

118
00:04:23,000 --> 00:04:25,000
所以 Rail 你是靠这个贴子收可能同币

119
00:04:25,000 --> 00:04:27,000
对我的同币

120
00:04:27,000 --> 00:04:29,000
已经翻翻了

121
00:04:29,000 --> 00:04:33,000
我应该说我的银币已经翻翻了

122
00:04:33,000 --> 00:04:36,000
我之前是 20 多个银币

123
00:04:36,000 --> 00:04:39,000
我现在只有 50 多个银币了

124
00:04:39,000 --> 00:04:40,000
致富新途径

125
00:04:40,000 --> 00:04:43,000
对于 L 大经历比较熟悉的朋友

126
00:04:43,000 --> 00:04:47,000
可以从一小时 32 分左右开始听

127
00:04:47,000 --> 00:04:49,000
前面一万小时就这样没跳过

128
00:04:49,000 --> 00:04:51,000
所以前面一个半小时我们在扯什么蛋

129
00:04:51,000 --> 00:04:54,000
就下面有一个人说听完了

130
00:04:54,000 --> 00:04:56,000
为什么我感觉几乎 70%以上的聊天内容

131
00:04:56,000 --> 00:04:58,000
都曾经在 Li 的博客里面看过呢

132
00:04:58,000 --> 00:05:01,000
比如 V 2 UX 从 Google App Engine 迁移

133
00:05:01,000 --> 00:05:02,000
Li 的三个问题

134
00:05:02,000 --> 00:05:06,000
以及 KG 6 间房和后来去加工做的事

135
00:05:06,000 --> 00:05:10,000
我觉得这个还是有原因的

136
00:05:10,000 --> 00:05:12,000
你之前只是看过对吧

137
00:05:12,000 --> 00:05:14,000
这次你听过了还是有点不一样

138
00:05:14,000 --> 00:05:15,000
没错

139
00:05:15,000 --> 00:05:19,000
而且我们的节目的意图不就是让没有看过的人

140
00:05:19,000 --> 00:05:23,000
可以听到 80%的内容

141
00:05:23,000 --> 00:05:26,000
就知道 Li 的曾在博博博里面写过什么

142
00:05:26,000 --> 00:05:28,000
对

143
00:05:28,000 --> 00:05:31,000
29 了有个吐槽挺好的

144
00:05:31,000 --> 00:05:34,000
IPM 买过最不值得的一名大概就是

145
00:05:34,000 --> 00:05:36,000
CernalPanic.fm 了

146
00:05:36,000 --> 00:05:39,000
因为吴涛被 IPM.lis

147
00:05:39,000 --> 00:05:41,000
被习惯了

148
00:05:41,000 --> 00:05:43,000
这次我们已经改过了这个稿子了

149
00:05:43,000 --> 00:05:44,000
Yeah

150
00:05:44,000 --> 00:05:47,000
CernalPanic.fm 还是蛮贵的

151
00:05:47,000 --> 00:05:48,000
好贵啊

152
00:05:48,000 --> 00:05:51,000
一年上 70 到的那个那个需费的钱

153
00:05:51,000 --> 00:05:51,000
对

154
00:05:51,000 --> 00:05:54,000
所以我们现在低些

155
00:05:54,000 --> 00:05:56,000
如果有点用处的话就用在这儿了

156
00:05:56,000 --> 00:05:58,000
但可能连这个都不够用

157
00:05:58,000 --> 00:06:02,000
你干嘛这么悲观其实是够的

158
00:06:02,000 --> 00:06:03,000
啊

159
00:06:03,000 --> 00:06:04,000
够得到

160
00:06:04,000 --> 00:06:05,000
more than that

161
00:06:05,000 --> 00:06:08,000
我还有人非常怀旧的那个

162
00:06:08,000 --> 00:06:08,000
哦不是

163
00:06:08,000 --> 00:06:09,000
这是 Levid

164
00:06:09,000 --> 00:06:12,000
他把那个当初那个

165
00:06:12,000 --> 00:06:15,000
Bike Company 2 的 APP 的截图发上来

166
00:06:15,000 --> 00:06:19,000
我们把这个链接贴到那个 show notes 里面

167
00:06:19,000 --> 00:06:21,000
大家有兴趣可以去看一下

168
00:06:21,000 --> 00:06:21,000
OK

169
00:06:21,000 --> 00:06:22,000
嗯

170
00:06:22,000 --> 00:06:23,000
好吧

171
00:06:23,000 --> 00:06:24,000
好吧

172
00:06:24,000 --> 00:06:26,000
这个正儿八截的听众反馈

173
00:06:26,000 --> 00:06:26,000
啊

174
00:06:26,000 --> 00:06:28,000
有一条是来自这个叫

175
00:06:29,000 --> 00:06:29,000
呃

176
00:06:29,000 --> 00:06:31,000
陈正的朋友

177
00:06:31,000 --> 00:06:33,000
那里面提到了几个问题

178
00:06:33,000 --> 00:06:33,000
啊

179
00:06:33,000 --> 00:06:34,000
这个就说

180
00:06:34,000 --> 00:06:36,000
这就是当然是对我们 24 期节目

181
00:06:36,000 --> 00:06:37,000
是 24 期吧

182
00:06:37,000 --> 00:06:38,000
那个有个那个

183
00:06:38,000 --> 00:06:39,000
换专业的事情

184
00:06:39,000 --> 00:06:40,000
说到

185
00:06:40,000 --> 00:06:41,000
对

186
00:06:41,000 --> 00:06:42,000
对

187
00:06:42,000 --> 00:06:42,000
那他说

188
00:06:42,000 --> 00:06:45,000
这个我和反馈的那个听众

189
00:06:45,000 --> 00:06:47,000
有很有相似的情况和想法

190
00:06:47,000 --> 00:06:49,000
当然也做出一些让人惊讶的事情

191
00:06:49,000 --> 00:06:51,000
某本科和研究生都是工程专业

192
00:06:51,000 --> 00:06:54,000
但是一直心水计算机

193
00:06:54,000 --> 00:06:55,000
所以尝试

194
00:06:55,000 --> 00:06:56,000
考博

195
00:06:56,000 --> 00:06:57,000
是到这个

196
00:06:57,000 --> 00:06:58,000
Compular Science

197
00:06:59,000 --> 00:06:59,000
呃

198
00:06:59,000 --> 00:07:00,000
好像不是很现实

199
00:07:00,000 --> 00:07:03,000
但是目前结果还未知

200
00:07:03,000 --> 00:07:05,000
但是应该希望秒吗

201
00:07:05,000 --> 00:07:08,000
所以未来大概只能继续将计算机当作兴趣爱好

202
00:07:08,000 --> 00:07:10,000
做个学生的爱好者

203
00:07:10,000 --> 00:07:11,000
其实工程专专

204
00:07:11,000 --> 00:07:14,000
考去计算机还

205
00:07:14,000 --> 00:07:15,000
我觉得还好啊

206
00:07:15,000 --> 00:07:16,000
对

207
00:07:16,000 --> 00:07:18,000
我觉得要比 The other way around 容易一点

208
00:07:19,000 --> 00:07:20,000
比什么

209
00:07:20,000 --> 00:07:21,000
就是比反过来要容易一点

210
00:07:21,000 --> 00:07:22,000
对对对

211
00:07:22,000 --> 00:07:25,000
因为其实现在我觉得很缺那种

212
00:07:25,000 --> 00:07:28,000
具备这个足够的这个计算机的这个知识

213
00:07:28,000 --> 00:07:30,000
然后同时又精通某一个专业

214
00:07:30,000 --> 00:07:31,000
就这样

215
00:07:31,000 --> 00:07:34,000
这样这样你才可以去帮助那个专业的人

216
00:07:34,000 --> 00:07:36,000
去改善他们的工作状况

217
00:07:36,000 --> 00:07:38,000
写一些比如说对应的软件啊

218
00:07:38,000 --> 00:07:39,000
或者一些工具啊

219
00:07:39,000 --> 00:07:41,000
这样的东西出现了

220
00:07:41,000 --> 00:07:41,000
对

221
00:07:41,000 --> 00:07:43,000
所以其实我觉得这个还是很好的一件事情

222
00:07:43,000 --> 00:07:43,000
没错

223
00:07:43,000 --> 00:07:44,000
我觉得就好

224
00:07:44,000 --> 00:07:46,000
这个计算机就好像英语

225
00:07:46,000 --> 00:07:47,000
有专业英语

226
00:07:47,000 --> 00:07:47,000
对吧

227
00:07:47,000 --> 00:07:48,000
也有专业计算机

228
00:07:48,000 --> 00:07:50,000
你专门去学计算机

229
00:07:50,000 --> 00:07:54,000
反而不太可能写出一个某一个

230
00:07:54,000 --> 00:07:55,000
domain 的 application

231
00:07:55,000 --> 00:07:55,000
这个只有那个

232
00:07:55,000 --> 00:07:57,000
domain 的人来写才比较靠谱

233
00:07:57,000 --> 00:07:58,000
没错

234
00:07:58,000 --> 00:08:01,000
接着念他的那个反馈啊

235
00:08:01,000 --> 00:08:02,000
就说

236
00:08:02,000 --> 00:08:05,000
节目最后提到了微积分学习的事情

237
00:08:05,000 --> 00:08:06,000
因为我是工程专业的

238
00:08:06,000 --> 00:08:09,000
大概可以略微说一些自己的看法

239
00:08:09,000 --> 00:08:13,000
工程专业或者所有和力学相关的专业

240
00:08:13,000 --> 00:08:14,000
应该都会发现

241
00:08:14,000 --> 00:08:16,000
微积分的知识是必不可少的

242
00:08:16,000 --> 00:08:18,000
更广义的揣测

243
00:08:18,000 --> 00:08:22,000
所有和连续物理世界相关的领域都离不开微积分

244
00:08:22,000 --> 00:08:24,000
其实统计学如果没记错的话

245
00:08:24,000 --> 00:08:28,000
很多概率模型都要用到并不简单的微积分运算吧

246
00:08:28,000 --> 00:08:30,000
微分运算和积分运算

247
00:08:30,000 --> 00:08:34,000
作为一种和加减乘除并列的更高级的运算手段

248
00:08:34,000 --> 00:08:37,000
对于大部分领域的后续研究都是基本的工具

249
00:08:37,000 --> 00:08:40,000
所以本科学习中较大比重的微积分

250
00:08:40,000 --> 00:08:41,000
个人以为并没有问题

251
00:08:41,000 --> 00:08:45,000
至于大多数人觉得在日常生活中没有什么作用

252
00:08:45,000 --> 00:08:47,000
这个没必要提

253
00:08:47,000 --> 00:08:49,000
为什么没必要提呢

254
00:08:49,000 --> 00:08:51,000
他意思是我们在那一期里面说

255
00:08:51,000 --> 00:08:53,000
大多数人觉得日常生活中没什么作用

256
00:08:53,000 --> 00:08:55,000
这件事情其实没有什么必要说

257
00:08:55,000 --> 00:08:58,000
因为大多数人的感觉又有什么用

258
00:08:58,000 --> 00:08:59,000
又有什么意义

259
00:08:59,000 --> 00:09:01,000
对对对

260
00:09:01,000 --> 00:09:03,000
二位主播有同感的原因

261
00:09:03,000 --> 00:09:07,000
大概是计算机科学中完全没有微积分应用

262
00:09:07,000 --> 00:09:09,000
毕竟计算机是离散的世界

263
00:09:09,000 --> 00:09:13,000
是数学中非常深入狭窄的一个分支

264
00:09:13,000 --> 00:09:17,000
当然我也完全同意概率论和统计的学习的确不太够

265
00:09:17,000 --> 00:09:19,000
虽然当年是被略得死去后来

266
00:09:19,000 --> 00:09:22,000
这个是怎么说呢

267
00:09:22,000 --> 00:09:29,000
我觉得是这样子就是说我的观点是说不是说微积分不应该重点学

268
00:09:29,000 --> 00:09:32,000
而是说这个概率统计学的还不够

269
00:09:32,000 --> 00:09:33,000
嗯

270
00:09:33,000 --> 00:09:34,000
就是是个相对的概念对吧

271
00:09:34,000 --> 00:09:36,000
就是说如果说你一个危机

272
00:09:36,000 --> 00:09:38,000
然后当然他说这个日常生活中没有什么作用

273
00:09:38,000 --> 00:09:39,000
所以怎么这样

274
00:09:39,000 --> 00:09:42,000
这个我觉得可能是对这个这个什么

275
00:09:42,000 --> 00:09:45,000
通识教育的一个认知吧

276
00:09:45,000 --> 00:09:48,000
就是说从这个实用主义的观点出发

277
00:09:48,000 --> 00:09:53,000
就是说如果一个东西在现实生活中是更加有广泛应用场景的

278
00:09:53,000 --> 00:09:58,000
而另外一个东西在现实生活中可能很多人用不太到

279
00:09:58,000 --> 00:10:00,000
那么作为一个通识教育里面

280
00:10:00,000 --> 00:10:02,000
你去强调那个平时更加用不到的知识

281
00:10:02,000 --> 00:10:05,000
是不是有点奇怪

282
00:10:05,000 --> 00:10:14,000
或者说至少应该把那个概率统计放到和微积分同等重要的地位去讲教授和这个教学呢

283
00:10:14,000 --> 00:10:15,000
对吧

284
00:10:15,000 --> 00:10:16,000
对

285
00:10:16,000 --> 00:10:18,000
我觉得可能对于计算机专业来说

286
00:10:18,000 --> 00:10:23,000
这个微积分学学一就可以了

287
00:10:23,000 --> 00:10:28,000
然后那个概率和离散数学应该在比重多一点

288
00:10:28,000 --> 00:10:28,000
对

289
00:10:28,000 --> 00:10:29,000
对

290
00:10:29,000 --> 00:10:31,000
差不多这个意思吧

291
00:10:31,000 --> 00:10:32,000
当然这个什么

292
00:10:32,000 --> 00:10:33,000
各个专业

293
00:10:33,000 --> 00:10:37,000
各个专业的这个特殊的需求吧

294
00:10:37,000 --> 00:10:38,000
没错

295
00:10:38,000 --> 00:10:44,000
或者说你是不是说觉得国内那种就是理工科基础教育一刀切的方法不是很好啊

296
00:10:44,000 --> 00:10:48,000
还是要针对各个专业有自己的这个偏重和这个擅长啊

297
00:10:48,000 --> 00:10:49,000
我觉得还是应该考虑一下这种问题

298
00:10:49,000 --> 00:10:50,000
对

299
00:10:50,000 --> 00:10:52,000
教育是个大问题

300
00:10:52,000 --> 00:10:53,000
对

301
00:10:53,000 --> 00:10:59,000
下一条听证反馈是一位叫做 Gary 的听众的来信啊

302
00:10:59,000 --> 00:11:03,000
他是吐槽我们说那个说程序员的那个职业选择的哈

303
00:11:03,000 --> 00:11:07,000
他说这个题目可以聊一天啊

304
00:11:07,000 --> 00:11:08,000
你们高效的解决了听众反馈后

305
00:11:08,000 --> 00:11:09,000
听众反馈后

306
00:11:09,000 --> 00:11:10,000
花了一个小时聊游戏

307
00:11:10,000 --> 00:11:11,000
啊啊啊

308
00:11:11,000 --> 00:11:13,000
最后聊了半个小时

309
00:11:13,000 --> 00:11:13,000
这个题目

310
00:11:13,000 --> 00:11:15,000
然后说意而未尽

311
00:11:15,000 --> 00:11:15,000
意而未尽啊

312
00:11:15,000 --> 00:11:19,000
这个我们之后再找

313
00:11:19,000 --> 00:11:20,000
再找机会聊吧

314
00:11:20,000 --> 00:11:22,000
我觉得还是很多事情可以讲的

315
00:11:22,000 --> 00:11:22,000
对

316
00:11:22,000 --> 00:11:24,000
毕竟这个是一个

317
00:11:24,000 --> 00:11:27,000
这是一个很水很湿的问题

318
00:11:27,000 --> 00:11:28,000
然后就说

319
00:11:28,000 --> 00:11:29,000
很有很多这种

320
00:11:29,000 --> 00:11:31,000
你想象应该场景哈

321
00:11:31,000 --> 00:11:32,000
两个这个什么

322
00:11:32,000 --> 00:11:34,000
加班过渡

323
00:11:34,000 --> 00:11:36,000
然后这个两颜不满学思的程式员

324
00:11:36,000 --> 00:11:38,000
对坐着

325
00:11:38,000 --> 00:11:40,000
这个什么相对无言

326
00:11:40,000 --> 00:11:41,000
唯有泪千

327
00:11:41,000 --> 00:11:43,000
好像在聊各自的心酸史

328
00:11:43,000 --> 00:11:46,000
你老婆睡了吗

329
00:11:46,000 --> 00:11:47,000
我老婆也睡了

330
00:11:47,000 --> 00:11:50,000
万管好了吗

331
00:11:50,000 --> 00:11:50,000
对吧

332
00:11:50,000 --> 00:11:52,000
还是你的这个

333
00:11:52,000 --> 00:11:53,000
你的背痛呢

334
00:11:53,000 --> 00:11:53,000
挺好的

335
00:11:53,000 --> 00:11:55,000
你的背痛问题解决了没

336
00:11:55,000 --> 00:11:59,000
鼠标手是不是还是依旧是吧

337
00:11:59,000 --> 00:12:01,000
还是有一种这么虚寒无暖的

338
00:12:01,000 --> 00:12:02,000
关切的感觉

339
00:12:02,000 --> 00:12:03,000
然后立刻开始说

340
00:12:03,000 --> 00:12:05,000
我为了改善症状买了一个

341
00:12:05,000 --> 00:12:06,000
那个轨迹球

342
00:12:06,000 --> 00:12:07,000
然后另外一个说

343
00:12:07,000 --> 00:12:09,000
啊不是有那种竖起来的鼠标吗

344
00:12:09,000 --> 00:12:10,000
然后就开始套文印去

345
00:12:10,000 --> 00:12:15,000
最后又闯到了那个什么

346
00:12:15,000 --> 00:12:17,000
人体工学键盘上面去

347
00:12:17,000 --> 00:12:17,000
对吧

348
00:12:17,000 --> 00:12:17,000
对

349
00:12:17,000 --> 00:12:19,000
这就是死宅

350
00:12:19,000 --> 00:12:25,000
下一条听众反馈

351
00:12:25,000 --> 00:12:26,000
武德老师

352
00:12:26,000 --> 00:12:26,000
瑞伍老师

353
00:12:26,000 --> 00:12:27,000
你才是老师

354
00:12:27,000 --> 00:12:29,000
你们好

355
00:12:29,000 --> 00:12:32,000
首先恭喜节目复过

356
00:12:32,000 --> 00:12:34,000
若有幸被朗读

357
00:12:34,000 --> 00:12:35,000
恳请匿名写信

358
00:12:35,000 --> 00:12:36,000
第一次给你们写信

359
00:12:36,000 --> 00:12:37,000
其实跟本期的内容

360
00:12:37,000 --> 00:12:39,000
没有太大的关系

361
00:12:39,000 --> 00:12:40,000
这次又在节目

362
00:12:40,000 --> 00:12:42,000
听到了两个本该如雷挂

363
00:12:42,000 --> 00:12:43,000
人名字

364
00:12:43,000 --> 00:12:45,000
Daniel J. Bernstein

365
00:12:45,000 --> 00:12:45,000
和

366
00:12:45,000 --> 00:12:47,000
Kate Thompson

367
00:12:47,000 --> 00:12:52,000
然而身为即将毕业的计算机系学生

368
00:12:52,000 --> 00:12:55,000
一心想要成为成学的我

369
00:12:55,000 --> 00:12:56,000
却如以往一样

370
00:12:56,000 --> 00:12:58,000
对这两个名字一无所知

371
00:12:58,000 --> 00:13:00,000
或许是由于课业压力较大

372
00:13:00,000 --> 00:13:02,000
平时在学习密码学和 C 语言的时候

373
00:13:02,000 --> 00:13:05,000
所以他是学信相权的

374
00:13:05,000 --> 00:13:08,000
没有多余的精力去关注

375
00:13:08,000 --> 00:13:10,000
其背后的发展和历史

376
00:13:10,000 --> 00:13:11,000
事实上

377
00:13:11,000 --> 00:13:12,000
不知道这些故事

378
00:13:12,000 --> 00:13:13,000
也未必阻碍我们

379
00:13:13,000 --> 00:13:16,000
也未必会阻碍我们写出优秀的程序

380
00:13:16,000 --> 00:13:17,000
但我总觉得

381
00:13:17,000 --> 00:13:19,000
如果想要深入研究某一个领域

382
00:13:19,000 --> 00:13:22,000
一定应该了解到它的方方面面

383
00:13:22,000 --> 00:13:24,000
从而接触到这些故事

384
00:13:24,000 --> 00:13:26,000
他们并非是通往某一领域的钥匙

385
00:13:26,000 --> 00:13:28,000
而是征服这一领域之后

386
00:13:28,000 --> 00:13:31,000
能证明自身能力的勋章

387
00:13:31,000 --> 00:13:33,000
或许是比较糟糕的比喻

388
00:13:33,000 --> 00:13:34,000
很好的一个比喻

389
00:13:34,000 --> 00:13:35,000
是

390
00:13:35,000 --> 00:13:36,000
很好的一个比喻

391
00:13:36,000 --> 00:13:38,000
就好像告白

392
00:13:38,000 --> 00:13:41,000
不是发起冲锋的号角

393
00:13:41,000 --> 00:13:45,000
而是获得芳心的

394
00:13:45,000 --> 00:13:47,000
叫什么来着

395
00:13:47,000 --> 00:13:49,000
这句话是哪里的

396
00:13:49,000 --> 00:13:50,000
礼炮

397
00:13:50,000 --> 00:13:50,000
对

398
00:13:50,000 --> 00:13:51,000
这是指乎上面的

399
00:13:51,000 --> 00:13:52,000
还是哪里的一句话

400
00:13:52,000 --> 00:13:55,000
说我应该跟一个女孩子告白

401
00:13:55,000 --> 00:13:55,000
答案是

402
00:13:55,000 --> 00:13:57,000
告白不是拿来

403
00:13:57,000 --> 00:14:00,000
就是告诉对方我要追你的

404
00:14:00,000 --> 00:14:02,000
而是追到了之后

405
00:14:02,000 --> 00:14:03,000
就宣告这个

406
00:14:03,000 --> 00:14:04,000
宣告战果的

407
00:14:04,000 --> 00:14:05,000
OK

408
00:14:05,000 --> 00:14:07,000
Back to the feedback

409
00:14:07,000 --> 00:14:11,000
这也让我再次体会到

410
00:14:11,000 --> 00:14:13,000
仅凭学校的知识

411
00:14:13,000 --> 00:14:15,000
很难对于某个领域有深入的了解

412
00:14:15,000 --> 00:14:17,000
我相信这并非只是我一个人的情况

413
00:14:17,000 --> 00:14:18,000
身在一所国内

414
00:14:18,000 --> 00:14:20,000
括号大多数情况下

415
00:14:20,000 --> 00:14:22,000
排名 top 5 的学校

416
00:14:22,000 --> 00:14:25,000
很多周围的同学

417
00:14:25,000 --> 00:14:26,000
没有 GitHub 的账号

418
00:14:26,000 --> 00:14:28,000
喜欢用 QQ 传代码

419
00:14:28,000 --> 00:14:29,000
写几十行的程序

420
00:14:29,000 --> 00:14:30,000
要开 Visual Studio

421
00:14:30,000 --> 00:14:33,000
翻墙只为上 Facebook

422
00:14:33,000 --> 00:14:36,000
很可能也没有听说过那几个

423
00:14:36,000 --> 00:14:37,000
如在过长的名字

424
00:14:37,000 --> 00:14:40,000
括号更不太可能收听贵节目

425
00:14:40,000 --> 00:14:46,000
虽然有较强的理论基础作为支撑

426
00:14:46,000 --> 00:14:49,000
写出来的程序一般也能够达到要求

427
00:14:49,000 --> 00:14:51,000
但总觉得这样以后会越来越困难

428
00:14:51,000 --> 00:14:55,000
不过很多同学可能会专注于计算机科学研究

429
00:14:55,000 --> 00:14:58,000
这些问题未必严重

430
00:14:58,000 --> 00:15:00,000
但是对于以后想要专心写代码

431
00:15:00,000 --> 00:15:01,000
就会头疼了

432
00:15:01,000 --> 00:15:03,000
之前几年一直没有认识到这些问题

433
00:15:03,000 --> 00:15:05,000
从来没有在课外

434
00:15:05,000 --> 00:15:07,000
也很少在课外拓展知识

435
00:15:07,000 --> 00:15:08,000
积累实际经验

436
00:15:08,000 --> 00:15:10,000
工作以后说不定就会变成

437
00:15:10,000 --> 00:15:13,000
V 2 EX 上面被吐槽的奇葩程序

438
00:15:13,000 --> 00:15:15,000
不知道两位老师

439
00:15:15,000 --> 00:15:17,000
有没有这样经历过这样的阶段呢

440
00:15:17,000 --> 00:15:18,000
如果有

441
00:15:18,000 --> 00:15:20,000
又是如何突破这一阶段呢

442
00:15:20,000 --> 00:15:22,000
这个怎么说呢

443
00:15:22,000 --> 00:15:25,000
EVERYONE USED TO BE A NOON

444
00:15:25,000 --> 00:15:27,000
总会有一个

445
00:15:27,000 --> 00:15:31,000
我觉得他起码意识到这个东西是有点意思的

446
00:15:31,000 --> 00:15:32,000
可以怎么说呢

447
00:15:32,000 --> 00:15:35,000
如果说我们 IT 行业还有点人文精神的话

448
00:15:35,000 --> 00:15:38,000
可能这也就是所谓这种东西吧

449
00:15:38,000 --> 00:15:39,000
是不是

450
00:15:39,000 --> 00:15:43,000
我觉得其实就是一个 Lore 传承的问题

451
00:15:43,000 --> 00:15:44,000
Lore 这个东西

452
00:15:44,000 --> 00:15:45,000
相遥

453
00:15:45,000 --> 00:15:46,000
Folklore

454
00:15:46,000 --> 00:15:48,000
对 Folklore

455
00:15:48,000 --> 00:15:51,000
你要不去主动的去接触的话

456
00:15:51,000 --> 00:15:53,000
你是不会知道的

457
00:15:53,000 --> 00:15:56,000
或者说你是需要有人去给你传承的

458
00:15:56,000 --> 00:15:58,000
如果你前人没有告诉你这个东西

459
00:15:58,000 --> 00:16:02,000
或者说你所处的圈子不对

460
00:16:02,000 --> 00:16:03,000
那你接触不到这些

461
00:16:03,000 --> 00:16:05,000
我觉得也是挺正常的一件事情

462
00:16:05,000 --> 00:16:06,000
对

463
00:16:06,000 --> 00:16:08,000
或者就是你根本就是

464
00:16:08,000 --> 00:16:10,000
你在中文圈子里面

465
00:16:10,000 --> 00:16:12,000
就的确是很难接触到

466
00:16:12,000 --> 00:16:15,000
Bernstein 或者是 Thompson 这种

467
00:16:15,000 --> 00:16:17,000
教材里面不会讲吗

468
00:16:17,000 --> 00:16:19,000
对

469
00:16:19,000 --> 00:16:21,000
然后好像其实

470
00:16:21,000 --> 00:16:24,000
可能跟中文技术资料的匮乏

471
00:16:24,000 --> 00:16:25,000
可能也有点关系

472
00:16:25,000 --> 00:16:25,000
就是说

473
00:16:25,000 --> 00:16:27,000
中文的教科书里面

474
00:16:27,000 --> 00:16:30,000
基本上就是序论前沿讲一下

475
00:16:30,000 --> 00:16:32,000
然后后面就再也不设计了

476
00:16:32,000 --> 00:16:32,000
纯干货

477
00:16:32,000 --> 00:16:33,000
不讲画边

478
00:16:33,000 --> 00:16:34,000
对吧

479
00:16:34,000 --> 00:16:38,000
后面就是把 index 或者 user manual

480
00:16:38,000 --> 00:16:38,000
给你翻译一遍

481
00:16:38,000 --> 00:16:40,000
就不会有什么

482
00:16:40,000 --> 00:16:41,000
那种外国家在旁边有个小条

483
00:16:41,000 --> 00:16:42,000
告诉你

484
00:16:42,000 --> 00:16:43,000
你知道吗

485
00:16:43,000 --> 00:16:44,000
这个是干嘛的

486
00:16:44,000 --> 00:16:45,000
还做什么事

487
00:16:45,000 --> 00:16:46,000
Side note

488
00:16:46,000 --> 00:16:49,000
我觉得最开始看英文书的时候

489
00:16:49,000 --> 00:16:50,000
其实很讨厌 Side note

490
00:16:50,000 --> 00:16:51,000
因为 Side note 是一个

491
00:16:51,000 --> 00:16:56,000
会打断你的阅读 flow 的一个东西

492
00:16:56,000 --> 00:16:57,000
对那儿

493
00:16:57,000 --> 00:16:58,000
我觉得是的

494
00:16:58,000 --> 00:17:03,000
就是你正在读正文

495
00:17:03,000 --> 00:17:04,000
然后旁边突然出来一个

496
00:17:04,000 --> 00:17:05,000
尤其是那种

497
00:17:05,000 --> 00:17:08,000
就是不占据整个页面宽度的 Side note

498
00:17:08,000 --> 00:17:12,000
就它在旁边的测栏的刘白那边小条

499
00:17:12,000 --> 00:17:13,000
有没有那种

500
00:17:13,000 --> 00:17:14,000
对

501
00:17:14,000 --> 00:17:15,000
然后我就会特别纠结

502
00:17:15,000 --> 00:17:18,000
我说我是应该先把这一段正文读完

503
00:17:18,000 --> 00:17:19,000
再去跳 Side note

504
00:17:19,000 --> 00:17:21,000
还是根据 Side note 的物理位置

505
00:17:21,000 --> 00:17:23,000
实体位置去先读 Side note

506
00:17:23,000 --> 00:17:24,000
再跳回去读正文

507
00:17:24,000 --> 00:17:27,000
所以其实我还蛮喜欢有这种 Side note 的

508
00:17:27,000 --> 00:17:28,000
我记得好像

509
00:17:28,000 --> 00:17:30,000
对我现在挺喜欢的

510
00:17:30,000 --> 00:17:32,000
但是就那个时候可能有一种

511
00:17:32,000 --> 00:17:34,000
还是喜欢读干货是吧

512
00:17:34,000 --> 00:17:35,000
对

513
00:17:35,000 --> 00:17:39,000
但其实如果有 Side note 的话

514
00:17:39,000 --> 00:17:39,000
你是可以选择

515
00:17:39,000 --> 00:17:40,000
就是你时间不够的话

516
00:17:40,000 --> 00:17:41,000
就不要读 Side note

517
00:17:41,000 --> 00:17:43,000
Side note 之所以是 Side note

518
00:17:43,000 --> 00:17:44,000
就因为它没有那么重要

519
00:17:44,000 --> 00:17:45,000
它是 optional content

520
00:17:45,000 --> 00:17:46,000
做者觉得对

521
00:17:46,000 --> 00:17:48,000
所以我觉得这个其实蛮重要的

522
00:17:48,000 --> 00:17:51,000
就是说起码可能我印象中

523
00:17:51,000 --> 00:17:52,000
大学的教材里面

524
00:17:52,000 --> 00:17:55,000
可能这种干货会比较满满

525
00:17:55,000 --> 00:17:56,000
就至少国产教材里面

526
00:17:56,000 --> 00:17:58,000
干货会比较满满的

527
00:17:58,000 --> 00:17:59,000
然后像一些洋教材

528
00:17:59,000 --> 00:18:01,000
可能就会把这种

529
00:18:01,000 --> 00:18:05,000
这些一些诗货混进去

530
00:18:05,000 --> 00:18:06,000
其实我还蛮喜欢看那些诗货的

531
00:18:06,000 --> 00:18:07,000
这样有一个

532
00:18:07,000 --> 00:18:09,000
别的不说

533
00:18:09,000 --> 00:18:11,000
你起码有一个谈资了

534
00:18:11,000 --> 00:18:11,000
对吧

535
00:18:11,000 --> 00:18:13,000
对

536
00:18:13,000 --> 00:18:15,000
就国外的教材比较接近于教学的教材

537
00:18:15,000 --> 00:18:17,000
国内教材更像于考试的教材

538
00:18:17,000 --> 00:18:19,000
好残酷

539
00:18:19,000 --> 00:18:20,000
要不要这么值得

540
00:18:20,000 --> 00:18:23,000
这是鸡精和鸡汤的差别

541
00:18:23,000 --> 00:18:26,000
吃国内的鸡精的话

542
00:18:26,000 --> 00:18:27,000
你得自己掺水进去

543
00:18:27,000 --> 00:18:29,000
不然又能会大面干燥

544
00:18:29,000 --> 00:18:30,000
好吗

545
00:18:30,000 --> 00:18:32,000
哈哈哈哈

546
00:18:32,000 --> 00:18:37,000
perfect analogy

547
00:18:37,000 --> 00:18:38,000
对

548
00:18:38,000 --> 00:18:40,000
然后如何说

549
00:18:40,000 --> 00:18:44,000
怎么突破这个不用吉他

550
00:18:44,000 --> 00:18:44,000
等一下

551
00:18:44,000 --> 00:18:48,000
他说大多数情况下排名 top 的学校是哪一间

552
00:18:48,000 --> 00:18:52,000
只有前二是确定了

553
00:18:52,000 --> 00:18:53,000
后面三个一直在混

554
00:18:53,000 --> 00:18:54,000
我想想

555
00:18:54,000 --> 00:18:55,000
交代

556
00:18:55,000 --> 00:18:55,000
复旦

557
00:18:55,000 --> 00:18:57,000
这俩谁排第三

558
00:18:57,000 --> 00:18:59,000
不一定吧

559
00:18:59,000 --> 00:19:01,000
有时候也有经常这种大学参户起来

560
00:19:01,000 --> 00:19:02,000
什么浙大

561
00:19:02,000 --> 00:19:04,000
没有某长者的话

562
00:19:04,000 --> 00:19:06,000
可能交代应该还是要

563
00:19:06,000 --> 00:19:10,000
然后复旦之后南京

564
00:19:10,000 --> 00:19:10,000
我觉得

565
00:19:10,000 --> 00:19:13,000
像我们这种

566
00:19:13,000 --> 00:19:15,000
十名左右的学校就没有这种担忧了

567
00:19:15,000 --> 00:19:19,000
我可以说大多数情况下 top 10 的吗

568
00:19:19,000 --> 00:19:24,000
中生大学还是要比中南大学高

569
00:19:24,000 --> 00:19:24,000
轮弱

570
00:19:24,000 --> 00:19:27,000
那你是不是更不担忧这个问题了

571
00:19:27,000 --> 00:19:28,000
对

572
00:19:28,000 --> 00:19:29,000
who cares

573
00:19:29,000 --> 00:19:30,000
I don't give a fuck

574
00:19:30,000 --> 00:19:32,000
bh

575
00:19:32,000 --> 00:19:34,000
完了这一期要 expect

576
00:19:34,000 --> 00:19:35,000
算了

577
00:19:35,000 --> 00:19:39,000
他说做的东西很多没有吉他

578
00:19:39,000 --> 00:19:40,000
这个

579
00:19:40,000 --> 00:19:43,000
这怎么说呢

580
00:19:43,000 --> 00:19:45,000
文化吧还是

581
00:19:45,000 --> 00:19:48,000
因为现在好像学校教作业还是 SVN 的比较多吧

582
00:19:48,000 --> 00:19:50,000
主要是有一个非常讨厌的

583
00:19:50,000 --> 00:19:52,000
不可

584
00:19:52,000 --> 00:19:55,000
需要愉悦的东西在那

585
00:19:55,000 --> 00:19:56,000
不可说的因素

586
00:19:56,000 --> 00:19:56,000
对

587
00:19:56,000 --> 00:19:58,000
有一个不可说的因素在那边

588
00:19:58,000 --> 00:19:59,000
然后另外一个就是

589
00:19:59,000 --> 00:20:00,000
学现的还好

590
00:20:00,000 --> 00:20:01,000
也不一定

591
00:20:01,000 --> 00:20:01,000
对

592
00:20:01,000 --> 00:20:03,000
Git 的学习

593
00:20:03,000 --> 00:20:04,000
学习曲线还是比较陡峭

594
00:20:04,000 --> 00:20:08,000
上手还蛮简单的吧

595
00:20:08,000 --> 00:20:08,000
至少

596
00:20:08,000 --> 00:20:12,000
XKCD 不是有一个原版的话

597
00:20:12,000 --> 00:20:13,000
是最清楚的吧

598
00:20:13,000 --> 00:20:14,000
还是忘了

599
00:20:14,000 --> 00:20:14,000
反正就

600
00:20:14,000 --> 00:20:15,000
等等

601
00:20:15,000 --> 00:20:16,000
我明白了

602
00:20:16,000 --> 00:20:18,000
因为可能跟 COME 那个有关系

603
00:20:18,000 --> 00:20:20,000
他说写几十行成员都要开 Visual Studio

604
00:20:20,000 --> 00:20:21,000
说明是在 Windows 上面

605
00:20:21,000 --> 00:20:22,000
对吧

606
00:20:22,000 --> 00:20:24,000
Git 在 Windows 上面是一拖式

607
00:20:24,000 --> 00:20:26,000
说得也是

608
00:20:26,000 --> 00:20:28,000
所以可能跟这个系统的选择

609
00:20:28,000 --> 00:20:30,000
或者工具链的选择还是有一定的关系

610
00:20:30,000 --> 00:20:30,000
其实一个

611
00:20:30,000 --> 00:20:31,000
对

612
00:20:31,000 --> 00:20:32,000
其实一个

613
00:20:32,000 --> 00:20:35,000
就这么说吧

614
00:20:35,000 --> 00:20:37,000
你不喜欢命令行的话

615
00:20:37,000 --> 00:20:39,000
基本上就没有可能用 Git 了吧

616
00:20:39,000 --> 00:20:40,000
对

617
00:20:40,000 --> 00:20:42,000
就我们节目之前

618
00:20:42,000 --> 00:20:46,000
不是说就这期开始已经没有什么主题了

619
00:20:46,000 --> 00:20:47,000
我们只是胡扯而已

620
00:20:47,000 --> 00:20:49,000
就是然后但是被选的主题

621
00:20:49,000 --> 00:20:52,000
其实还是有比如说 Command Line

622
00:20:52,000 --> 00:20:54,000
可以讨论一下各种 Shell

623
00:20:54,000 --> 00:20:55,000
然后讨论一下 Command Line

624
00:20:55,000 --> 00:20:56,000
为什么是

625
00:20:56,000 --> 00:20:58,000
为什么一直

626
00:20:58,000 --> 00:21:00,000
赶快写到下期的题上里面

627
00:21:00,000 --> 00:21:01,000
不然下期又没提说了

628
00:21:01,000 --> 00:21:02,000
说得是

629
00:21:02,000 --> 00:21:03,000
对

630
00:21:03,000 --> 00:21:05,000
然后这个 Git 是一个

631
00:21:05,000 --> 00:21:06,000
其实是一个很奇葩的东西

632
00:21:06,000 --> 00:21:08,000
就是如果你习惯了 Command Line 的话

633
00:21:08,000 --> 00:21:11,000
你会发现 Git 没有一个

634
00:21:11,000 --> 00:21:13,000
那 make so much sense

635
00:21:13,000 --> 00:21:13,000
对

636
00:21:13,000 --> 00:21:14,000
对

637
00:21:14,000 --> 00:21:16,000
没有一个需要用到的

638
00:21:16,000 --> 00:21:17,000
GUI

639
00:21:17,000 --> 00:21:18,000
GUI

640
00:21:18,000 --> 00:21:18,000
对

641
00:21:18,000 --> 00:21:20,000
唯一一个 GUI

642
00:21:20,000 --> 00:21:22,000
甚至也是在 Command Line 下面实现

643
00:21:22,000 --> 00:21:23,000
比较

644
00:21:23,000 --> 00:21:23,000
我想了一下

645
00:21:23,000 --> 00:21:24,000
这 Git 的 GUI

646
00:21:24,000 --> 00:21:26,000
可能唯一就是考出看那个

647
00:21:26,000 --> 00:21:28,000
看那个就是那个 Commit History

648
00:21:28,000 --> 00:21:30,000
Tick

649
00:21:30,000 --> 00:21:30,000
对

650
00:21:30,000 --> 00:21:31,000
就你只需要一个 Tick

651
00:21:31,000 --> 00:21:32,000
对

652
00:21:32,000 --> 00:21:32,000
Tick 的工具

653
00:21:32,000 --> 00:21:33,000
对

654
00:21:33,000 --> 00:21:34,000
然后就够了

655
00:21:34,000 --> 00:21:37,000
然后用 QQ 传代码

656
00:21:37,000 --> 00:21:37,000
就什么样的精神

657
00:21:37,000 --> 00:21:39,000
因为

658
00:21:39,000 --> 00:21:42,000
不是说现在所有的大学生

659
00:21:42,000 --> 00:21:43,000
最常用的

660
00:21:43,000 --> 00:21:44,000
我忘了

661
00:21:44,000 --> 00:21:45,000
我在什么地方看到了

662
00:21:45,000 --> 00:21:45,000
说这个

663
00:21:45,000 --> 00:21:47,000
现在 90 后

664
00:21:47,000 --> 00:21:49,000
最常用的东西是 QQ

665
00:21:49,000 --> 00:21:50,000
不我明白用 QQ

666
00:21:50,000 --> 00:21:51,000
聊天

667
00:21:51,000 --> 00:21:52,000
我完全没有意见

668
00:21:52,000 --> 00:21:53,000
我也用了之前

669
00:21:53,000 --> 00:21:54,000
我上大学的时候

670
00:21:54,000 --> 00:21:55,000
问题是说

671
00:21:55,000 --> 00:21:56,000
用 QQ 传代码

672
00:21:56,000 --> 00:21:58,000
是为了哪办

673
00:21:58,000 --> 00:22:00,000
因为 QQ 可以传文件了

674
00:22:00,000 --> 00:22:02,000
而且所有人都开始 QQ 了

675
00:22:02,000 --> 00:22:02,000
不

676
00:22:02,000 --> 00:22:03,000
我知道

677
00:22:03,000 --> 00:22:04,000
但为什么要传

678
00:22:04,000 --> 00:22:06,000
为什么要传这个文件

679
00:22:06,000 --> 00:22:07,000
这个文件是代码

680
00:22:07,000 --> 00:22:07,000
Why

681
00:22:07,000 --> 00:22:11,000
就让我看看你的程序怎么写的

682
00:22:11,000 --> 00:22:12,000
不然你放哪了

683
00:22:12,000 --> 00:22:14,000
那你直接贴代码片段

684
00:22:14,000 --> 00:22:17,000
如果太长

685
00:22:17,000 --> 00:22:20,000
QQ 的传输有限制吗

686
00:22:20,000 --> 00:22:21,000
而且还有一个问题

687
00:22:21,000 --> 00:22:22,000
你说多个文件的时候

688
00:22:22,000 --> 00:22:22,000
是吧

689
00:22:22,000 --> 00:22:23,000
而且还有一个问题

690
00:22:23,000 --> 00:22:24,000
就是你

691
00:22:24,000 --> 00:22:26,000
我会觉得在

692
00:22:26,000 --> 00:22:27,000
对

693
00:22:27,000 --> 00:22:29,000
而且有些人会用奇葩的字体

694
00:22:29,000 --> 00:22:29,000
是吗

695
00:22:29,000 --> 00:22:31,000
就是非等宽的字体

696
00:22:31,000 --> 00:22:32,000
在 QQ 里面

697
00:22:32,000 --> 00:22:33,000
然后

698
00:22:33,000 --> 00:22:34,000
所以 Pastebin

699
00:22:34,000 --> 00:22:35,000
还是很有用的

700
00:22:35,000 --> 00:22:38,000
但国内没有 Pastebin

701
00:22:38,000 --> 00:22:39,000
Pastebin 也不太好用

702
00:22:39,000 --> 00:22:40,000
如果说多个文件的话

703
00:22:40,000 --> 00:22:41,000
它是 Pastebin 单个文件

704
00:22:41,000 --> 00:22:42,000
可能还行

705
00:22:42,000 --> 00:22:44,000
所以

706
00:22:44,000 --> 00:22:45,000
其实还是

707
00:22:45,000 --> 00:22:46,000
就是邮件

708
00:22:46,000 --> 00:22:47,000
我觉得就是

709
00:22:47,000 --> 00:22:48,000
纯文本邮件用的

710
00:22:48,000 --> 00:22:50,000
还不够熟练的原因

711
00:22:50,000 --> 00:22:50,000
因为

712
00:22:50,000 --> 00:22:51,000
其实在

713
00:22:51,000 --> 00:22:53,000
据我所知道

714
00:22:53,000 --> 00:22:54,000
就是 Git

715
00:22:54,000 --> 00:22:55,000
出现之前

716
00:22:55,000 --> 00:22:56,000
Linux Kernel 上面

717
00:22:56,000 --> 00:22:57,000
他们做

718
00:22:57,000 --> 00:22:58,000
patch 的时候

719
00:22:58,000 --> 00:22:59,000
都是通过邮件

720
00:22:59,000 --> 00:22:59,000
发 Diff

721
00:22:59,000 --> 00:23:01,000
所以

722
00:23:01,000 --> 00:23:03,000
中国的问题是

723
00:23:03,000 --> 00:23:04,000
不会用 Diff

724
00:23:04,000 --> 00:23:07,000
就是中国是

725
00:23:07,000 --> 00:23:08,000
Email never took off

726
00:23:08,000 --> 00:23:10,000
大学里面还好吧

727
00:23:10,000 --> 00:23:11,000
你这么觉得吗

728
00:23:11,000 --> 00:23:12,000
我上大学的时候

729
00:23:12,000 --> 00:23:14,000
四年发过四十分点

730
00:23:14,000 --> 00:23:15,000
就不错了

731
00:23:15,000 --> 00:23:16,000
Holy shit

732
00:23:16,000 --> 00:23:17,000
怎么可能

733
00:23:17,000 --> 00:23:19,000
差不多吧

734
00:23:19,000 --> 00:23:20,000
就除了申请学校的时候

735
00:23:20,000 --> 00:23:21,000
发了很多之外

736
00:23:21,000 --> 00:23:23,000
你平时都不发吗

737
00:23:23,000 --> 00:23:24,000
我上大学的时候

738
00:23:24,000 --> 00:23:25,000
2003

739
00:23:25,000 --> 00:23:27,000
2004 年

740
00:23:27,000 --> 00:23:28,000
我发邮件给谁

741
00:23:28,000 --> 00:23:30,000
同学

742
00:23:30,000 --> 00:23:33,000
我发邮件给老爸过

743
00:23:33,000 --> 00:23:33,000
对

744
00:23:33,000 --> 00:23:33,000
我跟

745
00:23:33,000 --> 00:23:37,000
我曾经家书是用邮件发的

746
00:23:37,000 --> 00:23:37,000
这么先进

747
00:23:37,000 --> 00:23:37,000
可是

748
00:23:37,000 --> 00:23:39,000
可是

749
00:23:39,000 --> 00:23:40,000
由同学

750
00:23:40,000 --> 00:23:42,000
我们是

751
00:23:42,000 --> 00:23:43,000
我也不知道

752
00:23:43,000 --> 00:23:44,000
我的同班同学

753
00:23:44,000 --> 00:23:45,000
因为我们是学

754
00:23:45,000 --> 00:23:46,000
新宣传的

755
00:23:46,000 --> 00:23:47,000
然后

756
00:23:47,000 --> 00:23:50,000
大概在

757
00:23:50,000 --> 00:23:51,000
你们觉得邮件不安全吗

758
00:23:51,000 --> 00:23:52,000
不是

759
00:23:52,000 --> 00:23:53,000
80%的人

760
00:23:53,000 --> 00:23:54,000
买了电脑之后

761
00:23:54,000 --> 00:23:55,000
我们就手工

762
00:23:55,000 --> 00:23:57,000
把所有的寝室

763
00:23:57,000 --> 00:23:58,000
用局域网连下来

764
00:23:58,000 --> 00:23:59,000
然后

765
00:23:59,000 --> 00:24:01,000
你们学校没有校园网

766
00:24:01,000 --> 00:24:02,000
没有校园网

767
00:24:02,000 --> 00:24:02,000
What

768
00:24:02,000 --> 00:24:04,000
就校园网是一个

769
00:24:04,000 --> 00:24:05,000
我们只有

770
00:24:05,000 --> 00:24:07,000
自己拨号的

771
00:24:07,000 --> 00:24:08,000
上网的宽带

772
00:24:08,000 --> 00:24:10,000
但没有校园内部的局域网

773
00:24:10,000 --> 00:24:11,000
蛤

774
00:24:11,000 --> 00:24:13,000
Don't ask me why

775
00:24:13,000 --> 00:24:14,000
事实就是

776
00:24:14,000 --> 00:24:15,000
Seriously

777
00:24:15,000 --> 00:24:16,000
不会吧

778
00:24:16,000 --> 00:24:17,000
你们什么

779
00:24:17,000 --> 00:24:18,000
你们什么在

780
00:24:18,000 --> 00:24:19,000
那个校园网上

781
00:24:19,000 --> 00:24:20,000
传 A 片这种事情

782
00:24:20,000 --> 00:24:21,000
我都只听过

783
00:24:21,000 --> 00:24:21,000
从来没有见过

784
00:24:21,000 --> 00:24:22,000
那你们有 BBS 吗

785
00:24:22,000 --> 00:24:25,000
我们的 BBS 是一个 PHP 系统

786
00:24:25,000 --> 00:24:27,000
没有那个

787
00:24:27,000 --> 00:24:27,000
Discord

788
00:24:27,000 --> 00:24:28,000
Telnet

789
00:24:28,000 --> 00:24:28,000
没有那个

790
00:24:28,000 --> 00:24:29,000
没有那个 Telnet

791
00:24:29,000 --> 00:24:31,000
好像曾经有

792
00:24:31,000 --> 00:24:33,000
云路有二位忘了

793
00:24:33,000 --> 00:24:33,000
但

794
00:24:33,000 --> 00:24:34,000
不会吧

795
00:24:34,000 --> 00:24:36,000
真的假的

796
00:24:36,000 --> 00:24:36,000
对

797
00:24:36,000 --> 00:24:39,000
当然

798
00:24:39,000 --> 00:24:39,000
当然

799
00:24:39,000 --> 00:24:40,000
因为学校有关

800
00:24:40,000 --> 00:24:41,000
因为我最开始在的

801
00:24:41,000 --> 00:24:42,000
那个校区是一个

802
00:24:42,000 --> 00:24:44,000
被后来被合并的校区

803
00:24:44,000 --> 00:24:44,000
所以

804
00:24:44,000 --> 00:24:45,000
他本身的

805
00:24:45,000 --> 00:24:46,000
不是亲

806
00:24:46,000 --> 00:24:47,000
不是亲生子

807
00:24:47,000 --> 00:24:48,000
爹不爱

808
00:24:48,000 --> 00:24:49,000
是吧

809
00:24:49,000 --> 00:24:49,000
对

810
00:24:49,000 --> 00:24:49,000
对

811
00:24:49,000 --> 00:24:50,000
好吧

812
00:24:50,000 --> 00:24:51,000
梁不腾

813
00:24:51,000 --> 00:24:52,000
我摸头

814
00:24:52,000 --> 00:24:53,000
我摸头

815
00:24:53,000 --> 00:24:55,000
不是

816
00:24:55,000 --> 00:24:56,000
我上学的时候

817
00:24:56,000 --> 00:24:58,000
校园网还是蛮普及的

818
00:24:58,000 --> 00:24:58,000
起码

819
00:24:58,000 --> 00:25:00,000
然后第一年的时候

820
00:25:00,000 --> 00:25:03,000
校区是新的

821
00:25:03,000 --> 00:25:04,000
在珠海那边

822
00:25:04,000 --> 00:25:07,000
然后宿舍也是新的

823
00:25:07,000 --> 00:25:08,000
校园网都还接着可以

824
00:25:08,000 --> 00:25:09,000
百兆接入

825
00:25:09,000 --> 00:25:09,000
应该是

826
00:25:09,000 --> 00:25:13,000
然后但出校区就奇漫无比了

827
00:25:13,000 --> 00:25:15,000
因为出口贷款比较窄

828
00:25:15,000 --> 00:25:17,000
但是在校区校园内部的话

829
00:25:17,000 --> 00:25:18,000
有各种服务器

830
00:25:18,000 --> 00:25:19,000
有机房

831
00:25:19,000 --> 00:25:21,000
然后内部资源互相防握

832
00:25:21,000 --> 00:25:23,000
当时用什么飞鸽传输

833
00:25:23,000 --> 00:25:24,000
QQ 内部

834
00:25:24,000 --> 00:25:26,000
就是各种内网传文件的工具

835
00:25:26,000 --> 00:25:26,000
用的还蛮火的

836
00:25:26,000 --> 00:25:28,000
然后电子邮件

837
00:25:28,000 --> 00:25:29,000
用的也是应该是蛮多的

838
00:25:29,000 --> 00:25:31,000
然后

839
00:25:31,000 --> 00:25:32,000
所以你看你那个时候

840
00:25:32,000 --> 00:25:33,000
也用 QQ 传文件

841
00:25:33,000 --> 00:25:36,000
会有

842
00:25:36,000 --> 00:25:36,000
对

843
00:25:36,000 --> 00:25:37,000
也会有

844
00:25:37,000 --> 00:25:37,000
那个时候

845
00:25:37,000 --> 00:25:39,000
QQ 好像有出了群组的功能

846
00:25:39,000 --> 00:25:40,000
那个时候

847
00:25:40,000 --> 00:25:43,000
就在学校里面

848
00:25:43,000 --> 00:25:44,000
发一些东西还是可以

849
00:25:44,000 --> 00:25:45,000
但是用邮件的也不少

850
00:25:45,000 --> 00:25:47,000
可能有三分之一用邮件

851
00:25:47,000 --> 00:25:48,000
三分之二用 QQ 吧

852
00:25:48,000 --> 00:25:49,000
大概是哪个

853
00:25:49,000 --> 00:25:49,000
不对

854
00:25:49,000 --> 00:25:50,000
应该是

855
00:25:50,000 --> 00:25:52,000
就小文件

856
00:25:52,000 --> 00:25:54,000
三分之一用邮件

857
00:25:54,000 --> 00:25:54,000
三分之二用 QQ

858
00:25:54,000 --> 00:25:55,000
大文件的话

859
00:25:55,000 --> 00:25:56,000
可能还是本体什么

860
00:25:56,000 --> 00:25:57,000
就有个叫飞鸽传输的

861
00:25:57,000 --> 00:25:58,000
还比较多一些

862
00:25:58,000 --> 00:26:00,000
没有

863
00:26:00,000 --> 00:26:00,000
对

864
00:26:00,000 --> 00:26:01,000
然后

865
00:26:01,000 --> 00:26:02,000
然后

866
00:26:02,000 --> 00:26:04,000
还有一个飞鸽传输和

867
00:26:04,000 --> 00:26:05,000
就是 FTP

868
00:26:05,000 --> 00:26:06,000
就是校园内网

869
00:26:06,000 --> 00:26:07,000
FTP

870
00:26:07,000 --> 00:26:08,000
我们有一个公众

871
00:26:08,000 --> 00:26:08,000
FTP

872
00:26:08,000 --> 00:26:09,000
对

873
00:26:09,000 --> 00:26:10,000
然后就是上次

874
00:26:10,000 --> 00:26:10,000
我说那个故事

875
00:26:10,000 --> 00:26:11,000
有个哥们

876
00:26:11,000 --> 00:26:13,000
在自己的 PC 上面

877
00:26:13,000 --> 00:26:14,000
搞了一个

878
00:26:14,000 --> 00:26:16,000
开了一个 FTP server

879
00:26:16,000 --> 00:26:17,000
然后我们开放

880
00:26:17,000 --> 00:26:18,000
我们要偏资源

881
00:26:18,000 --> 00:26:18,000
跟我想

882
00:26:18,000 --> 00:26:20,000
对

883
00:26:20,000 --> 00:26:22,000
这些传说都是我们听说的

884
00:26:22,000 --> 00:26:23,000
也不是听说的

885
00:26:23,000 --> 00:26:24,000
我在浙大也见过

886
00:26:24,000 --> 00:26:24,000
他们那边的

887
00:26:24,000 --> 00:26:26,000
这个 APM AdHoc

888
00:26:26,000 --> 00:26:27,000
共享网络

889
00:26:27,000 --> 00:26:28,000
是多么的昌盛的

890
00:26:28,000 --> 00:26:30,000
我们学校从外表达

891
00:26:30,000 --> 00:26:31,000
所以你看迅雷

892
00:26:31,000 --> 00:26:32,000
还是有群众基础的

893
00:26:32,000 --> 00:26:36,000
对

894
00:26:36,000 --> 00:26:36,000
然后

895
00:26:36,000 --> 00:26:38,000
所以说

896
00:26:38,000 --> 00:26:38,000
就是说

897
00:26:38,000 --> 00:26:39,000
你如果邮件的需求

898
00:26:39,000 --> 00:26:40,000
还是

899
00:26:40,000 --> 00:26:41,000
等一下

900
00:26:41,000 --> 00:26:42,000
那你们毕业之后

901
00:26:42,000 --> 00:26:43,000
不用邮件吗

902
00:26:43,000 --> 00:26:44,000
在工作的时候

903
00:26:44,000 --> 00:26:46,000
毕业之后

904
00:26:46,000 --> 00:26:47,000
当然很多

905
00:26:47,000 --> 00:26:48,000
我们毕业就出国

906
00:26:48,000 --> 00:26:49,000
当然是一直用邮件

907
00:26:49,000 --> 00:26:50,000
对

908
00:26:50,000 --> 00:26:50,000
对

909
00:26:50,000 --> 00:26:51,000
我的印象就是说

910
00:26:51,000 --> 00:26:52,000
哪怕毕业之后

911
00:26:52,000 --> 00:26:53,000
那我当然读商科

912
00:26:53,000 --> 00:26:54,000
就是很多同学

913
00:26:54,000 --> 00:26:57,000
他们不管是申请工作简历也好

914
00:26:57,000 --> 00:26:59,000
还是说日常同事之间

915
00:26:59,000 --> 00:27:01,000
或者跟客户之间沟通也好

916
00:27:01,000 --> 00:27:03,000
他们用邮件的情况还是蛮多的

917
00:27:03,000 --> 00:27:05,000
就 business business

918
00:27:05,000 --> 00:27:11,000
所以我不觉得在起码我接触那群人里面

919
00:27:11,000 --> 00:27:13,000
邮件是一个很陌生的事情

920
00:27:13,000 --> 00:27:15,000
所以我就在想

921
00:27:15,000 --> 00:27:16,000
为什么会用 QQ 传代码

922
00:27:16,000 --> 00:27:18,000
而不是用邮件发 DIF

923
00:27:18,000 --> 00:27:22,000
可能跟工具链的教授有关系

924
00:27:22,000 --> 00:27:23,000
因为大学

925
00:27:23,000 --> 00:27:24,000
就至少我们就所谓的这种

926
00:27:24,000 --> 00:27:26,000
就是综合性大学

927
00:27:26,000 --> 00:27:28,000
而不是这个叫什么来的

928
00:27:28,000 --> 00:27:28,000
大专

929
00:27:28,000 --> 00:27:30,000
它可能会偏向于说理论多一些

930
00:27:30,000 --> 00:27:33,000
对这个工具的就比较

931
00:27:33,000 --> 00:27:34,000
比较看不起

932
00:27:34,000 --> 00:27:38,000
如果 visual studio 有一个一键

933
00:27:38,000 --> 00:27:41,000
把 DIF 导出为文文文件的功能

934
00:27:41,000 --> 00:27:43,000
我想也许会用得人多一点

935
00:27:43,000 --> 00:27:44,000
I doubt it

936
00:27:44,000 --> 00:27:46,000
不可能

937
00:27:46,000 --> 00:27:48,000
这种事情怎么可能发生在维扇时上

938
00:27:48,000 --> 00:27:49,000
我也觉得是这样

939
00:27:49,000 --> 00:27:50,000
所以还是一个

940
00:27:50,000 --> 00:27:52,000
其实 Clamline 很故意的争端

941
00:27:52,000 --> 00:27:54,000
就是一个分歧

942
00:27:54,000 --> 00:27:57,000
然后碰巧大多数人可能还选择的是

943
00:27:57,000 --> 00:27:59,000
这个 windows 平台

944
00:27:59,000 --> 00:28:00,000
路径依赖

945
00:28:00,000 --> 00:28:01,000
对对对

946
00:28:01,000 --> 00:28:04,000
所以这位同学

947
00:28:04,000 --> 00:28:06,000
同学不用特别的在意

948
00:28:06,000 --> 00:28:08,000
这个什么工具链的事情

949
00:28:08,000 --> 00:28:10,000
就是碰巧遇到两个比较龟毛

950
00:28:10,000 --> 00:28:12,000
用那个 Clamline 的人

951
00:28:12,000 --> 00:28:13,000
对

952
00:28:13,000 --> 00:28:16,000
然后如果你有至于继续发展的话

953
00:28:16,000 --> 00:28:18,000
将来其实你也会

954
00:28:18,000 --> 00:28:21,000
用该用的东西

955
00:28:21,000 --> 00:28:24,000
谁年轻的时候没有荒唐过

956
00:28:24,000 --> 00:28:26,000
OK

957
00:28:26,000 --> 00:28:31,000
另外大丑想问一个部相关的问题

958
00:28:31,000 --> 00:28:32,000
接着念他的反馈

959
00:28:32,000 --> 00:28:33,000
这里是

960
00:28:33,000 --> 00:28:33,000
对

961
00:28:33,000 --> 00:28:38,000
Rail 老师提到自己在不同网站的账号

962
00:28:38,000 --> 00:28:39,000
是用不同的邮箱注册的

963
00:28:39,000 --> 00:28:40,000
我自己也想效仿

964
00:28:40,000 --> 00:28:41,000
但不清楚该如何管理

965
00:28:41,000 --> 00:28:44,000
以及如何选择个人邮箱的服务商

966
00:28:44,000 --> 00:28:48,000
很多账号似乎不能更改邮箱

967
00:28:48,000 --> 00:28:50,000
那 Rail 老师都是重新注册的吗

968
00:28:50,000 --> 00:28:52,000
望次教不申感激

969
00:28:52,000 --> 00:28:53,000
好吧

970
00:28:53,000 --> 00:28:53,000
请次教

971
00:28:53,000 --> 00:28:58,000
如何选择个人邮箱服务商

972
00:28:58,000 --> 00:28:58,000
很简单的

973
00:28:58,000 --> 00:28:59,000
不用选了

974
00:28:59,000 --> 00:28:59,000
就 Gmail

975
00:28:59,000 --> 00:29:02,000
因为 Gmail 有个 hack

976
00:29:02,000 --> 00:29:03,000
就是比如说假设

977
00:29:03,000 --> 00:29:06,000
你的 Gmail 账号是

978
00:29:06,000 --> 00:29:08,000
foo at gmail.com

979
00:29:08,000 --> 00:29:11,000
然后你用 foo 一个加号

980
00:29:11,000 --> 00:29:14,000
后面是比如说 bar at gmail.com

981
00:29:14,000 --> 00:29:15,000
发到这个地址的

982
00:29:15,000 --> 00:29:17,000
还是会进到你 foo 的邮箱里面去

983
00:29:17,000 --> 00:29:21,000
然后你说 foo 加 spam at gmail.com

984
00:29:21,000 --> 00:29:23,000
也是会进到你 foo 里面

985
00:29:23,000 --> 00:29:23,000
就加号里面

986
00:29:23,000 --> 00:29:24,000
就填任何东西

987
00:29:24,000 --> 00:29:26,000
都会进到你的邮箱里面去

988
00:29:26,000 --> 00:29:27,000
就是一个 hack

989
00:29:27,000 --> 00:29:28,000
所以你注册的时候

990
00:29:28,000 --> 00:29:29,000
就只需要填 foo

991
00:29:29,000 --> 00:29:30,000
然后加加号

992
00:29:30,000 --> 00:29:32,000
然后再加上这个网站的名字

993
00:29:32,000 --> 00:29:35,000
或者是你随机生成的一个代码

994
00:29:35,000 --> 00:29:36,000
如果你不想被人猜出来的话

995
00:29:36,000 --> 00:29:37,000
对

996
00:29:37,000 --> 00:29:41,000
然后你再下一次在 spam 里面看到

997
00:29:41,000 --> 00:29:43,000
是 foo 加上比如说

998
00:29:43,000 --> 00:29:45,000
美团给你发

999
00:29:45,000 --> 00:29:50,000
某网站给你发的垃圾邮件

1000
00:29:50,000 --> 00:29:52,000
你就知道这个网站把你的邮件卖了

1001
00:29:52,000 --> 00:29:52,000
对对

1002
00:29:52,000 --> 00:29:54,000
不过这个东西也有点缺陷

1003
00:29:54,000 --> 00:29:58,000
就是说有一些网站的邮件地址的验证

1004
00:29:58,000 --> 00:30:02,000
那个证则表达式是不支持前面有加号的

1005
00:30:02,000 --> 00:30:05,000
他会说你这个不是一个合法的邮件地址

1006
00:30:05,000 --> 00:30:06,000
没错

1007
00:30:06,000 --> 00:30:08,000
因为一个合法的邮件地址的证则表达式

1008
00:30:08,000 --> 00:30:10,000
是非常难以写出来的

1009
00:30:10,000 --> 00:30:13,000
其实是证则表达式不能表达出来一个合法的

1010
00:30:13,000 --> 00:30:14,000
不

1011
00:30:14,000 --> 00:30:15,000
错错了

1012
00:30:15,000 --> 00:30:18,000
证则表达式的语法限制了

1013
00:30:18,000 --> 00:30:21,000
他不能表达所有可能的邮件地址

1014
00:30:21,000 --> 00:30:21,000
OK

1015
00:30:21,000 --> 00:30:22,000
然后因为这个

1016
00:30:22,000 --> 00:30:27,000
大部分人在写一个邮件判断的时候

1017
00:30:27,000 --> 00:30:29,000
就写一个非常难易的判断

1018
00:30:29,000 --> 00:30:33,000
而这种判断就会导致一个明明 valid 的邮件

1019
00:30:33,000 --> 00:30:35,000
比如说 foo 加 bar at gmail.com

1020
00:30:35,000 --> 00:30:36,000
对

1021
00:30:36,000 --> 00:30:38,000
比如说那个邮件的前面那一部分

1022
00:30:38,000 --> 00:30:39,000
就邮件地址前面 at

1023
00:30:39,000 --> 00:30:41,000
符号前面那部分就可以是中文

1024
00:30:41,000 --> 00:30:44,000
但是很多人说这个没见过

1025
00:30:44,000 --> 00:30:45,000
不合法

1026
00:30:45,000 --> 00:30:46,000
对吧

1027
00:30:46,000 --> 00:30:46,000
他觉得不合法

1028
00:30:46,000 --> 00:30:49,000
他就说限制前面部分整个是 a 到 z

1029
00:30:49,000 --> 00:30:50,000
0 到 9

1030
00:30:50,000 --> 00:30:50,000
横线

1031
00:30:50,000 --> 00:30:53,000
横线和下滑线

1032
00:30:53,000 --> 00:30:55,000
然后再就是至少一个

1033
00:30:55,000 --> 00:30:56,000
对吧

1034
00:30:56,000 --> 00:30:58,000
这其实就很简单粗暴

1035
00:30:58,000 --> 00:31:00,000
但是你遇到了你也没办法

1036
00:31:00,000 --> 00:31:02,000
你也不可能说你每个真的遇到就去改

1037
00:31:02,000 --> 00:31:04,000
但是所以怎么解决这个问题

1038
00:31:04,000 --> 00:31:05,000
你就有了

1039
00:31:05,000 --> 00:31:07,000
像我们这么高阶用户

1040
00:31:07,000 --> 00:31:09,000
怎么可能会满足于用 gmail 这种后续的域名

1041
00:31:09,000 --> 00:31:09,000
对吧

1042
00:31:09,000 --> 00:31:11,000
你自己注册一个域名

1043
00:31:11,000 --> 00:31:13,000
然后你可以找一个服务商

1044
00:31:13,000 --> 00:31:15,000
比如说那个 googleapps

1045
00:31:15,000 --> 00:31:17,000
你可以把那个 wildcard

1046
00:31:17,000 --> 00:31:20,000
wildcard 域名打开

1047
00:31:20,000 --> 00:31:21,000
就是简单说信号

1048
00:31:21,000 --> 00:31:22,000
只要前面

1049
00:31:22,000 --> 00:31:22,000
通费服务

1050
00:31:22,000 --> 00:31:23,000
对通费服务

1051
00:31:23,000 --> 00:31:27,000
就发到任何 at 你邮件

1052
00:31:27,000 --> 00:31:30,000
at 你域名的邮件

1053
00:31:30,000 --> 00:31:32,000
都会进入到你指定的一个邮箱

1054
00:31:32,000 --> 00:31:33,000
也可以

1055
00:31:33,000 --> 00:31:35,000
这样你就有无限数量邮箱可以用了

1056
00:31:35,000 --> 00:31:36,000
你想用什么用什么

1057
00:31:36,000 --> 00:31:39,000
然后他提到说

1058
00:31:39,000 --> 00:31:41,000
很多账号似乎不能更改邮箱

1059
00:31:41,000 --> 00:31:43,000
其实大部分是可以改的吧

1060
00:31:43,000 --> 00:31:45,000
只是不能改的现在都比较少了

1061
00:31:45,000 --> 00:31:47,000
比如我们目前为止吐槽

1062
00:31:47,000 --> 00:31:48,000
最后就是微博了

1063
00:31:48,000 --> 00:31:49,000
就变态啊

1064
00:31:49,000 --> 00:31:49,000
为什么不能改邮箱

1065
00:31:49,000 --> 00:31:50,000
邮箱掉了呢

1066
00:31:50,000 --> 00:31:51,000
或者换工作了呢

1067
00:31:51,000 --> 00:31:51,000
对吧

1068
00:31:51,000 --> 00:31:52,000
嗯

1069
00:31:52,000 --> 00:31:53,000
嗯

1070
00:31:53,000 --> 00:31:53,000
嗯

1071
00:31:53,000 --> 00:31:54,000
对

1072
00:31:54,000 --> 00:31:58,000
所以我是不是重新注册的

1073
00:31:58,000 --> 00:31:58,000
我不用啊

1074
00:31:58,000 --> 00:31:59,000
我因为我注册的时候

1075
00:31:59,000 --> 00:32:01,000
就是用到这种方法做的嘛

1076
00:32:01,000 --> 00:32:03,000
然后遇到那些不能改的

1077
00:32:03,000 --> 00:32:06,000
就特事特办吧

1078
00:32:06,000 --> 00:32:07,000
对

1079
00:32:07,000 --> 00:32:09,000
反正瑞老师的邮箱就是

1080
00:32:09,000 --> 00:32:11,000
随机设计

1081
00:32:11,000 --> 00:32:13,000
随便发什么都可以

1082
00:32:13,000 --> 00:32:14,000
对

1083
00:32:14,000 --> 00:32:16,000
OK

1084
00:32:16,000 --> 00:32:19,000
今天的这个听众反馈环节到这里结束

1085
00:32:19,000 --> 00:32:20,000
我们现在进入新闻

1086
00:32:20,000 --> 00:32:22,000
新闻时间

1087
00:32:22,000 --> 00:32:25,000
此处插入新闻联播片头曲

1088
00:32:25,000 --> 00:32:29,000
其实我好多点没看到

1089
00:32:29,000 --> 00:32:29,000
还是一个曲子吗

1090
00:32:29,000 --> 00:32:30,000
应该不一样了吧

1091
00:32:30,000 --> 00:32:31,000
应该是

1092
00:32:31,000 --> 00:32:31,000
应该是吧

1093
00:32:31,000 --> 00:32:33,000
这不可能从单

1094
00:32:33,000 --> 00:32:35,000
这是不是中国中国境内

1095
00:32:35,000 --> 00:32:37,000
除了国歌之外

1096
00:32:37,000 --> 00:32:37,000
第二元

1097
00:32:37,000 --> 00:32:38,000
第二元

1098
00:32:38,000 --> 00:32:40,000
第二元素的音乐

1099
00:32:40,000 --> 00:32:42,000
第一元素是什么

1100
00:32:42,000 --> 00:32:43,000
国歌

1101
00:32:43,000 --> 00:32:43,000
国歌

1102
00:32:43,000 --> 00:32:44,000
对啊

1103
00:32:44,000 --> 00:32:46,000
不一定还有解放军进行曲

1104
00:32:46,000 --> 00:32:47,000
对吧

1105
00:32:47,000 --> 00:32:48,000
嗯

1106
00:32:48,000 --> 00:32:49,000
难说

1107
00:32:49,000 --> 00:32:49,000
top 3 吧

1108
00:32:49,000 --> 00:32:50,000
至少

1109
00:32:50,000 --> 00:32:50,000
对

1110
00:32:50,000 --> 00:32:54,000
新闻 No.1

1111
00:32:54,000 --> 00:32:55,000
最近出了一个

1112
00:32:55,000 --> 00:32:57,000
就是 iOS 上出了一个很好用的

1113
00:32:57,000 --> 00:32:59,000
网络调试工具

1114
00:32:59,000 --> 00:33:00,000
怎么这么说了

1115
00:33:00,000 --> 00:33:02,000
叫 Search

1116
00:33:02,000 --> 00:33:03,000
S U R G E

1117
00:33:03,000 --> 00:33:07,000
它除了能够列出你的程序

1118
00:33:07,000 --> 00:33:09,000
曾经试图访问过那些网址之外

1119
00:33:09,000 --> 00:33:12,000
还可以做一些不可言说的事情

1120
00:33:12,000 --> 00:33:14,000
网络请求改写啊

1121
00:33:14,000 --> 00:33:15,000
变更啊

1122
00:33:15,000 --> 00:33:17,000
或者叫做 proxy 的一些业务

1123
00:33:17,000 --> 00:33:21,000
从而达成一些不可告人的目的

1124
00:33:21,000 --> 00:33:22,000
可以告人

1125
00:33:22,000 --> 00:33:23,000
可以告人

1126
00:33:23,000 --> 00:33:25,000
对

1127
00:33:25,000 --> 00:33:26,000
但我们不会告诉你

1128
00:33:26,000 --> 00:33:27,000
你自己去想吧

1129
00:33:27,000 --> 00:33:28,000
没错

1130
00:33:28,000 --> 00:33:28,000
那个什么

1131
00:33:28,000 --> 00:33:31,000
然后他的那个开发者

1132
00:33:31,000 --> 00:33:34,000
最近叫刘亚成

1133
00:33:34,000 --> 00:33:36,000
不知道是几声怎么这么念了

1134
00:33:36,000 --> 00:33:37,000
多念轻声吧

1135
00:33:37,000 --> 00:33:38,000
刘亚成吧

1136
00:33:38,000 --> 00:33:40,000
可能是

1137
00:33:40,000 --> 00:33:43,000
然后他在那个 medium 上面

1138
00:33:43,000 --> 00:33:44,000
这个网站发了一篇文章讲

1139
00:33:44,000 --> 00:33:46,000
Search 的原理与实现

1140
00:33:46,000 --> 00:33:48,000
但这个大致可以说一下

1141
00:33:48,000 --> 00:33:54,000
它是基于 iOS 9 和 OS 1010.11 吧

1142
00:33:54,000 --> 00:33:56,000
应该里面出现了一个新特性

1143
00:33:56,000 --> 00:33:58,000
叫做 Network Extension

1144
00:33:58,000 --> 00:34:02,000
的机制去做的一些底层的网络

1145
00:34:02,000 --> 00:34:05,000
请求的网络的一些处理吧

1146
00:34:05,000 --> 00:34:07,000
然后他在这篇文章里面

1147
00:34:07,000 --> 00:34:10,000
大致的描述一下 Search 的主要的构成部件

1148
00:34:10,000 --> 00:34:12,000
还有他里面的一些

1149
00:34:12,000 --> 00:34:13,000
每个部件是干嘛用的

1150
00:34:13,000 --> 00:34:17,000
就是如果说你对这个东西有兴趣

1151
00:34:17,000 --> 00:34:19,000
知道他能想知道他能干嘛

1152
00:34:19,000 --> 00:34:20,000
知道他原理的话

1153
00:34:20,000 --> 00:34:23,000
这是一篇非常很好的一个文章

1154
00:34:23,000 --> 00:34:24,000
推荐大家去阅读一下

1155
00:34:24,000 --> 00:34:28,000
当然了顺便也顺手给 Search 打一个广告

1156
00:34:28,000 --> 00:34:30,000
这毕竟是咱们果然自己写的一个很有用的工具

1157
00:34:30,000 --> 00:34:31,000
对吧

1158
00:34:31,000 --> 00:34:33,000
Search 跟 VPN 的区别在哪

1159
00:34:33,000 --> 00:34:36,000
你还是问了这个问题

1160
00:34:36,000 --> 00:34:40,000
Search 是一个通用的网络层的一个工具

1161
00:34:40,000 --> 00:34:44,000
然后实现 VPN 是其中它一部分的功能

1162
00:34:44,000 --> 00:34:45,000
大概我可以这么解释吧

1163
00:34:45,000 --> 00:34:48,000
那么他实现的 VPN 跟比如说

1164
00:34:48,000 --> 00:34:50,000
从某网站买来的 VPN 有什么差别

1165
00:34:50,000 --> 00:34:53,000
他可能跟 iOS 9 里面

1166
00:34:53,000 --> 00:34:57,000
他能做到就是说局部带领

1167
00:34:57,000 --> 00:34:59,000
因为过去是全局带领

1168
00:34:59,000 --> 00:35:00,000
你要不用 VPN

1169
00:35:00,000 --> 00:35:02,000
要不不用 VPN 对吧

1170
00:35:02,000 --> 00:35:02,000
对

1171
00:35:02,000 --> 00:35:03,000
但现在他用 Search 这个方式

1172
00:35:03,000 --> 00:35:05,000
他可以做更精细的控制

1173
00:35:05,000 --> 00:35:08,000
比如说某些 IP 段用 VPN

1174
00:35:08,000 --> 00:35:10,000
某些 IP 段不用 VPN

1175
00:35:10,000 --> 00:35:12,000
或者某些域名用 VPN

1176
00:35:12,000 --> 00:35:13,000
某些域名不走 VPN

1177
00:35:13,000 --> 00:35:15,000
这个规则是可以很灵活的

1178
00:35:15,000 --> 00:35:18,000
而且你不用一直去手动维护这个 VPN

1179
00:35:18,000 --> 00:35:18,000
对

1180
00:35:18,000 --> 00:35:20,000
然后当然非常爽的

1181
00:35:20,000 --> 00:35:21,000
当然这么好的应用

1182
00:35:21,000 --> 00:35:23,000
我们自然而然要给他打广告

1183
00:35:23,000 --> 00:35:24,000
推荐一下了

1184
00:35:24,000 --> 00:35:24,000
对吧

1185
00:35:24,000 --> 00:35:27,000
然后当然这个 Search 不算便宜

1186
00:35:27,000 --> 00:35:29,000
在 App Store 里面卖 10 刀

1187
00:35:29,000 --> 00:35:30,000
顾有所知

1188
00:35:30,000 --> 00:35:32,000
对比较贵的应用

1189
00:35:32,000 --> 00:35:37,000
但是考虑到这个东西的复杂性和有用性

1190
00:35:37,000 --> 00:35:41,000
推荐大家支持一下我们国产开发者的一个小工具

1191
00:35:41,000 --> 00:35:43,000
对

1192
00:35:43,000 --> 00:35:44,000
再强的一面它不是一个

1193
00:35:44,000 --> 00:35:45,000
我们没有收到赞助

1194
00:35:45,000 --> 00:35:46,000
但这是完全

1195
00:35:46,000 --> 00:35:48,000
纯有情

1196
00:35:48,000 --> 00:35:49,000
对

1197
00:35:49,000 --> 00:35:54,000
也是希望说有更多的开发者能够提供一些更好用的工具

1198
00:35:54,000 --> 00:35:58,000
帮助我们实现一些日常的一些业务吧

1199
00:35:58,000 --> 00:36:02,000
下一条新闻是

1200
00:36:02,000 --> 00:36:06,000
一个挺好玩的东西叫做一个新的图片格式

1201
00:36:06,000 --> 00:36:07,000
图像格式

1202
00:36:07,000 --> 00:36:10,000
叫做 Free Lossless Image Format

1203
00:36:10,000 --> 00:36:11,000
Fleet

1204
00:36:11,000 --> 00:36:13,000
无损的格式的话

1205
00:36:13,000 --> 00:36:15,000
也就 PNG 是现在主流的应用的

1206
00:36:15,000 --> 00:36:16,000
对

1207
00:36:16,000 --> 00:36:17,000
无损压缩的格式

1208
00:36:17,000 --> 00:36:19,000
然后这个叫做 Flift

1209
00:36:19,000 --> 00:36:20,000
Flift

1210
00:36:20,000 --> 00:36:23,000
Free Lossless Image Format

1211
00:36:23,000 --> 00:36:28,000
它的牛逼之处在于它压出来的文件比 PNG 要小

1212
00:36:28,000 --> 00:36:30,000
嗯哼

1213
00:36:30,000 --> 00:36:33,000
它甚至连比一个

1214
00:36:33,000 --> 00:36:34,000
呃

1215
00:36:34,000 --> 00:36:35,000
它比你很多东西

1216
00:36:35,000 --> 00:36:39,000
它比 PNG 小大概 2%30%

1217
00:36:41,000 --> 00:36:43,000
然后比其他的那些无损格式

1218
00:36:43,000 --> 00:36:46,000
也是大概小最多 30%左右吧

1219
00:36:46,000 --> 00:36:47,000
就是还挺有意思的

1220
00:36:47,000 --> 00:36:49,000
因为因为无损的话

1221
00:36:49,000 --> 00:36:51,000
就是压缩的比例不是太高吗

1222
00:36:51,000 --> 00:36:55,000
35% smaller than typical PNG files

1223
00:36:55,000 --> 00:36:56,000
嗯

1224
00:36:56,000 --> 00:36:57,000
对

1225
00:36:57,000 --> 00:36:58,000
但好吧

1226
00:36:58,000 --> 00:37:01,000
你说在网络越来越快的时代

1227
00:37:01,000 --> 00:37:02,000
呃

1228
00:37:02,000 --> 00:37:04,000
压缩变小有

1229
00:37:04,000 --> 00:37:06,000
有非常大的意义吗

1230
00:37:06,000 --> 00:37:08,000
有啊

1231
00:37:08,000 --> 00:37:10,000
特别是在那个移动设备上面

1232
00:37:10,000 --> 00:37:12,000
这个带宽还是不太够的

1233
00:37:12,000 --> 00:37:12,000
好够

1234
00:37:12,000 --> 00:37:15,000
因为主要网络情况不稳定嘛

1235
00:37:15,000 --> 00:37:17,000
你说在加上宽带可能体会不到这种区别

1236
00:37:17,000 --> 00:37:21,000
但是你在这个三 G 四 G 上

1237
00:37:21,000 --> 00:37:22,000
它是信号不太好的时候啊

1238
00:37:22,000 --> 00:37:25,000
能小一点还是挺有用的

1239
00:37:25,000 --> 00:37:25,000
嗯

1240
00:37:25,000 --> 00:37:27,000
而且对于这个

1241
00:37:27,000 --> 00:37:28,000
对于这个就是

1242
00:37:28,000 --> 00:37:30,000
CDN 来说就直接是钱呢

1243
00:37:30,000 --> 00:37:33,000
因为现在很多这个比如说图片网站

1244
00:37:33,000 --> 00:37:36,000
它的那个要花很大一部分钱到那个 CDN 的流量上面去嘛

1245
00:37:36,000 --> 00:37:37,000
是没错的

1246
00:37:37,000 --> 00:37:42,000
如果如果说你按那个能够平平少个 20%的话

1247
00:37:42,000 --> 00:37:44,000
等于你那个 CDN 的费用大了八折了

1248
00:37:44,000 --> 00:37:46,000
这还是很大一笔钱的

1249
00:37:46,000 --> 00:37:48,000
游戏也是

1250
00:37:48,000 --> 00:37:49,000
但这东西

1251
00:37:49,000 --> 00:37:52,000
游戏里面的材质采用更小的

1252
00:37:52,000 --> 00:37:55,000
更高压缩比压缩算法的话

1253
00:37:55,000 --> 00:37:58,000
整个游戏栏转文件就小了很多

1254
00:37:58,000 --> 00:38:01,000
没错

1255
00:38:01,000 --> 00:38:06,000
但这种问题的麻烦之处在于它是一个新的格式吗

1256
00:38:06,000 --> 00:38:08,000
可能这个就是 compatibility 不是很好

1257
00:38:08,000 --> 00:38:10,000
就是设备的支持都会有点问题

1258
00:38:10,000 --> 00:38:12,000
之前那个

1259
00:38:12,000 --> 00:38:15,000
Google 不是做了个叫做 webp 的格式吗

1260
00:38:15,000 --> 00:38:17,000
就用于替代 JPG 和 PNG

1261
00:38:17,000 --> 00:38:21,000
因为 webp 它是可以从无损到有损之间是可以调的

1262
00:38:22,000 --> 00:38:23,000
然后就出现一个问题

1263
00:38:23,000 --> 00:38:25,000
就是比如说你用这个 Chrome 浏览器

1264
00:38:25,000 --> 00:38:27,000
访问 Google 的很多这个网站

1265
00:38:27,000 --> 00:38:31,000
它会默认去给你提供 webp 格式的这个图片

1266
00:38:32,000 --> 00:38:35,000
那么你点这个右键另存为图片的时候

1267
00:38:35,000 --> 00:38:36,000
就会发现

1268
00:38:36,000 --> 00:38:36,000
哎

1269
00:38:36,000 --> 00:38:37,000
存下的文件

1270
00:38:37,000 --> 00:38:38,000
其他方

1271
00:38:38,000 --> 00:38:38,000
其他东西打不开

1272
00:38:39,000 --> 00:38:40,000
那你就比较尴尬了

1273
00:38:40,000 --> 00:38:42,000
你想在其他地方里面用的话

1274
00:38:43,000 --> 00:38:43,000
对吧

1275
00:38:43,000 --> 00:38:45,000
那其实 Flip 也有这个问题

1276
00:38:45,000 --> 00:38:45,000
就是

1277
00:38:45,000 --> 00:38:46,000
没错

1278
00:38:46,000 --> 00:38:46,000
对

1279
00:38:46,000 --> 00:38:47,000
就会有同样的问题

1280
00:38:47,000 --> 00:38:50,000
所以我觉得可能它的应用场景还是在

1281
00:38:50,000 --> 00:38:52,000
比如说你写这个 iOS

1282
00:38:52,000 --> 00:38:55,000
或者是这个安卓的这个 app 的时候

1283
00:38:55,000 --> 00:38:57,000
你可以控制解码器那一段

1284
00:38:57,000 --> 00:39:02,000
你说你为了减小你这个资源文件的大小

1285
00:39:02,000 --> 00:39:05,000
那说你可以用那种自定义的这种格式

1286
00:39:05,000 --> 00:39:07,000
然后你自己再做自己做一个解压的

1287
00:39:07,000 --> 00:39:10,000
但这就引入另外一个问题了

1288
00:39:10,000 --> 00:39:13,000
你说一般说像 PNG 这种标准格式的

1289
00:39:13,000 --> 00:39:16,000
就这种比较流行的格式的解码器可能系统自带了对吧

1290
00:39:16,000 --> 00:39:17,000
对

1291
00:39:17,000 --> 00:39:18,000
你不用自己再写一个

1292
00:39:18,000 --> 00:39:19,000
但如果你用 Flip 的话

1293
00:39:19,000 --> 00:39:22,000
你还是在搭一个 decoder 进去

1294
00:39:22,000 --> 00:39:23,000
或者再等 50 年

1295
00:39:23,000 --> 00:39:24,000
对

1296
00:39:24,000 --> 00:39:28,000
这就可能就有点问题了

1297
00:39:28,000 --> 00:39:28,000
对

1298
00:39:28,000 --> 00:39:32,000
下一则新闻是 163

1299
00:39:32,000 --> 00:39:35,000
就是网易邮箱好像最近出大事了

1300
00:39:35,000 --> 00:39:35,000
对

1301
00:39:35,000 --> 00:39:36,000
我看你一下怎么回事吗

1302
00:39:36,000 --> 00:39:38,000
有很多朋友都中招了

1303
00:39:38,000 --> 00:39:39,000
就是

1304
00:39:39,000 --> 00:39:43,000
但是具体的情况我们其实并不是并不很清楚

1305
00:39:43,000 --> 00:39:46,000
因为这是一次比较友善加引号的行为

1306
00:39:46,000 --> 00:39:49,000
就是在邮箱

1307
00:39:49,000 --> 00:39:54,000
在这个事故发生的第一时间被厂商得到通报

1308
00:39:54,000 --> 00:39:57,000
然后集中的具体的技术细节并没有被披露出来

1309
00:39:57,000 --> 00:39:59,000
当然如果你费心去找的话肯定是可以找到的

1310
00:39:59,000 --> 00:40:01,000
但我们两个没有费心去找

1311
00:40:01,000 --> 00:40:06,000
所以紧就知道的情况来看是 163.com

1312
00:40:06,000 --> 00:40:12,000
为域名的免费邮箱被泄露了大概一亿

1313
00:40:12,000 --> 00:40:13,000
I repeat

1314
00:40:13,000 --> 00:40:19,000
一亿个账号的用户名和密码

1315
00:40:19,000 --> 00:40:21,000
当然密码不是名文

1316
00:40:21,000 --> 00:40:24,000
而是一个 MD 5 hash

1317
00:40:24,000 --> 00:40:26,000
等于名文没什么区别

1318
00:40:26,000 --> 00:40:28,000
就是没有加 south

1319
00:40:28,000 --> 00:40:29,000
这是最大的问题

1320
00:40:29,000 --> 00:40:32,000
就是又没加 south

1321
00:40:32,000 --> 00:40:33,000
就是 MD 5

1322
00:40:33,000 --> 00:40:34,000
那基本是等于名文了

1323
00:40:34,000 --> 00:40:34,000
没错

1324
00:40:34,000 --> 00:40:37,000
就如果各位不知道的话

1325
00:40:37,000 --> 00:40:42,000
MD 5 虽然是一个哈希算法

1326
00:40:42,000 --> 00:40:45,000
虽然理论上它是单向的

1327
00:40:45,000 --> 00:40:50,000
但是如果你在网上比如搜 ReverseMD 5

1328
00:40:50,000 --> 00:40:52,000
就可以搜到一大堆彩虹表的网站

1329
00:40:52,000 --> 00:40:56,000
就是事先已经把 MD 5 算出来

1330
00:40:56,000 --> 00:41:02,000
然后你输入一个 MD 5 就可以找到对应的原来的名文的这么一个网站

1331
00:41:02,000 --> 00:41:04,000
就算什么

1332
00:41:04,000 --> 00:41:07,000
叫做 MD 5 cracking as a service

1333
00:41:07,000 --> 00:41:08,000
对没错

1334
00:41:08,000 --> 00:41:11,000
就是一个硕大无棚的 Dictionary

1335
00:41:11,000 --> 00:41:13,000
一个硕大无棚的哈希表

1336
00:41:13,000 --> 00:41:14,000
逆向哈希表

1337
00:41:14,000 --> 00:41:15,000
对

1338
00:41:15,000 --> 00:41:16,000
对

1339
00:41:16,000 --> 00:41:18,000
然后很多朋友就中招了

1340
00:41:18,000 --> 00:41:22,000
因为 163 作为一个历史

1341
00:41:22,000 --> 00:41:27,000
在中文或联网世界历史最为悠久的免费 web 邮件服务

1342
00:41:27,000 --> 00:41:30,000
并且迄今还在活跃的免费 web 邮件服务

1343
00:41:30,000 --> 00:41:32,000
是很多很多用户

1344
00:41:32,000 --> 00:41:33,000
国内用户都在用的

1345
00:41:33,000 --> 00:41:36,000
可能没有 QQ 多吧

1346
00:41:36,000 --> 00:41:37,000
但

1347
00:41:37,000 --> 00:41:40,000
没有 QQ 是目前国内第一大的邮件

1348
00:41:40,000 --> 00:41:40,000
没错

1349
00:41:40,000 --> 00:41:41,000
应该没有 QQ 多

1350
00:41:41,000 --> 00:41:44,000
但是仍旧是非常大的用户群

1351
00:41:44,000 --> 00:41:50,000
因为那个时候 QQ 还叫 IOICQ 的时代

1352
00:41:50,000 --> 00:41:52,000
163 就已经推出有效了

1353
00:41:52,000 --> 00:41:57,000
我还记得 163 是当时中国电信最常见的拨号上网号码

1354
00:41:57,000 --> 00:41:59,000
当然我一般都是拨 169

1355
00:41:59,000 --> 00:42:03,000
因为 163 的费用要比 169 高

1356
00:42:03,000 --> 00:42:04,000
是这样吧

1357
00:42:04,000 --> 00:42:06,000
对 163 更贵

1358
00:42:06,000 --> 00:42:08,000
169 便宜一些

1359
00:42:08,000 --> 00:42:08,000
没错

1360
00:42:08,000 --> 00:42:09,000
但问题是

1361
00:42:09,000 --> 00:42:11,000
但这两个不是一回事

1362
00:42:11,000 --> 00:42:13,000
169 的是 163

1363
00:42:13,000 --> 00:42:15,000
网易的 163 是 163.com

1364
00:42:15,000 --> 00:42:15,000
对

1365
00:42:15,000 --> 00:42:19,000
你说 163 电信是 163.net

1366
00:42:19,000 --> 00:42:21,000
不是我的意思是 163.com

1367
00:42:21,000 --> 00:42:22,000
为什么会被人记住

1368
00:42:22,000 --> 00:42:26,000
就是因为那个时候中国电信用 163

1369
00:42:26,000 --> 00:42:26,000
为上网号码

1370
00:42:26,000 --> 00:42:30,000
然后网易就非常机智的注册 163.com

1371
00:42:30,000 --> 00:42:31,000
然后

1372
00:42:31,000 --> 00:42:32,000
它不是注册的

1373
00:42:32,000 --> 00:42:34,000
就是说它是丁三十很

1374
00:42:34,000 --> 00:42:36,000
怎么连哄带片弄来

1375
00:42:36,000 --> 00:42:37,000
对

1376
00:42:37,000 --> 00:42:37,000
好吧

1377
00:42:37,000 --> 00:42:39,000
让你 rephrase

1378
00:42:39,000 --> 00:42:40,000
它弄来了 163.com

1379
00:42:40,000 --> 00:42:41,000
对

1380
00:42:41,000 --> 00:42:42,000
我弄死你

1381
00:42:42,000 --> 00:42:46,000
作为它的网易的主力域名

1382
00:42:46,000 --> 00:42:47,000
它当时还有好多

1383
00:42:47,000 --> 00:42:48,000
它有什么 126.com 的

1384
00:42:48,000 --> 00:42:49,000
对

1385
00:42:49,000 --> 00:42:49,000
有什么

1386
00:42:49,000 --> 00:42:51,000
yeah.net

1387
00:42:51,000 --> 00:42:51,000
对

1388
00:42:51,000 --> 00:42:51,000
好像是这样

1389
00:42:51,000 --> 00:42:52,000
对

1390
00:42:52,000 --> 00:42:53,000
net

1391
00:42:53,000 --> 00:42:53,000
搞到一堆

1392
00:42:53,000 --> 00:42:54,000
一大堆

1393
00:42:54,000 --> 00:42:55,000
对

1394
00:42:55,000 --> 00:42:57,000
它搞了一个邮箱服务集群

1395
00:42:57,000 --> 00:42:57,000
没错

1396
00:42:57,000 --> 00:43:00,000
它还是非常非常会压宝的

1397
00:43:00,000 --> 00:43:03,000
就把鸡蛋分散的放在了

1398
00:43:03,000 --> 00:43:04,000
它买了很多篮子

1399
00:43:04,000 --> 00:43:05,000
哪来

1400
00:43:05,000 --> 00:43:06,000
哪来尽可能的搜刮鸡蛋

1401
00:43:06,000 --> 00:43:08,000
但是 163.com

1402
00:43:08,000 --> 00:43:10,000
无论如何是被人

1403
00:43:10,000 --> 00:43:11,000
作为铭记的应用

1404
00:43:11,000 --> 00:43:12,000
因为那个时候

1405
00:43:12,000 --> 00:43:14,000
你一上网就要播 163

1406
00:43:14,000 --> 00:43:16,000
然后你又 163.com

1407
00:43:16,000 --> 00:43:17,000
就非常理顺成章的

1408
00:43:17,000 --> 00:43:19,000
control 的 enter

1409
00:43:19,000 --> 00:43:20,000
就进去了

1410
00:43:20,000 --> 00:43:21,000
对

1411
00:43:21,000 --> 00:43:23,000
当然了

1412
00:43:23,000 --> 00:43:25,000
他们光辉的历史

1413
00:43:25,000 --> 00:43:27,000
也成为它现在一个

1414
00:43:27,000 --> 00:43:28,000
光辉的历史

1415
00:43:28,000 --> 00:43:29,000
变成了历史的包袱

1416
00:43:29,000 --> 00:43:29,000
对

1417
00:43:29,000 --> 00:43:32,000
就现在因为

1418
00:43:32,000 --> 00:43:33,000
就用户量这么大

1419
00:43:33,000 --> 00:43:34,000
然后它当时做

1420
00:43:34,000 --> 00:43:35,000
那个什么网易通行证

1421
00:43:35,000 --> 00:43:37,000
还是把这个打通了

1422
00:43:37,000 --> 00:43:38,000
打通了

1423
00:43:38,000 --> 00:43:40,000
但是我不知道内部怎么样

1424
00:43:40,000 --> 00:43:42,000
但可以一个比较合理的猜测

1425
00:43:42,000 --> 00:43:42,000
是因为

1426
00:43:42,000 --> 00:43:44,000
网易通行证

1427
00:43:44,000 --> 00:43:45,000
是一个比较古老的系统

1428
00:43:45,000 --> 00:43:47,000
那它可能比如说

1429
00:43:47,000 --> 00:43:48,000
它以前依赖的像 MD 5

1430
00:43:48,000 --> 00:43:49,000
单向这个哈希

1431
00:43:49,000 --> 00:43:51,000
不加盐的这个架构

1432
00:43:51,000 --> 00:43:52,000
它可能就改不过来了

1433
00:43:52,000 --> 00:43:53,000
对

1434
00:43:53,000 --> 00:43:55,000
那就给之后的安全

1435
00:43:55,000 --> 00:43:56,000
造成的隐患

1436
00:43:56,000 --> 00:43:58,000
一切问题都是历史医院问题

1437
00:43:58,000 --> 00:43:59,000
是不是

1438
00:43:59,000 --> 00:44:01,000
这个有时候还是要狠下心来

1439
00:44:01,000 --> 00:44:04,000
把这个 legacy 干掉

1440
00:44:04,000 --> 00:44:05,000
因为当时

1441
00:44:05,000 --> 00:44:06,000
因为之后的那个

1442
00:44:06,000 --> 00:44:08,000
那个数据库里面的这一块

1443
00:44:08,000 --> 00:44:10,000
我自认为还挺安全的

1444
00:44:10,000 --> 00:44:10,000
我做的嘛

1445
00:44:10,000 --> 00:44:11,000
哦

1446
00:44:11,000 --> 00:44:12,000
原来如此

1447
00:44:12,000 --> 00:44:13,000
原来这一块是知乎

1448
00:44:13,000 --> 00:44:14,000
知乎

1449
00:44:14,000 --> 00:44:14,000
好吧

1450
00:44:14,000 --> 00:44:16,000
海口夸在这儿了

1451
00:44:16,000 --> 00:44:16,000
各位

1452
00:44:16,000 --> 00:44:18,000
将来知乎如果被脱库的话

1453
00:44:18,000 --> 00:44:20,000
各位可以来找乎乱算

1454
00:44:20,000 --> 00:44:21,000
我就可以明确的说

1455
00:44:21,000 --> 00:44:22,000
知乎的那个

1456
00:44:22,000 --> 00:44:23,000
那个数据密码

1457
00:44:23,000 --> 00:44:24,000
是下万之后

1458
00:44:24,000 --> 00:44:25,000
再有一层 bcraft

1459
00:44:25,000 --> 00:44:26,000
哦

1460
00:44:26,000 --> 00:44:29,000
然后脱库就脱库吧

1461
00:44:29,000 --> 00:44:30,000
反正算不出密码来

1462
00:44:30,000 --> 00:44:31,000
无所谓

1463
00:44:31,000 --> 00:44:37,000
所以我就每次都很开心

1464
00:44:37,000 --> 00:44:39,000
那自乎我不知道也没被脱库库

1465
00:44:39,000 --> 00:44:40,000
也可能有人拿过了

1466
00:44:40,000 --> 00:44:41,000
但是

1467
00:44:41,000 --> 00:44:42,000
染病了

1468
00:44:42,000 --> 00:44:42,000
是吧

1469
00:44:42,000 --> 00:44:43,000
脱去也没用

1470
00:44:43,000 --> 00:44:43,000
对

1471
00:44:43,000 --> 00:44:44,000
染病了

1472
00:44:44,000 --> 00:44:45,000
你解不出来

1473
00:44:45,000 --> 00:44:46,000
有什么用呢

1474
00:44:46,000 --> 00:44:47,000
忽然之间

1475
00:44:47,000 --> 00:44:48,000
这个

1476
00:44:48,000 --> 00:44:51,000
耳机里传来了某种自豪感

1477
00:44:51,000 --> 00:44:57,000
自豪感洋溢着房间

1478
00:44:57,000 --> 00:44:58,000
好吧

1479
00:44:58,000 --> 00:44:59,000
好吧

1480
00:44:59,000 --> 00:45:02,000
下一条新闻是这个

1481
00:45:02,000 --> 00:45:03,000
Windows 7

1482
00:45:03,000 --> 00:45:04,000
这么老的时钟

1483
00:45:04,000 --> 00:45:05,000
还有什么问题

1484
00:45:05,000 --> 00:45:07,000
Windows 7 老吗

1485
00:45:07,000 --> 00:45:08,000
很老啦

1486
00:45:08,000 --> 00:45:09,000
都 8

1487
00:45:09,000 --> 00:45:10,000
8.1

1488
00:45:10,000 --> 00:45:10,000
9

1489
00:45:10,000 --> 00:45:11,000
现在都 10 了

1490
00:45:11,000 --> 00:45:12,000
哦

1491
00:45:12,000 --> 00:45:12,000
可玩

1492
00:45:12,000 --> 00:45:13,000
没有 9

1493
00:45:13,000 --> 00:45:13,000
有 9 吗

1494
00:45:13,000 --> 00:45:14,000
没有 9

1495
00:45:14,000 --> 00:45:15,000
跳过了 9

1496
00:45:15,000 --> 00:45:16,000
Windows 7

1497
00:45:16,000 --> 00:45:17,000
8

1498
00:45:17,000 --> 00:45:17,000
9

1499
00:45:17,000 --> 00:45:19,000
7 把 9 吃了

1500
00:45:19,000 --> 00:45:20,000
所以没有 9

1501
00:45:20,000 --> 00:45:22,000
好吧

1502
00:45:22,000 --> 00:45:23,000
没有 9

1503
00:45:23,000 --> 00:45:26,000
它出了什么问题

1504
00:45:26,000 --> 00:45:27,000
Windows 7

1505
00:45:27,000 --> 00:45:30,000
Windows 7 在前一阵子出了一个非常大的幺额子

1506
00:45:30,000 --> 00:45:32,000
就是一堆人

1507
00:45:32,000 --> 00:45:38,000
发的这个比较听话老师与时俱进注重安全的 Windows 用户

1508
00:45:38,000 --> 00:45:43,000
把这个自动升级打开了

1509
00:45:43,000 --> 00:45:43,000
然后

1510
00:45:43,000 --> 00:45:44,000
呃

1511
00:45:44,000 --> 00:45:47,000
猛然发现今天的自动升级有点不一样

1512
00:45:47,000 --> 00:45:50,000
就是那个标题是一串乱码

1513
00:45:50,000 --> 00:45:51,000
下载地址也是一串乱码

1514
00:45:51,000 --> 00:45:53,000
呃

1515
00:45:53,000 --> 00:45:56,000
补丁的这个内容描述更是一大堆乱码

1516
00:45:56,000 --> 00:45:58,000
然后人们就开始慌张了

1517
00:45:58,000 --> 00:46:03,000
因为这个有些人是在补丁已经自动被打好之后才发现的

1518
00:46:03,000 --> 00:46:07,000
然后坊间留言四起就说啊

1519
00:46:07,000 --> 00:46:08,000
Windows 已经被攻陷了

1520
00:46:08,000 --> 00:46:08,000
我们

1521
00:46:08,000 --> 00:46:14,000
然后这有这么严重吗

1522
00:46:14,000 --> 00:46:15,000
什么意思

1523
00:46:15,000 --> 00:46:18,000
就这个实际上到底影响怎么样

1524
00:46:18,000 --> 00:46:21,000
最终结果其实是这个呃

1525
00:46:21,000 --> 00:46:22,000
呃

1526
00:46:22,000 --> 00:46:23,000
微软也找了一个梯队

1527
00:46:23,000 --> 00:46:31,000
就是说啊我们一个搞测试的实际生把一个内部测试这个升级系统的布丁放了出来

1528
00:46:31,000 --> 00:46:33,000
这个布丁是完全无害的

1529
00:46:33,000 --> 00:46:35,000
就是一个就之所以说了嘛

1530
00:46:35,000 --> 00:46:38,000
就是因为那些东西只是站位服务而已

1531
00:46:38,000 --> 00:46:40,000
所以实际上没有什么伤害

1532
00:46:40,000 --> 00:46:43,000
然后这个布丁也很快被从往那上撤掉了

1533
00:46:43,000 --> 00:46:45,000
所以他没有造成任何实际伤害

1534
00:46:45,000 --> 00:46:47,000
只不过呃这个

1535
00:46:47,000 --> 00:46:49,000
这个 the moral of the story 就是

1536
00:46:49,000 --> 00:46:52,000
这件事情带给我们的思考

1537
00:46:52,000 --> 00:46:55,000
就是如果在这件事情不甚是一个

1538
00:46:55,000 --> 00:46:58,000
真正的实际发生了的

1539
00:46:58,000 --> 00:47:01,000
这个安全灾难的话呢

1540
00:47:01,000 --> 00:47:04,000
其后果可能是非常非常严重

1541
00:47:04,000 --> 00:47:09,000
所以现在要有有大模型级有效的杀伤

1542
00:47:09,000 --> 00:47:12,000
就是想办法把那个 windows 的 update 这个东西搞下来是吧

1543
00:47:12,000 --> 00:47:13,000
没错

1544
00:47:13,000 --> 00:47:16,000
如果你想要真正的让全世界进入突然化的话呢

1545
00:47:16,000 --> 00:47:20,000
可以是把 windows 的 update 黑掉

1546
00:47:20,000 --> 00:47:22,000
这感觉是 sky net 要做的事情

1547
00:47:22,000 --> 00:47:23,000
说不定 sky net 已经做了

1548
00:47:23,000 --> 00:47:25,000
我们不知道而已

1549
00:47:25,000 --> 00:47:27,000
今天是半生节

1550
00:47:27,000 --> 00:47:29,000
我们可以讲讲讲一点鬼故事

1551
00:47:29,000 --> 00:47:31,000
spooky 的东西

1552
00:47:31,000 --> 00:47:32,000
想看一下这个世界

1553
00:47:32,000 --> 00:47:38,000
就我们所熟知的这个电计算机世界将以如何方式终结

1554
00:47:38,000 --> 00:47:40,000
哎错了错了

1555
00:47:40,000 --> 00:47:42,000
我们今天录制的时候是半生节发布的时候就不是了

1556
00:47:42,000 --> 00:47:43,000
啊 ok

1557
00:47:43,000 --> 00:47:44,000
嗯

1558
00:47:44,000 --> 00:47:45,000
那已经过期了

1559
00:47:45,000 --> 00:47:46,000
无效

1560
00:47:46,000 --> 00:47:48,000
好忧伤啊

1561
00:47:48,000 --> 00:47:49,000
对

1562
00:47:49,000 --> 00:47:52,000
呃说这件事的一个主要的原因是因为

1563
00:47:52,000 --> 00:47:57,000
提一个点就是做我们就是听做这个系统设计也好

1564
00:47:57,000 --> 00:47:58,000
做价格也好

1565
00:47:58,000 --> 00:48:04,000
你永远永远要假设这个网络是不可靠不可信的

1566
00:48:04,000 --> 00:48:05,000
对

1567
00:48:05,000 --> 00:48:07,000
那么你之后要做的一些事情就很重要了

1568
00:48:07,000 --> 00:48:12,000
比如说你可以你要得假设你那个下回来的那个就是通过呃

1569
00:48:12,000 --> 00:48:16,000
网络传回的文件是被搞过的那你必须要还还验证嘛

1570
00:48:16,000 --> 00:48:17,000
你必须要有这个什么啊

1571
00:48:17,000 --> 00:48:20,000
verification 就是哈希通过哈希的方式也好

1572
00:48:20,000 --> 00:48:22,000
还是什么别的签名的方式也好

1573
00:48:22,000 --> 00:48:23,000
对吧

1574
00:48:23,000 --> 00:48:23,000
没错

1575
00:48:23,000 --> 00:48:25,000
你得有这么一个一个过程

1576
00:48:25,000 --> 00:48:29,000
那你不要说啊我这个因为我这个文件是通过 https 下载的

1577
00:48:29,000 --> 00:48:31,000
所以它就没有问题了

1578
00:48:31,000 --> 00:48:31,000
嗯

1579
00:48:31,000 --> 00:48:32,000
很难讲

1580
00:48:34,000 --> 00:48:34,000
对

1581
00:48:34,000 --> 00:48:35,000
但啊

1582
00:48:35,000 --> 00:48:40,000
其实反过来说这个信任链是一换套一换的

1583
00:48:40,000 --> 00:48:43,000
如果你说每一换都有可能出问题的话

1584
00:48:43,000 --> 00:48:49,000
那最终的结果就是回到我们上上期上上上期的那个

1585
00:48:49,000 --> 00:48:53,000
呃口号就是 trust no one even complied

1586
00:48:53,000 --> 00:48:57,000
那你可能连硬件都不能相信的最后你要相信谁

1587
00:48:57,000 --> 00:49:01,000
你总要在一个地方终结说这个地方我我没有办法

1588
00:49:01,000 --> 00:49:02,000
我只能选择相信

1589
00:49:02,000 --> 00:49:03,000
但

1590
00:49:03,000 --> 00:49:05,000
you know

1591
00:49:05,000 --> 00:49:08,000
对对没办法

1592
00:49:08,000 --> 00:49:09,000
但你能说尽可能

1593
00:49:09,000 --> 00:49:11,000
但是你至少可以避免的情况下

1594
00:49:11,000 --> 00:49:15,000
这些非常明显的可能出幺蛾子的信源一定要加以警惕

1595
00:49:15,000 --> 00:49:17,000
没错

1596
00:49:17,000 --> 00:49:22,000
但是 windows 7 的 updates 的这个就所谓 misfire 事件

1597
00:49:22,000 --> 00:49:24,000
也还是呃

1598
00:49:25,000 --> 00:49:26,000
给我们提了个醒

1599
00:49:26,000 --> 00:49:31,000
就是这种单一的升级的源头

1600
00:49:32,000 --> 00:49:36,000
如果真的出了灾难是有可能非常非常非常灾难性的灾难

1601
00:49:37,000 --> 00:49:38,000
打击好广啊

1602
00:49:38,000 --> 00:49:39,000
app store 被打中了

1603
00:49:39,000 --> 00:49:42,000
然后那个什么 apt 的 source 也被你 cut

1604
00:49:42,000 --> 00:49:43,000
对

1605
00:49:43,000 --> 00:49:47,000
这就是为什么我们要提倡这个反托拉斯

1606
00:49:47,000 --> 00:49:49,000
为什么要加速加快市场竞争

1607
00:49:49,000 --> 00:49:52,000
为什么要提供这个鼓励自由市场

1608
00:49:52,000 --> 00:49:54,000
就是要尽量减少这种单点

1609
00:49:54,000 --> 00:49:56,000
啊

1610
00:49:56,000 --> 00:49:59,000
single point of failure 的出现

1611
00:49:59,000 --> 00:49:59,000
对好

1612
00:49:59,000 --> 00:50:01,000
你是你是坚持是什么

1613
00:50:01,000 --> 00:50:03,000
就是分裂派的吧

1614
00:50:03,000 --> 00:50:03,000
没错

1615
00:50:03,000 --> 00:50:04,000
去中心化

1616
00:50:04,000 --> 00:50:05,000
这个应该

1617
00:50:05,000 --> 00:50:05,000
对对对

1618
00:50:05,000 --> 00:50:07,000
你现在要什么来的

1619
00:50:07,000 --> 00:50:09,000
peer to

1620
00:50:09,000 --> 00:50:09,000
不是 peer to

1621
00:50:09,000 --> 00:50:11,000
decentralized

1622
00:50:11,000 --> 00:50:11,000
没错

1623
00:50:11,000 --> 00:50:13,000
比如说 git 对吧

1624
00:50:13,000 --> 00:50:15,000
这个如果你用 svn 的话

1625
00:50:15,000 --> 00:50:16,000
你的 reportal

1626
00:50:16,000 --> 00:50:16,000
垮了

1627
00:50:16,000 --> 00:50:18,000
你就完蛋了

1628
00:50:18,000 --> 00:50:19,000
那用 git 的话就没有这个问题

1629
00:50:19,000 --> 00:50:20,000
那还在

1630
00:50:20,000 --> 00:50:20,000
对吧

1631
00:50:20,000 --> 00:50:21,000
没错

1632
00:50:21,000 --> 00:50:22,000
然后如果你

1633
00:50:22,000 --> 00:50:26,000
如果我们人类多用几个操作系统的话

1634
00:50:26,000 --> 00:50:29,000
不要说什么一个操作系统统一天下

1635
00:50:29,000 --> 00:50:32,000
那也许如果真的出了什么非常大的幼儿子

1636
00:50:32,000 --> 00:50:37,000
那也许还是有一部分人可以继续正常的从容使用他们的电脑

1637
00:50:37,000 --> 00:50:38,000
对吧

1638
00:50:38,000 --> 00:50:38,000
嗯哼

1639
00:50:38,000 --> 00:50:39,000
或者反过来

1640
00:50:39,000 --> 00:50:42,000
也许这个补丁的发布过程

1641
00:50:42,000 --> 00:50:46,000
如果要减少补丁发布过程的危险性的话

1642
00:50:46,000 --> 00:50:49,000
也可以把发布的服务器散落在世界各地

1643
00:50:49,000 --> 00:50:51,000
这样比较

1644
00:50:51,000 --> 00:50:52,000
嗯

1645
00:50:52,000 --> 00:50:55,000
但是如果攻击者从补丁的源头

1646
00:50:55,000 --> 00:50:57,000
源代码上黑他的话

1647
00:50:57,000 --> 00:50:59,000
那还是不继续是

1648
00:50:59,000 --> 00:51:00,000
对

1649
00:51:00,000 --> 00:51:02,000
你只要有 spot

1650
00:51:02,000 --> 00:51:04,000
single point of failure

1651
00:51:04,000 --> 00:51:06,000
总是会有这种安全因素而出现

1652
00:51:06,000 --> 00:51:06,000
对

1653
00:51:06,000 --> 00:51:08,000
没错

1654
00:51:08,000 --> 00:51:09,000
所以没办法

1655
00:51:09,000 --> 00:51:10,000
嗯

1656
00:51:10,000 --> 00:51:14,000
我会想到一个就是我们公司在搞一个叫做 spot 运动

1657
00:51:14,000 --> 00:51:16,000
single point of truth

1658
00:51:16,000 --> 00:51:18,000
就是要把

1659
00:51:18,000 --> 00:51:21,000
因为我们公司有一个非常复杂的 ticket system

1660
00:51:21,000 --> 00:51:23,000
那个面向用户有一套 ticket

1661
00:51:23,000 --> 00:51:26,000
然后面向内部有一套 ticket

1662
00:51:26,000 --> 00:51:26,000
嗯

1663
00:51:26,000 --> 00:51:27,000
对

1664
00:51:28,000 --> 00:51:30,000
然后面向程序员又有一套 ticket

1665
00:51:30,000 --> 00:51:31,000
嗯

1666
00:51:31,000 --> 00:51:33,000
这三个 ticket system 是彼此不通的

1667
00:51:33,000 --> 00:51:36,000
然后有一个叫做 spot 的运动

1668
00:51:36,000 --> 00:51:42,000
就是要把所有的这个 ticket 汇总到同一个平台上

1669
00:51:42,000 --> 00:51:47,000
然后只在一个 ticket 里面追踪所有整个项目的进程和文档什么的

1670
00:51:47,000 --> 00:51:49,000
这个 spot 怎么做呢

1671
00:51:49,000 --> 00:51:51,000
single point of truth

1672
00:51:51,000 --> 00:51:56,000
就是啊其实就是把人手工啊把那个所有 ticket 汇总到一起

1673
00:51:56,000 --> 00:51:59,000
是一个非常浩瀚的工程

1674
00:51:59,000 --> 00:52:01,000
但是已经做了三五周了

1675
00:52:01,000 --> 00:52:03,000
还可能只完成一半了

1676
00:52:03,000 --> 00:52:04,000
但我觉得这个

1677
00:52:04,000 --> 00:52:05,000
这个

1678
00:52:05,000 --> 00:52:06,000
那很快了呀

1679
00:52:06,000 --> 00:52:08,000
三五周都完成了一半了

1680
00:52:08,000 --> 00:52:10,000
毕竟是小公司了

1681
00:52:10,000 --> 00:52:11,000
然后

1682
00:52:11,000 --> 00:52:13,000
agile 一点

1683
00:52:13,000 --> 00:52:13,000
对

1684
00:52:13,000 --> 00:52:21,000
然后这个让我想到就是跟刚才的这个要避免单点失败的思路

1685
00:52:21,000 --> 00:52:23,000
其实是相反的

1686
00:52:23,000 --> 00:52:24,000
就是信息要尽量集中起来

1687
00:52:24,000 --> 00:52:28,000
但是安全性要尽量分散开

1688
00:52:28,000 --> 00:52:29,000
对

1689
00:52:29,000 --> 00:52:31,000
下车不叫新闻

1690
00:52:31,000 --> 00:52:31,000
下车是讨论

1691
00:52:31,000 --> 00:52:33,000
是这个 Lcap 10

1692
00:52:33,000 --> 00:52:34,000
就是 OS 10 10.11

1693
00:52:34,000 --> 00:52:37,000
他出了也挺久了

1694
00:52:37,000 --> 00:52:37,000
我们都装

1695
00:52:37,000 --> 00:52:38,000
你装上了吧

1696
00:52:38,000 --> 00:52:38,000
当然装

1697
00:52:38,000 --> 00:52:39,000
对

1698
00:52:39,000 --> 00:52:40,000
我也装

1699
00:52:40,000 --> 00:52:42,000
然后其中有个对开发者来说

1700
00:52:42,000 --> 00:52:44,000
对我们这种经常属命令行的人来说

1701
00:52:44,000 --> 00:52:45,000
也会比较大的改动

1702
00:52:45,000 --> 00:52:48,000
就是他的人称叫做 Rootless

1703
00:52:48,000 --> 00:52:50,000
无根的特性

1704
00:52:50,000 --> 00:52:55,000
也叫做 System Integrity Protection

1705
00:52:55,000 --> 00:52:58,000
系统完整性保护

1706
00:52:58,000 --> 00:52:58,000
对

1707
00:52:58,000 --> 00:52:58,000
没错

1708
00:52:58,000 --> 00:53:00,000
这个翻译的还是挺好的

1709
00:53:00,000 --> 00:53:02,000
简单来说

1710
00:53:02,000 --> 00:53:07,000
就是在 OS 10 10.11 里面默认情况下

1711
00:53:07,000 --> 00:53:11,000
系统的一些根目录的都是

1712
00:53:11,000 --> 00:53:13,000
就是用户是不能改的

1713
00:53:13,000 --> 00:53:14,000
哪怕是你用 Studio

1714
00:53:14,000 --> 00:53:16,000
用 RootUser 的上面

1715
00:53:16,000 --> 00:53:18,000
也是不能改动那些目录的里面的内容的

1716
00:53:18,000 --> 00:53:21,000
比如说跟下面的 User

1717
00:53:21,000 --> 00:53:22,000
跟下面的 Bean

1718
00:53:22,000 --> 00:53:25,000
这些比较就系统核心的应用

1719
00:53:25,000 --> 00:53:26,000
你是没有办法去改动它的

1720
00:53:26,000 --> 00:53:29,000
主要是四个地方

1721
00:53:29,000 --> 00:53:30,000
slash system

1722
00:53:30,000 --> 00:53:31,000
slash bin

1723
00:53:31,000 --> 00:53:31,000
slash user

1724
00:53:31,000 --> 00:53:32,000
slash sbin

1725
00:53:32,000 --> 00:53:37,000
如果你对 Posix 系统的标准命令数比较熟悉的话

1726
00:53:37,000 --> 00:53:40,000
基本上就是 bin user 和 sbin 三个位保护起来

1727
00:53:40,000 --> 00:53:44,000
然后 slash system 是 OS 10 自由的一个

1728
00:53:44,000 --> 00:53:47,000
一个方式的文件的地方

1729
00:53:47,000 --> 00:53:48,000
对

1730
00:53:48,000 --> 00:53:53,000
所以其实这次我们上期有聊到过

1731
00:53:53,000 --> 00:53:55,000
应该是在本书上前几期吧

1732
00:53:55,000 --> 00:53:57,000
有一期聊到过这个事儿

1733
00:53:57,000 --> 00:53:59,000
不然卢涛你怎么看这个特性

1734
00:53:59,000 --> 00:54:10,000
我觉得这是苹果自把这个 slash user

1735
00:54:10,000 --> 00:54:11,000
slash local

1736
00:54:11,000 --> 00:54:15,000
slash bin 改名为 slash application 之后

1737
00:54:15,000 --> 00:54:17,000
做了第二件好事

1738
00:54:17,000 --> 00:54:20,000
就是防止用户轰掉自己的脚

1739
00:54:20,000 --> 00:54:21,000
对

1740
00:54:21,000 --> 00:54:27,000
你一不小心来个 RM 空格斜杠回车

1741
00:54:27,000 --> 00:54:29,000
或者是更凶狠一点

1742
00:54:29,000 --> 00:54:34,000
RM 空格横线 RF 空格斜杠回车

1743
00:54:34,000 --> 00:54:35,000
你就挂了

1744
00:54:35,000 --> 00:54:36,000
对

1745
00:54:36,000 --> 00:54:38,000
其实

1746
00:54:38,000 --> 00:54:41,000
以上两个语句请不要在家尝试

1747
00:54:41,000 --> 00:54:41,000
对

1748
00:54:41,000 --> 00:54:45,000
不要随便听那颗空谋

1749
00:54:45,000 --> 00:54:47,000
不要在家听那颗空谋

1750
00:54:47,000 --> 00:54:50,000
你用 10.11 就无所谓了

1751
00:54:50,000 --> 00:54:51,000
对

1752
00:54:51,000 --> 00:54:52,000
然后

1753
00:54:52,000 --> 00:54:54,000
其实归根节的原因还是

1754
00:54:54,000 --> 00:54:56,000
早期 UNIX 的用户

1755
00:54:56,000 --> 00:55:01,000
在吃他们自己的狗粮的时候

1756
00:55:01,000 --> 00:55:04,000
采用一种非常实用主义者的态度

1757
00:55:04,000 --> 00:55:04,000
就是

1758
00:55:04,000 --> 00:55:08,000
一个非常简单的原则

1759
00:55:08,000 --> 00:55:08,000
就是

1760
00:55:08,000 --> 00:55:11,000
用户只有两级

1761
00:55:11,000 --> 00:55:12,000
一个是

1762
00:55:12,000 --> 00:55:13,000
一个是

1763
00:55:13,000 --> 00:55:16,000
非常普通的用户

1764
00:55:16,000 --> 00:55:17,000
另外一个就是 root 用户

1765
00:55:17,000 --> 00:55:19,000
然后用 root 用户就是可以做一切事情

1766
00:55:20,000 --> 00:55:21,000
具好

1767
00:55:21,000 --> 00:55:21,000
对

1768
00:55:21,000 --> 00:55:24,000
就没有再详细的层级了

1769
00:55:24,000 --> 00:55:26,000
在没有 ACL 的时代

1770
00:55:26,000 --> 00:55:28,000
没有什么

1771
00:55:29,000 --> 00:55:32,000
一个复杂的窗口可以让你选这个用户

1772
00:55:32,000 --> 00:55:33,000
可以干什么

1773
00:55:33,000 --> 00:55:35,000
可以具体的做哪些的时代

1774
00:55:35,000 --> 00:55:36,000
基本上

1775
00:55:36,000 --> 00:55:40,000
这个文件的权限加上 root 非 root

1776
00:55:40,000 --> 00:55:43,000
就是你能对系统做的最好的保护

1777
00:55:43,000 --> 00:55:45,000
然后这一套东西被

1778
00:55:45,000 --> 00:55:45,000
对

1779
00:55:45,000 --> 00:55:46,000
对

1780
00:55:46,000 --> 00:55:48,000
OS 10 搬过来之后

1781
00:55:48,000 --> 00:55:53,000
基本上还是保持现状一直到现在

1782
00:55:53,000 --> 00:55:56,000
而绝大就是对于绝大多数用户来说

1783
00:55:56,000 --> 00:55:58,000
他们完全不会意识到这一点的

1784
00:55:58,000 --> 00:56:01,000
但是只要你稍微折腾一下这个系统

1785
00:56:01,000 --> 00:56:08,000
你会觉得它还是相对来说比较 fragile

1786
00:56:08,000 --> 00:56:13,000
就是如果你对使用 root 之后会干什么

1787
00:56:13,000 --> 00:56:16,000
会可能造出什么样的危害

1788
00:56:16,000 --> 00:56:17,000
没有一个清醒的认识的话

1789
00:56:17,000 --> 00:56:19,000
你还是很容易轰掉自己的脚

1790
00:56:19,000 --> 00:56:26,000
而这个新的特性的话就是更进一步帮助用户来杜绝这一点

1791
00:56:26,000 --> 00:56:27,000
对

1792
00:56:27,000 --> 00:56:31,000
其实我觉得这个特性最大的一个好处

1793
00:56:31,000 --> 00:56:35,000
就像我在 24 期里面讨论过的叫做 immutable system

1794
00:56:35,000 --> 00:56:36,000
就是不可变的系统

1795
00:56:36,000 --> 00:56:38,000
就什么意思呢

1796
00:56:38,000 --> 00:56:41,000
就是说整个系统的那些文件经常都是不可变的

1797
00:56:41,000 --> 00:56:42,000
就是你不可以修改它的

1798
00:56:42,000 --> 00:56:44,000
你唯一能做的

1799
00:56:44,000 --> 00:56:45,000
比如说你系统升级的时候

1800
00:56:45,000 --> 00:56:46,000
就是替换掉整个系统的镜像

1801
00:56:46,000 --> 00:56:48,000
从而可以保证

1802
00:56:48,000 --> 00:56:50,000
因为类似有点像 Chrome OS 那种

1803
00:56:50,000 --> 00:56:52,000
就系统是整个本身是非常安全的

1804
00:56:52,000 --> 00:56:54,000
因为过去像 Windows 也好

1805
00:56:54,000 --> 00:56:56,000
还是之前的 OS 10 也好

1806
00:56:56,000 --> 00:56:59,000
一个最稳对大的不安全因素

1807
00:56:59,000 --> 00:57:04,000
刚才说你说用户不小心操作失误删掉

1808
00:57:04,000 --> 00:57:06,000
这个核心的文件导致系统无法使用之外

1809
00:57:06,000 --> 00:57:09,000
这种可能也只有我们这种人才会干得出来

1810
00:57:09,000 --> 00:57:13,000
但是对于普通用户来讲

1811
00:57:13,000 --> 00:57:15,000
可能最重要的是一个反而是安全性的考虑

1812
00:57:15,000 --> 00:57:22,000
就是说一些恶意软件能不能通过修改你系统一些重要文件的方式

1813
00:57:22,000 --> 00:57:24,000
隐藏在你的系统里面去

1814
00:57:24,000 --> 00:57:25,000
比如说一开机就启动一个什么东西

1815
00:57:25,000 --> 00:57:28,000
然后你又没有办法知道或者没有办法删除它

1816
00:57:28,000 --> 00:57:29,000
对吧

1817
00:57:29,000 --> 00:57:29,000
对

1818
00:57:29,000 --> 00:57:33,000
但有了 SIP 的保护的话

1819
00:57:33,000 --> 00:57:35,000
就可以杜绝这种事情发生

1820
00:57:35,000 --> 00:57:38,000
也可以说你某种程度上说

1821
00:57:38,000 --> 00:57:45,000
没有通过杀核机制实现了系统核心部件的安全性

1822
00:57:45,000 --> 00:57:46,000
没错

1823
00:57:46,000 --> 00:57:49,000
就是从今以后如果一个用户

1824
00:57:49,000 --> 00:57:53,000
一个程序在要做什么的时候跳出来让你输入 root 密码

1825
00:57:53,000 --> 00:57:57,000
99%人包括程序员都会

1826
00:57:57,000 --> 00:58:01,000
就是不加思索的直接输入自己的用户密码

1827
00:58:01,000 --> 00:58:02,000
对吧

1828
00:58:02,000 --> 00:58:04,000
但是在 SIP 出来之前

1829
00:58:04,000 --> 00:58:06,000
这个其实是一个非常危险的举动

1830
00:58:06,000 --> 00:58:07,000
因为

1831
00:58:07,000 --> 00:58:09,000
随时肯定给你中了什么木码

1832
00:58:09,000 --> 00:58:10,000
不知道它要干什么对吧

1833
00:58:10,000 --> 00:58:13,000
OS 10 并不会告诉你它具体要干嘛

1834
00:58:13,000 --> 00:58:16,000
而这 OS 10 自己也不知道它具体要干嘛

1835
00:58:16,000 --> 00:58:18,000
它只是在说这个玩意要权限

1836
00:58:18,000 --> 00:58:20,000
那我问给不给权限吗

1837
00:58:20,000 --> 00:58:21,000
用说给

1838
00:58:21,000 --> 00:58:21,000
对

1839
00:58:21,000 --> 00:58:23,000
然后我靠机器挂了

1840
00:58:23,000 --> 00:58:24,000
对吧

1841
00:58:24,000 --> 00:58:26,000
其实 Windows 上面也有这个问题

1842
00:58:26,000 --> 00:58:28,000
就是 Windows 叫什么 UAF

1843
00:58:28,000 --> 00:58:29,000
还是叫什么的那个玩意儿

1844
00:58:29,000 --> 00:58:30,000
UAC

1845
00:58:30,000 --> 00:58:30,000
对

1846
00:58:30,000 --> 00:58:31,000
它跳出来

1847
00:58:31,000 --> 00:58:33,000
Windows 比较

1848
00:58:33,000 --> 00:58:35,000
就是怎么说比较啰嗦的一点

1849
00:58:35,000 --> 00:58:38,000
在这里它会有一个 details

1850
00:58:38,000 --> 00:58:40,000
你可以点一点 details

1851
00:58:40,000 --> 00:58:41,000
然后它会说什么

1852
00:58:41,000 --> 00:58:45,000
这个程序它位于哪个路径之下

1853
00:58:45,000 --> 00:58:46,000
想要干嘛

1854
00:58:46,000 --> 00:58:47,000
或者想要改什么

1855
00:58:47,000 --> 00:58:48,000
它会跟你说一句

1856
00:58:48,000 --> 00:58:51,000
但是也许一开始你会点

1857
00:58:51,000 --> 00:58:52,000
如果你是一个程序员的话

1858
00:58:52,000 --> 00:58:53,000
或者如果你是一个

1859
00:58:53,000 --> 00:58:55,000
会读所有

1860
00:58:55,000 --> 00:58:58,000
会读用户学义里面每一句话的德国人的话

1861
00:58:58,000 --> 00:58:59,000
你可能会去读

1862
00:58:59,000 --> 00:59:00,000
这个里面到底写了什么

1863
00:59:00,000 --> 00:59:02,000
但是在一段时间之后

1864
00:59:02,000 --> 00:59:03,000
你还是会就是 no brainer 的

1865
00:59:03,000 --> 00:59:05,000
直接点一下允许

1866
00:59:05,000 --> 00:59:05,000
对吧

1867
00:59:05,000 --> 00:59:06,000
对

1868
00:59:06,000 --> 00:59:10,000
所以这是一个典型的技术

1869
00:59:10,000 --> 00:59:13,000
技术思维没有考虑这个心理

1870
00:59:13,000 --> 00:59:16,000
就人的本性的一些东西的设计

1871
00:59:16,000 --> 00:59:18,000
是一个非常失败的产品设计

1872
00:59:18,000 --> 00:59:19,000
但是

1873
00:59:19,000 --> 00:59:21,000
但是好像没什么更好的解决方案

1874
00:59:21,000 --> 00:59:22,000
anyway

1875
00:59:22,000 --> 00:59:24,000
其实我有一个很好

1876
00:59:24,000 --> 00:59:25,000
我有一个很大的问题

1877
00:59:25,000 --> 00:59:27,000
就在于在 OS 10 有了这个 SIP

1878
00:59:27,000 --> 00:59:28,000
这个特性之后

1879
00:59:28,000 --> 00:59:30,000
那我们还要这个 root 账号干嘛

1880
00:59:30,000 --> 00:59:31,000
没什么用了呀

1881
00:59:31,000 --> 00:59:32,000
对

1882
00:59:32,000 --> 00:59:34,000
所以应该搞一个 rootless 账号是吧

1883
00:59:34,000 --> 00:59:35,000
rootless

1884
00:59:35,000 --> 00:59:38,000
对所以它应该是 rootless 系统

1885
00:59:38,000 --> 00:59:39,000
但是那还要 substu 干嘛

1886
00:59:39,000 --> 00:59:43,000
好问题

1887
00:59:43,000 --> 00:59:45,000
对吧

1888
00:59:45,000 --> 00:59:52,000
因为其实你用那个你本来的一个账号就只分那个叫做 administrator 和这个就是 normal user 嘛

1889
00:59:52,000 --> 00:59:54,000
两种类型的账号对吧

1890
00:59:54,000 --> 01:00:00,000
呃那 root 你反正也不能做什么呃 administrator 干不了的事情呢

1891
01:00:00,000 --> 01:00:02,000
要他干要他有什么用呢

1892
01:00:02,000 --> 01:00:07,000
你就直接做一个这个普通的呃嗯嗯嗯

1893
01:00:07,000 --> 01:00:09,000
账号系统然后不要 substu 好了

1894
01:00:09,000 --> 01:00:21,000
嗯我觉得可能还是在多用户的场景之下有一定用途啊就你可以多用户的情况下你用自己账号去做这个自己的事情啊但你不需要 substu 啊

1895
01:00:21,000 --> 01:00:28,000
你 substu 之后才可以做才可以去管理别人的文件啊如果你是一个管理员的话就假如是

1896
01:00:28,000 --> 01:00:33,000
我就我就我就说这个问题嘛就是说 substu 不是说你变成别的账号嘛你是变成 root 嘛对

1897
01:00:33,000 --> 01:00:37,000
啊但 substu 也可以变成别的就就 substu as another user

1898
01:00:37,000 --> 01:00:43,000
对对对但基本上来说是 substu as 就不加参数的话是 substu as root 嘛对吧

1899
01:00:43,000 --> 01:00:48,000
但我就问好就我的问题就在于那 root 本身还有意义吗

1900
01:00:48,000 --> 01:00:53,000
嗯所以像 ubuntu 那样就完全不设计 root 正好了

1901
01:00:53,000 --> 01:01:00,000
就在需要他也有他他也有只是说默认是他没有一个不准登录的

1902
01:01:00,000 --> 01:01:03,000
不准登然后你还是可以 substu 成 root 的

1903
01:01:03,000 --> 01:01:07,000
我就只是好奇在有 sip 的情况下要 root 招号本身有什么用

1904
01:01:07,000 --> 01:01:09,000
好像没有什么用

1905
01:01:09,000 --> 01:01:11,000
backward compatibility

1906
01:01:11,000 --> 01:01:15,000
有可能因为毕竟它是一个 postex 系统对没错

1907
01:01:15,000 --> 01:01:22,000
然后还有一个挺好玩的问题就是说如果这个系统本身是 immutable 的话

1908
01:01:22,000 --> 01:01:25,000
其实可以有个事情可以做就是节省空间嘛

1909
01:01:25,000 --> 01:01:28,000
因为你知道那个 os 10 包括像 windows 也一样

1910
01:01:28,000 --> 01:01:31,000
它是有一个叫做所谓的就是 recovery partition

1911
01:01:31,000 --> 01:01:35,000
就是恢复分区对这四个字

1912
01:01:35,000 --> 01:01:39,000
恢复分区

1913
01:01:39,000 --> 01:01:40,000
恢化肥

1914
01:01:40,000 --> 01:01:44,000
恢发之后出现恢复分区

1915
01:01:44,000 --> 01:01:52,000
恢复分区的一个主要作用就在于你的之前在没有 sip 的情况下

1916
01:01:52,000 --> 01:01:56,000
你把自己脚轰掉删掉了这个跟系统里面的重要文件之后

1917
01:01:56,000 --> 01:02:01,000
你可以通过 recovery partition 把系统回复到一个可以用的状态嘛

1918
01:02:01,000 --> 01:02:07,000
前面它有一些可能系统一些就核心的文件它是在那里还有一个备份的对吧

1919
01:02:07,000 --> 01:02:13,000
但如果这个本身是启用了这个 sip 就是系统的核心部件是不可修改的话

1920
01:02:13,000 --> 01:02:17,000
其实恢复分区就没什么实际的意义了

1921
01:02:17,000 --> 01:02:20,000
因为你可以保证系统本本体是不被修改的嘛

1922
01:02:20,000 --> 01:02:27,000
然后就可以把那个恢复分区干掉或者是至少重用一部分空间嘛

1923
01:02:27,000 --> 01:02:29,000
通过就是 hardlink 的方式对吧

1924
01:02:29,000 --> 01:02:30,000
这倒是

1925
01:02:30,000 --> 01:02:32,000
就是 hardlink 的

1926
01:02:32,000 --> 01:02:34,000
不是 hardlink 好像不能跨区是吧

1927
01:02:34,000 --> 01:02:35,000
不能跨 partition

1928
01:02:37,000 --> 01:02:38,000
应该是不

1929
01:02:38,000 --> 01:02:41,000
你得先 mount 才能 hardlink

1930
01:02:42,000 --> 01:02:44,000
我不太清楚这个具体实现方式怎么样子

1931
01:02:44,000 --> 01:02:49,000
但是起码恢复分区是在这种情况下是在系统里面看不见的

1932
01:02:49,000 --> 01:02:52,000
所以我在想你会有办法就是两个重用一下系统

1933
01:02:52,000 --> 01:02:56,000
因为毕竟恢复分区应该还是有个几个巨大的

1934
01:02:56,000 --> 01:02:58,000
不会被恢复分区默认不会被 mount 上

1935
01:02:58,000 --> 01:03:01,000
所以其实在系统使用过程中它是看不到的

1936
01:03:01,000 --> 01:03:03,000
但是不会被系统看到的

1937
01:03:03,000 --> 01:03:06,000
那如果说这个系统本身是保证可以不被修改的

1938
01:03:06,000 --> 01:03:07,000
还要那个恢复分区在干嘛

1939
01:03:07,000 --> 01:03:08,000
对对

1940
01:03:08,000 --> 01:03:12,000
我又在想这个问题是不是就没有什么必要性了

1941
01:03:12,000 --> 01:03:16,000
就把恢复分区里面内容放回这个根系统里面就好了

1942
01:03:16,000 --> 01:03:16,000
嗯

1943
01:03:17,000 --> 01:03:19,000
因为恢复分区一个最主要作用就是说

1944
01:03:19,000 --> 01:03:22,000
如果那个还有一个就是软件升级的时候

1945
01:03:22,000 --> 01:03:23,000
你可以直接从那安装系统嘛

1946
01:03:23,000 --> 01:03:23,000
对

1947
01:03:23,000 --> 01:03:28,000
此时如果那个软件补丁挂掉的话

1948
01:03:28,000 --> 01:03:31,000
就是软件补丁是一个破掉的坏补丁的话

1949
01:03:31,000 --> 01:03:34,000
那你可以通过恢复分区来恢复

1950
01:03:35,000 --> 01:03:35,000
Anyway

1951
01:03:35,000 --> 01:03:37,000
这还是一个挺值得比较 detail 的

1952
01:03:37,000 --> 01:03:38,000
但

1953
01:03:39,000 --> 01:03:39,000
对

1954
01:03:41,000 --> 01:03:41,000
嗯

1955
01:03:41,000 --> 01:03:42,000
对

1956
01:03:42,000 --> 01:03:49,000
当然在这个 SIP 的保护下面还是有几个地方是可以被改动的

1957
01:03:49,000 --> 01:03:50,000
他们仍然就是系统的一部分

1958
01:03:50,000 --> 01:03:54,000
只不过这部分就是系统特意流出来让你去改的就如果你给

1959
01:03:54,000 --> 01:03:55,000
user 那块吗

1960
01:03:55,000 --> 01:03:55,000
对

1961
01:03:55,000 --> 01:03:57,000
如果你的程序员

1962
01:03:57,000 --> 01:03:57,000
是 user 对

1963
01:03:57,000 --> 01:03:58,000
user 那块

1964
01:03:58,000 --> 01:03:59,000
呃

1965
01:04:00,000 --> 01:04:00,000
是 user local

1966
01:04:00,000 --> 01:04:01,000
只有 user local

1967
01:04:01,000 --> 01:04:02,000
user local

1968
01:04:02,000 --> 01:04:02,000
对

1969
01:04:02,000 --> 01:04:03,000
sorry

1970
01:04:03,000 --> 01:04:04,000
然后呃

1971
01:04:04,000 --> 01:04:08,000
这其实要涉及到另外一个概念叫做这个 filesystem hierarchy standard

1972
01:04:08,000 --> 01:04:09,000
对吧

1973
01:04:09,000 --> 01:04:09,000
对

1974
01:04:10,000 --> 01:04:11,000
嗯

1975
01:04:11,000 --> 01:04:16,000
对其实一个很扯的事情就是说这起码在 linux 上面它是有这么一个规范的

1976
01:04:17,000 --> 01:04:21,000
规范就是说这个整个系统的这些根目录下面这些文件数应该是长什么样

1977
01:04:21,000 --> 01:04:24,000
各个目的里面放什么东西

1978
01:04:24,000 --> 01:04:27,000
比如说就长相刚刚提到像那个跟下 bin 啊

1979
01:04:27,000 --> 01:04:28,000
跟下的 boot

1980
01:04:28,000 --> 01:04:30,000
跟下的 etc 啊

1981
01:04:30,000 --> 01:04:31,000
etc 啊

1982
01:04:31,000 --> 01:04:32,000
etc 啊

1983
01:04:32,000 --> 01:04:33,000
跟下这个

1984
01:04:33,000 --> 01:04:34,000
呃

1985
01:04:34,000 --> 01:04:35,000
sbin 啊

1986
01:04:35,000 --> 01:04:36,000
这些东西

1987
01:04:36,000 --> 01:04:37,000
boot 是 sandard 吗

1988
01:04:37,000 --> 01:04:38,000
不是吧

1989
01:04:38,000 --> 01:04:40,000
boot

1990
01:04:40,000 --> 01:04:41,000
可能就 linux 有吧

1991
01:04:41,000 --> 01:04:45,000
这个有一个其实有一本书叫做 linux haters manual

1992
01:04:45,000 --> 01:04:46,000
如果各位有兴趣的话

1993
01:04:46,000 --> 01:04:47,000
一定要去看一看

1994
01:04:47,000 --> 01:04:49,000
里面对这个标准

1995
01:04:49,000 --> 01:04:50,000
呃

1996
01:04:50,000 --> 01:04:51,000
所谓的这个

1997
01:04:51,000 --> 01:04:52,000
呃

1998
01:04:52,000 --> 01:04:54,000
命目录数标准

1999
01:04:54,000 --> 01:04:55,000
大家吐槽

2000
01:04:55,000 --> 01:04:57,000
就是虽然有这么一个标准存在

2001
01:04:57,000 --> 01:04:58,000
它名字叫标准

2002
01:04:58,000 --> 01:04:58,000
哎

2003
01:04:58,000 --> 01:04:59,000
它名字叫标准

2004
01:04:59,000 --> 01:05:00,000
不叫标准

2005
01:05:00,000 --> 01:05:01,000
但反正是

2006
01:05:01,000 --> 01:05:02,000
是叫 standard

2007
01:05:02,000 --> 01:05:03,000
有这么一个 standard 的存在

2008
01:05:03,000 --> 01:05:06,000
但所有人都只是把它当做 reference 来用

2009
01:05:06,000 --> 01:05:06,000
就是

2010
01:05:06,000 --> 01:05:07,000
嗯

2011
01:05:07,000 --> 01:05:07,000
呃

2012
01:05:07,000 --> 01:05:10,000
你只是模糊的知道这个

2013
01:05:10,000 --> 01:05:12,000
目录大概可以拿来干什么

2014
01:05:12,000 --> 01:05:14,000
但现在的实际情况就是

2015
01:05:14,000 --> 01:05:15,000
没有两个

2016
01:05:15,000 --> 01:05:16,000
呃

2017
01:05:16,000 --> 01:05:17,000
linux 发行版的

2018
01:05:18,000 --> 01:05:18,000
这个

2019
01:05:18,000 --> 01:05:21,000
目录数的形状是一模一样

2020
01:05:21,000 --> 01:05:22,000
这是一个非常

2021
01:05:23,000 --> 01:05:25,000
但有些很扯的一些问题

2022
01:05:25,000 --> 01:05:27,000
比如说像那个

2023
01:05:27,000 --> 01:05:28,000
我问你哈

2024
01:05:28,000 --> 01:05:30,000
你知不知道 bin 和 sbin 的区别是什么

2025
01:05:30,000 --> 01:05:31,000
sbin 是 superbin

2026
01:05:31,000 --> 01:05:33,000
就是只有 superuser 可以用的 bin

2027
01:05:34,000 --> 01:05:36,000
那他们两个哪些放哪些呢

2028
01:05:36,000 --> 01:05:37,000
这个这个界限是什么

2029
01:05:37,000 --> 01:05:39,000
sbin 里面比如说

2030
01:05:40,000 --> 01:05:42,000
reboot 在 sbin 里面

2031
01:05:42,000 --> 01:05:43,000
嗯哼

2032
01:05:43,000 --> 01:05:44,000
呃

2033
01:05:44,000 --> 01:05:47,000
然后 bin 里面是什么 vi 啊之类的东西

2034
01:05:47,000 --> 01:05:48,000
就是

2035
01:05:48,000 --> 01:05:49,000
就是不会

2036
01:05:49,000 --> 01:05:50,000
不会

2037
01:05:50,000 --> 01:05:51,000
就是如果你用起来

2038
01:05:51,000 --> 01:05:54,000
可能脚被轰到的东西都在 sbin 里面

2039
01:05:54,000 --> 01:05:55,000
理论上是这样的

2040
01:05:55,000 --> 01:05:56,000
但实际上也并不是这样的

2041
01:05:56,000 --> 01:05:59,000
就是 bin 里面还是有很多非常危险的工具

2042
01:05:59,000 --> 01:06:00,000
但

2043
01:06:00,000 --> 01:06:01,000
对

2044
01:06:01,000 --> 01:06:05,000
然后再问你一个 bin 和 userbin 有什么区别

2045
01:06:05,000 --> 01:06:06,000
呃

2046
01:06:06,000 --> 01:06:07,000
userbin 和

2047
01:06:07,000 --> 01:06:10,000
你应该问 userbin 和 userlocalbin 有什么区别

2048
01:06:10,000 --> 01:06:11,000
哈哈哈

2049
01:06:11,000 --> 01:06:12,000
哈哈哈

2050
01:06:12,000 --> 01:06:17,000
bin 的 bin 里面就是 slashbin 里面应该是系统的核心工具

2051
01:06:17,000 --> 01:06:21,000
而 userslashuserslashbin 里面则是

2052
01:06:21,000 --> 01:06:23,000
就是

2053
01:06:23,000 --> 01:06:24,000
就是在

2054
01:06:24,000 --> 01:06:25,000
比较不那么

2055
01:06:25,000 --> 01:06:27,000
其实这个在 bsd 上比较分的清楚

2056
01:06:27,000 --> 01:06:29,000
就是在那个

2057
01:06:29,000 --> 01:06:32,000
kernelspace 里面的工具都在 slashbin

2058
01:06:32,000 --> 01:06:35,000
在 userspace 里面的都在 userslashbin

2059
01:06:35,000 --> 01:06:37,000
然后 user

2060
01:06:37,000 --> 01:06:38,000
它其实还是蛮好的区分

2061
01:06:38,000 --> 01:06:41,000
然后 userslashlocalslashbin

2062
01:06:41,000 --> 01:06:42,000
才是

2063
01:06:42,000 --> 01:06:43,000
呃

2064
01:06:43,000 --> 01:06:45,000
用户自己装的第三方应用程序

2065
01:06:45,000 --> 01:06:46,000
应该去的里面

2066
01:06:46,000 --> 01:06:46,000
对

2067
01:06:46,000 --> 01:06:48,000
就如果你要去说的话

2068
01:06:48,000 --> 01:06:51,000
其实这个东西还是比较可以理解的

2069
01:06:51,000 --> 01:06:51,000
但是

2070
01:06:51,000 --> 01:06:54,000
但是在执行的时候就会出现各种边界模糊的

2071
01:06:54,000 --> 01:06:54,000
对

2072
01:06:54,000 --> 01:06:56,000
非常非常多的妖鹅子

2073
01:06:56,000 --> 01:06:56,000
就是

2074
01:06:56,000 --> 01:06:57,000
然后

2075
01:06:57,000 --> 01:07:00,000
然后就你完全不明白你在分完之后有什么好处

2076
01:07:00,000 --> 01:07:02,000
呃

2077
01:07:02,000 --> 01:07:05,000
治愈的处女座

2078
01:07:05,000 --> 01:07:06,000
哈哈哈

2079
01:07:06,000 --> 01:07:08,000
或者说

2080
01:07:08,000 --> 01:07:11,000
最开始的设计者是个处女座

2081
01:07:11,000 --> 01:07:14,000
然后他的这个设计导致了后来的所有的处女座的 linux user

2082
01:07:14,000 --> 01:07:16,000
都转向了 windows

2083
01:07:16,000 --> 01:07:16,000
就

2084
01:07:16,000 --> 01:07:20,000
因为你会觉得我靠最开始

2085
01:07:20,000 --> 01:07:23,000
这个你看我刚才说的这三个分类是不是很有逻辑啊

2086
01:07:23,000 --> 01:07:24,000
但是呢

2087
01:07:24,000 --> 01:07:29,000
你去看任何一个实际系统你都会觉得我靠怎么每一个工具都

2088
01:07:29,000 --> 01:07:33,000
每一个地方都放一些不该放的那些工具对吧

2089
01:07:33,000 --> 01:07:34,000
就

2090
01:07:34,000 --> 01:07:34,000
对对对

2091
01:07:34,000 --> 01:07:35,000
乱七八糟的

2092
01:07:35,000 --> 01:07:36,000
这是一个阴谋

2093
01:07:36,000 --> 01:07:40,000
这是 Linux 的使用者希望处女座别用来别来用我们的系统

2094
01:07:40,000 --> 01:07:41,000
就

2095
01:07:41,000 --> 01:07:45,000
如果早期他还是有他一定的这个客观的硬件基础的

2096
01:07:45,000 --> 01:07:48,000
早期像 Linux 那些磁盘空间很小嘛

2097
01:07:48,000 --> 01:07:50,000
几百 k 的磁盘空间

2098
01:07:50,000 --> 01:07:50,000
对

2099
01:07:50,000 --> 01:07:52,000
就几兆的就是很大的嘛

2100
01:07:52,000 --> 01:07:56,000
后来那个有些应用他就没有办法在

2101
01:07:56,000 --> 01:08:00,000
就是第一个驱动的 first drive 放下所有的病那些东西

2102
01:08:00,000 --> 01:08:01,000
对

2103
01:08:01,000 --> 01:08:07,000
被迫把一些像后来才出现 user 病他可以挂载到不同的一个驱动那个磁盘驱动器上面去嘛

2104
01:08:07,000 --> 01:08:08,000
没错

2105
01:08:08,000 --> 01:08:11,000
所以才导致今天这个局面后来我的理解啊就是很后

2106
01:08:11,000 --> 01:08:17,000
之后觉得说啊我们要这样来区分一下因为过去是这样的那其实变得很奇怪

2107
01:08:17,000 --> 01:08:17,000
没错

2108
01:08:17,000 --> 01:08:22,000
所以现在有一些这个发行就是 Linux 发行板他们在做一个这个就是 unify 的趋势

2109
01:08:22,000 --> 01:08:27,000
就是简化这个像刚才讲的这个病和 user 病的区别

2110
01:08:27,000 --> 01:08:29,000
因为觉得没什么必要了

2111
01:08:29,000 --> 01:08:31,000
因为现在磁盘空间都很大对吧

2112
01:08:31,000 --> 01:08:33,000
其实 OS 10 就是做了这件事情嘛

2113
01:08:33,000 --> 01:08:36,000
他非常勇敢的把这个病这种这种非常反二进制

2114
01:08:36,000 --> 01:08:39,000
这种非常反正常人非常 geek 的名字

2115
01:08:39,000 --> 01:08:43,000
换成了 applications 对吧

2116
01:08:43,000 --> 01:08:45,000
这个就更大的改变了

2117
01:08:45,000 --> 01:08:47,000
因为过去说我们像在 0.3

2118
01:08:47,000 --> 01:08:50,000
你一个就一个应用吧一个 software package

2119
01:08:50,000 --> 01:08:55,000
他是要拆成好多好多小组件分到不同的地方的

2120
01:08:55,000 --> 01:09:01,000
比如说你这个可知性的 binary 的文件会放在 bing 或者 user 病或者 local 病

2121
01:09:01,000 --> 01:09:03,000
根据你安装的来源不同

2122
01:09:03,000 --> 01:09:04,000
没错

2123
01:09:04,000 --> 01:09:07,000
然后他的这个文档会放在这个什么 man 里面

2124
01:09:07,000 --> 01:09:08,000
是什么

2125
01:09:08,000 --> 01:09:09,000
每个公路来的

2126
01:09:09,000 --> 01:09:14,000
文档是 user slash share 吧

2127
01:09:14,000 --> 01:09:17,000
应该是 share 和 man 之类的里面

2128
01:09:17,000 --> 01:09:21,000
然后他的这个什么 log 文件啊

2129
01:09:21,000 --> 01:09:23,000
又是像这个叫 var 的 log 里面

2130
01:09:23,000 --> 01:09:26,000
然后他的一些其他配置文件是在那一

2131
01:09:26,000 --> 01:09:30,000
slashadtc 下面 slash 什么一些目录里面

2132
01:09:30,000 --> 01:09:32,000
就非常就分得很散

2133
01:09:32,000 --> 01:09:36,000
像现在像 debian 啊 ubuntu 啊都是坚持这种这种做法

2134
01:09:36,000 --> 01:09:39,000
其实像那个 os 10 这种说我不要你们分那么散

2135
01:09:39,000 --> 01:09:41,000
你一个应用就老老实实成为一个 package

2136
01:09:41,000 --> 01:09:42,000
对吧

2137
01:09:42,000 --> 01:09:43,000
一个 app

2138
01:09:43,000 --> 01:09:44,000
bundle

2139
01:09:44,000 --> 01:09:46,000
方的就一个目录就是一个 bundle

2140
01:09:46,000 --> 01:09:46,000
一个应用

2141
01:09:46,000 --> 01:09:48,000
然后一个应用就是一个 bundle

2142
01:09:48,000 --> 01:09:48,000
这样

2143
01:09:48,000 --> 01:09:51,000
这也有他的优劣就各有好处吧

2144
01:09:51,000 --> 01:09:53,000
就是说那从应用性的角度来讲

2145
01:09:53,000 --> 01:09:55,000
肯定可能觉得后一种会比较高级一点

2146
01:09:55,000 --> 01:09:59,000
但是从这个系统重用和这个处理做的角度来看

2147
01:09:59,000 --> 01:10:02,000
可能觉得前一轴会好一些是吧

2148
01:10:02,000 --> 01:10:03,000
对对

2149
01:10:03,000 --> 01:10:05,000
你是按照他的用途分类呢

2150
01:10:05,000 --> 01:10:09,000
还是按照他的使用的主题分类呢

2151
01:10:09,000 --> 01:10:15,000
不过我其实我自己在就我自己在像那个 vps 上面的做法

2152
01:10:15,000 --> 01:10:17,000
也是经过了很多变迁

2153
01:10:17,000 --> 01:10:23,000
最开始的时候可能遵循这个就是 linux file system hierarchy standard 的方式

2154
01:10:23,000 --> 01:10:29,000
会把一些自己编译的或者说空安装的软件放在比如说 user local 里面

2155
01:10:29,000 --> 01:10:30,000
这个包里面是吧

2156
01:10:30,000 --> 01:10:32,000
bing 或者是 etc 里面去

2157
01:10:32,000 --> 01:10:35,000
那其实后来发现就是 bush

2158
01:10:35,000 --> 01:10:36,000
太麻烦了

2159
01:10:36,000 --> 01:10:40,000
我就放到一个我就放那个 slash opt 就是 optional 嘛

2160
01:10:40,000 --> 01:10:43,000
然后在每一个应用建一个目录吧

2161
01:10:43,000 --> 01:10:45,000
东西都塞在里面去

2162
01:10:45,000 --> 01:10:47,000
这样发现管理起来是更加简单的

2163
01:10:47,000 --> 01:10:51,000
其实我刚才就想吐槽说我靠这个还有两个

2164
01:10:51,000 --> 01:10:57,000
就我们之前说的这个 user bin 和 user local bin

2165
01:10:57,000 --> 01:10:59,000
都还听起来像模像样

2166
01:10:59,000 --> 01:11:02,000
这个 etc 和 opt 是什么鬼

2167
01:11:02,000 --> 01:11:03,000
对吧

2168
01:11:03,000 --> 01:11:05,000
什么是 etc 和 optional

2169
01:11:05,000 --> 01:11:06,000
我靠

2170
01:11:06,000 --> 01:11:10,000
就难道 user local bin 里面的东西不是 optional 的吗

2171
01:11:10,000 --> 01:11:11,000
难道

2172
01:11:11,000 --> 01:11:12,000
那个

2173
01:11:12,000 --> 01:11:13,000
而且难道什么

2174
01:11:13,000 --> 01:11:14,000
呃

2175
01:11:14,000 --> 01:11:17,000
对于 apache 的 configuration

2176
01:11:17,000 --> 01:11:19,000
不应该有一个 dedicate location 吗

2177
01:11:19,000 --> 01:11:21,000
那为什么要把它放在 etc 里面呢

2178
01:11:21,000 --> 01:11:24,000
就一种 what the fuck 的感觉

2179
01:11:24,000 --> 01:11:26,000
对

2180
01:11:26,000 --> 01:11:26,000
对

2181
01:11:26,000 --> 01:11:31,000
就是整个这个 fhs 这套规约其实都很是一个 avitory 的东西

2182
01:11:31,000 --> 01:11:31,000
对

2183
01:11:31,000 --> 01:11:32,000
非常

2184
01:11:32,000 --> 01:11:33,000
因为呃

2185
01:11:33,000 --> 01:11:34,000
历史严格

2186
01:11:34,000 --> 01:11:36,000
或者是这个过去遵守了这么多年

2187
01:11:36,000 --> 01:11:39,000
约定俗成变成了这么一个奇怪的

2188
01:11:39,000 --> 01:11:41,000
没有什么逻辑和理由的怪胎

2189
01:11:41,000 --> 01:11:42,000
嗯

2190
01:11:42,000 --> 01:11:45,000
就我还蛮支持很多现在很多发行版在做一些尝试吧

2191
01:11:45,000 --> 01:11:46,000
嗯

2192
01:11:46,000 --> 01:11:49,000
像你比如说像 os 10 的方式去看齐吧

2193
01:11:49,000 --> 01:11:50,000
没错

2194
01:11:50,000 --> 01:11:52,000
嗯

2195
01:11:52,000 --> 01:11:56,000
说回这个 capitan 的 sip 啊

2196
01:11:56,000 --> 01:12:03,000
他所给你的这个官方推荐的四个放你自己写的程序的地方是

2197
01:12:03,000 --> 01:12:05,000
呃一个是 applications

2198
01:12:05,000 --> 01:12:06,000
slash applications

2199
01:12:06,000 --> 01:12:10,000
就是就是跟目录下面的那个 applications

2200
01:12:10,000 --> 01:12:15,000
呃而不是就是用户自己的目录下面的 applications

2201
01:12:15,000 --> 01:12:18,000
对这经常造成一个问题

2202
01:12:18,000 --> 01:12:19,000
比如说你这个账号

2203
01:12:19,000 --> 01:12:21,000
这个电脑不是你一个人用

2204
01:12:21,000 --> 01:12:21,000
或者说你这个账号

2205
01:12:21,000 --> 01:12:23,000
电脑有两个账号的话

2206
01:12:23,000 --> 01:12:23,000
对

2207
01:12:23,000 --> 01:12:24,000
你会发现

2208
01:12:24,000 --> 01:12:25,000
安装给大型用户呢

2209
01:12:25,000 --> 01:12:26,000
对

2210
01:12:26,000 --> 01:12:27,000
安装给所有用户的差别

2211
01:12:28,000 --> 01:12:30,000
不是他没有没有这个选项

2212
01:12:30,000 --> 01:12:31,000
你只能安装给这个

2213
01:12:31,000 --> 01:12:33,000
呃我像 applications

2214
01:12:33,000 --> 01:12:36,000
就是 slash applications 里面的那些 bundle

2215
01:12:36,000 --> 01:12:37,000
只能有两种情况

2216
01:12:37,000 --> 01:12:40,000
属于某一个安装时候它的账户

2217
01:12:40,000 --> 01:12:42,000
和属于这个 root

2218
01:12:44,000 --> 01:12:45,000
呃对

2219
01:12:45,000 --> 01:12:49,000
不我的意思是就是这个官方推荐的四个

2220
01:12:49,000 --> 01:12:54,000
这个安装 app 的地方并不包括呃自己的

2221
01:12:54,000 --> 01:12:55,000
home

2222
01:12:55,000 --> 01:12:58,000
目录下面的 slash applications

2223
01:12:58,000 --> 01:13:00,000
就但其实你是可以这么干的

2224
01:13:00,000 --> 01:13:01,000
对你是可以这么干的

2225
01:13:01,000 --> 01:13:02,000
但是你如果你这么干的话

2226
01:13:02,000 --> 01:13:06,000
你就你这个 app 就是只有当前用户可以用

2227
01:13:06,000 --> 01:13:08,000
啊

2228
01:13:08,000 --> 01:13:12,000
不你都可以用都可以都是可都是都是 global readable 的嘛

2229
01:13:12,000 --> 01:13:14,000
只是说不可以删掉而已

2230
01:13:14,000 --> 01:13:15,000
啊 OK

2231
01:13:15,000 --> 01:13:16,000
对

2232
01:13:16,000 --> 01:13:17,000
嗯

2233
01:13:17,000 --> 01:13:23,000
不这个 sip 还有一个事就对于我们这个用这个 homebrew 的这个用户来讲

2234
01:13:23,000 --> 01:13:25,000
有超级坑爹的事情就说如果你之前用了 homebrew

2235
01:13:25,000 --> 01:13:28,000
就你升级你是升级安装的 10.11

2236
01:13:28,000 --> 01:13:29,000
而不是覆盖安装的话

2237
01:13:29,000 --> 01:13:31,000
你可能之前都有 user local 这个目录了嘛

2238
01:13:31,000 --> 01:13:33,000
然后你可以把它全线改一下

2239
01:13:33,000 --> 01:13:35,000
不太可能出现问题

2240
01:13:35,000 --> 01:13:36,000
就不用 sudo 了

2241
01:13:36,000 --> 01:13:39,000
但是如果你是有全新安装的一个 10.11

2242
01:13:39,000 --> 01:13:41,000
漫人是没有 user local 这个目录的

2243
01:13:41,000 --> 01:13:42,000
对然后如果你建了的话

2244
01:13:42,000 --> 01:13:44,000
提讯和提示你不能建

2245
01:13:44,000 --> 01:13:47,000
对然后他提讯和提讯说你不能修改这个 user

2246
01:13:47,000 --> 01:13:48,000
对

2247
01:13:48,000 --> 01:13:50,000
因为你你添加一个 user local 等于是修改 user

2248
01:13:50,000 --> 01:13:51,000
对吧

2249
01:13:51,000 --> 01:13:54,000
然后你就不得不很坑爹的说

2250
01:13:54,000 --> 01:13:56,000
手工关掉这个 sip 的特性

2251
01:13:56,000 --> 01:13:59,000
把 user local 建好之后再把 sip 打开

2252
01:13:59,000 --> 01:14:02,000
对然后这个过程牵扯到两次重启动

2253
01:14:02,000 --> 01:14:05,000
但是就还好吧

2254
01:14:05,000 --> 01:14:08,000
你为了使用这样这么一个

2255
01:14:08,000 --> 01:14:12,000
full of awesomeness 的操作系统重启动两次还是可以

2256
01:14:12,000 --> 01:14:15,000
不过他们也有说其实这个 homebrew 不用

2257
01:14:15,000 --> 01:14:18,000
不用装到 user local 里面也可以用

2258
01:14:18,000 --> 01:14:22,000
就是说里面有些可能软件包它的默奥的路径是什么设置的

2259
01:14:22,000 --> 01:14:27,000
他会假设某一些依赖的这个软件也好

2260
01:14:27,000 --> 01:14:28,000
这个 library 也好

2261
01:14:28,000 --> 01:14:30,000
它是已经在 user local 里面的了

2262
01:14:30,000 --> 01:14:32,000
那这个时候你就比较坑

2263
01:14:32,000 --> 01:14:35,000
所以可能另外一种方式就是说

2264
01:14:35,000 --> 01:14:37,000
我们去做一下这个清洁工作

2265
01:14:37,000 --> 01:14:40,000
把那个 homebrew 里面的一些软件包的

2266
01:14:40,000 --> 01:14:45,000
对这个 user local 的这个一个 hardcoded 的依赖

2267
01:14:45,000 --> 01:14:46,000
把它改成一个可配置的东西

2268
01:14:46,000 --> 01:14:47,000
可能会好一点

2269
01:14:47,000 --> 01:14:51,000
brew 是可以在编译期的时候

2270
01:14:51,000 --> 01:14:57,000
告诉这个当前的 brew 的那个路径在哪吧

2271
01:14:57,000 --> 01:15:00,000
对对但不是所有的那个 formula 都是

2272
01:15:00,000 --> 01:15:02,000
都有这个灵活性嘛

2273
01:15:02,000 --> 01:15:03,000
对对对对

2274
01:15:03,000 --> 01:15:05,000
所以才说刚才要做那个清理工作嘛

2275
01:15:05,000 --> 01:15:08,000
你一个一个去去检查那些 formula

2276
01:15:08,000 --> 01:15:11,000
有没有这个就是 hardcoded 的依赖吗

2277
01:15:11,000 --> 01:15:12,000
没错

2278
01:15:12,000 --> 01:15:16,000
我在公司的电脑上其实就是因为我没有那个 user local 的权件

2279
01:15:16,000 --> 01:15:18,000
我就把 linuxbrew

2280
01:15:18,000 --> 01:15:21,000
你知道 homebrew 有一个 linux 的 branch 吗

2281
01:15:21,000 --> 01:15:23,000
你为什么这么坑

2282
01:15:23,000 --> 01:15:25,000
因为我没有 root

2283
01:15:25,000 --> 01:15:27,000
啊

2284
01:15:27,000 --> 01:15:28,000
这么可怜

2285
01:15:28,000 --> 01:15:29,000
对

2286
01:15:29,000 --> 01:15:31,000
然后就把他们一个 rootless 的人

2287
01:15:31,000 --> 01:15:36,000
把他们全都装在$twd.user.lo

2288
01:15:36,000 --> 01:15:38,000
ok

2289
01:15:38,000 --> 01:15:39,000
能用吗

2290
01:15:39,000 --> 01:15:40,000
可以啊

2291
01:15:40,000 --> 01:15:41,000
ok

2292
01:15:41,000 --> 01:15:42,000
还 ok

2293
01:15:42,000 --> 01:15:43,000
对

2294
01:15:43,000 --> 01:15:44,000
好吧

2295
01:15:44,000 --> 01:15:49,000
那个 sip 的这个还有这个叫做 rootless 的特性说完了啊

2296
01:15:49,000 --> 01:15:51,000
下一则有点意思的事情是

2297
01:15:51,000 --> 01:15:52,000
这算是难产吧

2298
01:15:52,000 --> 01:15:54,000
千呼万唤是出来

2299
01:15:54,000 --> 01:15:55,000
parl 6 发布了

2300
01:15:55,000 --> 01:15:56,000
还没出来呢

2301
01:15:56,000 --> 01:15:57,000
其实对

2302
01:15:57,000 --> 01:15:58,000
还没吧

2303
01:15:58,000 --> 01:15:59,000
还是说已经发布了吗

2304
01:15:59,000 --> 01:16:01,000
优报批发半遮面的状况

2305
01:16:01,000 --> 01:16:05,000
说是其实是正确的新闻的说法应该是这样的

2306
01:16:05,000 --> 01:16:09,000
larry wall 在 10 月初的时候

2307
01:16:09,000 --> 01:16:10,000
所以 8 号是 9 号的时候

2308
01:16:10,000 --> 01:16:12,000
终于说了一句

2309
01:16:13,000 --> 01:16:16,000
大家圣诞节的时候就可以收到 parl 6 了

2310
01:16:17,000 --> 01:16:18,000
圣诞节是吧

2311
01:16:18,000 --> 01:16:19,000
那还快了

2312
01:16:19,000 --> 01:16:21,000
他说了一个 release date 是今年圣诞节

2313
01:16:21,000 --> 01:16:23,000
ok

2314
01:16:23,000 --> 01:16:24,000
对

2315
01:16:24,000 --> 01:16:25,000
所以 after

2316
01:16:25,000 --> 01:16:26,000
所以你期待这件事情吗

2317
01:16:26,000 --> 01:16:28,000
我也不知道

2318
01:16:28,000 --> 01:16:33,000
就这就好像是有人 15 年前给你许了一个诺言

2319
01:16:33,000 --> 01:16:36,000
然后今天中午要 10 下的感觉

2320
01:16:36,000 --> 01:16:37,000
你已经没有感觉了

2321
01:16:37,000 --> 01:16:38,000
有没有

2322
01:16:38,000 --> 01:16:40,000
已然不用了是吧

2323
01:16:40,000 --> 01:16:41,000
对啊

2324
01:16:41,000 --> 01:16:45,000
我记得那个时候还 2000 年的时候

2325
01:16:45,000 --> 01:16:46,000
还对 parl 这种

2326
01:16:46,000 --> 01:16:49,000
这种有句话怎么说来着

2327
01:16:49,000 --> 01:16:51,000
php 是一种邪恶的语言

2328
01:16:51,000 --> 01:16:54,000
但它只是一个比较小的邪恶

2329
01:16:54,000 --> 01:16:56,000
因为它是一个呃

2330
01:16:56,000 --> 01:16:59,000
诚实的业余爱好者写出来的

2331
01:16:59,000 --> 01:17:00,000
分号

2332
01:17:00,000 --> 01:17:01,000
对

2333
01:17:01,000 --> 01:17:02,000
php 是小恶

2334
01:17:02,000 --> 01:17:04,000
因为它只是一个

2335
01:17:04,000 --> 01:17:07,000
incompetent 的业余爱好者写出来的

2336
01:17:07,000 --> 01:17:08,000
分号

2337
01:17:08,000 --> 01:17:09,000
嗯

2338
01:17:09,000 --> 01:17:11,000
perl 是个大恶

2339
01:17:11,000 --> 01:17:13,000
因为它是一个技巧

2340
01:17:13,000 --> 01:17:14,000
娴熟的

2341
01:17:14,000 --> 01:17:19,000
但是非常混蛋的专业程序员写出来

2342
01:17:19,000 --> 01:17:20,000
没写出来

2343
01:17:22,000 --> 01:17:23,000
gagg

2344
01:17:23,000 --> 01:17:23,000
ok

2345
01:17:26,000 --> 01:17:27,000
对

2346
01:17:27,000 --> 01:17:27,000
就是这种感觉

2347
01:17:27,000 --> 01:17:30,000
就是那个时候 pearl 还是一种

2348
01:17:31,000 --> 01:17:34,000
因为那个时候也不是写

2349
01:17:34,000 --> 01:17:35,000
没有写过很多程序

2350
01:17:35,000 --> 01:17:39,000
也没有那么设业过很多语言

2351
01:17:39,000 --> 01:17:41,000
总觉得 pearl 这种看起来像是

2352
01:17:43,000 --> 01:17:46,000
就连滚过键盘写出来的东西

2353
01:17:46,000 --> 01:17:47,000
还挺有意思的

2354
01:17:47,000 --> 01:17:51,000
那时候觉得我靠不知道 pearl 6

2355
01:17:51,000 --> 01:17:53,000
又会有什么了不起的东西

2356
01:17:53,000 --> 01:17:54,000
对吧

2357
01:17:54,000 --> 01:17:55,000
但是 15 年之后

2358
01:17:55,000 --> 01:17:57,000
就 2000 年的时候就说

2359
01:17:57,000 --> 01:17:58,000
我们要做 pearl 6

2360
01:17:58,000 --> 01:18:00,000
就 2000 年的时候 pearl 6 的

2361
01:18:00,000 --> 01:18:02,000
specification 就出来了

2362
01:18:02,000 --> 01:18:04,000
还是已经开始 draft 了

2363
01:18:04,000 --> 01:18:06,000
然后一直 15 年之后才说

2364
01:18:06,000 --> 01:18:08,000
pearl 6 的 1.0 可能要出来

2365
01:18:08,000 --> 01:18:10,000
这是一种什么样的

2366
01:18:10,000 --> 01:18:13,000
其实 pearl 的语言怎么说

2367
01:18:13,000 --> 01:18:15,000
对它感觉还挺复杂的

2368
01:18:15,000 --> 01:18:16,000
基本上这么说吧

2369
01:18:16,000 --> 01:18:18,000
我觉得它是一种属于叫做

2370
01:18:20,000 --> 01:18:23,000
convenience over simplicity

2371
01:18:23,000 --> 01:18:23,000
对

2372
01:18:23,000 --> 01:18:24,000
就是的设计

2373
01:18:24,000 --> 01:18:26,000
pearl 是一种

2374
01:18:28,000 --> 01:18:30,000
异于写但不异于读的语言

2375
01:18:31,000 --> 01:18:35,000
就语言有些语言容易读又容易写

2376
01:18:35,000 --> 01:18:36,000
比如说 python

2377
01:18:36,000 --> 01:18:36,000
对吧

2378
01:18:36,000 --> 01:18:38,000
有些语言容易读

2379
01:18:38,000 --> 01:18:39,000
但是不容易写

2380
01:18:39,000 --> 01:18:40,000
比如说 pasco

2381
01:18:40,000 --> 01:18:43,000
或者 fortuan

2382
01:18:43,000 --> 01:18:46,000
fortuan 不算容易读

2383
01:18:46,000 --> 01:18:48,000
但是现在的观点

2384
01:18:48,000 --> 01:18:49,000
fortuan 不是非常容易读

2385
01:18:49,000 --> 01:18:52,000
然后有些语言是非常容易写

2386
01:18:52,000 --> 01:18:54,000
但是就是一周之后你在读的时候

2387
01:18:54,000 --> 01:18:56,000
如果你之前没有写文档的话

2388
01:18:56,000 --> 01:18:58,000
你就会想要回到一周之前沙瓦子

2389
01:18:58,000 --> 01:18:59,000
what the fuck

2390
01:18:59,000 --> 01:18:59,000
对

2391
01:18:59,000 --> 01:19:02,000
这个就比如说 brainfuck 和 pearl

2392
01:19:02,000 --> 01:19:04,000
就这种感觉

2393
01:19:04,000 --> 01:19:07,000
想不到影响了这么低的登记了

2394
01:19:07,000 --> 01:19:08,000
没错

2395
01:19:08,000 --> 01:19:14,000
不但是说到其实 pearl 这种语法的这种便利性还是挺激励了很多人啊

2396
01:19:14,000 --> 01:19:17,000
可能 ruby 算是极大成者吧

2397
01:19:17,000 --> 01:19:18,000
对

2398
01:19:18,000 --> 01:19:20,000
而且 pearl 其实也不是一个始作俑者

2399
01:19:20,000 --> 01:19:23,000
因为在 pearl 出现的时候什么 bash 之类的也

2400
01:19:23,000 --> 01:19:28,000
shell 已经有了很多就是非常奇怪的符号

2401
01:19:28,000 --> 01:19:30,000
非常非常非常

2402
01:19:30,000 --> 01:19:31,000
如果你不知道的话

2403
01:19:31,000 --> 01:19:32,000
你就是猜不出来的 convention

2404
01:19:32,000 --> 01:19:36,000
只过 pearl 把他们都发音光大了

2405
01:19:36,000 --> 01:19:39,000
并且让 pearl 变成了层几何时最流行的语言啊

2406
01:19:39,000 --> 01:19:42,000
就像那时候 pearl 2000 年左右的

2407
01:19:42,000 --> 01:19:45,000
甚至不用 2000 年 90 年左右的 pearl 的 hype 的程度

2408
01:19:45,000 --> 01:19:47,000
就像现在的 ruby

2409
01:19:47,000 --> 01:19:49,000
可能 ruby 还要剩一些

2410
01:19:49,000 --> 01:19:51,000
对

2411
01:19:51,000 --> 01:19:53,000
back in the heydays ofpearl

2412
01:19:53,000 --> 01:19:58,000
就是你会觉得我靠不会写两句 pearl 都不好意思跟着打招呼

2413
01:19:58,000 --> 01:20:00,000
那个时候还没有 php 呢

2414
01:20:00,000 --> 01:20:02,000
就你写网页你要不用 c

2415
01:20:02,000 --> 01:20:08,000
用 c 要么用 pearl

2416
01:20:08,000 --> 01:20:13,000
直到后来才有了什么 php 或者 asp 这种

2417
01:20:13,000 --> 01:20:16,000
让 amago 都可以去写个网页的东西出现

2418
01:20:16,000 --> 01:20:27,000
然后 pearl 在那个时候也是 cgi 和一些比较常见的 daily automation 的最得利的工具

2419
01:20:27,000 --> 01:20:29,000
当时我也是因为这个动机才去学的嘛

2420
01:20:29,000 --> 01:20:32,000
就是觉得我靠这是一个 hacker 的语言

2421
01:20:32,000 --> 01:20:34,000
which is true

2422
01:20:34,000 --> 01:20:38,000
只不过你看 15 年后当初的 pearl 的 hacker

2423
01:20:38,000 --> 01:20:42,000
比如谁唐汉宗你知道这个人吗

2424
01:20:42,000 --> 01:20:42,000
不是啊

2425
01:20:42,000 --> 01:20:44,000
唐汉宗是中文圈里面非常台湾人

2426
01:20:44,000 --> 01:20:48,000
中文圈里面的对 pearl 非常有贡献的一个人

2427
01:20:48,000 --> 01:20:50,000
但是具体贡献是什么我不记得了

2428
01:20:50,000 --> 01:20:54,000
但你看 15 年过去唐汉宗已经变性了

2429
01:20:54,000 --> 01:20:59,000
唐汉宗已经去做变性手术感觉叫唐燕了

2430
01:20:59,000 --> 01:21:02,000
然后 perl 还没有出来呢

2431
01:21:02,000 --> 01:21:03,000
就是这种感觉

2432
01:21:03,000 --> 01:21:05,000
不仅沧海桑田

2433
01:21:05,000 --> 01:21:12,000
不仅沧海桑田连连人都人都已经对不在

2434
01:21:12,000 --> 01:21:15,000
所以 perl 6 就已经不算是一个新语言了

2435
01:21:15,000 --> 01:21:17,000
perl 6 绝对不新

2436
01:21:17,000 --> 01:21:19,000
perl 是 perl 6

2437
01:21:19,000 --> 01:21:21,000
perl 6 好吧

2438
01:21:21,000 --> 01:21:24,000
从这个因为它的 spec 已经出了那么久了

2439
01:21:24,000 --> 01:21:26,000
大家都该激动过都激动过了

2440
01:21:26,000 --> 01:21:30,000
对就好像一个怀胎 10 年的孩子生下来了

2441
01:21:30,000 --> 01:21:32,000
你说他是一个婴儿呢

2442
01:21:32,000 --> 01:21:34,000
还是说他是一个怪胎

2443
01:21:34,000 --> 01:21:36,000
他是哪吒

2444
01:21:36,000 --> 01:21:40,000
第二个词

2445
01:21:40,000 --> 01:21:44,000
好吧

2446
01:21:44,000 --> 01:21:45,000
这个就过一下

2447
01:21:45,000 --> 01:21:46,000
反正我们也不怎么用呢

2448
01:21:46,000 --> 01:21:48,000
其实如果你写过 perl

2449
01:21:48,000 --> 01:21:52,000
我相信我们的听众里面可能没有什么人是不写着 perl 长大的

2450
01:21:52,000 --> 01:21:54,000
但如果假设竟然有的话

2451
01:21:54,000 --> 01:21:58,000
就是你年少时写的 perl 在 perl 6 里面

2452
01:21:58,000 --> 01:22:00,000
很多地方都不一样了

2453
01:22:00,000 --> 01:22:02,000
然后比如说一些 perl 6 里面

2454
01:22:02,000 --> 01:22:06,000
perl 之前 perl 里面一些比较奇怪的语义

2455
01:22:06,000 --> 01:22:09,000
在 perl 6 里面都被改过来了

2456
01:22:09,000 --> 01:22:11,000
比如说什么 area 的 index

2457
01:22:11,000 --> 01:22:14,000
我不记得具体是什么

2458
01:22:14,000 --> 01:22:17,000
就比如说我想想

2459
01:22:17,000 --> 01:22:19,000
perl 里面

2460
01:22:19,000 --> 01:22:21,000
area 要用 at 做前缀

2461
01:22:21,000 --> 01:22:29,000
然后如果你要去 index 里面的一个 item 的时候

2462
01:22:29,000 --> 01:22:31,000
你要把前缀变成 dollar

2463
01:22:31,000 --> 01:22:33,000
因为 larry

2464
01:22:33,000 --> 01:22:37,000
我认为在你去 index

2465
01:22:37,000 --> 01:22:42,000
are 里面的一个单一的量的时候

2466
01:22:42,000 --> 01:22:43,000
它是一个 scala

2467
01:22:43,000 --> 01:22:44,000
所以要用 dollar

2468
01:22:44,000 --> 01:22:50,000
就有很多这种 what the fuck 的地方在 perl 6 里面都被修复了

2469
01:22:50,000 --> 01:22:52,000
或者说对

2470
01:22:52,000 --> 01:22:57,000
就已经姗姗来迟了让你觉得我靠这还比较好理解了

2471
01:22:57,000 --> 01:22:59,000
但除此之外

2472
01:22:59,000 --> 01:23:02,000
这个语言会重新兴起来吗

2473
01:23:02,000 --> 01:23:03,000
我觉得不太可能

2474
01:23:03,000 --> 01:23:08,000
反正我对它们其实个人没什么好感

2475
01:23:08,000 --> 01:23:10,000
我觉得它的设计理念跟我的

2476
01:23:10,000 --> 01:23:13,000
很难接受吧

2477
01:23:13,000 --> 01:23:13,000
只能说是

2478
01:23:13,000 --> 01:23:19,000
但 perl 的好处就是有非常多的 one liner

2479
01:23:19,000 --> 01:23:24,000
就如果你去花一些时间投资在 perl 上面的话

2480
01:23:24,000 --> 01:23:26,000
还是比较值得的吧

2481
01:23:26,000 --> 01:23:26,000
就

2482
01:23:26,000 --> 01:23:30,000
第一问题就是在于你这个经常记不住到底在干嘛

2483
01:23:30,000 --> 01:23:31,000
对

2484
01:23:31,000 --> 01:23:32,000
你就得去搜

2485
01:23:32,000 --> 01:23:34,000
然后搜一个 perl 6 的 one liner

2486
01:23:34,000 --> 01:23:36,000
perl 的 one liner 就可以解决很多问题

2487
01:23:36,000 --> 01:23:38,000
而且在很多操作系统上面

2488
01:23:38,000 --> 01:23:41,000
不一定有 ruby

2489
01:23:41,000 --> 01:23:44,000
但是基本上不会没有 perl

2490
01:23:44,000 --> 01:23:45,000
这种感觉

2491
01:23:45,000 --> 01:23:46,000
嗯

2492
01:23:48,000 --> 01:23:49,000
差不多就这样吧

2493
01:23:49,000 --> 01:23:52,000
那个 perl 6 的新闻就到此为止了

2494
01:23:52,000 --> 01:23:53,000
大家有兴趣的去去

2495
01:23:53,000 --> 01:23:55,000
缅怀一下就去看一下

2496
01:23:55,000 --> 01:23:56,000
嗯

2497
01:23:56,000 --> 01:23:59,000
这个有一个下面这个新闻是个大事啊

2498
01:23:59,000 --> 01:24:01,000
这个叫做 let's encrypt

2499
01:24:01,000 --> 01:24:03,000
这个这个这个

2500
01:24:03,000 --> 01:24:04,000
就算那个 API 吗

2501
01:24:04,000 --> 01:24:05,000
还是一个服务

2502
01:24:05,000 --> 01:24:07,000
它的那个证书

2503
01:24:07,000 --> 01:24:09,000
已经被交叉了

2504
01:24:09,000 --> 01:24:11,000
呃 sign sign

2505
01:24:11,000 --> 01:24:13,000
叫做签名过了

2506
01:24:13,000 --> 01:24:15,000
这可能要解释一下什么事

2507
01:24:15,000 --> 01:24:17,000
应该说已经被 trusted

2508
01:24:17,000 --> 01:24:19,000
就是已经被信任了

2509
01:24:19,000 --> 01:24:21,000
主流的浏览器 trust

2510
01:24:21,000 --> 01:24:22,000
就是信任了

2511
01:24:22,000 --> 01:24:23,000
对

2512
01:24:23,000 --> 01:24:24,000
呃

2513
01:24:24,000 --> 01:24:26,000
这怎么说

2514
01:24:26,000 --> 01:24:28,000
先说 let's encrypt 是个啥吧

2515
01:24:28,000 --> 01:24:30,000
let's encrypt 是一个这个

2516
01:24:30,000 --> 01:24:31,000
这个

2517
01:24:31,000 --> 01:24:32,000
一套服务

2518
01:24:32,000 --> 01:24:33,000
一套

2519
01:24:33,000 --> 01:24:35,000
开源的软件和服务吧

2520
01:24:35,000 --> 01:24:36,000
嗯

2521
01:24:36,000 --> 01:24:37,000
它可以使得你

2522
01:24:37,000 --> 01:24:39,000
部署到一个客户端到你的服务器

2523
01:24:39,000 --> 01:24:40,000
之后

2524
01:24:40,000 --> 01:24:42,000
它自动帮你去配置这个服务器的这个

2525
01:24:42,000 --> 01:24:43,000
这个

2526
01:24:43,000 --> 01:24:44,000
对 SSL 证书

2527
01:24:44,000 --> 01:24:45,000
对

2528
01:24:45,000 --> 01:24:46,000
和那个

2529
01:24:46,000 --> 01:24:47,000
包括这个

2530
01:24:47,000 --> 01:24:50,000
证书的签发呀

2531
01:24:50,000 --> 01:24:52,000
这个 key 的这个生成啊

2532
01:24:52,000 --> 01:24:54,000
还有包括这个证书的过期

2533
01:24:54,000 --> 01:24:56,000
自动升级啊

2534
01:24:56,000 --> 01:24:57,000
自动这个

2535
01:24:57,000 --> 01:24:59,000
从自动重新

2536
01:24:59,000 --> 01:25:00,000
重新申请吧

2537
01:25:00,000 --> 01:25:02,000
这个整套的流程都完了

2538
01:25:02,000 --> 01:25:03,000
可能这样说起来比较奇怪

2539
01:25:03,000 --> 01:25:05,000
其实应该说

2540
01:25:05,000 --> 01:25:06,000
一开始要解释

2541
01:25:06,000 --> 01:25:08,000
存在一个什么样的问题

2542
01:25:08,000 --> 01:25:09,000
或者它的愿景是什么

2543
01:25:09,000 --> 01:25:10,000
对对对

2544
01:25:10,000 --> 01:25:12,000
就其实问题也

2545
01:25:12,000 --> 01:25:14,000
也也是一两句话就可以概括了

2546
01:25:14,000 --> 01:25:15,000
就是呃

2547
01:25:15,000 --> 01:25:18,000
现在大家上的网

2548
01:25:18,000 --> 01:25:19,000
每一个请求

2549
01:25:19,000 --> 01:25:21,000
如果你不做特殊要求的话

2550
01:25:21,000 --> 01:25:22,000
都是明信片

2551
01:25:22,000 --> 01:25:23,000
就

2552
01:25:23,000 --> 01:25:24,000
HTTP

2553
01:25:24,000 --> 01:25:25,000
明文的

2554
01:25:25,000 --> 01:25:26,000
协议是明文的

2555
01:25:26,000 --> 01:25:27,000
任何就是

2556
01:25:27,000 --> 01:25:27,000
你

2557
01:25:27,000 --> 01:25:30,000
你在和别的电脑谈话的时候

2558
01:25:30,000 --> 01:25:33,000
你和那个电脑之间的任何

2559
01:25:33,000 --> 01:25:34,000
内容

2560
01:25:34,000 --> 01:25:36,000
都可以被中间经历的所有电脑

2561
01:25:36,000 --> 01:25:38,000
看到

2562
01:25:38,000 --> 01:25:39,000
而

2563
01:25:39,000 --> 01:25:40,000
HTPS 的

2564
01:25:40,000 --> 01:25:42,000
或者 Less Encrypt 的愿景就是

2565
01:25:42,000 --> 01:25:44,000
希望把所有这些明信片

2566
01:25:44,000 --> 01:25:45,000
都变成信件

2567
01:25:45,000 --> 01:25:48,000
就是默认上面是要盖层信封的

2568
01:25:48,000 --> 01:25:48,000
如果你

2569
01:25:49,000 --> 01:25:50,000
不去拆的话

2570
01:25:50,000 --> 01:25:52,000
或者说如果你不使点进的话

2571
01:25:52,000 --> 01:25:53,000
你是看不到内容的

2572
01:25:53,000 --> 01:25:54,000
这愿景就是这个

2573
01:25:54,000 --> 01:25:56,000
但是此前存在一个什么问题呢

2574
01:25:56,000 --> 01:25:57,000
就是

2575
01:25:57,000 --> 01:25:59,000
作为一个普通的站长来说

2576
01:25:59,000 --> 01:26:00,000
你要去

2577
01:26:01,000 --> 01:26:02,000
首先得花钱

2578
01:26:02,000 --> 01:26:04,000
这是最大的一个门口

2579
01:26:04,000 --> 01:26:05,000
倒也不一定

2580
01:26:05,000 --> 01:26:06,000
你有免费的

2581
01:26:06,000 --> 01:26:07,000
对

2582
01:26:07,000 --> 01:26:10,000
但是你在买服务的时候是花了钱的

2583
01:26:10,000 --> 01:26:10,000
对吧

2584
01:26:10,000 --> 01:26:12,000
如果你用一个免费空间的话

2585
01:26:12,000 --> 01:26:13,000
它是

2586
01:26:13,000 --> 01:26:14,000
不是

2587
01:26:14,000 --> 01:26:15,000
证书也有免费的

2588
01:26:15,000 --> 01:26:16,000
但是限制

2589
01:26:16,000 --> 01:26:19,000
但是前提是你得去买一个什么

2590
01:26:19,000 --> 01:26:20,000
Domain 之类的东西

2591
01:26:20,000 --> 01:26:20,000
对吧

2592
01:26:22,000 --> 01:26:23,000
签发证书

2593
01:26:23,000 --> 01:26:26,000
如果你没有独立 Domain 的话

2594
01:26:26,000 --> 01:26:27,000
你怎么对

2595
01:26:27,000 --> 01:26:29,000
这个没有区别

2596
01:26:29,000 --> 01:26:33,000
你用 HTTP 也要买 Domain 的

2597
01:26:33,000 --> 01:26:34,000
要买域名的

2598
01:26:35,000 --> 01:26:36,000
这最大问题就是说

2599
01:26:36,000 --> 01:26:36,000
好吧

2600
01:26:36,000 --> 01:26:39,000
大部分的 SSL 证书就是好用的

2601
01:26:39,000 --> 01:26:41,000
或者说兼容性比较好的

2602
01:26:42,000 --> 01:26:43,000
会比较贵

2603
01:26:43,000 --> 01:26:44,000
对

2604
01:26:44,000 --> 01:26:46,000
而且可能跟域名还有点关系

2605
01:26:46,000 --> 01:26:47,000
比如说

2606
01:26:47,000 --> 01:26:50,000
现在免费中一般就是单一域名的证书

2607
01:26:50,000 --> 01:26:52,000
比如说 IPN 的话

2608
01:26:52,000 --> 01:26:55,000
就只能买比如 3 W.IPN.LI

2609
01:26:55,000 --> 01:26:56,000
这个域名的证书

2610
01:26:56,000 --> 01:26:57,000
它可能会免费

2611
01:26:57,000 --> 01:26:58,000
但我想说比如说

2612
01:26:58,000 --> 01:26:59,000
XXX

2613
01:26:59,000 --> 01:27:01,000
就是前面 X 可以提款是任意的

2614
01:27:01,000 --> 01:27:02,000
.IPN.LI

2615
01:27:02,000 --> 01:27:04,000
这个域名都可以用的话

2616
01:27:04,000 --> 01:27:05,000
就能叫做 Wildcard 证书的话

2617
01:27:05,000 --> 01:27:08,000
一年就得好几十刀到几百刀

2618
01:27:08,000 --> 01:27:10,000
根据你这个这个验证的程度不一样

2619
01:27:10,000 --> 01:27:11,000
所以还是有经济

2620
01:27:11,000 --> 01:27:12,000
对

2621
01:27:12,000 --> 01:27:14,000
对价钱倒好说了

2622
01:27:14,000 --> 01:27:16,000
最主要的是这个

2623
01:27:17,000 --> 01:27:18,000
配置钱非常麻烦

2624
01:27:18,000 --> 01:27:19,000
非常非常复杂

2625
01:27:19,000 --> 01:27:22,000
因为首先申请这个数字证书

2626
01:27:22,000 --> 01:27:23,000
你要做几件事

2627
01:27:23,000 --> 01:27:26,000
首先你得验证你是这个域名的实际控制人

2628
01:27:27,000 --> 01:27:28,000
这事情他要做几件事了

2629
01:27:28,000 --> 01:27:30,000
比如有一些比较简单的

2630
01:27:30,000 --> 01:27:33,000
他可以说你在域名上放一个什么特殊的指定文件

2631
01:27:33,000 --> 01:27:35,000
他可以验证你的也可以

2632
01:27:35,000 --> 01:27:37,000
但一般来说就是给你的这个

2633
01:27:37,000 --> 01:27:38,000
比如说

2634
01:27:38,000 --> 01:27:42,000
可能是给这个 webmaster at 这个域名的一个邮箱

2635
01:27:42,000 --> 01:27:43,000
他发一封这个信

2636
01:27:43,000 --> 01:27:45,000
然后信里面有一个 code

2637
01:27:45,000 --> 01:27:46,000
你那个 code

2638
01:27:46,000 --> 01:27:47,000
你收到一个 code 证明说

2639
01:27:47,000 --> 01:27:50,000
你确实是这个域名的实际控制人

2640
01:27:50,000 --> 01:27:51,000
因为你是 webmaster 这个账号

2641
01:27:52,000 --> 01:27:54,000
但这整个就是挺坑爹的

2642
01:27:55,000 --> 01:27:56,000
完了之后你还得生成这个

2643
01:27:56,000 --> 01:27:58,000
这个相应的公钥和私钥

2644
01:27:58,000 --> 01:27:58,000
对

2645
01:27:58,000 --> 01:28:00,000
然后把这个要敲一大堆命令

2646
01:28:00,000 --> 01:28:05,000
然后用那个用那个用你的这个私钥去生成一个

2647
01:28:05,000 --> 01:28:06,000
公钥还是

2648
01:28:06,000 --> 01:28:07,000
request

2649
01:28:07,000 --> 01:28:10,000
用你的公钥去生成一个

2650
01:28:10,000 --> 01:28:11,000
assistification request

2651
01:28:11,000 --> 01:28:13,000
对对

2652
01:28:13,000 --> 01:28:13,000
然后证明

2653
01:28:13,000 --> 01:28:15,000
然后你再把这个 sign request

2654
01:28:15,000 --> 01:28:19,000
发给你的这个叫做这个签发你的这个 sign 证书的这个机构

2655
01:28:19,000 --> 01:28:20,000
对

2656
01:28:20,000 --> 01:28:21,000
叫做一般叫做 CA 嘛

2657
01:28:21,000 --> 01:28:21,000
嗯

2658
01:28:21,000 --> 01:28:27,000
然后他会根据你的情况再给你签一份证书回来

2659
01:28:27,000 --> 01:28:32,000
然后你再把证书打包到一个正确的格式

2660
01:28:32,000 --> 01:28:37,000
然后让配置你的这个 web 浏览 web 这个服务器 web server

2661
01:28:37,000 --> 01:28:39,000
去 load 这个证书

2662
01:28:39,000 --> 01:28:42,000
然后使得让人家访问 443 端口的时候

2663
01:28:42,000 --> 01:28:44,000
能够正确的读取到这个证书

2664
01:28:44,000 --> 01:28:46,000
这过程相当繁琐和麻烦

2665
01:28:46,000 --> 01:28:48,000
因为我维护那个 IPN 之下的

2666
01:28:48,000 --> 01:28:49,000
现在比如说我们的 10 档节目

2667
01:28:49,000 --> 01:28:52,000
每档节目都有自己的网这个独立的域名

2668
01:28:52,000 --> 01:28:55,000
然后 IPN 自己还有一个域名

2669
01:28:55,000 --> 01:28:56,000
那就是 11 个域名了对吧

2670
01:28:56,000 --> 01:28:58,000
然后 10 个域名我得给你考虑

2671
01:28:58,000 --> 01:29:00,000
对对对

2672
01:29:00,000 --> 01:29:00,000
那个也是

2673
01:29:00,000 --> 01:29:02,000
还有我个人自己的对吧

2674
01:29:02,000 --> 01:29:04,000
就 10 一大堆的域名

2675
01:29:04,000 --> 01:29:07,000
我得要去每一个都得走这么一个流程

2676
01:29:07,000 --> 01:29:08,000
这过程是很坑爹的

2677
01:29:08,000 --> 01:29:14,000
所以其实如果能一套自动化的工具

2678
01:29:14,000 --> 01:29:15,000
或者这个工具量也好

2679
01:29:15,000 --> 01:29:16,000
还是一个服务也好

2680
01:29:16,000 --> 01:29:17,000
能够把这个过程减

2681
01:29:17,000 --> 01:29:20,000
减轻一下负担其实蛮好

2682
01:29:20,000 --> 01:29:20,000
并且免费

2683
01:29:20,000 --> 01:29:22,000
对

2684
01:29:22,000 --> 01:29:23,000
如果能免费就更好了

2685
01:29:23,000 --> 01:29:24,000
Let's Encrypt

2686
01:29:24,000 --> 01:29:26,000
就是干这么一件事

2687
01:29:26,000 --> 01:29:27,000
所以简而言之

2688
01:29:27,000 --> 01:29:28,000
Let's Encrypt 就相当于

2689
01:29:28,000 --> 01:29:30,000
Homebrew 之余

2690
01:29:30,000 --> 01:29:32,000
Let's Encrypt 之余

2691
01:29:32,000 --> 01:29:33,000
SSL 就相当于

2692
01:29:33,000 --> 01:29:35,000
Homebrew 之余下载

2693
01:29:35,000 --> 01:29:35,000
Config

2694
01:29:35,000 --> 01:29:36,000
Make

2695
01:29:36,000 --> 01:29:37,000
Make install

2696
01:29:37,000 --> 01:29:37,000
这一段

2697
01:29:38,000 --> 01:29:40,000
这个比喻还挺好

2698
01:29:40,000 --> 01:29:42,000
是一件非常好的事情

2699
01:29:42,000 --> 01:29:45,000
然后 10 月 19 号的时候

2700
01:29:45,000 --> 01:29:46,000
Let's Encrypt 的更正书

2701
01:29:46,000 --> 01:29:50,000
终于被所有浏览器所信了

2702
01:29:50,000 --> 01:29:54,000
这个过程讲起来比较复杂

2703
01:29:54,000 --> 01:29:54,000
对

2704
01:29:54,000 --> 01:29:56,000
LessenceCraft 已经有几年

2705
01:29:56,000 --> 01:29:58,000
4-5 年了至少

2706
01:29:58,000 --> 01:29:59,000
没有吧

2707
01:29:59,000 --> 01:30:01,000
它是去年才开始做的

2708
01:30:01,000 --> 01:30:02,000
What?

2709
01:30:02,000 --> 01:30:02,000
OK

2710
01:30:02,000 --> 01:30:03,000
对

2711
01:30:03,000 --> 01:30:07,000
这个东西的主要的幕后推手是 Mozilla

2712
01:30:07,000 --> 01:30:18,000
然后全球最大的 CDN Akamai

2713
01:30:18,000 --> 01:30:20,000
然后还有 EFF

2714
01:30:20,000 --> 01:30:21,000
司科还有 EFF

2715
01:30:21,000 --> 01:30:22,000
对

2716
01:30:22,000 --> 01:30:24,000
还有 University of Michigan

2717
01:30:24,000 --> 01:30:25,000
What?

2718
01:30:25,000 --> 01:30:26,000
我怎么没看到

2719
01:30:26,000 --> 01:30:28,000
这是 Founder

2720
01:30:28,000 --> 01:30:29,000
密歇跟州立大学

2721
01:30:29,000 --> 01:30:30,000
密歇跟州立大学

2722
01:30:30,000 --> 01:30:32,000
嗯

2723
01:30:32,000 --> 01:30:33,000
有点意思

2724
01:30:33,000 --> 01:30:36,000
就有了这套系统之后

2725
01:30:36,000 --> 01:30:38,000
刚才我说的那些繁琐的事情

2726
01:30:38,000 --> 01:30:39,000
就可以解决了

2727
01:30:39,000 --> 01:30:41,000
但是有一个问题就回到刚才我们讲的

2728
01:30:41,000 --> 01:30:42,000
SPOF

2729
01:30:42,000 --> 01:30:44,000
Single Point Filler

2730
01:30:44,000 --> 01:30:46,000
如果谁把 Let's Encrypt 的黑了

2731
01:30:46,000 --> 01:30:49,000
所有用的 Let's Encrypt

2732
01:30:49,000 --> 01:30:51,000
都傻逼了

2733
01:30:51,000 --> 01:30:52,000
对

2734
01:30:53,000 --> 01:30:54,000
其实还有一点就是说

2735
01:30:54,000 --> 01:30:57,000
我们 SSL 用的 CAT

2736
01:30:57,000 --> 01:31:01,000
就是 Certific Authority 的体系是相当脆弱的

2737
01:31:02,000 --> 01:31:03,000
因为现在也就是说

2738
01:31:03,000 --> 01:31:06,000
这可能要先扯一下毒子

2739
01:31:06,000 --> 01:31:08,000
就是这个 CA 体系到底是什么一回事

2740
01:31:08,000 --> 01:31:08,000
简单来说

2741
01:31:08,000 --> 01:31:10,000
就是说你在你的电脑里面

2742
01:31:10,000 --> 01:31:11,000
操作系统也好

2743
01:31:11,000 --> 01:31:12,000
浏览器也好

2744
01:31:12,000 --> 01:31:15,000
它有一堆默认的所谓的 CA 证书

2745
01:31:15,000 --> 01:31:15,000
对

2746
01:31:15,000 --> 01:31:17,000
所以 CA 证书本身是

2747
01:31:18,000 --> 01:31:20,000
就是一个怎么说来的

2748
01:31:22,000 --> 01:31:23,000
它本身是受信任的

2749
01:31:23,000 --> 01:31:25,000
但是它的信任是跟

2750
01:31:25,000 --> 01:31:27,000
是因为你操作系统的发行商

2751
01:31:27,000 --> 01:31:29,000
觉得认为这些系统

2752
01:31:29,000 --> 01:31:32,000
这些 CA 机构是可以信赖的

2753
01:31:32,000 --> 01:31:36,000
然后这些 CA 机构再签发二级证书

2754
01:31:36,000 --> 01:31:40,000
然后这些证书再去签发三级证书

2755
01:31:40,000 --> 01:31:43,000
给我们这些实际的域名的所有人

2756
01:31:43,000 --> 01:31:47,000
然后就等于是他们这些 CA 证书证明

2757
01:31:47,000 --> 01:31:52,000
我们是假设是 IPN.LI 这个域名的实际所有者

2758
01:31:52,000 --> 01:31:54,000
然后这个证书是合合法的

2759
01:31:55,000 --> 01:31:56,000
但是问题在于哪里呢

2760
01:31:57,000 --> 01:32:01,000
CA 证书和 CA 证书之间是没有功能区隔的

2761
01:32:01,000 --> 01:32:06,000
就是说 CA 就是 Certificate Authority 机构 A

2762
01:32:06,000 --> 01:32:11,000
就是 A 签发者是可以签发 IPN.LI 这个证书的

2763
01:32:11,000 --> 01:32:14,000
B 签发者也可以签发 IPN.LI 的证书

2764
01:32:14,000 --> 01:32:18,000
那么你会发现就是说在浏览器或

2765
01:32:18,000 --> 01:32:20,000
超小型中内置的大概二三十个

2766
01:32:20,000 --> 01:32:22,000
还是三四十个这种 CA 证书里面

2767
01:32:23,000 --> 01:32:25,000
有任何一家 CA 证书的

2768
01:32:25,000 --> 01:32:29,000
这个跟证书的持有的机构出了问题

2769
01:32:29,000 --> 01:32:35,000
那么全世界的这个 SSL 证书都不会不靠谷

2770
01:32:35,000 --> 01:32:42,000
对 比如说各位非常喜欢删除的 CNIC 的证书

2771
01:32:42,000 --> 01:32:46,000
是一个臭名昭重的流氓证书

2772
01:32:46,000 --> 01:32:49,000
或者说流氓的国度嘛

2773
01:32:49,000 --> 01:32:50,000
当然是流氓的证书

2774
01:32:50,000 --> 01:32:53,000
就变成了一个木桶原理了

2775
01:32:53,000 --> 01:32:57,000
比如说你所有的 CA 证书组成一块一个源头

2776
01:32:57,000 --> 01:32:59,000
你的安全就是里面的水

2777
01:32:59,000 --> 01:33:03,000
你的安全性完全取决于里面最差的那块

2778
01:33:03,000 --> 01:33:05,000
那个安全性怎么样

2779
01:33:05,000 --> 01:33:07,000
其实整个体系是非常脆弱的

2780
01:33:07,000 --> 01:33:11,000
对 就是它本质上还是一个信任链的问题

2781
01:33:11,000 --> 01:33:13,000
就是好吧

2782
01:33:13,000 --> 01:33:16,000
你弄了一台电脑在上面做一些计算

2783
01:33:16,000 --> 01:33:19,000
然后计算结果我要去信任你的话

2784
01:33:19,000 --> 01:33:21,000
我要依赖谁呢

2785
01:33:21,000 --> 01:33:23,000
只能依赖你的机构

2786
01:33:23,000 --> 01:33:25,000
你的机构要去找谁来为你背书呢

2787
01:33:25,000 --> 01:33:27,000
可能要去找一个主管部门

2788
01:33:27,000 --> 01:33:29,000
然后主管部门又要去找谁背书呢

2789
01:33:29,000 --> 01:33:31,000
然后这样一层一层追就

2790
01:33:31,000 --> 01:33:34,000
追根结底还是要回到国家机器上面

2791
01:33:34,000 --> 01:33:34,000
对吧

2792
01:33:34,000 --> 01:33:38,000
但是如果国家机器本身就是不可信任的

2793
01:33:38,000 --> 01:33:40,000
那你这个系统不就是完蛋了吗

2794
01:33:40,000 --> 01:33:43,000
对 而且它这个完蛋还不在于

2795
01:33:43,000 --> 01:33:45,000
危害还不仅仅在于这点

2796
01:33:45,000 --> 01:33:46,000
就算如果假设

2797
01:33:46,000 --> 01:33:48,000
如果你说中国的国家机构不可信

2798
01:33:48,000 --> 01:33:50,000
那你只影响中国证书都还好

2799
01:33:50,000 --> 01:33:51,000
对

2800
01:33:51,000 --> 01:33:53,000
或者说中国的证书不可信

2801
01:33:53,000 --> 01:33:55,000
会影响到所有其他国家的所有网站

2802
01:33:55,000 --> 01:33:56,000
这是 cross domain 的问题

2803
01:33:56,000 --> 01:33:57,000
这是非常非常

2804
01:33:57,000 --> 01:33:58,000
对对对

2805
01:33:58,000 --> 01:34:02,000
然后最近这个赛门铁克就出了这么一个

2806
01:34:02,000 --> 01:34:09,000
一样儿子就是那个 google 发现赛门铁克签发了一堆

2807
01:34:09,000 --> 01:34:13,000
根本不存在的域名的这个证书

2808
01:34:13,000 --> 01:34:19,000
或者是就是就不该他签发的那些时候他也在签发了

2809
01:34:19,000 --> 01:34:21,000
这就会有问题了

2810
01:34:21,000 --> 01:34:24,000
对 然后就是好像一个一个一个外交官的卖护照一样

2811
01:34:24,000 --> 01:34:26,000
是一个非常恐怖的事情

2812
01:34:26,000 --> 01:34:31,000
对 然后在 google 跟那个赛门铁克提出这个问题之后

2813
01:34:31,000 --> 01:34:34,000
三本铁克做了一次这个审计就是 security audit

2814
01:34:34,000 --> 01:34:38,000
然后说解决了这个大概几五好像是五个吧

2815
01:34:38,000 --> 01:34:40,000
这个错误签发的证书之后

2816
01:34:40,000 --> 01:34:42,000
google 说没有

2817
01:34:42,000 --> 01:34:44,000
google 又 google 说又发现

2818
01:34:44,000 --> 01:34:45,000
我说不止五个

2819
01:34:45,000 --> 01:34:48,000
对 差不多有一百多个这个证书是你错误

2820
01:34:48,000 --> 01:34:51,000
那个三本铁克这个这个签发有问题的

2821
01:34:51,000 --> 01:34:53,000
这就这个就把 google 惹毛了

2822
01:34:53,000 --> 01:34:58,000
因为 google 这个这么这个这种级别的服务很容易被人们来搞

2823
01:34:58,000 --> 01:35:00,000
对吧 所以他对这件事情是很介意很介意的

2824
01:35:00,000 --> 01:35:03,000
所以后来他们做了一个完全的审计

2825
01:35:03,000 --> 01:35:08,000
发现一共有一百六十几个证书被错误的签发了

2826
01:35:08,000 --> 01:35:13,000
还有 2500 像将近 2500 个证书给签发给人

2827
01:35:13,000 --> 01:35:15,000
那些根本就没有被注册过的域名

2828
01:35:15,000 --> 01:35:16,000
就完全是有问题的嘛

2829
01:35:16,000 --> 01:35:19,000
就说明这个三本铁克内部的这个安全管理

2830
01:35:19,000 --> 01:35:21,000
那个流程是一塌糊涂的

2831
01:35:21,000 --> 01:35:25,000
对 然后这个直就那个女士 google 就毫不由切的直接打脸了

2832
01:35:25,000 --> 01:35:27,000
就这个警告这个三本铁克

2833
01:35:27,000 --> 01:35:29,000
然后要求三本铁克今后

2834
01:35:29,000 --> 01:35:35,000
就从明年 2016 年 6 月 1 号开始的所有的签发过程都必须公开

2835
01:35:35,000 --> 01:35:41,000
就这个是一个非常严格的非常严厉的一个要求

2836
01:35:41,000 --> 01:35:44,000
对 一个惩罚就是说你这个三本铁更不高谱

2837
01:35:44,000 --> 01:35:49,000
就还有更有可能就是说如果你这种事情再犯就直接吊销你的这个 CA 的权限了

2838
01:35:49,000 --> 01:35:56,000
对吧 就是好像我们在这个我们的系统里面默默地关掉了 CNIC 的这个 CA 证书一样

2839
01:35:56,000 --> 01:35:59,000
是基于一些这个基础的信任的问题

2840
01:35:59,000 --> 01:36:00,000
对

2841
01:36:00,000 --> 01:36:05,000
所以其实就很多人在思考怎么去能够干掉这个 CA

2842
01:36:05,000 --> 01:36:07,000
就是 CNIC 的这个 CA 这套系统呢

2843
01:36:07,000 --> 01:36:08,000
因为确实太脆弱了

2844
01:36:08,000 --> 01:36:12,000
而且在现在这种就是政治环境又不太稳定的情况下

2845
01:36:12,000 --> 01:36:15,000
是很容易被拿来搞别的事情的

2846
01:36:15,000 --> 01:36:17,000
可能环境是越来越恶励的

2847
01:36:17,000 --> 01:36:19,000
是因为政治环境又不太稳定的情况下

2848
01:36:19,000 --> 01:36:21,000
是很容易被拿来搞别的事情的

2849
01:36:21,000 --> 01:36:22,000
可能环境是越来越恶励的

2850
01:36:22,000 --> 01:36:28,000
是因为暂时还没有什么更好的替代的

2851
01:36:28,000 --> 01:36:31,000
就简单好用的替代的方法吧

2852
01:36:31,000 --> 01:36:34,000
所以目前关注也就只能说

2853
01:36:34,000 --> 01:36:36,000
首先说加快着 HTPS 的普及

2854
01:36:36,000 --> 01:36:40,000
然后就说想一些替代的方法

2855
01:36:40,000 --> 01:36:42,000
比如说这个叫 certificate pinning

2856
01:36:42,000 --> 01:36:46,000
就是证书固定证书吧

2857
01:36:46,000 --> 01:36:48,000
就是说我之前访问过一次之后

2858
01:36:48,000 --> 01:36:50,000
就在楼上这边记住这个网站的证书

2859
01:36:50,000 --> 01:36:52,000
下次反问这个网站的时候

2860
01:36:52,000 --> 01:36:53,000
如果发现证书改变了

2861
01:36:53,000 --> 01:36:56,000
就会提醒用户说这个网站的证书突然改了

2862
01:36:56,000 --> 01:36:58,000
因为一般情况下这个是

2863
01:36:58,000 --> 01:37:00,000
就不应该这样

2864
01:37:00,000 --> 01:37:01,000
对吧

2865
01:37:01,000 --> 01:37:02,000
不会出现证书突然改变的那种情况

2866
01:37:02,000 --> 01:37:04,000
如果说你要小心是什么问题

2867
01:37:04,000 --> 01:37:06,000
有点 SSH 的 fingerprint

2868
01:37:06,000 --> 01:37:08,000
对有点那个意思

2869
01:37:08,000 --> 01:37:11,000
然后还要加强审计了

2870
01:37:11,000 --> 01:37:13,000
比如说 Google 的 Cropsy 里面

2871
01:37:13,000 --> 01:37:18,000
它会向 Google 发送这些证书的一些记录

2872
01:37:18,000 --> 01:37:21,000
然后 Google 可以通过一些技术方法去分析

2873
01:37:21,000 --> 01:37:24,000
是不是某一个网站的证书被恶意替换了

2874
01:37:24,000 --> 01:37:25,000
对吧

2875
01:37:25,000 --> 01:37:26,000
对

2876
01:37:26,000 --> 01:37:27,000
但是总的来说

2877
01:37:27,000 --> 01:37:29,000
我觉得这套体系还是不靠谱的

2878
01:37:29,000 --> 01:37:32,000
那么替代的方案

2879
01:37:32,000 --> 01:37:34,000
比如说像我们叫 web of trust

2880
01:37:34,000 --> 01:37:36,000
就是说如果我们不信任任何这个

2881
01:37:36,000 --> 01:37:39,000
不信任单一这个跟正书的情况下

2882
01:37:39,000 --> 01:37:43,000
我们怎么去构建一个更加可靠的系统

2883
01:37:43,000 --> 01:37:44,000
去解决这个问题

2884
01:37:44,000 --> 01:37:45,000
但这个

2885
01:37:45,000 --> 01:37:47,000
这工程还是蛮复杂的

2886
01:37:47,000 --> 01:37:48,000
我也不是这个专业人士

2887
01:37:48,000 --> 01:37:50,000
那你就不吓嗶嗶了

2888
01:37:50,000 --> 01:37:53,000
就留给各位听众作为今天的作业题吧

2889
01:37:53,000 --> 01:37:55,000
脑力练习对吧

2890
01:37:55,000 --> 01:37:58,000
如何在不信任任何人的情况下

2891
01:37:58,000 --> 01:37:59,000
开始信任所有人

2892
01:37:59,000 --> 01:38:01,000
内核恐慌知脑洞大开环节

2893
01:38:01,000 --> 01:38:05,000
我感觉我们的那个邮箱要被要爆了

2894
01:38:05,000 --> 01:38:08,000
其实可以做一个 IMDB 或者这个

2895
01:38:08,000 --> 01:38:12,000
roten tomato for websites

2896
01:38:12,000 --> 01:38:15,000
那你怎么保证这个 website 的本身的可信

2897
01:38:15,000 --> 01:38:16,000
就由他

2898
01:38:16,000 --> 01:38:21,000
由这个 roten tomato for websites 来办法证书

2899
01:38:21,000 --> 01:38:25,000
那我就说你那你怎么保证这个

2900
01:38:25,000 --> 01:38:27,000
这个占点本身的这个安全性

2901
01:38:27,000 --> 01:38:29,000
就是来办法他自己的证书

2902
01:38:29,000 --> 01:38:30,000
去中心玩

2903
01:38:30,000 --> 01:38:32,000
我也不知道怎么办

2904
01:38:32,000 --> 01:38:33,000
你还是要有一个

2905
01:38:33,000 --> 01:38:36,000
你知道我们讲 web of trust

2906
01:38:36,000 --> 01:38:38,000
你始终是要有一个起点的对吧

2907
01:38:38,000 --> 01:38:40,000
可以利用比特币类似的原理

2908
01:38:40,000 --> 01:38:42,000
就是每一台计算机要生成一个

2909
01:38:42,000 --> 01:38:44,000
现任 token 的时候

2910
01:38:44,000 --> 01:38:47,000
都必须依赖所有其他的计算机

2911
01:38:47,000 --> 01:38:49,000
然后你在

2912
01:38:49,000 --> 01:38:50,000
对

2913
01:38:50,000 --> 01:38:51,000
这是一个突破的点

2914
01:38:51,000 --> 01:38:53,000
但是现在大家就觉得

2915
01:38:53,000 --> 01:38:54,000
首先一个问题就是说

2916
01:38:54,000 --> 01:38:55,000
延迟太高了

2917
01:38:55,000 --> 01:38:56,000
因为比特币的传播

2918
01:38:56,000 --> 01:38:57,000
对它不是实时的吗

2919
01:38:57,000 --> 01:38:58,000
对

2920
01:38:58,000 --> 01:39:03,000
怎么能怎么去协调这件事情还是挺头痛的

2921
01:39:05,000 --> 01:39:07,000
因为这个就算是家庭作业吧

2922
01:39:07,000 --> 01:39:10,000
对我们今天扯独自然就扯到这里差不多了

2923
01:39:10,000 --> 01:39:12,000
节目时间好像比往前短了一些

2924
01:39:12,000 --> 01:39:16,000
但是我们也没有什么主题可以再讲了

2925
01:39:17,000 --> 01:39:21,000
对所以刚才的 moral of the story 就是神迹是重要的

2926
01:39:21,000 --> 01:39:22,000
这个

2927
01:39:22,000 --> 01:39:23,000
嗯

2928
01:39:23,000 --> 01:39:24,000
信任是重要的

2929
01:39:24,000 --> 01:39:26,000
安全问题是重要的

2930
01:39:26,000 --> 01:39:27,000
对

2931
01:39:27,000 --> 01:39:29,000
其实审计的重要性我还是

2932
01:39:29,000 --> 01:39:31,000
如果女朋友是个审计吧

2933
01:39:31,000 --> 01:39:32,000
所以

2934
01:39:32,000 --> 01:39:34,000
还是在最近两年才意识到

2935
01:39:34,000 --> 01:39:36,000
此前我总觉得这个

2936
01:39:36,000 --> 01:39:38,000
企业的自律或者是

2937
01:39:38,000 --> 01:39:44,000
这个有外部审计事务所的他律是一个可有可不是的东西

2938
01:39:44,000 --> 01:39:45,000
但

2939
01:39:45,000 --> 01:39:47,000
我和女朋友在一起之后才发现

2940
01:39:47,000 --> 01:39:49,000
我靠原来这个玩意真的是

2941
01:39:49,000 --> 01:39:51,000
然而并非如此是吧

2942
01:39:51,000 --> 01:39:53,000
对非常非常重要的一个东西

2943
01:39:54,000 --> 01:39:55,000
不错

2944
01:39:55,000 --> 01:39:57,000
我们所有人的身家性命

2945
01:39:57,000 --> 01:40:03,000
其实都压在比如说 Google 或者是微软的内部实际上

2946
01:40:04,000 --> 01:40:06,000
所以想内部神迹致敬也

2947
01:40:06,000 --> 01:40:07,000
还有外部神迹

2948
01:40:08,000 --> 01:40:09,000
好吧

2949
01:40:09,000 --> 01:40:11,000
感谢收听 IPM Podcast

2950
01:40:11,000 --> 01:40:14,000
网络旗下的 IT 技术主题娱乐节目

2951
01:40:14,000 --> 01:40:15,000
内核恐慌

2952
01:40:15,000 --> 01:40:16,000
我们号称 Hardcore

2953
01:40:16,000 --> 01:40:18,000
但是也没有什么干货

2954
01:40:18,000 --> 01:40:20,000
想听的人听不想听的人就别听

2955
01:40:20,000 --> 01:40:22,000
您可以为本节目捐款

2956
01:40:22,000 --> 01:40:25,000
捐款地址是 Colonelpanic.fm

2957
01:40:25,000 --> 01:40:27,000
slash donate

2958
01:40:27,000 --> 01:40:28,000
捐款金额随意

2959
01:40:28,000 --> 01:40:31,000
只要是 8 的正整数就可以

2960
01:40:32,000 --> 01:40:33,000
更数倍

2961
01:40:34,000 --> 01:40:36,000
对只要是 8 的正整数倍就可以

2962
01:40:36,000 --> 01:40:38,000
捐款不会给你带来什么

2963
01:40:38,000 --> 01:40:40,000
不绝也不会让你失去什么

2964
01:40:40,000 --> 01:40:42,000
我们的口号是 No Heart Feelings

2965
01:40:42,000 --> 01:40:49,000
如果你有任何反馈可以发电子邮件到 Colonelpanic at IPN.li

2966
01:40:49,000 --> 01:40:53,000
同时也欢迎您收听 IPM 旗下其他的一档节目

2967
01:40:53,000 --> 01:40:54,000
IT 公论

2968
01:40:54,000 --> 01:40:55,000
我也知道

2969
01:40:55,000 --> 01:40:56,000
太一来了

2970
01:40:56,000 --> 01:40:57,000
流行通信

2971
01:40:57,000 --> 01:40:58,000
high story

2972
01:40:58,000 --> 01:40:59,000
印象

2973
01:40:59,000 --> 01:41:00,000
无次元

2974
01:41:01,000 --> 01:41:02,000
印象

2975
01:41:02,000 --> 01:41:03,000
印象

2976
01:41:03,000 --> 01:41:04,000
印象

2977
01:41:04,000 --> 01:41:05,000
无次元

2978
01:41:05,000 --> 01:41:07,000
上次我们在跟 Levid 做节目的时候

2979
01:41:07,000 --> 01:41:08,000
最后我说

2980
01:41:08,000 --> 01:41:09,000
我只念了 7 个

2981
01:41:09,000 --> 01:41:10,000
然后问

2982
01:41:10,000 --> 01:41:11,000
说

2983
01:41:11,000 --> 01:41:12,000
我念完了吗

2984
01:41:12,000 --> 01:41:14,000
然后我说

2985
01:41:14,000 --> 01:41:15,000
念完了

2986
01:41:15,000 --> 01:41:16,000
然后露了

2987
01:41:16,000 --> 01:41:17,000
太多了

2988
01:41:17,000 --> 01:41:20,000
海蓝老师新开的博物纸和选美

2989
01:41:21,000 --> 01:41:23,000
我们下期节目再会

2990
01:41:23,000 --> 01:41:24,000
我们下期节目再会

2991
01:41:24,000 --> 01:41:25,000
拜拜

