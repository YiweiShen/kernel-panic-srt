1
00:00:00,000 --> 00:00:02,000
三二一开始

2
00:00:02,000 --> 00:00:04,000
我们其实也要做一下开场

3
00:00:04,000 --> 00:00:05,000
还是要怎么先介绍一下

4
00:00:05,000 --> 00:00:07,000
我有一个梗

5
00:00:07,000 --> 00:00:10,000
我想想

6
00:00:10,000 --> 00:00:13,000
北京时间百分号 H 点百分号 M 分

7
00:00:13,000 --> 00:00:16,000
您现在收听到的是内核恐慌

8
00:00:16,000 --> 00:00:18,000
这梗是什么

9
00:00:18,000 --> 00:00:21,000
就因为你看

10
00:00:21,000 --> 00:00:23,000
一般人一般做广播的时候

11
00:00:23,000 --> 00:00:27,000
人们会说北京时间 15 点 46 分

12
00:00:27,000 --> 00:00:29,000
然后我说

13
00:00:29,000 --> 00:00:30,000
北京时间

14
00:00:30,000 --> 00:00:32,000
但是你会意识到这是一款 podcast

15
00:00:32,000 --> 00:00:34,000
你根本不知道听众是在什么时候

16
00:00:34,000 --> 00:00:36,000
听这个 podcast 的

17
00:00:36,000 --> 00:00:37,000
所以我说北京时间

18
00:00:37,000 --> 00:00:38,000
然后愣一下

19
00:00:38,000 --> 00:00:41,000
说百分号 H 点百分号 M 分

20
00:00:41,000 --> 00:00:43,000
所以这是一个 placeholder 对吧

21
00:00:43,000 --> 00:00:43,000
对啊

22
00:00:43,000 --> 00:00:46,000
就是那个 dateformat

23
00:00:46,000 --> 00:00:47,000
百分之 H 百分之

24
00:00:47,000 --> 00:00:48,000
百分号 H 百分之

25
00:00:48,000 --> 00:00:49,000
百分号 M

26
00:00:49,000 --> 00:00:50,000
这是什么

27
00:00:50,000 --> 00:00:52,000
String

28
00:00:52,000 --> 00:00:54,000
String time format

29
00:00:54,000 --> 00:00:55,000
对吧

30
00:00:55,000 --> 00:00:57,000
大家好

31
00:00:57,000 --> 00:01:00,000
这里是我们新开的一档播客节目

32
00:01:00,000 --> 00:01:02,000
叫做内核恐慌

33
00:01:02,000 --> 00:01:03,000
Colonel Panic

34
00:01:03,000 --> 00:01:05,000
Colonel Panic

35
00:01:05,000 --> 00:01:07,000
然后这里的嘉宾呢

36
00:01:07,000 --> 00:01:09,000
就是我

37
00:01:09,000 --> 00:01:10,000
Rio 和以及吴涛

38
00:01:10,000 --> 00:01:12,000
大家可能听之前听 RT 功能的时候

39
00:01:12,000 --> 00:01:14,000
他已经来过几次了

40
00:01:14,000 --> 00:01:15,000
对

41
00:01:15,000 --> 00:01:17,000
其实咱们两个不能算嘉宾吧

42
00:01:17,000 --> 00:01:17,000
咱们两个要算

43
00:01:17,000 --> 00:01:18,000
主播对吧

44
00:01:18,000 --> 00:01:19,000
理论上

45
00:01:19,000 --> 00:01:20,000
hosts

46
00:01:20,000 --> 00:01:25,000
我们假如这个 podcast 可以积累到足够多的听众的话

47
00:01:25,000 --> 00:01:26,000
我们应该会一直做下去

48
00:01:26,000 --> 00:01:27,000
所以我们都是 host

49
00:01:27,000 --> 00:01:28,000
对

50
00:01:28,000 --> 00:01:32,000
现在我们先解释一下为什么要做这么一档节目

51
00:01:32,000 --> 00:01:34,000
对

52
00:01:34,000 --> 00:01:35,000
我听说啊

53
00:01:35,000 --> 00:01:36,000
就是我听 Lawrence 说

54
00:01:36,000 --> 00:01:40,000
是有部分听众认为 IT 功能不够 hardcore

55
00:01:40,000 --> 00:01:41,000
对

56
00:01:41,000 --> 00:01:41,000
因为

57
00:01:41,000 --> 00:01:43,000
湿货

58
00:01:43,000 --> 00:01:43,000
不对

59
00:01:43,000 --> 00:01:44,000
水货

60
00:01:44,000 --> 00:01:44,000
湿货

61
00:01:44,000 --> 00:01:46,000
湿货太多

62
00:01:46,000 --> 00:01:47,000
干货比较少

63
00:01:47,000 --> 00:01:50,000
然后大家可能会比较抱怨

64
00:01:50,000 --> 00:01:51,000
但是其实我想一下

65
00:01:51,000 --> 00:01:53,000
你说就我们两个聊

66
00:01:53,000 --> 00:01:55,000
就纯聊干货

67
00:01:55,000 --> 00:01:56,000
估计也不现实

68
00:01:56,000 --> 00:01:57,000
也会夹杂很多

69
00:01:57,000 --> 00:01:58,000
湿货

70
00:01:58,000 --> 00:01:59,000
丝货

71
00:01:59,000 --> 00:02:00,000
以及水货在里面

72
00:02:00,000 --> 00:02:00,000
我觉得

73
00:02:00,000 --> 00:02:03,000
而且我觉得就是

74
00:02:03,000 --> 00:02:06,000
somehow 在中文 IT 圈里面

75
00:02:06,000 --> 00:02:07,000
干货实在是太多了

76
00:02:08,000 --> 00:02:09,000
你有这感觉吗

77
00:02:09,000 --> 00:02:11,000
挺有这样的感觉

78
00:02:11,000 --> 00:02:11,000
就是

79
00:02:11,000 --> 00:02:13,000
我总觉得

80
00:02:13,000 --> 00:02:15,000
缺一些比较

81
00:02:15,000 --> 00:02:17,000
清谈的部分

82
00:02:17,000 --> 00:02:19,000
当然有可能是跟

83
00:02:19,000 --> 00:02:21,000
我们读的

84
00:02:21,000 --> 00:02:23,000
我跟每个人的日常阅读有关

85
00:02:23,000 --> 00:02:26,000
也许我总是读那些比较干的部分

86
00:02:26,000 --> 00:02:28,000
我觉得听听你们的试货挺好的

87
00:02:28,000 --> 00:02:29,000
虽然我只是在

88
00:02:29,000 --> 00:02:30,000
对

89
00:02:30,000 --> 00:02:31,000
比如说通勤的路上听

90
00:02:31,000 --> 00:02:33,000
但听听试货挺好的

91
00:02:33,000 --> 00:02:34,000
OK

92
00:02:34,000 --> 00:02:35,000
所以有一个问题就是

93
00:02:35,000 --> 00:02:38,000
我们这个节目和 IT 功能有什么区别呢

94
00:02:38,000 --> 00:02:41,000
刚才讲了都是很多水分在里面

95
00:02:41,000 --> 00:02:44,000
那可能我们这个节目的定位和选题上

96
00:02:44,000 --> 00:02:46,000
会更加偏向于

97
00:02:46,000 --> 00:02:48,000
比如说像程序员

98
00:02:48,000 --> 00:02:50,000
开发者之类的东西

99
00:02:50,000 --> 00:02:52,000
因为刚好我和吴涛都是

100
00:02:52,000 --> 00:02:55,000
做相关的行业的

101
00:02:55,000 --> 00:02:56,000
对

102
00:02:56,000 --> 00:02:58,000
我觉得可能比较重要的区别就是

103
00:02:58,000 --> 00:02:59,000
在 IT 工作里面

104
00:03:00,000 --> 00:03:03,000
你们会假设听众听不懂一些东西

105
00:03:03,000 --> 00:03:06,000
而我们则假设听众是能听懂

106
00:03:06,000 --> 00:03:07,000
大部分内容的

107
00:03:07,000 --> 00:03:09,000
就我们不会去解释一些名词

108
00:03:09,000 --> 00:03:12,000
或者是解释一些术语

109
00:03:12,000 --> 00:03:13,000
或者是做背景介绍之类的

110
00:03:13,000 --> 00:03:14,000
我们就直接开始讲

111
00:03:14,000 --> 00:03:19,000
而且会比较不太顾及听众的感受

112
00:03:19,000 --> 00:03:20,000
对

113
00:03:20,000 --> 00:03:22,000
所以你看我们这个播客的名字叫做

114
00:03:22,000 --> 00:03:23,000
Colonel Panic

115
00:03:23,000 --> 00:03:25,000
如果你问什么是 Colonel Panic

116
00:03:25,000 --> 00:03:27,000
那你就输了

117
00:03:27,000 --> 00:03:28,000
那你就不适合这些人

118
00:03:28,000 --> 00:03:33,000
不过其实你在题杠里面也写了

119
00:03:33,000 --> 00:03:34,000
为什么要解释一下的

120
00:03:34,000 --> 00:03:34,000
对

121
00:03:34,000 --> 00:03:35,000
毕竟还是要解释

122
00:03:35,000 --> 00:03:38,000
就是内核恐慌来自于 Colonel Panic

123
00:03:38,000 --> 00:03:39,000
Colonel Panic

124
00:03:39,000 --> 00:03:42,000
我相信如果你不是一个出处茅庐的

125
00:03:43,000 --> 00:03:46,000
计算机专业的本科生

126
00:03:46,000 --> 00:03:48,000
那你应该是知道什么是 Colonel Panic

127
00:03:48,000 --> 00:03:55,000
就是如果你 ever 用过 Linux 或者是 MacOS 的话

128
00:03:55,000 --> 00:03:59,000
而且你也足够的有足够的不幸运

129
00:03:59,000 --> 00:04:03,000
曾经看到过 MacOS 出现过一个俗称五国

130
00:04:03,000 --> 00:04:05,000
现在已经是六国还是七国的画面

131
00:04:05,000 --> 00:04:09,000
就是背景是一个大大的关机的符号

132
00:04:09,000 --> 00:04:15,000
然后用五种国家的语言写着 MacOS 10

133
00:04:15,000 --> 00:04:17,000
遭遇到了一个不可预知

134
00:04:17,000 --> 00:04:20,000
或者是 whatever 就是很难搞定的问题

135
00:04:20,000 --> 00:04:21,000
我不得不关机了

136
00:04:21,000 --> 00:04:21,000
对

137
00:04:21,000 --> 00:04:22,000
那么在这种情况下

138
00:04:22,000 --> 00:04:27,000
其实我们说 MacOS 操作系统的 Colonel

139
00:04:27,000 --> 00:04:29,000
也就是它的内核出现了 Panic

140
00:04:29,000 --> 00:04:32,000
可能如果听众朋友没有用过 Mac 的话

141
00:04:32,000 --> 00:04:35,000
用 Windows 时代就是那个叫什么蓝屏

142
00:04:35,000 --> 00:04:36,000
Blue Screen of Death

143
00:04:36,000 --> 00:04:40,000
Windows 那个叫做专业术语叫做 Stop Error

144
00:04:40,000 --> 00:04:41,000
就是停止错误

145
00:04:41,000 --> 00:04:44,000
就是这个错误如此严重

146
00:04:44,000 --> 00:04:46,000
以至于它必须停下来了

147
00:04:46,000 --> 00:04:47,000
对

148
00:04:47,000 --> 00:04:49,000
俗称叫什么

149
00:04:49,000 --> 00:04:50,000
中文叫蓝屏

150
00:04:50,000 --> 00:04:50,000
对

151
00:04:50,000 --> 00:04:53,000
英文叫做 The Blue Screen of Death

152
00:04:53,000 --> 00:04:54,000
对

153
00:04:54,000 --> 00:04:56,000
蓝色死亡屏幕

154
00:04:56,000 --> 00:04:58,000
对

155
00:04:58,000 --> 00:05:01,000
那个 MacOS 还有一个说法

156
00:05:01,000 --> 00:05:02,000
叫做那个什么

157
00:05:02,000 --> 00:05:03,000
Beach

158
00:05:03,000 --> 00:05:05,000
Spinning Beach Ball of Death

159
00:05:05,000 --> 00:05:06,000
Yeah

160
00:05:06,000 --> 00:05:07,000
Spinning Beach Ball of Death

161
00:05:07,000 --> 00:05:10,000
但是这个其实并不对等

162
00:05:10,000 --> 00:05:11,000
我觉得因为 Spinning Beach Ball of Death

163
00:05:11,000 --> 00:05:14,000
不一定会导致 Colonel Pandora

164
00:05:14,000 --> 00:05:15,000
对那个只是系统停止响应嘛

165
00:05:15,000 --> 00:05:22,000
对它通常只是在用户层的一个进程

166
00:05:22,000 --> 00:05:28,000
导致 UI 不能更新才会出现 Bitch Ball of Death

167
00:05:28,000 --> 00:05:31,000
对所以其实我最近还遇到这么几个事情

168
00:05:31,000 --> 00:05:32,000
就是那个

169
00:05:32,000 --> 00:05:35,000
我发现现在 Mac 上最容易出现这个问题

170
00:05:35,000 --> 00:05:36,000
就是 Safari

171
00:05:36,000 --> 00:05:37,000
不是那个 Finder 吧

172
00:05:37,000 --> 00:05:40,000
真的吗

173
00:05:40,000 --> 00:05:42,000
我用 Finder 从 Immel 出现过

174
00:05:42,000 --> 00:05:45,000
你难道经常遭遇 Colonel Pandora

175
00:05:45,000 --> 00:05:45,000
那个不可能吗

176
00:05:45,000 --> 00:05:46,000
不不不不

177
00:05:46,000 --> 00:05:46,000
还是

178
00:05:46,000 --> 00:05:48,000
就是那个 Spinning Ball

179
00:05:48,000 --> 00:05:48,000
OK

180
00:05:48,000 --> 00:05:50,000
那个主要的问题是

181
00:05:50,000 --> 00:05:52,000
我家里有一个 NAS

182
00:05:52,000 --> 00:05:54,000
NAS 就是那个外资

183
00:05:54,000 --> 00:05:55,000
那个网络硬盘嘛

184
00:05:55,000 --> 00:05:57,000
然后它是通过那个 Finder 的

185
00:05:57,000 --> 00:05:59,000
那个 Share 的那个 Tab 去访问的嘛

186
00:05:59,000 --> 00:06:00,000
然后

187
00:06:00,000 --> 00:06:03,000
所以是在等待网络 Io 的时候导致的

188
00:06:03,000 --> 00:06:04,000
对会很慢

189
00:06:04,000 --> 00:06:04,000
然后它

190
00:06:04,000 --> 00:06:06,000
我觉得是这个 Finder 写的不好的地方

191
00:06:06,000 --> 00:06:08,000
它这里是一个阻塞的一个过程

192
00:06:08,000 --> 00:06:09,000
就是你一旦

193
00:06:09,000 --> 00:06:11,000
你看那个 NAS 它是会

194
00:06:11,000 --> 00:06:12,000
它是一个机械式硬盘嘛

195
00:06:12,000 --> 00:06:14,000
然后你如果你有段时间不用的话

196
00:06:14,000 --> 00:06:17,000
它是设置了默认是会

197
00:06:17,000 --> 00:06:18,000
就停转嘛

198
00:06:18,000 --> 00:06:19,000
就省电嘛

199
00:06:19,000 --> 00:06:19,000
然后

200
00:06:19,000 --> 00:06:22,000
我也遇到过类似的问题

201
00:06:22,000 --> 00:06:22,000
就是我

202
00:06:22,000 --> 00:06:24,000
而且这不甚至不是通过 NAS

203
00:06:24,000 --> 00:06:27,000
我在接一个外接硬盘的时候会导致

204
00:06:27,000 --> 00:06:29,000
就硬盘也会这样对吧

205
00:06:29,000 --> 00:06:29,000
对

206
00:06:29,000 --> 00:06:31,000
然后我的解决方案是

207
00:06:31,000 --> 00:06:34,000
做一个 Chrome Tab

208
00:06:34,000 --> 00:06:37,000
然后每隔五分钟去 LS 一下这个硬盘

209
00:06:37,000 --> 00:06:40,000
就保持它一直运转嘛

210
00:06:40,000 --> 00:06:40,000
对

211
00:06:40,000 --> 00:06:41,000
那这样会很吵啊

212
00:06:41,000 --> 00:06:43,000
还好吧

213
00:06:43,000 --> 00:06:46,000
你的 NAS 难道不是放在一个不会吵到的地方吗

214
00:06:46,000 --> 00:06:47,000
我很远

215
00:06:47,000 --> 00:06:47,000
另外一个房间

216
00:06:47,000 --> 00:06:48,000
对啊

217
00:06:48,000 --> 00:06:49,000
所以无所谓嘛

218
00:06:49,000 --> 00:06:51,000
但是你的那个 U 盘就不行了

219
00:06:51,000 --> 00:06:53,000
U 盘肯定跟电脑连在一起的嘛

220
00:06:53,000 --> 00:06:57,000
我倒是没有遇到过这个问题

221
00:06:57,000 --> 00:06:58,000
就是我是把那个移动硬盘

222
00:06:58,000 --> 00:07:01,000
塞在抽屉的最里面

223
00:07:01,000 --> 00:07:03,000
然后它只要转起来

224
00:07:03,000 --> 00:07:03,000
我也听不到

225
00:07:03,000 --> 00:07:04,000
其实

226
00:07:04,000 --> 00:07:04,000
啊

227
00:07:04,000 --> 00:07:05,000
你这样设成的应该

228
00:07:05,000 --> 00:07:07,000
因为我都是摆在外面的

229
00:07:07,000 --> 00:07:08,000
我这个桌子是没有抽屉的

230
00:07:08,000 --> 00:07:08,000
所以

231
00:07:08,000 --> 00:07:09,000
对

232
00:07:09,000 --> 00:07:12,000
就是我没有找到怎么样才可以设定

233
00:07:12,000 --> 00:07:13,000
说这个硬盘硬盘

234
00:07:13,000 --> 00:07:16,000
或者它根本就是一个内置的功能

235
00:07:16,000 --> 00:07:18,000
就是它会自动停下来省电

236
00:07:18,000 --> 00:07:18,000
嗯

237
00:07:18,000 --> 00:07:22,000
然后导致第一次访问的时候会有一个非常慢的过程

238
00:07:22,000 --> 00:07:26,000
那我就干脆用这种暴力的方法

239
00:07:26,000 --> 00:07:27,000
让它根本不要停下来

240
00:07:27,000 --> 00:07:30,000
我记得在那个 Linux 上是可以设置

241
00:07:30,000 --> 00:07:32,000
用那个什么 PM set 这个工具吧

242
00:07:32,000 --> 00:07:32,000
好像叫什么

243
00:07:32,000 --> 00:07:33,000
一个什么玩意儿

244
00:07:33,000 --> 00:07:36,000
有个命令行的工具在那样可以设定

245
00:07:36,000 --> 00:07:39,000
不让这些硬盘就停下来

246
00:07:39,000 --> 00:07:41,000
嗯

247
00:07:41,000 --> 00:07:42,000
我不太记得而已

248
00:07:42,000 --> 00:07:43,000
省电功能

249
00:07:43,000 --> 00:07:44,000
对

250
00:07:44,000 --> 00:07:46,000
应该是可以设定的

251
00:07:46,000 --> 00:07:47,000
但是我当时没有找到

252
00:07:47,000 --> 00:07:48,000
对

253
00:07:48,000 --> 00:07:50,000
所以你还有很多时候用那个外接硬盘吗

254
00:07:50,000 --> 00:07:51,000
现在

255
00:07:51,000 --> 00:07:52,000
现在没有了

256
00:07:52,000 --> 00:07:57,000
现在我可能会买一个那个时间胶囊

257
00:07:57,000 --> 00:07:58,000
哇

258
00:07:58,000 --> 00:07:59,000
你真的要买那个吗

259
00:07:59,000 --> 00:08:00,000
对

260
00:08:00,000 --> 00:08:02,000
挺二的

261
00:08:02,000 --> 00:08:05,000
不过我觉得就是人变得越来懒了嘛

262
00:08:05,000 --> 00:08:07,000
如果能花钱解决的问题

263
00:08:07,000 --> 00:08:11,000
可能就不愿意再去再去自己动手了

264
00:08:11,000 --> 00:08:15,000
或者说我希望能够把动手的精力留在其他部分

265
00:08:15,000 --> 00:08:17,000
这个不错

266
00:08:17,000 --> 00:08:17,000
时间

267
00:08:17,000 --> 00:08:18,000
对

268
00:08:18,000 --> 00:08:20,000
我前两天其实在网上看到了一个

269
00:08:20,000 --> 00:08:25,000
在 Hacker News 上面的评论区看到了一个一条新闻

270
00:08:25,000 --> 00:08:30,000
就是有一个人在 GitHub 上公布了一个脚本

271
00:08:30,000 --> 00:08:36,000
自动的把 Mac 的很多设置设定为就是加引号的更易用吧

272
00:08:36,000 --> 00:08:43,000
然后有一个人评论说这些整天倒腾电脑的人就好像就像 Car guy

273
00:08:43,000 --> 00:08:46,000
就是摆动汽车的人一样

274
00:08:46,000 --> 00:08:48,000
把汽车的很多

275
00:08:48,000 --> 00:08:53,000
对把汽车的很多部分改装掉来获得一点点微不足道的性能提升

276
00:08:53,000 --> 00:08:56,000
然后他说我就很恨这种人

277
00:08:56,000 --> 00:09:03,000
然后但是我就想说其实我们每个人在每个阶段在某一个阶段可能都是这样的人

278
00:09:03,000 --> 00:09:06,000
就是会拼命的去摆动这个折腾这个电脑

279
00:09:06,000 --> 00:09:11,000
但是可能现在是折腾不动或者是希望能够去折腾其他的东西

280
00:09:11,000 --> 00:09:17,000
所以就觉得如果能够有一个现成的而且比较好的解决方案的话

281
00:09:17,000 --> 00:09:18,000
那不妨就用它

282
00:09:18,000 --> 00:09:23,000
对啊就是我也是我当初为什么换用 Mac 的一个主要原因

283
00:09:23,000 --> 00:09:29,000
因为在换 Mac 之前我大概是用了可能几年的时间的那个 Linux 桌面

284
00:09:29,000 --> 00:09:31,000
就是 Ubuntu 的桌面系统

285
00:09:31,000 --> 00:09:33,000
确实太折腾

286
00:09:33,000 --> 00:09:38,000
对我觉得可能就是因为我不停的折腾它

287
00:09:38,000 --> 00:09:41,000
后来我是在 Windows 里面装一个虚拟机

288
00:09:41,000 --> 00:09:44,000
然后在虚拟机里面装了可能四五个 Linux

289
00:09:44,000 --> 00:09:54,000
然后一开始是觉得怎么都不能找到一个可新的桌面环境

290
00:09:54,000 --> 00:10:00,000
到后来就变成了觉得怎么都不能找到一个可新的 Windows Manager

291
00:10:00,000 --> 00:10:05,000
就是我记得那个时候用 I 3 还是用一个叫做

292
00:10:05,000 --> 00:10:07,000
E 吧

293
00:10:07,000 --> 00:10:08,000
Enlightenment 是不是

294
00:10:08,000 --> 00:10:11,000
不是 Enlightenment

295
00:10:11,000 --> 00:10:14,000
一直想不起来叫什么

296
00:10:14,000 --> 00:10:16,000
Awesome 好像叫 awesome

297
00:10:16,000 --> 00:10:18,000
Awesomeness

298
00:10:18,000 --> 00:10:19,000
对是一个 Windows Manager

299
00:10:19,000 --> 00:10:20,000
就是纯

300
00:10:20,000 --> 00:10:22,000
它支持纯键盘操作

301
00:10:22,000 --> 00:10:28,000
因为那个时候我对啊就试图找到一个纯键盘的桌面环境

302
00:10:28,000 --> 00:10:29,000
Linux 的桌面环境

303
00:10:29,000 --> 00:10:30,000
嗯嗯嗯

304
00:10:30,000 --> 00:10:33,000
但后来就还是觉得还买了 Metamax

305
00:10:33,000 --> 00:10:38,000
我的问题倒不是那么就不是因为软件的原因啊

306
00:10:38,000 --> 00:10:41,000
我的因为是那个硬件的事情导致

307
00:10:41,000 --> 00:10:45,000
当时我用的就在跑 Ubuntu 的时候用的是一个 ThinkPad

308
00:10:45,000 --> 00:10:50,000
然后就经常那个时候是大学上我要用那个什么一种特殊的

309
00:10:50,000 --> 00:10:53,000
无限认证的一种方式

310
00:10:53,000 --> 00:10:54,000
现在叫瑞杰吧是不是

311
00:10:54,000 --> 00:10:56,000
对很多大学里面都有这个

312
00:10:56,000 --> 00:10:58,000
你是在国内的时候

313
00:10:58,000 --> 00:10:58,000
对对国内的时候

314
00:10:58,000 --> 00:11:02,000
但是当之前那个是还我们学校还用的还不叫瑞杰

315
00:11:02,000 --> 00:11:04,000
是一个什么其他的一个厂商的

316
00:11:04,000 --> 00:11:04,000
我忘了

317
00:11:04,000 --> 00:11:05,000
但是意思是差不多的

318
00:11:05,000 --> 00:11:08,000
就不是说像现在一样你可以连上

319
00:11:08,000 --> 00:11:09,000
还是要认证一下

320
00:11:09,000 --> 00:11:11,000
但是好像不需要装一个特殊的客户端

321
00:11:11,000 --> 00:11:15,000
你只用那个当时是他是针对 Windows 开发的嘛

322
00:11:15,000 --> 00:11:18,000
然后你就问的是那个自带的那个验证一下就可以了

323
00:11:18,000 --> 00:11:22,000
但是问题是我在那个 Ubuntu 上用自带的那个 WiFi stack

324
00:11:22,000 --> 00:11:24,000
是达四也验证不过了

325
00:11:24,000 --> 00:11:26,000
就非常非常折腾

326
00:11:26,000 --> 00:11:28,000
而且他好像每隔一段时间会升级一次

327
00:11:28,000 --> 00:11:31,000
就是我可能配好可能能用一次去图书馆嘛

328
00:11:31,000 --> 00:11:34,000
比如说然后过个十天半个月

329
00:11:34,000 --> 00:11:36,000
然后发现又连不上了

330
00:11:36,000 --> 00:11:38,000
我就想啊 Fuck this

331
00:11:38,000 --> 00:11:40,000
然后就买了一个 Mac

332
00:11:40,000 --> 00:11:42,000
然后就就后来就

333
00:11:42,000 --> 00:11:43,000
后来就出国才能买 Mac

334
00:11:43,000 --> 00:11:45,000
就是也是因为类似的问题嘛

335
00:11:45,000 --> 00:11:46,000
OK

336
00:11:46,000 --> 00:11:49,000
我记得那个时候我刚到德国

337
00:11:49,000 --> 00:11:51,000
印象比较深的一件事情就是

338
00:11:51,000 --> 00:11:57,000
那个学校的计算机实验室的门上贴着一个纸条

339
00:11:57,000 --> 00:11:59,000
写着我们不提供任何微软产品

340
00:11:59,000 --> 00:12:04,000
然后旁边那张纸条上面写着

341
00:12:04,000 --> 00:12:09,000
如果要下载那个 WiFi 的认证客户端

342
00:12:09,000 --> 00:12:10,000
Windows 请去这里

343
00:12:10,000 --> 00:12:12,000
Linux 请去那里

344
00:12:12,000 --> 00:12:13,000
然后我就觉得哇

345
00:12:13,000 --> 00:12:17,000
Linux 用户真是畅通无阻

346
00:12:17,000 --> 00:12:19,000
这点跟我在德国的另外一个学校

347
00:12:19,000 --> 00:12:20,000
遇到的以前也差不多

348
00:12:20,000 --> 00:12:22,000
当时不是德国大历年吗

349
00:12:22,000 --> 00:12:24,000
也是在另外一个学校交换

350
00:12:24,000 --> 00:12:26,000
是在他们的那个 informatic

351
00:12:26,000 --> 00:12:29,000
对 informatic

352
00:12:29,000 --> 00:12:29,000
OK

353
00:12:29,000 --> 00:12:32,000
就是德语的 computer science

354
00:12:32,000 --> 00:12:35,000
信息科学

355
00:12:35,000 --> 00:12:35,000
对

356
00:12:35,000 --> 00:12:36,000
然后

357
00:12:36,000 --> 00:12:42,000
就是爱丁堡的计算机学院也叫做 informatic

358
00:12:42,000 --> 00:12:44,000
是 C 吧

359
00:12:44,000 --> 00:12:45,000
就是那个字母

360
00:12:45,000 --> 00:12:47,000
是 informatics

361
00:12:47,000 --> 00:12:48,000
对

362
00:12:48,000 --> 00:12:48,000
CS

363
00:12:48,000 --> 00:12:49,000
CS 不是 K

364
00:12:49,000 --> 00:12:50,000
CS

365
00:12:50,000 --> 00:12:51,000
不是 K

366
00:12:51,000 --> 00:12:51,000
OK

367
00:12:51,000 --> 00:12:53,000
我觉得还挺神奇的

368
00:12:53,000 --> 00:12:55,000
其实我觉得这更合理啊

369
00:12:55,000 --> 00:12:56,000
Computer science

370
00:12:56,000 --> 00:12:57,000
sounds weird

371
00:12:57,000 --> 00:12:59,000
informatic

372
00:12:59,000 --> 00:13:00,000
听起来比较屌

373
00:13:00,000 --> 00:13:02,000
信息学是吧

374
00:13:02,000 --> 00:13:03,000
对

375
00:13:03,000 --> 00:13:03,000
信息学

376
00:13:03,000 --> 00:13:04,000
信息学

377
00:13:04,000 --> 00:13:06,000
其实信息学在国内

378
00:13:06,000 --> 00:13:07,000
是不是跟其他的科目

379
00:13:07,000 --> 00:13:08,000
有点关系

380
00:13:08,000 --> 00:13:09,000
跟 Terminers science

381
00:13:09,000 --> 00:13:10,000
还不是严格一样

382
00:13:10,000 --> 00:13:12,000
信息学好像是什么情报

383
00:13:12,000 --> 00:13:12,000
对

384
00:13:12,000 --> 00:13:13,000
信息专业

385
00:13:13,000 --> 00:13:14,000
就什么

386
00:13:14,000 --> 00:13:16,000
他们做的事情是

387
00:13:16,000 --> 00:13:17,000
间谍那一类的

388
00:13:17,000 --> 00:13:18,000
对

389
00:13:18,000 --> 00:13:20,000
他们比较偏向于

390
00:13:20,000 --> 00:13:24,000
不那么计算机科学的部分

391
00:13:24,000 --> 00:13:26,000
就是信息传说啊

392
00:13:26,000 --> 00:13:27,000
还有什么

393
00:13:27,000 --> 00:13:29,000
乃至雷达之类的好像都有

394
00:13:29,000 --> 00:13:31,000
所以是一个更

395
00:13:31,000 --> 00:13:34,000
hardcore 的一个科目

396
00:13:34,000 --> 00:13:34,000
对

397
00:13:34,000 --> 00:13:36,000
一个偏向于通讯的专业

398
00:13:36,000 --> 00:13:36,000
应该说

399
00:13:36,000 --> 00:13:37,000
OK

400
00:13:37,000 --> 00:13:38,000
刚说哪里了

401
00:13:38,000 --> 00:13:39,000
对

402
00:13:39,000 --> 00:13:40,000
我在那个德国的时候

403
00:13:40,000 --> 00:13:41,000
发现这个

404
00:13:41,000 --> 00:13:42,000
就德国的

405
00:13:42,000 --> 00:13:43,000
就是 LUG

406
00:13:43,000 --> 00:13:44,000
Linux Unit Group

407
00:13:44,000 --> 00:13:45,000
好像特别

408
00:13:45,000 --> 00:13:47,000
特别 hardcore

409
00:13:47,000 --> 00:13:49,000
就比较多

410
00:13:49,000 --> 00:13:51,000
而且他们会很坚持

411
00:13:51,000 --> 00:13:52,000
就很多事情

412
00:13:52,000 --> 00:13:53,000
他不想用这个

413
00:13:53,000 --> 00:13:54,000
付费

414
00:13:54,000 --> 00:13:56,000
或者是特别是微软的产品啊

415
00:13:56,000 --> 00:13:58,000
当时我在那个系的时候

416
00:13:58,000 --> 00:13:58,000
也是有一个

417
00:13:58,000 --> 00:13:59,000
有一个

418
00:13:59,000 --> 00:14:00,000
有一个门上面

419
00:14:00,000 --> 00:14:01,000
有时他们也是就是

420
00:14:01,000 --> 00:14:02,000
叫什么

421
00:14:02,000 --> 00:14:03,000
technical support

422
00:14:03,000 --> 00:14:05,000
然后他们也是说

423
00:14:05,000 --> 00:14:06,000
Windows

424
00:14:06,000 --> 00:14:07,000
去另外那边玩

425
00:14:07,000 --> 00:14:08,000
然后这边只管

426
00:14:08,000 --> 00:14:08,000
那个

427
00:14:08,000 --> 00:14:09,000
Unix

428
00:14:09,000 --> 00:14:09,000
类系统

429
00:14:09,000 --> 00:14:10,000
对

430
00:14:10,000 --> 00:14:11,000
所以

431
00:14:11,000 --> 00:14:13,000
我觉得这挺不错的

432
00:14:13,000 --> 00:14:14,000
德国是这样

433
00:14:14,000 --> 00:14:16,000
就是如果你的政府部门

434
00:14:16,000 --> 00:14:18,000
开发什么软件

435
00:14:18,000 --> 00:14:19,000
这个东西

436
00:14:19,000 --> 00:14:20,000
只支持 Windows

437
00:14:20,000 --> 00:14:21,000
立刻会有人去报应

438
00:14:21,000 --> 00:14:23,000
就是德国有一个

439
00:14:23,000 --> 00:14:24,000
德国报税

440
00:14:24,000 --> 00:14:25,000
可以在网上报税

441
00:14:25,000 --> 00:14:25,000
然后

442
00:14:25,000 --> 00:14:26,000
这个

443
00:14:26,000 --> 00:14:27,000
报税部门

444
00:14:27,000 --> 00:14:29,000
一开始只有一个 Windows 的软件

445
00:14:29,000 --> 00:14:29,000
后来

446
00:14:29,000 --> 00:14:30,000
被人抱怨

447
00:14:30,000 --> 00:14:31,000
他们不得不开发了一个

448
00:14:31,000 --> 00:14:32,000
Linux 的软件

449
00:14:32,000 --> 00:14:34,000
像你在 Linux 下面

450
00:14:34,000 --> 00:14:34,000
就可以报税

451
00:14:34,000 --> 00:14:35,000
酷

452
00:14:35,000 --> 00:14:37,000
但 Mac 用户机器

453
00:14:37,000 --> 00:14:39,000
还是没有受到重视

454
00:14:39,000 --> 00:14:40,000
就是

455
00:14:40,000 --> 00:14:41,000
可能德国政府也觉得

456
00:14:41,000 --> 00:14:42,000
你既然有钱买得起 Mac

457
00:14:42,000 --> 00:14:44,000
那你就请你去花钱

458
00:14:44,000 --> 00:14:45,000
买那个 Mac 下面的

459
00:14:45,000 --> 00:14:46,000
报税软件

460
00:14:46,000 --> 00:14:47,000
它是一个专用的客户端

461
00:14:47,000 --> 00:14:49,000
不是一个网页版吗

462
00:14:49,000 --> 00:14:50,000
是一个专用客户端

463
00:14:50,000 --> 00:14:51,000
报税必须用一个专用的客户端

464
00:14:51,000 --> 00:14:53,000
这个客户端会做

465
00:14:53,000 --> 00:14:55,000
会用数字证书给你签名

466
00:14:55,000 --> 00:14:57,000
然后通过加密信道

467
00:14:57,000 --> 00:14:59,000
把那个报税表单

468
00:14:59,000 --> 00:15:01,000
发给政府部门

469
00:15:01,000 --> 00:15:01,000
这么复杂

470
00:15:01,000 --> 00:15:02,000
OK

471
00:15:02,000 --> 00:15:03,000
大大报税比较简单

472
00:15:03,000 --> 00:15:05,000
就是它是

473
00:15:05,000 --> 00:15:07,000
就政府不提供

474
00:15:07,000 --> 00:15:08,000
任何这种官方的界面给你

475
00:15:08,000 --> 00:15:09,000
你可以用纸张的方式

476
00:15:09,000 --> 00:15:10,000
填表去报

477
00:15:10,000 --> 00:15:11,000
然后但是其实

478
00:15:11,000 --> 00:15:13,000
大多数人还是找一个

479
00:15:13,000 --> 00:15:13,000
这种

480
00:15:13,000 --> 00:15:14,000
你刚才讲的那种软件

481
00:15:14,000 --> 00:15:15,000
但是那种软件

482
00:15:15,000 --> 00:15:16,000
也就是

483
00:15:16,000 --> 00:15:17,000
做那个软件的公司

484
00:15:17,000 --> 00:15:19,000
它同时有这种客户端版本

485
00:15:19,000 --> 00:15:20,000
比如说你可以转到你的

486
00:15:20,000 --> 00:15:22,000
这个 Mac 上

487
00:15:22,000 --> 00:15:23,000
可以转到你的 Windows 上

488
00:15:23,000 --> 00:15:24,000
甚至还有那个 iPhone

489
00:15:24,000 --> 00:15:26,000
就是 iOS 的版本

490
00:15:26,000 --> 00:15:27,000
但是我一直用的

491
00:15:27,000 --> 00:15:29,000
都是他们的一个网页版

492
00:15:29,000 --> 00:15:29,000
但虽然很丑

493
00:15:29,000 --> 00:15:30,000
但是好歹能用

494
00:15:30,000 --> 00:15:32,000
而且我试了一下吧

495
00:15:32,000 --> 00:15:34,000
就跨浏览器的这个

496
00:15:34,000 --> 00:15:36,000
兼容性还不错

497
00:15:36,000 --> 00:15:38,000
对也许这是更好的一种选择

498
00:15:38,000 --> 00:15:39,000
我不知道为什么

499
00:15:39,000 --> 00:15:40,000
德国人一定要

500
00:15:40,000 --> 00:15:41,000
要就是税务局

501
00:15:41,000 --> 00:15:43,000
一定要自己开发一个客户端

502
00:15:43,000 --> 00:15:44,000
你刚才都说他要加密那些

503
00:15:44,000 --> 00:15:45,000
很麻烦

504
00:15:45,000 --> 00:15:46,000
你知道这样的

505
00:15:46,000 --> 00:15:48,000
对但我觉得有点

506
00:15:48,000 --> 00:15:49,000
overengineering

507
00:15:49,000 --> 00:15:50,000
就是德国很多东西都是

508
00:15:50,000 --> 00:15:51,000
overengineering

509
00:15:51,000 --> 00:15:53,000
It's German

510
00:15:53,000 --> 00:15:55,000
当然可能是比较

511
00:15:55,000 --> 00:15:56,000
可能是 make sense

512
00:15:56,000 --> 00:15:58,000
但不像法国的很多东西

513
00:15:58,000 --> 00:15:59,000
它 overengineered 的

514
00:15:59,000 --> 00:16:01,000
而且非常奇怪

515
00:16:01,000 --> 00:16:05,000
我希望听众里面没有

516
00:16:05,000 --> 00:16:06,000
法国粉

517
00:16:06,000 --> 00:16:08,000
因为我是一个非常喜欢黑法

518
00:16:08,000 --> 00:16:10,000
可能会经常听见我吐槽

519
00:16:10,000 --> 00:16:11,000
法国的这个那个

520
00:16:11,000 --> 00:16:13,000
德国人都黑法国人吧

521
00:16:13,000 --> 00:16:14,000
也不是德国

522
00:16:14,000 --> 00:16:17,000
我觉得德国应该也有喜欢法国

523
00:16:17,000 --> 00:16:18,000
但我觉得主流是黑的吧

524
00:16:18,000 --> 00:16:21,000
黑法国是欧洲的

525
00:16:21,000 --> 00:16:24,000
你想就是

526
00:16:24,000 --> 00:16:26,000
这是谁说的

527
00:16:26,000 --> 00:16:27,000
这好像是 C.C.城说的

528
00:16:27,000 --> 00:16:30,000
说你想跟欧洲的任何一个国家

529
00:16:30,000 --> 00:16:32,000
建立起的陌生人

530
00:16:32,000 --> 00:16:33,000
建立迅速建立起友谊

531
00:16:33,000 --> 00:16:34,000
就黑法国人就可以了

532
00:16:34,000 --> 00:16:36,000
对先黑一下法国人

533
00:16:36,000 --> 00:16:37,000
看看对方有没有反应

534
00:16:37,000 --> 00:16:38,000
有反应的话

535
00:16:38,000 --> 00:16:40,000
很有可能就可以一起黑了

536
00:16:40,000 --> 00:16:41,000
对

537
00:16:41,000 --> 00:16:43,000
但是我觉得就是

538
00:16:43,000 --> 00:16:44,000
刚才你讲那种方式

539
00:16:44,000 --> 00:16:45,000
用那种什么

540
00:16:45,000 --> 00:16:46,000
就是证书签名

541
00:16:46,000 --> 00:16:47,000
然后加密的方式

542
00:16:47,000 --> 00:16:48,000
确实是更安全的呀

543
00:16:48,000 --> 00:16:49,000
因为

544
00:16:49,000 --> 00:16:51,000
加拿这种地方

545
00:16:51,000 --> 00:16:51,000
对安全也是

546
00:16:51,000 --> 00:16:52,000
我觉得他们是很水的

547
00:16:52,000 --> 00:16:53,000
很多事情

548
00:16:53,000 --> 00:16:54,000
都是可以

549
00:16:54,000 --> 00:16:56,000
很容易的

550
00:16:56,000 --> 00:16:58,000
不需要经过任何麻烦

551
00:16:58,000 --> 00:16:59,000
那就可以

552
00:16:59,000 --> 00:17:01,000
搜索引进去认到别人

553
00:17:01,000 --> 00:17:02,000
比如说那天我去

554
00:17:02,000 --> 00:17:03,000
我们不是

555
00:17:03,000 --> 00:17:05,000
就这次回来

556
00:17:05,000 --> 00:17:07,000
办了一个地方的新的地址吗

557
00:17:07,000 --> 00:17:09,000
然后就要去改

558
00:17:09,000 --> 00:17:10,000
比如说

559
00:17:10,000 --> 00:17:10,000
我改那个

560
00:17:10,000 --> 00:17:11,000
家庭上的那个

561
00:17:11,000 --> 00:17:13,000
那个注册的地址

562
00:17:13,000 --> 00:17:14,000
我改了我自己的

563
00:17:14,000 --> 00:17:16,000
然后就改我老婆的

564
00:17:16,000 --> 00:17:16,000
然后他

565
00:17:16,000 --> 00:17:17,000
他有个网页

566
00:17:17,000 --> 00:17:17,000
可以

567
00:17:17,000 --> 00:17:18,000
可以输入你的

568
00:17:18,000 --> 00:17:19,000
那个家庭的号

569
00:17:19,000 --> 00:17:20,000
然后一个

570
00:17:20,000 --> 00:17:21,000
六位数的

571
00:17:21,000 --> 00:17:22,000
密码

572
00:17:22,000 --> 00:17:23,000
就可以去登录进去

573
00:17:23,000 --> 00:17:24,000
但是我老婆那个

574
00:17:24,000 --> 00:17:25,000
从来没有用过

575
00:17:25,000 --> 00:17:25,000
所以

576
00:17:25,000 --> 00:17:26,000
我也不知道

577
00:17:26,000 --> 00:17:27,000
那个六位数密码是多少

578
00:17:27,000 --> 00:17:28,000
然后就打电话去

579
00:17:28,000 --> 00:17:28,000
那个

580
00:17:28,000 --> 00:17:30,000
我们这里管

581
00:17:30,000 --> 00:17:31,000
那个发家庭的

582
00:17:31,000 --> 00:17:32,000
那个机构

583
00:17:32,000 --> 00:17:33,000
去问密码

584
00:17:33,000 --> 00:17:34,000
然后他就问了我一下

585
00:17:34,000 --> 00:17:35,000
那个家庭的号码

586
00:17:35,000 --> 00:17:36,000
然后名字

587
00:17:36,000 --> 00:17:37,000
就把那个密码告诉我

588
00:17:37,000 --> 00:17:41,000
我觉得这可能

589
00:17:41,000 --> 00:17:41,000
这跟就是

590
00:17:41,000 --> 00:17:43,000
加拿大地广人心有关吧

591
00:17:43,000 --> 00:17:44,000
对

592
00:17:44,000 --> 00:17:45,000
人和人之间

593
00:17:45,000 --> 00:17:47,000
有比较更多的信任

594
00:17:47,000 --> 00:17:47,000
对

595
00:17:47,000 --> 00:17:48,000
特别说在我这个地方

596
00:17:48,000 --> 00:17:50,000
我觉得可能是属于

597
00:17:50,000 --> 00:17:51,000
这种非常高

598
00:17:51,000 --> 00:17:52,000
信任度的那种地区

599
00:17:52,000 --> 00:17:53,000
就是我知道

600
00:17:53,000 --> 00:17:54,000
有很多人

601
00:17:54,000 --> 00:17:56,000
他们住那种

602
00:17:56,000 --> 00:17:57,000
就是两层楼的那种

603
00:17:57,000 --> 00:17:58,000
house

604
00:17:58,000 --> 00:17:58,000
就是小别墅

605
00:17:58,000 --> 00:18:00,000
然后他们出门

606
00:18:00,000 --> 00:18:01,000
是从来不锁门的

607
00:18:01,000 --> 00:18:02,000
就是你随便

608
00:18:02,000 --> 00:18:02,000
对

609
00:18:02,000 --> 00:18:03,000
或者把钥匙

610
00:18:03,000 --> 00:18:04,000
藏在地毯下面

611
00:18:04,000 --> 00:18:05,000
我觉得有时候

612
00:18:05,000 --> 00:18:05,000
我小时候看美国

613
00:18:05,000 --> 00:18:06,000
对

614
00:18:06,000 --> 00:18:08,000
把钥匙藏在地毯下面

615
00:18:08,000 --> 00:18:09,000
我都惊呆了

616
00:18:09,000 --> 00:18:11,000
对

617
00:18:11,000 --> 00:18:11,000
上次我也是

618
00:18:11,000 --> 00:18:13,000
我要去租一个房子

619
00:18:13,000 --> 00:18:14,000
它那个风景非常好

620
00:18:14,000 --> 00:18:15,000
在一个海边的

621
00:18:15,000 --> 00:18:16,000
一个小 house

622
00:18:16,000 --> 00:18:17,000
那个人

623
00:18:17,000 --> 00:18:18,000
那个房主

624
00:18:18,000 --> 00:18:19,000
是不在本地的

625
00:18:19,000 --> 00:18:21,000
他是远程电话

626
00:18:21,000 --> 00:18:21,000
给你说

627
00:18:21,000 --> 00:18:22,000
你去那个地方

628
00:18:22,000 --> 00:18:24,000
然后那个门口

629
00:18:24,000 --> 00:18:25,000
有一个什么花的

630
00:18:25,000 --> 00:18:27,000
花帛

631
00:18:27,000 --> 00:18:28,000
对吧

632
00:18:28,000 --> 00:18:28,000
花帛上面

633
00:18:28,000 --> 00:18:29,000
你把钥匙

634
00:18:29,000 --> 00:18:29,000
你把那个钥匙

635
00:18:29,000 --> 00:18:30,000
打开就可以进去了

636
00:18:30,000 --> 00:18:30,000
我说

637
00:18:30,000 --> 00:18:33,000
那你这样真的

638
00:18:33,000 --> 00:18:34,000
放心吗

639
00:18:34,000 --> 00:18:34,000
没事

640
00:18:34,000 --> 00:18:35,000
你看

641
00:18:35,000 --> 00:18:36,000
然后我就给他看

642
00:18:36,000 --> 00:18:38,000
就是看那个房子

643
00:18:38,000 --> 00:18:38,000
后来没租

644
00:18:38,000 --> 00:18:39,000
但是

645
00:18:39,000 --> 00:18:41,000
而且就在这个地方

646
00:18:41,000 --> 00:18:42,000
还是信任都是蛮高的

647
00:18:42,000 --> 00:18:43,000
那你也可能是因为这样

648
00:18:43,000 --> 00:18:45,000
才导致刚才你说那些问题

649
00:18:45,000 --> 00:18:46,000
就很多这种

650
00:18:46,000 --> 00:18:47,000
所谓的

651
00:18:47,000 --> 00:18:50,000
我们在一个 geek 看来

652
00:18:50,000 --> 00:18:51,000
这太不安全了

653
00:18:51,000 --> 00:18:52,000
但是他们觉得

654
00:18:52,000 --> 00:18:52,000
对

655
00:18:52,000 --> 00:18:53,000
无所谓

656
00:18:53,000 --> 00:18:54,000
反正也没有

657
00:18:54,000 --> 00:18:55,000
也不会发生什么

658
00:18:55,000 --> 00:18:56,000
对吧

659
00:18:56,000 --> 00:18:57,000
对

660
00:18:57,000 --> 00:18:57,000
就可能

661
00:18:57,000 --> 00:18:58,000
在

662
00:18:58,000 --> 00:19:01,000
在某些社会主义

663
00:19:01,000 --> 00:19:02,000
老子看来

664
00:19:02,000 --> 00:19:03,000
这种小国寡民

665
00:19:03,000 --> 00:19:04,000
可能是非常理想的

666
00:19:04,000 --> 00:19:05,000
一种状态

667
00:19:05,000 --> 00:19:06,000
但是很遗憾

668
00:19:06,000 --> 00:19:07,000
我们在

669
00:19:07,000 --> 00:19:10,000
发达国家

670
00:19:10,000 --> 00:19:11,000
或者说某些发生中国家

671
00:19:11,000 --> 00:19:12,000
比如某个具有

672
00:19:12,000 --> 00:19:13,000
十多亿人口的

673
00:19:13,000 --> 00:19:14,000
泛种国家

674
00:19:14,000 --> 00:19:15,000
这是非常不现实的

675
00:19:15,000 --> 00:19:15,000
一件事情

676
00:19:15,000 --> 00:19:17,000
人们还是尽量

677
00:19:17,000 --> 00:19:17,000
注意安全的

678
00:19:17,000 --> 00:19:18,000
比较好

679
00:19:18,000 --> 00:19:20,000
我觉得在德国的时候

680
00:19:20,000 --> 00:19:21,000
我觉得它还是

681
00:19:21,000 --> 00:19:21,000
蛮注意安全的

682
00:19:21,000 --> 00:19:22,000
很多地方都是

683
00:19:22,000 --> 00:19:23,000
因为德国

684
00:19:23,000 --> 00:19:24,000
其实德国是

685
00:19:24,000 --> 00:19:26,000
欧洲的人口第一大国

686
00:19:26,000 --> 00:19:27,000
德国八千多万

687
00:19:27,000 --> 00:19:28,000
九千万

688
00:19:28,000 --> 00:19:30,000
法国是第一大国

689
00:19:30,000 --> 00:19:31,000
但是德国是人口

690
00:19:31,000 --> 00:19:32,000
最多的国家

691
00:19:32,000 --> 00:19:33,000
所以德国之间

692
00:19:33,000 --> 00:19:34,000
德国可能

693
00:19:34,000 --> 00:19:36,000
这种信任的状况

694
00:19:36,000 --> 00:19:37,000
稍微少一点

695
00:19:37,000 --> 00:19:38,000
对

696
00:19:38,000 --> 00:19:38,000
而且

697
00:19:38,000 --> 00:19:39,000
但我相信

698
00:19:39,000 --> 00:19:40,000
还是有很多的

699
00:19:40,000 --> 00:19:41,000
国人会把钥匙

700
00:19:41,000 --> 00:19:41,000
藏在地上

701
00:19:41,000 --> 00:19:43,000
对

702
00:19:43,000 --> 00:19:44,000
而且还有一件事情

703
00:19:44,000 --> 00:19:46,000
我觉得很有意思

704
00:19:46,000 --> 00:19:46,000
就是

705
00:19:46,000 --> 00:19:48,000
你有开车

706
00:19:48,000 --> 00:19:50,000
在德国开汽车

707
00:19:50,000 --> 00:19:51,000
对吧

708
00:19:51,000 --> 00:19:52,000
对

709
00:19:52,000 --> 00:19:52,000
然后你那个邮箱

710
00:19:52,000 --> 00:19:54,000
是可以随便打开的吗

711
00:19:54,000 --> 00:19:56,000
可以

712
00:19:56,000 --> 00:19:57,000
我的不行

713
00:19:57,000 --> 00:19:59,000
但是大部分人的车的

714
00:19:59,000 --> 00:19:59,000
邮箱都可以

715
00:19:59,000 --> 00:20:00,000
我的邮箱需要

716
00:20:00,000 --> 00:20:01,000
在驾驶舱里面

717
00:20:01,000 --> 00:20:02,000
按一个键才可以打

718
00:20:02,000 --> 00:20:03,000
所以德国的车

719
00:20:03,000 --> 00:20:04,000
也有这样的

720
00:20:04,000 --> 00:20:05,000
不不不

721
00:20:05,000 --> 00:20:06,000
德国大部分车的

722
00:20:06,000 --> 00:20:07,000
油箱是按一下

723
00:20:07,000 --> 00:20:08,000
油箱盖就会弹起来

724
00:20:08,000 --> 00:20:09,000
但是就是需要

725
00:20:09,000 --> 00:20:11,000
一个锁的机制吗

726
00:20:11,000 --> 00:20:12,000
不需要

727
00:20:12,000 --> 00:20:13,000
就是任何人都可以打开

728
00:20:13,000 --> 00:20:14,000
就不觉得这个事情

729
00:20:14,000 --> 00:20:15,000
很傻逼吗

730
00:20:15,000 --> 00:20:16,000
嗯

731
00:20:16,000 --> 00:20:19,000
中国难道不是吗

732
00:20:19,000 --> 00:20:19,000
中国

733
00:20:19,000 --> 00:20:21,000
我开过的所有的车

734
00:20:21,000 --> 00:20:21,000
都是

735
00:20:21,000 --> 00:20:22,000
就好的

736
00:20:22,000 --> 00:20:23,000
坏的

737
00:20:23,000 --> 00:20:25,000
都是有一个锁的机制的

738
00:20:25,000 --> 00:20:26,000
要不你是从

739
00:20:26,000 --> 00:20:27,000
外面有钥匙打开

740
00:20:27,000 --> 00:20:28,000
要不是从那个驾驶舱

741
00:20:28,000 --> 00:20:28,000
按一个钮

742
00:20:28,000 --> 00:20:29,000
然后它才能够

743
00:20:29,000 --> 00:20:30,000
就是会有人偷油

744
00:20:30,000 --> 00:20:31,000
是吧

745
00:20:31,000 --> 00:20:32,000
这个是一个问题

746
00:20:32,000 --> 00:20:33,000
可能在中国

747
00:20:33,000 --> 00:20:34,000
就是最主要的问题

748
00:20:34,000 --> 00:20:35,000
但我觉得另外一个就是

749
00:20:35,000 --> 00:20:36,000
你不觉得这样

750
00:20:36,000 --> 00:20:37,000
很不安全吗

751
00:20:37,000 --> 00:20:39,000
就是有

752
00:20:39,000 --> 00:20:40,000
如果不喜欢

753
00:20:40,000 --> 00:20:41,000
就是都恨你的话

754
00:20:41,000 --> 00:20:42,000
往你的邮箱里面

755
00:20:42,000 --> 00:20:43,000
倒一点什么东西

756
00:20:43,000 --> 00:20:43,000
你车就毁了

757
00:20:43,000 --> 00:20:44,000
因为我知道

758
00:20:44,000 --> 00:20:45,000
上次有一个

759
00:20:45,000 --> 00:20:46,000
发生一件事情

760
00:20:46,000 --> 00:20:47,000
就是有一个

761
00:20:47,000 --> 00:20:49,000
我不知道他得知了谁

762
00:20:49,000 --> 00:20:49,000
还是怎么样

763
00:20:49,000 --> 00:20:51,000
有人好像在他那个

764
00:20:51,000 --> 00:20:52,000
油箱里面尿了一旁

765
00:20:52,000 --> 00:20:55,000
然后发生机就爆笑了

766
00:20:55,000 --> 00:20:55,000
嗯

767
00:20:55,000 --> 00:20:57,000
这是挺惨的

768
00:20:57,000 --> 00:20:59,000
我从来没有想过这个问题

769
00:20:59,000 --> 00:21:00,000
因为我女朋友的车

770
00:21:00,000 --> 00:21:02,000
就是按一下就会弹开的

771
00:21:02,000 --> 00:21:02,000
嗯

772
00:21:02,000 --> 00:21:03,000
就是说觉得

773
00:21:03,000 --> 00:21:04,000
为什么会这样呢

774
00:21:04,000 --> 00:21:05,000
这不很奇怪吗

775
00:21:05,000 --> 00:21:07,000
但这也是可能从一个

776
00:21:07,000 --> 00:21:07,000
什么

777
00:21:07,000 --> 00:21:09,000
低信任度社会

778
00:21:09,000 --> 00:21:11,000
迁移到高信任度社会

779
00:21:11,000 --> 00:21:13,000
的一个 shock 之一吧

780
00:21:13,000 --> 00:21:14,000
对

781
00:21:14,000 --> 00:21:15,000
就好像

782
00:21:15,000 --> 00:21:17,000
比如说 Dash Camera

783
00:21:17,000 --> 00:21:17,000
嗯

784
00:21:17,000 --> 00:21:19,000
就是我们在 YouTube 上

785
00:21:19,000 --> 00:21:21,000
可以看到很多很多

786
00:21:21,000 --> 00:21:23,000
这个俄国或者是

787
00:21:23,000 --> 00:21:24,000
就是

788
00:21:24,000 --> 00:21:25,000
对对对

789
00:21:25,000 --> 00:21:26,000
他们那里超多的

790
00:21:26,000 --> 00:21:29,000
大量的车祸的镜头

791
00:21:29,000 --> 00:21:30,000
是由 Dash Camera

792
00:21:30,000 --> 00:21:31,000
录下来的

793
00:21:31,000 --> 00:21:31,000
我相信中国

794
00:21:31,000 --> 00:21:33,000
好像现在也是非常有情

795
00:21:33,000 --> 00:21:33,000
就是

796
00:21:33,000 --> 00:21:34,000
碰瓷党太多了

797
00:21:34,000 --> 00:21:35,000
给车上装一个

798
00:21:35,000 --> 00:21:36,000
叫什么行车记录仪

799
00:21:36,000 --> 00:21:37,000
对对对

800
00:21:37,000 --> 00:21:38,000
但是你会觉得在

801
00:21:38,000 --> 00:21:41,000
就是高信任度的社会的国家

802
00:21:41,000 --> 00:21:42,000
这种东西是很少见的

803
00:21:42,000 --> 00:21:44,000
就为什么要把行车的东西

804
00:21:44,000 --> 00:21:44,000
录下来呢

805
00:21:44,000 --> 00:21:46,000
是你怕别人撞了

806
00:21:46,000 --> 00:21:47,000
你不承认

807
00:21:47,000 --> 00:21:47,000
还是

808
00:21:47,000 --> 00:21:48,000
就怕

809
00:21:48,000 --> 00:21:49,000
就是

810
00:21:49,000 --> 00:21:49,000
就是什么

811
00:21:49,000 --> 00:21:51,000
讹诈

812
00:21:51,000 --> 00:21:51,000
对

813
00:21:51,000 --> 00:21:52,000
对

814
00:21:52,000 --> 00:21:54,000
因为国内特别是

815
00:21:54,000 --> 00:21:55,000
现在碰瓷党

816
00:21:55,000 --> 00:21:55,000
有比较多

817
00:21:55,000 --> 00:21:56,000
你的时候

818
00:21:56,000 --> 00:21:57,000
你撞了行车记录

819
00:21:57,000 --> 00:21:58,000
也能拍到非常很多搞笑

820
00:21:58,000 --> 00:22:00,000
而且恶心的事情

821
00:22:00,000 --> 00:22:01,000
对

822
00:22:01,000 --> 00:22:01,000
对

823
00:22:01,000 --> 00:22:03,000
有时候我看

824
00:22:03,000 --> 00:22:04,000
行车记录录录下来的东西

825
00:22:04,000 --> 00:22:05,000
我都会觉得非常

826
00:22:05,000 --> 00:22:06,000
Disturbing

827
00:22:06,000 --> 00:22:07,000
上次

828
00:22:07,000 --> 00:22:08,000
就我老婆他说

829
00:22:08,000 --> 00:22:09,000
就是在

830
00:22:09,000 --> 00:22:10,000
我们上次不是回国

831
00:22:10,000 --> 00:22:10,000
带了一段时间

832
00:22:10,000 --> 00:22:11,000
他说

833
00:22:11,000 --> 00:22:11,000
买一个

834
00:22:11,000 --> 00:22:12,000
要不带回加拿大去

835
00:22:12,000 --> 00:22:12,000
我说

836
00:22:12,000 --> 00:22:14,000
有必要吗

837
00:22:14,000 --> 00:22:15,000
加拿大人弄血管

838
00:22:15,000 --> 00:22:16,000
你到时候出了事情

839
00:22:16,000 --> 00:22:18,000
在找保险公司

840
00:22:18,000 --> 00:22:19,000
就按那个什么

841
00:22:19,000 --> 00:22:20,000
规则弄就好了

842
00:22:20,000 --> 00:22:21,000
根本没有这种虚拯

843
00:22:21,000 --> 00:22:21,000
而且从一个

844
00:22:21,000 --> 00:22:22,000
比较悲观

845
00:22:22,000 --> 00:22:23,000
但是从一个

846
00:22:23,000 --> 00:22:24,000
比较悲观的角度来看

847
00:22:24,000 --> 00:22:26,000
我觉得可能

848
00:22:26,000 --> 00:22:27,000
行车记录录役

849
00:22:27,000 --> 00:22:28,000
会渐渐普及开来的

850
00:22:28,000 --> 00:22:28,000
因为

851
00:22:28,000 --> 00:22:30,000
整个世界的趋势

852
00:22:30,000 --> 00:22:32,000
是在渐渐走向

853
00:22:32,000 --> 00:22:33,000
不信任吧

854
00:22:33,000 --> 00:22:34,000
你觉得呢

855
00:22:34,000 --> 00:22:36,000
不

856
00:22:36,000 --> 00:22:37,000
我的想法

857
00:22:37,000 --> 00:22:38,000
倒是更简单

858
00:22:38,000 --> 00:22:39,000
我觉得有行车记录役

859
00:22:39,000 --> 00:22:40,000
还有包括

860
00:22:40,000 --> 00:22:41,000
就是

861
00:22:41,000 --> 00:22:42,000
行车记录录录录机

862
00:22:42,000 --> 00:22:42,000
只有你在驾驶的时候

863
00:22:42,000 --> 00:22:44,000
才会开启

864
00:22:44,000 --> 00:22:45,000
对吧

865
00:22:45,000 --> 00:22:45,000
然后它有些

866
00:22:45,000 --> 00:22:47,000
就现在技术可以做到

867
00:22:47,000 --> 00:22:49,000
你是 24 小时全天监控

868
00:22:49,000 --> 00:22:52,000
我是觉得有的这个东西的话

869
00:22:52,000 --> 00:22:54,000
可以在某种程度上降低

870
00:22:54,000 --> 00:22:55,000
这个保险的费用

871
00:22:55,000 --> 00:23:00,000
就是如果保险公司强制要求你装上这个的话

872
00:23:00,000 --> 00:23:03,000
他可以说你装这个保险解办

873
00:23:03,000 --> 00:23:05,000
你不装这个保险加倍这样

874
00:23:05,000 --> 00:23:06,000
明白我意思吗

875
00:23:06,000 --> 00:23:07,000
就是有更多的

876
00:23:07,000 --> 00:23:08,000
就虽然说

877
00:23:08,000 --> 00:23:11,000
比如说我现在在的地方

878
00:23:11,000 --> 00:23:13,000
都属于这种整体社会成型都比较高的

879
00:23:13,000 --> 00:23:17,000
但是我觉得这只是通过传统来的一个事情来保证

880
00:23:17,000 --> 00:23:18,000
就好像你刚才讲

881
00:23:18,000 --> 00:23:21,000
这个社会状况是在变化的

882
00:23:21,000 --> 00:23:23,000
所以如果有一些叫做什么

883
00:23:23,000 --> 00:23:28,000
机制的有什么这种比较可靠的机制来确保这一点

884
00:23:28,000 --> 00:23:30,000
我觉得是更好的一个方案

885
00:23:30,000 --> 00:23:33,000
就是我更相信机器而不是人

886
00:23:33,000 --> 00:23:37,000
我相信 Lawrence 如果在场的话

887
00:23:37,000 --> 00:23:38,000
一定会跳出来说

888
00:23:38,000 --> 00:23:42,000
他是更希望能够社会能够朝着

889
00:23:42,000 --> 00:23:43,000
更相信人的方向发展

890
00:23:43,000 --> 00:23:45,000
因为人才是最重要的

891
00:23:45,000 --> 00:23:47,000
但是人是不 predictable

892
00:23:47,000 --> 00:23:49,000
对人是

893
00:23:49,000 --> 00:23:52,000
我记得前两天看了

894
00:23:52,000 --> 00:23:55,000
看一个笑话说

895
00:23:55,000 --> 00:23:56,000
什么是程序员

896
00:23:56,000 --> 00:23:58,000
程序员是这样一种职业

897
00:23:58,000 --> 00:24:01,000
就是你坐在桌子前面面对着一个盒子

898
00:24:01,000 --> 00:24:02,000
然后非常痛恨自己

899
00:24:02,000 --> 00:24:04,000
不能像一台机器那样思考

900
00:24:04,000 --> 00:24:08,000
对程序员实际上是一个非常非人的职业

901
00:24:08,000 --> 00:24:11,000
然后这一点可能有时候会引起我

902
00:24:11,000 --> 00:24:13,000
这个肉

903
00:24:13,000 --> 00:24:14,000
叫什么

904
00:24:14,000 --> 00:24:16,000
肉体的内核

905
00:24:16,000 --> 00:24:18,000
就是血肉的内核

906
00:24:18,000 --> 00:24:19,000
有时候也有点恐慌

907
00:24:19,000 --> 00:24:21,000
我觉得自己越来越不像一个人

908
00:24:21,000 --> 00:24:24,000
所以其实大部分时间

909
00:24:24,000 --> 00:24:25,000
所谓 debug

910
00:24:25,000 --> 00:24:26,000
debug

911
00:24:26,000 --> 00:24:27,000
其实 debug 不是程序里的 bug

912
00:24:27,000 --> 00:24:29,000
debug 是你脑子里面的 bug 的

913
00:24:29,000 --> 00:24:30,000
对

914
00:24:30,000 --> 00:24:33,000
就是找出自己到底又哪一步

915
00:24:33,000 --> 00:24:35,000
他妈的不像一个机器那样

916
00:24:35,000 --> 00:24:36,000
所以导致了这个

917
00:24:36,000 --> 00:24:39,000
让你感到愤怒的 bug

918
00:24:39,000 --> 00:24:42,000
所以写程序一直就是一个异化的过程

919
00:24:42,000 --> 00:24:42,000
对

920
00:24:42,000 --> 00:24:43,000
你异化你自己

921
00:24:43,000 --> 00:24:44,000
对

922
00:24:44,000 --> 00:24:45,000
你让自己

923
00:24:45,000 --> 00:24:48,000
摒出感情和情绪的影响

924
00:24:48,000 --> 00:24:50,000
好像变成一个

925
00:24:50,000 --> 00:24:51,000
对

926
00:24:51,000 --> 00:24:53,000
好像扯留天月了

927
00:24:53,000 --> 00:24:54,000
那行

928
00:24:54,000 --> 00:24:55,000
刚才讲到这里

929
00:24:55,000 --> 00:24:57,000
那今天那个一个主题是讲什么

930
00:24:57,000 --> 00:24:59,000
错误处理对吧

931
00:24:59,000 --> 00:25:00,000
对 其实对

932
00:25:00,000 --> 00:25:02,000
其实刚才我们说到 bug

933
00:25:02,000 --> 00:25:06,000
那 bug 会导致程序不能正常的运行

934
00:25:06,000 --> 00:25:08,000
或者导致一台机器不能正常的运行

935
00:25:08,000 --> 00:25:11,000
然后此时就涉及到一个

936
00:25:11,000 --> 00:25:17,000
就是 exception handling 的机制

937
00:25:17,000 --> 00:25:20,000
那其实这是我们这一期节目

938
00:25:20,000 --> 00:25:22,000
想要讨论的一个主题

939
00:25:22,000 --> 00:25:27,000
就是 exception 应该怎样被 handle

940
00:25:27,000 --> 00:25:29,000
先说这个之前

941
00:25:29,000 --> 00:25:30,000
我们可能要先解释一下

942
00:25:30,000 --> 00:25:32,000
就是如果这个开始

943
00:25:32,000 --> 00:25:34,000
大家是学这种更加低级的语言

944
00:25:34,000 --> 00:25:35,000
比如说 c 啊

945
00:25:35,000 --> 00:25:36,000
这种语言出来的时候

946
00:25:36,000 --> 00:25:38,000
是没有 exception 这个机制的

947
00:25:38,000 --> 00:25:42,000
c 其实是

948
00:25:42,000 --> 00:25:44,000
你可以通过 set jump long jump 来

949
00:25:44,000 --> 00:25:46,000
但你可以说它没有原声

950
00:25:46,000 --> 00:25:48,000
它没有在语言的层面上

951
00:25:48,000 --> 00:25:50,000
支持 exception 这个概念

952
00:25:50,000 --> 00:25:50,000
对

953
00:25:50,000 --> 00:25:56,000
然后就一般的错处理是通过这个返回错误代码的方式来实现的

954
00:25:56,000 --> 00:25:56,000
对

955
00:25:56,000 --> 00:26:00,000
然后最近有些新的语言

956
00:26:00,000 --> 00:26:03,000
反而是就抛弃了 exception

957
00:26:03,000 --> 00:26:05,000
然后回归了 c 的这一点

958
00:26:05,000 --> 00:26:08,000
比如说我现在最近一直在用的这个 go

959
00:26:08,000 --> 00:26:09,000
就是那个 google 那个语言

960
00:26:09,000 --> 00:26:10,000
对

961
00:26:10,000 --> 00:26:11,000
就它是没有 exception 的

962
00:26:11,000 --> 00:26:12,000
就所有的都是

963
00:26:12,000 --> 00:26:13,000
其实它有一种

964
00:26:13,000 --> 00:26:16,000
但是用的非常少吧

965
00:26:16,000 --> 00:26:18,000
就大部分试验是用那个

966
00:26:18,000 --> 00:26:20,000
就是 return error 这种方式来实现

967
00:26:20,000 --> 00:26:22,000
对

968
00:26:22,000 --> 00:26:26,000
我记得我在知乎上也回答过一个类似的问题

969
00:26:26,000 --> 00:26:29,000
就是有人问 swift 为什么要 exception

970
00:26:29,000 --> 00:26:30,000
然后我就

971
00:26:30,000 --> 00:26:34,000
我其实我也是一个觉得 exception 是一个比较

972
00:26:34,000 --> 00:26:38,000
不那么有点 overrated 这样一个功能

973
00:26:38,000 --> 00:26:42,000
所以你觉得这个 exception 的主要问题在哪里

974
00:26:43,000 --> 00:26:45,000
exception 有点像 go to

975
00:26:45,000 --> 00:26:46,000
要我说的话

976
00:26:46,000 --> 00:26:47,000
对

977
00:26:47,000 --> 00:26:49,000
就是很多人把 exception 当 go to 用

978
00:26:49,000 --> 00:26:51,000
就如果发生了 exception

979
00:26:51,000 --> 00:26:52,000
那你就

980
00:26:52,000 --> 00:26:54,000
有

981
00:26:54,000 --> 00:26:56,000
你此时你的程序会

982
00:26:56,000 --> 00:26:57,000
有时候会产生一种

983
00:26:57,000 --> 00:26:59,000
不可预知的走向

984
00:26:59,000 --> 00:27:01,000
对

985
00:27:01,000 --> 00:27:02,000
我觉得这是最主要的问题

986
00:27:02,000 --> 00:27:03,000
就是为什么

987
00:27:03,000 --> 00:27:08,000
就为什么我觉得 exception 不是特别好的原因

988
00:27:08,000 --> 00:27:09,000
也是因为就是

989
00:27:09,000 --> 00:27:12,000
就跟那个什么 go to is considered harmful 一样嘛

990
00:27:12,000 --> 00:27:16,000
就是 exception 它会导致你之前预设的那个

991
00:27:16,000 --> 00:27:19,000
叫什么 control floor 控制流会变得很乱

992
00:27:19,000 --> 00:27:19,000
对

993
00:27:19,000 --> 00:27:22,000
就是因为它一旦抛出 exception

994
00:27:22,000 --> 00:27:27,000
它整个的那个程序运行的逻辑就不再是按照那个线性的往下走

995
00:27:27,000 --> 00:27:29,000
而是跳到另外一个地方

996
00:27:29,000 --> 00:27:31,000
或者跳到调用层或者是更高层去了

997
00:27:31,000 --> 00:27:38,000
这样的话就会导致很多非常难以预料的那种场景的组合嘛

998
00:27:38,000 --> 00:27:38,000
对

999
00:27:38,000 --> 00:27:41,000
所以这样会导致很多问题

1000
00:27:41,000 --> 00:27:42,000
对

1001
00:27:42,000 --> 00:27:50,000
但是反过来 exception 的支持者也会说这是一种 necessary evil

1002
00:27:50,000 --> 00:27:51,000
或者它甚至就不是 evil

1003
00:27:51,000 --> 00:27:55,000
就是这是一种非常必要的功能

1004
00:27:55,000 --> 00:28:03,000
就是它并不是一种错误

1005
00:28:03,000 --> 00:28:05,000
它只是一种对于一种

1006
00:28:05,000 --> 00:28:12,000
就是现实生活里面毕竟会出现的错误的

1007
00:28:12,000 --> 00:28:14,000
不得不有的这么一种处理方式

1008
00:28:14,000 --> 00:28:25,000
而且他们会说用返回值或者是像 objective-c 这样的 error point 的方式非常的原始古老

1009
00:28:25,000 --> 00:28:27,000
而且会导致代码非常的涌长

1010
00:28:27,000 --> 00:28:33,000
对这也是确实是有我写最近写的 go 也比较多遇到的一个问题

1011
00:28:33,000 --> 00:28:38,000
就是之前 Python 是支持这个 exception 机制的

1012
00:28:38,000 --> 00:28:40,000
很多错误都通过那种流走

1013
00:28:40,000 --> 00:28:42,000
就是正常的逻辑流就正常走

1014
00:28:42,000 --> 00:28:45,000
然后 exception 就错误处理是单独的一个方式走

1015
00:28:45,000 --> 00:28:48,000
而且在 Python 里面这甚至是一种 pattern

1016
00:28:48,000 --> 00:28:54,000
就是 Python 推荐你用异常处理方式来当做 logic flow control

1017
00:28:54,000 --> 00:29:01,000
对对就是它是把这个就是正常情况下的一个流是缩的比较简

1018
00:29:01,000 --> 00:29:03,000
因为你不需要做很多这种错误处理

1019
00:29:03,000 --> 00:29:06,000
就一旦出错你就直接抛出一场就跳到另外一层去处理

1020
00:29:06,000 --> 00:29:10,000
但是这会导就会你会看起来那个代码很简单漂亮

1021
00:29:10,000 --> 00:29:12,000
那同样的要完成同样的事情

1022
00:29:12,000 --> 00:29:16,000
然后在 go 里面写就发现你每次掉一个函数

1023
00:29:16,000 --> 00:29:20,000
都要检查一个 if error 不等于这个 neal 怎么样

1024
00:29:20,000 --> 00:29:21,000
对吧

1025
00:29:21,000 --> 00:29:26,000
对其实会就叫常话叫什么 boiler play

1026
00:29:26,000 --> 00:29:26,000
对对对

1027
00:29:26,000 --> 00:29:29,000
会出现大量的这种其实没什么用

1028
00:29:29,000 --> 00:29:33,000
但是又明明有意义的语句在里面

1029
00:29:33,000 --> 00:29:35,000
对所以这牵涉的是一个还是刚才讲

1030
00:29:35,000 --> 00:29:38,000
这是一个怎么认知的问题

1031
00:29:38,000 --> 00:29:42,000
就是说比如像刚才我们讲 Python 那种类型

1032
00:29:42,000 --> 00:29:44,000
就为代表的也不只是 Python 一种

1033
00:29:44,000 --> 00:29:46,000
其实大多数支持 exception 的语言

1034
00:29:46,000 --> 00:29:48,000
都是推荐你这种方式的

1035
00:29:48,000 --> 00:29:50,000
就是正常的 control flow

1036
00:29:50,000 --> 00:29:51,000
你用正常的逻辑思维去想

1037
00:29:51,000 --> 00:29:54,000
然后异常的你就走 exception handling 就好了

1038
00:29:54,000 --> 00:29:57,000
然后像 go 和 see 这一派就是说

1039
00:29:57,000 --> 00:29:58,000
那你肯定是

1040
00:29:58,000 --> 00:30:03,000
错误应该是你的逻辑的一部分

1041
00:30:03,000 --> 00:30:05,000
就错误处理应该是你逻辑的一部分

1042
00:30:05,000 --> 00:30:07,000
因为只有这样才可能保证

1043
00:30:07,000 --> 00:30:09,000
出现任何情况

1044
00:30:09,000 --> 00:30:11,000
你都是在可控的一个范围内

1045
00:30:11,000 --> 00:30:11,000
对吧

1046
00:30:11,000 --> 00:30:15,000
所以我觉得他们就是代表了两种完全不一样的思维

1047
00:30:15,000 --> 00:30:18,000
他看当然就是说你习惯有哪个

1048
00:30:18,000 --> 00:30:20,000
就看你自己觉得了

1049
00:30:20,000 --> 00:30:21,000
但是我觉得吧

1050
00:30:21,000 --> 00:30:22,000
现在一般是

1051
00:30:22,000 --> 00:30:23,000
我现在看法一般是这样子

1052
00:30:23,000 --> 00:30:26,000
就是如果你写的这个程序是需要

1053
00:30:26,000 --> 00:30:29,000
非常 robust

1054
00:30:29,000 --> 00:30:31,000
非常就叫长时间不间断

1055
00:30:31,000 --> 00:30:32,000
然后不出错

1056
00:30:32,000 --> 00:30:33,000
不 crash 的工作的话

1057
00:30:33,000 --> 00:30:36,000
就不出现那个 blue screen of death

1058
00:30:36,000 --> 00:30:37,000
然后 spinning beach ball of death

1059
00:30:37,000 --> 00:30:38,000
这类的东西

1060
00:30:38,000 --> 00:30:41,000
你还是可能要采用

1061
00:30:41,000 --> 00:30:42,000
刚才像 ser go

1062
00:30:42,000 --> 00:30:43,000
我也代表这种微信

1063
00:30:43,000 --> 00:30:45,000
就是把错误处理

1064
00:30:45,000 --> 00:30:46,000
作为你的程序

1065
00:30:46,000 --> 00:30:47,000
要考虑的每一部分

1066
00:30:47,000 --> 00:30:49,000
这样会导致这个代码很拥长

1067
00:30:49,000 --> 00:30:50,000
很麻烦

1068
00:30:50,000 --> 00:30:52,000
但是它确实会保证

1069
00:30:52,000 --> 00:30:54,000
你的每一种情况

1070
00:30:54,000 --> 00:30:56,000
你的程序都是在一个可以预测的

1071
00:30:56,000 --> 00:30:59,000
所以可控的那个状态内的

1072
00:30:59,000 --> 00:31:00,000
我觉得

1073
00:31:00,000 --> 00:31:03,000
对 但其实你说的就是

1074
00:31:03,000 --> 00:31:06,000
但其实这是一种不可能的状态

1075
00:31:06,000 --> 00:31:09,000
就是在几乎在所有的

1076
00:31:09,000 --> 00:31:11,000
编程语言里面

1077
00:31:11,000 --> 00:31:13,000
你都会遇到

1078
00:31:13,000 --> 00:31:15,000
在几乎在所有比较现代的

1079
00:31:15,000 --> 00:31:16,000
编程语言里面

1080
00:31:16,000 --> 00:31:18,000
你都会遇到一种区分

1081
00:31:18,000 --> 00:31:21,000
就是错误和异常的区分

1082
00:31:21,000 --> 00:31:24,000
就是有一种异常是你可以控制的

1083
00:31:24,000 --> 00:31:24,000
你可以预料到的

1084
00:31:24,000 --> 00:31:25,000
比如说你去

1085
00:31:25,000 --> 00:31:27,000
你要打开一个文件

1086
00:31:27,000 --> 00:31:28,000
然后你发现这个文件不存在

1087
00:31:28,000 --> 00:31:30,000
这是你可以预料到的

1088
00:31:30,000 --> 00:31:30,000
对

1089
00:31:30,000 --> 00:31:32,000
可是有些异常是你预料不到的

1090
00:31:32,000 --> 00:31:33,000
就是比如说像在

1091
00:31:33,000 --> 00:31:35,000
像在 Java 里面

1092
00:31:35,000 --> 00:31:36,000
有所谓

1093
00:31:36,000 --> 00:31:38,000
就是我觉得是

1094
00:31:38,000 --> 00:31:40,000
这一直是我觉得 Java 非常 R 的一个特性

1095
00:31:40,000 --> 00:31:42,000
就是有一个所谓 check 的 exception

1096
00:31:42,000 --> 00:31:44,000
你在写一个方法的时候

1097
00:31:44,000 --> 00:31:46,000
你要告诉方法的调用者

1098
00:31:46,000 --> 00:31:48,000
这个方法可能抛出什么样的 exception

1099
00:31:48,000 --> 00:31:51,000
这其实是一个看起来很美

1100
00:31:51,000 --> 00:31:54,000
但是用起来非常不实际的这么一个功能

1101
00:31:54,000 --> 00:31:58,000
就是在许多时候你是预料不到

1102
00:31:58,000 --> 00:32:00,000
或者是作为一个会出错误的人

1103
00:32:00,000 --> 00:32:04,000
你是没有办法完全的便利

1104
00:32:04,000 --> 00:32:07,000
这一个方法可能出现的 exception 的情况

1105
00:32:07,000 --> 00:32:08,000
对啊

1106
00:32:08,000 --> 00:32:10,000
其实也是导致了非常多的 antipattern

1107
00:32:10,000 --> 00:32:12,000
这个我觉得是

1108
00:32:12,000 --> 00:32:14,000
就为什么会是一个问题呢

1109
00:32:14,000 --> 00:32:15,000
如果你用这种

1110
00:32:15,000 --> 00:32:17,000
就是返回错误的方法来处理

1111
00:32:17,000 --> 00:32:19,000
为什么不能解决这个问题呢

1112
00:32:19,000 --> 00:32:19,000
对

1113
00:32:19,000 --> 00:32:21,000
你用返回错误的

1114
00:32:21,000 --> 00:32:24,000
就是我觉得用错误返回值的语言

1115
00:32:24,000 --> 00:32:29,000
其实是采用那种更为 pragmatically 的理念

1116
00:32:29,000 --> 00:32:32,000
就是我处理所有我能预见到的错误

1117
00:32:32,000 --> 00:32:34,000
如果这个错误我没有预见到

1118
00:32:34,000 --> 00:32:35,000
那我就让它 crash 好了

1119
00:32:35,000 --> 00:32:36,000
对啊

1120
00:32:36,000 --> 00:32:39,000
但是在很多

1121
00:32:39,000 --> 00:32:40,000
或者也不是很多

1122
00:32:40,000 --> 00:32:42,000
就是在不分编程语言里面

1123
00:32:42,000 --> 00:32:45,000
人们会觉得我有 exception control

1124
00:32:45,000 --> 00:32:46,000
我有这种机制在

1125
00:32:46,000 --> 00:32:50,000
那我就会尽可能的让我的程序不要 crash

1126
00:32:50,000 --> 00:32:53,000
我觉得很多 Java 程序都是这样

1127
00:32:53,000 --> 00:32:56,000
我想想

1128
00:32:56,000 --> 00:32:58,000
就起码我在最近在写 go 的时候

1129
00:32:58,000 --> 00:33:03,000
没有遇到说会有某一个错误

1130
00:33:03,000 --> 00:33:07,000
没有处理到导致 crash 的这种状况发生

1131
00:33:07,000 --> 00:33:08,000
对

1132
00:33:08,000 --> 00:33:10,000
因为这种错误一旦出现的话

1133
00:33:10,000 --> 00:33:13,000
基本上我觉得 Go 程序是处理不了

1134
00:33:13,000 --> 00:33:13,000
handle 不了的

1135
00:33:13,000 --> 00:33:15,000
比如说你运行时把你一块内存

1136
00:33:15,000 --> 00:33:19,000
你的这个程序本身要怎么 handle

1137
00:33:19,000 --> 00:33:21,000
但如果遇到这种情况下

1138
00:33:21,000 --> 00:33:23,000
你用 exception handle 也是没有办法的

1139
00:33:23,000 --> 00:33:24,000
就比如说你加了

1140
00:33:24,000 --> 00:33:26,000
就是加了虚拟机内存出了问题

1141
00:33:26,000 --> 00:33:28,000
你上面能怎么办

1142
00:33:28,000 --> 00:33:29,000
也是没有任何办法

1143
00:33:29,000 --> 00:33:32,000
但是 somehow 有时候我会有一种感觉

1144
00:33:32,000 --> 00:33:34,000
就是我又要黑杂号程序

1145
00:33:34,000 --> 00:33:36,000
这个不太好

1146
00:33:36,000 --> 00:33:38,000
在第一期里面就树立这么多敌人

1147
00:33:38,000 --> 00:33:38,000
算了

1148
00:33:38,000 --> 00:33:42,000
就是在某些比较广为人知的程序里面

1149
00:33:42,000 --> 00:33:44,000
程序员会产生这样的错觉

1150
00:33:44,000 --> 00:33:45,000
就是我有一场处理机制

1151
00:33:45,000 --> 00:33:47,000
那我几乎是可以处理一切异常的

1152
00:33:47,000 --> 00:33:49,000
但其实并不是这样

1153
00:33:49,000 --> 00:33:52,000
所以其实我觉得吧

1154
00:33:52,000 --> 00:33:53,000
就是如果要实现那种

1155
00:33:53,000 --> 00:33:56,000
所有的错误都被预测到的

1156
00:33:56,000 --> 00:33:59,000
所有的错误都被处理过

1157
00:33:59,000 --> 00:34:00,000
你可能是需要一些

1158
00:34:00,000 --> 00:34:03,000
更加 formal 的一些机制

1159
00:34:03,000 --> 00:34:04,000
比如说你要去

1160
00:34:04,000 --> 00:34:04,000
就去

1161
00:34:04,000 --> 00:34:05,000
叫什么

1162
00:34:05,000 --> 00:34:07,000
证明这个程序是不错

1163
00:34:07,000 --> 00:34:09,000
但是这种情况在现实中是

1164
00:34:09,000 --> 00:34:11,000
基本上是不可能实现的

1165
00:34:11,000 --> 00:34:13,000
只有在一些非常受限的

1166
00:34:13,000 --> 00:34:14,000
学术性的环境里面才可以

1167
00:34:14,000 --> 00:34:16,000
或者说

1168
00:34:16,000 --> 00:34:18,000
或者说你可以觉得

1169
00:34:18,000 --> 00:34:18,000
你可以说

1170
00:34:18,000 --> 00:34:22,000
我程序本身并不提供这样的机制

1171
00:34:22,000 --> 00:34:25,000
但是我依赖于系统所提供的机制

1172
00:34:25,000 --> 00:34:26,000
就是就像你说的

1173
00:34:26,000 --> 00:34:26,000
你希望一个程序

1174
00:34:26,000 --> 00:34:28,000
它稳定的运行

1175
00:34:28,000 --> 00:34:31,000
那么尽量可能的不出错

1176
00:34:31,000 --> 00:34:32,000
不 crash

1177
00:34:32,000 --> 00:34:33,000
可是它一旦 crash 它怎么办呢

1178
00:34:33,000 --> 00:34:34,000
你可以说

1179
00:34:34,000 --> 00:34:37,000
那我把它做成一个 service

1180
00:34:37,000 --> 00:34:37,000
然后

1181
00:34:37,000 --> 00:34:40,000
那么我们都知道

1182
00:34:40,000 --> 00:34:41,000
Linux 或者是

1183
00:34:41,000 --> 00:34:42,000
Windows 下面

1184
00:34:42,000 --> 00:34:46,000
对于一个 service 的控制里面

1185
00:34:46,000 --> 00:34:47,000
会有这样一项

1186
00:34:47,000 --> 00:34:48,000
就是如果这个 servicecrash 了

1187
00:34:48,000 --> 00:34:49,000
怎么办

1188
00:34:49,000 --> 00:34:51,000
那 Windows 下面

1189
00:34:51,000 --> 00:34:52,000
比如说可以选说

1190
00:34:52,000 --> 00:34:54,000
尝试重新启动它

1191
00:34:54,000 --> 00:34:57,000
并且如果尝试重新启动三次

1192
00:34:57,000 --> 00:34:58,000
它仍旧 crash 的话

1193
00:34:58,000 --> 00:34:59,000
那我就不再启动它了

1194
00:34:59,000 --> 00:35:00,000
那其实这也是一种

1195
00:35:00,000 --> 00:35:02,000
就是异常处理机制

1196
00:35:02,000 --> 00:35:05,000
那 Linux 其实也是有类似的

1197
00:35:05,000 --> 00:35:07,000
这样一个机制在里面

1198
00:35:07,000 --> 00:35:10,000
这里就牵涉到 Linux

1199
00:35:10,000 --> 00:35:11,000
他们也常见的

1200
00:35:11,000 --> 00:35:12,000
那个叫做

1201
00:35:12,000 --> 00:35:13,000
你说 service 吗

1202
00:35:13,000 --> 00:35:14,000
他们就可能

1203
00:35:14,000 --> 00:35:15,000
Demon 的

1204
00:35:15,000 --> 00:35:15,000
对

1205
00:35:15,000 --> 00:35:16,000
Demon 的概念

1206
00:35:16,000 --> 00:35:17,000
然后 Demon 的话

1207
00:35:17,000 --> 00:35:18,000
就会有相关的

1208
00:35:18,000 --> 00:35:22,000
像这个 supervising 的一个机制在里面

1209
00:35:22,000 --> 00:35:23,000
对

1210
00:35:23,000 --> 00:35:27,000
你有没有最近关注那个 systemd 这个话题

1211
00:35:27,000 --> 00:35:28,000
看了好久

1212
00:35:28,000 --> 00:35:29,000
对啊

1213
00:35:29,000 --> 00:35:31,000
我觉得挺扯的

1214
00:35:31,000 --> 00:35:32,000
对

1215
00:35:32,000 --> 00:35:34,000
你对这个事情是态度是怎么样子

1216
00:35:34,000 --> 00:35:36,000
我觉得 system

1217
00:35:36,000 --> 00:35:38,000
我也是觉得 systemd 有一点激进了

1218
00:35:38,000 --> 00:35:38,000
但是

1219
00:35:38,000 --> 00:35:42,000
怎么说呢

1220
00:35:42,000 --> 00:35:44,000
我觉得这一天迟早会来

1221
00:35:44,000 --> 00:35:48,000
就你觉得它激进的地方在哪里呢

1222
00:35:48,000 --> 00:35:50,000
就是它试图把一些

1223
00:35:50,000 --> 00:35:54,000
它试图把所有的 Demon 的启动机制

1224
00:35:54,000 --> 00:35:56,000
乃至于系统的启动机制

1225
00:35:56,000 --> 00:35:57,000
军医化

1226
00:35:57,000 --> 00:35:58,000
模块化

1227
00:35:58,000 --> 00:35:59,000
然后

1228
00:35:59,000 --> 00:36:03,000
就摒弃了很多传统

1229
00:36:03,000 --> 00:36:06,000
就是我不知道你有没有读那篇文章

1230
00:36:06,000 --> 00:36:08,000
就是 systemd 的主要维护者之一

1231
00:36:08,000 --> 00:36:09,000
他叫什么

1232
00:36:09,000 --> 00:36:09,000
忘了

1233
00:36:09,000 --> 00:36:10,000
他好像是个德国人

1234
00:36:10,000 --> 00:36:13,000
他在 blog 上发了一篇文章说

1235
00:36:13,000 --> 00:36:15,000
因为他开发 systemd

1236
00:36:15,000 --> 00:36:17,000
已经受到了很多死亡威胁

1237
00:36:17,000 --> 00:36:20,000
甚至是有些人在写很酸的文章

1238
00:36:20,000 --> 00:36:23,000
在暗示要对他产生人身攻击

1239
00:36:23,000 --> 00:36:26,000
或者是有人写了歌来嘲讽他

1240
00:36:26,000 --> 00:36:28,000
恨不得他去死之类的

1241
00:36:28,000 --> 00:36:29,000
就是你会发现

1242
00:36:29,000 --> 00:36:31,000
这种问题居然可以导致

1243
00:36:31,000 --> 00:36:34,000
就是非常 personal 的这么一个层面

1244
00:36:34,000 --> 00:36:35,000
对

1245
00:36:35,000 --> 00:36:37,000
这就扯远了

1246
00:36:37,000 --> 00:36:38,000
但回到 systemd

1247
00:36:38,000 --> 00:36:39,000
这个故事的教训是什么

1248
00:36:39,000 --> 00:36:40,000
不要激动一个程序员

1249
00:36:40,000 --> 00:36:41,000
对吧

1250
00:36:41,000 --> 00:36:43,000
不要激动一群程序员

1251
00:36:43,000 --> 00:36:45,000
不要像唐吉克德一样去

1252
00:36:45,000 --> 00:36:46,000
对

1253
00:36:46,000 --> 00:36:48,000
但反过来

1254
00:36:48,000 --> 00:36:51,000
你可以说

1255
00:36:51,000 --> 00:36:54,000
就是因为会有这样的反应

1256
00:36:54,000 --> 00:36:57,000
体现出了 systemd

1257
00:36:57,000 --> 00:37:00,000
到底是一个多么激进的项目

1258
00:37:00,000 --> 00:37:01,000
对

1259
00:37:01,000 --> 00:37:03,000
我觉得可能我对他的一个

1260
00:37:03,000 --> 00:37:03,000
就

1261
00:37:03,000 --> 00:37:06,000
现在我其实是没有太明确的

1262
00:37:06,000 --> 00:37:09,000
反对或者是支持他的一个观点

1263
00:37:09,000 --> 00:37:12,000
但是我觉得有一些是值得商榷的

1264
00:37:12,000 --> 00:37:13,000
比如说他把那个

1265
00:37:13,000 --> 00:37:17,000
就是 pide 的那块做的那么肿

1266
00:37:17,000 --> 00:37:18,000
真的好吗

1267
00:37:18,000 --> 00:37:19,000
对

1268
00:37:19,000 --> 00:37:21,000
就是此时你会有一个想法

1269
00:37:21,000 --> 00:37:24,000
就是 Linux 并不只是跑在你的笔记本

1270
00:37:24,000 --> 00:37:26,000
或者是跑在大型机上的

1271
00:37:26,000 --> 00:37:27,000
Linux 很多 Linux 是跑在

1272
00:37:27,000 --> 00:37:28,000
比如说像

1273
00:37:28,000 --> 00:37:29,000
像 Beagle

1274
00:37:29,000 --> 00:37:30,000
或者像

1275
00:37:30,000 --> 00:37:30,000
像

1276
00:37:30,000 --> 00:37:32,000
路由器上面

1277
00:37:32,000 --> 00:37:32,000
对

1278
00:37:32,000 --> 00:37:33,000
Raspary

1279
00:37:33,000 --> 00:37:33,000
对

1280
00:37:33,000 --> 00:37:35,000
或者路由器上面的

1281
00:37:35,000 --> 00:37:35,000
对

1282
00:37:35,000 --> 00:37:38,000
那个地方的 Linux 真的要换用 systemd 吗

1283
00:37:38,000 --> 00:37:39,000
有意义吗

1284
00:37:39,000 --> 00:37:40,000
好像也没有

1285
00:37:40,000 --> 00:37:40,000
对

1286
00:37:40,000 --> 00:37:42,000
现在我就觉得他

1287
00:37:42,000 --> 00:37:44,000
但他自己的说法是说

1288
00:37:44,000 --> 00:37:45,000
说我这个 systemd

1289
00:37:45,000 --> 00:37:47,000
这个是一大块东西

1290
00:37:47,000 --> 00:37:50,000
你可以挑其中的一小部分来用

1291
00:37:50,000 --> 00:37:52,000
你不是要全部都用上

1292
00:37:52,000 --> 00:37:53,000
这显得很臃肿吗

1293
00:37:53,000 --> 00:37:54,000
你可以只用一小坨

1294
00:37:54,000 --> 00:37:56,000
但是我不知道

1295
00:37:56,000 --> 00:37:58,000
就他那种组织的机制

1296
00:37:58,000 --> 00:37:59,000
还有那种思考的方式

1297
00:37:59,000 --> 00:38:01,000
我觉得很容易会导致一种

1298
00:38:01,000 --> 00:38:05,000
就是 unnecessary complexity 在里面

1299
00:38:05,000 --> 00:38:06,000
对

1300
00:38:06,000 --> 00:38:07,000
他会为了模

1301
00:38:07,000 --> 00:38:08,000
为了

1302
00:38:08,000 --> 00:38:11,000
为了有这么一种比较均一的模式

1303
00:38:11,000 --> 00:38:13,000
或者说为了有这样

1304
00:38:13,000 --> 00:38:15,000
为了设计而去牺牲功能

1305
00:38:15,000 --> 00:38:16,000
对

1306
00:38:16,000 --> 00:38:16,000
然后

1307
00:38:16,000 --> 00:38:20,000
就我也有看其他的一些

1308
00:38:20,000 --> 00:38:21,000
就是替代的那种

1309
00:38:21,000 --> 00:38:24,000
就是 PADE 的那个程序

1310
00:38:24,000 --> 00:38:26,000
比如说像 DJB

1311
00:38:26,000 --> 00:38:28,000
他们那些比较轻量级简化的

1312
00:38:28,000 --> 00:38:30,000
甚至就总共就只有

1313
00:38:30,000 --> 00:38:32,000
可能不到 100 行 C 代码的

1314
00:38:32,000 --> 00:38:34,000
一些这种 init 程序

1315
00:38:34,000 --> 00:38:35,000
我觉得是更好的

1316
00:38:35,000 --> 00:38:37,000
因为如果代码够少的话

1317
00:38:37,000 --> 00:38:39,000
你可以就是穷举掉

1318
00:38:39,000 --> 00:38:41,000
他所有可能出错的地方

1319
00:38:41,000 --> 00:38:42,000
因为这个 PADE

1320
00:38:42,000 --> 00:38:44,000
是一个非常重要的程序

1321
00:38:44,000 --> 00:38:44,000
如果他 crash

1322
00:38:44,000 --> 00:38:46,000
你真的就只能 carnal panic

1323
00:38:46,000 --> 00:38:48,000
但是

1324
00:38:48,000 --> 00:38:50,000
如果你这个东西

1325
00:38:50,000 --> 00:38:51,000
就代码量复杂了

1326
00:38:51,000 --> 00:38:53,000
然后就刚才讲

1327
00:38:53,000 --> 00:38:55,000
你如果能出错的地方多了

1328
00:38:55,000 --> 00:38:56,000
那肯定是不可避免的

1329
00:38:56,000 --> 00:38:57,000
有些出错的地方

1330
00:38:57,000 --> 00:38:58,000
然后这个出错

1331
00:38:58,000 --> 00:38:59,000
会导致整个系统崩掉

1332
00:38:59,000 --> 00:39:00,000
所以

1333
00:39:00,000 --> 00:39:03,000
如果有一个这种更加简洁的

1334
00:39:03,000 --> 00:39:05,000
或甚至几十行

1335
00:39:05,000 --> 00:39:06,000
不到 100 行代码的

1336
00:39:06,000 --> 00:39:07,000
能够实现

1337
00:39:07,000 --> 00:39:08,000
那你真的是可以用

1338
00:39:08,000 --> 00:39:10,000
甚至你可以用这种机器

1339
00:39:10,000 --> 00:39:13,000
就是证明的方法

1340
00:39:13,000 --> 00:39:14,000
去证明这个程序

1341
00:39:14,000 --> 00:39:15,000
可能会在哪些地方出错

1342
00:39:15,000 --> 00:39:17,000
然后那些可能出错的地方

1343
00:39:17,000 --> 00:39:18,000
你都已经顾及到了

1344
00:39:18,000 --> 00:39:18,000
对吧

1345
00:39:18,000 --> 00:39:19,000
对

1346
00:39:19,000 --> 00:39:20,000
你可以实现一个

1347
00:39:20,000 --> 00:39:22,000
就是 100% reliable

1348
00:39:22,000 --> 00:39:23,000
就只要你的硬件

1349
00:39:23,000 --> 00:39:23,000
是不出错的

1350
00:39:23,000 --> 00:39:25,000
这个软件可以保证

1351
00:39:25,000 --> 00:39:26,000
百分之百

1352
00:39:26,000 --> 00:39:27,000
这个正常运行的

1353
00:39:27,000 --> 00:39:29,000
但是如果你是太复杂的话

1354
00:39:29,000 --> 00:39:30,000
你就做不到这一点

1355
00:39:30,000 --> 00:39:31,000
这点我是觉得

1356
00:39:31,000 --> 00:39:33,000
是有一点点问题的

1357
00:39:33,000 --> 00:39:34,000
对

1358
00:39:34,000 --> 00:39:36,000
而且就是 System-D 的设计

1359
00:39:36,000 --> 00:39:39,000
与 Unix 的哲学

1360
00:39:39,000 --> 00:39:41,000
就是 Do one thing and do it well

1361
00:39:41,000 --> 00:39:44,000
有点相背道而驰

1362
00:39:44,000 --> 00:39:45,000
对

1363
00:39:45,000 --> 00:39:45,000
就是他

1364
00:39:45,000 --> 00:39:47,000
他试图实现很多事情

1365
00:39:47,000 --> 00:39:49,000
然后把很多功能

1366
00:39:49,000 --> 00:39:50,000
集中在一个

1367
00:39:50,000 --> 00:39:52,000
一个单一的程序里面

1368
00:39:52,000 --> 00:39:53,000
当然他 System-D

1369
00:39:53,000 --> 00:39:54,000
也不是一个单一的程序

1370
00:39:54,000 --> 00:39:56,000
但是他试图以这样一种

1371
00:39:56,000 --> 00:39:57,000
大一统的架构

1372
00:39:57,000 --> 00:39:59,000
去解决一些

1373
00:39:59,000 --> 00:40:02,000
源头和本质

1374
00:40:02,000 --> 00:40:04,000
都非常异构的问题

1375
00:40:04,000 --> 00:40:04,000
对

1376
00:40:04,000 --> 00:40:06,000
可能我觉得很多人

1377
00:40:06,000 --> 00:40:08,000
对 System-D 的反感

1378
00:40:08,000 --> 00:40:09,000
倒不是说

1379
00:40:09,000 --> 00:40:11,000
但可能他就是不喜欢

1380
00:40:11,000 --> 00:40:12,000
这种设计哲学

1381
00:40:12,000 --> 00:40:13,000
是一个最主要的因素

1382
00:40:13,000 --> 00:40:15,000
但是可能更多的一个

1383
00:40:15,000 --> 00:40:15,000
是因为

1384
00:40:15,000 --> 00:40:20,000
他用某种政治的方法

1385
00:40:20,000 --> 00:40:22,000
在主流的发行版中

1386
00:40:22,000 --> 00:40:25,000
得到了一个正统的地位

1387
00:40:25,000 --> 00:40:26,000
对

1388
00:40:26,000 --> 00:40:29,000
Debian 好像也是即将支持

1389
00:40:29,000 --> 00:40:29,000
就 8

1390
00:40:29,000 --> 00:40:31,000
Debian 8 里面

1391
00:40:31,000 --> 00:40:33,000
他就会换成 System-D

1392
00:40:33,000 --> 00:40:33,000
之前是在 Lunch

1393
00:40:33,000 --> 00:40:35,000
作为一个

1394
00:40:35,000 --> 00:40:37,000
Debian 用户

1395
00:40:37,000 --> 00:40:41,000
我觉得还是有点不爽的

1396
00:40:41,000 --> 00:40:44,000
当然其实我觉得

1397
00:40:44,000 --> 00:40:46,000
以我的水平来说

1398
00:40:46,000 --> 00:40:48,000
这种改变可能

1399
00:40:48,000 --> 00:40:48,000
对于我的影响

1400
00:40:48,000 --> 00:40:49,000
是背乎其位的

1401
00:40:49,000 --> 00:40:50,000
那个其实

1402
00:40:50,000 --> 00:40:52,000
也比较简单

1403
00:40:52,000 --> 00:40:53,000
因为我用的长盒

1404
00:40:53,000 --> 00:40:54,000
也比较简单

1405
00:40:54,000 --> 00:40:55,000
但一个主要的问题就是

1406
00:40:55,000 --> 00:40:56,000
它的那个 Upstar 的

1407
00:40:56,000 --> 00:40:57,000
那个配置

1408
00:40:57,000 --> 00:40:59,000
不是一个完全的

1409
00:40:59,000 --> 00:41:00,000
数据化的东西

1410
00:41:00,000 --> 00:41:01,000
它明明有包含

1411
00:41:01,000 --> 00:41:02,000
可以调用这个

1412
00:41:02,000 --> 00:41:03,000
Share 脚本嘛

1413
00:41:03,000 --> 00:41:04,000
然后你一旦

1414
00:41:04,000 --> 00:41:07,000
其实也是一个安全因素

1415
00:41:07,000 --> 00:41:07,000
对

1416
00:41:07,000 --> 00:41:08,000
不光是这个问题

1417
00:41:08,000 --> 00:41:08,000
就一旦你调用

1418
00:41:08,000 --> 00:41:09,000
那个 Share 脚本之后

1419
00:41:09,000 --> 00:41:10,000
你这个整个东西

1420
00:41:10,000 --> 00:41:11,000
就没有办法

1421
00:41:11,000 --> 00:41:13,000
自动化来去分析

1422
00:41:13,000 --> 00:41:14,000
或者是处理了嘛

1423
00:41:14,000 --> 00:41:15,000
对

1424
00:41:15,000 --> 00:41:17,000
它就打开了一扇

1425
00:41:17,000 --> 00:41:18,000
打开了一个

1426
00:41:18,000 --> 00:41:19,000
Panela 盒子

1427
00:41:19,000 --> 00:41:20,000
然后它就不再可控

1428
00:41:20,000 --> 00:41:20,000
对

1429
00:41:20,000 --> 00:41:22,000
就变成一个纯粹的

1430
00:41:22,000 --> 00:41:23,000
叫做 Descriptive

1431
00:41:23,000 --> 00:41:25,000
描述性的配置文件

1432
00:41:25,000 --> 00:41:26,000
变成一个

1433
00:41:26,000 --> 00:41:27,000
Imperative

1434
00:41:27,000 --> 00:41:28,000
叫什么

1435
00:41:28,000 --> 00:41:31,000
叫可执行的配置文件

1436
00:41:31,000 --> 00:41:31,000
这个变成就

1437
00:41:31,000 --> 00:41:33,000
比较奇怪了

1438
00:41:33,000 --> 00:41:34,000
而且你想

1439
00:41:34,000 --> 00:41:34,000
最近不是

1440
00:41:34,000 --> 00:41:35,000
又出了那个 Share

1441
00:41:35,000 --> 00:41:36,000
等等

1442
00:41:36,000 --> 00:41:38,000
反过来了吧

1443
00:41:38,000 --> 00:41:39,000
为什么我记得

1444
00:41:39,000 --> 00:41:40,000
Systemd 里面的

1445
00:41:40,000 --> 00:41:41,000
Demon 的描述文件

1446
00:41:41,000 --> 00:41:43,000
是 Descriptive

1447
00:41:43,000 --> 00:41:43,000
是啊

1448
00:41:43,000 --> 00:41:45,000
Systemd 是 Descriptive

1449
00:41:45,000 --> 00:41:46,000
Upstart 的不是

1450
00:41:46,000 --> 00:41:47,000
OK

1451
00:41:47,000 --> 00:41:48,000
Upstart 上面支持

1452
00:41:48,000 --> 00:41:49,000
你可以嵌入这个

1453
00:41:49,000 --> 00:41:50,000
比如说你的 prestart

1454
00:41:50,000 --> 00:41:52,000
然后那么 poststart

1455
00:41:52,000 --> 00:41:52,000
之类的

1456
00:41:52,000 --> 00:41:54,000
你可以加入一些钩子

1457
00:41:54,000 --> 00:41:54,000
然后那钩子

1458
00:41:54,000 --> 00:41:55,000
可以直接调用

1459
00:41:55,000 --> 00:41:57,000
你可以直接在那个

1460
00:41:57,000 --> 00:41:57,000
配置文本里面

1461
00:41:57,000 --> 00:41:59,000
嵌入这个脚本的

1462
00:41:59,000 --> 00:42:01,000
执行脚本的

1463
00:42:01,000 --> 00:42:02,000
那就会导致

1464
00:42:02,000 --> 00:42:04,000
各种各样的麻烦

1465
00:42:04,000 --> 00:42:05,000
就完全没有

1466
00:42:05,000 --> 00:42:06,000
没有完全解决

1467
00:42:06,000 --> 00:42:08,000
那个 Sysv 的那些问题

1468
00:42:08,000 --> 00:42:11,000
然后刚好最近

1469
00:42:11,000 --> 00:42:12,000
不是出了那个 Share Shock

1470
00:42:12,000 --> 00:42:15,000
那肯定现在是 Bash

1471
00:42:15,000 --> 00:42:16,000
这种老东西

1472
00:42:16,000 --> 00:42:18,000
也是可能会有很多坑的

1473
00:42:18,000 --> 00:42:20,000
所以 Bash 被 Bash

1474
00:42:20,000 --> 00:42:22,000
Bashing Bash

1475
00:42:22,000 --> 00:42:23,000
对

1476
00:42:23,000 --> 00:42:24,000
又扯远了

1477
00:42:24,000 --> 00:42:25,000
对

1478
00:42:25,000 --> 00:42:27,000
不过这可能就是

1479
00:42:27,000 --> 00:42:28,000
Polycast 的

1480
00:42:28,000 --> 00:42:31,000
本来要做一件事吧

1481
00:42:31,000 --> 00:42:32,000
不停的扯远

1482
00:42:32,000 --> 00:42:32,000
OK

1483
00:42:32,000 --> 00:42:34,000
所以你觉得那个

1484
00:42:34,000 --> 00:42:35,000
刚才讲那个

1485
00:42:35,000 --> 00:42:36,000
我们在讲 Exception Handling

1486
00:42:36,000 --> 00:42:37,000
你说这个

1487
00:42:37,000 --> 00:42:39,000
Exception 应该在哪一层处理

1488
00:42:39,000 --> 00:42:41,000
这是一个很好的问题

1489
00:42:41,000 --> 00:42:43,000
就是 Exception

1490
00:42:43,000 --> 00:42:45,000
其实是有不同层级的

1491
00:42:45,000 --> 00:42:47,000
我觉得我可能

1492
00:42:47,000 --> 00:42:50,000
在小时候用 Windows 的时候

1493
00:42:50,000 --> 00:42:52,000
这话说的

1494
00:42:52,000 --> 00:42:52,000
对

1495
00:42:52,000 --> 00:42:53,000
在以前用 Windows 的时候

1496
00:42:53,000 --> 00:42:56,000
非常恼人的一个错误提示

1497
00:42:56,000 --> 00:43:01,000
就是一个红叉的 pop up

1498
00:43:01,000 --> 00:43:03,000
然后说严重错误

1499
00:43:03,000 --> 00:43:03,000
冒号

1500
00:43:03,000 --> 00:43:08,000
0 x 某某某地址的内容

1501
00:43:08,000 --> 00:43:11,000
不应被访问之类的

1502
00:43:11,000 --> 00:43:12,000
然后程序终止

1503
00:43:12,000 --> 00:43:15,000
我觉得这其实是非常愚蠢的

1504
00:43:15,000 --> 00:43:16,000
一个错误提示

1505
00:43:16,000 --> 00:43:19,000
就是我作为当时

1506
00:43:19,000 --> 00:43:21,000
作为一个普通的用户

1507
00:43:21,000 --> 00:43:23,000
我凭什么要去读这个

1508
00:43:23,000 --> 00:43:25,000
十六进士的例子

1509
00:43:25,000 --> 00:43:27,000
就是你这个 pop up

1510
00:43:27,000 --> 00:43:29,000
到底给我带来了什么呢

1511
00:43:29,000 --> 00:43:30,000
什么也没有

1512
00:43:30,000 --> 00:43:31,000
你只是告诉我

1513
00:43:31,000 --> 00:43:32,000
我的游戏不能玩了

1514
00:43:32,000 --> 00:43:33,000
所以那个

1515
00:43:33,000 --> 00:43:35,000
那你不如直接告诉我

1516
00:43:35,000 --> 00:43:36,000
我的游戏不能玩了就好

1517
00:43:36,000 --> 00:43:38,000
产品产品经理偷懒吗

1518
00:43:38,000 --> 00:43:40,000
没有去做这个事情了

1519
00:43:40,000 --> 00:43:42,000
这个不应该暴露给用户吗

1520
00:43:42,000 --> 00:43:44,000
我相信这是 Windows 的问题

1521
00:43:44,000 --> 00:43:46,000
就是这种严重的错误级别

1522
00:43:46,000 --> 00:43:48,000
这种就是现在我知道的

1523
00:43:48,000 --> 00:43:49,000
这样的错误提示

1524
00:43:49,000 --> 00:43:50,000
显示 Windows 抛出来的

1525
00:43:50,000 --> 00:43:50,000
OK

1526
00:43:50,000 --> 00:43:52,000
就是 Windows 作为一个

1527
00:43:52,000 --> 00:43:53,000
就是抢占适途任务的系统

1528
00:43:53,000 --> 00:43:56,000
它可以探测到程序访问的

1529
00:43:56,000 --> 00:43:57,000
不该访问的内存

1530
00:43:57,000 --> 00:44:00,000
所以它会抛出这样的错误提示来

1531
00:44:00,000 --> 00:44:01,000
OK

1532
00:44:01,000 --> 00:44:01,000
OK

1533
00:44:01,000 --> 00:44:02,000
对

1534
00:44:02,000 --> 00:44:03,000
我相信这种情况

1535
00:44:03,000 --> 00:44:05,000
就是我相信这种情况

1536
00:44:05,000 --> 00:44:07,000
我在 Mac OS X 上发生的话

1537
00:44:07,000 --> 00:44:08,000
Mac OS X 会很简单的

1538
00:44:08,000 --> 00:44:10,000
让它 crush

1539
00:44:10,000 --> 00:44:12,000
然后跳出来一个对话框说

1540
00:44:12,000 --> 00:44:14,000
你刚才的程序 crush 了

1541
00:44:14,000 --> 00:44:15,000
你要发送一个错误报告给 Apple

1542
00:44:15,000 --> 00:44:16,000
对啊

1543
00:44:16,000 --> 00:44:18,000
现在 Windows 不是这样子吗

1544
00:44:18,000 --> 00:44:19,000
我已经好多年没有

1545
00:44:19,000 --> 00:44:20,000
我不知道

1546
00:44:20,000 --> 00:44:22,000
咱们两个都不是 Windows 用

1547
00:44:22,000 --> 00:44:24,000
我觉得这可能有点偏培

1548
00:44:24,000 --> 00:44:27,000
不过其实我起码到 Windows 7 的时候

1549
00:44:27,000 --> 00:44:28,000
我还是有这个印象

1550
00:44:28,000 --> 00:44:33,000
就 Windows 上面就一旦出了任何预料之外的事情

1551
00:44:33,000 --> 00:44:37,000
它的那个错误提示都是非常的用户不友好

1552
00:44:37,000 --> 00:44:39,000
highly user friendly

1553
00:44:39,000 --> 00:44:40,000
对

1554
00:44:40,000 --> 00:44:41,000
而且它一定要你点一下

1555
00:44:41,000 --> 00:44:43,000
就是一定要跳出来告诉你

1556
00:44:43,000 --> 00:44:44,000
这个玩意挂了

1557
00:44:44,000 --> 00:44:44,000
对

1558
00:44:44,000 --> 00:44:44,000
而且

1559
00:44:44,000 --> 00:44:45,000
你确认吧

1560
00:44:45,000 --> 00:44:45,000
而且

1561
00:44:45,000 --> 00:44:46,000
你点 OK 吧

1562
00:44:46,000 --> 00:44:47,000
是 Windows 7 还是 Vista 里面

1563
00:44:47,000 --> 00:44:49,000
这个问题超严重

1564
00:44:49,000 --> 00:44:52,000
就是它每次就出现任何系统级别

1565
00:44:52,000 --> 00:44:56,000
让你提示的东西它会把所有的都挥掉

1566
00:44:56,000 --> 00:44:57,000
只出现了一个框

1567
00:44:58,000 --> 00:44:58,000
对

1568
00:44:58,000 --> 00:45:00,000
就你没有办法去忽略它

1569
00:45:01,000 --> 00:45:02,000
然后就会导致一个问题就是

1570
00:45:03,000 --> 00:45:05,000
因为普通用户他反正他也看不懂那个在说什么

1571
00:45:05,000 --> 00:45:06,000
对吧

1572
00:45:06,000 --> 00:45:07,000
然后那就点了

1573
00:45:07,000 --> 00:45:08,000
你在多出几次之后

1574
00:45:08,000 --> 00:45:10,000
他就这简单的框就点

1575
00:45:10,000 --> 00:45:10,000
也不管他们说什么

1576
00:45:10,000 --> 00:45:11,000
就会导致

1577
00:45:11,000 --> 00:45:12,000
他有一个

1578
00:45:12,000 --> 00:45:13,000
这个叫什么

1579
00:45:13,000 --> 00:45:15,000
防止这个恶意程序的一种机制

1580
00:45:15,000 --> 00:45:16,000
对吧

1581
00:45:16,000 --> 00:45:16,000
我记得

1582
00:45:17,000 --> 00:45:18,000
是 Vista 里面开始有的吧

1583
00:45:18,000 --> 00:45:19,000
那就是他

1584
00:45:19,000 --> 00:45:20,000
但是因为这个

1585
00:45:20,000 --> 00:45:21,000
他把用户训练的

1586
00:45:21,000 --> 00:45:22,000
只要运在那个框就点 OK

1587
00:45:22,000 --> 00:45:25,000
就所以其实那个机制有了等于没有

1588
00:45:25,000 --> 00:45:28,000
你不断去烦用户说

1589
00:45:28,000 --> 00:45:30,000
这个程序会怎么样

1590
00:45:30,000 --> 00:45:31,000
那个程序会怎么样

1591
00:45:31,000 --> 00:45:31,000
就就是这个

1592
00:45:31,000 --> 00:45:32,000
所有的都去死

1593
00:45:32,000 --> 00:45:33,000
不管

1594
00:45:33,000 --> 00:45:35,000
就好像不停的弹窗

1595
00:45:35,000 --> 00:45:38,000
那么用户养成了习惯就是一键弹窗

1596
00:45:38,000 --> 00:45:39,000
立刻点关闭

1597
00:45:39,000 --> 00:45:39,000
对

1598
00:45:39,000 --> 00:45:41,000
如果你不停跳对话框

1599
00:45:41,000 --> 00:45:42,000
用户的习惯就是

1600
00:45:42,000 --> 00:45:44,000
对话框出来不去读立刻点

1601
00:45:44,000 --> 00:45:44,000
对

1602
00:45:44,000 --> 00:45:47,000
一个可以让它最快消失的键

1603
00:45:47,000 --> 00:45:53,000
但其实现在我觉得就不管是在什么情况下就已经是绝大多数用户的就是第一反应了吧

1604
00:45:53,000 --> 00:45:54,000
对

1605
00:45:54,000 --> 00:45:57,000
就我们黑 Windows 的其实很多麦克用户也是这样的

1606
00:45:57,000 --> 00:45:58,000
对

1607
00:45:58,000 --> 00:46:01,000
不过就是麦克上这个情况小一些哈就是

1608
00:46:01,000 --> 00:46:06,000
比如说起码它是从那个 10 点几开始搭那个那个叫什么玩意儿

1609
00:46:06,000 --> 00:46:13,000
那个就你点一下它要经过它就签签名过的程序才可以正常使用

1610
00:46:13,000 --> 00:46:19,000
那个啊在那个 security settings 里面叫叫叫认证 authorizedeveloper 之类的

1611
00:46:19,000 --> 00:46:20,000
那个功能

1612
00:46:20,000 --> 00:46:22,000
我看一下那个东西叫什么来着

1613
00:46:22,000 --> 00:46:28,000
对就是 allow apps downloaded from 什么什么

1614
00:46:28,000 --> 00:46:30,000
它有三个选项吧

1615
00:46:30,000 --> 00:46:33,000
你就是说它默认就是默认是允许

1616
00:46:33,000 --> 00:46:35,000
Mac App Store 和这个

1617
00:46:35,000 --> 00:46:37,000
Mac App Store and identify the developers and anywhere

1618
00:46:37,000 --> 00:46:38,000
对就是

1619
00:46:38,000 --> 00:46:39,000
对这基本上是我

1620
00:46:39,000 --> 00:46:42,000
好奇怪呀

1621
00:46:42,000 --> 00:46:43,000
我居然没有改过这一项

1622
00:46:43,000 --> 00:46:44,000
你的默认是哪个

1623
00:46:44,000 --> 00:46:46,000
第二个

1624
00:46:46,000 --> 00:46:48,000
就是 Mac App Store and identify the developers

1625
00:46:48,000 --> 00:46:49,000
对

1626
00:46:49,000 --> 00:46:52,000
你觉得你应该改哪一项

1627
00:46:52,000 --> 00:46:54,000
我竟然没有把它改成 anyware

1628
00:46:54,000 --> 00:46:56,000
这是非常奇怪的

1629
00:46:56,000 --> 00:46:57,000
你为什么把它改成 anyware

1630
00:46:57,000 --> 00:47:02,000
因为我觉得这不是我不是在用 iOS

1631
00:47:02,000 --> 00:47:04,000
我知道我要干什么

1632
00:47:04,000 --> 00:47:07,000
我作为一个程序员我知道我下载的程序是什么

1633
00:47:07,000 --> 00:47:10,000
但至少是我认为我知道

1634
00:47:10,000 --> 00:47:13,000
所以你不要 stand in my way

1635
00:47:13,000 --> 00:47:15,000
然后告诉我我不应该做什么

1636
00:47:15,000 --> 00:47:19,000
我觉得我就我知道有这三个选项

1637
00:47:19,000 --> 00:47:22,000
然后我是故意留的就现在这个就是允许 app store

1638
00:47:22,000 --> 00:47:24,000
和这个受信任的开发者

1639
00:47:24,000 --> 00:47:27,000
然后这样一个好处就是我从网上下载了一个程序之后

1640
00:47:27,000 --> 00:47:30,000
我可以很清楚的知道这个程序是被那个开发者

1641
00:47:30,000 --> 00:47:32,000
自己签过名的没

1642
00:47:32,000 --> 00:47:35,000
如果他是没有被签过名的

1643
00:47:35,000 --> 00:47:35,000
那他

1644
00:47:35,000 --> 00:47:38,000
然后我觉得他应该是有签名的的话

1645
00:47:38,000 --> 00:47:41,000
他可能我下的那个版本可能会是一个

1646
00:47:41,000 --> 00:47:41,000
叫做什么

1647
00:47:41,000 --> 00:47:44,000
contaminated 版本

1648
00:47:44,000 --> 00:47:45,000
对

1649
00:47:45,000 --> 00:47:50,000
但可是你不觉得这一点其实对于你这个层级的程序员来说很

1650
00:47:50,000 --> 00:47:51,000
很无稽嘛

1651
00:47:51,000 --> 00:47:54,000
就是你明明也会去用 brew

1652
00:47:54,000 --> 00:47:58,000
homebrew 或者是其他的脚本程序

1653
00:47:58,000 --> 00:48:01,000
有时候这些脚本程序有些安装包

1654
00:48:01,000 --> 00:48:02,000
他同样是需要你速度的

1655
00:48:02,000 --> 00:48:06,000
那这种情况下你其实这种程序是不会经过

1656
00:48:06,000 --> 00:48:10,000
Apple 的这一套认证机制

1657
00:48:10,000 --> 00:48:11,000
可是你照样会去运行

1658
00:48:11,000 --> 00:48:12,000
我 homebrew 我不用速度

1659
00:48:12,000 --> 00:48:17,000
我把它那个就是 user local 改成了我自己属于我自己的

1660
00:48:17,000 --> 00:48:18,000
homebrew

1661
00:48:18,000 --> 00:48:19,000
对 homebrew 是一个不好的

1662
00:48:19,000 --> 00:48:22,000
但是我意思是你可以去运行一些脚本

1663
00:48:22,000 --> 00:48:24,000
脚本程序

1664
00:48:24,000 --> 00:48:29,000
而不仅只是这种经过 Apple 打包的帮走程序

1665
00:48:29,000 --> 00:48:34,000
但那种程序的安全性是不受这里的控制所保护的

1666
00:48:34,000 --> 00:48:34,000
对

1667
00:48:34,000 --> 00:48:37,000
我想想我觉得是这样子

1668
00:48:37,000 --> 00:48:41,000
就是我我知道我大部分时候在做什么

1669
00:48:41,000 --> 00:48:44,000
但是我不保证有时候没睡醒的时候

1670
00:48:44,000 --> 00:48:45,000
或者是快睡着的时候

1671
00:48:45,000 --> 00:48:48,000
做的事情都是一定是合乎逻辑的

1672
00:48:48,000 --> 00:48:51,000
所以有这么一个安全机制保护一下还是挺好的

1673
00:48:51,000 --> 00:48:54,000
然后要跳出这个机制其实也很简单

1674
00:48:54,000 --> 00:48:56,000
就是你双击执行那个 App 不行的话

1675
00:48:56,000 --> 00:49:00,000
你就右键调出那个 context menu

1676
00:49:00,000 --> 00:49:00,000
然后点 open 的话

1677
00:49:00,000 --> 00:49:02,000
它就可以绕过那个限制

1678
00:49:02,000 --> 00:49:04,000
它会问你确认一下

1679
00:49:04,000 --> 00:49:06,000
那你就在二次确认一下就可以直接执行

1680
00:49:06,000 --> 00:49:09,000
你不需要把这个选项调成

1681
00:49:09,000 --> 00:49:10,000
a low from anywhere

1682
00:49:10,000 --> 00:49:12,000
这样也就杀上面比较大了

1683
00:49:12,000 --> 00:49:13,000
对

1684
00:49:13,000 --> 00:49:17,000
所以就哪怕是你知道你在干什么

1685
00:49:17,000 --> 00:49:20,000
就好像很多车

1686
00:49:20,000 --> 00:49:21,000
你开车一样对吧

1687
00:49:21,000 --> 00:49:22,000
你虽然你知道你怎么开

1688
00:49:22,000 --> 00:49:25,000
但是我觉得有这么一种安全机制还是不错的

1689
00:49:25,000 --> 00:49:27,000
对

1690
00:49:27,000 --> 00:49:29,000
我其实刚才是惊讶的是

1691
00:49:29,000 --> 00:49:33,000
我这台电脑买了也有两个月了

1692
00:49:33,000 --> 00:49:36,000
就是买了一台新的 MVP

1693
00:49:36,000 --> 00:49:41,000
然后这两个月里面我居然从来没有改过它

1694
00:49:41,000 --> 00:49:42,000
也没有察觉到任何不正常

1695
00:49:42,000 --> 00:49:45,000
或者说察觉到任何不变

1696
00:49:45,000 --> 00:49:47,000
所以说明两个问题对吧

1697
00:49:47,000 --> 00:49:50,000
要不你就是用的第三方软件比较少

1698
00:49:50,000 --> 00:49:51,000
要么就是

1699
00:49:51,000 --> 00:49:57,000
就是你遇到的都是那种就签名过的至少是

1700
00:49:57,000 --> 00:49:58,000
对

1701
00:49:58,000 --> 00:50:00,000
还证明了第三个问题就是

1702
00:50:00,000 --> 00:50:02,000
还证明了第三点就是

1703
00:50:02,000 --> 00:50:04,000
其实你的选择是比较理直

1704
00:50:04,000 --> 00:50:07,000
我有点太 over opening

1705
00:50:07,000 --> 00:50:08,000
对

1706
00:50:08,000 --> 00:50:08,000
就

1707
00:50:08,000 --> 00:50:11,000
我是就刚才讲了

1708
00:50:11,000 --> 00:50:13,000
我们刚才也在讲不想折腾

1709
00:50:13,000 --> 00:50:14,000
这也是其中一个

1710
00:50:14,000 --> 00:50:16,000
就是我之前还说了这么一个事情

1711
00:50:16,000 --> 00:50:18,000
就之前我打那个

1712
00:50:18,000 --> 00:50:20,000
在麦克县上打中文输入法

1713
00:50:20,000 --> 00:50:23,000
都用一个叫做数虚管的一个

1714
00:50:23,000 --> 00:50:24,000
对我也用

1715
00:50:24,000 --> 00:50:24,000
对吧

1716
00:50:24,000 --> 00:50:27,000
对如果有听众不知道的话

1717
00:50:27,000 --> 00:50:29,000
数虚管是中文界最好的输入法

1718
00:50:29,000 --> 00:50:30,000
没有直译

1719
00:50:30,000 --> 00:50:31,000
对

1720
00:50:31,000 --> 00:50:34,000
然后免费为这个佛阵做出广告

1721
00:50:34,000 --> 00:50:34,000
对

1722
00:50:34,000 --> 00:50:35,000
对

1723
00:50:35,000 --> 00:50:37,000
那个连接我们可以放到这个里面

1724
00:50:37,000 --> 00:50:40,000
不过那个东西其实还不算用户特别友好

1725
00:50:40,000 --> 00:50:40,000
它的那个

1726
00:50:40,000 --> 00:50:43,000
要改设置是要改配置文件的

1727
00:50:43,000 --> 00:50:47,000
但在麦克上面有一个 GUI 可以用的

1728
00:50:47,000 --> 00:50:47,000
对

1729
00:50:47,000 --> 00:50:48,000
对

1730
00:50:48,000 --> 00:50:49,000
把那个也倒是连进去吧

1731
00:50:49,000 --> 00:50:50,000
但 anyway

1732
00:50:50,000 --> 00:50:51,000
我想说的是

1733
00:50:51,000 --> 00:50:53,000
我最近把那个数据管关掉

1734
00:50:53,000 --> 00:50:56,000
然后开始用那个系统默认的那个平衡输入法

1735
00:50:56,000 --> 00:50:56,000
就自带的那个

1736
00:50:56,000 --> 00:50:57,000
感觉在

1737
00:50:57,000 --> 00:50:58,000
今天还不错

1738
00:51:00,000 --> 00:51:04,000
就是我没有觉得效率有特别大的影响

1739
00:51:04,000 --> 00:51:07,000
但一方面是因为我最近打中文也打的不多

1740
00:51:07,000 --> 00:51:08,000
其实也无所谓

1741
00:51:08,000 --> 00:51:11,000
因为日常的都是英文的比较多

1742
00:51:11,000 --> 00:51:16,000
然后中文的话也就尽限于给你们发发邮件聊聊天之类的

1743
00:51:16,000 --> 00:51:17,000
是这样的

1744
00:51:17,000 --> 00:51:20,000
而且我觉得数据管让我觉得很不爽一点

1745
00:51:20,000 --> 00:51:22,000
就是我在输入

1746
00:51:22,000 --> 00:51:25,000
我不知道自带的中文输入法有没有这个问题

1747
00:51:25,000 --> 00:51:28,000
就是你在输入这个德语的叫 Womlaut 的时候

1748
00:51:28,000 --> 00:51:30,000
就是有些字母上面要加两点

1749
00:51:30,000 --> 00:51:30,000
嗯

1750
00:51:30,000 --> 00:51:31,000
嗯

1751
00:51:31,000 --> 00:51:35,000
在这种情况下如果是 Mac 的英文状态

1752
00:51:35,000 --> 00:51:38,000
可以通过 ALT 加上 U

1753
00:51:38,000 --> 00:51:39,000
输入两点

1754
00:51:39,000 --> 00:51:40,000
嗯

1755
00:51:40,000 --> 00:51:41,000
然后再按一个字母

1756
00:51:41,000 --> 00:51:44,000
这样就可以形成这个字母上面加两点的这个组合

1757
00:51:44,000 --> 00:51:45,000
嗯

1758
00:51:45,000 --> 00:51:46,000
但是在数据管里面是没有的

1759
00:51:46,000 --> 00:51:50,000
我其实我一直想要给佛阵提一个 bug request

1760
00:51:50,000 --> 00:51:56,000
因为有些组合键在数据管下面是可以按出来的

1761
00:51:56,000 --> 00:51:57,000
但是这个没有

1762
00:51:57,000 --> 00:52:00,000
所以它是因为有它被诈用了吗还是怎么样

1763
00:52:00,000 --> 00:52:02,000
应该不是吧

1764
00:52:02,000 --> 00:52:05,000
就比如说在数据管下面你按 LT 加 A

1765
00:52:05,000 --> 00:52:07,000
你可以打出这个

1766
00:52:07,000 --> 00:52:07,000
A 一片

1767
00:52:07,000 --> 00:52:08,000
就是

1768
00:52:08,000 --> 00:52:09,000
是吧

1769
00:52:09,000 --> 00:52:10,000
不是 A 一片

1770
00:52:10,000 --> 00:52:13,000
应该是那个挪威语的 O

1771
00:52:13,000 --> 00:52:14,000
就是 A 上面加一个圈

1772
00:52:14,000 --> 00:52:15,000
OK

1773
00:52:15,000 --> 00:52:16,000
我不确定啊

1774
00:52:16,000 --> 00:52:18,000
但应该是可以的

1775
00:52:18,000 --> 00:52:18,000
嗯

1776
00:52:18,000 --> 00:52:19,000
但是

1777
00:52:19,000 --> 00:52:21,000
但是在

1778
00:52:21,000 --> 00:52:22,000
嗯

1779
00:52:22,000 --> 00:52:23,000
你要想打 Wolmout 的时候就不可以

1780
00:52:23,000 --> 00:52:24,000
啊

1781
00:52:24,000 --> 00:52:24,000
哎

1782
00:52:24,000 --> 00:52:28,000
我觉得它可能 Wolmout 是不是也是类似一种 IME 的方式来实现

1783
00:52:28,000 --> 00:52:29,000
你看

1784
00:52:29,000 --> 00:52:30,000
Wolmout

1785
00:52:30,000 --> 00:52:31,000
就是这种

1786
00:52:31,000 --> 00:52:33,000
就是你先按一个键

1787
00:52:33,000 --> 00:52:33,000
再按其他键

1788
00:52:33,000 --> 00:52:37,000
然后这两个键组合成一个字母的方式

1789
00:52:37,000 --> 00:52:37,000
叫做 deadkey

1790
00:52:37,000 --> 00:52:38,000
嗯

1791
00:52:38,000 --> 00:52:40,000
deadkey 应该不是

1792
00:52:40,000 --> 00:52:44,000
deadkey 应该是可以通过被 IME 改变的

1793
00:52:44,000 --> 00:52:45,000
但是

1794
00:52:45,000 --> 00:52:46,000
嗯

1795
00:52:46,000 --> 00:52:48,000
我相信它是可以不去

1796
00:52:48,000 --> 00:52:50,000
改系统既有的这种

1797
00:52:50,000 --> 00:52:51,000
deadkey 设计

1798
00:52:51,000 --> 00:52:51,000
OK

1799
00:52:51,000 --> 00:52:52,000
那所以

1800
00:52:52,000 --> 00:52:53,000
对我也不是

1801
00:52:53,000 --> 00:52:54,000
我也没有做过这些东西

1802
00:52:54,000 --> 00:52:55,000
我只是只是我的猜想吧

1803
00:52:55,000 --> 00:52:57,000
那你可以跟他提个那个 bug request

1804
00:52:57,000 --> 00:52:58,000
对

1805
00:52:58,000 --> 00:52:59,000
pull request

1806
00:52:59,000 --> 00:53:00,000
你自己改了好了

1807
00:53:00,000 --> 00:53:01,000
bug request

1808
00:53:01,000 --> 00:53:02,000
呀

1809
00:53:02,000 --> 00:53:03,000
我不知道我不知道怎么改

1810
00:53:03,000 --> 00:53:05,000
我太弱了

1811
00:53:05,000 --> 00:53:06,000
但是

1812
00:53:06,000 --> 00:53:06,000
对我相信

1813
00:53:06,000 --> 00:53:07,000
等等

1814
00:53:07,000 --> 00:53:08,000
呃

1815
00:53:08,000 --> 00:53:09,000
熟悉碗是用什么写的

1816
00:53:09,000 --> 00:53:10,000
C

1817
00:53:10,000 --> 00:53:10,000
C++

1818
00:53:10,000 --> 00:53:11,000
嗯

1819
00:53:11,000 --> 00:53:12,000
好问题

1820
00:53:12,000 --> 00:53:12,000
我不知道

1821
00:53:12,000 --> 00:53:15,000
没有没有关注过

1822
00:53:15,000 --> 00:53:15,000
对

1823
00:53:15,000 --> 00:53:16,000
就我昨天对

1824
00:53:16,000 --> 00:53:17,000
我昨天去面试的时候

1825
00:53:17,000 --> 00:53:19,000
呃

1826
00:53:19,000 --> 00:53:20,000
对

1827
00:53:20,000 --> 00:53:21,000
听众朋友

1828
00:53:21,000 --> 00:53:25,000
我作为一个目前你们还不太了解的主持人

1829
00:53:25,000 --> 00:53:27,000
昨天我去面试新工作了

1830
00:53:27,000 --> 00:53:28,000
就是在面试的时候

1831
00:53:28,000 --> 00:53:29,000
呃

1832
00:53:29,000 --> 00:53:32,000
他们给了我一个一道面试题

1833
00:53:32,000 --> 00:53:33,000
面试题里面写说

1834
00:53:33,000 --> 00:53:34,000
呃

1835
00:53:34,000 --> 00:53:36,000
最好能用 C++解决

1836
00:53:36,000 --> 00:53:37,000
呵

1837
00:53:37,000 --> 00:53:37,000
然后

1838
00:53:37,000 --> 00:53:39,000
我心里就流汗

1839
00:53:39,000 --> 00:53:40,000
我说

1840
00:53:40,000 --> 00:53:41,000
呃

1841
00:53:41,000 --> 00:53:43,000
这个招聘简历上可没写

1842
00:53:43,000 --> 00:53:44,000
说一定要回 C++

1843
00:53:44,000 --> 00:53:45,000
而且我真的是不会 C++

1844
00:53:45,000 --> 00:53:45,000
嗯

1845
00:53:45,000 --> 00:53:46,000
然后我就说

1846
00:53:46,000 --> 00:53:47,000
我切伤他们问

1847
00:53:47,000 --> 00:53:48,000
我能用 Prizen 写吗

1848
00:53:48,000 --> 00:53:49,000
然后他们说可以

1849
00:53:49,000 --> 00:53:51,000
然后我用一秒钟写出来了

1850
00:53:51,000 --> 00:53:53,000
呵呵呵

1851
00:53:53,000 --> 00:53:53,000
效率

1852
00:53:53,000 --> 00:53:55,000
效率顿时就不一样了

1853
00:53:55,000 --> 00:53:56,000
对啊

1854
00:53:56,000 --> 00:53:56,000
对啊

1855
00:53:56,000 --> 00:53:57,000
我觉得

1856
00:53:57,000 --> 00:53:57,000
对

1857
00:53:57,000 --> 00:53:59,000
但是我也不是很骄傲

1858
00:53:59,000 --> 00:54:00,000
因为呃

1859
00:54:00,000 --> 00:54:01,000
我觉得如果能用

1860
00:54:01,000 --> 00:54:02,000
能在十秒钟之内

1861
00:54:02,000 --> 00:54:03,000
用 C++写出来

1862
00:54:03,000 --> 00:54:04,000
可能更快

1863
00:54:04,000 --> 00:54:06,000
可能更会受到击杀

1864
00:54:06,000 --> 00:54:08,000
你这样用一秒写出来更爽

1865
00:54:08,000 --> 00:54:10,000
对啊

1866
00:54:10,000 --> 00:54:11,000
一秒可能夸张

1867
00:54:11,000 --> 00:54:12,000
可能三秒

1868
00:54:12,000 --> 00:54:14,000
就你毕竟要写一个

1869
00:54:14,000 --> 00:54:14,000
对

1870
00:54:14,000 --> 00:54:16,000
打几个字是吧

1871
00:54:16,000 --> 00:54:17,000
嗯

1872
00:54:17,000 --> 00:54:17,000
对

1873
00:54:17,000 --> 00:54:17,000
这是一个

1874
00:54:17,000 --> 00:54:18,000
哎

1875
00:54:18,000 --> 00:54:18,000
你

1876
00:54:18,000 --> 00:54:19,000
你有在找工作吗

1877
00:54:19,000 --> 00:54:20,000
我没有岔开了

1878
00:54:20,000 --> 00:54:21,000
不管你岔开

1879
00:54:21,000 --> 00:54:21,000
呃

1880
00:54:21,000 --> 00:54:23,000
目前还没有啊

1881
00:54:23,000 --> 00:54:24,000
你想

1882
00:54:24,000 --> 00:54:25,000
你是什么时候毕业

1883
00:54:25,000 --> 00:54:26,000
呃

1884
00:54:26,000 --> 00:54:27,000
理论上是明年吧

1885
00:54:27,000 --> 00:54:29,000
啊

1886
00:54:29,000 --> 00:54:29,000
对

1887
00:54:29,000 --> 00:54:31,000
我们的嘉宾主持 Rail

1888
00:54:31,000 --> 00:54:32,000
现在还在读博士

1889
00:54:32,000 --> 00:54:33,000
Rail 博士你好

1890
00:54:33,000 --> 00:54:34,000
呃

1891
00:54:34,000 --> 00:54:34,000
Candidate

1892
00:54:34,000 --> 00:54:35,000
还没

1893
00:54:35,000 --> 00:54:36,000
还不算

1894
00:54:36,000 --> 00:54:37,000
呃

1895
00:54:37,000 --> 00:54:37,000
对

1896
00:54:37,000 --> 00:54:38,000
就是

1897
00:54:38,000 --> 00:54:38,000
Doc

1898
00:54:38,000 --> 00:54:39,000
博士生

1899
00:54:39,000 --> 00:54:39,000
对

1900
00:54:39,000 --> 00:54:39,000
博士生

1901
00:54:39,000 --> 00:54:40,000
博士生

1902
00:54:40,000 --> 00:54:42,000
Dr.Rail

1903
00:54:42,000 --> 00:54:42,000
Gonna V

1904
00:54:42,000 --> 00:54:44,000
对

1905
00:54:44,000 --> 00:54:45,000
北京时间

1906
00:54:45,000 --> 00:54:46,000
呃

1907
00:54:46,000 --> 00:54:47,000
百分号 H

1908
00:54:47,000 --> 00:54:48,000
百分号 M 分

1909
00:54:48,000 --> 00:54:50,000
您现在是收听到的是

1910
00:54:50,000 --> 00:54:51,000
内核恐慌

1911
00:54:51,000 --> 00:54:51,000
由

1912
00:54:51,000 --> 00:54:52,000
Dr.Rail

1913
00:54:52,000 --> 00:54:53,000
Gonna V

1914
00:54:53,000 --> 00:54:54,000
和

1915
00:54:54,000 --> 00:54:55,000
吴陶

1916
00:54:55,000 --> 00:54:56,000
为你主持的一款

1917
00:54:56,000 --> 00:54:56,000
嗯

1918
00:54:56,000 --> 00:54:58,000
普通人也能听懂

1919
00:54:58,000 --> 00:54:59,000
但是普通人一般

1920
00:54:59,000 --> 00:55:00,000
不会来听的

1921
00:55:00,000 --> 00:55:01,000
IT 播客节目

1922
00:55:01,000 --> 00:55:03,000
你确定普通人能听懂吗

1923
00:55:03,000 --> 00:55:04,000
呃

1924
00:55:04,000 --> 00:55:04,000
呃

1925
00:55:04,000 --> 00:55:05,000
程序员能够听懂

1926
00:55:05,000 --> 00:55:07,000
但是程序员一般不听的

1927
00:55:07,000 --> 00:55:07,000
播客节目

1928
00:55:07,000 --> 00:55:07,000
嗯

1929
00:55:07,000 --> 00:55:08,000
我们

1930
00:55:08,000 --> 00:55:09,000
我们这样不好

1931
00:55:09,000 --> 00:55:10,000
我觉得应该

1932
00:55:10,000 --> 00:55:11,000
要做成

1933
00:55:11,000 --> 00:55:12,000
程序员能听懂

1934
00:55:12,000 --> 00:55:13,000
但是程序员来听

1935
00:55:13,000 --> 00:55:14,000
然后普通人不会听的

1936
00:55:14,000 --> 00:55:15,000
播客就好了

1937
00:55:15,000 --> 00:55:17,000
或者说呃

1938
00:55:17,000 --> 00:55:18,000
程序员都喜欢听

1939
00:55:18,000 --> 00:55:19,000
但是程序员甚至

1940
00:55:19,000 --> 00:55:20,000
不一定能听懂的

1941
00:55:20,000 --> 00:55:21,000
播客节目

1942
00:55:21,000 --> 00:55:22,000
那好失败感情

1943
00:55:22,000 --> 00:55:24,000
No

1944
00:55:24,000 --> 00:55:24,000
No

1945
00:55:24,000 --> 00:55:26,000
这样会让程序员产生

1946
00:55:26,000 --> 00:55:26,000
一种挫折感

1947
00:55:26,000 --> 00:55:27,000
然后会

1948
00:55:27,000 --> 00:55:27,000
呃

1949
00:55:27,000 --> 00:55:28,000
愤发突强

1950
00:55:28,000 --> 00:55:29,000
去

1951
00:55:29,000 --> 00:55:30,000
去

1952
00:55:30,000 --> 00:55:30,000
去

1953
00:55:30,000 --> 00:55:31,000
去

1954
00:55:31,000 --> 00:55:32,000
学到能够来

1955
00:55:32,000 --> 00:55:33,000
bitching 我们的节目

1956
00:55:33,000 --> 00:55:35,000
那种种微小的

1957
00:55:35,000 --> 00:55:35,000
错误的水平

1958
00:55:35,000 --> 00:55:36,000
嗯

1959
00:55:36,000 --> 00:55:38,000
这就达到我们节目的目的了

1960
00:55:38,000 --> 00:55:38,000
OK

1961
00:55:38,000 --> 00:55:39,000
对

1962
00:55:39,000 --> 00:55:41,000
所以怎么样

1963
00:55:41,000 --> 00:55:43,000
今天到此为止吗

1964
00:55:43,000 --> 00:55:44,000
呃

1965
00:55:44,000 --> 00:55:45,000
我们录了多久

1966
00:55:45,000 --> 00:55:46,000
差不多

1967
00:55:46,000 --> 00:55:47,000
不到一小时了

1968
00:55:47,000 --> 00:55:48,000
对

1969
00:55:48,000 --> 00:55:48,000
OK

1970
00:55:48,000 --> 00:55:49,000
对

1971
00:55:49,000 --> 00:55:50,000
那我们

1972
00:55:50,000 --> 00:55:51,000
还是控制在一小时内吧

1973
00:55:51,000 --> 00:55:52,000
OK

1974
00:55:52,000 --> 00:55:52,000
就这样

1975
00:55:52,000 --> 00:55:53,000
假然而止

1976
00:55:53,000 --> 00:55:54,000
那么

1977
00:55:54,000 --> 00:55:54,000
呃

1978
00:55:54,000 --> 00:55:56,000
不知道各位听众听得中

1979
00:55:56,000 --> 00:55:57,000
那个字念假呀

1980
00:55:57,000 --> 00:56:00,000
不念假吗

1981
00:56:00,000 --> 00:56:00,000
我不知道

1982
00:56:00,000 --> 00:56:03,000
我经常会念错字

1983
00:56:03,000 --> 00:56:03,000
然后被

1984
00:56:03,000 --> 00:56:04,000
被听众

1985
00:56:04,000 --> 00:56:05,000
那个指出

1986
00:56:05,000 --> 00:56:05,000
然后啊

1987
00:56:05,000 --> 00:56:06,000
这个字这么念

1988
00:56:06,000 --> 00:56:10,000
我希望是假而止

1989
00:56:10,000 --> 00:56:10,000
对

1990
00:56:10,000 --> 00:56:11,000
假如你

1991
00:56:11,000 --> 00:56:12,000
你认为这个字

1992
00:56:12,000 --> 00:56:13,000
有其他的念法

1993
00:56:13,000 --> 00:56:14,000
也请你

1994
00:56:14,000 --> 00:56:15,000
也欢迎你

1995
00:56:15,000 --> 00:56:16,000
连同其他反馈

1996
00:56:16,000 --> 00:56:17,000
告诉我们

1997
00:56:17,000 --> 00:56:17,000
哎

1998
00:56:17,000 --> 00:56:17,000
我们

1999
00:56:17,000 --> 00:56:18,000
对

2000
00:56:18,000 --> 00:56:19,000
要有个反馈

2001
00:56:19,000 --> 00:56:20,000
对

2002
00:56:20,000 --> 00:56:20,000
我们的 producer 是

2003
00:56:20,000 --> 00:56:21,000
Laurence Lee

2004
00:56:21,000 --> 00:56:23,000
他会为我们剪辑

2005
00:56:23,000 --> 00:56:24,000
今天的这款节目

2006
00:56:24,000 --> 00:56:24,000
嗯

2007
00:56:24,000 --> 00:56:25,000
嗯

2008
00:56:25,000 --> 00:56:25,000
我们还

2009
00:56:25,000 --> 00:56:26,000
有

2010
00:56:26,000 --> 00:56:27,000
我们还没有社交媒体啊

2011
00:56:27,000 --> 00:56:29,000
我觉得对

2012
00:56:29,000 --> 00:56:30,000
暂时如果有反馈的话

2013
00:56:30,000 --> 00:56:31,000
可以直接反馈

2014
00:56:31,000 --> 00:56:32,000
IT 公论

2015
00:56:32,000 --> 00:56:33,000
IT 公论的

2016
00:56:33,000 --> 00:56:34,000
twitter 账号

2017
00:56:34,000 --> 00:56:36,000
是 IT 公论的全拼

2018
00:56:36,000 --> 00:56:37,000
嗯

2019
00:56:37,000 --> 00:56:37,000
twitter

2020
00:56:37,000 --> 00:56:38,000
我在模仿了

2021
00:56:38,000 --> 00:56:39,000
二次

2022
00:56:39,000 --> 00:56:40,000
这个算

2023
00:56:40,000 --> 00:56:40,000
这个我们发

2024
00:56:40,000 --> 00:56:41,000
我做

2025
00:56:41,000 --> 00:56:42,000
你有一个邮箱地址吧

2026
00:56:42,000 --> 00:56:42,000
到时候会

2027
00:56:42,000 --> 00:56:43,000
有一个

2028
00:56:43,000 --> 00:56:45,000
就每一个播客在 IPN

2029
00:56:45,000 --> 00:56:46,000
都会有一个邮箱的嘛

2030
00:56:46,000 --> 00:56:47,000
对

2031
00:56:47,000 --> 00:56:47,000
但是

2032
00:56:47,000 --> 00:56:49,000
每一个播客会在

2033
00:56:49,000 --> 00:56:50,000
推特或者是微博上面

2034
00:56:50,000 --> 00:56:51,000
有细节账号嘛

2035
00:56:51,000 --> 00:56:52,000
下次吧

2036
00:56:52,000 --> 00:56:52,000
叮咚

2037
00:56:52,000 --> 00:56:53,000
等等

2038
00:56:53,000 --> 00:56:53,000
等等

2039
00:56:53,000 --> 00:56:54,000
等等

2040
00:56:54,000 --> 00:56:55,000
不要下次了

2041
00:56:55,000 --> 00:56:55,000
事实上

2042
00:56:55,000 --> 00:56:57,000
在我剪辑播客的时候

2043
00:56:57,000 --> 00:56:58,000
Rail 已经效率非常高的

2044
00:56:58,000 --> 00:57:01,000
把内核恐慌的社交网络账号

2045
00:57:01,000 --> 00:57:02,000
注册好了

2046
00:57:02,000 --> 00:57:05,000
我们在新浪微博和推特

2047
00:57:05,000 --> 00:57:06,000
都是叫

2048
00:57:06,000 --> 00:57:07,000
Kernel Panic FM

2049
00:57:07,000 --> 00:57:09,000
Kernel Panic FM

2050
00:57:09,000 --> 00:57:13,000
KERNELPANIC FM

2051
00:57:13,000 --> 00:57:17,000
所以观众没有任何反馈

2052
00:57:17,000 --> 00:57:18,000
可以给我们写

2053
00:57:18,000 --> 00:57:18,000
我接好

2054
00:57:18,000 --> 00:57:19,000
邮件地址是

2055
00:57:19,000 --> 00:57:20,000
KernelPANIC

2056
00:57:20,000 --> 00:57:25,000
KERNELPANIC

2057
00:57:25,000 --> 00:57:25,000
at

2058
00:57:25,000 --> 00:57:27,000
IPN.LI

2059
00:57:27,000 --> 00:57:28,000
写在一起

2060
00:57:28,000 --> 00:57:30,000
中间没有 DOT 或 DASH

2061
00:57:30,000 --> 00:57:30,000
然后不分担

2062
00:57:30,000 --> 00:57:31,000
也没有下滑线

2063
00:57:31,000 --> 00:57:33,000
有点长

2064
00:57:33,000 --> 00:57:36,000
OK

2065
00:57:36,000 --> 00:57:37,000
那今天就先到这里

2066
00:57:37,000 --> 00:57:40,000
然后我们下期再见

2067
00:57:40,000 --> 00:57:41,000
OK

2068
00:57:41,000 --> 00:57:41,000
拜拜

2069
00:57:41,000 --> 00:57:42,000
拜拜

2070
00:57:42,000 --> 00:57:42,000
拜拜

2071
00:57:42,000 --> 00:57:42,000
拜拜

2072
00:57:42,000 --> 00:57:43,000
拜拜

