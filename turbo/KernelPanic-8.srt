1
00:00:00,000 --> 00:00:00,000
大家好

2
00:00:00,000 --> 00:00:03,000
欢迎收听第八期的内核恐慌

3
00:00:03,000 --> 00:00:04,000
我是 Ril

4
00:00:04,000 --> 00:00:05,000
我是吴桐

5
00:00:05,000 --> 00:00:06,000
新年快乐

6
00:00:06,000 --> 00:00:10,000
所以今天我们节目开始之前

7
00:00:10,000 --> 00:00:12,000
还是先做一个 follow up 吧

8
00:00:12,000 --> 00:00:13,000
对

9
00:00:13,000 --> 00:00:15,000
先是我自我检讨

10
00:00:15,000 --> 00:00:16,000
我又念错了

11
00:00:16,000 --> 00:00:18,000
应该是称目接生

12
00:00:18,000 --> 00:00:20,000
你念了唐目接生

13
00:00:20,000 --> 00:00:22,000
我听的时候就觉得好像不太对

14
00:00:22,000 --> 00:00:23,000
然后就查一下

15
00:00:23,000 --> 00:00:24,000
果然不是唐目接生

16
00:00:24,000 --> 00:00:26,000
但 too late

17
00:00:26,000 --> 00:00:27,000
对

18
00:00:27,000 --> 00:00:30,000
然后我也念错了字

19
00:00:30,000 --> 00:00:33,000
而且这个错我觉得有点

20
00:00:33,000 --> 00:00:35,000
不可原谅

21
00:00:35,000 --> 00:00:39,000
原谅总是可以原谅

22
00:00:39,000 --> 00:00:40,000
我总是原谅自己

23
00:00:40,000 --> 00:00:43,000
就是这个粘贴

24
00:00:43,000 --> 00:00:44,000
我总是念成粘贴

25
00:00:44,000 --> 00:00:47,000
但我觉得首先粘这个字

26
00:00:47,000 --> 00:00:47,000
是个多音字

27
00:00:47,000 --> 00:00:51,000
然后我个人在听到粘贴的时候

28
00:00:51,000 --> 00:00:53,000
会觉得有点不舒服

29
00:00:53,000 --> 00:00:56,000
所以我可能在很小的时候

30
00:00:56,000 --> 00:00:57,000
就知道我读错

31
00:00:57,000 --> 00:00:59,000
但是我一直都没有改过

32
00:00:59,000 --> 00:01:02,000
其实这个事情我也一直挺模糊的

33
00:01:02,000 --> 00:01:03,000
后来我还专门去查了一下

34
00:01:03,000 --> 00:01:05,000
就是有听众指出这个错误之后

35
00:01:05,000 --> 00:01:07,000
我专门去查了一下词典

36
00:01:07,000 --> 00:01:09,000
我说哎呀原来是这样的

37
00:01:09,000 --> 00:01:09,000
就是说

38
00:01:09,000 --> 00:01:13,000
做动词的时候一定是念粘贴的

39
00:01:13,000 --> 00:01:14,000
然后名词的话

40
00:01:14,000 --> 00:01:16,000
这个就是米字旁这个字

41
00:01:16,000 --> 00:01:18,000
米字旁这个字

42
00:01:18,000 --> 00:01:19,000
念年的时候

43
00:01:19,000 --> 00:01:21,000
只是做一个人的性儿

44
00:01:21,000 --> 00:01:22,000
就是性识

45
00:01:22,000 --> 00:01:25,000
然后年性的年是另外一个

46
00:01:25,000 --> 00:01:26,000
是一个叫鼠字旁

47
00:01:26,000 --> 00:01:27,000
不是米字旁

48
00:01:27,000 --> 00:01:28,000
米字旁的年

49
00:01:28,000 --> 00:01:30,000
在某些词典里面说

50
00:01:30,000 --> 00:01:32,000
它是鼠字旁的那个年的一体字

51
00:01:32,000 --> 00:01:33,000
怎么这么乱

52
00:01:33,000 --> 00:01:34,000
对

53
00:01:34,000 --> 00:01:38,000
所以我做那颗恐慌以来

54
00:01:38,000 --> 00:01:39,000
最大的收获之一

55
00:01:39,000 --> 00:01:40,000
就是语文变得好一点

56
00:01:40,000 --> 00:01:45,000
话也讲得六了

57
00:01:45,000 --> 00:01:45,000
是吧

58
00:01:45,000 --> 00:01:46,000
对

59
00:01:46,000 --> 00:01:49,000
这是一个出乎意料的收获

60
00:01:49,000 --> 00:01:50,000
加以后收获

61
00:01:50,000 --> 00:01:52,000
这也是个进步

62
00:01:52,000 --> 00:01:53,000
其实我也是

63
00:01:53,000 --> 00:01:55,000
对

64
00:01:55,000 --> 00:02:00,000
其实就我们两个在上一期录音的时候说

65
00:02:00,000 --> 00:02:05,000
如果我们下一期做 feedback 的话

66
00:02:05,000 --> 00:02:08,000
会把前两期的 feedback 综合在一起

67
00:02:08,000 --> 00:02:10,000
反馈给大家

68
00:02:10,000 --> 00:02:14,000
但是目前看来不知道是因为过节的缘故

69
00:02:14,000 --> 00:02:16,000
还是怎么样

70
00:02:16,000 --> 00:02:19,000
就过去两期好像没有什么反响

71
00:02:19,000 --> 00:02:21,000
不管是在社交网络上

72
00:02:21,000 --> 00:02:22,000
还是在邮件里面

73
00:02:22,000 --> 00:02:25,000
当然就还是有一些反响

74
00:02:25,000 --> 00:02:27,000
但没有我们想象的那么多

75
00:02:27,000 --> 00:02:29,000
因为我开始预想的时候

76
00:02:29,000 --> 00:02:30,000
至少我们在做那个

77
00:02:30,000 --> 00:02:34,000
memory management 那一期

78
00:02:34,000 --> 00:02:36,000
可能犯了很多很低级的错误

79
00:02:36,000 --> 00:02:39,000
但目前看来没有什么人指出

80
00:02:39,000 --> 00:02:41,000
反而是比如说粘贴粘成粘贴

81
00:02:41,000 --> 00:02:43,000
粘贴粘成粘贴这样低级的语文错误

82
00:02:43,000 --> 00:02:45,000
我总是有听众指出来

83
00:02:45,000 --> 00:02:48,000
不过可能也是因为这个播客

84
00:02:48,000 --> 00:02:50,000
这个媒介的限制

85
00:02:50,000 --> 00:02:54,000
就是有时候你要挑错嘛

86
00:02:54,000 --> 00:02:55,000
你总得知道你家错在哪里

87
00:02:55,000 --> 00:02:57,000
但是有时候你听过之后

88
00:02:57,000 --> 00:02:58,000
不一定能记得下来

89
00:02:58,000 --> 00:03:00,000
或者是你当时想听到了

90
00:03:00,000 --> 00:03:02,000
但是可能一下没联系到之前

91
00:03:02,000 --> 00:03:03,000
他说了什么东西

92
00:03:03,000 --> 00:03:03,000
所以

93
00:03:03,000 --> 00:03:04,000
对

94
00:03:04,000 --> 00:03:06,000
就好像我们在开车的时候

95
00:03:06,000 --> 00:03:10,000
一起听那个出站分配

96
00:03:10,000 --> 00:03:12,000
或者是流行通信的时候

97
00:03:12,000 --> 00:03:12,000
对啊

98
00:03:12,000 --> 00:03:13,000
这个地方

99
00:03:13,000 --> 00:03:15,000
这个地方说的好像不太对啊

100
00:03:15,000 --> 00:03:16,000
然后讨论一阵

101
00:03:16,000 --> 00:03:18,000
但是也不会想起来

102
00:03:18,000 --> 00:03:19,000
要给那个

103
00:03:19,000 --> 00:03:21,000
主持人一些反馈什么的

104
00:03:21,000 --> 00:03:22,000
对啊

105
00:03:22,000 --> 00:03:24,000
所以这里就是有这个问题嘛

106
00:03:24,000 --> 00:03:26,000
大概咱们两个已经在

107
00:03:26,000 --> 00:03:27,000
已经被很多人在

108
00:03:27,000 --> 00:03:29,000
驾驶舱里面骂了很多次了

109
00:03:29,000 --> 00:03:30,000
但

110
00:03:30,000 --> 00:03:31,000
这俩傻逼的

111
00:03:31,000 --> 00:03:32,000
对

112
00:03:32,000 --> 00:03:32,000
又说错了

113
00:03:32,000 --> 00:03:33,000
这种逼的错误都反

114
00:03:33,000 --> 00:03:34,000
哈哈哈哈

115
00:03:34,000 --> 00:03:36,000
但咱们两个也都听不到

116
00:03:36,000 --> 00:03:36,000
所以

117
00:03:36,000 --> 00:03:37,000
嗯

118
00:03:37,000 --> 00:03:40,000
所以还是应该求反馈

119
00:03:40,000 --> 00:03:40,000
就是

120
00:03:40,000 --> 00:03:41,000
不要再

121
00:03:41,000 --> 00:03:43,000
等一下默默的骂完

122
00:03:43,000 --> 00:03:44,000
就就耍了

123
00:03:44,000 --> 00:03:45,000
我们还是要多听一下

124
00:03:45,000 --> 00:03:45,000
然后

125
00:03:45,000 --> 00:03:46,000
对

126
00:03:46,000 --> 00:03:47,000
不仅要当时嘛

127
00:03:47,000 --> 00:03:48,000
还要这个

128
00:03:48,000 --> 00:03:50,000
事后还得接着来信嘛

129
00:03:50,000 --> 00:03:50,000
这个

130
00:03:50,000 --> 00:03:51,000
对

131
00:03:51,000 --> 00:03:52,000
呃

132
00:03:52,000 --> 00:03:53,000
curse

133
00:03:53,000 --> 00:03:53,000
呃

134
00:03:53,000 --> 00:03:54,000
记录下来

135
00:03:54,000 --> 00:03:55,000
发运我们

136
00:03:55,000 --> 00:03:56,000
但是我们改不改是另一回事

137
00:03:56,000 --> 00:03:57,000
哈哈

138
00:03:57,000 --> 00:03:58,000
那起码有可以

139
00:03:58,000 --> 00:04:00,000
有机会可以共同提高嘛

140
00:04:00,000 --> 00:04:01,000
就如果

141
00:04:01,000 --> 00:04:01,000
对

142
00:04:01,000 --> 00:04:03,000
听众朋友你们也有

143
00:04:03,000 --> 00:04:05,000
犯我们类似错误的

144
00:04:05,000 --> 00:04:06,000
就起码我们在

145
00:04:06,000 --> 00:04:08,000
检讨自己错误的时候

146
00:04:08,000 --> 00:04:09,000
你们也能够

147
00:04:09,000 --> 00:04:09,000
呃

148
00:04:09,000 --> 00:04:11,000
知道自己过往的哪里错了

149
00:04:11,000 --> 00:04:12,000
对

150
00:04:12,000 --> 00:04:14,000
而且我觉得一个 podcast

151
00:04:14,000 --> 00:04:15,000
可能最恐怖的事情

152
00:04:15,000 --> 00:04:16,000
不是被很多很多人骂

153
00:04:16,000 --> 00:04:17,000
而是

154
00:04:17,000 --> 00:04:18,000
根本没有人去理睬

155
00:04:18,000 --> 00:04:19,000
所以

156
00:04:19,000 --> 00:04:20,000
呃

157
00:04:20,000 --> 00:04:21,000
如果一个 podcast

158
00:04:21,000 --> 00:04:23,000
总是得不到回应的话

159
00:04:23,000 --> 00:04:24,000
也许就觉得

160
00:04:24,000 --> 00:04:25,000
让制作人觉得

161
00:04:25,000 --> 00:04:26,000
做下去有什么意义呢

162
00:04:26,000 --> 00:04:28,000
但如果有很多人骂的话

163
00:04:28,000 --> 00:04:28,000
反而有可能

164
00:04:28,000 --> 00:04:29,000
我就说

165
00:04:29,000 --> 00:04:29,000
呃

166
00:04:29,000 --> 00:04:31,000
这个还是有点人听的

167
00:04:31,000 --> 00:04:31,000
那我就继续做

168
00:04:31,000 --> 00:04:32,000
哈哈

169
00:04:32,000 --> 00:04:33,000
你说是不是

170
00:04:33,000 --> 00:04:35,000
你说不是贱吗

171
00:04:35,000 --> 00:04:36,000
嗯

172
00:04:36,000 --> 00:04:36,000
对

173
00:04:36,000 --> 00:04:37,000
轮串

174
00:04:37,000 --> 00:04:38,000
不知道轮串

175
00:04:38,000 --> 00:04:39,000
Anyway

176
00:04:39,000 --> 00:04:40,000
嗯

177
00:04:40,000 --> 00:04:42,000
接下来的一条反馈是

178
00:04:42,000 --> 00:04:44,000
听众 lock.e

179
00:04:44,000 --> 00:04:45,000
嗯

180
00:04:45,000 --> 00:04:45,000
发给我的

181
00:04:45,000 --> 00:04:48,000
发给我们的邮箱里面的一条

182
00:04:48,000 --> 00:04:48,000
说

183
00:04:48,000 --> 00:04:49,000
他说

184
00:04:49,000 --> 00:04:49,000
嗯

185
00:04:49,000 --> 00:04:51,000
Swift 没有 gabbage collection

186
00:04:51,000 --> 00:04:53,000
这个是正确的

187
00:04:53,000 --> 00:04:54,000
因为我又回去看了一遍

188
00:04:54,000 --> 00:04:54,000
那个

189
00:04:54,000 --> 00:04:55,000
因为我

190
00:04:55,000 --> 00:04:56,000
之所以会有

191
00:04:56,000 --> 00:04:57,000
Swift

192
00:04:57,000 --> 00:04:58,000
有 GC 的印象是

193
00:04:58,000 --> 00:05:00,000
在最开始的那个

194
00:05:00,000 --> 00:05:01,000
Swift 的

195
00:05:01,000 --> 00:05:03,000
Announcement 的视频里面

196
00:05:03,000 --> 00:05:04,000
嗯

197
00:05:04,000 --> 00:05:04,000
呃

198
00:05:04,000 --> 00:05:06,000
当时有一幅图嘛

199
00:05:06,000 --> 00:05:07,000
就标

200
00:05:07,000 --> 00:05:08,000
写出那 Swift 的

201
00:05:08,000 --> 00:05:09,000
各项新特性

202
00:05:09,000 --> 00:05:10,000
嗯

203
00:05:10,000 --> 00:05:11,000
然后我记得里面

204
00:05:11,000 --> 00:05:12,000
有 gabbage collection

205
00:05:12,000 --> 00:05:13,000
可是我回去翻了一遍

206
00:05:13,000 --> 00:05:14,000
发现其实是没有

207
00:05:14,000 --> 00:05:16,000
对

208
00:05:16,000 --> 00:05:18,000
然后

209
00:05:18,000 --> 00:05:21,000
其实它还是 reference content

210
00:05:21,000 --> 00:05:22,000
只不过

211
00:05:22,000 --> 00:05:24,000
automated

212
00:05:24,000 --> 00:05:26,000
然后也一直没有注意到这件事情

213
00:05:26,000 --> 00:05:26,000
对

214
00:05:26,000 --> 00:05:28,000
所以这件事情是我们错的

215
00:05:28,000 --> 00:05:29,000
然后这个

216
00:05:29,000 --> 00:05:30,000
我不知道为什么

217
00:05:30,000 --> 00:05:31,000
lock.e 这位听众

218
00:05:31,000 --> 00:05:32,000
用 QQ 有项发给我们的

219
00:05:32,000 --> 00:05:34,000
但是我回复的时候说

220
00:05:34,000 --> 00:05:36,000
投递失败

221
00:05:36,000 --> 00:05:38,000
难道 QQ 不能收 Gmail

222
00:05:38,000 --> 00:05:39,000
嗯

223
00:05:39,000 --> 00:05:43,000
你知道最近出了一点点问题吗

224
00:05:43,000 --> 00:05:43,000
听说

225
00:05:43,000 --> 00:05:47,000
但是印象中还是可以的

226
00:05:47,000 --> 00:05:49,000
QQ 的 Gmail 好像没有什么仇吧

227
00:05:49,000 --> 00:05:49,000
对

228
00:05:49,000 --> 00:05:50,000
因为不是那个

229
00:05:50,000 --> 00:05:52,000
因为 QQ 它有些人在海外

230
00:05:52,000 --> 00:05:53,000
或者至少在香港吧

231
00:05:53,000 --> 00:05:54,000
应该是做过什么

232
00:05:54,000 --> 00:05:56,000
呃

233
00:05:56,000 --> 00:05:57,000
就是呃

234
00:05:57,000 --> 00:05:59,000
就墙外服务器的

235
00:05:59,000 --> 00:06:00,000
应该是没有问题的

236
00:06:00,000 --> 00:06:00,000
不知道你的有什么样子

237
00:06:00,000 --> 00:06:01,000
没回事

238
00:06:01,000 --> 00:06:02,000
不跟你们

239
00:06:02,000 --> 00:06:03,000
就这里反馈了

240
00:06:03,000 --> 00:06:04,000
这里讲了也可以了嘛

241
00:06:04,000 --> 00:06:04,000
对

242
00:06:04,000 --> 00:06:05,000
嗯

243
00:06:05,000 --> 00:06:08,000
然后有一位听众

244
00:06:08,000 --> 00:06:08,000
呃

245
00:06:08,000 --> 00:06:09,000
来信说

246
00:06:09,000 --> 00:06:10,000
Ubuntu Mono

247
00:06:10,000 --> 00:06:11,000
也是一个不错

248
00:06:11,000 --> 00:06:12,000
变成字体

249
00:06:12,000 --> 00:06:13,000
而这一点

250
00:06:13,000 --> 00:06:15,000
我觉得我是不能接受

251
00:06:15,000 --> 00:06:16,000
我也不能接受

252
00:06:16,000 --> 00:06:17,000
Ubuntu 那一套字体

253
00:06:17,000 --> 00:06:19,000
真是太丑了

254
00:06:19,000 --> 00:06:20,000
对

255
00:06:20,000 --> 00:06:21,000
不光是 Mono 那一个

256
00:06:21,000 --> 00:06:22,000
它还有一个

257
00:06:22,000 --> 00:06:23,000
那个界面的

258
00:06:23,000 --> 00:06:23,000
UI 的字体

259
00:06:23,000 --> 00:06:25,000
叫什么来的

260
00:06:25,000 --> 00:06:28,000
就是 14 点几里面

261
00:06:28,000 --> 00:06:29,000
就是那个整个

262
00:06:29,000 --> 00:06:30,000
它的桌面环境里面

263
00:06:30,000 --> 00:06:31,000
默认的字体

264
00:06:31,000 --> 00:06:31,000
Ubuntu Display 吗

265
00:06:31,000 --> 00:06:32,000
还是叫什么

266
00:06:32,000 --> 00:06:33,000
忘了

267
00:06:33,000 --> 00:06:34,000
反正它自己处理

268
00:06:34,000 --> 00:06:34,000
看这里

269
00:06:34,000 --> 00:06:35,000
就是那种感觉是很

270
00:06:35,000 --> 00:06:36,000
就是所有的

271
00:06:36,000 --> 00:06:37,000
所有的转角都是原型的

272
00:06:37,000 --> 00:06:37,000
那个

273
00:06:37,000 --> 00:06:38,000
对

274
00:06:38,000 --> 00:06:40,000
它就是为了突出

275
00:06:40,000 --> 00:06:40,000
这个人文主义

276
00:06:40,000 --> 00:06:42,000
就是以人为本的

277
00:06:42,000 --> 00:06:43,000
这个这个这个哲学

278
00:06:43,000 --> 00:06:44,000
就

279
00:06:44,000 --> 00:06:45,000
实在是太丑了

280
00:06:45,000 --> 00:06:46,000
实在是太丑了

281
00:06:46,000 --> 00:06:47,000
把一套科技字体

282
00:06:47,000 --> 00:06:48,000
也不是科技字体

283
00:06:48,000 --> 00:06:49,000
反正就把它

284
00:06:49,000 --> 00:06:50,000
试图通过字体来

285
00:06:50,000 --> 00:06:52,000
反射出它那种

286
00:06:52,000 --> 00:06:53,000
圆滑的

287
00:06:53,000 --> 00:06:55,000
具有人情味的

288
00:06:55,000 --> 00:06:56,000
这么一套系统

289
00:06:56,000 --> 00:06:57,000
但

290
00:06:57,000 --> 00:06:59,000
我觉得是失败了

291
00:06:59,000 --> 00:06:59,000
但

292
00:06:59,000 --> 00:07:01,000
不是针对这个听众

293
00:07:01,000 --> 00:07:01,000
但

294
00:07:01,000 --> 00:07:03,000
我是觉得

295
00:07:03,000 --> 00:07:05,000
使用 Ubuntu Mono

296
00:07:05,000 --> 00:07:07,000
并

297
00:07:07,000 --> 00:07:08,000
是作为变成字体的人

298
00:07:08,000 --> 00:07:09,000
真是没有什么

299
00:07:09,000 --> 00:07:11,000
sorry

300
00:07:11,000 --> 00:07:13,000
非常对不起

301
00:07:13,000 --> 00:07:14,000
但比如说

302
00:07:14,000 --> 00:07:15,000
就是

303
00:07:15,000 --> 00:07:17,000
我专门又去看了一下

304
00:07:17,000 --> 00:07:18,000
这个字体

305
00:07:18,000 --> 00:07:19,000
甚至

306
00:07:19,000 --> 00:07:21,000
大写的 I 比

307
00:07:21,000 --> 00:07:23,000
小写的 L 要短一点

308
00:07:23,000 --> 00:07:23,000
然后

309
00:07:23,000 --> 00:07:24,000
你在

310
00:07:24,000 --> 00:07:27,000
就是它会让你的阅读

311
00:07:27,000 --> 00:07:28,000
那样的视线

312
00:07:28,000 --> 00:07:30,000
变得比较受到干扰

313
00:07:30,000 --> 00:07:30,000
就是

314
00:07:30,000 --> 00:07:32,000
不一致了

315
00:07:32,000 --> 00:07:32,000
你会情不自禁地去

316
00:07:32,000 --> 00:07:34,000
不你会情不自禁地去

317
00:07:34,000 --> 00:07:36,000
注意到这款字体的

318
00:07:36,000 --> 00:07:38,000
夹阔弧的设计上面

319
00:07:38,000 --> 00:07:39,000
对

320
00:07:39,000 --> 00:07:40,000
这个感觉

321
00:07:40,000 --> 00:07:41,000
就是每次感觉

322
00:07:41,000 --> 00:07:41,000
哇

323
00:07:41,000 --> 00:07:43,000
这好像有点太

324
00:07:43,000 --> 00:07:44,000
对

325
00:07:44,000 --> 00:07:45,000
它会非常跳脱出来

326
00:07:45,000 --> 00:07:47,000
会呐喊着

327
00:07:47,000 --> 00:07:48,000
让你注意到

328
00:07:48,000 --> 00:07:49,000
它们的存在

329
00:07:49,000 --> 00:07:50,000
不够撒走的

330
00:07:50,000 --> 00:07:50,000
对

331
00:07:50,000 --> 00:07:51,000
这是非常

332
00:07:51,000 --> 00:07:53,000
非常影响

333
00:07:53,000 --> 00:07:54,000
字体质量的

334
00:07:54,000 --> 00:07:54,000
一个

335
00:07:54,000 --> 00:07:56,000
一个特性

336
00:07:56,000 --> 00:07:58,000
就其实还是因为丑

337
00:07:58,000 --> 00:07:59,000
而且丑得那么

338
00:07:59,000 --> 00:08:00,000
那么喧嚣

339
00:08:00,000 --> 00:08:03,000
anyway

340
00:08:03,000 --> 00:08:04,000
这丑话说够了

341
00:08:04,000 --> 00:08:05,000
还好

342
00:08:05,000 --> 00:08:05,000
还好

343
00:08:05,000 --> 00:08:06,000
我们这个审美

344
00:08:06,000 --> 00:08:07,000
取向比较一致

345
00:08:07,000 --> 00:08:09,000
不然这里就打起来

346
00:08:09,000 --> 00:08:09,000
对

347
00:08:09,000 --> 00:08:11,000
对

348
00:08:11,000 --> 00:08:12,000
我觉得这可能是

349
00:08:12,000 --> 00:08:13,000
IT 公文

350
00:08:13,000 --> 00:08:14,000
比较具有可听性的

351
00:08:14,000 --> 00:08:14,000
一个特点

352
00:08:14,000 --> 00:08:14,000
就是

353
00:08:14,000 --> 00:08:18,000
你跟 Lawrence 的

354
00:08:18,000 --> 00:08:20,000
观点

355
00:08:20,000 --> 00:08:20,000
总是

356
00:08:20,000 --> 00:08:22,000
趋向于不同的

357
00:08:22,000 --> 00:08:24,000
而咱们这边

358
00:08:24,000 --> 00:08:25,000
总是说

359
00:08:25,000 --> 00:08:25,000
你说什么什么

360
00:08:25,000 --> 00:08:26,000
我说对

361
00:08:26,000 --> 00:08:27,000
然后我说什么

362
00:08:27,000 --> 00:08:27,000
你说对

363
00:08:27,000 --> 00:08:30,000
实际上咱们都是

364
00:08:30,000 --> 00:08:31,000
这个什么

365
00:08:31,000 --> 00:08:32,000
同行

366
00:08:32,000 --> 00:08:33,000
对

367
00:08:33,000 --> 00:08:34,000
实际上咱俩是一个阵营

368
00:08:34,000 --> 00:08:36,000
下次应该请另一个阵营了

369
00:08:36,000 --> 00:08:36,000
但

370
00:08:36,000 --> 00:08:37,000
我也不知道

371
00:08:37,000 --> 00:08:39,000
好吧

372
00:08:39,000 --> 00:08:44,000
然后 IT 公论上一期

373
00:08:44,000 --> 00:08:45,000
我们上一期录音的时候

374
00:08:45,000 --> 00:08:46,000
你告诉我说

375
00:08:46,000 --> 00:08:47,000
要听下一期 IT 公论

376
00:08:47,000 --> 00:08:49,000
关于苹果开发者的部分

377
00:08:49,000 --> 00:08:51,000
你们吐槽了

378
00:08:51,000 --> 00:08:52,000
苹果对于开发者

379
00:08:52,000 --> 00:08:53,000
是多么的不友好

380
00:08:53,000 --> 00:08:53,000
但

381
00:08:53,000 --> 00:08:57,000
怎么说呢

382
00:08:57,000 --> 00:08:57,000
我觉得

383
00:08:57,000 --> 00:09:00,000
这里没有一点

384
00:09:00,000 --> 00:09:02,000
就是我强调的是

385
00:09:02,000 --> 00:09:04,000
苹果对于开发者好的那部分

386
00:09:04,000 --> 00:09:06,000
是他们的工程师

387
00:09:06,000 --> 00:09:08,000
所呈现出来的

388
00:09:08,000 --> 00:09:10,000
对于开发者的那一面

389
00:09:10,000 --> 00:09:11,000
而你们所强调的则是

390
00:09:11,000 --> 00:09:13,000
其审核部门

391
00:09:13,000 --> 00:09:14,000
或者说

392
00:09:14,000 --> 00:09:14,000
他们

393
00:09:14,000 --> 00:09:18,000
管控的这一部分

394
00:09:18,000 --> 00:09:20,000
对于开发者不友好的部分

395
00:09:20,000 --> 00:09:22,000
我觉得两者其实是

396
00:09:22,000 --> 00:09:24,000
当然是冲突的

397
00:09:24,000 --> 00:09:24,000
但是在我看来

398
00:09:24,000 --> 00:09:26,000
就是我比较看重的是

399
00:09:26,000 --> 00:09:27,000
工程师的那一部分

400
00:09:27,000 --> 00:09:30,000
因为我自己反正不是一个

401
00:09:30,000 --> 00:09:32,000
要给什么第三方看法

402
00:09:32,000 --> 00:09:34,000
要给最终用户做 APP 的人

403
00:09:34,000 --> 00:09:36,000
那我所关注的

404
00:09:36,000 --> 00:09:37,000
就只管写的爽了

405
00:09:37,000 --> 00:09:38,000
对

406
00:09:38,000 --> 00:09:39,000
我所关注的只是

407
00:09:39,000 --> 00:09:40,000
他提供了什么样的工具

408
00:09:40,000 --> 00:09:42,000
以及他的生态系统

409
00:09:42,000 --> 00:09:43,000
看起来是怎么样的

410
00:09:43,000 --> 00:09:44,000
但至于这套生态系统

411
00:09:44,000 --> 00:09:46,000
能不能被管理层

412
00:09:46,000 --> 00:09:49,000
以一种什么样的形式

413
00:09:49,000 --> 00:09:50,000
转化为

414
00:09:50,000 --> 00:09:53,000
对于最终用户友好的一部分

415
00:09:53,000 --> 00:09:54,000
我觉得这个

416
00:09:54,000 --> 00:09:55,000
对于我们来说

417
00:09:55,000 --> 00:09:55,000
没有什么 concern

418
00:09:55,000 --> 00:10:00,000
而且说实话

419
00:10:00,000 --> 00:10:03,000
当我第一次听说

420
00:10:03,000 --> 00:10:05,000
Peacock 要在

421
00:10:05,000 --> 00:10:08,000
today widget 里面

422
00:10:08,000 --> 00:10:09,000
做一个计算器的时候

423
00:10:09,000 --> 00:10:10,000
我的第一反应

424
00:10:10,000 --> 00:10:10,000
其实是

425
00:10:10,000 --> 00:10:12,000
为什么要做计算器呢

426
00:10:12,000 --> 00:10:14,000
我觉得这个东西

427
00:10:14,000 --> 00:10:15,000
不属于 today

428
00:10:15,000 --> 00:10:16,000
你没有我的意思吗

429
00:10:16,000 --> 00:10:19,000
你觉得他那个语境不对

430
00:10:19,000 --> 00:10:21,000
不符合那个东西

431
00:10:21,000 --> 00:10:21,000
这个东西

432
00:10:21,000 --> 00:10:23,000
不应该出现在那儿

433
00:10:23,000 --> 00:10:27,000
我是 somehow 支持审核者的决定的

434
00:10:27,000 --> 00:10:30,000
怎么说呢

435
00:10:30,000 --> 00:10:34,000
就是你是严格按照

436
00:10:34,000 --> 00:10:36,000
today view 的名字

437
00:10:36,000 --> 00:10:37,000
或者这个含义来确定

438
00:10:37,000 --> 00:10:39,000
它应该包含什么东西

439
00:10:39,000 --> 00:10:40,000
不应该包含什么东西

440
00:10:40,000 --> 00:10:41,000
对

441
00:10:41,000 --> 00:10:42,000
当然你也可以说

442
00:10:42,000 --> 00:10:43,000
today 里面出现了很多东西

443
00:10:43,000 --> 00:10:45,000
其实不一定跟 today 完全相关

444
00:10:45,000 --> 00:10:47,000
就是这条线是很难划定的

445
00:10:47,000 --> 00:10:48,000
这个我承认

446
00:10:48,000 --> 00:10:48,000
比如说

447
00:10:48,000 --> 00:10:49,000
Evernote

448
00:10:49,000 --> 00:10:51,000
或者是 instapaper

449
00:10:51,000 --> 00:10:53,000
在那边出现一个 vidget

450
00:10:53,000 --> 00:10:56,000
显示你可以读的东西

451
00:10:56,000 --> 00:10:57,000
或者是你可以直接在

452
00:10:57,000 --> 00:10:58,000
Evernote 里面做一些事情

453
00:10:58,000 --> 00:11:00,000
可能也跟 today

454
00:11:00,000 --> 00:11:01,000
没有什么直接的关系

455
00:11:01,000 --> 00:11:03,000
但是 peacock 这个东西

456
00:11:03,000 --> 00:11:04,000
在我看来

457
00:11:04,000 --> 00:11:05,000
你在一个

458
00:11:05,000 --> 00:11:07,000
本来是应该提供

459
00:11:07,000 --> 00:11:11,000
通知和总结的地方

460
00:11:11,000 --> 00:11:12,000
做了一个计算器

461
00:11:12,000 --> 00:11:13,000
在我看来这是 mysius

462
00:11:13,000 --> 00:11:16,000
对

463
00:11:16,000 --> 00:11:18,000
这个怎么讲呢

464
00:11:18,000 --> 00:11:21,000
就是说肯定从

465
00:11:21,000 --> 00:11:22,000
刚才讲的

466
00:11:22,000 --> 00:11:23,000
你是一个非常合理的

467
00:11:23,000 --> 00:11:23,000
一个说法

468
00:11:23,000 --> 00:11:24,000
就是说你这个

469
00:11:24,000 --> 00:11:25,000
不应该出现在

470
00:11:25,000 --> 00:11:25,000
那个地方是吧

471
00:11:25,000 --> 00:11:27,000
你就为什么要出现在

472
00:11:27,000 --> 00:11:27,000
那个地方

473
00:11:27,000 --> 00:11:28,000
但是我觉得

474
00:11:28,000 --> 00:11:30,000
这个选择的自由

475
00:11:30,000 --> 00:11:31,000
难道不是应该

476
00:11:31,000 --> 00:11:32,000
用户来决定的吗

477
00:11:32,000 --> 00:11:35,000
用户是不知道自己要是

478
00:11:35,000 --> 00:11:37,000
但问题是说

479
00:11:37,000 --> 00:11:38,000
这么说

480
00:11:38,000 --> 00:11:39,000
好

481
00:11:39,000 --> 00:11:40,000
那我也是个用户

482
00:11:40,000 --> 00:11:42,000
那我觉得这个地方

483
00:11:42,000 --> 00:11:43,000
不应该出现 pika

484
00:11:43,000 --> 00:11:43,000
你怎么说

485
00:11:43,000 --> 00:11:45,000
那你不要装备

486
00:11:45,000 --> 00:11:46,000
就是那个

487
00:11:46,000 --> 00:11:47,000
不是默认启动的吗

488
00:11:47,000 --> 00:11:49,000
你要手机填下到里面

489
00:11:49,000 --> 00:11:51,000
在审核者那边

490
00:11:51,000 --> 00:11:52,000
不应该替用户

491
00:11:52,000 --> 00:11:53,000
做出决定

492
00:11:53,000 --> 00:11:53,000
这个东西

493
00:11:53,000 --> 00:11:54,000
不可以在那出现

494
00:11:54,000 --> 00:11:55,000
对

495
00:11:55,000 --> 00:11:56,000
就说除非他

496
00:11:56,000 --> 00:11:58,000
除非他违反了某一条

497
00:11:58,000 --> 00:11:59,000
这个就是说

498
00:11:59,000 --> 00:12:00,000
对你这个东西

499
00:12:00,000 --> 00:12:01,000
有明显的损害

500
00:12:01,000 --> 00:12:01,000
对吧

501
00:12:01,000 --> 00:12:03,000
是这种不痛不痒的事情

502
00:12:03,000 --> 00:12:06,000
那我的就是默认的

503
00:12:06,000 --> 00:12:07,000
一个选择就是

504
00:12:07,000 --> 00:12:09,000
不要限制选择的自由

505
00:12:09,000 --> 00:12:10,000
OK

506
00:12:10,000 --> 00:12:12,000
没有人阻止

507
00:12:12,000 --> 00:12:14,000
没有人阻止你去往

508
00:12:14,000 --> 00:12:15,000
这个 Today 那个 view

509
00:12:15,000 --> 00:12:17,000
里面加一个计算器

510
00:12:17,000 --> 00:12:18,000
但是也没有人

511
00:12:18,000 --> 00:12:19,000
强迫你往里面加

512
00:12:19,000 --> 00:12:19,000
对吧

513
00:12:19,000 --> 00:12:20,000
这完全是一个用户

514
00:12:20,000 --> 00:12:21,000
可以选择的东西

515
00:12:21,000 --> 00:12:22,000
而且他默认是

516
00:12:22,000 --> 00:12:24,000
默认是没有的

517
00:12:24,000 --> 00:12:25,000
OK

518
00:12:25,000 --> 00:12:26,000
所以实际上

519
00:12:26,000 --> 00:12:27,000
这是一种管理哲学的分歧

520
00:12:27,000 --> 00:12:28,000
就是你觉得

521
00:12:28,000 --> 00:12:30,000
你不应该替用户

522
00:12:30,000 --> 00:12:31,000
做出太多的决定

523
00:12:31,000 --> 00:12:31,000
而我觉得

524
00:12:31,000 --> 00:12:33,000
你应该

525
00:12:33,000 --> 00:12:36,000
或者我应该替用户

526
00:12:36,000 --> 00:12:36,000
做出一些

527
00:12:36,000 --> 00:12:38,000
看起来让我觉得

528
00:12:38,000 --> 00:12:38,000
不爽的决定

529
00:12:38,000 --> 00:12:40,000
我觉得你可以

530
00:12:40,000 --> 00:12:41,000
替用户做决定

531
00:12:41,000 --> 00:12:42,000
比如说你默认

532
00:12:42,000 --> 00:12:44,000
比如你给一个

533
00:12:44,000 --> 00:12:47,000
在开发者责力里面

534
00:12:47,000 --> 00:12:47,000
说明说

535
00:12:47,000 --> 00:12:49,000
Todayview 应该是

536
00:12:49,000 --> 00:12:50,000
主要用来干什么的

537
00:12:50,000 --> 00:12:52,000
然后你不鼓励什么东西

538
00:12:52,000 --> 00:12:53,000
但是你不能说

539
00:12:53,000 --> 00:12:54,000
因为我不鼓励这个

540
00:12:54,000 --> 00:12:56,000
所以我完全禁止你做这个

541
00:12:56,000 --> 00:12:56,000
对吧

542
00:12:56,000 --> 00:12:58,000
因为这个并不是一个

543
00:12:58,000 --> 00:12:59,000
就是有些人

544
00:12:59,000 --> 00:13:00,000
就是愿意这样使用的

545
00:13:00,000 --> 00:13:02,000
因为方便

546
00:13:02,000 --> 00:13:03,000
拉下来之后

547
00:13:03,000 --> 00:13:04,000
他并不是把这个

548
00:13:04,000 --> 00:13:06,000
Todayview 当成一个

549
00:13:06,000 --> 00:13:07,000
按字面意义上讲的是

550
00:13:07,000 --> 00:13:08,000
今日相关的事情

551
00:13:08,000 --> 00:13:09,000
而是说

552
00:13:09,000 --> 00:13:11,000
作为一个能够比较快捷的

553
00:13:11,000 --> 00:13:13,000
启动一个

554
00:13:13,000 --> 00:13:15,000
或者甚至不用启动程序的

555
00:13:15,000 --> 00:13:17,000
一个完成一个功能的方式

556
00:13:17,000 --> 00:13:17,000
对吧

557
00:13:17,000 --> 00:13:18,000
这个也很难说

558
00:13:18,000 --> 00:13:20,000
好吧

559
00:13:20,000 --> 00:13:21,000
但在我看来

560
00:13:21,000 --> 00:13:22,000
这就好像

561
00:13:22,000 --> 00:13:24,000
在 Bookmark 上面

562
00:13:24,000 --> 00:13:27,000
用一个 JavaScript 的小程序

563
00:13:27,000 --> 00:13:29,000
来完成一件事情

564
00:13:29,000 --> 00:13:30,000
叫做什么 Bookmarklet

565
00:13:30,000 --> 00:13:31,000
一样是一种

566
00:13:31,000 --> 00:13:33,000
是一种误用

567
00:13:33,000 --> 00:13:35,000
但是这个你

568
00:13:35,000 --> 00:13:37,000
但你不可否认

569
00:13:37,000 --> 00:13:38,000
就是说这种情况有些

570
00:13:38,000 --> 00:13:39,000
它是方便

571
00:13:39,000 --> 00:13:40,000
但是它错了

572
00:13:40,000 --> 00:13:41,000
所谓 Power User

573
00:13:41,000 --> 00:13:42,000
它就是要这样用

574
00:13:42,000 --> 00:13:44,000
就是我不反对说

575
00:13:44,000 --> 00:13:46,000
你只出一种

576
00:13:46,000 --> 00:13:47,000
它应该做什么

577
00:13:47,000 --> 00:13:48,000
但是你不能说

578
00:13:48,000 --> 00:13:50,000
我完全禁止你做什么

579
00:13:50,000 --> 00:13:52,000
你是一个

580
00:13:52,000 --> 00:13:54,000
就你并不是用户自己

581
00:13:54,000 --> 00:13:54,000
有用户

582
00:13:54,000 --> 00:13:56,000
他可能他就是需要这样需求

583
00:13:56,000 --> 00:13:56,000
对吧

584
00:13:56,000 --> 00:13:57,000
他发现可以这么用

585
00:13:57,000 --> 00:13:58,000
我觉得还挺方便

586
00:13:58,000 --> 00:14:00,000
你为什么要干涉

587
00:14:00,000 --> 00:14:01,000
用户的自由

588
00:14:01,000 --> 00:14:02,000
如果照这种逻辑发展下去

589
00:14:02,000 --> 00:14:04,000
那这个不就成了独裁专制吗

590
00:14:04,000 --> 00:14:05,000
那 OS 10 上面

591
00:14:05,000 --> 00:14:07,000
我们那些什么定制化的

592
00:14:07,000 --> 00:14:09,000
那么什么 Pro User 的工具

593
00:14:09,000 --> 00:14:10,000
就不要搞了

594
00:14:10,000 --> 00:14:11,000
不但我觉得

595
00:14:11,000 --> 00:14:13,000
这个不算独裁专制吧

596
00:14:13,000 --> 00:14:13,000
这个算

597
00:14:13,000 --> 00:14:14,000
比如说

598
00:14:14,000 --> 00:14:16,000
你

599
00:14:16,000 --> 00:14:18,000
这实际上是

600
00:14:18,000 --> 00:14:18,000
是虽然

601
00:14:18,000 --> 00:14:19,000
但是这个

602
00:14:19,000 --> 00:14:21,000
用这个词造句

603
00:14:21,000 --> 00:14:21,000
你是

604
00:14:21,000 --> 00:14:23,000
你是愿意说

605
00:14:23,000 --> 00:14:25,000
虽然这样做是错的

606
00:14:25,000 --> 00:14:26,000
但是用户有这样的需求

607
00:14:26,000 --> 00:14:27,000
还是说

608
00:14:27,000 --> 00:14:29,000
虽然用户有这个需求

609
00:14:29,000 --> 00:14:30,000
但是这样做是错的呢

610
00:14:30,000 --> 00:14:31,000
那我可以说

611
00:14:31,000 --> 00:14:33,000
就其实这就好像

612
00:14:33,000 --> 00:14:33,000
怎么说

613
00:14:33,000 --> 00:14:34,000
花园里面的草坪

614
00:14:34,000 --> 00:14:36,000
你说

615
00:14:36,000 --> 00:14:39,000
虽然用户

616
00:14:39,000 --> 00:14:41,000
从 A 点走到 B 点

617
00:14:41,000 --> 00:14:42,000
直接穿过草坪

618
00:14:42,000 --> 00:14:43,000
是最方便的

619
00:14:43,000 --> 00:14:44,000
但是

620
00:14:44,000 --> 00:14:45,000
我就不要

621
00:14:45,000 --> 00:14:46,000
我不要这样修路

622
00:14:46,000 --> 00:14:47,000
因为那样会破坏草坪的

623
00:14:47,000 --> 00:14:48,000
整个设计

624
00:14:48,000 --> 00:14:49,000
或者是美观

625
00:14:49,000 --> 00:14:50,000
你也可以说

626
00:14:50,000 --> 00:14:51,000
虽然这样设计

627
00:14:51,000 --> 00:14:52,000
看起来是横平竖直的

628
00:14:52,000 --> 00:14:54,000
但是会使得

629
00:14:54,000 --> 00:14:55,000
用户从 A 点到 B 点

630
00:14:55,000 --> 00:14:57,000
不得不绕一段弯路

631
00:14:57,000 --> 00:14:59,000
他有可能会去踩草坪

632
00:14:59,000 --> 00:15:01,000
这个跟专制没什么关系吧

633
00:15:01,000 --> 00:15:02,000
这只是一种

634
00:15:02,000 --> 00:15:05,000
就是我愿意把我的这套设计哲学

635
00:15:05,000 --> 00:15:08,000
放在我的软件餐库里面

636
00:15:08,000 --> 00:15:11,000
或者说施加在我的软件餐库上面

637
00:15:11,000 --> 00:15:13,000
那你不爱用可以别用

638
00:15:13,000 --> 00:15:14,000
你不想进去花

639
00:15:14,000 --> 00:15:14,000
又可以别进

640
00:15:14,000 --> 00:15:16,000
这跟独裁没什么关系吧

641
00:15:16,000 --> 00:15:17,000
但问题是说

642
00:15:17,000 --> 00:15:19,000
你这样限制了之后

643
00:15:19,000 --> 00:15:20,000
你得到了什么呢

644
00:15:20,000 --> 00:15:22,000
我得到了

645
00:15:22,000 --> 00:15:23,000
我的

646
00:15:23,000 --> 00:15:24,000
你认为的美观对吧

647
00:15:24,000 --> 00:15:25,000
对啊

648
00:15:25,000 --> 00:15:27,000
如果我是一个园林设计者的话

649
00:15:27,000 --> 00:15:31,000
我希望我的游园客人来欣赏园林

650
00:15:31,000 --> 00:15:32,000
或者说使用我的园林

651
00:15:32,000 --> 00:15:33,000
在我园林里面玩

652
00:15:33,000 --> 00:15:35,000
那我不希望他们踩草坪

653
00:15:35,000 --> 00:15:36,000
这难道不是对的吗

654
00:15:36,000 --> 00:15:38,000
所以我觉得这里要讲

655
00:15:38,000 --> 00:15:41,000
我就是这个以前也很多人引用的那个故事

656
00:15:41,000 --> 00:15:44,000
说这个迪斯尼的公园里面怎么修草坪

657
00:15:44,000 --> 00:15:45,000
就先把草坪铺上

658
00:15:45,000 --> 00:15:47,000
然后让游客随便进去踩

659
00:15:47,000 --> 00:15:49,000
然后踩过一段时间之后

660
00:15:49,000 --> 00:15:51,000
看哪个地方的脚印多

661
00:15:51,000 --> 00:15:52,000
就在那边挖一条路

662
00:15:52,000 --> 00:15:52,000
修一条路

663
00:15:52,000 --> 00:15:53,000
对

664
00:15:53,000 --> 00:15:54,000
这个我也听过

665
00:15:54,000 --> 00:15:55,000
但这是一种

666
00:15:55,000 --> 00:15:56,000
这是一种

667
00:15:56,000 --> 00:15:57,000
怎么说呢

668
00:15:57,000 --> 00:15:59,000
这是一种没有设计的设计

669
00:15:59,000 --> 00:16:00,000
就是无为而至

670
00:16:00,000 --> 00:16:02,000
就随机应变设计

671
00:16:02,000 --> 00:16:05,000
但我就想要修一条像那个

672
00:16:05,000 --> 00:16:06,000
修一个像那个

673
00:16:06,000 --> 00:16:09,000
发射赛工一样的横平竖直的草坪

674
00:16:09,000 --> 00:16:11,000
那这套方法就行不通了

675
00:16:11,000 --> 00:16:13,000
所以我说我就是要这么任性

676
00:16:13,000 --> 00:16:14,000
对啊

677
00:16:14,000 --> 00:16:15,000
但我也不知道

678
00:16:15,000 --> 00:16:17,000
我觉得苹果是一个比较

679
00:16:17,000 --> 00:16:18,000
control freak 的公司

680
00:16:18,000 --> 00:16:21,000
但是起码它现在 back off

681
00:16:21,000 --> 00:16:23,000
就是它已经取消了两个决定

682
00:16:23,000 --> 00:16:23,000
因为这个

683
00:16:23,000 --> 00:16:25,000
因为其实你从这个

684
00:16:25,000 --> 00:16:27,000
取舍利益的角度来讲

685
00:16:27,000 --> 00:16:29,000
确实是真的很不值得

686
00:16:29,000 --> 00:16:30,000
因为首先这个 todayview

687
00:16:30,000 --> 00:16:31,000
这个东西本来就是一个

688
00:16:31,000 --> 00:16:33,000
深造出来的一个功能

689
00:16:33,000 --> 00:16:36,000
然后真正有没有多少用户需求

690
00:16:36,000 --> 00:16:36,000
这个很难讲

691
00:16:36,000 --> 00:16:39,000
而且其实按照我自己的观察来看

692
00:16:39,000 --> 00:16:41,000
我完全意义的验证

693
00:16:41,000 --> 00:16:42,000
按照你刚才讲的那种

694
00:16:42,000 --> 00:16:44,000
字面上的 todayview 的东西

695
00:16:44,000 --> 00:16:46,000
其实我是很少去用它的

696
00:16:46,000 --> 00:16:47,000
但是如果有一个什么小工具

697
00:16:47,000 --> 00:16:47,000
那你

698
00:16:47,000 --> 00:16:50,000
我现在有装一个小工具在里面

699
00:16:50,000 --> 00:16:51,000
但是我还有经常去看它

700
00:16:51,000 --> 00:16:53,000
所以这里面就是说

701
00:16:53,000 --> 00:16:56,000
你可以去深造出来一个东西

702
00:16:56,000 --> 00:16:58,000
但是它是不是真的符合用户的需求

703
00:16:58,000 --> 00:16:59,000
这个是很难说的

704
00:16:59,000 --> 00:17:01,000
所以我觉得面对这种情况的话

705
00:17:01,000 --> 00:17:04,000
还是给开发者和用户

706
00:17:04,000 --> 00:17:05,000
一个选择的自由

707
00:17:05,000 --> 00:17:07,000
我觉得这种方式是更好的

708
00:17:07,000 --> 00:17:12,000
我觉得其实更加合理的一个选择

709
00:17:12,000 --> 00:17:14,000
是开放那个

710
00:17:14,000 --> 00:17:17,000
从下面往上拉的那个

711
00:17:17,000 --> 00:17:19,000
叫什么 control sensor 的

712
00:17:19,000 --> 00:17:19,000
对对对

713
00:17:19,000 --> 00:17:21,000
的 widget 开发

714
00:17:21,000 --> 00:17:23,000
因为计算器

715
00:17:23,000 --> 00:17:25,000
如果你可以替换那个默认计算器的话

716
00:17:25,000 --> 00:17:27,000
那我觉得我没有任何话说了

717
00:17:27,000 --> 00:17:28,000
因为那个地方

718
00:17:28,000 --> 00:17:30,000
本来就是让你干那个事情用的

719
00:17:30,000 --> 00:17:30,000
对吧

720
00:17:30,000 --> 00:17:31,000
就它那个

721
00:17:31,000 --> 00:17:33,000
其实它有点性质不一样

722
00:17:33,000 --> 00:17:34,000
就 control sensor 里面

723
00:17:34,000 --> 00:17:35,000
对你拉下来

724
00:17:35,000 --> 00:17:37,000
它比如四个这个快捷启动

725
00:17:37,000 --> 00:17:41,000
它默认的是这个电筒

726
00:17:41,000 --> 00:17:42,000
然后这个什么

727
00:17:42,000 --> 00:17:45,000
是这个闹钟

728
00:17:45,000 --> 00:17:46,000
手边没有

729
00:17:46,000 --> 00:17:46,000
对

730
00:17:46,000 --> 00:17:47,000
秒表

731
00:17:47,000 --> 00:17:48,000
然后是计算器

732
00:17:48,000 --> 00:17:49,000
然后照相机

733
00:17:49,000 --> 00:17:49,000
对

734
00:17:49,000 --> 00:17:53,000
但其实这里就有一些奇怪的

735
00:17:53,000 --> 00:17:53,000
就说

736
00:17:53,000 --> 00:17:56,000
为什么会把计算器放在那里

737
00:17:56,000 --> 00:18:01,000
因为计算的确是一个需要便捷使用的功能

738
00:18:01,000 --> 00:18:03,000
就美国人总是要算小费

739
00:18:03,000 --> 00:18:05,000
算账单什么的

740
00:18:05,000 --> 00:18:06,000
那其实这里就出现了一个问题了

741
00:18:06,000 --> 00:18:08,000
这四个纽是说

742
00:18:08,000 --> 00:18:10,000
它按照某一个方式

743
00:18:10,000 --> 00:18:11,000
要么是数据统计

744
00:18:11,000 --> 00:18:12,000
要么是拍脑袋拍出来

745
00:18:12,000 --> 00:18:14,000
这个四个是应该会比较常用的功能

746
00:18:14,000 --> 00:18:15,000
对吧

747
00:18:15,000 --> 00:18:15,000
但是

748
00:18:15,000 --> 00:18:17,000
就真的这四个功能

749
00:18:17,000 --> 00:18:19,000
是所有人都最常用的四个功能吗

750
00:18:19,000 --> 00:18:20,000
这个也很难讲

751
00:18:20,000 --> 00:18:20,000
对不对

752
00:18:20,000 --> 00:18:21,000
对

753
00:18:21,000 --> 00:18:21,000
这就是我说

754
00:18:21,000 --> 00:18:24,000
为什么要应该开放这个东西的

755
00:18:24,000 --> 00:18:26,000
是那个开发 API

756
00:18:26,000 --> 00:18:28,000
就如果我可以自由定义

757
00:18:28,000 --> 00:18:29,000
这四个快捷方式的话

758
00:18:29,000 --> 00:18:32,000
那 Todavio 不就可以去服务

759
00:18:32,000 --> 00:18:34,000
其本该服务的东西了吗

760
00:18:34,000 --> 00:18:35,000
所以这里来讲

761
00:18:35,000 --> 00:18:36,000
就是还有点不一样

762
00:18:36,000 --> 00:18:38,000
就是像 Peacock 那件事情里面

763
00:18:38,000 --> 00:18:41,000
它是等于是在 Todavio 里面

764
00:18:41,000 --> 00:18:43,000
直接做了一个计算机

765
00:18:43,000 --> 00:18:44,000
你甚至都不需要单独启动它

766
00:18:44,000 --> 00:18:46,000
但是如果你用这个 control center

767
00:18:46,000 --> 00:18:47,000
下面那四个纽

768
00:18:47,000 --> 00:18:49,000
你其实还是要启动那个程序

769
00:18:49,000 --> 00:18:50,000
还是来跳一下的

770
00:18:50,000 --> 00:18:52,000
你用完之后还得再跳回来

771
00:18:52,000 --> 00:18:52,000
对吧

772
00:18:52,000 --> 00:18:55,000
所以其实你说那下面 control center

773
00:18:55,000 --> 00:18:56,000
那四个快捷方菜单

774
00:18:56,000 --> 00:18:58,000
对应的那个 APP

775
00:18:58,000 --> 00:18:59,000
其实应该是那个叫什么

776
00:18:59,000 --> 00:18:59,000
Launch

777
00:18:59,000 --> 00:19:01,000
Launch Pro 还是 Launch Center

778
00:19:01,000 --> 00:19:01,000
对

779
00:19:01,000 --> 00:19:04,000
它也在那个 Todavio 里面

780
00:19:04,000 --> 00:19:06,000
做了这种快速启动的一个钮

781
00:19:06,000 --> 00:19:07,000
就是它在里面放了几个那种

782
00:19:07,000 --> 00:19:10,000
那种你自定义的这个 icon

783
00:19:10,000 --> 00:19:11,000
然后你拉下来之后

784
00:19:11,000 --> 00:19:12,000
就把它这个点进去

785
00:19:12,000 --> 00:19:16,000
但是从这种角度来讲

786
00:19:16,000 --> 00:19:17,000
你说其实你

787
00:19:17,000 --> 00:19:19,000
它苹果应该开放那四个

788
00:19:19,000 --> 00:19:20,000
其实是满足刚才讲

789
00:19:20,000 --> 00:19:21,000
那个 Launch Pro

790
00:19:21,000 --> 00:19:22,000
还是 Launch Center

791
00:19:22,000 --> 00:19:24,000
那个软件对 Todavio 的

792
00:19:24,000 --> 00:19:25,000
滥用的问题

793
00:19:25,000 --> 00:19:29,000
但是你就像 Peacock 那种

794
00:19:29,000 --> 00:19:30,000
它甚至都不需要

795
00:19:30,000 --> 00:19:32,000
启动别的地方去

796
00:19:32,000 --> 00:19:33,000
其实还是很难讲的

797
00:19:33,000 --> 00:19:36,000
或者说就是人们就是需要

798
00:19:36,000 --> 00:19:38,000
因为这个 iOS

799
00:19:38,000 --> 00:19:40,000
这个是一个单 eAPP

800
00:19:40,000 --> 00:19:42,000
就是在 Foreground 的这种情况的

801
00:19:42,000 --> 00:19:43,000
这种前提下

802
00:19:43,000 --> 00:19:45,000
你怎么去减少

803
00:19:45,000 --> 00:19:46,000
这个 APP 间切换的成本

804
00:19:46,000 --> 00:19:47,000
就 Todavio 就可能

805
00:19:47,000 --> 00:19:51,000
给出了一个可以用的地方

806
00:19:51,000 --> 00:19:52,000
但是它对现在

807
00:19:52,000 --> 00:19:54,000
对一个限制还比较死

808
00:19:54,000 --> 00:19:55,000
那你不如再加一个什么

809
00:19:55,000 --> 00:19:56,000
像现在打开 Todavio

810
00:19:56,000 --> 00:19:57,000
不是下面有三个 type 吗

811
00:19:57,000 --> 00:19:59,000
Todavio 上的 Notification

812
00:19:59,000 --> 00:20:00,000
那你再加一旁边

813
00:20:00,000 --> 00:20:02,000
给一个什么 Dashboard

814
00:20:02,000 --> 00:20:03,000
因为这个在 iOS

815
00:20:03,000 --> 00:20:04,000
上也有这个概念

816
00:20:04,000 --> 00:20:06,000
你在里面搞了的话

817
00:20:06,000 --> 00:20:08,000
那可以自己加一些随意

818
00:20:08,000 --> 00:20:10,000
就是要求没有那么限制

819
00:20:10,000 --> 00:20:11,000
严格的东西

820
00:20:11,000 --> 00:20:13,000
其实也是一个不错的思路

821
00:20:13,000 --> 00:20:14,000
我觉得

822
00:20:14,000 --> 00:20:16,000
所以我觉得归根结底

823
00:20:16,000 --> 00:20:19,000
还是一个叫主死的早

824
00:20:19,000 --> 00:20:21,000
就是苹果这一套

825
00:20:21,000 --> 00:20:23,000
死板管制的哲学

826
00:20:23,000 --> 00:20:24,000
没有贯彻下来

827
00:20:24,000 --> 00:20:26,000
就是我觉得你是

828
00:20:26,000 --> 00:20:27,000
其实你是希望

829
00:20:27,000 --> 00:20:28,000
苹果变得更像 Android

830
00:20:28,000 --> 00:20:29,000
不是吗

831
00:20:29,000 --> 00:20:31,000
就是更松散一些潮

832
00:20:31,000 --> 00:20:33,000
就是按照让软件

833
00:20:33,000 --> 00:20:35,000
按照用户的需求

834
00:20:35,000 --> 00:20:36,000
去生长出来

835
00:20:36,000 --> 00:20:37,000
而不是一上来

836
00:20:37,000 --> 00:20:38,000
做一个 Grand Design

837
00:20:38,000 --> 00:20:38,000
然后

838
00:20:38,000 --> 00:20:41,000
但实际上 iOS

839
00:20:41,000 --> 00:20:42,000
这么多年

840
00:20:42,000 --> 00:20:43,000
这么几年的演化

841
00:20:43,000 --> 00:20:44,000
并确实是

842
00:20:44,000 --> 00:20:46,000
在这条路上走下去的

843
00:20:46,000 --> 00:20:46,000
很多东西

844
00:20:46,000 --> 00:20:47,000
它都不是说

845
00:20:47,000 --> 00:20:49,000
苹果自己拍脑袋

846
00:20:49,000 --> 00:20:50,000
想出来的一个方案

847
00:20:50,000 --> 00:20:51,000
而是说看到别的平台

848
00:20:51,000 --> 00:20:52,000
用户用得很好

849
00:20:52,000 --> 00:20:53,000
然后把这个东西

850
00:20:53,000 --> 00:20:55,000
就是借鉴过来

851
00:20:55,000 --> 00:20:55,000
我都不说

852
00:20:55,000 --> 00:20:57,000
甚至是什么官方压死同仁

853
00:20:57,000 --> 00:20:59,000
就有些第三方做出来

854
00:20:59,000 --> 00:21:01,000
然后他自己盗用

855
00:21:01,000 --> 00:21:02,000
就是我相信

856
00:21:02,000 --> 00:21:03,000
绝大多数软件

857
00:21:03,000 --> 00:21:05,000
都不是这么一个

858
00:21:05,000 --> 00:21:07,000
就最终用户的这种软件

859
00:21:07,000 --> 00:21:10,000
它都不是一个最终设计出来的东西

860
00:21:10,000 --> 00:21:11,000
而可能更真的是

861
00:21:11,000 --> 00:21:13,000
要用户体验出来的

862
00:21:13,000 --> 00:21:13,000
对

863
00:21:13,000 --> 00:21:14,000
但这边有一个度的问题

864
00:21:14,000 --> 00:21:15,000
就是你在多大程度上

865
00:21:15,000 --> 00:21:17,000
让用户来使用导向

866
00:21:17,000 --> 00:21:18,000
你在多大程度上

867
00:21:18,000 --> 00:21:19,000
要让别人去采草品

868
00:21:19,000 --> 00:21:23,000
还是你完全不去预设

869
00:21:23,000 --> 00:21:24,000
就是你从完全不去预设

870
00:21:24,000 --> 00:21:26,000
用户怎么从 A 点走到 B 点

871
00:21:26,000 --> 00:21:29,000
和精确的设计出

872
00:21:29,000 --> 00:21:30,000
从 A 点走到 B 点的每一步

873
00:21:30,000 --> 00:21:34,000
是中间是有很大的回旋空间的

874
00:21:34,000 --> 00:21:35,000
就是一个灰色地带

875
00:21:35,000 --> 00:21:37,000
对

876
00:21:37,000 --> 00:21:38,000
这个问题

877
00:21:38,000 --> 00:21:40,000
太 IT 工作了

878
00:21:40,000 --> 00:21:40,000
太 soft call 了

879
00:21:40,000 --> 00:21:41,000
我们不要再套力

880
00:21:41,000 --> 00:21:42,000
对

881
00:21:42,000 --> 00:21:43,000
不过其实回到你刚才

882
00:21:43,000 --> 00:21:44,000
你讲那一点

883
00:21:44,000 --> 00:21:45,000
就是你刚才也提到说

884
00:21:45,000 --> 00:21:47,000
你觉得最爽的

885
00:21:47,000 --> 00:21:48,000
就是苹果的工程团队

886
00:21:48,000 --> 00:21:49,000
带给你那些东西

887
00:21:49,000 --> 00:21:51,000
比如说像在去年 WDC 上

888
00:21:51,000 --> 00:21:52,000
它展示那些 API

889
00:21:52,000 --> 00:21:53,000
那些底层技术上

890
00:21:53,000 --> 00:21:54,000
你很兴奋

891
00:21:54,000 --> 00:21:54,000
对吧

892
00:21:54,000 --> 00:21:56,000
但是你对这个审核这块

893
00:21:56,000 --> 00:21:57,000
其实完全不感冒

894
00:21:57,000 --> 00:21:58,000
因为首先第一个

895
00:21:58,000 --> 00:21:59,000
你并不是一个

896
00:21:59,000 --> 00:22:01,000
我不是一个开发者

897
00:22:01,000 --> 00:22:01,000
对

898
00:22:01,000 --> 00:22:03,000
你不需要去面对这个的

899
00:22:03,000 --> 00:22:04,000
损合不过的后果

900
00:22:04,000 --> 00:22:05,000
但我觉得这里

901
00:22:05,000 --> 00:22:06,000
我觉得正是刚才我们

902
00:22:06,000 --> 00:22:08,000
调到那堆事情

903
00:22:08,000 --> 00:22:09,000
反映出来的一个结果

904
00:22:09,000 --> 00:22:10,000
就是说

905
00:22:10,000 --> 00:22:12,000
其实也大家都在

906
00:22:12,000 --> 00:22:14,000
持这么一个观点

907
00:22:14,000 --> 00:22:14,000
很多人

908
00:22:14,000 --> 00:22:17,000
就工程团队给了开发者

909
00:22:17,000 --> 00:22:19,000
这么很爽的一个选择

910
00:22:19,000 --> 00:22:19,000
很爽的

911
00:22:19,000 --> 00:22:21,000
那么技术可以去玩

912
00:22:21,000 --> 00:22:22,000
或者说炫技

913
00:22:22,000 --> 00:22:25,000
但是开发者花时间

914
00:22:25,000 --> 00:22:26,000
做出来之后

915
00:22:26,000 --> 00:22:27,000
然后想团队

916
00:22:27,000 --> 00:22:27,000
啪

917
00:22:27,000 --> 00:22:28,000
给人家锯了

918
00:22:28,000 --> 00:22:30,000
这个就是一个很恶劣的结果

919
00:22:30,000 --> 00:22:32,000
就是怎么左手打右手

920
00:22:32,000 --> 00:22:33,000
对

921
00:22:33,000 --> 00:22:35,000
而且会有寒蝉效应

922
00:22:35,000 --> 00:22:35,000
对

923
00:22:35,000 --> 00:22:36,000
就会有

924
00:22:36,000 --> 00:22:38,000
就懒得做了

925
00:22:38,000 --> 00:22:38,000
就不光

926
00:22:38,000 --> 00:22:39,000
这个是会有

927
00:22:39,000 --> 00:22:42,000
这个很负面的影响

928
00:22:42,000 --> 00:22:43,000
包括舆论上也好

929
00:22:43,000 --> 00:22:45,000
包括对开发者心态上的影响也好

930
00:22:45,000 --> 00:22:46,000
然后现在就说

931
00:22:46,000 --> 00:22:49,000
很多批评苹果审核

932
00:22:49,000 --> 00:22:51,000
这一套东西的人

933
00:22:51,000 --> 00:22:52,000
就这么

934
00:22:52,000 --> 00:22:53,000
就有

935
00:22:53,000 --> 00:22:54,000
持这么一种观点

936
00:22:54,000 --> 00:22:55,000
就是在上一期

937
00:22:55,000 --> 00:22:56,000
我们在电视频中也提到了

938
00:22:56,000 --> 00:22:58,000
就说安卓现在已经越来越好用

939
00:22:58,000 --> 00:22:59,000
对吧

940
00:22:59,000 --> 00:23:01,000
特别是在 5.0 之后

941
00:23:01,000 --> 00:23:02,000
就是我看到身边

942
00:23:02,000 --> 00:23:04,000
哪怕是很多

943
00:23:04,000 --> 00:23:06,000
这个之前的 iOS 的死中的用户

944
00:23:06,000 --> 00:23:06,000
都觉得

945
00:23:06,000 --> 00:23:09,000
这个确实真的做得不错

946
00:23:09,000 --> 00:23:12,000
然后我们就众所周知

947
00:23:12,000 --> 00:23:14,000
安卓是一个相对开放的系统

948
00:23:14,000 --> 00:23:16,000
就没有那么多调调光光的限制

949
00:23:16,000 --> 00:23:18,000
那这样的话

950
00:23:18,000 --> 00:23:20,000
苹果在这种情况下

951
00:23:20,000 --> 00:23:22,000
这样给自己给自己打脸

952
00:23:22,000 --> 00:23:24,000
其实会造成

953
00:23:24,000 --> 00:23:28,000
这某种程度上是有一个对开发者的驱动力

954
00:23:28,000 --> 00:23:29,000
让他去说

955
00:23:29,000 --> 00:23:30,000
那我不要在苹果上面开发好了

956
00:23:30,000 --> 00:23:32,000
我去给安卓开发

957
00:23:32,000 --> 00:23:34,000
不用说这么多气

958
00:23:34,000 --> 00:23:35,000
对吧

959
00:23:35,000 --> 00:23:35,000
对

960
00:23:35,000 --> 00:23:37,000
所以其实这个对他的生态来讲

961
00:23:37,000 --> 00:23:38,000
其实叫什么

962
00:23:38,000 --> 00:23:39,000
自毁

963
00:23:39,000 --> 00:23:40,000
基石

964
00:23:40,000 --> 00:23:41,000
自毁

965
00:23:41,000 --> 00:23:43,000
有个什么成语来的

966
00:23:43,000 --> 00:23:44,000
anyway

967
00:23:44,000 --> 00:23:45,000
还是不要讲了

968
00:23:45,000 --> 00:23:46,000
免得又被挑错了

969
00:23:46,000 --> 00:23:47,000
对

970
00:23:47,000 --> 00:23:48,000
what

971
00:23:48,000 --> 00:23:49,000
好吧

972
00:23:49,000 --> 00:23:50,000
有这么一个成语吗

973
00:23:50,000 --> 00:23:52,000
有一个什么

974
00:23:52,000 --> 00:23:54,000
自费无功

975
00:23:54,000 --> 00:23:55,000
我也不知道

976
00:23:55,000 --> 00:23:55,000
之类的

977
00:23:55,000 --> 00:23:56,000
肯定只有一个什么

978
00:23:56,000 --> 00:23:57,000
但我现在讲不起来的

979
00:23:57,000 --> 00:23:58,000
anyway

980
00:23:58,000 --> 00:23:58,000
下一个

981
00:23:58,000 --> 00:23:58,000
不重要

982
00:23:58,000 --> 00:24:01,000
但我觉得至少从我的角度来讲

983
00:24:01,000 --> 00:24:01,000
就是

984
00:24:01,000 --> 00:24:05,000
如果我真的不要去做 iOS 的话

985
00:24:05,000 --> 00:24:07,000
我宁可试一下 Windows Phone

986
00:24:07,000 --> 00:24:07,000
因为

987
00:24:07,000 --> 00:24:08,000
为什么

988
00:24:08,000 --> 00:24:10,000
Java 太可信

989
00:24:10,000 --> 00:24:14,000
在 Golang 可以完全写 Android 之前

990
00:24:14,000 --> 00:24:16,000
我应该是绝对不会去碰 Android

991
00:24:16,000 --> 00:24:18,000
你也可以试试用 Skala 写 Android

992
00:24:18,000 --> 00:24:20,000
Closer

993
00:24:20,000 --> 00:24:22,000
这个过程应该是蛮酸酸的

994
00:24:22,000 --> 00:24:24,000
算了

995
00:24:24,000 --> 00:24:25,000
好吧

996
00:24:25,000 --> 00:24:26,000
还是算了

997
00:24:26,000 --> 00:24:30,000
Windows Phone 你可以用 C Sharp 写对吧

998
00:24:30,000 --> 00:24:30,000
对啊

999
00:24:30,000 --> 00:24:31,000
很爽

1000
00:24:31,000 --> 00:24:33,000
对啊

1001
00:24:33,000 --> 00:24:34,000
那如果这样的话

1002
00:24:34,000 --> 00:24:35,000
其实可以建议你试一下

1003
00:24:35,000 --> 00:24:36,000
因为据说

1004
00:24:36,000 --> 00:24:40,000
我这个微软也在推这个 Windows Phone 的应用

1005
00:24:40,000 --> 00:24:41,000
他们最缺的就是应用嘛

1006
00:24:41,000 --> 00:24:44,000
然后说如果你这个应用做得好

1007
00:24:44,000 --> 00:24:45,000
他还有钱奖励哦

1008
00:24:45,000 --> 00:24:47,000
但 again

1009
00:24:47,000 --> 00:24:50,000
我还是不会去做一些最重要的用户用的东西

1010
00:24:50,000 --> 00:24:52,000
就基本上还是会

1011
00:24:52,000 --> 00:24:54,000
我不知道我究竟做过什么

1012
00:24:54,000 --> 00:24:55,000
其实也没有做过什么

1013
00:24:55,000 --> 00:24:57,000
就只是因为公司的

1014
00:24:57,000 --> 00:24:58,000
而且我已经换了公司了

1015
00:24:58,000 --> 00:25:00,000
可能也不需要再

1016
00:25:00,000 --> 00:25:01,000
蹚这趟活水了

1017
00:25:01,000 --> 00:25:06,000
所以你还是打算安安静静的做一个高伦的企业开发者

1018
00:25:06,000 --> 00:25:08,000
很难说

1019
00:25:08,000 --> 00:25:09,000
就

1020
00:25:09,000 --> 00:25:10,000
anyway

1021
00:25:10,000 --> 00:25:12,000
反正我正式工作是

1022
00:25:12,000 --> 00:25:15,000
应该在这一期播出的时候

1023
00:25:15,000 --> 00:25:18,000
我已经上了三天班了

1024
00:25:18,000 --> 00:25:18,000
所以

1025
00:25:18,000 --> 00:25:21,000
在下一期节目的时候

1026
00:25:21,000 --> 00:25:22,000
我们应该可以

1027
00:25:22,000 --> 00:25:26,000
至少我会对自己会做什么

1028
00:25:26,000 --> 00:25:26,000
有一个清晰的了解

1029
00:25:26,000 --> 00:25:27,000
以及

1030
00:25:27,000 --> 00:25:31,000
那个时候就可以知道自己是不是还继续要在

1031
00:25:31,000 --> 00:25:36,000
移动开发这一块有什么建树或者发展

1032
00:25:36,000 --> 00:25:37,000
好吧

1033
00:25:37,000 --> 00:25:38,000
下次再说吧

1034
00:25:38,000 --> 00:25:48,000
然后还有位听众提到我们作为两个 Pythonista

1035
00:25:48,000 --> 00:25:48,000
等等

1036
00:25:48,000 --> 00:25:53,000
Pythonista 的辅述应该是 Pythonisti

1037
00:25:53,000 --> 00:25:57,000
对因为我刚刚从意大利回来

1038
00:25:57,000 --> 00:26:00,000
然后非常非常冷

1039
00:26:00,000 --> 00:26:01,000
然后在

1040
00:26:01,000 --> 00:26:02,000
在

1041
00:26:02,000 --> 00:26:05,000
在和朋友们聊天的时候

1042
00:26:05,000 --> 00:26:06,000
说什么

1043
00:26:06,000 --> 00:26:09,000
我们非常注重这个

1044
00:26:09,000 --> 00:26:10,000
意大利

1045
00:26:10,000 --> 00:26:12,000
就是德国人非常注重

1046
00:26:12,000 --> 00:26:14,000
在说外来语的时候

1047
00:26:14,000 --> 00:26:16,000
一定要按照外来语的正确的语法去

1048
00:26:16,000 --> 00:26:18,000
去变革呀什么的

1049
00:26:18,000 --> 00:26:18,000
比如说

1050
00:26:18,000 --> 00:26:19,000
Espresso

1051
00:26:19,000 --> 00:26:20,000
你的复数

1052
00:26:20,000 --> 00:26:21,000
不是 Espresso

1053
00:26:21,000 --> 00:26:23,000
而是 Espressi

1054
00:26:23,000 --> 00:26:26,000
所以你不能说我要两杯 Espresso

1055
00:26:26,000 --> 00:26:29,000
而要说我要两杯 Espressi

1056
00:26:29,000 --> 00:26:30,000
然后意大利人摇着头说

1057
00:26:30,000 --> 00:26:30,000
No

1058
00:26:30,000 --> 00:26:32,000
在意大利

1059
00:26:32,000 --> 00:26:34,000
如果你在意大利之外的地方这么说

1060
00:26:34,000 --> 00:26:36,000
可能是非常正确

1061
00:26:36,000 --> 00:26:38,000
高逼格的

1062
00:26:38,000 --> 00:26:39,000
但在意大利

1063
00:26:39,000 --> 00:26:41,000
你说两杯咖啡就行了

1064
00:26:41,000 --> 00:26:43,000
因为意大利人咖啡默认就是 Espresso

1065
00:26:43,000 --> 00:26:44,000
对

1066
00:26:44,000 --> 00:26:46,000
然后 Pythonista

1067
00:26:46,000 --> 00:26:49,000
因为它是意大利语吧

1068
00:26:49,000 --> 00:26:51,000
所以它的复数应该是 Pythonisti

1069
00:26:51,000 --> 00:26:52,000
嗯哼

1070
00:26:52,000 --> 00:26:52,000
对

1071
00:26:52,000 --> 00:26:52,000
我们组

1072
00:26:52,000 --> 00:26:53,000
对

1073
00:26:53,000 --> 00:26:54,000
又给科普了

1074
00:26:54,000 --> 00:26:56,000
这个其实我在知乎上经常有

1075
00:26:56,000 --> 00:26:58,000
有读过几次草的

1076
00:26:58,000 --> 00:27:00,000
就是经常会有

1077
00:27:00,000 --> 00:27:03,000
应该是前去年还是前年的时候吧

1078
00:27:03,000 --> 00:27:06,000
有人在知乎上去哪里去招这个

1079
00:27:06,000 --> 00:27:07,000
Python 程序员

1080
00:27:07,000 --> 00:27:08,000
他说他自己是

1081
00:27:08,000 --> 00:27:09,000
他们要招 Python 呢

1082
00:27:09,000 --> 00:27:10,000
Python 呢

1083
00:27:10,000 --> 00:27:12,000
我们之前吐槽过了

1084
00:27:12,000 --> 00:27:13,000
但这没办法

1085
00:27:13,000 --> 00:27:14,000
中国的英语教育就

1086
00:27:14,000 --> 00:27:17,000
可能跟中国的英语教育也扯遍不关系

1087
00:27:17,000 --> 00:27:19,000
就你没有在那个文化圈子里面

1088
00:27:19,000 --> 00:27:19,000
嗯

1089
00:27:19,000 --> 00:27:20,000
不

1090
00:27:20,000 --> 00:27:22,000
我觉得这个就是很奇怪的地方

1091
00:27:22,000 --> 00:27:23,000
如果你真的是要招这个

1092
00:27:23,000 --> 00:27:25,000
就是那么好

1093
00:27:25,000 --> 00:27:27,000
所谓 hardcore Python 的这个

1094
00:27:27,000 --> 00:27:27,000
对

1095
00:27:27,000 --> 00:27:29,000
你至少应该有点文化是吧

1096
00:27:29,000 --> 00:27:29,000
对

1097
00:27:29,000 --> 00:27:30,000
你至少要知道这个

1098
00:27:30,000 --> 00:27:31,000
这个 jargon 是什么

1099
00:27:31,000 --> 00:27:32,000
对吧

1100
00:27:32,000 --> 00:27:32,000
对

1101
00:27:32,000 --> 00:27:34,000
然后如果你知道 Python 那

1102
00:27:34,000 --> 00:27:35,000
默认已经 fail

1103
00:27:35,000 --> 00:27:36,000
对

1104
00:27:36,000 --> 00:27:37,000
就像 Rubier

1105
00:27:37,000 --> 00:27:39,000
也 fail

1106
00:27:39,000 --> 00:27:41,000
Ruby 是什么

1107
00:27:41,000 --> 00:27:41,000
Rubiest

1108
00:27:41,000 --> 00:27:42,000
对

1109
00:27:42,000 --> 00:27:44,000
那个比较好

1110
00:27:44,000 --> 00:27:45,000
那个比较常见嘛

1111
00:27:45,000 --> 00:27:46,000
因为 Y 结尾的

1112
00:27:46,000 --> 00:27:47,000
一般都会怎么扁

1113
00:27:47,000 --> 00:27:49,000
但是像 Python 这种情况

1114
00:27:49,000 --> 00:27:50,000
很多人

1115
00:27:50,000 --> 00:27:51,000
Python 也是 Y 结尾

1116
00:27:51,000 --> 00:27:53,000
Oh no sorry

1117
00:27:53,000 --> 00:27:54,000
我 R 了

1118
00:27:54,000 --> 00:27:55,000
没什么

1119
00:27:55,000 --> 00:27:56,000
我刚才想到别的地方去

1120
00:27:56,000 --> 00:27:59,000
就很容易忘文声音

1121
00:27:59,000 --> 00:28:00,000
就跟我们看中文一样嘛

1122
00:28:00,000 --> 00:28:01,000
很多唐木结实

1123
00:28:01,000 --> 00:28:03,000
明明就是 N 结尾

1124
00:28:03,000 --> 00:28:03,000
加 1

1125
00:28:03,000 --> 00:28:04,000
多简单

1126
00:28:04,000 --> 00:28:05,000
是是是是

1127
00:28:05,000 --> 00:28:07,000
OK

1128
00:28:07,000 --> 00:28:09,000
还是没文化的关键是

1129
00:28:09,000 --> 00:28:09,000
对

1130
00:28:09,000 --> 00:28:11,000
然后刚才说什么来着

1131
00:28:11,000 --> 00:28:11,000
Pythonista

1132
00:28:11,000 --> 00:28:13,000
我们作为两个 Pythonisti

1133
00:28:13,000 --> 00:28:14,000
居然不知道

1134
00:28:14,000 --> 00:28:16,000
居然没有提到 Python 的 packaging

1135
00:28:16,000 --> 00:28:18,000
就是 Conda 这套东西

1136
00:28:18,000 --> 00:28:19,000
嗯哼

1137
00:28:19,000 --> 00:28:20,000
你有什么说的吗

1138
00:28:20,000 --> 00:28:21,000
我是真的不知道

1139
00:28:21,000 --> 00:28:22,000
What

1140
00:28:22,000 --> 00:28:25,000
你不知道 Anaconda 吗

1141
00:28:25,000 --> 00:28:26,000
它是

1142
00:28:26,000 --> 00:28:27,000
它是之前

1143
00:28:27,000 --> 00:28:28,000
它很早就有的吗

1144
00:28:28,000 --> 00:28:28,000
还是

1145
00:28:28,000 --> 00:28:29,000
Anaconda

1146
00:28:29,000 --> 00:28:30,000
那有一阵了吧

1147
00:28:30,000 --> 00:28:30,000
就是

1148
00:28:30,000 --> 00:28:32,000
就是我之前不是提起来

1149
00:28:32,000 --> 00:28:33,000
我在折腾 PyQt 吗

1150
00:28:33,000 --> 00:28:34,000
嗯哼

1151
00:28:34,000 --> 00:28:35,000
嗯

1152
00:28:35,000 --> 00:28:36,000
什么 PyQt

1153
00:28:36,000 --> 00:28:36,000
就是

1154
00:28:36,000 --> 00:28:38,000
iPythonQt Console

1155
00:28:38,000 --> 00:28:39,000
嗯哼

1156
00:28:39,000 --> 00:28:41,000
其实部分原因就是因为

1157
00:28:41,000 --> 00:28:42,000
我想要在电脑上

1158
00:28:42,000 --> 00:28:44,000
不装 Anaconda

1159
00:28:44,000 --> 00:28:44,000
搞出一个

1160
00:28:44,000 --> 00:28:46,000
iPython 的

1161
00:28:46,000 --> 00:28:47,000
Qt Console

1162
00:28:47,000 --> 00:28:49,000
因为 Anaconda

1163
00:28:49,000 --> 00:28:51,000
Anaconda 实际上是一个

1164
00:28:51,000 --> 00:28:52,000
怎么说呢

1165
00:28:52,000 --> 00:28:53,000
小白

1166
00:28:53,000 --> 00:28:55,000
给小白用户们

1167
00:28:55,000 --> 00:28:57,000
使用的 Python Distribution

1168
00:28:57,000 --> 00:28:58,000
就是

1169
00:28:58,000 --> 00:28:59,000
比如说

1170
00:28:59,000 --> 00:29:00,000
数据分析师啊

1171
00:29:00,000 --> 00:29:01,000
或者是

1172
00:29:01,000 --> 00:29:02,000
尤其是在

1173
00:29:02,000 --> 00:29:03,000
就是非

1174
00:29:03,000 --> 00:29:06,000
非 CS 人是用 Python 的

1175
00:29:06,000 --> 00:29:06,000
就是一些

1176
00:29:06,000 --> 00:29:08,000
不得不写程序

1177
00:29:08,000 --> 00:29:08,000
但是

1178
00:29:08,000 --> 00:29:10,000
没有系统的学过

1179
00:29:10,000 --> 00:29:10,000
怎么写程序的人

1180
00:29:10,000 --> 00:29:11,000
比如说什么

1181
00:29:11,000 --> 00:29:12,000
嗯

1182
00:29:12,000 --> 00:29:13,000
搞生物的呀

1183
00:29:13,000 --> 00:29:15,000
要处理那个细胞图像啊

1184
00:29:15,000 --> 00:29:15,000
或者是

1185
00:29:15,000 --> 00:29:17,000
搞化学的呀

1186
00:29:17,000 --> 00:29:19,000
要做一些化学计算

1187
00:29:19,000 --> 00:29:20,000
因为 Python

1188
00:29:20,000 --> 00:29:20,000
毕竟是一个在

1189
00:29:20,000 --> 00:29:21,000
科学计算领域

1190
00:29:21,000 --> 00:29:22,000
非常非常

1191
00:29:22,000 --> 00:29:25,000
受欢迎的主流语言

1192
00:29:25,000 --> 00:29:27,000
教学语言嘛

1193
00:29:27,000 --> 00:29:27,000
对

1194
00:29:27,000 --> 00:29:28,000
不只是教学

1195
00:29:28,000 --> 00:29:29,000
就是在科研领域

1196
00:29:29,000 --> 00:29:30,000
交水

1197
00:29:30,000 --> 00:29:31,000
Gluland

1198
00:29:31,000 --> 00:29:33,000
这个也不能算交水语言

1199
00:29:33,000 --> 00:29:34,000
就是它是

1200
00:29:34,000 --> 00:29:35,000
它是这儿八经的

1201
00:29:35,000 --> 00:29:36,000
很多科研人员的

1202
00:29:36,000 --> 00:29:37,000
第一生产力语言

1203
00:29:37,000 --> 00:29:38,000
这个我知道

1204
00:29:38,000 --> 00:29:39,000
就是像那个

1205
00:29:39,000 --> 00:29:40,000
Numeric Pi

1206
00:29:40,000 --> 00:29:41,000
它也是这种

1207
00:29:41,000 --> 00:29:42,000
场景下应用的

1208
00:29:42,000 --> 00:29:43,000
出来的结果嘛

1209
00:29:43,000 --> 00:29:44,000
就是

1210
00:29:44,000 --> 00:29:44,000
你的意思是

1211
00:29:44,000 --> 00:29:46,000
它使用 Python 作为

1212
00:29:46,000 --> 00:29:48,000
操作界面

1213
00:29:48,000 --> 00:29:49,000
而使用

1214
00:29:49,000 --> 00:29:50,000
而让这个开发者

1215
00:29:50,000 --> 00:29:51,000
可以用

1216
00:29:51,000 --> 00:29:52,000
用到数学库

1217
00:29:52,000 --> 00:29:53,000
就是

1218
00:29:53,000 --> 00:29:53,000
对啊

1219
00:29:53,000 --> 00:29:54,000
对啊

1220
00:29:54,000 --> 00:29:55,000
在这个意义上

1221
00:29:55,000 --> 00:29:56,000
交水是吧

1222
00:29:56,000 --> 00:29:56,000
呃

1223
00:29:56,000 --> 00:29:58,000
其实这么说也不对啊

1224
00:29:58,000 --> 00:29:59,000
因为交水

1225
00:29:59,000 --> 00:30:00,000
应该是联合各不同

1226
00:30:00,000 --> 00:30:00,000
组件

1227
00:30:00,000 --> 00:30:01,000
不 anyway

1228
00:30:01,000 --> 00:30:02,000
就是说

1229
00:30:02,000 --> 00:30:03,000
他们用它

1230
00:30:03,000 --> 00:30:04,000
因为它这个比较简

1231
00:30:04,000 --> 00:30:05,000
这个语法比较简单嘛

1232
00:30:05,000 --> 00:30:07,000
然后相对直观一点

1233
00:30:07,000 --> 00:30:07,000
然后去

1234
00:30:07,000 --> 00:30:08,000
用到一些什么

1235
00:30:08,000 --> 00:30:09,000
第三方的库

1236
00:30:09,000 --> 00:30:10,000
去做一些科学计算

1237
00:30:10,000 --> 00:30:11,000
这些我是有

1238
00:30:11,000 --> 00:30:13,000
有所耳闻的

1239
00:30:13,000 --> 00:30:13,000
不过我

1240
00:30:13,000 --> 00:30:14,000
现在反应过来

1241
00:30:14,000 --> 00:30:15,000
我为什么

1242
00:30:15,000 --> 00:30:16,000
我没有听说过这个东西了

1243
00:30:16,000 --> 00:30:18,000
因为你不是搞这个

1244
00:30:18,000 --> 00:30:19,000
不是

1245
00:30:19,000 --> 00:30:20,000
你看见不像小白用户吗

1246
00:30:20,000 --> 00:30:21,000
哈哈哈哈

1247
00:30:21,000 --> 00:30:23,000
你刚才说它小白用户用户

1248
00:30:23,000 --> 00:30:24,000
那我不是啊

1249
00:30:24,000 --> 00:30:25,000
对

1250
00:30:25,000 --> 00:30:26,000
Anacoda

1251
00:30:26,000 --> 00:30:27,000
对 Anacoda

1252
00:30:27,000 --> 00:30:28,000
就是大嘛

1253
00:30:28,000 --> 00:30:30,000
或者比较大的蟒蛇

1254
00:30:30,000 --> 00:30:31,000
就是 Anacoda

1255
00:30:31,000 --> 00:30:32,000
应该没错吧

1256
00:30:32,000 --> 00:30:33,000
Anacoda 这个词应该是蟒蛇的意思吧

1257
00:30:33,000 --> 00:30:35,000
别要给人吐槽

1258
00:30:35,000 --> 00:30:35,000
对

1259
00:30:35,000 --> 00:30:36,000
我不知道啊

1260
00:30:36,000 --> 00:30:38,000
但我觉得 Anacoda 应该没错

1261
00:30:38,000 --> 00:30:39,000
某种蟒蛇

1262
00:30:39,000 --> 00:30:39,000
然后对

1263
00:30:39,000 --> 00:30:42,000
然后它就是一个 Python 的 distribution

1264
00:30:42,000 --> 00:30:43,000
它把

1265
00:30:43,000 --> 00:30:44,000
它都有把 Python

1266
00:30:44,000 --> 00:30:46,000
包装在了一个安装包里面

1267
00:30:46,000 --> 00:30:47,000
然后如果你是做

1268
00:30:47,000 --> 00:30:49,000
你是要学

1269
00:30:49,000 --> 00:30:50,000
比如说图像处理啊

1270
00:30:50,000 --> 00:30:55,000
或者是你要搞什么化学生物学方面的计算啊

1271
00:30:55,000 --> 00:30:56,000
甚至物理学也有应用吧

1272
00:30:56,000 --> 00:30:56,000
我不知道

1273
00:30:56,000 --> 00:30:59,000
然后你可以安装 Anacoda

1274
00:30:59,000 --> 00:31:00,000
然后 Python

1275
00:31:00,000 --> 00:31:01,000
什么都有了

1276
00:31:01,000 --> 00:31:01,000
嗯

1277
00:31:01,000 --> 00:31:02,000
什么

1278
00:31:02,000 --> 00:31:03,000
QDI

1279
00:31:03,000 --> 00:31:04,000
Python 的笔记本啊

1280
00:31:04,000 --> 00:31:06,000
Console 啊

1281
00:31:06,000 --> 00:31:07,000
NOMPY 啊

1282
00:31:07,000 --> 00:31:08,000
全都都有了

1283
00:31:08,000 --> 00:31:08,000
嗯

1284
00:31:08,000 --> 00:31:11,000
然后安装和

1285
00:31:11,000 --> 00:31:15,000
删除这些 Python 的包也通过

1286
00:31:15,000 --> 00:31:16,000
也都是通过一个图形界面

1287
00:31:16,000 --> 00:31:18,000
就有点像 Sigwin

1288
00:31:18,000 --> 00:31:19,000
嗯

1289
00:31:19,000 --> 00:31:20,000
大概那种感觉吧

1290
00:31:20,000 --> 00:31:21,000
然后

1291
00:31:21,000 --> 00:31:23,000
然后所谓 Conda 就是一个

1292
00:31:23,000 --> 00:31:27,000
就是你怎么把自己的 package

1293
00:31:27,000 --> 00:31:30,000
打包给 Anacoda 用

1294
00:31:30,000 --> 00:31:31,000
是这么一套东西

1295
00:31:31,000 --> 00:31:32,000
OK

1296
00:31:32,000 --> 00:31:32,000
对

1297
00:31:32,000 --> 00:31:35,000
它几乎是一个 Python 的平行宇宙吧

1298
00:31:35,000 --> 00:31:36,000
我们

1299
00:31:36,000 --> 00:31:38,000
那所以其实就是说

1300
00:31:38,000 --> 00:31:41,000
这种专业开发者肯定是不会接触到的了

1301
00:31:41,000 --> 00:31:42,000
也不一定吧

1302
00:31:42,000 --> 00:31:48,000
因为 Anacoda 里面的包其实也都是几乎所有的常见的 Python 包

1303
00:31:48,000 --> 00:31:49,000
Anacoda 里面都有

1304
00:31:49,000 --> 00:31:56,000
我甚至怀疑 Anacoda 其实就是把定期会把 Pypi 上面的那个包全都包一遍

1305
00:31:56,000 --> 00:32:00,000
然后装一个就是包装成 Anacoda 的格式

1306
00:32:00,000 --> 00:32:04,000
然后给那个科学计算领域的用户用

1307
00:32:04,000 --> 00:32:07,000
因为他们根本不关心我们这些工程师在干嘛

1308
00:32:07,000 --> 00:32:10,000
他只是关心造出来的东西他能用就行了

1309
00:32:10,000 --> 00:32:14,000
然后你只要提供一个傻瓜化男装界面就蛮好的

1310
00:32:14,000 --> 00:32:18,000
Well speaking of there's only one way to do things

1311
00:32:18,000 --> 00:32:20,000
Yes exactly

1312
00:32:20,000 --> 00:32:21,000
There's another way

1313
00:32:21,000 --> 00:32:21,000
对

1314
00:32:21,000 --> 00:32:25,000
来再接着有文化一点

1315
00:32:25,000 --> 00:32:29,000
Anacoda 这个中文叫做森林的森

1316
00:32:29,000 --> 00:32:30,000
然后这个字

1317
00:32:30,000 --> 00:32:31,000
森吗

1318
00:32:31,000 --> 00:32:32,000
不森染

1319
00:32:32,000 --> 00:32:36,000
虫之旁一个在不要上面那一横

1320
00:32:36,000 --> 00:32:38,000
就是再见的在不要上面那一横

1321
00:32:38,000 --> 00:32:41,000
然后这个叫做

1322
00:32:41,000 --> 00:32:44,000
铲于热带南美洲的大蟒蛇

1323
00:32:44,000 --> 00:32:47,000
可用身体绞死猎物

1324
00:32:47,000 --> 00:32:49,000
一称大水蟒

1325
00:32:49,000 --> 00:32:50,000
OK

1326
00:32:50,000 --> 00:32:51,000
知道了

1327
00:32:51,000 --> 00:32:52,000
又学了一个词

1328
00:32:52,000 --> 00:32:53,000
就像是

1329
00:32:53,000 --> 00:32:59,000
我觉得好像之前看过一部恐怖片

1330
00:32:59,000 --> 00:33:01,000
是不是恐怖片

1331
00:33:01,000 --> 00:33:01,000
惊悚

1332
00:33:01,000 --> 00:33:02,000
Thriller 吧

1333
00:33:02,000 --> 00:33:05,000
就是讲有一道非常非常大的蟒蛇

1334
00:33:05,000 --> 00:33:06,000
然后怎么搞人的

1335
00:33:06,000 --> 00:33:09,000
是 90 年代的片子吧

1336
00:33:09,000 --> 00:33:12,000
就因为那个时候

1337
00:33:12,000 --> 00:33:13,000
有什么

1338
00:33:13,000 --> 00:33:13,000
那个

1339
00:33:13,000 --> 00:33:16,000
讲鱼鱼的恐怖片

1340
00:33:16,000 --> 00:33:17,000
很卖座

1341
00:33:17,000 --> 00:33:19,000
然后他们就拍了一个什么

1342
00:33:19,000 --> 00:33:21,000
搞不好叫什么狂妄之灾的

1343
00:33:21,000 --> 00:33:22,000
这么一部电影

1344
00:33:22,000 --> 00:33:22,000
然后

1345
00:33:22,000 --> 00:33:23,000
清明字

1346
00:33:23,000 --> 00:33:24,000
对

1347
00:33:24,000 --> 00:33:27,000
这一定是台湾或者香港人翻译的

1348
00:33:27,000 --> 00:33:28,000
对

1349
00:33:28,000 --> 00:33:30,000
然后片名应该就喜欢 Anacoda

1350
00:33:30,000 --> 00:33:31,000
但

1351
00:33:31,000 --> 00:33:31,000
OK

1352
00:33:31,000 --> 00:33:32,000
不重要

1353
00:33:32,000 --> 00:33:36,000
还有一个叫做 Nicks 的东西

1354
00:33:36,000 --> 00:33:38,000
其实我也没有用过

1355
00:33:38,000 --> 00:33:38,000
也没有提出过

1356
00:33:38,000 --> 00:33:39,000
准确来说

1357
00:33:39,000 --> 00:33:41,000
Nicks 不就是 NicksOS 的那个吗

1358
00:33:41,000 --> 00:33:42,000
不不

1359
00:33:42,000 --> 00:33:43,000
这个是 Python 的 Nicks

1360
00:33:43,000 --> 00:33:45,000
这个刚刚我们提到另外一个 Nicks

1361
00:33:45,000 --> 00:33:46,000
是另外一个东西

1362
00:33:46,000 --> 00:33:47,000
这个

1363
00:33:47,000 --> 00:33:48,000
那这个我也不知道

1364
00:33:48,000 --> 00:33:50,000
我一开始以为它就是那个

1365
00:33:50,000 --> 00:33:52,000
NicksOS 的 Nicks

1366
00:33:52,000 --> 00:33:53,000
所以

1367
00:33:53,000 --> 00:33:56,000
怎么说呢

1368
00:33:56,000 --> 00:33:57,000
莽然无知啊

1369
00:33:57,000 --> 00:33:57,000
我们

1370
00:33:57,000 --> 00:33:59,000
这不怪咱们吧

1371
00:33:59,000 --> 00:34:00,000
我觉得这个

1372
00:34:00,000 --> 00:34:01,000
它都已经

1373
00:34:01,000 --> 00:34:03,000
什么四分五裂成这样了

1374
00:34:03,000 --> 00:34:04,000
我也没什么好说的了

1375
00:34:04,000 --> 00:34:07,000
Lady D

1376
00:34:07,000 --> 00:34:07,000
对

1377
00:34:07,000 --> 00:34:10,000
反正我是不怎么用了

1378
00:34:10,000 --> 00:34:11,000
随便

1379
00:34:11,000 --> 00:34:12,000
对

1380
00:34:12,000 --> 00:34:13,000
Anacoda

1381
00:34:13,000 --> 00:34:14,000
其实我装过一次

1382
00:34:14,000 --> 00:34:15,000
但我不记得为什么了

1383
00:34:15,000 --> 00:34:17,000
我用了大概两三天就把他删了

1384
00:34:17,000 --> 00:34:18,000
好像是

1385
00:34:18,000 --> 00:34:19,000
有一个

1386
00:34:19,000 --> 00:34:21,000
我不能理解

1387
00:34:21,000 --> 00:34:22,000
还是不能接受的

1388
00:34:22,000 --> 00:34:24,000
Showstop

1389
00:34:24,000 --> 00:34:26,000
但我不确定了

1390
00:34:26,000 --> 00:34:28,000
是因为他装了之后

1391
00:34:28,000 --> 00:34:29,000
System Python 就

1392
00:34:29,000 --> 00:34:31,000
就坏了

1393
00:34:31,000 --> 00:34:31,000
还是

1394
00:34:31,000 --> 00:34:31,000
还是

1395
00:34:31,000 --> 00:34:32,000
Somehow

1396
00:34:32,000 --> 00:34:33,000
Someway

1397
00:34:33,000 --> 00:34:34,000
有一个东西

1398
00:34:34,000 --> 00:34:35,000
不能用

1399
00:34:35,000 --> 00:34:37,000
因为我大概三年前用我一次

1400
00:34:37,000 --> 00:34:38,000
但

1401
00:34:38,000 --> 00:34:38,000
对

1402
00:34:38,000 --> 00:34:39,000
具体也不记得

1403
00:34:39,000 --> 00:34:41,000
嗯

1404
00:34:41,000 --> 00:34:43,000
过吧

1405
00:34:43,000 --> 00:34:44,000
过

1406
00:34:44,000 --> 00:34:45,000
嗯

1407
00:34:45,000 --> 00:34:47,000
还有什么

1408
00:34:47,000 --> 00:34:48,000
没有什么

1409
00:34:48,000 --> 00:34:48,000
对

1410
00:34:48,000 --> 00:34:48,000
那

1411
00:34:48,000 --> 00:34:50,000
另外一个 feedback 就是

1412
00:34:50,000 --> 00:34:51,000
我给

1413
00:34:51,000 --> 00:34:53,000
Valve 写了邮件

1414
00:34:53,000 --> 00:34:54,000
说

1415
00:34:54,000 --> 00:34:55,000
我们能不能用

1416
00:34:55,000 --> 00:34:55,000
Still Alive

1417
00:34:55,000 --> 00:34:56,000
做我们的 Simson

1418
00:34:56,000 --> 00:34:57,000
然后

1419
00:34:57,000 --> 00:34:57,000
对

1420
00:34:57,000 --> 00:34:59,000
知道现在都没有人理我

1421
00:34:59,000 --> 00:35:01,000
没有 ACK

1422
00:35:01,000 --> 00:35:03,000
我们会不会有听众在 Valve 工作呢

1423
00:35:03,000 --> 00:35:05,000
Valve 应该有很多华人

1424
00:35:05,000 --> 00:35:06,000
华人程序员的

1425
00:35:06,000 --> 00:35:09,000
这个应该是他们的法务部门吧

1426
00:35:09,000 --> 00:35:09,000
我觉得

1427
00:35:09,000 --> 00:35:10,000
对

1428
00:35:10,000 --> 00:35:12,000
但如果你能够

1429
00:35:12,000 --> 00:35:12,000
Somehow

1430
00:35:12,000 --> 00:35:13,000
Someway

1431
00:35:13,000 --> 00:35:13,000
接触到

1432
00:35:13,000 --> 00:35:15,000
有内部人最好

1433
00:35:15,000 --> 00:35:15,000
对

1434
00:35:15,000 --> 00:35:16,000
有有

1435
00:35:16,000 --> 00:35:17,000
知道我们这个问题

1436
00:35:17,000 --> 00:35:19,000
能够由谁来解决

1437
00:35:19,000 --> 00:35:21,000
能不能帮帮我们的忙

1438
00:35:21,000 --> 00:35:22,000
跪下了

1439
00:35:22,000 --> 00:35:23,000
跪下了

1440
00:35:23,000 --> 00:35:23,000
对

1441
00:35:23,000 --> 00:35:24,000
跪下了

1442
00:35:24,000 --> 00:35:24,000
跪下了

1443
00:35:24,000 --> 00:35:26,000
如果帮不了的话

1444
00:35:26,000 --> 00:35:27,000
I don't blame you

1445
00:35:27,000 --> 00:35:30,000
对

1446
00:35:30,000 --> 00:35:31,000
好吧

1447
00:35:31,000 --> 00:35:31,000
OK

1448
00:35:31,000 --> 00:35:33,000
feedback 结束了

1449
00:35:33,000 --> 00:35:35,000
那接下来进入我们的

1450
00:35:35,000 --> 00:35:35,000
当当当

1451
00:35:35,000 --> 00:35:36,000
新闻

1452
00:35:36,000 --> 00:35:38,000
来吧

1453
00:35:38,000 --> 00:35:40,000
对

1454
00:35:40,000 --> 00:35:41,000
其实上一期

1455
00:35:41,000 --> 00:35:42,000
IT 工作也提到了

1456
00:35:42,000 --> 00:35:43,000
就是

1457
00:35:43,000 --> 00:35:44,000
Dr.Dobbs

1458
00:35:44,000 --> 00:35:45,000
这个

1459
00:35:45,000 --> 00:35:46,000
这个在线杂志

1460
00:35:46,000 --> 00:35:47,000
停刊

1461
00:35:47,000 --> 00:35:50,000
当然它不是停刊

1462
00:35:50,000 --> 00:35:50,000
它只是把

1463
00:35:50,000 --> 00:35:52,000
它只是不再更新了

1464
00:35:52,000 --> 00:35:53,000
整个网站还是

1465
00:35:53,000 --> 00:35:53,000
在那

1466
00:35:53,000 --> 00:35:54,000
我当时

1467
00:35:54,000 --> 00:35:56,000
停刊不就是这个意思吗

1468
00:35:56,000 --> 00:35:58,000
停刊也有可能是

1469
00:35:58,000 --> 00:36:00,000
整个网站要撤下来

1470
00:36:00,000 --> 00:36:00,000
因为它后来

1471
00:36:00,000 --> 00:36:01,000
不不不不

1472
00:36:01,000 --> 00:36:02,000
你知道这个停刊这个字

1473
00:36:02,000 --> 00:36:04,000
可能是从传统杂志的

1474
00:36:04,000 --> 00:36:05,000
这个来的一个概念吗

1475
00:36:05,000 --> 00:36:07,000
就停止发行吗

1476
00:36:07,000 --> 00:36:07,000
对吧

1477
00:36:07,000 --> 00:36:09,000
但是你之前买过的旧的

1478
00:36:09,000 --> 00:36:10,000
还在你家里

1479
00:36:10,000 --> 00:36:11,000
好吧

1480
00:36:11,000 --> 00:36:13,000
所以其实还是有点

1481
00:36:13,000 --> 00:36:14,000
这个

1482
00:36:14,000 --> 00:36:16,000
这个语境下面

1483
00:36:16,000 --> 00:36:17,000
其实还蛮好的

1484
00:36:17,000 --> 00:36:19,000
对

1485
00:36:19,000 --> 00:36:21,000
所以如果它真的

1486
00:36:21,000 --> 00:36:22,000
整个站挂掉了

1487
00:36:22,000 --> 00:36:24,000
或者是整个站停掉了

1488
00:36:24,000 --> 00:36:25,000
应该叫观站是吧

1489
00:36:25,000 --> 00:36:26,000
对

1490
00:36:26,000 --> 00:36:27,000
就停刊就是还蛮好的

1491
00:36:27,000 --> 00:36:28,000
就是 stop publishing

1492
00:36:28,000 --> 00:36:29,000
但是你还可以

1493
00:36:29,000 --> 00:36:32,000
看之前发表过的吗

1494
00:36:32,000 --> 00:36:34,000
对

1495
00:36:34,000 --> 00:36:35,000
这个我当时在推特上

1496
00:36:35,000 --> 00:36:37,000
读到还是挺伤感的

1497
00:36:37,000 --> 00:36:38,000
因为我

1498
00:36:38,000 --> 00:36:40,000
显然不是读着

1499
00:36:40,000 --> 00:36:41,000
Dr. Dobbs 长大了

1500
00:36:41,000 --> 00:36:42,000
但至少 Dr. Dobbs

1501
00:36:42,000 --> 00:36:46,000
是一个我觉得非常靠谱的

1502
00:36:46,000 --> 00:36:47,000
而且

1503
00:36:47,000 --> 00:36:47,000
而且

1504
00:36:47,000 --> 00:36:49,000
不管是深度还是

1505
00:36:49,000 --> 00:36:51,000
几十度都让人

1506
00:36:51,000 --> 00:36:52,000
相当满意的一个

1507
00:36:52,000 --> 00:36:54,000
在线杂志

1508
00:36:54,000 --> 00:36:54,000
所以

1509
00:36:54,000 --> 00:36:55,000
而且

1510
00:36:55,000 --> 00:36:56,000
而且就是

1511
00:36:56,000 --> 00:36:57,000
我不知道你有没有印象

1512
00:36:57,000 --> 00:36:59,000
就是有一本书叫

1513
00:36:59,000 --> 00:37:04,000
Graphic Programming Black Book

1514
00:37:04,000 --> 00:37:06,000
没什么印象

1515
00:37:06,000 --> 00:37:07,000
就是

1516
00:37:07,000 --> 00:37:11,000
讲图像处理的黑书

1517
00:37:11,000 --> 00:37:13,000
OK

1518
00:37:13,000 --> 00:37:15,000
里面讲了非常多的

1519
00:37:15,000 --> 00:37:17,000
图像处理相关的

1520
00:37:17,000 --> 00:37:19,000
的问题

1521
00:37:19,000 --> 00:37:21,000
或者说教你怎么去写

1522
00:37:21,000 --> 00:37:22,000
图像处理方面的

1523
00:37:22,000 --> 00:37:24,000
也不是图像处理

1524
00:37:24,000 --> 00:37:26,000
就是 Graphic Programming

1525
00:37:26,000 --> 00:37:28,000
怎么说呢

1526
00:37:28,000 --> 00:37:29,000
对

1527
00:37:29,000 --> 00:37:32,000
就这一方面主题的一系列文章

1528
00:37:32,000 --> 00:37:33,000
它最开始其实就是在

1529
00:37:33,000 --> 00:37:34,000
Dr. Dobbs 上面的连载

1530
00:37:34,000 --> 00:37:36,000
然后整个连载

1531
00:37:36,000 --> 00:37:38,000
最后集结成书

1532
00:37:38,000 --> 00:37:39,000
放在网上

1533
00:37:39,000 --> 00:37:41,000
直到现在都是非常非常经典的一本书

1534
00:37:41,000 --> 00:37:42,000
OK

1535
00:37:42,000 --> 00:37:43,000
对

1536
00:37:43,000 --> 00:37:46,000
所以你对这个还是很有顺有感情的

1537
00:37:46,000 --> 00:37:46,000
对啊

1538
00:37:46,000 --> 00:37:47,000
而且

1539
00:37:47,000 --> 00:37:48,000
我也不知道

1540
00:37:48,000 --> 00:37:49,000
就 Dr. Dobbs

1541
00:37:49,000 --> 00:37:51,000
就有点像一个

1542
00:37:51,000 --> 00:37:54,000
每次上台的网站你就看到那种

1543
00:37:54,000 --> 00:37:56,000
那种 90 年代的气息扑面而来

1544
00:37:56,000 --> 00:37:59,000
就让人觉得这是我的青少年

1545
00:37:59,000 --> 00:38:00,000
这是我的童年

1546
00:38:00,000 --> 00:38:02,000
嗯

1547
00:38:02,000 --> 00:38:04,000
不过怎么说呢

1548
00:38:04,000 --> 00:38:06,000
就这一类的专业网站

1549
00:38:06,000 --> 00:38:09,000
其实在广告模式情况下

1550
00:38:09,000 --> 00:38:11,000
还是挺难生存的吧

1551
00:38:11,000 --> 00:38:12,000
特别现在就很多这种

1552
00:38:12,000 --> 00:38:13,000
所谓新媒体战

1553
00:38:13,000 --> 00:38:16,000
一直在抢眼球的情况下

1554
00:38:16,000 --> 00:38:17,000
对

1555
00:38:17,000 --> 00:38:18,000
就我虽然

1556
00:38:18,000 --> 00:38:20,000
这件事情虽然让我伤感

1557
00:38:20,000 --> 00:38:22,000
但我从来不觉得它是意外的事情

1558
00:38:22,000 --> 00:38:24,000
或者说它是不可理解的事情

1559
00:38:24,000 --> 00:38:24,000
因为

1560
00:38:24,000 --> 00:38:26,000
我们每个人都知道

1561
00:38:26,000 --> 00:38:27,000
这样的内

1562
00:38:27,000 --> 00:38:27,000
这样

1563
00:38:27,000 --> 00:38:29,000
就是内容

1564
00:38:29,000 --> 00:38:30,000
heavy 的网站

1565
00:38:30,000 --> 00:38:33,000
是很难在

1566
00:38:33,000 --> 00:38:35,000
我们现在这样一种经济环境之下

1567
00:38:35,000 --> 00:38:36,000
生存下去

1568
00:38:36,000 --> 00:38:38,000
因为没有人知道

1569
00:38:38,000 --> 00:38:41,000
怎样用好的内容赚钱

1570
00:38:41,000 --> 00:38:42,000
就没法量化嘛

1571
00:38:42,000 --> 00:38:43,000
这个东西

1572
00:38:43,000 --> 00:38:43,000
对

1573
00:38:43,000 --> 00:38:45,000
而不像杂志

1574
00:38:45,000 --> 00:38:47,000
你可以说这本杂志就卖这么多

1575
00:38:47,000 --> 00:38:49,000
然后每一版广告都有定价

1576
00:38:49,000 --> 00:38:52,000
现在是一个非常混乱的时代

1577
00:38:52,000 --> 00:38:53,000
没有人知道应该怎么

1578
00:38:53,000 --> 00:38:55,000
怎么用好的内容

1579
00:38:55,000 --> 00:38:56,000
所以其实还是应该就是说

1580
00:38:56,000 --> 00:38:58,000
比如说像那个 Dr. Dobbs

1581
00:38:58,000 --> 00:39:00,000
他可以说恢复会员制

1582
00:39:00,000 --> 00:39:04,000
就是说需要订阅才能看之类的

1583
00:39:04,000 --> 00:39:06,000
这样起码他的这个会稳定一点吗

1584
00:39:06,000 --> 00:39:09,000
也许吧

1585
00:39:09,000 --> 00:39:09,000
我也不知道

1586
00:39:09,000 --> 00:39:10,000
但

1587
00:39:10,000 --> 00:39:11,000
不过

1588
00:39:11,000 --> 00:39:13,000
完了就完了吧

1589
00:39:13,000 --> 00:39:15,000
还是还会有后继者

1590
00:39:15,000 --> 00:39:18,000
而且凭良心说话

1591
00:39:18,000 --> 00:39:22,000
就是我其实也不会去专门关注 Dr. Dobbs

1592
00:39:22,000 --> 00:39:22,000
最近有什么更新

1593
00:39:22,000 --> 00:39:24,000
甚至我不知道

1594
00:39:24,000 --> 00:39:25,000
偶尔看一片的

1595
00:39:25,000 --> 00:39:26,000
你买杂志吗

1596
00:39:26,000 --> 00:39:27,000
传统的

1597
00:39:27,000 --> 00:39:28,000
传统意义上的电脑杂志

1598
00:39:28,000 --> 00:39:29,000
你还买吗

1599
00:39:29,000 --> 00:39:30,000
我很久以前

1600
00:39:30,000 --> 00:39:32,000
还很久很久以前买

1601
00:39:32,000 --> 00:39:32,000
但是

1602
00:39:32,000 --> 00:39:33,000
大家都是这样吗

1603
00:39:33,000 --> 00:39:34,000
对自从有了互联网之后

1604
00:39:34,000 --> 00:39:36,000
就再不花钱买杂志了

1605
00:39:36,000 --> 00:39:37,000
对啊

1606
00:39:37,000 --> 00:39:38,000
就我小时候还会觉得

1607
00:39:38,000 --> 00:39:40,000
我小时候有一个朋友会

1608
00:39:40,000 --> 00:39:42,000
把一整年的单软件

1609
00:39:42,000 --> 00:39:44,000
排在书架里面

1610
00:39:44,000 --> 00:39:46,000
然后一整年的书籍

1611
00:39:46,000 --> 00:39:47,000
就书的侧面

1612
00:39:47,000 --> 00:39:49,000
会连成一个图案

1613
00:39:49,000 --> 00:39:50,000
我当时觉得

1614
00:39:50,000 --> 00:39:50,000
哇

1615
00:39:50,000 --> 00:39:51,000
将来长大了

1616
00:39:51,000 --> 00:39:51,000
我也要干这个

1617
00:39:51,000 --> 00:39:54,000
说来上次我回家的时候

1618
00:39:54,000 --> 00:39:56,000
清理家里的那个什么

1619
00:39:56,000 --> 00:39:57,000
就我的自己的书架

1620
00:39:57,000 --> 00:40:00,000
把那些都当废纸卖掉了

1621
00:40:00,000 --> 00:40:01,000
真的

1622
00:40:01,000 --> 00:40:04,000
这件事情我应该还是不会干的

1623
00:40:04,000 --> 00:40:06,000
就我小时候存攒的那些杂志

1624
00:40:06,000 --> 00:40:09,000
我觉得还是去让他们压在那儿好

1625
00:40:09,000 --> 00:40:10,000
没有什么用啊

1626
00:40:11,000 --> 00:40:11,000
就

1627
00:40:11,000 --> 00:40:15,000
为什么一定所有事情都要有用呢

1628
00:40:15,000 --> 00:40:17,000
我再来先解释一下这个情况

1629
00:40:17,000 --> 00:40:20,000
就说因为要放其他东西嘛

1630
00:40:20,000 --> 00:40:21,000
然后堆不下了

1631
00:40:21,000 --> 00:40:21,000
然后

1632
00:40:21,000 --> 00:40:22,000
OK

1633
00:40:22,000 --> 00:40:23,000
所以你是有空间需求

1634
00:40:23,000 --> 00:40:24,000
哦不

1635
00:40:24,000 --> 00:40:25,000
而且我有这个什么

1636
00:40:25,000 --> 00:40:26,000
洁癖

1637
00:40:26,000 --> 00:40:27,000
整理癖

1638
00:40:27,000 --> 00:40:28,000
你有整理癖

1639
00:40:28,000 --> 00:40:28,000
OK

1640
00:40:28,000 --> 00:40:30,000
就是反正你也没什么用嘛

1641
00:40:30,000 --> 00:40:31,000
过期的信息

1642
00:40:31,000 --> 00:40:32,000
然后你也不能看

1643
00:40:32,000 --> 00:40:34,000
你知道古玩商最爱你们这种人了

1644
00:40:34,000 --> 00:40:36,000
就是你们这种人的存在

1645
00:40:36,000 --> 00:40:37,000
使得古玩

1646
00:40:37,000 --> 00:40:39,000
使得一些文物可以在

1647
00:40:39,000 --> 00:40:42,000
可以不定时的重建天日

1648
00:40:42,000 --> 00:40:43,000
如果每个人都没有整理癖的话

1649
00:40:43,000 --> 00:40:45,000
每个人的阁楼里面都堆满了

1650
00:40:45,000 --> 00:40:46,000
各种各样的

1651
00:40:46,000 --> 00:40:47,000
各种各样的

1652
00:40:47,000 --> 00:40:49,000
在那个时代毫不稀奇

1653
00:40:49,000 --> 00:40:51,000
但是过上二三十年就非常非常

1654
00:40:51,000 --> 00:40:55,000
让人让人爱不释手的东西

1655
00:40:55,000 --> 00:40:58,000
如果没有整理癖的人群存在的话

1656
00:40:58,000 --> 00:41:00,000
这些东西永远不会重建天日

1657
00:41:00,000 --> 00:41:02,000
不过我很难想象

1658
00:41:02,000 --> 00:41:07,000
什么这个过期杂志能成为什么一个玩物吗

1659
00:41:07,000 --> 00:41:09,000
过期杂志的确很难成为的玩物

1660
00:41:09,000 --> 00:41:09,000
但

1661
00:41:09,000 --> 00:41:13,000
所以起码还是

1662
00:41:13,000 --> 00:41:15,000
就在可以预见的将来

1663
00:41:15,000 --> 00:41:17,000
这个东西都只会成为一个负担

1664
00:41:17,000 --> 00:41:19,000
而不会成为一个有价值的东西

1665
00:41:19,000 --> 00:41:20,000
可能唯一的价值就是

1666
00:41:20,000 --> 00:41:23,000
缅怀一下什么逝去的青春

1667
00:41:23,000 --> 00:41:26,000
它有展示的价值和收藏

1668
00:41:26,000 --> 00:41:27,000
我也不知道

1669
00:41:27,000 --> 00:41:29,000
它又不是四大名著

1670
00:41:29,000 --> 00:41:31,000
它我给展示给谁看

1671
00:41:31,000 --> 00:41:32,000
不

1672
00:41:32,000 --> 00:41:36,000
这就好像一台古旧的计算机一样

1673
00:41:36,000 --> 00:41:37,000
它没有什么使用价值的

1674
00:41:37,000 --> 00:41:38,000
可是它摆在那儿

1675
00:41:38,000 --> 00:41:40,000
就是可以让人觉得你很有文化

1676
00:41:40,000 --> 00:41:40,000
不是

1677
00:41:40,000 --> 00:41:46,000
你真的觉得大周软件会让你显得很有文化

1678
00:41:46,000 --> 00:41:47,000
我这个

1679
00:41:47,000 --> 00:41:47,000
我又在鬼扯了

1680
00:41:47,000 --> 00:41:49,000
I doubt it

1681
00:41:49,000 --> 00:41:51,000
你有一个什么 PGP 10 或者 11

1682
00:41:51,000 --> 00:41:52,000
你摆在家里可能还行

1683
00:41:52,000 --> 00:41:54,000
但是像这种东西

1684
00:41:54,000 --> 00:41:55,000
Imagine that

1685
00:41:55,000 --> 00:41:57,000
十年之后你有了一个大宅子

1686
00:41:57,000 --> 00:41:59,000
然后大宅子里面有一个书房

1687
00:41:59,000 --> 00:42:02,000
书房里面摆了一大堆过

1688
00:42:02,000 --> 00:42:05,000
大软件 90 年代的期刊

1689
00:42:05,000 --> 00:42:07,000
然后每一本都压得像钻石

1690
00:42:07,000 --> 00:42:09,000
压得像大理石一样品

1691
00:42:09,000 --> 00:42:11,000
然后摆在书架上

1692
00:42:11,000 --> 00:42:11,000
然后这个时候

1693
00:42:11,000 --> 00:42:14,000
你的童年朋友们来玩的时候

1694
00:42:14,000 --> 00:42:14,000
就说

1695
00:42:14,000 --> 00:42:15,000
哇

1696
00:42:15,000 --> 00:42:16,000
你还收着 90 年代的大软件

1697
00:42:16,000 --> 00:42:18,000
这难道不是一个谈资吗

1698
00:42:18,000 --> 00:42:20,000
难道他不会认为你是一个 weirdome

1699
00:42:20,000 --> 00:42:25,000
对吧

1700
00:42:25,000 --> 00:42:26,000
Next

1701
00:42:26,000 --> 00:42:33,000
所以我们两个其实还是有分歧的

1702
00:42:33,000 --> 00:42:36,000
我们两个在价值观上还是有分歧的

1703
00:42:36,000 --> 00:42:37,000
对

1704
00:42:37,000 --> 00:42:39,000
太好了

1705
00:42:39,000 --> 00:42:41,000
有得聊了

1706
00:42:41,000 --> 00:42:47,000
然后另外一个就是我前两期也提到的 Anantek

1707
00:42:47,000 --> 00:42:51,000
也是他没有停刊了

1708
00:42:51,000 --> 00:42:52,000
但是他被卖给了 Purch

1709
00:42:52,000 --> 00:42:54,000
这个你们也在听我们聊过

1710
00:42:54,000 --> 00:42:56,000
这个我没有什么太多可说的

1711
00:42:56,000 --> 00:42:58,000
但我也觉得挺可惜的

1712
00:42:58,000 --> 00:42:58,000
其实事情

1713
00:42:58,000 --> 00:42:59,000
这个没什么

1714
00:42:59,000 --> 00:43:00,000
就这个还好

1715
00:43:00,000 --> 00:43:01,000
他卖给那个

1716
00:43:01,000 --> 00:43:02,000
只是换了这个东家而已

1717
00:43:02,000 --> 00:43:04,000
但是编辑团队

1718
00:43:04,000 --> 00:43:05,000
还是没变

1719
00:43:05,000 --> 00:43:06,000
然后他还是独立运作的

1720
00:43:06,000 --> 00:43:07,000
这个其实倒没什么

1721
00:43:07,000 --> 00:43:09,000
但是其实也反映出一个现象

1722
00:43:09,000 --> 00:43:10,000
就是

1723
00:43:10,000 --> 00:43:12,000
但是他们说的理由之一

1724
00:43:12,000 --> 00:43:14,000
就是这样可以增强

1725
00:43:14,000 --> 00:43:17,000
他们在这个广告买主那里的一个

1726
00:43:17,000 --> 00:43:17,000
什么

1727
00:43:17,000 --> 00:43:18,000
就竞争力

1728
00:43:18,000 --> 00:43:19,000
因为你大平台

1729
00:43:19,000 --> 00:43:21,000
这个买主更多

1730
00:43:21,000 --> 00:43:21,000
就是这个

1731
00:43:21,000 --> 00:43:23,000
其实潜台词就是说

1732
00:43:23,000 --> 00:43:26,000
他作为一个独立的这么一个网站

1733
00:43:26,000 --> 00:43:28,000
运营的广告收入

1734
00:43:28,000 --> 00:43:29,000
其实要么就是

1735
00:43:29,000 --> 00:43:29,000
难以为止

1736
00:43:29,000 --> 00:43:30,000
对

1737
00:43:30,000 --> 00:43:30,000
要么没有增长

1738
00:43:30,000 --> 00:43:31,000
终究还是要去

1739
00:43:31,000 --> 00:43:33,000
终究还是需要更多的钱

1740
00:43:33,000 --> 00:43:33,000
对

1741
00:43:33,000 --> 00:43:36,000
所以其实跟那个 DoubleTedop 面临的是同样的问题

1742
00:43:36,000 --> 00:43:38,000
只是说他的那个程度没有那么严重

1743
00:43:38,000 --> 00:43:39,000
而且他现在是说

1744
00:43:39,000 --> 00:43:41,000
找到了一个还不错的买家

1745
00:43:41,000 --> 00:43:43,000
然后能够

1746
00:43:43,000 --> 00:43:45,000
就起码我们希望他能够解决问题吧

1747
00:43:45,000 --> 00:43:47,000
但是可能再过个两三年

1748
00:43:47,000 --> 00:43:49,000
发现卖过去还是不行

1749
00:43:49,000 --> 00:43:50,000
那再怎么样呢

1750
00:43:50,000 --> 00:43:51,000
我们也不知道

1751
00:43:51,000 --> 00:43:54,000
那就是像这种所谓的这种 hardcore 媒体

1752
00:43:54,000 --> 00:43:55,000
包括 B 节目在内

1753
00:43:55,000 --> 00:43:57,000
都有这种用户群体

1754
00:43:57,000 --> 00:43:58,000
就读者群体

1755
00:43:58,000 --> 00:44:00,000
或者听众群体比较小众

1756
00:44:00,000 --> 00:44:01,000
然后没有办法

1757
00:44:01,000 --> 00:44:04,000
可以持续盈利化做下去的情况

1758
00:44:04,000 --> 00:44:04,000
对吧

1759
00:44:04,000 --> 00:44:06,000
起码我们现在还是在免费做这件事情

1760
00:44:06,000 --> 00:44:06,000
对不对

1761
00:44:06,000 --> 00:44:08,000
就没有任何收费的

1762
00:44:08,000 --> 00:44:09,000
这个

1763
00:44:09,000 --> 00:44:11,000
尝试嘛

1764
00:44:11,000 --> 00:44:11,000
目前还

1765
00:44:11,000 --> 00:44:12,000
征兆

1766
00:44:12,000 --> 00:44:13,000
而且我们收的话

1767
00:44:13,000 --> 00:44:14,000
大概也是就

1768
00:44:14,000 --> 00:44:15,000
Donate

1769
00:44:15,000 --> 00:44:17,000
就只捐赠而已

1770
00:44:17,000 --> 00:44:18,000
对对

1771
00:44:18,000 --> 00:44:19,000
但是就像他并不可能

1772
00:44:19,000 --> 00:44:21,000
就我们不可能说

1773
00:44:21,000 --> 00:44:23,000
我们来全职做这个东西

1774
00:44:23,000 --> 00:44:23,000
对吧

1775
00:44:23,000 --> 00:44:25,000
肯定养活不了我们两个人

1776
00:44:25,000 --> 00:44:27,000
好吧

1777
00:44:27,000 --> 00:44:28,000
OK

1778
00:44:28,000 --> 00:44:30,000
现在开始今天的正题

1779
00:44:30,000 --> 00:44:32,000
其实今天我们准备

1780
00:44:32,000 --> 00:44:33,000
刚才扯了

1781
00:44:33,000 --> 00:44:35,000
差不多 45 分钟的毒子了

1782
00:44:35,000 --> 00:44:36,000
对

1783
00:44:36,000 --> 00:44:37,000
我们今天准备准备

1784
00:44:37,000 --> 00:44:40,000
延续着之前的那个话题

1785
00:44:40,000 --> 00:44:40,000
也不叫话题吧

1786
00:44:40,000 --> 00:44:42,000
那个方向走下去

1787
00:44:42,000 --> 00:44:45,000
今天我们讲了一些这个运维的一些东西

1788
00:44:45,000 --> 00:44:45,000
对

1789
00:44:45,000 --> 00:44:48,000
上一期我们说的东西

1790
00:44:48,000 --> 00:44:49,000
其实有一点像

1791
00:44:49,000 --> 00:44:50,000
从

1792
00:44:50,000 --> 00:44:53,000
从小处

1793
00:44:53,000 --> 00:44:56,000
就是从非常小的一个单独的程序运行

1794
00:44:56,000 --> 00:44:58,000
或者说一群程序

1795
00:44:58,000 --> 00:45:01,000
在一个操作系统上运行的时候

1796
00:45:01,000 --> 00:45:04,000
他们的周期生存周期管理

1797
00:45:04,000 --> 00:45:05,000
然后我们上一期又提到了

1798
00:45:05,000 --> 00:45:07,000
这些东西当你把它

1799
00:45:07,000 --> 00:45:10,000
从你开发那台接线机上拿出来

1800
00:45:10,000 --> 00:45:12,000
放到其他接线机

1801
00:45:12,000 --> 00:45:12,000
或者反过来

1802
00:45:12,000 --> 00:45:14,000
你怎么把别人开发好的程序

1803
00:45:14,000 --> 00:45:15,000
放到你的接线机上用的时候

1804
00:45:15,000 --> 00:45:19,000
去管理它的生存周期

1805
00:45:19,000 --> 00:45:22,000
而这一期我们想要说的

1806
00:45:22,000 --> 00:45:23,000
其实就是

1807
00:45:23,000 --> 00:45:24,000
你怎么用它

1808
00:45:24,000 --> 00:45:26,000
你怎样才能在

1809
00:45:26,000 --> 00:45:29,000
就是整

1810
00:45:29,000 --> 00:45:31,000
你一个人作为一个开发者

1811
00:45:31,000 --> 00:45:32,000
管理一堆程序

1812
00:45:32,000 --> 00:45:34,000
和你一个公司

1813
00:45:34,000 --> 00:45:36,000
去管理一堆

1814
00:45:36,000 --> 00:45:37,000
你开发出来的程序

1815
00:45:37,000 --> 00:45:40,000
跑在一堆服务器上

1816
00:45:40,000 --> 00:45:42,000
其实又是一个更大的层级

1817
00:45:42,000 --> 00:45:44,000
然后我们今天想要讨论

1818
00:45:44,000 --> 00:45:45,000
其实是这件事

1819
00:45:45,000 --> 00:45:47,000
在这个

1820
00:45:47,000 --> 00:45:49,000
之前可能先要引入一个概念

1821
00:45:49,000 --> 00:45:50,000
就是说

1822
00:45:50,000 --> 00:45:51,000
本身有两个概念

1823
00:45:51,000 --> 00:45:53,000
就是一个叫 Dev

1824
00:45:53,000 --> 00:45:53,000
一个叫 Op

1825
00:45:53,000 --> 00:45:55,000
就是开发者和运维者

1826
00:45:55,000 --> 00:45:56,000
这两种身份

1827
00:45:56,000 --> 00:45:57,000
我们传统上

1828
00:45:57,000 --> 00:45:59,000
应该是分离的吧

1829
00:45:59,000 --> 00:46:00,000
就大部分那种传统企业里面

1830
00:46:00,000 --> 00:46:01,000
都是这样子

1831
00:46:01,000 --> 00:46:03,000
所谓 Dev 就是 Developer

1832
00:46:03,000 --> 00:46:04,000
开发者

1833
00:46:04,000 --> 00:46:06,000
然后开发者的传统意义上的

1834
00:46:06,000 --> 00:46:09,000
应该包括哪些呢

1835
00:46:09,000 --> 00:46:10,000
我觉得可以包括

1836
00:46:10,000 --> 00:46:11,000
比如说 Programmers

1837
00:46:11,000 --> 00:46:12,000
肯定吧

1838
00:46:12,000 --> 00:46:13,000
他们是 Developer

1839
00:46:13,000 --> 00:46:14,000
然后 Testers

1840
00:46:14,000 --> 00:46:17,000
Testers 应该其实也是开发团队的一部分

1841
00:46:17,000 --> 00:46:18,000
对

1842
00:46:18,000 --> 00:46:19,000
它是最保证

1843
00:46:19,000 --> 00:46:21,000
这个产品质量的最后一个环节

1844
00:46:21,000 --> 00:46:22,000
对

1845
00:46:22,000 --> 00:46:22,000
然后

1846
00:46:22,000 --> 00:46:23,000
Wait a second

1847
00:46:23,000 --> 00:46:25,000
QA 是最后一个环节

1848
00:46:25,000 --> 00:46:26,000
我还是 QA 和 Tester

1849
00:46:26,000 --> 00:46:28,000
一般是混在一起的

1850
00:46:28,000 --> 00:46:32,000
就他开发者自己有一套标准化的测试

1851
00:46:32,000 --> 00:46:32,000
一般是

1852
00:46:32,000 --> 00:46:34,000
然后 QA 是在

1853
00:46:34,000 --> 00:46:36,000
就是这么白核和黑核

1854
00:46:36,000 --> 00:46:36,000
对吧

1855
00:46:36,000 --> 00:46:36,000
对

1856
00:46:36,000 --> 00:46:39,000
就是要一个黑核测试

1857
00:46:39,000 --> 00:46:40,000
就 QA 那个环节要保证

1858
00:46:40,000 --> 00:46:42,000
最后最终的那个结果

1859
00:46:42,000 --> 00:46:45,000
然后就是这个产品出来

1860
00:46:45,000 --> 00:46:48,000
然后运维的人把它负责

1861
00:46:48,000 --> 00:46:49,000
就是 operator

1862
00:46:49,000 --> 00:46:51,000
把它弄到机器上去跑

1863
00:46:51,000 --> 00:46:54,000
然后保证它能够连续稳定的工作下去

1864
00:46:54,000 --> 00:46:54,000
然后

1865
00:46:54,000 --> 00:46:55,000
对

1866
00:46:55,000 --> 00:46:57,000
然后这一部分就是 operator

1867
00:46:57,000 --> 00:46:59,000
ops

1868
00:46:59,000 --> 00:47:01,000
应该是 operations 还是 operators

1869
00:47:01,000 --> 00:47:03,000
如果 developer

1870
00:47:03,000 --> 00:47:04,000
developer

1871
00:47:04,000 --> 00:47:04,000
operator

1872
00:47:04,000 --> 00:47:04,000
OK

1873
00:47:04,000 --> 00:47:06,000
operator 包括哪些人

1874
00:47:06,000 --> 00:47:06,000
包括

1875
00:47:06,000 --> 00:47:10,000
首先那些管网络的肯定是 operator

1876
00:47:10,000 --> 00:47:11,000
网管

1877
00:47:11,000 --> 00:47:12,000
网络管理员

1878
00:47:12,000 --> 00:47:14,000
然后 system admin

1879
00:47:14,000 --> 00:47:19,000
其实是更 proper 的一个头衔吧

1880
00:47:19,000 --> 00:47:20,000
对

1881
00:47:20,000 --> 00:47:21,000
system administrator

1882
00:47:21,000 --> 00:47:21,000
系统管理

1883
00:47:21,000 --> 00:47:24,000
然后还有 database administrator

1884
00:47:24,000 --> 00:47:26,000
应该也算是 ops 的一部分吧

1885
00:47:26,000 --> 00:47:27,000
DBA

1886
00:47:27,000 --> 00:47:29,000
DBA 其实借一样的直接

1887
00:47:29,000 --> 00:47:30,000
就只要是在

1888
00:47:30,000 --> 00:47:33,000
一个是在开发时的工种

1889
00:47:33,000 --> 00:47:34,000
一个是在运行时的工种

1890
00:47:34,000 --> 00:47:37,000
可以这么理解吧

1891
00:47:37,000 --> 00:47:40,000
但至少在我接触的几个公司里面

1892
00:47:40,000 --> 00:47:45,000
DBA 其实多半还要参与到 architecture 的决策里面

1893
00:47:45,000 --> 00:47:46,000
就是开发之前的工作

1894
00:47:46,000 --> 00:47:47,000
对

1895
00:47:47,000 --> 00:47:48,000
对

1896
00:47:48,000 --> 00:47:52,000
所以当然这两者之间的分野也不是非常明确

1897
00:47:52,000 --> 00:47:56,000
但我们在这里就把 DBA 画到 ops 里面吧

1898
00:47:56,000 --> 00:47:56,000
嗯

1899
00:47:56,000 --> 00:47:57,000
对

1900
00:47:57,000 --> 00:48:01,000
然后他们两者之间的这个这个这个兴趣其实是有冲突的

1901
00:48:01,000 --> 00:48:02,000
嗯

1902
00:48:02,000 --> 00:48:03,000
对

1903
00:48:03,000 --> 00:48:06,000
就像我们上次提到那个知乎贴子里面说

1904
00:48:06,000 --> 00:48:07,000
就屁股决定脑袋

1905
00:48:07,000 --> 00:48:09,000
对

1906
00:48:09,000 --> 00:48:11,000
开发者的屁股

1907
00:48:11,000 --> 00:48:13,000
坐在他们要做新的东西

1908
00:48:13,000 --> 00:48:16,000
他们要他们要改变世界这一部分

1909
00:48:16,000 --> 00:48:17,000
最新最

1910
00:48:17,000 --> 00:48:19,000
最新的

1911
00:48:19,000 --> 00:48:21,000
最炫的技术

1912
00:48:21,000 --> 00:48:21,000
对

1913
00:48:21,000 --> 00:48:23,000
所以他们他们是奥巴马派的

1914
00:48:23,000 --> 00:48:24,000
We want change

1915
00:48:24,000 --> 00:48:28,000
但是 ops 这一派就比较比较比较保守

1916
00:48:28,000 --> 00:48:30,000
他们说我们要叫什么

1917
00:48:30,000 --> 00:48:31,000
stability

1918
00:48:31,000 --> 00:48:32,000
对

1919
00:48:32,000 --> 00:48:33,000
reliability

1920
00:48:33,000 --> 00:48:33,000
嗯

1921
00:48:33,000 --> 00:48:35,000
就是你跑

1922
00:48:35,000 --> 00:48:36,000
你跑什么东西千万不要坏

1923
00:48:36,000 --> 00:48:38,000
坏了我们就有了麻烦

1924
00:48:38,000 --> 00:48:38,000
麻烦

1925
00:48:38,000 --> 00:48:42,000
就要被什么半夜三点被一个扣起来

1926
00:48:42,000 --> 00:48:43,000
然后去去看哎

1927
00:48:43,000 --> 00:48:45,000
服务器当机了怎么办

1928
00:48:45,000 --> 00:48:45,000
对

1929
00:48:45,000 --> 00:48:46,000
没错

1930
00:48:46,000 --> 00:48:51,000
而 developer 担心的则是哎呀不开发新的东西我就没饭吃了

1931
00:48:51,000 --> 00:48:54,000
嗯

1932
00:48:54,000 --> 00:48:59,000
所以所以传统上在这些企业里面现在这两个工作是工种是完全分离的

1933
00:48:59,000 --> 00:49:01,000
他们有不同的这个职责

1934
00:49:01,000 --> 00:49:03,000
他们有不同的这个侧重点

1935
00:49:03,000 --> 00:49:05,000
然后刚才讲也是因为屁股决定脑袋嘛

1936
00:49:05,000 --> 00:49:08,000
所以他们对这个工具的选择也好啊

1937
00:49:08,000 --> 00:49:11,000
对这个这个这个这个包括操作性能选择也好啊

1938
00:49:11,000 --> 00:49:15,000
他们都是有不同的取这个取向的哈

1939
00:49:15,000 --> 00:49:17,000
对而且他们会不停的互相 blame

1940
00:49:17,000 --> 00:49:19,000
出了问题啊

1941
00:49:19,000 --> 00:49:21,000
开发那些傻逼写的什么破案啊

1942
00:49:21,000 --> 00:49:22,000
一开就死机

1943
00:49:22,000 --> 00:49:27,000
我说因为那帮傻逼我写的这个东西好好的就是跑不起来

1944
00:49:27,000 --> 00:49:28,000
蠢不蠢

1945
00:49:28,000 --> 00:49:28,000
就是啊

1946
00:49:28,000 --> 00:49:34,000
所以就其实这两个割裂还是有点问题的啊

1947
00:49:34,000 --> 00:49:36,000
大家刚才也看到了

1948
00:49:36,000 --> 00:49:40,000
所以最最就是最近的一个区也不叫最近应该有好几年啊

1949
00:49:40,000 --> 00:49:42,000
这种流行的一个趋势就是说

1950
00:49:42,000 --> 00:49:44,000
那我们不要分这么稀好

1951
00:49:44,000 --> 00:49:45,000
我们嗯

1952
00:49:45,000 --> 00:49:46,000
就是二合就这么合体吧

1953
00:49:46,000 --> 00:49:47,000
对

1954
00:49:47,000 --> 00:49:48,000
那么我们就叫做什么 devil

1955
00:49:48,000 --> 00:49:51,000
就是他既是开发者他又是运维的人员

1956
00:49:51,000 --> 00:49:53,000
就是说就是简单来讲

1957
00:49:53,000 --> 00:49:56,000
就是开发者说 deploy your own shit

1958
00:49:56,000 --> 00:50:00,000
就是你自己的狗屎你自己去部署

1959
00:50:00,000 --> 00:50:01,000
然后你自己去运维

1960
00:50:01,000 --> 00:50:02,000
吃你自己的狗屎

1961
00:50:02,000 --> 00:50:04,000
吃然后部署你自己写出来的事

1962
00:50:04,000 --> 00:50:05,000
对

1963
00:50:05,000 --> 00:50:09,000
然后其实从大的一个角度来讲啊

1964
00:50:09,000 --> 00:50:13,000
就是这个可能就刚才我们讲的是一个比较比较比较直白的描述

1965
00:50:13,000 --> 00:50:17,000
但是有一些比如说很 enterprise 的说法

1966
00:50:17,000 --> 00:50:19,000
就是说什么这个什么 end to end ownership

1967
00:50:19,000 --> 00:50:24,000
就是说你这个这个软件的工程的呃

1968
00:50:24,000 --> 00:50:27,000
这个 ownership 就是这个这个权责在哪里

1969
00:50:27,000 --> 00:50:28,000
你是从头到尾

1970
00:50:28,000 --> 00:50:31,000
从他的这个制作到他的这个最终使用

1971
00:50:31,000 --> 00:50:32,000
你都是要负权责

1972
00:50:32,000 --> 00:50:33,000
对

1973
00:50:33,000 --> 00:50:35,000
你从收集用户的需求开始

1974
00:50:35,000 --> 00:50:40,000
然后到把最终产品呈现给用户使用为止

1975
00:50:40,000 --> 00:50:44,000
整个过程里都要自己去去完成

1976
00:50:44,000 --> 00:50:45,000
对

1977
00:50:45,000 --> 00:50:46,000
就这样的话

1978
00:50:46,000 --> 00:50:47,000
就是呃

1979
00:50:47,000 --> 00:50:49,000
就理论上说是可以对这个

1980
00:50:49,000 --> 00:50:51,000
这个开发者也好

1981
00:50:51,000 --> 00:50:52,000
还是运维者也好

1982
00:50:52,000 --> 00:50:54,000
他有更大的一个激励机制

1983
00:50:54,000 --> 00:50:56,000
因为传统上这个开发和运维分开的话

1984
00:50:56,000 --> 00:50:58,000
有一个这么一个不太好的地方

1985
00:50:58,000 --> 00:51:00,000
就是开发者开发完毕之后

1986
00:51:00,000 --> 00:51:00,000
觉得啊

1987
00:51:00,000 --> 00:51:02,000
这个事情就跟我没关系了

1988
00:51:02,000 --> 00:51:04,000
然后这个这个东西到底跑起来怎么样啊

1989
00:51:04,000 --> 00:51:05,000
性能怎么样啊

1990
00:51:05,000 --> 00:51:09,000
就是他们就比较不太关心了吧

1991
00:51:09,000 --> 00:51:10,000
嗯

1992
00:51:10,000 --> 00:51:11,000
然后这样的话

1993
00:51:11,000 --> 00:51:12,000
从来得到的成就感

1994
00:51:12,000 --> 00:51:13,000
可能觉得哎

1995
00:51:13,000 --> 00:51:16,000
那个东西是我从头到脚负责到底的

1996
00:51:16,000 --> 00:51:17,000
然后你就是用手看

1997
00:51:17,000 --> 00:51:18,000
牛逼吧

1998
00:51:18,000 --> 00:51:20,000
你那种成就感可能就没有那么强烈了

1999
00:51:20,000 --> 00:51:21,000
对

2000
00:51:21,000 --> 00:51:22,000
所以从某种意义上来讲呢

2001
00:51:22,000 --> 00:51:24,000
这种所谓 Develop 运动

2002
00:51:24,000 --> 00:51:26,000
或者说这个 End to End Ownership

2003
00:51:26,000 --> 00:51:28,000
它其实有一种也是激励

2004
00:51:28,000 --> 00:51:31,000
激励开发者有更多的这个动力

2005
00:51:31,000 --> 00:51:32,000
去去做事的一个方法吧

2006
00:51:32,000 --> 00:51:33,000
我觉得

2007
00:51:33,000 --> 00:51:34,000
没错

2008
00:51:34,000 --> 00:51:34,000
嗯

2009
00:51:34,000 --> 00:51:37,000
当然同时它这个 Develop 运动呢

2010
00:51:37,000 --> 00:51:41,000
就它对这个这个软件从业者的技能的要求

2011
00:51:41,000 --> 00:51:43,000
就有了更进一步的要求了

2012
00:51:43,000 --> 00:51:46,000
或者说我们之前有一个另外一个概念

2013
00:51:46,000 --> 00:51:47,000
叫做 Full Stack Developer 嘛

2014
00:51:47,000 --> 00:51:49,000
就是所谓全战工程师

2015
00:51:49,000 --> 00:51:53,000
就是你要从这个硬件底层到最终用户界面

2016
00:51:53,000 --> 00:51:55,000
每一个每一个步骤

2017
00:51:55,000 --> 00:51:56,000
你都你不说要精通吧

2018
00:51:56,000 --> 00:51:57,000
那起码你有了解

2019
00:51:57,000 --> 00:52:00,000
你至少要知道出的问题去在哪一层去解决

2020
00:52:00,000 --> 00:52:02,000
那就是说这个是一个所谓的

2021
00:52:02,000 --> 00:52:04,000
如果把这个定为一个终极目标的话

2022
00:52:04,000 --> 00:52:08,000
Develop 其实就是再往这个目标上又更进了一步嘛

2023
00:52:08,000 --> 00:52:08,000
对

2024
00:52:08,000 --> 00:52:12,000
而且其实我觉得 Develop 有点多少有点

2025
00:52:12,000 --> 00:52:15,000
back to the roots 的感觉

2026
00:52:15,000 --> 00:52:17,000
就是在很古早的时代

2027
00:52:17,000 --> 00:52:18,000
每一个程序员都是 Develop

2028
00:52:18,000 --> 00:52:20,000
对

2029
00:52:20,000 --> 00:52:21,000
没有

2030
00:52:21,000 --> 00:52:22,000
还没有那个出现这个

2031
00:52:22,000 --> 00:52:24,000
还没有出现分野对吧

2032
00:52:24,000 --> 00:52:24,000
对

2033
00:52:24,000 --> 00:52:26,000
但是分工

2034
00:52:26,000 --> 00:52:29,000
就是软件工程变得越来越大的时候

2035
00:52:29,000 --> 00:52:35,000
一个人的 scope 可能没办法 cover 到那么大的范围

2036
00:52:35,000 --> 00:52:36,000
但是

2037
00:52:36,000 --> 00:52:37,000
呃

2038
00:52:37,000 --> 00:52:42,000
那个时候的思潮就是要让这一群 Devs 做 Devs 事情

2039
00:52:42,000 --> 00:52:44,000
然后一群 Ops 做 Ops 的事情

2040
00:52:44,000 --> 00:52:45,000
但是现在潮流又反过来

2041
00:52:45,000 --> 00:52:47,000
反过来的就是要

2042
00:52:47,000 --> 00:52:47,000
要

2043
00:52:47,000 --> 00:52:50,000
要希望一个人能够完成所有的事情

2044
00:52:50,000 --> 00:52:51,000
因为这样才可以得到

2045
00:52:51,000 --> 00:52:52,000
怎么说呢

2046
00:52:52,000 --> 00:52:53,000
比较比较高质量的

2047
00:52:53,000 --> 00:52:54,000
呃

2048
00:52:54,000 --> 00:52:55,000
软件

2049
00:52:55,000 --> 00:52:59,000
并且也会让整个开发过程变得更加敏捷一点

2050
00:52:59,000 --> 00:53:00,000
嗯

2051
00:53:00,000 --> 00:53:02,000
其实刚才讲了那么多哈

2052
00:53:02,000 --> 00:53:05,000
就是我们还是要探究一下那个 Develop 这个背景

2053
00:53:05,000 --> 00:53:08,000
刚才讲那个一个激励因素是一个方面

2054
00:53:08,000 --> 00:53:10,000
其实我觉得可能从一个务实的角度来讲

2055
00:53:10,000 --> 00:53:13,000
就特别是现在我们不是流行这个创业小团队吗

2056
00:53:13,000 --> 00:53:14,000
小团队的话

2057
00:53:14,000 --> 00:53:16,000
那么就隐含的一个条

2058
00:53:16,000 --> 00:53:19,000
一个一个前提就是人少

2059
00:53:19,000 --> 00:53:20,000
每个人都要会什么

2060
00:53:20,000 --> 00:53:20,000
对

2061
00:53:20,000 --> 00:53:22,000
就是说我可能这个团队我就三个人

2062
00:53:22,000 --> 00:53:24,000
如果说你这个三个人

2063
00:53:24,000 --> 00:53:27,000
然后你说你其中一个人只写代码

2064
00:53:27,000 --> 00:53:28,000
另外一个只运维

2065
00:53:28,000 --> 00:53:31,000
这显然那可能平时那个写代码的

2066
00:53:31,000 --> 00:53:32,000
人就一直在写代码

2067
00:53:32,000 --> 00:53:33,000
然后运维的人部署完了

2068
00:53:33,000 --> 00:53:34,000
也没什么事干了

2069
00:53:34,000 --> 00:53:34,000
对吧

2070
00:53:34,000 --> 00:53:37,000
就其实对这个资源的利用也是不太合理的

2071
00:53:37,000 --> 00:53:39,000
然后另外一方面就是说

2072
00:53:39,000 --> 00:53:43,000
小公司可能也没有那么那么划分明确的东西

2073
00:53:43,000 --> 00:53:46,000
因为如果你一旦划分明确的话

2074
00:53:46,000 --> 00:53:48,000
你就要在不同的人员之间沟通嘛

2075
00:53:48,000 --> 00:53:53,000
沟通的话其实对这个效率是有很大的

2076
00:53:53,000 --> 00:53:55,000
这个这个折损的

2077
00:53:55,000 --> 00:53:55,000
对

2078
00:53:55,000 --> 00:53:58,000
就是如果你说你是一个小小团队的话

2079
00:53:58,000 --> 00:53:59,000
你肯定是要减

2080
00:53:59,000 --> 00:54:01,000
尽量是减少这种折损

2081
00:54:01,000 --> 00:54:03,000
因为你没有那么多人去

2082
00:54:03,000 --> 00:54:07,000
你没有那么多总的那个那个什么脑力去去消耗

2083
00:54:07,000 --> 00:54:09,000
你要把这些东西全部用在实际的价值上面去

2084
00:54:09,000 --> 00:54:11,000
你得让他们都

2085
00:54:11,000 --> 00:54:14,000
就是在真正实在做事

2086
00:54:14,000 --> 00:54:15,000
所以其实从这个点来讲

2087
00:54:15,000 --> 00:54:17,000
就是代码比如这个运动

2088
00:54:17,000 --> 00:54:19,000
还是从很多务实的考虑出来的结果吧

2089
00:54:19,000 --> 00:54:20,000
我觉得

2090
00:54:20,000 --> 00:54:21,000
没错

2091
00:54:21,000 --> 00:54:25,000
那要成为一个 DevOps

2092
00:54:25,000 --> 00:54:28,000
其实说难也不难

2093
00:54:28,000 --> 00:54:29,000
但说简单也不是很简单吧

2094
00:54:29,000 --> 00:54:31,000
就如果你只是一个

2095
00:54:31,000 --> 00:54:36,000
或说我是一个很普通的学历点编程的人

2096
00:54:36,000 --> 00:54:40,000
我怎样才能知道自己要成为一个 DevOps

2097
00:54:40,000 --> 00:54:43,000
需要哪些额外的知识呢

2098
00:54:43,000 --> 00:54:48,000
就是其实这个问题有点让我想起就是之前

2099
00:54:48,000 --> 00:54:51,000
不只是在知乎上

2100
00:54:51,000 --> 00:54:52,000
就是很多地方都会出现一个问题

2101
00:54:52,000 --> 00:54:54,000
就是我是学计算机的

2102
00:54:54,000 --> 00:54:58,000
但是我的亲戚朋友让我修电脑我不会修

2103
00:54:58,000 --> 00:55:03,000
我应该怎么让他们理解我是学计算机的

2104
00:55:03,000 --> 00:55:05,000
但是我不一定会修电脑呢

2105
00:55:05,000 --> 00:55:08,000
我觉得我对这个问题的回答就是

2106
00:55:08,000 --> 00:55:11,000
你一个学计算机的怎么可以不会修电脑

2107
00:55:11,000 --> 00:55:18,000
但是现在想想这种反应可能是

2108
00:55:18,000 --> 00:55:19,000
错的

2109
00:55:19,000 --> 00:55:20,000
是不那么

2110
00:55:20,000 --> 00:55:22,000
至少是政治不正确的

2111
00:55:22,000 --> 00:55:24,000
就是你不能要求每一个人

2112
00:55:24,000 --> 00:55:27,000
所选择的专业都是他真正

2113
00:55:27,000 --> 00:55:30,000
这么说好像太黑了

2114
00:55:30,000 --> 00:55:32,000
都是他真正所喜欢的

2115
00:55:32,000 --> 00:55:34,000
这个没什么好黑的

2116
00:55:34,000 --> 00:55:35,000
这个现实就是

2117
00:55:35,000 --> 00:55:37,000
我相信很多人就学的那个专业

2118
00:55:37,000 --> 00:55:40,000
都不是他自己所真正喜欢的东西

2119
00:55:40,000 --> 00:55:40,000
对

2120
00:55:40,000 --> 00:55:44,000
在跑在报修电脑机科学专业之前

2121
00:55:44,000 --> 00:55:46,000
可能完全不知道修电脑机科学到的是干嘛

2122
00:55:46,000 --> 00:55:47,000
对啊

2123
00:55:47,000 --> 00:55:48,000
就可能这个就业不错

2124
00:55:48,000 --> 00:55:49,000
这个是我没有经历过的一个

2125
00:55:49,000 --> 00:55:52,000
这是我不能理解的一种现象

2126
00:55:52,000 --> 00:55:56,000
但我也我觉得可能具体去想

2127
00:55:56,000 --> 00:55:58,000
也没什么可以后非的

2128
00:55:58,000 --> 00:56:00,000
就可能有些人就是这样的

2129
00:56:00,000 --> 00:56:01,000
但在我看来

2130
00:56:01,000 --> 00:56:03,000
一个学计算机的不会修电脑

2131
00:56:03,000 --> 00:56:05,000
是挺让人费解的一件事情

2132
00:56:05,000 --> 00:56:09,000
甚至会在主观上去寻找一个

2133
00:56:09,000 --> 00:56:11,000
怎么才能让别人明白

2134
00:56:11,000 --> 00:56:14,000
我学计算机的就不会修电脑

2135
00:56:14,000 --> 00:56:15,000
是一件正常的事情

2136
00:56:15,000 --> 00:56:21,000
anyway 就回到 DevOps 这个话题

2137
00:56:21,000 --> 00:56:23,000
就是我觉得这就有点像

2138
00:56:23,000 --> 00:56:25,000
你要成为一个 DevOps

2139
00:56:25,000 --> 00:56:26,000
但是你只会 Dev

2140
00:56:26,000 --> 00:56:28,000
可能就有点像你是一个学计算机的人

2141
00:56:28,000 --> 00:56:30,000
然后你要学会怎么修计算机一样

2142
00:56:30,000 --> 00:56:34,000
是一个从偏向理论部分

2143
00:56:34,000 --> 00:56:37,000
转向于理论和实践

2144
00:56:37,000 --> 00:56:39,000
相结合的一个状态的过程

2145
00:56:39,000 --> 00:56:44,000
然后还有一部人是从 up

2146
00:56:44,000 --> 00:56:45,000
然后转向 DevOps

2147
00:56:45,000 --> 00:56:47,000
他们又需要学习什么东西

2148
00:56:47,000 --> 00:56:50,000
对这个其实也挺有意思的

2149
00:56:50,000 --> 00:56:53,000
就是想象你是一个

2150
00:56:53,000 --> 00:56:55,000
在中国寻电脑城

2151
00:56:55,000 --> 00:56:57,000
传机长大的孩子

2152
00:56:57,000 --> 00:57:01,000
然后在生命的某一时刻

2153
00:57:01,000 --> 00:57:03,000
你突然决定说

2154
00:57:03,000 --> 00:57:06,000
我对硬件搞得这么熟

2155
00:57:06,000 --> 00:57:09,000
那我想要研究一下软件怎么弄

2156
00:57:09,000 --> 00:57:11,000
这好像也

2157
00:57:11,000 --> 00:57:14,000
我觉得你这个夸得有点大

2158
00:57:14,000 --> 00:57:16,000
我们还是说回一个正常一点

2159
00:57:16,000 --> 00:57:17,000
就是说你是一个系统管理员

2160
00:57:17,000 --> 00:57:19,000
或者你是个网络管理员

2161
00:57:19,000 --> 00:57:20,000
然后你怎么想

2162
00:57:20,000 --> 00:57:23,000
我也来写几个程序部署来玩玩

2163
00:57:23,000 --> 00:57:24,000
有这样的人存在吗

2164
00:57:24,000 --> 00:57:25,000
有啊有啊

2165
00:57:25,000 --> 00:57:26,000
肯定是有的

2166
00:57:26,000 --> 00:57:27,000
可是为什么会有人

2167
00:57:27,000 --> 00:57:29,000
先成为一个系统管理员

2168
00:57:29,000 --> 00:57:30,000
而不会编程

2169
00:57:30,000 --> 00:57:32,000
这个就是要讲的一件事情呢

2170
00:57:32,000 --> 00:57:36,000
就是以前什么思科中

2171
00:57:36,000 --> 00:57:38,000
还很牛逼的时候

2172
00:57:38,000 --> 00:57:39,000
不是有什么各种认证吗

2173
00:57:39,000 --> 00:57:42,000
就是什么

2174
00:57:42,000 --> 00:57:45,000
还有好几个什么 CCEP 什么

2175
00:57:45,000 --> 00:57:46,000
明明一下缩写

2176
00:57:46,000 --> 00:57:47,000
我也想不起来

2177
00:57:47,000 --> 00:57:50,000
就是专门教你怎么去管理

2178
00:57:50,000 --> 00:57:51,000
一个组件计算机网络

2179
00:57:51,000 --> 00:57:52,000
管理计算机网络

2180
00:57:52,000 --> 00:57:53,000
然后包括很多人

2181
00:57:53,000 --> 00:57:56,000
也就是从这个地方入手吧

2182
00:57:56,000 --> 00:57:57,000
然后开始去接触

2183
00:57:57,000 --> 00:57:58,000
这个服务器的

2184
00:57:58,000 --> 00:58:00,000
就起码就中国互联网

2185
00:58:00,000 --> 00:58:01,000
早期创业那边

2186
00:58:01,000 --> 00:58:03,000
有很多这种渠道出来的嘛

2187
00:58:03,000 --> 00:58:05,000
哦我明白了

2188
00:58:05,000 --> 00:58:07,000
就是就等于把计算机

2189
00:58:07,000 --> 00:58:10,000
网络管理作为一种技能来教授

2190
00:58:10,000 --> 00:58:11,000
对对

2191
00:58:11,000 --> 00:58:11,000
这就是一个

2192
00:58:11,000 --> 00:58:13,000
还有还可以颁证书的技能呢

2193
00:58:13,000 --> 00:58:15,000
当然是很多人有这种方式

2194
00:58:15,000 --> 00:58:16,000
我知道这个东西

2195
00:58:16,000 --> 00:58:18,000
那个时候虽然我还小

2196
00:58:18,000 --> 00:58:19,000
但我总觉得这些东西

2197
00:58:19,000 --> 00:58:20,000
应该是至少是

2198
00:58:20,000 --> 00:58:23,000
就是你得先会写程序

2199
00:58:23,000 --> 00:58:24,000
才会去考的一个东西吧

2200
00:58:24,000 --> 00:58:25,000
不需要

2201
00:58:25,000 --> 00:58:26,000
完全不需要

2202
00:58:26,000 --> 00:58:28,000
原来如此

2203
00:58:28,000 --> 00:58:30,000
有什么北大七鸟

2204
00:58:30,000 --> 00:58:31,000
你看有吗

2205
00:58:31,000 --> 00:58:32,000
这种各种培训班

2206
00:58:32,000 --> 00:58:33,000
也是在做这种事情

2207
00:58:33,000 --> 00:58:34,000
记得记得

2208
00:58:34,000 --> 00:58:35,000
现在什么蓝箱技巧

2209
00:58:35,000 --> 00:58:37,000
估计在做一个事吧

2210
00:58:37,000 --> 00:58:37,000
OK

2211
00:58:37,000 --> 00:58:38,000
对

2212
00:58:38,000 --> 00:58:41,000
就是这方面是属于一个比较成熟的

2213
00:58:41,000 --> 00:58:41,000
因为

2214
00:58:41,000 --> 00:58:42,000
因为网络

2215
00:58:42,000 --> 00:58:45,000
其实它是一个眼镜相对于

2216
00:58:45,000 --> 00:58:46,000
相对来说比较慢

2217
00:58:46,000 --> 00:58:47,000
就是它的这个技术

2218
00:58:47,000 --> 00:58:49,000
是比较稳定的一个东西嘛

2219
00:58:49,000 --> 00:58:53,000
然后就会有一些这种成熟的培训体系来做

2220
00:58:53,000 --> 00:58:56,000
这个教大家怎么去使用组件网络

2221
00:58:56,000 --> 00:58:58,000
怎么去调试啊

2222
00:58:58,000 --> 00:58:58,000
之类的东西

2223
00:58:58,000 --> 00:59:02,000
然后很多这个公司招人的时候

2224
00:59:02,000 --> 00:59:04,000
也会去选择嘛

2225
00:59:04,000 --> 00:59:05,000
就说那我来招一个网络管理员

2226
00:59:05,000 --> 00:59:06,000
把这个东西弄好就好了

2227
00:59:06,000 --> 00:59:07,000
好吧

2228
00:59:07,000 --> 00:59:09,000
现在我大概明白了

2229
00:59:09,000 --> 00:59:10,000
OK

2230
00:59:10,000 --> 00:59:12,000
对

2231
00:59:12,000 --> 00:59:14,000
那好吧

2232
00:59:14,000 --> 00:59:16,000
那我们来说说做一个 DevOps

2233
00:59:16,000 --> 00:59:17,000
到底需要哪些支持

2234
00:59:17,000 --> 00:59:20,000
首先你得知道燃电工程

2235
00:59:20,000 --> 00:59:21,000
对吧

2236
00:59:21,000 --> 00:59:21,000
对

2237
00:59:21,000 --> 00:59:22,000
你也会写程序

2238
00:59:22,000 --> 00:59:24,000
包括燃电工程的所有的那些东西

2239
00:59:24,000 --> 00:59:27,000
什么算法啊

2240
00:59:27,000 --> 00:59:28,000
什么东西之类的

2241
00:59:28,000 --> 00:59:29,000
你得全会

2242
00:59:29,000 --> 00:59:31,000
就你得先把那个东西做出来

2243
00:59:31,000 --> 00:59:31,000
对吧

2244
00:59:31,000 --> 00:59:33,000
你得是一个厨师

2245
00:59:33,000 --> 00:59:34,000
对

2246
00:59:34,000 --> 00:59:36,000
就是或者说我们前两期提及的这些内容

2247
00:59:36,000 --> 00:59:37,000
你得会

2248
00:59:37,000 --> 00:59:37,000
你得会

2249
00:59:37,000 --> 00:59:40,000
然后在那些基础上

2250
00:59:40,000 --> 00:59:41,000
你还得知道

2251
00:59:41,000 --> 00:59:43,000
就是现代的一个服务器

2252
00:59:43,000 --> 00:59:45,000
是怎么样子

2253
00:59:45,000 --> 00:59:45,000
现在一个

2254
00:59:45,000 --> 00:59:47,000
它需要一个什么样的操作系统

2255
00:59:47,000 --> 00:59:48,000
它下面有什么工具

2256
00:59:48,000 --> 00:59:49,000
刚才我讲

2257
00:59:49,000 --> 00:59:51,000
我们待会会提到一些部署的一些工具

2258
00:59:51,000 --> 00:59:55,000
然后你还得知道网络的基础的一些东西是怎么样子的

2259
00:59:55,000 --> 00:59:58,000
什么 TCPIP 几层几层

2260
00:59:58,000 --> 00:59:59,000
然后每个包干嘛的

2261
00:59:59,000 --> 01:00:00,000
然后每一层能做什么

2262
01:00:00,000 --> 01:00:02,000
因为这样的话

2263
01:00:02,000 --> 01:00:03,000
你出了问题

2264
01:00:03,000 --> 01:00:03,000
你才好找

2265
01:00:03,000 --> 01:00:04,000
才好调

2266
01:00:04,000 --> 01:00:13,000
然后你还得会在比如说 Linux 的系统上面配置这些东西使得它能达到你的一些效果

2267
01:00:13,000 --> 01:00:16,000
你还得知道操作系统的底层啊

2268
01:00:16,000 --> 01:00:18,000
什么那些调度怎么样子

2269
01:00:18,000 --> 01:00:20,000
然后如此种种吧

2270
01:00:20,000 --> 01:00:21,000
嗯

2271
01:00:21,000 --> 01:00:21,000
对

2272
01:00:21,000 --> 01:00:24,000
所以总结出来就是要有计算机网络方面的知识

2273
01:00:24,000 --> 01:00:27,000
有计算机架构方面的知识

2274
01:00:27,000 --> 01:00:27,000
对

2275
01:00:27,000 --> 01:00:30,000
并且还要有实践技能

2276
01:00:30,000 --> 01:00:31,000
其实我觉得最重要的一点就是

2277
01:00:31,000 --> 01:00:40,000
你得明白怎么样才能隔着网络去操纵一台远程的计算机

2278
01:00:40,000 --> 01:00:43,000
就是当你看不到那台计算机的时候

2279
01:00:43,000 --> 01:00:45,000
怎么才能操作它

2280
01:00:45,000 --> 01:00:48,000
去探测远程计算机的状态啊

2281
01:00:48,000 --> 01:00:50,000
去配置远程计算机的功能

2282
01:00:50,000 --> 01:00:56,000
然后把你的软件通过一个非同性化的方式去部署到那台计算机上

2283
01:00:56,000 --> 01:01:03,000
然后才能去考虑怎么样把它运行起来之类的

2284
01:01:03,000 --> 01:01:06,000
而这些东西其实都是跟编程没有什么直接关系的

2285
01:01:06,000 --> 01:01:07,000
嗯

2286
01:01:07,000 --> 01:01:08,000
对

2287
01:01:08,000 --> 01:01:09,000
可以这么说吧

2288
01:01:09,000 --> 01:01:09,000
对

2289
01:01:09,000 --> 01:01:14,000
就是如果你习惯了在一个 IDE 里面写出一个程序

2290
01:01:14,000 --> 01:01:17,000
然后点一下 IDE 的那个 play button

2291
01:01:17,000 --> 01:01:19,000
然后这个程序就跑起来的话

2292
01:01:19,000 --> 01:01:21,000
那么可能到这个点上

2293
01:01:21,000 --> 01:01:26,000
你对于怎样才能让这个程序在一个远程的计算机上跑起来

2294
01:01:26,000 --> 01:01:28,000
是莽然无知的

2295
01:01:28,000 --> 01:01:33,000
这一块真是非常需要需要 DevOps 掌握的

2296
01:01:33,000 --> 01:01:33,000
对

2297
01:01:33,000 --> 01:01:39,000
换句话说就是 DevOps 其实是需要一个软件工程师成为一个

2298
01:01:39,000 --> 01:01:42,000
计算机行业的文艺复兴人

2299
01:01:42,000 --> 01:01:42,000
对

2300
01:01:42,000 --> 01:01:43,000
就他得什么都会

2301
01:01:43,000 --> 01:01:48,000
然后包括你得如果拿什么拿餐厅的来做比较好了

2302
01:01:48,000 --> 01:01:50,000
你得是成为一个小餐馆的老板

2303
01:01:50,000 --> 01:01:56,000
你得从采购原材料开始到制作原材料到上菜到包括回收盘子洗碗

2304
01:01:56,000 --> 01:01:58,000
你的全套都得都得搞定

2305
01:01:58,000 --> 01:02:01,000
而不是说像一个五星级酒店大厨

2306
01:02:01,000 --> 01:02:03,000
你只用掌勺就可以了

2307
01:02:03,000 --> 01:02:03,000
对

2308
01:02:03,000 --> 01:02:06,000
对所以这种要求还是蛮高的

2309
01:02:06,000 --> 01:02:09,000
可能说到这儿就有些人已经望而却过了

2310
01:02:09,000 --> 01:02:10,000
就我不要当 DevOps

2311
01:02:10,000 --> 01:02:11,000
我好好写我的程序

2312
01:02:11,000 --> 01:02:11,000
好累

2313
01:02:11,000 --> 01:02:12,000
对

2314
01:02:12,000 --> 01:02:16,000
这好像好像好像有些后端程序员会说

2315
01:02:16,000 --> 01:02:17,000
哎呀钱的那头不要搞

2316
01:02:17,000 --> 01:02:19,000
或者是

2317
01:02:19,000 --> 01:02:24,000
对回到那个 Computer Science 的专业生的比喻

2318
01:02:24,000 --> 01:02:26,000
就是哎呀我干嘛要学练脑

2319
01:02:26,000 --> 01:02:29,000
其实可能有时候我也会有这样的想法

2320
01:02:29,000 --> 01:02:33,000
就是这个东西坏了

2321
01:02:33,000 --> 01:02:34,000
你要我修

2322
01:02:34,000 --> 01:02:37,000
但其实我是没有那么多时间精力

2323
01:02:37,000 --> 01:02:40,000
或者是 know how 去搞定这件事情

2324
01:02:40,000 --> 01:02:48,000
对这个可能对这个广度的需求会比较高

2325
01:02:48,000 --> 01:02:51,000
但对深度的需求其实也没有那么多

2326
01:02:51,000 --> 01:02:56,000
比如说你可能并不真正的需要完全理解

2327
01:02:56,000 --> 01:02:59,000
这个 Linux 的什么内核才能做 DevOps

2328
01:02:59,000 --> 01:02:59,000
对吧

2329
01:02:59,000 --> 01:03:01,000
其实也没有那个必要

2330
01:03:01,000 --> 01:03:03,000
就是说并不是说我们刚才提到那些东西

2331
01:03:03,000 --> 01:03:05,000
你都要每个都要完全精通而已

2332
01:03:05,000 --> 01:03:09,000
你就有时候可能只是作为一个工具的需求

2333
01:03:09,000 --> 01:03:11,000
你知道出了问题怎么去解决它

2334
01:03:11,000 --> 01:03:11,000
你并不

2335
01:03:11,000 --> 01:03:14,000
但如果你有兴趣或者有这个学有余力

2336
01:03:14,000 --> 01:03:17,000
你愿意去去再钻研某一个自己的短板

2337
01:03:17,000 --> 01:03:19,000
其实当然也是很好的

2338
01:03:19,000 --> 01:03:22,000
但是我觉得也不要想到那么太可怕了

2339
01:03:22,000 --> 01:03:22,000
我觉得

2340
01:03:22,000 --> 01:03:24,000
而且还有很重要的一点

2341
01:03:24,000 --> 01:03:27,000
就是要掌握一门 script language

2342
01:03:27,000 --> 01:03:31,000
或者是几门 script language

2343
01:03:31,000 --> 01:03:32,000
除了 share script 之外

2344
01:03:32,000 --> 01:03:35,000
还要掌握什么 Ruby of Heizner 之类的

2345
01:03:35,000 --> 01:03:38,000
因为我们接下来我提到很多 opt to

2346
01:03:38,000 --> 01:03:40,000
其实都是逃不掉的

2347
01:03:40,000 --> 01:03:41,000
对 逃不掉的

2348
01:03:41,000 --> 01:03:47,000
好 那么开始介绍这些运维的一些常见的工具吧

2349
01:03:47,000 --> 01:03:47,000
好了

2350
01:03:47,000 --> 01:03:48,000
好呀

2351
01:03:48,000 --> 01:03:51,000
最简单的一个也是可能比较稍微古老

2352
01:03:51,000 --> 01:03:54,000
或者是这个没有那么吓人的一个工具

2353
01:03:54,000 --> 01:03:55,000
叫做 fabric

2354
01:03:55,000 --> 01:03:59,000
这就是我们 Pythonista 喜欢的东西

2355
01:03:59,000 --> 01:04:01,000
对 这是一个什么呢

2356
01:04:01,000 --> 01:04:07,000
就是一个可以用 Python 脚本语言来编程控制

2357
01:04:07,000 --> 01:04:09,000
或者说你就写几个 Python 脚本来

2358
01:04:09,000 --> 01:04:11,000
然后来控制这个远

2359
01:04:11,000 --> 01:04:16,000
像某几台远程服务器发送指定的一个工具

2360
01:04:16,000 --> 01:04:18,000
可以这么说吧

2361
01:04:18,000 --> 01:04:20,000
对 就是其实它是非常简单的一个

2362
01:04:20,000 --> 01:04:27,000
让你可以批量处理一堆远程计算机上

2363
01:04:27,000 --> 01:04:31,000
比如说在一堆远程计算机上同时运行一个程序

2364
01:04:31,000 --> 01:04:35,000
然后看他们的输出结果之类的

2365
01:04:35,000 --> 01:04:37,000
这样一个很简单的工具

2366
01:04:37,000 --> 01:04:39,000
就是简单

2367
01:04:39,000 --> 01:04:43,000
就是它可以让你通过 SSH 协议

2368
01:04:43,000 --> 01:04:46,000
其实它就是一个可编程的 SSH 客户本可以这么讲

2369
01:04:46,000 --> 01:04:49,000
然后 Ruby 那边有一个叫做 CAPIS Channel

2370
01:04:49,000 --> 01:04:52,000
这可能这就是一个意大利词

2371
01:04:52,000 --> 01:04:53,000
应该看起来像

2372
01:04:53,000 --> 01:04:57,000
这么一个工具 CAPIS Channel

2373
01:04:57,000 --> 01:05:05,000
然后它也是利用了 Ruby 的这张比较强力的写 DSL 的功能

2374
01:05:05,000 --> 01:05:08,000
搞出这么一套东西

2375
01:05:08,000 --> 01:05:10,000
就是它也是一个 Ruby Jam

2376
01:05:10,000 --> 01:05:16,000
然后也是可以定义一大堆在远程机器上跑起来的东西

2377
01:05:17,000 --> 01:05:18,000
诸如此类的

2378
01:05:18,000 --> 01:05:20,000
只不过是 Ruby 这边的

2379
01:05:20,000 --> 01:05:24,000
而且可能应该是要比 Fabric 更强大一点

2380
01:05:24,000 --> 01:05:24,000
我觉得

2381
01:05:24,000 --> 01:05:30,000
但是不管是这个叫什么 CAPIS Channel 和这个 Fabric 也好

2382
01:05:30,000 --> 01:05:34,000
它都有一个这个很简单的工具

2383
01:05:34,000 --> 01:05:36,000
就是你知道理解 SSH 怎么回事

2384
01:05:36,000 --> 01:05:39,000
就基本上能够写能够用它来做一些自动化的工作

2385
01:05:39,000 --> 01:05:41,000
但是它的问题在哪里呢

2386
01:05:41,000 --> 01:05:46,000
就是如果它要批量处理多台机器的话

2387
01:05:46,000 --> 01:05:47,000
就同时处理多台机器的话

2388
01:05:47,000 --> 01:05:52,000
它要求那些机器的状态是一致的

2389
01:05:52,000 --> 01:05:55,000
不然会出现什么问题呢

2390
01:05:55,000 --> 01:05:56,000
就是你写一个脚本

2391
01:05:56,000 --> 01:05:56,000
它可能

2392
01:05:56,000 --> 01:06:01,000
但你可以说用 EF 语句去判断它当前的状态是怎么样子

2393
01:06:01,000 --> 01:06:03,000
但是总体来讲

2394
01:06:03,000 --> 01:06:06,000
如果你的这个操作多台机器的状态

2395
01:06:06,000 --> 01:06:07,000
不一致

2396
01:06:07,000 --> 01:06:10,000
那么你可能执行的每一条指令的成功也失败

2397
01:06:10,000 --> 01:06:11,000
就不确定

2398
01:06:11,000 --> 01:06:11,000
对吧

2399
01:06:11,000 --> 01:06:12,000
这样的话

2400
01:06:12,000 --> 01:06:17,000
你对接下来的要做的操作就会变得分支很多

2401
01:06:17,000 --> 01:06:19,000
就管理起来并不方便

2402
01:06:19,000 --> 01:06:21,000
就是这一批工具

2403
01:06:21,000 --> 01:06:23,000
这两个工具就代表了

2404
01:06:23,000 --> 01:06:26,000
这个抽象层级的工具

2405
01:06:26,000 --> 01:06:28,000
所能帮你做的事情

2406
01:06:28,000 --> 01:06:33,000
只是把你的一些日常

2407
01:06:33,000 --> 01:06:36,000
或者经常需要用到的命令自动化而已

2408
01:06:36,000 --> 01:06:38,000
它并不能替你解决

2409
01:06:38,000 --> 01:06:43,000
如果远程机器对于某一个指令的回响

2410
01:06:43,000 --> 01:06:45,000
和你期望的不一样

2411
01:06:45,000 --> 01:06:46,000
该怎么办这个问题

2412
01:06:46,000 --> 01:06:48,000
对

2413
01:06:48,000 --> 01:06:50,000
对其实在说这个之前

2414
01:06:50,000 --> 01:06:50,000
我们应该先说

2415
01:06:50,000 --> 01:06:52,000
如果是手工做应该是怎么样子

2416
01:06:52,000 --> 01:06:54,000
才有一个比较明显的对比

2417
01:06:54,000 --> 01:06:55,000
OK

2418
01:06:55,000 --> 01:06:58,000
对手工管理一个服务器怎么样

2419
01:06:58,000 --> 01:07:00,000
一般就是说你通过什么 SSH 登录上去

2420
01:07:00,000 --> 01:07:02,000
然后运行一堆指令

2421
01:07:02,000 --> 01:07:04,000
把你的软件步入上去跑起来

2422
01:07:04,000 --> 01:07:05,000
然后查看一下状态

2423
01:07:05,000 --> 01:07:07,000
看是否正常对吧

2424
01:07:07,000 --> 01:07:07,000
对

2425
01:07:07,000 --> 01:07:10,000
这其实牵扯了一个问题

2426
01:07:10,000 --> 01:07:11,000
就是你要想要成为 DevOps 的话

2427
01:07:11,000 --> 01:07:13,000
或者说你想要了解

2428
01:07:13,000 --> 01:07:15,000
如何远程操作一台计算机的话

2429
01:07:15,000 --> 01:07:17,000
最好的方法是什么呢

2430
01:07:17,000 --> 01:07:20,000
是不是拥有一台真正意义上远程机

2431
01:07:20,000 --> 01:07:21,000
就买一个 VPS

2432
01:07:21,000 --> 01:07:25,000
对啊这个就能练手嘛

2433
01:07:25,000 --> 01:07:28,000
现在有很方便的那种什么第三方的云的工具

2434
01:07:28,000 --> 01:07:29,000
国内有很多

2435
01:07:29,000 --> 01:07:32,000
国外也有什么最近比较火的

2436
01:07:32,000 --> 01:07:33,000
Digital Ocean

2437
01:07:33,000 --> 01:07:34,000
Digital Ocean

2438
01:07:34,000 --> 01:07:35,000
对它也很便宜

2439
01:07:35,000 --> 01:07:36,000
一个月

2440
01:07:36,000 --> 01:07:36,000
你转了吗

2441
01:07:36,000 --> 01:07:37,000
五块钱

2442
01:07:37,000 --> 01:07:38,000
我有它的号

2443
01:07:38,000 --> 01:07:39,000
但我还没

2444
01:07:39,000 --> 01:07:40,000
我自己用

2445
01:07:40,000 --> 01:07:40,000
OK

2446
01:07:40,000 --> 01:07:43,000
我现在 Metafox.com 的域名是

2447
01:07:43,000 --> 01:07:44,000
Digital Ocean 上

2448
01:07:44,000 --> 01:07:46,000
你已经不会在 Linode 上面了

2449
01:07:46,000 --> 01:07:47,000
对

2450
01:07:47,000 --> 01:07:48,000
对

2451
01:07:48,000 --> 01:07:50,000
后来 Linode 也是升级了吧

2452
01:07:50,000 --> 01:07:52,000
你是在它升级之前转的

2453
01:07:52,000 --> 01:07:52,000
是吧

2454
01:07:52,000 --> 01:07:53,000
我是在它升级之前转

2455
01:07:53,000 --> 01:07:54,000
OK

2456
01:07:54,000 --> 01:07:55,000
就它升级之后

2457
01:07:55,000 --> 01:07:57,000
其实两家的那个竞争力是差不多的

2458
01:07:57,000 --> 01:08:00,000
就所以我们我就没有切了

2459
01:08:00,000 --> 01:08:00,000
对

2460
01:08:00,000 --> 01:08:04,000
然后传统的有那个 Linode

2461
01:08:04,000 --> 01:08:05,000
Linode

2462
01:08:05,000 --> 01:08:06,000
Linode

2463
01:08:06,000 --> 01:08:07,000
对

2464
01:08:07,000 --> 01:08:11,000
还有一些像国内的什么各种云啊

2465
01:08:11,000 --> 01:08:12,000
青云啊

2466
01:08:12,000 --> 01:08:12,000
什么

2467
01:08:12,000 --> 01:08:14,000
还有什么阿里云啊

2468
01:08:14,000 --> 01:08:16,000
这里有一个问题就是

2469
01:08:16,000 --> 01:08:20,000
我们所在这里推荐的是一个真正

2470
01:08:20,000 --> 01:08:22,000
是一台真正硬义上的计算机

2471
01:08:22,000 --> 01:08:24,000
而不是像 Google App Engine 或者是

2472
01:08:24,000 --> 01:08:25,000
嗯

2473
01:08:25,000 --> 01:08:26,000
我不知道阿里云是干嘛的

2474
01:08:26,000 --> 01:08:29,000
阿里云跟亚马逊那种差不多

2475
01:08:29,000 --> 01:08:29,000
对

2476
01:08:29,000 --> 01:08:31,000
也不对吧

2477
01:08:31,000 --> 01:08:33,000
就是它有很庞大的产品的子类

2478
01:08:33,000 --> 01:08:34,000
但是它的虚拟机

2479
01:08:34,000 --> 01:08:35,000
EC 2 还是 S 3

2480
01:08:35,000 --> 01:08:37,000
是跟 EC 2 差不多

2481
01:08:37,000 --> 01:08:38,000
OK

2482
01:08:38,000 --> 01:08:39,000
OK

2483
01:08:39,000 --> 01:08:40,000
对

2484
01:08:40,000 --> 01:08:42,000
所以比较重要的是

2485
01:08:42,000 --> 01:08:44,000
拥有一台真正硬义上的

2486
01:08:44,000 --> 01:08:46,000
被虚拟出来的计算机

2487
01:08:46,000 --> 01:08:50,000
而不是仅仅是一个能够跑你的程序的容器

2488
01:08:50,000 --> 01:08:52,000
两者还是有蛮大的区别

2489
01:08:52,000 --> 01:08:53,000
对

2490
01:08:53,000 --> 01:08:55,000
后者对于 DevOps 功力的培养

2491
01:08:55,000 --> 01:08:57,000
可能没有什么注意吧

2492
01:08:57,000 --> 01:08:57,000
对

2493
01:08:57,000 --> 01:08:58,000
也是有了

2494
01:08:58,000 --> 01:08:59,000
但没有那么多

2495
01:08:59,000 --> 01:09:03,000
就所以最原始的方法

2496
01:09:03,000 --> 01:09:05,000
就是你直接登陆到某一台远程的计算机

2497
01:09:05,000 --> 01:09:07,000
或者是 VPS 上面去

2498
01:09:07,000 --> 01:09:08,000
去做一些操作

2499
01:09:08,000 --> 01:09:10,000
然后查看运行状态

2500
01:09:10,000 --> 01:09:11,000
刚才就讲了

2501
01:09:11,000 --> 01:09:11,000
然后

2502
01:09:11,000 --> 01:09:15,000
但如果你有不止一台的话

2503
01:09:15,000 --> 01:09:16,000
你有四五台的时候

2504
01:09:16,000 --> 01:09:17,000
这个整个

2505
01:09:17,000 --> 01:09:17,000
你每台都重复

2506
01:09:17,000 --> 01:09:19,000
这个操作就比较繁琐

2507
01:09:19,000 --> 01:09:20,000
然后像 Fabric

2508
01:09:20,000 --> 01:09:20,000
这种工具

2509
01:09:20,000 --> 01:09:22,000
就是说能够帮你去

2510
01:09:22,000 --> 01:09:25,000
自动化掉重复的那部分

2511
01:09:25,000 --> 01:09:25,000
但是

2512
01:09:25,000 --> 01:09:27,000
如果你的机器多了

2513
01:09:27,000 --> 01:09:28,000
多了之后

2514
01:09:28,000 --> 01:09:29,000
这样就不可避免的

2515
01:09:29,000 --> 01:09:30,000
有些机器的状态

2516
01:09:30,000 --> 01:09:32,000
可能并不是非常一致

2517
01:09:32,000 --> 01:09:32,000
这个时候

2518
01:09:32,000 --> 01:09:34,000
你就要遇些更加高级的

2519
01:09:34,000 --> 01:09:35,000
或者说这个

2520
01:09:35,000 --> 01:09:37,000
功能更强大

2521
01:09:37,000 --> 01:09:38,000
然后抽象层级

2522
01:09:38,000 --> 01:09:39,000
更高的一些工具

2523
01:09:39,000 --> 01:09:41,000
来帮助你解决

2524
01:09:41,000 --> 01:09:43,000
这个数量庞大的

2525
01:09:43,000 --> 01:09:44,000
这个服务器的管理

2526
01:09:44,000 --> 01:09:46,000
一般怎么说

2527
01:09:46,000 --> 01:09:47,000
就说如果你假设

2528
01:09:47,000 --> 01:09:48,000
你有超过

2529
01:09:48,000 --> 01:09:50,000
十台

2530
01:09:50,000 --> 01:09:51,000
比如说这个数目之后

2531
01:09:51,000 --> 01:09:53,000
你再用像用 Fabric

2532
01:09:53,000 --> 01:09:54,000
这种工具来管理

2533
01:09:54,000 --> 01:09:56,000
就可能不是那么有效了

2534
01:09:56,000 --> 01:09:57,000
对

2535
01:09:57,000 --> 01:09:58,000
那个有一个数字

2536
01:09:58,000 --> 01:10:00,000
是人类同一时间

2537
01:10:00,000 --> 01:10:01,000
可以关注到的

2538
01:10:01,000 --> 01:10:04,000
物体的最高数量是多少

2539
01:10:04,000 --> 01:10:04,000
七

2540
01:10:04,000 --> 01:10:05,000
五到七

2541
01:10:05,000 --> 01:10:06,000
对

2542
01:10:06,000 --> 01:10:08,000
我觉得其实超过五台

2543
01:10:08,000 --> 01:10:09,000
基本上就有点

2544
01:10:09,000 --> 01:10:10,000
让人力不从心

2545
01:10:10,000 --> 01:10:10,000
对

2546
01:10:10,000 --> 01:10:11,000
确实是这样

2547
01:10:11,000 --> 01:10:14,000
然后就会引入像

2548
01:10:14,000 --> 01:10:15,000
这个叫 Puppet

2549
01:10:15,000 --> 01:10:16,000
和 Chef

2550
01:10:16,000 --> 01:10:17,000
这种叫做

2551
01:10:17,000 --> 01:10:18,000
Configuration Management Tool

2552
01:10:18,000 --> 01:10:19,000
对

2553
01:10:19,000 --> 01:10:21,000
配置管理工具

2554
01:10:21,000 --> 01:10:22,000
对

2555
01:10:22,000 --> 01:10:22,000
Puppet 就是

2556
01:10:22,000 --> 01:10:26,000
小木偶

2557
01:10:26,000 --> 01:10:27,000
对吧

2558
01:10:27,000 --> 01:10:29,000
然后 Chef 就是厨师

2559
01:10:29,000 --> 01:10:29,000
对

2560
01:10:29,000 --> 01:10:31,000
这其实也是两个

2561
01:10:31,000 --> 01:10:31,000
Chef 这个

2562
01:10:31,000 --> 01:10:33,000
这个 metaphor

2563
01:10:33,000 --> 01:10:34,000
可能还更

2564
01:10:34,000 --> 01:10:35,000
更

2565
01:10:35,000 --> 01:10:36,000
更

2566
01:10:36,000 --> 01:10:37,000
圈一点

2567
01:10:37,000 --> 01:10:38,000
就是更绕人一点

2568
01:10:38,000 --> 01:10:39,000
就是 Chef

2569
01:10:39,000 --> 01:10:40,000
其实他的 metaphor 是

2570
01:10:40,000 --> 01:10:42,000
你给他准备了一个菜单

2571
01:10:42,000 --> 01:10:44,000
然后 Chef 可以按单做菜

2572
01:10:44,000 --> 01:10:46,000
就 Chef 这个工具

2573
01:10:46,000 --> 01:10:47,000
可以给你按单做菜

2574
01:10:47,000 --> 01:10:47,000
对

2575
01:10:47,000 --> 01:10:49,000
而 Puppet 这个名字的 metaphor

2576
01:10:49,000 --> 01:10:52,000
则是你管理那些

2577
01:10:52,000 --> 01:10:53,000
计算机就好像

2578
01:10:53,000 --> 01:10:55,000
去操纵一些木偶一样

2579
01:10:55,000 --> 01:10:56,000
提现木偶的

2580
01:10:56,000 --> 01:10:57,000
对

2581
01:10:57,000 --> 01:10:58,000
提现木偶

2582
01:10:58,000 --> 01:11:00,000
那么他们两个其实都是

2583
01:11:00,000 --> 01:11:02,000
目前是竞争关系吧

2584
01:11:02,000 --> 01:11:03,000
应该说

2585
01:11:03,000 --> 01:11:04,000
一直都是吧

2586
01:11:04,000 --> 01:11:05,000
对

2587
01:11:05,000 --> 01:11:07,000
就是经常会有

2588
01:11:07,000 --> 01:11:08,000
Python 还是 Ruby

2589
01:11:08,000 --> 01:11:09,000
Puppet 还是 Chef

2590
01:11:09,000 --> 01:11:10,000
之类的这样

2591
01:11:10,000 --> 01:11:11,000
也是一个 flame war 的

2592
01:11:11,000 --> 01:11:12,000
一个起点

2593
01:11:12,000 --> 01:11:13,000
又一个圣战

2594
01:11:13,000 --> 01:11:13,000
对

2595
01:11:13,000 --> 01:11:14,000
又一个圣战

2596
01:11:14,000 --> 01:11:16,000
但我觉得 Puppet 和 Chef

2597
01:11:16,000 --> 01:11:17,000
好像是没有那么

2598
01:11:17,000 --> 01:11:20,000
没有那么吵起来的吧

2599
01:11:20,000 --> 01:11:21,000
因为两者还是太相像了

2600
01:11:21,000 --> 01:11:23,000
他们是

2601
01:11:23,000 --> 01:11:25,000
就是 Ruby 社区里面的东西嘛

2602
01:11:25,000 --> 01:11:27,000
然后他们只是说在设计哲学上有所不同

2603
01:11:27,000 --> 01:11:29,000
但是因为我们

2604
01:11:29,000 --> 01:11:32,000
反正处于敌对阵营也无所谓

2605
01:11:32,000 --> 01:11:33,000
但是

2606
01:11:33,000 --> 01:11:35,000
就他们在干什么呢

2607
01:11:35,000 --> 01:11:36,000
我觉得这个是更加重要的一个问题

2608
01:11:36,000 --> 01:11:37,000
没错

2609
01:11:37,000 --> 01:11:40,000
你解释一下

2610
01:11:40,000 --> 01:11:41,000
还是

2611
01:11:41,000 --> 01:11:42,000
你来吧

2612
01:11:42,000 --> 01:11:44,000
他们的

2613
01:11:44,000 --> 01:11:47,000
好吧

2614
01:11:47,000 --> 01:11:48,000
就是

2615
01:11:48,000 --> 01:11:50,000
你有一个

2616
01:11:50,000 --> 01:11:52,000
我们可以把一台远程的计算机

2617
01:11:52,000 --> 01:11:55,000
想象成一个原始材料

2618
01:11:55,000 --> 01:11:59,000
然后如果我们沿用 Chef 的 metaphor 的话

2619
01:11:59,000 --> 01:12:01,000
那么就是我要提供一个菜单

2620
01:12:01,000 --> 01:12:03,000
在这个菜单上面

2621
01:12:03,000 --> 01:12:05,000
我详细的

2622
01:12:05,000 --> 01:12:06,000
不是菜单

2623
01:12:06,000 --> 01:12:06,000
应该叫

2624
01:12:06,000 --> 01:12:11,000
做菜的那个东西叫什么

2625
01:12:11,000 --> 01:12:13,000
做菜的指令

2626
01:12:13,000 --> 01:12:14,000
菜谱

2627
01:12:14,000 --> 01:12:14,000
对

2628
01:12:14,000 --> 01:12:15,000
菜谱

2629
01:12:15,000 --> 01:12:15,000
sorry

2630
01:12:15,000 --> 01:12:17,000
就是我要准备一个菜谱

2631
01:12:17,000 --> 01:12:18,000
对

2632
01:12:18,000 --> 01:12:19,000
告诉你在

2633
01:12:19,000 --> 01:12:24,000
为了要把这个原材料做成一个最终能用的菜

2634
01:12:24,000 --> 01:12:28,000
也就是一个最终能够跑应用程序的环境

2635
01:12:28,000 --> 01:12:32,000
我需要在整个过程中做什么

2636
01:12:32,000 --> 01:12:36,000
比如说我需要安装哪一些必要的组件

2637
01:12:36,000 --> 01:12:42,000
需要在需要这些组件的什么版本

2638
01:12:42,000 --> 01:12:45,000
然后每一个组件安装之后

2639
01:12:45,000 --> 01:12:47,000
需要做哪些配置

2640
01:12:47,000 --> 01:12:52,000
以及把所有的组件的配置做好了之后

2641
01:12:52,000 --> 01:12:57,000
怎样从什么地方把我的写好的一个程序上传上去

2642
01:12:57,000 --> 01:12:59,000
然后把上传上去的程序

2643
01:12:59,000 --> 01:13:01,000
又要开启什么样的服务

2644
01:13:01,000 --> 01:13:02,000
做哪些配置

2645
01:13:02,000 --> 01:13:03,000
blah blah

2646
01:13:03,000 --> 01:13:05,000
所有这些都一步一步写下来

2647
01:13:05,000 --> 01:13:07,000
然后交给 chef

2648
01:13:07,000 --> 01:13:09,000
说 chef 这里是我的菜谱

2649
01:13:09,000 --> 01:13:11,000
你把我的服务器弄好吧

2650
01:13:11,000 --> 01:13:13,000
然后 chef 就会

2651
01:13:13,000 --> 01:13:15,000
或者 puppet 就会替你完成这些事情

2652
01:13:15,000 --> 01:13:17,000
大概是这么一个意思

2653
01:13:17,000 --> 01:13:21,000
所以他们比之于像之前提到

2654
01:13:21,000 --> 01:13:23,000
那个 fabic 工具的进步之处在哪里

2655
01:13:23,000 --> 01:13:26,000
就是他提供了一种

2656
01:13:26,000 --> 01:13:29,000
他比如说你用 fabric 就有点像

2657
01:13:29,000 --> 01:13:33,000
就有点像写一个程序

2658
01:13:33,000 --> 01:13:37,000
说我要在

2659
01:13:37,000 --> 01:13:39,000
比如说你在 chef 里面

2660
01:13:39,000 --> 01:13:41,000
反过来吧

2661
01:13:41,000 --> 01:13:43,000
比如说在 fabric 里面你要写说

2662
01:13:43,000 --> 01:13:49,000
首先远程用 ssh 远程连接到这一台计算机上

2663
01:13:49,000 --> 01:13:51,000
然后在那边执行一个指令

2664
01:13:51,000 --> 01:13:53,000
看看这个计算机的目前内核版本是什么

2665
01:13:53,000 --> 01:13:58,000
然后比较这个内核版本和我期望的内核版本是不是一致

2666
01:13:58,000 --> 01:13:58,000
不一致的话

2667
01:13:58,000 --> 01:14:00,000
那我要执行另外一条指令

2668
01:14:00,000 --> 01:14:02,000
把这个内核版本升级到什么地方

2669
01:14:02,000 --> 01:14:07,000
然后再看看这台计算机上有哪些安装好的包

2670
01:14:07,000 --> 01:14:10,000
然后比较这些包和我期待的是否一致

2671
01:14:10,000 --> 01:14:11,000
如果不一致的话

2672
01:14:11,000 --> 01:14:13,000
再执行另外一条指令

2673
01:14:13,000 --> 01:14:14,000
把这些包安装好

2674
01:14:14,000 --> 01:14:17,000
所有这些繁琐的操作其实都是为了解

2675
01:14:17,000 --> 01:14:18,000
都是为了完成一件事情

2676
01:14:18,000 --> 01:14:22,000
就是安装某一个特定版本的软件包

2677
01:14:22,000 --> 01:14:23,000
在某一个特定版本的内核上

2678
01:14:23,000 --> 01:14:24,000
对吧

2679
01:14:24,000 --> 01:14:25,000
那么在 chef 这边

2680
01:14:25,000 --> 01:14:27,000
你所有这一切都简化为了一句

2681
01:14:27,000 --> 01:14:29,000
你告诉 chef 说

2682
01:14:29,000 --> 01:14:30,000
这台计算机上应该有这个内核

2683
01:14:30,000 --> 01:14:32,000
然后应该有那个软件包

2684
01:14:32,000 --> 01:14:34,000
然后 chef 就会自动帮你完成这一切

2685
01:14:34,000 --> 01:14:40,000
所以它其实有一个从所谓 imperative 到 declarative 的

2686
01:14:40,000 --> 01:14:42,000
就是从命令式向

2687
01:14:42,000 --> 01:14:44,000
像 declarative 的中文是什么

2688
01:14:44,000 --> 01:14:46,000
说明式的

2689
01:14:46,000 --> 01:14:46,000
描述式

2690
01:14:46,000 --> 01:14:49,000
描述式的语言的这么一个进步

2691
01:14:49,000 --> 01:14:50,000
这么一个转向吧

2692
01:14:50,000 --> 01:14:53,000
我觉得这是最重要的进步

2693
01:14:53,000 --> 01:14:54,000
对

2694
01:14:54,000 --> 01:14:59,000
这里可能有一个小区别要说明一下

2695
01:14:59,000 --> 01:15:01,000
就是说像 fabric 这种的

2696
01:15:01,000 --> 01:15:03,000
它的核心逻辑还是在

2697
01:15:03,000 --> 01:15:05,000
就是所谓的控制那台电脑

2698
01:15:05,000 --> 01:15:08,000
比如说你用你的笔记本上操作这个 fabric

2699
01:15:08,000 --> 01:15:10,000
然后去向那个远程

2700
01:15:10,000 --> 01:15:11,000
这样去发送指令

2701
01:15:11,000 --> 01:15:12,000
然后那个再执行

2702
01:15:12,000 --> 01:15:14,000
就是你的控制逻辑还是在

2703
01:15:14,000 --> 01:15:15,000
这个叫什么

2704
01:15:15,000 --> 01:15:16,000
你的控制

2705
01:15:16,000 --> 01:15:17,000
在本机上面

2706
01:15:17,000 --> 01:15:17,000
本机上面对

2707
01:15:17,000 --> 01:15:19,000
不是在服务器上面的

2708
01:15:19,000 --> 01:15:20,000
然后像 popit 和 chef 这两种

2709
01:15:20,000 --> 01:15:22,000
我觉得大部分情况下

2710
01:15:22,000 --> 01:15:23,000
它的那个控制逻辑

2711
01:15:23,000 --> 01:15:24,000
其实是已经移交到了

2712
01:15:24,000 --> 01:15:27,000
这个服务器上就在运行

2713
01:15:27,000 --> 01:15:27,000
对吧

2714
01:15:27,000 --> 01:15:27,000
对

2715
01:15:27,000 --> 01:15:28,000
因为你在本机上

2716
01:15:28,000 --> 01:15:30,000
你所做的只是下命令

2717
01:15:30,000 --> 01:15:31,000
而不是

2718
01:15:31,000 --> 01:15:32,000
对

2719
01:15:32,000 --> 01:15:33,000
或者说你做的只是

2720
01:15:33,000 --> 01:15:36,000
描述你要达到什么样的效果

2721
01:15:36,000 --> 01:15:37,000
对

2722
01:15:37,000 --> 01:15:40,000
而不是你怎么样完成

2723
01:15:40,000 --> 01:15:41,000
我想要达到的效果

2724
01:15:41,000 --> 01:15:42,000
对

2725
01:15:42,000 --> 01:15:47,000
然后这两个工具都是 Ruby 写的

2726
01:15:47,000 --> 01:15:49,000
其实在相当长一段时间内

2727
01:15:49,000 --> 01:15:51,000
这两个也就是在

2728
01:15:51,000 --> 01:15:53,000
在那个 devop 这个市场上

2729
01:15:53,000 --> 01:15:55,000
在主导地位的一个工具

2730
01:15:55,000 --> 01:15:55,000
对

2731
01:15:55,000 --> 01:15:56,000
De facto standout

2732
01:15:56,000 --> 01:15:57,000
对

2733
01:15:57,000 --> 01:15:58,000
然后后来

2734
01:15:58,000 --> 01:16:00,000
我们这个阵营

2735
01:16:00,000 --> 01:16:01,000
不对

2736
01:16:01,000 --> 01:16:03,000
就 Python 这个阵营的

2737
01:16:03,000 --> 01:16:07,000
这些哥们终于站不住

2738
01:16:07,000 --> 01:16:07,000
就是什么

2739
01:16:07,000 --> 01:16:09,000
就是忍不住了

2740
01:16:09,000 --> 01:16:09,000
因为

2741
01:16:09,000 --> 01:16:12,000
因为其实在这之前

2742
01:16:12,000 --> 01:16:14,000
Ruby 在这个服务局运维

2743
01:16:14,000 --> 01:16:15,000
这一块

2744
01:16:15,000 --> 01:16:17,000
其实并没有多少人在用

2745
01:16:17,000 --> 01:16:18,000
照我的理解

2746
01:16:18,000 --> 01:16:19,000
就存在

2747
01:16:19,000 --> 01:16:20,000
Ruby 其实这个语言

2748
01:16:20,000 --> 01:16:21,000
是非常有意思的一个

2749
01:16:21,000 --> 01:16:23,000
就是在 Ruby on Rails 出现之前

2750
01:16:23,000 --> 01:16:25,000
Ruby 是一个没人理睬的语言吧

2751
01:16:25,000 --> 01:16:25,000
对

2752
01:16:25,000 --> 01:16:28,000
就那个时候什么 Zope

2753
01:16:28,000 --> 01:16:29,000
什么那个

2754
01:16:29,000 --> 01:16:32,000
就 Python 是一个主导地位的语言

2755
01:16:32,000 --> 01:16:32,000
对

2756
01:16:32,000 --> 01:16:34,000
当前当年 Zope 可是跟什么

2757
01:16:34,000 --> 01:16:35,000
J 2 E

2758
01:16:35,000 --> 01:16:39,000
JavaE 评分球色的一个东西吧

2759
01:16:39,000 --> 01:16:42,000
你要在服务器端

2760
01:16:42,000 --> 01:16:46,000
完成一个大型的应用软件

2761
01:16:46,000 --> 01:16:48,000
好像在 Ruby on Rails 出现之前

2762
01:16:48,000 --> 01:16:49,000
要么 Java

2763
01:16:49,000 --> 01:16:51,000
要么就 Python

2764
01:16:51,000 --> 01:16:52,000
要么就其他的什么

2765
01:16:52,000 --> 01:16:54,000
更偏本的东西

2766
01:16:54,000 --> 01:16:56,000
但是 Ruby on Rails 出现之后

2767
01:16:56,000 --> 01:16:59,000
就几乎一夜之间

2768
01:16:59,000 --> 01:17:02,000
扳倒了整个开发社区的气氛

2769
01:17:02,000 --> 01:17:02,000
对

2770
01:17:02,000 --> 01:17:04,000
然后我们就看到很多这种

2771
01:17:04,000 --> 01:17:06,000
开发运维工具

2772
01:17:06,000 --> 01:17:07,000
都是基于 Ruby 来写的

2773
01:17:07,000 --> 01:17:08,000
而且就是

2774
01:17:08,000 --> 01:17:12,000
在我还是 Python 那个阵营的时候

2775
01:17:12,000 --> 01:17:14,000
我曾经一度怀疑说

2776
01:17:14,000 --> 01:17:16,000
是不是应该转向 Ruby 那个阵营

2777
01:17:16,000 --> 01:17:17,000
那么多新的

2778
01:17:17,000 --> 01:17:18,000
有意思的工具

2779
01:17:18,000 --> 01:17:21,000
都是从 Ruby 阵营过来的

2780
01:17:21,000 --> 01:17:23,000
对 因为那个时候 Ruby 正在 hype

2781
01:17:23,000 --> 01:17:25,000
那是 Ruby 一直都在 hype

2782
01:17:25,000 --> 01:17:25,000
对

2783
01:17:25,000 --> 01:17:29,000
不 现在可能要弱一点了

2784
01:17:29,000 --> 01:17:32,000
因为有像什么 node 这种工具就起来了

2785
01:17:32,000 --> 01:17:32,000
所以

2786
01:17:32,000 --> 01:17:34,000
对 还有 go 之类的

2787
01:17:34,000 --> 01:17:35,000
对对

2788
01:17:35,000 --> 01:17:35,000
不过

2789
01:17:35,000 --> 01:17:40,000
反正

2790
01:17:40,000 --> 01:17:42,000
这个我觉得这么说是很安全的

2791
01:17:42,000 --> 01:17:46,000
也就是说正是因为像 Ruby Unreal 这种框架的崛起

2792
01:17:46,000 --> 01:17:51,000
使得 Ruby 在这个 DevOps 这个圈子流行起来

2793
01:17:51,000 --> 01:17:53,000
然后才出现了像 Pupe

2794
01:17:53,000 --> 01:17:57,000
Chef 这种一系列的基于 Ruby 这个工具吧

2795
01:17:57,000 --> 01:17:58,000
如果没有这个东西

2796
01:17:58,000 --> 01:18:00,000
可能这一切都不会存在

2797
01:18:00,000 --> 01:18:00,000
没错

2798
01:18:00,000 --> 01:18:04,000
所以 Ruby Unreal 其实是一个功不可没的起点

2799
01:18:04,000 --> 01:18:05,000
Kill App

2800
01:18:05,000 --> 01:18:08,000
然后当然 Python 是里面闲着

2801
01:18:08,000 --> 01:18:14,000
后来就出了两套新一代的 configuration management tool

2802
01:18:14,000 --> 01:18:16,000
其中一个叫做 sort

2803
01:18:16,000 --> 01:18:17,000
颜

2804
01:18:17,000 --> 01:18:19,000
然后那个叫做 ansible

2805
01:18:19,000 --> 01:18:20,000
ansible

2806
01:18:20,000 --> 01:18:22,000
ansible 是一个缩写吧

2807
01:18:22,000 --> 01:18:25,000
而且不是什么

2808
01:18:25,000 --> 01:18:27,000
你这么一问我还真不知道

2809
01:18:27,000 --> 01:18:28,000
可以查一下

2810
01:18:28,000 --> 01:18:29,000
ansible 到底什么意思

2811
01:18:29,000 --> 01:18:34,000
ansible is simple IT automation

2812
01:18:34,000 --> 01:18:37,000
wait a second

2813
01:18:37,000 --> 01:18:39,000
LE 是哪来的

2814
01:18:40,000 --> 01:18:47,000
计算机界有两件最难的事情

2815
01:18:47,000 --> 01:18:49,000
一件是 caching validation

2816
01:18:49,000 --> 01:18:50,000
另一件就是 naming things

2817
01:18:50,000 --> 01:18:54,000
而比这所有更难的一件事情

2818
01:18:54,000 --> 01:18:57,000
就是 figure out 这个东西是怎么被命名

2819
01:18:57,000 --> 01:19:00,000
对

2820
01:19:00,000 --> 01:19:04,000
这个就不去追究什么意思

2821
01:19:04,000 --> 01:19:06,000
我也没有查到

2822
01:19:06,000 --> 01:19:09,000
但是这两个都有一个共同点

2823
01:19:09,000 --> 01:19:09,000
就说

2824
01:19:09,000 --> 01:19:11,000
应该是说

2825
01:19:11,000 --> 01:19:11,000
不先说

2826
01:19:11,000 --> 01:19:13,000
这个 Puppet 和 Chef

2827
01:19:13,000 --> 01:19:14,000
他们的这个

2828
01:19:14,000 --> 01:19:16,000
这个编写那个脚本的东西

2829
01:19:16,000 --> 01:19:17,000
都是使用了 Ruby 的脚本

2830
01:19:17,000 --> 01:19:19,000
然后用那个 DSL 的方法来写

2831
01:19:19,000 --> 01:19:20,000
我靠

2832
01:19:20,000 --> 01:19:21,000
我查到了

2833
01:19:21,000 --> 01:19:22,000
是什么

2834
01:19:22,000 --> 01:19:25,000
它居然是恩德游戏里面的安塞波

2835
01:19:25,000 --> 01:19:26,000
什么玩意儿

2836
01:19:26,000 --> 01:19:30,000
就是有一个非常非常非常非常 awesome

2837
01:19:30,000 --> 01:19:31,000
史诗级别的科幻小说

2838
01:19:31,000 --> 01:19:32,000
如果你没看过的话

2839
01:19:32,000 --> 01:19:33,000
一定要去跟我看

2840
01:19:33,000 --> 01:19:36,000
叫做安德的游戏

2841
01:19:36,000 --> 01:19:38,000
前这次去年被拍成

2842
01:19:38,000 --> 01:19:41,000
前年被拍成了电影

2843
01:19:41,000 --> 01:19:42,000
谁写的

2844
01:19:42,000 --> 01:19:44,000
Scott Cot

2845
01:19:44,000 --> 01:19:48,000
叫卡德吧

2846
01:19:48,000 --> 01:19:50,000
我记得中文好像

2847
01:19:50,000 --> 01:19:50,000
我看了短

2848
01:19:50,000 --> 01:19:51,000
安德的游戏

2849
01:19:51,000 --> 01:19:52,000
sorry

2850
01:19:52,000 --> 01:19:53,000
原谅我的语无伦次

2851
01:19:53,000 --> 01:19:55,000
因为这部科幻小说

2852
01:19:55,000 --> 01:19:56,000
实在是太史诗级别了

2853
01:19:56,000 --> 01:20:00,000
就是作者应该叫 Scott 卡德

2854
01:20:00,000 --> 01:20:01,000
斯科特卡德

2855
01:20:01,000 --> 01:20:03,000
然后他写了一系列

2856
01:20:03,000 --> 01:20:05,000
有一个

2857
01:20:05,000 --> 01:20:08,000
也不是小男孩

2858
01:20:08,000 --> 01:20:11,000
但是在安德的游戏这部书里面

2859
01:20:11,000 --> 01:20:12,000
他还是一个小男孩

2860
01:20:12,000 --> 01:20:15,000
为主角的科幻小说

2861
01:20:15,000 --> 01:20:18,000
然后这部科幻小说第一卷就叫做

2862
01:20:18,000 --> 01:20:20,000
Enders Game

2863
01:20:20,000 --> 01:20:21,000
就是终结者的游戏

2864
01:20:21,000 --> 01:20:24,000
但是中文一般翻译成安德的游戏

2865
01:20:24,000 --> 01:20:26,000
因为这个主角就叫 Ander

2866
01:20:26,000 --> 01:20:27,000
我们一起做的话

2867
01:20:27,000 --> 01:20:28,000
主角叫 Ander

2868
01:20:28,000 --> 01:20:31,000
然后它是非常非常好看的一部

2869
01:20:31,000 --> 01:20:32,000
一部科幻片

2870
01:20:32,000 --> 01:20:33,000
科幻电影

2871
01:20:33,000 --> 01:20:34,000
2003 年的时候

2872
01:20:34,000 --> 01:20:35,000
这部变

2873
01:20:35,000 --> 01:20:35,000
这个

2874
01:20:35,000 --> 01:20:37,000
sorry

2875
01:20:37,000 --> 01:20:38,000
它是非常好看

2876
01:20:38,000 --> 01:20:41,000
好看的一部科幻小说

2877
01:20:41,000 --> 01:20:42,000
然后 2003 年的时候

2878
01:20:42,000 --> 01:20:44,000
它被翻牌成了电影

2879
01:20:44,000 --> 01:20:47,000
但是电影没有原著的十分之一吧

2880
01:20:47,000 --> 01:20:47,000
我确定

2881
01:20:47,000 --> 01:20:49,000
视频效果是很炫了

2882
01:20:49,000 --> 01:20:51,000
但是原著里面的很多非常

2883
01:20:51,000 --> 01:20:53,000
让人激动

2884
01:20:53,000 --> 01:20:55,000
或者乃至难过的片段

2885
01:20:55,000 --> 01:20:57,000
其实都没有呈现的很好

2886
01:20:57,000 --> 01:20:59,000
然后这一部

2887
01:20:59,000 --> 01:21:01,000
这不是所有小说改变成电影的

2888
01:21:01,000 --> 01:21:03,000
然后读过小说的人都有这种感觉吗

2889
01:21:03,000 --> 01:21:04,000
也不尽然吧

2890
01:21:04,000 --> 01:21:07,000
就有些电影让我觉得比小说要好

2891
01:21:07,000 --> 01:21:08,000
OK

2892
01:21:08,000 --> 01:21:10,000
但一时也想不出来

2893
01:21:10,000 --> 01:21:13,000
但总之这部电影里面有

2894
01:21:13,000 --> 01:21:15,000
就是讲述的是人类和

2895
01:21:15,000 --> 01:21:17,000
一个重组

2896
01:21:17,000 --> 01:21:17,000
就是

2897
01:21:17,000 --> 01:21:19,000
对

2898
01:21:19,000 --> 01:21:20,000
就有点像那个

2899
01:21:20,000 --> 01:21:23,000
星星星马里面的 Zerg 的感觉

2900
01:21:23,000 --> 01:21:24,000
但是这部小说出来的时候

2901
01:21:24,000 --> 01:21:26,000
1985 年的小说

2902
01:21:26,000 --> 01:21:26,000
这是

2903
01:21:26,000 --> 01:21:28,000
那个时候还远远没有 Zerg

2904
01:21:28,000 --> 01:21:29,000
什么星剑

2905
01:21:29,000 --> 01:21:30,000
Star Trooper

2906
01:21:30,000 --> 01:21:33,000
那个星剑散兵那部科幻电影

2907
01:21:33,000 --> 01:21:34,000
可能也可能都没有出来

2908
01:21:34,000 --> 01:21:35,000
然后

2909
01:21:35,000 --> 01:21:37,000
在里面它描写了一个

2910
01:21:37,000 --> 01:21:39,000
人类和遥远的重组之间的战争

2911
01:21:39,000 --> 01:21:43,000
然后其中里面有一种超光速通信工具

2912
01:21:43,000 --> 01:21:45,000
就叫做安塞波

2913
01:21:45,000 --> 01:21:48,000
所以这个名字认不来

2914
01:21:48,000 --> 01:21:49,000
OK

2915
01:21:49,000 --> 01:21:52,000
我立刻爱上了这个软件

2916
01:21:52,000 --> 01:21:55,000
不过其实这里也说到了一个问题

2917
01:21:55,000 --> 01:21:56,000
就是说

2918
01:21:56,000 --> 01:21:57,000
为什么

2919
01:21:57,000 --> 01:22:00,000
他们要做这个东西

2920
01:22:00,000 --> 01:22:01,000
其实也是因为

2921
01:22:01,000 --> 01:22:02,000
就他们很多人抱怨

2922
01:22:02,000 --> 01:22:04,000
这个 Pupper 和 Shift 太慢了

2923
01:22:04,000 --> 01:22:05,000
就是如果你管理

2924
01:22:05,000 --> 01:22:08,000
几百上千台机器的时候

2925
01:22:08,000 --> 01:22:10,000
那个什么归宿

2926
01:22:10,000 --> 01:22:12,000
就是你运行完一个脚本

2927
01:22:12,000 --> 01:22:13,000
肯定要半个小时这样

2928
01:22:13,000 --> 01:22:16,000
然后他说要从根本上解决这个问题

2929
01:22:16,000 --> 01:22:17,000
然后什么就不能

2930
01:22:17,000 --> 01:22:19,000
那些是救不回来了

2931
01:22:19,000 --> 01:22:19,000
你要重新

2932
01:22:19,000 --> 01:22:21,000
要什么 start over

2933
01:22:21,000 --> 01:22:23,000
你才可以解决这个问题

2934
01:22:23,000 --> 01:22:24,000
然后就有这么两个

2935
01:22:24,000 --> 01:22:26,000
Python 社区来的工具

2936
01:22:26,000 --> 01:22:26,000
一个叫做 sort

2937
01:22:26,000 --> 01:22:27,000
一个叫 ansible

2938
01:22:27,000 --> 01:22:28,000
刚才你也提了

2939
01:22:28,000 --> 01:22:30,000
然后他们的一个特点

2940
01:22:30,000 --> 01:22:33,000
就是用户看到的一个特点

2941
01:22:33,000 --> 01:22:34,000
就是他们的配置语言

2942
01:22:34,000 --> 01:22:36,000
是 YAML

2943
01:22:36,000 --> 01:22:36,000
就是

2944
01:22:36,000 --> 01:22:38,000
哇

2945
01:22:38,000 --> 01:22:38,000
最要解决

2946
01:22:38,000 --> 01:22:41,000
Yes another markup language

2947
01:22:41,000 --> 01:22:44,000
就是是一个比 XML 简单

2948
01:22:44,000 --> 01:22:45,000
然后比 Jason 强大

2949
01:22:45,000 --> 01:22:47,000
然后是一个 Jason 的超级的

2950
01:22:47,000 --> 01:22:49,000
这么一个配置语言

2951
01:22:49,000 --> 01:22:51,000
而且他最大优点是

2952
01:22:51,000 --> 01:22:52,000
人类读的时候也非常舒畅

2953
01:22:52,000 --> 01:22:54,000
就可以手写

2954
01:22:54,000 --> 01:22:56,000
然后可以裸眼读

2955
01:22:56,000 --> 01:22:57,000
不需要接触任何工具

2956
01:22:57,000 --> 01:22:58,000
比较爽

2957
01:22:58,000 --> 01:23:00,000
读 XML 让人想死

2958
01:23:00,000 --> 01:23:00,000
对吧

2959
01:23:00,000 --> 01:23:01,000
读 Jason 略好

2960
01:23:01,000 --> 01:23:04,000
但是读 YAML 就非常像

2961
01:23:04,000 --> 01:23:06,000
读一个正常的人类文档

2962
01:23:06,000 --> 01:23:07,000
Jason 读起来还行

2963
01:23:07,000 --> 01:23:08,000
就是写起来太费劲了

2964
01:23:08,000 --> 01:23:10,000
各种限制比较多

2965
01:23:10,000 --> 01:23:11,000
比如说不能加注释

2966
01:23:11,000 --> 01:23:13,000
然后 key 必须要扩起来

2967
01:23:13,000 --> 01:23:14,000
blah blah

2968
01:23:14,000 --> 01:23:15,000
然后之类的

2969
01:23:15,000 --> 01:23:15,000
对

2970
01:23:15,000 --> 01:23:18,000
这个跟 Puppy 和 Shift

2971
01:23:18,000 --> 01:23:18,000
他们在

2972
01:23:18,000 --> 01:23:19,000
就起码在用的时候

2973
01:23:19,000 --> 01:23:21,000
有个很鲜明的对比

2974
01:23:21,000 --> 01:23:21,000
就是 Puppy 和 Shift

2975
01:23:21,000 --> 01:23:23,000
他们都是用 Ruby 的

2976
01:23:23,000 --> 01:23:25,000
直接又是一个 class 文件

2977
01:23:25,000 --> 01:23:25,000
对

2978
01:23:25,000 --> 01:23:28,000
然后这里就有一个取舍的好

2979
01:23:28,000 --> 01:23:31,000
或者说你想为什么 Python 是确实

2980
01:23:31,000 --> 01:23:32,000
不用 Python 写呢

2981
01:23:32,000 --> 01:23:36,000
当然其中一个主要的原因是因为 Python 写 DSL 并不方便

2982
01:23:36,000 --> 01:23:38,000
然后语法限制比较多

2983
01:23:38,000 --> 01:23:39,000
然后先下来

2984
01:23:39,000 --> 01:23:42,000
Python 其实本身就有点像 DSL

2985
01:23:42,000 --> 01:23:48,000
但或者我知道我这个描述可能非常怪异

2986
01:23:48,000 --> 01:23:50,000
但 Python 给人的感觉就是

2987
01:23:50,000 --> 01:23:54,000
它明明是一种泛用的编程员

2988
01:23:54,000 --> 01:23:55,000
但是你在写它的时候

2989
01:23:55,000 --> 01:23:57,000
就好像觉得自己在写某一种

2990
01:23:57,000 --> 01:23:58,000
英文

2991
01:23:58,000 --> 01:23:59,000
某一种

2992
01:23:59,000 --> 01:23:59,000
对

2993
01:23:59,000 --> 01:24:03,000
某一种不那么像写程序的程序

2994
01:24:03,000 --> 01:24:06,000
而 DSL 给人的感觉其实也是这样

2995
01:24:06,000 --> 01:24:10,000
但问题是说 Python 它的语法限制比较多

2996
01:24:10,000 --> 01:24:13,000
比如说它对缩进有要求

2997
01:24:13,000 --> 01:24:16,000
然后对 block 也有要求

2998
01:24:16,000 --> 01:24:18,000
就不像 Ruby 的语法那么灵活

2999
01:24:18,000 --> 01:24:20,000
这样的话作为一个配置工具

3000
01:24:20,000 --> 01:24:24,000
你要求这个用户学的东西就比较多了

3001
01:24:24,000 --> 01:24:27,000
但是说我也一直没搞明白这个的点在哪里

3002
01:24:27,000 --> 01:24:30,000
因为你始终还是要学 Python 这个语言才能用的

3003
01:24:30,000 --> 01:24:34,000
不过它用 Yaml 这种

3004
01:24:34,000 --> 01:24:36,000
也是有一个比较明显的好处的

3005
01:24:36,000 --> 01:24:42,000
就是说它可以比较方便的用机器去读这些配置文件

3006
01:24:42,000 --> 01:24:44,000
然后去用机器去处理它

3007
01:24:44,000 --> 01:24:46,000
因为这可 Ruby 的那种方式

3008
01:24:46,000 --> 01:24:47,000
就不太一样

3009
01:24:47,000 --> 01:24:48,000
因为 Ruby 那种的话

3010
01:24:48,000 --> 01:24:51,000
你必须运行过才可以对吧

3011
01:24:51,000 --> 01:24:52,000
它并不是一个

3012
01:24:52,000 --> 01:24:54,000
就怎么讲了

3013
01:24:54,000 --> 01:24:55,000
它并不是一个

3014
01:24:55,000 --> 01:24:56,000
就是 code is code

3015
01:24:56,000 --> 01:24:57,000
然后这个

3016
01:24:57,000 --> 01:24:59,000
Data is data

3017
01:24:59,000 --> 01:25:01,000
对它这两个是分离的

3018
01:25:01,000 --> 01:25:02,000
然后在 Python 的

3019
01:25:02,000 --> 01:25:03,000
Yaml 这种方式的话

3020
01:25:03,000 --> 01:25:04,000
就说 code is data

3021
01:25:04,000 --> 01:25:05,000
Data is code

3022
01:25:05,000 --> 01:25:07,000
就有点这个意思在里面

3023
01:25:07,000 --> 01:25:08,000
没错

3024
01:25:08,000 --> 01:25:11,000
虽然 Yaml 本身并不能直接执行

3025
01:25:11,000 --> 01:25:12,000
还是要依靠这个 Python 去解析它

3026
01:25:12,000 --> 01:25:13,000
对

3027
01:25:13,000 --> 01:25:15,000
而且我觉得另外一个优点就是

3028
01:25:15,000 --> 01:25:17,000
在 Puppet Chef 里面

3029
01:25:17,000 --> 01:25:18,000
你可以

3030
01:25:18,000 --> 01:25:19,000
因为它是 DSL

3031
01:25:19,000 --> 01:25:20,000
它毕竟还是

3032
01:25:20,000 --> 01:25:21,000
它还是 Ruby

3033
01:25:21,000 --> 01:25:22,000
你还是可以编程的

3034
01:25:22,000 --> 01:25:24,000
而写 Yaml 的时候

3035
01:25:24,000 --> 01:25:25,000
它会强迫你

3036
01:25:25,000 --> 01:25:26,000
或者它会提示你

3037
01:25:26,000 --> 01:25:26,000
你不能够编程

3038
01:25:26,000 --> 01:25:27,000
对

3039
01:25:27,000 --> 01:25:28,000
你不能再编程了

3040
01:25:28,000 --> 01:25:30,000
这个地方你该 declareative

3041
01:25:30,000 --> 01:25:31,000
给我好好 declareative

3042
01:25:31,000 --> 01:25:34,000
你不要再像写 Chef

3043
01:25:34,000 --> 01:25:35,000
或 Puppet 脚本的时候

3044
01:25:35,000 --> 01:25:37,000
你可以加入一些私货

3045
01:25:37,000 --> 01:25:38,000
你可以说这个地方

3046
01:25:38,000 --> 01:25:39,000
我要做一些东西

3047
01:25:39,000 --> 01:25:41,000
而因为我可以

3048
01:25:41,000 --> 01:25:42,000
所以我要做

3049
01:25:42,000 --> 01:25:42,000
对

3050
01:25:42,000 --> 01:25:44,000
但这个就是有时候是一个

3051
01:25:44,000 --> 01:25:45,000
怎么讲

3052
01:25:45,000 --> 01:25:48,000
一个可维护性和应用性之间的

3053
01:25:48,000 --> 01:25:49,000
这个权衡

3054
01:25:49,000 --> 01:25:50,000
就是说

3055
01:25:50,000 --> 01:25:52,000
因为其实如果你真的去用

3056
01:25:52,000 --> 01:25:53,000
那个 Ansible

3057
01:25:53,000 --> 01:25:53,000
这种一些

3058
01:25:53,000 --> 01:25:54,000
因为我用

3059
01:25:54,000 --> 01:25:55,000
Sorto 没有用过

3060
01:25:55,000 --> 01:25:56,000
就是用过 Ansible

3061
01:25:56,000 --> 01:25:58,000
就是去做一些部署

3062
01:25:58,000 --> 01:25:58,000
然后

3063
01:25:58,000 --> 01:26:00,000
其实你真的用的时候会发现

3064
01:26:00,000 --> 01:26:01,000
就是你有时候还是

3065
01:26:01,000 --> 01:26:02,000
逃不掉要做一些

3066
01:26:02,000 --> 01:26:03,000
比如说简单的

3067
01:26:03,000 --> 01:26:04,000
你们循环啊

3068
01:26:04,000 --> 01:26:06,000
这种批量的操作的时候

3069
01:26:06,000 --> 01:26:07,000
你还是用很坑爹的

3070
01:26:07,000 --> 01:26:08,000
用那个 Yaml 的语法

3071
01:26:08,000 --> 01:26:09,000
去写一些东西

3072
01:26:09,000 --> 01:26:11,000
但这个好处就是说

3073
01:26:11,000 --> 01:26:12,000
你知道那里是在干嘛

3074
01:26:12,000 --> 01:26:15,000
然后你能比较好的判断

3075
01:26:15,000 --> 01:26:16,000
这个用程序去判断

3076
01:26:16,000 --> 01:26:17,000
它的那个状态

3077
01:26:17,000 --> 01:26:18,000
但是

3078
01:26:18,000 --> 01:26:20,000
但是写起来就比较

3079
01:26:20,000 --> 01:26:21,000
比较费劲了

3080
01:26:21,000 --> 01:26:22,000
然后那个语法

3081
01:26:22,000 --> 01:26:23,000
因为它并不是一个

3082
01:26:23,000 --> 01:26:25,000
完整的编程语言嘛

3083
01:26:25,000 --> 01:26:27,000
就很怪异的一个状态

3084
01:26:27,000 --> 01:26:28,000
但是这个时候

3085
01:26:28,000 --> 01:26:28,000
你就用

3086
01:26:28,000 --> 01:26:29,000
如果用 Ruby

3087
01:26:29,000 --> 01:26:30,000
这种方式去写的话

3088
01:26:30,000 --> 01:26:32,000
就会耍很多

3089
01:26:32,000 --> 01:26:33,000
只要你只要你会 Ruby

3090
01:26:33,000 --> 01:26:34,000
你写个循环

3091
01:26:34,000 --> 01:26:34,000
多简单

3092
01:26:34,000 --> 01:26:34,000
对吧

3093
01:26:34,000 --> 01:26:35,000
那个所有的语法

3094
01:26:35,000 --> 01:26:36,000
你都知道

3095
01:26:36,000 --> 01:26:37,000
然后你该操作怎么

3096
01:26:37,000 --> 01:26:39,000
都很正常

3097
01:26:39,000 --> 01:26:41,000
所以这里是一个不同的

3098
01:26:41,000 --> 01:26:41,000
这个什么

3099
01:26:41,000 --> 01:26:43,000
设计哲学的区别

3100
01:26:43,000 --> 01:26:44,000
我觉得

3101
01:26:44,000 --> 01:26:45,000
而且我觉得这个问题

3102
01:26:45,000 --> 01:26:47,000
可能也不仅仅是

3103
01:26:47,000 --> 01:26:49,000
在 Answer 这边会有

3104
01:26:49,000 --> 01:26:50,000
那你刚才说

3105
01:26:50,000 --> 01:26:51,000
描述的情况

3106
01:26:51,000 --> 01:26:51,000
让我想起了

3107
01:26:51,000 --> 01:26:53,000
就是 Angle.js

3108
01:26:53,000 --> 01:26:54,000
Angle.js

3109
01:26:54,000 --> 01:26:56,000
在很大一部分程度上

3110
01:26:56,000 --> 01:26:59,000
是试图去把

3111
01:26:59,000 --> 01:27:01,000
HTML 的语意

3112
01:27:01,000 --> 01:27:01,000
扩展出来

3113
01:27:01,000 --> 01:27:02,000
就是 Angle.js

3114
01:27:02,000 --> 01:27:04,000
可以自定义一个 HTML tag

3115
01:27:04,000 --> 01:27:06,000
然后这个 HTML tag

3116
01:27:06,000 --> 01:27:08,000
所呈现出来的东西

3117
01:27:08,000 --> 01:27:09,000
它的外观

3118
01:27:09,000 --> 01:27:10,000
以及它的行为

3119
01:27:10,000 --> 01:27:12,000
可以通过 HTML 和 CSS

3120
01:27:12,000 --> 01:27:13,000
和 JavaScript

3121
01:27:13,000 --> 01:27:15,000
去定义

3122
01:27:15,000 --> 01:27:16,000
但是你在定义的过程中

3123
01:27:16,000 --> 01:27:17,000
会发现

3124
01:27:17,000 --> 01:27:19,000
有时候你几乎是在用 HTML 来编程

3125
01:27:19,000 --> 01:27:23,000
就你会试图用 HTML

3126
01:27:23,000 --> 01:27:25,000
写一些和逻辑相关的东西

3127
01:27:25,000 --> 01:27:26,000
这个让我觉得挺不爽

3128
01:27:26,000 --> 01:27:28,000
但很显然

3129
01:27:28,000 --> 01:27:28,000
这也是

3130
01:27:28,000 --> 01:27:30,000
这也不是 HTML 的错

3131
01:27:30,000 --> 01:27:31,000
然后在 Answer 这边

3132
01:27:31,000 --> 01:27:32,000
这也不是 Yama 的错

3133
01:27:32,000 --> 01:27:33,000
就是有时候

3134
01:27:33,000 --> 01:27:35,000
有些场景逼迫你

3135
01:27:35,000 --> 01:27:36,000
不得不这样做

3136
01:27:36,000 --> 01:27:40,000
而工具的切分

3137
01:27:40,000 --> 01:27:41,000
则是相对来说

3138
01:27:41,000 --> 01:27:42,000
比较分明的

3139
01:27:42,000 --> 01:27:43,000
你不可能在这里面

3140
01:27:43,000 --> 01:27:46,000
有那么多的灵活性

3141
01:27:46,000 --> 01:27:46,000
如果你要

3142
01:27:46,000 --> 01:27:49,000
如果你要尊重

3143
01:27:49,000 --> 01:27:50,000
工具之间的区别的话

3144
01:27:50,000 --> 01:27:51,000
对

3145
01:27:51,000 --> 01:27:53,000
这也是我比较担心的一个问题

3146
01:27:53,000 --> 01:27:54,000
特别是看到 Answer

3147
01:27:54,000 --> 01:27:56,000
那个模板

3148
01:27:56,000 --> 01:27:58,000
就是 Yama 与法之后的一个问题

3149
01:27:58,000 --> 01:27:59,000
就是说很有可能

3150
01:27:59,000 --> 01:28:00,000
你知道

3151
01:28:00,000 --> 01:28:02,000
我们之前也吐槽过 Java 程式学员

3152
01:28:02,000 --> 01:28:04,000
因为 Java 的灵活性太差

3153
01:28:04,000 --> 01:28:06,000
也被迫

3154
01:28:06,000 --> 01:28:07,000
被逼

3155
01:28:07,000 --> 01:28:10,000
不得已使用什么 XML 来编程了吗

3156
01:28:10,000 --> 01:28:11,000
对没错

3157
01:28:11,000 --> 01:28:11,000
对

3158
01:28:11,000 --> 01:28:12,000
我觉得可能 Yama

3159
01:28:12,000 --> 01:28:13,000
如果它之后

3160
01:28:13,000 --> 01:28:17,000
搞不好会陷入同样的困境

3161
01:28:17,000 --> 01:28:19,000
就是被迫要用 Yama 来编程

3162
01:28:19,000 --> 01:28:22,000
所以其实这里要吐槽一下

3163
01:28:22,000 --> 01:28:26,000
其实为什么没有人用 Lisp 写一个

3164
01:28:26,000 --> 01:28:29,000
这个配置工具

3165
01:28:29,000 --> 01:28:30,000
就没有这个问题了

3166
01:28:30,000 --> 01:28:32,000
这个真的是 Data is code

3167
01:28:32,000 --> 01:28:32,000
Code is data

3168
01:28:32,000 --> 01:28:34,000
这个还真有

3169
01:28:34,000 --> 01:28:35,000
就是

3170
01:28:35,000 --> 01:28:38,000
当然我不确定

3171
01:28:38,000 --> 01:28:40,000
这个是不是你真的要的

3172
01:28:40,000 --> 01:28:44,000
但是你知道基于 Lisp 的那个 Java dialect

3173
01:28:44,000 --> 01:28:45,000
反了

3174
01:28:45,000 --> 01:28:48,000
基于 JVM 的 Lisp dialect

3175
01:28:48,000 --> 01:28:49,000
那 Closure

3176
01:28:49,000 --> 01:28:50,000
对

3177
01:28:50,000 --> 01:28:53,000
有一个运维工具叫做

3178
01:28:53,000 --> 01:28:55,000
应该是叫做 Pallet

3179
01:28:55,000 --> 01:28:58,000
就是用 Closure 写的

3180
01:28:58,000 --> 01:28:59,000
然后它的配置文本是

3181
01:28:59,000 --> 01:29:00,000
它的配置文本

3182
01:29:00,000 --> 01:29:02,000
其实就是它的运行脚本

3183
01:29:02,000 --> 01:29:04,000
脚本即配置

3184
01:29:04,000 --> 01:29:05,000
配置即脚本

3185
01:29:05,000 --> 01:29:07,000
然后它的那个什么脚本

3186
01:29:07,000 --> 01:29:09,000
也是可以当做 Data 来处理的

3187
01:29:09,000 --> 01:29:10,000
所以没错

3188
01:29:10,000 --> 01:29:11,000
存在这个问题了

3189
01:29:11,000 --> 01:29:11,000
对

3190
01:29:11,000 --> 01:29:13,000
这个东西叫做 Pallet

3191
01:29:13,000 --> 01:29:15,000
但是因为它需要 Java dependency

3192
01:29:15,000 --> 01:29:17,000
就是你本来搞的东西

3193
01:29:17,000 --> 01:29:18,000
可能已经非常臃肿

3194
01:29:18,000 --> 01:29:20,000
然后还要加一个 Java dependency

3195
01:29:20,000 --> 01:29:21,000
对

3196
01:29:21,000 --> 01:29:24,000
这个可能就是一个比较麻烦的问题

3197
01:29:24,000 --> 01:29:25,000
因为像你如果你反正是

3198
01:29:25,000 --> 01:29:27,000
一个东西是基于 JVM 的话

3199
01:29:27,000 --> 01:29:29,000
那你首先那个目标机器上

3200
01:29:29,000 --> 01:29:31,000
你只要得有一个才可以运行了

3201
01:29:31,000 --> 01:29:31,000
对吧

3202
01:29:31,000 --> 01:29:34,000
然后 JVM 的启动

3203
01:29:34,000 --> 01:29:36,000
那些也并不算的迅速

3204
01:29:36,000 --> 01:29:38,000
对于一个那种

3205
01:29:38,000 --> 01:29:39,000
如果你是要轻量级的

3206
01:29:39,000 --> 01:29:40,000
做一些配置

3207
01:29:40,000 --> 01:29:41,000
其实我觉得可能不是

3208
01:29:41,000 --> 01:29:43,000
特别好的一个选择

3209
01:29:43,000 --> 01:29:43,000
对

3210
01:29:43,000 --> 01:29:45,000
所以 Pallet 不是非常适合

3211
01:29:45,000 --> 01:29:49,000
你一些比较中等量级的

3212
01:29:49,000 --> 01:29:50,000
尤其是如果你的

3213
01:29:50,000 --> 01:29:51,000
你要部署的东西

3214
01:29:51,000 --> 01:29:53,000
本身跟 Java 没什么关系

3215
01:29:53,000 --> 01:29:54,000
那涂增一个 Java dependency

3216
01:29:54,000 --> 01:29:55,000
簡直是

3217
01:29:55,000 --> 01:29:56,000
不许奇

3218
01:29:56,000 --> 01:29:57,000
对

3219
01:29:57,000 --> 01:29:58,000
何必呢

3220
01:29:58,000 --> 01:29:58,000
真的

3221
01:29:58,000 --> 01:30:00,000
OK

3222
01:30:00,000 --> 01:30:02,000
那说回这个 Sort 和 Ansev

3223
01:30:02,000 --> 01:30:03,000
这两个东西

3224
01:30:03,000 --> 01:30:04,000
他们的

3225
01:30:04,000 --> 01:30:05,000
还有在设计准确上

3226
01:30:05,000 --> 01:30:07,000
跟那个 Puppet Chef

3227
01:30:07,000 --> 01:30:08,000
还有点不一样

3228
01:30:08,000 --> 01:30:09,000
没错

3229
01:30:09,000 --> 01:30:11,000
就

3230
01:30:11,000 --> 01:30:11,000
你来说吧

3231
01:30:11,000 --> 01:30:13,000
至少 Sort 这个东西是比较

3232
01:30:13,000 --> 01:30:18,000
Sort 其实有点像 Fabric

3233
01:30:18,000 --> 01:30:19,000
在某种程度上

3234
01:30:19,000 --> 01:30:21,000
只不过 Sort 会比较

3235
01:30:21,000 --> 01:30:23,000
怎么说呢

3236
01:30:23,000 --> 01:30:24,000
就更加

3237
01:30:24,000 --> 01:30:27,000
是 Fabric 的升级版本

3238
01:30:27,000 --> 01:30:27,000
就是

3239
01:30:27,000 --> 01:30:30,000
首先 Sort 是基于 ZeroMQ 的

3240
01:30:30,000 --> 01:30:32,000
其他的 Puppet Chef 也好

3241
01:30:32,000 --> 01:30:33,000
全都是基于 SSH

3242
01:30:33,000 --> 01:30:35,000
就是他的底层传输协议

3243
01:30:35,000 --> 01:30:36,000
都是 SSH

3244
01:30:36,000 --> 01:30:39,000
而 Sort 则是基于 ZeroMQ 的

3245
01:30:39,000 --> 01:30:39,000
就 MQ

3246
01:30:39,000 --> 01:30:40,000
ZeroMQ

3247
01:30:40,000 --> 01:30:41,000
什么是 ZeroMQ

3248
01:30:41,000 --> 01:30:42,000
你来解释一下

3249
01:30:42,000 --> 01:30:44,000
ZeroMQ

3250
01:30:44,000 --> 01:30:44,000
你可以认为

3251
01:30:44,000 --> 01:30:47,000
它是一个增强版的套节字

3252
01:30:47,000 --> 01:30:47,000
Socket

3253
01:30:47,000 --> 01:30:50,000
然后它可以让你做

3254
01:30:50,000 --> 01:30:52,000
因为你知道我们通常用的

3255
01:30:52,000 --> 01:30:53,000
那个 TCP Socket

3256
01:30:53,000 --> 01:30:54,000
它是一个基于流的

3257
01:30:54,000 --> 01:30:55,000
基于 Stream 的

3258
01:30:55,000 --> 01:30:57,000
你不知道这个流的

3259
01:30:57,000 --> 01:30:58,000
开头结尾怎么样

3260
01:30:58,000 --> 01:30:59,000
你得去读那个内容

3261
01:30:59,000 --> 01:31:01,000
然后自己定义协议去判断

3262
01:31:01,000 --> 01:31:02,000
然后 ZeroMQ 的话

3263
01:31:02,000 --> 01:31:03,000
它是基于 Message

3264
01:31:03,000 --> 01:31:04,000
就是基于消息的

3265
01:31:04,000 --> 01:31:05,000
消息的话

3266
01:31:05,000 --> 01:31:07,000
就是一个有固定的

3267
01:31:07,000 --> 01:31:09,000
也不叫固定长度

3268
01:31:09,000 --> 01:31:09,000
它是你可以

3269
01:31:09,000 --> 01:31:11,000
这个每一个消息之间

3270
01:31:11,000 --> 01:31:13,000
它是有一个固定边界的

3271
01:31:13,000 --> 01:31:14,000
就是你知道消息之间

3272
01:31:14,000 --> 01:31:14,000
消息怎么样

3273
01:31:14,000 --> 01:31:16,000
然后它可以让你做一些比较

3274
01:31:16,000 --> 01:31:18,000
普通的这种

3275
01:31:18,000 --> 01:31:19,000
Socket 做不到的事情

3276
01:31:19,000 --> 01:31:20,000
比如说

3277
01:31:20,000 --> 01:31:22,000
它可以让你做一个什么

3278
01:31:22,000 --> 01:31:23,000
PubSub

3279
01:31:23,000 --> 01:31:24,000
可以做一个 Q

3280
01:31:24,000 --> 01:31:27,000
这种更加丰富多样的

3281
01:31:27,000 --> 01:31:28,000
一个 TOP 结构

3282
01:31:28,000 --> 01:31:29,000
然后它的性能

3283
01:31:29,000 --> 01:31:31,000
就性能是非常不错的

3284
01:31:31,000 --> 01:31:32,000
一个通讯工具

3285
01:31:32,000 --> 01:31:33,000
对

3286
01:31:33,000 --> 01:31:34,000
Broadcast 之类的

3287
01:31:34,000 --> 01:31:35,000
对

3288
01:31:35,000 --> 01:31:36,000
当然它最大的败笔

3289
01:31:36,000 --> 01:31:37,000
可能是用 CZ 加写

3290
01:31:37,000 --> 01:31:40,000
它就安装和依赖

3291
01:31:40,000 --> 01:31:42,000
会比较麻烦

3292
01:31:42,000 --> 01:31:43,000
我记得 ZeroMQ

3293
01:31:43,000 --> 01:31:44,000
在什么地方

3294
01:31:44,000 --> 01:31:45,000
读过 ZeroMQ 的作者

3295
01:31:45,000 --> 01:31:46,000
说如果给他

3296
01:31:46,000 --> 01:31:47,000
上天给他再来一次的机会

3297
01:31:47,000 --> 01:31:49,000
他会选择用 CZ 来重写 ZeroMQ

3298
01:31:49,000 --> 01:31:50,000
ZeroMQ

3299
01:31:50,000 --> 01:31:52,000
ZeroMQ 原作者

3300
01:31:52,000 --> 01:31:54,000
自绪议把他已经分

3301
01:31:54,000 --> 01:31:56,000
就跟原那个分裂了

3302
01:31:56,000 --> 01:31:57,000
他就自己真的用

3303
01:31:57,000 --> 01:31:59,000
CZ 在写

3304
01:31:59,000 --> 01:31:59,000
CZ 重写的吗

3305
01:31:59,000 --> 01:32:00,000
真的吗

3306
01:32:00,000 --> 01:32:02,000
叫 NanoMessage

3307
01:32:02,000 --> 01:32:03,000
NanoMSG

3308
01:32:03,000 --> 01:32:04,000
也就是那个人

3309
01:32:04,000 --> 01:32:06,000
就做者之一吧

3310
01:32:06,000 --> 01:32:06,000
干的

3311
01:32:06,000 --> 01:32:07,000
然后 ZeroMQ

3312
01:32:07,000 --> 01:32:08,000
他现在是一个

3313
01:32:08,000 --> 01:32:10,000
有一个公司来推动的事情

3314
01:32:10,000 --> 01:32:12,000
那个做者之一

3315
01:32:12,000 --> 01:32:13,000
他出去搞了这个东西

3316
01:32:13,000 --> 01:32:15,000
然后他就改用 C 写了

3317
01:32:15,000 --> 01:32:16,000
对

3318
01:32:16,000 --> 01:32:21,000
总之 ZeroMQ 的

3319
01:32:21,000 --> 01:32:24,000
这样一个 MessageBus

3320
01:32:24,000 --> 01:32:27,000
来写的这么一套配置工具

3321
01:32:27,000 --> 01:32:30,000
然后他其实也是要有一台 Master

3322
01:32:30,000 --> 01:32:32,000
然后 Clients

3323
01:32:32,000 --> 01:32:33,000
在那边叫做 Minions

3324
01:32:33,000 --> 01:32:34,000
就那个

3325
01:32:34,000 --> 01:32:38,000
Dispersible Min 里面的那个 Minions

3326
01:32:38,000 --> 01:32:40,000
一群小黄人

3327
01:32:40,000 --> 01:32:40,000
对

3328
01:32:40,000 --> 01:32:41,000
香蕉人

3329
01:32:41,000 --> 01:32:41,000
对

3330
01:32:41,000 --> 01:32:43,000
然后他的功能

3331
01:32:43,000 --> 01:32:43,000
小冰的意思吧

3332
01:32:43,000 --> 01:32:44,000
对吧

3333
01:32:44,000 --> 01:32:45,000
Minion

3334
01:32:45,000 --> 01:32:45,000
我怎么记得

3335
01:32:45,000 --> 01:32:47,000
Minion 其实是普通嘛

3336
01:32:47,000 --> 01:32:47,000
就是

3337
01:32:47,000 --> 01:32:50,000
随着我的控

3338
01:32:50,000 --> 01:32:51,000
我手下的小裸裸

3339
01:32:51,000 --> 01:32:52,000
被我控制的

3340
01:32:52,000 --> 01:32:52,000
小裸裸

3341
01:32:52,000 --> 01:32:52,000
对

3342
01:32:52,000 --> 01:32:55,000
我记得这个词

3343
01:32:55,000 --> 01:32:56,000
我是从那个

3344
01:32:56,000 --> 01:32:58,000
Dungeon Keeper 里面学的

3345
01:32:58,000 --> 01:33:01,000
又暴露年龄了

3346
01:33:01,000 --> 01:33:01,000
对

3347
01:33:01,000 --> 01:33:05,000
然后 SAT 是一个相对来说

3348
01:33:05,000 --> 01:33:06,000
要比 Public Deck Chef

3349
01:33:06,000 --> 01:33:07,000
简单多的工具

3350
01:33:07,000 --> 01:33:09,000
他整个安装过程

3351
01:33:09,000 --> 01:33:11,000
就是在 Master 上

3352
01:33:11,000 --> 01:33:12,000
安一个包

3353
01:33:12,000 --> 01:33:13,000
然后在 Client 上

3354
01:33:13,000 --> 01:33:14,000
安一个包

3355
01:33:14,000 --> 01:33:14,000
然后就完了

3356
01:33:14,000 --> 01:33:18,000
而这一点

3357
01:33:18,000 --> 01:33:19,000
可能跟那个 Answer

3358
01:33:19,000 --> 01:33:21,000
其实还区别蛮大的

3359
01:33:21,000 --> 01:33:21,000
就是 Answer

3360
01:33:21,000 --> 01:33:23,000
其实不需要在客户端上

3361
01:33:23,000 --> 01:33:24,000
安装任何东西的

3362
01:33:24,000 --> 01:33:25,000
但是 Answer

3363
01:33:25,000 --> 01:33:26,000
你可以

3364
01:33:26,000 --> 01:33:28,000
服务端上安装的东西

3365
01:33:28,000 --> 01:33:30,000
是专门要写本书的

3366
01:33:30,000 --> 01:33:31,000
就那个

3367
01:33:31,000 --> 01:33:33,000
也不是专门写本书

3368
01:33:33,000 --> 01:33:34,000
反正专门有个教程

3369
01:33:34,000 --> 01:33:35,000
来教你怎么在

3370
01:33:35,000 --> 01:33:38,000
服务端上安装一个 Answer

3371
01:33:38,000 --> 01:33:39,000
但是

3372
01:33:39,000 --> 01:33:40,000
你可以不用装

3373
01:33:40,000 --> 01:33:40,000
但是

3374
01:33:40,000 --> 01:33:41,000
就是如果你是

3375
01:33:41,000 --> 01:33:43,000
数量不多的情况下

3376
01:33:43,000 --> 01:33:44,000
对

3377
01:33:44,000 --> 01:33:46,000
Answer 也是由企业级

3378
01:33:46,000 --> 01:33:47,000
解决方案的

3379
01:33:47,000 --> 01:33:48,000
就是要装一个 console

3380
01:33:48,000 --> 01:33:49,000
什么的

3381
01:33:49,000 --> 01:33:50,000
其实这几个都是

3382
01:33:50,000 --> 01:33:51,000
就是像 Pubbit 也好

3383
01:33:51,000 --> 01:33:52,000
Chef 也好

3384
01:33:52,000 --> 01:33:52,000
Sort

3385
01:33:52,000 --> 01:33:53,000
他们都是一个

3386
01:33:53,000 --> 01:33:54,000
共同的一个方式

3387
01:33:54,000 --> 01:33:55,000
就是说

3388
01:33:55,000 --> 01:33:56,000
他们有一个

3389
01:33:56,000 --> 01:33:57,000
商业公司来提供

3390
01:33:57,000 --> 01:33:58,000
这种商业级别的

3391
01:33:58,000 --> 01:34:00,000
就付费的商业支持

3392
01:34:00,000 --> 01:34:01,000
但同时又有一个

3393
01:34:01,000 --> 01:34:02,000
开放的

3394
01:34:02,000 --> 01:34:03,000
就是社区版本

3395
01:34:03,000 --> 01:34:05,000
就是所有的都是基于

3396
01:34:05,000 --> 01:34:06,000
一个开源软件

3397
01:34:06,000 --> 01:34:08,000
然后开源社区的

3398
01:34:08,000 --> 01:34:09,000
然后做一些商业化的

3399
01:34:09,000 --> 01:34:10,000
这个支持的

3400
01:34:10,000 --> 01:34:12,000
这么一种引力模式

3401
01:34:12,000 --> 01:34:14,000
应该这么说是安全的

3402
01:34:14,000 --> 01:34:14,000
对

3403
01:34:14,000 --> 01:34:15,000
对

3404
01:34:15,000 --> 01:34:18,000
当然我记得 Sort

3405
01:34:18,000 --> 01:34:20,000
其实也是有所谓

3406
01:34:20,000 --> 01:34:22,000
masterless menu

3407
01:34:22,000 --> 01:34:23,000
的一个模式

3408
01:34:23,000 --> 01:34:25,000
我们这一期最大的问题

3409
01:34:25,000 --> 01:34:26,000
就是我们两个

3410
01:34:26,000 --> 01:34:27,000
其实都没有什么实际的

3411
01:34:27,000 --> 01:34:28,000
使用经验

3412
01:34:28,000 --> 01:34:29,000
而且我只用过

3413
01:34:29,000 --> 01:34:30,000
这个 Answer

3414
01:34:30,000 --> 01:34:30,000
Sort

3415
01:34:30,000 --> 01:34:32,000
其实我是没怎么用

3416
01:34:32,000 --> 01:34:33,000
OK

3417
01:34:33,000 --> 01:34:34,000
应该是它比 Answer

3418
01:34:34,000 --> 01:34:35,000
后出现吗

3419
01:34:35,000 --> 01:34:35,000
应该是

3420
01:34:35,000 --> 01:34:35,000
对

3421
01:34:35,000 --> 01:34:37,000
其实 Sort

3422
01:34:37,000 --> 01:34:37,000
最简单的用法

3423
01:34:37,000 --> 01:34:38,000
我不知道 Answer

3424
01:34:38,000 --> 01:34:39,000
能不能做这件事情

3425
01:34:39,000 --> 01:34:40,000
就是 Sort

3426
01:34:40,000 --> 01:34:40,000
最简单的用法

3427
01:34:40,000 --> 01:34:41,000
就是比如说

3428
01:34:41,000 --> 01:34:43,000
Sort 专门有一个命令行工具

3429
01:34:43,000 --> 01:34:43,000
就叫 Sort

3430
01:34:43,000 --> 01:34:44,000
Sort

3431
01:34:44,000 --> 01:34:46,000
然后那个

3432
01:34:46,000 --> 01:34:49,000
Host name

3433
01:34:49,000 --> 01:34:50,000
Host name 可以用

3434
01:34:50,000 --> 01:34:51,000
比如说

3435
01:34:51,000 --> 01:34:52,000
那个 Asterisk

3436
01:34:52,000 --> 01:34:53,000
Asterisk

3437
01:34:53,000 --> 01:34:54,000
就是

3438
01:34:54,000 --> 01:34:54,000
星号

3439
01:34:54,000 --> 01:34:56,000
星号来

3440
01:34:56,000 --> 01:34:57,000
来指代所有

3441
01:34:57,000 --> 01:34:58,000
可以被

3442
01:34:58,000 --> 01:35:01,000
抵达的

3443
01:35:01,000 --> 01:35:01,000
这个

3444
01:35:01,000 --> 01:35:03,000
Minion

3445
01:35:03,000 --> 01:35:04,000
然后 Sort

3446
01:35:04,000 --> 01:35:05,000
星号

3447
01:35:05,000 --> 01:35:06,000
然后 Ping

3448
01:35:06,000 --> 01:35:07,000
然后所有的

3449
01:35:07,000 --> 01:35:08,000
那个

3450
01:35:08,000 --> 01:35:10,000
Minion

3451
01:35:10,000 --> 01:35:12,000
都会执行 Ping 名

3452
01:35:12,000 --> 01:35:13,000
诸如此类的

3453
01:35:13,000 --> 01:35:15,000
就是它有最简单的一个用法

3454
01:35:15,000 --> 01:35:17,000
就是直接用命令行下面的 Sort

3455
01:35:17,000 --> 01:35:20,000
然后你也可以在 Master 上面说

3456
01:35:20,000 --> 01:35:21,000
所有的 Minion

3457
01:35:21,000 --> 01:35:22,000
Sort

3458
01:35:22,000 --> 01:35:22,000
所有的 Minion

3459
01:35:22,000 --> 01:35:23,000
一起来

3460
01:35:23,000 --> 01:35:24,000
比如说

3461
01:35:24,000 --> 01:35:25,000
Install Package

3462
01:35:25,000 --> 01:35:26,000
Vim

3463
01:35:26,000 --> 01:35:29,000
然后所有的 Minion

3464
01:35:29,000 --> 01:35:31,000
也就会去安装 Vim

3465
01:35:31,000 --> 01:35:33,000
然后接下来就是

3466
01:35:33,000 --> 01:35:35,000
你可以写一个脚本来

3467
01:35:35,000 --> 01:35:37,000
来批量完成一些

3468
01:35:37,000 --> 01:35:40,000
叫做 Formula

3469
01:35:40,000 --> 01:35:41,000
对

3470
01:35:41,000 --> 01:35:43,000
这个应该是跟 Brew 一样

3471
01:35:43,000 --> 01:35:43,000
叫做 Formula

3472
01:35:43,000 --> 01:35:45,000
就是你可以执行一系列脚本

3473
01:35:45,000 --> 01:35:47,000
然后这些脚本叫做 Formula

3474
01:35:47,000 --> 01:35:47,000
可以就有点像

3475
01:35:47,000 --> 01:35:50,000
Puppet

3476
01:35:50,000 --> 01:35:51,000
或者是 Chef 那样

3477
01:35:51,000 --> 01:35:52,000
可以自动化完成

3478
01:35:52,000 --> 01:35:54,000
一系列

3479
01:35:54,000 --> 01:35:55,000
一系列作用

3480
01:35:55,000 --> 01:35:56,000
一系列行动

3481
01:35:56,000 --> 01:35:57,000
这样

3482
01:35:57,000 --> 01:35:58,000
所以

3483
01:35:58,000 --> 01:35:59,000
为什么说

3484
01:35:59,000 --> 01:36:00,000
就实际用的时候

3485
01:36:00,000 --> 01:36:01,000
为什么

3486
01:36:01,000 --> 01:36:02,000
这个 Ansible

3487
01:36:02,000 --> 01:36:03,000
也好

3488
01:36:03,000 --> 01:36:04,000
还是这个 Sort

3489
01:36:04,000 --> 01:36:04,000
也好

3490
01:36:04,000 --> 01:36:06,000
它会比 Puppet 和 Chef

3491
01:36:06,000 --> 01:36:07,000
这种跑起来更快

3492
01:36:07,000 --> 01:36:10,000
这里可能要稍微解释一下

3493
01:36:10,000 --> 01:36:12,000
就是说

3494
01:36:12,000 --> 01:36:14,000
因为也是刚才提到

3495
01:36:14,000 --> 01:36:16,000
配置语言的一个关系

3496
01:36:16,000 --> 01:36:16,000
就是说

3497
01:36:16,000 --> 01:36:18,000
Puppet 和 Chef

3498
01:36:18,000 --> 01:36:21,000
它每个机器上

3499
01:36:21,000 --> 01:36:23,000
它要跑一遍脚本

3500
01:36:23,000 --> 01:36:24,000
它跑完之后

3501
01:36:24,000 --> 01:36:24,000
才能知道

3502
01:36:24,000 --> 01:36:26,000
这个状态是否达到

3503
01:36:26,000 --> 01:36:27,000
你所要的需求

3504
01:36:27,000 --> 01:36:27,000
对吧

3505
01:36:27,000 --> 01:36:29,000
就每次你不管做什么

3506
01:36:29,000 --> 01:36:30,000
它都要把脚本

3507
01:36:30,000 --> 01:36:31,000
从头到尾跑一遍

3508
01:36:31,000 --> 01:36:33,000
但是像 Sort 和 Ansible

3509
01:36:33,000 --> 01:36:33,000
这两个东西

3510
01:36:33,000 --> 01:36:34,000
它是因为

3511
01:36:34,000 --> 01:36:35,000
它的配置文件

3512
01:36:35,000 --> 01:36:36,000
是一个描述性的语言

3513
01:36:36,000 --> 01:36:38,000
不是语言

3514
01:36:38,000 --> 01:36:39,000
就是描述性的数据结构

3515
01:36:39,000 --> 01:36:40,000
这样的话

3516
01:36:40,000 --> 01:36:42,000
它可以直接跳过中间

3517
01:36:42,000 --> 01:36:43,000
已经满足的那些东西

3518
01:36:43,000 --> 01:36:45,000
它不需要每次都执行

3519
01:36:45,000 --> 01:36:47,000
玩脚本

3520
01:36:47,000 --> 01:36:47,000
对

3521
01:36:47,000 --> 01:36:49,000
我觉得这么描述

3522
01:36:49,000 --> 01:36:49,000
应该是正确的

3523
01:36:49,000 --> 01:36:51,000
应该是正确的

3524
01:36:51,000 --> 01:36:51,000
对

3525
01:36:51,000 --> 01:36:53,000
所以可以有

3526
01:36:53,000 --> 01:36:54,000
很大程度上

3527
01:36:54,000 --> 01:36:55,000
可以减少

3528
01:36:55,000 --> 01:36:58,000
每一台服务器上

3529
01:36:58,000 --> 01:36:59,000
需要等待的时间

3530
01:36:59,000 --> 01:36:59,000
这样的话

3531
01:36:59,000 --> 01:37:00,000
就可以大幅度提高

3532
01:37:00,000 --> 01:37:01,000
部署的速度

3533
01:37:01,000 --> 01:37:03,000
没错

3534
01:37:03,000 --> 01:37:03,000
嗯

3535
01:37:03,000 --> 01:37:07,000
然后这几个常见

3536
01:37:07,000 --> 01:37:08,000
OP 2 我们就讲到这里

3537
01:37:08,000 --> 01:37:09,000
下面

3538
01:37:09,000 --> 01:37:11,000
还有一些不常见的

3539
01:37:11,000 --> 01:37:12,000
就带过吧

3540
01:37:12,000 --> 01:37:13,000
有个什么 Parl 的 REX

3541
01:37:13,000 --> 01:37:14,000
你也写到

3542
01:37:14,000 --> 01:37:16,000
对 REX 是一个

3543
01:37:16,000 --> 01:37:19,000
反正也是有极用的

3544
01:37:19,000 --> 01:37:21,000
Parl 现在还有人在用吗

3545
01:37:21,000 --> 01:37:22,000
我现在就是

3546
01:37:22,000 --> 01:37:23,000
不要这样

3547
01:37:23,000 --> 01:37:25,000
这么说真的不太好

3548
01:37:25,000 --> 01:37:25,000
对

3549
01:37:25,000 --> 01:37:29,000
但是确实是不太流行的一个语言

3550
01:37:29,000 --> 01:37:30,000
我的前前公司

3551
01:37:30,000 --> 01:37:32,000
安装了一个

3552
01:37:32,000 --> 01:37:33,000
一套机房组件

3553
01:37:33,000 --> 01:37:34,000
我忘了是什么

3554
01:37:34,000 --> 01:37:37,000
好像是某一套电源管理系统

3555
01:37:37,000 --> 01:37:39,000
电源管理系统

3556
01:37:39,000 --> 01:37:39,000
对

3557
01:37:39,000 --> 01:37:41,000
给了一批配置工具

3558
01:37:41,000 --> 01:37:42,000
嗯哼

3559
01:37:42,000 --> 01:37:42,000
就用 Parl 写

3560
01:37:42,000 --> 01:37:45,000
就感觉就是新的那些工具

3561
01:37:45,000 --> 01:37:46,000
基本上都没有用 Parl 写的了

3562
01:37:46,000 --> 01:37:47,000
对

3563
01:37:47,000 --> 01:37:48,000
Parl 是一个

3564
01:37:48,000 --> 01:37:49,000
Parl 就是

3565
01:37:49,000 --> 01:37:50,000
80 天的

3566
01:37:50,000 --> 01:37:51,000
80 天的 Ruby 嘛

3567
01:37:51,000 --> 01:37:52,000
对

3568
01:37:52,000 --> 01:37:53,000
一个 hype 的劲儿

3569
01:37:53,000 --> 01:37:53,000
对

3570
01:37:53,000 --> 01:37:55,000
但现在好像已经过气了

3571
01:37:55,000 --> 01:37:56,000
对

3572
01:37:56,000 --> 01:37:57,000
这么说应该是安全

3573
01:37:57,000 --> 01:37:59,000
不会被人喷吧

3574
01:37:59,000 --> 01:37:59,000
那很难说

3575
01:37:59,000 --> 01:38:00,000
Parl 也是有

3576
01:38:00,000 --> 01:38:01,000
我想

3577
01:38:01,000 --> 01:38:03,000
最近我用到一个

3578
01:38:03,000 --> 01:38:04,000
Parl 写的工具

3579
01:38:04,000 --> 01:38:05,000
还蛮令我意外的

3580
01:38:05,000 --> 01:38:06,000
那个

3581
01:38:06,000 --> 01:38:07,000
Linode

3582
01:38:07,000 --> 01:38:08,000
它不是开发了一个

3583
01:38:08,000 --> 01:38:09,000
命令行工具

3584
01:38:09,000 --> 01:38:10,000
让它可以不用网页版

3585
01:38:10,000 --> 01:38:11,000
不用登陆网页

3586
01:38:11,000 --> 01:38:13,000
可以直接操纵那个虚拟机

3587
01:38:13,000 --> 01:38:13,000
嗯

3588
01:38:13,000 --> 01:38:15,000
用 Parl

3589
01:38:15,000 --> 01:38:16,000
安装过程

3590
01:38:16,000 --> 01:38:19,000
你试下在 Brew 里面安装的话

3591
01:38:19,000 --> 01:38:20,000
你会发现那个安装过程

3592
01:38:20,000 --> 01:38:22,000
超级超级长

3593
01:38:22,000 --> 01:38:24,000
它下载可能好几百个 Parl 的包

3594
01:38:24,000 --> 01:38:26,000
OK

3595
01:38:26,000 --> 01:38:26,000
天哪

3596
01:38:26,000 --> 01:38:27,000
我就是

3597
01:38:27,000 --> 01:38:28,000
anyway

3598
01:38:28,000 --> 01:38:31,000
就是唯一一个

3599
01:38:31,000 --> 01:38:33,000
现代一点的 Parl 的用户

3600
01:38:33,000 --> 01:38:35,000
然后给我感觉这么糟糕

3601
01:38:35,000 --> 01:38:35,000
所以你可以想

3602
01:38:35,000 --> 01:38:38,000
这个后面是多么惨烈的一个状况

3603
01:38:38,000 --> 01:38:40,000
anyway

3604
01:38:40,000 --> 01:38:43,000
下面我们过渡到今天最最核心的内容

3605
01:38:43,000 --> 01:38:44,000
就是

3606
01:38:44,000 --> 01:38:46,000
containerization

3607
01:38:46,000 --> 01:38:50,000
这个要先解决一下

3608
01:38:50,000 --> 01:38:52,000
containerization 是什么玩意儿

3609
01:38:52,000 --> 01:38:53,000
其实简单说就是集装箱嘛

3610
01:38:53,000 --> 01:38:55,000
对

3611
01:38:55,000 --> 01:38:55,000
集装箱化

3612
01:38:55,000 --> 01:38:56,000
对

3613
01:38:56,000 --> 01:38:56,000
集装箱化

3614
01:38:56,000 --> 01:38:57,000
对

3615
01:38:57,000 --> 01:38:59,000
但是要解释集装箱

3616
01:38:59,000 --> 01:39:00,000
可能要牵涉到

3617
01:39:00,000 --> 01:39:01,000
那我们在讲集装箱化

3618
01:39:01,000 --> 01:39:03,000
是在软件世界里面那样讲

3619
01:39:03,000 --> 01:39:03,000
对

3620
01:39:03,000 --> 01:39:04,000
我们在讲一个 metaphor

3621
01:39:04,000 --> 01:39:07,000
但是其实在现实世界里面

3622
01:39:07,000 --> 01:39:08,000
这个 metaphor 也是

3623
01:39:08,000 --> 01:39:09,000
非常重要

3624
01:39:09,000 --> 01:39:10,000
同等重要

3625
01:39:10,000 --> 01:39:10,000
对

3626
01:39:10,000 --> 01:39:11,000
就

3627
01:39:11,000 --> 01:39:13,000
containerization

3628
01:39:13,000 --> 01:39:15,000
可能是人类最重要的发明之一

3629
01:39:15,000 --> 01:39:16,000
不可能没有之一

3630
01:39:16,000 --> 01:39:17,000
可能最重要的发明

3631
01:39:17,000 --> 01:39:18,000
不可能啊

3632
01:39:18,000 --> 01:39:19,000
人类最重要的发明是火

3633
01:39:19,000 --> 01:39:20,000
好吧

3634
01:39:20,000 --> 01:39:22,000
或者互联网

3635
01:39:22,000 --> 01:39:23,000
现代社会

3636
01:39:23,000 --> 01:39:24,000
现代社会

3637
01:39:24,000 --> 01:39:25,000
集装箱是一个

3638
01:39:25,000 --> 01:39:27,000
如果有排前十的话

3639
01:39:27,000 --> 01:39:29,000
它可能至少能力到前五

3640
01:39:29,000 --> 01:39:31,000
好吧

3641
01:39:31,000 --> 01:39:32,000
我们来排一排好

3642
01:39:32,000 --> 01:39:34,000
算了

3643
01:39:34,000 --> 01:39:38,000
总之抽水马桶和集装箱

3644
01:39:38,000 --> 01:39:42,000
可能是彻底让我们变得文明起来的

3645
01:39:42,000 --> 01:39:42,000
必要条件

3646
01:39:42,000 --> 01:39:43,000
两个必要条件

3647
01:39:43,000 --> 01:39:45,000
就是如果没有集装箱

3648
01:39:45,000 --> 01:39:47,000
就肯定没有什么现代什么全球化

3649
01:39:47,000 --> 01:39:48,000
没有什么现代经济

3650
01:39:48,000 --> 01:39:50,000
我们也没有办法再扯什么犊子

3651
01:39:50,000 --> 01:39:51,000
没错

3652
01:39:51,000 --> 01:39:53,000
为什么呢

3653
01:39:53,000 --> 01:39:53,000
因为

3654
01:39:53,000 --> 01:39:57,000
曾经有这么一个时代

3655
01:39:57,000 --> 01:39:59,000
甚至离我们不是特别遥远

3656
01:39:59,000 --> 01:40:00,000
就是在二战

3657
01:40:00,000 --> 01:40:02,000
应该是在二战之前

3658
01:40:02,000 --> 01:40:03,000
就是大概六

3659
01:40:03,000 --> 01:40:04,000
画一分水领的话

3660
01:40:04,000 --> 01:40:06,000
就是 1960 年之前

3661
01:40:06,000 --> 01:40:10,000
整个世界的航运系统

3662
01:40:10,000 --> 01:40:11,000
是

3663
01:40:11,000 --> 01:40:13,000
怎么说呢

3664
01:40:13,000 --> 01:40:14,000
分散的

3665
01:40:14,000 --> 01:40:17,000
是没有一个统一的

3666
01:40:17,000 --> 01:40:17,000
没有

3667
01:40:17,000 --> 01:40:18,000
就是这么说吧

3668
01:40:18,000 --> 01:40:19,000
就 60 年代之前

3669
01:40:19,000 --> 01:40:22,000
在集装箱发展出来之前

3670
01:40:22,000 --> 01:40:26,000
整个人类的物流系统是非常臃肿和零散

3671
01:40:26,000 --> 01:40:27,000
对

3672
01:40:27,000 --> 01:40:28,000
这里要

3673
01:40:28,000 --> 01:40:29,000
可能要一个比较形象的描述

3674
01:40:29,000 --> 01:40:30,000
就是说

3675
01:40:30,000 --> 01:40:31,000
假设

3676
01:40:31,000 --> 01:40:33,000
我当时在德国

3677
01:40:33,000 --> 01:40:33,000
对吧

3678
01:40:33,000 --> 01:40:35,000
我在加拿大

3679
01:40:35,000 --> 01:40:36,000
然后你准备给我运

3680
01:40:36,000 --> 01:40:38,000
10 吨大米过来

3681
01:40:38,000 --> 01:40:39,000
举个例子

3682
01:40:39,000 --> 01:40:40,000
我们虽然不明白为什么这么干

3683
01:40:40,000 --> 01:40:41,000
但是可以

3684
01:40:41,000 --> 01:40:42,000
可以讲一下这个过程

3685
01:40:42,000 --> 01:40:42,000
就是要

3686
01:40:42,000 --> 01:40:44,000
会有多繁琐

3687
01:40:44,000 --> 01:40:45,000
因为你

3688
01:40:45,000 --> 01:40:47,000
首先你是在一个内陆的城市

3689
01:40:47,000 --> 01:40:47,000
对吧

3690
01:40:47,000 --> 01:40:48,000
对

3691
01:40:48,000 --> 01:40:48,000
不是在海港

3692
01:40:48,000 --> 01:40:50,000
你得先把这 10 吨大米

3693
01:40:50,000 --> 01:40:51,000
想办法装到一个车上面

3694
01:40:51,000 --> 01:40:52,000
或者火车上面

3695
01:40:52,000 --> 01:40:53,000
然后这个火车或者是卡车

3696
01:40:53,000 --> 01:40:55,000
拖到一个都各的一个海港上

3697
01:40:55,000 --> 01:40:56,000
然后再装船

3698
01:40:56,000 --> 01:40:57,000
再运到我这里来

3699
01:40:57,000 --> 01:40:58,000
我这里边是

3700
01:40:58,000 --> 01:40:59,000
我这里是个港口

3701
01:40:59,000 --> 01:41:00,000
可能还好

3702
01:41:00,000 --> 01:41:01,000
但是就说

3703
01:41:01,000 --> 01:41:01,000
说你那段吧

3704
01:41:01,000 --> 01:41:03,000
应该主要的运输的难度

3705
01:41:03,000 --> 01:41:05,000
都已经能够覆盖得到了

3706
01:41:05,000 --> 01:41:06,000
因为这个米是一个

3707
01:41:06,000 --> 01:41:07,000
小颗粒嘛

3708
01:41:07,000 --> 01:41:08,000
散装的东西

3709
01:41:08,000 --> 01:41:08,000
对

3710
01:41:08,000 --> 01:41:09,000
它是散的东西

3711
01:41:09,000 --> 01:41:10,000
首先你

3712
01:41:10,000 --> 01:41:12,000
第一步就是你要解决一个容器的问题

3713
01:41:12,000 --> 01:41:13,000
米是装在袋子里

3714
01:41:13,000 --> 01:41:14,000
还是装在桶里呢

3715
01:41:14,000 --> 01:41:16,000
袋子和桶都有各有各的优点

3716
01:41:16,000 --> 01:41:17,000
比如说袋子比较

3717
01:41:17,000 --> 01:41:18,000
比较灵活

3718
01:41:18,000 --> 01:41:20,000
你可以把几袋米叠在一起

3719
01:41:20,000 --> 01:41:22,000
但是袋子容易破

3720
01:41:22,000 --> 01:41:23,000
不过是有这个问题

3721
01:41:23,000 --> 01:41:24,000
就是说

3722
01:41:24,000 --> 01:41:25,000
不是所有的地方

3723
01:41:25,000 --> 01:41:27,000
因为你装袋是要有成本的嘛

3724
01:41:27,000 --> 01:41:28,000
袋子首先本身是要成本

3725
01:41:28,000 --> 01:41:29,000
10 吨大米你要装多大

3726
01:41:29,000 --> 01:41:30,000
你要装那种

3727
01:41:30,000 --> 01:41:31,000
我们常见的那种

3728
01:41:31,000 --> 01:41:32,000
什么几十公斤的一个小袋

3729
01:41:32,000 --> 01:41:34,000
你得装好几

3730
01:41:34,000 --> 01:41:35,000
几百包吧

3731
01:41:35,000 --> 01:41:37,000
几千包这样的

3732
01:41:37,000 --> 01:41:38,000
然后其实这个是一个

3733
01:41:38,000 --> 01:41:40,000
你装填的时候就是一个成本

3734
01:41:40,000 --> 01:41:41,000
然后如果像这种

3735
01:41:41,000 --> 01:41:43,000
这种规模的运输的话

3736
01:41:43,000 --> 01:41:43,000
很多人他们都是

3737
01:41:43,000 --> 01:41:45,000
所谓都用散货

3738
01:41:45,000 --> 01:41:46,000
就是你直接装到一个

3739
01:41:46,000 --> 01:41:48,000
大的容器里面

3740
01:41:48,000 --> 01:41:50,000
然后就不用再分袋小装的

3741
01:41:50,000 --> 01:41:51,000
然后再装过

3742
01:41:51,000 --> 01:41:52,000
再运输这样

3743
01:41:52,000 --> 01:41:52,000
对

3744
01:41:52,000 --> 01:41:55,000
但是散货的盒子又有一个

3745
01:41:55,000 --> 01:41:56,000
又不能太大

3746
01:41:56,000 --> 01:41:57,000
又不能太小

3747
01:41:57,000 --> 01:41:59,000
散货的话

3748
01:41:59,000 --> 01:42:00,000
你要比如说你现在有个卡车

3749
01:42:00,000 --> 01:42:00,000
对吧

3750
01:42:00,000 --> 01:42:02,000
你先散货装在一个卡车上面

3751
01:42:02,000 --> 01:42:04,000
你也得想办法把那个东西

3752
01:42:04,000 --> 01:42:06,000
那些米装到卡车里面去

3753
01:42:06,000 --> 01:42:07,000
对吧

3754
01:42:07,000 --> 01:42:08,000
然后卡车有不同的尺寸

3755
01:42:08,000 --> 01:42:09,000
对吧

3756
01:42:09,000 --> 01:42:11,000
你可能一个车装不了

3757
01:42:11,000 --> 01:42:12,000
你还得搞几个车

3758
01:42:12,000 --> 01:42:14,000
10 吨可能体现不出来

3759
01:42:14,000 --> 01:42:17,000
有些卡车 10 吨就能装上了

3760
01:42:17,000 --> 01:42:17,000
100 吨吧

3761
01:42:17,000 --> 01:42:19,000
可能要运好几卡车

3762
01:42:19,000 --> 01:42:21,000
可能卡车的形状还不一样

3763
01:42:21,000 --> 01:42:22,000
那你怎么办

3764
01:42:22,000 --> 01:42:24,000
然后你到了卡车到了海港边

3765
01:42:24,000 --> 01:42:26,000
如果你是散货的话

3766
01:42:26,000 --> 01:42:29,000
你得想办法怎么去装到一个船上

3767
01:42:29,000 --> 01:42:30,000
因为船不只装 100 吨

3768
01:42:30,000 --> 01:42:31,000
或者 10 吨

3769
01:42:31,000 --> 01:42:34,000
你还得想怎么去和其他的东西

3770
01:42:34,000 --> 01:42:35,000
共就是什么

3771
01:42:35,000 --> 01:42:36,000
就是怎么摆

3772
01:42:36,000 --> 01:42:38,000
和其他的那些船上

3773
01:42:38,000 --> 01:42:39,000
其他物品也怎么摆

3774
01:42:39,000 --> 01:42:39,000
如果你是散货的话

3775
01:42:39,000 --> 01:42:41,000
你还得考虑在海上的时候

3776
01:42:41,000 --> 01:42:43,000
防潮怎么办

3777
01:42:43,000 --> 01:42:44,000
路上有下雨怎么办

3778
01:42:44,000 --> 01:42:45,000
对吧

3779
01:42:45,000 --> 01:42:46,000
各种各样的

3780
01:42:46,000 --> 01:42:46,000
蛀虫怎么办

3781
01:42:46,000 --> 01:42:48,000
有人盗窃怎么办

3782
01:42:48,000 --> 01:42:49,000
然后装货的时候

3783
01:42:49,000 --> 01:42:50,000
还有一个很大的

3784
01:42:50,000 --> 01:42:51,000
你散货的话

3785
01:42:51,000 --> 01:42:51,000
你可能怎么装

3786
01:42:51,000 --> 01:42:53,000
你拿个最传统的时候

3787
01:42:53,000 --> 01:42:55,000
是一些人拿个什么铲子

3788
01:42:55,000 --> 01:42:57,000
一铲一铲的往上铲

3789
01:42:57,000 --> 01:42:58,000
对吧

3790
01:42:58,000 --> 01:42:58,000
对

3791
01:42:58,000 --> 01:42:59,000
你就这个

3792
01:42:59,000 --> 01:43:02,000
即便现在煤船还是这样的

3793
01:43:02,000 --> 01:43:05,000
煤船还是这样的吗

3794
01:43:05,000 --> 01:43:05,000
对

3795
01:43:05,000 --> 01:43:07,000
就是在莱银河里面

3796
01:43:07,000 --> 01:43:08,000
经常还是可以看到一些

3797
01:43:08,000 --> 01:43:09,000
运那个

3798
01:43:09,000 --> 01:43:09,000
在铲获

3799
01:43:09,000 --> 01:43:10,000
对

3800
01:43:10,000 --> 01:43:12,000
海针就不是用基酸箱

3801
01:43:12,000 --> 01:43:14,000
仍旧不是用基酸

3802
01:43:14,000 --> 01:43:14,000
基酱箱了

3803
01:43:14,000 --> 01:43:15,000
但他们也不是用铲

3804
01:43:15,000 --> 01:43:17,000
他们是用什么卷洋机之类的

3805
01:43:17,000 --> 01:43:18,000
还是自动化了

3806
01:43:18,000 --> 01:43:18,000
对吧

3807
01:43:18,000 --> 01:43:19,000
对

3808
01:43:19,000 --> 01:43:20,000
但是你需要有这

3809
01:43:20,000 --> 01:43:21,000
你不可能说

3810
01:43:21,000 --> 01:43:23,000
你用用运煤的东西

3811
01:43:23,000 --> 01:43:25,000
再去运这个运大米

3812
01:43:25,000 --> 01:43:26,000
就是说你用

3813
01:43:26,000 --> 01:43:27,000
你卷煤的那个东西

3814
01:43:27,000 --> 01:43:29,000
肯定不能用来卷大米

3815
01:43:29,000 --> 01:43:30,000
因为它互相污染

3816
01:43:30,000 --> 01:43:31,000
对吧

3817
01:43:31,000 --> 01:43:31,000
对

3818
01:43:31,000 --> 01:43:31,000
所以看我们

3819
01:43:31,000 --> 01:43:33,000
就互相污染也是一个

3820
01:43:33,000 --> 01:43:34,000
很重要的问题

3821
01:43:34,000 --> 01:43:34,000
没错

3822
01:43:34,000 --> 01:43:36,000
然后就是这个运

3823
01:43:36,000 --> 01:43:39,000
就每在每切换一次模式的

3824
01:43:39,000 --> 01:43:40,000
切换一次运输模式

3825
01:43:40,000 --> 01:43:42,000
比如说你从卡车转到船

3826
01:43:42,000 --> 01:43:43,000
或者是卡车转到火车

3827
01:43:43,000 --> 01:43:44,000
这种模式的时候

3828
01:43:44,000 --> 01:43:45,000
你知道有一个转换的过程

3829
01:43:45,000 --> 01:43:47,000
这个费时费力

3830
01:43:47,000 --> 01:43:48,000
然后有可能

3831
01:43:48,000 --> 01:43:48,000
而且会有损

3832
01:43:48,000 --> 01:43:49,000
会有损

3833
01:43:49,000 --> 01:43:50,000
对

3834
01:43:50,000 --> 01:43:51,000
你可能每次会产掉一些

3835
01:43:51,000 --> 01:43:53,000
到地上

3836
01:43:53,000 --> 01:43:55,000
或者说就产坏了一些

3837
01:43:55,000 --> 01:43:56,000
因为就先那种米是长条的

3838
01:43:56,000 --> 01:43:58,000
你产下去

3839
01:43:58,000 --> 01:43:59,000
可能就断成两截了

3840
01:43:59,000 --> 01:44:00,000
对吧

3841
01:44:00,000 --> 01:44:00,000
没错

3842
01:44:00,000 --> 01:44:02,000
就每一个环境

3843
01:44:02,000 --> 01:44:03,000
都会出现这么一个问题

3844
01:44:03,000 --> 01:44:05,000
所以后来就有一个

3845
01:44:05,000 --> 01:44:08,000
这个什么跨时代的发明

3846
01:44:08,000 --> 01:44:09,000
就集装箱

3847
01:44:09,000 --> 01:44:10,000
就很出事了

3848
01:44:10,000 --> 01:44:10,000
对

3849
01:44:10,000 --> 01:44:12,000
集装箱其实是

3850
01:44:12,000 --> 01:44:13,000
我们现在司空见惯

3851
01:44:13,000 --> 01:44:16,000
但是细细想来

3852
01:44:16,000 --> 01:44:17,000
其实是一个挺了不起的东西

3853
01:44:17,000 --> 01:44:18,000
对

3854
01:44:18,000 --> 01:44:19,000
就他解决了

3855
01:44:19,000 --> 01:44:20,000
刚才我们讲的一系列的问题

3856
01:44:20,000 --> 01:44:22,000
没错

3857
01:44:22,000 --> 01:44:24,000
就是你想象一个刚做的盒子

3858
01:44:24,000 --> 01:44:25,000
一个是刚做的

3859
01:44:25,000 --> 01:44:26,000
应该是刚还是铝

3860
01:44:26,000 --> 01:44:27,000
刚做的盒子

3861
01:44:27,000 --> 01:44:28,000
刚做的盒子

3862
01:44:28,000 --> 01:44:29,000
你往里面放什么东西

3863
01:44:29,000 --> 01:44:31,000
然后整个盒子作为一个整体

3864
01:44:31,000 --> 01:44:34,000
可以被搬到船上

3865
01:44:34,000 --> 01:44:35,000
被放在火车上

3866
01:44:35,000 --> 01:44:36,000
被放在汽车上

3867
01:44:36,000 --> 01:44:39,000
然后甚至有

3868
01:44:39,000 --> 01:44:40,000
我记得我们家

3869
01:44:40,000 --> 01:44:43,000
因为我们家曾经从兰州搬到天津

3870
01:44:43,000 --> 01:44:44,000
那整个搬家的过程

3871
01:44:44,000 --> 01:44:45,000
其实就是

3872
01:44:45,000 --> 01:44:47,000
买个集装箱的

3873
01:44:47,000 --> 01:44:49,000
公司运来了一个集装箱

3874
01:44:49,000 --> 01:44:49,000
然后

3875
01:44:49,000 --> 01:44:50,000
全部塞进去

3876
01:44:50,000 --> 01:44:51,000
我们家占其中一半

3877
01:44:51,000 --> 01:44:53,000
然后另外一个邻居占其中另一半

3878
01:44:53,000 --> 01:44:55,000
然后整个集装箱被运到天津

3879
01:44:55,000 --> 01:44:57,000
然后我们再把集装箱

3880
01:44:57,000 --> 01:44:59,000
从我们新家的门口拆下来

3881
01:44:59,000 --> 01:44:59,000
对

3882
01:44:59,000 --> 01:45:00,000
把里面的家具一个搬出来

3883
01:45:00,000 --> 01:45:01,000
就是我们可以看到

3884
01:45:01,000 --> 01:45:03,000
在用集装箱之后

3885
01:45:03,000 --> 01:45:06,000
首先解决了这个模式切换中间的

3886
01:45:06,000 --> 01:45:07,000
一个损耗的问题

3887
01:45:07,000 --> 01:45:07,000
就是说

3888
01:45:07,000 --> 01:45:08,000
因为你集装箱

3889
01:45:08,000 --> 01:45:09,000
你是作为整体处理

3890
01:45:09,000 --> 01:45:11,000
你再从这个卡

3891
01:45:11,000 --> 01:45:13,000
你集装箱装到一个卡车上面去

3892
01:45:13,000 --> 01:45:14,000
然后再从卡车

3893
01:45:14,000 --> 01:45:15,000
装到火车上面去

3894
01:45:15,000 --> 01:45:17,000
中间只需要一个吊一下

3895
01:45:17,000 --> 01:45:18,000
不需要再把里面东西

3896
01:45:18,000 --> 01:45:20,000
每一个就像你搬家一样

3897
01:45:20,000 --> 01:45:21,000
不需要把里面每个家具

3898
01:45:21,000 --> 01:45:22,000
驾驶再搬出来

3899
01:45:22,000 --> 01:45:25,000
然后再放到火车上再摆一遍

3900
01:45:25,000 --> 01:45:26,000
然后再从火车上挪下来

3901
01:45:26,000 --> 01:45:28,000
再放到船上再摆一遍

3902
01:45:28,000 --> 01:45:28,000
这样

3903
01:45:28,000 --> 01:45:30,000
每次需要就是一个简单的

3904
01:45:30,000 --> 01:45:31,000
挪一下

3905
01:45:31,000 --> 01:45:32,000
吊车吊一下就好了

3906
01:45:32,000 --> 01:45:33,000
不需要

3907
01:45:33,000 --> 01:45:34,000
也没有损耗

3908
01:45:34,000 --> 01:45:36,000
然后因为它是这个整个

3909
01:45:36,000 --> 01:45:37,000
它是封起来的

3910
01:45:37,000 --> 01:45:39,000
就说它可以做到什么

3911
01:45:39,000 --> 01:45:40,000
做出的这个 weatherproof

3912
01:45:40,000 --> 01:45:41,000
就是不怕

3913
01:45:41,000 --> 01:45:43,000
就风雨无阻

3914
01:45:43,000 --> 01:45:43,000
对

3915
01:45:43,000 --> 01:45:45,000
因为你可以铁盒里面

3916
01:45:45,000 --> 01:45:46,000
你可以做一些

3917
01:45:46,000 --> 01:45:47,000
包括加固啊

3918
01:45:47,000 --> 01:45:48,000
密封啊

3919
01:45:48,000 --> 01:45:49,000
这些东西的

3920
01:45:49,000 --> 01:45:50,000
保温啊

3921
01:45:50,000 --> 01:45:50,000
对

3922
01:45:50,000 --> 01:45:52,000
而且更重要一点就是

3923
01:45:52,000 --> 01:45:53,000
你可以让

3924
01:45:53,000 --> 01:45:55,000
让这个收获人和送获人

3925
01:45:55,000 --> 01:45:56,000
都放心的一个

3926
01:45:56,000 --> 01:45:57,000
可以锁起来

3927
01:45:57,000 --> 01:45:57,000
就是

3928
01:45:57,000 --> 01:45:58,000
它会

3929
01:45:58,000 --> 01:45:59,000
对

3930
01:45:59,000 --> 01:46:00,000
每个集装箱在上传的时候

3931
01:46:00,000 --> 01:46:01,000
会锁起来

3932
01:46:01,000 --> 01:46:02,000
然后下传的时候

3933
01:46:02,000 --> 01:46:04,000
收获人可以验证这个风

3934
01:46:04,000 --> 01:46:05,000
如果被拆过

3935
01:46:05,000 --> 01:46:05,000
对

3936
01:46:05,000 --> 01:46:06,000
如果被拆过了

3937
01:46:06,000 --> 01:46:07,000
可以拒收

3938
01:46:07,000 --> 01:46:07,000
对

3939
01:46:07,000 --> 01:46:09,000
就跟那个快递一样

3940
01:46:09,000 --> 01:46:10,000
没错

3941
01:46:10,000 --> 01:46:11,000
而且它可以

3942
01:46:11,000 --> 01:46:12,000
就可以说

3943
01:46:12,000 --> 01:46:13,000
因为集装箱

3944
01:46:13,000 --> 01:46:14,000
它是密封

3945
01:46:14,000 --> 01:46:14,000
就是每个东西

3946
01:46:14,000 --> 01:46:15,000
可以密封起来

3947
01:46:15,000 --> 01:46:16,000
如果你对这个

3948
01:46:16,000 --> 01:46:17,000
窜外的要求更严重

3949
01:46:17,000 --> 01:46:18,000
你还可以再做一些

3950
01:46:18,000 --> 01:46:19,000
在集装箱内部

3951
01:46:19,000 --> 01:46:20,000
再做一些特别的处理

3952
01:46:20,000 --> 01:46:21,000
对吧

3953
01:46:21,000 --> 01:46:21,000
没错

3954
01:46:21,000 --> 01:46:21,000
比如说

3955
01:46:21,000 --> 01:46:22,000
这就可以保证

3956
01:46:22,000 --> 01:46:23,000
让你说同一车

3957
01:46:23,000 --> 01:46:25,000
你可以一车运大米

3958
01:46:25,000 --> 01:46:26,000
一车运大粪

3959
01:46:26,000 --> 01:46:29,000
如果你真的愿意这么干

3960
01:46:29,000 --> 01:46:30,000
真的是可以这么做的

3961
01:46:30,000 --> 01:46:30,000
因为

3962
01:46:30,000 --> 01:46:34,000
就是完全不会互相影响

3963
01:46:34,000 --> 01:46:38,000
而且就你内部做的任何的防护处理也好

3964
01:46:38,000 --> 01:46:40,000
包括制冷的那些什么方法也好

3965
01:46:40,000 --> 01:46:43,000
对于运输船或者是卡车

3966
01:46:43,000 --> 01:46:44,000
它都可以做到

3967
01:46:44,000 --> 01:46:47,000
它可以不用知道你内部做了什么处理

3968
01:46:47,000 --> 01:46:48,000
它不用知道这些细节

3969
01:46:48,000 --> 01:46:49,000
对

3970
01:46:49,000 --> 01:46:52,000
它有一个非常好的封装在那边

3971
01:46:52,000 --> 01:46:52,000
对

3972
01:46:52,000 --> 01:46:53,000
所以我们看到还有什么

3973
01:46:53,000 --> 01:46:54,000
就是一个

3974
01:46:54,000 --> 01:46:56,000
一大特性就是 isolation

3975
01:46:56,000 --> 01:46:57,000
对

3976
01:46:57,000 --> 01:46:58,000
就是隔离

3977
01:46:58,000 --> 01:46:59,000
这是一个很重要的一个东西

3978
01:46:59,000 --> 01:47:00,000
然后第二个就是标准化

3979
01:47:00,000 --> 01:47:01,000
叫 standardization

3980
01:47:01,000 --> 01:47:03,000
因为所谓的集装箱都是

3981
01:47:03,000 --> 01:47:04,000
也不叫所有集装箱

3982
01:47:04,000 --> 01:47:06,000
就它有规定的尺寸

3983
01:47:06,000 --> 01:47:07,000
就只有那么几种尺寸

3984
01:47:07,000 --> 01:47:08,000
对

3985
01:47:08,000 --> 01:47:09,000
应该我们记错的话

3986
01:47:09,000 --> 01:47:12,000
应该是短集装箱 20 英寸

3987
01:47:12,000 --> 01:47:13,000
sorry

3988
01:47:13,000 --> 01:47:14,000
20 英尺

3989
01:47:14,000 --> 01:47:16,000
然后 20 英尺的柜的是短柜

3990
01:47:16,000 --> 01:47:18,000
然后 40 英尺的是长柜

3991
01:47:18,000 --> 01:47:20,000
它只有长短的区别

3992
01:47:20,000 --> 01:47:22,000
然后它的那个截面都是一样的

3993
01:47:22,000 --> 01:47:23,000
wait a second

3994
01:47:23,000 --> 01:47:25,000
我们记错的话是宽度

3995
01:47:25,000 --> 01:47:27,000
因为我要说到一本书

3996
01:47:27,000 --> 01:47:29,000
宽度是固定的

3997
01:47:29,000 --> 01:47:31,000
但是高度其实还是有几种标准的

3998
01:47:31,000 --> 01:47:36,000
但只不过目前所见的最常见的一种就是长柜

3999
01:47:36,000 --> 01:47:40,000
应该是高度和宽度几乎一致的一个版本

4000
01:47:40,000 --> 01:47:41,000
其他的就比较小众

4001
01:47:41,000 --> 01:47:43,000
就方盒子

4002
01:47:43,000 --> 01:47:43,000
对

4003
01:47:43,000 --> 01:47:45,000
长条盒

4004
01:47:45,000 --> 01:47:46,000
长条的方盒子

4005
01:47:46,000 --> 01:47:46,000
对

4006
01:47:46,000 --> 01:47:46,000
长条的盒子

4007
01:47:46,000 --> 01:47:50,000
然后你在现在的码头和 60 年代之前的码头

4008
01:47:50,000 --> 01:47:52,000
是完全不一样的

4009
01:47:52,000 --> 01:47:55,000
就现在的码头去码头区就是一大堆行动

4010
01:47:55,000 --> 01:47:59,000
但是 60 年代以前的码头

4011
01:47:59,000 --> 01:47:59,000
全是散货

4012
01:47:59,000 --> 01:48:00,000
对地上

4013
01:48:00,000 --> 01:48:06,000
全都是从轮船通向岸边的桥

4014
01:48:06,000 --> 01:48:07,000
然后有吊车

4015
01:48:07,000 --> 01:48:09,000
然后更重要的是

4016
01:48:09,000 --> 01:48:12,000
那个时候的码头上有非常非常非常多的码头工人

4017
01:48:12,000 --> 01:48:14,000
他们就是

4018
01:48:14,000 --> 01:48:16,000
码头工人叫 Docker

4019
01:48:16,000 --> 01:48:17,000
对 Docker

4020
01:48:17,000 --> 01:48:22,000
然后这些 Docker 他们的最大的任务之一

4021
01:48:22,000 --> 01:48:25,000
就是把散货从船上搬到岸上

4022
01:48:25,000 --> 01:48:26,000
或者从岸上搬到船上

4023
01:48:26,000 --> 01:48:27,000
对

4024
01:48:27,000 --> 01:48:29,000
然后这群码头工人是

4025
01:48:29,000 --> 01:48:31,000
因为他们是纯粹卖苦力的这么一群人

4026
01:48:31,000 --> 01:48:32,000
就薪水又低

4027
01:48:32,000 --> 01:48:32,000
然后

4028
01:48:32,000 --> 01:48:33,000
然后

4029
01:48:33,000 --> 01:48:34,000
经常偷货

4030
01:48:34,000 --> 01:48:35,000
非常差

4031
01:48:35,000 --> 01:48:35,000
对

4032
01:48:35,000 --> 01:48:36,000
然后

4033
01:48:36,000 --> 01:48:37,000
然后又没有什么教养

4034
01:48:37,000 --> 01:48:38,000
经常偷货

4035
01:48:38,000 --> 01:48:38,000
然后

4036
01:48:38,000 --> 01:48:39,000
打架

4037
01:48:39,000 --> 01:48:40,000
对

4038
01:48:40,000 --> 01:48:41,000
他们还会结成帮筷

4039
01:48:41,000 --> 01:48:42,000
帮派之类的

4040
01:48:42,000 --> 01:48:45,000
因为天津以前就是一个码头

4041
01:48:45,000 --> 01:48:47,000
天津有一群非常有名的

4042
01:48:47,000 --> 01:48:48,000
有一个

4043
01:48:48,000 --> 01:48:50,000
应该不是帮派

4044
01:48:50,000 --> 01:48:52,000
是一类人就叫混混

4045
01:48:52,000 --> 01:48:53,000
混混

4046
01:48:53,000 --> 01:48:55,000
他们的发家地之一就是码头

4047
01:48:55,000 --> 01:48:56,000
码头工人

4048
01:48:56,000 --> 01:48:57,000
对

4049
01:48:57,000 --> 01:48:59,000
但是

4050
01:48:59,000 --> 01:49:01,000
在那个

4051
01:49:01,000 --> 01:49:02,000
集装箱出现之后

4052
01:49:02,000 --> 01:49:04,000
这群码头工人就已经消失了

4053
01:49:04,000 --> 01:49:05,000
就

4054
01:49:05,000 --> 01:49:07,000
他们不会需要

4055
01:49:07,000 --> 01:49:08,000
十几年的时间

4056
01:49:08,000 --> 01:49:09,000
就完全淘汰了

4057
01:49:09,000 --> 01:49:10,000
改变

4058
01:49:10,000 --> 01:49:10,000
对

4059
01:49:10,000 --> 01:49:12,000
现在已经很难找到一个人说

4060
01:49:12,000 --> 01:49:13,000
我是在码头扛马包

4061
01:49:13,000 --> 01:49:16,000
这不可能已经行

4062
01:49:16,000 --> 01:49:18,000
可能只有在一些非常遥远的

4063
01:49:18,000 --> 01:49:19,000
小港口

4064
01:49:19,000 --> 01:49:20,000
非常非常小的

4065
01:49:20,000 --> 01:49:21,000
小国家或者是非常

4066
01:49:21,000 --> 01:49:24,000
甚至我们这种第三世纪国家

4067
01:49:24,000 --> 01:49:25,000
中国这种第三世纪国家

4068
01:49:25,000 --> 01:49:27,000
都已经可能不太存在了

4069
01:49:27,000 --> 01:49:28,000
对

4070
01:49:28,000 --> 01:49:29,000
对

4071
01:49:29,000 --> 01:49:30,000
那个时候

4072
01:49:30,000 --> 01:49:34,000
商船水手们可以在港口上岸玩好几天

4073
01:49:34,000 --> 01:49:35,000
因为装货实在是太忙

4074
01:49:35,000 --> 01:49:35,000
对

4075
01:49:35,000 --> 01:49:40,000
现在基本上是你只能你到一个港口抽两根烟

4076
01:49:40,000 --> 01:49:41,000
又得上船走

4077
01:49:41,000 --> 01:49:42,000
换个补给就要走

4078
01:49:42,000 --> 01:49:42,000
卧也就卸完了

4079
01:49:42,000 --> 01:49:43,000
对

4080
01:49:43,000 --> 01:49:43,000
没错

4081
01:49:43,000 --> 01:49:46,000
来说回集装箱的这个东西本身

4082
01:49:46,000 --> 01:49:47,000
就我们看到它的一些属性

4083
01:49:47,000 --> 01:49:48,000
什么样是好的

4084
01:49:48,000 --> 01:49:50,000
刚才讲的一个是就是隔离

4085
01:49:50,000 --> 01:49:51,000
标准化

4086
01:49:51,000 --> 01:49:53,000
它的尺寸是标准化的

4087
01:49:53,000 --> 01:49:54,000
这样的话

4088
01:49:54,000 --> 01:49:54,000
标准化有什么

4089
01:49:54,000 --> 01:49:55,000
隔离什么好处

4090
01:49:55,000 --> 01:49:56,000
就是隔离的话

4091
01:49:56,000 --> 01:49:56,000
可以保证

4092
01:49:56,000 --> 01:49:58,000
集装箱之间互不影响

4093
01:49:58,000 --> 01:49:59,000
这样可以把不同

4094
01:49:59,000 --> 01:50:04,000
内含不同物品的集装箱混合摆放

4095
01:50:04,000 --> 01:50:06,000
之间不会影响

4096
01:50:06,000 --> 01:50:07,000
然后标准化

4097
01:50:07,000 --> 01:50:09,000
有一个好处

4098
01:50:09,000 --> 01:50:10,000
就是说除了我们可以

4099
01:50:10,000 --> 01:50:12,000
能比较简单的摆

4100
01:50:12,000 --> 01:50:13,000
因为大家尺寸都一样

4101
01:50:13,000 --> 01:50:14,000
就是直接是摆

4102
01:50:14,000 --> 01:50:15,000
可能能摆多少摆多少

4103
01:50:15,000 --> 01:50:19,000
然后另外还可以共用搬运的机械

4104
01:50:19,000 --> 01:50:20,000
比如刚才讲我们讲

4105
01:50:20,000 --> 01:50:21,000
装散货的话

4106
01:50:21,000 --> 01:50:22,000
你运煤的那个散货

4107
01:50:22,000 --> 01:50:23,000
你不能用来运大米

4108
01:50:23,000 --> 01:50:26,000
但是如果你用集装箱化的话

4109
01:50:26,000 --> 01:50:28,000
你运煤的机器也可以运来运大米

4110
01:50:28,000 --> 01:50:30,000
因为它都是处理集装箱而已

4111
01:50:30,000 --> 01:50:30,000
对吧

4112
01:50:30,000 --> 01:50:31,000
那叫什么

4113
01:50:31,000 --> 01:50:33,000
龙门钓

4114
01:50:33,000 --> 01:50:33,000
对不对

4115
01:50:33,000 --> 01:50:34,000
叫龙门钓

4116
01:50:34,000 --> 01:50:35,000
叫 Crain

4117
01:50:35,000 --> 01:50:35,000
Crain

4118
01:50:35,000 --> 01:50:36,000
Crain 是鹤

4119
01:50:36,000 --> 01:50:37,000
鹤

4120
01:50:37,000 --> 01:50:39,000
中文算是叫龙门钓

4121
01:50:39,000 --> 01:50:41,000
码头机械

4122
01:50:41,000 --> 01:50:42,000
Crain 和龙门钓

4123
01:50:42,000 --> 01:50:44,000
可能还不是完全一样

4124
01:50:44,000 --> 01:50:45,000
Crain 还是要

4125
01:50:45,000 --> 01:50:47,000
Crain 是一个饭的东西

4126
01:50:47,000 --> 01:50:48,000
对吧

4127
01:50:48,000 --> 01:50:48,000
对

4128
01:50:48,000 --> 01:50:50,000
Crain 还是包括那种

4129
01:50:50,000 --> 01:50:50,000
包括那种

4130
01:50:50,000 --> 01:50:52,000
有一个摇臂出去的东西

4131
01:50:52,000 --> 01:50:54,000
但是龙门钓是专门指

4132
01:50:54,000 --> 01:50:56,000
像龙门一样的东西

4133
01:50:56,000 --> 01:50:57,000
Anyway

4134
01:50:57,000 --> 01:51:00,000
所以这个就是

4135
01:51:00,000 --> 01:51:02,000
集装箱之后就改变了

4136
01:51:02,000 --> 01:51:03,000
这个人类的运输

4137
01:51:03,000 --> 01:51:04,000
然后才使得

4138
01:51:04,000 --> 01:51:05,000
那个什么

4139
01:51:05,000 --> 01:51:07,000
中国的产品能够很快速的

4140
01:51:07,000 --> 01:51:09,000
运到美国去销售

4141
01:51:09,000 --> 01:51:10,000
这样才有了全球化

4142
01:51:10,000 --> 01:51:12,000
这就是为什么

4143
01:51:12,000 --> 01:51:16,000
我们说集装箱是对中国非常重要的一个东西

4144
01:51:16,000 --> 01:51:17,000
因为如果没有集装箱的话

4145
01:51:17,000 --> 01:51:19,000
可能现在不可能有什么

4146
01:51:19,000 --> 01:51:20,000
我们还在被潮的时代

4147
01:51:20,000 --> 01:51:21,000
对

4148
01:51:21,000 --> 01:51:24,000
我们还不是什么中国是世界工厂

4149
01:51:24,000 --> 01:51:25,000
这是根本不可能的

4150
01:51:25,000 --> 01:51:26,000
就那个时候

4151
01:51:26,000 --> 01:51:28,000
在如果没有集装箱的话

4152
01:51:28,000 --> 01:51:28,000
可能

4153
01:51:28,000 --> 01:51:30,000
别说从中国运到美国了

4154
01:51:30,000 --> 01:51:31,000
从

4155
01:51:31,000 --> 01:51:33,000
可能从江苏运到山东

4156
01:51:33,000 --> 01:51:35,000
都是非常非常不划算的

4157
01:51:35,000 --> 01:51:36,000
对

4158
01:51:36,000 --> 01:51:39,000
说了这么久

4159
01:51:39,000 --> 01:51:39,000
集装箱了

4160
01:51:39,000 --> 01:51:41,000
其实我们还是要说一个

4161
01:51:41,000 --> 01:51:42,000
就是在软件世界里面

4162
01:51:42,000 --> 01:51:44,000
集装箱是一个什么样的概念

4163
01:51:44,000 --> 01:51:45,000
稍微等一下

4164
01:51:45,000 --> 01:51:47,000
我最后提一件事情

4165
01:51:47,000 --> 01:51:50,000
就是如果刚才我们说的这段话

4166
01:51:50,000 --> 01:51:52,000
对你没有产生太多的困扰

4167
01:51:52,000 --> 01:51:53,000
反而让你觉得挺有意思的话

4168
01:51:53,000 --> 01:51:54,000
你可以去看一本书

4169
01:51:54,000 --> 01:51:56,000
叫做集装箱改变世界

4170
01:51:56,000 --> 01:51:59,000
你听标题就这么

4171
01:51:59,000 --> 01:52:00,000
没错

4172
01:52:00,000 --> 01:52:03,000
它是应该也是易住吧

4173
01:52:03,000 --> 01:52:04,000
但是我多的是中文吧

4174
01:52:04,000 --> 01:52:05,000
我相信这本书还是能买得到

4175
01:52:05,000 --> 01:52:07,000
然后我回头会把这本书的

4176
01:52:07,000 --> 01:52:09,000
链接加到我们的 shownote 里面

4177
01:52:09,000 --> 01:52:10,000
OK

4178
01:52:10,000 --> 01:52:11,000
OK

4179
01:52:11,000 --> 01:52:12,000
那我们现在来说

4180
01:52:12,000 --> 01:52:14,000
这个软件世界里面集装箱

4181
01:52:14,000 --> 01:52:17,000
传统上我们部署的一个

4182
01:52:17,000 --> 01:52:18,000
一个软件的时候

4183
01:52:18,000 --> 01:52:20,000
其实你那个服务器上面

4184
01:52:20,000 --> 01:52:21,000
是一个开放的东西

4185
01:52:21,000 --> 01:52:21,000
它是一个

4186
01:52:21,000 --> 01:52:22,000
它是个装带机嘛

4187
01:52:22,000 --> 01:52:24,000
你把那个东西上进去

4188
01:52:24,000 --> 01:52:27,000
这个过程就有点像装散货

4189
01:52:27,000 --> 01:52:29,000
就是他们互相之间是有点影响的

4190
01:52:29,000 --> 01:52:30,000
而且他们

4191
01:52:30,000 --> 01:52:31,000
怎么说呢

4192
01:52:31,000 --> 01:52:32,000
比如说你在服务器上

4193
01:52:32,000 --> 01:52:34,000
要装一个数据库

4194
01:52:34,000 --> 01:52:35,000
然后再装一个什么

4195
01:52:35,000 --> 01:52:36,000
你自己的软件

4196
01:52:36,000 --> 01:52:38,000
然后搞不止不定

4197
01:52:38,000 --> 01:52:39,000
数据库依赖的什么东西

4198
01:52:39,000 --> 01:52:41,000
和你的软件就冲突了

4199
01:52:41,000 --> 01:52:42,000
你还得想办法解决它

4200
01:52:42,000 --> 01:52:43,000
对吧

4201
01:52:43,000 --> 01:52:45,000
它并不是一个完全隔离的东西

4202
01:52:45,000 --> 01:52:47,000
包括不同的应用之间

4203
01:52:47,000 --> 01:52:47,000
可能互相会

4204
01:52:47,000 --> 01:52:50,000
对可能会共享某一个文件

4205
01:52:50,000 --> 01:52:52,000
或者说这个数据库觉得

4206
01:52:52,000 --> 01:52:53,000
这个程序会觉得

4207
01:52:53,000 --> 01:52:54,000
我要改那个文件

4208
01:52:54,000 --> 01:52:55,000
那个程序会觉得

4209
01:52:55,000 --> 01:52:57,000
你怎么改了我那个文件

4210
01:52:57,000 --> 01:52:57,000
对吧

4211
01:52:57,000 --> 01:52:59,000
这个东西是可能会出现的一个问题

4212
01:52:59,000 --> 01:53:02,000
然后他们对这个资源的这个

4213
01:53:02,000 --> 01:53:06,000
不叫他们的这个安装方式也是一个非标准化的

4214
01:53:06,000 --> 01:53:09,000
就是说你安装数据库的方法和你安装一个什么

4215
01:53:09,000 --> 01:53:12,000
tomicat 的方法可能并不一样

4216
01:53:12,000 --> 01:53:12,000
对

4217
01:53:12,000 --> 01:53:14,000
就回到了我们上一期讲的内容

4218
01:53:14,000 --> 01:53:20,000
就是可能两个软件所需要的包管理系统是完全不一样

4219
01:53:20,000 --> 01:53:22,000
就会出现这种不一致的一个状况

4220
01:53:22,000 --> 01:53:26,000
所以如果我们能够把刚才讲的集装箱那几个概念

4221
01:53:26,000 --> 01:53:30,000
拿起来拿过来用到这个软件部署里面

4222
01:53:30,000 --> 01:53:32,000
是不是就会情况好很多呢

4223
01:53:32,000 --> 01:53:35,000
我们能不能说装个软件就好像

4224
01:53:35,000 --> 01:53:37,000
怎么讲呢

4225
01:53:37,000 --> 01:53:40,000
就你直接就把它那个文件传上去就好了

4226
01:53:40,000 --> 01:53:41,000
或者只是同一个命令就好了

4227
01:53:41,000 --> 01:53:43,000
它互相之间绝对不会干扰

4228
01:53:43,000 --> 01:53:43,000
对

4229
01:53:43,000 --> 01:53:47,000
就之前的思潮可能是说这一船货

4230
01:53:47,000 --> 01:53:51,000
就是如果说一台积层机是一艘船的话

4231
01:53:51,000 --> 01:53:54,000
那么可能说这艘船上装了一群猪

4232
01:53:54,000 --> 01:53:55,000
然后装了一坨米

4233
01:53:55,000 --> 01:54:00,000
然后之前的思潮可能是把仓石里面的这一块画给猪

4234
01:54:00,000 --> 01:54:01,000
然后另一部分画给米

4235
01:54:01,000 --> 01:54:03,000
但是此时就有一个问题

4236
01:54:03,000 --> 01:54:05,000
就是他们两个有可能是互相影响的

4237
01:54:05,000 --> 01:54:07,000
就万一猪圈翻了

4238
01:54:07,000 --> 01:54:09,000
然后猪跑出来把米拱了

4239
01:54:09,000 --> 01:54:12,000
那你说你是救猪呢还是救米

4240
01:54:12,000 --> 01:54:15,000
但是 contentization 就有一点

4241
01:54:15,000 --> 01:54:18,000
就有一点的

4242
01:54:18,000 --> 01:54:21,000
其实这类比不是特别的合适

4243
01:54:21,000 --> 01:54:22,000
因为真正的 contentization

4244
01:54:22,000 --> 01:54:25,000
其实是把猪和米分别装到两条船

4245
01:54:25,000 --> 01:54:26,000
不对

4246
01:54:26,000 --> 01:54:28,000
是装到两个盒子里面

4247
01:54:28,000 --> 01:54:33,000
但这两个盒子在 contentization 的世界

4248
01:54:33,000 --> 01:54:36,000
就是如果是 proper 像 Docker 这样的 contentization

4249
01:54:36,000 --> 01:54:39,000
他们两个其实是跑在两个不同的虚拟机上

4250
01:54:39,000 --> 01:54:41,000
他们是他们现在不存在

4251
01:54:41,000 --> 01:54:44,000
他们是在同一个虚拟机

4252
01:54:44,000 --> 01:54:44,000
同一个机器里面

4253
01:54:44,000 --> 01:54:47,000
但是只是在不同的子区域里面

4254
01:54:47,000 --> 01:54:48,000
啊 OK

4255
01:54:48,000 --> 01:54:49,000
对

4256
01:54:49,000 --> 01:54:50,000
好吧

4257
01:54:50,000 --> 01:54:52,000
就是说

4258
01:54:52,000 --> 01:54:56,000
然后我们还想如果能够所有软件都不要去说

4259
01:54:56,000 --> 01:54:59,000
我那个数据库要用什么 apt 来装

4260
01:54:59,000 --> 01:55:02,000
然后你自己的应用程序要用一个自己的方法来装

4261
01:55:02,000 --> 01:55:03,000
不要搞这些麻烦的方法

4262
01:55:03,000 --> 01:55:05,000
不要搞三十二种不同的安装方式

4263
01:55:05,000 --> 01:55:06,000
对吧

4264
01:55:06,000 --> 01:55:10,000
那我们所有的方式都用同一种方式安装过去

4265
01:55:10,000 --> 01:55:11,000
这样不就更好吗

4266
01:55:11,000 --> 01:55:11,000
对吧

4267
01:55:11,000 --> 01:55:12,000
对

4268
01:55:12,000 --> 01:55:14,000
所以最先实践这种想法的

4269
01:55:14,000 --> 01:55:17,000
其实也有叫做虚拟机这个概念

4270
01:55:17,000 --> 01:55:17,000
对吧

4271
01:55:17,000 --> 01:55:22,000
虚拟机里面然后有一个叫做 virtual appliance

4272
01:55:22,000 --> 01:55:23,000
这么一个概念

4273
01:55:23,000 --> 01:55:23,000
我不知道

4274
01:55:23,000 --> 01:55:25,000
大家用 virtual box

4275
01:55:25,000 --> 01:55:27,000
应该可能看到有这么一个 import appliance

4276
01:55:27,000 --> 01:55:28,000
这么一个东西

4277
01:55:28,000 --> 01:55:29,000
什么意思呢

4278
01:55:29,000 --> 01:55:32,000
就是说我们部署软件的单位

4279
01:55:32,000 --> 01:55:34,000
不再是某一个软件

4280
01:55:34,000 --> 01:55:35,000
某一个应用

4281
01:55:35,000 --> 01:55:36,000
某一个应用为单位了

4282
01:55:36,000 --> 01:55:40,000
而是说我们整个把这个应用所需要的所有环境

4283
01:55:40,000 --> 01:55:41,000
包括它的操作系统

4284
01:55:41,000 --> 01:55:43,000
包括它所依赖的文件

4285
01:55:43,000 --> 01:55:44,000
包括它的依赖的数据

4286
01:55:44,000 --> 01:55:49,000
还有它的什么各种各样

4287
01:55:49,000 --> 01:55:50,000
它需要依赖的环境

4288
01:55:50,000 --> 01:55:52,000
打包成一个虚拟机

4289
01:55:52,000 --> 01:55:56,000
然后再部署到某一个实体的物理的服务器上去运行

4290
01:55:56,000 --> 01:55:58,000
这个在很长的时间里面

4291
01:55:58,000 --> 01:55:59,000
大家都是这么

4292
01:55:59,000 --> 01:56:02,000
就什么像亚马逊的 EC 2

4293
01:56:02,000 --> 01:56:04,000
就这种方式来做的

4294
01:56:04,000 --> 01:56:08,000
就是说我把我的应用都打包成一个完整的虚拟机

4295
01:56:08,000 --> 01:56:11,000
然后我需要用的时候

4296
01:56:11,000 --> 01:56:12,000
我就开一个虚拟机

4297
01:56:12,000 --> 01:56:13,000
让它跑起来就好了

4298
01:56:13,000 --> 01:56:15,000
然后我也不去改虚拟机里面的内容

4299
01:56:15,000 --> 01:56:16,000
就是只让它运行就好了

4300
01:56:16,000 --> 01:56:18,000
然后如果我不需要

4301
01:56:18,000 --> 01:56:20,000
我就把这个虚拟机关上

4302
01:56:20,000 --> 01:56:20,000
对吧

4303
01:56:20,000 --> 01:56:21,000
对

4304
01:56:21,000 --> 01:56:23,000
这个就实现了我们刚才讲的那个什么标准化

4305
01:56:23,000 --> 01:56:24,000
因为所有的都是

4306
01:56:24,000 --> 01:56:25,000
不管你里面装什么

4307
01:56:25,000 --> 01:56:28,000
就是你开发者只要负责建好这个虚拟机

4308
01:56:28,000 --> 01:56:29,000
我运行为的时候

4309
01:56:29,000 --> 01:56:31,000
我只负责开关这个虚拟机就好了

4310
01:56:31,000 --> 01:56:32,000
然后如果某一个虚拟机坏了

4311
01:56:32,000 --> 01:56:34,000
我就把它关掉

4312
01:56:34,000 --> 01:56:35,000
然后在另外开个新的

4313
01:56:35,000 --> 01:56:38,000
就实现了这个标准化和这个隔离

4314
01:56:38,000 --> 01:56:39,000
这个确实是好的

4315
01:56:39,000 --> 01:56:42,000
也在相当长的时间内

4316
01:56:42,000 --> 01:56:44,000
我们都知道很多这个厂商

4317
01:56:44,000 --> 01:56:45,000
甚至到现在都是主流吧

4318
01:56:45,000 --> 01:56:46,000
对

4319
01:56:46,000 --> 01:56:47,000
就是到目前为止

4320
01:56:47,000 --> 01:56:48,000
它还是一个

4321
01:56:48,000 --> 01:56:50,000
起码有半壁江山这么一个状态

4322
01:56:50,000 --> 01:56:52,000
但是虚拟机有一个什么问题呢

4323
01:56:52,000 --> 01:56:55,000
就是它的那个资源损耗是比较高的

4324
01:56:55,000 --> 01:56:56,000
因为你想象一样的虚拟机的话

4325
01:56:56,000 --> 01:56:57,000
你其实要

4326
01:56:57,000 --> 01:56:58,000
首先你要虚拟一个操作系统

4327
01:56:58,000 --> 01:56:59,000
对吧

4328
01:56:59,000 --> 01:57:00,000
对

4329
01:57:00,000 --> 01:57:01,000
那我们可以看虚拟一个操作系统

4330
01:57:01,000 --> 01:57:02,000
你要至少

4331
01:57:02,000 --> 01:57:04,000
哪怕你最精简的一个 Linux 的

4332
01:57:04,000 --> 01:57:05,000
也不叫最精简

4333
01:57:05,000 --> 01:57:07,000
就是一个正常的一个 Linux 的发行版

4334
01:57:07,000 --> 01:57:08,000
你运行起来

4335
01:57:08,000 --> 01:57:11,000
可能都需要占掉个几百

4336
01:57:11,000 --> 01:57:12,000
两三百兆的内存

4337
01:57:12,000 --> 01:57:14,000
就是这个内存的 overhead

4338
01:57:14,000 --> 01:57:16,000
可以再小一点

4339
01:57:16,000 --> 01:57:16,000
对

4340
01:57:16,000 --> 01:57:18,000
至少是在一两百

4341
01:57:18,000 --> 01:57:19,000
两三百这个范围内

4342
01:57:19,000 --> 01:57:21,000
然后磁盘空间

4343
01:57:21,000 --> 01:57:22,000
你可能每个虚拟机

4344
01:57:22,000 --> 01:57:23,000
至少装完那个系统

4345
01:57:23,000 --> 01:57:25,000
都是至少是一两个机了

4346
01:57:25,000 --> 01:57:26,000
然后再装你的应用

4347
01:57:26,000 --> 01:57:27,000
又是一堆空间在那里

4348
01:57:27,000 --> 01:57:28,000
对

4349
01:57:28,000 --> 01:57:30,000
然后这个虚拟机运行的时候

4350
01:57:30,000 --> 01:57:31,000
因为它是

4351
01:57:31,000 --> 01:57:34,000
在之前没有这个硬件虚拟的

4352
01:57:34,000 --> 01:57:35,000
就是没有那个

4353
01:57:35,000 --> 01:57:37,000
这个硬件支持的情况下

4354
01:57:37,000 --> 01:57:38,000
虚拟机的运行效率还会打折

4355
01:57:38,000 --> 01:57:39,000
对吧

4356
01:57:39,000 --> 01:57:40,000
因为你虚拟机要

4357
01:57:40,000 --> 01:57:43,000
代码是在一个虚拟的环节里面运行的

4358
01:57:43,000 --> 01:57:44,000
还要再转化成那个

4359
01:57:44,000 --> 01:57:47,000
真实的在硬件上运行的代码

4360
01:57:47,000 --> 01:57:48,000
还要是因为一层转化

4361
01:57:48,000 --> 01:57:50,000
但后来有这个芯片

4362
01:57:50,000 --> 01:57:52,000
那个 CPU 级别的虚拟化支持

4363
01:57:52,000 --> 01:57:54,000
这个情况会好很多

4364
01:57:54,000 --> 01:57:56,000
但是并不是完全是一个无碍的

4365
01:57:56,000 --> 01:57:58,000
特别是在面对 IO

4366
01:57:58,000 --> 01:58:00,000
内存读写这一块的时候

4367
01:58:00,000 --> 01:58:01,000
还是有一个比较大的瓶颈

4368
01:58:01,000 --> 01:58:02,000
就是

4369
01:58:02,000 --> 01:58:02,000
对

4370
01:58:02,000 --> 01:58:03,000
它只是解决了计算

4371
01:58:03,000 --> 01:58:05,000
计算能力的方面的问题

4372
01:58:05,000 --> 01:58:06,000
但没有解决 IO 方面

4373
01:58:06,000 --> 01:58:07,000
对

4374
01:58:07,000 --> 01:58:08,000
损耗还是很大的

4375
01:58:08,000 --> 01:58:10,000
就是应该有一个比较

4376
01:58:10,000 --> 01:58:12,000
怎么说

4377
01:58:12,000 --> 01:58:13,000
一个默认的数字吧

4378
01:58:13,000 --> 01:58:15,000
就是可能是 1%到 20

4379
01:58:15,000 --> 01:58:16,000
这么一个损耗

4380
01:58:16,000 --> 01:58:17,000
就是性能上的损耗

4381
01:58:17,000 --> 01:58:21,000
就然后这个虚拟机的在启动的时候也比较慢

4382
01:58:21,000 --> 01:58:22,000
比如说你开一个虚拟机

4383
01:58:22,000 --> 01:58:23,000
你只要等它们

4384
01:58:23,000 --> 01:58:25,000
超过系统完全 boot 一遍

4385
01:58:25,000 --> 01:58:28,000
至少你最快也得个二三十秒吧

4386
01:58:28,000 --> 01:58:28,000
我会

4387
01:58:28,000 --> 01:58:30,000
我们看到一般的一个发行版

4388
01:58:30,000 --> 01:58:31,000
对

4389
01:58:31,000 --> 01:58:34,000
所以就有人在想说

4390
01:58:34,000 --> 01:58:37,000
那我们能不能够再保留虚拟机那些好处

4391
01:58:37,000 --> 01:58:38,000
比如说隔离

4392
01:58:38,000 --> 01:58:39,000
然后标准化

4393
01:58:39,000 --> 01:58:40,000
这些好处

4394
01:58:40,000 --> 01:58:41,000
同时解决它的问题

4395
01:58:41,000 --> 01:58:44,000
就是能够让它更加快速的启动

4396
01:58:44,000 --> 01:58:47,000
然后就不再说几十秒

4397
01:58:47,000 --> 01:58:48,000
我们能不能做到说几十毫秒

4398
01:58:48,000 --> 01:58:50,000
或者几把毫秒的级别的启动

4399
01:58:50,000 --> 01:58:51,000
或者是杀掉它

4400
01:58:51,000 --> 01:58:56,000
然后我们同时能够不去浪费那么多的资源

4401
01:58:56,000 --> 01:58:57,000
在虚拟机本身上面

4402
01:58:57,000 --> 01:58:59,000
而是把资源集中到这个应用上面去跑

4403
01:58:59,000 --> 01:59:03,000
于是就有 container 这个概念

4404
01:59:03,000 --> 01:59:04,000
就是就横空出世了

4405
01:59:04,000 --> 01:59:06,000
终于说到它

4406
01:59:06,000 --> 01:59:08,000
终于说到 container

4407
01:59:08,000 --> 01:59:09,000
就是集装箱这个概念

4408
01:59:09,000 --> 01:59:10,000
对

4409
01:59:10,000 --> 01:59:17,000
然后这个趋势也被一些人称为所谓 Docker Apocalypse

4410
01:59:17,000 --> 01:59:23,000
就是它是一种灾难性的

4411
01:59:23,000 --> 01:59:28,000
在某些传统主义者的人看来这是某种灾难性的变革

4412
01:59:28,000 --> 01:59:37,000
就是程序和跑和它所运行的环境之间的隔离变得越来越

4413
01:59:37,000 --> 01:59:44,000
越来越来越就是有些人是不喜欢这样多出来的这一层的隔离和抽象的

4414
01:59:44,000 --> 01:59:51,000
但是目前看来这个趋势的确是带来的优势

4415
01:59:51,000 --> 02:00:01,000
它的优势要远远远大于它所损失的那一点就是你们不能在和一个比较 native 的环境所互通而带来的便利的

4416
02:00:01,000 --> 02:00:10,000
那接着说这个 Docker 最开始的时候是 Linux 有一个内核的一些功能叫做 Cgroups

4417
02:00:10,000 --> 02:00:12,000
Ctrl Groups 吧

4418
02:00:12,000 --> 02:00:13,000
Ctrl Groups 没错

4419
02:00:13,000 --> 02:00:15,000
对它能做些什么事呢

4420
02:00:15,000 --> 02:00:23,000
就它可以让你在一个 Linux 的系统上面去划分出一群进程

4421
02:00:23,000 --> 02:00:24,000
然后让它们

4422
02:00:24,000 --> 02:00:27,000
不叫划分出一群进程

4423
02:00:27,000 --> 02:00:30,000
应该是做一个这么一个容器

4424
02:00:30,000 --> 02:00:31,000
就刚才讲的 container 吧

4425
02:00:31,000 --> 02:00:35,000
然后你可以限制这个容器它能够使用的资源的比率

4426
02:00:35,000 --> 02:00:37,000
然后你可以限制

4427
02:00:37,000 --> 02:00:39,000
你可以让容器之间互相隔离

4428
02:00:39,000 --> 02:00:43,000
Cgroups 好像一开始就叫什么 process container 之类的一个名字

4429
02:00:43,000 --> 02:00:46,000
但后来才改成 control groups

4430
02:00:46,000 --> 02:00:49,000
对因为有一个什么命名上的冲突

4431
02:00:49,000 --> 02:00:50,000
我后来忘了

4432
02:00:50,000 --> 02:00:52,000
OK

4433
02:00:52,000 --> 02:00:56,000
我觉得有可能是那个时候觉得 container 这个词指的太

4434
02:00:56,000 --> 02:00:58,000
就指位太不明了

4435
02:00:58,000 --> 02:01:00,000
太不明确了

4436
02:01:00,000 --> 02:01:01,000
所以才改成 control group

4437
02:01:01,000 --> 02:01:06,000
因为在 Linux 世界里面好像 group 这个概念更容易理解一些

4438
02:01:06,000 --> 02:01:12,000
就之前就说有这么一个内核的一个支持吧

4439
02:01:12,000 --> 02:01:16,000
你可以划分出这个资源的这个限制

4440
02:01:16,000 --> 02:01:17,000
互相之间他们是不可以

4441
02:01:17,000 --> 02:01:19,000
比如说不可以访问的

4442
02:01:19,000 --> 02:01:20,000
然后可以限制它

4443
02:01:20,000 --> 02:01:23,000
只能使用多少比例的这个 CPU

4444
02:01:23,000 --> 02:01:24,000
多少比例的内存这样

4445
02:01:24,000 --> 02:01:28,000
这样就可以在很大程度上实现说

4446
02:01:28,000 --> 02:01:32,000
我们运行的时候互相不干扰

4447
02:01:32,000 --> 02:01:34,000
对甚至都不知道别人的存在

4448
02:01:34,000 --> 02:01:35,000
对甚至不知道对方的存在

4449
02:01:35,000 --> 02:01:36,000
就是对于我来说

4450
02:01:36,000 --> 02:01:39,000
我以为我这个程序认为

4451
02:01:39,000 --> 02:01:42,000
我是在这台机上运行的唯一的程序

4452
02:01:42,000 --> 02:01:43,000
但其实不是

4453
02:01:43,000 --> 02:01:45,000
但你也用的不是虚拟机的方法

4454
02:01:45,000 --> 02:01:47,000
这样的话就有个好处

4455
02:01:47,000 --> 02:01:49,000
就是说它没有虚拟机那些损耗

4456
02:01:49,000 --> 02:01:51,000
比如没有这个转化那一层

4457
02:01:51,000 --> 02:01:52,000
因为所有东西都是还是在

4458
02:01:52,000 --> 02:01:54,000
直接在这个硬件上运行的

4459
02:01:54,000 --> 02:01:55,000
对

4460
02:01:55,000 --> 02:01:58,000
但是还有一个要解决的问题

4461
02:01:58,000 --> 02:01:59,000
就是说那磁盘怎么办

4462
02:01:59,000 --> 02:02:00,000
就是还有一个文件系统

4463
02:02:00,000 --> 02:02:01,000
对吧

4464
02:02:01,000 --> 02:02:02,000
然后 Cgroup

4465
02:02:02,000 --> 02:02:04,000
它还有一个问题

4466
02:02:04,000 --> 02:02:06,000
就是还能够划分不同的文件

4467
02:02:06,000 --> 02:02:11,000
就是说让不同的进程看到的自己的那个文件的目录数

4468
02:02:11,000 --> 02:02:12,000
是独立的

4469
02:02:12,000 --> 02:02:13,000
分分格的

4470
02:02:13,000 --> 02:02:17,000
这样的话就可以让互相之间

4471
02:02:17,000 --> 02:02:21,000
比如说我同样要读取什么 ETC 下面的一个配置文件的时候

4472
02:02:21,000 --> 02:02:23,000
大家可以读到不同的版本

4473
02:02:23,000 --> 02:02:26,000
或者修改的时候互相不冲突

4474
02:02:26,000 --> 02:02:26,000
对

4475
02:02:26,000 --> 02:02:27,000
其实就是一个

4476
02:02:27,000 --> 02:02:30,000
对操作系统级别的虚拟机

4477
02:02:30,000 --> 02:02:31,000
但它又不是

4478
02:02:31,000 --> 02:02:34,000
它不是重量级的虚拟机

4479
02:02:34,000 --> 02:02:34,000
对

4480
02:02:34,000 --> 02:02:37,000
它提供了虚拟机的功能

4481
02:02:37,000 --> 02:02:38,000
但是它并不是一个虚拟机

4482
02:02:38,000 --> 02:02:39,000
对

4483
02:02:39,000 --> 02:02:41,000
就是一个超轻量级的一个虚拟机

4484
02:02:41,000 --> 02:02:42,000
一个虚拟技术

4485
02:02:42,000 --> 02:02:43,000
可以这么说

4486
02:02:43,000 --> 02:02:44,000
然后 Control Group

4487
02:02:44,000 --> 02:02:45,000
它能够启动那些

4488
02:02:45,000 --> 02:02:47,000
启动这个隔离也非常快

4489
02:02:47,000 --> 02:02:48,000
它就是什么

4490
02:02:48,000 --> 02:02:49,000
几十毫秒级别

4491
02:02:49,000 --> 02:02:50,000
毫秒级别

4492
02:02:50,000 --> 02:02:51,000
就可以建立出

4493
02:02:51,000 --> 02:02:53,000
新建一个 Control Group

4494
02:02:53,000 --> 02:02:54,000
可以在几十毫秒级别

4495
02:02:54,000 --> 02:02:56,000
毫秒这个量级上

4496
02:02:56,000 --> 02:02:56,000
把它

4497
02:02:56,000 --> 02:02:57,000
把它杀掉

4498
02:02:57,000 --> 02:02:58,000
就基本上认为

4499
02:02:58,000 --> 02:03:00,000
它是一个就是基石的一个过程

4500
02:03:00,000 --> 02:03:02,000
而不是像那个虚拟机

4501
02:03:02,000 --> 02:03:04,000
你还要等它启动

4502
02:03:04,000 --> 02:03:05,000
然后等它这个退出

4503
02:03:05,000 --> 02:03:07,000
要等那个几十秒的

4504
02:03:07,000 --> 02:03:09,000
就是一个数量级的提升

4505
02:03:09,000 --> 02:03:10,000
两三个数量级的提升了

4506
02:03:10,000 --> 02:03:11,000
没错

4507
02:03:11,000 --> 02:03:14,000
然后有的这么一个基础

4508
02:03:14,000 --> 02:03:16,000
技术之后呢

4509
02:03:16,000 --> 02:03:17,000
就后来有一个公司

4510
02:03:17,000 --> 02:03:19,000
叫做 Docker

4511
02:03:19,000 --> 02:03:20,000
出了一个

4512
02:03:20,000 --> 02:03:23,000
基于 C Groups 的一个技术

4513
02:03:23,000 --> 02:03:25,000
就叫做 Docker

4514
02:03:25,000 --> 02:03:26,000
对

4515
02:03:26,000 --> 02:03:27,000
Docker 就是刚才我们讲的

4516
02:03:27,000 --> 02:03:28,000
码头工人嘛

4517
02:03:28,000 --> 02:03:29,000
就是负责

4518
02:03:29,000 --> 02:03:34,000
负责搬运货物的一个东西

4519
02:03:34,000 --> 02:03:36,000
但虽然 Docker 已经绝种了

4520
02:03:36,000 --> 02:03:37,000
现在这个工程已经绝种了

4521
02:03:37,000 --> 02:03:39,000
但是他把这个名字借过来了

4522
02:03:39,000 --> 02:03:40,000
他说我们是要

4523
02:03:40,000 --> 02:03:41,000
当然他的

4524
02:03:41,000 --> 02:03:42,000
他的 Logo 不是一个

4525
02:03:42,000 --> 02:03:43,000
正在扛马爆的马轮工人

4526
02:03:43,000 --> 02:03:44,000
而是一个

4527
02:03:44,000 --> 02:03:46,000
运着集装箱的金鱼

4528
02:03:46,000 --> 02:03:46,000
对

4529
02:03:46,000 --> 02:03:47,000
承载着一群

4530
02:03:47,000 --> 02:03:49,000
一堆集装箱的一个金鱼

4531
02:03:49,000 --> 02:03:50,000
这还蛮可爱的

4532
02:03:50,000 --> 02:03:50,000
对

4533
02:03:50,000 --> 02:03:53,000
就他是把

4534
02:03:53,000 --> 02:03:54,000
因为 Control Group

4535
02:03:54,000 --> 02:03:57,000
它是一个内核的一些 API

4536
02:03:57,000 --> 02:03:58,000
所以他你要有一个什么

4537
02:03:58,000 --> 02:03:59,000
叫什么

4538
02:03:59,000 --> 02:04:02,000
用户可以直接要操作它的一个界面

4539
02:04:02,000 --> 02:04:03,000
直干手的的时候

4540
02:04:03,000 --> 02:04:04,000
Linux 是支持一个

4541
02:04:04,000 --> 02:04:05,000
LXC 的一个东西

4542
02:04:05,000 --> 02:04:07,000
但是那个也不是非常友好

4543
02:04:07,000 --> 02:04:08,000
也不是非常好用

4544
02:04:08,000 --> 02:04:10,000
然后 Docker 就说

4545
02:04:10,000 --> 02:04:11,000
那我们提供一个

4546
02:04:11,000 --> 02:04:14,000
更加好用完善的工具

4547
02:04:14,000 --> 02:04:17,000
Docker 目前有图形界面

4548
02:04:17,000 --> 02:04:18,000
应该也是用

4549
02:04:18,000 --> 02:04:21,000
命令行界面的东西来讲

4550
02:04:21,000 --> 02:04:21,000
对

4551
02:04:21,000 --> 02:04:22,000
它用起来有点像 Git

4552
02:04:22,000 --> 02:04:24,000
对

4553
02:04:24,000 --> 02:04:26,000
有点类似感觉吧

4554
02:04:26,000 --> 02:04:26,000
对

4555
02:04:26,000 --> 02:04:29,000
然后

4556
02:04:29,000 --> 02:04:31,000
它是一个什么东西呢

4557
02:04:31,000 --> 02:04:32,000
就是它就是利用这个

4558
02:04:32,000 --> 02:04:33,000
Control Group

4559
02:04:33,000 --> 02:04:34,000
这些内核的一些特性

4560
02:04:34,000 --> 02:04:36,000
然后让你能够快速的

4561
02:04:36,000 --> 02:04:38,000
清建出一个一个的

4562
02:04:38,000 --> 02:04:38,000
所谓的 container

4563
02:04:38,000 --> 02:04:39,000
一个一个集装箱

4564
02:04:39,000 --> 02:04:40,000
然后每个集装箱

4565
02:04:40,000 --> 02:04:41,000
可以做些什么事

4566
02:04:41,000 --> 02:04:43,000
就是说你集装箱里面包含

4567
02:04:43,000 --> 02:04:44,000
他们推荐的方式

4568
02:04:44,000 --> 02:04:45,000
就一个集装箱里面

4569
02:04:45,000 --> 02:04:48,000
只包含一个主要的软件

4570
02:04:48,000 --> 02:04:49,000
对

4571
02:04:49,000 --> 02:04:50,000
你就运行一个数据库

4572
02:04:50,000 --> 02:04:51,000
就运行一个数据库

4573
02:04:51,000 --> 02:04:52,000
不要搞一些别的东西

4574
02:04:52,000 --> 02:04:54,000
然后运行一个程序

4575
02:04:54,000 --> 02:04:54,000
一个应用

4576
02:04:54,000 --> 02:04:55,000
就是单独的一个应用

4577
02:04:55,000 --> 02:04:56,000
不要塞五个应用

4578
02:04:56,000 --> 02:04:57,000
在一个 container 里面

4579
02:04:57,000 --> 02:04:58,000
这样不方便管理

4580
02:04:58,000 --> 02:05:00,000
有了这些集装箱之后

4581
02:05:00,000 --> 02:05:02,000
它 Docker 提供了

4582
02:05:02,000 --> 02:05:03,000
这么一套工具

4583
02:05:03,000 --> 02:05:05,000
能够标准化的去安装它

4584
02:05:05,000 --> 02:05:07,000
然后可以标准化的去部署它

4585
02:05:07,000 --> 02:05:08,000
这样就可以实现

4586
02:05:08,000 --> 02:05:10,000
container 那些所有的好处

4587
02:05:10,000 --> 02:05:12,000
然后也可以避免

4588
02:05:12,000 --> 02:05:13,000
虚拟机的那些

4589
02:05:13,000 --> 02:05:14,000
资源损换高的问题

4590
02:05:14,000 --> 02:05:15,000
没错

4591
02:05:15,000 --> 02:05:18,000
而且它还大幅度的

4592
02:05:18,000 --> 02:05:22,000
简化了一个软件部署者

4593
02:05:22,000 --> 02:05:23,000
也就是或者说

4594
02:05:23,000 --> 02:05:24,000
我们刚才说的

4595
02:05:24,000 --> 02:05:26,000
这个 DevOps 的工作量

4596
02:05:26,000 --> 02:05:29,000
就是之前我们会觉得

4597
02:05:29,000 --> 02:05:32,000
用 Chef 好像已经相当简便了

4598
02:05:32,000 --> 02:05:34,000
用 Chef 或者 Puppet

4599
02:05:34,000 --> 02:05:36,000
来描述整个的部署过程

4600
02:05:36,000 --> 02:05:37,000
已经相当简便了

4601
02:05:37,000 --> 02:05:40,000
但是使用 Docker 的时候

4602
02:05:40,000 --> 02:05:41,000
你会觉得原来整个过程

4603
02:05:41,000 --> 02:05:42,000
还可以更加抽象

4604
02:05:42,000 --> 02:05:43,000
更加简便一点

4605
02:05:43,000 --> 02:05:44,000
嗯哼

4606
02:05:44,000 --> 02:05:46,000
就是之前你还需要去操心

4607
02:05:46,000 --> 02:05:51,000
你从哪里获得一个操作系统

4608
02:05:51,000 --> 02:05:52,000
你还要去操心

4609
02:05:52,000 --> 02:05:53,000
因为 Puppet

4610
02:05:53,000 --> 02:05:57,000
毕竟还是要运行在一个特定的操作系统之上的

4611
02:05:57,000 --> 02:05:57,000
对

4612
02:05:57,000 --> 02:05:59,000
但是 Docker 也需要

4613
02:05:59,000 --> 02:06:03,000
但 Puppet 所关心的抽象

4614
02:06:03,000 --> 02:06:06,000
是在操作系统级别以下

4615
02:06:06,000 --> 02:06:07,000
可是从 Docker 开始

4616
02:06:07,000 --> 02:06:10,000
这个抽象就已经包含操作系统本身在内了

4617
02:06:10,000 --> 02:06:15,000
这是一个非常了不起的一个封装层级

4618
02:06:15,000 --> 02:06:15,000
对

4619
02:06:15,000 --> 02:06:16,000
而且就怎么说

4620
02:06:16,000 --> 02:06:19,000
就是说如果用 Docker 这种方式来部署的话

4621
02:06:19,000 --> 02:06:22,000
开发者和运运运者做的事情

4622
02:06:22,000 --> 02:06:22,000
其实是非常

4623
02:06:22,000 --> 02:06:25,000
叫什么用的工具是类

4624
02:06:25,000 --> 02:06:26,000
是同样的工具了

4625
02:06:26,000 --> 02:06:27,000
因为在过去的话

4626
02:06:27,000 --> 02:06:29,000
开发者其实并不

4627
02:06:29,000 --> 02:06:32,000
开发的过程中至少是并不需要用到 Puppet 也好

4628
02:06:32,000 --> 02:06:34,000
还有刚才讲 Chef 那套那东西

4629
02:06:34,000 --> 02:06:34,000
对吗

4630
02:06:34,000 --> 02:06:36,000
因为那个只是部署说才用到的

4631
02:06:36,000 --> 02:06:38,000
但是如果你用 Docker 来做这个开发的话

4632
02:06:38,000 --> 02:06:40,000
其实你发现你在开发的时候

4633
02:06:40,000 --> 02:06:43,000
就已经是在 Docker 里面去做开发

4634
02:06:43,000 --> 02:06:45,000
你可以一上来就说我要一个什么样的 Docker

4635
02:06:45,000 --> 02:06:46,000
然后

4636
02:06:46,000 --> 02:06:48,000
里面在配置那个 Docker

4637
02:06:48,000 --> 02:06:48,000
那个 container

4638
02:06:48,000 --> 02:06:49,000
上来我就说

4639
02:06:49,000 --> 02:06:53,000
我就知道了这个东西最终会跑在一个什么样的环境里面

4640
02:06:53,000 --> 02:06:56,000
然后你在开发的时候

4641
02:06:56,000 --> 02:06:58,000
去怎么去构建那个 container 的环境

4642
02:06:58,000 --> 02:07:02,000
或者你怎么去构建你的那个软件最终运行的环境

4643
02:07:02,000 --> 02:07:05,000
也就正是你在最后部署的时候

4644
02:07:05,000 --> 02:07:08,000
运运的时候要用的同样的环境

4645
02:07:08,000 --> 02:07:09,000
就是你用的是同样一套工具

4646
02:07:09,000 --> 02:07:11,000
同样一套命令去执行这个东西

4647
02:07:11,000 --> 02:07:13,000
这样的话就有什么好处呢

4648
02:07:13,000 --> 02:07:18,000
运运的时候你只需要拿到开发好的这个 Docker 的 container

4649
02:07:18,000 --> 02:07:21,000
然后直接把它部署到这个物理的机器上去就好了

4650
02:07:21,000 --> 02:07:24,000
并不需要做任何特别多的额外的操作

4651
02:07:24,000 --> 02:07:27,000
但额外的操作就可能在这个目标的机器上

4652
02:07:27,000 --> 02:07:28,000
装上这个 Docker 本身

4653
02:07:28,000 --> 02:07:29,000
对

4654
02:07:29,000 --> 02:07:33,000
换言之从 Docker 之后

4655
02:07:33,000 --> 02:07:36,000
整个软件的开发过程就变成了 Dev

4656
02:07:36,000 --> 02:07:39,000
在 container 里面开发一个东西

4657
02:07:39,000 --> 02:07:41,000
然后 Ops 接过 container

4658
02:07:41,000 --> 02:07:45,000
然后把它放在一个真正的运行环境上

4659
02:07:45,000 --> 02:07:51,000
然后整个过程中你会发现 DevOps 好像因此而变得非常简单

4660
02:07:51,000 --> 02:07:51,000
对

4661
02:07:51,000 --> 02:07:54,000
Docker 另外一个重要的贡献

4662
02:07:54,000 --> 02:07:58,000
就是说它把这个文件系统虚拟化做得比较好

4663
02:07:58,000 --> 02:08:01,000
就是说我们过去比如说刚才讲那个虚拟机需要

4664
02:08:01,000 --> 02:08:02,000
如果你开五个虚拟机

4665
02:08:02,000 --> 02:08:03,000
那你还要见五个虚拟机的镜像

4666
02:08:03,000 --> 02:08:06,000
那么他们每个镜像都要占用

4667
02:08:06,000 --> 02:08:08,000
那个系统要占用一定的空间

4668
02:08:08,000 --> 02:08:10,000
然后应用它占用一定的空间

4669
02:08:10,000 --> 02:08:10,000
对吧

4670
02:08:10,000 --> 02:08:13,000
Docker 说那首先我们不需要虚拟每一个操作系统了

4671
02:08:13,000 --> 02:08:15,000
我们这条就省掉了

4672
02:08:15,000 --> 02:08:18,000
然后第二个就说我们这个文件系统是一个很

4673
02:08:18,000 --> 02:08:20,000
就是什么 copy on write 的系统

4674
02:08:20,000 --> 02:08:24,000
就说我如果我在文件系统上做一个改进的话

4675
02:08:24,000 --> 02:08:26,000
我只需要记录它修改那一部分

4676
02:08:26,000 --> 02:08:27,000
然后如果其他的共享的部分

4677
02:08:27,000 --> 02:08:31,000
就可以可以共享到这个磁盘空间嘛

4678
02:08:31,000 --> 02:08:37,000
这样的话我哪怕我开 10 个 100 个这个 Docker 的 container 的同时运行的时候

4679
02:08:37,000 --> 02:08:40,000
我并不需要真的浪费 100 份的磁盘空间

4680
02:08:40,000 --> 02:08:41,000
对

4681
02:08:41,000 --> 02:08:44,000
这个是非常了不得的一个一个贡献吧

4682
02:08:44,000 --> 02:08:45,000
没错

4683
02:08:45,000 --> 02:08:49,000
可以看到 Docker 这个工具是非常强大的一个东西

4684
02:08:49,000 --> 02:08:51,000
但是 Docker 本身还是要跑在一个系统上面的嘛

4685
02:08:51,000 --> 02:08:56,000
在武邦就这个 14.04 开始它就官方已经有支持了

4686
02:08:56,000 --> 02:08:59,000
然后这个你只要在那个 APG 里面安装一下

4687
02:08:59,000 --> 02:09:02,000
那个武邦的那个主机就可以变成一个 Docker 主机

4688
02:09:02,000 --> 02:09:05,000
然后你再可以在里面运行一些 Docker 的 container 就好了

4689
02:09:05,000 --> 02:09:10,000
对或者说就你就可以在这台机器上将你自己的 application

4690
02:09:10,000 --> 02:09:11,000
Dockerize

4691
02:09:11,000 --> 02:09:14,000
对让它跑在一个容器里面

4692
02:09:14,000 --> 02:09:16,000
这套界面还是挺容易用的

4693
02:09:16,000 --> 02:09:20,000
而且我或者想想有一个优点就是你可以保留一个

4694
02:09:20,000 --> 02:09:24,000
保留某一个开发版本的一个 image

4695
02:09:24,000 --> 02:09:26,000
就是对

4696
02:09:26,000 --> 02:09:27,000
好像是这样的吧

4697
02:09:27,000 --> 02:09:30,000
就是你可以在里面运行一个程序

4698
02:09:30,000 --> 02:09:32,000
然后把它存成一个 image

4699
02:09:32,000 --> 02:09:34,000
然后你每次打开这个 image 的时候

4700
02:09:34,000 --> 02:09:37,000
你会得到这个程序在那个时候的运行时刻

4701
02:09:37,000 --> 02:09:41,000
在那个时候的部署状态

4702
02:09:41,000 --> 02:09:41,000
对

4703
02:09:41,000 --> 02:09:45,000
它等于又成了某一种很特别的版本控制系统

4704
02:09:45,000 --> 02:09:49,000
它所控制的是一个软件的运行状态的版本

4705
02:09:49,000 --> 02:09:54,000
或者说是把整个操作系统的状态进行的一个版本控制吧

4706
02:09:54,000 --> 02:09:54,000
对

4707
02:09:54,000 --> 02:10:00,000
有一点像那个 VMware 里面的 VirtuBox 里面的 Snapshot

4708
02:10:00,000 --> 02:10:00,000
Snapshot 对

4709
02:10:00,000 --> 02:10:03,000
但是它比那个 Snapshot 比较轻量极很多

4710
02:10:03,000 --> 02:10:04,000
而且快嘛

4711
02:10:04,000 --> 02:10:05,000
没错

4712
02:10:05,000 --> 02:10:09,000
但是还有人觉得这样还是太麻烦了

4713
02:10:09,000 --> 02:10:12,000
那个就是所谓 Docker 的这个什么宿主机啊

4714
02:10:12,000 --> 02:10:13,000
就是太复杂了

4715
02:10:13,000 --> 02:10:16,000
有很多人在做一些新的尝试

4716
02:10:16,000 --> 02:10:17,000
比如说最

4717
02:10:17,000 --> 02:10:21,000
可能大家听的比较多的是一个叫做 CoreOS 的这么一个尝试

4718
02:10:21,000 --> 02:10:24,000
就是它是一个精简版的 Linux 系统

4719
02:10:25,000 --> 02:10:25,000
然后它的

4720
02:10:25,000 --> 02:10:27,000
然后它也是基于 Cgroups 的

4721
02:10:27,000 --> 02:10:29,000
对

4722
02:10:29,000 --> 02:10:30,000
它最开始是

4723
02:10:30,000 --> 02:10:31,000
它现在还是就目前为止

4724
02:10:31,000 --> 02:10:32,000
它还是基于 Docker

4725
02:10:32,000 --> 02:10:33,000
就是说

4726
02:10:33,000 --> 02:10:36,000
它就是给你提供一个精简版的 Docker 的运行环境

4727
02:10:36,000 --> 02:10:37,000
然后你直接在里面去

4728
02:10:37,000 --> 02:10:41,000
就是它的这个 CoreOS 本身是非常精简的东西

4729
02:10:41,000 --> 02:10:42,000
里面并没有很多东西

4730
02:10:42,000 --> 02:10:47,000
然后你所有的应用的部署都是在 CoreOS 里面跑一个 Docker

4731
02:10:47,000 --> 02:10:50,000
然后在 Docker 里面再建各种的这个虚拟机去跑

4732
02:10:50,000 --> 02:10:52,000
那个 Contender 去跑

4733
02:10:52,000 --> 02:10:54,000
当然他们最近也在搞一个

4734
02:10:54,000 --> 02:10:55,000
因为他们跟 Docker

4735
02:10:55,000 --> 02:10:58,000
因为 Docker 背后还有一个公司叫 Docker Incorporated

4736
02:10:58,000 --> 02:11:00,000
他们之间有一些利益的冲突

4737
02:11:00,000 --> 02:11:01,000
他们不是一家的

4738
02:11:01,000 --> 02:11:02,000
这是

4739
02:11:02,000 --> 02:11:04,000
或者说他们的设计哲学有点不一样

4740
02:11:04,000 --> 02:11:05,000
对

4741
02:11:05,000 --> 02:11:07,000
他们这个设计理念有点不一样

4742
02:11:07,000 --> 02:11:10,000
然后商业的这个利益有点冲突嘛

4743
02:11:10,000 --> 02:11:14,000
所以他们最近在搞一个所谓的 Docker 的一个分支嘛

4744
02:11:14,000 --> 02:11:14,000
一个 Fork

4745
02:11:14,000 --> 02:11:17,000
去把一些标准化的东西定下来

4746
02:11:17,000 --> 02:11:19,000
但是这个我们就不去纠结那些细节了

4747
02:11:19,000 --> 02:11:26,000
其实说穿的就是原教族主义和和这个什么商业利益之间的冲突

4748
02:11:26,000 --> 02:11:27,000
对对

4749
02:11:27,000 --> 02:11:30,000
然后 Ubuntu 他们也没有闲着

4750
02:11:30,000 --> 02:11:33,000
他们前一段时间也发布了一个叫做 Ubuntu Core

4751
02:11:33,000 --> 02:11:36,000
这么一个新的 Ubuntu 的发行版

4752
02:11:36,000 --> 02:11:38,000
这个也比较好玩的一点

4753
02:11:38,000 --> 02:11:44,000
就是说他连这个母系统本身都变成一个 Docker 的

4754
02:11:44,000 --> 02:11:47,000
Docker 化的一个东西了吧

4755
02:11:47,000 --> 02:11:47,000
你可以这么想

4756
02:11:47,000 --> 02:11:48,000
What

4757
02:11:48,000 --> 02:11:52,000
就是因为宿主机的系统里面

4758
02:11:52,000 --> 02:11:53,000
他还是可以有一些状态要改的嘛

4759
02:11:53,000 --> 02:11:54,000
然后他的升级啊

4760
02:11:54,000 --> 02:11:57,000
这些还是不是非常稳健的

4761
02:11:57,000 --> 02:11:58,000
但是刚才我们讲

4762
02:11:58,000 --> 02:12:00,000
利用那种 image 的这种版本控制的一种方式

4763
02:12:00,000 --> 02:12:06,000
他可以做到连这个宿主机的升级和这个维护都变成一个非常确定化的东西

4764
02:12:06,000 --> 02:12:09,000
就是如果中途失败可以是可以回滚的

4765
02:12:09,000 --> 02:12:15,000
然后就变成就变成这个就是用 Docker 来控制 Docker 宿主机了

4766
02:12:15,000 --> 02:12:16,000
你可以大概是这个意思

4767
02:12:16,000 --> 02:12:17,000
OK

4768
02:12:17,000 --> 02:12:18,000
有意思

4769
02:12:18,000 --> 02:12:20,000
对就比较好

4770
02:12:20,000 --> 02:12:22,000
但是整个来说呢

4771
02:12:22,000 --> 02:12:26,000
对 Docker 现在还是比较一个新兴的技术吧

4772
02:12:26,000 --> 02:12:28,000
就是说你如果要用到生产中

4773
02:12:28,000 --> 02:12:32,000
可能还是要先实践一下也有不少的坑

4774
02:12:32,000 --> 02:12:35,000
因为 Docker 本身是一个还在不断玩笑中的系统

4775
02:12:35,000 --> 02:12:40,000
对可能就是因为这些坑就是刚才说到的这个所谓 Docker Apocalypse

4776
02:12:40,000 --> 02:12:42,000
所以也指的就是这些

4777
02:12:42,000 --> 02:12:45,000
就是有些人对于对此之怀疑太多的会觉得

4778
02:12:45,000 --> 02:12:47,000
因为这个东西还不成熟

4779
02:12:47,000 --> 02:12:51,000
就是哪怕我们两个我们两个觉得这是一个化时代的伟大发明

4780
02:12:51,000 --> 02:12:56,000
也不可能拍着胸部说这个东西肯定会在时间之后成为绝对的主流

4781
02:12:56,000 --> 02:13:00,000
对但我觉得趋势还是要再往那个方向走

4782
02:13:00,000 --> 02:13:02,000
对因为就像集装箱一样

4783
02:13:02,000 --> 02:13:05,000
很难想象将来没有这种便利的话

4784
02:13:05,000 --> 02:13:10,000
还能有什么更好的方式来管理

4785
02:13:10,000 --> 02:13:15,000
来让每个人都可以更加低门槛的成为 DevOps

4786
02:13:15,000 --> 02:13:16,000
对

4787
02:13:16,000 --> 02:13:18,000
可能这是最好的一种方法

4788
02:13:18,000 --> 02:13:18,000
对

4789
02:13:18,000 --> 02:13:21,000
所以如果你作为一个开发者

4790
02:13:21,000 --> 02:13:23,000
然后你想成为 DevOps

4791
02:13:23,000 --> 02:13:25,000
你想去揭触一下 Docker 这东西呢

4792
02:13:25,000 --> 02:13:26,000
就也有很多方法可以尝试

4793
02:13:26,000 --> 02:13:30,000
比如说你自己在电脑上装一个免费的这个 Virtualbox

4794
02:13:30,000 --> 02:13:32,000
然后你再装一个这个 Docker

4795
02:13:32,000 --> 02:13:34,000
或者装一个 Ubuntu 也好

4796
02:13:34,000 --> 02:13:37,000
然后在这里面装 Docker 或者装个 COS 也可以

4797
02:13:37,000 --> 02:13:38,000
当然也有个

4798
02:13:38,000 --> 02:13:40,000
如果你是在 Mac 上面的话

4799
02:13:40,000 --> 02:13:42,000
有一个我们有一个更简单的方式

4800
02:13:42,000 --> 02:13:48,000
就是 Docker 这个社区提供了一个叫做 Boot to Docker 的这么一个极度精简版的

4801
02:13:48,000 --> 02:13:49,000
Linux 系统

4802
02:13:49,000 --> 02:13:52,000
然后你可以里面他做的唯一件事情就是让你跑 Docker

4803
02:13:52,000 --> 02:13:58,000
然后我给这个系统这个这个 Boot to Docker 这个工具做了一个命令行的小工具

4804
02:13:58,000 --> 02:14:06,000
各位现在正在听这个我们的 Rio 同学在 Brag 他写的一个

4805
02:14:06,000 --> 02:14:07,000
自我推广

4806
02:14:07,000 --> 02:14:11,000
一个用 Docker 的小命令行工具叫做

4807
02:14:11,000 --> 02:14:12,000
叫什么

4808
02:14:12,000 --> 02:14:14,000
Boot to Docker Client

4809
02:14:14,000 --> 02:14:14,000
对对对

4810
02:14:14,000 --> 02:14:17,000
Boot R Docker-CLI

4811
02:14:17,000 --> 02:14:21,000
对然后你可以在那个 HomeBrew 里面装 Mac 上面的

4812
02:14:21,000 --> 02:14:23,000
因为这个主要是给 Mac 用户开发的

4813
02:14:23,000 --> 02:14:25,000
因为那个 Docker 不能原生运行

4814
02:14:25,000 --> 02:14:27,000
只能原生运行在 Linux 上面上嘛

4815
02:14:27,000 --> 02:14:28,000
对

4816
02:14:28,000 --> 02:14:30,000
所以你肯定是需要一个虚拟机的才能在 Mac 上面跑的

4817
02:14:30,000 --> 02:14:32,000
然后这个工具呢可以干嘛呢

4818
02:14:32,000 --> 02:14:36,000
可以帮你一键式的去完成

4819
02:14:36,000 --> 02:14:38,000
只要你装上那个 Virtual Box 之后

4820
02:14:38,000 --> 02:14:40,000
它可以一键式的帮你装好这个 Boot to Docker 东西

4821
02:14:40,000 --> 02:14:46,000
然后可以让你很方便的去操纵这个虚拟机的里面的一些概念吧

4822
02:14:46,000 --> 02:14:52,000
然后之后你可以用 Docker 去跟这个用 Boot to Docker 装好的一个

4823
02:14:52,000 --> 02:14:53,000
好说哦

4824
02:14:53,000 --> 02:14:56,000
用 Boot to Docker 装好的一个 Docker 输入机

4825
02:14:56,000 --> 02:15:00,000
可以去玩嘛

4826
02:15:00,000 --> 02:15:02,000
就可以去学习里面的东西

4827
02:15:02,000 --> 02:15:03,000
好累

4828
02:15:03,000 --> 02:15:07,000
对大概就这个意思

4829
02:15:07,000 --> 02:15:09,000
可以去学习

4830
02:15:09,000 --> 02:15:15,000
然后现在我们要在节目的最后要扯一点玄学

4831
02:15:15,000 --> 02:15:17,000
对就是扯一些有的没的

4832
02:15:17,000 --> 02:15:19,000
可能不干不湿

4833
02:15:19,000 --> 02:15:21,000
可能还是偏湿的一些东西吧

4834
02:15:21,000 --> 02:15:22,000
对

4835
02:15:22,000 --> 02:15:24,000
就是其实我们刚才讲那么多东西啊

4836
02:15:24,000 --> 02:15:27,000
就是我们为什么要这么多工具去做这些东西

4837
02:15:27,000 --> 02:15:29,000
其实要解决什么问题

4838
02:15:29,000 --> 02:15:34,000
就是如果我们把那个一个一台服务器作为一个状态机的话

4839
02:15:34,000 --> 02:15:36,000
其实我们就是可以看到那些工具的一个

4840
02:15:36,000 --> 02:15:42,000
一个发展方向就是把这个状态机尽量变得无状态

4841
02:15:42,000 --> 02:15:42,000
嗯

4842
02:15:42,000 --> 02:15:44,000
状态机不可能无状态

4843
02:15:44,000 --> 02:15:50,000
而我觉得可能正确的说法应该是让状态机的状态变化

4844
02:15:50,000 --> 02:15:52,000
是可预测的吗

4845
02:15:52,000 --> 02:15:52,000
是可

4846
02:15:52,000 --> 02:15:53,000
嗯

4847
02:15:53,000 --> 02:15:55,000
这么说可能也不是特别

4848
02:15:55,000 --> 02:15:56,000
精确

4849
02:15:56,000 --> 02:15:58,000
我们当时想要表达什么意思

4850
02:15:58,000 --> 02:16:00,000
就是服务器是一大堆状态机

4851
02:16:00,000 --> 02:16:01,000
嗯

4852
02:16:01,000 --> 02:16:01,000
就是

4853
02:16:01,000 --> 02:16:03,000
状态机是一个

4854
02:16:03,000 --> 02:16:04,000
算了

4855
02:16:04,000 --> 02:16:05,000
我不解释什么状态机了

4856
02:16:05,000 --> 02:16:08,000
就是如果把服务器视为状态机的话

4857
02:16:08,000 --> 02:16:10,000
那么我们的终极理想就是

4858
02:16:10,000 --> 02:16:13,000
我不用去操心状态机

4859
02:16:13,000 --> 02:16:18,000
从状态 A 变到状态 B 的过程

4860
02:16:18,000 --> 02:16:20,000
究竟需要做哪些事情

4861
02:16:20,000 --> 02:16:23,000
我只操心让它从状态 A 变到状态 B

4862
02:16:23,000 --> 02:16:25,000
可控

4863
02:16:25,000 --> 02:16:27,000
有反应

4864
02:16:27,000 --> 02:16:31,000
并且可以同时在很多很多机器上运行

4865
02:16:31,000 --> 02:16:31,000
对

4866
02:16:31,000 --> 02:16:35,000
就是说我们希望能够有成百上千的

4867
02:16:35,000 --> 02:16:38,000
我们不用一个通过很 imperative

4868
02:16:38,000 --> 02:16:40,000
很命令式的方式去指定

4869
02:16:40,000 --> 02:16:42,000
它怎么切换状态的状态机

4870
02:16:42,000 --> 02:16:45,000
我只用告诉它说进入 A 状态

4871
02:16:45,000 --> 02:16:47,000
然后他们就全部进入了 A 状态了

4872
02:16:47,000 --> 02:16:47,000
对

4873
02:16:47,000 --> 02:16:49,000
这就有点像那个

4874
02:16:49,000 --> 02:16:52,000
Displacement Mini 里面的 Minion 一样

4875
02:16:52,000 --> 02:16:54,000
我们理想状态是

4876
02:16:54,000 --> 02:16:57,000
不是告诉每一个单独的 Minion

4877
02:16:57,000 --> 02:16:58,000
Kevin 你去拿那个

4878
02:16:58,000 --> 02:17:01,000
然后 Mike 你去拿那个

4879
02:17:01,000 --> 02:17:03,000
然后拿两个不同的工具

4880
02:17:03,000 --> 02:17:06,000
把缩小射线枪偷出来

4881
02:17:06,000 --> 02:17:07,000
我只需要下一个命令

4882
02:17:07,000 --> 02:17:09,000
你们去把缩小射线枪给我偷出来

4883
02:17:09,000 --> 02:17:11,000
至于怎么完成的我不管

4884
02:17:11,000 --> 02:17:14,000
这是我们想要达到的终极目标

4885
02:17:14,000 --> 02:17:16,000
说出来其实还是懒嘛

4886
02:17:16,000 --> 02:17:17,000
我觉得我们这

4887
02:17:17,000 --> 02:17:21,000
我们这一期讲的这个 Docker

4888
02:17:21,000 --> 02:17:25,000
其实也是第三层的所谓的 Lifecycle Management

4889
02:17:25,000 --> 02:17:27,000
就是 Server as a State Machine

4890
02:17:27,000 --> 02:17:29,000
As a Service

4891
02:17:29,000 --> 02:17:31,000
我们要管理他们的 Lifecycle

4892
02:17:31,000 --> 02:17:38,000
然后所有这一切都希望能够尽可能的自动化

4893
02:17:38,000 --> 02:17:40,000
尽可能的无痛的实现

4894
02:17:40,000 --> 02:17:42,000
所以最归根结底其实还是因为懒

4895
02:17:42,000 --> 02:17:47,000
或者说叫做削减复杂度嘛

4896
02:17:47,000 --> 02:17:49,000
就是说如果你要关注每一台机器

4897
02:17:49,000 --> 02:17:50,000
它具体的状态怎么样

4898
02:17:50,000 --> 02:17:52,000
然后每台机器状态还不一样

4899
02:17:52,000 --> 02:17:53,000
你手工一个一个解决的话

4900
02:17:53,000 --> 02:17:55,000
这个就太复杂了嘛

4901
02:17:55,000 --> 02:17:57,000
那我们想的方法就是说

4902
02:17:57,000 --> 02:17:59,000
能够通过这种把它

4903
02:17:59,000 --> 02:18:02,000
就首先是一个描述性的语言

4904
02:18:02,000 --> 02:18:03,000
去指定它的状态

4905
02:18:03,000 --> 02:18:05,000
然后用工具去实现说

4906
02:18:05,000 --> 02:18:08,000
我不管你是什么状态

4907
02:18:08,000 --> 02:18:09,000
你就变成这样的状态就好了

4908
02:18:09,000 --> 02:18:10,000
对

4909
02:18:10,000 --> 02:18:13,000
来做到把这个事情尽量变得简化一点

4910
02:18:13,000 --> 02:18:16,000
然后就简化的目标是什么呢

4911
02:18:16,000 --> 02:18:17,000
就是说我们还是说能够希望

4912
02:18:17,000 --> 02:18:19,000
很快速方便的

4913
02:18:19,000 --> 02:18:22,000
能够去伸缩我们这个计算资源

4914
02:18:22,000 --> 02:18:26,000
然后去应对随时变化的工作负担

4915
02:18:26,000 --> 02:18:27,000
工作负荷嘛

4916
02:18:27,000 --> 02:18:27,000
没错

4917
02:18:27,000 --> 02:18:32,000
所以然后我们让状态机变得

4918
02:18:32,000 --> 02:18:35,000
所谓不是 stateless

4919
02:18:35,000 --> 02:18:38,000
但是是某种意义上的

4920
02:18:38,000 --> 02:18:42,000
在我们的最终用户的视角看来

4921
02:18:42,000 --> 02:18:44,000
是处于 stateless 的状态的

4922
02:18:44,000 --> 02:18:49,000
这样一种思潮

4923
02:18:49,000 --> 02:18:50,000
或者说这样一种哲学

4924
02:18:50,000 --> 02:18:53,000
其理念和 functional programming

4925
02:18:53,000 --> 02:18:55,000
其实是相通的

4926
02:18:55,000 --> 02:18:55,000
对

4927
02:18:55,000 --> 02:18:57,000
就说我们如果我们把每一个

4928
02:18:57,000 --> 02:19:00,000
因为我们为什么要弄那么多服务器

4929
02:19:00,000 --> 02:19:00,000
跑起来

4930
02:19:00,000 --> 02:19:02,000
就是因为它要完成一个功能

4931
02:19:02,000 --> 02:19:03,000
那所谓完成功能就是说

4932
02:19:03,000 --> 02:19:05,000
它服务器接受一个输入用户的请求

4933
02:19:05,000 --> 02:19:06,000
对吧

4934
02:19:06,000 --> 02:19:07,000
然后它要完成一个输出

4935
02:19:07,000 --> 02:19:09,000
就是产生用户的这个返回

4936
02:19:09,000 --> 02:19:10,000
给用户的结果

4937
02:19:10,000 --> 02:19:13,000
就我们是希望每一个这个

4938
02:19:13,000 --> 02:19:15,000
这个我们叫做服务器也好

4939
02:19:15,000 --> 02:19:17,000
还是叫做 container 也好

4940
02:19:17,000 --> 02:19:18,000
我们希望它的这个输入输出

4941
02:19:18,000 --> 02:19:22,000
是能够就是无状态的

4942
02:19:22,000 --> 02:19:23,000
就是说我们只要有同样的

4943
02:19:23,000 --> 02:19:24,000
另外一个 container

4944
02:19:24,000 --> 02:19:26,000
或者同样的另外一个服务器

4945
02:19:26,000 --> 02:19:27,000
我给它同样的输出

4946
02:19:27,000 --> 02:19:28,000
它能够产生同样的输出

4947
02:19:28,000 --> 02:19:29,000
对

4948
02:19:29,000 --> 02:19:30,000
没有副作用

4949
02:19:30,000 --> 02:19:30,000
对

4950
02:19:30,000 --> 02:19:31,000
然后这样

4951
02:19:31,000 --> 02:19:32,000
没有副作用的话

4952
02:19:32,000 --> 02:19:34,000
就可以让我们很方便的去管理它们

4953
02:19:34,000 --> 02:19:35,000
也可以

4954
02:19:35,000 --> 02:19:36,000
调配资源

4955
02:19:36,000 --> 02:19:37,000
调度资源

4956
02:19:37,000 --> 02:19:38,000
对

4957
02:19:38,000 --> 02:19:39,000
我们就可以像

4958
02:19:39,000 --> 02:19:41,000
把整个服务器

4959
02:19:41,000 --> 02:19:44,000
像一个函数一样组建起来

4960
02:19:44,000 --> 02:19:46,000
然后每次扔进去

4961
02:19:46,000 --> 02:19:50,000
我们想我们知道会得到什么样输出的输入就可以了

4962
02:19:50,000 --> 02:19:53,000
而不是像在命令室编程那样

4963
02:19:53,000 --> 02:19:56,000
还要去操心此时的整个程序处理什么状态

4964
02:19:56,000 --> 02:19:56,000
对

4965
02:19:56,000 --> 02:20:00,000
这个我们是不是忘了提 NixOS

4966
02:20:00,000 --> 02:20:03,000
NixOS 它的最终目标不就是要达到这个效果

4967
02:20:03,000 --> 02:20:04,000
对

4968
02:20:04,000 --> 02:20:06,000
这个其实应该要讲的

4969
02:20:06,000 --> 02:20:09,000
不过因为我自己也没有用过就是在关注这个东西

4970
02:20:09,000 --> 02:20:14,000
就是没有太多的实际的这个应用的场景

4971
02:20:14,000 --> 02:20:16,000
而且它那个本身也不太成熟

4972
02:20:16,000 --> 02:20:18,000
还是在一个开发

4973
02:20:18,000 --> 02:20:21,000
它还是一个比较相比较先锋式的

4974
02:20:21,000 --> 02:20:27,000
比较比较比较更加纯粹的这么一个朝着 stateless 的

4975
02:20:27,000 --> 02:20:31,000
管理工具的一个一个尝试

4976
02:20:31,000 --> 02:20:32,000
对

4977
02:20:32,000 --> 02:20:36,000
Docker 这种思路就是说我们不改变目前的操作系统

4978
02:20:36,000 --> 02:20:38,000
就是你现在 Docker 里面的发动还是一个

4979
02:20:38,000 --> 02:20:41,000
就是我们所谓的这个常规的一个操作系统

4980
02:20:41,000 --> 02:20:43,000
就是它里面还是有那些状态的

4981
02:20:43,000 --> 02:20:45,000
但就是说我们只是说因为我们用一个

4982
02:20:45,000 --> 02:20:47,000
皈依化的方式去生成它

4983
02:20:47,000 --> 02:20:49,000
然后我们就是

4984
02:20:49,000 --> 02:20:50,000
Hopefully

4985
02:20:50,000 --> 02:20:54,000
就是我们希望我们通过皈依化的方式去生成它

4986
02:20:54,000 --> 02:20:57,000
得到的结果是一个大家都一样的结果

4987
02:20:57,000 --> 02:20:59,000
但是并不能保证它运行一段时间之后

4988
02:20:59,000 --> 02:21:02,000
它每个个同样就同样方式生成的

4989
02:21:02,000 --> 02:21:05,000
这个 container 它不会出现所谓 diverge

4990
02:21:05,000 --> 02:21:07,000
就是出现分野

4991
02:21:07,000 --> 02:21:09,000
就是说这个运行的一段时间变成这个状态

4992
02:21:09,000 --> 02:21:12,000
然后那个运行的时间变成另一个状态

4993
02:21:12,000 --> 02:21:12,000
没错

4994
02:21:12,000 --> 02:21:16,000
但是像那个 Nix 这种东西的话

4995
02:21:16,000 --> 02:21:18,000
其实它又想做又更进一步的

4996
02:21:18,000 --> 02:21:20,000
它我们我们只要把这个操作系统变成

4997
02:21:20,000 --> 02:21:23,000
本身变成是一个 stateless 的东西

4998
02:21:23,000 --> 02:21:28,000
就是它的其实是更加一个更激进的一个方法

4999
02:21:28,000 --> 02:21:28,000
我觉得

5000
02:21:28,000 --> 02:21:29,000
对

5001
02:21:29,000 --> 02:21:30,000
但是通常来说呢

5002
02:21:30,000 --> 02:21:32,000
这种更加激进的方法

5003
02:21:32,000 --> 02:21:35,000
一般都是不会成功的

5004
02:21:35,000 --> 02:21:39,000
就是对软件工程来讲

5005
02:21:39,000 --> 02:21:41,000
我觉得这个向后兼容

5006
02:21:41,000 --> 02:21:43,000
还有这个所谓的这个规模优势

5007
02:21:43,000 --> 02:21:46,000
还是有点有点用途吧

5008
02:21:46,000 --> 02:21:47,000
就是说 Nix 那个

5009
02:21:47,000 --> 02:21:49,000
它其实更加类似于 Brandu Core 那种

5010
02:21:49,000 --> 02:21:54,000
比较极端的一种方式去改变我们的这个部署的环境

5011
02:21:54,000 --> 02:21:58,000
但愿是吧

5012
02:21:58,000 --> 02:22:02,000
但我还是希望它能够做起来

5013
02:22:02,000 --> 02:22:04,000
我应该说但愿不是吧

5014
02:22:04,000 --> 02:22:06,000
我觉得在服务端

5015
02:22:06,000 --> 02:22:11,000
其实人们接受变革的阻力

5016
02:22:11,000 --> 02:22:13,000
还是要比在其他领域少一些

5017
02:22:13,000 --> 02:22:15,000
因为在服务端其实

5018
02:22:15,000 --> 02:22:19,000
首先人们对产品没有太多感情

5019
02:22:19,000 --> 02:22:20,000
不像

5020
02:22:20,000 --> 02:22:22,000
就没有用户习惯在你

5021
02:22:22,000 --> 02:22:24,000
对我们不会说我是果粉

5022
02:22:24,000 --> 02:22:26,000
或者说我有苹果的使用习惯

5023
02:22:26,000 --> 02:22:27,000
在

5024
02:22:27,000 --> 02:22:29,000
我们都是一堆见风使多的人

5025
02:22:29,000 --> 02:22:31,000
对我们在

5026
02:22:31,000 --> 02:22:33,000
看见摸得着的

5027
02:22:33,000 --> 02:22:36,000
这种消费点的产品领域

5028
02:22:36,000 --> 02:22:38,000
会有这样的教派的存在

5029
02:22:38,000 --> 02:22:39,000
就是你我都是

5030
02:22:39,000 --> 02:22:40,000
我不知道你是不是

5031
02:22:40,000 --> 02:22:41,000
但我是一个

5032
02:22:41,000 --> 02:22:43,000
苹果教徒

5033
02:22:43,000 --> 02:22:46,000
但在服务端可能不会有这样的

5034
02:22:46,000 --> 02:22:47,000
会更加理性一些

5035
02:22:47,000 --> 02:22:49,000
对会更加利益趋势

5036
02:22:49,000 --> 02:22:50,000
或者 lazy driven 一点

5037
02:22:50,000 --> 02:22:51,000
对对

5038
02:22:51,000 --> 02:22:52,000
就是什么好我用什么

5039
02:22:52,000 --> 02:22:53,000
我不会去

5040
02:22:53,000 --> 02:22:57,000
而且在服务端有好处就是

5041
02:22:57,000 --> 02:22:58,000
好是有一个明确的标准的

5042
02:22:58,000 --> 02:23:02,000
如果我用这个比你一块二简单

5043
02:23:02,000 --> 02:23:02,000
那它就是好

5044
02:23:02,000 --> 02:23:03,000
对吧

5045
02:23:03,000 --> 02:23:06,000
但是在我们可能

5046
02:23:06,000 --> 02:23:08,000
消费级别的就有一些看不着

5047
02:23:08,000 --> 02:23:09,000
中端电子用户会有一些

5048
02:23:09,000 --> 02:23:11,000
非常难以理解的非理性的因素在

5049
02:23:11,000 --> 02:23:13,000
对有感性的因素在里面

5050
02:23:13,000 --> 02:23:13,000
对

5051
02:23:13,000 --> 02:23:16,000
比如说我就是习惯关闭按钮在左上角

5052
02:23:16,000 --> 02:23:18,000
没有理由的

5053
02:23:18,000 --> 02:23:19,000
对没有什么理由

5054
02:23:19,000 --> 02:23:22,000
你能告诉我说在右上角

5055
02:23:22,000 --> 02:23:23,000
就是要别在左上角好吗

5056
02:23:23,000 --> 02:23:24,000
我就是喜欢

5057
02:23:24,000 --> 02:23:25,000
就是说不好你咬我呀

5058
02:23:25,000 --> 02:23:25,000
对吧

5059
02:23:25,000 --> 02:23:27,000
我就觉得那个 OS 10 的字体渲染

5060
02:23:27,000 --> 02:23:28,000
比 Windows 的好

5061
02:23:28,000 --> 02:23:29,000
你能把我咋定

5062
02:23:29,000 --> 02:23:30,000
对你咬完

5063
02:23:30,000 --> 02:23:32,000
但是在服务端就不会有这种

5064
02:23:32,000 --> 02:23:33,000
不会有这样的问题

5065
02:23:33,000 --> 02:23:34,000
真的是真刀真枪

5066
02:23:34,000 --> 02:23:37,000
没有什么

5067
02:23:37,000 --> 02:23:38,000
就一切都是可以量化的

5068
02:23:38,000 --> 02:23:41,000
这可能是你为什么喜欢后端的原因吧

5069
02:23:41,000 --> 02:23:41,000
对啊

5070
02:23:41,000 --> 02:23:43,000
就是一切都是可控的

5071
02:23:43,000 --> 02:23:43,000
对

5072
02:23:43,000 --> 02:23:44,000
你倾向于一切都是可控

5073
02:23:44,000 --> 02:23:45,000
可以量化

5074
02:23:45,000 --> 02:23:46,000
可以抉择

5075
02:23:46,000 --> 02:23:48,000
所以

5076
02:23:48,000 --> 02:23:49,000
对

5077
02:23:49,000 --> 02:23:51,000
从这个角度讲

5078
02:23:51,000 --> 02:23:51,000
可能

5079
02:23:51,000 --> 02:23:54,000
NixOS 还是会有

5080
02:23:54,000 --> 02:23:55,000
还是会

5081
02:23:55,000 --> 02:23:57,000
后来居上了

5082
02:23:57,000 --> 02:23:59,000
如果他真的有他宣称的那么好

5083
02:23:59,000 --> 02:23:59,000
但是

5084
02:23:59,000 --> 02:24:01,000
其作者也说了

5085
02:24:01,000 --> 02:24:03,000
NixOS is not for the faint of heart

5086
02:24:03,000 --> 02:24:04,000
for now

5087
02:24:04,000 --> 02:24:06,000
你说小白物净

5088
02:24:06,000 --> 02:24:07,000
对

5089
02:24:07,000 --> 02:24:10,000
如果你没有一些功力

5090
02:24:10,000 --> 02:24:12,000
没有想要折腾的心念的话

5091
02:24:12,000 --> 02:24:14,000
最后还是不要碰他

5092
02:24:14,000 --> 02:24:14,000
嗯

5093
02:24:14,000 --> 02:24:15,000
不过那个 Ubuntu Core

5094
02:24:15,000 --> 02:24:17,000
那个还比较用户友好

5095
02:24:17,000 --> 02:24:18,000
可以去玩一下

5096
02:24:18,000 --> 02:24:20,000
如果你觉得 NixOS 太

5097
02:24:20,000 --> 02:24:22,000
太 hardcore

5098
02:24:22,000 --> 02:24:22,000
hardcore

5099
02:24:22,000 --> 02:24:22,000
对

5100
02:24:22,000 --> 02:24:24,000
这个 Ubuntu Core

5101
02:24:24,000 --> 02:24:25,000
这个还比较

5102
02:24:25,000 --> 02:24:26,000
比较好玩

5103
02:24:26,000 --> 02:24:27,000
就我自己是

5104
02:24:27,000 --> 02:24:29,000
我觉得还不错吧

5105
02:24:29,000 --> 02:24:31,000
就那个理念也挺简单的

5106
02:24:31,000 --> 02:24:31,000
嗯

5107
02:24:31,000 --> 02:24:34,000
好吧

5108
02:24:34,000 --> 02:24:34,000
那我们

5109
02:24:34,000 --> 02:24:37,000
大概聊完了

5110
02:24:37,000 --> 02:24:39,000
这个最后一期的

5111
02:24:39,000 --> 02:24:40,000
sorry

5112
02:24:40,000 --> 02:24:42,000
2015 年第一期的

5113
02:24:42,000 --> 02:24:44,000
内核恐慌

5114
02:24:44,000 --> 02:24:45,000
我们今天的主题是

5115
02:24:45,000 --> 02:24:47,000
其实也是延伸了前两期的

5116
02:24:47,000 --> 02:24:48,000
Life Cycle Management

5117
02:24:48,000 --> 02:24:50,000
我们今天讲的是

5118
02:24:50,000 --> 02:24:51,000
containization

5119
02:24:51,000 --> 02:24:53,000
就是

5120
02:24:53,000 --> 02:24:54,000
containization

5121
02:24:54,000 --> 02:24:55,000
集装香化

5122
02:24:55,000 --> 02:24:56,000
可以这么说吗

5123
02:24:56,000 --> 02:24:56,000
嗯

5124
02:24:56,000 --> 02:24:57,000
对

5125
02:24:57,000 --> 02:24:58,000
软件部署的集装香化

5126
02:24:58,000 --> 02:24:59,000
以及 DevOps

5127
02:24:59,000 --> 02:25:00,000
嗯

5128
02:25:00,000 --> 02:25:01,000
嗯

5129
02:25:01,000 --> 02:25:02,000
我觉得我从今天开始

5130
02:25:02,000 --> 02:25:04,000
一定要每一期都说

5131
02:25:04,000 --> 02:25:05,000
那个灌口

5132
02:25:05,000 --> 02:25:05,000
因为

5133
02:25:05,000 --> 02:25:07,000
好像其他节目都说

5134
02:25:07,000 --> 02:25:08,000
我不说不太好

5135
02:25:08,000 --> 02:25:09,000
嗯

5136
02:25:09,000 --> 02:25:11,000
北美山地时间

5137
02:25:11,000 --> 02:25:13,000
2006 年 1 月 2 日下午

5138
02:25:13,000 --> 02:25:14,000
3 点 04 分 05 秒

5139
02:25:14,000 --> 02:25:16,000
您正在收听的

5140
02:25:16,000 --> 02:25:17,000
您正在收听的是

5141
02:25:17,000 --> 02:25:18,000
IPN Podcast

5142
02:25:18,000 --> 02:25:20,000
网络旗下的

5143
02:25:20,000 --> 02:25:22,000
IT 技术主题节目

5144
02:25:22,000 --> 02:25:23,000
内核恐慌

5145
02:25:23,000 --> 02:25:24,000
我们号称 hardcore

5146
02:25:24,000 --> 02:25:25,000
但是也没有干货

5147
02:25:25,000 --> 02:25:26,000
想听的人听

5148
02:25:26,000 --> 02:25:27,000
不想听的人就不要听

5149
02:25:27,000 --> 02:25:28,000
嗯

5150
02:25:28,000 --> 02:25:29,000
同时 IPN 旗下的

5151
02:25:29,000 --> 02:25:30,000
其他无量 Podcast

5152
02:25:30,000 --> 02:25:31,000
包括

5153
02:25:31,000 --> 02:25:33,000
Softcore 技术主题节目

5154
02:25:33,000 --> 02:25:34,000
IT 公论

5155
02:25:34,000 --> 02:25:35,000
同样也是由

5156
02:25:35,000 --> 02:25:36,000
Rail 和

5157
02:25:36,000 --> 02:25:37,000
另外一位

5158
02:25:37,000 --> 02:25:38,000
我们的制作人

5159
02:25:38,000 --> 02:25:39,000
Lawrence 技术师

5160
02:25:39,000 --> 02:25:41,000
还有医疗主题节目

5161
02:25:41,000 --> 02:25:42,000
他一来了

5162
02:25:42,000 --> 02:25:43,000
嗯

5163
02:25:43,000 --> 02:25:44,000
美食节目

5164
02:25:44,000 --> 02:25:45,000
未知道

5165
02:25:45,000 --> 02:25:45,000
嗯

5166
02:25:45,000 --> 02:25:46,000
以及

5167
02:25:46,000 --> 02:25:48,000
不只谈艺术的

5168
02:25:48,000 --> 02:25:48,000
艺术类节目

5169
02:25:48,000 --> 02:25:49,000
流行通信

5170
02:25:49,000 --> 02:25:50,000
他的英文名字叫做

5171
02:25:50,000 --> 02:25:51,000
Pop Dispatch

5172
02:25:51,000 --> 02:25:52,000
千万不要记错成

5173
02:25:52,000 --> 02:25:53,000
出债分派

5174
02:25:53,000 --> 02:25:54,000
嗯

5175
02:25:54,000 --> 02:25:56,000
最后还有

5176
02:25:56,000 --> 02:25:58,000
其实我是非常推荐

5177
02:25:58,000 --> 02:26:00,000
流行通信这场节目的

5178
02:26:00,000 --> 02:26:00,000
就是我觉得

5179
02:26:00,000 --> 02:26:02,000
尤其是死成们

5180
02:26:02,000 --> 02:26:03,000
应该听一听

5181
02:26:03,000 --> 02:26:03,000
因为

5182
02:26:03,000 --> 02:26:05,000
唤醒一下脑中

5183
02:26:05,000 --> 02:26:07,000
已经快要死去的艺术

5184
02:26:07,000 --> 02:26:08,000
感性那一部分

5185
02:26:08,000 --> 02:26:08,000
是不是

5186
02:26:08,000 --> 02:26:09,000
对

5187
02:26:09,000 --> 02:26:10,000
就是我和女朋友

5188
02:26:10,000 --> 02:26:11,000
在听这个节目的时候

5189
02:26:11,000 --> 02:26:11,000
就说

5190
02:26:11,000 --> 02:26:13,000
如果我们

5191
02:26:13,000 --> 02:26:15,000
那颗恐慌有我们自己的

5192
02:26:15,000 --> 02:26:15,000
一个

5193
02:26:15,000 --> 02:26:16,000
一个

5194
02:26:16,000 --> 02:26:16,000
一个

5195
02:26:16,000 --> 02:26:17,000
Pattern 的话

5196
02:26:17,000 --> 02:26:17,000
或者一个

5197
02:26:17,000 --> 02:26:18,000
一个

5198
02:26:18,000 --> 02:26:18,000
怎么说

5199
02:26:18,000 --> 02:26:19,000
一个家会

5200
02:26:19,000 --> 02:26:19,000
一个族会的话

5201
02:26:19,000 --> 02:26:21,000
那肯定到处都是直线

5202
02:26:21,000 --> 02:26:22,000
就

5203
02:26:22,000 --> 02:26:25,000
所有地方都是 90 度角

5204
02:26:25,000 --> 02:26:26,000
但是如果你在听

5205
02:26:26,000 --> 02:26:28,000
出战分派

5206
02:26:28,000 --> 02:26:29,000
Top Dispatch

5207
02:26:29,000 --> 02:26:30,000
流行通信的时候

5208
02:26:30,000 --> 02:26:30,000
你会觉得

5209
02:26:30,000 --> 02:26:32,000
就有时候你会觉得

5210
02:26:32,000 --> 02:26:33,000
这个

5211
02:26:33,000 --> 02:26:33,000
从

5212
02:26:33,000 --> 02:26:34,000
从一个

5213
02:26:34,000 --> 02:26:37,000
死理型派的角度

5214
02:26:37,000 --> 02:26:38,000
会觉得主持人好像有点脱线

5215
02:26:38,000 --> 02:26:39,000
就是

5216
02:26:39,000 --> 02:26:40,000
乱造造的

5217
02:26:40,000 --> 02:26:41,000
不知道在讲什么

5218
02:26:41,000 --> 02:26:41,000
但是

5219
02:26:41,000 --> 02:26:43,000
可能这才是

5220
02:26:43,000 --> 02:26:44,000
就是

5221
02:26:44,000 --> 02:26:46,000
我们所缺失的那一部分

5222
02:26:46,000 --> 02:26:46,000
让我们成为

5223
02:26:46,000 --> 02:26:47,000
让我们去

5224
02:26:47,000 --> 02:26:49,000
更具有人情味的一部分

5225
02:26:49,000 --> 02:26:49,000
就是

5226
02:26:49,000 --> 02:26:50,000
如果他们有他们的

5227
02:26:50,000 --> 02:26:51,000
主题图案的话

5228
02:26:51,000 --> 02:26:53,000
可能是

5229
02:26:53,000 --> 02:26:54,000
都是非常柔美的曲线

5230
02:26:54,000 --> 02:26:55,000
像云一样

5231
02:26:55,000 --> 02:26:55,000
对

5232
02:26:55,000 --> 02:26:56,000
水云文

5233
02:26:56,000 --> 02:26:58,000
对

5234
02:26:58,000 --> 02:27:00,000
所以我还是非常推荐各位

5235
02:27:00,000 --> 02:27:03,000
喜欢收听我们节目的

5236
02:27:03,000 --> 02:27:04,000
听众的话

5237
02:27:04,000 --> 02:27:04,000
一定

5238
02:27:04,000 --> 02:27:06,000
也要去听一下流行通信

5239
02:27:06,000 --> 02:27:08,000
但如果你不喜欢听我们

5240
02:27:08,000 --> 02:27:09,000
节目的话

5241
02:27:09,000 --> 02:27:10,000
也非常

5242
02:27:10,000 --> 02:27:11,000
欢迎您

5243
02:27:11,000 --> 02:27:12,000
去听流行通信

5244
02:27:12,000 --> 02:27:13,000
对

5245
02:27:13,000 --> 02:27:14,000
然后

5246
02:27:14,000 --> 02:27:15,000
IPN 还有一款节目

5247
02:27:15,000 --> 02:27:15,000
就是

5248
02:27:15,000 --> 02:27:17,000
我也不知道在播什么的

5249
02:27:17,000 --> 02:27:18,000
无主题节目

5250
02:27:18,000 --> 02:27:18,000
无次元

5251
02:27:18,000 --> 02:27:19,000
对

5252
02:27:19,000 --> 02:27:20,000
没有固定时长

5253
02:27:20,000 --> 02:27:21,000
没有禁忌

5254
02:27:21,000 --> 02:27:22,000
没有主播

5255
02:27:22,000 --> 02:27:24,000
没有主题

5256
02:27:24,000 --> 02:27:25,000
无次元

5257
02:27:25,000 --> 02:27:26,000
好

5258
02:27:26,000 --> 02:27:27,000
欢迎收听本期

5259
02:27:27,000 --> 02:27:28,000
内核国

5260
02:27:28,000 --> 02:27:29,000
对了

5261
02:27:29,000 --> 02:27:29,000
还有个事情

5262
02:27:29,000 --> 02:27:30,000
我们忘了说

5263
02:27:30,000 --> 02:27:33,000
非常高兴

5264
02:27:33,000 --> 02:27:35,000
这个 2014 年

5265
02:27:35,000 --> 02:27:36,000
就你们听到这期节目的时候

5266
02:27:36,000 --> 02:27:37,000
2014 年已经结束了

5267
02:27:37,000 --> 02:27:38,000
但是有一个

5268
02:27:38,000 --> 02:27:39,000
我们录这期节的时候

5269
02:27:39,000 --> 02:27:41,000
2014 年也结束了

5270
02:27:41,000 --> 02:27:41,000
是吗

5271
02:27:41,000 --> 02:27:41,000
对

5272
02:27:41,000 --> 02:27:43,000
2014 年已经结束了

5273
02:27:43,000 --> 02:27:43,000
OK

5274
02:27:43,000 --> 02:27:44,000
Holy

5275
02:27:44,000 --> 02:27:46,000
不过我们在

5276
02:27:46,000 --> 02:27:47,000
我们节目

5277
02:27:47,000 --> 02:27:49,000
第八期了

5278
02:27:49,000 --> 02:27:51,000
在 2014 年做了七期

5279
02:27:51,000 --> 02:27:53,000
然后非常高兴

5280
02:27:53,000 --> 02:27:54,000
上荣登

5281
02:27:54,000 --> 02:27:55,000
苹果的

5282
02:27:55,000 --> 02:27:55,000
这个

5283
02:27:55,000 --> 02:27:55,000
Hour of Code

5284
02:27:55,000 --> 02:27:57,000
2014 这个活动的

5285
02:27:57,000 --> 02:27:58,000
推荐榜里面

5286
02:27:58,000 --> 02:27:59,000
对

5287
02:27:59,000 --> 02:28:00,000
没错

5288
02:28:00,000 --> 02:28:01,000
其实 Hour of Code

5289
02:28:01,000 --> 02:28:02,000
是干嘛的

5290
02:28:02,000 --> 02:28:04,000
就它大概是一个

5291
02:28:04,000 --> 02:28:05,000
全球性的活动

5292
02:28:05,000 --> 02:28:05,000
就是

5293
02:28:05,000 --> 02:28:07,000
大家来学编程吧

5294
02:28:07,000 --> 02:28:07,000
对

5295
02:28:07,000 --> 02:28:08,000
对

5296
02:28:08,000 --> 02:28:09,000
推进这个

5297
02:28:09,000 --> 02:28:09,000
就是这个

5298
02:28:09,000 --> 02:28:11,000
就把编程

5299
02:28:11,000 --> 02:28:13,000
作为通识教育的一部分

5300
02:28:13,000 --> 02:28:14,000
让更多人来

5301
02:28:14,000 --> 02:28:14,000
能够接触它

5302
02:28:14,000 --> 02:28:15,000
而不是说

5303
02:28:15,000 --> 02:28:15,000
哎呀

5304
02:28:15,000 --> 02:28:16,000
我是小白

5305
02:28:16,000 --> 02:28:17,000
我什么都不懂

5306
02:28:17,000 --> 02:28:17,000
不要告诉我

5307
02:28:17,000 --> 02:28:18,000
那些什么东西

5308
02:28:18,000 --> 02:28:19,000
你们连奥巴马

5309
02:28:19,000 --> 02:28:20,000
都就写加把 Script 了

5310
02:28:20,000 --> 02:28:21,000
对

5311
02:28:21,000 --> 02:28:23,000
所以这个事情

5312
02:28:23,000 --> 02:28:24,000
还是蛮值得高兴的

5313
02:28:24,000 --> 02:28:24,000
但是

5314
02:28:24,000 --> 02:28:24,000
对

5315
02:28:24,000 --> 02:28:25,000
有人说

5316
02:28:25,000 --> 02:28:26,000
我们两个可以互相

5317
02:28:26,000 --> 02:28:27,000
互相

5318
02:28:27,000 --> 02:28:29,000
恭维一番

5319
02:28:29,000 --> 02:28:30,000
Unbelievable

5320
02:28:30,000 --> 02:28:31,000
You

5321
02:28:31,000 --> 02:28:32,000
subject name here

5322
02:28:32,000 --> 02:28:34,000
Must be the pride of

5323
02:28:34,000 --> 02:28:34,000
subject

5324
02:28:34,000 --> 02:28:35,000
Home town here

5325
02:28:35,000 --> 02:28:36,000
耶

5326
02:28:36,000 --> 02:28:37,000
耶

5327
02:28:37,000 --> 02:28:39,000
不过也有人说

5328
02:28:39,000 --> 02:28:40,000
这个我们这个

5329
02:28:40,000 --> 02:28:41,000
这么讲那么多

5330
02:28:41,000 --> 02:28:42,000
是不是对

5331
02:28:42,000 --> 02:28:44,000
对初学变成者

5332
02:28:44,000 --> 02:28:45,000
太难了

5333
02:28:45,000 --> 02:28:46,000
我是这么想的

5334
02:28:46,000 --> 02:28:48,000
其实我们讲的很多概念

5335
02:28:48,000 --> 02:28:48,000
应该是

5336
02:28:48,000 --> 02:28:49,000
主要的目的

5337
02:28:49,000 --> 02:28:50,000
还是唤起大家对

5338
02:28:50,000 --> 02:28:52,000
对这个的兴趣

5339
02:28:52,000 --> 02:28:54,000
我们有吗

5340
02:28:54,000 --> 02:28:55,000
有这个

5341
02:28:55,000 --> 02:28:56,000
我不知道

5342
02:28:56,000 --> 02:28:58,000
我希望是这样子

5343
02:28:58,000 --> 02:28:58,000
就是

5344
02:28:58,000 --> 02:28:59,000
我也不知道

5345
02:28:59,000 --> 02:28:59,000
我觉得

5346
02:28:59,000 --> 02:29:01,000
还是那句话吧

5347
02:29:01,000 --> 02:29:02,000
就是这款节目

5348
02:29:02,000 --> 02:29:03,000
我们想做就做了

5349
02:29:03,000 --> 02:29:04,000
想听的人听

5350
02:29:04,000 --> 02:29:05,000
不想听的人就不听

5351
02:29:05,000 --> 02:29:05,000
对

5352
02:29:05,000 --> 02:29:06,000
然后

5353
02:29:06,000 --> 02:29:07,000
anyway

5354
02:29:07,000 --> 02:29:08,000
嗯

5355
02:29:08,000 --> 02:29:09,000
不过这个还是蛮

5356
02:29:09,000 --> 02:29:10,000
可惜可贺的事情

5357
02:29:10,000 --> 02:29:12,000
做了一些

5358
02:29:12,000 --> 02:29:13,000
还是有

5359
02:29:13,000 --> 02:29:14,000
有什么

5360
02:29:14,000 --> 02:29:15,000
有所

5361
02:29:15,000 --> 02:29:17,000
被人认识吧

5362
02:29:17,000 --> 02:29:18,000
然后能够

5363
02:29:18,000 --> 02:29:18,000
对

5364
02:29:18,000 --> 02:29:19,000
每个人都能知道

5365
02:29:19,000 --> 02:29:20,000
然后能拿到这个

5366
02:29:20,000 --> 02:29:20,000
对

5367
02:29:20,000 --> 02:29:21,000
回想 2014 年

5368
02:29:21,000 --> 02:29:22,000
觉得这件事情

5369
02:29:22,000 --> 02:29:24,000
还是挺值得教的

5370
02:29:24,000 --> 02:29:24,000
对

5371
02:29:24,000 --> 02:29:25,000
也可以贴个章

5372
02:29:25,000 --> 02:29:26,000
hour of code

5373
02:29:26,000 --> 02:29:27,000
recommanded

5374
02:29:27,000 --> 02:29:28,000
yeah

5375
02:29:28,000 --> 02:29:30,000
好了

5376
02:29:30,000 --> 02:29:30,000
好吧

5377
02:29:30,000 --> 02:29:32,000
今天就要到此为止了

5378
02:29:32,000 --> 02:29:33,000
下期再见

5379
02:29:33,000 --> 02:29:33,000
拜拜

5380
02:29:33,000 --> 02:29:34,000
拜拜

5381
02:29:34,000 --> 02:29:36,000
优优独播出這種事情

5382
02:29:36,000 --> 02:29:51,000
如果 Village Space

5383
02:29:51,000 --> 02:29:52,000
我们下次再见

5384
02:29:52,000 --> 02:30:02,000
我会继续

