1
00:00:00,000 --> 00:00:04,000
欢迎收听 IPM Podcast 的网络旗下的 IT 技术主题娱乐节目《内核恐慌》

2
00:00:04,000 --> 00:00:06,000
我们号称 Hardcore 但是也没有干货

3
00:00:06,000 --> 00:00:08,000
想听的人听不想听的人就别听

4
00:00:08,000 --> 00:00:11,000
本节目的网址是 kernelpanic.fm

5
00:00:11,000 --> 00:00:13,000
我们推荐大家使用 Podcast 客户端订阅节目

6
00:00:13,000 --> 00:00:17,000
详情请访问 ipn.li.faq

7
00:00:17,000 --> 00:00:19,000
欢迎你为本节目捐款

8
00:00:19,000 --> 00:00:22,000
捐款地址是 kernelpanic.fm.donate

9
00:00:22,000 --> 00:00:24,000
捐款金额随意

10
00:00:24,000 --> 00:00:25,000
只要是扒了正常数倍就可以

11
00:00:25,000 --> 00:00:27,000
捐款不会为你带来什么

12
00:00:27,000 --> 00:00:28,000
不捐也不会让你失去什么

13
00:00:28,000 --> 00:00:32,000
我们的口号是 everything is theoretically impossible

14
00:00:32,000 --> 00:00:33,000
until it is done

15
00:00:35,000 --> 00:00:38,000
OK 今天是我们的第 29 期节目

16
00:00:38,000 --> 00:00:41,000
我是吴涛

17
00:00:41,000 --> 00:00:48,000
然后今天我们在深圳创业界拥有巨大影响力的投资人 Rail

18
00:00:48,000 --> 00:00:55,000
要为大家宣传一项 IPM 旗下的新业务

19
00:00:57,000 --> 00:00:57,000
可以这么说吗

20
00:00:57,000 --> 00:01:00,000
你真的用了那根梗好吧

21
00:01:00,000 --> 00:01:02,000
很多人不知道你这样说好吗

22
00:01:02,000 --> 00:01:04,000
这是继承事实

23
00:01:04,000 --> 00:01:07,000
假设在未来发生的事实

24
00:01:07,000 --> 00:01:09,000
好吧对对对

25
00:01:09,000 --> 00:01:11,000
扯淡了

26
00:01:11,000 --> 00:01:15,000
今天我们尝试一个新业务

27
00:01:15,000 --> 00:01:18,000
新业务也我个人尝试一个新业务吧

28
00:01:18,000 --> 00:01:18,000
嗯哼

29
00:01:18,000 --> 00:01:21,000
就是一个拉屁条的业务

30
00:01:21,000 --> 00:01:22,000
然后这边

31
00:01:22,000 --> 00:01:23,000
好违锁

32
00:01:23,000 --> 00:01:24,000
听说

33
00:01:24,000 --> 00:01:24,000
嗯

34
00:01:24,000 --> 00:01:28,000
有些这个朋友的公司他们有这个招聘的需求嘛

35
00:01:28,000 --> 00:01:30,000
然后刚好

36
00:01:30,000 --> 00:01:31,000
呃

37
00:01:31,000 --> 00:01:33,000
我我们节目应该还有一些这个开发者

38
00:01:33,000 --> 00:01:35,000
程序员听众也要找工作了嘛

39
00:01:35,000 --> 00:01:38,000
然后看我觉得可以做一个什么天前单调的事

40
00:01:38,000 --> 00:01:38,000
对

41
00:01:38,000 --> 00:01:41,000
然后我们这个就就试试吧

42
00:01:41,000 --> 00:01:44,000
然后这次我们这里主要有两个

43
00:01:44,000 --> 00:01:46,000
岗位吧

44
00:01:46,000 --> 00:01:48,000
或者两个职位

45
00:01:48,000 --> 00:01:49,000
嗯

46
00:01:49,000 --> 00:01:50,000
目前正在招聘

47
00:01:50,000 --> 00:01:53,000
然后这两个公司都是我比较熟悉

48
00:01:53,000 --> 00:01:56,000
都没问题都很不错的公司

49
00:01:56,000 --> 00:01:57,000
也欢迎大家去

50
00:01:57,000 --> 00:01:59,000
呃考虑一下

51
00:01:59,000 --> 00:01:59,000
OK

52
00:01:59,000 --> 00:02:00,000
这两个需求

53
00:02:00,000 --> 00:02:02,000
第一个是在呃

54
00:02:02,000 --> 00:02:03,000
广州的呃

55
00:02:03,000 --> 00:02:09,000
在那个 TIT 就是微信的那个团队所在那个园区里面的一家小小的创业公司

56
00:02:09,000 --> 00:02:10,000
OK

57
00:02:10,000 --> 00:02:14,000
所以是不是微信的团队而是微信团队所在的园区的

58
00:02:14,000 --> 00:02:15,000
隔壁对对面

59
00:02:15,000 --> 00:02:16,000
没错隔壁

60
00:02:16,000 --> 00:02:26,000
呃是我以前在知乎的同事他们出呃后来做的一个跟体育社区相关的一个一个一个产品

61
00:02:26,000 --> 00:02:27,000
嗯

62
00:02:27,000 --> 00:02:28,000
嗯

63
00:02:28,000 --> 00:02:32,000
好像先他们现在招这个 Python 的后端工程师

64
00:02:32,000 --> 00:02:36,000
所以如果你对什么 Tornado 啊 Flask 啊

65
00:02:36,000 --> 00:02:39,000
这些名词比较熟悉比较感冒的话

66
00:02:39,000 --> 00:02:42,000
然后就欢迎考虑一下

67
00:02:42,000 --> 00:02:59,000
然后另外一个职位是在北京中央村啊这个是一个做这个跨境设置品电商的这么一个小一个创业团队他们的这个招聘需求是他们就要招一个价格师啊

68
00:02:59,000 --> 00:03:01,000
然后要求大概是这样我大概念一下哈

69
00:03:01,000 --> 00:03:06,000
啊算法这些数据结构这些基本的知识就不说了啊

70
00:03:06,000 --> 00:03:12,000
记忆学习有有加分然后搜索优化有有加分如果你能做个搜索引擎的话就更好了

71
00:03:12,000 --> 00:03:18,000
然后他们是用那个 rails 的所以如果你对 rails 的了解的话会大大的加分

72
00:03:18,000 --> 00:03:23,000
然后他们搜索的实现是用那个 elasticsearch 来做的嘛

73
00:03:23,000 --> 00:03:29,000
所以这份也如果有经验的话啊也就是有一很大的加分了啊

74
00:03:29,000 --> 00:03:42,000
然后两个职位一个是在广州的 python 后端开发后端工程师一个是在北京的这个啊 rails 的这个系统架构师啊都是要在就是要这个真人出席的这两个暂时没有办法远程

75
00:03:42,000 --> 00:03:46,000
啊所以如果你考虑一下地域的原因咯

76
00:03:46,000 --> 00:03:54,000
啊如果你对这两个职位有兴趣的话欢迎给我来信啊我专门开了个邮箱叫做 talent at realbar.com

77
00:03:54,000 --> 00:04:00,000
t a l e n t at r i o b a r d dot c o m

78
00:04:00,000 --> 00:04:06,000
啊你可以发来一个你的一个简单的介绍然后把你的简历也付过来啊

79
00:04:06,000 --> 00:04:09,000
那个你可以自我介绍一下自己的情况怎么样子

80
00:04:09,000 --> 00:04:12,000
然后啊我们这个拉皮我这个拉皮条哈

81
00:04:12,000 --> 00:04:17,000
哈跟别人不太一样就是我会帮他们做第一轮的这个初审和店面

82
00:04:17,000 --> 00:04:23,000
所以你也先接受到就像是这个面试官是我本人可以聊一下

83
00:04:23,000 --> 00:04:26,000
所以如果大家对这个事情有兴趣的话可以我们试试

84
00:04:26,000 --> 00:04:29,000
对 ok 这个广告时间到此为止

85
00:04:29,000 --> 00:04:32,000
我相信从此就会有很多少女朝这个

86
00:04:32,000 --> 00:04:33,000
嗯

87
00:04:33,000 --> 00:04:34,000
Talent at realbar.com

88
00:04:34,000 --> 00:04:37,000
如果是女生的话这个就大大的加分了

89
00:04:37,000 --> 00:04:37,000
哈哈哈

90
00:04:37,000 --> 00:04:43,000
然后骗局次和主和 Rail 主播电话聊天的机会

91
00:04:43,000 --> 00:04:43,000
哈哈

92
00:04:43,000 --> 00:04:45,000
啊需要这样吗

93
00:04:45,000 --> 00:04:49,000
呃那也要拿一份对的拿拿一份能过得了我法眼的简历才行

94
00:04:49,000 --> 00:04:50,000
还有副照片

95
00:04:50,000 --> 00:04:53,000
呃能副照片最好

96
00:04:53,000 --> 00:04:54,000
女生的话

97
00:04:54,000 --> 00:04:56,000
呃 ok

98
00:04:56,000 --> 00:05:00,000
其实我想知道究竟啊多少次呃

99
00:05:00,000 --> 00:05:04,000
多少次节目之后才会有北上广深之外的地方出现

100
00:05:04,000 --> 00:05:07,000
呃你说这个职位的需求吧

101
00:05:07,000 --> 00:05:10,000
北上可能还有一个杭州吧

102
00:05:10,000 --> 00:05:14,000
我觉得中国 IT 就就还蛮多的

103
00:05:14,000 --> 00:05:15,000
就以后我们这个这个业务

104
00:05:15,000 --> 00:05:18,000
就我们现在试点吧都是介绍的朋友的公司这样

105
00:05:18,000 --> 00:05:22,000
而如果有这个以后这个我们节目就确实推荐的这个人才不错

106
00:05:22,000 --> 00:05:26,000
那搞不好有别的公司过来要求说哎我我花钱

107
00:05:26,000 --> 00:05:27,000
那你们这打广告行不行

108
00:05:27,000 --> 00:05:28,000
那也可以考虑对吧

109
00:05:28,000 --> 00:05:31,000
不过这也是需要我们的 Rail 主播来 certify 一下

110
00:05:31,000 --> 00:05:34,000
就是啊对我们是我们是双向审查的

111
00:05:34,000 --> 00:05:36,000
就是说呃我呃

112
00:05:36,000 --> 00:05:40,000
帮公司这个先做这个出筛的呃不推荐不靠谱的人

113
00:05:40,000 --> 00:05:44,000
当然我们你要是要先是一个审查公司的不推荐不靠谱的公司的

114
00:05:44,000 --> 00:05:47,000
没错就这点我们还是要先保证的

115
00:05:47,000 --> 00:05:54,000
嗯其实刚才两个广告我有一个呃内心的 OS 就是你忘记了最重要的一项薪水如何

116
00:05:54,000 --> 00:05:59,000
哦呃这个薪水都应该就至少是高于市场平均数的

117
00:05:59,000 --> 00:06:03,000
这个不用担心就具体是按这个就是什么来的

118
00:06:03,000 --> 00:06:07,000
会有一个范围嘛然后但是是按这个还是要看你的看水平和

119
00:06:07,000 --> 00:06:11,000
和对就因为薪资不光是这个就工资那块嘛还有

120
00:06:11,000 --> 00:06:14,000
因为是创业公司的话还有像股权期权那些问题

121
00:06:14,000 --> 00:06:18,000
所以具体到时候就我我负责的部分是说

122
00:06:18,000 --> 00:06:21,000
帮你们选择这个公司然后帮你帮我选择这个人才

123
00:06:21,000 --> 00:06:26,000
但至于说你们后面的这个谈不谈得拢这个价钱和这个这个

124
00:06:26,000 --> 00:06:28,000
这个酬劳的问题那就你们自己努力了

125
00:06:28,000 --> 00:06:30,000
OKOK 当然谢谢

126
00:06:30,000 --> 00:06:33,000
好的呃那么今天进入节目的正题

127
00:06:34,000 --> 00:06:38,000
呃首先是上一期的 follow up

128
00:06:38,000 --> 00:06:40,000
呃两条很短的 follow up

129
00:06:40,000 --> 00:06:44,000
呃首先是一位叫做朱思涵的朋友

130
00:06:44,000 --> 00:06:45,000
我不知道念对了没有

131
00:06:45,000 --> 00:06:47,000
思涵朱的朋友说两位主播你好

132
00:06:47,000 --> 00:06:50,000
这期介绍了许多 shel 程序

133
00:06:50,000 --> 00:06:54,000
考虑到历史场合中各类 shel 的数量有所遗漏也是正常

134
00:06:54,000 --> 00:06:58,000
这里补充一个清华大学校有在本科期间用 go 语言写的 elvish

135
00:06:58,000 --> 00:07:01,000
包含了 fish 与 zsh 的一些特性

136
00:07:01,000 --> 00:07:04,000
并且对 pipeline 进行了许多实用的改进

137
00:07:04,000 --> 00:07:09,000
作为一个自称的系统及编程语言一个可靠的 shel 项目

138
00:07:09,000 --> 00:07:13,000
也无疑是表明自己足够 hardcore 的重要指标

139
00:07:13,000 --> 00:07:13,000
怎么样

140
00:07:13,000 --> 00:07:20,000
go lang 语言的呃使用者 real 先生你对这个 elvish 有所耳闻吗

141
00:07:20,000 --> 00:07:23,000
呃我之前看到过在那个 github 上面看过那个项目

142
00:07:23,000 --> 00:07:30,000
当时感觉昙花一现吧就就对于这种都是实验性质的项目嘛

143
00:07:30,000 --> 00:07:36,000
然后肯定还是就如果你要日常用的话就你要自己想办法整一整啊

144
00:07:36,000 --> 00:07:40,000
不过我还挺开心的有一个这个 go 写的这个 shel 大家可以用一下

145
00:07:40,000 --> 00:07:46,000
因为像大部分的 shel 都是谁写的吧应该呃其实有一个 python 写的 shel

146
00:07:46,000 --> 00:07:48,000
叫叫什么来着

147
00:07:48,000 --> 00:07:54,000
叫叫 gawker 之类的 g a u k e 吧我不知道 gwak

148
00:07:54,000 --> 00:07:55,000
gwake

149
00:07:55,000 --> 00:07:57,000
ok 不知道好像是 python 写的我记得

150
00:07:57,000 --> 00:07:58,000
但 ok 没错

151
00:07:58,000 --> 00:08:03,000
呃那除了这种特例我印象中大部分的我们日常用的 shel

152
00:08:03,000 --> 00:08:04,000
像什么 bash 啊

153
00:08:04,000 --> 00:08:07,000
大部分都是 c 或者 c++写的

154
00:08:07,000 --> 00:08:08,000
对对对

155
00:08:08,000 --> 00:08:13,000
啊还蛮开心有这么一个比较新的语言写的那个 shel

156
00:08:13,000 --> 00:08:16,000
我在想什么时候有人用勾写个操作系统出来

157
00:08:16,000 --> 00:08:18,000
说不定已经有 somewhere in the planet

158
00:08:18,000 --> 00:08:22,000
哈哈哈他说那不就是那个 planet 吗

159
00:08:22,000 --> 00:08:24,000
哈哈哈

160
00:08:24,000 --> 00:08:25,000
ok

161
00:08:25,000 --> 00:08:27,000
呃呃

162
00:08:27,000 --> 00:08:27,000
呃

163
00:08:27,000 --> 00:08:31,000
下一条反馈是这个叫 thomas 怎么念的

164
00:08:31,000 --> 00:08:32,000
曹吧

165
00:08:32,000 --> 00:08:32,000
toy

166
00:08:32,000 --> 00:08:35,000
菜或者曹我觉得

167
00:08:35,000 --> 00:08:36,000
这是月

168
00:08:36,000 --> 00:08:37,000
这是呃

169
00:08:37,000 --> 00:08:38,000
维托马拼

170
00:08:38,000 --> 00:08:40,000
哦对他说是香港的听众

171
00:08:40,000 --> 00:08:41,000
对呃

172
00:08:41,000 --> 00:08:43,000
两位主持人好我是香港的听众

173
00:08:43,000 --> 00:08:45,000
有关第 28 期内

174
00:08:45,000 --> 00:08:48,000
DOS 年代的 commander 应该是 Norton commander

175
00:08:48,000 --> 00:08:50,000
而不是 total commander

176
00:08:50,000 --> 00:08:51,000
这个我们说错了

177
00:08:51,000 --> 00:08:52,000
对

178
00:08:52,000 --> 00:08:53,000
所以 total commander 是哪里的

179
00:08:53,000 --> 00:08:55,000
total commander 是 windows 上面的

180
00:08:55,000 --> 00:08:55,000
嗯

181
00:08:55,000 --> 00:08:56,000
ok

182
00:08:56,000 --> 00:08:57,000
啊哈的还是一家的

183
00:08:57,000 --> 00:09:00,000
啊接着念这一则这个反馈哈

184
00:09:00,000 --> 00:09:01,000
啊

185
00:09:01,000 --> 00:09:05,000
提到 Norton 不得不提提 Norton guide

186
00:09:05,000 --> 00:09:09,000
由于当时还流行运行一些 tsr

187
00:09:09,000 --> 00:09:13,000
terminate and stay resident program

188
00:09:13,000 --> 00:09:15,000
呃 tsr 城市

189
00:09:15,000 --> 00:09:19,000
让电脑使用者用 hotkey 呼出来使用

190
00:09:19,000 --> 00:09:22,000
Norton guide 有许多不同的手册

191
00:09:22,000 --> 00:09:25,000
让使用者呼出不同的使用手册

192
00:09:25,000 --> 00:09:26,000
值得当时

193
00:09:26,000 --> 00:09:28,000
Norton guide 的那里还有一本关于

194
00:09:28,000 --> 00:09:30,000
doss batch command 的手册

195
00:09:30,000 --> 00:09:31,000
此外

196
00:09:31,000 --> 00:09:33,000
Norton utilities 的 batch enhancer

197
00:09:33,000 --> 00:09:37,000
使得 doss 的 batch program 变得强很多

198
00:09:37,000 --> 00:09:38,000
可以输出有颜色的文字

199
00:09:38,000 --> 00:09:43,000
这个哎这个我想起来了那个以前玩那个叫什么来的

200
00:09:43,000 --> 00:09:45,000
你说内存修改器是吧

201
00:09:46,000 --> 00:09:49,000
对对对就是内存修改器就是从这种方式唤唤醒

202
00:09:49,000 --> 00:09:50,000
因为当时 doss 下面是都是单进 centre Goo

203
00:09:50,000 --> 00:09:51,000
对对对 u 对对ánh

204
00:09:51,000 --> 00:09:52,000
就是单进程的程序嘛

205
00:09:52,000 --> 00:09:53,000
所以他怎么怎么丢

206
00:09:54,000 --> 00:09:56,000
很 rel

207
00:09:56,000 --> 00:09:59,000
其实就是把它藏在内存的一个地方

208
00:09:59,000 --> 00:10:01,000
然后你键盘中断

209
00:10:01,000 --> 00:10:02,000
可以呼叫那个地方

210
00:10:02,000 --> 00:10:06,000
就等于把那个东西弄到前台来

211
00:10:06,000 --> 00:10:09,000
然后这是一个非常愚蠢的

212
00:10:09,000 --> 00:10:13,000
非常简单的多人武器头发

213
00:10:13,000 --> 00:10:13,000
可以理解我

214
00:10:13,000 --> 00:10:15,000
它还是单

215
00:10:15,000 --> 00:10:17,000
它跟你有点像现在那个 iOS 那种

216
00:10:17,000 --> 00:10:18,000
手动多人武

217
00:10:18,000 --> 00:10:19,000
对

218
00:10:19,000 --> 00:10:21,000
你看手动

219
00:10:21,000 --> 00:10:23,000
它不可以在同一个屏幕上

220
00:10:23,000 --> 00:10:25,000
出现两个这个程序

221
00:10:25,000 --> 00:10:26,000
同时运行

222
00:10:26,000 --> 00:10:27,000
但是持有一个

223
00:10:27,000 --> 00:10:28,000
非强战士

224
00:10:28,000 --> 00:10:30,000
对跟 iOS 差不多

225
00:10:30,000 --> 00:10:33,000
刚才我想起那个 TSR 程式的时候

226
00:10:33,000 --> 00:10:34,000
想起这个事

227
00:10:34,000 --> 00:10:34,000
对

228
00:10:34,000 --> 00:10:36,000
Northern Guide

229
00:10:36,000 --> 00:10:39,000
所以它就是一套 F 1 吧

230
00:10:39,000 --> 00:10:43,000
就像就是一套使用手册

231
00:10:43,000 --> 00:10:45,000
可以让你在写 Batch 的时候

232
00:10:45,000 --> 00:10:47,000
你写 P 数理程序的时候

233
00:10:47,000 --> 00:10:48,000
忘记了一个什么怎么写

234
00:10:48,000 --> 00:10:49,000
然后按一个快捷键

235
00:10:49,000 --> 00:10:50,000
这个 P 数理程序的

236
00:10:50,000 --> 00:10:53,000
最近不是挺火的

237
00:10:53,000 --> 00:10:55,000
一个就 Max 上面那个应用叫 Dash

238
00:10:55,000 --> 00:10:56,000
对

239
00:10:56,000 --> 00:10:56,000
你买了吗

240
00:10:56,000 --> 00:10:57,000
就买了呀

241
00:10:57,000 --> 00:10:58,000
看我们档能攻击

242
00:10:58,000 --> 00:11:00,000
而且 Dash 很简单

243
00:11:00,000 --> 00:11:02,000
你不买的话

244
00:11:02,000 --> 00:11:06,000
它没有什么程序上的那个功能损失

245
00:11:06,000 --> 00:11:08,000
但是它把字体给你换成

246
00:11:08,000 --> 00:11:10,000
Comic Sense

247
00:11:10,000 --> 00:11:11,000
是这样子吗

248
00:11:11,000 --> 00:11:13,000
我最开始没买的时候

249
00:11:13,000 --> 00:11:15,000
是启动的时候要等 30 秒

250
00:11:15,000 --> 00:11:17,000
它变着发折磨你

251
00:11:17,000 --> 00:11:19,000
反正就是你功能上没有什么损失

252
00:11:19,000 --> 00:11:21,000
但是就是个人让你让你不爽

253
00:11:21,000 --> 00:11:22,000
然后逼你去买

254
00:11:22,000 --> 00:11:26,000
已经胸腾到用 Comic Sense 来做

255
00:11:26,000 --> 00:11:26,000
对

256
00:11:26,000 --> 00:11:28,000
而且图表也画了好几次

257
00:11:28,000 --> 00:11:29,000
OK

258
00:11:29,000 --> 00:11:31,000
不过那个也

259
00:11:31,000 --> 00:11:33,000
我觉得这个东西挺好用的

260
00:11:33,000 --> 00:11:36,000
每次就是查文档能节省不少时间

261
00:11:36,000 --> 00:11:37,000
推荐你买一个

262
00:11:37,000 --> 00:11:37,000
好

263
00:11:37,000 --> 00:11:43,000
不过对有些文档支持都不是特别好

264
00:11:43,000 --> 00:11:44,000
我觉得

265
00:11:44,000 --> 00:11:44,000
对

266
00:11:44,000 --> 00:11:45,000
有些文档还是得上网看

267
00:11:45,000 --> 00:11:46,000
说说

268
00:11:46,000 --> 00:11:47,000
对

269
00:11:47,000 --> 00:11:50,000
特别像那种更新的比较勤快的那种

270
00:11:50,000 --> 00:11:51,000
对

271
00:11:51,000 --> 00:11:55,000
而且其实上一次那个 Apple Store 出的那个事

272
00:11:55,000 --> 00:11:56,000
就是那个数字签名损坏

273
00:11:56,000 --> 00:11:58,000
导致我的 Dash 好像不能用了

274
00:11:58,000 --> 00:12:00,000
后来我也再没有开

275
00:12:00,000 --> 00:12:00,000
你也中了

276
00:12:00,000 --> 00:12:00,000
对

277
00:12:00,000 --> 00:12:01,000
我也中了

278
00:12:01,000 --> 00:12:02,000
OK

279
00:12:02,000 --> 00:12:03,000
重新下载一个

280
00:12:03,000 --> 00:12:04,000
对

281
00:12:04,000 --> 00:12:06,000
说到上网查这个文档

282
00:12:06,000 --> 00:12:07,000
我想起一件事

283
00:12:07,000 --> 00:12:09,000
当年我也是写过 PHP 的

284
00:12:09,000 --> 00:12:10,000
你知道吗

285
00:12:10,000 --> 00:12:11,000
黑历史

286
00:12:11,000 --> 00:12:11,000
报出来了

287
00:12:11,000 --> 00:12:12,000
对

288
00:12:12,000 --> 00:12:12,000
对

289
00:12:12,000 --> 00:12:13,000
黑历史

290
00:12:13,000 --> 00:12:14,000
那个时候他们读

291
00:12:14,000 --> 00:12:15,000
高中吧

292
00:12:15,000 --> 00:12:18,000
还在自己折腾折腾学学写

293
00:12:18,000 --> 00:12:18,000
然后

294
00:12:18,000 --> 00:12:20,000
然后那个

295
00:12:20,000 --> 00:12:22,000
因为 PHP 的文档是在

296
00:12:22,000 --> 00:12:23,000
它是在那个 PHP

297
00:12:23,000 --> 00:12:24,000
Doneer 的官网上面

298
00:12:24,000 --> 00:12:27,000
然后它那个文档有些写的很模糊

299
00:12:27,000 --> 00:12:28,000
因为它那个函数很多

300
00:12:28,000 --> 00:12:30,000
有些文档做点很模糊

301
00:12:30,000 --> 00:12:31,000
其实最有用的是

302
00:12:31,000 --> 00:12:32,000
评论

303
00:12:32,000 --> 00:12:33,000
那个 PHP

304
00:12:33,000 --> 00:12:33,000
对

305
00:12:33,000 --> 00:12:35,000
它评论区超有用

306
00:12:35,000 --> 00:12:36,000
它那些人会告诉你那个文档的坑

307
00:12:36,000 --> 00:12:38,000
就有些文档是错的

308
00:12:38,000 --> 00:12:38,000
对

309
00:12:38,000 --> 00:12:40,000
而且还挺挺棒的

310
00:12:40,000 --> 00:12:41,000
但有时候

311
00:12:41,000 --> 00:12:42,000
PHP 的评论区也是

312
00:12:42,000 --> 00:12:46,000
就是有可能在最上面的那个解决方案是非常愚蠢的

313
00:12:46,000 --> 00:12:47,000
然后下面会有人指出来

314
00:12:47,000 --> 00:12:48,000
但是很多人不会看到下面

315
00:12:48,000 --> 00:12:49,000
就说

316
00:12:49,000 --> 00:12:49,000
就直接

317
00:12:49,000 --> 00:12:50,000
Copy paste

318
00:12:50,000 --> 00:12:52,000
The top most one

319
00:12:52,000 --> 00:12:52,000
然后

320
00:12:52,000 --> 00:12:55,000
然后错误的代码就到处流转

321
00:12:55,000 --> 00:12:56,000
对

322
00:12:56,000 --> 00:12:57,000
就是成为评论

323
00:12:57,000 --> 00:12:57,000
败也评论

324
00:12:57,000 --> 00:12:59,000
就那个社区还挺有意思

325
00:12:59,000 --> 00:13:01,000
就是这种整个操作模式

326
00:13:01,000 --> 00:13:01,000
对

327
00:13:01,000 --> 00:13:02,000
PHP 其实可能是

328
00:13:02,000 --> 00:13:05,000
就是因为流行程度太广了

329
00:13:05,000 --> 00:13:07,000
这个模式简直是独一无二的

330
00:13:07,000 --> 00:13:11,000
你没有办法在其他任何一个程序的

331
00:13:11,000 --> 00:13:14,000
编程语言的社区里面找到这样一个

332
00:13:14,000 --> 00:13:16,000
在官方文档上面

333
00:13:16,000 --> 00:13:19,000
帮那个评论比正文有用的语言了

334
00:13:19,000 --> 00:13:20,000
这也是奇葩

335
00:13:20,000 --> 00:13:22,000
后来不是就

336
00:13:22,000 --> 00:13:23,000
就算什么

337
00:13:23,000 --> 00:13:27,000
算是把这个东西正式化了吧

338
00:13:27,000 --> 00:13:27,000
对

339
00:13:27,000 --> 00:13:29,000
比较有意思

340
00:13:29,000 --> 00:13:31,000
对

341
00:13:31,000 --> 00:13:32,000
那行

342
00:13:32,000 --> 00:13:35,000
谢谢这个两位朋友的这个来信

343
00:13:35,000 --> 00:13:35,000
对

344
00:13:35,000 --> 00:13:39,000
上一期其实我们有一个话题没有讲完

345
00:13:39,000 --> 00:13:41,000
因为时间的关系比较长了

346
00:13:41,000 --> 00:13:42,000
讲了两个多小时有点累了

347
00:13:42,000 --> 00:13:43,000
对

348
00:13:43,000 --> 00:13:45,000
我们今天把那个补上吧

349
00:13:45,000 --> 00:13:47,000
这个补上那块就是那个 terminal emulator

350
00:13:47,000 --> 00:13:50,000
叫终端模拟器对吧

351
00:13:50,000 --> 00:13:51,000
错了

352
00:13:51,000 --> 00:13:53,000
终端仿真器

353
00:13:53,000 --> 00:13:54,000
仿真器

354
00:13:54,000 --> 00:13:56,000
我们口语里面都说模拟器

355
00:13:56,000 --> 00:13:59,000
所以这个要我们要做一个这么考据了

356
00:13:59,000 --> 00:14:02,000
emulator 和 simulator 有什么区别

357
00:14:02,000 --> 00:14:06,000
simulator 是说要你要把它视无巨细的模拟出来

358
00:14:06,000 --> 00:14:10,000
就是你包括内部原理都要把它做出一个

359
00:14:10,000 --> 00:14:11,000
以假乱真的东西来

360
00:14:11,000 --> 00:14:13,000
就叫模拟

361
00:14:13,000 --> 00:14:16,000
就是得完完全全从头到尾都复刻一遍

362
00:14:16,000 --> 00:14:18,000
才算是 simulator 模拟器

363
00:14:18,000 --> 00:14:19,000
才算是 simulation

364
00:14:19,000 --> 00:14:22,000
simulation 就是比如说你模拟一个宇宙

365
00:14:22,000 --> 00:14:26,000
你是要就把里面什么常数啊

366
00:14:26,000 --> 00:14:27,000
什么重力啊

367
00:14:27,000 --> 00:14:29,000
蓝千万道的全都要模拟出来

368
00:14:29,000 --> 00:14:30,000
才叫 simulation

369
00:14:30,000 --> 00:14:30,000
OK

370
00:14:30,000 --> 00:14:32,000
而 emulator

371
00:14:32,000 --> 00:14:32,000
emulator

372
00:14:32,000 --> 00:14:33,000
对

373
00:14:33,000 --> 00:14:33,000
仿真

374
00:14:33,000 --> 00:14:36,000
emulator 则只是就是做出那个样子来

375
00:14:36,000 --> 00:14:39,000
就是它最终的那个 look and feel 一样都可以了

376
00:14:39,000 --> 00:14:40,000
比如说那个 MAME

377
00:14:40,000 --> 00:14:42,000
那个接机模拟器

378
00:14:42,000 --> 00:14:42,000
OK

379
00:14:42,000 --> 00:14:44,000
就我们叫它接机模拟器

380
00:14:44,000 --> 00:14:45,000
但它实际上做的事情是仿真

381
00:14:45,000 --> 00:14:48,000
它并不是真的做一套那个接机的硬件

382
00:14:48,000 --> 00:14:50,000
或者说用软件去模拟接机的硬件出来

383
00:14:50,000 --> 00:14:53,000
而是去读那个接机的 room

384
00:14:53,000 --> 00:14:55,000
然后把这个 room 跑起来

385
00:14:55,000 --> 00:14:56,000
所以最终

386
00:14:56,000 --> 00:14:59,000
这两个的区别就是说模拟器叫做 API

387
00:14:59,000 --> 00:15:02,000
反正是 API compatible 对吧

388
00:15:02,000 --> 00:15:05,000
然后模拟器等于是把在码道重新写一遍

389
00:15:05,000 --> 00:15:10,000
模拟器相当于 binary compatible

390
00:15:10,000 --> 00:15:11,000
对对对

391
00:15:11,000 --> 00:15:16,000
因为 binary compatible 和 API 就是 interface compatible 的区别

392
00:15:16,000 --> 00:15:17,000
对大概就是这样

393
00:15:17,000 --> 00:15:17,000
OK

394
00:15:17,000 --> 00:15:18,000
有意思

395
00:15:18,000 --> 00:15:22,000
但是口语里面我们一直都说中端模拟器

396
00:15:22,000 --> 00:15:24,000
我改了

397
00:15:24,000 --> 00:15:25,000
我现在跟你说中端仿真器

398
00:15:25,000 --> 00:15:25,000
好吧

399
00:15:25,000 --> 00:15:28,000
中端仿真器

400
00:15:28,000 --> 00:15:28,000
OK

401
00:15:28,000 --> 00:15:29,000
仿真

402
00:15:29,000 --> 00:15:30,000
这个名字好

403
00:15:30,000 --> 00:15:31,000
还挺起来挺那个

404
00:15:31,000 --> 00:15:34,000
挺港台的

405
00:15:34,000 --> 00:15:34,000
对

406
00:15:34,000 --> 00:15:38,000
好吧

407
00:15:38,000 --> 00:15:40,000
所以中端仿真器到底是个什么鬼

408
00:15:40,000 --> 00:15:43,000
中端仿真器到底是个什么鬼

409
00:15:43,000 --> 00:15:45,000
我们上期介绍了中端对吧

410
00:15:45,000 --> 00:15:53,000
就是中端早期是一个实体的或者说那个加以后物理的这么一个东西摆在那儿

411
00:15:53,000 --> 00:15:57,000
它是一个机械电子元件的一个计算机它不是计算机摆在那儿

412
00:15:57,000 --> 00:16:04,000
它只是一个可以它相当于一个键盘和显示屏的结合体

413
00:16:04,000 --> 00:16:05,000
但是它没有大脑

414
00:16:05,000 --> 00:16:13,000
它所做的唯一的事情就是把你输入的东西传输传出到这个 mainframe

415
00:16:13,000 --> 00:16:15,000
就是大型机上面

416
00:16:15,000 --> 00:16:16,000
对对

417
00:16:16,000 --> 00:16:20,000
就那个时候因为电脑还是共享的就没有说 PC 这个概念还没有出来

418
00:16:20,000 --> 00:16:21,000
对

419
00:16:21,000 --> 00:16:25,000
所以说实际上我们现在很多事情都是在复古

420
00:16:25,000 --> 00:16:29,000
就比如说这个浏览器其实本身就是一种复古

421
00:16:29,000 --> 00:16:32,000
浏览器本身并不具备处理信息的能力

422
00:16:32,000 --> 00:16:38,000
它只是把你的输入和远程服务器的输出显示在一个窗口里而已

423
00:16:38,000 --> 00:16:43,000
而这个窗口的实际版本就可以理解为以前的早期的 terminal

424
00:16:43,000 --> 00:16:52,000
然后 terminal emulator 就是把 terminal 的跟远程的大型机打交道的这一套机制仿真出来

425
00:16:52,000 --> 00:16:54,000
然后用一个软件来实现

426
00:16:54,000 --> 00:16:58,000
这就是我们所谓的 terminal emulator

427
00:16:58,000 --> 00:16:59,000
OK

428
00:16:59,000 --> 00:17:00,000
对

429
00:17:00,000 --> 00:17:07,000
然后上一期我再找一个我试图说一个术语叫 CEOI

430
00:17:07,000 --> 00:17:10,000
后来我终于查到它到底是什么就是 correctal user interface

431
00:17:10,000 --> 00:17:14,000
和这个 graphical user interface 是不一样的

432
00:17:14,000 --> 00:17:19,000
就 GUI 对应的是 CUI 吗

433
00:17:19,000 --> 00:17:20,000
CUI 对

434
00:17:20,000 --> 00:17:21,000
CUI

435
00:17:21,000 --> 00:17:24,000
那其实我们经常说是 CLI 的吧

436
00:17:24,000 --> 00:17:25,000
Command line interface

437
00:17:25,000 --> 00:17:26,000
对

438
00:17:26,000 --> 00:17:30,000
而 Command line interface 和 correctal user interface 又不太一样

439
00:17:30,000 --> 00:17:31,000
然后

440
00:17:31,000 --> 00:17:33,000
因为 Command line 它可能是图形的

441
00:17:33,000 --> 00:17:37,000
只是说它的这个执行的方式是通过命令行的形式来

442
00:17:37,000 --> 00:17:44,000
而 CUI 则反过来是说你能够看到的 user interface 整个就是一个

443
00:17:44,000 --> 00:17:46,000
矩阵上面的一些字符

444
00:17:46,000 --> 00:17:46,000
对

445
00:17:46,000 --> 00:17:49,000
比如说什么 VIM 就是一个 CUI 对吧

446
00:17:49,000 --> 00:17:54,000
但是你在至少你在那个编辑模式和那个命令模式的时候

447
00:17:54,000 --> 00:17:56,000
它是一个 correctal user interface

448
00:17:56,000 --> 00:17:58,000
因为你可以在任何地方移动

449
00:17:58,000 --> 00:17:59,000
然后你可以下达命令

450
00:17:59,000 --> 00:18:04,000
但是当你进入那个打了冒号之后的那个模式叫 ex mode

451
00:18:04,000 --> 00:18:06,000
EX mode

452
00:18:06,000 --> 00:18:07,000
这就是一个命令行模式

453
00:18:07,000 --> 00:18:08,000
对

454
00:18:08,000 --> 00:18:10,000
此时它是它有一个 CLI

455
00:18:10,000 --> 00:18:12,000
所以这里这里有个很明显

456
00:18:12,000 --> 00:18:16,000
刚才我们就是那个听众反馈里面提到那个叫 Norton Commander

457
00:18:16,000 --> 00:18:17,000
它算是一个 CUI

458
00:18:17,000 --> 00:18:18,000
但它不是一个 CLI

459
00:18:18,000 --> 00:18:20,000
它是一个 CUI 的程序

460
00:18:20,000 --> 00:18:22,000
但它不是 CLI

461
00:18:22,000 --> 00:18:22,000
对

462
00:18:22,000 --> 00:18:28,000
因为它的那个界面是用那些字符汇制出来的一个像窗口像图形的一个概念

463
00:18:28,000 --> 00:18:32,000
但是它并不是基于命令行的嘛

464
00:18:32,000 --> 00:18:38,000
或者说现在最长有最有可能遇见到遇到了 CLI 就是那个 Linux

465
00:18:38,000 --> 00:18:42,000
或者是 FreeBSD 的那个安装界面还是 CLI

466
00:18:42,000 --> 00:18:43,000
对对对

467
00:18:43,000 --> 00:18:44,000
installer

468
00:18:44,000 --> 00:18:46,000
对感觉非常的复古

469
00:18:46,000 --> 00:18:50,000
其实我一直一直在有一个问题

470
00:18:50,000 --> 00:18:56,000
我后来专门查了才得到这个这个这个解就能达疑解惑嘛

471
00:18:56,000 --> 00:19:00,000
你知道有些在那个在那个机房里面那个服务器它是没有显示器的吗

472
00:19:00,000 --> 00:19:02,000
OK

473
00:19:02,000 --> 00:19:04,000
对然后然后就是我们现在那个你去买一个

474
00:19:04,000 --> 00:19:06,000
就那些 Blade Server 吗

475
00:19:06,000 --> 00:19:09,000
那个叫机架嘛

476
00:19:09,000 --> 00:19:10,000
Blade 还是另外一个东西

477
00:19:10,000 --> 00:19:12,000
就是 RackMont Server

478
00:19:12,000 --> 00:19:12,000
对对对

479
00:19:12,000 --> 00:19:14,000
那 Blade 肯定也是没有的

480
00:19:14,000 --> 00:19:15,000
就是它们通常都没有嘛

481
00:19:15,000 --> 00:19:17,000
然后你看它们用的那个处理器

482
00:19:17,000 --> 00:19:21,000
用的是那个一般比如说英特尔那个叫制强处理器

483
00:19:21,000 --> 00:19:22,000
也是不是

484
00:19:22,000 --> 00:19:23,000
就不像我们 PC 里面

485
00:19:23,000 --> 00:19:27,000
现在那个都是叫什么有集成显卡的那种东西嘛

486
00:19:27,000 --> 00:19:27,000
或者是板在显卡

487
00:19:27,000 --> 00:19:28,000
它都是没有

488
00:19:28,000 --> 00:19:29,000
所以它们是怎么输出的是吧

489
00:19:29,000 --> 00:19:30,000
对

490
00:19:30,000 --> 00:19:32,000
它们当然也有些也有那个微接的口

491
00:19:32,000 --> 00:19:35,000
你可以接个显示器上去插个 USB 键盘也可以用

492
00:19:35,000 --> 00:19:39,000
但是有些我发现是连就是这一块其实也可以省掉嘛

493
00:19:39,000 --> 00:19:44,000
因为你想那个服务器它大部分时候并不是需要连个显示器一直连着的嘛

494
00:19:44,000 --> 00:19:46,000
所以其实我发现有些是用这个叫做 Console

495
00:19:46,000 --> 00:19:52,000
就是就上次我讲那个 Rs 232 是吧

496
00:19:52,000 --> 00:19:57,000
Rs 232 就是一个 Jack 水晶头水晶头不是水晶头不是水晶头

497
00:19:57,000 --> 00:19:58,000
不是水晶头

498
00:19:58,000 --> 00:19:59,000
串口

499
00:19:59,000 --> 00:19:59,000
哦

500
00:19:59,000 --> 00:20:01,000
Serial port

501
00:20:01,000 --> 00:20:13,000
对啊是通过那个然后有一些那个那个主板它那个 BIOS 它是支持啊把那个因为我们插一个微阶的屏幕那看到的也是最开始 boot 的时候也是一个 CUI 嘛

502
00:20:13,000 --> 00:20:15,000
对吧

503
00:20:15,000 --> 00:20:19,000
它就是可以就是把那个导到那个串口的那个 serial port 导出来的

504
00:20:19,000 --> 00:20:22,000
这样的话你再插一个那个那个毒串口的机器

505
00:20:22,000 --> 00:20:26,000
但现在就是一般没有现在笔记本都没有串口的接口了嘛

506
00:20:26,000 --> 00:20:30,000
可能买个 USB 转串口的那个毒插到那个机上的串口上面去

507
00:20:30,000 --> 00:20:33,000
然后再开一个这个 terminal emulator

508
00:20:33,000 --> 00:20:39,000
对就可以把那个那个在服务器上显示的那个东西弄出来嘛

509
00:20:39,000 --> 00:20:42,000
这个东西这个这个设备叫什么玩意来着

510
00:20:43,000 --> 00:20:45,000
那个那个叫 console port 对这个是这样的

511
00:20:46,000 --> 00:20:51,000
然后我想想还他他那个毒的那个东西叫什么我现在想不起来

512
00:20:51,000 --> 00:20:56,000
那我觉得这个还挺好的因为我一直在想家里搞个这个 x 86 的一个小一种那种

513
00:20:56,000 --> 00:20:57,000
微型主机

514
00:20:57,000 --> 00:21:00,000
然后怕他跑来做这个服务器网关啊这类的东西嘛

515
00:21:00,000 --> 00:21:02,000
然后不用接显示器

516
00:21:02,000 --> 00:21:04,000
我没有显示器嘛

517
00:21:04,000 --> 00:21:07,000
然后我想那没有显示器到时候是有点问题我怎么去调它对吧

518
00:21:07,000 --> 00:21:08,000
OK

519
00:21:08,000 --> 00:21:09,000
有这么一个东西还挺好

520
00:21:09,000 --> 00:21:13,000
然后我就找了一圈发现那个就是消费级的这种产品

521
00:21:13,000 --> 00:21:16,000
就是就是就是家用主板

522
00:21:16,000 --> 00:21:18,000
基本上都不支持这个功能

523
00:21:18,000 --> 00:21:20,000
就只能作罢了

524
00:21:20,000 --> 00:21:22,000
OK

525
00:21:22,000 --> 00:21:25,000
如果可以的话呢就是 60 年的技术又一次来

526
00:21:25,000 --> 00:21:26,000
还拯救屁股

527
00:21:26,000 --> 00:21:35,000
对对我们还是不断的在把那个几十年前的老东西把它包一层一层包起来接着用

528
00:21:35,000 --> 00:21:38,000
对越基础的技术越可靠

529
00:21:38,000 --> 00:21:38,000
啊

530
00:21:38,000 --> 00:21:40,000
越底层的技术越可靠

531
00:21:40,000 --> 00:21:50,000
其实其实你真的这么觉得吗我一直在想如果说我现在我们不需要那些各种什么 TTY 了对吧我们也不需要这个这个叫什么啊这个什么终端

532
00:21:50,000 --> 00:21:59,000
就理论上是不需要这个中端模拟器我们如果这个东西推倒重头再来我们还会这样层层包吗因为因为层层包的话其实是有那个复杂度

533
00:21:59,000 --> 00:22:01,000
是累加的吗

534
00:22:01,000 --> 00:22:09,000
是我觉得角度是这样的就是如果你的前提是所有的 legacy 的设备全都不存在了

535
00:22:09,000 --> 00:22:14,000
重启炉灶以现有的知识积累和技术水平重启炉灶那肯定不需要

536
00:22:14,000 --> 00:22:18,000
对就会我觉得会至少叫多简单干净很多吗

537
00:22:18,000 --> 00:22:23,000
对我的点就是因为世界上还有这么多 legacy 的东西存在所以没有办法

538
00:22:23,000 --> 00:22:24,000
对

539
00:22:24,000 --> 00:22:27,000
就什么那个那个老话又起作用了哈

540
00:22:27,000 --> 00:22:29,000
If you ain't break don't fix it

541
00:22:29,000 --> 00:22:30,000
Yeah

542
00:22:30,000 --> 00:22:35,000
我想还有一句什么话是谁说的呢

543
00:22:35,000 --> 00:22:45,000
是 stolstrop 说的就是那个思念家支付说的我不确定是不是他说的但是他说过这么一句话就是类似于什么你不确定是不是他说的但是他说的

544
00:22:45,000 --> 00:22:51,000
哈哈哈哈哈哈好冤啊没事你说吧我们知道了

545
00:22:51,000 --> 00:22:55,000
哈哈哈哈就他说过类似于一句什么所谓 legacy code

546
00:22:55,000 --> 00:22:56,000
嗯哼

547
00:22:56,000 --> 00:23:02,000
嗯和你想要把它删掉重新写的那些 code 相比嗯

548
00:23:02,000 --> 00:23:05,000
嗯那 legacy code 才是真正

549
00:23:05,000 --> 00:23:06,000
work 并且 scalable

550
00:23:06,000 --> 00:23:20,000
就是对在你总觉得这堆破烂玩意儿应该被替换掉之前应该考虑到其实你写出来的替换掉那个东西可能根本就跑不起来

551
00:23:20,000 --> 00:23:23,000
在这个潜在危险性这句话好全是吧感觉

552
00:23:23,000 --> 00:23:25,000
哈哈哈哈

553
00:23:25,000 --> 00:23:27,000
对好吧

554
00:23:27,000 --> 00:23:32,000
对这个不要重新发明轮子了也是另外一种解释了

555
00:23:32,000 --> 00:23:33,000
没错

556
00:23:33,000 --> 00:23:37,000
呃然后我们上次还提到一个概念就是 console

557
00:23:37,000 --> 00:23:38,000
嗯哼

558
00:23:38,000 --> 00:23:43,000
而 console 其实又是一个比 comment line interface 更

559
00:23:43,000 --> 00:23:46,000
呃更泛化的概念吧

560
00:23:46,000 --> 00:23:50,000
你能说至少我是在中文翻译成叫控制台

561
00:23:50,000 --> 00:23:51,000
控制台

562
00:23:51,000 --> 00:24:00,000
对最开始啊这个我这个我可以说上次我去那个就是在那个那个那个那个那个那个加州那个叫就是计算机酒店博物馆

563
00:24:00,000 --> 00:24:03,000
酒店博物馆

564
00:24:03,000 --> 00:24:04,000
OK

565
00:24:04,000 --> 00:24:07,000
那叫什么呃 m computer history museum 呃计算机历史博物馆里面

566
00:24:07,000 --> 00:24:09,000
hotel california

567
00:24:09,000 --> 00:24:11,000
没什么非常无聊的笑话

568
00:24:11,000 --> 00:24:18,000
然后我见过那个 console 那个词的对应的本来的那个东西了就正儿八点是一个控制台

569
00:24:18,000 --> 00:24:34,000
就你给你想象一下那个以前那个那个新闻联播里面你想象一下那个当时发这个什么神州几号来的那个时候你看那个那个那个那个就叫什么那个那个那个那个房间叫什么很多人坐到那个房间呃指指挥室

570
00:24:34,000 --> 00:24:41,000
什么卫室对还是 whatever 就是那个房间总控室对对他前面不是一堆的有一堆那种白色的柜子上面有很多屏幕很多按钮嘛

571
00:24:42,000 --> 00:24:50,000
对那个那个有很多按钮可以搬来搬去可以按来按去那个桌子就叫 console 就要控制台嘛

572
00:24:50,000 --> 00:24:53,000
对然后来那只是说我们在这个计算机里面

573
00:24:54,000 --> 00:25:01,000
早期就让你虚拟化对早期计算机确实也是有那么多这个按钮和这个对一大堆灯一堆那堆闪样的灯对是要搬的

574
00:25:01,000 --> 00:25:15,000
但后来我们现在把它就是虚拟成一个一个窗口了之后吧就就变成一个任何一个有这种控制监控功能的都变成一个 console 了就说就是 OS 10 里面自带一个 console 的应用你知道吗

575
00:25:16,000 --> 00:25:31,000
对这个一开始还迷惑我了好久我心想这个 console app 为什么不能做 terminal 用后来发现哦还有一个 terminal app 他这个 console 其实是看 log 的对这个还是有点迷惑性的对呃对这个是 console 的概念

576
00:25:31,000 --> 00:25:38,000
本源吧三世而且你知道现在的 PC game 和的对应物是什么是 console game

577
00:25:38,000 --> 00:25:44,000
主机也是它的游戏主机也是 console 这个词哎这个我意思这个又是什么来头

578
00:25:44,000 --> 00:26:01,000
我觉得就是因为那个 console 呃在早期的游戏机有早期游戏机的形式就是一个控制台嘛就是一个有很多按钮然后呃分下来两个手柄的一个控制台那个亚达利不就是一个巨大

579
00:26:01,000 --> 00:26:08,000
然后有一个按钮然后有一个按钮这个东西其实就是一个 console 你是说红白机也算是 console 吗红白机算是 console

580
00:26:08,000 --> 00:26:19,000
然后最典型的就是接机嘛接机呢本身就是一个带显示器的控制台啊对这个算是还有个摇杆

581
00:26:19,000 --> 00:26:27,000
没错所以后来的这个像 PS 解 234 也就像有点 console game

582
00:26:27,000 --> 00:26:41,000
对应该是这么来的吧我觉得 ok 就嗯然后 console 这个词也在很多的嗯很多软件甚至游戏里面出现比如说 quick 或者是呃那个辐射 4 也有 console

583
00:26:41,000 --> 00:26:49,000
就是他那个功能是什么就是要其实就是让其实是在程序内置一个修改器

584
00:26:49,000 --> 00:27:01,000
那来调试的对啊然后你可以随便改这个游戏的内部就 ID 那个 quick 里面就是等等 quick 的无敌模式是在 console 看忘了但是应该是

585
00:27:01,000 --> 00:27:31,000
嗯 ok 好吧因为还有就是其实大案就可以理解就是他们做了一个 report 对吧在成对 game 游戏里面做了一个 report 可以实时的改游戏的一些东西啊就不自在那个游戏修改器吗没错而且我觉得将来这个训练室里面肯定也会有这么一个东西就是你你在训练你在带 VRNG 看口里面写来看代码的天出现一个美女对哈哈哈你已婚了 Rail

586
00:27:31,000 --> 00:28:01,000
不能这样这个这个这个出现一个美女这个有什么问题吗好吧那出现一个帅哥好吧 ok 这个好像是更正式不正确还是然后你在虚拟现实里面先按一下那个呃呼唾 console 键就可以在呃眼前凭空出现一个巨大的 terminal 哎这不是上帝吗要有光对上帝模式嗯什么 environment.light 等于

587
00:28:01,000 --> 00:28:04,000
好像是不开我们日期 Katherine 按对就有光对就有光

588
00:28:05,000 --> 00:28:09,000
wp play corps 对おき啊呃

589
00:28:09,000 --> 00:28:14,000
然后我们上一期提到了 cell 那那 cell 可以说是一个在呃

590
00:28:15,000 --> 00:28:20,000
command 是一个提供了 commandline interface 的呃

591
00:28:20,000 --> 00:28:24,000
跑在 Terminals Emulator 里面的一个程序

592
00:28:24,000 --> 00:28:26,000
对吧

593
00:28:26,000 --> 00:28:28,000
但是呢

594
00:28:28,000 --> 00:28:32,000
Windows Command Line 并不是一个 Shell

595
00:28:32,000 --> 00:28:33,000
哦

596
00:28:33,000 --> 00:28:34,000
那它是什么

597
00:28:34,000 --> 00:28:39,000
我觉得不是一个 Shell 吧

598
00:28:39,000 --> 00:28:41,000
我不知道这个

599
00:28:41,000 --> 00:28:42,000
它那个具体实现

600
00:28:42,000 --> 00:28:42,000
这是一个问题

601
00:28:42,000 --> 00:28:43,000
这是一个问题

602
00:28:43,000 --> 00:28:43,000
你觉得

603
00:28:43,000 --> 00:28:47,000
因为你看 DOS 本身是一个

604
00:28:47,000 --> 00:28:48,000
最开始的时候

605
00:28:48,000 --> 00:28:50,000
是一个操作系统

606
00:28:50,000 --> 00:28:52,000
然后这个操作系统

607
00:28:52,000 --> 00:28:54,000
为你提供的一个界面

608
00:28:54,000 --> 00:28:55,000
就是一个 Command Line Interface

609
00:28:55,000 --> 00:28:59,000
但是 DOS 并没有内核跟

610
00:28:59,000 --> 00:29:01,000
就它没有这个区分

611
00:29:01,000 --> 00:29:02,000
差区分

612
00:29:02,000 --> 00:29:03,000
对吧

613
00:29:03,000 --> 00:29:06,000
它也从来没有说过自己是一个

614
00:29:06,000 --> 00:29:07,000
而且它也不是

615
00:29:07,000 --> 00:29:09,000
它也并不是一个可以 Terminals 那东西

616
00:29:09,000 --> 00:29:09,000
对吧

617
00:29:09,000 --> 00:29:11,000
你在 DOS 上面并没有一个

618
00:29:11,000 --> 00:29:13,000
不能用其他 Shell

619
00:29:13,000 --> 00:29:14,000
对

620
00:29:14,000 --> 00:29:16,000
因为它没有这个 Shell 的概念

621
00:29:16,000 --> 00:29:17,000
所以它根本不是一个 Shell

622
00:29:17,000 --> 00:29:18,000
我可以这么理解吗

623
00:29:18,000 --> 00:29:18,000
明白

624
00:29:18,000 --> 00:29:20,000
但是 PowerShell 却是一个 Shell

625
00:29:20,000 --> 00:29:22,000
哈哈哈

626
00:29:22,000 --> 00:29:23,000
可以这么理解吗

627
00:29:23,000 --> 00:29:24,000
它自己都叫 Shell 了吗

628
00:29:24,000 --> 00:29:25,000
对

629
00:29:25,000 --> 00:29:29,000
PowerShell is a task automation and configuration management framework

630
00:29:29,000 --> 00:29:34,000
然后它有一个 consisting of a common line shell

631
00:29:34,000 --> 00:29:41,000
然后可以使用这个脚本语言来操纵

632
00:29:41,000 --> 00:29:42,000
DARNET framework

633
00:29:42,000 --> 00:29:46,000
所以它可以理解为是有 Shell 跟内核的区分的

634
00:29:46,000 --> 00:29:48,000
虽然它还是不支持你换成其他的 Shell

635
00:29:48,000 --> 00:29:51,000
仅此一家别无分店

636
00:29:51,000 --> 00:29:53,000
没错

637
00:29:53,000 --> 00:29:54,000
好吧

638
00:29:54,000 --> 00:30:01,000
然后上一期我们其实应该给出一个链接叫 TTYDEMYSTIFYED

639
00:30:01,000 --> 00:30:06,000
这个链接我们会贴在这个 show notes 里面

640
00:30:06,000 --> 00:30:09,000
然后它非常详细的介绍了从

641
00:30:09,000 --> 00:30:12,000
好吧也不是特别详细

642
00:30:12,000 --> 00:30:15,000
但是它介绍了这个从 60 年代的这个

643
00:30:15,000 --> 00:30:16,000
考了下古

644
00:30:16,000 --> 00:30:22,000
对从这个 TELETYPE 一直到今天所有的 Terminal Simulator 的一些共同的特性

645
00:30:22,000 --> 00:30:30,000
比如说它告诉你怎样才能比如说你有一个 80 x 40 的窗口

646
00:30:30,000 --> 00:30:37,000
然后你通过输入指定 TTY 的一些特征可以让这个窗口变成比如说 80 x 20

647
00:30:37,000 --> 00:30:42,000
然后你会发现在这个窗口里面开始的所有的 COI 的程序

648
00:30:42,000 --> 00:30:45,000
比如说 VIM 它就会只占这个窗口的一半大小

649
00:30:45,000 --> 00:30:52,000
然后他介绍了什么是这个中端反射器的 RAW MODE

650
00:30:52,000 --> 00:30:53,000
就是原始模式

651
00:30:53,000 --> 00:30:56,000
它不再是因为非原始模式之下

652
00:30:56,000 --> 00:31:01,000
非原始模式之下这个中端反射器会提供一些 LINE EDITING 功能

653
00:31:01,000 --> 00:31:04,000
就是比如说你前进一行善意字符呀

654
00:31:04,000 --> 00:31:11,000
前进光标 R 之类的这些功能只会在这个 LINE EDITING 模式之下提供

655
00:31:11,000 --> 00:31:16,000
然后如果你进入这个原生模式 RAW 模式的话就这些东西都没有了

656
00:31:16,000 --> 00:31:21,000
然后一些比如说全屏的 Editor Emacs VR

657
00:31:21,000 --> 00:31:27,000
全都是在这个原生模式下进行控制这个光标的全屏移动

658
00:31:27,000 --> 00:31:29,000
还是蛮蛮有意思的吧

659
00:31:29,000 --> 00:31:33,000
如果你有这个有心去做

660
00:31:33,000 --> 00:31:36,000
比如说我也不知道 NeoMac 的那个

661
00:31:36,000 --> 00:31:37,000
那 sorry

662
00:31:37,000 --> 00:31:41,000
NeoVIM 的开发的话可以去可以去看一看

663
00:31:41,000 --> 00:31:42,000
嗯

664
00:31:43,000 --> 00:31:43,000
对

665
00:31:46,000 --> 00:31:47,000
嗯

666
00:31:48,000 --> 00:31:51,000
所以我们这一期还要介绍一下

667
00:31:51,000 --> 00:31:53,000
比较知名的中端反射器

668
00:31:54,000 --> 00:31:55,000
嗯

669
00:31:55,000 --> 00:31:56,000
你用的哪个

670
00:31:57,000 --> 00:32:03,000
就我在家里面肯定是就在反正在 Mac 上面我觉得别窝第二家吧

671
00:32:03,000 --> 00:32:06,000
就基本上 90%的人都在用 Items

672
00:32:07,000 --> 00:32:07,000
OK

673
00:32:07,000 --> 00:32:09,000
对我也在用 Item 2

674
00:32:09,000 --> 00:32:09,000
对

675
00:32:09,000 --> 00:32:11,000
准确的说是他们的第二版

676
00:32:11,000 --> 00:32:11,000
Items 2

677
00:32:11,000 --> 00:32:12,000
对

678
00:32:12,000 --> 00:32:12,000
第二版

679
00:32:12,000 --> 00:32:15,000
这个是一个功能非常饱满的

680
00:32:16,000 --> 00:32:18,000
Terminal Simulator

681
00:32:18,000 --> 00:32:18,000
然后

682
00:32:20,000 --> 00:32:22,000
Ouestem 本身带一个 Terminal App 对吧

683
00:32:22,000 --> 00:32:23,000
对

684
00:32:23,000 --> 00:32:26,000
他有一个自带的那个中端中文叫什么

685
00:32:26,000 --> 00:32:27,000
防真器

686
00:32:27,000 --> 00:32:28,000
不

687
00:32:28,000 --> 00:32:29,000
他叫中端就叫中端

688
00:32:29,000 --> 00:32:30,000
好像就叫中端

689
00:32:30,000 --> 00:32:30,000
对

690
00:32:30,000 --> 00:32:32,000
他就叫中端.app

691
00:32:33,000 --> 00:32:33,000
对

692
00:32:33,000 --> 00:32:35,000
在中文版面应该是这样写的

693
00:32:35,000 --> 00:32:37,000
英文就 Terminal.app

694
00:32:37,000 --> 00:32:39,000
然后他那个其实也还蛮好用的

695
00:32:39,000 --> 00:32:40,000
就是在

696
00:32:41,000 --> 00:32:43,000
这些自带原生的这些

697
00:32:44,000 --> 00:32:46,000
中端防真器里面他那个还算不错的

698
00:32:46,000 --> 00:32:48,000
不过他那个比较坑的在在于

699
00:32:49,000 --> 00:32:51,000
我一直没感觉他那个分屏有什么用

700
00:32:51,000 --> 00:32:53,000
就是他们有个 Split window

701
00:32:53,000 --> 00:32:55,000
不是 Split 什么来着

702
00:32:55,000 --> 00:32:56,000
等一下

703
00:32:56,000 --> 00:32:58,000
Terminal 支持 Split window

704
00:32:58,000 --> 00:32:59,000
真的

705
00:32:59,000 --> 00:33:00,000
他有一个叫 Split pane

706
00:33:01,000 --> 00:33:03,000
就是他把一个分板

707
00:33:03,000 --> 00:33:04,000
分板对

708
00:33:04,000 --> 00:33:07,000
但是这个分板很奇怪的一点就是说

709
00:33:07,000 --> 00:33:08,000
是同一个窗口

710
00:33:08,000 --> 00:33:10,000
但你可以看他看他不同的部位

711
00:33:11,000 --> 00:33:12,000
就说

712
00:33:12,000 --> 00:33:15,000
那可能就是让人去追溯前面发生了什么

713
00:33:15,000 --> 00:33:18,000
就有可能我想出来唯一的一个用途就是说

714
00:33:18,000 --> 00:33:22,000
比如说嗯你这个利死了一堆东西

715
00:33:22,000 --> 00:33:26,000
然后你其实你只要他你要看他前面的

716
00:33:26,000 --> 00:33:26,000
一个东西

717
00:33:26,000 --> 00:33:28,000
然后你下面要照照照照打

718
00:33:28,000 --> 00:33:30,000
或者是要有个什么什么文件的名字

719
00:33:30,000 --> 00:33:32,000
或者目录你要照着去进入

720
00:33:32,000 --> 00:33:32,000
对吧

721
00:33:33,000 --> 00:33:33,000
OK

722
00:33:33,000 --> 00:33:36,000
你得如果你要这你如果你记不住的话

723
00:33:36,000 --> 00:33:37,000
如果那个比较长的话

724
00:33:37,000 --> 00:33:39,000
你得翻来翻去嘛打完再翻上去打完

725
00:33:39,000 --> 00:33:40,000
他翻上去对

726
00:33:40,000 --> 00:33:42,000
然后那个你可以把它分开

727
00:33:42,000 --> 00:33:43,000
就看还是显示同一个屏幕

728
00:33:43,000 --> 00:33:47,000
你可以在就比如说把上部的那个滚到前面去

729
00:33:47,000 --> 00:33:49,000
然后下面的还在下面挡

730
00:33:49,000 --> 00:33:52,000
因为他整个这个过程是一个类似于卷轴的模式嘛

731
00:33:52,000 --> 00:33:53,000
嗯

732
00:33:53,000 --> 00:33:55,000
就就想能只能想出这么一个应用

733
00:33:55,000 --> 00:33:57,000
但是感觉很鸡肋呀

734
00:33:57,000 --> 00:33:58,000
就没有什么用处

735
00:33:58,000 --> 00:33:59,000
这个

736
00:34:00,000 --> 00:34:02,000
特别是你用了那个叫什么

737
00:34:02,000 --> 00:34:02,000
用了那个

738
00:34:02,000 --> 00:34:04,000
Tmax 这种

739
00:34:04,000 --> 00:34:06,000
这种 multiplexer 之后

740
00:34:06,000 --> 00:34:07,000
这个东西就完全废掉了嘛

741
00:34:08,000 --> 00:34:11,000
但 Tmax 毕竟是就最近几年才出来了

742
00:34:11,000 --> 00:34:13,000
对我就说有这么一个东西

743
00:34:13,000 --> 00:34:14,000
然后他那个也比较种在于

744
00:34:14,000 --> 00:34:18,000
他好像只能上下分不能左右分

745
00:34:18,000 --> 00:34:19,000
对

746
00:34:19,000 --> 00:34:23,000
Combin 第一默认是就直接把它上下分两半

747
00:34:23,000 --> 00:34:24,000
对对

748
00:34:24,000 --> 00:34:27,000
所以就不知道他们这个怎么想的

749
00:34:27,000 --> 00:34:34,000
我觉得可能苹果在做这个时候也没有想过这个东西会变这么重要吧

750
00:34:34,000 --> 00:34:37,000
就是他没觉得这个是一个常用的应用对吧

751
00:34:37,000 --> 00:34:38,000
我估计也是

752
00:34:38,000 --> 00:34:38,000
对

753
00:34:38,000 --> 00:34:42,000
可能就是那种一个人写完之后也就不管

754
00:34:42,000 --> 00:34:43,000
我也不怎么维护了

755
00:34:43,000 --> 00:34:46,000
你看他这么多年升级也没什么变化

756
00:34:46,000 --> 00:34:46,000
对吧

757
00:34:47,000 --> 00:34:53,000
而且你看 90%的 Mac 用户只有在非常极端的情况下

758
00:34:53,000 --> 00:34:57,000
对才会去按照网上的教程打开 terminal

759
00:34:57,000 --> 00:34:59,000
然后输入一些他根本不知道是什么意思的

760
00:34:59,000 --> 00:35:02,000
那个命令来完成一些他不想要的功能

761
00:35:02,000 --> 00:35:04,000
但是这种情况现在是越来越普遍了我觉得

762
00:35:04,000 --> 00:35:07,000
就经常有一些功能让你恨不得我靠

763
00:35:07,000 --> 00:35:09,000
这个功能怎么可以做默认之上

764
00:35:09,000 --> 00:35:11,000
我一定要把它关掉

765
00:35:11,000 --> 00:35:13,000
然后就找不到在哪关

766
00:35:13,000 --> 00:35:18,000
然后最后网上一搜发现只能在这个 terminal 里关

767
00:35:18,000 --> 00:35:19,000
还挺讨厌的

768
00:35:19,000 --> 00:35:20,000
对

769
00:35:20,000 --> 00:35:24,000
我们都用这个替代板叫做 iTerm 2

770
00:35:24,000 --> 00:35:31,000
这个的大好处在于他可以把窗口就是他这个不叫 pain

771
00:35:31,000 --> 00:35:34,000
他叫 Split window 应该是

772
00:35:34,000 --> 00:35:36,000
好像还是叫 pain

773
00:35:36,000 --> 00:35:40,000
反正他在 tab 里面支持有很多

774
00:35:40,000 --> 00:35:42,000
他也叫 Split paint

775
00:35:42,000 --> 00:35:43,000
但他那个 pain 就不一样

776
00:35:43,000 --> 00:35:46,000
比如说他把一个窗口你分成两个之后

777
00:35:46,000 --> 00:35:49,000
他两边是左右是各独立的独自的一个 shell

778
00:35:49,000 --> 00:35:52,000
是一个新的 tty 对

779
00:35:52,000 --> 00:35:53,000
就没有任何关系

780
00:35:53,000 --> 00:35:54,000
这样的话就比较适合

781
00:35:54,000 --> 00:35:57,000
比如说因为屏幕一般是个长方形的东西

782
00:35:57,000 --> 00:35:59,000
你不可能说

783
00:35:59,000 --> 00:36:01,000
然后你一般打一行也不会超过一整屏

784
00:36:02,000 --> 00:36:05,000
所以你一般会把屏分成左右两半来打

785
00:36:05,000 --> 00:36:07,000
就如果你这个窗口是全屏的情况下

786
00:36:07,000 --> 00:36:09,000
所以他这个东西就比较好用

787
00:36:09,000 --> 00:36:12,000
他还支持出了左右 Split 就是左右

788
00:36:12,000 --> 00:36:14,000
拆成左右还是拆成上下

789
00:36:14,000 --> 00:36:17,000
对你还可以把这个整个屏幕分成一个填字形

790
00:36:17,000 --> 00:36:21,000
就如果你就基本上就是 tmax 能做的东西他都能做

791
00:36:21,000 --> 00:36:27,000
然后每一个分开的 pain 是一个单独的 tty

792
00:36:27,000 --> 00:36:29,000
对而且他有个很爱黑的

793
00:36:29,000 --> 00:36:32,000
应该是最近几个版本加的一个新贡

794
00:36:32,000 --> 00:36:35,000
就是他可以跟 tmax 深度整合

795
00:36:35,000 --> 00:36:36,000
他分成几个 paint

796
00:36:36,000 --> 00:36:40,000
他就等于是 tmax 里面的 tmax 里面这个应该叫 window 吧

797
00:36:40,000 --> 00:36:41,000
是吧还是叫什么呢

798
00:36:42,000 --> 00:36:43,000
好像也叫 paint

799
00:36:43,000 --> 00:36:44,000
也叫 paint

800
00:36:44,000 --> 00:36:46,000
我今天有一个命令叫 killpaint

801
00:36:46,000 --> 00:36:48,000
paint

802
00:36:48,000 --> 00:36:52,000
对主要是一个问题就是说

803
00:36:52,000 --> 00:36:53,000
因为 tmax 里面它是一个

804
00:36:53,000 --> 00:36:56,000
本来它是一个 CUI 的一个程序

805
00:36:56,000 --> 00:36:57,000
就是它是一个字符界面的

806
00:36:57,000 --> 00:37:01,000
然后它那个就是两个 paint

807
00:37:01,000 --> 00:37:03,000
这个 paint 中文叫什么一定要查一下

808
00:37:04,000 --> 00:37:05,000
版嘛

809
00:37:05,000 --> 00:37:07,000
就是就是平板的意思把我记住

810
00:37:07,000 --> 00:37:08,000
窗格

811
00:37:08,000 --> 00:37:09,000
方块

812
00:37:09,000 --> 00:37:14,000
就是把一个点上去把一个窗口分成几个小小块来用

813
00:37:14,000 --> 00:37:15,000
这么一个小格子

814
00:37:15,000 --> 00:37:16,000
它的那个界线

815
00:37:16,000 --> 00:37:18,000
它是有一个这个字符来构成的

816
00:37:18,000 --> 00:37:21,000
这样的话有个很不爽的一个原因就是在图形界面

817
00:37:21,000 --> 00:37:22,000
太沾地方了

818
00:37:22,000 --> 00:37:23,000
对太浪费空间了

819
00:37:23,000 --> 00:37:28,000
对就通常就显示一个总宽大概就是一百一两百个字符

820
00:37:28,000 --> 00:37:32,000
然后你还要牺牲掉一个这个字符位来给它呃

821
00:37:32,000 --> 00:37:35,000
那个占占那个叫什么呃

822
00:37:35,000 --> 00:37:38,000
占那个分隔线就觉得很不就觉得很不划算嘛

823
00:37:38,000 --> 00:37:40,000
然后它如果你用这个这个

824
00:37:40,000 --> 00:37:43,000
这个 iterm 2 的这个 tmax 的整合的话

825
00:37:43,000 --> 00:37:46,000
它就变成一根竖线就只占一两个像素了

826
00:37:46,000 --> 00:37:47,000
就感觉还挺好的

827
00:37:47,000 --> 00:37:48,000
没错

828
00:37:48,000 --> 00:37:50,000
但是如果你是 4 k 显示器

829
00:37:50,000 --> 00:37:51,000
然后全屏工作的话呢

830
00:37:51,000 --> 00:37:52,000
用 tmax 线白上

831
00:37:52,000 --> 00:37:55,000
至少我个人是很少有这功能

832
00:37:55,000 --> 00:37:56,000
哈哈哈

833
00:37:56,000 --> 00:37:57,000
ok

834
00:37:57,000 --> 00:38:02,000
因为我习惯的那个 tmax 快捷键就是就是跟那个呃

835
00:38:02,000 --> 00:38:03,000
dv 一样是分段式的吧

836
00:38:03,000 --> 00:38:06,000
你要先按一个前缀键然后再按一个命令

837
00:38:06,000 --> 00:38:07,000
啊

838
00:38:07,000 --> 00:38:12,000
然后如果你要在呃你要使用 iterm 2 的那一些快捷键的话

839
00:38:12,000 --> 00:38:14,000
那就是什么 command 的括号

840
00:38:14,000 --> 00:38:15,000
对

841
00:38:15,000 --> 00:38:16,000
来来切换

842
00:38:16,000 --> 00:38:19,000
而且括而且我印象没错印象也没错的话

843
00:38:19,000 --> 00:38:22,000
那个 command 加方括号的切换的方向

844
00:38:22,000 --> 00:38:26,000
跟我的希望它去的方向正好是反的

845
00:38:26,000 --> 00:38:32,000
就是我我 command 左括号希望它去下呃上一个 pain

846
00:38:32,000 --> 00:38:33,000
它会去下一个 pain

847
00:38:33,000 --> 00:38:34,000
嗯

848
00:38:34,000 --> 00:38:36,000
如果没记错的话就

849
00:38:36,000 --> 00:38:40,000
如果你有对你你开 4 个 pain

850
00:38:40,000 --> 00:38:43,000
然后呃按 command

851
00:38:43,000 --> 00:38:49,000
呃左括号你会发现那个转的方向跟你的想象的方向好像不一样

852
00:38:49,000 --> 00:38:51,000
但但我也很久没用了所以啊

853
00:38:51,000 --> 00:38:55,000
对它跟它那个旋转的方式跟你分屏的顺序有关系

854
00:38:55,000 --> 00:38:57,000
这个就比较它比较坑跌的一个地方

855
00:38:57,000 --> 00:38:57,000
对

856
00:38:57,000 --> 00:39:00,000
它会有一个这个它是一个竖状的一个结构嘛

857
00:39:00,000 --> 00:39:00,000
对

858
00:39:00,000 --> 00:39:04,000
所以跟你怎么切那个先切两个再切两个是有关系的

859
00:39:04,000 --> 00:39:06,000
就是说你看的是一个填字形结构

860
00:39:06,000 --> 00:39:10,000
它其实并不是一个就 4 个 pain

861
00:39:10,000 --> 00:39:15,000
它并不是在同一个呃这个 hierarchy 就是层级上面的

862
00:39:15,000 --> 00:39:16,000
这个可以

863
00:39:16,000 --> 00:39:19,000
然后 tmax 里面就没有疑惑

864
00:39:19,000 --> 00:39:19,000
因为这个问题

865
00:39:19,000 --> 00:39:22,000
因为 tmax 里面切换 pain 是用方向

866
00:39:22,000 --> 00:39:24,000
就是 hjkl

867
00:39:24,000 --> 00:39:25,000
可以

868
00:39:25,000 --> 00:39:26,000
哈哈哈

869
00:39:26,000 --> 00:39:27,000
对

870
00:39:27,000 --> 00:39:28,000
然后这样就没有那个

871
00:39:28,000 --> 00:39:32,000
呃至少指定一个绝对方向就可以了

872
00:39:32,000 --> 00:39:36,000
而不是这个相而不是根据呃先后顺序来

873
00:39:36,000 --> 00:39:37,000
嗯嗯

874
00:39:37,000 --> 00:39:38,000
对

875
00:39:38,000 --> 00:39:38,000
对

876
00:39:38,000 --> 00:39:39,000
有意思

877
00:39:39,000 --> 00:39:40,000
呃

878
00:39:40,000 --> 00:39:44,000
然后那个 iterm 还有一个也是最新版里面

879
00:39:44,000 --> 00:39:47,000
还是在家有一个这个有个挺爱黑的功能

880
00:39:47,000 --> 00:39:51,000
叫做这叫什么来的叫做 hotkey window

881
00:39:51,000 --> 00:39:52,000
ok

882
00:39:52,000 --> 00:39:53,000
你有用过吗

883
00:39:53,000 --> 00:39:56,000
就是一个就是按一个键它就会 drop down

884
00:39:56,000 --> 00:39:59,000
从那个全局的屏幕上面 drop down 下一个

885
00:39:59,000 --> 00:40:00,000
对对对对

886
00:40:00,000 --> 00:40:02,000
就有时候你这样运行很快的运行几个东西

887
00:40:02,000 --> 00:40:04,000
然后你就懒得去管窗口的话

888
00:40:04,000 --> 00:40:07,000
就管理窗口的话这个是一个也挺非常好用的功能

889
00:40:07,000 --> 00:40:13,000
对这个其实是 links 上面的一些呃呃那个 terminal

890
00:40:13,000 --> 00:40:15,000
里面的一些先弄出来的

891
00:40:15,000 --> 00:40:15,000
对对

892
00:40:15,000 --> 00:40:17,000
然后那个 iterm 超过来的

893
00:40:17,000 --> 00:40:18,000
对没错

894
00:40:18,000 --> 00:40:19,000
嗯

895
00:40:19,000 --> 00:40:20,000
还是挺有用的吧

896
00:40:20,000 --> 00:40:21,000
但我是没用过

897
00:40:21,000 --> 00:40:23,000
你看就我还蛮常用这个功能有时候查

898
00:40:23,000 --> 00:40:24,000
ok

899
00:40:24,000 --> 00:40:25,000
很快速的运行

900
00:40:25,000 --> 00:40:27,000
我的那个 terminal 就是一直跑是吗

901
00:40:27,000 --> 00:40:28,000
然后一直

902
00:40:28,000 --> 00:40:29,000
旁边 tab 过去

903
00:40:29,000 --> 00:40:30,000
一直都是全屏的

904
00:40:30,000 --> 00:40:31,000
对

905
00:40:31,000 --> 00:40:32,000
哈哈哈

906
00:40:32,000 --> 00:40:34,000
好吧

907
00:40:34,000 --> 00:40:35,000
ok

908
00:40:35,000 --> 00:40:37,000
呃就所以 mac 上面

909
00:40:37,000 --> 00:40:40,000
就是大致上就要要不就是用这个系统自带的

910
00:40:40,000 --> 00:40:41,000
要不就是用这个 iterm 2

911
00:40:41,000 --> 00:40:41,000
还有别的吗

912
00:40:41,000 --> 00:40:45,000
还其实还有一些非常古早的 terminal

913
00:40:45,000 --> 00:40:45,000
像的

914
00:40:45,000 --> 00:40:46,000
比如说 email

915
00:40:46,000 --> 00:40:48,000
像的比如说那个一个叫 zterm 的

916
00:40:48,000 --> 00:40:50,000
就现在已经没有什么用了

917
00:40:50,000 --> 00:40:51,000
对

918
00:40:51,000 --> 00:40:54,000
可能两三年前还更新过吧

919
00:40:54,000 --> 00:40:55,000
它是而且它是从

920
00:40:55,000 --> 00:40:57,000
呃

921
00:40:57,000 --> 00:40:57,000
呃

922
00:40:57,000 --> 00:40:59,000
os 10 之前就有了

923
00:40:59,000 --> 00:41:00,000
就

924
00:41:00,000 --> 00:41:02,000
就是 mac os 9 就有了

925
00:41:02,000 --> 00:41:03,000
对

926
00:41:03,000 --> 00:41:05,000
可能是从 os 7 开始就有

927
00:41:05,000 --> 00:41:06,000
就如果呃

928
00:41:06,000 --> 00:41:10,000
听众们对 mac os 10 的历史不是很了解的话

929
00:41:10,000 --> 00:41:12,000
os 10 跟 os 9 是完全没有关系的

930
00:41:12,000 --> 00:41:13,000
就是

931
00:41:13,000 --> 00:41:17,000
os 10 其实是一个叫做 next step 的操纵

932
00:41:17,000 --> 00:41:18,000
呃

933
00:41:18,000 --> 00:41:20,000
被换了商标

934
00:41:20,000 --> 00:41:22,000
然后装在 mac 上面跑

935
00:41:22,000 --> 00:41:24,000
而在 os 10 之前

936
00:41:24,000 --> 00:41:25,000
os 9

937
00:41:25,000 --> 00:41:26,000
os 7

938
00:41:26,000 --> 00:41:26,000
os 8

939
00:41:26,000 --> 00:41:27,000
os 7

940
00:41:27,000 --> 00:41:30,000
这些全都是一个类似于 windows 95 的这么一个操纵

941
00:41:30,000 --> 00:41:31,000
就是呃

942
00:41:31,000 --> 00:41:32,000
呃

943
00:41:32,000 --> 00:41:33,000
呃

944
00:41:33,000 --> 00:41:34,000
是一个单任务的

945
00:41:34,000 --> 00:41:35,000
不是

946
00:41:35,000 --> 00:41:37,000
是一个伪多任务的

947
00:41:37,000 --> 00:41:39,000
操纵

948
00:41:39,000 --> 00:41:39,000
嗯嗯

949
00:41:39,000 --> 00:41:40,000
嗯

950
00:41:40,000 --> 00:41:40,000
这么说也不对

951
00:41:40,000 --> 00:41:42,000
那个正确的 term 是什么来着

952
00:41:42,000 --> 00:41:43,000
呃

953
00:41:43,000 --> 00:41:44,000
呃

954
00:41:44,000 --> 00:41:45,000
呃

955
00:41:45,000 --> 00:41:46,000
非抢战士多任务

956
00:41:46,000 --> 00:41:47,000
pre

957
00:41:47,000 --> 00:41:48,000
诶

958
00:41:48,000 --> 00:41:49,000
是叫 preemptive

959
00:41:49,000 --> 00:41:50,000
non preemptive

960
00:41:50,000 --> 00:41:51,000
嗯

961
00:41:51,000 --> 00:41:52,000
就是

962
00:41:52,000 --> 00:41:54,000
preemptive 是抢战士

963
00:41:54,000 --> 00:41:55,000
非抢战士

964
00:41:55,000 --> 00:41:56,000
cooperative

965
00:41:56,000 --> 00:41:58,000
就是协作是多任务

966
00:41:58,000 --> 00:41:58,000
对对对对

967
00:41:58,000 --> 00:41:59,000
cooperative 没错没错

968
00:41:59,000 --> 00:42:00,000
协作是多任务

969
00:42:00,000 --> 00:42:02,000
就是你一个程序在跑到一半的时候

970
00:42:02,000 --> 00:42:06,000
如果你必须不停去看有没有人需要呃

971
00:42:06,000 --> 00:42:08,000
你停下来

972
00:42:08,000 --> 00:42:08,000
对

973
00:42:08,000 --> 00:42:10,000
如果你不愿意停下来的话

974
00:42:10,000 --> 00:42:14,000
那整个系统是可以被你带着一起一起卡死的

975
00:42:14,000 --> 00:42:15,000
对

976
00:42:15,000 --> 00:42:16,000
但是这么运势的

977
00:42:16,000 --> 00:42:18,000
而这个操作系统上面

978
00:42:18,000 --> 00:42:19,000
因为它根本就不是 unix

979
00:42:19,000 --> 00:42:20,000
他

980
00:42:20,000 --> 00:42:23,000
所以他理所当然的没有 terminal

981
00:42:23,000 --> 00:42:26,000
或者没有这个 terminal emulator 这种东西

982
00:42:26,000 --> 00:42:27,000
嗯嗯

983
00:42:27,000 --> 00:42:27,000
呃

984
00:42:27,000 --> 00:42:28,000
因为你没有什么

985
00:42:28,000 --> 00:42:31,000
他就他没有一个东西是可以可以称之为内核

986
00:42:31,000 --> 00:42:32,000
嗯嗯

987
00:42:32,000 --> 00:42:34,000
然后你要在上面写程序的话

988
00:42:34,000 --> 00:42:37,000
那你也不会从这个控制台的程序开始写

989
00:42:37,000 --> 00:42:39,000
而你是直接在一个比如说什么

990
00:42:39,000 --> 00:42:40,000
呃

991
00:42:40,000 --> 00:42:44,000
coldwarrior 或者是那个苹果自己的那个卖很贵的一个

992
00:42:44,000 --> 00:42:46,000
开发工具叫什么我忘了

993
00:42:46,000 --> 00:42:47,000
嗯

994
00:42:47,000 --> 00:42:48,000
嗯

995
00:42:48,000 --> 00:42:53,000
反正你需要再用一套这个图形化的开发工具来学变成

996
00:42:53,000 --> 00:42:55,000
而不是在一个控制台里面去

997
00:42:55,000 --> 00:42:57,000
然后呃

998
00:42:57,000 --> 00:43:03,000
那那个时代你如果想要做一些比如说 telnet 或者是呃

999
00:43:03,000 --> 00:43:05,000
用什么呃

1000
00:43:05,000 --> 00:43:08,000
拨号上网下文件呃

1001
00:43:08,000 --> 00:43:14,000
BBS 这种东西那你必须使用 zterm 这种真正的中等网站器

1002
00:43:14,000 --> 00:43:16,000
OK

1003
00:43:16,000 --> 00:43:16,000
对

1004
00:43:16,000 --> 00:43:17,000
还是

1005
00:43:17,000 --> 00:43:19,000
但现在已经没有人用了我相信

1006
00:43:19,000 --> 00:43:22,000
你念这个 z 的时候特别好玩

1007
00:43:22,000 --> 00:43:23,000
为什么

1008
00:43:23,000 --> 00:43:24,000
特别像贼

1009
00:43:24,000 --> 00:43:26,000
OK

1010
00:43:26,000 --> 00:43:27,000
贼 term

1011
00:43:27,000 --> 00:43:28,000
贼 term

1012
00:43:28,000 --> 00:43:31,000
zterm

1013
00:43:31,000 --> 00:43:34,000
z 的

1014
00:43:34,000 --> 00:43:38,000
z 的念法在英语里和美语里是不一样的对吧

1015
00:43:38,000 --> 00:43:39,000
对很不一样

1016
00:43:39,000 --> 00:43:40,000
呃

1017
00:43:40,000 --> 00:43:41,000
英语是什么 z

1018
00:43:41,000 --> 00:43:42,000
呃

1019
00:43:42,000 --> 00:43:43,000
应该是吧 z

1020
00:43:43,000 --> 00:43:44,000
对

1021
00:43:44,000 --> 00:43:46,000
然后美语是 z

1022
00:43:46,000 --> 00:43:46,000
z

1023
00:43:46,000 --> 00:43:47,000
对

1024
00:43:47,000 --> 00:43:47,000
OK

1025
00:43:47,000 --> 00:43:48,000
啊

1026
00:43:48,000 --> 00:43:51,000
确实有个就口音差别还是蛮大

1027
00:43:51,000 --> 00:43:53,000
啊

1028
00:43:53,000 --> 00:43:53,000
啊

1029
00:43:53,000 --> 00:43:59,000
那个其实中端模拟器中端仿真器啊老师改不过来

1030
00:43:59,000 --> 00:44:03,000
中端仿真器在 Linux 下面其实挺泛滥的哈

1031
00:44:03,000 --> 00:44:07,000
对在 unix 下面的中端仿真器简直是百花齐放

1032
00:44:07,000 --> 00:44:09,000
因为它是怎么说呢

1033
00:44:09,000 --> 00:44:13,000
是所有这些 unix 下面的呃

1034
00:44:13,000 --> 00:44:16,000
唯一一个最最

1035
00:44:16,000 --> 00:44:20,000
必不可少不可或缺的东西吧

1036
00:44:20,000 --> 00:44:20,000
嗯

1037
00:44:20,000 --> 00:44:26,000
就不管你你是使用哪种 Linux 你无论如何至少要用用到中端

1038
00:44:26,000 --> 00:44:29,000
所以中端仿真器也是特别特别的呃

1039
00:44:29,000 --> 00:44:30,000
百花齐放

1040
00:44:30,000 --> 00:44:32,000
比如说最原始的

1041
00:44:32,000 --> 00:44:36,000
就是 x windows 上面的那个 x term

1042
00:44:36,000 --> 00:44:37,000
嗯嗯

1043
00:44:37,000 --> 00:44:39,000
就如果你装一个 Linux 系统

1044
00:44:39,000 --> 00:44:43,000
只装它的那个 base system 不装 GUI 的话

1045
00:44:43,000 --> 00:44:45,000
然后你一个包一个包往上装

1046
00:44:45,000 --> 00:44:46,000
当你装好 x or g 的时候

1047
00:44:46,000 --> 00:44:48,000
嗯嗯

1048
00:44:48,000 --> 00:44:50,000
基本上你就会有什么 x clock

1049
00:44:50,000 --> 00:44:51,000
嗯

1050
00:44:51,000 --> 00:44:52,000
x i

1051
00:44:52,000 --> 00:44:53,000
和 x term

1052
00:44:53,000 --> 00:44:53,000
这是

1053
00:44:53,000 --> 00:44:55,000
呃

1054
00:44:55,000 --> 00:44:56,000
这是三个基本上呃

1055
00:44:56,000 --> 00:44:59,000
可以验证 windows 是不是正常装好的程序

1056
00:44:59,000 --> 00:45:00,000
对

1057
00:45:00,000 --> 00:45:02,000
x term 的这个

1058
00:45:02,000 --> 00:45:03,000
功能也非常简单

1059
00:45:03,000 --> 00:45:05,000
首先他不支持 true type

1060
00:45:05,000 --> 00:45:08,000
他的所有字都是点阵字体

1061
00:45:08,000 --> 00:45:09,000
OK

1062
00:45:09,000 --> 00:45:10,000
嗯

1063
00:45:10,000 --> 00:45:13,000
不就跟他的那个图形环境有关系吗

1064
00:45:13,000 --> 00:45:14,000
没错

1065
00:45:14,000 --> 00:45:14,000
就 x

1066
00:45:14,000 --> 00:45:15,000
x

1067
00:45:15,000 --> 00:45:16,000
其实默认什么也不行

1068
00:45:16,000 --> 00:45:18,000
就是只能显示点和线

1069
00:45:18,000 --> 00:45:19,000
什么的

1070
00:45:19,000 --> 00:45:20,000
什么的

1071
00:45:20,000 --> 00:45:23,000
非常原始的呃

1072
00:45:23,000 --> 00:45:25,000
这个叫什么

1073
00:45:25,000 --> 00:45:26,000
图形界面

1074
00:45:26,000 --> 00:45:26,000
对

1075
00:45:26,000 --> 00:45:27,000
graphic

1076
00:45:27,000 --> 00:45:29,000
然后呃

1077
00:45:29,000 --> 00:45:29,000
x term

1078
00:45:29,000 --> 00:45:33,000
你只要稍微有一点呃

1079
00:45:33,000 --> 00:45:34,000
追求

1080
00:45:34,000 --> 00:45:37,000
就不会使用 x term

1081
00:45:37,000 --> 00:45:38,000
只能这么说的

1082
00:45:38,000 --> 00:45:39,000
对

1083
00:45:39,000 --> 00:45:40,000
然后呃

1084
00:45:40,000 --> 00:45:42,000
在超越 x term

1085
00:45:42,000 --> 00:45:43,000
但是只依赖 x windows 的东西

1086
00:45:43,000 --> 00:45:45,000
基本上就是就是什么呃

1087
00:45:45,000 --> 00:45:47,000
最知名的一个叫做 rxvt

1088
00:45:47,000 --> 00:45:49,000
嗯

1089
00:45:49,000 --> 00:45:51,000
rxvt

1090
00:45:51,000 --> 00:45:51,000
好

1091
00:45:51,000 --> 00:45:53,000
搞不好是来自于 virtual terminal

1092
00:45:53,000 --> 00:45:55,000
那

1093
00:45:55,000 --> 00:45:55,000
那个

1094
00:45:55,000 --> 00:45:56,000
对

1095
00:45:56,000 --> 00:45:57,000
应该是

1096
00:45:57,000 --> 00:45:58,000
对

1097
00:45:58,000 --> 00:45:58,000
应该是

1098
00:45:58,000 --> 00:46:00,000
那 rrr 什么意思

1099
00:46:00,000 --> 00:46:02,000
就这个这个我是当年用的最迷糊的

1100
00:46:02,000 --> 00:46:04,000
因为这个名字完全没法记

1101
00:46:04,000 --> 00:46:04,000
对吧

1102
00:46:04,000 --> 00:46:05,000
对

1103
00:46:05,000 --> 00:46:08,000
这个是需要很多次呃

1104
00:46:08,000 --> 00:46:08,000
呃

1105
00:46:08,000 --> 00:46:10,000
死机硬碑才可以记下来的

1106
00:46:10,000 --> 00:46:10,000
对

1107
00:46:10,000 --> 00:46:12,000
那你完全不明白它它到底是什么意思

1108
00:46:12,000 --> 00:46:13,000
然后你就用

1109
00:46:13,000 --> 00:46:16,000
而且它有好有几个变种

1110
00:46:16,000 --> 00:46:19,000
比如什么 urxvt

1111
00:46:19,000 --> 00:46:19,000
跟它有什么关系

1112
00:46:19,000 --> 00:46:20,000
我一直没搞明白

1113
00:46:20,000 --> 00:46:21,000
ok 呃

1114
00:46:21,000 --> 00:46:26,000
urxvt 的全的正确名称应该是 rxvtunicode

1115
00:46:26,000 --> 00:46:28,000
这样就明白它是什么干什么用了

1116
00:46:28,000 --> 00:46:29,000
啊

1117
00:46:29,000 --> 00:46:30,000
就是支持 unicode 的那个字

1118
00:46:30,000 --> 00:46:30,000
没错

1119
00:46:30,000 --> 00:46:31,000
ok

1120
00:46:31,000 --> 00:46:32,000
早期的 x term

1121
00:46:32,000 --> 00:46:33,000
其实就只支持那个

1122
00:46:33,000 --> 00:46:36,000
真正的 terminal 的那个

1123
00:46:36,000 --> 00:46:37,000
呃

1124
00:46:37,000 --> 00:46:38,000
叫什么

1125
00:46:38,000 --> 00:46:39,000
vtr 20

1126
00:46:39,000 --> 00:46:40,000
啊

1127
00:46:40,000 --> 00:46:42,000
是一个

1128
00:46:42,000 --> 00:46:44,000
我具体是干嘛它我也不知道

1129
00:46:44,000 --> 00:46:46,000
我毕竟只是 80 年代出生的人

1130
00:46:46,000 --> 00:46:48,000
不是 60 年代出生的

1131
00:46:48,000 --> 00:46:51,000
如果早出生 20 年可能会知道 vt 200 到底是什么东西

1132
00:46:51,000 --> 00:46:52,000
但

1133
00:46:52,000 --> 00:46:56,000
现在我只能猜测 vt 200 就是一个终端机的型号

1134
00:46:56,000 --> 00:46:58,000
然后这个终端机型号的

1135
00:46:58,000 --> 00:47:00,000
这个终端机的一些电气特性和

1136
00:47:00,000 --> 00:47:02,000
不不不是电气特性

1137
00:47:02,000 --> 00:47:05,000
是一些那个呃

1138
00:47:05,000 --> 00:47:12,000
数据特性被对被仿真出来的就也就说它其实是一种协议

1139
00:47:12,000 --> 00:47:13,000
ok

1140
00:47:13,000 --> 00:47:18,000
然后这个呃 rxvt 就模仿了 vt 102 应该是对

1141
00:47:18,000 --> 00:47:21,000
然后 exter 模拟是 vt 220

1142
00:47:21,000 --> 00:47:22,000
啊

1143
00:47:22,000 --> 00:47:24,000
但到底是什么意思我也不知道

1144
00:47:24,000 --> 00:47:25,000
哈哈哈

1145
00:47:25,000 --> 00:47:30,000
这些都是属于上上古时期的呃留下来的神物

1146
00:47:30,000 --> 00:47:31,000
对

1147
00:47:31,000 --> 00:47:33,000
relic

1148
00:47:33,000 --> 00:47:34,000
哈哈哈

1149
00:47:34,000 --> 00:47:35,000
呃

1150
00:47:35,000 --> 00:47:36,000
呃

1151
00:47:36,000 --> 00:47:38,000
然后要说就是刚才那那几个都其实并不好用

1152
00:47:38,000 --> 00:47:40,000
而且配置也很麻烦

1153
00:47:40,000 --> 00:47:41,000
呃

1154
00:47:41,000 --> 00:47:42,000
呃

1155
00:47:42,000 --> 00:47:45,000
我也不知道 r u rxvt 还是有一对拥盾

1156
00:47:45,000 --> 00:47:46,000
呃

1157
00:47:46,000 --> 00:47:47,000
呃

1158
00:47:47,000 --> 00:47:55,000
就是尤其是你在使用一些比较呃呃 bearbone 的窗口管理器的时候就是你不你不使如果你不喜欢

1159
00:47:55,000 --> 00:47:57,000
gdonom 或者 kde

1160
00:47:57,000 --> 00:47:59,000
然后你要用一些比较原始的

1161
00:47:59,000 --> 00:48:03,000
或者比较简单的窗口管理器的话

1162
00:48:03,000 --> 00:48:06,000
URXVT 还是挺受欢迎的

1163
00:48:06,000 --> 00:48:08,000
因为它比较轻量级对吧

1164
00:48:08,000 --> 00:48:10,000
对它轻量级它只是纯 C 写的

1165
00:48:10,000 --> 00:48:11,000
然后它又支持 Unical

1166
00:48:11,000 --> 00:48:15,000
那基本上多了你也不需要对吧

1167
00:48:15,000 --> 00:48:18,000
这两个其实都不算太常用

1168
00:48:18,000 --> 00:48:21,000
因为就没有什么主流的 Nex 发行

1169
00:48:21,000 --> 00:48:25,000
把它们当做默认的终端仿真器

1170
00:48:25,000 --> 00:48:30,000
所以我们目前见的最多的两个反应是什么

1171
00:48:30,000 --> 00:48:33,000
一个是像 Ubuntu

1172
00:48:33,000 --> 00:48:37,000
就是 Debian 这一系的发布的 Genome Terminal

1173
00:48:37,000 --> 00:48:37,000
对吧

1174
00:48:37,000 --> 00:48:39,000
是叫怎么念的

1175
00:48:39,000 --> 00:48:42,000
然后一个是 KDE

1176
00:48:42,000 --> 00:48:45,000
它也会叫做 Council

1177
00:48:45,000 --> 00:48:46,000
但是不是 C 开头

1178
00:48:46,000 --> 00:48:48,000
是 K 开头的 Council

1179
00:48:48,000 --> 00:48:49,000
这两个东西

1180
00:48:49,000 --> 00:48:52,000
这两个就怎么说呢

1181
00:48:52,000 --> 00:48:55,000
我用的 Genome

1182
00:48:55,000 --> 00:48:57,000
Gnome

1183
00:48:57,000 --> 00:48:58,000
怎么念这个东西

1184
00:48:58,000 --> 00:48:59,000
我是念 Gnome

1185
00:48:59,000 --> 00:49:00,000
Gnome

1186
00:49:00,000 --> 00:49:00,000
对

1187
00:49:00,000 --> 00:49:01,000
Terminal

1188
00:49:01,000 --> 00:49:02,000
这个就比较用的比较多

1189
00:49:02,000 --> 00:49:03,000
中规中矩吧

1190
00:49:03,000 --> 00:49:07,000
就没有什么特别出彩的特性

1191
00:49:07,000 --> 00:49:09,000
但是就长得很正常

1192
00:49:09,000 --> 00:49:11,000
Council

1193
00:49:11,000 --> 00:49:13,000
其实 KDE 的环境我都没怎么用过

1194
00:49:13,000 --> 00:49:14,000
我也很少用

1195
00:49:14,000 --> 00:49:16,000
KDE 太花了

1196
00:49:16,000 --> 00:49:17,000
我觉得

1197
00:49:17,000 --> 00:49:19,000
这个是当年那个

1198
00:49:19,000 --> 00:49:21,000
是 Venus 95 时代

1199
00:49:21,000 --> 00:49:23,000
XP 时代的那种审美风格

1200
00:49:23,000 --> 00:49:24,000
一直流传到现在

1201
00:49:24,000 --> 00:49:25,000
也是

1202
00:49:25,000 --> 00:49:26,000
当时他们还是很吵的

1203
00:49:26,000 --> 00:49:28,000
他们那个 KDE 当时

1204
00:49:28,000 --> 00:49:31,000
因为当时是那个 Mac OS X 刚出来

1205
00:49:31,000 --> 00:49:33,000
比如那个水滴那种

1206
00:49:33,000 --> 00:49:35,000
那种水滴透明的效果

1207
00:49:35,000 --> 00:49:36,000
对

1208
00:49:36,000 --> 00:49:39,000
然后那个 KDE 的桌面

1209
00:49:39,000 --> 00:49:39,000
哇

1210
00:49:39,000 --> 00:49:40,000
这个不错

1211
00:49:40,000 --> 00:49:42,000
我们把它发扬光大了

1212
00:49:42,000 --> 00:49:43,000
全盘超喜

1213
00:49:43,000 --> 00:49:45,000
花花绿绿的

1214
00:49:45,000 --> 00:49:46,000
这种感觉你开了一

1215
00:49:46,000 --> 00:49:47,000
你在一个

1216
00:49:47,000 --> 00:49:48,000
那感觉像什么呢

1217
00:49:48,000 --> 00:49:50,000
感觉像是在一个

1218
00:49:50,000 --> 00:49:52,000
灯光明亮的糖果店的感觉

1219
00:49:52,000 --> 00:49:53,000
没错

1220
00:49:53,000 --> 00:49:54,000
对

1221
00:49:54,000 --> 00:49:55,000
但是又很

1222
00:49:55,000 --> 00:49:56,000
怎么说呢

1223
00:49:56,000 --> 00:49:56,000
有点

1224
00:49:56,000 --> 00:49:57,000
很三俗

1225
00:49:57,000 --> 00:49:58,000
Kits

1226
00:49:58,000 --> 00:49:58,000
对

1227
00:49:58,000 --> 00:50:01,000
我们要被喷了

1228
00:50:01,000 --> 00:50:02,000
没事

1229
00:50:02,000 --> 00:50:04,000
这 KDE 德国人写了

1230
00:50:04,000 --> 00:50:04,000
我怕什么

1231
00:50:04,000 --> 00:50:09,000
漂亮

1232
00:50:09,000 --> 00:50:13,000
所以你在公司还用

1233
00:50:13,000 --> 00:50:15,000
Linux 桌面

1234
00:50:15,000 --> 00:50:15,000
对吧

1235
00:50:15,000 --> 00:50:17,000
你用的那个中单防御器是什么

1236
00:50:17,000 --> 00:50:20,000
我现在用的是 X-Face Terminal

1237
00:50:20,000 --> 00:50:21,000
就是一个

1238
00:50:21,000 --> 00:50:22,000
唯一的

1239
00:50:22,000 --> 00:50:24,000
它依赖的是 GDK

1240
00:50:24,000 --> 00:50:25,000
而不是 GNOW

1241
00:50:25,000 --> 00:50:27,000
就没有那么重

1242
00:50:27,000 --> 00:50:29,000
稍微轻一点点

1243
00:50:29,000 --> 00:50:31,000
其实也不算特别特别轻

1244
00:50:31,000 --> 00:50:35,000
就是它在不损失功能和美关系的情况下

1245
00:50:35,000 --> 00:50:37,000
它已经做到比较小巧了

1246
00:50:37,000 --> 00:50:37,000
对

1247
00:50:37,000 --> 00:50:39,000
而且它毕竟是 X-Face 自带的

1248
00:50:39,000 --> 00:50:40,000
对

1249
00:50:40,000 --> 00:50:42,000
但我在以前我上学

1250
00:50:42,000 --> 00:50:43,000
是学校不是那种

1251
00:50:43,000 --> 00:50:44,000
那种叫做 Labnet

1252
00:50:44,000 --> 00:50:46,000
就是实验室的那种机房网络

1253
00:50:46,000 --> 00:50:48,000
它因为机器性能不是太好

1254
00:50:48,000 --> 00:50:50,000
我也跑的那个 X

1255
00:50:50,000 --> 00:50:51,000
叫什么 X-Face

1256
00:50:51,000 --> 00:50:52,000
X-Face

1257
00:50:52,000 --> 00:50:53,000
X-Face

1258
00:50:53,000 --> 00:50:53,000
对

1259
00:50:53,000 --> 00:50:53,000
X-Face

1260
00:50:53,000 --> 00:50:54,000
X-Face

1261
00:50:54,000 --> 00:50:55,000
X-Face

1262
00:50:55,000 --> 00:50:56,000
X-Face

1263
00:50:56,000 --> 00:50:56,000
X-Face

1264
00:50:56,000 --> 00:50:57,000
X-Face

1265
00:50:57,000 --> 00:50:57,000
X-Face

1266
00:50:57,000 --> 00:50:58,000
X-Face

1267
00:50:58,000 --> 00:50:58,000
是这么念吗

1268
00:50:58,000 --> 00:50:59,000
X-Face

1269
00:50:59,000 --> 00:50:59,000
X-Face

1270
00:50:59,000 --> 00:51:00,000
X-Face

1271
00:51:00,000 --> 00:51:00,000
X-Face

1272
00:51:00,000 --> 00:51:01,000
不是徐邦兔

1273
00:51:01,000 --> 00:51:01,000
X-Face

1274
00:51:01,000 --> 00:51:02,000
X-Face

1275
00:51:02,000 --> 00:51:02,000
X-Face

1276
00:51:02,000 --> 00:51:02,000
X-Face

1277
00:51:02,000 --> 00:51:02,000
X-Face

1278
00:51:02,000 --> 00:51:03,000
X-Face

1279
00:51:03,000 --> 00:51:03,000
X-Face

1280
00:51:03,000 --> 00:51:03,000
X-Face

1281
00:51:03,000 --> 00:51:03,000
X-Face

1282
00:51:03,000 --> 00:51:04,000
X-Face

1283
00:51:04,000 --> 00:51:04,000
X-Face

1284
00:51:04,000 --> 00:51:05,000
X-Face

1285
00:51:05,000 --> 00:51:13,000
X-Face

1286
00:51:13,000 --> 00:51:14,000
X-Face

1287
00:51:14,000 --> 00:51:15,000
X-Face

1288
00:51:15,000 --> 00:51:16,000
X-Face

1289
00:51:16,000 --> 00:51:16,000
X-Face

1290
00:51:16,000 --> 00:51:20,000
X-Face

1291
00:51:20,000 --> 00:51:21,000
X-Face

1292
00:51:21,000 --> 00:51:22,000
X-Face

1293
00:51:22,000 --> 00:51:23,000
X-Face

1294
00:51:23,000 --> 00:51:24,000
X-Face

1295
00:51:24,000 --> 00:51:24,000
X-Face

1296
00:51:24,000 --> 00:51:25,000
X-Face

1297
00:51:25,000 --> 00:51:26,000
X-Face

1298
00:51:26,000 --> 00:51:28,000
X-Face

1299
00:51:28,000 --> 00:51:28,000
X-Face

1300
00:51:29,000 --> 00:51:30,000
X-Face

1301
00:51:30,000 --> 00:51:30,000
X-Face

1302
00:51:30,000 --> 00:51:30,000
X-Face

1303
00:51:30,000 --> 00:51:31,000
X-Face

1304
00:51:31,000 --> 00:51:31,000
X-Face

1305
00:51:31,000 --> 00:51:31,000
X-Face

1306
00:51:31,000 --> 00:51:32,000
X-Face

1307
00:51:32,000 --> 00:51:32,000
X-Face

1308
00:51:32,000 --> 00:51:33,000
X R 年

1309
00:51:33,000 --> 00:51:35,000
X-Face

1310
00:51:35,000 --> 00:51:37,000
把紧张设计师做出来的产品

1311
00:51:37,000 --> 00:51:38,000
其实 Linsome 还有一些

1312
00:51:38,000 --> 00:51:40,000
相当来说

1313
00:51:40,000 --> 00:51:41,000
就也没有一个发行板自带

1314
00:51:41,000 --> 00:51:43,000
但是用户也蛮多的

1315
00:51:43,000 --> 00:51:45,000
不算特别小众的

1316
00:51:45,000 --> 00:51:46,000
这种终端防震器吧

1317
00:51:46,000 --> 00:51:48,000
然后有几个比较知名的

1318
00:51:48,000 --> 00:51:50,000
像是这个 Terminator

1319
00:51:50,000 --> 00:51:51,000
对

1320
00:51:51,000 --> 00:51:53,000
Terminator 实际上是一个

1321
00:51:53,000 --> 00:51:56,000
从 Gnome Terminal 改过来的

1322
00:51:56,000 --> 00:51:59,000
一个比较功能强大的

1323
00:51:59,000 --> 00:52:01,000
Terminal Emulator

1324
00:52:01,000 --> 00:52:03,000
它最知名的一点

1325
00:52:03,000 --> 00:52:04,000
其实也就是把那个

1326
00:52:04,000 --> 00:52:06,000
开很多 Pane

1327
00:52:06,000 --> 00:52:08,000
然后可以把这些 Pane

1328
00:52:08,000 --> 00:52:09,000
排成一个 Grid

1329
00:52:09,000 --> 00:52:11,000
然后 Grid 的形状

1330
00:52:11,000 --> 00:52:13,000
也是可以弄乱七八糟的

1331
00:52:13,000 --> 00:52:14,000
上面两个

1332
00:52:14,000 --> 00:52:15,000
中间三个

1333
00:52:15,000 --> 00:52:16,000
下面四个这种

1334
00:52:16,000 --> 00:52:19,000
这个 X-Face 的 Terminal

1335
00:52:19,000 --> 00:52:21,000
支持这种多种方格 Pane 的吧

1336
00:52:21,000 --> 00:52:23,000
我用这个版本是不支持

1337
00:52:23,000 --> 00:52:26,000
我印象中好像没有版本支持吧

1338
00:52:27,000 --> 00:52:31,000
X-Face 的其实很多东西

1339
00:52:31,000 --> 00:52:32,000
大部分东西都很简单

1340
00:52:32,000 --> 00:52:33,000
就只有最基本功能

1341
00:52:33,000 --> 00:52:34,000
对对对

1342
00:52:34,000 --> 00:52:37,000
就是各种能就能凑合用

1343
00:52:37,000 --> 00:52:38,000
但是这套能用得很不爽

1344
00:52:38,000 --> 00:52:39,000
对

1345
00:52:39,000 --> 00:52:42,000
但反正 T-Max 嘛

1346
00:52:42,000 --> 00:52:43,000
T-Max 嘛

1347
00:52:43,000 --> 00:52:43,000
无所谓的

1348
00:52:43,000 --> 00:52:46,000
还有像这个叫什么

1349
00:52:46,000 --> 00:52:48,000
Gwak

1350
00:52:48,000 --> 00:52:49,000
Gwik

1351
00:52:49,000 --> 00:52:50,000
Gwak

1352
00:52:50,000 --> 00:52:50,000
Gwik

1353
00:52:50,000 --> 00:52:52,000
我也不知道怎么念

1354
00:52:52,000 --> 00:52:52,000
但对

1355
00:52:52,000 --> 00:52:54,000
这就是我说那个可能

1356
00:52:54,000 --> 00:52:55,000
应该是用 Python 写的

1357
00:52:55,000 --> 00:52:55,000
Terminal

1358
00:52:55,000 --> 00:52:56,000
OK

1359
00:52:56,000 --> 00:52:57,000
一名类似的

1360
00:52:57,000 --> 00:53:01,000
然后它跟 Tild 也是 Tiled

1361
00:53:01,000 --> 00:53:02,000
这是怎么样

1362
00:53:02,000 --> 00:53:04,000
Tild 吧

1363
00:53:04,000 --> 00:53:05,000
就那个符号

1364
00:53:05,000 --> 00:53:07,000
就是一输出一组的那个

1365
00:53:07,000 --> 00:53:07,000
对对

1366
00:53:07,000 --> 00:53:08,000
波拉号

1367
00:53:08,000 --> 00:53:10,000
然后这两个也是

1368
00:53:10,000 --> 00:53:11,000
两个比较受欢迎的

1369
00:53:11,000 --> 00:53:12,000
在 Gwak

1370
00:53:12,000 --> 00:53:13,000
上面的

1371
00:53:13,000 --> 00:53:16,000
替代品吧

1372
00:53:16,000 --> 00:53:16,000
OK

1373
00:53:16,000 --> 00:53:21,000
其实我一直在用 NX 都有一个

1374
00:53:21,000 --> 00:53:24,000
但这跟其实 NX 大部分的事情都是一样

1375
00:53:24,000 --> 00:53:25,000
就是同一个

1376
00:53:25,000 --> 00:53:27,000
你要完成同一个功能的话

1377
00:53:27,000 --> 00:53:28,000
它有

1378
00:53:28,000 --> 00:53:29,000
至少

1379
00:53:29,000 --> 00:53:30,000
太多选择是吧

1380
00:53:30,000 --> 00:53:31,000
对

1381
00:53:31,000 --> 00:53:33,000
至少有一两打的这种可以选择

1382
00:53:33,000 --> 00:53:33,000
但是

1383
00:53:33,000 --> 00:53:34,000
NX

1384
00:53:34,000 --> 00:53:36,000
就是没有一个特别好的

1385
00:53:36,000 --> 00:53:38,000
就是用了这么多之后

1386
00:53:38,000 --> 00:53:40,000
你觉得哪个特别适合你

1387
00:53:40,000 --> 00:53:41,000
在这种情况下

1388
00:53:41,000 --> 00:53:42,000
我就会去 Google 上搜

1389
00:53:42,000 --> 00:53:43,000
The best

1390
00:53:43,000 --> 00:53:45,000
Terminal Emulator under Linux

1391
00:53:45,000 --> 00:53:47,000
然后发现是一个 flamework

1392
00:53:47,000 --> 00:53:49,000
然后是什么

1393
00:53:49,000 --> 00:53:51,000
然后是给出一个 top 10 list

1394
00:53:51,000 --> 00:53:52,000
然后发现里面每个都不好用

1395
00:53:52,000 --> 00:53:55,000
对

1396
00:53:55,000 --> 00:53:56,000
这个就比较惨

1397
00:53:56,000 --> 00:53:57,000
我不知道为什么

1398
00:53:57,000 --> 00:53:58,000
可能是因为

1399
00:53:58,000 --> 00:53:59,000
程式远嘛

1400
00:53:59,000 --> 00:54:01,000
用那个终端的长河比较多

1401
00:54:01,000 --> 00:54:02,000
那大家倒想去

1402
00:54:02,000 --> 00:54:04,000
自己猜会吧

1403
00:54:04,000 --> 00:54:04,000
但是

1404
00:54:04,000 --> 00:54:06,000
我觉得做这种东西

1405
00:54:06,000 --> 00:54:07,000
还是需要一点

1406
00:54:07,000 --> 00:54:09,000
这个什么来的

1407
00:54:09,000 --> 00:54:10,000
一点这个

1408
00:54:10,000 --> 00:54:12,000
积累和智慧吧

1409
00:54:12,000 --> 00:54:14,000
就不是所有的人

1410
00:54:14,000 --> 00:54:15,000
写出来东西都好事了

1411
00:54:16,000 --> 00:54:17,000
但是三号

1412
00:54:17,000 --> 00:54:19,000
最重要的是忍耐力吧

1413
00:54:19,000 --> 00:54:21,000
忍住

1414
00:54:21,000 --> 00:54:23,000
不要自己写一个吧

1415
00:54:23,000 --> 00:54:27,000
因为 Linux 的哲学就是这样

1416
00:54:27,000 --> 00:54:28,000
你用着不爽

1417
00:54:28,000 --> 00:54:29,000
那你改啊

1418
00:54:29,000 --> 00:54:31,000
那就 focus 出一个来

1419
00:54:31,000 --> 00:54:32,000
对啊

1420
00:54:32,000 --> 00:54:33,000
你要不爽

1421
00:54:33,000 --> 00:54:34,000
你自己多少啊

1422
00:54:34,000 --> 00:54:36,000
我又没有跟你收钱

1423
00:54:36,000 --> 00:54:36,000
对吧

1424
00:54:36,000 --> 00:54:39,000
然后免费弄出来给你用

1425
00:54:39,000 --> 00:54:39,000
你还

1426
00:54:39,000 --> 00:54:39,000
你还

1427
00:54:39,000 --> 00:54:41,000
你又要用又要表

1428
00:54:41,000 --> 00:54:41,000
何必呢

1429
00:54:41,000 --> 00:54:43,000
有本身自己写一个

1430
00:54:43,000 --> 00:54:44,000
对吧

1431
00:54:44,000 --> 00:54:45,000
你在其他平台上

1432
00:54:45,000 --> 00:54:50,000
你在其他平台上就很难这样去怼你的用户

1433
00:54:50,000 --> 00:54:52,000
但是 Linux 就是一个你默认的

1434
00:54:52,000 --> 00:54:53,000
那个

1435
00:54:53,000 --> 00:54:57,000
你默认你的用户同时也是一个工程师

1436
00:54:57,000 --> 00:54:58,000
对

1437
00:54:58,000 --> 00:55:01,000
就像我们上一次的那个标题的那本书

1438
00:55:01,000 --> 00:55:02,000
in the beginning

1439
00:55:02,000 --> 00:55:04,000
in the beginning there was common line

1440
00:55:04,000 --> 00:55:06,000
那个是

1441
00:55:06,000 --> 00:55:08,000
怎么说呢

1442
00:55:08,000 --> 00:55:11,000
其实是一个关于操作系统的

1443
00:55:11,000 --> 00:55:15,000
一部传记题的散文

1444
00:55:15,000 --> 00:55:17,000
介绍了操作系统的原流

1445
00:55:17,000 --> 00:55:23,000
其中里面他把车和操作系统相提并论

1446
00:55:23,000 --> 00:55:26,000
或者说他做了一个比喻

1447
00:55:26,000 --> 00:55:27,000
我觉得还是挺有意思的

1448
00:55:27,000 --> 00:55:29,000
就是他说 Windows 的车

1449
00:55:29,000 --> 00:55:32,000
其实就是一堆性能一般

1450
00:55:32,000 --> 00:55:35,000
但是服务很好

1451
00:55:35,000 --> 00:55:37,000
然后看起来还 OK

1452
00:55:37,000 --> 00:55:39,000
就中庸的一堆车吧

1453
00:55:39,000 --> 00:55:40,000
然后买的人也最多

1454
00:55:40,000 --> 00:55:41,000
大部分人如果需要买车的话

1455
00:55:41,000 --> 00:55:44,000
那么不动脑子就直接去 Windows 的店

1456
00:55:44,000 --> 00:55:45,000
买辆车开走

1457
00:55:45,000 --> 00:55:47,000
然后这个

1458
00:55:47,000 --> 00:55:50,000
苹果的车呢

1459
00:55:50,000 --> 00:55:51,000
就是一堆看起来非常漂亮

1460
00:55:51,000 --> 00:55:56,000
然后让人觉得很前卫很帅

1461
00:55:56,000 --> 00:55:57,000
但是风的很死

1462
00:55:57,000 --> 00:55:59,000
你根本不知道一些车是怎么运作的

1463
00:55:59,000 --> 00:56:00,000
然后跑得很快

1464
00:56:00,000 --> 00:56:02,000
然后也很贵

1465
00:56:02,000 --> 00:56:02,000
对吧

1466
00:56:02,000 --> 00:56:04,000
就那些比较有钱的人

1467
00:56:04,000 --> 00:56:06,000
就直接去苹果店

1468
00:56:06,000 --> 00:56:08,000
开一台苹果车走

1469
00:56:08,000 --> 00:56:11,000
而这个 Linus 是什么呢

1470
00:56:11,000 --> 00:56:13,000
Linus 是一个坦克厂

1471
00:56:13,000 --> 00:56:14,000
坦克维修厂

1472
00:56:14,000 --> 00:56:17,000
前面排着一辆又一辆的坦克

1473
00:56:17,000 --> 00:56:18,000
然后

1474
00:56:18,000 --> 00:56:22,000
里面也没有人来招呼你

1475
00:56:22,000 --> 00:56:24,000
只立这个牌子说免费开走

1476
00:56:24,000 --> 00:56:25,000
然后

1477
00:56:25,000 --> 00:56:26,000
你可以

1478
00:56:26,000 --> 00:56:26,000
对

1479
00:56:26,000 --> 00:56:29,000
你可以免费开一辆坦克走

1480
00:56:29,000 --> 00:56:29,000
然后

1481
00:56:29,000 --> 00:56:30,000
但是呢

1482
00:56:30,000 --> 00:56:32,000
如果他半路抛锚了

1483
00:56:32,000 --> 00:56:34,000
你就得自己下来把它修好

1484
00:56:34,000 --> 00:56:36,000
对

1485
00:56:36,000 --> 00:56:38,000
大概是这种感觉

1486
00:56:38,000 --> 00:56:39,000
然后

1487
00:56:39,000 --> 00:56:40,000
为什么

1488
00:56:40,000 --> 00:56:43,000
为什么这个所有脑子里面出现是二战时期的德国

1489
00:56:43,000 --> 00:56:45,000
不可能

1490
00:56:45,000 --> 00:56:47,000
看那个电影坦克大战

1491
00:56:47,000 --> 00:56:49,000
OK

1492
00:56:49,000 --> 00:56:51,000
这个其实让我想到

1493
00:56:51,000 --> 00:56:53,000
我第一次读到这段文字的时候

1494
00:56:53,000 --> 00:56:55,000
脑子里面想到的是 EVE

1495
00:56:55,000 --> 00:56:58,000
就是中文叫星战前夜

1496
00:56:58,000 --> 00:57:02,000
多人在线网游

1497
00:57:02,000 --> 00:57:04,000
就是在这个网游里面

1498
00:57:04,000 --> 00:57:07,000
你开一辆开自己的宇宙飞船

1499
00:57:07,000 --> 00:57:08,000
然后去采矿

1500
00:57:08,000 --> 00:57:09,000
去

1501
00:57:09,000 --> 00:57:10,000
去做生意

1502
00:57:10,000 --> 00:57:11,000
去搞运输

1503
00:57:11,000 --> 00:57:12,000
去杀人越货

1504
00:57:12,000 --> 00:57:14,000
去打仗

1505
00:57:14,000 --> 00:57:14,000
什么的

1506
00:57:14,000 --> 00:57:16,000
然后这里面有四个派系

1507
00:57:16,000 --> 00:57:21,000
四个派系的那个船的风格完全不一样

1508
00:57:21,000 --> 00:57:21,000
一个

1509
00:57:21,000 --> 00:57:22,000
其中一个就是

1510
00:57:22,000 --> 00:57:24,000
非常漂亮

1511
00:57:24,000 --> 00:57:26,000
非常非常流线性

1512
00:57:26,000 --> 00:57:28,000
然后我觉得苹果就很像这个派系

1513
00:57:28,000 --> 00:57:31,000
A 开头叫什么网

1514
00:57:31,000 --> 00:57:36,000
然后 Windows 则是一个比较中规中矩的

1515
00:57:36,000 --> 00:57:38,000
就是那种司空见惯的

1516
00:57:38,000 --> 00:57:40,000
想象中的未来人类的飞船的样子

1517
00:57:40,000 --> 00:57:42,000
然后还有一个派系

1518
00:57:42,000 --> 00:57:44,000
他们的飞船就感觉就像一堆

1519
00:57:44,000 --> 00:57:46,000
破了耳拼起来的

1520
00:57:46,000 --> 00:57:47,000
然后那个就是

1521
00:57:47,000 --> 00:57:49,000
感觉就是 Linux 社区

1522
00:57:49,000 --> 00:57:49,000
对

1523
00:57:49,000 --> 00:57:50,000
居然还能飞

1524
00:57:50,000 --> 00:57:51,000
不对称

1525
00:57:51,000 --> 00:57:53,000
然后大量的平板

1526
00:57:53,000 --> 00:57:54,000
大量的什么

1527
00:57:54,000 --> 00:57:57,000
你就觉得那个船都是用胶布粘起来的

1528
00:57:57,000 --> 00:57:59,000
然后还是一样跑

1529
00:57:59,000 --> 00:58:02,000
扯远了

1530
00:58:02,000 --> 00:58:03,000
拉回来

1531
00:58:03,000 --> 00:58:03,000
对

1532
00:58:03,000 --> 00:58:05,000
那个就刚才讲到那个

1533
00:58:05,000 --> 00:58:06,000
那个像 Tmax 也好

1534
00:58:06,000 --> 00:58:08,000
还有刚才讲的各种中端仿程器

1535
00:58:08,000 --> 00:58:10,000
都提到这个分窗

1536
00:58:10,000 --> 00:58:12,000
就是一个窗口分成多个小板块

1537
00:58:12,000 --> 00:58:14,000
来用的这么一个场景

1538
00:58:14,000 --> 00:58:15,000
然后想起之前

1539
00:58:15,000 --> 00:58:18,000
你在这个轻重群里面

1540
00:58:18,000 --> 00:58:19,000
好像是有谁问过你一个问题

1541
00:58:19,000 --> 00:58:21,000
说你怎么用这个 terminal

1542
00:58:21,000 --> 00:58:22,000
怎么放到这个 i 3 里面去的

1543
00:58:22,000 --> 00:58:25,000
因为就其实照逻辑来看

1544
00:58:25,000 --> 00:58:26,000
如果你要分这个

1545
00:58:26,000 --> 00:58:29,000
把一个屏幕的空间分割成多个的话

1546
00:58:29,000 --> 00:58:31,000
这就是那个 window manager 要做的事

1547
00:58:31,000 --> 00:58:32,000
就是可以在 i 3 里面

1548
00:58:32,000 --> 00:58:35,000
就哪怕你用这个多个

1549
00:58:35,000 --> 00:58:37,000
就不需要支持这个 paint

1550
00:58:37,000 --> 00:58:39,000
就是 splaypaint 这种的中端仿程器

1551
00:58:39,000 --> 00:58:40,000
也是可以的

1552
00:58:40,000 --> 00:58:42,000
你甚至连 tab 都不需要

1553
00:58:42,000 --> 00:58:42,000
对吧

1554
00:58:42,000 --> 00:58:45,000
你需要都是 i 3 来管理那个窗口就好了

1555
00:58:45,000 --> 00:58:48,000
所以为什么你用 i 3 的时候

1556
00:58:48,000 --> 00:58:49,000
还是要用这个

1557
00:58:49,000 --> 00:58:51,000
再开多个 tab

1558
00:58:51,000 --> 00:58:53,000
然后那个 tab 里面再开 tmax

1559
00:58:53,000 --> 00:58:56,000
我觉得是这样的

1560
00:58:56,000 --> 00:58:58,000
就是可以把它视为

1561
00:58:58,000 --> 00:59:02,000
就是窗口管理器是一个逻辑层级

1562
00:59:02,000 --> 00:59:06,000
然后 terminal emulator 是一个逻辑层级

1563
00:59:06,000 --> 00:59:09,000
tmax 又是一个逻辑层级

1564
00:59:09,000 --> 00:59:10,000
然后这三个逻辑层级

1565
00:59:10,000 --> 00:59:12,000
所使用的快捷键是不一样的

1566
00:59:12,000 --> 00:59:14,000
比如说我要在三个屏幕之间切换的话

1567
00:59:14,000 --> 00:59:17,000
我是用 command 加 123

1568
00:59:17,000 --> 00:59:19,000
这是一套快捷键

1569
00:59:19,000 --> 00:59:23,000
第二套快捷键是我如果在某一个 terminal emulator 里面

1570
00:59:23,000 --> 00:59:25,000
要在各个 tab 之间切换

1571
00:59:25,000 --> 00:59:27,000
那是 control 加 pagedown pageup

1572
00:59:27,000 --> 00:59:30,000
这是第二套快捷键

1573
00:59:30,000 --> 00:59:32,000
第三套快捷键是在 tmax 里面

1574
00:59:32,000 --> 00:59:35,000
我的前缀是 control 加 q

1575
00:59:35,000 --> 00:59:37,000
但是 tmax 摸着应该是 control 加 b

1576
00:59:37,000 --> 00:59:40,000
然后比如说 control 加 q 加 l

1577
00:59:40,000 --> 00:59:45,000
control 加 q 然后 l 是切换到右边的那个 paint 里面

1578
00:59:45,000 --> 00:59:52,000
这样就是在肌肉记忆和思维逻辑层面

1579
00:59:52,000 --> 00:59:57,000
你都把三个逻辑层级分得很清楚

1580
00:59:57,000 --> 00:59:58,000
对吧

1581
00:59:58,000 --> 00:59:59,000
因为我在切换窗口的时候

1582
00:59:59,000 --> 01:00:03,000
我切换的是本地的计算机

1583
01:00:03,000 --> 01:00:05,000
或者是远程的计算机

1584
01:00:05,000 --> 01:00:11,000
而在中端仿转器里面切换 tab 的时候

1585
01:00:11,000 --> 01:00:16,000
我是在切换我 ssh 到哪一个机器上面

1586
01:00:16,000 --> 01:00:21,000
或者是比如说我这个 tab 里面做的是测试

1587
01:00:21,000 --> 01:00:22,000
另一个 tab 里面做的是开发

1588
01:00:22,000 --> 01:00:22,000
对吧

1589
01:00:22,000 --> 01:00:25,000
然后在 tmax 里面

1590
01:00:25,000 --> 01:00:30,000
我做的则是在一个 terminal 内部的

1591
01:00:30,000 --> 01:00:32,000
不同的工具之间的切换

1592
01:00:32,000 --> 01:00:36,000
这里可能有两个层级

1593
01:00:36,000 --> 01:00:36,000
一个是说

1594
01:00:36,000 --> 01:00:39,000
首先你不可能把远端的窗口

1595
01:00:39,000 --> 01:00:41,000
挪到本地来管理

1596
01:00:41,000 --> 01:00:43,000
除非你用 X window 那个系统

1597
01:00:43,000 --> 01:00:45,000
但现在应该没有什么能够用了吧

1598
01:00:45,000 --> 01:00:48,000
所以这个我们能力点

1599
01:00:48,000 --> 01:00:48,000
还是有

1600
01:00:48,000 --> 01:00:49,000
还是有吗

1601
01:00:49,000 --> 01:00:50,000
OK

1602
01:00:50,000 --> 01:00:52,000
对

1603
01:00:52,000 --> 01:00:52,000
还是有

1604
01:00:52,000 --> 01:00:56,000
就是你要区分远端的

1605
01:00:56,000 --> 01:00:59,000
这个不同程序的输入焦点之间的切换

1606
01:00:59,000 --> 01:01:01,000
和这个本地窗口的切换

1607
01:01:01,000 --> 01:01:02,000
这个我可以理解

1608
01:01:02,000 --> 01:01:05,000
但是你本地的中端模拟器里面的多个 tab

1609
01:01:05,000 --> 01:01:09,000
你为什么不用这个 i 3 的这个多窗口的模式来管理呢

1610
01:01:09,000 --> 01:01:12,000
为什么要用 type 而不用 i 3 的 Windows Manager

1611
01:01:12,000 --> 01:01:14,000
没错

1612
01:01:14,000 --> 01:01:15,000
因为其实 type 是没有

1613
01:01:15,000 --> 01:01:17,000
就 type 是快捷键的话

1614
01:01:17,000 --> 01:01:19,000
它没有那么灵活嘛

1615
01:01:19,000 --> 01:01:19,000
你不能说

1616
01:01:19,000 --> 01:01:21,000
从截屁的角度下

1617
01:01:21,000 --> 01:01:23,000
从截屁的角度下

1618
01:01:23,000 --> 01:01:28,000
我希望我的本地的机器上只跑一个 terminal emulator

1619
01:01:28,000 --> 01:01:31,000
就单一进程

1620
01:01:31,000 --> 01:01:32,000
对吧

1621
01:01:32,000 --> 01:01:32,000
然后

1622
01:01:32,000 --> 01:01:34,000
就开多个 tab 是

1623
01:01:34,000 --> 01:01:35,000
诶

1624
01:01:35,000 --> 01:01:35,000
难道

1625
01:01:35,000 --> 01:01:37,000
你看多个窗口也是单一进程吧

1626
01:01:37,000 --> 01:01:39,000
你确定吗

1627
01:01:39,000 --> 01:01:42,000
我觉得每次

1628
01:01:42,000 --> 01:01:46,000
我开一个新窗口就会多一个进程出来

1629
01:01:46,000 --> 01:01:46,000
会多一个

1630
01:01:46,000 --> 01:01:50,000
应该是这样的

1631
01:01:50,000 --> 01:01:52,000
会多一个新的 terminal simulator 出来

1632
01:01:52,000 --> 01:01:53,000
emulator 出来的

1633
01:01:53,000 --> 01:01:54,000
哼

1634
01:01:54,000 --> 01:01:55,000
OK

1635
01:01:55,000 --> 01:01:57,000
那多一个 type 不也是吗

1636
01:01:57,000 --> 01:02:01,000
多一个 type 是在同一个 emulator 里面多一个进程吧

1637
01:02:01,000 --> 01:02:03,000
这个只是 UI 的表现层

1638
01:02:03,000 --> 01:02:05,000
但并不一定实际上是这样子的

1639
01:02:05,000 --> 01:02:06,000
OK 好吧

1640
01:02:06,000 --> 01:02:07,000
比如说最简单一个例子吧

1641
01:02:07,000 --> 01:02:09,000
这个像现在这个 Chrome 也好

1642
01:02:09,000 --> 01:02:09,000
Safari 也好

1643
01:02:09,000 --> 01:02:12,000
它也是一个多标签页的一个窗口

1644
01:02:12,000 --> 01:02:12,000
对

1645
01:02:12,000 --> 01:02:15,000
而且你可以把一个标签页拖出来形成一个新窗口

1646
01:02:15,000 --> 01:02:16,000
对吧

1647
01:02:16,000 --> 01:02:16,000
对

1648
01:02:16,000 --> 01:02:18,000
它都其实每一个标签页

1649
01:02:18,000 --> 01:02:20,000
你拖出来形成新窗口都不一定

1650
01:02:20,000 --> 01:02:21,000
其实每个

1651
01:02:21,000 --> 01:02:21,000
好吧

1652
01:02:21,000 --> 01:02:23,000
这个标签它是这个独立的一个进程

1653
01:02:23,000 --> 01:02:25,000
就这两种之间并没有逻辑的

1654
01:02:25,000 --> 01:02:25,000
不不不

1655
01:02:25,000 --> 01:02:26,000
Chrome 肯定是多进程

1656
01:02:26,000 --> 01:02:27,000
我知道了

1657
01:02:27,000 --> 01:02:28,000
就是说

1658
01:02:28,000 --> 01:02:30,000
但是你像那个 Safari 以前

1659
01:02:30,000 --> 01:02:30,000
它有标签

1660
01:02:30,000 --> 01:02:31,000
也有标签也可以拖出来

1661
01:02:31,000 --> 01:02:32,000
这个时候

1662
01:02:32,000 --> 01:02:33,000
它并不是

1663
01:02:33,000 --> 01:02:35,000
这个标签也并不是单独的一个进程

1664
01:02:35,000 --> 01:02:35,000
好吧

1665
01:02:35,000 --> 01:02:38,000
那我觉得那可能还是从心理上是从

1666
01:02:38,000 --> 01:02:40,000
觉得每一个窗口应该是一个

1667
01:02:40,000 --> 01:02:41,000
就一定要有个归属感

1668
01:02:41,000 --> 01:02:42,000
是一个

1669
01:02:42,000 --> 01:02:44,000
每一个窗口是对应一个单一的 app

1670
01:02:44,000 --> 01:02:45,000
OK

1671
01:02:45,000 --> 01:02:46,000
OK

1672
01:02:46,000 --> 01:02:47,000
明白

1673
01:02:47,000 --> 01:02:52,000
所以你没有那个两个网页放到并排来使用的对比的情况

1674
01:02:52,000 --> 01:02:53,000
也有

1675
01:02:53,000 --> 01:02:56,000
但是这种时候是非常少见的

1676
01:02:56,000 --> 01:02:59,000
我觉得这种时候宁可开一个新的那个

1677
01:02:59,000 --> 01:03:02,000
还是要看场景

1678
01:03:02,000 --> 01:03:04,000
还是要看场景

1679
01:03:04,000 --> 01:03:04,000
对

1680
01:03:04,000 --> 01:03:06,000
我就比较好奇为什么是这种结果

1681
01:03:06,000 --> 01:03:06,000
但是

1682
01:03:06,000 --> 01:03:07,000
那如果这样的话

1683
01:03:07,000 --> 01:03:08,000
会不会有一个

1684
01:03:08,000 --> 01:03:09,000
就刚才讲的

1685
01:03:09,000 --> 01:03:12,000
就都是用那个快捷键来控制不同层级的

1686
01:03:12,000 --> 01:03:16,000
但是你的那个逻辑上是分层分了四层了吧

1687
01:03:16,000 --> 01:03:17,000
三层

1688
01:03:17,000 --> 01:03:17,000
窗口层

1689
01:03:17,000 --> 01:03:19,000
type 层和这个 tmunk

1690
01:03:19,000 --> 01:03:19,000
三层

1691
01:03:19,000 --> 01:03:19,000
对

1692
01:03:19,000 --> 01:03:22,000
但你快捷键是并不分层的

1693
01:03:22,000 --> 01:03:27,000
你会不会觉得这个快捷键的这个要考虑潜质的冲突的情况太多了

1694
01:03:27,000 --> 01:03:29,000
快捷键为什么不是分层

1695
01:03:29,000 --> 01:03:30,000
我刚才不是说了三层吗

1696
01:03:30,000 --> 01:03:31,000
command 加

1697
01:03:31,000 --> 01:03:32,000
对

1698
01:03:32,000 --> 01:03:33,000
但这都是 command 的键

1699
01:03:33,000 --> 01:03:34,000
不不不

1700
01:03:34,000 --> 01:03:35,000
command 加 123

1701
01:03:35,000 --> 01:03:37,000
然后切换这个

1702
01:03:37,000 --> 01:03:40,000
切换 type 是用 control 加 pageup

1703
01:03:40,000 --> 01:03:40,000
pagedown

1704
01:03:40,000 --> 01:03:41,000
对

1705
01:03:41,000 --> 01:03:43,000
没错都是有 control 这个

1706
01:03:43,000 --> 01:03:44,000
command

1707
01:03:44,000 --> 01:03:44,000
command

1708
01:03:44,000 --> 01:03:44,000
OK

1709
01:03:44,000 --> 01:03:47,000
但是你还要在那个在 tmax 里面还有一个

1710
01:03:47,000 --> 01:03:52,000
tmax 里面则是 tmax 的这个快捷键机制和其他两者是不一样的

1711
01:03:52,000 --> 01:03:54,000
它是一个二段式的

1712
01:03:54,000 --> 01:03:55,000
这个

1713
01:03:55,000 --> 01:03:56,000
对

1714
01:03:56,000 --> 01:03:58,000
完了你还里面

1715
01:03:58,000 --> 01:03:58,000
习惯了之后

1716
01:03:58,000 --> 01:03:59,000
还好吧

1717
01:03:59,000 --> 01:04:02,000
但你还想你在 tmax 里面你还跑 vim 吗

1718
01:04:02,000 --> 01:04:08,000
vim 的 vim 又用不到 control 加 q

1719
01:04:08,000 --> 01:04:11,000
不我就说但你总会用到 command

1720
01:04:11,000 --> 01:04:12,000
command

1721
01:04:12,000 --> 01:04:12,000
command

1722
01:04:12,000 --> 01:04:13,000
会不会用到 vim 里面

1723
01:04:13,000 --> 01:04:14,000
用不到吧

1724
01:04:14,000 --> 01:04:15,000
vim 也用不到

1725
01:04:15,000 --> 01:04:16,000
但不管怎么说

1726
01:04:16,000 --> 01:04:17,000
就是说

1727
01:04:17,000 --> 01:04:20,000
你在比如说在 vim 里面自定义快捷键的时候

1728
01:04:20,000 --> 01:04:21,000
或者你在自定义其他快捷键的时候

1729
01:04:21,000 --> 01:04:24,000
会不会遇到说有这么一个

1730
01:04:24,000 --> 01:04:26,000
因为成绩太多

1731
01:04:26,000 --> 01:04:29,000
你按一个快捷键会出现在两个地方矛盾的情况

1732
01:04:29,000 --> 01:04:31,000
唯一的问题就是

1733
01:04:31,000 --> 01:04:34,000
默认的 control 加 b 和

1734
01:04:34,000 --> 01:04:39,000
默认就是 control 加 b 给我造成个问题

1735
01:04:39,000 --> 01:04:42,000
因为 control 加 b 在 vim 里面有用

1736
01:04:42,000 --> 01:04:46,000
所以你选一个 ctrl 加 q

1737
01:04:46,000 --> 01:04:50,000
就避开了 vim 的一个没用的键就可以了

1738
01:04:50,000 --> 01:04:51,000
是吧

1739
01:04:51,000 --> 01:04:51,000
对

1740
01:04:51,000 --> 01:04:53,000
我以前用过 control 加 a

1741
01:04:53,000 --> 01:04:53,000
但是后头发现

1742
01:04:53,000 --> 01:04:55,000
control 加 a 其实也是被使用的

1743
01:04:55,000 --> 01:04:58,000
就是给当前的字符加 1

1744
01:04:58,000 --> 01:05:01,000
虽然不知道具体有什么用

1745
01:05:01,000 --> 01:05:03,000
我还是把它选成了 q

1746
01:05:03,000 --> 01:05:04,000
对吧

1747
01:05:04,000 --> 01:05:05,000
所以还是有这个问题的

1748
01:05:05,000 --> 01:05:06,000
然后

1749
01:05:06,000 --> 01:05:10,000
这个问题可能在 i 3 里面

1750
01:05:10,000 --> 01:05:11,000
就是 Ninux 面还好

1751
01:05:11,000 --> 01:05:13,000
因为 Ninux 面绝大部分的 goo

1752
01:05:13,000 --> 01:05:16,000
就是 goo 就是图形界面那一层

1753
01:05:16,000 --> 01:05:18,000
它是不用这个我们叫 meta 键的

1754
01:05:18,000 --> 01:05:19,000
对

1755
01:05:19,000 --> 01:05:21,000
因为它不能保证你的键盘上

1756
01:05:21,000 --> 01:05:22,000
一定有那个键

1757
01:05:22,000 --> 01:05:23,000
对吧

1758
01:05:23,000 --> 01:05:24,000
那这只能说

1759
01:05:24,000 --> 01:05:26,000
这个键的代号做什么

1760
01:05:26,000 --> 01:05:28,000
modifier 3

1761
01:05:28,000 --> 01:05:30,000
还是 modifier 4

1762
01:05:30,000 --> 01:05:31,000
对

1763
01:05:31,000 --> 01:05:31,000
就是说你可以

1764
01:05:31,000 --> 01:05:33,000
你可以单独把那个键

1765
01:05:33,000 --> 01:05:34,000
用于这个窗口管理

1766
01:05:34,000 --> 01:05:35,000
当然这个也比较巧

1767
01:05:35,000 --> 01:05:38,000
因为在很多这个 windows 键盘上

1768
01:05:38,000 --> 01:05:39,000
那个键叫 win 键

1769
01:05:39,000 --> 01:05:40,000
对吧

1770
01:05:40,000 --> 01:05:40,000
对

1771
01:05:40,000 --> 01:05:42,000
这是一个比较取巧的方法

1772
01:05:42,000 --> 01:05:42,000
对

1773
01:05:42,000 --> 01:05:42,000
窗口键

1774
01:05:42,000 --> 01:05:44,000
能让它管理这个 i 3 的窗口

1775
01:05:44,000 --> 01:05:45,000
能设置它

1776
01:05:45,000 --> 01:05:46,000
比如说改变布局

1777
01:05:46,000 --> 01:05:48,000
改变切换这个 focus

1778
01:05:48,000 --> 01:05:49,000
这都没有问题

1779
01:05:49,000 --> 01:05:51,000
但其实你发现在 mac 上面

1780
01:05:51,000 --> 01:05:52,000
这个 command 键

1781
01:05:52,000 --> 01:05:54,000
alt 键和 control 键

1782
01:05:54,000 --> 01:05:57,000
都是相当大的比例

1783
01:05:57,000 --> 01:05:59,000
在实际使用中的

1784
01:05:59,000 --> 01:06:00,000
就经常会发现

1785
01:06:00,000 --> 01:06:01,000
你想着一个快据组合

1786
01:06:01,000 --> 01:06:04,000
在你开的某一个应用里面

1787
01:06:04,000 --> 01:06:05,000
就不幸被用过了

1788
01:06:05,000 --> 01:06:06,000
对

1789
01:06:06,000 --> 01:06:08,000
而且 mac 最让人讨厌的一点

1790
01:06:08,000 --> 01:06:10,000
就是它的快据键

1791
01:06:10,000 --> 01:06:11,000
很多都是全局的

1792
01:06:11,000 --> 01:06:13,000
你这个 app 里面

1793
01:06:13,000 --> 01:06:14,000
使用这个快据键

1794
01:06:14,000 --> 01:06:15,000
到另外一个 app 里面

1795
01:06:15,000 --> 01:06:17,000
就完全用不了了

1796
01:06:17,000 --> 01:06:19,000
就会有冲突吧

1797
01:06:19,000 --> 01:06:19,000
是

1798
01:06:19,000 --> 01:06:20,000
对

1799
01:06:20,000 --> 01:06:22,000
OK

1800
01:06:22,000 --> 01:06:23,000
这个我还没有留意到

1801
01:06:23,000 --> 01:06:25,000
当然我就有点担心

1802
01:06:25,000 --> 01:06:26,000
刚才你说像那种情况

1803
01:06:26,000 --> 01:06:28,000
嵌套那么多层

1804
01:06:28,000 --> 01:06:29,000
感觉这个

1805
01:06:29,000 --> 01:06:30,000
光是想按哪个快据键

1806
01:06:30,000 --> 01:06:32,000
在哪一层按都已经快炸

1807
01:06:32,000 --> 01:06:34,000
我觉得三层已经是我的迹象了

1808
01:06:34,000 --> 01:06:36,000
再多一层就受不了

1809
01:06:36,000 --> 01:06:38,000
所以你没有在

1810
01:06:38,000 --> 01:06:39,000
怎么说来着

1811
01:06:39,000 --> 01:06:40,000
就本机

1812
01:06:40,000 --> 01:06:41,000
或者这么说

1813
01:06:41,000 --> 01:06:44,000
你有试过从连到远端的一个 Tmax 之后

1814
01:06:44,000 --> 01:06:47,000
再从那个跳板机连到另外一台机器

1815
01:06:47,000 --> 01:06:48,000
再再开一个 Tmax 吗

1816
01:06:48,000 --> 01:06:50,000
有

1817
01:06:50,000 --> 01:06:52,000
这样的话你就会发现

1818
01:06:52,000 --> 01:06:53,000
两个 Tmax

1819
01:06:53,000 --> 01:06:54,000
那个 control Q 冲突了

1820
01:06:54,000 --> 01:06:55,000
对吧

1821
01:06:55,000 --> 01:06:55,000
对

1822
01:06:55,000 --> 01:06:58,000
此时就得先

1823
01:06:58,000 --> 01:06:58,000
要穿透

1824
01:06:58,000 --> 01:07:00,000
对

1825
01:07:00,000 --> 01:07:02,000
此时就需要先

1826
01:07:02,000 --> 01:07:05,000
因为此时起

1827
01:07:05,000 --> 01:07:08,000
此时起作用的应该是外层的 Ctrl 加 Q

1828
01:07:08,000 --> 01:07:09,000
对

1829
01:07:09,000 --> 01:07:10,000
然后你再按一下

1830
01:07:10,000 --> 01:07:12,000
就可以穿透到下面的一层了

1831
01:07:12,000 --> 01:07:14,000
真的吗

1832
01:07:14,000 --> 01:07:15,000
是这样吗

1833
01:07:15,000 --> 01:07:15,000
对啊

1834
01:07:15,000 --> 01:07:18,000
就是你按第一次 Ctrl Q 的时候是给外层吧

1835
01:07:18,000 --> 01:07:20,000
我一直不知道

1836
01:07:20,000 --> 01:07:22,000
我一直都是很蠢的

1837
01:07:22,000 --> 01:07:22,000
Ctrl Q

1838
01:07:22,000 --> 01:07:24,000
然后新建一个窗口

1839
01:07:24,000 --> 01:07:28,000
然后把那个本地的这个 Ctrl Q 改成别的

1840
01:07:28,000 --> 01:07:30,000
然后 reload config

1841
01:07:30,000 --> 01:07:32,000
然后远程就可以用

1842
01:07:32,000 --> 01:07:32,000
不

1843
01:07:32,000 --> 01:07:33,000
这个是更好的

1844
01:07:33,000 --> 01:07:34,000
因为不然的话

1845
01:07:34,000 --> 01:07:37,000
你每次按 Ctrl Q 的时候都要按两次也很累啊

1846
01:07:37,000 --> 01:07:37,000
OK

1847
01:07:37,000 --> 01:07:39,000
对吧

1848
01:07:39,000 --> 01:07:39,000
就是

1849
01:07:39,000 --> 01:07:41,000
所以我很关心

1850
01:07:41,000 --> 01:07:44,000
刚才你说你那么多层怎么去管理的问题

1851
01:07:44,000 --> 01:07:45,000
OK

1852
01:07:45,000 --> 01:07:46,000
所以我有时候我就在想

1853
01:07:46,000 --> 01:07:48,000
就说是不是说反而把这些都

1854
01:07:48,000 --> 01:07:50,000
就不要搞那么两三层

1855
01:07:50,000 --> 01:07:53,000
三四层这种就直接拉平到一层里面

1856
01:07:53,000 --> 01:07:55,000
i 3 的管理会不会好一些

1857
01:07:55,000 --> 01:07:58,000
因为 i 3 其实就是这么一个 flat 的一个东西了

1858
01:07:58,000 --> 01:07:58,000
对吧

1859
01:07:58,000 --> 01:07:59,000
对

1860
01:07:59,000 --> 01:08:00,000
也是个

1861
01:08:00,000 --> 01:08:00,000
也是个

1862
01:08:00,000 --> 01:08:01,000
也是个办法

1863
01:08:01,000 --> 01:08:04,000
一个想法

1864
01:08:04,000 --> 01:08:05,000
你可以去试试

1865
01:08:05,000 --> 01:08:06,000
对

1866
01:08:06,000 --> 01:08:06,000
OK

1867
01:08:06,000 --> 01:08:08,000
天天正事没看

1868
01:08:08,000 --> 01:08:09,000
在那里各自想

1869
01:08:09,000 --> 01:08:11,000
我到底是用三层的还是两层的

1870
01:08:11,000 --> 01:08:12,000
这个

1871
01:08:12,000 --> 01:08:16,000
有时候觉得自己在折腾工具上面花的时间真是太多了

1872
01:08:16,000 --> 01:08:17,000
嗯

1873
01:08:17,000 --> 01:08:18,000
你那个什么

1874
01:08:18,000 --> 01:08:19,000
电很锋利

1875
01:08:19,000 --> 01:08:20,000
没砍死几个人

1876
01:08:20,000 --> 01:08:21,000
公寓

1877
01:08:21,000 --> 01:08:21,000
公寓

1878
01:08:21,000 --> 01:08:22,000
善其事

1879
01:08:22,000 --> 01:08:23,000
必先利其器

1880
01:08:23,000 --> 01:08:26,000
结果我现在这个气已经利得差不多了

1881
01:08:26,000 --> 01:08:26,000
这

1882
01:08:26,000 --> 01:08:27,000
事一点没做

1883
01:08:27,000 --> 01:08:29,000
刀

1884
01:08:29,000 --> 01:08:29,000
刀痛

1885
01:08:29,000 --> 01:08:30,000
刀痛快被你磨光了

1886
01:08:30,000 --> 01:08:31,000
对

1887
01:08:31,000 --> 01:08:35,000
我已经变成了一个刀具鉴赏架了

1888
01:08:35,000 --> 01:08:36,000
没杀几个人

1889
01:08:36,000 --> 01:08:44,000
刚才我们扯了这个 Mac OS X 上和这个 Mini 上面的终端仿灯器啊

1890
01:08:44,000 --> 01:08:47,000
Windows 上面有什么东西吗

1891
01:08:47,000 --> 01:08:48,000
现在算 PowerShell 也算是一个 Shell

1892
01:08:48,000 --> 01:08:51,000
它还需要一个一个这个东西去搞的吗

1893
01:08:51,000 --> 01:08:51,000
对

1894
01:08:51,000 --> 01:08:53,000
其实这需要区分场景

1895
01:08:53,000 --> 01:08:57,000
就是你要在 Windows 上面做 Unix 相关的东西吗

1896
01:08:57,000 --> 01:08:59,000
如果需要的话

1897
01:08:59,000 --> 01:09:01,000
那你可能会需要一些比较

1898
01:09:01,000 --> 01:09:04,000
有一个场景我至少是比较熟悉

1899
01:09:04,000 --> 01:09:05,000
就是很多这个

1900
01:09:05,000 --> 01:09:08,000
比如说做这个 PHP 的开发者

1901
01:09:08,000 --> 01:09:09,000
他是在用 Windows 的

1902
01:09:09,000 --> 01:09:10,000
对吧

1903
01:09:10,000 --> 01:09:11,000
嗯

1904
01:09:11,000 --> 01:09:13,000
然后他但是他部署的时候

1905
01:09:13,000 --> 01:09:16,000
是要部署到这个 Linux 的系统上面去的

1906
01:09:16,000 --> 01:09:18,000
所以他一定是需要一个这个

1907
01:09:18,000 --> 01:09:20,000
比如常用的叫什么 Puti

1908
01:09:20,000 --> 01:09:24,000
或者一个叫什么什么什么 Term 来的

1909
01:09:24,000 --> 01:09:26,000
What

1910
01:09:26,000 --> 01:09:29,000
有一个有一个 Windows 上面连这个

1911
01:09:29,000 --> 01:09:31,000
就是连这个远端的

1912
01:09:31,000 --> 01:09:32,000
就 SSH 到远端的

1913
01:09:32,000 --> 01:09:33,000
然后能够

1914
01:09:33,000 --> 01:09:36,000
他带这个终端仿针器功能的工具

1915
01:09:36,000 --> 01:09:38,000
我能够叫什么 Term 来的

1916
01:09:38,000 --> 01:09:38,000
A-Term

1917
01:09:38,000 --> 01:09:40,000
我还我还只知道 Puti

1918
01:09:40,000 --> 01:09:41,000
这个一个东西

1919
01:09:41,000 --> 01:09:42,000
Puti 不好用

1920
01:09:42,000 --> 01:09:43,000
Puti 其实是很难用的

1921
01:09:43,000 --> 01:09:45,000
嗯

1922
01:09:45,000 --> 01:09:48,000
就是有些很奇怪的人 Puti

1923
01:09:48,000 --> 01:09:49,000
他的那个

1924
01:09:49,000 --> 01:09:50,000
他那个窗口啊

1925
01:09:50,000 --> 01:09:51,000
跟那个

1926
01:09:51,000 --> 01:09:51,000
就是

1927
01:09:51,000 --> 01:09:52,000
那个

1928
01:09:52,000 --> 01:09:53,000
叫做

1929
01:09:53,000 --> 01:09:54,000
叫什么

1930
01:09:54,000 --> 01:09:54,000
命令行

1931
01:09:54,000 --> 01:09:55,000
是叫命令行吗

1932
01:09:55,000 --> 01:09:55,000
嗯

1933
01:09:55,000 --> 01:09:57,000
命令行那个应用的窗口是一样

1934
01:09:57,000 --> 01:09:58,000
他很奇怪

1935
01:09:58,000 --> 01:09:59,000
比如说他

1936
01:09:59,000 --> 01:10:00,000
那个字体大小

1937
01:10:00,000 --> 01:10:01,000
对对对对吧

1938
01:10:01,000 --> 01:10:02,000
就只能选择那几种

1939
01:10:02,000 --> 01:10:04,000
这倒是

1940
01:10:04,000 --> 01:10:05,000
对对对

1941
01:10:05,000 --> 01:10:06,000
我觉得 Windows 的这个

1942
01:10:06,000 --> 01:10:12,000
Terminal 的最讨厌的一点就是字体只有三四种选择可能

1943
01:10:12,000 --> 01:10:14,000
Fix this

1944
01:10:14,000 --> 01:10:15,000
对

1945
01:10:15,000 --> 01:10:17,000
还有什么 Coreal

1946
01:10:17,000 --> 01:10:19,000
Coreal 对吧

1947
01:10:19,000 --> 01:10:21,000
Counseless 应该还有

1948
01:10:21,000 --> 01:10:22,000
Counseless 后来有的

1949
01:10:22,000 --> 01:10:23,000
对对对

1950
01:10:23,000 --> 01:10:23,000
对

1951
01:10:23,000 --> 01:10:26,000
然后就是默认的那个对

1952
01:10:26,000 --> 01:10:27,000
默认字体叫什么

1953
01:10:27,000 --> 01:10:29,000
Fix this

1954
01:10:29,000 --> 01:10:30,000
对对对对

1955
01:10:30,000 --> 01:10:31,000
Fix this

1956
01:10:31,000 --> 01:10:31,000
对

1957
01:10:31,000 --> 01:10:32,000
呃

1958
01:10:32,000 --> 01:10:35,000
然后他们是有一个叫什么 Term 的一个应用

1959
01:10:35,000 --> 01:10:35,000
他们也经常

1960
01:10:35,000 --> 01:10:37,000
我看他们有时候会用

1961
01:10:37,000 --> 01:10:43,000
然后你还记得当年跑我们玩那个 BBS 的时候也有人用那个东西去登 BBS 吗

1962
01:10:43,000 --> 01:10:44,000
就 Telnet 的东西

1963
01:10:44,000 --> 01:10:46,000
登 BBS 不是用 Telnet 吗

1964
01:10:46,000 --> 01:10:47,000
呃

1965
01:10:47,000 --> 01:10:48,000
Telnet 也不好用吗

1966
01:10:48,000 --> 01:10:52,000
也跟那个 Puti 和那个命令行那个那个窗口的一样的毛病

1967
01:10:52,000 --> 01:10:55,000
就是那个字体就窗口的管大小

1968
01:10:55,000 --> 01:10:56,000
他你是不能改他大小的吗

1969
01:10:56,000 --> 01:10:58,000
他都是 80 层 24 定死了

1970
01:10:58,000 --> 01:10:59,000
OK

1971
01:10:59,000 --> 01:11:00,000
对

1972
01:11:00,000 --> 01:11:03,000
他有一些这种这种就是图形就故意的应用

1973
01:11:03,000 --> 01:11:06,000
然后他是那个可以去修改那个字体大小

1974
01:11:06,000 --> 01:11:08,000
然后可以调节窗口大小的吗

1975
01:11:08,000 --> 01:11:09,000
就相对来说好用一些

1976
01:11:09,000 --> 01:11:11,000
应该 C Term 吧

1977
01:11:11,000 --> 01:11:12,000
应该是叫这个东西

1978
01:11:12,000 --> 01:11:13,000
我想想

1979
01:11:13,000 --> 01:11:14,000
C Term

1980
01:11:14,000 --> 01:11:15,000
啊

1981
01:11:15,000 --> 01:11:15,000
OK

1982
01:11:15,000 --> 01:11:17,000
这个我听过

1983
01:11:17,000 --> 01:11:18,000
C Term

1984
01:11:18,000 --> 01:11:20,000
搞不好我还用过呢

1985
01:11:20,000 --> 01:11:20,000
对

1986
01:11:20,000 --> 01:11:21,000
这个应该是有很多人

1987
01:11:21,000 --> 01:11:21,000
对

1988
01:11:21,000 --> 01:11:23,000
这是跑 BBS 的时候用过的

1989
01:11:23,000 --> 01:11:25,000
但有一些是类似这种的软件

1990
01:11:25,000 --> 01:11:29,000
C Term 是一个与 F Term 功能相仿的通用仿真中端软件

1991
01:11:29,000 --> 01:11:34,000
是中国大陆地区发展的第一个在 BBS 上支持鼠标操作的 BBS 软件

1992
01:11:34,000 --> 01:11:34,000
对

1993
01:11:34,000 --> 01:11:35,000
所以这是一个

1994
01:11:35,000 --> 01:11:37,000
这是一个国产软件

1995
01:11:37,000 --> 01:11:38,000
对啊

1996
01:11:38,000 --> 01:11:40,000
那么说华中大学

1997
01:11:40,000 --> 01:11:41,000
当时那个人在华中

1998
01:11:41,000 --> 01:11:42,000
华中理工

1999
01:11:42,000 --> 01:11:43,000
华中理工大学

2000
01:11:43,000 --> 01:11:44,000
研究生嘛

2001
01:11:44,000 --> 01:11:45,000
97 年的时候

2002
01:11:45,000 --> 01:11:46,000
OK

2003
01:11:46,000 --> 01:11:47,000
有意思

2004
01:11:47,000 --> 01:11:53,000
对这个还是有一些什么暴露年龄的历史

2005
01:11:53,000 --> 01:11:54,000
我还记得他好

2006
01:11:54,000 --> 01:11:55,000
可以看到图标

2007
01:11:55,000 --> 01:11:56,000
我想起来

2008
01:11:56,000 --> 01:11:57,000
这个东西我还真的用过

2009
01:11:57,000 --> 01:11:58,000
对啊

2010
01:11:58,000 --> 01:11:59,000
好古早的记忆

2011
01:11:59,000 --> 01:12:01,000
天啊

2012
01:12:01,000 --> 01:12:01,000
对

2013
01:12:01,000 --> 01:12:07,000
所以 Windows 上面其实我们也不太说到底有什么中端某仿真器

2014
01:12:07,000 --> 01:12:07,000
对

2015
01:12:07,000 --> 01:12:10,000
至少搜了一个叫做 Console 2 的东西

2016
01:12:10,000 --> 01:12:11,000
好像口碑不错

2017
01:12:11,000 --> 01:12:12,000
支持什么

2018
01:12:12,000 --> 01:12:13,000
其实

2019
01:12:13,000 --> 01:12:14,000
Clear Type

2020
01:12:14,000 --> 01:12:17,000
对对对对

2021
01:12:17,000 --> 01:12:18,000
这个很重要啊

2022
01:12:18,000 --> 01:12:19,000
这个用户体验很重要

2023
01:12:19,000 --> 01:12:21,000
就好像我们在这个 iTerm

2024
01:12:21,000 --> 01:12:22,000
就就怎么来的

2025
01:12:22,000 --> 01:12:24,000
就刚才你说那个铺铁之余

2026
01:12:24,000 --> 01:12:29,000
这个 Windows 就相当于这个什么 RXVT 之余 Linux 感觉一样

2027
01:12:29,000 --> 01:12:31,000
就非常古早的那种东西

2028
01:12:31,000 --> 01:12:32,000
没错

2029
01:12:32,000 --> 01:12:36,000
对

2030
01:12:36,000 --> 01:12:37,000
然后还如果

2031
01:12:37,000 --> 01:12:41,000
但如果你要在 Windows 上面装一个那个 Ming

2032
01:12:41,000 --> 01:12:42,000
Ming

2033
01:12:42,000 --> 01:12:44,000
叫什么

2034
01:12:44,000 --> 01:12:44,000
Ming

2035
01:12:44,000 --> 01:12:46,000
SYS

2036
01:12:46,000 --> 01:12:50,000
MingSys 和 MingGW 的关系

2037
01:12:50,000 --> 01:12:51,000
Sigwin 吧

2038
01:12:51,000 --> 01:12:53,000
是什么 Sigwin 吧

2039
01:12:53,000 --> 01:12:53,000
对对对

2040
01:12:53,000 --> 01:12:55,000
Sigwin 和 Ming

2041
01:12:55,000 --> 01:12:57,000
G

2042
01:12:57,000 --> 01:12:59,000
天啊

2043
01:12:59,000 --> 01:13:00,000
MingGW

2044
01:13:00,000 --> 01:13:01,000
没错没错

2045
01:13:01,000 --> 01:13:02,000
我不知道怎么念

2046
01:13:02,000 --> 01:13:03,000
反正是这么写

2047
01:13:03,000 --> 01:13:04,000
MingW 吧

2048
01:13:04,000 --> 01:13:05,000
我也不知道

2049
01:13:05,000 --> 01:13:05,000
MingW 吧

2050
01:13:05,000 --> 01:13:06,000
对

2051
01:13:06,000 --> 01:13:06,000
对

2052
01:13:06,000 --> 01:13:12,000
它的这个意思就是 minimum GNU for Linux

2053
01:13:12,000 --> 01:13:13,000
for Windows

2054
01:13:13,000 --> 01:13:14,000
for Windows

2055
01:13:14,000 --> 01:13:15,000
对

2056
01:13:15,000 --> 01:13:17,000
而且两者其实不一样东西

2057
01:13:17,000 --> 01:13:21,000
就是 Sigwin 是一个 Linux 跑在 Windows 上面

2058
01:13:21,000 --> 01:13:23,000
有点像一个

2059
01:13:23,000 --> 01:13:24,000
不对不对

2060
01:13:24,000 --> 01:13:24,000
异生虫

2061
01:13:24,000 --> 01:13:31,000
Sigwin 应该是一个就是是一个这个 Gnu 的 user

2062
01:13:31,000 --> 01:13:31,000
port

2063
01:13:31,000 --> 01:13:32,000
对

2064
01:13:32,000 --> 01:13:35,000
是一个在 Windows 上的这个核上

2065
01:13:35,000 --> 01:13:42,000
而这个 MingW 则是一个开发原生程序的

2066
01:13:42,000 --> 01:13:46,000
的 Gnu 的套装

2067
01:13:46,000 --> 01:13:48,000
对

2068
01:13:48,000 --> 01:13:53,000
就是用这个 MingW 开发出来的程序是原生的 Windows 的程序

2069
01:13:53,000 --> 01:14:00,000
而 Sigwin 上面的东西则是能够在 Windows 上面跑的 PauseX 程序

2070
01:14:00,000 --> 01:14:02,000
好乱

2071
01:14:02,000 --> 01:14:03,000
我没理解错的话

2072
01:14:03,000 --> 01:14:03,000
对

2073
01:14:03,000 --> 01:14:04,000
对

2074
01:14:04,000 --> 01:14:10,000
你可能需要把我刚才说的这句话重听两遍才明白到底什么意思

2075
01:14:10,000 --> 01:14:11,000
但对

2076
01:14:11,000 --> 01:14:12,000
大概就是这样

2077
01:14:12,000 --> 01:14:13,000
OK

2078
01:14:13,000 --> 01:14:16,000
所以我很好奇真的现在还有人这么干吗

2079
01:14:16,000 --> 01:14:20,000
我觉得可能更好的方式是在 Windows 上

2080
01:14:20,000 --> 01:14:21,000
装虚拟机是吧

2081
01:14:21,000 --> 01:14:21,000
虚拟机

2082
01:14:21,000 --> 01:14:25,000
然后用一个这个什么什么什么 term 连进去可能会好一点吧

2083
01:14:28,000 --> 01:14:30,000
还是举一个场景

2084
01:14:30,000 --> 01:14:31,000
我觉得就

2085
01:14:31,000 --> 01:14:38,000
但我也的确想不出来有什么应用场景会使用到 MingW 或者是 Sigwin

2086
01:14:38,000 --> 01:14:38,000
对

2087
01:14:38,000 --> 01:14:44,000
如果听各位听众有什么非常典型的用力不妨告诉我们

2088
01:14:44,000 --> 01:14:56,000
但是目前来看好像我基本上接触到 Sigwin 和 MingW 就是在什么各种工具的兼容列宝里面说什么

2089
01:14:56,000 --> 01:15:00,000
有一个 bug 在 MingW 会出现

2090
01:15:00,000 --> 01:15:01,000
然后已经把它 fix 了

2091
01:15:01,000 --> 01:15:02,000
是

2092
01:15:02,000 --> 01:15:07,000
然后除此之外再没有接触到活人在使用它的场面

2093
01:15:07,000 --> 01:15:08,000
对

2094
01:15:08,000 --> 01:15:11,000
但如果你有这个需求的话

2095
01:15:11,000 --> 01:15:15,000
基本上装了 MingW 之后会有一个叫做 MintTY 的东西

2096
01:15:15,000 --> 01:15:18,000
然后它就是一个原生的 Windows 下面的重担放弃器

2097
01:15:18,000 --> 01:15:21,000
对

2098
01:15:21,000 --> 01:15:22,000
对

2099
01:15:22,000 --> 01:15:28,000
而且是跑这个跑 shell 专用的机场

2100
01:15:28,000 --> 01:15:29,000
嗯嗯

2101
01:15:29,000 --> 01:15:33,000
没有办法在它在它里面跑跑一个 DOS command line

2102
01:15:33,000 --> 01:15:35,000
嗯嗯

2103
01:15:35,000 --> 01:15:35,000
对

2104
01:15:35,000 --> 01:15:41,000
刚才讲了这个主流的这个桌面系统上面的这个中端仿认器好

2105
01:15:41,000 --> 01:15:43,000
我们现在看一下现在不是移动很火吗

2106
01:15:43,000 --> 01:15:44,000
对吧

2107
01:15:44,000 --> 01:15:48,000
在这个移动设备上有什么方法可以去远程一个服务器的

2108
01:15:48,000 --> 01:15:52,000
对我用了很久了就是一个叫做 ISSH 的东西

2109
01:15:52,000 --> 01:15:53,000
对对对

2110
01:15:53,000 --> 01:15:54,000
嗯

2111
01:15:54,000 --> 01:15:54,000
我也有

2112
01:15:54,000 --> 01:15:56,000
我之前也有也有用这个

2113
01:15:56,000 --> 01:15:57,000
OK

2114
01:15:57,000 --> 01:15:58,000
你说怎么样

2115
01:15:58,000 --> 01:16:01,000
觉得怎么说呢

2116
01:16:01,000 --> 01:16:02,000
就是有点丑

2117
01:16:02,000 --> 01:16:04,000
键盘太小了

2118
01:16:04,000 --> 01:16:06,000
那可没办法

2119
01:16:06,000 --> 01:16:07,000
你屏幕只有那么大

2120
01:16:07,000 --> 01:16:08,000
你这个你有啥有啥法

2121
01:16:08,000 --> 01:16:10,000
但我觉得它不好看

2122
01:16:10,000 --> 01:16:10,000
对

2123
01:16:10,000 --> 01:16:14,000
我觉得在手机上跑一个 TerminalEmail

2124
01:16:14,000 --> 01:16:15,000
本身就是一个很奇葩的行为

2125
01:16:15,000 --> 01:16:17,000
但有时候救急嘛

2126
01:16:17,000 --> 01:16:20,000
比如你在外面这个服务器挂掉了

2127
01:16:20,000 --> 01:16:22,000
你要连上去看重启一下怎么办

2128
01:16:22,000 --> 01:16:26,000
但就作为一个正常的这个这个运维

2129
01:16:26,000 --> 01:16:28,000
你不应该让这种事情发生对吧

2130
01:16:28,000 --> 01:16:31,000
但是它总会发生的吧

2131
01:16:31,000 --> 01:16:32,000
对

2132
01:16:32,000 --> 01:16:35,000
在救火的时候的确可以这样干一干

2133
01:16:35,000 --> 01:16:36,000
嗯

2134
01:16:36,000 --> 01:16:39,000
我记得有一次我在伦敦的时候

2135
01:16:39,000 --> 01:16:45,000
在车上面用一个蓝牙的 Mac 的键盘连到手机上

2136
01:16:45,000 --> 01:16:48,000
然后就远程登录到服务器上去改什么东西

2137
01:16:48,000 --> 01:16:52,000
我这个场景我还历历在目

2138
01:16:52,000 --> 01:16:52,000
对

2139
01:16:52,000 --> 01:16:53,000
我也试过

2140
01:16:53,000 --> 01:16:54,000
天哪

2141
01:16:54,000 --> 01:16:54,000
OK

2142
01:16:54,000 --> 01:16:59,000
但反过来现在什么 iPad Pro 之类的出来了

2143
01:16:59,000 --> 01:17:02,000
然后在一个大屏幕的 iOS 设备上面

2144
01:17:02,000 --> 01:17:03,000
开一个 TerminalEmail

2145
01:17:03,000 --> 01:17:05,000
它好像还挺合乎情理

2146
01:17:05,000 --> 01:17:08,000
又绕合了当年终端的真正的终端的感觉

2147
01:17:08,000 --> 01:17:09,000
对

2148
01:17:09,000 --> 01:17:13,000
而且比当年终端要轻薄便携很多

2149
01:17:13,000 --> 01:17:14,000
对

2150
01:17:14,000 --> 01:17:16,000
这个还是挺有意思的

2151
01:17:16,000 --> 01:17:19,000
就 ISSH 我有装过

2152
01:17:19,000 --> 01:17:22,000
但觉得它这个美观上可能稍微差一点

2153
01:17:22,000 --> 01:17:26,000
今天我要推荐另外一个是这个 Panik 写的

2154
01:17:26,000 --> 01:17:27,000
叫做 Prompt

2155
01:17:27,000 --> 01:17:28,000
它出一出二代

2156
01:17:28,000 --> 01:17:29,000
Prompt 2

2157
01:17:29,000 --> 01:17:31,000
这个好像我也买了

2158
01:17:31,000 --> 01:17:33,000
但是你买的是 EU

2159
01:17:33,000 --> 01:17:33,000
本身

2160
01:17:33,000 --> 01:17:34,000
对

2161
01:17:34,000 --> 01:17:37,000
因为本身也很少用到这个功能

2162
01:17:37,000 --> 01:17:37,000
其实

2163
01:17:37,000 --> 01:17:39,000
但是我觉得它那个还挺好的

2164
01:17:39,000 --> 01:17:42,000
做得比较简单漂亮

2165
01:17:42,000 --> 01:17:43,000
很有那个

2166
01:17:43,000 --> 01:17:46,000
很有那个 X-Face Terminal 的感觉

2167
01:17:46,000 --> 01:17:50,000
就很有 X-Face Terminal 之于 Linex 的感觉

2168
01:17:50,000 --> 01:17:51,000
OK

2169
01:17:51,000 --> 01:17:52,000
有意思

2170
01:17:52,000 --> 01:17:53,000
或者我也试试

2171
01:17:53,000 --> 01:17:58,000
然后我在这里要推荐一个叫做 Server Audit

2172
01:17:58,000 --> 01:18:01,000
就是审计的这个

2173
01:18:01,000 --> 01:18:03,000
服务器审计员

2174
01:18:03,000 --> 01:18:04,000
服务器审计的文件

2175
01:18:04,000 --> 01:18:05,000
对

2176
01:18:05,000 --> 01:18:06,000
虽然名字叫这个名字

2177
01:18:06,000 --> 01:18:11,000
但它的本质上只是一个 SSH 客户端

2178
01:18:11,000 --> 01:18:14,000
加上一个 Terminal Emulator

2179
01:18:14,000 --> 01:18:16,000
对

2180
01:18:16,000 --> 01:18:17,000
你还别说

2181
01:18:17,000 --> 01:18:19,000
刚才我在这个 App Store 里面搜这个 SSH

2182
01:18:19,000 --> 01:18:21,000
现在好像还蛮多这种

2183
01:18:21,000 --> 01:18:23,000
这个中单仿真器而已

2184
01:18:23,000 --> 01:18:24,000
之前很少

2185
01:18:24,000 --> 01:18:26,000
基本就那两款

2186
01:18:26,000 --> 01:18:27,000
SSH

2187
01:18:27,000 --> 01:18:29,000
对

2188
01:18:29,000 --> 01:18:32,000
现在还有好几款在上面都有

2189
01:18:32,000 --> 01:18:34,000
还看起来截图还不错的样子

2190
01:18:34,000 --> 01:18:35,000
对

2191
01:18:35,000 --> 01:18:37,000
说明这个东西的用力还是非常广泛的

2192
01:18:37,000 --> 01:18:37,000
而且

2193
01:18:37,000 --> 01:18:38,000
救火的

2194
01:18:38,000 --> 01:18:40,000
还是需要经常救火的

2195
01:18:40,000 --> 01:18:42,000
没错

2196
01:18:42,000 --> 01:18:45,000
而且其实也从另外一个侧面反映了

2197
01:18:45,000 --> 01:18:49,000
这个 CLI 其实是一个生生不息的东西

2198
01:18:49,000 --> 01:18:49,000
就

2199
01:18:49,000 --> 01:18:52,000
你知道早期的

2200
01:18:52,000 --> 01:18:56,000
苹果的开发哲学是

2201
01:18:56,000 --> 01:19:00,000
就是 CLI 是一个注尿过时要扔进历史垃圾桶的东西

2202
01:19:00,000 --> 01:19:04,000
所以在新的图形界面出来之后

2203
01:19:04,000 --> 01:19:08,000
基本上是不可能有什么 Terminal Emulator 这种东西出现在苹果机上

2204
01:19:08,000 --> 01:19:11,000
但是现在我们有了 OS 10

2205
01:19:11,000 --> 01:19:14,000
然后赫然发现除了浏览器

2206
01:19:14,000 --> 01:19:19,000
这个 Item R 基本上是一个我一定会开的程序

2207
01:19:19,000 --> 01:19:20,000
就还挺

2208
01:19:20,000 --> 01:19:24,000
就我的 Item R 已经是这个就系统启动

2209
01:19:24,000 --> 01:19:25,000
模型启动的

2210
01:19:25,000 --> 01:19:25,000
对

2211
01:19:25,000 --> 01:19:26,000
我也是

2212
01:19:26,000 --> 01:19:27,000
就是开一个 Term

2213
01:19:27,000 --> 01:19:28,000
然后开一个 Item R

2214
01:19:28,000 --> 01:19:32,000
我还可以有一个小的 Tip

2215
01:19:32,000 --> 01:19:36,000
就是 Item R 在启动之后

2216
01:19:36,000 --> 01:19:39,000
它会给每一个 Panel

2217
01:19:39,000 --> 01:19:44,000
注意是每一个 Panel 给一个 Environment Variable

2218
01:19:44,000 --> 01:19:46,000
那个环境变量

2219
01:19:46,000 --> 01:19:47,000
对

2220
01:19:47,000 --> 01:19:49,000
会给一个环境变量

2221
01:19:49,000 --> 01:19:53,000
然后这个环境变量根据你的 Tab 和 Panel 是不一样的

2222
01:19:54,000 --> 01:19:59,000
然后你就可以在比如说你的 ZShell RC 里面写说

2223
01:19:59,000 --> 01:20:04,000
如果当前的这个叫做应该是叫 Item Session

2224
01:20:04,000 --> 01:20:11,000
如果当前的 Item Session 是比如说 Windows 0 Tab 0 Panel 0

2225
01:20:11,000 --> 01:20:16,000
那它就是第一个被启动的 Pane

2226
01:20:16,000 --> 01:20:19,000
然后我可以在这个 Pane 里面跑一个什么特定的

2227
01:20:19,000 --> 01:20:20,000
软件

2228
01:20:20,000 --> 01:20:21,000
启动都软件都启动好

2229
01:20:21,000 --> 01:20:23,000
就里面的命令好像都启动好了

2230
01:20:23,000 --> 01:20:24,000
对

2231
01:20:24,000 --> 01:20:27,000
我现在就是一上来开了 Item 之后

2232
01:20:27,000 --> 01:20:28,000
如果我新开一个 Tab

2233
01:20:28,000 --> 01:20:33,000
这个新的 Tab 将会是 W 0 T 1

2234
01:20:33,000 --> 01:20:36,000
然后在这里面我会开 iPython

2235
01:20:36,000 --> 01:20:38,000
对

2236
01:20:38,000 --> 01:20:42,000
就是里面各种就是 Layout 和这个里面的程序都启动好了

2237
01:20:42,000 --> 01:20:45,000
你开机起来就是默认跟你关机的时候是一样的

2238
01:20:45,000 --> 01:20:46,000
对

2239
01:20:46,000 --> 01:20:48,000
这个基本上是

2240
01:20:48,000 --> 01:20:49,000
太黑了你这个

2241
01:20:49,000 --> 01:20:54,000
是不是有开了 Tmax 到你们那个服务器上面的

2242
01:20:54,000 --> 01:20:56,000
没有没有

2243
01:20:56,000 --> 01:20:57,000
我是这是家的电脑

2244
01:20:57,000 --> 01:20:58,000
啊

2245
01:20:58,000 --> 01:20:58,000
OK

2246
01:20:58,000 --> 01:21:01,000
算是一个小窗门吧

2247
01:21:01,000 --> 01:21:02,000
介绍给大家

2248
01:21:02,000 --> 01:21:06,000
对对对这个不错这个学习了可以有大家可以试一下

2249
01:21:06,000 --> 01:21:07,000
OK

2250
01:21:07,000 --> 01:21:10,000
安卓上面有什么呢

2251
01:21:10,000 --> 01:21:12,000
安卓上面你用安卓吗

2252
01:21:12,000 --> 01:21:14,000
我不用啊但是你不是用吗

2253
01:21:14,000 --> 01:21:18,000
我我现在就是偶尔用一下就是还没到那个程度

2254
01:21:18,000 --> 01:21:21,000
那你有装什么 Tab 没有

2255
01:21:21,000 --> 01:21:22,000
完全没有

2256
01:21:22,000 --> 01:21:22,000
没有

2257
01:21:22,000 --> 01:21:24,000
我其实平时很少用的

2258
01:21:24,000 --> 01:21:25,000
好吧

2259
01:21:25,000 --> 01:21:29,000
那就欢迎各位用安卓的读者来听到

2260
01:21:29,000 --> 01:21:31,000
就如果你用安卓也用那个

2261
01:21:31,000 --> 01:21:37,000
那个 Terminal 登录到远程库去救火的你一定知道有什么是比较好使的

2262
01:21:37,000 --> 01:21:38,000
对

2263
01:21:38,000 --> 01:21:39,000
你说安卓上面会像

2264
01:21:39,000 --> 01:21:40,000
推荐给我们

2265
01:21:40,000 --> 01:21:43,000
会不会像那个那个那个上面一样有大概百花齐放

2266
01:21:43,000 --> 01:21:44,000
二三十种吧

2267
01:21:44,000 --> 01:21:45,000
大概肯定有

2268
01:21:45,000 --> 01:21:46,000
对

2269
01:21:46,000 --> 01:21:49,000
OK

2270
01:21:49,000 --> 01:21:54,000
那么上期的这个补衣环节我们就先搞一段落了哈

2271
01:21:54,000 --> 01:21:57,000
算是本期的一个主题吧

2272
01:21:57,000 --> 01:22:00,000
就本期其实没有什么主题

2273
01:22:00,000 --> 01:22:02,000
只是想要做一个 follow up

2274
01:22:02,000 --> 01:22:03,000
然后聊聊新闻的

2275
01:22:03,000 --> 01:22:05,000
但是这一个 follow up 就做了一个段时间

2276
01:22:05,000 --> 01:22:06,000
也还不错

2277
01:22:06,000 --> 01:22:08,000
我们现在开始聊新闻

2278
01:22:08,000 --> 01:22:09,000
好

2279
01:22:09,000 --> 01:22:11,000
现在就是我的新闻环节

2280
01:22:11,000 --> 01:22:12,000
对

2281
01:22:12,000 --> 01:22:15,000
插播新门联播那个

2282
01:22:15,000 --> 01:22:17,000
进那个开场去自己脑补一下

2283
01:22:17,000 --> 01:22:21,000
你说那个那个曲子有有你有版权吗

2284
01:22:21,000 --> 01:22:23,000
肯定有啊

2285
01:22:23,000 --> 01:22:25,000
有版权就算了

2286
01:22:25,000 --> 01:22:26,000
有没有 60 年

2287
01:22:26,000 --> 01:22:27,000
没有

2288
01:22:27,000 --> 01:22:29,000
中国的版权追溯是多少年

2289
01:22:29,000 --> 01:22:30,000
应该也是一样

2290
01:22:30,000 --> 01:22:32,000
不这个你不知道那个人死挂没挂

2291
01:22:32,000 --> 01:22:33,000
对吧

2292
01:22:33,000 --> 01:22:34,000
这个版权持有者是谁

2293
01:22:34,000 --> 01:22:35,000
对

2294
01:22:35,000 --> 01:22:36,000
没错

2295
01:22:36,000 --> 01:22:37,000
说了没错

2296
01:22:37,000 --> 01:22:38,000
这个很难讲

2297
01:22:38,000 --> 01:22:41,000
所以第一条新闻是什么

2298
01:22:41,000 --> 01:22:45,000
第一条新闻是我们之前提到过的 Microsoft Code

2299
01:22:45,000 --> 01:22:49,000
在上周正式开源了

2300
01:22:49,000 --> 01:22:51,000
这个 code 可能还是要解释一下

2301
01:22:51,000 --> 01:22:53,000
就之前我们也讲过几次了

2302
01:22:53,000 --> 01:22:55,000
但如果你没听刚好没听到的话

2303
01:22:55,000 --> 01:23:00,000
code 是微软基于那个 github 发布的那个 atom

2304
01:23:00,000 --> 01:23:02,000
做了一款代码编辑器

2305
01:23:02,000 --> 01:23:03,000
Electron

2306
01:23:03,000 --> 01:23:04,000
Electron

2307
01:23:04,000 --> 01:23:05,000
做了一款代码编辑器

2308
01:23:05,000 --> 01:23:06,000
然后 Electron 大概是一个什么呢

2309
01:23:06,000 --> 01:23:10,000
大概是用就是 web 的一些技术

2310
01:23:10,000 --> 01:23:11,000
什么 html 啊

2311
01:23:11,000 --> 01:23:12,000
javascript

2312
01:23:12,000 --> 01:23:13,000
javascript

2313
01:23:13,000 --> 01:23:16,000
来写这个客户端软件的一套黑微科技

2314
01:23:16,000 --> 01:23:18,000
对

2315
01:23:18,000 --> 01:23:19,000
大概是这样

2316
01:23:19,000 --> 01:23:21,000
所以它 code 就开源了是吧

2317
01:23:21,000 --> 01:23:24,000
对全称应该叫做 Visual Studio Code

2318
01:23:24,000 --> 01:23:25,000
对

2319
01:23:25,000 --> 01:23:26,000
就它不是 Visual Studio

2320
01:23:26,000 --> 01:23:28,000
但是它挂了一个 Visual Studio 的名字

2321
01:23:28,000 --> 01:23:30,000
它只是一个编辑器而已

2322
01:23:30,000 --> 01:23:32,000
只不过这个编辑器的功能非常强大

2323
01:23:32,000 --> 01:23:34,000
可以 debug

2324
01:23:34,000 --> 01:23:36,000
可以有各种各样的黑功能

2325
01:23:36,000 --> 01:23:38,000
比如说你写一个

2326
01:23:38,000 --> 01:23:41,000
你写一个 css

2327
01:23:41,000 --> 01:23:44,000
写一条 css

2328
01:23:44,000 --> 01:23:46,000
然后把鼠标挪上去

2329
01:23:46,000 --> 01:23:48,000
它会

2330
01:23:48,000 --> 01:23:51,000
给出一个 css

2331
01:23:51,000 --> 01:23:53,000
会选择出一个什么样的元素出来的一个 template

2332
01:23:53,000 --> 01:23:55,000
OK

2333
01:23:55,000 --> 01:24:02,000
就如果你比如说你写一个 divp.important

2334
01:24:02,000 --> 01:24:03,000
然后它就会给

2335
01:24:03,000 --> 01:24:05,000
然后满足鼠标挪挪上去

2336
01:24:05,000 --> 01:24:08,000
它就会给出一个 p tag

2337
01:24:08,000 --> 01:24:09,000
嵌套一个

2338
01:24:09,000 --> 01:24:12,000
不 div tag 嵌套一个 p tag

2339
01:24:12,000 --> 01:24:15,000
然后这个 p tag 带一个 important class

2340
01:24:15,000 --> 01:24:17,000
啊

2341
01:24:17,000 --> 01:24:19,000
出如此类这样非常逆天的

2342
01:24:19,000 --> 01:24:21,000
使用的贴心的

2343
01:24:21,000 --> 01:24:24,000
improvement

2344
01:24:24,000 --> 01:24:26,000
但是我还是没有在用的

2345
01:24:26,000 --> 01:24:27,000
OK

2346
01:24:27,000 --> 01:24:31,000
我也不知道就是我打开它之后

2347
01:24:31,000 --> 01:24:33,000
基本上编辑一点什么东西

2348
01:24:33,000 --> 01:24:36,000
就 cpu 利用率就 99%

2349
01:24:36,000 --> 01:24:37,000
然后风扇开始狂转

2350
01:24:37,000 --> 01:24:39,000
基本上没有例外的时候到底是为什么

2351
01:24:39,000 --> 01:24:40,000
这个

2352
01:24:40,000 --> 01:24:44,000
就跟那个什么 electro 本身没关系吗

2353
01:24:44,000 --> 01:24:46,000
应该就是因为这个吧

2354
01:24:46,000 --> 01:24:49,000
我觉得好像用 atom 也是这个症状

2355
01:24:49,000 --> 01:24:50,000
对啊

2356
01:24:50,000 --> 01:24:51,000
所以我觉得这个本来就是

2357
01:24:51,000 --> 01:24:54,000
就这套技术本来又不是拿来这么玩的

2358
01:24:54,000 --> 01:24:55,000
对吧

2359
01:24:55,000 --> 01:24:56,000
不是拿来做这个桌面应用的

2360
01:24:56,000 --> 01:24:58,000
但是我们把它三号

2361
01:24:58,000 --> 01:24:59,000
把它拿来玩

2362
01:24:59,000 --> 01:25:00,000
玩成这样了

2363
01:25:00,000 --> 01:25:01,000
我觉得是很奇怪的

2364
01:25:02,000 --> 01:25:03,000
嗯

2365
01:25:03,000 --> 01:25:04,000
说也是

2366
01:25:04,000 --> 01:25:05,000
哎不过说到这个插一句啊

2367
01:25:05,000 --> 01:25:07,000
之前我见过一个人写过一个

2368
01:25:07,000 --> 01:25:09,000
你说这个算 term 吗

2369
01:25:09,000 --> 01:25:10,000
也不算了

2370
01:25:10,000 --> 01:25:12,000
就是他用网页做了一个能够

2371
01:25:12,000 --> 01:25:15,000
登录远存桌面

2372
01:25:15,000 --> 01:25:17,000
然后里面显示那些东西还挺搞笑的

2373
01:25:17,000 --> 01:25:19,000
比如说我们在命令上面敲一个 list

2374
01:25:19,000 --> 01:25:21,000
就是 list 的这个命令

2375
01:25:21,000 --> 01:25:22,000
iOS 的命令的时候

2376
01:25:22,000 --> 01:25:25,000
它会列出一堆这个符号嘛

2377
01:25:25,000 --> 01:25:27,000
表示文件名目录之类的

2378
01:25:27,000 --> 01:25:28,000
对吧

2379
01:25:28,000 --> 01:25:30,000
它会 list 出一堆 icon 来

2380
01:25:30,000 --> 01:25:32,000
可以点击进去

2381
01:25:32,000 --> 01:25:33,000
OK

2382
01:25:33,000 --> 01:25:36,000
就是如果你用访问他的网站的话

2383
01:25:36,000 --> 01:25:41,000
你会有一个会会遇到一个准 cli 的界面

2384
01:25:41,000 --> 01:25:42,000
是吧

2385
01:25:42,000 --> 01:25:46,000
就是算是故意和这个 cli 的结合嘛

2386
01:25:46,000 --> 01:25:47,000
这还挺有意思的

2387
01:25:47,000 --> 01:25:48,000
但我忘了那个叫什么名字

2388
01:25:48,000 --> 01:25:49,000
当时我还装过

2389
01:25:49,000 --> 01:25:51,000
就是还挺神奇的

2390
01:25:51,000 --> 01:25:52,000
好

2391
01:25:52,000 --> 01:25:53,000
插个话

2392
01:25:53,000 --> 01:25:55,000
下一则新闻

2393
01:25:55,000 --> 01:25:56,000
这个大新闻了

2394
01:25:56,000 --> 01:25:58,000
这个比较重要

2395
01:25:58,000 --> 01:25:59,000
wordpress

2396
01:25:59,000 --> 01:26:03,000
这个用这个世界上最好的语言

2397
01:26:03,000 --> 01:26:04,000
php 写的

2398
01:26:04,000 --> 01:26:08,000
占据着世界上 25%网站的这个 cms

2399
01:26:08,000 --> 01:26:10,000
就是内容管理系统

2400
01:26:10,000 --> 01:26:14,000
他们最近就是那边革命了

2401
01:26:14,000 --> 01:26:15,000
维新了

2402
01:26:15,000 --> 01:26:17,000
他们把那个管理界面

2403
01:26:17,000 --> 01:26:18,000
用 node

2404
01:26:18,000 --> 01:26:20,000
就是用 javascript 和 node

2405
01:26:20,000 --> 01:26:22,000
就客户端

2406
01:26:22,000 --> 01:26:24,000
服务器端用 node 重写了一遍

2407
01:26:24,000 --> 01:26:27,000
然后客户端是用 react 来实现的

2408
01:26:27,000 --> 01:26:29,000
对

2409
01:26:29,000 --> 01:26:30,000
请问 php 去哪了

2410
01:26:30,000 --> 01:26:31,000
呃

2411
01:26:31,000 --> 01:26:32,000
php 还是在保留

2412
01:26:32,000 --> 01:26:34,000
保留着他们在 api 的那个层面

2413
01:26:34,000 --> 01:26:36,000
就是他这个只是一个管理界变嘛

2414
01:26:36,000 --> 01:26:37,000
管理界变就是

2415
01:26:37,000 --> 01:26:39,000
你玩你用过那个 wordpress 管理界变

2416
01:26:39,000 --> 01:26:40,000
他其实也是一个网

2417
01:26:40,000 --> 01:26:41,000
一个网网站嘛

2418
01:26:41,000 --> 01:26:42,000
他可以去做

2419
01:26:42,000 --> 01:26:43,000
这个比如说编编

2420
01:26:43,000 --> 01:26:44,000
编管理编辑帖子啊

2421
01:26:44,000 --> 01:26:46,000
装插件那些东西嘛

2422
01:26:46,000 --> 01:26:49,000
然后他把这块部分用这个 node

2423
01:26:49,000 --> 01:26:50,000
javascript 重写了

2424
01:26:50,000 --> 01:26:53,000
然后然后服务端是用那个 nodejs

2425
01:26:53,000 --> 01:26:55,000
跟那个客户端对接

2426
01:26:55,000 --> 01:26:56,000
呃对接

2427
01:26:56,000 --> 01:26:58,000
然后那边再去调用那个

2428
01:26:58,000 --> 01:27:01,000
就是他的那个核心部分的 wordpress

2429
01:27:01,000 --> 01:27:03,000
还是 php 提供那个 api

2430
01:27:03,000 --> 01:27:05,000
这些是这三文章

2431
01:27:05,000 --> 01:27:06,000
管理数据库什么的吧

2432
01:27:06,000 --> 01:27:09,000
等于他把 php 完全后台化了

2433
01:27:09,000 --> 01:27:10,000
对

2434
01:27:10,000 --> 01:27:13,000
把 php 当成一个 api platform framework

2435
01:27:13,000 --> 01:27:16,000
他们那个发布的这个发布这个消息的时候

2436
01:27:16,000 --> 01:27:19,000
有有几篇那个博客文章还挺有意思的嘛

2437
01:27:19,000 --> 01:27:21,000
有一篇讲他们为什么这么做

2438
01:27:21,000 --> 01:27:23,000
但是我觉得很清楚的

2439
01:27:23,000 --> 01:27:25,000
人家说先表扬

2440
01:27:25,000 --> 01:27:28,000
先先这段接着不能不能什么不能自黑嘛

2441
01:27:28,000 --> 01:27:29,000
还是说啊

2442
01:27:29,000 --> 01:27:31,000
那个我们用这个世界上最好的语言 php

2443
01:27:31,000 --> 01:27:34,000
用了那么多年十几年对吧

2444
01:27:34,000 --> 01:27:36,000
然后也做了很多这个贡献啊

2445
01:27:36,000 --> 01:27:37,000
做了很多很复杂的功能

2446
01:27:37,000 --> 01:27:39,000
我们这个有几千上万

2447
01:27:39,000 --> 01:27:40,000
成千上万的这个 contributor

2448
01:27:40,000 --> 01:27:41,000
贡献代码的人啊

2449
01:27:41,000 --> 01:27:42,000
非常了不起

2450
01:27:42,000 --> 01:27:43,000
blblblblbl

2451
01:27:43,000 --> 01:27:44,000
但是啊

2452
01:27:44,000 --> 01:27:47,000
这都是这个什么都比较沉重的历史包袱了

2453
01:27:47,000 --> 01:27:52,000
阻碍我们阻碍我们这个拥抱新时代之类之类的说辞

2454
01:27:52,000 --> 01:27:53,000
然后说呢

2455
01:27:53,000 --> 01:27:54,000
我们现在就冲写一遍

2456
01:27:54,000 --> 01:27:57,000
所以很多人就很着急嘛

2457
01:27:57,000 --> 01:27:59,000
就说啊我们这个怎么办

2458
01:27:59,000 --> 01:28:02,000
这个世界上最好的语言要被抛弃了吗

2459
01:28:02,000 --> 01:28:03,000
你怎么看这件事

2460
01:28:03,000 --> 01:28:05,000
不仅不仅止如此吧

2461
01:28:05,000 --> 01:28:07,000
因为 php 实际上是很多很多人的饭碗

2462
01:28:07,000 --> 01:28:08,000
对

2463
01:28:08,000 --> 01:28:12,000
不不 sorry wordpress 实际上是很多很多人的饭碗

2464
01:28:12,000 --> 01:28:14,000
如果我没记错的话 type is beautiful

2465
01:28:14,000 --> 01:28:17,000
就是贵司

2466
01:28:17,000 --> 01:28:20,000
贵 cTO 的主要工作也是维护一个 wordpress 站点了

2467
01:28:20,000 --> 01:28:23,000
虽然 b 站是非盈利的

2468
01:28:23,000 --> 01:28:25,000
但是这个

2469
01:28:26,000 --> 01:28:30,000
我的这个虚拟的饭碗

2470
01:28:30,000 --> 01:28:32,000
也还是依赖于 wordpress

2471
01:28:32,000 --> 01:28:35,000
所以于是这样一来就造成了一个问题

2472
01:28:35,000 --> 01:28:38,000
就是 wordpress 有多少个 plugin

2473
01:28:38,000 --> 01:28:41,000
有可能有几十万个 plugin

2474
01:28:41,000 --> 01:28:44,000
几十万也太多

2475
01:28:44,000 --> 01:28:47,000
我觉得保守工具 5 万可能有吧

2476
01:28:47,000 --> 01:28:49,000
就是这么多 plugin

2477
01:28:49,000 --> 01:28:51,000
有很多都是商业的

2478
01:28:51,000 --> 01:28:53,000
就是有很多是要付钱买的

2479
01:28:53,000 --> 01:28:54,000
对

2480
01:28:54,000 --> 01:28:56,000
那假使有一天

2481
01:28:56,000 --> 01:29:00,000
wordpress 完全把 php ditch 掉

2482
01:29:00,000 --> 01:29:03,000
这些人的财路就断了

2483
01:29:03,000 --> 01:29:04,000
对吧

2484
01:29:04,000 --> 01:29:05,000
所以我觉得这个可能还不太现实了

2485
01:29:05,000 --> 01:29:07,000
比如刚才看他只是说把这个管理后台

2486
01:29:07,000 --> 01:29:08,000
那个界面改写了一下

2487
01:29:08,000 --> 01:29:09,000
像之前

2488
01:29:09,000 --> 01:29:10,000
对

2489
01:29:10,000 --> 01:29:12,000
但这毫无疑问是一个非常重要的信号

2490
01:29:12,000 --> 01:29:16,000
就是存在一个把它 d ditch 掉的可能性

2491
01:29:16,000 --> 01:29:22,000
这件事情至少已经被拿上了这个议事日程了

2492
01:29:22,000 --> 01:29:23,000
对

2493
01:29:23,000 --> 01:29:27,000
而且这个人们因此会产生的担心

2494
01:29:27,000 --> 01:29:28,000
也是可以理解的

2495
01:29:28,000 --> 01:29:29,000
我觉得

2496
01:29:29,000 --> 01:29:30,000
所以你担心吗

2497
01:29:30,000 --> 01:29:31,000
我担心

2498
01:29:31,000 --> 01:29:32,000
我担心

2499
01:29:32,000 --> 01:29:33,000
我担心

2500
01:29:33,000 --> 01:29:34,000
我担心

2501
01:29:34,000 --> 01:29:36,000
我担心

2502
01:29:36,000 --> 01:29:37,000
我又不看到吃饭

2503
01:29:37,000 --> 01:29:39,000
你的虚拟发文要没了我

2504
01:29:39,000 --> 01:29:43,000
而且虚拟发文其实可以完全转化为

2505
01:29:43,000 --> 01:29:44,000
之前不是谈过吗

2506
01:29:44,000 --> 01:29:47,000
可以完全转化为静态网线生成器

2507
01:29:47,000 --> 01:29:50,000
现在 web 已经到了这样一个的状况

2508
01:29:50,000 --> 01:29:52,000
就是如果你使用

2509
01:29:52,000 --> 01:29:55,000
如果你所有的功能都使用 service 的话

2510
01:29:55,000 --> 01:29:57,000
比如说你的图片使用 flickr

2511
01:29:57,000 --> 01:30:01,000
然后你的评论使用 discuss

2512
01:30:01,000 --> 01:30:06,000
然后你的什么头像乱七八糟的使用那个叫什么

2513
01:30:06,000 --> 01:30:09,000
Gravatar

2514
01:30:09,000 --> 01:30:10,000
对

2515
01:30:10,000 --> 01:30:14,000
其实你是完全不需要在本地提供任何动态工程

2516
01:30:14,000 --> 01:30:15,000
对

2517
01:30:15,000 --> 01:30:18,000
你只是提供几个精态页面就可以了

2518
01:30:18,000 --> 01:30:19,000
对

2519
01:30:19,000 --> 01:30:29,000
在这种情况下我们使用一个复杂的 CMS 的唯一的动机就没有了

2520
01:30:29,000 --> 01:30:31,000
我觉得

2521
01:30:31,000 --> 01:30:32,000
对对

2522
01:30:32,000 --> 01:30:34,000
因为之前我们有一期也讲过这个精态网线生成器

2523
01:30:34,000 --> 01:30:36,000
它至于这个像 wordpress 这种

2524
01:30:36,000 --> 01:30:40,000
这种动态的这种 CMS 的一个好处

2525
01:30:40,000 --> 01:30:41,000
就是它性能非常好

2526
01:30:41,000 --> 01:30:43,000
也不不用怎么维护嘛

2527
01:30:43,000 --> 01:30:44,000
基本对吧

2528
01:30:44,000 --> 01:30:45,000
对

2529
01:30:45,000 --> 01:30:46,000
你把网站发上去就不用管

2530
01:30:46,000 --> 01:30:47,000
不像这个

2531
01:30:47,000 --> 01:30:48,000
经常很多这种

2532
01:30:48,000 --> 01:30:49,000
因为很多人架博客

2533
01:30:49,000 --> 01:30:52,000
Grav 博客会用这个 wordpress 来写嘛

2534
01:30:52,000 --> 01:30:55,000
然后这个 wordpress 如果你默认就安装也不做什么优化的话

2535
01:30:55,000 --> 01:30:57,000
它的性能是非常糟糕的嘛

2536
01:30:57,000 --> 01:31:01,000
那经常会发现一个现象就是我们比如常看什么 hackernews 啊

2537
01:31:01,000 --> 01:31:02,000
reddit 啊

2538
01:31:02,000 --> 01:31:05,000
或者是以前更老的什么 slashdot 啊这种网站

2539
01:31:05,000 --> 01:31:08,000
你上去一个这个头条吧

2540
01:31:08,000 --> 01:31:09,000
前十的话

2541
01:31:09,000 --> 01:31:11,000
那个网站你点过去发现哎

2542
01:31:11,000 --> 01:31:12,000
怎么打不开

2543
01:31:12,000 --> 01:31:13,000
你发现你知道啊

2544
01:31:13,000 --> 01:31:14,000
wordpress 挂掉了

2545
01:31:14,000 --> 01:31:17,000
因为受不了这么多的这个请求过来吧

2546
01:31:17,000 --> 01:31:18,000
对

2547
01:31:18,000 --> 01:31:20,000
所以今天网站没有这个问题

2548
01:31:20,000 --> 01:31:26,000
而且那你说服务化之后也基本上对这个内容动态化的要求也比较低了

2549
01:31:26,000 --> 01:31:29,000
所以这也是一个大的一个趋势了

2550
01:31:29,000 --> 01:31:31,000
而且大家对安全性要求也

2551
01:31:31,000 --> 01:31:33,000
对动态网站很一方面是安全性

2552
01:31:33,000 --> 01:31:35,000
另一方面维护性也是一个问题

2553
01:31:35,000 --> 01:31:38,000
就你知道你看从工程学的角度类比

2554
01:31:38,000 --> 01:31:41,000
就不会动的东西是不会坏的

2555
01:31:41,000 --> 01:31:44,000
你的一个什么元件里面没有磨损

2556
01:31:44,000 --> 01:31:46,000
对可以移动的东西非常多

2557
01:31:46,000 --> 01:31:47,000
那它就很容易坏

2558
01:31:47,000 --> 01:31:51,000
比如说发电机是很容易坏的对吧

2559
01:31:51,000 --> 01:31:56,000
但是那个叫什么就是使用放射性的那个电池

2560
01:31:56,000 --> 01:31:58,000
就是直接把放射性

2561
01:31:58,000 --> 01:32:00,000
核电池

2562
01:32:00,000 --> 01:32:03,000
核光核电池吗

2563
01:32:03,000 --> 01:32:05,000
核电池

2564
01:32:05,000 --> 01:32:07,000
对它里面没有动的布件对吧

2565
01:32:07,000 --> 01:32:11,000
所以它才能被这放在什么那个

2566
01:32:11,000 --> 01:32:14,000
什么 Voyager 探测器上面

2567
01:32:14,000 --> 01:32:17,000
当做整个探测器的电路来源

2568
01:32:17,000 --> 01:32:18,000
因为它不会坏

2569
01:32:18,000 --> 01:32:20,000
但是根本就不可能坏

2570
01:32:20,000 --> 01:32:21,000
OK

2571
01:32:21,000 --> 01:32:23,000
那那其实网站也是一样

2572
01:32:23,000 --> 01:32:27,000
如果你写一个程序里面根本没有需要动起来的部分

2573
01:32:27,000 --> 01:32:32,000
就维护和出错的可能性都是非常非常低的

2574
01:32:32,000 --> 01:32:35,000
对安全性其实这个问题我们还觉得累生就像

2575
01:32:35,000 --> 01:32:36,000
因为据我所知

2576
01:32:36,000 --> 01:32:40,000
Wordpress 代码写的好像质量不是太好

2577
01:32:40,000 --> 01:32:45,000
还在所有的 PHP 代码库里面算是不错的

2578
01:32:45,000 --> 01:32:46,000
你要求好低啊

2579
01:32:46,000 --> 01:32:48,000
anyway

2580
01:32:48,000 --> 01:32:50,000
就经常都已经 low 到 PHP 了

2581
01:32:50,000 --> 01:32:51,000
你还要干嘛

2582
01:32:51,000 --> 01:32:52,000
就好

2583
01:32:52,000 --> 01:32:55,000
因为 PHP 本身的安全性也比较比较糟糕嘛

2584
01:32:55,000 --> 01:32:57,000
这个是一个客观存在的事实

2585
01:32:57,000 --> 01:32:58,000
对

2586
01:32:58,000 --> 01:33:04,000
而且其实 PHP 和 Wordpress 的零带都出来过很多次嘛

2587
01:33:04,000 --> 01:33:05,000
对对

2588
01:33:05,000 --> 01:33:06,000
他们应该是每天都有一大把吧

2589
01:33:06,000 --> 01:33:07,000
对

2590
01:33:07,000 --> 01:33:10,000
然后很多时候就有什么

2591
01:33:10,000 --> 01:33:12,000
一堆 Wordpress 网站又被攻下了

2592
01:33:12,000 --> 01:33:13,000
这种新闻出现

2593
01:33:13,000 --> 01:33:14,000
对对对

2594
01:33:14,000 --> 01:33:15,000
所以如果能够把这个事情

2595
01:33:15,000 --> 01:33:17,000
也是当年那个 Apple Plus

2596
01:33:17,000 --> 01:33:20,000
我们从那个 Mobile Type 切过去

2597
01:33:20,000 --> 01:33:21,000
当时也是选了 Wordpress 嘛

2598
01:33:21,000 --> 01:33:23,000
后来实在受不了了

2599
01:33:23,000 --> 01:33:25,000
把它做成了一个静态化的网线

2600
01:33:25,000 --> 01:33:27,000
我都往前

2601
01:33:27,000 --> 01:33:31,000
IT 公论的最新版 Blog 不也是在 Wordpress 上吗

2602
01:33:31,000 --> 01:33:32,000
对

2603
01:33:32,000 --> 01:33:33,000
那个是用他们那个

2604
01:33:33,000 --> 01:33:35,000
他们那个 host 的服务嘛

2605
01:33:35,000 --> 01:33:36,000
但是因为

2606
01:33:36,000 --> 01:33:37,000
对

2607
01:33:37,000 --> 01:33:38,000
因为那个没空去搞

2608
01:33:38,000 --> 01:33:39,000
然后就用一个现成的方案先用着呗

2609
01:33:39,000 --> 01:33:41,000
但是也有很多问题

2610
01:33:41,000 --> 01:33:42,000
以后再想办法慢慢改吧

2611
01:33:42,000 --> 01:33:43,000
OK

2612
01:33:43,000 --> 01:33:47,000
所以他有朝一日还是会变成静态网也生成气动

2613
01:33:47,000 --> 01:33:49,000
这个再说吧

2614
01:33:49,000 --> 01:33:50,000
不知道

2615
01:33:50,000 --> 01:33:52,000
主要是因为那个是 host 的

2616
01:33:52,000 --> 01:33:54,000
我也不用我们去考虑他的安全维护的问题

2617
01:33:54,000 --> 01:33:56,000
所以就还可以忍

2618
01:33:56,000 --> 01:33:58,000
好吧

2619
01:33:58,000 --> 01:34:02,000
下一则新闻

2620
01:34:02,000 --> 01:34:03,000
最后一则新闻

2621
01:34:03,000 --> 01:34:05,000
下则新闻是 Raspery Pi

2622
01:34:05,000 --> 01:34:09,000
出了一个新的型号叫做 Raspery Pi Zero

2623
01:34:09,000 --> 01:34:11,000
然后它的售价是

2624
01:34:11,000 --> 01:34:12,000
5 美元

2625
01:34:12,000 --> 01:34:13,000
对

2626
01:34:13,000 --> 01:34:14,000
5 美元

2627
01:34:14,000 --> 01:34:15,000
5,6,3

2628
01:34:15,000 --> 01:34:16,000
型号是 0

2629
01:34:16,000 --> 01:34:18,000
不到 40 块钱人民币嘛

2630
01:34:18,000 --> 01:34:19,000
对

2631
01:34:19,000 --> 01:34:22,000
一个不到 40 块钱人民币的全功能的计算机

2632
01:34:22,000 --> 01:34:23,000
它这个

2633
01:34:23,000 --> 01:34:25,000
请名叫零还是有点讲究

2634
01:34:25,000 --> 01:34:26,000
他们不是有个什么杂志吗

2635
01:34:26,000 --> 01:34:27,000
叫做 MagPi 吗

2636
01:34:27,000 --> 01:34:28,000
对

2637
01:34:28,000 --> 01:34:30,000
然后你订阅那个杂志

2638
01:34:30,000 --> 01:34:34,000
然后这期你会免费获得一个这个这个 Zero

2639
01:34:34,000 --> 01:34:35,000
就免

2640
01:34:35,000 --> 01:34:36,000
等于是免费了嘛

2641
01:34:36,000 --> 01:34:37,000
对吧

2642
01:34:37,000 --> 01:34:38,000
OK

2643
01:34:38,000 --> 01:34:39,000
然后这个

2644
01:34:39,000 --> 01:34:41,000
就为什么你买杂志会免费获得一个呢

2645
01:34:41,000 --> 01:34:42,000
它是直接把那个

2646
01:34:42,000 --> 01:34:44,000
因为它很小很薄嘛

2647
01:34:44,000 --> 01:34:47,000
它只把那个做到直接贴在杂志里面

2648
01:34:47,000 --> 01:34:49,000
就当我想起以前订那些什么

2649
01:34:49,000 --> 01:34:51,000
就 90 年代末了

2650
01:34:51,000 --> 01:34:55,000
2000 年初的时候订那个什么计算机之类的杂志

2651
01:34:55,000 --> 01:34:57,000
它里面送你一个光盘嘛

2652
01:34:57,000 --> 01:34:58,000
对吧

2653
01:34:58,000 --> 01:34:59,000
有点那种感觉

2654
01:34:59,000 --> 01:35:00,000
没错

2655
01:35:00,000 --> 01:35:03,000
就是我记得以前大转件还可以

2656
01:35:03,000 --> 01:35:05,000
游购 3.5 寸盘

2657
01:35:05,000 --> 01:35:06,000
是吗

2658
01:35:06,000 --> 01:35:07,000
对

2659
01:35:07,000 --> 01:35:08,000
那个时代

2660
01:35:08,000 --> 01:35:11,000
现在科技已经过了这么十几年了

2661
01:35:11,000 --> 01:35:12,000
十几二十年了

2662
01:35:12,000 --> 01:35:13,000
没错

2663
01:35:13,000 --> 01:35:14,000
科技进不到

2664
01:35:14,000 --> 01:35:16,000
现在杂志里面直接送你一台电脑了

2665
01:35:16,000 --> 01:35:17,000
没错

2666
01:35:17,000 --> 01:35:19,000
而且这些电脑要比

2667
01:35:19,000 --> 01:35:22,000
也就 20 年

2668
01:35:22,000 --> 01:35:23,000
20 年太多

2669
01:35:23,000 --> 01:35:26,000
也就 15 年前的电脑更加强劲

2670
01:35:26,000 --> 01:35:28,000
15 年前我可用不上什么

2671
01:35:28,000 --> 01:35:34,000
1 GHz 的 CPU 和 512 兆的内存

2672
01:35:34,000 --> 01:35:36,000
虽然硬盘是没有的

2673
01:35:36,000 --> 01:35:40,000
就是这个 Zero 上面只有一个 MicroSD 的插口

2674
01:35:40,000 --> 01:35:44,000
但是现在的 MicroSD 多便宜

2675
01:35:44,000 --> 01:35:45,000
对

2676
01:35:45,000 --> 01:35:47,000
就是以前的

2677
01:35:47,000 --> 01:35:48,000
这个果然是德国人

2678
01:35:48,000 --> 01:35:49,000
Micro

2679
01:35:49,000 --> 01:35:51,000
哦 Micro

2680
01:35:51,000 --> 01:35:53,000
OK

2681
01:35:53,000 --> 01:35:54,000
MicroSD

2682
01:35:54,000 --> 01:35:57,000
标准的德式发音

2683
01:35:57,000 --> 01:36:01,000
所以这个 Zero 它的性能是怎么样子

2684
01:36:01,000 --> 01:36:03,000
它是一个博通吧

2685
01:36:03,000 --> 01:36:06,000
Botcom BCM 2835 的处理器

2686
01:36:06,000 --> 01:36:07,000
对

2687
01:36:07,000 --> 01:36:10,000
其实还是比较

2688
01:36:10,000 --> 01:36:13,000
它其实比第一代的那个 Pi 要好的

2689
01:36:13,000 --> 01:36:14,000
对

2690
01:36:14,000 --> 01:36:15,000
其实还是比较强劲的

2691
01:36:15,000 --> 01:36:16,000
就它没有那么

2692
01:36:16,000 --> 01:36:18,000
没有它的价格那么

2693
01:36:18,000 --> 01:36:20,000
一记的主频

2694
01:36:20,000 --> 01:36:22,000
是个 ARM 11 的指令集

2695
01:36:22,000 --> 01:36:24,000
ARM 11 叫做什么

2696
01:36:24,000 --> 01:36:25,000
是 ARMV 6 对吧

2697
01:36:25,000 --> 01:36:28,000
ARMV 6 应该是使用 ARM 11 Core

2698
01:36:28,000 --> 01:36:29,000
ARM 1 Core

2699
01:36:29,000 --> 01:36:31,000
ARMV 6 指令集

2700
01:36:31,000 --> 01:36:32,000
对

2701
01:36:32,000 --> 01:36:33,000
这个指令集

2702
01:36:33,000 --> 01:36:34,000
ARM 这套命名真是

2703
01:36:35,000 --> 01:36:36,000
让人绕过

2704
01:36:36,000 --> 01:36:37,000
搞不清楚是吧

2705
01:36:37,000 --> 01:36:38,000
对

2706
01:36:38,000 --> 01:36:39,000
所以问你一个问题

2707
01:36:39,000 --> 01:36:40,000
那么 A 52 和 A 73 有什么区别

2708
01:36:40,000 --> 01:36:42,000
还是 A 53 和 A 72 有什么区别

2709
01:36:42,000 --> 01:36:43,000
无可分高

2710
01:36:43,000 --> 01:36:44,000
无可分高

2711
01:36:44,000 --> 01:36:45,000
无可分高

2712
01:36:45,000 --> 01:36:46,000
无可分高

2713
01:36:46,000 --> 01:36:49,000
这个可能有一个问题

2714
01:36:49,000 --> 01:36:50,000
就是说

2715
01:36:50,000 --> 01:36:52,000
那个说那个很多那个 Ninx 发行板

2716
01:36:52,000 --> 01:36:54,000
它都不支持 ARMV 6 指令集了

2717
01:36:54,000 --> 01:36:55,000
然后也比较老了

2718
01:36:55,000 --> 01:36:57,000
现在支持这个新的像 ARMV 7

2719
01:36:57,000 --> 01:36:59,000
应该用那个像安卓那些嘛

2720
01:36:59,000 --> 01:37:00,000
对吧

2721
01:37:00,000 --> 01:37:01,000
嗯

2722
01:37:01,000 --> 01:37:03,000
所以他们用这个可能还是比较

2723
01:37:03,000 --> 01:37:05,000
那个过时了

2724
01:37:05,000 --> 01:37:08,000
然后 1 G 赫兹的主频就还

2725
01:37:08,000 --> 01:37:14,000
这个性能据说是比第一代的 Raspbian Pi 快 40%

2726
01:37:14,000 --> 01:37:16,000
也不知道是不是怎么测出来

2727
01:37:16,000 --> 01:37:17,000
本来那个 Pi 的性能

2728
01:37:17,000 --> 01:37:20,000
不知道是以哪个指数和量传

2729
01:37:20,000 --> 01:37:21,000
对

2730
01:37:21,000 --> 01:37:23,000
然后内存是 580

2731
01:37:23,000 --> 01:37:28,000
就半个 G 的这个就是低功耗 DDR 2 的这个那个内存

2732
01:37:28,000 --> 01:37:29,000
也是

2733
01:37:29,000 --> 01:37:31,000
应该是芯片的那个在里面的吧

2734
01:37:31,000 --> 01:37:32,000
我看到只是一块芯片

2735
01:37:32,000 --> 01:37:33,000
on the board

2736
01:37:33,000 --> 01:37:34,000
对

2737
01:37:34,000 --> 01:37:35,000
ok

2738
01:37:35,000 --> 01:37:37,000
然后有一个这个 Micro SD Card

2739
01:37:37,000 --> 01:37:38,000
SD Card

2740
01:37:38,000 --> 01:37:39,000
对

2741
01:37:39,000 --> 01:37:41,000
有一个这个微型的这个 SD Card 插槽

2742
01:37:41,000 --> 01:37:43,000
做它的一个存储设备

2743
01:37:43,000 --> 01:37:44,000
嗯

2744
01:37:44,000 --> 01:37:46,000
然后有一个这个 Mini HDMI

2745
01:37:46,000 --> 01:37:47,000
就是微

2746
01:37:47,000 --> 01:37:48,000
为什么 Mini 要念 Mini

2747
01:37:48,000 --> 01:37:50,000
而 Micro 要念 Micro

2748
01:37:50,000 --> 01:37:53,000
哈哈哈哈哈哈

2749
01:37:53,000 --> 01:37:56,000
这些不讲逻辑的英国人啊

2750
01:37:56,000 --> 01:37:57,000
没错没错

2751
01:37:57,000 --> 01:37:59,000
这些被被法国人统治的英国人

2752
01:37:59,000 --> 01:38:02,000
我还是用德语念法 Micro

2753
01:38:02,000 --> 01:38:03,000
啊

2754
01:38:03,000 --> 01:38:04,000
这个 Mini HDMI

2755
01:38:04,000 --> 01:38:06,000
HDME

2756
01:38:06,000 --> 01:38:07,000
HDME

2757
01:38:07,000 --> 01:38:08,000
HDME

2758
01:38:08,000 --> 01:38:09,000
HDME

2759
01:38:09,000 --> 01:38:10,000
HDME

2760
01:38:10,000 --> 01:38:11,000
HDME

2761
01:38:11,000 --> 01:38:12,000
HDME

2762
01:38:12,000 --> 01:38:13,000
对

2763
01:38:13,000 --> 01:38:14,000
从开始念德语的法

2764
01:38:14,000 --> 01:38:15,000
哈哈哈哈哈哈

2765
01:38:15,000 --> 01:38:16,000
嗯

2766
01:38:16,000 --> 01:38:18,000
然后这个可以转换

2767
01:38:18,000 --> 01:38:21,000
用一个转向头转换成普通的这个 HDME

2768
01:38:21,000 --> 01:38:22,000
对

2769
01:38:22,000 --> 01:38:25,000
然后你可以接电视或者是那种带这个这个 HDME 的这个显示器

2770
01:38:25,000 --> 01:38:26,000
好够

2771
01:38:26,000 --> 01:38:27,000
哈哈哈哈哈哈哈哈

2772
01:38:27,000 --> 01:38:38,000
他是支持这个 1080 P 的这个这个分辨率的就是还做一个正常的高分屏的

2773
01:38:38,000 --> 01:38:39,000
哎不是高分

2774
01:38:39,000 --> 01:38:40,000
就普通那种

2775
01:38:40,000 --> 01:38:41,000
那是高分屏吧

2776
01:38:41,000 --> 01:38:42,000
全高清

2777
01:38:42,000 --> 01:38:44,000
1080 P 是 HD ready

2778
01:38:44,000 --> 01:38:46,000
哎

2779
01:38:46,000 --> 01:38:47,000
wait a second

2780
01:38:47,000 --> 01:38:48,000
什么啊

2781
01:38:48,000 --> 01:38:49,000
Full HD 是

2782
01:38:49,000 --> 01:38:50,000
就是 1080 P

2783
01:38:50,000 --> 01:38:51,000
Full HD 是 1080 P

2784
01:38:51,000 --> 01:38:52,000
对

2785
01:38:52,000 --> 01:38:53,000
HD 是 720 P

2786
01:38:53,000 --> 01:38:54,000
OK

2787
01:38:54,000 --> 01:38:55,000
对

2788
01:38:55,000 --> 01:39:00,000
然后他还有一个这个 Micro USB 用于这个供电和数据

2789
01:39:00,000 --> 01:39:02,000
这个其实我就有一个问题了啊

2790
01:39:02,000 --> 01:39:04,000
他还有一个叫 40 帧的那个 GPIO 口

2791
01:39:04,000 --> 01:39:07,000
就是 GPIO 是 General Purpose IO 对吧

2792
01:39:07,000 --> 01:39:08,000
General Purpose IO

2793
01:39:08,000 --> 01:39:10,000
就是那个这个东西叫什么头来的

2794
01:39:10,000 --> 01:39:11,000
这个叫什么针角吧

2795
01:39:11,000 --> 01:39:16,000
GPIO 我不知道中文叫什么

2796
01:39:16,000 --> 01:39:19,000
通用型输出输输输出

2797
01:39:19,000 --> 01:39:20,000
OK

2798
01:39:20,000 --> 01:39:21,000
这个名字也太长了吧

2799
01:39:21,000 --> 01:39:23,000
我觉得肯定有个俗名了

2800
01:39:23,000 --> 01:39:25,000
就我记得是叫什么什么针角的

2801
01:39:26,000 --> 01:39:27,000
anyway

2802
01:39:27,000 --> 01:39:32,000
然后他还有一个没有接口的那个叫做 Composite Video Header

2803
01:39:32,000 --> 01:39:35,000
就是这个很那些老电视上面有用啊

2804
01:39:35,000 --> 01:39:37,000
就是那种叫什么的

2805
01:39:37,000 --> 01:39:39,000
有那么分量信号吧应该是是不是

2806
01:39:39,000 --> 01:39:40,000
对

2807
01:39:40,000 --> 01:39:44,000
不对不是分量信号 Composite 这个叫符合视频信号

2808
01:39:45,000 --> 01:39:46,000
天啊我还要这样的

2809
01:39:46,000 --> 01:39:48,000
这么复杂处于能记的算了吧

2810
01:39:48,000 --> 01:39:49,000
对

2811
01:39:49,000 --> 01:39:50,000
但这个就很小了

2812
01:39:50,000 --> 01:39:53,000
这个他应该看起来比那个信用卡好像还小一半吧

2813
01:39:53,000 --> 01:39:55,000
他比 5 美元的钞票小

2814
01:39:55,000 --> 01:39:57,000
我没想到可以可以装至少

2815
01:39:57,000 --> 01:39:59,000
不横过来我估计至少能够装

2816
01:39:59,000 --> 01:40:01,000
我装四五个吧

2817
01:40:01,000 --> 01:40:09,000
那他这个尺寸是 65 毫米乘以 33 毫米乘以 5 毫米厚

2818
01:40:09,000 --> 01:40:10,000
对

2819
01:40:10,000 --> 01:40:12,000
其实是非常非常小巧的一个东西

2820
01:40:12,000 --> 01:40:13,000
65 毫米

2821
01:40:13,000 --> 01:40:14,000
对

2822
01:40:14,000 --> 01:40:16,000
就比那个小版的瑞士军刀长一点点

2823
01:40:16,000 --> 01:40:18,000
你记得这么清楚

2824
01:40:18,000 --> 01:40:21,000
因为循璇刀只有两个版本吧

2825
01:40:21,000 --> 01:40:22,000
一个是 6 毫米的

2826
01:40:22,000 --> 01:40:23,000
一个是 6 厘米的

2827
01:40:23,000 --> 01:40:24,000
一个是 10 厘米的

2828
01:40:24,000 --> 01:40:25,000
对

2829
01:40:25,000 --> 01:40:26,000
所以我有一个问题啊

2830
01:40:26,000 --> 01:40:28,000
就这个 5 美元的这个 Zero

2831
01:40:28,000 --> 01:40:31,000
它的网络怎么接

2832
01:40:31,000 --> 01:40:32,000
对

2833
01:40:32,000 --> 01:40:33,000
这是一个很好的问题

2834
01:40:33,000 --> 01:40:35,000
因为你想你这么想吧

2835
01:40:35,000 --> 01:40:36,000
就这么一个电脑哈

2836
01:40:36,000 --> 01:40:38,000
它自己处理能力

2837
01:40:38,000 --> 01:40:40,000
但也不算弱了

2838
01:40:40,000 --> 01:40:44,000
就按 10 年前的标准状态是一个挺好的

2839
01:40:44,000 --> 01:40:46,000
而且你可以接一个这个什么

2840
01:40:46,000 --> 01:40:50,000
做那个媒体播放器是没有问题的吗

2841
01:40:50,000 --> 01:40:52,000
对

2842
01:40:52,000 --> 01:40:55,000
我觉得有可能

2843
01:40:55,000 --> 01:40:58,000
但我就好奇它这个网络怎么解

2844
01:40:58,000 --> 01:41:00,000
怎么一个解决方案

2845
01:41:00,000 --> 01:41:02,000
它也有可能会像那个

2846
01:41:02,000 --> 01:41:06,000
Aluino 一样出一些 Shield

2847
01:41:06,000 --> 01:41:08,000
或者是叠加的板是吧

2848
01:41:08,000 --> 01:41:09,000
对

2849
01:41:09,000 --> 01:41:12,000
或者是通过 GPIO 连一个蓝牙

2850
01:41:12,000 --> 01:41:13,000
还是

2851
01:41:13,000 --> 01:41:15,000
这个有蓝牙没有吧

2852
01:41:15,000 --> 01:41:17,000
你说自己再接一个是吧

2853
01:41:17,000 --> 01:41:18,000
对

2854
01:41:18,000 --> 01:41:19,000
自己再接一个蓝牙

2855
01:41:19,000 --> 01:41:20,000
那倒是可以的

2856
01:41:20,000 --> 01:41:21,000
比如它有那个 USB 的游户

2857
01:41:21,000 --> 01:41:23,000
你加个这个 USB 的网卡

2858
01:41:23,000 --> 01:41:24,000
估计也能凑合

2859
01:41:24,000 --> 01:41:25,000
但这样的话

2860
01:41:25,000 --> 01:41:27,000
就没有这个体积优势了吗

2861
01:41:29,000 --> 01:41:31,000
我觉得它的应用长迅

2862
01:41:31,000 --> 01:41:32,000
也许还是一些不

2863
01:41:32,000 --> 01:41:34,000
可是现在有什么智能家

2864
01:41:34,000 --> 01:41:37,000
智能家就是可以逃开网络

2865
01:41:37,000 --> 01:41:38,000
网络是吧

2866
01:41:38,000 --> 01:41:39,000
对我觉得没有网络

2867
01:41:39,000 --> 01:41:40,000
可能是一个很大的一个硬伤

2868
01:41:40,000 --> 01:41:41,000
因为现在没有网络的话

2869
01:41:41,000 --> 01:41:43,000
真的是没有办法玩下去

2870
01:41:44,000 --> 01:41:45,000
对

2871
01:41:45,000 --> 01:41:47,000
不过如果它单独做一个这个什么

2872
01:41:47,000 --> 01:41:48,000
这种

2873
01:41:50,000 --> 01:41:52,000
你仔细想一下现在哪些场景

2874
01:41:52,000 --> 01:41:54,000
是不需要联网的电脑

2875
01:41:55,000 --> 01:41:56,000
我还真的一下想不出来了

2876
01:41:57,000 --> 01:41:58,000
基本上没有

2877
01:41:58,000 --> 01:42:01,000
除非是一个就是什么监控

2878
01:42:01,000 --> 01:42:03,000
监控监控都要联网

2879
01:42:03,000 --> 01:42:04,000
监控你要把信号

2880
01:42:04,000 --> 01:42:05,000
开窗联

2881
01:42:05,000 --> 01:42:06,000
开窗联

2882
01:42:06,000 --> 01:42:07,000
OK

2883
01:42:07,000 --> 01:42:08,000
就是那种什么

2884
01:42:08,000 --> 01:42:10,000
通过环境光那种自动控制器的

2885
01:42:10,000 --> 01:42:11,000
这种东西

2886
01:42:11,000 --> 01:42:14,000
对就是一个 reactor 那种反应器的东西

2887
01:42:15,000 --> 01:42:16,000
就单变机的那些场合

2888
01:42:16,000 --> 01:42:17,000
它可以用了吗

2889
01:42:17,000 --> 01:42:18,000
对吧

2890
01:42:18,000 --> 01:42:19,000
不过它这个确实便宜

2891
01:42:19,000 --> 01:42:20,000
它才卖 5 美元

2892
01:42:20,000 --> 01:42:21,000
一个 adreno 最便宜

2893
01:42:21,000 --> 01:42:22,000
也得两三美元吧

2894
01:42:22,000 --> 01:42:23,000
应该批两买的话

2895
01:42:23,000 --> 01:42:24,000
对

2896
01:42:24,000 --> 01:42:28,000
所以它这个已经可以逼近这个 adreno 的这个价格

2897
01:42:28,000 --> 01:42:29,000
成本优势了

2898
01:42:30,000 --> 01:42:32,000
反过来 adreno 其实也有一些比较

2899
01:42:32,000 --> 01:42:35,000
采用一些比较强力的处理器的方面

2900
01:42:35,000 --> 01:42:36,000
OK

2901
01:42:37,000 --> 01:42:38,000
对

2902
01:42:38,000 --> 01:42:41,000
两者渐渐在构成直接竞争吧

2903
01:42:41,000 --> 01:42:42,000
应该说

2904
01:42:42,000 --> 01:42:45,000
但是这个还是就是上次我们聊到这个东西

2905
01:42:45,000 --> 01:42:47,000
就是耗电量可能两者还是比较显著的

2906
01:42:47,000 --> 01:42:49,000
但跟这个性能有直接关系

2907
01:42:49,000 --> 01:42:50,000
耗电量和性能吧

2908
01:42:50,000 --> 01:42:53,000
这个玩意儿应该是只靠一个

2909
01:42:54,000 --> 01:42:56,000
电池是驱动不了多久

2910
01:42:56,000 --> 01:42:57,000
驱动不了多久

2911
01:42:57,000 --> 01:42:58,000
就一天吧

2912
01:42:58,000 --> 01:42:59,000
估计一两天吧

2913
01:42:59,000 --> 01:43:00,000
有一个那个什么

2914
01:43:00,000 --> 01:43:02,000
现在给那个手机充电的一个电池

2915
01:43:02,000 --> 01:43:03,000
不是很大一坨吗

2916
01:43:03,000 --> 01:43:06,000
它这个动力量估计跑了一两天问题不大

2917
01:43:06,000 --> 01:43:09,000
但毕竟不是像阿都一那种跑一两周

2918
01:43:09,000 --> 01:43:11,000
两三个月这种情况吧

2919
01:43:11,000 --> 01:43:12,000
没错

2920
01:43:12,000 --> 01:43:15,000
所以你想买一个这个来玩一下吗

2921
01:43:15,000 --> 01:43:18,000
可能会买吧

2922
01:43:18,000 --> 01:43:20,000
但你这么便宜是吧

2923
01:43:20,000 --> 01:43:22,000
老牌来一打

2924
01:43:22,000 --> 01:43:25,000
首先没想到要干嘛

2925
01:43:25,000 --> 01:43:31,000
因为我其实最近在想说要不要做一个什么项目

2926
01:43:31,000 --> 01:43:35,000
但是目前还没想好具体要做什么

2927
01:43:35,000 --> 01:43:38,000
因为我刚刚完成了那个在线课程

2928
01:43:38,000 --> 01:43:40,000
所以上完了是吧

2929
01:43:40,000 --> 01:43:41,000
那个课

2930
01:43:41,000 --> 01:43:42,000
对

2931
01:43:42,000 --> 01:43:43,000
而且拿到了 CityCate

2932
01:43:43,000 --> 01:43:44,000
拿到了 CityCate

2933
01:43:44,000 --> 01:43:47,000
拿到了一个什么

2934
01:43:47,000 --> 01:43:49,000
你是上哪家来的

2935
01:43:49,000 --> 01:43:51,000
杜克大学的那个

2936
01:43:51,000 --> 01:43:52,000
杜克是吧

2937
01:43:52,000 --> 01:43:56,000
杜克大学这个成教学院结业证书

2938
01:43:56,000 --> 01:43:57,000
成教韩寿学院

2939
01:43:57,000 --> 01:43:59,000
成教韩寿学院的结业证书

2940
01:43:59,000 --> 01:44:00,000
恭喜

2941
01:44:00,000 --> 01:44:01,000
对没错

2942
01:44:01,000 --> 01:44:02,000
还是不错了

2943
01:44:02,000 --> 01:44:03,000
总算一个文凭了

2944
01:44:03,000 --> 01:44:05,000
好艰辛

2945
01:44:05,000 --> 01:44:07,000
好艰辛

2946
01:44:07,000 --> 01:44:08,000
没错

2947
01:44:08,000 --> 01:44:09,000
没错

2948
01:44:09,000 --> 01:44:10,000
没错

2949
01:44:10,000 --> 01:44:11,000
就是想起了我爸

2950
01:44:11,000 --> 01:44:13,000
我在我小时候

2951
01:44:13,000 --> 01:44:14,000
我爸一手抱着我

2952
01:44:14,000 --> 01:44:17,000
一手在上什么兰州大学的韩寿课程

2953
01:44:17,000 --> 01:44:19,000
最后拿了一个学士

2954
01:44:19,000 --> 01:44:20,000
不错不错

2955
01:44:20,000 --> 01:44:21,000
这个当年那些

2956
01:44:21,000 --> 01:44:24,000
他们的精神还是非常非常厉害的

2957
01:44:24,000 --> 01:44:25,000
我觉得

2958
01:44:25,000 --> 01:44:26,000
对

2959
01:44:26,000 --> 01:44:27,000
嗯

2960
01:44:27,000 --> 01:44:29,000
然后业余有点时间可以做点别的

2961
01:44:29,000 --> 01:44:30,000
嗯

2962
01:44:30,000 --> 01:44:31,000
嗯

2963
01:44:31,000 --> 01:44:32,000
哦

2964
01:44:32,000 --> 01:44:33,000
我看到他的网站上有一个

2965
01:44:33,000 --> 01:44:35,000
有一套这个转接头

2966
01:44:35,000 --> 01:44:36,000
OK

2967
01:44:36,000 --> 01:44:37,000
还有一个 bundle

2968
01:44:37,000 --> 01:44:38,000
就他有一个结合

2969
01:44:38,000 --> 01:44:40,000
有一个这个 mini HDMI

2970
01:44:40,000 --> 01:44:43,000
转这个普通的 HDMI 的一个转接头

2971
01:44:43,000 --> 01:44:45,000
有一个这个 micro USB

2972
01:44:45,000 --> 01:44:48,000
转普通 USB 的母口的转接头

2973
01:44:48,000 --> 01:44:52,000
还有一个那个 40 帧的那个 GPS 的针角嘛

2974
01:44:52,000 --> 01:44:53,000
对

2975
01:44:53,000 --> 01:44:55,000
那个他板上的那个针角是没有汗的

2976
01:44:55,000 --> 01:44:57,000
就是只有一个 GPS 的话

2977
01:44:57,000 --> 01:44:59,000
你还得把它针插进去

2978
01:44:59,000 --> 01:45:00,000
他就直一个洞子嘛

2979
01:45:00,000 --> 01:45:01,000
对

2980
01:45:01,000 --> 01:45:02,000
对

2981
01:45:02,000 --> 01:45:04,000
所以这个还是挺有意思的

2982
01:45:04,000 --> 01:45:05,000
就是

2983
01:45:05,000 --> 01:45:07,000
我觉得现在哈我真的觉得就是做这个 maker

2984
01:45:07,000 --> 01:45:08,000
这个这个

2985
01:45:08,000 --> 01:45:10,000
你想玩这个东西吧

2986
01:45:10,000 --> 01:45:11,000
其实现在小朋友好幸福啊

2987
01:45:11,000 --> 01:45:14,000
有这么多现成的方案可以自己折腾去搞

2988
01:45:14,000 --> 01:45:15,000
对吧

2989
01:45:15,000 --> 01:45:16,000
对

2990
01:45:16,000 --> 01:45:17,000
我觉得

2991
01:45:17,000 --> 01:45:21,000
不像我们当年有那个学习这个玩这个的冲动的时候

2992
01:45:21,000 --> 01:45:22,000
没有这个东西可以玩

2993
01:45:22,000 --> 01:45:23,000
然后也没有什么可以

2994
01:45:23,000 --> 01:45:25,000
然后也没有什么可以没有什么可以教感觉

2995
01:45:25,000 --> 01:45:26,000
对

2996
01:45:26,000 --> 01:45:29,000
我觉得我们小时候玩的那些东西都特别的

2997
01:45:30,000 --> 01:45:31,000
叫

2998
01:45:31,000 --> 01:45:32,000
机械

2999
01:45:32,000 --> 01:45:33,000
就是

3000
01:45:33,000 --> 01:45:35,000
比较偏土木机械那一块

3001
01:45:35,000 --> 01:45:36,000
对

3002
01:45:36,000 --> 01:45:38,000
现在就可以玩一些比较电子的东西

3003
01:45:38,000 --> 01:45:39,000
所以嘛

3004
01:45:39,000 --> 01:45:40,000
赶快买个打

3005
01:45:40,000 --> 01:45:41,000
以后囤起来给你儿子用

3006
01:45:42,000 --> 01:45:43,000
嗯

3007
01:45:43,000 --> 01:45:44,000
好的女儿用

3008
01:45:44,000 --> 01:45:45,000
先跟女朋友商量一下

3009
01:45:46,000 --> 01:45:48,000
你买一打也就 60 刀嘛

3010
01:45:48,000 --> 01:45:49,000
嗯

3011
01:45:49,000 --> 01:45:52,000
这玩意儿得先卖到多过来

3012
01:45:52,000 --> 01:45:53,000
还不能买吗

3013
01:45:53,000 --> 01:45:54,000
现在

3014
01:45:54,000 --> 01:45:55,000
我没看

3015
01:45:55,000 --> 01:45:56,000
但

3016
01:45:56,000 --> 01:45:57,000
Respirit Pi 是美国

3017
01:45:57,000 --> 01:45:58,000
对

3018
01:45:58,000 --> 01:45:59,000
英国的

3019
01:45:59,000 --> 01:46:00,000
他们在英国

3020
01:46:00,000 --> 01:46:02,000
威尔斯生产制造

3021
01:46:02,000 --> 01:46:03,000
对

3022
01:46:03,000 --> 01:46:05,000
它这里其实它的分销一直有点问题

3023
01:46:05,000 --> 01:46:06,000
就是

3024
01:46:06,000 --> 01:46:07,000
没错

3025
01:46:07,000 --> 01:46:08,000
就经常会发现这个比较

3026
01:46:08,000 --> 01:46:10,000
就之前我买了就出现一个比较窘的情况

3027
01:46:10,000 --> 01:46:13,000
就当时他卖那个 Respirit Pi 一还是二的时候

3028
01:46:13,000 --> 01:46:15,000
他不是 25 美元一个吗

3029
01:46:15,000 --> 01:46:16,000
还是 35 美元一个

3030
01:46:16,000 --> 01:46:17,000
觉得挺便宜的是吧

3031
01:46:17,000 --> 01:46:18,000
我想买一个

3032
01:46:18,000 --> 01:46:20,000
运费 35 美元

3033
01:46:20,000 --> 01:46:21,000
没错

3034
01:46:21,000 --> 01:46:23,000
其实我觉得他们的物流真的是太

3035
01:46:23,000 --> 01:46:25,000
这个也不能怪他们了

3036
01:46:25,000 --> 01:46:27,000
这个毕竟不是一个非盈利的东西吧

3037
01:46:27,000 --> 01:46:28,000
就他也不可能说

3038
01:46:28,000 --> 01:46:30,000
把这个价钱定的很高

3039
01:46:30,000 --> 01:46:32,000
然后让那个经销商去帮他们囤货

3040
01:46:32,000 --> 01:46:33,000
说也是

3041
01:46:33,000 --> 01:46:39,000
所以但是 Respirit Pi 一开始是作为一个教育项目出现的

3042
01:46:39,000 --> 01:46:43,000
所以天生就缺了这个商业机

3043
01:46:43,000 --> 01:46:46,000
不过他现在这个东西卖 5 美元

3044
01:46:46,000 --> 01:46:48,000
就一定会出现

3045
01:46:48,000 --> 01:46:50,000
就之前已经有这类似的问题了

3046
01:46:50,000 --> 01:46:52,000
就在现在可能连国内买的都会出现这个问题

3047
01:46:52,000 --> 01:46:55,000
就发现运费好像都比他贵一些

3048
01:46:55,000 --> 01:46:56,000
有价务视

3049
01:46:56,000 --> 01:46:57,000
OK

3050
01:46:57,000 --> 01:46:58,000
运费超过成本

3051
01:46:58,000 --> 01:46:59,000
对

3052
01:46:59,000 --> 01:47:00,000
你真的只能买一打才核算

3053
01:47:00,000 --> 01:47:01,000
OK

3054
01:47:01,000 --> 01:47:03,000
说的没错

3055
01:47:03,000 --> 01:47:05,000
但现在他们的 Respirit Pi 二

3056
01:47:05,000 --> 01:47:06,000
就是这个最新那个

3057
01:47:06,000 --> 01:47:07,000
就是不是最新

3058
01:47:07,000 --> 01:47:08,000
就是性能最好那一块

3059
01:47:08,000 --> 01:47:10,000
二代

3060
01:47:10,000 --> 01:47:11,000
卖 35 道

3061
01:47:11,000 --> 01:47:12,000
运费你在国外

3062
01:47:12,000 --> 01:47:13,000
如果你买一个的话

3063
01:47:13,000 --> 01:47:15,000
差不多也就 35 道了

3064
01:47:15,000 --> 01:47:17,000
Respirit Pi 还可以

3065
01:47:17,000 --> 01:47:18,000
现在产能跟上了

3066
01:47:18,000 --> 01:47:20,000
或者是对那个物流跟上了

3067
01:47:20,000 --> 01:47:21,000
比较齐

3068
01:47:21,000 --> 01:47:23,000
在德国是 38 块 5

3069
01:47:23,000 --> 01:47:25,000
包运费

3070
01:47:25,000 --> 01:47:28,000
所以他其实他出了这么几款

3071
01:47:28,000 --> 01:47:29,000
他每一个都没有停

3072
01:47:29,000 --> 01:47:30,000
是吧

3073
01:47:30,000 --> 01:47:31,000
就每一个都可以再买

3074
01:47:31,000 --> 01:47:32,000
还可以继续购买的

3075
01:47:32,000 --> 01:47:33,000
应该是这样吧

3076
01:47:33,000 --> 01:47:36,000
所以他到底现在一共有几个型号

3077
01:47:36,000 --> 01:47:38,000
Respirit Pi 一

3078
01:47:38,000 --> 01:47:39,000
一可能已经停长了

3079
01:47:39,000 --> 01:47:40,000
我觉得

3080
01:47:40,000 --> 01:47:42,000
就是最古老的那一代

3081
01:47:42,000 --> 01:47:44,000
然后二又有 Model A

3082
01:47:44,000 --> 01:47:45,000
不对我

3083
01:47:45,000 --> 01:47:47,000
他那个业也在卖

3084
01:47:47,000 --> 01:47:48,000
Model

3085
01:47:48,000 --> 01:47:49,000
就是就没有数字的那一块

3086
01:47:49,000 --> 01:47:50,000
就是 Perspir Pi

3087
01:47:50,000 --> 01:47:51,000
Model B

3088
01:47:51,000 --> 01:47:52,000
Model A 都还在卖

3089
01:47:52,000 --> 01:47:54,000
A 加 B 加都还在卖

3090
01:47:54,000 --> 01:47:56,000
在卖不一定还在产吧

3091
01:47:56,000 --> 01:47:58,000
我觉得他在卖看他肯定在

3092
01:47:58,000 --> 01:48:00,000
你就说他一次产一百万个

3093
01:48:00,000 --> 01:48:01,000
对

3094
01:48:01,000 --> 01:48:02,000
一个 batch

3095
01:48:02,000 --> 01:48:03,000
然后再卖光

3096
01:48:03,000 --> 01:48:04,000
卖卖卖光就没了

3097
01:48:04,000 --> 01:48:05,000
也有可能

3098
01:48:05,000 --> 01:48:06,000
不过我还挺遗憾

3099
01:48:06,000 --> 01:48:07,000
他上面有这个

3100
01:48:07,000 --> 01:48:08,000
这个什么

3101
01:48:08,000 --> 01:48:09,000
这个 Zero 上面有一个

3102
01:48:09,000 --> 01:48:12,000
这个原生的这个网卡就好了

3103
01:48:13,000 --> 01:48:14,000
嗯

3104
01:48:14,000 --> 01:48:15,000
我就可以实现我之前

3105
01:48:15,000 --> 01:48:17,000
上次我们单片机不是提到了一个

3106
01:48:17,000 --> 01:48:20,000
非常便宜的带网卡的

3107
01:48:21,000 --> 01:48:23,000
是 Arduino 吧还是什么

3108
01:48:23,000 --> 01:48:25,000
应该不是

3109
01:48:25,000 --> 01:48:26,000
应该是另外的一个什么 board

3110
01:48:26,000 --> 01:48:27,000
Biggleboard

3111
01:48:27,000 --> 01:48:28,000
什么之类的

3112
01:48:28,000 --> 01:48:30,000
但你把那个买来

3113
01:48:30,000 --> 01:48:31,000
然后把它接上不就好了

3114
01:48:31,000 --> 01:48:32,000
哈哈哈哈

3115
01:48:32,000 --> 01:48:34,000
两个拼在一起也没有多大

3116
01:48:34,000 --> 01:48:35,000
对

3117
01:48:35,000 --> 01:48:36,000
嗯

3118
01:48:36,000 --> 01:48:38,000
还有就是刚才讲那个问题

3119
01:48:38,000 --> 01:48:39,000
现在是很多那个 Linux

3120
01:48:39,000 --> 01:48:40,000
发行版

3121
01:48:40,000 --> 01:48:42,000
他不支持 Arm Video

3122
01:48:42,000 --> 01:48:43,000
这种老旧的指令集了吗

3123
01:48:43,000 --> 01:48:44,000
啊

3124
01:48:44,000 --> 01:48:46,000
就是软件支持上也会是一个

3125
01:48:46,000 --> 01:48:47,000
比较大的问题

3126
01:48:47,000 --> 01:48:48,000
对

3127
01:48:49,000 --> 01:48:50,000
啊

3128
01:48:50,000 --> 01:48:51,000
但应该还是可以见了

3129
01:48:51,000 --> 01:48:54,000
或者说他下一代 Zero

3130
01:48:54,000 --> 01:48:55,000
plusone

3131
01:48:55,000 --> 01:48:56,000
出来的时候

3132
01:48:56,000 --> 01:48:57,000
出来的时候就

3133
01:48:57,000 --> 01:48:58,000
Hopefully

3134
01:48:58,000 --> 01:48:59,000
对

3135
01:48:59,000 --> 01:49:00,000
可以解决

3136
01:49:00,000 --> 01:49:02,000
好吧

3137
01:49:02,000 --> 01:49:05,000
那今天节目差不多就到这里结束了

3138
01:49:05,000 --> 01:49:06,000
感谢收听 IPM Podcast

3139
01:49:06,000 --> 01:49:07,000
感谢收听 IPM Podcast

3140
01:49:07,000 --> 01:49:08,000
网络旗下的 IT 技术

3141
01:49:08,000 --> 01:49:09,000
娱乐节目内核恐慌

3142
01:49:09,000 --> 01:49:10,000
我们号称 Hardcore

3143
01:49:10,000 --> 01:49:12,000
但是也没有干货

3144
01:49:12,000 --> 01:49:13,000
想听人听

3145
01:49:13,000 --> 01:49:14,000
不想听人就别听

3146
01:49:14,000 --> 01:49:15,000
你可以为本节目捐款

3147
01:49:15,000 --> 01:49:16,000
捐款地址是

3148
01:49:16,000 --> 01:49:17,000
Kernelpanic.fm.com

3149
01:49:17,000 --> 01:49:18,000
捐款金额随意

3150
01:49:18,000 --> 01:49:22,000
只要是 8 的正正数倍就可以了

3151
01:49:22,000 --> 01:49:23,000
捐款不会给你带来什么

3152
01:49:23,000 --> 01:49:25,000
不捐也不会让你失去什么

3153
01:49:25,000 --> 01:49:26,000
我们的口号是

3154
01:49:26,000 --> 01:49:28,000
No hard feelings

3155
01:49:28,000 --> 01:49:29,000
如果你有任何反馈

3156
01:49:29,000 --> 01:49:30,000
可以发邮件到

3157
01:49:30,000 --> 01:49:31,000
Kernelpanic

3158
01:49:31,000 --> 01:49:33,000
atipn.li

3159
01:49:33,000 --> 01:49:37,000
同时也欢迎你收听 IPM 旗下其他节奏节目

3160
01:49:37,000 --> 01:49:38,000
IT 公论

3161
01:49:38,000 --> 01:49:39,000
为知道太一来了

3162
01:49:39,000 --> 01:49:40,000
流行通信

3163
01:49:40,000 --> 01:49:41,000
high story

3164
01:49:41,000 --> 01:49:42,000
硬影像

3165
01:49:42,000 --> 01:49:43,000
无资源

3166
01:49:43,000 --> 01:49:44,000
和选美

3167
01:49:44,000 --> 01:49:45,000
我们下期再会

