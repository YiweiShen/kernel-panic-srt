1
00:00:00,000 --> 00:00:04,000
感觉今天这个话题有点太大

2
00:00:04,000 --> 00:00:08,000
不知道能不能在一两个小时内讲得清楚

3
00:00:08,000 --> 00:00:12,000
对 而且我觉得有可能我们两个的能力 handle 不了

4
00:00:12,000 --> 00:00:13,000
对

5
00:00:13,000 --> 00:00:19,000
我们两个其实也不是在这个话题上面非常有经验的两个人

6
00:00:19,000 --> 00:00:23,000
关键是我觉得首先我们两个都是一个 VIM 的中度用户

7
00:00:23,000 --> 00:00:27,000
这个在本来就是在什么起点上就是有偏见的

8
00:00:27,000 --> 00:00:30,000
对 所以我们算是一个

9
00:00:30,000 --> 00:00:34,000
别人叫什么 Informed Opinion

10
00:00:34,000 --> 00:00:36,000
我们这边是 Opinion Information

11
00:00:36,000 --> 00:00:42,000
对 所以如果你不是 VIM 的用户

12
00:00:42,000 --> 00:00:47,000
或者你听到觉得有些不赞同的观点

13
00:00:47,000 --> 00:00:48,000
请记住这一点

14
00:00:48,000 --> 00:00:53,000
我们这是两个具有偏见的人在聊一件非常个性化的东西

15
00:00:53,000 --> 00:00:56,000
对 我们虚心接受我坚决不敢

16
00:00:56,000 --> 00:01:01,000
好 其实我们还是说一下在聊什么

17
00:01:01,000 --> 00:01:07,000
对 其实我们这一期的主题是编辑器或者说 ID

18
00:01:07,000 --> 00:01:10,000
就是写来码的工具

19
00:01:10,000 --> 00:01:14,000
我们可能会有很多期持续讨论

20
00:01:14,000 --> 00:01:20,000
关于开发软件的很多相关的工具啊流程啊相关的话题

21
00:01:20,000 --> 00:01:24,000
也大概算是一个系列吧

22
00:01:24,000 --> 00:01:31,000
就尽量会聊一些比较贴近开发过程的东西

23
00:01:31,000 --> 00:01:36,000
北美山地时间 2006 年 1 月 2 日下午 3 点 04 分 05 秒

24
00:01:36,000 --> 00:01:40,000
您近来收听到的是 IPN 旗下的 podcast 广播内核恐慌

25
00:01:40,000 --> 00:01:42,000
所以你学了够了

26
00:01:42,000 --> 00:01:43,000
没错 对

27
00:01:43,000 --> 00:01:47,000
如果刚才你记住了这个 sequence 的话

28
00:01:47,000 --> 00:01:51,000
2006 年 1 月 2 日下午 3 点 04 分 05 秒

29
00:01:51,000 --> 00:01:53,000
你就学会了一点点够了

30
00:01:53,000 --> 00:01:54,000
对

31
00:01:54,000 --> 00:01:57,000
这是我们上一期节目结束的时候

32
00:01:57,000 --> 00:01:59,000
Rail 教给我的一件事情

33
00:01:59,000 --> 00:02:00,000
我觉得这个

34
00:02:00,000 --> 00:02:02,000
这两天仔细想了一下

35
00:02:02,000 --> 00:02:07,000
的确算是一个比较很 pragmatical 的解决方案

36
00:02:07,000 --> 00:02:11,000
但是还是觉得有点有点奇怪就是了

37
00:02:11,000 --> 00:02:14,000
对 我觉得有一点我觉得挺奇怪的点是

38
00:02:14,000 --> 00:02:16,000
比如我问你一个问题啊

39
00:02:16,000 --> 00:02:19,000
你要写中文的 12 月这三个字你怎么办

40
00:02:19,000 --> 00:02:23,000
对啊 就是你要把它 localization 的话

41
00:02:23,000 --> 00:02:26,000
的确可能要要考虑 localization 的话

42
00:02:26,000 --> 00:02:29,000
的确可能不是一个非常理想的解决方案

43
00:02:29,000 --> 00:02:33,000
可是反过来你用 percenth 这种方式

44
00:02:33,000 --> 00:02:34,000
好像也不行啊

45
00:02:34,000 --> 00:02:36,000
对 也是要单独做一下

46
00:02:36,000 --> 00:02:38,000
也是要考虑到 local

47
00:02:38,000 --> 00:02:42,000
对 但是我觉得反正 go 的这种时间的表达方式的好处就是

48
00:02:42,000 --> 00:02:44,000
上次我也讲了嘛

49
00:02:44,000 --> 00:02:46,000
就不需要查手册

50
00:02:46,000 --> 00:02:47,000
这件事挺爽的

51
00:02:47,000 --> 00:02:48,000
我不知道你有没有这么觉得

52
00:02:48,000 --> 00:02:50,000
是 没错

53
00:02:50,000 --> 00:02:52,000
因为它的这个安排就刻意把它

54
00:02:52,000 --> 00:02:54,000
所见机所得了

55
00:02:54,000 --> 00:02:56,000
对 而且它的这个 sequence 是

56
00:02:56,000 --> 00:02:58,000
就是当然因为美国人的逻辑

57
00:02:58,000 --> 00:03:00,000
我觉得不可理喻的就是 1 月 2 日

58
00:03:00,000 --> 00:03:02,000
就是日在前面

59
00:03:02,000 --> 00:03:03,000
日在后面

60
00:03:03,000 --> 00:03:03,000
日在后面

61
00:03:03,000 --> 00:03:03,000
日在前面

62
00:03:03,000 --> 00:03:05,000
日在后面

63
00:03:05,000 --> 00:03:08,000
我在推特上看到过一个漫画

64
00:03:08,000 --> 00:03:11,000
说 logic versus American logic

65
00:03:11,000 --> 00:03:12,000
然后左边是个金字塔

66
00:03:12,000 --> 00:03:13,000
最上面的是日

67
00:03:13,000 --> 00:03:14,000
然后下面是月

68
00:03:14,000 --> 00:03:15,000
最下面是年

69
00:03:15,000 --> 00:03:17,000
就是从小到大

70
00:03:17,000 --> 00:03:18,000
对 是个倒三角

71
00:03:18,000 --> 00:03:20,000
然后 American logic 那边写的是月

72
00:03:20,000 --> 00:03:22,000
然后日 年

73
00:03:22,000 --> 00:03:24,000
然后上面是个倒三角

74
00:03:24,000 --> 00:03:25,000
下面是一个 T 形

75
00:03:25,000 --> 00:03:28,000
就嘲笑美国人的这个逻辑

76
00:03:28,000 --> 00:03:29,000
不过从

77
00:03:29,000 --> 00:03:31,000
但我觉得其实可以加一个

78
00:03:31,000 --> 00:03:33,000
就是如果你把中国人的逻辑考虑进去的话

79
00:03:33,000 --> 00:03:34,000
那中国人其实更合理

80
00:03:34,000 --> 00:03:36,000
中国人是从上到下

81
00:03:36,000 --> 00:03:37,000
从大到小

82
00:03:37,000 --> 00:03:38,000
是一个倒金字塔

83
00:03:38,000 --> 00:03:39,000
年月日

84
00:03:39,000 --> 00:03:41,000
然后小时分秒

85
00:03:41,000 --> 00:03:42,000
但是在

86
00:03:42,000 --> 00:03:44,000
就是在这个所谓 normal logic

87
00:03:44,000 --> 00:03:47,000
或者说西方 logic 这边

88
00:03:47,000 --> 00:03:48,000
从小到大吗

89
00:03:48,000 --> 00:03:49,000
先从小到大

90
00:03:49,000 --> 00:03:52,000
然后再从大到小

91
00:03:52,000 --> 00:03:54,000
对 反正我觉得只要

92
00:03:54,000 --> 00:03:55,000
不管你是从小到大

93
00:03:55,000 --> 00:03:57,000
就是跟那个 bite order 一样

94
00:03:57,000 --> 00:03:58,000
不管你从小到大

95
00:03:58,000 --> 00:03:58,000
从大到小

96
00:03:58,000 --> 00:04:01,000
你只要遵从一个统一的规则就好了

97
00:04:01,000 --> 00:04:03,000
然后美国人这一套

98
00:04:03,000 --> 00:04:07,000
实在是太奇怪了

99
00:04:07,000 --> 00:04:08,000
没错

100
00:04:08,000 --> 00:04:11,000
对 回到我们今天的这个

101
00:04:11,000 --> 00:04:13,000
holy war 的主题上面

102
00:04:13,000 --> 00:04:15,000
就是我们觉得

103
00:04:15,000 --> 00:04:17,000
可能谈编辑器

104
00:04:17,000 --> 00:04:19,000
总会不可避免的

105
00:04:19,000 --> 00:04:20,000
谈到这个

106
00:04:20,000 --> 00:04:24,000
程序员界的若干大圣战之一

107
00:04:24,000 --> 00:04:28,000
也就是 VIM 和 EMEX 之争

108
00:04:28,000 --> 00:04:33,000
我们其实也无意挑起什么 flame war

109
00:04:33,000 --> 00:04:33,000
但是

110
00:04:33,000 --> 00:04:36,000
但是也有可能

111
00:04:36,000 --> 00:04:37,000
这是一个不可避免的事情

112
00:04:37,000 --> 00:04:38,000
对

113
00:04:38,000 --> 00:04:41,000
其实为什么

114
00:04:41,000 --> 00:04:42,000
为什么程序员界

115
00:04:42,000 --> 00:04:44,000
有这么多 holy war

116
00:04:44,000 --> 00:04:45,000
就是我刚才

117
00:04:45,000 --> 00:04:46,000
我前两天也不小心

118
00:04:46,000 --> 00:04:48,000
在知乎上挑起了半场

119
00:04:48,000 --> 00:04:50,000
小半场 holy war

120
00:04:50,000 --> 00:04:51,000
我在那边

121
00:04:51,000 --> 00:04:52,000
bitching php

122
00:04:52,000 --> 00:04:54,000
是一款多烂的语言

123
00:04:54,000 --> 00:04:55,000
然后在下面说

124
00:04:55,000 --> 00:04:56,000
有人说

125
00:04:56,000 --> 00:04:58,000
那它为什么还这么流行呢

126
00:04:58,000 --> 00:04:59,000
我说

127
00:04:59,000 --> 00:05:01,000
我说烂的

128
00:05:01,000 --> 00:05:01,000
那就

129
00:05:01,000 --> 00:05:03,000
就是一个东西流行

130
00:05:03,000 --> 00:05:04,000
并不意味着它不烂呀

131
00:05:04,000 --> 00:05:05,000
你看那 windows

132
00:05:05,000 --> 00:05:07,000
不也是最流行的操级龙

133
00:05:07,000 --> 00:05:08,000
然后这句话就

134
00:05:08,000 --> 00:05:09,000
对

135
00:05:09,000 --> 00:05:10,000
对

136
00:05:10,000 --> 00:05:12,000
触到某些这个

137
00:05:12,000 --> 00:05:14,000
flame war 的

138
00:05:14,000 --> 00:05:16,000
的征战之点了

139
00:05:16,000 --> 00:05:17,000
然后有人说

140
00:05:17,000 --> 00:05:20,000
你说什么

141
00:05:20,000 --> 00:05:21,000
windows 不是最好的操级龙

142
00:05:21,000 --> 00:05:23,000
这句话就暴露你的水平

143
00:05:23,000 --> 00:05:24,000
好吧

144
00:05:24,000 --> 00:05:25,000
yeah

145
00:05:25,000 --> 00:05:26,000
so did

146
00:05:26,000 --> 00:05:28,000
对

147
00:05:28,000 --> 00:05:31,000
先回答那个问题吧

148
00:05:31,000 --> 00:05:33,000
为什么会有这么多这种

149
00:05:33,000 --> 00:05:34,000
所以胜战

150
00:05:34,000 --> 00:05:34,000
或者说

151
00:05:34,000 --> 00:05:36,000
为什么程序员特别喜欢吵架

152
00:05:36,000 --> 00:05:38,000
我觉得可能就是什么

153
00:05:38,000 --> 00:05:40,000
死理性派吧

154
00:05:40,000 --> 00:05:41,000
就是

155
00:05:41,000 --> 00:05:43,000
一定要分出一个

156
00:05:43,000 --> 00:05:44,000
对错

157
00:05:44,000 --> 00:05:46,000
一定要分出一个高下

158
00:05:46,000 --> 00:05:48,000
是不是有这个原因在里面

159
00:05:48,000 --> 00:05:49,000
可是

160
00:05:49,000 --> 00:05:50,000
可是真正死理性派

161
00:05:50,000 --> 00:05:52,000
应该会意识到这种

162
00:05:52,000 --> 00:05:55,000
争吵的无意义之处啊

163
00:05:55,000 --> 00:05:56,000
但我觉得这不是

164
00:05:56,000 --> 00:05:56,000
其实

165
00:05:56,000 --> 00:05:58,000
那就不是死理性派

166
00:05:58,000 --> 00:05:59,000
那就是活力性派

167
00:05:59,000 --> 00:06:00,000
你想想

168
00:06:00,000 --> 00:06:01,000
就是 flame war 这个词

169
00:06:01,000 --> 00:06:03,000
可能不是那么特

170
00:06:03,000 --> 00:06:04,000
特别的

171
00:06:04,000 --> 00:06:04,000
突出这一点

172
00:06:04,000 --> 00:06:05,000
但是 holy war

173
00:06:05,000 --> 00:06:06,000
你想想这个词

174
00:06:06,000 --> 00:06:07,000
holy

175
00:06:07,000 --> 00:06:09,000
holy 是一个非常

176
00:06:09,000 --> 00:06:10,000
holy 只有在

177
00:06:10,000 --> 00:06:12,000
对于宗教的

178
00:06:12,000 --> 00:06:14,000
就 holy 本身是一个宗教的感觉

179
00:06:14,000 --> 00:06:14,000
对吧

180
00:06:14,000 --> 00:06:15,000
嗯

181
00:06:15,000 --> 00:06:15,000
你只有

182
00:06:15,000 --> 00:06:17,000
你只有对某种

183
00:06:17,000 --> 00:06:19,000
东西产生

184
00:06:19,000 --> 00:06:21,000
出了非理性的崇拜

185
00:06:21,000 --> 00:06:22,000
才有可能认为

186
00:06:22,000 --> 00:06:24,000
这件事情是 holy 的

187
00:06:24,000 --> 00:06:25,000
嗯

188
00:06:25,000 --> 00:06:26,000
对吧

189
00:06:26,000 --> 00:06:27,000
有答案

190
00:06:27,000 --> 00:06:29,000
那如果你是真正

191
00:06:29,000 --> 00:06:31,000
是一个真正的死理性派

192
00:06:31,000 --> 00:06:32,000
那你应该

193
00:06:32,000 --> 00:06:33,000
能够克服

194
00:06:33,000 --> 00:06:35,000
情感上的偏见

195
00:06:35,000 --> 00:06:36,000
来就事论事

196
00:06:36,000 --> 00:06:37,000
来讨论问题

197
00:06:37,000 --> 00:06:38,000
但实际上我们看到

198
00:06:38,000 --> 00:06:41,000
至少我是不可能

199
00:06:41,000 --> 00:06:41,000
做到这一点

200
00:06:41,000 --> 00:06:43,000
就是你不能

201
00:06:43,000 --> 00:06:45,000
屏除感情色彩

202
00:06:45,000 --> 00:06:46,000
然后再考虑你的

203
00:06:46,000 --> 00:06:47,000
每一个决定的

204
00:06:47,000 --> 00:06:47,000
一些是吧

205
00:06:47,000 --> 00:06:48,000
对

206
00:06:48,000 --> 00:06:49,000
而且我觉得

207
00:06:49,000 --> 00:06:51,000
其实很多程序员

208
00:06:51,000 --> 00:06:54,000
是具有这样的一种

209
00:06:54,000 --> 00:06:55,000
感情上的偏执的

210
00:06:55,000 --> 00:06:55,000
因为

211
00:06:55,000 --> 00:06:56,000
嗯

212
00:06:56,000 --> 00:06:57,000
在

213
00:06:57,000 --> 00:06:58,000
标榜

214
00:06:58,000 --> 00:06:59,000
或者说

215
00:06:59,000 --> 00:07:00,000
追求死理性派

216
00:07:00,000 --> 00:07:01,000
这一个

217
00:07:01,000 --> 00:07:02,000
这一个

218
00:07:02,000 --> 00:07:04,000
身份认同的同时

219
00:07:04,000 --> 00:07:04,000
嗯

220
00:07:04,000 --> 00:07:06,000
人们会试图去

221
00:07:06,000 --> 00:07:07,000
或者说

222
00:07:07,000 --> 00:07:09,000
有意无意的忽视了

223
00:07:09,000 --> 00:07:10,000
感情上面的

224
00:07:10,000 --> 00:07:11,000
情商建设

225
00:07:11,000 --> 00:07:12,000
可以这么理解

226
00:07:12,000 --> 00:07:13,000
嗯

227
00:07:13,000 --> 00:07:13,000
就是

228
00:07:13,000 --> 00:07:15,000
就是一旦

229
00:07:15,000 --> 00:07:16,000
对方

230
00:07:16,000 --> 00:07:17,000
有和自己

231
00:07:17,000 --> 00:07:18,000
不一样的观点的话

232
00:07:18,000 --> 00:07:20,000
就很容易产生一种

233
00:07:20,000 --> 00:07:21,000
情感上的偏执

234
00:07:21,000 --> 00:07:22,000
说你一定是错的

235
00:07:22,000 --> 00:07:23,000
我一定是对的

236
00:07:23,000 --> 00:07:25,000
哼

237
00:07:25,000 --> 00:07:26,000
这个我还

238
00:07:26,000 --> 00:07:28,000
没有意识到

239
00:07:28,000 --> 00:07:28,000
对我觉得其实是一种

240
00:07:28,000 --> 00:07:30,000
其实是一种宗教情节

241
00:07:30,000 --> 00:07:31,000
就是

242
00:07:31,000 --> 00:07:32,000
holy war 这个名字

243
00:07:32,000 --> 00:07:33,000
或者说不是宗教情节

244
00:07:33,000 --> 00:07:34,000
而是一种非感

245
00:07:34,000 --> 00:07:35,000
非理性的情节

246
00:07:35,000 --> 00:07:37,000
就恰恰是因为

247
00:07:37,000 --> 00:07:38,000
非理性的部分

248
00:07:38,000 --> 00:07:39,000
被人忽视了

249
00:07:39,000 --> 00:07:40,000
才会以这种

250
00:07:40,000 --> 00:07:42,000
看似理性的方式去

251
00:07:42,000 --> 00:07:43,000
呃

252
00:07:43,000 --> 00:07:44,000
打

253
00:07:44,000 --> 00:07:45,000
这样的战争

254
00:07:45,000 --> 00:07:48,000
呃

255
00:07:48,000 --> 00:07:48,000
anyway

256
00:07:48,000 --> 00:07:49,000
我

257
00:07:49,000 --> 00:07:49,000
我

258
00:07:49,000 --> 00:07:49,000
我

259
00:07:49,000 --> 00:07:49,000
我

260
00:07:49,000 --> 00:07:51,000
我有一个猜想哈

261
00:07:51,000 --> 00:07:52,000
我不知道是不是

262
00:07:52,000 --> 00:07:53,000
是不是正确的

263
00:07:53,000 --> 00:07:54,000
这当然

264
00:07:54,000 --> 00:07:56,000
就跟他是不是理性的

265
00:07:56,000 --> 00:07:57,000
呃

266
00:07:57,000 --> 00:07:58,000
我们可以再讨论

267
00:07:58,000 --> 00:07:58,000
就是

268
00:07:58,000 --> 00:08:00,000
我觉得编程

269
00:08:00,000 --> 00:08:01,000
或者说你做一个

270
00:08:01,000 --> 00:08:02,000
思想的工作

271
00:08:02,000 --> 00:08:03,000
或者是你做一种

272
00:08:03,000 --> 00:08:05,000
什么生产力的工具也好

273
00:08:05,000 --> 00:08:06,000
还是做一个什么

274
00:08:06,000 --> 00:08:07,000
编程语言好

275
00:08:07,000 --> 00:08:08,000
你

276
00:08:08,000 --> 00:08:10,000
你都是要找到一个群体的

277
00:08:10,000 --> 00:08:10,000
对吧

278
00:08:10,000 --> 00:08:11,000
然后你是需要

279
00:08:11,000 --> 00:08:13,000
所谓扩大你的

280
00:08:13,000 --> 00:08:14,000
这种 mind share

281
00:08:14,000 --> 00:08:16,000
就是你有更多的人

282
00:08:16,000 --> 00:08:18,000
和你分享同样的观点

283
00:08:18,000 --> 00:08:19,000
或者是跟你有同样的

284
00:08:19,000 --> 00:08:19,000
这个

285
00:08:19,000 --> 00:08:21,000
对某一种事情的认知

286
00:08:21,000 --> 00:08:23,000
这样对你来说

287
00:08:23,000 --> 00:08:25,000
整体而言是有好处的

288
00:08:25,000 --> 00:08:25,000
啊

289
00:08:25,000 --> 00:08:27,000
举个最简单的例子

290
00:08:27,000 --> 00:08:29,000
比如说你是一个很小众的语言

291
00:08:29,000 --> 00:08:29,000
那么你

292
00:08:29,000 --> 00:08:32,000
你是这个很小众员的这个铁杆粉丝

293
00:08:32,000 --> 00:08:33,000
那你可能很

294
00:08:33,000 --> 00:08:34,000
现在会觉得哎呀

295
00:08:34,000 --> 00:08:35,000
这个问题

296
00:08:35,000 --> 00:08:37,000
为什么不用这个语言写

297
00:08:37,000 --> 00:08:39,000
这个写出来发现会很优雅啊

298
00:08:39,000 --> 00:08:39,000
结果会多好

299
00:08:39,000 --> 00:08:42,000
而且一旦有很多人这么写的话

300
00:08:42,000 --> 00:08:43,000
那我很多 library

301
00:08:43,000 --> 00:08:44,000
就是所谓的酷

302
00:08:44,000 --> 00:08:45,000
就已经有现成了

303
00:08:45,000 --> 00:08:47,000
我也不用自己再动手写

304
00:08:47,000 --> 00:08:49,000
我就可以直接拿来用就可以了

305
00:08:49,000 --> 00:08:53,000
那么出于这种比较自立的角度去看的话

306
00:08:53,000 --> 00:08:55,000
你的一个

307
00:08:55,000 --> 00:08:57,000
默认的倾向就应该是

308
00:08:57,000 --> 00:08:58,000
就如果你真的是很喜欢这个东西的话

309
00:08:58,000 --> 00:09:01,000
你会把它推荐给你认识的

310
00:09:01,000 --> 00:09:02,000
或者不认识的人

311
00:09:02,000 --> 00:09:04,000
然后让他们也能够

312
00:09:04,000 --> 00:09:06,000
像你一样认识到它的好处和优点

313
00:09:06,000 --> 00:09:08,000
从而加入你的行列

314
00:09:08,000 --> 00:09:09,000
从而为这个东西

315
00:09:09,000 --> 00:09:12,000
就所谓扩大这个东西的 mind share

316
00:09:12,000 --> 00:09:15,000
然后对于这样对于你个体而言

317
00:09:15,000 --> 00:09:17,000
也是非常有利的一个结果

318
00:09:17,000 --> 00:09:19,000
我不知道这样讲

319
00:09:19,000 --> 00:09:21,000
说清楚刚才我讲那个意思

320
00:09:21,000 --> 00:09:22,000
是我可以理解

321
00:09:22,000 --> 00:09:25,000
就是换一个角度说

322
00:09:25,000 --> 00:09:26,000
每一种工具

323
00:09:26,000 --> 00:09:28,000
或者说比如说我们非常推崇的 Vim

324
00:09:28,000 --> 00:09:30,000
就你和我都是 Vim 党

325
00:09:30,000 --> 00:09:34,000
那我们两个会对于这种工具所推崇

326
00:09:34,000 --> 00:09:36,000
或者说这种这个工具的设计者

327
00:09:36,000 --> 00:09:38,000
所使用

328
00:09:38,000 --> 00:09:42,000
在工具之中注入了这么一种使用哲学

329
00:09:42,000 --> 00:09:46,000
或者说使用模式产生一定的意见

330
00:09:46,000 --> 00:09:48,000
然后我们会认为

331
00:09:48,000 --> 00:09:52,000
同样持有这样意见的使用者

332
00:09:52,000 --> 00:09:54,000
是我们的同类

333
00:09:54,000 --> 00:09:57,000
但是在一些其他编辑器里面

334
00:09:57,000 --> 00:10:00,000
可能没有这样的倾向

335
00:10:00,000 --> 00:10:01,000
或者说这样的倾向会比较少

336
00:10:01,000 --> 00:10:03,000
比如说我们很少会

337
00:10:03,000 --> 00:10:05,000
也许这样的地方真的有

338
00:10:05,000 --> 00:10:07,000
但是我们很少会听说有什么

339
00:10:07,000 --> 00:10:10,000
notepad 用户

340
00:10:10,000 --> 00:10:12,000
会组成这么一个兴趣小组

341
00:10:12,000 --> 00:10:15,000
或者是更大种

342
00:10:15,000 --> 00:10:16,000
Eclipse

343
00:10:16,000 --> 00:10:18,000
我觉得 Eclipse 好像也是一个

344
00:10:18,000 --> 00:10:20,000
非常非常路人的这么一个编辑器

345
00:10:20,000 --> 00:10:22,000
很少会有人非常以使用 Eclipse

346
00:10:22,000 --> 00:10:27,000
为一种身份认同的标志

347
00:10:27,000 --> 00:10:28,000
有可能是因为它太普遍了

348
00:10:28,000 --> 00:10:30,000
有可能是因为它太平庸了

349
00:10:30,000 --> 00:10:35,000
但对于任何一种稍微具有一些

350
00:10:35,000 --> 00:10:36,000
就像我说了这种使用哲学

351
00:10:36,000 --> 00:10:38,000
在里面的工具来说

352
00:10:38,000 --> 00:10:41,000
这种用户情节是很容易产生的

353
00:10:41,000 --> 00:10:42,000
就像你说的

354
00:10:42,000 --> 00:10:43,000
对

355
00:10:43,000 --> 00:10:45,000
所以就是反正就是一个什么身份认同

356
00:10:45,000 --> 00:10:46,000
在里面

357
00:10:46,000 --> 00:10:48,000
我觉得我们会找到自己的同类

358
00:10:48,000 --> 00:10:50,000
然后去交流一些使用体验

359
00:10:50,000 --> 00:10:51,000
心得体会

360
00:10:51,000 --> 00:10:53,000
包括什么各种插件

361
00:10:53,000 --> 00:10:53,000
之类的

362
00:10:53,000 --> 00:10:57,000
然后反正我个人会有这种倾向吧

363
00:10:57,000 --> 00:10:58,000
反正

364
00:10:58,000 --> 00:10:59,000
对

365
00:10:59,000 --> 00:11:01,000
OK

366
00:11:01,000 --> 00:11:04,000
今天然后我们还是从这个最

367
00:11:04,000 --> 00:11:05,000
也不叫最古老

368
00:11:05,000 --> 00:11:09,000
就是真吵得最凶的两大编辑器开始入手

369
00:11:09,000 --> 00:11:11,000
最经典的一场战力分析开始

370
00:11:11,000 --> 00:11:11,000
对

371
00:11:11,000 --> 00:11:16,000
先讲的那个是我和吴涛都很喜欢的 VIM

372
00:11:16,000 --> 00:11:21,000
其实 VIM 其实它不仅仅是一个编辑器

373
00:11:21,000 --> 00:11:21,000
对吧

374
00:11:21,000 --> 00:11:22,000
对

375
00:11:22,000 --> 00:11:25,000
VIM 其实是一组编辑器的最早最早的

376
00:11:25,000 --> 00:11:27,000
就是 VIM 编辑器

377
00:11:27,000 --> 00:11:35,000
VIM 这种编辑器可以追溯到一个叫做 X 的 text editor

378
00:11:35,000 --> 00:11:42,000
就是它最早是在 UNIX 上面的一个行编辑器

379
00:11:42,000 --> 00:11:44,000
就是我们现在的编辑器

380
00:11:44,000 --> 00:11:46,000
司空监管的都是一次可以编辑很多很多行

381
00:11:46,000 --> 00:11:49,000
然后在当时 X 这个编辑器

382
00:11:49,000 --> 00:11:50,000
它只能编一次只能编辑一行

383
00:11:50,000 --> 00:11:52,000
就是你打开文件

384
00:11:52,000 --> 00:11:53,000
打开一个文件

385
00:11:53,000 --> 00:11:55,000
你一次只能看到一行或者几行内容

386
00:11:55,000 --> 00:11:58,000
然后你所有的编辑都针对着几行完成

387
00:11:58,000 --> 00:11:59,000
对

388
00:11:59,000 --> 00:12:01,000
然后这是 1976 年写成的一个工具

389
00:12:01,000 --> 00:12:03,000
对

390
00:12:03,000 --> 00:12:05,000
它是非常非常古老的一个工具

391
00:12:05,000 --> 00:12:10,000
V 就是在 EX 之后出现了一个工具叫做 V

392
00:12:10,000 --> 00:12:11,000
也就是 VI

393
00:12:11,000 --> 00:12:20,000
VI 出现的目的是把 X 的行编辑扩展到多行编辑

394
00:12:20,000 --> 00:12:25,000
也就是我们现在能够看到的这种

395
00:12:25,000 --> 00:12:29,000
多行编辑器的一个命令行终端上的版本

396
00:12:29,000 --> 00:12:31,000
然后我们所使用的 VIM 呢

397
00:12:31,000 --> 00:12:39,000
又是一个荷兰程序员把原始的 VI 程序扩展之后

398
00:12:39,000 --> 00:12:42,000
改名叫做 VI-improved

399
00:12:42,000 --> 00:12:46,000
然后一直维护到现在这么一个工具

400
00:12:46,000 --> 00:12:48,000
所以我们其实讨讨讨 VIM 的时候

401
00:12:48,000 --> 00:12:50,000
讨讨是一组 VIM

402
00:12:50,000 --> 00:12:51,000
包括这个 VIM 还有

403
00:12:51,000 --> 00:12:52,000
比如说 MacVIM

404
00:12:52,000 --> 00:12:55,000
这样在专门在 Mac 上面运行的

405
00:12:55,000 --> 00:12:56,000
或者是 GVIM

406
00:12:56,000 --> 00:12:58,000
专门在 Xwindow

407
00:12:58,000 --> 00:13:02,000
或者是 Glome 下面运行的图形界面

408
00:13:02,000 --> 00:13:05,000
这些零零送的都可以算到 VIM 里面

409
00:13:05,000 --> 00:13:10,000
对 而且 VIM 还有一些后来的新的后继者吧

410
00:13:10,000 --> 00:13:14,000
比如最近比较火的一个叫做 Neo VIM

411
00:13:14,000 --> 00:13:15,000
对吧

412
00:13:15,000 --> 00:13:16,000
对 Neo VIM

413
00:13:16,000 --> 00:13:18,000
他是把在 VIM 的

414
00:13:18,000 --> 00:13:19,000
他也不是

415
00:13:19,000 --> 00:13:20,000
他等于是重写了一遍了

416
00:13:20,000 --> 00:13:25,000
我理解 Neo VIM 的理念是

417
00:13:25,000 --> 00:13:27,000
VIM 这个编辑

418
00:13:27,000 --> 00:13:34,000
作为一个非常注重兼容性的代码库

419
00:13:34,000 --> 00:13:35,000
有太多太多问题

420
00:13:35,000 --> 00:13:39,000
所以他们把里面比较重要的组件重写了一遍

421
00:13:39,000 --> 00:13:42,000
比如说把单元测试全都重写了一遍

422
00:13:42,000 --> 00:13:48,000
然后把应该是把 VIM script 的解析器

423
00:13:48,000 --> 00:13:49,000
用 Lua 重写了一遍

424
00:13:49,000 --> 00:13:53,000
然后以此带来的改进

425
00:13:53,000 --> 00:13:56,000
就是整个代码库变得更易读了

426
00:13:56,000 --> 00:13:59,000
然后维护起来比较容易

427
00:13:59,000 --> 00:14:03,000
因为我们知道 VIM 这个编辑器

428
00:14:03,000 --> 00:14:05,000
虽然使用的人非常非常多

429
00:14:05,000 --> 00:14:07,000
contributor 也非常非常多

430
00:14:07,000 --> 00:14:10,000
但是其核心维护者其实只有一个人

431
00:14:10,000 --> 00:14:12,000
这个人就是原作者

432
00:14:12,000 --> 00:14:15,000
对 原作者叫做 Bram Mulan

433
00:14:15,000 --> 00:14:17,000
Mulana

434
00:14:17,000 --> 00:14:19,000
对 是一个河南名字

435
00:14:19,000 --> 00:14:20,000
河南名字

436
00:14:20,000 --> 00:14:22,000
他是一个河南人

437
00:14:22,000 --> 00:14:24,000
生于 1961 年

438
00:14:24,000 --> 00:14:26,000
现在在苏伊士做 Google 员工

439
00:14:26,000 --> 00:14:29,000
我相信我 somehow 在苏伊士的街头见到过这个人

440
00:14:29,000 --> 00:14:30,000
但是我不敢确定

441
00:14:30,000 --> 00:14:31,000
因为

442
00:14:31,000 --> 00:14:35,000
对 因为如果你去 Wikipedia 上看他的词条的话

443
00:14:35,000 --> 00:14:39,000
就是他有一张非常知名的照片

444
00:14:39,000 --> 00:14:42,000
他穿着一件胸前印着 slash code slash

445
00:14:42,000 --> 00:14:45,000
然后下面写个问号的黑 T 恤

446
00:14:45,000 --> 00:14:46,000
黑色 T 恤的

447
00:14:46,000 --> 00:14:48,000
所以我对他的相貌还是比较有

448
00:14:48,000 --> 00:14:50,000
比较有概念的

449
00:14:50,000 --> 00:14:52,000
所以那天也许我在苏伊士街头看到过他

450
00:14:52,000 --> 00:14:53,000
但是不敢确定

451
00:14:53,000 --> 00:14:56,000
对 因为他现在是 Google 的员工

452
00:14:56,000 --> 00:14:58,000
就是 Google 是一个聚集了很多

453
00:14:58,000 --> 00:15:00,000
这种神人的地方

454
00:15:00,000 --> 00:15:04,000
之前 Python 的作者好像也在 Google 吧

455
00:15:04,000 --> 00:15:05,000
现在已经去了 Dropbox

456
00:15:05,000 --> 00:15:06,000
对 现在已经去 Dropbox

457
00:15:06,000 --> 00:15:10,000
这个人他是 Vim 项目的所谓

458
00:15:10,000 --> 00:15:11,000
The single point of failure

459
00:15:11,000 --> 00:15:13,000
就是一旦这个人

460
00:15:13,000 --> 00:15:13,000
管了

461
00:15:13,000 --> 00:15:17,000
如果 Bram 某一天出去街上

462
00:15:17,000 --> 00:15:20,000
被这个苏伊士的电车给撞死了

463
00:15:20,000 --> 00:15:22,000
那么 Vim 这个项目也就完蛋了

464
00:15:22,000 --> 00:15:23,000
估计

465
00:15:23,000 --> 00:15:24,000
God forbid

466
00:15:24,000 --> 00:15:26,000
对 千万不要发言

467
00:15:26,000 --> 00:15:28,000
因为有人去

468
00:15:28,000 --> 00:15:28,000
我没有看过

469
00:15:28,000 --> 00:15:30,000
但是我之前有索尔

470
00:15:30,000 --> 00:15:32,000
我就是看 NeoVim 那件事的事情

471
00:15:32,000 --> 00:15:36,000
就是 Vim 本身的代码库的写法是比较古怪的

472
00:15:36,000 --> 00:15:37,000
对

473
00:15:37,000 --> 00:15:38,000
然后

474
00:15:38,000 --> 00:15:39,000
它就是一个所谓

475
00:15:39,000 --> 00:15:43,000
逐渐生长期待的这么一个项目

476
00:15:43,000 --> 00:15:46,000
它不是一开始就有一个比较宏大的规划

477
00:15:46,000 --> 00:15:51,000
或者说在所谓 architecture 这一部分做的不是很好

478
00:15:51,000 --> 00:15:52,000
其实

479
00:15:52,000 --> 00:15:56,000
对 你可以说它甚至不是一个很优美的代码库这样

480
00:15:56,000 --> 00:15:57,000
对

481
00:15:57,000 --> 00:16:00,000
也是为什么 NeoVim 那帮人想着

482
00:16:00,000 --> 00:16:01,000
哇靠这个没法忍了

483
00:16:01,000 --> 00:16:02,000
我们还是这里从

484
00:16:02,000 --> 00:16:04,000
他们之前也想提

485
00:16:04,000 --> 00:16:06,000
想给那个 Bram 提一个 patch

486
00:16:06,000 --> 00:16:07,000
因为他好像这个

487
00:16:07,000 --> 00:16:10,000
很久用那个分布式代码管理吧

488
00:16:10,000 --> 00:16:11,000
我记得

489
00:16:11,000 --> 00:16:13,000
反正想给他提个 patch

490
00:16:13,000 --> 00:16:15,000
然后就经常被拒掉

491
00:16:15,000 --> 00:16:17,000
然后就算我们自己搞一个好了

492
00:16:17,000 --> 00:16:18,000
还有一个问题

493
00:16:18,000 --> 00:16:21,000
就是 Vim 这个代码库

494
00:16:21,000 --> 00:16:26,000
它兼容非常非常非常多的系统和平台

495
00:16:26,000 --> 00:16:30,000
而且这些所有的兼容代码都是他一个人在维护的

496
00:16:30,000 --> 00:16:32,000
就 Bram 一个人在维护的

497
00:16:32,000 --> 00:16:35,000
那么有些那种稀奇古怪的平台

498
00:16:35,000 --> 00:16:37,000
现在我估计很多人从来

499
00:16:37,000 --> 00:16:38,000
不是说没有见过

500
00:16:38,000 --> 00:16:39,000
可能听都没有听过

501
00:16:39,000 --> 00:16:42,000
对什么 BOS 或者是什么

502
00:16:42,000 --> 00:16:45,000
Omega 还是 Amiga

503
00:16:45,000 --> 00:16:46,000
Omega

504
00:16:46,000 --> 00:16:48,000
Omega

505
00:16:48,000 --> 00:16:51,000
反正有很多这种奇奇怪怪的平台

506
00:16:51,000 --> 00:16:55,000
至少我觉得像我们这种新生代

507
00:16:55,000 --> 00:16:57,000
就是后面的什么

508
00:16:57,000 --> 00:17:01,000
不是六七十年代出生的那帮人是不知道哪些系统是长生的

509
00:17:01,000 --> 00:17:05,000
对就是可能就是在西欧某个国家的某个角落里面

510
00:17:05,000 --> 00:17:07,000
有一个从六十年代运行至今的系统上面

511
00:17:07,000 --> 00:17:08,000
必须要跑

512
00:17:08,000 --> 00:17:11,000
Vim 然后他就必须维护这一份代码

513
00:17:11,000 --> 00:17:11,000
对

514
00:17:11,000 --> 00:17:15,000
然后就其实像很多像比如像 NeoVim 这种新兴的项目

515
00:17:15,000 --> 00:17:16,000
他就觉得哇

516
00:17:16,000 --> 00:17:18,000
那我为什么要花时间花精力去支持那么多

517
00:17:18,000 --> 00:17:23,000
可能地区上绝大部分人都根本没有听说过的那种平台或者系统

518
00:17:23,000 --> 00:17:27,000
就这里是一个就是减少代码量的一个办法吧

519
00:17:27,000 --> 00:17:28,000
没错

520
00:17:28,000 --> 00:17:29,000
对

521
00:17:29,000 --> 00:17:31,000
这就刚才也就提到了 Vim 的一个优点

522
00:17:31,000 --> 00:17:34,000
就是所谓的 Ubiquitous

523
00:17:34,000 --> 00:17:35,000
无处不在

524
00:17:35,000 --> 00:17:36,000
对

525
00:17:36,000 --> 00:17:37,000
就你很有可能

526
00:17:37,000 --> 00:17:40,000
就我们既然谈到了 Vim 和 Emacs 之间的圣战

527
00:17:40,000 --> 00:17:42,000
那基本上我们可以说

528
00:17:42,000 --> 00:17:44,000
现在就可以说出 Vim 的一个优点

529
00:17:44,000 --> 00:17:50,000
就是几乎你有机会碰触到的任何一台 Unix 电脑

530
00:17:50,000 --> 00:17:51,000
类 Unix 电脑

531
00:17:51,000 --> 00:17:54,000
基本上都会有 Vim 的某种形式存在

532
00:17:54,000 --> 00:17:55,000
但是 Emacs 都不一定了

533
00:17:55,000 --> 00:17:56,000
对

534
00:17:56,000 --> 00:18:01,000
而且之前我经常在导致这个 Linux 的路由器

535
00:18:01,000 --> 00:18:06,000
还有很多这种所谓的就是经典版或者是嵌入式的系统里面

536
00:18:06,000 --> 00:18:14,000
你这种会发现它默认自在一个就是 VI 或者是 Vim Tiny 这种超小型的 Vim 编辑器

537
00:18:14,000 --> 00:18:16,000
不是全部特性都有的

538
00:18:16,000 --> 00:18:19,000
然后但是 Emacs 这种是肯定找不到的

539
00:18:19,000 --> 00:18:21,000
对

540
00:18:21,000 --> 00:18:22,000
所以它叫做无处不在

541
00:18:22,000 --> 00:18:24,000
没有记错的话

542
00:18:24,000 --> 00:18:28,000
VI 应该是 PASIX 标准的一部分吧

543
00:18:28,000 --> 00:18:29,000
啊

544
00:18:29,000 --> 00:18:30,000
这个我还没意识到

545
00:18:30,000 --> 00:18:39,000
就是如果你要让你的系统符合 PASIX 或者是就是 Max 过的那个叫什么 Single Unix Specification

546
00:18:39,000 --> 00:18:42,000
那你的系统里面必须包含 VI

547
00:18:42,000 --> 00:18:43,000
天哪

548
00:18:43,000 --> 00:18:45,000
这个 Specification 也管得太多了吧

549
00:18:45,000 --> 00:18:46,000
对

550
00:18:46,000 --> 00:18:50,000
好像这个还包括好像 Purl 也是一部分

551
00:18:50,000 --> 00:18:50,000
天

552
00:18:50,000 --> 00:18:51,000
不要吧

553
00:18:51,000 --> 00:18:51,000
真的

554
00:18:51,000 --> 00:18:52,000
对

555
00:18:52,000 --> 00:18:52,000
anyway

556
00:18:52,000 --> 00:18:53,000
真的

557
00:18:53,000 --> 00:18:54,000
不肯闻笑

558
00:18:54,000 --> 00:18:55,000
OK

559
00:18:55,000 --> 00:18:58,000
但 Emacs 是不是我就不知道

560
00:18:58,000 --> 00:19:00,000
感觉三观又被刷新了

561
00:19:00,000 --> 00:19:06,000
所以为什么 Vim 或者说类 Vim 的这种编辑器会这么的普及

562
00:19:06,000 --> 00:19:08,000
而 Emacs 却没有呢

563
00:19:08,000 --> 00:19:10,000
这里有什么技术的原因

564
00:19:10,000 --> 00:19:15,000
我觉得主要的一个原因还是 VI 或者说 Vim 其实它不是

565
00:19:15,000 --> 00:19:18,000
它不单单是一种编辑器

566
00:19:18,000 --> 00:19:18,000
它是一个

567
00:19:18,000 --> 00:19:20,000
它是一种语言

568
00:19:20,000 --> 00:19:21,000
就是它是一种

569
00:19:21,000 --> 00:19:23,000
它是一种所谓方式你可以说

570
00:19:23,000 --> 00:19:26,000
它是一种你告诉编辑器

571
00:19:26,000 --> 00:19:31,000
你想要做的事情的一套机制

572
00:19:31,000 --> 00:19:32,000
而这套机制本身并不

573
00:19:32,000 --> 00:19:37,000
其实并不依赖于 VI 或者是 Vim 所存在着

574
00:19:37,000 --> 00:19:42,000
所以它也就被移植到了各种各样的地方

575
00:19:42,000 --> 00:19:51,000
比如说现在基本上任何稍微主流一点的编辑器里面都会有 VI 或者是类 Vim 的 keybinding 可以选

576
00:19:51,000 --> 00:19:54,000
但是这个如果这样说的话

577
00:19:54,000 --> 00:19:58,000
其实反而是 Emacs 那种 keybinding 会比较常见一点

578
00:19:58,000 --> 00:20:00,000
就是在大部分的编辑器里面

579
00:20:00,000 --> 00:20:01,000
比如上次我们已经聊到了

580
00:20:01,000 --> 00:20:09,000
在这个 Mac 上面大部分的文本输入框是自带一些基本的 Emacs 的 keybinding 的

581
00:20:09,000 --> 00:20:12,000
不但问题在于比如说你说 Eclipse

582
00:20:12,000 --> 00:20:20,000
Eclipse 或者是 Netbeams 之类的 IDE 里面

583
00:20:20,000 --> 00:20:23,000
是不会有 Emacs 的 keybinding

584
00:20:23,000 --> 00:20:27,000
但是 Vimkeybinding 肯定会有人实现出来

585
00:20:27,000 --> 00:20:27,000
嗯

586
00:20:27,000 --> 00:20:31,000
这个有点意思啊

587
00:20:31,000 --> 00:20:35,000
对这其中原因我觉得就是因为 Vim 本身是一种语言

588
00:20:35,000 --> 00:20:40,000
对这里要可能不是很多人都用或者说是学了一下

589
00:20:40,000 --> 00:20:42,000
但是没有坚持到底啊

590
00:20:42,000 --> 00:20:45,000
就是 Vim 的它的魅力或者优势在哪里

591
00:20:45,000 --> 00:20:49,000
就刚才你讲了它有一个一个所谓的这个语言这里

592
00:20:49,000 --> 00:20:52,000
但我们待会会解释这个语言是什么样的

593
00:20:52,000 --> 00:20:56,000
然后另外一个特点就是所谓的这个模态这一点啊

594
00:20:56,000 --> 00:20:59,000
所以这两者其实是相辅相成的可以说

595
00:20:59,000 --> 00:21:00,000
我们先讲哪一个

596
00:21:00,000 --> 00:21:04,000
对其实现在就可以解释一下了

597
00:21:04,000 --> 00:21:06,000
到底为什么或者说首先解释一下

598
00:21:06,000 --> 00:21:08,000
Vim 为什么这么难

599
00:21:08,000 --> 00:21:11,000
或者说怎么样才能让 Vim 变得不那么难

600
00:21:11,000 --> 00:21:12,000
嗯

601
00:21:12,000 --> 00:21:14,000
就是你要你要先理解一个概念

602
00:21:14,000 --> 00:21:16,000
就是嗯

603
00:21:16,000 --> 00:21:21,000
或者说你要从自己的使用习惯之中观察出一个概念来

604
00:21:21,000 --> 00:21:21,000
嗯

605
00:21:21,000 --> 00:21:23,000
也就是嗯

606
00:21:23,000 --> 00:21:27,000
你最终写出来的文本里面

607
00:21:27,000 --> 00:21:31,000
你是看不到任何嗯

608
00:21:31,000 --> 00:21:34,000
移动光标或者修改的痕迹的对不对

609
00:21:34,000 --> 00:21:36,000
对因为那个是撰写的过程嘛

610
00:21:36,000 --> 00:21:37,000
对

611
00:21:37,000 --> 00:21:38,000
跟最终的产品是没有关系的

612
00:21:38,000 --> 00:21:41,000
也就是说当我们在写一篇文章的时候

613
00:21:41,000 --> 00:21:43,000
我们按下一些键的时候

614
00:21:43,000 --> 00:21:46,000
所达成的目的

615
00:21:46,000 --> 00:21:51,000
是让这些键所代表的字符成为最终文章的一部分

616
00:21:51,000 --> 00:21:52,000
这是一种状态

617
00:21:52,000 --> 00:21:53,000
嗯

618
00:21:53,000 --> 00:21:54,000
而另一种状态呢

619
00:21:54,000 --> 00:21:58,000
比如说我们按方向键或者是按 page up page down

620
00:21:58,000 --> 00:22:00,000
那是按 home end 的时候

621
00:22:00,000 --> 00:22:01,000
嗯

622
00:22:01,000 --> 00:22:08,000
意图在于去改变我们刚刚以第一种状态所写下的文章

623
00:22:08,000 --> 00:22:11,000
这是第二种状态

624
00:22:11,000 --> 00:22:17,000
也就是说我们其实在写文章的时候已经在两种状态之间切换来切换去的

625
00:22:17,000 --> 00:22:21,000
只不过在如果你没有意识到这一点的话

626
00:22:21,000 --> 00:22:24,000
在你看来两者其实都是在按键

627
00:22:24,000 --> 00:22:25,000
只不过有些键做这种事情

628
00:22:25,000 --> 00:22:27,000
有些键做那种事情而已

629
00:22:27,000 --> 00:22:33,000
那么 vim 他的难点或者说他所抽象出来的一套概念就是

630
00:22:33,000 --> 00:22:35,000
嗯

631
00:22:35,000 --> 00:22:37,000
既然你有两种状态

632
00:22:37,000 --> 00:22:39,000
那我就明确定义两种状态好了

633
00:22:39,000 --> 00:22:43,000
那么 vim 就明确的区分出了两种

634
00:22:43,000 --> 00:22:45,000
或者说严格意义上是三种模式

635
00:22:45,000 --> 00:22:46,000
嗯

636
00:22:46,000 --> 00:22:47,000
在其中一种模式下

637
00:22:47,000 --> 00:22:49,000
你所写的一切

638
00:22:49,000 --> 00:22:50,000
内容

639
00:22:50,000 --> 00:22:52,000
你在键盘上敲入的一些内容

640
00:22:52,000 --> 00:22:54,000
都会成为成层正宫

641
00:22:54,000 --> 00:22:55,000
或者说都会成为

642
00:22:55,000 --> 00:22:58,000
最终出现在文档之中的文字

643
00:22:58,000 --> 00:22:58,000
嗯

644
00:22:58,000 --> 00:23:01,000
而在另外一种模式之下呢

645
00:23:01,000 --> 00:23:02,000
呃

646
00:23:02,000 --> 00:23:04,000
你可以告诉编辑器你想要干什么

647
00:23:04,000 --> 00:23:07,000
比如说编辑器我想要删掉我

648
00:23:07,000 --> 00:23:08,000
写下来

649
00:23:08,000 --> 00:23:11,000
我光处于我光标右侧的三个单词

650
00:23:11,000 --> 00:23:11,000
嗯

651
00:23:11,000 --> 00:23:13,000
或者说编辑器我想要删掉我

652
00:23:13,000 --> 00:23:15,000
现在这一行

653
00:23:15,000 --> 00:23:17,000
以及上面那一行

654
00:23:17,000 --> 00:23:19,000
以及在上面那一行的

655
00:23:19,000 --> 00:23:20,000
呃

656
00:23:20,000 --> 00:23:21,000
刚刚敲入书的代码

657
00:23:21,000 --> 00:23:23,000
或者说编辑器我想要

658
00:23:23,000 --> 00:23:24,000
呃

659
00:23:24,000 --> 00:23:26,000
让现在的

660
00:23:26,000 --> 00:23:28,000
用双引号引起来的这句话

661
00:23:28,000 --> 00:23:30,000
改变成单引号

662
00:23:30,000 --> 00:23:30,000
对

663
00:23:30,000 --> 00:23:31,000
诸如此类

664
00:23:31,000 --> 00:23:33,000
那么这种模式呢

665
00:23:33,000 --> 00:23:34,000
叫做普通模式

666
00:23:34,000 --> 00:23:36,000
然后还有第三种模式

667
00:23:36,000 --> 00:23:37,000
叫做命令模式

668
00:23:37,000 --> 00:23:39,000
但是它目前来说不是很重要

669
00:23:39,000 --> 00:23:40,000
我们

670
00:23:40,000 --> 00:23:41,000
就是比较

671
00:23:41,000 --> 00:23:43,000
比较重大的难点

672
00:23:43,000 --> 00:23:44,000
对于

673
00:23:44,000 --> 00:23:45,000
VIME 的初学者来说

674
00:23:45,000 --> 00:23:46,000
就是

675
00:23:46,000 --> 00:23:48,000
为什么要出现

676
00:23:48,000 --> 00:23:50,000
普通模式和编辑模式之间的区别

677
00:23:50,000 --> 00:23:51,000
嗯

678
00:23:51,000 --> 00:23:52,000
对

679
00:23:52,000 --> 00:23:53,000
那么

680
00:23:53,000 --> 00:23:55,000
反过来想

681
00:23:55,000 --> 00:23:56,000
嗯

682
00:23:56,000 --> 00:23:59,000
如果你能适应这一点的话

683
00:23:59,000 --> 00:24:00,000
那么

684
00:24:00,000 --> 00:24:02,000
在普通模式下

685
00:24:02,000 --> 00:24:04,000
你可以以非常快的速度

686
00:24:04,000 --> 00:24:07,000
以一种非常特别的

687
00:24:07,000 --> 00:24:08,000
呃

688
00:24:08,000 --> 00:24:08,000
语言

689
00:24:08,000 --> 00:24:10,000
就是加引号的语言

690
00:24:10,000 --> 00:24:11,000
来告诉 VIME

691
00:24:11,000 --> 00:24:12,000
你想要干什么

692
00:24:12,000 --> 00:24:14,000
然后 VIME 可以很快的替你完成这些事情

693
00:24:14,000 --> 00:24:15,000
比如说

694
00:24:15,000 --> 00:24:17,000
假如说你换用别的编辑器

695
00:24:17,000 --> 00:24:18,000
比如说用 notepad

696
00:24:18,000 --> 00:24:21,000
然后你要删掉接下来的三个单词

697
00:24:21,000 --> 00:24:22,000
你可能是

698
00:24:22,000 --> 00:24:23,000
你可能会怎么做呢

699
00:24:23,000 --> 00:24:25,000
按住 delete 键不放

700
00:24:25,000 --> 00:24:26,000
嗯

701
00:24:26,000 --> 00:24:27,000
或者是按住 shift

702
00:24:27,000 --> 00:24:28,000
选中三个单词

703
00:24:28,000 --> 00:24:30,000
然后按一次 delete 键

704
00:24:30,000 --> 00:24:30,000
对

705
00:24:30,000 --> 00:24:34,000
但是在 VIME 的模式之下

706
00:24:34,000 --> 00:24:35,000
你只需要告诉编辑器说

707
00:24:35,000 --> 00:24:37,000
删除三个单词

708
00:24:37,000 --> 00:24:38,000
对

709
00:24:38,000 --> 00:24:39,000
D 3 W

710
00:24:39,000 --> 00:24:40,000
对

711
00:24:40,000 --> 00:24:41,000
就是你按 D 键

712
00:24:41,000 --> 00:24:42,000
然后按三键

713
00:24:42,000 --> 00:24:42,000
再按 W 键

714
00:24:42,000 --> 00:24:44,000
也就是 delete 3 words

715
00:24:44,000 --> 00:24:44,000
对

716
00:24:44,000 --> 00:24:47,000
然后 VIME 就会递你删掉

717
00:24:47,000 --> 00:24:48,000
光标右侧的三个单词

718
00:24:48,000 --> 00:24:50,000
所以这里就是有一个

719
00:24:50,000 --> 00:24:51,000
刚才讲的那个

720
00:24:51,000 --> 00:24:53,000
所以这个 VIME 的操作语言

721
00:24:53,000 --> 00:24:55,000
就是我们刚才看到这个

722
00:24:55,000 --> 00:24:56,000
它是有一个所谓的

723
00:24:56,000 --> 00:24:57,000
呃

724
00:24:57,000 --> 00:24:57,000
就动作

725
00:24:57,000 --> 00:24:58,000
然后

726
00:24:58,000 --> 00:25:00,000
量词

727
00:25:00,000 --> 00:25:01,000
量词

728
00:25:01,000 --> 00:25:03,000
然后再加这个所谓宾语的结构嘛

729
00:25:03,000 --> 00:25:04,000
就是一个简单的

730
00:25:04,000 --> 00:25:05,000
比较简单的

731
00:25:05,000 --> 00:25:07,000
当然主语默认就是你自己

732
00:25:07,000 --> 00:25:08,000
这个不用讲了

733
00:25:08,000 --> 00:25:08,000
对

734
00:25:08,000 --> 00:25:10,000
呃

735
00:25:10,000 --> 00:25:11,000
也是正是因为这套语言

736
00:25:11,000 --> 00:25:13,000
使得 VIME 在

737
00:25:13,000 --> 00:25:14,000
其实在我们这种

738
00:25:14,000 --> 00:25:16,000
铁开粉丝的角度看

739
00:25:16,000 --> 00:25:18,000
它的编辑的效率是非常高的

740
00:25:18,000 --> 00:25:19,000
因为刚才你讲

741
00:25:19,000 --> 00:25:19,000
呃

742
00:25:19,000 --> 00:25:20,000
那个问题其实没有回答

743
00:25:20,000 --> 00:25:22,000
就是为什么 VIME 会区分

744
00:25:22,000 --> 00:25:23,000
这个所谓的呃

745
00:25:23,000 --> 00:25:24,000
这个编辑

746
00:25:24,000 --> 00:25:25,000
或者叫做

747
00:25:25,000 --> 00:25:26,000
专业的数据叫做

748
00:25:26,000 --> 00:25:27,000
插入吗

749
00:25:27,000 --> 00:25:27,000
什么

750
00:25:27,000 --> 00:25:28,000
insert mode

751
00:25:28,000 --> 00:25:29,000
和这个呃

752
00:25:29,000 --> 00:25:30,000
命令

753
00:25:30,000 --> 00:25:31,000
就刚才讲的

754
00:25:31,000 --> 00:25:31,000
这个在

755
00:25:31,000 --> 00:25:33,000
专业数据叫做

756
00:25:33,000 --> 00:25:34,000
normal mode

757
00:25:34,000 --> 00:25:35,000
普通模式

758
00:25:35,000 --> 00:25:36,000
呃

759
00:25:36,000 --> 00:25:37,000
其实我觉得这里有个

760
00:25:37,000 --> 00:25:38,000
呃

761
00:25:38,000 --> 00:25:39,000
上次来跟 Lawrence

762
00:25:39,000 --> 00:25:40,000
讨论这个问题啊

763
00:25:40,000 --> 00:25:40,000
就是说

764
00:25:40,000 --> 00:25:42,000
写程序和写

765
00:25:42,000 --> 00:25:44,000
普通的文章

766
00:25:44,000 --> 00:25:46,000
有一个很大的区别

767
00:25:46,000 --> 00:25:46,000
我觉得就是

768
00:25:46,000 --> 00:25:48,000
可能写程序的时候

769
00:25:48,000 --> 00:25:49,000
你更多的时候

770
00:25:49,000 --> 00:25:50,000
不是在真的在写

771
00:25:50,000 --> 00:25:51,000
而是那时候在读

772
00:25:51,000 --> 00:25:52,000
你之前写过的程序

773
00:25:52,000 --> 00:25:54,000
然后再做一些呃

774
00:25:54,000 --> 00:25:56,000
轻度的修改

775
00:25:56,000 --> 00:25:57,000
对

776
00:25:57,000 --> 00:25:59,000
或者说写程序的 80%的时间

777
00:25:59,000 --> 00:26:00,000
是在改

778
00:26:00,000 --> 00:26:00,000
对

779
00:26:00,000 --> 00:26:01,000
是在读

780
00:26:01,000 --> 00:26:02,000
是在不停的调试

781
00:26:02,000 --> 00:26:05,000
是在不停的更正你脑海中

782
00:26:05,000 --> 00:26:06,000
之中的这个运算模型

783
00:26:06,000 --> 00:26:07,000
对

784
00:26:07,000 --> 00:26:08,000
不过这样说其实也不太对

785
00:26:08,000 --> 00:26:09,000
因为我知道很多文章

786
00:26:09,000 --> 00:26:11,000
写出来也是要经常改的

787
00:26:11,000 --> 00:26:11,000
但是

788
00:26:11,000 --> 00:26:12,000
但是

789
00:26:12,000 --> 00:26:12,000
对

790
00:26:42,000 --> 00:26:43,000
对

791
00:26:43,000 --> 00:26:44,000
并不是真的

792
00:26:44,000 --> 00:26:46,000
你每次都在从头到尾去

793
00:26:46,000 --> 00:26:47,000
叫做 write from scratch

794
00:26:47,000 --> 00:26:49,000
重新从头到尾

795
00:26:49,000 --> 00:26:50,000
完完全全的写一个新的程序出来

796
00:26:50,000 --> 00:26:51,000
这种事情是

797
00:26:51,000 --> 00:26:53,000
这种时候是相当相当少的

798
00:26:53,000 --> 00:26:54,000
对

799
00:26:54,000 --> 00:26:55,000
所以

800
00:26:55,000 --> 00:26:57,000
所以就是为什么在 VIM 里面

801
00:26:57,000 --> 00:26:59,000
你如果不做任何处理

802
00:26:59,000 --> 00:27:00,000
不做任何特别的配置的话

803
00:27:00,000 --> 00:27:01,000
你进到里面去

804
00:27:01,000 --> 00:27:03,000
他默认的那个模式

805
00:27:03,000 --> 00:27:04,000
叫做是那个

806
00:27:04,000 --> 00:27:06,000
刚刚你讲的这个所谓的命令模式

807
00:27:06,000 --> 00:27:06,000
对

808
00:27:06,000 --> 00:27:07,000
就是 normal 模式

809
00:27:07,000 --> 00:27:08,000
普通模式

810
00:27:08,000 --> 00:27:08,000
对

811
00:27:08,000 --> 00:27:08,000
普通模式

812
00:27:08,000 --> 00:27:09,000
而且

813
00:27:09,000 --> 00:27:10,000
对于一个

814
00:27:10,000 --> 00:27:14,000
对于一个日常的 VIM 的用户来讲

815
00:27:14,000 --> 00:27:16,000
他也应该把绝大多数的时间

816
00:27:16,000 --> 00:27:19,000
花在这个普通模式里面

817
00:27:19,000 --> 00:27:20,000
对

818
00:27:20,000 --> 00:27:21,000
那反过来就是

819
00:27:21,000 --> 00:27:22,000
在 emax 下面

820
00:27:22,000 --> 00:27:26,000
其实也可以意识到

821
00:27:26,000 --> 00:27:28,000
当你打开 emax 之后

822
00:27:28,000 --> 00:27:30,000
你基本上你会下意识地按住 control

823
00:27:30,000 --> 00:27:32,000
然后去做一些事情

824
00:27:32,000 --> 00:27:32,000
就是

825
00:27:32,000 --> 00:27:37,000
在你不会一上来就写什么东西

826
00:27:37,000 --> 00:27:39,000
在这个

827
00:27:39,000 --> 00:27:40,000
至少你要做的一件事情

828
00:27:40,000 --> 00:27:41,000
是移动光标

829
00:27:41,000 --> 00:27:42,000
把光标插入到

830
00:27:42,000 --> 00:27:45,000
移动到你想要插入文字的部分

831
00:27:45,000 --> 00:27:46,000
对

832
00:27:46,000 --> 00:27:47,000
然后才会开始编辑吧

833
00:27:47,000 --> 00:27:48,000
对

834
00:27:48,000 --> 00:27:48,000
对

835
00:27:48,000 --> 00:27:48,000
对

836
00:27:48,000 --> 00:27:49,000
那么在

837
00:27:49,000 --> 00:27:52,000
在 emax 或者说任何一种其他

838
00:27:52,000 --> 00:27:53,000
不区分

839
00:27:53,000 --> 00:27:57,000
不明确区分模态的编辑器里面

840
00:27:57,000 --> 00:27:58,000
在

841
00:27:58,000 --> 00:28:00,000
你还是会有大量的时间

842
00:28:00,000 --> 00:28:03,000
花在这种移动光标

843
00:28:03,000 --> 00:28:04,000
或者是删除某个单词

844
00:28:04,000 --> 00:28:07,000
或者删除某一行的这种需求之下

845
00:28:07,000 --> 00:28:15,000
而 VIM 的出发点或者它的设计要素就是把这样一个抽象的级别把它实体化

846
00:28:15,000 --> 00:28:22,000
把它你可以明确的告诉编辑器我现在要切换到那种模式

847
00:28:22,000 --> 00:28:24,000
然后你可以一直保留在那种模式之下

848
00:28:24,000 --> 00:28:24,000
对

849
00:28:24,000 --> 00:28:26,000
或者说你这么理解

850
00:28:26,000 --> 00:28:29,000
就是在 emax 里面你采用快捷键的时候

851
00:28:29,000 --> 00:28:33,000
其实你是已经在短暂的时间内进

852
00:28:33,000 --> 00:28:35,000
就是在快捷键按下这个过程中

853
00:28:35,000 --> 00:28:38,000
你已经在极短的时间内进入了某一种模式里面

854
00:28:38,000 --> 00:28:41,000
然后再在那个模式去进行一个制定的操作

855
00:28:41,000 --> 00:28:47,000
而此时你并没有在真正的插入或者是撰写某一个文档

856
00:28:47,000 --> 00:28:48,000
对

857
00:28:48,000 --> 00:28:54,000
而 VIM 的所谓编辑模式和命令模式之间的差别就在于

858
00:28:54,000 --> 00:28:58,000
就好像就相当于你找了什么东西

859
00:28:58,000 --> 00:29:00,000
找了本书压住了你的 control 键

860
00:29:00,000 --> 00:29:02,000
这个时候对

861
00:29:02,000 --> 00:29:04,000
这个时候你按键盘上的任何一个字母

862
00:29:04,000 --> 00:29:06,000
你都是在执行快捷键

863
00:29:06,000 --> 00:29:06,000
对

864
00:29:06,000 --> 00:29:11,000
你都是在做一种给出命令

865
00:29:11,000 --> 00:29:14,000
而不是书写字母的行为

866
00:29:14,000 --> 00:29:17,000
也就是比如说 F

867
00:29:17,000 --> 00:29:20,000
那假如你的 control 键一直被按住了

868
00:29:20,000 --> 00:29:22,000
那你撬一下 F

869
00:29:22,000 --> 00:29:25,000
你所要做的事情是搜寻什么东西

870
00:29:25,000 --> 00:29:26,000
那么在 VIM 里面

871
00:29:26,000 --> 00:29:28,000
当你切换到普通模式之后

872
00:29:28,000 --> 00:29:30,000
你只要按一下 F 键

873
00:29:30,000 --> 00:29:34,000
你就可以去找你要找的某一个字符

874
00:29:34,000 --> 00:29:37,000
不过有一个可能在

875
00:29:37,000 --> 00:29:40,000
就是在术语上有一个可能比较容易混响的地方

876
00:29:40,000 --> 00:29:43,000
就其实在 emax 也有 mode 这个概念

877
00:29:43,000 --> 00:29:45,000
对

878
00:29:45,000 --> 00:29:49,000
但 emax mode 指的是完全不一样的什么东西

879
00:29:49,000 --> 00:29:50,000
比如说

880
00:29:50,000 --> 00:29:57,000
比如说 emax 它打开一个 latech 文件

881
00:29:57,000 --> 00:29:58,000
它会进入所谓 latech mode

882
00:29:58,000 --> 00:30:01,000
那这个 mode 其实就相当于

883
00:30:01,000 --> 00:30:04,000
如果你是一个 VIM 使用者

884
00:30:04,000 --> 00:30:05,000
你对 emax 不是很熟

885
00:30:05,000 --> 00:30:06,000
我们两个对 emax 都不是很熟

886
00:30:06,000 --> 00:30:10,000
而 emax mode 其实对于 VIM 来说

887
00:30:10,000 --> 00:30:13,000
就相当于 VIM 的 file type

888
00:30:13,000 --> 00:30:18,000
就是针对某一种特别的文件类型

889
00:30:18,000 --> 00:30:21,000
或者说针对某一种特别的编辑状态

890
00:30:21,000 --> 00:30:22,000
而激活一种模式

891
00:30:22,000 --> 00:30:28,000
而这个跟 VIM 的所谓 mode 其实是完全不同的两个概念

892
00:30:28,000 --> 00:30:29,000
对

893
00:30:29,000 --> 00:30:32,000
所以就是从刚才讲的就是 emax 的 mode

894
00:30:32,000 --> 00:30:39,000
其实大约略等同于 emax 的 VIM 的 ft plugin 这个东西

895
00:30:39,000 --> 00:30:39,000
对

896
00:30:39,000 --> 00:30:41,000
file type plugin

897
00:30:41,000 --> 00:30:47,000
然后对我们是接着说 VIM 的问题呢

898
00:30:47,000 --> 00:30:53,000
还是就是每一个点都尽量对照两种变迹器来说

899
00:30:53,000 --> 00:30:55,000
这还是对照一下吧

900
00:30:55,000 --> 00:30:57,000
因为这个本来就是回顾这个圣战嘛

901
00:30:57,000 --> 00:31:00,000
我们还是要把最基本的那些要点打给理一下

902
00:31:00,000 --> 00:31:01,000
对

903
00:31:01,000 --> 00:31:07,000
那其实那这种模态的区分也就导致了 VIM 如此难学

904
00:31:07,000 --> 00:31:12,000
或者说很多人会觉得 VIM 是一种非常非常奇怪的变迹器的一个原因之一

905
00:31:12,000 --> 00:31:12,000
对

906
00:31:12,000 --> 00:31:12,000
因为他觉得

907
00:31:12,000 --> 00:31:14,000
我觉得他是不够

908
00:31:14,000 --> 00:31:16,000
或者很多人觉得他不够直观嘛

909
00:31:16,000 --> 00:31:17,000
就是因为这个模态

910
00:31:17,000 --> 00:31:21,000
我想不住在生活中有什么样的地方是有模态这个概念

911
00:31:21,000 --> 00:31:23,000
对

912
00:31:23,000 --> 00:31:26,000
因为键盘其实是一个非常奇怪的

913
00:31:26,000 --> 00:31:28,000
奇怪的输入工具

914
00:31:28,000 --> 00:31:29,000
如果要我说的话

915
00:31:29,000 --> 00:31:34,000
如果你把键盘上所有的功能键拿掉

916
00:31:34,000 --> 00:31:40,000
Ctrl Alt Command Escape 乃至所有的 F 键都拿掉的话

917
00:31:40,000 --> 00:31:47,000
你要怎样才能改变公标的位置呢

918
00:31:47,000 --> 00:31:50,000
就方向键要拿掉

919
00:31:50,000 --> 00:31:52,000
或者说你要怎样去查找

920
00:31:52,000 --> 00:31:53,000
没有这种功能键

921
00:31:53,000 --> 00:31:56,000
只有这个字母键或者字符号键的时候

922
00:31:56,000 --> 00:31:59,000
如果你的键盘只能插入的话

923
00:31:59,000 --> 00:32:00,000
你应该怎样修改

924
00:32:00,000 --> 00:32:03,000
你的那你屏幕上的内容呢

925
00:32:03,000 --> 00:32:09,000
就如果就假如说其中一种解决方式是 Touchscreen

926
00:32:09,000 --> 00:32:12,000
那么我们是不是可以理解为在

927
00:32:12,000 --> 00:32:15,000
或者鼠标嘛

928
00:32:15,000 --> 00:32:17,000
用鼠标去移动的时候

929
00:32:17,000 --> 00:32:20,000
你是在进入一种另外一种模态里面

930
00:32:20,000 --> 00:32:22,000
对或者说你面对的是一台

931
00:32:22,000 --> 00:32:24,000
是一步是一个 Touchscreen

932
00:32:24,000 --> 00:32:27,000
那么你可以用手指去点你要改的那个文字

933
00:32:27,000 --> 00:32:28,000
然后选中它

934
00:32:28,000 --> 00:32:31,000
然后再在你的键盘上面改

935
00:32:31,000 --> 00:32:33,000
那么这一种情况是不是存在了

936
00:32:33,000 --> 00:32:34,000
其实已经存在了

937
00:32:34,000 --> 00:32:37,000
就是你在你在你的手机上去修改什么东西的时候

938
00:32:37,000 --> 00:32:41,000
你要选中一个文字

939
00:32:41,000 --> 00:32:43,000
你所做的事情并不是按住 Shift 键

940
00:32:43,000 --> 00:32:44,000
然后选方向键

941
00:32:44,000 --> 00:32:47,000
因为手机键盘上反正也没有方向键

942
00:32:47,000 --> 00:32:47,000
对吧

943
00:32:47,000 --> 00:32:49,000
对

944
00:32:49,000 --> 00:32:51,000
你要用手去点那个字母

945
00:32:51,000 --> 00:32:52,000
按住松开

946
00:32:52,000 --> 00:32:54,000
然后这个单词被选中

947
00:32:54,000 --> 00:32:58,000
那其实在你移动手指到键盘上

948
00:32:58,000 --> 00:33:02,000
和你移动手指到你要选的那个单词之间

949
00:33:02,000 --> 00:33:03,000
你已经在做这种切换了

950
00:33:03,000 --> 00:33:04,000
只不过你不会

951
00:33:04,000 --> 00:33:07,000
你会觉得这种切换非常自然

952
00:33:07,000 --> 00:33:10,000
但是当一个编辑器跳出来告诉你说

953
00:33:10,000 --> 00:33:10,000
哦

954
00:33:10,000 --> 00:33:12,000
你要明确的告诉我

955
00:33:12,000 --> 00:33:14,000
你要处于哪种状态之中的时候

956
00:33:14,000 --> 00:33:16,000
你可能就不习惯了

957
00:33:16,000 --> 00:33:17,000
对

958
00:33:17,000 --> 00:33:18,000
不过就像你说的

959
00:33:18,000 --> 00:33:20,000
现实生活中好像是没有一种

960
00:33:20,000 --> 00:33:27,000
没有一种非常明显的会切换状态的

961
00:33:27,000 --> 00:33:32,000
我非能想到的例子就是游戏

962
00:33:32,000 --> 00:33:32,000
比如说

963
00:33:32,000 --> 00:33:35,000
比如说有些游戏里面

964
00:33:35,000 --> 00:33:38,000
早期的命令征服

965
00:33:38,000 --> 00:33:41,000
你在战略地图上可以选择

966
00:33:41,000 --> 00:33:43,000
接下来要打北非的什么地方

967
00:33:43,000 --> 00:33:47,000
而你选择之后才开始关卡

968
00:33:47,000 --> 00:33:48,000
在这个关卡里面

969
00:33:48,000 --> 00:33:51,000
你才会去真正的进行这场战争

970
00:33:51,000 --> 00:33:55,000
也许这是一个可以类比的模式

971
00:33:55,000 --> 00:33:57,000
但其实还是差的挺

972
00:33:57,000 --> 00:33:58,000
对

973
00:33:58,000 --> 00:34:00,000
我就觉得这个是模态这个概念

974
00:34:00,000 --> 00:34:04,000
始终对于初学者来讲很大的门槛

975
00:34:04,000 --> 00:34:09,000
就是因为他没有在现实生活中有一个可以所谓可以隐喻的一个东西

976
00:34:09,000 --> 00:34:10,000
对

977
00:34:10,000 --> 00:34:17,000
但其实这也就是为什么很多人说 VI 是一种比较社群化的编辑器

978
00:34:17,000 --> 00:34:21,000
就是如果你身边没有人在用 VI

979
00:34:21,000 --> 00:34:21,000
然后你

980
00:34:21,000 --> 00:34:22,000
很难入门的

981
00:34:22,000 --> 00:34:24,000
你也很难入门

982
00:34:24,000 --> 00:34:24,000
对

983
00:34:24,000 --> 00:34:31,000
基本上大部分学 VI 的人都是在某种机缘巧合之下看到了某一个人在用

984
00:34:31,000 --> 00:34:36,000
发现这个人修改文章的速度像飞一样

985
00:34:36,000 --> 00:34:39,000
然后会惊讶的说这是什么变形性

986
00:34:39,000 --> 00:34:43,000
然后那个人说用神圣语言用神圣的呛的说这是 VIM

987
00:34:43,000 --> 00:34:45,000
然后说我要学

988
00:34:45,000 --> 00:34:48,000
对然后才会渐渐入门

989
00:34:48,000 --> 00:34:57,000
所以其实大家我们也看到了 VIM 这种方式其实非常叫做什么不 newbie friendly

990
00:34:57,000 --> 00:34:58,000
对

991
00:34:58,000 --> 00:35:02,000
也有一些尝试在改变这么一个一个状况

992
00:35:02,000 --> 00:35:06,000
就是先所谓的先把你骗进来再讲

993
00:35:06,000 --> 00:35:14,000
所以现在有那个特别是在我记得在就现在 VIM 的正式的版本里面有一个叫什么就什么初学者模式吧

994
00:35:14,000 --> 00:35:21,000
就他默认是禁用掉这个模态的这个行为的就是你进去始终都是编辑状态

995
00:35:21,000 --> 00:35:25,000
然后但是我自己是没有没有没有用过那种方式我也不知道

996
00:35:25,000 --> 00:35:30,000
我也对我们都我们都太晚了没有赶上这种 user friendly 的时代

997
00:35:30,000 --> 00:35:33,000
对就这个就这个就好像说你

998
00:35:33,000 --> 00:35:36,000
就我不知道那个的意义何在啊

999
00:35:36,000 --> 00:35:42,000
当你可以把初学者领进来但是你并没有让他认识到这个模态的本质在哪里

1000
00:35:42,000 --> 00:35:44,000
其实好像也没有什么太大用处

1001
00:35:44,000 --> 00:35:47,000
就是这样变得和另外一个普通编辑也没有什么区别了

1002
00:35:47,000 --> 00:35:48,000
嗯

1003
00:35:48,000 --> 00:35:51,000
那你说起来你是怎么开始用 VR

1004
00:35:51,000 --> 00:35:53,000
这个问题

1005
00:35:53,000 --> 00:35:56,000
我已经不太记得了

1006
00:35:56,000 --> 00:35:59,000
我是在上大学的时候

1007
00:35:59,000 --> 00:36:03,000
在开始学用这个 VIM

1008
00:36:03,000 --> 00:36:04,000
然后那个时候很奇怪

1009
00:36:04,000 --> 00:36:07,000
因为我因为我大学是读商科的嘛

1010
00:36:07,000 --> 00:36:09,000
就是也没有什么编程的需求

1011
00:36:09,000 --> 00:36:12,000
但我在想不出我为什么会在学他

1012
00:36:12,000 --> 00:36:14,000
嗯

1013
00:36:14,000 --> 00:36:17,000
你有看到你是像我说的那样看到有人在用

1014
00:36:17,000 --> 00:36:20,000
然后被他勾引入门的吗

1015
00:36:20,000 --> 00:36:24,000
应该是我有看到过某一个什么书或者某一个人怎么样在用

1016
00:36:24,000 --> 00:36:27,000
但是我一下想不起来这个这个过程是怎么一回事

1017
00:36:27,000 --> 00:36:33,000
不过不过可能跟这个可能跟这个什么 personality 的这些有一点关系

1018
00:36:33,000 --> 00:36:35,000
就在相当长一段时间内

1019
00:36:35,000 --> 00:36:38,000
我这个有一个人格上的缺陷就是

1020
00:36:38,000 --> 00:36:44,000
我会去去如果有一堆同类或者做同样的事情的东西

1021
00:36:44,000 --> 00:36:45,000
我一定要选出一个最好的

1022
00:36:45,000 --> 00:36:50,000
就比如说现在你给我摆

1023
00:36:50,000 --> 00:36:51,000
如果现在我啥不知道

1024
00:36:51,000 --> 00:36:53,000
你现在摆了两个编辑这么面前

1025
00:36:53,000 --> 00:36:54,000
我一定要比这两个编辑器

1026
00:36:54,000 --> 00:36:55,000
那个啊

1027
00:36:55,000 --> 00:36:57,000
但这个最好是就带引号的

1028
00:36:57,000 --> 00:36:59,000
就是对于个人来讲我觉得是最好的

1029
00:36:59,000 --> 00:37:00,000
然后我就是

1030
00:37:00,000 --> 00:37:02,000
就是你一定要找出一个适合你自己的

1031
00:37:02,000 --> 00:37:05,000
对我一定要分出来一个分出来一个

1032
00:37:05,000 --> 00:37:08,000
我觉得这个这个比那个更加适合我

1033
00:37:08,000 --> 00:37:09,000
或者就在我地里面这个是更好的

1034
00:37:09,000 --> 00:37:10,000
啊

1035
00:37:10,000 --> 00:37:12,000
当时就出现这么一个状态

1036
00:37:12,000 --> 00:37:16,000
就是其实我是在 VIM 和 MIMAC 里面就是都还摇摆了一段时间

1037
00:37:16,000 --> 00:37:18,000
后来觉得感觉 VIM 这种方式比较比较好

1038
00:37:18,000 --> 00:37:22,000
然后我觉得就后来就选了在在用 VIM

1039
00:37:22,000 --> 00:37:25,000
现在就算是一个所谓的什么终极用户

1040
00:37:25,000 --> 00:37:30,000
所以你是在有对比的前提之下习惯了 VIM

1041
00:37:30,000 --> 00:37:32,000
或者说选择了 VIM

1042
00:37:32,000 --> 00:37:33,000
嗯

1043
00:37:33,000 --> 00:37:33,000
对

1044
00:37:33,000 --> 00:37:34,000
OK

1045
00:37:34,000 --> 00:37:35,000
这个哦

1046
00:37:35,000 --> 00:37:37,000
我的经历几乎不一样

1047
00:37:37,000 --> 00:37:39,000
就是呃

1048
00:37:39,000 --> 00:37:42,000
我在最开始接触到 VIA 的时候

1049
00:37:42,000 --> 00:37:44,000
完全不知道 MIMAC 是什么

1050
00:37:44,000 --> 00:37:45,000
OK

1051
00:37:45,000 --> 00:37:48,000
所以你是在一个无知的情况下选择了 VIM

1052
00:37:48,000 --> 00:37:49,000
对

1053
00:37:49,000 --> 00:37:55,000
我记得那是我就是可能初中毕业还是什么时候

1054
00:37:55,000 --> 00:37:56,000
就又暴露年龄了

1055
00:37:56,000 --> 00:37:59,000
你又可以说你你你你眼睛了

1056
00:37:59,000 --> 00:37:59,000
对

1057
00:37:59,000 --> 00:38:01,000
反正就是在中学

1058
00:38:01,000 --> 00:38:02,000
但我还是一个中学生的时候

1059
00:38:02,000 --> 00:38:04,000
我买了一本呃

1060
00:38:04,000 --> 00:38:08,000
UNIX 呃命令手册之类这么一本书

1061
00:38:08,000 --> 00:38:13,000
因为那个时候装了 Windows 和 Linux 双系统

1062
00:38:13,000 --> 00:38:14,000
那个是 Linux 刚刚进入中国

1063
00:38:14,000 --> 00:38:16,000
就我记得装的是什么

1064
00:38:16,000 --> 00:38:17,000
slackware 还是什么

1065
00:38:17,000 --> 00:38:21,000
就是现在几乎没有在碰的一个发行版

1066
00:38:21,000 --> 00:38:21,000
嗯

1067
00:38:21,000 --> 00:38:22,000
嗯

1068
00:38:22,000 --> 00:38:24,000
然后迫不及待去学命令

1069
00:38:24,000 --> 00:38:25,000
嗯

1070
00:38:25,000 --> 00:38:26,000
嗯

1071
00:38:26,000 --> 00:38:30,000
在这本命令手册里面有那么

1072
00:38:30,000 --> 00:38:33,000
别的命令大概就是那么四五行五六行

1073
00:38:33,000 --> 00:38:33,000
嗯

1074
00:38:33,000 --> 00:38:35,000
然后讲这个命令能干嘛

1075
00:38:35,000 --> 00:38:36,000
然后给你一两个例子

1076
00:38:36,000 --> 00:38:37,000
嗯

1077
00:38:37,000 --> 00:38:38,000
而 VI 的

1078
00:38:38,000 --> 00:38:40,000
而轮到 VI 这个命令的时候

1079
00:38:40,000 --> 00:38:43,000
这个这个命令手册大概写了一本书

1080
00:38:43,000 --> 00:38:44,000
四五页

1081
00:38:44,000 --> 00:38:44,000
对

1082
00:38:44,000 --> 00:38:46,000
四五页

1083
00:38:46,000 --> 00:38:47,000
我说 what the hell

1084
00:38:47,000 --> 00:38:48,000
这是什么东西

1085
00:38:48,000 --> 00:38:49,000
它只是一个编线而已

1086
00:38:49,000 --> 00:38:50,000
至于吗

1087
00:38:50,000 --> 00:38:50,000
嗯

1088
00:38:50,000 --> 00:38:52,000
然后呃

1089
00:38:52,000 --> 00:38:52,000
用起来

1090
00:38:52,000 --> 00:38:53,000
用了一段

1091
00:38:53,000 --> 00:38:55,000
就刚开始用的时候也觉得匪夷所思

1092
00:38:55,000 --> 00:38:55,000
但是

1093
00:38:55,000 --> 00:38:58,000
大概过了两三个星期

1094
00:38:58,000 --> 00:39:00,000
有那么一个

1095
00:39:00,000 --> 00:39:02,000
就是所谓的 Urikan moment

1096
00:39:02,000 --> 00:39:03,000
就是啊

1097
00:39:03,000 --> 00:39:04,000
我我明白了

1098
00:39:04,000 --> 00:39:04,000
这么一个

1099
00:39:04,000 --> 00:39:05,000
顿悟

1100
00:39:05,000 --> 00:39:06,000
对

1101
00:39:06,000 --> 00:39:07,000
顿悟了

1102
00:39:07,000 --> 00:39:09,000
然后啊

1103
00:39:09,000 --> 00:39:10,000
也就从此一直用它

1104
00:39:10,000 --> 00:39:11,000
天哪

1105
00:39:11,000 --> 00:39:14,000
你你你初中就在看 Unix 的书

1106
00:39:14,000 --> 00:39:15,000
你当时在哪里

1107
00:39:15,000 --> 00:39:16,000
在天津啊

1108
00:39:16,000 --> 00:39:17,000
OK

1109
00:39:17,000 --> 00:39:18,000
所以大城市还是好

1110
00:39:18,000 --> 00:39:19,000
你看像我们那种

1111
00:39:19,000 --> 00:39:20,000
我家上那种

1112
00:39:20,000 --> 00:39:20,000
不不不

1113
00:39:20,000 --> 00:39:22,000
我是天津城乡几何部的

1114
00:39:22,000 --> 00:39:25,000
那也比我们那种特地的偏远地区要好啊

1115
00:39:25,000 --> 00:39:26,000
好吧

1116
00:39:26,000 --> 00:39:27,000
你太谦虚了

1117
00:39:27,000 --> 00:39:29,000
在那个时候没有互联网

1118
00:39:29,000 --> 00:39:31,000
就基本上所有的发行版

1119
00:39:31,000 --> 00:39:32,000
或者有互联网存在有拨号

1120
00:39:32,000 --> 00:39:34,000
然后有发行版

1121
00:39:34,000 --> 00:39:35,000
Linux 发行版存在

1122
00:39:35,000 --> 00:39:36,000
基本上一定要去

1123
00:39:36,000 --> 00:39:38,000
就类似于武道口

1124
00:39:38,000 --> 00:39:39,000
或者是

1125
00:39:39,000 --> 00:39:41,000
就天津市类似于武道口的地方去逃

1126
00:39:41,000 --> 00:39:42,000
才可以找到的

1127
00:39:42,000 --> 00:39:42,000
OK

1128
00:39:42,000 --> 00:39:44,000
对

1129
00:39:44,000 --> 00:39:46,000
那个时候已经是中文版还是英文版

1130
00:39:46,000 --> 00:39:49,000
那个时候没有中文版的 Linux

1131
00:39:49,000 --> 00:39:51,000
我记得有

1132
00:39:51,000 --> 00:39:52,000
有一个中文版 Linux 叫什么

1133
00:39:52,000 --> 00:39:53,000
红旗 Linux

1134
00:39:53,000 --> 00:39:55,000
对

1135
00:39:55,000 --> 00:39:57,000
确实有这么一个东西

1136
00:39:57,000 --> 00:39:58,000
是有这么一个东西

1137
00:39:58,000 --> 00:39:59,000
好像还在

1138
00:39:59,000 --> 00:40:00,000
好像还在

1139
00:40:00,000 --> 00:40:01,000
真的吗

1140
00:40:01,000 --> 00:40:02,000
好像我上菜

1141
00:40:02,000 --> 00:40:03,000
天津我忘了

1142
00:40:03,000 --> 00:40:05,000
还是已经转型了

1143
00:40:05,000 --> 00:40:05,000
还是什么

1144
00:40:05,000 --> 00:40:06,000
这个我才不太清楚

1145
00:40:06,000 --> 00:40:07,000
我不知道

1146
00:40:07,000 --> 00:40:08,000
对

1147
00:40:08,000 --> 00:40:08,000
但那个时候

1148
00:40:08,000 --> 00:40:09,000
我也

1149
00:40:09,000 --> 00:40:11,000
我可能是出于某种

1150
00:40:11,000 --> 00:40:13,000
因为

1151
00:40:13,000 --> 00:40:15,000
你用过 DOS 吗

1152
00:40:15,000 --> 00:40:16,000
肯定用过

1153
00:40:16,000 --> 00:40:17,000
对啊

1154
00:40:17,000 --> 00:40:19,000
所以你也不是很年轻

1155
00:40:19,000 --> 00:40:20,000
你知道

1156
00:40:20,000 --> 00:40:21,000
真正真正年轻的人认为

1157
00:40:21,000 --> 00:40:24,000
电脑开机就应该自动显示

1158
00:40:24,000 --> 00:40:24,000
那个

1159
00:40:24,000 --> 00:40:26,000
Windows 桌面

1160
00:40:26,000 --> 00:40:27,000
然后和一个指针的

1161
00:40:27,000 --> 00:40:27,000
如果

1162
00:40:27,000 --> 00:40:28,000
那个

1163
00:40:28,000 --> 00:40:29,000
跳出来一个

1164
00:40:29,000 --> 00:40:30,000
C

1165
00:40:30,000 --> 00:40:31,000
帽号

1166
00:40:31,000 --> 00:40:33,000
反鞋杠

1167
00:40:33,000 --> 00:40:34,000
大于号

1168
00:40:34,000 --> 00:40:35,000
然后一闪一闪的光标

1169
00:40:35,000 --> 00:40:36,000
他会觉得电脑坏

1170
00:40:36,000 --> 00:40:37,000
对

1171
00:40:37,000 --> 00:40:38,000
确实

1172
00:40:38,000 --> 00:40:39,000
对大多数来说

1173
00:40:39,000 --> 00:40:40,000
那个时候就是

1174
00:40:40,000 --> 00:40:40,000
啊

1175
00:40:40,000 --> 00:40:41,000
搞不定了

1176
00:40:41,000 --> 00:40:41,000
怎么办

1177
00:40:41,000 --> 00:40:42,000
对

1178
00:40:42,000 --> 00:40:43,000
那么以电脑

1179
00:40:43,000 --> 00:40:46,000
以命令行入门的人来

1180
00:40:46,000 --> 00:40:47,000
就是对于

1181
00:40:47,000 --> 00:40:49,000
命令行时代

1182
00:40:49,000 --> 00:40:50,000
入门电脑的人来说

1183
00:40:50,000 --> 00:40:52,000
好像在学另外一个命令行

1184
00:40:52,000 --> 00:40:53,000
是很自然的事情

1185
00:40:53,000 --> 00:40:54,000
触了一旁同

1186
00:40:54,000 --> 00:40:54,000
我觉得这个

1187
00:40:54,000 --> 00:40:55,000
这个应该是

1188
00:40:55,000 --> 00:40:57,000
但现在好像已经

1189
00:40:57,000 --> 00:40:58,000
已经很难

1190
00:40:58,000 --> 00:41:00,000
你甚至可以找到一种人

1191
00:41:00,000 --> 00:41:02,000
就是他只会用图形化界面

1192
00:41:02,000 --> 00:41:03,000
来编程

1193
00:41:03,000 --> 00:41:03,000
大多数

1194
00:41:03,000 --> 00:41:04,000
如果切换到

1195
00:41:04,000 --> 00:41:05,000
用图形化的方式来编程

1196
00:41:05,000 --> 00:41:07,000
就是在图形

1197
00:41:07,000 --> 00:41:08,000
在一个

1198
00:41:08,000 --> 00:41:09,000
Windows 开发展

1199
00:41:09,000 --> 00:41:10,000
大部分都这样吧

1200
00:41:10,000 --> 00:41:13,000
就首先有一个机和弹的问题

1201
00:41:13,000 --> 00:41:14,000
因为 Windows 上面

1202
00:41:14,000 --> 00:41:15,000
并没有一个好用的

1203
00:41:15,000 --> 00:41:16,000
命令行

1204
00:41:16,000 --> 00:41:17,000
或者是你用了

1205
00:41:17,000 --> 00:41:18,000
命令行也干不了太多事

1206
00:41:18,000 --> 00:41:19,000
但现在还有那个什么

1207
00:41:19,000 --> 00:41:20,000
PowerShell

1208
00:41:20,000 --> 00:41:21,000
那个是另外一回事

1209
00:41:21,000 --> 00:41:22,000
就在相当长一段时间内

1210
00:41:22,000 --> 00:41:23,000
是这样子的

1211
00:41:23,000 --> 00:41:27,000
对

1212
00:41:27,000 --> 00:41:27,000
应该

1213
00:41:27,000 --> 00:41:28,000
或者说

1214
00:41:28,000 --> 00:41:29,000
你不能说

1215
00:41:29,000 --> 00:41:30,000
我觉得你不能说

1216
00:41:30,000 --> 00:41:31,000
就是我不是为

1217
00:41:31,000 --> 00:41:32,000
Windows 程序员证明

1218
00:41:32,000 --> 00:41:33,000
但

1219
00:41:33,000 --> 00:41:34,000
这个

1220
00:41:34,000 --> 00:41:35,000
在这一点上

1221
00:41:35,000 --> 00:41:36,000
也许是因为

1222
00:41:36,000 --> 00:41:37,000
绝大多数人

1223
00:41:37,000 --> 00:41:40,000
在学习编程的时候

1224
00:41:40,000 --> 00:41:41,000
接触到的

1225
00:41:41,000 --> 00:41:43,000
操作系统是 Windows

1226
00:41:43,000 --> 00:41:45,000
你不能因此说

1227
00:41:45,000 --> 00:41:47,000
大多数 Windows 程序员

1228
00:41:47,000 --> 00:41:50,000
都只会在图形界面下编程

1229
00:41:50,000 --> 00:41:51,000
我就说它

1230
00:41:51,000 --> 00:41:52,000
因为 Windows 上没有一个好用的

1231
00:41:52,000 --> 00:41:53,000
命令行界面

1232
00:41:53,000 --> 00:41:54,000
就说

1233
00:41:54,000 --> 00:41:55,000
命令行的这么一个接口

1234
00:41:55,000 --> 00:41:57,000
那你也不能拿来干嘛

1235
00:41:57,000 --> 00:41:58,000
对吧

1236
00:41:58,000 --> 00:41:58,000
OK

1237
00:41:58,000 --> 00:42:00,000
Whatever

1238
00:42:00,000 --> 00:42:02,000
我们这一次

1239
00:42:02,000 --> 00:42:04,000
我们这一次的 Flameboard 主题

1240
00:42:04,000 --> 00:42:05,000
还是编辑系统之战

1241
00:42:05,000 --> 00:42:06,000
而不是操作系统之战

1242
00:42:06,000 --> 00:42:07,000
下次

1243
00:42:07,000 --> 00:42:08,000
对

1244
00:42:08,000 --> 00:42:08,000
下次

1245
00:42:08,000 --> 00:42:10,000
对

1246
00:42:10,000 --> 00:42:12,000
回到 VIM 的

1247
00:42:12,000 --> 00:42:14,000
我们刚才讲了

1248
00:42:14,000 --> 00:42:16,000
VIM 的操作模式

1249
00:42:16,000 --> 00:42:16,000
对吧

1250
00:42:16,000 --> 00:42:16,000
对

1251
00:42:16,000 --> 00:42:19,000
那么除了模态

1252
00:42:19,000 --> 00:42:21,000
编辑模式是一个巨大的门槛之外

1253
00:42:21,000 --> 00:42:22,000
还有什么门槛

1254
00:42:22,000 --> 00:42:24,000
或者说还有什么点

1255
00:42:24,000 --> 00:42:24,000
让你觉得

1256
00:42:24,000 --> 00:42:26,000
或者说你会觉得

1257
00:42:26,000 --> 00:42:28,000
VIM 是非常不平静人的一个地方

1258
00:42:28,000 --> 00:42:29,000
对

1259
00:42:29,000 --> 00:42:29,000
对一种工具

1260
00:42:29,000 --> 00:42:32,000
就是它的那个配置和

1261
00:42:32,000 --> 00:42:34,000
就是所谓的扩展

1262
00:42:34,000 --> 00:42:36,000
就是它有一个叫做语言嘛

1263
00:42:36,000 --> 00:42:37,000
叫 VIM Script

1264
00:42:37,000 --> 00:42:41,000
我觉得这个语言是相当古怪的

1265
00:42:41,000 --> 00:42:42,000
就哪怕以现在的

1266
00:42:42,000 --> 00:42:44,000
不管以现在还是古代的观点

1267
00:42:44,000 --> 00:42:45,000
我觉得它语言

1268
00:42:45,000 --> 00:42:47,000
这门语言都是挺奇怪的

1269
00:42:47,000 --> 00:42:48,000
对

1270
00:42:48,000 --> 00:42:49,000
最简单的

1271
00:42:49,000 --> 00:42:50,000
最简单的

1272
00:42:50,000 --> 00:42:51,000
从审美的角度讲

1273
00:42:51,000 --> 00:42:52,000
VIM Script

1274
00:42:52,000 --> 00:42:53,000
是一种非常潮陋的语言

1275
00:42:53,000 --> 00:42:56,000
对

1276
00:42:56,000 --> 00:42:57,000
这一点和 Emacs

1277
00:42:57,000 --> 00:42:59,000
有非常大的区别

1278
00:42:59,000 --> 00:43:01,000
Emacs 有一个非常优美的

1279
00:43:01,000 --> 00:43:02,000
Lisp 的语言

1280
00:43:02,000 --> 00:43:03,000
作为它的基础

1281
00:43:03,000 --> 00:43:04,000
对

1282
00:43:04,000 --> 00:43:05,000
甚至

1283
00:43:05,000 --> 00:43:05,000
Emacs

1284
00:43:05,000 --> 00:43:06,000
甚至你都可以说

1285
00:43:06,000 --> 00:43:08,000
Emacs 它并不是一个编辑器

1286
00:43:08,000 --> 00:43:09,000
它就是用这个

1287
00:43:09,000 --> 00:43:09,000
叫什么

1288
00:43:09,000 --> 00:43:11,000
Elisp

1289
00:43:11,000 --> 00:43:12,000
写的

1290
00:43:12,000 --> 00:43:13,000
一个

1291
00:43:13,000 --> 00:43:15,000
叫什么

1292
00:43:15,000 --> 00:43:16,000
操作系统

1293
00:43:16,000 --> 00:43:18,000
对

1294
00:43:18,000 --> 00:43:20,000
有一句很知名的话

1295
00:43:20,000 --> 00:43:22,000
说 Emacs 是一个操作系统

1296
00:43:22,000 --> 00:43:25,000
它只是偶尔能够用来修改文字

1297
00:43:25,000 --> 00:43:29,000
而 V 则是一个

1298
00:43:29,000 --> 00:43:31,000
基本上只能修改文字的

1299
00:43:31,000 --> 00:43:32,000
这么一个小工具而已

1300
00:43:32,000 --> 00:43:33,000
对

1301
00:43:33,000 --> 00:43:34,000
我觉得为什么这么讲

1302
00:43:34,000 --> 00:43:35,000
就是刚才讲的

1303
00:43:35,000 --> 00:43:36,000
那个 Vim Script

1304
00:43:36,000 --> 00:43:36,000
这门语言

1305
00:43:36,000 --> 00:43:38,000
首先是比较古怪的

1306
00:43:38,000 --> 00:43:39,000
然后它的整个

1307
00:43:39,000 --> 00:43:40,000
就它

1308
00:43:40,000 --> 00:43:42,000
它不光是语法古怪

1309
00:43:42,000 --> 00:43:43,000
它整个这种编程的

1310
00:43:43,000 --> 00:43:48,000
就是整个运行环境也是比较受限的

1311
00:43:48,000 --> 00:43:51,000
相对于 Emacs

1312
00:43:51,000 --> 00:43:51,000
Ellipse

1313
00:43:51,000 --> 00:43:52,000
Lisp

1314
00:43:52,000 --> 00:43:52,000
而言

1315
00:43:52,000 --> 00:43:55,000
因为 Ellipse 它的自由度和灵活度

1316
00:43:55,000 --> 00:43:58,000
就不管是从语法的角度来讲

1317
00:43:58,000 --> 00:44:00,000
因为如果你知道 Lisp 是什么的话

1318
00:44:00,000 --> 00:44:02,000
那你就知道大概会什么一个状况

1319
00:44:02,000 --> 00:44:03,000
然后它的这个

1320
00:44:03,000 --> 00:44:07,000
就是可以供你修改或者是改

1321
00:44:07,000 --> 00:44:11,000
扩展的部分也是非常庞大的

1322
00:44:11,000 --> 00:44:13,000
而这样导致一个结果就是

1323
00:44:13,000 --> 00:44:13,000
Vim

1324
00:44:13,000 --> 00:44:15,000
很多人就是拿来

1325
00:44:15,000 --> 00:44:17,000
就是做一个比较简单的编辑工具

1326
00:44:17,000 --> 00:44:19,000
就是所谓的小而专嘛

1327
00:44:19,000 --> 00:44:21,000
然后 Emacs 就很多人来扩展

1328
00:44:21,000 --> 00:44:23,000
来做奇奇怪怪的事情

1329
00:44:23,000 --> 00:44:25,000
比如说有人来用 Emacs 来写

1330
00:44:25,000 --> 00:44:26,000
聊天程序

1331
00:44:26,000 --> 00:44:28,000
网页浏览器

1332
00:44:28,000 --> 00:44:30,000
当然是文字版本的

1333
00:44:30,000 --> 00:44:31,000
而且可以插图

1334
00:44:31,000 --> 00:44:32,000
其实也可以插图的

1335
00:44:32,000 --> 00:44:33,000
对

1336
00:44:33,000 --> 00:44:34,000
我在做功课的时候

1337
00:44:34,000 --> 00:44:36,000
还在 Core 20 看到了一个人

1338
00:44:36,000 --> 00:44:39,000
演示如何在半个小时之内

1339
00:44:39,000 --> 00:44:41,000
用 Ellipse

1340
00:44:41,000 --> 00:44:43,000
用 Ellisp 来写一个

1341
00:44:43,000 --> 00:44:46,000
那个 Spotify 的 Client

1342
00:44:46,000 --> 00:44:47,000
就你可以在

1343
00:44:47,000 --> 00:44:48,000
放音乐是吧

1344
00:44:48,000 --> 00:44:48,000
对

1345
00:44:48,000 --> 00:44:50,000
他可以在 Emacs 里面搜索

1346
00:44:50,000 --> 00:44:51,000
Spotify 上那首歌

1347
00:44:51,000 --> 00:44:52,000
然后在 Emacs 里面

1348
00:44:52,000 --> 00:44:53,000
告诉 Spotify

1349
00:44:53,000 --> 00:44:55,000
把这首歌放出来

1350
00:44:55,000 --> 00:44:55,000
对

1351
00:44:55,000 --> 00:44:57,000
就是还可以写游戏

1352
00:44:57,000 --> 00:44:58,000
所以你知道

1353
00:44:58,000 --> 00:45:02,000
这样它的这个作用领域

1354
00:45:02,000 --> 00:45:04,000
就完全不仅仅是一个编辑器

1355
00:45:04,000 --> 00:45:05,000
那么简单

1356
00:45:05,000 --> 00:45:06,000
对

1357
00:45:06,000 --> 00:45:08,000
Emacs 对于很多 Emacs 用户来说

1358
00:45:08,000 --> 00:45:10,000
是一个开机之后

1359
00:45:10,000 --> 00:45:11,000
不管有时候没事

1360
00:45:11,000 --> 00:45:12,000
先打开的一个工具

1361
00:45:12,000 --> 00:45:13,000
但是在 VI

1362
00:45:13,000 --> 00:45:14,000
在 VIM 用户里面

1363
00:45:14,000 --> 00:45:15,000
很少会看到这种现象

1364
00:45:15,000 --> 00:45:17,000
所以他们其实并不需要

1365
00:45:17,000 --> 00:45:19,000
管是什么样的操作系统

1366
00:45:19,000 --> 00:45:21,000
那都是一个虚拟机而已

1367
00:45:21,000 --> 00:45:22,000
对

1368
00:45:22,000 --> 00:45:22,000
不管怎么说

1369
00:45:22,000 --> 00:45:23,000
我先打开就是了

1370
00:45:23,000 --> 00:45:24,000
对

1371
00:45:24,000 --> 00:45:25,000
先打开 Emacs 之后

1372
00:45:25,000 --> 00:45:28,000
其他的底层系统就已经无所谓了

1373
00:45:28,000 --> 00:45:28,000
对

1374
00:45:28,000 --> 00:45:30,000
其实这也就导致

1375
00:45:30,000 --> 00:45:31,000
就是说

1376
00:45:31,000 --> 00:45:33,000
在使用 VI 的时候

1377
00:45:33,000 --> 00:45:38,000
你不得不大量的去利用外部工具来完成

1378
00:45:38,000 --> 00:45:41,000
VI 或者 VIM 本身不支持的一些功能

1379
00:45:41,000 --> 00:45:42,000
对

1380
00:45:42,000 --> 00:45:44,000
而在 Emacs 里面

1381
00:45:44,000 --> 00:45:46,000
你基本上可以永远待在 Emacs 里面

1382
00:45:46,000 --> 00:45:46,000
对

1383
00:45:46,000 --> 00:45:47,000
比如说这里说

1384
00:45:47,000 --> 00:45:50,000
我个人最常用的一个状况

1385
00:45:50,000 --> 00:45:53,000
因为我做的很多都是服务器端的东西

1386
00:45:53,000 --> 00:45:55,000
那么需要去远程调试

1387
00:45:55,000 --> 00:45:55,000
对吧

1388
00:45:55,000 --> 00:45:56,000
远程调试的话

1389
00:45:56,000 --> 00:45:57,000
你要通过命令行

1390
00:45:57,000 --> 00:45:59,000
比如说 SSH 登录过去

1391
00:45:59,000 --> 00:46:02,000
但显然至少到目前为止

1392
00:46:02,000 --> 00:46:03,000
我并没有发现

1393
00:46:03,000 --> 00:46:04,000
我在 VIM 下面有一个可以

1394
00:46:04,000 --> 00:46:06,000
就是嵌入到 VIM 里面的

1395
00:46:06,000 --> 00:46:09,000
这么一个终端的一个插件

1396
00:46:09,000 --> 00:46:09,000
对吧

1397
00:46:09,000 --> 00:46:12,000
所以我还是得一边看一个

1398
00:46:12,000 --> 00:46:13,000
这个 VIM 编辑器的窗口

1399
00:46:13,000 --> 00:46:15,000
然后一边再开一个

1400
00:46:15,000 --> 00:46:17,000
这个终端的这个窗口

1401
00:46:17,000 --> 00:46:19,000
去做这个操作

1402
00:46:19,000 --> 00:46:20,000
但这点我发现在 Emacs 上面

1403
00:46:20,000 --> 00:46:21,000
就完全不一样

1404
00:46:21,000 --> 00:46:23,000
Emacs 就是直接全屏

1405
00:46:23,000 --> 00:46:24,000
是一个 Emacs 的窗口

1406
00:46:24,000 --> 00:46:26,000
然后里面再画出一部分

1407
00:46:26,000 --> 00:46:28,000
来做一个终端的插件

1408
00:46:28,000 --> 00:46:29,000
然后这样登录去操作

1409
00:46:29,000 --> 00:46:30,000
这样

1410
00:46:30,000 --> 00:46:31,000
对

1411
00:46:31,000 --> 00:46:32,000
在开 VIM 的时候

1412
00:46:32,000 --> 00:46:34,000
你很少有说

1413
00:46:34,000 --> 00:46:37,000
所有的工作都在 VIM 里面完成

1414
00:46:37,000 --> 00:46:39,000
的这样一种情形存在

1415
00:46:39,000 --> 00:46:43,000
但反过来在 Emacs 里面

1416
00:46:43,000 --> 00:46:44,000
基本上进去就不需要再出来

1417
00:46:44,000 --> 00:46:46,000
对

1418
00:46:46,000 --> 00:46:51,000
甚至就是甚至我在找例子的时候

1419
00:46:51,000 --> 00:46:55,000
找到这么一个场景

1420
00:46:55,000 --> 00:46:58,000
就是有一个应该是在实验室工作的人

1421
00:46:58,000 --> 00:47:01,000
他说在 Emacs 上面

1422
00:47:01,000 --> 00:47:05,000
因为 Emacs 支持在支持 X Windows 系统

1423
00:47:05,000 --> 00:47:09,000
然后他可以同时连接到多个 X server

1424
00:47:09,000 --> 00:47:10,000
然后他可以做到这样一件事情

1425
00:47:10,000 --> 00:47:13,000
就是你他在办公室里面开一台电脑

1426
00:47:13,000 --> 00:47:16,000
然后在实验室里面又有几台电脑

1427
00:47:16,000 --> 00:47:18,000
他可以在办公室里面打开一个 Emacs

1428
00:47:18,000 --> 00:47:25,000
然后远程告诉实验室里面某一台电脑上面的 X Windows

1429
00:47:25,000 --> 00:47:27,000
Server 出现

1430
00:47:27,000 --> 00:47:29,000
请出现一个 Emacs 窗口

1431
00:47:29,000 --> 00:47:32,000
他在办公室做完这件事情之后

1432
00:47:32,000 --> 00:47:34,000
走到实验室

1433
00:47:34,000 --> 00:47:36,000
做实验

1434
00:47:36,000 --> 00:47:38,000
然后就可以转身在实验室的电脑上

1435
00:47:38,000 --> 00:47:43,000
在他刚刚打开的那个办公室的 Emacs 窗口里面

1436
00:47:43,000 --> 00:47:43,000
输入数据

1437
00:47:43,000 --> 00:47:48,000
我觉得这是一个非常匪夷所思的功能

1438
00:47:48,000 --> 00:47:49,000
但

1439
00:47:49,000 --> 00:47:51,000
所以你看这个

1440
00:47:51,000 --> 00:47:52,000
Emacs 就是可以做的

1441
00:47:52,000 --> 00:47:53,000
但其实你是看他这样

1442
00:47:53,000 --> 00:47:56,000
就是或者说 Emacs 用户在很多年以前

1443
00:47:56,000 --> 00:47:59,000
就已经实现了现在苹果所谓的

1444
00:47:59,000 --> 00:48:00,000
叫什么 continuity 的功能了

1445
00:48:00,000 --> 00:48:02,000
对 handover

1446
00:48:02,000 --> 00:48:03,000
这不就是

1447
00:48:03,000 --> 00:48:05,000
对虽然还是有一个人工干预的

1448
00:48:05,000 --> 00:48:07,000
对 handoff

1449
00:48:07,000 --> 00:48:09,000
虽然有一个人工干预的过程

1450
00:48:09,000 --> 00:48:11,000
但他已经在那了

1451
00:48:11,000 --> 00:48:12,000
就是如果你懂得怎么用的话

1452
00:48:12,000 --> 00:48:13,000
你是可以实现的

1453
00:48:13,000 --> 00:48:14,000
而且很快

1454
00:48:14,000 --> 00:48:16,000
但是反过来

1455
00:48:16,000 --> 00:48:17,000
如果你有 Vim 的话

1456
00:48:17,000 --> 00:48:18,000
这种功能

1457
00:48:18,000 --> 00:48:19,000
你就可能唯一能做的

1458
00:48:19,000 --> 00:48:20,000
就是你走到实验室

1459
00:48:20,000 --> 00:48:22,000
然后用实验室的

1460
00:48:22,000 --> 00:48:26,000
SSH 连接到那个办公室的电脑上

1461
00:48:26,000 --> 00:48:29,000
然后在那边编辑你刚才编辑的文件

1462
00:48:29,000 --> 00:48:32,000
你甚至不能重用一个 Vim session

1463
00:48:32,000 --> 00:48:34,000
或者说你必须用

1464
00:48:34,000 --> 00:48:36,000
比如说 Tmax 这样的东西

1465
00:48:36,000 --> 00:48:37,000
等一下

1466
00:48:37,000 --> 00:48:39,000
Vim 好像有一个这个 server mode

1467
00:48:39,000 --> 00:48:40,000
我记得

1468
00:48:40,000 --> 00:48:41,000
但是我从来没有用过

1469
00:48:41,000 --> 00:48:42,000
我也没有用过

1470
00:48:42,000 --> 00:48:43,000
对我记得有这么一个东西

1471
00:48:43,000 --> 00:48:44,000
确实是可以这么干

1472
00:48:44,000 --> 00:48:47,000
就是这里要解释一下什么是 server mode

1473
00:48:47,000 --> 00:48:49,000
就是我们常讲的编辑器

1474
00:48:49,000 --> 00:48:51,000
其实如果以大体来分

1475
00:48:51,000 --> 00:48:52,000
可以分为两部分

1476
00:48:52,000 --> 00:48:53,000
就一个是所谓的前端

1477
00:48:53,000 --> 00:48:55,000
就它展示给你那些字符

1478
00:48:55,000 --> 00:48:56,000
然后那些

1479
00:48:56,000 --> 00:48:58,000
你看得到的部分

1480
00:48:58,000 --> 00:49:01,000
然后它其实后面跑的是一个所谓的

1481
00:49:01,000 --> 00:49:03,000
所谓的编辑器的内核

1482
00:49:03,000 --> 00:49:06,000
然后那个内核其实在操作内存中边间的一块区域

1483
00:49:06,000 --> 00:49:07,000
对吧

1484
00:49:07,000 --> 00:49:09,000
然后都是磁盘上的一个文件

1485
00:49:09,000 --> 00:49:10,000
对通常的话

1486
00:49:10,000 --> 00:49:12,000
我这两块是在同一个进程

1487
00:49:12,000 --> 00:49:14,000
或者同一台机器上面的

1488
00:49:14,000 --> 00:49:15,000
就至少是在同一台机器上面的

1489
00:49:15,000 --> 00:49:17,000
就是你编辑本地的文件嘛

1490
00:49:17,000 --> 00:49:20,000
然后刚才讲的那个 server mode

1491
00:49:20,000 --> 00:49:22,000
其实是可以让你把这两个分开

1492
00:49:22,000 --> 00:49:25,000
就是你可以在比如本地启动一个 Vim 的前端

1493
00:49:25,000 --> 00:49:28,000
然后它连接的不是你本地的

1494
00:49:28,000 --> 00:49:29,000
就它编辑的不是你一个本地的文件

1495
00:49:29,000 --> 00:49:33,000
而是连接到远程的一台 Vim 的 server 上面去

1496
00:49:33,000 --> 00:49:38,000
然后通过这种方式去编去控制远程那台 server

1497
00:49:38,000 --> 00:49:41,000
编辑它的内存或者是中的一个区块

1498
00:49:41,000 --> 00:49:43,000
去编辑它的那个一个文件嘛

1499
00:49:43,000 --> 00:49:44,000
所以其实也是这样做

1500
00:49:44,000 --> 00:49:46,000
但是在现实中

1501
00:49:46,000 --> 00:49:50,000
我似乎还没有发现有什么场合能用到这一点

1502
00:49:50,000 --> 00:49:51,000
对

1503
00:49:51,000 --> 00:49:55,000
因为 Vim 的使用模式和 Emax 使用模式

1504
00:49:55,000 --> 00:49:57,000
基本上就是两个极端

1505
00:49:57,000 --> 00:50:00,000
Vim 就是 Vim 非常小

1506
00:50:00,000 --> 00:50:01,000
启动非常快

1507
00:50:01,000 --> 00:50:04,000
就像一个命令一样

1508
00:50:04,000 --> 00:50:07,000
一打 Vim 它立刻就会弹出来一个窗口

1509
00:50:07,000 --> 00:50:11,000
Emax 则是一个启动相对来说比较慢的这么一个工具

1510
00:50:11,000 --> 00:50:17,000
所以使用 Vim 的习惯也就是多次的进入 Vim

1511
00:50:17,000 --> 00:50:18,000
多次的切出 Vim

1512
00:50:18,000 --> 00:50:24,000
然后把 Vim 作为你一系列工具之中的一个组件使用

1513
00:50:24,000 --> 00:50:25,000
而 Emax 反过来呢

1514
00:50:25,000 --> 00:50:28,000
基本上就是你进去之后就想办法不要从里面出

1515
00:50:28,000 --> 00:50:33,000
一切功能或者一切工具尽量在 Emax 里面内部解决

1516
00:50:33,000 --> 00:50:37,000
所以 Vim 应该是一个你的系统里面的常驻进程

1517
00:50:37,000 --> 00:50:40,000
你说 Emax 应该是常驻进程吧

1518
00:50:40,000 --> 00:50:41,000
对对对

1519
00:50:41,000 --> 00:50:44,000
Emax 应该是你的系统里面的一个常驻进程

1520
00:50:44,000 --> 00:50:46,000
对因为你在这个

1521
00:50:46,000 --> 00:50:48,000
对你在这个 Emax 里面

1522
00:50:48,000 --> 00:50:49,000
基本上可以做任何事情

1523
00:50:49,000 --> 00:50:50,000
比如说看当前的日历啊

1524
00:50:50,000 --> 00:50:52,000
这种小儿科的事情全都可以在 Emax 里面完成

1525
00:50:52,000 --> 00:50:55,000
甚至还可以玩俄罗斯方块

1526
00:50:55,000 --> 00:50:57,000
Emax 内置了俄罗斯方块功能

1527
00:50:57,000 --> 00:51:03,000
这也是 Vim 所缺乏的一个特征

1528
00:51:03,000 --> 00:51:07,000
还有一点我觉得我一直想挺羡慕的

1529
00:51:07,000 --> 00:51:09,000
就是 Emax 的这个特性

1530
00:51:09,000 --> 00:51:11,000
就是 Emax 的图形界面模式

1531
00:51:11,000 --> 00:51:15,000
它是可以使用多种字体组合的

1532
00:51:15,000 --> 00:51:19,000
OK 那这个要比 Vim 好多了

1533
00:51:19,000 --> 00:51:20,000
对然后这个有什么用呢

1534
00:51:20,000 --> 00:51:22,000
就是之前这个是我看

1535
00:51:22,000 --> 00:51:25,000
我一个朋友在大学的时候用过的

1536
00:51:25,000 --> 00:51:26,000
就是他当时

1537
00:51:26,000 --> 00:51:33,000
他写论文或者看论文写文档的时候

1538
00:51:33,000 --> 00:51:35,000
他会用 Latex 来写

1539
00:51:35,000 --> 00:51:38,000
然后他是一个 Emax 用户

1540
00:51:38,000 --> 00:51:40,000
然后我去他那里看的时候就会发现

1541
00:51:40,000 --> 00:51:43,000
他的那个界面的那个

1542
00:51:43,000 --> 00:51:47,000
就他可以用那个某一种 Emax 的 Mode

1543
00:51:47,000 --> 00:51:49,000
直接展示出

1544
00:51:49,000 --> 00:51:50,000
比如说这是一个标题

1545
00:51:50,000 --> 00:51:52,000
它会大一点的字

1546
00:51:52,000 --> 00:51:53,000
然后这个是正文

1547
00:51:53,000 --> 00:51:53,000
它会小

1548
00:51:53,000 --> 00:51:55,000
它会是一个正文的字体

1549
00:51:55,000 --> 00:51:56,000
然后它是二级标题

1550
00:51:56,000 --> 00:51:59,000
它又会是介于大标题和正文之间的一个字号

1551
00:51:59,000 --> 00:52:01,000
或者另外一种形态的字

1552
00:52:01,000 --> 00:52:03,000
半所见即所得

1553
00:52:03,000 --> 00:52:03,000
对对对

1554
00:52:03,000 --> 00:52:04,000
就这个意思

1555
00:52:04,000 --> 00:52:05,000
而且它可以在

1556
00:52:05,000 --> 00:52:07,000
因为 Emax 的图形界面

1557
00:52:07,000 --> 00:52:08,000
其实非常牛逼

1558
00:52:08,000 --> 00:52:09,000
它可以插入什么

1559
00:52:09,000 --> 00:52:09,000
刚刚一样

1560
00:52:09,000 --> 00:52:10,000
因为播音乐这种小儿

1561
00:52:10,000 --> 00:52:11,000
可以可以做

1562
00:52:11,000 --> 00:52:12,000
还可以插入图形

1563
00:52:12,000 --> 00:52:16,000
它甚至可以通过一个插件

1564
00:52:16,000 --> 00:52:17,000
就 Emax 插件

1565
00:52:17,000 --> 00:52:19,000
基石的渲染

1566
00:52:19,000 --> 00:52:21,000
你在 Emax 的文档里面

1567
00:52:21,000 --> 00:52:24,000
输入的一条 Latex 的公式

1568
00:52:24,000 --> 00:52:25,000
然后把那个渲染的结果

1569
00:52:25,000 --> 00:52:27,000
以图片的形式展现在那里

1570
00:52:27,000 --> 00:52:28,000
实现一个

1571
00:52:28,000 --> 00:52:29,000
基本上实现一个

1572
00:52:29,000 --> 00:52:33,000
所见即所得的这种一个 Latex 的编辑的结果

1573
00:52:33,000 --> 00:52:35,000
这个是当时

1574
00:52:35,000 --> 00:52:36,000
VIME 永远做不到的

1575
00:52:36,000 --> 00:52:36,000
对

1576
00:52:36,000 --> 00:52:38,000
因为 VIME 的它是一个

1577
00:52:38,000 --> 00:52:40,000
就不管你怎么改

1578
00:52:40,000 --> 00:52:43,000
它始终是默认是一个单一字体界面的

1579
00:52:43,000 --> 00:52:44,000
而且它的那个

1580
00:52:44,000 --> 00:52:45,000
都是一个所谓懂宽字体

1581
00:52:45,000 --> 00:52:46,000
对

1582
00:52:46,000 --> 00:52:47,000
就是你在

1583
00:52:47,000 --> 00:52:49,000
唯一能做的就是语法高亮

1584
00:52:49,000 --> 00:52:50,000
去改变自己的颜色

1585
00:52:50,000 --> 00:52:52,000
或者加什么下画线之类的东西

1586
00:52:52,000 --> 00:52:54,000
但是你并不能说

1587
00:52:54,000 --> 00:52:56,000
你在同一个文章中的一部分

1588
00:52:56,000 --> 00:52:57,000
采用一种字体

1589
00:52:57,000 --> 00:52:58,000
然后另外一部分采用另一种字体

1590
00:52:58,000 --> 00:53:01,000
当然你更加不能插入图片

1591
00:53:01,000 --> 00:53:02,000
因为它根本没有这种接口

1592
00:53:02,000 --> 00:53:03,000
对

1593
00:53:03,000 --> 00:53:04,000
所以这一点上

1594
00:53:04,000 --> 00:53:06,000
我觉得从

1595
00:53:06,000 --> 00:53:08,000
所以其实从这个角度来讲

1596
00:53:08,000 --> 00:53:10,000
你并不能把 VIME 和 VIME

1597
00:53:10,000 --> 00:53:15,000
作为两个同等的产品来对比

1598
00:53:15,000 --> 00:53:16,000
它就是所谓的

1599
00:53:16,000 --> 00:53:18,000
苹果和橘子的区别

1600
00:53:18,000 --> 00:53:19,000
对

1601
00:53:19,000 --> 00:53:20,000
这是好像

1602
00:53:20,000 --> 00:53:24,000
其实但是这种比较

1603
00:53:24,000 --> 00:53:26,000
仍就是有意义的

1604
00:53:26,000 --> 00:53:28,000
或者说仍就是时常被拿出来说的

1605
00:53:28,000 --> 00:53:29,000
因为就有点像

1606
00:53:29,000 --> 00:53:33,000
Android 和 iPhone 之间的差别

1607
00:53:33,000 --> 00:53:34,000
iPhone 同时是硬件

1608
00:53:34,000 --> 00:53:35,000
同时是软件

1609
00:53:35,000 --> 00:53:38,000
同时是一家公司所提供的一系列服务

1610
00:53:38,000 --> 00:53:40,000
但 Android 只是一个操作系统而已

1611
00:53:40,000 --> 00:53:42,000
但人们即便如此

1612
00:53:42,000 --> 00:53:44,000
人们还是会把它们拿出来相对用的

1613
00:53:44,000 --> 00:53:46,000
对

1614
00:53:46,000 --> 00:53:49,000
但 VIME 和 EMEX 之间的差别

1615
00:53:49,000 --> 00:53:50,000
大概大致类似

1616
00:53:50,000 --> 00:53:53,000
但我仍旧认为这样的比较还是有意义

1617
00:53:53,000 --> 00:53:54,000
对

1618
00:53:54,000 --> 00:53:54,000
对

1619
00:53:54,000 --> 00:53:56,000
就反正就刚才说的那种

1620
00:53:56,000 --> 00:53:58,000
那种 EMEX 能做的很多事情

1621
00:53:58,000 --> 00:53:59,000
其实 VIME 是做不到的

1622
00:53:59,000 --> 00:54:01,000
就我有时候还是挺羡慕的

1623
00:54:01,000 --> 00:54:04,000
然后也尝试过很多次去学那个 EMEX

1624
00:54:04,000 --> 00:54:06,000
但是因为模态

1625
00:54:06,000 --> 00:54:08,000
因为没有模态这个东西嘛

1626
00:54:08,000 --> 00:54:11,000
也一直就是觉得挺沮丧的

1627
00:54:11,000 --> 00:54:12,000
不过后来有

1628
00:54:12,000 --> 00:54:14,000
我向你介绍一个插件叫做 EVO

1629
00:54:14,000 --> 00:54:15,000
是 EVO

1630
00:54:15,000 --> 00:54:16,000
是

1631
00:54:16,000 --> 00:54:18,000
不是叫 EVO 吧

1632
00:54:18,000 --> 00:54:20,000
叫什么来的

1633
00:54:20,000 --> 00:54:20,000
对

1634
00:54:20,000 --> 00:54:22,000
反正大概意思就是 EMEX 上有一个

1635
00:54:22,000 --> 00:54:24,000
一个插件

1636
00:54:24,000 --> 00:54:25,000
刚才讲了可以插件

1637
00:54:25,000 --> 00:54:30,000
它完全模拟了 VIM 的模态系统

1638
00:54:30,000 --> 00:54:32,000
然后在 EMEX 里面也可以做

1639
00:54:32,000 --> 00:54:35,000
然后后来我据说

1640
00:54:35,000 --> 00:54:38,000
我这个没有没有亲自求证过

1641
00:54:38,000 --> 00:54:41,000
据说是比 VIM 自己的模态

1642
00:54:41,000 --> 00:54:42,000
做的还好

1643
00:54:42,000 --> 00:54:43,000
对

1644
00:54:43,000 --> 00:54:48,000
这就是 VI 和 EMEX 的最大的一个区别

1645
00:54:48,000 --> 00:54:50,000
就是 EMEX 可以成为 VIM

1646
00:54:50,000 --> 00:54:52,000
但是 VIM 永远不会成为 EMEX

1647
00:54:52,000 --> 00:54:53,000
对

1648
00:54:53,000 --> 00:54:55,000
这种说好像有点自黑的意思

1649
00:54:55,000 --> 00:54:57,000
也没有吧

1650
00:54:57,000 --> 00:54:59,000
我觉得这还是蛮值得自豪的

1651
00:54:59,000 --> 00:55:03,000
因为反过来想 EMEX 的用户可以说

1652
00:55:03,000 --> 00:55:04,000
我们可以做这个可以做那个

1653
00:55:04,000 --> 00:55:05,000
我们可以说

1654
00:55:05,000 --> 00:55:10,000
我们只是要经集中注意力

1655
00:55:10,000 --> 00:55:11,000
做一件事就好了

1656
00:55:11,000 --> 00:55:15,000
那其他需要其他的功能

1657
00:55:15,000 --> 00:55:18,000
就交给其他的工具去实现就好了

1658
00:55:18,000 --> 00:55:18,000
对

1659
00:55:18,000 --> 00:55:19,000
回到最开始说的

1660
00:55:19,000 --> 00:55:20,000
这是一种哲学

1661
00:55:20,000 --> 00:55:21,000
使用哲学的拥顿

1662
00:55:21,000 --> 00:55:23,000
或者思维状态的一个

1663
00:55:23,000 --> 00:55:23,000
对

1664
00:55:23,000 --> 00:55:24,000
一个差别吧

1665
00:55:24,000 --> 00:55:24,000
对

1666
00:55:24,000 --> 00:55:26,000
我觉得我们都是那种人

1667
00:55:26,000 --> 00:55:28,000
就是喜欢一个很小

1668
00:55:28,000 --> 00:55:29,000
所谓的 UNIX 哲学

1669
00:55:29,000 --> 00:55:31,000
就是 Do one thing and do it well

1670
00:55:31,000 --> 00:55:32,000
对

1671
00:55:32,000 --> 00:55:34,000
然后其实我在

1672
00:55:34,000 --> 00:55:36,000
就是我们在本质上都是排斥那种

1673
00:55:36,000 --> 00:55:37,000
所谓大而全的方案的

1674
00:55:37,000 --> 00:55:40,000
比如上次你讲那个 System D 的那个时候

1675
00:55:40,000 --> 00:55:46,000
我应该我也能够感觉得到你是不太喜欢那套方案的

1676
00:55:46,000 --> 00:55:47,000
对

1677
00:55:47,000 --> 00:55:52,000
但其实如果去追溯这两个工具的出身的话

1678
00:55:52,000 --> 00:55:56,000
你就会意识到 VI 其实就是一 link

1679
00:55:56,000 --> 00:55:58,000
就从一开始 1976 年

1680
00:55:58,000 --> 00:56:00,000
它就是 UNIX 的一部分

1681
00:56:00,000 --> 00:56:04,000
而 EMEX 是由 GNU 的创始人所写的

1682
00:56:04,000 --> 00:56:05,000
Richard Stallman

1683
00:56:05,000 --> 00:56:05,000
GNU 的创始人

1684
00:56:05,000 --> 00:56:06,000
对

1685
00:56:06,000 --> 00:56:06,000
RMS

1686
00:56:06,000 --> 00:56:09,000
就是 Stallman 写这个东西的时候

1687
00:56:09,000 --> 00:56:10,000
它其实

1688
00:56:10,000 --> 00:56:16,000
当然它仍旧是在一台 UNIX 的机械上所写出来的

1689
00:56:16,000 --> 00:56:19,000
可是我觉得 EMEX 这个东西

1690
00:56:19,000 --> 00:56:21,000
本质上还是违背 UNIX 哲学

1691
00:56:21,000 --> 00:56:21,000
对

1692
00:56:21,000 --> 00:56:23,000
它是一个就是所谓的大

1693
00:56:23,000 --> 00:56:24,000
叫什么大教堂吗

1694
00:56:24,000 --> 00:56:25,000
对

1695
00:56:25,000 --> 00:56:26,000
它就是一个 Buzzle

1696
00:56:26,000 --> 00:56:28,000
它就是一个 Cascial

1697
00:56:28,000 --> 00:56:29,000
对

1698
00:56:29,000 --> 00:56:30,000
所以

1699
00:56:30,000 --> 00:56:33,000
但是有时候你也不得不承认

1700
00:56:33,000 --> 00:56:35,000
它有时候你有一个

1701
00:56:35,000 --> 00:56:38,000
就是像那种小而今的时候

1702
00:56:38,000 --> 00:56:40,000
有时候所谓的边界的问题是比较难

1703
00:56:40,000 --> 00:56:42,000
就配合起来会有各种各样的

1704
00:56:42,000 --> 00:56:44,000
让你不爽的地方

1705
00:56:44,000 --> 00:56:44,000
比如说

1706
00:56:44,000 --> 00:56:45,000
对

1707
00:56:45,000 --> 00:56:47,000
那个 VIM 你要去调一些外部的工具

1708
00:56:47,000 --> 00:56:48,000
那么你知道

1709
00:56:48,000 --> 00:56:49,000
那个在 UNIX 里面

1710
00:56:49,000 --> 00:56:51,000
这种工具之间会像调

1711
00:56:51,000 --> 00:56:53,000
一般就只能通过那种纯文本

1712
00:56:53,000 --> 00:56:56,000
去做这个输入输出的这种事情来

1713
00:56:56,000 --> 00:56:57,000
来进行一些交互嘛

1714
00:56:57,000 --> 00:56:58,000
对

1715
00:56:58,000 --> 00:56:58,000
但是

1716
00:56:58,000 --> 00:56:58,000
对

1717
00:56:58,000 --> 00:57:01,000
而且它缺乏一种就是比较

1718
00:57:01,000 --> 00:57:02,000
比较

1719
00:57:02,000 --> 00:57:03,000
unified 的这样一种

1720
00:57:03,000 --> 00:57:05,000
这样一种调用方式

1721
00:57:05,000 --> 00:57:06,000
比如说

1722
00:57:06,000 --> 00:57:06,000
呃

1723
00:57:06,000 --> 00:57:09,000
我刚刚一个小时之前用到的

1724
00:57:09,000 --> 00:57:12,000
就是比如说我要在 VIM 里面格式化 JSON

1725
00:57:12,000 --> 00:57:13,000
对

1726
00:57:13,000 --> 00:57:15,000
我

1727
00:57:15,000 --> 00:57:17,000
现在比较流行的

1728
00:57:17,000 --> 00:57:17,000
或者说比较

1729
00:57:17,000 --> 00:57:20,000
de facto 的优雅

1730
00:57:20,000 --> 00:57:23,000
就这方面是调用 Python 来格式化 JSON

1731
00:57:23,000 --> 00:57:25,000
那么你就会意识到

1732
00:57:25,000 --> 00:57:26,000
你要在一个外

1733
00:57:26,000 --> 00:57:28,000
你就要在 VI 这样一种工具里面

1734
00:57:28,000 --> 00:57:29,000
调用一个外部工具

1735
00:57:29,000 --> 00:57:31,000
而这个外部工具的输出

1736
00:57:31,000 --> 00:57:32,000
呃

1737
00:57:32,000 --> 00:57:33,000
以及它的输入

1738
00:57:33,000 --> 00:57:40,000
其实都是某种跨进程完成的这样一种

1739
00:57:40,000 --> 00:57:41,000
对

1740
00:57:41,000 --> 00:57:42,000
这样一种结果

1741
00:57:42,000 --> 00:57:43,000
你会觉得非常的

1742
00:57:43,000 --> 00:57:44,000
有

1743
00:57:44,000 --> 00:57:46,000
有一种很很不爽的感觉

1744
00:57:46,000 --> 00:57:48,000
我能具体描述它们

1745
00:57:48,000 --> 00:57:48,000
但是

1746
00:57:48,000 --> 00:57:49,000
在

1747
00:57:49,000 --> 00:57:50,000
emax 下面

1748
00:57:50,000 --> 00:57:52,000
你可能只需要敲几个组合键就完了

1749
00:57:52,000 --> 00:57:53,000
对

1750
00:57:53,000 --> 00:57:53,000
而且

1751
00:57:53,000 --> 00:57:54,000
然后整个过程就好

1752
00:57:54,000 --> 00:57:56,000
你不会觉得自己离开了一次编辑器

1753
00:57:56,000 --> 00:57:57,000
但是在 VIM 里面

1754
00:57:57,000 --> 00:57:59,000
你会很明确的

1755
00:57:59,000 --> 00:58:00,000
感觉到

1756
00:58:00,000 --> 00:58:00,000
哦

1757
00:58:00,000 --> 00:58:03,000
刚才这个东西是用 Python 来做的

1758
00:58:03,000 --> 00:58:03,000
对

1759
00:58:03,000 --> 00:58:07,000
我觉得这可能跟那个 emax 的叫什么 lisp 的根基

1760
00:58:07,000 --> 00:58:09,000
有一点或多或少的关系

1761
00:58:09,000 --> 00:58:10,000
就是

1762
00:58:10,000 --> 00:58:11,000
你知道在

1763
00:58:11,000 --> 00:58:16,000
曾经有一种操作系统是用 lisp 写的

1764
00:58:16,000 --> 00:58:20,000
就曾经有一种硬件是专门为来跑 lisp 操作系统的

1765
00:58:20,000 --> 00:58:20,000
lisp machine

1766
00:58:20,000 --> 00:58:21,000
对

1767
00:58:21,000 --> 00:58:26,000
然后它里面的所有状态都是可以被修改的

1768
00:58:26,000 --> 00:58:27,000
可以被及时修改的

1769
00:58:27,000 --> 00:58:28,000
就是

1770
00:58:28,000 --> 00:58:30,000
对 lisp 这种语言最大的魅力也就在于

1771
00:58:30,000 --> 00:58:31,000
它的

1772
00:58:31,000 --> 00:58:32,000
它就像围棋一样

1773
00:58:32,000 --> 00:58:33,000
它的基础非常简单

1774
00:58:33,000 --> 00:58:34,000
但是

1775
00:58:34,000 --> 00:58:34,000
对

1776
00:58:34,000 --> 00:58:36,000
它可以不停的修改自身

1777
00:58:36,000 --> 00:58:40,000
然后可以不停的在运行时添加语言本身的功能

1778
00:58:40,000 --> 00:58:40,000
对

1779
00:58:40,000 --> 00:58:41,000
就是说明一个什么问题呢

1780
00:58:41,000 --> 00:58:45,000
就是它的进程之间的边界其实是比较模糊的

1781
00:58:45,000 --> 00:58:46,000
因为整个

1782
00:58:46,000 --> 00:58:51,000
如果整个操作系统的所有的状态都是可以随意的访问和修改的话

1783
00:58:51,000 --> 00:58:54,000
那就不存在说像比如说 unix 这种

1784
00:58:54,000 --> 00:58:55,000
这种相对于

1785
00:58:55,000 --> 00:58:57,000
就是每个进程之间完全割裂

1786
00:58:57,000 --> 00:59:03,000
然后你只能通过简单的输出或者其他的 ipc 的方式来实现这个进程之间的通信

1787
00:59:03,000 --> 00:59:06,000
这种肯定是有一定的这个代价和门槛

1788
00:59:06,000 --> 00:59:08,000
刚才讲的你比如说你只能依赖于文

1789
00:59:08,000 --> 00:59:15,000
一般情况下你是只能依赖于文本的方式来实现的就会导致同一个数据你要不断的把它序列化

1790
00:59:15,000 --> 00:59:19,000
然后反序列化成一个内存中的内存中的一个结构嘛

1791
00:59:19,000 --> 00:59:26,000
但是如果你像像 lisp machine 这种方式或者说在 emax 里面这种方式你整个都是在同一个进程里面的

1792
00:59:26,000 --> 00:59:28,000
当然 lisp machine 那个就比较极端了

1793
00:59:28,000 --> 00:59:32,000
因为整个系统都是一个进程你可以这么理解吧

1794
00:59:32,000 --> 00:59:38,000
那么这样的话就不存在说你每次要序列去把一个内存中的结构序列化成文本

1795
00:59:38,000 --> 00:59:41,000
然后再去到另外一个地方解序列化出来

1796
00:59:41,000 --> 00:59:43,000
这个本来也是一个损耗嘛

1797
00:59:43,000 --> 00:59:46,000
而且也就是多余的工作哈

1798
00:59:46,000 --> 00:59:48,000
我有一个问题就是

1799
00:59:48,000 --> 00:59:53,000
这个 lisp machine 的 cpu 仍旧是传统音乐上的 cpu 吧

1800
00:59:53,000 --> 01:00:00,000
它不是在 cpu 级别提供什么什么什么什么 car cdr 这种这种

1801
01:00:00,000 --> 01:00:01,000
好像是好像是这样的

1802
01:00:01,000 --> 01:00:02,000
真的吗

1803
01:00:02,000 --> 01:00:03,000
这这可能吗

1804
01:00:03,000 --> 01:00:04,000
呃为什么不可能

1805
01:00:04,000 --> 01:00:07,000
那只有那只有几个什么七个还是八个的圆吗

1806
01:00:07,000 --> 01:00:11,000
就是那个最圆式的那几个那几个表达就可以了

1807
01:00:11,000 --> 01:00:13,000
对可是这样这样的芯片真的存在吗

1808
01:00:13,000 --> 01:00:17,000
就是专门直接解释执行 lisp 语句的芯片

1809
01:00:17,000 --> 01:00:19,000
我没记错应该是这样的

1810
01:00:19,000 --> 01:00:21,000
可以可以再可以再查一下

1811
01:00:21,000 --> 01:00:22,000
你你你你再问一下

1812
01:00:22,000 --> 01:00:24,000
因为我记得是这样子的

1813
01:00:24,000 --> 01:00:26,000
就如果至少 lisp machine 不是的话

1814
01:00:26,000 --> 01:00:27,000
曾经有人做过这样的东西

1815
01:00:27,000 --> 01:00:29,000
但是虽然性能怎么样我们再说

1816
01:00:29,000 --> 01:00:31,000
但是起码是存在过这么一种东西的

1817
01:00:31,000 --> 01:00:33,000
对如果我相信

1818
01:00:33,000 --> 01:00:39,000
如果能在硬件上完成一个 lisp 语言的硬件解释器的话

1819
01:00:39,000 --> 01:00:44,000
那的确是非常非常 alien 的一种东西

1820
01:00:44,000 --> 01:00:48,000
它还是通过这个汇编纯机器语言

1821
01:00:48,000 --> 01:00:52,000
但是它应该是在硬件层面有对这个 lisp 的特性有所支持的

1822
01:00:52,000 --> 01:00:53,000
OK

1823
01:00:53,000 --> 01:00:58,000
也不是完全的通过那种方式你讲那个方式来实现

1824
01:00:58,000 --> 01:01:00,000
但是差不太远了已经

1825
01:01:00,000 --> 01:01:01,000
OK

1826
01:01:01,000 --> 01:01:01,000
对

1827
01:01:01,000 --> 01:01:04,000
回到回到回到 emax

1828
01:01:04,000 --> 01:01:07,000
对 emax 的非常非常诱人的一点

1829
01:01:07,000 --> 01:01:08,000
大概也就得在于

1830
01:01:08,000 --> 01:01:10,000
elisp

1831
01:01:10,000 --> 01:01:11,000
elisp 这种语言上面了

1832
01:01:11,000 --> 01:01:16,000
对我其实有好多次下距离要学一学 lisp

1833
01:01:16,000 --> 01:01:18,000
学一学 emax

1834
01:01:18,000 --> 01:01:22,000
也就是因为想要找一个真正的能够用到 lisp 的地方

1835
01:01:22,000 --> 01:01:29,000
不过每次都是因为就是小拇指或者是大拇指开始抱怨

1836
01:01:29,000 --> 01:01:31,000
然后我想还是算了吗

1837
01:01:31,000 --> 01:01:31,000
健康要紧

1838
01:01:31,000 --> 01:01:34,000
这个就是我们上一

1839
01:01:34,000 --> 01:01:35,000
应该是前一期提到了

1840
01:01:35,000 --> 01:01:37,000
这个键盘的问题

1841
01:01:37,000 --> 01:01:40,000
就是 emax 的过多的使用快捷键

1842
01:01:40,000 --> 01:01:44,000
而且在目前的主流的键盘的布局上面

1843
01:01:44,000 --> 01:01:46,000
这些快捷键对你的手指

1844
01:01:46,000 --> 01:01:47,000
特别是小指

1845
01:01:47,000 --> 01:01:49,000
都是一个极大的考验

1846
01:01:49,000 --> 01:01:50,000
对

1847
01:01:50,000 --> 01:01:53,000
然后如果你不想你在可能 40 岁之前

1848
01:01:53,000 --> 01:01:55,000
就是手指或者手掌废掉的话

1849
01:01:55,000 --> 01:01:58,000
可能需要要做一些比较大的调整才可以的

1850
01:01:58,000 --> 01:01:58,000
对

1851
01:01:58,000 --> 01:02:00,000
如果你不想你在手上也出现什么

1852
01:02:00,000 --> 01:02:01,000
拇指外翻

1853
01:02:01,000 --> 01:02:04,000
小指外翻这种症状的话

1854
01:02:04,000 --> 01:02:04,000
这样还是

1855
01:02:04,000 --> 01:02:05,000
所以应该买那个

1856
01:02:05,000 --> 01:02:07,000
我们不应该这样

1857
01:02:07,000 --> 01:02:08,000
误导听众

1858
01:02:08,000 --> 01:02:10,000
所以应该买那个 pedal

1859
01:02:11,000 --> 01:02:13,000
买那个踏板是挺有用的

1860
01:02:13,000 --> 01:02:15,000
对

1861
01:02:15,000 --> 01:02:17,000
其实这边也可以解释一下

1862
01:02:17,000 --> 01:02:19,000
就是如果我们听众没有用过 emax 的话

1863
01:02:19,000 --> 01:02:23,000
那么 emax 的绝大部分操作都有一个对应的快捷键

1864
01:02:23,000 --> 01:02:24,000
比如说

1865
01:02:24,000 --> 01:02:27,000
退出 emax 是什么

1866
01:02:27,000 --> 01:02:28,000
Ctrl X

1867
01:02:28,000 --> 01:02:29,000
C

1868
01:02:29,000 --> 01:02:30,000
对

1869
01:02:30,000 --> 01:02:31,000
应该是吧

1870
01:02:31,000 --> 01:02:32,000
CXC

1871
01:02:32,000 --> 01:02:34,000
我忘了

1872
01:02:34,000 --> 01:02:34,000
对

1873
01:02:34,000 --> 01:02:36,000
就是大

1874
01:02:36,000 --> 01:02:39,000
而且大部分 emax 的快捷键都是要按两次

1875
01:02:39,000 --> 01:02:43,000
就是你不仅仅是像比如说 windows 里面

1876
01:02:43,000 --> 01:02:43,000
Ctrl X

1877
01:02:43,000 --> 01:02:45,000
是剪切

1878
01:02:45,000 --> 01:02:46,000
在 emax 里面

1879
01:02:46,000 --> 01:02:49,000
你为了退出变迹器要按 Ctrl X

1880
01:02:49,000 --> 01:02:50,000
松开

1881
01:02:50,000 --> 01:02:51,000
再按 Ctrl C

1882
01:02:51,000 --> 01:02:52,000
对

1883
01:02:52,000 --> 01:02:55,000
绝大部分命令都有两到三个快捷键

1884
01:02:55,000 --> 01:02:57,000
需要依次按一下

1885
01:02:57,000 --> 01:02:57,000
对

1886
01:02:57,000 --> 01:02:58,000
所以刚才我们讲

1887
01:02:58,000 --> 01:03:01,000
你知道为什么你的那个小拇指会很快要废掉了吗

1888
01:03:01,000 --> 01:03:02,000
也是这个原因

1889
01:03:02,000 --> 01:03:04,000
你刚刚听

1890
01:03:04,000 --> 01:03:05,000
你乍听可能没有什么

1891
01:03:05,000 --> 01:03:06,000
但是想象一下

1892
01:03:06,000 --> 01:03:08,000
你每要改一个单词

1893
01:03:08,000 --> 01:03:09,000
每要改一行字

1894
01:03:09,000 --> 01:03:12,000
你就必须按两三次 Ctrl

1895
01:03:12,000 --> 01:03:14,000
那对于时间一长的话

1896
01:03:14,000 --> 01:03:16,000
对于你的小指其实是伤害相当大

1897
01:03:16,000 --> 01:03:19,000
而且我觉得他那些快捷键的那个就是

1898
01:03:19,000 --> 01:03:20,000
我觉得很难

1899
01:03:20,000 --> 01:03:22,000
就是我可能也是用的不够熟练

1900
01:03:22,000 --> 01:03:24,000
但是我觉得好像很难记住

1901
01:03:24,000 --> 01:03:31,000
对就是经常有那个 emax 用户跟我说什么 emax 用户的快捷键

1902
01:03:31,000 --> 01:03:32,000
比较符合直据

1903
01:03:32,000 --> 01:03:35,000
就 Ctrl X 其实是 extended commands

1904
01:03:35,000 --> 01:03:36,000
然后 Ctrl C

1905
01:03:36,000 --> 01:03:38,000
就是 whatever

1906
01:03:38,000 --> 01:03:40,000
Ctrl C cancel

1907
01:03:40,000 --> 01:03:41,000
extended commands

1908
01:03:41,000 --> 01:03:42,000
然后 Cancel

1909
01:03:42,000 --> 01:03:43,000
其实还是挺好记得

1910
01:03:43,000 --> 01:03:45,000
可是反过来

1911
01:03:45,000 --> 01:03:47,000
你可以说 Ctrl N next

1912
01:03:47,000 --> 01:03:50,000
是移动光标向前

1913
01:03:50,000 --> 01:03:50,000
对吧

1914
01:03:50,000 --> 01:03:53,000
还是向下翻

1915
01:03:53,000 --> 01:03:55,000
Ctrl next

1916
01:03:55,000 --> 01:03:56,000
下一页吧

1917
01:03:56,000 --> 01:03:57,000
Next

1918
01:03:57,000 --> 01:03:57,000
对

1919
01:03:57,000 --> 01:03:59,000
Ctrl P 是往回

1920
01:03:59,000 --> 01:04:01,000
然后 Ctrl F 是向前

1921
01:04:01,000 --> 01:04:02,000
光标向右

1922
01:04:02,000 --> 01:04:04,000
或者说 Ctrl B 是光标向左

1923
01:04:04,000 --> 01:04:05,000
就是 Next

1924
01:04:05,000 --> 01:04:06,000
Previous

1925
01:04:06,000 --> 01:04:07,000
Forward

1926
01:04:07,000 --> 01:04:07,000
Backward

1927
01:04:07,000 --> 01:04:08,000
这些是符合直觉

1928
01:04:08,000 --> 01:04:09,000
可是

1929
01:04:09,000 --> 01:04:10,000
其实也不一定

1930
01:04:10,000 --> 01:04:12,000
如果你是母语是英文来讲

1931
01:04:12,000 --> 01:04:14,000
你觉得还可以猜想出来一个什么 Next

1932
01:04:14,000 --> 01:04:15,000
Previous 那些

1933
01:04:15,000 --> 01:04:17,000
但是如果你母语不是英文

1934
01:04:17,000 --> 01:04:19,000
或者是甚至你比如说你母语是德文

1935
01:04:19,000 --> 01:04:21,000
你想一下这个符合直觉吗

1936
01:04:21,000 --> 01:04:22,000
我觉得也不一定

1937
01:04:22,000 --> 01:04:27,000
德语可能也

1938
01:04:27,000 --> 01:04:28,000
对

1939
01:04:28,000 --> 01:04:29,000
Anyway

1940
01:04:29,000 --> 01:04:32,000
但这不就回到了美国中心论

1941
01:04:32,000 --> 01:04:32,000
对

1942
01:04:32,000 --> 01:04:34,000
而且这样

1943
01:04:34,000 --> 01:04:36,000
其实同时同样的问题在 VIM 上面也有

1944
01:04:36,000 --> 01:04:39,000
对也是

1945
01:04:39,000 --> 01:04:40,000
Change

1946
01:04:40,000 --> 01:04:42,000
Change 或者是 Yank

1947
01:04:42,000 --> 01:04:43,000
就 Y

1948
01:04:43,000 --> 01:04:44,000
为什么 Y 代表剪切

1949
01:04:44,000 --> 01:04:46,000
Y 为什么代表复制

1950
01:04:46,000 --> 01:04:48,000
因为 Y stand for Yank

1951
01:04:48,000 --> 01:04:49,000
可是你要不是

1952
01:04:49,000 --> 01:04:51,000
你不是英语母语者的话

1953
01:04:51,000 --> 01:04:52,000
Yank 这个词到底是什么意思

1954
01:04:52,000 --> 01:04:53,000
其实我很老

1955
01:04:53,000 --> 01:04:53,000
很难才明白

1956
01:04:53,000 --> 01:04:55,000
其实就算你是母语

1957
01:04:55,000 --> 01:04:56,000
你看见 Yank

1958
01:04:56,000 --> 01:04:58,000
你没有理解 VIM 的概念

1959
01:04:58,000 --> 01:05:00,000
你知道 Yank 也是很费解的一个概念

1960
01:05:00,000 --> 01:05:01,000
对

1961
01:05:01,000 --> 01:05:03,000
对回到 EMEX

1962
01:05:03,000 --> 01:05:09,000
就是 EMEX 里面有些快捷键的确是至少你按下去之后你是比较容易记下来的

1963
01:05:09,000 --> 01:05:11,000
但是另外一些都不是

1964
01:05:11,000 --> 01:05:13,000
比如说向下翻译屏是 Ctrl 加 V

1965
01:05:13,000 --> 01:05:16,000
那我可以把 V 我不知道 V 代表什么

1966
01:05:16,000 --> 01:05:17,000
V 代表

1967
01:05:17,000 --> 01:05:20,000
就至少我是把它理解为下箭头

1968
01:05:20,000 --> 01:05:22,000
就是 V 代

1969
01:05:22,000 --> 01:05:25,000
V 是向下翻译也是因为 V 是一个向下的箭头

1970
01:05:25,000 --> 01:05:27,000
这可能是有两个耳朵

1971
01:05:27,000 --> 01:05:33,000
所以这里是什么图形法加这个英文混合记忆

1972
01:05:33,000 --> 01:05:35,000
对不然你告诉我它是什么

1973
01:05:35,000 --> 01:05:37,000
V stand for what

1974
01:05:37,000 --> 01:05:38,000
我也不记得

1975
01:05:38,000 --> 01:05:38,000
对

1976
01:05:38,000 --> 01:05:41,000
然后 Ctrl 加 V 是下翻

1977
01:05:41,000 --> 01:05:44,000
那请你猜一猜什么是上翻

1978
01:05:44,000 --> 01:05:44,000
各位听众

1979
01:05:44,000 --> 01:05:47,000
各位亲爱的听众请你猜猜向上翻是什么

1980
01:05:47,000 --> 01:05:49,000
是 V 吗好像是

1981
01:05:49,000 --> 01:05:50,000
是不是

1982
01:05:50,000 --> 01:05:52,000
向上翻译屏是 Meta

1983
01:05:52,000 --> 01:05:53,000
也是 Alt 加 V

1984
01:05:53,000 --> 01:05:55,000
What the fuck

1985
01:05:55,000 --> 01:05:56,000
所以 V

1986
01:05:56,000 --> 01:05:58,000
对

1987
01:05:58,000 --> 01:06:00,000
这里是有一点

1988
01:06:00,000 --> 01:06:02,000
也可以它可以这么理解

1989
01:06:02,000 --> 01:06:04,000
就是 V 是一个翻页的

1990
01:06:04,000 --> 01:06:07,000
但是然后方向是由这个快捷键来控制的

1991
01:06:07,000 --> 01:06:10,000
好吧

1992
01:06:10,000 --> 01:06:12,000
起地

1993
01:06:12,000 --> 01:06:13,000
给 Emax 起地

1994
01:06:13,000 --> 01:06:15,000
你看 Emax 起地有记者了

1995
01:06:15,000 --> 01:06:18,000
OK

1996
01:06:18,000 --> 01:06:21,000
刚才讲了这么两个这么比较古老的编辑机

1997
01:06:21,000 --> 01:06:22,000
我们来现在说一下

1998
01:06:22,000 --> 01:06:24,000
现在比较新兴的

1999
01:06:24,000 --> 01:06:27,000
特别是在所谓的图形界面下

2000
01:06:27,000 --> 01:06:28,000
比较流行的一些编辑机

2001
01:06:28,000 --> 01:06:33,000
或者说试图弥补这种

2002
01:06:33,000 --> 01:06:35,000
因为 VM 不管是 VM 还是 Emax

2003
01:06:35,000 --> 01:06:38,000
其实都有那老太隆中的感觉

2004
01:06:38,000 --> 01:06:41,000
那么在他们之下编辑器

2005
01:06:41,000 --> 01:06:44,000
在他们之下编辑文档

2006
01:06:44,000 --> 01:06:46,000
你取决于你的视角

2007
01:06:46,000 --> 01:06:47,000
你可能觉得它非常的

2008
01:06:47,000 --> 01:06:49,000
老掉牙

2009
01:06:49,000 --> 01:06:52,000
但也有可能会觉得非常的酷

2010
01:06:52,000 --> 01:06:57,000
我相信可能还是觉得

2011
01:06:57,000 --> 01:06:58,000
在命令行之下

2012
01:06:58,000 --> 01:07:01,000
修改文件比较老掉牙的人居多吧

2013
01:07:01,000 --> 01:07:04,000
我觉得首先一点就是

2014
01:07:04,000 --> 01:07:07,000
他们至少从观感上

2015
01:07:07,000 --> 01:07:09,000
就是 VM 和 Emax 来讲

2016
01:07:09,000 --> 01:07:11,000
他们在观感上都是一个不美的应用

2017
01:07:11,000 --> 01:07:14,000
这倒是不足

2018
01:07:14,000 --> 01:07:15,000
这倒的确是个

2019
01:07:15,000 --> 01:07:16,000
是个

2020
01:07:16,000 --> 01:07:19,000
就起码我知道很多这个

2021
01:07:19,000 --> 01:07:22,000
就是从 Mac 就是的铁杆用户

2022
01:07:22,000 --> 01:07:24,000
他都不是特别喜欢这两个

2023
01:07:24,000 --> 01:07:25,000
他们会喜欢一些

2024
01:07:25,000 --> 01:07:27,000
就 Mac 原生的

2025
01:07:27,000 --> 01:07:31,000
然后就有原生图形界面的这么一个编辑器

2026
01:07:31,000 --> 01:07:32,000
就被最早的什么

2027
01:07:32,000 --> 01:07:35,000
像什么 BBedit 这种东西

2028
01:07:35,000 --> 01:07:38,000
对因为一方面也是

2029
01:07:38,000 --> 01:07:40,000
他们有图形界面

2030
01:07:40,000 --> 01:07:41,000
另外一方面也是

2031
01:07:41,000 --> 01:07:43,000
他们没有那么多奇奇怪怪的

2032
01:07:43,000 --> 01:07:44,000
比如说

2033
01:07:44,000 --> 01:07:46,000
其实刚才我们说到

2034
01:07:46,000 --> 01:07:48,000
Ctrl 加 N 是向下

2035
01:07:48,000 --> 01:07:50,000
Ctrl 加 P 是向前

2036
01:07:50,000 --> 01:07:51,000
向上

2037
01:07:51,000 --> 01:07:53,000
CtrlF CtrlB 这些

2038
01:07:53,000 --> 01:07:56,000
也是不那么符合直觉的

2039
01:07:56,000 --> 01:07:57,000
就如果你学

2040
01:07:57,000 --> 01:08:00,000
如果你习惯了在 Word 里面

2041
01:08:00,000 --> 01:08:03,000
按方向键来改变光标位置的话

2042
01:08:03,000 --> 01:08:05,000
方向键是很符合直觉的话

2043
01:08:05,000 --> 01:08:06,000
对啊

2044
01:08:06,000 --> 01:08:06,000
方向键

2045
01:08:06,000 --> 01:08:08,000
画了键头

2046
01:08:08,000 --> 01:08:08,000
你按下去

2047
01:08:08,000 --> 01:08:09,000
然后光标动了

2048
01:08:09,000 --> 01:08:11,000
这是几乎不言自明的一个

2049
01:08:11,000 --> 01:08:14,000
而且它那个键头的摆

2050
01:08:14,000 --> 01:08:17,000
那几个键的方向和摆布都是

2051
01:08:17,000 --> 01:08:19,000
一眼就能看懂的

2052
01:08:19,000 --> 01:08:20,000
对

2053
01:08:20,000 --> 01:08:23,000
虽然在早期键盘上四个键头的排布

2054
01:08:23,000 --> 01:08:25,000
也是有过一番变革

2055
01:08:25,000 --> 01:08:26,000
就不是

2056
01:08:26,000 --> 01:08:29,000
其实如果要追溯计算机键盘

2057
01:08:29,000 --> 01:08:32,000
没有这个方向键吧

2058
01:08:32,000 --> 01:08:33,000
就早期的键盘

2059
01:08:33,000 --> 01:08:34,000
对

2060
01:08:34,000 --> 01:08:36,000
比如说中华学习机的方向键

2061
01:08:36,000 --> 01:08:39,000
中华学习机的方向键

2062
01:08:39,000 --> 01:08:42,000
是一个巨大的正方形

2063
01:08:42,000 --> 01:08:45,000
然后沿对角线被切成了四块

2064
01:08:45,000 --> 01:08:46,000
What

2065
01:08:46,000 --> 01:08:47,000
Yes

2066
01:08:47,000 --> 01:08:49,000
就是一个巨大的正方形

2067
01:08:49,000 --> 01:08:52,000
所以你看你有四个三角

2068
01:08:52,000 --> 01:08:54,000
然后你有四个三角

2069
01:08:54,000 --> 01:08:54,000
对

2070
01:08:54,000 --> 01:08:56,000
然后朝上的那一个三角

2071
01:08:56,000 --> 01:08:58,000
上面画了一个

2072
01:08:58,000 --> 01:09:00,000
朝上的那个倒三角

2073
01:09:00,000 --> 01:09:02,000
上面画了一个朝上的正三角

2074
01:09:02,000 --> 01:09:08,000
这个方向键其实就有点像什么

2075
01:09:08,000 --> 01:09:10,000
Xbox 手柄那种感觉

2076
01:09:10,000 --> 01:09:11,000
明白了

2077
01:09:11,000 --> 01:09:11,000
对

2078
01:09:11,000 --> 01:09:14,000
甚至早期也有键盘是比如说

2079
01:09:14,000 --> 01:09:16,000
只有左右方向键头

2080
01:09:16,000 --> 01:09:17,000
只有左右键头

2081
01:09:17,000 --> 01:09:17,000
没有上下键头

2082
01:09:17,000 --> 01:09:18,000
那怎么上下呢

2083
01:09:18,000 --> 01:09:20,000
或者是就没有上下键头

2084
01:09:20,000 --> 01:09:21,000
OK

2085
01:09:21,000 --> 01:09:24,000
其实我们知道那个 Vim 的

2086
01:09:24,000 --> 01:09:25,000
就是 Vim 作者

2087
01:09:25,000 --> 01:09:26,000
Vim 作者

2088
01:09:26,000 --> 01:09:27,000
Vim 作者

2089
01:09:27,000 --> 01:09:28,000
Vim 作者

2090
01:09:28,000 --> 01:09:28,000
Vim 作者

2091
01:09:28,000 --> 01:09:29,000
Vim 作者

2092
01:09:29,000 --> 01:09:30,000
Vim 作者

2093
01:09:30,000 --> 01:09:34,000
那台键盘是没有方向键的

2094
01:09:34,000 --> 01:09:35,000
然后它在那个 HJKL 上面

2095
01:09:35,000 --> 01:09:38,000
那四个字母上面是有四个方向键

2096
01:09:38,000 --> 01:09:40,000
分别是那四个方向

2097
01:09:40,000 --> 01:09:43,000
对

2098
01:09:43,000 --> 01:09:43,000
对

2099
01:09:43,000 --> 01:09:45,000
Billy Joy 用的那台电脑

2100
01:09:45,000 --> 01:09:45,000
其实在

2101
01:09:45,000 --> 01:09:46,000
如果你搜

2102
01:09:46,000 --> 01:09:48,000
你在网上搜一下 VI keyboard

2103
01:09:48,000 --> 01:09:49,000
然后搜 Billy Joy

2104
01:09:49,000 --> 01:09:50,000
Vim 作者

2105
01:09:50,000 --> 01:09:51,000
Vim 作者

2106
01:09:51,000 --> 01:09:51,000
Vim 作者

2107
01:09:51,000 --> 01:09:51,000
Vim 作者

2108
01:09:51,000 --> 01:09:52,000
Vim 作者

2109
01:09:52,000 --> 01:09:53,000
就可以找到它

2110
01:09:53,000 --> 01:09:55,000
最开始用的那台电脑的键盘

2111
01:09:55,000 --> 01:09:56,000
你会觉得

2112
01:09:56,000 --> 01:09:58,000
在这个电脑上

2113
01:09:58,000 --> 01:10:00,000
在这个键盘上开发出 VI

2114
01:10:00,000 --> 01:10:02,000
其实是非常合理的一些事情

2115
01:10:02,000 --> 01:10:02,000
对

2116
01:10:02,000 --> 01:10:04,000
所以唯一你觉得

2117
01:10:04,000 --> 01:10:05,000
那个 VI 的键

2118
01:10:05,000 --> 01:10:07,000
就排布不合理

2119
01:10:07,000 --> 01:10:08,000
那是因为你的键盘不对

2120
01:10:08,000 --> 01:10:09,000
对

2121
01:10:09,000 --> 01:10:09,000
没错

2122
01:10:09,000 --> 01:10:11,000
这是为什么要买一台

2123
01:10:11,000 --> 01:10:12,000
买一只 HIPAA GAN keyboard

2124
01:10:12,000 --> 01:10:13,000
忘掉

2125
01:10:13,000 --> 01:10:14,000
忘掉键

2126
01:10:14,000 --> 01:10:15,000
那个什么键上的

2127
01:10:15,000 --> 01:10:16,000
Ener 的东西

2128
01:10:16,000 --> 01:10:17,000
然后自己改弯

2129
01:10:17,000 --> 01:10:18,000
对

2130
01:10:18,000 --> 01:10:19,000
在推特上

2131
01:10:19,000 --> 01:10:21,000
有一位听众也反馈说

2132
01:10:21,000 --> 01:10:23,000
听了我们的节目之后

2133
01:10:23,000 --> 01:10:27,000
终于买了这个心里长草很久的 HIPAA GAN keyboard

2134
01:10:27,000 --> 01:10:29,000
然后用的很爽

2135
01:10:29,000 --> 01:10:31,000
但是被室友投诉说太吵了

2136
01:10:31,000 --> 01:10:34,000
这个副作用

2137
01:10:34,000 --> 01:10:36,000
一概不承担后果

2138
01:10:36,000 --> 01:10:37,000
没错

2139
01:10:37,000 --> 01:10:38,000
没错

2140
01:10:38,000 --> 01:10:39,000
又扯远了

2141
01:10:39,000 --> 01:10:41,000
讲回那个基于图形界面的编辑器

2142
01:10:41,000 --> 01:10:44,000
最近比较火的几个是

2143
01:10:44,000 --> 01:10:45,000
sublime

2144
01:10:45,000 --> 01:10:46,000
sublime 是一个比较火的

2145
01:10:46,000 --> 01:10:47,000
然后它是一个

2146
01:10:47,000 --> 01:10:49,000
它其实是一个跨平台的编辑器

2147
01:10:49,000 --> 01:10:53,000
然后我没有用过它在其他系统上的怎么样

2148
01:10:53,000 --> 01:10:54,000
但我在 Mac 上面

2149
01:10:54,000 --> 01:10:57,000
我还真没感觉到它是一个跨平台的

2150
01:10:57,000 --> 01:10:59,000
就它做的原生还挺好的

2151
01:10:59,000 --> 01:11:00,000
对

2152
01:11:00,000 --> 01:11:02,000
其实它的跨平台是

2153
01:11:02,000 --> 01:11:06,000
不像 Eclipse 或者是其他什么东西

2154
01:11:06,000 --> 01:11:06,000
它的快捷键

2155
01:11:06,000 --> 01:11:08,000
就是在 Eclipse 里面

2156
01:11:08,000 --> 01:11:09,000
快捷键在各个平台之下

2157
01:11:09,000 --> 01:11:10,000
基本上是一致的

2158
01:11:10,000 --> 01:11:11,000
在 sublime 里面

2159
01:11:11,000 --> 01:11:12,000
对

2160
01:11:12,000 --> 01:11:13,000
在 sublime 里面

2161
01:11:13,000 --> 01:11:16,000
很多快捷键在不同的平台之下

2162
01:11:16,000 --> 01:11:17,000
是不一样的

2163
01:11:17,000 --> 01:11:18,000
Windows 和 Linux 比较像

2164
01:11:18,000 --> 01:11:19,000
但是 Mac 下面

2165
01:11:19,000 --> 01:11:21,000
有那 command 键

2166
01:11:21,000 --> 01:11:22,000
对

2167
01:11:22,000 --> 01:11:26,000
就是快捷键其实差蛮多的

2168
01:11:26,000 --> 01:11:27,000
我最开始用 sublime 是在 Windows 下面

2169
01:11:27,000 --> 01:11:29,000
而且我觉得它的那个

2170
01:11:29,000 --> 01:11:30,000
就是它的那个

2171
01:11:30,000 --> 01:11:31,000
叫什么

2172
01:11:31,000 --> 01:11:33,000
图形界面的表达的元素

2173
01:11:33,000 --> 01:11:34,000
我觉得很

2174
01:11:34,000 --> 01:11:35,000
就是还挺原生的

2175
01:11:35,000 --> 01:11:37,000
但虽然说它的风格和

2176
01:11:37,000 --> 01:11:39,000
和这个 Mac 本身

2177
01:11:39,000 --> 01:11:40,000
Ostent 本身是不一样

2178
01:11:40,000 --> 01:11:43,000
但是我觉得就没有太违和感

2179
01:11:43,000 --> 01:11:45,000
这点跟后面要讲到的

2180
01:11:45,000 --> 01:11:46,000
那个什么 Eclipse 那支流

2181
01:11:46,000 --> 01:11:48,000
是差很大的

2182
01:11:48,000 --> 01:11:49,000
对

2183
01:11:49,000 --> 01:11:49,000
没错

2184
01:11:49,000 --> 01:11:51,000
而且 sublime

2185
01:11:51,000 --> 01:11:55,000
如果各位还在苦于找不到一款

2186
01:11:55,000 --> 01:11:57,000
或者说各位刚学编程

2187
01:11:57,000 --> 01:12:00,000
现在还正要寻找一款适合

2188
01:12:00,000 --> 01:12:02,000
出学者编辑器的话

2189
01:12:02,000 --> 01:12:03,000
我觉得 sublime text

2190
01:12:03,000 --> 01:12:04,000
其实是非常好

2191
01:12:04,000 --> 01:12:06,000
虽然它要钱

2192
01:12:06,000 --> 01:12:07,000
但它不是一个免费的

2193
01:12:07,000 --> 01:12:09,000
它是对但你不

2194
01:12:09,000 --> 01:12:10,000
但你不交钱的话

2195
01:12:10,000 --> 01:12:12,000
它也只是时不时的跳出来一个

2196
01:12:12,000 --> 01:12:13,000
对话矿说

2197
01:12:13,000 --> 01:12:14,000
请你买吧

2198
01:12:14,000 --> 01:12:15,000
然后你按一下 ESA

2199
01:12:15,000 --> 01:12:16,000
它就消失了

2200
01:12:16,000 --> 01:12:17,000
对功能上没有任何阉割

2201
01:12:17,000 --> 01:12:19,000
时间上也没有限制

2202
01:12:19,000 --> 01:12:21,000
唯一就是让你会有点小不爽

2203
01:12:21,000 --> 01:12:24,000
对是一个非常非常友善的编辑器

2204
01:12:24,000 --> 01:12:25,000
它还有什么新版本了

2205
01:12:25,000 --> 01:12:26,000
对吧

2206
01:12:26,000 --> 01:12:27,000
现在是有 3 了

2207
01:12:27,000 --> 01:12:28,000
对 sublime text

2208
01:12:28,000 --> 01:12:29,000
现在处于 2

2209
01:12:29,000 --> 01:12:30,000
就像 Python 一样

2210
01:12:30,000 --> 01:12:32,000
处于 2 和 3 的割裂状态

2211
01:12:32,000 --> 01:12:33,000
它怎么一回事

2212
01:12:33,000 --> 01:12:34,000
就是说新版本还没有

2213
01:12:34,000 --> 01:12:35,000
就不够好吗

2214
01:12:35,000 --> 01:12:38,000
还是 sublime text

2215
01:12:38,000 --> 01:12:38,000
2

2216
01:12:38,000 --> 01:12:41,000
算是第一次发明的轮子

2217
01:12:41,000 --> 01:12:43,000
然后作者觉得

2218
01:12:43,000 --> 01:12:44,000
还是不够好

2219
01:12:44,000 --> 01:12:46,000
所以要重启物造再写一遍

2220
01:12:46,000 --> 01:12:48,000
那 sublime 1 是长怎么样子

2221
01:12:48,000 --> 01:12:49,000
这我还真不知道

2222
01:12:49,000 --> 01:12:51,000
我也是从 2 开始

2223
01:12:51,000 --> 01:12:52,000
对我没有见过 1 长

2224
01:12:52,000 --> 01:12:53,000
估计不是太好

2225
01:12:53,000 --> 01:12:54,000
应该

2226
01:12:54,000 --> 01:12:54,000
对

2227
01:12:54,000 --> 01:12:57,000
另外一个比较老牌的编辑器

2228
01:12:57,000 --> 01:12:58,000
可能很多用户

2229
01:12:58,000 --> 01:13:00,000
对 Mac 用户可能都用过

2230
01:13:00,000 --> 01:13:01,000
叫做 Textmate

2231
01:13:01,000 --> 01:13:03,000
对我也用过

2232
01:13:03,000 --> 01:13:06,000
但时间不是很长

2233
01:13:06,000 --> 01:13:06,000
对

2234
01:13:06,000 --> 01:13:07,000
它最早的时候

2235
01:13:07,000 --> 01:13:09,000
就 Textmate 1 的时候

2236
01:13:09,000 --> 01:13:10,000
它也是一个付费软件

2237
01:13:10,000 --> 01:13:11,000
而且价格还不便宜

2238
01:13:11,000 --> 01:13:13,000
我记得

2239
01:13:13,000 --> 01:13:13,000
就是好像

2240
01:13:13,000 --> 01:13:15,000
不是 80 多刀

2241
01:13:15,000 --> 01:13:16,000
还是多少钱

2242
01:13:16,000 --> 01:13:17,000
就是我就是反正至少是多

2243
01:13:17,000 --> 01:13:19,000
好像 60 欧左右吧

2244
01:13:19,000 --> 01:13:20,000
应该是

2245
01:13:20,000 --> 01:13:20,000
对

2246
01:13:20,000 --> 01:13:21,000
你买了吗

2247
01:13:21,000 --> 01:13:22,000
我没有买

2248
01:13:22,000 --> 01:13:23,000
我也没有

2249
01:13:23,000 --> 01:13:25,000
然后后来那个作者

2250
01:13:25,000 --> 01:13:27,000
好像也是因为卖这个编辑器赚的

2251
01:13:27,000 --> 01:13:29,000
听说是赚翻了

2252
01:13:29,000 --> 01:13:30,000
然后也就没有什么动力

2253
01:13:30,000 --> 01:13:31,000
再写二版

2254
01:13:31,000 --> 01:13:32,000
后来他就干脆把二版

2255
01:13:32,000 --> 01:13:34,000
做了一半的二版的这个代码

2256
01:13:34,000 --> 01:13:36,000
就是公开源了

2257
01:13:36,000 --> 01:13:36,000
然后

2258
01:13:36,000 --> 01:13:39,000
但现在是一个社区维护的一个编辑器

2259
01:13:39,000 --> 01:13:42,000
现在是出了 2 的 beta

2260
01:13:42,000 --> 01:13:43,000
6 还是 7 了吧

2261
01:13:43,000 --> 01:13:44,000
应该是

2262
01:13:44,000 --> 01:13:45,000
就快快要正式发布了

2263
01:13:45,000 --> 01:13:47,000
然后现在是一个变成一个免费

2264
01:13:47,000 --> 01:13:49,000
并且开源的一个编辑器

2265
01:13:49,000 --> 01:13:51,000
所以如果你是 Mac 用户

2266
01:13:51,000 --> 01:13:55,000
然后你也想试一下这个经典传统的这个编辑器的话

2267
01:13:55,000 --> 01:13:56,000
你可以试试这个

2268
01:13:56,000 --> 01:14:00,000
因为有很多所谓的资深 Mac 开发者

2269
01:14:00,000 --> 01:14:02,000
也是对这个什么

2270
01:14:02,000 --> 01:14:04,000
Taxmate 的死忠嘛

2271
01:14:04,000 --> 01:14:05,000
对

2272
01:14:05,000 --> 01:14:08,000
甚至你去找一些比较早的

2273
01:14:08,000 --> 01:14:11,000
早期的 Rails 的那个 screencast

2274
01:14:11,000 --> 01:14:12,000
对对

2275
01:14:12,000 --> 01:14:15,000
几乎每一个 Rails 的开发者都在用 Taxmate

2276
01:14:15,000 --> 01:14:17,000
好像 Taxmate 活起来

2277
01:14:17,000 --> 01:14:19,000
也就是因为那个 DHH

2278
01:14:19,000 --> 01:14:19,000
DHH

2279
01:14:19,000 --> 01:14:20,000
对吧

2280
01:14:20,000 --> 01:14:21,000
Devi

2281
01:14:21,000 --> 01:14:23,000
Hampson

2282
01:14:23,000 --> 01:14:25,000
对对对

2283
01:14:25,000 --> 01:14:26,000
我只记得他用 DHH

2284
01:14:26,000 --> 01:14:28,000
就是那个 Rails 的

2285
01:14:28,000 --> 01:14:28,000
Rails 的作者

2286
01:14:28,000 --> 01:14:31,000
因为他一直用 Taxmate

2287
01:14:31,000 --> 01:14:33,000
然后导致了很多危机

2288
01:14:33,000 --> 01:14:35,000
他做了很多这个叫什么

2289
01:14:35,000 --> 01:14:35,000
那个

2290
01:14:35,000 --> 01:14:39,000
就 Rails 的 screencast

2291
01:14:39,000 --> 01:14:40,000
就是视频的节目

2292
01:14:40,000 --> 01:14:42,000
然后里面都都当时出来的时候

2293
01:14:42,000 --> 01:14:45,000
大家就我其实也是因为那个被惊艳到

2294
01:14:45,000 --> 01:14:48,000
就当时他用了一个配色吧

2295
01:14:48,000 --> 01:14:49,000
所以是 Taxmate 自带的一个配色

2296
01:14:49,000 --> 01:14:50,000
好像是这样

2297
01:14:50,000 --> 01:14:52,000
然后显示那个 Ruby 的代码

2298
01:14:52,000 --> 01:14:56,000
你知道 Ruby 的代码的本来也比较好看嘛

2299
01:14:56,000 --> 01:14:57,000
然后再加上那个漂亮的语法高亮

2300
01:14:57,000 --> 01:14:59,000
再加上一个长得很漂亮的编辑器

2301
01:14:59,000 --> 01:15:01,000
大家都觉得哇

2302
01:15:01,000 --> 01:15:01,000
这个好漂亮

2303
01:15:01,000 --> 01:15:02,000
什么赶快去买

2304
01:15:02,000 --> 01:15:04,000
然后也就 Taxmate

2305
01:15:04,000 --> 01:15:06,000
也就是好像应该在我印象中也是从那里火起来的

2306
01:15:06,000 --> 01:15:07,000
没错

2307
01:15:07,000 --> 01:15:12,000
对 Ruby 就是这样吸引了一大群外协会的程序

2308
01:15:12,000 --> 01:15:14,000
完了完了

2309
01:15:14,000 --> 01:15:15,000
我也是外协会的

2310
01:15:15,000 --> 01:15:15,000
好惨

2311
01:15:15,000 --> 01:15:19,000
我觉得其实多少有点是有点这样

2312
01:15:19,000 --> 01:15:20,000
对

2313
01:15:20,000 --> 01:15:22,000
这个故事说明一个什么道理

2314
01:15:22,000 --> 01:15:23,000
就是哪怕你是做一个

2315
01:15:23,000 --> 01:15:26,000
这甚至不是一个科技产品

2316
01:15:26,000 --> 01:15:28,000
你是一个纯粹的工具

2317
01:15:28,000 --> 01:15:32,000
你也是要考虑它的这个所谓的 design

2318
01:15:32,000 --> 01:15:33,000
这个外观怎么样

2319
01:15:33,000 --> 01:15:34,000
如果你外观不好看

2320
01:15:34,000 --> 01:15:35,000
你做的再好

2321
01:15:35,000 --> 01:15:36,000
可能在推广

2322
01:15:36,000 --> 01:15:38,000
或者是 marketing 的时候都没有

2323
01:15:38,000 --> 01:15:39,000
会不会有很大的阻力吧

2324
01:15:39,000 --> 01:15:40,000
我觉得

2325
01:15:40,000 --> 01:15:41,000
对

2326
01:15:41,000 --> 01:15:42,000
我觉得

2327
01:15:42,000 --> 01:15:43,000
对说到这件事情

2328
01:15:43,000 --> 01:15:46,000
我就想起来之所以我很讨厌 C++

2329
01:15:46,000 --> 01:15:51,000
甚至是一种非理性的讨厌 C++

2330
01:15:51,000 --> 01:15:55,000
部分原因也是因为在刚刚接触 Visual Basic

2331
01:15:55,000 --> 01:15:57,000
就是微软 Visual Basic

2332
01:15:57,000 --> 01:15:58,000
C++的时候

2333
01:15:58,000 --> 01:16:00,000
不是 Visual Basic

2334
01:16:00,000 --> 01:16:00,000
C++

2335
01:16:00,000 --> 01:16:02,000
Visual Studio

2336
01:16:02,000 --> 01:16:03,000
C++

2337
01:16:03,000 --> 01:16:03,000
Visual

2338
01:16:03,000 --> 01:16:04,000
就叫 Visual C++吧

2339
01:16:04,000 --> 01:16:05,000
应该那个时候

2340
01:16:05,000 --> 01:16:06,000
VC

2341
01:16:06,000 --> 01:16:07,000
对好像应该是

2342
01:16:07,000 --> 01:16:07,000
对

2343
01:16:07,000 --> 01:16:09,000
Visual C++6.0 的时候

2344
01:16:09,000 --> 01:16:13,000
它的那个用的那只字体是 Fixed Sys

2345
01:16:13,000 --> 01:16:14,000
Fixed System

2346
01:16:14,000 --> 01:16:15,000
我觉得

2347
01:16:15,000 --> 01:16:16,000
我靠

2348
01:16:16,000 --> 01:16:18,000
怎么一个写程序的界面

2349
01:16:18,000 --> 01:16:19,000
可以用这么丑的字体

2350
01:16:19,000 --> 01:16:21,000
你觉得那个 Fixed 很丑吗

2351
01:16:21,000 --> 01:16:23,000
我当时觉得相当丑

2352
01:16:23,000 --> 01:16:27,000
我这里要自爆一下黑历史

2353
01:16:27,000 --> 01:16:28,000
当时我觉得

2354
01:16:28,000 --> 01:16:29,000
我觉得那个还就是

2355
01:16:29,000 --> 01:16:33,000
因为当时在 Windows 上面可选的等宽字体有限

2356
01:16:33,000 --> 01:16:36,000
也不像现在说大家都很都可以选

2357
01:16:36,000 --> 01:16:37,000
首先那个 Windows 本来

2358
01:16:37,000 --> 01:16:38,000
那个字体渗量就比较糟糕

2359
01:16:38,000 --> 01:16:41,000
而且就是非那个时候还肯定是非 Riton 的屏幕

2360
01:16:41,000 --> 01:16:43,000
什么 640 乘以 480 的分辨率

2361
01:16:43,000 --> 01:16:45,000
就基本上都是那种所谓像素字体

2362
01:16:45,000 --> 01:16:50,000
然后在当时问的上面仅有的那些字体里面

2363
01:16:50,000 --> 01:16:51,000
我觉得 Fixed System

2364
01:16:51,000 --> 01:16:54,000
是暗示一个还能看不错的了吧

2365
01:16:54,000 --> 01:16:56,000
不然你还有什么选 Coreal 吗

2366
01:16:56,000 --> 01:16:57,000
Coreal

2367
01:16:57,000 --> 01:16:59,000
那不就更丑了

2368
01:16:59,000 --> 01:17:00,000
我觉得 Coreal 很漂亮

2369
01:17:00,000 --> 01:17:01,000
那个时候

2370
01:17:01,000 --> 01:17:03,000
Coreal 的那个 0 和欧都是分不清楚的

2371
01:17:03,000 --> 01:17:10,000
我是用我曾经用过 Georgia 做变成字体

2372
01:17:10,000 --> 01:17:10,000
What

2373
01:17:10,000 --> 01:17:11,000
为了好看对

2374
01:17:11,000 --> 01:17:14,000
为了好看选择 Georgia 做变成字体

2375
01:17:14,000 --> 01:17:15,000
OK

2376
01:17:15,000 --> 01:17:15,000
哇

2377
01:17:15,000 --> 01:17:18,000
你现在还是很早以前就践行过非等宽字体了

2378
01:17:18,000 --> 01:17:19,000
这个还是挺先锋的

2379
01:17:19,000 --> 01:17:23,000
年少轻狂

2380
01:17:23,000 --> 01:17:24,000
扯远了

2381
01:17:24,000 --> 01:17:26,000
我也年轻过

2382
01:17:26,000 --> 01:17:28,000
对

2383
01:17:28,000 --> 01:17:28,000
所以

2384
01:17:28,000 --> 01:17:30,000
可以看看讲哪里了

2385
01:17:30,000 --> 01:17:31,000
Fixed

2386
01:17:31,000 --> 01:17:32,000
对继续说吧

2387
01:17:32,000 --> 01:17:33,000
反正扯远扯远

2388
01:17:33,000 --> 01:17:34,000
Fixed System

2389
01:17:34,000 --> 01:17:35,000
一个优点是

2390
01:17:35,000 --> 01:17:39,000
它和送体一起显示的时候

2391
01:17:39,000 --> 01:17:40,000
一个 2 比 1 的关系

2392
01:17:40,000 --> 01:17:40,000
对

2393
01:17:40,000 --> 01:17:42,000
正好是 2 比 1 的关系

2394
01:17:42,000 --> 01:17:43,000
然后我看这个编辑里面

2395
01:17:43,000 --> 01:17:45,000
我靠英文是 Fixed System

2396
01:17:45,000 --> 01:17:46,000
然后中文动不动出来什么

2397
01:17:46,000 --> 01:17:47,000
烫烫烫烫烫

2398
01:17:47,000 --> 01:17:50,000
What the fuck is this

2399
01:17:50,000 --> 01:17:52,000
我想起我为什么喜欢那个 Fixed System

2400
01:17:52,000 --> 01:17:54,000
这个字体了

2401
01:17:54,000 --> 01:17:54,000
当时

2402
01:17:54,000 --> 01:17:57,000
因为一些莫名其妙的原因

2403
01:17:57,000 --> 01:17:58,000
我在一个

2404
01:17:58,000 --> 01:17:59,000
做

2405
01:17:59,000 --> 01:18:02,000
就是专注于做嵌入式系统的论坛

2406
01:18:02,000 --> 01:18:03,000
上应该叫 C 51 吧

2407
01:18:03,000 --> 01:18:03,000
我记得

2408
01:18:03,000 --> 01:18:04,000
这个 C 51 论坛

2409
01:18:04,000 --> 01:18:05,000
啊

2410
01:18:05,000 --> 01:18:05,000
512 芯片

2411
01:18:05,000 --> 01:18:06,000
对对对

2412
01:18:06,000 --> 01:18:07,000
512 单片机

2413
01:18:07,000 --> 01:18:08,000
你也上过

2414
01:18:08,000 --> 01:18:09,000
当时我在当中看

2415
01:18:09,000 --> 01:18:10,000
我没上过这个

2416
01:18:10,000 --> 01:18:12,000
但是你一说 512 呢

2417
01:18:12,000 --> 01:18:13,000
又是芯片的

2418
01:18:13,000 --> 01:18:14,000
只能是 512 单片机

2419
01:18:14,000 --> 01:18:14,000
对

2420
01:18:14,000 --> 01:18:15,000
那个应该是在 9

2421
01:18:15,000 --> 01:18:17,000
我想想应该是 98

2422
01:18:17,000 --> 01:18:18,000
或者 99 年的时候

2423
01:18:18,000 --> 01:18:21,000
然后当时我去那个 CVC 上

2424
01:18:21,000 --> 01:18:23,000
看到有一个人贴了一个

2425
01:18:23,000 --> 01:18:25,000
现在我们回过头去看

2426
01:18:25,000 --> 01:18:27,000
应该是叫一个 screencast 的一个东西

2427
01:18:27,000 --> 01:18:29,000
但现在 screencast 都是一个录制屏幕嘛

2428
01:18:29,000 --> 01:18:30,000
用一个视频的方式来做

2429
01:18:30,000 --> 01:18:32,000
他那也是 screencast

2430
01:18:32,000 --> 01:18:34,000
不过他那个时间方式非常奇怪

2431
01:18:34,000 --> 01:18:36,000
他也是录制屏幕上一个人在讲

2432
01:18:36,000 --> 01:18:42,000
然后那个他那个软件不是我们现在一个视频文件

2433
01:18:42,000 --> 01:18:42,000
它是一个特殊的一个

2434
01:18:42,000 --> 01:18:46,000
可是感觉就是一帧一帧放这个屏幕的截图

2435
01:18:46,000 --> 01:18:46,000
这种感觉

2436
01:18:46,000 --> 01:18:47,000
而且压缩的还蛮好的

2437
01:18:47,000 --> 01:18:49,000
啊

2438
01:18:49,000 --> 01:18:49,000
anyway

2439
01:18:49,000 --> 01:18:54,000
然后就是有一个人在展示他怎么用一个那个什么

2440
01:18:54,000 --> 01:18:55,000
我忘了一个是波兰还是什么

2441
01:18:55,000 --> 01:18:56,000
一个开发器

2442
01:18:56,000 --> 01:19:01,000
开发这个用 C 语言写这个嵌入式代码

2443
01:19:01,000 --> 01:19:03,000
然后他当时用的那个字体的

2444
01:19:03,000 --> 01:19:04,000
那个编辑的字体就是那个 fake system

2445
01:19:04,000 --> 01:19:06,000
Cold Warrior

2446
01:19:06,000 --> 01:19:07,000
我会不会

2447
01:19:07,000 --> 01:19:08,000
应该不是

2448
01:19:08,000 --> 01:19:09,000
应该没有那么

2449
01:19:09,000 --> 01:19:10,000
那个时候后来才有

2450
01:19:10,000 --> 01:19:11,000
应该很老的一个编辑

2451
01:19:11,000 --> 01:19:12,000
我也想一下想不起

2452
01:19:12,000 --> 01:19:13,000
anyway

2453
01:19:13,000 --> 01:19:14,000
这个不是重点

2454
01:19:14,000 --> 01:19:16,000
重点是那个人的声音超好听

2455
01:19:16,000 --> 01:19:17,000
Oh my god

2456
01:19:17,000 --> 01:19:19,000
然后因为那个时候我完全不懂编程

2457
01:19:19,000 --> 01:19:20,000
我那个时候还在

2458
01:19:20,000 --> 01:19:22,000
就是就就就

2459
01:19:22,000 --> 01:19:24,000
因为还没有上那个编程课也

2460
01:19:24,000 --> 01:19:24,000
不知道什么

2461
01:19:24,000 --> 01:19:26,000
就是只是看了好奇

2462
01:19:26,000 --> 01:19:26,000
有这么一个东西

2463
01:19:26,000 --> 01:19:28,000
就觉得挺有意思的

2464
01:19:28,000 --> 01:19:28,000
就是我对

2465
01:19:28,000 --> 01:19:29,000
而且我对千诺

2466
01:19:29,000 --> 01:19:29,000
我到现在为止

2467
01:19:29,000 --> 01:19:31,000
都对嵌入式开发都一点

2468
01:19:31,000 --> 01:19:33,000
门路都没有摸着的

2469
01:19:33,000 --> 01:19:34,000
但是就是因为看了编辑

2470
01:19:34,000 --> 01:19:35,000
那个人的声音好听

2471
01:19:35,000 --> 01:19:37,000
我把那个视频反而看了 50 遍

2472
01:19:37,000 --> 01:19:39,000
Oh my god

2473
01:19:39,000 --> 01:19:40,000
你不仅是外卖学会

2474
01:19:40,000 --> 01:19:41,000
你还是声音卖会

2475
01:19:41,000 --> 01:19:42,000
声控声控

2476
01:19:42,000 --> 01:19:43,000
不好意思

2477
01:19:43,000 --> 01:19:44,000
而且而且他那个

2478
01:19:44,000 --> 01:19:46,000
我怀疑那个人用的是一款

2479
01:19:46,000 --> 01:19:47,000
机械键盘

2480
01:19:47,000 --> 01:19:49,000
就是他在

2481
01:19:49,000 --> 01:19:51,000
或者说他不是选择用机械键盘

2482
01:19:51,000 --> 01:19:53,000
而是那个时代只有机械键盘

2483
01:19:53,000 --> 01:19:53,000
有可能

2484
01:19:53,000 --> 01:19:55,000
就是他在解说的过程

2485
01:19:55,000 --> 01:19:57,000
他会边解说边敲那个

2486
01:19:57,000 --> 01:19:58,000
那个听着边写代码

2487
01:19:58,000 --> 01:19:59,000
然后那个声音

2488
01:19:59,000 --> 01:20:00,000
咔咔作响

2489
01:20:00,000 --> 01:20:02,000
又很清脆又超好听

2490
01:20:02,000 --> 01:20:03,000
然后那个人的声线又很好

2491
01:20:03,000 --> 01:20:04,000
就是

2492
01:20:04,000 --> 01:20:06,000
其实后来我想的

2493
01:20:06,000 --> 01:20:07,000
其实也不一定是那个人声线

2494
01:20:07,000 --> 01:20:08,000
就是刚好可能他

2495
01:20:08,000 --> 01:20:09,000
他那个某一个频段

2496
01:20:09,000 --> 01:20:11,000
刚好对我来说比较有吸引力

2497
01:20:11,000 --> 01:20:13,000
就是听着好爽

2498
01:20:13,000 --> 01:20:14,000
是语的吗

2499
01:20:14,000 --> 01:20:19,000
一个比较浑厚的男生的声音

2500
01:20:19,000 --> 01:20:20,000
OK

2501
01:20:20,000 --> 01:20:20,000
我就哇

2502
01:20:20,000 --> 01:20:21,000
这个声音太好听了

2503
01:20:21,000 --> 01:20:24,000
反复听了我视频

2504
01:20:24,000 --> 01:20:25,000
我现在找不到那个文件了

2505
01:20:25,000 --> 01:20:26,000
我能找出来

2506
01:20:26,000 --> 01:20:28,000
都可以把它录下来给你们听一下

2507
01:20:28,000 --> 01:20:29,000
但是非常抱歉

2508
01:20:29,000 --> 01:20:31,000
系统天移过很多年了

2509
01:20:31,000 --> 01:20:32,000
已经找不到那个

2510
01:20:32,000 --> 01:20:32,000
不知道

2511
01:20:32,000 --> 01:20:34,000
不知道有没有是 5123 的

2512
01:20:34,000 --> 01:20:36,000
自身用户

2513
01:20:36,000 --> 01:20:37,000
听到我们的节目之后

2514
01:20:37,000 --> 01:20:39,000
可以找到这篇视频

2515
01:20:39,000 --> 01:20:40,000
我许多他找到

2516
01:20:40,000 --> 01:20:41,000
我不一定能放得了

2517
01:20:41,000 --> 01:20:42,000
他那个是一个

2518
01:20:42,000 --> 01:20:43,000
应该是一个

2519
01:20:43,000 --> 01:20:45,000
可以执行的一个东西

2520
01:20:45,000 --> 01:20:46,000
就是他自己

2521
01:20:46,000 --> 01:20:47,000
What

2522
01:20:47,000 --> 01:20:48,000
你小小年纪

2523
01:20:48,000 --> 01:20:50,000
对于信息安全

2524
01:20:50,000 --> 01:20:50,000
这么没有

2525
01:20:50,000 --> 01:20:51,000
不不

2526
01:20:51,000 --> 01:20:51,000
他不是

2527
01:20:51,000 --> 01:20:52,000
他这个也就是

2528
01:20:52,000 --> 01:20:53,000
他

2529
01:20:53,000 --> 01:20:54,000
那个时候

2530
01:20:54,000 --> 01:20:55,000
Windows 上很多

2531
01:20:55,000 --> 01:20:55,000
都是这种东西

2532
01:20:55,000 --> 01:20:56,000
因为没有这个

2533
01:20:56,000 --> 01:20:58,000
通用的播放器

2534
01:20:58,000 --> 01:21:00,000
很多那种特殊的媒体格式

2535
01:21:00,000 --> 01:21:02,000
都是自带一个播放器来的

2536
01:21:02,000 --> 01:21:05,000
就打包成一个 EXE 文件来的

2537
01:21:05,000 --> 01:21:06,000
但是那个时候也不懂安全

2538
01:21:06,000 --> 01:21:06,000
什么

2539
01:21:06,000 --> 01:21:09,000
重病毒是常有的

2540
01:21:09,000 --> 01:21:09,000
现在想想那个时候

2541
01:21:09,000 --> 01:21:09,000
真的是

2542
01:21:09,000 --> 01:21:10,000
很傻很天真

2543
01:21:10,000 --> 01:21:12,000
病毒基本上为所欲为

2544
01:21:12,000 --> 01:21:13,000
现在也是

2545
01:21:13,000 --> 01:21:14,000
Windows 上面

2546
01:21:14,000 --> 01:21:16,000
可能还好一些

2547
01:21:16,000 --> 01:21:17,000
安全上

2548
01:21:17,000 --> 01:21:18,000
大家还是挺注重

2549
01:21:18,000 --> 01:21:19,000
但是相信

2550
01:21:19,000 --> 01:21:20,000
那个时候应该是

2551
01:21:20,000 --> 01:21:21,000
Windows 95

2552
01:21:21,000 --> 01:21:22,000
对我没记错的话

2553
01:21:22,000 --> 01:21:24,000
肯定是没有这个概念的

2554
01:21:24,000 --> 01:21:24,000
对

2555
01:21:24,000 --> 01:21:27,000
讲哪里

2556
01:21:27,000 --> 01:21:30,000
讲到 TextMate

2557
01:21:30,000 --> 01:21:30,000
对

2558
01:21:30,000 --> 01:21:31,000
Fixed

2559
01:21:31,000 --> 01:21:31,000
对

2560
01:21:31,000 --> 01:21:33,000
还有一个是

2561
01:21:33,000 --> 01:21:35,000
这是你写的

2562
01:21:35,000 --> 01:21:35,000
Chocolate

2563
01:21:35,000 --> 01:21:37,000
这个我其实用的很少

2564
01:21:37,000 --> 01:21:39,000
但我有听说过

2565
01:21:39,000 --> 01:21:39,000
对

2566
01:21:39,000 --> 01:21:41,000
我不知道

2567
01:21:41,000 --> 01:21:43,000
我不确定他应该念什么

2568
01:21:43,000 --> 01:21:43,000
因为他

2569
01:21:43,000 --> 01:21:44,000
没有那个意义的

2570
01:21:44,000 --> 01:21:45,000
他的拼法是

2571
01:21:45,000 --> 01:21:47,000
C-H-O-C-O-L-A-T

2572
01:21:47,000 --> 01:21:48,000
就是法语的拼法

2573
01:21:48,000 --> 01:21:48,000
Chocolate

2574
01:21:48,000 --> 01:21:50,000
Chocolate

2575
01:21:50,000 --> 01:21:52,000
而不是英语的 Chocolate

2576
01:21:52,000 --> 01:21:54,000
我所有怀疑他是不是念

2577
01:21:54,000 --> 01:21:55,000
Chocolate

2578
01:21:55,000 --> 01:21:56,000
那我们先

2579
01:21:56,000 --> 01:21:57,000
就姑且这样念吧

2580
01:21:57,000 --> 01:21:57,000
对

2581
01:21:57,000 --> 01:21:58,000
就是巧克力编辑器

2582
01:21:58,000 --> 01:22:00,000
巧克力编辑器

2583
01:22:00,000 --> 01:22:01,000
是一个

2584
01:22:01,000 --> 01:22:03,000
号称要做

2585
01:22:03,000 --> 01:22:05,000
The Default Native OS

2586
01:22:05,000 --> 01:22:05,000
T-Edit

2587
01:22:05,000 --> 01:22:07,000
的一个编辑器

2588
01:22:07,000 --> 01:22:07,000
好像没做成

2589
01:22:07,000 --> 01:22:09,000
而且他也是要钱的

2590
01:22:09,000 --> 01:22:11,000
而且他只有 15 天的试用期

2591
01:22:11,000 --> 01:22:11,000
OK

2592
01:22:11,000 --> 01:22:12,000
嗯

2593
01:22:12,000 --> 01:22:14,000
但是

2594
01:22:14,000 --> 01:22:17,000
基本上很多用户都会觉得

2595
01:22:17,000 --> 01:22:22,000
他是更加像 TextMate 的一个编辑器

2596
01:22:22,000 --> 01:22:23,000
一个 Clone

2597
01:22:23,000 --> 01:22:23,000
对吧

2598
01:22:23,000 --> 01:22:24,000
对

2599
01:22:24,000 --> 01:22:27,000
有一点点像 TextMate 的精神继承者

2600
01:22:27,000 --> 01:22:30,000
就是他有一批核心的功能做得非常好

2601
01:22:30,000 --> 01:22:32,000
做得非常的实用

2602
01:22:32,000 --> 01:22:36,000
但是除此之外可扩展性并不是很好

2603
01:22:36,000 --> 01:22:39,000
因为 Sublime Text 的一大优点

2604
01:22:39,000 --> 01:22:42,000
就是 Sublime Text 有一大批

2605
01:22:42,000 --> 01:22:45,000
非常优良的插件可以用

2606
01:22:45,000 --> 01:22:46,000
而且有内置的

2607
01:22:46,000 --> 01:22:47,000
也不是内置的

2608
01:22:47,000 --> 01:22:49,000
就是有一个插件管理器可以安装

2609
01:22:49,000 --> 01:22:51,000
但是 Chocolate

2610
01:22:51,000 --> 01:22:52,000
Chocolate

2611
01:22:52,000 --> 01:22:53,000
Chocolate 编辑器

2612
01:22:53,000 --> 01:22:55,000
在至少就我而已

2613
01:22:55,000 --> 01:22:57,000
就我所知是没有

2614
01:22:57,000 --> 01:22:58,000
嗯

2615
01:22:58,000 --> 01:23:01,000
但他仍旧是一个相当成熟的编辑器

2616
01:23:01,000 --> 01:23:05,000
我印象中用这个巧克力编辑器的人

2617
01:23:05,000 --> 01:23:06,000
似乎从那个什么

2618
01:23:06,000 --> 01:23:08,000
在 web 开发的比较多

2619
01:23:08,000 --> 01:23:09,000
就是做什么

2620
01:23:09,000 --> 01:23:11,000
写 CSS 啊

2621
01:23:11,000 --> 01:23:12,000
写 HTML 代码的

2622
01:23:12,000 --> 01:23:13,000
好像用的比较多

2623
01:23:13,000 --> 01:23:15,000
但是用它来编程的我还

2624
01:23:15,000 --> 01:23:16,000
我见到人不是特别多

2625
01:23:16,000 --> 01:23:17,000
反正

2626
01:23:17,000 --> 01:23:20,000
好像的确如此

2627
01:23:20,000 --> 01:23:22,000
因为我自己也只是

2628
01:23:22,000 --> 01:23:26,000
大概用过那么一两天吧

2629
01:23:26,000 --> 01:23:26,000
嗯

2630
01:23:26,000 --> 01:23:27,000
就长线一样

2631
01:23:27,000 --> 01:23:28,000
用了一两天

2632
01:23:28,000 --> 01:23:30,000
然后下次再想起来的时候

2633
01:23:30,000 --> 01:23:31,000
那个已经过期了

2634
01:23:31,000 --> 01:23:32,000
然后就删了

2635
01:23:32,000 --> 01:23:32,000
对

2636
01:23:32,000 --> 01:23:34,000
所以他这个口号不对

2637
01:23:34,000 --> 01:23:35,000
你要做什么

2638
01:23:35,000 --> 01:23:36,000
这个默认编辑器

2639
01:23:36,000 --> 01:23:37,000
你要收费

2640
01:23:37,000 --> 01:23:38,000
那肯定是做不到的

2641
01:23:38,000 --> 01:23:39,000
嗯

2642
01:23:39,000 --> 01:23:40,000
对

2643
01:23:40,000 --> 01:23:41,000
刚刚我们讲了那么多

2644
01:23:41,000 --> 01:23:42,000
都是 Mac 上面的编辑器啊

2645
01:23:42,000 --> 01:23:43,000
现在比较流行

2646
01:23:43,000 --> 01:23:44,000
Wonder 上面有什么

2647
01:23:44,000 --> 01:23:46,000
其实我现在已经不太清楚了

2648
01:23:46,000 --> 01:23:47,000
嗯

2649
01:23:47,000 --> 01:23:49,000
我也不是很清楚了

2650
01:23:49,000 --> 01:23:51,000
但我记得有一个叫做那个

2651
01:23:51,000 --> 01:23:53,000
有两个吧

2652
01:23:53,000 --> 01:23:54,000
一个叫做 Ultra Edit

2653
01:23:54,000 --> 01:23:55,000
这个以前

2654
01:23:55,000 --> 01:23:57,000
这是一个付费软件

2655
01:23:57,000 --> 01:23:59,000
Ultra Edit 最早最早

2656
01:23:59,000 --> 01:24:02,000
我是用来修改二进制文件

2657
01:24:02,000 --> 01:24:02,000
然后改什么

2658
01:24:02,000 --> 01:24:03,000
文件之类的

2659
01:24:03,000 --> 01:24:05,000
那个时候一定要用 Ultra Edit

2660
01:24:05,000 --> 01:24:05,000
对

2661
01:24:05,000 --> 01:24:06,000
它有一个很方便的

2662
01:24:06,000 --> 01:24:07,000
那个 Hex mode 的编辑模式

2663
01:24:07,000 --> 01:24:08,000
对吧

2664
01:24:08,000 --> 01:24:08,000
对

2665
01:24:08,000 --> 01:24:10,000
就是如果你不知道的话

2666
01:24:10,000 --> 01:24:11,000
对

2667
01:24:11,000 --> 01:24:11,000
那个时候

2668
01:24:11,000 --> 01:24:13,000
就是我那个时候

2669
01:24:13,000 --> 01:24:15,000
因为不是还并不懂编程

2670
01:24:15,000 --> 01:24:17,000
只是想要改一下

2671
01:24:17,000 --> 01:24:18,000
玩游戏

2672
01:24:18,000 --> 01:24:20,000
然后赶紧过这一关的时候

2673
01:24:20,000 --> 01:24:21,000
造幣

2674
01:24:21,000 --> 01:24:23,000
产生这样的迷思

2675
01:24:23,000 --> 01:24:26,000
就是你要改 16 进制代码

2676
01:24:26,000 --> 01:24:27,000
就必须用 Hex Edit

2677
01:24:27,000 --> 01:24:27,000
不对

2678
01:24:27,000 --> 01:24:28,000
但是不是有一个什么

2679
01:24:28,000 --> 01:24:31,000
有是各种这种游戏的辅助工具

2680
01:24:31,000 --> 01:24:32,000
可以帮你改吗

2681
01:24:32,000 --> 01:24:33,000
就直接可以

2682
01:24:33,000 --> 01:24:34,000
DOS 下面有 PC tools

2683
01:24:34,000 --> 01:24:34,000
对

2684
01:24:34,000 --> 01:24:36,000
而且还有什么金山游侠

2685
01:24:36,000 --> 01:24:37,000
是不是你记不记得

2686
01:24:37,000 --> 01:24:40,000
金山游侠是改那村

2687
01:24:40,000 --> 01:24:40,000
对金山游侠

2688
01:24:40,000 --> 01:24:40,000
对

2689
01:24:40,000 --> 01:24:42,000
可是金山游侠出来

2690
01:24:42,000 --> 01:24:43,000
已经比 Hex Edit 晚很多

2691
01:24:43,000 --> 01:24:44,000
对

2692
01:24:44,000 --> 01:24:45,000
就是这一类的

2693
01:24:45,000 --> 01:24:47,000
就是专门改游戏的

2694
01:24:47,000 --> 01:24:48,000
就是在最开始的时候

2695
01:24:48,000 --> 01:24:48,000
我有的

2696
01:24:48,000 --> 01:24:49,000
我所有的迷思

2697
01:24:49,000 --> 01:24:51,000
就是在 Windows 下面

2698
01:24:51,000 --> 01:24:52,000
要改 16 进制的东西

2699
01:24:52,000 --> 01:24:53,000
就必须用 Hex Edit

2700
01:24:53,000 --> 01:24:53,000
对

2701
01:24:53,000 --> 01:24:55,000
还有一个

2702
01:24:55,000 --> 01:24:56,000
我不记得

2703
01:24:56,000 --> 01:24:58,000
你用 Hex Edit

2704
01:24:58,000 --> 01:24:59,000
写过程序吗

2705
01:24:59,000 --> 01:24:59,000
我没有

2706
01:24:59,000 --> 01:25:00,000
我很少用

2707
01:25:00,000 --> 01:25:02,000
我一直是想吐槽

2708
01:25:02,000 --> 01:25:03,000
为什么我不喜欢

2709
01:25:03,000 --> 01:25:03,000
那个

2710
01:25:03,000 --> 01:25:07,000
Ultra Edit

2711
01:25:07,000 --> 01:25:08,000
Ultra Edit 的一个原因

2712
01:25:08,000 --> 01:25:08,000
就是它上面

2713
01:25:08,000 --> 01:25:09,000
你如果打开

2714
01:25:09,000 --> 01:25:11,000
有一排的那个 Tool Bar

2715
01:25:11,000 --> 01:25:12,000
不三排的 Tool Bar

2716
01:25:12,000 --> 01:25:13,000
对

2717
01:25:13,000 --> 01:25:15,000
Ultra Edit 是一个非常像

2718
01:25:15,000 --> 01:25:17,000
把自己伪装成一个

2719
01:25:17,000 --> 01:25:18,000
IDE 的编辑器

2720
01:25:18,000 --> 01:25:19,000
对

2721
01:25:19,000 --> 01:25:20,000
就是我当时看

2722
01:25:20,000 --> 01:25:21,000
我就被震惊了

2723
01:25:21,000 --> 01:25:22,000
我说

2724
01:25:22,000 --> 01:25:22,000
哇

2725
01:25:22,000 --> 01:25:22,000
这什么

2726
01:25:22,000 --> 01:25:23,000
怎么这么多

2727
01:25:23,000 --> 01:25:25,000
然后因为在我印象中

2728
01:25:25,000 --> 01:25:26,000
如果你是一个编辑

2729
01:25:26,000 --> 01:25:27,000
你是一个文本编辑器

2730
01:25:27,000 --> 01:25:30,000
然后你还有三排的 Tool Bar

2731
01:25:30,000 --> 01:25:31,000
意思你是要鼓励我用鼠标

2732
01:25:31,000 --> 01:25:33,000
没错

2733
01:25:33,000 --> 01:25:34,000
然后那个时候

2734
01:25:34,000 --> 01:25:35,000
我已经是深信说

2735
01:25:35,000 --> 01:25:36,000
鼠标和键盘之间

2736
01:25:36,000 --> 01:25:38,000
相互一直切换起来

2737
01:25:38,000 --> 01:25:39,000
切换去是一个

2738
01:25:39,000 --> 01:25:41,000
非常低效的一个过程

2739
01:25:41,000 --> 01:25:42,000
没错

2740
01:25:42,000 --> 01:25:42,000
然后我觉得

2741
01:25:42,000 --> 01:25:43,000
这完全不能忍

2742
01:25:43,000 --> 01:25:45,000
说到 Ultra Edit

2743
01:25:45,000 --> 01:25:48,000
就是我之前在想说

2744
01:25:48,000 --> 01:25:51,000
你说编辑器和 IDE 之间的界限

2745
01:25:51,000 --> 01:25:52,000
到底在哪呢

2746
01:25:52,000 --> 01:25:53,000
我曾经一度想说

2747
01:25:53,000 --> 01:25:55,000
一个非常表面的现象

2748
01:25:55,000 --> 01:25:58,000
就是 IDE 一定是用 Splash Screen

2749
01:25:58,000 --> 01:25:59,000
就一定会

2750
01:25:59,000 --> 01:26:02,000
一上来给你一个启动图案的

2751
01:26:02,000 --> 01:26:03,000
但是反过来想

2752
01:26:03,000 --> 01:26:03,000
Ultra Edit

2753
01:26:03,000 --> 01:26:05,000
它明明是一个编辑器

2754
01:26:05,000 --> 01:26:06,000
可是它有一个 Splash Screen

2755
01:26:06,000 --> 01:26:08,000
我觉得是这样吧

2756
01:26:08,000 --> 01:26:09,000
就是如果你能在那个

2757
01:26:09,000 --> 01:26:10,000
编辑器里面完成

2758
01:26:10,000 --> 01:26:13,000
就是 Code Compile Debug

2759
01:26:13,000 --> 01:26:14,000
这个流程的

2760
01:26:14,000 --> 01:26:15,000
就算 IDE 了

2761
01:26:15,000 --> 01:26:17,000
那可是比如说

2762
01:26:17,000 --> 01:26:19,000
什么 Edit Plus 之类的东西

2763
01:26:19,000 --> 01:26:20,000
也是可以配置成这样

2764
01:26:20,000 --> 01:26:21,000
那你就是

2765
01:26:21,000 --> 01:26:23,000
你就是把它当成 IDE 再用了

2766
01:26:23,000 --> 01:26:24,000
其实我界定

2767
01:26:24,000 --> 01:26:24,000
它是不是 IDE

2768
01:26:24,000 --> 01:26:26,000
有一个地方

2769
01:26:26,000 --> 01:26:27,000
我觉得就

2770
01:26:27,000 --> 01:26:28,000
我一般用这个标准来判断

2771
01:26:28,000 --> 01:26:31,000
但是这个很土的一个标准

2772
01:26:31,000 --> 01:26:33,000
就是如果编译错了

2773
01:26:33,000 --> 01:26:34,000
它能不能够直接给我

2774
01:26:34,000 --> 01:26:35,000
跳到那个

2775
01:26:35,000 --> 01:26:37,000
说那条的行号那里去

2776
01:26:37,000 --> 01:26:38,000
或者给我高亮出来

2777
01:26:38,000 --> 01:26:40,000
有没有 Debug 功能

2778
01:26:40,000 --> 01:26:40,000
对

2779
01:26:40,000 --> 01:26:41,000
有没有动态追踪

2780
01:26:41,000 --> 01:26:43,000
就有没有那个 feedback

2781
01:26:43,000 --> 01:26:44,000
如果有的话

2782
01:26:44,000 --> 01:26:45,000
它就算 ID

2783
01:26:45,000 --> 01:26:46,000
但这个

2784
01:26:46,000 --> 01:26:47,000
这是一个不错的标准

2785
01:26:47,000 --> 01:26:49,000
但其实这个是很有问题的

2786
01:26:49,000 --> 01:26:50,000
因为现在比如说

2787
01:26:50,000 --> 01:26:51,000
我现在用那个

2788
01:26:51,000 --> 01:26:53,000
在 VIM 里面有一个插件

2789
01:26:53,000 --> 01:26:55,000
叫做叫什么来的

2790
01:26:55,000 --> 01:26:56,000
Syntactic

2791
01:26:56,000 --> 01:26:57,000
对对对

2792
01:26:57,000 --> 01:26:59,000
叫 Syntactic

2793
01:26:59,000 --> 01:27:01,000
就是那个插件

2794
01:27:01,000 --> 01:27:03,000
它会告诉你出错的地方的行号

2795
01:27:03,000 --> 01:27:04,000
然后我用一个

2796
01:27:04,000 --> 01:27:05,000
就是 Syntactical

2797
01:27:05,000 --> 01:27:05,000
可是那是一个

2798
01:27:05,000 --> 01:27:07,000
那是一个静态分析

2799
01:27:07,000 --> 01:27:07,000
对

2800
01:27:07,000 --> 01:27:07,000
它就是说

2801
01:27:07,000 --> 01:27:09,000
它严格来说

2802
01:27:09,000 --> 01:27:10,000
不算是一个

2803
01:27:10,000 --> 01:27:11,000
叫什么

2804
01:27:11,000 --> 01:27:14,000
动态追踪

2805
01:27:14,000 --> 01:27:15,000
对

2806
01:27:15,000 --> 01:27:16,000
就它并没有办法

2807
01:27:16,000 --> 01:27:18,000
很直接的告诉你

2808
01:27:18,000 --> 01:27:19,000
编译器告诉你的结果

2809
01:27:19,000 --> 01:27:21,000
它就是通过一个语法分析来做

2810
01:27:21,000 --> 01:27:24,000
但是现在也有一点界限很模糊的地方

2811
01:27:24,000 --> 01:27:25,000
就是比如说现在我写 go

2812
01:27:25,000 --> 01:27:27,000
然后我有一个 go 语言的插件

2813
01:27:27,000 --> 01:27:28,000
它会直接

2814
01:27:28,000 --> 01:27:29,000
因为 go 你保存的时候

2815
01:27:29,000 --> 01:27:33,000
它就会直接用 go 一个小工具

2816
01:27:33,000 --> 01:27:33,000
go format

2817
01:27:33,000 --> 01:27:33,000
对

2818
01:27:33,000 --> 01:27:35,000
它会默认检查

2819
01:27:35,000 --> 01:27:36,000
你那个是可不可以被编译的

2820
01:27:36,000 --> 01:27:37,000
就是有没有什么编译错误

2821
01:27:37,000 --> 01:27:38,000
因为 go 编译很快

2822
01:27:38,000 --> 01:27:39,000
这个其实也无所谓

2823
01:27:39,000 --> 01:27:41,000
然后就其实

2824
01:27:41,000 --> 01:27:42,000
如果按刚才那个定义来说

2825
01:27:42,000 --> 01:27:43,000
这也算是一个 ID 了

2826
01:27:43,000 --> 01:27:45,000
好像似乎也不太对

2827
01:27:45,000 --> 01:27:45,000
所以

2828
01:27:45,000 --> 01:27:47,000
所以我说刚才那个

2829
01:27:47,000 --> 01:27:47,000
只是我以前用的一个

2830
01:27:47,000 --> 01:27:49,000
很土的一个标准

2831
01:27:49,000 --> 01:27:51,000
对但起码有一点就是

2832
01:27:51,000 --> 01:27:53,000
你不可以在那个编译器里面

2833
01:27:53,000 --> 01:27:55,000
跑一个 compiler 之类的

2834
01:27:55,000 --> 01:27:57,000
所以那个编译器里面跑 compiler

2835
01:27:57,000 --> 01:27:58,000
所以那个还是不算

2836
01:27:58,000 --> 01:27:59,000
不算 ID

2837
01:27:59,000 --> 01:28:00,000
对

2838
01:28:00,000 --> 01:28:03,000
或者说更权威的那种方法

2839
01:28:03,000 --> 01:28:05,000
就是去这个工具的官方网站上

2840
01:28:05,000 --> 01:28:06,000
看他自己说什么

2841
01:28:06,000 --> 01:28:07,000
他照告诉

2842
01:28:07,000 --> 01:28:09,000
他会不会说这是一款 ID

2843
01:28:09,000 --> 01:28:10,000
如果是的话

2844
01:28:10,000 --> 01:28:10,000
好吧

2845
01:28:10,000 --> 01:28:11,000
那当他 ID 好

2846
01:28:11,000 --> 01:28:11,000
对

2847
01:28:11,000 --> 01:28:14,000
Windows 上面还有一个

2848
01:28:14,000 --> 01:28:15,000
我当时用的是一个

2849
01:28:15,000 --> 01:28:17,000
挺有意思的编辑器

2850
01:28:17,000 --> 01:28:19,000
叫 Scient

2851
01:28:19,000 --> 01:28:20,000
你还记得吗

2852
01:28:20,000 --> 01:28:21,000
啊

2853
01:28:21,000 --> 01:28:23,000
好像那个东西是和某一个

2854
01:28:23,000 --> 01:28:25,000
Python 的发行版

2855
01:28:25,000 --> 01:28:26,000
一起打包发布的

2856
01:28:26,000 --> 01:28:28,000
我也不太记得

2857
01:28:28,000 --> 01:28:29,000
它是和谁一起发布了

2858
01:28:29,000 --> 01:28:31,000
但是我想它还在吗

2859
01:28:31,000 --> 01:28:34,000
是叫 S-I-T-E

2860
01:28:34,000 --> 01:28:34,000
我记得

2861
01:28:34,000 --> 01:28:35,000
是不是

2862
01:28:35,000 --> 01:28:35,000
还是怎么写

2863
01:28:35,000 --> 01:28:36,000
对对对对

2864
01:28:36,000 --> 01:28:36,000
我用过它

2865
01:28:36,000 --> 01:28:37,000
我确定我用过它

2866
01:28:37,000 --> 01:28:38,000
它好像是和

2867
01:28:38,000 --> 01:28:43,000
某一个特定的 Python 发行版

2868
01:28:43,000 --> 01:28:44,000
一起打包发布的

2869
01:28:44,000 --> 01:28:44,000
对对

2870
01:28:44,000 --> 01:28:44,000
现在还有

2871
01:28:44,000 --> 01:28:45,000
现在还有这个东西

2872
01:28:45,000 --> 01:28:47,000
就是它叫什么

2873
01:28:47,000 --> 01:28:48,000
它是 Scient

2874
01:28:48,000 --> 01:28:50,000
是一个我们编辑器

2875
01:28:50,000 --> 01:28:50,000
然后它

2876
01:28:50,000 --> 01:28:52,000
它本来是为了展示一个

2877
01:28:52,000 --> 01:28:53,000
叫做

2878
01:28:53,000 --> 01:28:53,000
哇

2879
01:28:53,000 --> 01:28:54,000
这怎么念

2880
01:28:54,000 --> 01:28:56,000
Scient

2881
01:28:56,000 --> 01:28:56,000
Scient

2882
01:28:56,000 --> 01:28:57,000
Scient

2883
01:28:57,000 --> 01:28:59,000
Scient

2884
01:28:59,000 --> 01:29:00,000
Scient

2885
01:29:00,000 --> 01:29:00,000
Scient

2886
01:29:00,000 --> 01:29:01,000
Scient

2887
01:29:01,000 --> 01:29:01,000
Scient

2888
01:29:01,000 --> 01:29:01,000
Scient

2889
01:29:01,000 --> 01:29:01,000
Scient

2890
01:29:01,000 --> 01:29:01,000
Scient

2891
01:29:01,000 --> 01:29:01,000
是一个什么玩意儿

2892
01:29:01,000 --> 01:29:04,000
就是它是一个编辑器组件

2893
01:29:04,000 --> 01:29:06,000
就是它是一个用来写编辑器的

2894
01:29:06,000 --> 01:29:07,000
一个 library

2895
01:29:07,000 --> 01:29:08,000
OK

2896
01:29:08,000 --> 01:29:08,000
对

2897
01:29:08,000 --> 01:29:09,000
然后这个 Scient

2898
01:29:09,000 --> 01:29:11,000
就是为了展示这个 library

2899
01:29:11,000 --> 01:29:11,000
然后

2900
01:29:11,000 --> 01:29:13,000
然后它本来这个

2901
01:29:13,000 --> 01:29:14,000
我记得

2902
01:29:14,000 --> 01:29:15,000
如果我没记错的话

2903
01:29:15,000 --> 01:29:17,000
它本来是要卖这个组件的 license

2904
01:29:17,000 --> 01:29:19,000
然后为了卖这个 license

2905
01:29:19,000 --> 01:29:21,000
它就要先展示一下这个 Scient

2906
01:29:21,000 --> 01:29:22,000
这个它能做什么

2907
01:29:22,000 --> 01:29:26,000
然后当时我就被它一些很多比较新奇的特性所震惊了嘛

2908
01:29:26,000 --> 01:29:28,000
就当时比如说

2909
01:29:28,000 --> 01:29:30,000
它支持这个多种字体

2910
01:29:30,000 --> 01:29:32,000
跟 emax nano 是一样的

2911
01:29:32,000 --> 01:29:34,000
然后它可以支持等宽非等宽的

2912
01:29:34,000 --> 01:29:35,000
就是同时使用

2913
01:29:35,000 --> 01:29:37,000
然后语法高亮那些

2914
01:29:37,000 --> 01:29:37,000
就当时

2915
01:29:37,000 --> 01:29:38,000
我在

2916
01:29:38,000 --> 01:29:39,000
在那个

2917
01:29:39,000 --> 01:29:40,000
这个

2918
01:29:40,000 --> 01:29:41,000
来说

2919
01:29:41,000 --> 01:29:41,000
觉得哇

2920
01:29:41,000 --> 01:29:42,000
这个还这么牛逼

2921
01:29:42,000 --> 01:29:44,000
还是挺少见

2922
01:29:44,000 --> 01:29:44,000
因为当时你知道

2923
01:29:44,000 --> 01:29:46,000
那个是从 notepad

2924
01:29:46,000 --> 01:29:47,000
记事本过度过来

2925
01:29:47,000 --> 01:29:49,000
找的第一款编辑器

2926
01:29:49,000 --> 01:29:50,000
你知道吗

2927
01:29:50,000 --> 01:29:51,000
啊

2928
01:29:51,000 --> 01:29:54,000
原来有这么一段黑历史

2929
01:29:54,000 --> 01:29:56,000
而且它是一个免费的

2930
01:29:56,000 --> 01:29:59,000
就感觉还是相当不错

2931
01:29:59,000 --> 01:30:00,000
我不知道现在怎么样

2932
01:30:00,000 --> 01:30:00,000
哇

2933
01:30:00,000 --> 01:30:00,000
现在还有

2934
01:30:00,000 --> 01:30:01,000
竟然还有 macOS 版

2935
01:30:01,000 --> 01:30:03,000
还在 macApp Store 里面

2936
01:30:03,000 --> 01:30:04,000
我一定要下一个

2937
01:30:04,000 --> 01:30:05,000
下一个来用

2938
01:30:05,000 --> 01:30:06,000
来怀怀旧

2939
01:30:06,000 --> 01:30:07,000
来免化

2940
01:30:07,000 --> 01:30:09,000
这个编辑器应该已经有一定年头了吧

2941
01:30:09,000 --> 01:30:10,000
至少也是有个十年八年的

2942
01:30:10,000 --> 01:30:12,000
你想我用的时候是在

2943
01:30:12,000 --> 01:30:16,000
我想讲应该是在 2000 年左右吧

2944
01:30:16,000 --> 01:30:19,000
Windows XP 的早期的时候

2945
01:30:19,000 --> 01:30:21,000
所以应该是有十几年的历史了

2946
01:30:21,000 --> 01:30:22,000
对

2947
01:30:22,000 --> 01:30:25,000
我早期用到了 Windows 上的编辑器

2948
01:30:25,000 --> 01:30:27,000
或者说编辑器

2949
01:30:27,000 --> 01:30:29,000
比较印象深刻的

2950
01:30:29,000 --> 01:30:31,000
一个叫做 Edit Plus

2951
01:30:31,000 --> 01:30:33,000
图标是一个红色的笔记本

2952
01:30:33,000 --> 01:30:34,000
这个没有提示

2953
01:30:34,000 --> 01:30:35,000
图标是个红色的

2954
01:30:35,000 --> 01:30:36,000
翻开了半页的笔记本

2955
01:30:36,000 --> 01:30:38,000
Edit Plus

2956
01:30:38,000 --> 01:30:39,000
我来看一看

2957
01:30:39,000 --> 01:30:40,000
是不是还存在

2958
01:30:40,000 --> 01:30:44,000
说不定已经阵亡

2959
01:30:44,000 --> 01:30:46,000
还存在

2960
01:30:46,000 --> 01:30:49,000
最近更新是 3 月 27 日今年

2961
01:30:49,000 --> 01:30:50,000
天哪

2962
01:30:50,000 --> 01:30:51,000
而且它

2963
01:30:51,000 --> 01:30:52,000
真的假的

2964
01:30:52,000 --> 01:30:53,000
图标还是没有变

2965
01:30:53,000 --> 01:30:54,000
是一个红色的笔记本

2966
01:30:54,000 --> 01:30:55,000
翻开了一半

2967
01:30:55,000 --> 01:30:56,000
好吧

2968
01:30:56,000 --> 01:30:57,000
卧槽

2969
01:30:57,000 --> 01:30:58,000
这个 Scientist 我疯了

2970
01:30:58,000 --> 01:30:59,000
你知道它卖多少钱吗

2971
01:30:59,000 --> 01:31:00,000
多少

2972
01:31:00,000 --> 01:31:01,000
42 美元

2973
01:31:01,000 --> 01:31:03,000
Oh my fucking god

2974
01:31:03,000 --> 01:31:04,000
它的整个 4.2 兆

2975
01:31:04,000 --> 01:31:07,000
4.2 兆

2976
01:31:07,000 --> 01:31:09,000
在 macApp Store 里面

2977
01:31:09,000 --> 01:31:10,000
太刁了

2978
01:31:10,000 --> 01:31:11,000
太刁了

2979
01:31:11,000 --> 01:31:12,000
对对对

2980
01:31:12,000 --> 01:31:14,000
它确实是有一个自带的

2981
01:31:14,000 --> 01:31:16,000
好像它就是用 Python 来 script

2982
01:31:16,000 --> 01:31:16,000
还是怎么样

2983
01:31:16,000 --> 01:31:17,000
我忘

2984
01:31:17,000 --> 01:31:18,000
很有可能

2985
01:31:18,000 --> 01:31:20,000
因为我在我的印象里面

2986
01:31:20,000 --> 01:31:21,000
在我的脑海里面

2987
01:31:21,000 --> 01:31:22,000
somehow 这个

2988
01:31:22,000 --> 01:31:23,000
跟 Python 有点关系

2989
01:31:23,000 --> 01:31:24,000
CiteE 对

2990
01:31:24,000 --> 01:31:25,000
和 Python

2991
01:31:25,000 --> 01:31:28,000
有非常浓烈的关联

2992
01:31:28,000 --> 01:31:29,000
我想起来了

2993
01:31:29,000 --> 01:31:31,000
我曾经用它来写过

2994
01:31:31,000 --> 01:31:31,000
Latech

2995
01:31:31,000 --> 01:31:35,000
就是因为它有那个多种语法高量

2996
01:31:35,000 --> 01:31:36,000
然后字体不一样

2997
01:31:36,000 --> 01:31:37,000
就刚才就讲

2998
01:31:37,000 --> 01:31:38,000
我是一直很羡慕

2999
01:31:38,000 --> 01:31:39,000
emax 那个特性

3000
01:31:39,000 --> 01:31:41,000
OK

3001
01:31:41,000 --> 01:31:46,000
我的 Latech 的那个

3002
01:31:46,000 --> 01:31:49,000
原文件是在

3003
01:31:49,000 --> 01:31:51,000
NotePad++里面写的

3004
01:31:51,000 --> 01:31:53,000
它是一个只能使用等宽字体的吧

3005
01:31:53,000 --> 01:31:54,000
好像是

3006
01:31:54,000 --> 01:31:55,000
对对

3007
01:31:55,000 --> 01:31:56,000
我觉得就是有时候

3008
01:31:56,000 --> 01:31:57,000
感觉不是

3009
01:31:57,000 --> 01:31:59,000
就通过语法高量

3010
01:31:59,000 --> 01:32:00,000
有时候很难一言扫

3011
01:32:00,000 --> 01:32:01,000
你为什么会在所见机

3012
01:32:01,000 --> 01:32:02,000
就这种半所见机

3013
01:32:02,000 --> 01:32:03,000
不是所见机

3014
01:32:03,000 --> 01:32:05,000
都有这么强烈的需求

3015
01:32:05,000 --> 01:32:06,000
我是希望能够

3016
01:32:06,000 --> 01:32:07,000
我不看编译结果

3017
01:32:07,000 --> 01:32:08,000
只看表码

3018
01:32:08,000 --> 01:32:09,000
能够很扫

3019
01:32:09,000 --> 01:32:10,000
很快的扫清楚

3020
01:32:10,000 --> 01:32:11,000
这个文档的原始结构

3021
01:32:11,000 --> 01:32:12,000
比如说

3022
01:32:12,000 --> 01:32:13,000
这个大标题

3023
01:32:13,000 --> 01:32:14,000
二级标题

3024
01:32:14,000 --> 01:32:15,000
这样那些东西

3025
01:32:15,000 --> 01:32:16,000
然后如果你每个字都是一样大

3026
01:32:16,000 --> 01:32:18,000
只通过颜色来区别的话

3027
01:32:18,000 --> 01:32:19,000
其实有一定的难度

3028
01:32:19,000 --> 01:32:21,000
特别是文档比较长的时候

3029
01:32:21,000 --> 01:32:23,000
说的没错

3030
01:32:23,000 --> 01:32:24,000
你这么一说

3031
01:32:24,000 --> 01:32:25,000
我忽然想起来

3032
01:32:25,000 --> 01:32:27,000
我在本科做毕业设计的时候

3033
01:32:27,000 --> 01:32:31,000
要看一个非常庞大的 C 库

3034
01:32:31,000 --> 01:32:32,000
然后当时

3035
01:32:32,000 --> 01:32:38,000
当落了一个半编辑器的代码阅读工具

3036
01:32:38,000 --> 01:32:41,000
这个代码阅读工具的优点之一

3037
01:32:41,000 --> 01:32:43,000
也是它可以把

3038
01:32:43,000 --> 01:32:46,000
比如说函数的名字

3039
01:32:46,000 --> 01:32:47,000
用大号字体显示

3040
01:32:47,000 --> 01:32:51,000
然后一些经常出现的变量

3041
01:32:51,000 --> 01:32:53,000
可以用比较深的颜色显示

3042
01:32:53,000 --> 01:32:55,000
具体叫什么我忘记了

3043
01:32:55,000 --> 01:32:57,000
但是当时搜寻它的时候

3044
01:32:57,000 --> 01:33:00,000
就说它是一款非常适合于阅读代码的编辑器

3045
01:33:00,000 --> 01:33:01,000
OK

3046
01:33:01,000 --> 01:33:02,000
其实我觉得

3047
01:33:02,000 --> 01:33:03,000
其实从这个

3048
01:33:03,000 --> 01:33:04,000
如果你从

3049
01:33:04,000 --> 01:33:06,000
纯粹从这个字体和这个排版的角度来讲

3050
01:33:06,000 --> 01:33:09,000
就是这种方式也未尝不可

3051
01:33:09,000 --> 01:33:10,000
对不对

3052
01:33:10,000 --> 01:33:12,000
我现在有这种

3053
01:33:12,000 --> 01:33:13,000
也就是这么一种想法

3054
01:33:13,000 --> 01:33:17,000
因为有时候你真的看了一整屏的大小都一样的代码的时候

3055
01:33:17,000 --> 01:33:18,000
还是挺辛苦的

3056
01:33:18,000 --> 01:33:19,000
对

3057
01:33:19,000 --> 01:33:22,000
对

3058
01:33:22,000 --> 01:33:23,000
接着说 Windows 上面的编辑器

3059
01:33:23,000 --> 01:33:27,000
另外一个就是我刚刚提到的这个 NotePad++

3060
01:33:27,000 --> 01:33:29,000
好像是台湾人开发的

3061
01:33:29,000 --> 01:33:31,000
对

3062
01:33:31,000 --> 01:33:34,000
我记得在我切换到 Linux 之前

3063
01:33:34,000 --> 01:33:39,000
它是我几乎是最默认的一款编辑器了吧

3064
01:33:39,000 --> 01:33:43,000
不管是写文章还是写代码

3065
01:33:43,000 --> 01:33:44,000
基本上我都用它

3066
01:33:44,000 --> 01:33:45,000
OK

3067
01:33:45,000 --> 01:33:47,000
而且它启动快

3068
01:33:47,000 --> 01:33:49,000
对大文件的处理也很好

3069
01:33:49,000 --> 01:33:51,000
就是比较小巧精致

3070
01:33:51,000 --> 01:33:52,000
对

3071
01:33:52,000 --> 01:33:53,000
而且

3072
01:33:53,000 --> 01:33:54,000
其实现在应该也是完全没错

3073
01:33:54,000 --> 01:33:54,000
对

3074
01:33:54,000 --> 01:33:55,000
你说这个我突然想讲

3075
01:33:55,000 --> 01:33:57,000
其实我也见过很多人在用这个

3076
01:33:57,000 --> 01:33:58,000
就是因为

3077
01:33:58,000 --> 01:34:01,000
首先就是 Windows 摸着那个基石本确实太糟糕了

3078
01:34:01,000 --> 01:34:04,000
然后有很多人编辑一些文本文件的时候

3079
01:34:04,000 --> 01:34:06,000
还有苦于找不到一个比较好的工具

3080
01:34:06,000 --> 01:34:09,000
然后突然出来这么一个长得很像那个基石本的

3081
01:34:09,000 --> 01:34:10,000
但是又比它做得好的

3082
01:34:10,000 --> 01:34:12,000
我觉得还是不错的

3083
01:34:12,000 --> 01:34:13,000
对

3084
01:34:13,000 --> 01:34:15,000
NotePad++可能就是这样一种东西

3085
01:34:15,000 --> 01:34:17,000
它甚至连名字都叫 NotePad

3086
01:34:17,000 --> 01:34:19,000
只不过是++而已

3087
01:34:19,000 --> 01:34:20,000
对

3088
01:34:20,000 --> 01:34:21,000
对

3089
01:34:21,000 --> 01:34:22,000
我相信还有

3090
01:34:22,000 --> 01:34:24,000
而且它经过简单的配置

3091
01:34:24,000 --> 01:34:30,000
这也是可以成为一个比较基本的 IDE 来用的

3092
01:34:30,000 --> 01:34:30,000
嗯嗯嗯

3093
01:34:30,000 --> 01:34:34,000
就是你可以一键编译 CZ 加

3094
01:34:34,000 --> 01:34:38,000
然后 CZ 加的那个编译结构也可以在它的那个

3095
01:34:38,000 --> 01:34:40,000
它应该也有一个类似于 Console

3096
01:34:40,000 --> 01:34:43,000
或者说 Output 这么一个 Window

3097
01:34:43,000 --> 01:34:47,000
然后那个编译结果就可以在这个窗口里面显示也挺好

3098
01:34:47,000 --> 01:34:49,000
它是一个免费的还是要付费的

3099
01:34:49,000 --> 01:34:50,000
是全免费的

3100
01:34:50,000 --> 01:34:50,000
OK

3101
01:34:50,000 --> 01:34:54,000
这个说不定真的可以成为什么 DEFAULT Windows Editor

3102
01:34:54,000 --> 01:34:55,000
对

3103
01:34:55,000 --> 01:34:57,000
我相信基本上用上它的人都会

3104
01:34:57,000 --> 01:34:58,000
都挺喜欢的吧

3105
01:34:58,000 --> 01:34:59,000
就是我在

3106
01:34:59,000 --> 01:35:03,000
我已经至少说动了四五个朋友

3107
01:35:03,000 --> 01:35:05,000
在遥远的 Windows 时代

3108
01:35:05,000 --> 01:35:07,000
只是说动了四五个朋友用它来写程序

3109
01:35:07,000 --> 01:35:08,000
因为那个时候你知道

3110
01:35:08,000 --> 01:35:09,000
嗯

3111
01:35:09,000 --> 01:35:12,000
学校里面教写程序

3112
01:35:12,000 --> 01:35:14,000
甚至是在那个什么

3113
01:35:14,000 --> 01:35:16,000
Turbo C 的环境上

3114
01:35:16,000 --> 01:35:19,000
在不堪回首的往事

3115
01:35:19,000 --> 01:35:20,000
OK

3116
01:35:20,000 --> 01:35:21,000
但对

3117
01:35:21,000 --> 01:35:26,000
我就教会了他们可以在这样一种 Windows 下面的一个编辑器里面写程序

3118
01:35:26,000 --> 01:35:30,000
然后通过一派简单的配置就可以调用一个编辑器

3119
01:35:30,000 --> 01:35:30,000
嗯

3120
01:35:30,000 --> 01:35:33,000
编译器来来来来调试程序

3121
01:35:33,000 --> 01:35:33,000
其实还是挺爽

3122
01:35:33,000 --> 01:35:34,000
嗯

3123
01:35:34,000 --> 01:35:37,000
然后我自己再偷偷的用 Visual Studio

3124
01:35:37,000 --> 01:35:39,000
哈哈哈哈

3125
01:35:39,000 --> 01:35:43,000
这就好像告诉别人菜好吃你吃菜

3126
01:35:43,000 --> 01:35:44,000
然后自己吃

3127
01:35:44,000 --> 01:35:48,000
太机智了

3128
01:35:48,000 --> 01:35:53,000
最近还有一些比较另类的编辑器出现哈

3129
01:35:53,000 --> 01:35:59,000
刚刚我们提到的一些编辑器它都是基本上是用一个原生的一个一个就是

3130
01:35:59,000 --> 01:36:03,000
就是这怎么这么描述它都是一个原生的代码实现的一个编辑器

3131
01:36:03,000 --> 01:36:09,000
然后最近有一些基于 webkit 的编辑器出现了

3132
01:36:09,000 --> 01:36:14,000
比如最比较典型的代表就是这个 Github 那个 Atom

3133
01:36:14,000 --> 01:36:15,000
对 Github 那一头是一个

3134
01:36:15,000 --> 01:36:17,000
现在这个知道的比较多

3135
01:36:17,000 --> 01:36:21,000
它其实是你可以理解它是一个浏览器伪装成一个编辑器的样子

3136
01:36:21,000 --> 01:36:22,000
对

3137
01:36:22,000 --> 01:36:26,000
因为它就好像有一些基于网页的编辑器

3138
01:36:26,000 --> 01:36:29,000
在线编辑器叫什么 Code Anywhere

3139
01:36:29,000 --> 01:36:32,000
有个比较著名叫 Code Mirror

3140
01:36:32,000 --> 01:36:34,000
OK

3141
01:36:34,000 --> 01:36:36,000
但我记得我用过的那个叫做 Code Anywhere

3142
01:36:36,000 --> 01:36:37,000
OK

3143
01:36:37,000 --> 01:36:40,000
然后就是一个你打开一个网页

3144
01:36:40,000 --> 01:36:42,000
然后这个网页上面会给你显示一个编辑器

3145
01:36:42,000 --> 01:36:44,000
你可以在这个编辑器里面操作文件

3146
01:36:44,000 --> 01:36:47,000
只不过这些文件都是在云端的

3147
01:36:47,000 --> 01:36:47,000
对

3148
01:36:47,000 --> 01:36:49,000
然后也有什么语法高亮

3149
01:36:49,000 --> 01:36:52,000
然后你点一下那个发布件

3150
01:36:52,000 --> 01:36:55,000
它就可以把你写好的东西发布出来

3151
01:36:55,000 --> 01:36:55,000
对

3152
01:36:55,000 --> 01:36:58,000
然后这个 Atom 这样的编辑器

3153
01:36:58,000 --> 01:37:02,000
就可以视为这样一种离线版本的浏览器里面的编辑器

3154
01:37:02,000 --> 01:37:03,000
但是我有一点

3155
01:37:03,000 --> 01:37:06,000
如果你真的去看它这种具体的实现

3156
01:37:06,000 --> 01:37:09,000
以及它整个的运行的逻辑

3157
01:37:09,000 --> 01:37:13,000
你会觉得这完全就不适合用来做一个编辑器

3158
01:37:13,000 --> 01:37:14,000
因为它毕竟是个浏览器

3159
01:37:14,000 --> 01:37:14,000
对吧

3160
01:37:14,000 --> 01:37:15,000
比方你要实现那个

3161
01:37:15,000 --> 01:37:16,000
比如最简单的一个例子

3162
01:37:16,000 --> 01:37:18,000
你要实现那个光标那一树

3163
01:37:18,000 --> 01:37:19,000
然后再不断的变

3164
01:37:19,000 --> 01:37:22,000
你是要去通过这个 CS 样式表

3165
01:37:22,000 --> 01:37:24,000
样式表去做一个动画

3166
01:37:24,000 --> 01:37:26,000
然后你要去衡量

3167
01:37:26,000 --> 01:37:27,000
衡量那个位置

3168
01:37:27,000 --> 01:37:30,000
大概是在这个文档的哪一个相对的位移上面去

3169
01:37:30,000 --> 01:37:33,000
反正就整个过程是很扭曲的

3170
01:37:33,000 --> 01:37:34,000
所以我到现在为止

3171
01:37:34,000 --> 01:37:36,000
我也没看出来

3172
01:37:36,000 --> 01:37:37,000
就是大家讲

3173
01:37:37,000 --> 01:37:38,000
如果你是一个网页

3174
01:37:38,000 --> 01:37:39,000
然后你需要

3175
01:37:39,000 --> 01:37:42,000
比如说你是一个什么所谓的云编辑器

3176
01:37:42,000 --> 01:37:43,000
我可以理解

3177
01:37:43,000 --> 01:37:45,000
因为你最终是要在网页里面实现

3178
01:37:45,000 --> 01:37:46,000
你有这个平台的限制

3179
01:37:46,000 --> 01:37:47,000
但你就像那个 Github

3180
01:37:47,000 --> 01:37:48,000
就是 Atom 这种东西

3181
01:37:48,000 --> 01:37:49,000
我到目前为止

3182
01:37:49,000 --> 01:37:52,000
我还是不能理解它的这个意义何在

3183
01:37:52,000 --> 01:37:54,000
或者为什么要做这么一个东西

3184
01:37:54,000 --> 01:37:58,000
它可能就是把 WebKit 当作

3185
01:37:58,000 --> 01:38:05,000
就像 GVM 或者是.NET 这样一个运行时来使用

3186
01:38:05,000 --> 01:38:08,000
然后用它来写程序的一个尝试

3187
01:38:08,000 --> 01:38:08,000
我觉得

3188
01:38:08,000 --> 01:38:11,000
就什么 WebKit as an OS

3189
01:38:11,000 --> 01:38:11,000
对

3190
01:38:11,000 --> 01:38:13,000
你把 WebKit 当作一个 OS 来使用

3191
01:38:13,000 --> 01:38:15,000
或者当作一个 Library 来使用

3192
01:38:15,000 --> 01:38:16,000
当作一个 Framework 来使用

3193
01:38:16,000 --> 01:38:18,000
对但是他们也没有

3194
01:38:18,000 --> 01:38:19,000
就是这个编辑做出来

3195
01:38:19,000 --> 01:38:22,000
他也没有说有什么相对于

3196
01:38:22,000 --> 01:38:22,000
非常了不起的

3197
01:38:22,000 --> 01:38:23,000
对啊

3198
01:38:23,000 --> 01:38:24,000
我没有看出来吧

3199
01:38:24,000 --> 01:38:25,000
起码我到目前为止没有看出来

3200
01:38:25,000 --> 01:38:28,000
他有什么不得了的创新

3201
01:38:28,000 --> 01:38:31,000
或者是有什么足够吸引我的特性

3202
01:38:31,000 --> 01:38:32,000
让我去试一下

3203
01:38:32,000 --> 01:38:33,000
而且最关键是

3204
01:38:33,000 --> 01:38:34,000
我当然自己

3205
01:38:34,000 --> 01:38:36,000
现在是所谓的 Alpha 版本

3206
01:38:36,000 --> 01:38:37,000
就是很容易挂掉

3207
01:38:37,000 --> 01:38:39,000
对的现在还是太不完善了

3208
01:38:39,000 --> 01:38:41,000
而且很不稳定不完善

3209
01:38:41,000 --> 01:38:44,000
而且对资源的占用也是非常可观的

3210
01:38:44,000 --> 01:38:47,000
因为你想你在滥用一个浏览器

3211
01:38:47,000 --> 01:38:50,000
然后去实现一个编辑器的功能

3212
01:38:50,000 --> 01:38:51,000
对吧

3213
01:38:51,000 --> 01:38:53,000
所以是挺古怪的一件事情

3214
01:38:53,000 --> 01:38:57,000
还有一个编辑器

3215
01:38:57,000 --> 01:38:59,000
这里是你也写了

3216
01:38:59,000 --> 01:39:00,000
对我也要大力推荐的

3217
01:39:00,000 --> 01:39:01,000
叫做 Acme

3218
01:39:01,000 --> 01:39:04,000
Acme 这个编辑器是

3219
01:39:04,000 --> 01:39:06,000
你确定你要大力推荐吗

3220
01:39:06,000 --> 01:39:08,000
我的推荐不是说你要去用

3221
01:39:08,000 --> 01:39:09,000
你要去什么

3222
01:39:09,000 --> 01:39:11,000
去真的去用它作为主力

3223
01:39:11,000 --> 01:39:13,000
但是你应该去了解它的一些

3224
01:39:13,000 --> 01:39:15,000
一些很奇怪的一些哲学

3225
01:39:15,000 --> 01:39:15,000
我觉得是

3226
01:39:15,000 --> 01:39:16,000
对去了解一下

3227
01:39:16,000 --> 01:39:20,000
就是上世纪七八十年代

3228
01:39:20,000 --> 01:39:21,000
有这么八九十年代应该是

3229
01:39:21,000 --> 01:39:23,000
八九十年代有这么一群人

3230
01:39:23,000 --> 01:39:25,000
曾经有过这样的想象

3231
01:39:25,000 --> 01:39:27,000
编辑器有可能是这个样子

3232
01:39:27,000 --> 01:39:28,000
对

3233
01:39:28,000 --> 01:39:29,000
这是

3234
01:39:29,000 --> 01:39:30,000
其实 Acme

3235
01:39:30,000 --> 01:39:31,000
对说到 Acme

3236
01:39:31,000 --> 01:39:33,000
就不能说 Planet

3237
01:39:33,000 --> 01:39:34,000
Planet 其实就是这样一种

3238
01:39:34,000 --> 01:39:38,000
非常了不起的先锋性的尝试

3239
01:39:38,000 --> 01:39:40,000
只不过它没有成功吧

3240
01:39:40,000 --> 01:39:40,000
对

3241
01:39:40,000 --> 01:39:43,000
Planet 的目的是作为一个什么

3242
01:39:43,000 --> 01:39:44,000
叫做

3243
01:39:44,000 --> 01:39:45,000
更好的 UNIX

3244
01:39:45,000 --> 01:39:48,000
对就比 UNIX 还 UNIX 的 UNIX

3245
01:39:48,000 --> 01:39:48,000
对

3246
01:39:48,000 --> 01:39:49,000
Next Generation UNIX

3247
01:39:49,000 --> 01:39:50,000
就 Planet

3248
01:39:50,000 --> 01:39:51,000
但是

3249
01:39:51,000 --> 01:39:53,000
但是后来也

3250
01:39:53,000 --> 01:39:54,000
反正现在你可以去下载

3251
01:39:54,000 --> 01:39:56,000
虚拟机比较方便

3252
01:39:56,000 --> 01:39:57,000
可以在虚拟机跑来玩

3253
01:39:57,000 --> 01:39:59,000
但是作为生产用肯定不太现实了

3254
01:39:59,000 --> 01:40:01,000
Anyway

3255
01:40:01,000 --> 01:40:02,000
Acme 这个编辑器

3256
01:40:02,000 --> 01:40:05,000
就是在 Planet 里面

3257
01:40:05,000 --> 01:40:06,000
就是 RowPike

3258
01:40:06,000 --> 01:40:09,000
为了在 Planet 里面写程序

3259
01:40:09,000 --> 01:40:11,000
于是给自己开发了这么一个编辑器

3260
01:40:11,000 --> 01:40:15,000
但后来他先用它来写这个构程序了

3261
01:40:15,000 --> 01:40:16,000
然后这编辑器

3262
01:40:16,000 --> 01:40:19,000
有什么特别的地方呢

3263
01:40:19,000 --> 01:40:21,000
我觉得就说两点比较表面的

3264
01:40:21,000 --> 01:40:23,000
因为我也没有真的实际去

3265
01:40:23,000 --> 01:40:25,000
很长时间用过它

3266
01:40:25,000 --> 01:40:25,000
但是

3267
01:40:25,000 --> 01:40:29,000
首先第一个它默认使用是不等宽字体的

3268
01:40:29,000 --> 01:40:32,000
这个就觉得非常奇怪

3269
01:40:32,000 --> 01:40:33,000
我说为什么会这样

3270
01:40:33,000 --> 01:40:36,000
当然我记得他给过一个解释

3271
01:40:36,000 --> 01:40:40,000
就是觉得他说不等宽字体的程序更加易读

3272
01:40:40,000 --> 01:40:43,000
不等宽的程序更加美观

3273
01:40:43,000 --> 01:40:45,000
至少看起来更加好看

3274
01:40:45,000 --> 01:40:46,000
你当是我幼小的心灵来看

3275
01:40:46,000 --> 01:40:49,000
在 Jerger 这个字体下面

3276
01:40:49,000 --> 01:40:52,000
程序看起来好像要更优雅一些

3277
01:40:52,000 --> 01:40:53,000
不管其他说代码质量怎么样

3278
01:40:53,000 --> 01:40:55,000
但至少看起来比较优雅

3279
01:40:55,000 --> 01:40:56,000
然后就签上

3280
01:40:56,000 --> 01:40:57,000
如果你们不等宽字体

3281
01:40:57,000 --> 01:40:59,000
你怎么去对齐那些东西呢

3282
01:40:59,000 --> 01:41:01,000
对齐没有那么重要

3283
01:41:01,000 --> 01:41:02,000
没有你想象中

3284
01:41:02,000 --> 01:41:03,000
对而且他就是

3285
01:41:03,000 --> 01:41:05,000
他而且他用那个 tab 嘛

3286
01:41:05,000 --> 01:41:08,000
就是我们现在一般的做法是把 tab 转换成

3287
01:41:08,000 --> 01:41:10,000
比如说四个空格来做

3288
01:41:10,000 --> 01:41:12,000
但是在 acme 或者包括在

3289
01:41:12,000 --> 01:41:16,000
在勾语言里面的缩进默认使用 tab 嘛

3290
01:41:16,000 --> 01:41:17,000
真的

3291
01:41:17,000 --> 01:41:17,000
真的

3292
01:41:17,000 --> 01:41:21,000
我以为现在全世界已经完全导致空格了

3293
01:41:21,000 --> 01:41:24,000
那个什么 golan 里面的

3294
01:41:24,000 --> 01:41:25,000
就是你用 gol format

3295
01:41:25,000 --> 01:41:26,000
如果你不改配置

3296
01:41:26,000 --> 01:41:28,000
他默认会帮你重新用 tab 来做缩进

3297
01:41:28,000 --> 01:41:30,000
就是在这里面是一样

3298
01:41:30,000 --> 01:41:31,000
因为 tab 有个好处就是他可以

3299
01:41:31,000 --> 01:41:32,000
如果你是不等宽的话

3300
01:41:32,000 --> 01:41:34,000
他也可以能够帮你对齐嘛

3301
01:41:34,000 --> 01:41:34,000
对

3302
01:41:34,000 --> 01:41:37,000
但也不是所有情况下能

3303
01:41:37,000 --> 01:41:37,000
对

3304
01:41:37,000 --> 01:41:39,000
大部分时候就能用了

3305
01:41:39,000 --> 01:41:41,000
然后另外一点就是

3306
01:41:41,000 --> 01:41:44,000
rollpack 这个人是不用语法高亮的

3307
01:41:44,000 --> 01:41:45,000
你能想象吗

3308
01:41:45,000 --> 01:41:47,000
这个还好吧

3309
01:41:47,000 --> 01:41:47,000
就是

3310
01:41:47,000 --> 01:41:50,000
我也不知道

3311
01:41:50,000 --> 01:41:50,000
我也不知道

3312
01:41:50,000 --> 01:41:57,000
有一点感觉就是语法高亮和等宽

3313
01:41:57,000 --> 01:42:00,000
和包括那个小键盘

3314
01:42:00,000 --> 01:42:03,000
这些东西都是

3315
01:42:03,000 --> 01:42:04,000
可有可无的吗

3316
01:42:04,000 --> 01:42:06,000
somehow over it

3317
01:42:06,000 --> 01:42:07,000
对

3318
01:42:07,000 --> 01:42:09,000
但这一点我一直是很不能理解

3319
01:42:09,000 --> 01:42:11,000
因为虽然说他这个 acme

3320
01:42:11,000 --> 01:42:13,000
他是默认是使用非等宽字体的

3321
01:42:13,000 --> 01:42:15,000
但是他只有一个大小

3322
01:42:15,000 --> 01:42:17,000
而且只能有一种字体嘛

3323
01:42:17,000 --> 01:42:17,000
对吧

3324
01:42:17,000 --> 01:42:18,000
我看到样子是这样子

3325
01:42:18,000 --> 01:42:19,000
对

3326
01:42:19,000 --> 01:42:21,000
至少在目前的版本来说是这样

3327
01:42:21,000 --> 01:42:21,000
对

3328
01:42:21,000 --> 01:42:22,000
这就会有一个问题

3329
01:42:22,000 --> 01:42:23,000
就是

3330
01:42:23,000 --> 01:42:27,000
你没有办法通过改变字形

3331
01:42:27,000 --> 01:42:29,000
或者是字体的大小

3332
01:42:29,000 --> 01:42:30,000
来区分这个

3333
01:42:30,000 --> 01:42:31,000
这个

3334
01:42:31,000 --> 01:42:32,000
远代码的结构

3335
01:42:32,000 --> 01:42:34,000
或者是这个文档的结构

3336
01:42:34,000 --> 01:42:35,000
那么刚才我讲的

3337
01:42:35,000 --> 01:42:37,000
如果一般的做法

3338
01:42:37,000 --> 01:42:38,000
就是你用语法高亮的方式

3339
01:42:38,000 --> 01:42:39,000
来分清楚这个结构

3340
01:42:39,000 --> 01:42:43,000
但是 Raw Pike 这种大神级的人物

3341
01:42:43,000 --> 01:42:44,000
他说

3342
01:42:44,000 --> 01:42:46,000
我们大神写程序

3343
01:42:46,000 --> 01:42:48,000
从来不需要语法高亮

3344
01:42:48,000 --> 01:42:50,000
那就没有办法了

3345
01:42:50,000 --> 01:42:52,000
但是我一直很难想象

3346
01:42:52,000 --> 01:42:53,000
就是我也尝试过一下

3347
01:42:53,000 --> 01:42:55,000
但是还是很别扭

3348
01:42:55,000 --> 01:42:56,000
我不知道你怎么觉得

3349
01:42:56,000 --> 01:42:58,000
我其实在很长时间

3350
01:42:58,000 --> 01:43:01,000
在我比较小的时候

3351
01:43:01,000 --> 01:43:02,000
写程序

3352
01:43:02,000 --> 01:43:03,000
我是不知道怎么看语法高亮

3353
01:43:03,000 --> 01:43:05,000
那个时候我是用

3354
01:43:05,000 --> 01:43:07,000
就单色的

3355
01:43:07,000 --> 01:43:09,000
单色的模式

3356
01:43:09,000 --> 01:43:11,000
来写过很长时间的程序

3357
01:43:11,000 --> 01:43:12,000
甚至就是

3358
01:43:12,000 --> 01:43:13,000
我应该跟你说过吧

3359
01:43:13,000 --> 01:43:17,000
就是我最开始学写程序的时候

3360
01:43:17,000 --> 01:43:19,000
是用笔写在纸上的

3361
01:43:19,000 --> 01:43:20,000
那那个时候难道

3362
01:43:20,000 --> 01:43:22,000
我要用不同的颜色

3363
01:43:22,000 --> 01:43:23,000
去写一段程序吗

3364
01:43:23,000 --> 01:43:24,000
所以也没什么吧

3365
01:43:24,000 --> 01:43:25,000
OK

3366
01:43:25,000 --> 01:43:26,000
而且你知道

3367
01:43:26,000 --> 01:43:27,000
所以我知道

3368
01:43:27,000 --> 01:43:29,000
就是什么大神级程序员的先例

3369
01:43:29,000 --> 01:43:30,000
都是这样的

3370
01:43:30,000 --> 01:43:30,000
不不不

3371
01:43:30,000 --> 01:43:32,000
这跟大神不神没有关系

3372
01:43:32,000 --> 01:43:33,000
这只是一个

3373
01:43:33,000 --> 01:43:34,000
有减入奢益

3374
01:43:34,000 --> 01:43:35,000
有收入简单的问题吧

3375
01:43:35,000 --> 01:43:37,000
就是如果你

3376
01:43:37,000 --> 01:43:38,000
就我的第一台电脑

3377
01:43:38,000 --> 01:43:39,000
是一台 Apple 2

3378
01:43:39,000 --> 01:43:40,000
OK

3379
01:43:40,000 --> 01:43:41,000
然后 Apple 2 上面的

3380
01:43:41,000 --> 01:43:43,000
Basic 是只有一种颜色的

3381
01:43:43,000 --> 01:43:44,000
蓝底白字吧

3382
01:43:44,000 --> 01:43:44,000
好像还是

3383
01:43:44,000 --> 01:43:44,000
OK

3384
01:43:44,000 --> 01:43:47,000
然后你可以在 logo 和

3385
01:43:47,000 --> 01:43:49,000
Basic 之模式之间切换

3386
01:43:49,000 --> 01:43:50,000
可是不管 logo 还是 Basic

3387
01:43:50,000 --> 01:43:52,000
都没有一发高亮

3388
01:43:52,000 --> 01:43:53,000
甚至在 logo 这种

3389
01:43:53,000 --> 01:43:55,000
括号套括号的语言里面

3390
01:43:55,000 --> 01:43:57,000
括号是没办法配对的

3391
01:43:57,000 --> 01:43:58,000
就是你必须

3392
01:43:58,000 --> 01:44:00,000
你靠肉眼去配对

3393
01:44:00,000 --> 01:44:02,000
看你的那个两个括号

3394
01:44:02,000 --> 01:44:03,000
是不是配等了

3395
01:44:03,000 --> 01:44:05,000
如果不等的话

3396
01:44:05,000 --> 01:44:06,000
也许你这一个程序

3397
01:44:06,000 --> 01:44:07,000
你就要 debate 一个下午

3398
01:44:07,000 --> 01:44:08,000
你都不知道

3399
01:44:08,000 --> 01:44:08,000
那个缺失的

3400
01:44:08,000 --> 01:44:10,000
缺失括号在哪

3401
01:44:10,000 --> 01:44:13,000
但是我也不知道

3402
01:44:13,000 --> 01:44:13,000
那个时候

3403
01:44:13,000 --> 01:44:16,000
我从来没有想过

3404
01:44:16,000 --> 01:44:18,000
没有的那个东西

3405
01:44:18,000 --> 01:44:20,000
会让我造成什么障碍

3406
01:44:20,000 --> 01:44:21,000
OK

3407
01:44:21,000 --> 01:44:24,000
那如果你现在呢

3408
01:44:24,000 --> 01:44:25,000
就是你

3409
01:44:25,000 --> 01:44:25,000
我相信现在

3410
01:44:25,000 --> 01:44:26,000
你应该是习惯了

3411
01:44:26,000 --> 01:44:27,000
这个语法高亮吧

3412
01:44:27,000 --> 01:44:29,000
现在

3413
01:44:29,000 --> 01:44:34,000
有时候可能也会觉得

3414
01:44:34,000 --> 01:44:35,000
没有语法高亮

3415
01:44:35,000 --> 01:44:35,000
是不太好的

3416
01:44:35,000 --> 01:44:36,000
就是有时候

3417
01:44:36,000 --> 01:44:39,000
比如说写一个非常复杂的

3418
01:44:39,000 --> 01:44:41,000
尤其是在打开

3419
01:44:41,000 --> 01:44:44,000
刚刚打开一个文件的时候

3420
01:44:44,000 --> 01:44:44,000
比如说

3421
01:44:45,000 --> 01:44:48,000
某一段

3422
01:44:48,000 --> 01:44:50,000
某一个文件打开的时候

3423
01:44:50,000 --> 01:44:54,000
它没有那个扩展名

3424
01:44:54,000 --> 01:44:55,000
打开之后

3425
01:44:55,000 --> 01:44:57,000
VIM 默认把它显示为单色的

3426
01:44:57,000 --> 01:45:00,000
我有时候可能要过一段时间

3427
01:45:00,000 --> 01:45:00,000
才会意识到

3428
01:45:00,000 --> 01:45:02,000
这个东西没有语法高亮

3429
01:45:02,000 --> 01:45:03,000
OK

3430
01:45:03,000 --> 01:45:05,000
这还蛮新鲜

3431
01:45:05,000 --> 01:45:06,000
反正我现在就遇到一个

3432
01:45:06,000 --> 01:45:07,000
状况是这样子

3433
01:45:07,000 --> 01:45:08,000
就因为我要去登录

3434
01:45:08,000 --> 01:45:09,000
很多这个服务器

3435
01:45:09,000 --> 01:45:11,000
然后你知道

3436
01:45:11,000 --> 01:45:12,000
我也不是说

3437
01:45:12,000 --> 01:45:13,000
在每个服务器上

3438
01:45:13,000 --> 01:45:14,000
都配置我的

3439
01:45:14,000 --> 01:45:15,000
这个 VIM 的那些东西

3440
01:45:15,000 --> 01:45:16,000
那懒吗

3441
01:45:16,000 --> 01:45:16,000
还是因为

3442
01:45:16,000 --> 01:45:18,000
比如说你编辑一些配置文件

3443
01:45:18,000 --> 01:45:20,000
有时候它就没有

3444
01:45:20,000 --> 01:45:21,000
这个语法高亮

3445
01:45:21,000 --> 01:45:22,000
然后就觉得

3446
01:45:22,000 --> 01:45:22,000
哎呀

3447
01:45:22,000 --> 01:45:24,000
好不习惯

3448
01:45:24,000 --> 01:45:25,000
觉得它没有安全感

3449
01:45:25,000 --> 01:45:25,000
你知道吗

3450
01:45:25,000 --> 01:45:26,000
因为语法高亮

3451
01:45:26,000 --> 01:45:26,000
它可以

3452
01:45:26,000 --> 01:45:27,000
有时候可以

3453
01:45:27,000 --> 01:45:28,000
如果你看颜色不对

3454
01:45:28,000 --> 01:45:29,000
一般都是你那个语法错了

3455
01:45:29,000 --> 01:45:31,000
对

3456
01:45:31,000 --> 01:45:32,000
语法高亮

3457
01:45:32,000 --> 01:45:33,000
毫无疑问

3458
01:45:33,000 --> 01:45:35,000
是有助于你发现

3459
01:45:35,000 --> 01:45:36,000
问题的

3460
01:45:36,000 --> 01:45:37,000
弹幕之中的问题的

3461
01:45:37,000 --> 01:45:37,000
对

3462
01:45:37,000 --> 01:45:39,000
然后就会有一种

3463
01:45:39,000 --> 01:45:39,000
叫什么

3464
01:45:39,000 --> 01:45:41,000
不安全的感觉

3465
01:45:41,000 --> 01:45:42,000
对

3466
01:45:42,000 --> 01:45:42,000
这算是

3467
01:45:42,000 --> 01:45:43,000
我是把语法高亮

3468
01:45:43,000 --> 01:45:45,000
做语法检查了

3469
01:45:45,000 --> 01:45:46,000
我觉得你们都有

3470
01:45:46,000 --> 01:45:46,000
paranormality

3471
01:45:46,000 --> 01:45:49,000
anyway

3472
01:45:49,000 --> 01:45:50,000
就所以我

3473
01:45:50,000 --> 01:45:52,000
所以我一直很难想象

3474
01:45:52,000 --> 01:45:53,000
在现在这种情况下

3475
01:45:53,000 --> 01:45:54,000
放弃

3476
01:45:54,000 --> 01:45:55,000
语法高亮会怎么样

3477
01:45:55,000 --> 01:45:56,000
不过后来我想了一下

3478
01:45:56,000 --> 01:45:57,000
就是其实

3479
01:45:57,000 --> 01:45:58,000
在 go

3480
01:45:58,000 --> 01:45:59,000
这个

3481
01:45:59,000 --> 01:46:01,000
如果你只写

3482
01:46:01,000 --> 01:46:02,000
go 程序的话

3483
01:46:02,000 --> 01:46:03,000
可能没有这个太大的障碍

3484
01:46:03,000 --> 01:46:05,000
因为你知道如果

3485
01:46:05,000 --> 01:46:07,000
你的

3486
01:46:07,000 --> 01:46:08,000
就哪怕你没有语法高亮

3487
01:46:08,000 --> 01:46:09,000
然后你

3488
01:46:09,000 --> 01:46:10,000
如果你配置你编辑器

3489
01:46:10,000 --> 01:46:11,000
默认保存

3490
01:46:11,000 --> 01:46:11,000
跑一下

3491
01:46:11,000 --> 01:46:12,000
那 go format 的话

3492
01:46:12,000 --> 01:46:14,000
它是会提醒你

3493
01:46:14,000 --> 01:46:15,000
哪里错了的

3494
01:46:15,000 --> 01:46:17,000
就这个是编译器级别的检查

3495
01:46:17,000 --> 01:46:19,000
不是说只是从语法上面的检查

3496
01:46:19,000 --> 01:46:23,000
所以从这个角度来说

3497
01:46:23,000 --> 01:46:24,000
你没有语法编辑器

3498
01:46:24,000 --> 01:46:25,000
其实没有这个语法高亮

3499
01:46:25,000 --> 01:46:27,000
其实也是挺安全的

3500
01:46:27,000 --> 01:46:28,000
起码写够

3501
01:46:28,000 --> 01:46:29,000
但是如果你是写 python

3502
01:46:29,000 --> 01:46:30,000
或者想写 Ruby

3503
01:46:30,000 --> 01:46:31,000
这种动态语言

3504
01:46:31,000 --> 01:46:32,000
就完全不行了

3505
01:46:32,000 --> 01:46:33,000
因为那种东西

3506
01:46:33,000 --> 01:46:34,000
你不跑起来

3507
01:46:34,000 --> 01:46:35,000
或者说你跑起来

3508
01:46:35,000 --> 01:46:37,000
没有跑到那个代码

3509
01:46:37,000 --> 01:46:38,000
那里去

3510
01:46:38,000 --> 01:46:39,000
可能都不会很好的

3511
01:46:39,000 --> 01:46:40,000
发现那个问题

3512
01:46:40,000 --> 01:46:42,000
对

3513
01:46:42,000 --> 01:46:42,000
所以

3514
01:46:42,000 --> 01:46:44,000
所以我觉得

3515
01:46:44,000 --> 01:46:45,000
这里还是有一点区别吧

3516
01:46:45,000 --> 01:46:46,000
也可能是为什么

3517
01:46:46,000 --> 01:46:47,000
像 Rob Pike

3518
01:46:47,000 --> 01:46:49,000
因为他也是 go 的这个作者

3519
01:46:49,000 --> 01:46:51,000
他能

3520
01:46:51,000 --> 01:46:53,000
他能敢于

3521
01:46:53,000 --> 01:46:54,000
用那个什么

3522
01:46:54,000 --> 01:46:54,000
Arcme

3523
01:46:54,000 --> 01:46:57,000
来写这个程序

3524
01:46:57,000 --> 01:46:59,000
而不用担心写错

3525
01:46:59,000 --> 01:47:00,000
反正大约程序员

3526
01:47:00,000 --> 01:47:02,000
应该是不会出错的

3527
01:47:02,000 --> 01:47:03,000
可能是这样

3528
01:47:03,000 --> 01:47:04,000
对

3529
01:47:04,000 --> 01:47:05,000
然后 Arcme

3530
01:47:05,000 --> 01:47:06,000
在我看来

3531
01:47:06,000 --> 01:47:07,000
他有

3532
01:47:07,000 --> 01:47:08,000
就是他比较

3533
01:47:08,000 --> 01:47:10,000
hardcore 的一点

3534
01:47:10,000 --> 01:47:11,000
就是他

3535
01:47:11,000 --> 01:47:12,000
有点像 Lisp

3536
01:47:12,000 --> 01:47:13,000
他的

3537
01:47:13,000 --> 01:47:15,000
他的很多东西

3538
01:47:15,000 --> 01:47:15,000
是可以

3539
01:47:15,000 --> 01:47:17,000
在运行时改变的

3540
01:47:17,000 --> 01:47:18,000
比如说

3541
01:47:18,000 --> 01:47:19,000
我们司空见惯的

3542
01:47:19,000 --> 01:47:20,000
这样一个

3543
01:47:20,000 --> 01:47:21,000
Layout

3544
01:47:21,000 --> 01:47:22,000
就是

3545
01:47:22,000 --> 01:47:23,000
下面是一片

3546
01:47:23,000 --> 01:47:24,000
可以编辑的区域

3547
01:47:24,000 --> 01:47:25,000
然后上面有一堆菜单栏

3548
01:47:25,000 --> 01:47:27,000
菜单栏里面的每个命令

3549
01:47:27,000 --> 01:47:28,000
比如说

3550
01:47:28,000 --> 01:47:29,000
Edit

3551
01:47:29,000 --> 01:47:30,000
View

3552
01:47:30,000 --> 01:47:31,000
或者 Format

3553
01:47:31,000 --> 01:47:34,000
你会觉得

3554
01:47:34,000 --> 01:47:36,000
点那个 Edit

3555
01:47:36,000 --> 01:47:38,000
然后下面出现一个 Dropdown list

3556
01:47:38,000 --> 01:47:39,000
然后从里面选一个命令

3557
01:47:39,000 --> 01:47:40,000
是非常自然的事情

3558
01:47:40,000 --> 01:47:41,000
但是你有没有想过

3559
01:47:41,000 --> 01:47:43,000
假如说

3560
01:47:43,000 --> 01:47:46,000
菜单栏这一行里面的每一个字符

3561
01:47:46,000 --> 01:47:47,000
也都是可以更改的

3562
01:47:47,000 --> 01:47:50,000
而 Arcme

3563
01:47:50,000 --> 01:47:51,000
它就是这样一种变弃器

3564
01:47:51,000 --> 01:47:52,000
Arcme 的

3565
01:47:52,000 --> 01:47:54,000
你打开一个 Buffer

3566
01:47:54,000 --> 01:47:56,000
或者打开一个

3567
01:47:56,000 --> 01:47:58,000
编辑文件的区域的时候

3568
01:47:58,000 --> 01:48:00,000
它上面会有一排

3569
01:48:00,000 --> 01:48:02,000
这个菜单栏那样的东西

3570
01:48:02,000 --> 01:48:04,000
而且它的确也是卖菜单栏

3571
01:48:04,000 --> 01:48:05,000
比如说有 Edit

3572
01:48:05,000 --> 01:48:07,000
有 Del 之类的

3573
01:48:07,000 --> 01:48:08,000
然后你比如说你点一下 Edit

3574
01:48:08,000 --> 01:48:10,000
而且我记得应该是

3575
01:48:10,000 --> 01:48:11,000
对 Arcme 是一个

3576
01:48:11,000 --> 01:48:13,000
一定要用三件鼠标

3577
01:48:13,000 --> 01:48:14,000
才能操作的

3578
01:48:14,000 --> 01:48:15,000
这个编辑器

3579
01:48:15,000 --> 01:48:17,000
你用左键点一行文字

3580
01:48:17,000 --> 01:48:18,000
是选中它

3581
01:48:18,000 --> 01:48:19,000
然后用中键点一行文字

3582
01:48:19,000 --> 01:48:20,000
是 Whatever

3583
01:48:20,000 --> 01:48:22,000
应该是执行吧

3584
01:48:22,000 --> 01:48:23,000
然后用右键点

3585
01:48:23,000 --> 01:48:25,000
又是又有其他的功用

3586
01:48:25,000 --> 01:48:28,000
就是如果你用左键点一下

3587
01:48:28,000 --> 01:48:28,000
那个

3588
01:48:28,000 --> 01:48:31,000
菜单栏里面的 Edit

3589
01:48:31,000 --> 01:48:33,000
不会有任何方言

3590
01:48:33,000 --> 01:48:35,000
你只会把光标放在 Edit 那边

3591
01:48:35,000 --> 01:48:37,000
然后此时你可以改变这个 Edit

3592
01:48:37,000 --> 01:48:39,000
比如说你可以把 Edit 这个词删掉

3593
01:48:39,000 --> 01:48:40,000
然后把它改成

3594
01:48:40,000 --> 01:48:43,000
比如说 Del

3595
01:48:43,000 --> 01:48:45,000
然后你再用你的中键

3596
01:48:45,000 --> 01:48:46,000
去点一下这个 Del

3597
01:48:46,000 --> 01:48:48,000
你会发现

3598
01:48:48,000 --> 01:48:51,000
你原来在那个编辑区里面

3599
01:48:51,000 --> 01:48:53,000
被选中了一段文字

3600
01:48:53,000 --> 01:48:54,000
被删掉了

3601
01:48:54,000 --> 01:48:56,000
对

3602
01:48:56,000 --> 01:48:57,000
就是它是一个

3603
01:48:57,000 --> 01:49:02,000
它的所谓可定制的这么一个功能

3604
01:49:02,000 --> 01:49:06,000
被扩展到了用户界面本身

3605
01:49:06,000 --> 01:49:06,000
对

3606
01:49:06,000 --> 01:49:07,000
而且

3607
01:49:07,000 --> 01:49:10,000
所以它是一个可以编辑自己的编辑器

3608
01:49:10,000 --> 01:49:11,000
对

3609
01:49:11,000 --> 01:49:14,000
它不仅能够配置自己

3610
01:49:14,000 --> 01:49:15,000
而且能够编辑自己

3611
01:49:15,000 --> 01:49:19,000
这是非常先锋的一种使用方式

3612
01:49:19,000 --> 01:49:20,000
应该说

3613
01:49:20,000 --> 01:49:22,000
就像 Lisp 一样

3614
01:49:22,000 --> 01:49:25,000
它的使用是如此灵活

3615
01:49:25,000 --> 01:49:27,000
也就是人们不知道应该怎么使用它

3616
01:49:27,000 --> 01:49:31,000
对

3617
01:49:31,000 --> 01:49:34,000
所以其实你看

3618
01:49:34,000 --> 01:49:37,000
像他们之前那个购语言的

3619
01:49:37,000 --> 01:49:38,000
那个什么

3620
01:49:38,000 --> 01:49:39,000
这个日期的展示

3621
01:49:39,000 --> 01:49:40,000
也觉得很奇怪

3622
01:49:40,000 --> 01:49:40,000
对吧

3623
01:49:40,000 --> 01:49:41,000
这种方式

3624
01:49:41,000 --> 01:49:42,000
编辑也是很奇怪

3625
01:49:42,000 --> 01:49:43,000
对

3626
01:49:43,000 --> 01:49:45,000
有时候我觉得这些比较

3627
01:49:45,000 --> 01:49:47,000
比较比较

3628
01:49:47,000 --> 01:49:49,000
unorthodox 的

3629
01:49:49,000 --> 01:49:52,000
就是非正统的方

3630
01:49:52,000 --> 01:49:55,000
或者说非我们五倍平庸之人

3631
01:49:55,000 --> 01:49:56,000
所能理解

3632
01:49:56,000 --> 01:49:58,000
想象出的特别的方式

3633
01:49:58,000 --> 01:49:59,000
有时候比较

3634
01:49:59,000 --> 01:50:01,000
非常的 pragmatic

3635
01:50:01,000 --> 01:50:03,000
有时候就非常的 alien

3636
01:50:03,000 --> 01:50:04,000
非常的非常的

3637
01:50:04,000 --> 01:50:04,000
非常的

3638
01:50:04,000 --> 01:50:06,000
就

3639
01:50:06,000 --> 01:50:07,000
就

3640
01:50:07,000 --> 01:50:08,000
非常奇异啊

3641
01:50:08,000 --> 01:50:10,000
有时候不知道是件好事还是坏事

3642
01:50:10,000 --> 01:50:12,000
但无论如何对于你的

3643
01:50:12,000 --> 01:50:15,000
跳出你的这个 comfortable zone

3644
01:50:15,000 --> 01:50:16,000
是有帮助的

3645
01:50:16,000 --> 01:50:16,000
对

3646
01:50:16,000 --> 01:50:18,000
就有时候你真的是

3647
01:50:18,000 --> 01:50:21,000
如果你听到一个非常激进

3648
01:50:21,000 --> 01:50:23,000
古怪或奇怪的观点

3649
01:50:23,000 --> 01:50:23,000
而且有

3650
01:50:23,000 --> 01:50:26,000
你有知道一个是一个很厉害的人

3651
01:50:26,000 --> 01:50:27,000
在这么做

3652
01:50:27,000 --> 01:50:29,000
你可能要放下所有成绩

3653
01:50:29,000 --> 01:50:30,000
然后去看一下

3654
01:50:30,000 --> 01:50:31,000
想一想

3655
01:50:31,000 --> 01:50:32,000
就是所谓的叫什么

3656
01:50:32,000 --> 01:50:34,000
give you five minutes

3657
01:50:34,000 --> 01:50:37,000
去想一下他为什么会这样

3658
01:50:37,000 --> 01:50:37,000
有什么

3659
01:50:37,000 --> 01:50:37,000
对

3660
01:50:37,000 --> 01:50:39,000
你就像一个风险投资人

3661
01:50:39,000 --> 01:50:41,000
然后进来一个站着精英的创业者

3662
01:50:41,000 --> 01:50:43,000
你要先听听他

3663
01:50:43,000 --> 01:50:44,000
到底要说什么不是

3664
01:50:44,000 --> 01:50:47,000
然后想想这个东西能不能成功

3665
01:50:47,000 --> 01:50:47,000
对

3666
01:50:47,000 --> 01:50:49,000
所以有时候会

3667
01:50:49,000 --> 01:50:52,000
你会觉得学到一些完全不一样的新鲜的一些东西

3668
01:50:52,000 --> 01:50:53,000
对

3669
01:50:53,000 --> 01:50:55,000
而且就像风险投资商一样

3670
01:50:55,000 --> 01:50:58,000
如果你听你接受了这个观点之后

3671
01:50:58,000 --> 01:51:00,000
你觉得你愿意把你的时间

3672
01:51:00,000 --> 01:51:03,000
这一个资本投入进去

3673
01:51:03,000 --> 01:51:04,000
学习一下

3674
01:51:04,000 --> 01:51:06,000
投资在这个 idea 上面

3675
01:51:06,000 --> 01:51:09,000
也许将来的回报是非常高的

3676
01:51:09,000 --> 01:51:11,000
就好像就比如说 Vim

3677
01:51:11,000 --> 01:51:14,000
就是我在 Cura 上找到了一个对比

3678
01:51:14,000 --> 01:51:16,000
那个 Vim 和 Emax 的答案里面

3679
01:51:16,000 --> 01:51:18,000
这个作者就说

3680
01:51:18,000 --> 01:51:20,000
你在 Vim 里面的投资

3681
01:51:20,000 --> 01:51:23,000
会对于你一生来说

3682
01:51:23,000 --> 01:51:24,000
都是有不注意的

3683
01:51:24,000 --> 01:51:25,000
而且可以在

3684
01:51:25,000 --> 01:51:27,000
零零多多很多其他的

3685
01:51:27,000 --> 01:51:29,000
那个工具里面得到应用

3686
01:51:29,000 --> 01:51:30,000
比如说

3687
01:51:30,000 --> 01:51:31,000
最简单的一个例子

3688
01:51:31,000 --> 01:51:32,000
J 和 K

3689
01:51:32,000 --> 01:51:34,000
这个

3690
01:51:34,000 --> 01:51:36,000
你按下 J 是下一个

3691
01:51:36,000 --> 01:51:37,000
按下 K 是上一个

3692
01:51:37,000 --> 01:51:37,000
在

3693
01:51:37,000 --> 01:51:39,000
就下一行

3694
01:51:39,000 --> 01:51:39,000
上一行

3695
01:51:39,000 --> 01:51:41,000
在 Vim 里面是这样

3696
01:51:41,000 --> 01:51:42,000
在 Gmail 里面也是这样

3697
01:51:42,000 --> 01:51:43,000
对

3698
01:51:43,000 --> 01:51:46,000
Gmail 里面如果你启用了一个叫什么

3699
01:51:46,000 --> 01:51:48,000
快捷键模式的话

3700
01:51:48,000 --> 01:51:50,000
你会发现有很多这种键绑定式

3701
01:51:50,000 --> 01:51:51,000
非常有 Vim 风格

3702
01:51:51,000 --> 01:51:52,000
对

3703
01:51:52,000 --> 01:51:55,000
就是如果你学会了 Vim 之后

3704
01:51:55,000 --> 01:52:00,000
你的经验是可以应用在很多其他的工具上面的

3705
01:52:00,000 --> 01:52:00,000
而反过来

3706
01:52:00,000 --> 01:52:03,000
如果你把你的时间花在 Emax 上面的话

3707
01:52:03,000 --> 01:52:06,000
你会发现你就局限在 Emax 里面了

3708
01:52:06,000 --> 01:52:09,000
当然 Emax 是一个非常庞大广大的天地

3709
01:52:09,000 --> 01:52:14,000
但是你所有的知识就仅仅只是在 Emax 内部有用而已

3710
01:52:14,000 --> 01:52:17,000
当然部分原因也就是因为 Lisp 这个东西

3711
01:52:17,000 --> 01:52:19,000
对

3712
01:52:19,000 --> 01:52:19,000
这是一个

3713
01:52:19,000 --> 01:52:20,000
对还有一个

3714
01:52:20,000 --> 01:52:21,000
有一个那个

3715
01:52:21,000 --> 01:52:26,000
最早的那个 Firefox 有一个插件叫做

3716
01:52:26,000 --> 01:52:28,000
Vaporator 吧

3717
01:52:28,000 --> 01:52:29,000
应该是

3718
01:52:29,000 --> 01:52:33,000
就是可以让你的这个 Firefox 的

3719
01:52:33,000 --> 01:52:35,000
你不用鼠标操作这个浏览器了

3720
01:52:35,000 --> 01:52:36,000
你可以用

3721
01:52:36,000 --> 01:52:37,000
秘密行

3722
01:52:37,000 --> 01:52:38,000
不是秘密行

3723
01:52:38,000 --> 01:52:41,000
就是 Vim 快捷键的方式去操作它来翻

3724
01:52:41,000 --> 01:52:43,000
你居然没有在用这种东西吗

3725
01:52:43,000 --> 01:52:44,000
我有啊

3726
01:52:44,000 --> 01:52:46,000
我发 Fox 很早之前就在用这个

3727
01:52:46,000 --> 01:52:47,000
后来也有一个

3728
01:52:47,000 --> 01:52:49,000
在 Chrome 下面也有啊

3729
01:52:49,000 --> 01:52:49,000
对

3730
01:52:49,000 --> 01:52:51,000
就是我一直都在用它

3731
01:52:51,000 --> 01:52:51,000
最开始

3732
01:52:51,000 --> 01:52:52,000
你现在还在用吗

3733
01:52:52,000 --> 01:52:53,000
是在用一个叫做

3734
01:52:53,000 --> 01:52:55,000
最开始是用一个叫做 Vimium

3735
01:52:55,000 --> 01:52:56,000
OK

3736
01:52:56,000 --> 01:52:59,000
后来现在用东西叫做 CVim

3737
01:52:59,000 --> 01:53:01,000
就是小写的 C 然后化成 Vim

3738
01:53:01,000 --> 01:53:02,000
OK

3739
01:53:02,000 --> 01:53:04,000
就是 ChromeVim 可以理解吗

3740
01:53:04,000 --> 01:53:07,000
而且这个插件已经逆天到什么地步

3741
01:53:07,000 --> 01:53:11,000
就是它可以在里面进入这个 Visual Mode

3742
01:53:11,000 --> 01:53:15,000
就是你用 J 向下移动网页

3743
01:53:15,000 --> 01:53:17,000
然后用 F

3744
01:53:17,000 --> 01:53:19,000
然后你按下 F 之后

3745
01:53:19,000 --> 01:53:21,000
屏幕上所有的链接都会被高亮

3746
01:53:21,000 --> 01:53:25,000
然后每一个链接会有一个两个字母

3747
01:53:25,000 --> 01:53:26,000
到三个字母的组合

3748
01:53:26,000 --> 01:53:26,000
你按

3749
01:53:26,000 --> 01:53:27,000
然后你接下来按那两个字母

3750
01:53:27,000 --> 01:53:28,000
那个链接就会被打开

3751
01:53:28,000 --> 01:53:29,000
这个我知道

3752
01:53:29,000 --> 01:53:31,000
那个 Evaporator 也有这个功能吗

3753
01:53:31,000 --> 01:53:31,000
对

3754
01:53:31,000 --> 01:53:34,000
然后最逆天的是你按一下 V

3755
01:53:34,000 --> 01:53:35,000
就进入了 Visual Mode

3756
01:53:35,000 --> 01:53:37,000
在 Visual Mode 之下

3757
01:53:37,000 --> 01:53:40,000
你按 J 和 K 可以移动光标

3758
01:53:40,000 --> 01:53:41,000
对

3759
01:53:41,000 --> 01:53:44,000
然后在你移动光标同时可以选中文字

3760
01:53:44,000 --> 01:53:45,000
然后按

3761
01:53:45,000 --> 01:53:48,000
这个时候再回到 Normal Mode

3762
01:53:48,000 --> 01:53:49,000
按一下 Y

3763
01:53:49,000 --> 01:53:51,000
你就可以把刚才选中那段文字

3764
01:53:51,000 --> 01:53:54,000
复制到剪贴板里面

3765
01:53:54,000 --> 01:53:55,000
完全不需要用鼠标

3766
01:53:55,000 --> 01:53:58,000
我之前用过非常长一段时间

3767
01:53:58,000 --> 01:53:59,000
那个 Visual Mode

3768
01:53:59,000 --> 01:54:02,000
后来切到那个 Chrome

3769
01:54:02,000 --> 01:54:03,000
当时最早的时候

3770
01:54:03,000 --> 01:54:04,000
Chrome 是没有这种插件的

3771
01:54:04,000 --> 01:54:05,000
也就没有用了

3772
01:54:05,000 --> 01:54:06,000
后来好像也就把这些事情

3773
01:54:06,000 --> 01:54:10,000
对我是第一时间出现这样的插件的时候就开始用了

3774
01:54:10,000 --> 01:54:12,000
所以我一直非常关注

3775
01:54:12,000 --> 01:54:20,000
我可以凭着自己这个小白鼠的经验来向大家拍着胸部推广 CVIM 这个插件

3776
01:54:20,000 --> 01:54:22,000
一定绝对是所有的

3777
01:54:22,000 --> 01:54:23,000
CVIM 对吧

3778
01:54:23,000 --> 01:54:24,000
CVIM 对

3779
01:54:24,000 --> 01:54:29,000
所有的这个 VM 化 Chrome 的插件里面最好用的一个

3780
01:54:29,000 --> 01:54:32,000
那个什么 Safari 有类似这种东西吗

3781
01:54:32,000 --> 01:54:35,000
Safari 有一个

3782
01:54:35,000 --> 01:54:36,000
但是不好

3783
01:54:36,000 --> 01:54:37,000
瘸得要死

3784
01:54:37,000 --> 01:54:37,000
对

3785
01:54:37,000 --> 01:54:39,000
这就是为什么有一天

3786
01:54:39,000 --> 01:54:43,000
就是那个刚升了 Yosemite 之后

3787
01:54:43,000 --> 01:54:47,000
用了大概四个小时的 Safari

3788
01:54:47,000 --> 01:54:49,000
然后屁股尿流了逃回了 Chrome

3789
01:54:49,000 --> 01:54:51,000
就是因为完全不能用

3790
01:54:51,000 --> 01:54:53,000
我明白你的苦衷

3791
01:54:53,000 --> 01:54:57,000
因为现在我相当长一段 Safari 作为的主力浏览器了

3792
01:54:57,000 --> 01:55:00,000
但所谓主力就 60%左右的时间

3793
01:55:00,000 --> 01:55:05,000
因为很多时候要切到 Chrome 连用那个 Flash 插件非常不幸

3794
01:55:05,000 --> 01:55:09,000
但是我发现自从有这个多点触控的触摸板之后

3795
01:55:09,000 --> 01:55:11,000
我就很少用那种方式

3796
01:55:11,000 --> 01:55:13,000
就是浏览网页的时候

3797
01:55:13,000 --> 01:55:16,000
少使用键盘操作

3798
01:55:16,000 --> 01:55:21,000
不可是你觉得你真的觉得多点触控要比用键盘方便吗

3799
01:55:21,000 --> 01:55:22,000
不会啊

3800
01:55:22,000 --> 01:55:25,000
就从销量上讲肯定是不不不不好的

3801
01:55:25,000 --> 01:55:26,000
但是我懒

3802
01:55:26,000 --> 01:55:28,000
我现在我现在越来越懒了

3803
01:55:28,000 --> 01:55:30,000
就是懒得去碰它

3804
01:55:30,000 --> 01:55:32,000
懒得去配置那么多东西

3805
01:55:32,000 --> 01:55:36,000
然后就可能是受了什么重了

3806
01:55:36,000 --> 01:55:38,000
就是即便不用配置的话

3807
01:55:38,000 --> 01:55:41,000
多点触控

3808
01:55:41,000 --> 01:55:47,000
我就是我现在仍旧是下意识的会去按空格键向下翻页

3809
01:55:47,000 --> 01:55:49,000
在浏览器里面

3810
01:55:49,000 --> 01:55:50,000
而不是用两指向下卷动

3811
01:55:50,000 --> 01:55:53,000
但是你要向上翻怎么办

3812
01:55:53,000 --> 01:55:54,000
你没办法向上翻

3813
01:55:54,000 --> 01:55:58,000
但是 99%的时间你难道不都是在向下翻吗

3814
01:55:58,000 --> 01:56:00,000
有这么一个问题

3815
01:56:00,000 --> 01:56:03,000
就控格键盘翻页它那个高度是固定的嘛

3816
01:56:03,000 --> 01:56:05,000
就一次都是翻译品嘛

3817
01:56:05,000 --> 01:56:07,000
可这难道不是一件好事吗

3818
01:56:07,000 --> 01:56:09,000
因为有时候我想把我

3819
01:56:09,000 --> 01:56:13,000
因为比如说你这一个网页从上到下一个网页

3820
01:56:13,000 --> 01:56:14,000
我想把我

3821
01:56:14,000 --> 01:56:16,000
我先读到可能这个网页的下半部分了

3822
01:56:16,000 --> 01:56:17,000
我有一种不好的习惯

3823
01:56:17,000 --> 01:56:21,000
我会想把我正在读的那一部分字挪到屏幕的中间

3824
01:56:21,000 --> 01:56:23,000
就高度的中间来读

3825
01:56:23,000 --> 01:56:26,000
所以你是那个 Ctrl 加 L 的

3826
01:56:26,000 --> 01:56:28,000
就是 EMEX 里面的 Ctrl 加 L

3827
01:56:28,000 --> 01:56:32,000
我怎么会知道 EMEX 的快捷键

3828
01:56:32,000 --> 01:56:34,000
而不知道 VIM 里面

3829
01:56:34,000 --> 01:56:34,000
VIM 也有这个功能

3830
01:56:34,000 --> 01:56:36,000
VIM 的快捷键是什么

3831
01:56:36,000 --> 01:56:40,000
VIM 里面我还是用的蛮少的

3832
01:56:40,000 --> 01:56:40,000
你也不记得

3833
01:56:40,000 --> 01:56:41,000
你也不记得

3834
01:56:41,000 --> 01:56:44,000
但是在 EMEX 里面

3835
01:56:44,000 --> 01:56:45,000
这个网页是 Ctrl 加 L

3836
01:56:45,000 --> 01:56:46,000
Ctrl 加 L 1 吧

3837
01:56:46,000 --> 01:56:47,000
我记得你可以试一下

3838
01:56:47,000 --> 01:56:49,000
我试一下

3839
01:56:49,000 --> 01:56:51,000
就是把当前行移动到屏幕的中间

3840
01:56:51,000 --> 01:56:52,000
对对对对

3841
01:56:52,000 --> 01:56:53,000
我知道你说的那个东西

3842
01:56:53,000 --> 01:56:55,000
如果没记错的话

3843
01:56:55,000 --> 01:56:56,000
应该是这个

3844
01:56:56,000 --> 01:57:00,000
不是一直下一行还是 J 什么

3845
01:57:00,000 --> 01:57:01,000
我一下子也记不清楚了

3846
01:57:01,000 --> 01:57:02,000
Middle 吧

3847
01:57:02,000 --> 01:57:02,000
对

3848
01:57:02,000 --> 01:57:03,000
看想不想

3849
01:57:03,000 --> 01:57:04,000
对

3850
01:57:04,000 --> 01:57:04,000
anyway

3851
01:57:04,000 --> 01:57:05,000
就是

3852
01:57:05,000 --> 01:57:08,000
就我知道这个习惯其实效率挺低

3853
01:57:08,000 --> 01:57:09,000
但是就是

3854
01:57:09,000 --> 01:57:12,000
手键忍不住要去拨弄一下这个触摸版

3855
01:57:12,000 --> 01:57:14,000
而且就如果你用触控版的话

3856
01:57:14,000 --> 01:57:16,000
你可以很方便的

3857
01:57:16,000 --> 01:57:17,000
因为这个时候这张网

3858
01:57:17,000 --> 01:57:19,000
就特别是在 Mac 上面下

3859
01:57:19,000 --> 01:57:21,000
这个网页的这个流畅程度

3860
01:57:21,000 --> 01:57:22,000
就像一张纸一样

3861
01:57:22,000 --> 01:57:23,000
你可以摆到

3862
01:57:23,000 --> 01:57:26,000
你想要的任何一个像素的位置和精度

3863
01:57:26,000 --> 01:57:29,000
所以我觉得这个时候还蛮好的

3864
01:57:29,000 --> 01:57:31,000
所以现在我就一直在用触摸版

3865
01:57:31,000 --> 01:57:33,000
在去浏览网页去滑来滑去

3866
01:57:33,000 --> 01:57:35,000
而且又是那个 Safari 面

3867
01:57:35,000 --> 01:57:37,000
可以用这个叫什么

3868
01:57:37,000 --> 01:57:38,000
左滑右滑去回退那些

3869
01:57:38,000 --> 01:57:41,000
Chrome 里面也可以

3870
01:57:41,000 --> 01:57:42,000
Chrome 里面没有 Safari

3871
01:57:42,000 --> 01:57:44,000
只不过视觉效果不是很好

3872
01:57:44,000 --> 01:57:49,000
不是不是我觉得它的那个对这个触摸版的反馈跟 Safari 是不一样的

3873
01:57:49,000 --> 01:57:50,000
对有点 buggy

3874
01:57:50,000 --> 01:57:52,000
对很奇怪我不知道为什么

3875
01:57:52,000 --> 01:57:54,000
但是 Safari 的那个感觉流畅的多

3876
01:57:54,000 --> 01:57:55,000
然后我很喜欢

3877
01:57:55,000 --> 01:57:56,000
我想起来了

3878
01:57:56,000 --> 01:57:58,000
对在 VIM 里面这个功能是 Z.

3879
01:57:58,000 --> 01:57:59,000
Z.

3880
01:57:59,000 --> 01:58:00,000
Z.

3881
01:58:00,000 --> 01:58:03,000
Z.是把当前行

3882
01:58:03,000 --> 01:58:08,000
就是 Cursor 所在当前行挪到屏幕的中间

3883
01:58:08,000 --> 01:58:09,000
是这样吗

3884
01:58:09,000 --> 01:58:11,000
真的吗

3885
01:58:11,000 --> 01:58:11,000
OK

3886
01:58:11,000 --> 01:58:16,000
可见我这个功能也是不常用的

3887
01:58:16,000 --> 01:58:16,000
OK

3888
01:58:16,000 --> 01:58:18,000
对

3889
01:58:18,000 --> 01:58:20,000
就刚才解释那个问题

3890
01:58:20,000 --> 01:58:21,000
就是其实我现在越来越懒

3891
01:58:21,000 --> 01:58:24,000
就是能系统原生的就用系统原生的

3892
01:58:24,000 --> 01:58:25,000
懒得去配置了

3893
01:58:25,000 --> 01:58:26,000
对

3894
01:58:26,000 --> 01:58:32,000
对其实我们说了 Windows

3895
01:58:32,000 --> 01:58:36,000
我们说了 Mac 和 Windows 下面的文明编系

3896
01:58:36,000 --> 01:58:39,000
Linux 下面你会用什么来编辑文件呢

3897
01:58:39,000 --> 01:58:42,000
就是假如你用 Linux 图形版的话

3898
01:58:42,000 --> 01:58:42,000
还是 VIM

3899
01:58:42,000 --> 01:58:48,000
那有没有什么初学者友好的编辑系呢

3900
01:58:48,000 --> 01:58:51,000
他有一个 Gedit 吧

3901
01:58:51,000 --> 01:58:52,000
我记得

3902
01:58:52,000 --> 01:58:52,000
Ubuntu

3903
01:58:52,000 --> 01:58:55,000
对可是 Gedit 是一个非常废的编辑系

3904
01:58:55,000 --> 01:58:58,000
你要初学者那么高级强大的编辑系

3905
01:58:58,000 --> 01:58:59,000
他也可以找不着板

3906
01:58:59,000 --> 01:59:01,000
找不着方向了

3907
01:59:01,000 --> 01:59:03,000
好吧

3908
01:59:03,000 --> 01:59:03,000
对吧

3909
01:59:03,000 --> 01:59:06,000
可是我觉得 Gedit 就很像 Notepad

3910
01:59:06,000 --> 01:59:09,000
就一开始就不应该知道

3911
01:59:09,000 --> 01:59:09,000
我觉得他比 Notepad 的好多了好吧

3912
01:59:09,000 --> 01:59:12,000
你这样踩他真的好吗

3913
01:59:12,000 --> 01:59:13,000
好吧

3914
01:59:13,000 --> 01:59:17,000
还有一个叫什么 Nano

3915
01:59:17,000 --> 01:59:19,000
Nano

3916
01:59:19,000 --> 01:59:21,000
Nano 可以叫什么

3917
01:59:21,000 --> 01:59:23,000
乞丐版 Emacs

3918
01:59:23,000 --> 01:59:25,000
Nano Pico

3919
01:59:25,000 --> 01:59:27,000
这些就像 Microsoft

3920
01:59:27,000 --> 01:59:28,000
Nuosoft

3921
01:59:28,000 --> 01:59:30,000
然后 Nano 下面还有个 Pico

3922
01:59:30,000 --> 01:59:31,000
对

3923
01:59:31,000 --> 01:59:33,000
这些一个一个比小

3924
01:59:33,000 --> 01:59:35,000
那个就纯粹是给

3925
01:59:35,000 --> 01:59:41,000
就是千年等一回配置一个配置文件的时候用的

3926
01:59:41,000 --> 01:59:42,000
而且真的很小

3927
01:59:42,000 --> 01:59:44,000
对

3928
01:59:44,000 --> 01:59:45,000
Nano 是非常非常小

3929
01:59:45,000 --> 01:59:48,000
但我每次用 Nano 都有一种

3930
01:59:48,000 --> 01:59:50,000
我到底在用什么来的错觉

3931
01:59:50,000 --> 01:59:51,000
我到底是在干嘛

3932
01:59:51,000 --> 01:59:53,000
乞丐版 Emacs 都说了吗

3933
01:59:53,000 --> 01:59:54,000
对

3934
01:59:54,000 --> 01:59:55,000
可是

3935
01:59:55,000 --> 01:59:58,000
就他只有最基本的 Emacs 的肩膀地

3936
01:59:58,000 --> 02:00:01,000
没有任何可以扩展的功能

3937
02:00:01,000 --> 02:00:01,000
对

3938
02:00:01,000 --> 02:00:03,000
就我何必如此呢

3939
02:00:03,000 --> 02:00:06,000
我只需要立刻退出这个 Gedit 编辑器

3940
02:00:06,000 --> 02:00:08,000
然后设定一下 Edit 编量就可以

3941
02:00:08,000 --> 02:00:10,000
因为他小

3942
02:00:10,000 --> 02:00:13,000
他可以在很多这种发行版里面

3943
02:00:13,000 --> 02:00:15,000
作为一个最最基础的这个编辑器在用

3944
02:00:15,000 --> 02:00:18,000
可是 V 也不大

3945
02:00:18,000 --> 02:00:18,000
就像

3946
02:00:18,000 --> 02:00:21,000
就是 Mac 上面的默认 V

3947
02:00:21,000 --> 02:00:23,000
我刚才查的价是 1.5 Mbps

3948
02:00:23,000 --> 02:00:25,000
然后 Emacs 24 Mbps

3949
02:00:25,000 --> 02:00:27,000
不你这就用兆来衡量了

3950
02:00:27,000 --> 02:00:27,000
人家的主要

3951
02:00:27,000 --> 02:00:29,000
好吧 Pico 是 K 是吧

3952
02:00:29,000 --> 02:00:30,000
要用 KB 来衡量

3953
02:00:30,000 --> 02:00:31,000
OK

3954
02:00:31,000 --> 02:00:33,000
还是有很大的数量级的差异的

3955
02:00:33,000 --> 02:00:34,000
在里面

3956
02:00:34,000 --> 02:00:35,000
所以我还是能理解

3957
02:00:35,000 --> 02:00:36,000
就是有时候

3958
02:00:36,000 --> 02:00:36,000
比如说

3959
02:00:36,000 --> 02:00:38,000
他根本就不需要编辑什么

3960
02:00:38,000 --> 02:00:40,000
就是临时可能改配置文件

3961
02:00:40,000 --> 02:00:41,000
某一个字符

3962
02:00:41,000 --> 02:00:42,000
或者某一个行

3963
02:00:42,000 --> 02:00:43,000
改一行

3964
02:00:43,000 --> 02:00:43,000
对对对

3965
02:00:43,000 --> 02:00:46,000
所以他根本也就不需要那么多麻烦的功能

3966
02:00:46,000 --> 02:00:47,000
就

3967
02:00:47,000 --> 02:00:48,000
其实也还可以理解吧

3968
02:00:48,000 --> 02:00:49,000
OK

3969
02:00:49,000 --> 02:00:51,000
不需要

3970
02:00:51,000 --> 02:00:52,000
可是不需要麻烦的功能

3971
02:00:52,000 --> 02:00:54,000
你干嘛要上 Linux

3972
02:00:54,000 --> 02:00:56,000
有什么一段法

3973
02:00:56,000 --> 02:00:57,000
对

3974
02:00:57,000 --> 02:01:02,000
我们基本上聊完了编辑器吧

3975
02:01:02,000 --> 02:01:02,000
对

3976
02:01:02,000 --> 02:01:05,000
可以终于进入

3977
02:01:05,000 --> 02:01:07,000
这节目已经过去到四分之三的时候

3978
02:01:07,000 --> 02:01:11,000
终于可以进入我们的下一个环节

3979
02:01:11,000 --> 02:01:13,000
就是 IDE 了

3980
02:01:13,000 --> 02:01:16,000
我都不知道这个怎么从何讲起

3981
02:01:16,000 --> 02:01:19,000
其实首先我自己用的 IDE

3982
02:01:19,000 --> 02:01:21,000
这用的非常非常少

3983
02:01:21,000 --> 02:01:22,000
OK

3984
02:01:22,000 --> 02:01:23,000
我是因为工作的原因

3985
02:01:23,000 --> 02:01:24,000
不得不用 IDE

3986
02:01:24,000 --> 02:01:26,000
所以你在工作中哪个

3987
02:01:26,000 --> 02:01:26,000
Eclipse

3988
02:01:26,000 --> 02:01:30,000
我用 Eclipse 和 Xcode

3989
02:01:30,000 --> 02:01:31,000
OK

3990
02:01:31,000 --> 02:01:32,000
因为我

3991
02:01:32,000 --> 02:01:33,000
讲一下感受

3992
02:01:33,000 --> 02:01:37,000
用 Eclipse 的时候

3993
02:01:37,000 --> 02:01:38,000
感觉在地狱

3994
02:01:38,000 --> 02:01:40,000
用 Xcode 的时候

3995
02:01:40,000 --> 02:01:41,000
好像回到了天

3996
02:01:41,000 --> 02:01:44,000
天堂还是太夸张

3997
02:01:44,000 --> 02:01:45,000
就

3998
02:01:45,000 --> 02:01:46,000
我们可以这样说

3999
02:01:46,000 --> 02:01:47,000
Xcode 只有两

4000
02:01:47,000 --> 02:01:48,000
Xcode 就

4001
02:01:48,000 --> 02:01:52,000
先说 Visual Studio 好了

4002
02:01:52,000 --> 02:01:52,000
OK

4003
02:01:52,000 --> 02:01:53,000
Visual Studio

4004
02:01:53,000 --> 02:01:56,000
作为 Windows 上的老牌

4005
02:01:56,000 --> 02:02:00,000
或者说甚至说是龙头老大的 IDE

4006
02:02:00,000 --> 02:02:02,000
它有很多很多版本

4007
02:02:02,000 --> 02:02:02,000
对吧

4008
02:02:02,000 --> 02:02:02,000
对

4009
02:02:02,000 --> 02:02:04,000
有 Ultimate 版本

4010
02:02:04,000 --> 02:02:05,000
有 Prenum 版本

4011
02:02:05,000 --> 02:02:06,000
有 Test Pro 版本

4012
02:02:06,000 --> 02:02:07,000
有 Pro 版本

4013
02:02:07,000 --> 02:02:08,000
还有什么 Express Edition

4014
02:02:08,000 --> 02:02:09,000
whatever

4015
02:02:09,000 --> 02:02:10,000
所以他们这些版本

4016
02:02:10,000 --> 02:02:11,000
有什么区别吗

4017
02:02:11,000 --> 02:02:12,000
对

4018
02:02:12,000 --> 02:02:13,000
其实是有区别的

4019
02:02:13,000 --> 02:02:15,000
它专门有一页

4020
02:02:15,000 --> 02:02:15,000
一个 Matrix

4021
02:02:15,000 --> 02:02:17,000
来告诉你

4022
02:02:17,000 --> 02:02:18,000
每一个版本之间

4023
02:02:18,000 --> 02:02:20,000
有什么样具体的差别

4024
02:02:20,000 --> 02:02:21,000
比如说 Ultimate

4025
02:02:21,000 --> 02:02:22,000
有所谓的

4026
02:02:22,000 --> 02:02:25,000
Record Tracing 功能

4027
02:02:25,000 --> 02:02:28,000
就是你可以把用户的交互

4028
02:02:28,000 --> 02:02:28,000
录下来

4029
02:02:28,000 --> 02:02:32,000
然后重新播放用户的交互

4030
02:02:32,000 --> 02:02:34,000
然后在播放的共识中

4031
02:02:34,000 --> 02:02:34,000
去 Debug

4032
02:02:34,000 --> 02:02:35,000
What the

4033
02:02:35,000 --> 02:02:36,000
之类匪夷所思

4034
02:02:36,000 --> 02:02:37,000
凤毛林角用的

4035
02:02:37,000 --> 02:02:39,000
都在这个 Ultimate 里面

4036
02:02:39,000 --> 02:02:40,000
有所体现

4037
02:02:40,000 --> 02:02:40,000
OK

4038
02:02:40,000 --> 02:02:41,000
然后 Pro 版本

4039
02:02:41,000 --> 02:02:43,000
基本上是最亲民的一个版本

4040
02:02:43,000 --> 02:02:45,000
但仍旧是要钱的

4041
02:02:45,000 --> 02:02:46,000
一个

4042
02:02:46,000 --> 02:02:47,000
我记得它有一个免费的

4043
02:02:47,000 --> 02:02:49,000
针对学生的版本吧

4044
02:02:49,000 --> 02:02:49,000
对

4045
02:02:49,000 --> 02:02:50,000
What

4046
02:02:50,000 --> 02:02:51,000
针对学生

4047
02:02:51,000 --> 02:02:53,000
你是说 Express Edition 吗

4048
02:02:53,000 --> 02:02:53,000
还是

4049
02:02:53,000 --> 02:02:54,000
就叫 Express

4050
02:02:54,000 --> 02:02:55,000
Express 是免费的吗

4051
02:02:55,000 --> 02:02:57,000
Express Edition

4052
02:02:57,000 --> 02:02:58,000
可是并不是针对学生

4053
02:02:58,000 --> 02:02:59,000
它只是针对那些

4054
02:02:59,000 --> 02:03:02,000
我不知道怎么形容

4055
02:03:02,000 --> 02:03:04,000
因为其实 Visual

4056
02:03:04,000 --> 02:03:04,000
Light User

4057
02:03:04,000 --> 02:03:06,000
对

4058
02:03:06,000 --> 02:03:07,000
微软给编辑器

4059
02:03:07,000 --> 02:03:08,000
微软给 IDE

4060
02:03:08,000 --> 02:03:10,000
定一个价格

4061
02:03:10,000 --> 02:03:11,000
或者说微软 IDE 是要钱的

4062
02:03:11,000 --> 02:03:13,000
在我们小时候

4063
02:03:13,000 --> 02:03:13,000
在我小时候

4064
02:03:13,000 --> 02:03:15,000
看起来好像是天津第一的事情

4065
02:03:15,000 --> 02:03:15,000
因为

4066
02:03:15,000 --> 02:03:17,000
Microsoft 不就是这样吗

4067
02:03:17,000 --> 02:03:18,000
什么东西要钱

4068
02:03:18,000 --> 02:03:19,000
但

4069
02:03:19,000 --> 02:03:21,000
可是不就是因为这个

4070
02:03:21,000 --> 02:03:22,000
大家才去选择 Linux 吗

4071
02:03:22,000 --> 02:03:22,000
可是

4072
02:03:22,000 --> 02:03:25,000
现在已经 2014 年了

4073
02:03:25,000 --> 02:03:27,000
Microsoft 仍旧靠

4074
02:03:27,000 --> 02:03:28,000
买 IDE 来赚钱

4075
02:03:28,000 --> 02:03:29,000
我觉得这个是比较

4076
02:03:29,000 --> 02:03:30,000
让人费解的一件事情

4077
02:03:30,000 --> 02:03:31,000
它这些的

4078
02:03:31,000 --> 02:03:33,000
就是购买者

4079
02:03:33,000 --> 02:03:34,000
大部分是企业

4080
02:03:34,000 --> 02:03:35,000
所以反正其实有钱

4081
02:03:35,000 --> 02:03:37,000
该载就载

4082
02:03:37,000 --> 02:03:39,000
但

4083
02:03:39,000 --> 02:03:42,000
可是早期好吧

4084
02:03:42,000 --> 02:03:42,000
对吧

4085
02:03:42,000 --> 02:03:43,000
我也不知道该怎么

4086
02:03:43,000 --> 02:03:45,000
问题在于

4087
02:03:46,000 --> 02:03:48,000
对你觉得它应该免费吗

4088
02:03:48,000 --> 02:03:49,000
还是怎么样

4089
02:03:49,000 --> 02:03:52,000
我是觉得作为一个开发工具来说

4090
02:03:52,000 --> 02:03:55,000
难道更多的开发者

4091
02:03:55,000 --> 02:03:57,000
为你开发出更多的 APP 来说

4092
02:03:57,000 --> 02:03:57,000
对

4093
02:03:57,000 --> 02:04:00,000
难道不应该是对你这个平台的那种注意吗

4094
02:04:00,000 --> 02:04:02,000
为什么要为开发工具收费呢

4095
02:04:02,000 --> 02:04:04,000
这是一个好问题

4096
02:04:04,000 --> 02:04:06,000
这个怎么你还记得那个

4097
02:04:06,000 --> 02:04:07,000
Steve Barmore

4098
02:04:07,000 --> 02:04:08,000
那个 developer

4099
02:04:08,000 --> 02:04:09,000
developer

4100
02:04:09,000 --> 02:04:09,000
developer

4101
02:04:09,000 --> 02:04:10,000
developer

4102
02:04:10,000 --> 02:04:12,000
然后一窝

4103
02:04:12,000 --> 02:04:13,000
一窝下面还有汗

4104
02:04:13,000 --> 02:04:14,000
但是我们要

4105
02:04:14,000 --> 02:04:15,000
但是你买个编辑

4106
02:04:15,000 --> 02:04:16,000
我们说你 300 刀

4107
02:04:16,000 --> 02:04:17,000
对

4108
02:04:17,000 --> 02:04:17,000
没错

4109
02:04:17,000 --> 02:04:18,000
what the fuck

4110
02:04:18,000 --> 02:04:20,000
这个应该

4111
02:04:20,000 --> 02:04:21,000
Express 版本应该是免费的

4112
02:04:21,000 --> 02:04:22,000
就是可以

4113
02:04:22,000 --> 02:04:23,000
对 Express 版本是免费的

4114
02:04:23,000 --> 02:04:25,000
但是 Express 不能装插件吗

4115
02:04:25,000 --> 02:04:25,000
嗯

4116
02:04:25,000 --> 02:04:27,000
就就是这个意思吗

4117
02:04:27,000 --> 02:04:27,000
就是

4118
02:04:27,000 --> 02:04:28,000
这个

4119
02:04:28,000 --> 02:04:30,000
我的毕业设计是用那个

4120
02:04:30,000 --> 02:04:32,000
Cshop 写的

4121
02:04:32,000 --> 02:04:33,000
然后我当时用的应该就是

4122
02:04:33,000 --> 02:04:34,000
Cshop 的那个 Express Edition

4123
02:04:34,000 --> 02:04:35,000
OK

4124
02:04:35,000 --> 02:04:36,000
因为我

4125
02:04:36,000 --> 02:04:37,000
我也不知道

4126
02:04:37,000 --> 02:04:39,000
我们学校可能是有 Visual Studio 的

4127
02:04:39,000 --> 02:04:41,000
但只不过可能晚了十年

4128
02:04:41,000 --> 02:04:41,000
就是

4129
02:04:41,000 --> 02:04:43,000
是十年前的版本之类的

4130
02:04:43,000 --> 02:04:43,000
嗯

4131
02:04:43,000 --> 02:04:45,000
然后 Donets 那套东西

4132
02:04:45,000 --> 02:04:47,000
刚当时刚刚流行起来

4133
02:04:47,000 --> 02:04:47,000
根本还没有

4134
02:04:47,000 --> 02:04:48,000
因为我

4135
02:04:48,000 --> 02:04:49,000
我是从

4136
02:04:49,000 --> 02:04:52,000
Visual Basic

4137
02:04:52,000 --> 02:04:54,000
每次都要说 Visual Basic

4138
02:04:54,000 --> 02:04:55,000
这是什么

4139
02:04:55,000 --> 02:04:56,000
就每次都

4140
02:04:56,000 --> 02:04:56,000
真爱

4141
02:04:56,000 --> 02:04:57,000
都是

4142
02:04:57,000 --> 02:04:59,000
暴露了

4143
02:04:59,000 --> 02:05:01,000
被压抑的这个

4144
02:05:01,000 --> 02:05:02,000
这个欲望

4145
02:05:02,000 --> 02:05:03,000
就是 Visual Basic

4146
02:05:03,000 --> 02:05:03,000
对

4147
02:05:03,000 --> 02:05:03,000
对

4148
02:05:03,000 --> 02:05:05,000
我最开始是用 Visual

4149
02:05:05,000 --> 02:05:06,000
C++

4150
02:05:06,000 --> 02:05:07,000
6.0 吧

4151
02:05:07,000 --> 02:05:08,000
应该是

4152
02:05:08,000 --> 02:05:08,000
嗯

4153
02:05:08,000 --> 02:05:10,000
后来用 7.0

4154
02:05:10,000 --> 02:05:10,000
然后

4155
02:05:10,000 --> 02:05:11,000
当然 Donet 出来之后

4156
02:05:11,000 --> 02:05:12,000
立刻抛弃了

4157
02:05:12,000 --> 02:05:13,000
C++去用 Donet

4158
02:05:13,000 --> 02:05:14,000
因为觉得

4159
02:05:14,000 --> 02:05:15,000
Cshop 当时

4160
02:05:15,000 --> 02:05:16,000
真觉得 Cshop

4161
02:05:16,000 --> 02:05:17,000
是逆天级别的

4162
02:05:17,000 --> 02:05:18,000
那个好用的

4163
02:05:18,000 --> 02:05:20,000
对啊

4164
02:05:20,000 --> 02:05:21,000
因为那个时候

4165
02:05:21,000 --> 02:05:22,000
其实现在也是

4166
02:05:22,000 --> 02:05:23,000
现在它还是一个

4167
02:05:23,000 --> 02:05:24,000
设计的非常

4168
02:05:24,000 --> 02:05:25,000
好

4169
02:05:25,000 --> 02:05:25,000
就

4170
02:05:25,000 --> 02:05:25,000
就

4171
02:05:25,000 --> 02:05:28,000
起码有 85 分吧

4172
02:05:28,000 --> 02:05:28,000
的语言

4173
02:05:28,000 --> 02:05:29,000
对

4174
02:05:29,000 --> 02:05:30,000
是一个非常

4175
02:05:30,000 --> 02:05:31,000
仅次于

4176
02:05:31,000 --> 02:05:32,000
呃

4177
02:05:32,000 --> 02:05:34,000
此处

4178
02:05:34,000 --> 02:05:36,000
此处填入你最喜欢的语言

4179
02:05:36,000 --> 02:05:36,000
对

4180
02:05:36,000 --> 02:05:37,000
此处

4181
02:05:37,000 --> 02:05:38,000
仅次于 Dollar Language

4182
02:05:38,000 --> 02:05:39,000
的语言

4183
02:05:39,000 --> 02:05:42,000
对啊

4184
02:05:42,000 --> 02:05:43,000
因为那个时候

4185
02:05:43,000 --> 02:05:44,000
我还挺喜欢 Pascal

4186
02:05:44,000 --> 02:05:45,000
就是 Delphi 的

4187
02:05:45,000 --> 02:05:45,000
嗯

4188
02:05:45,000 --> 02:05:45,000
然后

4189
02:05:45,000 --> 02:05:47,000
Delphi 的那个作者

4190
02:05:47,000 --> 02:05:48,000
跑去

4191
02:05:48,000 --> 02:05:49,000
做了 Cshop

4192
02:05:49,000 --> 02:05:50,000
我也就觉得

4193
02:05:50,000 --> 02:05:51,000
Cshop 应该是

4194
02:05:51,000 --> 02:05:52,000
Next Generation

4195
02:05:52,000 --> 02:05:53,000
对啊

4196
02:05:53,000 --> 02:05:53,000
对啊

4197
02:05:53,000 --> 02:05:53,000
对啊

4198
02:05:53,000 --> 02:05:54,000
对啊

4199
02:05:54,000 --> 02:05:54,000
Hey Day

4200
02:05:54,000 --> 02:05:56,000
Language

4201
02:05:56,000 --> 02:05:57,000
但是对啊

4202
02:05:57,000 --> 02:05:58,000
那个时候

4203
02:05:58,000 --> 02:05:59,000
谁能想到自己

4204
02:05:59,000 --> 02:05:59,000
有一天会

4205
02:05:59,000 --> 02:06:00,000
会

4206
02:06:00,000 --> 02:06:00,000
会

4207
02:06:00,000 --> 02:06:01,000
彻底转向

4208
02:06:01,000 --> 02:06:02,000
彻底转向 Mac

4209
02:06:02,000 --> 02:06:04,000
OK

4210
02:06:04,000 --> 02:06:05,000
那这都是后话

4211
02:06:05,000 --> 02:06:05,000
对

4212
02:06:05,000 --> 02:06:06,000
就那个时候觉得

4213
02:06:06,000 --> 02:06:10,000
为什么我用苹果

4214
02:06:10,000 --> 02:06:12,000
为什么我用微软的东西

4215
02:06:12,000 --> 02:06:14,000
为微软开发软件

4216
02:06:14,000 --> 02:06:15,000
微软还要向我收钱

4217
02:06:15,000 --> 02:06:16,000
其实现在

4218
02:06:16,000 --> 02:06:17,000
我觉得它政策就这样子吧

4219
02:06:17,000 --> 02:06:18,000
就是比如说

4220
02:06:18,000 --> 02:06:18,000
现在很多

4221
02:06:18,000 --> 02:06:20,000
它对这种大学

4222
02:06:20,000 --> 02:06:21,000
有这种

4223
02:06:21,000 --> 02:06:21,000
就是

4224
02:06:21,000 --> 02:06:22,000
它现在叫什么

4225
02:06:22,000 --> 02:06:23,000
Dream Spark

4226
02:06:23,000 --> 02:06:23,000
这个项目

4227
02:06:23,000 --> 02:06:24,000
以前叫做

4228
02:06:24,000 --> 02:06:24,000
Dream Spark

4229
02:06:24,000 --> 02:06:26,000
以前叫做 Academy Alliance

4230
02:06:26,000 --> 02:06:27,000
就是

4231
02:06:27,000 --> 02:06:29,000
你如果你是大学的学生

4232
02:06:29,000 --> 02:06:30,000
然后至少你是读

4233
02:06:30,000 --> 02:06:31,000
这个软工或者是 CS 的

4234
02:06:31,000 --> 02:06:32,000
它可以去

4235
02:06:32,000 --> 02:06:34,000
系里面申请一个账号

4236
02:06:34,000 --> 02:06:35,000
可以免费下载

4237
02:06:35,000 --> 02:06:37,000
微软的大部分产品

4238
02:06:37,000 --> 02:06:38,000
比如像什么 Office

4239
02:06:38,000 --> 02:06:38,000
操作系统

4240
02:06:38,000 --> 02:06:40,000
还有这种开发工具

4241
02:06:40,000 --> 02:06:42,000
一套都是可以免费拿的

4242
02:06:42,000 --> 02:06:42,000
然后

4243
02:06:42,000 --> 02:06:43,000
我记得 Dream Spark

4244
02:06:43,000 --> 02:06:45,000
曾几何时是

4245
02:06:45,000 --> 02:06:46,000
各个高校

4246
02:06:46,000 --> 02:06:47,000
基本上是

4247
02:06:47,000 --> 02:06:48,000
趋势若鹜的一个东西

4248
02:06:48,000 --> 02:06:49,000
但是现在

4249
02:06:49,000 --> 02:06:50,000
据说是

4250
02:06:50,000 --> 02:06:51,000
微软的销售代表

4251
02:06:51,000 --> 02:06:53,000
要去高校里面求说

4252
02:06:53,000 --> 02:06:53,000
哎呀

4253
02:06:53,000 --> 02:06:54,000
跟我们签一个吧

4254
02:06:54,000 --> 02:06:55,000
我们免费给你们

4255
02:06:55,000 --> 02:06:58,000
你们只需要搭设一下

4256
02:06:58,000 --> 02:06:58,000
就什么

4257
02:06:58,000 --> 02:06:59,000
就什么可以了

4258
02:06:59,000 --> 02:07:00,000
甚至是你们什么

4259
02:07:00,000 --> 02:07:01,000
所有的那个

4260
02:07:01,000 --> 02:07:02,000
Access 都可以

4261
02:07:02,000 --> 02:07:03,000
在我们这边托管啊

4262
02:07:03,000 --> 02:07:04,000
什么的

4263
02:07:04,000 --> 02:07:06,000
就现在 Dream Spark

4264
02:07:06,000 --> 02:07:07,000
好像真的已经不那么

4265
02:07:07,000 --> 02:07:08,000
就微软现在

4266
02:07:08,000 --> 02:07:09,000
不那么必要

4267
02:07:09,000 --> 02:07:10,000
非常示威

4268
02:07:10,000 --> 02:07:11,000
真的渐渐

4269
02:07:11,000 --> 02:07:13,000
真的渐渐的淡出

4270
02:07:13,000 --> 02:07:14,000
现在的显学

4271
02:07:14,000 --> 02:07:15,000
是学什么 Object C

4272
02:07:15,000 --> 02:07:17,000
然后开发 App

4273
02:07:17,000 --> 02:07:17,000
所以

4274
02:07:17,000 --> 02:07:18,000
不我觉得

4275
02:07:18,000 --> 02:07:19,000
这跟显学没有关系

4276
02:07:19,000 --> 02:07:20,000
就是

4277
02:07:20,000 --> 02:07:21,000
比如说

4278
02:07:21,000 --> 02:07:23,000
我们平时谈论的

4279
02:07:23,000 --> 02:07:24,000
什么

4280
02:07:24,000 --> 02:07:25,000
LineNote

4281
02:07:25,000 --> 02:07:27,000
或者是 Digital Ocean

4282
02:07:27,000 --> 02:07:27,000
这些

4283
02:07:27,000 --> 02:07:29,000
这些 VPS 提供商们

4284
02:07:29,000 --> 02:07:31,000
有哪家是提供

4285
02:07:31,000 --> 02:07:32,000
Dotnet 环境的吗

4286
02:07:32,000 --> 02:07:33,000
没有啊

4287
02:07:33,000 --> 02:07:36,000
你说服务器吗

4288
02:07:36,000 --> 02:07:37,000
对啊

4289
02:07:37,000 --> 02:07:39,000
就 VPS 提供商

4290
02:07:39,000 --> 02:07:41,000
有谁家是在提供服务端的

4291
02:07:41,000 --> 02:07:41,000
AWS

4292
02:07:41,000 --> 02:07:44,000
它是有这个 Windows Server

4293
02:07:44,000 --> 02:07:45,000
可以用的

4294
02:07:45,000 --> 02:07:45,000
不过

4295
02:07:45,000 --> 02:07:46,000
对

4296
02:07:46,000 --> 02:07:46,000
要贵一些

4297
02:07:46,000 --> 02:07:47,000
有多少呢

4298
02:07:47,000 --> 02:07:48,000
1%吗

4299
02:07:48,000 --> 02:07:49,000
对

4300
02:07:49,000 --> 02:07:51,000
我们接触的应该不是很多

4301
02:07:51,000 --> 02:07:52,000
我觉得感觉

4302
02:07:52,000 --> 02:07:52,000
对

4303
02:07:52,000 --> 02:07:52,000
就是用

4304
02:07:52,000 --> 02:07:54,000
因为要跑那些

4305
02:07:54,000 --> 02:07:55,000
大部分还是企业的场合

4306
02:07:55,000 --> 02:07:56,000
感觉比较多一点

4307
02:07:56,000 --> 02:07:57,000
但有一个例外

4308
02:07:57,000 --> 02:07:57,000
就是那个

4309
02:07:57,000 --> 02:07:58,000
Stock Overflow

4310
02:07:58,000 --> 02:07:59,000
对

4311
02:07:59,000 --> 02:08:00,000
对

4312
02:08:00,000 --> 02:08:01,000
你这样

4313
02:08:01,000 --> 02:08:02,000
确实这是一个问题

4314
02:08:02,000 --> 02:08:03,000
就在我们

4315
02:08:03,000 --> 02:08:04,000
就所谓的

4316
02:08:04,000 --> 02:08:04,000
Web App

4317
02:08:04,000 --> 02:08:05,000
兴起的这个

4318
02:08:05,000 --> 02:08:06,000
这个时间

4319
02:08:06,000 --> 02:08:07,000
微软是

4320
02:08:07,000 --> 02:08:08,000
其实是

4321
02:08:08,000 --> 02:08:10,000
输掉了这个市场的吗

4322
02:08:10,000 --> 02:08:11,000
对

4323
02:08:11,000 --> 02:08:11,000
它已经

4324
02:08:11,000 --> 02:08:13,000
somehow 变得非常的

4325
02:08:13,000 --> 02:08:14,000
非常的

4326
02:08:14,000 --> 02:08:16,000
无关紧要了

4327
02:08:16,000 --> 02:08:17,000
对

4328
02:08:17,000 --> 02:08:17,000
这个

4329
02:08:17,000 --> 02:08:19,000
就是你让我现在去回忆自己

4330
02:08:19,000 --> 02:08:19,000
就是

4331
02:08:19,000 --> 02:08:20,000
有一天

4332
02:08:20,000 --> 02:08:22,000
这几天我在反思

4333
02:08:22,000 --> 02:08:24,000
就是我在上次节目里面说到

4334
02:08:24,000 --> 02:08:27,000
自己花在微软上面的时间

4335
02:08:27,000 --> 02:08:28,000
都蹉跎掉了

4336
02:08:28,000 --> 02:08:29,000
真的是这样吗

4337
02:08:29,000 --> 02:08:30,000
就是

4338
02:08:30,000 --> 02:08:32,000
我真的

4339
02:08:32,000 --> 02:08:35,000
后悔自己曾经

4340
02:08:35,000 --> 02:08:36,000
努力学过

4341
02:08:36,000 --> 02:08:39,000
Windows 的这一套相关技术吗

4342
02:08:39,000 --> 02:08:40,000
什么

4343
02:08:40,000 --> 02:08:42,000
我也啃过后后的那一本

4344
02:08:42,000 --> 02:08:44,000
那个侯杰翻的什么

4345
02:08:44,000 --> 02:08:45,000
深入显著 MFC

4346
02:08:45,000 --> 02:08:48,000
这些经历真的都废掉了吗

4347
02:08:48,000 --> 02:08:49,000
可能也没有

4348
02:08:49,000 --> 02:08:50,000
可能有一部分是内化掉了

4349
02:08:50,000 --> 02:08:51,000
变成了

4350
02:08:51,000 --> 02:08:53,000
变成了可以处理旁通的

4351
02:08:53,000 --> 02:08:54,000
内力的一部分

4352
02:08:54,000 --> 02:08:55,000
但是

4353
02:08:55,000 --> 02:08:57,000
我觉得大部分

4354
02:08:57,000 --> 02:08:59,000
时间可能的确是做得到

4355
02:08:59,000 --> 02:08:59,000
因为

4356
02:08:59,000 --> 02:09:02,000
就回想起来

4357
02:09:02,000 --> 02:09:03,000
没有任何值得留恋的部分

4358
02:09:03,000 --> 02:09:04,000
对

4359
02:09:04,000 --> 02:09:05,000
我觉得这个就是一个很重要的原因

4360
02:09:05,000 --> 02:09:06,000
就是

4361
02:09:06,000 --> 02:09:08,000
刚才之前我们最开始的

4362
02:09:08,000 --> 02:09:09,000
今天最开始就讲了

4363
02:09:09,000 --> 02:09:10,000
这个 mindshare 的问题

4364
02:09:10,000 --> 02:09:10,000
就是我觉得

4365
02:09:10,000 --> 02:09:12,000
其实你从现在来看

4366
02:09:12,000 --> 02:09:14,000
微软它真的是已经输掉了

4367
02:09:14,000 --> 02:09:16,000
就起码如果你是一个开发者

4368
02:09:16,000 --> 02:09:17,000
你能够自由选择的情况下

4369
02:09:17,000 --> 02:09:18,000
它已经输掉了

4370
02:09:18,000 --> 02:09:21,000
这一部分人的所谓的这个 mindshare

4371
02:09:21,000 --> 02:09:21,000
这点你可以

4372
02:09:21,000 --> 02:09:22,000
刚才我们讲了

4373
02:09:22,000 --> 02:09:23,000
这个比如说

4374
02:09:23,000 --> 02:09:25,000
它可能很多人会选择去做这个 web

4375
02:09:25,000 --> 02:09:27,000
去学什么动态语言

4376
02:09:27,000 --> 02:09:27,000
去做

4377
02:09:27,000 --> 02:09:29,000
然后也不需要 Windows 的东西

4378
02:09:29,000 --> 02:09:31,000
那也不需要在 Windows 上面跑

4379
02:09:31,000 --> 02:09:33,000
然后有很多人学这个开发

4380
02:09:33,000 --> 02:09:35,000
就哪怕是企业应用

4381
02:09:35,000 --> 02:09:37,000
它就现在大部分人还是 Java 程序比较多吧

4382
02:09:37,000 --> 02:09:41,000
这个我还真不敢说

4383
02:09:41,000 --> 02:09:41,000
就是

4384
02:09:41,000 --> 02:09:44,000
我说起码服务端的我感觉是 Java 或者多

4385
02:09:44,000 --> 02:09:44,000
但是如果你是

4386
02:09:44,000 --> 02:09:44,000
对

4387
02:09:44,000 --> 02:09:46,000
前一次找工作的时候

4388
02:09:46,000 --> 02:09:47,000
我出于好奇

4389
02:09:47,000 --> 02:09:48,000
也输入了什么 DONET

4390
02:09:48,000 --> 02:09:49,000
或者 Cshop

4391
02:09:49,000 --> 02:09:50,000
或者是之类的

4392
02:09:50,000 --> 02:09:51,000
平台是有的

4393
02:09:51,000 --> 02:09:51,000
搜索一下

4394
02:09:51,000 --> 02:09:52,000
对

4395
02:09:52,000 --> 02:09:53,000
而且还不少

4396
02:09:53,000 --> 02:09:54,000
至少在

4397
02:09:54,000 --> 02:09:54,000
就它

4398
02:09:54,000 --> 02:09:56,000
其实它就用分两部分

4399
02:09:56,000 --> 02:09:57,000
一个就是它跑在

4400
02:09:57,000 --> 02:09:59,000
服务器端的一些东西

4401
02:09:59,000 --> 02:10:00,000
然后是跑在客户端的东西

4402
02:10:00,000 --> 02:10:02,000
客户端这边应该还是 Windows 的

4403
02:10:02,000 --> 02:10:02,000
就是

4404
02:10:02,000 --> 02:10:03,000
就是 VC

4405
02:10:03,000 --> 02:10:05,000
VC Studio 这些的天下

4406
02:10:05,000 --> 02:10:05,000
这也没有问题

4407
02:10:05,000 --> 02:10:06,000
对

4408
02:10:06,000 --> 02:10:07,000
然后但是在移动上面

4409
02:10:07,000 --> 02:10:08,000
现在大部分人

4410
02:10:08,000 --> 02:10:09,000
要么就是开发安卓

4411
02:10:09,000 --> 02:10:11,000
要么可能是开发这个 iOS

4412
02:10:11,000 --> 02:10:12,000
肯定是没什么

4413
02:10:12,000 --> 02:10:15,000
Windows phone 的用户是非常少的嘛

4414
02:10:15,000 --> 02:10:16,000
对

4415
02:10:16,000 --> 02:10:17,000
而开发网页程序的话

4416
02:10:17,000 --> 02:10:19,000
web application 的话

4417
02:10:19,000 --> 02:10:19,000
根本用不着

4418
02:10:19,000 --> 02:10:20,000
基本上

4419
02:10:20,000 --> 02:10:22,000
用 Cshop 的也是凤毛麟角

4420
02:10:22,000 --> 02:10:22,000
对

4421
02:10:22,000 --> 02:10:23,000
非常非常

4422
02:10:23,000 --> 02:10:24,000
至少在欧洲是这样

4423
02:10:24,000 --> 02:10:24,000
对

4424
02:10:24,000 --> 02:10:26,000
不光是全球全球范围的都是这样

4425
02:10:26,000 --> 02:10:29,000
但我觉得中国这个市场好像

4426
02:10:29,000 --> 02:10:30,000
还是 Cshop

4427
02:10:30,000 --> 02:10:31,000
份额还是挺高的

4428
02:10:31,000 --> 02:10:33,000
因为盗版嘛

4429
02:10:33,000 --> 02:10:34,000
给他助长了

4430
02:10:34,000 --> 02:10:34,000
对

4431
02:10:34,000 --> 02:10:35,000
因为在中国

4432
02:10:35,000 --> 02:10:36,000
是

4433
02:10:36,000 --> 02:10:37,000
中国在

4434
02:10:37,000 --> 02:10:39,000
对

4435
02:10:39,000 --> 02:10:40,000
为啥的明天

4436
02:10:40,000 --> 02:10:42,000
为啥的希望就在中国

4437
02:10:42,000 --> 02:10:43,000
但是在中国又被搞了

4438
02:10:43,000 --> 02:10:44,000
反冷断

4439
02:10:44,000 --> 02:10:45,000
也是很惨的

4440
02:10:45,000 --> 02:10:46,000
真的吗

4441
02:10:46,000 --> 02:10:47,000
你不知道吗

4442
02:10:47,000 --> 02:10:47,000
最近

4443
02:10:47,000 --> 02:10:47,000
什么时候

4444
02:10:47,000 --> 02:10:49,000
就是最近这一年吧

4445
02:10:49,000 --> 02:10:51,000
已经被搞得很惨

4446
02:10:51,000 --> 02:10:51,000
OK

4447
02:10:51,000 --> 02:10:54,000
所以他的日子肯定是不好过的

4448
02:10:54,000 --> 02:10:56,000
所以他现在也是要急着求变嘛

4449
02:10:56,000 --> 02:10:59,000
因为再过可能这种趋势

4450
02:10:59,000 --> 02:11:00,000
在十几年

4451
02:11:00,000 --> 02:11:01,000
微软就是一个不知名的小公司了

4452
02:11:01,000 --> 02:11:05,000
刚才你说的那个什么微软变得

4453
02:11:05,000 --> 02:11:05,000
无关紧要了

4454
02:11:05,000 --> 02:11:06,000
这个还蛮巧的

4455
02:11:06,000 --> 02:11:09,000
我在知乎上有一篇回答

4456
02:11:09,000 --> 02:11:11,000
当时问说 Windows 8 的一些事情

4457
02:11:11,000 --> 02:11:12,000
当时我讲的一个回答

4458
02:11:12,000 --> 02:11:14,000
也是也就提到了这么一个

4459
02:11:14,000 --> 02:11:16,000
一个概念啊

4460
02:11:16,000 --> 02:11:17,000
晚点我把这个连接

4461
02:11:17,000 --> 02:11:19,000
发到这个 notes

4462
02:11:19,000 --> 02:11:20,000
大家有请去可以去看一下

4463
02:11:20,000 --> 02:11:23,000
这个扯得又比较远了

4464
02:11:23,000 --> 02:11:24,000
然后说回来

4465
02:11:24,000 --> 02:11:24,000
然后 Eclipse

4466
02:11:24,000 --> 02:11:26,000
说回 Visual Studio

4467
02:11:26,000 --> 02:11:26,000
对

4468
02:11:26,000 --> 02:11:27,000
对

4469
02:11:27,000 --> 02:11:30,000
刚才缘起是说 Visual Studio

4470
02:11:30,000 --> 02:11:31,000
非常非常多的版本

4471
02:11:31,000 --> 02:11:33,000
而 Xcode

4472
02:11:33,000 --> 02:11:35,000
只有一个

4473
02:11:35,000 --> 02:11:36,000
或者说它有两个版本

4474
02:11:36,000 --> 02:11:38,000
一个不稳定的版本

4475
02:11:38,000 --> 02:11:39,000
和一个更不稳定的版本

4476
02:11:39,000 --> 02:11:42,000
这个黑得漂亮

4477
02:11:42,000 --> 02:11:45,000
而为了那个更不稳定的版本

4478
02:11:45,000 --> 02:11:47,000
你需要交一笔钱

4479
02:11:47,000 --> 02:11:50,000
成为 iOS 开发商

4480
02:11:50,000 --> 02:11:52,000
iOS 开发者

4481
02:11:52,000 --> 02:11:53,000
或者是 Mac 开发者

4482
02:11:53,000 --> 02:11:55,000
才可以下载到

4483
02:11:55,000 --> 02:11:57,000
这个更不稳定的版本

4484
02:11:57,000 --> 02:11:59,000
但默认的那个稳定的版本

4485
02:11:59,000 --> 02:12:01,000
就是比较稳定的版本

4486
02:12:01,000 --> 02:12:02,000
是免费

4487
02:12:02,000 --> 02:12:02,000
不要钱

4488
02:12:02,000 --> 02:12:04,000
它是从 4 吧

4489
02:12:04,000 --> 02:12:05,000
开始在 App Store 里面

4490
02:12:05,000 --> 02:12:06,000
可以免费下载了

4491
02:12:06,000 --> 02:12:07,000
对

4492
02:12:07,000 --> 02:12:09,000
然后我记得我还付钱买过

4493
02:12:09,000 --> 02:12:10,000
它免费之前的版本

4494
02:12:10,000 --> 02:12:11,000
5 块钱吧

4495
02:12:11,000 --> 02:12:11,000
我记得

4496
02:12:11,000 --> 02:12:12,000
5 美元

4497
02:12:12,000 --> 02:12:13,000
对

4498
02:12:13,000 --> 02:12:14,000
Xcode 层几何时

4499
02:12:14,000 --> 02:12:15,000
也是要收费的

4500
02:12:15,000 --> 02:12:16,000
3 对

4501
02:12:16,000 --> 02:12:18,000
3 之前是要收费的

4502
02:12:18,000 --> 02:12:18,000
对

4503
02:12:18,000 --> 02:12:21,000
就是那个非模太窗口的版本吧

4504
02:12:21,000 --> 02:12:21,000
对

4505
02:12:21,000 --> 02:12:26,000
然后我当时是因为要写一个 OpenGL 的程序

4506
02:12:26,000 --> 02:12:28,000
因为上一个图形的课

4507
02:12:28,000 --> 02:12:30,000
然后要写一些 OpenGL 东西

4508
02:12:30,000 --> 02:12:33,000
然后当时觉得有两个做法

4509
02:12:33,000 --> 02:12:34,000
我在 Mac 上面开发

4510
02:12:34,000 --> 02:12:35,000
不对

4511
02:12:35,000 --> 02:12:36,000
今天就有三个

4512
02:12:36,000 --> 02:12:37,000
要不我用 Eclipse 写

4513
02:12:37,000 --> 02:12:39,000
这个就直接被我否定掉了

4514
02:12:39,000 --> 02:12:41,000
那待会我会解释为什么

4515
02:12:41,000 --> 02:12:42,000
然后因为我用命令行

4516
02:12:42,000 --> 02:12:43,000
我用 VIM 写

4517
02:12:43,000 --> 02:12:44,000
然后命令行写

4518
02:12:44,000 --> 02:12:47,000
但是你知道用那种方式写 C

4519
02:12:47,000 --> 02:12:49,000
或者是要写 OpenGL 的代码

4520
02:12:49,000 --> 02:12:50,000
其实非常痛苦的

4521
02:12:50,000 --> 02:12:51,000
因为没有自动补期

4522
02:12:51,000 --> 02:12:53,000
OK

4523
02:12:53,000 --> 02:12:54,000
好了

4524
02:12:54,000 --> 02:12:54,000
另外一个版本

4525
02:12:54,000 --> 02:12:56,000
就是用那个 Xcode

4526
02:12:56,000 --> 02:12:57,000
然后当时想了想

4527
02:12:57,000 --> 02:12:58,000
买吧

4528
02:12:58,000 --> 02:12:59,000
就为了写这个作业

4529
02:12:59,000 --> 02:13:01,000
就买了

4530
02:13:01,000 --> 02:13:02,000
然后后来我买了

4531
02:13:02,000 --> 02:13:03,000
过了差不多

4532
02:13:03,000 --> 02:13:05,000
不到一个月吧

4533
02:13:05,000 --> 02:13:05,000
他就说

4534
02:13:05,000 --> 02:13:07,000
差不多全部免费了

4535
02:13:07,000 --> 02:13:09,000
就很

4536
02:13:09,000 --> 02:13:10,000
很沮丧

4537
02:13:10,000 --> 02:13:13,000
好吧

4538
02:13:13,000 --> 02:13:14,000
OK

4539
02:13:14,000 --> 02:13:16,000
现在讲到那个

4540
02:13:16,000 --> 02:13:17,000
Visual Studio

4541
02:13:17,000 --> 02:13:19,000
你还要要补充的吗

4542
02:13:19,000 --> 02:13:21,000
Visual Studio

4543
02:13:21,000 --> 02:13:22,000
有什么要补充的

4544
02:13:22,000 --> 02:13:22,000
我也不知道

4545
02:13:22,000 --> 02:13:24,000
其实有很多年

4546
02:13:24,000 --> 02:13:25,000
没有用 Visual Studio

4547
02:13:25,000 --> 02:13:26,000
但是我在前两天

4548
02:13:26,000 --> 02:13:27,000
看到一句话说

4549
02:13:27,000 --> 02:13:29,000
Visual Studio

4550
02:13:29,000 --> 02:13:30,000
比 Xcode

4551
02:13:30,000 --> 02:13:31,000
好了一万个 Eclipse

4552
02:13:31,000 --> 02:13:32,000
之前

4553
02:13:32,000 --> 02:13:34,000
好了一万个 Eclipse

4554
02:13:34,000 --> 02:13:35,000
这么多

4555
02:13:35,000 --> 02:13:37,000
我怎么感觉

4556
02:13:37,000 --> 02:13:39,000
有五十步一百步的感觉

4557
02:13:39,000 --> 02:13:42,000
也许 Visual Studio

4558
02:13:42,000 --> 02:13:43,000
是很

4559
02:13:43,000 --> 02:13:43,000
屌

4560
02:13:43,000 --> 02:13:44,000
就

4561
02:13:44,000 --> 02:13:45,000
Intellisense

4562
02:13:45,000 --> 02:13:47,000
可能是所有的

4563
02:13:47,000 --> 02:13:48,000
自动补权里面

4564
02:13:48,000 --> 02:13:49,000
最聪明的一个

4565
02:13:49,000 --> 02:13:51,000
也是最

4566
02:13:51,000 --> 02:13:53,000
看起来最舒服

4567
02:13:53,000 --> 02:13:53,000
或者说

4568
02:13:53,000 --> 02:13:54,000
细节

4569
02:13:54,000 --> 02:13:55,000
最多的一个

4570
02:13:55,000 --> 02:13:56,000
因为 Windows

4571
02:13:56,000 --> 02:13:56,000
我觉得

4572
02:13:56,000 --> 02:13:57,000
微软东西

4573
02:13:57,000 --> 02:13:58,000
就是有这样一种特征

4574
02:13:58,000 --> 02:13:59,000
就是

4575
02:13:59,000 --> 02:14:00,000
事无巨细

4576
02:14:00,000 --> 02:14:00,000
都要告诉你

4577
02:14:00,000 --> 02:14:03,000
都要来问你

4578
02:14:03,000 --> 02:14:03,000
或者说

4579
02:14:03,000 --> 02:14:04,000
都要

4580
02:14:04,000 --> 02:14:06,000
都要给提供你一个可能

4581
02:14:06,000 --> 02:14:06,000
就是我刚才

4582
02:14:06,000 --> 02:14:08,000
就我为了玩这个

4583
02:14:08,000 --> 02:14:09,000
文明超越地球

4584
02:14:09,000 --> 02:14:11,000
装了一个 Windows 8

4585
02:14:11,000 --> 02:14:12,000
然后我发现

4586
02:14:12,000 --> 02:14:14,000
Windows 8 的考文件的时候

4587
02:14:14,000 --> 02:14:14,000
如果你愿意的话

4588
02:14:14,000 --> 02:14:15,000
你可以点一个

4589
02:14:15,000 --> 02:14:16,000
更多详情

4590
02:14:16,000 --> 02:14:17,000
然后这个

4591
02:14:17,000 --> 02:14:18,000
更多详情里面

4592
02:14:18,000 --> 02:14:19,000
会跳出来一个

4593
02:14:19,000 --> 02:14:24,000
实时拷贝速度的

4594
02:14:24,000 --> 02:14:24,000
一个

4595
02:14:24,000 --> 02:14:26,000
线图

4596
02:14:26,000 --> 02:14:27,000
对

4597
02:14:27,000 --> 02:14:28,000
那帅吗

4598
02:14:28,000 --> 02:14:28,000
就是

4599
02:14:28,000 --> 02:14:29,000
我觉得

4600
02:14:29,000 --> 02:14:30,000
我靠

4601
02:14:30,000 --> 02:14:32,000
这样无关的信息

4602
02:14:32,000 --> 02:14:32,000
你告诉我

4603
02:14:32,000 --> 02:14:33,000
真的有意义吗

4604
02:14:33,000 --> 02:14:35,000
很多人会看这个

4605
02:14:35,000 --> 02:14:36,000
我不知道为什么

4606
02:14:36,000 --> 02:14:37,000
好吧

4607
02:14:37,000 --> 02:14:39,000
时间太多了

4608
02:14:39,000 --> 02:14:40,000
Maybe

4609
02:14:40,000 --> 02:14:44,000
Eclipse

4610
02:14:44,000 --> 02:14:45,000
Visual Steel

4611
02:14:45,000 --> 02:14:46,000
就是这样的东西

4612
02:14:46,000 --> 02:14:47,000
就会告诉你

4613
02:14:47,000 --> 02:14:48,000
非常非常多的

4614
02:14:48,000 --> 02:14:48,000
其实

4615
02:14:48,000 --> 02:14:49,000
你也不知道

4616
02:14:49,000 --> 02:14:50,000
是有用

4617
02:14:50,000 --> 02:14:50,000
还是没用的知识

4618
02:14:50,000 --> 02:14:52,000
信息在那边

4619
02:14:52,000 --> 02:14:53,000
摆在那边

4620
02:14:53,000 --> 02:14:54,000
对

4621
02:14:54,000 --> 02:14:56,000
但我仍然承认

4622
02:14:56,000 --> 02:14:57,000
它是一个

4623
02:14:57,000 --> 02:14:57,000
非常好的变述器

4624
02:14:57,000 --> 02:14:58,000
就是一个

4625
02:14:58,000 --> 02:14:59,000
非常好的

4626
02:14:59,000 --> 02:15:00,000
就是至少

4627
02:15:00,000 --> 02:15:01,000
我的印象里面

4628
02:15:01,000 --> 02:15:02,000
在好用

4629
02:15:02,000 --> 02:15:03,000
在用它的时候

4630
02:15:03,000 --> 02:15:04,000
它好用

4631
02:15:04,000 --> 02:15:06,000
而且它从来不 crash

4632
02:15:06,000 --> 02:15:07,000
而且它的文档

4633
02:15:07,000 --> 02:15:08,000
非常非常全面

4634
02:15:08,000 --> 02:15:09,000
对

4635
02:15:09,000 --> 02:15:09,000
这个

4636
02:15:09,000 --> 02:15:10,000
这个是什么

4637
02:15:10,000 --> 02:15:13,000
Xcode 不能比的

4638
02:15:13,000 --> 02:15:14,000
对

4639
02:15:14,000 --> 02:15:15,000
Xcode 就

4640
02:15:15,000 --> 02:15:16,000
有

4641
02:15:16,000 --> 02:15:16,000
Xcode 有很多

4642
02:15:16,000 --> 02:15:17,000
非常

4643
02:15:17,000 --> 02:15:18,000
Xcode 给我的感觉

4644
02:15:18,000 --> 02:15:19,000
有点像

4645
02:15:19,000 --> 02:15:20,000
刚刚接触

4646
02:15:20,000 --> 02:15:21,000
那个 Micromedia 的

4647
02:15:21,000 --> 02:15:22,000
那一套

4648
02:15:22,000 --> 02:15:23,000
变连器

4649
02:15:23,000 --> 02:15:24,000
那就是 Micromedia

4650
02:15:24,000 --> 02:15:25,000
还是 Micromedia 的时代

4651
02:15:25,000 --> 02:15:26,000
Flash

4652
02:15:26,000 --> 02:15:28,000
Fireworks

4653
02:15:28,000 --> 02:15:30,000
之类的这些东西

4654
02:15:30,000 --> 02:15:30,000
就是有很多

4655
02:15:30,000 --> 02:15:32,000
细小的功能

4656
02:15:32,000 --> 02:15:33,000
隐藏在某一处

4657
02:15:33,000 --> 02:15:34,000
如果你不知道

4658
02:15:34,000 --> 02:15:35,000
怎么用的话

4659
02:15:35,000 --> 02:15:37,000
弄死也找不到

4660
02:15:37,000 --> 02:15:37,000
对

4661
02:15:37,000 --> 02:15:38,000
没错

4662
02:15:38,000 --> 02:15:40,000
这个导引是一个问题

4663
02:15:40,000 --> 02:15:41,000
但是就是说

4664
02:15:41,000 --> 02:15:42,000
从

4665
02:15:42,000 --> 02:15:43,000
因为你也做

4666
02:15:43,000 --> 02:15:44,000
这个 Object-C 的开发

4667
02:15:44,000 --> 02:15:46,000
就是从实际使用的角度来讲

4668
02:15:46,000 --> 02:15:47,000
你觉得这两个

4669
02:15:47,000 --> 02:15:48,000
有什么可比的地方吗

4670
02:15:48,000 --> 02:15:52,000
Xcode 缺少一些

4671
02:15:52,000 --> 02:15:55,000
有时候我觉得

4672
02:15:55,000 --> 02:15:56,000
非常简单

4673
02:15:56,000 --> 02:15:57,000
但是它就是没有的功能

4674
02:15:57,000 --> 02:15:59,000
就是非常必要

4675
02:15:59,000 --> 02:15:59,000
它就是没有的功能

4676
02:15:59,000 --> 02:16:01,000
比如说呢

4677
02:16:01,000 --> 02:16:03,000
比如说

4678
02:16:03,000 --> 02:16:05,000
就有没有什么

4679
02:16:05,000 --> 02:16:06,000
一个具体的例子

4680
02:16:06,000 --> 02:16:06,000
你觉得是

4681
02:16:06,000 --> 02:16:08,000
我现在一时还真的

4682
02:16:08,000 --> 02:16:10,000
想不出来

4683
02:16:10,000 --> 02:16:11,000
但是

4684
02:16:11,000 --> 02:16:13,000
那或者这么问

4685
02:16:13,000 --> 02:16:14,000
就是你在它

4686
02:16:14,000 --> 02:16:16,000
日常使用的过程中

4687
02:16:16,000 --> 02:16:16,000
你有觉得

4688
02:16:16,000 --> 02:16:17,000
它要拿点地方

4689
02:16:17,000 --> 02:16:19,000
让你非常不爽的地方

4690
02:16:19,000 --> 02:16:20,000
或者让你非常爽

4691
02:16:20,000 --> 02:16:22,000
或者让你非常不爽的地方

4692
02:16:22,000 --> 02:16:22,000
都可以

4693
02:16:22,000 --> 02:16:26,000
让我比较不爽的地方

4694
02:16:26,000 --> 02:16:27,000
可能是

4695
02:16:27,000 --> 02:16:29,000
有时候它的窗口

4696
02:16:29,000 --> 02:16:31,000
就是它的某些布局

4697
02:16:31,000 --> 02:16:34,000
是非常让人难受的

4698
02:16:34,000 --> 02:16:35,000
比如说

4699
02:16:35,000 --> 02:16:35,000
你要去

4700
02:16:35,000 --> 02:16:37,000
去点一个什么东西

4701
02:16:37,000 --> 02:16:38,000
你会去

4702
02:16:38,000 --> 02:16:39,000
你会发现这个东西

4703
02:16:39,000 --> 02:16:40,000
它空间做的非常非常小

4704
02:16:40,000 --> 02:16:46,000
然后你要去改变它的大小

4705
02:16:46,000 --> 02:16:46,000
你会觉得

4706
02:16:46,000 --> 02:16:48,000
自己已经有的

4707
02:16:48,000 --> 02:16:50,000
那个编辑区域被压缩了

4708
02:16:50,000 --> 02:16:52,000
就布局不是很合理

4709
02:16:52,000 --> 02:16:53,000
对

4710
02:16:53,000 --> 02:16:54,000
我觉得布局并不是很合理

4711
02:16:54,000 --> 02:16:55,000
另外就是

4712
02:16:55,000 --> 02:16:56,000
它的那个自动补权

4713
02:16:56,000 --> 02:16:57,000
有时候就是

4714
02:16:57,000 --> 02:16:59,000
很长一段时间里面

4715
02:16:59,000 --> 02:17:00,000
都非常纯

4716
02:17:00,000 --> 02:17:01,000
比如说

4717
02:17:01,000 --> 02:17:02,000
它有时候会

4718
02:17:02,000 --> 02:17:05,000
不能理解

4719
02:17:05,000 --> 02:17:05,000
为什么你要

4720
02:17:05,000 --> 02:17:07,000
就是有两个

4721
02:17:07,000 --> 02:17:08,000
就有时候它是

4722
02:17:08,000 --> 02:17:10,000
你有时候

4723
02:17:10,000 --> 02:17:11,000
你会觉得它是非常笨的

4724
02:17:11,000 --> 02:17:12,000
就是比如说

4725
02:17:12,000 --> 02:17:13,000
有两个一模一样的

4726
02:17:13,000 --> 02:17:16,000
有两个前十个字母

4727
02:17:16,000 --> 02:17:19,000
一模一样的函数

4728
02:17:19,000 --> 02:17:22,000
然后你挑了前几个字母

4729
02:17:22,000 --> 02:17:24,000
你挑了几个字母

4730
02:17:24,000 --> 02:17:25,000
它非要把那个

4731
02:17:25,000 --> 02:17:27,000
不常用的摆在上面

4732
02:17:27,000 --> 02:17:29,000
你要么要按 Tab 键

4733
02:17:29,000 --> 02:17:31,000
然后补权到那个

4734
02:17:31,000 --> 02:17:35,000
不一样开始的地方

4735
02:17:35,000 --> 02:17:37,000
然后再打下一个字母

4736
02:17:37,000 --> 02:17:39,000
才可以输出下一个字母

4737
02:17:39,000 --> 02:17:40,000
要么就要按下下

4738
02:17:40,000 --> 02:17:41,000
或者是什么键

4739
02:17:41,000 --> 02:17:43,000
去手动选中

4740
02:17:43,000 --> 02:17:45,000
你真正想要打的

4741
02:17:45,000 --> 02:17:47,000
那个东西

4742
02:17:47,000 --> 02:17:48,000
这个时候

4743
02:17:48,000 --> 02:17:48,000
你就会觉得

4744
02:17:48,000 --> 02:17:49,000
Intellicense

4745
02:17:49,000 --> 02:17:50,000
真的是非常聪明

4746
02:17:50,000 --> 02:17:51,000
就是它会去猜

4747
02:17:51,000 --> 02:17:52,000
你最想要的是哪一个

4748
02:17:52,000 --> 02:17:54,000
但是现在 Xcode

4749
02:17:54,000 --> 02:17:56,000
可能是要比以前好很多

4750
02:17:56,000 --> 02:17:58,000
至少这两天

4751
02:17:58,000 --> 02:18:00,000
最近我在写 Swift 的时候

4752
02:18:00,000 --> 02:18:01,000
感觉好像是

4753
02:18:01,000 --> 02:18:02,000
没有以前那么不爽

4754
02:18:02,000 --> 02:18:05,000
就稳定性那些有提高吗

4755
02:18:05,000 --> 02:18:05,000
就至常

4756
02:18:05,000 --> 02:18:07,000
我经常看有人说

4757
02:18:07,000 --> 02:18:08,000
要 crash 掉

4758
02:18:08,000 --> 02:18:09,000
或者失去响应这样

4759
02:18:09,000 --> 02:18:13,000
我记得曾经在 4.G 的时候

4760
02:18:13,000 --> 02:18:15,000
有一个版本在那个

4761
02:18:15,000 --> 02:18:18,000
App Store 里面

4762
02:18:18,000 --> 02:18:20,000
得到了一星半还是什么

4763
02:18:20,000 --> 02:18:21,000
就是因为那版

4764
02:18:21,000 --> 02:18:22,000
非常非常

4765
02:18:22,000 --> 02:18:24,000
就是大概平均半个小时 crashes

4766
02:18:24,000 --> 02:18:26,000
而我现在经常遇到的

4767
02:18:26,000 --> 02:18:26,000
一个问题是什么

4768
02:18:26,000 --> 02:18:28,000
它会跳出来一个

4769
02:18:28,000 --> 02:18:29,000
半透明的提示框

4770
02:18:29,000 --> 02:18:30,000
说什么

4771
02:18:30,000 --> 02:18:34,000
Internal Module for Syntax

4772
02:18:34,000 --> 02:18:36,000
Highlighting has crashed

4773
02:18:36,000 --> 02:18:39,000
Please restart Xcode

4774
02:18:39,000 --> 02:18:40,000
之类的这么一个提示框

4775
02:18:40,000 --> 02:18:42,000
就是它告诉你

4776
02:18:42,000 --> 02:18:44,000
我内部有一个组件 crash

4777
02:18:44,000 --> 02:18:45,000
你有可能的话

4778
02:18:45,000 --> 02:18:46,000
请你重新启动一下

4779
02:18:46,000 --> 02:18:47,000
重新启动一下 Xcode

4780
02:18:47,000 --> 02:18:49,000
我就 What the fuck

4781
02:18:49,000 --> 02:18:50,000
对

4782
02:18:50,000 --> 02:18:52,000
另外还有一个就是

4783
02:18:52,000 --> 02:18:54,000
我专门为了 Xcode

4784
02:18:54,000 --> 02:18:55,000
买了一个小程序

4785
02:18:55,000 --> 02:18:58,000
叫做 Watchdog

4786
02:18:58,000 --> 02:18:59,000
是干嘛的

4787
02:18:59,000 --> 02:19:00,000
Watchdog 应该是卖

4788
02:19:00,000 --> 02:19:02,000
大概十欧还是几欧

4789
02:19:02,000 --> 02:19:03,000
反正很便宜的工具

4790
02:19:03,000 --> 02:19:04,000
它唯一的功能

4791
02:19:04,000 --> 02:19:07,000
就是在你退出 Xcode 的时候

4792
02:19:07,000 --> 02:19:08,000
自动帮你把 Xcode

4793
02:19:08,000 --> 02:19:09,000
所有的中间文件删掉

4794
02:19:09,000 --> 02:19:10,000
有什么问题吗

4795
02:19:10,000 --> 02:19:11,000
为什么要这样

4796
02:19:11,000 --> 02:19:14,000
就是据很多很多

4797
02:19:14,000 --> 02:19:18,000
那个 Xcode 用户的经验来看

4798
02:19:18,000 --> 02:19:19,000
大部分时候

4799
02:19:19,000 --> 02:19:21,000
如果 Xcode 的行为怪异

4800
02:19:21,000 --> 02:19:23,000
你只需要把目前

4801
02:19:23,000 --> 02:19:24,000
你只需要把它的所有

4802
02:19:24,000 --> 02:19:25,000
临时文件删掉

4803
02:19:25,000 --> 02:19:26,000
然后重新启动

4804
02:19:26,000 --> 02:19:26,000
里面就可以了

4805
02:19:26,000 --> 02:19:28,000
所以这个插件的意图

4806
02:19:28,000 --> 02:19:30,000
就在于那你干脆你每次一贯 Xcode

4807
02:19:30,000 --> 02:19:33,000
我立刻就把这些所有的文件全都清除掉

4808
02:19:33,000 --> 02:19:33,000
那代价

4809
02:19:33,000 --> 02:19:35,000
无非就是下一次启动的时候

4810
02:19:35,000 --> 02:19:36,000
慢一点

4811
02:19:36,000 --> 02:19:37,000
可能稍微慢一点

4812
02:19:37,000 --> 02:19:39,000
但却以此换来了更多的稳定性

4813
02:19:39,000 --> 02:19:42,000
哇天哪

4814
02:19:42,000 --> 02:19:42,000
这个

4815
02:19:42,000 --> 02:19:43,000
这个

4816
02:19:43,000 --> 02:19:45,000
对

4817
02:19:45,000 --> 02:19:48,000
而且就是我必须要保讲

4818
02:19:48,000 --> 02:19:49,000
我必须要保讲 Xcode 的一点

4819
02:19:49,000 --> 02:19:50,000
就是现在的 Playground

4820
02:19:50,000 --> 02:19:51,000
非常爽

4821
02:19:51,000 --> 02:19:52,000
就是 Playground

4822
02:19:52,000 --> 02:19:53,000
就是 Xcode 里面的一个功能

4823
02:19:53,000 --> 02:19:55,000
你可以在左边输入代码

4824
02:19:55,000 --> 02:19:56,000
然后右边

4825
02:19:56,000 --> 02:19:58,000
这个有一个很简单的窗口

4826
02:19:58,000 --> 02:19:59,000
左边可以输入代码

4827
02:19:59,000 --> 02:20:02,000
窗口右半可以输出

4828
02:20:02,000 --> 02:20:04,000
左边输入的代码

4829
02:20:04,000 --> 02:20:07,000
会展现出来的东西

4830
02:20:07,000 --> 02:20:09,000
比如说你写个 Fall 循环

4831
02:20:09,000 --> 02:20:11,000
然后右边就会出现

4832
02:20:11,000 --> 02:20:13,000
这个 Fall 循环被执行多少次

4833
02:20:13,000 --> 02:20:15,000
以及中间如果有输出结果的话

4834
02:20:15,000 --> 02:20:17,000
它会把中间的输出结果也显示在右边

4835
02:20:17,000 --> 02:20:18,000
就不需要你做什么

4836
02:20:18,000 --> 02:20:19,000
你只需要把语句写出来

4837
02:20:19,000 --> 02:20:20,000
按回车

4838
02:20:20,000 --> 02:20:24,000
然后它就会自动实实的去演算左边的语言

4839
02:20:24,000 --> 02:20:27,000
然后在右边显示出左边演算的结果来

4840
02:20:27,000 --> 02:20:29,000
就是如果你看过那个 Keynote 的话

4841
02:20:29,000 --> 02:20:31,000
那次 WWWC Keynote 的话

4842
02:20:31,000 --> 02:20:34,000
当时演示的就是这功能

4843
02:20:34,000 --> 02:20:37,000
我必须说这个 Playground 是非常爽的

4844
02:20:37,000 --> 02:20:38,000
但是 Playground 经常 crush

4845
02:20:38,000 --> 02:20:39,000
在我手里

4846
02:20:39,000 --> 02:20:45,000
就是 Swift 它是一种伪装成动态语言的静态语言

4847
02:20:45,000 --> 02:20:47,000
它每一次都要编译

4848
02:20:47,000 --> 02:20:51,000
但是它经常编译到一半就挂了

4849
02:20:51,000 --> 02:20:52,000
然后导致整个 Playground 就挂了

4850
02:20:52,000 --> 02:20:58,000
所以什么苹果的这个软工的质量是

4851
02:20:58,000 --> 02:21:00,000
真的这么糟糕吗

4852
02:21:00,000 --> 02:21:01,000
还是

4853
02:21:01,000 --> 02:21:04,000
我觉得是想就是你必须要正视这一点

4854
02:21:04,000 --> 02:21:07,000
就是苹果它毕竟是个硬件公司

4855
02:21:07,000 --> 02:21:09,000
或者说它是一个一体化集成公司

4856
02:21:09,000 --> 02:21:11,000
而微软是专门做软件的

4857
02:21:11,000 --> 02:21:12,000
对这里面还是有

4858
02:21:12,000 --> 02:21:13,000
微软也有 Xbox

4859
02:21:13,000 --> 02:21:14,000
我承认微软也有 Xbox

4860
02:21:14,000 --> 02:21:18,000
但是从基因上来看

4861
02:21:18,000 --> 02:21:21,000
苹果做的软件的确是不如 MakerCode

4862
02:21:21,000 --> 02:21:23,000
就从稳定性的角度来看吗

4863
02:21:23,000 --> 02:21:24,000
对

4864
02:21:24,000 --> 02:21:26,000
或者乃至从易用性

4865
02:21:26,000 --> 02:21:29,000
或者说从 user-friendly 的角度来看

4866
02:21:29,000 --> 02:21:33,000
都 Xcode 都远远输于 Visual Studio

4867
02:21:33,000 --> 02:21:34,000
这个我必须承认

4868
02:21:34,000 --> 02:21:36,000
所以它的好处

4869
02:21:36,000 --> 02:21:38,000
它比 Visual Studio 好的在哪里

4870
02:21:39,000 --> 02:21:41,000
它有选择吗

4871
02:21:41,000 --> 02:21:41,000
它有好处吗

4872
02:21:41,000 --> 02:21:43,000
如果你可以选的情况下

4873
02:21:43,000 --> 02:21:48,000
比如说你们都写 C 程序

4874
02:21:48,000 --> 02:21:49,000
因为 Visual Studio 也可以写 C 程序

4875
02:21:49,000 --> 02:21:50,000
然后 Xcode 也可以写 C 程序

4876
02:21:50,000 --> 02:21:52,000
就不是写跟某一个平台

4877
02:21:52,000 --> 02:21:54,000
直接相关的那种东西的话

4878
02:21:54,000 --> 02:21:58,000
说实话

4879
02:21:58,000 --> 02:22:00,000
我想不出来什么非常好的

4880
02:22:00,000 --> 02:22:01,000
就比如说

4881
02:22:01,000 --> 02:22:03,000
我刚才第一反应是自己渲染

4882
02:22:03,000 --> 02:22:04,000
漂亮

4883
02:22:04,000 --> 02:22:06,000
对

4884
02:22:06,000 --> 02:22:08,000
因为 Visual Studio 下面的

4885
02:22:08,000 --> 02:22:09,000
就是或者说 Windows 下面的

4886
02:22:09,000 --> 02:22:09,000
自己渲染

4887
02:22:09,000 --> 02:22:11,000
是我现在已经不太能容忍的了

4888
02:22:11,000 --> 02:22:14,000
但是如果你真要说我要写一个

4889
02:22:14,000 --> 02:22:16,000
不去考虑跨平台

4890
02:22:16,000 --> 02:22:20,000
当然 Xcode 下面也写不了什么跨平台的东西

4891
02:22:20,000 --> 02:22:22,000
不是可以写

4892
02:22:22,000 --> 02:22:24,000
它有什么 Python 模式吗

4893
02:22:24,000 --> 02:22:27,000
Xcode 有 Python 模式

4894
02:22:27,000 --> 02:22:29,000
可以这么干

4895
02:22:29,000 --> 02:22:31,000
但是因为它毕竟可以当成一个编辑器来用

4896
02:22:31,000 --> 02:22:34,000
对 当成一个编辑器来用

4897
02:22:34,000 --> 02:22:35,000
OK

4898
02:22:35,000 --> 02:22:36,000
那我也不知道这个 Point 和在的话

4899
02:22:36,000 --> 02:22:37,000
只是这样说而已

4900
02:22:37,000 --> 02:22:39,000
对

4901
02:22:39,000 --> 02:22:40,000
对

4902
02:22:40,000 --> 02:22:43,000
我觉得这一点上 Visual Studio 也许是完全 Xcode

4903
02:22:43,000 --> 02:22:44,000
但我还是不会用去

4904
02:22:44,000 --> 02:22:46,000
但我还是不会去用 Visual Studio

4905
02:22:46,000 --> 02:22:47,000
就是因为太丑了

4906
02:22:47,000 --> 02:22:50,000
就是因为它已经不是我的

4907
02:22:50,000 --> 02:22:51,000
平台了

4908
02:22:51,000 --> 02:22:53,000
它已经不是我的世界的一部分了

4909
02:22:53,000 --> 02:22:53,000
对

4910
02:22:53,000 --> 02:22:56,000
它对我来说已经是一种比较陌生的东西

4911
02:22:56,000 --> 02:22:57,000
你说你

4912
02:22:57,000 --> 02:23:01,000
你把自己变得再好有什么用

4913
02:23:01,000 --> 02:23:02,000
它已经往前走了

4914
02:23:02,000 --> 02:23:03,000
对

4915
02:23:03,000 --> 02:23:04,000
I have moved on

4916
02:23:04,000 --> 02:23:07,000
好悲伤的一个故事

4917
02:23:07,000 --> 02:23:08,000
对

4918
02:23:08,000 --> 02:23:10,000
Eclipse

4919
02:23:10,000 --> 02:23:11,000
对

4920
02:23:11,000 --> 02:23:13,000
Eclipse 可能是比较

4921
02:23:13,000 --> 02:23:18,000
非常平庸的一个 IDE

4922
02:23:18,000 --> 02:23:18,000
应该说

4923
02:23:18,000 --> 02:23:20,000
这能叫平庸来形成

4924
02:23:20,000 --> 02:23:22,000
我觉得这大而全的臃肿一个东西吗

4925
02:23:22,000 --> 02:23:23,000
不

4926
02:23:23,000 --> 02:23:25,000
它所谓平庸就是应该

4927
02:23:25,000 --> 02:23:26,000
Eclipse 可以在所有平台上使用

4928
02:23:26,000 --> 02:23:27,000
对

4929
02:23:27,000 --> 02:23:30,000
然后用 Eclipse 最长

4930
02:23:30,000 --> 02:23:35,000
最多使用 Eclipse 的一帮人是没有什么志向的

4931
02:23:35,000 --> 02:23:37,000
或者说没有什么

4932
02:23:37,000 --> 02:23:39,000
呃呃呃

4933
02:23:39,000 --> 02:23:41,000
此处插入一个

4934
02:23:41,000 --> 02:23:43,000
一个一个带有词

4935
02:23:43,000 --> 02:23:44,000
歧视性词

4936
02:23:44,000 --> 02:23:46,000
歧视性意味的形容词

4937
02:23:46,000 --> 02:23:50,000
品位或者是 whatever 的程序员所用的

4938
02:23:50,000 --> 02:23:50,000
就是

4939
02:23:50,000 --> 02:23:54,000
你能想象到的最平庸的工作

4940
02:23:54,000 --> 02:23:55,000
嗯

4941
02:23:55,000 --> 02:23:57,000
我觉得就是用 Eclipse

4942
02:23:57,000 --> 02:23:59,000
在一个公司里面写 Java

4943
02:23:59,000 --> 02:24:00,000
我发现有个问题

4944
02:24:00,000 --> 02:24:01,000
我说就是我现在所做的事情

4945
02:24:01,000 --> 02:24:03,000
就我发现有个问题啊

4946
02:24:03,000 --> 02:24:03,000
就是

4947
02:24:03,000 --> 02:24:05,000
就学校里面

4948
02:24:05,000 --> 02:24:06,000
教人

4949
02:24:06,000 --> 02:24:06,000
写

4950
02:24:06,000 --> 02:24:07,000
因为现在

4951
02:24:07,000 --> 02:24:08,000
大部分

4952
02:24:08,000 --> 02:24:08,000
就

4953
02:24:08,000 --> 02:24:10,000
学校里面大部分教是用 Java

4954
02:24:10,000 --> 02:24:12,000
写那个入门嘛

4955
02:24:12,000 --> 02:24:13,000
学 CS 入门

4956
02:24:13,000 --> 02:24:13,000
那个东西

4957
02:24:13,000 --> 02:24:15,000
然后发现他们都在用 Eclipse

4958
02:24:15,000 --> 02:24:16,000
对

4959
02:24:16,000 --> 02:24:17,000
Java

4960
02:24:17,000 --> 02:24:17,000
对

4961
02:24:17,000 --> 02:24:18,000
Eclipse

4962
02:24:18,000 --> 02:24:18,000
对

4963
02:24:18,000 --> 02:24:20,000
这就是平均的一个点

4964
02:24:20,000 --> 02:24:23,000
就是如果一个人在学校里面学过 Java

4965
02:24:23,000 --> 02:24:23,000
嗯

4966
02:24:23,000 --> 02:24:25,000
那他基本上就很有可能用 Eclipse

4967
02:24:25,000 --> 02:24:28,000
惯性的对吧

4968
02:24:28,000 --> 02:24:28,000
对

4969
02:24:28,000 --> 02:24:29,000
就是教材就会说

4970
02:24:29,000 --> 02:24:29,000
哦

4971
02:24:29,000 --> 02:24:31,000
你去下载一个这个工具

4972
02:24:31,000 --> 02:24:32,000
他会一步一步告诉你怎么去完成

4973
02:24:32,000 --> 02:24:33,000
这个配置的工作

4974
02:24:33,000 --> 02:24:34,000
在你没有一个偏好的情况之下

4975
02:24:34,000 --> 02:24:35,000
你当然要按照教材上

4976
02:24:35,000 --> 02:24:37,000
告诉你的事情来做嘛

4977
02:24:37,000 --> 02:24:38,000
嗯

4978
02:24:38,000 --> 02:24:39,000
对吧

4979
02:24:39,000 --> 02:24:39,000
对

4980
02:24:39,000 --> 02:24:40,000
然后

4981
02:24:40,000 --> 02:24:42,000
这就导致了 Eclipse

4982
02:24:42,000 --> 02:24:43,000
是一个非常没有

4983
02:24:43,000 --> 02:24:44,000
你

4984
02:24:44,000 --> 02:24:45,000
你谈到他的时候

4985
02:24:45,000 --> 02:24:47,000
你就让他谈论空气或者水

4986
02:24:47,000 --> 02:24:49,000
你对他没有什么偏好

4987
02:24:49,000 --> 02:24:49,000
或者是

4988
02:24:49,000 --> 02:24:49,000
对

4989
02:24:49,000 --> 02:24:51,000
没有性格的东西

4990
02:24:51,000 --> 02:24:51,000
对

4991
02:24:51,000 --> 02:24:52,000
对

4992
02:24:52,000 --> 02:24:54,000
人们只能吐槽说

4993
02:24:54,000 --> 02:24:56,000
比如说 Eclipse 在 Max 非常非常慢

4994
02:24:56,000 --> 02:24:58,000
不光是 Mac 吧

4995
02:24:58,000 --> 02:24:59,000
所有系统上都很慢

4996
02:24:59,000 --> 02:25:02,000
我觉得在 Links 上面还可以

4997
02:25:02,000 --> 02:25:02,000
还可以啊

4998
02:25:02,000 --> 02:25:02,000
OK

4999
02:25:02,000 --> 02:25:04,000
但是在 Max 上面就是经常会卡到

5000
02:25:04,000 --> 02:25:05,000
我也不知道

5001
02:25:05,000 --> 02:25:06,000
应该跟项目有关

5002
02:25:06,000 --> 02:25:08,000
就是我现在做的项目是一个

5003
02:25:08,000 --> 02:25:09,000
嗯

5004
02:25:09,000 --> 02:25:11,000
就

5005
02:25:11,000 --> 02:25:12,000
我来说一个词

5006
02:25:12,000 --> 02:25:13,000
你不要被吓到

5007
02:25:13,000 --> 02:25:13,000
嗯

5008
02:25:13,000 --> 02:25:14,000
Maven

5009
02:25:14,000 --> 02:25:16,000
对

5010
02:25:16,000 --> 02:25:17,000
是

5011
02:25:17,000 --> 02:25:20,000
是用 Maven 来管理这个软件包的

5012
02:25:20,000 --> 02:25:21,000
然后

5013
02:25:21,000 --> 02:25:22,000
呃

5014
02:25:22,000 --> 02:25:26,000
我们这个项目大概有 70 到 80 个

5015
02:25:26,000 --> 02:25:27,000
呃

5016
02:25:27,000 --> 02:25:28,000
Maven

5017
02:25:28,000 --> 02:25:29,000
module 吧

5018
02:25:29,000 --> 02:25:29,000
OK

5019
02:25:29,000 --> 02:25:31,000
Maven project

5020
02:25:31,000 --> 02:25:32,000
然后

5021
02:25:32,000 --> 02:25:33,000
呃

5022
02:25:33,000 --> 02:25:34,000
每次去刷新的时候

5023
02:25:34,000 --> 02:25:37,000
就是 Eclipse 要在后台去更新整个

5024
02:25:37,000 --> 02:25:40,000
整个项目的 dependency 的时候

5025
02:25:40,000 --> 02:25:44,000
可能整个程序可以长达 20 分钟

5026
02:25:44,000 --> 02:25:45,000
时序相应

5027
02:25:45,000 --> 02:25:46,000
哇

5028
02:25:46,000 --> 02:25:48,000
这在 Links 上面是完全不会出现的

5029
02:25:48,000 --> 02:25:49,000
OK

5030
02:25:49,000 --> 02:25:50,000
对

5031
02:25:50,000 --> 02:25:52,000
就是实现的问题吗

5032
02:25:52,000 --> 02:25:52,000
嗯

5033
02:25:52,000 --> 02:25:53,000
嗯

5034
02:25:53,000 --> 02:25:54,000
他不对

5035
02:25:54,000 --> 02:25:55,000
他应该是加号写的

5036
02:25:55,000 --> 02:25:56,000
如果虚拟机没有

5037
02:25:56,000 --> 02:25:57,000
他是加号写的

5038
02:25:57,000 --> 02:25:58,000
就 JBA 没有问题的话

5039
02:25:58,000 --> 02:25:59,000
不能

5040
02:25:59,000 --> 02:26:00,000
不应该出现这种

5041
02:26:00,000 --> 02:26:01,000
这么大的差异

5042
02:26:01,000 --> 02:26:03,000
我觉得肯定是实现的问题

5043
02:26:03,000 --> 02:26:04,000
就是他的

5044
02:26:04,000 --> 02:26:05,000
可能 Sumpho

5045
02:26:05,000 --> 02:26:06,000
线程模型不是很

5046
02:26:06,000 --> 02:26:07,000
不是很科学

5047
02:26:07,000 --> 02:26:08,000
到这

5048
02:26:08,000 --> 02:26:09,000
UI

5049
02:26:09,000 --> 02:26:10,000
UI 的线程会

5050
02:26:10,000 --> 02:26:12,000
会长时间的持续响应

5051
02:26:12,000 --> 02:26:12,000
哇

5052
02:26:12,000 --> 02:26:14,000
有可能是那个

5053
02:26:14,000 --> 02:26:16,000
在 Macman 的那个 Gui 那套

5054
02:26:16,000 --> 02:26:17,000
是不是没有弄好

5055
02:26:17,000 --> 02:26:18,000
很有可能

5056
02:26:18,000 --> 02:26:19,000
对

5057
02:26:19,000 --> 02:26:20,000
就我

5058
02:26:20,000 --> 02:26:20,000
我其实

5059
02:26:20,000 --> 02:26:23,000
我有用过一段时间的 Eclipse

5060
02:26:23,000 --> 02:26:24,000
因为要给

5061
02:26:24,000 --> 02:26:25,000
要去乐卷

5062
02:26:25,000 --> 02:26:27,000
就是做助教的话

5063
02:26:27,000 --> 02:26:27,000
要写

5064
02:26:27,000 --> 02:26:27,000
做

5065
02:26:27,000 --> 02:26:28,000
好作业

5066
02:26:28,000 --> 02:26:29,000
然后就会

5067
02:26:29,000 --> 02:26:30,000
因为你今天

5068
02:26:30,000 --> 02:26:31,000
你刚才也讲的问题

5069
02:26:31,000 --> 02:26:31,000
他是有一个

5070
02:26:31,000 --> 02:26:33,000
这个惯性的

5071
02:26:33,000 --> 02:26:33,000
就学生

5072
02:26:33,000 --> 02:26:35,000
学校里面老师

5073
02:26:35,000 --> 02:26:35,000
教用这个

5074
02:26:35,000 --> 02:26:36,000
然后学生也要用这个

5075
02:26:36,000 --> 02:26:38,000
那我打开他的工程文件

5076
02:26:38,000 --> 02:26:39,000
因为只能用这个

5077
02:26:39,000 --> 02:26:39,000
不然的话

5078
02:26:39,000 --> 02:26:41,000
我还得再去折腾一下

5079
02:26:41,000 --> 02:26:41,000
他怎么去配置

5080
02:26:41,000 --> 02:26:42,000
他每一个工程

5081
02:26:42,000 --> 02:26:43,000
是怎么样的

5082
02:26:43,000 --> 02:26:43,000
对吧

5083
02:26:43,000 --> 02:26:45,000
还是挺坑爹的

5084
02:26:45,000 --> 02:26:46,000
那我对他的

5085
02:26:46,000 --> 02:26:48,000
最恶劣的印象

5086
02:26:48,000 --> 02:26:49,000
就是他实在是太丑了

5087
02:26:50,000 --> 02:26:52,000
这个

5088
02:26:52,000 --> 02:26:53,000
这个我已经

5089
02:26:53,000 --> 02:26:54,000
好吧

5090
02:26:54,000 --> 02:26:55,000
他比 Visual

5091
02:26:55,000 --> 02:26:56,000
他比我见过的

5092
02:26:56,000 --> 02:26:57,000
任何一款编辑

5093
02:26:57,000 --> 02:26:57,000
都要丑

5094
02:26:57,000 --> 02:27:01,000
因为他

5095
02:27:01,000 --> 02:27:02,000
对

5096
02:27:02,000 --> 02:27:02,000
没有一个

5097
02:27:02,000 --> 02:27:03,000
就是

5098
02:27:03,000 --> 02:27:04,000
怎么说呢

5099
02:27:04,000 --> 02:27:04,000
就是

5100
02:27:04,000 --> 02:27:05,000
Eclipse

5101
02:27:05,000 --> 02:27:06,000
他的

5102
02:27:06,000 --> 02:27:08,000
他的组织模式

5103
02:27:08,000 --> 02:27:08,000
导致了

5104
02:27:08,000 --> 02:27:10,000
他必然是这样一个宿命

5105
02:27:10,000 --> 02:27:10,000
就是

5106
02:27:10,000 --> 02:27:12,000
他用了一个

5107
02:27:12,000 --> 02:27:13,000
他其实你也

5108
02:27:13,000 --> 02:27:14,000
他也不算是用的是一个

5109
02:27:14,000 --> 02:27:15,000
跨平台的

5110
02:27:15,000 --> 02:27:16,000
GUIC 套件

5111
02:27:16,000 --> 02:27:17,000
因为

5112
02:27:17,000 --> 02:27:18,000
我看他的元素

5113
02:27:18,000 --> 02:27:18,000
有些还是

5114
02:27:18,000 --> 02:27:21,000
在 Mac 上是原生的 Mac 元素

5115
02:27:21,000 --> 02:27:22,000
但是一到他那个编辑器

5116
02:27:22,000 --> 02:27:23,000
就是那个 IDE 里面的

5117
02:27:23,000 --> 02:27:24,000
那些东西

5118
02:27:24,000 --> 02:27:25,000
一些部件的时候

5119
02:27:25,000 --> 02:27:26,000
你就会明显的发现

5120
02:27:26,000 --> 02:27:27,000
这和其他这种

5121
02:27:27,000 --> 02:27:28,000
完全不一样

5122
02:27:28,000 --> 02:27:30,000
对

5123
02:27:30,000 --> 02:27:30,000
没错

5124
02:27:30,000 --> 02:27:32,000
而且在

5125
02:27:32,000 --> 02:27:32,000
我不知道 Windows 上面

5126
02:27:32,000 --> 02:27:33,000
是有没有这个问题

5127
02:27:33,000 --> 02:27:34,000
但他在 Linux 上面

5128
02:27:34,000 --> 02:27:36,000
好像他还装的

5129
02:27:36,000 --> 02:27:37,000
装的挺好的

5130
02:27:37,000 --> 02:27:38,000
就是模拟的挺好的

5131
02:27:38,000 --> 02:27:39,000
也可能是

5132
02:27:39,000 --> 02:27:40,000
这个选择

5133
02:27:40,000 --> 02:27:41,000
就 GTK 的情况下吧

5134
02:27:41,000 --> 02:27:42,000
他还

5135
02:27:42,000 --> 02:27:43,000
还凑合

5136
02:27:43,000 --> 02:27:44,000
但是

5137
02:27:44,000 --> 02:27:46,000
在 Mac 上

5138
02:27:46,000 --> 02:27:47,000
或者在 Windows 上

5139
02:27:47,000 --> 02:27:47,000
他就是

5140
02:27:47,000 --> 02:27:48,000
长得很奇怪

5141
02:27:48,000 --> 02:27:51,000
这其实可能也是因为

5142
02:27:51,000 --> 02:27:53,000
他用的那套

5143
02:27:53,000 --> 02:27:53,000
叫什么

5144
02:27:53,000 --> 02:27:54,000
Standard Widget

5145
02:27:54,000 --> 02:27:55,000
SWT

5146
02:27:55,000 --> 02:27:57,000
Standard Widget Toolkit

5147
02:27:57,000 --> 02:27:59,000
SWIT

5148
02:27:59,000 --> 02:27:59,000
对

5149
02:27:59,000 --> 02:28:00,000
是一套

5150
02:28:00,000 --> 02:28:01,000
的确也是一套

5151
02:28:01,000 --> 02:28:03,000
可能只有 Eclipse

5152
02:28:03,000 --> 02:28:04,000
在用的东西吧

5153
02:28:04,000 --> 02:28:06,000
还是 SWT

5154
02:28:06,000 --> 02:28:07,000
好像就是专门

5155
02:28:07,000 --> 02:28:07,000
用 Eclipse

5156
02:28:07,000 --> 02:28:08,000
而开发出来的东西

5157
02:28:08,000 --> 02:28:09,000
应该是这样吧

5158
02:28:09,000 --> 02:28:10,000
我记得

5159
02:28:10,000 --> 02:28:11,000
如果我没记错的话

5160
02:28:11,000 --> 02:28:11,000
就是

5161
02:28:11,000 --> 02:28:12,000
他会用这么一套

5162
02:28:12,000 --> 02:28:13,000
跨平台东西去做

5163
02:28:13,000 --> 02:28:14,000
然后搞的

5164
02:28:14,000 --> 02:28:14,000
对

5165
02:28:14,000 --> 02:28:15,000
虽然在每个平台上

5166
02:28:15,000 --> 02:28:17,000
你说就长得一样了

5167
02:28:17,000 --> 02:28:17,000
没有问题

5168
02:28:17,000 --> 02:28:19,000
可是这实在是

5169
02:28:19,000 --> 02:28:19,000
太丑了

5170
02:28:19,000 --> 02:28:20,000
怎么能够

5171
02:28:20,000 --> 02:28:22,000
而且

5172
02:28:22,000 --> 02:28:24,000
而且他那些窗口

5173
02:28:24,000 --> 02:28:24,000
你刚才说

5174
02:28:24,000 --> 02:28:26,000
这个什么 Xcode 的窗口的布局

5175
02:28:26,000 --> 02:28:28,000
可能不是很合理

5176
02:28:28,000 --> 02:28:28,000
对吧

5177
02:28:28,000 --> 02:28:28,000
他起码

5178
02:28:28,000 --> 02:28:30,000
他好歹还长得还

5179
02:28:30,000 --> 02:28:32,000
可以

5180
02:28:32,000 --> 02:28:33,000
长得还能看

5181
02:28:33,000 --> 02:28:34,000
他至少是漂亮

5182
02:28:34,000 --> 02:28:34,000
对

5183
02:28:34,000 --> 02:28:35,000
这个没错

5184
02:28:35,000 --> 02:28:36,000
Eclipse

5185
02:28:36,000 --> 02:28:36,000
这种布局

5186
02:28:36,000 --> 02:28:36,000
我

5187
02:28:36,000 --> 02:28:40,000
这已经不能用

5188
02:28:40,000 --> 02:28:42,000
用丑来形容了

5189
02:28:42,000 --> 02:28:42,000
简直

5190
02:28:42,000 --> 02:28:43,000
对于外貌协会来说

5191
02:28:43,000 --> 02:28:44,000
这非常非常

5192
02:28:44,000 --> 02:28:44,000
不能忍受

5193
02:28:44,000 --> 02:28:45,000
对

5194
02:28:45,000 --> 02:28:47,000
这都是什么乱七八糟的玩意

5195
02:28:47,000 --> 02:28:49,000
而且他那些各种图标也非常诡异

5196
02:28:49,000 --> 02:28:51,000
就是

5197
02:28:51,000 --> 02:28:55,000
你会想这是一个什么样的设计师设计出来的图标

5198
02:28:55,000 --> 02:28:59,000
好像的确有

5199
02:28:59,000 --> 02:29:00,000
你这么一说

5200
02:29:00,000 --> 02:29:02,000
我也觉得好像是挺奇怪

5201
02:29:02,000 --> 02:29:05,000
就完全不能反映他要代表的那个意思

5202
02:29:05,000 --> 02:29:06,000
我觉得就是

5203
02:29:06,000 --> 02:29:07,000
好吧

5204
02:29:07,000 --> 02:29:09,000
也可能是他那套语会

5205
02:29:09,000 --> 02:29:12,000
我至今为止没有理解到的一个结果

5206
02:29:12,000 --> 02:29:13,000
反正

5207
02:29:13,000 --> 02:29:13,000
对

5208
02:29:13,000 --> 02:29:17,000
我想到了一件完全无关的事情

5209
02:29:17,000 --> 02:29:19,000
就是图标

5210
02:29:19,000 --> 02:29:21,000
其实图标设计的一个问题

5211
02:29:21,000 --> 02:29:23,000
就是我在大上大学的时候

5212
02:29:23,000 --> 02:29:26,000
有一天去参加一个

5213
02:29:26,000 --> 02:29:31,000
web 设计的一个展会之类的

5214
02:29:31,000 --> 02:29:32,000
不展会

5215
02:29:32,000 --> 02:29:36,000
就是一个颁奖会之类的这么一个活动

5216
02:29:36,000 --> 02:29:38,000
然后就做的时候

5217
02:29:38,000 --> 02:29:39,000
有一个教美术

5218
02:29:39,000 --> 02:29:42,000
还是教什么视觉传达的一个老师

5219
02:29:42,000 --> 02:29:45,000
在那边指导台上的人用 PowerPoint

5220
02:29:45,000 --> 02:29:47,000
然后他说

5221
02:29:47,000 --> 02:29:48,000
一直说点那个酒杯

5222
02:29:48,000 --> 02:29:50,000
点那个酒杯

5223
02:29:50,000 --> 02:29:51,000
点那个酒杯的图标

5224
02:29:51,000 --> 02:29:53,000
然后我想

5225
02:29:53,000 --> 02:29:55,000
PowerPoint 上面

5226
02:29:55,000 --> 02:29:57,000
为什么会有一个酒杯的图标呢

5227
02:29:57,000 --> 02:29:58,000
结果是哪个图标

5228
02:29:58,000 --> 02:30:02,000
结果是当时的 PowerPoint

5229
02:30:02,000 --> 02:30:04,000
2002 还是

5230
02:30:04,000 --> 02:30:07,000
反正是某一个特定版本的 PowerPoint

5231
02:30:07,000 --> 02:30:08,000
可能现在还是这样

5232
02:30:08,000 --> 02:30:11,000
就是有一个快捷的图标

5233
02:30:11,000 --> 02:30:13,000
是进入展示模式

5234
02:30:13,000 --> 02:30:14,000
就是把你

5235
02:30:14,000 --> 02:30:15,000
你平时不是你打开

5236
02:30:15,000 --> 02:30:17,000
PowerPoint 不是处于编辑模式吗

5237
02:30:17,000 --> 02:30:19,000
就是左边是 slides

5238
02:30:19,000 --> 02:30:21,000
然后右边是那个正要被编辑的 slides

5239
02:30:21,000 --> 02:30:24,000
然后你点一下那个图标

5240
02:30:24,000 --> 02:30:25,000
就可以立即进入放映模式

5241
02:30:25,000 --> 02:30:26,000
对

5242
02:30:26,000 --> 02:30:28,000
然后那个图标

5243
02:30:28,000 --> 02:30:30,000
那个图标其实是一个

5244
02:30:30,000 --> 02:30:31,000
是一个

5245
02:30:31,000 --> 02:30:35,000
就是下面是一个支架

5246
02:30:35,000 --> 02:30:37,000
那个支架上是一张白纸

5247
02:30:37,000 --> 02:30:39,000
不是不是不是放映机

5248
02:30:39,000 --> 02:30:39,000
就是那种

5249
02:30:39,000 --> 02:30:40,000
whiteball

5250
02:30:40,000 --> 02:30:42,000
早期的 whiteball 是一张纸

5251
02:30:42,000 --> 02:30:44,000
就是是一个 ball

5252
02:30:44,000 --> 02:30:45,000
然后上面挂了很多纸

5253
02:30:45,000 --> 02:30:46,000
物理的 slides

5254
02:30:46,000 --> 02:30:47,000
对

5255
02:30:47,000 --> 02:30:48,000
物理的 slides

5256
02:30:48,000 --> 02:30:50,000
然后这个 slides

5257
02:30:50,000 --> 02:30:51,000
这个下面是一个支架

5258
02:30:51,000 --> 02:30:53,000
上面是一张纸的这么一个

5259
02:30:53,000 --> 02:30:54,000
眼看是一个杯子

5260
02:30:54,000 --> 02:30:56,000
被那个老师认成了酒杯

5261
02:30:56,000 --> 02:30:57,000
这件事情一直

5262
02:30:57,000 --> 02:30:59,000
一直深深地印在我的脑海里

5263
02:30:59,000 --> 02:31:00,000
我就觉得

5264
02:31:00,000 --> 02:31:01,000
对

5265
02:31:01,000 --> 02:31:02,000
交互设计

5266
02:31:02,000 --> 02:31:03,000
有时候你不会理解

5267
02:31:03,000 --> 02:31:05,000
你不会明白你的用户

5268
02:31:05,000 --> 02:31:06,000
把它理解为什么

5269
02:31:06,000 --> 02:31:06,000
就比如说

5270
02:31:06,000 --> 02:31:08,000
还有一例子

5271
02:31:08,000 --> 02:31:08,000
就是

5272
02:31:08,000 --> 02:31:10,000
comment conquer 里面

5273
02:31:10,000 --> 02:31:10,000
那个

5274
02:31:10,000 --> 02:31:14,000
有三个工具

5275
02:31:14,000 --> 02:31:15,000
最左边是修理

5276
02:31:15,000 --> 02:31:18,000
中间是贩卖

5277
02:31:18,000 --> 02:31:18,000
对

5278
02:31:18,000 --> 02:31:19,000
一个钱

5279
02:31:19,000 --> 02:31:20,000
就是你可以把自己的建筑卖掉

5280
02:31:20,000 --> 02:31:22,000
左边是个扳手

5281
02:31:22,000 --> 02:31:24,000
然后右边是个刀来的标志

5282
02:31:24,000 --> 02:31:24,000
对

5283
02:31:24,000 --> 02:31:26,000
然后那我想说

5284
02:31:26,000 --> 02:31:30,000
用扳手可以修理

5285
02:31:30,000 --> 02:31:34,000
用刀来不就是买建筑吗

5286
02:31:34,000 --> 02:31:37,000
不对

5287
02:31:37,000 --> 02:31:37,000
不对

5288
02:31:37,000 --> 02:31:37,000
反过来

5289
02:31:37,000 --> 02:31:39,000
用刀来可以把建筑卖掉

5290
02:31:39,000 --> 02:31:41,000
那用扳手难道不就是

5291
02:31:41,000 --> 02:31:43,000
造一个建筑出来吗

5292
02:31:43,000 --> 02:31:44,000
然后

5293
02:31:44,000 --> 02:31:45,000
对

5294
02:31:45,000 --> 02:31:47,000
我把自己所有建筑卖掉了

5295
02:31:47,000 --> 02:31:48,000
我把自己所有建筑卖掉了

5296
02:31:48,000 --> 02:31:49,000
然后试图

5297
02:31:49,000 --> 02:31:51,000
重新把基地再搭一遍

5298
02:31:51,000 --> 02:31:52,000
用扳手

5299
02:31:52,000 --> 02:31:55,000
对

5300
02:31:55,000 --> 02:31:56,000
一上来把自己的大美预卖

5301
02:31:56,000 --> 02:31:57,000
所以什么

5302
02:31:57,000 --> 02:31:59,000
图标设计还是一个很重要的

5303
02:31:59,000 --> 02:31:59,000
对

5304
02:31:59,000 --> 02:32:01,000
交互设计还是很重要的

5305
02:32:01,000 --> 02:32:01,000
就像你说的

5306
02:32:01,000 --> 02:32:02,000
就是有时候

5307
02:32:02,000 --> 02:32:04,000
就如果你不太明白

5308
02:32:04,000 --> 02:32:06,000
JAR 这个单词

5309
02:32:06,000 --> 02:32:07,000
在英语里面

5310
02:32:07,000 --> 02:32:09,000
可以指代罐子的话

5311
02:32:09,000 --> 02:32:10,000
你是不太明白

5312
02:32:10,000 --> 02:32:11,000
为什么 Eclipse

5313
02:32:11,000 --> 02:32:13,000
要把那个 JAR 文件

5314
02:32:13,000 --> 02:32:14,000
画成一个罐子

5315
02:32:14,000 --> 02:32:16,000
然后里面装着零和一

5316
02:32:16,000 --> 02:32:18,000
的确是挺耳朵的

5317
02:32:18,000 --> 02:32:19,000
对

5318
02:32:19,000 --> 02:32:21,000
关于 Eclipse 的吐槽

5319
02:32:21,000 --> 02:32:22,000
还有一个就是

5320
02:32:22,000 --> 02:32:22,000
它

5321
02:32:22,000 --> 02:32:24,000
你不觉得它非常慢

5322
02:32:24,000 --> 02:32:26,000
对

5323
02:32:26,000 --> 02:32:27,000
我刚才已经说了

5324
02:32:27,000 --> 02:32:27,000
就是

5325
02:32:27,000 --> 02:32:29,000
它的慢不是那种

5326
02:32:29,000 --> 02:32:32,000
可以忍你

5327
02:32:32,000 --> 02:32:32,000
可以接受的慢

5328
02:32:32,000 --> 02:32:33,000
它不是那种可以忍

5329
02:32:33,000 --> 02:32:34,000
你说这个点一下

5330
02:32:34,000 --> 02:32:35,000
可能卡一下

5331
02:32:35,000 --> 02:32:35,000
这样子

5332
02:32:35,000 --> 02:32:36,000
它是一种

5333
02:32:36,000 --> 02:32:37,000
整个流程

5334
02:32:37,000 --> 02:32:37,000
都会觉得

5335
02:32:37,000 --> 02:32:39,000
连输入一个字

5336
02:32:39,000 --> 02:32:39,000
你都会觉得

5337
02:32:39,000 --> 02:32:40,000
它有点慢的那种慢

5338
02:32:40,000 --> 02:32:41,000
但可能这次

5339
02:32:41,000 --> 02:32:42,000
就好像 somehow

5340
02:32:42,000 --> 02:32:43,000
你输入一个字符

5341
02:32:43,000 --> 02:32:44,000
它要更新整个 UI 的感觉

5342
02:32:44,000 --> 02:32:45,000
对

5343
02:32:45,000 --> 02:32:45,000
就是有一种

5344
02:32:45,000 --> 02:32:47,000
黏制的感觉

5345
02:32:47,000 --> 02:32:48,000
我不知道怎么描述

5346
02:32:48,000 --> 02:32:49,000
准不准确

5347
02:32:49,000 --> 02:32:50,000
就是你会觉得

5348
02:32:50,000 --> 02:32:52,000
你跟 UI 交互的时候

5349
02:32:52,000 --> 02:32:54,000
你在写代码的时候

5350
02:32:54,000 --> 02:32:55,000
你永远不可能

5351
02:32:55,000 --> 02:32:57,000
找到那种流畅的感觉

5352
02:32:57,000 --> 02:32:59,000
嗯

5353
02:32:59,000 --> 02:32:59,000
没错

5354
02:32:59,000 --> 02:33:00,000
是这样

5355
02:33:00,000 --> 02:33:01,000
我一直不明白

5356
02:33:01,000 --> 02:33:01,000
为什么

5357
02:33:01,000 --> 02:33:02,000
刚才你可以说

5358
02:33:02,000 --> 02:33:03,000
这个可能是什么

5359
02:33:03,000 --> 02:33:04,000
用 JVM 虚拟机

5360
02:33:04,000 --> 02:33:06,000
它可能 latency

5361
02:33:06,000 --> 02:33:07,000
不如用原生的

5362
02:33:07,000 --> 02:33:09,000
像 C 或者 C++这种

5363
02:33:09,000 --> 02:33:11,000
不需要 GC 的语言

5364
02:33:11,000 --> 02:33:12,000
或者这种来得要直接

5365
02:33:12,000 --> 02:33:13,000
但是

5366
02:33:13,000 --> 02:33:14,000
原因我们不管了

5367
02:33:14,000 --> 02:33:15,000
但是就是说

5368
02:33:15,000 --> 02:33:16,000
最终的给我的体验

5369
02:33:16,000 --> 02:33:17,000
就是

5370
02:33:17,000 --> 02:33:18,000
我如果可能

5371
02:33:18,000 --> 02:33:20,000
我肯定不会再想

5372
02:33:20,000 --> 02:33:21,000
在这里面写东西的

5373
02:33:21,000 --> 02:33:22,000
没错

5374
02:33:22,000 --> 02:33:23,000
对

5375
02:33:23,000 --> 02:33:23,000
对

5376
02:33:23,000 --> 02:33:25,000
就是基本上

5377
02:33:25,000 --> 02:33:26,000
我也曾经挣扎过

5378
02:33:26,000 --> 02:33:27,000
就是我想要切换到

5379
02:33:27,000 --> 02:33:29,000
那个 IntelliJ 下面

5380
02:33:29,000 --> 02:33:32,000
但是 B 公司的项目

5381
02:33:32,000 --> 02:33:32,000
有

5382
02:33:32,000 --> 02:33:34,000
其实是非常 Eclipse 依赖的

5383
02:33:34,000 --> 02:33:35,000
就

5384
02:33:35,000 --> 02:33:36,000
因为是 Legacy Code

5385
02:33:36,000 --> 02:33:38,000
所以然后里面有很多

5386
02:33:38,000 --> 02:33:39,000
比如说启动项目呀

5387
02:33:39,000 --> 02:33:40,000
或者是

5388
02:33:40,000 --> 02:33:43,000
启动项目可能有十几个吧

5389
02:33:43,000 --> 02:33:45,000
每一个分别启动一个

5390
02:33:45,000 --> 02:33:48,000
启动整个组件里面的

5391
02:33:48,000 --> 02:33:49,000
某一个特定的组件

5392
02:33:49,000 --> 02:33:52,000
然后打开一个窗口

5393
02:33:52,000 --> 02:33:53,000
Windows 之类的

5394
02:33:53,000 --> 02:33:54,000
这些东西

5395
02:33:54,000 --> 02:33:54,000
我基本上

5396
02:33:54,000 --> 02:33:55,000
直到现在

5397
02:33:55,000 --> 02:33:56,000
就快要离职了

5398
02:33:56,000 --> 02:33:57,000
我都没有时间去

5399
02:33:57,000 --> 02:33:58,000
弄明白

5400
02:33:58,000 --> 02:33:59,000
它到底是启动了

5401
02:33:59,000 --> 02:33:59,000
哪一个组件

5402
02:33:59,000 --> 02:34:02,000
但整个程序

5403
02:34:02,000 --> 02:34:04,000
基本上脱离 Eclipse

5404
02:34:04,000 --> 02:34:05,000
是非常非常难以使用的

5405
02:34:05,000 --> 02:34:06,000
然后

5406
02:34:06,000 --> 02:34:08,000
或者是难以维护的

5407
02:34:08,000 --> 02:34:10,000
但是我还是成功的做到了

5408
02:34:10,000 --> 02:34:12,000
在 80%的时间里面

5409
02:34:12,000 --> 02:34:14,000
能用那个 VIM 改的部分

5410
02:34:14,000 --> 02:34:15,000
就是 VIM 改

5411
02:34:15,000 --> 02:34:17,000
我宁可用 VIM 改完

5412
02:34:17,000 --> 02:34:18,000
Java

5413
02:34:18,000 --> 02:34:19,000
然后用那个 Synthetic

5414
02:34:19,000 --> 02:34:21,000
去看一下

5415
02:34:21,000 --> 02:34:22,000
有没有语法错误

5416
02:34:22,000 --> 02:34:23,000
然后编译

5417
02:34:23,000 --> 02:34:24,000
如果编译不过了

5418
02:34:24,000 --> 02:34:25,000
我再回去改

5419
02:34:25,000 --> 02:34:26,000
我宁可这样

5420
02:34:26,000 --> 02:34:27,000
也不愿意去启动 Eclipse

5421
02:34:27,000 --> 02:34:30,000
就把人逼成什么样子

5422
02:34:30,000 --> 02:34:31,000
对

5423
02:34:31,000 --> 02:34:31,000
就可以想象

5424
02:34:31,000 --> 02:34:33,000
他的 PainS 的指数有多高

5425
02:34:33,000 --> 02:34:34,000
对

5426
02:34:34,000 --> 02:34:36,000
反正就是刚才讲的

5427
02:34:36,000 --> 02:34:36,000
他没有那种

5428
02:34:36,000 --> 02:34:39,000
让你很畅快的感觉

5429
02:34:39,000 --> 02:34:40,000
所以我很难想象

5430
02:34:40,000 --> 02:34:41,000
有人会在里面

5431
02:34:41,000 --> 02:34:43,000
做到出一个好的产品

5432
02:34:43,000 --> 02:34:44,000
我问你一件事情

5433
02:34:44,000 --> 02:34:47,000
你觉得技术上存在一种人

5434
02:34:47,000 --> 02:34:48,000
能够理解

5435
02:34:48,000 --> 02:34:49,000
VIM 改的所有功能

5436
02:34:49,000 --> 02:34:51,000
那些按钮的组合

5437
02:34:51,000 --> 02:34:51,000
是在干嘛吗

5438
02:34:51,000 --> 02:34:53,000
我觉得 Eclipse

5439
02:34:53,000 --> 02:34:55,000
就像 CZ 家一样

5440
02:34:55,000 --> 02:34:55,000
任何一个说

5441
02:34:55,000 --> 02:34:57,000
我精通 Eclipse 的人

5442
02:34:57,000 --> 02:34:57,000
都在扯淡

5443
02:34:57,000 --> 02:34:59,000
所以

5444
02:34:59,000 --> 02:35:01,000
没有一个人

5445
02:35:01,000 --> 02:35:01,000
是理解

5446
02:35:01,000 --> 02:35:03,000
所有的按钮

5447
02:35:03,000 --> 02:35:03,000
或者功能

5448
02:35:03,000 --> 02:35:04,000
是干嘛的

5449
02:35:04,000 --> 02:35:07,000
可以这样说吧

5450
02:35:07,000 --> 02:35:08,000
我相信

5451
02:35:08,000 --> 02:35:10,000
如果你愿意穷尽

5452
02:35:10,000 --> 02:35:12,000
你两三年的时间

5453
02:35:12,000 --> 02:35:13,000
去研究一个版本的话

5454
02:35:13,000 --> 02:35:14,000
应该是可以研究到

5455
02:35:14,000 --> 02:35:14,000
他会更新

5456
02:35:14,000 --> 02:35:15,000
两相年

5457
02:35:15,000 --> 02:35:16,000
最近又更新了一个版本

5458
02:35:16,000 --> 02:35:17,000
你又不知道

5459
02:35:17,000 --> 02:35:18,000
现在版本叫什么

5460
02:35:18,000 --> 02:35:18,000
LUNA

5461
02:35:18,000 --> 02:35:19,000
还是叫什么

5462
02:35:19,000 --> 02:35:21,000
现在应该已经

5463
02:35:21,000 --> 02:35:22,000
出了 LUNA 版本

5464
02:35:22,000 --> 02:35:24,000
我还在用之前

5465
02:35:24,000 --> 02:35:24,000
那个什么

5466
02:35:24,000 --> 02:35:26,000
反正木星

5467
02:35:26,000 --> 02:35:27,000
我问卫星的名字

5468
02:35:27,000 --> 02:35:27,000
What the hell

5469
02:35:27,000 --> 02:35:29,000
对啊

5470
02:35:29,000 --> 02:35:31,000
还有一个事情

5471
02:35:31,000 --> 02:35:31,000
就是

5472
02:35:31,000 --> 02:35:32,000
据我所知

5473
02:35:32,000 --> 02:35:34,000
好像安卓开发

5474
02:35:34,000 --> 02:35:35,000
那个什么

5475
02:35:35,000 --> 02:35:36,000
Android Studio

5476
02:35:36,000 --> 02:35:37,000
好像是基于 Eclipse

5477
02:35:37,000 --> 02:35:38,000
改的

5478
02:35:38,000 --> 02:35:39,000
是吧

5479
02:35:39,000 --> 02:35:39,000
对

5480
02:35:39,000 --> 02:35:40,000
Android 的开发

5481
02:35:40,000 --> 02:35:43,000
最开始是一定要装一个 Eclipse 的插件

5482
02:35:43,000 --> 02:35:45,000
我觉得当时就已经 turn me off 了

5483
02:35:45,000 --> 02:35:45,000
就我

5484
02:35:45,000 --> 02:35:47,000
那我这辈子都不要为 Android 的开发程序了

5485
02:35:47,000 --> 02:35:49,000
居然用 Eclipse

5486
02:35:49,000 --> 02:35:49,000
对

5487
02:35:49,000 --> 02:35:50,000
然后

5488
02:35:50,000 --> 02:35:51,000
对

5489
02:35:51,000 --> 02:35:53,000
而且 Google App Engine

5490
02:35:53,000 --> 02:35:54,000
其实早期也是

5491
02:35:54,000 --> 02:35:56,000
支持你用一个

5492
02:35:56,000 --> 02:35:58,000
Eclipse 的插件

5493
02:35:58,000 --> 02:35:59,000
因为它支持那个

5494
02:35:59,000 --> 02:36:01,000
Java 的那个人心态嘛

5495
02:36:01,000 --> 02:36:01,000
对

5496
02:36:01,000 --> 02:36:02,000
对

5497
02:36:02,000 --> 02:36:03,000
对

5498
02:36:03,000 --> 02:36:03,000
然后

5499
02:36:03,000 --> 02:36:05,000
我就那个 Android

5500
02:36:05,000 --> 02:36:06,000
我一直有一个

5501
02:36:06,000 --> 02:36:07,000
假说啊

5502
02:36:07,000 --> 02:36:09,000
那也肯定是不对的

5503
02:36:09,000 --> 02:36:09,000
但是

5504
02:36:09,000 --> 02:36:11,000
我倾向于这么想

5505
02:36:11,000 --> 02:36:12,000
就是你

5506
02:36:12,000 --> 02:36:13,000
我们老是说

5507
02:36:13,000 --> 02:36:15,000
这个什么 Android 的上面的应用

5508
02:36:15,000 --> 02:36:16,000
整体来说

5509
02:36:16,000 --> 02:36:18,000
不如 IOS 上面的好看

5510
02:36:18,000 --> 02:36:19,000
嗯

5511
02:36:19,000 --> 02:36:19,000
我在想

5512
02:36:19,000 --> 02:36:21,000
是不是和开发工具有关吗

5513
02:36:21,000 --> 02:36:22,000
你想象一下

5514
02:36:22,000 --> 02:36:23,000
如果你一个

5515
02:36:23,000 --> 02:36:23,000
作为一个

5516
02:36:23,000 --> 02:36:24,000
比如说你是一个

5517
02:36:24,000 --> 02:36:26,000
就是什么所谓的独立开发者

5518
02:36:26,000 --> 02:36:27,000
那种大公司

5519
02:36:27,000 --> 02:36:28,000
你说有单独的美工

5520
02:36:28,000 --> 02:36:28,000
那种东西

5521
02:36:28,000 --> 02:36:29,000
再说

5522
02:36:29,000 --> 02:36:30,000
就是你作为一个

5523
02:36:30,000 --> 02:36:32,000
这种小的两三个人

5524
02:36:32,000 --> 02:36:33,000
或者一个人的团队

5525
02:36:33,000 --> 02:36:34,000
不是

5526
02:36:34,000 --> 02:36:34,000
这个团队

5527
02:36:34,000 --> 02:36:35,000
就是两三个团队和一个人

5528
02:36:35,000 --> 02:36:36,000
你自己一个独立的

5529
02:36:36,000 --> 02:36:37,000
就单

5530
02:36:37,000 --> 02:36:38,000
单人开发者

5531
02:36:38,000 --> 02:36:42,000
你面对着这么一个丑陋的一个界面

5532
02:36:42,000 --> 02:36:43,000
你有心情做出一个很好

5533
02:36:43,000 --> 02:36:44,000
很漂亮的产品

5534
02:36:44,000 --> 02:36:46,000
我一直很怀疑这件事情

5535
02:36:46,000 --> 02:36:48,000
起码我每次看到 Eclipse 的时候

5536
02:36:48,000 --> 02:36:51,000
我的那个心态就觉得很焦躁

5537
02:36:51,000 --> 02:36:52,000
很焦虑

5538
02:36:52,000 --> 02:36:53,000
没错

5539
02:36:53,000 --> 02:36:56,000
所以这里可能会影响很多心情

5540
02:36:56,000 --> 02:36:56,000
我觉得

5541
02:36:56,000 --> 02:36:57,000
对

5542
02:36:57,000 --> 02:37:02,000
就好像 Xcode 再怎么不好用

5543
02:37:02,000 --> 02:37:03,000
好歹还长得可以了

5544
02:37:03,000 --> 02:37:05,000
它的一个化窗体的部分

5545
02:37:05,000 --> 02:37:07,000
还是比较漂亮

5546
02:37:07,000 --> 02:37:07,000
对

5547
02:37:07,000 --> 02:37:09,000
但是反过来

5548
02:37:09,000 --> 02:37:10,000
在 VS 2 下面

5549
02:37:10,000 --> 02:37:11,000
那个

5550
02:37:11,000 --> 02:37:12,000
一显示一个

5551
02:37:12,000 --> 02:37:13,000
一个一个

5552
02:37:13,000 --> 02:37:14,000
Windows Form 1

5553
02:37:14,000 --> 02:37:16,000
然后里面一堆小点

5554
02:37:16,000 --> 02:37:17,000
我立刻就觉得

5555
02:37:17,000 --> 02:37:17,000
我靠

5556
02:37:17,000 --> 02:37:18,000
是什么

5557
02:37:18,000 --> 02:37:20,000
它那个小点

5558
02:37:20,000 --> 02:37:21,000
最后是为了让你定位

5559
02:37:21,000 --> 02:37:21,000
对吧

5560
02:37:21,000 --> 02:37:22,000
是定位用的

5561
02:37:22,000 --> 02:37:23,000
就是 Great

5562
02:37:23,000 --> 02:37:24,000
但是明显不如

5563
02:37:24,000 --> 02:37:26,000
那个 Xcode 的那个叫什么

5564
02:37:26,000 --> 02:37:27,000
那个线条

5565
02:37:27,000 --> 02:37:27,000
Guideline 好用

5566
02:37:27,000 --> 02:37:28,000
漂亮

5567
02:37:28,000 --> 02:37:28,000
对

5568
02:37:28,000 --> 02:37:30,000
而且长得丑

5569
02:37:30,000 --> 02:37:31,000
但你其实也不能一概论

5570
02:37:31,000 --> 02:37:31,000
对吧

5571
02:37:31,000 --> 02:37:34,000
比如说 App Store 里面

5572
02:37:34,000 --> 02:37:35,000
同样有非常非常多

5573
02:37:35,000 --> 02:37:37,000
丑的令人发指的 App

5574
02:37:37,000 --> 02:37:38,000
而那个

5575
02:37:38,000 --> 02:37:39,000
Android 下面

5576
02:37:39,000 --> 02:37:41,000
也的确有比较精美的

5577
02:37:41,000 --> 02:37:42,000
肯定是有这个

5578
02:37:42,000 --> 02:37:43,000
什么例外

5579
02:37:43,000 --> 02:37:44,000
反例永远是存在的

5580
02:37:44,000 --> 02:37:44,000
但

5581
02:37:44,000 --> 02:37:46,000
我承认你说的

5582
02:37:46,000 --> 02:37:46,000
有道

5583
02:37:46,000 --> 02:37:47,000
也就是

5584
02:37:47,000 --> 02:37:48,000
开发者的

5585
02:37:48,000 --> 02:37:50,000
如果面对着一个丑陋的工具

5586
02:37:50,000 --> 02:37:51,000
做出来的东西

5587
02:37:51,000 --> 02:37:52,000
很有可能也是成功

5588
02:37:52,000 --> 02:37:53,000
那么近猪就要吃

5589
02:37:53,000 --> 02:37:55,000
近摩着黑

5590
02:37:55,000 --> 02:37:56,000
对

5591
02:37:56,000 --> 02:37:57,000
远离 X

5592
02:37:57,000 --> 02:37:57,000
对

5593
02:37:57,000 --> 02:37:58,000
障碍生命

5594
02:37:58,000 --> 02:38:00,000
别这样

5595
02:38:00,000 --> 02:38:01,000
别这样

5596
02:38:01,000 --> 02:38:01,000
不过

5597
02:38:01,000 --> 02:38:04,000
如果说你是一个 Java 开发者

5598
02:38:04,000 --> 02:38:06,000
然后你想要尝试

5599
02:38:06,000 --> 02:38:09,000
一款 IDE 的话

5600
02:38:09,000 --> 02:38:11,000
如果没有现有

5601
02:38:11,000 --> 02:38:12,000
那个

5602
02:38:12,000 --> 02:38:14,000
如果没有现有项目的

5603
02:38:14,000 --> 02:38:15,000
限制

5604
02:38:15,000 --> 02:38:16,000
那真的

5605
02:38:16,000 --> 02:38:17,000
Intellij

5606
02:38:17,000 --> 02:38:18,000
基本上是

5607
02:38:18,000 --> 02:38:20,000
非常适合的一个选择

5608
02:38:20,000 --> 02:38:21,000
我觉得

5609
02:38:21,000 --> 02:38:22,000
因为

5610
02:38:22,000 --> 02:38:23,000
或者说

5611
02:38:23,000 --> 02:38:24,000
在 Java 开发

5612
02:38:24,000 --> 02:38:25,000
就以我有限的

5613
02:38:25,000 --> 02:38:27,000
粗显的 Java 开发经验来看

5614
02:38:27,000 --> 02:38:28,000
Intellij

5615
02:38:28,000 --> 02:38:29,000
Netbeans

5616
02:38:29,000 --> 02:38:29,000
Eclipse

5617
02:38:29,000 --> 02:38:31,000
基本上是三大

5618
02:38:31,000 --> 02:38:33,000
最常被用到的 JV IDE

5619
02:38:33,000 --> 02:38:34,000
而在这里面

5620
02:38:34,000 --> 02:38:34,000
Intellij

5621
02:38:34,000 --> 02:38:35,000
算是一个

5622
02:38:35,000 --> 02:38:36,000
非常用心做的产品

5623
02:38:36,000 --> 02:38:37,000
OK

5624
02:38:37,000 --> 02:38:38,000
而且 Intellij

5625
02:38:38,000 --> 02:38:40,000
背后的这个公司

5626
02:38:40,000 --> 02:38:42,000
叫什么 Jetbrains

5627
02:38:42,000 --> 02:38:44,000
他们还做了很多其他的

5628
02:38:44,000 --> 02:38:45,000
很经验的产品

5629
02:38:45,000 --> 02:38:46,000
比如说

5630
02:38:46,000 --> 02:38:48,000
有 PHP 的 PHP Storm

5631
02:38:48,000 --> 02:38:52,000
还有 C++的叫做

5632
02:38:52,000 --> 02:38:53,000
Sea Lion

5633
02:38:53,000 --> 02:38:54,000
就是

5634
02:38:54,000 --> 02:38:57,000
不是海狮的 Sea Lion

5635
02:38:57,000 --> 02:38:58,000
而是 Sea

5636
02:38:58,000 --> 02:38:59,000
然后 Line

5637
02:38:59,000 --> 02:39:00,000
就是 Sea 狮子

5638
02:39:00,000 --> 02:39:00,000
OK

5639
02:39:00,000 --> 02:39:02,000
然后还有

5640
02:39:02,000 --> 02:39:03,000
包括 Jetbrains

5641
02:39:03,000 --> 02:39:04,000
还做了一款

5642
02:39:04,000 --> 02:39:06,000
Object C 的 IDE

5643
02:39:06,000 --> 02:39:07,000
我觉得这个也很

5644
02:39:07,000 --> 02:39:09,000
很让人震惊

5645
02:39:09,000 --> 02:39:09,000
就是

5646
02:39:09,000 --> 02:39:11,000
Object C 开发者

5647
02:39:11,000 --> 02:39:12,000
对

5648
02:39:12,000 --> 02:39:13,000
麦开发者本身

5649
02:39:13,000 --> 02:39:15,000
就已经是一个小群体了

5650
02:39:15,000 --> 02:39:15,000
对啊

5651
02:39:15,000 --> 02:39:17,000
而这个小群体里面

5652
02:39:17,000 --> 02:39:18,000
再分一倍

5653
02:39:18,000 --> 02:39:19,000
用 Xcode 的这种

5654
02:39:19,000 --> 02:39:21,000
舍我其谁的工具

5655
02:39:21,000 --> 02:39:22,000
的人

5656
02:39:22,000 --> 02:39:23,000
其实

5657
02:39:23,000 --> 02:39:25,000
其实也习惯了

5658
02:39:25,000 --> 02:39:26,000
没有选择

5659
02:39:26,000 --> 02:39:26,000
而你居然为

5660
02:39:26,000 --> 02:39:28,000
为这么样的群人

5661
02:39:28,000 --> 02:39:29,000
开发出了这么一款

5662
02:39:29,000 --> 02:39:29,000
EDI 来

5663
02:39:29,000 --> 02:39:31,000
而且我用了用

5664
02:39:31,000 --> 02:39:31,000
感觉还不错

5665
02:39:31,000 --> 02:39:33,000
也挺难得的

5666
02:39:33,000 --> 02:39:34,000
对

5667
02:39:34,000 --> 02:39:35,000
刚才你也说了嘛

5668
02:39:35,000 --> 02:39:36,000
Xcode 有那么多问题

5669
02:39:36,000 --> 02:39:38,000
所以他能做一个

5670
02:39:38,000 --> 02:39:39,000
Aternative

5671
02:39:39,000 --> 02:39:40,000
应该是挺好的

5672
02:39:40,000 --> 02:39:41,000
没错

5673
02:39:41,000 --> 02:39:42,000
然后 Jetbrains

5674
02:39:42,000 --> 02:39:43,000
还有 Python 的 IDE

5675
02:39:43,000 --> 02:39:44,000
就是 Python

5676
02:39:44,000 --> 02:39:45,000
如果我一定要用一个 IDE 的话

5677
02:39:45,000 --> 02:39:46,000
我应该

5678
02:39:46,000 --> 02:39:47,000
应该会首先想到

5679
02:39:47,000 --> 02:39:48,000
那个

5680
02:39:48,000 --> 02:39:51,000
Jetbrains 出的

5681
02:39:51,000 --> 02:39:52,000
这个叫做 PyCharm

5682
02:39:52,000 --> 02:39:53,000
的 IDE

5683
02:39:53,000 --> 02:39:54,000
也是蛮好的

5684
02:39:54,000 --> 02:39:55,000
对

5685
02:39:55,000 --> 02:39:58,000
PyCharm 也是他们出的

5686
02:39:58,000 --> 02:39:58,000
原来

5687
02:39:58,000 --> 02:39:59,000
PyCharm 是他们出的

5688
02:39:59,000 --> 02:40:00,000
我知道

5689
02:40:00,000 --> 02:40:00,000
这个好像知道

5690
02:40:00,000 --> 02:40:01,000
还有不少

5691
02:40:01,000 --> 02:40:03,000
那个 Python 的用户

5692
02:40:03,000 --> 02:40:04,000
在用这个

5693
02:40:04,000 --> 02:40:04,000
对

5694
02:40:04,000 --> 02:40:05,000
相当好用

5695
02:40:05,000 --> 02:40:05,000
其实

5696
02:40:05,000 --> 02:40:05,000
对

5697
02:40:05,000 --> 02:40:07,000
就 IntelliJ

5698
02:40:07,000 --> 02:40:08,000
支持多种配色

5699
02:40:08,000 --> 02:40:10,000
然后要比 Eclipse

5700
02:40:10,000 --> 02:40:10,000
快很多

5701
02:40:10,000 --> 02:40:11,000
这是很关键点的

5702
02:40:11,000 --> 02:40:12,000
比 Eclipse

5703
02:40:12,000 --> 02:40:13,000
快很多

5704
02:40:13,000 --> 02:40:14,000
然后他的

5705
02:40:14,000 --> 02:40:16,000
那个智能

5706
02:40:16,000 --> 02:40:16,000
补权

5707
02:40:16,000 --> 02:40:18,000
也是相当的聪明

5708
02:40:18,000 --> 02:40:19,000
最大的问题

5709
02:40:19,000 --> 02:40:20,000
可能就是 IntelliJ

5710
02:40:20,000 --> 02:40:21,000
本身

5711
02:40:21,000 --> 02:40:21,000
有两个版本

5712
02:40:21,000 --> 02:40:22,000
一个是社区版

5713
02:40:22,000 --> 02:40:23,000
免费的

5714
02:40:23,000 --> 02:40:24,000
但是缺乏

5715
02:40:24,000 --> 02:40:25,000
很多很多功能

5716
02:40:25,000 --> 02:40:25,000
比如说

5717
02:40:25,000 --> 02:40:27,000
尤其是你要做

5718
02:40:27,000 --> 02:40:28,000
JIE 开发的话

5719
02:40:28,000 --> 02:40:30,000
要用到很多

5720
02:40:30,000 --> 02:40:31,000
就 whatever

5721
02:40:31,000 --> 02:40:33,000
奇怪怪的功能

5722
02:40:33,000 --> 02:40:36,000
那个 SE 版本是没有

5723
02:40:36,000 --> 02:40:37,000
Community Edition 是没有

5724
02:40:37,000 --> 02:40:39,000
你必须花钱去买

5725
02:40:39,000 --> 02:40:41,000
那个 IntelliJ 的

5726
02:40:41,000 --> 02:40:42,000
它是 Dual License

5727
02:40:42,000 --> 02:40:43,000
对

5728
02:40:43,000 --> 02:40:44,000
Dual License

5729
02:40:44,000 --> 02:40:45,000
当然你可以

5730
02:40:45,000 --> 02:40:46,000
以学生身份去买

5731
02:40:46,000 --> 02:40:47,000
应该可以

5732
02:40:47,000 --> 02:40:49,000
你要不你帮我买一个

5733
02:40:49,000 --> 02:40:49,000
可以

5734
02:40:49,000 --> 02:40:50,000
回头我给你钱

5735
02:40:50,000 --> 02:40:51,000
帮我买一个

5736
02:40:51,000 --> 02:40:52,000
我还挺想弄一个

5737
02:40:52,000 --> 02:40:53,000
当然我将来

5738
02:40:53,000 --> 02:40:54,000
做 Java 的可能性

5739
02:40:54,000 --> 02:40:55,000
也未互其微不过

5740
02:40:55,000 --> 02:40:57,000
对

5741
02:40:57,000 --> 02:40:59,000
Jetbrain 曾经在 2014 年

5742
02:40:59,000 --> 02:41:01,000
2012 年的时候

5743
02:41:01,000 --> 02:41:02,000
搞过一个大促销

5744
02:41:02,000 --> 02:41:02,000
就是

5745
02:41:02,000 --> 02:41:04,000
世界毁灭的那一天

5746
02:41:04,000 --> 02:41:06,000
就是传言

5747
02:41:06,000 --> 02:41:07,000
马亚人说

5748
02:41:07,000 --> 02:41:08,000
世界要毁灭的那一天

5749
02:41:08,000 --> 02:41:09,000
他们搞了一个大促销

5750
02:41:09,000 --> 02:41:11,000
所有的那个

5751
02:41:11,000 --> 02:41:13,000
IDE 的 license

5752
02:41:13,000 --> 02:41:15,000
好像统一价

5753
02:41:15,000 --> 02:41:15,000
50 欧还是多少

5754
02:41:15,000 --> 02:41:16,000
我就可以买下来

5755
02:41:16,000 --> 02:41:17,000
我非常后悔

5756
02:41:17,000 --> 02:41:18,000
错过那次大促销

5757
02:41:18,000 --> 02:41:19,000
如果世界都毁灭了

5758
02:41:19,000 --> 02:41:21,000
你买个 license 干什么

5759
02:41:21,000 --> 02:41:23,000
说得也是

5760
02:41:23,000 --> 02:41:25,000
当时就赌了一把

5761
02:41:25,000 --> 02:41:26,000
赌输

5762
02:41:26,000 --> 02:41:27,000
世界没有毁灭

5763
02:41:27,000 --> 02:41:27,000
我会伤心

5764
02:41:27,000 --> 02:41:29,000
别

5765
02:41:29,000 --> 02:41:29,000
别

5766
02:41:29,000 --> 02:41:31,000
没有

5767
02:41:31,000 --> 02:41:32,000
OK

5768
02:41:32,000 --> 02:41:33,000
对

5769
02:41:33,000 --> 02:41:33,000
还有吗

5770
02:41:33,000 --> 02:41:34,000
差不多

5771
02:41:34,000 --> 02:41:34,000
这次

5772
02:41:34,000 --> 02:41:35,000
没有了

5773
02:41:35,000 --> 02:41:35,000
对

5774
02:41:35,000 --> 02:41:37,000
我们本来还想说一下

5775
02:41:37,000 --> 02:41:38,000
就是简单的说一下

5776
02:41:38,000 --> 02:41:40,000
应该选择编辑器

5777
02:41:40,000 --> 02:41:41,000
还是选择 IDE

5778
02:41:41,000 --> 02:41:42,000
如果你是一个编程出学者的话

5779
02:41:42,000 --> 02:41:43,000
这个

5780
02:41:43,000 --> 02:41:46,000
其实也不方便展开了

5781
02:41:46,000 --> 02:41:46,000
我觉得

5782
02:41:46,000 --> 02:41:47,000
简单一句话就是

5783
02:41:47,000 --> 02:41:49,000
选你觉得舒服一些

5784
02:41:49,000 --> 02:41:50,000
一个

5785
02:41:50,000 --> 02:41:50,000
一个

5786
02:41:50,000 --> 02:41:50,000
一个

5787
02:41:50,000 --> 02:41:51,000
一个方式吧

5788
02:41:51,000 --> 02:41:53,000
因为有时候我觉得

5789
02:41:53,000 --> 02:41:56,000
有些人喜欢 IDE 的原因

5790
02:41:56,000 --> 02:41:57,000
其实就是 IDE

5791
02:41:57,000 --> 02:41:58,000
有一种仪式感

5792
02:41:58,000 --> 02:41:59,000
就是你打开 IDE

5793
02:41:59,000 --> 02:42:00,000
你会觉得自己

5794
02:42:00,000 --> 02:42:01,000
切换到你工作的状态

5795
02:42:01,000 --> 02:42:03,000
而你仅仅使用一个

5796
02:42:03,000 --> 02:42:04,000
单独的编辑器的话

5797
02:42:04,000 --> 02:42:05,000
你好像

5798
02:42:05,000 --> 02:42:06,000
我都要在干嘛

5799
02:42:06,000 --> 02:42:06,000
玩票

5800
02:42:06,000 --> 02:42:07,000
写这么一个

5801
02:42:07,000 --> 02:42:08,000
对

5802
02:42:08,000 --> 02:42:09,000
好像一个文件

5803
02:42:09,000 --> 02:42:11,000
在编辑器里面出现

5804
02:42:11,000 --> 02:42:13,000
和在 IDE 里面出现

5805
02:42:13,000 --> 02:42:14,000
或者甚至说

5806
02:42:14,000 --> 02:42:15,000
在一个编辑器的

5807
02:42:15,000 --> 02:42:16,000
编辑窗口里面出现

5808
02:42:16,000 --> 02:42:18,000
和在一个 IDE 的所谓

5809
02:42:18,000 --> 02:42:18,000
什么

5810
02:42:18,000 --> 02:42:20,000
工程管理器里面出现

5811
02:42:20,000 --> 02:42:21,000
装重感不一样的

5812
02:42:21,000 --> 02:42:21,000
对

5813
02:42:21,000 --> 02:42:22,000
装重感是不一样的

5814
02:42:22,000 --> 02:42:23,000
这个对

5815
02:42:23,000 --> 02:42:25,000
这个细小的

5816
02:42:25,000 --> 02:42:26,000
心理上的差别

5817
02:42:26,000 --> 02:42:27,000
其实还是挺重要

5818
02:42:27,000 --> 02:42:28,000
对

5819
02:42:28,000 --> 02:42:30,000
你是

5820
02:42:30,000 --> 02:42:30,000
你

5821
02:42:30,000 --> 02:42:32,000
我觉得你应该是会选择

5822
02:42:32,000 --> 02:42:32,000
编辑器吧

5823
02:42:32,000 --> 02:42:34,000
我没有需要用到 IDE 的场合

5824
02:42:34,000 --> 02:42:35,000
起码

5825
02:42:35,000 --> 02:42:35,000
对

5826
02:42:35,000 --> 02:42:35,000
这也是

5827
02:42:35,000 --> 02:42:37,000
所以没有需求

5828
02:42:37,000 --> 02:42:37,000
也许有一天你

5829
02:42:37,000 --> 02:42:39,000
你终于走入

5830
02:42:39,000 --> 02:42:40,000
这个工业界

5831
02:42:40,000 --> 02:42:43,000
你会觉得 IDE 是一个

5832
02:42:43,000 --> 02:42:45,000
你

5833
02:42:45,000 --> 02:42:47,000
love it and hate it

5834
02:42:47,000 --> 02:42:48,000
对

5835
02:42:48,000 --> 02:42:48,000
就是

5836
02:42:48,000 --> 02:42:50,000
又爱又恨的这种感觉

5837
02:42:50,000 --> 02:42:51,000
好吧

5838
02:42:51,000 --> 02:42:52,000
我在想象

5839
02:42:52,000 --> 02:42:53,000
会有什么

5840
02:42:53,000 --> 02:42:54,000
可能最

5841
02:42:54,000 --> 02:42:57,000
目前最靠谱的场合是

5842
02:42:57,000 --> 02:42:58,000
因为我一直想学

5843
02:42:58,000 --> 02:43:00,000
就是 LS 开发码

5844
02:43:00,000 --> 02:43:01,000
然后可能会接触

5845
02:43:01,000 --> 02:43:03,000
其实 Xcode 之前也已经用过了

5846
02:43:03,000 --> 02:43:04,000
就是写作业的时候

5847
02:43:04,000 --> 02:43:06,000
还有 Eclipse 也用

5848
02:43:06,000 --> 02:43:08,000
就是给别人改

5849
02:43:08,000 --> 02:43:09,000
耗别人作业的时候

5850
02:43:09,000 --> 02:43:10,000
用 Visual Studio

5851
02:43:10,000 --> 02:43:11,000
好像还没有碰过

5852
02:43:11,000 --> 02:43:12,000
不你不打算碰了

5853
02:43:12,000 --> 02:43:12,000
但是就

5854
02:43:12,000 --> 02:43:14,000
这两个来讲

5855
02:43:14,000 --> 02:43:15,000
可能 Xcode 会是

5856
02:43:15,000 --> 02:43:16,000
如果要用 IDE 的话

5857
02:43:16,000 --> 02:43:17,000
可能会是 Xcode 吧

5858
02:43:17,000 --> 02:43:20,000
可以去试一下

5859
02:43:20,000 --> 02:43:21,000
我希望

5860
02:43:21,000 --> 02:43:23,000
太烦了

5861
02:43:23,000 --> 02:43:24,000
等我用到的时候

5862
02:43:24,000 --> 02:43:26,000
它又不要再那么不稳定了

5863
02:43:26,000 --> 02:43:27,000
Hopefully

5864
02:43:27,000 --> 02:43:30,000
你就最好坚持用

5865
02:43:30,000 --> 02:43:32,000
比较不稳定的版本

5866
02:43:32,000 --> 02:43:33,000
而不要用更不稳定的版本

5867
02:43:33,000 --> 02:43:36,000
我一般还是选择不折腾的

5868
02:43:36,000 --> 02:43:39,000
一定用官方发布的稳定版

5869
02:43:39,000 --> 02:43:41,000
什么 developer preview

5870
02:43:41,000 --> 02:43:42,000
离我远一点

5871
02:43:42,000 --> 02:43:45,000
Xcode 用户最悲惨的时刻

5872
02:43:45,000 --> 02:43:46,000
莫过于苹果说

5873
02:43:46,000 --> 02:43:47,000
Xcode 新版出了

5874
02:43:47,000 --> 02:43:48,000
请你升级

5875
02:43:48,000 --> 02:43:48,000
升级的时候

5876
02:43:48,000 --> 02:43:49,000
我发现它一直 crush

5877
02:43:49,000 --> 02:43:51,000
对

5878
02:43:51,000 --> 02:43:55,000
这是一个非常令人讨厌的事情

5879
02:43:55,000 --> 02:43:57,000
好吧

5880
02:43:57,000 --> 02:43:58,000
那今天现在

5881
02:43:58,000 --> 02:43:58,000
好吧

5882
02:43:58,000 --> 02:44:00,000
这一次时间也蛮长的

5883
02:44:00,000 --> 02:44:02,000
不知道最后我剪出来多久

5884
02:44:02,000 --> 02:44:06,000
非常凑巧的是

5885
02:44:06,000 --> 02:44:09,000
本期节目录制完成之后的周三

5886
02:44:09,000 --> 02:44:11,000
也就是 11 月 12 日

5887
02:44:11,000 --> 02:44:15,000
微软将其.net 平台的服务器端开源

5888
02:44:15,000 --> 02:44:23,000
并且宣传会扩展支持 Linux 和 MacOS 平台

5889
02:44:23,000 --> 02:44:24,000
与此同时

5890
02:44:24,000 --> 02:44:26,000
我们提到的这个 Visual Studio

5891
02:44:26,000 --> 02:44:29,000
也推出了一个叫做 Community Edition

5892
02:44:29,000 --> 02:44:34,000
的 Community Edition 2013 的版本

5893
02:44:34,000 --> 02:44:36,000
它是免费的

5894
02:44:36,000 --> 02:44:36,000
对

5895
02:44:36,000 --> 02:44:41,000
所以我跟 Rail 大概也都会去下载

5896
02:44:41,000 --> 02:44:43,000
然后试着用一下

5897
02:44:43,000 --> 02:44:44,000
看看观感如何

