1
00:00:00,000 --> 00:00:05,000
欢迎收听 IPN Podcast 的网络旗下的 IT 技术主题娱乐节目《内核恐慌》

2
00:00:05,000 --> 00:00:06,000
我们又回来了

3
00:00:06,000 --> 00:00:08,000
我们号称 Hardcore 但是也没有干货

4
00:00:08,000 --> 00:00:10,000
想听的人听 不想听的人就别听

5
00:00:10,000 --> 00:00:13,000
本节目的网址是 ipn.li.com

6
00:00:13,000 --> 00:00:16,000
我们推荐大家使用 Podcast 客户端订阅节目

7
00:00:16,000 --> 00:00:20,000
详情请访问 ipn.li.com

8
00:00:20,000 --> 00:00:21,000
欢迎你为本节目捐款

9
00:00:21,000 --> 00:00:24,000
捐款地址是 ipn.li.com

10
00:00:24,000 --> 00:00:28,000
捐款金额随意 只要是 8 的正人数碑也可以

11
00:00:28,000 --> 00:00:30,000
捐款不会为你带来什么

12
00:00:30,000 --> 00:00:31,000
不捐款也不会让你失去什么

13
00:00:31,000 --> 00:00:34,000
我们的口号是 trust no one

14
00:00:34,000 --> 00:00:36,000
even your compiler

15
00:00:36,000 --> 00:00:40,000
好久没有念这句话了

16
00:00:40,000 --> 00:00:42,000
还可以挺流畅的

17
00:00:42,000 --> 00:00:45,000
所以你一个月玩的可好

18
00:00:45,000 --> 00:00:46,000
还不错

19
00:00:46,000 --> 00:00:50,000
带着带着爸妈去了以前我

20
00:00:50,000 --> 00:00:55,000
学习过生活过工作过干到过的地方

21
00:00:55,000 --> 00:00:59,000
然后去了一些我觉得就怎么说呢

22
00:00:59,000 --> 00:01:02,000
德语区还比较满还比较漂亮的一些地方

23
00:01:02,000 --> 00:01:04,000
没有去更远的地方

24
00:01:04,000 --> 00:01:05,000
ok

25
00:01:05,000 --> 00:01:07,000
所以这也算是什么

26
00:01:07,000 --> 00:01:09,000
重走长征路

27
00:01:09,000 --> 00:01:13,000
对就是因为过去的这

28
00:01:13,000 --> 00:01:15,000
我在德国有 9 年了吧

29
00:01:15,000 --> 00:01:19,000
然后过去 9 年里面一本都是他们只能从电话

30
00:01:19,000 --> 00:01:22,000
或者是照片里面知道我曾经在什么地方待过

31
00:01:22,000 --> 00:01:24,000
然后这次可以身临其境的看一看

32
00:01:24,000 --> 00:01:25,000
我觉得还是挺有意义的

33
00:01:25,000 --> 00:01:27,000
所以他们过去从那没去过是吧

34
00:01:27,000 --> 00:01:28,000
对这是第一次来

35
00:01:28,000 --> 00:01:31,000
甚至之前二老连的护照都没有

36
00:01:31,000 --> 00:01:32,000
所以这是第一次出过

37
00:01:32,000 --> 00:01:35,000
哇你也是不孝子孙了

38
00:01:35,000 --> 00:01:38,000
所以另尊另谈去过加拿大吧

39
00:01:38,000 --> 00:01:40,000
其实也并没有

40
00:01:40,000 --> 00:01:42,000
那五十部小男后

41
00:01:42,000 --> 00:01:44,000
他们也没有护照

42
00:01:44,000 --> 00:01:46,000
不过他们有比较忙吗

43
00:01:46,000 --> 00:01:49,000
所以也不太可能走得开现在

44
00:01:49,000 --> 00:01:52,000
我父母也是其实刚刚才退休

45
00:01:52,000 --> 00:01:55,000
所以也是刚刚写下来的

46
00:01:55,000 --> 00:01:56,000
嗯

47
00:01:56,000 --> 00:01:57,000
这也挺好的

48
00:01:57,000 --> 00:01:59,000
上次因为你家在天津

49
00:01:59,000 --> 00:02:01,000
所以还是要关心一下

50
00:02:01,000 --> 00:02:03,000
爆炸对你家影响怎么样

51
00:02:03,000 --> 00:02:08,000
我们家距离爆炸现场的直线距离是 30 多公里

52
00:02:08,000 --> 00:02:12,000
所以算是幸免于淡吧

53
00:02:12,000 --> 00:02:15,000
但如果和其他各位比起来的话

54
00:02:15,000 --> 00:02:17,000
那还是比较近的

55
00:02:17,000 --> 00:02:19,000
然后之前也是比较担心说

56
00:02:19,000 --> 00:02:23,000
如果有泄漏的毒害物质在外面

57
00:02:23,000 --> 00:02:26,000
要不要考虑先去

58
00:02:26,000 --> 00:02:27,000
因为我们家是浙江人

59
00:02:27,000 --> 00:02:30,000
其实就是要先回老家避一避风头

60
00:02:30,000 --> 00:02:33,000
所以但目前看来还好

61
00:02:33,000 --> 00:02:34,000
然后我爸妈又特别

62
00:02:34,000 --> 00:02:36,000
我也不知道

63
00:02:36,000 --> 00:02:37,000
他们两个都是化工嘛

64
00:02:37,000 --> 00:02:41,000
所以不把这个当事总觉得无所谓

65
00:02:41,000 --> 00:02:45,000
那暂时也没有什么特别的影响

66
00:02:45,000 --> 00:02:49,000
所以这个时候你需要那个

67
00:02:49,000 --> 00:02:51,000
特别需要那个散公司的保护

68
00:02:51,000 --> 00:02:53,000
Umbrella

69
00:02:53,000 --> 00:02:54,000
你说

70
00:02:54,000 --> 00:02:55,000
对就是那个

71
00:02:55,000 --> 00:02:56,000
What?

72
00:02:56,000 --> 00:02:58,000
换雄阵

73
00:02:58,000 --> 00:03:00,000
Preserving the health of the people

74
00:03:00,000 --> 00:03:02,000
OK

75
00:03:02,000 --> 00:03:04,000
The umbrella is mortal

76
00:03:04,000 --> 00:03:06,000
Apatro science

77
00:03:06,000 --> 00:03:08,000
Apatro science

78
00:03:08,000 --> 00:03:10,000
那个也可以

79
00:03:10,000 --> 00:03:12,000
这个是一个什么

80
00:03:12,000 --> 00:03:16,000
前面那个散公司是那个生化危机的梗

81
00:03:16,000 --> 00:03:17,000
对

82
00:03:17,000 --> 00:03:19,000
那个还挺挺奇怪的

83
00:03:19,000 --> 00:03:20,000
那个

84
00:03:20,000 --> 00:03:21,000
因为我现在在深圳吧

85
00:03:21,000 --> 00:03:22,000
经常在路上

86
00:03:22,000 --> 00:03:24,000
我今天看到两次了

87
00:03:24,000 --> 00:03:28,000
别人在那个车上贴的散公司的那个标识那些

88
00:03:28,000 --> 00:03:31,000
这是某种 quotes 嘛

89
00:03:31,000 --> 00:03:32,000
就是

90
00:03:32,000 --> 00:03:33,000
邪教嘛

91
00:03:33,000 --> 00:03:36,000
就我还挺吃惊的

92
00:03:36,000 --> 00:03:37,000
说咦

93
00:03:37,000 --> 00:03:38,000
这个

94
00:03:38,000 --> 00:03:39,000
还有真爱

95
00:03:39,000 --> 00:03:40,000
遍地在

96
00:03:40,000 --> 00:03:41,000
还有人在搞这个梗是吧

97
00:03:41,000 --> 00:03:43,000
没错

98
00:03:43,000 --> 00:03:44,000
没错

99
00:03:44,000 --> 00:03:45,000
回去我去贴一个

100
00:03:45,000 --> 00:03:47,000
回去我去贴一个 Apatro science

101
00:03:47,000 --> 00:03:48,000
在车厢后

102
00:03:48,000 --> 00:03:51,000
其实是个蛮好的点子

103
00:03:51,000 --> 00:03:53,000
可以买得到

104
00:03:53,000 --> 00:03:55,000
你可以直接买的贴在车上就好了

105
00:03:55,000 --> 00:03:57,000
对而且 Valve 好像还有 T-shirt 之类的买

106
00:03:57,000 --> 00:04:00,000
全套主题都有的

107
00:04:00,000 --> 00:04:01,000
对

108
00:04:01,000 --> 00:04:02,000
对

109
00:04:02,000 --> 00:04:06,000
是 jinx.com 在卖 Portle 相关的主题

110
00:04:06,000 --> 00:04:08,000
对就是你之前买你那个

111
00:04:08,000 --> 00:04:09,000
那叫什么

112
00:04:09,000 --> 00:04:10,000
World of Arcturved

113
00:04:10,000 --> 00:04:11,000
对

114
00:04:11,000 --> 00:04:13,000
那个东西有学名吗

115
00:04:13,000 --> 00:04:16,000
就是贴笔记本电脑

116
00:04:16,000 --> 00:04:18,000
表面那个纸

117
00:04:18,000 --> 00:04:20,000
就是 sticker

118
00:04:20,000 --> 00:04:21,000
就叫 sticker

119
00:04:21,000 --> 00:04:22,000
没有什么其他的

120
00:04:22,000 --> 00:04:23,000
没有什么特别的

121
00:04:23,000 --> 00:04:25,000
因为能贴笔记本电脑的表面

122
00:04:25,000 --> 00:04:27,000
还可以贴别的

123
00:04:27,000 --> 00:04:29,000
就也可以贴别的东西的表面

124
00:04:29,000 --> 00:04:30,000
啊

125
00:04:30,000 --> 00:04:33,000
因为那个之前苹果出过一个那个系列广告片

126
00:04:33,000 --> 00:04:34,000
一个广告片嘛

127
00:04:34,000 --> 00:04:36,000
就是他的那个 MacBook Air 上面

128
00:04:36,000 --> 00:04:38,000
就是贴了一大堆 sticker

129
00:04:38,000 --> 00:04:39,000
一大堆 sticker

130
00:04:39,000 --> 00:04:40,000
然后他每一个做了一个

131
00:04:40,000 --> 00:04:41,000
这个叫什么

132
00:04:41,000 --> 00:04:42,000
就叫 slow motion

133
00:04:42,000 --> 00:04:43,000
也不叫 slow motion

134
00:04:43,000 --> 00:04:44,000
这个叫什么来的

135
00:04:44,000 --> 00:04:45,000
一个专门的数理这种拍法

136
00:04:45,000 --> 00:04:46,000
粘土动画嘛

137
00:04:46,000 --> 00:04:47,000
对

138
00:04:47,000 --> 00:04:49,000
粘土动画就是他每一张拍了

139
00:04:49,000 --> 00:04:50,000
然后做成一针一针

140
00:04:50,000 --> 00:04:51,000
然后串起来拨的

141
00:04:51,000 --> 00:04:53,000
对

142
00:04:53,000 --> 00:04:54,000
还挺有意思

143
00:04:54,000 --> 00:04:55,000
我看过

144
00:04:55,000 --> 00:04:56,000
对

145
00:04:56,000 --> 00:04:57,000
但是

146
00:04:57,000 --> 00:04:58,000
那个

147
00:04:58,000 --> 00:05:01,000
苹果官网不卖 sticker 真的太贵了

148
00:05:01,000 --> 00:05:03,000
我今天看了那个专务我好想买

149
00:05:03,000 --> 00:05:04,000
哈哈

150
00:05:04,000 --> 00:05:07,000
不过我觉得这个是迟早的事吧

151
00:05:07,000 --> 00:05:08,000
他们都已经卖

152
00:05:08,000 --> 00:05:09,000
就做手机壳了

153
00:05:09,000 --> 00:05:10,000
下一步不就是 sticker 了

154
00:05:10,000 --> 00:05:11,000
嗯

155
00:05:11,000 --> 00:05:12,000
这很难说

156
00:05:12,000 --> 00:05:13,000
我觉得

157
00:05:13,000 --> 00:05:19,000
其实一般公司是不太愿意让的 sticker 去修改自己 logo 了

158
00:05:19,000 --> 00:05:28,000
就好像那个提供改装车选项的车厂不会让你把它的 logo 弄成别的颜色一样

159
00:05:28,000 --> 00:05:31,000
他这个 sticker 那个还不算修改吧

160
00:05:31,000 --> 00:05:34,000
他就是都在那个边缘做一些发挥了

161
00:05:34,000 --> 00:05:35,000
发散的

162
00:05:35,000 --> 00:05:41,000
比如说我特别印象是一个那个钢铁侠的手上不是一个那个亮灯的那个喷东西的那个东西吧

163
00:05:41,000 --> 00:05:42,000
胸强

164
00:05:42,000 --> 00:05:46,000
对他就直接把它装到那个用那个苹果那个那个图标

165
00:05:46,000 --> 00:05:49,000
他在那个 MacBook Pro 上是可以发光的嘛

166
00:05:49,000 --> 00:05:50,000
对

167
00:05:50,000 --> 00:05:51,000
那挺有意思

168
00:05:51,000 --> 00:05:55,000
不过现在那个新出的那个 MacBook 12 寸的就没写了

169
00:05:56,000 --> 00:05:57,000
为什么太小了

170
00:05:57,000 --> 00:05:58,000
哦不发光

171
00:05:58,000 --> 00:06:00,000
哎真的这还蛮遗憾的

172
00:06:00,000 --> 00:06:01,000
对啊

173
00:06:01,000 --> 00:06:02,000
好吧

174
00:06:02,000 --> 00:06:07,000
那个我们做一下上一期也就是差不多一个多月以前的 follow up 吧

175
00:06:07,000 --> 00:06:08,000
对

176
00:06:08,000 --> 00:06:09,000
嗯

177
00:06:09,000 --> 00:06:10,000
嗯

178
00:06:10,000 --> 00:06:11,000
当时说什么来着

179
00:06:11,000 --> 00:06:12,000
过去好久了

180
00:06:12,000 --> 00:06:14,000
我又不记得上一期说过什么

181
00:06:14,000 --> 00:06:15,000
怎么觉得

182
00:06:15,000 --> 00:06:16,000
对我也忘了说什么

183
00:06:16,000 --> 00:06:20,000
我把我把 note 写在那里但是我已经想不起来是怎么一回事的

184
00:06:20,000 --> 00:06:25,000
但是就提到这么一个这个概念我想起当时说是一个什么进士开发吗

185
00:06:25,000 --> 00:06:28,000
就是应该是叫做应该英文叫做 clean room

186
00:06:28,000 --> 00:06:29,000
对

187
00:06:29,000 --> 00:06:30,000
的方法

188
00:06:30,000 --> 00:06:31,000
干净的房子

189
00:06:31,000 --> 00:06:34,000
当时我记得莫名其妙说说成了这个 white room

190
00:06:34,000 --> 00:06:35,000
clean box

191
00:06:35,000 --> 00:06:36,000
white room

192
00:06:36,000 --> 00:06:39,000
对后来想想应该是和那个 black box 混在一起

193
00:06:39,000 --> 00:06:42,000
对比较久

194
00:06:43,000 --> 00:06:44,000
anyway

195
00:06:44,000 --> 00:06:46,000
小口误无所谓

196
00:06:46,000 --> 00:06:47,000
嗯哼

197
00:06:47,000 --> 00:06:48,000
嗯哼

198
00:06:48,000 --> 00:06:49,000
嗯哼

199
00:06:49,000 --> 00:06:51,000
然后有几位热心听众给我们写来的来信

200
00:06:51,000 --> 00:06:52,000
然后

201
00:06:52,000 --> 00:06:53,000
嗯

202
00:06:55,000 --> 00:06:58,000
则其中几段念一下吧

203
00:06:58,000 --> 00:07:03,000
就呃首先要为一位不愿透露朋友性命的朋友道个歉

204
00:07:03,000 --> 00:07:06,000
就是有一次我们呃念了他的信

205
00:07:06,000 --> 00:07:09,000
虽然他写信强烈要求不要念

206
00:07:09,000 --> 00:07:10,000
但我们还是念了

207
00:07:10,000 --> 00:07:14,000
然后某种意义上讲我们侵犯了叫什么著作权法是吧

208
00:07:15,000 --> 00:07:18,000
嗯在这边给你道歉非常乐趣

209
00:07:18,000 --> 00:07:22,000
不过我觉得他那封信写的还是蛮好的不念真的挺可惜的

210
00:07:22,000 --> 00:07:24,000
这就是一个借口

211
00:07:24,000 --> 00:07:28,000
所以你去那个知乎上那个问题下面自己负金请罪吧

212
00:07:28,000 --> 00:07:30,000
嗯我已经答了

213
00:07:30,000 --> 00:07:31,000
我觉得就是他问的

214
00:07:31,000 --> 00:07:32,000
嗯

215
00:07:32,000 --> 00:07:33,000
嗯

216
00:07:33,000 --> 00:07:34,000
OK 好吧

217
00:07:34,000 --> 00:07:35,000
嗯

218
00:07:35,000 --> 00:07:36,000
OK

219
00:07:36,000 --> 00:07:41,000
然后呃上一期节目之后有一位读者写信来说

220
00:07:41,000 --> 00:07:43,000
这期节目还是老样子软就软吧

221
00:07:43,000 --> 00:07:46,000
刚刚说到一点让我心动的内容就戛然而止了

222
00:07:46,000 --> 00:07:50,000
看来中老年程序员是得认真关注一下自己的前线问题了

223
00:07:50,000 --> 00:07:52,000
这内容便是吴涛说的

224
00:07:52,000 --> 00:07:56,000
中老年程序员工作了五六年是所处的境地

225
00:07:56,000 --> 00:07:58,000
我个人就处在这样一个境遇里

226
00:07:58,000 --> 00:08:00,000
积累不好很难有突破

227
00:08:00,000 --> 00:08:03,000
又不想转管理不上不下

228
00:08:03,000 --> 00:08:08,000
瑞尔又说要可能要告别专业程序员了更是让我内心难以平静

229
00:08:08,000 --> 00:08:09,000
这样的

230
00:08:09,000 --> 00:08:15,000
善苏都觉得自己距离大牛太遥远是自取其辱

231
00:08:15,000 --> 00:08:18,000
我懂鼠辈还怎么苟活下去

232
00:08:18,000 --> 00:08:21,000
祝两位一切顺利物套有一个好假期

233
00:08:21,000 --> 00:08:22,000
善苏是什么

234
00:08:22,000 --> 00:08:24,000
善苏是

235
00:08:24,000 --> 00:08:30,000
我想想如果没理解错的话指的是非常有成就的人物

236
00:08:30,000 --> 00:08:33,000
就是说我们吗

237
00:08:33,000 --> 00:08:36,000
说你确确的说

238
00:08:36,000 --> 00:08:38,000
天呐

239
00:08:38,000 --> 00:08:39,000
这是什么语言先

240
00:08:39,000 --> 00:08:40,000
好想知道

241
00:08:40,000 --> 00:08:42,000
这难道是

242
00:08:42,000 --> 00:08:44,000
这难道是什么这个

243
00:08:44,000 --> 00:08:45,000
日语

244
00:08:45,000 --> 00:08:46,000
古文里的梗吗

245
00:08:46,000 --> 00:08:50,000
又凸显我们暴露自己没有文化

246
00:08:50,000 --> 00:08:51,000
怎么办

247
00:08:51,000 --> 00:08:52,000
不知道

248
00:08:52,000 --> 00:08:54,000
没有了

249
00:08:54,000 --> 00:08:55,000
不重要

250
00:08:55,000 --> 00:08:57,000
反正这个我觉得就

251
00:08:57,000 --> 00:09:01,000
对自己的资质有一个正确的认识吧

252
00:09:01,000 --> 00:09:02,000
我觉得

253
00:09:02,000 --> 00:09:05,000
但是我觉得这个世界也不一定非要就大牛才

254
00:09:05,000 --> 00:09:07,000
才需要那个吧

255
00:09:07,000 --> 00:09:09,000
不然正常人的生活该怎么过

256
00:09:09,000 --> 00:09:12,000
这就好像那本叫什么 rework

257
00:09:12,000 --> 00:09:15,000
讲那个 startup 的书

258
00:09:15,000 --> 00:09:17,000
或者一直以往就在讲什么

259
00:09:17,000 --> 00:09:19,000
讲工作方法的书里面提到说

260
00:09:19,000 --> 00:09:20,000
你不一定要成为一个

261
00:09:20,000 --> 00:09:22,000
呃

262
00:09:22,000 --> 00:09:24,000
了不起的企业才算成功

263
00:09:24,000 --> 00:09:26,000
如果你能成一个小的

264
00:09:26,000 --> 00:09:28,000
能够自己维持下去

265
00:09:28,000 --> 00:09:30,000
并且活得很好的小公司

266
00:09:30,000 --> 00:09:31,000
同样是一种成功

267
00:09:31,000 --> 00:09:32,000
嗯

268
00:09:32,000 --> 00:09:33,000
对吧

269
00:09:33,000 --> 00:09:34,000
对

270
00:09:34,000 --> 00:09:35,000
刚刚刚前面有一个

271
00:09:35,000 --> 00:09:39,000
就前几天那个 backblaze 的博客

272
00:09:39,000 --> 00:09:40,000
发了篇文章

273
00:09:40,000 --> 00:09:44,000
叫做好像 don't build a billion dollar company

274
00:09:44,000 --> 00:09:45,000
还是什么来的

275
00:09:45,000 --> 00:09:48,000
backblaze 就是现在我在用的一个备份软件

276
00:09:48,000 --> 00:09:50,000
自相机能在跟他们打广告

277
00:09:50,000 --> 00:09:52,000
就是他的那个客户端写的非常不错

278
00:09:52,000 --> 00:09:54,000
然后也很便宜

279
00:09:54,000 --> 00:09:56,000
他就说其实

280
00:09:56,000 --> 00:09:58,000
因为现在很多这个风头模式就是说

281
00:09:58,000 --> 00:10:01,000
你一定要成为一个就是 the next big thing

282
00:10:01,000 --> 00:10:02,000
对吧

283
00:10:02,000 --> 00:10:03,000
你一定要成为 unicorn

284
00:10:03,000 --> 00:10:05,000
对对不然就没有意思了

285
00:10:05,000 --> 00:10:08,000
当然从风险投资的角度来说确实是这样子的

286
00:10:08,000 --> 00:10:14,000
但是你可以考虑开一个叫做 lifestyle business

287
00:10:14,000 --> 00:10:16,000
就是不一定要拿风头的钱

288
00:10:16,000 --> 00:10:18,000
然后只要能够营收平衡

289
00:10:18,000 --> 00:10:20,000
做一个坚坚坚坚的这个生意

290
00:10:20,000 --> 00:10:21,000
其实也是可以的

291
00:10:21,000 --> 00:10:24,000
作为一个职业或者人生的选择吧

292
00:10:24,000 --> 00:10:30,000
就不是一定要奔着那个什么市值十亿一百亿一千亿美元的公司去这种情况

293
00:10:30,000 --> 00:10:44,000
是话是这样说吧就是我们当然永远可以说在这个世俗的衡量成功的观念里面

294
00:10:44,000 --> 00:10:46,000
你只有做到最大最强才是最成功的

295
00:10:46,000 --> 00:10:56,000
但同与此同时其实你做一个能够自谋其力的这个自食其力的自食其力的自谋职业好像也不错

296
00:10:56,000 --> 00:11:06,000
但是我觉得在程序员这个群体里面可能就因为普遍来说都不会太笨

297
00:11:06,000 --> 00:11:10,000
因为智商是一个做写程序的门槛对吧

298
00:11:10,000 --> 00:11:15,000
那可能在聪明人里面会更有这样一种追求

299
00:11:15,000 --> 00:11:21,000
去试着要追寻让自己的事业变得最了不起

300
00:11:21,000 --> 00:11:31,000
或者是非大公司不进或者是非大的这种点子不去想的一种倾向

301
00:11:31,000 --> 00:11:34,000
这种倾向是确实存在的我觉得

302
00:11:34,000 --> 00:11:38,000
据说这是雄心荷尔蒙分泌过剩的结果

303
00:11:38,000 --> 00:11:50,000
也就是说如果我们找一个因为某种原因失去了激素分泌器官的程序员

304
00:11:50,000 --> 00:11:52,000
他就不会有这样的倾向是吧

305
00:11:52,000 --> 00:11:53,000
这很难说

306
00:11:53,000 --> 00:11:55,000
这只是一个说法

307
00:11:55,000 --> 00:11:57,000
我觉得也很难去证明它了

308
00:11:57,000 --> 00:12:01,000
但是我觉得就好像不是所有的成功都是一定要什么

309
00:12:01,000 --> 00:12:05,000
所以出人头地你能有一份安稳的生活开心的工作

310
00:12:05,000 --> 00:12:08,000
然后这个叫做 work life balance

311
00:12:08,000 --> 00:12:10,000
就生活工作平行都很好

312
00:12:10,000 --> 00:12:12,000
其实我觉得也是一种选择

313
00:12:12,000 --> 00:12:15,000
就不一定真的要像每个人说的一样

314
00:12:15,000 --> 00:12:22,000
要成为在某一个领域或者是在某一个人生阶段令人忘记相悲的大牛

315
00:12:22,000 --> 00:12:25,000
其实这也不是大多数人的选择吧我觉得

316
00:12:25,000 --> 00:12:27,000
嗯

317
00:12:27,000 --> 00:12:31,000
我觉得可能成为大牛更多的是凭借天赋

318
00:12:31,000 --> 00:12:32,000
就

319
00:12:32,000 --> 00:12:33,000
以及努力

320
00:12:33,000 --> 00:12:35,000
如果你真的能够成为大牛的话

321
00:12:35,000 --> 00:12:38,000
你就不会去费力想要成为大牛

322
00:12:38,000 --> 00:12:40,000
而如果你不能成为大牛的话

323
00:12:40,000 --> 00:12:43,000
那不如就接受自己的命运

324
00:12:43,000 --> 00:12:44,000
那有什么办法

325
00:12:44,000 --> 00:12:45,000
就好像颜值一样

326
00:12:45,000 --> 00:12:46,000
颜值就是没有别人高的牛

327
00:12:46,000 --> 00:12:47,000
那有什么办法

328
00:12:47,000 --> 00:12:52,000
而且这世界上有整容手术

329
00:12:52,000 --> 00:12:54,000
但没有智商提高手术

330
00:12:54,000 --> 00:12:56,000
不过也不一定

331
00:12:56,000 --> 00:13:03,000
据说有一些叫做一些药物可以提高智商据说

332
00:13:03,000 --> 00:13:05,000
你是刺激脑细胞发展吗

333
00:13:05,000 --> 00:13:06,000
还是

334
00:13:06,000 --> 00:13:07,000
smart drug

335
00:13:07,000 --> 00:13:08,000
这之类的东西

336
00:13:08,000 --> 00:13:10,000
但我不知道靠谱全都怎么样

337
00:13:10,000 --> 00:13:11,000
就是代考

338
00:13:11,000 --> 00:13:12,000
OK

339
00:13:12,000 --> 00:13:13,000
节目录完了

340
00:13:13,000 --> 00:13:14,000
你告诉我拿牛麦

341
00:13:14,000 --> 00:13:16,000
那你就不用了吧

342
00:13:16,000 --> 00:13:20,000
所以 Rail 现在不仅仅是可能要告别转

343
00:13:20,000 --> 00:13:22,000
专业程序员了

344
00:13:22,000 --> 00:13:24,000
Rail 目前已经真的告别专业程序员了

345
00:13:24,000 --> 00:13:26,000
Rail 目前已经真的告别专业程序员了

346
00:13:26,000 --> 00:13:29,000
Rail 赢了他人生中的另一个新的阶段

347
00:13:29,000 --> 00:13:32,000
那么你要不要谈一谈感想

348
00:13:32,000 --> 00:13:35,000
哎我就是说每个行业都不容易

349
00:13:35,000 --> 00:13:36,000
就这么简单吗

350
00:13:36,000 --> 00:13:37,000
没有别的吗

351
00:13:37,000 --> 00:13:38,000
没有了

352
00:13:38,000 --> 00:13:39,000
因为刚开始做嘛

353
00:13:39,000 --> 00:13:46,000
就是还是有一个我还有一个学习的过程我觉得

354
00:13:46,000 --> 00:13:49,000
所以现在的工作是完全不用写的吗

355
00:13:49,000 --> 00:13:50,000
其实也不是

356
00:13:50,000 --> 00:13:53,000
我还是希望说就我现在是这么想的

357
00:13:53,000 --> 00:13:57,000
我觉得写程序这一点可以帮助我提升在其他领域的工作效率

358
00:13:57,000 --> 00:14:00,000
比如说别人要苦啊哈的做一点事

359
00:14:00,000 --> 00:14:04,000
我可以一些小程序可以帮助我能够更好的完成我的工作

360
00:14:04,000 --> 00:14:06,000
这还挺开心的其实

361
00:14:06,000 --> 00:14:13,000
那你会觉得自己之前过去这 10 年有 10 年吧

362
00:14:13,000 --> 00:14:16,000
你接受到了编程专业的科班的编程教育

363
00:14:16,000 --> 00:14:19,000
对你接下来的工作有什么影响

364
00:14:19,000 --> 00:14:21,000
嗯还蛮蛮有影响的

365
00:14:21,000 --> 00:14:23,000
起码可以和程序员聊得来

366
00:14:23,000 --> 00:14:24,000
哈哈哈

367
00:14:24,000 --> 00:14:27,000
OK 这是一个比较大的 part

368
00:14:27,000 --> 00:14:32,000
就是程序员在很多时候是不愿意跟不愿意系程序的人聊天的

369
00:14:32,000 --> 00:14:33,000
尤其是同行的

370
00:14:33,000 --> 00:14:35,000
对因为思维方式不一样嘛

371
00:14:35,000 --> 00:14:36,000
聊不到一块去

372
00:14:36,000 --> 00:14:37,000
嗯

373
00:14:37,000 --> 00:14:43,000
所以至少我觉得以我现在的这个知识储备和这个套词的能力

374
00:14:43,000 --> 00:14:45,000
应该还能呃

375
00:14:45,000 --> 00:14:51,000
呃在别人没有发现我这个是个彻底的门外汗之前能够今天撑一会儿

376
00:14:51,000 --> 00:14:53,000
你怎么可能是彻底门外汗呢

377
00:14:53,000 --> 00:14:54,000
你在主持这样一档节目

378
00:14:54,000 --> 00:14:56,000
然后说自己是一个彻底的门外汗

379
00:14:56,000 --> 00:14:57,000
你不怕这个

380
00:14:57,000 --> 00:14:58,000
你不怕这个

381
00:14:58,000 --> 00:14:59,000
听众的要求

382
00:14:59,000 --> 00:15:00,000
摔耳机就不听了

383
00:15:00,000 --> 00:15:01,000
对啊

384
00:15:01,000 --> 00:15:02,000
好吧

385
00:15:02,000 --> 00:15:04,000
唉

386
00:15:04,000 --> 00:15:06,000
好吧

387
00:15:06,000 --> 00:15:07,000
那接下来念下一封信

388
00:15:07,000 --> 00:15:08,000
嗯嗯

389
00:15:08,000 --> 00:15:09,000
呃

390
00:15:09,000 --> 00:15:12,000
如果有幸被念求不念出名字和邮箱地址多谢

391
00:15:12,000 --> 00:15:14,000
吴涛和瑞友你们好

392
00:15:14,000 --> 00:15:16,000
终于有机会提起电脑写一些反馈

393
00:15:16,000 --> 00:15:18,000
之前许多次听节目有感

394
00:15:18,000 --> 00:15:20,000
甚至做了笔记准备回复

395
00:15:20,000 --> 00:15:23,000
无奈下一次播出的时候才想起来未曾写成

396
00:15:23,000 --> 00:15:24,000
这也是拖延症

397
00:15:24,000 --> 00:15:28,000
听了这次程序人之路

398
00:15:28,000 --> 00:15:29,000
是病得治

399
00:15:29,000 --> 00:15:31,000
别这样了

400
00:15:31,000 --> 00:15:32,000
不要再逼人家了

401
00:15:32,000 --> 00:15:33,000
好吧

402
00:15:33,000 --> 00:15:34,000
开玩笑

403
00:15:34,000 --> 00:15:36,000
听了这一次程序人之路很有感慨

404
00:15:36,000 --> 00:15:38,000
我的情况可能跟瑞友有点相似

405
00:15:38,000 --> 00:15:40,000
本科修外语和金融

406
00:15:40,000 --> 00:15:42,000
无奈真的放不下留计算机的热爱

407
00:15:42,000 --> 00:15:44,000
曾经自学 Java

408
00:15:44,000 --> 00:15:47,000
尝试过科技媒体终觉不够深入

409
00:15:47,000 --> 00:15:49,000
于是决定考研 CS

410
00:15:49,000 --> 00:15:51,000
呃

411
00:15:51,000 --> 00:15:53,000
也考虑过把计算机当作兴趣爱好

412
00:15:53,000 --> 00:15:55,000
但实在是放不下

413
00:15:55,000 --> 00:15:57,000
加上头脑发热选的专业不尽如人意

414
00:15:57,000 --> 00:15:59,000
语言就不容讲了

415
00:15:59,000 --> 00:16:03,000
我学的还可能是最令人最令人民讨厌的语言

416
00:16:03,000 --> 00:16:06,000
什么语言最令人民讨厌

417
00:16:06,000 --> 00:16:07,000
日语了

418
00:16:07,000 --> 00:16:08,000
那就是是不是

419
00:16:08,000 --> 00:16:09,000
What

420
00:16:09,000 --> 00:16:11,000
人民讨厌的语言

421
00:16:11,000 --> 00:16:13,000
阿拉伯语吧

422
00:16:13,000 --> 00:16:16,000
为什么会令人民讨厌呢

423
00:16:16,000 --> 00:16:18,000
最令人民讨厌的语言

424
00:16:18,000 --> 00:16:19,000
嗯

425
00:16:19,000 --> 00:16:20,000
不知道

426
00:16:20,000 --> 00:16:21,000
好奇

427
00:16:22,000 --> 00:16:23,000
印第语

428
00:16:23,000 --> 00:16:26,000
你让两海跟你拼命

429
00:16:26,000 --> 00:16:28,000
sorry

430
00:16:28,000 --> 00:16:29,000
anyway

431
00:16:29,000 --> 00:16:30,000
金融越觉得

432
00:16:30,000 --> 00:16:32,000
金融越学越觉得

433
00:16:32,000 --> 00:16:34,000
这玩意儿也好意思叫科学

434
00:16:34,000 --> 00:16:37,000
不知道瑞尔放弃商科有没有类似的原因

435
00:16:37,000 --> 00:16:38,000
又急

436
00:16:38,000 --> 00:16:39,000
翻转二叉数

437
00:16:39,000 --> 00:16:41,000
是说交换二叉数

438
00:16:41,000 --> 00:16:42,000
所有子数的左右节点

439
00:16:42,000 --> 00:16:44,000
这是一道很简单的题

440
00:16:44,000 --> 00:16:46,000
在考验题也算常规题

441
00:16:46,000 --> 00:16:47,000
但就像吴涛说的

442
00:16:47,000 --> 00:16:48,000
会默写快排

443
00:16:48,000 --> 00:16:49,000
又对开发有什么用呢

444
00:16:49,000 --> 00:16:52,000
针对瑞尔说的商科指教计算器

445
00:16:52,000 --> 00:16:53,000
我们金融有一门课

446
00:16:53,000 --> 00:16:56,000
全程教用 Excel 模拟交易组合模型

447
00:16:56,000 --> 00:16:59,000
期末考试是用 Excel 模拟期权组合

448
00:16:59,000 --> 00:17:01,000
可能情况也在变吧

449
00:17:01,000 --> 00:17:03,000
但是这里可以问一句

450
00:17:03,000 --> 00:17:04,000
这又能有什么用呢

451
00:17:04,000 --> 00:17:06,000
特别是在有现成工具的情况下

452
00:17:06,000 --> 00:17:08,000
我想这两个问题的答案

453
00:17:08,000 --> 00:17:10,000
可能只是简单的帮助理解

454
00:17:10,000 --> 00:17:11,000
会不会

455
00:17:11,000 --> 00:17:14,000
会不用参考的默写一段程度

456
00:17:14,000 --> 00:17:20,000
会不用参考的默写一定程度上代表着透彻的理解吧

457
00:17:20,000 --> 00:17:21,000
特别是对于初学者来说

458
00:17:21,000 --> 00:17:29,000
只是需要透彻理解的原理和只需要记住如何使用空具和参考的界限是随着时代领域乃至于公共的

459
00:17:29,000 --> 00:17:31,000
获取成本而不断变化的

460
00:17:31,000 --> 00:17:34,000
毕竟没有人不允许你只用成法

461
00:17:34,000 --> 00:17:38,000
不用用成法只用加法了不是

462
00:17:38,000 --> 00:17:40,000
这句话是什么意思

463
00:17:40,000 --> 00:17:42,000
这句话是什么意思

464
00:17:42,000 --> 00:17:43,000
就是

465
00:17:43,000 --> 00:17:45,000
尘法是加法的一个

466
00:17:45,000 --> 00:17:49,000
毕竟没有人不允许你用成法只用加法了不是

467
00:17:49,000 --> 00:17:51,000
就成法可以用加法来实现吧

468
00:17:51,000 --> 00:17:52,000
是的

469
00:17:52,000 --> 00:17:55,000
最后不管瑞欧如何选择未来的路

470
00:17:55,000 --> 00:17:56,000
祝好

471
00:17:56,000 --> 00:17:57,000
吴涛听起来生活很舒服

472
00:17:57,000 --> 00:17:59,000
同样祝生活有趣

473
00:17:59,000 --> 00:18:01,000
希望贵节目生生不息

474
00:18:02,000 --> 00:18:05,000
这个是暗示我们要换鼠吃人了是吧

475
00:18:10,000 --> 00:18:11,000
这个特别有意思

476
00:18:11,000 --> 00:18:13,000
就是我刚刚讲有一点

477
00:18:13,000 --> 00:18:15,000
他其实挺好的

478
00:18:15,000 --> 00:18:17,000
就是说起码在初中上

479
00:18:17,000 --> 00:18:20,000
我认为说能够在黑板上默写出来

480
00:18:20,000 --> 00:18:23,000
就基本可以等同于你是透彻的理解

481
00:18:23,000 --> 00:18:25,000
这个我觉得还是有一定的道理的吧

482
00:18:25,000 --> 00:18:26,000
就是说

483
00:18:26,000 --> 00:18:28,000
有些事情如果你理解它的原理

484
00:18:28,000 --> 00:18:30,000
你是可以叫做推敲出来的

485
00:18:30,000 --> 00:18:33,000
就是从一个基本的原则推敲出来

486
00:18:33,000 --> 00:18:35,000
一些它要让你实现的功能

487
00:18:35,000 --> 00:18:37,000
但是怎么说呢

488
00:18:37,000 --> 00:18:41,000
也不是所有人都能真的有这个能力

489
00:18:41,000 --> 00:18:43,000
我觉得

490
00:18:43,000 --> 00:18:44,000
说得也是

491
00:18:44,000 --> 00:18:46,000
就其实我觉得

492
00:18:46,000 --> 00:18:52,000
先不说前面那个用什么默写快牌之类的

493
00:18:52,000 --> 00:18:55,000
就是你在写一段程序的时候

494
00:18:55,000 --> 00:18:56,000
如果一个函数

495
00:18:56,000 --> 00:18:59,000
你记住的函数的用途

496
00:18:59,000 --> 00:19:01,000
以及函数的签名月

497
00:19:01,000 --> 00:19:06,000
你写程序的时候被打断的概率就越小

498
00:19:06,000 --> 00:19:10,000
这句话好多

499
00:19:10,000 --> 00:19:11,000
再说一遍

500
00:19:11,000 --> 00:19:12,000
就是你

501
00:19:12,000 --> 00:19:13,000
你的

502
00:19:13,000 --> 00:19:15,000
你如果你在写程序的时候

503
00:19:15,000 --> 00:19:17,000
不停要去查一个函数的用法

504
00:19:17,000 --> 00:19:18,000
以及这个函数的签名的话

505
00:19:18,000 --> 00:19:22,000
那你流畅写程序的过程

506
00:19:22,000 --> 00:19:23,000
就会被打断对吧

507
00:19:23,000 --> 00:19:26,000
这不就是 IDE 大放光彩的时候吗

508
00:19:26,000 --> 00:19:30,000
Auto complete

509
00:19:30,000 --> 00:19:32,000
但即便如此

510
00:19:32,000 --> 00:19:34,000
IDE

511
00:19:34,000 --> 00:19:39,000
我还真的没有办法反驳

512
00:19:39,000 --> 00:19:41,000
是无言以对

513
00:19:41,000 --> 00:19:42,000
是没错

514
00:19:42,000 --> 00:19:43,000
对我竟然无言以对

515
00:19:43,000 --> 00:19:45,000
但可能是因为目前的状况

516
00:19:45,000 --> 00:19:48,000
就是我基本上不会用 IDE 来写

517
00:19:48,000 --> 00:19:49,000
需要写的东西

518
00:19:49,000 --> 00:19:52,000
所以会有这样的感觉

519
00:19:52,000 --> 00:19:57,000
就是如果我可以减少去看文档的次数的话

520
00:19:57,000 --> 00:19:59,000
我写程序的效率会变快

521
00:19:59,000 --> 00:20:00,000
对

522
00:20:00,000 --> 00:20:04,000
其实就是说这里就两个层次的一个用法

523
00:20:04,000 --> 00:20:05,000
像我们那种苦行僧

524
00:20:05,000 --> 00:20:07,000
怕就说记住这个函数

525
00:20:07,000 --> 00:20:08,000
下次你写的时候就不会忘记它了

526
00:20:08,000 --> 00:20:09,000
对吧

527
00:20:09,000 --> 00:20:10,000
但也有说

528
00:20:10,000 --> 00:20:15,000
那个像 objectsc 里面的函数面那么长

529
00:20:15,000 --> 00:20:18,000
我就算记住我光打字眼很久

530
00:20:18,000 --> 00:20:20,000
这个时候 Auto complete 还是挺有用的

531
00:20:20,000 --> 00:20:24,000
当然这个问题如果伸出下去的话

532
00:20:24,000 --> 00:20:29,000
还是会和语言和具体所使用的环境

533
00:20:29,000 --> 00:20:33,000
以及你开发的程序的复杂程度

534
00:20:33,000 --> 00:20:35,000
相是无疑是有关系的

535
00:20:35,000 --> 00:20:38,000
就好像见宗和器宗的差别

536
00:20:38,000 --> 00:20:39,000
对吧

537
00:20:39,000 --> 00:20:40,000
就我们可能会觉得

538
00:20:40,000 --> 00:20:49,000
因为是做后端或者是做一些不需要特别复杂的东西的

539
00:20:49,000 --> 00:20:53,000
不需要使用特别啰嗦的语言的时候

540
00:20:53,000 --> 00:20:56,000
你会觉得记一些常用的函数

541
00:20:56,000 --> 00:20:57,000
以及他们的用法

542
00:20:57,000 --> 00:20:58,000
其实是很自然的事情

543
00:20:58,000 --> 00:21:01,000
但是如果你处理的东西的复杂程度

544
00:21:01,000 --> 00:21:02,000
真的摆在那了

545
00:21:02,000 --> 00:21:04,000
然后你又不可能脱离 Ide 的话

546
00:21:04,000 --> 00:21:08,000
那可能不去记也是也是一个理性的选择

547
00:21:08,000 --> 00:21:10,000
对

548
00:21:10,000 --> 00:21:11,000
下一条

549
00:21:11,000 --> 00:21:14,000
一位叫做 Jerry 林的朋友说

550
00:21:14,000 --> 00:21:16,000
提到高能物理

551
00:21:16,000 --> 00:21:18,000
我就默认是高能实验物理

552
00:21:18,000 --> 00:21:20,000
实验高能物理

553
00:21:20,000 --> 00:21:22,000
我们什么时候提到过高能物理

554
00:21:22,000 --> 00:21:24,000
我也忘了

555
00:21:24,000 --> 00:21:26,000
有点年份了

556
00:21:26,000 --> 00:21:27,000
对

557
00:21:27,000 --> 00:21:32,000
真是过了一个月怎么就忘了这么多

558
00:21:32,000 --> 00:21:33,000
然后他提到了 CERN

559
00:21:33,000 --> 00:21:35,000
就是欧洲原子能中心

560
00:21:35,000 --> 00:21:36,000
CERN

561
00:21:36,000 --> 00:21:38,000
CERN 肯定都很熟悉

562
00:21:38,000 --> 00:21:39,000
毕竟是在欧洲

563
00:21:39,000 --> 00:21:43,000
而且同时又是 WWW 的发源地

564
00:21:43,000 --> 00:21:45,000
呃

565
00:21:45,000 --> 00:21:46,000
括号

566
00:21:46,000 --> 00:21:51,000
WWW 某种意义上说是为了解决高能物理的分布式计算而发明

567
00:21:51,000 --> 00:21:52,000
嗯

568
00:21:52,000 --> 00:21:53,000
这个倒是第一次听说

569
00:21:53,000 --> 00:21:57,000
CERN 有一个叫做 root 的 CPP

570
00:21:57,000 --> 00:21:58,000
计算框架

571
00:21:58,000 --> 00:22:00,000
同时带有 interactive 的环境

572
00:22:00,000 --> 00:22:01,000
类似于 iPython

573
00:22:01,000 --> 00:22:05,000
这个框架有各种数据处理和 plotting 的功能

574
00:22:05,000 --> 00:22:06,000
还蛮好的

575
00:22:06,000 --> 00:22:07,000
就是文档比较 shit

576
00:22:07,000 --> 00:22:08,000
呃

577
00:22:08,000 --> 00:22:11,000
配合他们最近的数据开放项目还是蛮有趣

578
00:22:11,000 --> 00:22:13,000
呃

579
00:22:13,000 --> 00:22:16,000
我还真的不知道

580
00:22:16,000 --> 00:22:21,000
TripleW 是为了解决高能物理的分布式计算而发明

581
00:22:21,000 --> 00:22:24,000
就我就记得是写论文他们要引用东西嘛

582
00:22:24,000 --> 00:22:25,000
然后这个

583
00:22:25,000 --> 00:22:26,000
等一下

584
00:22:26,000 --> 00:22:29,000
他说是 TripleW 不是 HTML 是吧

585
00:22:29,000 --> 00:22:36,000
可是 TripleW 不就的基本要素不就是一个 web 服务器

586
00:22:36,000 --> 00:22:38,000
就我去我去过 CERN

587
00:22:38,000 --> 00:22:39,000
我去过 CERN 参观

588
00:22:39,000 --> 00:22:41,000
然后我还见到了那一台电脑

589
00:22:41,000 --> 00:22:43,000
然后我还去了那个

590
00:22:43,000 --> 00:22:45,000
呃

591
00:22:45,000 --> 00:22:47,000
Timberley 的那个

592
00:22:47,000 --> 00:22:50,000
他开发出 web 的那个实验室是在地下

593
00:22:50,000 --> 00:22:51,000
很难讲究

594
00:22:51,000 --> 00:22:53,000
是在地下的一个实验室里面

595
00:22:53,000 --> 00:22:54,000
ok

596
00:22:54,000 --> 00:22:55,000
然后

597
00:22:56,000 --> 00:22:58,000
我印象里面

598
00:22:58,000 --> 00:23:05,000
他只是为了把 hypertext 呈现给大家一边翻阅

599
00:23:05,000 --> 00:23:06,000
而研发出

600
00:23:06,000 --> 00:23:10,000
在 SGML 的基础上开发出了 HTML

601
00:23:10,000 --> 00:23:15,000
然后把它做成一个 web 服务器

602
00:23:15,000 --> 00:23:18,000
这样所有人都所有其他人都会去访问他的页面

603
00:23:18,000 --> 00:23:19,000
大概这个样子

604
00:23:19,000 --> 00:23:20,000
哼

605
00:23:20,000 --> 00:23:24,000
你这么一问我也卡住了这个追根素源到底是为了啥

606
00:23:24,000 --> 00:23:25,000
嗯

607
00:23:25,000 --> 00:23:31,000
总之这个画时代东西外打征召了就在 CERN 的一台 NEXT 的电脑上被研发出来了

608
00:23:31,000 --> 00:23:32,000
嗯

609
00:23:32,000 --> 00:23:36,000
然后 CERN 现在有这样一个造的 root 的 CPP 计算框架

610
00:23:36,000 --> 00:23:37,000
嗯

611
00:23:37,000 --> 00:23:40,000
可以去研究一下

612
00:23:40,000 --> 00:23:41,000
不过 CPP

613
00:23:41,000 --> 00:23:42,000
你有你有兴趣吗

614
00:23:42,000 --> 00:23:43,000
Nope

615
00:23:44,000 --> 00:23:45,000
ok

616
00:23:45,000 --> 00:23:49,000
所以这一封来信的我们的反馈就是 good no

617
00:23:50,000 --> 00:23:51,000
不是

618
00:23:51,000 --> 00:23:52,000
呵呵

619
00:23:54,000 --> 00:23:56,000
呵呵太有贬义了我觉得

620
00:23:56,000 --> 00:23:57,000
没有吧

621
00:23:57,000 --> 00:23:58,000
呵呵是中信的

622
00:23:58,000 --> 00:23:59,000
你确定吗

623
00:23:59,000 --> 00:24:00,000
为什么我总觉得

624
00:24:00,000 --> 00:24:02,000
好吧

625
00:24:02,000 --> 00:24:04,000
那可能我理解不太对

626
00:24:04,000 --> 00:24:07,000
我总觉得呵呵的语意是

627
00:24:08,000 --> 00:24:09,000
呃

628
00:24:09,000 --> 00:24:10,000
呃

629
00:24:10,000 --> 00:24:11,000
嗯

630
00:24:11,000 --> 00:24:12,000
我知道了

631
00:24:12,000 --> 00:24:13,000
但是

632
00:24:13,000 --> 00:24:14,000
就所以呢

633
00:24:14,000 --> 00:24:15,000
也没有什么兴趣

634
00:24:15,000 --> 00:24:16,000
所以就呵呵了

635
00:24:16,000 --> 00:24:17,000
所以他是中信的

636
00:24:17,000 --> 00:24:18,000
没错

637
00:24:19,000 --> 00:24:23,000
而且呵呵更多的时候被使用的场合是

638
00:24:24,000 --> 00:24:25,000
呃

639
00:24:25,000 --> 00:24:27,000
你这种想法真蠢我懒得跟你辩论

640
00:24:27,000 --> 00:24:29,000
哈哈哈哈哈哈

641
00:24:29,000 --> 00:24:32,000
比如说什么对方说

642
00:24:32,000 --> 00:24:33,000
PHP 是最好的语言

643
00:24:33,000 --> 00:24:34,000
然后你说呵呵

644
00:24:34,000 --> 00:24:35,000
哈哈哈哈

645
00:24:35,000 --> 00:24:36,000
哈哈哈哈

646
00:24:36,000 --> 00:24:38,000
就那种不谢的感觉

647
00:24:38,000 --> 00:24:39,000
哈哈哈哈

648
00:24:39,000 --> 00:24:40,000
好吧

649
00:24:40,000 --> 00:24:41,000
懂了

650
00:24:41,000 --> 00:24:42,000
对

651
00:24:42,000 --> 00:24:43,000
ok

652
00:24:43,000 --> 00:24:44,000
那就我们不呵呵

653
00:24:44,000 --> 00:24:45,000
嗯

654
00:24:45,000 --> 00:24:46,000
谢谢

655
00:24:46,000 --> 00:24:47,000
因为是 good to know 嘛

656
00:24:47,000 --> 00:24:48,000
就是谢谢了

657
00:24:48,000 --> 00:24:49,000
嗯哼

658
00:24:49,000 --> 00:24:50,000
因为

659
00:24:50,000 --> 00:24:52,000
其实 plotting 这个事情其实还要讲一下

660
00:24:52,000 --> 00:24:57,000
我觉得因为之前我上学的时候还经常用那个叫什么

661
00:24:57,000 --> 00:24:58,000
glue plot

662
00:24:58,000 --> 00:24:59,000
啊

663
00:24:59,000 --> 00:25:00,000
ok

664
00:25:00,000 --> 00:25:04,000
然后通过那个那个就是自己写个 pithern 去输出那个点嘛

665
00:25:04,000 --> 00:25:07,000
然后去用 glue plot 的这些东西画

666
00:25:07,000 --> 00:25:11,000
但是画出来的那个真是惨不忍度

667
00:25:11,000 --> 00:25:15,000
可是你都在用 python 了为什么不用那个叫什么 mat plot

668
00:25:15,000 --> 00:25:20,000
plotlib 还是叫什么那个

669
00:25:20,000 --> 00:25:21,000
呃

670
00:25:21,000 --> 00:25:22,000
呃

671
00:25:22,000 --> 00:25:23,000
哇

672
00:25:23,000 --> 00:25:24,000
因为当时好像

673
00:25:24,000 --> 00:25:27,000
那个在那个 linux 上面有吗

674
00:25:27,000 --> 00:25:28,000
有啊

675
00:25:28,000 --> 00:25:30,000
这是一个跨平台的 cooler

676
00:25:30,000 --> 00:25:31,000
ok

677
00:25:31,000 --> 00:25:35,000
那可能当时比较幼稚就就只知道用那个 glue plot

678
00:25:35,000 --> 00:25:36,000
ok

679
00:25:36,000 --> 00:25:37,000
还用过那个

680
00:25:37,000 --> 00:25:39,000
还考虑过用那个

681
00:25:39,000 --> 00:25:44,000
MetaPost 来做 plotting

682
00:25:44,000 --> 00:25:45,000
我也是淡碎了

683
00:25:45,000 --> 00:25:48,000
MetaPost 好古老

684
00:25:48,000 --> 00:25:50,000
我已经有三年没有听到过这个文章

685
00:25:50,000 --> 00:25:51,000
这些什么

686
00:25:51,000 --> 00:25:53,000
因为这些已经淘汰

687
00:25:53,000 --> 00:25:54,000
基本没有什么人在用了

688
00:25:54,000 --> 00:25:58,000
所以哪怕是在 Latech 这个社区

689
00:25:58,000 --> 00:25:59,000
大家要专用什么 PIGM

690
00:25:59,000 --> 00:26:01,000
TIKZ 去画图了

691
00:26:01,000 --> 00:26:05,000
所以 MetaPost 这种比较落后的东西

692
00:26:05,000 --> 00:26:06,000
就让它过去吧

693
00:26:06,000 --> 00:26:07,000
随风而去

694
00:26:07,000 --> 00:26:10,000
OK

695
00:26:10,000 --> 00:26:13,000
然后是新闻环境

696
00:26:13,000 --> 00:26:14,000
本期的新闻环境

697
00:26:14,000 --> 00:26:17,000
这个事情还插入新闻联播的音效

698
00:26:17,000 --> 00:26:17,000
这些都

699
00:26:17,000 --> 00:26:23,000
我好久没看电视

700
00:26:23,000 --> 00:26:23,000
那个音效改了

701
00:26:23,000 --> 00:26:25,000
我好怀念这个音效

702
00:26:25,000 --> 00:26:28,000
我已经十年没有听过了

703
00:26:28,000 --> 00:26:32,000
观众朋友们

704
00:26:32,000 --> 00:26:33,000
我们本期播报第一则新闻是

705
00:26:33,000 --> 00:26:34,000
看看别人家的小孩

706
00:26:34,000 --> 00:26:37,000
其实这些都不是新闻了

707
00:26:37,000 --> 00:26:38,000
这些新闻都已经过去

708
00:26:38,000 --> 00:26:39,000
上个月的三

709
00:26:39,000 --> 00:26:41,000
三到五周了至少

710
00:26:41,000 --> 00:26:43,000
然后感兴趣的朋友们

711
00:26:43,000 --> 00:26:43,000
其实都已经

712
00:26:43,000 --> 00:26:46,000
都已经听过了

713
00:26:46,000 --> 00:26:49,000
所以我们就算是最近发生的药文的评论吧

714
00:26:49,000 --> 00:26:51,000
好

715
00:26:51,000 --> 00:26:52,000
好 今年第一则新闻是

716
00:26:52,000 --> 00:26:56,000
今年十岁的 Ryan 是 Doom 和 Quick 的主持人

717
00:26:56,000 --> 00:26:57,000
Oculus Rift CTO

718
00:26:57,000 --> 00:26:59,000
John Carmack 的儿子

719
00:26:59,000 --> 00:27:01,000
好上次节目我们说到了

720
00:27:01,000 --> 00:27:01,000
那个 John Carmack

721
00:27:01,000 --> 00:27:08,000
在他那个 Oculus VR 的开发环境里面使用 Scheme 作为脚本语言

722
00:27:08,000 --> 00:27:09,000
嗯哼

723
00:27:09,000 --> 00:27:14,000
然后作为一个 Eat Your Own Dogfoot 的实践家

724
00:27:14,000 --> 00:27:18,000
他让自己的十岁的儿子开始学这个 Scheme

725
00:27:18,000 --> 00:27:22,000
然后就在这个 Rocket 这个开发环境里面写了一款游戏

726
00:27:22,000 --> 00:27:25,000
叫做 Mr.Bar

727
00:27:25,000 --> 00:27:28,000
空格 B.Q

728
00:27:28,000 --> 00:27:29,000
And Angry Face

729
00:27:29,000 --> 00:27:32,000
不

730
00:27:32,000 --> 00:27:35,000
应该是他这款游戏叫做 Fly

731
00:27:35,000 --> 00:27:39,000
然后这个 Fly 的主角一看就没玩

732
00:27:39,000 --> 00:27:40,000
我玩了

733
00:27:40,000 --> 00:27:42,000
我还没过

734
00:27:42,000 --> 00:27:47,000
就是他那个主角就是里面那个飞行的小人

735
00:27:47,000 --> 00:27:48,000
叫做 Mr.Barbecue

736
00:27:48,000 --> 00:27:50,000
听出来了

737
00:27:50,000 --> 00:27:51,000
Barbecue

738
00:27:51,000 --> 00:27:52,000
对

739
00:27:52,000 --> 00:27:55,000
然后他其实这个游戏是很短的那个

740
00:27:55,000 --> 00:27:55,000
对

741
00:27:55,000 --> 00:27:56,000
烧烤歌

742
00:27:56,000 --> 00:27:59,000
就是你控制烧烤先生在云里面飞

743
00:27:59,000 --> 00:28:00,000
如果撞到

744
00:28:00,000 --> 00:28:03,000
好像逻辑是撞到云就死是吧

745
00:28:03,000 --> 00:28:05,000
反正撞到的时候掉下去都是死了

746
00:28:05,000 --> 00:28:06,000
对

747
00:28:06,000 --> 00:28:07,000
其实就是一个 Fly 的 Copy

748
00:28:07,000 --> 00:28:10,000
但是无论如何让人惊讶的是

749
00:28:10,000 --> 00:28:12,000
这是一个小孩写出来

750
00:28:12,000 --> 00:28:14,000
10 岁的小朋友写的

751
00:28:14,000 --> 00:28:14,000
对

752
00:28:14,000 --> 00:28:16,000
一个 10 岁的小朋友写出来 Fly 的

753
00:28:16,000 --> 00:28:19,000
我一生中都没有写过一个 Fly 的 Copy

754
00:28:19,000 --> 00:28:20,000
You know

755
00:28:20,000 --> 00:28:23,000
而且从这个

756
00:28:23,000 --> 00:28:24,000
太不完整了

757
00:28:24,000 --> 00:28:25,000
你就写一个吧

758
00:28:25,000 --> 00:28:28,000
真的

759
00:28:28,000 --> 00:28:30,000
我感觉那个 Flappy Bird 这个游戏就好像

760
00:28:30,000 --> 00:28:34,000
你做游戏的话就好像它的一个 Hello World 一样

761
00:28:34,000 --> 00:28:39,000
做游戏的 Hello World 不应该是罗多斯方块吗

762
00:28:39,000 --> 00:28:40,000
你没写过罗多斯方块吗

763
00:28:40,000 --> 00:28:41,000
嗯

764
00:28:41,000 --> 00:28:42,000
嗯

765
00:28:42,000 --> 00:28:42,000
好吧

766
00:28:42,000 --> 00:28:44,000
做手游的 Hello World

767
00:28:44,000 --> 00:28:45,000
嗯

768
00:28:45,000 --> 00:28:45,000
好吧

769
00:28:45,000 --> 00:28:46,000
哈哈哈哈

770
00:28:46,000 --> 00:28:47,000
立刻无言

771
00:28:47,000 --> 00:28:48,000
对了

772
00:28:48,000 --> 00:28:48,000
哈哈哈哈

773
00:28:48,000 --> 00:28:50,000
摊石蛇呀

774
00:28:50,000 --> 00:28:53,000
摊石蛇也比 Flappy Bird 应该比摊石蛇简单一些

775
00:28:53,000 --> 00:28:55,000
嗯

776
00:28:55,000 --> 00:28:56,000
也难说

777
00:28:56,000 --> 00:28:57,000
难说

778
00:28:57,000 --> 00:28:58,000
差不多吧

779
00:28:58,000 --> 00:29:00,000
我觉得我还是觉得摊石蛇更简单一辈

780
00:29:00,000 --> 00:29:03,000
因为现在摊石蛇如果你做一个静态场景的话

781
00:29:03,000 --> 00:29:04,000
图形内开会简单一些

782
00:29:04,000 --> 00:29:07,000
逻辑也简单呀

783
00:29:07,000 --> 00:29:08,000
摊石蛇有什么逻辑

784
00:29:08,000 --> 00:29:10,000
摊石蛇基本上就是

785
00:29:10,000 --> 00:29:13,000
摊石蛇不用考虑场景生成的问题

786
00:29:13,000 --> 00:29:16,000
只需要随机生成一个苹果就可以了

787
00:29:16,000 --> 00:29:16,000
好吧

788
00:29:16,000 --> 00:29:17,000
但

789
00:29:17,000 --> 00:29:24,000
所以不管就说这个 10 岁的小孩写出一个 Flappy Bird 的 Copy 也是非常非常了不起

790
00:29:24,000 --> 00:29:24,000
对

791
00:29:24,000 --> 00:29:27,000
它有点开发环境也挺有意思的

792
00:29:27,000 --> 00:29:27,000
Racket 你用过吗

793
00:29:27,000 --> 00:29:29,000
用过呀

794
00:29:29,000 --> 00:29:31,000
就没记错

795
00:29:31,000 --> 00:29:32,000
是 Lay Scheme

796
00:29:32,000 --> 00:29:33,000
Lay Lisp 吗

797
00:29:33,000 --> 00:29:34,000
不是吗

798
00:29:34,000 --> 00:29:37,000
Racket 是 Scheme 的一个实现

799
00:29:37,000 --> 00:29:38,000
对

800
00:29:38,000 --> 00:29:41,000
它叫 R 6 什么 S 级

801
00:29:41,000 --> 00:29:43,000
我忘了还有一个版本号挺奇怪的

802
00:29:43,000 --> 00:29:44,000
OK

803
00:29:44,000 --> 00:29:45,000
对

804
00:29:45,000 --> 00:29:47,000
我只是指的那个 reference 在版本号

805
00:29:47,000 --> 00:29:47,000
然后呢

806
00:29:47,000 --> 00:29:49,000
对对对对

807
00:29:49,000 --> 00:29:49,000
对对对对

808
00:29:49,000 --> 00:29:50,000
Racket 是一个具体的实现

809
00:29:50,000 --> 00:29:56,000
然后现在它有一个叫做 DrRacket 这么一个一套套件吧

810
00:29:56,000 --> 00:29:57,000
里面包含了各种工具

811
00:29:57,000 --> 00:30:00,000
它那个比较方便就可以直接生成一个跨平台的应用

812
00:30:00,000 --> 00:30:01,000
就是可以生成这个

813
00:30:01,000 --> 00:30:06,000
Linux 和 Windows 和 Mac 都可以运行的这个 Banary

814
00:30:06,000 --> 00:30:14,000
为什么他这个 Rain 没有把 Linux 平台的包试出了

815
00:30:14,000 --> 00:30:17,000
他之前只放出了 Mac 和 Windows 版本

816
00:30:17,000 --> 00:30:19,000
好问题我也不知道

817
00:30:19,000 --> 00:30:20,000
可他不用吧

818
00:30:20,000 --> 00:30:21,000
对

819
00:30:21,000 --> 00:30:28,000
然后他写的这个 Fly 的游戏里面有三种模式

820
00:30:28,000 --> 00:30:30,000
有是 Granny 模式就是非常非常慢

821
00:30:30,000 --> 00:30:38,000
然后是老奶奶模式好困难

822
00:30:38,000 --> 00:30:40,000
祖母模式

823
00:30:40,000 --> 00:30:42,000
然后是正常模式

824
00:30:42,000 --> 00:30:44,000
还有专家模式

825
00:30:44,000 --> 00:30:46,000
好像还有一个叫什么 Hypersonic 模式

826
00:30:46,000 --> 00:30:47,000
HyperMode

827
00:30:47,000 --> 00:30:48,000
就是那个 Mode 里面

828
00:30:48,000 --> 00:30:51,000
基本上如果你选择以那个 Mode 开始游戏的话

829
00:30:51,000 --> 00:30:53,000
一开场就会死

830
00:30:53,000 --> 00:30:58,000
那个中文翻译成这么叫做顺难就坚持 10 秒模式

831
00:30:58,000 --> 00:30:59,000
OK

832
00:30:59,000 --> 00:31:01,000
我可能 0.5 秒都坚持不了

833
00:31:01,000 --> 00:31:04,000
因为一上来你只有两个选择

834
00:31:04,000 --> 00:31:06,000
按空格键或者不按空格键

835
00:31:06,000 --> 00:31:08,000
不按空格键的话就会撞到下方的云

836
00:31:08,000 --> 00:31:10,000
按空格键的话就会撞到上方的云

837
00:31:10,000 --> 00:31:10,000
所以

838
00:31:10,000 --> 00:31:11,000
OK

839
00:31:11,000 --> 00:31:14,000
所以你说这件事情怎么看

840
00:31:14,000 --> 00:31:15,000
这个小朋友

841
00:31:15,000 --> 00:31:20,000
前浪死在沙滩上

842
00:31:20,000 --> 00:31:22,000
已经死了是吧

843
00:31:22,000 --> 00:31:23,000
就我也不知道

844
00:31:23,000 --> 00:31:30,000
可是 10 岁写游戏是非常了不起的事情吗

845
00:31:30,000 --> 00:31:32,000
我不知道

846
00:31:32,000 --> 00:31:34,000
但是他的这个就是我们先不说这个品

847
00:31:34,000 --> 00:31:36,000
就是这个这个效果怎么样

848
00:31:36,000 --> 00:31:40,000
但是我觉得完成度和这个流程还是挺挺让我吃惊的

849
00:31:40,000 --> 00:31:43,000
因为你看到他有个介绍

850
00:31:43,000 --> 00:31:45,000
他说他怎么会写这么一个游戏

851
00:31:45,000 --> 00:31:48,000
他让他弟弟还是哥哥帮他做什么配乐

852
00:31:48,000 --> 00:31:49,000
你乱七八糟的

853
00:31:49,000 --> 00:31:50,000
OK

854
00:31:50,000 --> 00:31:51,000
他们有个 team

855
00:31:51,000 --> 00:31:53,000
那个 angry face

856
00:31:53,000 --> 00:31:56,000
就是他之前的另外一款游戏里面

857
00:31:56,000 --> 00:31:59,000
的那个 angry face 的这个笑脸

858
00:31:59,000 --> 00:32:00,000
就胡说胡说

859
00:32:00,000 --> 00:32:02,000
怒脸是他妈给他划

860
00:32:02,000 --> 00:32:03,000
然后他用

861
00:32:03,000 --> 00:32:05,000
gamp

862
00:32:05,000 --> 00:32:06,000
gimp

863
00:32:06,000 --> 00:32:09,000
把那个笑脸抠出来

864
00:32:09,000 --> 00:32:10,000
我觉得这个很了不起

865
00:32:10,000 --> 00:32:17,000
而且他而且他还学在这个做这个游戏中学会了用那个 blender 做 3 D 模型

866
00:32:17,000 --> 00:32:18,000
哦

867
00:32:18,000 --> 00:32:22,000
还学会用那个还用那个 audacity 就是我们你也用那个来编辑音频

868
00:32:22,000 --> 00:32:23,000
来做

869
00:32:23,000 --> 00:32:24,000
我此刻正在 audacity 来录音

870
00:32:24,000 --> 00:32:26,000
对游戏的那个声音

871
00:32:26,000 --> 00:32:27,000
真是

872
00:32:27,000 --> 00:32:28,000
太强了

873
00:32:28,000 --> 00:32:31,000
这是 10 岁的小孩了

874
00:32:31,000 --> 00:32:34,000
这个是这个的确是应该承认的确很强

875
00:32:34,000 --> 00:32:37,000
所以什么基因好还是不一样的

876
00:32:37,000 --> 00:32:38,000
对

877
00:32:38,000 --> 00:32:39,000
对

878
00:32:39,000 --> 00:32:40,000
有家父熏他

879
00:32:40,000 --> 00:32:43,000
关键是这个小孩长得逆天的可爱

880
00:32:43,000 --> 00:32:44,000
哦

881
00:32:44,000 --> 00:32:45,000
这倒是

882
00:32:45,000 --> 00:32:47,000
就是打开主页的话

883
00:32:47,000 --> 00:32:49,000
颜值真的是逼人了

884
00:32:49,000 --> 00:32:50,000
爆表简直

885
00:32:50,000 --> 00:32:51,000
嗯

886
00:32:51,000 --> 00:32:53,000
他的那个网址我一直没想到那样什么意思

887
00:32:53,000 --> 00:32:59,000
他这网址是 ek 3 one 就是数字 1 字母 k 数字 3 字母 c.com

888
00:32:59,000 --> 00:33:00,000
我不知道什么意思

889
00:33:00,000 --> 00:33:01,000
1003 c

890
00:33:01,000 --> 00:33:07,000
因为四个字母和数字组合的网址是非常非常难找

891
00:33:07,000 --> 00:33:09,000
我有点怀疑这个网址

892
00:33:09,000 --> 00:33:11,000
没有啊四个字母还蛮常见的

893
00:33:11,000 --> 00:33:13,000
不已经卖光了

894
00:33:13,000 --> 00:33:15,000
就现在你去注册

895
00:33:15,000 --> 00:33:16,000
三个的卖光了

896
00:33:16,000 --> 00:33:18,000
我知道四个应该还有吧

897
00:33:18,000 --> 00:33:19,000
你确定吗

898
00:33:19,000 --> 00:33:21,000
ek 3 c

899
00:33:21,000 --> 00:33:23,000
哦他是.com

900
00:33:23,000 --> 00:33:24,000
ok

901
00:33:24,000 --> 00:33:25,000
对啊

902
00:33:25,000 --> 00:33:26,000
有可能

903
00:33:26,000 --> 00:33:27,000
因为我有一个三个字母.net

904
00:33:27,000 --> 00:33:29,000
导带好像不太值钱吧

905
00:33:29,000 --> 00:33:30,000
对

906
00:33:30,000 --> 00:33:31,000
嗯

907
00:33:31,000 --> 00:33:32,000
好了

908
00:33:32,000 --> 00:33:33,000
这就是

909
00:33:33,000 --> 00:33:35,000
别这个什么

910
00:33:35,000 --> 00:33:40,000
大人口中别人家闪闪牛逼的闪闪发光

911
00:33:40,000 --> 00:33:44,000
让你无限自卑的小孩到此结束

912
00:33:44,000 --> 00:33:46,000
不过他爹毕竟是做游戏的

913
00:33:46,000 --> 00:33:47,000
然后

914
00:33:47,000 --> 00:33:48,000
不不不

915
00:33:48,000 --> 00:33:50,000
这个描述太太那个了吧

916
00:33:50,000 --> 00:33:53,000
他爹毕竟是一个做游戏的识鼻祖

917
00:33:53,000 --> 00:33:57,000
所以他在这个 About Me 的界面里面也写到了

918
00:33:57,000 --> 00:34:01,000
他特别喜欢玩 Dragon Dungeon

919
00:34:01,000 --> 00:34:02,000
嗯

920
00:34:02,000 --> 00:34:04,000
然后还列出了自己的阵营

921
00:34:04,000 --> 00:34:06,000
You know

922
00:34:06,000 --> 00:34:11,000
就你会觉得我靠一个十岁的小孩已经开始研究阵营之类的

923
00:34:11,000 --> 00:34:15,000
不过也难说

924
00:34:15,000 --> 00:34:18,000
我相信七十年代的时候 DND 作为

925
00:34:18,000 --> 00:34:19,000
纸油

926
00:34:19,000 --> 00:34:21,000
就桌面纸油最流行的时候

927
00:34:21,000 --> 00:34:22,000
也许

928
00:34:22,000 --> 00:34:24,000
那时候的小孩也是这样的

929
00:34:24,000 --> 00:34:26,000
就还会自己做数值卡呀

930
00:34:26,000 --> 00:34:29,000
自己去算那些莫名其妙的

931
00:34:29,000 --> 00:34:31,000
就好像我小时候玩那个什么

932
00:34:31,000 --> 00:34:32,000
黑白棋

933
00:34:32,000 --> 00:34:33,000
五子棋之类的那种常态

934
00:34:33,000 --> 00:34:34,000
对

935
00:34:34,000 --> 00:34:36,000
豁免检定之类的

936
00:34:36,000 --> 00:34:38,000
而且他还列出一大堆自己喜欢玩的游戏

937
00:34:38,000 --> 00:34:40,000
其中包括 Minecraft

938
00:34:40,000 --> 00:34:42,000
Monster Hunter

939
00:34:42,000 --> 00:34:44,000
Destiny

940
00:34:44,000 --> 00:34:46,000
还有 Summon's War

941
00:34:46,000 --> 00:34:48,000
可是我有点奇怪就是

942
00:34:48,000 --> 00:34:49,000
Destiny

943
00:34:49,000 --> 00:34:53,000
难道不是一个至少是 Teen 的游戏吧

944
00:34:53,000 --> 00:34:55,000
就他他没有到那个年龄啊

945
00:34:55,000 --> 00:34:57,000
他这样赤裸裸的列出来

946
00:34:57,000 --> 00:35:03,000
如果有人去告他爹说你让这个小孩玩不符合他年龄游戏

947
00:35:03,000 --> 00:35:04,000
他怎么办

948
00:35:04,000 --> 00:35:05,000
游戏有分级吗

949
00:35:05,000 --> 00:35:06,000
有啊

950
00:35:06,000 --> 00:35:08,000
我靠

951
00:35:08,000 --> 00:35:09,000
天呐

952
00:35:09,000 --> 00:35:10,000
好玩

953
00:35:10,000 --> 00:35:13,000
你之前是生活在一块石头上有吗

954
00:35:13,000 --> 00:35:16,000
我生活在一块石头上有吗

955
00:35:16,000 --> 00:35:18,000
我生活在一块石头上有

956
00:35:18,000 --> 00:35:19,000
我都上远

957
00:35:19,000 --> 00:35:20,000
OK

958
00:35:20,000 --> 00:35:23,000
不管怎么说

959
00:35:23,000 --> 00:35:26,000
刚才就是编家小孩的故事

960
00:35:26,000 --> 00:35:29,000
下一则新闻是特别搞笑的

961
00:35:29,000 --> 00:35:30,000
就是上周

962
00:35:30,000 --> 00:35:33,000
上一次节目我们提到那个 Homebrew 的作者

963
00:35:33,000 --> 00:35:35,000
叫做 Max Hallwell

964
00:35:35,000 --> 00:35:37,000
去谷歌面试

965
00:35:37,000 --> 00:35:42,000
由于未能在白板上手工完成翻转二叉数的算法

966
00:35:42,000 --> 00:35:43,000
被谷歌拒了

967
00:35:43,000 --> 00:35:46,000
对我相信谷歌招他的人一定觉得 WTF

968
00:35:46,000 --> 00:35:48,000
然后他自己也说 WTF

969
00:35:48,000 --> 00:35:51,000
然后他就去了苹果

970
00:35:51,000 --> 00:35:53,000
对他恶狠狠说了一句

971
00:35:53,000 --> 00:35:55,000
此处不留言自有留言处

972
00:35:55,000 --> 00:35:56,000
然后就去了苹果

973
00:35:56,000 --> 00:35:58,000
然后他的推出上发了一个图

974
00:35:58,000 --> 00:36:01,000
背景是那个苹果的总部

975
00:36:01,000 --> 00:36:05,000
叫做那个 Wal Apple Campus at One Infinite Loop

976
00:36:05,000 --> 00:36:07,000
然后写了两个字

977
00:36:07,000 --> 00:36:08,000
First day

978
00:36:08,000 --> 00:36:11,000
接着自己的半个脸

979
00:36:11,000 --> 00:36:14,000
然后我也不知道什么意思

980
00:36:14,000 --> 00:36:15,000
反正我觉得这个事情还挺有意思的

981
00:36:15,000 --> 00:36:17,000
给大家分享一下

982
00:36:17,000 --> 00:36:20,000
所以你猜他在凭我做什么

983
00:36:20,000 --> 00:36:21,000
不知道搬家了

984
00:36:21,000 --> 00:36:23,000
因为 you know

985
00:36:23,000 --> 00:36:26,000
他在回复别人的那个问题的时候

986
00:36:26,000 --> 00:36:28,000
说你最近怎么样啊

987
00:36:28,000 --> 00:36:29,000
不是你是通勤啊

988
00:36:29,000 --> 00:36:31,000
还是搬过去了啊

989
00:36:31,000 --> 00:36:34,000
然后他回说 had to move

990
00:36:34,000 --> 00:36:36,000
所以应该是忙着搬家吧

991
00:36:36,000 --> 00:36:38,000
所以他肯定是入职了搬过去了

992
00:36:38,000 --> 00:36:40,000
然后我在想他去难道再写一个

993
00:36:40,000 --> 00:36:46,000
苹果的就是 the official package manager for OS X

994
00:36:46,000 --> 00:36:49,000
那不是 App Store

995
00:36:49,000 --> 00:36:52,000
也有可能不知道

996
00:36:52,000 --> 00:36:54,000
问题是我觉得就是这样一个人

997
00:36:54,000 --> 00:36:55,000
你把他拉到苹果去

998
00:36:55,000 --> 00:36:58,000
他你即便让他继续在那做

999
00:36:58,000 --> 00:37:02,000
叫什么三个 level support

1000
00:37:02,000 --> 00:37:06,000
就是为程序员解决程序员的需求

1001
00:37:06,000 --> 00:37:08,000
也已经非常有意义了

1002
00:37:08,000 --> 00:37:09,000
不是吗

1003
00:37:09,000 --> 00:37:10,000
就是你哪怕只在苹果内部

1004
00:37:10,000 --> 00:37:13,000
让他为苹果内部的程序员服务

1005
00:37:13,000 --> 00:37:16,000
已经就他不需要去开发什么面性

1006
00:37:16,000 --> 00:37:18,000
最终用户的产品

1007
00:37:18,000 --> 00:37:19,000
嗯

1008
00:37:19,000 --> 00:37:20,000
没错

1009
00:37:20,000 --> 00:37:21,000
好吧

1010
00:37:21,000 --> 00:37:22,000
这个小新闻也就到此为止

1011
00:37:22,000 --> 00:37:24,000
还有一个最后一则小新闻是

1012
00:37:24,000 --> 00:37:27,000
Reacted for Android 最近发布了

1013
00:37:27,000 --> 00:37:33,000
然后有一个跨时代的理想可能终于要实现了

1014
00:37:33,000 --> 00:37:34,000
就是在同一台电脑上

1015
00:37:34,000 --> 00:37:37,000
编写一套 JS 的代码

1016
00:37:37,000 --> 00:37:41,000
然后同时在 iPhone 和安卓上

1017
00:37:41,000 --> 00:37:43,000
渲染出两个原生的界面

1018
00:37:43,000 --> 00:37:45,000
这个还是蛮酷的

1019
00:37:45,000 --> 00:37:47,000
依次编写到处运行

1020
00:37:47,000 --> 00:37:49,000
为什么感觉像 Java

1021
00:37:49,000 --> 00:37:51,000
Script

1022
00:37:51,000 --> 00:37:55,000
Java 和 JavaScript 最终速度同归

1023
00:37:55,000 --> 00:38:00,000
他们之前不是问 Java 和 JavaScript 的区别是什么吗

1024
00:38:00,000 --> 00:38:03,000
就像雷锋和雷锋塔去

1025
00:38:03,000 --> 00:38:05,000
其实我也没有那么远

1026
00:38:05,000 --> 00:38:07,000
怎么说呢

1027
00:38:07,000 --> 00:38:13,000
我觉得 Java 当初搞 Swing 和另一个它叫什么

1028
00:38:13,000 --> 00:38:18,000
JavaFX 还是什么

1029
00:38:18,000 --> 00:38:20,000
之类的吧

1030
00:38:20,000 --> 00:38:21,000
对

1031
00:38:21,000 --> 00:38:22,000
其实也是想要跨平台

1032
00:38:22,000 --> 00:38:30,000
但最终历史的选择是有限度的接受他们

1033
00:38:30,000 --> 00:38:32,000
但是很大的程度上还是抛弃他们

1034
00:38:32,000 --> 00:38:34,000
对

1035
00:38:34,000 --> 00:38:36,000
现在 react-native 的方法

1036
00:38:36,000 --> 00:38:40,000
其实在我看来好像不好说

1037
00:38:40,000 --> 00:38:44,000
你说它是 write once run everywhere

1038
00:38:44,000 --> 00:38:46,000
好像也说得过去吧

1039
00:38:46,000 --> 00:38:50,000
不过他们自己的官方口号是 learn once write everywhere

1040
00:38:50,000 --> 00:38:52,000
所以很难

1041
00:38:52,000 --> 00:38:54,000
对

1042
00:38:54,000 --> 00:38:58,000
我相信这个技术所解决的一个痛点是开发人员的痛点

1043
00:38:58,000 --> 00:39:00,000
但并不是市场的痛点

1044
00:39:00,000 --> 00:39:08,000
每一个平台的用户都希望自己使用的 APP 是最快的

1045
00:39:08,000 --> 00:39:10,000
是最经过优化的

1046
00:39:10,000 --> 00:39:12,000
对

1047
00:39:12,000 --> 00:39:26,000
只有资金和时间不足的公司才会想要通过这种一次书写到处运行的方式来完成用户交互的部分

1048
00:39:26,000 --> 00:39:28,000
那

1049
00:39:28,000 --> 00:39:30,000
不过我觉得它这个有一个好处

1050
00:39:30,000 --> 00:39:32,000
就是说至少可以

1051
00:39:32,000 --> 00:39:34,000
如果我们按一个经典的 MVC 的结构来讲

1052
00:39:34,000 --> 00:39:36,000
它至少可以实现 model 和 controller

1053
00:39:36,000 --> 00:39:40,000
可以用同一套 JS 代码来做

1054
00:39:40,000 --> 00:39:44,000
然后 view 的话就是各平台用各自平台自己原生的那些接口了

1055
00:39:44,000 --> 00:39:46,000
嗯

1056
00:39:46,000 --> 00:39:48,000
还好吧

1057
00:39:48,000 --> 00:39:50,000
OK

1058
00:39:50,000 --> 00:39:51,000
就我也很难说

1059
00:39:51,000 --> 00:39:55,000
我觉得内心里是抗拒这种东西的

1060
00:39:55,000 --> 00:40:00,000
但是如果跨平台的需求一直在那

1061
00:40:00,000 --> 00:40:01,000
换句话说

1062
00:40:01,000 --> 00:40:08,000
如果 Android 和 Apple 阵营的这种互相竞争

1063
00:40:08,000 --> 00:40:13,000
互相良性竞争的状况还能持续比如说 10 年

1064
00:40:13,000 --> 00:40:14,000
嗯

1065
00:40:14,000 --> 00:40:17,000
那这一套东西还是大有所为的

1066
00:40:17,000 --> 00:40:23,000
但是任何一方如果流露出了被打败的姿态

1067
00:40:23,000 --> 00:40:26,000
那我觉得这种跨平台的技术也很宽敦

1068
00:40:26,000 --> 00:40:29,000
也很快就失去它的价值了

1069
00:40:29,000 --> 00:40:31,000
所以说只能走着瞧

1070
00:40:31,000 --> 00:40:33,000
对

1071
00:40:33,000 --> 00:40:37,000
但但不管怎么说它的学习成本至少不是那么更多

1072
00:40:37,000 --> 00:40:41,000
所以学一学也没什么太大的问题就是

1073
00:40:41,000 --> 00:40:43,000
好

1074
00:40:43,000 --> 00:40:48,000
今天最后一则新闻是前两天才发生的事吧

1075
00:40:48,000 --> 00:40:49,000
对

1076
00:40:49,000 --> 00:40:53,000
美国有一个叫做阿赫德的小男孩

1077
00:40:53,000 --> 00:40:54,000
做了

1078
00:40:54,000 --> 00:40:59,000
听这个名字就知道他是中东后裔了

1079
00:40:59,000 --> 00:41:00,000
对

1080
00:41:00,000 --> 00:41:05,000
他做了一个用那些什么各种连击件

1081
00:41:05,000 --> 00:41:08,000
原机件做了一块表

1082
00:41:08,000 --> 00:41:09,000
电子表

1083
00:41:09,000 --> 00:41:11,000
穷玩车富玩表

1084
00:41:11,000 --> 00:41:13,000
哈哈哈

1085
00:41:13,000 --> 00:41:16,000
放在这里忽然觉得好违和

1086
00:41:16,000 --> 00:41:19,000
然后他把这个表带到学校去玩

1087
00:41:19,000 --> 00:41:21,000
然后被老师认为是一个炸弹

1088
00:41:21,000 --> 00:41:22,000
对

1089
00:41:22,000 --> 00:41:24,000
被老师误认为是一个炸弹

1090
00:41:24,000 --> 00:41:25,000
然后叫了警察

1091
00:41:25,000 --> 00:41:29,000
然后他被在一个看众所里面待一段时间

1092
00:41:29,000 --> 00:41:30,000
对

1093
00:41:30,000 --> 00:41:34,000
然后这个新闻就报道出来了

1094
00:41:34,000 --> 00:41:35,000
啊

1095
00:41:35,000 --> 00:41:36,000
他叫阿赫德是他的名

1096
00:41:36,000 --> 00:41:37,000
他姓

1097
00:41:37,000 --> 00:41:38,000
阿赫德

1098
00:41:38,000 --> 00:41:40,000
阿赫德

1099
00:41:40,000 --> 00:41:41,000
阿赫德

1100
00:41:41,000 --> 00:41:43,000
这是一个很典型的回照名字

1101
00:41:43,000 --> 00:41:44,000
就是说了说

1102
00:41:44,000 --> 00:41:46,000
就是穆斯林的名字

1103
00:41:46,000 --> 00:41:47,000
对

1104
00:41:47,000 --> 00:41:48,000
对

1105
00:41:48,000 --> 00:41:49,000
非常典型

1106
00:41:49,000 --> 00:41:52,000
然后这件事情在美国就引起了轩然大波

1107
00:41:52,000 --> 00:41:53,000
各种各样的事

1108
00:41:53,000 --> 00:41:56,000
我之前看到的最新消息是那个

1109
00:41:56,000 --> 00:41:58,000
Zuckerberg 已经给他说

1110
00:41:58,000 --> 00:42:01,000
亲自邀请他说你可以来 Facebook

1111
00:42:03,000 --> 00:42:07,000
然后说好像又最近又接受什么奥巴马总统的邀请又 blah blah

1112
00:42:07,000 --> 00:42:09,000
反正这个是个挺搞笑的事

1113
00:42:09,000 --> 00:42:11,000
美国政治我们就不去评头论足了

1114
00:42:11,000 --> 00:42:14,000
这个是我们 IPM 旗下

1115
00:42:14,000 --> 00:42:16,000
已经开了一档节目选美的事情

1116
00:42:16,000 --> 00:42:17,000
对

1117
00:42:17,000 --> 00:42:18,000
但是

1118
00:42:18,000 --> 00:42:20,000
反正这事情挺好玩的

1119
00:42:20,000 --> 00:42:22,000
就如果这个事情在中国发生会怎么样

1120
00:42:24,000 --> 00:42:25,000
你说的好玩吗

1121
00:42:25,000 --> 00:42:27,000
我觉得其实是很

1122
00:42:28,000 --> 00:42:29,000
让人哭笑

1123
00:42:29,000 --> 00:42:30,000
让人

1124
00:42:31,000 --> 00:42:33,000
让人想要苦笑的一件事情

1125
00:42:33,000 --> 00:42:36,000
就在这个星球上

1126
00:42:36,000 --> 00:42:38,000
这种

1127
00:42:38,000 --> 00:42:40,000
当然这种说法非常左派

1128
00:42:40,000 --> 00:42:44,000
就是这种族裔和血统带来的问题

1129
00:42:44,000 --> 00:42:45,000
居然会影响到你

1130
00:42:46,000 --> 00:42:49,000
再去做这种

1131
00:42:50,000 --> 00:42:53,000
完全跟政治活动无关的

1132
00:42:54,000 --> 00:42:55,000
Hobby 行为的行为

1133
00:42:55,000 --> 00:42:57,000
居然会影响你做这件事情

1134
00:42:58,000 --> 00:43:02,000
就你因为你的肤色或者是你的性命或者是你的长相

1135
00:43:02,000 --> 00:43:06,000
会导致你在做某件特定事情的时候

1136
00:43:10,000 --> 00:43:12,000
就突然蒙受这种不白之冤

1137
00:43:12,000 --> 00:43:14,000
我觉得还是挺让人悲伤的一些事情

1138
00:43:15,000 --> 00:43:16,000
对

1139
00:43:16,000 --> 00:43:17,000
这件事情

1140
00:43:17,000 --> 00:43:18,000
其实我刚才我说这个事情

1141
00:43:18,000 --> 00:43:21,000
你一听起来可能是阿拉伯人或者是穆斯林

1142
00:43:22,000 --> 00:43:23,000
感觉离我们挺远的

1143
00:43:23,000 --> 00:43:25,000
其实这件事情离我们并不远

1144
00:43:25,000 --> 00:43:28,000
因为前段时间刚好有另外一个事发生了

1145
00:43:28,000 --> 00:43:29,000
就是美国有一个

1146
00:43:30,000 --> 00:43:33,000
我忘了是大学教授还是一个什么样的研究员

1147
00:43:33,000 --> 00:43:35,000
一个很资深的一个人

1148
00:43:35,000 --> 00:43:37,000
他被 CIA

1149
00:43:37,000 --> 00:43:42,000
就是中央情报局指控为是中国政府的间谍

1150
00:43:42,000 --> 00:43:46,000
就是在帮中国政府窃取美国的研究

1151
00:43:46,000 --> 00:43:48,000
或者是机密研究机密吧

1152
00:43:48,000 --> 00:43:51,000
后来证明他其实是无罪的

1153
00:43:52,000 --> 00:43:55,000
所以其实那 CIA 的指控

1154
00:43:55,000 --> 00:43:57,000
无非很多时候也是基于这个

1155
00:43:58,000 --> 00:44:00,000
种族和肤色

1156
00:44:00,000 --> 00:44:02,000
其实也有一点种族歧视的成分在里面

1157
00:44:02,000 --> 00:44:09,000
就我不知道这些事情在中国发生会怎么样

1158
00:44:10,000 --> 00:44:13,000
我觉得中国没有这么敏感吧

1159
00:44:14,000 --> 00:44:15,000
其实并不是

1160
00:44:15,000 --> 00:44:17,000
只是说你可能没有太留意到

1161
00:44:17,000 --> 00:44:19,000
比如说我举个很简单的例子

1162
00:44:19,000 --> 00:44:22,000
大家就你们听到这句话

1163
00:44:22,000 --> 00:44:24,000
你自己在中国的人想一下

1164
00:44:24,000 --> 00:44:28,000
你在晚上街头碰见一个黑人

1165
00:44:28,000 --> 00:44:29,000
你会怎么样

1166
00:44:29,000 --> 00:44:33,000
我再玩好吧

1167
00:44:35,000 --> 00:44:36,000
如果我没出国的话

1168
00:44:36,000 --> 00:44:38,000
一定会觉得有点恐怖

1169
00:44:40,000 --> 00:44:42,000
除了我觉得更加可怕

1170
00:44:42,000 --> 00:44:44,000
出国还要看在哪

1171
00:44:44,000 --> 00:44:46,000
比如说如果是在巴黎的话

1172
00:44:46,000 --> 00:44:47,000
可能你还会觉得

1173
00:44:47,000 --> 00:44:48,000
在皇后区

1174
00:44:48,000 --> 00:44:49,000
纽约的皇后区

1175
00:44:49,000 --> 00:44:50,000
还是布鲁克林

1176
00:44:50,000 --> 00:44:52,000
这个太正常了

1177
00:44:52,000 --> 00:44:54,000
就还是要跟你

1178
00:44:54,000 --> 00:45:05,000
你会我们这种结合当前的场景来去做出 stereotype 的能力

1179
00:45:05,000 --> 00:45:07,000
实际上是一种生存的本能

1180
00:45:07,000 --> 00:45:15,000
就如果我们在动物园的那个官鸟区看到一只老虎

1181
00:45:15,000 --> 00:45:17,000
那肯定会吓掉死

1182
00:45:17,000 --> 00:45:21,000
但是在老虎区看到老虎就会觉得是正常了

1183
00:45:21,000 --> 00:45:23,000
所以你你会觉得这个地方是危险的地方

1184
00:45:23,000 --> 00:45:25,000
所以这个地方出现一个危险的人物

1185
00:45:25,000 --> 00:45:28,000
那代表我会可能会产生危险

1186
00:45:28,000 --> 00:45:32,000
这是一这是一个很自然的反应

1187
00:45:32,000 --> 00:45:37,000
所以你这是不再为种族主义开脱了

1188
00:45:37,000 --> 00:45:43,000
我只能说我理解种族

1189
00:45:43,000 --> 00:45:46,000
就我能理解种族主义为什么会存在

1190
00:45:46,000 --> 00:45:51,000
但是并不代表我就赞同这种

1191
00:45:51,000 --> 00:45:58,000
根据肤色来划定其潜在可能性的方法

1192
00:45:58,000 --> 00:46:00,000
这个我也说不好

1193
00:46:00,000 --> 00:46:02,000
其实就穆斯林这件事情来说

1194
00:46:02,000 --> 00:46:07,000
德国目前开放大量难民涌入境内

1195
00:46:07,000 --> 00:46:11,000
其实里面也是以穆斯林为压倒性多数

1196
00:46:11,000 --> 00:46:14,000
但不能就因此会认为说

1197
00:46:14,000 --> 00:46:20,000
这个会冲击到德国的宗教组成

1198
00:46:20,000 --> 00:46:24,000
或者说影响治安之类的事情

1199
00:46:24,000 --> 00:46:29,000
这即便你有这样的恐慌这样的担忧

1200
00:46:29,000 --> 00:46:33,000
但是这种事情确实不一定会发生的

1201
00:46:33,000 --> 00:46:38,000
对我觉得这个跟我本节目说的有点远

1202
00:46:38,000 --> 00:46:41,000
对不过刚刚我说阿姆这个案子

1203
00:46:41,000 --> 00:46:43,000
是一个想提另外一个事

1204
00:46:43,000 --> 00:46:45,000
就是说就是一发生中国有两个含义

1205
00:46:45,000 --> 00:46:48,000
一个是说一个有种族

1206
00:46:48,000 --> 00:46:50,000
这个明显种族特征的一个小孩

1207
00:46:50,000 --> 00:46:52,000
在做这么一件事

1208
00:46:52,000 --> 00:46:54,000
被认为是危险的事

1209
00:46:54,000 --> 00:46:55,000
会在中国会怎么样

1210
00:46:55,000 --> 00:46:56,000
另外一个就是说其实

1211
00:46:56,000 --> 00:46:59,000
哪怕是一个就正常的中国小孩

1212
00:46:59,000 --> 00:47:01,000
自己用那个电子元气架做了一块表

1213
00:47:01,000 --> 00:47:02,000
被带到学校去

1214
00:47:02,000 --> 00:47:04,000
大家会认为它是一个炸弹吗

1215
00:47:04,000 --> 00:47:05,000
肯定不会吧

1216
00:47:05,000 --> 00:47:09,000
我觉得其实会被在中国反而是会被鼓励的

1217
00:47:09,000 --> 00:47:11,000
我觉得动手能力强什么什么的对吧

1218
00:47:11,000 --> 00:47:12,000
会被打的吧

1219
00:47:12,000 --> 00:47:14,000
你不写作业搞这些破误

1220
00:47:14,000 --> 00:47:17,000
你这是什么样的童年

1221
00:47:17,000 --> 00:47:20,000
你不是吗

1222
00:47:20,000 --> 00:47:23,000
我觉得我小时候想要做一点跟考书

1223
00:47:23,000 --> 00:47:25,000
无关的事情基本上都是会被说的

1224
00:47:25,000 --> 00:47:26,000
不是啊

1225
00:47:26,000 --> 00:47:30,000
我觉得我感觉我小时候的学校还是挺就是自扫父母也好

1226
00:47:30,000 --> 00:47:34,000
老学还是挺鼓励这种发明创造啊动手能力的

1227
00:47:34,000 --> 00:47:38,000
虽然说在这个绩效考核上

1228
00:47:38,000 --> 00:47:39,000
他们并不是真的是这么想的

1229
00:47:39,000 --> 00:47:42,000
但是起码在就在舆论上

1230
00:47:42,000 --> 00:47:44,000
他们还是会坚持这么说

1231
00:47:45,000 --> 00:47:47,000
所谓绩效考就是期末考试了

1232
00:47:47,000 --> 00:47:50,000
说得是

1233
00:47:50,000 --> 00:47:54,000
我上海有一次我小时候去航模组

1234
00:47:54,000 --> 00:47:58,000
然后我是把飞机的尾巴粘到了还是什么

1235
00:47:58,000 --> 00:48:01,000
不是沾一架什么飞机

1236
00:48:01,000 --> 00:48:04,000
B 29 之类的一个飞机

1237
00:48:04,000 --> 00:48:06,000
然后把他唯一给沾到

1238
00:48:06,000 --> 00:48:10,000
然后黄默老师说了很长一段话

1239
00:48:10,000 --> 00:48:11,000
说什么大意识

1240
00:48:11,000 --> 00:48:14,000
你在这件事情上花费时间太多了

1241
00:48:14,000 --> 00:48:18,000
什么还是要好好去学习啊

1242
00:48:18,000 --> 00:48:19,000
乱起码到

1243
00:48:19,000 --> 00:48:22,000
然后同样的事情在我上高中的时候又发生了一遍

1244
00:48:22,000 --> 00:48:26,000
我高中的时候在那个围棋社还是什么地方

1245
00:48:26,000 --> 00:48:29,000
应该是围棋社跟老师下棋

1246
00:48:29,000 --> 00:48:35,000
然后有一个同学来找我去什么物理奥赛组还是什么

1247
00:48:35,000 --> 00:48:37,000
然后我就说我下完棋再去

1248
00:48:37,000 --> 00:48:40,000
然后那个下棋老师非常惊讶瞪着我说

1249
00:48:40,000 --> 00:48:41,000
奥赛比较重要

1250
00:48:41,000 --> 00:48:45,000
你怎么能摊摊着下棋不去参加奥赛班

1251
00:48:45,000 --> 00:48:48,000
你赶紧去就他是交围棋的老师啊

1252
00:48:48,000 --> 00:48:49,000
他都说出这样的话

1253
00:48:49,000 --> 00:48:50,000
我觉得

1254
00:48:50,000 --> 00:48:54,000
随便他们在人们心目中还是下意识的给这个行当分了个三六九等

1255
00:48:54,000 --> 00:48:56,000
对

1256
00:48:56,000 --> 00:48:58,000
然后其实人种也是

1257
00:48:58,000 --> 00:49:04,000
就是或者说足一也是就莫名其妙被分出了三六九等

1258
00:49:04,000 --> 00:49:05,000
唉

1259
00:49:05,000 --> 00:49:07,000
其实我们看来离真正的自由还挺远的

1260
00:49:07,000 --> 00:49:09,000
对

1261
00:49:09,000 --> 00:49:10,000
左派还需要努力啊

1262
00:49:10,000 --> 00:49:11,000
这世界上

1263
00:49:11,000 --> 00:49:13,000
左棍尚需努力啊

1264
00:49:13,000 --> 00:49:17,000
右棍还是牢牢的把持这个世界

1265
00:49:17,000 --> 00:49:18,000
嗯

1266
00:49:19,000 --> 00:49:20,000
虽然我也是个右棍嘛

1267
00:49:20,000 --> 00:49:22,000
今天的这个

1268
00:49:22,000 --> 00:49:24,000
我就不讨论我们的政治倾向了哈

1269
00:49:24,000 --> 00:49:26,000
我们今天的新闻环节

1270
00:49:26,000 --> 00:49:28,000
新闻联播到此结束

1271
00:49:28,000 --> 00:49:30,000
科技新闻联播到此结束

1272
00:49:30,000 --> 00:49:32,000
科技社会新闻到此结束

1273
00:49:32,000 --> 00:49:34,000
科技社会新闻到此结束

1274
00:49:34,000 --> 00:49:36,000
今天的正题是什么

1275
00:49:37,000 --> 00:49:38,000
嗯

1276
00:49:38,000 --> 00:49:40,000
其实今天的正题是我们没有正题

1277
00:49:40,000 --> 00:49:45,000
就我觉得应该是时候把这个兔子从帽子里面揪出来了

1278
00:49:45,000 --> 00:49:47,000
我们的这个这个这个这个这个我有个梗

1279
00:49:47,000 --> 00:49:48,000
我有个梗

1280
00:49:48,000 --> 00:49:49,000
啊

1281
00:49:50,000 --> 00:49:51,000
ghost in the x code

1282
00:49:53,000 --> 00:49:54,000
啊

1283
00:49:54,000 --> 00:49:55,000
啊

1284
00:49:56,000 --> 00:49:59,000
不我刚才想说的是从本期节目开始

1285
00:49:59,000 --> 00:50:01,000
我们不会再专门的找一个

1286
00:50:02,000 --> 00:50:04,000
呃

1287
00:50:04,000 --> 00:50:05,000
编程领域里面的话题

1288
00:50:06,000 --> 00:50:07,000
就不会刻意找

1289
00:50:07,000 --> 00:50:08,000
但是有的话也可以讲

1290
00:50:08,000 --> 00:50:10,000
来来来贯穿整个节目

1291
00:50:11,000 --> 00:50:13,000
就我们之前找话题找的非常辛苦

1292
00:50:13,000 --> 00:50:14,000
所以也造成了

1293
00:50:15,000 --> 00:50:17,000
呃我们在录节目的时候每次都非常的

1294
00:50:20,000 --> 00:50:21,000
就应该怎么说呢

1295
00:50:21,000 --> 00:50:23,000
觉得投入和产出不成正比吧

1296
00:50:24,000 --> 00:50:25,000
就是那个跟报

1297
00:50:26,000 --> 00:50:28,000
以前那个报纸编辑不一样

1298
00:50:28,000 --> 00:50:29,000
每个选题会嘛

1299
00:50:29,000 --> 00:50:30,000
对吧

1300
00:50:30,000 --> 00:50:32,000
对

1301
00:50:32,000 --> 00:50:33,000
就我们已经这个什么无狼财进了

1302
00:50:34,000 --> 00:50:35,000
为什么是无狼财进

1303
00:50:36,000 --> 00:50:37,000
嗯

1304
00:50:37,000 --> 00:50:38,000
你是说掏狼财进

1305
00:50:38,000 --> 00:50:40,000
所以你是你你是还没财进是吧

1306
00:50:41,000 --> 00:50:42,000
那从

1307
00:50:42,000 --> 00:50:43,000
没有没有没有

1308
00:50:43,000 --> 00:50:44,000
就我我是跑啊

1309
00:50:44,000 --> 00:50:45,000
所以你你是主啊

1310
00:50:46,000 --> 00:50:47,000
我记得

1311
00:50:48,000 --> 00:50:50,000
我记得我听谁说有人在 IT 公论的

1312
00:50:51,000 --> 00:50:52,000
好像是那次现场吧

1313
00:50:52,000 --> 00:50:53,000
说呃

1314
00:50:53,000 --> 00:50:55,000
IT 公论是 Lawrence 的节目

1315
00:50:55,000 --> 00:50:57,000
Rail 只是一个捧根的

1316
00:50:57,000 --> 00:50:58,000
嗯嗯

1317
00:50:58,000 --> 00:50:59,000
嗯嗯

1318
00:50:59,000 --> 00:51:00,000
那我觉得 IT 公论

1319
00:51:00,000 --> 00:51:01,000
那很恐怕其实是 real 的节目

1320
00:51:01,000 --> 00:51:02,000
然后我是一个方面

1321
00:51:02,000 --> 00:51:03,000
反了反了反了

1322
00:51:03,000 --> 00:51:04,000
反了

1323
00:51:04,000 --> 00:51:05,000
The reverse is true

1324
00:51:05,000 --> 00:51:06,000
Come on

1325
00:51:07,000 --> 00:51:09,000
哎不扯这个了

1326
00:51:09,000 --> 00:51:10,000
好啊

1327
00:51:10,000 --> 00:51:11,000
其实这个事儿

1328
00:51:11,000 --> 00:51:16,000
我看大家呃今天我们我上午录的那个 IT 公论已经大概讲过了

1329
00:51:16,000 --> 00:51:19,000
就是那个 Xcode ghost 的这个安全事故吧

1330
00:51:19,000 --> 00:51:20,000
嗯

1331
00:51:20,000 --> 00:51:21,000
来龙去脉就不交代了

1332
00:51:21,000 --> 00:51:22,000
大家呃

1333
00:51:22,000 --> 00:51:24,000
听到这个词如果你不明白是什么

1334
00:51:24,000 --> 00:51:26,000
估计也就没有必要再

1335
00:51:27,000 --> 00:51:28,000
呃你可以去深究

1336
00:51:28,000 --> 00:51:29,000
你可以去先看一下报导

1337
00:51:29,000 --> 00:51:30,000
我们就接着往下讲了

1338
00:51:31,000 --> 00:51:32,000
对

1339
00:51:33,000 --> 00:51:34,000
嗯

1340
00:51:34,000 --> 00:51:38,000
简单来说就是 Xcode 有人下了一个什么啊

1341
00:51:38,000 --> 00:51:39,000
这台就火了

1342
00:51:39,000 --> 00:51:40,000
我还是又讲了

1343
00:51:40,000 --> 00:51:42,000
简单说就是 Xcode

1344
00:51:42,000 --> 00:51:46,000
就因为苹果那个 CDM 不给力很多开发者顺手下了一个

1345
00:51:46,000 --> 00:51:50,000
从什么迅雷下了一个 Xcode 回来

1346
00:51:50,000 --> 00:51:54,000
然后发现编译出来的软件被搞了被装了后门

1347
00:51:54,000 --> 00:51:56,000
揪起原因是因为下的编译器有问题

1348
00:51:56,000 --> 00:51:58,000
Xcode 被搞过

1349
00:51:58,000 --> 00:51:59,000
对

1350
00:51:59,000 --> 00:52:00,000
嗯

1351
00:52:00,000 --> 00:52:03,000
所以这件事情我们先先揪一下吧

1352
00:52:03,000 --> 00:52:05,000
你觉得苹果有问题有责任吗

1353
00:52:06,000 --> 00:52:07,000
嗯

1354
00:52:07,000 --> 00:52:09,000
我觉得从技术上来讲

1355
00:52:09,000 --> 00:52:11,000
苹果关苹果 P 是

1356
00:52:12,000 --> 00:52:13,000
但是从

1357
00:52:15,000 --> 00:52:16,000
嗯

1358
00:52:16,000 --> 00:52:20,000
从一个比较 metaphysical 的角度来讲

1359
00:52:21,000 --> 00:52:24,000
苹果采用的这种模式导致了会有今天这个下场

1360
00:52:25,000 --> 00:52:27,000
所以就他的问题在哪里

1361
00:52:27,000 --> 00:52:30,000
就是 centralized

1362
00:52:31,000 --> 00:52:32,000
呃

1363
00:52:32,000 --> 00:52:33,000
就是这样一种

1364
00:52:34,000 --> 00:52:36,000
独此一家的工具

1365
00:52:37,000 --> 00:52:38,000
嗯

1366
00:52:38,000 --> 00:52:39,000
导致了这种情况的发生

1367
00:52:39,000 --> 00:52:40,000
我觉得就是

1368
00:52:40,000 --> 00:52:44,000
这种情况为什么会不会在其他的世界里发生

1369
00:52:44,000 --> 00:52:46,000
就是因为其他世界比如或者说

1370
00:52:46,000 --> 00:52:48,000
为什么不会在比如说 C 世界里发生

1371
00:52:48,000 --> 00:52:49,000
是因为 C 世界里面

1372
00:52:50,000 --> 00:52:51,000
呃

1373
00:52:51,000 --> 00:52:53,000
你有很多编译器可以选择

1374
00:52:53,000 --> 00:52:56,000
而且你也有很多下载点可以选择

1375
00:52:56,000 --> 00:52:58,000
不对啊

1376
00:52:58,000 --> 00:52:59,000
我觉得这个是这个问题

1377
00:52:59,000 --> 00:53:01,000
就是说正确正确答案是不知道

1378
00:53:01,000 --> 00:53:03,000
你不知道其他地方有没有那次的问题

1379
00:53:03,000 --> 00:53:04,000
就他们好像就很多人说

1380
00:53:05,000 --> 00:53:08,000
那你们下的这个安卓的开发环境

1381
00:53:08,000 --> 00:53:09,000
会不会有这个问题

1382
00:53:09,000 --> 00:53:10,000
没有人知道

1383
00:53:10,000 --> 00:53:11,000
哦

1384
00:53:11,000 --> 00:53:12,000
安卓的是另外一件事呢

1385
00:53:12,000 --> 00:53:13,000
就是呃

1386
00:53:13,000 --> 00:53:17,000
安卓的情况其实要比苹果严重很多

1387
00:53:17,000 --> 00:53:19,000
因为安卓的比如说钓鱼平

1388
00:53:19,000 --> 00:53:20,000
呃

1389
00:53:20,000 --> 00:53:21,000
什么钓鱼平台

1390
00:53:21,000 --> 00:53:23,000
支付平台是你强制你要去

1391
00:53:23,000 --> 00:53:24,000
或者也不是强制

1392
00:53:24,000 --> 00:53:25,000
就是呃

1393
00:53:25,000 --> 00:53:26,000
在安卓里面

1394
00:53:26,000 --> 00:53:30,000
如果你把一个支付平台连入你的 APP 的话

1395
00:53:30,000 --> 00:53:31,000
啊

1396
00:53:31,000 --> 00:53:34,000
你是完全可以去读写说这个支付平台里面

1397
00:53:34,000 --> 00:53:35,000
到底输入了什么信息

1398
00:53:35,000 --> 00:53:36,000
去

1399
00:53:36,000 --> 00:53:37,000
但是对

1400
00:53:37,000 --> 00:53:40,000
就是因为你在安卓上面别说画对话框了

1401
00:53:40,000 --> 00:53:41,000
你只需要去

1402
00:53:41,000 --> 00:53:44,000
你甚至都不需要去钓鱼去画一个假的对话框

1403
00:53:44,000 --> 00:53:49,000
你可以直接去读那个跳出来的支付平台的那个对话框里面写了什么

1404
00:53:49,000 --> 00:53:51,000
他没有那个进程分离吗

1405
00:53:51,000 --> 00:53:52,000
他不

1406
00:53:52,000 --> 00:53:56,000
你都把对方的支付平台的 SDK 集成到你的 APP 里面了

1407
00:53:56,000 --> 00:53:57,000
你要去搞什么进程分离啊

1408
00:53:57,000 --> 00:54:01,000
那这个是这个是这个是应用内部的问题

1409
00:54:01,000 --> 00:54:04,000
那这个我觉得这个没有办法肯定是是是是是这样子的

1410
00:54:04,000 --> 00:54:07,000
那如果你都不信这个没有问题啊

1411
00:54:07,000 --> 00:54:13,000
但我的问题是说你怎么知道你用的这个安卓的编译器也好

1412
00:54:13,000 --> 00:54:14,000
或者 c 的编译器也好

1413
00:54:14,000 --> 00:54:15,000
没有被人搞过呢

1414
00:54:15,000 --> 00:54:19,000
我没有办法知道自己的安卓的编译器

1415
00:54:19,000 --> 00:54:22,000
所以我觉得这个这个事情苹果和其他厂商是一样

1416
00:54:22,000 --> 00:54:23,000
就跟它的分发方

1417
00:54:23,000 --> 00:54:24,000
跟它的分发方

1418
00:54:24,000 --> 00:54:26,000
就是这个组织方式是没有关系的

1419
00:54:26,000 --> 00:54:30,000
我的我的理解就是假如是在其他的

1420
00:54:30,000 --> 00:54:34,000
比如说一个我们想象另外一种软件分发的方式

1421
00:54:34,000 --> 00:54:40,000
就是在那个苹果这边

1422
00:54:40,000 --> 00:54:46,000
它只给出一个编辑器的编译器的 specification

1423
00:54:46,000 --> 00:54:52,000
然后每个国家或者说每一个不同的厂商都可以写出自己的

1424
00:54:52,000 --> 00:54:55,000
为 Xcode sorry

1425
00:54:55,000 --> 00:54:58,000
为 iOS 开发程序的编辑器

1426
00:54:58,000 --> 00:54:59,000
和编译器

1427
00:54:59,000 --> 00:55:02,000
然后你可以任选其中一家来写出自己的程序来

1428
00:55:02,000 --> 00:55:06,000
就比如说现在在 windows 上面你要给你要写一个 windows 程序

1429
00:55:06,000 --> 00:55:08,000
除了微软的 virus view 可以用之外

1430
00:55:08,000 --> 00:55:10,000
你还有很多一大逼其他的东西可以用

1431
00:55:10,000 --> 00:55:14,000
其实在 90 年代的时候这个状况是非常好的

1432
00:55:14,000 --> 00:55:16,000
就是百家齐放等等

1433
00:55:16,000 --> 00:55:18,000
叫什么来着

1434
00:55:18,000 --> 00:55:19,000
百家称名

1435
00:55:19,000 --> 00:55:21,000
对就是什么 Bowland

1436
00:55:21,000 --> 00:55:23,000
什么 Cold Warrior

1437
00:55:23,000 --> 00:55:26,000
什么 Turbo Sea 之类的

1438
00:55:26,000 --> 00:55:29,000
你可以用各种各种的编辑器和编辑器

1439
00:55:29,000 --> 00:55:32,000
编辑器来书写一个平台上的应用

1440
00:55:32,000 --> 00:55:33,000
没有啊

1441
00:55:33,000 --> 00:55:35,000
我觉得你并没有解决这个问题

1442
00:55:35,000 --> 00:55:38,000
只是把这个问题的皮球踢给了另外一拨人

1443
00:55:38,000 --> 00:55:41,000
就是说你说不会有一个编辑器出了问题

1444
00:55:41,000 --> 00:55:42,000
所有人都中招

1445
00:55:42,000 --> 00:55:46,000
而是说因为有十个编辑器可能只有三个有问题

1446
00:55:47,000 --> 00:55:49,000
这不已经是很好的了吗

1447
00:55:49,000 --> 00:55:51,000
不是但我觉得这并不从根本上解决这个问题

1448
00:55:51,000 --> 00:55:52,000
所以我觉得

1449
00:55:52,000 --> 00:55:54,000
这个问题是没有办法从根本上被解决的

1450
00:55:54,000 --> 00:55:56,000
为什么你会这么认为呢

1451
00:55:56,000 --> 00:56:08,000
我有什么办法去验证一个 B 原的单一发布者的编辑器

1452
00:56:08,000 --> 00:56:10,000
是安全没有问题的

1453
00:56:10,000 --> 00:56:12,000
但至少你可以说

1454
00:56:12,000 --> 00:56:15,000
你相信如果这个编辑器是苹果原

1455
00:56:15,000 --> 00:56:19,000
就是原始就是苹果官方的那一个

1456
00:56:19,000 --> 00:56:22,000
你可以至少相信它不会来搞你对吧

1457
00:56:22,000 --> 00:56:23,000
所以你还是要选择相信吗

1458
00:56:23,000 --> 00:56:25,000
你刚才还是使用了相信这个词不是吧

1459
00:56:25,000 --> 00:56:26,000
对

1460
00:56:26,000 --> 00:56:30,000
所以说底层的信任你还是说你至少要信任一家

1461
00:56:30,000 --> 00:56:31,000
不管是信任哪一家也好

1462
00:56:31,000 --> 00:56:32,000
现在的问题就是说

1463
00:56:33,000 --> 00:56:35,000
开发者因为下载

1464
00:56:35,000 --> 00:56:38,000
因为这个网络的问题或者 cdn 的问题

1465
00:56:38,000 --> 00:56:42,000
他不能从苹果的官方服务器直接下载到一个原始的版本

1466
00:56:42,000 --> 00:56:45,000
或者说他下载过程中不是用的 htps

1467
00:56:45,000 --> 00:56:47,000
而且用的 http

1468
00:56:47,000 --> 00:56:50,000
然后被上次我们的节目一样被缓存服务器

1469
00:56:50,000 --> 00:56:52,000
运营商的缓存搞了

1470
00:56:52,000 --> 00:56:55,000
他也不能保证他下载到的一定就是苹果发布的那一个

1471
00:56:55,000 --> 00:57:00,000
所以这里面其实我觉得唯一可以做的就是验证

1472
00:57:00,000 --> 00:57:02,000
哈希验证

1473
00:57:02,000 --> 00:57:06,000
好吧

1474
00:57:06,000 --> 00:57:07,000
好吧

1475
00:57:07,000 --> 00:57:11,000
所以我其实我们两个有点就是在不同的层次上讨论这个问题

1476
00:57:11,000 --> 00:57:15,000
我是觉得如果你要既然你你要分而至

1477
00:57:15,000 --> 00:57:16,000
你要分而至

1478
00:57:16,000 --> 00:57:17,000
对你要分而至

1479
00:57:17,000 --> 00:57:20,000
就你既然选择一个单一发布商的话

1480
00:57:20,000 --> 00:57:22,000
你无论如何是会面对这个问题的

1481
00:57:22,000 --> 00:57:24,000
因为你就像你刚才说的

1482
00:57:24,000 --> 00:57:26,000
你你只是选择相信苹果而已

1483
00:57:26,000 --> 00:57:30,000
你没有办法确认说苹果就没有在自己的编辑器里面也做手脚

1484
00:57:30,000 --> 00:57:31,000
对吧

1485
00:57:31,000 --> 00:57:33,000
当然我也相信苹果

1486
00:57:33,000 --> 00:57:35,000
这个他在自己编辑器做手脚

1487
00:57:35,000 --> 00:57:36,000
对他没有好处啊

1488
00:57:36,000 --> 00:57:37,000
对吧

1489
00:57:37,000 --> 00:57:38,000
对

1490
00:57:38,000 --> 00:57:39,000
呃

1491
00:57:39,000 --> 00:57:42,000
就我们从利益的角度去出发去想这件事情

1492
00:57:42,000 --> 00:57:47,000
我们至少相信他从这个 incentive 方面他不会去给自己的编辑器做手脚

1493
00:57:47,000 --> 00:57:48,000
但是呢

1494
00:57:48,000 --> 00:57:51,000
就是事情总有一个但是对吧

1495
00:57:51,000 --> 00:57:58,000
就好像当初我你无论你还是我都不会相信希结会在自己的硬盘的 BIOS 上面有放一个木马了不是吗

1496
00:57:58,000 --> 00:58:03,000
但迫于 CIA 的淫威他就是这么做了你有什么办法了

1497
00:58:03,000 --> 00:58:04,000
对对

1498
00:58:04,000 --> 00:58:05,000
对对

1499
00:58:05,000 --> 00:58:12,000
所以从一个从一个我也不知道你作为一个非常 paranoy 的人你居然会选择说我就是相信不然也没有办法

1500
00:58:12,000 --> 00:58:15,000
这其实是一个很分裂的行为不是吗

1501
00:58:15,000 --> 00:58:18,000
对这个这个就是我觉得这个就是问题所在了

1502
00:58:18,000 --> 00:58:25,000
就是说在呃存在着的 close sourced program 这个 program 的情况就是 B 原代码的情况下

1503
00:58:25,000 --> 00:58:29,000
我觉得这个东西都是没有办法去就是彻底相信的

1504
00:58:29,000 --> 00:58:33,000
就好像上次我们讲的我记不记得是在哪里讲的一样

1505
00:58:33,000 --> 00:58:36,000
如果就像 Richard Storman 的说法

1506
00:58:36,000 --> 00:58:39,000
如果这个软件不是你从头到脚写起来的

1507
00:58:39,000 --> 00:58:42,000
如果这个意见里面跑到所有的固件不是开源的

1508
00:58:42,000 --> 00:58:44,000
不是你从头到脚写过的

1509
00:58:44,000 --> 00:58:46,000
这个都是不可以被信任的嘛

1510
00:58:46,000 --> 00:58:48,000
不可以被彻底信任制造

1511
00:58:48,000 --> 00:58:57,000
好吧就如果我们在 RMS 和一个完全对计算机一无所知的 granny 之间画一个 scale 的话

1512
00:58:57,000 --> 00:59:01,000
那我觉得在这一点的看法上我是比你更接近 RMS

1513
00:59:01,000 --> 00:59:03,000
就是

1514
00:59:03,000 --> 00:59:07,000
我觉得如果真的要彻底解决这个问题

1515
00:59:07,000 --> 00:59:10,000
那你只能说所有人的

1516
00:59:10,000 --> 00:59:14,000
就你必须为呃平台的编辑市场

1517
00:59:14,000 --> 00:59:18,000
嗯你必须开放平台的编辑市场做到一个呃

1518
00:59:18,000 --> 00:59:21,000
就至少有一个开源的实现对吧

1519
00:59:21,000 --> 00:59:26,000
对然后才可以保证说如果出现了类似的事情

1520
00:59:26,000 --> 00:59:29,000
你所影响的只是选择了那一个编辑的这些人

1521
00:59:29,000 --> 00:59:31,000
嗯

1522
00:59:31,000 --> 00:59:34,000
然后其实类似的事情早就出现过了

1523
00:59:34,000 --> 00:59:38,000
就是这并不是什么第一次出现这种非常狗血的事情

1524
00:59:38,000 --> 00:59:39,000
嗯

1525
00:59:39,000 --> 00:59:43,000
以前在 09 年的时候曾经有一个病毒叫做

1526
00:59:43,000 --> 00:59:46,000
Win 32 Indoc A 我查到了

1527
00:59:46,000 --> 00:59:50,000
对这个这个病毒的机理就是感染 Delphi

1528
00:59:50,000 --> 00:59:53,000
2009 年的时候 Delphi 还有人用对

1529
00:59:53,000 --> 00:59:56,000
嗯他感染 Delphi 5-7 版本的 IDE

1530
00:59:56,000 --> 00:59:59,000
他感染 Delphi 5-7 版本的 IDE

1531
00:59:59,000 --> 01:00:05,000
然后他会使得这个使用呃被感染的 IDE

1532
01:00:05,000 --> 01:00:10,000
所写出来的程序都带有一个带有这个病毒本身应该是

1533
01:00:10,000 --> 01:00:14,000
嗯嗯就就但是为什么这个病毒没有造成任何

1534
01:00:14,000 --> 01:00:18,000
今天还有人想起来的伤害就是因为呃

1535
01:00:18,000 --> 01:00:21,000
用 Delphi 的人在 09 年的时候已经非常非常少

1536
01:00:21,000 --> 01:00:24,000
而且 5-7 也是一个相对来说比较古老的版本

1537
01:00:24,000 --> 01:00:26,000
对但

1538
01:00:26,000 --> 01:00:31,000
但假如苹果在苹果平台上你除了 Xcode 还有别的选择的话

1539
01:00:31,000 --> 01:00:34,000
那我觉得可能这件事情闹了没有那么大

1540
01:00:34,000 --> 01:00:37,000
对至少你说波及面会小一点点是吧

1541
01:00:37,000 --> 01:00:38,000
对没错

1542
01:00:38,000 --> 01:00:39,000
嗯

1543
01:00:39,000 --> 01:00:41,000
对这单位我也同意哈

1544
01:00:41,000 --> 01:00:45,000
只是说我觉得还是不能至少从我的角度来讲去相信这件事情

1545
01:00:45,000 --> 01:00:47,000
我觉得还是要有一些技术手段

1546
01:00:47,000 --> 01:00:52,000
因为你看来说只是一个呃怎么说政治手段来保证它减少它的波及面嘛

1547
01:00:52,000 --> 01:00:55,000
就是通过这个分分割的方法

1548
01:00:55,000 --> 01:00:57,000
但我觉得其实有一些技术团是可以探讨的

1549
01:00:57,000 --> 01:00:59,000
比如说最简单的方法

1550
01:00:59,000 --> 01:01:03,000
就是假设我们相信苹果不会给自己编译器添漏

1551
01:01:03,000 --> 01:01:06,000
主动添添加这个后门的情况下

1552
01:01:06,000 --> 01:01:12,000
那我们说说怎么保证我们拿到的这个 Xcode 的编译器是苹果发布的那一个

1553
01:01:12,000 --> 01:01:14,000
那其实最简单我们方法都有对吧

1554
01:01:14,000 --> 01:01:16,000
做一个那个 shad 1 的那个 hashi

1555
01:01:16,000 --> 01:01:20,000
然后对比一下苹果官方发布通过一个安全的平台

1556
01:01:20,000 --> 01:01:23,000
安全就是 htbs 的方法去发

1557
01:01:23,000 --> 01:01:28,000
然后去发发布一个这个某一个固定版本的 X 这个 Xcode 的 hashi

1558
01:01:28,000 --> 01:01:30,000
然后去去去去去那个就好了

1559
01:01:30,000 --> 01:01:32,000
还有就是说

1560
01:01:32,000 --> 01:01:34,000
他苹果那个上面不是有那个 code sign 吗

1561
01:01:34,000 --> 01:01:36,000
就是代码签名吗

1562
01:01:36,000 --> 01:01:38,000
其实可以说代码签名

1563
01:01:38,000 --> 01:01:41,000
然后运行的时候苹果系统会报错

1564
01:01:41,000 --> 01:01:44,000
就是签名失败的那些都是不被执行的嘛

1565
01:01:44,000 --> 01:01:45,000
对

1566
01:01:45,000 --> 01:01:46,000
对

1567
01:01:46,000 --> 01:01:55,000
我记得以前我下载 python 的时候还一定要去看那个下载下载软装包跟官网上提供那个 hashi 是不是一样的

1568
01:01:55,000 --> 01:01:58,000
嗯哼现在已经早已不会去做这件事情了

1569
01:01:58,000 --> 01:01:59,000
对对

1570
01:01:59,000 --> 01:02:06,000
这个你看就像你我这么狗血的人也不是所有的时候都要去做这件事情的吧

1571
01:02:06,000 --> 01:02:11,000
所以我觉得这里面还是有一个机制和习惯的培养的过程吧

1572
01:02:11,000 --> 01:02:13,000
然后但话又说回来另外一方面

1573
01:02:13,000 --> 01:02:18,000
所以假设哪怕我们能保证我们下载的这个 xcode 也好

1574
01:02:18,000 --> 01:02:19,000
还是其他编译器也好

1575
01:02:19,000 --> 01:02:23,000
都是这个就通过一个安全的可靠的管道

1576
01:02:23,000 --> 01:02:28,000
通过一个来源和就是正确来源下载到的原始没有被搞过的版本

1577
01:02:28,000 --> 01:02:33,000
我们还得保证我们机器本就是开发用这个机器本身啊

1578
01:02:33,000 --> 01:02:37,000
他是没有病毒和后和后门的或者其他木马的

1579
01:02:37,000 --> 01:02:42,000
因为这样的话你装上之后你的那个编写是可以被就改写的嘛

1580
01:02:42,000 --> 01:02:44,000
好吧

1581
01:02:44,000 --> 01:02:47,000
从其实从一个比较极端的角度来讲

1582
01:02:47,000 --> 01:02:50,000
你只能相信你使用你所做的一些措施

1583
01:02:50,000 --> 01:02:52,000
会保证你的开发机器是没有受到影响的

1584
01:02:52,000 --> 01:02:55,000
但是真实的情况是你永远查不过来

1585
01:02:55,000 --> 01:02:56,000
嗯

1586
01:02:56,000 --> 01:02:59,000
但但但其实我还是就是想啊

1587
01:02:59,000 --> 01:03:03,000
就说其实有没有任何方法一些可以做这件事情呢

1588
01:03:03,000 --> 01:03:06,000
就我觉得还是会有一些机制可以就你就最简单

1589
01:03:06,000 --> 01:03:11,000
我们目前的一个一个要点就是说防篡改嘛

1590
01:03:11,000 --> 01:03:12,000
对吧

1591
01:03:12,000 --> 01:03:14,000
其实防篡改有个很简单的机制就可以做了

1592
01:03:14,000 --> 01:03:18,000
比如说你我们用那个叫做哈希数的方法来做嘛

1593
01:03:18,000 --> 01:03:23,000
比如说因为嗯你任何一个软件放在那个磁盘里面

1594
01:03:23,000 --> 01:03:25,000
都是在文件系统里面的嘛对吧

1595
01:03:25,000 --> 01:03:26,000
嗯嗯

1596
01:03:26,000 --> 01:03:28,000
那么我怎么保证

1597
01:03:28,000 --> 01:03:33,000
但最最最最根道理整个操作系统的也是一个巨大的这个文件数嘛

1598
01:03:33,000 --> 01:03:36,000
整个磁盘对文件系统才是磁盘文件数

1599
01:03:36,000 --> 01:03:40,000
那其实我们是可以因为因为像软件就是这些应用程序

1600
01:03:40,000 --> 01:03:44,000
他有一个特质就是说它基本是一个 immutable 的东西

1601
01:03:44,000 --> 01:03:47,000
就是它它不应该就安装好以后

1602
01:03:47,000 --> 01:03:50,000
它的绝大部分是不应该就是程序那部分

1603
01:03:50,000 --> 01:03:51,000
我们把程序和数据分开

1604
01:03:51,000 --> 01:03:55,000
你你要修改的东西肯定是属于数据的那一部分吧

1605
01:03:55,000 --> 01:03:58,000
但是这个编辑器本身就你 compile 的本身那些那些东西

1606
01:03:58,000 --> 01:04:00,000
它应该是不变的

1607
01:04:00,000 --> 01:04:03,000
它不应该被改变除非你升级对吧

1608
01:04:03,000 --> 01:04:09,000
那么我们可不可以说对每一个不变的部分

1609
01:04:09,000 --> 01:04:13,000
就程序的那部分的文件做一个这个做一个哈希

1610
01:04:13,000 --> 01:04:17,000
然后我们按文件数的结构去组织这些哈希

1611
01:04:17,000 --> 01:04:20,000
然后我们在在就是在每一个目录那一层

1612
01:04:20,000 --> 01:04:24,000
在对那个目录里面的文件的哈希做一次哈希

1613
01:04:24,000 --> 01:04:29,000
以此类推会得到一条根这个这个 root

1614
01:04:29,000 --> 01:04:31,000
就是这个这个树的根部的一个哈希

1615
01:04:31,000 --> 01:04:34,000
然后我们知道一旦这个哈希被改变了的话

1616
01:04:34,000 --> 01:04:37,000
说明这个文件系统中间某一部分是被改变了

1617
01:04:37,000 --> 01:04:41,000
咱们可以沿着哈对比每一个这个 root

1618
01:04:41,000 --> 01:04:43,000
就每一个这个叫什么

1619
01:04:43,000 --> 01:04:46,000
因为每一个树的根都可以是一个 root

1620
01:04:46,000 --> 01:04:47,000
对吧

1621
01:04:47,000 --> 01:04:49,000
我们对比一个 root 的哈希

1622
01:04:49,000 --> 01:04:51,000
可以找到哪一个文件被改变了

1623
01:04:51,000 --> 01:04:52,000
对吧

1624
01:04:52,000 --> 01:04:53,000
其实通过这种方式

1625
01:04:53,000 --> 01:05:03,000
我们就可以完全能够探知得到你的程序有没有被被叫未授权篡改过

1626
01:05:03,000 --> 01:05:06,000
所以感觉上 Git

1627
01:05:06,000 --> 01:05:08,000
Git 其实不就是对

1628
01:05:08,000 --> 01:05:09,000
没错

1629
01:05:09,000 --> 01:05:11,000
本质上就是在做这件事情

1630
01:05:11,000 --> 01:05:13,000
不过说 Git 它是一个链状的结构

1631
01:05:13,000 --> 01:05:15,000
然后这个文件的哈希

1632
01:05:15,000 --> 01:05:17,000
文件树的哈希是一个树状的结构

1633
01:05:17,000 --> 01:05:20,000
而这一点恰恰是在一些比较高级的文件

1634
01:05:20,000 --> 01:05:22,000
系统里面已经实现了

1635
01:05:22,000 --> 01:05:23,000
就像 ZFS 里面

1636
01:05:23,000 --> 01:05:27,000
但它不是为了保证说你的文件不串改

1637
01:05:27,000 --> 01:05:28,000
而是说它是要保证

1638
01:05:28,000 --> 01:05:32,000
因为硬盘本身可能会发生一些硬件错误

1639
01:05:32,000 --> 01:05:33,000
导致你的文件被串改

1640
01:05:33,000 --> 01:05:36,000
它需要能够侦测得到这个串改

1641
01:05:36,000 --> 01:05:37,000
然后同时

1642
01:05:37,000 --> 01:05:38,000
同样的东西

1643
01:05:38,000 --> 01:05:39,000
对

1644
01:05:39,000 --> 01:05:43,000
它的算法和这个思路上是一致的

1645
01:05:43,000 --> 01:05:48,000
就通过一些方法能够记录一些

1646
01:05:48,000 --> 01:05:51,000
能够生成一堆数据的指纹

1647
01:05:51,000 --> 01:05:53,000
而且并且能够快速的探测

1648
01:05:53,000 --> 01:05:54,000
通过这些指纹

1649
01:05:54,000 --> 01:05:56,000
能够快速的探测到哪些

1650
01:05:56,000 --> 01:05:58,000
哪一个文件的哪一部分

1651
01:05:58,000 --> 01:06:01,000
是被就是不经意的修改过了

1652
01:06:01,000 --> 01:06:03,000
发生了这个变动

1653
01:06:04,000 --> 01:06:05,000
对吧

1654
01:06:05,000 --> 01:06:06,000
所以其实从这种角度来讲

1655
01:06:06,000 --> 01:06:08,000
我觉得是完全有技术措施

1656
01:06:08,000 --> 01:06:11,000
可能虽然大家要花费一点这个计算能力

1657
01:06:11,000 --> 01:06:14,000
就是 CPU 要多算一会儿

1658
01:06:14,000 --> 01:06:17,000
但是其实是完全是有能力去实现说

1659
01:06:17,000 --> 01:06:19,000
这个文件

1660
01:06:19,000 --> 01:06:24,000
就是这个软件是至少是按照原始意图来的

1661
01:06:24,000 --> 01:06:26,000
当然这个另一方面就是说

1662
01:06:26,000 --> 01:06:29,000
这次 OS 10 升级以后

1663
01:06:29,000 --> 01:06:30,000
10.11

1664
01:06:30,000 --> 01:06:31,000
cap 10 里面自带了一个功能

1665
01:06:31,000 --> 01:06:32,000
叫做 routless

1666
01:06:32,000 --> 01:06:33,000
routless 什么意思呢

1667
01:06:33,000 --> 01:06:34,000
就是说

1668
01:06:34,000 --> 01:06:36,000
因为以前就刚刚讲那个问题

1669
01:06:36,000 --> 01:06:38,000
苹果就是苹果的操作系统里面

1670
01:06:38,000 --> 01:06:41,000
一些那些系统的核心部件的文件

1671
01:06:41,000 --> 01:06:44,000
是可以被超级用户所更改的

1672
01:06:44,000 --> 01:06:45,000
对

1673
01:06:45,000 --> 01:06:47,000
然后大家虽然说我们有这个速度

1674
01:06:47,000 --> 01:06:49,000
这个超级用户和普通权限

1675
01:06:49,000 --> 01:06:50,000
就普通权用户隔离

1676
01:06:50,000 --> 01:06:53,000
但是因为很多这个实用实际使用的原因

1677
01:06:53,000 --> 01:06:56,000
大家还是用 sudo 用的比较烂

1678
01:06:56,000 --> 01:06:57,000
对吧

1679
01:06:57,000 --> 01:06:58,000
你现在要说是这样

1680
01:06:58,000 --> 01:06:59,000
Sudo 那样

1681
01:06:59,000 --> 01:07:01,000
有些是很蠢的事情

1682
01:07:01,000 --> 01:07:03,000
就是你在你要试图用你的

1683
01:07:03,000 --> 01:07:04,000
你在试图装一个软件

1684
01:07:04,000 --> 01:07:07,000
然后这个软件的那个安装指南上赫然写的

1685
01:07:07,000 --> 01:07:09,000
苏都这个苏都那个

1686
01:07:09,000 --> 01:07:10,000
对

1687
01:07:10,000 --> 01:07:12,000
然后要你堂而皇之的叫你输入文件密码

1688
01:07:12,000 --> 01:07:14,000
就基本上

1689
01:07:14,000 --> 01:07:15,000
对

1690
01:07:15,000 --> 01:07:16,000
这从来不会告诫你说你这样做

1691
01:07:16,000 --> 01:07:19,000
可能会对你的系统产生危害

1692
01:07:19,000 --> 01:07:20,000
当然也告

1693
01:07:20,000 --> 01:07:21,000
其实告诫了也没有用

1694
01:07:21,000 --> 01:07:23,000
就好像那个 windows 吧

1695
01:07:23,000 --> 01:07:26,000
然后说我从 XP 还是 windows

1696
01:07:26,000 --> 01:07:28,000
Vista 开始

1697
01:07:28,000 --> 01:07:32,000
就他每次这个要就有程序或应用

1698
01:07:32,000 --> 01:07:34,000
要做出对系统的修改的时候

1699
01:07:34,000 --> 01:07:35,000
他会弹出一个框

1700
01:07:35,000 --> 01:07:36,000
问你要不要做这个

1701
01:07:36,000 --> 01:07:38,000
对

1702
01:07:38,000 --> 01:07:39,000
叫 UAC 之类的

1703
01:07:39,000 --> 01:07:40,000
对

1704
01:07:40,000 --> 01:07:41,000
但是你提示做了之后

1705
01:07:41,000 --> 01:07:42,000
用户也就疲劳了

1706
01:07:42,000 --> 01:07:43,000
对这种东西也是

1707
01:07:43,000 --> 01:07:45,000
10 个用户有 9 个会试图在第一时间

1708
01:07:45,000 --> 01:07:47,000
让这个对话框赶紧消失

1709
01:07:47,000 --> 01:07:48,000
对

1710
01:07:48,000 --> 01:07:49,000
没错

1711
01:07:49,000 --> 01:07:50,000
根本不会去读上面写了

1712
01:07:50,000 --> 01:07:51,000
是吧

1713
01:07:51,000 --> 01:07:52,000
所以其实你看这个东西

1714
01:07:52,000 --> 01:07:55,000
你靠提示用户是没有用的

1715
01:07:55,000 --> 01:07:59,000
因为首先用户并不一定具备这个

1716
01:07:59,000 --> 01:08:03,000
这个能力去判断这个到底是可以还是不可以

1717
01:08:03,000 --> 01:08:04,000
对吧

1718
01:08:04,000 --> 01:08:07,000
他不是那个 technical 的一个一个一个一个支持

1719
01:08:07,000 --> 01:08:10,000
而且说即便是对于这种具备这种知识

1720
01:08:10,000 --> 01:08:11,000
这个能力和支持的用户

1721
01:08:11,000 --> 01:08:13,000
你也不可你也可以

1722
01:08:13,000 --> 01:08:14,000
你也不可能每次都去问他

1723
01:08:14,000 --> 01:08:17,000
因为这个会反对人会产生疲劳的嘛

1724
01:08:17,000 --> 01:08:18,000
嗯

1725
01:08:18,000 --> 01:08:20,000
你问他 100 次他肯定不会再想这个事情了

1726
01:08:20,000 --> 01:08:21,000
对吧

1727
01:08:21,000 --> 01:08:22,000
对

1728
01:08:22,000 --> 01:08:24,000
所以我觉得这不是一个

1729
01:08:24,000 --> 01:08:25,000
就是如果你的

1730
01:08:25,000 --> 01:08:29,000
如果你解决这个全线问题的方案是询问用户的话

1731
01:08:29,000 --> 01:08:32,000
你就其实已经认输了

1732
01:08:32,000 --> 01:08:33,000
你就说这个问题我解决不了

1733
01:08:33,000 --> 01:08:35,000
你们自己想办法吧

1734
01:08:35,000 --> 01:08:39,000
但是其实我觉得是完美通过设计是可以改变一些

1735
01:08:39,000 --> 01:08:40,000
就可以做出更好的设计的嘛

1736
01:08:40,000 --> 01:08:42,000
比如说刚才讲的那个哈希数的方法

1737
01:08:42,000 --> 01:08:45,000
你可以精确的告诉说文件出费

1738
01:08:45,000 --> 01:08:46,000
哪个文件出了问题

1739
01:08:46,000 --> 01:08:47,000
这样可能会有什么后果

1740
01:08:47,000 --> 01:08:48,000
对吧

1741
01:08:48,000 --> 01:08:49,000
可以去做一些事情

1742
01:08:49,000 --> 01:08:50,000
然后就是说

1743
01:08:50,000 --> 01:08:51,000
呃

1744
01:08:51,000 --> 01:08:53,000
在这个设计系统的时候

1745
01:08:53,000 --> 01:08:54,000
不应

1746
01:08:54,000 --> 01:08:57,000
是不是我们目前那种非黑即白的这种

1747
01:08:57,000 --> 01:08:59,000
比较简单粗暴的

1748
01:08:59,000 --> 01:09:02,000
权限的方式是不太够用的

1749
01:09:04,000 --> 01:09:07,000
然后这里就涉及到我们要讲的一个非常

1750
01:09:07,000 --> 01:09:08,000
呃重要的一个人了

1751
01:09:08,000 --> 01:09:11,000
这个人叫 Daniel J Bernstein

1752
01:09:11,000 --> 01:09:13,000
Bernstein

1753
01:09:13,000 --> 01:09:14,000
Bernstein

1754
01:09:14,000 --> 01:09:15,000
Bernstein 先生

1755
01:09:15,000 --> 01:09:16,000
对

1756
01:09:16,000 --> 01:09:18,000
就是他说的叫 DJB

1757
01:09:18,000 --> 01:09:19,000
如果这个时候你都

1758
01:09:19,000 --> 01:09:23,000
你听到这三个你看到那三个字母缩写名字的时候

1759
01:09:23,000 --> 01:09:25,000
你都没有一种如雷惯的感觉的话

1760
01:09:25,000 --> 01:09:27,000
说明你的安全姿

1761
01:09:27,000 --> 01:09:29,000
安全姿势还不太到位

1762
01:09:29,000 --> 01:09:31,000
对

1763
01:09:31,000 --> 01:09:32,000
呃

1764
01:09:32,000 --> 01:09:33,000
先普及一下

1765
01:09:33,000 --> 01:09:34,000
DJB 是那个

1766
01:09:34,000 --> 01:09:36,000
他有一个个人网站叫做 Crypto

1767
01:09:36,000 --> 01:09:39,000
是 cr.yp.to

1768
01:09:39,000 --> 01:09:41,000
你去看一下它那些什么样的事

1769
01:09:41,000 --> 01:09:44,000
Crypto 这个单词分裂成三半

1770
01:09:44,000 --> 01:09:46,000
就是像当初那个 Delicious

1771
01:09:46,000 --> 01:09:47,000
对

1772
01:09:47,000 --> 01:09:49,000
对

1773
01:09:49,000 --> 01:09:51,000
他是哪个爱丁堡大学的还是

1774
01:09:51,000 --> 01:09:52,000
不是

1775
01:09:52,000 --> 01:09:54,000
他是这个 Illinois 大学

1776
01:09:54,000 --> 01:09:56,000
之达哥分校的教授

1777
01:09:56,000 --> 01:09:57,000
对

1778
01:09:57,000 --> 01:10:01,000
是在数学统计和计算机科学系

1779
01:10:01,000 --> 01:10:02,000
哇你真好唱啊

1780
01:10:02,000 --> 01:10:04,000
anyway

1781
01:10:04,000 --> 01:10:06,000
就他有一些著名的作品

1782
01:10:06,000 --> 01:10:10,000
最简单的大家可能比较好好的一个叫 NACL 的这个库

1783
01:10:10,000 --> 01:10:14,000
叫做 The Networking and Cryptography Library

1784
01:10:15,000 --> 01:10:19,000
然后还有一些像这个这个 library 的重要程度是什么样子呢

1785
01:10:19,000 --> 01:10:25,000
就基本上今天互联网一些应用的基石是依赖于这个库的

1786
01:10:25,000 --> 01:10:29,000
就是安全的安全的网上通信的基石是依赖于这个库的

1787
01:10:29,000 --> 01:10:32,000
为什么他的 CV 上写了他是德国人

1788
01:10:32,000 --> 01:10:36,000
他的 citizenship 就是他跟我是同一年生的首先

1789
01:10:36,000 --> 01:10:39,000
10 月 29 日出生

1790
01:10:39,000 --> 01:10:41,000
他出生在美国纽约

1791
01:10:41,000 --> 01:10:45,000
但是他的 citizenship 写了 USA 和 Germany

1792
01:10:45,000 --> 01:10:47,000
这是为什么

1793
01:10:47,000 --> 01:10:51,000
好问题我也不知道

1794
01:10:51,000 --> 01:10:53,000
ok 你接着说

1795
01:10:53,000 --> 01:10:56,000
他是德国和美国双国籍

1796
01:10:56,000 --> 01:10:58,000
有可能他是这个他是 by birth

1797
01:10:58,000 --> 01:11:00,000
就是拜血缘关系的德国公民

1798
01:11:00,000 --> 01:11:02,000
因为他父母一方是德国人

1799
01:11:02,000 --> 01:11:04,000
他在美国出生

1800
01:11:04,000 --> 01:11:06,000
然后 by birth 又是美国人

1801
01:11:06,000 --> 01:11:08,000
落地在美国

1802
01:11:08,000 --> 01:11:10,000
所以又是美国公民

1803
01:11:10,000 --> 01:11:13,000
就是他是有双重公民身份

1804
01:11:13,000 --> 01:11:16,000
anyway 他还有一些其他的作品呢

1805
01:11:16,000 --> 01:11:18,000
比如说 DNS curve

1806
01:11:18,000 --> 01:11:19,000
OK

1807
01:11:19,000 --> 01:11:20,000
对吧

1808
01:11:20,000 --> 01:11:21,000
DNS curve

1809
01:11:21,000 --> 01:11:22,000
DNS curve

1810
01:11:22,000 --> 01:11:23,000
DNS curve 是干嘛的呢

1811
01:11:23,000 --> 01:11:24,000
就是一个

1812
01:11:24,000 --> 01:11:29,000
这个说起来比较麻烦

1813
01:11:29,000 --> 01:11:32,000
加密的 DNS 吧

1814
01:11:32,000 --> 01:11:35,000
加密的 DNS 协议可以这么说

1815
01:11:35,000 --> 01:11:38,000
然后 Linux 和 Unix 上面用户

1816
01:11:38,000 --> 01:11:40,000
可能用的比较多的 Demon Tools

1817
01:11:40,000 --> 01:11:43,000
是他写的

1818
01:11:43,000 --> 01:11:45,000
Qmail 也是他写的

1819
01:11:45,000 --> 01:11:47,000
Qmail 也是他写的

1820
01:11:47,000 --> 01:11:48,000
对

1821
01:11:48,000 --> 01:11:51,000
所以当然我都说了

1822
01:11:51,000 --> 01:11:55,000
如果你没觉得这 DJB 三个字母入得贯耳的话

1823
01:11:55,000 --> 01:11:57,000
你可能要反思一下自己了

1824
01:11:57,000 --> 01:12:03,000
他在 2007 年的时候发表了一篇论文

1825
01:12:03,000 --> 01:12:05,000
叫做

1826
01:12:05,000 --> 01:12:09,000
Some thoughts on security after 10 years of Qmail 1.0

1827
01:12:09,000 --> 01:12:13,000
就是写 Qmail 1.0 10 年后

1828
01:12:13,000 --> 01:12:15,000
关于安全的一些想法

1829
01:12:15,000 --> 01:12:16,000
对

1830
01:12:16,000 --> 01:12:19,000
虽然原来标题没有关于安全这件事情

1831
01:12:19,000 --> 01:12:20,000
Oh sorry

1832
01:12:20,000 --> 01:12:21,000
Some thoughts on security

1833
01:12:21,000 --> 01:12:22,000
On security

1834
01:12:22,000 --> 01:12:23,000
对

1835
01:12:23,000 --> 01:12:28,000
里面他用了大概多少

1836
01:12:28,000 --> 01:12:31,000
5 个章节吧

1837
01:12:31,000 --> 01:12:33,000
讲了一下他在写 Qmail

1838
01:12:33,000 --> 01:12:37,000
这款以安全著称的邮件的 Demon

1839
01:12:37,000 --> 01:12:38,000
Demon 中文翻译成什么

1840
01:12:38,000 --> 01:12:39,000
我又忘了

1841
01:12:39,000 --> 01:12:40,000
助手进程

1842
01:12:40,000 --> 01:12:41,000
守护进程

1843
01:12:41,000 --> 01:12:42,000
守护进程

1844
01:12:42,000 --> 01:12:48,000
的这么一套工具的一些想法和措施吧

1845
01:12:48,000 --> 01:12:49,000
简单来说

1846
01:12:49,000 --> 01:12:53,000
嗯怎么去写出一个安全可护的软件

1847
01:12:53,000 --> 01:12:57,000
这篇论文我们会贴在这个本期节目的 notes 里面

1848
01:12:57,000 --> 01:12:58,000
对

1849
01:12:58,000 --> 01:12:59,000
也不是很长

1850
01:12:59,000 --> 01:13:02,000
如果不去看 reference 的话

1851
01:13:02,000 --> 01:13:04,000
基本上只有八页纸的样子

1852
01:13:04,000 --> 01:13:05,000
对

1853
01:13:05,000 --> 01:13:08,000
而且它里面其实 technical detail 其实并不多

1854
01:13:08,000 --> 01:13:10,000
大部分其实是在一些讨论一些

1855
01:13:10,000 --> 01:13:13,000
就是思路和这个架构的问题

1856
01:13:13,000 --> 01:13:15,000
原则上的问题

1857
01:13:15,000 --> 01:13:16,000
对

1858
01:13:16,000 --> 01:13:17,000
principle

1859
01:13:17,000 --> 01:13:19,000
对

1860
01:13:19,000 --> 01:13:21,000
他说怎么写一个安全的程序呢

1861
01:13:21,000 --> 01:13:23,000
有一些通常的思路

1862
01:13:23,000 --> 01:13:27,000
叫做首先我们要就是减少 bug

1863
01:13:27,000 --> 01:13:28,000
对吧

1864
01:13:28,000 --> 01:13:29,000
因为这是安全漏洞

1865
01:13:29,000 --> 01:13:32,000
通常就所有的安全漏洞都是 bug

1866
01:13:32,000 --> 01:13:36,000
所以我们怎么样解决这个 bug

1867
01:13:36,000 --> 01:13:38,000
然后第二个思路就是说

1868
01:13:38,000 --> 01:13:44,000
如果我们假定这个出 bug 的概率是相对来说差不多的

1869
01:13:44,000 --> 01:13:46,000
那么这个程序的代码量越少

1870
01:13:46,000 --> 01:13:48,000
它的 bug 的总量是不是可能就越低了

1871
01:13:48,000 --> 01:13:54,000
就一个复杂的程序总是可能比一个简单的程序

1872
01:13:54,000 --> 01:14:00,000
就其他情况一定的其他条件一定的情况下肯定是一个更复杂的程序可能还有更多的 bug

1873
01:14:00,000 --> 01:14:01,000
对吧

1874
01:14:01,000 --> 01:14:02,000
没错

1875
01:14:02,000 --> 01:14:03,000
对

1876
01:14:03,000 --> 01:14:06,000
然后第三个一个措施就是说

1877
01:14:06,000 --> 01:14:08,000
叫做什么来的

1878
01:14:08,000 --> 01:14:10,000
减少被信任的代码

1879
01:14:10,000 --> 01:14:14,000
对这里提到有一个概念就是什么叫做信任的代码和不被信任的代码

1880
01:14:14,000 --> 01:14:18,000
就是说信任的代码可以做一些更高权限的事

1881
01:14:18,000 --> 01:14:23,000
然后不被信任的代码就必须只能做一些很低权限甚至不需要权限的事

1882
01:14:23,000 --> 01:14:25,000
然后这样的好处是什么呢

1883
01:14:25,000 --> 01:14:28,000
就是说哪怕不被信任的代码出了 bug

1884
01:14:28,000 --> 01:14:32,000
它的结果也不会导致系统出现安全漏洞

1885
01:14:32,000 --> 01:14:33,000
对

1886
01:14:33,000 --> 01:14:38,000
所以如果我们能够把代码分成可信任的部分和不可信任的部分

1887
01:14:38,000 --> 01:14:42,000
并且把不可信任的部分放在一些特殊的受限制的环境里面去执行

1888
01:14:42,000 --> 01:14:44,000
比如说杀核模型对吧

1889
01:14:44,000 --> 01:14:45,000
对吧

1890
01:14:45,000 --> 01:14:46,000
对

1891
01:14:46,000 --> 01:14:51,000
那么这样也可以在一定程度上减低这种安全漏洞的引化

1892
01:14:51,000 --> 01:14:54,000
因为跟前面的情况一样

1893
01:14:54,000 --> 01:14:57,000
因为受信任的代码

1894
01:14:57,000 --> 01:15:01,000
受信任的代码就是需要应兴在更高权限级别的代码的总量减少了

1895
01:15:01,000 --> 01:15:06,000
然后如果我们假设这个代码出现漏洞的概率是差不多的话

1896
01:15:06,000 --> 01:15:07,000
那肯定代码总量也会减

1897
01:15:07,000 --> 01:15:09,000
就是至少安全漏洞的引化会减少了

1898
01:15:09,000 --> 01:15:10,000
对吧

1899
01:15:10,000 --> 01:15:11,000
嗯

1900
01:15:11,000 --> 01:15:14,000
当然还有一些就是说他认为是

1901
01:15:14,000 --> 01:15:17,000
没有什么就是燃病卵的

1902
01:15:17,000 --> 01:15:23,000
就并没有什么用处的提升软件安全的办法

1903
01:15:23,000 --> 01:15:24,000
对

1904
01:15:24,000 --> 01:15:25,000
第一个方法就是

1905
01:15:25,000 --> 01:15:27,000
第一点是 chasing attackers

1906
01:15:27,000 --> 01:15:28,000
对

1907
01:15:28,000 --> 01:15:29,000
跟着就

1908
01:15:29,000 --> 01:15:31,000
那是叫被攻击者牵着笔子走

1909
01:15:31,000 --> 01:15:32,000
追逐攻击者

1910
01:15:32,000 --> 01:15:33,000
对

1911
01:15:33,000 --> 01:15:34,000
我觉得这个翻译好一点

1912
01:15:34,000 --> 01:15:35,000
OK

1913
01:15:35,000 --> 01:15:39,000
简单来说就是我们说的中文叫做头痛一头一头

1914
01:15:39,000 --> 01:15:40,000
就是说攻击者过来了

1915
01:15:40,000 --> 01:15:41,000
发现哪里漏了

1916
01:15:41,000 --> 01:15:42,000
就扑过去把那个漏洞补上

1917
01:15:42,000 --> 01:15:44,000
然后他攻击者就攻击另外一个地方了

1918
01:15:44,000 --> 01:15:45,000
你又扑上去把一个漏洞堵上

1919
01:15:45,000 --> 01:15:48,000
始终是处于一个相对被动的方法

1920
01:15:48,000 --> 01:15:49,000
就是这个激劫被认为呢

1921
01:15:49,000 --> 01:15:50,000
这个是不靠谱的

1922
01:15:50,000 --> 01:15:52,000
因为没有从根源上解决问题了

1923
01:15:52,000 --> 01:15:53,000
对

1924
01:15:53,000 --> 01:15:54,000
他也顺便黑了一下 firewall

1925
01:15:54,000 --> 01:15:55,000
然后什么防病毒软件啊

1926
01:15:55,000 --> 01:15:56,000
或者什么 intrusion detection system 之类的东西

1927
01:15:56,000 --> 01:15:57,000
对

1928
01:15:57,000 --> 01:15:58,000
他觉得这些东西都是燃命卵

1929
01:15:58,000 --> 01:15:59,000
当然这个地方我觉得还是可以反对一下

1930
01:15:59,000 --> 01:16:01,000
就至少 intrusion detection system

1931
01:16:01,000 --> 01:16:03,000
可以让你对于正在进行的攻击有所反应

1932
01:16:03,000 --> 01:16:04,000
这已经是一个

1933
01:16:04,000 --> 01:16:05,000
对

1934
01:16:05,000 --> 01:16:06,000
对

1935
01:16:06,000 --> 01:16:07,000
对

1936
01:16:07,000 --> 01:16:08,000
对

1937
01:16:08,000 --> 01:16:09,000
对

1938
01:16:09,000 --> 01:16:10,000
对

1939
01:16:10,000 --> 01:16:11,000
对

1940
01:16:11,000 --> 01:16:12,000
对

1941
01:16:12,000 --> 01:16:13,000
对

1942
01:16:13,000 --> 01:16:14,000
对

1943
01:16:14,000 --> 01:16:15,000
对

1944
01:16:15,000 --> 01:16:16,000
对

1945
01:16:16,000 --> 01:16:17,000
对

1946
01:16:17,000 --> 01:16:18,000
对

1947
01:16:18,000 --> 01:16:19,000
对

1948
01:16:19,000 --> 01:16:20,000
对

1949
01:16:20,000 --> 01:16:21,000
对

1950
01:16:21,000 --> 01:16:22,000
对

1951
01:16:22,000 --> 01:16:30,000
至少你在维护一个维护一些不可能被修正的漏洞的时候会

1952
01:16:30,000 --> 01:16:31,000
嗯

1953
01:16:31,000 --> 01:16:32,000
这个东西还是很有用的

1954
01:16:32,000 --> 01:16:33,000
比如说 DDoS

1955
01:16:33,000 --> 01:16:34,000
DDoS

1956
01:16:34,000 --> 01:16:35,000
DDoS 攻击本质上是没有

1957
01:16:35,000 --> 01:16:37,000
根本上根本跟漏洞没有关系的吧

1958
01:16:37,000 --> 01:16:38,000
他就是

1959
01:16:39,000 --> 01:16:43,000
就是这是一个物理条件所导致的一个安全影响

1960
01:16:43,000 --> 01:16:44,000
你在这种情况之下

1961
01:16:44,000 --> 01:16:47,000
有一个 intrusion detection system 还是很有用的

1962
01:16:47,000 --> 01:16:48,000
嗯

1963
01:16:48,000 --> 01:16:49,000
嗯

1964
01:16:49,000 --> 01:16:50,000
对

1965
01:16:50,000 --> 01:16:51,000
对

1966
01:16:51,000 --> 01:16:52,000
对

1967
01:16:52,000 --> 01:16:53,000
对

1968
01:16:53,000 --> 01:16:54,000
对

1969
01:16:54,000 --> 01:16:55,000
对

1970
01:16:55,000 --> 01:16:56,000
对

1971
01:16:56,000 --> 01:16:57,000
对

1972
01:16:57,000 --> 01:17:00,000
因为他本质上并没有修正就是

1973
01:17:00,000 --> 01:17:04,000
就改变这个系统是一个千仓百孔的事实

1974
01:17:04,000 --> 01:17:05,000
对吧

1975
01:17:05,000 --> 01:17:06,000
对没错

1976
01:17:06,000 --> 01:17:07,000
对

1977
01:17:07,000 --> 01:17:12,000
然后下一条他觉得燃并卵的方法叫做减少全线

1978
01:17:12,000 --> 01:17:13,000
对

1979
01:17:13,000 --> 01:17:14,000
对

1980
01:17:14,000 --> 01:17:18,000
这个其实可能跟很多这个就是刚才我们讲的那个速度这个情况有点关系啊

1981
01:17:18,000 --> 01:17:26,000
就是说你降低权限的这个就活着权限分离的这个其实在他看来并没有什么用

1982
01:17:26,000 --> 01:17:27,000
没错

1983
01:17:27,000 --> 01:17:28,000
没错

1984
01:17:28,000 --> 01:17:36,000
这其实有点呃叫什么 contrary to popular belief 就是 minimize privilege 在他看来是没有太多用处的

1985
01:17:36,000 --> 01:17:46,000
因为毕竟你有你再怎么 minimize privilege 那 privilege 如果你需要的话还是还是还是在哪儿的对吧

1986
01:17:46,000 --> 01:17:47,000
对

1987
01:17:47,000 --> 01:17:48,000
对

1988
01:17:48,000 --> 01:17:58,000
你只有说我要把这些所有就是需要被 trusted code 减到最少你这个 minimize privilege 才有那么一定点的用

1989
01:17:58,000 --> 01:18:08,000
但如果你在 minimize privilege 的同时没有去减少需要被 trusted code 那你只要给你那一点点 privilege 你就已经可以为所欲为了

1990
01:18:08,000 --> 01:18:30,000
嗯对所以其实逻辑上他觉得这个减少全线的这个一个并不解决实际问题的根本原因就是因为减少全线只是说减少了呃一旦出现软件 bug 或者是安全漏洞造成的损失而并没有并没有解决安全漏洞本身

1991
01:18:30,000 --> 01:18:31,000
对对

1992
01:18:31,000 --> 01:18:38,000
所以其中这个我想他的这个思路是正确的因为确实确实并没有减少这个软件漏洞的数量本身嘛

1993
01:18:38,000 --> 01:18:43,000
他只是说减少减少了这个软件漏洞产生的可能产生的影响

1994
01:18:44,000 --> 01:19:00,000
其实这个这个事情是值得说的比如说很简单一个例子他说你说 minimize 就是减少权限比如说现在很多这个这个这个 iOS 的应用也好还是安卓应用也好他会说哎我要你的这个通讯录访问权限对吧

1995
01:19:00,000 --> 01:19:29,000
但其实你知道他是会有可能会把这个偷偷上传到他的云端然后去去做一些这种打着你的旗号去骚扰你的朋友的事对这个时候你有两种做法你要不就拒绝他这个你拒绝他选显示那个然后那个时候就减少了权限了嘛这样哪怕他是一个恶意的程序他也不会说拿到你的通讯录会怎么样怎么样但是假设这个软件刚好有这么一小撮功能是必须得访问通讯录才能是正常使用的

1996
01:19:29,000 --> 01:19:42,000
但这个是随便举个例子你又不得不授权他的时候这个时候你就很纠结了你说那我到底选要不要为了这个功能选择相信他呢这个我觉得就是一个挺考验人心的时刻

1997
01:19:42,000 --> 01:19:57,000
没错嗯对我觉得其实 minimize privilege 并不是一个错的举措至少你至少在你做比如说你是一个呃 IT illustrator 然后你必须给不同的用户分配权限的时候 minimize privilege 是一个非常正确的

1998
01:19:57,000 --> 01:20:27,000
嗯嗯但是我相信作者的意思只是说 minimize privilege 并不能减少软件中的 bug 对所以这是两个层面的问题我们还是要把这个分得清楚的一个是说就解决减少软件 bug 这个事情的本身来讲确实减少权限并没有什么鸟用但是就在我们毕竟在实际上还是说不可因为不可能保证所有的 bug 都被修复了所以我们的确实在实际上是说不可能的确实在实际上是说不可能的确实在实际上是说不可能的确实在实际上是说不可能的确实在实际上是说不可能的确实在实际上是说不可能的确实在实际上是说不可能的确实在实际上是说不

1999
01:20:27,000 --> 01:20:38,000
所以我们只能说除了在在通过措施减少 bug 同时还要尽量矫正尽量保证如果 bug 发生也要减少它的可能产生的负面影响嘛

2000
01:20:38,000 --> 01:20:47,000
对也就是从一个是从工程学的角度来讲来解来理解另外一个则是从这个 anadministration 的角度来讲对

2001
01:20:47,000 --> 01:21:05,000
然后他说第三条并没有什么这不叫并没有什么并没有什么用而是说一个很常见的因素会导致大家会放弃对这个软件安全的追求这个理由通常就是性能或者叫速度

2002
01:21:05,000 --> 01:21:14,000
对我们可能为了追求软件的性能或者是一些速度去采用一些不那么安全靠谱的这个方案或者是这个写法

2003
01:21:14,000 --> 01:21:24,000
一个最简单的例子可能这么对比比较好比如说这个当然我们是自己举的例子并不是他文章说的一个例子我们说进程和现成的关系吧

2004
01:21:24,000 --> 01:21:35,000
就通常在可能在力量上这是不成立啊比如在 windows 上面你开一个新的现成比开一个新的进程是要开销来的低的吗

2005
01:21:35,000 --> 01:21:44,000
对没错吧对但是现成之与现成之间并不能实现内存隔离对吧因为他不现成之间是共享内存取消

2006
01:21:44,000 --> 01:21:52,000
是一个运气的不受操作系统的其他保护这样的话在一个现成里面出现的软件 bug 或者是漏洞

2007
01:21:52,000 --> 01:21:58,000
使得他可能造成这个共享内存区域泄漏

2008
01:21:58,000 --> 01:22:02,000
然后这样的话一个现成的 bug 会波及到其他现成

2009
01:22:02,000 --> 01:22:10,000
但是如果你不为了这个性能或者方便的考虑而采用多进程的模型的话

2010
01:22:10,000 --> 01:22:14,000
进程与进程之间的通信是一个明确接口的嘛

2011
01:22:14,000 --> 01:22:18,000
然后他进程之间如果不除非你做特殊的操作

2012
01:22:18,000 --> 01:22:20,000
不然你是没有办法共享内存的嘛

2013
01:22:20,000 --> 01:22:26,000
所以一个进程的这个被 compromise 是不会影响到另外一个进程的安全性的

2014
01:22:26,000 --> 01:22:40,000
对这就是为什么沙盒模型然后进程隔离能够使得一些比较失败的程序

2015
01:22:40,000 --> 01:22:46,000
所产生的一些栽造性的后果不会扩充到其他运行的程序上面的原因

2016
01:22:46,000 --> 01:22:50,000
他还去他在文章中举的倒是一个例子

2017
01:22:50,000 --> 01:22:53,000
我再挺有意思的就是说可以用一个解释器的方法

2018
01:22:53,000 --> 01:22:59,000
去实现一个简单的这个限制性的环境去做一些基础的处理

2019
01:22:59,000 --> 01:23:06,000
而不是说你直接用比如说用 C 语言写一个这个邮件地址的解析器

2020
01:23:06,000 --> 01:23:14,000
因为这样的话你很容易因为 C 是这种就是内存不安全的语言很容易轰掉脚的语言

2021
01:23:14,000 --> 01:23:19,000
所以很容易叫做 shoot yourself in the foot

2022
01:23:19,000 --> 01:23:22,000
就是拿把枪把自己脚给打一枪对

2023
01:23:22,000 --> 01:23:30,000
因为因为就内存越界啊导致各种各样的问题是使得你可能会出现错误

2024
01:23:30,000 --> 01:23:33,000
但是如果你写一个简单的这个编译解释器

2025
01:23:33,000 --> 01:23:41,000
就是一个很简单的虚拟的迷你语言去做这个地址解析的话可能会好一些对吧

2026
01:23:41,000 --> 01:23:46,000
但是这样很多人会觉得这完全是什么杀鸡用牛刀啊何必呢

2027
01:23:46,000 --> 01:23:47,000
对吧

2028
01:23:47,000 --> 01:23:48,000
没错

2029
01:23:48,000 --> 01:23:51,000
所以为了这个性能或者实现效率来讲

2030
01:23:51,000 --> 01:23:54,000
就采取了一些没有那么安全的方法

2031
01:23:54,000 --> 01:23:58,000
反正这篇论文是非常具有研究价值的

2032
01:23:58,000 --> 01:24:03,000
我觉得如果任何一个因为这件事情或者是因为之前

2033
01:24:03,000 --> 01:24:07,000
乃至将以后将会发生的其他事情

2034
01:24:07,000 --> 01:24:10,000
想要让自己写的东西比较安全的朋友的话

2035
01:24:10,000 --> 01:24:13,000
一定要读一读这篇文章

2036
01:24:13,000 --> 01:24:19,000
其实他这篇文章我觉得最有价值的是那个叫做第四部分和第五部分

2037
01:24:19,000 --> 01:24:24,000
第四部分就是说第四部分叫做就如何减少代码量

2038
01:24:24,000 --> 01:24:34,000
这个是我最喜欢干的事因为我总觉得现在我们很多人写这个代码的习惯就是越多越好

2039
01:24:34,000 --> 01:24:38,000
他现在有有一个概念我觉得非常就是当然他不是他自己原创的

2040
01:24:38,000 --> 01:24:41,000
而是那个 Dextra 说的就是说

2041
01:24:41,000 --> 01:24:50,000
就是愚蠢的软件经理通常用这个程序员的生产效率去衡量一个程序员的这个

2042
01:24:50,000 --> 01:24:53,000
通常用这个代码量去衡量

2043
01:24:53,000 --> 01:24:54,000
专写的代码行数

2044
01:24:54,000 --> 01:24:57,000
对对对用一个代码的对

2045
01:24:57,000 --> 01:25:00,000
这句话再说一遍就是一个愚蠢的软件的这个经理

2046
01:25:00,000 --> 01:25:07,000
又或者是这个产品项目经理会用这个代码行数去衡量一个程序员的生产力

2047
01:25:07,000 --> 01:25:09,000
也就是说潜采的含义就是说代码写的越多

2048
01:25:09,000 --> 01:25:14,000
代码写的越多这个程序员越高效或者越高产对吧

2049
01:25:14,000 --> 01:25:15,000
对

2050
01:25:15,000 --> 01:25:16,000
因为高产肯定是有产出的

2051
01:25:16,000 --> 01:25:19,000
但其实上这个概念是完全错误的

2052
01:25:19,000 --> 01:25:26,000
应该是用消耗的代码量去衡量一个代码程序员的生产力

2053
01:25:26,000 --> 01:25:30,000
就是说一个为了实现同样的功能或者同样的 specification

2054
01:25:30,000 --> 01:25:34,000
一个程序员用的代码量越少才应该是越好的

2055
01:25:35,000 --> 01:25:36,000
但这句话也不太对

2056
01:25:36,000 --> 01:25:38,000
因为毕竟还是要考虑的这种

2057
01:25:38,000 --> 01:25:40,000
这个什么可维护性

2058
01:25:40,000 --> 01:25:41,000
易读性

2059
01:25:41,000 --> 01:25:42,000
怎么怎么样

2060
01:25:42,000 --> 01:25:43,000
对吧

2061
01:25:43,000 --> 01:25:44,000
这个深究的

2062
01:25:44,000 --> 01:25:45,000
我觉得这个是

2063
01:25:45,000 --> 01:25:46,000
但是起码他提出这个概念

2064
01:25:46,000 --> 01:25:48,000
就是编写的代码量和消耗的代码量

2065
01:25:48,000 --> 01:25:52,000
是一个两个完全不同的思路去看这个问题

2066
01:25:52,000 --> 01:25:53,000
没错

2067
01:25:53,000 --> 01:25:54,000
对

2068
01:25:54,000 --> 01:25:58,000
所以当然这个第 4 节里面这篇论文讲的一个很好的一个几个点

2069
01:25:58,000 --> 01:26:00,000
就是说我们如果去消减代码量

2070
01:26:00,000 --> 01:26:02,000
第一个就是说

2071
01:26:02,000 --> 01:26:06,000
就是把重复的部分做成一个通用的函数了

2072
01:26:06,000 --> 01:26:08,000
哪怕它再小再 trivial 对吧

2073
01:26:08,000 --> 01:26:12,000
应该用的重复数数过多

2074
01:26:12,000 --> 01:26:14,000
够多的话也是值得的

2075
01:26:14,000 --> 01:26:16,000
当然这个东西也是有一定的副作用的

2076
01:26:16,000 --> 01:26:18,000
就是说在一些这种比较愚蠢的语言里面

2077
01:26:18,000 --> 01:26:20,000
你调用的函数过多其实是会影响你的性能的

2078
01:26:20,000 --> 01:26:21,000
对吧

2079
01:26:21,000 --> 01:26:22,000
它不会帮你去应赖这些东西

2080
01:26:22,000 --> 01:26:35,000
当然这个就跟刚才提到的那个为了为了这种微不足道的性能去牺牲了这个其他东西是点了芝麻丢了西瓜

2081
01:26:35,000 --> 01:26:36,000
对

2082
01:26:36,000 --> 01:26:37,000
没错

2083
01:26:37,000 --> 01:26:39,000
然后这个 4.2 他提到了一个就是说

2084
01:26:39,000 --> 01:26:42,000
如何去处理这个临时错误

2085
01:26:42,000 --> 01:26:43,000
这个是非常重要的

2086
01:26:43,000 --> 01:26:47,000
其实所有的程序里面最麻烦的就是错误处理

2087
01:26:47,000 --> 01:26:49,000
而是说很多人会

2088
01:26:49,000 --> 01:26:50,000
然后很多人

2089
01:26:50,000 --> 01:26:54,000
这个但这个回到我们之前说过那个就是 exception 机制的问题

2090
01:26:54,000 --> 01:26:56,000
这还是我们第一期的那种

2091
01:26:56,000 --> 01:26:57,000
对对对

2092
01:26:57,000 --> 01:27:03,000
exception 机制是假设这个程序的正常逻辑是一个正常运行的

2093
01:27:03,000 --> 01:27:08,000
然后这个错误是或者说这个异常是需要特别处理的

2094
01:27:08,000 --> 01:27:10,000
但是其实应该是反过来的

2095
01:27:10,000 --> 01:27:13,000
我觉得就是说你默认这个程序是跑不了的

2096
01:27:13,000 --> 01:27:15,000
对默认程序是会出各种各样的问题的

2097
01:27:15,000 --> 01:27:17,000
你只能一步一步去处理的问题

2098
01:27:17,000 --> 01:27:20,000
然后你当你把所有的可能出错的东西都覆盖到了

2099
01:27:20,000 --> 01:27:22,000
你一个这个程序才是安全无措的

2100
01:27:22,000 --> 01:27:23,000
对吧

2101
01:27:23,000 --> 01:27:25,000
所以为什么也为什么说用这个 exception 机制

2102
01:27:25,000 --> 01:27:26,000
从本质上而言

2103
01:27:26,000 --> 01:27:30,000
是不是一个非常康复和安全的一个方法

2104
01:27:30,000 --> 01:27:35,000
听到这里这个高程序员和 C 程序员一定会觉得非常有理

2105
01:27:35,000 --> 01:27:39,000
然后其他所有程序员都觉得我靠是在说什么邪教

2106
01:27:40,000 --> 01:27:42,000
我也不知道

2107
01:27:42,000 --> 01:27:46,000
我觉得有时候你使用的这种语言的错误处理机制

2108
01:27:46,000 --> 01:27:49,000
会让你产生某种特定的性格

2109
01:27:49,000 --> 01:27:54,000
就是我觉得写思习的人一般都会比较悲观

2110
01:27:54,000 --> 01:27:58,000
你觉得这个东西是很有可能失败的

2111
01:27:58,000 --> 01:28:02,000
就是不管干什么都会说这个玩意是错的

2112
01:28:02,000 --> 01:28:04,000
错的错的错的错的

2113
01:28:04,000 --> 01:28:05,000
对

2114
01:28:05,000 --> 01:28:07,000
然后写 java 的可能就不会想那么多

2115
01:28:07,000 --> 01:28:09,000
总是会假设说这个世界会完美运行的

2116
01:28:09,000 --> 01:28:11,000
出了错再去想它应该怎么办

2117
01:28:11,000 --> 01:28:12,000
没错

2118
01:28:12,000 --> 01:28:13,000
anyway

2119
01:28:13,000 --> 01:28:17,000
就这个 4.3 节他讲了另外一个我觉得挺重要的事

2120
01:28:17,000 --> 01:28:19,000
就是还是叫做重用网络工具

2121
01:28:19,000 --> 01:28:23,000
嗯但这里举的一个例子其实是我也一直很想吐槽的

2122
01:28:23,000 --> 01:28:24,000
对了还有一个另外相关的事情

2123
01:28:24,000 --> 01:28:26,000
我们可以在这里聊一聊

2124
01:28:26,000 --> 01:28:28,000
就是他调到一个例子就是 unix 系统里面有

2125
01:28:28,000 --> 01:28:32,000
以前有一个很通用的工具叫做 inetd

2126
01:28:32,000 --> 01:28:33,000
inetd

2127
01:28:33,000 --> 01:28:34,000
inetd

2128
01:28:34,000 --> 01:28:36,000
这个 d 们有什么用的就是它的作用很简单

2129
01:28:36,000 --> 01:28:41,000
它会去监听一个端口或者几个端口

2130
01:28:41,000 --> 01:28:43,000
然后去接受连接

2131
01:28:43,000 --> 01:28:46,000
然后一旦他接受指定端口有没有指定连接

2132
01:28:46,000 --> 01:28:48,000
它会启动一个

2133
01:28:48,000 --> 01:28:49,000
进程

2134
01:28:49,000 --> 01:28:52,000
然后把这个进程的输入套到这个连接上

2135
01:28:52,000 --> 01:28:54,000
然后输出套到这个连接的

2136
01:28:54,000 --> 01:28:56,000
就一个它就是有输出出嘛对吧

2137
01:28:56,000 --> 01:28:57,000
对

2138
01:28:57,000 --> 01:28:59,000
它把这个跟那个程序的输出对接起来

2139
01:28:59,000 --> 01:29:00,000
这样的话

2140
01:29:00,000 --> 01:29:06,000
其实这个程序本身就不用考虑它的这个输出是从哪里来的

2141
01:29:06,000 --> 01:29:09,000
它只用考虑去处理这个输出就好了

2142
01:29:09,000 --> 01:29:10,000
就其他网络的事情也好

2143
01:29:10,000 --> 01:29:12,000
还是说从一个管道过来的也好

2144
01:29:12,000 --> 01:29:14,000
对这个程序来说是透明的

2145
01:29:14,000 --> 01:29:16,000
这样它可以把它就可以重用这个

2146
01:29:16,000 --> 01:29:20,000
iNetD 里面已经实现过的那些网络的机制了

2147
01:29:20,000 --> 01:29:21,000
对吧

2148
01:29:21,000 --> 01:29:22,000
当然它也说了一下原因

2149
01:29:22,000 --> 01:29:25,000
为什么其他的一些程序不能直接使用这个方法

2150
01:29:25,000 --> 01:29:30,000
但是其实仔细看来就是通可以通过某些方法去

2151
01:29:30,000 --> 01:29:34,000
去就从架构上的改进是可以重用这一点的

2152
01:29:34,000 --> 01:29:37,000
就想到我在这个当然这个 iNetD 现在用的也不是特别多好

2153
01:29:37,000 --> 01:29:39,000
我想说是另外一点事

2154
01:29:39,000 --> 01:29:41,000
就是现在不是有那个什么 systemD

2155
01:29:41,000 --> 01:29:45,000
和之前在 ubuntu 里面用的比较多的那个叫 upstart

2156
01:29:45,000 --> 01:29:46,000
嗯嗯

2157
01:29:46,000 --> 01:29:50,000
他们本身有一个功能叫做 demonization 这件事情

2158
01:29:50,000 --> 01:29:52,000
其实是一个非常诡异的事情

2159
01:29:52,000 --> 01:29:54,000
就是你要让一个程序成为一个守护进程

2160
01:29:54,000 --> 01:29:57,000
在 unix 系统里面你要做很多事情对吧

2161
01:29:57,000 --> 01:30:00,000
你要把它输出输出

2162
01:30:00,000 --> 01:30:01,000
调好那个那个冲击一遍

2163
01:30:01,000 --> 01:30:02,000
写一大堆脚本

2164
01:30:02,000 --> 01:30:04,000
你还得 double fork 对吧

2165
01:30:04,000 --> 01:30:08,000
防止这样因为那个被收割掉什么之类的事情

2166
01:30:08,000 --> 01:30:12,000
然后然后也是因为这个所以那个 djp 才写了这个 demon tool

2167
01:30:12,000 --> 01:30:15,000
这套工具去完成这个事情这个事情对吧

2168
01:30:15,000 --> 01:30:17,000
但其实这个事情是完全没有必要去做的

2169
01:30:17,000 --> 01:30:19,000
因为在现代的操作系统里面

2170
01:30:19,000 --> 01:30:21,000
基本上都有这种自带的工具

2171
01:30:21,000 --> 01:30:25,000
去帮你做这个进程的监控和这个这个管理

2172
01:30:25,000 --> 01:30:30,000
使得你根本其实不需要写一个传统意义上的 demon 进程

2173
01:30:30,000 --> 01:30:31,000
就是这个守护进程

2174
01:30:31,000 --> 01:30:32,000
就不需要助流后台

2175
01:30:32,000 --> 01:30:35,000
你就让那个程序助流前台就可以了

2176
01:30:35,000 --> 01:30:38,000
然后这个前台的程序会被像 systemd

2177
01:30:38,000 --> 01:30:40,000
还是 upstart

2178
01:30:40,000 --> 01:30:43,000
这种这种管理工具去管理

2179
01:30:43,000 --> 01:30:47,000
使得它能够实现 demon 进程同样的功能

2180
01:30:47,000 --> 01:30:48,000
甚至更好的实现功能

2181
01:30:48,000 --> 01:30:51,000
所以应该把这个东西交出去

2182
01:30:51,000 --> 01:30:54,000
让更专业更专注的工具来完成这个事儿

2183
01:30:54,000 --> 01:30:58,000
而不是说所有的人写一个那种 server 的时候

2184
01:30:58,000 --> 01:31:00,000
都需要去做一个 double fork

2185
01:31:00,000 --> 01:31:02,000
就变成 demon 这种形式

2186
01:31:02,000 --> 01:31:03,000
对

2187
01:31:03,000 --> 01:31:05,000
这个是我要吐槽的一个事情

2188
01:31:05,000 --> 01:31:08,000
然后 4.4 节讲了另外一个可以重用的部分

2189
01:31:08,000 --> 01:31:09,000
就是 access control

2190
01:31:09,000 --> 01:31:10,000
就是这个访问控制

2191
01:31:10,000 --> 01:31:12,000
就在一般的 unix 系统里面

2192
01:31:12,000 --> 01:31:14,000
这个文件的权限

2193
01:31:14,000 --> 01:31:18,000
权系统是一个比较简单和常用的访问控制的基础

2194
01:31:18,000 --> 01:31:25,000
当然有很多人说一个简单的用户组和其他分类的方法

2195
01:31:25,000 --> 01:31:27,000
并不能解决所有的问题

2196
01:31:27,000 --> 01:31:29,000
所以后来也叫做 acl

2197
01:31:29,000 --> 01:31:30,000
access control list

2198
01:31:30,000 --> 01:31:32,000
这种更高级的方式来做

2199
01:31:32,000 --> 01:31:33,000
但是 access control list

2200
01:31:33,000 --> 01:31:35,000
其实现在在 unix 里面

2201
01:31:35,000 --> 01:31:38,000
在类 unix 里面已经不比 windows 里面少了

2202
01:31:38,000 --> 01:31:41,000
对比如说 Ouest 10 就是用了这个嘛

2203
01:31:41,000 --> 01:31:42,000
对

2204
01:31:42,000 --> 01:31:43,000
但 anyway

2205
01:31:43,000 --> 01:31:46,000
这个是具体实现的问题

2206
01:31:46,000 --> 01:31:47,000
就是说这个要点就是说

2207
01:31:47,000 --> 01:31:50,000
如果系统已经有一个 access control 的工具了

2208
01:31:50,000 --> 01:31:52,000
不管是文件系统的权限也好

2209
01:31:52,000 --> 01:31:53,000
还是 acl 也好

2210
01:31:53,000 --> 01:31:55,000
所以我们应该尽可能去重用它

2211
01:31:55,000 --> 01:31:59,000
就是因为没有编写的代码是最少的代码

2212
01:31:59,000 --> 01:32:01,000
因为如果一个代码量是 0 的话

2213
01:32:01,000 --> 01:32:03,000
它的 bug 量肯定是 0 的

2214
01:32:03,000 --> 01:32:04,000
对吧

2215
01:32:04,000 --> 01:32:05,000
所以怎么去重用它

2216
01:32:05,000 --> 01:32:06,000
就是一个非常要紧的事情

2217
01:32:06,000 --> 01:32:09,000
就很多人就愿意去重新发明轮子

2218
01:32:09,000 --> 01:32:12,000
要自己搞一套自己的用户账号

2219
01:32:12,000 --> 01:32:13,000
或者权限系统

2220
01:32:13,000 --> 01:32:16,000
但其实是往往是适得其反的

2221
01:32:16,000 --> 01:32:17,000
没错

2222
01:32:17,000 --> 01:32:19,000
然后 4.5

2223
01:32:19,000 --> 01:32:20,000
另外一个重用就是文件系统

2224
01:32:20,000 --> 01:32:22,000
就很多人说我要自己写一个

2225
01:32:22,000 --> 01:32:24,000
自己的 storage layer

2226
01:32:24,000 --> 01:32:25,000
存储层怎么怎么地

2227
01:32:25,000 --> 01:32:26,000
要做什么什么事儿

2228
01:32:26,000 --> 01:32:27,000
但其实现代的文件系统

2229
01:32:27,000 --> 01:32:29,000
就可以做非常非常多的事儿

2230
01:32:29,000 --> 01:32:31,000
就完成一些基本的存储功能

2231
01:32:31,000 --> 01:32:32,000
都是没有问题的

2232
01:32:32,000 --> 01:32:35,000
没有必要在特别早期的

2233
01:32:35,000 --> 01:32:38,000
或者没有那么明确性能平静的时候

2234
01:32:38,000 --> 01:32:41,000
去开发自己的文件存储的系统

2235
01:32:41,000 --> 01:32:42,000
对吧

2236
01:32:42,000 --> 01:32:43,000
对

2237
01:32:43,000 --> 01:32:47,000
所以能够总体来说 4.4 的一个核心要

2238
01:32:47,000 --> 01:32:49,000
就是说如何降低代码

2239
01:32:49,000 --> 01:32:50,000
刚才讲的那个就是重用这个

2240
01:32:50,000 --> 01:32:52,000
就简单说重用代码或者重用功能

2241
01:32:52,000 --> 01:32:53,000
比如说用这个函数去写通用的功能

2242
01:32:53,000 --> 01:32:54,000
然后重用网络工具

2243
01:32:54,000 --> 01:32:56,000
重用这个防御权限控制

2244
01:32:56,000 --> 01:32:57,000
重用这个文件系统

2245
01:32:57,000 --> 01:32:58,000
对吧

2246
01:32:58,000 --> 01:32:59,000
这都是一些

2247
01:32:59,000 --> 01:33:00,000
对

2248
01:33:00,000 --> 01:33:01,000
基本上都是在教你怎么样

2249
01:33:01,000 --> 01:33:02,000
怎么样不要去重新发明轮子

2250
01:33:02,000 --> 01:33:03,000
没错

2251
01:33:03,000 --> 01:33:04,000
然后第五节其实还是挺有意思的

2252
01:33:04,000 --> 01:33:05,000
就刚才讲的

2253
01:33:05,000 --> 01:33:06,000
我们讲的

2254
01:33:06,000 --> 01:33:07,000
我们讲的

2255
01:33:07,000 --> 01:33:08,000
对

2256
01:33:08,000 --> 01:33:09,000
对

2257
01:33:09,000 --> 01:33:10,000
对

2258
01:33:10,000 --> 01:33:11,000
基本上都是在教你怎么样

2259
01:33:11,000 --> 01:33:12,000
怎么样不要去重新发明轮子

2260
01:33:12,000 --> 01:33:13,000
没错

2261
01:33:13,000 --> 01:33:15,000
然后第五节其实还是挺有意思的

2262
01:33:15,000 --> 01:33:16,000
就刚才讲的

2263
01:33:16,000 --> 01:33:19,000
我们讲的那个叫做如何去减少这个

2264
01:33:19,000 --> 01:33:20,000
trusted code

2265
01:33:20,000 --> 01:33:22,000
受信任代码的部分

2266
01:33:22,000 --> 01:33:24,000
这当然就是从一个架构的方法来做了

2267
01:33:24,000 --> 01:33:26,000
这里又细节比较多

2268
01:33:26,000 --> 01:33:28,000
我们不就一一过了

2269
01:33:28,000 --> 01:33:31,000
有兴趣的朋友就可以去看一下里面的细节

2270
01:33:31,000 --> 01:33:34,000
因为这篇文章总体来说还是不难懂的

2271
01:33:34,000 --> 01:33:36,000
然后你只要具备一些基础的

2272
01:33:36,000 --> 01:33:38,000
这个 unix 相关的知识

2273
01:33:38,000 --> 01:33:40,000
是能够看个八九百分之八九十的

2274
01:33:40,000 --> 01:33:43,000
然后我相信看了这篇文章以后

2275
01:33:43,000 --> 01:33:46,000
这篇文章以后对你以后编写程序也好

2276
01:33:46,000 --> 01:33:48,000
做几个系统价格也好

2277
01:33:48,000 --> 01:33:50,000
会有一个非常大的改观吧

2278
01:33:50,000 --> 01:33:51,000
对

2279
01:33:51,000 --> 01:33:57,000
另外我觉得也可以从软件用户的角度来讲

2280
01:33:57,000 --> 01:34:02,000
来谈一谈怎么样才能避免在种类似于 Xcode ghost 这样一种

2281
01:34:02,000 --> 01:34:06,000
这样陷入这样一种窘境里面

2282
01:34:06,000 --> 01:34:08,000
嗯

2283
01:34:08,000 --> 01:34:11,000
我觉得最重要的一点就是远离国家人间

2284
01:34:11,000 --> 01:34:15,000
或者远离远离国内的互联网环境

2285
01:34:15,000 --> 01:34:21,000
你说这件事情中招的人最大的一个问题不就是贪

2286
01:34:21,000 --> 01:34:23,000
图省事了

2287
01:34:23,000 --> 01:34:24,000
嗯

2288
01:34:24,000 --> 01:34:30,000
当然一方面也跟也跟这个强的存在不可分离

2289
01:34:30,000 --> 01:34:33,000
就是在网速非常慢的情况下

2290
01:34:33,000 --> 01:34:37,000
你要连美国的一个服务器下载东西的确是很痛苦的一件事情

2291
01:34:37,000 --> 01:34:41,000
我记得在呃好像不是升级 Xcode

2292
01:34:41,000 --> 01:34:46,000
而是在升级那个新的呃在下载一个新的 iOS

2293
01:34:46,000 --> 01:34:53,000
Weston 升级包的时候呃两个退友同时给出了那个下载升级包的截图

2294
01:34:53,000 --> 01:34:54,000
一个在国内一个在国外

2295
01:34:54,000 --> 01:34:57,000
然后在国内那个就是还有四个小时

2296
01:34:57,000 --> 01:35:01,000
然后在国外这个在国外的这个就是还有两分钟

2297
01:35:01,000 --> 01:35:04,000
这其实这个我觉得反而是苹果的责任

2298
01:35:04,000 --> 01:35:11,000
就是说因为它毕竟是要在中国市场这个长期这个存在的一间公司嘛

2299
01:35:11,000 --> 01:35:16,000
他为什么不在中国市场多在中国搞个 CDN 是吧

2300
01:35:16,000 --> 01:35:22,000
他是有 CDN 的就是我的好奇在于为什么在有 CDN 的情况下还这么慢

2301
01:35:24,000 --> 01:35:26,000
就这个是我觉得是不能够接受的

2302
01:35:26,000 --> 01:35:28,000
这难道不是 CDN 的责任吗

2303
01:35:28,000 --> 01:35:30,000
那这个是 CDN 的责任没错

2304
01:35:30,000 --> 01:35:32,000
但是这个 CDN 是苹果买的

2305
01:35:32,000 --> 01:35:35,000
或者他他去去去花钱找的去能复

2306
01:35:35,000 --> 01:35:39,000
当然你可以说这个呃中国的网络就是要是不如美国

2307
01:35:39,000 --> 01:35:41,000
中国的网络环境的确是非常复杂的

2308
01:35:41,000 --> 01:35:45,000
你说中国的网络投放做了好的厂家

2309
01:35:45,000 --> 01:35:48,000
其实也只有那几家真正的巨头能做好

2310
01:35:48,000 --> 01:35:50,000
但是就是找那些巨头合作吧

2311
01:35:50,000 --> 01:35:51,000
这个有什么关系呢

2312
01:35:51,000 --> 01:35:52,000
对吧

2313
01:35:52,000 --> 01:35:54,000
我觉得是这个是苹果的责任

2314
01:35:54,000 --> 01:35:55,000
他应该把这件事情做好的

2315
01:35:55,000 --> 01:35:57,000
但是他并没有做好

2316
01:35:57,000 --> 01:36:00,000
这个我们就不去吐槽政策

2317
01:36:00,000 --> 01:36:02,000
我们毕竟是一个技术性的节目

2318
01:36:02,000 --> 01:36:05,000
其实有一件事我觉得还可以探讨一下

2319
01:36:05,000 --> 01:36:07,000
就是说刚才我们讲了一些呃

2320
01:36:07,000 --> 01:36:10,000
常见的一些技术手段去解决这个问题啊

2321
01:36:10,000 --> 01:36:15,000
但是其实有一个细节是在今年的早些时候

2322
01:36:15,000 --> 01:36:18,000
我在那个勾览的语言准里面问过那个问题

2323
01:36:18,000 --> 01:36:20,000
就说我问你这么一个事

2324
01:36:20,000 --> 01:36:23,000
就给定你同一个编译器

2325
01:36:23,000 --> 01:36:25,000
就是这个 binary 是一样的

2326
01:36:25,000 --> 01:36:29,000
然后给定你同一套这个原代码

2327
01:36:29,000 --> 01:36:37,000
你能否保证在不同的机器上去执行同样的这个编译器

2328
01:36:37,000 --> 01:36:40,000
编译同样的编译器得出来的那个结果

2329
01:36:40,000 --> 01:36:44,000
是就是叫做 bite to bite identical

2330
01:36:44,000 --> 01:36:46,000
就是每一个字节都是相同的

2331
01:36:46,000 --> 01:36:49,000
就叫我叫做 deterministic build

2332
01:36:49,000 --> 01:36:51,000
就是可预测的 build

2333
01:36:51,000 --> 01:36:53,000
这跟编译器的 policy 有关吗

2334
01:36:53,000 --> 01:36:55,000
有些编译器是不可能给出这样

2335
01:36:55,000 --> 01:36:59,000
哪怕你在同一台机器上只相差一微秒去编译

2336
01:36:59,000 --> 01:37:00,000
它也不一样

2337
01:37:00,000 --> 01:37:02,000
就它会打个 stamp 在里面

2338
01:37:02,000 --> 01:37:04,000
对这就是问题所在了

2339
01:37:04,000 --> 01:37:06,000
就是说因为首先说我先说一下

2340
01:37:06,000 --> 01:37:09,000
为什么我觉得这个是一个就 deterministic build

2341
01:37:09,000 --> 01:37:12,000
是一个非常好的特性

2342
01:37:12,000 --> 01:37:16,000
因为我们可以很负责就是 reproducible

2343
01:37:16,000 --> 01:37:18,000
就是我可以重现这件事情

2344
01:37:18,000 --> 01:37:22,000
因为我说如果我的同一套原代码

2345
01:37:22,000 --> 01:37:25,000
就是原代码本身可以用 git

2346
01:37:25,000 --> 01:37:28,000
就刚才我讲的 hash 的方式去验证它的等同性

2347
01:37:28,000 --> 01:37:29,000
对吧

2348
01:37:29,000 --> 01:37:31,000
对但是我并不知道

2349
01:37:31,000 --> 01:37:33,000
如果我每次同一套原代码

2350
01:37:33,000 --> 01:37:36,000
同一个编译器编刷的结果都是不可

2351
01:37:36,000 --> 01:37:37,000
都是不可

2352
01:37:37,000 --> 01:37:38,000
都不一样的话

2353
01:37:38,000 --> 01:37:42,000
我是没有办法建立原代码和编译刷结果之间

2354
01:37:42,000 --> 01:37:43,000
那个一一一色的关系的

2355
01:37:43,000 --> 01:37:46,000
因为它有很多其他编量是不在这个

2356
01:37:46,000 --> 01:37:49,000
这个这个这个这个这个函数的描述中的

2357
01:37:49,000 --> 01:37:50,000
对吧

2358
01:37:50,000 --> 01:37:59,000
所以说后来我就去做了一个很不全面很不靠谱的小调查

2359
01:37:59,000 --> 01:38:03,000
其实大部分的编译语言或者工具都不能都不能做到这一点

2360
01:38:03,000 --> 01:38:05,000
但原理刚才讲了

2361
01:38:05,000 --> 01:38:11,000
是你要实现你的说这个 deterministic compiling 的功能的话

2362
01:38:11,000 --> 01:38:20,000
那你需要就是任何一个 compiler 设计者都需要在设计的初期把它当做一个 fundamental 的 goal

2363
01:38:20,000 --> 01:38:28,000
就是一个一个是编辑器的设计目标来来做才可以在最终的呃编辑器的结果上实现这个

2364
01:38:28,000 --> 01:38:37,000
因为我觉得实现这一个实现这个目的呃有一个很明确的要求就是要明确的区分哪些是可变的呃

2365
01:38:37,000 --> 01:38:44,000
哪些是可变的编译条件另外一些哪些是不可变的编译条件

2366
01:38:44,000 --> 01:38:48,000
就是他在编译的时候他必须确定说比如说呃

2367
01:38:48,000 --> 01:38:52,000
呃比如说我给出一个优化的 flag

2368
01:38:52,000 --> 01:38:55,000
嗯欧一还是欧零还是欧三呃

2369
01:38:55,000 --> 01:39:05,000
嗯给出欧零的时候所包含的会被编译的部分和欧三会被编译的部分其实是不一样的对吧

2370
01:39:05,000 --> 01:39:09,000
而这个问题我能够理解但是我觉得这个就是可能要加一个限制条件

2371
01:39:09,000 --> 01:39:15,000
就是说编译的参数和编译的环境得是相同的对吧

2372
01:39:15,000 --> 01:39:21,000
我如果我们把这个编译的过程想象成一个数学的函数叫做 f 的话

2373
01:39:21,000 --> 01:39:25,000
它的输入应该包含哪些部分我们可以想一下包括原代码对吧

2374
01:39:25,000 --> 01:39:33,000
但是最大的问题就是这个函数里面所要给出给入的这个变量实在是太多了

2375
01:39:33,000 --> 01:39:38,000
然后你必须在设计函数的时候就明确的知道哪些变量是可以被

2376
01:39:38,000 --> 01:39:40,000
呃呃

2377
01:39:40,000 --> 01:39:49,000
包在一个额外的信息里面作为整个最终所要递交的这个 binary 的原信息给出去的

2378
01:39:49,000 --> 01:39:54,000
比如说编译时间编译时间你可以不包含在那个最终的 binary 里面

2379
01:39:54,000 --> 01:40:00,000
你只把它放在一个 binary 的附加包里面给用户

2380
01:40:00,000 --> 01:40:01,000
嗯嗯

2381
01:40:01,000 --> 01:40:02,000
嗯

2382
01:40:02,000 --> 01:40:07,000
对啊就要求你必须要明确的区分哪些是可变的哪些是不可变的

2383
01:40:07,000 --> 01:40:23,000
对所以我觉得我就我就想说这件事情我觉得在技术上应该是可以做到的就是如果我们不做不就哪怕是我们对这个原代码做一些比较疯狂的这个这个 transform 就是变形应该也是可以做到因为只要就就我说嘛

2384
01:40:23,000 --> 01:40:31,000
如果我们把编译过程想想成一个定义为一个函数的话它的那个输入一个函数的输入应该是什么应该是这个原代码

2385
01:40:31,000 --> 01:40:41,000
然后就是一个就是就是文本的形态我们可以直接通过算哈希的方法算出它的一个可以比较它的一个就不便性嘛

2386
01:40:41,000 --> 01:40:47,000
然后就是说各种编译的参数我们可以按一个方法给出就是编译参数应该是相同的

2387
01:40:47,000 --> 01:40:57,000
然后就是编译环境的然后环境其实在某种子风产生就但那个就扯的比较远近可能会牵涉到这个整个操作系统是不是应该一个是可以叫做 immutable 的系统对吧

2388
01:40:57,000 --> 01:40:58,000
嗯

2389
01:40:58,000 --> 01:40:59,000
理论上如果我们不考虑时间的因素的话呃是有办法把这个编译过程做成一个函数的是一个所谓一个这个是一个数学意义上的函数就是它的给定一个输入它的输出是很恒定的

2390
01:40:59,000 --> 01:41:22,000
而输出是很恒定的就是 fx 一定的一个是一个编义上的函数对对对它它不是一个我们 programming 的函数而是一个 mathematical function 对吧

2391
01:41:22,000 --> 01:41:30,000
对吧然后这个这个这个我的这个问题在那个 go line 的那个 groups 里面就还挺多人在下面回复的

2392
01:41:30,000 --> 01:41:41,000
然后后来是说呃有一个这个就是 go 的这个就是 go 的这个就 go 原的开发者他说他其实在尝试做这件事儿但是我不知道后来啊怎么样了

2393
01:41:41,000 --> 01:41:48,000
但他的说法不是用那个那个那个那个描述叫 deterministic build 而是说叫做 repeatable build

2394
01:41:48,000 --> 01:41:56,000
所以这件事情还是蛮期待的不知道他们会在一点几还是二点几里面把这件事情变成现实

2395
01:41:56,000 --> 01:42:05,000
好吧这是一个这是一个其实来我觉得是一个相对来说比较小众的需求或者说它是一个很明确的需求

2396
01:42:05,000 --> 01:42:15,000
但是相对于编译器所要完成的许多其他需求来说嗯没有那么高优先级的一个需求

2397
01:42:15,000 --> 01:42:24,000
但如果你是说啊你对这个安全有追求呢你从安全教你从安全专家的角度来讲这个需求毫无疑问是非常重要的

2398
01:42:24,000 --> 01:42:31,000
对可是如果你市场不是那么不市场不是这么决策的是吧

2399
01:42:31,000 --> 01:42:39,000
对比如说你是一个写 shader 的人或者是你是一个写 whatever UI 的人你可能会觉得这些事情没有那么重要

2400
01:42:39,000 --> 01:42:51,000
嗯嗯速度啊或者是优化程度啊才是乃至于什么前端后端的清晰分离啊静态分析啊才是编译器最重要的部分

2401
01:42:51,000 --> 01:43:00,000
对不 anyway 我们这里还是要提一篇跟刚才那个没关系啊跟提一个神级一样的论文哈

2402
01:43:00,000 --> 01:43:06,000
这个是 King Thompson 在 1984 年发表的一篇简短的一个 talk

2403
01:43:06,000 --> 01:43:12,000
他他 1984 年得了图灵奖然后在图灵奖的颁奖里上说这些

2404
01:43:12,000 --> 01:43:18,000
对这是一段一个小的 paper 吧只有很少三页纸非常简单

2405
01:43:18,000 --> 01:43:24,000
嗯嗯他讲的这么一个事就是说因为 King Thompson 这个人可能还是要如果大家名字如果这个名字你没听过的话

2406
01:43:24,000 --> 01:43:28,000
你如果你是程序员的话应该就该去面壁死亡了

2407
01:43:28,000 --> 01:43:31,000
哈哈哈哈如果你是 Windows 程序员的话挺有可言

2408
01:43:31,000 --> 01:43:34,000
哪怕是 Windows 程序员我觉得都不是挺有可言

2409
01:43:34,000 --> 01:43:36,000
因为这是 C 的 B 组吧

2410
01:43:36,000 --> 01:43:39,000
啊对好吧

2411
01:43:39,000 --> 01:43:42,000
那 King Thompson 是 Unix 的作者之一

2412
01:43:42,000 --> 01:43:44,000
当年在贝尔实验室的时候啊

2413
01:43:44,000 --> 01:43:48,000
然后他当然也是 C 的这个作者

2414
01:43:48,000 --> 01:43:52,000
然后到现在他在 Google 是个人的

2415
01:43:52,000 --> 01:43:57,000
到现在他在 Google 是 Go 语言的作者之一

2416
01:43:57,000 --> 01:44:00,000
嗯对有这么多光号就已经够够那个了

2417
01:44:00,000 --> 01:44:02,000
就不用再说别的了

2418
01:44:02,000 --> 01:44:04,000
对他写这一篇其实

2419
01:44:04,000 --> 01:44:08,000
其实这个篇比刚才那篇文章就更加技术性了

2420
01:44:08,000 --> 01:44:11,000
因为有没有几个比较 tricky 的一些概念

2421
01:44:11,000 --> 01:44:14,000
其实我到现在为止还不是特别理解

2422
01:44:14,000 --> 01:44:15,000
那吴唐你来解释一下

2423
01:44:15,000 --> 01:44:17,000
就是啊

2424
01:44:17,000 --> 01:44:21,000
Xcode DOS 的这件事情其实并不是什么特别新鲜的事情

2425
01:44:21,000 --> 01:44:25,000
就比如说往回硕有一在

2426
01:44:25,000 --> 01:44:30,000
呃 2012 年的时候有一个有一件事件就是 Puti 的中文版

2427
01:44:30,000 --> 01:44:32,000
你看又是中文版

2428
01:44:32,000 --> 01:44:34,000
在被人植入了后门

2429
01:44:34,000 --> 01:44:37,000
就是你在使用这个中文版的 Puti 的时候

2430
01:44:37,000 --> 01:44:43,000
呃你的 SSH 的呃工钥和私钥都会被上传到一个服务器了

2431
01:44:43,000 --> 01:44:49,000
然后呃你要连接的机器也会被上传到这个服务器了

2432
01:44:49,000 --> 01:44:52,000
所以就是如果你使用了这个被感染的版本的 Puti

2433
01:44:52,000 --> 01:44:57,000
那也就等于把你自己的那个服务器的呃

2434
01:44:57,000 --> 01:45:00,000
呃要是拱手送给了那个感染者

2435
01:45:00,000 --> 01:45:01,000
呃

2436
01:45:01,000 --> 01:45:06,000
然后更古早的就是我们之前提到那个 Delfi-7 的 virus

2437
01:45:06,000 --> 01:45:10,000
然后而这一切其实在早在 80 年代

2438
01:45:10,000 --> 01:45:12,000
在 84 年

2439
01:45:12,000 --> 01:45:17,000
在那个 Kent Thompson 的论文里面就已经呃提到这件事情

2440
01:45:17,000 --> 01:45:19,000
就是他那一年他去呃

2441
01:45:19,000 --> 01:45:23,000
接受 ACM 的图灵奖

2442
01:45:23,000 --> 01:45:24,000
嗯

2443
01:45:24,000 --> 01:45:29,000
然后他在图灵奖上就讲了自己在这个当时的 C compiler

2444
01:45:29,000 --> 01:45:33,000
就是 CC 在那个 UNIX 的 CC compiler 里面植入后门的这件事情

2445
01:45:33,000 --> 01:45:34,000
嗯

2446
01:45:34,000 --> 01:45:36,000
所以这实际上是一件非常古老的事情

2447
01:45:36,000 --> 01:45:38,000
然后嗯

2448
01:45:38,000 --> 01:45:39,000
嗯

2449
01:45:39,000 --> 01:45:43,000
有希望同学可以去看一看这个 Kent Thompson 的这篇论文

2450
01:45:43,000 --> 01:45:45,000
非常短只有三页

2451
01:45:45,000 --> 01:45:46,000
但是对

2452
01:45:46,000 --> 01:45:48,000
因为他毕竟他只是一个讲话嘛

2453
01:45:48,000 --> 01:45:50,000
对他只是从这个讲话上来的

2454
01:45:50,000 --> 01:45:51,000
嗯

2455
01:45:51,000 --> 01:45:53,000
其实那篇论文的最后结尾那一段

2456
01:45:53,000 --> 01:45:54,000
其实还挺有意思的

2457
01:45:54,000 --> 01:45:59,000
就是他在 80 年代对这个安全和这个法律啊

2458
01:45:59,000 --> 01:46:00,000
还有这个责任的鉴定

2459
01:46:00,000 --> 01:46:05,000
其实跟我们现在的一些想法还都比较超前嘛至少说

2460
01:46:05,000 --> 01:46:07,000
嗯嗯

2461
01:46:07,000 --> 01:46:08,000
嗯

2462
01:46:08,000 --> 01:46:10,000
这个具体就不再去描述了

2463
01:46:10,000 --> 01:46:12,000
大家可以自己有兴趣看这篇文章好了

2464
01:46:12,000 --> 01:46:13,000
对

2465
01:46:13,000 --> 01:46:16,000
而且很有趣的是他在那个文章里面还提到说

2466
01:46:16,000 --> 01:46:19,000
其实这也不是他原创的这种啊

2467
01:46:19,000 --> 01:46:22,000
这样一种这样一种手段

2468
01:46:22,000 --> 01:46:23,000
嗯

2469
01:46:23,000 --> 01:46:26,000
他最开始读到这些这种可能性的攻击的

2470
01:46:26,000 --> 01:46:27,000
嗯

2471
01:46:27,000 --> 01:46:31,000
他最后一样的攻击的是在一个空军的呃杂志上面

2472
01:46:31,000 --> 01:46:37,000
就是一个 unknown 的未知的空军的文档上面

2473
01:46:37,000 --> 01:46:42,000
他读到了这样一种呃攻击的可能性

2474
01:46:42,000 --> 01:46:48,000
所以可能整个来整个事情的想法还要比我们所知道的追溯更早

2475
01:46:48,000 --> 01:46:49,000
嗯

2476
01:46:49,000 --> 01:46:50,000
嗯

2477
01:46:50,000 --> 01:46:53,000
但直到今天这样一种这样一种怎么说呢

2478
01:46:54,000 --> 01:46:56,000
呃安全漏洞还是在被害人

2479
01:46:56,000 --> 01:47:00,000
所以他他那句话他那个文章的标那个文章的标那个文章的标

2480
01:47:00,000 --> 01:47:02,000
reflection on trusting trust

2481
01:47:02,000 --> 01:47:06,000
就是去可以对应到刚才我们节目开始的时候

2482
01:47:06,000 --> 01:47:08,000
就关于这个段讨论开始的时候你提到那个问题

2483
01:47:08,000 --> 01:47:11,000
你如何真的信赖你的这个工具呢

2484
01:47:11,000 --> 01:47:17,000
他那边最后结尾的那段的那个章节的第一段话是这么说的

2485
01:47:17,000 --> 01:47:18,000
叫做

2486
01:47:18,000 --> 01:47:20,000
嗯

2487
01:47:20,000 --> 01:47:25,000
you can't trust code that you did not totally create yourself

2488
01:47:25,000 --> 01:47:26,000
对

2489
01:47:26,000 --> 01:47:27,000
就这其实 RMS

2490
01:47:27,000 --> 01:47:28,000
就是 RMS

2491
01:47:28,000 --> 01:47:30,000
就是 RMS 是一样的

2492
01:47:30,000 --> 01:47:32,000
所以也比较巧了

2493
01:47:32,000 --> 01:47:37,000
那他还提到有一个就是我们到其实到我现在认为就是说这没有就刚刚你说嘛

2494
01:47:37,000 --> 01:47:40,000
如果你真的偏激一点的话真的是没有真正的安全的

2495
01:47:40,000 --> 01:47:46,000
因为叫做比如说这个 a well installed microcode bug will be almost impossible to detect

2496
01:47:46,000 --> 01:47:51,000
就是一个安装的非常精巧的这种就是微代码

2497
01:47:51,000 --> 01:47:57,000
微代码就是像这个呃什么这个硬件里面驱动我一个呃小硬件的这个驱程

2498
01:47:57,000 --> 01:47:59,000
或者是一个驱动的那个 bug

2499
01:47:59,000 --> 01:48:01,000
基本上不可能被发现的

2500
01:48:01,000 --> 01:48:03,000
因为实在是太难太低层了

2501
01:48:03,000 --> 01:48:06,000
就越低越底层的 bug 越难发现

2502
01:48:06,000 --> 01:48:08,000
如果你更进一路更进一步的话

2503
01:48:08,000 --> 01:48:13,000
那在硬件层面上植入的病毒或者是后门

2504
01:48:13,000 --> 01:48:14,000
就在什么

2505
01:48:14,000 --> 01:48:15,000
不可能被

2506
01:48:15,000 --> 01:48:17,000
在 IC 电路板级别的 bug 是吧

2507
01:48:17,000 --> 01:48:18,000
对啊

2508
01:48:18,000 --> 01:48:19,000
这个据说是有的

2509
01:48:19,000 --> 01:48:22,000
听说那个那就是小刀小写没有也没有经过确认

2510
01:48:22,000 --> 01:48:27,000
英特尔的芯片里面据说是只有这个 NSA 的后门的

2511
01:48:27,000 --> 01:48:29,000
但是我不知道到底怎么如何实现这一点

2512
01:48:29,000 --> 01:48:30,000
对啊

2513
01:48:30,000 --> 01:48:40,000
所以其实有时候我们嘲笑一些就是龙心或者是国产 CPU 计算机国产化的知识者们

2514
01:48:40,000 --> 01:48:43,000
会说这简直是有道理

2515
01:48:43,000 --> 01:48:45,000
对

2516
01:48:45,000 --> 01:48:48,000
为什么说这么强调自主知识产权

2517
01:48:48,000 --> 01:48:50,000
其实也说的本账就是这么一件事

2518
01:48:50,000 --> 01:48:51,000
就是说他说

2519
01:48:51,000 --> 01:48:54,000
You can't trust software you didn't write yourself

2520
01:48:54,000 --> 01:48:56,000
那你也不可能说

2521
01:48:56,000 --> 01:48:59,000
如果你不能信任不是你自己写的软件

2522
01:48:59,000 --> 01:49:02,000
当然更不可能信任不是你自己造的硬件了

2523
01:49:02,000 --> 01:49:03,000
对吧

2524
01:49:03,000 --> 01:49:04,000
没错

2525
01:49:04,000 --> 01:49:06,000
所以从这一点上来说

2526
01:49:06,000 --> 01:49:09,000
这个计算机国产化是有其意义的

2527
01:49:09,000 --> 01:49:12,000
或者说按照那个话来说

2528
01:49:12,000 --> 01:49:17,000
如果你对你的软件安全足够介意的话

2529
01:49:17,000 --> 01:49:19,000
你一定要从硬件造起

2530
01:49:19,000 --> 01:49:20,000
对

2531
01:49:20,000 --> 01:49:23,000
而如果你要足够在意你的国家安全的话

2532
01:49:23,000 --> 01:49:25,000
那你必须要注意你的信息安全

2533
01:49:25,000 --> 01:49:28,000
好吧

2534
01:49:28,000 --> 01:49:31,000
今天的节目就到此为止了

2535
01:49:31,000 --> 01:49:33,000
感谢收听 IPM Podcast

2536
01:49:33,000 --> 01:49:37,000
网贸次下的 IT 技术主题娱乐节目内核恐慌

2537
01:49:37,000 --> 01:49:39,000
我们号称 Hardcore

2538
01:49:39,000 --> 01:49:40,000
但是也没有干货

2539
01:49:40,000 --> 01:49:43,000
想听的人听不想听的人就别听

2540
01:49:43,000 --> 01:49:45,000
你可以为本节目捐款

2541
01:49:45,000 --> 01:49:48,000
捐款的意思是 ipn.li

2542
01:49:48,000 --> 01:49:51,000
slashkernelpanicslash donate

2543
01:49:51,000 --> 01:49:53,000
捐款金额随意

2544
01:49:53,000 --> 01:49:56,000
只要是能被 8 整除的正整数就可以

2545
01:49:56,000 --> 01:49:58,000
捐款不会给你带来什么

2546
01:49:58,000 --> 01:50:00,000
不捐也不会让你失去什么

2547
01:50:00,000 --> 01:50:02,000
我们的口号是 No Heart Feelings

2548
01:50:02,000 --> 01:50:04,000
本期口号不是这个

2549
01:50:04,000 --> 01:50:05,000
哦对

2550
01:50:05,000 --> 01:50:07,000
本期口号是 Trust No One

2551
01:50:07,000 --> 01:50:08,000
Trust No One

2552
01:50:08,000 --> 01:50:09,000
Even your compiler

2553
01:50:09,000 --> 01:50:10,000
and your computer

2554
01:50:10,000 --> 01:50:11,000
and your computer

2555
01:50:11,000 --> 01:50:13,000
and your cpu chip

2556
01:50:13,000 --> 01:50:15,000
and your government

2557
01:50:15,000 --> 01:50:17,000
and yourself

2558
01:50:17,000 --> 01:50:19,000
and yourself

2559
01:50:19,000 --> 01:50:20,000
and yourself

2560
01:50:20,000 --> 01:50:22,000
如果你有任何反馈

2561
01:50:22,000 --> 01:50:23,000
可以发电子邮件到

2562
01:50:23,000 --> 01:50:27,000
colonelpanic at ipn.li

2563
01:50:27,000 --> 01:50:31,000
同时也欢迎您收听 IPM 旗下其他其他几档节目

2564
01:50:31,000 --> 01:50:33,000
IT 公论

2565
01:50:33,000 --> 01:50:34,000
未知到

2566
01:50:34,000 --> 01:50:35,000
太一来了

2567
01:50:35,000 --> 01:50:36,000
流行通讯

2568
01:50:36,000 --> 01:50:37,000
high story

2569
01:50:37,000 --> 01:50:38,000
博物主题节目

2570
01:50:38,000 --> 01:50:39,000
博物志

2571
01:50:39,000 --> 01:50:41,000
美国大选主题节目

2572
01:50:41,000 --> 01:50:43,000
这件事情看的叫做选美

2573
01:50:43,000 --> 01:50:45,000
我们下期节目再会

2574
01:50:45,000 --> 01:50:47,000
对我们下期节目一定会来的

2575
01:50:47,000 --> 01:50:49,000
虽然这一次停了两周

2576
01:50:49,000 --> 01:50:52,000
然后让很多听众朋友们也觉得非常的

2577
01:50:54,000 --> 01:50:55,000
用一个什么形容词

2578
01:50:55,000 --> 01:50:57,000
难过或者是觉得

2579
01:50:57,000 --> 01:50:59,000
翘首以盼

2580
01:50:59,000 --> 01:51:00,000
翘首以待

2581
01:51:00,000 --> 01:51:03,000
对其实这期节目差点都没录成

2582
01:51:03,000 --> 01:51:04,000
兄弟们

2583
01:51:04,000 --> 01:51:05,000
各位听众

2584
01:51:05,000 --> 01:51:06,000
就是我本来

2585
01:51:07,000 --> 01:51:09,000
今天是要去木铃黑的

2586
01:51:09,000 --> 01:51:10,000
然后我女朋友说

2587
01:51:10,000 --> 01:51:12,000
如果不录节目的话

2588
01:51:12,000 --> 01:51:13,000
就不让我出门

2589
01:51:13,000 --> 01:51:16,000
所以我只好在这里录了这些节目

2590
01:51:16,000 --> 01:51:19,000
感谢无条女朋友大无味的牺牲

2591
01:51:19,000 --> 01:51:21,000
让本节目死灰复燃

2592
01:51:21,000 --> 01:51:22,000
不对

2593
01:51:22,000 --> 01:51:23,000
如果没有她的话

2594
01:51:23,000 --> 01:51:24,000
各位可能还要再等

2595
01:51:25,000 --> 01:51:26,000
两周

2596
01:51:26,000 --> 01:51:27,000
对

2597
01:51:28,000 --> 01:51:29,000
好吧

2598
01:51:29,000 --> 01:51:32,000
那我们虽然这一期也没有那么精彩

2599
01:51:32,000 --> 01:51:33,000
但

2600
01:51:35,000 --> 01:51:37,000
我们还是会继续录下去

2601
01:51:37,000 --> 01:51:40,000
其实这期我们发现一个挺好的把节目做下去的方法

2602
01:51:41,000 --> 01:51:42,000
什么方法

2603
01:51:42,000 --> 01:51:44,000
每期找一篇论文来讲

2604
01:51:45,000 --> 01:51:46,000
哦

2605
01:51:46,000 --> 01:51:47,000
到底是可以

2606
01:51:47,000 --> 01:51:53,000
反正不是有什么什么计算机程序员必读的 20 篇论文之类的文章

2607
01:51:54,000 --> 01:51:55,000
我们可以去下课

2608
01:51:55,000 --> 01:51:56,000
这样

2609
01:51:56,000 --> 01:51:57,000
我们确实要讲

2610
01:51:57,000 --> 01:51:58,000
我们确实要讲那么深度

2611
01:51:58,000 --> 01:52:02,000
还是可以的吧

2612
01:52:02,000 --> 01:52:05,000
就基本上如果听完我们这 20 期节目的话

2613
01:52:05,000 --> 01:52:07,000
就可以完成一个叫什么

2614
01:52:07,000 --> 01:52:10,000
韩寿课程

2615
01:52:10,000 --> 01:52:11,000
对

2616
01:52:11,000 --> 01:52:12,000
电大

2617
01:52:12,000 --> 01:52:17,000
其实我最近刚刚开始了一门开源的课程

2618
01:52:17,000 --> 01:52:22,000
而且是每写完一个 quiz 就要拍一张照片

2619
01:52:22,000 --> 01:52:27,000
然后要敲一段字来证明是你刚刚做这个 quiz

2620
01:52:27,000 --> 01:52:28,000
是什么方向

2621
01:52:28,000 --> 01:52:29,000
是什么方向

2622
01:52:30,000 --> 01:52:31,000
Data Science

2623
01:52:32,000 --> 01:52:34,000
这个是哪一块

2624
01:52:35,000 --> 01:52:36,000
具体叫做什么

2625
01:52:36,000 --> 01:52:38,000
是 Coursera 出的

2626
01:52:38,000 --> 01:52:45,000
叫 Data Analyze and Statistical Inference

2627
01:52:45,000 --> 01:52:47,000
就讲数据分析

2628
01:52:48,000 --> 01:52:49,000
所以你是重修统计学了

2629
01:52:50,000 --> 01:52:51,000
有一点吧

2630
01:52:51,000 --> 01:52:55,000
我对他感兴趣主要是因为他特会讲那个 R

2631
01:52:55,000 --> 01:52:58,000
然后我们公司的产品里面也会

2632
01:52:58,000 --> 01:53:00,000
就也支持了 R

2633
01:53:00,000 --> 01:53:04,000
所以我想反正可能将来用得上就不如学一学

2634
01:53:04,000 --> 01:53:06,000
而且这个最后是有证书的

2635
01:53:06,000 --> 01:53:09,000
如果你就是学完这个你就可以给自己标贴个标签

2636
01:53:09,000 --> 01:53:11,000
叫做 I'm a data scientist

2637
01:53:12,000 --> 01:53:14,000
那还是离他远了

2638
01:53:14,000 --> 01:53:16,000
要真正成为 Data Scientist 的话

2639
01:53:16,000 --> 01:53:19,000
可能要上另外几门比较深的课

2640
01:53:19,000 --> 01:53:21,000
这一门课非常浅显的感觉

2641
01:53:21,000 --> 01:53:23,000
他会讲些什么内容呢

2642
01:53:23,000 --> 01:53:24,000
大概就提纲是什么

2643
01:53:24,000 --> 01:53:26,000
objective 是

2644
01:53:27,000 --> 01:53:32,000
以上来是讲 intro statistics

2645
01:53:33,000 --> 01:53:37,000
然后后面会讲什么 scatter plot

2646
01:53:37,000 --> 01:53:41,000
然后后面会讲什么 experimental design

2647
01:53:41,000 --> 01:53:44,000
就是如果你要设计一个 experiment

2648
01:53:44,000 --> 01:53:47,000
来验证一些同学生的观点的话

2649
01:53:47,000 --> 01:53:49,000
会需要注意什么

2650
01:53:49,000 --> 01:53:50,000
OK

2651
01:53:50,000 --> 01:53:51,000
然后会有什么

2652
01:53:51,000 --> 01:53:57,000
就是使用 R 里面的各种各样的 plot 功能来建立图表

2653
01:53:57,000 --> 01:54:01,000
来建立 bar plot

2654
01:54:01,000 --> 01:54:04,000
然后告诉你各种 plot 有什么样的方法

2655
01:54:04,000 --> 01:54:07,000
其实比较 intro 的一门课

2656
01:54:07,000 --> 01:54:09,000
不错

2657
01:54:09,000 --> 01:54:10,000
对

2658
01:54:10,000 --> 01:54:12,000
其实我想想起上次是谁说的

2659
01:54:12,000 --> 01:54:16,000
说我们高中大学数学学那么多微积分

2660
01:54:16,000 --> 01:54:20,000
其实并没有什么鸟用对日常生活

2661
01:54:20,000 --> 01:54:22,000
反而是应该把这个函数

2662
01:54:22,000 --> 01:54:23,000
统计学

2663
01:54:23,000 --> 01:54:24,000
统计学

2664
01:54:24,000 --> 01:54:25,000
数理统计

2665
01:54:25,000 --> 01:54:26,000
数理统计做教的比较深刻

2666
01:54:26,000 --> 01:54:27,000
反而对日常

2667
01:54:27,000 --> 01:54:28,000
沐瑶说了吧

2668
01:54:28,000 --> 01:54:29,000
这是

2669
01:54:29,000 --> 01:54:30,000
应该是吧

2670
01:54:30,000 --> 01:54:31,000
应该是沐瑶说的

2671
01:54:31,000 --> 01:54:32,000
对

2672
01:54:32,000 --> 01:54:33,000
我在此深刻表示认同

2673
01:54:33,000 --> 01:54:35,000
嗯嗯嗯

2674
01:54:35,000 --> 01:54:36,000
嗯好吧

2675
01:54:36,000 --> 01:54:38,000
所以这门课刚刚开了两个礼拜

2676
01:54:38,000 --> 01:54:40,000
如果你们有兴趣的话

2677
01:54:40,000 --> 01:54:41,000
也还是可以跟进来

2678
01:54:41,000 --> 01:54:43,000
然后还挺有意思吧

2679
01:54:43,000 --> 01:54:46,000
跟吴涛一起学习进步

2680
01:54:46,000 --> 01:54:48,000
对

2681
01:54:49,000 --> 01:54:50,000
OK

2682
01:54:50,000 --> 01:54:52,000
那就到这了

2683
01:54:52,000 --> 01:54:53,000
好

2684
01:54:53,000 --> 01:54:54,000
我们两周之后再见

