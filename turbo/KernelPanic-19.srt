1
00:00:00,000 --> 00:00:04,000
欢迎收听 IPN Podcast 网络旗下的 IT 技术主题娱乐节目《内核恐慌》

2
00:00:04,000 --> 00:00:06,000
我们号称 Hardcore 但是也没有干货

3
00:00:06,000 --> 00:00:08,000
想听的人听 不想听的人就别听

4
00:00:08,000 --> 00:00:12,000
《内核恐慌》的网址是 ipn.li.colonpanic

5
00:00:12,000 --> 00:00:16,000
我们推荐大家使用 Podcast 泛用型客户端订阅我们的节目

6
00:00:16,000 --> 00:00:18,000
如果您不知道什么是泛用型客户端

7
00:00:18,000 --> 00:00:20,000
或者您不知道该用什么客户端

8
00:00:20,000 --> 00:00:23,000
欢迎访问 ipn.li.faq

9
00:00:23,000 --> 00:00:26,000
同时也欢迎你为我们的节目捐款

10
00:00:26,000 --> 00:00:29,000
捐款地址是 ipn.li.colonpanic.donate

11
00:00:29,000 --> 00:00:31,000
捐款技能随意

12
00:00:31,000 --> 00:00:33,000
只要是能被 8 整出的正人数就可以

13
00:00:33,000 --> 00:00:35,000
捐款不会为你带来什么

14
00:00:35,000 --> 00:00:36,000
不捐也不会让你失去什么

15
00:00:36,000 --> 00:00:39,000
我们的口号是 No Hot Feelings

16
00:00:39,000 --> 00:00:40,000
越来越熟练了这一段话

17
00:00:40,000 --> 00:00:42,000
对 这是苦练的结果

18
00:00:42,000 --> 00:00:47,000
每天晚上含着小狮子在洗澡的时候背这段罐子好

19
00:00:47,000 --> 00:00:49,000
你练到不是这么耳熟

20
00:00:49,000 --> 00:00:51,000
这谁来着

21
00:00:51,000 --> 00:00:52,000
我不记得了

22
00:00:52,000 --> 00:00:57,000
反正是某个演说家要克服口吃的毛病

23
00:00:57,000 --> 00:00:58,000
这个是真的吗

24
00:00:58,000 --> 00:01:00,000
还是一个鸡汤

25
00:01:00,000 --> 00:01:01,000
Good question

26
00:01:01,000 --> 00:01:02,000
我不知道

27
00:01:02,000 --> 00:01:03,000
有可能是真的吗

28
00:01:03,000 --> 00:01:04,000
因为我在想一下

29
00:01:04,000 --> 00:01:07,000
含着小狮子练春话这件事情的意义何在

30
00:01:07,000 --> 00:01:09,000
就增加你的障碍吗

31
00:01:09,000 --> 00:01:16,000
就好像绑着沙包在操场上跑圈一样

32
00:01:16,000 --> 00:01:18,000
可以让你吐了小狮子之后

33
00:01:18,000 --> 00:01:21,000
翻嘴的舌头好像变得灵活了

34
00:01:21,000 --> 00:01:23,000
所以以此类比的话

35
00:01:23,000 --> 00:01:25,000
如果程序员要提高自己的水平

36
00:01:25,000 --> 00:01:26,000
应该怎么增加这个难度呢

37
00:01:26,000 --> 00:01:29,000
不用显示器写程序

38
00:01:29,000 --> 00:01:35,000
用什么打孔吗

39
00:01:35,000 --> 00:01:42,000
或者降低的难度就只用单色显示器写程序

40
00:01:42,000 --> 00:01:46,000
然后等你有了语法高量之后

41
00:01:46,000 --> 00:01:49,000
效率就可以升起来

42
00:01:49,000 --> 00:01:52,000
所以用什么非语法高量的

43
00:01:52,000 --> 00:01:54,000
这么说吧

44
00:01:54,000 --> 00:01:55,000
用济世本写程序

45
00:01:55,000 --> 00:01:55,000
对

46
00:01:55,000 --> 00:01:57,000
This is partially true

47
00:01:57,000 --> 00:01:58,000
我必须说

48
00:01:58,000 --> 00:02:00,000
就是你不用 IDE 写程序的话

49
00:02:00,000 --> 00:02:03,000
如果你一开始就坚持不用 IDE 写程序

50
00:02:03,000 --> 00:02:05,000
那么等到你又开始用 IDE 的时候

51
00:02:05,000 --> 00:02:08,000
你的效率应该会有成倍的提升

52
00:02:08,000 --> 00:02:11,000
是不是这个道理

53
00:02:11,000 --> 00:02:14,000
想来应该是的

54
00:02:14,000 --> 00:02:15,000
所以这么说来

55
00:02:15,000 --> 00:02:17,000
我们都算是一直在背着沙包在跑

56
00:02:17,000 --> 00:02:18,000
对

57
00:02:18,000 --> 00:02:20,000
Doing it the hard way

58
00:02:20,000 --> 00:02:24,000
然后当你 Do it the normal way 的时候

59
00:02:24,000 --> 00:02:25,000
你就会发现容易了很多

60
00:02:25,000 --> 00:02:27,000
好吧

61
00:02:27,000 --> 00:02:29,000
这好像打星际中吧

62
00:02:29,000 --> 00:02:31,000
先用现在 Brutal 下面通过关

63
00:02:31,000 --> 00:02:33,000
然后再回去打 Easy

64
00:02:33,000 --> 00:02:35,000
简直小菜一碟

65
00:02:35,000 --> 00:02:36,000
没错

66
00:02:36,000 --> 00:02:37,000
OK

67
00:02:37,000 --> 00:02:41,000
先进入我们的第一个环节

68
00:02:41,000 --> 00:02:42,000
Follow up

69
00:02:42,000 --> 00:02:44,000
我听说 Rail 拿到了一块

70
00:02:44,000 --> 00:02:45,000
Happy Hacking Keyboard Pro 2

71
00:02:45,000 --> 00:02:47,000
是真的吗

72
00:02:47,000 --> 00:02:47,000
对

73
00:02:47,000 --> 00:02:51,000
上次 Lawrence 把他那块闲置不用的

74
00:02:51,000 --> 00:02:54,000
HKB Pro 2 送给了我

75
00:02:54,000 --> 00:02:55,000
这是什么时候

76
00:02:55,000 --> 00:02:57,000
这是两个月之前的事情吧

77
00:02:57,000 --> 00:02:59,000
快递走了这么久吗

78
00:02:59,000 --> 00:02:59,000
是

79
00:02:59,000 --> 00:03:02,000
我是挺早拿到

80
00:03:02,000 --> 00:03:05,000
但是因为还没来几次感觉上手

81
00:03:05,000 --> 00:03:08,000
所以就也一直没有讲

82
00:03:08,000 --> 00:03:10,000
但是就算也用了一段时间

83
00:03:10,000 --> 00:03:11,000
现在也

84
00:03:11,000 --> 00:03:13,000
因为整个键位都变了

85
00:03:13,000 --> 00:03:17,000
所以还是花了一点时间来适应的

86
00:03:17,000 --> 00:03:19,000
现在适应之后觉得还不错

87
00:03:19,000 --> 00:03:21,000
所以我们可以讨论一下

88
00:03:21,000 --> 00:03:25,000
其实我一直觉得一个疑问

89
00:03:25,000 --> 00:03:27,000
HKB 它到底有几个版本

90
00:03:27,000 --> 00:03:29,000
应该是有若干版本

91
00:03:29,000 --> 00:03:32,000
首先它有若干版本

92
00:03:32,000 --> 00:03:36,000
因为我看 Wikipedia 上面写的时候

93
00:03:36,000 --> 00:03:39,000
它有可能是有四五个

94
00:03:39,000 --> 00:03:40,000
四五六个版本

95
00:03:40,000 --> 00:03:40,000
还有什么

96
00:03:40,000 --> 00:03:43,000
但根据日本的和 International 不一样

97
00:03:43,000 --> 00:03:45,000
但是包括有 HKB Professional

98
00:03:45,000 --> 00:03:46,000
Professional 2

99
00:03:46,000 --> 00:03:48,000
然后现在我看到

100
00:03:48,000 --> 00:03:49,000
是在卖世界什么 Lite

101
00:03:49,000 --> 00:03:50,000
对吧

102
00:03:50,000 --> 00:03:51,000
应该是这样的

103
00:03:51,000 --> 00:03:54,000
一开始有 HKB 普通版本

104
00:03:54,000 --> 00:03:55,000
就是第一代 HKB

105
00:03:55,000 --> 00:03:58,000
后来有了 HKB Lite

106
00:03:58,000 --> 00:04:01,000
再后来有了 HKB Pro

107
00:04:01,000 --> 00:04:03,000
然后 Pro 2

108
00:04:03,000 --> 00:04:06,000
然后 Pro 2 后面又出了一个 S 版

109
00:04:06,000 --> 00:04:07,000
Ultimum S

110
00:04:07,000 --> 00:04:09,000
就是加了橡皮圈的

111
00:04:09,000 --> 00:04:12,000
比较降噪版本

112
00:04:12,000 --> 00:04:14,000
S stand for silent

113
00:04:14,000 --> 00:04:17,000
所以它们之间有什么区别呢

114
00:04:17,000 --> 00:04:19,000
Lite 版本有方向节

115
00:04:19,000 --> 00:04:21,000
OK

116
00:04:21,000 --> 00:04:25,000
然后日语版本

117
00:04:25,000 --> 00:04:28,000
是那种大的 T 型

118
00:04:28,000 --> 00:04:31,000
不是 L 型到 L 型回车的

119
00:04:31,000 --> 00:04:31,000
应该是

120
00:04:31,000 --> 00:04:32,000
Oh no

121
00:04:32,000 --> 00:04:35,000
所以它所有

122
00:04:35,000 --> 00:04:36,000
就我们这么说吧

123
00:04:36,000 --> 00:04:39,000
它是分型号和国家的

124
00:04:39,000 --> 00:04:41,000
就是如果我们不考虑这个国家区别

125
00:04:41,000 --> 00:04:43,000
只考虑型号的区别的话

126
00:04:43,000 --> 00:04:44,000
它有几个不同

127
00:04:44,000 --> 00:04:46,000
就是 The Original

128
00:04:46,000 --> 00:04:48,000
是哪一款

129
00:04:48,000 --> 00:04:49,000
就最原始的那款

130
00:04:49,000 --> 00:04:51,000
Original 现在应该已经找不着了

131
00:04:51,000 --> 00:04:52,000
就已经不在

132
00:04:52,000 --> 00:04:52,000
它停产了

133
00:04:52,000 --> 00:04:55,000
但是我想知道那款应该叫什么名字

134
00:04:55,000 --> 00:04:56,000
就叫 HKB

135
00:04:56,000 --> 00:04:56,000
叫什么

136
00:04:56,000 --> 00:04:58,000
应该是就叫 HKB Pro

137
00:04:58,000 --> 00:05:01,000
应该是就只叫 HKB

138
00:05:01,000 --> 00:05:03,000
然后 Lite 和 Pro 的区分

139
00:05:03,000 --> 00:05:04,000
是从第二版才有

140
00:05:04,000 --> 00:05:06,000
所以 Lite 和 Pro 之间是什么区别

141
00:05:06,000 --> 00:05:09,000
就 Lite 是 Lite 版本

142
00:05:09,000 --> 00:05:13,000
这是一个很有趣的问题

143
00:05:13,000 --> 00:05:17,000
Lite 和 Pro 之间的版本

144
00:05:17,000 --> 00:05:19,000
很有可能

145
00:05:19,000 --> 00:05:20,000
键帽是有差别的

146
00:05:20,000 --> 00:05:22,000
然后 Pro 的版本

147
00:05:22,000 --> 00:05:24,000
现在是不是已经没有卖了

148
00:05:24,000 --> 00:05:25,000
对

149
00:05:25,000 --> 00:05:27,000
第一代的版本应该已经没有卖了

150
00:05:27,000 --> 00:05:28,000
甚至第一代的版本

151
00:05:28,000 --> 00:05:30,000
可能是没有 International 版本的

152
00:05:30,000 --> 00:05:32,000
就是一个纯日文的类型

153
00:05:32,000 --> 00:05:34,000
那因为我们现在用的

154
00:05:34,000 --> 00:05:36,000
都是所谓的 Professional 2

155
00:05:36,000 --> 00:05:36,000
对吧

156
00:05:36,000 --> 00:05:37,000
对

157
00:05:37,000 --> 00:05:37,000
Pro 2

158
00:05:37,000 --> 00:05:39,000
然后我去它那个官网

159
00:05:39,000 --> 00:05:41,000
看好像现在这款也没有卖了吗

160
00:05:41,000 --> 00:05:42,000
还是怎么样

161
00:05:42,000 --> 00:05:43,000
有吧

162
00:05:43,000 --> 00:05:45,000
不会挺傻了吧

163
00:05:45,000 --> 00:05:47,000
因为我去它官网

164
00:05:47,000 --> 00:05:49,000
它那个官网也长得很奇怪

165
00:05:49,000 --> 00:05:51,000
就是你不知道它到底是个什么样的

166
00:05:51,000 --> 00:05:52,000
什么的性质吗

167
00:05:52,000 --> 00:05:53,000
因为做的很

168
00:05:53,000 --> 00:05:55,000
很日本网站

169
00:05:55,000 --> 00:05:59,000
这个也很描述太抽象

170
00:05:59,000 --> 00:06:02,000
总之反正日本电商网站都不怎么样

171
00:06:02,000 --> 00:06:03,000
这是肯定的

172
00:06:03,000 --> 00:06:06,000
而且 PFU 甚至不是做电商的

173
00:06:06,000 --> 00:06:07,000
它只是一个

174
00:06:07,000 --> 00:06:07,000
没错

175
00:06:07,000 --> 00:06:10,000
现在它 PFU 它这个叫做 Embedded Keyboard

176
00:06:10,000 --> 00:06:12,000
这个 HGKB 这个页面上只有一款

177
00:06:12,000 --> 00:06:13,000
就是 Lite 2

178
00:06:13,000 --> 00:06:16,000
就它在展示的只有 Lite 2

179
00:06:16,000 --> 00:06:17,000
你看是英文版页吧

180
00:06:17,000 --> 00:06:18,000
对啊

181
00:06:18,000 --> 00:06:19,000
日本内容

182
00:06:19,000 --> 00:06:21,000
日本版本和英文版本不一样

183
00:06:21,000 --> 00:06:26,000
为什么会这样

184
00:06:26,000 --> 00:06:26,000
我不知道

185
00:06:26,000 --> 00:06:31,000
也许他们绝大多数用户都是集中在日本

186
00:06:31,000 --> 00:06:34,000
我的这块键盘实际上是托朋友从日本买的

187
00:06:34,000 --> 00:06:34,000
所以

188
00:06:34,000 --> 00:06:36,000
好吧

189
00:06:36,000 --> 00:06:38,000
所以你那款是那个日本版吗

190
00:06:38,000 --> 00:06:38,000
不是

191
00:06:38,000 --> 00:06:39,000
是英特拿手版

192
00:06:39,000 --> 00:06:42,000
就我特别强调说一定要用英特拿手版

193
00:06:42,000 --> 00:06:44,000
好乱了

194
00:06:44,000 --> 00:06:45,000
所以你那个是没有方线键

195
00:06:45,000 --> 00:06:48,000
然后只有一个在最右边有一个 FNK 的

196
00:06:48,000 --> 00:06:49,000
对吧

197
00:06:49,000 --> 00:06:49,000
对

198
00:06:49,000 --> 00:06:51,000
那跟我那块是一样

199
00:06:51,000 --> 00:06:51,000
但你的是无刻印

200
00:06:51,000 --> 00:06:52,000
我的是有刻印

201
00:06:52,000 --> 00:06:53,000
对

202
00:06:53,000 --> 00:06:54,000
其实

203
00:06:54,000 --> 00:06:56,000
一股优越感

204
00:06:56,000 --> 00:06:57,000
优然而生

205
00:06:57,000 --> 00:07:00,000
戒帽可以换

206
00:07:00,000 --> 00:07:01,000
是吧

207
00:07:01,000 --> 00:07:02,000
对

208
00:07:02,000 --> 00:07:03,000
戒帽可以换

209
00:07:03,000 --> 00:07:04,000
我要准备买一套无刻印的

210
00:07:04,000 --> 00:07:05,000
接着装逼

211
00:07:05,000 --> 00:07:11,000
然后我就看那个官网上那个

212
00:07:11,000 --> 00:07:12,000
现在在说这个 Lite 2

213
00:07:12,000 --> 00:07:14,000
那 Lite 2

214
00:07:14,000 --> 00:07:17,000
所以你也不知道 Lite 和 Fessional 的区别是什么

215
00:07:17,000 --> 00:07:24,000
我怀疑 Lite 所用的那个按下去的那个开关应该不是

216
00:07:24,000 --> 00:07:26,000
Tor

217
00:07:26,000 --> 00:07:27,000
Tor

218
00:07:27,000 --> 00:07:27,000
Tor

219
00:07:27,000 --> 00:07:28,000
Tor

220
00:07:28,000 --> 00:07:29,000
不是 Tor

221
00:07:29,000 --> 00:07:30,000
不是 Tor

222
00:07:30,000 --> 00:07:31,000
不是 Tor

223
00:07:31,000 --> 00:07:35,000
所以那还是所谓的静电容键盘吗

224
00:07:35,000 --> 00:07:37,000
还是什么其他的一个什么东西

225
00:07:37,000 --> 00:07:38,000
有一定可能

226
00:07:38,000 --> 00:07:40,000
因为 Lite 好像卖的便宜

227
00:07:40,000 --> 00:07:41,000
而且不是便宜

228
00:07:41,000 --> 00:07:43,000
而且不是便宜点

229
00:07:43,000 --> 00:07:45,000
好吧

230
00:07:45,000 --> 00:07:48,000
然后那个一盒就是

231
00:07:48,000 --> 00:07:50,000
就是说 HKB Pro

232
00:07:50,000 --> 00:07:52,000
就是没有数字二的都是已经停产了

233
00:07:52,000 --> 00:07:52,000
是吧

234
00:07:52,000 --> 00:07:55,000
只有 Pro 2 和 Lite 2 在说了

235
00:07:55,000 --> 00:07:56,000
对应该是找到

236
00:07:56,000 --> 00:07:59,000
你说这个玩意儿有日文版

237
00:07:59,000 --> 00:08:00,000
这个日文版在哪里

238
00:08:00,000 --> 00:08:02,000
我给你找找

239
00:08:02,000 --> 00:08:08,000
我搜那个 HKB 的 Wikipedia

240
00:08:08,000 --> 00:08:09,000
他给了一个 official website

241
00:08:09,000 --> 00:08:10,000
点过来就这个

242
00:08:10,000 --> 00:08:12,000
然后前面只有一款 Lite 2

243
00:08:12,000 --> 00:08:13,000
什么都没有了

244
00:08:13,000 --> 00:08:15,000
就没有其他任何款型

245
00:08:15,000 --> 00:08:17,000
只有在 Wikipedia 的里面

246
00:08:17,000 --> 00:08:21,000
那个列表里面能找得到一些还在售的款

247
00:08:21,000 --> 00:08:23,000
它有一个列表

248
00:08:23,000 --> 00:08:24,000
有个 End of Life

249
00:08:24,000 --> 00:08:25,000
就有一堆都是

250
00:08:25,000 --> 00:08:27,000
应该是已经停产了的

251
00:08:27,000 --> 00:08:28,000
OK

252
00:08:28,000 --> 00:08:32,000
PFO.Fujitsu.com

253
00:08:32,000 --> 00:08:35,000
所以现在再说的是

254
00:08:35,000 --> 00:08:36,000
Type S

255
00:08:36,000 --> 00:08:38,000
Professional JP

256
00:08:38,000 --> 00:08:39,000
就是日文版

257
00:08:39,000 --> 00:08:40,000
Professional 2

258
00:08:40,000 --> 00:08:41,000
Lite 2

259
00:08:41,000 --> 00:08:42,000
还有一个 Lite 2 for Mac

260
00:08:42,000 --> 00:08:43,000
对

261
00:08:43,000 --> 00:08:44,000
这个 Professional JP

262
00:08:44,000 --> 00:08:46,000
应该就是第一代的

263
00:08:46,000 --> 00:08:50,000
然后其他四款都是国际键

264
00:08:50,000 --> 00:08:52,000
是所谓的 International layout

265
00:08:52,000 --> 00:08:53,000
Professional 2

266
00:08:53,000 --> 00:08:55,000
Professional 2 也有 JP 的版本

267
00:08:55,000 --> 00:08:56,000
我没理解错的话

268
00:08:56,000 --> 00:08:59,000
然后 Lite 2 也有 JP 的版本

269
00:08:59,000 --> 00:09:05,000
然后那个 JP 这款的键的位置

270
00:09:05,000 --> 00:09:06,000
好像又不一样了

271
00:09:06,000 --> 00:09:10,000
就像我说的 Professional JP 的是第一代

272
00:09:10,000 --> 00:09:12,000
然后这一代只有日语版本

273
00:09:12,000 --> 00:09:15,000
然后这一代的那个下面的空格键非常短

274
00:09:15,000 --> 00:09:18,000
多了好几个什么其他的键

275
00:09:18,000 --> 00:09:19,000
不知道是干嘛的

276
00:09:19,000 --> 00:09:19,000
对

277
00:09:19,000 --> 00:09:22,000
然后从 Professional 2 开始

278
00:09:22,000 --> 00:09:23,000
有了 International layout

279
00:09:23,000 --> 00:09:26,000
Lite 2 也有 International layout

280
00:09:26,000 --> 00:09:28,000
同时也有日语版本

281
00:09:28,000 --> 00:09:29,000
好吧

282
00:09:29,000 --> 00:09:31,000
那个具体型号

283
00:09:31,000 --> 00:09:33,000
我们就不去啰嗦了

284
00:09:33,000 --> 00:09:34,000
我问你一件事

285
00:09:34,000 --> 00:09:37,000
你觉得那个方向键

286
00:09:37,000 --> 00:09:38,000
对你来说有用吗

287
00:09:38,000 --> 00:09:42,000
其实还是有一些用处

288
00:09:42,000 --> 00:09:44,000
就这么说吧

289
00:09:44,000 --> 00:09:46,000
因为那个就我们两个都是 Pro 2 的版本

290
00:09:46,000 --> 00:09:47,000
是没有方向键的

291
00:09:47,000 --> 00:09:48,000
对

292
00:09:48,000 --> 00:09:52,000
你在那个非文本输入框的时候

293
00:09:52,000 --> 00:09:54,000
怎么去用方向键

294
00:09:54,000 --> 00:09:56,000
你要用那个 FNT

295
00:09:56,000 --> 00:09:58,000
然后按那个叫什么

296
00:09:58,000 --> 00:10:00,000
那四个键对吧

297
00:10:00,000 --> 00:10:00,000
对

298
00:10:00,000 --> 00:10:02,000
你经常这样干吗

299
00:10:02,000 --> 00:10:04,000
还是挺平常的

300
00:10:04,000 --> 00:10:06,000
而且我其实右手的小指在

301
00:10:06,000 --> 00:10:11,000
右手的小指在有一段时间以来是疼着的

302
00:10:11,000 --> 00:10:15,000
就按 FNT 的原因是吧

303
00:10:15,000 --> 00:10:15,000
对

304
00:10:15,000 --> 00:10:17,000
而且不止那个

305
00:10:17,000 --> 00:10:19,000
就是在公司里面

306
00:10:19,000 --> 00:10:22,000
我把那个 FN 加上 A 和 S

307
00:10:22,000 --> 00:10:25,000
改弄成了调节音量大小

308
00:10:25,000 --> 00:10:27,000
所以调节音量也要按那两个

309
00:10:27,000 --> 00:10:30,000
FN 是可以自第一的吗

310
00:10:30,000 --> 00:10:34,000
FN 加 A 和 FN 加 S

311
00:10:34,000 --> 00:10:37,000
在普通 PC 上也是调节音量

312
00:10:37,000 --> 00:10:38,000
其实

313
00:10:38,000 --> 00:10:39,000
在 Mac 上也是

314
00:10:39,000 --> 00:10:39,000
我相信

315
00:10:39,000 --> 00:10:42,000
然后这个组合

316
00:10:42,000 --> 00:10:42,000
对

317
00:10:42,000 --> 00:10:44,000
你在公司用的是 Linux 系统

318
00:10:44,000 --> 00:10:44,000
对吧

319
00:10:44,000 --> 00:10:45,000
不是 OS 10

320
00:10:45,000 --> 00:10:46,000
对

321
00:10:46,000 --> 00:10:48,000
因为我上次的印象是我挑

322
00:10:48,000 --> 00:10:50,000
用那个 FN 键定义的时候

323
00:10:50,000 --> 00:10:51,000
好像没有按出来有什么

324
00:10:51,000 --> 00:10:53,000
就是 FN 加个什么

325
00:10:53,000 --> 00:10:57,000
好像不能在苹果那个键盘的设置里面

326
00:10:57,000 --> 00:10:58,000
调成一个快捷键吧

327
00:10:58,000 --> 00:10:59,000
可以吗

328
00:10:59,000 --> 00:10:59,000
这个不行

329
00:10:59,000 --> 00:11:01,000
但是 FN 加 A

330
00:11:01,000 --> 00:11:05,000
直接对应了多媒体键里面的

331
00:11:05,000 --> 00:11:06,000
Volume Up

332
00:11:06,000 --> 00:11:08,000
如果没解错的话

333
00:11:08,000 --> 00:11:08,000
对

334
00:11:08,000 --> 00:11:09,000
OK

335
00:11:09,000 --> 00:11:10,000
Good to know

336
00:11:10,000 --> 00:11:11,000
所以我还可以

337
00:11:11,000 --> 00:11:13,000
你这个怎么查

338
00:11:13,000 --> 00:11:16,000
在哪里知道有这些对应的关系

339
00:11:16,000 --> 00:11:19,000
你的键盘

340
00:11:19,000 --> 00:11:21,000
你不是有刻意的键盘

341
00:11:21,000 --> 00:11:23,000
你那个键盘的正下

342
00:11:23,000 --> 00:11:23,000
没有啊

343
00:11:23,000 --> 00:11:25,000
在 FN 就是

344
00:11:25,000 --> 00:11:26,000
就是那个

345
00:11:26,000 --> 00:11:28,000
这么说吧

346
00:11:28,000 --> 00:11:30,000
在左手键那些区上

347
00:11:30,000 --> 00:11:32,000
只有键盘顶上才有

348
00:11:32,000 --> 00:11:33,000
没有下

349
00:11:33,000 --> 00:11:34,000
没有侧边那个音的

350
00:11:34,000 --> 00:11:36,000
那个额外的键的

351
00:11:36,000 --> 00:11:37,000
含义的

352
00:11:37,000 --> 00:11:38,000
嗯

353
00:11:38,000 --> 00:11:40,000
所以我不知道为什么

354
00:11:40,000 --> 00:11:42,000
你知道 FN 加 A 和 S 是调音量

355
00:11:42,000 --> 00:11:43,000
我从来没有试过

356
00:11:43,000 --> 00:11:46,000
因为说明书上有写吧

357
00:11:46,000 --> 00:11:47,000
我记得

358
00:11:47,000 --> 00:11:48,000
还有说明书

359
00:11:48,000 --> 00:11:48,000
对

360
00:11:48,000 --> 00:11:51,000
你是哪来的山寨

361
00:11:51,000 --> 00:11:51,000
哦

362
00:11:51,000 --> 00:11:51,000
是

363
00:11:51,000 --> 00:11:52,000
是

364
00:11:52,000 --> 00:11:54,000
刘一直接寄给你的是吧

365
00:11:54,000 --> 00:11:54,000
所以

366
00:11:54,000 --> 00:11:55,000
对啊

367
00:11:55,000 --> 00:11:56,000
所以没有

368
00:11:56,000 --> 00:11:56,000
因为是

369
00:11:56,000 --> 00:11:57,000
他寄过了

370
00:11:57,000 --> 00:11:58,000
那个

371
00:11:58,000 --> 00:12:00,000
就是没有原装盒子嘛

372
00:12:00,000 --> 00:12:00,000
而且

373
00:12:00,000 --> 00:12:01,000
这个人

374
00:12:01,000 --> 00:12:04,000
刘一这点做的太不靠谱了

375
00:12:04,000 --> 00:12:04,000
你要是我

376
00:12:04,000 --> 00:12:05,000
我一定会吧

377
00:12:05,000 --> 00:12:07,000
原成

378
00:12:07,000 --> 00:12:07,000
这个

379
00:12:07,000 --> 00:12:08,000
这个事情

380
00:12:08,000 --> 00:12:09,000
不管他好

381
00:12:09,000 --> 00:12:10,000
因为

382
00:12:10,000 --> 00:12:11,000
因为是

383
00:12:11,000 --> 00:12:13,000
他说家人打包记的

384
00:12:13,000 --> 00:12:14,000
所以比较麻烦

385
00:12:14,000 --> 00:12:14,000
啊

386
00:12:14,000 --> 00:12:15,000
OK

387
00:12:15,000 --> 00:12:16,000
就我拿到的时候

388
00:12:16,000 --> 00:12:17,000
连那个

389
00:12:17,000 --> 00:12:19,000
那个 USB 的线都没有

390
00:12:19,000 --> 00:12:19,000
但

391
00:12:19,000 --> 00:12:20,000
都是那个通用的一个

392
00:12:20,000 --> 00:12:21,000
呃

393
00:12:21,000 --> 00:12:22,000
应该是

394
00:12:22,000 --> 00:12:23,000
不是

395
00:12:23,000 --> 00:12:24,000
mini USB 吧

396
00:12:24,000 --> 00:12:25,000
嗯

397
00:12:25,000 --> 00:12:25,000
对

398
00:12:25,000 --> 00:12:25,000
没错

399
00:12:25,000 --> 00:12:26,000
就还挺长件

400
00:12:26,000 --> 00:12:27,000
我就自己配了一个

401
00:12:27,000 --> 00:12:28,000
就还可以

402
00:12:28,000 --> 00:12:29,000
但是

403
00:12:29,000 --> 00:12:30,000
我不知道还有说明书的

404
00:12:30,000 --> 00:12:31,000
这么一回事

405
00:12:31,000 --> 00:12:31,000
是的

406
00:12:31,000 --> 00:12:32,000
还有说明书

407
00:12:32,000 --> 00:12:33,000
而且他说明书

408
00:12:33,000 --> 00:12:34,000
能会写呢

409
00:12:34,000 --> 00:12:35,000
后面几个跳线

410
00:12:35,000 --> 00:12:36,000
搬到什么状态

411
00:12:36,000 --> 00:12:37,000
是什么样的功用

412
00:12:37,000 --> 00:12:39,000
那个 DAP

413
00:12:39,000 --> 00:12:40,000
可以在网站上查的

414
00:12:40,000 --> 00:12:40,000
但是

415
00:12:40,000 --> 00:12:41,000
这个

416
00:12:41,000 --> 00:12:43,000
你说这个快捷键是

417
00:12:43,000 --> 00:12:43,000
这个

418
00:12:43,000 --> 00:12:45,000
快捷键应该也能在网上查

419
00:12:45,000 --> 00:12:46,000
I'm pretty sure

420
00:12:46,000 --> 00:12:47,000
啊

421
00:12:47,000 --> 00:12:48,000
Really

422
00:12:48,000 --> 00:12:49,000
对

423
00:12:49,000 --> 00:12:49,000
好吧

424
00:12:49,000 --> 00:12:50,000
那我查一下

425
00:12:50,000 --> 00:12:52,000
哦

426
00:12:52,000 --> 00:12:53,000
OK

427
00:12:53,000 --> 00:12:54,000
我还看到了这个

428
00:12:54,000 --> 00:12:55,000
这个 for Mac

429
00:12:55,000 --> 00:12:56,000
诶

430
00:12:56,000 --> 00:12:57,000
它是 Lite 2 的话

431
00:12:57,000 --> 00:12:58,000
多了一个 FNK

432
00:12:58,000 --> 00:13:00,000
在左边是吧

433
00:13:00,000 --> 00:13:01,000
右边 FN 还有吗

434
00:13:01,000 --> 00:13:02,000
有有

435
00:13:02,000 --> 00:13:03,000
也有

436
00:13:03,000 --> 00:13:04,000
但左边又多了一个 FN

437
00:13:04,000 --> 00:13:05,000
这个还蛮有用的

438
00:13:05,000 --> 00:13:07,000
就我发现最严重的问题就是

439
00:13:07,000 --> 00:13:09,000
FN 在右边

440
00:13:09,000 --> 00:13:10,000
然后在那个

441
00:13:10,000 --> 00:13:11,000
苹果键盘上

442
00:13:11,000 --> 00:13:13,000
FN 是在左下角嘛

443
00:13:13,000 --> 00:13:15,000
就是说还蛮人格分裂的

444
00:13:15,000 --> 00:13:16,000
一会儿按左边

445
00:13:16,000 --> 00:13:16,000
一会儿按右边

446
00:13:16,000 --> 00:13:20,000
嗯

447
00:13:20,000 --> 00:13:21,000
然后再

448
00:13:21,000 --> 00:13:22,000
我再问你

449
00:13:22,000 --> 00:13:22,000
就是说

450
00:13:22,000 --> 00:13:23,000
在这个

451
00:13:23,000 --> 00:13:27,000
就是 OS 10 的系统的文本编辑框里面

452
00:13:27,000 --> 00:13:29,000
你要换上下行的时候

453
00:13:29,000 --> 00:13:29,000
你怎么办

454
00:13:29,000 --> 00:13:31,000
再说别

455
00:13:31,000 --> 00:13:33,000
OS 10 系统的文本框

456
00:13:33,000 --> 00:13:34,000
就是比如说在

457
00:13:34,000 --> 00:13:36,000
这么说嘛

458
00:13:36,000 --> 00:13:36,000
在就

459
00:13:36,000 --> 00:13:37,000
你现在用的是这个

460
00:13:37,000 --> 00:13:38,000
我们用那个 NVALT

461
00:13:38,000 --> 00:13:39,000
编辑这个

462
00:13:39,000 --> 00:13:40,000
Nodes 嘛

463
00:13:40,000 --> 00:13:41,000
嗯

464
00:13:41,000 --> 00:13:43,000
你要切换上下行怎么办

465
00:13:43,000 --> 00:13:46,000
用方向键

466
00:13:46,000 --> 00:13:52,000
然后你要左右移动光标怎么办

467
00:13:52,000 --> 00:13:55,000
Ctrl 加 PN 是可以的吧

468
00:13:55,000 --> 00:13:57,000
然后

469
00:13:57,000 --> 00:13:58,000
那个是 EMAX 可以搬点

470
00:13:58,000 --> 00:14:00,000
但是你是一个 VIM 用户

471
00:14:00,000 --> 00:14:00,000
对

472
00:14:00,000 --> 00:14:01,000
所以我用方向键

473
00:14:01,000 --> 00:14:06,000
我为了这件事情

474
00:14:06,000 --> 00:14:07,000
因为方向键不好用

475
00:14:07,000 --> 00:14:07,000
要用那个

476
00:14:07,000 --> 00:14:11,000
其实都是要用小指的

477
00:14:11,000 --> 00:14:12,000
左边的话

478
00:14:12,000 --> 00:14:13,000
虽然 Ctrl 键也算

479
00:14:13,000 --> 00:14:14,000
用小指

480
00:14:14,000 --> 00:14:17,000
在普通键盘的 Caps Lock 的位置

481
00:14:17,000 --> 00:14:19,000
对吧

482
00:14:19,000 --> 00:14:19,000
嗯

483
00:14:19,000 --> 00:14:20,000
嗯

484
00:14:20,000 --> 00:14:22,000
然后你要用那个 Ctrl 按着

485
00:14:22,000 --> 00:14:24,000
然后 N 是下一行

486
00:14:24,000 --> 00:14:25,000
P 是上一行

487
00:14:25,000 --> 00:14:28,000
然后 F 是右移

488
00:14:28,000 --> 00:14:29,000
然后 B 是左移光标嘛

489
00:14:29,000 --> 00:14:31,000
但是如果你用方向键的话

490
00:14:31,000 --> 00:14:33,000
其实就是用右手的小指按主要分

491
00:14:33,000 --> 00:14:35,000
然后按那几个方向键的

492
00:14:35,000 --> 00:14:36,000
复用的键

493
00:14:36,000 --> 00:14:37,000
对

494
00:14:37,000 --> 00:14:38,000
其实是好像是差不多的

495
00:14:38,000 --> 00:14:38,000
我觉得

496
00:14:38,000 --> 00:14:41,000
所以你的点是吗

497
00:14:41,000 --> 00:14:42,000
就是你作为一个 VIM 用户

498
00:14:42,000 --> 00:14:43,000
为了捍卫自己的尊严

499
00:14:43,000 --> 00:14:45,000
所以一定要找到一个

500
00:14:45,000 --> 00:14:46,000
我现在很分裂

501
00:14:46,000 --> 00:14:48,000
因为我一会要用 EMAX Keybinding

502
00:14:48,000 --> 00:14:49,000
一会要用那个

503
00:14:49,000 --> 00:14:52,000
就是我本质上就遇到这种

504
00:14:52,000 --> 00:14:55,000
非 VIM 的 Keybinding

505
00:14:55,000 --> 00:14:56,000
知识的情况下

506
00:14:56,000 --> 00:14:57,000
比如说在这个

507
00:14:57,000 --> 00:14:58,000
这个 Gui 界面上

508
00:14:58,000 --> 00:15:01,000
你选择上下的一个菜单

509
00:15:01,000 --> 00:15:01,000
举个例子

510
00:15:01,000 --> 00:15:03,000
你只是只能用这个方向键了

511
00:15:03,000 --> 00:15:04,000
对

512
00:15:04,000 --> 00:15:06,000
这个时候我就只能按住

513
00:15:06,000 --> 00:15:08,000
用一个右手的小指按住 FN

514
00:15:08,000 --> 00:15:11,000
然后用方向键去调那个选择

515
00:15:11,000 --> 00:15:13,000
但是在很多我们编制块里面

516
00:15:13,000 --> 00:15:15,000
我又在用 EMAX Keybinding

517
00:15:15,000 --> 00:15:16,000
比如说在 NV-Alt

518
00:15:16,000 --> 00:15:17,000
或者是这个

519
00:15:17,000 --> 00:15:19,000
比如说这个 Safire 的地址栏

520
00:15:19,000 --> 00:15:20,000
我要编制它的时候

521
00:15:20,000 --> 00:15:21,000
我又会用那个

522
00:15:21,000 --> 00:15:23,000
这个 EMAX Keybinding

523
00:15:23,000 --> 00:15:26,000
去加速我的那个光标移动

524
00:15:26,000 --> 00:15:27,000
比如说我可以一个 word

525
00:15:27,000 --> 00:15:27,000
一个 word

526
00:15:27,000 --> 00:15:28,000
而不是一个 character

527
00:15:28,000 --> 00:15:29,000
一个 character 移动

528
00:15:29,000 --> 00:15:34,000
所以就我最近特别人格分裂

529
00:15:34,000 --> 00:15:34,000
你知道吗

530
00:15:34,000 --> 00:15:35,000
就是在

531
00:15:35,000 --> 00:15:37,000
然后在那个 terminal

532
00:15:37,000 --> 00:15:38,000
或者是在 VIM 里面打的时候

533
00:15:38,000 --> 00:15:40,000
就是用那个 VIM 的 Keybinding

534
00:15:40,000 --> 00:15:42,000
你在 terminal 里面

535
00:15:42,000 --> 00:15:44,000
用 VIM 的 Keybinding

536
00:15:44,000 --> 00:15:47,000
你是说你的 LineEdit

537
00:15:47,000 --> 00:15:49,000
用的是 VIM 的 Keybinding

538
00:15:49,000 --> 00:15:50,000
对啊

539
00:15:50,000 --> 00:15:53,000
我已经把 LineEdit 的 Keybinding

540
00:15:53,000 --> 00:15:57,000
就是改回默认的 EMAX Keybinding

541
00:15:57,000 --> 00:15:57,000
EMAX 的嘛

542
00:15:57,000 --> 00:15:58,000
对

543
00:15:58,000 --> 00:16:00,000
所以你也叛逃了

544
00:16:00,000 --> 00:16:01,000
我不是

545
00:16:01,000 --> 00:16:01,000
对

546
00:16:01,000 --> 00:16:04,000
主要是向现实妥协吧

547
00:16:04,000 --> 00:16:05,000
就是当

548
00:16:05,000 --> 00:16:07,000
因为一天要连

549
00:16:07,000 --> 00:16:11,000
无数台 remote session 的话

550
00:16:11,000 --> 00:16:14,000
就 SSH 到其他的机器上的话

551
00:16:14,000 --> 00:16:15,000
不想每次都改

552
00:16:15,000 --> 00:16:16,000
不想每次都改

553
00:16:16,000 --> 00:16:16,000
对

554
00:16:16,000 --> 00:16:21,000
而且去用别人的键盘的时候

555
00:16:21,000 --> 00:16:23,000
也会非常的痛苦

556
00:16:23,000 --> 00:16:24,000
好吧

557
00:16:24,000 --> 00:16:25,000
理解了

558
00:16:25,000 --> 00:16:26,000
所以总体来说

559
00:16:26,000 --> 00:16:28,000
这个 HKV Pro 2

560
00:16:28,000 --> 00:16:29,000
你用起来

561
00:16:29,000 --> 00:16:31,000
你用了多久了

562
00:16:31,000 --> 00:16:31,000
到底

563
00:16:31,000 --> 00:16:33,000
一年多吧

564
00:16:33,000 --> 00:16:35,000
所以感觉如何

565
00:16:35,000 --> 00:16:36,000
我也不知道

566
00:16:36,000 --> 00:16:37,000
我觉得它已经内化了

567
00:16:37,000 --> 00:16:38,000
就是你不说的话

568
00:16:38,000 --> 00:16:39,000
不觉得它是

569
00:16:39,000 --> 00:16:41,000
不觉得它是一个什么事了

570
00:16:41,000 --> 00:16:41,000
是吧

571
00:16:41,000 --> 00:16:41,000
对

572
00:16:41,000 --> 00:16:43,000
现在我已经不觉得它是一个

573
00:16:43,000 --> 00:16:44,000
因为我刚用一个月

574
00:16:44,000 --> 00:16:46,000
所以感觉还不太一样

575
00:16:46,000 --> 00:16:47,000
有时候会觉得硬

576
00:16:47,000 --> 00:16:48,000
有点人格分裂

577
00:16:48,000 --> 00:16:49,000
因为我还算

578
00:16:49,000 --> 00:16:50,000
还用笔记本的 Mac

579
00:16:50,000 --> 00:16:51,000
自带键盘

580
00:16:51,000 --> 00:16:52,000
对

581
00:16:52,000 --> 00:16:52,000
我也是

582
00:16:52,000 --> 00:16:56,000
而且我的两个 layout 是不一样的

583
00:16:56,000 --> 00:16:56,000
所以我其实我在想

584
00:16:56,000 --> 00:16:59,000
它现在在卖 Light for Mac

585
00:16:59,000 --> 00:17:02,000
那个感觉可能稍微正常一点

586
00:17:02,000 --> 00:17:03,000
所以要买一块

587
00:17:03,000 --> 00:17:04,000
再说吧

588
00:17:04,000 --> 00:17:06,000
先适应一段时间

589
00:17:06,000 --> 00:17:07,000
再说

590
00:17:07,000 --> 00:17:10,000
看到底能不能够接受这种方式

591
00:17:10,000 --> 00:17:12,000
我觉得整个手感还是不错的

592
00:17:12,000 --> 00:17:14,000
Topware 的按键的感觉

593
00:17:14,000 --> 00:17:14,000
还是登登登

594
00:17:14,000 --> 00:17:16,000
一种比较登登

595
00:17:16,000 --> 00:17:17,000
咚咚的感觉

596
00:17:17,000 --> 00:17:21,000
OK

597
00:17:21,000 --> 00:17:23,000
不

598
00:17:23,000 --> 00:17:23,000
不出这个单

599
00:17:23,000 --> 00:17:26,000
那今天我们进来下一个环节

600
00:17:26,000 --> 00:17:29,000
读两封听众来信

601
00:17:29,000 --> 00:17:30,000
第一封你来吧

602
00:17:31,000 --> 00:17:32,000
好

603
00:17:32,000 --> 00:17:34,000
对

604
00:17:34,000 --> 00:17:36,000
这两封读的来信都是针对上一期

605
00:17:36,000 --> 00:17:38,000
我读白的那一期

606
00:17:38,000 --> 00:17:39,000
对

607
00:17:39,000 --> 00:17:42,000
反正事后

608
00:17:42,000 --> 00:17:47,000
这个不鸟万如一和不鸟万 Rail 先生都表达了惊讶

609
00:17:47,000 --> 00:17:50,000
说你一个人得不得得不得居然可以得我一个小时

610
00:17:50,000 --> 00:17:50,000
这个真的

611
00:17:50,000 --> 00:17:53,000
我自己也没想到我可以得我一个小时

612
00:17:53,000 --> 00:17:54,000
但事实上

613
00:17:54,000 --> 00:17:56,000
我本来是计划都有两个小时的

614
00:17:56,000 --> 00:18:02,000
我觉得已经很厉害了

615
00:18:02,000 --> 00:18:02,000
OK

616
00:18:02,000 --> 00:18:03,000
谢谢

617
00:18:03,000 --> 00:18:09,000
首先是我们的老朋友 Virgil 明先生

618
00:18:09,000 --> 00:18:10,000
是先生吗

619
00:18:10,000 --> 00:18:11,000
寄来的我小朋友

620
00:18:11,000 --> 00:18:12,000
对

621
00:18:12,000 --> 00:18:14,000
寄来一封听众来信

622
00:18:14,000 --> 00:18:16,000
吴涛您好

623
00:18:16,000 --> 00:18:20,000
这是对新鲜出炉的第 18 期节目的反馈

624
00:18:20,000 --> 00:18:21,000
对

625
00:18:21,000 --> 00:18:25,000
我记得这一期应该是在上线之后可能

626
00:18:25,000 --> 00:18:27,000
五六个小时

627
00:18:27,000 --> 00:18:28,000
他就写了一封

628
00:18:28,000 --> 00:18:30,000
写了一封这封信来

629
00:18:30,000 --> 00:18:32,000
真是太热心了

630
00:18:32,000 --> 00:18:34,000
他说

631
00:18:34,000 --> 00:18:37,000
高级程序员到汇编

632
00:18:37,000 --> 00:18:38,000
到可执行文件

633
00:18:38,000 --> 00:18:40,000
到机器指令

634
00:18:40,000 --> 00:18:42,000
这一系列过程并不算是编码吧

635
00:18:42,000 --> 00:18:45,000
compile 和 encode 是两回事

636
00:18:45,000 --> 00:18:46,000
这个

637
00:18:46,000 --> 00:18:48,000
对

638
00:18:48,000 --> 00:18:49,000
其实我之所以说

639
00:18:49,000 --> 00:18:52,000
自己本来计划说两个小时

640
00:18:52,000 --> 00:18:54,000
就是因为我后一个小时是要说编码的

641
00:18:54,000 --> 00:18:57,000
但是说到一个小时的时候

642
00:18:57,000 --> 00:18:58,000
已经就撑不住了

643
00:18:58,000 --> 00:19:01,000
前一部分是说 compile

644
00:19:01,000 --> 00:19:06,000
就是说计算机的指令是怎样转换为二进制指令的

645
00:19:06,000 --> 00:19:08,000
计算机的文本指令

646
00:19:08,000 --> 00:19:10,000
是如何转换二进制指令

647
00:19:10,000 --> 00:19:13,000
然后我本来计划在后半部

648
00:19:13,000 --> 00:19:14,000
讲这个编码

649
00:19:14,000 --> 00:19:16,000
就是什么 unicode

650
00:19:16,000 --> 00:19:17,000
asci

651
00:19:17,000 --> 00:19:21,000
还是什么 gbblbl 一系列

652
00:19:21,000 --> 00:19:24,000
但是后来实在是冲不下去了

653
00:19:24,000 --> 00:19:28,000
所以才会给人这种印象

654
00:19:28,000 --> 00:19:28,000
对

655
00:19:28,000 --> 00:19:31,000
其实上一期的真正的主题的确是编码

656
00:19:31,000 --> 00:19:33,000
只不过没能进入真正的主题

657
00:19:33,000 --> 00:19:36,000
这叫什么

658
00:19:36,000 --> 00:19:37,000
假然而止

659
00:19:37,000 --> 00:19:38,000
对

660
00:19:38,000 --> 00:19:41,000
念对那个字了

661
00:19:41,000 --> 00:19:42,000
接着读

662
00:19:42,000 --> 00:19:45,000
有一件事情让我有些感叹

663
00:19:45,000 --> 00:19:45,000
asci

664
00:19:45,000 --> 00:19:48,000
编码里面大写字母的 A 是 65

665
00:19:48,000 --> 00:19:52,000
这件事情存在我记忆里面应该已经十年了吧

666
00:19:52,000 --> 00:19:54,000
然而直到今天我才明白

667
00:19:54,000 --> 00:19:55,000
那是 64 加 1

668
00:19:55,000 --> 00:19:57,000
当年只是把 65

669
00:19:57,000 --> 00:20:00,000
当年只是把 65

670
00:20:00,000 --> 00:20:01,000
作为一个 magic number

671
00:20:01,000 --> 00:20:03,000
强行记住而已

672
00:20:03,000 --> 00:20:05,000
因为当时刚刚学二进制

673
00:20:05,000 --> 00:20:07,000
对此丝毫不敏感

674
00:20:07,000 --> 00:20:09,000
老师也没有多解释

675
00:20:09,000 --> 00:20:10,000
我也没有觉得有什么不对

676
00:20:10,000 --> 00:20:11,000
然而现在看来

677
00:20:11,000 --> 00:20:13,000
明天是少了一块拼图

678
00:20:13,000 --> 00:20:14,000
以此类推

679
00:20:14,000 --> 00:20:15,000
小写字母 A 是 97

680
00:20:15,000 --> 00:20:18,000
97 就等 64 加上 32 加上 1

681
00:20:18,000 --> 00:20:19,000
也是很符合逻辑的

682
00:20:19,000 --> 00:20:21,000
对

683
00:20:21,000 --> 00:20:23,000
所以这里就是

684
00:20:23,000 --> 00:20:27,000
他的意思就是 64 这个数字

685
00:20:27,000 --> 00:20:29,000
就是 8 进制

686
00:20:29,000 --> 00:20:30,000
不是 8 进制

687
00:20:30,000 --> 00:20:31,000
二进制的

688
00:20:31,000 --> 00:20:33,000
七位的

689
00:20:33,000 --> 00:20:34,000
1

690
00:20:34,000 --> 00:20:35,000
然后后面更 6 个 0

691
00:20:35,000 --> 00:20:37,000
所以这是一个特别的数字

692
00:20:37,000 --> 00:20:38,000
然后

693
00:20:38,000 --> 00:20:40,000
97 是 64 加 32

694
00:20:40,000 --> 00:20:42,000
也就是 1 后面 6 个 0

695
00:20:42,000 --> 00:20:43,000
加上 1 后面 5 个 0

696
00:20:43,000 --> 00:20:44,000
也就是 1

697
00:20:44,000 --> 00:20:45,000
0 0 0 0 0

698
00:20:45,000 --> 00:20:47,000
这个数字是 60

699
00:20:47,000 --> 00:20:48,000
是 96

700
00:20:48,000 --> 00:20:50,000
然后 96 后面的第一个

701
00:20:50,000 --> 00:20:52,000
就是 1

702
00:20:52,000 --> 00:20:53,000
0 0 0 0 0

703
00:20:53,000 --> 00:20:54,000
1

704
00:20:54,000 --> 00:20:56,000
这个二进制编码

705
00:20:56,000 --> 00:20:58,000
是代表小写字母 A

706
00:20:58,000 --> 00:20:59,000
所以这些

707
00:20:59,000 --> 00:21:00,000
其实在最开始规定

708
00:21:00,000 --> 00:21:02,000
ASCII 码的时候

709
00:21:02,000 --> 00:21:02,000
都已经

710
00:21:02,000 --> 00:21:05,000
都是有一定的内在逻辑

711
00:21:05,000 --> 00:21:05,000
对

712
00:21:05,000 --> 00:21:07,000
然后

713
00:21:07,000 --> 00:21:10,000
然后 ASCII 码的这个 64

714
00:21:10,000 --> 00:21:11,000
4 就是 at

715
00:21:11,000 --> 00:21:12,000
所以各位

716
00:21:12,000 --> 00:21:14,000
如果你要想去

717
00:21:14,000 --> 00:21:15,000
铭记某一个事件的时候

718
00:21:15,000 --> 00:21:16,000
你可以多拿几个 at

719
00:21:16,000 --> 00:21:18,000
然后前面可以加上

720
00:21:18,000 --> 00:21:19,000
一个大写字母 Y

721
00:21:19,000 --> 00:21:22,000
OK

722
00:21:22,000 --> 00:21:23,000
接着读

723
00:21:23,000 --> 00:21:27,000
这让我想到另一件事

724
00:21:27,000 --> 00:21:28,000
大一的

725
00:21:28,000 --> 00:21:29,000
在思绩加课程里面

726
00:21:29,000 --> 00:21:30,000
有一道习题

727
00:21:30,000 --> 00:21:31,000
实现一个支持

728
00:21:31,000 --> 00:21:33,000
reverse polish notation 的计算器

729
00:21:33,000 --> 00:21:35,000
当时也没觉得

730
00:21:35,000 --> 00:21:36,000
有什么特别之处

731
00:21:36,000 --> 00:21:37,000
无非就是个循环练习

732
00:21:37,000 --> 00:21:39,000
为什么要弄出

733
00:21:39,000 --> 00:21:40,000
这么一套反直觉的技法呢

734
00:21:40,000 --> 00:21:42,000
直到两年之后

735
00:21:42,000 --> 00:21:44,000
上到 functional programming 课

736
00:21:44,000 --> 00:21:47,000
到快捞期许考试的时候

737
00:21:47,000 --> 00:21:48,000
才突然反应过来

738
00:21:48,000 --> 00:21:50,000
这无非就是换个形式

739
00:21:50,000 --> 00:21:51,000
针对四则运算

740
00:21:51,000 --> 00:21:53,000
这个非常特别的情况

741
00:21:53,000 --> 00:21:56,000
显示的把地规

742
00:21:56,000 --> 00:21:57,000
优化成个循环

743
00:21:57,000 --> 00:22:02,000
而 reverse polish notation

744
00:22:02,000 --> 00:22:04,000
发明早于 LISP 二三十年

745
00:22:04,000 --> 00:22:05,000
我也没读 LISP

746
00:22:05,000 --> 00:22:06,000
最早的那篇论文

747
00:22:06,000 --> 00:22:07,000
但我相信

748
00:22:07,000 --> 00:22:09,000
两者形式上相通

749
00:22:09,000 --> 00:22:10,000
绝不只是偶然

750
00:22:10,000 --> 00:22:11,000
这种感觉

751
00:22:11,000 --> 00:22:12,000
我不知道怎么形容

752
00:22:12,000 --> 00:22:13,000
DJV 吗

753
00:22:13,000 --> 00:22:15,000
如果在一开始学习的时候

754
00:22:15,000 --> 00:22:16,000
就能了解

755
00:22:16,000 --> 00:22:18,000
背后这些神秘的东西

756
00:22:18,000 --> 00:22:19,000
Computer science

757
00:22:19,000 --> 00:22:20,000
本来应该可以更迷人

758
00:22:20,000 --> 00:22:23,000
至于你的节目里面

759
00:22:23,000 --> 00:22:26,000
只有一分钟不到的正题

760
00:22:26,000 --> 00:22:29,000
省乐几百字的吐槽

761
00:22:29,000 --> 00:22:31,000
但有一点我想说明

762
00:22:31,000 --> 00:22:32,000
这么说吧

763
00:22:32,000 --> 00:22:33,000
我们

764
00:22:33,000 --> 00:22:34,000
括号

765
00:22:34,000 --> 00:22:36,000
禁止我自己周边的人

766
00:22:36,000 --> 00:22:38,000
我生于 1992 年

767
00:22:38,000 --> 00:22:39,000
括号结束

768
00:22:39,000 --> 00:22:40,000
这就是为什么我说

769
00:22:40,000 --> 00:22:41,000
你是个小朋友

770
00:22:41,000 --> 00:22:42,000
1992 年了

771
00:22:42,000 --> 00:22:44,000
天哪

772
00:22:44,000 --> 00:22:47,000
90 后的明先生你好

773
00:22:47,000 --> 00:22:47,000
对

774
00:22:47,000 --> 00:22:49,000
90 后的明小朋友你好

775
00:22:49,000 --> 00:22:52,000
接着念

776
00:22:52,000 --> 00:22:54,000
我们生长起来的环境里面

777
00:22:54,000 --> 00:22:55,000
并没有什么机制

778
00:22:55,000 --> 00:22:56,000
来保证人们

779
00:22:56,000 --> 00:22:58,000
在生长过程中

780
00:22:58,000 --> 00:23:00,000
能够以较温和的方式

781
00:23:00,000 --> 00:23:02,000
了解如何谈恋爱

782
00:23:02,000 --> 00:23:03,000
这个常识

783
00:23:03,000 --> 00:23:06,000
独生子女和父母离婚成风

784
00:23:06,000 --> 00:23:07,000
括号

785
00:23:07,000 --> 00:23:08,000
90 年代人们

786
00:23:08,000 --> 00:23:09,000
突然像赶时毛时的

787
00:23:09,000 --> 00:23:10,000
开始考虑

788
00:23:10,000 --> 00:23:12,000
甚至执行离婚

789
00:23:12,000 --> 00:23:13,000
括号结束

790
00:23:13,000 --> 00:23:14,000
但影响都不提了

791
00:23:14,000 --> 00:23:15,000
我可以确定的是

792
00:23:15,000 --> 00:23:17,000
在大学之前

793
00:23:17,000 --> 00:23:18,000
三观尚未定型的时候

794
00:23:18,000 --> 00:23:19,000
在国内

795
00:23:19,000 --> 00:23:21,000
练习谈恋爱的机会

796
00:23:21,000 --> 00:23:22,000
不仅是少

797
00:23:22,000 --> 00:23:24,000
而且大多数情况下

798
00:23:24,000 --> 00:23:24,000
是离经叛道

799
00:23:24,000 --> 00:23:26,000
得不到任何可靠的

800
00:23:26,000 --> 00:23:27,000
第三方支持的

801
00:23:27,000 --> 00:23:28,000
于是

802
00:23:28,000 --> 00:23:30,000
等到上了大学之后

803
00:23:30,000 --> 00:23:30,000
我听到

804
00:23:30,000 --> 00:23:32,000
看到了许多

805
00:23:32,000 --> 00:23:33,000
不知道该称为悲剧

806
00:23:33,000 --> 00:23:34,000
还是黑色幽默的故事

807
00:23:34,000 --> 00:23:36,000
我自己也

808
00:23:36,000 --> 00:23:36,000
括号

809
00:23:36,000 --> 00:23:38,000
不知道有幸还是不幸

810
00:23:38,000 --> 00:23:38,000
括号结束

811
00:23:38,000 --> 00:23:40,000
参与了其中的一个

812
00:23:40,000 --> 00:23:42,000
Learn it the hard way

813
00:23:42,000 --> 00:23:43,000
的确是有效的策略

814
00:23:43,000 --> 00:23:45,000
但是如果我们讨论的是感情

815
00:23:45,000 --> 00:23:47,000
这里的 hard way

816
00:23:47,000 --> 00:23:48,000
可能对你

817
00:23:48,000 --> 00:23:50,000
或者对于对方

818
00:23:50,000 --> 00:23:51,000
造成不可逆的伤害

819
00:23:51,000 --> 00:23:53,000
真的没问题吗

820
00:23:53,000 --> 00:23:54,000
更重要的是

821
00:23:54,000 --> 00:23:56,000
最好的时机已经过去了

822
00:23:56,000 --> 00:23:58,000
这个 bug 改起来会非常痛苦

823
00:23:58,000 --> 00:23:59,000
尽会不可行

824
00:23:59,000 --> 00:24:01,000
这不只是程序员的问题

825
00:24:01,000 --> 00:24:02,000
我承认外行人

826
00:24:02,000 --> 00:24:03,000
甚至业内人士

827
00:24:03,000 --> 00:24:05,000
对于程序员的 sterotype

828
00:24:05,000 --> 00:24:06,000
有时候不可理喻

829
00:24:06,000 --> 00:24:08,000
但问题的本质

830
00:24:08,000 --> 00:24:08,000
仅仅是

831
00:24:08,000 --> 00:24:09,000
作为一个人

832
00:24:09,000 --> 00:24:11,000
如何发展处理

833
00:24:11,000 --> 00:24:12,000
和另一个人的亲密关系

834
00:24:12,000 --> 00:24:13,000
而已

835
00:24:13,000 --> 00:24:14,000
把职业

836
00:24:14,000 --> 00:24:16,000
甚至相关的 sterotype

837
00:24:16,000 --> 00:24:18,000
卷进来作为预设处理

838
00:24:18,000 --> 00:24:19,000
难道不是原木求鱼吗

839
00:24:19,000 --> 00:24:20,000
最后

840
00:24:20,000 --> 00:24:22,000
您为什么要一次性录完呢

841
00:24:22,000 --> 00:24:24,000
不能休息一天接着录吗

842
00:24:24,000 --> 00:24:26,000
OK

843
00:24:26,000 --> 00:24:26,000
念完了

844
00:24:26,000 --> 00:24:29,000
有什么想说吗

845
00:24:29,000 --> 00:24:34,000
其实我觉得他对你上期的

846
00:24:34,000 --> 00:24:36,000
打引号的正题的诠释挺好的

847
00:24:36,000 --> 00:24:39,000
这个真的是一件跟职业

848
00:24:39,000 --> 00:24:41,000
什么其他关系不大的事情

849
00:24:41,000 --> 00:24:42,000
这就是一个

850
00:24:42,000 --> 00:24:46,000
做人的基本的一些东西

851
00:24:46,000 --> 00:24:47,000
在我们现在

852
00:24:47,000 --> 00:24:48,000
我很好

853
00:24:48,000 --> 00:24:50,000
这个社会的一个欠缺

854
00:24:50,000 --> 00:24:52,000
但我觉得很神奇的是

855
00:24:52,000 --> 00:24:53,000
90 后现在谈恋

856
00:24:53,000 --> 00:24:55,000
还是这么受限吗

857
00:24:55,000 --> 00:24:55,000
对

858
00:24:55,000 --> 00:24:56,000
我有这个感想

859
00:24:56,000 --> 00:24:57,000
就是我觉得

860
00:24:57,000 --> 00:25:01,000
我们这些 80 年代后的这一批人

861
00:25:01,000 --> 00:25:02,000
这次 real 调不掉了

862
00:25:02,000 --> 00:25:03,000
你好歹是个 80 多

863
00:25:03,000 --> 00:25:06,000
我们在年轻的时候

864
00:25:06,000 --> 00:25:08,000
谈恋爱很受限制

865
00:25:08,000 --> 00:25:10,000
这个是实情

866
00:25:10,000 --> 00:25:11,000
但是我怎么觉得

867
00:25:11,000 --> 00:25:11,000
好像

868
00:25:11,000 --> 00:25:12,000
好像

869
00:25:12,000 --> 00:25:15,000
90 后应该不存在这样的限制

870
00:25:15,000 --> 00:25:16,000
难道

871
00:25:16,000 --> 00:25:18,000
难道

872
00:25:18,000 --> 00:25:20,000
中国还是那个样子吗

873
00:25:20,000 --> 00:25:25,000
作为两个外国

874
00:25:25,000 --> 00:25:27,000
生活在外国的人

875
00:25:27,000 --> 00:25:28,000
怎么说

876
00:25:28,000 --> 00:25:28,000
真的是

877
00:25:28,000 --> 00:25:34,000
我觉得我不够了解他们

878
00:25:34,000 --> 00:25:35,000
就不够了解

879
00:25:35,000 --> 00:25:37,000
这个后一个十年出生的人

880
00:25:37,000 --> 00:25:39,000
他们的一个成长的状况

881
00:25:39,000 --> 00:25:41,000
这个是挺讨厌的一件事情

882
00:25:41,000 --> 00:25:45,000
不过可能也可以理解

883
00:25:45,000 --> 00:25:46,000
因为你想

884
00:25:46,000 --> 00:25:47,000
我们毕业的时候

885
00:25:47,000 --> 00:25:49,000
带我们的那些老师

886
00:25:49,000 --> 00:25:53,000
至少还会在教职上

887
00:25:53,000 --> 00:25:55,000
至少还会在教职上

888
00:25:55,000 --> 00:25:57,000
再待个十年吧

889
00:25:57,000 --> 00:25:58,000
所以

890
00:25:58,000 --> 00:26:00,000
也许

891
00:26:00,000 --> 00:26:02,000
现在的谈恋爱的环境

892
00:26:02,000 --> 00:26:04,000
没有我们想象的那么开发

893
00:26:04,000 --> 00:26:05,000
或者

894
00:26:05,000 --> 00:26:06,000
这么理解

895
00:26:06,000 --> 00:26:06,000
就是

896
00:26:06,000 --> 00:26:08,000
只要高考这件事情还存在

897
00:26:08,000 --> 00:26:09,000
就只要

898
00:26:09,000 --> 00:26:10,000
中国还是这么一种

899
00:26:10,000 --> 00:26:11,000
这种

900
00:26:11,000 --> 00:26:12,000
就是说

901
00:26:12,000 --> 00:26:14,000
人多的竞争的模式

902
00:26:14,000 --> 00:26:15,000
可能这件事情就很难

903
00:26:15,000 --> 00:26:16,000
幸免

904
00:26:16,000 --> 00:26:20,000
有道理

905
00:26:20,000 --> 00:26:22,000
说到高考

906
00:26:22,000 --> 00:26:22,000
好像是

907
00:26:22,000 --> 00:26:23,000
昨天还是

908
00:26:23,000 --> 00:26:25,000
前几天刚刚高考结束吧

909
00:26:25,000 --> 00:26:26,000
不知道

910
00:26:26,000 --> 00:26:27,000
我们听众朋友里面有没有

911
00:26:27,000 --> 00:26:31,000
现在是属于解脱呢

912
00:26:31,000 --> 00:26:32,000
还是什么一个状态的

913
00:26:32,000 --> 00:26:35,000
或者是刚刚考完

914
00:26:35,000 --> 00:26:36,000
打算报计算机系

915
00:26:36,000 --> 00:26:38,000
千万别啊

916
00:26:38,000 --> 00:26:40,000
三思说

917
00:26:40,000 --> 00:26:40,000
对

918
00:26:40,000 --> 00:26:42,000
你得想清楚

919
00:26:42,000 --> 00:26:43,000
嗯

920
00:26:43,000 --> 00:26:44,000
好吧

921
00:26:44,000 --> 00:26:45,000
然后

922
00:26:45,000 --> 00:26:47,000
我觉得他说的那个

923
00:26:47,000 --> 00:26:49,000
程学员的 stereotype

924
00:26:49,000 --> 00:26:49,000
就是

925
00:26:49,000 --> 00:26:50,000
我其实上期

926
00:26:50,000 --> 00:26:52,000
我已经不记得自己说什么

927
00:26:52,000 --> 00:26:53,000
突然

928
00:26:53,000 --> 00:26:53,000
但是

929
00:26:53,000 --> 00:26:55,000
你上期我觉得有一点

930
00:26:55,000 --> 00:26:56,000
就是我觉得

931
00:26:56,000 --> 00:26:56,000
就他这里

932
00:26:56,000 --> 00:26:57,000
也有

933
00:26:57,000 --> 00:26:58,000
也有

934
00:26:58,000 --> 00:26:58,000
使用

935
00:26:58,000 --> 00:26:59,000
就是说

936
00:26:59,000 --> 00:27:02,000
这件事情跟职业真的没有太大关系

937
00:27:02,000 --> 00:27:02,000
对

938
00:27:02,000 --> 00:27:04,000
其实我上一期之所以会想到这个

939
00:27:04,000 --> 00:27:05,000
就是因为

940
00:27:05,000 --> 00:27:09,000
可能是在网上看到的一个贴子

941
00:27:09,000 --> 00:27:09,000
说什么

942
00:27:09,000 --> 00:27:10,000
我是程序员

943
00:27:10,000 --> 00:27:11,000
找不到女朋友

944
00:27:11,000 --> 00:27:11,000
blah blah

945
00:27:11,000 --> 00:27:13,000
或者是什么

946
00:27:13,000 --> 00:27:14,000
我男朋友是程序员

947
00:27:14,000 --> 00:27:17,000
我想要送他一个什么什么什么什么玩意儿

948
00:27:17,000 --> 00:27:18,000
然后总是在想说

949
00:27:18,000 --> 00:27:20,000
程序员这个身份有那么重要吗

950
00:27:20,000 --> 00:27:21,000
为什么

951
00:27:21,000 --> 00:27:25,000
要把这个身份单独提出来

952
00:27:25,000 --> 00:27:26,000
好像他 somehow

953
00:27:26,000 --> 00:27:27,000
somehow 就改变了

954
00:27:27,000 --> 00:27:28,000
你是一个

955
00:27:28,000 --> 00:27:30,000
人

956
00:27:30,000 --> 00:27:31,000
这一个

957
00:27:31,000 --> 00:27:32,000
基本

958
00:27:32,000 --> 00:27:34,000
的

959
00:27:34,000 --> 00:27:35,000
现实

960
00:27:35,000 --> 00:27:35,000
一样

961
00:27:35,000 --> 00:27:38,000
有可能是跟你

962
00:27:38,000 --> 00:27:40,000
有一次说到这么一个件事情有关系

963
00:27:40,000 --> 00:27:40,000
就是

964
00:27:40,000 --> 00:27:43,000
编程其实是一个逐渐异化的过程

965
00:27:43,000 --> 00:27:43,000
就是

966
00:27:43,000 --> 00:27:45,000
抛掉你

967
00:27:45,000 --> 00:27:46,000
作为人的那一面

968
00:27:46,000 --> 00:27:46,000
然后

969
00:27:46,000 --> 00:27:50,000
要把你假设成为一个很理性的机器

970
00:27:50,000 --> 00:27:51,000
去一行一行

971
00:27:51,000 --> 00:27:54,000
去解析执行那段代码的这么一个过程

972
00:27:54,000 --> 00:27:58,000
然后所以我不知道是不是时间长了之后会让人变得

973
00:27:58,000 --> 00:27:59,000
非

974
00:27:59,000 --> 00:28:03,000
非人类

975
00:28:03,000 --> 00:28:05,000
变得过于理性和非人类

976
00:28:05,000 --> 00:28:05,000
对

977
00:28:05,000 --> 00:28:06,000
然后

978
00:28:06,000 --> 00:28:09,000
有很多这个所谓中国国内的这种

979
00:28:09,000 --> 00:28:11,000
教育出来的那种理工科生会

980
00:28:11,000 --> 00:28:12,000
有个字叫什么

981
00:28:12,000 --> 00:28:13,000
特别轴

982
00:28:13,000 --> 00:28:14,000
你知道吗

983
00:28:14,000 --> 00:28:15,000
就认死脸

984
00:28:15,000 --> 00:28:16,000
就不知道怎么变

985
00:28:16,000 --> 00:28:20,000
经常会把我们理科生挂在嘴边

986
00:28:20,000 --> 00:28:21,000
没错

987
00:28:21,000 --> 00:28:21,000
没错

988
00:28:21,000 --> 00:28:24,000
然后这个时候就最容易在感情上出现

989
00:28:24,000 --> 00:28:26,000
那问题就是说你觉得逻辑上的事情是成立的

990
00:28:26,000 --> 00:28:28,000
但是你要知道这个事件并不是

991
00:28:28,000 --> 00:28:30,000
让这逻辑的方式运行的

992
00:28:30,000 --> 00:28:31,000
对

993
00:28:31,000 --> 00:28:33,000
这件事情可能会让很多人感到伤感

994
00:28:33,000 --> 00:28:36,000
但现实就是在现实世界里面

995
00:28:36,000 --> 00:28:39,000
如果你把一个 condition 测试一万遍

996
00:28:39,000 --> 00:28:44,000
那可能有 5000 遍是 true

997
00:28:44,000 --> 00:28:45,000
另外 5000 遍是 false

998
00:28:45,000 --> 00:28:47,000
得不到一个确定的

999
00:28:47,000 --> 00:28:49,000
而不像程式里面

1000
00:28:49,000 --> 00:28:53,000
我们接下来要接触的主题就是

1001
00:28:53,000 --> 00:28:54,000
有些事情是可以重复的

1002
00:28:54,000 --> 00:28:56,000
有些事情就是可以被测试

1003
00:28:56,000 --> 00:28:59,000
但现实生活里面很多的东西是没有办法

1004
00:28:59,000 --> 00:29:01,000
重复验证

1005
00:29:01,000 --> 00:29:03,000
也许你再来一次

1006
00:29:03,000 --> 00:29:06,000
得到的结果就会完全不一样

1007
00:29:06,000 --> 00:29:07,000
谁知道

1008
00:29:07,000 --> 00:29:07,000
甚至就说

1009
00:29:07,000 --> 00:29:08,000
他们经常说的那句话

1010
00:29:08,000 --> 00:29:11,000
两点之间的最短的线路可能不是值的

1011
00:29:11,000 --> 00:29:12,000
但这句话你怎么理解

1012
00:29:12,000 --> 00:29:13,000
你自己去想

1013
00:29:13,000 --> 00:29:14,000
对

1014
00:29:14,000 --> 00:29:15,000
取决于你怎么定义的最短

1015
00:29:15,000 --> 00:29:19,000
可能最省时间而已

1016
00:29:19,000 --> 00:29:20,000
对

1017
00:29:20,000 --> 00:29:22,000
这就好像一个 GPS 导航一会问你

1018
00:29:22,000 --> 00:29:23,000
你是要最省时间的

1019
00:29:23,000 --> 00:29:25,000
还是要最短的线路

1020
00:29:25,000 --> 00:29:26,000
刚刚学开车的时候

1021
00:29:26,000 --> 00:29:28,000
我想说质量者难道不一样吗

1022
00:29:28,000 --> 00:29:30,000
后来才明白真的不一样

1023
00:29:30,000 --> 00:29:37,000
而且我觉得对很多程序员也好

1024
00:29:37,000 --> 00:29:40,000
他的可能很多人的职业规划是说

1025
00:29:40,000 --> 00:29:42,000
要在几年三五年十年之后

1026
00:29:42,000 --> 00:29:45,000
做成一个所谓的技术岗位的

1027
00:29:45,000 --> 00:29:47,000
管理者这么一个

1028
00:29:47,000 --> 00:29:47,000
对

1029
00:29:47,000 --> 00:29:50,000
这个时候其实你会发现

1030
00:29:50,000 --> 00:29:51,000
你一旦走向所谓的管理岗位

1031
00:29:51,000 --> 00:29:53,000
你是你要写代码的时候就不多了

1032
00:29:53,000 --> 00:29:56,000
这反而是考验你对这个人的理解

1033
00:29:56,000 --> 00:29:59,000
对人性的思考的地方

1034
00:29:59,000 --> 00:30:04,000
会比你逻辑的地方多了多的时候

1035
00:30:04,000 --> 00:30:07,000
所以你如果处理不好

1036
00:30:07,000 --> 00:30:10,000
你和你亲密的人的关系

1037
00:30:10,000 --> 00:30:13,000
估计你走管理岗位也会挺郁闷的

1038
00:30:13,000 --> 00:30:16,000
对你会发现自己此前一直努力压抑的情商

1039
00:30:16,000 --> 00:30:18,000
忽然变得无比重要了

1040
00:30:18,000 --> 00:30:22,000
然后觉得自己一个白痴一样在那里

1041
00:30:22,000 --> 00:30:23,000
对

1042
00:30:23,000 --> 00:30:25,000
当然说到最后这个事情

1043
00:30:25,000 --> 00:30:28,000
那我们可以反正你上次

1044
00:30:28,000 --> 00:30:30,000
也吐槽了吗

1045
00:30:30,000 --> 00:30:32,000
那我也来吐槽一下

1046
00:30:32,000 --> 00:30:33,000
就是反正我找的朋友

1047
00:30:33,000 --> 00:30:36,000
是我当成续人之前的事了

1048
00:30:36,000 --> 00:30:37,000
后面怎么找我也管不着了

1049
00:30:37,000 --> 00:30:39,000
赤果果的炫耀

1050
00:30:39,000 --> 00:30:43,000
好吧

1051
00:30:43,000 --> 00:30:44,000
OK

1052
00:30:44,000 --> 00:30:47,000
我们讲下一条的听众反馈

1053
00:30:47,000 --> 00:30:49,000
这是一封来自一位叫

1054
00:30:49,000 --> 00:30:51,000
弗利利

1055
00:30:51,000 --> 00:30:52,000
徐

1056
00:30:52,000 --> 00:30:53,000
应该是徐

1057
00:30:53,000 --> 00:30:54,000
对

1058
00:30:54,000 --> 00:30:55,000
这是叫这个

1059
00:30:55,000 --> 00:30:57,000
对

1060
00:30:57,000 --> 00:30:58,000
他说

1061
00:30:58,000 --> 00:31:02,000
我不知道是不是 podcast 客户端有问题

1062
00:31:02,000 --> 00:31:05,000
或者是你们的 podcast 发布服务器有问题

1063
00:31:05,000 --> 00:31:06,000
总之有一段时间

1064
00:31:06,000 --> 00:31:08,000
当我下载那盒恐慌

1065
00:31:08,000 --> 00:31:09,000
并打开来收听的时候

1066
00:31:09,000 --> 00:31:11,000
会传出一个很好听很温柔的女生说

1067
00:31:11,000 --> 00:31:12,000
大家好

1068
00:31:12,000 --> 00:31:15,000
欢迎收听流行通信第 XX 7

1069
00:31:15,000 --> 00:31:18,000
我并不知道 IPN 还有另外一档叫做流行通信的节目

1070
00:31:18,000 --> 00:31:22,000
我多次以为只是两位主播受不了之前许多没有主题

1071
00:31:22,000 --> 00:31:23,000
中心

1072
00:31:23,000 --> 00:31:26,000
重点和深度的 softcore 讨论

1073
00:31:26,000 --> 00:31:30,000
终于找到了哪一位美女大牛进行一个高级话题的讨论

1074
00:31:30,000 --> 00:31:34,000
但是后来我才意识到原来是下载错了节目

1075
00:31:34,000 --> 00:31:35,000
再后来当我看到录音的时间

1076
00:31:35,000 --> 00:31:37,000
短于一个小时的时候

1077
00:31:37,000 --> 00:31:40,000
我就会本能的以为 podcast 又出问题了

1078
00:31:40,000 --> 00:31:41,000
然后删除重新下载

1079
00:31:41,000 --> 00:31:43,000
这个事情在 iDicona 里面

1080
00:31:43,000 --> 00:31:45,000
其实我有次已经提到过了

1081
00:31:45,000 --> 00:31:47,000
这是一个 bug

1082
00:31:47,000 --> 00:31:48,000
not a feature

1083
00:31:48,000 --> 00:31:51,000
这是我们的 podcast 发布服务器的问题

1084
00:31:51,000 --> 00:31:52,000
或者是

1085
00:31:52,000 --> 00:31:54,000
但是这个 bug 的成因

1086
00:31:54,000 --> 00:31:55,000
我到目前为止都没有找到

1087
00:31:55,000 --> 00:31:57,000
因为我们没有办法重现它

1088
00:31:57,000 --> 00:32:02,000
我们应该在这里发动广大的程序员听众帮我们测试一下

1089
00:32:02,000 --> 00:32:03,000
如果你遇到这个场景

1090
00:32:03,000 --> 00:32:09,000
请千万去 somehow someway traceback 一下这个网址是怎么来的

1091
00:32:09,000 --> 00:32:11,000
它经过了哪些路由

1092
00:32:11,000 --> 00:32:13,000
那它是到底是怎么一回事

1093
00:32:13,000 --> 00:32:18,000
因为我现在想了几个可能出现问题的地方

1094
00:32:18,000 --> 00:32:22,000
一个是我们的自己的那个 IP 的那个 CMS 有问题

1095
00:32:22,000 --> 00:32:22,000
对

1096
00:32:22,000 --> 00:32:22,000
但是我

1097
00:32:22,000 --> 00:32:25,000
但我做了很多测试

1098
00:32:25,000 --> 00:32:27,000
这个是今天我们的后面的主题

1099
00:32:27,000 --> 00:32:28,000
一会再说

1100
00:32:28,000 --> 00:32:29,000
我做了很多测试

1101
00:32:29,000 --> 00:32:32,000
就是我完全没办法重现这件事情

1102
00:32:32,000 --> 00:32:34,000
然后我就是我又想到说

1103
00:32:34,000 --> 00:32:36,000
那是不是这个所谓运营商的劫持

1104
00:32:36,000 --> 00:32:40,000
但现在看来又不是一个非常确定的东西

1105
00:32:40,000 --> 00:32:43,000
因为有不同的人在不同的网络环境下不同的运营商

1106
00:32:43,000 --> 00:32:44,000
它都遇到类似的问题

1107
00:32:44,000 --> 00:32:47,000
而且这个事情似乎是一个

1108
00:32:47,000 --> 00:32:50,000
怎么讲就难以预测规律的东西

1109
00:32:50,000 --> 00:32:52,000
就我不知道到底是为什么

1110
00:32:52,000 --> 00:32:53,000
然后之前又是考虑说

1111
00:32:53,000 --> 00:32:55,000
是不是因为这个强的问题

1112
00:32:55,000 --> 00:32:56,000
因为我们的服务器在国外

1113
00:32:56,000 --> 00:32:59,000
但是后来找了一些朋友测试之后

1114
00:32:59,000 --> 00:33:00,000
也没有得出一个确定的结论

1115
00:33:00,000 --> 00:33:01,000
所以到目前为止

1116
00:33:01,000 --> 00:33:03,000
这是一个叫什么 phantom bug

1117
00:33:03,000 --> 00:33:04,000
对

1118
00:33:04,000 --> 00:33:06,000
隐虫

1119
00:33:06,000 --> 00:33:10,000
就是他一会出现

1120
00:33:10,000 --> 00:33:10,000
一会不出现

1121
00:33:10,000 --> 00:33:11,000
你也不知道他什么时候出现

1122
00:33:11,000 --> 00:33:13,000
以及他在什么情况下会出现

1123
00:33:13,000 --> 00:33:14,000
所以我也很郁闷

1124
00:33:14,000 --> 00:33:16,000
OK

1125
00:33:16,000 --> 00:33:17,000
这是一个声明

1126
00:33:17,000 --> 00:33:20,000
大家如果能够帮助我们

1127
00:33:20,000 --> 00:33:21,000
除下虫

1128
00:33:21,000 --> 00:33:22,000
万分感谢

1129
00:33:22,000 --> 00:33:23,000
对

1130
00:33:23,000 --> 00:33:25,000
然后接着念这个

1131
00:33:25,000 --> 00:33:27,000
Fleely 的来信

1132
00:33:27,000 --> 00:33:28,000
他说

1133
00:33:28,000 --> 00:33:30,000
而这次我重新下载了三次

1134
00:33:30,000 --> 00:33:31,000
发现节目的长度

1135
00:33:31,000 --> 00:33:32,000
依然只有 59 分钟

1136
00:33:32,000 --> 00:33:33,000
我发现

1137
00:33:33,000 --> 00:33:35,000
原来这一次没有下错

1138
00:33:35,000 --> 00:33:36,000
节目真的只有 59 分钟

1139
00:33:36,000 --> 00:33:37,000
所以

1140
00:33:37,000 --> 00:33:38,000
少了那么

1141
00:33:38,000 --> 00:33:40,000
那么多内容和水分

1142
00:33:40,000 --> 00:33:41,000
是因为少了一个人吗

1143
00:33:41,000 --> 00:33:41,000
对啊

1144
00:33:41,000 --> 00:33:42,000
正常

1145
00:33:42,000 --> 00:33:42,000
我们两个人

1146
00:33:42,000 --> 00:33:44,000
一人加碗水就是两个小时

1147
00:33:44,000 --> 00:33:45,000
如果只有一个人打个对折

1148
00:33:45,000 --> 00:33:46,000
差不多

1149
00:33:46,000 --> 00:33:48,000
OK

1150
00:33:48,000 --> 00:33:50,000
他说

1151
00:33:50,000 --> 00:33:51,000
以上只是一个玩笑

1152
00:33:51,000 --> 00:33:52,000
接着说

1153
00:33:52,000 --> 00:33:54,000
关于机械键盘的手感

1154
00:33:54,000 --> 00:33:55,000
是玄学的观点

1155
00:33:55,000 --> 00:33:57,000
感觉非常扯淡

1156
00:33:57,000 --> 00:33:58,000
我用过各种键盘

1157
00:33:58,000 --> 00:34:00,000
我长时间使用过

1158
00:34:00,000 --> 00:34:01,000
红轴和黑轴

1159
00:34:01,000 --> 00:34:02,000
薄膜键盘也用

1160
00:34:02,000 --> 00:34:05,000
而现在主要使用的是

1161
00:34:05,000 --> 00:34:07,000
RealForce 的静电容键盘

1162
00:34:07,000 --> 00:34:09,000
在我身边

1163
00:34:09,000 --> 00:34:11,000
喜欢薄膜键盘的人也不少

1164
00:34:11,000 --> 00:34:13,000
他们不喜欢机械键盘的手感

1165
00:34:13,000 --> 00:34:15,000
但是对于薄膜键盘的不好

1166
00:34:15,000 --> 00:34:16,000
他们非常清楚

1167
00:34:16,000 --> 00:34:18,000
就是在薄膜键盘老化的时候

1168
00:34:18,000 --> 00:34:19,000
按键无法回弹

1169
00:34:19,000 --> 00:34:21,000
或者回弹缓慢

1170
00:34:21,000 --> 00:34:23,000
而这就是让人们对薄膜键盘

1171
00:34:23,000 --> 00:34:24,000
手感感觉不好的原因

1172
00:34:24,000 --> 00:34:26,000
真的是这样吗

1173
00:34:26,000 --> 00:34:27,000
我不太清楚

1174
00:34:27,000 --> 00:34:28,000
你应该是没错吧

1175
00:34:28,000 --> 00:34:29,000
OK

1176
00:34:29,000 --> 00:34:31,000
接着念

1177
00:34:31,000 --> 00:34:33,000
我们平时所说的薄膜键盘

1178
00:34:33,000 --> 00:34:34,000
是依靠底部的

1179
00:34:34,000 --> 00:34:36,000
这个碗状硅胶进行回弹的

1180
00:34:36,000 --> 00:34:37,000
在一些键盘中

1181
00:34:37,000 --> 00:34:40,000
还会辅助利用到一些机械结构

1182
00:34:40,000 --> 00:34:42,000
比如最知名的笔记本电脑

1183
00:34:42,000 --> 00:34:43,000
使用的 X 结构

1184
00:34:43,000 --> 00:34:45,000
就是叫做 Cezzers Switch

1185
00:34:45,000 --> 00:34:45,000
对吧

1186
00:34:45,000 --> 00:34:46,000
对

1187
00:34:46,000 --> 00:34:47,000
剪刀脚

1188
00:34:47,000 --> 00:34:47,000
对

1189
00:34:47,000 --> 00:34:49,000
但是硅胶碗的寿命

1190
00:34:49,000 --> 00:34:51,000
根据键盘质量

1191
00:34:51,000 --> 00:34:52,000
在几十万次到百万次不得

1192
00:34:52,000 --> 00:34:54,000
不同键盘的使用寿命

1193
00:34:54,000 --> 00:34:55,000
也不太一样

1194
00:34:55,000 --> 00:34:56,000
但是必须承认

1195
00:34:56,000 --> 00:34:57,000
新买回来的薄膜键盘

1196
00:34:57,000 --> 00:34:59,000
手感是非常好的

1197
00:34:59,000 --> 00:35:00,000
之所以不选择它

1198
00:35:00,000 --> 00:35:01,000
就是因为你很可能

1199
00:35:01,000 --> 00:35:03,000
在几个月之后

1200
00:35:03,000 --> 00:35:04,000
这些按键就不能回弹

1201
00:35:04,000 --> 00:35:06,000
甚至回弹缓慢了

1202
00:35:06,000 --> 00:35:08,000
这个时候的手感就很糟糕

1203
00:35:08,000 --> 00:35:10,000
这样缓慢的回弹

1204
00:35:10,000 --> 00:35:12,000
是我们的手指

1205
00:35:12,000 --> 00:35:13,000
可能需要自己费力抬起来

1206
00:35:13,000 --> 00:35:16,000
而不是放松之后

1207
00:35:16,000 --> 00:35:17,000
被按键推上来

1208
00:35:17,000 --> 00:35:18,000
这种细部的变化

1209
00:35:18,000 --> 00:35:22,000
会被手指敏感的察觉到

1210
00:35:22,000 --> 00:35:23,000
而抬起手指的力气

1211
00:35:23,000 --> 00:35:26,000
也会比按下按键更费力

1212
00:35:26,000 --> 00:35:29,000
而在按键无法彻底回弹的时候

1213
00:35:29,000 --> 00:35:31,000
就是按下按键的心情

1214
00:35:31,000 --> 00:35:32,000
会变得烦躁不安

1215
00:35:32,000 --> 00:35:33,000
其实这也说明了

1216
00:35:33,000 --> 00:35:34,000
为什么这么多人喜欢

1217
00:35:34,000 --> 00:35:36,000
RealForce 和 HHKV 这类

1218
00:35:36,000 --> 00:35:37,000
不是键盘

1219
00:35:37,000 --> 00:35:39,000
不是机械键盘的高级键盘

1220
00:35:39,000 --> 00:35:41,000
因为静电容键盘的原理

1221
00:35:41,000 --> 00:35:45,000
因为静电容键盘的原理和手感

1222
00:35:45,000 --> 00:35:48,000
跟普通的薄膜键盘太相似了

1223
00:35:48,000 --> 00:35:51,000
静电容键盘内部是一个橡胶瓦

1224
00:35:51,000 --> 00:35:53,000
里面是一个碗形的弹簧

1225
00:35:53,000 --> 00:35:55,000
所使用的橡胶的寿命

1226
00:35:55,000 --> 00:35:57,000
要高于普通的硅胶

1227
00:35:57,000 --> 00:35:59,000
并且里面的碗形弹簧

1228
00:35:59,000 --> 00:36:02,000
不仅是用来改变电容触发按键

1229
00:36:02,000 --> 00:36:03,000
还可以帮助回弹

1230
00:36:03,000 --> 00:36:05,000
所以静电容键盘的感觉

1231
00:36:05,000 --> 00:36:06,000
像是回弹有力

1232
00:36:06,000 --> 00:36:09,000
并且永远是新买回来状态的薄膜键盘

1233
00:36:09,000 --> 00:36:12,000
这其实跟我刚刚讲的

1234
00:36:12,000 --> 00:36:14,000
那个 HHKV 的语断有点关系

1235
00:36:14,000 --> 00:36:16,000
因为我的感觉就是

1236
00:36:16,000 --> 00:36:19,000
因为之前我们讨论过键盘内部

1237
00:36:19,000 --> 00:36:20,000
在 HHKV 中进量键盘

1238
00:36:20,000 --> 00:36:21,000
但是我自己从来没有用过

1239
00:36:21,000 --> 00:36:23,000
就直到上次 Lawrence

1240
00:36:23,000 --> 00:36:24,000
把他那块机构

1241
00:36:24,000 --> 00:36:26,000
我当时第一次拿到的时候

1242
00:36:26,000 --> 00:36:27,000
感觉还是蛮特别的

1243
00:36:27,000 --> 00:36:28,000
说这个手感

1244
00:36:28,000 --> 00:36:29,000
因为它并不像

1245
00:36:29,000 --> 00:36:32,000
我预期的那种机械键盘当中

1246
00:36:32,000 --> 00:36:33,000
很硬朗的感觉

1247
00:36:33,000 --> 00:36:33,000
是一种比较

1248
00:36:33,000 --> 00:36:35,000
OK 你刚才念对的

1249
00:36:35,000 --> 00:36:36,000
它原文的确是

1250
00:36:36,000 --> 00:36:37,000
RealFox 还是 KV

1251
00:36:37,000 --> 00:36:39,000
这类不是机械键盘的关系

1252
00:36:39,000 --> 00:36:40,000
OK

1253
00:36:40,000 --> 00:36:42,000
它漏写了机械两个字

1254
00:36:42,000 --> 00:36:44,000
但是你的结构应该是正确

1255
00:36:44,000 --> 00:36:46,000
对 我理解是这么理解

1256
00:36:46,000 --> 00:36:49,000
所以这个我觉得就挺有意思

1257
00:36:49,000 --> 00:36:52,000
因为静电容的手感

1258
00:36:52,000 --> 00:36:53,000
真的是很难形容

1259
00:36:53,000 --> 00:36:55,000
它说是薄膜键盘

1260
00:36:55,000 --> 00:36:57,000
我觉得也不太像

1261
00:36:57,000 --> 00:36:58,000
我没有用过任何一款薄膜键盘

1262
00:36:58,000 --> 00:37:00,000
是这种感觉的

1263
00:37:00,000 --> 00:37:02,000
对 没错

1264
00:37:02,000 --> 00:37:03,000
就是机械键盘

1265
00:37:03,000 --> 00:37:04,000
你会有明显的那种

1266
00:37:04,000 --> 00:37:05,000
咔嚓的感觉

1267
00:37:05,000 --> 00:37:08,000
就是你会感觉到自己

1268
00:37:08,000 --> 00:37:10,000
在按一个盘黄一样的东西

1269
00:37:10,000 --> 00:37:13,000
但是在静电容键盘里面

1270
00:37:13,000 --> 00:37:15,000
这种感觉被淡化

1271
00:37:15,000 --> 00:37:16,000
你能感觉到自己

1272
00:37:16,000 --> 00:37:17,000
没有在按一个薄膜

1273
00:37:17,000 --> 00:37:20,000
但按下去也肯定不是弹簧

1274
00:37:20,000 --> 00:37:22,000
对 所以这件事情

1275
00:37:22,000 --> 00:37:23,000
我觉得真的

1276
00:37:23,000 --> 00:37:24,000
像很多这个东西

1277
00:37:24,000 --> 00:37:26,000
越来越多实体物件一样

1278
00:37:26,000 --> 00:37:28,000
你光听描述是没有用的

1279
00:37:28,000 --> 00:37:30,000
除非你自己真的按上去那一天

1280
00:37:30,000 --> 00:37:31,000
或者说甚至说

1281
00:37:31,000 --> 00:37:32,000
除非你要连续使用

1282
00:37:32,000 --> 00:37:33,000
相当长一段时间

1283
00:37:33,000 --> 00:37:34,000
你才能感觉到

1284
00:37:34,000 --> 00:37:35,000
这种细微的差别

1285
00:37:35,000 --> 00:37:37,000
给你的手感

1286
00:37:37,000 --> 00:37:38,000
给你的工作带来上

1287
00:37:38,000 --> 00:37:39,000
什么样的一种影响和变化

1288
00:37:39,000 --> 00:37:42,000
所以这里就不再多说了

1289
00:37:42,000 --> 00:37:43,000
大点有机会去摸一下

1290
00:37:43,000 --> 00:37:45,000
接着念几个

1291
00:37:45,000 --> 00:37:46,000
它后面还有一些

1292
00:37:46,000 --> 00:37:47,000
一大段的反馈

1293
00:37:47,000 --> 00:37:51,000
对于这一期主题的编码

1294
00:37:51,000 --> 00:37:52,000
我觉得主播在答案之后

1295
00:37:52,000 --> 00:37:53,000
转了一圈

1296
00:37:53,000 --> 00:37:55,000
甚至延伸扯到了指令集

1297
00:37:55,000 --> 00:37:56,000
以及三进制

1298
00:37:56,000 --> 00:37:58,000
这些更无关的其他东西

1299
00:37:58,000 --> 00:38:00,000
但是始终就没有说到底

1300
00:38:00,000 --> 00:38:01,000
到底什么是编码

1301
00:38:01,000 --> 00:38:02,000
主播已经提到

1302
00:38:02,000 --> 00:38:04,000
比如说我们能看到文字

1303
00:38:04,000 --> 00:38:05,000
我们能听到声音

1304
00:38:05,000 --> 00:38:08,000
比如说各位现在听到的 podcast

1305
00:38:08,000 --> 00:38:09,000
我们能看到图片

1306
00:38:09,000 --> 00:38:10,000
以及一些高雅的小电影

1307
00:38:10,000 --> 00:38:13,000
这些东西都不是零和一

1308
00:38:13,000 --> 00:38:13,000
不是吗

1309
00:38:13,000 --> 00:38:15,000
如何用零和一表示这些东西

1310
00:38:15,000 --> 00:38:16,000
就是编码

1311
00:38:16,000 --> 00:38:17,000
而用这些零和一

1312
00:38:17,000 --> 00:38:18,000
或者说数字

1313
00:38:18,000 --> 00:38:20,000
或者说更准确的说

1314
00:38:20,000 --> 00:38:21,000
是用整数表示文字

1315
00:38:21,000 --> 00:38:23,000
那么就是文字编码

1316
00:38:23,000 --> 00:38:24,000
用来表示音乐

1317
00:38:24,000 --> 00:38:25,000
就是音乐的编码

1318
00:38:25,000 --> 00:38:26,000
比如 MP 3

1319
00:38:26,000 --> 00:38:28,000
WMA 之类的

1320
00:38:28,000 --> 00:38:29,000
为了让本来只能表示

1321
00:38:29,000 --> 00:38:32,000
二进制数的计算机

1322
00:38:32,000 --> 00:38:33,000
能够处理文本

1323
00:38:33,000 --> 00:38:36,000
就必须将文本变化为相应的数字

1324
00:38:36,000 --> 00:38:38,000
这种对应于文本的数值

1325
00:38:38,000 --> 00:38:39,000
就成为文本编码

1326
00:38:39,000 --> 00:38:42,000
这段话是在松本信红

1327
00:38:42,000 --> 00:38:43,000
这谁啊

1328
00:38:43,000 --> 00:38:45,000
松本信红是一个日本的程序员

1329
00:38:45,000 --> 00:38:47,000
好像我记得他很自学称才

1330
00:38:47,000 --> 00:38:48,000
还是怎么着

1331
00:38:48,000 --> 00:38:49,000
写了这本书

1332
00:38:49,000 --> 00:38:50,000
对

1333
00:38:50,000 --> 00:38:54,000
这一段话是在松本信红

1334
00:38:54,000 --> 00:38:54,000
在他的书

1335
00:38:54,000 --> 00:38:57,000
松本信红的程序世界 7.1.1

1336
00:38:57,000 --> 00:38:58,000
这个章节里面

1337
00:38:58,000 --> 00:38:59,000
早期文字编码中

1338
00:38:59,000 --> 00:39:01,000
对于文字编码的描述

1339
00:39:01,000 --> 00:39:03,000
这大概算是一个非常简洁

1340
00:39:03,000 --> 00:39:05,000
而且易懂的描述吧

1341
00:39:05,000 --> 00:39:06,000
我一直在看

1342
00:39:06,000 --> 00:39:07,000
松本信红就是 Mats

1343
00:39:07,000 --> 00:39:10,000
Ruby 那个作者是吧

1344
00:39:10,000 --> 00:39:10,000
OK

1345
00:39:10,000 --> 00:39:12,000
我一直没反应过来

1346
00:39:12,000 --> 00:39:13,000
我觉得看的名字特别眼熟

1347
00:39:13,000 --> 00:39:14,000
但我不确定到底是谁

1348
00:39:14,000 --> 00:39:16,000
我把他跟另外一个日本

1349
00:39:16,000 --> 00:39:18,000
所以他日本名字怎么念

1350
00:39:18,000 --> 00:39:19,000
Mats 是什么

1351
00:39:19,000 --> 00:39:22,000
Yukihiro Matsumoto

1352
00:39:22,000 --> 00:39:24,000
Matsumoto

1353
00:39:24,000 --> 00:39:25,000
Matsumoto

1354
00:39:25,000 --> 00:39:27,000
OK

1355
00:39:27,000 --> 00:39:29,000
谢谢您好

1356
00:39:29,000 --> 00:39:29,000
此外

1357
00:39:29,000 --> 00:39:32,000
这本书中还介绍了一些很有历史

1358
00:39:32,000 --> 00:39:34,000
但是有很奇葩的文字编码

1359
00:39:34,000 --> 00:39:40,000
如定义了半角片甲名的标准

1360
00:39:40,000 --> 00:39:42,000
GISX 0201

1361
00:39:42,000 --> 00:39:45,000
以及一种类似 ISO 8859 的方法实现

1362
00:39:45,000 --> 00:39:47,000
但是 ASCII 部分以

1363
00:39:47,000 --> 00:39:48,000
这个

1364
00:39:48,000 --> 00:39:50,000
这个叫什么来的

1365
00:39:50,000 --> 00:39:50,000
日元符号

1366
00:39:50,000 --> 00:39:51,000
日元符号

1367
00:39:51,000 --> 00:39:52,000
或者是人民币符号

1368
00:39:52,000 --> 00:39:53,000
因为都是一个吧

1369
00:39:53,000 --> 00:39:55,000
就是那个羊少一横

1370
00:39:55,000 --> 00:39:57,000
替代了反斜杠

1371
00:39:57,000 --> 00:39:59,000
以上画

1372
00:39:59,000 --> 00:40:01,000
以上画现在替代了这个波浪号

1373
00:40:01,000 --> 00:40:03,000
羊少一横

1374
00:40:03,000 --> 00:40:04,000
太有成

1375
00:40:04,000 --> 00:40:05,000
对吗

1376
00:40:05,000 --> 00:40:06,000
不是吧

1377
00:40:06,000 --> 00:40:08,000
它其实就是那个日元的那个印外

1378
00:40:08,000 --> 00:40:10,000
印上面打了两横

1379
00:40:10,000 --> 00:40:12,000
人民币也是用它

1380
00:40:12,000 --> 00:40:12,000
对吧

1381
00:40:12,000 --> 00:40:13,000
人民币是直接

1382
00:40:13,000 --> 00:40:13,000
对

1383
00:40:13,000 --> 00:40:14,000
我一直好奇

1384
00:40:14,000 --> 00:40:16,000
为什么反日分子

1385
00:40:16,000 --> 00:40:17,000
从来没有拿这个符号

1386
00:40:17,000 --> 00:40:18,000
开到

1387
00:40:18,000 --> 00:40:21,000
这个符号是人民币

1388
00:40:21,000 --> 00:40:23,000
完全搬迁日元的

1389
00:40:23,000 --> 00:40:25,000
你看这卢布都有自己的符号

1390
00:40:25,000 --> 00:40:27,000
所以我们应该用羊

1391
00:40:27,000 --> 00:40:28,000
比它们还多一横

1392
00:40:28,000 --> 00:40:29,000
对

1393
00:40:29,000 --> 00:40:29,000
没错

1394
00:40:29,000 --> 00:40:31,000
东西高级

1395
00:40:31,000 --> 00:40:33,000
下次我们不打

1396
00:40:33,000 --> 00:40:34,000
不打那个音

1397
00:40:34,000 --> 00:40:35,000
我们打羊

1398
00:40:35,000 --> 00:40:36,000
对

1399
00:40:36,000 --> 00:40:40,000
另一个编码则是奇葩的 ISO-2022

1400
00:40:40,000 --> 00:40:44,000
这种单身于 93 年的神奇编码方式

1401
00:40:44,000 --> 00:40:46,000
使用了类似于编程语言中引号

1402
00:40:46,000 --> 00:40:48,000
或者注释的方法

1403
00:40:48,000 --> 00:40:50,000
通过一个特殊的引号

1404
00:40:50,000 --> 00:40:52,000
将 ASCII 编码和其他语言的编码

1405
00:40:52,000 --> 00:40:58,000
如汉语的 GB 2312 和日语的 JSX 0208 引起来

1406
00:40:58,000 --> 00:41:01,000
也就是在 ASCII 编码的文本当中

1407
00:41:01,000 --> 00:41:03,000
当遇到三个特殊字符

1408
00:41:03,000 --> 00:41:04,000
Escape

1409
00:41:04,000 --> 00:41:05,000
DoorSign 和 B

1410
00:41:05,000 --> 00:41:10,000
则后面的内容开始切换到 JSX 0208 编码

1411
00:41:10,000 --> 00:41:13,000
当遇到另外三个特殊字符 Escape

1412
00:41:13,000 --> 00:41:15,000
开括号 B

1413
00:41:15,000 --> 00:41:18,000
又切换回 ASCII 编码

1414
00:41:18,000 --> 00:41:20,000
在我看到这本书的时候

1415
00:41:20,000 --> 00:41:23,000
我不禁感叹原来人类还设计过如此愚蠢的编码

1416
00:41:23,000 --> 00:41:24,000
相比起来

1417
00:41:24,000 --> 00:41:27,000
UTF 系列真是不知道搞到哪里去了

1418
00:41:27,000 --> 00:41:29,000
是啊 没错

1419
00:41:29,000 --> 00:41:31,000
所以它那个都不叫

1420
00:41:31,000 --> 00:41:34,000
就最后那个提案 ISO-2022

1421
00:41:34,000 --> 00:41:37,000
这个都已经不算是一个编码方式

1422
00:41:37,000 --> 00:41:38,000
它就是一个怎么讲

1423
00:41:38,000 --> 00:41:39,000
Escape 方式

1424
00:41:39,000 --> 00:41:41,000
规定立组规则

1425
00:41:41,000 --> 00:41:42,000
告诉你在这个时候

1426
00:41:42,000 --> 00:41:46,000
可以插入其他编码的东西

1427
00:41:46,000 --> 00:41:47,000
这感觉好像在写 XML 对吧

1428
00:41:47,000 --> 00:41:48,000
对

1429
00:41:48,000 --> 00:41:49,000
开括号

1430
00:41:49,000 --> 00:41:52,000
对 它是一种原编码

1431
00:41:52,000 --> 00:41:53,000
关于编码

1432
00:41:53,000 --> 00:41:53,000
对

1433
00:41:53,000 --> 00:41:56,000
不过其实这个分子在 UTF 里面也实现过

1434
00:41:56,000 --> 00:41:57,000
上次我今天你也聊到

1435
00:41:57,000 --> 00:41:58,000
那个叫做

1436
00:41:58,000 --> 00:42:00,000
这个叫什么 Pair 的

1437
00:42:00,000 --> 00:42:01,000
Serregate Pair

1438
00:42:01,000 --> 00:42:04,000
What

1439
00:42:04,000 --> 00:42:06,000
你们听到吗

1440
00:42:06,000 --> 00:42:07,000
我没有提到 Serregate Pair

1441
00:42:07,000 --> 00:42:09,000
就是在 UTF 16 这个编码

1442
00:42:09,000 --> 00:42:11,000
因为 UTF 16 是固定两个字节的

1443
00:42:11,000 --> 00:42:11,000
对

1444
00:42:11,000 --> 00:42:13,000
但是 UTF 的 unicode

1445
00:42:13,000 --> 00:42:14,000
那个平面

1446
00:42:14,000 --> 00:42:17,000
那个总的字符数是远远超过 16 个字节

1447
00:42:17,000 --> 00:42:17,000
可以容纳的

1448
00:42:17,000 --> 00:42:22,000
所以怎么在 16 个字节这种定长的编码里面装

1449
00:42:22,000 --> 00:42:25,000
超过 16 个字节那些东西怎么办

1450
00:42:25,000 --> 00:42:26,000
对 我没有提到这个

1451
00:42:26,000 --> 00:42:27,000
你没提到这个

1452
00:42:27,000 --> 00:42:28,000
那我可以先稍微解释一下

1453
00:42:28,000 --> 00:42:30,000
这个我之前做研究的时候

1454
00:42:30,000 --> 00:42:32,000
写过这么一段小笔记

1455
00:42:32,000 --> 00:42:40,000
就是说那我们必然有一个办法要用多余 16 个字节就两个 byte 的方式来编码

1456
00:42:40,000 --> 00:42:41,000
其他东西

1457
00:42:41,000 --> 00:42:44,000
所以他定义了一个特殊的一个

1458
00:42:44,000 --> 00:42:47,000
就有一个范围的字节

1459
00:42:47,000 --> 00:42:49,000
只要那个字节开始的时候

1460
00:42:49,000 --> 00:42:50,000
他会进入另外一种

1461
00:42:50,000 --> 00:42:55,000
就是非定长 16 个 bit

1462
00:42:55,000 --> 00:42:57,000
两个字节这种模式

1463
00:42:57,000 --> 00:42:57,000
刚才说错了

1464
00:42:57,000 --> 00:42:58,000
不是 16 个字节那也太长了

1465
00:42:58,000 --> 00:43:00,000
16 个位

1466
00:43:00,000 --> 00:43:01,000
就是两个字节这种方式

1467
00:43:01,000 --> 00:43:06,000
就有一些特殊组合的两个 byte

1468
00:43:06,000 --> 00:43:09,000
他会定义说从这里开始我们进入另外一种模式

1469
00:43:09,000 --> 00:43:12,000
然后另外还有一些特殊的两个 byte

1470
00:43:12,000 --> 00:43:15,000
他会说从这里开始我们结束那个特殊模式

1471
00:43:15,000 --> 00:43:17,000
回到那个正常的 UTF 16 的编码

1472
00:43:17,000 --> 00:43:20,000
这种特殊的 byte

1473
00:43:20,000 --> 00:43:21,000
就叫做 surrogate pair

1474
00:43:21,000 --> 00:43:24,000
叫做什么代理组和代理对

1475
00:43:24,000 --> 00:43:28,000
就其实跟这个 ISO 202 的方式差不多了

1476
00:43:28,000 --> 00:43:31,000
但你不得不说在当时的物理史

1477
00:43:31,000 --> 00:43:34,000
就是 UTF 16 应该是在 90 年代中后期实现的

1478
00:43:34,000 --> 00:43:35,000
就是开发出来

1479
00:43:35,000 --> 00:43:38,000
在当时的历史情况下

1480
00:43:38,000 --> 00:43:40,000
只用两个字节来处理

1481
00:43:40,000 --> 00:43:45,000
就可能应对绝大部分的所谓的主流的文本

1482
00:43:45,000 --> 00:43:48,000
因为那个时代能够用到计算机进行文本处理的

1483
00:43:48,000 --> 00:43:50,000
也就是什么一些发达国家大国这种

1484
00:43:50,000 --> 00:43:53,000
像那些小国那种非常不起眼的文字

1485
00:43:53,000 --> 00:43:55,000
就已经无暇顾及也无所谓

1486
00:43:55,000 --> 00:43:59,000
我觉得那个时候还是主要为了应对东亚语言

1487
00:43:59,000 --> 00:44:00,000
对啊

1488
00:44:00,000 --> 00:44:01,000
那个时候东亚市场

1489
00:44:01,000 --> 00:44:01,000
刚需嘛

1490
00:44:01,000 --> 00:44:04,000
对东亚市场振兴得非常快

1491
00:44:04,000 --> 00:44:07,000
然后微软为了切入这个市场

1492
00:44:07,000 --> 00:44:09,000
就不得不采用了这么一个

1493
00:44:09,000 --> 00:44:10,000
对

1494
00:44:10,000 --> 00:44:12,000
而且这也是一个比较临时的范子

1495
00:44:12,000 --> 00:44:14,000
但是那个时候做出的技术选择

1496
00:44:14,000 --> 00:44:16,000
对我们今天来说其实影响非常深

1497
00:44:16,000 --> 00:44:17,000
影响是非常深的

1498
00:44:17,000 --> 00:44:19,000
UTF 如此愚蠢的东西

1499
00:44:19,000 --> 00:44:19,000
真的

1500
00:44:19,000 --> 00:44:23,000
就是 Windows 上又有一个痛点

1501
00:44:23,000 --> 00:44:24,000
并不得不承认

1502
00:44:24,000 --> 00:44:26,000
没错

1503
00:44:26,000 --> 00:44:29,000
因为当时在我的笔记里面有写的

1504
00:44:29,000 --> 00:44:30,000
至少是在

1505
00:44:30,000 --> 00:44:31,000
我想想

1506
00:44:31,000 --> 00:44:34,000
应该是在 Windows NT 的内核是默认是这个

1507
00:44:34,000 --> 00:44:35,000
也不是这个

1508
00:44:35,000 --> 00:44:36,000
不是 UTF 16

1509
00:44:36,000 --> 00:44:37,000
它是叫 UCSR

1510
00:44:37,000 --> 00:44:39,000
这么一个方式来的

1511
00:44:39,000 --> 00:44:41,000
就是 UTF 16 其实是 UCSR

1512
00:44:41,000 --> 00:44:42,000
就是刚才那种

1513
00:44:42,000 --> 00:44:44,000
就是所有东西都是两个字节的

1514
00:44:44,000 --> 00:44:45,000
没有额外的情况

1515
00:44:45,000 --> 00:44:48,000
UTF 16 是这个 UCSR

1516
00:44:48,000 --> 00:44:49,000
再加了刚才我讲那个

1517
00:44:49,000 --> 00:44:50,000
那个叫做

1518
00:44:50,000 --> 00:44:53,000
Servigate Pair 的方法去编码

1519
00:44:53,000 --> 00:44:57,000
超过那种就是超过那个就是 OXF

1520
00:44:57,000 --> 00:45:00,000
四个 F 这么一个段的更高的点位的那些字

1521
00:45:00,000 --> 00:45:01,000
对吧

1522
00:45:01,000 --> 00:45:04,000
但其实就是 UCSR 这种方式在很多这种

1523
00:45:04,000 --> 00:45:06,000
变成超系统里面也好

1524
00:45:06,000 --> 00:45:07,000
包括那个 NT 的那个

1525
00:45:07,000 --> 00:45:08,000
那个

1526
00:45:08,000 --> 00:45:12,000
我记得 NT 的那个默认的文件路径

1527
00:45:12,000 --> 00:45:14,000
是用 UCSR 来实现的

1528
00:45:14,000 --> 00:45:17,000
然后像那个 Java 是一点几吧

1529
00:45:17,000 --> 00:45:19,000
到 1.5 之前

1530
00:45:19,000 --> 00:45:22,000
1.6 之前都是用的这个 UCSR 的方法

1531
00:45:22,000 --> 00:45:25,000
这次到那个 Java 1.6

1532
00:45:25,000 --> 00:45:28,000
应该是还是 Java 5

1533
00:45:28,000 --> 00:45:29,000
Java 1.2

1534
00:45:29,000 --> 00:45:30,000
一直到 1.6 之前应该都是这样

1535
00:45:30,000 --> 00:45:32,000
1.7 后面我不知道怎么办

1536
00:45:32,000 --> 00:45:34,000
反正他再换 UTF 16

1537
00:45:34,000 --> 00:45:36,000
才就可以用那个 Servigate Pair 的方法来实现

1538
00:45:36,000 --> 00:45:37,000
对

1539
00:45:37,000 --> 00:45:38,000
然后 Python 也是

1540
00:45:38,000 --> 00:45:38,000
Python

1541
00:45:38,000 --> 00:45:39,000
就 Python 2

1542
00:45:39,000 --> 00:45:41,000
2.2.不管什么办法

1543
00:45:41,000 --> 00:45:43,000
全部都是用的这个 UCSR

1544
00:45:43,000 --> 00:45:45,000
UCSR 或者 UCS 4 的方法来表达

1545
00:45:45,000 --> 00:45:46,000
Unical 的

1546
00:45:46,000 --> 00:45:48,000
就他连那个 UTF 16 都没有

1547
00:45:48,000 --> 00:45:49,000
对

1548
00:45:49,000 --> 00:45:53,000
所以其实你会看到这种编码的选择

1549
00:45:53,000 --> 00:45:55,000
对后世的影响还是非常深远的

1550
00:45:55,000 --> 00:45:57,000
当然我们日常可能觉得

1551
00:45:57,000 --> 00:45:58,000
我怎么没有遇到

1552
00:45:58,000 --> 00:45:59,000
那是因为你出了文本

1553
00:45:59,000 --> 00:46:02,000
还不够不足以

1554
00:46:02,000 --> 00:46:03,000
就不够奇怪

1555
00:46:03,000 --> 00:46:07,000
没有用过 Windows 的和字符创业相关的一些 API

1556
00:46:07,000 --> 00:46:08,000
每一个这些 API

1557
00:46:08,000 --> 00:46:09,000
每一个都有两个版本

1558
00:46:09,000 --> 00:46:11,000
一个是 A 版本

1559
00:46:11,000 --> 00:46:12,000
一个是 W 版本

1560
00:46:12,000 --> 00:46:14,000
A 代表说他可以处理 ASCII 一遍

1561
00:46:14,000 --> 00:46:18,000
W 版本说他可以处理这种所谓宽字节的

1562
00:46:18,000 --> 00:46:20,000
White characters

1563
00:46:20,000 --> 00:46:22,000
这是一个 giant word of fuck

1564
00:46:22,000 --> 00:46:25,000
但是有什么办法呢

1565
00:46:25,000 --> 00:46:27,000
谁叫人家商业上成功呢

1566
00:46:27,000 --> 00:46:29,000
就是 Legacy

1567
00:46:29,000 --> 00:46:32,000
所以其实我们要往

1568
00:46:32,000 --> 00:46:33,000
Future compatible 方法的话

1569
00:46:33,000 --> 00:46:35,000
大家还是尽量使用 UTF 8 这种

1570
00:46:35,000 --> 00:46:38,000
比较通用的方式来实现表

1571
00:46:38,000 --> 00:46:40,000
虽然说可能 UTF 8

1572
00:46:40,000 --> 00:46:41,000
我觉得可能很多人反对

1573
00:46:41,000 --> 00:46:42,000
它的都是一个效率的原因

1574
00:46:42,000 --> 00:46:43,000
它不是定长的

1575
00:46:43,000 --> 00:46:43,000
对吧

1576
00:46:43,000 --> 00:46:45,000
它要是一个变长的

1577
00:46:45,000 --> 00:46:47,000
处理起来效率可能会比较低

1578
00:46:47,000 --> 00:46:50,000
但我觉得在现代的这种计算机的

1579
00:46:50,000 --> 00:46:51,000
处理器的心来说

1580
00:46:51,000 --> 00:46:52,000
这点完全不是问题

1581
00:46:52,000 --> 00:46:54,000
而且还有一个报应

1582
00:46:54,000 --> 00:46:56,000
UTF 8 因为它的编码方式的原因

1583
00:46:56,000 --> 00:47:00,000
它的编码非 ASCII 的时候的效率不高

1584
00:47:00,000 --> 00:47:02,000
特别是编码东亚文字的时候

1585
00:47:02,000 --> 00:47:03,000
可能效率比较高

1586
00:47:03,000 --> 00:47:04,000
经常需要三到四个字节

1587
00:47:04,000 --> 00:47:05,000
没错

1588
00:47:05,000 --> 00:47:07,000
就越冷僻的那些字节

1589
00:47:07,000 --> 00:47:10,000
那些字符可能需要的字节数越多

1590
00:47:10,000 --> 00:47:11,000
但是其实

1591
00:47:11,000 --> 00:47:13,000
现在不是有压缩吗

1592
00:47:13,000 --> 00:47:13,000
对吧

1593
00:47:13,000 --> 00:47:14,000
这种东西

1594
00:47:14,000 --> 00:47:16,000
我觉得问题并不大

1595
00:47:16,000 --> 00:47:19,000
而且就是用 GZip 流失压缩的话

1596
00:47:19,000 --> 00:47:21,000
你在一台正常的

1597
00:47:21,000 --> 00:47:22,000
现代的机箱机上

1598
00:47:22,000 --> 00:47:24,000
根本感觉不到这种性能的差异

1599
00:47:24,000 --> 00:47:25,000
所以我觉得

1600
00:47:25,000 --> 00:47:28,000
还是为了处理方便期间

1601
00:47:28,000 --> 00:47:30,000
尽量采用这种方式实现

1602
00:47:30,000 --> 00:47:31,000
但是我不知道

1603
00:47:31,000 --> 00:47:33,000
你了不到这个情况

1604
00:47:33,000 --> 00:47:35,000
国内很多这种网站还是

1605
00:47:35,000 --> 00:47:37,000
直到现在都是 GV

1606
00:47:37,000 --> 00:47:38,000
对吧

1607
00:47:38,000 --> 00:47:38,000
对

1608
00:47:38,000 --> 00:47:40,000
好吧

1609
00:47:40,000 --> 00:47:42,000
我们叫到下个环节

1610
00:47:42,000 --> 00:47:43,000
有什么

1611
00:47:43,000 --> 00:47:45,000
这种有什么小新闻吗

1612
00:47:45,000 --> 00:47:45,000
不

1613
00:47:45,000 --> 00:47:48,000
这一个月有什么小新闻吗

1614
00:47:48,000 --> 00:47:51,000
真的和 Rail 已经阔别四周了

1615
00:47:51,000 --> 00:47:54,000
两周一期的节目

1616
00:47:54,000 --> 00:47:55,000
如果 miss 掉一期就是一个月

1617
00:47:55,000 --> 00:47:56,000
对

1618
00:47:56,000 --> 00:47:58,000
再思索五周一下就是半年

1619
00:47:58,000 --> 00:48:00,000
没错

1620
00:48:00,000 --> 00:48:03,000
一期不见如隔半年

1621
00:48:03,000 --> 00:48:10,000
其实也没有什么太特别的新闻

1622
00:48:10,000 --> 00:48:12,000
然后我最近比较忙

1623
00:48:12,000 --> 00:48:13,000
没有怎么看这一份

1624
00:48:13,000 --> 00:48:14,000
唯一值得提起的

1625
00:48:14,000 --> 00:48:15,000
或者说唯一

1626
00:48:15,000 --> 00:48:18,000
我知道你肯定会感兴趣的东西

1627
00:48:18,000 --> 00:48:22,000
就是前两天刚刚结束的 WWDC 了

1628
00:48:22,000 --> 00:48:24,000
还没有结束吧

1629
00:48:24,000 --> 00:48:26,000
现在还在进行中

1630
00:48:26,000 --> 00:48:26,000
Exactly

1631
00:48:26,000 --> 00:48:30,000
我只是想到如果这一期节目上线的时候也许

1632
00:48:30,000 --> 00:48:31,000
对

1633
00:48:31,000 --> 00:48:33,000
但我们在录制的时候

1634
00:48:33,000 --> 00:48:37,000
WC 其实才开到第三天

1635
00:48:37,000 --> 00:48:37,000
对

1636
00:48:37,000 --> 00:48:40,000
一下子暴露了录制的日期

1637
00:48:40,000 --> 00:48:41,000
没关系

1638
00:48:41,000 --> 00:48:44,000
这个又不是什么行业机密

1639
00:48:44,000 --> 00:48:48,000
所以其实现在你的表也拿到了

1640
00:48:48,000 --> 00:48:49,000
对吧

1641
00:48:49,000 --> 00:48:49,000
对

1642
00:48:49,000 --> 00:48:51,000
你买了一款什么表

1643
00:48:51,000 --> 00:48:55,000
女朋友给我买的那个 42 毫米的

1644
00:48:55,000 --> 00:48:58,000
是 Sport 还是钢的

1645
00:48:58,000 --> 00:48:58,000
对

1646
00:48:58,000 --> 00:48:59,000
高档

1647
00:48:59,000 --> 00:49:00,000
然后呢

1648
00:49:00,000 --> 00:49:01,000
什么袋子

1649
00:49:01,000 --> 00:49:03,000
就最普通的黑色袋

1650
00:49:03,000 --> 00:49:05,000
黑色

1651
00:49:05,000 --> 00:49:07,000
是那个皮带那一款吗

1652
00:49:07,000 --> 00:49:08,000
OK

1653
00:49:08,000 --> 00:49:09,000
这不是皮带吧

1654
00:49:09,000 --> 00:49:09,000
硅胶里面

1655
00:49:09,000 --> 00:49:12,000
钢袋也是默认配硅胶的吗

1656
00:49:12,000 --> 00:49:13,000
钢的也是默认配硅胶的

1657
00:49:13,000 --> 00:49:14,000
就是 Sport

1658
00:49:14,000 --> 00:49:15,000
那个不叫硅胶

1659
00:49:15,000 --> 00:49:15,000
那个叫

1660
00:49:15,000 --> 00:49:16,000
想想想什么

1661
00:49:16,000 --> 00:49:19,000
Fluorastom

1662
00:49:19,000 --> 00:49:21,000
终于想起他

1663
00:49:21,000 --> 00:49:24,000
终于记得他念什么了

1664
00:49:24,000 --> 00:49:26,000
你觉得那个手感怎么样

1665
00:49:26,000 --> 00:49:27,000
那个袋子

1666
00:49:27,000 --> 00:49:30,000
就还 OK 吧

1667
00:49:30,000 --> 00:49:31,000
还 OK 啊

1668
00:49:31,000 --> 00:49:32,000
我也不知道

1669
00:49:32,000 --> 00:49:33,000
因为我从来不代表

1670
00:49:33,000 --> 00:49:34,000
你就能就

1671
00:49:34,000 --> 00:49:35,000
不是

1672
00:49:35,000 --> 00:49:37,000
俗话说穷玩车富玩表

1673
00:49:37,000 --> 00:49:39,000
那我肯定是不是玩表那些

1674
00:49:39,000 --> 00:49:41,000
所以我也说不上来

1675
00:49:41,000 --> 00:49:42,000
而且我有一个很惨痛的

1676
00:49:42,000 --> 00:49:43,000
有一件很惨痛的事情

1677
00:49:43,000 --> 00:49:44,000
就是我在

1678
00:49:44,000 --> 00:49:47,000
初中的时候

1679
00:49:47,000 --> 00:49:48,000
有一天看到那个

1680
00:49:48,000 --> 00:49:52,000
地摊上卖的漂亮的塑料电子脚

1681
00:49:52,000 --> 00:49:53,000
非常高兴

1682
00:49:53,000 --> 00:49:54,000
买了一块

1683
00:49:54,000 --> 00:49:58,000
然后从那个塑料电子脚的后盖

1684
00:49:58,000 --> 00:49:59,000
是镀镍里面

1685
00:49:59,000 --> 00:50:02,000
然后从那天开始

1686
00:50:02,000 --> 00:50:04,000
我对镍产生了过敏

1687
00:50:04,000 --> 00:50:07,000
真的有金属过敏

1688
00:50:07,000 --> 00:50:09,000
任何活泼金属

1689
00:50:09,000 --> 00:50:10,000
带到我手上都会立刻起包

1690
00:50:10,000 --> 00:50:14,000
所以在

1691
00:50:14,000 --> 00:50:15,000
这是什么原理到底

1692
00:50:15,000 --> 00:50:17,000
我就是对

1693
00:50:17,000 --> 00:50:18,000
活泼金属过敏

1694
00:50:18,000 --> 00:50:19,000
对贵重金属

1695
00:50:19,000 --> 00:50:20,000
比较

1696
00:50:20,000 --> 00:50:20,000
比较

1697
00:50:20,000 --> 00:50:21,000
比较惰性一点的金属

1698
00:50:21,000 --> 00:50:22,000
就没问题

1699
00:50:22,000 --> 00:50:23,000
什么铝

1700
00:50:23,000 --> 00:50:23,000
所以

1701
00:50:23,000 --> 00:50:26,000
你是暗示我们给你买个金表

1702
00:50:26,000 --> 00:50:27,000
对

1703
00:50:27,000 --> 00:50:29,000
给我买个金表吧

1704
00:50:29,000 --> 00:50:30,000
不过还是现在

1705
00:50:30,000 --> 00:50:32,000
所以你连铝的都不能带

1706
00:50:32,000 --> 00:50:34,000
铝的应该可以

1707
00:50:34,000 --> 00:50:34,000
因为铝

1708
00:50:34,000 --> 00:50:36,000
铝会被氧化

1709
00:50:36,000 --> 00:50:37,000
对吧

1710
00:50:37,000 --> 00:50:39,000
等一下

1711
00:50:39,000 --> 00:50:40,000
你说活泼金属怎么定义一下

1712
00:50:40,000 --> 00:50:41,000
活泼金属是

1713
00:50:41,000 --> 00:50:42,000
镍

1714
00:50:42,000 --> 00:50:45,000
割

1715
00:50:45,000 --> 00:50:46,000
猛

1716
00:50:46,000 --> 00:50:47,000
主要是镍

1717
00:50:47,000 --> 00:50:48,000
其实

1718
00:50:48,000 --> 00:50:50,000
我相信我之前查过

1719
00:50:50,000 --> 00:50:51,000
因为德国也有很多人

1720
00:50:51,000 --> 00:50:52,000
就

1721
00:50:52,000 --> 00:50:54,000
主要是镍

1722
00:50:54,000 --> 00:50:55,000
这种东西

1723
00:50:55,000 --> 00:50:56,000
镍

1724
00:50:56,000 --> 00:50:58,000
我想如果你对铝过敏的话

1725
00:50:58,000 --> 00:50:59,000
那你还用得了 iPhone

1726
00:50:59,000 --> 00:51:00,000
不行

1727
00:51:00,000 --> 00:51:01,000
肯定不行

1728
00:51:01,000 --> 00:51:02,000
就只能撞

1729
00:51:02,000 --> 00:51:03,000
我连铝锅都端不了

1730
00:51:03,000 --> 00:51:04,000
是吧

1731
00:51:04,000 --> 00:51:07,000
好吧

1732
00:51:07,000 --> 00:51:08,000
所以

1733
00:51:08,000 --> 00:51:10,000
体验上

1734
00:51:10,000 --> 00:51:10,000
我觉得可能

1735
00:51:10,000 --> 00:51:11,000
你觉得还好吧

1736
00:51:11,000 --> 00:51:12,000
我的意思就是

1737
00:51:12,000 --> 00:51:14,000
我这么大以来

1738
00:51:14,000 --> 00:51:14,000
这是第一次

1739
00:51:14,000 --> 00:51:16,000
正 28 讲的每天都代表

1740
00:51:16,000 --> 00:51:16,000
当然我之前有一块

1741
00:51:16,000 --> 00:51:20,000
德国那个叫什么

1742
00:51:20,000 --> 00:51:21,000
BRAWN

1743
00:51:21,000 --> 00:51:22,000
就是博朗

1744
00:51:22,000 --> 00:51:24,000
那个复刻版的

1745
00:51:24,000 --> 00:51:26,000
最普通的电子表

1746
00:51:26,000 --> 00:51:27,000
就是看起来和 iPhone

1747
00:51:27,000 --> 00:51:27,000
不是

1748
00:51:27,000 --> 00:51:28,000
看起来和 iPhone

1749
00:51:28,000 --> 00:51:29,000
神似

1750
00:51:29,000 --> 00:51:31,000
只不过那个是正 28 讲的

1751
00:51:31,000 --> 00:51:33,000
就是只能显示六个数字

1752
00:51:33,000 --> 00:51:33,000
这样

1753
00:51:33,000 --> 00:51:35,000
非常古老的

1754
00:51:35,000 --> 00:51:38,000
所以你待了多久了

1755
00:51:38,000 --> 00:51:38,000
那的

1756
00:51:38,000 --> 00:51:39,000
不到

1757
00:51:39,000 --> 00:51:40,000
那一个月了

1758
00:51:40,000 --> 00:51:40,000
差不多

1759
00:51:40,000 --> 00:51:41,000
OK

1760
00:51:41,000 --> 00:51:43,000
所以感觉如何

1761
00:51:43,000 --> 00:51:47,000
但就只是一块表而已

1762
00:51:47,000 --> 00:51:48,000
我觉得

1763
00:51:48,000 --> 00:51:49,000
你就上面那些软件

1764
00:51:49,000 --> 00:51:50,000
那种各种

1765
00:51:50,000 --> 00:51:52,000
什么 Watch extension

1766
00:51:52,000 --> 00:51:53,000
你觉得好用吗

1767
00:51:53,000 --> 00:51:56,000
实用性并不太高

1768
00:51:56,000 --> 00:51:56,000
必须说

1769
00:51:56,000 --> 00:51:57,000
对

1770
00:51:57,000 --> 00:51:57,000
对

1771
00:51:57,000 --> 00:51:57,000
我觉得

1772
00:51:57,000 --> 00:52:00,000
主要的原因就是因为它太慢了

1773
00:52:00,000 --> 00:52:02,000
我今天很久的状况

1774
00:52:02,000 --> 00:52:04,000
我点那个 Glans

1775
00:52:04,000 --> 00:52:05,000
出来一个

1776
00:52:05,000 --> 00:52:06,000
比如说地图

1777
00:52:06,000 --> 00:52:06,000
上次做

1778
00:52:06,000 --> 00:52:08,000
我在 Elecone 吐槽最久的

1779
00:52:08,000 --> 00:52:09,000
我等 10 秒

1780
00:52:09,000 --> 00:52:10,000
我有那个功夫

1781
00:52:10,000 --> 00:52:11,000
屏幕已经黑了

1782
00:52:11,000 --> 00:52:12,000
它没有漏出来

1783
00:52:12,000 --> 00:52:12,000
对吧

1784
00:52:12,000 --> 00:52:13,000
对

1785
00:52:13,000 --> 00:52:14,000
我等那个功夫出来

1786
00:52:14,000 --> 00:52:15,000
我都是直接手机看了

1787
00:52:15,000 --> 00:52:15,000
好吧

1788
00:52:15,000 --> 00:52:16,000
Somehow someway

1789
00:52:16,000 --> 00:52:17,000
我发现这个是

1790
00:52:17,000 --> 00:52:18,000
就是你用一段时间

1791
00:52:18,000 --> 00:52:20,000
然后它就会变快的

1792
00:52:20,000 --> 00:52:21,000
是吗

1793
00:52:21,000 --> 00:52:22,000
我不知道这是我的错觉

1794
00:52:22,000 --> 00:52:23,000
还是怎么样

1795
00:52:23,000 --> 00:52:24,000
就是一开始一周

1796
00:52:24,000 --> 00:52:26,000
我也有这样的状况

1797
00:52:26,000 --> 00:52:27,000
但是后来就仅仅还好

1798
00:52:27,000 --> 00:52:28,000
好吧

1799
00:52:28,000 --> 00:52:31,000
所以我一直在

1800
00:52:31,000 --> 00:52:32,000
今天我在那个

1801
00:52:32,000 --> 00:52:33,000
推上跟他们讨论

1802
00:52:33,000 --> 00:52:33,000
就是说

1803
00:52:33,000 --> 00:52:35,000
就是他们在说

1804
00:52:35,000 --> 00:52:36,000
这不是刚好

1805
00:52:36,000 --> 00:52:37,000
WG 上说了

1806
00:52:37,000 --> 00:52:38,000
那个 WatchOS 2

1807
00:52:38,000 --> 00:52:40,000
它会出那个原生的 SDK

1808
00:52:40,000 --> 00:52:41,000
对

1809
00:52:41,000 --> 00:52:42,000
就可以直接跑在 Watch 上面

1810
00:52:42,000 --> 00:52:43,000
因为之前的话

1811
00:52:43,000 --> 00:52:45,000
那个其实所谓的

1812
00:52:45,000 --> 00:52:46,000
那个 Watch App

1813
00:52:46,000 --> 00:52:48,000
都只是一个远程桌面

1814
00:52:48,000 --> 00:52:49,000
差不多一个意思

1815
00:52:49,000 --> 00:52:49,000
嗯

1816
00:52:49,000 --> 00:52:52,000
你是显示在手表上

1817
00:52:52,000 --> 00:52:53,000
但是那个整个罗技

1818
00:52:53,000 --> 00:52:53,000
是跑在手机上面

1819
00:52:53,000 --> 00:52:55,000
通过蓝牙来通讯

1820
00:52:55,000 --> 00:52:55,000
对

1821
00:52:55,000 --> 00:52:58,000
这是一个物理世界里

1822
00:52:58,000 --> 00:53:00,000
MVC 风格

1823
00:53:00,000 --> 00:53:03,000
MVC 跑在你的裤刀里

1824
00:53:03,000 --> 00:53:06,000
然后 V 在你的手上

1825
00:53:06,000 --> 00:53:06,000
对

1826
00:53:06,000 --> 00:53:08,000
那这个就是一个问题

1827
00:53:08,000 --> 00:53:09,000
就是说挺费电

1828
00:53:09,000 --> 00:53:09,000
而且挺

1829
00:53:09,000 --> 00:53:10,000
但慢的

1830
00:53:10,000 --> 00:53:10,000
已经讲了

1831
00:53:10,000 --> 00:53:12,000
就是一个很大的问题

1832
00:53:12,000 --> 00:53:13,000
就是蓝牙通讯的时候

1833
00:53:13,000 --> 00:53:16,000
手机的 CPU 和表的 CPU

1834
00:53:16,000 --> 00:53:17,000
都不能休眠

1835
00:53:17,000 --> 00:53:18,000
而且表的屏幕还是亮着的

1836
00:53:18,000 --> 00:53:20,000
你的等于是看着它

1837
00:53:20,000 --> 00:53:21,000
对吧

1838
00:53:21,000 --> 00:53:21,000
这样其实对

1839
00:53:21,000 --> 00:53:23,000
两边的电池续航时间

1840
00:53:23,000 --> 00:53:24,000
都会有影响

1841
00:53:24,000 --> 00:53:26,000
其实反而你是跑在这个表上

1842
00:53:26,000 --> 00:53:27,000
原生的一个 SDK 的话

1843
00:53:27,000 --> 00:53:27,000
反而

1844
00:53:27,000 --> 00:53:28,000
要好些

1845
00:53:28,000 --> 00:53:29,000
要好些

1846
00:53:29,000 --> 00:53:30,000
因为它可以快速的完成

1847
00:53:30,000 --> 00:53:32,000
因为现在 CPU 其实是很快的

1848
00:53:32,000 --> 00:53:33,000
那个 Watch 里面

1849
00:53:33,000 --> 00:53:34,000
他们说的是

1850
00:53:34,000 --> 00:53:34,000
应该是

1851
00:53:34,000 --> 00:53:36,000
就是 A 5 的那个架构

1852
00:53:36,000 --> 00:53:36,000
做小的

1853
00:53:36,000 --> 00:53:37,000
然后放进去的

1854
00:53:37,000 --> 00:53:40,000
然后那个计算是非常快的

1855
00:53:40,000 --> 00:53:41,000
Performance 不是说

1856
00:53:41,000 --> 00:53:42,000
只有 A 4 的级别吗

1857
00:53:42,000 --> 00:53:43,000
A 5

1858
00:53:43,000 --> 00:53:45,000
我当时比较清楚记得是 A 5

1859
00:53:45,000 --> 00:53:45,000
OK

1860
00:53:45,000 --> 00:53:47,000
因为现在 A 5 是在苹果

1861
00:53:47,000 --> 00:53:48,000
大多数的

1862
00:53:48,000 --> 00:53:50,000
卫生级的老旧设备里面

1863
00:53:50,000 --> 00:53:51,000
大量存在的

1864
00:53:51,000 --> 00:53:52,000
比如说那个 iPad

1865
00:53:52,000 --> 00:53:54,000
2

1866
00:53:54,000 --> 00:53:55,000
还没有在卖的吧

1867
00:53:55,000 --> 00:53:56,000
还在卖

1868
00:53:56,000 --> 00:53:58,000
然后 iPad mini

1869
00:53:58,000 --> 00:54:01,000
然后那个 Apple Touch

1870
00:54:01,000 --> 00:54:03,000
就这里都在用 A 5

1871
00:54:03,000 --> 00:54:04,000
然后那个还有 Apple TV

1872
00:54:04,000 --> 00:54:05,000
都是 A 5 处理器

1873
00:54:05,000 --> 00:54:06,000
对

1874
00:54:06,000 --> 00:54:07,000
反正

1875
00:54:07,000 --> 00:54:09,000
用到现在我的感觉就是

1876
00:54:09,000 --> 00:54:13,000
有一些 App

1877
00:54:13,000 --> 00:54:15,000
我觉得自己可能会用到

1878
00:54:15,000 --> 00:54:16,000
比如说德铁的 App

1879
00:54:16,000 --> 00:54:17,000
就是它会告诉你说

1880
00:54:17,000 --> 00:54:19,000
下一班火车还有机电来

1881
00:54:19,000 --> 00:54:21,000
下一班火车现在在哪

1882
00:54:21,000 --> 00:54:24,000
然后你需要去哪个站台

1883
00:54:24,000 --> 00:54:28,000
但是从来没有机会用到

1884
00:54:28,000 --> 00:54:31,000
然后最实用的功能就是

1885
00:54:31,000 --> 00:54:34,000
有或者说最常用的功能

1886
00:54:34,000 --> 00:54:35,000
就是有邮件来的时候

1887
00:54:35,000 --> 00:54:36,000
抬手看一下

1888
00:54:36,000 --> 00:54:37,000
这邮件值不值得看

1889
00:54:37,000 --> 00:54:39,000
如果值得看的话

1890
00:54:39,000 --> 00:54:41,000
就切换到手机

1891
00:54:41,000 --> 00:54:42,000
或者电脑上去看

1892
00:54:42,000 --> 00:54:45,000
然后再就是回软性

1893
00:54:45,000 --> 00:54:46,000
就是它

1894
00:54:46,000 --> 00:54:48,000
我觉得让我最

1895
00:54:48,000 --> 00:54:50,000
迄今让我最舒服

1896
00:54:50,000 --> 00:54:52,000
或者说让我最意外的一点

1897
00:54:52,000 --> 00:54:53,000
就是它的语音识别准确率

1898
00:54:53,000 --> 00:54:54,000
非常非常高

1899
00:54:54,000 --> 00:54:56,000
对

1900
00:54:56,000 --> 00:54:57,000
比 iPhone 上的还高

1901
00:54:57,000 --> 00:54:59,000
而且很神奇的是

1902
00:54:59,000 --> 00:55:01,000
我的手表的系统语言是英语

1903
00:55:01,000 --> 00:55:03,000
手机的系统语言是德语

1904
00:55:03,000 --> 00:55:04,000
然后

1905
00:55:04,000 --> 00:55:06,000
我用中文去说话

1906
00:55:06,000 --> 00:55:08,000
它可以准确的把

1907
00:55:08,000 --> 00:55:09,000
我说的话识别为中文

1908
00:55:09,000 --> 00:55:11,000
即便对方给我发的是英文

1909
00:55:11,000 --> 00:55:12,000
没错

1910
00:55:12,000 --> 00:55:13,000
我也觉得这个事情超神奇

1911
00:55:13,000 --> 00:55:14,000
我不知道它怎么做到

1912
00:55:14,000 --> 00:55:17,000
但是我现在没法重现那个事情

1913
00:55:17,000 --> 00:55:18,000
我不知道怎么弄

1914
00:55:18,000 --> 00:55:20,000
什么意思

1915
00:55:20,000 --> 00:55:22,000
就是我现在又只能输入英文了

1916
00:55:22,000 --> 00:55:24,000
就是语音输入

1917
00:55:24,000 --> 00:55:24,000
就很奇怪

1918
00:55:24,000 --> 00:55:26,000
之前我刚来的时候

1919
00:55:26,000 --> 00:55:29,000
是有一段时间是用

1920
00:55:29,000 --> 00:55:30,000
就是你说那种情况

1921
00:55:30,000 --> 00:55:31,000
因为系统语言是英文

1922
00:55:31,000 --> 00:55:33,000
然后回复的时候

1923
00:55:33,000 --> 00:55:33,000
说中文

1924
00:55:33,000 --> 00:55:34,000
它既然能听出来是中文

1925
00:55:34,000 --> 00:55:35,000
然后给我出中文的字

1926
00:55:35,000 --> 00:55:38,000
但是自从升那个 1.0.1 之后

1927
00:55:38,000 --> 00:55:39,000
发现又不行了

1928
00:55:39,000 --> 00:55:40,000
这个太奇怪

1929
00:55:40,000 --> 00:55:41,000
我一直都可以

1930
00:55:41,000 --> 00:55:42,000
而且它很人心

1931
00:55:42,000 --> 00:55:44,000
就是我说奥迪

1932
00:55:44,000 --> 00:55:45,000
我说奥迪

1933
00:55:45,000 --> 00:55:49,000
它会帮我转成奥迪

1934
00:55:49,000 --> 00:55:50,000
AODI

1935
00:55:50,000 --> 00:55:52,000
然后这四个拉丁字母

1936
00:55:52,000 --> 00:55:53,000
加在中文里面

1937
00:55:53,000 --> 00:55:55,000
所以我的猜想是这样子

1938
00:55:55,000 --> 00:55:56,000
就是说它为了

1939
00:55:56,000 --> 00:55:59,000
因为手表上的输入比较受限

1940
00:55:59,000 --> 00:56:01,000
它苹果肯定在后台上

1941
00:56:01,000 --> 00:56:02,000
对这个事情做了一个

1942
00:56:02,000 --> 00:56:03,000
什么特殊的处理

1943
00:56:03,000 --> 00:56:05,000
就是后台上放一个人

1944
00:56:05,000 --> 00:56:06,000
在那听起

1945
00:56:06,000 --> 00:56:06,000
是吧

1946
00:56:06,000 --> 00:56:09,000
雇了 100 万个印度人

1947
00:56:09,000 --> 00:56:11,000
这不是那个什么

1948
00:56:11,000 --> 00:56:13,000
那个 Silicon Valley 里面

1949
00:56:13,000 --> 00:56:15,000
那一期黑他们的用的事情吗

1950
00:56:15,000 --> 00:56:17,000
对啊

1951
00:56:17,000 --> 00:56:20,000
就我觉得它可能是用了一个更加

1952
00:56:20,000 --> 00:56:23,000
费劲的方式去处理这个 Siri 的语音输入

1953
00:56:23,000 --> 00:56:25,000
就包括这个多语言识别啊

1954
00:56:25,000 --> 00:56:27,000
还有几个准确度上是有很大的提升的嘛

1955
00:56:27,000 --> 00:56:30,000
相比于那个 iPhone 上面那个 Siri 来讲

1956
00:56:30,000 --> 00:56:30,000
对

1957
00:56:30,000 --> 00:56:33,000
因为感觉这样成本应该是

1958
00:56:33,000 --> 00:56:34,000
服务器成本是蛮高的

1959
00:56:34,000 --> 00:56:39,000
所以其实你看你用的那几个都是所谓的原生的

1960
00:56:39,000 --> 00:56:42,000
你没有用第三方的 APP

1961
00:56:42,000 --> 00:56:44,000
那个体验都不太好吧

1962
00:56:44,000 --> 00:56:47,000
也还可以吧

1963
00:56:47,000 --> 00:56:47,000
我最常

1964
00:56:47,000 --> 00:56:49,000
你有用哪个第三方的体验比较

1965
00:56:49,000 --> 00:56:50,000
还是比较流畅的吗

1966
00:56:50,000 --> 00:56:51,000
WhatsApp

1967
00:56:51,000 --> 00:56:52,000
WhatsApp 还可以

1968
00:56:52,000 --> 00:56:55,000
通讯类的对还行

1969
00:56:55,000 --> 00:56:57,000
然后 Gmail 其实也还可以

1970
00:56:57,000 --> 00:57:00,000
就是 Gmail 的那个

1971
00:57:00,000 --> 00:57:02,000
Gmail 有 Watch 的扩展

1972
00:57:02,000 --> 00:57:04,000
它没有直接扩展

1973
00:57:04,000 --> 00:57:07,000
但是它可以把 Message 送到 Watch 上

1974
00:57:07,000 --> 00:57:09,000
这个还不错

1975
00:57:09,000 --> 00:57:09,000
对

1976
00:57:09,000 --> 00:57:11,000
然后我还用其他

1977
00:57:11,000 --> 00:57:13,000
比如说 Instagram 也还 OK 了

1978
00:57:13,000 --> 00:57:18,000
然后有一个德国的天气网站也还挺好

1979
00:57:18,000 --> 00:57:24,000
然后对反正还比如说那个叫什么

1980
00:57:24,000 --> 00:57:24,000
Clear

1981
00:57:24,000 --> 00:57:27,000
就是那个 To-Do List 的 Clear

1982
00:57:27,000 --> 00:57:27,000
还不错

1983
00:57:27,000 --> 00:57:28,000
Clear

1984
00:57:28,000 --> 00:57:29,000
然后再就 Lufthansa 的

1985
00:57:29,000 --> 00:57:30,000
汉沙航空的也还 OK

1986
00:57:30,000 --> 00:57:34,000
就做的好的第三方 IP 还是有的

1987
00:57:34,000 --> 00:57:36,000
但总体来说

1988
00:57:36,000 --> 00:57:40,000
就还好

1989
00:57:40,000 --> 00:57:43,000
就这不是一块

1990
00:57:43,000 --> 00:57:45,000
这不是一个像 iPad 那样

1991
00:57:45,000 --> 00:57:46,000
就是我在拿到 iPad 的第二天

1992
00:57:46,000 --> 00:57:48,000
我说不可

1993
00:57:48,000 --> 00:57:50,000
我的后半生离不开这个东西了

1994
00:57:50,000 --> 00:57:52,000
Apple Watch 没有给我这样的感觉

1995
00:57:52,000 --> 00:57:53,000
嗯

1996
00:57:53,000 --> 00:57:56,000
就是一个可有可闻的产品吧

1997
00:57:56,000 --> 00:57:58,000
这样说准确吧

1998
00:57:58,000 --> 00:58:00,000
Nice to have 的产品

1999
00:58:00,000 --> 00:58:00,000
对

2000
00:58:00,000 --> 00:58:02,000
就没有也无所谓

2001
00:58:02,000 --> 00:58:04,000
有的当然更好了

2002
00:58:04,000 --> 00:58:04,000
对

2003
00:58:04,000 --> 00:58:06,000
还没有出现所谓的 Killer Feature

2004
00:58:06,000 --> 00:58:08,000
对

2005
00:58:08,000 --> 00:58:10,000
但我觉得 Killer Feature 早晚会出现

2006
00:58:10,000 --> 00:58:14,000
等它那个原生的 SDK 出来之后

2007
00:58:14,000 --> 00:58:15,000
现在是什么情况

2008
00:58:15,000 --> 00:58:17,000
就是说是可以

2009
00:58:17,000 --> 00:58:19,000
开发者可以马上

2010
00:58:19,000 --> 00:58:21,000
你已经可以拿到这个 SDK 来测试了吗

2011
00:58:21,000 --> 00:58:21,000
还是怎么样

2012
00:58:21,000 --> 00:58:25,000
应该是我昨天下了那个

2013
00:58:25,000 --> 00:58:28,000
我昨天重新激活了我的 Apple Developer 账户

2014
00:58:28,000 --> 00:58:30,000
扔了 100 欧元进去

2015
00:58:30,000 --> 00:58:33,000
因为我之前在公司

2016
00:58:33,000 --> 00:58:35,000
就是在我的前公司里面有一个

2017
00:58:35,000 --> 00:58:37,000
那个 Enterprise Program

2018
00:58:37,000 --> 00:58:40,000
然后我就把个人的退了

2019
00:58:40,000 --> 00:58:40,000
OK

2020
00:58:40,000 --> 00:58:42,000
然后离职之后

2021
00:58:42,000 --> 00:58:43,000
反正一直没碰

2022
00:58:43,000 --> 00:58:45,000
就一直也没重新开

2023
00:58:45,000 --> 00:58:46,000
然后直到昨天再重新续

2024
00:58:46,000 --> 00:58:47,000
续上之后

2025
00:58:47,000 --> 00:58:48,000
又把那个

2026
00:58:48,000 --> 00:58:50,000
把新的

2027
00:58:50,000 --> 00:58:52,000
现在有两个版本的

2028
00:58:52,000 --> 00:58:55,000
Xcode Beta

2029
00:58:55,000 --> 00:58:57,000
一个是 Xcode 7.0 的 Beta

2030
00:58:57,000 --> 00:58:59,000
另一个是 Xcode 6.4 的 Beta

2031
00:58:59,000 --> 00:59:01,000
然后 7.0 的 Beta 里面已经包含了

2032
00:59:01,000 --> 00:59:04,000
如果没理解错的话

2033
00:59:04,000 --> 00:59:06,000
应该已经包含了 WatchOS 2.0

2034
00:59:06,000 --> 00:59:08,000
然后对

2035
00:59:08,000 --> 00:59:10,000
愿意的话可以去摆弄摆弄试试

2036
00:59:10,000 --> 00:59:12,000
我反正今天做完节目之后

2037
00:59:12,000 --> 00:59:14,000
应该就会摆弄摆弄试试

2038
00:59:14,000 --> 00:59:15,000
所以所以你体验一下

2039
00:59:15,000 --> 00:59:16,000
到底能做出一个

2040
00:59:16,000 --> 00:59:18,000
折托是什么样一个画来

2041
00:59:18,000 --> 00:59:20,000
然后看看有什么提升

2042
00:59:20,000 --> 00:59:22,000
体验上的提升了

2043
00:59:22,000 --> 00:59:25,000
我觉得就如果能原生在表上跑

2044
00:59:25,000 --> 00:59:26,000
然后那个响应速度

2045
00:59:26,000 --> 00:59:29,000
能到原生那些 App 的层次的话

2046
00:59:29,000 --> 00:59:31,000
我觉得整个体验会好很多

2047
00:59:31,000 --> 00:59:34,000
但现在确实太糟糕了

2048
00:59:34,000 --> 00:59:36,000
就是 Somehow Someway

2049
00:59:36,000 --> 00:59:39,000
我觉得这个 Apple Watch

2050
00:59:39,000 --> 00:59:41,000
其实可以拿来做很多

2051
00:59:41,000 --> 00:59:44,000
不需要那个显示屏的事情

2052
00:59:44,000 --> 00:59:46,000
就是比如说

2053
00:59:46,000 --> 00:59:49,000
就是在中国应该是

2054
00:59:49,000 --> 00:59:52,000
汉朝的时候

2055
00:59:52,000 --> 00:59:55,000
商人们有一种秀礼术

2056
00:59:55,000 --> 00:59:58,000
就是他们看了一个商品

2057
00:59:58,000 --> 01:00:00,000
然后两个人要交易的时候

2058
01:00:00,000 --> 01:00:02,000
他们会把那个很长的袖子

2059
01:00:02,000 --> 01:00:04,000
套在彼此的手上

2060
01:00:04,000 --> 01:00:05,000
然后按对方的手

2061
01:00:05,000 --> 01:00:06,000
然后按对方的手

2062
01:00:06,000 --> 01:00:07,000
就可以知道对方

2063
01:00:07,000 --> 01:00:09,000
就是要出什么价

2064
01:00:09,000 --> 01:00:09,000
对

2065
01:00:09,000 --> 01:00:11,000
你按对方手指的某一个部分

2066
01:00:11,000 --> 01:00:13,000
对方就明白了

2067
01:00:13,000 --> 01:00:14,000
你要出多少钱

2068
01:00:14,000 --> 01:00:15,000
然后对方可以按回来还价

2069
01:00:15,000 --> 01:00:17,000
我觉得 Apple Watch

2070
01:00:17,000 --> 01:00:18,000
可以做对似的事情

2071
01:00:18,000 --> 01:00:19,000
就比如说

2072
01:00:19,000 --> 01:00:21,000
我把手背到后面

2073
01:00:21,000 --> 01:00:23,000
然后以某种特定的频率

2074
01:00:23,000 --> 01:00:24,000
晃这块表

2075
01:00:24,000 --> 01:00:25,000
然后这块表

2076
01:00:25,000 --> 01:00:26,000
就可以在别人手腕上

2077
01:00:26,000 --> 01:00:28,000
产生某种特定的信号

2078
01:00:28,000 --> 01:00:29,000
对

2079
01:00:29,000 --> 01:00:31,000
这样就可以

2080
01:00:31,000 --> 01:00:32,000
不用啊

2081
01:00:32,000 --> 01:00:33,000
你现在不是就直接

2082
01:00:33,000 --> 01:00:35,000
那个在表盘上画那个小花吗

2083
01:00:35,000 --> 01:00:35,000
对

2084
01:00:35,000 --> 01:00:38,000
但此时旁边看你表盘的人

2085
01:00:38,000 --> 01:00:39,000
是看得到的呀

2086
01:00:39,000 --> 01:00:40,000
啊

2087
01:00:40,000 --> 01:00:42,000
你要有一个秘密的手持

2088
01:00:42,000 --> 01:00:42,000
对

2089
01:00:42,000 --> 01:00:46,000
你要有一个别人察觉不到的方式

2090
01:00:46,000 --> 01:00:47,000
来彼此通寻

2091
01:00:47,000 --> 01:00:50,000
所以一个比较宅

2092
01:00:50,000 --> 01:00:52,000
比较 geek 的方式是什么

2093
01:00:52,000 --> 01:00:52,000
经常那些

2094
01:00:52,000 --> 01:00:53,000
你看到那个

2095
01:00:53,000 --> 01:00:54,000
比如说这个

2096
01:00:54,000 --> 01:00:56,000
就是欧美的那个

2097
01:00:56,000 --> 01:00:58,000
年轻人或者说什么

2098
01:00:58,000 --> 01:00:59,000
兄弟会碰头的时候

2099
01:00:59,000 --> 01:01:01,000
会有一堆手特别的手势吗

2100
01:01:01,000 --> 01:01:01,000
哦

2101
01:01:01,000 --> 01:01:02,000
对吧

2102
01:01:02,000 --> 01:01:04,000
我们要带着

2103
01:01:04,000 --> 01:01:06,000
以后要带着表来玩这件事情吗

2104
01:01:06,000 --> 01:01:08,000
把那个整个要记录下来

2105
01:01:08,000 --> 01:01:09,000
要计算一下

2106
01:01:09,000 --> 01:01:11,000
你这个是否某一个动作做标准了

2107
01:01:11,000 --> 01:01:12,000
不标准

2108
01:01:12,000 --> 01:01:13,000
不给 cancel

2109
01:01:13,000 --> 01:01:14,000
或者

2110
01:01:14,000 --> 01:01:16,000
或者最简单的就是

2111
01:01:16,000 --> 01:01:18,000
直接做一个那个

2112
01:01:18,000 --> 01:01:20,000
莫尔斯

2113
01:01:20,000 --> 01:01:21,000
莫尔斯马

2114
01:01:21,000 --> 01:01:22,000
然后

2115
01:01:22,000 --> 01:01:22,000
然后

2116
01:01:22,000 --> 01:01:23,000
对

2117
01:01:23,000 --> 01:01:23,000
你敲表盘

2118
01:01:23,000 --> 01:01:25,000
然后对方就可以收到那个

2119
01:01:25,000 --> 01:01:27,000
你敲的震动

2120
01:01:27,000 --> 01:01:27,000
然后通过那个什么

2121
01:01:27,000 --> 01:01:28,000
Taptic Engine

2122
01:01:28,000 --> 01:01:29,000
你直接在那里

2123
01:01:29,000 --> 01:01:30,000
显示

2124
01:01:30,000 --> 01:01:31,000
你直接打到手上是吧

2125
01:01:31,000 --> 01:01:31,000
对

2126
01:01:31,000 --> 01:01:34,000
然后通过人工的方式去读那个 code

2127
01:01:34,000 --> 01:01:34,000
对

2128
01:01:34,000 --> 01:01:35,000
然后你

2129
01:01:35,000 --> 01:01:37,000
然后提供一个菜鸟模式

2130
01:01:37,000 --> 01:01:39,000
就是对方发

2131
01:01:39,000 --> 01:01:40,000
莫尔斯马

2132
01:01:40,000 --> 01:01:41,000
然后你看表盘

2133
01:01:41,000 --> 01:01:43,000
这个表盘会把对方的莫尔斯马

2134
01:01:43,000 --> 01:01:44,000
翻译出来

2135
01:01:44,000 --> 01:01:47,000
要不你这个第一个 watch app

2136
01:01:47,000 --> 01:01:48,000
就做这个吧

2137
01:01:48,000 --> 01:01:49,000
我觉得挺有时尚的

2138
01:01:49,000 --> 01:01:49,000
可以

2139
01:01:49,000 --> 01:01:50,000
可以试试做

2140
01:01:50,000 --> 01:01:52,000
感觉实现起来也比较简单

2141
01:01:52,000 --> 01:01:53,000
对

2142
01:01:53,000 --> 01:01:55,000
哎呀

2143
01:01:55,000 --> 01:01:56,000
对

2144
01:01:56,000 --> 01:01:57,000
我前两天看那个

2145
01:01:57,000 --> 01:01:58,000
这当我们要卡掉吗

2146
01:01:58,000 --> 01:02:00,000
因为这个属于那个什么

2147
01:02:00,000 --> 01:02:02,000
product 的 idea

2148
01:02:02,000 --> 01:02:05,000
我始终觉得 idea is cheap

2149
01:02:05,000 --> 01:02:06,000
show me the code

2150
01:02:06,000 --> 01:02:08,000
所以各位听众里面

2151
01:02:08,000 --> 01:02:10,000
如果有哪个人做出来一个欢迎

2152
01:02:10,000 --> 01:02:10,000
你把他开源

2153
01:02:10,000 --> 01:02:12,000
然后大家可以

2154
01:02:12,000 --> 01:02:14,000
大家可以下来

2155
01:02:14,000 --> 01:02:15,000
下来编译

2156
01:02:15,000 --> 01:02:15,000
对

2157
01:02:15,000 --> 01:02:16,000
有一个新闻就是

2158
01:02:16,000 --> 01:02:18,000
有一个新闻就是

2159
01:02:18,000 --> 01:02:19,000
现在好像 apple 可以

2160
01:02:19,000 --> 01:02:21,000
不用注册 developer

2161
01:02:21,000 --> 01:02:25,000
就可以把程序跑在实体机器上了

2162
01:02:25,000 --> 01:02:27,000
对

2163
01:02:27,000 --> 01:02:29,000
就是如果各位听众不知道的话

2164
01:02:29,000 --> 01:02:32,000
就是在以前你要为 iOS 开发程序

2165
01:02:32,000 --> 01:02:34,000
理论上是不需要交钱的

2166
01:02:34,000 --> 01:02:36,000
你只需要下载 scode

2167
01:02:36,000 --> 01:02:37,000
然后写一个程序

2168
01:02:37,000 --> 01:02:38,000
然后在模拟器里面跑

2169
01:02:38,000 --> 01:02:41,000
但是如果你想要把这个 app

2170
01:02:41,000 --> 01:02:42,000
在你的实体机器上跑的话

2171
01:02:42,000 --> 01:02:43,000
你必须先去注册

2172
01:02:43,000 --> 01:02:46,000
但是目前看来

2173
01:02:46,000 --> 01:02:48,000
就是如果理解的这个新闻没错的话

2174
01:02:48,000 --> 01:02:52,000
将来你不需要一个开发者账号

2175
01:02:52,000 --> 01:02:53,000
也可以把你的 app

2176
01:02:53,000 --> 01:02:55,000
直接跑在你的实体设计上

2177
01:02:55,000 --> 01:02:57,000
但只能是保你自己那台机器

2178
01:02:57,000 --> 01:02:59,000
应该是只能保你自己那台机器

2179
01:02:59,000 --> 01:03:00,000
那也完全够了

2180
01:03:00,000 --> 01:03:01,000
自己玩票用

2181
01:03:01,000 --> 01:03:01,000
对

2182
01:03:01,000 --> 01:03:04,000
这就是那种早期的 homebrew 的方式

2183
01:03:04,000 --> 01:03:05,000
又可以流行起来

2184
01:03:05,000 --> 01:03:08,000
就是你把原谈法发到 github 上

2185
01:03:08,000 --> 01:03:09,000
然后别人当下来

2186
01:03:09,000 --> 01:03:10,000
然后编译一下

2187
01:03:10,000 --> 01:03:12,000
就可以跑在自己的机器上了

2188
01:03:12,000 --> 01:03:13,000
对

2189
01:03:13,000 --> 01:03:14,000
这可能是很多这种

2190
01:03:14,000 --> 01:03:15,000
就是玩票

2191
01:03:15,000 --> 01:03:16,000
他也不打算

2192
01:03:16,000 --> 01:03:17,000
真的是放一个东西

2193
01:03:17,000 --> 01:03:20,000
上架到 appstore 里面那种票友吧

2194
01:03:20,000 --> 01:03:20,000
嗯

2195
01:03:20,000 --> 01:03:23,000
编程票友的抱怨

2196
01:03:23,000 --> 01:03:25,000
就是说我干嘛要花个每年 100 刀

2197
01:03:25,000 --> 01:03:27,000
去买这个我一年用两次的东西

2198
01:03:27,000 --> 01:03:27,000
对吧

2199
01:03:27,000 --> 01:03:28,000
对

2200
01:03:28,000 --> 01:03:29,000
对

2201
01:03:29,000 --> 01:03:30,000
这个安卓就没有这个问题

2202
01:03:30,000 --> 01:03:31,000
插上线

2203
01:03:31,000 --> 01:03:32,000
什么都可以装了

2204
01:03:32,000 --> 01:03:35,000
对

2205
01:03:35,000 --> 01:03:36,000
有这个我觉得还是挺好的

2206
01:03:36,000 --> 01:03:37,000
起码我会有更多东西

2207
01:03:37,000 --> 01:03:40,000
那我也学一下这个 swift

2208
01:03:40,000 --> 01:03:42,000
来写一个东西来玩一下

2209
01:03:42,000 --> 01:03:42,000
对

2210
01:03:42,000 --> 01:03:45,000
但是相反到目前为止

2211
01:03:45,000 --> 01:03:46,000
我们对这个

2212
01:03:46,000 --> 01:03:47,000
对这个表的

2213
01:03:47,000 --> 01:03:48,000
那个物理的

2214
01:03:48,000 --> 01:03:50,000
就是 spec

2215
01:03:50,000 --> 01:03:50,000
叫什么

2216
01:03:50,000 --> 01:03:53,000
硬件参数是还不太清楚的是吧

2217
01:03:53,000 --> 01:03:53,000
嗯

2218
01:03:53,000 --> 01:03:55,000
对吧

2219
01:03:55,000 --> 01:03:56,000
那个 cheapwack

2220
01:03:56,000 --> 01:03:57,000
好像还没有把它

2221
01:03:57,000 --> 01:03:58,000
cheapwork

2222
01:03:58,000 --> 01:03:59,000
还没有把它拆开

2223
01:03:59,000 --> 01:03:59,000
然后

2224
01:03:59,000 --> 01:04:01,000
cheapwack

2225
01:04:01,000 --> 01:04:02,000
sorry

2226
01:04:02,000 --> 01:04:02,000
德语

2227
01:04:02,000 --> 01:04:02,000
德语

2228
01:04:02,000 --> 01:04:04,000
德语翻译出来

2229
01:04:04,000 --> 01:04:05,000
嗯

2230
01:04:05,000 --> 01:04:09,000
把它放在 x 光机下面照一下

2231
01:04:09,000 --> 01:04:11,000
然后告诉我们上面都是什么

2232
01:04:11,000 --> 01:04:13,000
嗯

2233
01:04:13,000 --> 01:04:15,000
然后包括内存

2234
01:04:15,000 --> 01:04:16,000
它的内存是确定的

2235
01:04:16,000 --> 01:04:17,000
是 512 兆

2236
01:04:17,000 --> 01:04:17,000
512 兆

2237
01:04:17,000 --> 01:04:22,000
但是多少能给应用用多少是被那个系统占掉了

2238
01:04:22,000 --> 01:04:22,000
现在也不知道

2239
01:04:22,000 --> 01:04:23,000
对

2240
01:04:23,000 --> 01:04:25,000
然后刚才我们讨论到的是 A 4 的芯片呢

2241
01:04:25,000 --> 01:04:26,000
还是 A 5 的芯片

2242
01:04:26,000 --> 01:04:30,000
然后到做那么小到底是有多就是功耗上会有多大限制

2243
01:04:30,000 --> 01:04:31,000
这些都不太清楚嘛

2244
01:04:31,000 --> 01:04:32,000
嗯

2245
01:04:32,000 --> 01:04:38,000
所以就靠你去研究一下这个 Xcode 7.0 的版本之后

2246
01:04:38,000 --> 01:04:40,000
能不能做出一个好玩的东西来

2247
01:04:40,000 --> 01:04:41,000
好

2248
01:04:41,000 --> 01:04:43,000
快把那个莫尔斯码做出来

2249
01:04:43,000 --> 01:04:44,000
我们先给我装上

2250
01:04:44,000 --> 01:04:45,000
我们先试试

2251
01:04:45,000 --> 01:04:48,000
release date

2252
01:04:48,000 --> 01:04:48,000
等等

2253
01:04:48,000 --> 01:04:50,000
我还得先得学莫尔斯 code 的

2254
01:04:50,000 --> 01:04:51,000
这个怎么办

2255
01:04:51,000 --> 01:04:53,000
这个学下挺快

2256
01:04:53,000 --> 01:04:56,000
至少你是会两个的

2257
01:04:56,000 --> 01:04:56,000
S 和 O

2258
01:04:56,000 --> 01:05:01,000
S 和 S 就是三短

2259
01:05:01,000 --> 01:05:03,000
然后三长再三短

2260
01:05:03,000 --> 01:05:05,000
三短三长三短

2261
01:05:05,000 --> 01:05:07,000
为什么不是三长两短呢

2262
01:05:07,000 --> 01:05:09,000
因为 S 是三长

2263
01:05:09,000 --> 01:05:11,000
S 是三短

2264
01:05:11,000 --> 01:05:12,000
O 是三长

2265
01:05:12,000 --> 01:05:13,000
好吧

2266
01:05:13,000 --> 01:05:16,000
所以现在其实我们对这个

2267
01:05:16,000 --> 01:05:19,000
原生的 WatchOS 2 的 SDK

2268
01:05:19,000 --> 01:05:20,000
还没有太多可以讲

2269
01:05:20,000 --> 01:05:22,000
因为现在只是公布出来

2270
01:05:22,000 --> 01:05:24,000
还没有只是真的去试过

2271
01:05:24,000 --> 01:05:27,000
可能以后等我们的吴涛同志去试了之后

2272
01:05:27,000 --> 01:05:30,000
我们在今后的节目里面再来提一下

2273
01:05:30,000 --> 01:05:33,000
这次 WTC 上还发布了一个

2274
01:05:33,000 --> 01:05:35,000
我觉得挺开心的一个消息

2275
01:05:35,000 --> 01:05:36,000
就是 Swift 2

2276
01:05:36,000 --> 01:05:38,000
并且它开玩了

2277
01:05:38,000 --> 01:05:41,000
这个是当时我也是在看电视的时候

2278
01:05:41,000 --> 01:05:44,000
我和我女朋友一般在做饭

2279
01:05:44,000 --> 01:05:46,000
然后一般在看 WTC

2280
01:05:46,000 --> 01:05:47,000
然后我看到说

2281
01:05:47,000 --> 01:05:49,000
多么温馨的一个场面

2282
01:05:49,000 --> 01:05:51,000
忽然双手举高说

2283
01:05:51,000 --> 01:05:53,000
Swift 2 开玩了

2284
01:05:53,000 --> 01:05:54,000
然后女朋友疑惑的问

2285
01:05:54,000 --> 01:05:56,000
那是什么意思呢

2286
01:05:56,000 --> 01:05:59,000
然后又进入了教学模式

2287
01:05:59,000 --> 01:06:02,000
多么幸福的一个场景

2288
01:06:02,000 --> 01:06:06,000
在听的单身狗们赶上到生生的恶意没

2289
01:06:06,000 --> 01:06:10,000
我没有这个意思

2290
01:06:10,000 --> 01:06:16,000
但他开玩是说发布了这个

2291
01:06:16,000 --> 01:06:21,000
iOS OS X 和 Linux 的版本

2292
01:06:21,000 --> 01:06:22,000
对

2293
01:06:22,000 --> 01:06:23,000
决定还挺

2294
01:06:23,000 --> 01:06:25,000
当时我听到 Linux 也是心一惊

2295
01:06:25,000 --> 01:06:26,000
心想说

2296
01:06:26,000 --> 01:06:34,000
我靠这是多久没有在 WTC 上听到 Linux 的名字了

2297
01:06:34,000 --> 01:06:36,000
而且不敢相信的是

2298
01:06:36,000 --> 01:06:40,000
稍后又听到了一次 Android

2299
01:06:40,000 --> 01:06:43,000
而且是一种正面的方式听到 Android

2300
01:06:43,000 --> 01:06:45,000
对

2301
01:06:45,000 --> 01:06:48,000
就是他在宣布 Apple Music

2302
01:06:48,000 --> 01:06:50,000
将会在 Android 上推出的时候

2303
01:06:50,000 --> 01:06:53,000
我心里还觉得这是发生了什么

2304
01:06:53,000 --> 01:06:55,000
而且我跟你说

2305
01:06:55,000 --> 01:06:58,000
他们还出了一个 Android 的 App

2306
01:06:58,000 --> 01:06:59,000
不是音乐那个

2307
01:06:59,000 --> 01:07:03,000
叫做 Android Migration

2308
01:07:03,000 --> 01:07:05,000
可以从 Android 上

2309
01:07:05,000 --> 01:07:07,000
就帮助你从 Android 手机切换到 iPhone 了

2310
01:07:07,000 --> 01:07:08,000
简单来讲

2311
01:07:08,000 --> 01:07:09,000
OK

2312
01:07:09,000 --> 01:07:11,000
因为 Android 是可以拿到很多系统的资料的

2313
01:07:11,000 --> 01:07:12,000
对

2314
01:07:12,000 --> 01:07:14,000
他可以做了这么一个一键导入

2315
01:07:14,000 --> 01:07:15,000
切换到 Apple ID 里面

2316
01:07:15,000 --> 01:07:16,000
然后再给你

2317
01:07:16,000 --> 01:07:19,000
就是直接可以帮你设置好很多东西了

2318
01:07:19,000 --> 01:07:20,000
这个还是蛮横的

2319
01:07:20,000 --> 01:07:23,000
Mac 上面也有

2320
01:07:23,000 --> 01:07:24,000
也曾经有过这个什么

2321
01:07:24,000 --> 01:07:25,000
没错

2322
01:07:25,000 --> 01:07:25,000
可以从 Windows

2323
01:07:25,000 --> 01:07:27,000
Migrate

2324
01:07:27,000 --> 01:07:28,000
他就把

2325
01:07:28,000 --> 01:07:30,000
这个就是 iOS 版的那个东西了

2326
01:07:30,000 --> 01:07:31,000
OK

2327
01:07:31,000 --> 01:07:33,000
叫做 Migrate Migration Assistant

2328
01:07:33,000 --> 01:07:34,000
应该是

2329
01:07:34,000 --> 01:07:34,000
OK

2330
01:07:34,000 --> 01:07:36,000
我带我确认一下

2331
01:07:36,000 --> 01:07:36,000
是不是叫这个

2332
01:07:36,000 --> 01:07:37,000
对

2333
01:07:37,000 --> 01:07:38,000
Migration Assistant

2334
01:07:38,000 --> 01:07:40,000
就是这点还是蛮横的

2335
01:07:40,000 --> 01:07:41,000
因为你知道这个东西是

2336
01:07:41,000 --> 01:07:42,000
是单向街吗

2337
01:07:42,000 --> 01:07:43,000
One way straight

2338
01:07:43,000 --> 01:07:43,000
对

2339
01:07:43,000 --> 01:07:44,000
那肯定有

2340
01:07:44,000 --> 01:07:47,000
因为 iOS 里面没有

2341
01:07:47,000 --> 01:07:49,000
就除了苹果之外

2342
01:07:49,000 --> 01:07:49,000
没有

2343
01:07:49,000 --> 01:07:50,000
就哪怕苹果吧

2344
01:07:50,000 --> 01:07:51,000
应该是不太可能拿得到

2345
01:07:51,000 --> 01:07:53,000
那些应用里面的

2346
01:07:53,000 --> 01:07:55,000
就是有这个沙合模型的限制

2347
01:07:55,000 --> 01:07:56,000
而且他把系统全线锁得很死

2348
01:07:56,000 --> 01:07:57,000
你不可能做

2349
01:07:57,000 --> 01:08:00,000
就第三个方式没有办法做这么一个应用

2350
01:08:00,000 --> 01:08:02,000
装到一个 iOS 里面

2351
01:08:02,000 --> 01:08:03,000
然后再把数据导到

2352
01:08:03,000 --> 01:08:05,000
那个另外的地方去

2353
01:08:05,000 --> 01:08:08,000
但可能拿那个通讯录啊

2354
01:08:08,000 --> 01:08:09,000
这种比较长

2355
01:08:09,000 --> 01:08:10,000
还有照片啊

2356
01:08:10,000 --> 01:08:10,000
这种常见的还可以

2357
01:08:10,000 --> 01:08:12,000
但其他的就不行了

2358
01:08:12,000 --> 01:08:13,000
不太清楚

2359
01:08:13,000 --> 01:08:14,000
那个 Android Migration

2360
01:08:14,000 --> 01:08:15,000
这个 app 到底做多少的事

2361
01:08:15,000 --> 01:08:17,000
总之苹果的

2362
01:08:17,000 --> 01:08:18,000
反正这一套东西就是

2363
01:08:18,000 --> 01:08:21,000
一堆生满道次的丛林

2364
01:08:21,000 --> 01:08:22,000
进去就出来

2365
01:08:22,000 --> 01:08:23,000
没错

2366
01:08:23,000 --> 01:08:25,000
那再说回那个 Swift 开源的事情

2367
01:08:25,000 --> 01:08:27,000
就你觉得他们为什么会选

2368
01:08:27,000 --> 01:08:29,000
会做这件事情

2369
01:08:29,000 --> 01:08:30,000
他们的动机是什么

2370
01:08:30,000 --> 01:08:35,000
我觉得他们还是想要

2371
01:08:35,000 --> 01:08:37,000
把 Swift 这个

2372
01:08:37,000 --> 01:08:40,000
目前看起来非常优秀的

2373
01:08:40,000 --> 01:08:43,000
语言特性尽可能的拓展开来

2374
01:08:43,000 --> 01:08:46,000
然后借此来

2375
01:08:46,000 --> 01:08:50,000
一方面是能让语言本身能够

2376
01:08:50,000 --> 01:08:52,000
心境火船下去

2377
01:08:52,000 --> 01:08:54,000
另外一方面也是希望能够

2378
01:08:55,000 --> 01:08:57,000
其他平台上的人尝一尝

2379
01:08:57,000 --> 01:09:00,000
给苹果编程是一种

2380
01:09:00,000 --> 01:09:01,000
什么样的体验

2381
01:09:01,000 --> 01:09:04,000
没错

2382
01:09:04,000 --> 01:09:06,000
因为你以前在

2383
01:09:06,000 --> 01:09:07,000
除非你是一个非常非常非常

2384
01:09:07,000 --> 01:09:08,000
非常有受虐形象的人

2385
01:09:08,000 --> 01:09:10,000
你是一般不会在

2386
01:09:10,000 --> 01:09:12,000
其他操作系统上

2387
01:09:12,000 --> 01:09:15,000
试图去搞 Objective-C

2388
01:09:15,000 --> 01:09:16,000
这套东西的

2389
01:09:16,000 --> 01:09:18,000
就是你可以去采用

2390
01:09:18,000 --> 01:09:19,000
那个玩意叫什么 Open-Step

2391
01:09:19,000 --> 01:09:21,000
这套东西来

2392
01:09:21,000 --> 01:09:24,000
在其他平台上编译 Objective-C

2393
01:09:24,000 --> 01:09:25,000
是可行的

2394
01:09:25,000 --> 01:09:27,000
但是从来没有这样做

2395
01:09:27,000 --> 01:09:27,000
或者说

2396
01:09:27,000 --> 01:09:31,000
这样做的人最后都把头发抓光

2397
01:09:31,000 --> 01:09:32,000
然后出家了

2398
01:09:32,000 --> 01:09:36,000
而 SwiftR 如果开源

2399
01:09:36,000 --> 01:09:37,000
并且跨平台的话

2400
01:09:37,000 --> 01:09:39,000
那你也许将来可以在

2401
01:09:39,000 --> 01:09:40,000
不知不觉的在

2402
01:09:40,000 --> 01:09:43,000
Links 上面爱上这方面语言

2403
01:09:43,000 --> 01:09:45,000
然后你发现你的这个知识

2404
01:09:45,000 --> 01:09:48,000
可以迁移到给苹果开发系统

2405
01:09:48,000 --> 01:09:50,000
而给苹果开发软件

2406
01:09:50,000 --> 01:09:52,000
那也许你就会

2407
01:09:52,000 --> 01:09:53,000
随手去做一个

2408
01:09:53,000 --> 01:09:55,000
也许这是苹果的考量值

2409
01:09:55,000 --> 01:09:57,000
我觉得可能最

2410
01:09:57,000 --> 01:10:00,000
眼下最务实的一个事情

2411
01:10:00,000 --> 01:10:00,000
就是说

2412
01:10:00,000 --> 01:10:02,000
很多这个 iOS 开发者

2413
01:10:02,000 --> 01:10:04,000
他因为你知道 iOS 的

2414
01:10:04,000 --> 01:10:05,000
现在不是有个风潮吗

2415
01:10:05,000 --> 01:10:07,000
就是说我们做一个新的产品

2416
01:10:07,000 --> 01:10:07,000
或者服务的时候

2417
01:10:07,000 --> 01:10:09,000
连网站那个都省了

2418
01:10:09,000 --> 01:10:11,000
直接就做一个 API 的后台

2419
01:10:11,000 --> 01:10:13,000
再加一个 iOS 客户端

2420
01:10:13,000 --> 01:10:14,000
就搞定了对吧

2421
01:10:14,000 --> 01:10:17,000
但是这个服务端那边

2422
01:10:17,000 --> 01:10:18,000
一般不可能用

2423
01:10:18,000 --> 01:10:19,000
刚才讲嘛

2424
01:10:19,000 --> 01:10:21,000
不可能用苹果的东西来写之前

2425
01:10:21,000 --> 01:10:21,000
对

2426
01:10:21,000 --> 01:10:22,000
非常少

2427
01:10:22,000 --> 01:10:25,000
用 objectc 写后台

2428
01:10:25,000 --> 01:10:27,000
已经是 20 年前的事情了

2429
01:10:27,000 --> 01:10:28,000
并且

2430
01:10:28,000 --> 01:10:30,000
对

2431
01:10:30,000 --> 01:10:31,000
就连

2432
01:10:31,000 --> 01:10:32,000
应该我这是连苹果

2433
01:10:32,000 --> 01:10:33,000
自己那个叫什么

2434
01:10:33,000 --> 01:10:34,000
web 什么来的

2435
01:10:34,000 --> 01:10:36,000
weblogic

2436
01:10:36,000 --> 01:10:37,000
web

2437
01:10:37,000 --> 01:10:40,000
他有一个叫什么

2438
01:10:40,000 --> 01:10:43,000
webobjects

2439
01:10:43,000 --> 01:10:44,000
对

2440
01:10:44,000 --> 01:10:45,000
webobject

2441
01:10:45,000 --> 01:10:46,000
webobject

2442
01:10:46,000 --> 01:10:47,000
后来转成

2443
01:10:47,000 --> 01:10:49,000
java 了

2444
01:10:49,000 --> 01:10:49,000
后来转成 java

2445
01:10:49,000 --> 01:10:51,000
没错

2446
01:10:51,000 --> 01:10:51,000
OK

2447
01:10:51,000 --> 01:10:53,000
这个我很确定

2448
01:10:53,000 --> 01:10:54,000
就是苹果曾经

2449
01:10:54,000 --> 01:10:55,000
他自己是有一套

2450
01:10:55,000 --> 01:10:57,000
当然那个是 web 1.0 时代

2451
01:10:57,000 --> 01:10:58,000
对

2452
01:10:58,000 --> 01:11:00,000
非常非常古老的时代

2453
01:11:00,000 --> 01:11:00,000
因为

2454
01:11:00,000 --> 01:11:02,000
最初发布的时候

2455
01:11:02,000 --> 01:11:02,000
是 19 年前

2456
01:11:02,000 --> 01:11:03,000
96 年的时候

2457
01:11:03,000 --> 01:11:04,000
然后

2458
01:11:04,000 --> 01:11:06,000
他最开始的时候

2459
01:11:06,000 --> 01:11:07,000
是 objectc 写的

2460
01:11:07,000 --> 01:11:09,000
后来是都因为

2461
01:11:09,000 --> 01:11:10,000
面对现实

2462
01:11:10,000 --> 01:11:12,000
改成了 java 来实现

2463
01:11:12,000 --> 01:11:15,000
这就是还蛮坑爹的

2464
01:11:15,000 --> 01:11:16,000
你要学两个语言

2465
01:11:16,000 --> 01:11:18,000
两种 run time

2466
01:11:18,000 --> 01:11:19,000
然后各种不良的区别

2467
01:11:19,000 --> 01:11:20,000
api 都完全不一样

2468
01:11:20,000 --> 01:11:22,000
然后有了这个 swift 2

2469
01:11:22,000 --> 01:11:23,000
就 swift

2470
01:11:23,000 --> 01:11:23,000
他如果开源

2471
01:11:23,000 --> 01:11:24,000
有这么时间之后

2472
01:11:24,000 --> 01:11:25,000
你可以做到这么一件事

2473
01:11:25,000 --> 01:11:26,000
就是

2474
01:11:26,000 --> 01:11:28,000
那个客户端的开发者

2475
01:11:28,000 --> 01:11:29,000
和服务端

2476
01:11:29,000 --> 01:11:30,000
api 的开发者

2477
01:11:30,000 --> 01:11:32,000
可以是同一班人

2478
01:11:32,000 --> 01:11:33,000
或者说

2479
01:11:33,000 --> 01:11:35,000
就不用再学两套语言了

2480
01:11:35,000 --> 01:11:36,000
就整个都是一样的

2481
01:11:36,000 --> 01:11:37,000
唯一现在可能

2482
01:11:37,000 --> 01:11:38,000
比较存疑的

2483
01:11:38,000 --> 01:11:40,000
就是这个标准库

2484
01:11:40,000 --> 01:11:41,000
和第三方库的问题

2485
01:11:41,000 --> 01:11:42,000
因为刚刚出来

2486
01:11:42,000 --> 01:11:42,000
肯定是没有的

2487
01:11:42,000 --> 01:11:43,000
因为他

2488
01:11:43,000 --> 01:11:44,000
那些比较好的

2489
01:11:44,000 --> 01:11:45,000
现成的

2490
01:11:45,000 --> 01:11:46,000
就是因为

2491
01:11:46,000 --> 01:11:47,000
为什么说

2492
01:11:47,000 --> 01:11:48,000
这个 uptal C

2493
01:11:48,000 --> 01:11:50,000
做客户端开发

2494
01:11:50,000 --> 01:11:51,000
比较好用

2495
01:11:51,000 --> 01:11:51,000
或者说 swift

2496
01:11:51,000 --> 01:11:53,000
做客户端开发

2497
01:11:53,000 --> 01:11:54,000
开发比较好用

2498
01:11:54,000 --> 01:11:54,000
是因为他有

2499
01:11:54,000 --> 01:11:56,000
coco 嘛

2500
01:11:56,000 --> 01:11:57,000
也是叫 coco 嘛

2501
01:11:57,000 --> 01:11:58,000
but UIKit

2502
01:11:58,000 --> 01:11:59,000
这一套东西

2503
01:11:59,000 --> 01:12:00,000
coco 也对

2504
01:12:00,000 --> 01:12:01,000
因为在 Mac 上面

2505
01:12:01,000 --> 01:12:03,000
对

2506
01:12:03,000 --> 01:12:05,000
就 Mac 和 iOS 上面

2507
01:12:05,000 --> 01:12:06,000
都是同一套

2508
01:12:06,000 --> 01:12:07,000
一个线线版

2509
01:12:07,000 --> 01:12:08,000
差不多这么理解

2510
01:12:08,000 --> 01:12:11,000
但是他现在

2511
01:12:11,000 --> 01:12:12,000
如果开源到

2512
01:12:12,000 --> 01:12:13,000
Linux 上面的计划

2513
01:12:13,000 --> 01:12:14,000
其实我不清楚

2514
01:12:14,000 --> 01:12:15,000
他只有语言

2515
01:12:15,000 --> 01:12:16,000
还有编译器开源

2516
01:12:16,000 --> 01:12:18,000
还是说他会把这套

2517
01:12:18,000 --> 01:12:19,000
比较完善的

2518
01:12:19,000 --> 01:12:20,000
这个标准库

2519
01:12:20,000 --> 01:12:21,000
也拿过去用

2520
01:12:21,000 --> 01:12:22,000
我觉得可能不太显示

2521
01:12:22,000 --> 01:12:22,000
对

2522
01:12:22,000 --> 01:12:23,000
应该是不是

2523
01:12:23,000 --> 01:12:25,000
我希望

2524
01:12:25,000 --> 01:12:27,000
我觉得苹果的希望

2525
01:12:27,000 --> 01:12:28,000
应该是

2526
01:12:28,000 --> 01:12:30,000
能够让第三方开发者

2527
01:12:30,000 --> 01:12:32,000
自己生长出一套

2528
01:12:32,000 --> 01:12:33,000
就开发社区

2529
01:12:33,000 --> 01:12:34,000
来做这个事

2530
01:12:34,000 --> 01:12:36,000
Swift on rails

2531
01:12:36,000 --> 01:12:42,000
Swift on power cables

2532
01:12:42,000 --> 01:12:43,000
就是一群燕子

2533
01:12:43,000 --> 01:12:45,000
站在这个电线上

2534
01:12:45,000 --> 01:12:47,000
OK

2535
01:12:47,000 --> 01:12:48,000
这个我们的

2536
01:12:48,000 --> 01:12:49,000
这个连项目名字都想好了

2537
01:12:49,000 --> 01:12:49,000
开始干嘛

2538
01:12:49,000 --> 01:12:49,000
对

2539
01:12:49,000 --> 01:12:55,000
所以其实这个

2540
01:12:55,000 --> 01:12:56,000
我觉得好处还是很显而易见的

2541
01:12:56,000 --> 01:12:57,000
就是可以看

2542
01:12:57,000 --> 01:12:58,000
实现刚才我说的那一点

2543
01:12:58,000 --> 01:13:00,000
然后其实从一个

2544
01:13:00,000 --> 01:13:01,000
就是这个 mind share

2545
01:13:01,000 --> 01:13:04,000
这个脑力的争夺战来讲

2546
01:13:04,000 --> 01:13:07,000
其实我觉得现在定位最好的

2547
01:13:07,000 --> 01:13:09,000
应该是 Android

2548
01:13:09,000 --> 01:13:11,000
因为 Java 很多人都会

2549
01:13:11,000 --> 01:13:13,000
Java 可以写客户端

2550
01:13:13,000 --> 01:13:15,000
可以写嵌入室

2551
01:13:15,000 --> 01:13:16,000
可以写服务端

2552
01:13:16,000 --> 01:13:17,000
可以写桌面应用

2553
01:13:17,000 --> 01:13:19,000
但是桌面应用不太适合

2554
01:13:19,000 --> 01:13:20,000
但是总体来说

2555
01:13:20,000 --> 01:13:23,000
还是一个适用性非常广的语言

2556
01:13:23,000 --> 01:13:25,000
但有意思的是 Google 正在

2557
01:13:25,000 --> 01:13:27,000
有意无意的把 Java ditching

2558
01:13:27,000 --> 01:13:28,000
你不觉得吧

2559
01:13:28,000 --> 01:13:29,000
就是首先

2560
01:13:29,000 --> 01:13:30,000
Server side

2561
01:13:30,000 --> 01:13:31,000
肯定要用 Go language 写

2562
01:13:31,000 --> 01:13:34,000
这件事情已经成立了

2563
01:13:34,000 --> 01:13:35,000
我觉得还没有吧

2564
01:13:35,000 --> 01:13:37,000
它正在试图找这个框架前进

2565
01:13:37,000 --> 01:13:37,000
不是吗

2566
01:13:37,000 --> 01:13:38,000
你不觉得

2567
01:13:38,000 --> 01:13:42,000
这点事情我是觉得是存疑的

2568
01:13:42,000 --> 01:13:42,000
就是

2569
01:13:42,000 --> 01:13:44,000
你觉得 Google

2570
01:13:44,000 --> 01:13:45,000
在我们有生之年

2571
01:13:45,000 --> 01:13:46,000
不会抛弃 Java 吗

2572
01:13:46,000 --> 01:13:48,000
起码在 Android 的这一段

2573
01:13:48,000 --> 01:13:50,000
我觉得是可能比较难

2574
01:13:50,000 --> 01:13:52,000
因为其实你真的用 Google 来写

2575
01:13:52,000 --> 01:13:53,000
客户端的话

2576
01:13:53,000 --> 01:13:55,000
其实发现还是坑蛮多的

2577
01:13:55,000 --> 01:13:56,000
Google 来写

2578
01:13:56,000 --> 01:13:57,000
可是我们上次不是提到了

2579
01:13:57,000 --> 01:13:58,000
它的那个叫什么

2580
01:13:58,000 --> 01:13:58,000
Sky

2581
01:13:58,000 --> 01:13:59,000
对

2582
01:13:59,000 --> 01:14:00,000
它有这个尝试

2583
01:14:00,000 --> 01:14:02,000
但是我不太清楚

2584
01:14:02,000 --> 01:14:04,000
这件事情制服真的能够做得成

2585
01:14:04,000 --> 01:14:06,000
因为这个惯性还是蛮大的

2586
01:14:06,000 --> 01:14:06,000
你不知道

2587
01:14:06,000 --> 01:14:09,000
因为这个 Java 是什么

2588
01:14:09,000 --> 01:14:11,000
教学籍语言

2589
01:14:11,000 --> 01:14:14,000
我以为你要说小强籍语言

2590
01:14:14,000 --> 01:14:16,000
有一个意思

2591
01:14:16,000 --> 01:14:18,000
就是在学校里面

2592
01:14:18,000 --> 01:14:19,000
他的培养的人

2593
01:14:19,000 --> 01:14:21,000
教学的时候就使用这个东西

2594
01:14:21,000 --> 01:14:23,000
我觉得这个对一大批的

2595
01:14:23,000 --> 01:14:26,000
这个程序员的成长的经验

2596
01:14:26,000 --> 01:14:27,000
还是非常重要的影响

2597
01:14:27,000 --> 01:14:28,000
所以我不太确定

2598
01:14:28,000 --> 01:14:29,000
他这个能够转器

2599
01:14:29,000 --> 01:14:30,000
能实现这一点

2600
01:14:30,000 --> 01:14:30,000
而且

2601
01:14:30,000 --> 01:14:33,000
哪怕是在服务端

2602
01:14:33,000 --> 01:14:35,000
他在用 Go 去替代 Java

2603
01:14:35,000 --> 01:14:37,000
也是在比较小范围的

2604
01:14:37,000 --> 01:14:38,000
有限度的去整理的尝试

2605
01:14:38,000 --> 01:14:39,000
而并不是说

2606
01:14:39,000 --> 01:14:41,000
全公司的怎么去推这么一个东西

2607
01:14:41,000 --> 01:14:44,000
如果纯粹以前后端

2608
01:14:44,000 --> 01:14:46,000
使用单语言来衡量的话

2609
01:14:46,000 --> 01:14:47,000
不考虑市场份额

2610
01:14:47,000 --> 01:14:48,000
那 Windows Phone

2611
01:14:48,000 --> 01:14:49,000
那不是最好

2612
01:14:49,000 --> 01:14:50,000
对

2613
01:14:50,000 --> 01:14:51,000
所以其实我们来现在看

2614
01:14:51,000 --> 01:14:53,000
现在微软其实挺有意思的一个情况

2615
01:14:53,000 --> 01:14:54,000
就是他

2616
01:14:54,000 --> 01:14:55,000
那个 C Sharp

2617
01:14:55,000 --> 01:14:56,000
其实是做的挺好的

2618
01:14:56,000 --> 01:14:57,000
对

2619
01:14:57,000 --> 01:14:58,000
通吃所有平台

2620
01:14:58,000 --> 01:14:59,000
所有端

2621
01:14:59,000 --> 01:15:00,000
对

2622
01:15:00,000 --> 01:15:01,000
而且如果我理解没错的话

2623
01:15:01,000 --> 01:15:04,000
他用那个 CLR 的 run time 之后

2624
01:15:04,000 --> 01:15:05,000
他编译

2625
01:15:05,000 --> 01:15:06,000
那个生成

2626
01:15:06,000 --> 01:15:06,000
那个 C

2627
01:15:06,000 --> 01:15:08,000
就是你甚至不一定要用 C Sharp

2628
01:15:08,000 --> 01:15:09,000
来写 Windows Phone 的应用

2629
01:15:09,000 --> 01:15:10,000
把这个形成

2630
01:15:10,000 --> 01:15:11,000
那么 F Sharp 来写

2631
01:15:11,000 --> 01:15:12,000
也可以对吧

2632
01:15:12,000 --> 01:15:13,000
对

2633
01:15:13,000 --> 01:15:14,000
或者什么

2634
01:15:14,000 --> 01:15:16,000
ObjectiveC.net

2635
01:15:16,000 --> 01:15:17,000
如果你感兴趣

2636
01:15:17,000 --> 01:15:17,000
对

2637
01:15:17,000 --> 01:15:18,000
这这之类的东西

2638
01:15:18,000 --> 01:15:20,000
就其实他的那个定位是更好

2639
01:15:20,000 --> 01:15:21,000
当然他因为没有

2640
01:15:21,000 --> 01:15:22,000
没有什么

2641
01:15:22,000 --> 01:15:24,000
没有市场占有量

2642
01:15:24,000 --> 01:15:25,000
这件事情就

2643
01:15:25,000 --> 01:15:27,000
对大会说来说

2644
01:15:27,000 --> 01:15:28,000
没有什么意义

2645
01:15:28,000 --> 01:15:29,000
就我们只讨论

2646
01:15:29,000 --> 01:15:30,000
安卓和 RLC

2647
01:15:30,000 --> 01:15:31,000
两个情况来干

2648
01:15:31,000 --> 01:15:33,000
就是苹果在这上面上是

2649
01:15:33,000 --> 01:15:35,000
我觉得稍微是有点吃亏的

2650
01:15:35,000 --> 01:15:39,000
很难说吧

2651
01:15:39,000 --> 01:15:39,000
我觉得

2652
01:15:39,000 --> 01:15:40,000
就

2653
01:15:40,000 --> 01:15:41,000
我觉得

2654
01:15:41,000 --> 01:15:46,000
苹果是试图以

2655
01:15:46,000 --> 01:15:48,000
语言本身的优势

2656
01:15:48,000 --> 01:15:52,000
以及他在客户端的

2657
01:15:52,000 --> 01:15:53,000
比较

2658
01:15:53,000 --> 01:15:54,000
相对的说

2659
01:15:54,000 --> 01:15:56,000
比较广泛的开发者群

2660
01:15:56,000 --> 01:15:58,000
去反攻服务端

2661
01:15:58,000 --> 01:16:00,000
去反

2662
01:16:00,000 --> 01:16:04,000
反过来去试图向服务端扩展这一技术

2663
01:16:04,000 --> 01:16:05,000
而

2664
01:16:05,000 --> 01:16:09,000
我看不到 Google 有一种新的语言

2665
01:16:09,000 --> 01:16:10,000
可以

2666
01:16:10,000 --> 01:16:12,000
单此重任

2667
01:16:12,000 --> 01:16:13,000
另外一方面

2668
01:16:13,000 --> 01:16:15,000
Google 好像本身也没有这个心思

2669
01:16:15,000 --> 01:16:17,000
他之前

2670
01:16:17,000 --> 01:16:18,000
不大家都在猜

2671
01:16:18,000 --> 01:16:19,000
他会不会用那个叫

2672
01:16:19,000 --> 01:16:20,000
那个叫什么来的

2673
01:16:20,000 --> 01:16:22,000
之前宣布有没有搭载的

2674
01:16:22,000 --> 01:16:24,000
Dart

2675
01:16:24,000 --> 01:16:25,000
对

2676
01:16:25,000 --> 01:16:25,000
Dart

2677
01:16:25,000 --> 01:16:26,000
Dart 不就是 Style

2678
01:16:26,000 --> 01:16:30,000
但是我觉得那个事情可能

2679
01:16:30,000 --> 01:16:31,000
他想的

2680
01:16:31,000 --> 01:16:32,000
可能还不太一样

2681
01:16:32,000 --> 01:16:34,000
Dart 初衷是要

2682
01:16:34,000 --> 01:16:36,000
从 Web 那段开始简化

2683
01:16:36,000 --> 01:16:39,000
UI 的构建的方法

2684
01:16:39,000 --> 01:16:42,000
但是到了

2685
01:16:42,000 --> 01:16:43,000
Android 上

2686
01:16:43,000 --> 01:16:44,000
我不知道性能

2687
01:16:44,000 --> 01:16:45,000
还有这些方面

2688
01:16:45,000 --> 01:16:45,000
真的是靠谱

2689
01:16:45,000 --> 01:16:46,000
反正他起码现在

2690
01:16:46,000 --> 01:16:47,000
没有做这件事了

2691
01:16:47,000 --> 01:16:49,000
可能还是有一定的技术门槛

2692
01:16:49,000 --> 01:16:49,000
我觉得

2693
01:16:49,000 --> 01:16:52,000
拭目以待吧

2694
01:16:52,000 --> 01:16:54,000
反正 Google 东西都是要等

2695
01:16:54,000 --> 01:16:56,000
然后随时可能不

2696
01:16:56,000 --> 01:16:58,000
就 cancel 了

2697
01:16:58,000 --> 01:16:58,000
对

2698
01:16:58,000 --> 01:16:59,000
我觉得这次

2699
01:16:59,000 --> 01:17:01,000
WWDC 给我的一个印象就是

2700
01:17:01,000 --> 01:17:02,000
你在那边看着

2701
01:17:02,000 --> 01:17:03,000
他说

2702
01:17:03,000 --> 01:17:05,000
这个东西我们是什么样的

2703
01:17:05,000 --> 01:17:05,000
然后

2704
01:17:05,000 --> 01:17:06,000
你转联

2705
01:17:06,000 --> 01:17:08,000
你就可以下达下用了

2706
01:17:08,000 --> 01:17:09,000
还是

2707
01:17:09,000 --> 01:17:11,000
deliver 的

2708
01:17:11,000 --> 01:17:12,000
到了

2709
01:17:12,000 --> 01:17:13,000
不像 Google 老师画饼子

2710
01:17:13,000 --> 01:17:14,000
对

2711
01:17:14,000 --> 01:17:14,000
说

2712
01:17:14,000 --> 01:17:14,000
对

2713
01:17:14,000 --> 01:17:15,000
说

2714
01:17:15,000 --> 01:17:17,000
这个东西我们有了

2715
01:17:17,000 --> 01:17:17,000
然后

2716
01:17:17,000 --> 01:17:19,000
各位再等两年

2717
01:17:19,000 --> 01:17:20,000
就可以用到

2718
01:17:20,000 --> 01:17:21,000
对

2719
01:17:21,000 --> 01:17:21,000
还有一个

2720
01:17:21,000 --> 01:17:24,000
比较小的重点

2721
01:17:24,000 --> 01:17:24,000
就是

2722
01:17:24,000 --> 01:17:25,000
SiftR 里面有

2723
01:17:25,000 --> 01:17:26,000
这个

2724
01:17:26,000 --> 01:17:27,000
TryCatch

2725
01:17:27,000 --> 01:17:28,000
当然他们的

2726
01:17:28,000 --> 01:17:29,000
语法是

2727
01:17:29,000 --> 01:17:30,000
DoCatch

2728
01:17:30,000 --> 01:17:32,000
Do 里面

2729
01:17:32,000 --> 01:17:33,000
就是一个 DoBlock

2730
01:17:33,000 --> 01:17:34,000
DoBlock 里面有一些

2731
01:17:34,000 --> 01:17:35,000
关键的部分

2732
01:17:35,000 --> 01:17:35,000
可能

2733
01:17:35,000 --> 01:17:37,000
可能会抛出一场的部分

2734
01:17:37,000 --> 01:17:37,000
你要用 Try

2735
01:17:37,000 --> 01:17:38,000
Try

2736
01:17:38,000 --> 01:17:41,000
就是有那个 Exception 机制的

2737
01:17:41,000 --> 01:17:42,000
对

2738
01:17:42,000 --> 01:17:43,000
然后我之前在直播上

2739
01:17:43,000 --> 01:17:45,000
写过一篇答案

2740
01:17:45,000 --> 01:17:45,000
比较

2741
01:17:45,000 --> 01:17:49,000
比较

2742
01:17:49,000 --> 01:17:50,000
笃定的

2743
01:17:50,000 --> 01:17:52,000
阐述了

2744
01:17:52,000 --> 01:17:54,000
为什么没有 Exception 机制

2745
01:17:54,000 --> 01:17:55,000
比较好

2746
01:17:55,000 --> 01:17:56,000
然后

2747
01:17:56,000 --> 01:17:57,000
我现在 Exception 机制

2748
01:17:57,000 --> 01:17:58,000
出来了

2749
01:17:58,000 --> 01:17:58,000
被打脸了

2750
01:17:58,000 --> 01:17:59,000
对

2751
01:17:59,000 --> 01:18:02,000
Anyway

2752
01:18:02,000 --> 01:18:02,000
我

2753
01:18:02,000 --> 01:18:04,000
当然我那篇文章里面

2754
01:18:04,000 --> 01:18:05,000
非常圆滑的

2755
01:18:05,000 --> 01:18:06,000
没有把话说死

2756
01:18:06,000 --> 01:18:08,000
然后我也默默的去改了

2757
01:18:08,000 --> 01:18:08,000
那个

2758
01:18:08,000 --> 01:18:10,000
当时的措辞

2759
01:18:10,000 --> 01:18:10,000
就说

2760
01:18:10,000 --> 01:18:12,000
现在已经有了

2761
01:18:12,000 --> 01:18:12,000
所以

2762
01:18:12,000 --> 01:18:13,000
Anyway

2763
01:18:13,000 --> 01:18:15,000
OK

2764
01:18:15,000 --> 01:18:16,000
那我们接下来

2765
01:18:16,000 --> 01:18:18,000
可以进入本期的正题

2766
01:18:18,000 --> 01:18:19,000
在一小时

2767
01:18:19,000 --> 01:18:21,000
一个多小时之后

2768
01:18:21,000 --> 01:18:22,000
开始进入正题

2769
01:18:22,000 --> 01:18:23,000
太好了

2770
01:18:23,000 --> 01:18:24,000
我们只能谈半个小时

2771
01:18:24,000 --> 01:18:27,000
所以本期的主题是

2772
01:18:27,000 --> 01:18:28,000
测试

2773
01:18:28,000 --> 01:18:29,000
Testing

2774
01:18:29,000 --> 01:18:29,000
Testing

2775
01:18:29,000 --> 01:18:30,000
Testing

2776
01:18:30,000 --> 01:18:31,000
Testing

2777
01:18:31,000 --> 01:18:32,000
对

2778
01:18:32,000 --> 01:18:32,000
然后

2779
01:18:32,000 --> 01:18:34,000
什么是测试

2780
01:18:34,000 --> 01:18:35,000
解释一下

2781
01:18:35,000 --> 01:18:36,000
好问题

2782
01:18:36,000 --> 01:18:38,000
你说什么是测试

2783
01:18:38,000 --> 01:18:40,000
就我其实今天在准备

2784
01:18:40,000 --> 01:18:41,000
或者我这段时间

2785
01:18:41,000 --> 01:18:42,000
在准备这个提纲的时候

2786
01:18:42,000 --> 01:18:45,000
想了很多测试的例子

2787
01:18:45,000 --> 01:18:45,000
但是

2788
01:18:45,000 --> 01:18:49,000
我觉得可以这么说吧

2789
01:18:49,000 --> 01:18:50,000
就是测试有两个

2790
01:18:50,000 --> 01:18:52,000
一个是广义的测试

2791
01:18:52,000 --> 01:18:53,000
一个是狭义的测试

2792
01:18:53,000 --> 01:18:54,000
就像相对论一样

2793
01:18:54,000 --> 01:18:56,000
广义的测试

2794
01:18:56,000 --> 01:18:57,000
可以指

2795
01:18:57,000 --> 01:18:57,000
比如说

2796
01:18:57,000 --> 01:18:59,000
Penetration Test

2797
01:18:59,000 --> 01:19:01,000
也是一种测试

2798
01:19:01,000 --> 01:19:01,000
就是

2799
01:19:01,000 --> 01:19:03,000
看贵公司的网站

2800
01:19:03,000 --> 01:19:04,000
是否安全

2801
01:19:04,000 --> 01:19:05,000
我作为一个

2802
01:19:05,000 --> 01:19:06,000
不管是黑帽子

2803
01:19:06,000 --> 01:19:07,000
还是白帽子

2804
01:19:07,000 --> 01:19:08,000
试着去

2805
01:19:08,000 --> 01:19:09,000
扫一扫端口

2806
01:19:09,000 --> 01:19:11,000
破一破密码

2807
01:19:11,000 --> 01:19:12,000
找一找注入点

2808
01:19:12,000 --> 01:19:14,000
这些可以叫做测试

2809
01:19:14,000 --> 01:19:15,000
甚至

2810
01:19:15,000 --> 01:19:16,000
英文名字也叫

2811
01:19:16,000 --> 01:19:17,000
Penetration Test

2812
01:19:17,000 --> 01:19:19,000
甚至有一个专门的搓写

2813
01:19:19,000 --> 01:19:20,000
叫做 Pen Test

2814
01:19:20,000 --> 01:19:20,000
对

2815
01:19:20,000 --> 01:19:22,000
然后

2816
01:19:22,000 --> 01:19:24,000
发烟测试

2817
01:19:24,000 --> 01:19:26,000
也可以叫做测试

2818
01:19:26,000 --> 01:19:26,000
就比如说

2819
01:19:26,000 --> 01:19:28,000
smoke testing

2820
01:19:28,000 --> 01:19:31,000
这个我还不太理解

2821
01:19:31,000 --> 01:19:32,000
这种各种术语

2822
01:19:32,000 --> 01:19:33,000
这个是讲什么

2823
01:19:33,000 --> 01:19:34,000
smoke test

2824
01:19:34,000 --> 01:19:35,000
smoke testing

2825
01:19:35,000 --> 01:19:37,000
实际上大家每天都在做

2826
01:19:37,000 --> 01:19:39,000
或者说经常会做

2827
01:19:39,000 --> 01:19:41,000
比如说你装好了

2828
01:19:41,000 --> 01:19:41,000
Rewian Rails

2829
01:19:41,000 --> 01:19:43,000
然后你

2830
01:19:43,000 --> 01:19:46,000
开始运行服务器

2831
01:19:46,000 --> 01:19:47,000
打开浏览器

2832
01:19:47,000 --> 01:19:49,000
输入 localhost 8080

2833
01:19:49,000 --> 01:19:50,000
回车

2834
01:19:50,000 --> 01:19:50,000
诶

2835
01:19:50,000 --> 01:19:52,000
屏幕上出现了这个

2836
01:19:52,000 --> 01:19:53,000
it works

2837
01:19:53,000 --> 01:19:54,000
之类的这么一个

2838
01:19:54,000 --> 01:19:56,000
一个表示说

2839
01:19:56,000 --> 01:19:57,000
这个东西开始运行了

2840
01:19:57,000 --> 01:19:58,000
这么一个提示

2841
01:19:58,000 --> 01:19:58,000
对

2842
01:19:58,000 --> 01:20:01,000
这个过程就是一个 smoke test

2843
01:20:01,000 --> 01:20:02,000
或者说

2844
01:20:02,000 --> 01:20:02,000
smoke 是

2845
01:20:02,000 --> 01:20:04,000
和什么一个说法

2846
01:20:04,000 --> 01:20:05,000
呃

2847
01:20:05,000 --> 01:20:06,000
它应该是

2848
01:20:06,000 --> 01:20:08,000
介于

2849
01:20:08,000 --> 01:20:11,000
介用自另外一个领域

2850
01:20:11,000 --> 01:20:12,000
我忘了是哪个领域

2851
01:20:12,000 --> 01:20:13,000
是矿工还是什么

2852
01:20:13,000 --> 01:20:15,000
呃

2853
01:20:15,000 --> 01:20:16,000
工种的一个

2854
01:20:16,000 --> 01:20:17,000
既有的测试

2855
01:20:17,000 --> 01:20:18,000
就是

2856
01:20:18,000 --> 01:20:19,000
如果你看到冒烟了

2857
01:20:19,000 --> 01:20:20,000
说明这个东西是

2858
01:20:20,000 --> 01:20:21,000
已经开始正常

2859
01:20:21,000 --> 01:20:22,000
好像是孤独

2860
01:20:22,000 --> 01:20:23,000
之类的

2861
01:20:23,000 --> 01:20:25,000
一个非常古老的

2862
01:20:25,000 --> 01:20:26,000
术语

2863
01:20:26,000 --> 01:20:26,000
发烟测试

2864
01:20:26,000 --> 01:20:28,000
呃

2865
01:20:28,000 --> 01:20:29,000
确定不是摩托车

2866
01:20:29,000 --> 01:20:29,000
之类的吗

2867
01:20:29,000 --> 01:20:31,000
应该不是摩托车吧

2868
01:20:31,000 --> 01:20:32,000
摩托车冒烟的

2869
01:20:32,000 --> 01:20:32,000
肯定是有故障

2870
01:20:32,000 --> 01:20:34,000
哈哈哈哈

2871
01:20:34,000 --> 01:20:35,000
对

2872
01:20:35,000 --> 01:20:35,000
好吧

2873
01:20:35,000 --> 01:20:37,000
翻译测试指的就是

2874
01:20:37,000 --> 01:20:38,000
你在呃

2875
01:20:38,000 --> 01:20:39,000
你在试一个东西

2876
01:20:39,000 --> 01:20:40,000
你想要看一看

2877
01:20:40,000 --> 01:20:42,000
它的那些最为 critical

2878
01:20:42,000 --> 01:20:44,000
最为基本的功能

2879
01:20:44,000 --> 01:20:45,000
是不是运行

2880
01:20:45,000 --> 01:20:45,000
比如说你

2881
01:20:45,000 --> 01:20:46,000
你想知道

2882
01:20:46,000 --> 01:20:47,000
呃

2883
01:20:47,000 --> 01:20:50,000
你想知道来电了没有

2884
01:20:50,000 --> 01:20:50,000
或者说你想知道

2885
01:20:50,000 --> 01:20:52,000
是不是停电了

2886
01:20:52,000 --> 01:20:54,000
你去搬一个电动的开关

2887
01:20:54,000 --> 01:20:54,000
哎

2888
01:20:54,000 --> 01:20:55,000
这就是一种 smoke testing

2889
01:20:55,000 --> 01:20:57,000
因为它

2890
01:20:57,000 --> 01:20:58,000
所测试的并不是

2891
01:20:58,000 --> 01:20:59,000
你家整个电路

2892
01:20:59,000 --> 01:21:00,000
是不是完好无缺

2893
01:21:00,000 --> 01:21:02,000
是不是有地方有破损

2894
01:21:02,000 --> 01:21:03,000
是不是有地方电阻太高

2895
01:21:03,000 --> 01:21:04,000
是不是有可能

2896
01:21:04,000 --> 01:21:06,000
有火灾的风险

2897
01:21:06,000 --> 01:21:07,000
它唯一测试的就是

2898
01:21:07,000 --> 01:21:08,000
你家的电路

2899
01:21:08,000 --> 01:21:10,000
是不是在运行

2900
01:21:10,000 --> 01:21:10,000
但是呢

2901
01:21:10,000 --> 01:21:11,000
狭义的测试

2902
01:21:11,000 --> 01:21:12,000
则是不包括

2903
01:21:12,000 --> 01:21:13,000
刚才说的

2904
01:21:13,000 --> 01:21:14,000
比如说

2905
01:21:14,000 --> 01:21:15,000
penetration testing

2906
01:21:15,000 --> 01:21:16,000
或者 smoke testing

2907
01:21:16,000 --> 01:21:17,000
呃

2908
01:21:17,000 --> 01:21:18,000
狭义的测试

2909
01:21:18,000 --> 01:21:19,000
其实

2910
01:21:19,000 --> 01:21:20,000
如果要用比较

2911
01:21:20,000 --> 01:21:22,000
简单的语言来说

2912
01:21:22,000 --> 01:21:22,000
就是

2913
01:21:22,000 --> 01:21:26,000
让你知道

2914
01:21:26,000 --> 01:21:27,000
让你有种

2915
01:21:27,000 --> 01:21:30,000
可以重复的方法

2916
01:21:30,000 --> 01:21:33,000
来知道自己写的软件是

2917
01:21:33,000 --> 01:21:35,000
按照你

2918
01:21:35,000 --> 01:21:37,000
所希望的那些

2919
01:21:37,000 --> 01:21:39,000
方式而运行的

2920
01:21:39,000 --> 01:21:40,000
一系列的东西

2921
01:21:40,000 --> 01:21:41,000
就是叫做测试

2922
01:21:41,000 --> 01:21:43,000
刚才讲的各种各样的测试

2923
01:21:43,000 --> 01:21:44,000
测试的

2924
01:21:44,000 --> 01:21:46,000
主要的一个目的是什么

2925
01:21:46,000 --> 01:21:47,000
主要的目的是什么

2926
01:21:47,000 --> 01:21:48,000
基本上就是要

2927
01:21:48,000 --> 01:21:50,000
基本上测试的意义

2928
01:21:50,000 --> 01:21:52,000
就是让你有一个

2929
01:21:52,000 --> 01:21:54,000
可以度量的准则

2930
01:21:54,000 --> 01:21:55,000
就是你

2931
01:21:55,000 --> 01:21:56,000
因为我们知道

2932
01:21:56,000 --> 01:21:58,000
你写了一个程序之后

2933
01:21:58,000 --> 01:21:58,000
你会说

2934
01:21:58,000 --> 01:21:59,000
这个程序

2935
01:21:59,000 --> 01:22:01,000
看起来是正确的

2936
01:22:01,000 --> 01:22:01,000
或者说

2937
01:22:01,000 --> 01:22:03,000
它在大部分情况下

2938
01:22:03,000 --> 01:22:04,000
也都是正确的

2939
01:22:04,000 --> 01:22:05,000
但是你怎么样

2940
01:22:05,000 --> 01:22:07,000
才能有一种比较

2941
01:22:07,000 --> 01:22:09,000
可以验证的

2942
01:22:09,000 --> 01:22:09,000
客观的

2943
01:22:09,000 --> 01:22:11,000
可以量化的指标

2944
01:22:11,000 --> 01:22:12,000
来告诉你说

2945
01:22:12,000 --> 01:22:14,000
对这个软件的确是可以工作的

2946
01:22:14,000 --> 01:22:16,000
这就是测试了

2947
01:22:16,000 --> 01:22:18,000
就是你为了获得一些特定的指标

2948
01:22:18,000 --> 01:22:20,000
而对你写好的软件

2949
01:22:20,000 --> 01:22:23,000
采取的一系列度量的方法

2950
01:22:23,000 --> 01:22:25,000
就是测试

2951
01:22:25,000 --> 01:22:26,000
所以就是

2952
01:22:26,000 --> 01:22:28,000
其实它是一个质量的

2953
01:22:28,000 --> 01:22:30,000
就 Coreate 概念

2954
01:22:30,000 --> 01:22:31,000
对

2955
01:22:31,000 --> 01:22:32,000
早期的

2956
01:22:32,000 --> 01:22:35,000
早期的测试

2957
01:22:35,000 --> 01:22:39,000
是为了验证程序的

2958
01:22:39,000 --> 01:22:39,000
behavior

2959
01:22:39,000 --> 01:22:40,000
是不是正确

2960
01:22:40,000 --> 01:22:41,000
而后期

2961
01:22:41,000 --> 01:22:42,000
比如说

2962
01:22:42,000 --> 01:22:44,000
现今的测试

2963
01:22:44,000 --> 01:22:44,000
很大程度上

2964
01:22:44,000 --> 01:22:46,000
已经变成一种

2965
01:22:46,000 --> 01:22:49,000
质检的关卡

2966
01:22:49,000 --> 01:22:50,000
就是我们知道

2967
01:22:50,000 --> 01:22:51,000
有一个

2968
01:22:51,000 --> 01:22:54,000
验证体系

2969
01:22:54,000 --> 01:22:54,000
应该是

2970
01:22:54,000 --> 01:22:57,000
ISO 9000 吧

2971
01:22:57,000 --> 01:22:58,000
在软件界

2972
01:22:58,000 --> 01:22:59,000
好像还有一个

2973
01:22:59,000 --> 01:22:59,000
另外的编号

2974
01:22:59,000 --> 01:23:00,000
92

2975
01:23:00,000 --> 01:23:01,000
多少

2976
01:23:01,000 --> 01:23:02,000
然后这个

2977
01:23:02,000 --> 01:23:03,000
认证体系

2978
01:23:03,000 --> 01:23:04,000
很大的一个指标

2979
01:23:04,000 --> 01:23:07,000
就是要看你这个软件公司的测试

2980
01:23:07,000 --> 01:23:09,000
有没有写

2981
01:23:09,000 --> 01:23:10,000
如果有的话

2982
01:23:10,000 --> 01:23:11,000
是什么样的

2983
01:23:11,000 --> 01:23:11,000
能在写

2984
01:23:11,000 --> 01:23:13,000
然后有没有一个专门的

2985
01:23:13,000 --> 01:23:15,000
负责把关的部门

2986
01:23:15,000 --> 01:23:17,000
来去盯着

2987
01:23:17,000 --> 01:23:19,000
去盯着这些测试

2988
01:23:19,000 --> 01:23:20,000
诸如此类

2989
01:23:20,000 --> 01:23:20,000
对

2990
01:23:20,000 --> 01:23:22,000
如今测试已经成了一个

2991
01:23:22,000 --> 01:23:23,000
特别重要的一个

2992
01:23:23,000 --> 01:23:25,000
一个软件工程里面的环节

2993
01:23:25,000 --> 01:23:27,000
然后测试又可以分为

2994
01:23:27,000 --> 01:23:29,000
功能性的测试

2995
01:23:29,000 --> 01:23:31,000
以及非功能性的测试

2996
01:23:31,000 --> 01:23:31,000
也就是说

2997
01:23:31,000 --> 01:23:33,000
狭义上的测试

2998
01:23:33,000 --> 01:23:33,000
又可以分为

2999
01:23:33,000 --> 01:23:34,000
功能性的测试

3000
01:23:34,000 --> 01:23:36,000
和非功能性的测试

3001
01:23:36,000 --> 01:23:37,000
功能性的测试

3002
01:23:37,000 --> 01:23:38,000
也就是说

3003
01:23:38,000 --> 01:23:40,000
比如说你写了一个函数

3004
01:23:40,000 --> 01:23:41,000
这个函数可以返回两个

3005
01:23:41,000 --> 01:23:43,000
数值的和

3006
01:23:43,000 --> 01:23:44,000
然后你写

3007
01:23:44,000 --> 01:23:45,000
所谓功能性的测试

3008
01:23:45,000 --> 01:23:47,000
就是你输入 3 和 4

3009
01:23:47,000 --> 01:23:48,000
然后看这个函数

3010
01:23:48,000 --> 01:23:49,000
是不是返回 7

3011
01:23:49,000 --> 01:23:51,000
又比如说

3012
01:23:51,000 --> 01:23:53,000
你写了一个

3013
01:23:53,000 --> 01:23:55,000
除法的函数

3014
01:23:55,000 --> 01:23:56,000
然后你输入 1 和 0

3015
01:23:56,000 --> 01:23:57,000
想要看这个

3016
01:23:57,000 --> 01:23:59,000
函数会不会返回

3017
01:23:59,000 --> 01:24:00,000
说除零错

3018
01:24:00,000 --> 01:24:02,000
这是一种功能性的测试

3019
01:24:02,000 --> 01:24:04,000
而非功能性的测试

3020
01:24:04,000 --> 01:24:04,000
则是比如说

3021
01:24:04,000 --> 01:24:06,000
看你这个函数的

3022
01:24:06,000 --> 01:24:08,000
执行的速度怎么样

3023
01:24:08,000 --> 01:24:09,000
比如说你写了一个

3024
01:24:09,000 --> 01:24:11,000
加法的函数

3025
01:24:11,000 --> 01:24:12,000
是正确的没错

3026
01:24:12,000 --> 01:24:13,000
但是它需要一天

3027
01:24:13,000 --> 01:24:13,000
才能得出结果

3028
01:24:13,000 --> 01:24:16,000
那这样的函数

3029
01:24:16,000 --> 01:24:18,000
可能没有办法通过

3030
01:24:18,000 --> 01:24:19,000
所谓的功能性的测试

3031
01:24:19,000 --> 01:24:20,000
来验证它

3032
01:24:20,000 --> 01:24:21,000
对功能性的测试

3033
01:24:21,000 --> 01:24:22,000
会告诉你说

3034
01:24:22,000 --> 01:24:23,000
它没问题

3035
01:24:23,000 --> 01:24:25,000
但是一旦你去做一个

3036
01:24:25,000 --> 01:24:27,000
performance testing

3037
01:24:27,000 --> 01:24:29,000
那你会立刻意识到

3038
01:24:29,000 --> 01:24:29,000
这样的函数

3039
01:24:29,000 --> 01:24:31,000
是完全不过关的

3040
01:24:31,000 --> 01:24:32,000
又比如说

3041
01:24:32,000 --> 01:24:33,000
这个 performance testing

3042
01:24:33,000 --> 01:24:34,000
其实有一个专门的书

3043
01:24:34,000 --> 01:24:36,000
我们叫做 benchmark

3044
01:24:36,000 --> 01:24:36,000
对吧

3045
01:24:36,000 --> 01:24:37,000
可以这么说

3046
01:24:37,000 --> 01:24:37,000
对

3047
01:24:37,000 --> 01:24:42,000
然后其实就这么说

3048
01:24:42,000 --> 01:24:42,000
就是这么算

3049
01:24:42,000 --> 01:24:44,000
其实 benchmark 是测试的

3050
01:24:44,000 --> 01:24:45,000
一个子集

3051
01:24:45,000 --> 01:24:48,000
怎么说呢

3052
01:24:48,000 --> 01:24:49,000
performance testing

3053
01:24:49,000 --> 01:24:52,000
可以归类为

3054
01:24:52,000 --> 01:24:54,000
profiling 的一种

3055
01:24:54,000 --> 01:24:56,000
而 benchmark 则是

3056
01:24:56,000 --> 01:24:57,000
profiling 的一个指标

3057
01:24:57,000 --> 01:25:00,000
所以我倾向于认为

3058
01:25:00,000 --> 01:25:02,000
两者还是有

3059
01:25:02,000 --> 01:25:04,000
多少有点不一样

3060
01:25:04,000 --> 01:25:05,000
OK

3061
01:25:05,000 --> 01:25:07,000
因为

3062
01:25:07,000 --> 01:25:12,000
当然也是可以用 benchmark

3063
01:25:12,000 --> 01:25:14,000
最终的分数来作为

3064
01:25:14,000 --> 01:25:16,000
performance testing 的一个指标

3065
01:25:16,000 --> 01:25:17,000
也没错

3066
01:25:17,000 --> 01:25:19,000
anyway 这不重要

3067
01:25:19,000 --> 01:25:21,000
因为我们本次节目

3068
01:25:21,000 --> 01:25:24,000
所要集中的这个话题

3069
01:25:24,000 --> 01:25:26,000
其实是在下意的

3070
01:25:26,000 --> 01:25:27,000
非

3071
01:25:27,000 --> 01:25:29,000
功能性测试上面

3072
01:25:29,000 --> 01:25:30,000
而不是非功能性测试

3073
01:25:30,000 --> 01:25:31,000
因为非功能性测试

3074
01:25:31,000 --> 01:25:34,000
可以可能涉及到的面

3075
01:25:34,000 --> 01:25:35,000
实在是太广太广了

3076
01:25:35,000 --> 01:25:36,000
对

3077
01:25:36,000 --> 01:25:39,000
因为软件工程本身就是一个

3078
01:25:39,000 --> 01:25:40,000
非常非常广的话题集

3079
01:25:40,000 --> 01:25:43,000
而测试又是软件工程上面

3080
01:25:43,000 --> 01:25:45,000
相当大的一个分支

3081
01:25:45,000 --> 01:25:47,000
我们显然不可能在一个

3082
01:25:47,000 --> 01:25:50,000
预计时间只有两个小时

3083
01:25:50,000 --> 01:25:52,000
所有的节目里面

3084
01:25:52,000 --> 01:25:55,000
把面园剧道的

3085
01:25:55,000 --> 01:25:57,000
把测试每个方面都谈到

3086
01:25:57,000 --> 01:25:59,000
所以我们这次主要的

3087
01:25:59,000 --> 01:26:02,000
集中的主题

3088
01:26:02,000 --> 01:26:04,000
还是在功能性测试上面

3089
01:26:04,000 --> 01:26:06,000
而且功能性测试里面

3090
01:26:06,000 --> 01:26:08,000
我们应该只会谈及

3091
01:26:08,000 --> 01:26:10,000
unit test

3092
01:26:10,000 --> 01:26:11,000
也就是单元测试

3093
01:26:11,000 --> 01:26:14,000
以及部分的所谓

3094
01:26:14,000 --> 01:26:16,000
acceptance test

3095
01:26:16,000 --> 01:26:18,000
也就是接受性测试

3096
01:26:18,000 --> 01:26:19,000
我不知道是实

3097
01:26:19,000 --> 01:26:21,000
交接测试

3098
01:26:21,000 --> 01:26:24,000
还是中文术语是什么

3099
01:26:24,000 --> 01:26:25,000
忘记了

3100
01:26:25,000 --> 01:26:26,000
没关系

3101
01:26:26,000 --> 01:26:26,000
anyway

3102
01:26:26,000 --> 01:26:27,000
对

3103
01:26:27,000 --> 01:26:31,000
所以 Rail 你写测试吗

3104
01:26:31,000 --> 01:26:34,000
很惭愧我不写

3105
01:26:34,000 --> 01:26:36,000
伟大的程序员都是不写测试

3106
01:26:36,000 --> 01:26:37,000
这句话我现在

3107
01:26:37,000 --> 01:26:39,000
不是我一直就在想

3108
01:26:39,000 --> 01:26:41,000
了解这么一个事

3109
01:26:41,000 --> 01:26:41,000
就是说

3110
01:26:41,000 --> 01:26:43,000
我们经常有这个

3111
01:26:43,000 --> 01:26:45,000
也有一种开发程序的

3112
01:26:45,000 --> 01:26:46,000
思路叫做 test driven development

3113
01:26:46,000 --> 01:26:47,000
TDD 对吧

3114
01:26:47,000 --> 01:26:47,000
对

3115
01:26:47,000 --> 01:26:49,000
我一直很好奇

3116
01:26:49,000 --> 01:26:51,000
这事靠谱吗

3117
01:26:51,000 --> 01:26:52,000
就这么说吧

3118
01:26:52,000 --> 01:26:54,000
如果我们把软件工程

3119
01:26:54,000 --> 01:26:55,000
真的作为一项工程来讲

3120
01:26:55,000 --> 01:26:57,000
我们会这么去想它

3121
01:26:57,000 --> 01:26:59,000
就是你修一栋楼

3122
01:26:59,000 --> 01:27:01,000
你会说

3123
01:27:01,000 --> 01:27:02,000
这个楼我们算出来

3124
01:27:02,000 --> 01:27:03,000
它的沉重是

3125
01:27:03,000 --> 01:27:04,000
比如说 1000 吨

3126
01:27:04,000 --> 01:27:05,000
某一层

3127
01:27:05,000 --> 01:27:06,000
对吧

3128
01:27:06,000 --> 01:27:07,000
我不知道这个数字

3129
01:27:07,000 --> 01:27:09,000
靠谱反正就随便举个 1000 吨

3130
01:27:09,000 --> 01:27:11,000
然后我们会从力学结构上

3131
01:27:11,000 --> 01:27:11,000
计算出它

3132
01:27:11,000 --> 01:27:13,000
没错它确实可以

3133
01:27:13,000 --> 01:27:14,000
这个承受 1000 吨

3134
01:27:14,000 --> 01:27:15,000
就是从计算

3135
01:27:15,000 --> 01:27:16,000
物理算数

3136
01:27:16,000 --> 01:27:16,000
那个什么

3137
01:27:16,000 --> 01:27:18,000
就是公式算数就这么多

3138
01:27:18,000 --> 01:27:19,000
但我们不会真的

3139
01:27:19,000 --> 01:27:20,000
弄一个 1000 吨

3140
01:27:20,000 --> 01:27:20,000
一张

3141
01:27:20,000 --> 01:27:21,000
就给它实际压一下

3142
01:27:21,000 --> 01:27:22,000
对吧

3143
01:27:22,000 --> 01:27:24,000
嗯

3144
01:27:24,000 --> 01:27:27,000
是这样说

3145
01:27:27,000 --> 01:27:27,000
没错

3146
01:27:27,000 --> 01:27:28,000
但我有办法反驳

3147
01:27:28,000 --> 01:27:30,000
你还有别的要说

3148
01:27:30,000 --> 01:27:30,000
没有

3149
01:27:30,000 --> 01:27:32,000
我就是就在这个思路说下去

3150
01:27:32,000 --> 01:27:33,000
就是说

3151
01:27:33,000 --> 01:27:35,000
其实有很多事情

3152
01:27:35,000 --> 01:27:37,000
我们是没有办法去

3153
01:27:37,000 --> 01:27:39,000
真的真的去实践

3154
01:27:39,000 --> 01:27:40,000
那个条件去测的

3155
01:27:40,000 --> 01:27:41,000
就是有些所谓的 edge cases

3156
01:27:41,000 --> 01:27:42,000
对吧

3157
01:27:42,000 --> 01:27:43,000
但是软件不一样

3158
01:27:43,000 --> 01:27:44,000
因为软件很适合

3159
01:27:44,000 --> 01:27:46,000
模拟各种情况出来

3160
01:27:46,000 --> 01:27:47,000
你都可以

3161
01:27:47,000 --> 01:27:48,000
就是说你 1000 吨

3162
01:27:48,000 --> 01:27:50,000
我可以输个多价格 0

3163
01:27:50,000 --> 01:27:50,000
1 万吨

3164
01:27:50,000 --> 01:27:52,000
我都可以给你测出来

3165
01:27:52,000 --> 01:27:52,000
没有问题

3166
01:27:52,000 --> 01:27:54,000
但我觉得这个

3167
01:27:54,000 --> 01:27:55,000
我一直很好奇

3168
01:27:55,000 --> 01:27:58,000
这会不会让人变得奇怪

3169
01:27:58,000 --> 01:27:59,000
变得或者变得懒

3170
01:27:59,000 --> 01:28:00,000
因为我一直觉得

3171
01:28:00,000 --> 01:28:03,000
你要保证软件质量

3172
01:28:03,000 --> 01:28:03,000
测试

3173
01:28:03,000 --> 01:28:05,000
当然是少不了的一个环节

3174
01:28:05,000 --> 01:28:07,000
但是这个不是最根本的问题

3175
01:28:07,000 --> 01:28:08,000
最根本的问题是

3176
01:28:08,000 --> 01:28:10,000
你在设计的时候就要想好

3177
01:28:10,000 --> 01:28:11,000
这个在理论上

3178
01:28:11,000 --> 01:28:13,000
可不可能会出现这种问题

3179
01:28:13,000 --> 01:28:14,000
就或者说这么说吧

3180
01:28:14,000 --> 01:28:15,000
你写了一个函数

3181
01:28:15,000 --> 01:28:18,000
它有多少种可能的进入方法

3182
01:28:18,000 --> 01:28:20,000
有多少种可能的退出方法

3183
01:28:20,000 --> 01:28:21,000
中间有多少种可能的

3184
01:28:21,000 --> 01:28:24,000
这个出现异常的这个原因

3185
01:28:24,000 --> 01:28:25,000
我们把这些都

3186
01:28:25,000 --> 01:28:27,000
每一个都考虑过了

3187
01:28:27,000 --> 01:28:28,000
我们再写函数

3188
01:28:28,000 --> 01:28:32,000
就才可以说它是一个无措的

3189
01:28:32,000 --> 01:28:32,000
一定是按

3190
01:28:32,000 --> 01:28:34,000
就是证明过

3191
01:28:34,000 --> 01:28:35,000
确实被

3192
01:28:35,000 --> 01:28:37,000
证明过确实没有

3193
01:28:37,000 --> 01:28:40,000
你所有的路径

3194
01:28:40,000 --> 01:28:40,000
你都考虑了

3195
01:28:40,000 --> 01:28:41,000
没有一个漏掉的东西

3196
01:28:41,000 --> 01:28:43,000
这个时候你不用写测试了

3197
01:28:43,000 --> 01:28:43,000
因为你的

3198
01:28:43,000 --> 01:28:44,000
在设计的阶段

3199
01:28:44,000 --> 01:28:45,000
你已经把所有的可能性

3200
01:28:45,000 --> 01:28:46,000
都考虑过了

3201
01:28:46,000 --> 01:28:47,000
但是呢

3202
01:28:47,000 --> 01:28:49,000
做这件事情本身

3203
01:28:49,000 --> 01:28:50,000
可能是比较难的

3204
01:28:50,000 --> 01:28:51,000
就是说

3205
01:28:51,000 --> 01:28:53,000
特别是软件工程大了之后

3206
01:28:53,000 --> 01:28:54,000
你可能不可能面面俱到

3207
01:28:54,000 --> 01:28:54,000
对吧

3208
01:28:54,000 --> 01:28:56,000
所以我们才要测试一些

3209
01:28:56,000 --> 01:28:57,000
选择一些点

3210
01:28:57,000 --> 01:29:00,000
这是统计抽样的办法

3211
01:29:00,000 --> 01:29:01,000
我们假设

3212
01:29:01,000 --> 01:29:02,000
如果这些点过了之后

3213
01:29:02,000 --> 01:29:04,000
我们有较大的信心

3214
01:29:04,000 --> 01:29:05,000
认为这个东西是

3215
01:29:05,000 --> 01:29:06,000
设计上是没有问题的

3216
01:29:06,000 --> 01:29:08,000
但是这个和我刚才讲的

3217
01:29:08,000 --> 01:29:08,000
那种修楼

3218
01:29:08,000 --> 01:29:10,000
修楼你用力学公式

3219
01:29:10,000 --> 01:29:12,000
结构力学算出来之后

3220
01:29:12,000 --> 01:29:14,000
它肯定能承受这么多

3221
01:29:14,000 --> 01:29:16,000
然后我们并不需要

3222
01:29:16,000 --> 01:29:16,000
真的去加上

3223
01:29:16,000 --> 01:29:18,000
那个极限的重量去测

3224
01:29:18,000 --> 01:29:20,000
它能不能实际承受那么多

3225
01:29:20,000 --> 01:29:21,000
是一个概念

3226
01:29:21,000 --> 01:29:22,000
就是说我们能够算出来之后

3227
01:29:22,000 --> 01:29:23,000
我们不需要真的

3228
01:29:23,000 --> 01:29:24,000
去做那些测试

3229
01:29:24,000 --> 01:29:26,000
所以我一直很好奇

3230
01:29:26,000 --> 01:29:29,000
我们是不是把测试的功能

3231
01:29:29,000 --> 01:29:31,000
想得太伟大了

3232
01:29:31,000 --> 01:29:32,000
我就说测试的重点

3233
01:29:32,000 --> 01:29:34,000
它都要把这个

3234
01:29:34,000 --> 01:29:35,000
从这个设计

3235
01:29:35,000 --> 01:29:37,000
从这个原理层面的东西

3236
01:29:37,000 --> 01:29:38,000
放得爪一点太少

3237
01:29:38,000 --> 01:29:40,000
OK

3238
01:29:40,000 --> 01:29:43,000
槽点太多

3239
01:29:43,000 --> 01:29:45,000
不知道从哪儿图起

3240
01:29:45,000 --> 01:29:46,000
没事

3241
01:29:46,000 --> 01:29:47,000
开玩笑

3242
01:29:47,000 --> 01:29:48,000
我这个就是

3243
01:29:48,000 --> 01:29:49,000
我其实

3244
01:29:49,000 --> 01:29:51,000
其实我还是很

3245
01:29:51,000 --> 01:29:53,000
比较认同你的看法

3246
01:29:53,000 --> 01:29:53,000
说实话

3247
01:29:53,000 --> 01:29:54,000
因为

3248
01:29:54,000 --> 01:29:58,000
这么说吧

3249
01:29:58,000 --> 01:29:59,000
我其实对于测试

3250
01:29:59,000 --> 01:30:00,000
一直是抱有

3251
01:30:00,000 --> 01:30:02,000
多多少少有点抵触情绪

3252
01:30:02,000 --> 01:30:06,000
甚至我自己也不是一个

3253
01:30:06,000 --> 01:30:07,000
非常喜欢写测试的人

3254
01:30:07,000 --> 01:30:10,000
但是我必须反驳你的一点

3255
01:30:10,000 --> 01:30:12,000
就是你觉得测试

3256
01:30:12,000 --> 01:30:15,000
似乎在软件工程里面被高估了

3257
01:30:15,000 --> 01:30:16,000
而我则觉得

3258
01:30:16,000 --> 01:30:20,000
从目前大部分软件的水平来看

3259
01:30:20,000 --> 01:30:21,000
它应该是被低估

3260
01:30:21,000 --> 01:30:26,000
拿回你这个钢结构的例子

3261
01:30:26,000 --> 01:30:27,000
就是你的建筑的例子

3262
01:30:27,000 --> 01:30:28,000
就是你会说

3263
01:30:28,000 --> 01:30:30,000
你设计这一层

3264
01:30:30,000 --> 01:30:35,000
它的硬力可能是

3265
01:30:35,000 --> 01:30:38,000
2000 吨或者是多重

3266
01:30:38,000 --> 01:30:42,000
但是你之所以能得出这个

3267
01:30:42,000 --> 01:30:44,000
数值本身

3268
01:30:44,000 --> 01:30:45,000
其实就是因为

3269
01:30:45,000 --> 01:30:49,000
用来搭这个建筑的钢材

3270
01:30:49,000 --> 01:30:52,000
真的经历过

3271
01:30:52,000 --> 01:30:54,000
在一个比较小的规模上的

3272
01:30:54,000 --> 01:30:55,000
硬力测试

3273
01:30:55,000 --> 01:30:58,000
你才可以拿到这个钢材

3274
01:30:58,000 --> 01:30:59,000
相关的数据

3275
01:30:59,000 --> 01:31:00,000
然后你才能算出

3276
01:31:00,000 --> 01:31:03,000
这个钢材在什么样的高度

3277
01:31:03,000 --> 01:31:04,000
什么样的长度

3278
01:31:04,000 --> 01:31:05,000
什么样的直径上面

3279
01:31:05,000 --> 01:31:06,000
能够承受多大的重力

3280
01:31:06,000 --> 01:31:10,000
就是在现实生活里面

3281
01:31:10,000 --> 01:31:11,000
在实体世界里面

3282
01:31:11,000 --> 01:31:13,000
有很多东西的数值

3283
01:31:13,000 --> 01:31:15,000
真的不是可以算出来的

3284
01:31:15,000 --> 01:31:16,000
就比如说化学或者是

3285
01:31:16,000 --> 01:31:17,000
当然这个就扯远

3286
01:31:17,000 --> 01:31:20,000
但就很大一部分程度上

3287
01:31:20,000 --> 01:31:23,000
我们对于很多材料的认知

3288
01:31:23,000 --> 01:31:26,000
都是非常愚蠢的去

3289
01:31:26,000 --> 01:31:28,000
在实验室里面不停的去试

3290
01:31:28,000 --> 01:31:29,000
试出来

3291
01:31:29,000 --> 01:31:30,000
OK

3292
01:31:30,000 --> 01:31:33,000
包括合金或者是

3293
01:31:33,000 --> 01:31:35,000
算了不说这些了

3294
01:31:35,000 --> 01:31:37,000
但总之最重要的一点就是

3295
01:31:37,000 --> 01:31:39,000
在现实生活里面测试

3296
01:31:39,000 --> 01:31:40,000
本身就已经是一个

3297
01:31:40,000 --> 01:31:43,000
比较 fundamental 的东西

3298
01:31:43,000 --> 01:31:44,000
它如此的四分线观

3299
01:31:44,000 --> 01:31:45,000
以至于你有可能

3300
01:31:45,000 --> 01:31:48,000
不会去重视它

3301
01:31:48,000 --> 01:31:52,000
因为如果你是一个建筑公认的话

3302
01:31:52,000 --> 01:31:53,000
或者如果你是一个

3303
01:31:53,000 --> 01:31:56,000
材料力学专家的话

3304
01:31:56,000 --> 01:31:57,000
你可能会觉得

3305
01:31:57,000 --> 01:31:59,000
我在软件里面拖一拖

3306
01:31:59,000 --> 01:32:00,000
线图

3307
01:32:00,000 --> 01:32:02,000
然后它自动部就会帮我

3308
01:32:02,000 --> 01:32:04,000
估算出来这个东西

3309
01:32:04,000 --> 01:32:07,000
大概有什么样的能够承受多大的重量

3310
01:32:07,000 --> 01:32:10,000
但实际上这个数值本身就是

3311
01:32:10,000 --> 01:32:13,000
首先通过测试才能得到的

3312
01:32:13,000 --> 01:32:14,000
好吗

3313
01:32:14,000 --> 01:32:15,000
OK

3314
01:32:15,000 --> 01:32:16,000
然后

3315
01:32:16,000 --> 01:32:18,000
这个是其实对应软件的

3316
01:32:18,000 --> 01:32:20,000
这个所谓的 unit test

3317
01:32:20,000 --> 01:32:22,000
保证每一个结构

3318
01:32:22,000 --> 01:32:23,000
就每一个 component

3319
01:32:23,000 --> 01:32:26,000
每一个组件是正确的吗

3320
01:32:26,000 --> 01:32:28,000
是意思吗

3321
01:32:28,000 --> 01:32:29,000
差不多吧

3322
01:32:29,000 --> 01:32:32,000
但实际上软件的 unit test

3323
01:32:32,000 --> 01:32:35,000
更如果一定要在建筑里面

3324
01:32:35,000 --> 01:32:37,000
找出一个对应的话

3325
01:32:37,000 --> 01:32:39,000
可能更像是说

3326
01:32:39,000 --> 01:32:40,000
OK

3327
01:32:40,000 --> 01:32:45,000
我为这个楼设计了一层

3328
01:32:45,000 --> 01:32:47,000
然后我要再

3329
01:32:47,000 --> 01:32:49,000
我就想起萧继姐说的

3330
01:32:49,000 --> 01:32:50,000
对

3331
01:32:50,000 --> 01:32:50,000
拿萧继姐说的

3332
01:32:50,000 --> 01:32:52,000
那个体育馆的意思吧

3333
01:32:52,000 --> 01:32:52,000
就是

3334
01:32:52,000 --> 01:32:54,000
它设计了一个体育馆

3335
01:32:54,000 --> 01:32:55,000
然后体育馆里面

3336
01:32:55,000 --> 01:32:57,000
每一层要摆上 20 个厕所

3337
01:32:57,000 --> 01:33:00,000
那 unit test

3338
01:33:00,000 --> 01:33:01,000
更像是说

3339
01:33:01,000 --> 01:33:03,000
把每一个厕所

3340
01:33:03,000 --> 01:33:05,000
假如每一个厕所

3341
01:33:05,000 --> 01:33:07,000
都可以做成一个预购件的话

3342
01:33:07,000 --> 01:33:09,000
把每一个厕所的预购件

3343
01:33:09,000 --> 01:33:10,000
拿出来

3344
01:33:10,000 --> 01:33:11,000
单独给它通上水

3345
01:33:11,000 --> 01:33:12,000
通上电

3346
01:33:12,000 --> 01:33:12,000
然后

3347
01:33:12,000 --> 01:33:15,000
你进去使用一次

3348
01:33:15,000 --> 01:33:17,000
然后看它能不能冲水

3349
01:33:17,000 --> 01:33:22,000
或者说你进去用一次之后

3350
01:33:22,000 --> 01:33:23,000
看看它

3351
01:33:23,000 --> 01:33:24,000
有没有什么不合理的地方

3352
01:33:24,000 --> 01:33:26,000
这才更接近一个 unit test

3353
01:33:26,000 --> 01:33:27,000
然后

3354
01:33:27,000 --> 01:33:29,000
最重要的一点就是

3355
01:33:29,000 --> 01:33:31,000
世界上没有两栋建筑

3356
01:33:31,000 --> 01:33:32,000
是一模一样的

3357
01:33:32,000 --> 01:33:34,000
Wait a second

3358
01:33:34,000 --> 01:33:38,000
脑中浮现出的

3359
01:33:38,000 --> 01:33:38,000
不

3360
01:33:38,000 --> 01:33:39,000
脑中浮现出的

3361
01:33:39,000 --> 01:33:40,000
这个

3362
01:33:40,000 --> 01:33:42,000
社会主义国家里面

3363
01:33:42,000 --> 01:33:43,000
那些非常

3364
01:33:43,000 --> 01:33:45,000
一个小气

3365
01:33:45,000 --> 01:33:46,000
所有简直都是一样的

3366
01:33:46,000 --> 01:33:46,000
对

3367
01:33:46,000 --> 01:33:47,000
有个笑话说

3368
01:33:47,000 --> 01:33:49,000
把你截到一个

3369
01:33:49,000 --> 01:33:51,000
中国三线城市的郊区

3370
01:33:51,000 --> 01:33:52,000
扔下来

3371
01:33:52,000 --> 01:33:54,000
给你一个小时的时间

3372
01:33:54,000 --> 01:33:55,000
让你找出自己

3373
01:33:55,000 --> 01:33:55,000
是在哪个城市

3374
01:33:55,000 --> 01:33:56,000
你是找不出来的

3375
01:33:56,000 --> 01:33:59,000
对

3376
01:33:59,000 --> 01:34:02,000
软件里面可能也是

3377
01:34:02,000 --> 01:34:03,000
很多软件

3378
01:34:03,000 --> 01:34:04,000
都彼此相似

3379
01:34:04,000 --> 01:34:05,000
但是

3380
01:34:05,000 --> 01:34:06,000
没有两个软件

3381
01:34:06,000 --> 01:34:07,000
是彼此相同的

3382
01:34:07,000 --> 01:34:08,000
所以

3383
01:34:08,000 --> 01:34:10,000
如果你不写测试的话

3384
01:34:10,000 --> 01:34:12,000
很有可能

3385
01:34:12,000 --> 01:34:14,000
在你认为

3386
01:34:14,000 --> 01:34:15,000
这个软件的

3387
01:34:15,000 --> 01:34:16,000
这一部分

3388
01:34:16,000 --> 01:34:16,000
应该

3389
01:34:16,000 --> 01:34:17,000
那样

3390
01:34:17,000 --> 01:34:19,000
工作的

3391
01:34:19,000 --> 01:34:21,000
这个

3392
01:34:21,000 --> 01:34:22,000
想法本身

3393
01:34:22,000 --> 01:34:23,000
就是没有办法验证

3394
01:34:23,000 --> 01:34:24,000
而且不成立的

3395
01:34:24,000 --> 01:34:25,000
最终你会发现

3396
01:34:25,000 --> 01:34:26,000
它是不成立的

3397
01:34:26,000 --> 01:34:31,000
另外一件事就是

3398
01:34:31,000 --> 01:34:34,000
有些软件是

3399
01:34:34,000 --> 01:34:36,000
无关紧要的

3400
01:34:36,000 --> 01:34:37,000
比如说你打一个 Hello World

3401
01:34:37,000 --> 01:34:40,000
然后你可能最后会漏了

3402
01:34:40,000 --> 01:34:41,000
那个换行符

3403
01:34:41,000 --> 01:34:43,000
或者是你把 Hello World

3404
01:34:43,000 --> 01:34:44,000
打成了 HAL

3405
01:34:44,000 --> 01:34:47,000
这些都是无关紧要的

3406
01:34:47,000 --> 01:34:48,000
但是另外一些软件

3407
01:34:48,000 --> 01:34:49,000
则是人命关天的

3408
01:34:49,000 --> 01:34:50,000
比如说你

3409
01:34:50,000 --> 01:34:52,000
你开着车

3410
01:34:52,000 --> 01:34:55,000
那个控制刹车的部分

3411
01:34:55,000 --> 01:34:56,000
或者是控制转向的部分

3412
01:34:56,000 --> 01:34:58,000
如果这个部分的软件

3413
01:34:58,000 --> 01:34:59,000
出了问题

3414
01:34:59,000 --> 01:35:00,000
那很有可能是

3415
01:35:00,000 --> 01:35:01,000
会死在的

3416
01:35:01,000 --> 01:35:02,000
就

3417
01:35:02,000 --> 01:35:04,000
我们之前请到了

3418
01:35:04,000 --> 01:35:05,000
那个袁浩哥哥

3419
01:35:05,000 --> 01:35:06,000
他在

3420
01:35:06,000 --> 01:35:09,000
他所在的那家 ElectroVis

3421
01:35:09,000 --> 01:35:12,000
所做的工作

3422
01:35:12,000 --> 01:35:13,000
之所以

3423
01:35:13,000 --> 01:35:16,000
会非常强调测试

3424
01:35:16,000 --> 01:35:17,000
就是因为他们的软件

3425
01:35:17,000 --> 01:35:20,000
里面有四个

3426
01:35:20,000 --> 01:35:21,000
人身伤害的标准

3427
01:35:21,000 --> 01:35:22,000
如果没有起错的话

3428
01:35:22,000 --> 01:35:23,000
第一个标准是

3429
01:35:23,000 --> 01:35:26,000
这个软件如果出了问题

3430
01:35:26,000 --> 01:35:27,000
有可能

3431
01:35:27,000 --> 01:35:29,000
这个标准的第一等级

3432
01:35:29,000 --> 01:35:31,000
就是如果这个软件

3433
01:35:31,000 --> 01:35:32,000
出了问题

3434
01:35:32,000 --> 01:35:35,000
那可能会有一个人受伤

3435
01:35:35,000 --> 01:35:37,000
第二等级是

3436
01:35:37,000 --> 01:35:38,000
如果这个软件出了问题

3437
01:35:38,000 --> 01:35:40,000
可能会有一个人死亡

3438
01:35:40,000 --> 01:35:41,000
第三个等级是

3439
01:35:41,000 --> 01:35:42,000
如果这个软件出了问题

3440
01:35:42,000 --> 01:35:44,000
可能会有多个人受伤

3441
01:35:44,000 --> 01:35:46,000
第四个等级就是

3442
01:35:46,000 --> 01:35:47,000
可能会有多个人死亡

3443
01:35:47,000 --> 01:35:49,000
你看看人家的这个

3444
01:35:49,000 --> 01:35:51,000
人家这个软件的危险标准

3445
01:35:51,000 --> 01:35:52,000
是这么来的

3446
01:35:52,000 --> 01:35:53,000
那在这样

3447
01:35:53,000 --> 01:35:55,000
如果你是负责开发

3448
01:35:55,000 --> 01:35:56,000
这样一个软件的话

3449
01:35:56,000 --> 01:35:57,000
那可能

3450
01:35:57,000 --> 01:35:58,000
不是可能

3451
01:35:58,000 --> 01:36:00,000
就是任何级别的测试

3452
01:36:00,000 --> 01:36:01,000
都是必不可少

3453
01:36:01,000 --> 01:36:05,000
所以其实面对这种

3454
01:36:05,000 --> 01:36:06,000
我理解你说那个意思

3455
01:36:06,000 --> 01:36:07,000
就是面对这种

3456
01:36:07,000 --> 01:36:09,000
所谓的 mission critical 的组件

3457
01:36:09,000 --> 01:36:10,000
不是更应该

3458
01:36:10,000 --> 01:36:12,000
从源头上去解决它的问题

3459
01:36:12,000 --> 01:36:12,000
而不是依赖

3460
01:36:12,000 --> 01:36:14,000
过度依赖于测试吗

3461
01:36:14,000 --> 01:36:16,000
就是

3462
01:36:16,000 --> 01:36:17,000
其实我知道

3463
01:36:17,000 --> 01:36:17,000
我刚才一直

3464
01:36:17,000 --> 01:36:19,000
我已经在试图绕开你的问题

3465
01:36:19,000 --> 01:36:21,000
就是你想说

3466
01:36:21,000 --> 01:36:24,000
好的架构可以取代测试

3467
01:36:24,000 --> 01:36:26,000
不

3468
01:36:26,000 --> 01:36:28,000
这面有可能要再解释一下

3469
01:36:28,000 --> 01:36:29,000
就是说

3470
01:36:29,000 --> 01:36:32,000
好的架构可以减轻

3471
01:36:32,000 --> 01:36:33,000
对于测试的依赖

3472
01:36:33,000 --> 01:36:35,000
我觉得就是一个

3473
01:36:35,000 --> 01:36:38,000
验证一个软件正确性的方法

3474
01:36:38,000 --> 01:36:39,000
有两个

3475
01:36:39,000 --> 01:36:40,000
一个是你测出它

3476
01:36:40,000 --> 01:36:41,000
所有的输入

3477
01:36:41,000 --> 01:36:42,000
所有的输出

3478
01:36:42,000 --> 01:36:43,000
对吧

3479
01:36:43,000 --> 01:36:44,000
如果它这个输入输出

3480
01:36:44,000 --> 01:36:46,000
是一个有限级的话

3481
01:36:46,000 --> 01:36:48,000
你看是不是符合你的预期

3482
01:36:48,000 --> 01:36:50,000
就是暴力穷局法

3483
01:36:50,000 --> 01:36:52,000
但是另外一个方法就是说

3484
01:36:52,000 --> 01:36:55,000
你跟它做逻辑分析

3485
01:36:55,000 --> 01:36:57,000
我们叫 formal verification

3486
01:36:57,000 --> 01:37:00,000
就是你给它一个描述

3487
01:37:00,000 --> 01:37:02,000
说它应该怎么怎么样

3488
01:37:02,000 --> 01:37:04,000
然后你通过一些正式的方法

3489
01:37:04,000 --> 01:37:05,000
formal

3490
01:37:05,000 --> 01:37:06,000
这个叫什么来的

3491
01:37:06,000 --> 01:37:07,000
对正式的方法

3492
01:37:07,000 --> 01:37:08,000
形式方法应该说

3493
01:37:08,000 --> 01:37:10,000
对形式的方法去证明

3494
01:37:10,000 --> 01:37:12,000
它确实是未按照这种情况

3495
01:37:12,000 --> 01:37:13,000
没有特例

3496
01:37:13,000 --> 01:37:14,000
没有考虑过的

3497
01:37:14,000 --> 01:37:16,000
对吧

3498
01:37:16,000 --> 01:37:19,000
所以测试其实是在

3499
01:37:19,000 --> 01:37:20,000
我说的前种方法

3500
01:37:20,000 --> 01:37:22,000
就是去看它的输入输出

3501
01:37:22,000 --> 01:37:24,000
然后看我们选取一些点

3502
01:37:24,000 --> 01:37:26,000
比如说一些比较奇怪的点

3503
01:37:26,000 --> 01:37:27,000
看会出现什么问题

3504
01:37:27,000 --> 01:37:28,000
选取一些正常的点

3505
01:37:28,000 --> 01:37:29,000
看它是不是产生符合

3506
01:37:29,000 --> 01:37:31,000
我们预期的答案

3507
01:37:31,000 --> 01:37:32,000
然后选择一些奇怪的点

3508
01:37:32,000 --> 01:37:33,000
看它是不是出现

3509
01:37:33,000 --> 01:37:35,000
我们预期的异常或者错误

3510
01:37:35,000 --> 01:37:36,000
对吧

3511
01:37:36,000 --> 01:37:37,000
但其实这个覆盖和

3512
01:37:37,000 --> 01:37:40,000
有一个 formal verification

3513
01:37:40,000 --> 01:37:41,000
就是正

3514
01:37:41,000 --> 01:37:42,000
就是什么呢

3515
01:37:42,000 --> 01:37:43,000
这不叫正式

3516
01:37:43,000 --> 01:37:44,000
形式证明

3517
01:37:44,000 --> 01:37:45,000
对形式证明的

3518
01:37:45,000 --> 01:37:48,000
这个得色结论是完全不具为

3519
01:37:48,000 --> 01:37:49,000
像可比性的

3520
01:37:49,000 --> 01:37:50,000
因为一个是说

3521
01:37:50,000 --> 01:37:52,000
我们有 50%的

3522
01:37:52,000 --> 01:37:52,000
不

3523
01:37:52,000 --> 01:37:53,000
5%的把握证明

3524
01:37:53,000 --> 01:37:54,000
他们应该没问题

3525
01:37:54,000 --> 01:37:56,000
和这边形式证明是说

3526
01:37:56,000 --> 01:37:57,000
我们 100%确定

3527
01:37:57,000 --> 01:37:58,000
它不会出错

3528
01:37:58,000 --> 01:38:00,000
你没有我意思吗

3529
01:38:00,000 --> 01:38:03,000
但我觉得有两点

3530
01:38:03,000 --> 01:38:04,000
首先第一点是

3531
01:38:04,000 --> 01:38:07,000
你通过形式证明

3532
01:38:07,000 --> 01:38:09,000
知智能

3533
01:38:09,000 --> 01:38:10,000
知晓了

3534
01:38:10,000 --> 01:38:11,000
这一个软件

3535
01:38:11,000 --> 01:38:12,000
这样写应该没有问题

3536
01:38:12,000 --> 01:38:15,000
但是你仍旧没有办法

3537
01:38:15,000 --> 01:38:16,000
确定说

3538
01:38:16,000 --> 01:38:17,000
你写出来了

3539
01:38:17,000 --> 01:38:17,000
就一定

3540
01:38:17,000 --> 01:38:20,000
完全符合你的形式证明

3541
01:38:20,000 --> 01:38:20,000
比如说

3542
01:38:20,000 --> 01:38:21,000
你在某个地方

3543
01:38:21,000 --> 01:38:22,000
多达了一个点

3544
01:38:22,000 --> 01:38:23,000
或者是在某个地方

3545
01:38:23,000 --> 01:38:25,000
把加号写成了称号

3546
01:38:25,000 --> 01:38:27,000
这些东西都是

3547
01:38:27,000 --> 01:38:28,000
没有办法通过形式证明

3548
01:38:28,000 --> 01:38:30,000
来唯一确认的

3549
01:38:30,000 --> 01:38:33,000
可以吧

3550
01:38:33,000 --> 01:38:34,000
如果你把那个

3551
01:38:34,000 --> 01:38:35,000
specification 写的足够

3552
01:38:35,000 --> 01:38:38,000
当然你可能说

3553
01:38:38,000 --> 01:38:39,000
这个界限就比较模糊了

3554
01:38:39,000 --> 01:38:39,000
对吧

3555
01:38:39,000 --> 01:38:41,000
如果这个 specification

3556
01:38:41,000 --> 01:38:42,000
就写的那么详细的

3557
01:38:42,000 --> 01:38:44,000
这不就是 BDD 吗

3558
01:38:44,000 --> 01:38:46,000
这不就是 behavior driven development 吗

3559
01:38:46,000 --> 01:38:48,000
这不就是测试先行驱动的

3560
01:38:48,000 --> 01:38:49,000
一种特殊形式

3561
01:38:49,000 --> 01:38:53,000
然后其次第二点是

3562
01:38:53,000 --> 01:38:55,000
做形式分析

3563
01:38:55,000 --> 01:38:57,000
是非常花时间的

3564
01:38:57,000 --> 01:38:59,000
而且很多时候是不可能的

3565
01:38:59,000 --> 01:38:59,000
对

3566
01:38:59,000 --> 01:39:01,000
而现代软件里面

3567
01:39:01,000 --> 01:39:02,000
有很大的一个问题

3568
01:39:02,000 --> 01:39:03,000
就是你刚才说

3569
01:39:03,000 --> 01:39:05,000
如果你知道自己想要什么

3570
01:39:05,000 --> 01:39:07,000
但现在的问题就是

3571
01:39:07,000 --> 01:39:09,000
在很多领域里面

3572
01:39:09,000 --> 01:39:11,000
最终负责验收业软件的那个人

3573
01:39:11,000 --> 01:39:13,000
是不知道自己要什么的

3574
01:39:13,000 --> 01:39:15,000
只有把它做出来

3575
01:39:15,000 --> 01:39:16,000
才能知道自己要什么

3576
01:39:16,000 --> 01:39:19,000
这个可能就是学院派和工程派

3577
01:39:19,000 --> 01:39:21,000
做事情的不同的一个出发点

3578
01:39:21,000 --> 01:39:21,000
我觉得

3579
01:39:21,000 --> 01:39:22,000
对

3580
01:39:22,000 --> 01:39:24,000
这就是 V 型模型

3581
01:39:24,000 --> 01:39:27,000
瀑布模型和这个螺旋模型

3582
01:39:27,000 --> 01:39:29,000
就是敏捷模型最大的区别

3583
01:39:29,000 --> 01:39:30,000
嗯

3584
01:39:30,000 --> 01:39:31,000
对

3585
01:39:31,000 --> 01:39:33,000
你要解释一下吗

3586
01:39:33,000 --> 01:39:34,000
这个

3587
01:39:34,000 --> 01:39:35,000
好吧

3588
01:39:35,000 --> 01:39:37,000
有一个问题就是

3589
01:39:37,000 --> 01:39:38,000
我没学过人家工程

3590
01:39:38,000 --> 01:39:39,000
你学过人家工程吗

3591
01:39:39,000 --> 01:39:40,000
你也没学过

3592
01:39:40,000 --> 01:39:41,000
对啊

3593
01:39:41,000 --> 01:39:41,000
对

3594
01:39:41,000 --> 01:39:43,000
本质上我是一个学通信的人

3595
01:39:43,000 --> 01:39:43,000
然后

3596
01:39:43,000 --> 01:39:45,000
本质上我不是学 CS 的人

3597
01:39:45,000 --> 01:39:46,000
对

3598
01:39:46,000 --> 01:39:47,000
好吧

3599
01:39:47,000 --> 01:39:49,000
我就因为那边解释一下

3600
01:39:49,000 --> 01:39:51,000
所谓瀑布模型

3601
01:39:51,000 --> 01:39:52,000
呃

3602
01:40:21,000 --> 01:40:22,000
你学过的房顶必须是尖的

3603
01:40:22,000 --> 01:40:25,000
然后尖的这个角度必须是多少多度以上

3604
01:40:25,000 --> 01:40:27,000
呃

3605
01:40:27,000 --> 01:40:29,000
他拿了一大堆 regulation

3606
01:40:29,000 --> 01:40:30,000
然后帮你看一遍

3607
01:40:30,000 --> 01:40:31,000
说好

3608
01:40:31,000 --> 01:40:31,000
呃

3609
01:40:31,000 --> 01:40:32,000
根据这些 regulation

3610
01:40:32,000 --> 01:40:34,000
我可以给你

3611
01:40:34,000 --> 01:40:34,000
呃

3612
01:40:34,000 --> 01:40:36,000
三个房型

3613
01:40:36,000 --> 01:40:38,000
然后你看着三个房型

3614
01:40:38,000 --> 01:40:40,000
然后看着三个房型的平面图

3615
01:40:40,000 --> 01:40:42,000
看着三个房型的效果图

3616
01:40:42,000 --> 01:40:45,000
看着三个房型的内部结构图

3617
01:40:45,000 --> 01:40:46,000
然后你说好

3618
01:40:46,000 --> 01:40:46,000
我要

3619
01:40:46,000 --> 01:40:47,000
我觉得这间房子太小了

3620
01:40:47,000 --> 01:40:48,000
我要把它改大一点

3621
01:40:48,000 --> 01:40:49,000
不拉不拉

3622
01:40:49,000 --> 01:40:50,000
然后经过这一种过程

3623
01:40:50,000 --> 01:40:51,000
你

3624
01:40:51,000 --> 01:40:52,000
最终确定一个方案

3625
01:40:52,000 --> 01:40:54,000
你要在这个房页上签字

3626
01:40:54,000 --> 01:40:55,000
然后

3627
01:40:55,000 --> 01:40:58,000
这个设计公司把它

3628
01:40:58,000 --> 01:41:00,000
交给他们认识的一个包拱头

3629
01:41:00,000 --> 01:41:01,000
然后包拱头开始干

3630
01:41:01,000 --> 01:41:03,000
然后干上一段时间

3631
01:41:03,000 --> 01:41:04,000
你隔一段时间去看一看

3632
01:41:04,000 --> 01:41:06,000
然后这个呃

3633
01:41:06,000 --> 01:41:09,000
你会看到他先挖一个坑

3634
01:41:09,000 --> 01:41:09,000
然后打地基

3635
01:41:09,000 --> 01:41:10,000
然后盖第一层

3636
01:41:10,000 --> 01:41:11,000
盖第二层

3637
01:41:11,000 --> 01:41:12,000
把预制板插上

3638
01:41:12,000 --> 01:41:12,000
盖第三层

3639
01:41:12,000 --> 01:41:14,000
然后呃

3640
01:41:14,000 --> 01:41:15,000
外墙装修内装修

3641
01:41:15,000 --> 01:41:16,000
最后水到渠成

3642
01:41:16,000 --> 01:41:18,000
这么一个

3643
01:41:18,000 --> 01:41:19,000
你拿到的

3644
01:41:19,000 --> 01:41:22,000
你拿到的一间和自己最初的图纸

3645
01:41:22,000 --> 01:41:23,000
可能略有出入

3646
01:41:23,000 --> 01:41:25,000
但是基本上是你想象的

3647
01:41:25,000 --> 01:41:26,000
那个样子的一个房子

3648
01:41:26,000 --> 01:41:28,000
这是一个在实体世界里面

3649
01:41:28,000 --> 01:41:29,000
非常司空见惯的事情

3650
01:41:29,000 --> 01:41:32,000
然后在软件工程的早期

3651
01:41:32,000 --> 01:41:33,000
人们也的确是这样做的

3652
01:41:33,000 --> 01:41:35,000
就是一开始就找一些

3653
01:41:35,000 --> 01:41:37,000
最终会使用软件的人说

3654
01:41:37,000 --> 01:41:37,000
哦

3655
01:41:37,000 --> 01:41:39,000
你最终会拿到软件

3656
01:41:39,000 --> 01:41:40,000
可能是这个样子的

3657
01:41:40,000 --> 01:41:41,000
然后你按这个按钮

3658
01:41:41,000 --> 01:41:42,000
就会出现那个

3659
01:41:42,000 --> 01:41:43,000
呃

3660
01:41:43,000 --> 01:41:45,000
点这里就会做那个

3661
01:41:45,000 --> 01:41:47,000
然后按下这个按钮

3662
01:41:47,000 --> 01:41:49,000
核弹就会飞起来之类的

3663
01:41:49,000 --> 01:41:52,000
就所谓的需求文档嘛

3664
01:41:52,000 --> 01:41:52,000
对

3665
01:41:52,000 --> 01:41:54,000
首先你有一套需求文档

3666
01:41:54,000 --> 01:41:56,000
就像房子的蓝图一样

3667
01:41:56,000 --> 01:41:58,000
接下来软件工程的团队开始施工

3668
01:41:58,000 --> 01:42:00,000
然后在这个施工过程中

3669
01:42:00,000 --> 01:42:01,000
你是没有办法去

3670
01:42:01,000 --> 01:42:04,000
勒令他们停下来

3671
01:42:04,000 --> 01:42:05,000
说不行

3672
01:42:05,000 --> 01:42:05,000
我不要这套房子

3673
01:42:05,000 --> 01:42:06,000
我把它

3674
01:42:06,000 --> 01:42:07,000
呃

3675
01:42:07,000 --> 01:42:08,000
你给我扒了

3676
01:42:08,000 --> 01:42:09,000
把它重新建一遍

3677
01:42:09,000 --> 01:42:10,000
或者说不对

3678
01:42:10,000 --> 01:42:10,000
这个地方我要

3679
01:42:10,000 --> 01:42:12,000
本来我是三层楼

3680
01:42:12,000 --> 01:42:13,000
然后我现在要改成五层

3681
01:42:13,000 --> 01:42:14,000
这些的

3682
01:42:14,000 --> 01:42:15,000
这些都是不行的

3683
01:42:15,000 --> 01:42:17,000
在那个美好的时代

3684
01:42:17,000 --> 01:42:17,000
如果

3685
01:42:17,000 --> 01:42:20,000
如果你是一个足够土豪的甲方

3686
01:42:20,000 --> 01:42:21,000
好像是可以的吧

3687
01:42:21,000 --> 01:42:24,000
呃

3688
01:42:24,000 --> 01:42:27,000
如果是一个足够土豪的甲方

3689
01:42:27,000 --> 01:42:31,000
你所面临的损失

3690
01:42:31,000 --> 01:42:33,000
仍旧远远不如

3691
01:42:33,000 --> 01:42:35,000
你从一开始就明确的知道

3692
01:42:35,000 --> 01:42:36,000
自己要什么要来

3693
01:42:36,000 --> 01:42:36,000
当然这个

3694
01:42:36,000 --> 01:42:37,000
没错

3695
01:42:37,000 --> 01:42:38,000
如果你要

3696
01:42:38,000 --> 01:42:39,000
所以我觉得瀑布这个

3697
01:42:39,000 --> 01:42:40,000
使用的很好

3698
01:42:40,000 --> 01:42:41,000
就是你知道瀑布的水

3699
01:42:41,000 --> 01:42:42,000
都是往下走的对吧

3700
01:42:42,000 --> 01:42:43,000
一气而下

3701
01:42:43,000 --> 01:42:46,000
你是在这个瀑布模型里面的

3702
01:42:46,000 --> 01:42:47,000
任何一步

3703
01:42:47,000 --> 01:42:48,000
你都是回不了头的

3704
01:42:48,000 --> 01:42:48,000
现在盖房子里

3705
01:42:48,000 --> 01:42:50,000
呃

3706
01:42:50,000 --> 01:42:51,000
而反过来

3707
01:42:51,000 --> 01:42:52,000
敏捷模型则是

3708
01:42:52,000 --> 01:42:55,000
在软件朋友发展的

3709
01:42:55,000 --> 01:42:57,000
90 年代

3710
01:42:57,000 --> 01:43:00,000
人们终于有了

3711
01:43:00,000 --> 01:43:00,000
怎么说

3712
01:43:00,000 --> 01:43:02,000
终于有了更多的人

3713
01:43:02,000 --> 01:43:04,000
可以有这个资本去

3714
01:43:04,000 --> 01:43:06,000
呃

3715
01:43:06,000 --> 01:43:06,000
买

3716
01:43:06,000 --> 01:43:08,000
或者说订购一套

3717
01:43:08,000 --> 01:43:09,000
属于他们自己的软件

3718
01:43:09,000 --> 01:43:11,000
比如说一些小商贩啊

3719
01:43:11,000 --> 01:43:13,000
一个小公司啊

3720
01:43:13,000 --> 01:43:14,000
可以有自己的

3721
01:43:14,000 --> 01:43:15,000
可以有自己的网站

3722
01:43:15,000 --> 01:43:17,000
或者是可以有自己专门的应用

3723
01:43:17,000 --> 01:43:18,000
呃

3724
01:43:18,000 --> 01:43:19,000
此时人们发生了一个问题

3725
01:43:19,000 --> 01:43:20,000
发现了一个问题

3726
01:43:20,000 --> 01:43:20,000
就是

3727
01:43:20,000 --> 01:43:22,000
早期的瀑布模型

3728
01:43:22,000 --> 01:43:22,000
在也经不通了

3729
01:43:22,000 --> 01:43:24,000
因为很多很多人是

3730
01:43:24,000 --> 01:43:26,000
包括你和我

3731
01:43:26,000 --> 01:43:27,000
都是那些

3732
01:43:27,000 --> 01:43:27,000
都是

3733
01:43:27,000 --> 01:43:28,000
不知道

3734
01:43:28,000 --> 01:43:29,000
不知道自己要什么

3735
01:43:29,000 --> 01:43:31,000
对于自己的想象力和

3736
01:43:31,000 --> 01:43:33,000
怎么说的

3737
01:43:33,000 --> 01:43:34,000
高估了自己的想象力

3738
01:43:34,000 --> 01:43:36,000
同时又低估了自己的野心

3739
01:43:36,000 --> 01:43:37,000
这么确认

3740
01:43:37,000 --> 01:43:38,000
可以站在那边

3741
01:43:38,000 --> 01:43:39,000
表达能力

3742
01:43:39,000 --> 01:43:40,000
对

3743
01:43:40,000 --> 01:43:41,000
哈哈

3744
01:43:41,000 --> 01:43:43,000
有了一点

3745
01:43:43,000 --> 01:43:44,000
呃

3746
01:43:44,000 --> 01:43:48,000
资本可以来做一个项目的验收方的时候

3747
01:43:48,000 --> 01:43:48,000
他们

3748
01:43:48,000 --> 01:43:51,000
你会发现这些人是完全没有

3749
01:43:51,000 --> 01:43:52,000
办法

3750
01:43:52,000 --> 01:43:53,000
在

3751
01:43:53,000 --> 01:43:54,000
呃

3752
01:43:54,000 --> 01:43:56,000
瀑布模型之下工作的

3753
01:43:56,000 --> 01:43:57,000
无法验收

3754
01:43:57,000 --> 01:43:58,000
对

3755
01:43:58,000 --> 01:43:59,000
你一开始给他

3756
01:43:59,000 --> 01:44:01,000
跟他答应了好好的一些东西

3757
01:44:01,000 --> 01:44:01,000
他

3758
01:44:01,000 --> 01:44:03,000
做了一半

3759
01:44:03,000 --> 01:44:05,000
你给他看一个半成品的时候

3760
01:44:05,000 --> 01:44:05,000
他说

3761
01:44:05,000 --> 01:44:06,000
我靠

3762
01:44:06,000 --> 01:44:08,000
我希望他不是这样的

3763
01:44:08,000 --> 01:44:09,000
呃

3764
01:44:09,000 --> 01:44:11,000
在这种情况之下呢

3765
01:44:11,000 --> 01:44:12,000
呃

3766
01:44:12,000 --> 01:44:13,000
人们就推出一种叫做

3767
01:44:13,000 --> 01:44:14,000
呃

3768
01:44:14,000 --> 01:44:15,000
extreme programming

3769
01:44:15,000 --> 01:44:16,000
或者说

3770
01:44:16,000 --> 01:44:17,000
呃

3771
01:44:17,000 --> 01:44:17,000
对

3772
01:44:17,000 --> 01:44:17,000
早期

3773
01:44:17,000 --> 01:44:17,000
对

3774
01:44:17,000 --> 01:44:18,000
extreme programming

3775
01:44:18,000 --> 01:44:19,000
又早于 agile

3776
01:44:19,000 --> 01:44:21,000
呃

3777
01:44:21,000 --> 01:44:21,000
呃

3778
01:44:21,000 --> 01:44:21,000
呃

3779
01:44:21,000 --> 01:44:22,000
推出一种所谓

3780
01:44:22,000 --> 01:44:23,000
XP

3781
01:44:23,000 --> 01:44:25,000
就是极限编程的这么一种理念

3782
01:44:25,000 --> 01:44:27,000
就是在这种模型之下呢

3783
01:44:27,000 --> 01:44:28,000
呃

3784
01:44:28,000 --> 01:44:31,000
你一开始只问这个最终的客户

3785
01:44:31,000 --> 01:44:32,000
很小的一个问题

3786
01:44:32,000 --> 01:44:32,000
就是说

3787
01:44:32,000 --> 01:44:32,000
呃

3788
01:44:32,000 --> 01:44:33,000
比如说

3789
01:44:33,000 --> 01:44:35,000
打个比方吧

3790
01:44:35,000 --> 01:44:35,000
你希望你的网站

3791
01:44:35,000 --> 01:44:38,000
你希望你的网站基色是什么颜色的

3792
01:44:38,000 --> 01:44:39,000
他说

3793
01:44:39,000 --> 01:44:39,000
蓝色

3794
01:44:39,000 --> 01:44:40,000
然后你好

3795
01:44:40,000 --> 01:44:41,000
嗯

3796
01:44:41,000 --> 01:44:42,000
写一个网页

3797
01:44:42,000 --> 01:44:44,000
然后把这个背景换成某种蓝色

3798
01:44:44,000 --> 01:44:45,000
说这样吗

3799
01:44:45,000 --> 01:44:47,000
客户一看说

3800
01:44:47,000 --> 01:44:47,000
我靠

3801
01:44:47,000 --> 01:44:49,000
纯蓝色怎么这么丑

3802
01:44:49,000 --> 01:44:49,000
不行

3803
01:44:49,000 --> 01:44:50,000
我要粉红色

3804
01:44:50,000 --> 01:44:51,000
好

3805
01:44:51,000 --> 01:44:53,000
你马上就可以换成粉红色

3806
01:44:53,000 --> 01:44:54,000
然后

3807
01:44:54,000 --> 01:44:54,000
就算什么

3808
01:44:54,000 --> 01:44:55,000
就

3809
01:44:55,000 --> 01:44:57,000
你算是交后式编程了吧

3810
01:44:57,000 --> 01:44:57,000
对

3811
01:44:57,000 --> 01:44:59,000
这就是一个非常非常小的迭代

3812
01:44:59,000 --> 01:45:00,000
Iteration

3813
01:45:00,000 --> 01:45:02,000
在这个过程之中

3814
01:45:02,000 --> 01:45:05,000
你首先确立了用户一个非常基本的需求

3815
01:45:05,000 --> 01:45:07,000
然后你把这个需求实现出来

3816
01:45:07,000 --> 01:45:09,000
实现出来这一部分最小的功能

3817
01:45:09,000 --> 01:45:10,000
找客户去反馈

3818
01:45:10,000 --> 01:45:11,000
客户

3819
01:45:11,000 --> 01:45:12,000
他对你的反馈

3820
01:45:12,000 --> 01:45:13,000
如果是正的的话

3821
01:45:13,000 --> 01:45:14,000
你就可以去做下去

3822
01:45:14,000 --> 01:45:15,000
如果是负的话

3823
01:45:15,000 --> 01:45:15,000
你就要改

3824
01:45:15,000 --> 01:45:16,000
然后

3825
01:45:16,000 --> 01:45:20,000
把整个软件工程的

3826
01:45:20,000 --> 01:45:22,000
过程

3827
01:45:22,000 --> 01:45:24,000
切分为很多很多这样的

3828
01:45:24,000 --> 01:45:25,000
很小的迭代过程

3829
01:45:25,000 --> 01:45:27,000
如果你画成一个图的话

3830
01:45:27,000 --> 01:45:28,000
大概就是

3831
01:45:28,000 --> 01:45:30,000
一个越做越大的软件

3832
01:45:30,000 --> 01:45:32,000
不停的经历这样的 Iteration

3833
01:45:32,000 --> 01:45:35,000
最终画出来就是一个大概螺旋性的

3834
01:45:35,000 --> 01:45:35,000
这么一个

3835
01:45:35,000 --> 01:45:38,000
应该怎么说呢

3836
01:45:38,000 --> 01:45:39,000
进度度

3837
01:45:39,000 --> 01:45:43,000
这就是我刚才提到的

3838
01:45:43,000 --> 01:45:45,000
曝目性和敏捷模型之间的区别

3839
01:45:45,000 --> 01:45:47,000
所以敏捷编程或者说

3840
01:45:47,000 --> 01:45:51,000
极限编程所解决的问题就是

3841
01:45:51,000 --> 01:45:53,000
如何应对需求的改变

3842
01:45:53,000 --> 01:45:54,000
对吧

3843
01:45:54,000 --> 01:45:59,000
那怎么才能知道一个需求的改变

3844
01:45:59,000 --> 01:46:02,000
有没有准确的在

3845
01:46:02,000 --> 01:46:06,000
不管是被更改的软件也好

3846
01:46:06,000 --> 01:46:08,000
还是刚刚写出来的软件的

3847
01:46:08,000 --> 01:46:10,000
新的那一部分里面

3848
01:46:10,000 --> 01:46:12,000
正确的实现出来的呢

3849
01:46:12,000 --> 01:46:16,000
那这个时候软件测试的意义

3850
01:46:16,000 --> 01:46:17,000
也就凸显出来了

3851
01:46:17,000 --> 01:46:22,000
也就是说

3852
01:46:22,000 --> 01:46:22,000
比如说

3853
01:46:22,000 --> 01:46:26,000
客户告诉你说

3854
01:46:26,000 --> 01:46:27,000
这个地方

3855
01:46:27,000 --> 01:46:31,000
我希望他在最终的成品里面

3856
01:46:31,000 --> 01:46:34,000
一个按钮是在另外一个按钮的左边的

3857
01:46:34,000 --> 01:46:35,000
那你就可以写一个测试

3858
01:46:35,000 --> 01:46:39,000
去判断这个两个按钮的 ID

3859
01:46:39,000 --> 01:46:41,000
以及他们之间的相关位置

3860
01:46:41,000 --> 01:46:42,000
是不是正

3861
01:46:42,000 --> 01:46:42,000
比如说

3862
01:46:42,000 --> 01:46:45,000
右边这个按钮的 ID 的 X

3863
01:46:45,000 --> 01:46:47,000
对

3864
01:46:47,000 --> 01:46:49,000
X 减去左边这个按钮的 X

3865
01:46:49,000 --> 01:46:50,000
如果它是正的的话

3866
01:46:50,000 --> 01:46:51,000
你就可以确定说

3867
01:46:51,000 --> 01:46:53,000
这个按钮是在另外一个按钮的右边

3868
01:46:53,000 --> 01:46:56,000
我觉得可以说

3869
01:46:56,000 --> 01:47:00,000
正是敏捷的这个过程

3870
01:47:00,000 --> 01:47:02,000
或者说整个软件工程

3871
01:47:02,000 --> 01:47:03,000
向敏捷的这个方向

3872
01:47:03,000 --> 01:47:05,000
所转移的这样一个

3873
01:47:05,000 --> 01:47:08,000
范式迁移

3874
01:47:08,000 --> 01:47:10,000
导致现在这样一个

3875
01:47:10,000 --> 01:47:12,000
人们相对来说

3876
01:47:12,000 --> 01:47:14,000
比较强调测试的这么一个状态

3877
01:47:14,000 --> 01:47:16,000
所以其实如果归纳来讲

3878
01:47:16,000 --> 01:47:20,000
就是说需求不明确

3879
01:47:20,000 --> 01:47:24,000
然后这个就是形式证明不可能的情况下

3880
01:47:24,000 --> 01:47:26,000
我们只能用测试来尽可能的保障

3881
01:47:26,000 --> 01:47:30,000
我们在快速迭代中

3882
01:47:30,000 --> 01:47:33,000
能够有一个相对稳定的产品质量

3883
01:47:33,000 --> 01:47:38,000
对就是因为测试会给你一个比较清晰的

3884
01:47:38,000 --> 01:47:39,000
一个比较客观的

3885
01:47:39,000 --> 01:47:44,000
关于你的这个软件产品的质量的反应

3886
01:47:44,000 --> 01:47:51,000
所以才能让你有信心去执行一个比较敏捷的

3887
01:47:51,000 --> 01:47:52,000
软件迭代的过程

3888
01:47:52,000 --> 01:47:54,000
因为很有可能说

3889
01:47:54,000 --> 01:47:56,000
如果你不写测试的话

3890
01:47:56,000 --> 01:47:58,000
你可能做了一部分

3891
01:47:58,000 --> 01:48:01,000
去弄坏了另一部分

3892
01:48:01,000 --> 01:48:04,000
而直到你在最后给客户演示的时候

3893
01:48:04,000 --> 01:48:05,000
这个 bug 才暴露出来

3894
01:48:05,000 --> 01:48:07,000
我们知道根据莫非定律

3895
01:48:07,000 --> 01:48:09,000
这种情况是永远会出现的

3896
01:48:09,000 --> 01:48:12,000
而书写足够多的测试

3897
01:48:12,000 --> 01:48:15,000
以及执行所谓回归测试

3898
01:48:15,000 --> 01:48:18,000
可以帮助你减少这种情况的发生

3899
01:48:18,000 --> 01:48:22,000
然后另外一方面

3900
01:48:22,000 --> 01:48:24,000
如果你一定要写测试的话

3901
01:48:24,000 --> 01:48:28,000
首先你得写出能够被测试的代码

3902
01:48:28,000 --> 01:48:30,000
然后这样一来

3903
01:48:30,000 --> 01:48:33,000
你如果在写代码的时候会想到说

3904
01:48:33,000 --> 01:48:34,000
这个地方要被测试了

3905
01:48:34,000 --> 01:48:37,000
那你可能会强迫自己写一些

3906
01:48:37,000 --> 01:48:40,000
比较干净的比较模块化的代码

3907
01:48:40,000 --> 01:48:43,000
然后这也会从另外一方面

3908
01:48:43,000 --> 01:48:47,000
去帮助你提升整个软件的可控程度

3909
01:48:47,000 --> 01:48:48,000
以及整个软件的质量

3910
01:48:48,000 --> 01:48:50,000
然后我们刚才提到的一个

3911
01:48:50,000 --> 01:48:55,000
所谓软件测试驱动开发的

3912
01:48:55,000 --> 01:48:56,000
各种一个概念

3913
01:48:56,000 --> 01:48:58,000
TDD

3914
01:48:58,000 --> 01:49:00,000
对 TDD

3915
01:49:00,000 --> 01:49:01,000
TDD 是什么呢

3916
01:49:01,000 --> 01:49:05,000
就是人们一发现这个驱动

3917
01:49:05,000 --> 01:49:08,000
测试是如此好的这么一个东西

3918
01:49:08,000 --> 01:49:10,000
以至于有些人朝这个

3919
01:49:10,000 --> 01:49:14,000
比较原教旨主义的方向发展

3920
01:49:14,000 --> 01:49:14,000
就说好

3921
01:49:14,000 --> 01:49:17,000
那我们在写软件之前

3922
01:49:17,000 --> 01:49:18,000
先写测试吧

3923
01:49:18,000 --> 01:49:20,000
这就是 TDD

3924
01:49:20,000 --> 01:49:23,000
就是让测试成为需求的一部分

3925
01:49:23,000 --> 01:49:27,000
这还要更进一步了

3926
01:49:27,000 --> 01:49:29,000
我们先说 TDD 吧

3927
01:49:29,000 --> 01:49:31,000
TDD 最基本的一个实践就是

3928
01:49:31,000 --> 01:49:32,000
好

3929
01:49:32,000 --> 01:49:34,000
我上来要写一个 Hello World

3930
01:49:34,000 --> 01:49:37,000
在我写 Hello World 之前

3931
01:49:37,000 --> 01:49:39,000
我要先写一个测试

3932
01:49:39,000 --> 01:49:43,000
来确定我将要写出来的程序

3933
01:49:43,000 --> 01:49:45,000
能够输出 Hello World

3934
01:49:45,000 --> 01:49:47,000
然后我再去写 Hello World

3935
01:49:47,000 --> 01:49:48,000
这是一个非常

3936
01:49:48,000 --> 01:49:50,000
怎么说呢

3937
01:49:50,000 --> 01:49:52,000
一开始听起来会觉得有些疯狂的概念

3938
01:49:52,000 --> 01:49:55,000
就准确的说

3939
01:49:55,000 --> 01:49:57,000
TDD 的执行的三原则是

3940
01:49:57,000 --> 01:50:00,000
一在写出一个测试失败的单元测试之前

3941
01:50:00,000 --> 01:50:02,000
不写功能代表

3942
01:50:02,000 --> 01:50:04,000
这是一个什么概念

3943
01:50:04,000 --> 01:50:06,000
就是我要写一行程序

3944
01:50:06,000 --> 01:50:08,000
但是在我写这行程序之前

3945
01:50:08,000 --> 01:50:09,000
我先要写一个

3946
01:50:09,000 --> 01:50:12,000
没有这行程序就肯定会失败的单元测试

3947
01:50:12,000 --> 01:50:17,000
那你怎么测这个 Hello World

3948
01:50:17,000 --> 01:50:19,000
Hello World 实在太吹狗

3949
01:50:19,000 --> 01:50:21,000
比如说我之前很喜欢的一个

3950
01:50:21,000 --> 01:50:26,000
Cata 就是把阿拉伯数字转为罗马数字

3951
01:50:26,000 --> 01:50:29,000
我要写这个

3952
01:50:29,000 --> 01:50:32,000
比如说我面对一门新的陌生语言

3953
01:50:32,000 --> 01:50:34,000
比如说 Husko 或者 Swift

3954
01:50:34,000 --> 01:50:39,000
我首先可以用其他的语言

3955
01:50:39,000 --> 01:50:43,000
来判断这个语言

3956
01:50:43,000 --> 01:50:45,000
我将要学的这个语言

3957
01:50:45,000 --> 01:50:46,000
所输出的是不是正确的

3958
01:50:46,000 --> 01:50:48,000
比如说我知道阿拉伯数字的 1

3959
01:50:48,000 --> 01:50:50,000
会转为罗马数字的 i

3960
01:50:50,000 --> 01:50:53,000
那我就先写这样一个测试

3961
01:50:53,000 --> 01:50:55,000
这个程序运行之后

3962
01:50:55,000 --> 01:50:58,000
它应该在屏幕上输出

3963
01:50:58,000 --> 01:50:59,000
或者这么说吧

3964
01:50:59,000 --> 01:51:01,000
我将要写的程序

3965
01:51:01,000 --> 01:51:03,000
首先应该接纳一个文本文件

3966
01:51:03,000 --> 01:51:06,000
里面是 1 到 1000 的罗马数字

3967
01:51:06,000 --> 01:51:08,000
Sorry

3968
01:51:08,000 --> 01:51:12,000
首先他应该接受一个文本文件

3969
01:51:12,000 --> 01:51:14,000
然后输出另外一个文本文件

3970
01:51:14,000 --> 01:51:16,000
然后我也需要把它输出这个文文件

3971
01:51:16,000 --> 01:51:19,000
和我的目标文本文件作为对比

3972
01:51:19,000 --> 01:51:22,000
比如说一开始这个

3973
01:51:22,000 --> 01:51:24,000
一开始的文本文件

3974
01:51:24,000 --> 01:51:25,000
只有一个 1

3975
01:51:25,000 --> 01:51:27,000
然后在目标文件

3976
01:51:27,000 --> 01:51:29,000
文本文件面应该有一个 i

3977
01:51:29,000 --> 01:51:31,000
当我准备好了这一切之后

3978
01:51:31,000 --> 01:51:31,000
我才可以

3979
01:51:31,000 --> 01:51:34,000
我才开始着手用这种新的语言

3980
01:51:34,000 --> 01:51:35,000
去写

3981
01:51:35,000 --> 01:51:37,000
我将要写的这个

3982
01:51:37,000 --> 01:51:40,000
我希望写的这个阿拉伯数字

3983
01:51:40,000 --> 01:51:41,000
转成罗马数字的程序

3984
01:51:41,000 --> 01:51:42,000
好

3985
01:51:42,000 --> 01:51:46,000
然后这个 TT 的第二准则是

3986
01:51:46,000 --> 01:51:50,000
只编写恰好能体现一个失败情况的测试代码

3987
01:51:50,000 --> 01:51:53,000
一个比较简单的例子就是说

3988
01:51:53,000 --> 01:51:54,000
你可以判断说

3989
01:51:54,000 --> 01:51:57,000
如果输入是阿拉伯数字 1

3990
01:51:57,000 --> 01:52:00,000
那么输出必然是罗马数字 i

3991
01:52:00,000 --> 01:52:00,000
对

3992
01:52:00,000 --> 01:52:03,000
然后如果你先给它一个

3993
01:52:03,000 --> 01:52:04,000
因为没有功能代码

3994
01:52:04,000 --> 01:52:05,000
就是一个空函数对吧

3995
01:52:05,000 --> 01:52:06,000
对

3996
01:52:06,000 --> 01:52:07,000
那么去输入什么

3997
01:52:07,000 --> 01:52:08,000
出来都是空

3998
01:52:08,000 --> 01:52:09,000
对

3999
01:52:09,000 --> 01:52:11,000
那么你知道这个测试会挂掉

4000
01:52:11,000 --> 01:52:11,000
对

4001
01:52:11,000 --> 01:52:13,000
然后第三条准则是更变态

4002
01:52:13,000 --> 01:52:18,000
说只编写恰好能通过测试的功能代码

4003
01:52:18,000 --> 01:52:19,000
这是什么概念

4004
01:52:19,000 --> 01:52:22,000
就是我们完成了刚才两步

4005
01:52:22,000 --> 01:52:25,000
一在写一个测试失败率

4006
01:52:25,000 --> 01:52:26,000
单元测试之前不写功能代码

4007
01:52:26,000 --> 01:52:31,000
好我写了会让测试失败的单元测试

4008
01:52:31,000 --> 01:52:35,000
二我写了刚好只能通过

4009
01:52:35,000 --> 01:52:38,000
刚好只能体现一个失败情况的测试

4010
01:52:38,000 --> 01:52:41,000
好我在左边的文件里面给了 1

4011
01:52:41,000 --> 01:52:42,000
阿拉伯数字的 1

4012
01:52:42,000 --> 01:52:45,000
右边的文件里面给了拉宁子母 i

4013
01:52:45,000 --> 01:52:46,000
好第三条

4014
01:52:46,000 --> 01:52:49,000
我只编写恰好能通过该测试的功能代码

4015
01:52:49,000 --> 01:52:54,000
我在新的程序里面写说

4016
01:52:54,000 --> 01:52:56,000
if input is e

4017
01:52:56,000 --> 01:52:57,000
then output i

4018
01:52:57,000 --> 01:52:58,000
就可以了

4019
01:52:58,000 --> 01:53:00,000
对吧

4020
01:53:00,000 --> 01:53:01,000
对

4021
01:53:01,000 --> 01:53:08,000
那这样一种比较变态的开发方法

4022
01:53:08,000 --> 01:53:10,000
你仔细想一下

4023
01:53:10,000 --> 01:53:12,000
其实是很难让你

4024
01:53:12,000 --> 01:53:18,000
让一个神志正常的人去接受的

4025
01:53:18,000 --> 01:53:18,000
对吧

4026
01:53:18,000 --> 01:53:20,000
比如说我刚才说了这句话

4027
01:53:20,000 --> 01:53:24,000
你是说 TTP 的践行者神志不正常吗

4028
01:53:24,000 --> 01:53:25,000
我一瞬间

4029
01:53:25,000 --> 01:53:29,000
好

4030
01:53:29,000 --> 01:53:31,000
现在我话说了

4031
01:53:31,000 --> 01:53:34,000
就是如果你是一个神志正常的人的话

4032
01:53:34,000 --> 01:53:36,000
你肯定知道如果输出是

4033
01:53:36,000 --> 01:53:37,000
如果输出是 1

4034
01:53:37,000 --> 01:53:39,000
直接输出 i

4035
01:53:39,000 --> 01:53:42,000
是一个非常蠢的主意

4036
01:53:42,000 --> 01:53:50,000
因为从一开始你就把自己限定在了一个非常着眼欲

4037
01:53:50,000 --> 01:53:52,000
非常短视的这么一个数不尊光的状态

4038
01:53:52,000 --> 01:53:54,000
就是你只看得到输出

4039
01:53:54,000 --> 01:53:55,000
输出是 1

4040
01:53:55,000 --> 01:53:56,000
然后也只输出 1

4041
01:53:56,000 --> 01:53:57,000
打个岔

4042
01:53:57,000 --> 01:54:01,000
你觉得这个方法特别适合外包团队

4043
01:54:01,000 --> 01:54:03,000
因为你给别人干活

4044
01:54:03,000 --> 01:54:05,000
你现在满足他的需求

4045
01:54:05,000 --> 01:54:06,000
他会去测

4046
01:54:06,000 --> 01:54:08,000
然后你干多了没有用

4047
01:54:08,000 --> 01:54:10,000
你只要干他刚刚好就可以了

4048
01:54:10,000 --> 01:54:16,000
事实上也的确是外包团队在最多使用 TTP

4049
01:54:16,000 --> 01:54:19,000
我必须这么说

4050
01:54:19,000 --> 01:54:20,000
好吧

4051
01:54:20,000 --> 01:54:23,000
对

4052
01:54:23,000 --> 01:54:27,000
总之刚才你说的这句话其实是有道理的

4053
01:54:27,000 --> 01:54:29,000
就是使用 TTP 的人神志都不太清楚

4054
01:54:29,000 --> 01:54:32,000
我心里其实很认同这句话

4055
01:54:32,000 --> 01:54:35,000
因为 TTP 就好像安利一样

4056
01:54:35,000 --> 01:54:38,000
就是你只有身陷其中了

4057
01:54:38,000 --> 01:54:41,000
你才会真正的感受到他的好

4058
01:54:41,000 --> 01:54:44,000
我刚才这句话绝对不是一个

4059
01:54:44,000 --> 01:54:47,000
以一种 complement 的方式来说

4060
01:54:47,000 --> 01:54:49,000
就是因为我从来没有深陷其中过

4061
01:54:49,000 --> 01:54:51,000
所以我从来不觉得到他的好

4062
01:54:51,000 --> 01:54:51,000
但是

4063
01:54:51,000 --> 01:54:55,000
somehow some way 我也可以理解

4064
01:54:55,000 --> 01:54:57,000
其用户者所持的这样的观点

4065
01:54:57,000 --> 01:54:59,000
就是别看你使用的这三个原则

4066
01:54:59,000 --> 01:55:00,000
非常的愚蠢

4067
01:55:00,000 --> 01:55:04,000
但是到你开发一个大型软件的后期

4068
01:55:04,000 --> 01:55:10,000
你会发现迁移发而动全身的状况是经常有的

4069
01:55:10,000 --> 01:55:14,000
而如果你能坚持着用这种非常愚蠢的方法

4070
01:55:14,000 --> 01:55:17,000
把每一个最为微小的修改

4071
01:55:17,000 --> 01:55:21,000
都以测试先行的方式写出来的话

4072
01:55:21,000 --> 01:55:24,000
你会发现到后期你犯一点点小错

4073
01:55:24,000 --> 01:55:26,000
都可以马上会发现出来

4074
01:55:26,000 --> 01:55:27,000
而

4075
01:55:27,000 --> 01:55:30,000
所有这些被发现出来的小错

4076
01:55:30,000 --> 01:55:32,000
保证了你这种质量

4077
01:55:32,000 --> 01:55:34,000
OK

4078
01:55:34,000 --> 01:55:34,000
对

4079
01:55:34,000 --> 01:55:36,000
然后刚才你说的这个

4080
01:55:36,000 --> 01:55:39,000
一上来就描述整个系统的 behavior

4081
01:55:39,000 --> 01:55:42,000
那其实是 TDD 更进一步

4082
01:55:42,000 --> 01:55:43,000
叫做 BDD

4083
01:55:43,000 --> 01:55:46,000
Behavior Driven Development

4084
01:55:46,000 --> 01:55:48,000
它的核心理念

4085
01:55:48,000 --> 01:55:49,000
其实就是像你说的

4086
01:55:49,000 --> 01:55:51,000
那至于可以更进一步

4087
01:55:51,000 --> 01:55:53,000
就是不是用代码

4088
01:55:53,000 --> 01:55:56,000
而是用一种比较

4089
01:55:56,000 --> 01:56:01,000
项目经理也能读懂的普通语言

4090
01:56:01,000 --> 01:56:02,000
大白话

4091
01:56:02,000 --> 01:56:02,000
对

4092
01:56:02,000 --> 01:56:03,000
用大白话来

4093
01:56:03,000 --> 01:56:06,000
近似于大白话的普通的简单的句子

4094
01:56:06,000 --> 01:56:10,000
来描述出整个系统的状态

4095
01:56:10,000 --> 01:56:11,000
或者不是整个系统

4096
01:56:11,000 --> 01:56:12,000
是整个组件的状态

4097
01:56:12,000 --> 01:56:15,000
所以这个一个最古老的例子

4098
01:56:15,000 --> 01:56:16,000
就是那个创世纪对吧

4099
01:56:16,000 --> 01:56:18,000
创世纪

4100
01:56:18,000 --> 01:56:19,000
对啊

4101
01:56:19,000 --> 01:56:20,000
因为上帝说要有光嘛

4102
01:56:20,000 --> 01:56:21,000
There's the light

4103
01:56:21,000 --> 01:56:22,000
对

4104
01:56:22,000 --> 01:56:23,000
对

4105
01:56:23,000 --> 01:56:24,000
最早的 BDD

4106
01:56:24,000 --> 01:56:26,000
说的没错

4107
01:56:26,000 --> 01:56:29,000
只不过在 BDD 里面

4108
01:56:29,000 --> 01:56:32,000
这个创世人和

4109
01:56:32,000 --> 01:56:35,000
开发者验收人是同一个人

4110
01:56:35,000 --> 01:56:38,000
这是比较操蛋的一点

4111
01:56:38,000 --> 01:56:40,000
就是上帝只需要说

4112
01:56:40,000 --> 01:56:42,000
上帝看着这一切是好的

4113
01:56:42,000 --> 01:56:43,000
就可以了

4114
01:56:43,000 --> 01:56:45,000
而不是验收通过

4115
01:56:45,000 --> 01:56:48,000
而不是上帝的老婆看到这一切

4116
01:56:48,000 --> 01:56:49,000
把上帝揍了一顿之类的

4117
01:56:49,000 --> 01:56:52,000
对

4118
01:56:52,000 --> 01:56:54,000
你在写

4119
01:56:54,000 --> 01:56:55,000
BDD 的

4120
01:56:55,000 --> 01:56:56,000
你说什么

4121
01:56:56,000 --> 01:56:58,000
太不严肃了

4122
01:56:58,000 --> 01:56:58,000
对

4123
01:56:58,000 --> 01:57:02,000
我们两个都是不可

4124
01:57:02,000 --> 01:57:03,000
我不知道你

4125
01:57:03,000 --> 01:57:04,000
我是不可知论者

4126
01:57:04,000 --> 01:57:04,000
所以

4127
01:57:04,000 --> 01:57:06,000
上帝就是一部

4128
01:57:06,000 --> 01:57:07,000
bushit

4129
01:57:07,000 --> 01:57:14,000
我希望没有

4130
01:57:14,000 --> 01:57:17,000
inzult 到足够少

4131
01:57:17,000 --> 01:57:18,000
我觉得已经发生了

4132
01:57:18,000 --> 01:57:18,000
但是

4133
01:57:18,000 --> 01:57:19,000
doesn't matter

4134
01:57:19,000 --> 01:57:22,000
对

4135
01:57:22,000 --> 01:57:23,000
对

4136
01:57:23,000 --> 01:57:24,000
你在写这个 BDD 的

4137
01:57:24,000 --> 01:57:27,000
测试行为描述的时候

4138
01:57:27,000 --> 01:57:29,000
就会很有那种上帝的感觉

4139
01:57:29,000 --> 01:57:30,000
plague off

4140
01:57:30,000 --> 01:57:31,000
你可以说

4141
01:57:31,000 --> 01:57:34,000
it should

4142
01:57:34,000 --> 01:57:38,000
through division by zero

4143
01:57:38,000 --> 01:57:38,000
error

4144
01:57:38,000 --> 01:57:41,000
when input is given by zero

4145
01:57:41,000 --> 01:57:43,000
之类的句子

4146
01:57:43,000 --> 01:57:44,000
然后

4147
01:57:44,000 --> 01:57:46,000
比较

4148
01:57:46,000 --> 01:57:47,000
比较

4149
01:57:47,000 --> 01:57:48,000
比较牛逼的

4150
01:57:48,000 --> 01:57:48,000
这个

4151
01:57:48,000 --> 01:57:49,000
BDD 的工具

4152
01:57:49,000 --> 01:57:50,000
比如说

4153
01:57:50,000 --> 01:57:52,000
cucumber

4154
01:57:52,000 --> 01:57:53,000
对

4155
01:57:53,000 --> 01:57:53,000
应该是 cucumber

4156
01:57:53,000 --> 01:57:55,000
可以让

4157
01:57:55,000 --> 01:57:56,000
可以

4158
01:57:56,000 --> 01:57:56,000
有一个工具

4159
01:57:56,000 --> 01:57:57,000
可以自然而然的

4160
01:57:57,000 --> 01:57:58,000
把你的这些

4161
01:57:58,000 --> 01:57:59,000
对于

4162
01:57:59,000 --> 01:58:02,000
整个组件的

4163
01:58:02,000 --> 01:58:03,000
行为的描述

4164
01:58:03,000 --> 01:58:05,000
转化为相应的测试代码

4165
01:58:05,000 --> 01:58:07,000
然后

4166
01:58:07,000 --> 01:58:08,000
自动的

4167
01:58:08,000 --> 01:58:09,000
在你写出来之后

4168
01:58:09,000 --> 01:58:10,000
我帮你执行

4169
01:58:10,000 --> 01:58:11,000
这就是更

4170
01:58:11,000 --> 01:58:12,000
要用那个

4171
01:58:12,000 --> 01:58:14,000
NLP 的方式来去

4172
01:58:14,000 --> 01:58:15,000
解析那些东西吗

4173
01:58:15,000 --> 01:58:16,000
其实是一个

4174
01:58:16,000 --> 01:58:17,000
非常简单的

4175
01:58:17,000 --> 01:58:18,000
regular expression

4176
01:58:18,000 --> 01:58:19,000
如果没记错吧

4177
01:58:19,000 --> 01:58:20,000
OK

4178
01:58:20,000 --> 01:58:21,000
就是用一些

4179
01:58:21,000 --> 01:58:23,000
比较规则的结构

4180
01:58:23,000 --> 01:58:24,000
去描述那个

4181
01:58:24,000 --> 01:58:25,000
首先你在写

4182
01:58:25,000 --> 01:58:26,000
那个

4183
01:58:26,000 --> 01:58:28,000
behavior description 的时候

4184
01:58:28,000 --> 01:58:29,000
就不能用

4185
01:58:29,000 --> 01:58:30,000
完全的自然语

4186
01:58:30,000 --> 01:58:32,000
你必须用一个

4187
01:58:32,000 --> 01:58:33,000
用一些特定的句子

4188
01:58:33,000 --> 01:58:33,000
就像你说

4189
01:58:33,000 --> 01:58:34,000
你在

4190
01:58:34,000 --> 01:58:36,000
指使 Curray

4191
01:58:36,000 --> 01:58:37,000
去做什么事情的时候

4192
01:58:37,000 --> 01:58:38,000
你必须用一个

4193
01:58:38,000 --> 01:58:38,000
特定的

4194
01:58:38,000 --> 01:58:39,000
范式的句子

4195
01:58:39,000 --> 01:58:40,000
然后

4196
01:58:40,000 --> 01:58:41,000
TDD 的这个

4197
01:58:41,000 --> 01:58:42,000
描述员

4198
01:58:42,000 --> 01:58:43,000
你跟它比较相似

4199
01:58:43,000 --> 01:58:44,000
就是你必须用一些

4200
01:58:44,000 --> 01:58:45,000
特定的句子

4201
01:58:45,000 --> 01:58:46,000
it should

4202
01:58:46,000 --> 01:58:47,000
之类的

4203
01:58:47,000 --> 01:58:47,000
对

4204
01:58:47,000 --> 01:58:48,000
其实你知道

4205
01:58:48,000 --> 01:58:49,000
这个时候

4206
01:58:49,000 --> 01:58:50,000
为什么比较讨厌

4207
01:58:50,000 --> 01:58:51,000
这种

4208
01:58:51,000 --> 01:58:51,000
BDD 的

4209
01:58:51,000 --> 01:58:53,000
那个 test suite

4210
01:58:53,000 --> 01:58:55,000
的一个原因就是

4211
01:58:55,000 --> 01:58:57,000
感觉好像

4212
01:58:57,000 --> 01:58:58,000
AppleScript

4213
01:58:58,000 --> 01:59:00,000
对

4214
01:59:00,000 --> 01:59:01,000
看起来好像

4215
01:59:01,000 --> 01:59:02,000
在写中

4216
01:59:02,000 --> 01:59:02,000
但是又

4217
01:59:02,000 --> 01:59:04,000
没有真的

4218
01:59:04,000 --> 01:59:04,000
又不是

4219
01:59:04,000 --> 01:59:05,000
对

4220
01:59:05,000 --> 01:59:06,000
然后你就很难

4221
01:59:06,000 --> 01:59:07,000
去谋伙到

4222
01:59:07,000 --> 01:59:07,000
我要到底

4223
01:59:07,000 --> 01:59:09,000
写一个什么样的语句

4224
01:59:09,000 --> 01:59:10,000
才能够满足

4225
01:59:10,000 --> 01:59:11,000
它生成一个

4226
01:59:11,000 --> 01:59:12,000
可以被它执行的

4227
01:59:12,000 --> 01:59:13,000
test case

4228
01:59:13,000 --> 01:59:14,000
就很郁闷

4229
01:59:14,000 --> 01:59:15,000
那不要搞这个

4230
01:59:15,000 --> 01:59:16,000
直接给它写

4231
01:59:16,000 --> 01:59:17,000
一个正常的语句

4232
01:59:17,000 --> 01:59:17,000
好不好

4233
01:59:17,000 --> 01:59:18,000
对

4234
01:59:18,000 --> 01:59:19,000
这可能就是

4235
01:59:19,000 --> 01:59:20,000
怎么说呢

4236
01:59:20,000 --> 01:59:21,000
编程语言们

4237
01:59:21,000 --> 01:59:22,000
编程语言里面的

4238
01:59:22,000 --> 01:59:23,000
恐怖古理

4239
01:59:23,000 --> 01:59:25,000
就是你要么写

4240
01:59:25,000 --> 01:59:26,000
非常非常贴近

4241
01:59:26,000 --> 01:59:27,000
机器的

4242
01:59:27,000 --> 01:59:27,000
编程语言

4243
01:59:27,000 --> 01:59:28,000
你要么就直接

4244
01:59:28,000 --> 01:59:29,000
用自然语言

4245
01:59:29,000 --> 01:59:31,000
要不你就逻辑一点

4246
01:59:31,000 --> 01:59:31,000
要不你就

4247
01:59:31,000 --> 01:59:32,000
就真的是

4248
01:59:32,000 --> 01:59:33,000
自然语言

4249
01:59:33,000 --> 01:59:33,000
你能分析出来

4250
01:59:33,000 --> 01:59:34,000
但是你在这个

4251
01:59:34,000 --> 01:59:34,000
建议之间

4252
01:59:34,000 --> 01:59:36,000
就不忠不息的

4253
01:59:36,000 --> 01:59:38,000
非常特别不爽

4254
01:59:38,000 --> 01:59:38,000
而且

4255
01:59:38,000 --> 01:59:39,000
而且就是

4256
01:59:39,000 --> 01:59:40,000
就是

4257
01:59:40,000 --> 01:59:42,000
就是用 BDD 的

4258
01:59:42,000 --> 01:59:42,000
践行者

4259
01:59:42,000 --> 01:59:43,000
经常会在

4260
01:59:43,000 --> 01:59:44,000
可能 Ruby 是这个

4261
01:59:44,000 --> 01:59:45,000
算命名做的

4262
01:59:45,000 --> 01:59:46,000
比较极端的吧

4263
01:59:46,000 --> 01:59:46,000
Ruby 啊

4264
01:59:46,000 --> 01:59:47,000
Scala 这种也好

4265
01:59:47,000 --> 01:59:49,000
它会把那个 DSL

4266
01:59:49,000 --> 01:59:51,000
就是 Domain Specific Language

4267
01:59:51,000 --> 01:59:53,000
特性用到极致

4268
01:59:53,000 --> 01:59:54,000
对

4269
01:59:54,000 --> 01:59:55,000
发现一些

4270
01:59:55,000 --> 01:59:56,000
匪夷所思的语法

4271
01:59:56,000 --> 01:59:57,000
在那里用着

4272
01:59:57,000 --> 01:59:58,000
没错

4273
01:59:58,000 --> 01:59:59,000
相当坑点

4274
01:59:59,000 --> 02:00:00,000
谁叫他们灵活

4275
02:00:00,000 --> 02:00:02,000
灵活有灵活的代价

4276
02:00:02,000 --> 02:00:04,000
好吧

4277
02:00:04,000 --> 02:00:07,000
对

4278
02:00:07,000 --> 02:00:08,000
所以其实就可以

4279
02:00:08,000 --> 02:00:10,000
过度到我们的

4280
02:00:10,000 --> 02:00:13,000
下一个重点

4281
02:00:13,000 --> 02:00:13,000
就是

4282
02:00:13,000 --> 02:00:15,000
为什么人们讨厌测试

4283
02:00:15,000 --> 02:00:16,000
或者说

4284
02:00:16,000 --> 02:00:17,000
为什么人们

4285
02:00:17,000 --> 02:00:19,000
会觉得测试

4286
02:00:19,000 --> 02:00:20,000
是可有可无的东西

4287
02:00:20,000 --> 02:00:23,000
你为什么讨厌测试

4288
02:00:23,000 --> 02:00:24,000
或者你为什么

4289
02:00:24,000 --> 02:00:25,000
不喜欢写测试

4290
02:00:25,000 --> 02:00:27,000
因为我觉得吧

4291
02:00:27,000 --> 02:00:27,000
就是

4292
02:00:27,000 --> 02:00:28,000
刚才我讲

4293
02:00:28,000 --> 02:00:30,000
我喜欢有一些

4294
02:00:30,000 --> 02:00:30,000
确定性的

4295
02:00:30,000 --> 02:00:32,000
经过形式证明的东西

4296
02:00:32,000 --> 02:00:33,000
就是说

4297
02:00:33,000 --> 02:00:34,000
我写了这么一组

4298
02:00:34,000 --> 02:00:35,000
小张代码

4299
02:00:35,000 --> 02:00:37,000
经过严密的理论推敲

4300
02:00:37,000 --> 02:00:39,000
它是不可能出错的

4301
02:00:39,000 --> 02:00:40,000
我觉得

4302
02:00:40,000 --> 02:00:41,000
这是好的

4303
02:00:41,000 --> 02:00:42,000
然后你刚才突然

4304
02:00:42,000 --> 02:00:44,000
跳起来给我说

4305
02:00:44,000 --> 02:00:44,000
不对

4306
02:00:44,000 --> 02:00:45,000
你这个太麻烦了

4307
02:00:45,000 --> 02:00:46,000
有些你做不到

4308
02:00:46,000 --> 02:00:47,000
我这个代码

4309
02:00:47,000 --> 02:00:47,000
有

4310
02:00:47,000 --> 02:00:48,000
有 200 行长

4311
02:00:48,000 --> 02:00:49,000
你怎么

4312
02:00:49,000 --> 02:00:50,000
你怎么证明它

4313
02:00:50,000 --> 02:00:50,000
对吧

4314
02:00:50,000 --> 02:00:51,000
还有在这个什么

4315
02:00:51,000 --> 02:00:53,000
就是什么叫做

4316
02:00:53,000 --> 02:00:55,000
非确定性的

4317
02:00:55,000 --> 02:00:57,000
indeterministic

4318
02:00:57,000 --> 02:00:57,000
对吧

4319
02:00:57,000 --> 02:01:00,000
要你怎么去

4320
02:01:00,000 --> 02:01:01,000
去形式证明它

4321
02:01:01,000 --> 02:01:01,000
没有办法

4322
02:01:01,000 --> 02:01:03,000
那么我们来个

4323
02:01:03,000 --> 02:01:03,000
2 HT 字

4324
02:01:03,000 --> 02:01:04,000
写测试

4325
02:01:04,000 --> 02:01:08,000
写的 50 个 unit test

4326
02:01:08,000 --> 02:01:09,000
这个 cases

4327
02:01:09,000 --> 02:01:11,000
可能覆盖到

4328
02:01:11,000 --> 02:01:12,000
大多数常见

4329
02:01:12,000 --> 02:01:13,000
和不常见的情况

4330
02:01:13,000 --> 02:01:15,000
然后你都都跑通了

4331
02:01:15,000 --> 02:01:15,000
那么觉得

4332
02:01:15,000 --> 02:01:16,000
在心理上

4333
02:01:16,000 --> 02:01:17,000
有一定的把握

4334
02:01:17,000 --> 02:01:18,000
证明这个事情是可行的

4335
02:01:18,000 --> 02:01:19,000
但是

4336
02:01:19,000 --> 02:01:20,000
我还是有一种

4337
02:01:20,000 --> 02:01:21,000
深深的不安的感觉

4338
02:01:21,000 --> 02:01:22,000
总觉得

4339
02:01:22,000 --> 02:01:23,000
万一有一个情况

4340
02:01:23,000 --> 02:01:24,000
没覆盖到

4341
02:01:24,000 --> 02:01:24,000
怎么办

4342
02:01:24,000 --> 02:01:28,000
然后就觉得

4343
02:01:28,000 --> 02:01:29,000
还是从逻辑上

4344
02:01:29,000 --> 02:01:30,000
去一层一层分析它

4345
02:01:30,000 --> 02:01:31,000
哪里方会出错

4346
02:01:31,000 --> 02:01:32,000
哪里方会

4347
02:01:32,000 --> 02:01:34,000
会跳出

4348
02:01:34,000 --> 02:01:35,000
这样会比较好

4349
02:01:35,000 --> 02:01:36,000
当然这也是一个

4350
02:01:36,000 --> 02:01:37,000
间接的原因

4351
02:01:37,000 --> 02:01:38,000
导致为什么我不喜欢

4352
02:01:38,000 --> 02:01:40,000
异常机制

4353
02:01:40,000 --> 02:01:41,000
就是 exception mechanism

4354
02:01:41,000 --> 02:01:43,000
因为它会导致你逻辑

4355
02:01:43,000 --> 02:01:44,000
control flow

4356
02:01:44,000 --> 02:01:47,000
是多重的 exit point

4357
02:01:47,000 --> 02:01:48,000
对吧

4358
02:01:48,000 --> 02:01:50,000
这样会导致你整个状态

4359
02:01:50,000 --> 02:01:51,000
是不干净的

4360
02:01:51,000 --> 02:01:53,000
如果你状态不干净的话

4361
02:01:53,000 --> 02:01:54,000
你就很难去

4362
02:01:54,000 --> 02:01:58,000
用 formal verification 的方法

4363
02:01:58,000 --> 02:01:58,000
去验证它

4364
02:01:58,000 --> 02:01:59,000
或者说

4365
02:01:59,000 --> 02:02:01,000
你很难用推理的方法

4366
02:02:01,000 --> 02:02:03,000
去证明它是不可能出错的

4367
02:02:03,000 --> 02:02:06,000
这是一些相关的问题

4368
02:02:06,000 --> 02:02:06,000
我觉得

4369
02:02:06,000 --> 02:02:09,000
然后写册是一个很痛苦的过程

4370
02:02:09,000 --> 02:02:10,000
对

4371
02:02:10,000 --> 02:02:13,000
我觉得很大一个原因就是

4372
02:02:13,000 --> 02:02:16,000
为什么会说写册是一个

4373
02:02:16,000 --> 02:02:17,000
很痛苦的过程

4374
02:02:17,000 --> 02:02:18,000
就是因为

4375
02:02:18,000 --> 02:02:19,000
它没有给你

4376
02:02:19,000 --> 02:02:21,000
它不会给你一种

4377
02:02:21,000 --> 02:02:23,000
achievement 的感觉

4378
02:02:23,000 --> 02:02:25,000
你写测试是不会有成就的

4379
02:02:25,000 --> 02:02:28,000
你不会觉得自己在创造新的东西

4380
02:02:28,000 --> 02:02:29,000
你只是

4381
02:02:29,000 --> 02:02:32,000
你只是在做一件

4382
02:02:32,000 --> 02:02:34,000
比如说给别人批作业

4383
02:02:34,000 --> 02:02:36,000
或者是写完了卷的时候

4384
02:02:36,000 --> 02:02:38,000
在那边验算自己

4385
02:02:38,000 --> 02:02:39,000
写的对不对

4386
02:02:39,000 --> 02:02:39,000
这样一种

4387
02:02:39,000 --> 02:02:40,000
对

4388
02:02:40,000 --> 02:02:42,000
就刚才我讲

4389
02:02:42,000 --> 02:02:43,000
你写代码的时候

4390
02:02:43,000 --> 02:02:45,000
你有一种创造的快感

4391
02:02:45,000 --> 02:02:45,000
对吧

4392
02:02:45,000 --> 02:02:46,000
creation

4393
02:02:46,000 --> 02:02:47,000
就是这种感觉的

4394
02:02:47,000 --> 02:02:49,000
你就一种上帝的视角

4395
02:02:49,000 --> 02:02:49,000
在那边

4396
02:02:49,000 --> 02:02:51,000
然后你证明它的时候

4397
02:02:51,000 --> 02:02:51,000
你有一种

4398
02:02:51,000 --> 02:02:53,000
我不知道有些人做数学题

4399
02:02:53,000 --> 02:02:54,000
它证明那道很难的题

4400
02:02:54,000 --> 02:02:55,000
它可能会有一种快感

4401
02:02:55,000 --> 02:02:56,000
其实写那个

4402
02:02:56,000 --> 02:02:58,000
就是写那个 form of verification

4403
02:02:58,000 --> 02:03:00,000
其实有类似的作用

4404
02:03:00,000 --> 02:03:01,000
但是你说写测试

4405
02:03:01,000 --> 02:03:03,000
感觉就好像什么呢

4406
02:03:03,000 --> 02:03:04,000
就为了证明到数学题

4407
02:03:04,000 --> 02:03:06,000
你只拿个计算机在那儿按

4408
02:03:06,000 --> 02:03:07,000
说先输入一个 5

4409
02:03:07,000 --> 02:03:08,000
得出是 50

4410
02:03:08,000 --> 02:03:10,000
结果是先输入一个 6

4411
02:03:10,000 --> 02:03:11,000
得出是 600

4412
02:03:11,000 --> 02:03:12,000
你觉得

4413
02:03:12,000 --> 02:03:13,000
这是对的

4414
02:03:13,000 --> 02:03:14,000
一切都没错

4415
02:03:14,000 --> 02:03:16,000
写的这么做重复做

4416
02:03:16,000 --> 02:03:16,000
设了 100 次

4417
02:03:16,000 --> 02:03:17,000
你觉得

4418
02:03:17,000 --> 02:03:18,000
我这个过程应该是正确的

4419
02:03:18,000 --> 02:03:19,000
我这个答案应该是正确的

4420
02:03:19,000 --> 02:03:20,000
因为我测试了 100 个

4421
02:03:20,000 --> 02:03:21,000
觉得都是正确

4422
02:03:21,000 --> 02:03:22,000
但其实没有经过证明

4423
02:03:22,000 --> 02:03:23,000
你还是不确定

4424
02:03:23,000 --> 02:03:25,000
就没有那个成就感

4425
02:03:25,000 --> 02:03:27,000
就是一个很机械的劳动

4426
02:03:27,000 --> 02:03:27,000
我觉得

4427
02:03:27,000 --> 02:03:28,000
对

4428
02:03:28,000 --> 02:03:31,000
另外一方面也是因为

4429
02:03:31,000 --> 02:03:32,000
我们就是

4430
02:03:32,000 --> 02:03:34,000
从来没有在

4431
02:03:34,000 --> 02:03:35,000
哪怕科班出身的人

4432
02:03:35,000 --> 02:03:37,000
都很难会说

4433
02:03:37,000 --> 02:03:39,000
自己曾经在求学

4434
02:03:39,000 --> 02:03:40,000
就学编程的过程中

4435
02:03:40,000 --> 02:03:41,000
学得过

4436
02:03:41,000 --> 02:03:43,000
怎样写测试

4437
02:03:43,000 --> 02:03:44,000
我相信

4438
02:03:44,000 --> 02:03:48,000
应该现在没有

4439
02:03:48,000 --> 02:03:48,000
哪个大学里面

4440
02:03:48,000 --> 02:03:50,000
会专门开始软件测试

4441
02:03:50,000 --> 02:03:51,000
这一个课程吧

4442
02:03:51,000 --> 02:03:51,000
哪怕是

4443
02:03:51,000 --> 02:03:54,000
会在 soft engineer 里面

4444
02:03:54,000 --> 02:03:55,000
作为一个

4445
02:03:55,000 --> 02:03:56,000
使用的工具

4446
02:03:56,000 --> 02:03:57,000
去讲

4447
02:03:57,000 --> 02:03:59,000
这个我有体会

4448
02:03:59,000 --> 02:04:00,000
OK

4449
02:04:00,000 --> 02:04:02,000
所以你还是偷偷善过

4450
02:04:02,000 --> 02:04:02,000
软件工程了

4451
02:04:02,000 --> 02:04:03,000
没

4452
02:04:03,000 --> 02:04:05,000
但是我做过助教

4453
02:04:05,000 --> 02:04:07,000
啊哈

4454
02:04:07,000 --> 02:04:08,000
原来如此

4455
02:04:08,000 --> 02:04:09,000
对

4456
02:04:09,000 --> 02:04:12,000
但是

4457
02:04:12,000 --> 02:04:13,000
科班出身的人

4458
02:04:13,000 --> 02:04:15,000
可能有这样一个机会

4459
02:04:15,000 --> 02:04:15,000
但是那些

4460
02:04:15,000 --> 02:04:16,000
自学成材的人

4461
02:04:16,000 --> 02:04:17,000
可能就完全没有

4462
02:04:17,000 --> 02:04:19,000
学过

4463
02:04:19,000 --> 02:04:20,000
怎样才能写

4464
02:04:20,000 --> 02:04:20,000
怎样

4465
02:04:20,000 --> 02:04:22,000
怎样去写测试

4466
02:04:22,000 --> 02:04:23,000
乃至于怎样

4467
02:04:23,000 --> 02:04:24,000
写出可以被测试的代码

4468
02:04:24,000 --> 02:04:26,000
而我们必须承认的也是

4469
02:04:26,000 --> 02:04:28,000
哪怕对于一个

4470
02:04:28,000 --> 02:04:28,000
很

4471
02:04:28,000 --> 02:04:29,000
就编程编的

4472
02:04:29,000 --> 02:04:30,000
相对熟练的人来说

4473
02:04:30,000 --> 02:04:31,000
你要他

4474
02:04:31,000 --> 02:04:33,000
去适应一个

4475
02:04:33,000 --> 02:04:34,000
把所有代码

4476
02:04:34,000 --> 02:04:36,000
都写的

4477
02:04:36,000 --> 02:04:37,000
易于测试的

4478
02:04:37,000 --> 02:04:38,000
这么一个

4479
02:04:38,000 --> 02:04:39,000
写出易于测试

4480
02:04:39,000 --> 02:04:40,000
这么一个风格来

4481
02:04:40,000 --> 02:04:42,000
也其实挺难的

4482
02:04:42,000 --> 02:04:43,000
一点

4483
02:04:43,000 --> 02:04:45,000
就

4484
02:04:45,000 --> 02:04:48,000
尤其是

4485
02:04:48,000 --> 02:04:49,000
有时候

4486
02:04:49,000 --> 02:04:50,000
可以测试的代码

4487
02:04:50,000 --> 02:04:52,000
跟不啰嗦的代码

4488
02:04:52,000 --> 02:04:53,000
其实是非常相

4489
02:04:53,000 --> 02:04:55,000
彼此抵触的

4490
02:04:55,000 --> 02:04:55,000
这么一个

4491
02:04:55,000 --> 02:04:56,000
一个状态

4492
02:04:56,000 --> 02:04:57,000
就是有时候

4493
02:04:57,000 --> 02:04:59,000
也许你可以判断

4494
02:04:59,000 --> 02:04:59,000
一个条件

4495
02:04:59,000 --> 02:05:00,000
测试必然啰嗦

4496
02:05:00,000 --> 02:05:04,000
可测试的代码

4497
02:05:04,000 --> 02:05:05,000
必然是啰嗦

4498
02:05:05,000 --> 02:05:06,000
测试本身

4499
02:05:06,000 --> 02:05:07,000
当然是

4500
02:05:07,000 --> 02:05:08,000
就是完全是

4501
02:05:08,000 --> 02:05:09,000
不必要的废话

4502
02:05:09,000 --> 02:05:11,000
但可测试的代码

4503
02:05:11,000 --> 02:05:13,000
为了保证其可测试性

4504
02:05:13,000 --> 02:05:15,000
可能要比不可测试的代码

4505
02:05:15,000 --> 02:05:15,000
落实很多

4506
02:05:15,000 --> 02:05:16,000
比如说

4507
02:05:16,000 --> 02:05:17,000
可能有一个边界条件

4508
02:05:17,000 --> 02:05:18,000
你要去检测

4509
02:05:18,000 --> 02:05:19,000
这个边界条件

4510
02:05:19,000 --> 02:05:21,000
同时根据这个边界条件

4511
02:05:21,000 --> 02:05:22,000
给某一个数值

4512
02:05:22,000 --> 02:05:24,000
同时根据这个边界条件

4513
02:05:24,000 --> 02:05:25,000
去改变某一个数值

4514
02:05:25,000 --> 02:05:27,000
那如果不需要写测试的话

4515
02:05:27,000 --> 02:05:28,000
你可以

4516
02:05:28,000 --> 02:05:29,000
直接

4517
02:05:29,000 --> 02:05:31,000
测试

4518
02:05:31,000 --> 02:05:32,000
直接去

4519
02:05:32,000 --> 02:05:34,000
测验这个

4520
02:05:34,000 --> 02:05:35,000
验证这个边界条件

4521
02:05:35,000 --> 02:05:36,000
并且同

4522
02:05:36,000 --> 02:05:37,000
并且马上再改数值

4523
02:05:37,000 --> 02:05:40,000
但是如果你要为了把这个

4524
02:05:40,000 --> 02:05:42,000
这一部分的功能做了可以测试的话

4525
02:05:42,000 --> 02:05:43,000
你可能会要

4526
02:05:43,000 --> 02:05:45,000
你可能会需要把那个修改

4527
02:05:45,000 --> 02:05:47,000
数值那部分单独立出去

4528
02:05:47,000 --> 02:05:48,000
专门去测量

4529
02:05:48,000 --> 02:05:49,000
先去

4530
02:05:49,000 --> 02:05:51,000
先来测量一下这个边界条件

4531
02:05:51,000 --> 02:05:51,000
对

4532
02:05:51,000 --> 02:05:52,000
诸如此类的

4533
02:05:52,000 --> 02:05:53,000
都让人觉得

4534
02:05:53,000 --> 02:05:54,000
何必呢

4535
02:05:54,000 --> 02:05:57,000
就刚才那个提到那个

4536
02:05:57,000 --> 02:05:59,000
你说科班那个培养的

4537
02:05:59,000 --> 02:06:01,000
训练的都没有训练

4538
02:06:01,000 --> 02:06:01,000
这个写测试代码

4539
02:06:01,000 --> 02:06:02,000
我想补充一点

4540
02:06:02,000 --> 02:06:03,000
就刚才我讲

4541
02:06:03,000 --> 02:06:04,000
哪怕是就我

4542
02:06:04,000 --> 02:06:05,000
我做过这个软件工程

4543
02:06:05,000 --> 02:06:06,000
这种课的助教

4544
02:06:06,000 --> 02:06:07,000
我去看到他们那些培训

4545
02:06:07,000 --> 02:06:08,000
其实

4546
02:06:08,000 --> 02:06:10,000
我的感觉在现在的

4547
02:06:10,000 --> 02:06:11,000
大学的教育里面

4548
02:06:11,000 --> 02:06:12,000
还是没有把这个事情

4549
02:06:12,000 --> 02:06:13,000
放到一个

4550
02:06:13,000 --> 02:06:14,000
非常重要的地位上来去讲

4551
02:06:14,000 --> 02:06:16,000
可能一方面是因为

4552
02:06:16,000 --> 02:06:17,000
大学的一个

4553
02:06:17,000 --> 02:06:18,000
一个定位吧

4554
02:06:18,000 --> 02:06:19,000
就他并不是说

4555
02:06:19,000 --> 02:06:20,000
变成我不是一个

4556
02:06:20,000 --> 02:06:21,000
Vacation School

4557
02:06:21,000 --> 02:06:22,000
Vacational School

4558
02:06:22,000 --> 02:06:23,000
就是不是一个

4559
02:06:23,000 --> 02:06:23,000
职业技术学院

4560
02:06:23,000 --> 02:06:24,000
对吧

4561
02:06:24,000 --> 02:06:25,000
我并不是要培养出

4562
02:06:25,000 --> 02:06:26,000
一帮产业公务

4563
02:06:26,000 --> 02:06:27,000
要能够上线直接用的

4564
02:06:27,000 --> 02:06:29,000
而是说培养一种思维

4565
02:06:29,000 --> 02:06:32,000
这种是这种定性的方

4566
02:06:32,000 --> 02:06:34,000
这个出发点

4567
02:06:34,000 --> 02:06:35,000
会导致他们会侵蚀

4568
02:06:35,000 --> 02:06:36,000
就重视原理

4569
02:06:36,000 --> 02:06:37,000
侵蚀实践

4570
02:06:37,000 --> 02:06:39,000
而测试属于那种

4571
02:06:39,000 --> 02:06:41,000
实践远远超过原理的东西

4572
02:06:41,000 --> 02:06:42,000
就哪怕是在

4573
02:06:42,000 --> 02:06:43,000
现在的一些大学里面

4574
02:06:43,000 --> 02:06:45,000
开软件工程的课里面

4575
02:06:45,000 --> 02:06:46,000
他对测试

4576
02:06:46,000 --> 02:06:46,000
怎么写

4577
02:06:46,000 --> 02:06:47,000
都只是极限说

4578
02:06:47,000 --> 02:06:50,000
我再给你展示一个案例

4579
02:06:50,000 --> 02:06:51,000
然后你剩下的原理

4580
02:06:51,000 --> 02:06:52,000
你自己去看数据吧

4581
02:06:52,000 --> 02:06:53,000
我可以去讲一些

4582
02:06:53,000 --> 02:06:53,000
大的原则

4583
02:06:53,000 --> 02:06:55,000
他并不会告诉你

4584
02:06:55,000 --> 02:06:55,000
说话说

4585
02:06:55,000 --> 02:06:56,000
他告诉你

4586
02:06:56,000 --> 02:06:57,000
怎么去实操这个东西

4587
02:06:57,000 --> 02:06:59,000
所以这也难怪

4588
02:06:59,000 --> 02:07:01,000
你说就哪怕是科班出生的

4589
02:07:01,000 --> 02:07:03,000
他也不会有特别好的

4590
02:07:03,000 --> 02:07:05,000
这种实践的经验

4591
02:07:05,000 --> 02:07:05,000
去写测试

4592
02:07:05,000 --> 02:07:07,000
其实也就牵涉了

4593
02:07:07,000 --> 02:07:08,000
另外一个问题

4594
02:07:08,000 --> 02:07:10,000
就是作为工程学的

4595
02:07:10,000 --> 02:07:11,000
计算机软件

4596
02:07:11,000 --> 02:07:13,000
其实可以作为一种将

4597
02:07:13,000 --> 02:07:15,000
就是所谓的

4598
02:07:15,000 --> 02:07:16,000
craftsmanship

4599
02:07:16,000 --> 02:07:19,000
他其实更适合

4600
02:07:19,000 --> 02:07:21,000
使用这种

4601
02:07:21,000 --> 02:07:23,000
就是工匠制

4602
02:07:23,000 --> 02:07:24,000
或者说学徒制的方法

4603
02:07:24,000 --> 02:07:25,000
来传授

4604
02:07:25,000 --> 02:07:27,000
强调实践

4605
02:07:27,000 --> 02:07:32,000
强调经验的传承

4606
02:07:32,000 --> 02:07:33,000
强调手把手

4607
02:07:33,000 --> 02:07:35,000
比如说敏捷编程里面

4608
02:07:35,000 --> 02:07:36,000
有一个很重要的原则

4609
02:07:36,000 --> 02:07:37,000
就是截对编程

4610
02:07:37,000 --> 02:07:40,000
两个程序员

4611
02:07:40,000 --> 02:07:41,000
共用一个键盘

4612
02:07:41,000 --> 02:07:42,000
共用一个鼠标

4613
02:07:42,000 --> 02:07:43,000
共用一个屏幕

4614
02:07:43,000 --> 02:07:44,000
这其实是

4615
02:07:44,000 --> 02:07:45,000
同样也是

4616
02:07:45,000 --> 02:07:47,000
就像 TDD 那三个原则一样

4617
02:07:47,000 --> 02:07:50,000
非常难以接受的一件事情

4618
02:07:50,000 --> 02:07:52,000
但是其

4619
02:07:52,000 --> 02:07:54,000
就是会

4620
02:07:54,000 --> 02:07:55,000
就像安利一样

4621
02:07:55,000 --> 02:07:56,000
喜欢他的人

4622
02:07:56,000 --> 02:07:57,000
会觉得他是

4623
02:07:57,000 --> 02:07:58,000
非常非常好的

4624
02:07:58,000 --> 02:08:00,000
一个实践原则

4625
02:08:00,000 --> 02:08:01,000
那

4626
02:08:01,000 --> 02:08:03,000
在大学里面

4627
02:08:03,000 --> 02:08:04,000
所进行的

4628
02:08:04,000 --> 02:08:05,000
软件工程的教育

4629
02:08:05,000 --> 02:08:07,000
可能会比较

4630
02:08:07,000 --> 02:08:09,000
流于理论

4631
02:08:09,000 --> 02:08:09,000
因为

4632
02:08:09,000 --> 02:08:12,000
毕竟在很多时候

4633
02:08:12,000 --> 02:08:14,000
教授软件工程的

4634
02:08:14,000 --> 02:08:14,000
教授本身

4635
02:08:14,000 --> 02:08:16,000
可能完全没搞过软件工程

4636
02:08:16,000 --> 02:08:17,000
他是一个比较

4637
02:08:17,000 --> 02:08:19,000
从相对来说

4638
02:08:19,000 --> 02:08:20,000
比较学院派的角度去

4639
02:08:20,000 --> 02:08:24,000
再向学生传授一个

4640
02:08:24,000 --> 02:08:25,000
自己想象之中的人

4641
02:08:25,000 --> 02:08:26,000
的工程是

4642
02:08:26,000 --> 02:08:27,000
怎样实施

4643
02:08:27,000 --> 02:08:28,000
对

4644
02:08:28,000 --> 02:08:29,000
这是

4645
02:08:29,000 --> 02:08:30,000
这是为什么

4646
02:08:30,000 --> 02:08:33,000
测试一直没能得到

4647
02:08:33,000 --> 02:08:35,000
足够的

4648
02:08:35,000 --> 02:08:36,000
在课堂里面的重视

4649
02:08:36,000 --> 02:08:36,000
原因之

4650
02:08:36,000 --> 02:08:39,000
因为他本身就不适合于课堂

4651
02:08:39,000 --> 02:08:40,000
应该这么说

4652
02:08:40,000 --> 02:08:41,000
对

4653
02:08:41,000 --> 02:08:46,000
其实这还让我想到

4654
02:08:46,000 --> 02:08:46,000
另外一个问题

4655
02:08:46,000 --> 02:08:47,000
就是

4656
02:08:47,000 --> 02:08:50,000
我不知道你的感官是什么

4657
02:08:50,000 --> 02:08:51,000
就是

4658
02:08:51,000 --> 02:08:53,000
我好像印象里面

4659
02:08:53,000 --> 02:08:54,000
很多女孩子都会在

4660
02:08:54,000 --> 02:08:56,000
毕业之后

4661
02:08:56,000 --> 02:08:57,000
如果进了软件工程的话

4662
02:08:57,000 --> 02:08:58,000
选择去做测试

4663
02:08:58,000 --> 02:09:00,000
这是为什么呢

4664
02:09:00,000 --> 02:09:02,000
这个事情我也很好奇

4665
02:09:02,000 --> 02:09:02,000
因为之前

4666
02:09:02,000 --> 02:09:04,000
在知乎的时候

4667
02:09:04,000 --> 02:09:05,000
我们最早当的

4668
02:09:05,000 --> 02:09:07,000
测试的工作

4669
02:09:07,000 --> 02:09:08,000
也是一个

4670
02:09:08,000 --> 02:09:10,000
就一个女孩子在那边做

4671
02:09:10,000 --> 02:09:11,000
可能有一种

4672
02:09:11,000 --> 02:09:12,000
传统上认为说

4673
02:09:12,000 --> 02:09:14,000
女孩子会心细一些

4674
02:09:14,000 --> 02:09:16,000
我觉得这是

4675
02:09:16,000 --> 02:09:17,000
某种歧视

4676
02:09:17,000 --> 02:09:18,000
三好三位

4677
02:09:18,000 --> 02:09:19,000
我也觉得是

4678
02:09:19,000 --> 02:09:19,000
但是

4679
02:09:19,000 --> 02:09:20,000
就是好像

4680
02:09:20,000 --> 02:09:21,000
你

4681
02:09:21,000 --> 02:09:22,000
就像觉得

4682
02:09:22,000 --> 02:09:23,000
测试是一个

4683
02:09:23,000 --> 02:09:24,000
没有创造力

4684
02:09:24,000 --> 02:09:25,000
然后又非常

4685
02:09:25,000 --> 02:09:27,000
需要心细的人去做

4686
02:09:27,000 --> 02:09:28,000
就如果

4687
02:09:28,000 --> 02:09:29,000
即便不算歧视的话

4688
02:09:29,000 --> 02:09:30,000
至少是一种偏见

4689
02:09:30,000 --> 02:09:30,000
我觉得

4690
02:09:30,000 --> 02:09:31,000
对

4691
02:09:31,000 --> 02:09:32,000
他

4692
02:09:32,000 --> 02:09:33,000
三好带了一个

4693
02:09:33,000 --> 02:09:34,000
默认的性别偏见

4694
02:09:34,000 --> 02:09:35,000
就是他觉得

4695
02:09:35,000 --> 02:09:39,000
女性适合于

4696
02:09:39,000 --> 02:09:40,000
做这种

4697
02:09:40,000 --> 02:09:42,000
括号

4698
02:09:42,000 --> 02:09:43,000
没有什么

4699
02:09:43,000 --> 02:09:44,000
技术水准的话

4700
02:09:44,000 --> 02:09:45,000
测试

4701
02:09:45,000 --> 02:09:46,000
好吧

4702
02:09:46,000 --> 02:09:49,000
但其实测试

4703
02:09:49,000 --> 02:09:50,000
是相当有

4704
02:09:50,000 --> 02:09:50,000
技术水准

4705
02:09:50,000 --> 02:09:51,000
如果你要把

4706
02:09:51,000 --> 02:09:51,000
对

4707
02:09:51,000 --> 02:09:52,000
我觉得要写好

4708
02:09:52,000 --> 02:09:53,000
一个测试的

4709
02:09:53,000 --> 02:09:54,000
test case

4710
02:09:54,000 --> 02:09:56,000
还是蛮多事情

4711
02:09:56,000 --> 02:09:57,000
要考虑的

4712
02:09:57,000 --> 02:09:58,000
但不

4713
02:09:58,000 --> 02:09:59,000
这里面有些测试

4714
02:09:59,000 --> 02:10:00,000
就是说是一个

4715
02:10:00,000 --> 02:10:01,000
刚才有说 smoke test

4716
02:10:01,000 --> 02:10:01,000
就是他甚至

4717
02:10:01,000 --> 02:10:02,000
不会去接触到

4718
02:10:02,000 --> 02:10:03,000
原码

4719
02:10:03,000 --> 02:10:04,000
只会说测试成品

4720
02:10:04,000 --> 02:10:04,000
怎么样

4721
02:10:04,000 --> 02:10:05,000
就是另外一种

4722
02:10:05,000 --> 02:10:06,000
新色测试

4723
02:10:06,000 --> 02:10:07,000
跟我们今天讲的

4724
02:10:07,000 --> 02:10:08,000
单元测试

4725
02:10:08,000 --> 02:10:09,000
还不是一个东西

4726
02:10:09,000 --> 02:10:11,000
对

4727
02:10:11,000 --> 02:10:13,000
那这就不展开讲了

4728
02:10:13,000 --> 02:10:13,000
对

4729
02:10:13,000 --> 02:10:15,000
这个有兴趣的

4730
02:10:15,000 --> 02:10:16,000
或者说对此

4731
02:10:16,000 --> 02:10:17,000
有感触的听众

4732
02:10:17,000 --> 02:10:18,000
欢迎你写信来

4733
02:10:18,000 --> 02:10:20,000
谈一谈你所遇到的

4734
02:10:20,000 --> 02:10:22,000
开启一个吐槽模式

4735
02:10:22,000 --> 02:10:22,000
对

4736
02:10:22,000 --> 02:10:24,000
是不是很多

4737
02:10:24,000 --> 02:10:25,000
乃至于我相信

4738
02:10:25,000 --> 02:10:26,000
也许我们的听众里面

4739
02:10:26,000 --> 02:10:27,000
的确有很多

4740
02:10:27,000 --> 02:10:28,000
做测试的女孩子

4741
02:10:28,000 --> 02:10:29,000
女性听众

4742
02:10:29,000 --> 02:10:31,000
不妨也谈谈

4743
02:10:31,000 --> 02:10:32,000
你为什么会选择

4744
02:10:32,000 --> 02:10:33,000
去做测试

4745
02:10:33,000 --> 02:10:34,000
乃至于你觉得

4746
02:10:34,000 --> 02:10:36,000
测试真的

4747
02:10:36,000 --> 02:10:38,000
比较适合

4748
02:10:38,000 --> 02:10:40,000
女性吗

4749
02:10:40,000 --> 02:10:42,000
然后你觉得

4750
02:10:42,000 --> 02:10:43,000
你有这个过程中

4751
02:10:43,000 --> 02:10:44,000
你有成就感吗

4752
02:10:44,000 --> 02:10:44,000
对

4753
02:10:44,000 --> 02:10:46,000
欢迎来信

4754
02:10:46,000 --> 02:10:48,000
长短不限

4755
02:10:48,000 --> 02:10:51,000
OK

4756
02:10:51,000 --> 02:10:52,000
那

4757
02:10:52,000 --> 02:10:53,000
根据提章

4758
02:10:53,000 --> 02:10:55,000
我们接下来要讲到的是

4759
02:10:55,000 --> 02:10:56,000
一系列

4760
02:10:56,000 --> 02:10:58,000
和单元测试相关的工具

4761
02:10:58,000 --> 02:10:59,000
就是

4762
02:10:59,000 --> 02:11:02,000
本意也是希望

4763
02:11:02,000 --> 02:11:04,000
对测试感兴趣的

4764
02:11:04,000 --> 02:11:05,000
听众可以

4765
02:11:05,000 --> 02:11:07,000
而对测试

4766
02:11:07,000 --> 02:11:08,000
没有足够多经验的听众

4767
02:11:08,000 --> 02:11:10,000
可以去找一些

4768
02:11:10,000 --> 02:11:11,000
就可以去搜一些

4769
02:11:11,000 --> 02:11:12,000
相关的工具

4770
02:11:12,000 --> 02:11:13,000
然后看一看

4771
02:11:13,000 --> 02:11:14,000
咱们是怎么使用的

4772
02:11:14,000 --> 02:11:15,000
总之

4773
02:11:15,000 --> 02:11:16,000
进行到下一个环节之前

4774
02:11:16,000 --> 02:11:18,000
我们可以最后来吐槽一下

4775
02:11:18,000 --> 02:11:19,000
这个 TDD 了

4776
02:11:19,000 --> 02:11:20,000
我觉得

4777
02:11:20,000 --> 02:11:22,000
火力全开

4778
02:11:22,000 --> 02:11:23,000
来吧

4779
02:11:23,000 --> 02:11:23,000
对

4780
02:11:23,000 --> 02:11:25,000
我觉得 TDD 非常印度

4781
02:11:25,000 --> 02:11:27,000
非常

4782
02:11:27,000 --> 02:11:29,000
非常印度

4783
02:11:29,000 --> 02:11:31,000
那怎么讲

4784
02:11:31,000 --> 02:11:32,000
这是一个非常地图炮

4785
02:11:32,000 --> 02:11:33,000
而且地域歧视的说法

4786
02:11:33,000 --> 02:11:34,000
就是

4787
02:11:34,000 --> 02:11:37,000
TDD 是一个

4788
02:11:37,000 --> 02:11:40,000
为了保证质量

4789
02:11:40,000 --> 02:11:43,000
而忽视了

4790
02:11:43,000 --> 02:11:47,000
而压抑了人的创造性的

4791
02:11:47,000 --> 02:11:48,000
这么一个

4792
02:11:48,000 --> 02:11:51,000
软件方法

4793
02:11:51,000 --> 02:11:51,000
就是

4794
02:11:51,000 --> 02:11:52,000
你可以说

4795
02:11:52,000 --> 02:11:54,000
TDD 的出现是历史的必然

4796
02:11:54,000 --> 02:11:55,000
就好像

4797
02:11:55,000 --> 02:11:57,000
福特 T 型车

4798
02:11:57,000 --> 02:11:58,000
会在

4799
02:11:58,000 --> 02:11:59,000
会以流水线的方式

4800
02:11:59,000 --> 02:12:00,000
来生产

4801
02:12:00,000 --> 02:12:01,000
是历史的必然一样

4802
02:12:01,000 --> 02:12:02,000
但是

4803
02:12:02,000 --> 02:12:04,000
也正是因为

4804
02:12:04,000 --> 02:12:06,000
TDD 或者说流水线的出现

4805
02:12:06,000 --> 02:12:07,000
这种所谓

4806
02:12:07,000 --> 02:12:09,000
mass production 的出现

4807
02:12:09,000 --> 02:12:11,000
导致了

4808
02:12:11,000 --> 02:12:14,000
human

4809
02:12:14,000 --> 02:12:16,000
变成了 human resource

4810
02:12:16,000 --> 02:12:18,000
就是

4811
02:12:18,000 --> 02:12:20,000
我这么说

4812
02:12:20,000 --> 02:12:20,000
可能

4813
02:12:20,000 --> 02:12:23,000
扯得有点大

4814
02:12:23,000 --> 02:12:23,000
有点

4815
02:12:23,000 --> 02:12:24,000
行而上

4816
02:12:24,000 --> 02:12:25,000
但

4817
02:12:25,000 --> 02:12:26,000
没有

4818
02:12:26,000 --> 02:12:27,000
我觉得这个很好

4819
02:12:27,000 --> 02:12:27,000
我觉得这个点很好

4820
02:12:27,000 --> 02:12:28,000
就是

4821
02:12:28,000 --> 02:12:28,000
如果你看

4822
02:12:28,000 --> 02:12:29,000
一个公司

4823
02:12:29,000 --> 02:12:30,000
一旦出现了

4824
02:12:30,000 --> 02:12:32,000
HR 这个部门之后

4825
02:12:32,000 --> 02:12:33,000
这个公司通常

4826
02:12:33,000 --> 02:12:33,000
都会

4827
02:12:33,000 --> 02:12:35,000
都会有一点点问题

4828
02:12:35,000 --> 02:12:36,000
对

4829
02:12:36,000 --> 02:12:37,000
就好像

4830
02:12:37,000 --> 02:12:42,000
Benz 在开发

4831
02:12:42,000 --> 02:12:43,000
第一辆车的时候

4832
02:12:43,000 --> 02:12:45,000
它显然不会

4833
02:12:45,000 --> 02:12:46,000
给每一个零件

4834
02:12:46,000 --> 02:12:47,000
做测试

4835
02:12:47,000 --> 02:12:49,000
AT&T

4836
02:12:49,000 --> 02:12:50,000
贝尔实验室的

4837
02:12:50,000 --> 02:12:51,000
黑客们

4838
02:12:51,000 --> 02:12:52,000
在一开始

4839
02:12:52,000 --> 02:12:54,000
写第一版

4840
02:12:54,000 --> 02:12:54,000
Linux

4841
02:12:54,000 --> 02:12:55,000
Unix 的时候

4842
02:12:55,000 --> 02:12:56,000
肯定也不会

4843
02:12:56,000 --> 02:12:58,000
去写代元测试

4844
02:12:58,000 --> 02:13:01,000
真正具有创造性的工作

4845
02:13:01,000 --> 02:13:01,000
是

4846
02:13:01,000 --> 02:13:03,000
不会写测试

4847
02:13:03,000 --> 02:13:06,000
就我觉得 TDD 最大的问题

4848
02:13:06,000 --> 02:13:06,000
就是

4849
02:13:06,000 --> 02:13:08,000
它打破了

4850
02:13:08,000 --> 02:13:09,000
创造的

4851
02:13:09,000 --> 02:13:10,000
所谓的流

4852
02:13:10,000 --> 02:13:10,000
Flow

4853
02:13:10,000 --> 02:13:12,000
就是

4854
02:13:12,000 --> 02:13:13,000
比如你在想

4855
02:13:13,000 --> 02:13:13,000
你在做一个

4856
02:13:13,000 --> 02:13:14,000
很投入

4857
02:13:14,000 --> 02:13:16,000
很有创造性的事情

4858
02:13:16,000 --> 02:13:16,000
你会

4859
02:13:16,000 --> 02:13:17,000
在进入一种状态

4860
02:13:17,000 --> 02:13:18,000
跟状态

4861
02:13:18,000 --> 02:13:18,000
你会持续说

4862
02:13:18,000 --> 02:13:20,000
去做一个创造性的工作

4863
02:13:20,000 --> 02:13:22,000
去构建一整套的东西

4864
02:13:22,000 --> 02:13:22,000
出来

4865
02:13:22,000 --> 02:13:23,000
在脑海中

4866
02:13:23,000 --> 02:13:24,000
然后把它落实到

4867
02:13:24,000 --> 02:13:25,000
笔头也好

4868
02:13:25,000 --> 02:13:26,000
还是键盘上也好

4869
02:13:26,000 --> 02:13:28,000
把它变成一个实体的误解

4870
02:13:28,000 --> 02:13:28,000
但是

4871
02:13:28,000 --> 02:13:31,000
TDD 其实是把这个流

4872
02:13:31,000 --> 02:13:33,000
给切成无数无数的碎片

4873
02:13:33,000 --> 02:13:34,000
然后你不断的在这个

4874
02:13:34,000 --> 02:13:35,000
跳

4875
02:13:35,000 --> 02:13:36,000
跳来

4876
02:13:36,000 --> 02:13:36,000
跳出

4877
02:13:36,000 --> 02:13:38,000
跳出去写

4878
02:13:38,000 --> 02:13:38,000
那个测试

4879
02:13:38,000 --> 02:13:39,000
然后再跳回来创造

4880
02:13:39,000 --> 02:13:40,000
整个这个 Flow

4881
02:13:40,000 --> 02:13:41,000
就已经没有了

4882
02:13:41,000 --> 02:13:42,000
对

4883
02:13:42,000 --> 02:13:44,000
我觉得在 TDD 的

4884
02:13:44,000 --> 02:13:45,000
整个过程里面

4885
02:13:45,000 --> 02:13:46,000
唯一爽的人

4886
02:13:46,000 --> 02:13:47,000
其实就是

4887
02:13:47,000 --> 02:13:48,000
架过师

4888
02:13:48,000 --> 02:13:48,000
或者说是

4889
02:13:48,000 --> 02:13:50,000
那个拆分工作的人

4890
02:13:50,000 --> 02:13:50,000
没错

4891
02:13:50,000 --> 02:13:51,000
他是唯一一个

4892
02:13:51,000 --> 02:13:52,000
有创造性的角色

4893
02:13:52,000 --> 02:13:53,000
对

4894
02:13:53,000 --> 02:13:53,000
他把那个什么

4895
02:13:53,000 --> 02:13:54,000
蓝

4896
02:13:54,000 --> 02:13:54,000
蓝

4897
02:13:54,000 --> 02:13:55,000
Blueprint

4898
02:13:55,000 --> 02:13:56,000
Blueprint

4899
02:13:56,000 --> 02:13:57,000
都给你画好了

4900
02:13:57,000 --> 02:13:57,000
然后你说

4901
02:13:57,000 --> 02:13:58,000
那个什么

4902
02:13:58,000 --> 02:14:00,000
你们这些

4903
02:14:00,000 --> 02:14:01,000
包装

4904
02:14:01,000 --> 02:14:01,000
Human Resources

4905
02:14:01,000 --> 02:14:02,000
对

4906
02:14:02,000 --> 02:14:03,000
Human Resources

4907
02:14:03,000 --> 02:14:03,000
什么冒坑头

4908
02:14:03,000 --> 02:14:04,000
你们这些小工

4909
02:14:04,000 --> 02:14:05,000
造这个图子

4910
02:14:05,000 --> 02:14:06,000
干就好了

4911
02:14:06,000 --> 02:14:07,000
你们如果干不好

4912
02:14:07,000 --> 02:14:08,000
我随时可以换一个人

4913
02:14:08,000 --> 02:14:09,000
没错

4914
02:14:09,000 --> 02:14:10,000
对

4915
02:14:10,000 --> 02:14:13,000
就好像在建筑领域里面

4916
02:14:13,000 --> 02:14:15,000
一个建筑造了

4917
02:14:15,000 --> 02:14:16,000
在美轮美奂

4918
02:14:16,000 --> 02:14:18,000
在功能完善

4919
02:14:18,000 --> 02:14:19,000
人们也只会记住

4920
02:14:19,000 --> 02:14:20,000
建筑师的名字

4921
02:14:20,000 --> 02:14:21,000
而不是你这个

4922
02:14:21,000 --> 02:14:22,000
搬砖的小工的名字

4923
02:14:22,000 --> 02:14:23,000
对

4924
02:14:23,000 --> 02:14:23,000
对

4925
02:14:23,000 --> 02:14:24,000
这就是为什么

4926
02:14:24,000 --> 02:14:26,000
我看到任何一个

4927
02:14:26,000 --> 02:14:29,000
Nforce TDD 的公司

4928
02:14:29,000 --> 02:14:30,000
都会觉得

4929
02:14:30,000 --> 02:14:33,000
简直是 Living Hell

4930
02:14:33,000 --> 02:14:35,000
能躲就躲

4931
02:14:35,000 --> 02:14:35,000
对

4932
02:14:35,000 --> 02:14:37,000
这其实让我想起来

4933
02:14:37,000 --> 02:14:38,000
前阵子

4934
02:14:38,000 --> 02:14:39,000
刘一说

4935
02:14:39,000 --> 02:14:40,000
在有一期

4936
02:14:40,000 --> 02:14:42,000
IT 工作里面

4937
02:14:42,000 --> 02:14:42,000
你们提到一个

4938
02:14:42,000 --> 02:14:44,000
独立游戏开发者说

4939
02:14:44,000 --> 02:14:46,000
什么去 EA

4940
02:14:46,000 --> 02:14:48,000
或者去 EA 这样的大公司

4941
02:14:48,000 --> 02:14:49,000
大的游戏公司

4942
02:14:49,000 --> 02:14:50,000
简直就是 Hell

4943
02:14:50,000 --> 02:14:52,000
对

4944
02:14:52,000 --> 02:14:53,000
有类似的原因

4945
02:14:53,000 --> 02:14:54,000
对

4946
02:14:54,000 --> 02:14:54,000
它的道理

4947
02:14:54,000 --> 02:14:55,000
其实就是

4948
02:14:55,000 --> 02:14:57,000
你在这样的公司里面

4949
02:14:57,000 --> 02:14:57,000
扮演的

4950
02:14:57,000 --> 02:14:58,000
其实就是一个

4951
02:14:58,000 --> 02:14:59,000
流水线上的工人

4952
02:14:59,000 --> 02:15:00,000
然后你

4953
02:15:00,000 --> 02:15:00,000
Steam

4954
02:15:00,000 --> 02:15:02,000
传说中的

4955
02:15:02,000 --> 02:15:02,000
对

4956
02:15:02,000 --> 02:15:03,000
你的个性被抹杀了

4957
02:15:03,000 --> 02:15:04,000
你成为了一个

4958
02:15:04,000 --> 02:15:05,000
human resource

4959
02:15:05,000 --> 02:15:06,000
然后

4960
02:15:06,000 --> 02:15:09,000
唯一出现的就是

4961
02:15:09,000 --> 02:15:11,000
最终的演织员表里面

4962
02:15:11,000 --> 02:15:11,000
一个

4963
02:15:11,000 --> 02:15:12,000
没有大部分玩家

4964
02:15:12,000 --> 02:15:13,000
都会立刻按 A

4965
02:15:13,000 --> 02:15:14,000
去跳过的

4966
02:15:14,000 --> 02:15:16,000
什么一个字幕里面的一部分

4967
02:15:16,000 --> 02:15:18,000
是

4968
02:15:18,000 --> 02:15:19,000
不过这件事

4969
02:15:19,000 --> 02:15:20,000
如果反过来讲

4970
02:15:20,000 --> 02:15:20,000
也可以说

4971
02:15:20,000 --> 02:15:23,000
这样才可以保证出品的稳定

4972
02:15:23,000 --> 02:15:23,000
对吧

4973
02:15:23,000 --> 02:15:23,000
如果

4974
02:15:23,000 --> 02:15:25,000
也只有采用这样的方式

4975
02:15:25,000 --> 02:15:26,000
也只有采用这种

4976
02:15:26,000 --> 02:15:27,000
不信任

4977
02:15:27,000 --> 02:15:28,000
让人成为

4978
02:15:28,000 --> 02:15:30,000
可以被替换的零件的方式

4979
02:15:30,000 --> 02:15:31,000
才可以做出

4980
02:15:31,000 --> 02:15:33,000
规模足够大的东西

4981
02:15:33,000 --> 02:15:35,000
这个我是毫不否认的

4982
02:15:35,000 --> 02:15:37,000
而且就是能保证

4983
02:15:37,000 --> 02:15:37,000
这个

4984
02:15:37,000 --> 02:15:38,000
它的出品是稳定的

4985
02:15:38,000 --> 02:15:39,000
这好像为什么

4986
02:15:39,000 --> 02:15:39,000
老师

4987
02:15:39,000 --> 02:15:41,000
我们老是吐槽说

4988
02:15:41,000 --> 02:15:42,000
中餐难以标准化

4989
02:15:42,000 --> 02:15:44,000
就是因为它的那个出品

4990
02:15:44,000 --> 02:15:45,000
不够稳定

4991
02:15:45,000 --> 02:15:45,000
你换一个人

4992
02:15:45,000 --> 02:15:47,000
换一个厨师

4993
02:15:47,000 --> 02:15:48,000
或者换

4994
02:15:48,000 --> 02:15:49,000
甚至换一种调料

4995
02:15:49,000 --> 02:15:51,000
这个事情就可谓就变掉了

4996
02:15:51,000 --> 02:15:54,000
所以我就是在想

4997
02:15:54,000 --> 02:15:55,000
这个到底是一个

4998
02:15:55,000 --> 02:15:56,000
怎么样的情况

4999
02:15:56,000 --> 02:15:59,000
怎么能够拿到两者的好处

5000
02:15:59,000 --> 02:16:00,000
从此避免两者的短板

5001
02:16:00,000 --> 02:16:01,000
好像现在看来

5002
02:16:01,000 --> 02:16:02,000
没有什么太好的解决方案

5003
02:16:02,000 --> 02:16:04,000
我觉得一个解决方案

5004
02:16:04,000 --> 02:16:05,000
可能就是人工之用

5005
02:16:05,000 --> 02:16:07,000
因为 TDD

5006
02:16:07,000 --> 02:16:11,000
可能现在 TDD 还太原始

5007
02:16:11,000 --> 02:16:12,000
就是假如将来

5008
02:16:12,000 --> 02:16:13,000
我们可以直接先给出

5009
02:16:13,000 --> 02:16:14,000
所有的编程条件

5010
02:16:14,000 --> 02:16:17,000
然后让 AI 自己去帮我们

5011
02:16:17,000 --> 02:16:19,000
写出程序来

5012
02:16:19,000 --> 02:16:21,000
那可能到那个时候

5013
02:16:21,000 --> 02:16:22,000
我们也就不需要

5014
02:16:22,000 --> 02:16:23,000
再为这种事情发愁

5015
02:16:23,000 --> 02:16:24,000
因为

5016
02:16:24,000 --> 02:16:25,000
这个已经也有了

5017
02:16:25,000 --> 02:16:26,000
这个所谓的什么

5018
02:16:26,000 --> 02:16:27,000
第四代编程语言

5019
02:16:27,000 --> 02:16:28,000
不就是做这种事情吧

5020
02:16:28,000 --> 02:16:30,000
人指定一个 constraint

5021
02:16:30,000 --> 02:16:32,000
他自己去解决

5022
02:16:32,000 --> 02:16:34,000
怎么去找到

5023
02:16:34,000 --> 02:16:36,000
满足这个 constraint 的一个解

5024
02:16:36,000 --> 02:16:38,000
但是效率是很成问题的

5025
02:16:38,000 --> 02:16:40,000
对

5026
02:16:40,000 --> 02:16:41,000
然后这个就又

5027
02:16:41,000 --> 02:16:44,000
跟我们之前提到的

5028
02:16:44,000 --> 02:16:47,000
The Rabbits

5029
02:16:47,000 --> 02:16:47,000
还是

5030
02:16:47,000 --> 02:16:49,000
那个老赵叫什么类似

5031
02:16:49,000 --> 02:16:51,000
那个带

5032
02:16:51,000 --> 02:16:52,000
对

5033
02:16:52,000 --> 02:16:54,000
带一些代码那个

5034
02:16:54,000 --> 02:16:56,000
叫什么类似

5035
02:16:56,000 --> 02:16:57,000
反正和兔子有关

5036
02:16:57,000 --> 02:16:59,000
然后

5037
02:16:59,000 --> 02:17:01,000
这叫 The Rabbits 吧

5038
02:17:01,000 --> 02:17:01,000
OK

5039
02:17:01,000 --> 02:17:02,000
The Rabbits

5040
02:17:02,000 --> 02:17:05,000
以及和之前和木窑聊到的

5041
02:17:05,000 --> 02:17:07,000
没能跟木窑聊起的

5042
02:17:07,000 --> 02:17:08,000
那个话题

5043
02:17:08,000 --> 02:17:08,000
就是

5044
02:17:08,000 --> 02:17:11,000
计算机可以做数学

5045
02:17:11,000 --> 02:17:13,000
计算机可以做出

5046
02:17:13,000 --> 02:17:15,000
计算机可以设计出来一个

5047
02:17:15,000 --> 02:17:18,000
有创造性的算法

5048
02:17:18,000 --> 02:17:20,000
其实也是

5049
02:17:20,000 --> 02:17:21,000
目前

5050
02:17:21,000 --> 02:17:23,000
现阶段看来不太可能

5051
02:17:23,000 --> 02:17:23,000
也是

5052
02:17:23,000 --> 02:17:23,000
就是

5053
02:17:23,000 --> 02:17:26,000
我们也许可以通过 TDD

5054
02:17:26,000 --> 02:17:27,000
通过第四代

5055
02:17:27,000 --> 02:17:29,000
第五代计算机语言来

5056
02:17:29,000 --> 02:17:31,000
完成一些枯燥的

5057
02:17:31,000 --> 02:17:31,000
只有

5058
02:17:31,000 --> 02:17:33,000
现阶段只有依靠

5059
02:17:33,000 --> 02:17:34,000
TDD 或者 BDD

5060
02:17:34,000 --> 02:17:36,000
才可以达到的

5061
02:17:36,000 --> 02:17:37,000
大规模软件

5062
02:17:37,000 --> 02:17:38,000
但是

5063
02:17:38,000 --> 02:17:39,000
就所谓的

5064
02:17:39,000 --> 02:17:41,000
穷举法证明吗

5065
02:17:41,000 --> 02:17:41,000
对

5066
02:17:41,000 --> 02:17:44,000
说这个其实已经有

5067
02:17:44,000 --> 02:17:45,000
像 TDD 那个证明

5068
02:17:45,000 --> 02:17:45,000
那个叫什么呢

5069
02:17:45,000 --> 02:17:47,000
地

5070
02:17:47,000 --> 02:17:48,000
叫什么

5071
02:17:48,000 --> 02:17:49,000
coloring problem

5072
02:17:49,000 --> 02:17:50,000
是吧

5073
02:17:50,000 --> 02:17:51,000
地图填色的那个

5074
02:17:51,000 --> 02:17:51,000
那个难题

5075
02:17:51,000 --> 02:17:53,000
四色定理

5076
02:17:53,000 --> 02:17:53,000
对

5077
02:17:53,000 --> 02:17:55,000
那个好像不是证明出来吗

5078
02:17:55,000 --> 02:17:56,000
就是靠暴力破坚

5079
02:17:56,000 --> 02:17:57,000
对

5080
02:17:57,000 --> 02:17:57,000
对啊

5081
02:17:57,000 --> 02:17:59,000
就这个就是什么

5082
02:17:59,000 --> 02:18:00,000
数学领域的 TDD 吧

5083
02:18:00,000 --> 02:18:01,000
对

5084
02:18:01,000 --> 02:18:05,000
也不尽然

5085
02:18:05,000 --> 02:18:06,000
但对

5086
02:18:06,000 --> 02:18:08,000
各位理解

5087
02:18:08,000 --> 02:18:08,000
这是什么意思

5088
02:18:08,000 --> 02:18:12,000
有神似之处

5089
02:18:12,000 --> 02:18:13,000
但并不是一回事

5090
02:18:13,000 --> 02:18:13,000
对

5091
02:18:13,000 --> 02:18:14,000
另外一个

5092
02:18:14,000 --> 02:18:15,000
我又想起来一个

5093
02:18:15,000 --> 02:18:16,000
暴力的方法

5094
02:18:16,000 --> 02:18:16,000
就是

5095
02:18:16,000 --> 02:18:18,000
说最近

5096
02:18:18,000 --> 02:18:20,000
近一段时间

5097
02:18:20,000 --> 02:18:21,000
围棋的 AI

5098
02:18:21,000 --> 02:18:22,000
有比较大的提升

5099
02:18:22,000 --> 02:18:24,000
就是因为他们采用了

5100
02:18:24,000 --> 02:18:24,000
一种

5101
02:18:24,000 --> 02:18:26,000
比较暴力的算法

5102
02:18:26,000 --> 02:18:27,000
就是穷举所有

5103
02:18:27,000 --> 02:18:30,000
用蒙特卡洛算法

5104
02:18:30,000 --> 02:18:32,000
随机的去

5105
02:18:32,000 --> 02:18:34,000
随机的去

5106
02:18:34,000 --> 02:18:35,000
去采用一些

5107
02:18:35,000 --> 02:18:37,000
可能的走法

5108
02:18:37,000 --> 02:18:39,000
然后从里面找出来一个

5109
02:18:39,000 --> 02:18:41,000
效果最好的

5110
02:18:41,000 --> 02:18:44,000
然后成功的让业余棋手

5111
02:18:44,000 --> 02:18:46,000
基本上没有人能够下过

5112
02:18:46,000 --> 02:18:47,000
这个围棋算法

5113
02:18:47,000 --> 02:18:48,000
OK

5114
02:18:48,000 --> 02:18:50,000
回头可以把相关的

5115
02:18:50,000 --> 02:18:51,000
那个报道找出来

5116
02:18:51,000 --> 02:18:52,000
大概就是这么意思

5117
02:18:52,000 --> 02:18:57,000
我觉得 TDD 是一个

5118
02:18:57,000 --> 02:19:01,000
是历史的必然

5119
02:19:01,000 --> 02:19:02,000
但就好像

5120
02:19:02,000 --> 02:19:04,000
汽车的生产线

5121
02:19:04,000 --> 02:19:08,000
可能还有一些地方

5122
02:19:08,000 --> 02:19:09,000
是在用手工

5123
02:19:09,000 --> 02:19:10,000
但至少在德国

5124
02:19:10,000 --> 02:19:11,000
基本上四大车厂

5125
02:19:11,000 --> 02:19:13,000
全都是在用机器人

5126
02:19:13,000 --> 02:19:15,000
来完成那些

5127
02:19:15,000 --> 02:19:16,000
以往需要人类

5128
02:19:16,000 --> 02:19:17,000
才可以完成的

5129
02:19:17,000 --> 02:19:17,000
都是这些工作

5130
02:19:17,000 --> 02:19:19,000
将来我觉得

5131
02:19:19,000 --> 02:19:23,000
这些比较低级的代码

5132
02:19:23,000 --> 02:19:25,000
的验证

5133
02:19:25,000 --> 02:19:27,000
乃至于生成工作

5134
02:19:27,000 --> 02:19:27,000
应该是可以

5135
02:19:27,000 --> 02:19:28,000
交友人工智能

5136
02:19:28,000 --> 02:19:29,000
自能完成

5137
02:19:29,000 --> 02:19:32,000
所以这就是

5138
02:19:32,000 --> 02:19:32,000
我为什么说

5139
02:19:32,000 --> 02:19:33,000
TDD 非常印度

5140
02:19:33,000 --> 02:19:34,000
就是因为

5141
02:19:34,000 --> 02:19:35,000
印度加引号

5142
02:19:35,000 --> 02:19:37,000
我只不过不愿意说中国

5143
02:19:37,000 --> 02:19:38,000
就是在

5144
02:19:38,000 --> 02:19:41,000
这个第三个国家

5145
02:19:41,000 --> 02:19:42,000
确实是很印度

5146
02:19:42,000 --> 02:19:43,000
因为那个

5147
02:19:43,000 --> 02:19:44,000
亚马逊那个

5148
02:19:44,000 --> 02:19:45,000
Mechanic Turk

5149
02:19:45,000 --> 02:19:47,000
好像那些服务商

5150
02:19:47,000 --> 02:19:47,000
都在印度

5151
02:19:47,000 --> 02:19:49,000
但这种说法

5152
02:19:49,000 --> 02:19:50,000
比较这么说

5153
02:19:50,000 --> 02:19:51,000
政治不正确

5154
02:19:51,000 --> 02:19:52,000
当然我们也没有

5155
02:19:52,000 --> 02:19:53,000
在追求政治正确

5156
02:19:53,000 --> 02:19:55,000
所以言下之意

5157
02:19:55,000 --> 02:19:56,000
就是在地乡世界国家

5158
02:19:56,000 --> 02:19:59,000
这种密集脑力劳动的

5159
02:19:59,000 --> 02:20:02,000
产业链的

5160
02:20:02,000 --> 02:20:04,000
这样一个环节

5161
02:20:04,000 --> 02:20:05,000
这还算脑力劳动

5162
02:20:05,000 --> 02:20:06,000
这个算体力活了吧

5163
02:20:06,000 --> 02:20:06,000
已经

5164
02:20:06,000 --> 02:20:08,000
区分脑力劳动

5165
02:20:08,000 --> 02:20:09,000
和体力劳动的区别

5166
02:20:09,000 --> 02:20:10,000
只是你用不用敲键盘

5167
02:20:10,000 --> 02:20:11,000
我觉得

5168
02:20:11,000 --> 02:20:13,000
TDD 还是要敲键盘

5169
02:20:13,000 --> 02:20:15,000
所以还是

5170
02:20:15,000 --> 02:20:18,000
只有在这样一个环节里面

5171
02:20:18,000 --> 02:20:20,000
我相信在印度这帮人

5172
02:20:20,000 --> 02:20:23,000
还是会定性为高科技产业的

5173
02:20:23,000 --> 02:20:24,000
那肯定

5174
02:20:24,000 --> 02:20:26,000
但是这种说法

5175
02:20:26,000 --> 02:20:28,000
其实也比较偏激

5176
02:20:28,000 --> 02:20:29,000
或者说比较

5177
02:20:29,000 --> 02:20:30,000
Cynical

5178
02:20:30,000 --> 02:20:32,000
因为其实在美国

5179
02:20:32,000 --> 02:20:34,000
在欧美

5180
02:20:34,000 --> 02:20:36,000
还是有大量的企业

5181
02:20:36,000 --> 02:20:40,000
会采用类似于 BED 的方法

5182
02:20:40,000 --> 02:20:41,000
来开发资源

5183
02:20:41,000 --> 02:20:44,000
而且即便硅谷的这些

5184
02:20:44,000 --> 02:20:47,000
单红炸子机们

5185
02:20:47,000 --> 02:20:48,000
也是有很多

5186
02:20:48,000 --> 02:20:49,000
会非常强

5187
02:20:49,000 --> 02:20:50,000
我相信 Facebook

5188
02:20:50,000 --> 02:20:51,000
也是一个非常非常强调

5189
02:20:51,000 --> 02:20:52,000
测试的公司

5190
02:20:52,000 --> 02:20:54,000
苹果

5191
02:20:54,000 --> 02:20:55,000
微软就不用说了

5192
02:20:55,000 --> 02:20:56,000
微软据说有一个

5193
02:20:56,000 --> 02:21:00,000
非常非常非常非常大的

5194
02:21:00,000 --> 02:21:00,000
测试部门

5195
02:21:00,000 --> 02:21:03,000
他们不是整个公司

5196
02:21:03,000 --> 02:21:04,000
都是测试部门吗

5197
02:21:04,000 --> 02:21:06,000
这样不好

5198
02:21:06,000 --> 02:21:07,000
都在测试

5199
02:21:07,000 --> 02:21:09,000
Windows 10 的 Beta

5200
02:21:09,000 --> 02:21:10,000
不 Alpha

5201
02:21:10,000 --> 02:21:12,000
之类的

5202
02:21:12,000 --> 02:21:14,000
所以苹果是不怎么喜欢写测试的

5203
02:21:14,000 --> 02:21:15,000
你觉得

5204
02:21:15,000 --> 02:21:16,000
who knows

5205
02:21:16,000 --> 02:21:18,000
看他们出品的

5206
02:21:18,000 --> 02:21:19,000
这个质量应该是不写的

5207
02:21:19,000 --> 02:21:19,000
对

5208
02:21:19,000 --> 02:21:22,000
当然毕竟这一次

5209
02:21:22,000 --> 02:21:25,000
WWDC 上发布的这一系列

5210
02:21:25,000 --> 02:21:27,000
在怎么说呢

5211
02:21:27,000 --> 02:21:30,000
在偿还他们的技术债务的

5212
02:21:30,000 --> 02:21:30,000
这个补丁

5213
02:21:30,000 --> 02:21:33,000
我觉得还是比较好

5214
02:21:33,000 --> 02:21:36,000
就是软件质量

5215
02:21:36,000 --> 02:21:36,000
至少在

5216
02:21:36,000 --> 02:21:39,000
这一代叫什么

5217
02:21:39,000 --> 02:21:40,000
Al Capitan

5218
02:21:40,000 --> 02:21:41,000
在这一代

5219
02:21:41,000 --> 02:21:42,000
Al Capitan

5220
02:21:42,000 --> 02:21:42,000
对

5221
02:21:42,000 --> 02:21:43,000
对

5222
02:21:43,000 --> 02:21:44,000
在这一代

5223
02:21:44,000 --> 02:21:46,000
没有太大的新特性

5224
02:21:46,000 --> 02:21:46,000
对

5225
02:21:46,000 --> 02:21:48,000
所以就说明了

5226
02:21:48,000 --> 02:21:51,000
他们把时间都花在了修办上

5227
02:21:51,000 --> 02:21:52,000
那也不一定

5228
02:21:52,000 --> 02:21:53,000
你可能在搞什么

5229
02:21:53,000 --> 02:21:55,000
WatchOS 之类的事情

5230
02:21:55,000 --> 02:21:56,000
我不说

5231
02:21:56,000 --> 02:21:57,000
好吧

5232
02:21:57,000 --> 02:22:00,000
就是不要太乐观

5233
02:22:00,000 --> 02:22:00,000
我觉得

5234
02:22:00,000 --> 02:22:02,000
OK

5235
02:22:02,000 --> 02:22:06,000
所以我们接下来可以进入到本期的最后一个环节

5236
02:22:06,000 --> 02:22:11,000
就是介绍一些常用的写测试的工具

5237
02:22:11,000 --> 02:22:15,000
尤其是 unit test

5238
02:22:15,000 --> 02:22:16,000
就是单元测试

5239
02:22:16,000 --> 02:22:19,000
单元测试是所有的你所能写的测试里面

5240
02:22:19,000 --> 02:22:20,000
颗粒最小的一个

5241
02:22:20,000 --> 02:22:23,000
同时也是作为一个开发者

5242
02:22:23,000 --> 02:22:25,000
而不是 QA 人员

5243
02:22:25,000 --> 02:22:27,000
就是软件接收者来说

5244
02:22:27,000 --> 02:22:29,000
所能接触到的最普

5245
02:22:29,000 --> 02:22:31,000
最常见的一种测试

5246
02:22:31,000 --> 02:22:33,000
首先要介绍给大家的就是

5247
02:22:33,000 --> 02:22:34,000
xunit family

5248
02:22:34,000 --> 02:22:38,000
怎么说呢

5249
02:22:38,000 --> 02:22:38,000
就是因为

5250
02:22:38,000 --> 02:22:39,000
单元测试是

5251
02:22:39,000 --> 02:22:40,000
对

5252
02:22:40,000 --> 02:22:40,000
对

5253
02:22:40,000 --> 02:22:44,000
就是因为软件测试

5254
02:22:44,000 --> 02:22:47,000
单元测试非常非常的普遍

5255
02:22:47,000 --> 02:22:48,000
以至于有这么一套

5256
02:22:48,000 --> 02:22:52,000
pattern

5257
02:22:52,000 --> 02:22:53,000
可以被

5258
02:22:53,000 --> 02:22:57,000
套用在各个语言所写的程序里面

5259
02:22:57,000 --> 02:22:58,000
而这个 pattern

5260
02:22:58,000 --> 02:23:01,000
在最开始的创始人

5261
02:23:01,000 --> 02:23:06,000
是一个叫做 Kent Beck 的

5262
02:23:06,000 --> 02:23:08,000
大神

5263
02:23:08,000 --> 02:23:10,000
他应该也算大神里面

5264
02:23:10,000 --> 02:23:18,000
而他最开始所写的这一套 unit test 的工具呢

5265
02:23:18,000 --> 02:23:19,000
是叫做 sunit

5266
02:23:19,000 --> 02:23:22,000
是写 small talk

5267
02:23:22,000 --> 02:23:24,000
跟 sunit

5268
02:23:24,000 --> 02:23:24,000
对

5269
02:23:24,000 --> 02:23:25,000
跟 sunit

5270
02:23:25,000 --> 02:23:27,000
至少是 sunit

5271
02:23:27,000 --> 02:23:29,000
啊

5272
02:23:29,000 --> 02:23:29,000
OK

5273
02:23:29,000 --> 02:23:31,000
你是说他是可以念出来的是吧

5274
02:23:31,000 --> 02:23:32,000
sunit

5275
02:23:32,000 --> 02:23:34,000
我觉得 sunit

5276
02:23:34,000 --> 02:23:35,000
OK

5277
02:23:35,000 --> 02:23:37,000
所以 Junit 应该怎么念

5278
02:23:37,000 --> 02:23:38,000
jannit

5279
02:23:38,000 --> 02:23:39,000
jannit

5280
02:23:39,000 --> 02:23:43,000
怎么像 janitor

5281
02:23:43,000 --> 02:23:47,000
而 runit 就是 ruint

5282
02:23:47,000 --> 02:23:49,000
毁了他吧

5283
02:23:49,000 --> 02:23:50,000
不是 runit

5284
02:23:50,000 --> 02:23:52,000
OK

5285
02:23:52,000 --> 02:23:54,000
对

5286
02:23:54,000 --> 02:23:56,000
我还是轻易把它念成 sunit

5287
02:23:56,000 --> 02:23:57,000
sunit

5288
02:23:57,000 --> 02:23:57,000
天啊

5289
02:23:57,000 --> 02:23:59,000
就是一个正确的念法

5290
02:23:59,000 --> 02:24:00,000
OK

5291
02:24:00,000 --> 02:24:02,000
Kent Beck 这个人呢

5292
02:24:02,000 --> 02:24:03,000
为 small talk

5293
02:24:03,000 --> 02:24:05,000
所研发出的这一套

5294
02:24:05,000 --> 02:24:07,000
单元测试的工具

5295
02:24:07,000 --> 02:24:09,000
在

5296
02:24:09,000 --> 02:24:12,000
紧紧跟随着这个

5297
02:24:12,000 --> 02:24:14,000
极限编程的方法

5298
02:24:14,000 --> 02:24:15,000
以及整个

5299
02:24:15,000 --> 02:24:18,000
向敏捷转向的这么一个软件工程的潮流

5300
02:24:18,000 --> 02:24:21,000
逐渐被套用到的其他所有

5301
02:24:21,000 --> 02:24:22,000
几乎所有语言上面

5302
02:24:22,000 --> 02:24:24,000
是几乎这两个字都不用加

5303
02:24:24,000 --> 02:24:26,000
就是除了什么 brain fuck 之外

5304
02:24:26,000 --> 02:24:29,000
可能没有不支持 unit test

5305
02:24:29,000 --> 02:24:32,000
不支持这个 xunit 的

5306
02:24:32,000 --> 02:24:34,000
员员存在

5307
02:24:34,000 --> 02:24:34,000
就是

5308
02:24:34,000 --> 02:24:37,000
基本上你都想出来的

5309
02:24:37,000 --> 02:24:37,000
什么 CR

5310
02:24:37,000 --> 02:24:38,000
PHP

5311
02:24:38,000 --> 02:24:39,000
Ruby

5312
02:24:39,000 --> 02:24:40,000
Java

5313
02:24:40,000 --> 02:24:42,000
Java 就更不用说了

5314
02:24:42,000 --> 02:24:44,000
Junit 简直是 Java 世界里面

5315
02:24:44,000 --> 02:24:47,000
如果你想要找到工作

5316
02:24:47,000 --> 02:24:48,000
一定要学什么一个工具

5317
02:24:48,000 --> 02:24:49,000
然后

5318
02:24:49,000 --> 02:24:52,000
dotnet 世界当然也有相应的

5319
02:24:52,000 --> 02:24:53,000
比如说

5320
02:24:53,000 --> 02:24:54,000
Nunit

5321
02:24:54,000 --> 02:24:55,000
或者是

5322
02:24:55,000 --> 02:24:57,000
微软自家出的

5323
02:24:57,000 --> 02:24:59,000
之前叫 mstest

5324
02:24:59,000 --> 02:25:01,000
后来改叫 vstest

5325
02:25:01,000 --> 02:25:02,000
visual studio test

5326
02:25:02,000 --> 02:25:07,000
然后如果你使用

5327
02:25:07,000 --> 02:25:09,000
Object Recene 的话

5328
02:25:09,000 --> 02:25:11,000
之前有这个所谓

5329
02:25:11,000 --> 02:25:12,000
xc test

5330
02:25:12,000 --> 02:25:15,000
xc stand for xcode

5331
02:25:15,000 --> 02:25:15,000
对

5332
02:25:15,000 --> 02:25:17,000
xc test

5333
02:25:17,000 --> 02:25:19,000
就好像 vstest 一样

5334
02:25:19,000 --> 02:25:22,000
是在 xcode 里面执行的

5335
02:25:22,000 --> 02:25:24,000
专门为 Object C

5336
02:25:24,000 --> 02:25:25,000
以及

5337
02:25:25,000 --> 02:25:27,000
Servit 应该也有

5338
02:25:27,000 --> 02:25:28,000
所开发的这个

5339
02:25:28,000 --> 02:25:30,000
单元测试框架

5340
02:25:30,000 --> 02:25:32,000
其实这边直接给一个

5341
02:25:32,000 --> 02:25:34,000
这个链接就好了

5342
02:25:34,000 --> 02:25:35,000
因为 wikipad 上有一个

5343
02:25:35,000 --> 02:25:36,000
比较好的

5344
02:25:36,000 --> 02:25:41,000
叫做 list of unit testing frameworks

5345
02:25:41,000 --> 02:25:42,000
the list of unit testing frameworks

5346
02:25:42,000 --> 02:25:43,000
对

5347
02:25:43,000 --> 02:25:43,000
然后

5348
02:25:43,000 --> 02:25:47,000
这个我们想要说的一个

5349
02:25:47,000 --> 02:25:49,000
比较有意思的东西

5350
02:25:49,000 --> 02:25:50,000
其实是 doctest

5351
02:25:50,000 --> 02:25:52,000
就我不知道你用没有用我

5352
02:25:52,000 --> 02:25:55,000
就是 python 的语言里面

5353
02:25:55,000 --> 02:25:55,000
有一个

5354
02:25:55,000 --> 02:25:58,000
当然有一个 unit test 包

5355
02:25:58,000 --> 02:25:59,000
然后另外 python

5356
02:25:59,000 --> 02:26:00,000
有一个很有意思的包

5357
02:26:00,000 --> 02:26:01,000
叫做 doctest

5358
02:26:01,000 --> 02:26:04,000
你用过吗

5359
02:26:04,000 --> 02:26:06,000
一个不写测试的

5360
02:26:06,000 --> 02:26:13,000
这比较想要安利一下的东西

5361
02:26:13,000 --> 02:26:15,000
就是 doctest 这个东西

5362
02:26:15,000 --> 02:26:16,000
它有意思

5363
02:26:16,000 --> 02:26:19,000
或者说它实用的点在哪

5364
02:26:19,000 --> 02:26:20,000
就是我们知道

5365
02:26:20,000 --> 02:26:22,000
如果你在一个方法

5366
02:26:22,000 --> 02:26:24,000
或者在一个类里面

5367
02:26:24,000 --> 02:26:25,000
它的定义下面

5368
02:26:25,000 --> 02:26:27,000
直接写一个 string

5369
02:26:27,000 --> 02:26:31,000
这个东西被称为 docstring

5370
02:26:31,000 --> 02:26:32,000
对吧

5371
02:26:32,000 --> 02:26:32,000
啊

5372
02:26:32,000 --> 02:26:33,000
OK

5373
02:26:33,000 --> 02:26:34,000
然后你可以在

5374
02:26:34,000 --> 02:26:35,000
我想起来

5375
02:26:35,000 --> 02:26:37,000
我有见到过这个

5376
02:26:37,000 --> 02:26:38,000
但自己没有使过

5377
02:26:38,000 --> 02:26:39,000
OK

5378
02:26:39,000 --> 02:26:41,000
然后 doctest 这个包

5379
02:26:41,000 --> 02:26:42,000
所支持的一个功能

5380
02:26:42,000 --> 02:26:44,000
就是你可以在这个 docstring 里面

5381
02:26:44,000 --> 02:26:47,000
写一些测试

5382
02:26:47,000 --> 02:26:49,000
语法很简单

5383
02:26:49,000 --> 02:26:53,000
就是 python 的这个提示符

5384
02:26:53,000 --> 02:26:53,000
大家都知道

5385
02:26:53,000 --> 02:26:55,000
是三个相用的大语号

5386
02:26:55,000 --> 02:26:55,000
对吧

5387
02:26:55,000 --> 02:26:59,000
那么你只需要在这个 docstring 里面

5388
02:26:59,000 --> 02:27:00,000
写三个相用的大语号

5389
02:27:00,000 --> 02:27:04,000
然后写这个测试

5390
02:27:04,000 --> 02:27:05,000
所应该执行的语句

5391
02:27:05,000 --> 02:27:08,000
然后在新令期一行

5392
02:27:08,000 --> 02:27:10,000
在不写这个三个大语号的情况下

5393
02:27:10,000 --> 02:27:13,000
写出这个程序执行之后

5394
02:27:13,000 --> 02:27:14,000
所应该有的值

5395
02:27:14,000 --> 02:27:16,000
你就写好一个测试

5396
02:27:16,000 --> 02:27:17,000
是不是很神奇呢

5397
02:27:17,000 --> 02:27:20,000
就好像你在这个 docstring 里面

5398
02:27:20,000 --> 02:27:21,000
给你的这个函数

5399
02:27:21,000 --> 02:27:24,000
写了一个用法的示例

5400
02:27:24,000 --> 02:27:26,000
然后这个示例本身

5401
02:27:26,000 --> 02:27:28,000
忽然就可以当作单元测试来用了

5402
02:27:28,000 --> 02:27:29,000
对

5403
02:27:29,000 --> 02:27:33,000
这是一个非常好的一个工具

5404
02:27:33,000 --> 02:27:35,000
但我觉得这个的唯一的问题就是

5405
02:27:35,000 --> 02:27:37,000
有时候那个力度

5406
02:27:37,000 --> 02:27:39,000
就是它不是一个 unit 的时候

5407
02:27:39,000 --> 02:27:41,000
你也没法用这个方法

5408
02:27:41,000 --> 02:27:42,000
对

5409
02:27:42,000 --> 02:27:45,000
这个就 doctest 仅限于 unittest 的用

5410
02:27:45,000 --> 02:27:48,000
一旦跨了一个函数

5411
02:27:48,000 --> 02:27:48,000
就不行

5412
02:27:48,000 --> 02:27:50,000
其实也是有别的方法

5413
02:27:50,000 --> 02:27:50,000
比如说

5414
02:27:50,000 --> 02:27:54,000
doctest 这个包可以单独拿出来

5415
02:27:54,000 --> 02:27:57,000
就是生成一个专门的 python 文件

5416
02:27:57,000 --> 02:27:59,000
然后这个 python 文件里面

5417
02:27:59,000 --> 02:28:06,000
除了这样以 doctest 的语法写成的测试之外

5418
02:28:06,000 --> 02:28:06,000
别无他物

5419
02:28:06,000 --> 02:28:08,000
然后你可以在这里面

5420
02:28:08,000 --> 02:28:12,000
用这个 doctest 来

5421
02:28:12,000 --> 02:28:15,000
或者说滥用 doctest 来写一些跨模块

5422
02:28:15,000 --> 02:28:17,000
跨函数乃至跨模块的测试

5423
02:28:17,000 --> 02:28:21,000
ZoF 有一个测试方案就是干这个

5424
02:28:21,000 --> 02:28:27,000
不过这个 doctest 其实有点像那个叫什么

5425
02:28:27,000 --> 02:28:31,000
Donna Knuth 的那个叫 literate programming

5426
02:28:31,000 --> 02:28:32,000
发过来做

5427
02:28:32,000 --> 02:28:35,000
literate programming 中文翻译叫什么来的

5428
02:28:35,000 --> 02:28:36,000
文化编程

5429
02:28:36,000 --> 02:28:37,000
文艺编程

5430
02:28:37,000 --> 02:28:39,000
文青编程

5431
02:28:39,000 --> 02:28:44,000
我不知道这个怎么翻译

5432
02:28:44,000 --> 02:28:45,000
就他那个东西就是说

5433
02:28:45,000 --> 02:28:46,000
其实就是在

5434
02:28:46,000 --> 02:28:49,000
其实一直在写注释

5435
02:28:49,000 --> 02:28:51,000
代码就是穿插在

5436
02:28:51,000 --> 02:28:53,000
你用写注释的方式来写代码

5437
02:28:53,000 --> 02:28:54,000
没错

5438
02:28:54,000 --> 02:28:55,000
然后这个就是有点反过来

5439
02:28:55,000 --> 02:28:58,000
就是说你也主要是写代码

5440
02:28:58,000 --> 02:29:00,000
但是注释是对代码的一个解释

5441
02:29:00,000 --> 02:29:03,000
然后这个解释还是可以执行的

5442
02:29:03,000 --> 02:29:05,000
这就还比较不错

5443
02:29:05,000 --> 02:29:07,000
最后一个问题就是

5444
02:29:07,000 --> 02:29:10,000
现在正夯的一个

5445
02:29:10,000 --> 02:29:12,000
functional programming 的概念

5446
02:29:12,000 --> 02:29:14,000
我们知道在

5447
02:29:14,000 --> 02:29:18,000
敏捷方法崛起的过程中

5448
02:29:18,000 --> 02:29:21,000
其实基本上也就伴随着

5449
02:29:21,000 --> 02:29:23,000
面向对象这个思潮的崛起

5450
02:29:23,000 --> 02:29:25,000
基本上可以说

5451
02:29:25,000 --> 02:29:28,000
如果没有面向对象理念的话

5452
02:29:28,000 --> 02:29:30,000
敏捷是完全实现不了的

5453
02:29:30,000 --> 02:29:33,000
那面向对象编程

5454
02:29:33,000 --> 02:29:34,000
也已经被证明了

5455
02:29:34,000 --> 02:29:38,000
是更适合于写测试的一种方法

5456
02:29:38,000 --> 02:29:40,000
那我们可以把

5457
02:29:40,000 --> 02:29:40,000
封装得好

5458
02:29:40,000 --> 02:29:42,000
封装得好吗

5459
02:29:42,000 --> 02:29:42,000
对

5460
02:29:42,000 --> 02:29:46,000
面向对象可以保证你把系统的

5461
02:29:46,000 --> 02:29:47,000
偶合度降到最低

5462
02:29:47,000 --> 02:29:51,000
那么相同的问题

5463
02:29:51,000 --> 02:29:53,000
我们可以套用在目前正夯的

5464
02:29:53,000 --> 02:29:55,000
这个 functional programming 的概念上

5465
02:29:55,000 --> 02:29:59,000
functional programming 适合写测试吗

5466
02:29:59,000 --> 02:30:03,000
其实我觉得还蛮合适的

5467
02:30:03,000 --> 02:30:05,000
因为怎么说呢

5468
02:30:05,000 --> 02:30:08,000
就是 functional programming 的一个思想

5469
02:30:08,000 --> 02:30:11,000
就是说每一个函数的独立性很好

5470
02:30:11,000 --> 02:30:13,000
就是它至少就是在

5471
02:30:13,000 --> 02:30:14,000
在

5472
02:30:14,000 --> 02:30:17,000
就在原则上我们是鼓励每个函数是可以叫做

5473
02:30:17,000 --> 02:30:19,000
它是认识一个函数对吧

5474
02:30:19,000 --> 02:30:21,000
所谓函数就是说它是确定数

5475
02:30:21,000 --> 02:30:22,000
没有副作用的

5476
02:30:22,000 --> 02:30:22,000
对

5477
02:30:22,000 --> 02:30:24,000
side effect free

5478
02:30:24,000 --> 02:30:26,000
就是我确定一个输入就确定一个输出了

5479
02:30:26,000 --> 02:30:28,000
这个时候你写测试就比较简单了

5480
02:30:28,000 --> 02:30:29,000
因为你不用考虑说

5481
02:30:29,000 --> 02:30:33,000
你从某一种状态进入这个函数

5482
02:30:33,000 --> 02:30:36,000
或者进入一个过程的时候会得到一个解

5483
02:30:36,000 --> 02:30:37,000
但是你从另外一段的进入到另外一个解

5484
02:30:37,000 --> 02:30:39,000
这样的话

5485
02:30:39,000 --> 02:30:41,000
你这个当然测试没法写了

5486
02:30:41,000 --> 02:30:41,000
对吧

5487
02:30:41,000 --> 02:30:44,000
你得去先就叫 set up the environment

5488
02:30:44,000 --> 02:30:46,000
你得先设置这个环境才可以

5489
02:30:46,000 --> 02:30:47,000
但是如果是 FP 的话

5490
02:30:47,000 --> 02:30:48,000
就不存在一个问题

5491
02:30:48,000 --> 02:30:50,000
你这种造的写

5492
02:30:50,000 --> 02:30:51,000
什么说出给什么结果

5493
02:30:51,000 --> 02:30:54,000
你就可以马上把这一对应的这个关系列出来

5494
02:30:54,000 --> 02:30:55,000
对

5495
02:30:55,000 --> 02:30:59,000
所以这也就为我们提供另外一个拥抱

5496
02:30:59,000 --> 02:31:01,000
函数编程的理由

5497
02:31:01,000 --> 02:31:03,000
对没错

5498
02:31:03,000 --> 02:31:05,000
测试好写

5499
02:31:05,000 --> 02:31:06,000
没错

5500
02:31:06,000 --> 02:31:07,000
测试好写

5501
02:31:07,000 --> 02:31:09,000
所以如果你们还没有接触

5502
02:31:09,000 --> 02:31:09,000
函数编程的话

5503
02:31:09,000 --> 02:31:11,000
一定要去试试

5504
02:31:11,000 --> 02:31:15,000
对找工作很有帮助

5505
02:31:15,000 --> 02:31:18,000
可以瞬间提升

5506
02:31:18,000 --> 02:31:19,000
你怎么来的

5507
02:31:19,000 --> 02:31:21,000
逼格答应

5508
02:31:21,000 --> 02:31:22,000
提升内力

5509
02:31:22,000 --> 02:31:25,000
这个逼格不逼格

5510
02:31:25,000 --> 02:31:26,000
何必

5511
02:31:26,000 --> 02:31:29,000
写测试有什么逼格

5512
02:31:29,000 --> 02:31:32,000
说的也是

5513
02:31:32,000 --> 02:31:32,000
对

5514
02:31:32,000 --> 02:31:34,000
真的猛事只用 printf

5515
02:31:34,000 --> 02:31:38,000
来验证自己的

5516
02:31:38,000 --> 02:31:42,000
所以你现在只用 printf 吗

5517
02:31:42,000 --> 02:31:46,000
我其实还是要解释一下

5518
02:31:46,000 --> 02:31:47,000
我之前写 go 的时候

5519
02:31:47,000 --> 02:31:50,000
其实也已经有在用这个

5520
02:31:50,000 --> 02:31:52,000
在写测试了

5521
02:31:52,000 --> 02:31:54,000
因为 go 它是随这个语言

5522
02:31:54,000 --> 02:31:56,000
它就自带一个比较好的统一的规范

5523
02:31:56,000 --> 02:32:00,000
就不用单独再学一个第三方的东西

5524
02:32:00,000 --> 02:32:02,000
其实写测试

5525
02:32:02,000 --> 02:32:03,000
特别写单元测试的话

5526
02:32:03,000 --> 02:32:05,000
还是挺方便的

5527
02:32:05,000 --> 02:32:06,000
要承认一下

5528
02:32:06,000 --> 02:32:07,000
有时候还有点用

5529
02:32:07,000 --> 02:32:10,000
可能现在语言是一个思潮

5530
02:32:10,000 --> 02:32:11,000
也是要越来越多的

5531
02:32:11,000 --> 02:32:13,000
在语言内部集成一些

5532
02:32:13,000 --> 02:32:14,000
比如说测试

5533
02:32:14,000 --> 02:32:17,000
比如说调试之类的特径

5534
02:32:17,000 --> 02:32:18,000
对

5535
02:32:18,000 --> 02:32:21,000
OK

5536
02:32:21,000 --> 02:32:23,000
那好吧

5537
02:32:23,000 --> 02:32:24,000
这些到这了

5538
02:32:24,000 --> 02:32:27,000
您刚刚声明的是 IBM Podcast 的网络旗下的

5539
02:32:27,000 --> 02:32:30,000
IT 技术主题娱乐节目

5540
02:32:30,000 --> 02:32:30,000
内核风光

5541
02:32:30,000 --> 02:32:33,000
IBM 旗下的其他六档 Podcast

5542
02:32:33,000 --> 02:32:34,000
包括 Softcore 技术的节目

5543
02:32:34,000 --> 02:32:36,000
非娱乐技术的节目

5544
02:32:36,000 --> 02:32:37,000
IT 公论

5545
02:32:37,000 --> 02:32:39,000
意料主题节目太一来了

5546
02:32:39,000 --> 02:32:40,000
美式主题节目未知到

5547
02:32:40,000 --> 02:32:42,000
艺术主题节目流行通信

5548
02:32:42,000 --> 02:32:43,000
无主题节目无资源

5549
02:32:43,000 --> 02:32:44,000
故事主题节目

5550
02:32:44,000 --> 02:32:45,000
HiStory

5551
02:32:45,000 --> 02:32:47,000
以及影像主题节目

5552
02:32:47,000 --> 02:32:47,000
影像

5553
02:32:47,000 --> 02:32:49,000
如果你喜欢我们的节目

5554
02:32:49,000 --> 02:32:51,000
欢迎你为我们的节目捐款

5555
02:32:51,000 --> 02:32:53,000
捐款的只是

5556
02:32:53,000 --> 02:32:55,000
你可以把本节目再听一遍

5557
02:32:55,000 --> 02:32:56,000
开头

5558
02:32:56,000 --> 02:32:56,000
我又讲

5559
02:32:56,000 --> 02:32:59,000
我这个要念

5560
02:32:59,000 --> 02:32:59,000
这个要念是

5561
02:32:59,000 --> 02:33:02,000
kernelpanic.fm

5562
02:33:02,000 --> 02:33:02,000
写杠

5563
02:33:02,000 --> 02:33:03,000
donate

5564
02:33:03,000 --> 02:33:05,000
D-O-N-A-T-E

5565
02:33:05,000 --> 02:33:06,000
好吧

5566
02:33:06,000 --> 02:33:08,000
要提醒大家一点

5567
02:33:08,000 --> 02:33:10,000
是不要加 HTTPs

5568
02:33:10,000 --> 02:33:12,000
这个防止

5569
02:33:12,000 --> 02:33:14,000
反正它会跳转的

5570
02:33:14,000 --> 02:33:14,000
无所谓

5571
02:33:14,000 --> 02:33:15,000
对

5572
02:33:15,000 --> 02:33:17,000
但是为了保证您安全

5573
02:33:17,000 --> 02:33:18,000
它会自动跳转到一个

5574
02:33:18,000 --> 02:33:20,000
带 HTP

5575
02:33:20,000 --> 02:33:21,000
加密

5576
02:33:21,000 --> 02:33:22,000
带 HTP

5577
02:33:22,000 --> 02:33:23,000
加密

5578
02:33:23,000 --> 02:33:24,000
OK

5579
02:33:24,000 --> 02:33:27,000
今天的节目就

5580
02:33:27,000 --> 02:33:29,000
到这里了

5581
02:33:29,000 --> 02:33:31,000
1.79 GB

5582
02:33:31,000 --> 02:33:32,000
conversation

5583
02:33:32,000 --> 02:33:32,000
那么

5584
02:33:32,000 --> 02:33:33,000
ick

5585
02:33:33,000 --> 02:33:33,000
trends

5586
02:33:33,000 --> 02:33:34,000
还

5587
02:33:34,000 --> 02:33:36,000
投叙

5588
02:33:36,000 --> 02:33:36,000
傅

5589
02:33:36,000 --> 02:33:36,000
两 lamb

5590
02:33:36,000 --> 02:33:37,000
marketplace

5591
02:33:37,000 --> 02:33:38,000
Jacqueline

5592
02:33:38,000 --> 02:33:52,000
戴

5593
02:33:52,000 --> 02:33:53,000
优优独播 went

5594
02:33:53,000 --> 02:33:54,000
到这里了

5595
02:33:54,000 --> 02:33:56,000
咱们

