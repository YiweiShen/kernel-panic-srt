1
00:00:00,000 --> 00:00:04,000
欢迎收听 ipnpodcast 网络旗下的 IT 技术主题娱乐节目内核恐慌

2
00:00:04,000 --> 00:00:08,000
我们号称 Hackle 但是也没有干货 想听人听不想听人就别听

3
00:00:08,000 --> 00:00:12,000
内核恐慌的网址是 ipn.li-carnalpanic

4
00:00:12,000 --> 00:00:16,000
我们推荐大家使用 podcast 泛用型客户端定位我们的节目

5
00:00:16,000 --> 00:00:20,000
如果您不知道什么是泛用型客户端 或者您不知道该用什么客户端

6
00:00:20,000 --> 00:00:24,000
欢迎访问 ipn.li-faq

7
00:00:24,000 --> 00:00:26,000
同时也欢迎你为我们的节目捐款

8
00:00:26,000 --> 00:00:30,000
捐款例子是 ipn.li-carnalpanic-donate

9
00:00:30,000 --> 00:00:33,000
捐款进行随意 只要是能被 8 号整出的正硬数就可以

10
00:00:33,000 --> 00:00:37,000
捐款不会为你带来什么 不觉得也不会让你失去什么

11
00:00:37,000 --> 00:00:39,000
我们的口号是 no hard feelings

12
00:00:39,000 --> 00:00:41,000
越来越熟练了这段话

13
00:00:41,000 --> 00:00:42,000
对 这是苦练的结果

14
00:00:42,000 --> 00:00:48,000
每天晚上含着小十字在洗澡的时候背这段罐子好吗

15
00:00:48,000 --> 00:00:52,000
咱俩都不是这么二手 这谁来着

16
00:00:52,000 --> 00:00:57,000
我不记得了 反正是某个演说家要客服口吃的毛病

17
00:00:57,000 --> 00:00:58,000
然后

18
00:00:58,000 --> 00:01:00,000
这故事真的吗 还是一个鸡汤

19
00:01:00,000 --> 00:01:03,000
go question 我不知道 有可能是真的

20
00:01:03,000 --> 00:01:08,000
因为我在想一下 含着小十字练书画这件事情的意何在

21
00:01:08,000 --> 00:01:16,000
就增加你的账外吗 就好像绑着沙包在操场上跑圈一样

22
00:01:16,000 --> 00:01:21,000
可以让你吐个小十字之后发进去的舌头好像变得灵活了

23
00:01:21,000 --> 00:01:26,000
所以依此类别的话 如果程序员要提高自己的水平应该怎么增加这个难度呢

24
00:01:28,000 --> 00:01:29,000
不用显示器写程序

25
00:01:33,000 --> 00:01:35,000
用什么 打孔吗

26
00:01:38,000 --> 00:01:42,000
或者降低点的难度就只用单色显示器写程序

27
00:01:43,000 --> 00:01:49,000
然后等你有了愈法高粱之后 效率就可以升起来

28
00:01:49,000 --> 00:01:55,000
所以用什么 非愈法高粱的 用计师本写程序

29
00:01:55,000 --> 00:01:57,000
对 这就是实际上的事

30
00:01:57,000 --> 00:02:01,000
你不用 IDE 写程序的话

31
00:02:01,000 --> 00:02:04,000
如果你一开始就坚持不用 IDE 写程序

32
00:02:04,000 --> 00:02:08,000
那么等到你开始用 IDE 的时候 你的效率应该会有成倍的提升

33
00:02:10,000 --> 00:02:12,000
是不是这个道理

34
00:02:13,000 --> 00:02:14,000
想来应该是的

35
00:02:14,000 --> 00:02:17,000
所以这么说来 我们都算是一直在背着沙包在跑

36
00:02:18,000 --> 00:02:18,000
对

37
00:02:19,000 --> 00:02:20,000
做成一种困难的方式

38
00:02:20,000 --> 00:02:25,000
然后当你做成一种方式的方式的时候 你就会发现容易很多

39
00:02:26,000 --> 00:02:27,000
好吧

40
00:02:28,000 --> 00:02:31,000
这就好像打星级中吧 先用现在 Bluetooth 下面通过关

41
00:02:31,000 --> 00:02:33,000
然后再回去打 E 字点

42
00:02:34,000 --> 00:02:35,000
简直小差一点

43
00:02:35,000 --> 00:02:36,000
没错

44
00:02:37,000 --> 00:02:42,000
OK 先进入我们的第一个环节 Fallup

45
00:02:42,000 --> 00:02:47,000
我听说 Rail 拿到一块 Happy Hacking Keyboard Pro R 是真的吗

46
00:02:47,000 --> 00:02:47,000
对

47
00:02:48,000 --> 00:02:54,000
上次 Lawrence 把它那块弦制不用的 HHKB Pro 2 送给了我

48
00:02:54,000 --> 00:02:56,000
这是什么时候的事情

49
00:02:56,000 --> 00:02:57,000
这是两个月之前的事情

50
00:02:57,000 --> 00:02:59,000
快递走了这么久吗

51
00:02:59,000 --> 00:03:00,000
是

52
00:03:00,000 --> 00:03:02,000
是 我是挺早拿到

53
00:03:02,000 --> 00:03:05,000
但是因为还没来几集感觉上手

54
00:03:05,000 --> 00:03:08,000
所以就也一直没有讲

55
00:03:08,000 --> 00:03:10,000
但是就算也用了一段时间的

56
00:03:10,000 --> 00:03:13,000
现在也那个 因为整个键位那些都变了

57
00:03:15,000 --> 00:03:16,000
所以还要实话了一点时间来适应的

58
00:03:17,000 --> 00:03:19,000
这件事情之后觉得还不错

59
00:03:19,000 --> 00:03:21,000
所以我们可以讨论一下

60
00:03:22,000 --> 00:03:25,000
你的那个其实我一直有一个疑问

61
00:03:25,000 --> 00:03:27,000
好像跟 HHKB 它到底有几个版本

62
00:03:28,000 --> 00:03:29,000
应该是有若干的版本

63
00:03:29,000 --> 00:03:32,000
首先它有若干的版本

64
00:03:33,000 --> 00:03:36,000
因为我看那个 Wikipedia 上面写的时候

65
00:03:36,000 --> 00:03:40,000
它有可能有四五个四五六个版本

66
00:03:40,000 --> 00:03:40,000
还有什么

67
00:03:40,000 --> 00:03:43,000
但是根据日本的和 International 不一样

68
00:03:43,000 --> 00:03:47,000
但是包括有 HP Professional or Professional 2

69
00:03:47,000 --> 00:03:50,000
然后现在我看到那个是在卖的就叫做 Light 对吧

70
00:03:50,000 --> 00:03:51,000
应该是这样的

71
00:03:51,000 --> 00:03:54,000
一开始有 HPKB 普通版本

72
00:03:54,000 --> 00:03:55,000
就是第一代 HPKB

73
00:03:55,000 --> 00:03:58,000
后来有了 HPKB Light

74
00:03:58,000 --> 00:04:04,000
再后来有了 HP Pro 2

75
00:04:04,000 --> 00:04:06,000
然后 Pro 2 后面又出了一个 S 版本

76
00:04:06,000 --> 00:04:08,000
Ultimum S

77
00:04:08,000 --> 00:04:12,000
就是加了相比圈的比较降噪版本

78
00:04:12,000 --> 00:04:14,000
S than for silent

79
00:04:14,000 --> 00:04:16,000
所以它们之间有什么区别呢

80
00:04:16,000 --> 00:04:19,000
Light 版本有方向节

81
00:04:19,000 --> 00:04:28,000
然后日语版本是那种大的 T 型

82
00:04:28,000 --> 00:04:31,000
L 型到 L 型回车的应该是

83
00:04:31,000 --> 00:04:32,000
Oh no

84
00:04:32,000 --> 00:04:33,000
没有

85
00:04:33,000 --> 00:04:36,000
所以它所有就我们这么说

86
00:04:36,000 --> 00:04:39,000
它是分型号和那个国家的

87
00:04:39,000 --> 00:04:41,000
就是如果我们不考虑这个国家区别

88
00:04:41,000 --> 00:04:43,000
只考虑型号的区别的话

89
00:04:43,000 --> 00:04:45,000
它有几个不同

90
00:04:45,000 --> 00:04:48,000
有最就是 Original 是哪一款

91
00:04:48,000 --> 00:04:49,000
就最原始的那款

92
00:04:49,000 --> 00:04:51,000
Original 现在应该已经找不着了

93
00:04:51,000 --> 00:04:52,000
就已经算了

94
00:04:52,000 --> 00:04:55,000
但是我想知道那款应该叫什么名字

95
00:04:55,000 --> 00:04:56,000
就叫 HPKB 吗

96
00:04:56,000 --> 00:04:56,000
叫什么

97
00:04:56,000 --> 00:04:58,000
应该是就叫 HPKB Pro

98
00:04:58,000 --> 00:05:01,000
应该是就只叫 HPKB

99
00:05:01,000 --> 00:05:05,000
然后 Light Pro 的区分是从第二版才用

100
00:05:05,000 --> 00:05:07,000
所以 Light Pro 之间是什么区别

101
00:05:07,000 --> 00:05:09,000
这 Light 是 Light 版本

102
00:05:12,000 --> 00:05:13,000
这是一个很有趣的问题

103
00:05:16,000 --> 00:05:19,000
Light 和 Pro 之间版本很有可能

104
00:05:19,000 --> 00:05:21,000
建贸是有差别的

105
00:05:21,000 --> 00:05:25,000
然后 Pro 的版本现在是不是已经没有卖了

106
00:05:25,000 --> 00:05:25,000
对

107
00:05:25,000 --> 00:05:27,000
第一代的版本应该已经没有卖了

108
00:05:27,000 --> 00:05:29,000
甚至第一代的版本可能是没有

109
00:05:29,000 --> 00:05:30,000
International 版本的

110
00:05:30,000 --> 00:05:32,000
就是纯日文的料理

111
00:05:32,000 --> 00:05:34,000
因为我们现在用的都是所谓的

112
00:05:34,000 --> 00:05:36,000
Professional 2 对吧

113
00:05:36,000 --> 00:05:37,000
对

114
00:05:37,000 --> 00:05:38,000
Pro 2

115
00:05:38,000 --> 00:05:39,000
然后我去它那个官网看

116
00:05:39,000 --> 00:05:41,000
好像现在这款也没有卖了吗

117
00:05:41,000 --> 00:05:42,000
还是怎么样

118
00:05:42,000 --> 00:05:44,000
有吧

119
00:05:44,000 --> 00:05:46,000
不会停产了吧

120
00:05:46,000 --> 00:05:47,000
因为我去它官网

121
00:05:47,000 --> 00:05:49,000
它那个官网也长得很奇怪

122
00:05:49,000 --> 00:05:51,000
就是你不知道它到底是个什么样的

123
00:05:51,000 --> 00:05:52,000
是什么性质吗

124
00:05:52,000 --> 00:05:56,000
因为做的很日本网站

125
00:05:56,000 --> 00:06:00,000
这个描述太抽象了

126
00:06:00,000 --> 00:06:02,000
总之反正日本电商的网站都不怎么样

127
00:06:02,000 --> 00:06:04,000
这是肯定的

128
00:06:04,000 --> 00:06:06,000
而且 PFU 甚至不是做电商的

129
00:06:06,000 --> 00:06:07,000
它只是一个

130
00:06:07,000 --> 00:06:09,000
PFU 它这个叫做

131
00:06:09,000 --> 00:06:10,000
Embed Keyboard

132
00:06:10,000 --> 00:06:14,000
HGKB 这个页面上只有一款就是 Light 2

133
00:06:14,000 --> 00:06:16,000
它在展示的只有 Light 2 这一款

134
00:06:16,000 --> 00:06:17,000
你看是英文的吗

135
00:06:17,000 --> 00:06:18,000
对

136
00:06:18,000 --> 00:06:20,000
日本内容

137
00:06:20,000 --> 00:06:22,000
日本版本和英文版本不一样

138
00:06:22,000 --> 00:06:25,000
对

139
00:06:25,000 --> 00:06:26,000
为什么会这样

140
00:06:26,000 --> 00:06:27,000
我不知道

141
00:06:27,000 --> 00:06:31,000
也许他们绝大多数用户都是集中在日本

142
00:06:31,000 --> 00:06:34,000
我的这一块键盘实际上是托个朋友从日本买的

143
00:06:34,000 --> 00:06:35,000
所以

144
00:06:35,000 --> 00:06:36,000
好吧

145
00:06:36,000 --> 00:06:38,000
所以你那款是日文版吗

146
00:06:38,000 --> 00:06:38,000
不是

147
00:06:38,000 --> 00:06:39,000
是英文版本

148
00:06:39,000 --> 00:06:43,000
我特别强调说一定要有英文版本

149
00:06:43,000 --> 00:06:44,000
好乱了

150
00:06:44,000 --> 00:06:45,000
所以你那个是没有方向键

151
00:06:45,000 --> 00:06:48,000
然后只有一个在最右边有一个 FN Key 的

152
00:06:48,000 --> 00:06:49,000
对吧

153
00:06:49,000 --> 00:06:50,000
对

154
00:06:50,000 --> 00:06:51,000
它跟我那款是一样

155
00:06:51,000 --> 00:06:51,000
但是你的是无刻印

156
00:06:51,000 --> 00:06:52,000
我的是有刻印

157
00:06:52,000 --> 00:06:54,000
对

158
00:06:54,000 --> 00:06:58,000
一股优越感优然而适

159
00:07:00,000 --> 00:07:01,000
键帽可以换是吧

160
00:07:01,000 --> 00:07:02,000
对

161
00:07:02,000 --> 00:07:03,000
键帽可以换

162
00:07:03,000 --> 00:07:04,000
我要准备买一套无刻印的

163
00:07:05,000 --> 00:07:05,000
接着装逼

164
00:07:09,000 --> 00:07:11,000
然后我就看那个官网上

165
00:07:11,000 --> 00:07:13,000
现在在说这个 Light 2

166
00:07:13,000 --> 00:07:14,000
然后 Light 2

167
00:07:14,000 --> 00:07:15,000
干你也不

168
00:07:15,000 --> 00:07:17,000
所以你也不知道 Light 和 Fashionable 的区别是什么

169
00:07:17,000 --> 00:07:25,000
我怀疑 Light 所用的那个按下去的那个开关应该不是

170
00:07:25,000 --> 00:07:27,000
Tor

171
00:07:27,000 --> 00:07:28,000
Torpray

172
00:07:28,000 --> 00:07:30,000
Torpray 的不是 Torpray 的吧

173
00:07:30,000 --> 00:07:32,000
不是 Torpray 的键帽

174
00:07:32,000 --> 00:07:35,000
所以那还是所谓的进电容键盘吗

175
00:07:35,000 --> 00:07:37,000
还是什么其他的一个什么东西

176
00:07:37,000 --> 00:07:38,000
有一定可能

177
00:07:38,000 --> 00:07:40,000
因为 Light 好像卖的便宜

178
00:07:40,000 --> 00:07:41,000
而且不是便宜

179
00:07:41,000 --> 00:07:43,000
而且而且不是便宜一点

180
00:07:45,000 --> 00:07:46,000
好吧

181
00:07:46,000 --> 00:07:50,000
然后那个一盒就是就是就是 HKB Pro

182
00:07:50,000 --> 00:07:52,000
就是没有数字二的都是已经停产了

183
00:07:52,000 --> 00:07:52,000
是吧

184
00:07:52,000 --> 00:07:55,000
只有 Pro 2 和 Light 2 在说了

185
00:07:55,000 --> 00:07:55,000
对

186
00:07:55,000 --> 00:07:56,000
应该是找不到

187
00:07:57,000 --> 00:07:59,000
你说这个这个网页有日文版

188
00:07:59,000 --> 00:08:00,000
这个是在哪里

189
00:08:01,000 --> 00:08:02,000
我给你找找

190
00:08:04,000 --> 00:08:08,000
这个我搜那个 HKB 的 VQP

191
00:08:08,000 --> 00:08:10,000
他给了一个 official website

192
00:08:10,000 --> 00:08:10,000
点过来就这个

193
00:08:10,000 --> 00:08:13,000
然后这边折一款 Light 2 什么东西了

194
00:08:13,000 --> 00:08:15,000
没有其他任何形款性

195
00:08:15,000 --> 00:08:19,000
只有在 VQPDR 里面那个列表里面能找到一些在说

196
00:08:19,000 --> 00:08:21,000
那个还在售的款

197
00:08:21,000 --> 00:08:23,000
他有一个列表

198
00:08:23,000 --> 00:08:24,000
有个 end of life

199
00:08:24,000 --> 00:08:25,000
这位列表

200
00:08:25,000 --> 00:08:28,000
就有一堆都是应该是已经停产了的

201
00:08:28,000 --> 00:08:30,000
ok

202
00:08:30,000 --> 00:08:32,000
pfu.fujitsu.com

203
00:08:34,000 --> 00:08:38,000
所以现在在说的是 Type S Professional JP

204
00:08:38,000 --> 00:08:39,000
就是日文版

205
00:08:39,000 --> 00:08:42,000
professional 2 Light 2 还有一个 Light 2 for Mac

206
00:08:42,000 --> 00:08:43,000
对

207
00:08:43,000 --> 00:08:45,000
这个 professional JP 应该就是第一代的

208
00:08:48,000 --> 00:08:50,000
然后其他四款都是国际键

209
00:08:50,000 --> 00:08:52,000
因为是所谓的 International Layout

210
00:08:52,000 --> 00:08:53,000
professional 2

211
00:08:53,000 --> 00:08:55,000
professional 2 也有 JP 的版本

212
00:08:55,000 --> 00:08:56,000
我没理解错的话

213
00:08:57,000 --> 00:09:00,000
然后 Light 2 也有 JP 的版本

214
00:09:00,000 --> 00:09:07,000
然后 JP 这款的键的位置好像又不一样了

215
00:09:07,000 --> 00:09:07,000
不

216
00:09:07,000 --> 00:09:10,000
就像我说 professional JP 的是第一代

217
00:09:10,000 --> 00:09:12,000
然后这一代只有日语版本

218
00:09:12,000 --> 00:09:16,000
然后这一代的下面的空格键非常短

219
00:09:16,000 --> 00:09:19,000
他多了好几个什么其他的键不知道是干嘛的

220
00:09:19,000 --> 00:09:20,000
对

221
00:09:20,000 --> 00:09:25,000
然后从 professional 2 开始有了 International Layout

222
00:09:25,000 --> 00:09:27,000
Light 2 也有 International Layout

223
00:09:27,000 --> 00:09:28,000
同时也有日语键

224
00:09:28,000 --> 00:09:29,000
好吧

225
00:09:29,000 --> 00:09:29,000
对

226
00:09:29,000 --> 00:09:33,000
所以那个具体型号我们就不去啟示那个啰嗦了

227
00:09:33,000 --> 00:09:34,000
我问你一件事

228
00:09:34,000 --> 00:09:38,000
你觉得那个方向键对你来说有用吗

229
00:09:39,000 --> 00:09:42,000
其实还是有一些用处

230
00:09:43,000 --> 00:09:44,000
就这么说吧

231
00:09:44,000 --> 00:09:47,000
因为就我们两个都是 pro 2 的版本是没有方向键的

232
00:09:48,000 --> 00:09:54,000
你在非文本输入框的时候怎么去用方向键

233
00:09:55,000 --> 00:09:58,000
你要用 fnt 然后按那个叫什么

234
00:09:58,000 --> 00:10:00,000
那四个键对吧

235
00:10:00,000 --> 00:10:00,000
对

236
00:10:01,000 --> 00:10:02,000
你经常这样干吗

237
00:10:02,000 --> 00:10:04,000
还是挺明显的

238
00:10:04,000 --> 00:10:11,000
而且我其实右手的小公职在右手的小职在有一段时间里面是躺着的

239
00:10:13,000 --> 00:10:15,000
就按 fnt 的原因是吧

240
00:10:15,000 --> 00:10:15,000
对

241
00:10:16,000 --> 00:10:22,000
而且不止那个就是在公司里面我把那个 fn 加上 a 和 s

242
00:10:22,000 --> 00:10:25,000
改弄成了调节音量大小

243
00:10:25,000 --> 00:10:27,000
所以调节音量也要按在两个

244
00:10:28,000 --> 00:10:30,000
fn 是可以定字第一的吗

245
00:10:32,000 --> 00:10:37,000
fn 加 a 和 fn 加 s 在普通 pc 上也是调节音量

246
00:10:37,000 --> 00:10:39,000
其实在 match 上也是我想

247
00:10:40,000 --> 00:10:42,000
然后然后这个组合

248
00:10:42,000 --> 00:10:44,000
不不不你在公司用的是 Linux 系统对吧

249
00:10:44,000 --> 00:10:45,000
不是 OS 10

250
00:10:46,000 --> 00:10:46,000
对

251
00:10:47,000 --> 00:10:50,000
因为我上次的印象是我调用那个 fn 键定义的时候

252
00:10:50,000 --> 00:10:51,000
好像没有按出来有什么

253
00:10:52,000 --> 00:10:58,000
就是 fn 加个什么好像不能在苹果那个键盘的设置里面调节键吧

254
00:10:58,000 --> 00:10:59,000
可以吗

255
00:10:59,000 --> 00:10:59,000
这个不行

256
00:10:59,000 --> 00:11:07,000
但是 fn 加 a 直接对应了多媒体键里面的 volume up

257
00:11:07,000 --> 00:11:08,000
如果没有接错的话

258
00:11:08,000 --> 00:11:08,000
对

259
00:11:08,000 --> 00:11:09,000
OK

260
00:11:09,000 --> 00:11:10,000
good to know

261
00:11:10,000 --> 00:11:10,000
yeah

262
00:11:10,000 --> 00:11:11,000
所以我还可以

263
00:11:11,000 --> 00:11:12,000
没有

264
00:11:12,000 --> 00:11:15,000
你这个怎么查在哪里知道有这些对应的关系

265
00:11:17,000 --> 00:11:19,000
你的键

266
00:11:19,000 --> 00:11:21,000
你不是有刻意的键盘

267
00:11:21,000 --> 00:11:24,000
你那个键盘的正下方没有

268
00:11:24,000 --> 00:11:28,000
在 fn 就是就是那个这么说吧

269
00:11:28,000 --> 00:11:32,000
在左手键那些区域上只有键帽顶上才有

270
00:11:32,000 --> 00:11:34,000
没有側边那个 in 的

271
00:11:34,000 --> 00:11:37,000
那个 lite 键的含意的

272
00:11:39,000 --> 00:11:42,000
所以我不知道为什么你知道 fn 加 a 和 s 是调音量

273
00:11:42,000 --> 00:11:43,000
我从来没有试过

274
00:11:44,000 --> 00:11:46,000
因为说明书上有写吧

275
00:11:46,000 --> 00:11:46,000
我记得

276
00:11:47,000 --> 00:11:48,000
还有说明书

277
00:11:48,000 --> 00:11:49,000
对

278
00:11:49,000 --> 00:11:51,000
你是哪来的山寨

279
00:11:51,000 --> 00:11:51,000
哦

280
00:11:51,000 --> 00:11:55,000
是刘一直接寄给你的是吧

281
00:11:55,000 --> 00:11:55,000
对啊

282
00:11:55,000 --> 00:11:57,000
所以因为是他寄过来

283
00:11:57,000 --> 00:12:00,000
就是没有原装盒子

284
00:12:00,000 --> 00:12:01,000
而且这个人

285
00:12:02,000 --> 00:12:04,000
刘一这点做的太不靠谱了

286
00:12:04,000 --> 00:12:05,000
要是我我一定会

287
00:12:06,000 --> 00:12:07,000
原厂说

288
00:12:07,000 --> 00:12:09,000
这个事情不管他好

289
00:12:09,000 --> 00:12:13,000
因为是他说家人打包寄的

290
00:12:13,000 --> 00:12:14,000
所以比较麻烦

291
00:12:14,000 --> 00:12:15,000
OK

292
00:12:15,000 --> 00:12:19,000
我拿到的时候连那个 USB 的线都没有

293
00:12:19,000 --> 00:12:22,000
那都是那个通用的一个应该是

294
00:12:23,000 --> 00:12:24,000
是 mini usb 吧

295
00:12:24,000 --> 00:12:25,000
对

296
00:12:25,000 --> 00:12:25,000
对

297
00:12:25,000 --> 00:12:26,000
他挺常见

298
00:12:26,000 --> 00:12:27,000
我就自己配了一根

299
00:12:27,000 --> 00:12:28,000
就还可以

300
00:12:28,000 --> 00:12:31,000
但是我不知道还有说明书的这么一回事

301
00:12:31,000 --> 00:12:31,000
是的

302
00:12:31,000 --> 00:12:32,000
他还有说明书

303
00:12:32,000 --> 00:12:35,000
而且他说明书人会写那后面几个挑线

304
00:12:35,000 --> 00:12:37,000
搬到什么状态是什么样的功用

305
00:12:38,000 --> 00:12:40,000
那个 dip 可以在网站上查了的

306
00:12:40,000 --> 00:12:41,000
但是

307
00:12:41,000 --> 00:12:43,000
这个你说这个快捷键是这个

308
00:12:43,000 --> 00:12:45,000
快捷键应该也能在网上查

309
00:12:45,000 --> 00:12:46,000
很普通

310
00:12:47,000 --> 00:12:47,000
啊

311
00:12:48,000 --> 00:12:48,000
真的

312
00:12:48,000 --> 00:12:49,000
对了

313
00:12:49,000 --> 00:12:49,000
好了

314
00:12:49,000 --> 00:12:50,000
那我查一下

315
00:12:52,000 --> 00:12:52,000
哦

316
00:12:52,000 --> 00:12:53,000
OK

317
00:12:53,000 --> 00:12:55,000
我还看到了这个

318
00:12:55,000 --> 00:12:56,000
这个 format

319
00:12:56,000 --> 00:12:56,000
哎

320
00:12:56,000 --> 00:12:57,000
他是 light 2 的话

321
00:12:57,000 --> 00:13:00,000
多了一个 fnk 在左边是吧

322
00:13:00,000 --> 00:13:02,000
右边的 fn 还有吗

323
00:13:02,000 --> 00:13:03,000
有有也有

324
00:13:03,000 --> 00:13:04,000
但左边又多了一个 fnk

325
00:13:04,000 --> 00:13:05,000
我这个还蛮有用的

326
00:13:05,000 --> 00:13:08,000
就我发现最严重的问题就是

327
00:13:08,000 --> 00:13:09,000
fnk 在右边

328
00:13:09,000 --> 00:13:11,000
然后在那个苹果键盘上

329
00:13:11,000 --> 00:13:13,000
fnk 是在左下角吗

330
00:13:13,000 --> 00:13:15,000
这是说还蛮人格分裂的

331
00:13:15,000 --> 00:13:17,000
一会按左边一会按右边

332
00:13:18,000 --> 00:13:19,000
嗯

333
00:13:19,000 --> 00:13:22,000
然后再我再问你好

334
00:13:22,000 --> 00:13:24,000
就说在这个

335
00:13:24,000 --> 00:13:27,000
就是 os 10 的系统的文本编辑框里面

336
00:13:27,000 --> 00:13:29,000
你要换上下行的时候你怎么办

337
00:13:30,000 --> 00:13:33,000
在这边 os 10 系统的文本框

338
00:13:33,000 --> 00:13:36,000
就是比如说在这么说吗

339
00:13:36,000 --> 00:13:37,000
在就现在用的是这个

340
00:13:37,000 --> 00:13:39,000
我们用那个 nv alt 编辑这个

341
00:13:39,000 --> 00:13:40,000
note

342
00:13:40,000 --> 00:13:41,000
嗯

343
00:13:41,000 --> 00:13:43,000
你要切换上下行怎么办

344
00:13:45,000 --> 00:13:46,000
用方向键

345
00:13:48,000 --> 00:13:52,000
然后你要左右移动光标怎么办

346
00:13:54,000 --> 00:13:56,000
control 加 pn 是可以的吧

347
00:13:56,000 --> 00:13:57,000
然后

348
00:13:57,000 --> 00:13:58,000
是那个是 emax key bounding

349
00:13:58,000 --> 00:14:00,000
但是你是一个 vim 用户

350
00:14:00,000 --> 00:14:01,000
对

351
00:14:01,000 --> 00:14:02,000
所以我用方向键

352
00:14:04,000 --> 00:14:06,000
我我我为了这件事情

353
00:14:06,000 --> 00:14:07,000
因为方向键不好用吗

354
00:14:07,000 --> 00:14:08,000
要那个那个

355
00:14:08,000 --> 00:14:11,000
其实都是用小纸的

356
00:14:11,000 --> 00:14:13,000
就是左边的话算 k control 键

357
00:14:13,000 --> 00:14:14,000
也算有用小纸

358
00:14:14,000 --> 00:14:17,000
在在那个普通键盘的 caps walk 的位置

359
00:14:18,000 --> 00:14:19,000
对吧

360
00:14:19,000 --> 00:14:20,000
嗯

361
00:14:20,000 --> 00:14:22,000
然后你要用那个 control and

362
00:14:22,000 --> 00:14:25,000
然后 n 是下一行 p 上一行

363
00:14:25,000 --> 00:14:28,000
然后 f 是右移

364
00:14:28,000 --> 00:14:29,000
然后 b 是左移光标嘛

365
00:14:29,000 --> 00:14:31,000
但是如果你用方向键的话

366
00:14:31,000 --> 00:14:33,000
其实就是用右手的小纸 andreff

367
00:14:33,000 --> 00:14:35,000
然后按那几个方向键的

368
00:14:35,000 --> 00:14:36,000
附用的键

369
00:14:36,000 --> 00:14:37,000
对

370
00:14:37,000 --> 00:14:38,000
其实好像是差不多的我觉得

371
00:14:38,000 --> 00:14:41,000
所以所以你的点是吗

372
00:14:41,000 --> 00:14:42,000
就是你作为一个 vim 用户

373
00:14:42,000 --> 00:14:43,000
为了捍卫自己的尊严

374
00:14:43,000 --> 00:14:45,000
所以一定要找到一个

375
00:14:45,000 --> 00:14:46,000
我现在我现在很分裂

376
00:14:46,000 --> 00:14:48,000
因为我一会要用 emax key binding

377
00:14:48,000 --> 00:14:50,000
一会要用那个

378
00:14:50,000 --> 00:14:52,000
就是我本质上就遇到这种

379
00:14:52,000 --> 00:14:56,000
favim 的 k binding 支持的情况下

380
00:14:56,000 --> 00:14:58,000
比如说在这个

381
00:14:58,000 --> 00:14:58,000
这个故意界面上

382
00:14:58,000 --> 00:15:01,000
你选择上下的一个菜单

383
00:15:01,000 --> 00:15:01,000
举个例子

384
00:15:01,000 --> 00:15:04,000
你只能用这个方向键了吗

385
00:15:04,000 --> 00:15:05,000
对

386
00:15:05,000 --> 00:15:08,000
所以我就只能按住用右手的小纸 andreff

387
00:15:08,000 --> 00:15:10,000
然后用附用方向键去调那个

388
00:15:10,000 --> 00:15:11,000
选择

389
00:15:11,000 --> 00:15:13,000
但是在很多我们编织的框里面

390
00:15:13,000 --> 00:15:15,000
我又再用那个 emax key binding

391
00:15:15,000 --> 00:15:16,000
比如说在 nv out

392
00:15:16,000 --> 00:15:17,000
或者是这个

393
00:15:17,000 --> 00:15:19,000
比如说这个 savar 的这个地址栏

394
00:15:19,000 --> 00:15:20,000
我要编辑它的时候

395
00:15:20,000 --> 00:15:22,000
我又会用那个

396
00:15:22,000 --> 00:15:24,000
这个 emax key binding

397
00:15:24,000 --> 00:15:26,000
去加速我的那个光表移动

398
00:15:26,000 --> 00:15:27,000
比如说可以一个 word

399
00:15:27,000 --> 00:15:28,000
一个 word 的用而不是一个 character

400
00:15:28,000 --> 00:15:30,000
一个 character 移动吗

401
00:15:30,000 --> 00:15:31,000
嗯哼

402
00:15:31,000 --> 00:15:34,000
所以就我最近特别人格分裂

403
00:15:34,000 --> 00:15:34,000
你知道吗

404
00:15:34,000 --> 00:15:37,000
就在然后在那个 terminal

405
00:15:37,000 --> 00:15:38,000
或者是在 vim 里面打的

406
00:15:38,000 --> 00:15:41,000
就是用的那个 vim key binding

407
00:15:41,000 --> 00:15:44,000
你在 terminal 里面用 vim 的 k binding

408
00:15:45,000 --> 00:15:49,000
你是说你的 line edits 用的是 vim 的 k binding

409
00:15:49,000 --> 00:15:50,000
对呀对呀

410
00:15:50,000 --> 00:15:54,000
我已经把 line edits 的 k binding

411
00:15:54,000 --> 00:15:57,000
就是改回默认的 emax

412
00:15:57,000 --> 00:15:58,000
emax 的吗

413
00:15:58,000 --> 00:15:58,000
对

414
00:15:58,000 --> 00:16:00,000
所以你也叛逃了

415
00:16:00,000 --> 00:16:01,000
不我不是

416
00:16:01,000 --> 00:16:04,000
对主要是向现实妥协吧

417
00:16:04,000 --> 00:16:08,000
就是当因为一天要连

418
00:16:08,000 --> 00:16:12,000
无数台 remote session 的话

419
00:16:12,000 --> 00:16:14,000
就 ssh 到其他的机器上的话

420
00:16:14,000 --> 00:16:15,000
不想每次都改

421
00:16:15,000 --> 00:16:18,000
不想每次都改对

422
00:16:18,000 --> 00:16:21,000
而且去用别人的键盘的时候

423
00:16:21,000 --> 00:16:24,000
也会非常的痛苦

424
00:16:24,000 --> 00:16:24,000
好吧

425
00:16:24,000 --> 00:16:25,000
理解了

426
00:16:25,000 --> 00:16:28,000
所以总体来说这个 hqv pro 2

427
00:16:28,000 --> 00:16:30,000
你用起来

428
00:16:30,000 --> 00:16:32,000
你用了多久了到底

429
00:16:32,000 --> 00:16:34,000
一年多吧

430
00:16:34,000 --> 00:16:35,000
所以感觉如何

431
00:16:35,000 --> 00:16:36,000
我也不知道

432
00:16:36,000 --> 00:16:37,000
我觉得太紧内化了

433
00:16:37,000 --> 00:16:38,000
就是你不说的话

434
00:16:38,000 --> 00:16:39,000
不觉得它是

435
00:16:39,000 --> 00:16:41,000
不觉得它是一个什么事了是吧

436
00:16:41,000 --> 00:16:43,000
对现在我已经不觉得它是一个

437
00:16:43,000 --> 00:16:44,000
因为我刚用一个月

438
00:16:44,000 --> 00:16:46,000
所以感觉还不太一样

439
00:16:46,000 --> 00:16:47,000
就是有时候会觉得

440
00:16:47,000 --> 00:16:49,000
有点人格分裂

441
00:16:49,000 --> 00:16:49,000
因为我还有时候还用

442
00:16:49,000 --> 00:16:51,000
那个笔记本的那个 Mac

443
00:16:51,000 --> 00:16:51,000
自带那个键盘

444
00:16:51,000 --> 00:16:52,000
对

445
00:16:52,000 --> 00:16:53,000
我也是

446
00:16:53,000 --> 00:16:56,000
而且我的两个 layout 是不一样的

447
00:16:56,000 --> 00:16:56,000
所以我其实我在想

448
00:16:56,000 --> 00:16:59,000
那个它现在在卖那个 light for Mac

449
00:16:59,000 --> 00:17:02,000
那个感觉可能稍微正常一点

450
00:17:02,000 --> 00:17:03,000
所以要买一块

451
00:17:03,000 --> 00:17:04,000
再说吧

452
00:17:04,000 --> 00:17:07,000
这个先适应一段时间再说

453
00:17:07,000 --> 00:17:10,000
看看到底能不能够接受这种方式

454
00:17:10,000 --> 00:17:12,000
所以我觉得整个手感还是不错的

455
00:17:12,000 --> 00:17:14,000
这个 toppray 的那个按键的感觉还是

456
00:17:14,000 --> 00:17:15,000
灯灯灯

457
00:17:15,000 --> 00:17:16,000
这种比较灯灯灯

458
00:17:16,000 --> 00:17:17,000
灯灯的感觉

459
00:17:20,000 --> 00:17:22,000
OK

460
00:17:22,000 --> 00:17:24,000
好不扯这个单

461
00:17:24,000 --> 00:17:25,000
嗯

462
00:17:25,000 --> 00:17:27,000
那今天我们今天下一个环节吧

463
00:17:27,000 --> 00:17:29,000
读两封这个听众来信

464
00:17:29,000 --> 00:17:30,000
对

465
00:17:30,000 --> 00:17:31,000
Difu 你来吧

466
00:17:31,000 --> 00:17:33,000
嗯好

467
00:17:33,000 --> 00:17:36,000
对这两封的读来信都是针对上一期

468
00:17:36,000 --> 00:17:38,000
那个我读百的

469
00:17:38,000 --> 00:17:38,000
读百

470
00:17:38,000 --> 00:17:39,000
对

471
00:17:40,000 --> 00:17:43,000
就反正事后这个

472
00:17:43,000 --> 00:17:47,000
不鸟万如一和不鸟万 real 先生都表达了惊讶

473
00:17:47,000 --> 00:17:49,000
说你一个人都得得得

474
00:17:49,000 --> 00:17:50,000
居然可以得为一个小时

475
00:17:50,000 --> 00:17:52,000
这个真的

476
00:17:52,000 --> 00:17:53,000
我自己也没想到我可以得为一个小时

477
00:17:53,000 --> 00:17:55,000
但事实上

478
00:17:55,000 --> 00:17:56,000
我本来是计划都两个小时

479
00:17:56,000 --> 00:18:00,000
哈哈哈

480
00:18:00,000 --> 00:18:02,000
我觉得已经很厉害了

481
00:18:02,000 --> 00:18:03,000
OK

482
00:18:03,000 --> 00:18:05,000
谢谢

483
00:18:05,000 --> 00:18:09,000
首先是我们的老朋友 Virgin Ming 先生

484
00:18:09,000 --> 00:18:11,000
是先生们自己来的

485
00:18:11,000 --> 00:18:12,000
我小朋友

486
00:18:12,000 --> 00:18:12,000
对

487
00:18:12,000 --> 00:18:13,000
进来立方听

488
00:18:13,000 --> 00:18:14,000
听众来信

489
00:18:14,000 --> 00:18:16,000
嗯

490
00:18:16,000 --> 00:18:17,000
吴唐你好

491
00:18:17,000 --> 00:18:18,000
呃

492
00:18:18,000 --> 00:18:21,000
这是对新鲜出炉的第 18 期节目的反馈

493
00:18:21,000 --> 00:18:21,000
对

494
00:18:21,000 --> 00:18:26,000
我记得这一期应该是在上线之后可能

495
00:18:26,000 --> 00:18:27,000
五六个小时

496
00:18:27,000 --> 00:18:28,000
他就写了一封

497
00:18:28,000 --> 00:18:30,000
写了这封信来

498
00:18:30,000 --> 00:18:32,000
真是太热心了

499
00:18:32,000 --> 00:18:34,000
嗯

500
00:18:34,000 --> 00:18:35,000
他说

501
00:18:35,000 --> 00:18:37,000
高级程序员到会边

502
00:18:37,000 --> 00:18:38,000
到可执行文件

503
00:18:38,000 --> 00:18:40,000
到机器指令

504
00:18:40,000 --> 00:18:43,000
这一系列过程并不算是编码吧

505
00:18:43,000 --> 00:18:46,000
complyo 和 ncode 是两回事

506
00:18:46,000 --> 00:18:46,000
这个

507
00:18:46,000 --> 00:18:47,000
呃

508
00:18:47,000 --> 00:18:48,000
对

509
00:18:48,000 --> 00:18:50,000
其实我之所以说自己本来计划

510
00:18:50,000 --> 00:18:52,000
计划说两个小时

511
00:18:52,000 --> 00:18:55,000
就是因为我后一个小时是要说编码的

512
00:18:55,000 --> 00:18:59,000
但是说到一个小时的时候已经就撑不住了

513
00:18:59,000 --> 00:19:02,000
前一部分是说 complyo

514
00:19:02,000 --> 00:19:04,000
对于是说计算机的指令是怎样转后面

515
00:19:04,000 --> 00:19:07,000
二进是指令的

516
00:19:07,000 --> 00:19:09,000
计算机的文本指令是如何转后面

517
00:19:09,000 --> 00:19:11,000
二进指令

518
00:19:11,000 --> 00:19:15,000
然后我本来计划在后半部讲编码

519
00:19:15,000 --> 00:19:17,000
就是什么 Unco 的呀

520
00:19:17,000 --> 00:19:18,000
Azuki 啊

521
00:19:18,000 --> 00:19:20,000
就是什么 GV

522
00:19:20,000 --> 00:19:21,000
blah blah 一系列

523
00:19:21,000 --> 00:19:24,000
但是后来实在是撑不下去了

524
00:19:24,000 --> 00:19:28,000
所以才会有给人这种印象

525
00:19:28,000 --> 00:19:28,000
对

526
00:19:28,000 --> 00:19:31,000
其实上一期的真正的主题的确是编码

527
00:19:31,000 --> 00:19:34,000
只不过没能进入真正的主题

528
00:19:36,000 --> 00:19:36,000
这叫什么

529
00:19:36,000 --> 00:19:38,000
夹杆而止

530
00:19:38,000 --> 00:19:39,000
对

531
00:19:39,000 --> 00:19:39,000
对

532
00:19:39,000 --> 00:19:40,000
你也对那个字了

533
00:19:42,000 --> 00:19:43,000
接着读

534
00:19:43,000 --> 00:19:45,000
有一件事情让我有些感叹

535
00:19:45,000 --> 00:19:48,000
Azuki 编码里面大写字母的 A 165

536
00:19:48,000 --> 00:19:52,000
这件事情存在我记忆里面应该已经十年了吧

537
00:19:52,000 --> 00:19:54,000
然而直到今天我才明白

538
00:19:54,000 --> 00:19:56,000
那是 64 加 1

539
00:19:56,000 --> 00:19:59,000
当年只是把 65

540
00:19:59,000 --> 00:20:02,000
作为一个 magic number

541
00:20:02,000 --> 00:20:04,000
强行记住而已

542
00:20:04,000 --> 00:20:06,000
因为当时刚刚学而进去

543
00:20:06,000 --> 00:20:07,000
对此丝毫不敏感

544
00:20:07,000 --> 00:20:09,000
老师也没有多解释

545
00:20:09,000 --> 00:20:10,000
我也没有觉得有什么不对

546
00:20:10,000 --> 00:20:13,000
然而现在看来明天是少了一块拼图

547
00:20:13,000 --> 00:20:16,000
以此类推小写字母 A 是 97

548
00:20:16,000 --> 00:20:18,000
97 就等 64 加上 32 加上 1

549
00:20:18,000 --> 00:20:19,000
也是很符合逻辑的

550
00:20:21,000 --> 00:20:24,000
所以这里就是

551
00:20:24,000 --> 00:20:26,000
它的意思就是 64 这个数字

552
00:20:27,000 --> 00:20:29,000
就是 8 进之

553
00:20:29,000 --> 00:20:31,000
8 进之

554
00:20:31,000 --> 00:20:34,000
2 进之的 7 位的 1

555
00:20:34,000 --> 00:20:35,000
然后后面就是 6 个 0

556
00:20:35,000 --> 00:20:37,000
所以这是一个特别的数字

557
00:20:37,000 --> 00:20:40,000
然后 97 是 64 加 32

558
00:20:40,000 --> 00:20:43,000
也就是 1 后面 6 个 0 加上 1 后面 5 个 0

559
00:20:43,000 --> 00:20:46,000
也就是 1 0 0 0 0

560
00:20:46,000 --> 00:20:48,000
这个数字是 96

561
00:20:48,000 --> 00:20:51,000
然后 96 后面的第一个

562
00:20:51,000 --> 00:20:55,000
就是 1 0 0 0 1

563
00:20:55,000 --> 00:20:58,000
这个 2 进之编码是代表小写字母 A

564
00:20:58,000 --> 00:21:00,000
所以这些其实在最开始规定

565
00:21:00,000 --> 00:21:03,000
Askymar 的时候都已经

566
00:21:03,000 --> 00:21:05,000
都是有一定的内在的逻辑

567
00:21:05,000 --> 00:21:06,000
对

568
00:21:06,000 --> 00:21:11,000
然后 Askymar 64 就是 at

569
00:21:11,000 --> 00:21:14,000
所以各位如果你要想去

570
00:21:14,000 --> 00:21:15,000
名记某一个事件的时候

571
00:21:15,000 --> 00:21:17,000
你可以多打这个 at

572
00:21:17,000 --> 00:21:19,000
然后前面可以加上一个大写字母 y

573
00:21:21,000 --> 00:21:22,000
OK

574
00:21:22,000 --> 00:21:23,000
接着读

575
00:21:25,000 --> 00:21:27,000
这让我想到另一件事

576
00:21:27,000 --> 00:21:30,000
大一的四鞋家课程里面有一道习题

577
00:21:30,000 --> 00:21:32,000
实现一个支持 reverse

578
00:21:32,000 --> 00:21:34,000
polish notation 的计算器

579
00:21:34,000 --> 00:21:36,000
当时也没觉得有什么特别之处

580
00:21:36,000 --> 00:21:37,000
无非就是个循环练习

581
00:21:37,000 --> 00:21:41,000
为什么要弄出这么一套反直觉的计判

582
00:21:41,000 --> 00:21:45,000
直到两年之后上到 functional programming 课

583
00:21:45,000 --> 00:21:48,000
到快到习近平考试的时候才突然反应过来

584
00:21:48,000 --> 00:21:50,000
这无非就是换了个形式

585
00:21:50,000 --> 00:21:54,000
针对四责运算这个非常特别的情况

586
00:21:54,000 --> 00:21:58,000
显示的把地规优化成循环

587
00:21:59,000 --> 00:22:04,000
而 reverse polish notation 发明早于 list 二三十年

588
00:22:04,000 --> 00:22:07,000
我也没读 list 最早的那篇论文

589
00:22:07,000 --> 00:22:10,000
但我相信两者形式上相通绝不止是偶然

590
00:22:11,000 --> 00:22:13,000
这种感觉不知道怎么形容

591
00:22:13,000 --> 00:22:14,000
dji view 吗

592
00:22:14,000 --> 00:22:15,000
如果在一开始学习的时候

593
00:22:15,000 --> 00:22:18,000
就能了解背后这些神秘的东西

594
00:22:18,000 --> 00:22:20,000
computer science 本来应该可以更迷人

595
00:22:21,000 --> 00:22:23,000
至于你的节目里面

596
00:22:23,000 --> 00:22:26,000
只有一分钟不到的正题

597
00:22:26,000 --> 00:22:29,000
省落机省月几百字的吐槽

598
00:22:29,000 --> 00:22:31,000
但我又但有一点我想说明

599
00:22:31,000 --> 00:22:32,000
这么说吧

600
00:22:32,000 --> 00:22:36,000
我们扩好仅止我自己周边的人

601
00:22:36,000 --> 00:22:38,000
我生于 1992 年

602
00:22:38,000 --> 00:22:39,000
扩好结束

603
00:22:39,000 --> 00:22:41,000
这就是为什么我说这是个小朋友

604
00:22:41,000 --> 00:22:43,000
1992 年啊 天呐

605
00:22:45,000 --> 00:22:47,000
90 后的明先生你好

606
00:22:47,000 --> 00:22:49,000
对 90 受到明小朋友你好

607
00:22:51,000 --> 00:22:52,000
节目念

608
00:22:52,000 --> 00:22:54,000
我们生长起来的环境里面

609
00:22:54,000 --> 00:22:56,000
并没有什么机制来保证人们

610
00:22:56,000 --> 00:22:58,000
人们在生长过程中

611
00:22:58,000 --> 00:23:01,000
能够以较温和的方式了解

612
00:23:01,000 --> 00:23:04,000
如何谈恋爱这个常识

613
00:23:04,000 --> 00:23:06,000
独生子女和父母离婚成风

614
00:23:06,000 --> 00:23:09,000
扩好 90 年代人们突然像感湿毛似的

615
00:23:09,000 --> 00:23:12,000
开始考虑甚至执行离婚

616
00:23:12,000 --> 00:23:13,000
扩好结束

617
00:23:13,000 --> 00:23:14,000
但影响都不提了

618
00:23:14,000 --> 00:23:16,000
我可以确定的是

619
00:23:16,000 --> 00:23:19,000
在大学之前三观上类定型的时候

620
00:23:19,000 --> 00:23:22,000
在国内练习谈恋爱的机会不仅是少

621
00:23:22,000 --> 00:23:24,000
而且大多数情况下是离京看到

622
00:23:24,000 --> 00:23:27,000
得不到任何可靠的第三方支持的

623
00:23:27,000 --> 00:23:30,000
于是等到上大大学之后

624
00:23:30,000 --> 00:23:32,000
我听到了看到了许多

625
00:23:32,000 --> 00:23:35,000
不知道该称为悲剧还是黑色幽默的故事

626
00:23:35,000 --> 00:23:36,000
我自己也扩好

627
00:23:36,000 --> 00:23:38,000
不知道有幸还是不幸

628
00:23:38,000 --> 00:23:38,000
扩好结束

629
00:23:38,000 --> 00:23:41,000
参与了其中一个

630
00:23:41,000 --> 00:23:43,000
Learned 的 Hardway 的确是有效的测语

631
00:23:43,000 --> 00:23:46,000
但是如果我们讨论是感情

632
00:23:46,000 --> 00:23:47,000
这里的 Hardway

633
00:23:47,000 --> 00:23:48,000
可能对你

634
00:23:48,000 --> 00:23:52,000
或者对对方造成不可逆的伤害

635
00:23:52,000 --> 00:23:53,000
真的没问题吗

636
00:23:53,000 --> 00:23:54,000
更重要的是

637
00:23:54,000 --> 00:23:56,000
最好的时机已经过去了

638
00:23:56,000 --> 00:23:58,000
这个 bug 改起来会非常痛苦

639
00:23:58,000 --> 00:23:59,000
尽会于不可行

640
00:23:59,000 --> 00:24:01,000
这不只是程序员的问题

641
00:24:01,000 --> 00:24:03,000
我承认外行人甚至业内人士

642
00:24:03,000 --> 00:24:06,000
对于程序员的 stereotype 有时候不可理喻

643
00:24:06,000 --> 00:24:10,000
但问题的本质仅仅是作为一个人

644
00:24:10,000 --> 00:24:13,000
如何发展处理和另一个人的亲密关系

645
00:24:13,000 --> 00:24:14,000
而已

646
00:24:14,000 --> 00:24:16,000
把职业甚至相关的 stereotype

647
00:24:16,000 --> 00:24:18,000
捲进来作为预设处理

648
00:24:18,000 --> 00:24:20,000
难道不是圆目求鱼吗

649
00:24:20,000 --> 00:24:22,000
最后你为什么要一次性录完

650
00:24:22,000 --> 00:24:24,000
不能休息一天接着录吗

651
00:24:25,000 --> 00:24:27,000
OK 你要完了

652
00:24:28,000 --> 00:24:30,000
任何什么想说了吗

653
00:24:31,000 --> 00:24:34,000
其实我觉得他对你上期的

654
00:24:34,000 --> 00:24:37,000
打引号的政题的权势挺好的

655
00:24:37,000 --> 00:24:39,000
这个真的是一件跟职业

656
00:24:39,000 --> 00:24:41,000
什么其他关系不大的事情

657
00:24:41,000 --> 00:24:46,000
这就是一个做人的基本的一些东西

658
00:24:46,000 --> 00:24:48,000
在我们现在这个

659
00:24:48,000 --> 00:24:51,000
我很设备的一个欠缺

660
00:24:51,000 --> 00:24:52,000
但我觉得很神奇的是

661
00:24:52,000 --> 00:24:55,000
90 后现在谈恋爱还是这么受限吗

662
00:24:55,000 --> 00:24:56,000
对 我有这个感想

663
00:24:56,000 --> 00:24:58,000
就是我觉得 80

664
00:24:58,000 --> 00:25:01,000
我们这支 80 年代后的这一批人

665
00:25:01,000 --> 00:25:02,000
这次 Rail 调不到了

666
00:25:02,000 --> 00:25:04,000
你好歹是个 80

667
00:25:05,000 --> 00:25:07,000
我们在年轻的时候

668
00:25:07,000 --> 00:25:08,000
谈恋爱也很受限制

669
00:25:08,000 --> 00:25:10,000
这个是实情

670
00:25:10,000 --> 00:25:14,000
但是我怎么觉得好像 90 后应该

671
00:25:14,000 --> 00:25:16,000
不存在这样的限制

672
00:25:16,000 --> 00:25:17,000
难道

673
00:25:17,000 --> 00:25:20,000
难道是中国还是那个样子吗

674
00:25:22,000 --> 00:25:25,000
作为两个外国

675
00:25:25,000 --> 00:25:27,000
生活在外国的人

676
00:25:27,000 --> 00:25:29,000
怎么说真的是

677
00:25:32,000 --> 00:25:34,000
对 我觉得我们觉得我不够了解他们

678
00:25:34,000 --> 00:25:37,000
就不够了解这个后一个 10 年出生的人

679
00:25:37,000 --> 00:25:39,000
他们的一个成长的状况

680
00:25:39,000 --> 00:25:42,000
这个是挺讨厌的一件事情

681
00:25:42,000 --> 00:25:45,000
不过可能也可以理解

682
00:25:45,000 --> 00:25:48,000
因为你想我们毕业的时候

683
00:25:48,000 --> 00:25:50,000
带我们的那群老师

684
00:25:50,000 --> 00:25:53,000
至少还会在教职上

685
00:25:53,000 --> 00:25:57,000
对 至少还会在教职上再待个 10 年

686
00:25:57,000 --> 00:26:02,000
所以也许现在的谈恋爱的环境

687
00:26:02,000 --> 00:26:04,000
没有我们想象的那么开放

688
00:26:04,000 --> 00:26:06,000
或者这么理解

689
00:26:06,000 --> 00:26:08,000
就是只要高考这件事情还存在

690
00:26:08,000 --> 00:26:10,000
就知道中国还是这么一种

691
00:26:11,000 --> 00:26:14,000
这种就是要人多的竞争的模式

692
00:26:14,000 --> 00:26:16,000
可能这件事情就很难幸免

693
00:26:19,000 --> 00:26:20,000
有道理

694
00:26:21,000 --> 00:26:23,000
说到高考还是昨天

695
00:26:23,000 --> 00:26:24,000
还是前几天刚刚考考结束

696
00:26:25,000 --> 00:26:28,000
不知道我们听众朋友里面有没有

697
00:26:29,000 --> 00:26:31,000
现在这属于解脱呢

698
00:26:31,000 --> 00:26:32,000
还是什么有状态的

699
00:26:33,000 --> 00:26:35,000
或者是刚刚考完

700
00:26:35,000 --> 00:26:36,000
打算报据上去

701
00:26:36,000 --> 00:26:37,000
新千万点

702
00:26:39,000 --> 00:26:40,000
三四

703
00:26:41,000 --> 00:26:42,000
你得想清楚

704
00:26:43,000 --> 00:26:44,000
好吧

705
00:26:45,000 --> 00:26:47,000
然后我觉得他说的那个

706
00:26:48,000 --> 00:26:49,000
程学员的 sterile type

707
00:26:49,000 --> 00:26:50,000
就是我其实上一期

708
00:26:50,000 --> 00:26:52,000
我已经不记得自己说的

709
00:26:53,000 --> 00:26:53,000
突然

710
00:26:53,000 --> 00:26:55,000
但是你上期我觉得有点

711
00:26:55,000 --> 00:26:58,000
我觉得他这里也有提到

712
00:26:58,000 --> 00:26:59,000
就是说

713
00:27:00,000 --> 00:27:02,000
这件事情跟职业真的没有他大关系

714
00:27:02,000 --> 00:27:04,000
对 其实我上一期之所以会想的

715
00:27:04,000 --> 00:27:05,000
这个就是因为

716
00:27:07,000 --> 00:27:09,000
可能是在网上看到了一个贴子

717
00:27:09,000 --> 00:27:09,000
说什么

718
00:27:09,000 --> 00:27:11,000
我是程学员找不到女朋友

719
00:27:11,000 --> 00:27:11,000
blah blah

720
00:27:11,000 --> 00:27:14,000
或者是什么

721
00:27:14,000 --> 00:27:14,000
我能不能成学员

722
00:27:14,000 --> 00:27:17,000
我想要送她一个什么什么什么玩意

723
00:27:17,000 --> 00:27:18,000
然后我总是在想说

724
00:27:18,000 --> 00:27:20,000
程学员这个身份有什么重要吗

725
00:27:21,000 --> 00:27:22,000
为什么

726
00:27:23,000 --> 00:27:25,000
要把这个身份单独提出来

727
00:27:25,000 --> 00:27:27,000
好像他三号三位就改变了

728
00:27:27,000 --> 00:27:28,000
你是一个

729
00:27:30,000 --> 00:27:30,000
人

730
00:27:30,000 --> 00:27:31,000
这个

731
00:27:32,000 --> 00:27:32,000
基本

732
00:27:34,000 --> 00:27:35,000
现实一样

733
00:27:37,000 --> 00:27:38,000
有可能是跟你

734
00:27:38,000 --> 00:27:40,000
有一次说到这么一件事情有关系

735
00:27:40,000 --> 00:27:43,000
就是编程其实是一个逐渐意画的过程

736
00:27:44,000 --> 00:27:46,000
跑掉你作为人的那一面

737
00:27:46,000 --> 00:27:46,000
然后

738
00:27:48,000 --> 00:27:50,000
要把你假设成一个很理性的机器

739
00:27:50,000 --> 00:27:51,000
去一行一行

740
00:27:51,000 --> 00:27:54,000
去解析执行那段代码的这么一个过程

741
00:27:54,000 --> 00:27:57,000
然后所以我不知道是不是时间长了之后

742
00:27:57,000 --> 00:27:58,000
会让人变得

743
00:27:59,000 --> 00:28:00,000
非

744
00:28:02,000 --> 00:28:03,000
非人类

745
00:28:03,000 --> 00:28:05,000
变得过于理性和非人类的

746
00:28:05,000 --> 00:28:06,000
然后

747
00:28:06,000 --> 00:28:07,000
很多这个

748
00:28:07,000 --> 00:28:10,000
所谓中国国内的这种教育出来的

749
00:28:10,000 --> 00:28:11,000
那种理工科生会

750
00:28:11,000 --> 00:28:13,000
有个叫什么特别轴

751
00:28:13,000 --> 00:28:13,000
你知道吗

752
00:28:14,000 --> 00:28:15,000
就认死了

753
00:28:15,000 --> 00:28:16,000
就不知道怎么变成

754
00:28:16,000 --> 00:28:20,000
经常会把我们理科生挂在嘴边

755
00:28:20,000 --> 00:28:21,000
没错

756
00:28:21,000 --> 00:28:21,000
没错

757
00:28:21,000 --> 00:28:22,000
然后这个时候就最容易在

758
00:28:23,000 --> 00:28:24,000
感情上出现问题

759
00:28:24,000 --> 00:28:26,000
就是说你觉得逻辑上的事情是沉迷的

760
00:28:26,000 --> 00:28:28,000
但是你要知道这个世界并不是

761
00:28:29,000 --> 00:28:30,000
让着逻辑的方式运行的

762
00:28:31,000 --> 00:28:33,000
这件事情可能会让很多人感到伤感

763
00:28:33,000 --> 00:28:36,000
但现实就是在现实世界里面

764
00:28:36,000 --> 00:28:37,000
如果你把一个

765
00:28:38,000 --> 00:28:40,000
condition 测试一万遍的可能

766
00:28:41,000 --> 00:28:42,000
有五千遍

767
00:28:43,000 --> 00:28:44,000
是错

768
00:28:44,000 --> 00:28:45,000
另外五千遍是错

769
00:28:45,000 --> 00:28:47,000
你得不到一个确定的

770
00:28:47,000 --> 00:28:49,000
而不像城市里面

771
00:28:50,000 --> 00:28:53,000
我们接下来要接触的主题就是

772
00:28:53,000 --> 00:28:54,000
有些事情是可以重复的

773
00:28:54,000 --> 00:28:57,000
这种重复的事情就是可以被测试

774
00:28:57,000 --> 00:29:00,000
但现实生活里面很多的东西是没有办法

775
00:29:01,000 --> 00:29:02,000
重复验证

776
00:29:02,000 --> 00:29:03,000
也许你再来一次

777
00:29:04,000 --> 00:29:06,000
得到的结果就会完全不一样

778
00:29:06,000 --> 00:29:07,000
谁知道

779
00:29:07,000 --> 00:29:08,000
甚至就说他们经常说的那句话

780
00:29:08,000 --> 00:29:11,000
两点之间的最短的线路可能不是值的

781
00:29:11,000 --> 00:29:13,000
但这句话你怎么理解你自己去想

782
00:29:13,000 --> 00:29:14,000
对

783
00:29:14,000 --> 00:29:16,000
曲觉音怎么定义最短

784
00:29:18,000 --> 00:29:19,000
可能最省时间而已

785
00:29:20,000 --> 00:29:22,000
这就好像一个 GPS 导航音会问你

786
00:29:22,000 --> 00:29:23,000
你是要最省时间的

787
00:29:23,000 --> 00:29:25,000
还是要最短的线路

788
00:29:26,000 --> 00:29:26,000
刚刚学开车的时候

789
00:29:26,000 --> 00:29:28,000
我不想说质量准的那不一样

790
00:29:29,000 --> 00:29:30,000
后来才明白真的不一样

791
00:29:33,000 --> 00:29:37,000
而且我觉得对于很多程序员也好

792
00:29:37,000 --> 00:29:40,000
他的可能很多人的职业规划是说

793
00:29:40,000 --> 00:29:43,000
要在几年三五年十年做成一个

794
00:29:43,000 --> 00:29:47,000
所谓的技术岗位的管理者这么一个

795
00:29:47,000 --> 00:29:47,000
对

796
00:29:47,000 --> 00:29:50,000
这个时候其实你会发现

797
00:29:50,000 --> 00:29:51,000
你一旦走向所谓的管理岗位

798
00:29:51,000 --> 00:29:53,000
你是你要写代码的时候就不多了

799
00:29:53,000 --> 00:29:56,000
反而是考验你对人的理解

800
00:29:56,000 --> 00:29:59,000
对人性的思考的地方

801
00:30:00,000 --> 00:30:02,000
会比你逻辑的地方多的

802
00:30:02,000 --> 00:30:04,000
多了多的时候

803
00:30:04,000 --> 00:30:07,000
所以你如果处理不好

804
00:30:07,000 --> 00:30:10,000
你和你亲密的人的关系

805
00:30:10,000 --> 00:30:13,000
估计你走管理岗位也会挺愚闷的

806
00:30:13,000 --> 00:30:13,000
对

807
00:30:13,000 --> 00:30:16,000
你会发现自己此前一直努力压抑的情商

808
00:30:16,000 --> 00:30:18,000
忽然变得无比重要了

809
00:30:19,000 --> 00:30:23,000
然后觉得自己白痴一样在那里

810
00:30:23,000 --> 00:30:23,000
对

811
00:30:24,000 --> 00:30:26,000
当然说到最后这个事情

812
00:30:26,000 --> 00:30:28,000
那我们可以反正你上次

813
00:30:29,000 --> 00:30:30,000
那吐槽了

814
00:30:30,000 --> 00:30:32,000
我也来吐槽一下

815
00:30:32,000 --> 00:30:33,000
就是反正我找你朋友

816
00:30:33,000 --> 00:30:35,000
是我曾经曾许远之前的事了

817
00:30:35,000 --> 00:30:37,000
后面怎么着我也管不着了

818
00:30:38,000 --> 00:30:39,000
吃国国的现有

819
00:30:42,000 --> 00:30:43,000
好吧

820
00:30:43,000 --> 00:30:47,000
OK 我们讲下一条的听众反馈

821
00:30:47,000 --> 00:30:49,000
这是一封来自一位叫

822
00:30:50,000 --> 00:30:52,000
Fleely

823
00:30:52,000 --> 00:30:53,000
徐

824
00:30:53,000 --> 00:30:54,000
应该是徐

825
00:30:54,000 --> 00:30:54,000
对

826
00:30:54,000 --> 00:30:56,000
我看这个是徐托马拼

827
00:30:56,000 --> 00:30:57,000
对

828
00:30:58,000 --> 00:30:58,000
他说

829
00:30:59,000 --> 00:31:02,000
我不知道是不是 podcast 客户端有问题

830
00:31:02,000 --> 00:31:05,000
或者是你们的 podcast 发布服务器有问题

831
00:31:05,000 --> 00:31:06,000
总之有一段时间

832
00:31:06,000 --> 00:31:08,000
但我下载了那盒恐慌

833
00:31:08,000 --> 00:31:09,000
并打开来收听的时候

834
00:31:09,000 --> 00:31:11,000
会传出一个很好听

835
00:31:11,000 --> 00:31:12,000
很多人的女生说

836
00:31:12,000 --> 00:31:13,000
大家好

837
00:31:13,000 --> 00:31:15,000
欢迎收听《流行通信》的 XX 7

838
00:31:15,000 --> 00:31:17,000
我并不知道 APPN 还有另外一档

839
00:31:17,000 --> 00:31:19,000
叫做《流行通信》的节目

840
00:31:19,000 --> 00:31:20,000
我多次以为是两位主播

841
00:31:20,000 --> 00:31:21,000
受不了之前

842
00:31:21,000 --> 00:31:26,000
许多没有主题中心重点和深度的 softcore 讨论

843
00:31:26,000 --> 00:31:28,000
终于转来了哪一位美女大牛

844
00:31:28,000 --> 00:31:31,000
进行一个高级话题的讨论

845
00:31:31,000 --> 00:31:32,000
但是后来我才意识到

846
00:31:32,000 --> 00:31:34,000
原来是下载错了节目

847
00:31:34,000 --> 00:31:37,000
再后来当我看那录音的时间短于一个小时的时候

848
00:31:37,000 --> 00:31:40,000
我就会本能的以为 podcast 又出问题了

849
00:31:40,000 --> 00:31:41,000
然后删除重新下载

850
00:31:41,000 --> 00:31:43,000
这件事情在 id 工的里面

851
00:31:43,000 --> 00:31:45,000
其实我有次已经提到过了

852
00:31:45,000 --> 00:31:47,000
就是这是一个 bug

853
00:31:47,000 --> 00:31:48,000
not a feature

854
00:31:48,000 --> 00:31:51,000
对这是我们的 podcast 发布服务器的问题

855
00:31:51,000 --> 00:31:52,000
或者是对

856
00:31:52,000 --> 00:31:55,000
但是 bug 的成因我到目前我觉得没有找找

857
00:31:55,000 --> 00:31:57,000
因为我没有办法重现的

858
00:31:57,000 --> 00:32:00,000
我们应该在这里发动广大的程序

859
00:32:00,000 --> 00:32:02,000
来听众帮我们测试一下

860
00:32:02,000 --> 00:32:04,000
如果你遇到这个场景

861
00:32:04,000 --> 00:32:07,000
请千万去三号三位 traceback 一下

862
00:32:07,000 --> 00:32:09,000
这个网址是怎么来的

863
00:32:09,000 --> 00:32:11,000
它经过了那些路由

864
00:32:11,000 --> 00:32:14,000
它到底是怎么一回事

865
00:32:14,000 --> 00:32:18,000
因为我现在想了几个可能出现问题的地方

866
00:32:18,000 --> 00:32:22,000
一个是我们的自己的 IP 的 CMS 有问题

867
00:32:22,000 --> 00:32:25,000
但是我待会我做了很多测试

868
00:32:25,000 --> 00:32:27,000
这个是今天我们的后面的主题

869
00:32:27,000 --> 00:32:28,000
一会再说

870
00:32:28,000 --> 00:32:30,000
我做了很多测试

871
00:32:30,000 --> 00:32:32,000
就是我完全没办法重现这件事情

872
00:32:32,000 --> 00:32:36,000
然后我又想了说那是不是所谓运营商的劫持

873
00:32:36,000 --> 00:32:40,000
但现在看来又不是一个非常确定的东西

874
00:32:40,000 --> 00:32:42,000
因为有不同的人在不同的网络环境下

875
00:32:42,000 --> 00:32:43,000
不同的运营商

876
00:32:43,000 --> 00:32:44,000
它都遇到 list 的问题

877
00:32:44,000 --> 00:32:48,000
而且这个事情似乎是一个

878
00:32:48,000 --> 00:32:50,000
就难以预测规律的东西

879
00:32:50,000 --> 00:32:52,000
就我不知道到底是为什么

880
00:32:52,000 --> 00:32:55,000
然后之前又是考虑说是不是因为强的问题

881
00:32:55,000 --> 00:32:57,000
因为我们的福气在国外

882
00:32:57,000 --> 00:32:59,000
但是他来找一些朋友测试的时候

883
00:32:59,000 --> 00:33:01,000
也没有都是一个确认结论

884
00:33:01,000 --> 00:33:01,000
所以到目前为止

885
00:33:01,000 --> 00:33:03,000
这是一个叫什么 Fantanbug

886
00:33:03,000 --> 00:33:04,000
对

887
00:33:05,000 --> 00:33:06,000
隐重

888
00:33:06,000 --> 00:33:10,000
就是他一会出现

889
00:33:10,000 --> 00:33:10,000
一会不出现

890
00:33:10,000 --> 00:33:11,000
你也不知道他什么时候出现

891
00:33:11,000 --> 00:33:14,000
以及他的什么情况下会出现

892
00:33:14,000 --> 00:33:15,000
所以我也很愚闷

893
00:33:15,000 --> 00:33:16,000
OK

894
00:33:16,000 --> 00:33:17,000
你这是一个声明

895
00:33:17,000 --> 00:33:21,000
大家如果有能够帮助我们出一下虫

896
00:33:21,000 --> 00:33:22,000
我们万分感谢

897
00:33:22,000 --> 00:33:23,000
对

898
00:33:24,000 --> 00:33:27,000
然后借着念 Flyly 的来信

899
00:33:27,000 --> 00:33:30,000
他说而这次我重新下载了三次

900
00:33:30,000 --> 00:33:33,000
发现节目的长度依然只有 59 分钟

901
00:33:33,000 --> 00:33:35,000
我发现原来这一次没有下错

902
00:33:35,000 --> 00:33:36,000
节目真的只有 59 分钟

903
00:33:36,000 --> 00:33:40,000
所以少了那么多内容和水分

904
00:33:40,000 --> 00:33:41,000
是因为少了一个人吗

905
00:33:41,000 --> 00:33:42,000
对呀正常

906
00:33:42,000 --> 00:33:43,000
我们两个人一人加一碗水

907
00:33:43,000 --> 00:33:44,000
就是两个小时

908
00:33:44,000 --> 00:33:45,000
如果只有一个人打一个对折

909
00:33:45,000 --> 00:33:46,000
差不多

910
00:33:47,000 --> 00:33:48,000
OK

911
00:33:49,000 --> 00:33:51,000
他说以上只是一个玩笑

912
00:33:52,000 --> 00:33:53,000
接着说

913
00:33:53,000 --> 00:33:55,000
关于机械键盘的手感是玄学的观点

914
00:33:55,000 --> 00:33:57,000
感觉非常扯淡

915
00:33:57,000 --> 00:33:58,000
我用过各种键盘

916
00:33:58,000 --> 00:34:01,000
我长时间使用过红轴和黑轴

917
00:34:01,000 --> 00:34:02,000
薄膜键盘也用

918
00:34:02,000 --> 00:34:05,000
而现在主要使用的是

919
00:34:05,000 --> 00:34:08,000
Real Force 的进电容键盘

920
00:34:08,000 --> 00:34:09,000
在我身边

921
00:34:09,000 --> 00:34:11,000
喜欢薄膜键盘的人也不少

922
00:34:11,000 --> 00:34:13,000
他们不喜欢机械键盘的手感

923
00:34:13,000 --> 00:34:15,000
但是对于薄膜键盘的不好

924
00:34:15,000 --> 00:34:16,000
他们非常清楚

925
00:34:16,000 --> 00:34:18,000
在薄膜键盘老化的时候

926
00:34:18,000 --> 00:34:19,000
按键无法回弹

927
00:34:19,000 --> 00:34:21,000
或者回弹缓慢

928
00:34:21,000 --> 00:34:23,000
而这就是让人们对薄膜键盘

929
00:34:23,000 --> 00:34:24,000
说看看感觉不好的原因

930
00:34:24,000 --> 00:34:26,000
真的是这样吗

931
00:34:26,000 --> 00:34:27,000
我不太清楚

932
00:34:27,000 --> 00:34:28,000
应该是没错

933
00:34:29,000 --> 00:34:30,000
OK

934
00:34:30,000 --> 00:34:31,000
记得念

935
00:34:31,000 --> 00:34:33,000
我们平时所说的薄膜键盘

936
00:34:33,000 --> 00:34:35,000
是依靠底部的碗状硅胶

937
00:34:35,000 --> 00:34:36,000
进行回弹的

938
00:34:36,000 --> 00:34:38,000
在一些键盘中

939
00:34:38,000 --> 00:34:40,000
还会辅助利用到一些机械结构

940
00:34:40,000 --> 00:34:41,000
比如最知名的

941
00:34:41,000 --> 00:34:44,000
笔记本电脑使用的 X 结构

942
00:34:44,000 --> 00:34:45,000
就是叫做 Ciser Switch

943
00:34:45,000 --> 00:34:45,000
对吧

944
00:34:45,000 --> 00:34:46,000
对

945
00:34:46,000 --> 00:34:47,000
剪刀脚

946
00:34:47,000 --> 00:34:47,000
对

947
00:34:48,000 --> 00:34:50,000
但是硅胶碗的寿命

948
00:34:50,000 --> 00:34:51,000
根据键盘质量

949
00:34:51,000 --> 00:34:53,000
在几十万次到百万次不得

950
00:34:53,000 --> 00:34:55,000
不同键盘的使用寿命也不太一样

951
00:34:55,000 --> 00:34:56,000
但是必须承认

952
00:34:56,000 --> 00:34:58,000
新买回来的薄膜键盘

953
00:34:58,000 --> 00:34:59,000
手感是非常好的

954
00:34:59,000 --> 00:35:00,000
这所以不选择它

955
00:35:00,000 --> 00:35:03,000
就是因为你很可能在几个月之后

956
00:35:03,000 --> 00:35:04,000
这些按键就不能回弹

957
00:35:04,000 --> 00:35:06,000
甚至回弹缓慢了

958
00:35:06,000 --> 00:35:08,000
这个时候的手感就很糟糕

959
00:35:08,000 --> 00:35:10,000
这样缓慢的回弹

960
00:35:10,000 --> 00:35:13,000
是我们的手指可能需要自己费力抬起来

961
00:35:13,000 --> 00:35:17,000
而不是放松之后被按键推上来

962
00:35:17,000 --> 00:35:22,000
这种稀有的变化会被手指敏感的察觉到

963
00:35:22,000 --> 00:35:27,000
而抬起手指的力气也会比按下按键更费力

964
00:35:27,000 --> 00:35:29,000
而在按键无法彻底回弹的时候

965
00:35:29,000 --> 00:35:32,000
就是按下按键的心情会变得烦躁不安

966
00:35:32,000 --> 00:35:33,000
实际上也说明了为什么

967
00:35:33,000 --> 00:35:36,000
这么多人喜欢 real force 和 HHKV 这类

968
00:35:36,000 --> 00:35:37,000
不是键盘

969
00:35:37,000 --> 00:35:40,000
不是机械键盘的高级键盘

970
00:35:40,000 --> 00:35:41,000
因为进电容键盘

971
00:35:41,000 --> 00:35:42,000
是国陌生的

972
00:35:42,000 --> 00:35:46,000
因为进电容键盘的原理和手感

973
00:35:46,000 --> 00:35:49,000
跟普通的薄膜键盘太相似了

974
00:35:49,000 --> 00:35:51,000
进电容键盘内部是一个橡胶碗

975
00:35:51,000 --> 00:35:54,000
里面是一个碗型的弹簧

976
00:35:54,000 --> 00:35:57,000
所使用的橡胶的寿命要高以普通的硅胶

977
00:35:57,000 --> 00:35:59,000
并且里面的碗型弹簧

978
00:35:59,000 --> 00:36:02,000
不仅是用来改变电容出发按键

979
00:36:02,000 --> 00:36:03,000
还可以帮助回弹

980
00:36:03,000 --> 00:36:07,000
所以进电容键盘的感觉像是回弹有力

981
00:36:07,000 --> 00:36:10,000
并且永远是新买回来状态的薄膜键盘

982
00:36:11,000 --> 00:36:14,000
这其实跟我刚刚讲的 HCKB 的语端有点关系

983
00:36:14,000 --> 00:36:15,000
对

984
00:36:15,000 --> 00:36:20,000
因为之前我们讨论过键盘那一期的 HCKB

985
00:36:20,000 --> 00:36:20,000
重进两件

986
00:36:20,000 --> 00:36:22,000
但是我自己从来没有用过

987
00:36:22,000 --> 00:36:24,000
就知道上次 Loris 把他那块机构

988
00:36:24,000 --> 00:36:26,000
我当时第一次拿到的时候

989
00:36:26,000 --> 00:36:27,000
感觉还是蛮特别的

990
00:36:27,000 --> 00:36:28,000
这个手感

991
00:36:28,000 --> 00:36:31,000
因为它并不像我预期的那种机械键盘

992
00:36:31,000 --> 00:36:33,000
当中很硬朗的感觉

993
00:36:33,000 --> 00:36:33,000
是一种比较

994
00:36:33,000 --> 00:36:34,000
OK

995
00:36:34,000 --> 00:36:34,000
你刚才念对了

996
00:36:34,000 --> 00:36:37,000
他原文的确是 RoyalFoss

997
00:36:37,000 --> 00:36:40,000
HCKB 这类不是机械键盘的关系吗

998
00:36:41,000 --> 00:36:41,000
对

999
00:36:41,000 --> 00:36:42,000
他露写了机械两个字

1000
00:36:42,000 --> 00:36:45,000
但是你的结构应该是正确

1001
00:36:45,000 --> 00:36:45,000
对

1002
00:36:45,000 --> 00:36:46,000
我理解是这么理解的

1003
00:36:46,000 --> 00:36:49,000
所以这个我觉得就挺有意思

1004
00:36:49,000 --> 00:36:54,000
因为定点用到手感真的是很难形容

1005
00:36:54,000 --> 00:36:56,000
他说是薄膜键盘

1006
00:36:56,000 --> 00:36:58,000
我觉得也不太像我没有用过任何一款薄膜键盘

1007
00:36:58,000 --> 00:37:00,000
是这种感觉的

1008
00:37:01,000 --> 00:37:02,000
对 没错

1009
00:37:02,000 --> 00:37:05,000
就是机械键盘你会有明显的那种卡他的感觉

1010
00:37:05,000 --> 00:37:09,000
就是你会感觉到自己在按一个盘黄

1011
00:37:09,000 --> 00:37:15,000
但是在经典融件盘里面这种感觉被淡化

1012
00:37:15,000 --> 00:37:17,000
你能感觉到自己没有在按一个盘黄

1013
00:37:17,000 --> 00:37:21,000
但按下键盘肯定不是弹黄

1014
00:37:21,000 --> 00:37:26,000
所以这些我觉得真的就像很多这个东西越来越多的实体物件一样

1015
00:37:26,000 --> 00:37:28,000
你光听秒数是没有用的

1016
00:37:28,000 --> 00:37:30,000
除非你自己真的按上去那一天

1017
00:37:30,000 --> 00:37:32,000
或者说甚至说除非你要连续使用

1018
00:37:32,000 --> 00:37:33,000
相当长一段时间

1019
00:37:33,000 --> 00:37:37,000
你才能感觉到这种细微的差别给你的手感

1020
00:37:37,000 --> 00:37:39,000
给你的工作带来上什么样的一种影响和变化

1021
00:37:40,000 --> 00:37:42,000
所以这里就不再多说了

1022
00:37:42,000 --> 00:37:43,000
好 大家有机会去摸一下吧

1023
00:37:43,000 --> 00:37:44,000
对

1024
00:37:44,000 --> 00:37:47,000
接着念台后面还有一些你大断的反馈

1025
00:37:49,000 --> 00:37:51,000
对于这一期主题的编码

1026
00:37:51,000 --> 00:37:53,000
我觉得主播在答案周围转了一圈

1027
00:37:53,000 --> 00:37:58,000
甚至延伸扯到了指令机以及三进制这些更无关的其他东西

1028
00:37:58,000 --> 00:38:01,000
但是始终就没有说到底什么是编码

1029
00:38:01,000 --> 00:38:02,000
主播已经提到

1030
00:38:02,000 --> 00:38:04,000
比如说我们能看到文字

1031
00:38:04,000 --> 00:38:06,000
我们能听到声音

1032
00:38:06,000 --> 00:38:08,000
比如说各位现在听到的 podcast

1033
00:38:08,000 --> 00:38:11,000
我们能看到图片以及一些高雅的小电影

1034
00:38:11,000 --> 00:38:13,000
这些东西都不是零和一

1035
00:38:13,000 --> 00:38:13,000
不是吗

1036
00:38:13,000 --> 00:38:15,000
如何用零和一表示这些东西

1037
00:38:15,000 --> 00:38:16,000
就是编码

1038
00:38:16,000 --> 00:38:18,000
而用这些零和一或者说数字

1039
00:38:18,000 --> 00:38:22,000
或者说跟准确的说是用整数表示文字

1040
00:38:22,000 --> 00:38:23,000
那就是文字编码

1041
00:38:23,000 --> 00:38:24,000
那表示音乐

1042
00:38:24,000 --> 00:38:25,000
就是音乐的编码

1043
00:38:25,000 --> 00:38:28,000
比如 MP 3 WMA 之类的

1044
00:38:28,000 --> 00:38:33,000
为了让本来只能表示一二进制数的计算机能够处理文本

1045
00:38:33,000 --> 00:38:36,000
就必须将文本变化为相应的数字

1046
00:38:36,000 --> 00:38:38,000
这种对应于文本的数值

1047
00:38:38,000 --> 00:38:39,000
就成文本编码

1048
00:38:39,000 --> 00:38:42,000
这一段话是在松本信宏

1049
00:38:42,000 --> 00:38:43,000
这谁

1050
00:38:43,000 --> 00:38:46,000
松本信宏是一个日本的程序员

1051
00:38:46,000 --> 00:38:48,000
好像我记得他好像自学成惨

1052
00:38:48,000 --> 00:38:48,000
还是怎么着

1053
00:38:48,000 --> 00:38:49,000
写的这本书

1054
00:38:49,000 --> 00:38:50,000
对

1055
00:38:50,000 --> 00:38:54,000
这一段话是在松本信宏在他的书

1056
00:38:54,000 --> 00:38:57,000
松本信宏在成绩世界 7.1.1

1057
00:38:57,000 --> 00:39:00,000
这个章节里面早期文字编码中

1058
00:39:00,000 --> 00:39:02,000
对于文字编码的描述

1059
00:39:02,000 --> 00:39:03,000
这大概算是一个非常简洁

1060
00:39:03,000 --> 00:39:05,000
而且一动的描述

1061
00:39:05,000 --> 00:39:08,000
松本信宏就是 Mats

1062
00:39:08,000 --> 00:39:10,000
Ruby 那个作者

1063
00:39:10,000 --> 00:39:11,000
我一直没反应过

1064
00:39:11,000 --> 00:39:13,000
我觉得看他名字特别眼熟

1065
00:39:13,000 --> 00:39:14,000
但我不确定到底是谁

1066
00:39:14,000 --> 00:39:16,000
我们他跟另外一个日本人

1067
00:39:16,000 --> 00:39:18,000
所以他日本名字怎么念

1068
00:39:18,000 --> 00:39:19,000
Mats 是什么

1069
00:39:29,000 --> 00:39:33,000
此外这本书中还介绍了一些很有历史

1070
00:39:33,000 --> 00:39:35,000
但是有很奇葩的文字编码

1071
00:39:35,000 --> 00:39:40,000
如定义了半角片假名的标准

1072
00:39:40,000 --> 00:39:42,000
JSX 0201

1073
00:39:42,000 --> 00:39:45,000
以及一种类似 ISO 8859 的方法实现

1074
00:39:45,000 --> 00:39:47,000
但是 ASTI 部分

1075
00:39:47,000 --> 00:39:50,000
以这个这叫什么来的

1076
00:39:50,000 --> 00:39:50,000
日文

1077
00:39:50,000 --> 00:39:52,000
日元符号或者说人民币符号

1078
00:39:52,000 --> 00:39:53,000
因为都是一个

1079
00:39:54,000 --> 00:39:56,000
就是那个羊少一痕

1080
00:39:56,000 --> 00:39:57,000
替代了反斜杠

1081
00:39:57,000 --> 00:39:59,000
以上化

1082
00:39:59,000 --> 00:40:01,000
以上化现在替代了波浪号

1083
00:40:02,000 --> 00:40:03,000
羊少一痕

1084
00:40:03,000 --> 00:40:04,000
他有这个

1085
00:40:04,000 --> 00:40:05,000
对吗

1086
00:40:05,000 --> 00:40:06,000
不是

1087
00:40:06,000 --> 00:40:08,000
他其实就是日元的印外

1088
00:40:08,000 --> 00:40:11,000
印上面打了两痕

1089
00:40:11,000 --> 00:40:12,000
人民币也就用他

1090
00:40:12,000 --> 00:40:12,000
对吧

1091
00:40:12,000 --> 00:40:13,000
人民币直接

1092
00:40:13,000 --> 00:40:13,000
对

1093
00:40:13,000 --> 00:40:18,000
我一直好奇为什么反日份子从来没有拿符号开到的

1094
00:40:20,000 --> 00:40:23,000
这个符号是人民币举办权搬迁日元的

1095
00:40:23,000 --> 00:40:26,000
你看人卢布都有自己的符号

1096
00:40:26,000 --> 00:40:27,000
说明我应该用羊

1097
00:40:27,000 --> 00:40:29,000
比他们还多一痕

1098
00:40:29,000 --> 00:40:30,000
对 没错

1099
00:40:30,000 --> 00:40:32,000
东时高际

1100
00:40:32,000 --> 00:40:33,000
下层不打人

1101
00:40:33,000 --> 00:40:34,000
不打那个烟

1102
00:40:34,000 --> 00:40:35,000
我们打羊

1103
00:40:35,000 --> 00:40:36,000
对

1104
00:40:37,000 --> 00:40:38,000
另一个编码

1105
00:40:38,000 --> 00:40:41,000
这是奇葩的 ISO-2022

1106
00:40:41,000 --> 00:40:41,000
这种单词

1107
00:40:41,000 --> 00:40:44,000
恩于 93 年的神奇编码方式

1108
00:40:44,000 --> 00:40:48,000
使用了类似于编成语言中引号或者注释的方法

1109
00:40:48,000 --> 00:40:50,000
通过一个特殊的引号

1110
00:40:50,000 --> 00:40:53,000
将 ASCII 编码和其他语言的编码

1111
00:40:53,000 --> 00:40:58,000
如汉语的 GV-2312 和日语的 JS-02008 引起来

1112
00:40:58,000 --> 00:41:01,000
也就是在 ASCII 编码的文本当中

1113
00:41:01,000 --> 00:41:04,000
当遇到三个特殊字符

1114
00:41:04,000 --> 00:41:06,000
Escape,Dollar sign 和 B

1115
00:41:06,000 --> 00:41:11,000
则后面的内容开始切换到 JS-X 02008 编码

1116
00:41:11,000 --> 00:41:13,000
当遇到另外三个特殊字符 Escape

1117
00:41:14,000 --> 00:41:16,000
开括号 B

1118
00:41:16,000 --> 00:41:18,000
又切换回 ASCII 编码

1119
00:41:18,000 --> 00:41:20,000
在我看到这本书的时候

1120
00:41:20,000 --> 00:41:23,000
我不禁感叹原来人类还设计过如此愚蠢的编码

1121
00:41:23,000 --> 00:41:27,000
相比起来 UTF 系列真是不知道高到哪里去了

1122
00:41:28,000 --> 00:41:29,000
是,没错

1123
00:41:29,000 --> 00:41:34,000
所以它都不叫就最后那个 Titan ISO-2022

1124
00:41:34,000 --> 00:41:37,000
这个都已经不算是一个编码方式

1125
00:41:37,000 --> 00:41:38,000
它就是一个怎么讲

1126
00:41:38,000 --> 00:41:39,000
Escape 方式

1127
00:41:39,000 --> 00:41:41,000
规定立足规则告诉你

1128
00:41:41,000 --> 00:41:45,000
在这个时候可以插入其他编码的东西

1129
00:41:45,000 --> 00:41:47,000
对,感觉还想写 XML 对吧

1130
00:41:47,000 --> 00:41:48,000
对

1131
00:41:48,000 --> 00:41:50,000
开括号,关括号

1132
00:41:50,000 --> 00:41:53,000
对,它是一种原编码,关于编码

1133
00:41:53,000 --> 00:41:53,000
对

1134
00:41:53,000 --> 00:41:56,000
不,其实这个方式在 UTF 里面也实现过

1135
00:41:56,000 --> 00:41:58,000
上期我觉得你也聊到吧

1136
00:41:58,000 --> 00:42:01,000
那个叫做 Serigate pair

1137
00:42:03,000 --> 00:42:04,000
呃,What?

1138
00:42:05,000 --> 00:42:06,000
Serigate,你们知道吗?我还是

1139
00:42:06,000 --> 00:42:07,000
我没有提到 Serigate

1140
00:42:07,000 --> 00:42:09,000
就是在 UTF 16 这个编码

1141
00:42:09,000 --> 00:42:11,000
因为 UTF 16 是固定两个字节的

1142
00:42:11,000 --> 00:42:12,000
对

1143
00:42:12,000 --> 00:42:14,000
但是 UTF 的 Unicode 的那个平面

1144
00:42:14,000 --> 00:42:17,000
那个种的制服数是远远超过 16 个字节可以容纳的

1145
00:42:17,000 --> 00:42:22,000
所以怎么在 16 个字节这种定长的编码里面

1146
00:42:22,000 --> 00:42:25,000
超过 16 个字节那些东西怎么办

1147
00:42:25,000 --> 00:42:26,000
对,我没有提到这些

1148
00:42:26,000 --> 00:42:28,000
你们可以向小微解释一下

1149
00:42:28,000 --> 00:42:32,000
这个我之前做研究的时候写过这一段小笔记

1150
00:42:33,000 --> 00:42:33,000
就是说

1151
00:42:33,000 --> 00:42:38,000
那我们必然有一个办法要用多于 16 个字节

1152
00:42:38,000 --> 00:42:40,000
就两个 byte 的方式来编码

1153
00:42:40,000 --> 00:42:41,000
其他东西嘛

1154
00:42:41,000 --> 00:42:45,000
所以它在它定义了一个特殊的一个

1155
00:42:45,000 --> 00:42:48,000
就有一个范围的字节

1156
00:42:48,000 --> 00:42:49,000
只要那个字节开始的时候

1157
00:42:49,000 --> 00:42:50,000
它会进入另外一种

1158
00:42:50,000 --> 00:42:51,000
就是非定长 16

1159
00:42:51,000 --> 00:42:55,000
16 不是 16 是 16 个 bit

1160
00:42:56,000 --> 00:42:57,000
两个字节的模式

1161
00:42:57,000 --> 00:42:57,000
刚说错了

1162
00:42:57,000 --> 00:42:59,000
不是 16 个字节那也太长了

1163
00:42:59,000 --> 00:43:00,000
16 个 w

1164
00:43:00,000 --> 00:43:01,000
就是两个字节的方式

1165
00:43:01,000 --> 00:43:07,000
就有一些特殊组合的两个 byte

1166
00:43:07,000 --> 00:43:08,000
它会定义说从这里开始

1167
00:43:08,000 --> 00:43:10,000
我们进入另外一种模式

1168
00:43:10,000 --> 00:43:12,000
然后另外还有一些特殊的两个 byte

1169
00:43:12,000 --> 00:43:14,000
它会说从这里开始

1170
00:43:14,000 --> 00:43:15,000
我们结束那个特殊模式

1171
00:43:15,000 --> 00:43:17,000
回到那个正常的 UTF 16 的编码

1172
00:43:17,000 --> 00:43:21,000
这种特殊的 byte 就叫做 Sericate pair

1173
00:43:21,000 --> 00:43:22,000
叫做什么

1174
00:43:22,000 --> 00:43:25,000
代理组和代理对

1175
00:43:25,000 --> 00:43:28,000
就其实跟 SR 202 的方式差不多了

1176
00:43:28,000 --> 00:43:31,000
那你不得不说在当时的物理史

1177
00:43:31,000 --> 00:43:33,000
就是 UTF 16 应该是在 90 年代

1178
00:43:33,000 --> 00:43:34,000
中后期实现的

1179
00:43:34,000 --> 00:43:35,000
对

1180
00:43:35,000 --> 00:43:36,000
开发出来

1181
00:43:36,000 --> 00:43:38,000
在当时的内容情况下

1182
00:43:38,000 --> 00:43:41,000
只用两个字节来处理

1183
00:43:41,000 --> 00:43:43,000
就可能应对绝大部分的

1184
00:43:43,000 --> 00:43:45,000
所谓的主流的文本

1185
00:43:45,000 --> 00:43:47,000
因为那个次代能够用到计算机

1186
00:43:47,000 --> 00:43:48,000
进行文本处理的

1187
00:43:48,000 --> 00:43:50,000
也就是什么一些法大国家呀

1188
00:43:50,000 --> 00:43:50,000
大国这种

1189
00:43:50,000 --> 00:43:53,000
像小国那种非常不起眼的文字

1190
00:43:53,000 --> 00:43:56,000
就已经无暇顾及也无所谓的

1191
00:43:56,000 --> 00:43:58,000
我觉得那个时候还是主要为了应对

1192
00:43:58,000 --> 00:43:59,000
东亚语言

1193
00:43:59,000 --> 00:44:00,000
对

1194
00:44:00,000 --> 00:44:02,000
那个时候东亚市场

1195
00:44:02,000 --> 00:44:02,000
对

1196
00:44:02,000 --> 00:44:04,000
东亚市场振兴得非常快

1197
00:44:04,000 --> 00:44:07,000
然后微软为了切入这个市场

1198
00:44:07,000 --> 00:44:10,000
就不得不采用的这么一个

1199
00:44:10,000 --> 00:44:10,000
对

1200
00:44:10,000 --> 00:44:12,000
而且这也是一个比较临时的范儿

1201
00:44:12,000 --> 00:44:15,000
但是那个时候做出的技术远角

1202
00:44:15,000 --> 00:44:16,000
对我们今天来说其实影响非常好

1203
00:44:16,000 --> 00:44:17,000
影响是非常帅的

1204
00:44:17,000 --> 00:44:17,000
对

1205
00:44:17,000 --> 00:44:19,000
UTF 如此愚蠢的东西

1206
00:44:19,000 --> 00:44:23,000
真的就是 Windows 上又有一个痛点

1207
00:44:23,000 --> 00:44:24,000
并不得不采用

1208
00:44:24,000 --> 00:44:26,000
没错

1209
00:44:26,000 --> 00:44:29,000
因为当时在我的笔记里面有写的

1210
00:44:29,000 --> 00:44:30,000
至少是在

1211
00:44:30,000 --> 00:44:31,000
我想想

1212
00:44:31,000 --> 00:44:34,000
应该是在 Windows NT 的内核是默认是这个

1213
00:44:34,000 --> 00:44:35,000
不是这个

1214
00:44:35,000 --> 00:44:36,000
不是 UTF 16

1215
00:44:36,000 --> 00:44:38,000
它是叫 UCSR

1216
00:44:38,000 --> 00:44:39,000
这么一个方式来的

1217
00:44:39,000 --> 00:44:41,000
就是 UTF 16 其实是 UCSR

1218
00:44:41,000 --> 00:44:42,000
就是刚才那种

1219
00:44:42,000 --> 00:44:44,000
就是所有东西都是两个字节的

1220
00:44:44,000 --> 00:44:45,000
没有额外的情况

1221
00:44:45,000 --> 00:44:48,000
UCSR 是这个 UCSR

1222
00:44:48,000 --> 00:44:50,000
在加拿大刚才我讲的那个

1223
00:44:50,000 --> 00:44:53,000
那个叫做 SeraGatePair 的方法去编码

1224
00:44:53,000 --> 00:44:55,000
超过那个

1225
00:44:55,000 --> 00:45:00,000
就是 OXF 4 GF 这么一个段的更高的点位的那些字

1226
00:45:00,000 --> 00:45:01,000
对吧

1227
00:45:01,000 --> 00:45:04,000
但其实就是 UCSR 这种方式在很多这种

1228
00:45:04,000 --> 00:45:06,000
超系统里面也好

1229
00:45:06,000 --> 00:45:08,000
不过 NT 的那个

1230
00:45:08,000 --> 00:45:12,000
我记得 NT 的默认的文件路径

1231
00:45:12,000 --> 00:45:14,000
是用 UCSR 来实现的

1232
00:45:14,000 --> 00:45:17,000
然后像 Java 是 1.2 G

1233
00:45:17,000 --> 00:45:20,000
到 1.6 之前

1234
00:45:20,000 --> 00:45:22,000
都是用的这个 UCSR 实用的方法

1235
00:45:22,000 --> 00:45:25,000
这次到 Java 1.6

1236
00:45:26,000 --> 00:45:28,000
应该是还是 Java 5

1237
00:45:28,000 --> 00:45:29,000
Java 1.2

1238
00:45:29,000 --> 00:45:31,000
第一次到 1.6 之前应该都是这样

1239
00:45:31,000 --> 00:45:32,000
1.7 后面我不知道怎么办

1240
00:45:32,000 --> 00:45:34,000
反正它在换 UTF 16

1241
00:45:34,000 --> 00:45:36,000
它就可以用那个 SeraGatePair 的方法来实现

1242
00:45:36,000 --> 00:45:37,000
对

1243
00:45:37,000 --> 00:45:38,000
然后 Python 也是

1244
00:45:38,000 --> 00:45:40,000
Python 2

1245
00:45:40,000 --> 00:45:41,000
2.2.不管什么

1246
00:45:41,000 --> 00:45:44,000
全部都是用的这个 UCSR

1247
00:45:44,000 --> 00:45:46,000
或者 UCSR 4 的方法来表达 Unicode

1248
00:45:46,000 --> 00:45:49,000
就它连那个 UTF 16 都没有

1249
00:45:49,000 --> 00:45:49,000
对

1250
00:45:49,000 --> 00:45:53,000
所以其实你会看到这种编码的选择

1251
00:45:53,000 --> 00:45:55,000
对后视的影响还是非常深远的

1252
00:45:55,000 --> 00:45:57,000
但我们日常可能觉得

1253
00:45:57,000 --> 00:45:58,000
我怎么没有遇到

1254
00:45:58,000 --> 00:46:01,000
那是因为你出的文本还不够奇怪

1255
00:46:01,000 --> 00:46:02,000
不足以

1256
00:46:02,000 --> 00:46:03,000
就是因为你没有

1257
00:46:03,000 --> 00:46:04,000
没有用过 Windows 的

1258
00:46:04,000 --> 00:46:07,000
和自付创意相关的一些 API

1259
00:46:07,000 --> 00:46:09,000
这些 API 每一个都有两个版本

1260
00:46:09,000 --> 00:46:11,000
一个是 A 版本

1261
00:46:11,000 --> 00:46:12,000
一个是 W 版本

1262
00:46:12,000 --> 00:46:15,000
A 代表说它可以处理 ASC 一遍

1263
00:46:15,000 --> 00:46:17,000
W 版本说它可以处理这种

1264
00:46:17,000 --> 00:46:18,000
所谓宽字节的

1265
00:46:18,000 --> 00:46:20,000
Wide character

1266
00:46:20,000 --> 00:46:23,000
这是一个 Giant word of far

1267
00:46:23,000 --> 00:46:25,000
但是有什么办法呢

1268
00:46:25,000 --> 00:46:27,000
是要人家商量上成功的

1269
00:46:28,000 --> 00:46:29,000
就是 legacy

1270
00:46:29,000 --> 00:46:33,000
所以其实我们要往 future compatible 方法的话

1271
00:46:33,000 --> 00:46:36,000
大家还是尽量使用 UTF 8 这种

1272
00:46:36,000 --> 00:46:38,000
比较通用的方式来实现

1273
00:46:38,000 --> 00:46:39,000
虽然说可能

1274
00:46:39,000 --> 00:46:41,000
UTF 8 我觉得可能很多人反对它的

1275
00:46:41,000 --> 00:46:42,000
这是一个效率的原因

1276
00:46:42,000 --> 00:46:43,000
它不是定长的嘛

1277
00:46:43,000 --> 00:46:43,000
对吧

1278
00:46:43,000 --> 00:46:45,000
它要是一个变长的

1279
00:46:45,000 --> 00:46:47,000
处理起来效率可能会比较低

1280
00:46:47,000 --> 00:46:49,000
但我觉得在现代的这种

1281
00:46:49,000 --> 00:46:51,000
计算机的处理器的心理来说

1282
00:46:51,000 --> 00:46:52,000
这点完全不是问题

1283
00:46:52,000 --> 00:46:54,000
而且还有一个 by-releaf

1284
00:46:54,000 --> 00:46:57,000
UTF 8 因为它的编码方式的原因

1285
00:46:57,000 --> 00:47:01,000
它的编码非 ASC 的效率不高

1286
00:47:01,000 --> 00:47:02,000
特别是编码东亚文字的时候

1287
00:47:02,000 --> 00:47:03,000
可能效率比较高

1288
00:47:03,000 --> 00:47:05,000
经常需要三到四个字节

1289
00:47:05,000 --> 00:47:05,000
没错

1290
00:47:05,000 --> 00:47:07,000
就越冷批的那些字节

1291
00:47:07,000 --> 00:47:10,000
那些字符可能需要的字节数越多

1292
00:47:10,000 --> 00:47:12,000
但是其实

1293
00:47:12,000 --> 00:47:13,000
我们现在不是有压缩嘛 对吧

1294
00:47:13,000 --> 00:47:16,000
这东西我觉得问题并不大

1295
00:47:16,000 --> 00:47:19,000
而且就是用 GZ 的流失压缩的话

1296
00:47:19,000 --> 00:47:22,000
你在一台正常的现代的计算机上

1297
00:47:22,000 --> 00:47:24,000
根本感觉不到这种性能的差异

1298
00:47:24,000 --> 00:47:28,000
所以我觉得还是为了处理方便期间

1299
00:47:28,000 --> 00:47:30,000
尽量采用这种方式实现吧

1300
00:47:30,000 --> 00:47:30,000
没错

1301
00:47:30,000 --> 00:47:33,000
但是我不知道你了不到这个情况

1302
00:47:33,000 --> 00:47:36,000
国内很多这种网站还是

1303
00:47:36,000 --> 00:47:38,000
直到现在都是 Gb 为了

1304
00:47:38,000 --> 00:47:38,000
对

1305
00:47:40,000 --> 00:47:41,000
好吧

1306
00:47:41,000 --> 00:47:42,000
那个我们叫到下个环节

1307
00:47:42,000 --> 00:47:43,000
有什么

1308
00:47:43,000 --> 00:47:45,000
这个这种有什么小新闻吗

1309
00:47:45,000 --> 00:47:45,000
不是这种

1310
00:47:45,000 --> 00:47:47,000
这一个月有什么小新闻

1311
00:47:49,000 --> 00:47:51,000
真的和 Rail 已经扩别四周了

1312
00:47:53,000 --> 00:47:54,000
两周一期的节目如果

1313
00:47:54,000 --> 00:47:56,000
MISS 掉一期就是一个月

1314
00:47:56,000 --> 00:47:56,000
对

1315
00:47:57,000 --> 00:47:59,000
再四周五周一下就是半年

1316
00:47:59,000 --> 00:48:00,000
没错

1317
00:48:02,000 --> 00:48:03,000
一期不见如隔半年

1318
00:48:07,000 --> 00:48:11,000
其实没有什么太特别的新闻

1319
00:48:11,000 --> 00:48:12,000
然后我最近比较忙

1320
00:48:12,000 --> 00:48:12,000
没有怎么看

1321
00:48:12,000 --> 00:48:15,000
唯一值得提起的或者说唯一

1322
00:48:15,000 --> 00:48:18,000
我知道你肯定会感兴趣的东西

1323
00:48:18,000 --> 00:48:22,000
就是前两天刚刚结束的 WWDC 了

1324
00:48:23,000 --> 00:48:24,000
还没有结束

1325
00:48:24,000 --> 00:48:26,000
现在还在进行中

1326
00:48:26,000 --> 00:48:26,000
Exactly

1327
00:48:26,000 --> 00:48:29,000
我只是想到如果这一期节目上线的时候

1328
00:48:29,000 --> 00:48:30,000
也许

1329
00:48:31,000 --> 00:48:31,000
对

1330
00:48:31,000 --> 00:48:33,000
我们就当我们在录制的时候

1331
00:48:33,000 --> 00:48:37,000
WS 其实才开到第三天

1332
00:48:37,000 --> 00:48:38,000
对

1333
00:48:38,000 --> 00:48:40,000
一下子爆过录制了这期

1334
00:48:41,000 --> 00:48:41,000
没关系

1335
00:48:41,000 --> 00:48:44,000
这个又不是什么行业机密

1336
00:48:44,000 --> 00:48:44,000
是吧

1337
00:48:44,000 --> 00:48:44,000
嗯

1338
00:48:46,000 --> 00:48:49,000
所以其实现在你的表也拿到了对吧

1339
00:48:49,000 --> 00:48:49,000
对

1340
00:48:50,000 --> 00:48:51,000
你买了一款什么表

1341
00:48:52,000 --> 00:48:55,000
女朋友给我买的那个 42 毫米的

1342
00:48:56,000 --> 00:48:58,000
是 Sport 还是钢的

1343
00:48:58,000 --> 00:48:59,000
对

1344
00:48:59,000 --> 00:48:59,000
哎

1345
00:48:59,000 --> 00:49:00,000
高档

1346
00:49:00,000 --> 00:49:01,000
然后呢什么袋子

1347
00:49:02,000 --> 00:49:03,000
就这普通的黑色袋

1348
00:49:05,000 --> 00:49:07,000
黑色是那个皮带那一套

1349
00:49:07,000 --> 00:49:08,000
OK

1350
00:49:08,000 --> 00:49:09,000
这不是皮带吧

1351
00:49:09,000 --> 00:49:10,000
硅胶那个

1352
00:49:10,000 --> 00:49:12,000
刚给什么人推轨胶的吗

1353
00:49:12,000 --> 00:49:13,000
刚给什么人推轨胶

1354
00:49:13,000 --> 00:49:14,000
就是 Sport

1355
00:49:14,000 --> 00:49:15,000
那个不叫轨胶

1356
00:49:15,000 --> 00:49:16,000
那个叫

1357
00:49:16,000 --> 00:49:17,000
想想什么那个

1358
00:49:17,000 --> 00:49:19,000
Floor Astrum

1359
00:49:21,000 --> 00:49:22,000
终于想起他叫

1360
00:49:22,000 --> 00:49:23,000
终于就他念什么了

1361
00:49:25,000 --> 00:49:26,000
你觉得那个手感怎么样

1362
00:49:26,000 --> 00:49:27,000
那个袋子

1363
00:49:28,000 --> 00:49:30,000
就还 OK 吧

1364
00:49:30,000 --> 00:49:31,000
还 OK

1365
00:49:31,000 --> 00:49:32,000
我也不知道

1366
00:49:32,000 --> 00:49:34,000
因为我从来不代表牛脑就

1367
00:49:34,000 --> 00:49:37,000
不是实话说穷玩是个富玩表

1368
00:49:37,000 --> 00:49:39,000
我肯定是不是玩表那一切

1369
00:49:40,000 --> 00:49:41,000
所以我也收不上来

1370
00:49:41,000 --> 00:49:42,000
而且我有一个很惨痛的

1371
00:49:42,000 --> 00:49:44,000
有一件很惨痛的事情就是我在

1372
00:49:46,000 --> 00:49:48,000
初中的时候有一天看到那个

1373
00:49:49,000 --> 00:49:52,000
地台上卖的漂亮的塑料电子软

1374
00:49:52,000 --> 00:49:53,000
非常高兴

1375
00:49:54,000 --> 00:49:55,000
买了一块

1376
00:49:55,000 --> 00:49:58,000
然后从那个塑料电子软的后盖

1377
00:49:58,000 --> 00:49:59,000
是度涅

1378
00:50:00,000 --> 00:50:02,000
然后从那一天开始

1379
00:50:02,000 --> 00:50:04,000
我对涅产的过敏

1380
00:50:05,000 --> 00:50:05,000
就

1381
00:50:05,000 --> 00:50:05,000
啊

1382
00:50:06,000 --> 00:50:07,000
真的有基础过敏

1383
00:50:07,000 --> 00:50:11,000
任何活泼金属带到我手上都会立刻起包

1384
00:50:13,000 --> 00:50:14,000
所以在

1385
00:50:14,000 --> 00:50:14,000
就是

1386
00:50:14,000 --> 00:50:15,000
就是什么原理到底

1387
00:50:15,000 --> 00:50:18,000
我就是对活泼金属过敏

1388
00:50:18,000 --> 00:50:20,000
对贵重金属比较比较

1389
00:50:20,000 --> 00:50:22,000
多性一点的金属就没问题

1390
00:50:22,000 --> 00:50:23,000
你们履啊

1391
00:50:23,000 --> 00:50:26,000
所以你这次暗示我们给你买个金表

1392
00:50:27,000 --> 00:50:28,000
对

1393
00:50:28,000 --> 00:50:29,000
给我们买个金表吧

1394
00:50:29,000 --> 00:50:30,000
不过还是先说的差不多

1395
00:50:30,000 --> 00:50:32,000
所以你连履的都不能带

1396
00:50:33,000 --> 00:50:34,000
履应该可以

1397
00:50:34,000 --> 00:50:34,000
履

1398
00:50:35,000 --> 00:50:37,000
履会被养化了

1399
00:50:37,000 --> 00:50:37,000
对吧

1400
00:50:38,000 --> 00:50:39,000
你等一下

1401
00:50:39,000 --> 00:50:41,000
你说活泼金属怎么定义一下

1402
00:50:41,000 --> 00:50:42,000
活泼金属是孽啊

1403
00:50:44,000 --> 00:50:44,000
啊

1404
00:50:44,000 --> 00:50:45,000
个啊

1405
00:50:45,000 --> 00:50:47,000
猛啊

1406
00:50:47,000 --> 00:50:47,000
主要是孽

1407
00:50:47,000 --> 00:50:48,000
其实

1408
00:50:48,000 --> 00:50:50,000
就我相信我之前查过

1409
00:50:50,000 --> 00:50:52,000
因为德国也有很多人

1410
00:50:52,000 --> 00:50:52,000
其实我

1411
00:50:52,000 --> 00:50:53,000
就

1412
00:50:53,000 --> 00:50:55,000
主要是孽这种东西

1413
00:50:56,000 --> 00:50:57,000
你我想

1414
00:50:57,000 --> 00:50:58,000
如果你对铝国民的话

1415
00:50:58,000 --> 00:50:59,000
那你还用得了爱说

1416
00:50:59,000 --> 00:51:00,000
不行

1417
00:51:00,000 --> 00:51:00,000
肯定不行

1418
00:51:01,000 --> 00:51:02,000
就只能撞

1419
00:51:02,000 --> 00:51:03,000
我连铝国都断不了是吧

1420
00:51:04,000 --> 00:51:07,000
好吧

1421
00:51:07,000 --> 00:51:09,000
所以那个

1422
00:51:09,000 --> 00:51:11,000
就是体验上我觉得可能

1423
00:51:11,000 --> 00:51:11,000
不

1424
00:51:11,000 --> 00:51:11,000
你觉得还好吧

1425
00:51:11,000 --> 00:51:12,000
我第一次就是

1426
00:51:12,000 --> 00:51:14,000
我这么大以来

1427
00:51:14,000 --> 00:51:16,000
这是第一次正儿八经的每天都代表

1428
00:51:16,000 --> 00:51:17,000
但是我之前有一块那个

1429
00:51:19,000 --> 00:51:20,000
德国那个叫什么

1430
00:51:20,000 --> 00:51:21,000
Browing

1431
00:51:21,000 --> 00:51:23,000
就是博拉那个

1432
00:51:23,000 --> 00:51:26,000
复刻版的最普通电子表

1433
00:51:26,000 --> 00:51:27,000
就是看起来和 iPhone

1434
00:51:27,000 --> 00:51:30,000
不是说看起来和 iPhone 神似

1435
00:51:30,000 --> 00:51:31,000
只不过那个是正儿八经的

1436
00:51:31,000 --> 00:51:33,000
就只能显示六个数字

1437
00:51:33,000 --> 00:51:34,000
这样

1438
00:51:34,000 --> 00:51:35,000
非常鼓挠

1439
00:51:35,000 --> 00:51:35,000
对

1440
00:51:36,000 --> 00:51:38,000
所以你你带了多久了

1441
00:51:38,000 --> 00:51:39,000
拿到

1442
00:51:39,000 --> 00:51:39,000
不到

1443
00:51:39,000 --> 00:51:41,000
那一个月了差不多

1444
00:51:41,000 --> 00:51:42,000
OK

1445
00:51:42,000 --> 00:51:42,000
所以感觉如何

1446
00:51:45,000 --> 00:51:47,000
但就只是一块表而已吧

1447
00:51:47,000 --> 00:51:48,000
我觉得

1448
00:51:48,000 --> 00:51:48,000
不

1449
00:51:48,000 --> 00:51:50,000
你就上面那些那些软件

1450
00:51:50,000 --> 00:51:50,000
那种各种

1451
00:51:50,000 --> 00:51:51,000
什么

1452
00:51:51,000 --> 00:51:52,000
Watch extension

1453
00:51:52,000 --> 00:51:54,000
这你觉得好用吗

1454
00:51:54,000 --> 00:51:56,000
实用性并不太高

1455
00:51:56,000 --> 00:51:56,000
必须说

1456
00:51:56,000 --> 00:51:57,000
对

1457
00:51:57,000 --> 00:51:57,000
对

1458
00:51:57,000 --> 00:51:58,000
我觉得

1459
00:51:58,000 --> 00:52:00,000
主要的原因就是因为太慢了

1460
00:52:00,000 --> 00:52:02,000
我今天一个很久的状况

1461
00:52:02,000 --> 00:52:03,000
我点那个

1462
00:52:03,000 --> 00:52:04,000
Glanz 出来一个

1463
00:52:04,000 --> 00:52:06,000
比如说地图

1464
00:52:06,000 --> 00:52:08,000
上次在埃利公园吐槽对酒的

1465
00:52:08,000 --> 00:52:09,000
我等 10 秒

1466
00:52:09,000 --> 00:52:10,000
我有那个功夫

1467
00:52:10,000 --> 00:52:11,000
屏幕已经黑了

1468
00:52:11,000 --> 00:52:12,000
他又露了出来对吧

1469
00:52:12,000 --> 00:52:13,000
对

1470
00:52:13,000 --> 00:52:14,000
等那个功夫出来

1471
00:52:14,000 --> 00:52:15,000
我都是直接手机看了

1472
00:52:15,000 --> 00:52:15,000
好吧

1473
00:52:15,000 --> 00:52:16,000
三号三位

1474
00:52:16,000 --> 00:52:17,000
我发现这个是

1475
00:52:17,000 --> 00:52:18,000
就是你用一段时间

1476
00:52:18,000 --> 00:52:20,000
让他就不会变快的

1477
00:52:21,000 --> 00:52:21,000
是吗

1478
00:52:21,000 --> 00:52:22,000
我不知道这是我的错觉

1479
00:52:22,000 --> 00:52:23,000
还是怎么样

1480
00:52:23,000 --> 00:52:24,000
就是一开始

1481
00:52:24,000 --> 00:52:26,000
一周我也有这样的状况

1482
00:52:26,000 --> 00:52:27,000
但是后来就今年还好

1483
00:52:28,000 --> 00:52:29,000
好了

1484
00:52:29,000 --> 00:52:31,000
所以我就是今天

1485
00:52:31,000 --> 00:52:33,000
我在那个推荣上跟他们讨论

1486
00:52:33,000 --> 00:52:34,000
就说

1487
00:52:34,000 --> 00:52:35,000
就他们在说

1488
00:52:35,000 --> 00:52:37,000
这不是刚好 WGC 上说了

1489
00:52:37,000 --> 00:52:39,000
那个 WatchOS 2

1490
00:52:39,000 --> 00:52:40,000
它会出那个原生的 SDK

1491
00:52:40,000 --> 00:52:41,000
对

1492
00:52:41,000 --> 00:52:42,000
可以直接跑在 Watch 上面

1493
00:52:42,000 --> 00:52:43,000
因为之前的话

1494
00:52:43,000 --> 00:52:46,000
那个其实所谓的那个 WatchApp

1495
00:52:46,000 --> 00:52:47,000
都只是一个

1496
00:52:47,000 --> 00:52:48,000
原生楼面

1497
00:52:48,000 --> 00:52:50,000
差不多的意思

1498
00:52:50,000 --> 00:52:52,000
你是显示在手标上

1499
00:52:52,000 --> 00:52:53,000
但是那个整个楼

1500
00:52:53,000 --> 00:52:54,000
就是跑在手机上面

1501
00:52:54,000 --> 00:52:55,000
通过蓝牙来通讯

1502
00:52:55,000 --> 00:52:55,000
对

1503
00:52:55,000 --> 00:52:59,000
这是一个物理世界里的

1504
00:52:59,000 --> 00:53:00,000
MVC 风格

1505
00:53:00,000 --> 00:53:03,000
MVC 跑在你的库刀里

1506
00:53:03,000 --> 00:53:06,000
然后 V 在你的手上

1507
00:53:06,000 --> 00:53:07,000
对

1508
00:53:07,000 --> 00:53:08,000
这个就是一个问题

1509
00:53:08,000 --> 00:53:09,000
就是说挺费电

1510
00:53:09,000 --> 00:53:10,000
还是挺慢的

1511
00:53:10,000 --> 00:53:10,000
你讲的

1512
00:53:10,000 --> 00:53:12,000
就是一个很大的问题

1513
00:53:12,000 --> 00:53:14,000
就是蓝牙通讯的时候

1514
00:53:14,000 --> 00:53:17,000
手机的 CPU 和表的 CPU 都不能修缅

1515
00:53:17,000 --> 00:53:18,000
而且表的屏外是亮着的

1516
00:53:18,000 --> 00:53:20,000
你的等级是看着它

1517
00:53:20,000 --> 00:53:20,000
对吧

1518
00:53:20,000 --> 00:53:23,000
这样其实对两边的电池续航时间

1519
00:53:23,000 --> 00:53:24,000
都会有影响

1520
00:53:24,000 --> 00:53:26,000
其实反正你是跑在表上

1521
00:53:26,000 --> 00:53:27,000
原生的一个 Sdk 的话

1522
00:53:27,000 --> 00:53:29,000
反而要好一些

1523
00:53:29,000 --> 00:53:29,000
也好一些

1524
00:53:29,000 --> 00:53:30,000
因为它可以快速的完成

1525
00:53:30,000 --> 00:53:32,000
因为现在 CPU 其实是很快的

1526
00:53:32,000 --> 00:53:33,000
那个 Watch 里面

1527
00:53:33,000 --> 00:53:34,000
他们说的是

1528
00:53:34,000 --> 00:53:36,000
应该是 A 5 的那个架构

1529
00:53:36,000 --> 00:53:38,000
做小的放进去了

1530
00:53:38,000 --> 00:53:40,000
然后那个计算是非常快的

1531
00:53:40,000 --> 00:53:43,000
Performance 不是说只有 A 4 的纪念吗

1532
00:53:43,000 --> 00:53:45,000
A 5 我当时比较清楚

1533
00:53:45,000 --> 00:53:46,000
记得是 A 5

1534
00:53:46,000 --> 00:53:49,000
因为现在 A 5 是在苹果大多数的

1535
00:53:49,000 --> 00:53:51,000
卫生级的老旧设备里面大量存在的

1536
00:53:51,000 --> 00:53:54,000
比如说你 iPad 2

1537
00:53:54,000 --> 00:53:55,000
还没有再卖了吧

1538
00:53:55,000 --> 00:53:55,000
还在卖

1539
00:53:56,000 --> 00:53:57,000
iPad 2 就没有在卖

1540
00:53:57,000 --> 00:53:59,000
然后 iPad mini

1541
00:53:59,000 --> 00:54:01,000
然后 Apple Touch

1542
00:54:02,000 --> 00:54:03,000
就这个都在用 A 5

1543
00:54:03,000 --> 00:54:04,000
然后那个还有 Apple TV

1544
00:54:04,000 --> 00:54:05,000
都是 A 5 处理器

1545
00:54:05,000 --> 00:54:06,000
对

1546
00:54:06,000 --> 00:54:10,000
反正用了现在我的感觉就是

1547
00:54:12,000 --> 00:54:15,000
有一些 App 我觉得自己可能会用的

1548
00:54:15,000 --> 00:54:16,000
比如说德铁的 App

1549
00:54:16,000 --> 00:54:19,000
就是它会告诉你说下一班火车

1550
00:54:19,000 --> 00:54:20,000
还有几点来

1551
00:54:20,000 --> 00:54:21,000
下一班火车

1552
00:54:21,000 --> 00:54:22,000
现在在哪

1553
00:54:22,000 --> 00:54:24,000
然后你需要去哪个站台

1554
00:54:25,000 --> 00:54:28,000
但是从来没有机会用到

1555
00:54:28,000 --> 00:54:32,000
然后最使用的功能就是

1556
00:54:32,000 --> 00:54:34,000
有或者说最常用的功能

1557
00:54:34,000 --> 00:54:35,000
就是由邮件来的时候

1558
00:54:35,000 --> 00:54:36,000
抬手看一下

1559
00:54:36,000 --> 00:54:38,000
这邮件值不值得看

1560
00:54:38,000 --> 00:54:39,000
如果值得看的话就

1561
00:54:39,000 --> 00:54:42,000
切换到手机或者电脑上去看

1562
00:54:42,000 --> 00:54:45,000
然后再就是回轮性

1563
00:54:45,000 --> 00:54:47,000
就是它我觉得

1564
00:54:47,000 --> 00:54:49,000
让我最气筋

1565
00:54:49,000 --> 00:54:50,000
让我最舒服

1566
00:54:50,000 --> 00:54:52,000
或者说让我最意外的一点

1567
00:54:52,000 --> 00:54:55,000
就是它的语音识别准确率非常高

1568
00:54:55,000 --> 00:54:56,000
对

1569
00:54:56,000 --> 00:54:58,000
比 iPhone 上的还高

1570
00:54:58,000 --> 00:54:59,000
而且很神奇的是

1571
00:54:59,000 --> 00:55:01,000
我在手表的系统语言是英语

1572
00:55:01,000 --> 00:55:03,000
手机的系统语言是德语

1573
00:55:03,000 --> 00:55:07,000
然后我用中文说话

1574
00:55:07,000 --> 00:55:09,000
它可以准确的把我说的话识别为中文

1575
00:55:09,000 --> 00:55:11,000
即便对方给我发的是英文

1576
00:55:11,000 --> 00:55:12,000
没错

1577
00:55:12,000 --> 00:55:13,000
我也觉得这个事情超神奇

1578
00:55:13,000 --> 00:55:14,000
我不知道它怎么做到

1579
00:55:14,000 --> 00:55:16,000
但是而且

1580
00:55:16,000 --> 00:55:17,000
我现在没法重现那个事情

1581
00:55:17,000 --> 00:55:19,000
我不知道怎么怎么弄

1582
00:55:19,000 --> 00:55:20,000
什么意思

1583
00:55:20,000 --> 00:55:22,000
就是我现在又只能输入英文

1584
00:55:22,000 --> 00:55:23,000
什么

1585
00:55:23,000 --> 00:55:24,000
就是语音输入

1586
00:55:24,000 --> 00:55:24,000
就很奇怪

1587
00:55:24,000 --> 00:55:27,000
之前我刚来的时候

1588
00:55:27,000 --> 00:55:29,000
是有一段时间是用

1589
00:55:29,000 --> 00:55:30,000
就是你说两句

1590
00:55:30,000 --> 00:55:32,000
因为系统语言是英文

1591
00:55:32,000 --> 00:55:33,000
然后回复的时候

1592
00:55:33,000 --> 00:55:34,000
说中文它既然能听出来是中文

1593
00:55:34,000 --> 00:55:36,000
然后说中文的字

1594
00:55:36,000 --> 00:55:39,000
但是自从升那个 1.0.1 之后发生又不行

1595
00:55:39,000 --> 00:55:40,000
这个太奇怪了

1596
00:55:40,000 --> 00:55:41,000
我一直都可以

1597
00:55:41,000 --> 00:55:42,000
而且它很人性

1598
00:55:42,000 --> 00:55:45,000
就是我说奥迪

1599
00:55:45,000 --> 00:55:46,000
我说奥迪

1600
00:55:46,000 --> 00:55:49,000
他会帮我转成奥迪

1601
00:55:49,000 --> 00:55:50,000
AODI

1602
00:55:50,000 --> 00:55:53,000
然后这四个拉丁字母加在中文里面

1603
00:55:53,000 --> 00:55:54,000
就我现在

1604
00:55:54,000 --> 00:55:55,000
所以我的猜想是这样子

1605
00:55:55,000 --> 00:55:56,000
就是说它为了

1606
00:55:56,000 --> 00:56:00,000
因为手表上的输入比较受限了

1607
00:56:00,000 --> 00:56:01,000
它苹果肯定在后台上

1608
00:56:01,000 --> 00:56:03,000
对这个事情做了一个什么特殊的处理

1609
00:56:03,000 --> 00:56:06,000
就是换上放一个人在那听起来

1610
00:56:06,000 --> 00:56:06,000
是吧

1611
00:56:08,000 --> 00:56:10,000
顾了一百万个印度人

1612
00:56:10,000 --> 00:56:11,000
这不是那个什么

1613
00:56:11,000 --> 00:56:13,000
那个 Silicon Valley 里面

1614
00:56:13,000 --> 00:56:15,000
那一期黑他们的用的事情吗

1615
00:56:15,000 --> 00:56:16,000
没有

1616
00:56:18,000 --> 00:56:20,000
对我觉得它肯定是用了一个更加

1617
00:56:20,000 --> 00:56:23,000
费劲的方式去处理这个 Siri 的语音书

1618
00:56:23,000 --> 00:56:25,000
就包括多语言识别

1619
00:56:25,000 --> 00:56:27,000
还有几个绝度上是有很大的提升的

1620
00:56:27,000 --> 00:56:30,000
相比于 iPhone 上面的那个 Siri 来讲

1621
00:56:30,000 --> 00:56:31,000
对

1622
00:56:31,000 --> 00:56:33,000
因为感觉这样成本应该是

1623
00:56:33,000 --> 00:56:34,000
服务器的成本是蛮高的

1624
00:56:37,000 --> 00:56:40,000
所以其实你看你用的那几个都是所谓的原生的

1625
00:56:40,000 --> 00:56:43,000
你没有用第三方的

1626
00:56:43,000 --> 00:56:45,000
那个体验都不太好吧

1627
00:56:45,000 --> 00:56:47,000
也还可以吧

1628
00:56:47,000 --> 00:56:49,000
我最喜欢用那个第三方的体验

1629
00:56:49,000 --> 00:56:51,000
比较还比较流畅的吗

1630
00:56:51,000 --> 00:56:51,000
我才 per

1631
00:56:51,000 --> 00:56:53,000
我才 per 可以

1632
00:56:54,000 --> 00:56:56,000
通讯内的对还行

1633
00:56:56,000 --> 00:56:57,000
然后 gmail 其实也还可以

1634
00:56:57,000 --> 00:57:02,000
就是 gmail 用 watch 的扩展

1635
00:57:02,000 --> 00:57:04,000
它没有直接 watch 扩展

1636
00:57:04,000 --> 00:57:07,000
但是它可以把 message 送到 watch

1637
00:57:08,000 --> 00:57:09,000
啊这个还不错

1638
00:57:09,000 --> 00:57:10,000
对

1639
00:57:10,000 --> 00:57:14,000
然后我还用其他比如说 insta 官呗还 OK 了

1640
00:57:14,000 --> 00:57:18,000
然后有一个德国的天气网站也还挺好

1641
00:57:18,000 --> 00:57:25,000
然后对反正还比如说那个叫什么 clear

1642
00:57:25,000 --> 00:57:27,000
就是那个 to do list clear

1643
00:57:27,000 --> 00:57:28,000
对不错

1644
00:57:28,000 --> 00:57:31,000
然后在就 luth 韩桑的韩桑韩公的还 OK

1645
00:57:31,000 --> 00:57:34,000
就做得好的第三方还是有的

1646
00:57:34,000 --> 00:57:36,000
但总体来说

1647
00:57:37,000 --> 00:57:38,000
嗯

1648
00:57:39,000 --> 00:57:41,000
就还就还好

1649
00:57:41,000 --> 00:57:43,000
就这不是一块

1650
00:57:43,000 --> 00:57:45,000
这不是一个像 iPad 那样

1651
00:57:45,000 --> 00:57:46,000
就是我在拿到 iPad 的第二天

1652
00:57:46,000 --> 00:57:48,000
我说不可能

1653
00:57:48,000 --> 00:57:50,000
我的后半生离不开这个东西

1654
00:57:50,000 --> 00:57:52,000
Apple Watch 没有给我这样的感觉

1655
00:57:52,000 --> 00:57:56,000
嗯就是一个可有可无的产品嘛

1656
00:57:56,000 --> 00:57:58,000
是这样说准确吗

1657
00:57:58,000 --> 00:58:00,000
nice to have 的产品

1658
00:58:00,000 --> 00:58:00,000
对

1659
00:58:00,000 --> 00:58:02,000
嗯没有也无所谓

1660
00:58:02,000 --> 00:58:04,000
有的当然更好了

1661
00:58:04,000 --> 00:58:04,000
对

1662
00:58:04,000 --> 00:58:07,000
嗯还没有出现所谓 tlf feature

1663
00:58:07,000 --> 00:58:08,000
对

1664
00:58:08,000 --> 00:58:11,000
但我觉得 tlf feature 早晚会出现

1665
00:58:11,000 --> 00:58:14,000
等他那个原生的 sdk 出来之后

1666
00:58:14,000 --> 00:58:15,000
现在是什么情况

1667
00:58:15,000 --> 00:58:18,000
就是说是可以

1668
00:58:18,000 --> 00:58:21,000
开发者可以马上已经可以拿到这个 sdk 来测试了吗

1669
00:58:21,000 --> 00:58:21,000
还是怎么样

1670
00:58:21,000 --> 00:58:25,000
应该是我昨天下了那个

1671
00:58:25,000 --> 00:58:27,000
然后昨天重新激活了

1672
00:58:27,000 --> 00:58:29,000
我的 Apple Divide Over 账户

1673
00:58:29,000 --> 00:58:30,000
扔了 100 欧元进去

1674
00:58:30,000 --> 00:58:31,000
嗯

1675
00:58:31,000 --> 00:58:33,000
因为我之前在公司

1676
00:58:33,000 --> 00:58:36,000
就是在我的前公司里面有一个那个

1677
00:58:36,000 --> 00:58:37,000
interprise program

1678
00:58:37,000 --> 00:58:40,000
然后我就把个人的退了

1679
00:58:40,000 --> 00:58:41,000
OK

1680
00:58:41,000 --> 00:58:42,000
然后离职之后

1681
00:58:42,000 --> 00:58:45,000
反正一直没碰就一直没重新开

1682
00:58:45,000 --> 00:58:47,000
然后直到昨天再重新续

1683
00:58:47,000 --> 00:58:49,000
续展之后又把那个

1684
00:58:49,000 --> 00:58:51,000
把新的

1685
00:58:51,000 --> 00:58:52,000
现在有两个版本的

1686
00:58:52,000 --> 00:58:55,000
scode beta

1687
00:58:55,000 --> 00:58:57,000
一个是 scode 7.0 的 beta

1688
00:58:57,000 --> 00:58:59,000
另一个是 scode 6.4 的 beta

1689
00:58:59,000 --> 00:59:02,000
然后 7.0 的 beta 里面已经包含了

1690
00:59:03,000 --> 00:59:04,000
如果没理解错的话

1691
00:59:04,000 --> 00:59:06,000
应该已经包含了 wattOS 20

1692
00:59:06,000 --> 00:59:10,000
然后愿意的话可以去摆弄摆弄试试

1693
00:59:10,000 --> 00:59:12,000
我反正今天做完节目之后

1694
00:59:12,000 --> 00:59:14,000
应该就会摆弄摆弄试试

1695
00:59:14,000 --> 00:59:16,000
所以所以你体验一下到底能做出一个

1696
00:59:16,000 --> 00:59:18,000
这都是什么样一个话来

1697
00:59:18,000 --> 00:59:20,000
然后看看有什么

1698
00:59:20,000 --> 00:59:22,000
体验上的提升了

1699
00:59:22,000 --> 00:59:22,000
我觉得

1700
00:59:22,000 --> 00:59:25,000
就是如果能原生在表上跑

1701
00:59:25,000 --> 00:59:26,000
然后那个响应速度

1702
00:59:26,000 --> 00:59:29,000
能到原生那些 app 的层次的话

1703
00:59:29,000 --> 00:59:31,000
我觉得整个体验会好很多

1704
00:59:31,000 --> 00:59:34,000
但现在确实太糟糕了

1705
00:59:34,000 --> 00:59:36,000
我觉得就是三号三位

1706
00:59:36,000 --> 00:59:39,000
我觉得这个 app watch

1707
00:59:39,000 --> 00:59:41,000
其实可以拿来做很多

1708
00:59:41,000 --> 00:59:44,000
不需要那个显示屏的事情

1709
00:59:44,000 --> 00:59:46,000
就是

1710
00:59:46,000 --> 00:59:46,000
比如说

1711
00:59:46,000 --> 00:59:50,000
因为就是在中国应该是

1712
00:59:50,000 --> 00:59:52,000
汉朝的时候

1713
00:59:52,000 --> 00:59:55,000
人们商人们有一种绣理术

1714
00:59:55,000 --> 00:59:58,000
就是他们看了一个商品

1715
00:59:58,000 --> 01:00:00,000
然后两个人要交易的时候

1716
01:00:00,000 --> 01:00:02,000
他们会把那个很长的袖子

1717
01:00:02,000 --> 01:00:04,000
套在彼此的手上

1718
01:00:04,000 --> 01:00:06,000
然后按对方的手

1719
01:00:06,000 --> 01:00:07,000
然后按对方的手就可以知道

1720
01:00:07,000 --> 01:00:09,000
对方就是要出什么价

1721
01:00:09,000 --> 01:00:12,000
你按对方手指的某一个部分

1722
01:00:12,000 --> 01:00:14,000
对方就明白了你要出多少钱

1723
01:00:14,000 --> 01:00:16,000
然后对方可以按回来还价

1724
01:00:16,000 --> 01:00:18,000
我觉得 app watch 可以做这一次的事情

1725
01:00:18,000 --> 01:00:20,000
比如说

1726
01:00:20,000 --> 01:00:21,000
我把手背到后面

1727
01:00:21,000 --> 01:00:21,000
然后

1728
01:00:21,000 --> 01:00:24,000
以某种特定的频率晃这块表

1729
01:00:24,000 --> 01:00:26,000
然后这块表就可以在别人手腕上

1730
01:00:26,000 --> 01:00:29,000
产生某种特定的信号

1731
01:00:29,000 --> 01:00:30,000
对

1732
01:00:30,000 --> 01:00:31,000
这样就可以

1733
01:00:31,000 --> 01:00:32,000
不用啊

1734
01:00:32,000 --> 01:00:35,000
你现在不是就直接在表盘上画那个小花吗

1735
01:00:35,000 --> 01:00:35,000
对

1736
01:00:35,000 --> 01:00:38,000
但此时旁边看你表盘的人是看得到

1737
01:00:40,000 --> 01:00:42,000
你要有一个秘密的手指

1738
01:00:42,000 --> 01:00:42,000
对

1739
01:00:42,000 --> 01:00:47,000
你要有一个别人察觉不到的方式来彼此通讯

1740
01:00:48,000 --> 01:00:50,000
所以一个比较宅

1741
01:00:50,000 --> 01:00:52,000
比较 geek 的方式是什么

1742
01:00:52,000 --> 01:00:53,000
经常那些你看到

1743
01:00:53,000 --> 01:00:58,000
比如说欧美的年轻人

1744
01:00:58,000 --> 01:00:59,000
或者说什么兄弟会碰头的时候

1745
01:00:59,000 --> 01:01:01,000
会有一堆手特别的手势吗

1746
01:01:01,000 --> 01:01:03,000
对吧

1747
01:01:04,000 --> 01:01:06,000
我们要带着以后要带着表来玩这件事情

1748
01:01:07,000 --> 01:01:08,000
我把那个整个记录下来

1749
01:01:08,000 --> 01:01:12,000
要计算一下你这个是否某一个动作做标准了

1750
01:01:12,000 --> 01:01:14,000
不标准不给开锁

1751
01:01:14,000 --> 01:01:16,000
或者最简单的就是

1752
01:01:17,000 --> 01:01:19,000
直接做一个 mores

1753
01:01:19,000 --> 01:01:20,000
mores

1754
01:01:20,000 --> 01:01:22,000
mores 嘛

1755
01:01:22,000 --> 01:01:24,000
然后你敲标盘

1756
01:01:24,000 --> 01:01:27,000
然后对方就可以收到你敲的队斗

1757
01:01:27,000 --> 01:01:29,000
什么 taptic engine 直接在你

1758
01:01:29,000 --> 01:01:31,000
显示直接打到手上是吧

1759
01:01:31,000 --> 01:01:32,000
对

1760
01:01:32,000 --> 01:01:34,000
那通过人工的方式去读那个 code

1761
01:01:34,000 --> 01:01:34,000
对

1762
01:01:34,000 --> 01:01:37,000
然后提供一个菜鸟模式

1763
01:01:37,000 --> 01:01:40,000
就是对方发 mores 嘛

1764
01:01:40,000 --> 01:01:41,000
然后你看表盘

1765
01:01:41,000 --> 01:01:44,000
这个表盘会把对方的 mores 嘛翻译出来

1766
01:01:45,000 --> 01:01:48,000
要不你这个第一个 watch app 就做这个

1767
01:01:48,000 --> 01:01:49,000
我觉得挺有时尚的

1768
01:01:49,000 --> 01:01:50,000
可以试试做

1769
01:01:50,000 --> 01:01:52,000
感觉实现起来要比较简单

1770
01:01:52,000 --> 01:01:53,000
对

1771
01:01:54,000 --> 01:01:56,000
哎呀对

1772
01:01:56,000 --> 01:01:57,000
我前两天看那个

1773
01:01:57,000 --> 01:01:58,000
这到我们要卡掉吗

1774
01:01:58,000 --> 01:01:59,000
因为这个 shreve

1775
01:01:59,000 --> 01:02:00,000
那个什么 business

1776
01:02:00,000 --> 01:02:02,000
product idea

1777
01:02:02,000 --> 01:02:05,000
我始终觉得 ideas cheap

1778
01:02:05,000 --> 01:02:06,000
show me code

1779
01:02:06,000 --> 01:02:10,000
所以各位听众里面如果有哪个人做出来一个欢迎

1780
01:02:10,000 --> 01:02:11,000
你把它开源

1781
01:02:11,000 --> 01:02:12,000
然后大家可以

1782
01:02:13,000 --> 01:02:14,000
大家可以下来

1783
01:02:14,000 --> 01:02:15,000
下来编一下

1784
01:02:15,000 --> 01:02:17,000
有一个新闻就是

1785
01:02:17,000 --> 01:02:20,000
有一个新闻就是现在好像 Apple 可以

1786
01:02:20,000 --> 01:02:21,000
不用注册 developer

1787
01:02:21,000 --> 01:02:25,000
就可以把程序跑在实体机器上了

1788
01:02:27,000 --> 01:02:27,000
对

1789
01:02:27,000 --> 01:02:29,000
就是如果各位听众不知道

1790
01:02:29,000 --> 01:02:32,000
在以前你要为 ls 开发程序

1791
01:02:32,000 --> 01:02:34,000
理论上是不需要交钱的

1792
01:02:34,000 --> 01:02:36,000
你只需要下载 scode

1793
01:02:36,000 --> 01:02:37,000
然后写一个程序

1794
01:02:37,000 --> 01:02:38,000
然后在模拟器里面跑

1795
01:02:38,000 --> 01:02:41,000
但是如果你想要把这个 app

1796
01:02:41,000 --> 01:02:42,000
在你的实体机器上跑的话

1797
01:02:42,000 --> 01:02:44,000
你必须先去注册

1798
01:02:44,000 --> 01:02:46,000
但是目前看来

1799
01:02:46,000 --> 01:02:48,000
就是如果理解的这个新闻没错的话

1800
01:02:48,000 --> 01:02:52,000
将来你不需要一个开发者帐号

1801
01:02:52,000 --> 01:02:55,000
也可以把你的 app 直接跑在实体设置上

1802
01:02:55,000 --> 01:02:57,000
但只能是把你自己那台机器

1803
01:02:57,000 --> 01:02:59,000
应该是只能跑你自己

1804
01:02:59,000 --> 01:03:00,000
那也完全够了

1805
01:03:00,000 --> 01:03:01,000
自己玩票用

1806
01:03:01,000 --> 01:03:01,000
对

1807
01:03:01,000 --> 01:03:03,000
这就是自己写给自己 app

1808
01:03:03,000 --> 01:03:05,000
早期的 homebrew 的方式又可以流行起来

1809
01:03:05,000 --> 01:03:08,000
就是你把原档码发到 github

1810
01:03:08,000 --> 01:03:09,000
然后别人当下来

1811
01:03:09,000 --> 01:03:13,000
然后编一下就可以跑到自己的机器上了

1812
01:03:13,000 --> 01:03:13,000
对

1813
01:03:13,000 --> 01:03:15,000
这可能是很多这种就是玩票

1814
01:03:15,000 --> 01:03:16,000
他也不打算

1815
01:03:16,000 --> 01:03:19,000
真的是放一个东西上架到 app store 里面

1816
01:03:19,000 --> 01:03:20,000
那种票有

1817
01:03:21,000 --> 01:03:23,000
编程票有的抱怨

1818
01:03:23,000 --> 01:03:25,000
就是我干嘛要花了每年 100 刀去买

1819
01:03:25,000 --> 01:03:27,000
我一年又有两次的东西对吧

1820
01:03:27,000 --> 01:03:28,000
对

1821
01:03:29,000 --> 01:03:31,000
最安卓就没有这个问题

1822
01:03:31,000 --> 01:03:32,000
插上线什么都可以装

1823
01:03:35,000 --> 01:03:36,000
对有这个我觉得还是挺好的

1824
01:03:36,000 --> 01:03:37,000
起码我会有更多东西说

1825
01:03:37,000 --> 01:03:39,000
哎那我也学一下这个

1826
01:03:40,000 --> 01:03:42,000
swerve 来写一个东西来玩一下

1827
01:03:42,000 --> 01:03:42,000
对

1828
01:03:44,000 --> 01:03:45,000
但是先把到目前为止

1829
01:03:45,000 --> 01:03:50,000
我们对这个对这个表的物理的 spec

1830
01:03:50,000 --> 01:03:51,000
像什么样的

1831
01:03:51,000 --> 01:03:53,000
应见参数是还不太清楚的是吧

1832
01:03:53,000 --> 01:03:54,000
嗯

1833
01:03:54,000 --> 01:03:55,000
好对吧

1834
01:03:55,000 --> 01:03:57,000
那个 chipwag 好像还没有把它

1835
01:03:57,000 --> 01:03:59,000
chipwag 还没有把它拆开

1836
01:03:59,000 --> 01:04:00,000
然后

1837
01:04:00,000 --> 01:04:01,000
chipwag

1838
01:04:02,000 --> 01:04:04,000
sorry 得意翻译出来

1839
01:04:06,000 --> 01:04:09,000
把它放在 X 光机下面照一下

1840
01:04:09,000 --> 01:04:12,000
然后告诉我们这上面都试试吗

1841
01:04:13,000 --> 01:04:13,000
嗯

1842
01:04:14,000 --> 01:04:15,000
然后包包内存

1843
01:04:15,000 --> 01:04:17,000
它的内存是确定是 512 帐

1844
01:04:17,000 --> 01:04:22,000
但是有多少能给应用用多少是被系统粘掉了

1845
01:04:22,000 --> 01:04:23,000
现在也不知道

1846
01:04:23,000 --> 01:04:23,000
对

1847
01:04:23,000 --> 01:04:25,000
然后刚才我们讨论到的是 A 4 的芯片

1848
01:04:25,000 --> 01:04:26,000
还是 A 5 的芯片

1849
01:04:26,000 --> 01:04:27,000
然后它做那么小

1850
01:04:27,000 --> 01:04:30,000
到底是有多少就是功耗上会有多大限制

1851
01:04:30,000 --> 01:04:31,000
这些都不太清楚吗

1852
01:04:31,000 --> 01:04:32,000
嗯

1853
01:04:33,000 --> 01:04:36,000
所以就靠你去研究一下这个啊

1854
01:04:36,000 --> 01:04:40,000
啊哦 Xcode 的 7.0 的版本之后能不能做出一个好玩的东西来

1855
01:04:41,000 --> 01:04:42,000
好

1856
01:04:42,000 --> 01:04:43,000
快把那个 mores 码做出来

1857
01:04:43,000 --> 01:04:45,000
我们先给我装上我们先试试

1858
01:04:47,000 --> 01:04:48,000
release stage

1859
01:04:48,000 --> 01:04:51,000
等等我我还得先得学 morescode 的这怎么办

1860
01:04:52,000 --> 01:04:53,000
啊这学校挺快

1861
01:04:54,000 --> 01:04:54,000
是吧

1862
01:04:54,000 --> 01:04:57,000
至少你至少你是会两个的 S 和 O

1863
01:04:58,000 --> 01:05:03,000
SOS 就是三段然后三长三短

1864
01:05:03,000 --> 01:05:05,000
三短三长三短

1865
01:05:06,000 --> 01:05:07,000
为什么不是三长两短呢

1866
01:05:08,000 --> 01:05:09,000
因为 S 是三长

1867
01:05:10,000 --> 01:05:11,000
啊 S 是三短

1868
01:05:11,000 --> 01:05:12,000
O 是三长

1869
01:05:13,000 --> 01:05:13,000
好吧

1870
01:05:13,000 --> 01:05:14,000
对啊

1871
01:05:14,000 --> 01:05:16,000
所以现在其实我们对这个 Watch

1872
01:05:16,000 --> 01:05:20,000
呃原生的 WatchOS 2 的 Sdk 还没有太多可以讲的

1873
01:05:20,000 --> 01:05:21,000
好

1874
01:05:21,000 --> 01:05:24,000
因为现在只是公布出来还没有真的去试过

1875
01:05:24,000 --> 01:05:27,000
那可能以后等我们的无套同志去试了之后

1876
01:05:27,000 --> 01:05:30,000
我们在金融的节目里面再来提一下

1877
01:05:30,000 --> 01:05:33,000
这次 WTX 上还发布了一个

1878
01:05:33,000 --> 01:05:36,000
我觉得挺开心的一个消息就是 swift 2

1879
01:05:36,000 --> 01:05:36,000
对

1880
01:05:36,000 --> 01:05:38,000
并且它开了

1881
01:05:38,000 --> 01:05:38,000
对

1882
01:05:38,000 --> 01:05:42,000
这个是当时我也是在看电视的时候

1883
01:05:42,000 --> 01:05:44,000
呃对我和女朋友一般在做饭

1884
01:05:44,000 --> 01:05:46,000
然后原来看 WTX

1885
01:05:46,000 --> 01:05:49,000
然后我看到的说多么温馨的一个场面

1886
01:05:49,000 --> 01:05:49,000
对

1887
01:05:49,000 --> 01:05:53,000
忽然双手举高说 swift 2 开圆了

1888
01:05:53,000 --> 01:05:54,000
然后女朋友疾祸的位

1889
01:05:54,000 --> 01:05:56,000
那是什么意思呢

1890
01:05:56,000 --> 01:05:57,000
哈哈哈

1891
01:05:57,000 --> 01:05:59,000
然后又进入了教学模式

1892
01:06:00,000 --> 01:06:02,000
多多么幸福的一个场景呀

1893
01:06:02,000 --> 01:06:03,000
耶

1894
01:06:03,000 --> 01:06:06,000
你看在在听的单身狗们赶上到生生的恶意没

1895
01:06:07,000 --> 01:06:08,000
哈哈哈

1896
01:06:08,000 --> 01:06:10,000
我我没有这个意思

1897
01:06:10,000 --> 01:06:12,000
哈哈哈

1898
01:06:12,000 --> 01:06:12,000
没

1899
01:06:12,000 --> 01:06:13,000
嗯

1900
01:06:14,000 --> 01:06:17,000
但它开完是说发布了这个

1901
01:06:17,000 --> 01:06:18,000
呃 iOS

1902
01:06:18,000 --> 01:06:21,000
iOS 10 和 Linux 的版本

1903
01:06:21,000 --> 01:06:22,000
对

1904
01:06:22,000 --> 01:06:23,000
我觉得还挺

1905
01:06:23,000 --> 01:06:25,000
当时我听到 Linux 也是心意惊

1906
01:06:25,000 --> 01:06:27,000
想想说我靠这是

1907
01:06:28,000 --> 01:06:31,000
多久没有在 Linux

1908
01:06:31,000 --> 01:06:34,000
在 WTX 上听到 Linux 的名字了

1909
01:06:35,000 --> 01:06:37,000
而且不敢相信的是

1910
01:06:37,000 --> 01:06:40,000
其后稍后又听到了一次 Android

1911
01:06:40,000 --> 01:06:43,000
而且是一种一种正面的方式听到 Android

1912
01:06:44,000 --> 01:06:45,000
对呀

1913
01:06:46,000 --> 01:06:50,000
就是它在宣布那个 Apple Music 将会在 Android 上推出的时候

1914
01:06:50,000 --> 01:06:51,000
我心里还觉得

1915
01:06:51,000 --> 01:06:53,000
嗯

1916
01:06:53,000 --> 01:06:54,000
这是发生了什么

1917
01:06:54,000 --> 01:06:55,000
而且我跟你说

1918
01:06:55,000 --> 01:06:58,000
那个他们还出了一个 Android 的

1919
01:06:58,000 --> 01:06:59,000
不是音乐那个

1920
01:07:00,000 --> 01:07:00,000
叫做

1921
01:07:01,000 --> 01:07:03,000
叫做 Android Migration 吧

1922
01:07:03,000 --> 01:07:05,000
可以可以从 Android 上

1923
01:07:05,000 --> 01:07:07,000
就帮助你从 Android 手机切换到 iPhone 了

1924
01:07:07,000 --> 01:07:08,000
简单来讲

1925
01:07:08,000 --> 01:07:09,000
啊

1926
01:07:09,000 --> 01:07:09,000
ok

1927
01:07:09,000 --> 01:07:11,000
因为 Android 是可以拿到很多系统的资料的嘛

1928
01:07:11,000 --> 01:07:12,000
对

1929
01:07:12,000 --> 01:07:15,000
然后可以做了这么一个一键导入切换到那个 Apple ID 里面

1930
01:07:15,000 --> 01:07:16,000
然后再给你

1931
01:07:16,000 --> 01:07:19,000
就是直接可以帮你设置好很多东西了

1932
01:07:19,000 --> 01:07:21,000
这些这个还是蛮狠的

1933
01:07:21,000 --> 01:07:24,000
Mac 上面也有也曾经有过这个什么

1934
01:07:24,000 --> 01:07:25,000
没错

1935
01:07:25,000 --> 01:07:26,000
可以从 Windows

1936
01:07:26,000 --> 01:07:26,000
对

1937
01:07:26,000 --> 01:07:27,000
Migrate 过去

1938
01:07:27,000 --> 01:07:28,000
它它就

1939
01:07:28,000 --> 01:07:30,000
等于就是这个就是 iOS 版的那个东西了

1940
01:07:30,000 --> 01:07:31,000
ok

1941
01:07:31,000 --> 01:07:33,000
叫做 Migrate

1942
01:07:33,000 --> 01:07:34,000
Migration Assistant 吧应该是

1943
01:07:34,000 --> 01:07:35,000
ok

1944
01:07:35,000 --> 01:07:36,000
我等一下我去认一下

1945
01:07:36,000 --> 01:07:37,000
是不是叫这个人

1946
01:07:37,000 --> 01:07:37,000
对

1947
01:07:37,000 --> 01:07:39,000
Migration Assistant

1948
01:07:39,000 --> 01:07:40,000
就是这点还是蛮狠的

1949
01:07:40,000 --> 01:07:42,000
因为你知道这个东西是单向接吗

1950
01:07:42,000 --> 01:07:43,000
One way straight

1951
01:07:43,000 --> 01:07:44,000
对

1952
01:07:44,000 --> 01:07:45,000
那肯定有

1953
01:07:45,000 --> 01:07:47,000
因为 iOS 里面没有

1954
01:07:47,000 --> 01:07:49,000
就除了苹果之外没有

1955
01:07:49,000 --> 01:07:50,000
就哪怕苹果吧

1956
01:07:50,000 --> 01:07:53,000
应该是不太可能拿得到那些英文里面的责任

1957
01:07:53,000 --> 01:07:55,000
就是有这个杀和模型的限制

1958
01:07:55,000 --> 01:07:57,000
而且它把系统全页锁都很死嘛

1959
01:07:57,000 --> 01:07:58,000
你不可能做

1960
01:07:58,000 --> 01:08:00,000
就第三方是没有办法做这么一个应用

1961
01:08:00,000 --> 01:08:02,000
装到一个 iOS 里面

1962
01:08:02,000 --> 01:08:05,000
然后再把数据导到那个另外的地方去

1963
01:08:05,000 --> 01:08:08,000
但可能拿那个通讯录啊这种比较

1964
01:08:08,000 --> 01:08:10,000
照片啊这种常见的还可以

1965
01:08:10,000 --> 01:08:12,000
但其他的就不行

1966
01:08:12,000 --> 01:08:13,000
我不太清楚那个 Android

1967
01:08:13,000 --> 01:08:15,000
Migration 这个 app 调整做多少的事

1968
01:08:15,000 --> 01:08:19,000
总之苹果的反正这一套东西就是

1969
01:08:19,000 --> 01:08:21,000
一堆生满道次的丛林

1970
01:08:21,000 --> 01:08:22,000
进去就出来

1971
01:08:22,000 --> 01:08:23,000
没错

1972
01:08:23,000 --> 01:08:26,000
再说回那个所以开表的事情

1973
01:08:26,000 --> 01:08:28,000
就你觉得它为什么会选会

1974
01:08:28,000 --> 01:08:29,000
会做这件事情

1975
01:08:29,000 --> 01:08:31,000
他们的动机是什么

1976
01:08:31,000 --> 01:08:34,000
呃

1977
01:08:34,000 --> 01:08:39,000
我觉得他们还是想要把 Swift 这个

1978
01:08:39,000 --> 01:08:41,000
目前看起来非常优秀的原特性

1979
01:08:41,000 --> 01:08:43,000
尽可能的拓展开来

1980
01:08:43,000 --> 01:08:46,000
然后借此来

1981
01:08:46,000 --> 01:08:47,000
呃

1982
01:08:47,000 --> 01:08:51,000
一方面是能让语言本身能够

1983
01:08:51,000 --> 01:08:52,000
心境火传下去

1984
01:08:52,000 --> 01:08:55,000
另外一方面也是希望能够借此

1985
01:08:55,000 --> 01:08:56,000
让其他平台上的人

1986
01:08:56,000 --> 01:08:59,000
尝一尝呃

1987
01:08:59,000 --> 01:09:02,000
给苹果编程是一种什么样的体验

1988
01:09:02,000 --> 01:09:04,000
哈哈没错

1989
01:09:04,000 --> 01:09:07,000
因为以前在除非你是一个非常非常非常

1990
01:09:07,000 --> 01:09:09,000
非常有受虐形象的人

1991
01:09:09,000 --> 01:09:12,000
你是一般不会在其他操作系统上

1992
01:09:12,000 --> 01:09:16,000
试图去搞 ObjectQC 这套东西的

1993
01:09:16,000 --> 01:09:20,000
就是你去你可以去采用那个人叫什么 OpenStep

1994
01:09:20,000 --> 01:09:23,000
呃这套东西来呃

1995
01:09:23,000 --> 01:09:25,000
在其他平台上编译 ObjectQC 是可行的

1996
01:09:25,000 --> 01:09:27,000
但是从来没有这样做

1997
01:09:27,000 --> 01:09:29,000
或者说

1998
01:09:29,000 --> 01:09:31,000
你这样做的人最后都把头发抓光

1999
01:09:31,000 --> 01:09:32,000
然后出家了

2000
01:09:32,000 --> 01:09:34,000
呃

2001
01:09:34,000 --> 01:09:37,000
而 Swift 2 如果开源并且跨平台的话

2002
01:09:37,000 --> 01:09:40,000
那你也许将来可以在不知不觉的在

2003
01:09:40,000 --> 01:09:41,000
呃

2004
01:09:41,000 --> 01:09:43,000
links 上面爱上这种美元

2005
01:09:43,000 --> 01:09:44,000
然后你发现你呢

2006
01:09:44,000 --> 01:09:48,000
这个知识可以迁移到给苹果开发系统

2007
01:09:48,000 --> 01:09:50,000
或者给苹果开发软件

2008
01:09:50,000 --> 01:09:53,000
那也许你就会随手去做一个呢

2009
01:09:53,000 --> 01:09:56,000
也许这是苹果的考量值

2010
01:09:56,000 --> 01:10:00,000
我觉得可能最眼下最务实的一个事情

2011
01:10:00,000 --> 01:10:02,000
就是说很多就一个 iOS 开发者

2012
01:10:02,000 --> 01:10:05,000
他因为你知道 iOS 的现在不是有个风潮吗

2013
01:10:05,000 --> 01:10:08,000
就是说我们做一个新的产品或者服务的时候

2014
01:10:08,000 --> 01:10:09,000
连网站那个都省了

2015
01:10:09,000 --> 01:10:11,000
直接就做一个 API 的后台

2016
01:10:11,000 --> 01:10:15,000
再加一个 iOS 客户端就搞定了对吧

2017
01:10:15,000 --> 01:10:18,000
但是呢这个服务端那边一般不可能用

2018
01:10:18,000 --> 01:10:19,000
就刚才讲嘛

2019
01:10:19,000 --> 01:10:22,000
不可能用苹果的东西来写之前就对非常少

2020
01:10:22,000 --> 01:10:25,000
用到这 C 用 objects 写后台

2021
01:10:25,000 --> 01:10:27,000
已经是 20 年前的事情了

2022
01:10:27,000 --> 01:10:28,000
并且

2023
01:10:30,000 --> 01:10:33,000
对就连应该我就是连苹果自己的那个叫什么

2024
01:10:33,000 --> 01:10:34,000
web 什么来的

2025
01:10:34,000 --> 01:10:36,000
viblogic

2026
01:10:36,000 --> 01:10:37,000
viblogic

2027
01:10:37,000 --> 01:10:37,000
对

2028
01:10:38,000 --> 01:10:40,000
他有一个叫什么

2029
01:10:40,000 --> 01:10:41,000
我来搜索

2030
01:10:42,000 --> 01:10:43,000
webobjects

2031
01:10:43,000 --> 01:10:45,000
对对对 webobjects

2032
01:10:45,000 --> 01:10:47,000
webobjects 后来转成

2033
01:10:48,000 --> 01:10:49,000
这样吧

2034
01:10:49,000 --> 01:10:50,000
后来转成这样了吗

2035
01:10:50,000 --> 01:10:51,000
没错

2036
01:10:51,000 --> 01:10:51,000
OK

2037
01:10:52,000 --> 01:10:53,000
这个我很确定

2038
01:10:53,000 --> 01:10:55,000
就苹果曾经他自己是有一套

2039
01:10:55,000 --> 01:10:57,000
这个当然是那个是 web 1.0 时代

2040
01:10:57,000 --> 01:11:00,000
对非常非常无聊的时代

2041
01:11:00,000 --> 01:11:03,000
因为最初发布的时候是 19 年前 96 年的时候

2042
01:11:03,000 --> 01:11:07,000
然后他最开始的时候是那个 objects 写的

2043
01:11:07,000 --> 01:11:12,000
后来是都因为面对现实改成了 java 来实现的

2044
01:11:14,000 --> 01:11:15,000
这就是还是蛮坑爹的嘛

2045
01:11:15,000 --> 01:11:18,000
你要学两个语言两种 round time

2046
01:11:18,000 --> 01:11:21,000
然后各种不一样的区别 API 都完全不一样

2047
01:11:21,000 --> 01:11:22,000
然后有了 srip to 2

2048
01:11:22,000 --> 01:11:24,000
就 srip to 他如果开源有这么时间之后

2049
01:11:24,000 --> 01:11:25,000
你可以做到这么一件事

2050
01:11:25,000 --> 01:11:26,000
就是

2051
01:11:26,000 --> 01:11:31,000
前那个客户端的开发者和服务端 API 的开发者

2052
01:11:31,000 --> 01:11:32,000
可以是同一般人

2053
01:11:32,000 --> 01:11:35,000
或者说就不用再学两套语言了

2054
01:11:35,000 --> 01:11:36,000
就整个都是一样的

2055
01:11:36,000 --> 01:11:38,000
唯一现在可能比较存疑的

2056
01:11:38,000 --> 01:11:41,000
就是这个标准库和第三方库的问题

2057
01:11:41,000 --> 01:11:42,000
因为刚出来肯定是没有的

2058
01:11:42,000 --> 01:11:45,000
因为他那些比较好的现成的

2059
01:11:45,000 --> 01:11:48,000
就是因为为什么说这个 objects

2060
01:11:48,000 --> 01:11:51,000
做客户端开发比较好用

2061
01:11:51,000 --> 01:11:54,000
或者说 srip to 做客户端开发比较好用

2062
01:11:54,000 --> 01:11:56,000
是因为他有那个 coco 嘛

2063
01:11:56,000 --> 01:11:57,000
也是叫 coco 嘛

2064
01:11:57,000 --> 01:11:59,000
but uikid 这一套东西

2065
01:11:59,000 --> 01:12:00,000
coco 也对啊

2066
01:12:00,000 --> 01:12:01,000
在 mac 上面

2067
01:12:03,000 --> 01:12:03,000
对

2068
01:12:03,000 --> 01:12:05,000
就 mac 和 iOS 上面

2069
01:12:05,000 --> 01:12:08,000
就是同一套一个是今年版差不多这么理解吧

2070
01:12:10,000 --> 01:12:13,000
但是他现在如果开源到 links 上面的话

2071
01:12:13,000 --> 01:12:16,000
其实我不清楚他只有语言还有编译器开源呢

2072
01:12:16,000 --> 01:12:19,000
还是说他会把这一套比较完善的

2073
01:12:19,000 --> 01:12:21,000
这个标准库也拿过去用

2074
01:12:21,000 --> 01:12:22,000
我觉得可能不太显示

2075
01:12:22,000 --> 01:12:23,000
对应该是

2076
01:12:23,000 --> 01:12:24,000
应该是

2077
01:12:24,000 --> 01:12:25,000
我希望

2078
01:12:25,000 --> 01:12:28,000
我觉得苹果的希望应该是

2079
01:12:28,000 --> 01:12:32,000
能够让第三方开发者自己生长出一套

2080
01:12:32,000 --> 01:12:35,000
就开完社区来做这个事了

2081
01:12:35,000 --> 01:12:37,000
swift on rails

2082
01:12:39,000 --> 01:12:42,000
swift on power cables

2083
01:12:42,000 --> 01:12:45,000
就是一群燕子站在这个电线上

2084
01:12:46,000 --> 01:12:49,000
ok 我们的这个连项目名字都想好了

2085
01:12:49,000 --> 01:12:49,000
开始干嘛

2086
01:12:54,000 --> 01:12:55,000
所以其实我觉得好

2087
01:12:55,000 --> 01:12:56,000
出来是很显而易见的

2088
01:12:56,000 --> 01:12:57,000
就是可以看时间

2089
01:12:57,000 --> 01:12:58,000
刚才我说的那一点

2090
01:12:58,000 --> 01:13:00,000
然后其实从一个

2091
01:13:00,000 --> 01:13:05,000
就是这个 mindshare 这个脑力的争夺站来讲

2092
01:13:05,000 --> 01:13:09,000
其实我觉得现在定位最好的应该是 android 吧

2093
01:13:09,000 --> 01:13:11,000
因为 java 很多人都会嘛

2094
01:13:11,000 --> 01:13:14,000
java 可以写这个客户端

2095
01:13:14,000 --> 01:13:15,000
可以写签入式

2096
01:13:15,000 --> 01:13:16,000
可以写服务端

2097
01:13:16,000 --> 01:13:17,000
可以写桌面应用

2098
01:13:17,000 --> 01:13:19,000
但桌面应用不太适合

2099
01:13:19,000 --> 01:13:20,000
但是总体来说

2100
01:13:20,000 --> 01:13:23,000
还是一个适用性非常广的语言嘛

2101
01:13:23,000 --> 01:13:28,000
但有意思的是 Google 正在有意无意的把 java 地址给你

2102
01:13:28,000 --> 01:13:28,000
你不觉得吧

2103
01:13:28,000 --> 01:13:32,000
就是首先 services 肯定要 go language

2104
01:13:32,000 --> 01:13:34,000
这件事情已经成立了

2105
01:13:34,000 --> 01:13:35,000
我觉得还没有吧

2106
01:13:35,000 --> 01:13:38,000
他正在试图找着一块钱进不说

2107
01:13:38,000 --> 01:13:39,000
你不觉得

2108
01:13:39,000 --> 01:13:42,000
这点事情我是觉得是存疑的

2109
01:13:42,000 --> 01:13:42,000
就是

2110
01:13:42,000 --> 01:13:45,000
你觉得 Google 在我们有生之间

2111
01:13:45,000 --> 01:13:47,000
不会抛弃 java 吗

2112
01:13:47,000 --> 01:13:48,000
起码在 android 这一端

2113
01:13:48,000 --> 01:13:50,000
我觉得是可能比较难

2114
01:13:50,000 --> 01:13:53,000
因为其实你真的用 Google 来写课端的话

2115
01:13:53,000 --> 01:13:55,000
其实发现还是蛮多的

2116
01:13:55,000 --> 01:13:55,000
不

2117
01:13:55,000 --> 01:13:58,000
可是我们上次不是提到了他的那个叫什么

2118
01:13:58,000 --> 01:13:59,000
sky

2119
01:13:59,000 --> 01:13:59,000
对

2120
01:13:59,000 --> 01:14:01,000
他有这个尝试嘛

2121
01:14:01,000 --> 01:14:04,000
但是我不太清楚这件事情之父真的能够做得成

2122
01:14:04,000 --> 01:14:06,000
因为这个惯性还是蛮大的

2123
01:14:06,000 --> 01:14:06,000
你不知道

2124
01:14:06,000 --> 01:14:10,000
因为 java 是什么

2125
01:14:10,000 --> 01:14:12,000
教学几句语言啊

2126
01:14:12,000 --> 01:14:14,000
我以为你要说小强级语言

2127
01:14:15,000 --> 01:14:16,000
有一个意思

2128
01:14:16,000 --> 01:14:19,000
就是在学校里面他的培养的人

2129
01:14:19,000 --> 01:14:21,000
就是教学的时候就是用这个东西

2130
01:14:21,000 --> 01:14:24,000
我觉得这个对一大批的

2131
01:14:24,000 --> 01:14:27,000
这个程序员的成长的经历还是非常重要的影响

2132
01:14:27,000 --> 01:14:30,000
所以我不太确定他这个能够短期的实现这一点

2133
01:14:30,000 --> 01:14:32,000
而且

2134
01:14:32,000 --> 01:14:33,000
哪怕是在服务端

2135
01:14:33,000 --> 01:14:35,000
他在用 go 去替代 java

2136
01:14:35,000 --> 01:14:38,000
就是在比较小范围的有限度的去整理一个厂商

2137
01:14:38,000 --> 01:14:42,000
而并不是说全有全公司的怎么去推这么一个东西

2138
01:14:42,000 --> 01:14:46,000
如果纯粹以前后端使用单语言来衡量的话

2139
01:14:46,000 --> 01:14:47,000
不考虑市场份额

2140
01:14:47,000 --> 01:14:49,000
那 windows 放在那不是最好了

2141
01:14:49,000 --> 01:14:50,000
就你在 windows

2142
01:14:50,000 --> 01:14:50,000
对

2143
01:14:50,000 --> 01:14:53,000
所以其实我们来现在看现在微软其实挺有意思的一个情况

2144
01:14:53,000 --> 01:14:57,000
就是他那个 c shop 就是做的挺好的

2145
01:14:57,000 --> 01:14:57,000
对啊

2146
01:14:57,000 --> 01:15:00,000
通吃所有平台所有端

2147
01:15:00,000 --> 01:15:00,000
对

2148
01:15:00,000 --> 01:15:01,000
而且如果我理解没错的话

2149
01:15:01,000 --> 01:15:04,000
他有那个 clr 的 round time 之后

2150
01:15:04,000 --> 01:15:06,000
他编译那个生成那个 c

2151
01:15:06,000 --> 01:15:09,000
就是你甚至不一定要用 c shop 来写 windows phone 的应用

2152
01:15:09,000 --> 01:15:12,000
可以用那么 f shop 来写也可以对吧

2153
01:15:13,000 --> 01:15:16,000
对或者什么 objectivec.net

2154
01:15:16,000 --> 01:15:17,000
对

2155
01:15:17,000 --> 01:15:18,000
这类的东西

2156
01:15:18,000 --> 01:15:20,000
其实他的那个定位是更好

2157
01:15:20,000 --> 01:15:22,000
但他因为没有

2158
01:15:22,000 --> 01:15:23,000
没有什么

2159
01:15:23,000 --> 01:15:24,000
没有市场占有量

2160
01:15:24,000 --> 01:15:25,000
这件事情就

2161
01:15:25,000 --> 01:15:28,000
对大微出来说没有什么意义

2162
01:15:28,000 --> 01:15:29,000
就我们只是讨论

2163
01:15:29,000 --> 01:15:32,000
安卓和二次两个情况来看

2164
01:15:32,000 --> 01:15:32,000
就是

2165
01:15:32,000 --> 01:15:35,000
苹果在这上面上是我就稍微是有点吃亏的

2166
01:15:36,000 --> 01:15:37,000
嗯

2167
01:15:38,000 --> 01:15:38,000
很难说吧

2168
01:15:38,000 --> 01:15:39,000
我觉得

2169
01:15:39,000 --> 01:15:39,000
就

2170
01:15:39,000 --> 01:15:41,000
嗯哼

2171
01:15:41,000 --> 01:15:41,000
我觉得

2172
01:15:43,000 --> 01:15:45,000
苹果是试图以

2173
01:15:47,000 --> 01:15:48,000
语言本身的优势

2174
01:15:48,000 --> 01:15:51,000
以及他在客户端的

2175
01:15:52,000 --> 01:15:56,000
比较相对的说比较广泛的开发者群

2176
01:15:56,000 --> 01:15:58,000
去反攻服务端

2177
01:15:59,000 --> 01:16:04,000
去反反过来去试图向服务端扩展这一技术

2178
01:16:05,000 --> 01:16:06,000
而

2179
01:16:06,000 --> 01:16:09,000
我看不到 Google 有一种新的语言

2180
01:16:09,000 --> 01:16:10,000
可以

2181
01:16:11,000 --> 01:16:12,000
单此重任

2182
01:16:12,000 --> 01:16:13,000
另外一方面

2183
01:16:13,000 --> 01:16:15,000
Google 好像本身也没有这个心思

2184
01:16:16,000 --> 01:16:17,000
他之前

2185
01:16:17,000 --> 01:16:19,000
不是大家都在猜他会不会用那个叫

2186
01:16:19,000 --> 01:16:20,000
那叫什么来的

2187
01:16:20,000 --> 01:16:22,000
之前宣布有没有搭载的

2188
01:16:23,000 --> 01:16:24,000
Dark

2189
01:16:24,000 --> 01:16:24,000
什么

2190
01:16:24,000 --> 01:16:25,000
对 Dark

2191
01:16:25,000 --> 01:16:26,000
对

2192
01:16:26,000 --> 01:16:27,000
Dark 不就是 Sky

2193
01:16:28,000 --> 01:16:29,000
嗯

2194
01:16:29,000 --> 01:16:31,000
但是我觉得那个事情可能

2195
01:16:31,000 --> 01:16:32,000
他想的可能还不太一样

2196
01:16:32,000 --> 01:16:34,000
那个 Dark 是初中是要

2197
01:16:34,000 --> 01:16:36,000
从 Web 那段开始简化

2198
01:16:36,000 --> 01:16:37,000
这个 UI

2199
01:16:37,000 --> 01:16:39,000
就是 UI 的那个构建的方法了

2200
01:16:41,000 --> 01:16:43,000
但是到了这个 Android 上

2201
01:16:43,000 --> 01:16:44,000
我不知道性能

2202
01:16:44,000 --> 01:16:46,000
还有这些方面真的是靠谱嘛

2203
01:16:46,000 --> 01:16:48,000
反正他起码现在没有做这件事

2204
01:16:48,000 --> 01:16:49,000
可能还是有一定的技术门看

2205
01:16:49,000 --> 01:16:50,000
我觉得

2206
01:16:52,000 --> 01:16:52,000
事务以待吧

2207
01:16:52,000 --> 01:16:54,000
反正 Google 的东西都是要等

2208
01:16:55,000 --> 01:16:58,000
然后随时可能不就就 Cancelled 了

2209
01:16:58,000 --> 01:16:59,000
对

2210
01:16:59,000 --> 01:17:01,000
我觉得这次 WDDC 给我的一个印象就是

2211
01:17:01,000 --> 01:17:02,000
你在那边看着

2212
01:17:02,000 --> 01:17:05,000
他说这个东西我们是什么什么样的

2213
01:17:05,000 --> 01:17:06,000
然后你转连

2214
01:17:06,000 --> 01:17:08,000
你就可以下来下来用了

2215
01:17:09,000 --> 01:17:11,000
还是 Deliver 的

2216
01:17:11,000 --> 01:17:12,000
到了

2217
01:17:12,000 --> 01:17:13,000
不像 Google 老师画饼子

2218
01:17:13,000 --> 01:17:14,000
对

2219
01:17:14,000 --> 01:17:14,000
说

2220
01:17:14,000 --> 01:17:15,000
对

2221
01:17:15,000 --> 01:17:17,000
说这个东西我们有了

2222
01:17:17,000 --> 01:17:20,000
然后各位再等一年就可以用到

2223
01:17:21,000 --> 01:17:21,000
对

2224
01:17:21,000 --> 01:17:24,000
还有一个比较小的重点

2225
01:17:24,000 --> 01:17:27,000
就是 Syft 2 里面有 Trycatch

2226
01:17:27,000 --> 01:17:30,000
当然他们的语法是 DoCatch

2227
01:17:31,000 --> 01:17:33,000
Do 里面就是一个 DoBlock

2228
01:17:33,000 --> 01:17:35,000
DoBlock 有一些关键的部分

2229
01:17:35,000 --> 01:17:37,000
可能会抛出一场的部分

2230
01:17:37,000 --> 01:17:39,000
然后用 Try 关键词去

2231
01:17:39,000 --> 01:17:41,000
就是有 Exception 机制的吗

2232
01:17:41,000 --> 01:17:42,000
对

2233
01:17:42,000 --> 01:17:45,000
然后我之前在直播上写过一篇答案

2234
01:17:45,000 --> 01:17:46,000
比较

2235
01:17:48,000 --> 01:17:49,000
比较

2236
01:17:49,000 --> 01:17:50,000
堵定的

2237
01:17:51,000 --> 01:17:55,000
阐述了为什么没有 Exception 机制比较好

2238
01:17:55,000 --> 01:17:58,000
然后我现在 Exception 机制出来

2239
01:17:58,000 --> 01:17:59,000
被打脸了是吧

2240
01:17:59,000 --> 01:17:59,000
对

2241
01:18:01,000 --> 01:18:02,000
Anyway

2242
01:18:02,000 --> 01:18:02,000
我

2243
01:18:02,000 --> 01:18:03,000
当然我那天

2244
01:18:03,000 --> 01:18:05,000
文章里面非常圆滑的

2245
01:18:05,000 --> 01:18:06,000
没有把话说死

2246
01:18:06,000 --> 01:18:08,000
然后我也默默的去改了

2247
01:18:08,000 --> 01:18:09,000
那个

2248
01:18:09,000 --> 01:18:10,000
当时的措辞

2249
01:18:10,000 --> 01:18:11,000
就说现在已经有了

2250
01:18:11,000 --> 01:18:14,000
所以 Anyway

2251
01:18:14,000 --> 01:18:15,000
OK

2252
01:18:15,000 --> 01:18:18,000
那我们接下来可以进入本期的正题

2253
01:18:18,000 --> 01:18:20,000
在一小时

2254
01:18:20,000 --> 01:18:23,000
一个多小时之后开始进入正题

2255
01:18:23,000 --> 01:18:23,000
太好了

2256
01:18:23,000 --> 01:18:24,000
我们就用谈半个小时

2257
01:18:24,000 --> 01:18:26,000
也

2258
01:18:26,000 --> 01:18:27,000
所以本期的主题是

2259
01:18:27,000 --> 01:18:28,000
测试

2260
01:18:28,000 --> 01:18:29,000
Testing

2261
01:18:29,000 --> 01:18:30,000
Testing

2262
01:18:30,000 --> 01:18:30,000
Testing

2263
01:18:30,000 --> 01:18:31,000
Testing

2264
01:18:31,000 --> 01:18:32,000
对

2265
01:18:32,000 --> 01:18:33,000
然后

2266
01:18:33,000 --> 01:18:34,000
什么是测试

2267
01:18:34,000 --> 01:18:35,000
解释一下

2268
01:18:35,000 --> 01:18:37,000
好问题

2269
01:18:37,000 --> 01:18:38,000
你说什么测试

2270
01:18:38,000 --> 01:18:40,000
我其实今天在准备

2271
01:18:40,000 --> 01:18:43,000
或者说这段时间在准备提纲的时候

2272
01:18:43,000 --> 01:18:45,000
想了很多测试的例子

2273
01:18:45,000 --> 01:18:46,000
但是

2274
01:18:48,000 --> 01:18:49,000
我觉得可以这么说吧

2275
01:18:49,000 --> 01:18:50,000
就是测试有两个

2276
01:18:50,000 --> 01:18:52,000
一个是广义的测试

2277
01:18:52,000 --> 01:18:53,000
一个是狭义的测试

2278
01:18:53,000 --> 01:18:54,000
就像相对论一样

2279
01:18:54,000 --> 01:18:57,000
广义的测试可以指

2280
01:18:57,000 --> 01:18:58,000
比如说

2281
01:18:58,000 --> 01:19:00,000
Panetration test

2282
01:19:00,000 --> 01:19:01,000
也是一种测试

2283
01:19:01,000 --> 01:19:04,000
就是看贵公司的网站是否安全

2284
01:19:04,000 --> 01:19:07,000
我做一个不管是黑帽子还是白帽子

2285
01:19:07,000 --> 01:19:08,000
试着去

2286
01:19:08,000 --> 01:19:10,000
扫一扫端口

2287
01:19:10,000 --> 01:19:11,000
破一破密码

2288
01:19:11,000 --> 01:19:12,000
找一找注入点

2289
01:19:12,000 --> 01:19:14,000
这些可以叫做测试

2290
01:19:14,000 --> 01:19:15,000
甚至

2291
01:19:15,000 --> 01:19:17,000
英文名字也叫 Panetration test

2292
01:19:17,000 --> 01:19:19,000
甚至用一个专门的拓写

2293
01:19:19,000 --> 01:19:20,000
也叫做 Panetration test

2294
01:19:20,000 --> 01:19:21,000
对

2295
01:19:21,000 --> 01:19:23,000
然后

2296
01:19:23,000 --> 01:19:26,000
发烟测试也可以叫做测试

2297
01:19:26,000 --> 01:19:27,000
就比如说

2298
01:19:27,000 --> 01:19:29,000
发烟 smoke testing

2299
01:19:29,000 --> 01:19:32,000
这我还不太理解这边这种各种数量

2300
01:19:32,000 --> 01:19:33,000
这个是讲什么

2301
01:19:33,000 --> 01:19:35,000
smoke testing

2302
01:19:35,000 --> 01:19:37,000
实际上大家每天都在做

2303
01:19:37,000 --> 01:19:40,000
或者说经常会做

2304
01:19:40,000 --> 01:19:42,000
比如说你装好了 Royal Rails

2305
01:19:42,000 --> 01:19:44,000
然后你

2306
01:19:44,000 --> 01:19:46,000
开始运行服务系

2307
01:19:46,000 --> 01:19:48,000
打开浏览器

2308
01:19:48,000 --> 01:19:50,000
输入 Localhost 8080 回车

2309
01:19:50,000 --> 01:19:51,000
诶

2310
01:19:51,000 --> 01:19:52,000
屏幕上出现了这个

2311
01:19:52,000 --> 01:19:55,000
it works 之类的这么一个

2312
01:19:55,000 --> 01:19:56,000
一个表示说

2313
01:19:56,000 --> 01:19:57,000
这东西开始运行了

2314
01:19:57,000 --> 01:19:59,000
这么一个提示

2315
01:19:59,000 --> 01:20:01,000
这个过程就是一个 smoke test

2316
01:20:01,000 --> 01:20:03,000
这个 smoke 是和

2317
01:20:03,000 --> 01:20:05,000
怎么一个说法

2318
01:20:05,000 --> 01:20:08,000
它应该是介于

2319
01:20:08,000 --> 01:20:11,000
借用自另外一个领域

2320
01:20:11,000 --> 01:20:12,000
我忘了是哪一个领域

2321
01:20:12,000 --> 01:20:14,000
是矿农还是什么

2322
01:20:14,000 --> 01:20:17,000
公众的一个机友的测试

2323
01:20:17,000 --> 01:20:19,000
就是如果你看到貌一二了

2324
01:20:19,000 --> 01:20:21,000
说明这个东西是已经开始正常

2325
01:20:21,000 --> 01:20:23,000
好像是孤独之类的

2326
01:20:23,000 --> 01:20:25,000
一个非常古老的

2327
01:20:25,000 --> 01:20:27,000
数语发烟测试

2328
01:20:28,000 --> 01:20:30,000
确定不是摩托车之类的吗

2329
01:20:30,000 --> 01:20:31,000
应该不是摩托车吧

2330
01:20:31,000 --> 01:20:33,000
摩托车冒烟的肯定是有故障

2331
01:20:33,000 --> 01:20:35,000
哈哈哈

2332
01:20:35,000 --> 01:20:36,000
好吧

2333
01:20:36,000 --> 01:20:38,000
发烟测试指的就是你在

2334
01:20:38,000 --> 01:20:39,000
你在试一个东西

2335
01:20:39,000 --> 01:20:40,000
你想要看一看

2336
01:20:40,000 --> 01:20:42,000
它的那些最为 critical

2337
01:20:42,000 --> 01:20:44,000
最为基本的功能

2338
01:20:44,000 --> 01:20:45,000
是不是运行

2339
01:20:45,000 --> 01:20:47,000
比如说你想知道

2340
01:20:47,000 --> 01:20:50,000
你想知道来电了没有

2341
01:20:50,000 --> 01:20:51,000
或者说你想知道是不是挺电的

2342
01:20:51,000 --> 01:20:54,000
你去搬一个电动的开关

2343
01:20:54,000 --> 01:20:56,000
诶这就是一种 smoke testing

2344
01:20:56,000 --> 01:20:59,000
因为它所测试的并不是你家

2345
01:20:59,000 --> 01:21:00,000
整个电路是不是完好无缺

2346
01:21:00,000 --> 01:21:02,000
是不是有地方有破损

2347
01:21:02,000 --> 01:21:03,000
是不是有地方电阻太高

2348
01:21:03,000 --> 01:21:06,000
是不是有可能有火灾的风险

2349
01:21:06,000 --> 01:21:07,000
它唯一测试的就是

2350
01:21:07,000 --> 01:21:10,000
你家的电路是不是在运行

2351
01:21:10,000 --> 01:21:10,000
但是

2352
01:21:10,000 --> 01:21:13,000
侠一个测试则是不包括刚才说的

2353
01:21:13,000 --> 01:21:15,000
比如说 penetration testing

2354
01:21:15,000 --> 01:21:16,000
或者 smoke testing

2355
01:21:16,000 --> 01:21:22,000
侠一个测试其实如果要用比较简单的语言来说

2356
01:21:22,000 --> 01:21:22,000
就是

2357
01:21:23,000 --> 01:21:26,000
让你知道

2358
01:21:26,000 --> 01:21:30,000
让你有种可以重复的方法

2359
01:21:30,000 --> 01:21:33,000
来知道自己写的软件是

2360
01:21:33,000 --> 01:21:40,000
按照你所希望的那些方式而运行的一系列东西

2361
01:21:40,000 --> 01:21:41,000
就是叫做测试

2362
01:21:41,000 --> 01:21:43,000
刚才讲的各种各样的测试

2363
01:21:43,000 --> 01:21:44,000
测试的

2364
01:21:44,000 --> 01:21:46,000
主要一个目的是什么

2365
01:21:46,000 --> 01:21:47,000
主要的目的是什么

2366
01:21:47,000 --> 01:21:49,000
基本上就是要

2367
01:21:49,000 --> 01:21:52,000
基本上测试的意义就是让你有一个

2368
01:21:52,000 --> 01:21:54,000
可以度量的准则

2369
01:21:54,000 --> 01:21:56,000
就是你因为我们知道

2370
01:21:56,000 --> 01:21:58,000
你写了一个程序之后

2371
01:21:58,000 --> 01:21:58,000
你会说

2372
01:21:58,000 --> 01:22:01,000
这个程序看起来是正确的

2373
01:22:01,000 --> 01:22:04,000
或者说它的大部分情况下也都是正确的

2374
01:22:04,000 --> 01:22:07,000
但是你怎么样才能有一种比较

2375
01:22:07,000 --> 01:22:09,000
可以验证的

2376
01:22:09,000 --> 01:22:09,000
客观的

2377
01:22:09,000 --> 01:22:12,000
可以量化的指标来告诉你说

2378
01:22:12,000 --> 01:22:15,000
对这个软件的确是可以工作的

2379
01:22:15,000 --> 01:22:16,000
这就是测试了

2380
01:22:16,000 --> 01:22:19,000
就是你为了获得一些特定的指标

2381
01:22:19,000 --> 01:22:21,000
而对你写好的软件

2382
01:22:21,000 --> 01:22:23,000
采取了一系列度量的方法

2383
01:22:24,000 --> 01:22:26,000
就是测试

2384
01:22:26,000 --> 01:22:28,000
所以就是其实它是一个

2385
01:22:28,000 --> 01:22:30,000
质量的就科业的概念

2386
01:22:30,000 --> 01:22:31,000
对

2387
01:22:31,000 --> 01:22:33,000
早期的

2388
01:22:34,000 --> 01:22:36,000
早期的测试

2389
01:22:36,000 --> 01:22:40,000
是为了验证程序的 behavior

2390
01:22:40,000 --> 01:22:41,000
是不是正确

2391
01:22:41,000 --> 01:22:42,000
而后期

2392
01:22:42,000 --> 01:22:44,000
比如说现今的测试

2393
01:22:44,000 --> 01:22:46,000
很大程度上已经变成一种

2394
01:22:47,000 --> 01:22:49,000
制检的关卡

2395
01:22:49,000 --> 01:22:51,000
就是我们知道有一个

2396
01:22:52,000 --> 01:22:57,000
验证体系应该是 ISO 900

2397
01:22:57,000 --> 01:23:00,000
在软件界好像还有另外的编号 92

2398
01:23:00,000 --> 01:23:04,000
然后这个认证体系很大的一个指标

2399
01:23:04,000 --> 01:23:08,000
就是要看你这个软件公司的测试

2400
01:23:08,000 --> 01:23:09,000
有没有写

2401
01:23:09,000 --> 01:23:11,000
如果有的话是什么样能写

2402
01:23:11,000 --> 01:23:13,000
然后有没有一个专门的

2403
01:23:13,000 --> 01:23:19,000
负责把关的部门来去盯着这些测试

2404
01:23:19,000 --> 01:23:20,000
诅此来

2405
01:23:20,000 --> 01:23:20,000
对

2406
01:23:20,000 --> 01:23:23,000
如今测试已经成为一个特别重要的一个

2407
01:23:23,000 --> 01:23:25,000
软件公司里面的环节

2408
01:23:26,000 --> 01:23:28,000
然后测试又可以分为

2409
01:23:28,000 --> 01:23:29,000
功能性的测试

2410
01:23:29,000 --> 01:23:31,000
以及非功能性的测试

2411
01:23:31,000 --> 01:23:31,000
也就是说

2412
01:23:31,000 --> 01:23:33,000
狭义上的测试

2413
01:23:33,000 --> 01:23:33,000
又可以分为

2414
01:23:33,000 --> 01:23:36,000
功能性的测试和非功能性的测试

2415
01:23:37,000 --> 01:23:38,000
功能性的测试

2416
01:23:38,000 --> 01:23:38,000
也就是说

2417
01:23:38,000 --> 01:23:40,000
比如说你写了一个函数

2418
01:23:40,000 --> 01:23:42,000
这个函数可以返回两个

2419
01:23:42,000 --> 01:23:43,000
数值的核

2420
01:23:43,000 --> 01:23:44,000
然后你写

2421
01:23:44,000 --> 01:23:45,000
所谓功能性的测试

2422
01:23:45,000 --> 01:23:47,000
就是你输入三和四

2423
01:23:47,000 --> 01:23:49,000
然后看函数是不是返回七

2424
01:23:50,000 --> 01:23:53,000
又比如说你写了一个

2425
01:23:53,000 --> 01:23:55,000
处法的函数

2426
01:23:55,000 --> 01:23:56,000
然后你输入一和零

2427
01:23:56,000 --> 01:24:00,000
想要看函数会不会返回说处零错

2428
01:24:00,000 --> 01:24:02,000
这是一种功能性的测试

2429
01:24:02,000 --> 01:24:04,000
而非功能性的测试

2430
01:24:04,000 --> 01:24:06,000
则是比如说看你函数的

2431
01:24:06,000 --> 01:24:08,000
执行的速度怎么样

2432
01:24:08,000 --> 01:24:11,000
比如说你写了一个加法的函数

2433
01:24:11,000 --> 01:24:12,000
是正确的没错

2434
01:24:12,000 --> 01:24:14,000
但是它需要一天才能得到结果

2435
01:24:14,000 --> 01:24:17,000
那这样的函数可能没有办法

2436
01:24:17,000 --> 01:24:20,000
通过所谓功能性的测试来验证它

2437
01:24:20,000 --> 01:24:23,000
对功能性的测试会告诉你说它没问题

2438
01:24:23,000 --> 01:24:25,000
但是一旦你去做一个

2439
01:24:25,000 --> 01:24:27,000
performance testing

2440
01:24:27,000 --> 01:24:29,000
那你会立刻意识到这样的函数

2441
01:24:29,000 --> 01:24:30,000
是完全不过关的

2442
01:24:31,000 --> 01:24:31,000
又比如说

2443
01:24:31,000 --> 01:24:33,000
这个 performance testing

2444
01:24:33,000 --> 01:24:34,000
其实有一个专门的书

2445
01:24:34,000 --> 01:24:36,000
我们叫做 benchmark

2446
01:24:36,000 --> 01:24:36,000
对了

2447
01:24:36,000 --> 01:24:37,000
可以这么说对

2448
01:24:38,000 --> 01:24:42,000
然后其实就这么说

2449
01:24:42,000 --> 01:24:42,000
就是这么算

2450
01:24:42,000 --> 01:24:46,000
就是 benchmark 测试的一个字极

2451
01:24:46,000 --> 01:24:48,000
怎么说

2452
01:24:48,000 --> 01:24:54,000
performance testing 可以归类为 profiling 的一种

2453
01:24:54,000 --> 01:24:58,000
而 benchmark 则是 profiling 的一个指标

2454
01:24:58,000 --> 01:25:03,000
所以我倾向于认为两者还是有多少

2455
01:25:03,000 --> 01:25:04,000
有点不一样

2456
01:25:04,000 --> 01:25:05,000
OK

2457
01:25:06,000 --> 01:25:09,000
因为

2458
01:25:10,000 --> 01:25:16,000
当然也是可以用 benchmark 最终的分数来作为 performance testing 的一个指标

2459
01:25:16,000 --> 01:25:17,000
也没错

2460
01:25:17,000 --> 01:25:19,000
这不重要

2461
01:25:19,000 --> 01:25:24,000
因为我们本次节目所要集中的这个话题

2462
01:25:24,000 --> 01:25:29,000
其实是在狭义的功能性测试上

2463
01:25:29,000 --> 01:25:30,000
而不是非功能性测试

2464
01:25:30,000 --> 01:25:35,000
因为非功能测试是可以可能涉及到的面实在是太广太广

2465
01:25:36,000 --> 01:25:37,000
对

2466
01:25:37,000 --> 01:25:37,000
因为

2467
01:25:37,000 --> 01:25:40,000
软离功能本身就是一个非常广的话题

2468
01:25:40,000 --> 01:25:45,000
而测试又是软离功能下面相当大的一个分支

2469
01:25:45,000 --> 01:25:55,000
我们显然不可能在一个预计时间只有两个小时左右的节目里面把面具料了

2470
01:25:55,000 --> 01:25:57,000
测试每个方面都谈到

2471
01:25:57,000 --> 01:26:05,000
所以我们这次主要的集中的主题还是在功能性测试上

2472
01:26:05,000 --> 01:26:06,000
而且功能性测试里面

2473
01:26:06,000 --> 01:26:10,000
我们应该只会谈及 unit test

2474
01:26:10,000 --> 01:26:13,000
就是单元测试

2475
01:26:13,000 --> 01:26:17,000
以及部分的所谓 acceptance test

2476
01:26:17,000 --> 01:26:19,000
就是接受性测试

2477
01:26:19,000 --> 01:26:21,000
我不知道是交接测试

2478
01:26:21,000 --> 01:26:24,000
还是中文数以之时候放弃

2479
01:26:25,000 --> 01:26:26,000
没关系

2480
01:26:26,000 --> 01:26:27,000
anyway

2481
01:26:27,000 --> 01:26:27,000
对

2482
01:26:29,000 --> 01:26:31,000
所以 Rio 你写测试吗

2483
01:26:33,000 --> 01:26:35,000
很惨苦我不写

2484
01:26:35,000 --> 01:26:37,000
伟大的程序都是不写测试

2485
01:26:37,000 --> 01:26:38,000
这句话我们先

2486
01:26:38,000 --> 01:26:41,000
不 我一直就在想了解这么一个事

2487
01:26:41,000 --> 01:26:43,000
就是说我们经常有

2488
01:26:43,000 --> 01:26:47,000
也有一种开发程序的思路叫做 test driven development TDD

2489
01:26:47,000 --> 01:26:48,000
对吧

2490
01:26:48,000 --> 01:26:49,000
我一直很好奇

2491
01:26:49,000 --> 01:26:51,000
这事儿靠谱吗

2492
01:26:51,000 --> 01:26:53,000
就这么说吧

2493
01:26:53,000 --> 01:26:56,000
如果我们把软件工程真的作为一项工程来讲

2494
01:26:56,000 --> 01:26:57,000
我们会这么去想它

2495
01:26:57,000 --> 01:27:00,000
就是你修一栋楼

2496
01:27:00,000 --> 01:27:04,000
你会说这个楼我们算出来它的成重是比如说 1000 吨

2497
01:27:05,000 --> 01:27:06,000
某一层对吧

2498
01:27:06,000 --> 01:27:08,000
我们照这个数字靠谱

2499
01:27:08,000 --> 01:27:10,000
反正就举随便举 1000 吨

2500
01:27:10,000 --> 01:27:11,000
然后我们会从力学结构上计算出来

2501
01:27:11,000 --> 01:27:12,000
没错

2502
01:27:12,000 --> 01:27:14,000
它确实可以承受 1000 吨

2503
01:27:14,000 --> 01:27:16,000
就是从计算物理算数

2504
01:27:16,000 --> 01:27:19,000
这个就是公式算出来就这么多

2505
01:27:19,000 --> 01:27:22,000
但我们不会真的弄 1000 东西上去给它实际压一下对吧

2506
01:27:26,000 --> 01:27:27,000
是这样说没错

2507
01:27:27,000 --> 01:27:29,000
但我有办法反驳你

2508
01:27:29,000 --> 01:27:30,000
你还有别的要说

2509
01:27:30,000 --> 01:27:32,000
没 没我这就在这个思路说下去

2510
01:27:32,000 --> 01:27:40,000
其实有很多事情我们是没有办法去真的去实践那个条件去测的

2511
01:27:40,000 --> 01:27:41,000
就是有些所谓的 educated

2512
01:27:41,000 --> 01:27:42,000
对吧

2513
01:27:42,000 --> 01:27:43,000
但是软件不一样

2514
01:27:43,000 --> 01:27:46,000
因为软件很适合模拟各种情况出来

2515
01:27:46,000 --> 01:27:50,000
你就可以 1000 多产母币输个多加个零一万吨

2516
01:27:50,000 --> 01:27:52,000
我都可以给你测出来

2517
01:27:52,000 --> 01:27:53,000
没有问题

2518
01:27:53,000 --> 01:27:55,000
但我觉得这个我一直很好奇

2519
01:27:55,000 --> 01:27:58,000
这样会不会让人变得奇怪

2520
01:27:58,000 --> 01:27:59,000
或者变得懒

2521
01:28:00,000 --> 01:28:03,000
因为我一直觉得要保证软件质量测试

2522
01:28:03,000 --> 01:28:05,000
当然是少不了的一个环节

2523
01:28:05,000 --> 01:28:07,000
但是这个不是最根本的问题

2524
01:28:07,000 --> 01:28:10,000
最根本的问题是你在设计的时候就想好

2525
01:28:10,000 --> 01:28:13,000
这个在理论上可不可能会出现这种问题

2526
01:28:13,000 --> 01:28:14,000
就或者说这么说

2527
01:28:14,000 --> 01:28:15,000
你写了一个函数

2528
01:28:15,000 --> 01:28:18,000
它有多少种可能的进入方法

2529
01:28:18,000 --> 01:28:20,000
有多少种可能的退出方法

2530
01:28:20,000 --> 01:28:24,000
中间有多少种可能的出现异常的原因

2531
01:28:24,000 --> 01:28:27,000
我们把这些都每一个都考虑过了

2532
01:28:27,000 --> 01:28:32,000
我们在写函数就猜说它是一个无错的

2533
01:28:32,000 --> 01:28:36,000
一定是按证明过确实被

2534
01:28:36,000 --> 01:28:38,000
证明过确实没有

2535
01:28:38,000 --> 01:28:40,000
你所有的路径你都考虑了

2536
01:28:40,000 --> 01:28:41,000
没有一个漏掉的东西

2537
01:28:41,000 --> 01:28:43,000
这个时候你不用写测试

2538
01:28:43,000 --> 01:28:44,000
因为你在设计的阶段

2539
01:28:44,000 --> 01:28:47,000
你已经把所有的可能性都考虑过了

2540
01:28:47,000 --> 01:28:51,000
但是做这件事情本身可能是比较难的

2541
01:28:51,000 --> 01:28:53,000
就是说特别是软件过程大了之后

2542
01:28:53,000 --> 01:28:54,000
你可能不可能面面知道

2543
01:28:54,000 --> 01:28:55,000
对吧

2544
01:28:55,000 --> 01:28:58,000
所以我们才要测试一些选择一些点

2545
01:28:58,000 --> 01:29:00,000
这是统计抽样的办法

2546
01:29:00,000 --> 01:29:02,000
我们假设如果这些点过了之后

2547
01:29:02,000 --> 01:29:04,000
我们有较大的信心认为

2548
01:29:04,000 --> 01:29:06,000
这个东西是设计上是没有问题的

2549
01:29:06,000 --> 01:29:08,000
但是这个和我刚才讲的那种修楼

2550
01:29:08,000 --> 01:29:12,000
修楼你用力学工是结构力学算出来之后

2551
01:29:12,000 --> 01:29:14,000
它肯定能测试这么多

2552
01:29:14,000 --> 01:29:16,000
然后我们并不需要真的去加上

2553
01:29:16,000 --> 01:29:18,000
极限的重量去测

2554
01:29:18,000 --> 01:29:20,000
它能不能实际承受那么多

2555
01:29:20,000 --> 01:29:21,000
是一个概念

2556
01:29:21,000 --> 01:29:22,000
就是说我们能够算出来之后

2557
01:29:22,000 --> 01:29:24,000
我们不需要真的去做那些测试

2558
01:29:24,000 --> 01:29:26,000
所以我一直很好奇

2559
01:29:26,000 --> 01:29:31,000
我们是不是把测试的功能想的太伟大了

2560
01:29:31,000 --> 01:29:32,000
或者说测试的重点

2561
01:29:32,000 --> 01:29:35,000
它到二把这个从设计

2562
01:29:35,000 --> 01:29:38,000
从这个原理层面的东西放的抓一点太少

2563
01:29:39,000 --> 01:29:40,000
OK

2564
01:29:43,000 --> 01:29:45,000
草点太多不知道从哪图起

2565
01:29:46,000 --> 01:29:47,000
没事

2566
01:29:47,000 --> 01:29:47,000
慢慢来

2567
01:29:47,000 --> 01:29:48,000
开玩笑

2568
01:29:48,000 --> 01:29:48,000
我这个就是

2569
01:29:48,000 --> 01:29:49,000
不

2570
01:29:49,000 --> 01:29:53,000
我其实我还是很比较认同你的看法

2571
01:29:53,000 --> 01:29:53,000
说实话

2572
01:29:53,000 --> 01:29:54,000
因为

2573
01:29:58,000 --> 01:29:58,000
这么说吧

2574
01:29:58,000 --> 01:30:02,000
我其实对于测试一直是抱有多多少有点抵出情绪

2575
01:30:05,000 --> 01:30:08,000
甚至我自己也不是一个非常喜欢写测试的人

2576
01:30:08,000 --> 01:30:10,000
但是我必须反驳你的一点

2577
01:30:10,000 --> 01:30:15,000
就是你觉得测试似乎在软件工程里面被高估了

2578
01:30:15,000 --> 01:30:17,000
而我则觉得

2579
01:30:17,000 --> 01:30:20,000
从目前大部分软件的水平来看

2580
01:30:20,000 --> 01:30:21,000
它应该是为低估

2581
01:30:24,000 --> 01:30:26,000
拿回你这个钢接构的例子

2582
01:30:26,000 --> 01:30:27,000
就是你的建筑的意思

2583
01:30:27,000 --> 01:30:29,000
就是你会说

2584
01:30:29,000 --> 01:30:31,000
你设计这一层

2585
01:30:31,000 --> 01:30:32,000
它的

2586
01:30:34,000 --> 01:30:35,000
硬力可能是

2587
01:30:36,000 --> 01:30:39,000
两千吨或者是多重

2588
01:30:39,000 --> 01:30:40,000
但是

2589
01:30:40,000 --> 01:30:42,000
你之所以能得出这个

2590
01:30:43,000 --> 01:30:44,000
数值本身

2591
01:30:44,000 --> 01:30:45,000
其实就是因为

2592
01:30:45,000 --> 01:30:49,000
用来搭这个建筑的钢材

2593
01:30:50,000 --> 01:30:52,000
真的经历过

2594
01:30:52,000 --> 01:30:55,000
在一个比较小的规模上的硬力测试

2595
01:30:56,000 --> 01:30:59,000
你才可以拿到这个钢材相关的数据

2596
01:30:59,000 --> 01:31:01,000
然后才能算出这个钢材

2597
01:31:01,000 --> 01:31:03,000
在什么样的高度

2598
01:31:03,000 --> 01:31:04,000
什么样的长度

2599
01:31:04,000 --> 01:31:06,000
什么样的直径上面能够承受多大的重量

2600
01:31:07,000 --> 01:31:07,000
就是

2601
01:31:09,000 --> 01:31:10,000
在现实生活里面

2602
01:31:10,000 --> 01:31:13,000
在实体世界里面有很多东西的数值

2603
01:31:13,000 --> 01:31:15,000
真的不是可以算出来的

2604
01:31:15,000 --> 01:31:16,000
比如说化学或者是

2605
01:31:16,000 --> 01:31:17,000
但是这个是车远

2606
01:31:17,000 --> 01:31:20,000
但就很大一部分程度上

2607
01:31:20,000 --> 01:31:23,000
我们对于很多材料的认知

2608
01:31:23,000 --> 01:31:26,000
都是非常愚蠢的去

2609
01:31:26,000 --> 01:31:27,000
在实验室里面

2610
01:31:27,000 --> 01:31:28,000
不停的去试

2611
01:31:28,000 --> 01:31:29,000
试出来

2612
01:31:31,000 --> 01:31:32,000
包括合金

2613
01:31:32,000 --> 01:31:33,000
或者是

2614
01:31:34,000 --> 01:31:35,000
算了不说这些

2615
01:31:35,000 --> 01:31:37,000
但总之最重要的一点就是

2616
01:31:37,000 --> 01:31:41,000
在现实生活里面测试本身就已经是一个

2617
01:31:41,000 --> 01:31:42,000
比较

2618
01:31:42,000 --> 01:31:43,000
Fundamental 的东西

2619
01:31:43,000 --> 01:31:44,000
它如此

2620
01:31:44,000 --> 01:31:46,000
四中间关已至于你有可能

2621
01:31:47,000 --> 01:31:48,000
不会去重视它

2622
01:31:48,000 --> 01:31:49,000
因为

2623
01:31:50,000 --> 01:31:52,000
如果你是一个建筑工人的话

2624
01:31:52,000 --> 01:31:54,000
或者说如果你是一个材料

2625
01:31:54,000 --> 01:31:56,000
力学专家的话

2626
01:31:56,000 --> 01:31:57,000
你可能会觉得

2627
01:31:57,000 --> 01:31:59,000
我在轮件里面拖一拖

2628
01:31:59,000 --> 01:32:00,000
线图

2629
01:32:00,000 --> 01:32:03,000
然后它自动部就会帮我估算出来

2630
01:32:03,000 --> 01:32:04,000
这个东西大概有

2631
01:32:04,000 --> 01:32:07,000
大概有什么样的能够承受多大的重量

2632
01:32:07,000 --> 01:32:08,000
但实际上

2633
01:32:08,000 --> 01:32:10,000
这个数值本身就是

2634
01:32:11,000 --> 01:32:13,000
首先通过测试才能得到的

2635
01:32:13,000 --> 01:32:14,000
好吗

2636
01:32:15,000 --> 01:32:15,000
OK

2637
01:32:15,000 --> 01:32:16,000
然后

2638
01:32:16,000 --> 01:32:20,000
这个是其实对应软件的所谓的 Unit Test

2639
01:32:20,000 --> 01:32:21,000
保证每一个

2640
01:32:21,000 --> 01:32:22,000
结构

2641
01:32:22,000 --> 01:32:23,000
每一个 controller

2642
01:32:23,000 --> 01:32:25,000
每一个组件是正确的吗

2643
01:32:27,000 --> 01:32:28,000
是意思吗

2644
01:32:28,000 --> 01:32:29,000
差不多

2645
01:32:29,000 --> 01:32:30,000
但实际上

2646
01:32:31,000 --> 01:32:33,000
软件的 Unit Test

2647
01:32:33,000 --> 01:32:34,000
更

2648
01:32:34,000 --> 01:32:37,000
如果一定要在建筑里面找出一个对应的话

2649
01:32:37,000 --> 01:32:40,000
可能更像是说

2650
01:32:40,000 --> 01:32:40,000
OK

2651
01:32:40,000 --> 01:32:43,000
我为这个楼设计了

2652
01:32:43,000 --> 01:32:46,000
一层

2653
01:32:46,000 --> 01:32:47,000
然后我要在

2654
01:32:48,000 --> 01:32:49,000
我想起小姐姐说的

2655
01:32:49,000 --> 01:32:50,000
对

2656
01:32:50,000 --> 01:32:52,000
小姐姐说的那个体育馆的意思

2657
01:32:52,000 --> 01:32:54,000
就是它设计了一个体育馆

2658
01:32:54,000 --> 01:32:57,000
然后体育馆里面每层要摆上 20 个厕所

2659
01:32:58,000 --> 01:33:02,000
Unit Test 更像是说

2660
01:33:02,000 --> 01:33:03,000
把每一个厕所

2661
01:33:04,000 --> 01:33:07,000
假如每一个厕所都可以做成一个预购件的话

2662
01:33:07,000 --> 01:33:10,000
把每一个厕所的预购件拿出来

2663
01:33:10,000 --> 01:33:11,000
单独给它通上水

2664
01:33:11,000 --> 01:33:12,000
通上电

2665
01:33:12,000 --> 01:33:13,000
然后

2666
01:33:14,000 --> 01:33:15,000
你进去使用一次

2667
01:33:15,000 --> 01:33:17,000
然后看它能不能冲水

2668
01:33:20,000 --> 01:33:22,000
或者说你进去用一次之后

2669
01:33:22,000 --> 01:33:25,000
看看它有没有什么不合理的地方

2670
01:33:25,000 --> 01:33:27,000
这才更接近 Unit Test

2671
01:33:27,000 --> 01:33:29,000
最重要的一点就是

2672
01:33:29,000 --> 01:33:32,000
世界上没有两种建筑是一模一样的

2673
01:33:33,000 --> 01:33:34,000
为三个

2674
01:33:36,000 --> 01:33:38,000
脑中浮现出了

2675
01:33:38,000 --> 01:33:43,000
脑中浮现出了社会主义国家里面那些非常

2676
01:33:43,000 --> 01:33:47,000
一个小气泽建筑都是一样的

2677
01:33:47,000 --> 01:33:52,000
有消耗说把你结到一个中国三线城市的郊区

2678
01:33:52,000 --> 01:33:52,000
扔下来

2679
01:33:52,000 --> 01:33:54,000
给你一个小时的时间

2680
01:33:54,000 --> 01:33:57,000
让你找出自己是在哪个城市里找出来的

2681
01:34:01,000 --> 01:34:03,000
软件里面可能也是

2682
01:34:03,000 --> 01:34:04,000
很多软件都彼此相似

2683
01:34:04,000 --> 01:34:07,000
但是没有两个软件是彼此相同的

2684
01:34:07,000 --> 01:34:08,000
所以

2685
01:34:08,000 --> 01:34:11,000
如果你不写测试的话

2686
01:34:11,000 --> 01:34:16,000
很有可能在你认为这个软件的这一部分

2687
01:34:16,000 --> 01:34:19,000
应该那样工作的

2688
01:34:21,000 --> 01:34:23,000
这个想法本身就是没有办法验证

2689
01:34:23,000 --> 01:34:24,000
而且不成立的

2690
01:34:24,000 --> 01:34:25,000
最终也会发现它是不成立

2691
01:34:30,000 --> 01:34:32,000
另外一级件其实就是

2692
01:34:32,000 --> 01:34:34,000
有些软件是

2693
01:34:35,000 --> 01:34:36,000
无关紧要的

2694
01:34:36,000 --> 01:34:37,000
比如说你打一个 Hello World

2695
01:34:37,000 --> 01:34:41,000
然后你可能最后会露了那个换行服

2696
01:34:41,000 --> 01:34:42,000
或者是你什么吧

2697
01:34:42,000 --> 01:34:45,000
Hello World 打成了 HAL

2698
01:34:45,000 --> 01:34:47,000
这些都是无关紧要的

2699
01:34:47,000 --> 01:34:49,000
但是另外一些软件则是人命关天的

2700
01:34:49,000 --> 01:34:50,000
比如说你

2701
01:34:51,000 --> 01:34:52,000
你开着车

2702
01:34:52,000 --> 01:34:53,000
那个

2703
01:34:53,000 --> 01:34:55,000
控制刹车的部分

2704
01:34:55,000 --> 01:34:57,000
或者是控制转向的部分

2705
01:34:57,000 --> 01:34:59,000
如果这个部分的软件出了问题

2706
01:34:59,000 --> 01:35:01,000
那很有可能是会死的

2707
01:35:02,000 --> 01:35:05,000
我们之前请到了袁浩格格

2708
01:35:05,000 --> 01:35:09,000
他所在的那家 ElectroVit

2709
01:35:10,000 --> 01:35:12,000
所做的工作

2710
01:35:13,000 --> 01:35:16,000
之所以会非常强调测试

2711
01:35:16,000 --> 01:35:18,000
就是因为他们的软件

2712
01:35:18,000 --> 01:35:21,000
里面有四个人身伤害的标准

2713
01:35:21,000 --> 01:35:22,000
如果没有起错的话

2714
01:35:22,000 --> 01:35:24,000
第一个标准是

2715
01:35:24,000 --> 01:35:26,000
这个软件如果出了问题

2716
01:35:26,000 --> 01:35:27,000
有可能

2717
01:35:27,000 --> 01:35:30,000
这个标准的第一等级就是

2718
01:35:30,000 --> 01:35:32,000
如果这个软件出了问题

2719
01:35:32,000 --> 01:35:36,000
那可能会有一个人受伤

2720
01:35:36,000 --> 01:35:37,000
第二等级是

2721
01:35:37,000 --> 01:35:39,000
如果这个软件出了问题

2722
01:35:39,000 --> 01:35:40,000
可能会有一个人死亡

2723
01:35:40,000 --> 01:35:41,000
第三个等级是

2724
01:35:41,000 --> 01:35:42,000
如果这个软件出了问题

2725
01:35:42,000 --> 01:35:44,000
可能会有多个人受伤

2726
01:35:44,000 --> 01:35:46,000
第四个等级就是

2727
01:35:46,000 --> 01:35:48,000
可能会有多个人死亡

2728
01:35:48,000 --> 01:35:49,000
你看看人家的这个

2729
01:35:49,000 --> 01:35:52,000
人家这个软件的危险标准是这么来的

2730
01:35:52,000 --> 01:35:53,000
那

2731
01:35:53,000 --> 01:35:54,000
在这样

2732
01:35:54,000 --> 01:35:56,000
如果你是负责开发这样一个软件的话

2733
01:35:56,000 --> 01:35:57,000
那可能

2734
01:35:57,000 --> 01:35:58,000
不是可能

2735
01:35:58,000 --> 01:35:59,000
就是

2736
01:35:59,000 --> 01:36:02,000
任何级别的测试都是必不可少的

2737
01:36:03,000 --> 01:36:05,000
所以其实面对这种

2738
01:36:05,000 --> 01:36:06,000
我理解你说那个意思

2739
01:36:06,000 --> 01:36:07,000
就是面对这种所谓的

2740
01:36:07,000 --> 01:36:09,000
mission critical 的组件

2741
01:36:09,000 --> 01:36:12,000
不是更应该从源头上去解决它的问题

2742
01:36:12,000 --> 01:36:14,000
而不是过度依赖于测试了

2743
01:36:15,000 --> 01:36:17,000
就是其实

2744
01:36:17,000 --> 01:36:18,000
我刚才想说

2745
01:36:18,000 --> 01:36:19,000
我已经在试图绕开你的问题

2746
01:36:19,000 --> 01:36:21,000
就是你会你想说

2747
01:36:21,000 --> 01:36:25,000
好的架构可以取代测试

2748
01:36:26,000 --> 01:36:27,000
不不不

2749
01:36:27,000 --> 01:36:28,000
这个面有可能要再解释一下

2750
01:36:28,000 --> 01:36:29,000
就是说

2751
01:36:31,000 --> 01:36:34,000
好的架构可以减轻对于测试的依赖

2752
01:36:34,000 --> 01:36:36,000
我觉得就是一个

2753
01:36:36,000 --> 01:36:38,000
验证一个软件正确性的方法

2754
01:36:38,000 --> 01:36:39,000
有两个

2755
01:36:39,000 --> 01:36:41,000
一个是你测出他所有的输入

2756
01:36:41,000 --> 01:36:42,000
所有的输出

2757
01:36:42,000 --> 01:36:43,000
对吧

2758
01:36:43,000 --> 01:36:46,000
如果他这个输入输出是一个有限级的话

2759
01:36:46,000 --> 01:36:48,000
你看是不是符合你的预期

2760
01:36:48,000 --> 01:36:49,000
就是暴力

2761
01:36:49,000 --> 01:36:50,000
就是暴力穷聚防

2762
01:36:50,000 --> 01:36:52,000
但是另外一个方法就是说

2763
01:36:53,000 --> 01:36:55,000
你跟他做那个逻辑分析

2764
01:36:55,000 --> 01:36:57,000
我们叫 formal verification

2765
01:36:58,000 --> 01:37:01,000
就是你给他一个描述

2766
01:37:01,000 --> 01:37:02,000
说他应该怎么怎么样

2767
01:37:02,000 --> 01:37:04,000
然后你通过一些正式的方法

2768
01:37:04,000 --> 01:37:06,000
formal 这叫什么来的

2769
01:37:06,000 --> 01:37:07,000
对正式的方法

2770
01:37:07,000 --> 01:37:08,000
形式方法应该是

2771
01:37:08,000 --> 01:37:10,000
对形式的方法去证明

2772
01:37:10,000 --> 01:37:12,000
他确实是会按照这种情况

2773
01:37:12,000 --> 01:37:13,000
没有特例

2774
01:37:13,000 --> 01:37:15,000
没有考虑过的

2775
01:37:15,000 --> 01:37:16,000
对吧

2776
01:37:16,000 --> 01:37:17,000
所以

2777
01:37:17,000 --> 01:37:20,000
测试其实是在我说的前一种方法

2778
01:37:20,000 --> 01:37:22,000
就是去看他的输入输出

2779
01:37:22,000 --> 01:37:25,000
然后看我们选取一些点

2780
01:37:25,000 --> 01:37:26,000
比如说一些比较奇怪的点

2781
01:37:26,000 --> 01:37:27,000
看快吹什么问题

2782
01:37:27,000 --> 01:37:28,000
选取正常的点

2783
01:37:28,000 --> 01:37:31,000
他是不是产生符合我们预期的答案

2784
01:37:31,000 --> 01:37:32,000
然后选这些奇怪的点

2785
01:37:32,000 --> 01:37:35,000
他是不是出现我们预期的异常

2786
01:37:35,000 --> 01:37:35,000
或者是错误

2787
01:37:35,000 --> 01:37:36,000
对吧

2788
01:37:36,000 --> 01:37:38,000
但其实这个覆盖和

2789
01:37:38,000 --> 01:37:40,000
有一个 formal verification

2790
01:37:40,000 --> 01:37:41,000
就是正

2791
01:37:41,000 --> 01:37:42,000
叫什么

2792
01:37:42,000 --> 01:37:43,000
这不叫正式的

2793
01:37:43,000 --> 01:37:44,000
形式证明

2794
01:37:44,000 --> 01:37:46,000
对形式证明的

2795
01:37:46,000 --> 01:37:48,000
这个得社结论是完全不具有

2796
01:37:48,000 --> 01:37:49,000
像可比基因党

2797
01:37:49,000 --> 01:37:50,000
因为一个是说

2798
01:37:50,000 --> 01:37:52,000
我们有 50%的

2799
01:37:52,000 --> 01:37:52,000
不

2800
01:37:52,000 --> 01:37:54,000
5%的把握证明

2801
01:37:54,000 --> 01:37:55,000
他们应该没问题

2802
01:37:55,000 --> 01:37:56,000
然后好这边的形式证明是说

2803
01:37:56,000 --> 01:37:58,000
我们百分之百确定

2804
01:37:58,000 --> 01:37:59,000
它不会出错

2805
01:37:59,000 --> 01:38:00,000
里面有意思吗

2806
01:38:00,000 --> 01:38:01,000
嗯

2807
01:38:02,000 --> 01:38:03,000
但我觉得有两点

2808
01:38:03,000 --> 01:38:04,000
首先

2809
01:38:04,000 --> 01:38:05,000
第一点是

2810
01:38:05,000 --> 01:38:07,000
你通过形式证明

2811
01:38:09,000 --> 01:38:10,000
知晓啊

2812
01:38:10,000 --> 01:38:11,000
这一个软件

2813
01:38:11,000 --> 01:38:13,000
这样写应该没有问题

2814
01:38:13,000 --> 01:38:16,000
但是你仍旧没有办法确定说

2815
01:38:16,000 --> 01:38:17,000
你写出来了

2816
01:38:17,000 --> 01:38:20,000
就一定完全符合你的形式证明

2817
01:38:20,000 --> 01:38:21,000
比如说

2818
01:38:21,000 --> 01:38:23,000
你在某个地方多打了一个点

2819
01:38:23,000 --> 01:38:24,000
或者是在某个地方

2820
01:38:24,000 --> 01:38:25,000
把加号写成个乘号

2821
01:38:26,000 --> 01:38:29,000
这些东西都是没有办法通过形式证明来

2822
01:38:29,000 --> 01:38:30,000
唯一确认的

2823
01:38:32,000 --> 01:38:33,000
可以吧

2824
01:38:33,000 --> 01:38:36,000
如果你把那个 specification 写得足够

2825
01:38:37,000 --> 01:38:39,000
当然你可能说这个界线就比较模糊了

2826
01:38:39,000 --> 01:38:40,000
对吧

2827
01:38:40,000 --> 01:38:43,000
如果这个 specification 写得那么详细的

2828
01:38:43,000 --> 01:38:44,000
这不就是 BDD 了

2829
01:38:44,000 --> 01:38:46,000
这不就是 Bender Driven Development

2830
01:38:46,000 --> 01:38:48,000
这不就是测试先行

2831
01:38:48,000 --> 01:38:50,000
驱动的一种特殊形式

2832
01:38:51,000 --> 01:38:53,000
然后其次第二点是

2833
01:38:54,000 --> 01:38:56,000
做形式分析是非常花时间的

2834
01:38:56,000 --> 01:38:59,000
而且很多时候是不可能的

2835
01:38:59,000 --> 01:38:59,000
对

2836
01:38:59,000 --> 01:39:02,000
而现代软件里面有很大的一个问题

2837
01:39:02,000 --> 01:39:03,000
就是你刚才说

2838
01:39:03,000 --> 01:39:05,000
如果你知道自己想的是什么

2839
01:39:05,000 --> 01:39:08,000
但现在的问题就是在很多领域里面

2840
01:39:08,000 --> 01:39:12,000
最终负责验收业软件的那个人

2841
01:39:12,000 --> 01:39:14,000
是不知道自己要什么的

2842
01:39:14,000 --> 01:39:15,000
你只有把它做出来

2843
01:39:15,000 --> 01:39:17,000
就没

2844
01:39:17,000 --> 01:39:21,000
这可能就是学院派和工程派做事情的不同的一个出发点

2845
01:39:21,000 --> 01:39:22,000
我觉得

2846
01:39:22,000 --> 01:39:22,000
对

2847
01:39:22,000 --> 01:39:25,000
这就是微型模型

2848
01:39:25,000 --> 01:39:27,000
瀑布模型和螺旋模型

2849
01:39:27,000 --> 01:39:29,000
就是敏捷模型最大的区别

2850
01:39:31,000 --> 01:39:32,000
你要解释一下吗

2851
01:39:34,000 --> 01:39:34,000
这个

2852
01:39:34,000 --> 01:39:35,000
好吧

2853
01:39:35,000 --> 01:39:38,000
有一个问题就是我没学过人家工程

2854
01:39:38,000 --> 01:39:39,000
你学过人家工程吗

2855
01:39:39,000 --> 01:39:40,000
你也没学过

2856
01:39:41,000 --> 01:39:41,000
对

2857
01:39:41,000 --> 01:39:43,000
本质上我是一个学通信的人

2858
01:39:43,000 --> 01:39:44,000
然后我在这边

2859
01:39:44,000 --> 01:39:46,000
本质上我不是学 CSS 的人

2860
01:39:46,000 --> 01:39:46,000
对

2861
01:39:46,000 --> 01:39:47,000
好吧

2862
01:39:47,000 --> 01:39:49,000
我就应该比简直解释一下

2863
01:39:49,000 --> 01:39:50,000
所谓

2864
01:39:50,000 --> 01:39:53,000
瀑布模型的意思就是

2865
01:39:54,000 --> 01:39:56,000
你就像盖房子一样

2866
01:39:57,000 --> 01:39:58,000
一上来给你个蓝图

2867
01:39:59,000 --> 01:40:00,000
假设你是业主

2868
01:40:00,000 --> 01:40:01,000
你

2869
01:40:02,000 --> 01:40:03,000
就像

2870
01:40:03,000 --> 01:40:03,000
对

2871
01:40:03,000 --> 01:40:05,000
我的同事正在盖房子

2872
01:40:05,000 --> 01:40:06,000
他所经历的就是过程

2873
01:40:06,000 --> 01:40:08,000
首先你去一个设计师搜索

2874
01:40:10,000 --> 01:40:11,000
说我买你母帝

2875
01:40:11,000 --> 01:40:13,000
然后我要在这母帝上盖一个房子

2876
01:40:13,000 --> 01:40:16,000
然后设计师公司说行

2877
01:40:16,000 --> 01:40:20,000
然后他拿来这个小区的规划

2878
01:40:20,000 --> 01:40:21,000
比如说都有些小区规定说

2879
01:40:21,000 --> 01:40:22,000
房顶必须是尖的

2880
01:40:22,000 --> 01:40:26,000
然后尖的角度必须是多少度以上

2881
01:40:27,000 --> 01:40:29,000
他拿来一大堆 regulation

2882
01:40:29,000 --> 01:40:30,000
然后我帮你看一眼

2883
01:40:30,000 --> 01:40:31,000
说好

2884
01:40:31,000 --> 01:40:32,000
根据这些 regulation

2885
01:40:32,000 --> 01:40:33,000
我可以给你

2886
01:40:35,000 --> 01:40:36,000
三个房型

2887
01:40:37,000 --> 01:40:38,000
然后你看着三个房型

2888
01:40:38,000 --> 01:40:40,000
然后看着三个房型的平面图

2889
01:40:40,000 --> 01:40:42,000
看着三个房型的效果图

2890
01:40:43,000 --> 01:40:45,000
看着三个房型的内部结构图

2891
01:40:45,000 --> 01:40:46,000
然后你说好

2892
01:40:46,000 --> 01:40:47,000
我要我觉得这间房子太小了

2893
01:40:47,000 --> 01:40:48,000
我要把它改大一点

2894
01:40:48,000 --> 01:40:49,000
不辣

2895
01:40:49,000 --> 01:40:51,000
然后经过这一种过程

2896
01:40:51,000 --> 01:40:52,000
你最终去了一个方案

2897
01:40:52,000 --> 01:40:54,000
你要在这个方案上签字

2898
01:40:55,000 --> 01:40:55,000
然后

2899
01:40:56,000 --> 01:41:00,000
这个设计公司把它交给他们认识的包裹头

2900
01:41:00,000 --> 01:41:02,000
然后包裹头开始干

2901
01:41:02,000 --> 01:41:03,000
然后干了一段时间

2902
01:41:03,000 --> 01:41:04,000
你隔一段时间去看一看

2903
01:41:04,000 --> 01:41:06,000
然后这个

2904
01:41:06,000 --> 01:41:09,000
你会看到他先挖一个坑

2905
01:41:09,000 --> 01:41:09,000
然后打地基

2906
01:41:09,000 --> 01:41:11,000
然后改地一层改第二层

2907
01:41:11,000 --> 01:41:12,000
把预置板插上

2908
01:41:12,000 --> 01:41:12,000
改地三层

2909
01:41:12,000 --> 01:41:14,000
然后外墙装修

2910
01:41:14,000 --> 01:41:15,000
内装修

2911
01:41:16,000 --> 01:41:17,000
水道去收

2912
01:41:18,000 --> 01:41:18,000
这么一个

2913
01:41:18,000 --> 01:41:22,000
你拿到了一间和自己最初的图纸

2914
01:41:22,000 --> 01:41:23,000
可能略有出入

2915
01:41:23,000 --> 01:41:26,000
但是基本上是你想象的那个样子的一个房子

2916
01:41:26,000 --> 01:41:28,000
这是一个在实体世界里面

2917
01:41:28,000 --> 01:41:29,000
非常思想见惯的事情

2918
01:41:29,000 --> 01:41:32,000
然后在软件工程的早期

2919
01:41:32,000 --> 01:41:33,000
人们也的确是这样做的

2920
01:41:33,000 --> 01:41:35,000
就是一开始就找一些

2921
01:41:35,000 --> 01:41:37,000
最终会使用人家的人说

2922
01:41:37,000 --> 01:41:39,000
你最终会拿到一间

2923
01:41:39,000 --> 01:41:40,000
可能是这个样子

2924
01:41:40,000 --> 01:41:41,000
然后你按这个按钮

2925
01:41:41,000 --> 01:41:42,000
就会出现那个

2926
01:41:43,000 --> 01:41:45,000
点这里就会做那个

2927
01:41:45,000 --> 01:41:47,000
然后按下这个按钮

2928
01:41:47,000 --> 01:41:49,000
和核弹就会飞起来之类的

2929
01:41:50,000 --> 01:41:52,000
这所谓的需求文档吗

2930
01:41:52,000 --> 01:41:53,000
对

2931
01:41:53,000 --> 01:41:54,000
首先你有一套需求文档

2932
01:41:54,000 --> 01:41:56,000
就像房子的蓝图一样

2933
01:41:56,000 --> 01:41:59,000
接下来软件工程的团队开始施工

2934
01:41:59,000 --> 01:42:00,000
然后在这个施工过程中

2935
01:42:00,000 --> 01:42:01,000
你是没有办法去

2936
01:42:03,000 --> 01:42:04,000
勒令他们停下来

2937
01:42:04,000 --> 01:42:05,000
说不行

2938
01:42:05,000 --> 01:42:05,000
我不要这套房子了

2939
01:42:05,000 --> 01:42:06,000
我本来

2940
01:42:07,000 --> 01:42:08,000
你给我扒了

2941
01:42:08,000 --> 01:42:09,000
把它重新建一遍

2942
01:42:09,000 --> 01:42:10,000
或者说不对

2943
01:42:10,000 --> 01:42:11,000
这个地方我要

2944
01:42:11,000 --> 01:42:12,000
本来我是三层楼

2945
01:42:12,000 --> 01:42:14,000
然后我现在要改成五层

2946
01:42:14,000 --> 01:42:15,000
这些都是不行的

2947
01:42:15,000 --> 01:42:17,000
在那个美好的时代

2948
01:42:17,000 --> 01:42:20,000
如果你是一个足够土豪的假方

2949
01:42:20,000 --> 01:42:21,000
好像是可以的吧

2950
01:42:25,000 --> 01:42:27,000
如果是一个足够土豪的假方

2951
01:42:28,000 --> 01:42:31,000
你所面临的损失

2952
01:42:31,000 --> 01:42:34,000
仍旧远远不如你从一开始

2953
01:42:34,000 --> 01:42:35,000
就明确地知道自己要什么

2954
01:42:35,000 --> 01:42:36,000
要拿

2955
01:42:36,000 --> 01:42:36,000
但是这个

2956
01:42:36,000 --> 01:42:37,000
没错

2957
01:42:37,000 --> 01:42:37,000
没错

2958
01:42:37,000 --> 01:42:38,000
如果你要

2959
01:42:38,000 --> 01:42:40,000
所以我觉得瀑布这个使用的很好

2960
01:42:40,000 --> 01:42:41,000
就是你知道

2961
01:42:41,000 --> 01:42:42,000
瀑布的水就是往下走的

2962
01:42:42,000 --> 01:42:42,000
对吧

2963
01:42:42,000 --> 01:42:44,000
一切而下

2964
01:42:44,000 --> 01:42:47,000
你是在这个瀑布模型里面的任何一步

2965
01:42:47,000 --> 01:42:48,000
你都是回不了头

2966
01:42:48,000 --> 01:42:48,000
现在该放入

2967
01:42:50,000 --> 01:42:51,000
而反过来

2968
01:42:51,000 --> 01:42:52,000
敏捷模型则是

2969
01:42:53,000 --> 01:42:57,000
在软件泼沫发展的 90 年代

2970
01:42:58,000 --> 01:43:00,000
人们终于有了

2971
01:43:00,000 --> 01:43:01,000
怎么说的

2972
01:43:01,000 --> 01:43:02,000
终于有更多的人

2973
01:43:02,000 --> 01:43:07,000
可以有资本去买

2974
01:43:07,000 --> 01:43:09,000
或者说订购一套属于他们自己的软件

2975
01:43:10,000 --> 01:43:11,000
比如说一些小商贩

2976
01:43:11,000 --> 01:43:13,000
一个小公司

2977
01:43:13,000 --> 01:43:15,000
可以有自己的网站

2978
01:43:15,000 --> 01:43:17,000
或者是可以有自己专门的应用

2979
01:43:18,000 --> 01:43:20,000
此事发现了一个问题

2980
01:43:20,000 --> 01:43:22,000
就是早期的副模型在行不通了

2981
01:43:22,000 --> 01:43:24,000
因为很多人是

2982
01:43:25,000 --> 01:43:26,000
包括你和我

2983
01:43:26,000 --> 01:43:27,000
都是那些

2984
01:43:27,000 --> 01:43:28,000
都是对自己的

2985
01:43:28,000 --> 01:43:29,000
不知道自己要什么

2986
01:43:29,000 --> 01:43:32,000
对于自己的想象力和

2987
01:43:32,000 --> 01:43:33,000
怎么说的

2988
01:43:33,000 --> 01:43:34,000
高估自己的想象力

2989
01:43:34,000 --> 01:43:37,000
同时用低估自己的野心证明确认

2990
01:43:37,000 --> 01:43:40,000
对 还有表达能力

2991
01:43:40,000 --> 01:43:40,000
对

2992
01:43:42,000 --> 01:43:48,000
有了一点资本可以来做一个项目的验收方的时候

2993
01:43:48,000 --> 01:43:49,000
他们你会发现

2994
01:43:49,000 --> 01:43:52,000
这些人是完全没有办法

2995
01:43:52,000 --> 01:43:56,000
在副模型之下工作的

2996
01:43:56,000 --> 01:43:57,000
无法验收

2997
01:43:57,000 --> 01:43:58,000
对

2998
01:43:58,000 --> 01:43:59,000
你一开始给他

2999
01:44:00,000 --> 01:44:01,000
跟他答应了好好的一些东西

3000
01:44:01,000 --> 01:44:03,000
他做了一半

3001
01:44:03,000 --> 01:44:05,000
你给他看一个半成品的时候

3002
01:44:05,000 --> 01:44:06,000
他说

3003
01:44:06,000 --> 01:44:06,000
不考

3004
01:44:06,000 --> 01:44:07,000
我希望的不是这样的

3005
01:44:10,000 --> 01:44:11,000
在这种情况之下

3006
01:44:11,000 --> 01:44:13,000
人们就是推出的

3007
01:44:13,000 --> 01:44:14,000
我叫做

3008
01:44:15,000 --> 01:44:16,000
extreme program

3009
01:44:16,000 --> 01:44:16,000
或者说

3010
01:44:16,000 --> 01:44:17,000
对早期

3011
01:44:17,000 --> 01:44:18,000
对

3012
01:44:18,000 --> 01:44:19,000
extreme program

3013
01:44:19,000 --> 01:44:20,000
早越 Azure

3014
01:44:20,000 --> 01:44:21,000
概念

3015
01:44:21,000 --> 01:44:23,000
推出一种所谓

3016
01:44:23,000 --> 01:44:24,000
xp

3017
01:44:24,000 --> 01:44:26,000
也是极限编程的证明中理念

3018
01:44:26,000 --> 01:44:27,000
就是在这种模型之下

3019
01:44:29,000 --> 01:44:32,000
你一开始只问最终客户很小的一个问题

3020
01:44:32,000 --> 01:44:33,000
比如说

3021
01:44:34,000 --> 01:44:35,000
大家比方

3022
01:44:35,000 --> 01:44:36,000
你希望你能网站

3023
01:44:36,000 --> 01:44:37,000
你希望你能网站

3024
01:44:37,000 --> 01:44:38,000
鸡色是什么颜色的

3025
01:44:38,000 --> 01:44:39,000
他说

3026
01:44:39,000 --> 01:44:40,000
蓝色

3027
01:44:40,000 --> 01:44:40,000
然后你好

3028
01:44:41,000 --> 01:44:42,000
写一个网页

3029
01:44:42,000 --> 01:44:44,000
然后把背景换成某种蓝色

3030
01:44:44,000 --> 01:44:45,000
说这样吗

3031
01:44:46,000 --> 01:44:47,000
客户一看说

3032
01:44:47,000 --> 01:44:48,000
我考

3033
01:44:48,000 --> 01:44:49,000
蠢蛋色怎么那么丑

3034
01:44:49,000 --> 01:44:49,000
不行

3035
01:44:49,000 --> 01:44:51,000
我要粉红色

3036
01:44:51,000 --> 01:44:51,000
好

3037
01:44:51,000 --> 01:44:53,000
你马上就可以换成粉红色

3038
01:44:53,000 --> 01:44:54,000
然后

3039
01:44:54,000 --> 01:44:55,000
就算什么

3040
01:44:55,000 --> 01:44:57,000
你算是交后事编程了吧

3041
01:44:57,000 --> 01:44:57,000
对

3042
01:44:57,000 --> 01:44:59,000
这就是一个非常小的迭代

3043
01:45:00,000 --> 01:45:01,000
iterration

3044
01:45:01,000 --> 01:45:02,000
在这个过程之中

3045
01:45:02,000 --> 01:45:03,000
你首先确认了

3046
01:45:03,000 --> 01:45:05,000
用户一个非常基本的需求

3047
01:45:05,000 --> 01:45:07,000
然后你把这个需求实现出来

3048
01:45:07,000 --> 01:45:09,000
实现出来这一部分最小的功能

3049
01:45:09,000 --> 01:45:10,000
找客户去反馈

3050
01:45:10,000 --> 01:45:12,000
客户对你的反馈

3051
01:45:12,000 --> 01:45:13,000
如果是正的的话

3052
01:45:13,000 --> 01:45:14,000
就可以去做下去

3053
01:45:14,000 --> 01:45:15,000
如果是负的话

3054
01:45:15,000 --> 01:45:15,000
你就要改

3055
01:45:16,000 --> 01:45:19,000
然后把整个软件工程的

3056
01:45:21,000 --> 01:45:24,000
过程切分为很多这样的

3057
01:45:24,000 --> 01:45:25,000
很小的迭代过程

3058
01:45:26,000 --> 01:45:27,000
如果你化成一个图的话

3059
01:45:27,000 --> 01:45:30,000
大概就是一个越做越大的软件

3060
01:45:30,000 --> 01:45:32,000
不停的经历这样的 iterration

3061
01:45:32,000 --> 01:45:34,000
最终话说的就是一个

3062
01:45:34,000 --> 01:45:35,000
大概螺旋性的这么一个

3063
01:45:37,000 --> 01:45:38,000
应该怎么说

3064
01:45:38,000 --> 01:45:39,000
进度度

3065
01:45:40,000 --> 01:45:43,000
这就是我刚才提到的

3066
01:45:43,000 --> 01:45:45,000
瀑木和敏捷模型之间的区别

3067
01:45:45,000 --> 01:45:47,000
所以敏捷编程或者说

3068
01:45:48,000 --> 01:45:51,000
极限编程所解决的问题就是

3069
01:45:51,000 --> 01:45:53,000
如何应对需求的改变

3070
01:45:54,000 --> 01:45:54,000
对吧

3071
01:45:55,000 --> 01:45:56,000
那

3072
01:45:56,000 --> 01:46:00,000
怎么才能知道一个需求的改变

3073
01:46:00,000 --> 01:46:02,000
有没有准确的在

3074
01:46:04,000 --> 01:46:06,000
不管是被更改的软件也好

3075
01:46:06,000 --> 01:46:08,000
还是刚刚写出来的软件的

3076
01:46:08,000 --> 01:46:10,000
新的那一部分里面

3077
01:46:10,000 --> 01:46:12,000
正确的实现出来的呢

3078
01:46:13,000 --> 01:46:16,000
那这个时候软件测试的意义

3079
01:46:16,000 --> 01:46:17,000
也就凸现出来了

3080
01:46:21,000 --> 01:46:22,000
也就是说

3081
01:46:22,000 --> 01:46:22,000
比如说

3082
01:46:24,000 --> 01:46:27,000
客户告诉你说这个地方

3083
01:46:27,000 --> 01:46:31,000
我希望他在最终的成品里面

3084
01:46:31,000 --> 01:46:34,000
一个按钮是在另外一个按钮的左边的

3085
01:46:34,000 --> 01:46:35,000
那你就可以写一个测试

3086
01:46:35,000 --> 01:46:39,000
去判断这个两个按钮的 ID

3087
01:46:39,000 --> 01:46:41,000
以及他们之间的相关位置

3088
01:46:41,000 --> 01:46:42,000
是不是正

3089
01:46:42,000 --> 01:46:46,000
比如说右边这个按钮的 ID 的 x

3090
01:46:47,000 --> 01:46:49,000
对 x 减去左边这个按钮的 x

3091
01:46:49,000 --> 01:46:50,000
如果它是正的话

3092
01:46:50,000 --> 01:46:52,000
你就可以确定说这个按钮不是在

3093
01:46:52,000 --> 01:46:53,000
另外一个按钮是右边

3094
01:46:55,000 --> 01:46:56,000
我觉得可以说

3095
01:46:56,000 --> 01:47:00,000
正是敏捷的这个过程

3096
01:47:00,000 --> 01:47:02,000
或者说整个软件工程

3097
01:47:02,000 --> 01:47:05,000
向敏捷的这个方向所转移的这样一个

3098
01:47:07,000 --> 01:47:08,000
犯事遷移

3099
01:47:08,000 --> 01:47:12,000
导致现在这样一个人们相对来说

3100
01:47:12,000 --> 01:47:14,000
比较强调测试的什么一个状态

3101
01:47:15,000 --> 01:47:16,000
所以其实如果归那来讲

3102
01:47:16,000 --> 01:47:17,000
就是说

3103
01:47:19,000 --> 01:47:20,000
需求不明确

3104
01:47:20,000 --> 01:47:22,000
然后这个就是

3105
01:47:22,000 --> 01:47:24,000
形式证明不可能的情况下

3106
01:47:24,000 --> 01:47:27,000
我们只能用测试来尽可能的保障

3107
01:47:27,000 --> 01:47:30,000
我们在快速迭代中

3108
01:47:30,000 --> 01:47:34,000
能够有一个相对稳定的产品质量

3109
01:47:34,000 --> 01:47:34,000
对

3110
01:47:34,000 --> 01:47:38,000
就是因为测试会给你一个比较清晰的

3111
01:47:38,000 --> 01:47:40,000
一个比较客观的

3112
01:47:40,000 --> 01:47:45,000
关于你的软件产品的质量的反应

3113
01:47:46,000 --> 01:47:49,000
所以才能让你有信心去执行

3114
01:47:49,000 --> 01:47:52,000
一个比较敏捷的软件迭代的过程

3115
01:47:52,000 --> 01:47:54,000
因为很有可能说

3116
01:47:55,000 --> 01:47:57,000
如果你不写测试的话

3117
01:47:57,000 --> 01:47:58,000
你可能做了一部分

3118
01:48:00,000 --> 01:48:01,000
去弄坏另一部分

3119
01:48:01,000 --> 01:48:04,000
而直到你在最后给客户演示的时候

3120
01:48:04,000 --> 01:48:05,000
这个 bug 才暴露出来

3121
01:48:05,000 --> 01:48:07,000
我们知道根据墨菲定律这种情况

3122
01:48:07,000 --> 01:48:09,000
是永远会出现的

3123
01:48:09,000 --> 01:48:12,000
而书写足够多的测试

3124
01:48:12,000 --> 01:48:16,000
以及执行所谓回归测试

3125
01:48:16,000 --> 01:48:18,000
可以帮助你减少这种情况的发生

3126
01:48:19,000 --> 01:48:20,000
然后

3127
01:48:21,000 --> 01:48:22,000
另外一方面

3128
01:48:22,000 --> 01:48:25,000
如果你一定要写测试的话

3129
01:48:25,000 --> 01:48:29,000
首先你得写出能够被测试的代码

3130
01:48:29,000 --> 01:48:31,000
然后这样一来

3131
01:48:31,000 --> 01:48:32,000
你如果在写代码的时候

3132
01:48:32,000 --> 01:48:34,000
会想到说这个地方要被测试了

3133
01:48:34,000 --> 01:48:36,000
那你可能会强迫自己写

3134
01:48:36,000 --> 01:48:38,000
一个写的比较干净的

3135
01:48:38,000 --> 01:48:40,000
比较模块化的代码

3136
01:48:40,000 --> 01:48:44,000
然后这也会从另外一方面去帮助你

3137
01:48:44,000 --> 01:48:46,000
提升软件的可控程度

3138
01:48:46,000 --> 01:48:48,000
整个人知道

3139
01:48:48,000 --> 01:48:50,000
然后我们刚才提到的

3140
01:48:50,000 --> 01:48:54,000
第一个是所谓软件测试驱动开发的

3141
01:48:54,000 --> 01:48:56,000
各种一个概念

3142
01:48:56,000 --> 01:48:58,000
就 TDD

3143
01:48:58,000 --> 01:49:00,000
对 TDD

3144
01:49:00,000 --> 01:49:01,000
TDD 是什么呢

3145
01:49:01,000 --> 01:49:04,000
就是人们一发现这个驱动

3146
01:49:04,000 --> 01:49:06,000
试试是如此好的

3147
01:49:06,000 --> 01:49:07,000
是一个东西

3148
01:49:07,000 --> 01:49:11,000
以至于有些人朝这个

3149
01:49:11,000 --> 01:49:13,000
比较原教旨主义的方向发展

3150
01:49:13,000 --> 01:49:15,000
就说好

3151
01:49:15,000 --> 01:49:17,000
那我们在写软件之前

3152
01:49:17,000 --> 01:49:19,000
先写测试吧

3153
01:49:19,000 --> 01:49:21,000
这就是 TDD

3154
01:49:21,000 --> 01:49:23,000
让测试成为需求的一部分

3155
01:49:23,000 --> 01:49:27,000
这还要更进一步了

3156
01:49:27,000 --> 01:49:29,000
我们先说 TDD 吧

3157
01:49:29,000 --> 01:49:32,000
TDD 最基本的一个实践就是

3158
01:49:32,000 --> 01:49:33,000
好

3159
01:49:33,000 --> 01:49:34,000
我上回还要写一个 Hello World

3160
01:49:34,000 --> 01:49:38,000
在我写 Hello World 之前

3161
01:49:38,000 --> 01:49:40,000
我要先写一个测试

3162
01:49:40,000 --> 01:49:43,000
来确定我将要写出来的程序

3163
01:49:44,000 --> 01:49:45,000
能够输出 Hello World

3164
01:49:45,000 --> 01:49:47,000
然后再写 Hello World

3165
01:49:47,000 --> 01:49:50,000
这是一个非常

3166
01:49:50,000 --> 01:49:50,000
怎么说的

3167
01:49:50,000 --> 01:49:51,000
一开始听起来

3168
01:49:51,000 --> 01:49:52,000
会觉得有些疯狂的感觉

3169
01:49:52,000 --> 01:49:55,000
准确的说

3170
01:49:55,000 --> 01:49:57,000
TDD 的执行的三元则是

3171
01:49:57,000 --> 01:49:58,000
一

3172
01:49:58,000 --> 01:50:01,000
再写出一个测试失败的单元测试之前

3173
01:50:01,000 --> 01:50:03,000
不写功能的

3174
01:50:03,000 --> 01:50:04,000
这是一个什么概念

3175
01:50:04,000 --> 01:50:06,000
就是我要写一行程序

3176
01:50:06,000 --> 01:50:08,000
但是在我写这行程序之前

3177
01:50:08,000 --> 01:50:10,000
我先要写一个

3178
01:50:10,000 --> 01:50:10,000
没有这行程序

3179
01:50:10,000 --> 01:50:13,000
就肯定会失败的单元测试

3180
01:50:14,000 --> 01:50:17,000
那你怎么测这个 Hello World

3181
01:50:17,000 --> 01:50:19,000
Hello World 实在太追踪了

3182
01:50:19,000 --> 01:50:21,000
比如说我之前很喜欢那个

3183
01:50:21,000 --> 01:50:26,000
卡扎就是把阿拉伯数字转为罗马数字

3184
01:50:26,000 --> 01:50:29,000
我要写这个

3185
01:50:29,000 --> 01:50:32,000
就是我面对你们心的陌生语言

3186
01:50:32,000 --> 01:50:34,000
比如说哈斯口或者是 swift

3187
01:50:34,000 --> 01:50:36,000
我首先

3188
01:50:36,000 --> 01:50:40,000
可以用其他的语言

3189
01:50:40,000 --> 01:50:42,000
来判断

3190
01:50:42,000 --> 01:50:43,000
这个语言

3191
01:50:43,000 --> 01:50:46,000
我将要学的这个语言所输出的是不是正确

3192
01:50:46,000 --> 01:50:47,000
比如说

3193
01:50:47,000 --> 01:50:51,000
我知道阿拉伯数字的 E 会转为罗马数字的 I

3194
01:50:51,000 --> 01:50:54,000
那我就先写这样一个测试

3195
01:50:54,000 --> 01:50:55,000
这个程序运行之后

3196
01:50:55,000 --> 01:50:58,000
它应该在屏幕上输出

3197
01:50:58,000 --> 01:50:59,000
或者这么说吧

3198
01:50:59,000 --> 01:51:01,000
我将要写的程序

3199
01:51:01,000 --> 01:51:03,000
首先应该接纳一个文本文件

3200
01:51:03,000 --> 01:51:07,000
里面是 1 到 1000 的罗马数字

3201
01:51:07,000 --> 01:51:09,000
sorry

3202
01:51:09,000 --> 01:51:10,000
首先

3203
01:51:10,000 --> 01:51:12,000
它应该接受一个文本文件

3204
01:51:12,000 --> 01:51:14,000
然后输出另外一个文本文件

3205
01:51:14,000 --> 01:51:16,000
然后我需要把它输出这个文本文件

3206
01:51:16,000 --> 01:51:21,000
和我的目标文本文件作为对比

3207
01:51:21,000 --> 01:51:22,000
比如说一开始

3208
01:51:22,000 --> 01:51:23,000
这个

3209
01:51:23,000 --> 01:51:26,000
一开始的文本文件只有一个 1

3210
01:51:26,000 --> 01:51:27,000
然后在目标文件

3211
01:51:27,000 --> 01:51:29,000
文本文件应该有一个 I

3212
01:51:29,000 --> 01:51:31,000
当我准备好了这一切之后

3213
01:51:31,000 --> 01:51:32,000
我才开始

3214
01:51:32,000 --> 01:51:35,000
主我手用这种新的语言

3215
01:51:35,000 --> 01:51:36,000
去写

3216
01:51:36,000 --> 01:51:38,000
我将要写的这个

3217
01:51:38,000 --> 01:51:40,000
我希望写的这个阿拉伯数字

3218
01:51:40,000 --> 01:51:41,000
转成罗马数字的程序

3219
01:51:41,000 --> 01:51:43,000
好

3220
01:51:43,000 --> 01:51:44,000
然后

3221
01:51:44,000 --> 01:51:46,000
这个 TT 的第二准则是

3222
01:51:46,000 --> 01:51:52,000
只编写恰好能体现一个失败情况的测试来吗

3223
01:51:52,000 --> 01:51:53,000
一个比较简单的例子就是说

3224
01:51:53,000 --> 01:51:55,000
你可以判断说

3225
01:51:55,000 --> 01:51:58,000
如果输入是阿拉伯数字 1

3226
01:51:58,000 --> 01:52:01,000
那么输出必然是罗马数字 I

3227
01:52:01,000 --> 01:52:03,000
然后如果你先给它一个

3228
01:52:03,000 --> 01:52:04,000
因为没有功能代码

3229
01:52:04,000 --> 01:52:06,000
就是一个空海数对吧

3230
01:52:06,000 --> 01:52:08,000
那么我去说什么

3231
01:52:08,000 --> 01:52:09,000
出来都是空

3232
01:52:09,000 --> 01:52:11,000
你知道这个测试会挂掉

3233
01:52:11,000 --> 01:52:11,000
对

3234
01:52:11,000 --> 01:52:14,000
然后第三条准则是更变态

3235
01:52:14,000 --> 01:52:18,000
说只编写恰好能通过测试的功能来吗

3236
01:52:18,000 --> 01:52:19,000
这是什么概念

3237
01:52:19,000 --> 01:52:22,000
就是我们完成了刚才两步

3238
01:52:22,000 --> 01:52:26,000
一在写一个测试失败的单元测试之前

3239
01:52:26,000 --> 01:52:26,000
不写功能

3240
01:52:26,000 --> 01:52:27,000
好

3241
01:52:27,000 --> 01:52:32,000
我写了会让测试失败的单元测试

3242
01:52:32,000 --> 01:52:32,000
二

3243
01:52:32,000 --> 01:52:35,000
我写了刚好只能通过

3244
01:52:35,000 --> 01:52:38,000
刚好只能体现一个失败情况的测试

3245
01:52:38,000 --> 01:52:38,000
好

3246
01:52:38,000 --> 01:52:41,000
我在左边的文件里面给了 1

3247
01:52:41,000 --> 01:52:42,000
阿拉伯数字的 1

3248
01:52:42,000 --> 01:52:45,000
右边的文件里面给拉丁怎么 I

3249
01:52:45,000 --> 01:52:46,000
好

3250
01:52:46,000 --> 01:52:46,000
第三条

3251
01:52:46,000 --> 01:52:51,000
我只编写恰好能通过该测试的功能来吗

3252
01:52:51,000 --> 01:52:54,000
我在新的程序里面写说

3253
01:52:54,000 --> 01:52:56,000
if input is E

3254
01:52:56,000 --> 01:53:00,000
then output I 就可以了

3255
01:53:00,000 --> 01:53:01,000
对吧

3256
01:53:01,000 --> 01:53:02,000
对

3257
01:53:02,000 --> 01:53:09,000
那这样一种比较变态的开发方法

3258
01:53:09,000 --> 01:53:10,000
你自己想一下

3259
01:53:10,000 --> 01:53:18,000
其实是很难让你让一个神智正常的人去接受的

3260
01:53:18,000 --> 01:53:18,000
对吧

3261
01:53:18,000 --> 01:53:21,000
比如说我刚才说的这句话说

3262
01:53:21,000 --> 01:53:25,000
你是说 TTT 的健行者就神智不正常

3263
01:53:25,000 --> 01:53:26,000
我也是

3264
01:53:26,000 --> 01:53:30,000
好

3265
01:53:30,000 --> 01:53:31,000
虽然我话说完

3266
01:53:31,000 --> 01:53:34,000
就是如果你是一个神智正常的人的话

3267
01:53:34,000 --> 01:53:36,000
你肯定知道如果输出是

3268
01:53:36,000 --> 01:53:38,000
如果输出是 1

3269
01:53:38,000 --> 01:53:42,000
直接输出 I 是一个非常蠢的主意

3270
01:53:42,000 --> 01:53:48,000
因为从一开始你就把自己限定在一个

3271
01:53:48,000 --> 01:53:50,000
非常着眼欲

3272
01:53:50,000 --> 01:53:53,000
非常短视的这么一个输出寸光的状态

3273
01:53:53,000 --> 01:53:55,000
就是你只看得到输出输出是 1

3274
01:53:55,000 --> 01:53:57,000
然后也只输出 1

3275
01:53:57,000 --> 01:53:58,000
打个叉

3276
01:53:58,000 --> 01:54:02,000
你觉得这个方法特别适合外包团队

3277
01:54:02,000 --> 01:54:04,000
因为你可以给别人干活

3278
01:54:04,000 --> 01:54:05,000
你现在满足他的需求

3279
01:54:05,000 --> 01:54:06,000
他会擦回去测

3280
01:54:06,000 --> 01:54:07,000
然后你干多了

3281
01:54:07,000 --> 01:54:08,000
没有用

3282
01:54:08,000 --> 01:54:10,000
你只要干他刚刚好就可以了

3283
01:54:12,000 --> 01:54:17,000
事实上也的确是外包团队在最多的使用题

3284
01:54:18,000 --> 01:54:19,000
我必须这么说

3285
01:54:19,000 --> 01:54:20,000
好吧

3286
01:54:24,000 --> 01:54:27,000
总之刚才你说的这句话其实是有道理的

3287
01:54:27,000 --> 01:54:29,000
就是使用 TDD 的人甚至是不太清楚

3288
01:54:31,000 --> 01:54:32,000
我心里其实很认同这句话

3289
01:54:32,000 --> 01:54:35,000
因为 TDD 就好像安利一样

3290
01:54:35,000 --> 01:54:38,000
就是你只有深陷其中了

3291
01:54:38,000 --> 01:54:41,000
你才会真正的感受到他的好

3292
01:54:42,000 --> 01:54:45,000
而我刚才这句话绝对不是一个一种

3293
01:54:45,000 --> 01:54:47,000
complement 的方式来说

3294
01:54:47,000 --> 01:54:49,000
就是因为我从来没有深陷其中过

3295
01:54:49,000 --> 01:54:51,000
所以我从来不觉得他的好

3296
01:54:51,000 --> 01:54:55,000
但是三号三位我也可以理解

3297
01:54:55,000 --> 01:54:57,000
其中或者所持的这样的观点

3298
01:54:58,000 --> 01:55:01,000
别看你使用的这三个原则非常的愚蠢

3299
01:55:01,000 --> 01:55:04,000
但是到你开发一个大型软件的后期

3300
01:55:04,000 --> 01:55:05,000
你会发现

3301
01:55:06,000 --> 01:55:11,000
迁移放而动全身的状况是非常常有的

3302
01:55:11,000 --> 01:55:15,000
而如果你能坚持着用这种非常愚蠢的方法

3303
01:55:15,000 --> 01:55:18,000
把每一个最为微小的修改

3304
01:55:18,000 --> 01:55:21,000
都以测试先行的方式写出来的话

3305
01:55:21,000 --> 01:55:25,000
你会发现到后期你犯一点点小错

3306
01:55:25,000 --> 01:55:27,000
都可以马上会发现出

3307
01:55:27,000 --> 01:55:31,000
而所有这些被发现出来的小错

3308
01:55:31,000 --> 01:55:32,000
保证你就是凝制了

3309
01:55:35,000 --> 01:55:37,000
然后刚才你说的这个

3310
01:55:37,000 --> 01:55:40,000
一上来就描述整个系统的 behavior

3311
01:55:40,000 --> 01:55:42,000
那其实是 TTT 更进一步

3312
01:55:42,000 --> 01:55:44,000
叫做 BDD

3313
01:55:45,000 --> 01:55:46,000
behavior driven development

3314
01:55:47,000 --> 01:55:49,000
它的核心理念其实就是像你说的

3315
01:55:49,000 --> 01:55:51,000
那至于可以更进一步

3316
01:55:51,000 --> 01:55:53,000
就是不是用代码

3317
01:55:53,000 --> 01:56:00,000
而是用一种比较项目经理也能读懂的

3318
01:56:00,000 --> 01:56:01,000
普通语言

3319
01:56:01,000 --> 01:56:02,000
大白话吗

3320
01:56:02,000 --> 01:56:03,000
对用大白话来

3321
01:56:03,000 --> 01:56:07,000
近似于大白话的普通的简单的句子

3322
01:56:07,000 --> 01:56:10,000
来描述出整个系统的状态

3323
01:56:10,000 --> 01:56:11,000
或者不是整个系统

3324
01:56:11,000 --> 01:56:13,000
是整个组建的状态

3325
01:56:13,000 --> 01:56:15,000
所以这个一个最古老的例子

3326
01:56:15,000 --> 01:56:17,000
就是那个创世纪对吧

3327
01:56:17,000 --> 01:56:18,000
创世纪

3328
01:56:18,000 --> 01:56:19,000
对呀

3329
01:56:19,000 --> 01:56:20,000
因为上帝说要有光嘛

3330
01:56:20,000 --> 01:56:22,000
这是一个矮子

3331
01:56:22,000 --> 01:56:22,000
对

3332
01:56:23,000 --> 01:56:24,000
最早的 BDD

3333
01:56:25,000 --> 01:56:27,000
说得没错

3334
01:56:27,000 --> 01:56:29,000
只不过在 BDD 里面

3335
01:56:29,000 --> 01:56:33,000
这个创世人和

3336
01:56:33,000 --> 01:56:36,000
把开发者和验收的人是同一个人

3337
01:56:36,000 --> 01:56:38,000
这是比较操弹的一点

3338
01:56:38,000 --> 01:56:40,000
就是上帝只要说

3339
01:56:40,000 --> 01:56:42,000
上帝看着这一切是好的

3340
01:56:42,000 --> 01:56:43,000
就可以了

3341
01:56:43,000 --> 01:56:46,000
而不是验收通过和格

3342
01:56:46,000 --> 01:56:48,000
上帝的老婆看到这一切

3343
01:56:48,000 --> 01:56:50,000
把上帝做了一顿之类

3344
01:56:50,000 --> 01:56:53,000
对

3345
01:56:53,000 --> 01:56:56,000
你在写 BDD 的

3346
01:56:56,000 --> 01:56:56,000
你说什么

3347
01:56:56,000 --> 01:56:58,000
太不严肃了

3348
01:56:58,000 --> 01:56:58,000
对

3349
01:57:00,000 --> 01:57:02,000
我们两个都是不可

3350
01:57:02,000 --> 01:57:03,000
我不知道你

3351
01:57:03,000 --> 01:57:04,000
我是不可知论者

3352
01:57:04,000 --> 01:57:05,000
所以

3353
01:57:05,000 --> 01:57:07,000
创新就是不

3354
01:57:11,000 --> 01:57:12,000
Go on

3355
01:57:13,000 --> 01:57:14,000
对呀

3356
01:57:14,000 --> 01:57:15,000
希望没有 invult

3357
01:57:15,000 --> 01:57:16,000
所以

3358
01:57:16,000 --> 01:57:17,000
足够

3359
01:57:17,000 --> 01:57:18,000
我觉得已经发生了

3360
01:57:18,000 --> 01:57:18,000
但是

3361
01:57:18,000 --> 01:57:19,000
不关系

3362
01:57:22,000 --> 01:57:23,000
对

3363
01:57:23,000 --> 01:57:26,000
你在写 BDD 的

3364
01:57:26,000 --> 01:57:27,000
测试行为描述的时候

3365
01:57:27,000 --> 01:57:29,000
就会很有那种上帝的感觉

3366
01:57:29,000 --> 01:57:30,000
play go

3367
01:57:30,000 --> 01:57:31,000
你可以说

3368
01:57:33,000 --> 01:57:34,000
it should

3369
01:57:36,000 --> 01:57:39,000
throw division by zero error

3370
01:57:39,000 --> 01:57:43,000
invult is given by zero 之类的句子

3371
01:57:43,000 --> 01:57:45,000
然后

3372
01:57:46,000 --> 01:57:49,000
比较牛逼的 BDD 的工具

3373
01:57:49,000 --> 01:57:52,000
比如说 Qconn

3374
01:57:52,000 --> 01:57:52,000
对

3375
01:57:52,000 --> 01:57:54,000
应该是 Qconn

3376
01:57:54,000 --> 01:57:55,000
可以让

3377
01:57:55,000 --> 01:57:56,000
可以

3378
01:57:56,000 --> 01:57:58,000
有一个工具可以自然而然的把你的这些

3379
01:57:58,000 --> 01:58:03,000
对于整个组件的行为的描述

3380
01:58:03,000 --> 01:58:05,000
转化为相应的测试来

3381
01:58:06,000 --> 01:58:09,000
然后自动的在你写出来之后

3382
01:58:09,000 --> 01:58:10,000
我帮你执行

3383
01:58:11,000 --> 01:58:11,000
这就是更

3384
01:58:11,000 --> 01:58:14,000
要用 NLP 的方式来去解析

3385
01:58:15,000 --> 01:58:17,000
其实是一个非常简单的

3386
01:58:17,000 --> 01:58:18,000
regal expression

3387
01:58:18,000 --> 01:58:19,000
如果没记错

3388
01:58:20,000 --> 01:58:20,000
OK

3389
01:58:20,000 --> 01:58:24,000
就是用一些比较规则的结构去描述

3390
01:58:24,000 --> 01:58:24,000
对

3391
01:58:24,000 --> 01:58:28,000
首先你在写 behavior description 的时候

3392
01:58:28,000 --> 01:58:30,000
就不能用完全的自然语

3393
01:58:30,000 --> 01:58:32,000
你必须用一个

3394
01:58:32,000 --> 01:58:33,000
用一些特定的句子

3395
01:58:33,000 --> 01:58:33,000
就像你说了

3396
01:58:33,000 --> 01:58:37,000
你在指使思维去做什么事情的时候

3397
01:58:37,000 --> 01:58:40,000
你必须用一个特定的范式的句子

3398
01:58:40,000 --> 01:58:43,000
然后 td 的描述员跟他的比较相似

3399
01:58:43,000 --> 01:58:45,000
就是你必须用一些特定的句式

3400
01:58:45,000 --> 01:58:47,000
adshute 之类

3401
01:58:47,000 --> 01:58:47,000
对

3402
01:58:47,000 --> 01:58:48,000
其实你知道

3403
01:58:48,000 --> 01:58:51,000
这也是为什么比较讨厌这种

3404
01:58:51,000 --> 01:58:55,000
bdd 的 testsuit 的一个原因

3405
01:58:55,000 --> 01:58:58,000
就是感觉好像 applescript

3406
01:59:00,000 --> 01:59:00,000
对

3407
01:59:00,000 --> 01:59:02,000
看起来好像都写容讯

3408
01:59:02,000 --> 01:59:04,000
但是又没有真的

3409
01:59:04,000 --> 01:59:05,000
又不是

3410
01:59:05,000 --> 01:59:05,000
对

3411
01:59:05,000 --> 01:59:07,000
然后你就很难去模糊到

3412
01:59:07,000 --> 01:59:09,000
我要到底写一个什么样的语句

3413
01:59:09,000 --> 01:59:10,000
才能够满足

3414
01:59:10,000 --> 01:59:13,000
它生成一个可以被它执行的 tests case

3415
01:59:14,000 --> 01:59:14,000
你就很愚闻

3416
01:59:14,000 --> 01:59:15,000
那不要搞这个

3417
01:59:15,000 --> 01:59:17,000
你直接给一个写一个正常的语句

3418
01:59:17,000 --> 01:59:17,000
好不好

3419
01:59:17,000 --> 01:59:18,000
对

3420
01:59:18,000 --> 01:59:20,000
这可能就是怎么说

3421
01:59:20,000 --> 01:59:24,000
编程语言里面的恐怖鼓励

3422
01:59:24,000 --> 01:59:27,000
就是你要么写非常非常贴近机器的

3423
01:59:27,000 --> 01:59:27,000
对

3424
01:59:27,000 --> 01:59:27,000
编程语言

3425
01:59:27,000 --> 01:59:30,000
你要么就执行自然语

3426
01:59:30,000 --> 01:59:30,000
对

3427
01:59:30,000 --> 01:59:31,000
要么你就逻辑一点

3428
01:59:31,000 --> 01:59:32,000
要么你就自然

3429
01:59:32,000 --> 01:59:33,000
就真的是在语言里面分析

3430
01:59:33,000 --> 01:59:37,000
但是你在这件事之间就不忠不息的

3431
01:59:37,000 --> 01:59:38,000
非常特殊

3432
01:59:38,000 --> 01:59:42,000
而且就是用 bdd 的渐行者

3433
01:59:42,000 --> 01:59:44,000
经常会在

3434
01:59:44,000 --> 01:59:46,000
Ruby 是这个算名做的比较极端的

3435
01:59:46,000 --> 01:59:48,000
Ruby Scala 这种也好

3436
01:59:48,000 --> 01:59:50,000
他会把 DSL

3437
01:59:50,000 --> 01:59:53,000
就是 Domain Specific Language 的特性用到极致

3438
01:59:54,000 --> 01:59:57,000
然后你会发现一些匪夷所思的语法

3439
01:59:57,000 --> 01:59:57,000
在那里用着

3440
01:59:57,000 --> 01:59:58,000
没错

3441
01:59:58,000 --> 01:59:59,000
相当坑点

3442
01:59:59,000 --> 01:59:59,000
对

3443
01:59:59,000 --> 02:00:01,000
谁叫他们灵活

3444
02:00:01,000 --> 02:00:03,000
灵活有灵活的代价

3445
02:00:04,000 --> 02:00:04,000
好吧

3446
02:00:07,000 --> 02:00:07,000
对

3447
02:00:07,000 --> 02:00:11,000
所以其实就可以顾度到我们的

3448
02:00:11,000 --> 02:00:13,000
下一个重点就是

3449
02:00:13,000 --> 02:00:16,000
为什么人们讨厌测试

3450
02:00:16,000 --> 02:00:17,000
或者说为什么人们

3451
02:00:18,000 --> 02:00:20,000
会觉得测试是可有可无的东西

3452
02:00:22,000 --> 02:00:23,000
你为什么讨厌测试

3453
02:00:23,000 --> 02:00:25,000
或者你为什么不喜欢写测试

3454
02:00:26,000 --> 02:00:28,000
因为我觉得就是

3455
02:00:28,000 --> 02:00:30,000
刚才讲我喜欢有一些确定性的

3456
02:00:30,000 --> 02:00:32,000
经过行事证明的东西

3457
02:00:32,000 --> 02:00:35,000
就是说我写了这么一堆小段代码

3458
02:00:35,000 --> 02:00:38,000
经过严密的理论推敲

3459
02:00:38,000 --> 02:00:39,000
它是不可能出错的

3460
02:00:39,000 --> 02:00:42,000
那我觉得这是好的

3461
02:00:42,000 --> 02:00:44,000
然后你突然间跳起来给我说

3462
02:00:44,000 --> 02:00:44,000
哎不对

3463
02:00:44,000 --> 02:00:45,000
你这个太麻烦了

3464
02:00:45,000 --> 02:00:46,000
有些你做不到

3465
02:00:46,000 --> 02:00:49,000
我这个代码有 200 毫长

3466
02:00:49,000 --> 02:00:50,000
你怎么证明它

3467
02:00:50,000 --> 02:00:50,000
对吧

3468
02:00:50,000 --> 02:00:52,000
它要带着什么输出

3469
02:00:52,000 --> 02:00:55,000
就是叫做非确定性的

3470
02:00:55,000 --> 02:00:57,000
indeterministic

3471
02:00:57,000 --> 02:00:58,000
对吧

3472
02:00:58,000 --> 02:00:59,000
嗯

3473
02:00:59,000 --> 02:01:01,000
那你怎么去证明的

3474
02:01:01,000 --> 02:01:02,000
没有办法

3475
02:01:02,000 --> 02:01:04,000
那么我们来个突然去写测试

3476
02:01:05,000 --> 02:01:08,000
写的 50 个 unitest

3477
02:01:08,000 --> 02:01:10,000
这个 cases

3478
02:01:10,000 --> 02:01:12,000
那可能覆盖到大多数常见

3479
02:01:12,000 --> 02:01:13,000
和不常见的情况

3480
02:01:13,000 --> 02:01:15,000
然后你都跑通了

3481
02:01:15,000 --> 02:01:16,000
那么觉得在心理上

3482
02:01:16,000 --> 02:01:17,000
有一定的把握

3483
02:01:17,000 --> 02:01:19,000
证明这个事情是可行的

3484
02:01:19,000 --> 02:01:21,000
但是我还是有一种深深的

3485
02:01:21,000 --> 02:01:21,000
不安的感觉

3486
02:01:21,000 --> 02:01:22,000
总觉得哎呀

3487
02:01:22,000 --> 02:01:23,000
那万一有一个情况

3488
02:01:23,000 --> 02:01:25,000
没覆盖到怎么办

3489
02:01:27,000 --> 02:01:29,000
然后就觉得还是从逻辑上

3490
02:01:29,000 --> 02:01:30,000
去一层一层分析它

3491
02:01:30,000 --> 02:01:31,000
哪里吧会出错

3492
02:01:31,000 --> 02:01:32,000
哪里呢

3493
02:01:32,000 --> 02:01:35,000
会跳出这样会比较好

3494
02:01:35,000 --> 02:01:37,000
当然这也是一个间接的原因

3495
02:01:37,000 --> 02:01:39,000
导致为什么我不喜欢

3496
02:01:39,000 --> 02:01:40,000
那个异常机制

3497
02:01:40,000 --> 02:01:41,000
就是 exception mechanism

3498
02:01:41,000 --> 02:01:43,000
因为它会导致你那个逻辑

3499
02:01:43,000 --> 02:01:45,000
那个那个 control flow

3500
02:01:45,000 --> 02:01:47,000
就多重的 exit point

3501
02:01:47,000 --> 02:01:48,000
对吧

3502
02:01:48,000 --> 02:01:52,000
这样才会导致你整个这个状态是不干净的

3503
02:01:52,000 --> 02:01:53,000
如果你状态不干净的话

3504
02:01:53,000 --> 02:01:56,000
你就很难去用那个

3505
02:01:56,000 --> 02:01:58,000
啊 formal verification 的方法去验证它

3506
02:01:58,000 --> 02:02:01,000
或者说你很难用那个推理的方法

3507
02:02:01,000 --> 02:02:03,000
去证明它是不可能出错的

3508
02:02:03,000 --> 02:02:04,000
嗯哼

3509
02:02:04,000 --> 02:02:06,000
这是一就是一项相关的问题

3510
02:02:06,000 --> 02:02:06,000
我觉得

3511
02:02:06,000 --> 02:02:09,000
然后写测试就很痛苦的过程

3512
02:02:09,000 --> 02:02:11,000
对

3513
02:02:11,000 --> 02:02:13,000
我觉得很难一个原因就是

3514
02:02:13,000 --> 02:02:16,000
呃为什么会说写测试

3515
02:02:16,000 --> 02:02:17,000
也很痛苦的过程

3516
02:02:17,000 --> 02:02:19,000
就是因为它它没有给你

3517
02:02:19,000 --> 02:02:21,000
它不会给你一种

3518
02:02:21,000 --> 02:02:23,000
adjive 的感觉

3519
02:02:23,000 --> 02:02:25,000
就是你写测试是不会有成就感

3520
02:02:25,000 --> 02:02:28,000
你你不会觉得自己在创造新的东西

3521
02:02:29,000 --> 02:02:31,000
你只是

3522
02:02:31,000 --> 02:02:33,000
你只是在做一件

3523
02:02:33,000 --> 02:02:35,000
比如说给别人批作业或者是

3524
02:02:35,000 --> 02:02:37,000
呃写完券的时候在那边

3525
02:02:37,000 --> 02:02:39,000
验算自己写的对不对

3526
02:02:39,000 --> 02:02:40,000
这样一种

3527
02:02:40,000 --> 02:02:41,000
对对对

3528
02:02:41,000 --> 02:02:43,000
就刚才我讲的那个你写代码的时候

3529
02:02:43,000 --> 02:02:45,000
你总有一种创造的快感对吧

3530
02:02:45,000 --> 02:02:46,000
creation

3531
02:02:46,000 --> 02:02:47,000
这种感觉的

3532
02:02:47,000 --> 02:02:49,000
你就一种上帝的视角在那里面

3533
02:02:49,000 --> 02:02:51,000
然后你证明它的时候

3534
02:02:51,000 --> 02:02:51,000
你有一种

3535
02:02:51,000 --> 02:02:53,000
就我不知道有些人做数学题

3536
02:02:53,000 --> 02:02:54,000
它证明的那道很难得提

3537
02:02:54,000 --> 02:02:55,000
它可能会有一种快感

3538
02:02:56,000 --> 02:02:56,000
其实写那个

3539
02:02:56,000 --> 02:02:58,000
就是写那个 formal vacation

3540
02:02:58,000 --> 02:03:00,000
其实有类似的作用

3541
02:03:00,000 --> 02:03:02,000
但是你说写测试

3542
02:03:02,000 --> 02:03:03,000
感觉就好像什么呢

3543
02:03:03,000 --> 02:03:04,000
就为了证明到数学题

3544
02:03:04,000 --> 02:03:05,000
你只拿个计算信上

3545
02:03:05,000 --> 02:03:07,000
嗯说先数一个 5

3546
02:03:07,000 --> 02:03:08,000
得数是 50

3547
02:03:08,000 --> 02:03:10,000
结果是先出一个 6

3548
02:03:10,000 --> 02:03:11,000
得数是 600

3549
02:03:11,000 --> 02:03:13,000
啊你觉得这是对的

3550
02:03:13,000 --> 02:03:14,000
一切都没错

3551
02:03:14,000 --> 02:03:16,000
写了这么做重复做

3552
02:03:16,000 --> 02:03:16,000
试了 100 次证

3553
02:03:16,000 --> 02:03:18,000
你就哎呀我这个过程应该是正确的

3554
02:03:18,000 --> 02:03:19,000
我这个答应应该是正确的吧

3555
02:03:19,000 --> 02:03:21,000
因为我测试了 100 个

3556
02:03:21,000 --> 02:03:21,000
觉得都是正确

3557
02:03:21,000 --> 02:03:23,000
但其实没有经过证明

3558
02:03:23,000 --> 02:03:24,000
你还是不确定

3559
02:03:24,000 --> 02:03:26,000
就没有没有那个成就感

3560
02:03:26,000 --> 02:03:27,000
就是一个很机械的劳动

3561
02:03:27,000 --> 02:03:27,000
我觉得

3562
02:03:28,000 --> 02:03:28,000
对

3563
02:03:29,000 --> 02:03:32,000
另外一方面也是因为我们就是

3564
02:03:33,000 --> 02:03:34,000
从来没有在

3565
02:03:34,000 --> 02:03:37,000
哪怕科班出身的人都很难会说

3566
02:03:37,000 --> 02:03:39,000
自己曾经在求学

3567
02:03:39,000 --> 02:03:41,000
就学编程的过程中学的过

3568
02:03:42,000 --> 02:03:43,000
啊怎样写测试

3569
02:03:44,000 --> 02:03:45,000
我我相信

3570
02:03:46,000 --> 02:03:48,000
应该现在没有那个大学里面

3571
02:03:48,000 --> 02:03:50,000
会专门开设软件测试

3572
02:03:50,000 --> 02:03:51,000
这一个课程吧

3573
02:03:51,000 --> 02:03:51,000
哪怕是

3574
02:03:51,000 --> 02:03:54,000
会在那个 software engineer 里面

3575
02:03:54,000 --> 02:03:55,000
作为一个

3576
02:03:55,000 --> 02:03:57,000
实用的工具去去讲

3577
02:03:57,000 --> 02:03:59,000
这个我有体会

3578
02:03:59,000 --> 02:04:00,000
啊 OK

3579
02:04:00,000 --> 02:04:02,000
所以你还是偷偷善过人家工程了

3580
02:04:03,000 --> 02:04:05,000
没我但是我做个助教

3581
02:04:06,000 --> 02:04:07,000
啊哈哈

3582
02:04:07,000 --> 02:04:08,000
原来如此

3583
02:04:09,000 --> 02:04:09,000
对对

3584
02:04:11,000 --> 02:04:12,000
但是

3585
02:04:12,000 --> 02:04:15,000
科班出身的人可能有这样一个机会

3586
02:04:15,000 --> 02:04:16,000
但是那些自学成杂的人

3587
02:04:16,000 --> 02:04:18,000
可能就完全没有

3588
02:04:18,000 --> 02:04:20,000
学过怎样才能写

3589
02:04:20,000 --> 02:04:22,000
怎样去写测试

3590
02:04:22,000 --> 02:04:24,000
乃至于怎样写出可以被测试代码

3591
02:04:25,000 --> 02:04:26,000
而我们必须承认的也是

3592
02:04:27,000 --> 02:04:28,000
拿到一个很

3593
02:04:28,000 --> 02:04:30,000
就编程编的相对熟练的人来说

3594
02:04:30,000 --> 02:04:31,000
你要他

3595
02:04:31,000 --> 02:04:35,000
啊去去适应一个把所有代码就写的

3596
02:04:36,000 --> 02:04:36,000
啊

3597
02:04:36,000 --> 02:04:38,000
义渝测试的这么一个

3598
02:04:38,000 --> 02:04:39,000
写出

3599
02:04:39,000 --> 02:04:40,000
义渝测试这么一个风格来

3600
02:04:40,000 --> 02:04:41,000
啊

3601
02:04:41,000 --> 02:04:43,000
也其实挺难的那些

3602
02:04:44,000 --> 02:04:45,000
就

3603
02:04:45,000 --> 02:04:46,000
嗯

3604
02:04:47,000 --> 02:04:50,000
尤其是有时候可以测试的代码

3605
02:04:50,000 --> 02:04:52,000
跟不啰嗦的代码

3606
02:04:52,000 --> 02:04:53,000
其实是非常相

3607
02:04:53,000 --> 02:04:56,000
彼此底处的这么一个一个一个状态

3608
02:04:56,000 --> 02:04:59,000
就是有时候也许你可以判断一个条件

3609
02:04:59,000 --> 02:05:00,000
测试必然啰嗦呀

3610
02:05:01,000 --> 02:05:02,000
啊

3611
02:05:02,000 --> 02:05:04,000
可测试的代码

3612
02:05:04,000 --> 02:05:05,000
必然是啰嗦

3613
02:05:05,000 --> 02:05:07,000
测试本身当然是

3614
02:05:07,000 --> 02:05:09,000
就是完全是不必要的废话

3615
02:05:09,000 --> 02:05:09,000
但

3616
02:05:09,000 --> 02:05:11,000
可测试的代码

3617
02:05:11,000 --> 02:05:13,000
为了保证起可测试性

3618
02:05:13,000 --> 02:05:15,000
可能要为不可测试的代码啰嗦很多

3619
02:05:15,000 --> 02:05:17,000
比如说可能有一个编辑条件

3620
02:05:17,000 --> 02:05:19,000
你要去检测这边的条件

3621
02:05:19,000 --> 02:05:22,000
同时根据这个编辑条件给某一个数值

3622
02:05:22,000 --> 02:05:23,000
啊

3623
02:05:23,000 --> 02:05:25,000
同时根据这个编辑条件去改变某一个数值

3624
02:05:25,000 --> 02:05:27,000
那如果不需要写测试的话

3625
02:05:27,000 --> 02:05:29,000
你可以

3626
02:05:29,000 --> 02:05:29,000
直接

3627
02:05:30,000 --> 02:05:31,000
测试啊

3628
02:05:31,000 --> 02:05:33,000
直接去

3629
02:05:33,000 --> 02:05:36,000
测验这个验证这个编辑条件并且同

3630
02:05:36,000 --> 02:05:38,000
并且马上再改数值

3631
02:05:38,000 --> 02:05:40,000
但是如果你要为了把这个

3632
02:05:40,000 --> 02:05:42,000
这一部分的功能做的可以测试的话

3633
02:05:42,000 --> 02:05:43,000
你可能会要

3634
02:05:43,000 --> 02:05:47,000
你可能会需要把那个修改数值那一部分单独立出去

3635
02:05:47,000 --> 02:05:48,000
专门去测量

3636
02:05:48,000 --> 02:05:49,000
先去

3637
02:05:49,000 --> 02:05:50,000
先来测量一下这边的条件

3638
02:05:51,000 --> 02:05:51,000
对

3639
02:05:51,000 --> 02:05:52,000
猪舌等等

3640
02:05:53,000 --> 02:05:54,000
当然觉得啊

3641
02:05:54,000 --> 02:05:55,000
何必呢

3642
02:05:56,000 --> 02:05:57,000
在刚才那个提到

3643
02:05:57,000 --> 02:05:59,000
那个你说科班那个培养的

3644
02:05:59,000 --> 02:06:01,000
培训训练的都没有训练这个写测试代码

3645
02:06:01,000 --> 02:06:02,000
我想补充一点

3646
02:06:02,000 --> 02:06:03,000
就是刚才我讲

3647
02:06:03,000 --> 02:06:05,000
哪怕是我做过这个软件工程

3648
02:06:05,000 --> 02:06:06,000
这种课的助教

3649
02:06:06,000 --> 02:06:07,000
我去看到他们的一些培训

3650
02:06:07,000 --> 02:06:08,000
其实

3651
02:06:08,000 --> 02:06:11,000
我的感觉在现在的大学的教育里面

3652
02:06:11,000 --> 02:06:13,000
还是没有把这个事情放到一个

3653
02:06:13,000 --> 02:06:15,000
非常重要的地位上来去讲

3654
02:06:15,000 --> 02:06:17,000
可能一方面是因为大学的一个

3655
02:06:17,000 --> 02:06:19,000
一个定位吧

3656
02:06:19,000 --> 02:06:20,000
他并不是说

3657
02:06:20,000 --> 02:06:21,000
我不是一个 vacation school

3658
02:06:21,000 --> 02:06:22,000
racational school

3659
02:06:22,000 --> 02:06:23,000
不是一个职业去学院

3660
02:06:23,000 --> 02:06:24,000
对吧

3661
02:06:24,000 --> 02:06:26,000
我并不是要培养出一帮产业工业

3662
02:06:26,000 --> 02:06:27,000
能够上线直接用的

3663
02:06:27,000 --> 02:06:29,000
而是说培养一种思维

3664
02:06:29,000 --> 02:06:32,000
这种是这种定性的方

3665
02:06:32,000 --> 02:06:34,000
这个这个这个这个出发点

3666
02:06:34,000 --> 02:06:35,000
会导致他们会侵蚀

3667
02:06:35,000 --> 02:06:36,000
就重视原理

3668
02:06:36,000 --> 02:06:37,000
侵蚀实践

3669
02:06:37,000 --> 02:06:39,000
而测试属于那种

3670
02:06:39,000 --> 02:06:41,000
实践远远超过原理的东西

3671
02:06:42,000 --> 02:06:43,000
就哪怕是在现在的一些大学

3672
02:06:43,000 --> 02:06:45,000
你们开软件工程的课里面

3673
02:06:45,000 --> 02:06:46,000
他对测试怎么写

3674
02:06:46,000 --> 02:06:47,000
都只是急先说

3675
02:06:48,000 --> 02:06:50,000
我在给你展示一个案例

3676
02:06:50,000 --> 02:06:51,000
然后我们剩下的原理

3677
02:06:51,000 --> 02:06:52,000
你自己看数据吧

3678
02:06:52,000 --> 02:06:54,000
我会讲一些大的原则

3679
02:06:54,000 --> 02:06:55,000
他并不会告诉你

3680
02:06:55,000 --> 02:06:56,000
说话说得告诉你

3681
02:06:56,000 --> 02:06:57,000
怎么去实操这个东西

3682
02:06:57,000 --> 02:06:59,000
所以这也难怪

3683
02:06:59,000 --> 02:07:01,000
你说就哪怕是科办出生了

3684
02:07:01,000 --> 02:07:03,000
他也不会有特别好的这种

3685
02:07:04,000 --> 02:07:06,000
那种实践的经验去写测试

3686
02:07:06,000 --> 02:07:08,000
其实也就欠上另外一个问题

3687
02:07:08,000 --> 02:07:09,000
就是

3688
02:07:09,000 --> 02:07:12,000
作为工程学的计算机软件

3689
02:07:12,000 --> 02:07:14,000
其实可以做一种降

3690
02:07:14,000 --> 02:07:14,000
就是所谓的

3691
02:07:15,000 --> 02:07:16,000
craftsmanship

3692
02:07:17,000 --> 02:07:19,000
它其实更适合

3693
02:07:19,000 --> 02:07:21,000
使用这种

3694
02:07:21,000 --> 02:07:21,000
就是

3695
02:07:22,000 --> 02:07:24,000
工匠制或者说学图制的方法

3696
02:07:25,000 --> 02:07:26,000
来传授

3697
02:07:26,000 --> 02:07:28,000
强调实践

3698
02:07:28,000 --> 02:07:29,000
强调

3699
02:07:31,000 --> 02:07:32,000
经验的传承

3700
02:07:32,000 --> 02:07:33,000
强调手把手

3701
02:07:33,000 --> 02:07:35,000
比如说敏捷变成里面

3702
02:07:35,000 --> 02:07:36,000
有一个很很重要的原则

3703
02:07:36,000 --> 02:07:38,000
就是节列变成

3704
02:07:39,000 --> 02:07:41,000
两个程序员共用一个键盘

3705
02:07:41,000 --> 02:07:41,000
共用一个

3706
02:07:41,000 --> 02:07:42,000
共用一个鼠标

3707
02:07:42,000 --> 02:07:43,000
共用一个屏幕

3708
02:07:43,000 --> 02:07:44,000
这其实是

3709
02:07:44,000 --> 02:07:45,000
同样也是

3710
02:07:45,000 --> 02:07:45,000
就像

3711
02:07:46,000 --> 02:07:47,000
TDD 那三个原则一样

3712
02:07:47,000 --> 02:07:49,000
非常难以接受的

3713
02:07:50,000 --> 02:07:50,000
一件事情

3714
02:07:51,000 --> 02:07:52,000
但是其

3715
02:07:53,000 --> 02:07:54,000
就是会

3716
02:07:54,000 --> 02:07:55,000
就像案例一样

3717
02:07:55,000 --> 02:07:56,000
喜欢他的人会

3718
02:07:56,000 --> 02:07:58,000
觉得他是非常非常好

3719
02:07:58,000 --> 02:08:00,000
一个实践的原则

3720
02:08:01,000 --> 02:08:01,000
那

3721
02:08:02,000 --> 02:08:04,000
在大学里面所进行的

3722
02:08:04,000 --> 02:08:05,000
软定工程的教育

3723
02:08:05,000 --> 02:08:07,000
可能会比较

3724
02:08:08,000 --> 02:08:09,000
流于理论

3725
02:08:09,000 --> 02:08:10,000
因为

3726
02:08:12,000 --> 02:08:13,000
毕竟在很多时候

3727
02:08:13,000 --> 02:08:14,000
教授人工程的教授本身

3728
02:08:14,000 --> 02:08:16,000
可能完全没搞出来的工程

3729
02:08:16,000 --> 02:08:17,000
他是一个比较

3730
02:08:17,000 --> 02:08:18,000
从相对的

3731
02:08:18,000 --> 02:08:19,000
其实从相对来说

3732
02:08:19,000 --> 02:08:20,000
比较学院派的角度去

3733
02:08:23,000 --> 02:08:24,000
再向学生传承一个

3734
02:08:24,000 --> 02:08:26,000
自己想象之中的人工程

3735
02:08:26,000 --> 02:08:26,000
是

3736
02:08:27,000 --> 02:08:28,000
怎样实施的

3737
02:08:29,000 --> 02:08:29,000
这是

3738
02:08:30,000 --> 02:08:31,000
这是为什么

3739
02:08:31,000 --> 02:08:33,000
测试一直没能得到

3740
02:08:34,000 --> 02:08:35,000
足够的在课堂里面的

3741
02:08:35,000 --> 02:08:36,000
重视的原则

3742
02:08:37,000 --> 02:08:39,000
因为他本身就不适合

3743
02:08:39,000 --> 02:08:40,000
于课堂里面这么说

3744
02:08:41,000 --> 02:08:41,000
对

3745
02:08:44,000 --> 02:08:46,000
其实这还让我想到

3746
02:08:46,000 --> 02:08:46,000
另外一个问题

3747
02:08:46,000 --> 02:08:47,000
就是

3748
02:08:49,000 --> 02:08:50,000
我不知道你能感过什么样

3749
02:08:50,000 --> 02:08:51,000
就是

3750
02:08:51,000 --> 02:08:53,000
我好像印象里面

3751
02:08:53,000 --> 02:08:54,000
很多女孩子都会在

3752
02:08:55,000 --> 02:08:56,000
毕业之后

3753
02:08:56,000 --> 02:08:57,000
如果进了软定公司的话

3754
02:08:57,000 --> 02:08:58,000
选择去做测试

3755
02:08:58,000 --> 02:08:59,000
这是为什么的

3756
02:09:00,000 --> 02:09:02,000
这个事情我也很好奇

3757
02:09:02,000 --> 02:09:04,000
因为之前在智库的时候

3758
02:09:04,000 --> 02:09:07,000
我们最早在这个测试的工作

3759
02:09:07,000 --> 02:09:08,000
也是一个

3760
02:09:09,000 --> 02:09:10,000
就一个女孩子在那边做

3761
02:09:11,000 --> 02:09:12,000
可能有一种传统

3762
02:09:12,000 --> 02:09:14,000
让人说女生会心细一些

3763
02:09:15,000 --> 02:09:16,000
我觉得这是一模综

3764
02:09:16,000 --> 02:09:18,000
歧视三号森委

3765
02:09:18,000 --> 02:09:19,000
不会觉得是

3766
02:09:19,000 --> 02:09:20,000
但是

3767
02:09:20,000 --> 02:09:21,000
好像你

3768
02:09:21,000 --> 02:09:22,000
就是好像觉得

3769
02:09:23,000 --> 02:09:24,000
测试是愿没有创造力

3770
02:09:24,000 --> 02:09:27,000
然后又非常需要心细的人去做

3771
02:09:27,000 --> 02:09:29,000
就是如果即便不算歧视的话

3772
02:09:29,000 --> 02:09:30,000
至少是一种偏见

3773
02:09:30,000 --> 02:09:31,000
我觉得

3774
02:09:31,000 --> 02:09:31,000
对

3775
02:09:31,000 --> 02:09:32,000
他

3776
02:09:32,000 --> 02:09:32,000
他

3777
02:09:32,000 --> 02:09:34,000
三号带了一个默认的

3778
02:09:34,000 --> 02:09:34,000
性别偏见

3779
02:09:34,000 --> 02:09:36,000
就是他觉得

3780
02:09:38,000 --> 02:09:40,000
女性适合于做这种

3781
02:09:41,000 --> 02:09:42,000
扩号

3782
02:09:42,000 --> 02:09:42,000
没系的

3783
02:09:42,000 --> 02:09:44,000
没有什么技术水准的话

3784
02:09:45,000 --> 02:09:46,000
测试

3785
02:09:46,000 --> 02:09:47,000
好吧

3786
02:09:48,000 --> 02:09:50,000
但其实测试是相当有趣水准

3787
02:09:50,000 --> 02:09:51,000
如果你要把

3788
02:09:51,000 --> 02:09:51,000
对

3789
02:09:51,000 --> 02:09:53,000
我觉得要写好一个测试的

3790
02:09:53,000 --> 02:09:54,000
那个 test case 还是

3791
02:09:55,000 --> 02:09:57,000
蛮多事情要考虑的

3792
02:09:57,000 --> 02:09:58,000
但不

3793
02:09:58,000 --> 02:09:59,000
这里面有些测试

3794
02:09:59,000 --> 02:10:00,000
就是说是一个

3795
02:10:00,000 --> 02:10:01,000
刚才有的 smoke test

3796
02:10:01,000 --> 02:10:02,000
就是他甚至不会去接触到

3797
02:10:03,000 --> 02:10:04,000
原码只会说测试成品怎么样

3798
02:10:04,000 --> 02:10:05,000
就是另外一种

3799
02:10:06,000 --> 02:10:06,000
新一色测试

3800
02:10:06,000 --> 02:10:07,000
跟我们今天讲的那个

3801
02:10:07,000 --> 02:10:09,000
单元测试还不是一个东西

3802
02:10:10,000 --> 02:10:11,000
对

3803
02:10:11,000 --> 02:10:12,000
这就不展开讲了

3804
02:10:13,000 --> 02:10:13,000
对

3805
02:10:13,000 --> 02:10:15,000
这个有兴趣的

3806
02:10:15,000 --> 02:10:17,000
或者对此有感触的

3807
02:10:17,000 --> 02:10:19,000
听众欢迎你写信来谈一谈

3808
02:10:19,000 --> 02:10:20,000
你所遇到的

3809
02:10:20,000 --> 02:10:22,000
开启的吐槽模式

3810
02:10:22,000 --> 02:10:22,000
对

3811
02:10:23,000 --> 02:10:24,000
是不是很多

3812
02:10:24,000 --> 02:10:25,000
乃至于我相信

3813
02:10:25,000 --> 02:10:26,000
也许我们的听众里面

3814
02:10:26,000 --> 02:10:28,000
的确有很多做测试的女孩子

3815
02:10:28,000 --> 02:10:29,000
女性听众

3816
02:10:31,000 --> 02:10:31,000
不妨也谈谈

3817
02:10:31,000 --> 02:10:33,000
你为什么会选择去做测试

3818
02:10:33,000 --> 02:10:34,000
乃至于你觉得

3819
02:10:35,000 --> 02:10:40,000
测试真的比较适合女性吗

3820
02:10:41,000 --> 02:10:43,000
然后你觉得你有这个过程中

3821
02:10:43,000 --> 02:10:44,000
你有成就感吗

3822
02:10:44,000 --> 02:10:44,000
对

3823
02:10:45,000 --> 02:10:46,000
欢迎来信

3824
02:10:47,000 --> 02:10:48,000
长短不限

3825
02:10:51,000 --> 02:10:51,000
OK

3826
02:10:51,000 --> 02:10:52,000
那

3827
02:10:53,000 --> 02:10:53,000
根据提高

3828
02:10:53,000 --> 02:10:55,000
我们接下来要讲到的是

3829
02:10:55,000 --> 02:10:58,000
一系列和单元测试相关的工具

3830
02:10:59,000 --> 02:11:00,000
就是

3831
02:11:00,000 --> 02:11:04,000
本意也是希望对测试感兴趣的

3832
02:11:04,000 --> 02:11:06,000
听众可以

3833
02:11:06,000 --> 02:11:08,000
而对测试没有足够多经验的听众

3834
02:11:08,000 --> 02:11:10,000
可以去找一些

3835
02:11:10,000 --> 02:11:12,000
去搜一些相关的工具

3836
02:11:12,000 --> 02:11:14,000
然后看一看当时怎么使用

3837
02:11:15,000 --> 02:11:16,000
总之进行到下一环节之前

3838
02:11:16,000 --> 02:11:19,000
我们可以最后来吐槽一下 TUD 了

3839
02:11:19,000 --> 02:11:20,000
我觉得

3840
02:11:21,000 --> 02:11:22,000
火力全开

3841
02:11:22,000 --> 02:11:23,000
来吧

3842
02:11:23,000 --> 02:11:24,000
对

3843
02:11:24,000 --> 02:11:25,000
我觉得 TUD 非常印度

3844
02:11:26,000 --> 02:11:28,000
非常印度

3845
02:11:30,000 --> 02:11:31,000
这怎么讲

3846
02:11:31,000 --> 02:11:32,000
这是一个非常地图炮

3847
02:11:32,000 --> 02:11:34,000
地域歧视的说法

3848
02:11:34,000 --> 02:11:34,000
就是

3849
02:11:36,000 --> 02:11:37,000
TUD 是一个

3850
02:11:39,000 --> 02:11:41,000
为了保证质量

3851
02:11:42,000 --> 02:11:43,000
而忽视了

3852
02:11:45,000 --> 02:11:47,000
而压抑了人的创造性的

3853
02:11:47,000 --> 02:11:48,000
这么一个

3854
02:11:50,000 --> 02:11:51,000
软件方法

3855
02:11:51,000 --> 02:11:52,000
就是

3856
02:11:52,000 --> 02:11:54,000
你可以说 TUD 出现是历史的必然

3857
02:11:54,000 --> 02:11:55,000
就好像

3858
02:11:56,000 --> 02:11:57,000
福特踢行车

3859
02:11:58,000 --> 02:12:00,000
会以流水线的方式来生产

3860
02:12:00,000 --> 02:12:01,000
是历史的必然一样

3861
02:12:01,000 --> 02:12:02,000
但是

3862
02:12:04,000 --> 02:12:07,000
也正是因为 TUD 或者是流水线的出现

3863
02:12:07,000 --> 02:12:09,000
这种所谓 mass production 的出现

3864
02:12:10,000 --> 02:12:11,000
导致了

3865
02:12:13,000 --> 02:12:14,000
human

3866
02:12:15,000 --> 02:12:16,000
变成了 human resource

3867
02:12:19,000 --> 02:12:21,000
我这么说可能

3868
02:12:21,000 --> 02:12:23,000
扯的有点大

3869
02:12:23,000 --> 02:12:24,000
有点新而上

3870
02:12:24,000 --> 02:12:25,000
但

3871
02:12:25,000 --> 02:12:27,000
没有我觉得这个很好

3872
02:12:27,000 --> 02:12:27,000
我觉得这个点很好

3873
02:12:27,000 --> 02:12:29,000
就是如果你看

3874
02:12:29,000 --> 02:12:32,000
一个公司一旦出现了 HR 这个部门之后

3875
02:12:32,000 --> 02:12:35,000
这个公司通常都会有一点点问题

3876
02:12:36,000 --> 02:12:36,000
对

3877
02:12:36,000 --> 02:12:38,000
就好像

3878
02:12:40,000 --> 02:12:43,000
Benz 在开发第一辆车的时候

3879
02:12:43,000 --> 02:12:47,000
它显然不会给每一零件做测试

3880
02:12:48,000 --> 02:12:49,000
ATNT

3881
02:12:49,000 --> 02:12:51,000
Bertrn 实验室的

3882
02:12:51,000 --> 02:12:54,000
Hacker 们在一开始写第一版 Linux

3883
02:12:54,000 --> 02:12:55,000
Unex 的时候

3884
02:12:55,000 --> 02:12:58,000
可能也不会去写道源测试

3885
02:12:59,000 --> 02:13:01,000
真正具有创造性的工作是

3886
02:13:02,000 --> 02:13:03,000
不会写测试

3887
02:13:05,000 --> 02:13:06,000
就我觉得 TUD 最大的问题

3888
02:13:06,000 --> 02:13:10,000
就是它打破了创造的所谓的流

3889
02:13:10,000 --> 02:13:10,000
flow

3890
02:13:12,000 --> 02:13:13,000
比如你在想

3891
02:13:13,000 --> 02:13:14,000
你在做一件很投入

3892
02:13:14,000 --> 02:13:16,000
很有创造性的事情

3893
02:13:16,000 --> 02:13:17,000
你会在进入一种状态

3894
02:13:17,000 --> 02:13:20,000
跟状态你会持续做一个创造性的工作

3895
02:13:20,000 --> 02:13:22,000
去构建一整套的东西出来

3896
02:13:22,000 --> 02:13:23,000
在脑海中

3897
02:13:23,000 --> 02:13:24,000
然后把它落实到

3898
02:13:24,000 --> 02:13:25,000
笔头也好

3899
02:13:25,000 --> 02:13:26,000
还是键盘上也好

3900
02:13:26,000 --> 02:13:28,000
把它变成一个实体的物件

3901
02:13:28,000 --> 02:13:31,000
但是 TUD 其实把这个流

3902
02:13:31,000 --> 02:13:33,000
给切成无数的碎片

3903
02:13:33,000 --> 02:13:35,000
然后你不断的在跳

3904
02:13:35,000 --> 02:13:36,000
跳出来跳出

3905
02:13:36,000 --> 02:13:38,000
跳入跳出去写那个测试

3906
02:13:38,000 --> 02:13:40,000
然后再跳回来创造

3907
02:13:40,000 --> 02:13:41,000
整个 flow 就已经没有了

3908
02:13:41,000 --> 02:13:42,000
对

3909
02:13:42,000 --> 02:13:45,000
我觉得在 TUD 的整个过程里面

3910
02:13:45,000 --> 02:13:46,000
唯一爽的人

3911
02:13:46,000 --> 02:13:48,000
其实就是架过时

3912
02:13:48,000 --> 02:13:50,000
或者说是拆分工作的人

3913
02:13:50,000 --> 02:13:50,000
没错

3914
02:13:50,000 --> 02:13:53,000
他是唯一一个有创造这种角色

3915
02:13:53,000 --> 02:13:54,000
对 他把那个什么蓝

3916
02:13:54,000 --> 02:13:56,000
blue print

3917
02:13:56,000 --> 02:13:57,000
都给你画好了

3918
02:13:57,000 --> 02:13:58,000
然后你说

3919
02:13:58,000 --> 02:13:58,000
那个什么

3920
02:13:58,000 --> 02:14:00,000
你们这些

3921
02:14:00,000 --> 02:14:02,000
包工头

3922
02:14:02,000 --> 02:14:03,000
human resource 什么什么

3923
02:14:03,000 --> 02:14:03,000
包工头

3924
02:14:03,000 --> 02:14:05,000
你们这些小工

3925
02:14:05,000 --> 02:14:06,000
照这个图子干就好了

3926
02:14:06,000 --> 02:14:07,000
你们如果干不好

3927
02:14:07,000 --> 02:14:09,000
我随时可以换一个人

3928
02:14:09,000 --> 02:14:10,000
没错

3929
02:14:10,000 --> 02:14:10,000
对

3930
02:14:10,000 --> 02:14:13,000
就好像在建筑领域里面

3931
02:14:13,000 --> 02:14:16,000
一个建筑造了在每轮每换

3932
02:14:16,000 --> 02:14:18,000
在功能完善

3933
02:14:18,000 --> 02:14:20,000
人们也只会记住建筑 10 个名字

3934
02:14:20,000 --> 02:14:22,000
而不是你这个斑锥的小王的名字

3935
02:14:22,000 --> 02:14:24,000
对

3936
02:14:24,000 --> 02:14:24,000
这就是为什么

3937
02:14:24,000 --> 02:14:27,000
我看到任何一个

3938
02:14:27,000 --> 02:14:31,000
enforce TDD 的公司都会觉得

3939
02:14:31,000 --> 02:14:34,000
简直是 living hell

3940
02:14:34,000 --> 02:14:35,000
那能躲就躲

3941
02:14:35,000 --> 02:14:36,000
对

3942
02:14:36,000 --> 02:14:37,000
这其实让我想起来

3943
02:14:37,000 --> 02:14:39,000
前阵子里有一说

3944
02:14:39,000 --> 02:14:42,000
在有一期 id 工作里面

3945
02:14:42,000 --> 02:14:45,000
你们提到一个独立游戏开发者说

3946
02:14:45,000 --> 02:14:48,000
什么去 eA 或者是去 eA 这样的大公司

3947
02:14:48,000 --> 02:14:50,000
大流行公司

3948
02:14:50,000 --> 02:14:51,000
简直就是 hell

3949
02:14:51,000 --> 02:14:52,000
对

3950
02:14:52,000 --> 02:14:53,000
有类似的原因

3951
02:14:53,000 --> 02:14:54,000
对

3952
02:14:54,000 --> 02:14:57,000
它的道理其实就是你在这样的公司里面

3953
02:14:57,000 --> 02:15:00,000
扮演的其实就是一个流水现场的工人

3954
02:15:00,000 --> 02:15:02,000
然后 Steam 传说中的

3955
02:15:02,000 --> 02:15:02,000
对

3956
02:15:02,000 --> 02:15:03,000
你的个性被抹杀了

3957
02:15:03,000 --> 02:15:05,000
你成为那个 human resource

3958
02:15:05,000 --> 02:15:07,000
然后

3959
02:15:08,000 --> 02:15:11,000
你唯一出现的就是最终的演织人表里面一个

3960
02:15:11,000 --> 02:15:14,000
没有大部分的家都会立刻按 eA 去跳过

3961
02:15:14,000 --> 02:15:16,000
什么字幕里面的一部分

3962
02:15:17,000 --> 02:15:18,000
是

3963
02:15:18,000 --> 02:15:20,000
不过这件事如果反过来讲

3964
02:15:20,000 --> 02:15:21,000
也可以说

3965
02:15:21,000 --> 02:15:23,000
这样才可以保证出品的稳定

3966
02:15:23,000 --> 02:15:23,000
对吧

3967
02:15:23,000 --> 02:15:24,000
对

3968
02:15:24,000 --> 02:15:25,000
也只有采用这样的方式

3969
02:15:25,000 --> 02:15:27,000
也只有采用这种不信任人

3970
02:15:27,000 --> 02:15:30,000
让人成为可以被替换的零件的方式

3971
02:15:30,000 --> 02:15:33,000
才可以做出规模足够大的东西

3972
02:15:33,000 --> 02:15:35,000
这个我是毫不否认的

3973
02:15:35,000 --> 02:15:38,000
而且就是能保证他的出品是稳定的

3974
02:15:38,000 --> 02:15:39,000
就好像为什么老师

3975
02:15:39,000 --> 02:15:42,000
我们老是吐槽说中餐难以标准化

3976
02:15:42,000 --> 02:15:45,000
就是因为他的出品不够稳定

3977
02:15:45,000 --> 02:15:46,000
你换一个人

3978
02:15:46,000 --> 02:15:47,000
换一个出师

3979
02:15:47,000 --> 02:15:49,000
或者甚至换一种调料

3980
02:15:49,000 --> 02:15:52,000
这个事情就口味就变掉了

3981
02:15:52,000 --> 02:15:54,000
所以我就是在想

3982
02:15:54,000 --> 02:15:56,000
这个到底是一个什么样的情况

3983
02:15:56,000 --> 02:15:59,000
怎么能够拿到两者的好处

3984
02:15:59,000 --> 02:16:00,000
从此避免两者的短板

3985
02:16:00,000 --> 02:16:03,000
好像现在看来没有什么太好的解决方案

3986
02:16:03,000 --> 02:16:05,000
我觉得一个解决方案可能就是人工智能

3987
02:16:05,000 --> 02:16:06,000
就是

3988
02:16:06,000 --> 02:16:08,000
因为 TDD

3989
02:16:09,000 --> 02:16:11,000
可能现在 TDD 还太原始

3990
02:16:11,000 --> 02:16:13,000
就是假如将来我们可以直接先给出

3991
02:16:13,000 --> 02:16:15,000
所有的边境条件

3992
02:16:15,000 --> 02:16:19,000
然后让 AI 自己去帮我们写出程序来

3993
02:16:19,000 --> 02:16:21,000
那可能到那个时候

3994
02:16:21,000 --> 02:16:24,000
我们也就不需要在为这种人发愁

3995
02:16:24,000 --> 02:16:25,000
因为其实这个已经也有了

3996
02:16:25,000 --> 02:16:27,000
所谓的什么第四代编程员

3997
02:16:27,000 --> 02:16:28,000
不就做这种事情吧

3998
02:16:28,000 --> 02:16:30,000
人指定一个 constraint

3999
02:16:30,000 --> 02:16:33,000
他自己去解决这个

4000
02:16:33,000 --> 02:16:36,000
只能去找到满足 constraint 的一个解

4001
02:16:36,000 --> 02:16:39,000
但是效率是很成问题的

4002
02:16:39,000 --> 02:16:40,000
对

4003
02:16:40,000 --> 02:16:45,000
然后这个就又跟我们之前提到的那个

4004
02:16:46,000 --> 02:16:47,000
the rabbits

4005
02:16:47,000 --> 02:16:50,000
还是那个网站叫什么来着

4006
02:16:50,000 --> 02:16:54,000
带一些带码那个

4007
02:16:54,000 --> 02:16:56,000
你会问我叫什么来着

4008
02:16:56,000 --> 02:16:58,000
反正他吐嘴有关

4009
02:16:58,000 --> 02:16:59,000
对

4010
02:16:59,000 --> 02:17:01,000
然后还有 the rabbits

4011
02:17:01,000 --> 02:17:01,000
OK

4012
02:17:01,000 --> 02:17:03,000
the rabbits

4013
02:17:03,000 --> 02:17:05,000
以及和之前和慕瑶聊到的

4014
02:17:05,000 --> 02:17:08,000
没能跟慕瑶聊起的那个话题

4015
02:17:08,000 --> 02:17:11,000
就是计算机可以做数学

4016
02:17:11,000 --> 02:17:17,000
计算机可以设立出来一个

4017
02:17:17,000 --> 02:17:18,000
有创造性的算法

4018
02:17:18,000 --> 02:17:21,000
其实也是

4019
02:17:21,000 --> 02:17:23,000
目前现阶段看来不太可能也是

4020
02:17:23,000 --> 02:17:26,000
就是我们也许可以通过 TDD

4021
02:17:26,000 --> 02:17:29,000
通过第四代第五代计算机语言来

4022
02:17:29,000 --> 02:17:31,000
完成一些枯燥的

4023
02:17:31,000 --> 02:17:35,000
现阶段只有依靠 TDD 或者 BDD 才可以

4024
02:17:35,000 --> 02:17:38,000
达到了大微膜软件

4025
02:17:38,000 --> 02:17:41,000
就所谓的穷局法证明吗

4026
02:17:41,000 --> 02:17:42,000
对

4027
02:17:42,000 --> 02:17:44,000
说这个其实已经有

4028
02:17:44,000 --> 02:17:45,000
现在 TDD 证明那个什么

4029
02:17:45,000 --> 02:17:46,000
那个

4030
02:17:46,000 --> 02:17:48,000
地

4031
02:17:48,000 --> 02:17:48,000
叫什么

4032
02:17:48,000 --> 02:17:49,000
coloring problems

4033
02:17:49,000 --> 02:17:50,000
是吧

4034
02:17:50,000 --> 02:17:52,000
地图甜色的那个难题

4035
02:17:52,000 --> 02:17:53,000
四色定理

4036
02:17:53,000 --> 02:17:54,000
对四色定理

4037
02:17:54,000 --> 02:17:55,000
那个好像不是证明出来吗

4038
02:17:55,000 --> 02:17:57,000
就是靠暴力不见

4039
02:17:57,000 --> 02:17:57,000
对

4040
02:17:57,000 --> 02:17:59,000
这个就是什么

4041
02:17:59,000 --> 02:18:00,000
数学领域的 TDD

4042
02:18:00,000 --> 02:18:01,000
对

4043
02:18:01,000 --> 02:18:05,000
也不竟然

4044
02:18:05,000 --> 02:18:06,000
那

4045
02:18:06,000 --> 02:18:07,000
对

4046
02:18:07,000 --> 02:18:09,000
各位理解这是什么意思都好

4047
02:18:09,000 --> 02:18:12,000
有神似之处

4048
02:18:12,000 --> 02:18:13,000
但并不是一回事

4049
02:18:13,000 --> 02:18:14,000
对

4050
02:18:14,000 --> 02:18:14,000
另外一个

4051
02:18:14,000 --> 02:18:16,000
我又想起来一个暴力的方法

4052
02:18:16,000 --> 02:18:20,000
就是说最近近段时间

4053
02:18:20,000 --> 02:18:22,000
围棋的 AI 有比较大提升

4054
02:18:22,000 --> 02:18:24,000
就是因为他们采用了

4055
02:18:24,000 --> 02:18:26,000
一种比较暴力的算法

4056
02:18:26,000 --> 02:18:30,000
就是穷局所有用猛特卡洛的算法

4057
02:18:31,000 --> 02:18:33,000
随机的去

4058
02:18:33,000 --> 02:18:37,000
随机的去采用一些可能的走法

4059
02:18:37,000 --> 02:18:41,000
然后从里面找出来一个效果最好

4060
02:18:41,000 --> 02:18:45,000
然后成功的让业余棋手

4061
02:18:45,000 --> 02:18:48,000
基本上没有人能够下过这个维系算法

4062
02:18:48,000 --> 02:18:48,000
OK

4063
02:18:48,000 --> 02:18:51,000
回头可以把相关的那个报道找出来

4064
02:18:51,000 --> 02:18:51,000
他

4065
02:18:51,000 --> 02:18:51,000
对

4066
02:18:51,000 --> 02:18:52,000
大概就是这么意思

4067
02:18:55,000 --> 02:18:56,000
对

4068
02:18:56,000 --> 02:18:58,000
我觉得 TDD 是一个

4069
02:19:00,000 --> 02:19:01,000
是历史的必然

4070
02:19:01,000 --> 02:19:05,000
但就好像汽车的生产线

4071
02:19:07,000 --> 02:19:09,000
可能还有一些地方是在用手工

4072
02:19:09,000 --> 02:19:11,000
但至少德国基本上四大车上

4073
02:19:11,000 --> 02:19:18,000
全都是在用机器人来完成那些以往需要人类才可以完成的路水线工作

4074
02:19:18,000 --> 02:19:26,000
将来我觉得这些比较低级的代码的验证

4075
02:19:26,000 --> 02:19:27,000
乃至于生成工作

4076
02:19:27,000 --> 02:19:29,000
应该是可以交由人工智能自动完成

4077
02:19:30,000 --> 02:19:33,000
所以这就是我为什么说 TDD 非常印度

4078
02:19:33,000 --> 02:19:36,000
就是因为印度加以号

4079
02:19:36,000 --> 02:19:37,000
我只不过不愿意说中国

4080
02:19:37,000 --> 02:19:41,000
就是在这个第三世界国家

4081
02:19:41,000 --> 02:19:42,000
确实是很印度

4082
02:19:42,000 --> 02:19:46,000
因为那个 Yamash 那个 mechanic Turk

4083
02:19:46,000 --> 02:19:48,000
好像那些服务上都在印度吧

4084
02:19:48,000 --> 02:19:51,000
但这种说法比较怎么说政治不正确

4085
02:19:51,000 --> 02:19:53,000
当然我们也没有在追求政治正确

4086
02:19:53,000 --> 02:19:53,000
所以

4087
02:19:53,000 --> 02:19:54,000
对

4088
02:19:54,000 --> 02:20:04,000
严下之意就是在第三世界国家这种密集劳力劳动的产业链的这样一个环节

4089
02:20:04,000 --> 02:20:05,000
这还算劳力劳动

4090
02:20:05,000 --> 02:20:06,000
这个算体力活了吧

4091
02:20:06,000 --> 02:20:06,000
一定

4092
02:20:06,000 --> 02:20:08,000
然后区分劳力劳动

4093
02:20:08,000 --> 02:20:09,000
体力劳动的区别

4094
02:20:09,000 --> 02:20:10,000
只是你用不用敲键盘吧

4095
02:20:10,000 --> 02:20:13,000
我觉得 TDD 还是要敲键盘

4096
02:20:13,000 --> 02:20:16,000
所以这还是对

4097
02:20:16,000 --> 02:20:18,000
只有在这样一个环节里面

4098
02:20:18,000 --> 02:20:19,000
对

4099
02:20:19,000 --> 02:20:23,000
我相信在印度这帮人还是会定性为高科技产业的

4100
02:20:23,000 --> 02:20:24,000
那肯定

4101
02:20:26,000 --> 02:20:29,000
但是这种说法其实也比较偏激或者说比较

4102
02:20:30,000 --> 02:20:30,000
Sanical

4103
02:20:30,000 --> 02:20:32,000
因为其实在美国

4104
02:20:32,000 --> 02:20:36,000
在欧美还是有大量的企业

4105
02:20:36,000 --> 02:20:42,000
会采用类似于 BED 的方法来开发资料

4106
02:20:42,000 --> 02:20:47,000
而且即便归股的这些当红炸子机闷

4107
02:20:47,000 --> 02:20:49,000
也是有很多会非常强

4108
02:20:49,000 --> 02:20:52,000
我相信 Facebook 也是一个非常非常强调测试的公司

4109
02:20:53,000 --> 02:20:55,000
苹果微软就不用说了

4110
02:20:55,000 --> 02:21:00,000
微软就说有一个非常非常非常非常大的测试部

4111
02:21:02,000 --> 02:21:04,000
他们不是整个公司都是测试部吗

4112
02:21:04,000 --> 02:21:07,000
这样不好

4113
02:21:07,000 --> 02:21:09,000
都在测试 Windows 10 的 Beta

4114
02:21:09,000 --> 02:21:09,000
不

4115
02:21:09,000 --> 02:21:10,000
AVA

4116
02:21:12,000 --> 02:21:12,000
之类的

4117
02:21:12,000 --> 02:21:15,000
所以苹果是不怎么喜欢写测试的

4118
02:21:15,000 --> 02:21:15,000
你觉得

4119
02:21:15,000 --> 02:21:16,000
Who knows

4120
02:21:16,000 --> 02:21:19,000
看他们出品的这个质量应该是不写的

4121
02:21:19,000 --> 02:21:20,000
对

4122
02:21:20,000 --> 02:21:25,000
当然毕竟这一次 W 6 DC 上发布的这一系列

4123
02:21:26,000 --> 02:21:27,000
怎么说呢

4124
02:21:27,000 --> 02:21:30,000
在偿还他们技术债务的补丁

4125
02:21:30,000 --> 02:21:33,000
我觉得还是比较好

4126
02:21:33,000 --> 02:21:37,000
就是软件质量至少在

4127
02:21:38,000 --> 02:21:39,000
这一代叫什么

4128
02:21:39,000 --> 02:21:41,000
L Capitan

4129
02:21:41,000 --> 02:21:42,000
在这一代

4130
02:21:42,000 --> 02:21:42,000
对

4131
02:21:42,000 --> 02:21:43,000
对

4132
02:21:43,000 --> 02:21:44,000
在这一代

4133
02:21:44,000 --> 02:21:46,000
没有太大的新特性吗

4134
02:21:46,000 --> 02:21:46,000
对

4135
02:21:46,000 --> 02:21:48,000
所以就说明了

4136
02:21:48,000 --> 02:21:51,000
他们把时间都花在了修办上面

4137
02:21:51,000 --> 02:21:52,000
那也不一定

4138
02:21:52,000 --> 02:21:55,000
你可能在搞什么 WatchOS 之类的事情

4139
02:21:56,000 --> 02:21:57,000
不懂 C

4140
02:21:57,000 --> 02:21:58,000
好吧

4141
02:21:59,000 --> 02:22:00,000
就是不要太乐观

4142
02:22:00,000 --> 02:22:01,000
我觉得

4143
02:22:02,000 --> 02:22:03,000
OK

4144
02:22:04,000 --> 02:22:07,000
所以我们接下来可以进入到本期的最后一个环节

4145
02:22:07,000 --> 02:22:11,000
就是介绍一些常用的写测试的工具

4146
02:22:13,000 --> 02:22:15,000
尤其是 Unit Test

4147
02:22:15,000 --> 02:22:16,000
就是单元测试

4148
02:22:16,000 --> 02:22:19,000
单元测试是所有的你所能写的测试里面

4149
02:22:19,000 --> 02:22:20,000
最颗粒最小的一个

4150
02:22:20,000 --> 02:22:23,000
同时也是作为一个开发者

4151
02:22:23,000 --> 02:22:25,000
而不是 QA 人员

4152
02:22:25,000 --> 02:22:27,000
也是软件接受者来说

4153
02:22:27,000 --> 02:22:31,000
所能接触到的最常见的一种测试

4154
02:22:31,000 --> 02:22:35,000
首先介绍给大家的就是 XUnit Family

4155
02:22:37,000 --> 02:22:38,000
怎么说呢

4156
02:22:38,000 --> 02:22:40,000
就是因为单元测试一人

4157
02:22:40,000 --> 02:22:40,000
对

4158
02:22:40,000 --> 02:22:42,000
X 单元的 Family

4159
02:22:42,000 --> 02:22:44,000
就是因为软件测试

4160
02:22:44,000 --> 02:22:47,000
单元测试非常非常的普遍

4161
02:22:47,000 --> 02:22:48,000
以至于有这么一套

4162
02:22:51,000 --> 02:22:52,000
Pattern

4163
02:22:53,000 --> 02:22:53,000
可以被

4164
02:22:55,000 --> 02:22:58,000
套用在各个语言所写的程序里面

4165
02:22:58,000 --> 02:23:01,000
而这个 Pattern 在最开始的创始人

4166
02:23:03,000 --> 02:23:05,000
是一个叫做 Kent Beck 的

4167
02:23:08,000 --> 02:23:09,000
大神

4168
02:23:09,000 --> 02:23:09,000
对

4169
02:23:09,000 --> 02:23:10,000
他应该也算大神一样

4170
02:23:11,000 --> 02:23:14,000
而他最开始所写的这一套

4171
02:23:14,000 --> 02:23:19,000
Unit Test 的工具是叫做 SUnit

4172
02:23:20,000 --> 02:23:22,000
是写的 small top

4173
02:23:23,000 --> 02:23:24,000
跟 Summit

4174
02:23:24,000 --> 02:23:24,000
对

4175
02:23:24,000 --> 02:23:25,000
跟 Summit 入关

4176
02:23:25,000 --> 02:23:27,000
至少是 Sunit

4177
02:23:28,000 --> 02:23:29,000
啊

4178
02:23:29,000 --> 02:23:29,000
OK

4179
02:23:29,000 --> 02:23:31,000
你说他是可以念出来的

4180
02:23:31,000 --> 02:23:31,000
是吧

4181
02:23:32,000 --> 02:23:32,000
Sunit

4182
02:23:32,000 --> 02:23:34,000
我觉得 Sunit

4183
02:23:35,000 --> 02:23:35,000
OK

4184
02:23:36,000 --> 02:23:37,000
所以这一 Unit 应该怎么念

4185
02:23:37,000 --> 02:23:38,000
Johnnit

4186
02:23:39,000 --> 02:23:39,000
Johnnit

4187
02:23:42,000 --> 02:23:43,000
怎么像 Johnnit

4188
02:23:45,000 --> 02:23:47,000
而 RUnit 就是 ruined

4189
02:23:48,000 --> 02:23:49,000
毁了他吧

4190
02:23:49,000 --> 02:23:50,000
不是 Runit

4191
02:23:52,000 --> 02:23:52,000
OK

4192
02:23:53,000 --> 02:23:54,000
对

4193
02:23:54,000 --> 02:23:56,000
我还是轻易把它念成 SUnit

4194
02:23:56,000 --> 02:23:57,000
Sunit

4195
02:23:57,000 --> 02:23:57,000
对

4196
02:23:57,000 --> 02:23:58,000
对

4197
02:23:58,000 --> 02:23:59,000
这是一个正确的念法

4198
02:24:00,000 --> 02:24:00,000
OK

4199
02:24:01,000 --> 02:24:05,000
Kent Beck 这个人为 small talk 所研发出的这一套

4200
02:24:06,000 --> 02:24:07,000
单元测试的工具

4201
02:24:09,000 --> 02:24:10,000
在

4202
02:24:10,000 --> 02:24:14,000
紧紧跟随着这个极限编程的方法

4203
02:24:14,000 --> 02:24:17,000
以及整个项面节转向的这么一个软件

4204
02:24:17,000 --> 02:24:18,000
能够说是潮流

4205
02:24:18,000 --> 02:24:20,000
逐渐被套用到了其他

4206
02:24:20,000 --> 02:24:21,000
所有

4207
02:24:21,000 --> 02:24:22,000
几乎所有元上面

4208
02:24:22,000 --> 02:24:24,000
甚至几乎这两个字都不用加

4209
02:24:24,000 --> 02:24:26,000
就是除了什么 brainfax 之外

4210
02:24:27,000 --> 02:24:29,000
可能没有不支持 Unit

4211
02:24:29,000 --> 02:24:34,000
不支持这个 XUnit 的元存在

4212
02:24:34,000 --> 02:24:35,000
就是

4213
02:24:35,000 --> 02:24:35,000
嗯

4214
02:24:35,000 --> 02:24:37,000
基本上你能想出来的什么 C

4215
02:24:37,000 --> 02:24:38,000
PHP

4216
02:24:39,000 --> 02:24:40,000
Ruby

4217
02:24:40,000 --> 02:24:41,000
Java

4218
02:24:41,000 --> 02:24:42,000
Java 就更不用说

4219
02:24:42,000 --> 02:24:44,000
JUnit 简直是 Java 世界里面

4220
02:24:46,000 --> 02:24:47,000
如果你想要找到工作

4221
02:24:47,000 --> 02:24:48,000
一定要学什么一个工具

4222
02:24:49,000 --> 02:24:50,000
然后

4223
02:24:50,000 --> 02:24:52,000
Dotnet 世界当然也有相应的

4224
02:24:52,000 --> 02:24:53,000
比如说

4225
02:24:53,000 --> 02:24:54,000
NUnit

4226
02:24:54,000 --> 02:24:55,000
或者是

4227
02:24:56,000 --> 02:24:58,000
微软自家出的

4228
02:24:58,000 --> 02:24:59,000
之前叫 MSTest

4229
02:24:59,000 --> 02:25:01,000
后来改叫 VSTest

4230
02:25:01,000 --> 02:25:03,000
Visual StudioTest

4231
02:25:03,000 --> 02:25:04,000
嗯

4232
02:25:05,000 --> 02:25:07,000
然后如果你使用

4233
02:25:07,000 --> 02:25:08,000
嗯

4234
02:25:08,000 --> 02:25:10,000
Objective C 的话

4235
02:25:10,000 --> 02:25:11,000
之前有这个

4236
02:25:11,000 --> 02:25:11,000
所谓

4237
02:25:11,000 --> 02:25:13,000
XC Test

4238
02:25:13,000 --> 02:25:15,000
XC Stand for Xcode

4239
02:25:15,000 --> 02:25:15,000
对

4240
02:25:15,000 --> 02:25:17,000
XXC Test

4241
02:25:17,000 --> 02:25:19,000
就好像 VS Test 一样

4242
02:25:19,000 --> 02:25:22,000
是在 Xcode 里面执行的

4243
02:25:22,000 --> 02:25:23,000
嗯

4244
02:25:23,000 --> 02:25:25,000
专门为 Objective C 以及

4245
02:25:25,000 --> 02:25:26,000
啊

4246
02:25:26,000 --> 02:25:28,000
Support 应该也有

4247
02:25:28,000 --> 02:25:31,000
所开发的这个单元测试框架

4248
02:25:31,000 --> 02:25:32,000
其实这边直接给一个

4249
02:25:32,000 --> 02:25:33,000
这个

4250
02:25:33,000 --> 02:25:34,000
链接就好了

4251
02:25:34,000 --> 02:25:36,000
因为 VQ 在上有一个比较好的

4252
02:25:36,000 --> 02:25:37,000
嗯

4253
02:25:38,000 --> 02:25:39,000
嗯

4254
02:25:39,000 --> 02:25:41,000
就是 List of Unit Testing Frameworks

4255
02:25:41,000 --> 02:25:43,000
List of Unit Testing Frameworks

4256
02:25:43,000 --> 02:25:43,000
对

4257
02:25:43,000 --> 02:25:44,000
然后

4258
02:25:44,000 --> 02:25:46,000
嗯

4259
02:25:46,000 --> 02:25:48,000
这里我们想要说的一个比较

4260
02:25:48,000 --> 02:25:51,000
有意思的东西其实是 Dock Test

4261
02:25:51,000 --> 02:25:52,000
就我不知道你用不用我

4262
02:25:52,000 --> 02:25:53,000
嗯

4263
02:25:53,000 --> 02:25:55,000
就是 Python 的语言里面有一个

4264
02:25:55,000 --> 02:25:56,000
嗯

4265
02:25:56,000 --> 02:25:58,000
当然有一个 Unit Test 的包

4266
02:25:58,000 --> 02:26:00,000
然后另外 Python 有一个很有意思的包

4267
02:26:00,000 --> 02:26:02,000
叫做 Dock Test

4268
02:26:03,000 --> 02:26:04,000
你用过吗

4269
02:26:04,000 --> 02:26:05,000
没

4270
02:26:05,000 --> 02:26:07,000
一个不写测试的什么

4271
02:26:07,000 --> 02:26:08,000
嗯

4272
02:26:08,000 --> 02:26:10,000
哈哈

4273
02:26:10,000 --> 02:26:10,000
呃

4274
02:26:10,000 --> 02:26:13,000
这比较想要安利一下的东西

4275
02:26:13,000 --> 02:26:15,000
就是 Dock Test 这个东西

4276
02:26:15,000 --> 02:26:17,000
它有意思或者说它

4277
02:26:17,000 --> 02:26:19,000
它实用的点在哪呢

4278
02:26:19,000 --> 02:26:20,000
就是

4279
02:26:20,000 --> 02:26:21,000
我们知道

4280
02:26:21,000 --> 02:26:24,000
如果你在一个方法或者在一个类里面

4281
02:26:24,000 --> 02:26:25,000
啊

4282
02:26:25,000 --> 02:26:28,000
它的定义下面直接写一个 Strain

4283
02:26:28,000 --> 02:26:28,000
呃

4284
02:26:28,000 --> 02:26:29,000
这东西被当

4285
02:26:29,000 --> 02:26:31,000
被称为 Dock Strain

4286
02:26:31,000 --> 02:26:32,000
是吧

4287
02:26:32,000 --> 02:26:33,000
啊

4288
02:26:33,000 --> 02:26:33,000
ok

4289
02:26:33,000 --> 02:26:34,000
然后你可以再

4290
02:26:34,000 --> 02:26:35,000
我想起来

4291
02:26:35,000 --> 02:26:37,000
我有有我有有见到过这个

4292
02:26:37,000 --> 02:26:38,000
但自己没有试过

4293
02:26:38,000 --> 02:26:39,000
ok

4294
02:26:39,000 --> 02:26:42,000
然后 Dock Test 这个包所支持的一个功能

4295
02:26:42,000 --> 02:26:45,000
就是你可以在这个 Dock Strain 里面

4296
02:26:45,000 --> 02:26:48,000
写一些测试

4297
02:26:48,000 --> 02:26:48,000
呃

4298
02:26:48,000 --> 02:26:49,000
语法很简单

4299
02:26:49,000 --> 02:26:51,000
就是呃

4300
02:26:51,000 --> 02:26:53,000
Python 的这个提示服

4301
02:26:53,000 --> 02:26:56,000
大家都知道是三个相应用的大语号对吧

4302
02:26:56,000 --> 02:26:59,000
那么你只需要在这个 Dock Strain 里面

4303
02:26:59,000 --> 02:27:01,000
写三个相应用的大语号

4304
02:27:01,000 --> 02:27:03,000
然后写呃

4305
02:27:03,000 --> 02:27:06,000
这个测试所应该执行的预据

4306
02:27:06,000 --> 02:27:07,000
然后在

4307
02:27:07,000 --> 02:27:08,000
新另一行

4308
02:27:08,000 --> 02:27:11,000
在不写这个三个大语号的情况下

4309
02:27:11,000 --> 02:27:13,000
写出这个程序执行之后

4310
02:27:13,000 --> 02:27:15,000
所应该有的指

4311
02:27:15,000 --> 02:27:16,000
你就写好这个测试

4312
02:27:16,000 --> 02:27:17,000
是不是很神奇呢

4313
02:27:17,000 --> 02:27:18,000
就好像

4314
02:27:18,000 --> 02:27:23,000
你在这个 Dock Strain 里面给你的这个函数写了一个呃

4315
02:27:23,000 --> 02:27:25,000
用法势力

4316
02:27:25,000 --> 02:27:26,000
然后这个势力本身

4317
02:27:26,000 --> 02:27:26,000
哎

4318
02:27:26,000 --> 02:27:28,000
忽然就可以当作单元测试来用

4319
02:27:28,000 --> 02:27:29,000
对

4320
02:27:29,000 --> 02:27:31,000
这是一个非常好的一点呃

4321
02:27:31,000 --> 02:27:33,000
一个一个一个工具

4322
02:27:33,000 --> 02:27:35,000
但我觉得这个的唯一的问题就是

4323
02:27:35,000 --> 02:27:38,000
有时候那个力度

4324
02:27:38,000 --> 02:27:39,000
就是它不是一个 Unit 的

4325
02:27:39,000 --> 02:27:41,000
所以你没法用这个方法

4326
02:27:41,000 --> 02:27:42,000
对

4327
02:27:42,000 --> 02:27:45,000
就这个就 Dock Test 仅限于 Unit Test 的用

4328
02:27:46,000 --> 02:27:48,000
一旦一旦跨了一个函数就不

4329
02:27:48,000 --> 02:27:50,000
其实也是有别的方法

4330
02:27:50,000 --> 02:27:51,000
比如说呃

4331
02:27:52,000 --> 02:27:54,000
Dock Test 这个包可以单独拿出来

4332
02:27:54,000 --> 02:27:57,000
就是生成一个专门的 Python 文件

4333
02:27:57,000 --> 02:28:00,000
然后这个 Python 文件里面除了

4334
02:28:01,000 --> 02:28:06,000
这样 Dock Test 的语法写成的测试之外别无他务

4335
02:28:06,000 --> 02:28:10,000
然后你可以在这里面呃用这个

4336
02:28:11,000 --> 02:28:12,000
Dock Test 来的

4337
02:28:12,000 --> 02:28:15,000
或是滥用 Dock Test 来写一些跨模块

4338
02:28:15,000 --> 02:28:17,000
跨函数乃至于跨模块的测试

4339
02:28:18,000 --> 02:28:19,000
嗯哼

4340
02:28:19,000 --> 02:28:21,000
ZOP 有一个测试方向就是干这个

4341
02:28:21,000 --> 02:28:23,000
哈哈哈哈

4342
02:28:23,000 --> 02:28:27,000
不过这个这个 Dock Test 其实有点像那个叫什么

4343
02:28:27,000 --> 02:28:30,000
Donna Crew Knows

4344
02:28:30,000 --> 02:28:31,000
那个叫 Literate Programming

4345
02:28:31,000 --> 02:28:33,000
翻过来做

4346
02:28:33,000 --> 02:28:34,000
那段 programming 怎么翻

4347
02:28:34,000 --> 02:28:35,000
叫什么来的

4348
02:28:35,000 --> 02:28:39,000
文化变成文艺变成文青变成

4349
02:28:39,000 --> 02:28:40,000
哈哈

4350
02:28:41,000 --> 02:28:43,000
我不知道这个怎么翻

4351
02:28:43,000 --> 02:28:44,000
我怎么翻

4352
02:28:44,000 --> 02:28:46,000
就他那个东西就是说其实就是在

4353
02:28:46,000 --> 02:28:49,000
就是其实一直在写注释

4354
02:28:50,000 --> 02:28:53,000
对代码就是穿插在用写注释方式来写代码

4355
02:28:53,000 --> 02:28:54,000
没错

4356
02:28:54,000 --> 02:28:55,000
然后这个就是有点反过来

4357
02:28:55,000 --> 02:28:58,000
就是说呃你也主要是写代码

4358
02:28:58,000 --> 02:29:00,000
但是注释呢是对代码的一个解释

4359
02:29:00,000 --> 02:29:04,000
然后这个解释还是可以还是可以执行的

4360
02:29:04,000 --> 02:29:05,000
这些还比较不错

4361
02:29:05,000 --> 02:29:06,000
对

4362
02:29:06,000 --> 02:29:08,000
最后一个问题就是呃

4363
02:29:08,000 --> 02:29:13,000
现在正夯的一个 functional programming 的概念

4364
02:29:13,000 --> 02:29:18,000
呃我们知道在敏捷方法崛起的过程中

4365
02:29:18,000 --> 02:29:20,000
其实基本上也就伴随了

4366
02:29:20,000 --> 02:29:24,000
伴随着面相对象这个思潮的崛起

4367
02:29:24,000 --> 02:29:28,000
呃基本上可以说如果没有面相对象理念的话

4368
02:29:28,000 --> 02:29:30,000
敏捷是完全实现不了的

4369
02:29:30,000 --> 02:29:34,000
那面相对象变成也已经被证明了

4370
02:29:34,000 --> 02:29:38,000
是更适合于写册式的一种方法

4371
02:29:38,000 --> 02:29:40,000
呃那我们可以把风状的好

4372
02:29:40,000 --> 02:29:42,000
风状的好吗

4373
02:29:42,000 --> 02:29:48,000
对呃面相对象可以保证你把系统的偶和度降到最低

4374
02:29:48,000 --> 02:29:50,000
嗯嗯

4375
02:29:50,000 --> 02:29:55,000
那么相同的问题我们可以套用在目前正夯的这个 functional programming 的概念上

4376
02:29:55,000 --> 02:29:59,000
呃 functional programming 适合写测试吗

4377
02:30:01,000 --> 02:30:03,000
其实我觉得还蛮合适的啊

4378
02:30:03,000 --> 02:30:05,000
因为怎么说呢

4379
02:30:05,000 --> 02:30:12,000
就是 functional programming 的一个思考就是说每一个函数的独立性很好

4380
02:30:12,000 --> 02:30:14,000
就是他至少就是在在

4381
02:30:15,000 --> 02:30:18,000
就是在原则上我们是鼓励每个函数是可以叫做

4382
02:30:18,000 --> 02:30:19,000
它是真的是一个函数对吧

4383
02:30:19,000 --> 02:30:22,000
所谓函数就是说它是确定数就确定数解

4384
02:30:22,000 --> 02:30:26,000
对 side side effect free 就是我确定一个数就确定一个数出了

4385
02:30:26,000 --> 02:30:28,000
这个时候你写测试就比较简单了

4386
02:30:28,000 --> 02:30:33,000
因为你不用考虑说你从某一种状态进入这个函数

4387
02:30:33,000 --> 02:30:36,000
或者进入一个过程的时候会得到一个一个解

4388
02:30:36,000 --> 02:30:38,000
但是你从另外一张的进入的时候得到另外一个解

4389
02:30:38,000 --> 02:30:41,000
就你这个这样的话你这个当然测试没法写了嘛

4390
02:30:41,000 --> 02:30:44,000
对吧你得去先叫 set up the environment

4391
02:30:44,000 --> 02:30:46,000
你得先设置这个环境才可以

4392
02:30:46,000 --> 02:30:50,000
但是如果是 fp 的话就不存在一个你这种造的写

4393
02:30:50,000 --> 02:30:52,000
什么说出给什么结果

4394
02:30:52,000 --> 02:30:55,000
你就可以马上把这个一堆的这个关系列出来

4395
02:30:55,000 --> 02:31:01,000
对所以这也就为我们提供另外一个拥抱函数变成的理由

4396
02:31:01,000 --> 02:31:03,000
就是对没错

4397
02:31:04,000 --> 02:31:07,000
测试好写没错测试好写

4398
02:31:07,000 --> 02:31:09,000
所以如果你们还没有接触还说变成的话

4399
02:31:09,000 --> 02:31:11,000
一定要去试试

4400
02:31:13,000 --> 02:31:15,000
对找工作很有帮助

4401
02:31:17,000 --> 02:31:18,000
可以瞬间提升

4402
02:31:19,000 --> 02:31:21,000
那什么来的逼格答应

4403
02:31:22,000 --> 02:31:23,000
提升内力吧应该是

4404
02:31:24,000 --> 02:31:26,000
这个逼格不逼格

4405
02:31:26,000 --> 02:31:26,000
何必逼格

4406
02:31:27,000 --> 02:31:29,000
写测试有什么逼格

4407
02:31:31,000 --> 02:31:32,000
说得也是

4408
02:31:32,000 --> 02:31:34,000
对真的往事只用 printf

4409
02:31:35,000 --> 02:31:38,000
来来来来验证自己

4410
02:31:38,000 --> 02:31:41,000
所以你现在只有 printf

4411
02:31:43,000 --> 02:31:46,000
我其实还是要解释一下

4412
02:31:46,000 --> 02:31:52,000
我之前写词的时候其实也已经有在用这个在写测试了

4413
02:31:52,000 --> 02:31:54,000
因为够它是随这个语言

4414
02:31:54,000 --> 02:31:56,000
它就自带一个比较好的统一的规范

4415
02:31:57,000 --> 02:32:00,000
就不用不用单独在学一个第三方的东西

4416
02:32:01,000 --> 02:32:02,000
其实写测试

4417
02:32:02,000 --> 02:32:04,000
却特别是单独测试的话还是挺方便的

4418
02:32:05,000 --> 02:32:06,000
就要承认一下

4419
02:32:06,000 --> 02:32:07,000
有时候还有点用

4420
02:32:08,000 --> 02:32:12,000
可能现在原设的一个思潮也是要越来越多的在原内部

4421
02:32:12,000 --> 02:32:15,000
集成一些比如说测试

4422
02:32:15,000 --> 02:32:16,000
比如说调试

4423
02:32:16,000 --> 02:32:17,000
这类的特技

4424
02:32:21,000 --> 02:32:22,000
OK

4425
02:32:22,000 --> 02:32:23,000
那好吧

4426
02:32:23,000 --> 02:32:24,000
今天就到这

4427
02:32:24,000 --> 02:32:31,000
您刚刚声明的是 ipm podcast 网络旗下的 it 技术主题娱乐节目内核

4428
02:32:31,000 --> 02:32:33,000
ipm 旗下的其他有点跑的看

4429
02:32:33,000 --> 02:32:35,000
包括 softcore 技术的节目

4430
02:32:35,000 --> 02:32:36,000
非语的技术与节目

4431
02:32:36,000 --> 02:32:37,000
it 公论

4432
02:32:37,000 --> 02:32:39,000
医疗主题节目太一来了

4433
02:32:39,000 --> 02:32:41,000
美食主题节目未知到

4434
02:32:41,000 --> 02:32:42,000
艺术节目流行通信

4435
02:32:42,000 --> 02:32:43,000
无主题节目无资源

4436
02:32:43,000 --> 02:32:44,000
故事主题节目

4437
02:32:44,000 --> 02:32:45,000
hissori

4438
02:32:45,000 --> 02:32:47,000
以及影像主题节目

4439
02:32:47,000 --> 02:32:48,000
影像

4440
02:32:48,000 --> 02:32:49,000
如果你喜欢我们的节目

4441
02:32:49,000 --> 02:32:52,000
欢迎你为我们的节目捐款

4442
02:32:52,000 --> 02:32:53,000
这款例子是

4443
02:32:54,000 --> 02:32:55,000
你可以把本节目再听一点

4444
02:32:55,000 --> 02:32:57,000
开头有讲

4445
02:32:58,000 --> 02:32:58,000
OK 了

4446
02:32:58,000 --> 02:33:00,000
这个要念是

4447
02:33:00,000 --> 02:33:02,000
carnalpanic.fm

4448
02:33:02,000 --> 02:33:02,000
写讲

4449
02:33:02,000 --> 02:33:03,000
donate

4450
02:33:03,000 --> 02:33:05,000
donate

4451
02:33:05,000 --> 02:33:06,000
好吧

4452
02:33:06,000 --> 02:33:11,000
要提醒大家也是不要加 https

4453
02:33:11,000 --> 02:33:11,000
这个

4454
02:33:11,000 --> 02:33:12,000
这个

4455
02:33:12,000 --> 02:33:12,000
防止

4456
02:33:12,000 --> 02:33:14,000
你发现它会跳转

4457
02:33:14,000 --> 02:33:14,000
无所谓

4458
02:33:14,000 --> 02:33:15,000
对

4459
02:33:15,000 --> 02:33:17,000
但是为了保证您安全

4460
02:33:17,000 --> 02:33:18,000
它会自动跳转一个

4461
02:33:18,000 --> 02:33:19,000
对

4462
02:33:19,000 --> 02:33:21,000
代 https 加密

4463
02:33:21,000 --> 02:33:23,000
代 https 加密

4464
02:33:23,000 --> 02:33:23,000
有点

4465
02:33:24,000 --> 02:33:25,000
OK

4466
02:33:26,000 --> 02:33:27,000
今天的节目就

4467
02:33:28,000 --> 02:33:29,000
大家聊

4468
02:33:29,000 --> 02:33:31,000
1.79 Gb

