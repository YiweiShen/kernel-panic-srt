1
00:00:00,000 --> 00:00:18,000
字兰字唱

2
00:00:18,000 --> 00:00:23,000
大家好 今天是 2018 年 1 月 9 号 字兰字唱的第 64 期

3
00:00:24,000 --> 00:00:26,000
也是那个恐慌第 49 期

4
00:00:27,000 --> 00:00:31,000
就是字兰字唱与内核恐慌的串台的第 67

5
00:00:31,000 --> 00:00:35,000
字兰字唱是全球首家用华语制作的自体版主题播客节目

6
00:00:35,000 --> 00:00:37,000
我是主播文川西半东一句 Eric

7
00:00:38,000 --> 00:00:41,000
我是主播黄浦江民秦真语 秦真语

8
00:00:42,000 --> 00:00:46,000
您正在收听 IT 技术的预露节目内核恐慌

9
00:00:46,000 --> 00:00:50,000
我号称 Hotcore 但是没有干活 想听听不想听听别听 我是无套

10
00:00:51,000 --> 00:00:52,000
是 Rail

11
00:00:52,000 --> 00:00:56,000
太好了 我们又来串台了 2018 年新年快乐

12
00:00:57,000 --> 00:00:58,000
新年快乐

13
00:00:58,000 --> 00:01:03,000
怎么样 你在舞蹈里在瑞士滑雪还开心吗

14
00:01:04,000 --> 00:01:06,000
挺好的 这一次滑了非常爽

15
00:01:06,000 --> 00:01:09,000
而且我们赶上了仅有的两个好天气

16
00:01:09,000 --> 00:01:12,000
然后回来之后就完全完淡了

17
00:01:12,000 --> 00:01:14,000
下雨了 把那个雪都冲了 乱七八糟了

18
00:01:16,000 --> 00:01:17,000
你们怎么过来

19
00:01:17,000 --> 00:01:20,000
我回家了 我好久没回家了

20
00:01:20,000 --> 00:01:23,000
我十个三年回到了文川西半

21
00:01:24,000 --> 00:01:25,000
恭喜

22
00:01:25,000 --> 00:01:27,000
你是查祖父查了怎么样

23
00:01:28,000 --> 00:01:29,000
任祖归宗

24
00:01:31,000 --> 00:01:32,000
一锦环香

25
00:01:32,000 --> 00:01:33,000
我不发推了

26
00:01:34,000 --> 00:01:37,000
因为我上次看那个祖谱是我高中的时候

27
00:01:37,000 --> 00:01:39,000
特地这次又重新再翻出来

28
00:01:40,000 --> 00:01:42,000
原来我们那个是一个箱子 十二本

29
00:01:43,000 --> 00:01:48,000
但是里面大概就是四五本都是人的名字

30
00:01:48,000 --> 00:01:49,000
家谱

31
00:01:49,000 --> 00:01:50,000
然后家谱都是这样的

32
00:01:50,000 --> 00:01:53,000
四五本都是那个坟墓

33
00:01:53,000 --> 00:01:56,000
就是祖先的坟在哪座山里面都是那些东西

34
00:01:56,000 --> 00:02:00,000
然后只有真正实质性的东西就是只有两本

35
00:02:00,000 --> 00:02:03,000
然后就翻了一下家里的名声啊

36
00:02:03,000 --> 00:02:04,000
什么的 几八糟的

37
00:02:04,000 --> 00:02:07,000
我终于查到了我们老家那个字贝

38
00:02:08,000 --> 00:02:10,000
你们有字贝吗 就起名字的时候

39
00:02:11,000 --> 00:02:13,000
你应该是排什么贝分

40
00:02:13,000 --> 00:02:14,000
对

41
00:02:14,000 --> 00:02:16,000
就是排一个字贝

42
00:02:16,000 --> 00:02:18,000
然后我们那个字贝理论上讲

43
00:02:18,000 --> 00:02:21,000
应该是可以连成一首诗的就是那样子的

44
00:02:21,000 --> 00:02:23,000
我终于查到那首诗

45
00:02:24,000 --> 00:02:26,000
狗立国家生死一生

46
00:02:29,000 --> 00:02:30,000
不会用这么缠用的

47
00:02:31,000 --> 00:02:33,000
其实没有你想象的那么高端

48
00:02:33,000 --> 00:02:37,000
然后就是什么礼艺传家宝 诗书 预后针之类的

49
00:02:37,000 --> 00:02:38,000
就那种东西

50
00:02:39,000 --> 00:02:40,000
OK

51
00:02:40,000 --> 00:02:41,000
但你是单名啊

52
00:02:41,000 --> 00:02:43,000
所以你就不按那个来起名字

53
00:02:43,000 --> 00:02:44,000
对

54
00:02:44,000 --> 00:02:46,000
咱们这一代其实全都没有了

55
00:02:46,000 --> 00:02:48,000
就大部分都没有了

56
00:02:48,000 --> 00:02:49,000
有这样的规定

57
00:02:49,000 --> 00:02:52,000
但是你是不是按规定词呢

58
00:02:52,000 --> 00:02:54,000
就是各家各房

59
00:02:54,000 --> 00:02:57,000
所以 Ryo 你是光字贝的

60
00:02:57,000 --> 00:02:58,000
对啊

61
00:02:58,000 --> 00:03:00,000
哇 你们都是那个名门厨师

62
00:03:02,000 --> 00:03:04,000
我爷爷那边往上数

63
00:03:04,000 --> 00:03:07,000
三倍就不知道谁是谁

64
00:03:08,000 --> 00:03:09,000
你是真正的贝

65
00:03:09,000 --> 00:03:12,000
下一代应该是煮的杂的

66
00:03:14,000 --> 00:03:15,000
哈哈哈

67
00:03:18,000 --> 00:03:19,000
等一下那个什么

68
00:03:19,000 --> 00:03:21,000
烹饪方法的这个顺序怎么来的

69
00:03:21,000 --> 00:03:22,000
将暴自卑

70
00:03:22,000 --> 00:03:24,000
从草字开始吗

71
00:03:26,000 --> 00:03:27,000
孤老自卑

72
00:03:28,000 --> 00:03:29,000
还是可恶

73
00:03:31,000 --> 00:03:33,000
阿拉 这位叫阿拉 香港

74
00:03:33,000 --> 00:03:34,000
阿拉斯川

75
00:03:35,000 --> 00:03:36,000
阿拉斯川自卑

76
00:03:38,000 --> 00:03:39,000
不扯了

77
00:03:40,000 --> 00:03:42,000
真语新年怎么过的

78
00:03:43,000 --> 00:03:44,000
呃 我

79
00:03:44,000 --> 00:03:45,000
我就在上海附近

80
00:03:45,000 --> 00:03:47,000
我元旦去了下杭州

81
00:03:47,000 --> 00:03:49,000
对 我就参观了一下

82
00:03:49,000 --> 00:03:52,000
我参观下中国美院传说中

83
00:03:52,000 --> 00:03:54,000
王树先生的那个作品群

84
00:03:54,000 --> 00:03:55,000
那个建筑是吧

85
00:03:55,000 --> 00:03:57,000
中美人建筑好像挺有意思的

86
00:03:58,000 --> 00:04:00,000
对 就是那个向山校区的

87
00:04:00,000 --> 00:04:02,000
是王树的作品群

88
00:04:02,000 --> 00:04:04,000
整个校区都是他一手搞的

89
00:04:05,000 --> 00:04:07,000
Ryo 就一直待在深圳吗

90
00:04:08,000 --> 00:04:09,000
对

91
00:04:09,000 --> 00:04:12,000
新年就是在家里休假

92
00:04:12,000 --> 00:04:13,000
因为上个月

93
00:04:13,000 --> 00:04:15,000
12 月都一直在出差

94
00:04:15,000 --> 00:04:16,000
挺累的

95
00:04:16,000 --> 00:04:17,000
然后就在家里休息了一段时间

96
00:04:17,000 --> 00:04:18,000
好吧

97
00:04:21,000 --> 00:04:23,000
那看来大家休息都挺好

98
00:04:23,000 --> 00:04:24,000
我们这里的话

99
00:04:24,000 --> 00:04:25,000
因为是串台节目嘛

100
00:04:25,000 --> 00:04:27,000
就不说太多的新闻了

101
00:04:27,000 --> 00:04:28,000
但是我还是忍不住想说

102
00:04:28,000 --> 00:04:30,000
一 两条

103
00:04:30,000 --> 00:04:31,000
一条呢是

104
00:04:32,000 --> 00:04:33,000
古德隆查普夫

105
00:04:33,000 --> 00:04:36,000
老奶奶的字体终于被数字化了

106
00:04:36,000 --> 00:04:38,000
大家知道查普夫先生

107
00:04:38,000 --> 00:04:40,000
但是查普夫夫人

108
00:04:40,000 --> 00:04:41,000
其实也是一位

109
00:04:41,000 --> 00:04:43,000
特别有名的书法家

110
00:04:43,000 --> 00:04:45,000
他的名字其实叫

111
00:04:45,000 --> 00:04:47,000
古德隆查普夫夫夫

112
00:04:47,000 --> 00:04:48,000
Hesse

113
00:04:48,000 --> 00:04:49,000
Hesse 其实是他的

114
00:04:49,000 --> 00:04:50,000
就是娘家姓是吧

115
00:04:50,000 --> 00:04:51,000
应该

116
00:04:51,000 --> 00:04:52,000
如果他有贵族风力

117
00:04:52,000 --> 00:04:54,000
他有贵族头衔的话

118
00:04:54,000 --> 00:04:55,000
很有可能是一会

119
00:04:55,000 --> 00:04:57,000
会延续下来

120
00:04:58,000 --> 00:04:59,000
不管是男女

121
00:04:59,000 --> 00:05:01,000
哪怕接了婚也会延续

122
00:05:02,000 --> 00:05:06,000
他是 1918 年的 1 月 2 号的生日

123
00:05:06,000 --> 00:05:09,000
所以他刚刚迎来他的百年诞生

124
00:05:10,000 --> 00:05:12,000
然后为了庆祝他的百年生日

125
00:05:12,000 --> 00:05:15,000
他的那款新字体

126
00:05:15,000 --> 00:05:17,000
终于他的那款字体

127
00:05:17,000 --> 00:05:19,000
终于被数码化了

128
00:05:19,000 --> 00:05:20,000
这个字体的名字

129
00:05:20,000 --> 00:05:22,000
就叫 Hesse Antikua

130
00:05:22,000 --> 00:05:23,000
德语里面

131
00:05:23,000 --> 00:05:25,000
Antikua 是

132
00:05:25,000 --> 00:05:26,000
相当于称心体的意思

133
00:05:26,000 --> 00:05:27,000
还是

134
00:05:27,000 --> 00:05:29,000
就是古典体

135
00:05:29,000 --> 00:05:31,000
Antikuan is 古典

136
00:05:33,000 --> 00:05:35,000
然后大家可以去看一下

137
00:05:35,000 --> 00:05:36,000
我们的链接

138
00:05:36,000 --> 00:05:38,000
在 Fontes Shop 里面

139
00:05:39,000 --> 00:05:41,000
这次负责数码化的

140
00:05:41,000 --> 00:05:44,000
这位小帅哥

141
00:05:44,000 --> 00:05:47,000
叫 Frendinand Ulrich

142
00:05:47,000 --> 00:05:49,000
我刚好 10 月份的时候碰到他

143
00:05:49,000 --> 00:05:51,000
Frendinand 是吗

144
00:05:51,000 --> 00:05:54,000
Ferdinand Ulrich

145
00:05:54,000 --> 00:05:56,000
Urlrich 是吧

146
00:05:56,000 --> 00:05:58,000
Urlrich

147
00:05:58,000 --> 00:06:00,000
Frendinand Ulrich

148
00:06:01,000 --> 00:06:02,000
念起来比较扯

149
00:06:02,000 --> 00:06:04,000
有点难念了

150
00:06:04,000 --> 00:06:05,000
对

151
00:06:07,000 --> 00:06:10,000
他现在正在雷丁读博士学位

152
00:06:10,000 --> 00:06:12,000
一直跟着 Eric Spickerman

153
00:06:12,000 --> 00:06:16,000
在活泽印刷的工作室

154
00:06:16,000 --> 00:06:18,000
叫 P 98 A

155
00:06:18,000 --> 00:06:20,000
我们 10 月份 Type Tour

156
00:06:20,000 --> 00:06:22,000
和立志坚冠一起去

157
00:06:22,000 --> 00:06:24,000
去访问 P 98 A 的时候

158
00:06:24,000 --> 00:06:26,000
刚好他在工作室里面

159
00:06:26,000 --> 00:06:28,000
所以他带我们到工作室

160
00:06:28,000 --> 00:06:29,000
走了一圈

161
00:06:30,000 --> 00:06:31,000
OK

162
00:06:31,000 --> 00:06:32,000
感觉如何

163
00:06:32,000 --> 00:06:33,000
感觉如何

164
00:06:33,000 --> 00:06:34,000
特别好

165
00:06:34,000 --> 00:06:36,000
他本人是一个

166
00:06:36,000 --> 00:06:38,000
身材特别高大

167
00:06:38,000 --> 00:06:39,000
将近 2 米

168
00:06:39,000 --> 00:06:40,000
我估计他的身高

169
00:06:40,000 --> 00:06:41,000
真的

170
00:06:41,000 --> 00:06:42,000
对

171
00:06:42,000 --> 00:06:43,000
各的特别高

172
00:06:44,000 --> 00:06:46,000
那时候他刚开完会

173
00:06:46,000 --> 00:06:47,000
回来

174
00:06:47,000 --> 00:06:48,000
特别困

175
00:06:48,000 --> 00:06:51,000
但是拼了疲劳的身体

176
00:06:51,000 --> 00:06:53,000
来带我们看一下

177
00:06:53,000 --> 00:06:55,000
因为他工作室

178
00:06:55,000 --> 00:06:57,000
更多的是木火字

179
00:06:57,000 --> 00:06:58,000
相对来讲

180
00:06:58,000 --> 00:07:00,000
比较大的火字

181
00:07:00,000 --> 00:07:01,000
大家知道吗

182
00:07:01,000 --> 00:07:02,000
在欧洲的话

183
00:07:02,000 --> 00:07:04,000
小的签字是用金属的

184
00:07:04,000 --> 00:07:06,000
那大的都是用木火字

185
00:07:06,000 --> 00:07:08,000
他们在那边印了

186
00:07:08,000 --> 00:07:09,000
很多什么海豹

187
00:07:09,000 --> 00:07:10,000
什么的

188
00:07:12,000 --> 00:07:13,000
OK

189
00:07:13,000 --> 00:07:15,000
这款字已经在线上了

190
00:07:15,000 --> 00:07:17,000
所以大家有空可以去看一下

191
00:07:17,000 --> 00:07:19,000
非常符合

192
00:07:19,000 --> 00:07:20,000
因为

193
00:07:20,000 --> 00:07:21,000
郭德龙

194
00:07:21,000 --> 00:07:25,000
他本人是书法家

195
00:07:25,000 --> 00:07:27,000
可以看一下

196
00:07:27,000 --> 00:07:29,000
其实很有

197
00:07:29,000 --> 00:07:30,000
丢通

198
00:07:30,000 --> 00:07:32,000
就是他原来第一款

199
00:07:32,000 --> 00:07:33,000
字体的感觉

200
00:07:33,000 --> 00:07:35,000
那这次的复刻出来的数目

201
00:07:35,000 --> 00:07:38,000
版本也是没有小写字母

202
00:07:38,000 --> 00:07:41,000
只有大写字母和小型大写字母

203
00:07:41,000 --> 00:07:43,000
这样拍出来非常古典的感觉

204
00:07:43,000 --> 00:07:45,000
就非常符合安提卡这个名字

205
00:07:47,000 --> 00:07:49,000
所以是

206
00:07:49,000 --> 00:07:51,000
他开始做了

207
00:07:51,000 --> 00:07:54,000
自己就是拿来做展示用的

208
00:07:54,000 --> 00:07:55,000
对

209
00:07:56,000 --> 00:07:57,000
雕刻的什么

210
00:07:57,000 --> 00:07:59,000
什么碑文字体感觉

211
00:07:59,000 --> 00:08:00,000
对

212
00:08:02,000 --> 00:08:03,000
这款字

213
00:08:03,000 --> 00:08:05,000
他自己其实当年很早了

214
00:08:05,000 --> 00:08:07,000
就原来是有签字版本的

215
00:08:07,000 --> 00:08:10,000
但是就一直都没有数码版

216
00:08:12,000 --> 00:08:13,000
明白

217
00:08:14,000 --> 00:08:17,000
那我们在此也遥住

218
00:08:17,000 --> 00:08:19,000
差不多夫人身体健康

219
00:08:20,000 --> 00:08:21,000
活了 100 岁

220
00:08:21,000 --> 00:08:22,000
可以继续活下去

221
00:08:22,000 --> 00:08:23,000
对

222
00:08:23,000 --> 00:08:24,000
一定要好好活下去

223
00:08:24,000 --> 00:08:25,000
好

224
00:08:25,000 --> 00:08:26,000
下面一条消息

225
00:08:26,000 --> 00:08:29,000
就热烈庆祝新版的 ISOIC 的

226
00:08:29,000 --> 00:08:30,000
10646 发布了

227
00:08:31,000 --> 00:08:33,000
这次发布的时间的特别有意思

228
00:08:33,000 --> 00:08:35,000
是在 12 月 24 号

229
00:08:35,000 --> 00:08:37,000
也就是圣诞期前页

230
00:08:37,000 --> 00:08:40,000
那这次发布的是第五个版本

231
00:08:40,000 --> 00:08:42,000
其实这次发布的一个目的

232
00:08:42,000 --> 00:08:44,000
就是为了和半年前的发布的

233
00:08:44,000 --> 00:08:46,000
那个 unicode 的 10.0 的版本

234
00:08:46,000 --> 00:08:47,000
进行一个同步

235
00:08:48,000 --> 00:08:50,000
如果有收听我们上次

236
00:08:50,000 --> 00:08:53,000
就是和他发布的一个新版本

237
00:08:53,000 --> 00:08:54,000
这次就是

238
00:08:55,000 --> 00:08:57,000
梁海来参加的那期

239
00:08:57,000 --> 00:08:59,000
和大家介绍 unicode 的节目

240
00:08:59,000 --> 00:09:03,000
就知道 unicode 和 ISO 的 10646

241
00:09:03,000 --> 00:09:05,000
是有一个非常复杂的

242
00:09:05,000 --> 00:09:06,000
一个同步的关系

243
00:09:08,000 --> 00:09:11,000
因为两个文件是分别是两个组织

244
00:09:11,000 --> 00:09:14,000
所以它们并不是同步的

245
00:09:15,000 --> 00:09:18,000
unicode 是 10.0 就已经

246
00:09:18,000 --> 00:09:20,000
在大半年前就已经发布了

247
00:09:20,000 --> 00:09:22,000
这次就是落实到 ISO

248
00:09:22,000 --> 00:09:24,000
落实到 ISO 的 10646 发布以后

249
00:09:24,000 --> 00:09:26,000
这个就是变成

250
00:09:26,000 --> 00:09:28,000
因为 ISO 是国际标准组织

251
00:09:28,000 --> 00:09:30,000
国际标准组织

252
00:09:30,000 --> 00:09:33,000
那这个新的标准就是

253
00:09:33,000 --> 00:09:34,000
就是官方性的

254
00:09:34,000 --> 00:09:36,000
就会要由

255
00:09:36,000 --> 00:09:38,000
各国的标准化组织

256
00:09:38,000 --> 00:09:41,000
继续的来接受和在各国里面执行

257
00:09:44,000 --> 00:09:46,000
那实际内容其实就是

258
00:09:46,000 --> 00:09:49,000
跟那个 unicode 的 10.0 是差不多的

259
00:09:49,000 --> 00:09:52,000
有一些细细微的不同

260
00:09:52,000 --> 00:09:54,000
但是我觉得已经没有必要在节目里面讲了

261
00:09:54,000 --> 00:09:56,000
有兴趣的同学可以去看文档

262
00:10:00,000 --> 00:10:01,000
那好吧

263
00:10:01,000 --> 00:10:03,000
那我们是不是赶快可以进入正题了

264
00:10:06,000 --> 00:10:09,000
咱们捧根要热情一点好吗

265
00:10:09,000 --> 00:10:10,000
对呀

266
00:10:13,000 --> 00:10:14,000
你们都睡着了吗

267
00:10:14,000 --> 00:10:15,000
同学们

268
00:10:15,000 --> 00:10:16,000
新年第一次捧根

269
00:10:16,000 --> 00:10:17,000
你们这么

270
00:10:17,000 --> 00:10:19,000
今天有三个朋友

271
00:10:19,000 --> 00:10:21,000
他们在互相等

272
00:10:21,000 --> 00:10:22,000
好吧

273
00:10:22,000 --> 00:10:24,000
今天我们的主题是

274
00:10:24,000 --> 00:10:26,000
moji 再次拯救了世界

275
00:10:26,000 --> 00:10:28,000
其实

276
00:10:28,000 --> 00:10:30,000
上次我们其实

277
00:10:30,000 --> 00:10:32,000
自弹自串节目

278
00:10:32,000 --> 00:10:34,000
今天也是第六期了

279
00:10:34,000 --> 00:10:36,000
但是呢就是目前为止

280
00:10:36,000 --> 00:10:38,000
就是收听率和

281
00:10:38,000 --> 00:10:40,000
这个好评最高的

282
00:10:40,000 --> 00:10:42,000
还是那期关于 moji 的那期

283
00:10:42,000 --> 00:10:44,000
所以大家还是

284
00:10:44,000 --> 00:10:46,000
虽然看不到 moji 的本身

285
00:10:46,000 --> 00:10:47,000
希望在

286
00:10:47,000 --> 00:10:48,000
会很喜欢的 podcast

287
00:10:48,000 --> 00:10:49,000
没听到认识

288
00:10:49,000 --> 00:10:50,000
对

289
00:10:50,000 --> 00:10:52,000
但是呢其实上次呢

290
00:10:52,000 --> 00:10:54,000
我们也是觉得时间不够嘛

291
00:10:54,000 --> 00:10:56,000
然后 moji 其实背后还有很多

292
00:10:56,000 --> 00:10:58,000
更多的那个技术方面的东西

293
00:10:58,000 --> 00:11:00,000
还没有跟大家聊透

294
00:11:00,000 --> 00:11:02,000
所以我们今天决定再花一期的时间

295
00:11:02,000 --> 00:11:04,000
和大家聊 moji 背后的一些

296
00:11:04,000 --> 00:11:06,000
技术的内容

297
00:11:08,000 --> 00:11:10,000
那首先呢就是要跟大家

298
00:11:10,000 --> 00:11:12,000
扯一扯就是那个

299
00:11:12,000 --> 00:11:14,000
siren gate pairs 的事情

300
00:11:14,000 --> 00:11:16,000
这个东西

301
00:11:16,000 --> 00:11:18,000
就中文叫什么代理队是吗

302
00:11:18,000 --> 00:11:20,000
不知道怎么翻

303
00:11:20,000 --> 00:11:22,000
就姑且这么翻译吧

304
00:11:22,000 --> 00:11:24,000
你执意的话 siren gate 的就是代理嘛

305
00:11:24,000 --> 00:11:26,000
pairs 就是对嘛

306
00:11:26,000 --> 00:11:28,000
siren gate pairs

307
00:11:28,000 --> 00:11:30,000
因为最近啊就是

308
00:11:30,000 --> 00:11:32,000
在日本有人写的文章

309
00:11:32,000 --> 00:11:34,000
就就讲说哎呀

310
00:11:34,000 --> 00:11:36,000
感谢 moji

311
00:11:36,000 --> 00:11:38,000
加速了这个

312
00:11:38,000 --> 00:11:40,000
很多

313
00:11:40,000 --> 00:11:42,000
环境对这个代理队的

314
00:11:42,000 --> 00:11:44,000
支持

315
00:11:44,000 --> 00:11:46,000
说实话以前就是一直都有

316
00:11:46,000 --> 00:11:48,000
这个东西但是呢很多环境都支持的不好

317
00:11:48,000 --> 00:11:50,000
而且呢

318
00:11:50,000 --> 00:11:52,000
但是

319
00:11:52,000 --> 00:11:54,000
因为它并不是非常常用

320
00:11:54,000 --> 00:11:56,000
因为

321
00:11:56,000 --> 00:11:58,000
要使用这个代理队的那些字

322
00:11:58,000 --> 00:12:00,000
就是 unicode 那些字

323
00:12:00,000 --> 00:12:02,000
就你放在 UTF-16

324
00:12:02,000 --> 00:12:04,000
都是很后面就

325
00:12:04,000 --> 00:12:06,000
非常惨用的那些字

326
00:12:06,000 --> 00:12:08,000
所以呢其实你有 bug

327
00:12:08,000 --> 00:12:10,000
大家也不去修

328
00:12:10,000 --> 00:12:12,000
或者说有些 bug 根本就没有

329
00:12:12,000 --> 00:12:14,000
体现出来

330
00:12:14,000 --> 00:12:16,000
结果现在呢 moji 大家

331
00:12:16,000 --> 00:12:18,000
经常常用了大家发现哎呦

332
00:12:18,000 --> 00:12:20,000
我要赶快去能

333
00:12:20,000 --> 00:12:22,000
support 就支持 moji 才发现

334
00:12:22,000 --> 00:12:24,000
哎一些

335
00:12:24,000 --> 00:12:26,000
乱七八的东西都翻出来的

336
00:12:26,000 --> 00:12:28,000
所以我觉得还是

337
00:12:28,000 --> 00:12:30,000
有必要和大家再讲讲这个

338
00:12:30,000 --> 00:12:32,000
UTF-16 和这个 siren gate

339
00:12:32,000 --> 00:12:34,000
这个代理队的事情

340
00:12:34,000 --> 00:12:36,000
ok

341
00:12:36,000 --> 00:12:38,000
因为最早来讲的话

342
00:12:38,000 --> 00:12:40,000
就是首先 java

343
00:12:40,000 --> 00:12:42,000
javascript 和 windows 的 API

344
00:12:42,000 --> 00:12:44,000
好像都不支持吧

345
00:12:46,000 --> 00:12:48,000
因为最开始的时候是没有

346
00:12:48,000 --> 00:12:50,000
UTF-16 的最开始用的是那个 UCS

347
00:12:50,000 --> 00:12:52,000
就是最开始

348
00:12:52,000 --> 00:12:54,000
那个是早于 unicode 的标准的

349
00:12:54,000 --> 00:12:56,000
嗯

350
00:12:56,000 --> 00:12:58,000
实际上是个历史一路问题嘛

351
00:12:58,000 --> 00:13:00,000
对就是在 unicode

352
00:13:00,000 --> 00:13:02,000
正式这个标准出现之前

353
00:13:02,000 --> 00:13:04,000
但是就已经有这么一个

354
00:13:04,000 --> 00:13:06,000
需求的要达多个文字了嘛

355
00:13:06,000 --> 00:13:08,000
嗯就是对于宽字解的

356
00:13:08,000 --> 00:13:10,000
需求导致那个

357
00:13:10,000 --> 00:13:12,000
其实跟 GPR 32 那个

358
00:13:12,000 --> 00:13:14,000
历史言原刘是一样的

359
00:13:14,000 --> 00:13:16,000
对对对就实践早于规范

360
00:13:16,000 --> 00:13:18,000
对

361
00:13:18,000 --> 00:13:20,000
windows API

362
00:13:20,000 --> 00:13:22,000
直到现在都是两套

363
00:13:22,000 --> 00:13:24,000
一套是宽字解的

364
00:13:24,000 --> 00:13:26,000
然后是宅字解的

365
00:13:26,000 --> 00:13:28,000
一个是

366
00:13:28,000 --> 00:13:30,000
一个 w 解尾

367
00:13:30,000 --> 00:13:32,000
另外一个是 c 解尾吧

368
00:13:32,000 --> 00:13:34,000
这方面代表 wide and cracker

369
00:13:34,000 --> 00:13:36,000
嗯

370
00:13:36,000 --> 00:13:38,000
这个宽字解这个

371
00:13:38,000 --> 00:13:40,000
是不是 windows 他们用的这个

372
00:13:40,000 --> 00:13:42,000
数语啊

373
00:13:42,000 --> 00:13:44,000
对所以就就就就就我刚刚

374
00:13:44,000 --> 00:13:46,000
API 的那个

375
00:13:46,000 --> 00:13:48,000
如果有一个 API 比如说这个 API 的 OpenWindow

376
00:13:48,000 --> 00:13:50,000
然后这个 API 它实际上只是一个

377
00:13:50,000 --> 00:13:52,000
这个函数是名实上是虚的

378
00:13:52,000 --> 00:13:54,000
然后实际的实现有俩

379
00:13:54,000 --> 00:13:56,000
一个是 OpenWindow 比如说 underline

380
00:13:56,000 --> 00:13:58,000
c

381
00:13:58,000 --> 00:14:00,000
然后这个就是用这个就是标准的

382
00:14:00,000 --> 00:14:02,000
asky 的

383
00:14:02,000 --> 00:14:04,000
OpenWindow underline

384
00:14:04,000 --> 00:14:06,000
然后这个 w 代表 w 就是

385
00:14:06,000 --> 00:14:08,000
wide 就是就是宽字解

386
00:14:08,000 --> 00:14:10,000
甚至什么 pizen 之类的也是

387
00:14:10,000 --> 00:14:12,000
我不知道是不是受到影响

388
00:14:12,000 --> 00:14:14,000
也有一个什么宽字解版本

389
00:14:14,000 --> 00:14:16,000
或者是

390
00:14:16,000 --> 00:14:18,000
对那个 pizen 2

391
00:14:18,000 --> 00:14:20,000
的时候它是可以让你

392
00:14:20,000 --> 00:14:22,000
编译的时候选是

393
00:14:22,000 --> 00:14:24,000
mode is ucs 2 还是 ucs 4

394
00:14:24,000 --> 00:14:26,000
对

395
00:14:26,000 --> 00:14:28,000
所以呢现在就

396
00:14:28,000 --> 00:14:30,000
其实还是要跟大家拯立一下吧

397
00:14:30,000 --> 00:14:32,000
就是首先是有 ucs 2

398
00:14:32,000 --> 00:14:34,000
ucs 4

399
00:14:34,000 --> 00:14:36,000
对吧然后呢

400
00:14:36,000 --> 00:14:38,000
这一头呢有 utf 8

401
00:14:38,000 --> 00:14:40,000
utf 16 和 utf 32

402
00:14:40,000 --> 00:14:42,000
对

403
00:14:42,000 --> 00:14:44,000
对然后他们的对应关系

404
00:14:44,000 --> 00:14:46,000
是 ucs 2 是 utf 16 的一个

405
00:14:46,000 --> 00:14:48,000
一个字集

406
00:14:48,000 --> 00:14:50,000
然后 utf 4

407
00:14:50,000 --> 00:14:52,000
是和 utf 32

408
00:14:52,000 --> 00:14:54,000
是价的

409
00:14:54,000 --> 00:14:56,000
嗯

410
00:14:56,000 --> 00:14:58,000
然后 utf 8 是另外一个东西

411
00:14:58,000 --> 00:15:00,000
对

412
00:15:00,000 --> 00:15:02,000
就是很早很早以前

413
00:15:02,000 --> 00:15:04,000
都是单字解后来发现单字解

414
00:15:04,000 --> 00:15:06,000
不能用了就大家用双字解

415
00:15:06,000 --> 00:15:08,000
然后 ucs 2

416
00:15:08,000 --> 00:15:10,000
是固定双字解对吧

417
00:15:10,000 --> 00:15:12,000
对对固定的啊

418
00:15:12,000 --> 00:15:14,000
所有东西都是用两个字解来表示

419
00:15:14,000 --> 00:15:16,000
双字解表示结果发现

420
00:15:16,000 --> 00:15:18,000
这肯定不够用啊

421
00:15:18,000 --> 00:15:20,000
所以把这个 ucs 2

422
00:15:20,000 --> 00:15:22,000
他们以为够了但其实

423
00:15:22,000 --> 00:15:24,000
怎么可能够用

424
00:15:24,000 --> 00:15:26,000
你想

425
00:15:26,000 --> 00:15:28,000
这一直失败了

426
00:15:28,000 --> 00:15:30,000
2 的 16 字方的话

427
00:15:30,000 --> 00:15:32,000
才多少

428
00:15:32,000 --> 00:15:34,000
才 65536

429
00:15:34,000 --> 00:15:36,000
所以这个就所谓的

430
00:15:36,000 --> 00:15:38,000
我们在 unicode 里面

431
00:15:38,000 --> 00:15:40,000
百位置的话就是基本多文种平面

432
00:15:40,000 --> 00:15:42,000
嗯

433
00:15:42,000 --> 00:15:44,000
所以在那时候

434
00:15:44,000 --> 00:15:46,000
才 1991 年的时候

435
00:15:46,000 --> 00:15:48,000
就所谓的我们

436
00:15:48,000 --> 00:15:50,000
第 0 的平面嘛

437
00:15:50,000 --> 00:15:52,000
平面分 0,1,2,3,4,5 好多个面嘛

438
00:15:52,000 --> 00:15:54,000
第 0 个平面最基本的那个面

439
00:15:54,000 --> 00:15:56,000
这些大位肯定是不够用的呀

440
00:15:56,000 --> 00:15:58,000
但是当时觉得够用

441
00:15:58,000 --> 00:16:00,000
然后呢就用了一个固定的双字解的

442
00:16:00,000 --> 00:16:02,000
就我们现在叫的 ucs 2

443
00:16:02,000 --> 00:16:04,000
然后发现不够用的怎么办呢

444
00:16:04,000 --> 00:16:06,000
就是跟他去扩展

445
00:16:06,000 --> 00:16:08,000
这个扩展就特别

446
00:16:08,000 --> 00:16:10,000
特别坑就开始用了一个 utf 16

447
00:16:10,000 --> 00:16:12,000
就是

448
00:16:12,000 --> 00:16:14,000
它是个变长的对吧

449
00:16:14,000 --> 00:16:16,000
呃

450
00:16:16,000 --> 00:16:18,000
因为 16 是

451
00:16:18,000 --> 00:16:20,000
大部分是定长的

452
00:16:20,000 --> 00:16:22,000
对大部分是定长的

453
00:16:22,000 --> 00:16:24,000
它的我们常用的那部分就是 ucs 2 嘛

454
00:16:24,000 --> 00:16:26,000
就是定长两个字解

455
00:16:26,000 --> 00:16:28,000
但是它留了一个刚刚讲那个

456
00:16:28,000 --> 00:16:30,000
serigate pair 代理队的方式

457
00:16:30,000 --> 00:16:32,000
来支持一个扩展

458
00:16:32,000 --> 00:16:34,000
让它变成一个更长的支持

459
00:16:34,000 --> 00:16:36,000
serigate

460
00:16:36,000 --> 00:16:38,000
主要是带运嘛

461
00:16:38,000 --> 00:16:40,000
我需要这个东西

462
00:16:40,000 --> 00:16:42,000
然后我需要这个东西

463
00:16:42,000 --> 00:16:44,000
但是我自己干不出来

464
00:16:44,000 --> 00:16:46,000
所以我要找别的东西来

465
00:16:46,000 --> 00:16:48,000
帮我生出来

466
00:16:48,000 --> 00:16:50,000
这种感觉

467
00:16:50,000 --> 00:16:52,000
我还听起来

468
00:16:52,000 --> 00:16:54,000
serigate 这个词

469
00:16:54,000 --> 00:16:56,000
因为它没有用 agent

470
00:16:56,000 --> 00:16:58,000
或者是 broker 之类

471
00:16:58,000 --> 00:17:00,000
serigate

472
00:17:00,000 --> 00:17:02,000
serigate 这个词最常见的不就是带运嘛

473
00:17:02,000 --> 00:17:04,000
嗯

474
00:17:04,000 --> 00:17:06,000
是的

475
00:17:06,000 --> 00:17:08,000
呃因为呢

476
00:17:08,000 --> 00:17:10,000
我们大部分常用的 moji

477
00:17:10,000 --> 00:17:12,000
就是比如说大家想象的

478
00:17:12,000 --> 00:17:14,000
就是比如说那个脸蛋

479
00:17:14,000 --> 00:17:16,000
笑脸啊那些 moji

480
00:17:16,000 --> 00:17:18,000
原来排的马位

481
00:17:18,000 --> 00:17:20,000
都不在这个基本多文种

482
00:17:20,000 --> 00:17:22,000
平面

483
00:17:22,000 --> 00:17:24,000
而都在第一平面上

484
00:17:24,000 --> 00:17:26,000
所以呢如果按那个 unicode

485
00:17:26,000 --> 00:17:28,000
马位的话大家可以看都是在

486
00:17:28,000 --> 00:17:30,000
10000000

487
00:17:30,000 --> 00:17:32,000
就五位数了都已经

488
00:17:32,000 --> 00:17:34,000
嗯嗯因此呢

489
00:17:34,000 --> 00:17:36,000
如果用普通的那个 UCCS 2

490
00:17:36,000 --> 00:17:38,000
是没办法弄的

491
00:17:38,000 --> 00:17:40,000
双字节是没办法弄的

492
00:17:40,000 --> 00:17:42,000
那就要用变长

493
00:17:42,000 --> 00:17:44,000
那在 UTF 16

494
00:17:44,000 --> 00:17:46,000
里面呢就要通过这个

495
00:17:46,000 --> 00:17:48,000
带运的 serigate pairs

496
00:17:48,000 --> 00:17:50,000
就带里对

497
00:17:50,000 --> 00:17:52,000
去用这个

498
00:17:52,000 --> 00:17:54,000
零时的两个

499
00:17:54,000 --> 00:17:56,000
组合去

500
00:17:56,000 --> 00:17:58,000
给它拓展

501
00:17:58,000 --> 00:18:00,000
就是

502
00:18:00,000 --> 00:18:02,000
这也不叫拓展这叫什么呀

503
00:18:02,000 --> 00:18:04,000
就带一替成就是

504
00:18:04,000 --> 00:18:06,000
换成其他的那个

505
00:18:06,000 --> 00:18:08,000
带嘛用两个字节

506
00:18:08,000 --> 00:18:10,000
加起来

507
00:18:10,000 --> 00:18:12,000
Limo on us

508
00:18:12,000 --> 00:18:14,000
所以这样就说

509
00:18:14,000 --> 00:18:16,000
当他这个字

510
00:18:16,000 --> 00:18:18,000
马位是在基本

511
00:18:18,000 --> 00:18:20,000
在基本的多文种

512
00:18:20,000 --> 00:18:22,000
平面的话他就直接用

513
00:18:22,000 --> 00:18:24,000
他就不用这样搞来搞去的嘛

514
00:18:24,000 --> 00:18:26,000
就是超过这平面了他没办法弄了

515
00:18:26,000 --> 00:18:28,000
所以他就开始用带里对了

516
00:18:28,000 --> 00:18:30,000
所以这样一个结果就变成 UTF 16 的话

517
00:18:30,000 --> 00:18:32,000
它就是一个变长的东西嘛

518
00:18:32,000 --> 00:18:34,000
它可能是单字节也可能是

519
00:18:34,000 --> 00:18:36,000
双字节也可能是四字节

520
00:18:36,000 --> 00:18:38,000
如果你要用后面那些超

521
00:18:38,000 --> 00:18:40,000
超过那些基本文件没有范围的东西

522
00:18:40,000 --> 00:18:42,000
结果呢 MOD 全部都是

523
00:18:42,000 --> 00:18:44,000
超过范围的

524
00:18:44,000 --> 00:18:46,000
所以你用如果你想用 MOD 的

525
00:18:46,000 --> 00:18:48,000
马位那你变吧如果又都是

526
00:18:48,000 --> 00:18:50,000
UTF 16 的话你就必须

527
00:18:50,000 --> 00:18:52,000
要用这个带里对

528
00:18:52,000 --> 00:18:54,000
对

529
00:18:54,000 --> 00:18:56,000
然后所以带里对

530
00:18:56,000 --> 00:18:58,000
他们他们就就讲对 UTF 16

531
00:18:58,000 --> 00:19:00,000
为什么要搞个这么复杂的机制

532
00:19:00,000 --> 00:19:02,000
他不是他这个复杂性是

533
00:19:02,000 --> 00:19:04,000
来自于历史

534
00:19:04,000 --> 00:19:06,000
他不是一开始就要想

535
00:19:06,000 --> 00:19:08,000
他本来还不想的嘛

536
00:19:08,000 --> 00:19:10,000
UTF 16 觉得够用了然后不够用的

537
00:19:10,000 --> 00:19:12,000
只能修修补补又不能大改吧

538
00:19:12,000 --> 00:19:14,000
就只能在 UTF 16

539
00:19:14,000 --> 00:19:16,000
上做走文章搞出这么一个

540
00:19:16,000 --> 00:19:18,000
混合的一个东西

541
00:19:18,000 --> 00:19:20,000
对一个怪胎来

542
00:19:20,000 --> 00:19:22,000
而且我觉得这还会有个问题

543
00:19:22,000 --> 00:19:24,000
你说照现在这个以某几个帧数

544
00:19:24,000 --> 00:19:26,000
我觉得四字节很快也不够用了吧

545
00:19:26,000 --> 00:19:28,000
四字节不至于吧

546
00:19:28,000 --> 00:19:30,000
我觉得四字节够用

547
00:19:30,000 --> 00:19:32,000
应该够

548
00:19:32,000 --> 00:19:34,000
四字节就多少也就猜

549
00:19:34,000 --> 00:19:36,000
四字节很多了够啊

550
00:19:36,000 --> 00:19:38,000
还好

551
00:19:38,000 --> 00:19:40,000
还早是吧

552
00:19:40,000 --> 00:19:42,000
还早的呢

553
00:19:42,000 --> 00:19:44,000
好吧

554
00:19:44,000 --> 00:19:46,000
但是如果大家都用 UCS

555
00:19:46,000 --> 00:19:48,000
四和或者都用 UTF 32 的话

556
00:19:48,000 --> 00:19:50,000
就所有的东西

557
00:19:50,000 --> 00:19:52,000
都用四字节都好浪费嘛不是

558
00:19:52,000 --> 00:19:54,000
对

559
00:19:54,000 --> 00:19:56,000
就是

560
00:19:56,000 --> 00:19:58,000
所以大家想来想去

561
00:19:58,000 --> 00:20:00,000
大家还是用 UTF 8 吧

562
00:20:00,000 --> 00:20:02,000
大家都来用 UTF 8 吧

563
00:20:02,000 --> 00:20:04,000
这个世界都没好

564
00:20:04,000 --> 00:20:06,000
UTF 8 也比较浪费啊

565
00:20:06,000 --> 00:20:08,000
如果你只要揪这个的话

566
00:20:08,000 --> 00:20:10,000
那对我们中国人来讲是比较浪费

567
00:20:10,000 --> 00:20:12,000
UTF 8 最大的 U 4 是比较

568
00:20:12,000 --> 00:20:14,000
灵活吧

569
00:20:14,000 --> 00:20:16,000
我觉得

570
00:20:16,000 --> 00:20:18,000
它就这样的 U 4 是没有奇异

571
00:20:18,000 --> 00:20:20,000
对

572
00:20:20,000 --> 00:20:22,000
它可以随意在中间断开

573
00:20:22,000 --> 00:20:24,000
是没有问题的

574
00:20:24,000 --> 00:20:26,000
它可以自己揪

575
00:20:26,000 --> 00:20:28,000
就是那个要什么来的

576
00:20:28,000 --> 00:20:30,000
就是给一个任意文本

577
00:20:30,000 --> 00:20:32,000
它可以在任意一个字节

578
00:20:32,000 --> 00:20:34,000
一个那个扣的是从哪里开始的

579
00:20:34,000 --> 00:20:36,000
但是

580
00:20:36,000 --> 00:20:38,000
UTF 32

581
00:20:38,000 --> 00:20:40,000
UTF 16 UCS 也都做不到吧

582
00:20:40,000 --> 00:20:42,000
你必须知道开头在哪里了

583
00:20:42,000 --> 00:20:44,000
还有这个 bite order 的问题

584
00:20:44,000 --> 00:20:46,000
对有大头小头的问题

585
00:20:46,000 --> 00:20:48,000
不过 32 也有

586
00:20:48,000 --> 00:20:50,000
32 肯定有大头小的问题

587
00:20:50,000 --> 00:20:52,000
所以这里有两个事情

588
00:20:52,000 --> 00:20:54,000
就是一个是说在

589
00:20:54,000 --> 00:20:56,000
传输中的存储过程中

590
00:20:56,000 --> 00:20:58,000
肯定是用 UTF 8 比较合理

591
00:20:58,000 --> 00:21:00,000
不管是从它的这个编码的效率

592
00:21:00,000 --> 00:21:02,000
和它的这个

593
00:21:02,000 --> 00:21:04,000
部分大小端

594
00:21:04,000 --> 00:21:06,000
然后也可以自揪错的这么一个属性

595
00:21:06,000 --> 00:21:08,000
肯定是存储和传输的时候

596
00:21:08,000 --> 00:21:10,000
是 UTF 8 比较合适

597
00:21:10,000 --> 00:21:12,000
但是在

598
00:21:12,000 --> 00:21:14,000
它运算和处理的时候

599
00:21:14,000 --> 00:21:16,000
它最好是一个定常或者是

600
00:21:16,000 --> 00:21:18,000
绝大部分是定常的时候更加有效率

601
00:21:18,000 --> 00:21:20,000
所以

602
00:21:20,000 --> 00:21:22,000
就为什么导致现在的一个结果就是

603
00:21:22,000 --> 00:21:24,000
大家那些不你看那些软件系统

604
00:21:24,000 --> 00:21:26,000
在内部的

605
00:21:26,000 --> 00:21:28,000
Internal representation 的时候

606
00:21:28,000 --> 00:21:30,000
要不就是选择 UTF 3.2 来做这个事情

607
00:21:30,000 --> 00:21:32,000
对

608
00:21:32,000 --> 00:21:34,000
方便对齐最爽

609
00:21:34,000 --> 00:21:36,000
方便对齐可以 Random Seq

610
00:21:36,000 --> 00:21:38,000
比较简单一些

611
00:21:38,000 --> 00:21:40,000
因为

612
00:21:40,000 --> 00:21:42,000
UTF

613
00:21:42,000 --> 00:21:44,000
如果用 UTF 8 的话

614
00:21:44,000 --> 00:21:46,000
只要马位即使是基本文品面

615
00:21:46,000 --> 00:21:48,000
只要

616
00:21:48,000 --> 00:21:50,000
马位在 800 以上的都要用三个字节来表示

617
00:21:50,000 --> 00:21:52,000
所以

618
00:21:52,000 --> 00:21:54,000
还是很浪费的

619
00:21:54,000 --> 00:21:56,000
就相和 UTF 16 比的话

620
00:21:56,000 --> 00:21:58,000
而且它在那个

621
00:21:58,000 --> 00:22:00,000
变长的时候你没有办法在

622
00:22:00,000 --> 00:22:02,000
罗美中说我跳到 1000 个字符以外

623
00:22:02,000 --> 00:22:04,000
中间就可能跳得很歪了

624
00:22:04,000 --> 00:22:06,000
嗯

625
00:22:06,000 --> 00:22:08,000
是的

626
00:22:08,000 --> 00:22:10,000
三二就不存在这个问题

627
00:22:10,000 --> 00:22:12,000
那些如果是欧美国家的

628
00:22:12,000 --> 00:22:14,000
他们一清到晚都在

629
00:22:14,000 --> 00:22:16,000
Azuki 当自己的人

630
00:22:16,000 --> 00:22:18,000
所以他们就不想

631
00:22:18,000 --> 00:22:20,000
用三二嘛

632
00:22:20,000 --> 00:22:22,000
就简单一点的

633
00:22:22,000 --> 00:22:24,000
但是他们又想用

634
00:22:24,000 --> 00:22:26,000
Amoji 啊

635
00:22:26,000 --> 00:22:28,000
所以现在有一个我们一样的痛苦啦

636
00:22:28,000 --> 00:22:30,000
所以对吧还不如

637
00:22:30,000 --> 00:22:32,000
用三二简单

638
00:22:32,000 --> 00:22:34,000
还是很浪费的呀

639
00:22:34,000 --> 00:22:36,000
嗯

640
00:22:36,000 --> 00:22:38,000
以前就很多那种那些

641
00:22:38,000 --> 00:22:40,000
原来 Windows 的 API 嘛

642
00:22:40,000 --> 00:22:42,000
对吧原来是只

643
00:22:42,000 --> 00:22:44,000
能正确处理双字节的

644
00:22:44,000 --> 00:22:46,000
像那个 C++

645
00:22:46,000 --> 00:22:48,000
那时候就对吧

646
00:22:48,000 --> 00:22:50,000
Widechart T 它的那个定义就是

647
00:22:50,000 --> 00:22:52,000
16 个比特的嘛

648
00:22:52,000 --> 00:22:54,000
嗯嗯

649
00:22:54,000 --> 00:22:56,000
它会把那个

650
00:22:56,000 --> 00:22:58,000
它是不是如果用那

651
00:22:58,000 --> 00:23:00,000
它支持 UTF-16 吧

652
00:23:00,000 --> 00:23:02,000
还是说

653
00:23:02,000 --> 00:23:04,000
要看具体什么实现

654
00:23:04,000 --> 00:23:06,000
这个就比较复杂了

655
00:23:06,000 --> 00:23:08,000
我看一个说法就是说

656
00:23:08,000 --> 00:23:10,000
它能显示这个四字节的字符

657
00:23:10,000 --> 00:23:12,000
但是呢用于那个 API 不能处理

658
00:23:12,000 --> 00:23:14,000
会把它

659
00:23:14,000 --> 00:23:16,000
给它当成两个那个双字节的字符

660
00:23:16,000 --> 00:23:18,000
对啊就所以要看它在所在的那个

661
00:23:18,000 --> 00:23:20,000
运行环境和 API 怎么支持了嘛

662
00:23:20,000 --> 00:23:22,000
这个纯就是纯是个坑

663
00:23:22,000 --> 00:23:24,000
啊对呀

664
00:23:24,000 --> 00:23:26,000
谁干谁偷腾

665
00:23:26,000 --> 00:23:28,000
具体会有什么毛病呢

666
00:23:28,000 --> 00:23:30,000
就是乱码

667
00:23:30,000 --> 00:23:32,000
那比如说你算那个总

668
00:23:32,000 --> 00:23:34,000
数字数的时候就不对吧

669
00:23:34,000 --> 00:23:36,000
那肯定对就本来一个字就在

670
00:23:36,000 --> 00:23:38,000
就算上两个字了嘛

671
00:23:38,000 --> 00:23:40,000
然后显示也可能会有问题

672
00:23:40,000 --> 00:23:42,000
嗯就传输的时候

673
00:23:42,000 --> 00:23:44,000
就会有问题嘛

674
00:23:44,000 --> 00:23:46,000
然后传输现在我觉得还好

675
00:23:46,000 --> 00:23:48,000
传输现在基本上至少

676
00:23:48,000 --> 00:23:50,000
我调码的就是现代系统

677
00:23:50,000 --> 00:23:52,000
都是用 UTF-8 来编码了

678
00:23:52,000 --> 00:23:54,000
对

679
00:23:54,000 --> 00:23:56,000
问题还是处在内部的

680
00:23:56,000 --> 00:23:58,000
Internal Repentation 的时候会有这个问题

681
00:23:58,000 --> 00:24:00,000
诶它传输的时候 UTF-8 的话

682
00:24:00,000 --> 00:24:02,000
它到内部它得把 8 转成 16 有

683
00:24:02,000 --> 00:24:04,000
它得转一次

684
00:24:04,000 --> 00:24:06,000
对有个编解码的一个过程

685
00:24:06,000 --> 00:24:08,000
对

686
00:24:08,000 --> 00:24:10,000
而且这个是非常

687
00:24:10,000 --> 00:24:12,000
这是几乎日常一定要做的一个工作

688
00:24:12,000 --> 00:24:14,000
所以目前的库也比较成熟

689
00:24:14,000 --> 00:24:16,000
就不要自己去弄就好了

690
00:24:16,000 --> 00:24:18,000
一定要用现有的解决方案

691
00:24:18,000 --> 00:24:20,000
啊千万不要自己造轮子

692
00:24:20,000 --> 00:24:22,000
对

693
00:24:22,000 --> 00:24:24,000
那好吧

694
00:24:24,000 --> 00:24:26,000
那所以呢就是

695
00:24:26,000 --> 00:24:28,000
现在就因为 java 现在的坑

696
00:24:28,000 --> 00:24:30,000
都解决了是吗

697
00:24:30,000 --> 00:24:32,000
java 从 java 5

698
00:24:32,000 --> 00:24:34,000
之后就改用 UTF-16 了吧

699
00:24:34,000 --> 00:24:36,000
然后

700
00:24:36,000 --> 00:24:38,000
反正还是有一些问题的

701
00:24:38,000 --> 00:24:40,000
不太清楚具体是什么

702
00:24:40,000 --> 00:24:42,000
不是那么严重吗

703
00:24:42,000 --> 00:24:44,000
就是因为开始用 UTF-16 了

704
00:24:44,000 --> 00:24:46,000
所以就开始有坑了嘛

705
00:24:46,000 --> 00:24:48,000
嗯哼

706
00:24:48,000 --> 00:24:50,000
就是一个变长的问题

707
00:24:50,000 --> 00:24:52,000
对要处理代理队的问题嘛

708
00:24:54,000 --> 00:24:56,000
16 说这个过不备

709
00:24:56,000 --> 00:24:58,000
哈哈

710
00:24:58,000 --> 00:25:00,000
不是我的问题是你们

711
00:25:00,000 --> 00:25:02,000
实现的问题

712
00:25:02,000 --> 00:25:04,000
不管怎么样就是用 moj

713
00:25:04,000 --> 00:25:06,000
这样的用以前这些喊用字嘛

714
00:25:06,000 --> 00:25:08,000
就这些 800

715
00:25:08,000 --> 00:25:10,000
800 年用不到的这个马位

716
00:25:10,000 --> 00:25:12,000
用出来了以后

717
00:25:12,000 --> 00:25:14,000
就是督促了好多这些

718
00:25:14,000 --> 00:25:16,000
旧的环境

719
00:25:16,000 --> 00:25:18,000
要加强对这个 UTF-16 的支持

720
00:25:18,000 --> 00:25:20,000
毕竟是个好事

721
00:25:20,000 --> 00:25:22,000
对 这倒是

722
00:25:24,000 --> 00:25:26,000
好

723
00:25:26,000 --> 00:25:28,000
然后下面一个问题就是

724
00:25:28,000 --> 00:25:30,000
我们上次没怎么讲那个 moj 的字体

725
00:25:30,000 --> 00:25:32,000
问题

726
00:25:32,000 --> 00:25:34,000
其实上

727
00:25:34,000 --> 00:25:36,000
对 moj 的字体问题

728
00:25:36,000 --> 00:25:38,000
听起来有点奇怪不过的确

729
00:25:38,000 --> 00:25:40,000
对呀首先 moj 的字体

730
00:25:40,000 --> 00:25:42,000
默认是彩色字体

731
00:25:42,000 --> 00:25:44,000
这本身其实在字体技术上就是一个很重要的

732
00:25:44,000 --> 00:25:46,000
因为大家都知道

733
00:25:46,000 --> 00:25:48,000
大家默认的字体

734
00:25:48,000 --> 00:25:50,000
白底黑字啊

735
00:25:50,000 --> 00:25:52,000
就不带颜色的

736
00:25:52,000 --> 00:25:54,000
对

737
00:25:54,000 --> 00:25:56,000
那现在大家最常用的

738
00:25:56,000 --> 00:25:58,000
比如说你安卓手机用的

739
00:25:58,000 --> 00:26:00,000
就是这个 noto

740
00:26:00,000 --> 00:26:02,000
colour emoji

741
00:26:02,000 --> 00:26:04,000
那如果是苹果的设备的话

742
00:26:04,000 --> 00:26:06,000
用的都是叫什么 apple color emoji

743
00:26:06,000 --> 00:26:08,000
大家一看就知道

744
00:26:08,000 --> 00:26:10,000
这个名字里面就有个 colour 嘛

745
00:26:10,000 --> 00:26:12,000
颜色嘛就是彩色的

746
00:26:12,000 --> 00:26:14,000
彩色字体

747
00:26:14,000 --> 00:26:16,000
所以现在我们的字体技术都已经

748
00:26:16,000 --> 00:26:18,000
支持彩色字体了

749
00:26:18,000 --> 00:26:20,000
可是大家仔细在如果

750
00:26:20,000 --> 00:26:22,000
稍微翻一下就会知道

751
00:26:22,000 --> 00:26:24,000
我们其实

752
00:26:24,000 --> 00:26:26,000
无论是苹果的这个

753
00:26:26,000 --> 00:26:28,000
还是安卓的这个 noto

754
00:26:28,000 --> 00:26:30,000
它其实里面内嵌都是

755
00:26:30,000 --> 00:26:32,000
未图就是都是 png 的图片

756
00:26:32,000 --> 00:26:34,000
对

757
00:26:34,000 --> 00:26:36,000
它其实就是把一个个图片嵌

758
00:26:36,000 --> 00:26:38,000
到那个字体横切里头吃

759
00:26:38,000 --> 00:26:40,000
所以如果大家

760
00:26:40,000 --> 00:26:42,000
是这么做的吗

761
00:26:42,000 --> 00:26:44,000
对 noto 也是

762
00:26:44,000 --> 00:26:46,000
所以呢如果

763
00:26:46,000 --> 00:26:48,000
谁家是用 svg 的

764
00:26:48,000 --> 00:26:50,000
对

765
00:26:50,000 --> 00:26:52,000
好像是那个什么

766
00:26:52,000 --> 00:26:54,000
windows 是吧

767
00:26:54,000 --> 00:26:56,000
svg 是那个吗

768
00:26:56,000 --> 00:26:58,000
这个我们之前讲过呀

769
00:26:58,000 --> 00:27:00,000
就是在那个我们讲

770
00:27:00,000 --> 00:27:02,000
mogic 的那一次

771
00:27:02,000 --> 00:27:04,000
第三期吧

772
00:27:04,000 --> 00:27:06,000
就是

773
00:27:06,000 --> 00:27:08,000
对就是 adobe 和 fifox

774
00:27:08,000 --> 00:27:10,000
他们定了那个 opentype 的 svg 的

775
00:27:10,000 --> 00:27:12,000
其实就是应该是 adobe 主导的吧

776
00:27:12,000 --> 00:27:14,000
然后 fifox 最新实现了这个

777
00:27:14,000 --> 00:27:16,000
嗯

778
00:27:16,000 --> 00:27:18,000
对啊

779
00:27:18,000 --> 00:27:20,000
然后现在 adobe 的 photoshop 和 illustrator

780
00:27:20,000 --> 00:27:22,000
都能支持这个 opentype 的 svg

781
00:27:22,000 --> 00:27:24,000
字体然后他们自己也做了

782
00:27:24,000 --> 00:27:26,000
几个实验性的字体

783
00:27:26,000 --> 00:27:28,000
陆续在发布

784
00:27:28,000 --> 00:27:30,000
对所以这个的话就是

785
00:27:30,000 --> 00:27:32,000
大家如果装了那个 adobe 最新版的 cc 的话

786
00:27:32,000 --> 00:27:34,000
他就默认给你装

787
00:27:34,000 --> 00:27:36,000
装的那个彩色字体

788
00:27:36,000 --> 00:27:38,000
他那个彩色字体的 mogic 呢

789
00:27:38,000 --> 00:27:40,000
就是实验的

790
00:27:40,000 --> 00:27:42,000
啊对

791
00:27:42,000 --> 00:27:44,000
他其实就是一个 svg 的

792
00:27:44,000 --> 00:27:46,000
svg 的实验图

793
00:27:46,000 --> 00:27:48,000
所以呢

794
00:27:48,000 --> 00:27:50,000
但是 google 是用 png 的吗

795
00:27:50,000 --> 00:27:52,000
png 我一直以为是 apple 的私有技术

796
00:27:52,000 --> 00:27:54,000
noto 也是

797
00:27:54,000 --> 00:27:56,000
google 用的就是 noto 嘛

798
00:27:56,000 --> 00:27:58,000
noto 的那个 mogic 就是

799
00:27:58,000 --> 00:28:00,000
都是 png 的

800
00:28:00,000 --> 00:28:02,000
大家都

801
00:28:02,000 --> 00:28:04,000
现在的那个字体文件都是那个 opentype 格式嘛

802
00:28:04,000 --> 00:28:06,000
其实 opentype 格式里面

803
00:28:06,000 --> 00:28:08,000
他既支持就是 bitmap

804
00:28:08,000 --> 00:28:10,000
这个未图的彩色字体

805
00:28:10,000 --> 00:28:12,000
也支持就史量图的 sv

806
00:28:12,000 --> 00:28:14,000
要不然你可以欠那个 svg

807
00:28:14,000 --> 00:28:16,000
或者呢现在 opentype

808
00:28:16,000 --> 00:28:18,000
他有个叫 cpao 的东西

809
00:28:18,000 --> 00:28:20,000
啊

810
00:28:20,000 --> 00:28:22,000
那个叫什么

811
00:28:22,000 --> 00:28:24,000
叫什么 color palette table

812
00:28:24,000 --> 00:28:26,000
嗯就颜色

813
00:28:26,000 --> 00:28:28,000
对一个叫 color palette

814
00:28:28,000 --> 00:28:30,000
这个是微软做的那种

815
00:28:30,000 --> 00:28:32,000
啊

816
00:28:32,000 --> 00:28:34,000
mogic 的实现方式之一吧

817
00:28:34,000 --> 00:28:36,000
他的作用原理就是说

818
00:28:36,000 --> 00:28:38,000
他必须要分色来

819
00:28:38,000 --> 00:28:40,000
管理这个图层

820
00:28:40,000 --> 00:28:42,000
就是他是图层的概念

821
00:28:42,000 --> 00:28:44,000
比如说我一个 mogic 如果有三种颜色

822
00:28:44,000 --> 00:28:46,000
够成的话我得把这三种颜色

823
00:28:46,000 --> 00:28:48,000
分开做成三层

824
00:28:48,000 --> 00:28:50,000
然后这三层分别存储

825
00:28:50,000 --> 00:28:52,000
然后再用一个表来存他们的颜色

826
00:28:52,000 --> 00:28:54,000
最后就把他们叠加起来

827
00:28:54,000 --> 00:28:56,000
为什么要做这么复杂呢

828
00:28:56,000 --> 00:28:58,000
我觉得可能在这个

829
00:28:58,000 --> 00:29:00,000
图形处理上的效率会高一些

830
00:29:00,000 --> 00:29:02,000
因为如果你要做一个 svg

831
00:29:02,000 --> 00:29:04,000
这样子的史量的 mogic 的话

832
00:29:04,000 --> 00:29:06,000
你都得支持渐变色

833
00:29:06,000 --> 00:29:08,000
嗯

834
00:29:08,000 --> 00:29:10,000
然后 windows 那个就是他不需要支持

835
00:29:10,000 --> 00:29:12,000
渐变色另外他有个好处就是

836
00:29:12,000 --> 00:29:14,000
他应该某种程度上很容易跟原来那种

837
00:29:14,000 --> 00:29:16,000
单色的字体直接兼容

838
00:29:16,000 --> 00:29:18,000
嗯

839
00:29:18,000 --> 00:29:20,000
对因为他每一个

840
00:29:20,000 --> 00:29:22,000
每一个层本之上还是一个单色的

841
00:29:22,000 --> 00:29:24,000
这个史量轮廓

842
00:29:24,000 --> 00:29:26,000
就跟传统的字体一样

843
00:29:26,000 --> 00:29:28,000
会自三变而已可能就说

844
00:29:28,000 --> 00:29:30,000
对对对如果你有三种颜色

845
00:29:30,000 --> 00:29:32,000
你只要三变然后叠加起来就可以了

846
00:29:32,000 --> 00:29:34,000
那我就感觉还不如这种 png 算了

847
00:29:34,000 --> 00:29:36,000
对 png 是

848
00:29:36,000 --> 00:29:38,000
之前是 apple 基于那个

849
00:29:38,000 --> 00:29:40,000
初线直接扩展的一个

850
00:29:40,000 --> 00:29:42,000
四种实现但我不知道他现在有没有开放

851
00:29:42,000 --> 00:29:44,000
这个专利给别人

852
00:29:44,000 --> 00:29:46,000
现在已经变成了一个普通的

853
00:29:46,000 --> 00:29:48,000
open type 的格式了

854
00:29:48,000 --> 00:29:50,000
他说不定写进 open type 标准了

855
00:29:50,000 --> 00:29:52,000
对写进去了

856
00:29:52,000 --> 00:29:54,000
他之前实现了一个表叫

857
00:29:54,000 --> 00:29:56,000
sbix

858
00:29:56,000 --> 00:29:58,000
我们当然还讨论过这个表

859
00:29:58,000 --> 00:30:00,000
是代表了什么意思

860
00:30:00,000 --> 00:30:02,000
就他那个缩写一直没有一个

861
00:30:02,000 --> 00:30:04,000
就没有一个官方的说明

862
00:30:04,000 --> 00:30:06,000
这个 sbix 这四个字母代表的是哪个缩写

863
00:30:08,000 --> 00:30:10,000
extern 的吧

864
00:30:14,000 --> 00:30:16,000
bi 是什么 bit 什么

865
00:30:16,000 --> 00:30:18,000
bitmax

866
00:30:18,000 --> 00:30:20,000
bitindex

867
00:30:20,000 --> 00:30:22,000
你是说

868
00:30:22,000 --> 00:30:24,000
苹果的那个

869
00:30:24,000 --> 00:30:26,000
对苹果之前用的一个叫 sbix 的一个表

870
00:30:26,000 --> 00:30:28,000
来实现的这个 mode 的

871
00:30:28,000 --> 00:30:30,000
mode 的这个

872
00:30:30,000 --> 00:30:32,000
png 的实现方式

873
00:30:32,000 --> 00:30:34,000
其实他不只支持

874
00:30:34,000 --> 00:30:36,000
png 吧他支持很多位图

875
00:30:36,000 --> 00:30:38,000
像什么 jpeg

876
00:30:38,000 --> 00:30:40,000
tif

877
00:30:40,000 --> 00:30:42,000
还有 apple 最喜欢用的 pdf 他有这知识

878
00:30:42,000 --> 00:30:44,000
嗯

879
00:30:44,000 --> 00:30:46,000
因为那个

880
00:30:46,000 --> 00:30:48,000
他有一个

881
00:30:48,000 --> 00:30:50,000
彩色字体的话他有一个

882
00:30:50,000 --> 00:30:52,000
cbdt 的表

883
00:30:52,000 --> 00:30:54,000
叫

884
00:30:54,000 --> 00:30:56,000
kana bitmap data table

885
00:30:56,000 --> 00:30:58,000
这个

886
00:30:58,000 --> 00:31:00,000
这个是之前那个 google

887
00:31:00,000 --> 00:31:02,000
这个是 overtime 最早的

888
00:31:02,000 --> 00:31:04,000
自己定的一个公共标准

889
00:31:04,000 --> 00:31:06,000
就是有两个表一个

890
00:31:06,000 --> 00:31:08,000
cbdt 一个 cb

891
00:31:08,000 --> 00:31:10,000
lc 是吧对

892
00:31:10,000 --> 00:31:12,000
对然后两个表

893
00:31:12,000 --> 00:31:14,000
合起来

894
00:31:14,000 --> 00:31:16,000
对 cblc 那个也是

895
00:31:16,000 --> 00:31:18,000
支持位图的是吧

896
00:31:18,000 --> 00:31:20,000
cb

897
00:31:20,000 --> 00:31:22,000
因为 cb 的 b

898
00:31:22,000 --> 00:31:24,000
就是 bitmap

899
00:31:24,000 --> 00:31:26,000
所以这种也是一种

900
00:31:26,000 --> 00:31:28,000
位图的那个技术

901
00:31:28,000 --> 00:31:30,000
都是位图的这俩都是

902
00:31:30,000 --> 00:31:32,000
对对对那就跟

903
00:31:32,000 --> 00:31:34,000
Apple 的还不一样 Apple 那个还是

904
00:31:34,000 --> 00:31:36,000
sio 的

905
00:31:36,000 --> 00:31:38,000
但是不管怎么样

906
00:31:38,000 --> 00:31:40,000
你可以塞这个表吧

907
00:31:40,000 --> 00:31:42,000
对吧对对对对

908
00:31:42,000 --> 00:31:44,000
实量图的话

909
00:31:44,000 --> 00:31:46,000
刚才说就是用那个 cpao

910
00:31:46,000 --> 00:31:48,000
就是 cut a palette

911
00:31:48,000 --> 00:31:50,000
我现在在看那个文档

912
00:31:50,000 --> 00:31:52,000
他那个颜色是用那个

913
00:31:52,000 --> 00:31:54,000
叫就是 bgra

914
00:31:54,000 --> 00:31:56,000
那

915
00:31:56,000 --> 00:31:58,000
bgr

916
00:31:58,000 --> 00:32:00,000
就是那个红绿蓝嘛

917
00:32:00,000 --> 00:32:02,000
就是三元色嘛

918
00:32:02,000 --> 00:32:04,000
rgb 对 rgb

919
00:32:04,000 --> 00:32:06,000
rgb a 吧

920
00:32:06,000 --> 00:32:08,000
随便吧然后那 a 就是那个 alpha

921
00:32:08,000 --> 00:32:10,000
好吧 rgb

922
00:32:10,000 --> 00:32:12,000
我还是第一次一上一集

923
00:32:12,000 --> 00:32:14,000
你那在

924
00:32:14,000 --> 00:32:16,000
你在你的这个思想里面

925
00:32:16,000 --> 00:32:18,000
你一直是在那脑海里面

926
00:32:18,000 --> 00:32:20,000
你是把 rgb 记成 bgr 了吗

927
00:32:20,000 --> 00:32:22,000
没有

928
00:32:22,000 --> 00:32:24,000
因为我一直都是

929
00:32:24,000 --> 00:32:26,000
对我现在照着这个文档

930
00:32:26,000 --> 00:32:28,000
念的他是 bgr

931
00:32:28,000 --> 00:32:30,000
他写的他说他对于什么

932
00:32:30,000 --> 00:32:32,000
bgra 是吗他按字母式

933
00:32:32,000 --> 00:32:34,000
我下回跳

934
00:32:34,000 --> 00:32:36,000
我也觉得念点怪怪的

935
00:32:36,000 --> 00:32:38,000
但是他那文档里面就是

936
00:32:38,000 --> 00:32:40,000
这种写的 bgra 值

937
00:32:40,000 --> 00:32:42,000
他就这样排这个色号的

938
00:32:42,000 --> 00:32:44,000
对对对还有一个 alpha 通道

939
00:32:44,000 --> 00:32:46,000
我想说的是

940
00:32:46,000 --> 00:32:48,000
除了那个

941
00:32:48,000 --> 00:32:50,000
三元色 rgb 的话还有一个 alpha 通道

942
00:32:50,000 --> 00:32:52,000
就透明的嘛

943
00:32:52,000 --> 00:32:54,000
所以呢

944
00:32:54,000 --> 00:32:56,000
就是现在呢总的来讲

945
00:32:56,000 --> 00:32:58,000
就是你虽然

946
00:32:58,000 --> 00:33:00,000
虽然在说的是字体的问题

947
00:33:00,000 --> 00:33:02,000
可是你现在为了用

948
00:33:02,000 --> 00:33:04,000
moji 其实我们在讲

949
00:33:04,000 --> 00:33:06,000
图像和图形的问题了

950
00:33:06,000 --> 00:33:08,000
比如说我们要讲他到底是个位图

951
00:33:08,000 --> 00:33:10,000
还是一个实量图的问题吗

952
00:33:10,000 --> 00:33:12,000
对

953
00:33:12,000 --> 00:33:14,000
所以这个东西都搅在一起了

954
00:33:14,000 --> 00:33:16,000
以前来讲文字是

955
00:33:16,000 --> 00:33:18,000
文字图形是图形

956
00:33:18,000 --> 00:33:20,000
但是 moji 呢就是

957
00:33:20,000 --> 00:33:22,000
因为它其实是一个

958
00:33:22,000 --> 00:33:24,000
展现形式是一个图

959
00:33:24,000 --> 00:33:26,000
所以现在的在一个 OpenType

960
00:33:26,000 --> 00:33:28,000
特性的一个字体文件里面

961
00:33:28,000 --> 00:33:30,000
我们还要再考虑它是实量图

962
00:33:30,000 --> 00:33:32,000
这印证了什么

963
00:33:32,000 --> 00:33:34,000
中国的就古话说话不分家

964
00:33:38,000 --> 00:33:40,000
哈哈哈哈

965
00:33:42,000 --> 00:33:44,000
我觉得这个是 unicode 的一个

966
00:33:44,000 --> 00:33:46,000
一个

967
00:33:46,000 --> 00:33:48,000
贪念吧就是

968
00:33:48,000 --> 00:33:50,000
他们太贪了他们想把什么东西都问

969
00:33:50,000 --> 00:33:52,000
所以没有就当年就是

970
00:33:52,000 --> 00:33:54,000
moji 要不要进 unicode

971
00:33:54,000 --> 00:33:56,000
这个事情本身的话就是

972
00:33:56,000 --> 00:33:58,000
吵得很厉害嘛

973
00:33:58,000 --> 00:34:00,000
就是这一个 Pandora 的盒子

974
00:34:00,000 --> 00:34:02,000
一打开的话就

975
00:34:02,000 --> 00:34:04,000
无穷进了嘛就这个也是在

976
00:34:04,000 --> 00:34:06,000
我们上次对我们上次

977
00:34:06,000 --> 00:34:08,000
我觉得 unicode 吧

978
00:34:08,000 --> 00:34:10,000
unicode 它毕竟是个 code

979
00:34:10,000 --> 00:34:12,000
嗯

980
00:34:12,000 --> 00:34:14,000
因为 moji 它不是个 code

981
00:34:14,000 --> 00:34:16,000
这是一个非常

982
00:34:16,000 --> 00:34:18,000
fundamental 的东西我觉得

983
00:34:18,000 --> 00:34:20,000
哈哈哈哈

984
00:34:20,000 --> 00:34:22,000
可以说是一种 code

985
00:34:22,000 --> 00:34:24,000
对呀就看你什么

986
00:34:24,000 --> 00:34:26,000
对象来 code

987
00:34:26,000 --> 00:34:28,000
就我的一个 code

988
00:34:28,000 --> 00:34:30,000
他们叫 uniscript

989
00:34:30,000 --> 00:34:32,000
对它不是一个书写系统

990
00:34:32,000 --> 00:34:34,000
moji 不是一个书写系统

991
00:34:34,000 --> 00:34:36,000
最点心那个

992
00:34:36,000 --> 00:34:38,000
我觉得最点心的一个特征

993
00:34:38,000 --> 00:34:40,000
就是 unicode 是没有读音的

994
00:34:40,000 --> 00:34:42,000
对

995
00:34:42,000 --> 00:34:44,000
对吧

996
00:34:44,000 --> 00:34:46,000
但很多符号也没有读音的

997
00:34:46,000 --> 00:34:48,000
对呀你也讲不清楚呀

998
00:34:48,000 --> 00:34:50,000
它就是一种 code

999
00:34:50,000 --> 00:34:52,000
我觉得

1000
00:34:52,000 --> 00:34:54,000
它能归到 code 的了

1001
00:34:54,000 --> 00:34:56,000
因为它不是

1002
00:34:56,000 --> 00:34:58,000
就它不叫 uniscript

1003
00:34:58,000 --> 00:35:00,000
它叫 unicode

1004
00:35:00,000 --> 00:35:02,000
就能把这个 code

1005
00:35:02,000 --> 00:35:04,000
好吧这个

1006
00:35:04,000 --> 00:35:06,000
已经成了试试了

1007
00:35:06,000 --> 00:35:08,000
而且大家这么喜欢

1008
00:35:08,000 --> 00:35:10,000
我们现在没有办法再翻回去

1009
00:35:10,000 --> 00:35:12,000
翻案讲这个事情

1010
00:35:12,000 --> 00:35:14,000
好

1011
00:35:14,000 --> 00:35:16,000
然后呢现在我们再来讲

1012
00:35:16,000 --> 00:35:18,000
另外一个问题就是很烦的一点

1013
00:35:18,000 --> 00:35:20,000
就是有一些东西

1014
00:35:20,000 --> 00:35:22,000
它既可能是以文本形状出现

1015
00:35:22,000 --> 00:35:24,000
又可能是以这个 moji 形状出现的

1016
00:35:24,000 --> 00:35:26,000
比如说

1017
00:35:26,000 --> 00:35:28,000
shallow

1018
00:35:28,000 --> 00:35:30,000
或者

1019
00:35:30,000 --> 00:35:32,000
那个箭头上下左右的箭头嘛

1020
00:35:32,000 --> 00:35:34,000
原来 unicode

1021
00:35:34,000 --> 00:35:36,000
已经有一部分就是

1022
00:35:36,000 --> 00:35:38,000
文本样子的东西

1023
00:35:38,000 --> 00:35:40,000
但是呢

1024
00:35:40,000 --> 00:35:42,000
我们现在又有

1025
00:35:42,000 --> 00:35:44,000
moji 的版本

1026
00:35:44,000 --> 00:35:46,000
表情符号版本

1027
00:35:46,000 --> 00:35:48,000
所以有时候会混在一起

1028
00:35:48,000 --> 00:35:50,000
那就要搞一个优先顺序

1029
00:35:50,000 --> 00:35:52,000
和指定说啊这时候我希望

1030
00:35:52,000 --> 00:35:54,000
它是以 moji 的样子出现

1031
00:35:54,000 --> 00:35:56,000
或者这时候我希望它是以文本的样子

1032
00:35:56,000 --> 00:35:58,000
实现

1033
00:35:58,000 --> 00:36:00,000
实现方式居然有很多很神奇的用法

1034
00:36:00,000 --> 00:36:02,000
实现方式居然有很多很神奇的用法

1035
00:36:02,000 --> 00:36:04,000
我去翻了一下那个

1036
00:36:04,000 --> 00:36:06,000
文档

1037
00:36:06,000 --> 00:36:08,000
才发现说如果你要去指定

1038
00:36:08,000 --> 00:36:10,000
其实是有

1039
00:36:10,000 --> 00:36:12,000
三种做法

1040
00:36:12,000 --> 00:36:14,000
然后呢其中有两种

1041
00:36:14,000 --> 00:36:16,000
是特别神奇是要去指定这个语言

1042
00:36:16,000 --> 00:36:18,000
是特别神奇是要去指定这个语言

1043
00:36:18,000 --> 00:36:20,000
其实说那个

1044
00:36:20,000 --> 00:36:22,000
说到语言的话就是

1045
00:36:22,000 --> 00:36:24,000
language

1046
00:36:24,000 --> 00:36:26,000
大家可能如果说起 htnm

1047
00:36:26,000 --> 00:36:28,000
这个语言的声明嘛

1048
00:36:28,000 --> 00:36:30,000
这个语言是什么样的

1049
00:36:30,000 --> 00:36:32,000
然后现在才发现

1050
00:36:32,000 --> 00:36:34,000
ISO 就是这个

1051
00:36:34,000 --> 00:36:36,000
unicode 和这个

1052
00:36:36,000 --> 00:36:38,000
国际组织居然

1053
00:36:38,000 --> 00:36:40,000
造了一个语言

1054
00:36:40,000 --> 00:36:42,000
一个语言代码

1055
00:36:42,000 --> 00:36:44,000
这个是 AKMUG 的

1056
00:36:44,000 --> 00:36:46,000
专门给 MUG 的

1057
00:36:46,000 --> 00:36:48,000
对没错

1058
00:36:48,000 --> 00:36:50,000
ZSYE 和

1059
00:36:50,000 --> 00:36:52,000
ZSYM

1060
00:36:52,000 --> 00:36:54,000
这两个分别代表什么呢

1061
00:36:54,000 --> 00:36:56,000
ZSYE 就是

1062
00:36:56,000 --> 00:36:58,000
E 代表 moji

1063
00:36:58,000 --> 00:37:00,000
所以这都展示出来就是

1064
00:37:00,000 --> 00:37:02,000
HORM

1065
00:37:02,000 --> 00:37:04,000
ZSYM

1066
00:37:04,000 --> 00:37:06,000
就是用文本形式

1067
00:37:06,000 --> 00:37:08,000
所以 ZSY 什么意思啊

1068
00:37:08,000 --> 00:37:10,000
它没什么意思啊

1069
00:37:10,000 --> 00:37:12,000
不可能

1070
00:37:12,000 --> 00:37:14,000
我还查出来什么意思

1071
00:37:14,000 --> 00:37:16,000
没什么意味着

1072
00:37:16,000 --> 00:37:18,000
首先它 Z 后面

1073
00:37:18,000 --> 00:37:20,000
都是一些就是

1074
00:37:20,000 --> 00:37:22,000
零散用的东西

1075
00:37:22,000 --> 00:37:24,000
SY 指的是 symbol 嘛

1076
00:37:24,000 --> 00:37:26,000
Z 是不是

1077
00:37:26,000 --> 00:37:28,000
为了把它排到

1078
00:37:28,000 --> 00:37:30,000
表的最末尾

1079
00:37:30,000 --> 00:37:32,000
垃圾桶那堆

1080
00:37:32,000 --> 00:37:34,000
Z 就是最后面嘛

1081
00:37:34,000 --> 00:37:36,000
所以原来一个 symbol

1082
00:37:36,000 --> 00:37:38,000
sym

1083
00:37:38,000 --> 00:37:40,000
sym

1084
00:37:40,000 --> 00:37:42,000
所以 Z

1085
00:37:42,000 --> 00:37:44,000
sym

1086
00:37:44,000 --> 00:37:46,000
很早以前

1087
00:37:46,000 --> 00:37:48,000
加入到规范里面来了

1088
00:37:48,000 --> 00:37:50,000
但是呢它因为是 symbol

1089
00:37:50,000 --> 00:37:52,000
虽然说是符号

1090
00:37:52,000 --> 00:37:54,000
它是以文本形式

1091
00:37:54,000 --> 00:37:56,000
黑白形式出现的

1092
00:37:56,000 --> 00:37:58,000
像字一样的

1093
00:37:58,000 --> 00:38:00,000
ZSYE 呢就是 moji

1094
00:38:00,000 --> 00:38:02,000
像图形形式

1095
00:38:02,000 --> 00:38:04,000
所以你如果把

1096
00:38:04,000 --> 00:38:06,000
按这个表也

1097
00:38:06,000 --> 00:38:08,000
跟它并列的是什么

1098
00:38:08,000 --> 00:38:10,000
比如说是汉语

1099
00:38:10,000 --> 00:38:12,000
比如说日语

1100
00:38:12,000 --> 00:38:14,000
日语不是 JP 吗

1101
00:38:14,000 --> 00:38:16,000
JAJP

1102
00:38:16,000 --> 00:38:18,000
你把它指定成语言的话

1103
00:38:18,000 --> 00:38:20,000
如果把它指定成

1104
00:38:20,000 --> 00:38:22,000
ZSYE

1105
00:38:22,000 --> 00:38:24,000
E 的话它就会表现 moji

1106
00:38:24,000 --> 00:38:26,000
你看我们的

1107
00:38:26,000 --> 00:38:28,000
moji 已经

1108
00:38:28,000 --> 00:38:30,000
汤而黄之的成为一个语言了

1109
00:38:30,000 --> 00:38:32,000
所以将来要是有人拿

1110
00:38:32,000 --> 00:38:34,000
傻不大就拿这个语言列表

1111
00:38:34,000 --> 00:38:36,000
来写一个 drop down list

1112
00:38:36,000 --> 00:38:38,000
你会发现里面

1113
00:38:38,000 --> 00:38:40,000
你可以声名自己是一个

1114
00:38:40,000 --> 00:38:42,000
native emoji speaker

1115
00:38:42,000 --> 00:38:44,000
对呀

1116
00:38:44,000 --> 00:38:46,000
请我和他交流

1117
00:38:46,000 --> 00:38:48,000
不是一会儿

1118
00:38:48,000 --> 00:38:50,000
说一大堆 emoji 是吧

1119
00:38:50,000 --> 00:38:52,000
怎么说嘛

1120
00:38:52,000 --> 00:38:54,000
没法说呀

1121
00:38:54,000 --> 00:38:56,000
就像盲文一样

1122
00:38:56,000 --> 00:38:58,000
盲文不是也没法说出来了

1123
00:38:58,000 --> 00:39:00,000
这只是那笔画

1124
00:39:00,000 --> 00:39:02,000
不是盲文

1125
00:39:02,000 --> 00:39:04,000
手语

1126
00:39:04,000 --> 00:39:06,000
手语是笔画的

1127
00:39:06,000 --> 00:39:08,000
还有布莱叶

1128
00:39:08,000 --> 00:39:10,000
点字

1129
00:39:10,000 --> 00:39:12,000
点点点

1130
00:39:12,000 --> 00:39:14,000
肯定大家一个就可以想象

1131
00:39:14,000 --> 00:39:16,000
比如说你这样变成

1132
00:39:16,000 --> 00:39:18,000
如果你写到

1133
00:39:18,000 --> 00:39:20,000
语言声明里面去肯定不好用

1134
00:39:20,000 --> 00:39:22,000
比如说你整个网页

1135
00:39:22,000 --> 00:39:24,000
网页声明

1136
00:39:24,000 --> 00:39:26,000
语言都变成 emoji 语言

1137
00:39:26,000 --> 00:39:28,000
它可以局部声明

1138
00:39:28,000 --> 00:39:30,000
对呀不好用嘛

1139
00:39:30,000 --> 00:39:32,000
所以后来才发现

1140
00:39:32,000 --> 00:39:34,000
其实还有另外一个机制

1141
00:39:34,000 --> 00:39:36,000
那就是说

1142
00:39:36,000 --> 00:39:38,000
unicode 有个叫 emoji 的

1143
00:39:38,000 --> 00:39:40,000
local extension

1144
00:39:40,000 --> 00:39:42,000
大家知道 local

1145
00:39:42,000 --> 00:39:44,000
我们中文

1146
00:39:44,000 --> 00:39:46,000
Bundi 设置

1147
00:39:46,000 --> 00:39:48,000
Bundi 设置的

1148
00:39:48,000 --> 00:39:50,000
扩展

1149
00:39:50,000 --> 00:39:52,000
然后这个扩展是

1150
00:39:52,000 --> 00:39:54,000
是

1151
00:39:54,000 --> 00:39:56,000
Hengang EM

1152
00:39:56,000 --> 00:39:58,000
来进行扩展

1153
00:39:58,000 --> 00:40:00,000
所以你可以用一个

1154
00:40:00,000 --> 00:40:02,000
比如说在一个语言里面

1155
00:40:02,000 --> 00:40:04,000
比如说是美国英语

1156
00:40:04,000 --> 00:40:06,000
英语不是 EM 嘛

1157
00:40:06,000 --> 00:40:08,000
然后 hiven 美国

1158
00:40:08,000 --> 00:40:10,000
然后在 hiven

1159
00:40:10,000 --> 00:40:12,000
然后就说明

1160
00:40:12,000 --> 00:40:14,000
我这时候用的是文本

1161
00:40:14,000 --> 00:40:16,000
文本状态的

1162
00:40:16,000 --> 00:40:18,000
但那意思是所有的

1163
00:40:18,000 --> 00:40:20,000
emoges 的符号都有一个对应的文本形态的

1164
00:40:20,000 --> 00:40:22,000
不一定

1165
00:40:22,000 --> 00:40:24,000
不一定 这是有定义的

1166
00:40:24,000 --> 00:40:26,000
有些有

1167
00:40:26,000 --> 00:40:28,000
有的有的没有

1168
00:40:28,000 --> 00:40:30,000
那它这种转化规则是怎么样的

1169
00:40:30,000 --> 00:40:32,000
有定义的

1170
00:40:32,000 --> 00:40:34,000
我的意思就是

1171
00:40:34,000 --> 00:40:36,000
比如说你看你列的

1172
00:40:36,000 --> 00:40:38,000
emu s uem emoji

1173
00:40:38,000 --> 00:40:40,000
我要切换成下面那个 text 的话

1174
00:40:40,000 --> 00:40:42,000
那哪些会被转化成

1175
00:40:42,000 --> 00:40:44,000
那种黑白的这种情况

1176
00:40:44,000 --> 00:40:46,000
都是有定义的

1177
00:40:46,000 --> 00:40:48,000
你去看那个马表里面它都写着的

1178
00:40:48,000 --> 00:40:50,000
对 其实就是

1179
00:40:50,000 --> 00:40:52,000
简单来说那些

1180
00:40:52,000 --> 00:40:54,000
emoges 的马位

1181
00:40:54,000 --> 00:40:56,000
跟那个只有纯 text 形式的这个

1182
00:40:56,000 --> 00:40:58,000
符号的马位

1183
00:40:58,000 --> 00:41:00,000
其实并不是完全一样的

1184
00:41:00,000 --> 00:41:02,000
嗯

1185
00:41:02,000 --> 00:41:04,000
他们

1186
00:41:04,000 --> 00:41:06,000
实际上他们后面要多加一个 unicode 的

1187
00:41:06,000 --> 00:41:08,000
符号来区分

1188
00:41:08,000 --> 00:41:10,000
但

1189
00:41:10,000 --> 00:41:12,000
我觉得是个历史一流吧

1190
00:41:12,000 --> 00:41:14,000
比如说像箭头这样的东西

1191
00:41:14,000 --> 00:41:16,000
它肯定在 emoges 产生之前

1192
00:41:16,000 --> 00:41:18,000
就已经有了

1193
00:41:18,000 --> 00:41:20,000
所以那个时候它本来就是 text 形式的

1194
00:41:20,000 --> 00:41:22,000
那么后来新加了一些 emoges 进来

1195
00:41:22,000 --> 00:41:24,000
然后发现我也可以做一个 emoges 的箭头

1196
00:41:24,000 --> 00:41:26,000
所以

1197
00:41:26,000 --> 00:41:28,000
我不知道它是不是为了节省马位

1198
00:41:28,000 --> 00:41:30,000
所以就重用了那个马位

1199
00:41:30,000 --> 00:41:32,000
再加一个标志符来区分

1200
00:41:32,000 --> 00:41:34,000
它是 emoges 还是不是

1201
00:41:34,000 --> 00:41:36,000
那这里还有一个问题

1202
00:41:36,000 --> 00:41:38,000
就是说如果有一些对应关系

1203
00:41:38,000 --> 00:41:40,000
它是一个一一硬设呢

1204
00:41:40,000 --> 00:41:42,000
还是说其实是一个不能

1205
00:41:42,000 --> 00:41:44,000
就是不能不可逆的一个操作

1206
00:41:44,000 --> 00:41:46,000
就是我从那个 emoges

1207
00:41:46,000 --> 00:41:48,000
就是刚 emoges

1208
00:41:48,000 --> 00:41:50,000
这种语言的 extension

1209
00:41:50,000 --> 00:41:52,000
切换成 text 之后

1210
00:41:52,000 --> 00:41:54,000
还能再切回来吗

1211
00:41:54,000 --> 00:41:56,000
嗯

1212
00:41:56,000 --> 00:41:58,000
只要你的这个软件可以处理

1213
00:41:58,000 --> 00:42:00,000
然后你有相应的字体就可以

1214
00:42:00,000 --> 00:42:02,000
不是 我这个问题嘛

1215
00:42:02,000 --> 00:42:04,000
比如说这样好像中文的反简的

1216
00:42:04,000 --> 00:42:06,000
这个转化

1217
00:42:06,000 --> 00:42:08,000
它是不可逆的嘛

1218
00:42:08,000 --> 00:42:10,000
对 它这个

1219
00:42:10,000 --> 00:42:12,000
其实是从这个角度上来说

1220
00:42:12,000 --> 00:42:14,000
它应该是可逆的

1221
00:42:14,000 --> 00:42:16,000
它不会丢失信息像语

1222
00:42:16,000 --> 00:42:18,000
对对对

1223
00:42:18,000 --> 00:42:20,000
它的语异信息并没有丢失这样

1224
00:42:20,000 --> 00:42:22,000
因为这些东西在 UniCode

1225
00:42:22,000 --> 00:42:24,000
它那个马位上里面

1226
00:42:24,000 --> 00:42:26,000
原来都有定义的

1227
00:42:26,000 --> 00:42:28,000
如果大家去翻就甚至比如说那个箭头

1228
00:42:28,000 --> 00:42:30,000
那个箭头它都会写

1229
00:42:30,000 --> 00:42:32,000
左箭头右箭头它都会有一个

1230
00:42:32,000 --> 00:42:34,000
比如说 emoges style 是什么样的

1231
00:42:34,000 --> 00:42:36,000
text style 是什么样的

1232
00:42:36,000 --> 00:42:38,000
它本来在 UniCode

1233
00:42:38,000 --> 00:42:40,000
马位的时候它就有定义了

1234
00:42:40,000 --> 00:42:42,000
那

1235
00:42:42,000 --> 00:42:44,000
然后你在这边再进行

1236
00:42:44,000 --> 00:42:46,000
这个选择的时候

1237
00:42:46,000 --> 00:42:48,000
它就依照那个定义去显示

1238
00:42:48,000 --> 00:42:50,000
就完了

1239
00:42:50,000 --> 00:42:52,000
那也就是说是一个

1240
00:42:52,000 --> 00:42:54,000
我可以这么理解吗

1241
00:42:54,000 --> 00:42:56,000
就是 emoges 的那个马位对应成那种文本的形式的时候

1242
00:42:56,000 --> 00:42:58,000
它是一个一对一的

1243
00:42:58,000 --> 00:43:00,000
有些是

1244
00:43:00,000 --> 00:43:02,000
数学里面有一个性质

1245
00:43:02,000 --> 00:43:04,000
就是满设

1246
00:43:04,000 --> 00:43:06,000
全硬设你想说这个是吧

1247
00:43:06,000 --> 00:43:08,000
但是也不是

1248
00:43:08,000 --> 00:43:10,000
有些是没有对应的文本的形式

1249
00:43:10,000 --> 00:43:12,000
我知道你的这个意思

1250
00:43:12,000 --> 00:43:14,000
我想怎么解释清楚这个概念

1251
00:43:14,000 --> 00:43:16,000
就是

1252
00:43:16,000 --> 00:43:18,000
有一些 emoges 的图案

1253
00:43:18,000 --> 00:43:20,000
图案是没有对应的文本形态的

1254
00:43:20,000 --> 00:43:22,000
但是

1255
00:43:22,000 --> 00:43:24,000
如果它有的话它一定是一个一对应的关系

1256
00:43:24,000 --> 00:43:26,000
是

1257
00:43:26,000 --> 00:43:28,000
明白了

1258
00:43:28,000 --> 00:43:30,000
就现有的情况来看是这样的

1259
00:43:30,000 --> 00:43:32,000
是的

1260
00:43:32,000 --> 00:43:34,000
比如说你有一个什么

1261
00:43:34,000 --> 00:43:36,000
西兰花的一个 emoges 的形式吗

1262
00:43:36,000 --> 00:43:38,000
但是你就没有西兰花的

1263
00:43:38,000 --> 00:43:40,000
这个文本形式吗

1264
00:43:40,000 --> 00:43:42,000
就是原来的那个

1265
00:43:42,000 --> 00:43:44,000
西兰花

1266
00:43:44,000 --> 00:43:46,000
不是有西兰花吗

1267
00:43:46,000 --> 00:43:48,000
那我再问一个问题

1268
00:43:48,000 --> 00:43:50,000
就是那个什么

1269
00:43:50,000 --> 00:43:52,000
现在 emoges 上一半不是出了各种

1270
00:43:52,000 --> 00:43:54,000
各种辐射人种吗对吧

1271
00:43:54,000 --> 00:43:56,000
它要做成这个文本形式怎么办

1272
00:43:56,000 --> 00:43:58,000
首先

1273
00:43:58,000 --> 00:44:00,000
这个我们后面会讲

1274
00:44:00,000 --> 00:44:02,000
就是肤色的话

1275
00:44:02,000 --> 00:44:04,000
它其实是一个肤色定义符

1276
00:44:04,000 --> 00:44:06,000
我知道但是就是它

1277
00:44:06,000 --> 00:44:08,000
长好成文本之后就没有颜色

1278
00:44:08,000 --> 00:44:10,000
这个表达形式了

1279
00:44:10,000 --> 00:44:12,000
所以它会退化成

1280
00:44:12,000 --> 00:44:14,000
这显示出来的它就变成了两个符号

1281
00:44:14,000 --> 00:44:16,000
就是原来

1282
00:44:16,000 --> 00:44:18,000
一个人

1283
00:44:18,000 --> 00:44:20,000
然后一个那个

1284
00:44:20,000 --> 00:44:22,000
肤色符它其实就是阴影

1285
00:44:22,000 --> 00:44:24,000
是从农度的阴影

1286
00:44:24,000 --> 00:44:26,000
它会显示成两个

1287
00:44:26,000 --> 00:44:28,000
这当然

1288
00:44:28,000 --> 00:44:30,000
也要看环境了

1289
00:44:30,000 --> 00:44:32,000
要看环境看得出

1290
00:44:32,000 --> 00:44:34,000
实际上新造的 emoges

1291
00:44:34,000 --> 00:44:36,000
他们通常不会再特意造

1292
00:44:36,000 --> 00:44:38,000
一个文本形式

1293
00:44:38,000 --> 00:44:40,000
就那种有文本形式的

1294
00:44:40,000 --> 00:44:42,000
多半都是因为它本来是个文本符号

1295
00:44:42,000 --> 00:44:44,000
然后后来 emoges 也把它

1296
00:44:44,000 --> 00:44:46,000
做了一个 emoges 的版本

1297
00:44:46,000 --> 00:44:48,000
所以这时候就是

1298
00:44:48,000 --> 00:44:50,000
刚发了一个页面

1299
00:44:50,000 --> 00:44:52,000
它经常会遇到的一个符号

1300
00:44:52,000 --> 00:44:54,000
就是它原来是有这样一个

1301
00:44:54,000 --> 00:44:56,000
纯文本形它的符号

1302
00:44:56,000 --> 00:44:58,000
但是 emoges 进到 unicode 了之后

1303
00:44:58,000 --> 00:45:00,000
emoges 的部分里面也有这样一个符号

1304
00:45:00,000 --> 00:45:02,000
然后那个符号是一个图像形式的

1305
00:45:02,000 --> 00:45:04,000
就重了嘛

1306
00:45:04,000 --> 00:45:06,000
像比如说圆圈啊

1307
00:45:06,000 --> 00:45:08,000
方块啊还有比如说

1308
00:45:08,000 --> 00:45:10,000
上下左右镜头啊就是重灾区嘛

1309
00:45:10,000 --> 00:45:12,000
就是都会有这个问题

1310
00:45:12,000 --> 00:45:14,000
明白了

1311
00:45:14,000 --> 00:45:16,000
然后再接着讲就是

1312
00:45:16,000 --> 00:45:18,000
然后大家发现说

1313
00:45:18,000 --> 00:45:20,000
我要切换普通字符和 emoges

1314
00:45:20,000 --> 00:45:22,000
都要靠语言来讲的话

1315
00:45:22,000 --> 00:45:24,000
的确是太坑了

1316
00:45:24,000 --> 00:45:26,000
于是大家就想出了第三种办法

1317
00:45:26,000 --> 00:45:28,000
应该乖乖的用 vs

1318
00:45:28,000 --> 00:45:30,000
vs 是叫什么

1319
00:45:30,000 --> 00:45:32,000
叫 Verration Sequence

1320
00:45:32,000 --> 00:45:34,000
叫什么

1321
00:45:34,000 --> 00:45:36,000
便体训练

1322
00:45:36,000 --> 00:45:38,000
没错

1323
00:45:38,000 --> 00:45:40,000
所以呢

1324
00:45:40,000 --> 00:45:42,000
不能切换语言呢

1325
00:45:42,000 --> 00:45:44,000
它就另外再加个便体训练

1326
00:45:44,000 --> 00:45:46,000
它字符是要训练就是说

1327
00:45:46,000 --> 00:45:48,000
原来这个码位后面再加一个码位

1328
00:45:48,000 --> 00:45:50,000
让它变成一个训练

1329
00:45:50,000 --> 00:45:52,000
然后补充说明说

1330
00:45:52,000 --> 00:45:54,000
我这时候要的是

1331
00:45:54,000 --> 00:45:56,000
普通字符的形状

1332
00:45:56,000 --> 00:45:58,000
或者说我

1333
00:45:58,000 --> 00:46:00,000
规定要用 emoges 的形状

1334
00:46:00,000 --> 00:46:02,000
为此呢

1335
00:46:02,000 --> 00:46:04,000
Unicode 专门指定了

1336
00:46:04,000 --> 00:46:08,000
在 Unicode 有好多好多的便体训练符

1337
00:46:08,000 --> 00:46:10,000
符号

1338
00:46:10,000 --> 00:46:12,000
然后有好多的 vs

1339
00:46:12,000 --> 00:46:14,000
然后它就指定第 15 号的 vs

1340
00:46:14,000 --> 00:46:16,000
用来指定代表

1341
00:46:16,000 --> 00:46:18,000
是来指定

1342
00:46:18,000 --> 00:46:20,000
用文本形式显示

1343
00:46:20,000 --> 00:46:22,000
第 16 号的 vs 是用

1344
00:46:22,000 --> 00:46:24,000
表情符号显示

1345
00:46:24,000 --> 00:46:26,000
所以你只要这样比如说

1346
00:46:26,000 --> 00:46:28,000
在一个左键头里面

1347
00:46:28,000 --> 00:46:30,000
后面再补一个加一个 15 号的

1348
00:46:30,000 --> 00:46:32,000
便体训练的话

1349
00:46:32,000 --> 00:46:34,000
最后就是

1350
00:46:34,000 --> 00:46:36,000
强制说我这前面

1351
00:46:36,000 --> 00:46:38,000
码位一定要用文本形式来显示

1352
00:46:38,000 --> 00:46:40,000
其实就是说

1353
00:46:40,000 --> 00:46:42,000
我后面补充说明

1354
00:46:42,000 --> 00:46:44,000
可以吗

1355
00:46:44,000 --> 00:46:46,000
所有这些加码位会变成什么样子呢

1356
00:46:46,000 --> 00:46:48,000
在 Unicode 的码位表里面

1357
00:46:48,000 --> 00:46:50,000
也都是有定义的

1358
00:46:50,000 --> 00:46:52,000
ok

1359
00:46:52,000 --> 00:46:54,000
这个其实我们 tibe 的网站上

1360
00:46:54,000 --> 00:46:56,000
也出了好多这个问题

1361
00:46:56,000 --> 00:46:58,000
对吧 正愚

1362
00:46:58,000 --> 00:47:00,000
这个就是我刚刚给你们发了

1363
00:47:00,000 --> 00:47:02,000
一个网页链接里

1364
00:47:02,000 --> 00:47:04,000
这是我们在这个

1365
00:47:04,000 --> 00:47:06,000
我们经常写博客可能会用到的

1366
00:47:06,000 --> 00:47:08,000
这样一个字符

1367
00:47:08,000 --> 00:47:10,000
比如说你用一些 markdown 的编辑次

1368
00:47:10,000 --> 00:47:12,000
你写一个角柱

1369
00:47:12,000 --> 00:47:14,000
它把你自动生成那个

1370
00:47:14,000 --> 00:47:16,000
角柱的那个跳转回去的

1371
00:47:16,000 --> 00:47:18,000
那个符号它会加上这个符号

1372
00:47:18,000 --> 00:47:20,000
然后这个符号恰好就是

1373
00:47:20,000 --> 00:47:22,000
回车嘛 就像那个回车的那样

1374
00:47:22,000 --> 00:47:24,000
它是一个返回符号

1375
00:47:24,000 --> 00:47:26,000
就是一个返回箭头

1376
00:47:26,000 --> 00:47:28,000
类似这样一个

1377
00:47:28,000 --> 00:47:30,000
然后这个符号恰好就是

1378
00:47:30,000 --> 00:47:32,000
就是我们遇到的那种

1379
00:47:32,000 --> 00:47:34,000
它本身有一个 text 的形式的

1380
00:47:34,000 --> 00:47:36,000
但是它也有一个 mode 形式的这样一个符号

1381
00:47:36,000 --> 00:47:38,000
然后

1382
00:47:38,000 --> 00:47:40,000
这种符号

1383
00:47:40,000 --> 00:47:42,000
如果我们用了这个正确的 vs

1384
00:47:42,000 --> 00:47:44,000
来指定它强制显示那种形式的话

1385
00:47:44,000 --> 00:47:46,000
那么现在的操作系统和浏览器

1386
00:47:46,000 --> 00:47:48,000
都会显示的对

1387
00:47:48,000 --> 00:47:50,000
但如果你没有加这个 vs

1388
00:47:50,000 --> 00:47:52,000
也就是我只放了这个

1389
00:47:52,000 --> 00:47:54,000
马位的

1390
00:47:54,000 --> 00:47:56,000
就没有后面加更多的东西

1391
00:47:56,000 --> 00:47:58,000
那么在不同的环境中

1392
00:47:58,000 --> 00:48:00,000
有的时候会显示的不一致

1393
00:48:00,000 --> 00:48:02,000
谁知道它会变成什么样子

1394
00:48:02,000 --> 00:48:04,000
就是如果你不指定的话

1395
00:48:04,000 --> 00:48:06,000
其实这应该算是一个

1396
00:48:06,000 --> 00:48:08,000
我们现在的错误吧

1397
00:48:08,000 --> 00:48:10,000
我觉得就是我们现在发现不一致的

1398
00:48:10,000 --> 00:48:12,000
最明显的就是 iOS 的 safari

1399
00:48:12,000 --> 00:48:14,000
或者说它的 webview 上面

1400
00:48:14,000 --> 00:48:16,000
会出现优先显示 mode 形态的这种情况

1401
00:48:16,000 --> 00:48:18,000
那么安德尔雄利克的

1402
00:48:18,000 --> 00:48:20,000
标准的这个定义来说

1403
00:48:20,000 --> 00:48:22,000
它应该是优先显示

1404
00:48:22,000 --> 00:48:24,000
纯文本形式的

1405
00:48:24,000 --> 00:48:26,000
但这个可能是当时

1406
00:48:26,000 --> 00:48:28,000
我不知道是不是因为

1407
00:48:28,000 --> 00:48:30,000
苹果为了 show 它的这个 mode 自体

1408
00:48:30,000 --> 00:48:32,000
所以像尽可能能显示成 mode 符号的

1409
00:48:32,000 --> 00:48:34,000
字符都显示上来

1410
00:48:34,000 --> 00:48:36,000
对 就是在 iOS 嘛

1411
00:48:36,000 --> 00:48:38,000
在一动作的话就尽量

1412
00:48:38,000 --> 00:48:40,000
都显示成 mode 了嘛

1413
00:48:40,000 --> 00:48:44,000
对 但 mode 上的 safari 就没有这个问题

1414
00:48:46,000 --> 00:48:50,000
所以我与其这样不可控

1415
00:48:50,000 --> 00:48:52,000
我还不如说硬加上这个指定符

1416
00:48:52,000 --> 00:48:54,000
让它强制指定变成

1417
00:48:54,000 --> 00:48:56,000
我所要的样子

1418
00:48:56,000 --> 00:48:58,000
对

1419
00:48:58,000 --> 00:49:00,000
所以加的这个东西就叫 VS

1420
00:49:00,000 --> 00:49:02,000
就叫变体序列

1421
00:49:02,000 --> 00:49:04,000
而且呢

1422
00:49:04,000 --> 00:49:06,000
这个变体序列它也是一个特殊的控制符

1423
00:49:06,000 --> 00:49:08,000
对于

1424
00:49:08,000 --> 00:49:10,000
可能熟悉

1425
00:49:10,000 --> 00:49:12,000
什么中汉字什么一体字的朋友嘛

1426
00:49:12,000 --> 00:49:14,000
就经常会想到那个什么

1427
00:49:14,000 --> 00:49:16,000
我们叫什么一体字的

1428
00:49:16,000 --> 00:49:18,000
表义字的一体字序列

1429
00:49:18,000 --> 00:49:20,000
那个就是 iVS

1430
00:49:20,000 --> 00:49:22,000
就我们这个

1431
00:49:22,000 --> 00:49:24,000
ideographic

1432
00:49:24,000 --> 00:49:26,000
表义字的变体序列

1433
00:49:26,000 --> 00:49:28,000
就经常比如说

1434
00:49:28,000 --> 00:49:30,000
比如说回字有四种写法

1435
00:49:30,000 --> 00:49:32,000
现在呢就有这个 iVS

1436
00:49:32,000 --> 00:49:34,000
在一个汉字后面

1437
00:49:34,000 --> 00:49:36,000
补上各种各样的给它编号

1438
00:49:36,000 --> 00:49:38,000
1 号

1439
00:49:38,000 --> 00:49:40,000
1 号回字

1440
00:49:40,000 --> 00:49:42,000
2 号回字

1441
00:49:42,000 --> 00:49:44,000
3 号回字

1442
00:49:44,000 --> 00:49:46,000
4 号回字

1443
00:49:46,000 --> 00:49:48,000
强制指定让它显示成这个

1444
00:49:48,000 --> 00:49:50,000
某个一体字的样子

1445
00:49:50,000 --> 00:49:52,000
这个东西的话其实在

1446
00:49:52,000 --> 00:49:54,000
因为在日本的需求是

1447
00:49:54,000 --> 00:49:56,000
非常大的

1448
00:49:56,000 --> 00:49:58,000
现在呢就是新的操作平台和环境里面

1449
00:49:58,000 --> 00:50:00,000
反正在中国国内的话

1450
00:50:00,000 --> 00:50:02,000
因为对一体字的要求不是很多

1451
00:50:02,000 --> 00:50:04,000
所以呢

1452
00:50:04,000 --> 00:50:06,000
倒不是支持得很

1453
00:50:06,000 --> 00:50:08,000
广泛

1454
00:50:08,000 --> 00:50:10,000
哎呦我差一个问题

1455
00:50:10,000 --> 00:50:12,000
就是你日人民最喜欢用的 M 字是哪一个

1456
00:50:12,000 --> 00:50:14,000
啊

1457
00:50:14,000 --> 00:50:16,000
这什么问题好像是

1458
00:50:16,000 --> 00:50:18,000
之前不是平选过吧

1459
00:50:18,000 --> 00:50:20,000
就是全球有什么

1460
00:50:20,000 --> 00:50:22,000
苹果是那个笑哭的一个吧

1461
00:50:22,000 --> 00:50:24,000
笑哭的是全球

1462
00:50:24,000 --> 00:50:26,000
全球的是吧

1463
00:50:26,000 --> 00:50:28,000
全球最喜欢用的

1464
00:50:28,000 --> 00:50:30,000
我也是高频用那个

1465
00:50:30,000 --> 00:50:32,000
日本的

1466
00:50:32,000 --> 00:50:34,000
有吗我不知道

1467
00:50:34,000 --> 00:50:36,000
他好像有专门评论

1468
00:50:36,000 --> 00:50:38,000
就是选那个全球

1469
00:50:38,000 --> 00:50:40,000
美国国家的

1470
00:50:40,000 --> 00:50:42,000
哪一个国家是

1471
00:50:42,000 --> 00:50:44,000
最喜欢用那个败用手败败的那个姿势

1472
00:50:44,000 --> 00:50:46,000
那不是太中文吗

1473
00:50:46,000 --> 00:50:48,000
中国吗

1474
00:50:48,000 --> 00:50:50,000
好像不是太中文

1475
00:50:50,000 --> 00:50:52,000
就是泰国人不是美说句话

1476
00:50:52,000 --> 00:50:54,000
但是有合感吗

1477
00:50:54,000 --> 00:50:56,000
所有

1478
00:50:56,000 --> 00:50:58,000
泰国人说话都必须要合展

1479
00:50:58,000 --> 00:51:00,000
我不觉得那肯定是泰国

1480
00:51:00,000 --> 00:51:02,000
或者东南亚人民

1481
00:51:02,000 --> 00:51:04,000
对 泰国看新闻

1482
00:51:04,000 --> 00:51:06,000
主持人结束之后都要拜拜一下

1483
00:51:06,000 --> 00:51:08,000
他们普通人说话

1484
00:51:08,000 --> 00:51:10,000
就是必须的

1485
00:51:10,000 --> 00:51:12,000
比如说 Savaticra 就必须的

1486
00:51:12,000 --> 00:51:14,000
平时有时候

1487
00:51:14,000 --> 00:51:16,000
两个泰国人在街上

1488
00:51:16,000 --> 00:51:18,000
你不说也是还蛮正常的吧

1489
00:51:18,000 --> 00:51:20,000
理论上讲就必须的要的

1490
00:51:20,000 --> 00:51:22,000
你说 Savaticra 但是不合展的话

1491
00:51:22,000 --> 00:51:24,000
就等于就不在意

1492
00:51:24,000 --> 00:51:26,000
动力帽是吧

1493
00:51:26,000 --> 00:51:28,000
没有在打招呼

1494
00:51:28,000 --> 00:51:30,000
对于泰国人来讲

1495
00:51:30,000 --> 00:51:32,000
就是

1496
00:51:32,000 --> 00:51:34,000
我为什么说这个

1497
00:51:34,000 --> 00:51:36,000
所以你查到那个

1498
00:51:36,000 --> 00:51:38,000
我最受欢迎的 Amojib

1499
00:51:38,000 --> 00:51:40,000
日本最受欢迎

1500
00:51:40,000 --> 00:51:42,000
你刚才说到日本人对 Amojib 的需求很高吗

1501
00:51:42,000 --> 00:51:44,000
我刚才说的是

1502
00:51:44,000 --> 00:51:46,000
日本人对那个一体字的需求很高

1503
00:51:46,000 --> 00:51:48,000
一体字

1504
00:51:48,000 --> 00:51:50,000
sorry

1505
00:51:50,000 --> 00:51:52,000
日本人

1506
00:51:52,000 --> 00:51:54,000
日本现在都流行

1507
00:51:54,000 --> 00:51:56,000
用那个各种贴纸

1508
00:51:56,000 --> 00:51:58,000
是吧

1509
00:51:58,000 --> 00:52:00,000
如果那样你看了

1510
00:52:00,000 --> 00:52:02,000
如果你用 line 的话

1511
00:52:02,000 --> 00:52:04,000
大家还是用贴纸

1512
00:52:04,000 --> 00:52:06,000
就像

1513
00:52:06,000 --> 00:52:08,000
用微信的同学都用贴图

1514
00:52:08,000 --> 00:52:10,000
对

1515
00:52:10,000 --> 00:52:12,000
我一度是

1516
00:52:12,000 --> 00:52:14,000
从来不贴图

1517
00:52:14,000 --> 00:52:16,000
好烦

1518
00:52:16,000 --> 00:52:18,000
好吧

1519
00:52:18,000 --> 00:52:20,000
我们先说回 Amoji

1520
00:52:20,000 --> 00:52:22,000
我们下一个话题

1521
00:52:22,000 --> 00:52:24,000
合成 Amoji 的问题

1522
00:52:24,000 --> 00:52:26,000
并不是一个 Amoji

1523
00:52:26,000 --> 00:52:28,000
对应一个马位

1524
00:52:28,000 --> 00:52:30,000
而且 Amoji 的合成

1525
00:52:30,000 --> 00:52:32,000
还有各种各样的问题

1526
00:52:32,000 --> 00:52:34,000
我们上次并没有说清楚

1527
00:52:34,000 --> 00:52:36,000
所以这次再跟大家总的来讲一下

1528
00:52:36,000 --> 00:52:38,000
因为上次说的 00 岁岁的

1529
00:52:38,000 --> 00:52:40,000
对

1530
00:52:40,000 --> 00:52:42,000
首先 Amoji 里面有单体

1531
00:52:42,000 --> 00:52:44,000
还有合成

1532
00:52:44,000 --> 00:52:46,000
所谓的 Amoji sequence

1533
00:52:46,000 --> 00:52:48,000
训练里面

1534
00:52:48,000 --> 00:52:50,000
基本的常用的话

1535
00:52:50,000 --> 00:52:52,000
是有三个

1536
00:52:52,000 --> 00:52:54,000
一个是叫 combining sequence

1537
00:52:54,000 --> 00:52:56,000
组合训练

1538
00:52:56,000 --> 00:52:58,000
比如说那个键位

1539
00:52:58,000 --> 00:53:00,000
比如说键帽

1540
00:53:00,000 --> 00:53:02,000
比如说键盘

1541
00:53:02,000 --> 00:53:04,000
1 号键盘

1542
00:53:04,000 --> 00:53:06,000
比如说像电话键盘

1543
00:53:06,000 --> 00:53:08,000
数字 12356789

1544
00:53:08,000 --> 00:53:10,000
还有键号

1545
00:53:10,000 --> 00:53:12,000
如果后面加上

1546
00:53:12,000 --> 00:53:14,000
2013

1547
00:53:14,000 --> 00:53:16,000
2013

1548
00:53:16,000 --> 00:53:18,000
键

1549
00:53:18,000 --> 00:53:20,000
叫 keycap

1550
00:53:20,000 --> 00:53:22,000
键帽

1551
00:53:22,000 --> 00:53:24,000
马位它会自动组合成

1552
00:53:24,000 --> 00:53:26,000
一个就比如 1 号键

1553
00:53:26,000 --> 00:53:28,000
这样的一个 Amoji

1554
00:53:28,000 --> 00:53:30,000
所以

1555
00:53:30,000 --> 00:53:32,000
你看上去是 1 号键的 Amoji

1556
00:53:32,000 --> 00:53:34,000
可是

1557
00:53:34,000 --> 00:53:36,000
它实际上它是一个数字 1 的

1558
00:53:36,000 --> 00:53:38,000
一个马位和键帽

1559
00:53:38,000 --> 00:53:40,000
这两个马位组合而成的

1560
00:53:40,000 --> 00:53:42,000
这个是

1561
00:53:42,000 --> 00:53:44,000
所谓的组合 sacrce

1562
00:53:44,000 --> 00:53:46,000
第二个就是大家

1563
00:53:46,000 --> 00:53:48,000
经常常见的 Modify sequence

1564
00:53:48,000 --> 00:53:50,000
比如说

1565
00:53:50,000 --> 00:53:52,000
浮色

1566
00:53:52,000 --> 00:53:54,000
会在

1567
00:53:54,000 --> 00:53:56,000
凡是和人脸有关系的

1568
00:53:56,000 --> 00:53:58,000
图

1569
00:53:58,000 --> 00:54:00,000
后面可以加上

1570
00:54:00,000 --> 00:54:02,000
浮色的话是现在有

1571
00:54:02,000 --> 00:54:04,000
几层啊?123456

1572
00:54:04,000 --> 00:54:06,000
6 个层度

1573
00:54:06,000 --> 00:54:08,000
6 个层度是吧?

1574
00:54:08,000 --> 00:54:10,000
6 个黑度

1575
00:54:10,000 --> 00:54:12,000
好吧 6 个黑度

1576
00:54:12,000 --> 00:54:14,000
Fitspatric

1577
00:54:14,000 --> 00:54:16,000
定义的 6 个层度

1578
00:54:16,000 --> 00:54:18,000
由白到黑

1579
00:54:18,000 --> 00:54:20,000
甚至呢

1580
00:54:20,000 --> 00:54:22,000
不仅是人的脸

1581
00:54:22,000 --> 00:54:24,000
包括人的各种器官

1582
00:54:24,000 --> 00:54:26,000
包括手啊腿啊脚啊

1583
00:54:26,000 --> 00:54:28,000
比如说鼓掌

1584
00:54:28,000 --> 00:54:30,000
也可以的

1585
00:54:30,000 --> 00:54:32,000
哪些可以加哪些可以不加

1586
00:54:32,000 --> 00:54:34,000
在 Unicode 也是有定义的

1587
00:54:34,000 --> 00:54:36,000
就是说这个范围内的

1588
00:54:36,000 --> 00:54:38,000
东西是可以配合

1589
00:54:38,000 --> 00:54:40,000
这个浮色

1590
00:54:40,000 --> 00:54:42,000
浮色定义服的

1591
00:54:42,000 --> 00:54:44,000
所以呢

1592
00:54:44,000 --> 00:54:46,000
你可以

1593
00:54:46,000 --> 00:54:48,000
所以圣诞老人

1594
00:54:48,000 --> 00:54:50,000
老人也是可以的嘛

1595
00:54:50,000 --> 00:54:52,000
因此圣诞老人也有各种各样的

1596
00:54:52,000 --> 00:54:54,000
浮色的版本

1597
00:54:54,000 --> 00:54:56,000
但是没花路就没有啊

1598
00:54:56,000 --> 00:54:58,000
对不对?那个路呢

1599
00:54:58,000 --> 00:55:00,000
是不能配合人的浮色的版本

1600
00:55:00,000 --> 00:55:02,000
所以呢有的是可以加

1601
00:55:02,000 --> 00:55:04,000
有的不能加能不能加是

1602
00:55:04,000 --> 00:55:06,000
有定义的

1603
00:55:06,000 --> 00:55:08,000
然后呢

1604
00:55:08,000 --> 00:55:10,000
然后

1605
00:55:10,000 --> 00:55:12,000
第三个主要

1606
00:55:12,000 --> 00:55:14,000
为什么你们笑那么奇怪

1607
00:55:14,000 --> 00:55:16,000
第三个

1608
00:55:16,000 --> 00:55:18,000
笑点是什么你解释一下

1609
00:55:18,000 --> 00:55:20,000
我也不知道这是上下

1610
00:55:20,000 --> 00:55:22,000
没有没有

1611
00:55:22,000 --> 00:55:24,000
因为我刚才决定的不好

1612
00:55:24,000 --> 00:55:26,000
我应该说

1613
00:55:26,000 --> 00:55:28,000
比如说鱼也是不能加上浮色的

1614
00:55:28,000 --> 00:55:30,000
比如说黑鱼就变得烤鱼是吧

1615
00:55:30,000 --> 00:55:32,000
对啊其实

1616
00:55:32,000 --> 00:55:34,000
如果我们自己想一想

1617
00:55:34,000 --> 00:55:36,000
这个问题还蛮可笑的

1618
00:55:36,000 --> 00:55:38,000
就是

1619
00:55:38,000 --> 00:55:40,000
凭什么 Unicle 的规定了哪个东西

1620
00:55:40,000 --> 00:55:42,000
能加浮色

1621
00:55:42,000 --> 00:55:44,000
实际上

1622
00:55:44,000 --> 00:55:46,000
如果我有一个

1623
00:55:46,000 --> 00:55:48,000
Unicle 的最终掌握所有的种族问题的

1624
00:55:48,000 --> 00:55:50,000
伸杀大权

1625
00:55:50,000 --> 00:55:52,000
对啊

1626
00:55:52,000 --> 00:55:54,000
而且浮色没有任何的

1627
00:55:54,000 --> 00:55:56,000
浮色而且没有任何的意义

1628
00:55:56,000 --> 00:55:58,000
浮色也不能吃分种族

1629
00:55:58,000 --> 00:56:00,000
对

1630
00:56:00,000 --> 00:56:02,000
不能严格的用浮色来吃分种

1631
00:56:02,000 --> 00:56:04,000
所以就没有任何的意义

1632
00:56:04,000 --> 00:56:06,000
反正这个事情很扯的

1633
00:56:06,000 --> 00:56:08,000
然后接着讲

1634
00:56:08,000 --> 00:56:10,000
第三种就是 Emoji 的 FLAG sequence

1635
00:56:10,000 --> 00:56:12,000
FLAG 就是旗帜

1636
00:56:12,000 --> 00:56:14,000
这个好像我们上次没说过

1637
00:56:14,000 --> 00:56:16,000
比如说我们看起来

1638
00:56:16,000 --> 00:56:18,000
比如说中国的国旗

1639
00:56:18,000 --> 00:56:20,000
是一个 Emoji

1640
00:56:20,000 --> 00:56:22,000
但是它的背后

1641
00:56:22,000 --> 00:56:24,000
其实是至少是三个马位

1642
00:56:24,000 --> 00:56:26,000
首先是一个旗

1643
00:56:26,000 --> 00:56:28,000
一个空旗

1644
00:56:28,000 --> 00:56:30,000
代表一个旗帜的一个马位

1645
00:56:30,000 --> 00:56:32,000
然后加上

1646
00:56:32,000 --> 00:56:34,000
比如说中国是 CN 对吧

1647
00:56:34,000 --> 00:56:36,000
就是这个区

1648
00:56:36,000 --> 00:56:38,000
它有个专门

1649
00:56:38,000 --> 00:56:40,000
ISO 的那个国家代码

1650
00:56:40,000 --> 00:56:42,000
它有专门的一个叫 Regional indicator

1651
00:56:42,000 --> 00:56:44,000
这叫什么

1652
00:56:44,000 --> 00:56:46,000
区域指示服

1653
00:56:46,000 --> 00:56:48,000
的这样一个东西

1654
00:56:48,000 --> 00:56:50,000
其实这个区域指示服就是 26 个字母

1655
00:56:50,000 --> 00:56:52,000
然后就

1656
00:56:52,000 --> 00:56:54,000
专用的

1657
00:56:54,000 --> 00:56:56,000
就是这个专门用在旗帜上的

1658
00:56:56,000 --> 00:56:58,000
这种组合的

1659
00:56:58,000 --> 00:57:00,000
比如说这个旗

1660
00:57:00,000 --> 00:57:02,000
旗帜

1661
00:57:02,000 --> 00:57:04,000
然后旗帜专用的 C

1662
00:57:04,000 --> 00:57:06,000
旗帜专用的 N

1663
00:57:06,000 --> 00:57:08,000
那就是 CN 的旗

1664
00:57:08,000 --> 00:57:10,000
也就是中国的旗

1665
00:57:10,000 --> 00:57:12,000
然后呢这三个

1666
00:57:12,000 --> 00:57:14,000
马位拼在一起的话

1667
00:57:14,000 --> 00:57:16,000
显示出来是中国的国旗

1668
00:57:16,000 --> 00:57:18,000
但是它背后是三个马位

1669
00:57:18,000 --> 00:57:20,000
那你说第三个是什么来的

1670
00:57:20,000 --> 00:57:22,000
第三个是什么

1671
00:57:22,000 --> 00:57:24,000
国家代码嘛

1672
00:57:24,000 --> 00:57:26,000
国家代表是两个数

1673
00:57:26,000 --> 00:57:28,000
两个拉钉字母

1674
00:57:28,000 --> 00:57:30,000
比如说 CN

1675
00:57:30,000 --> 00:57:32,000
三个

1676
00:57:32,000 --> 00:57:34,000
也不够用啊

1677
00:57:34,000 --> 00:57:36,000
所以这个也是有定义的

1678
00:57:36,000 --> 00:57:38,000
的确是不够用

1679
00:57:38,000 --> 00:57:40,000
但是还是有定义的

1680
00:57:40,000 --> 00:57:42,000
然后这还会

1681
00:57:42,000 --> 00:57:44,000
涉及到后面的东西

1682
00:57:44,000 --> 00:57:46,000
然后这是主要的

1683
00:57:46,000 --> 00:57:48,000
主要的常用的

1684
00:57:48,000 --> 00:57:50,000
MUG 的就是这三种了

1685
00:57:50,000 --> 00:57:52,000
然后还有自要的就是

1686
00:57:52,000 --> 00:57:54,000
各种扩展型的

1687
00:57:54,000 --> 00:57:56,000
扩展型的就比如说最近的

1688
00:57:56,000 --> 00:57:58,000
AOS 它现在

1689
00:57:58,000 --> 00:58:00,000
经常加的比如说各种

1690
00:58:00,000 --> 00:58:02,000
家族和各种家庭

1691
00:58:02,000 --> 00:58:04,000
还有职业的这种 MUG

1692
00:58:04,000 --> 00:58:06,000
这种 MUG 是自由组合的

1693
00:58:06,000 --> 00:58:08,000
所以呢并不是

1694
00:58:08,000 --> 00:58:10,000
有的字体有有的字体没有

1695
00:58:10,000 --> 00:58:12,000
那比如说现在这些家的

1696
00:58:12,000 --> 00:58:14,000
各种各样的家庭嘛

1697
00:58:14,000 --> 00:58:16,000
不是现在

1698
00:58:16,000 --> 00:58:18,000
奇怪的家庭组合

1699
00:58:18,000 --> 00:58:20,000
两个男人

1700
00:58:20,000 --> 00:58:22,000
两个男人和一个男孩

1701
00:58:22,000 --> 00:58:24,000
组成的家庭

1702
00:58:24,000 --> 00:58:26,000
所以大家去发那个家庭不有各种

1703
00:58:26,000 --> 00:58:28,000
各种各样的组合吗

1704
00:58:28,000 --> 00:58:30,000
一个男人和一个女人组合

1705
00:58:30,000 --> 00:58:32,000
然后带两个男孩

1706
00:58:32,000 --> 00:58:34,000
就这样子嘛

1707
00:58:34,000 --> 00:58:36,000
因为各有各种各样的家庭嘛

1708
00:58:36,000 --> 00:58:38,000
所以呢给它拼合起来

1709
00:58:38,000 --> 00:58:40,000
这个拼合用的是一个

1710
00:58:40,000 --> 00:58:42,000
ZWJ 就是我们

1711
00:58:42,000 --> 00:58:44,000
所说的那个叫什么

1712
00:58:44,000 --> 00:58:46,000
零宽组合

1713
00:58:46,000 --> 00:58:48,000
ZeroWiz

1714
00:58:48,000 --> 00:58:50,000
ZeroWizJoiner

1715
00:58:50,000 --> 00:58:52,000
所以呢

1716
00:58:52,000 --> 00:58:54,000
像比如说我刚才说的

1717
00:58:54,000 --> 00:58:56,000
两个男人和一个孩子

1718
00:58:56,000 --> 00:58:58,000
三口之家

1719
00:58:58,000 --> 00:59:00,000
我们看起来是三口之家

1720
00:59:00,000 --> 00:59:02,000
这样一个 MUG

1721
00:59:02,000 --> 00:59:04,000
但是实际上它的背后呢

1722
00:59:04,000 --> 00:59:06,000
是

1723
00:59:06,000 --> 00:59:08,000
一个

1724
00:59:08,000 --> 00:59:10,000
一个男人

1725
00:59:10,000 --> 00:59:12,000
然后

1726
00:59:12,000 --> 00:59:14,000
加上这个加号就必须要用那个

1727
00:59:14,000 --> 00:59:16,000
ZeroWizJoiner

1728
00:59:16,000 --> 00:59:18,000
加上一个男人

1729
00:59:18,000 --> 00:59:20,000
再加上一个小孩

1730
00:59:20,000 --> 00:59:22,000
所以你看起来表面上是一个 MUG

1731
00:59:22,000 --> 00:59:24,000
可是背后呢是

1732
00:59:24,000 --> 00:59:26,000
五个马尾

1733
00:59:26,000 --> 00:59:28,000
OK

1734
00:59:28,000 --> 00:59:30,000
就是比如说就是

1735
00:59:30,000 --> 00:59:32,000
家庭还比如说职业

1736
00:59:32,000 --> 00:59:34,000
比如说职业的话

1737
00:59:34,000 --> 00:59:36,000
一个女性的山地车

1738
00:59:36,000 --> 00:59:38,000
运动员

1739
00:59:38,000 --> 00:59:40,000
为了

1740
00:59:40,000 --> 00:59:42,000
OK

1741
00:59:42,000 --> 00:59:44,000
他们终于发明了中国的部手

1742
00:59:44,000 --> 00:59:46,000
偏旁部手

1743
00:59:46,000 --> 00:59:48,000
这样的

1744
00:59:48,000 --> 00:59:50,000
所以你看起来这是一个女性的

1745
00:59:50,000 --> 00:59:52,000
女性的那个

1746
00:59:52,000 --> 00:59:54,000
山地车运动员的这样一个图

1747
00:59:54,000 --> 00:59:56,000
可是它背后呢

1748
00:59:56,000 --> 00:59:58,000
首先呢

1749
00:59:58,000 --> 01:00:00,000
它是一个山地车

1750
01:00:00,000 --> 01:00:02,000
手的一个图

1751
01:00:02,000 --> 01:00:04,000
然后呢有一个女性符号

1752
01:00:04,000 --> 01:00:06,000
而且呢

1753
01:00:06,000 --> 01:00:08,000
还有一个

1754
01:00:08,000 --> 01:00:10,000
因为它是女性人嘛

1755
01:00:10,000 --> 01:00:12,000
它是一个服务色

1756
01:00:12,000 --> 01:00:14,000
还可以加上服务色

1757
01:00:14,000 --> 01:00:16,000
中间呢还要再用这个

1758
01:00:16,000 --> 01:00:18,000
ZeroWizJoiner 给它拼粘起来

1759
01:00:18,000 --> 01:00:20,000
然后呢

1760
01:00:20,000 --> 01:00:22,000
你还要

1761
01:00:22,000 --> 01:00:24,000
如果你再硬

1762
01:00:24,000 --> 01:00:26,000
这样的话至少呢

1763
01:00:26,000 --> 01:00:28,000
后面是有四个

1764
01:00:28,000 --> 01:00:30,000
四个到五个的马尾

1765
01:00:30,000 --> 01:00:32,000
才能实现这样的一个图

1766
01:00:32,000 --> 01:00:34,000
OK

1767
01:00:34,000 --> 01:00:36,000
目前上已经

1768
01:00:36,000 --> 01:00:38,000
已经定义下来的

1769
01:00:38,000 --> 01:00:40,000
还有一个叫

1770
01:00:40,000 --> 01:00:42,000
就是加标签

1771
01:00:42,000 --> 01:00:44,000
加标签这个事情呢

1772
01:00:44,000 --> 01:00:46,000
Unicor 的草案其实已经有提交了

1773
01:00:46,000 --> 01:00:48,000
但是前段时间被撤回

1774
01:00:48,000 --> 01:00:50,000
所以目前来讲呢

1775
01:00:50,000 --> 01:00:52,000
还不是

1776
01:00:52,000 --> 01:00:54,000
它只是一个提案还没有实现

1777
01:00:54,000 --> 01:00:56,000
大家

1778
01:00:56,000 --> 01:00:58,000
我把这个链接发给大家

1779
01:00:58,000 --> 01:01:00,000
是在 UTS 的第 52 号提案

1780
01:01:00,000 --> 01:01:02,000
大家可以去看

1781
01:01:02,000 --> 01:01:04,000
然后这里面很褚

1782
01:01:04,000 --> 01:01:06,000
它就是加个标签

1783
01:01:06,000 --> 01:01:08,000
比如说我可以显示人的头发

1784
01:01:10,000 --> 01:01:12,000
从

1785
01:01:12,000 --> 01:01:14,000
白头发到黄头发

1786
01:01:14,000 --> 01:01:16,000
到红头发到黑头发

1787
01:01:16,000 --> 01:01:18,000
以致涂头

1788
01:01:20,000 --> 01:01:22,000
因为它给

1789
01:01:22,000 --> 01:01:24,000
每种头发

1790
01:01:24,000 --> 01:01:26,000
都加了一个标签

1791
01:01:26,000 --> 01:01:28,000
首先呢它有个

1792
01:01:28,000 --> 01:01:30,000
有个 Base

1793
01:01:30,000 --> 01:01:32,000
就是说我这是头发标签

1794
01:01:32,000 --> 01:01:34,000
然后呢在

1795
01:01:34,000 --> 01:01:36,000
标签上面写贴和程度

1796
01:01:36,000 --> 01:01:38,000
比如说是

1797
01:01:38,000 --> 01:01:40,000
黄头发或者是涂头

1798
01:01:40,000 --> 01:01:42,000
然后就是这样的

1799
01:01:42,000 --> 01:01:44,000
接下来在一个

1800
01:01:44,000 --> 01:01:46,000
所以你可能要在一个

1801
01:01:46,000 --> 01:01:48,000
比如说是男孩

1802
01:01:48,000 --> 01:01:50,000
的头发

1803
01:01:50,000 --> 01:01:52,000
上面标签加上

1804
01:01:52,000 --> 01:01:54,000
一个黄颜色

1805
01:01:54,000 --> 01:01:56,000
来体现一个

1806
01:01:56,000 --> 01:01:58,000
金黄色头发的男孩的

1807
01:01:58,000 --> 01:02:00,000
一个 emoji

1808
01:02:00,000 --> 01:02:02,000
也是可以实现的

1809
01:02:02,000 --> 01:02:04,000
然后呢刚才还有说

1810
01:02:04,000 --> 01:02:06,000
可以用于改变

1811
01:02:06,000 --> 01:02:08,000
目前的这个 emoji 的方向

1812
01:02:08,000 --> 01:02:10,000
一些 emoji

1813
01:02:10,000 --> 01:02:12,000
它画出来是有方向的

1814
01:02:12,000 --> 01:02:14,000
最有名的就比如说那个手枪

1815
01:02:14,000 --> 01:02:16,000
目前的手枪好像是

1816
01:02:16,000 --> 01:02:18,000
只能朝右

1817
01:02:18,000 --> 01:02:20,000
只能朝右什么还只能朝左

1818
01:02:20,000 --> 01:02:22,000
好像

1819
01:02:22,000 --> 01:02:24,000
就是被改成那个在

1820
01:02:24,000 --> 01:02:26,000
麦克上面在 OS

1821
01:02:26,000 --> 01:02:28,000
上被改成刺水枪

1822
01:02:28,000 --> 01:02:30,000
是水枪

1823
01:02:30,000 --> 01:02:32,000
但只有只能朝左

1824
01:02:32,000 --> 01:02:34,000
这样的话有时候你在表示

1825
01:02:34,000 --> 01:02:36,000
谁射杀谁的时候

1826
01:02:36,000 --> 01:02:38,000
谁打谁的时候

1827
01:02:38,000 --> 01:02:40,000
就会有方向性的错误嘛

1828
01:02:40,000 --> 01:02:42,000
因此呢

1829
01:02:42,000 --> 01:02:44,000
这个提案里面

1830
01:02:44,000 --> 01:02:46,000
它先加一个方向

1831
01:02:46,000 --> 01:02:48,000
标签然后在这方向

1832
01:02:48,000 --> 01:02:50,000
写上里面的具体的值

1833
01:02:50,000 --> 01:02:52,000
比如说我是向左指还是向右

1834
01:02:54,000 --> 01:02:56,000
就不能向右上方

1835
01:02:56,000 --> 01:02:58,000
72 度的方式打

1836
01:02:58,000 --> 01:03:00,000
对呀

1837
01:03:00,000 --> 01:03:02,000
这个方向的值应该怎么说呢

1838
01:03:02,000 --> 01:03:04,000
还有刚才说的就是

1839
01:03:04,000 --> 01:03:06,000
像刚才 Rio 比较

1840
01:03:06,000 --> 01:03:08,000
国旗不够用嘛

1841
01:03:08,000 --> 01:03:10,000
其实现在已经可以

1842
01:03:10,000 --> 01:03:12,000
实现就是比如说

1843
01:03:12,000 --> 01:03:14,000
英格兰

1844
01:03:14,000 --> 01:03:16,000
大家要知道英格兰它不是一个国家

1845
01:03:16,000 --> 01:03:18,000
它是个地区嘛

1846
01:03:18,000 --> 01:03:19,000
英格兰的

1847
01:03:19,000 --> 01:03:21,000
英格兰这个旗是什么实现的

1848
01:03:21,000 --> 01:03:23,000
小心英格兰人家找一批命啊

1849
01:03:23,000 --> 01:03:25,000
它只是一个地区嘛

1850
01:03:25,000 --> 01:03:27,000
如果像比如说旗的话

1851
01:03:27,000 --> 01:03:29,000
像英国的国旗

1852
01:03:29,000 --> 01:03:31,000
我们刚才说的它你看

1853
01:03:31,000 --> 01:03:33,000
是一个英国国旗

1854
01:03:33,000 --> 01:03:35,000
可是它背面的首先是

1855
01:03:35,000 --> 01:03:37,000
旗帜的一个马位

1856
01:03:37,000 --> 01:03:39,000
然后加上旗帜的 U

1857
01:03:39,000 --> 01:03:41,000
旗帜的 K

1858
01:03:41,000 --> 01:03:43,000
就是英国的国旗

1859
01:03:43,000 --> 01:03:45,000
它新的加上 Tag 以后

1860
01:03:45,000 --> 01:03:47,000
它可以

1861
01:03:47,000 --> 01:03:49,000
对不起不是 UK 是 GB

1862
01:03:49,000 --> 01:03:51,000
Great Britain

1863
01:03:51,000 --> 01:03:53,000
所以英格兰是

1864
01:03:53,000 --> 01:03:55,000
旗加上 GB

1865
01:03:55,000 --> 01:03:57,000
ENG

1866
01:03:57,000 --> 01:03:59,000
Great Britain

1867
01:03:59,000 --> 01:04:01,000
英格兰

1868
01:04:01,000 --> 01:04:03,000
所以一共是六个马位

1869
01:04:03,000 --> 01:04:05,000
加起来的就是

1870
01:04:05,000 --> 01:04:07,000
英格兰的旗

1871
01:04:07,000 --> 01:04:09,000
所以这是一个草案

1872
01:04:09,000 --> 01:04:11,000
大家还

1873
01:04:11,000 --> 01:04:13,000
还在讨论但是目前

1874
01:04:13,000 --> 01:04:15,000
已经有些实作是可以出来了

1875
01:04:15,000 --> 01:04:17,000
我真的

1876
01:04:17,000 --> 01:04:19,000
不敢想象就比如说刚才那个

1877
01:04:19,000 --> 01:04:21,000
男士变成

1878
01:04:21,000 --> 01:04:23,000
头的那样的一个 MV

1879
01:04:23,000 --> 01:04:25,000
会不会被化成什么样子

1880
01:04:25,000 --> 01:04:27,000
那以后是不是应该还对胡子

1881
01:04:27,000 --> 01:04:29,000
也应该进行定义一下

1882
01:04:29,000 --> 01:04:31,000
这进一步的

1883
01:04:31,000 --> 01:04:33,000
凸写了

1884
01:04:33,000 --> 01:04:35,000
这帮人想把 Unicode

1885
01:04:35,000 --> 01:04:37,000
用来做任何事情

1886
01:04:37,000 --> 01:04:39,000
就用来表示

1887
01:04:39,000 --> 01:04:41,000
任何可见的东西

1888
01:04:41,000 --> 01:04:43,000
一端

1889
01:04:43,000 --> 01:04:45,000
你在想了吗 Unicode

1890
01:04:45,000 --> 01:04:47,000
Uni 什么意思吗

1891
01:04:47,000 --> 01:04:49,000
Uni version

1892
01:04:49,000 --> 01:04:51,000
野心太大了

1893
01:04:51,000 --> 01:04:53,000
不过作为一个技术来讲的话

1894
01:04:53,000 --> 01:04:55,000
就是说我这个技术

1895
01:04:55,000 --> 01:04:57,000
只要规范定出来以后

1896
01:04:57,000 --> 01:04:59,000
它可以实现的功能是强大的

1897
01:04:59,000 --> 01:05:01,000
它的意思是说

1898
01:05:01,000 --> 01:05:03,000
我这个技术很好说明

1899
01:05:03,000 --> 01:05:05,000
为了炫耀这个技术

1900
01:05:05,000 --> 01:05:07,000
也不至于搞成这样吧

1901
01:05:07,000 --> 01:05:09,000
你们知道巴别塔多难造了吗

1902
01:05:09,000 --> 01:05:11,000
是这样的

1903
01:05:11,000 --> 01:05:13,000
但是刚才说的就是

1904
01:05:13,000 --> 01:05:15,000
没有通过的草案

1905
01:05:15,000 --> 01:05:17,000
在通过加标签的

1906
01:05:17,000 --> 01:05:19,000
这个想法

1907
01:05:19,000 --> 01:05:21,000
思路倒是很普通

1908
01:05:21,000 --> 01:05:23,000
你先做一个 tag

1909
01:05:23,000 --> 01:05:25,000
然后再定义 tag 的值

1910
01:05:25,000 --> 01:05:27,000
对吧

1911
01:05:27,000 --> 01:05:29,000
这是很正常的一个思路

1912
01:05:31,000 --> 01:05:33,000
其实有点积贼

1913
01:05:33,000 --> 01:05:35,000
它还是想审码位

1914
01:05:35,000 --> 01:05:37,000
它没有霸气到说

1915
01:05:37,000 --> 01:05:39,000
你来一个我给你个新码位

1916
01:05:39,000 --> 01:05:41,000
还得用一些东西

1917
01:05:41,000 --> 01:05:43,000
给它组合小账

1918
01:05:43,000 --> 01:05:45,000
Unicode

1919
01:05:45,000 --> 01:05:47,000
迟早有一天说

1920
01:05:47,000 --> 01:05:49,000
好吧我把这码位继续的扩增

1921
01:05:49,000 --> 01:05:51,000
扩增到你想用多少个人的东西

1922
01:05:53,000 --> 01:05:55,000
它还是想用那个偏旁不守的吧

1923
01:05:55,000 --> 01:05:57,000
对吧

1924
01:05:57,000 --> 01:05:59,000
老祖宗的办法

1925
01:05:59,000 --> 01:06:01,000
中国人倒的几万

1926
01:06:01,000 --> 01:06:03,000
几期有文字的时候

1927
01:06:03,000 --> 01:06:05,000
文字是什么时候

1928
01:06:05,000 --> 01:06:07,000
2000 年

1929
01:06:07,000 --> 01:06:09,000
5000 年

1930
01:06:09,000 --> 01:06:11,000
发明文字是什么

1931
01:06:11,000 --> 01:06:13,000
有案可查的一个甲骨人

1932
01:06:13,000 --> 01:06:15,000
我就想到这个问题了

1933
01:06:15,000 --> 01:06:17,000
工人钱那些有吧

1934
01:06:17,000 --> 01:06:19,000
那当然有

1935
01:06:19,000 --> 01:06:21,000
工人太晚了

1936
01:06:21,000 --> 01:06:23,000
你不用小工人了

1937
01:06:23,000 --> 01:06:25,000
工人钱多少年吧

1938
01:06:25,000 --> 01:06:27,000
工人钱多少年

1939
01:06:27,000 --> 01:06:29,000
想不了这个问题了

1940
01:06:29,000 --> 01:06:31,000
你看那个什么

1941
01:06:31,000 --> 01:06:33,000
要是爱死寂寞人也来搞 Unicode

1942
01:06:33,000 --> 01:06:35,000
它起码把这个血片

1943
01:06:35,000 --> 01:06:37,000
要搞成 50 种不同类型的血

1944
01:06:37,000 --> 01:06:39,000
这是个 mease 吧

1945
01:06:39,000 --> 01:06:41,000
这是个 mease

1946
01:06:41,000 --> 01:06:43,000
这种这些事情并不存在

1947
01:06:43,000 --> 01:06:45,000
但是

1948
01:06:45,000 --> 01:06:47,000
其实没有那么多语言

1949
01:06:47,000 --> 01:06:49,000
描述血

1950
01:06:49,000 --> 01:06:51,000
但是阿拉伯语里面有很多种骆驼

1951
01:06:51,000 --> 01:06:53,000
对吧

1952
01:06:53,000 --> 01:06:55,000
古汉语里面有很多马

1953
01:06:55,000 --> 01:06:57,000
对吧

1954
01:06:57,000 --> 01:06:59,000
而且其实

1955
01:06:59,000 --> 01:07:00,000
这东西

1956
01:07:00,000 --> 01:07:02,000
爱死寂寞人语言里有没有并不正啊

1957
01:07:02,000 --> 01:07:04,000
像日本人发明的 M 字

1958
01:07:04,000 --> 01:07:06,000
他们也没想那么多的语言

1959
01:07:06,000 --> 01:07:08,000
但是现在还是可以搞出那么多的

1960
01:07:08,000 --> 01:07:10,000
所以全球人民的智慧

1961
01:07:10,000 --> 01:07:12,000
是可以让这东西无限多下去

1962
01:07:14,000 --> 01:07:16,000
不管怎么样

1963
01:07:16,000 --> 01:07:18,000
反正现在的技术已经达到水平了

1964
01:07:18,000 --> 01:07:20,000
所以大家往往看上去是一个简单的

1965
01:07:20,000 --> 01:07:21,000
emoji

1966
01:07:21,000 --> 01:07:22,000
可是它的背后

1967
01:07:22,000 --> 01:07:23,000
谁知道呢

1968
01:07:23,000 --> 01:07:25,000
它可能是一个马位

1969
01:07:25,000 --> 01:07:27,000
也可能是 5,6,7,8 个马位

1970
01:07:27,000 --> 01:07:29,000
组合而成的

1971
01:07:29,000 --> 01:07:31,000
所以

1972
01:07:31,000 --> 01:07:33,000
下面就涉及到

1973
01:07:33,000 --> 01:07:35,000
下一个问题了

1974
01:07:35,000 --> 01:07:37,000
就是所谓的自卫处的问题

1975
01:07:37,000 --> 01:07:39,000
这个

1976
01:07:39,000 --> 01:07:41,000
翻译叫自卫处

1977
01:07:41,000 --> 01:07:43,000
可能大家都听不懂

1978
01:07:43,000 --> 01:07:45,000
cluster

1979
01:07:45,000 --> 01:07:47,000
中文一般翻译成处

1980
01:07:47,000 --> 01:07:49,000
处,从就是一团东西

1981
01:07:49,000 --> 01:07:51,000
然后

1982
01:07:51,000 --> 01:07:53,000
graphim

1983
01:07:53,000 --> 01:07:55,000
一般来讲我们翻译成自卫

1984
01:07:55,000 --> 01:07:57,000
就是像音位

1985
01:07:57,000 --> 01:07:59,000
在语音学里面

1986
01:07:59,000 --> 01:08:01,000
区别意思的音

1987
01:08:01,000 --> 01:08:03,000
才是有一个音位

1988
01:08:03,000 --> 01:08:05,000
对,在文字里面

1989
01:08:05,000 --> 01:08:07,000
有区别

1990
01:08:07,000 --> 01:08:09,000
在书写

1991
01:08:09,000 --> 01:08:11,000
语言里面的一个最小单位

1992
01:08:11,000 --> 01:08:13,000
我们就叫它自卫

1993
01:08:13,000 --> 01:08:15,000
那么自卫处

1994
01:08:15,000 --> 01:08:17,000
听起来好奇怪

1995
01:08:17,000 --> 01:08:19,000
graphim cluster

1996
01:08:19,000 --> 01:08:21,000
抱歉

1997
01:08:21,000 --> 01:08:23,000
我邪恶了

1998
01:08:23,000 --> 01:08:25,000
人看起来是一个字

1999
01:08:25,000 --> 01:08:27,000
机器

2000
01:08:27,000 --> 01:08:29,000
因为刚才有说了

2001
01:08:29,000 --> 01:08:31,000
人看起来是一个 moji

2002
01:08:31,000 --> 01:08:33,000
但是

2003
01:08:33,000 --> 01:08:35,000
机器它后面认得可能是一个马尾

2004
01:08:35,000 --> 01:08:37,000
或者是五六个马尾

2005
01:08:37,000 --> 01:08:39,000
比如说在数数的时候

2006
01:08:39,000 --> 01:08:41,000
到底是几个字

2007
01:08:41,000 --> 01:08:43,000
这个东西的话都说不清楚

2008
01:08:43,000 --> 01:08:45,000
因此呢,其实在 unicode 里面

2009
01:08:45,000 --> 01:08:47,000
unicode 有个标准

2010
01:08:47,000 --> 01:08:49,000
附件的第 29 号

2011
01:08:49,000 --> 01:08:51,000
它这个名字叫

2012
01:08:51,000 --> 01:08:53,000
unicode text segmentation

2013
01:08:53,000 --> 01:08:55,000
叫文本分隔法

2014
01:08:55,000 --> 01:08:57,000
专门来规定

2015
01:08:57,000 --> 01:08:59,000
你怎么样看起来

2016
01:08:59,000 --> 01:09:01,000
这算是一个字

2017
01:09:01,000 --> 01:09:03,000
怎么来定义

2018
01:09:03,000 --> 01:09:05,000
词的界限和字的界限

2019
01:09:05,000 --> 01:09:07,000
就是为了分词吗

2020
01:09:07,000 --> 01:09:09,000
还是为了什么

2021
01:09:09,000 --> 01:09:11,000
其实要是给这个

2022
01:09:11,000 --> 01:09:13,000
unicode 的实现给了一个

2023
01:09:13,000 --> 01:09:15,000
文档吧

2024
01:09:15,000 --> 01:09:17,000
就是你怎样来实现这东西

2025
01:09:17,000 --> 01:09:19,000
给了一个 reference

2026
01:09:19,000 --> 01:09:21,000
其实最早是为了给那些

2027
01:09:21,000 --> 01:09:23,000
泰文和

2028
01:09:23,000 --> 01:09:25,000
比如说印度的那些文字来做的

2029
01:09:25,000 --> 01:09:27,000
因为

2030
01:09:27,000 --> 01:09:29,000
还比如说藏文

2031
01:09:29,000 --> 01:09:31,000
泰文的话它可能是在中间一个字

2032
01:09:31,000 --> 01:09:33,000
中间一个基本字母以后

2033
01:09:33,000 --> 01:09:35,000
它可能会在

2034
01:09:35,000 --> 01:09:37,000
这个字的上下左右添加各种东西

2035
01:09:37,000 --> 01:09:39,000
对

2036
01:09:39,000 --> 01:09:41,000
所以对于泰文来讲

2037
01:09:41,000 --> 01:09:43,000
即使它添加了上下

2038
01:09:43,000 --> 01:09:45,000
左右的东西

2039
01:09:45,000 --> 01:09:47,000
但是对于泰文来讲

2040
01:09:47,000 --> 01:09:49,000
依然是一个字

2041
01:09:49,000 --> 01:09:51,000
那马位的话

2042
01:09:51,000 --> 01:09:53,000
它是好多马位

2043
01:09:53,000 --> 01:09:55,000
而且你已经给它认成一个字以后

2044
01:09:55,000 --> 01:09:57,000
比如说你在删除的时候

2045
01:09:57,000 --> 01:09:59,000
你必须把它认成一个字吗

2046
01:09:59,000 --> 01:10:01,000
你在选中的时候

2047
01:10:01,000 --> 01:10:03,000
你必须要给它整个选中

2048
01:10:03,000 --> 01:10:05,000
或者你让不让它选中

2049
01:10:05,000 --> 01:10:07,000
部分去修改

2050
01:10:07,000 --> 01:10:09,000
或者你删除的时候

2051
01:10:09,000 --> 01:10:11,000
你必须要整个删除

2052
01:10:11,000 --> 01:10:13,000
还怎么怎么样

2053
01:10:13,000 --> 01:10:15,000
这是不能删除一个字的部手对吧

2054
01:10:15,000 --> 01:10:17,000
对你删除了删了半个字

2055
01:10:17,000 --> 01:10:19,000
这个是什么鬼

2056
01:10:19,000 --> 01:10:21,000
逃急急

2057
01:10:23,000 --> 01:10:25,000
所以最后天很奇怪

2058
01:10:25,000 --> 01:10:27,000
很奇怪

2059
01:10:29,000 --> 01:10:31,000
所以这东西其实都是要有定义的

2060
01:10:31,000 --> 01:10:33,000
首先在马位

2061
01:10:33,000 --> 01:10:35,000
在 unicode 的层面

2062
01:10:35,000 --> 01:10:37,000
要有定义

2063
01:10:37,000 --> 01:10:39,000
然后再让 UserEngine

2064
01:10:39,000 --> 01:10:41,000
依照这个定义

2065
01:10:41,000 --> 01:10:43,000
来进行实作

2066
01:10:43,000 --> 01:10:45,000
要不然的话大家会乱七八糟的

2067
01:10:45,000 --> 01:10:47,000
对

2068
01:10:47,000 --> 01:10:49,000
然后另外一个比较

2069
01:10:49,000 --> 01:10:51,000
典型的

2070
01:10:51,000 --> 01:10:53,000
比如说韩文可能大家会比较清楚

2071
01:10:53,000 --> 01:10:55,000
其实它是一个生母孕母

2072
01:10:55,000 --> 01:10:57,000
这样拼起来的

2073
01:10:57,000 --> 01:10:59,000
因此

2074
01:10:59,000 --> 01:11:01,000
其实在韩文音节里面

2075
01:11:01,000 --> 01:11:02,000
它

2076
01:11:02,000 --> 01:11:03,000
和韩

2077
01:11:03,000 --> 01:11:05,000
比如说韩字

2078
01:11:05,000 --> 01:11:06,000
一个

2079
01:11:06,000 --> 01:11:07,000
一个

2080
01:11:07,000 --> 01:11:09,000
它可以是三个字拼在一起

2081
01:11:09,000 --> 01:11:11,000
一旦拼成来的话

2082
01:11:11,000 --> 01:11:12,000
韩

2083
01:11:12,000 --> 01:11:14,000
这就是一个字了

2084
01:11:14,000 --> 01:11:16,000
你不能就是想

2085
01:11:16,000 --> 01:11:17,000
选择

2086
01:11:17,000 --> 01:11:19,000
这会涉及到什么呢

2087
01:11:19,000 --> 01:11:21,000
我是觉得韩文其实挺神奇的

2088
01:11:21,000 --> 01:11:23,000
明明是

2089
01:11:23,000 --> 01:11:25,000
它其实是字母

2090
01:11:25,000 --> 01:11:27,000
然后它组合的方式就是

2091
01:11:27,000 --> 01:11:29,000
第一段的韩字的方式

2092
01:11:29,000 --> 01:11:31,000
所以 unicode 为了解决

2093
01:11:31,000 --> 01:11:33,000
韩文的问题发生了很大的拨折

2094
01:11:33,000 --> 01:11:35,000
一开始就说

2095
01:11:35,000 --> 01:11:37,000
你韩文就不要站

2096
01:11:37,000 --> 01:11:39,000
一个马位了

2097
01:11:39,000 --> 01:11:41,000
你就不要站组合的马位

2098
01:11:41,000 --> 01:11:43,000
你就一个一个拼吧

2099
01:11:43,000 --> 01:11:45,000
然后又出现了

2100
01:11:45,000 --> 01:11:47,000
就来一个拼

2101
01:11:47,000 --> 01:11:49,000
就来一个拼

2102
01:11:49,000 --> 01:11:51,000
这样会有一个很大的问题是什么呢

2103
01:11:51,000 --> 01:11:53,000
就是在解锁的时候会有问题

2104
01:11:53,000 --> 01:11:55,000
你搜索的时候

2105
01:11:55,000 --> 01:11:56,000
对吧

2106
01:11:56,000 --> 01:11:57,000
你

2107
01:11:57,000 --> 01:11:58,000
你

2108
01:11:58,000 --> 01:12:00,000
你肯定要以整个字去搜

2109
01:12:00,000 --> 01:12:02,000
你不能以一个

2110
01:12:02,000 --> 01:12:03,000
一个生母去搜

2111
01:12:03,000 --> 01:12:04,000
一生母搜出来

2112
01:12:04,000 --> 01:12:07,000
全篇到处都选中了就变成了

2113
01:12:07,000 --> 01:12:08,000
对

2114
01:12:08,000 --> 01:12:10,000
但我没有部手解字法

2115
01:12:10,000 --> 01:12:11,000
多呀

2116
01:12:11,000 --> 01:12:13,000
但是比如说我在一篇文章里面

2117
01:12:13,000 --> 01:12:15,000
我要搜

2118
01:12:15,000 --> 01:12:17,000
问题是韩文没有部手

2119
01:12:18,000 --> 01:12:20,000
它是一个拼音

2120
01:12:20,000 --> 01:12:23,000
它是把拼音用部手方式组合在一起

2121
01:12:23,000 --> 01:12:24,000
对

2122
01:12:26,000 --> 01:12:29,000
这样会给它这个解锁和

2123
01:12:29,000 --> 01:12:32,000
解锁会造成很大的问题

2124
01:12:32,000 --> 01:12:33,000
因为

2125
01:12:33,000 --> 01:12:35,000
退一万步来讲

2126
01:12:35,000 --> 01:12:38,000
我们这个所谓的叫信息化处理

2127
01:12:38,000 --> 01:12:41,000
是一个信息交换的一个过程吧

2128
01:12:41,000 --> 01:12:42,000
你在交换来交换去

2129
01:12:42,000 --> 01:12:45,000
不能会有错误和遗漏

2130
01:12:45,000 --> 01:12:48,000
完全没有达到目的

2131
01:12:48,000 --> 01:12:49,000
搞来搞去

2132
01:12:49,000 --> 01:12:51,000
信息就变了

2133
01:12:51,000 --> 01:12:53,000
或者有遗失了

2134
01:12:53,000 --> 01:12:54,000
然后传递有问题了

2135
01:12:54,000 --> 01:12:56,000
这个是很大的问题

2136
01:12:57,000 --> 01:13:00,000
所以它就必须要有规定

2137
01:13:00,000 --> 01:13:02,000
你人看起来

2138
01:13:02,000 --> 01:13:04,000
一团东西是

2139
01:13:04,000 --> 01:13:06,000
认诚是一个字

2140
01:13:06,000 --> 01:13:08,000
那么你机器要怎么处理

2141
01:13:09,000 --> 01:13:10,000
对

2142
01:13:11,000 --> 01:13:13,000
然后具体到我们的

2143
01:13:13,000 --> 01:13:15,000
emoji 里面

2144
01:13:15,000 --> 01:13:16,000
像刚才说的话

2145
01:13:16,000 --> 01:13:18,000
因为 emoji 它可能

2146
01:13:18,000 --> 01:13:19,000
我们看起来是一个 emoji

2147
01:13:19,000 --> 01:13:20,000
但是

2148
01:13:20,000 --> 01:13:22,000
它后面可能是三个马尾

2149
01:13:22,000 --> 01:13:23,000
或者四个马尾

2150
01:13:23,000 --> 01:13:24,000
比如说

2151
01:13:24,000 --> 01:13:26,000
在数数的时候

2152
01:13:26,000 --> 01:13:28,000
数字的时候

2153
01:13:28,000 --> 01:13:30,000
到底是几个字的时候

2154
01:13:30,000 --> 01:13:32,000
就会有问题吧

2155
01:13:35,000 --> 01:13:38,000
好像我今天看一个

2156
01:13:38,000 --> 01:13:40,000
我对 Ruby 不熟

2157
01:13:40,000 --> 01:13:41,000
Ruby 云

2158
01:13:41,000 --> 01:13:42,000
他那个 String

2159
01:13:42,000 --> 01:13:45,000
他在数 Length 的时候

2160
01:13:45,000 --> 01:13:47,000
他就是用马尾来数字

2161
01:13:47,000 --> 01:13:48,000
说这些字

2162
01:13:48,000 --> 01:13:49,000
这些字想着就不对

2163
01:13:49,000 --> 01:13:50,000
一个马尾就

2164
01:13:50,000 --> 01:13:51,000
大部分的语言里面

2165
01:13:51,000 --> 01:13:52,000
都是这么干的

2166
01:13:52,000 --> 01:13:54,000
一个马尾就不是一个数

2167
01:13:56,000 --> 01:13:57,000
对呀

2168
01:13:57,000 --> 01:13:58,000
他只会数这个

2169
01:13:58,000 --> 01:13:59,000
对

2170
01:13:59,000 --> 01:14:01,000
更高级的信息他没有

2171
01:14:01,000 --> 01:14:03,000
或者说更高的信息更麻烦

2172
01:14:03,000 --> 01:14:04,000
他必须要专门的

2173
01:14:04,000 --> 01:14:06,000
库来实现

2174
01:14:06,000 --> 01:14:08,000
所以现在不是

2175
01:14:08,000 --> 01:14:09,000
像推特

2176
01:14:09,000 --> 01:14:10,000
他现在数数

2177
01:14:10,000 --> 01:14:11,000
他不是也变了

2178
01:14:11,000 --> 01:14:12,000
不是

2179
01:14:12,000 --> 01:14:13,000
他前段时间把那个

2180
01:14:13,000 --> 01:14:14,000
140

2181
01:14:14,000 --> 01:14:15,000
140 变成 280 了

2182
01:14:15,000 --> 01:14:17,000
像英语可以写

2183
01:14:17,000 --> 01:14:18,000
280 个字了

2184
01:14:18,000 --> 01:14:20,000
可是中日韩还是

2185
01:14:20,000 --> 01:14:22,000
140 个字吧

2186
01:14:24,000 --> 01:14:25,000
第一个歧视

2187
01:14:27,000 --> 01:14:28,000
我真很好奇

2188
01:14:28,000 --> 01:14:29,000
他还特地给

2189
01:14:29,000 --> 01:14:32,000
为中日韩写了

2190
01:14:32,000 --> 01:14:33,000
一个

2191
01:14:33,000 --> 01:14:34,000
例外

2192
01:14:34,000 --> 01:14:35,000
这个太扯了

2193
01:14:35,000 --> 01:14:37,000
也不是专门

2194
01:14:37,000 --> 01:14:38,000
应该是

2195
01:14:38,000 --> 01:14:39,000
我还是得去西方中心主义

2196
01:14:39,000 --> 01:14:40,000
就是把

2197
01:14:40,000 --> 01:14:42,000
他们认为

2198
01:14:42,000 --> 01:14:43,000
应该扩展的部分扩展了

2199
01:14:43,000 --> 01:14:44,000
其他的部分

2200
01:14:44,000 --> 01:14:45,000
就通通视作两个

2201
01:14:47,000 --> 01:14:49,000
就是要以大家能表达的

2202
01:14:49,000 --> 01:14:51,000
总的信息量来数

2203
01:14:51,000 --> 01:14:53,000
那你信息量来说的话

2204
01:14:53,000 --> 01:14:56,000
本来 140 字的中文

2205
01:14:56,000 --> 01:14:58,000
就是可以一篇小段落了

2206
01:14:58,000 --> 01:14:59,000
一大段落了

2207
01:15:02,000 --> 01:15:03,000
所以我觉得

2208
01:15:03,000 --> 01:15:04,000
像什么微博

2209
01:15:04,000 --> 01:15:07,000
就学什么 140 个字

2210
01:15:07,000 --> 01:15:08,000
146 个字学过来

2211
01:15:08,000 --> 01:15:09,000
用汉字写的话

2212
01:15:09,000 --> 01:15:12,000
本来就跟英文的 140 个

2213
01:15:12,000 --> 01:15:13,000
根本不是一个

2214
01:15:13,000 --> 01:15:14,000
从面上的东西

2215
01:15:14,000 --> 01:15:16,000
在信息量上来讲的话

2216
01:15:16,000 --> 01:15:17,000
对

2217
01:15:17,000 --> 01:15:18,000
这是一个

2218
01:15:18,000 --> 01:15:20,000
学习我们自符极大呢

2219
01:15:20,000 --> 01:15:22,000
他才 265 万

2220
01:15:22,000 --> 01:15:24,000
这完全是一个历史一流

2221
01:15:24,000 --> 01:15:26,000
我们表义自符的话

2222
01:15:26,000 --> 01:15:27,000
就是本来信息量

2223
01:15:27,000 --> 01:15:28,000
就是很大嘛

2224
01:15:28,000 --> 01:15:29,000
对呀

2225
01:15:29,000 --> 01:15:32,000
你不可能通过自符来

2226
01:15:32,000 --> 01:15:34,000
衡量信息量

2227
01:15:34,000 --> 01:15:35,000
对

2228
01:15:35,000 --> 01:15:37,000
这个方式是非常不科学的

2229
01:15:37,000 --> 01:15:38,000
你算不出来

2230
01:15:38,000 --> 01:15:40,000
英语到底能有多少伤

2231
01:15:40,000 --> 01:15:41,000
对

2232
01:15:41,000 --> 01:15:42,000
比如说你这个汉语简单来说

2233
01:15:42,000 --> 01:15:44,000
我们知道文言的汉语

2234
01:15:44,000 --> 01:15:46,000
显然这个程度更短

2235
01:15:46,000 --> 01:15:48,000
就是他用的这个字数更少

2236
01:15:48,000 --> 01:15:49,000
那你这个白画文的汉语

2237
01:15:49,000 --> 01:15:50,000
就用的字数更多

2238
01:15:50,000 --> 01:15:52,000
所以你单纯用字数

2239
01:15:52,000 --> 01:15:54,000
来限制信息量

2240
01:15:54,000 --> 01:15:55,000
其实是一个

2241
01:15:55,000 --> 01:15:56,000
非常没有道理的事情

2242
01:15:56,000 --> 01:15:57,000
就在

2243
01:15:57,000 --> 01:15:59,000
其实是在同一种语言当中

2244
01:15:59,000 --> 01:16:00,000
推特早期他限制这个字数

2245
01:16:00,000 --> 01:16:02,000
存在是一个技术原因嘛

2246
01:16:02,000 --> 01:16:03,000
或者说是一个

2247
01:16:03,000 --> 01:16:04,000
模拟的

2248
01:16:04,000 --> 01:16:05,000
不是技术原因吗

2249
01:16:05,000 --> 01:16:07,000
它只是模拟了这个短信时代的

2250
01:16:07,000 --> 01:16:08,000
短信

2251
01:16:08,000 --> 01:16:09,000
短信也不是技术原因

2252
01:16:09,000 --> 01:16:11,000
短信是

2253
01:16:11,000 --> 01:16:13,000
所有这 144 公筹

2254
01:16:13,000 --> 01:16:14,000
就是为什么

2255
01:16:14,000 --> 01:16:16,000
我们现在很多东西都是 144 的

2256
01:16:16,000 --> 01:16:18,000
或者说为什么推特今天是 144 的

2257
01:16:18,000 --> 01:16:20,000
全都源自于一个德国人

2258
01:16:20,000 --> 01:16:22,000
就是当初

2259
01:16:22,000 --> 01:16:23,000
当初

2260
01:16:23,000 --> 01:16:26,000
设计短信标准的那个人

2261
01:16:26,000 --> 01:16:28,000
他在科隆还不是什么地方

2262
01:16:28,000 --> 01:16:30,000
杜萨尔德夫附近有一个实验室

2263
01:16:30,000 --> 01:16:32,000
他那边

2264
01:16:32,000 --> 01:16:34,000
做了大概几个月的研究

2265
01:16:34,000 --> 01:16:36,000
就是

2266
01:16:36,000 --> 01:16:37,000
用

2267
01:16:37,000 --> 01:16:39,000
给别人写变签

2268
01:16:39,000 --> 01:16:40,000
或者给别人发

2269
01:16:40,000 --> 01:16:42,000
短的电邮件之类的

2270
01:16:42,000 --> 01:16:43,000
然后他就用得出一个结论说

2271
01:16:43,000 --> 01:16:44,000
140 个字

2272
01:16:44,000 --> 01:16:46,000
对于德语来说

2273
01:16:46,000 --> 01:16:48,000
可以满足 90%以上的

2274
01:16:48,000 --> 01:16:49,000
短消息的要求

2275
01:16:49,000 --> 01:16:50,000
然后他就把

2276
01:16:50,000 --> 01:16:51,000
求一牛逼

2277
01:16:51,000 --> 01:16:52,000
求一牛逼

2278
01:16:52,000 --> 01:16:53,000
他就把

2279
01:16:53,000 --> 01:16:55,000
短信标准定成了 160 个字符

2280
01:16:55,000 --> 01:16:56,000
应该是对

2281
01:16:56,000 --> 01:16:57,000
对

2282
01:16:57,000 --> 01:16:58,000
够吗德国人

2283
01:16:58,000 --> 01:17:00,000
加人不够了

2284
01:17:00,000 --> 01:17:02,000
德文单词那么长

2285
01:17:02,000 --> 01:17:03,000
真的

2286
01:17:03,000 --> 01:17:04,000
这不是什么

2287
01:17:04,000 --> 01:17:05,000
这不是什么

2288
01:17:05,000 --> 01:17:06,000
Urban Legend

2289
01:17:06,000 --> 01:17:07,000
这是一个

2290
01:17:07,000 --> 01:17:08,000
就是我记得在

2291
01:17:08,000 --> 01:17:10,000
在哪个地方看到过报道

2292
01:17:10,000 --> 01:17:11,000
我回头把那个

2293
01:17:11,000 --> 01:17:12,000
链接发到那个 sonyl

2294
01:17:12,000 --> 01:17:14,000
就这一切都要怪一个德国人

2295
01:17:14,000 --> 01:17:16,000
哈哈哈哈

2296
01:17:16,000 --> 01:17:18,000
哈哈

2297
01:17:18,000 --> 01:17:20,000
然后现在就搞的这个

2298
01:17:20,000 --> 01:17:21,000
推特他那个算

2299
01:17:21,000 --> 01:17:24,000
算字数的那个方式很奇怪嘛

2300
01:17:24,000 --> 01:17:27,000
现在就比如我们今天讲的 moji

2301
01:17:27,000 --> 01:17:30,000
他虽然说英文是

2302
01:17:30,000 --> 01:17:32,000
允许 280 个字

2303
01:17:32,000 --> 01:17:34,000
但是 moji 的话

2304
01:17:34,000 --> 01:17:36,000
他还是把一个 moji

2305
01:17:36,000 --> 01:17:38,000
当成两个字来算

2306
01:17:38,000 --> 01:17:40,000
所以呢比如说你一个

2307
01:17:40,000 --> 01:17:41,000
效率的话只能打

2308
01:17:41,000 --> 01:17:42,000
140 个效率

2309
01:17:42,000 --> 01:17:44,000
不能打 280 个

2310
01:17:48,000 --> 01:17:50,000
280 个效率

2311
01:17:50,000 --> 01:17:51,000
哈哈哈哈

2312
01:17:51,000 --> 01:17:53,000
所以推特多这个事情的

2313
01:17:53,000 --> 01:17:56,000
考虑点其实不是为了存储对吧

2314
01:17:56,000 --> 01:17:57,000
对

2315
01:17:57,000 --> 01:17:58,000
嗯

2316
01:17:58,000 --> 01:17:59,000
而且他

2317
01:17:59,000 --> 01:18:00,000
哎他这样

2318
01:18:00,000 --> 01:18:02,000
他这个数数肯定还是

2319
01:18:02,000 --> 01:18:03,000
首先是列了

2320
01:18:03,000 --> 01:18:05,000
应该是列个白名单吧就是

2321
01:18:05,000 --> 01:18:07,000
从马位开始考虑吧

2322
01:18:07,000 --> 01:18:09,000
他肯定是要小先生认这个字啊

2323
01:18:09,000 --> 01:18:11,000
嗯

2324
01:18:11,000 --> 01:18:13,000
然后再根据这个

2325
01:18:13,000 --> 01:18:15,000
字来数这个数他数数

2326
01:18:15,000 --> 01:18:17,000
他肯定是用 java 数的吧

2327
01:18:17,000 --> 01:18:20,000
是不是用 java 数

2328
01:18:21,000 --> 01:18:22,000
他肯定是在前端先 java

2329
01:18:22,000 --> 01:18:24,000
写 java 写

2330
01:18:24,000 --> 01:18:26,000
后台 API 的时候再再省一遍

2331
01:18:26,000 --> 01:18:28,000
对啊要不然的话你

2332
01:18:28,000 --> 01:18:30,000
你现在一边输的话他就会写吧

2333
01:18:30,000 --> 01:18:31,000
你还够写几个字吗

2334
01:18:31,000 --> 01:18:34,000
就必须要动态的算吗

2335
01:18:34,000 --> 01:18:36,000
嗯

2336
01:18:36,000 --> 01:18:39,000
所以就很褚呀他有个那个 indicator

2337
01:18:39,000 --> 01:18:40,000
嗯

2338
01:18:42,000 --> 01:18:44,000
所以现在就我们才发现

2339
01:18:44,000 --> 01:18:47,000
原来数字数也是一个非常难的词词

2340
01:18:48,000 --> 01:18:51,000
我觉得取决于你想要花多少的决心在里面

2341
01:18:51,000 --> 01:18:53,000
就比如说你可以按那个

2342
01:18:53,000 --> 01:18:56,000
unicode 那个我们上次介绍过的那个 cluster

2343
01:18:56,000 --> 01:18:58,000
就算 cluster 的方法来

2344
01:18:58,000 --> 01:19:00,000
就军医化像把它军医化

2345
01:19:00,000 --> 01:19:03,000
然后算那个被军医化出来的之后的

2346
01:19:03,000 --> 01:19:05,000
东西是多少个字那就是多少个字

2347
01:19:05,000 --> 01:19:08,000
军医化你怎么军医化呀

2348
01:19:08,000 --> 01:19:10,000
我们上次不是介绍了那个

2349
01:19:10,000 --> 01:19:12,000
unicode 规范化的方法啊

2350
01:19:12,000 --> 01:19:14,000
规范化

2351
01:19:15,000 --> 01:19:19,000
然后呢我们再说到这次就是有一个那个

2352
01:19:19,000 --> 01:19:22,000
呃又刚才说了有组合字

2353
01:19:22,000 --> 01:19:25,000
它经常会有引出一个 bug 啊

2354
01:19:25,000 --> 01:19:29,000
像刚才说的 moji 有一个那个

2355
01:19:29,000 --> 01:19:32,000
刚才说的见貌啊比如说那个

2356
01:19:32,000 --> 01:19:35,000
电话号码的 1 号键嘛啊

2357
01:19:35,000 --> 01:19:39,000
1 号键的这个问题呢就是和这个

2358
01:19:39,000 --> 01:19:44,000
呃自为促这个定义就有问题

2359
01:19:44,000 --> 01:19:46,000
啊比如说哈我在输入的时候

2360
01:19:46,000 --> 01:19:48,000
我先输入数字 1

2361
01:19:48,000 --> 01:19:50,000
然后呢在输入那个键帽

2362
01:19:50,000 --> 01:19:53,000
根据 unicode 规定它会自动会缩合成

2363
01:19:53,000 --> 01:19:56,000
这个 1 的这个 moji 嘛

2364
01:19:56,000 --> 01:20:00,000
嗯然后呢你再输入一个那个键帽

2365
01:20:00,000 --> 01:20:04,000
就单纯那个键帽没有没有那个键的话

2366
01:20:04,000 --> 01:20:06,000
嗯这三个码为摆在一起

2367
01:20:06,000 --> 01:20:09,000
其实这个是不符合这个 unicode 的标准的

2368
01:20:09,000 --> 01:20:11,000
这是一个错的序列哈

2369
01:20:11,000 --> 01:20:14,000
但是不管怎么样呃用户看起来就是

2370
01:20:14,000 --> 01:20:16,000
前面两个缩合成了一个 moji

2371
01:20:16,000 --> 01:20:20,000
后面是一个是一个空的一个键嘛对吧

2372
01:20:20,000 --> 01:20:23,000
用户看起来是两个东西

2373
01:20:23,000 --> 01:20:26,000
然后这时候用户按下伤除键的时候

2374
01:20:26,000 --> 01:20:30,000
理论上讲就是说后面的空的键帽是伤除嘛

2375
01:20:30,000 --> 01:20:33,000
但是呢根据这个 unicode 的定义

2376
01:20:33,000 --> 01:20:37,000
这个键帽是必须要和前面的

2377
01:20:37,000 --> 01:20:41,000
看成一团东西的是认成一个字的

2378
01:20:41,000 --> 01:20:44,000
所以呢只要你一删除连并前面的那个

2379
01:20:44,000 --> 01:20:47,000
1 号键一起都被删掉了

2380
01:20:47,000 --> 01:20:49,000
ok 我好像遇到我这个问题

2381
01:20:49,000 --> 01:20:51,000
嗯

2382
01:20:51,000 --> 01:20:55,000
就是嗯所以就会有有各种各样的问题

2383
01:20:55,000 --> 01:20:59,000
我在那个

2384
01:20:59,000 --> 01:21:01,000
就咱们这个 short notes

2385
01:21:01,000 --> 01:21:04,000
咱们的 outline 里面我打了几个那个键帽吧

2386
01:21:04,000 --> 01:21:06,000
你们可以试着删除一下

2387
01:21:06,000 --> 01:21:10,000
就是一一你以为是会把最后一个字非常删除

2388
01:21:10,000 --> 01:21:13,000
结果是一团字一整个这个

2389
01:21:13,000 --> 01:21:15,000
clust 群被删掉

2390
01:21:15,000 --> 01:21:17,000
哦 ok

2391
01:21:18,000 --> 01:21:21,000
还有时候各根据不同的那个

2392
01:21:21,000 --> 01:21:25,000
呃环境啊有的有的可以复线有的不能复线

2393
01:21:25,000 --> 01:21:28,000
比如说了国旗呃所有的国旗至少是

2394
01:21:28,000 --> 01:21:30,000
后面背后是三个马位吗

2395
01:21:30,000 --> 01:21:34,000
如果你这个嗯如果那个马位都都是连续的话

2396
01:21:34,000 --> 01:21:37,000
可能在删除的时候删错的话

2397
01:21:37,000 --> 01:21:39,000
就会出现那个显示

2398
01:21:39,000 --> 01:21:40,000
显示错误

2399
01:21:40,000 --> 01:21:44,000
可能也看你这个你这个文本编辑器的这个

2400
01:21:44,000 --> 01:21:46,000
本身的处理能力吧对

2401
01:21:46,000 --> 01:21:47,000
如果你那个文本的

2402
01:21:47,000 --> 01:21:50,000
你那个会原地删好多次才能删掉一个

2403
01:21:50,000 --> 01:21:53,000
对如果文本编辑比较难意的话

2404
01:21:53,000 --> 01:21:55,000
做不到啊

2405
01:21:55,000 --> 01:21:57,000
嗯

2406
01:21:57,000 --> 01:22:00,000
这个就是因为大家用的这个 API

2407
01:22:00,000 --> 01:22:02,000
用的那个库不一样吧

2408
01:22:02,000 --> 01:22:04,000
你很难统一的呀

2409
01:22:04,000 --> 01:22:05,000
就比较麻烦

2410
01:22:05,000 --> 01:22:08,000
对所以还是建议大家说

2411
01:22:08,000 --> 01:22:10,000
不要自己造轮子不要自己去搞这个东西

2412
01:22:10,000 --> 01:22:14,000
你以为好像你解决了你手头目前的那个问题

2413
01:22:14,000 --> 01:22:19,000
但是你肯定没有想到可能会漏掉的其他的东西

2414
01:22:19,000 --> 01:22:23,000
对而且说说回刚推测那个事情就是

2415
01:22:23,000 --> 01:22:25,000
他说推特他数这个字数

2416
01:22:25,000 --> 01:22:28,000
其实他数字数他有很多很复杂的

2417
01:22:28,000 --> 01:22:33,000
其他逻辑在里面比如说他会把一万二当成一个固定长度的

2418
01:22:33,000 --> 01:22:36,000
字符创来技术无论这个一万二有多长

2419
01:22:36,000 --> 01:22:37,000
他是合法的一万二

2420
01:22:37,000 --> 01:22:40,000
嗯他就他就是一款东西对吧

2421
01:22:40,000 --> 01:22:45,000
对对对就是他不会根据这个一万二实际的字符数量来技术

2422
01:22:45,000 --> 01:22:48,000
他是继承一个固定的数字图片链接也是一样吗

2423
01:22:48,000 --> 01:22:52,000
啊对对就是所有的这种媒体多媒体性的这种

2424
01:22:52,000 --> 01:22:58,000
链接然后还有 UIL 他都会用一个固定长度的字符创来给你

2425
01:22:58,000 --> 01:23:02,000
就作为他的这个字符创的长度

2426
01:23:02,000 --> 01:23:08,000
嗯所以你也可以把你的文字信息伪装成一个 UIL 往里面写

2427
01:23:08,000 --> 01:23:13,000
特别像中文这种不需要分词的 UIL 也是支持汉字的吧应该

2428
01:23:13,000 --> 01:23:17,000
嗯是的 UIL 长度也有限制啊 UIL 最长度也能超过

2429
01:23:17,000 --> 01:23:22,000
对但你这样就可以远远超过这个现有了 140 汉字的限制

2430
01:23:22,000 --> 01:23:28,000
问题是你表达不出来啊因为那个 UIL 在很多那个推特科物当里面他不会完全展示的

2431
01:23:28,000 --> 01:23:33,000
啊也是他会缩对对对而且有可能会被生成的

2432
01:23:33,000 --> 01:23:35,000
嗯啊对

2433
01:23:36,000 --> 01:23:43,000
所以啊就是刚才有说嘛你这会可以想到或有各种各样的隐藏的方法或者各样的

2434
01:23:43,000 --> 01:23:50,000
嗯耍赖皮的方法这个呢就很可能会被利用那而且呢有时候就往往会

2435
01:23:50,000 --> 01:23:53,000
被利用发生这个安全漏洞的问题

2436
01:23:53,000 --> 01:23:58,000
所以这个东西的话还是大家嗯千万不要自己乱搞干脆

2437
01:23:58,000 --> 01:24:06,000
其实目前来讲的话最稳妥一个办法还是交让那个 o s 处理就用最标准用最新的 api

2438
01:24:06,000 --> 01:24:11,000
啊不过 web 的好像还就得自己处理啊 web 方面

2439
01:24:12,000 --> 01:24:15,000
哎呀所以啊这个还是要多多测试嗯

2440
01:24:15,000 --> 01:24:25,000
不过今天又回到这个主题嘛就是因为现在大家在以前呢可能有一些问题呢并都放的也是放的

2441
01:24:25,000 --> 01:24:30,000
bug 留在那也是留在那啊就因为 moji 为了实现 moji 啊

2442
01:24:30,000 --> 01:24:38,000
后面呢需要有这么多个支持所以呢大家再次的再把这些技术再重新再整一遍来自己再

2443
01:24:38,000 --> 01:24:45,000
看一下自己写的软件自己的环境是不是都按标准的 unicode 去做

2444
01:24:47,000 --> 01:24:56,000
嗯像刚才说的那个像国旗啊国旗他那个对那个字字未处哎好难呀

2445
01:24:56,000 --> 01:25:05,000
就是那个 cluster 的那个定义啊他其实 unicode 的 8.08 本和 9.0 本本是有有改进的啊

2446
01:25:05,000 --> 01:25:11,000
因为在国旗原来原来定义就是说凡是国旗呃旗和旗

2447
01:25:11,000 --> 01:25:19,000
旗凡是两个国旗连在一起都是被都会被认成一个字的就是按照原来的定义

2448
01:25:19,000 --> 01:25:25,000
后来发现好像这样的一一团国旗都被认成一个字这肯定是不合适的呀

2449
01:25:25,000 --> 01:25:32,000
所以现在的 9.0 的版本就是最新的版本现在就是说在机数个是可以被断开

2450
01:25:32,000 --> 01:25:34,000
那偶数个是不能被断开

2451
01:25:36,000 --> 01:25:43,000
这样能的保证就是国旗对啊现在这个就是这样写的就刚才不是说一个旗

2452
01:25:43,000 --> 01:25:54,000
然后就是给这个旗的这个区他这个叫 reginal indicator 吗就是都是两两个字母代表组合成一个区域的图吗

2453
01:25:54,000 --> 01:26:01,000
但不对啊那个 iso 的那个国家代码有有三位数组合的没有他现在定义都是就是两两两两两

2454
01:26:01,000 --> 01:26:08,000
主国定义成就那个就那个标准有两个人那个都有两个一个三个一个两个对

2455
01:26:08,000 --> 01:26:12,000
因为两个不有两位的不有不够用的有不够用的时候吗

2456
01:26:13,000 --> 01:26:19,000
嗯他是 reginal indicator 不是 country indicator 啊就是就是就是这个也是个正正的概念了就是

2457
01:26:19,000 --> 01:26:22,000
是是举止和国家比如中国台湾你怎么办的

2458
01:26:22,000 --> 01:26:31,000
对啊国航的手国航的 iphone 是没有那个中华民国的国籍的

2459
01:26:34,000 --> 01:26:38,000
就就就就很奇怪了吗对吧这个都是可以回避的

2460
01:26:39,000 --> 01:26:48,000
不过这些都是有那个 unicode 的这个文档可以引用的关于刚才那个区域甚至比如说那个引用的那个语言代码也是吗

2461
01:26:48,000 --> 01:26:53,000
而且语言代码有两位也有三位嘛也是也是 iso 也有很多层次的吗

2462
01:26:54,000 --> 01:26:59,000
对啊对啊对也要看他他这个 unicode 他引用的是哪一个

2463
01:27:02,000 --> 01:27:09,000
太坑了太坑了所以大家看了发现其实 unicode 里面有更多的坑欢迎大家往里跳

2464
01:27:09,000 --> 01:27:16,000
不过我好像那天看就是下一版本的 unicode 好像就是有光头就是

2465
01:27:17,000 --> 01:27:22,000
moji 就就更新不知道他是怎么实现的这个什么红头发的男孩什么什么的

2466
01:27:24,000 --> 01:27:30,000
估计下一版的那个 mojii ios 更新的话就可以就会上了大家可以看了

2467
01:27:30,000 --> 01:27:33,000
你给我实现一个红头发的光头男孩出来

2468
01:27:33,000 --> 01:27:38,000
所以我在想他那个头发就是那个 tag 那个标签被碎啊那个提议被否决的可是很多石做

2469
01:27:39,000 --> 01:27:45,000
不自己他可以先先出来嘛那对那后面怎么调整那个是他机制后面怎么改的问题了

2470
01:27:47,000 --> 01:27:51,000
好吧那今天我的我们的主题就差不多了呀

2471
01:27:52,000 --> 01:27:53,000
对

2472
01:27:54,000 --> 01:27:59,000
然后你给我实现一个红头发的光头男孩出来

2473
01:27:59,000 --> 01:28:00,000
对

2474
01:28:01,000 --> 01:28:07,000
然后虽然不太清楚这个拯救世界的点是什么不过还是蛮有意思的

2475
01:28:09,000 --> 01:28:12,000
videos glass glass 又学到一些东西

2476
01:28:15,000 --> 01:28:18,000
而且还能拉出你们来做一期节目多不容易啊

2477
01:28:19,000 --> 01:28:23,000
对我们这个就靠你们训练我这真是

2478
01:28:23,000 --> 01:28:25,000
好了你们可以收尾了

2479
01:28:25,000 --> 01:28:26,000
ok

2480
01:28:26,000 --> 01:28:31,000
感谢收听 it 技术主题一个节目内和我们号称哈扩尔但是也没有干货

2481
01:28:31,000 --> 01:28:33,000
想听人听不想听人有别听

2482
01:28:33,000 --> 01:28:37,000
您可以微本节目专款地址是 carnalpanic.tv.com slash donate

2483
01:28:37,000 --> 01:28:39,000
捐款结果随意只要是八个正正书被就可以

2484
01:28:39,000 --> 01:28:44,000
捐款我们会给你带来什么不捐也不换要你说去什么我们可耗是 no hard feelings

2485
01:28:44,000 --> 01:28:47,000
如果你有任何反馈可以发电子无电脑

2486
01:28:47,000 --> 01:28:50,000
hi atcarnalpanic.fm

2487
01:28:50,000 --> 01:28:54,000
同时也欢迎你收听 real 主持的风头圈

2488
01:28:54,000 --> 01:28:57,000
我们下期节目再会

2489
01:28:58,000 --> 01:29:00,000
别呀真语您也收个尾呀

2490
01:29:01,000 --> 01:29:03,000
啊啊到我们了

2491
01:29:03,000 --> 01:29:05,000
好吧

2492
01:29:05,000 --> 01:29:07,000
那也感谢大家

2493
01:29:07,000 --> 01:29:09,000
也再次感谢大家收听

2494
01:29:09,000 --> 01:29:11,000
真语这个捧格的今天一直不在撞着

2495
01:29:11,000 --> 01:29:13,000
没有我刚刚再看一些 Ulicor 的马威

2496
01:29:13,000 --> 01:29:14,000
我在看那个 flag 的

2497
01:29:14,000 --> 01:29:16,000
我刚发现那个英格兰的那个

2498
01:29:16,000 --> 01:29:17,000
国旗

2499
01:29:18,000 --> 01:29:19,000
叫国旗吗

2500
01:29:19,000 --> 01:29:22,000
他他居然他居然要非常长的一组这个

2501
01:29:22,000 --> 01:29:23,000
才能

2502
01:29:23,000 --> 01:29:25,000
才能实现

2503
01:29:25,000 --> 01:29:27,000
他为什么要这么长

2504
01:29:27,000 --> 01:29:30,000
就是 gb eng 嘛

2505
01:29:30,000 --> 01:29:32,000
gb 是 grebriton 嘛

2506
01:29:32,000 --> 01:29:34,000
然后他在前面还要加一个

2507
01:29:34,000 --> 01:29:36,000
他在前面还要加一个

2508
01:29:36,000 --> 01:29:38,000
他在前面还要加一个

2509
01:29:38,000 --> 01:29:41,000
然后他在前面还要加一个

2510
01:29:41,000 --> 01:29:44,000
黑色飘动旗帜的那个对呀符号

2511
01:29:44,000 --> 01:29:47,000
对呀就是你不加那个的话

2512
01:29:47,000 --> 01:29:49,000
那个旗帜就不是飘动的

2513
01:29:49,000 --> 01:29:50,000
方形

2514
01:29:50,000 --> 01:29:52,000
就好像我觉得这个旗帜就是

2515
01:29:52,000 --> 01:29:53,000
英格兰是个地区旗吗

2516
01:29:53,000 --> 01:29:55,000
就好像我我猜如果有巴弄浮动宝

2517
01:29:55,000 --> 01:29:57,000
周周旗的话也是一样的

2518
01:29:57,000 --> 01:29:58,000
对

2519
01:29:58,000 --> 01:30:00,000
甚至如果你要加一个什么世旗的话

2520
01:30:00,000 --> 01:30:02,000
有可能会会更复杂

2521
01:30:03,000 --> 01:30:05,000
所以他可能就是因此呢

2522
01:30:05,000 --> 01:30:07,000
他首先那个飘动的旗

2523
01:30:07,000 --> 01:30:09,000
那个旗标就是和那个

2524
01:30:09,000 --> 01:30:11,000
国旗的那个旗是不是一样的

2525
01:30:11,000 --> 01:30:12,000
而且呢

2526
01:30:12,000 --> 01:30:13,000
他不仅用了两位

2527
01:30:13,000 --> 01:30:15,000
他肯定就是后面有金融

2528
01:30:15,000 --> 01:30:16,000
所以要有三位

2529
01:30:16,000 --> 01:30:18,000
然后先用国家

2530
01:30:18,000 --> 01:30:19,000
然后再用地区

2531
01:30:19,000 --> 01:30:20,000
这样的

2532
01:30:20,000 --> 01:30:21,000
对他不是说要用那个什么

2533
01:30:21,000 --> 01:30:24,000
tag 那个来实现吗对吧

2534
01:30:24,000 --> 01:30:25,000
还是用那个什么 tag

2535
01:30:25,000 --> 01:30:26,000
tag

2536
01:30:26,000 --> 01:30:29,000
这也算是一种 tag 好像

2537
01:30:29,000 --> 01:30:32,000
对就他并不是用那个

2538
01:30:32,000 --> 01:30:34,000
单纯的那个国旗的那个

2539
01:30:35,000 --> 01:30:38,000
就他不算在国旗的那个规范里面

2540
01:30:38,000 --> 01:30:40,000
他算在那个 tag 的那个规范里面

2541
01:30:40,000 --> 01:30:42,000
对吧就是他后面加了一个 tag

2542
01:30:42,000 --> 01:30:44,000
这个 tag 用来标明

2543
01:30:44,000 --> 01:30:47,000
除了这个国家后面的一个具体的

2544
01:30:47,000 --> 01:30:49,000
地区这样子的一个组合

2545
01:30:49,000 --> 01:30:50,000
对

2546
01:30:50,000 --> 01:30:51,000
他是这样实现的吧

2547
01:30:51,000 --> 01:30:52,000
对是

2548
01:30:52,000 --> 01:30:53,000
应该是这样

2549
01:30:53,000 --> 01:30:54,000
是的

2550
01:30:56,000 --> 01:30:57,000
对所以这个也可以解决

2551
01:30:57,000 --> 01:30:58,000
刚才 real 的那个问题吧

2552
01:30:58,000 --> 01:31:00,000
就说万一两位的这个国家代码

2553
01:31:00,000 --> 01:31:01,000
不够用的问题

2554
01:31:01,000 --> 01:31:02,000
我们节目不是结束吗

2555
01:31:02,000 --> 01:31:03,000
前众员

2556
01:31:11,000 --> 01:31:12,000
OK

2557
01:31:12,000 --> 01:31:13,000
好那

2558
01:31:13,000 --> 01:31:15,000
也再次感谢大家收听

2559
01:31:15,000 --> 01:31:17,000
《全职创》的地

2560
01:31:21,000 --> 01:31:22,000
为什么

2561
01:31:23,000 --> 01:31:24,000
蒙零下

2562
01:31:25,000 --> 01:31:27,000
第六十四期节目

2563
01:31:28,000 --> 01:31:29,000
那也欢迎大家来信

2564
01:31:29,000 --> 01:31:31,000
跟我们交流和反馈

2565
01:31:31,000 --> 01:31:32,000
我们的邮箱地址是

2566
01:31:32,000 --> 01:31:34,000
podcastatthetype.com

2567
01:31:34,000 --> 01:31:38,000
podcsthetype.com

2568
01:31:38,000 --> 01:31:40,000
同时呢大家也可以通过这个邮箱地址

2569
01:31:40,000 --> 01:31:42,000
在 paypal 和支付宝上

2570
01:31:42,000 --> 01:31:43,000
给我们捐资

2571
01:31:43,000 --> 01:31:45,000
那么如果大家想在社交网络上关注我们

2572
01:31:45,000 --> 01:31:48,000
我们在新浪微博推特和微信上的 id

2573
01:31:48,000 --> 01:31:50,000
都是 thetype.thtype

2574
01:31:50,000 --> 01:31:52,000
在 facebook 上搜索

2575
01:31:52,000 --> 01:31:53,000
type is beautiful

2576
01:31:53,000 --> 01:31:54,000
也可以找到我们

2577
01:31:54,000 --> 01:31:55,000
好就到这里

2578
01:31:55,000 --> 01:31:56,000
感谢大家收听

2579
01:31:56,000 --> 01:31:58,000
我们下次节目再见

2580
01:31:58,000 --> 01:31:59,000
拜拜

2581
01:31:59,000 --> 01:32:00,000
拜拜

2582
01:32:00,000 --> 01:32:01,000
拜拜

