1
00:00:00,000 --> 00:00:17,000
iPNN 领导人 不鸟万如一 最高指示 串才是很好的事 串得越赢越好

2
00:00:17,000 --> 00:00:26,000
不过丑 你这样侮辱我们的伟大领袖好吗 这真的是他说的

3
00:00:26,000 --> 00:00:32,000
对呀 就是这就是他说的 为什么你出来就有点奇葛 没错

4
00:00:32,000 --> 00:00:39,000
没有 就是你想一本就是当时一本书的话第一页就是应该是要写那个最高指示嘛

5
00:00:39,000 --> 00:00:43,000
所以在开场的时候我们串台的开场时候首先要念一下最高指示嘛

6
00:00:43,000 --> 00:00:47,000
这次节目是不是要被打上什么分级标签了 还没有 我没有说张字

7
00:00:47,000 --> 00:00:59,000
没关系 不过大家还是要说一下啊 如果不想收听体验被阴割的话 还是推荐大家使用泛用型博客歌舞端收听我们的节目

8
00:00:59,000 --> 00:01:02,000
对 好了我们终于开始录了

9
00:01:13,000 --> 00:01:29,000
大家好 今天是 2016 年 5 月 17 日 自弹自唱的第 21 期

10
00:01:29,000 --> 00:01:34,000
同时也是内吼恐慌的第 39 期 好突兀啊

11
00:01:34,000 --> 00:01:42,000
自弹自唱是全球首家用华语制作的自体排音主题博客节目 我是主播文传戏版动音剧 Eric

12
00:01:42,000 --> 00:01:45,000
我是主播狂谱江边青真语 浅真语

13
00:01:45,000 --> 00:01:52,000
那个恐慌是 ipnpocus 网络旗下的 IT 技术主题娱乐节目 我们号称 hardcore 但是并没有干货

14
00:01:52,000 --> 00:01:55,000
想听人听不想听人就别听 我是无套

15
00:01:55,000 --> 00:02:00,000
我是 Rail 哎呀惨了我们在技师上已经输了 他们的开头好滑烈啊

16
00:02:00,000 --> 00:02:04,000
对呀 他们还有开头配乐呢

17
00:02:04,000 --> 00:02:09,000
他们有那个他们有自己的封号你知道吗

18
00:02:10,000 --> 00:02:12,000
对对对那你们也可以来起一个呀哎呦

19
00:02:13,000 --> 00:02:18,000
怎么办呢而且我们两个封号还是对账加压运的对呀这个这个

20
00:02:19,000 --> 00:02:25,000
技术已经输了怎么办没错没错咱们俩赶紧想一个我是来因和叛

21
00:02:26,000 --> 00:02:27,000
啊

22
00:02:27,000 --> 00:02:28,000
哈哈哈反了

23
00:02:28,000 --> 00:02:30,000
哈哈哈哈

24
00:02:30,000 --> 00:02:35,000
你跟他们俩一个西一个江咱俩肯定要一个河一个海了

25
00:02:35,000 --> 00:02:38,000
或者一个河一个什么大象案

26
00:02:38,000 --> 00:02:40,000
我们派皮羊饼

27
00:02:40,000 --> 00:02:41,000
哈哈哈哈

28
00:02:42,000 --> 00:02:44,000
算算咱还是不要去存那个能耐

29
00:02:46,000 --> 00:02:48,000
咱们俩是咱们还是 keep on mode

30
00:02:48,000 --> 00:02:49,000
对对对

31
00:02:49,000 --> 00:02:55,000
这件事情挺特别的节目哈是我们这个这段自唱和那个恐慌第一次合作

32
00:02:57,000 --> 00:02:59,000
估计我们要做一系列吧

33
00:02:59,000 --> 00:03:04,000
所以我们今天的那个这个这个系列特别系列一个我们几个要起了个单独的名字叫做

34
00:03:05,000 --> 00:03:06,000
curning panic

35
00:03:07,000 --> 00:03:09,000
对没有听错 curning panic

36
00:03:10,000 --> 00:03:13,000
而且中国的名字叫自弹自串

37
00:03:13,000 --> 00:03:15,000
不是自弹自唱是自弹自串

38
00:03:16,000 --> 00:03:17,000
对因为首先我们是

39
00:03:19,000 --> 00:03:21,000
首先我们是串联了一下然后这个

40
00:03:22,000 --> 00:03:25,000
这个自串也是 stream 的一个翻译

41
00:03:26,000 --> 00:03:30,000
其实 curning panic 我已经想到了一种症状就是你在街上看到这个

42
00:03:30,000 --> 00:03:33,000
一个一个用用西文排

43
00:03:33,000 --> 00:03:37,000
拉临自母排出来的招牌然后他的 curning 非常的

44
00:03:37,000 --> 00:03:38,000
奇怪是吧

45
00:03:38,000 --> 00:03:41,000
又会产生对又会产生这个 curning panic 这种心理

46
00:03:42,000 --> 00:03:45,000
欢迎你来到中国任何一个大城市的商场

47
00:03:45,000 --> 00:03:49,000
都可以看到 curning panic 的状况都可以引发你产生

48
00:03:49,000 --> 00:03:51,000
中国做地铁天天都

49
00:03:51,000 --> 00:03:53,000
所以我每一天都是恐慌的状态是吗

50
00:03:53,000 --> 00:03:55,000
慌慌不可忠于

51
00:03:55,000 --> 00:03:57,000
我我并没有我觉得还好

52
00:04:01,000 --> 00:04:02,000
这是

53
00:04:03,000 --> 00:04:06,000
type is beautiful 和 ipn 之间的合作

54
00:04:06,000 --> 00:04:07,000
从更深的

55
00:04:08,000 --> 00:04:10,000
这个主办方的角度来说

56
00:04:10,000 --> 00:04:11,000
好了

57
00:04:11,000 --> 00:04:12,000
好吧那不是三比一吗

58
00:04:12,000 --> 00:04:16,000
tib 虽然和 ipn 是友台合作关系

59
00:04:16,000 --> 00:04:19,000
但是无套还是我们的不是你们的

60
00:04:21,000 --> 00:04:22,000
无套你怎么还在这里

61
00:04:22,000 --> 00:04:25,000
这个很重要

62
00:04:26,000 --> 00:04:27,000
当然重要了

63
00:04:27,000 --> 00:04:29,000
上次我跟那个博物志串台的时候

64
00:04:29,000 --> 00:04:31,000
万一就特地强调这点

65
00:04:31,000 --> 00:04:33,000
无套是你们还是我们的问题

66
00:04:33,000 --> 00:04:34,000
但是归根到底肯定还是我们的

67
00:04:34,000 --> 00:04:37,000
无套是我们 tib 的 tib

68
00:04:40,000 --> 00:04:42,000
归根姐弟还是你们的

69
00:04:44,000 --> 00:04:48,000
所以为什么无套没有出现在 type chat 里面

70
00:04:48,000 --> 00:04:49,000
因为怎么说

71
00:04:49,000 --> 00:04:55,000
这个 cdu 实际上是一个玩笑的头像

72
00:04:55,000 --> 00:04:56,000
因为我在 tib

73
00:04:56,000 --> 00:04:58,000
最开始

74
00:04:59,000 --> 00:05:02,000
接触到 type is beautiful 的时候

75
00:05:02,000 --> 00:05:04,000
type is beautiful 基本上是

76
00:05:04,000 --> 00:05:07,000
基本上是一个两个人运作的 blog

77
00:05:07,000 --> 00:05:09,000
然后当时

78
00:05:10,000 --> 00:05:13,000
也是现在我们伟大的站长 rex

79
00:05:14,000 --> 00:05:15,000
在找一个

80
00:05:15,000 --> 00:05:17,000
在找一个程序员

81
00:05:17,000 --> 00:05:18,000
就是有那种

82
00:05:18,000 --> 00:05:19,000
我有一个伟大的构想

83
00:05:19,000 --> 00:05:22,000
现在就缺一个程序员的那种感觉

84
00:05:22,000 --> 00:05:24,000
然后我自告奋勇的

85
00:05:25,000 --> 00:05:27,000
自告奋勇的记了简历给他

86
00:05:27,000 --> 00:05:29,000
这儿八经记了简历哦

87
00:05:29,000 --> 00:05:30,000
记了简历给他

88
00:05:30,000 --> 00:05:32,000
然后他审了一下说

89
00:05:32,000 --> 00:05:33,000
不错

90
00:05:33,000 --> 00:05:34,000
你来做我们的程序

91
00:05:34,000 --> 00:05:36,000
你来做我们的技术支持吧

92
00:05:36,000 --> 00:05:40,000
然后我就帮 type is beautiful 改了一部分东西

93
00:05:40,000 --> 00:05:41,000
主要是

94
00:05:43,000 --> 00:05:44,000
布局啊

95
00:05:44,000 --> 00:05:46,000
然后一些新功能之类的

96
00:05:48,000 --> 00:05:49,000
其实一直到

97
00:05:49,000 --> 00:05:50,000
我相信一直到现在

98
00:05:50,000 --> 00:05:51,000
我在网站上的那个

99
00:05:51,000 --> 00:05:53,000
他一头都是技术支持

100
00:05:53,000 --> 00:05:54,000
所以

101
00:05:55,000 --> 00:05:56,000
我完全就是一个

102
00:05:56,000 --> 00:05:57,000
又能

103
00:05:57,000 --> 00:05:59,000
打砸的那种感觉

104
00:05:59,000 --> 00:06:01,000
并不是一个 cto

105
00:06:01,000 --> 00:06:03,000
然后

106
00:06:04,000 --> 00:06:06,000
我也只是在 type is beautiful 上

107
00:06:06,000 --> 00:06:07,000
写过一些

108
00:06:07,000 --> 00:06:09,000
主要是翻译的一些作品

109
00:06:09,000 --> 00:06:10,000
就是比如说那个

110
00:06:12,000 --> 00:06:13,000
好吧

111
00:06:13,000 --> 00:06:14,000
也有自己原创的

112
00:06:14,000 --> 00:06:15,000
但是主要还是翻译

113
00:06:15,000 --> 00:06:17,000
翻译过那个

114
00:06:17,000 --> 00:06:20,000
dint 字体的原体的

115
00:06:20,000 --> 00:06:21,000
发明过程什么的

116
00:06:21,000 --> 00:06:23,000
所以本质上我不是一个

117
00:06:24,000 --> 00:06:25,000
内容输出的

118
00:06:26,000 --> 00:06:27,000
这么一个角色

119
00:06:27,000 --> 00:06:29,000
所以参加 type chat

120
00:06:29,000 --> 00:06:30,000
其实是有点

121
00:06:30,000 --> 00:06:32,000
肯定会进入那种

122
00:06:32,000 --> 00:06:33,000
无话可说的状态

123
00:06:33,000 --> 00:06:34,000
因为很多东西

124
00:06:34,000 --> 00:06:36,000
我只是可能对技术上有所了解

125
00:06:36,000 --> 00:06:37,000
但是不管是审美

126
00:06:37,000 --> 00:06:38,000
还是什么历史渊源上

127
00:06:38,000 --> 00:06:39,000
就完全没有

128
00:06:39,000 --> 00:06:40,000
概念

129
00:06:40,000 --> 00:06:42,000
所以我参加 type chat

130
00:06:42,000 --> 00:06:43,000
肯定会冷场

131
00:06:43,000 --> 00:06:44,000
别侵蚀呀

132
00:06:44,000 --> 00:06:45,000
没事没事

133
00:06:45,000 --> 00:06:47,000
但当然我要表个态

134
00:06:47,000 --> 00:06:48,000
我的确是 type is beautiful 的人

135
00:06:48,000 --> 00:06:49,000
一夜

136
00:06:51,000 --> 00:06:53,000
关键时刻还是这样对了

137
00:06:54,000 --> 00:06:55,000
那是

138
00:06:55,000 --> 00:06:57,000
现在是这样对的

139
00:06:59,000 --> 00:07:01,000
我倒在 type is beautiful

140
00:07:01,000 --> 00:07:02,000
里面的好多文章

141
00:07:02,000 --> 00:07:03,000
其实我也很受启发的

142
00:07:03,000 --> 00:07:04,000
因为在德国

143
00:07:04,000 --> 00:07:06,000
德国的印刷

144
00:07:06,000 --> 00:07:07,000
排印的历史

145
00:07:07,000 --> 00:07:08,000
也是非常悠久的

146
00:07:08,000 --> 00:07:10,000
像我那时候

147
00:07:10,000 --> 00:07:11,000
读那个什么

148
00:07:11,000 --> 00:07:13,000
关于长 s 那些文章

149
00:07:13,000 --> 00:07:14,000
还有什么关于

150
00:07:14,000 --> 00:07:15,000
字体定的那些文章

151
00:07:15,000 --> 00:07:16,000
都是非常受启发

152
00:07:17,000 --> 00:07:18,000
而且

153
00:07:18,000 --> 00:07:20,000
咱们俩还翻译过

154
00:07:20,000 --> 00:07:21,000
很多东西吧

155
00:07:21,000 --> 00:07:22,000
对吧

156
00:07:22,000 --> 00:07:25,000
信息堂的活字字体讲座

157
00:07:25,000 --> 00:07:26,000
但是就是咱们俩

158
00:07:26,000 --> 00:07:27,000
分工翻译的

159
00:07:27,000 --> 00:07:29,000
对你翻译的汉字那一部分

160
00:07:29,000 --> 00:07:31,000
这是一个漫长的过程

161
00:07:31,000 --> 00:07:33,000
就以我日语的水平

162
00:07:33,000 --> 00:07:35,000
我日语只是雅巴日语

163
00:07:35,000 --> 00:07:36,000
有些假名我到现在

164
00:07:36,000 --> 00:07:37,000
都是不会念的

165
00:07:37,000 --> 00:07:38,000
但是我认识

166
00:07:38,000 --> 00:07:40,000
用这种日语的水平

167
00:07:40,000 --> 00:07:41,000
翻译了两遍

168
00:07:41,000 --> 00:07:43,000
我自己都觉得非常神奇

169
00:07:44,000 --> 00:07:46,000
我们多彩多艺的无道东学

170
00:07:46,000 --> 00:07:48,000
咱们俩还翻过一本书

171
00:07:48,000 --> 00:07:49,000
对呀

172
00:07:49,000 --> 00:07:50,000
这就是个字体故事

173
00:07:50,000 --> 00:07:51,000
是

174
00:07:51,000 --> 00:07:52,000
我居然翻译一本书

175
00:07:52,000 --> 00:07:54,000
这是什么样的历史

176
00:07:54,000 --> 00:07:57,000
我差点没有坚持下来的那本书

177
00:07:57,000 --> 00:07:58,000
没有

178
00:07:58,000 --> 00:07:59,000
当年其实我觉得

179
00:07:59,000 --> 00:08:01,000
那是放在东西文库里面的

180
00:08:01,000 --> 00:08:03,000
然后我就觉得特别好

181
00:08:03,000 --> 00:08:04,000
因为你是在德国

182
00:08:04,000 --> 00:08:05,000
我在日本

183
00:08:05,000 --> 00:08:06,000
但是咱们俩都不在国内

184
00:08:06,000 --> 00:08:08,000
然后就翻了一个

185
00:08:08,000 --> 00:08:09,000
就放到东西文库里面

186
00:08:09,000 --> 00:08:11,000
也算是名副其实了

187
00:08:11,000 --> 00:08:12,000
没错

188
00:08:12,000 --> 00:08:13,000
这是一个非常

189
00:08:13,000 --> 00:08:14,000
一东一西

190
00:08:14,000 --> 00:08:15,000
对

191
00:08:15,000 --> 00:08:18,000
一个非常快文化的一个 project

192
00:08:18,000 --> 00:08:20,000
我和 Eric

193
00:08:20,000 --> 00:08:21,000
其实从来没有见过面

194
00:08:21,000 --> 00:08:22,000
然后那个

195
00:08:22,000 --> 00:08:23,000
协托我们边

196
00:08:23,000 --> 00:08:25,000
你一定要报这个料吗

197
00:08:26,000 --> 00:08:27,000
很快

198
00:08:27,000 --> 00:08:28,000
然后

199
00:08:28,000 --> 00:08:29,000
那个协托我们的边际

200
00:08:29,000 --> 00:08:31,000
也从来没有见过我们俩

201
00:08:31,000 --> 00:08:32,000
你们两个后来见过吗

202
00:08:33,000 --> 00:08:34,000
我见过周南

203
00:08:34,000 --> 00:08:35,000
OK

204
00:08:35,000 --> 00:08:37,000
总之他们这个编辑部

205
00:08:37,000 --> 00:08:38,000
现在也在做一些非常有意思的事情

206
00:08:38,000 --> 00:08:40,000
不妨帮他们打一个广告

207
00:08:40,000 --> 00:08:41,000
他们在做一本叫做

208
00:08:41,000 --> 00:08:42,000
离线的杂志

209
00:08:42,000 --> 00:08:43,000
可能我们的听误之间

210
00:08:43,000 --> 00:08:45,000
听众中间已经有很多朋友

211
00:08:45,000 --> 00:08:46,000
听说过了

212
00:08:46,000 --> 00:08:48,000
他们是在一个

213
00:08:48,000 --> 00:08:49,000
如今在这样一个

214
00:08:49,000 --> 00:08:51,000
数字出版发达的时代

215
00:08:51,000 --> 00:08:53,000
坚持做现象杂志的团队

216
00:08:53,000 --> 00:08:56,000
然后他们做的杂志也是

217
00:08:56,000 --> 00:08:58,000
主要是 gig 主题吧

218
00:08:58,000 --> 00:09:00,000
什么游戏啊

219
00:09:00,000 --> 00:09:02,000
未来啊

220
00:09:02,000 --> 00:09:03,000
科幻之类的

221
00:09:03,000 --> 00:09:04,000
就感兴趣的朋友可以去看一下

222
00:09:04,000 --> 00:09:05,000
他们

223
00:09:05,000 --> 00:09:06,000
虽然号称离线

224
00:09:06,000 --> 00:09:08,000
但现在还是有网站的

225
00:09:08,000 --> 00:09:09,000
然后

226
00:09:11,000 --> 00:09:12,000
喜欢的朋友可以入会

227
00:09:12,000 --> 00:09:14,000
也好喜欢这个剧型啊

228
00:09:14,000 --> 00:09:15,000
虽然不是什么

229
00:09:15,000 --> 00:09:17,000
但是他们号称什么

230
00:09:17,000 --> 00:09:18,000
你好喜欢这个剧型

231
00:09:18,000 --> 00:09:20,000
我觉得我可能太久

232
00:09:20,000 --> 00:09:22,000
中文说的太少

233
00:09:22,000 --> 00:09:23,000
很容易陷入一种

234
00:09:23,000 --> 00:09:25,000
就是使用一个

235
00:09:25,000 --> 00:09:26,000
套用一个固定剧型的模式

236
00:09:26,000 --> 00:09:28,000
我自己也发现了

237
00:09:29,000 --> 00:09:30,000
挺好挺好

238
00:09:30,000 --> 00:09:31,000
没事没事

239
00:09:31,000 --> 00:09:32,000
我们这个节目

240
00:09:32,000 --> 00:09:34,000
可以锻炼你的中文水平

241
00:09:34,000 --> 00:09:36,000
非常感谢

242
00:09:36,000 --> 00:09:37,000
瑞回国以后

243
00:09:37,000 --> 00:09:38,000
是不是觉得自己

244
00:09:38,000 --> 00:09:39,000
中文的母语水平

245
00:09:39,000 --> 00:09:40,000
马上就回来了

246
00:09:40,000 --> 00:09:42,000
就我比较一个

247
00:09:42,000 --> 00:09:44,000
你在黑场吗

248
00:09:44,000 --> 00:09:46,000
比较明显的感受是

249
00:09:46,000 --> 00:09:47,000
就以前节目里面

250
00:09:47,000 --> 00:09:48,000
老是念错字

251
00:09:48,000 --> 00:09:49,000
就现在好像

252
00:09:49,000 --> 00:09:50,000
出现这种概率的

253
00:09:50,000 --> 00:09:52,000
要稍微好一点

254
00:09:52,000 --> 00:09:54,000
会有帮助吗

255
00:09:54,000 --> 00:09:55,000
我觉得国内

256
00:09:55,000 --> 00:09:57,000
也是让人念的状态

257
00:09:57,000 --> 00:09:58,000
出现这种概率

258
00:09:58,000 --> 00:09:59,000
要稍微好一点的

259
00:09:59,000 --> 00:10:01,000
这本身就是个并具了

260
00:10:03,000 --> 00:10:05,000
这口语面无所谓

261
00:10:05,000 --> 00:10:06,000
反正我到现在

262
00:10:06,000 --> 00:10:07,000
破灯话也不好

263
00:10:07,000 --> 00:10:08,000
好不好

264
00:10:08,000 --> 00:10:09,000
我们应该说一下

265
00:10:09,000 --> 00:10:10,000
这次节目主题是什么

266
00:10:10,000 --> 00:10:11,000
对对对

267
00:10:11,000 --> 00:10:13,000
我们先看中文

268
00:10:13,000 --> 00:10:14,000
我们的节目

269
00:10:14,000 --> 00:10:16,000
英文名叫 Curling Panic

270
00:10:16,000 --> 00:10:18,000
中文名字叫自弹自串

271
00:10:18,000 --> 00:10:20,000
串台节目是我们 TIB

272
00:10:20,000 --> 00:10:22,000
和 IPN 网络旗下的

273
00:10:22,000 --> 00:10:24,000
内核恐慌的合作节目

274
00:10:24,000 --> 00:10:26,000
这次作为第一期

275
00:10:26,000 --> 00:10:27,000
我们就应该讲一下

276
00:10:27,000 --> 00:10:29,000
应该有个主题

277
00:10:29,000 --> 00:10:31,000
从用户敲击键盘开始

278
00:10:31,000 --> 00:10:33,000
到最终的答应输出

279
00:10:33,000 --> 00:10:35,000
这个过程到底发生了什么

280
00:10:36,000 --> 00:10:38,000
这是一个好长的过程

281
00:10:38,000 --> 00:10:41,000
我已经在想到那个程序战

282
00:10:42,000 --> 00:10:44,000
看到这个主题的第一反应是

283
00:10:45,000 --> 00:10:47,000
这一期讲的完

284
00:10:47,000 --> 00:10:50,000
为了感谢听众们的不杀之恩

285
00:10:50,000 --> 00:10:53,000
一定要讲一千零一的节奏

286
00:10:54,000 --> 00:10:55,000
我看到这个主题的第一反应是

287
00:10:55,000 --> 00:10:57,000
陈宣杆怎么找女朋友

288
00:11:00,000 --> 00:11:02,000
上次因为 Rail 不在

289
00:11:02,000 --> 00:11:06,000
然后我掏字一个很怨恨的听众

290
00:11:06,000 --> 00:11:08,000
录了一期叫编码

291
00:11:08,000 --> 00:11:09,000
我一一期

292
00:11:09,000 --> 00:11:12,000
和字比较有关系的一期节目

293
00:11:12,000 --> 00:11:14,000
但是就自己一个人录的很不爽

294
00:11:14,000 --> 00:11:17,000
其实我们之前讲过编程字体的

295
00:11:17,000 --> 00:11:21,000
那一期算是非常和太袍冠是有点关系的

296
00:11:21,000 --> 00:11:22,000
主题

297
00:11:22,000 --> 00:11:24,000
不过那个时候还没有你们的

298
00:11:24,000 --> 00:11:26,000
所以

299
00:11:26,000 --> 00:11:29,000
陈宣杆也要关心字体的

300
00:11:29,000 --> 00:11:30,000
做字的也要知道

301
00:11:30,000 --> 00:11:32,000
陈宣杆应该怎么运行

302
00:11:32,000 --> 00:11:33,000
所以我觉得咱们的串台

303
00:11:33,000 --> 00:11:35,000
是非常有意义的

304
00:11:36,000 --> 00:11:37,000
的确

305
00:11:37,000 --> 00:11:39,000
那就串起来咯

306
00:11:42,000 --> 00:11:44,000
基本上今天咱们第一次串

307
00:11:44,000 --> 00:11:46,000
咱们就从头到尾先简略的

308
00:11:46,000 --> 00:11:48,000
都把从头一个过程先说完

309
00:11:48,000 --> 00:11:49,000
然后呢

310
00:11:49,000 --> 00:11:51,000
留下无数大坑

311
00:11:51,000 --> 00:11:52,000
那坑就挖

312
00:11:52,000 --> 00:11:54,000
以后慢慢填呗

313
00:11:56,000 --> 00:11:58,000
免得以后没有主题

314
00:11:58,000 --> 00:12:01,000
解决了必节目最大的问题

315
00:12:02,000 --> 00:12:04,000
我们现在是选题过深

316
00:12:04,000 --> 00:12:05,000
怎么办

317
00:12:05,000 --> 00:12:06,000
换不换

318
00:12:06,000 --> 00:12:08,000
不换换换不据

319
00:12:09,000 --> 00:12:12,000
你们把那个和技术有关的

320
00:12:12,000 --> 00:12:14,000
主题给我援一半

321
00:12:17,000 --> 00:12:19,000
你们的努力多说一点

322
00:12:20,000 --> 00:12:21,000
或者可以这样吧

323
00:12:21,000 --> 00:12:22,000
Rail 给你们

324
00:12:22,000 --> 00:12:23,000
然后把争议给我们

325
00:12:23,000 --> 00:12:25,000
我们两个可以

326
00:12:28,000 --> 00:12:29,000
怎么一回事

327
00:12:29,000 --> 00:12:30,000
为什么没钱

328
00:12:30,000 --> 00:12:32,000
习物物交换是吧

329
00:12:32,000 --> 00:12:33,000
换搭档俱乐部

330
00:12:33,000 --> 00:12:35,000
人人交换

331
00:12:35,000 --> 00:12:37,000
贵权真乱

332
00:12:37,000 --> 00:12:39,000
partner exchange

333
00:12:39,000 --> 00:12:41,000
听起来毫无为口

334
00:12:42,000 --> 00:12:44,000
更乱了

335
00:12:46,000 --> 00:12:48,000
好了我们这个少一点下三楼吧

336
00:12:48,000 --> 00:12:49,000
现在先

337
00:12:50,000 --> 00:12:52,000
好像是我一直在下三楼

338
00:12:52,000 --> 00:12:53,000
anyway

339
00:12:53,000 --> 00:12:55,000
我们来点先来点底层的东西

340
00:12:56,000 --> 00:12:58,000
因为大家一开始就打开电脑是打字嘛

341
00:12:58,000 --> 00:13:01,000
这个字打到电脑里面去

342
00:13:01,000 --> 00:13:03,000
其实是什么样的过程对吧

343
00:13:05,000 --> 00:13:07,000
我们可以从

344
00:13:07,000 --> 00:13:09,000
我觉得可以先讲一下历史远远

345
00:13:09,000 --> 00:13:10,000
就是

346
00:13:10,000 --> 00:13:12,000
世界上为什么有这么多种

347
00:13:12,000 --> 00:13:13,000
键盘布局

348
00:13:13,000 --> 00:13:14,000
为什么

349
00:13:14,000 --> 00:13:16,000
可能在中国待久了

350
00:13:16,000 --> 00:13:17,000
你会觉得

351
00:13:17,000 --> 00:13:19,000
你会有一种

352
00:13:19,000 --> 00:13:20,000
想象就是

353
00:13:20,000 --> 00:13:21,000
可能全世界的键盘

354
00:13:21,000 --> 00:13:23,000
长的都这个样子

355
00:13:23,000 --> 00:13:24,000
但实际上不是

356
00:13:26,000 --> 00:13:28,000
尤其是在日本的

357
00:13:28,000 --> 00:13:29,000
朋友们可能会觉得

358
00:13:29,000 --> 00:13:31,000
我考日文键盘实在是太复杂了

359
00:13:31,000 --> 00:13:32,000
我第一次见到日文键盘

360
00:13:32,000 --> 00:13:33,000
真的有点震惊

361
00:13:33,000 --> 00:13:34,000
就是

362
00:13:34,000 --> 00:13:35,000
你能讲一下就是

363
00:13:35,000 --> 00:13:37,000
日本键盘上有一个键叫做

364
00:13:37,000 --> 00:13:38,000
转换

365
00:13:38,000 --> 00:13:39,000
非转换是干嘛的吗

366
00:13:39,000 --> 00:13:40,000
对

367
00:13:40,000 --> 00:13:42,000
我到现在也不懂

368
00:13:44,000 --> 00:13:46,000
因为我一般都不去用那个键

369
00:13:46,000 --> 00:13:49,000
而且是那个 Windows 的标准是那样的

370
00:13:49,000 --> 00:13:50,000
然后 Mac 是不用的

371
00:13:50,000 --> 00:13:53,000
Mac 上没有转换非转换这个键

372
00:13:53,000 --> 00:13:54,000
对

373
00:13:55,000 --> 00:13:57,000
而且就是因为他们日文的键盘

374
00:13:57,000 --> 00:14:00,000
他还有那个假名输入的键位

375
00:14:00,000 --> 00:14:01,000
所以他一个键帽上面

376
00:14:01,000 --> 00:14:05,000
有时候会多达四五个字

377
00:14:05,000 --> 00:14:07,000
他一个键帽上要硬四五个字

378
00:14:07,000 --> 00:14:08,000
所以那个日文的键面

379
00:14:08,000 --> 00:14:09,000
特别特别花

380
00:14:09,000 --> 00:14:11,000
然后键位又不一样

381
00:14:11,000 --> 00:14:13,000
所以还好在日本买 Mac 的话

382
00:14:13,000 --> 00:14:14,000
他是有选择的

383
00:14:14,000 --> 00:14:15,000
然后我在日本买

384
00:14:15,000 --> 00:14:17,000
我都会选择选择

385
00:14:17,000 --> 00:14:18,000
那个美国的键盘

386
00:14:18,000 --> 00:14:19,000
USL

387
00:14:19,000 --> 00:14:20,000
要不然的话我都疯掉了

388
00:14:21,000 --> 00:14:22,000
对

389
00:14:22,000 --> 00:14:25,000
因为我之前在德国也提到

390
00:14:25,000 --> 00:14:27,000
我们之前在那个内核恐慌

391
00:14:27,000 --> 00:14:28,000
也提到过这一期

392
00:14:28,000 --> 00:14:29,000
就在德国的时候

393
00:14:29,000 --> 00:14:31,000
那个德国的键盘也是挺奇怪的

394
00:14:31,000 --> 00:14:33,000
不是那种标准的美国键位

395
00:14:33,000 --> 00:14:34,000
就国内用那种

396
00:14:34,000 --> 00:14:37,000
然后当时我也是在德国待的时候

397
00:14:37,000 --> 00:14:39,000
为了买美国键位的

398
00:14:39,000 --> 00:14:40,000
还专门需要订

399
00:14:40,000 --> 00:14:42,000
就是要特殊订单

400
00:14:42,000 --> 00:14:43,000
等他送过来

401
00:14:43,000 --> 00:14:44,000
然后在日本的话

402
00:14:44,000 --> 00:14:46,000
因为现在海套也比较方便

403
00:14:46,000 --> 00:14:48,000
很多人也去日本买电脑

404
00:14:48,000 --> 00:14:49,000
笔记本之类的

405
00:14:49,000 --> 00:14:50,000
好像也有

406
00:14:50,000 --> 00:14:51,000
经常我看到有人买到一个

407
00:14:51,000 --> 00:14:53,000
日文键盘的笔记本

408
00:14:53,000 --> 00:14:55,000
来用起来挺不方便的

409
00:14:56,000 --> 00:14:57,000
对的

410
00:14:57,000 --> 00:14:59,000
其实我刚才

411
00:14:59,000 --> 00:15:01,000
强调了这三种布局就是

412
00:15:01,000 --> 00:15:03,000
世界上最主的二三种布局的一种是

413
00:15:03,000 --> 00:15:05,000
国内的所谓

414
00:15:05,000 --> 00:15:08,000
其实国内的键盘布局是以

415
00:15:08,000 --> 00:15:11,000
北美为主的一个布局

416
00:15:11,000 --> 00:15:12,000
叫做

417
00:15:12,000 --> 00:15:14,000
ASI NC 布局

418
00:15:15,000 --> 00:15:17,000
然后它最大的特点

419
00:15:17,000 --> 00:15:18,000
其实就是那个 Return 键

420
00:15:18,000 --> 00:15:20,000
是一个扁平的长条

421
00:15:21,000 --> 00:15:23,000
它只是比别的键宽一点

422
00:15:23,000 --> 00:15:25,000
然后在德国

423
00:15:25,000 --> 00:15:27,000
就有提到这种键盘是

424
00:15:27,000 --> 00:15:28,000
所谓 EASL 键盘

425
00:15:28,000 --> 00:15:30,000
就是国际标准化组织

426
00:15:30,000 --> 00:15:32,000
规定的键盘

427
00:15:32,000 --> 00:15:33,000
比如说

428
00:15:33,000 --> 00:15:35,000
规定只有德语用

429
00:15:35,000 --> 00:15:36,000
法语

430
00:15:36,000 --> 00:15:38,000
包括英国其实也在用这种

431
00:15:38,000 --> 00:15:40,000
EASL 制式的键盘

432
00:15:40,000 --> 00:15:42,000
它好像要比 ASI 多出一个键盘

433
00:15:42,000 --> 00:15:44,000
然后最大的特征是那个

434
00:15:44,000 --> 00:15:47,000
回车键是一个倒 L 型

435
00:15:47,000 --> 00:15:49,000
然后日本的

436
00:15:49,000 --> 00:15:51,000
日本的这个标准

437
00:15:51,000 --> 00:15:52,000
然后应该是

438
00:15:52,000 --> 00:15:54,000
JIS 标准

439
00:15:54,000 --> 00:15:56,000
就是 Japanese Industrial Standard 标准

440
00:15:56,000 --> 00:15:58,000
然后它也是一个

441
00:15:58,000 --> 00:16:00,000
好像也是一个倒 L 的键盘

442
00:16:00,000 --> 00:16:03,000
但是它的键还要比 EASL 多出一个

443
00:16:03,000 --> 00:16:05,000
如果没有其错的话

444
00:16:05,000 --> 00:16:06,000
还要多

445
00:16:06,000 --> 00:16:07,000
对

446
00:16:07,000 --> 00:16:08,000
对 还要多

447
00:16:08,000 --> 00:16:10,000
所以在日本的话

448
00:16:10,000 --> 00:16:12,000
普通的日本人他们是用什么

449
00:16:12,000 --> 00:16:13,000
用那个日文键盘吗

450
00:16:13,000 --> 00:16:14,000
应该

451
00:16:14,000 --> 00:16:17,000
就是键位是差不多的

452
00:16:17,000 --> 00:16:19,000
日本键盘和美国键盘

453
00:16:19,000 --> 00:16:21,000
他们也是用 Court

454
00:16:21,000 --> 00:16:23,000
就是在

455
00:16:23,000 --> 00:16:27,000
英文字符的键位是和美国键位是一样的

456
00:16:27,000 --> 00:16:28,000
然后就是什么

457
00:16:28,000 --> 00:16:29,000
后面那些

458
00:16:29,000 --> 00:16:32,000
那些位置的安排是不一样的

459
00:16:32,000 --> 00:16:34,000
然后绝大多数的日本人

460
00:16:34,000 --> 00:16:35,000
现在都使用

461
00:16:35,000 --> 00:16:37,000
他们罗马字拼音进行输入

462
00:16:37,000 --> 00:16:39,000
虽然日本键位也

463
00:16:39,000 --> 00:16:41,000
支持他们直接的那个

464
00:16:41,000 --> 00:16:43,000
叫假名输入法

465
00:16:43,000 --> 00:16:44,000
就是按一个键

466
00:16:44,000 --> 00:16:46,000
就可以输入一个假名

467
00:16:46,000 --> 00:16:49,000
但是我见过

468
00:16:49,000 --> 00:16:50,000
就是活人

469
00:16:50,000 --> 00:16:52,000
我见过这么多日本

470
00:16:52,000 --> 00:16:53,000
尤其只有一个人

471
00:16:53,000 --> 00:16:56,000
是用那个假名直接输入的

472
00:16:56,000 --> 00:16:57,000
因为他要去被那个

473
00:16:57,000 --> 00:16:59,000
假名放在哪个键位吗

474
00:16:59,000 --> 00:17:01,000
所以

475
00:17:01,000 --> 00:17:04,000
原来日本人现在已经不用假名输入了

476
00:17:04,000 --> 00:17:06,000
就跟那个输入比差不多吗

477
00:17:06,000 --> 00:17:09,000
应该说跟注音符号差不多

478
00:17:09,000 --> 00:17:10,000
用假名输入的人

479
00:17:10,000 --> 00:17:13,000
跟台湾用注音符号输入的人差不多

480
00:17:14,000 --> 00:17:16,000
他们就是把这每个

481
00:17:16,000 --> 00:17:18,000
假名分配到那个键位上面

482
00:17:18,000 --> 00:17:21,000
那不够分吧

483
00:17:21,000 --> 00:17:22,000
够的

484
00:17:22,000 --> 00:17:24,000
会有重复吗

485
00:17:24,000 --> 00:17:26,000
假名可以有多少个

486
00:17:26,000 --> 00:17:28,000
50 英图

487
00:17:28,000 --> 00:17:29,000
50 英图有 50 个

488
00:17:29,000 --> 00:17:31,000
实际上常用的不到 50 个

489
00:17:31,000 --> 00:17:32,000
这 40 多个

490
00:17:32,000 --> 00:17:33,000
那也不够啊

491
00:17:33,000 --> 00:17:34,000
然后他还有评假名

492
00:17:34,000 --> 00:17:35,000
还有骗假名

493
00:17:35,000 --> 00:17:37,000
他们用拙连什么的

494
00:17:37,000 --> 00:17:38,000
之类的组合

495
00:17:38,000 --> 00:17:39,000
对 没错

496
00:17:39,000 --> 00:17:40,000
普通键盘上你加上

497
00:17:40,000 --> 00:17:42,000
英文 26 个加 10 个

498
00:17:42,000 --> 00:17:44,000
数字也才 36

499
00:17:44,000 --> 00:17:46,000
再加一堆号不到 50

500
00:17:46,000 --> 00:17:48,000
差不多

501
00:17:48,000 --> 00:17:49,000
40 多个吗

502
00:17:49,000 --> 00:17:51,000
他就有组合

503
00:17:51,000 --> 00:17:52,000
他们那个什么

504
00:17:52,000 --> 00:17:53,000
帽号啊

505
00:17:53,000 --> 00:17:55,000
诱惑号啊

506
00:17:55,000 --> 00:17:56,000
豆号啊

507
00:17:56,000 --> 00:17:57,000
大约号

508
00:17:57,000 --> 00:17:58,000
小约号全都炸了

509
00:17:58,000 --> 00:17:59,000
对

510
00:17:59,000 --> 00:18:00,000
差不得

511
00:18:00,000 --> 00:18:01,000
这里有 10 个

512
00:18:01,000 --> 00:18:02,000
刚好

513
00:18:02,000 --> 00:18:03,000
所以特别花

514
00:18:03,000 --> 00:18:04,000
大家如果去看

515
00:18:04,000 --> 00:18:06,000
日文的基斯键盘标准的话

516
00:18:06,000 --> 00:18:07,000
就他那个键帽

517
00:18:07,000 --> 00:18:08,000
上面特别花

518
00:18:08,000 --> 00:18:09,000
写满了字

519
00:18:09,000 --> 00:18:10,000
然后我记得好像有些还是写在

520
00:18:10,000 --> 00:18:11,000
侧面的

521
00:18:11,000 --> 00:18:12,000
如果键盘是比较那种高的

522
00:18:12,000 --> 00:18:13,000
不是那种

523
00:18:13,000 --> 00:18:14,000
现在就成为巧克力键盘

524
00:18:14,000 --> 00:18:15,000
真的吗

525
00:18:15,000 --> 00:18:16,000
那谁是 KD

526
00:18:16,000 --> 00:18:17,000
没有

527
00:18:17,000 --> 00:18:18,000
那个是法语键盘

528
00:18:18,000 --> 00:18:19,000
法文键盘就是

529
00:18:19,000 --> 00:18:20,000
法文键盘

530
00:18:20,000 --> 00:18:21,000
那他们数字

531
00:18:21,000 --> 00:18:22,000
数字的话

532
00:18:22,000 --> 00:18:23,000
默认的话

533
00:18:23,000 --> 00:18:24,000
他们是打出

534
00:18:24,000 --> 00:18:25,000
输掉的符号

535
00:18:25,000 --> 00:18:27,000
然后要按 shift 的键

536
00:18:27,000 --> 00:18:28,000
才能打出数字

537
00:18:28,000 --> 00:18:29,000
然后有的时候

538
00:18:29,000 --> 00:18:31,000
还要必须按左 out

539
00:18:31,000 --> 00:18:32,000
还是是

540
00:18:32,000 --> 00:18:33,000
右边的 out

541
00:18:33,000 --> 00:18:34,000
对

542
00:18:34,000 --> 00:18:37,000
右边叫 out graphic

543
00:18:37,000 --> 00:18:38,000
就是你要打出一些

544
00:18:38,000 --> 00:18:40,000
图像符号的时候

545
00:18:40,000 --> 00:18:42,000
所以才会扭曲的出现

546
00:18:42,000 --> 00:18:44,000
那种二十禁制的技术原则

547
00:18:44,000 --> 00:18:45,000
吗

548
00:18:45,000 --> 00:18:46,000
好奇

549
00:18:46,000 --> 00:18:49,000
不要再非法有数字

550
00:18:49,000 --> 00:18:51,000
好吧

551
00:18:51,000 --> 00:18:54,000
那所以其实在日本工作的

552
00:18:54,000 --> 00:18:55,000
程序员

553
00:18:55,000 --> 00:18:56,000
他们用日本键盘

554
00:18:56,000 --> 00:18:57,000
输入的话

555
00:18:57,000 --> 00:18:58,000
就是比如说

556
00:18:58,000 --> 00:18:59,000
编程

557
00:18:59,000 --> 00:19:00,000
会有障碍吗

558
00:19:00,000 --> 00:19:01,000
会

559
00:19:01,000 --> 00:19:03,000
因为就像我到现在为止

560
00:19:03,000 --> 00:19:04,000
有时候还会找不到键位

561
00:19:04,000 --> 00:19:06,000
而且像在美

562
00:19:06,000 --> 00:19:08,000
尤其是那些符号类的

563
00:19:09,000 --> 00:19:10,000
然后像

564
00:19:10,000 --> 00:19:11,000
扩扶的话

565
00:19:11,000 --> 00:19:12,000
在美国扩扶

566
00:19:12,000 --> 00:19:13,000
美国键盘上面

567
00:19:13,000 --> 00:19:14,000
扩扶都是左右对称的

568
00:19:14,000 --> 00:19:15,000
对 9 和 0

569
00:19:15,000 --> 00:19:16,000
一对一对的

570
00:19:16,000 --> 00:19:18,000
但是在日本键盘的话

571
00:19:18,000 --> 00:19:19,000
它那个中扩号

572
00:19:19,000 --> 00:19:20,000
它是上下的

573
00:19:20,000 --> 00:19:22,000
就不是左右相邻着的

574
00:19:22,000 --> 00:19:23,000
所以有时候就

575
00:19:23,000 --> 00:19:25,000
就按的会比较麻烦

576
00:19:25,000 --> 00:19:27,000
然后还有一些很坑爹的

577
00:19:27,000 --> 00:19:29,000
就是他当年早期

578
00:19:29,000 --> 00:19:31,000
giz 把 ask

579
00:19:31,000 --> 00:19:32,000
转过来的时候

580
00:19:32,000 --> 00:19:34,000
他把那个日元符号和

581
00:19:34,000 --> 00:19:36,000
他把反斜干的那个

582
00:19:36,000 --> 00:19:39,000
马位换上了日元符号

583
00:19:39,000 --> 00:19:40,000
印天的

584
00:19:40,000 --> 00:19:41,000
这是一个

585
00:19:41,000 --> 00:19:43,000
对明白了

586
00:19:43,000 --> 00:19:44,000
但你不觉得 real

587
00:19:44,000 --> 00:19:46,000
这解决了一个童年的疑惑吗

588
00:19:46,000 --> 00:19:47,000
就是有时候

589
00:19:47,000 --> 00:19:49,000
你小时候玩日文游戏的时候

590
00:19:49,000 --> 00:19:50,000
它的那个路径分割符

591
00:19:50,000 --> 00:19:52,000
是一个印的符号

592
00:19:52,000 --> 00:19:53,000
对

593
00:19:53,000 --> 00:19:54,000
在 windows

594
00:19:54,000 --> 00:19:55,000
他们的那个路径

595
00:19:55,000 --> 00:19:57,000
默认是用反斜干吗

596
00:19:57,000 --> 00:19:59,000
所以在当年早期的那个

597
00:19:59,000 --> 00:20:01,000
windows 的日本版的时候

598
00:20:01,000 --> 00:20:03,000
他们路径就是一大堆的

599
00:20:03,000 --> 00:20:05,000
日元符号好多钱

600
00:20:05,000 --> 00:20:07,000
不过日元也不值钱

601
00:20:07,000 --> 00:20:09,000
他其实是功用了一个

602
00:20:09,000 --> 00:20:10,000
什么编码

603
00:20:10,000 --> 00:20:11,000
是这样子的

604
00:20:11,000 --> 00:20:12,000
就是他当时把

605
00:20:12,000 --> 00:20:14,000
maski 拿过来的时候

606
00:20:14,000 --> 00:20:15,000
把 aski 的那个

607
00:20:15,000 --> 00:20:17,000
反斜干的那个马

608
00:20:17,000 --> 00:20:20,000
给他换成那个日元符号了

609
00:20:20,000 --> 00:20:22,000
那应该是编码

610
00:20:22,000 --> 00:20:23,000
没有编进去

611
00:20:23,000 --> 00:20:24,000
这不是一个证据的问题

612
00:20:24,000 --> 00:20:25,000
就是你

613
00:20:25,000 --> 00:20:27,000
那个时候日文

614
00:20:27,000 --> 00:20:30,000
只支持假名和 26 文字母

615
00:20:30,000 --> 00:20:33,000
所以如果你要把

616
00:20:33,000 --> 00:20:35,000
256 个字符用上的话

617
00:20:35,000 --> 00:20:36,000
其实是完全够的

618
00:20:36,000 --> 00:20:39,000
日语在当时不支持汉字

619
00:20:39,000 --> 00:20:41,000
但是支持所有的

620
00:20:41,000 --> 00:20:42,000
评假名和评假名

621
00:20:42,000 --> 00:20:44,000
然后可以全都压缩在

622
00:20:44,000 --> 00:20:45,000
256 个字符里面

623
00:20:45,000 --> 00:20:47,000
那也是八位了

624
00:20:47,000 --> 00:20:48,000
它不是七位吗

625
00:20:48,000 --> 00:20:51,000
就是 Abit 的编码

626
00:20:51,000 --> 00:20:52,000
aski 是七位

627
00:20:52,000 --> 00:20:53,000
对

628
00:20:53,000 --> 00:20:54,000
aski 是七位

629
00:20:54,000 --> 00:20:56,000
然后它就相当于

630
00:20:56,000 --> 00:20:58,000
这是那个日本的

631
00:20:58,000 --> 00:20:59,000
修扩展

632
00:20:59,000 --> 00:21:01,000
修扩展就是在修字母币

633
00:21:01,000 --> 00:21:02,000
扩展

634
00:21:02,000 --> 00:21:03,000
然后用上

635
00:21:03,000 --> 00:21:04,000
然后日语

636
00:21:04,000 --> 00:21:06,000
日本当时决定使用一个

637
00:21:06,000 --> 00:21:09,000
最不常见的符号来替换掉

638
00:21:09,000 --> 00:21:11,000
替换成印的符号

639
00:21:11,000 --> 00:21:13,000
就把反斜杠给替换掉

640
00:21:13,000 --> 00:21:14,000
因为反斜杠

641
00:21:14,000 --> 00:21:15,000
实际上在日常生活中

642
00:21:15,000 --> 00:21:16,000
是非常少见的

643
00:21:16,000 --> 00:21:19,000
就除了我小时在用吗

644
00:21:19,000 --> 00:21:23,000
除了编程需要接触到

645
00:21:23,000 --> 00:21:25,000
基本上日常生活里面

646
00:21:25,000 --> 00:21:27,000
没有一个地方用到反斜杠

647
00:21:27,000 --> 00:21:29,000
编程在反斜杠里面

648
00:21:29,000 --> 00:21:30,000
就是哪个语言里面

649
00:21:30,000 --> 00:21:32,000
想到用反斜杠的

650
00:21:32,000 --> 00:21:34,000
反斜杠不是转衣服吗

651
00:21:34,000 --> 00:21:37,000
对

652
00:21:37,000 --> 00:21:39,000
大部分人的转衣服

653
00:21:39,000 --> 00:21:40,000
不算常用吧

654
00:21:40,000 --> 00:21:41,000
就写转衣服的时候

655
00:21:41,000 --> 00:21:42,000
转衣服不常用吗

656
00:21:42,000 --> 00:21:43,000
我现在还能

657
00:21:43,000 --> 00:21:46,000
然后就是 Windows 的路径了吗

658
00:21:46,000 --> 00:21:47,000
对

659
00:21:47,000 --> 00:21:48,000
那应该是这样的

660
00:21:48,000 --> 00:21:51,000
然后我那时候就开玩笑

661
00:21:51,000 --> 00:21:53,000
我在笑上海地铁

662
00:21:53,000 --> 00:21:54,000
他们公共标志的时候

663
00:21:54,000 --> 00:21:55,000
比较几号线

664
00:21:55,000 --> 00:21:56,000
获得几号线

665
00:21:56,000 --> 00:21:58,000
他们用的是反斜杠吗

666
00:21:58,000 --> 00:21:59,000
对

667
00:21:59,000 --> 00:22:00,000
上海的地铁

668
00:22:00,000 --> 00:22:01,000
比如说此处转

669
00:22:01,000 --> 00:22:02,000
2 号线或 3 号线

670
00:22:02,000 --> 00:22:04,000
2-3 的时候

671
00:22:04,000 --> 00:22:05,000
他用的是反斜杠

672
00:22:05,000 --> 00:22:06,000
就整个上海

673
00:22:06,000 --> 00:22:08,000
全上海的地铁线路

674
00:22:08,000 --> 00:22:09,000
他们的指示系统

675
00:22:09,000 --> 00:22:10,000
都是这么用的

676
00:22:10,000 --> 00:22:12,000
所以我那时候我就笑

677
00:22:12,000 --> 00:22:13,000
我那时候贴出去的时候

678
00:22:13,000 --> 00:22:15,000
我把这张照片给美国人看

679
00:22:15,000 --> 00:22:16,000
给日本人看

680
00:22:16,000 --> 00:22:17,000
然后我说

681
00:22:17,000 --> 00:22:19,000
这是我在现实生活中

682
00:22:19,000 --> 00:22:20,000
第一次看到反斜杠

683
00:22:20,000 --> 00:22:21,000
如此大量的使用

684
00:22:21,000 --> 00:22:23,000
然后日本人就笑得不行了

685
00:22:23,000 --> 00:22:26,000
这好像学武教的事情

686
00:22:26,000 --> 00:22:27,000
对

687
00:22:27,000 --> 00:22:28,000
他可能是个左撇了

688
00:22:28,000 --> 00:22:29,000
哈哈哈

689
00:22:29,000 --> 00:22:30,000
哈哈哈

690
00:22:30,000 --> 00:22:31,000
太奇怪了

691
00:22:31,000 --> 00:22:32,000
但中国的左撇

692
00:22:32,000 --> 00:22:33,000
好像小时候会很惨

693
00:22:33,000 --> 00:22:34,000
会逼着用右手写字

694
00:22:34,000 --> 00:22:35,000
会被作为另类的

695
00:22:35,000 --> 00:22:36,000
我就是这样形就这样

696
00:22:36,000 --> 00:22:37,000
前正韵是左撇子

697
00:22:37,000 --> 00:22:38,000
我应该是

698
00:22:38,000 --> 00:22:39,000
但是我很小就被

699
00:22:39,000 --> 00:22:41,000
很多的调整过

700
00:22:41,000 --> 00:22:42,000
所以你现在是

701
00:22:42,000 --> 00:22:43,000
所以我也搞不清楚

702
00:22:43,000 --> 00:22:44,000
究竟是左右都行

703
00:22:44,000 --> 00:22:45,000
还是纯左

704
00:22:45,000 --> 00:22:46,000
你现在是双球手

705
00:22:46,000 --> 00:22:47,000
是吧

706
00:22:47,000 --> 00:22:48,000
没有

707
00:22:48,000 --> 00:22:49,000
就是

708
00:22:49,000 --> 00:22:50,000
我现在是

709
00:22:50,000 --> 00:22:51,000
我现在是

710
00:22:51,000 --> 00:22:52,000
我现在是

711
00:22:52,000 --> 00:22:53,000
我现在是

712
00:22:53,000 --> 00:22:54,000
我现在是

713
00:22:54,000 --> 00:22:55,000
我现在是

714
00:22:55,000 --> 00:22:56,000
我现在是

715
00:22:56,000 --> 00:22:57,000
我现在是

716
00:22:57,000 --> 00:22:58,000
没有

717
00:22:58,000 --> 00:23:00,000
就右边稍微顺一点

718
00:23:00,000 --> 00:23:01,000
左边还是能干很多

719
00:23:01,000 --> 00:23:03,000
比较需要力量的事情

720
00:23:03,000 --> 00:23:05,000
哦你居然能训练成

721
00:23:05,000 --> 00:23:06,000
右手比左手的

722
00:23:06,000 --> 00:23:07,000
这个是

723
00:23:07,000 --> 00:23:09,000
天呐

724
00:23:09,000 --> 00:23:11,000
这不是压抑人性吗

725
00:23:11,000 --> 00:23:12,000
哈哈哈哈

726
00:23:12,000 --> 00:23:13,000
好吧

727
00:23:13,000 --> 00:23:14,000
哈哈哈

728
00:23:14,000 --> 00:23:15,000
还刚才说的

729
00:23:15,000 --> 00:23:16,000
说到左右的

730
00:23:16,000 --> 00:23:17,000
键位的问题

731
00:23:17,000 --> 00:23:18,000
像韩文

732
00:23:18,000 --> 00:23:19,000
韩语他们的

733
00:23:19,000 --> 00:23:21,000
在分配键位的时候

734
00:23:21,000 --> 00:23:22,000
他们就是左右搭配的

735
00:23:22,000 --> 00:23:23,000
他们把

736
00:23:23,000 --> 00:23:24,000
他们把

737
00:23:24,000 --> 00:23:26,000
腐音全部分配在左手

738
00:23:26,000 --> 00:23:28,000
原因全部分配在右手

739
00:23:28,000 --> 00:23:29,000
所以在他们在

740
00:23:29,000 --> 00:23:30,000
打韩文音节的时候

741
00:23:30,000 --> 00:23:32,000
他就腐音原因互相搭配

742
00:23:32,000 --> 00:23:34,000
肯定是左右这样搭配的

743
00:23:34,000 --> 00:23:35,000
那不效率很高啊

744
00:23:35,000 --> 00:23:37,000
左右左左右左

745
00:23:37,000 --> 00:23:38,000
差不多

746
00:23:38,000 --> 00:23:39,000
对对

747
00:23:39,000 --> 00:23:41,000
所以其实这个键位

748
00:23:41,000 --> 00:23:42,000
硬射的时候

749
00:23:42,000 --> 00:23:43,000
是分配啊

750
00:23:43,000 --> 00:23:45,000
还是很需要一些技术的

751
00:23:45,000 --> 00:23:46,000
要不然的话

752
00:23:46,000 --> 00:23:47,000
到时候打字就很很痛苦

753
00:23:47,000 --> 00:23:48,000
中文那个

754
00:23:48,000 --> 00:23:49,000
无比分配的时候

755
00:23:49,000 --> 00:23:50,000
有什么讲究吗

756
00:23:50,000 --> 00:23:51,000
好像也忘了

757
00:23:51,000 --> 00:23:53,000
没有中文无比就是

758
00:23:53,000 --> 00:23:54,000
从那个

759
00:23:54,000 --> 00:23:55,000
一些字跟

760
00:23:55,000 --> 00:23:56,000
从 QWTY

761
00:23:56,000 --> 00:23:57,000
这么的分配来

762
00:23:57,000 --> 00:23:58,000
就没有什么

763
00:23:58,000 --> 00:24:00,000
讲究左右分布的

764
00:24:00,000 --> 00:24:01,000
这种问题

765
00:24:01,000 --> 00:24:02,000
没有他就直接

766
00:24:02,000 --> 00:24:04,000
好像还是有一些的

767
00:24:04,000 --> 00:24:05,000
确定吗

768
00:24:05,000 --> 00:24:06,000
我记得好像是中间区域

769
00:24:06,000 --> 00:24:07,000
是比较常用的

770
00:24:07,000 --> 00:24:08,000
一些偏旁

771
00:24:08,000 --> 00:24:09,000
就是还是你

772
00:24:09,000 --> 00:24:10,000
你那个 HomeRow

773
00:24:10,000 --> 00:24:12,000
最近的是最高频的吧

774
00:24:13,000 --> 00:24:14,000
对对对

775
00:24:14,000 --> 00:24:15,000
然后还有一个

776
00:24:15,000 --> 00:24:16,000
通配服是 Z 的

777
00:24:16,000 --> 00:24:17,000
是吧

778
00:24:17,000 --> 00:24:18,000
对对对

779
00:24:18,000 --> 00:24:19,000
Z 的什么都没有吗

780
00:24:19,000 --> 00:24:20,000
有个通配服吗

781
00:24:20,000 --> 00:24:21,000
没错

782
00:24:21,000 --> 00:24:22,000
行

783
00:24:22,000 --> 00:24:23,000
咱们是不是要整理一下

784
00:24:23,000 --> 00:24:24,000
我们要从键盘

785
00:24:24,000 --> 00:24:25,000
然后键位

786
00:24:25,000 --> 00:24:27,000
然后这个键位的印射

787
00:24:27,000 --> 00:24:29,000
这三个不同的东西

788
00:24:29,000 --> 00:24:30,000
大家都应该在

789
00:24:30,000 --> 00:24:31,000
先整理清楚才对

790
00:24:31,000 --> 00:24:32,000
OK

791
00:24:32,000 --> 00:24:34,000
首先键位

792
00:24:34,000 --> 00:24:36,000
先说布局吧

793
00:24:36,000 --> 00:24:37,000
就是键盘

794
00:24:37,000 --> 00:24:38,000
我们接受的键盘

795
00:24:38,000 --> 00:24:39,000
有实体布局

796
00:24:39,000 --> 00:24:40,000
就是

797
00:24:40,000 --> 00:24:41,000
所谓实体布局就是

798
00:24:41,000 --> 00:24:42,000
你看到了这个键

799
00:24:42,000 --> 00:24:44,000
上面印着什么样的字母

800
00:24:44,000 --> 00:24:45,000
以及这个键

801
00:24:45,000 --> 00:24:46,000
每个键的位置

802
00:24:46,000 --> 00:24:47,000
和形状是什么样的

803
00:24:47,000 --> 00:24:49,000
这个基本上是

804
00:24:50,000 --> 00:24:51,000
各个国家民族

805
00:24:51,000 --> 00:24:52,000
文化传统的一部分

806
00:24:52,000 --> 00:24:53,000
就是他们

807
00:24:53,000 --> 00:24:55,000
西方国家出现打字机的时候

808
00:24:55,000 --> 00:24:56,000
每个国家的

809
00:24:56,000 --> 00:24:58,000
打字机的键位都是不一样的

810
00:24:58,000 --> 00:24:59,000
然后这个传统基本上

811
00:24:59,000 --> 00:25:00,000
就延续到了

812
00:25:00,000 --> 00:25:01,000
电脑时代

813
00:25:01,000 --> 00:25:02,000
当然有些国家

814
00:25:02,000 --> 00:25:03,000
因此就被坑了

815
00:25:03,000 --> 00:25:04,000
比如说

816
00:25:04,000 --> 00:25:06,000
我记得好像是

817
00:25:07,000 --> 00:25:08,000
波兰的键盘

818
00:25:08,000 --> 00:25:09,000
分为两种

819
00:25:09,000 --> 00:25:10,000
一种是

820
00:25:11,000 --> 00:25:12,000
对

821
00:25:12,000 --> 00:25:13,000
一种是

822
00:25:13,000 --> 00:25:14,000
北美传过来的

823
00:25:14,000 --> 00:25:16,000
IBM 肩神机时代的键盘

824
00:25:16,000 --> 00:25:17,000
另一种是他们自己的

825
00:25:17,000 --> 00:25:18,000
波兰与键盘

826
00:25:18,000 --> 00:25:20,000
然后波兰就非常非常地坑堤

827
00:25:20,000 --> 00:25:22,000
所有的程序员都选择了

828
00:25:22,000 --> 00:25:23,000
使用

829
00:25:24,000 --> 00:25:25,000
英语布局的键盘

830
00:25:26,000 --> 00:25:27,000
然后

831
00:25:29,000 --> 00:25:30,000
除了实体布局之外

832
00:25:30,000 --> 00:25:31,000
还有所谓的功能布局

833
00:25:31,000 --> 00:25:32,000
functional layouts

834
00:25:32,000 --> 00:25:34,000
然后这一层布局是

835
00:25:34,000 --> 00:25:35,000
大分时候

836
00:25:35,000 --> 00:25:36,000
对于大分人

837
00:25:36,000 --> 00:25:37,000
对这个世界上

838
00:25:37,000 --> 00:25:38,000
反正是 99 的人来说

839
00:25:38,000 --> 00:25:39,000
如果你不是程序员

840
00:25:39,000 --> 00:25:40,000
然后你也对

841
00:25:41,000 --> 00:25:42,000
英语键盘没有

842
00:25:42,000 --> 00:25:43,000
特别的偏爱的话

843
00:25:43,000 --> 00:25:44,000
基本上

844
00:25:45,000 --> 00:25:46,000
功能布局就是你的实体布局

845
00:25:46,000 --> 00:25:49,000
就是你按下键盘上

846
00:25:49,000 --> 00:25:50,000
键盘上写了

847
00:25:51,000 --> 00:25:52,000
反斜杠键

848
00:25:52,000 --> 00:25:53,000
可能在你屏幕上

849
00:25:53,000 --> 00:25:54,000
就应该出现反斜杠

850
00:25:54,000 --> 00:25:55,000
但是

851
00:25:55,000 --> 00:25:56,000
就是对等的

852
00:25:56,000 --> 00:25:57,000
对

853
00:25:57,000 --> 00:25:58,000
但是在

854
00:25:58,000 --> 00:25:59,000
其实在几乎每个操作系统里面

855
00:26:00,000 --> 00:26:02,000
它都支持把你的

856
00:26:02,000 --> 00:26:03,000
实体布局

857
00:26:03,000 --> 00:26:04,000
应受到另外一个

858
00:26:04,000 --> 00:26:05,000
别的功能布局

859
00:26:05,000 --> 00:26:06,000
也就是你

860
00:26:07,000 --> 00:26:08,000
对于中文用户来说

861
00:26:08,000 --> 00:26:10,000
就是你在中英书法

862
00:26:10,000 --> 00:26:12,000
英文书法人切换的时候

863
00:26:12,000 --> 00:26:13,000
其实

864
00:26:13,000 --> 00:26:14,000
理论上是切换了一个

865
00:26:14,000 --> 00:26:15,000
功能布局的

866
00:26:15,000 --> 00:26:17,000
只不过对于拼书布法来说

867
00:26:17,000 --> 00:26:18,000
除了功能布局之外

868
00:26:18,000 --> 00:26:19,000
上来还有一层书书法

869
00:26:20,000 --> 00:26:21,000
然后

870
00:26:21,000 --> 00:26:23,000
但是对于其他语言的人来说

871
00:26:23,000 --> 00:26:24,000
比如说

872
00:26:24,000 --> 00:26:25,000
当我在一个德语键盘上

873
00:26:25,000 --> 00:26:26,000
变成的时候

874
00:26:27,000 --> 00:26:28,000
如果我觉得

875
00:26:29,000 --> 00:26:30,000
布局实在是太坑爹了

876
00:26:30,000 --> 00:26:31,000
那我可以选择说

877
00:26:31,000 --> 00:26:32,000
让操作系统

878
00:26:32,000 --> 00:26:34,000
把功能布局设定为英文

879
00:26:34,000 --> 00:26:35,000
这样当我在

880
00:26:35,000 --> 00:26:37,000
比如说德语的那个

881
00:26:37,000 --> 00:26:38,000
就是

882
00:26:38,000 --> 00:26:39,000
偶像加两点

883
00:26:39,000 --> 00:26:40,000
这个键的时候

884
00:26:40,000 --> 00:26:42,000
它会变成分号

885
00:26:43,000 --> 00:26:44,000
这个会

886
00:26:44,000 --> 00:26:45,000
省一部分式

887
00:26:45,000 --> 00:26:47,000
但是有些键的位置

888
00:26:47,000 --> 00:26:48,000
还是不一样

889
00:26:48,000 --> 00:26:49,000
比如说那个反斜杠

890
00:26:49,000 --> 00:26:50,000
在英文布局上

891
00:26:50,000 --> 00:26:51,000
应该是在

892
00:26:51,000 --> 00:26:52,000
Enter 键的上面

893
00:26:52,000 --> 00:26:53,000
但是在德语键盘上

894
00:26:53,000 --> 00:26:54,000
反斜杠还是在

895
00:26:54,000 --> 00:26:56,000
左边的 shift 的右边

896
00:26:56,000 --> 00:26:57,000
就是

897
00:26:58,000 --> 00:26:59,000
你可以改功能布局

898
00:26:59,000 --> 00:27:00,000
但是

899
00:27:00,000 --> 00:27:01,000
实体布局还是会限制

900
00:27:01,000 --> 00:27:02,000
这个功能布局

901
00:27:02,000 --> 00:27:05,000
到底能改成一个什么情况

902
00:27:06,000 --> 00:27:07,000
因为实体布局和你的物理

903
00:27:07,000 --> 00:27:08,000
上面你看到的

904
00:27:08,000 --> 00:27:09,000
键帽上面

905
00:27:09,000 --> 00:27:10,000
印的那个字是一样的

906
00:27:10,000 --> 00:27:11,000
所以你倒还好一点

907
00:27:11,000 --> 00:27:12,000
但是

908
00:27:12,000 --> 00:27:14,000
当你改完功能布局的时候

909
00:27:14,000 --> 00:27:15,000
就是你实际上

910
00:27:15,000 --> 00:27:16,000
印的那个字

911
00:27:16,000 --> 00:27:18,000
实际上印的那个键

912
00:27:18,000 --> 00:27:19,000
和键帽上面那个字

913
00:27:19,000 --> 00:27:20,000
是不一样的

914
00:27:20,000 --> 00:27:21,000
因为你功能布局

915
00:27:21,000 --> 00:27:22,000
改掉了嘛

916
00:27:22,000 --> 00:27:23,000
所以我突然理解

917
00:27:23,000 --> 00:27:24,000
一件事

918
00:27:24,000 --> 00:27:25,000
那个 HCKB

919
00:27:25,000 --> 00:27:26,000
从日本出来

920
00:27:26,000 --> 00:27:27,000
是有道理的

921
00:27:29,000 --> 00:27:31,000
无可逆键盘其实在

922
00:27:32,000 --> 00:27:33,000
HCKB 之前就有

923
00:27:33,000 --> 00:27:36,000
但那个好像也是一个

924
00:27:38,000 --> 00:27:40,000
应该也是个安死的键盘

925
00:27:40,000 --> 00:27:41,000
对

926
00:27:41,000 --> 00:27:42,000
但 HCKB 的确是

927
00:27:42,000 --> 00:27:43,000
无可逆键盘里面

928
00:27:43,000 --> 00:27:45,000
最知名的一个

929
00:27:46,000 --> 00:27:47,000
对你那款是无可逆的吧

930
00:27:47,000 --> 00:27:48,000
无它

931
00:27:48,000 --> 00:27:49,000
那哪呢

932
00:27:49,000 --> 00:27:50,000
就我这样

933
00:27:50,000 --> 00:27:51,000
我就不用发愁

934
00:27:51,000 --> 00:27:52,000
我到底是德语

935
00:27:52,000 --> 00:27:53,000
还是英语

936
00:27:55,000 --> 00:27:56,000
就说

937
00:27:56,000 --> 00:27:57,000
键帽上没有课字之后嘛

938
00:27:57,000 --> 00:28:00,000
就你就可以随意的去调整你的

939
00:28:00,000 --> 00:28:01,000
那个键位印设

940
00:28:01,000 --> 00:28:02,000
这样你就不

941
00:28:02,000 --> 00:28:04,000
就是你可以忽略掉

942
00:28:04,000 --> 00:28:05,000
这个

943
00:28:05,000 --> 00:28:06,000
什么实体键位和

944
00:28:06,000 --> 00:28:07,000
那个系统里面

945
00:28:07,000 --> 00:28:09,000
键位的那个差异了嘛

946
00:28:10,000 --> 00:28:11,000
但换句话说

947
00:28:11,000 --> 00:28:12,000
做一个强迫症

948
00:28:12,000 --> 00:28:13,000
你会活得稍微舒服一点

949
00:28:13,000 --> 00:28:15,000
因为我打的差一个

950
00:28:15,000 --> 00:28:16,000
你可以把他的键帽拔下来

951
00:28:16,000 --> 00:28:18,000
交换一下位置

952
00:28:19,000 --> 00:28:20,000
我就这么干的

953
00:28:20,000 --> 00:28:21,000
他变不出来

954
00:28:21,000 --> 00:28:23,000
我再用一款带刻印的 HCKB

955
00:28:23,000 --> 00:28:25,000
我把那个 ESC 键盒

956
00:28:25,000 --> 00:28:26,000
最右边的那个

957
00:28:26,000 --> 00:28:27,000
那个叫什么键

958
00:28:27,000 --> 00:28:28,000
那个一个点

959
00:28:28,000 --> 00:28:29,000
Bacted

960
00:28:29,000 --> 00:28:30,000
对

961
00:28:30,000 --> 00:28:32,000
就把那两个位置换一下

962
00:28:34,000 --> 00:28:35,000
这纯手工

963
00:28:37,000 --> 00:28:38,000
我不知道你们实际上

964
00:28:38,000 --> 00:28:39,000
实际有没有遇到过

965
00:28:39,000 --> 00:28:41,000
就不用这个 QWERTY 布局的

966
00:28:41,000 --> 00:28:44,000
用过什么德沃夏克那个布局的那个

967
00:28:45,000 --> 00:28:46,000
我没有

968
00:28:46,000 --> 00:28:47,000
我有一个

969
00:28:47,000 --> 00:28:48,000
我的同事在

970
00:28:48,000 --> 00:28:50,000
或者说我在直属

971
00:28:50,000 --> 00:28:52,000
team leader 在用德沃夏克

972
00:28:55,000 --> 00:28:56,000
我觉得他们就是特别

973
00:28:56,000 --> 00:28:57,000
特别惨

974
00:28:57,000 --> 00:28:58,000
会吗

975
00:28:58,000 --> 00:28:59,000
就是每次

976
00:28:59,000 --> 00:29:01,000
他自己用他自己设备的话好玩

977
00:29:01,000 --> 00:29:02,000
他要用别人设备

978
00:29:02,000 --> 00:29:03,000
他每次都得换

979
00:29:03,000 --> 00:29:04,000
还是干什么

980
00:29:04,000 --> 00:29:05,000
他还是得强迫的去

981
00:29:05,000 --> 00:29:06,000
因为这个世界上

982
00:29:06,000 --> 00:29:07,000
Bitching QWERTY 比较多嘛

983
00:29:08,000 --> 00:29:09,000
我觉得德沃夏克

984
00:29:09,000 --> 00:29:10,000
并没有快到哪儿去

985
00:29:10,000 --> 00:29:11,000
说什么

986
00:29:11,000 --> 00:29:12,000
但

987
00:29:12,000 --> 00:29:13,000
我觉得也是

988
00:29:13,000 --> 00:29:14,000
习惯问题

989
00:29:14,000 --> 00:29:15,000
估计是

990
00:29:15,000 --> 00:29:16,000
如果说

991
00:29:16,000 --> 00:29:18,000
我们认同那个说

992
00:29:18,000 --> 00:29:20,000
高评件要离 Home

993
00:29:20,000 --> 00:29:21,000
肉比较近的话

994
00:29:21,000 --> 00:29:22,000
其实应该

995
00:29:22,000 --> 00:29:24,000
就是德沃夏克他的一个逻辑

996
00:29:24,000 --> 00:29:25,000
就是这样

997
00:29:25,000 --> 00:29:26,000
他的高评件比较好

998
00:29:26,000 --> 00:29:28,000
就是他分布

999
00:29:28,000 --> 00:29:29,000
从那个

1000
00:29:29,000 --> 00:29:30,000
统计概念上来讲

1001
00:29:30,000 --> 00:29:31,000
比较高评

1002
00:29:31,000 --> 00:29:33,000
即正在那个 Home 路附近

1003
00:29:34,000 --> 00:29:35,000
然后

1004
00:29:35,000 --> 00:29:38,000
高评件是跟语言相关的

1005
00:29:38,000 --> 00:29:39,000
没错

1006
00:29:39,000 --> 00:29:40,000
跟语言相关

1007
00:29:40,000 --> 00:29:42,000
和你的这个打的文本相关的

1008
00:29:42,000 --> 00:29:43,000
所以理论上

1009
00:29:43,000 --> 00:29:44,000
应该是这么一个

1010
00:29:44,000 --> 00:29:45,000
无刻印的键盘

1011
00:29:45,000 --> 00:29:46,000
然后分析你

1012
00:29:46,000 --> 00:29:47,000
打过的所有的那个

1013
00:29:47,000 --> 00:29:48,000
就是

1014
00:29:48,000 --> 00:29:49,000
基建历史

1015
00:29:49,000 --> 00:29:50,000
然后重新统计一下

1016
00:29:50,000 --> 00:29:51,000
这个频率

1017
00:29:51,000 --> 00:29:52,000
然后再来排一个

1018
00:29:52,000 --> 00:29:54,000
适合你的这个 layout

1019
00:29:55,000 --> 00:29:56,000
你的

1020
00:29:56,000 --> 00:29:57,000
你的专属 layout

1021
00:29:57,000 --> 00:29:58,000
从你的专属

1022
00:29:58,000 --> 00:29:59,000
从你的专属

1023
00:29:59,000 --> 00:30:00,000
自己到你的专属输入法

1024
00:30:00,000 --> 00:30:01,000
然后现在

1025
00:30:01,000 --> 00:30:03,000
就是每个人都有自己的

1026
00:30:03,000 --> 00:30:04,000
键位

1027
00:30:04,000 --> 00:30:05,000
这个就傻掉了

1028
00:30:05,000 --> 00:30:06,000
没法投入

1029
00:30:09,000 --> 00:30:10,000
如果大家对这个

1030
00:30:10,000 --> 00:30:13,000
功能布局是不大熟悉的话

1031
00:30:13,000 --> 00:30:14,000
如果大家可以

1032
00:30:14,000 --> 00:30:16,000
其实到操作系统上看一下

1033
00:30:16,000 --> 00:30:18,000
在键盘的那个属性上面

1034
00:30:18,000 --> 00:30:19,000
它有各种文字

1035
00:30:19,000 --> 00:30:21,000
然后它有各种各样的那个

1036
00:30:22,000 --> 00:30:23,000
可能如果不注意

1037
00:30:23,000 --> 00:30:24,000
这个功能的朋友

1038
00:30:24,000 --> 00:30:25,000
他们从来就没有

1039
00:30:25,000 --> 00:30:26,000
见过其他布局

1040
00:30:26,000 --> 00:30:27,000
所以呢

1041
00:30:27,000 --> 00:30:28,000
去看一下那个

1042
00:30:28,000 --> 00:30:29,000
那个设置下就可以知道

1043
00:30:29,000 --> 00:30:30,000
非常有意思

1044
00:30:30,000 --> 00:30:31,000
文有有吗

1045
00:30:31,000 --> 00:30:32,000
都有

1046
00:30:32,000 --> 00:30:33,000
也有

1047
00:30:33,000 --> 00:30:34,000
有的

1048
00:30:34,000 --> 00:30:35,000
反正你在

1049
00:30:35,000 --> 00:30:37,000
如果你在 OS 10 里面那个

1050
00:30:37,000 --> 00:30:39,000
改变那个数物园的名称的时候

1051
00:30:39,000 --> 00:30:41,000
它会给你一个

1052
00:30:41,000 --> 00:30:42,000
那个这个数物园

1053
00:30:42,000 --> 00:30:43,000
看起来键盘的布局

1054
00:30:43,000 --> 00:30:44,000
大概是什么样子

1055
00:30:45,000 --> 00:30:46,000
对

1056
00:30:46,000 --> 00:30:47,000
它直接会把那个

1057
00:30:47,000 --> 00:30:48,000
那个键盘的

1058
00:30:48,000 --> 00:30:49,000
显示出来对吧

1059
00:30:49,000 --> 00:30:50,000
连那个键位都会显示出来

1060
00:30:50,000 --> 00:30:52,000
它好像 Windows 有吗

1061
00:30:52,000 --> 00:30:54,000
Windows 在那个数物房里面

1062
00:30:54,000 --> 00:30:55,000
可以调

1063
00:30:55,000 --> 00:30:57,000
这是挺麻烦的

1064
00:30:57,000 --> 00:30:58,000
但是它会不会显示这个键位

1065
00:30:58,000 --> 00:31:00,000
好像没有键位预览吧

1066
00:31:00,000 --> 00:31:02,000
这个这个也没有了

1067
00:31:02,000 --> 00:31:03,000
键位预览

1068
00:31:03,000 --> 00:31:04,000
应该是只限于

1069
00:31:04,000 --> 00:31:06,000
系统自带的那些数物

1070
00:31:06,000 --> 00:31:07,000
不是

1071
00:31:07,000 --> 00:31:08,000
就是在 OS 10

1072
00:31:08,000 --> 00:31:10,000
首先你得先合你的

1073
00:31:10,000 --> 00:31:12,000
键盘的那个形状

1074
00:31:12,000 --> 00:31:13,000
要保持一致嘛

1075
00:31:13,000 --> 00:31:14,000
Windows 那么多

1076
00:31:14,000 --> 00:31:15,000
奇形卦转的键盘

1077
00:31:15,000 --> 00:31:17,000
它可能没法做浴览吧

1078
00:31:18,000 --> 00:31:19,000
好吧

1079
00:31:19,000 --> 00:31:20,000
原来是坑在这

1080
00:31:20,000 --> 00:31:21,000
你看那个

1081
00:31:21,000 --> 00:31:23,000
OS 10 里面的那个键位浴览

1082
00:31:23,000 --> 00:31:24,000
它其实画的是一个标准的

1083
00:31:24,000 --> 00:31:25,000
这个

1084
00:31:25,000 --> 00:31:27,000
就麦克兰压键盘的那种

1085
00:31:27,000 --> 00:31:28,000
那种结构吗

1086
00:31:29,000 --> 00:31:31,000
就以你现在使用的那个

1087
00:31:31,000 --> 00:31:32,000
这个

1088
00:31:32,000 --> 00:31:33,000
我现在是用 MacBook 嘛

1089
00:31:33,000 --> 00:31:34,000
MacBook Pro 嘛

1090
00:31:34,000 --> 00:31:36,000
我现在的这个键位

1091
00:31:36,000 --> 00:31:37,000
为基础的印射

1092
00:31:37,000 --> 00:31:38,000
诶

1093
00:31:38,000 --> 00:31:39,000
无讨你要可能看一下

1094
00:31:39,000 --> 00:31:40,000
你看一下你

1095
00:31:40,000 --> 00:31:41,000
你是买了一块那个

1096
00:31:41,000 --> 00:31:42,000
叫什么最新的那个

1097
00:31:42,000 --> 00:31:44,000
蓝牙键盘是不是

1098
00:31:44,000 --> 00:31:45,000
我买了这个键盘

1099
00:31:45,000 --> 00:31:46,000
是英语布局

1100
00:31:46,000 --> 00:31:47,000
不是

1101
00:31:47,000 --> 00:31:48,000
但是就是是最新的

1102
00:31:48,000 --> 00:31:49,000
不是那个插电池的

1103
00:31:49,000 --> 00:31:51,000
是自带电池的那个是吧

1104
00:31:51,000 --> 00:31:52,000
对没错

1105
00:31:52,000 --> 00:31:53,000
然后你看一下那个

1106
00:31:53,000 --> 00:31:54,000
键盘

1107
00:31:54,000 --> 00:31:55,000
键盘里面它的那个方向键

1108
00:31:55,000 --> 00:31:56,000
是什么形式

1109
00:31:56,000 --> 00:31:57,000
倒 T 自行吗

1110
00:31:57,000 --> 00:31:58,000
还是怎么样

1111
00:31:58,000 --> 00:31:59,000
啊没错

1112
00:31:59,000 --> 00:32:01,000
是两个被缩小的键

1113
00:32:01,000 --> 00:32:02,000
所以它其实是使用

1114
00:32:02,000 --> 00:32:03,000
我当前那个键盘

1115
00:32:03,000 --> 00:32:04,000
的确

1116
00:32:04,000 --> 00:32:05,000
嗯 OK

1117
00:32:05,000 --> 00:32:06,000
然后就

1118
00:32:06,000 --> 00:32:07,000
它只要是自己

1119
00:32:07,000 --> 00:32:08,000
自己的东西的话都是

1120
00:32:08,000 --> 00:32:09,000
那样的

1121
00:32:09,000 --> 00:32:10,000
没错

1122
00:32:10,000 --> 00:32:11,000
哎等一下

1123
00:32:11,000 --> 00:32:12,000
好像有个不一样

1124
00:32:12,000 --> 00:32:13,000
现在最新的那个自带电池的

1125
00:32:13,000 --> 00:32:14,000
就是内置电池的那个

1126
00:32:14,000 --> 00:32:16,000
苹果蓝牙键盘的那个

1127
00:32:16,000 --> 00:32:19,000
方向键的左右是全高的了

1128
00:32:19,000 --> 00:32:20,000
不是半高的了

1129
00:32:20,000 --> 00:32:21,000
是全高的

1130
00:32:21,000 --> 00:32:22,000
是全高的

1131
00:32:22,000 --> 00:32:23,000
我的这个键盘

1132
00:32:23,000 --> 00:32:24,000
搜索图上看到的也是全高的

1133
00:32:24,000 --> 00:32:25,000
对那我看到的

1134
00:32:25,000 --> 00:32:26,000
我也我是那个

1135
00:32:26,000 --> 00:32:27,000
是上一代的吗

1136
00:32:27,000 --> 00:32:29,000
我看是半高的左右键

1137
00:32:29,000 --> 00:32:30,000
就是它很多的

1138
00:32:30,000 --> 00:32:33,000
就是跟当前设备的样子

1139
00:32:33,000 --> 00:32:34,000
画出来了

1140
00:32:34,000 --> 00:32:35,000
我又发现那个细节

1141
00:32:35,000 --> 00:32:36,000
这个可以给国粉

1142
00:32:36,000 --> 00:32:38,000
国粉们去吹一下

1143
00:32:38,000 --> 00:32:39,000
可以发给那个什么

1144
00:32:39,000 --> 00:32:40,000
你说

1145
00:32:40,000 --> 00:32:42,000
Tiny little detail 什么

1146
00:32:42,000 --> 00:32:44,000
那个网站叫什么来的

1147
00:32:44,000 --> 00:32:45,000
不知道

1148
00:32:45,000 --> 00:32:46,000
有一个网站

1149
00:32:46,000 --> 00:32:47,000
专门去搜集在这种

1150
00:32:47,000 --> 00:32:49,000
设计上的那种小心思

1151
00:32:49,000 --> 00:32:52,000
OK

1152
00:32:52,000 --> 00:32:54,000
所以就是苹果它能做预览

1153
00:32:54,000 --> 00:32:55,000
就是因为它知道

1154
00:32:55,000 --> 00:32:56,000
你接过的是哪个设备

1155
00:32:56,000 --> 00:32:57,000
然后它知道那个

1156
00:32:57,000 --> 00:32:59,000
设备的这个键位的

1157
00:32:59,000 --> 00:33:00,000
实际的布局

1158
00:33:00,000 --> 00:33:01,000
然后再给你叠上去

1159
00:33:01,000 --> 00:33:03,000
你会觉得没有什么意外吗

1160
00:33:03,000 --> 00:33:05,000
所以这个时候

1161
00:33:05,000 --> 00:33:06,000
我想起那些

1162
00:33:06,000 --> 00:33:07,000
现在不是有一些游戏键盘

1163
00:33:07,000 --> 00:33:08,000
上面它是那个

1164
00:33:08,000 --> 00:33:09,000
那个键帽

1165
00:33:09,000 --> 00:33:10,000
它没有刻字

1166
00:33:10,000 --> 00:33:11,000
它是一个

1167
00:33:11,000 --> 00:33:12,000
它是一个小的 LED 屏幕

1168
00:33:12,000 --> 00:33:16,000
之前叫什么

1169
00:33:16,000 --> 00:33:18,000
叫一个很刚才上的名字

1170
00:33:18,000 --> 00:33:21,000
prime optimus 之类的一个

1171
00:33:21,000 --> 00:33:23,000
它等于是每个按键的

1172
00:33:23,000 --> 00:33:24,000
就是一个小屏幕

1173
00:33:24,000 --> 00:33:25,000
它可以

1174
00:33:25,000 --> 00:33:26,000
你可以根据编程的方式

1175
00:33:26,000 --> 00:33:27,000
改变它上面显示的内容

1176
00:33:27,000 --> 00:33:29,000
这样就解决了刻印

1177
00:33:29,000 --> 00:33:30,000
没法变换

1178
00:33:30,000 --> 00:33:31,000
但是没有刻印

1179
00:33:31,000 --> 00:33:32,000
有时候又看一看

1180
00:33:32,000 --> 00:33:34,000
不方便的难停

1181
00:33:34,000 --> 00:33:35,000
对而且那个键盘是彩色的

1182
00:33:35,000 --> 00:33:37,000
然后可以

1183
00:33:37,000 --> 00:33:39,000
比如说你在用 file shop 的时候

1184
00:33:39,000 --> 00:33:40,000
直接在那个键上

1185
00:33:40,000 --> 00:33:42,000
显示对应于 file shop 的

1186
00:33:42,000 --> 00:33:43,000
功能

1187
00:33:43,000 --> 00:33:44,000
对对对没错

1188
00:33:44,000 --> 00:33:45,000
或者是一个

1189
00:33:45,000 --> 00:33:46,000
缩略图之类的

1190
00:33:46,000 --> 00:33:47,000
挺帅气的

1191
00:33:47,000 --> 00:33:48,000
对

1192
00:33:48,000 --> 00:33:49,000
但后来我进那个键盘

1193
00:33:49,000 --> 00:33:50,000
只是量产的

1194
00:33:50,000 --> 00:33:52,000
即是限量版的

1195
00:33:52,000 --> 00:33:54,000
就大概出了一千两千富这样

1196
00:33:54,000 --> 00:33:55,000
太贵了吧

1197
00:33:55,000 --> 00:33:56,000
因为每个键盘

1198
00:33:56,000 --> 00:33:57,000
都要做一个小屏幕

1199
00:33:57,000 --> 00:33:59,000
每个按键都走小屏幕

1200
00:33:59,000 --> 00:34:00,000
其实挺麻烦的

1201
00:34:00,000 --> 00:34:01,000
对

1202
00:34:01,000 --> 00:34:03,000
我觉得我们有点

1203
00:34:03,000 --> 00:34:04,000
朝着一个键盘恐慌的

1204
00:34:04,000 --> 00:34:08,000
这个是一个文字书的基础

1205
00:34:08,000 --> 00:34:09,000
刚才说了一些

1206
00:34:09,000 --> 00:34:10,000
我们都是讲的

1207
00:34:10,000 --> 00:34:11,000
实际的键盘怎么样

1208
00:34:11,000 --> 00:34:12,000
你们就想过

1209
00:34:12,000 --> 00:34:13,000
在那个现在触屏上

1210
00:34:13,000 --> 00:34:14,000
那个软键盘

1211
00:34:14,000 --> 00:34:15,000
是不是就没有这个问题了

1212
00:34:15,000 --> 00:34:16,000
对

1213
00:34:16,000 --> 00:34:17,000
其实对

1214
00:34:17,000 --> 00:34:18,000
软键盘其实要比

1215
00:34:18,000 --> 00:34:20,000
实际键盘简单很多

1216
00:34:20,000 --> 00:34:21,000
它只是一个

1217
00:34:22,000 --> 00:34:24,000
在或者在实现原理上

1218
00:34:24,000 --> 00:34:25,000
要简单很多

1219
00:34:25,000 --> 00:34:26,000
它不需要

1220
00:34:26,000 --> 00:34:27,000
它不存在键盘的什么

1221
00:34:27,000 --> 00:34:28,000
叫做扫描码

1222
00:34:28,000 --> 00:34:29,000
是不是

1223
00:34:29,000 --> 00:34:31,000
我一直没有理解这个概念

1224
00:34:31,000 --> 00:34:32,000
到底怎么一回事

1225
00:34:32,000 --> 00:34:33,000
对了

1226
00:34:33,000 --> 00:34:34,000
你们把扫描码

1227
00:34:34,000 --> 00:34:36,000
这个东西跟大家解释解释

1228
00:34:36,000 --> 00:34:37,000
好吧

1229
00:34:37,000 --> 00:34:39,000
其实键盘本身是一个非常复杂的

1230
00:34:39,000 --> 00:34:40,000
数膜转换系统

1231
00:34:40,000 --> 00:34:44,000
就是你把魔术转换系统

1232
00:34:44,000 --> 00:34:45,000
应该叫的

1233
00:34:45,000 --> 00:34:47,000
其实每个键盘都是一台

1234
00:34:47,000 --> 00:34:48,000
非常小的这段期

1235
00:34:48,000 --> 00:34:50,000
因为每个键盘在

1236
00:34:50,000 --> 00:34:52,000
尤其是 USB 键盘

1237
00:34:52,000 --> 00:34:54,000
在这个按下键之后

1238
00:34:54,000 --> 00:34:56,000
会有需要一个芯片

1239
00:34:56,000 --> 00:34:57,000
把按下的键的

1240
00:34:57,000 --> 00:35:00,000
电讯号转化成

1241
00:35:00,000 --> 00:35:02,000
进行性能懂的一个码

1242
00:35:02,000 --> 00:35:03,000
然后这个码就叫扫描码

1243
00:35:03,000 --> 00:35:04,000
它为什么叫扫描码

1244
00:35:04,000 --> 00:35:05,000
就是因为

1245
00:35:05,000 --> 00:35:07,000
在键盘里面的这一颗芯片

1246
00:35:07,000 --> 00:35:09,000
它所做的事情就是

1247
00:35:09,000 --> 00:35:11,000
去扫描一个

1248
00:35:14,000 --> 00:35:16,000
扫成多少的网格

1249
00:35:16,000 --> 00:35:17,000
然后

1250
00:35:18,000 --> 00:35:19,000
所谓扫描的

1251
00:35:19,000 --> 00:35:20,000
它的确就是网格吧

1252
00:35:20,000 --> 00:35:22,000
横纵多少列的对吧

1253
00:35:22,000 --> 00:35:23,000
就是那个网格

1254
00:35:23,000 --> 00:35:24,000
对我忘了 GT 的数字

1255
00:35:24,000 --> 00:35:25,000
但是基本上就是

1256
00:35:25,000 --> 00:35:26,000
基本上就是

1257
00:35:26,000 --> 00:35:28,000
先看第一排

1258
00:35:28,000 --> 00:35:29,000
然后第一排

1259
00:35:29,000 --> 00:35:30,000
把每列扫一遍

1260
00:35:30,000 --> 00:35:31,000
然后看第二排

1261
00:35:31,000 --> 00:35:33,000
再把每列扫一遍

1262
00:35:33,000 --> 00:35:34,000
然后这个扫描的速度

1263
00:35:34,000 --> 00:35:35,000
非常快的

1264
00:35:35,000 --> 00:35:36,000
像电视一样

1265
00:35:36,000 --> 00:35:37,000
你在

1266
00:35:37,000 --> 00:35:38,000
你以为自己

1267
00:35:38,000 --> 00:35:39,000
同时按下了两个键

1268
00:35:39,000 --> 00:35:41,000
然后 GT 上也说

1269
00:35:41,000 --> 00:35:42,000
好吧

1270
00:35:42,000 --> 00:35:43,000
你同时按下了两个键

1271
00:35:43,000 --> 00:35:44,000
但实际上这个过程是

1272
00:35:44,000 --> 00:35:46,000
它先看第一排的

1273
00:35:47,000 --> 00:35:48,000
第六列

1274
00:35:48,000 --> 00:35:49,000
然后被按下了

1275
00:35:49,000 --> 00:35:50,000
然后它扫描到

1276
00:35:50,000 --> 00:35:52,000
第二排的第七列

1277
00:35:52,000 --> 00:35:53,000
发现也被按下了

1278
00:35:53,000 --> 00:35:54,000
然后它会说好

1279
00:35:54,000 --> 00:35:56,000
这个用户同时按了两个键

1280
00:35:56,000 --> 00:35:57,000
那实际上这一切

1281
00:35:57,000 --> 00:35:58,000
都是顺序发生的

1282
00:35:58,000 --> 00:35:59,000
然后这个过程

1283
00:35:59,000 --> 00:36:00,000
就叫做扫描

1284
00:36:00,000 --> 00:36:03,000
然后这个过程扫下来的一个位置

1285
00:36:03,000 --> 00:36:04,000
会被转化成一个

1286
00:36:04,000 --> 00:36:06,000
操作系统可以懂

1287
00:36:06,000 --> 00:36:07,000
不是操作系统可以懂

1288
00:36:08,000 --> 00:36:10,000
主板可以懂的电信号

1289
00:36:10,000 --> 00:36:11,000
然后这个

1290
00:36:11,000 --> 00:36:13,000
电信号本身都扫描

1291
00:36:14,000 --> 00:36:15,000
而且很关键就是在这个

1292
00:36:15,000 --> 00:36:17,000
在这个步骤的时候

1293
00:36:17,000 --> 00:36:18,000
还不知道是什么字

1294
00:36:18,000 --> 00:36:20,000
只是这个位置的

1295
00:36:20,000 --> 00:36:22,000
那个点正位置的

1296
00:36:22,000 --> 00:36:23,000
那个键被按下去

1297
00:36:23,000 --> 00:36:24,000
这个信号被传过去了

1298
00:36:24,000 --> 00:36:25,000
对吧

1299
00:36:25,000 --> 00:36:27,000
然后是由计算机

1300
00:36:27,000 --> 00:36:28,000
操作系统来决定

1301
00:36:28,000 --> 00:36:29,000
按下去的这个

1302
00:36:30,000 --> 00:36:32,000
这个码到底代表什么字符

1303
00:36:32,000 --> 00:36:34,000
这已经是一层印设

1304
00:36:34,000 --> 00:36:37,000
对于直达车键盘来说

1305
00:36:37,000 --> 00:36:39,000
这是有一个标准的

1306
00:36:39,000 --> 00:36:40,000
尤其是在 PS 2 实感

1307
00:36:40,000 --> 00:36:43,000
就是我们的年龄小的听众

1308
00:36:43,000 --> 00:36:45,000
可能没有见过 PS 2 是怎么样的

1309
00:36:47,000 --> 00:36:48,000
PS 2 是一个

1310
00:36:48,000 --> 00:36:49,000
看起来很奇怪的接口

1311
00:36:49,000 --> 00:36:50,000
然后这个接口

1312
00:36:50,000 --> 00:36:51,000
有意

1313
00:36:51,000 --> 00:36:52,000
我当时应该是支持

1314
00:36:52,000 --> 00:36:54,000
三套不同的扫描码吧

1315
00:36:54,000 --> 00:36:56,000
就是根据这个主板和

1316
00:36:56,000 --> 00:36:57,000
操作系统要求

1317
00:36:58,000 --> 00:37:01,000
他可以送三种不同的扫描码

1318
00:37:01,000 --> 00:37:03,000
但是基本上后来就

1319
00:37:03,000 --> 00:37:04,000
归一成一种了

1320
00:37:04,000 --> 00:37:06,000
然后在这个扫描码里面

1321
00:37:06,000 --> 00:37:07,000
我记得

1322
00:37:07,000 --> 00:37:08,000
之前不是有什么

1323
00:37:08,000 --> 00:37:10,000
Ctrl 改

1324
00:37:10,000 --> 00:37:11,000
Caps Lock

1325
00:37:11,000 --> 00:37:12,000
你要把 Caps Lock

1326
00:37:12,000 --> 00:37:13,000
改成 Ctrl 键的话

1327
00:37:13,000 --> 00:37:14,000
你要去

1328
00:37:15,000 --> 00:37:16,000
在操作系统层面

1329
00:37:16,000 --> 00:37:17,000
尤其是在 Windows 里面

1330
00:37:17,000 --> 00:37:19,000
你要把两个扫描码兑换

1331
00:37:19,000 --> 00:37:20,000
比如说 3 A 代表

1332
00:37:20,000 --> 00:37:21,000
Ctrl

1333
00:37:21,000 --> 00:37:22,000
EB

1334
00:37:23,000 --> 00:37:24,000
这都是 16 金值的数字

1335
00:37:24,000 --> 00:37:26,000
代表 Caps Lock

1336
00:37:26,000 --> 00:37:28,000
然后你把这两个扫描码

1337
00:37:28,000 --> 00:37:29,000
换一下

1338
00:37:29,000 --> 00:37:30,000
你就会发现

1339
00:37:30,000 --> 00:37:31,000
你按下去的 Caps Lock

1340
00:37:31,000 --> 00:37:32,000
变成了 Ctrl

1341
00:37:32,000 --> 00:37:33,000
其实就是这么来的

1342
00:37:34,000 --> 00:37:36,000
但是后来到了 USB 时代

1343
00:37:38,000 --> 00:37:39,000
举大部分的 USB 键盘

1344
00:37:39,000 --> 00:37:41,000
都支持所谓

1345
00:37:41,000 --> 00:37:44,000
Human Interface Device Protocol

1346
00:37:44,000 --> 00:37:45,000
然后在这个 Project 里面

1347
00:37:45,000 --> 00:37:46,000
就规定了说

1348
00:37:47,000 --> 00:37:48,000
在 USB 上传来一个

1349
00:37:48,000 --> 00:37:49,000
什么样的信号

1350
00:37:49,000 --> 00:37:52,000
对应于一个什么样的按键

1351
00:37:52,000 --> 00:37:53,000
或者对应于一个

1352
00:37:53,000 --> 00:37:54,000
什么样的扫描码

1353
00:37:55,000 --> 00:37:57,000
这套扫描码跟 PS 2 时代

1354
00:37:57,000 --> 00:37:58,000
是不兼容的

1355
00:37:59,000 --> 00:38:01,000
但是蓝牙键盘则直接就是

1356
00:38:01,000 --> 00:38:04,000
把 USB 的这一套 HID 的编码

1357
00:38:06,000 --> 00:38:07,000
套用过去了

1358
00:38:07,000 --> 00:38:08,000
所以在某种程度上

1359
00:38:08,000 --> 00:38:09,000
你的蓝牙键盘

1360
00:38:09,000 --> 00:38:11,000
其实是一个 USB 键盘

1361
00:38:11,000 --> 00:38:13,000
就是在解码这一块

1362
00:38:13,000 --> 00:38:14,000
是完全按照一个 USB 的

1363
00:38:15,000 --> 00:38:17,000
Human Interface Device 来解码

1364
00:38:17,000 --> 00:38:19,000
大概就是扫描码的概念

1365
00:38:19,000 --> 00:38:22,000
所以它的码位

1366
00:38:22,000 --> 00:38:25,000
最后就是传到主板以后

1367
00:38:25,000 --> 00:38:27,000
然后再根据刚才说的键盘

1368
00:38:28,000 --> 00:38:29,000
就是那个 Mapping

1369
00:38:29,000 --> 00:38:31,000
然后再来让操作系统

1370
00:38:31,000 --> 00:38:33,000
知道它打下去是什么字

1371
00:38:33,000 --> 00:38:35,000
对 其实操作系统决定说

1372
00:38:35,000 --> 00:38:36,000
你按了这个键

1373
00:38:36,000 --> 00:38:38,000
对应了一个什么样的制服

1374
00:38:38,000 --> 00:38:40,000
对 有操作系统来定

1375
00:38:43,000 --> 00:38:45,000
好了 我们终于可以把

1376
00:38:45,000 --> 00:38:47,000
这个信息传到操作系统

1377
00:38:47,000 --> 00:38:48,000
那操作系统

1378
00:38:48,000 --> 00:38:49,000
接下来做什么事情

1379
00:38:51,000 --> 00:38:53,000
操作系统接下来要做的一件

1380
00:38:53,000 --> 00:38:55,000
事情实际上是

1381
00:38:56,000 --> 00:38:58,000
跟键盘扫描码

1382
00:38:58,000 --> 00:39:01,000
没有太多的关联

1383
00:39:01,000 --> 00:39:02,000
我应该这么说吧

1384
00:39:02,000 --> 00:39:03,000
就

1385
00:39:05,000 --> 00:39:07,000
我们刚才介绍了说

1386
00:39:07,000 --> 00:39:09,000
从键盘传一个字符

1387
00:39:09,000 --> 00:39:10,000
到操作系统

1388
00:39:10,000 --> 00:39:11,000
然后现在操作系统

1389
00:39:11,000 --> 00:39:12,000
其实面临一个问题

1390
00:39:12,000 --> 00:39:13,000
就是操作系统有万个字符

1391
00:39:13,000 --> 00:39:14,000
显示出来

1392
00:39:14,000 --> 00:39:17,000
或者说要把它存在内存里面

1393
00:39:17,000 --> 00:39:20,000
这又涉及到了另外一套

1394
00:39:20,000 --> 00:39:21,000
编码的问题

1395
00:39:21,000 --> 00:39:24,000
就是你以一个什么样的规则

1396
00:39:24,000 --> 00:39:28,000
来告诉一块内存里面的区域

1397
00:39:28,000 --> 00:39:31,000
或者是一个硬盘上的一个小区域

1398
00:39:31,000 --> 00:39:34,000
说我要把这个 A 存下来

1399
00:39:34,000 --> 00:39:36,000
这个时候其实是

1400
00:39:36,000 --> 00:39:37,000
涉及到文字编码

1401
00:39:37,000 --> 00:39:39,000
但是文字编码跟键盘扫描码

1402
00:39:39,000 --> 00:39:41,000
其实完全不相干

1403
00:39:41,000 --> 00:39:43,000
键盘扫描码就专门

1404
00:39:43,000 --> 00:39:44,000
就是为了键盘

1405
00:39:44,000 --> 00:39:46,000
键盘扫描码是为了

1406
00:39:46,000 --> 00:39:50,000
计算机知道用户按下了什么字符

1407
00:39:50,000 --> 00:39:53,000
但是接下来讨论的这个文念编码

1408
00:39:53,000 --> 00:39:56,000
就是要让计算机

1409
00:39:56,000 --> 00:40:01,000
决定在存出某一个字符的时候

1410
00:40:01,000 --> 00:40:05,000
应该把它存成什么样的形式

1411
00:40:05,000 --> 00:40:07,000
或者说用哪个数字来代表

1412
00:40:07,000 --> 00:40:11,000
然后在早期也是有很多种字符存在

1413
00:40:11,000 --> 00:40:12,000
比如说

1414
00:40:12,000 --> 00:40:14,000
IBM 有种自己的字符

1415
00:40:14,000 --> 00:40:17,000
自己的字符编码

1416
00:40:17,000 --> 00:40:18,000
叫什么

1417
00:40:18,000 --> 00:40:20,000
Q 什么编码

1418
00:40:20,000 --> 00:40:22,000
但是基本上

1419
00:40:22,000 --> 00:40:25,000
现在最通用的一个或者最基本的一个编码

1420
00:40:25,000 --> 00:40:28,000
就叫 ASCII 编码

1421
00:40:28,000 --> 00:40:30,000
我相信可能很多朋友在

1422
00:40:30,000 --> 00:40:32,000
上线上线上线的一个字符

1423
00:40:32,000 --> 00:40:34,000
就是用一个字符

1424
00:40:34,000 --> 00:40:37,000
我相信可能很多朋友在学编场的时候

1425
00:40:37,000 --> 00:40:39,000
都背过这个码表

1426
00:40:39,000 --> 00:40:40,000
包括我也背过

1427
00:40:40,000 --> 00:40:42,000
但是我现在已经忘光了

1428
00:40:42,000 --> 00:40:44,000
97 是什么

1429
00:40:44,000 --> 00:40:47,000
97 好耳熟啊

1430
00:40:47,000 --> 00:40:49,000
97 是这么 B 吧

1431
00:40:49,000 --> 00:40:50,000
是吗

1432
00:40:50,000 --> 00:40:51,000
不是 A 吗

1433
00:40:51,000 --> 00:40:53,000
97 是 A 吗

1434
00:40:53,000 --> 00:40:56,000
但是也是背了好几个字符

1435
00:40:56,000 --> 00:40:57,000
最长字的

1436
00:40:57,000 --> 00:40:59,000
我只记得 65 岁

1437
00:40:59,000 --> 00:41:01,000
但是 65 加

1438
00:41:01,000 --> 00:41:02,000
大小写

1439
00:41:03,000 --> 00:41:04,000
大小写吗

1440
00:41:04,000 --> 00:41:05,000
对 65 是大写的 A

1441
00:41:05,000 --> 00:41:06,000
但是

1442
00:41:06,000 --> 00:41:09,000
97-65 好像不是

1443
00:41:09,000 --> 00:41:10,000
对对对

1444
00:41:10,000 --> 00:41:11,000
大写和小写之间

1445
00:41:11,000 --> 00:41:13,000
还有一堆特殊符号

1446
00:41:13,000 --> 00:41:14,000
有

1447
00:41:14,000 --> 00:41:15,000
所以不一样

1448
00:41:15,000 --> 00:41:16,000
97-65 是 32

1449
00:41:16,000 --> 00:41:18,000
所以那应该的确是小写的

1450
00:41:18,000 --> 00:41:21,000
因为 ASCII 的码

1451
00:41:21,000 --> 00:41:23,000
ASCII 表其实是挺巧妙的

1452
00:41:23,000 --> 00:41:24,000
就是

1453
00:41:24,000 --> 00:41:26,000
如果你遇到一个键盘

1454
00:41:26,000 --> 00:41:27,000
如果遇到一个码的话

1455
00:41:27,000 --> 00:41:28,000
你把这个第五位

1456
00:41:28,000 --> 00:41:29,000
如果是零

1457
00:41:29,000 --> 00:41:31,000
你把它变成一

1458
00:41:31,000 --> 00:41:34,000
就可以让它变成小写字母

1459
00:41:34,000 --> 00:41:37,000
在当初的这个

1460
00:41:37,000 --> 00:41:40,000
很多人还在操作比特时代的时候

1461
00:41:40,000 --> 00:41:42,000
这是一个非常重要的 feature

1462
00:41:42,000 --> 00:41:44,000
没错

1463
00:41:44,000 --> 00:41:48,000
所以 10-97 是那个 ASCII 的小写字母 A

1464
00:41:48,000 --> 00:41:49,000
没错我查了

1465
00:41:49,000 --> 00:41:50,000
没错

1466
00:41:50,000 --> 00:41:53,000
还好我说对了

1467
00:41:53,000 --> 00:41:55,000
好紧张

1468
00:41:55,000 --> 00:41:56,000
好紧张

1469
00:41:56,000 --> 00:41:58,000
你们紧张什么

1470
00:41:58,000 --> 00:42:00,000
这已经

1471
00:42:00,000 --> 00:42:03,000
其实技巧里面有非常多这种

1472
00:42:03,000 --> 00:42:04,000
呃

1473
00:42:04,000 --> 00:42:05,000
背下来很屌

1474
00:42:05,000 --> 00:42:08,000
但是好像平时没有什么用什么知识

1475
00:42:08,000 --> 00:42:10,000
没有什么暖用

1476
00:42:10,000 --> 00:42:11,000
还是有点用的

1477
00:42:11,000 --> 00:42:13,000
你看那个

1478
00:42:13,000 --> 00:42:15,000
你现在做很多这种

1479
00:42:15,000 --> 00:42:17,000
网络协议的解析的时候

1480
00:42:17,000 --> 00:42:19,000
你看到那个

1481
00:42:19,000 --> 00:42:22,000
16-20 x 的方式表达的

1482
00:42:22,000 --> 00:42:23,000
数据包的时候

1483
00:42:23,000 --> 00:42:24,000
你看到

1484
00:42:24,000 --> 00:42:25,000
97

1485
00:42:25,000 --> 00:42:26,000
马上要出那个

1486
00:42:26,000 --> 00:42:27,000
你就知道

1487
00:42:27,000 --> 00:42:29,000
后面可能是一个 printable character

1488
00:42:29,000 --> 00:42:31,000
就是有东西要写出来了

1489
00:42:31,000 --> 00:42:33,000
97 是 10 进去

1490
00:42:33,000 --> 00:42:36,000
你要先把 16 进去背起来才行

1491
00:42:36,000 --> 00:42:37,000
对呀对呀对呀

1492
00:42:37,000 --> 00:42:38,000
对呀对呀

1493
00:42:38,000 --> 00:42:40,000
16 进去是 6-1

1494
00:42:40,000 --> 00:42:43,000
哈哈哈哈

1495
00:42:43,000 --> 00:42:44,000
好了

1496
00:42:44,000 --> 00:42:46,000
我们不要这么怕的靠谎了

1497
00:42:46,000 --> 00:42:48,000
嗯

1498
00:42:48,000 --> 00:42:49,000
好

1499
00:42:49,000 --> 00:42:50,000
但 ASCII 当然也其他

1500
00:42:50,000 --> 00:42:51,000
肉眼解析了吗

1501
00:42:51,000 --> 00:42:53,000
有一个这个 8 位和 7 位的问题

1502
00:42:53,000 --> 00:42:57,000
就是我们一个 byte 是 256 个

1503
00:42:57,000 --> 00:42:58,000
可能性嘛

1504
00:42:58,000 --> 00:43:00,000
就 8 位的 byte

1505
00:43:00,000 --> 00:43:02,000
但 ASCII 只用了其中的

1506
00:43:02,000 --> 00:43:03,000
7 个位

1507
00:43:03,000 --> 00:43:06,000
顶上那个高位其实还有点讲究的

1508
00:43:06,000 --> 00:43:07,000
对

1509
00:43:07,000 --> 00:43:10,000
就因为还多说来这一位

1510
00:43:10,000 --> 00:43:12,000
这一位最开始是为了扩展

1511
00:43:12,000 --> 00:43:13,000
准备的吧

1512
00:43:13,000 --> 00:43:14,000
对

1513
00:43:14,000 --> 00:43:15,000
嗯

1514
00:43:15,000 --> 00:43:17,000
就很多拉丁文字都可以

1515
00:43:17,000 --> 00:43:20,000
通过这一位的方法来把他们的一些

1516
00:43:20,000 --> 00:43:22,000
就是自补表的

1517
00:43:22,000 --> 00:43:23,000
大部分表达出来

1518
00:43:23,000 --> 00:43:26,000
比如德文就是这样的方式来实现的对吧

1519
00:43:26,000 --> 00:43:28,000
对有一个其实西欧所有的语言都可以用

1520
00:43:28,000 --> 00:43:29,000
这种方式来实现

1521
00:43:29,000 --> 00:43:30,000
就加他

1522
00:43:30,000 --> 00:43:33,000
就加他自补机叫做拉丁一扩展

1523
00:43:33,000 --> 00:43:34,000
对

1524
00:43:34,000 --> 00:43:35,000
嗯

1525
00:43:35,000 --> 00:43:36,000
加不超过

1526
00:43:36,000 --> 00:43:38,000
西欧的语言都

1527
00:43:38,000 --> 00:43:39,000
他有

1528
00:43:39,000 --> 00:43:40,000
所以他的原理就是

1529
00:43:40,000 --> 00:43:42,000
就是那位是控制的吧

1530
00:43:42,000 --> 00:43:44,000
如果认为控制的就是普通就

1531
00:43:44,000 --> 00:43:46,000
落回到就是普通的 ASCII

1532
00:43:46,000 --> 00:43:48,000
这个原来的一个码标嘛

1533
00:43:48,000 --> 00:43:49,000
对吧

1534
00:43:49,000 --> 00:43:51,000
然后那位控上去以后

1535
00:43:51,000 --> 00:43:53,000
然后就可以扩展成其他各种

1536
00:43:53,000 --> 00:43:56,000
那当年是各个国家还不一样嘛

1537
00:43:56,000 --> 00:43:57,000
所以各种各样

1538
00:43:57,000 --> 00:43:58,000
刚才也说了嘛

1539
00:43:58,000 --> 00:44:00,000
所以日本的话他就是把这个

1540
00:44:00,000 --> 00:44:03,000
扩展为他当年的半角片假名

1541
00:44:04,000 --> 00:44:05,000
对

1542
00:44:05,000 --> 00:44:06,000
片

1543
00:44:06,000 --> 00:44:07,000
只有片假名

1544
00:44:07,000 --> 00:44:09,000
这只有片假名

1545
00:44:09,000 --> 00:44:12,000
因为他只多出来 128 个位置嘛

1546
00:44:12,000 --> 00:44:14,000
你也放不了多少自服进去

1547
00:44:16,000 --> 00:44:17,000
嗯

1548
00:44:17,000 --> 00:44:18,000
好吧

1549
00:44:18,000 --> 00:44:20,000
但是好算 50 英图

1550
00:44:20,000 --> 00:44:22,000
片假名全假名

1551
00:44:22,000 --> 00:44:23,000
片假名

1552
00:44:23,000 --> 00:44:25,000
评价我可以扎进去

1553
00:44:25,000 --> 00:44:26,000
嗯

1554
00:44:26,000 --> 00:44:27,000
嗯

1555
00:44:29,000 --> 00:44:30,000
所以那个

1556
00:44:30,000 --> 00:44:31,000
因为片假名

1557
00:44:31,000 --> 00:44:33,000
应该没有什么半角的需求吧

1558
00:44:33,000 --> 00:44:34,000
可能

1559
00:44:34,000 --> 00:44:35,000
是吧

1560
00:44:35,000 --> 00:44:37,000
在实验中应该

1561
00:44:37,000 --> 00:44:39,000
经常用这个标准半角

1562
00:44:39,000 --> 00:44:42,000
显示的只有片假名会比较多一点

1563
00:44:42,000 --> 00:44:44,000
我觉得可能也是因为那个时候

1564
00:44:44,000 --> 00:44:46,000
只用外来语

1565
00:44:46,000 --> 00:44:49,000
写的情况也比较多

1566
00:44:49,000 --> 00:44:51,000
就是当年就比

1567
00:44:51,000 --> 00:44:53,000
像写电报的时候

1568
00:44:53,000 --> 00:44:54,000
写电报的时候

1569
00:44:54,000 --> 00:44:55,000
日文传统的电报

1570
00:44:55,000 --> 00:44:56,000
就全是用片假名的

1571
00:44:56,000 --> 00:44:57,000
然后

1572
00:44:57,000 --> 00:44:58,000
比如说他有着音点嘛

1573
00:44:58,000 --> 00:45:00,000
卡加个着音点就变成嘎嘛

1574
00:45:00,000 --> 00:45:01,000
着音点呢

1575
00:45:01,000 --> 00:45:02,000
他就是

1576
00:45:02,000 --> 00:45:03,000
着音点是另外一个

1577
00:45:03,000 --> 00:45:05,000
另外一个自服

1578
00:45:05,000 --> 00:45:07,000
所以他是两个字就变成

1579
00:45:07,000 --> 00:45:08,000
OK

1580
00:45:08,000 --> 00:45:09,000
所以这里有一个问题

1581
00:45:09,000 --> 00:45:11,000
就是像日文这种情况比较

1582
00:45:11,000 --> 00:45:12,000
比较特殊吧

1583
00:45:12,000 --> 00:45:13,000
就是他同样一个

1584
00:45:13,000 --> 00:45:15,000
意思他可以用几套不同的方式

1585
00:45:15,000 --> 00:45:17,000
来表达对吧

1586
00:45:17,000 --> 00:45:18,000
嗯

1587
00:45:18,000 --> 00:45:20,000
就是比如说他有各种

1588
00:45:20,000 --> 00:45:22,000
不同的用汉字写的话

1589
00:45:22,000 --> 00:45:24,000
也可以用什么各种假名的方式来写

1590
00:45:24,000 --> 00:45:26,000
天皇照书不是只用片假名写吗

1591
00:45:26,000 --> 00:45:29,000
天皇照书没有

1592
00:45:29,000 --> 00:45:32,000
就是当时就是用汉文

1593
00:45:32,000 --> 00:45:33,000
汉字

1594
00:45:33,000 --> 00:45:36,000
日本汉字加片假名

1595
00:45:36,000 --> 00:45:37,000
这样写

1596
00:45:37,000 --> 00:45:38,000
OK

1597
00:45:38,000 --> 00:45:39,000
所以最开始

1598
00:45:39,000 --> 00:45:40,000
电脑或者说

1599
00:45:40,000 --> 00:45:42,000
打字机传入日本的时候

1600
00:45:42,000 --> 00:45:43,000
因为汉字那些

1601
00:45:43,000 --> 00:45:44,000
毕竟表达起来没有那么方便

1602
00:45:44,000 --> 00:45:46,000
他们就说选择更加

1603
00:45:46,000 --> 00:45:47,000
容易表达的这种

1604
00:45:47,000 --> 00:45:49,000
假名的方式来写

1605
00:45:50,000 --> 00:45:52,000
因为假名是那表英文字

1606
00:45:52,000 --> 00:45:53,000
对

1607
00:45:53,000 --> 00:45:55,000
所以在最早就是有电报的时候

1608
00:45:55,000 --> 00:45:56,000
还之类的

1609
00:45:56,000 --> 00:45:57,000
至少要先把声音传过去

1610
00:45:57,000 --> 00:45:59,000
就内容要传过去

1611
00:45:59,000 --> 00:46:01,000
那正确的表计法

1612
00:46:01,000 --> 00:46:03,000
那是其字的问题

1613
00:46:03,000 --> 00:46:05,000
所以他们就先把

1614
00:46:05,000 --> 00:46:06,000
假名给放上去

1615
00:46:06,000 --> 00:46:07,000
OK

1616
00:46:07,000 --> 00:46:08,000
那有一个问题是这样

1617
00:46:08,000 --> 00:46:09,000
就是说如果说

1618
00:46:09,000 --> 00:46:11,000
假设日文所有的日本汉字

1619
00:46:11,000 --> 00:46:13,000
都可以用假名的方式来写

1620
00:46:13,000 --> 00:46:14,000
那还有什么必要

1621
00:46:14,000 --> 00:46:15,000
再接着写那些

1622
00:46:15,000 --> 00:46:17,000
更复杂的方式呢

1623
00:46:17,000 --> 00:46:18,000
嗯

1624
00:46:18,000 --> 00:46:20,000
这个好像用拼音写中文

1625
00:46:20,000 --> 00:46:21,000
有奇异的

1626
00:46:21,000 --> 00:46:22,000
就很难读

1627
00:46:22,000 --> 00:46:23,000
就很难读

1628
00:46:23,000 --> 00:46:24,000
有时候会有奇异

1629
00:46:24,000 --> 00:46:25,000
OK 明白明白

1630
00:46:27,000 --> 00:46:28,000
但是问题

1631
00:46:28,000 --> 00:46:29,000
主要是

1632
00:46:29,000 --> 00:46:30,000
日文这个问题是

1633
00:46:30,000 --> 00:46:32,000
汉字一开始就是一个外来语

1634
00:46:32,000 --> 00:46:33,000
对于日本人来说

1635
00:46:33,000 --> 00:46:35,000
他就在

1636
00:46:35,000 --> 00:46:37,000
没有假名的时代

1637
00:46:37,000 --> 00:46:38,000
或者是假名这个词怎么来了

1638
00:46:38,000 --> 00:46:40,000
就是因为日本人用汉字

1639
00:46:40,000 --> 00:46:42,000
来代表他们固有语言的读音

1640
00:46:42,000 --> 00:46:43,000
那所以反过来

1641
00:46:43,000 --> 00:46:44,000
你可以说

1642
00:46:44,000 --> 00:46:46,000
如果当初没有中国的话

1643
00:46:46,000 --> 00:46:48,000
那日本也可能

1644
00:46:48,000 --> 00:46:50,000
今天是在用拉丁字母来表现

1645
00:46:50,000 --> 00:46:51,000
其固有语言的读音

1646
00:46:51,000 --> 00:46:52,000
或者像韩语那样

1647
00:46:52,000 --> 00:46:53,000
对

1648
00:46:53,000 --> 00:46:54,000
说不是必须的

1649
00:46:54,000 --> 00:46:55,000
明白明白

1650
00:46:55,000 --> 00:46:56,000
对

1651
00:46:56,000 --> 00:46:58,000
但韩语走的是另外一条路

1652
00:46:58,000 --> 00:46:59,000
韩语是

1653
00:46:59,000 --> 00:47:00,000
自己翻造了一套

1654
00:47:00,000 --> 00:47:01,000
对

1655
00:47:01,000 --> 00:47:02,000
是名正音来

1656
00:47:02,000 --> 00:47:03,000
来

1657
00:47:03,000 --> 00:47:05,000
来去表

1658
00:47:05,000 --> 00:47:07,000
表达其固有语言的

1659
00:47:07,000 --> 00:47:08,000
读音

1660
00:47:08,000 --> 00:47:09,000
但问题

1661
00:47:09,000 --> 00:47:10,000
韩语和日语最大问题就是

1662
00:47:10,000 --> 00:47:12,000
他们有太多中文借词了

1663
00:47:12,000 --> 00:47:14,000
然后这个中文借词

1664
00:47:14,000 --> 00:47:16,000
可能是没有固有读音的

1665
00:47:16,000 --> 00:47:18,000
就没有训读的

1666
00:47:18,000 --> 00:47:20,000
但你全靠音读的话

1667
00:47:20,000 --> 00:47:22,000
就有可能产生没有汉字

1668
00:47:22,000 --> 00:47:24,000
就一定会产生奇异的问题

1669
00:47:24,000 --> 00:47:25,000
对

1670
00:47:25,000 --> 00:47:28,000
这个借是借东西的借

1671
00:47:28,000 --> 00:47:30,000
不是那个 proposition

1672
00:47:30,000 --> 00:47:32,000
那个借词

1673
00:47:32,000 --> 00:47:34,000
是假借的借

1674
00:47:34,000 --> 00:47:35,000
而且

1675
00:47:35,000 --> 00:47:36,000
就

1676
00:47:36,000 --> 00:47:37,000
日文的它的那个

1677
00:47:37,000 --> 00:47:38,000
原因太简单了

1678
00:47:38,000 --> 00:47:39,000
因为有这五个原因

1679
00:47:39,000 --> 00:47:40,000
所以

1680
00:47:40,000 --> 00:47:41,000
它的音系越简单

1681
00:47:41,000 --> 00:47:43,000
它的同音词就越多

1682
00:47:43,000 --> 00:47:44,000
所以在日文里面

1683
00:47:44,000 --> 00:47:45,000
还多

1684
00:47:45,000 --> 00:47:47,000
所以他们没有办法

1685
00:47:47,000 --> 00:47:49,000
废除汉字

1686
00:47:49,000 --> 00:47:50,000
因为

1687
00:47:50,000 --> 00:47:51,000
同音词实在是太多了

1688
00:47:51,000 --> 00:47:53,000
韩文还稍微好一点点

1689
00:47:53,000 --> 00:47:54,000
所以现在

1690
00:47:54,000 --> 00:47:56,000
朝鲜和韩国

1691
00:47:56,000 --> 00:47:58,000
他们就尽量是不写汉字

1692
00:47:58,000 --> 00:48:00,000
虽然他们的词都是汉字词

1693
00:48:00,000 --> 00:48:02,000
但是他们可以尽量

1694
00:48:02,000 --> 00:48:03,000
不写汉字

1695
00:48:03,000 --> 00:48:05,000
只有在会发生奇异的时候

1696
00:48:05,000 --> 00:48:06,000
还有写人民地民的时候

1697
00:48:06,000 --> 00:48:07,000
他们会把那个

1698
00:48:07,000 --> 00:48:09,000
原来的那个汉字写出来

1699
00:48:09,000 --> 00:48:10,000
对

1700
00:48:10,000 --> 00:48:11,000
这就是为什么

1701
00:48:11,000 --> 00:48:12,000
很多韩国人的人民一开始

1702
00:48:12,000 --> 00:48:14,000
没出名之前和出名之后

1703
00:48:14,000 --> 00:48:15,000
不一样

1704
00:48:15,000 --> 00:48:16,000
就是因为出名之后

1705
00:48:16,000 --> 00:48:17,000
韩国人会站出来说

1706
00:48:17,000 --> 00:48:18,000
这个

1707
00:48:18,000 --> 00:48:19,000
这个人的名字其实

1708
00:48:19,000 --> 00:48:20,000
汉字写作什么什么

1709
00:48:20,000 --> 00:48:22,000
显得很有文化

1710
00:48:22,000 --> 00:48:24,000
还考了一下

1711
00:48:24,000 --> 00:48:26,000
日语好像也有这样的问题

1712
00:48:26,000 --> 00:48:28,000
就是有些人的名字

1713
00:48:28,000 --> 00:48:29,000
没有汉字

1714
00:48:29,000 --> 00:48:30,000
只有假名

1715
00:48:30,000 --> 00:48:31,000
以前有什么

1716
00:48:31,000 --> 00:48:32,000
对

1717
00:48:33,000 --> 00:48:35,000
则靠会理乡

1718
00:48:35,000 --> 00:48:36,000
对

1719
00:48:36,000 --> 00:48:37,000
就这么一个人

1720
00:48:37,000 --> 00:48:38,000
对

1721
00:48:38,000 --> 00:48:39,000
会理乡

1722
00:48:39,000 --> 00:48:40,000
对

1723
00:48:40,000 --> 00:48:41,000
则靠的姓比较有意思

1724
00:48:41,000 --> 00:48:43,000
但是他的姓其实是汉字

1725
00:48:43,000 --> 00:48:44,000
就是日语里面就写的

1726
00:48:44,000 --> 00:48:45,000
则靠两个字

1727
00:48:45,000 --> 00:48:46,000
然后会理乡是

1728
00:48:46,000 --> 00:48:47,000
他刚出名的时候

1729
00:48:47,000 --> 00:48:48,000
中国人给他翻的

1730
00:48:48,000 --> 00:48:50,000
后来他专门进入中文市场了

1731
00:48:50,000 --> 00:48:52,000
他的那个

1732
00:48:52,000 --> 00:48:54,000
经纪人才出来证明说

1733
00:48:54,000 --> 00:48:55,000
这个人的

1734
00:48:55,000 --> 00:48:56,000
这个日本的

1735
00:48:56,000 --> 00:48:59,000
汉字应该是个则靠英龙华

1736
00:49:01,000 --> 00:49:04,000
英龙华是他专门为中国市场

1737
00:49:04,000 --> 00:49:06,000
写的一个汉字

1738
00:49:06,000 --> 00:49:08,000
他之前的这个名只有假名

1739
00:49:08,000 --> 00:49:10,000
就只有英没有字吗

1740
00:49:10,000 --> 00:49:12,000
所以要用什么字吗

1741
00:49:14,000 --> 00:49:15,000
这个我们越测越远了

1742
00:49:15,000 --> 00:49:16,000
赶快收回来

1743
00:49:16,000 --> 00:49:17,000
我们刚才说的是

1744
00:49:17,000 --> 00:49:18,000
编码的问题

1745
00:49:18,000 --> 00:49:19,000
有同学们

1746
00:49:21,000 --> 00:49:22,000
所以的 ASCII 有一个码

1747
00:49:22,000 --> 00:49:23,000
上面有一个位

1748
00:49:23,000 --> 00:49:25,000
他是可以扩展的

1749
00:49:25,000 --> 00:49:26,000
说到这一点

1750
00:49:26,000 --> 00:49:27,000
对

1751
00:49:27,000 --> 00:49:28,000
为我继续

1752
00:49:28,000 --> 00:49:29,000
好

1753
00:49:31,000 --> 00:49:32,000
讲到哪里了

1754
00:49:34,000 --> 00:49:35,000
编码问题

1755
00:49:35,000 --> 00:49:36,000
刚才我们讲的 ASCII

1756
00:49:36,000 --> 00:49:37,000
然后和他讲的

1757
00:49:37,000 --> 00:49:38,000
扩展拉丁 1

1758
00:49:38,000 --> 00:49:40,000
就解决了一些

1759
00:49:40,000 --> 00:49:41,000
拉丁与系的国家的

1760
00:49:41,000 --> 00:49:42,000
常见的编码问题

1761
00:49:42,000 --> 00:49:43,000
但是遇到像

1762
00:49:43,000 --> 00:49:45,000
不管是中日韩

1763
00:49:45,000 --> 00:49:46,000
还有一些可能其他的

1764
00:49:46,000 --> 00:49:49,000
就大自服籍的这种

1765
00:49:49,000 --> 00:49:50,000
语言的时候

1766
00:49:50,000 --> 00:49:51,000
就搞不定了

1767
00:49:51,000 --> 00:49:53,000
所以在那个 UniCode

1768
00:49:53,000 --> 00:49:55,000
就上次你单独单独的时候

1769
00:49:55,000 --> 00:49:56,000
讲过那个事情

1770
00:49:56,000 --> 00:49:57,000
是出现之前

1771
00:49:57,000 --> 00:49:58,000
各个国家和地区

1772
00:49:58,000 --> 00:50:00,000
还是有自己不同的标准的

1773
00:50:00,000 --> 00:50:01,000
比如说

1774
00:50:01,000 --> 00:50:03,000
中国所谓的这个 GB 国标系

1775
00:50:03,000 --> 00:50:04,000
还有日本的 JS

1776
00:50:04,000 --> 00:50:05,000
多少我忘了

1777
00:50:06,000 --> 00:50:07,000
还有好像韩语

1778
00:50:07,000 --> 00:50:08,000
一个什么 Core 的什么

1779
00:50:08,000 --> 00:50:10,000
KOR 什么什么标准的

1780
00:50:10,000 --> 00:50:11,000
KS

1781
00:50:13,000 --> 00:50:14,000
这一套都是解决的

1782
00:50:14,000 --> 00:50:16,000
同样一个问题就是说

1783
00:50:18,000 --> 00:50:19,000
把一个国家的一些

1784
00:50:19,000 --> 00:50:21,000
他们比较标准的一套

1785
00:50:21,000 --> 00:50:22,000
自服籍

1786
00:50:22,000 --> 00:50:23,000
映射成为一个数字

1787
00:50:23,000 --> 00:50:24,000
然后再把这个数字

1788
00:50:24,000 --> 00:50:25,000
通过某一种方式

1789
00:50:25,000 --> 00:50:26,000
因为这个数字

1790
00:50:26,000 --> 00:50:27,000
抽象的一个数字

1791
00:50:27,000 --> 00:50:28,000
就是 123456

1792
00:50:28,000 --> 00:50:29,000
然后再把这个数字

1793
00:50:29,000 --> 00:50:30,000
编码成计算机

1794
00:50:30,000 --> 00:50:31,000
能够识别的一个

1795
00:50:31,000 --> 00:50:33,000
beat pattern

1796
00:50:33,000 --> 00:50:34,000
对吧

1797
00:50:34,000 --> 00:50:36,000
二斤制的一个表达

1798
00:50:38,000 --> 00:50:39,000
ok

1799
00:50:40,000 --> 00:50:41,000
所以这也是一个

1800
00:50:41,000 --> 00:50:42,000
编码的过程

1801
00:50:42,000 --> 00:50:43,000
没错

1802
00:50:43,000 --> 00:50:44,000
对吧

1803
00:50:44,000 --> 00:50:45,000
而且就是当年

1804
00:50:45,000 --> 00:50:46,000
当年就是各个国家

1805
00:50:46,000 --> 00:50:47,000
不一样

1806
00:50:47,000 --> 00:50:49,000
所以就编的号

1807
00:50:49,000 --> 00:50:50,000
都不一样

1808
00:50:50,000 --> 00:50:51,000
对啊

1809
00:50:51,000 --> 00:50:52,000
就当我们现在

1810
00:50:52,000 --> 00:50:53,000
现在在 Windows

1811
00:50:53,000 --> 00:50:54,000
还是有这个问题

1812
00:50:54,000 --> 00:50:55,000
大家经常说

1813
00:50:55,000 --> 00:50:56,000
那个你用 Mac 的话

1814
00:50:56,000 --> 00:50:57,000
Windows 上面

1815
00:50:57,000 --> 00:50:58,000
能传给你一个什么文本文件

1816
00:50:58,000 --> 00:50:59,000
打开怎么全是办法

1817
00:51:00,000 --> 00:51:01,000
就是因为

1818
00:51:01,000 --> 00:51:03,000
就是你用 Mac 内置的那个 ZIP

1819
00:51:03,000 --> 00:51:05,000
来解压一些

1820
00:51:07,000 --> 00:51:08,000
Windows 上面

1821
00:51:08,000 --> 00:51:09,000
压出来的 ZIP 的时候

1822
00:51:09,000 --> 00:51:10,000
你会发现解出来的都是我吧

1823
00:51:10,000 --> 00:51:11,000
对

1824
00:51:11,000 --> 00:51:13,000
就是因为他们在原始的时候

1825
00:51:13,000 --> 00:51:15,000
是可能是用的 GB

1826
00:51:15,000 --> 00:51:16,000
或者 GBK

1827
00:51:16,000 --> 00:51:17,000
GB 232

1828
00:51:17,000 --> 00:51:18,000
还有 GB 18030

1829
00:51:18,000 --> 00:51:20,000
这几个国标的方法

1830
00:51:20,000 --> 00:51:21,000
来变

1831
00:51:21,000 --> 00:51:22,000
还有就是像港台

1832
00:51:22,000 --> 00:51:23,000
台湾吧

1833
00:51:23,000 --> 00:51:24,000
台湾叫 Big Five 嘛

1834
00:51:25,000 --> 00:51:26,000
香港刚出用什么

1835
00:51:26,000 --> 00:51:27,000
我现在不记得

1836
00:51:27,000 --> 00:51:29,000
我记得那时候

1837
00:51:29,000 --> 00:51:30,000
就是为了看一些

1838
00:51:30,000 --> 00:51:32,000
繁体字的文本

1839
00:51:32,000 --> 00:51:34,000
好像要手动在网页上

1840
00:51:34,000 --> 00:51:35,000
选取编码时代

1841
00:51:37,000 --> 00:51:38,000
香港和台湾

1842
00:51:38,000 --> 00:51:40,000
用那个编码还不一样

1843
00:51:40,000 --> 00:51:41,000
台湾是 Big Five 吗

1844
00:51:41,000 --> 00:51:42,000
台湾肯定是

1845
00:51:42,000 --> 00:51:44,000
台湾肯定用 Big Five 嘛

1846
00:51:44,000 --> 00:51:45,000
香港用什么

1847
00:51:45,000 --> 00:51:46,000
大五码

1848
00:51:46,000 --> 00:51:47,000
大五码

1849
00:51:47,000 --> 00:51:48,000
看看香港在哪

1850
00:51:48,000 --> 00:51:50,000
然后我只记得香港

1851
00:51:50,000 --> 00:51:52,000
有个什么大五的

1852
00:51:52,000 --> 00:51:54,000
Hong Kong SCS

1853
00:51:54,000 --> 00:51:55,000
就是他们自己扩长

1854
00:51:55,000 --> 00:51:56,000
对

1855
00:51:56,000 --> 00:51:57,000
对

1856
00:51:57,000 --> 00:51:58,000
是叫了一个名字

1857
00:51:58,000 --> 00:52:00,000
SAS 是一个字符集

1858
00:52:00,000 --> 00:52:01,000
但是编码

1859
00:52:01,000 --> 00:52:03,000
应该还是用的 Big Five

1860
00:52:03,000 --> 00:52:04,000
对 没错

1861
00:52:04,000 --> 00:52:06,000
就是他在 Big Five 的基础上

1862
00:52:06,000 --> 00:52:07,000
然后就加了一些

1863
00:52:07,000 --> 00:52:08,000
他们就是香港的

1864
00:52:08,000 --> 00:52:09,000
一些

1865
00:52:09,000 --> 00:52:10,000
对 应该港澳台

1866
00:52:10,000 --> 00:52:11,000
基本都还

1867
00:52:11,000 --> 00:52:13,000
就是曾经都是用 Big Five

1868
00:52:13,000 --> 00:52:14,000
但是他们字符集

1869
00:52:14,000 --> 00:52:15,000
各自有一套

1870
00:52:15,000 --> 00:52:16,000
像

1871
00:52:16,000 --> 00:52:17,000
其实像那个澳门

1872
00:52:17,000 --> 00:52:18,000
也有自己的一个

1873
00:52:19,000 --> 00:52:20,000
MAC

1874
00:52:20,000 --> 00:52:21,000
MACAR

1875
00:52:21,000 --> 00:52:22,000
那个什么

1876
00:52:22,000 --> 00:52:24,000
Information System Character Set

1877
00:52:24,000 --> 00:52:27,000
这个是相当混乱的一个状态

1878
00:52:27,000 --> 00:52:28,000
然后

1879
00:52:28,000 --> 00:52:29,000
大陆刚刚也有讲

1880
00:52:29,000 --> 00:52:30,000
自己那套国标的体系

1881
00:52:30,000 --> 00:52:31,000
后来是有一个

1882
00:52:31,000 --> 00:52:32,000
所谓的 Unical

1883
00:52:32,000 --> 00:52:34,000
CJK 统一的一个过程

1884
00:52:34,000 --> 00:52:35,000
统一的过程嘛

1885
00:52:35,000 --> 00:52:36,000
对

1886
00:52:36,000 --> 00:52:37,000
就是他们 Hang Unification

1887
00:52:37,000 --> 00:52:38,000
对不对

1888
00:52:39,000 --> 00:52:40,000
这个

1889
00:52:40,000 --> 00:52:42,000
像比如说在那个 Gb

1890
00:52:42,000 --> 00:52:43,000
我们自己

1891
00:52:43,000 --> 00:52:44,000
国内是用 Gb 嘛

1892
00:52:44,000 --> 00:52:45,000
比如

1893
00:52:46,000 --> 00:52:47,000
当年我们是分

1894
00:52:47,000 --> 00:52:49,000
DDD 水准

1895
00:52:49,000 --> 00:52:50,000
常用的

1896
00:52:50,000 --> 00:52:51,000
D 一几汉子

1897
00:52:51,000 --> 00:52:52,000
D 一几汉子

1898
00:52:52,000 --> 00:52:53,000
一几汉子

1899
00:52:53,000 --> 00:52:54,000
一几汉子是三星楼

1900
00:52:54,000 --> 00:52:55,000
一几汉子用音

1901
00:52:55,000 --> 00:52:56,000
对用音讯牌的

1902
00:52:56,000 --> 00:52:57,000
二几汉子有那个

1903
00:52:57,000 --> 00:52:58,000
笔画

1904
00:52:58,000 --> 00:52:59,000
步手牌的嘛

1905
00:52:59,000 --> 00:53:00,000
对

1906
00:53:00,000 --> 00:53:02,000
所以肯定是从 R 字开始牌嘛

1907
00:53:02,000 --> 00:53:05,000
像 R 1 的 R 这个字在 Gb 里面

1908
00:53:05,000 --> 00:53:07,000
在 Gb 里面就是很前面嘛

1909
00:53:07,000 --> 00:53:09,000
就是汉字区位的最前面

1910
00:53:09,000 --> 00:53:10,000
对

1911
00:53:12,000 --> 00:53:14,000
但是什么 B 0 A 1 还是 A 2 嘛

1912
00:53:14,000 --> 00:53:16,000
就是从那个区位开始牌的

1913
00:53:16,000 --> 00:53:17,000
但是呢

1914
00:53:18,000 --> 00:53:19,000
是吧

1915
00:53:19,000 --> 00:53:20,000
所以这个区

1916
00:53:20,000 --> 00:53:22,000
当年就还有区位

1917
00:53:22,000 --> 00:53:24,000
区位码的输入法嘛

1918
00:53:24,000 --> 00:53:28,000
就你直接寄那个字库里面的那个字号

1919
00:53:28,000 --> 00:53:30,000
哇这个谁会寄这个呀

1920
00:53:30,000 --> 00:53:31,000
区位码

1921
00:53:31,000 --> 00:53:32,000
我不知道

1922
00:53:32,000 --> 00:53:34,000
反正区位码其实跟

1923
00:53:34,000 --> 00:53:36,000
跟什么四角号码输入法之类的

1924
00:53:36,000 --> 00:53:37,000
有一拼的

1925
00:53:37,000 --> 00:53:39,000
就是你要是一个熟练的牌子工人的话

1926
00:53:39,000 --> 00:53:41,000
那可能常用字的那个

1927
00:53:42,000 --> 00:53:43,000
数码

1928
00:53:43,000 --> 00:53:44,000
在你脑子里面

1929
00:53:44,000 --> 00:53:46,000
是可以建立其一对音讯标准

1930
00:53:46,000 --> 00:53:47,000
区位码当然发电报

1931
00:53:47,000 --> 00:53:49,000
到时候是用了这个方法

1932
00:53:49,000 --> 00:53:50,000
没有没有

1933
00:53:50,000 --> 00:53:51,000
电报码是另外一个电报码

1934
00:53:51,000 --> 00:53:55,000
区位码是完全就是按照 Gb 的区位来算的

1935
00:53:55,000 --> 00:53:57,000
那个不知查是肯定没有办法

1936
00:53:57,000 --> 00:54:00,000
因为本来这个编号编码就是编给计算机用的呀

1937
00:54:00,000 --> 00:54:01,000
不是给人看的

1938
00:54:01,000 --> 00:54:02,000
电报码是电报码

1939
00:54:02,000 --> 00:54:03,000
发电报

1940
00:54:03,000 --> 00:54:05,000
但是邮局系统用那个电报的是电报码

1941
00:54:05,000 --> 00:54:09,000
然后四角号码的话是根据那个汉字的

1942
00:54:09,000 --> 00:54:12,000
三下左右那四个角的那个笔画

1943
00:54:12,000 --> 00:54:14,000
所以那个是直观的可以看的

1944
00:54:14,000 --> 00:54:16,000
四角号码多少 make sense

1945
00:54:16,000 --> 00:54:17,000
你可以猜

1946
00:54:17,000 --> 00:54:18,000
但是区位码是

1947
00:54:18,000 --> 00:54:19,000
没见过你就不知道的

1948
00:54:19,000 --> 00:54:22,000
就必须要一个表来查

1949
00:54:22,000 --> 00:54:24,000
就变的号是给电脑去看的

1950
00:54:24,000 --> 00:54:26,000
不是给人看的这个区位

1951
00:54:26,000 --> 00:54:30,000
然后所以就同样的汉字的话

1952
00:54:30,000 --> 00:54:33,000
因为比如说他可能在中国是常用的

1953
00:54:33,000 --> 00:54:35,000
所以他中国给他在这个表里面

1954
00:54:35,000 --> 00:54:37,000
在 Gb 的表变了这样一个号

1955
00:54:37,000 --> 00:54:40,000
但是在日本的话就变成另外一个号

1956
00:54:40,000 --> 00:54:42,000
虽然是同样的汉字

1957
00:54:42,000 --> 00:54:43,000
比如说笔画 1 的 1

1958
00:54:43,000 --> 00:54:44,000
一横吗

1959
00:54:44,000 --> 00:54:45,000
这个 1 嘛

1960
00:54:45,000 --> 00:54:47,000
所以后来在做 unicode 的时候

1961
00:54:47,000 --> 00:54:49,000
说叫全球大统一

1962
00:54:49,000 --> 00:54:50,000
都是大家庭

1963
00:54:50,000 --> 00:54:52,000
那汉字本来就这么多

1964
00:54:52,000 --> 00:54:54,000
为了节省马位干脆的

1965
00:54:54,000 --> 00:54:56,000
就能统一就统一了

1966
00:54:56,000 --> 00:54:58,000
所以在统一马 unicode 的时候

1967
00:54:58,000 --> 00:55:02,000
对于他们叫 CJK Ideograph

1968
00:55:02,000 --> 00:55:03,000
对吧

1969
00:55:03,000 --> 00:55:06,000
CJK 表义汉字

1970
00:55:06,000 --> 00:55:08,000
表义符号

1971
00:55:08,000 --> 00:55:09,000
这个区的话就尽量的

1972
00:55:09,000 --> 00:55:12,000
就当年就把这几个

1973
00:55:12,000 --> 00:55:15,000
东亚系统的几个汉字的统一起来了

1974
00:55:15,000 --> 00:55:18,000
但是管这个叫包

1975
00:55:18,000 --> 00:55:19,000
这个叫有一个数语

1976
00:55:19,000 --> 00:55:21,000
叫包容还是叫包社

1977
00:55:21,000 --> 00:55:22,000
就是同样的汉

1978
00:55:22,000 --> 00:55:24,000
认同原则吧

1979
00:55:24,000 --> 00:55:26,000
是认同原则吗

1980
00:55:26,000 --> 00:55:28,000
就是如果你国认为

1981
00:55:28,000 --> 00:55:30,000
你国的这个字和我国的这个字

1982
00:55:30,000 --> 00:55:31,000
是同一个字

1983
00:55:31,000 --> 00:55:33,000
这两个字就可以合在一起

1984
00:55:33,000 --> 00:55:34,000
对

1985
00:55:34,000 --> 00:55:35,000
但是问题就是

1986
00:55:35,000 --> 00:55:37,000
如果比如说像一体字的东西

1987
00:55:37,000 --> 00:55:40,000
在你国的这个是分开来的的话

1988
00:55:40,000 --> 00:55:42,000
那我收到 unicode 也必须得分开

1989
00:55:42,000 --> 00:55:43,000
要不然就会有一个

1990
00:55:43,000 --> 00:55:45,000
向后兼容不行的问题

1991
00:55:45,000 --> 00:55:46,000
对是这样

1992
00:55:46,000 --> 00:55:48,000
所以就当年

1993
00:55:48,000 --> 00:55:53,000
当年好像就在基本文平面

1994
00:55:53,000 --> 00:55:55,000
基本多语文平面的

1995
00:55:55,000 --> 00:55:57,000
第一级的 CJK 统一

1996
00:55:57,000 --> 00:56:00,000
表义符号里面的东西

1997
00:56:00,000 --> 00:56:02,000
基本上差不多同起来了

1998
00:56:02,000 --> 00:56:03,000
但是问题就是

1999
00:56:03,000 --> 00:56:06,000
统的那个规则就特别的不明确

2000
00:56:06,000 --> 00:56:07,000
有的该统的不同

2001
00:56:07,000 --> 00:56:09,000
有的该分的部分就是这样子

2002
00:56:09,000 --> 00:56:14,000
所以那现在比如说

2003
00:56:14,000 --> 00:56:16,000
国内可能还是在用 GbData

2004
00:56:16,000 --> 00:56:17,000
比较多

2005
00:56:17,000 --> 00:56:19,000
特别是在 Windows 上面的平台上面

2006
00:56:19,000 --> 00:56:21,000
就在日本和韩国的话

2007
00:56:21,000 --> 00:56:22,000
现在用 unicode 编码的

2008
00:56:22,000 --> 00:56:23,000
是一个常态吗

2009
00:56:23,000 --> 00:56:24,000
还是说还是在沿用

2010
00:56:24,000 --> 00:56:27,000
自己老的那个什么 JS 那套标准

2011
00:56:27,000 --> 00:56:29,000
Windows 还是用 G 4

2012
00:56:29,000 --> 00:56:30,000
还是这样子

2013
00:56:30,000 --> 00:56:33,000
就只有在 Mac 上面是用的 unicode

2014
00:56:33,000 --> 00:56:36,000
首先 OS 10 的话

2015
00:56:36,000 --> 00:56:37,000
从最开始

2016
00:56:37,000 --> 00:56:38,000
OS 10 一开始

2017
00:56:38,000 --> 00:56:40,000
诞生就是 unicode 的内核对吧

2018
00:56:40,000 --> 00:56:42,000
那这个有两码事

2019
00:56:42,000 --> 00:56:43,000
第一个就是说

2020
00:56:43,000 --> 00:56:45,000
Windows 上面其实也是 unicode 内核的

2021
00:56:45,000 --> 00:56:47,000
他只是说在习惯保存

2022
00:56:47,000 --> 00:56:48,000
成文件的时候

2023
00:56:48,000 --> 00:56:49,000
他有一个编码的过程

2024
00:56:49,000 --> 00:56:50,000
这样的话

2025
00:56:50,000 --> 00:56:51,000
在那个

2026
00:56:51,000 --> 00:56:52,000
起码在中文的 Windows

2027
00:56:52,000 --> 00:56:53,000
反正现在默认的

2028
00:56:53,000 --> 00:56:54,000
应该还是用的那个

2029
00:56:54,000 --> 00:56:56,000
国标那套标准 GbK 吧

2030
00:56:56,000 --> 00:56:58,000
然后你可以选择

2031
00:56:58,000 --> 00:57:00,000
手工存成 UTF 8

2032
00:57:00,000 --> 00:57:02,000
然后它会有一个 Bomb 在前面

2033
00:57:02,000 --> 00:57:04,000
就表示这个东西嘛

2034
00:57:04,000 --> 00:57:06,000
但是我不知道在日本的话

2035
00:57:06,000 --> 00:57:09,000
目前大家常用的操作系统

2036
00:57:09,000 --> 00:57:12,000
里面是怎么一个做法

2037
00:57:12,000 --> 00:57:15,000
如果我虽然也不怎么用 Windows

2038
00:57:15,000 --> 00:57:17,000
但是据我印象的话

2039
00:57:17,000 --> 00:57:18,000
好像也是

2040
00:57:18,000 --> 00:57:20,000
就是在他们也是默认 G 4

2041
00:57:20,000 --> 00:57:23,000
还是保留在 unicode

2042
00:57:23,000 --> 00:57:24,000
unification 之前的做法

2043
00:57:24,000 --> 00:57:26,000
保留下来了吗

2044
00:57:26,000 --> 00:57:27,000
对的

2045
00:57:27,000 --> 00:57:30,000
那就是为什么你在 Windows 上面

2046
00:57:30,000 --> 00:57:32,000
要选择一个所谓 CodePage 吗

2047
00:57:32,000 --> 00:57:33,000
你叫在

2048
00:57:33,000 --> 00:57:34,000
对

2049
00:57:34,000 --> 00:57:35,000
马业

2050
00:57:35,000 --> 00:57:36,000
你要在

2051
00:57:36,000 --> 00:57:39,000
当你想玩日本游戏的时候

2052
00:57:39,000 --> 00:57:41,000
你可以把 CodePage 选成日本

2053
00:57:41,000 --> 00:57:42,000
然后这样

2054
00:57:42,000 --> 00:57:44,000
日本游戏至少

2055
00:57:44,000 --> 00:57:46,000
选手来是正常的

2056
00:57:46,000 --> 00:57:49,000
但其他操作的其他部分就全毁了

2057
00:57:50,000 --> 00:57:52,000
对 其实就是 unwindows

2058
00:57:52,000 --> 00:57:53,000
那个比较典型的

2059
00:57:53,000 --> 00:57:55,000
它那个技师本的那个软件

2060
00:57:55,000 --> 00:57:56,000
对

2061
00:57:56,000 --> 00:57:57,000
就那种典型的

2062
00:57:57,000 --> 00:57:58,000
它那个

2063
00:57:58,000 --> 00:58:00,000
它有一个编码叫 NC

2064
00:58:00,000 --> 00:58:02,000
就是 American National

2065
00:58:02,000 --> 00:58:03,000
就是国家标准

2066
00:58:03,000 --> 00:58:06,000
其实它除了 Ask 2 之外

2067
00:58:06,000 --> 00:58:07,000
那个应该念怎么念

2068
00:58:07,000 --> 00:58:08,000
Aski

2069
00:58:08,000 --> 00:58:09,000
除了 Aski 之外

2070
00:58:09,000 --> 00:58:11,000
对 其他的其实它都是一个

2071
00:58:11,000 --> 00:58:13,000
根据你这个操作系统的语言

2072
00:58:13,000 --> 00:58:15,000
第一是来帮你自动选一个 CodePage

2073
00:58:15,000 --> 00:58:16,000
没错

2074
00:58:16,000 --> 00:58:17,000
应该是这样的

2075
00:58:17,000 --> 00:58:18,000
所以那个特别坑

2076
00:58:18,000 --> 00:58:19,000
那个特别坑

2077
00:58:19,000 --> 00:58:20,000
对 所以其实

2078
00:58:20,000 --> 00:58:22,000
对 其实 Windows 的技师本还挺坑的

2079
00:58:22,000 --> 00:58:23,000
对

2080
00:58:23,000 --> 00:58:24,000
那就是各种那种

2081
00:58:24,000 --> 00:58:26,000
大家都说打不开是乱马的一个

2082
00:58:26,000 --> 00:58:27,000
根源问题

2083
00:58:27,000 --> 00:58:28,000
对

2084
00:58:28,000 --> 00:58:30,000
还有那种换航福的问题

2085
00:58:30,000 --> 00:58:31,000
对

2086
00:58:31,000 --> 00:58:32,000
对

2087
00:58:32,000 --> 00:58:34,000
回车福和换航福

2088
00:58:34,000 --> 00:58:37,000
Windows 技师本是不能区分这个

2089
00:58:37,000 --> 00:58:38,000
两个回

2090
00:58:38,000 --> 00:58:41,000
单一一个 return 和 Windows 所谓

2091
00:58:41,000 --> 00:58:43,000
开 return new line

2092
00:58:43,000 --> 00:58:44,000
对

2093
00:58:44,000 --> 00:58:46,000
换航和回车是不一样的

2094
00:58:46,000 --> 00:58:47,000
return 和 enter

2095
00:58:47,000 --> 00:58:48,000
对

2096
00:58:48,000 --> 00:58:50,000
它那个 bomb 也挺烦的

2097
00:58:50,000 --> 00:58:51,000
其实

2098
00:58:56,000 --> 00:58:58,000
那我们说到 unicode 了是吧

2099
00:58:58,000 --> 00:58:59,000
对

2100
00:58:59,000 --> 00:59:00,000
对 我们已经说到 unicode 了

2101
00:59:00,000 --> 00:59:02,000
然后当年就是有

2102
00:59:02,000 --> 00:59:04,000
因为汉字的那个

2103
00:59:04,000 --> 00:59:06,000
有很多议题字

2104
00:59:06,000 --> 00:59:10,000
那当年在做这个 CJK 统一汉字的时候呢

2105
00:59:10,000 --> 00:59:13,000
就因为各个国家的这个标准不一样

2106
00:59:13,000 --> 00:59:15,000
又为了向后金融导致

2107
00:59:15,000 --> 00:59:17,000
当年在做那个标准的时候呢

2108
00:59:17,000 --> 00:59:19,000
这个收和不收 统一

2109
00:59:19,000 --> 00:59:21,000
有没有统起来是非常混乱吗

2110
00:59:21,000 --> 00:59:22,000
所以到后面

2111
00:59:22,000 --> 00:59:24,000
在这个 CJK 统一汉字

2112
00:59:24,000 --> 00:59:26,000
扩展 ABCDE

2113
00:59:26,000 --> 00:59:28,000
现在已经到 E 区了是吧

2114
00:59:28,000 --> 00:59:29,000
好像是吧

2115
00:59:29,000 --> 00:59:32,000
我最近没有怎么去追 unicode 的这个

2116
00:59:32,000 --> 00:59:34,000
conculture 的新闻

2117
00:59:34,000 --> 00:59:36,000
但他们一直在搞大新闻

2118
00:59:36,000 --> 00:59:37,000
对

2119
00:59:37,000 --> 00:59:40,000
台湾是发生什么假以禀定物吗

2120
00:59:40,000 --> 00:59:41,000
扩展

2121
00:59:41,000 --> 00:59:43,000
说法不一样而已

2122
00:59:43,000 --> 00:59:44,000
对

2123
00:59:44,000 --> 00:59:46,000
然后就是后面就一直都在补

2124
00:59:46,000 --> 00:59:47,000
而且他们不停的补

2125
00:59:47,000 --> 00:59:51,000
又要保证向前面的那个兼容性的问题

2126
00:59:51,000 --> 00:59:53,000
所以后面就不断的叠加

2127
00:59:53,000 --> 00:59:54,000
所以在日本

2128
00:59:54,000 --> 00:59:55,000
在 unicode 里面

2129
00:59:55,000 --> 00:59:57,000
现在就搞的这个

2130
00:59:57,000 --> 00:59:59,000
一底字的处理非常非常的复杂

2131
01:00:01,000 --> 01:00:03,000
有没有发生

2132
01:00:03,000 --> 01:00:05,000
现在有没有发生一个字

2133
01:00:05,000 --> 01:00:09,000
在 unicode 里面有多个马脸的状况的情况

2134
01:00:10,000 --> 01:00:13,000
首先说什么叫一个字

2135
01:00:13,000 --> 01:00:15,000
同一个字的不同意题

2136
01:00:15,000 --> 01:00:16,000
比如说

2137
01:00:16,000 --> 01:00:17,000
对

2138
01:00:18,000 --> 01:00:19,000
像比如

2139
01:00:19,000 --> 01:00:21,000
这会发生很乱的事情

2140
01:00:21,000 --> 01:00:24,000
比如说像那个强调的强

2141
01:00:25,000 --> 01:00:26,000
就是

2142
01:00:26,000 --> 01:00:27,000
右边是虽然的

2143
01:00:27,000 --> 01:00:29,000
右上面是个口

2144
01:00:30,000 --> 01:00:35,000
然后日本的这边标准的字型是写成那个吧

2145
01:00:35,000 --> 01:00:36,000
撇折点

2146
01:00:37,000 --> 01:00:38,000
OK

2147
01:00:38,000 --> 01:00:39,000
对

2148
01:00:39,000 --> 01:00:40,000
但是

2149
01:00:41,000 --> 01:00:43,000
这两个关系在中国是

2150
01:00:43,000 --> 01:00:45,000
正题字和一题字的关系

2151
01:00:45,000 --> 01:00:46,000
然后我们不用撇折点

2152
01:00:46,000 --> 01:00:47,000
我们是写成口

2153
01:00:47,000 --> 01:00:48,000
对

2154
01:00:50,000 --> 01:00:53,000
但是日本它是撇折点的那个字型

2155
01:00:53,000 --> 01:00:55,000
它是常用汉字的标准字型

2156
01:00:56,000 --> 01:00:57,000
然后写成口

2157
01:00:57,000 --> 01:00:58,000
日本也有

2158
01:00:58,000 --> 01:00:59,000
日本就完全没有写成口这种

2159
01:00:59,000 --> 01:01:00,000
这种编题吗

2160
01:01:00,000 --> 01:01:03,000
写成口是他们的一题字

2161
01:01:05,000 --> 01:01:07,000
然后还好就是

2162
01:01:07,000 --> 01:01:08,000
怎么办

2163
01:01:08,000 --> 01:01:09,000
但是还好的是

2164
01:01:09,000 --> 01:01:10,000
还好

2165
01:01:10,000 --> 01:01:11,000
因为在 unicode 里面

2166
01:01:11,000 --> 01:01:13,000
这两个字分别有马位

2167
01:01:13,000 --> 01:01:15,000
这其实就是两个马位

2168
01:01:15,000 --> 01:01:16,000
所以呢

2169
01:01:16,000 --> 01:01:18,000
对于这一对字的处理的话

2170
01:01:18,000 --> 01:01:19,000
是还好

2171
01:01:19,000 --> 01:01:21,000
是因为有不同的马位

2172
01:01:21,000 --> 01:01:22,000
那我是只要

2173
01:01:22,000 --> 01:01:24,000
给它分成不同的编码

2174
01:01:24,000 --> 01:01:25,000
给它编了不同的编码了

2175
01:01:25,000 --> 01:01:26,000
所以呢我只要

2176
01:01:26,000 --> 01:01:28,000
正确的输入这个码的话

2177
01:01:28,000 --> 01:01:29,000
你就会

2178
01:01:29,000 --> 01:01:31,000
显示这样子

2179
01:01:31,000 --> 01:01:32,000
这个是

2180
01:01:32,000 --> 01:01:33,000
我们要说到后面

2181
01:01:33,000 --> 01:01:35,000
就是那个字体公司

2182
01:01:35,000 --> 01:01:36,000
它在印射的时候

2183
01:01:36,000 --> 01:01:38,000
印射对的时候就会这样

2184
01:01:38,000 --> 01:01:39,000
OK

2185
01:01:39,000 --> 01:01:41,000
如果印射不对的话

2186
01:01:41,000 --> 01:01:43,000
字体公司它有时候

2187
01:01:43,000 --> 01:01:44,000
它印射错了

2188
01:01:44,000 --> 01:01:45,000
就中文字体

2189
01:01:45,000 --> 01:01:47,000
因为中文字体优先是

2190
01:01:47,000 --> 01:01:48,000
那个口字盘的那个字型

2191
01:01:48,000 --> 01:01:49,000
对

2192
01:01:49,000 --> 01:01:51,000
日文字体会优先那个

2193
01:01:51,000 --> 01:01:52,000
撇点

2194
01:01:52,000 --> 01:01:53,000
撇折点的那个字型

2195
01:01:53,000 --> 01:01:54,000
如果他们在这个

2196
01:01:54,000 --> 01:01:56,000
马位上弄错了的话

2197
01:01:56,000 --> 01:01:58,000
在换字体的时候

2198
01:01:58,000 --> 01:01:59,000
也会出问题

2199
01:01:59,000 --> 01:02:01,000
不过这种概率还蛮小的

2200
01:02:01,000 --> 01:02:02,000
比较大的问题

2201
01:02:02,000 --> 01:02:03,000
主要是出在输入法

2202
01:02:03,000 --> 01:02:06,000
给你优先推荐的那个字上

2203
01:02:06,000 --> 01:02:07,000
对 你看起来是一样

2204
01:02:07,000 --> 01:02:09,000
那其实你做那个

2205
01:02:09,000 --> 01:02:10,000
比较的话

2206
01:02:10,000 --> 01:02:11,000
它两个不同的字

2207
01:02:11,000 --> 01:02:13,000
不同的 character

2208
01:02:14,000 --> 01:02:16,000
所以就刚才说到

2209
01:02:16,000 --> 01:02:17,000
这又是一个不同的层次了

2210
01:02:17,000 --> 01:02:19,000
首先我们是要输入法

2211
01:02:19,000 --> 01:02:21,000
我们从键盘里面打

2212
01:02:21,000 --> 01:02:23,000
打进去的那个键位以后

2213
01:02:23,000 --> 01:02:25,000
要经过输入法的转换

2214
01:02:25,000 --> 01:02:26,000
换成这个文字的编码

2215
01:02:26,000 --> 01:02:28,000
这时候换的时候有没有换对

2216
01:02:28,000 --> 01:02:30,000
有的时候输入

2217
01:02:30,000 --> 01:02:31,000
因为输入法特别空

2218
01:02:31,000 --> 01:02:32,000
有时候它换就跟

2219
01:02:32,000 --> 01:02:33,000
根本就给它换错掉了

2220
01:02:33,000 --> 01:02:34,000
嗯哼

2221
01:02:34,000 --> 01:02:35,000
然后

2222
01:02:35,000 --> 01:02:38,000
character 系统收到这个编码以后

2223
01:02:38,000 --> 01:02:40,000
它再去拿那个 fault 文件

2224
01:02:40,000 --> 01:02:42,000
拿字体文件去调用

2225
01:02:42,000 --> 01:02:44,000
最后要显示那个图形

2226
01:02:44,000 --> 01:02:45,000
那个字形

2227
01:02:45,000 --> 01:02:46,000
对

2228
01:02:46,000 --> 01:02:47,000
那那个 fault

2229
01:02:47,000 --> 01:02:48,000
fault 的那个 mapping

2230
01:02:48,000 --> 01:02:49,000
如果又错的话

2231
01:02:49,000 --> 01:02:50,000
它显示又是一个错的东西

2232
01:02:50,000 --> 01:02:52,000
所以这个有好多层次的

2233
01:02:53,000 --> 01:02:55,000
好多可能要果然是

2234
01:02:56,000 --> 01:02:58,000
所以我们要把

2235
01:02:58,000 --> 01:02:59,000
从头到尾再说一遍

2236
01:02:59,000 --> 01:03:01,000
所以现在就好不容易是

2237
01:03:01,000 --> 01:03:03,000
对啊我们刚才跳过来

2238
01:03:03,000 --> 01:03:04,000
那输入法应该说一下

2239
01:03:06,000 --> 01:03:08,000
输入法这个层面

2240
01:03:08,000 --> 01:03:11,000
其实跟编码

2241
01:03:11,000 --> 01:03:14,000
没有太多的关联

2242
01:03:14,000 --> 01:03:17,000
输入法本身是一个把你输入的

2243
01:03:17,000 --> 01:03:20,000
自符安照某种规则

2244
01:03:20,000 --> 01:03:21,000
转化为汉字的过程

2245
01:03:21,000 --> 01:03:24,000
就我们假设在讨论的是汉字输入法

2246
01:03:24,000 --> 01:03:26,000
当然日语其实也有输入法这个概念

2247
01:03:26,000 --> 01:03:27,000
但是

2248
01:03:29,000 --> 01:03:31,000
全都考论的话其实比较复杂的

2249
01:03:31,000 --> 01:03:34,000
就输入法本身其实是一个

2250
01:03:37,000 --> 01:03:40,000
和编码没有太多的关联的过程

2251
01:03:40,000 --> 01:03:43,000
它做的唯一的事情就是把你输入的

2252
01:03:44,000 --> 01:03:47,000
甚至很多时候输入法工作的层面

2253
01:03:47,000 --> 01:03:50,000
是在已经输入的自符的层面

2254
01:03:50,000 --> 01:03:52,000
而和下面的案件是无关的

2255
01:03:52,000 --> 01:03:53,000
当然在

2256
01:03:53,000 --> 01:03:56,000
Linux 上面你是可以说

2257
01:03:56,000 --> 01:03:59,000
有些输入法是工作在

2258
01:03:59,000 --> 01:04:01,000
扫码码层面上的

2259
01:04:01,000 --> 01:04:03,000
你可以说这个输入法直接去

2260
01:04:05,000 --> 01:04:07,000
管理键盘上面

2261
01:04:08,000 --> 01:04:09,000
给过来的扫码码

2262
01:04:09,000 --> 01:04:12,000
而不是先等待操作系统把

2263
01:04:12,000 --> 01:04:15,000
扫码码已经转换为自符

2264
01:04:15,000 --> 01:04:16,000
然后去处理自符

2265
01:04:18,000 --> 01:04:20,000
扫码码其实是一个巨大的规则库

2266
01:04:20,000 --> 01:04:23,000
比如说规则库最常见最常用的就是拼音规则库

2267
01:04:23,000 --> 01:04:26,000
然后你输入某些特定的拼音

2268
01:04:26,000 --> 01:04:28,000
就会得到一个汉字

2269
01:04:30,000 --> 01:04:31,000
输入法这个更要开

2270
01:04:31,000 --> 01:04:33,000
我们可以介绍各种各样的输入法

2271
01:04:33,000 --> 01:04:35,000
什么运行码呀

2272
01:04:35,000 --> 01:04:36,000
双拼的

2273
01:04:37,000 --> 01:04:39,000
我刚才说的无比自行之后去

2274
01:04:39,000 --> 01:04:41,000
我觉得从广义上来说

2275
01:04:41,000 --> 01:04:43,000
输入法也可以试做一套

2276
01:04:43,000 --> 01:04:44,000
一样的放出了系统

2277
01:04:44,000 --> 01:04:46,000
但是它跟我们所谓的

2278
01:04:46,000 --> 01:04:48,000
计算机自符编码

2279
01:04:48,000 --> 01:04:50,000
这个狭野的编码是不是一维式

2280
01:04:52,000 --> 01:04:54,000
自符编码又不一样

2281
01:04:54,000 --> 01:04:55,000
对

2282
01:04:55,000 --> 01:04:57,000
输入法其实目前最大问题就是拼音规法

2283
01:04:57,000 --> 01:04:59,000
很可能是一个动态的编码系统

2284
01:04:59,000 --> 01:05:02,000
就是你每次按键的

2285
01:05:02,000 --> 01:05:04,000
完全一样的按键词去输

2286
01:05:04,000 --> 01:05:07,000
得出来的这个字可能是不一样的

2287
01:05:07,000 --> 01:05:10,000
或者说它是一套解锁系统

2288
01:05:10,000 --> 01:05:13,000
它能帮你更快的找到你想要的那个字

2289
01:05:13,000 --> 01:05:14,000
没错

2290
01:05:14,000 --> 01:05:15,000
它是一个

2291
01:05:15,000 --> 01:05:17,000
拼码和解锁

2292
01:05:17,000 --> 01:05:20,000
当然有些人就因此特别喜欢什么

2293
01:05:20,000 --> 01:05:21,000
我就问了四点

2294
01:05:21,000 --> 01:05:22,000
智能 ABC 输入法

2295
01:05:22,000 --> 01:05:25,000
就是你不管打多少次

2296
01:05:25,000 --> 01:05:26,000
它没有高频仙剑的功能

2297
01:05:26,000 --> 01:05:28,000
就是你打什么

2298
01:05:28,000 --> 01:05:29,000
知道的知

2299
01:05:29,000 --> 01:05:30,000
你看

2300
01:05:30,000 --> 01:05:32,000
在第二页的

2301
01:05:32,000 --> 01:05:34,000
它永远在那个位置

2302
01:05:34,000 --> 01:05:36,000
你每次输入一模一样的

2303
01:05:36,000 --> 01:05:40,000
这个是一个叫磁瓶调整

2304
01:05:40,000 --> 01:05:42,000
就是会根据你输入的

2305
01:05:42,000 --> 01:05:43,000
磁瓶调整可以关掉吧

2306
01:05:43,000 --> 01:05:45,000
很多法都可以关掉的

2307
01:05:45,000 --> 01:05:46,000
可以关掉吧

2308
01:05:46,000 --> 01:05:47,000
其实

2309
01:05:47,000 --> 01:05:49,000
所以它永远都在那个位置上

2310
01:05:49,000 --> 01:05:50,000
其实挺好的

2311
01:05:50,000 --> 01:05:52,000
像有些同学它的名字

2312
01:05:52,000 --> 01:05:53,000
因为是很复杂吧

2313
01:05:53,000 --> 01:05:54,000
然后就经常在后面

2314
01:05:54,000 --> 01:05:55,000
告诉你

2315
01:05:55,000 --> 01:05:56,000
它就经常说

2316
01:05:56,000 --> 01:05:57,000
第二排第五页

2317
01:05:57,000 --> 01:06:01,000
你按第五页的第六个选项就是

2318
01:06:01,000 --> 01:06:02,000
什么

2319
01:06:02,000 --> 01:06:04,000
这样提也蛮好

2320
01:06:04,000 --> 01:06:07,000
基本上是在联机时代之前

2321
01:06:07,000 --> 01:06:08,000
出现的这种情况

2322
01:06:08,000 --> 01:06:09,000
现在的话

2323
01:06:09,000 --> 01:06:11,000
我看市面上的大部分输入法

2324
01:06:11,000 --> 01:06:14,000
它除了有磁瓶调整的选项之外

2325
01:06:14,000 --> 01:06:16,000
它还有一个所谓的磁会库的问题

2326
01:06:16,000 --> 01:06:19,000
而且它不是一个单击的

2327
01:06:19,000 --> 01:06:20,000
它是一个联机的

2328
01:06:20,000 --> 01:06:21,000
比如说像

2329
01:06:21,000 --> 01:06:22,000
我说你留意到现在的苹果

2330
01:06:22,000 --> 01:06:24,000
自带那个瓶行都有这个东西

2331
01:06:24,000 --> 01:06:25,000
就是你打一圈

2332
01:06:25,000 --> 01:06:26,000
你觉得

2333
01:06:26,000 --> 01:06:28,000
一些流行磁会它会自动的

2334
01:06:28,000 --> 01:06:29,000
会定期更新出来

2335
01:06:29,000 --> 01:06:31,000
还有像什么搜狗

2336
01:06:31,000 --> 01:06:32,000
输入法的这种

2337
01:06:32,000 --> 01:06:33,000
云磁库

2338
01:06:33,000 --> 01:06:34,000
就是它可以

2339
01:06:34,000 --> 01:06:36,000
实实的告诉你说

2340
01:06:36,000 --> 01:06:37,000
你本来打这个

2341
01:06:37,000 --> 01:06:38,000
比如说 ABCD

2342
01:06:38,000 --> 01:06:40,000
组合出来一个拼音的字

2343
01:06:40,000 --> 01:06:42,000
你之前可能都没有

2344
01:06:42,000 --> 01:06:43,000
可能过了一天

2345
01:06:43,000 --> 01:06:44,000
而且怎么有人说

2346
01:06:44,000 --> 01:06:46,000
因为是有大的人打 ABCD

2347
01:06:46,000 --> 01:06:49,000
然后指向了某一个特定的一个磁组

2348
01:06:49,000 --> 01:06:51,000
红红火火

2349
01:06:51,000 --> 01:06:52,000
惶惶枯枯

2350
01:06:54,000 --> 01:06:56,000
这算是

2351
01:06:56,000 --> 01:06:59,000
因为输入法而被创造出来了磁会

2352
01:06:59,000 --> 01:07:01,000
对的

2353
01:07:01,000 --> 01:07:03,000
蓝周烧饼

2354
01:07:03,000 --> 01:07:04,000
蓝周烧饼

2355
01:07:04,000 --> 01:07:05,000
什么

2356
01:07:05,000 --> 01:07:06,000
蓝周

2357
01:07:06,000 --> 01:07:08,000
这是什么歌

2358
01:07:08,000 --> 01:07:09,000
你不知道这个叫吗

2359
01:07:09,000 --> 01:07:10,000
就是楼主

2360
01:07:10,000 --> 01:07:11,000
不知道

2361
01:07:11,000 --> 01:07:13,000
在论坛时代

2362
01:07:15,000 --> 01:07:17,000
你打 LGSB

2363
01:07:17,000 --> 01:07:20,000
然后如果你不清换输入法的话

2364
01:07:20,000 --> 01:07:22,000
出来的就是蓝周烧饼

2365
01:07:22,000 --> 01:07:23,000
然后

2366
01:07:24,000 --> 01:07:26,000
蓝周有烧饼吗

2367
01:07:26,000 --> 01:07:27,000
有啊

2368
01:07:29,000 --> 01:07:30,000
还蛮好吃的

2369
01:07:30,000 --> 01:07:31,000
对吧

2370
01:07:33,000 --> 01:07:34,000
对

2371
01:07:34,000 --> 01:07:36,000
我对蓝周很熟

2372
01:07:36,000 --> 01:07:37,000
我在蓝周

2373
01:07:37,000 --> 01:07:39,000
我和 Rex 都是蓝周人

2374
01:07:39,000 --> 01:07:41,000
我们都是在蓝周出身

2375
01:07:43,000 --> 01:07:44,000
好吧

2376
01:07:44,000 --> 01:07:46,000
现在蓝周出了拉面还有烧饼

2377
01:07:46,000 --> 01:07:48,000
刚讲的那个

2378
01:07:48,000 --> 01:07:49,000
自服

2379
01:07:49,000 --> 01:07:50,000
Unicode 的问题

2380
01:07:50,000 --> 01:07:51,000
可能这里不得不

2381
01:07:51,000 --> 01:07:53,000
稍微连带提一下

2382
01:07:53,000 --> 01:07:54,000
但是算不

2383
01:07:54,000 --> 01:07:55,000
先不展开讲吧

2384
01:07:55,000 --> 01:07:56,000
后面会展开讲

2385
01:07:56,000 --> 01:07:57,000
就是那个 Emoji

2386
01:07:57,000 --> 01:07:58,000
言文字的问题

2387
01:08:00,000 --> 01:08:01,000
又是一个大

2388
01:08:01,000 --> 01:08:02,000
很大

2389
01:08:02,000 --> 01:08:03,000
汤多拉盒子

2390
01:08:05,000 --> 01:08:06,000
所以我一直想知道

2391
01:08:06,000 --> 01:08:08,000
这个词在英文世界

2392
01:08:08,000 --> 01:08:10,000
最通用的念法是怎么念的

2393
01:08:10,000 --> 01:08:11,000
那 Emoji 吧

2394
01:08:12,000 --> 01:08:13,000
对

2395
01:08:13,000 --> 01:08:14,000
但我知道它在英文世界

2396
01:08:14,000 --> 01:08:15,000
其实应该是

2397
01:08:15,000 --> 01:08:16,000
日语的吧

2398
01:08:16,000 --> 01:08:18,000
反正日语叫 Emoji

2399
01:08:19,000 --> 01:08:20,000
对呀

2400
01:08:20,000 --> 01:08:22,000
有很多人念成 Emoji

2401
01:08:22,000 --> 01:08:23,000
这个是可以

2402
01:08:23,000 --> 01:08:24,000
天哪

2403
01:08:24,000 --> 01:08:26,000
Emoji 就是汇文字

2404
01:08:26,000 --> 01:08:28,000
它写成中文就写成汇文字

2405
01:08:28,000 --> 01:08:30,000
汇就是画的意思

2406
01:08:30,000 --> 01:08:32,000
现在汉字叫汇文字

2407
01:08:32,000 --> 01:08:33,000
对

2408
01:08:33,000 --> 01:08:34,000
模具就是文字

2409
01:08:34,000 --> 01:08:35,000
这两个字

2410
01:08:36,000 --> 01:08:37,000
模具就是汇

2411
01:08:37,000 --> 01:08:39,000
就是画的意思

2412
01:08:40,000 --> 01:08:41,000
汇

2413
01:08:42,000 --> 01:08:43,000
汇画的汇

2414
01:08:43,000 --> 01:08:46,000
所以它其实是一个画的

2415
01:08:46,000 --> 01:08:47,000
所以汇文字说吧天天

2416
01:08:47,000 --> 01:08:48,000
就是象形文字吗

2417
01:08:49,000 --> 01:08:51,000
在日里面有两个字

2418
01:08:51,000 --> 01:08:52,000
一个叫 Emoji

2419
01:08:52,000 --> 01:08:53,000
一个叫 Caomuji

2420
01:08:54,000 --> 01:08:55,000
Caomuji 是

2421
01:08:55,000 --> 01:08:56,000
言文字

2422
01:08:56,000 --> 01:08:57,000
OK

2423
01:08:57,000 --> 01:08:59,000
就是用字符来画出一个人的脸

2424
01:08:59,000 --> 01:09:00,000
对

2425
01:09:00,000 --> 01:09:01,000
就是那个什么

2426
01:09:01,000 --> 01:09:02,000
给人跪了那种

2427
01:09:02,000 --> 01:09:03,000
这个应该叫 Emoji

2428
01:09:03,000 --> 01:09:04,000
对

2429
01:09:04,000 --> 01:09:05,000
比如说 OAZ

2430
01:09:05,000 --> 01:09:06,000
对

2431
01:09:06,000 --> 01:09:07,000
所以有两个嘛

2432
01:09:07,000 --> 01:09:08,000
反正在日语里面

2433
01:09:08,000 --> 01:09:09,000
Emoji 它是一个

2434
01:09:09,000 --> 01:09:10,000
它是一个画

2435
01:09:10,000 --> 01:09:11,000
OK

2436
01:09:11,000 --> 01:09:12,000
汇文字是一个画

2437
01:09:12,000 --> 01:09:14,000
但是 Caomuji 它是一个文字

2438
01:09:14,000 --> 01:09:18,000
它是用字符组成的一个图形

2439
01:09:18,000 --> 01:09:20,000
它是用文字来表达一个表情

2440
01:09:21,000 --> 01:09:22,000
对

2441
01:09:22,000 --> 01:09:23,000
但是这个东西的话

2442
01:09:23,000 --> 01:09:26,000
其实最早是从英文世界过来的

2443
01:09:26,000 --> 01:09:27,000
就 Ascii Art

2444
01:09:27,000 --> 01:09:28,000
对

2445
01:09:28,000 --> 01:09:29,000
所以 Ascii Art

2446
01:09:30,000 --> 01:09:31,000
一个帽号

2447
01:09:31,000 --> 01:09:32,000
一个帽号

2448
01:09:32,000 --> 01:09:33,000
一个又跨伙

2449
01:09:33,000 --> 01:09:34,000
就是一个横过来的笑脸

2450
01:09:34,000 --> 01:09:35,000
对吧

2451
01:09:35,000 --> 01:09:36,000
这个是最早最早的一个

2452
01:09:36,000 --> 01:09:39,000
然后这个在日语里的是叫 Caomuji

2453
01:09:39,000 --> 01:09:40,000
然后呢

2454
01:09:40,000 --> 01:09:42,000
西方的他们那个都是横过来的嘛

2455
01:09:42,000 --> 01:09:43,000
对

2456
01:09:43,000 --> 01:09:44,000
东亚的这个言文字

2457
01:09:44,000 --> 01:09:46,000
就是我们看的就是正常位置

2458
01:09:46,000 --> 01:09:49,000
比如说打打打两个那个

2459
01:09:49,000 --> 01:09:50,000
上尖

2460
01:09:50,000 --> 01:09:51,000
那个佛号的话

2461
01:09:51,000 --> 01:09:52,000
CAP

2462
01:09:53,000 --> 01:09:54,000
那个叫什么呀

2463
01:09:54,000 --> 01:09:55,000
就叫 CAP

2464
01:09:55,000 --> 01:09:56,000
上尖

2465
01:09:56,000 --> 01:09:57,000
对

2466
01:09:57,000 --> 01:09:59,000
两个上尖的话就是两个笑脸嘛

2467
01:09:59,000 --> 01:10:01,000
好像叫 Circleflex

2468
01:10:02,000 --> 01:10:03,000
对

2469
01:10:03,000 --> 01:10:04,000
那个是言文字

2470
01:10:04,000 --> 01:10:05,000
那言文字

2471
01:10:05,000 --> 01:10:06,000
其实它在对于计算系统

2472
01:10:06,000 --> 01:10:08,000
它本来就是字符嘛

2473
01:10:08,000 --> 01:10:09,000
就是这种 Ascii Art 嘛

2474
01:10:09,000 --> 01:10:10,000
所以这个的完

2475
01:10:10,000 --> 01:10:11,000
就不用编码

2476
01:10:11,000 --> 01:10:12,000
它就可以显示出来的

2477
01:10:12,000 --> 01:10:13,000
对

2478
01:10:13,000 --> 01:10:14,000
但是 Emoji 的话

2479
01:10:14,000 --> 01:10:15,000
它是一个画

2480
01:10:15,000 --> 01:10:17,000
所以呢就必须要通过编码

2481
01:10:17,000 --> 01:10:18,000
可以去编一下

2482
01:10:18,000 --> 01:10:21,000
然后再让电脑就掉出这个东西出来

2483
01:10:21,000 --> 01:10:23,000
所以就 Emoji 就有两个问题

2484
01:10:23,000 --> 01:10:25,000
第一个说说它会在那个

2485
01:10:25,000 --> 01:10:26,000
就码表里面

2486
01:10:26,000 --> 01:10:28,000
空出一些特定的东西

2487
01:10:28,000 --> 01:10:29,000
给这些图片嘛

2488
01:10:29,000 --> 01:10:30,000
这些小图片

2489
01:10:30,000 --> 01:10:31,000
什么救护车啊

2490
01:10:31,000 --> 01:10:32,000
火箭啊

2491
01:10:32,000 --> 01:10:34,000
西瓜飞机之类的那种

2492
01:10:34,000 --> 01:10:35,000
它会留一个这个

2493
01:10:35,000 --> 01:10:36,000
一个点位

2494
01:10:36,000 --> 01:10:37,000
然后再说

2495
01:10:37,000 --> 01:10:38,000
这个点位是什么意思

2496
01:10:38,000 --> 01:10:39,000
然后你再说

2497
01:10:39,000 --> 01:10:41,000
这个 Emoji 是用自识

2498
01:10:41,000 --> 01:10:42,000
识现的吗

2499
01:10:42,000 --> 01:10:44,000
好像不是自己来识现

2500
01:10:44,000 --> 01:10:45,000
是的呀

2501
01:10:45,000 --> 01:10:46,000
是

2502
01:10:47,000 --> 01:10:48,000
是的

2503
01:10:48,000 --> 01:10:49,000
所以而且

2504
01:10:49,000 --> 01:10:50,000
而且这是一个像

2505
01:10:50,000 --> 01:10:52,000
Apple Color Emoji

2506
01:10:52,000 --> 01:10:53,000
那个字母

2507
01:10:53,000 --> 01:10:54,000
那个字体

2508
01:10:54,000 --> 01:10:56,000
它是彩色的字体

2509
01:10:56,000 --> 01:10:57,000
当年就是

2510
01:10:57,000 --> 01:10:59,000
这也是一个字体技术的一个很重要一点

2511
01:10:59,000 --> 01:11:01,000
就是因为大家默认的话

2512
01:11:01,000 --> 01:11:02,000
那个字体就是黑白的嘛

2513
01:11:02,000 --> 01:11:03,000
就是一个

2514
01:11:03,000 --> 01:11:04,000
它混的是一个轮廓嘛

2515
01:11:04,000 --> 01:11:05,000
outline

2516
01:11:05,000 --> 01:11:06,000
传统上

2517
01:11:06,000 --> 01:11:08,000
字体是一套轮廓机

2518
01:11:08,000 --> 01:11:09,000
对

2519
01:11:09,000 --> 01:11:10,000
而且是黑白的

2520
01:11:10,000 --> 01:11:11,000
就不

2521
01:11:11,000 --> 01:11:13,000
几乎就不带这个颜色信息的

2522
01:11:13,000 --> 01:11:14,000
但是呢

2523
01:11:14,000 --> 01:11:15,000
这个 Emoji

2524
01:11:15,000 --> 01:11:16,000
Color Apple

2525
01:11:16,000 --> 01:11:17,000
Color Emoji

2526
01:11:17,000 --> 01:11:18,000
它就是第一款

2527
01:11:18,000 --> 01:11:21,000
就是要带颜色信息的这个字体

2528
01:11:21,000 --> 01:11:23,000
它是点正的还是像亮的

2529
01:11:23,000 --> 01:11:24,000
是位图

2530
01:11:24,000 --> 01:11:25,000
但它存很

2531
01:11:25,000 --> 01:11:26,000
对

2532
01:11:26,000 --> 01:11:27,000
不

2533
01:11:27,000 --> 01:11:28,000
实现上是位图

2534
01:11:28,000 --> 01:11:29,000
但是

2535
01:11:29,000 --> 01:11:31,000
它实现上是位图

2536
01:11:31,000 --> 01:11:33,000
但是它理论上是可以支持

2537
01:11:33,000 --> 01:11:36,000
你说支持彩色的使用法

2538
01:11:36,000 --> 01:11:38,000
我们理解错的话就是

2539
01:11:38,000 --> 01:11:39,000
它这一套字体

2540
01:11:39,000 --> 01:11:41,000
它只是存了一套位图的实现

2541
01:11:41,000 --> 01:11:46,000
但是它本身是可以使用彩色 SVG 的

2542
01:11:46,000 --> 01:11:48,000
而且好像 V-RUN 类似的技术

2543
01:11:48,000 --> 01:11:49,000
本身就一上来

2544
01:11:49,000 --> 01:11:52,000
就直接是彩色的视量图

2545
01:11:52,000 --> 01:11:54,000
那可能是私有技术

2546
01:11:54,000 --> 01:11:55,000
OK

2547
01:11:55,000 --> 01:11:58,000
反正 Apple 的 Color Emoji

2548
01:11:58,000 --> 01:11:59,000
这套 Font 的话

2549
01:11:59,000 --> 01:12:01,000
它其实里面是位图

2550
01:12:01,000 --> 01:12:03,000
所以你仔细看它并不是

2551
01:12:03,000 --> 01:12:05,000
如果你把它放大的话

2552
01:12:05,000 --> 01:12:07,000
它并不是无级放大的

2553
01:12:07,000 --> 01:12:09,000
它不是无级放大的

2554
01:12:09,000 --> 01:12:10,000
明白了

2555
01:12:10,000 --> 01:12:11,000
它不是无级的

2556
01:12:11,000 --> 01:12:12,000
比如说你 12 pt

2557
01:12:12,000 --> 01:12:13,000
14 pt

2558
01:12:13,000 --> 01:12:14,000
16 pt

2559
01:12:14,000 --> 01:12:15,000
其实是不大一样的

2560
01:12:15,000 --> 01:12:16,000
其实这里要

2561
01:12:16,000 --> 01:12:17,000
而且要解释一下

2562
01:12:17,000 --> 01:12:18,000
字体的概念

2563
01:12:18,000 --> 01:12:20,000
因为刚才讲的是一个点位

2564
01:12:20,000 --> 01:12:21,000
和一个东西的对应

2565
01:12:21,000 --> 01:12:22,000
那个东西是什么

2566
01:12:22,000 --> 01:12:23,000
可能有两种方式

2567
01:12:23,000 --> 01:12:25,000
一种是刚才所谓的点正

2568
01:12:25,000 --> 01:12:28,000
就是多少几成几的方块里面

2569
01:12:28,000 --> 01:12:29,000
哪些点是什么颜色

2570
01:12:29,000 --> 01:12:30,000
这么一个

2571
01:12:30,000 --> 01:12:31,000
马赛克

2572
01:12:31,000 --> 01:12:32,000
对

2573
01:12:32,000 --> 01:12:33,000
然后另外就是所谓的

2574
01:12:33,000 --> 01:12:34,000
象亮的字体

2575
01:12:34,000 --> 01:12:36,000
就是它存的是一堆

2576
01:12:36,000 --> 01:12:38,000
一些 point

2577
01:12:38,000 --> 01:12:39,000
这些 point

2578
01:12:39,000 --> 01:12:43,000
它会从某种方式组合成一个区域

2579
01:12:43,000 --> 01:12:44,000
然后绘上颜色之后

2580
01:12:44,000 --> 01:12:46,000
就变成一个黑白的字

2581
01:12:47,000 --> 01:12:49,000
这个字它是一个轮廓

2582
01:12:49,000 --> 01:12:50,000
轮廓

2583
01:12:50,000 --> 01:12:53,000
这个怎么把一个形状表达出来

2584
01:12:53,000 --> 01:12:55,000
就是字体文件要干的

2585
01:12:55,000 --> 01:12:57,000
或者叫字库文件要干的事情

2586
01:12:57,000 --> 01:12:58,000
对吧

2587
01:12:58,000 --> 01:12:59,000
对

2588
01:12:59,000 --> 01:13:01,000
这就是我们平时大家在电脑里面

2589
01:13:01,000 --> 01:13:02,000
看到的 font

2590
01:13:02,000 --> 01:13:05,000
这个 font 文件里面到底是什么东西

2591
01:13:05,000 --> 01:13:06,000
对

2592
01:13:06,000 --> 01:13:07,000
关于那个

2593
01:13:07,000 --> 01:13:08,000
一个 glif

2594
01:13:08,000 --> 01:13:10,000
它本身的这个图像形式

2595
01:13:10,000 --> 01:13:11,000
我觉得按照 Rio 刚才说的

2596
01:13:11,000 --> 01:13:13,000
我们其实应该可以分成三种

2597
01:13:13,000 --> 01:13:14,000
一种是那种

2598
01:13:14,000 --> 01:13:16,000
黑白的点准

2599
01:13:16,000 --> 01:13:17,000
然后另一种是

2600
01:13:17,000 --> 01:13:19,000
更常见的这个使量字体

2601
01:13:19,000 --> 01:13:20,000
它是一个使量的轮廓

2602
01:13:20,000 --> 01:13:21,000
对

2603
01:13:21,000 --> 01:13:22,000
当然这个使量轮廓

2604
01:13:22,000 --> 01:13:23,000
可能有很多种描述方式

2605
01:13:23,000 --> 01:13:25,000
但它统一上都是一个使量的轮廓

2606
01:13:25,000 --> 01:13:26,000
对

2607
01:13:26,000 --> 01:13:27,000
还一种是那个

2608
01:13:27,000 --> 01:13:28,000
Emoji 常用的这种

2609
01:13:28,000 --> 01:13:29,000
图片

2610
01:13:29,000 --> 01:13:30,000
一个彩色的位图

2611
01:13:30,000 --> 01:13:31,000
对

2612
01:13:31,000 --> 01:13:32,000
它比那种点准的

2613
01:13:32,000 --> 01:13:35,000
我们最早看到那种点准的那个位图

2614
01:13:35,000 --> 01:13:37,000
要高端的很多就是说

2615
01:13:37,000 --> 01:13:39,000
我们可以大致上这样理解

2616
01:13:39,000 --> 01:13:40,000
就他们不是同一种技术

2617
01:13:40,000 --> 01:13:41,000
对

2618
01:13:41,000 --> 01:13:43,000
所以最常见的

2619
01:13:43,000 --> 01:13:45,000
可能最古老的是那种点准字库

2620
01:13:45,000 --> 01:13:46,000
大家应该还在

2621
01:13:46,000 --> 01:13:48,000
因为 DOS 时代还挺明确的

2622
01:13:48,000 --> 01:13:52,000
那个什么 16 乘以 16 个像素的那个叫什么

2623
01:13:52,000 --> 01:13:53,000
字体来的

2624
01:13:53,000 --> 01:13:56,000
就是当时用 WPSDOS 版的时候

2625
01:13:56,000 --> 01:13:57,000
还有的

2626
01:13:57,000 --> 01:13:58,000
FixSys

2627
01:13:58,000 --> 01:13:59,000
哇

2628
01:13:59,000 --> 01:14:00,000
FixSys

2629
01:14:00,000 --> 01:14:01,000
我怕死

2630
01:14:01,000 --> 01:14:02,000
这个是英文的

2631
01:14:02,000 --> 01:14:03,000
还有中文的

2632
01:14:03,000 --> 01:14:04,000
有个古老的

2633
01:14:04,000 --> 01:14:05,000
有的

2634
01:14:05,000 --> 01:14:06,000
点准字库

2635
01:14:06,000 --> 01:14:08,000
包括后来

2636
01:14:08,000 --> 01:14:09,000
对

2637
01:14:09,000 --> 01:14:11,000
点准的重点在 Windows

2638
01:14:11,000 --> 01:14:12,000
应该是 7 之前

2639
01:14:12,000 --> 01:14:13,000
中意中

2640
01:14:13,000 --> 01:14:15,000
是什么中意中标送题吗

2641
01:14:15,000 --> 01:14:18,000
现在包括很多的那个

2642
01:14:18,000 --> 01:14:21,000
现在很多中国的 LED 的那个

2643
01:14:21,000 --> 01:14:22,000
显示屏上还会

2644
01:14:22,000 --> 01:14:23,000
还会使用这种

2645
01:14:23,000 --> 01:14:24,000
没错没错

2646
01:14:24,000 --> 01:14:25,000
有点那套

2647
01:14:25,000 --> 01:14:28,000
有那个欢迎领导立陵访问之类的那个

2648
01:14:28,000 --> 01:14:29,000
就是

2649
01:14:30,000 --> 01:14:32,000
那个红色的 LED 灯屏幕

2650
01:14:33,000 --> 01:14:34,000
大家做地铁的

2651
01:14:34,000 --> 01:14:35,000
地铁上面都是

2652
01:14:35,000 --> 01:14:37,000
就是那显示的时候

2653
01:14:37,000 --> 01:14:38,000
对

2654
01:14:38,000 --> 01:14:40,000
它那个就是那种小型的那个 LED

2655
01:14:40,000 --> 01:14:41,000
都是那样的

2656
01:14:41,000 --> 01:14:43,000
就那个那个中意那个送题

2657
01:14:43,000 --> 01:14:47,000
应该是有 9 像素到 16 个像素的

2658
01:14:47,000 --> 01:14:48,000
就是每一个就 90

2659
01:14:48,000 --> 01:14:49,000
12

2660
01:14:49,000 --> 01:14:50,000
13

2661
01:14:50,000 --> 01:14:52,000
我记得对小是 11 吧

2662
01:14:52,000 --> 01:14:54,000
是 9 像素是那个

2663
01:14:54,000 --> 01:14:56,000
9 像素只有那个

2664
01:14:57,000 --> 01:14:59,000
台湾那套字体叫什么

2665
01:14:59,000 --> 01:15:00,000
嗯

2666
01:15:01,000 --> 01:15:04,000
名流体可以支持到 9 像素

2667
01:15:04,000 --> 01:15:06,000
就是中意是从 11 像素开始

2668
01:15:06,000 --> 01:15:07,000
11 个像素是吧

2669
01:15:07,000 --> 01:15:08,000
还是 11 到 16

2670
01:15:08,000 --> 01:15:09,000
应该是起的我记得

2671
01:15:09,000 --> 01:15:10,000
对

2672
01:15:11,000 --> 01:15:14,000
然后比 10 小的话有些字就卡起来了

2673
01:15:14,000 --> 01:15:15,000
但是好像

2674
01:15:15,000 --> 01:15:17,000
完全一团糊了吗

2675
01:15:17,000 --> 01:15:18,000
对

2676
01:15:18,000 --> 01:15:19,000
因为最早时候

2677
01:15:19,000 --> 01:15:22,000
最早时候我们在做那个网页的时候

2678
01:15:22,000 --> 01:15:24,000
就大家手工指定说这个最小是

2679
01:15:24,000 --> 01:15:26,000
11 个 pixel 应该是 10 点

2680
01:15:26,000 --> 01:15:27,000
等一下我想纠正一个细节

2681
01:15:27,000 --> 01:15:30,000
就是那个不叫名流体吧是吧

2682
01:15:30,000 --> 01:15:31,000
那个叫名粒

2683
01:15:31,000 --> 01:15:32,000
然后有一个 U

2684
01:15:32,000 --> 01:15:33,000
这

2685
01:15:33,000 --> 01:15:34,000
对

2686
01:15:35,000 --> 01:15:36,000
名粒 U

2687
01:15:36,000 --> 01:15:37,000
U

2688
01:15:37,000 --> 01:15:38,000
对

2689
01:15:39,000 --> 01:15:41,000
我游往就是什么了

2690
01:15:41,000 --> 01:15:42,000
但是它是一个特殊的

2691
01:15:42,000 --> 01:15:43,000
那个 U 代表什么

2692
01:15:43,000 --> 01:15:46,000
它那个 U 是 UI 的意思吗

2693
01:15:46,000 --> 01:15:47,000
还是什么

2694
01:15:47,000 --> 01:15:48,000
就因为当时 Windows

2695
01:15:48,000 --> 01:15:50,000
好像对文件名的长度有个限制

2696
01:15:50,000 --> 01:15:53,000
所以它没法完全写自体名车

2697
01:15:53,000 --> 01:15:55,000
原来是这样

2698
01:15:56,000 --> 01:15:59,000
怪不得那个小时候觉得那个 U 要大写

2699
01:15:59,000 --> 01:16:00,000
就很奇怪

2700
01:16:00,000 --> 01:16:01,000
Ui 还是什么

2701
01:16:01,000 --> 01:16:03,000
U 后面的不知道是什么了

2702
01:16:04,000 --> 01:16:06,000
那后来我记得 Windows 那个中意送

2703
01:16:06,000 --> 01:16:09,000
应该是到 Windows 7 还是 8 的时候

2704
01:16:09,000 --> 01:16:12,000
它把那个小字号的那个字体

2705
01:16:12,000 --> 01:16:14,000
也默认用那个雅黑了吗

2706
01:16:14,000 --> 01:16:17,000
就是中文中文的那个字体

2707
01:16:17,000 --> 01:16:18,000
用雅黑来显示

2708
01:16:18,000 --> 01:16:20,000
然后那个中意

2709
01:16:20,000 --> 01:16:22,000
感觉雅黑是从 Windows

2710
01:16:22,000 --> 01:16:23,000
Vista 开始的

2711
01:16:23,000 --> 01:16:26,000
你问的 Vista 也是用雅黑了吗

2712
01:16:26,000 --> 01:16:28,000
有雅黑和小字号用雅黑是两个概念

2713
01:16:28,000 --> 01:16:30,000
应该说 Vista 的时候

2714
01:16:30,000 --> 01:16:31,000
中文的

2715
01:16:32,000 --> 01:16:34,000
简体中文这边的 Ui 字体

2716
01:16:34,000 --> 01:16:35,000
还是中意送体

2717
01:16:36,000 --> 01:16:40,000
但是雅黑已经随系统搭载了

2718
01:16:40,000 --> 01:16:41,000
还是随 Office 搭载

2719
01:16:41,000 --> 01:16:42,000
我还记得签

2720
01:16:42,000 --> 01:16:43,000
有了吗

2721
01:16:43,000 --> 01:16:46,000
雅黑应该是随 Windows 7 还是 Vista 发布的

2722
01:16:46,000 --> 01:16:49,000
然后它有一套那个 C 字头的字体

2723
01:16:49,000 --> 01:16:50,000
Caliberia

2724
01:16:50,000 --> 01:16:52,000
Consolus 那倒是随那个

2725
01:16:52,000 --> 01:16:55,000
对那个随 Windows 7 还是

2726
01:16:55,000 --> 01:16:56,000
那是 ClearView

2727
01:16:57,000 --> 01:16:59,000
对那是随 ClearView 技术

2728
01:16:59,000 --> 01:17:00,000
对对对

2729
01:17:00,000 --> 01:17:01,000
所发布

2730
01:17:01,000 --> 01:17:02,000
弄进去的

2731
01:17:02,000 --> 01:17:04,000
然后但是当然有一个具体原因

2732
01:17:04,000 --> 01:17:07,000
就是因为当时就是 Windows

2733
01:17:07,000 --> 01:17:08,000
用 Windows 的那些 PC

2734
01:17:08,000 --> 01:17:10,000
很多还是那种低分辨率的屏幕

2735
01:17:11,000 --> 01:17:15,000
可能是不太适合用那种小字的

2736
01:17:15,000 --> 01:17:16,000
这个显示

2737
01:17:16,000 --> 01:17:19,000
非点针自酷的中文字体了

2738
01:17:19,000 --> 01:17:22,000
但后来因为现在这个屏幕分辨率也高些了

2739
01:17:22,000 --> 01:17:24,000
有很多这个 Windows

2740
01:17:24,000 --> 01:17:27,000
那个笔记本特别是什么

2741
01:17:27,000 --> 01:17:28,000
高分屏

2742
01:17:28,000 --> 01:17:29,000
Sanper Retina 那么高

2743
01:17:29,000 --> 01:17:30,000
但是也有很多事了

2744
01:17:30,000 --> 01:17:32,000
然后有这个时候在显示

2745
01:17:32,000 --> 01:17:35,000
是这个亚黑小字号就问题不是那么大了

2746
01:17:37,000 --> 01:17:39,000
所以我一直想和大家澄清一点

2747
01:17:39,000 --> 01:17:40,000
就是说

2748
01:17:40,000 --> 01:17:41,000
虽然我们说

2749
01:17:41,000 --> 01:17:44,000
字体文件里面有我们有点针字

2750
01:17:44,000 --> 01:17:45,000
我们有实量

2751
01:17:45,000 --> 01:17:46,000
有轮廓字

2752
01:17:46,000 --> 01:17:48,000
但并不是说就是

2753
01:17:48,000 --> 01:17:50,000
这个 Font 肯定就是点针字

2754
01:17:50,000 --> 01:17:51,000
有的它实量字

2755
01:17:51,000 --> 01:17:53,000
像刚才说的 Windows

2756
01:17:53,000 --> 01:17:55,000
它默认的 SIMSONG

2757
01:17:55,000 --> 01:17:56,000
就是中易送底

2758
01:17:56,000 --> 01:17:57,000
它两套都有

2759
01:17:57,000 --> 01:17:58,000
它其实那个 Font 文件里面

2760
01:17:58,000 --> 01:18:01,000
它两种的字体数据都有

2761
01:18:01,000 --> 01:18:02,000
然后呢

2762
01:18:02,000 --> 01:18:04,000
由系统来调用

2763
01:18:04,000 --> 01:18:06,000
当在小字号的时候

2764
01:18:06,000 --> 01:18:10,000
它就把那些点针的数据拿出来显示

2765
01:18:10,000 --> 01:18:11,000
在大字号的话

2766
01:18:11,000 --> 01:18:14,000
它把轮廓数据拿出来显示

2767
01:18:14,000 --> 01:18:15,000
在 Font 里面

2768
01:18:15,000 --> 01:18:18,000
它里面既有点针的数据

2769
01:18:18,000 --> 01:18:20,000
又有轮廓的数据

2770
01:18:20,000 --> 01:18:21,000
或者说

2771
01:18:21,000 --> 01:18:23,000
因为轮廓数据

2772
01:18:23,000 --> 01:18:25,000
它有一个叫做 Hinting 的一个概念

2773
01:18:25,000 --> 01:18:26,000
就是说告诉你说

2774
01:18:26,000 --> 01:18:28,000
这个时候如果你遇到

2775
01:18:28,000 --> 01:18:29,000
一些疑难的时候

2776
01:18:29,000 --> 01:18:30,000
你怎么去弄

2777
01:18:30,000 --> 01:18:31,000
因为毕竟你把轮廓

2778
01:18:31,000 --> 01:18:32,000
画在一个

2779
01:18:32,000 --> 01:18:33,000
就是平面的一个矩阵里面

2780
01:18:33,000 --> 01:18:34,000
它有些时候

2781
01:18:34,000 --> 01:18:36,000
因为轮廓的曲线是一个

2782
01:18:36,000 --> 01:18:39,000
数据是无限大小的

2783
01:18:39,000 --> 01:18:40,000
没有粗细的

2784
01:18:40,000 --> 01:18:42,000
但是你画到点针的时候

2785
01:18:42,000 --> 01:18:45,000
还是会有一些左右站哪一格的问题

2786
01:18:45,000 --> 01:18:47,000
这会有一些叫做 Hinting 的机制

2787
01:18:47,000 --> 01:18:48,000
就告诉你说这个时候

2788
01:18:48,000 --> 01:18:49,000
你应该放到左边

2789
01:18:49,000 --> 01:18:50,000
还是右边 上面还是下面

2790
01:18:50,000 --> 01:18:52,000
如果从这个角度来讲

2791
01:18:52,000 --> 01:18:53,000
点针字库的话

2792
01:18:53,000 --> 01:18:56,000
可以说是一颗比较极端的 Hinting 的例子吧

2793
01:18:57,000 --> 01:18:59,000
接着你说到 Hinting 的话

2794
01:18:59,000 --> 01:19:01,000
我们干脆给他翻译成叫

2795
01:19:01,000 --> 01:19:02,000
渲染提示吧

2796
01:19:02,000 --> 01:19:04,000
这样大家可能会比较清楚一些

2797
01:19:05,000 --> 01:19:06,000
就是说我

2798
01:19:07,000 --> 01:19:09,000
即便你在那个

2799
01:19:09,000 --> 01:19:10,000
在 Fontre 里面

2800
01:19:10,000 --> 01:19:12,000
你存足的是数学的

2801
01:19:12,000 --> 01:19:14,000
史量的轮廓

2802
01:19:14,000 --> 01:19:16,000
但是你最后显示到这个屏幕上

2803
01:19:16,000 --> 01:19:18,000
屏幕毕竟它是一个

2804
01:19:19,000 --> 01:19:21,000
删革化的一个东西

2805
01:19:21,000 --> 01:19:23,000
所以你还要把

2806
01:19:23,000 --> 01:19:24,000
那个你还要把

2807
01:19:24,000 --> 01:19:25,000
那个我一直念炸

2808
01:19:26,000 --> 01:19:27,000
炸

2809
01:19:27,000 --> 01:19:28,000
但是三格还炸

2810
01:19:28,000 --> 01:19:29,000
对我

2811
01:19:29,000 --> 01:19:30,000
我跟郑云还研究过这个东西

2812
01:19:30,000 --> 01:19:31,000
哦 好吧

2813
01:19:31,000 --> 01:19:32,000
结论是什么

2814
01:19:33,000 --> 01:19:34,000
结论是

2815
01:19:34,000 --> 01:19:36,000
这个字的读音是一个

2816
01:19:36,000 --> 01:19:38,000
这个字的正音规则是一个

2817
01:19:38,000 --> 01:19:40,000
还是念三格炸卖

2818
01:19:40,000 --> 01:19:41,000
因为我跟他翻牌了

2819
01:19:41,000 --> 01:19:42,000
后面还大使烂了

2820
01:19:42,000 --> 01:19:43,000
对

2821
01:19:43,000 --> 01:19:44,000
因为

2822
01:19:44,000 --> 01:19:45,000
我觉得严格来说

2823
01:19:45,000 --> 01:19:47,000
炸才是他的标准音吧

2824
01:19:47,000 --> 01:19:50,000
但是他在很多地方都被物读成善之

2825
01:19:50,000 --> 01:19:51,000
所以渐渐的好像

2826
01:19:51,000 --> 01:19:52,000
四点的正音规则

2827
01:19:52,000 --> 01:19:54,000
开始倾向于将一些

2828
01:19:54,000 --> 01:19:56,000
经常被念成山的数语

2829
01:19:56,000 --> 01:19:58,000
直接标准的是山这个音

2830
01:19:58,000 --> 01:19:59,000
山格

2831
01:19:59,000 --> 01:20:00,000
那山格化是什么

2832
01:20:00,000 --> 01:20:01,000
对我现在是这么逻辑

2833
01:20:01,000 --> 01:20:02,000
就是如果

2834
01:20:02,000 --> 01:20:04,000
但凡是涉及到电脑相关的

2835
01:20:04,000 --> 01:20:05,000
就是山

2836
01:20:05,000 --> 01:20:06,000
然后但凡是涉及到

2837
01:20:06,000 --> 01:20:07,000
实体的那个

2838
01:20:07,000 --> 01:20:08,000
那个泥巴篮子

2839
01:20:08,000 --> 01:20:09,000
炸篮子

2840
01:20:09,000 --> 01:20:10,000
就是炸篮

2841
01:20:10,000 --> 01:20:11,000
反正你知道

2842
01:20:11,000 --> 01:20:12,000
我们要分一下应用场景

2843
01:20:12,000 --> 01:20:13,000
那叫什么

2844
01:20:13,000 --> 01:20:14,000
Restoration 是吗

2845
01:20:14,000 --> 01:20:15,000
那英文怎么念来的

2846
01:20:15,000 --> 01:20:16,000
Restorization

2847
01:20:17,000 --> 01:20:18,000
Restorize

2848
01:20:18,000 --> 01:20:19,000
Restorize

2849
01:20:19,000 --> 01:20:20,000
对 就是要

2850
01:20:20,000 --> 01:20:21,000
因为

2851
01:20:21,000 --> 01:20:23,000
就涉及到从轮廓信息

2852
01:20:23,000 --> 01:20:24,000
怎么样给它套到那个

2853
01:20:24,000 --> 01:20:25,000
像是举证上面吗

2854
01:20:25,000 --> 01:20:27,000
这个网格上去

2855
01:20:27,000 --> 01:20:28,000
举证上去

2856
01:20:28,000 --> 01:20:30,000
所以它不可能是套的

2857
01:20:30,000 --> 01:20:31,000
真正好的吧

2858
01:20:31,000 --> 01:20:32,000
那

2859
01:20:32,000 --> 01:20:35,000
那刚好就套在那个举格半点

2860
01:20:35,000 --> 01:20:36,000
那我是往上挪呢

2861
01:20:36,000 --> 01:20:37,000
还是往下挪呢

2862
01:20:37,000 --> 01:20:38,000
这有时候就是

2863
01:20:38,000 --> 01:20:41,000
就是要渲染引擎来做这个事情

2864
01:20:41,000 --> 01:20:42,000
那

2865
01:20:42,000 --> 01:20:43,000
Hinting

2866
01:20:43,000 --> 01:20:44,000
这个渲染提示呢

2867
01:20:44,000 --> 01:20:45,000
就是来

2868
01:20:45,000 --> 01:20:46,000
来进行这样一个工作

2869
01:20:46,000 --> 01:20:47,000
渲染提示有两种

2870
01:20:47,000 --> 01:20:48,000
方式

2871
01:20:48,000 --> 01:20:49,000
一种是叫做 Auto Hinting

2872
01:20:49,000 --> 01:20:50,000
就是在那个渲染引擎里面

2873
01:20:50,000 --> 01:20:51,000
它提供了一个

2874
01:20:51,000 --> 01:20:52,000
它通用的

2875
01:20:52,000 --> 01:20:54,000
一个 Hinting 的一个算法

2876
01:20:54,000 --> 01:20:55,000
然后还有一个就是

2877
01:20:55,000 --> 01:20:56,000
直接嵌入到

2878
01:20:56,000 --> 01:20:57,000
字体内部的

2879
01:20:57,000 --> 01:20:58,000
就是说告诉你说

2880
01:20:58,000 --> 01:20:59,000
轩然引擎你

2881
01:20:59,000 --> 01:21:00,000
虽然得出的是那个结论

2882
01:21:00,000 --> 01:21:01,000
但是我

2883
01:21:01,000 --> 01:21:02,000
一个字体设计师

2884
01:21:02,000 --> 01:21:03,000
我告诉你

2885
01:21:03,000 --> 01:21:05,000
我此处应该是这样

2886
01:21:06,000 --> 01:21:07,000
我觉得那个我来

2887
01:21:07,000 --> 01:21:08,000
我来再补充一点

2888
01:21:08,000 --> 01:21:09,000
跟那个

2889
01:21:09,000 --> 01:21:10,000
刚才说的这个

2890
01:21:10,000 --> 01:21:11,000
这个渲染提示有关的东西

2891
01:21:11,000 --> 01:21:12,000
就首先我觉得

2892
01:21:12,000 --> 01:21:13,000
这里有一个问题

2893
01:21:13,000 --> 01:21:14,000
就是说

2894
01:21:14,000 --> 01:21:15,000
一个

2895
01:21:15,000 --> 01:21:16,000
实量的轮廓

2896
01:21:16,000 --> 01:21:18,000
它经过了这样一个

2897
01:21:18,000 --> 01:21:20,000
山格化的过程中

2898
01:21:20,000 --> 01:21:21,000
它肯定不可能是

2899
01:21:21,000 --> 01:21:22,000
精确的显示

2900
01:21:22,000 --> 01:21:24,000
它会有一种施针吗

2901
01:21:24,000 --> 01:21:25,000
那么这其实是一个

2902
01:21:25,000 --> 01:21:26,000
下采样的过程

2903
01:21:26,000 --> 01:21:28,000
如果说用计算机的数据来说

2904
01:21:28,000 --> 01:21:29,000
所以它这里有一个

2905
01:21:29,000 --> 01:21:31,000
有一个信号处理的

2906
01:21:31,000 --> 01:21:34,000
这个数据叫做混迭

2907
01:21:34,000 --> 01:21:36,000
就是说当你从一个

2908
01:21:36,000 --> 01:21:37,000
模拟的信号

2909
01:21:37,000 --> 01:21:39,000
或者说一个非常高频的信号

2910
01:21:39,000 --> 01:21:40,000
把它采样成一个

2911
01:21:40,000 --> 01:21:41,000
低频的信号的时候

2912
01:21:41,000 --> 01:21:42,000
这个信号就会发生一个混迭

2913
01:21:42,000 --> 01:21:43,000
所以我们有一个数据

2914
01:21:43,000 --> 01:21:44,000
叫反混迭

2915
01:21:44,000 --> 01:21:45,000
但是这个数据在

2916
01:21:45,000 --> 01:21:47,000
那个字体的这个处理中

2917
01:21:47,000 --> 01:21:49,000
经常被翻译成叫什么

2918
01:21:49,000 --> 01:21:50,000
抗拒识

2919
01:21:50,000 --> 01:21:52,000
就是 antealis

2920
01:21:52,000 --> 01:21:53,000
但是 antealis

2921
01:21:53,000 --> 01:21:54,000
这个词里面

2922
01:21:54,000 --> 01:21:55,000
没有拒识这个字

2923
01:21:55,000 --> 01:21:56,000
它的标准翻译

2924
01:21:56,000 --> 01:21:57,000
应该翻译成

2925
01:21:57,000 --> 01:21:58,000
抗混迭

2926
01:21:58,000 --> 01:21:59,000
或者说反混迭

2927
01:21:59,000 --> 01:22:00,000
比如说

2928
01:22:00,000 --> 01:22:01,000
抗拒识有点像一个意义

2929
01:22:01,000 --> 01:22:02,000
就是

2930
01:22:02,000 --> 01:22:03,000
对对对

2931
01:22:03,000 --> 01:22:04,000
它解释了这个东西

2932
01:22:04,000 --> 01:22:05,000
最终是要干嘛

2933
01:22:05,000 --> 01:22:06,000
对 但是

2934
01:22:06,000 --> 01:22:07,000
所以实际上我们就知道

2935
01:22:07,000 --> 01:22:08,000
我觉得翻译成

2936
01:22:08,000 --> 01:22:09,000
抗拒识有点误导

2937
01:22:09,000 --> 01:22:10,000
因为很多时候

2938
01:22:10,000 --> 01:22:11,000
antealis 做的

2939
01:22:11,000 --> 01:22:12,000
并不是一件

2940
01:22:12,000 --> 01:22:13,000
抗拒识的事情

2941
01:22:13,000 --> 01:22:14,000
它可能跟拒识

2942
01:22:14,000 --> 01:22:15,000
这个事情完全没有关系

2943
01:22:16,000 --> 01:22:17,000
有的时候抗拒识

2944
01:22:17,000 --> 01:22:18,000
系统会有一套

2945
01:22:18,000 --> 01:22:19,000
自己固有的方式

2946
01:22:19,000 --> 01:22:20,000
来汇制这个曲线

2947
01:22:20,000 --> 01:22:21,000
比如说是什么

2948
01:22:21,000 --> 01:22:23,000
灰度层面的抗拒识之类的

2949
01:22:23,000 --> 01:22:25,000
但是它并不是完全解决

2950
01:22:25,000 --> 01:22:27,000
这个抗混迭的这件事情

2951
01:22:27,000 --> 01:22:29,000
那么微软想出来的

2952
01:22:29,000 --> 01:22:30,000
这个 hinting 的技术

2953
01:22:30,000 --> 01:22:31,000
它是在这个

2954
01:22:31,000 --> 01:22:33,000
通用的抗拒识的

2955
01:22:33,000 --> 01:22:34,000
这种思路上

2956
01:22:34,000 --> 01:22:35,000
再加了一层

2957
01:22:35,000 --> 01:22:36,000
比如说

2958
01:22:36,000 --> 01:22:38,000
它将某一些曲线的形状

2959
01:22:38,000 --> 01:22:40,000
进行了一些便意

2960
01:22:40,000 --> 01:22:41,000
这个便意很可能是

2961
01:22:41,000 --> 01:22:43,000
不规则的便意

2962
01:22:43,000 --> 01:22:44,000
是需要人工去指导的

2963
01:22:44,000 --> 01:22:45,000
便意

2964
01:22:45,000 --> 01:22:46,000
所以它给它加了

2965
01:22:46,000 --> 01:22:47,000
一个 hinting 的信息

2966
01:22:47,000 --> 01:22:49,000
就是一个引导

2967
01:22:49,000 --> 01:22:51,000
或者说一个什么提示的信息

2968
01:22:51,000 --> 01:22:53,000
来告诉这个操作系统

2969
01:22:53,000 --> 01:22:54,000
怎样去改变

2970
01:22:54,000 --> 01:22:55,000
这个轮廓的形状意

2971
01:22:55,000 --> 01:22:56,000
使得它能显示得

2972
01:22:56,000 --> 01:22:58,000
更加的完美一点

2973
01:22:58,000 --> 01:23:00,000
就大致上是这样的过程

2974
01:23:00,000 --> 01:23:01,000
但这引入了一个

2975
01:23:01,000 --> 01:23:02,000
哲学的一个问题

2976
01:23:02,000 --> 01:23:04,000
一个设计哲学的问题

2977
01:23:04,000 --> 01:23:05,000
就是说在 Windows 上

2978
01:23:05,000 --> 01:23:07,000
它因为最开始的时候

2979
01:23:07,000 --> 01:23:08,000
长期来看

2980
01:23:08,000 --> 01:23:10,000
是相当长的一段时期

2981
01:23:10,000 --> 01:23:11,000
我们在用那种

2982
01:23:11,000 --> 01:23:12,000
最低分辨率的

2983
01:23:12,000 --> 01:23:13,000
显示设备

2984
01:23:13,000 --> 01:23:14,000
就是可能只有

2985
01:23:14,000 --> 01:23:16,000
我记得我最早的一个图写显示

2986
01:23:16,000 --> 01:23:19,000
是一个 640 x 480 的 CRT

2987
01:23:19,000 --> 01:23:20,000
对吧

2988
01:23:20,000 --> 01:23:21,000
然后后来大量的

2989
01:23:21,000 --> 01:23:22,000
最早的程式

2990
01:23:22,000 --> 01:23:23,000
难道不应该是在电视吗

2991
01:23:23,000 --> 01:23:24,000
对

2992
01:23:24,000 --> 01:23:25,000
CRT

2993
01:23:25,000 --> 01:23:26,000
80 x 40 的字符

2994
01:23:26,000 --> 01:23:27,000
那个太早了

2995
01:23:27,000 --> 01:23:29,000
小爸玩起了无穷啊

2996
01:23:29,000 --> 01:23:32,000
就是说有故意的时候

2997
01:23:32,000 --> 01:23:34,000
后来是升级成一个什么

2998
01:23:34,000 --> 01:23:37,000
800 x 600 像素的

2999
01:23:37,000 --> 01:23:38,000
一个什么索尼的什么

3000
01:23:38,000 --> 01:23:39,000
什么特护龙

3001
01:23:39,000 --> 01:23:42,000
或者什么龙的一个屏幕

3002
01:23:43,000 --> 01:23:44,000
我忘了一个名字了

3003
01:23:44,000 --> 01:23:46,000
然后再后来有了那个 LCD

3004
01:23:46,000 --> 01:23:47,000
我记得当时标份是

3005
01:23:47,000 --> 01:23:49,000
1024 x 768 的嘛

3006
01:23:49,000 --> 01:23:51,000
然后已经是非常晚静了

3007
01:23:51,000 --> 01:23:53,000
才出现所谓的这个

3008
01:23:53,000 --> 01:23:55,000
10440 当时自己叫做

3009
01:23:55,000 --> 01:23:58,000
高分屏的一种宽屏目了嘛

3010
01:23:58,000 --> 01:24:00,000
但其实现在

3011
01:24:00,000 --> 01:24:01,000
在那个时候

3012
01:24:01,000 --> 01:24:02,000
他选择了说

3013
01:24:02,000 --> 01:24:04,000
我们在这个有限的物理

3014
01:24:04,000 --> 01:24:07,000
基础上尽量显示清楚嘛

3015
01:24:07,000 --> 01:24:08,000
所以清楚就是说

3016
01:24:08,000 --> 01:24:09,000
笔划分明

3017
01:24:09,000 --> 01:24:11,000
不要出现磨磨糊糊的那种效果

3018
01:24:11,000 --> 01:24:13,000
所以导致刚刚我们一个是说

3019
01:24:13,000 --> 01:24:14,000
这个中易送

3020
01:24:14,000 --> 01:24:15,000
全部是点证小字号的时候

3021
01:24:15,000 --> 01:24:17,000
全部是点证智库

3022
01:24:17,000 --> 01:24:19,000
还有像那个

3023
01:24:19,000 --> 01:24:21,000
像那个微软字的那个字体

3024
01:24:21,000 --> 01:24:23,000
Ariel 和 Verdana

3025
01:24:23,000 --> 01:24:25,000
当时是在网页排卖上用的

3026
01:24:25,000 --> 01:24:27,000
比较多显示文字的嘛

3027
01:24:27,000 --> 01:24:28,000
还有那个叫做 Georgia

3028
01:24:28,000 --> 01:24:30,000
他们都在

3029
01:24:30,000 --> 01:24:32,000
非就没有开抗拒绝的情况下

3030
01:24:32,000 --> 01:24:33,000
显示的还是一种

3031
01:24:33,000 --> 01:24:34,000
就是你可以看得出明显

3032
01:24:34,000 --> 01:24:36,000
它是一颗一颗小小素

3033
01:24:36,000 --> 01:24:39,000
构成的这么一个一个字符

3034
01:24:39,000 --> 01:24:40,000
但是后来

3035
01:24:40,000 --> 01:24:42,000
但是你对比一下在那个 Mac 上面

3036
01:24:42,000 --> 01:24:43,000
它说这个只是

3037
01:24:43,000 --> 01:24:45,000
就是显示器分辨率低

3038
01:24:45,000 --> 01:24:47,000
这是一个暂时的物理限制

3039
01:24:47,000 --> 01:24:49,000
时间长它会解决的嘛

3040
01:24:49,000 --> 01:24:51,000
那如果我们从长远的角度来看

3041
01:24:51,000 --> 01:24:53,000
我们不要去做那么太多的

3042
01:24:53,000 --> 01:24:54,000
叫做什么来的

3043
01:24:54,000 --> 01:24:55,000
局部细节优化吧

3044
01:24:55,000 --> 01:24:57,000
局部优化就是 Local Optimization

3045
01:24:57,000 --> 01:24:59,000
但是就用一种通用的方法去显示

3046
01:24:59,000 --> 01:25:01,000
但虽然看起来就是有点磨磨糊糊的

3047
01:25:01,000 --> 01:25:03,000
但是现在看来

3048
01:25:03,000 --> 01:25:05,000
这个音乐屏幕分辨率上上去了嘛

3049
01:25:05,000 --> 01:25:06,000
反而是我们觉得

3050
01:25:06,000 --> 01:25:09,000
Mac 上面显示的那套字符的

3051
01:25:09,000 --> 01:25:10,000
比较漂亮

3052
01:25:10,000 --> 01:25:12,000
因为它更加终于反映出

3053
01:25:12,000 --> 01:25:15,000
自己本身的设计师的一个形状嘛

3054
01:25:15,000 --> 01:25:18,000
这是一个非常重要的一个

3055
01:25:18,000 --> 01:25:22,000
设计哲学的不同取向问题嘛

3056
01:25:22,000 --> 01:25:24,000
一个是在设计

3057
01:25:24,000 --> 01:25:28,000
如何保持自体的设计

3058
01:25:28,000 --> 01:25:31,000
和如何保持清晰的显示这样

3059
01:25:31,000 --> 01:25:33,000
两个取向中

3060
01:25:33,000 --> 01:25:35,000
Windows 它取向的是

3061
01:25:35,000 --> 01:25:37,000
尽量让它显示的清晰

3062
01:25:37,000 --> 01:25:40,000
所以它不惜牺牲

3063
01:25:40,000 --> 01:25:41,000
去牺牲设计

3064
01:25:41,000 --> 01:25:43,000
它把那个字改掉

3065
01:25:43,000 --> 01:25:44,000
它会把这个显示的像素

3066
01:25:44,000 --> 01:25:45,000
跟挪来挪去

3067
01:25:45,000 --> 01:25:47,000
它特别看重 Hinting

3068
01:25:47,000 --> 01:25:49,000
特别看重它的渲染提示

3069
01:25:49,000 --> 01:25:50,000
然后用那个渲染

3070
01:25:50,000 --> 01:25:51,000
然后去挪来挪去

3071
01:25:51,000 --> 01:25:54,000
把这个字挪去匹配

3072
01:25:54,000 --> 01:25:55,000
它的显示的像素

3073
01:25:55,000 --> 01:25:58,000
达到像素的自的显示的清晰度

3074
01:25:58,000 --> 01:26:00,000
但是牺牲了文字的设计形状

3075
01:26:00,000 --> 01:26:01,000
而 Mac 呢

3076
01:26:01,000 --> 01:26:03,000
它是为了保证

3077
01:26:03,000 --> 01:26:05,000
这个字体原来的形状

3078
01:26:05,000 --> 01:26:07,000
它可能有时候牺牲

3079
01:26:07,000 --> 01:26:09,000
字体的清晰度

3080
01:26:09,000 --> 01:26:11,000
虽然一暂时

3081
01:26:11,000 --> 01:26:12,000
对

3082
01:26:12,000 --> 01:26:14,000
但是比如说在老的屏幕上

3083
01:26:14,000 --> 01:26:16,000
它可能显示回解比较模糊

3084
01:26:16,000 --> 01:26:18,000
但是随着硬件的

3085
01:26:18,000 --> 01:26:20,000
现在逐步的发展

3086
01:26:20,000 --> 01:26:22,000
它依然能保持

3087
01:26:22,000 --> 01:26:23,000
它这个字体设计

3088
01:26:23,000 --> 01:26:25,000
它原来的一个造型和形状

3089
01:26:25,000 --> 01:26:26,000
对

3090
01:26:26,000 --> 01:26:28,000
现在我们用的那些智能手机

3091
01:26:28,000 --> 01:26:29,000
都是高分频

3092
01:26:29,000 --> 01:26:32,000
基本上就不存在这个问题

3093
01:26:34,000 --> 01:26:35,000
所以 Windows

3094
01:26:35,000 --> 01:26:37,000
还是工程师做出来的

3095
01:26:37,000 --> 01:26:39,000
做 Mac 的都是艺术家

3096
01:26:39,000 --> 01:26:40,000
就是这一点

3097
01:26:40,000 --> 01:26:42,000
你要是作为一个

3098
01:26:42,000 --> 01:26:43,000
字体设计师

3099
01:26:43,000 --> 01:26:44,000
就怎么搞的

3100
01:26:44,000 --> 01:26:45,000
对吧

3101
01:26:45,000 --> 01:26:48,000
我我的字全部都改掉了

3102
01:26:48,000 --> 01:26:49,000
都不是我的字了

3103
01:26:49,000 --> 01:26:50,000
就跟着

3104
01:26:51,000 --> 01:26:52,000
对没办法

3105
01:26:52,000 --> 01:26:55,000
也不能完全这么说吧

3106
01:26:55,000 --> 01:26:57,000
因为其实早期在

3107
01:26:57,000 --> 01:26:58,000
三四十年

3108
01:26:58,000 --> 01:26:59,000
二十二十几

3109
01:26:59,000 --> 01:27:00,000
三四十年代的时候

3110
01:27:00,000 --> 01:27:02,000
不是也有什么

3111
01:27:02,000 --> 01:27:05,000
Great Based Typography

3112
01:27:05,000 --> 01:27:06,000
本身就是在

3113
01:27:06,000 --> 01:27:08,000
是在一个矩正格上

3114
01:27:08,000 --> 01:27:09,000
设计的字体

3115
01:27:09,000 --> 01:27:11,000
然后微软早期

3116
01:27:11,000 --> 01:27:12,000
请来了自己的设计师

3117
01:27:12,000 --> 01:27:13,000
其实也是

3118
01:27:13,000 --> 01:27:15,000
一上来就明确地知道

3119
01:27:15,000 --> 01:27:17,000
自己需要设计一套

3120
01:27:17,000 --> 01:27:20,000
在当时的高分频

3121
01:27:20,000 --> 01:27:22,000
现在的低分频上面

3122
01:27:22,000 --> 01:27:24,000
能够清晰显示的字体

3123
01:27:24,000 --> 01:27:26,000
所以这其实也是他们自己的选择

3124
01:27:27,000 --> 01:27:30,000
就是在当时的设计的制约上

3125
01:27:30,000 --> 01:27:32,000
然后尽量去做好的设计吧

3126
01:27:32,000 --> 01:27:34,000
因为其实每个时代

3127
01:27:34,000 --> 01:27:35,000
都有他们自己的

3128
01:27:35,000 --> 01:27:37,000
字体设计的制约

3129
01:27:37,000 --> 01:27:38,000
以前在千字时代

3130
01:27:38,000 --> 01:27:39,000
其实也有

3131
01:27:39,000 --> 01:27:40,000
其实都是多的少

3132
01:27:40,000 --> 01:27:41,000
也有些字的

3133
01:27:41,000 --> 01:27:42,000
比如说早期

3134
01:27:42,000 --> 01:27:44,000
蓝发口什么的这种东西

3135
01:27:44,000 --> 01:27:46,000
都是在千字时代

3136
01:27:46,000 --> 01:27:47,000
才出现那种

3137
01:27:47,000 --> 01:27:48,000
为了对抗

3138
01:27:48,000 --> 01:27:49,000
技术上的缺陷

3139
01:27:49,000 --> 01:27:51,000
能够出现那些特征吗

3140
01:27:51,000 --> 01:27:53,000
有默的叫什么

3141
01:27:53,000 --> 01:27:55,000
进到别的地方去的问题

3142
01:27:55,000 --> 01:27:56,000
Kirney 还有

3143
01:27:56,000 --> 01:27:57,000
合体字

3144
01:27:59,000 --> 01:28:01,000
汉字的喇叭口一开始

3145
01:28:01,000 --> 01:28:02,000
是为了抗磨损

3146
01:28:02,000 --> 01:28:04,000
应该是在照牌时代

3147
01:28:04,000 --> 01:28:06,000
防止折角的地方

3148
01:28:06,000 --> 01:28:08,000
过于圆润

3149
01:28:09,000 --> 01:28:11,000
照牌是将一个小底片

3150
01:28:11,000 --> 01:28:13,000
进行缩放的过程

3151
01:28:15,000 --> 01:28:17,000
然后拉丁语的趁限

3152
01:28:17,000 --> 01:28:18,000
其实最开始也是

3153
01:28:18,000 --> 01:28:20,000
因为在雕刻的时候

3154
01:28:20,000 --> 01:28:22,000
把字母雕得比较

3155
01:28:23,000 --> 01:28:25,000
适合那种刀的印方式

3156
01:28:25,000 --> 01:28:27,000
结构上比较 OK

3157
01:28:27,000 --> 01:28:28,000
然后刻下来

3158
01:28:28,000 --> 01:28:29,000
要不是太麻烦的话

3159
01:28:29,000 --> 01:28:31,000
趁限其实一开始就是

3160
01:28:31,000 --> 01:28:32,000
刀的那个

3161
01:28:33,000 --> 01:28:34,000
雕刻刀的走口

3162
01:28:34,000 --> 01:28:36,000
就最锋利那一部分吗

3163
01:28:36,000 --> 01:28:37,000
对

3164
01:28:37,000 --> 01:28:39,000
最开始的西大语的

3165
01:28:39,000 --> 01:28:41,000
西大语传统上是没有趁限体的

3166
01:28:41,000 --> 01:28:42,000
即便现在的西大语

3167
01:28:42,000 --> 01:28:45,000
在正式场合也是只有黑体的

3168
01:28:46,000 --> 01:28:47,000
不能因此说

3169
01:28:47,000 --> 01:28:48,000
趁限体就是古典

3170
01:28:48,000 --> 01:28:50,000
因为比它更古典的东西

3171
01:28:50,000 --> 01:28:51,000
是黑体

3172
01:28:53,000 --> 01:28:54,000
所以我觉得没时代

3173
01:28:54,000 --> 01:28:58,000
技术都对字体有影响

3174
01:28:58,000 --> 01:28:59,000
然后

3175
01:29:00,000 --> 01:29:02,000
我十年前还是偏爱

3176
01:29:03,000 --> 01:29:04,000
点证字体的

3177
01:29:04,000 --> 01:29:06,000
我不觉得麦克那一套比较好看

3178
01:29:06,000 --> 01:29:07,000
说实话

3179
01:29:07,000 --> 01:29:08,000
当然可能也跟我

3180
01:29:08,000 --> 01:29:09,000
是个程序员

3181
01:29:10,000 --> 01:29:11,000
现在是无所谓的

3182
01:29:11,000 --> 01:29:13,000
不过是一个一天玩的词

3183
01:29:13,000 --> 01:29:14,000
实用主义的

3184
01:29:15,000 --> 01:29:17,000
我觉得其实 WINDOWS 那一套

3185
01:29:17,000 --> 01:29:18,000
在西文字体上的表现

3186
01:29:18,000 --> 01:29:19,000
并不算差

3187
01:29:20,000 --> 01:29:22,000
从最开始直到现在

3188
01:29:22,000 --> 01:29:25,000
而且它那套系统是一直在改进的

3189
01:29:25,000 --> 01:29:26,000
但是我觉得 WINDOWS 犯了

3190
01:29:26,000 --> 01:29:28,000
比较致命的错误

3191
01:29:28,000 --> 01:29:31,000
是在汉字的 HINT 技术上面

3192
01:29:31,000 --> 01:29:32,000
走了一些歪路

3193
01:29:34,000 --> 01:29:35,000
走上了不归

3194
01:29:35,000 --> 01:29:36,000
我觉得

3195
01:29:36,000 --> 01:29:38,000
一方面汉字的 HINT 并不像

3196
01:29:38,000 --> 01:29:39,000
西文的 HINT 那么容易

3197
01:29:39,000 --> 01:29:40,000
另一方面

3198
01:29:40,000 --> 01:29:42,000
实际上在操作汉字 HINT 的

3199
01:29:42,000 --> 01:29:45,000
内波工程师和设计师团队

3200
01:29:45,000 --> 01:29:47,000
可能对汉字并不是那么的熟悉

3201
01:29:48,000 --> 01:29:51,000
包括在审美上和一些自行的细节上

3202
01:29:51,000 --> 01:29:53,000
所以导致了他们现在

3203
01:29:53,000 --> 01:29:55,000
汉字的渲染效果

3204
01:29:55,000 --> 01:29:57,000
就不是那么的理想

3205
01:29:58,000 --> 01:29:59,000
你觉得相当长一段时间内

3206
01:29:59,000 --> 01:30:01,000
就是自体渲染引擎这一套东西

3207
01:30:01,000 --> 01:30:04,000
还是在拉丁语系的

3208
01:30:04,000 --> 01:30:07,000
工程师的指导下开发的吧

3209
01:30:07,000 --> 01:30:08,000
应该

3210
01:30:08,000 --> 01:30:10,000
感觉上是

3211
01:30:10,000 --> 01:30:13,000
比较看有些选择

3212
01:30:13,000 --> 01:30:15,000
在母语的人士看

3213
01:30:15,000 --> 01:30:16,000
也挺奇怪

3214
01:30:16,000 --> 01:30:17,000
但是也没办法

3215
01:30:17,000 --> 01:30:18,000
当时条件有限

3216
01:30:18,000 --> 01:30:20,000
没有那么多人才

3217
01:30:20,000 --> 01:30:22,000
现在情况就不一样了

3218
01:30:22,000 --> 01:30:23,000
大家别的不说

3219
01:30:23,000 --> 01:30:24,000
我看现在各个什么

3220
01:30:24,000 --> 01:30:26,000
手机场上都在搞自定义自体了

3221
01:30:26,000 --> 01:30:28,000
还挺厉害的

3222
01:30:28,000 --> 01:30:30,000
现在已经很多

3223
01:30:30,000 --> 01:30:32,000
从老挪开始吧

3224
01:30:32,000 --> 01:30:34,000
就是从发布一个新系统的时候

3225
01:30:34,000 --> 01:30:36,000
会把自体拿出来说

3226
01:30:36,000 --> 01:30:38,000
这是我们的一个特征

3227
01:30:38,000 --> 01:30:39,000
对

3228
01:30:39,000 --> 01:30:40,000
就可以挺好

3229
01:30:40,000 --> 01:30:42,000
但是还是那个问题

3230
01:30:42,000 --> 01:30:43,000
最不同的哲学

3231
01:30:43,000 --> 01:30:44,000
还是有不同的结果的

3232
01:30:44,000 --> 01:30:46,000
包括现在刚才吴陶提到一个

3233
01:30:46,000 --> 01:30:49,000
就是做自体设计的时候

3234
01:30:49,000 --> 01:30:51,000
你也有不同的用场景的考虑

3235
01:30:51,000 --> 01:30:53,000
过去会说是一个什么

3236
01:30:53,000 --> 01:30:55,000
显示自体和打印自体

3237
01:30:55,000 --> 01:30:57,000
这两种情况也不一样

3238
01:30:57,000 --> 01:30:58,000
打印的话

3239
01:30:58,000 --> 01:31:00,000
你用什么方式打印

3240
01:31:00,000 --> 01:31:01,000
其实我觉得本质上

3241
01:31:01,000 --> 01:31:03,000
还是说一个分辨率的问题

3242
01:31:03,000 --> 01:31:04,000
就是说

3243
01:31:04,000 --> 01:31:05,000
打印的话

3244
01:31:05,000 --> 01:31:07,000
不管你用当时这种激光

3245
01:31:07,000 --> 01:31:08,000
还是喷摸

3246
01:31:08,000 --> 01:31:09,000
它的那个

3247
01:31:09,000 --> 01:31:10,000
所谓的分辨率

3248
01:31:10,000 --> 01:31:11,000
DPI

3249
01:31:11,000 --> 01:31:13,000
或者就是屏幕上 PPI

3250
01:31:13,000 --> 01:31:15,000
还是有一个数量解的差异

3251
01:31:15,000 --> 01:31:16,000
只是说现在

3252
01:31:16,000 --> 01:31:17,000
几千的

3253
01:31:17,000 --> 01:31:19,000
DPI 一般是

3254
01:31:19,000 --> 01:31:21,000
所以最低的也有 300

3255
01:31:21,000 --> 01:31:23,000
就是有 300 个 DOT

3256
01:31:23,000 --> 01:31:25,000
但是它那个算法不太一样

3257
01:31:25,000 --> 01:31:26,000
因为它是

3258
01:31:26,000 --> 01:31:28,000
比如它喷摸的话

3259
01:31:28,000 --> 01:31:29,000
就打黑白的情况

3260
01:31:29,000 --> 01:31:30,000
喷摸的默点不一样

3261
01:31:30,000 --> 01:31:32,000
喷摸的默点超小

3262
01:31:32,000 --> 01:31:33,000
它有个这个问题

3263
01:31:33,000 --> 01:31:35,000
就是它没有办法调浓度

3264
01:31:35,000 --> 01:31:36,000
就是它不可能说

3265
01:31:36,000 --> 01:31:38,000
这个墨水有浓度的深浅

3266
01:31:38,000 --> 01:31:39,000
它只有一种浓度的墨水

3267
01:31:39,000 --> 01:31:40,000
它能怎么实现

3268
01:31:40,000 --> 01:31:42,000
所谓的这个灰度呢

3269
01:31:42,000 --> 01:31:44,000
就是说靠那个

3270
01:31:44,000 --> 01:31:46,000
把那个小墨点分配的

3271
01:31:46,000 --> 01:31:48,000
这个在单位那个

3272
01:31:48,000 --> 01:31:49,000
面积上打得多点

3273
01:31:49,000 --> 01:31:50,000
还是少点的问题吗

3274
01:31:50,000 --> 01:31:52,000
那么这个时候

3275
01:31:52,000 --> 01:31:54,000
DPI 就和 PPI

3276
01:31:54,000 --> 01:31:55,000
有一个最本质的区别

3277
01:31:55,000 --> 01:31:56,000
就是一个像素点

3278
01:31:56,000 --> 01:31:58,000
它其实理论上可以显示

3279
01:31:58,000 --> 01:32:00,000
就是我只考虑这个

3280
01:32:00,000 --> 01:32:01,000
就是灰阶的话

3281
01:32:01,000 --> 01:32:03,000
也有 256 种灰度

3282
01:32:03,000 --> 01:32:05,000
就你从最黑到最白嘛

3283
01:32:05,000 --> 01:32:07,000
但是你在一个

3284
01:32:07,000 --> 01:32:08,000
一个同样的小方块面

3285
01:32:08,000 --> 01:32:10,000
上面打印这个

3286
01:32:10,000 --> 01:32:11,000
墨点的话

3287
01:32:11,000 --> 01:32:12,000
它其实你只能说

3288
01:32:12,000 --> 01:32:14,000
喷 10 个墨点

3289
01:32:14,000 --> 01:32:15,000
和 1000 个墨点

3290
01:32:15,000 --> 01:32:16,000
这种区别

3291
01:32:16,000 --> 01:32:17,000
所以这个时候 DPI

3292
01:32:17,000 --> 01:32:19,000
并不能完全和 PPI 的

3293
01:32:19,000 --> 01:32:20,000
计量方式等同

3294
01:32:20,000 --> 01:32:22,000
但是单看数字的话

3295
01:32:22,000 --> 01:32:24,000
确实通常是要高一个数量截了

3296
01:32:24,000 --> 01:32:25,000
像 1200 R

3297
01:32:25,000 --> 01:32:26,000
1800 R

3298
01:32:26,000 --> 01:32:28,000
这些都还比较常见的嘛

3299
01:32:28,000 --> 01:32:30,000
打印机的那个点

3300
01:32:30,000 --> 01:32:31,000
都是几千

3301
01:32:31,000 --> 01:32:33,000
对呀 3600 那种高

3302
01:32:33,000 --> 01:32:34,000
就是专业打印机

3303
01:32:34,000 --> 01:32:36,000
3000 多以上也是很正常的

3304
01:32:36,000 --> 01:32:37,000
所以当现在说

3305
01:32:37,000 --> 01:32:38,000
我现在看有些

3306
01:32:38,000 --> 01:32:40,000
这个 Retina 的这种屏幕

3307
01:32:40,000 --> 01:32:42,000
现在比如说你看那个 iPhone 6 家

3308
01:32:42,000 --> 01:32:43,000
就是那个大号那个

3309
01:32:43,000 --> 01:32:44,000
它不是说是

3310
01:32:44,000 --> 01:32:46,000
是一个 3 倍的吗

3311
01:32:46,000 --> 01:32:47,000
3 倍的话

3312
01:32:47,000 --> 01:32:49,000
你在算上它的一个亚象素

3313
01:32:49,000 --> 01:32:50,000
就是每个相处点

3314
01:32:50,000 --> 01:32:53,000
它是红 蓝 绿三个颜色嘛

3315
01:32:53,000 --> 01:32:55,000
对然后你再把亚象素也算进去的话

3316
01:32:55,000 --> 01:32:58,000
它的那个实际的 PPI

3317
01:32:58,000 --> 01:33:01,000
其实可以在很多全球上和 DPI

3318
01:33:01,000 --> 01:33:04,000
在数量级上是可以相提并论的

3319
01:33:04,000 --> 01:33:05,000
接近 E-Shopping

3320
01:33:05,000 --> 01:33:06,000
对对这个时候就很多人

3321
01:33:06,000 --> 01:33:07,000
就不是老实说

3322
01:33:07,000 --> 01:33:09,000
这个那个什么 iPad 的那个高

3323
01:33:09,000 --> 01:33:11,000
就是 Retina iPad 出来之后

3324
01:33:11,000 --> 01:33:13,000
大家说哇这个就是什么

3325
01:33:13,000 --> 01:33:17,000
就是高精度硬刷的那种

3326
01:33:17,000 --> 01:33:20,000
彩色杂字封面的那种那种显示质感

3327
01:33:20,000 --> 01:33:22,000
就是因为这个分辨率

3328
01:33:22,000 --> 01:33:23,000
达到了一个新的量级之后

3329
01:33:23,000 --> 01:33:25,000
产生的一个质别嘛

3330
01:33:25,000 --> 01:33:27,000
就终于感觉是硬在屏幕上

3331
01:33:27,000 --> 01:33:28,000
没错没错没错

3332
01:33:28,000 --> 01:33:30,000
所以我觉得可能现在

3333
01:33:30,000 --> 01:33:31,000
越往后走

3334
01:33:31,000 --> 01:33:33,000
而且而且现在还有一个新的趋势

3335
01:33:33,000 --> 01:33:35,000
就是那个我们讲那个 VRAR

3336
01:33:35,000 --> 01:33:37,000
它为了实现那个没有

3337
01:33:37,000 --> 01:33:39,000
没有往隔的那种颗粒感

3338
01:33:39,000 --> 01:33:41,000
它也要不断去提高那个像素

3339
01:33:41,000 --> 01:33:43,000
以后还就是 PPI

3340
01:33:43,000 --> 01:33:44,000
还会往上涨

3341
01:33:44,000 --> 01:33:46,000
可能以两个数量级

3342
01:33:46,000 --> 01:33:47,000
这个时候我们再来看

3343
01:33:47,000 --> 01:33:48,000
就不存在

3344
01:33:48,000 --> 01:33:50,000
可能是说以后的屏幕的质量

3345
01:33:50,000 --> 01:33:53,000
肯定是要高于这个纸张了

3346
01:33:53,000 --> 01:33:55,000
因为纸张它还是不够完美

3347
01:33:55,000 --> 01:33:56,000
它的那个精度来讲

3348
01:33:56,000 --> 01:33:58,000
因为你从过的墨汁去控制也好

3349
01:33:58,000 --> 01:34:01,000
还有那个墨水的进染的一个问题

3350
01:34:01,000 --> 01:34:03,000
它可能还不如以后的那些

3351
01:34:03,000 --> 01:34:04,000
超高分辨辨的屏幕

3352
01:34:04,000 --> 01:34:06,000
所以我对未来的那种显示技术

3353
01:34:06,000 --> 01:34:07,000
还是挺看

3354
01:34:07,000 --> 01:34:08,000
挺看好的

3355
01:34:09,000 --> 01:34:11,000
但是我们追逐了这么多年

3356
01:34:11,000 --> 01:34:12,000
终于好不容易

3357
01:34:12,000 --> 01:34:15,000
才敢上这个纸质的那个精度

3358
01:34:15,000 --> 01:34:16,000
对都是

3359
01:34:17,000 --> 01:34:18,000
我们现在才敢上

3360
01:34:18,000 --> 01:34:19,000
我也想问一下

3361
01:34:19,000 --> 01:34:20,000
你们最早

3362
01:34:20,000 --> 01:34:22,000
用的 OX 10 的最早的版本是

3363
01:34:22,000 --> 01:34:23,000
10 点几

3364
01:34:23,000 --> 01:34:25,000
我应该是 10 点 5 的时候

3365
01:34:25,000 --> 01:34:27,000
开始用的

3366
01:34:27,000 --> 01:34:28,000
10 点 5 10 点 6 的时候

3367
01:34:28,000 --> 01:34:29,000
你们还

3368
01:34:29,000 --> 01:34:31,000
你们还记得就是早年

3369
01:34:31,000 --> 01:34:32,000
就是 OX 10

3370
01:34:32,000 --> 01:34:34,000
他们在抓屏的时候

3371
01:34:34,000 --> 01:34:35,000
在 Screen Capture 的时候

3372
01:34:35,000 --> 01:34:37,000
所以默认是

3373
01:34:37,000 --> 01:34:39,000
现在是默认是 PNG 格式是吧

3374
01:34:39,000 --> 01:34:41,000
不会拍是那个 TFF

3375
01:34:42,000 --> 01:34:43,000
What'sPNG 吧

3376
01:34:43,000 --> 01:34:44,000
我是

3377
01:34:44,000 --> 01:34:47,000
反正我用 Ctrl-4 的时候

3378
01:34:47,000 --> 01:34:49,000
会出来 PNG 的

3379
01:34:49,000 --> 01:34:52,000
你存下它保存下的默认是 TFF

3380
01:34:52,000 --> 01:34:54,000
你要在手工选一下

3381
01:34:54,000 --> 01:34:55,000
它才会转成 PNG 的

3382
01:34:55,000 --> 01:34:56,000
不是

3383
01:34:56,000 --> 01:34:57,000
默认的是 PNG

3384
01:34:57,000 --> 01:34:58,000
What

3385
01:34:58,000 --> 01:34:59,000
哪一选

3386
01:34:59,000 --> 01:35:00,000
默认是 PNG

3387
01:35:00,000 --> 01:35:02,000
你开 Grab

3388
01:35:02,000 --> 01:35:04,000
你开 Grab 你抓屏的时候

3389
01:35:04,000 --> 01:35:06,000
它就是 GaAB 那个程序

3390
01:35:06,000 --> 01:35:08,000
你拍完之后的话

3391
01:35:08,000 --> 01:35:09,000
它保存的时候

3392
01:35:09,000 --> 01:35:10,000
我应该默认的时候

3393
01:35:10,000 --> 01:35:12,000
应该是这个时候是不能选 PNG

3394
01:35:12,000 --> 01:35:13,000
那个可以选

3395
01:35:13,000 --> 01:35:14,000
那个可以选

3396
01:35:14,000 --> 01:35:15,000
不能选 PNG

3397
01:35:15,000 --> 01:35:16,000
但是

3398
01:35:16,000 --> 01:35:18,000
你可以试一下

3399
01:35:18,000 --> 01:35:20,000
我比较确定这一个

3400
01:35:23,000 --> 01:35:24,000
What

3401
01:35:24,000 --> 01:35:26,000
你说用 Grab 程序的

3402
01:35:26,000 --> 01:35:28,000
截图的时候是

3403
01:35:28,000 --> 01:35:29,000
对

3404
01:35:29,000 --> 01:35:31,000
但你用那个快捷键就是用 GaAB 吗

3405
01:35:31,000 --> 01:35:32,000
对

3406
01:35:32,000 --> 01:35:34,000
然后在这个时候是 TFF 是不能改的

3407
01:35:34,000 --> 01:35:36,000
你得存完之后

3408
01:35:36,000 --> 01:35:38,000
再用那个 Preview 打开

3409
01:35:38,000 --> 01:35:40,000
然后再另存为 PNG 格式

3410
01:35:40,000 --> 01:35:41,000
对

3411
01:35:41,000 --> 01:35:42,000
OK

3412
01:35:42,000 --> 01:35:44,000
这个就是我最

3413
01:35:44,000 --> 01:35:46,000
最恼火的一个事情

3414
01:35:46,000 --> 01:35:47,000
所以后来我的解决方法

3415
01:35:47,000 --> 01:35:49,000
就更简单就绕过这一条了

3416
01:35:49,000 --> 01:35:51,000
因为 GaAB 它有两种应用方式

3417
01:35:51,000 --> 01:35:53,000
一个是保存成文件

3418
01:35:53,000 --> 01:35:55,000
另外一个是保存的内存里面

3419
01:35:55,000 --> 01:35:57,000
保存内存里面之后呢

3420
01:35:57,000 --> 01:35:59,000
就是 Windows 剪天板吧

3421
01:35:59,000 --> 01:36:00,000
对没错

3422
01:36:00,000 --> 01:36:03,000
然后这个时候你再开一个空白的 Preview

3423
01:36:03,000 --> 01:36:04,000
然后再按粘贴的话

3424
01:36:04,000 --> 01:36:06,000
它会自动把粘成一个

3425
01:36:06,000 --> 01:36:08,000
到 Preview 里面去

3426
01:36:08,000 --> 01:36:09,000
那个截图

3427
01:36:09,000 --> 01:36:11,000
就是说你在这个时候点保存

3428
01:36:11,000 --> 01:36:12,000
就有 PNG 可以选

3429
01:36:12,000 --> 01:36:15,000
就可以绕过一次先存为 TFF

3430
01:36:15,000 --> 01:36:18,000
然后再转成 PNG 这么一个尴尬的状况

3431
01:36:18,000 --> 01:36:21,000
所以你在 MIC 上面截图方法和 Windows

3432
01:36:21,000 --> 01:36:24,000
和 Windows 上面人家截图方法是一样的

3433
01:36:24,000 --> 01:36:25,000
没错

3434
01:36:25,000 --> 01:36:26,000
没错

3435
01:36:27,000 --> 01:36:29,000
我只是问为什么问这个

3436
01:36:29,000 --> 01:36:31,000
是因为在普通的那个规定里面

3437
01:36:31,000 --> 01:36:34,000
大家是默认它自动会出 Ping

3438
01:36:34,000 --> 01:36:35,000
就是 PNG 文件

3439
01:36:35,000 --> 01:36:39,000
然后在早期的那个 OS 10 里面

3440
01:36:39,000 --> 01:36:42,000
它默认保存是一个 PDF 文件

3441
01:36:42,000 --> 01:36:43,000
嗯

3442
01:36:43,000 --> 01:36:44,000
对

3443
01:36:44,000 --> 01:36:46,000
PDF 这个事情也可以讲一下

3444
01:36:46,000 --> 01:36:47,000
如果我没记错的话

3445
01:36:47,000 --> 01:36:48,000
对

3446
01:36:48,000 --> 01:36:52,000
因为当时整个 MAC 的 OS 10 的那个 Guy

3447
01:36:52,000 --> 01:36:55,000
最开始是基于 PDF 团一条技术来做的

3448
01:36:55,000 --> 01:36:56,000
对

3449
01:36:56,000 --> 01:36:57,000
它就等于

3450
01:36:57,000 --> 01:36:58,000
我说我想说的这一点

3451
01:36:58,000 --> 01:37:01,000
就是说从 OS 10 开始做开始

3452
01:37:01,000 --> 01:37:08,000
它就等于是想把所有的 Guy 印刷在屏幕上

3453
01:37:08,000 --> 01:37:09,000
没错

3454
01:37:09,000 --> 01:37:16,000
它是用一套用于印刷来做屏幕显示的

3455
01:37:16,000 --> 01:37:17,000
来做屏幕显示的

3456
01:37:17,000 --> 01:37:18,000
所以呢

3457
01:37:18,000 --> 01:37:19,000
它整个引擎

3458
01:37:19,000 --> 01:37:22,000
但是我们应该说 MAC 的文字引擎

3459
01:37:22,000 --> 01:37:24,000
它是用什么 CoreTask

3460
01:37:24,000 --> 01:37:25,000
嗯 Tex

3461
01:37:25,000 --> 01:37:26,000
CoreTex

3462
01:37:26,000 --> 01:37:27,000
对

3463
01:37:27,000 --> 01:37:28,000
Tex 对吧

3464
01:37:28,000 --> 01:37:29,000
CoreTex

3465
01:37:29,000 --> 01:37:31,000
但是从 OS 10 最早开始

3466
01:37:31,000 --> 01:37:37,000
它的这个渲染的这个思想就是要把整个 UI 印刷在屏幕上

3467
01:37:37,000 --> 01:37:38,000
对

3468
01:37:38,000 --> 01:37:39,000
对

3469
01:37:39,000 --> 01:37:42,000
这个有个挺好的一个结果

3470
01:37:42,000 --> 01:37:46,000
就是 PDF 这个格式在 OS 10 上支持的相当好

3471
01:37:46,000 --> 01:37:48,000
它是原生支持

3472
01:37:48,000 --> 01:37:49,000
对对对

3473
01:37:49,000 --> 01:37:50,000
不像 Winners

3474
01:37:50,000 --> 01:37:56,000
好像 Winners 10 终于有原生的显示 PDF 文件的一个支持了

3475
01:37:56,000 --> 01:38:00,000
我记得之前的版本对还在对装一个叫什么

3476
01:38:00,000 --> 01:38:01,000
Aquabat Reader

3477
01:38:01,000 --> 01:38:02,000
Aquabat

3478
01:38:02,000 --> 01:38:03,000
对

3479
01:38:03,000 --> 01:38:05,000
或者是大家国内用的那个叫福星

3480
01:38:05,000 --> 01:38:06,000
你知道吗

3481
01:38:06,000 --> 01:38:07,000
Foxit

3482
01:38:07,000 --> 01:38:08,000
啊

3483
01:38:08,000 --> 01:38:09,000
好吧

3484
01:38:09,000 --> 01:38:11,000
那个一个 PDF 的东西

3485
01:38:11,000 --> 01:38:13,000
很多人用因为那个比较轻量级

3486
01:38:13,000 --> 01:38:15,000
Aquabat Reader 非常重

3487
01:38:16,000 --> 01:38:21,000
不像在 OS 10 上那个 Preview 这个程序就看图看 PDF

3488
01:38:21,000 --> 01:38:23,000
还有那个叫 EPS

3489
01:38:23,000 --> 01:38:25,000
EPS 还有 PS

3490
01:38:25,000 --> 01:38:28,000
这几个都是同源的一个技术嘛

3491
01:38:28,000 --> 01:38:29,000
都可以直接写

3492
01:38:29,000 --> 01:38:30,000
对啊

3493
01:38:30,000 --> 01:38:31,000
非常方便

3494
01:38:31,000 --> 01:38:34,000
就其实都是 POSITScreen 的曲线

3495
01:38:34,000 --> 01:38:35,000
对对对

3496
01:38:35,000 --> 01:38:38,000
对那套的 DisplayPositScreen

3497
01:38:38,000 --> 01:38:39,000
对

3498
01:38:39,000 --> 01:38:43,000
这也就是扯到之前那个自酷文件的问题了

3499
01:38:43,000 --> 01:38:44,000
对

3500
01:38:44,000 --> 01:38:45,000
终于扯回来了

3501
01:38:45,000 --> 01:38:46,000
我说

3502
01:38:46,000 --> 01:38:48,000
我好不容易把你们转过来

3503
01:38:48,000 --> 01:38:49,000
对

3504
01:38:49,000 --> 01:38:50,000
对

3505
01:38:50,000 --> 01:38:52,000
就所谓的那种像量自酷的话

3506
01:38:52,000 --> 01:38:55,000
它有两种通用的比较常用的格式

3507
01:38:55,000 --> 01:38:57,000
一种是叫做 TrueType

3508
01:38:57,000 --> 01:38:59,000
还有一种叫做 OpenType 对吧

3509
01:38:59,000 --> 01:39:00,000
嗯

3510
01:39:00,000 --> 01:39:01,000
然后

3511
01:39:01,000 --> 01:39:03,000
如果我没记错的话

3512
01:39:03,000 --> 01:39:07,000
OpenType 是 Adobe 和苹果当时搞的

3513
01:39:08,000 --> 01:39:10,000
TrueType 是

3514
01:39:10,000 --> 01:39:11,000
苹果

3515
01:39:11,000 --> 01:39:12,000
再下次

3516
01:39:12,000 --> 01:39:14,000
微软和苹果搞的 OpenType 是

3517
01:39:14,000 --> 01:39:15,000
Adobe 搞的

3518
01:39:15,000 --> 01:39:17,000
微软和 Adobe 搞的

3519
01:39:17,000 --> 01:39:19,000
OpenType 当年就苹果没参加

3520
01:39:19,000 --> 01:39:20,000
OpenType

3521
01:39:20,000 --> 01:39:21,000
对对对

3522
01:39:21,000 --> 01:39:22,000
OpenType 应该没有苹果是不是

3523
01:39:22,000 --> 01:39:23,000
对

3524
01:39:23,000 --> 01:39:25,000
OpenType 苹果没参加

3525
01:39:25,000 --> 01:39:28,000
对其实本质上我觉得大头都是在 Adobe 那一边

3526
01:39:28,000 --> 01:39:30,000
他是出版界的老大吗

3527
01:39:30,000 --> 01:39:31,000
他说什么才是

3528
01:39:31,000 --> 01:39:32,000
才算

3529
01:39:32,000 --> 01:39:35,000
没有最早就是在很久很久以前

3530
01:39:35,000 --> 01:39:37,000
就是都是 Adobe 来做嘛

3531
01:39:37,000 --> 01:39:38,000
对

3532
01:39:38,000 --> 01:39:39,000
去抗 Adobe

3533
01:39:39,000 --> 01:39:42,000
苹果和微软这两家居然结合起来

3534
01:39:42,000 --> 01:39:45,000
一起做出了一个 TrueType 去对抗 Adobe

3535
01:39:46,000 --> 01:39:48,000
所以这是第一次字体大战

3536
01:39:48,000 --> 01:39:49,000
嗯

3537
01:39:49,000 --> 01:39:51,000
那那个 TrueTypeOpenType 的本质区别是什么

3538
01:39:51,000 --> 01:39:52,000
我一直没太明白

3539
01:39:52,000 --> 01:39:54,000
OpenType 是 TrueType 的一个扩展

3540
01:39:54,000 --> 01:39:55,000
没记错吧

3541
01:39:56,000 --> 01:39:58,000
对 OpenType 本质上其实就是 TrueType

3542
01:39:58,000 --> 01:40:01,000
有多一些其他的支持

3543
01:40:02,000 --> 01:40:03,000
就是 OpenType 他他

3544
01:40:03,000 --> 01:40:05,000
我们说 OpenType 有两种意思

3545
01:40:05,000 --> 01:40:06,000
就是

3546
01:40:06,000 --> 01:40:12,000
那个字体的封装格式和它一个封装的东西还是说它的轮廓就里面的内容

3547
01:40:12,000 --> 01:40:17,000
对对如果说狭义的讲的话就初态不初态不它个曲线是那个

3548
01:40:17,000 --> 01:40:20,000
它是二次被塞而取写

3549
01:40:21,000 --> 01:40:29,000
二次被塞然后那个 OpenType 就是以前的 ps 曲线嘛就是三次被塞而取写就曲线它本身数学的描述方式是不一样的

3550
01:40:29,000 --> 01:40:36,000
这两种有什么优劣之分吗二次和三次被塞而取写有的因为二次二次的

3551
01:40:37,000 --> 01:40:43,000
曲线的话它是一段曲线嘛它起点和终点嘛然后中间有个控制点来控制

3552
01:40:44,000 --> 01:40:49,000
你中间控制完左点或者往右点那个曲线形状发生变化这是初 Type 二次

3553
01:40:50,000 --> 01:40:59,000
那 ps 的那个它是三次它三次就是说除了起点终点以外它有两个控制点的手柄来调那个曲线

3554
01:41:00,000 --> 01:41:03,000
所以三次的话它那个点要更多

3555
01:41:03,000 --> 01:41:08,000
这是优闪的也是三次的进度不一定够好啊三次进度应该更好啊

3556
01:41:10,000 --> 01:41:16,000
所以就经常会有比如说三次曲线转二次曲线和二次曲线转三次曲线的问题嘛就会有三次曲线的点

3557
01:41:16,000 --> 01:41:18,000
会会会有会有损

3558
01:41:18,000 --> 01:41:18,000
ok

3559
01:41:19,000 --> 01:41:25,000
就说三次转二次的时候会有损因为三次它本来它用的点更多嘛对对

3560
01:41:25,000 --> 01:41:32,000
二次只用三点更少嘛反过来二次转三次的时候这个损损时就会更少一点

3561
01:41:32,000 --> 01:41:32,000
应该没有损

3562
01:41:32,000 --> 01:41:39,000
你如果你把中间两样控制点放的同一个位置就是等于是三次的曲线但是表示二次的曲线的那个

3563
01:41:40,000 --> 01:41:43,000
那个啊同样的同样的一个一个曲线嘛

3564
01:41:45,000 --> 01:41:54,000
对这是单纯从曲线的那个数量来来说的当然如果你还有其他的其他的那个参数不一样也也会影响到它这个转的这个压缩的问题

3565
01:41:54,000 --> 01:41:54,000
ok

3566
01:41:55,000 --> 01:42:08,000
所以现在常用的还是就出态不得比较多一点嘛就是 ttf 节为的 windows 一般都用 windows 一般用出态比较多而且 windows 它的出态不自体的里面它会加很多很多大量的那个

3567
01:42:08,000 --> 01:42:20,000
那个渲染体式心体信息啊对而 open type 呢他们只它只是一个比较宽泛的一个这个心体大概就是这样子归它这非常就是宽泛的一个信息

3568
01:42:20,000 --> 01:42:28,000
这还是跟应用场景不一样吗让出 type 的话一般是用于显示的嘛然后 open type 它那个一般用就 adobe 一般是做打印的东西的吗

3569
01:42:29,000 --> 01:42:37,000
嗯 windows 它制造也没有吧就基本上在 op type 之前 max 上面的字体几乎也都是出台

3570
01:42:38,000 --> 01:42:44,000
你拿来就是 type 买就是你如果你是一个设计平面设计师你买的字体基本上也都

3571
01:42:44,000 --> 01:42:51,000
不是我我我我我说说就是 adobe 它出的那字体的那些 open type 字体它没有很多黑体信息是因为它没有必要做嘛

3572
01:42:51,000 --> 01:42:59,000
大家买它那个字体一般是用于用来专业用打印的嘛不是用来显示在这这是有一个有一个历史问题

3573
01:42:59,000 --> 01:43:03,000
就是首先是这样子的 adobe 最初的那个 post script

3574
01:43:03,000 --> 01:43:09,000
这是它的专利技术然后它在这个专利技术上开发了一种字体格是叫 type one

3575
01:43:10,000 --> 01:43:17,000
嗯对这是这是 adobe 最经典的 post script 技术而且也是沿用到现在的一个最好的

3576
01:43:18,000 --> 01:43:23,000
包括像 open type 里面用的曲线信息也是这个 type one 为基础的那么

3577
01:43:24,000 --> 01:43:28,000
大家拉的那个三次的背上曲线都是 type one 呢它是 adobe 的这个私有专利

3578
01:43:29,000 --> 01:43:34,000
它是一个收费专利如果你要用 type one 技术你得给 adobe 支付非常高的这个专利费

3579
01:43:34,000 --> 01:43:40,000
所以当时那个无论是微软还是 apple 都不想支付这笔钱于是他们合作搞了一个 true type

3580
01:43:41,000 --> 01:43:49,000
想来就是以不支付专利的方式同时使用一个类似于 adobe 的技术为什么要这么搞呢是因为

3581
01:43:49,000 --> 01:43:54,000
其实当时 adobe 还发布了应该是 type three 吧我记不太清了是 type three 还 type four

3582
01:43:55,000 --> 01:44:01,000
它是一个嗯怎么说呢它是 adobe 的专利技术同时呢它是一个好像可以免费使用的

3583
01:44:02,000 --> 01:44:05,000
但是这个东西在屏幕上用来做这个

3584
01:44:06,000 --> 01:44:12,000
删格化的效果好像就不好具体原因我不是很清楚而且据说它的那个删格化的效率很低

3585
01:44:13,000 --> 01:44:19,000
所以 apple 和那个 windows 才没有用这一套免费的技术啊去搞了自己的东西

3586
01:44:19,000 --> 01:44:22,000
那么后来 windows 上留下了这么多的这个

3587
01:44:23,000 --> 01:44:26,000
true type 字体都是因为他们最初使用了这样一套

3588
01:44:27,000 --> 01:44:32,000
技术同时呢又设计了很多为这个 true type 优化过的这个字体

3589
01:44:33,000 --> 01:44:39,000
嗯这个就要回到最初呃你们在讨论的那个问题就说究竟是二次曲线好而三次曲线好

3590
01:44:39,000 --> 01:44:41,000
我个人觉得

3591
01:44:41,000 --> 01:44:46,000
两种其实是没有差别的因为如果说你给设计师的这个工具就是二次曲线的话

3592
01:44:46,000 --> 01:44:51,000
他就是没用这个工具画出一个完美在他看来完美的一条曲线

3593
01:44:52,000 --> 01:44:57,000
但是如果你给他一个三次曲线的工具那么他画出来的是三次曲线的完美的曲线

3594
01:44:57,000 --> 01:45:03,000
但是这两种曲线在互相转换的时候如果这个转换程式不那么的好的话就有可能会出一些问题

3595
01:45:03,000 --> 01:45:06,000
但通常来说这个数学问题并不难解决

3596
01:45:06,000 --> 01:45:11,000
所以我们市面上看到的一些 true type 字体的这个曲线质量不好

3597
01:45:11,000 --> 01:45:16,000
多半是由于字体厂商故意将他们转的不怎么好了

3598
01:45:16,000 --> 01:45:17,000
有可能是故意转的不好

3599
01:45:18,000 --> 01:45:25,000
比如有人有人就说国内某字体大厂是故意出了一套低质量的 true type 字体

3600
01:45:25,000 --> 01:45:31,000
以便他的那个 open type 的字体可以卖出一个比较好的价值可以可以卖专业字体和这种

3601
01:45:31,000 --> 01:45:35,000
就非专业字体的这个区别定价对对对

3602
01:45:35,000 --> 01:45:37,000
对哇太计贼了这个

3603
01:45:41,000 --> 01:45:44,000
然后呢 open type 我们还说他还有一个封装的格式

3604
01:45:45,000 --> 01:45:50,000
他其实这个盒子那里面呢他可以把 true type 曲线的东西装在这个盒子里面

3605
01:45:50,000 --> 01:45:53,000
最后包装出来也是一个 open type 字体

3606
01:45:54,000 --> 01:45:57,000
这跟和那个视频文件一样的嘛对对对

3607
01:45:57,000 --> 01:46:02,000
mkv 里面可以装各种各样的视频流音频流嘛对对

3608
01:46:02,000 --> 01:46:05,000
所以呢就是曲线的描述方式和最后那个封装

3609
01:46:05,000 --> 01:46:09,000
封装格是两个层次的东西都可能是 open type

3610
01:46:09,000 --> 01:46:11,000
所以这一点有点复杂

3611
01:46:11,000 --> 01:46:16,000
但是现在好像那些我看就是就是阿多比现在也有也有在卖那些

3612
01:46:16,000 --> 01:46:20,000
所谓的专业字体嘛他们自己卖的好像基本上还是以 open type 封装为主

3613
01:46:20,000 --> 01:46:24,000
因为 open type 把这些比较高阶的特性什么什么 optical 那些乱七法糟的

3614
01:46:26,000 --> 01:46:30,000
高级特性对他有很多 feature 有很多这叫什么特征功能嘛

3615
01:46:30,000 --> 01:46:34,000
这个好像 true type 好像就暂时好像支持不了吧对

3616
01:46:34,000 --> 01:46:39,000
因为 true type 的规范里面没有那些数据就其实他们都是一张张表了

3617
01:46:40,000 --> 01:46:41,000
表叫 table

3618
01:46:42,000 --> 01:46:49,000
所以现在整个字体格式的整个字体格式的大取向就是大家都是玩那个 open type 主按

3619
01:46:49,000 --> 01:46:52,000
而且刚才有说呢 open type 它本来就是一个大盒子

3620
01:46:52,000 --> 01:46:56,000
那你原来那个轮廓的 true type 轮廓曲线也可以装进去

3621
01:46:56,000 --> 01:46:59,000
那很多现在就是把那个曲线的轮廓先装进来

3622
01:46:59,000 --> 01:47:02,000
然后再加上 open type 特有的那些 feature

3623
01:47:02,000 --> 01:47:06,000
该封装成一个 open type 的一个字库很多人是这样子

3624
01:47:06,000 --> 01:47:08,000
但我们必须要再重复说一下就是说

3625
01:47:09,000 --> 01:47:14,000
我们说的这个通常说这个 hint 技术也就是专制 windows 的那一套

3626
01:47:14,000 --> 01:47:21,000
hint 技术它是只对 true type 有效的而我们说的在这个 post script 上做的这个 hint

3627
01:47:21,000 --> 01:47:25,000
这个 hint 跟 true type 的 hint 完全不是一回事

3628
01:47:25,000 --> 01:47:31,000
就虽然他们的名字都叫 hint 了但是对但是这个 post script 的这个 hint 是一个

3629
01:47:32,000 --> 01:47:36,000
比那个 true type hint 要微弱的多的而且通常可能是在打印

3630
01:47:37,000 --> 01:47:42,000
设备上才有效的我不是很清楚总之他们完全不是一个量级的这样一个效果

3631
01:47:46,000 --> 01:47:50,000
而这里要可能不得不提一下那个不同的操作系统的那个

3632
01:47:50,000 --> 01:47:54,000
它怎么去就是它那个叫做虽然引擎的区别了这个好像

3633
01:47:55,000 --> 01:47:59,000
很古老很古老以前我们我们还在那个 applfast 的时候有

3634
01:47:59,000 --> 01:48:03,000
有尝试过写这么一篇系列但是后来没有没有做成因为实际上是

3635
01:48:04,000 --> 01:48:07,000
太多技术就是要弄了太坑了巨大的

3636
01:48:10,000 --> 01:48:16,000
windows 和 mac 不一样然后各个浏览浏览器不一样然后同样浏览器在不同的

3637
01:48:16,000 --> 01:48:20,000
那个系统上对对对这个不同版本还不一样

3638
01:48:20,000 --> 01:48:24,000
封掉了就而且这个东西也在不同的就还在变化中

3639
01:48:24,000 --> 01:48:30,000
比如说那个像微软的那套他们叫做 clear type 的技术也在不断的每一个版本的

3640
01:48:30,000 --> 01:48:33,000
windows 它在不断的优化去发的一些更新的版本

3641
01:48:33,000 --> 01:48:38,000
还有像那个苹果那个什么 cortex 那套也是在不断的变化

3642
01:48:38,000 --> 01:48:42,000
它那个叫什么 at 吧 apple advanced topography 那个那个虽然引擎

3643
01:48:43,000 --> 01:48:47,000
那个比较老对那个最最最开始是身上是搭载的那个嘛

3644
01:48:47,000 --> 01:48:53,000
后来像什么 cortex 啊又又又开始变了就是也不是一个静态的东西就很难去讨论它

3645
01:48:56,000 --> 01:49:01,000
但我不知道那个安卓和 lsm 是怎么弄的对从来没有没见人讲过

3646
01:49:02,000 --> 01:49:10,000
但是基本上 ios 就是就继承这个 portax 那套是吧对 ok 那安卓怎么样了我不知道

3647
01:49:10,000 --> 01:49:15,000
因为安卓他就很奇怪啊因为安卓他不是基于之前的

3648
01:49:15,000 --> 01:49:22,000
就不是基于这两个 windows 和 astand 嘛他应该是 lindex 来的一套什么技术改的吧我不太清楚

3649
01:49:23,000 --> 01:49:28,000
其实 lindex 下面的屏幕显示可以调的部分

3650
01:49:28,000 --> 01:49:37,000
更多在 clear type 出现之前就有好几种对就基本的四种一种是完全不要 hint

3651
01:49:37,000 --> 01:49:44,000
一种是呃什么使用简单的 hint 对对轻微重度和全什么

3652
01:49:44,000 --> 01:49:51,000
full hint 对我相信对这套其实应该也是也是一个比较值得研究一下的话题只不过

3653
01:49:52,000 --> 01:49:58,000
我们在做 lindex 下面那个常用的那个渲染型叫什么来的名字我都忘掉了以前用那个

3654
01:49:58,000 --> 01:50:01,000
舞榜图做桌面的时候还研究过一段时间

3655
01:50:02,000 --> 01:50:09,000
不这个最重要的是他跟那个发行版是相关的就你要用一些那个

3656
01:50:09,000 --> 01:50:10,000
呃

3657
01:50:10,000 --> 01:50:11,000
呃

3658
01:50:12,000 --> 01:50:13,000
非 gnome 的

3659
01:50:14,000 --> 01:50:14,000
嗯

3660
01:50:15,000 --> 01:50:20,000
嗯对就这个这个 gnome 有关就你用 qt 的话 qt 字就有一套然后对对对

3661
01:50:20,000 --> 01:50:27,000
可能有一套对然后他们全都是就现在就对那个 lindex 的显示

3662
01:50:28,000 --> 01:50:32,000
显示是一个非常巨大的可能首先你可能底层有一个 x windows

3663
01:50:32,000 --> 01:50:37,000
然后 x windows 完全不去理会 hint 或者是什么

3664
01:50:38,000 --> 01:50:45,000
呃轮廓表述这一套的然后你在 x windows 上基础上有很多人做出不同的这个渲染引擎来

3665
01:50:45,000 --> 01:50:47,000
然后每个渲染引擎有自己的测译

3666
01:50:47,000 --> 01:50:52,000
所以这个是在 lindex 这边是不能以操作性的话论的而是要以发行版和那个

3667
01:50:54,000 --> 01:50:54,000
呃

3668
01:50:55,000 --> 01:50:58,000
窗口管理器呃距离职工具体讨论的

3669
01:50:59,000 --> 01:51:01,000
哦天呐对对对是巨大的巨大

3670
01:51:03,000 --> 01:51:05,000
果然是一辆好坦克

3671
01:51:07,000 --> 01:51:12,000
好了现在我们键盘上打了几个字然后呢通过我们键位

3672
01:51:12,000 --> 01:51:18,000
输入法转出来现在再通过调用我们的自库文件终于已经

3673
01:51:19,000 --> 01:51:22,000
然后还有选择选挑过终于显示在屏幕上

3674
01:51:24,000 --> 01:51:28,000
呃对然后终于显示在屏幕上了对这个过程还出略了很多东西

3675
01:51:28,000 --> 01:51:31,000
比如说那个呃

3676
01:51:33,000 --> 01:51:36,000
比如说那个意义上加一撇的发育字母

3677
01:51:36,000 --> 01:51:40,000
它可能有好几种组合的问题可能有好几种组合方式对

3678
01:51:41,000 --> 01:51:44,000
没有没有这还涉及到那个 unicode 的事情

3679
01:51:44,000 --> 01:51:48,000
还有那个组合对先不是排完语形的问题而是一个

3680
01:51:48,000 --> 01:51:52,000
对就是你怎么把编码不同的自服组合在一起的问题

3681
01:51:52,000 --> 01:51:54,000
然后还有一个数数的问题就是

3682
01:51:55,000 --> 01:51:57,000
呃对你要说意义

3683
01:51:58,000 --> 01:52:02,000
如果这个自服是一个意加一撇合成的意呢

3684
01:52:02,000 --> 01:52:06,000
还是呃它比如说是拉丁一里面的那个

3685
01:52:07,000 --> 01:52:10,000
高位区的那个独立的一个自服意义

3686
01:52:10,000 --> 01:52:13,000
这两个自服你可能在不同的操作形容里面

3687
01:52:13,000 --> 01:52:16,000
数出来的结果是不一样的有些人有些操作形容

3688
01:52:16,000 --> 01:52:18,000
两个字一个字一个字吧

3689
01:52:18,000 --> 01:52:20,000
有些编程员说哦这是

3690
01:52:21,000 --> 01:52:22,000
两个 byte

3691
01:52:22,000 --> 01:52:26,000
然后有些人有些操作形容总会告诉你说哦这是一个自服

3692
01:52:27,000 --> 01:52:29,000
这些其实也是这个日语里面也有嘛

3693
01:52:29,000 --> 01:52:30,000
就像刚才

3694
01:52:30,000 --> 01:52:32,000
这日文假名个卓英点嘛

3695
01:52:32,000 --> 01:52:35,000
他其实也可以通过那个组合形式来实现的

3696
01:52:36,000 --> 01:52:38,000
呃所以那也是那看起来是一个字

3697
01:52:38,000 --> 01:52:40,000
那其实他是一个马位的字

3698
01:52:40,000 --> 01:52:43,000
就低就是低区位的一个马位的字

3699
01:52:43,000 --> 01:52:45,000
还是他是两个组合起来两个字

3700
01:52:46,000 --> 01:52:47,000
对日语日文里面也是有这个问题的

3701
01:52:48,000 --> 01:52:51,000
好所以我我觉得这还是一个排版引擎的问题吧

3702
01:52:51,000 --> 01:52:56,000
因为这只决于这个排版引擎是否采用了 unicode 的标准下的

3703
01:52:56,000 --> 01:52:57,000
一些肢体技术

3704
01:52:58,000 --> 01:53:00,000
那如果他用了一些传统的

3705
01:53:00,000 --> 01:53:03,000
在 unicode 还没有诞生的那个时代里面

3706
01:53:04,000 --> 01:53:07,000
那他也有自己的一些方式来显示这些字符

3707
01:53:09,000 --> 01:53:09,000
可以这样理解

3708
01:53:09,000 --> 01:53:12,000
哦这跟排版引擎也不一定

3709
01:53:12,000 --> 01:53:20,000
就是其实主要还是一个你在一个什么样的逻辑层面上去区分自服的问题

3710
01:53:20,000 --> 01:53:23,000
就是你要把它规划的话就是好吧

3711
01:53:23,000 --> 01:53:27,000
所有的字符其实归根结底都是零和一在电荡里

3712
01:53:27,000 --> 01:53:28,000
在计算室里面

3713
01:53:28,000 --> 01:53:34,000
但是有些慢按照某些编程语言或者是操作系统的计算方法

3714
01:53:34,000 --> 01:53:39,000
每 8 个 bit 就一定无论如何是一个字

3715
01:53:40,000 --> 01:53:42,000
那在这些操作系统或者编程语言里面

3716
01:53:42,000 --> 01:53:46,000
那可能意义上面加撇就有可能是一或者是三个字

3717
01:53:47,000 --> 01:53:51,000
然后但是对于某些更高级的或者说就是花纷层面

3718
01:53:51,000 --> 01:53:54,000
抽象层面更高级的语言比如说 swift

3719
01:53:55,000 --> 01:54:02,000
swift 里面它一定会把那个字符串里面能够独立成粗的

3720
01:54:02,000 --> 01:54:05,000
就是什么什么 cluster

3721
01:54:05,000 --> 01:54:06,000
它单独算成一个粗

3722
01:54:06,000 --> 01:54:11,000
所以这个实际长度可能跟最终的那个 byte 长度是不一样的

3723
01:54:11,000 --> 01:54:18,000
而且两个 byte 长度不同的 stream 在 swift 里面可能会最终算出来的长度是一样的

3724
01:54:19,000 --> 01:54:22,000
反正也是一个很大的

3725
01:54:24,000 --> 01:54:27,000
因为你如果单说是排版引擎的话

3726
01:54:27,000 --> 01:54:30,000
你是先给排版引擎什么东西

3727
01:54:30,000 --> 01:54:30,000
对吧

3728
01:54:31,000 --> 01:54:33,000
你是先给它不同的东西

3729
01:54:33,000 --> 01:54:36,000
到排版引擎它拿到手头上只有这些零部件

3730
01:54:36,000 --> 01:54:38,000
它只能拿出这样的形式

3731
01:54:41,000 --> 01:54:44,000
还有就是我想说的就是在这个年头到现在为止

3732
01:54:44,000 --> 01:54:47,000
大家还是有很多人说那个半角全角的问题

3733
01:54:48,000 --> 01:54:49,000
就是说什么

3734
01:54:50,000 --> 01:54:54,000
西文 140 个字的话对应中文应该是 70 个字

3735
01:54:54,000 --> 01:54:57,000
到现在还有人有这样的感觉

3736
01:54:59,000 --> 01:55:07,000
对全角半角的两个字最开始原因应该是在签字史来吧

3737
01:55:07,000 --> 01:55:08,000
对

3738
01:55:10,000 --> 01:55:12,000
有些签字是只有一站起

3739
01:55:12,000 --> 01:55:16,000
加另外一些签字的一半的宽度

3740
01:55:16,000 --> 01:55:19,000
然后这些字符就叫做半角字符

3741
01:55:20,000 --> 01:55:22,000
它其实就是一个宽度的问题

3742
01:55:22,000 --> 01:55:26,000
全身半身全角半角或者叫全形半形

3743
01:55:26,000 --> 01:55:28,000
em 和 en

3744
01:55:28,000 --> 01:55:31,000
应该是日本人搞出来的概念吧

3745
01:55:33,000 --> 01:55:38,000
但是就是在原来的新闻排版里面就是有 em 和 en

3746
01:55:38,000 --> 01:55:39,000
对

3747
01:55:39,000 --> 01:55:42,000
但是全角半角这个数以应该是日本人搞出来的

3748
01:55:43,000 --> 01:55:46,000
我们叫成全角半角对是日本人

3749
01:55:46,000 --> 01:55:47,000
日本汉字反映出来的对

3750
01:55:48,000 --> 01:55:52,000
而且全角半角最开始的差异应该是在骗假名和

3751
01:55:54,000 --> 01:55:56,000
就是在骗假名出现之前

3752
01:55:56,000 --> 01:56:02,000
在全角汉字出现之前日语里面就是 js 之面只有半角的假名

3753
01:56:02,000 --> 01:56:04,000
然后等到这个全角汉字出来之后

3754
01:56:04,000 --> 01:56:07,000
它没有出现了全角的假名和全角汉字

3755
01:56:07,000 --> 01:56:09,000
所以这个时候就需要区别说

3756
01:56:10,000 --> 01:56:15,000
假名是究竟只占显示一半还是宽的版本

3757
01:56:15,000 --> 01:56:20,000
所以这个时候全形半形的概念就被从印刷时代拓展过来

3758
01:56:22,000 --> 01:56:25,000
但是就在编码上它其实是单字节和双字节的问题

3759
01:56:25,000 --> 01:56:26,000
对

3760
01:56:28,000 --> 01:56:32,000
就很多人把全角半角和双字节混在一起

3761
01:56:32,000 --> 01:56:36,000
就比如说其实到现在为止我们大家都已经用 unicode 了

3762
01:56:37,000 --> 01:56:37,000
对吧

3763
01:56:37,000 --> 01:56:40,000
无论你是半角的字还是全角的字

3764
01:56:40,000 --> 01:56:42,000
在 unicode 上它其实都是一个马位

3765
01:56:42,000 --> 01:56:43,000
对

3766
01:56:43,000 --> 01:56:47,000
然后这个马位有可能用 1 到 4 个字符来显示

3767
01:56:47,000 --> 01:56:49,000
1 到 4 个 byte

3768
01:56:49,000 --> 01:56:50,000
1 到 4

3769
01:56:50,000 --> 01:56:50,000
对

3770
01:56:50,000 --> 01:56:51,000
目前是 1 到 4 个

3771
01:56:51,000 --> 01:56:52,000
对

3772
01:56:52,000 --> 01:56:53,000
它是个变长的

3773
01:56:53,000 --> 01:56:54,000
目前是 1 到 4 个 byte

3774
01:56:54,000 --> 01:56:55,000
来决定

3775
01:56:55,000 --> 01:56:58,000
所以半角和全角差别在这里已经不明显

3776
01:57:01,000 --> 01:57:03,000
现在我们实际看到的半角和全角

3777
01:57:03,000 --> 01:57:06,000
其实是字体产上为了保留大家的习惯

3778
01:57:06,000 --> 01:57:09,000
它化成半角和化成全角而已

3779
01:57:09,000 --> 01:57:12,000
你去调用那个马其实就是一个 unicode 的一个马而已

3780
01:57:12,000 --> 01:57:12,000
对

3781
01:57:13,000 --> 01:57:19,000
那个中文字体里面现在的半角和全角的一个字符的应用规则是怎么样子

3782
01:57:19,000 --> 01:57:22,000
我记得好像就是要全部半角

3783
01:57:22,000 --> 01:57:23,000
还本全部全角

3784
01:57:23,000 --> 01:57:26,000
就是废除这两个概念是最好的方式

3785
01:57:29,000 --> 01:57:31,000
就所以在 Gb 里面

3786
01:57:31,000 --> 01:57:35,000
Gb 里面其实它有很多比如说像俄文的西里尔字母之那些

3787
01:57:35,000 --> 01:57:36,000
它其实在里面画的

3788
01:57:36,000 --> 01:57:37,000
当年它放到 Gb 里面

3789
01:57:37,000 --> 01:57:39,000
它的意思就是全角字

3790
01:57:39,000 --> 01:57:41,000
全角字

3791
01:57:41,000 --> 01:57:41,000
对

3792
01:57:42,000 --> 01:57:43,000
当年是那个意思

3793
01:57:44,000 --> 01:57:46,000
然后它的确是很化的那些

3794
01:57:46,000 --> 01:57:48,000
所以国产的那些字体

3795
01:57:48,000 --> 01:57:50,000
它的确是化成全角字了

3796
01:57:50,000 --> 01:57:52,000
然后有人就用那个来排俄文

3797
01:57:52,000 --> 01:57:54,000
然后看出来这些惨不人度

3798
01:57:55,000 --> 01:57:56,000
每个字符都建讯很大吧

3799
01:57:57,000 --> 01:57:59,000
斗办上面一旦出现俄文书

3800
01:57:59,000 --> 01:58:00,000
简直是惨不人度

3801
01:58:01,000 --> 01:58:02,000
对

3802
01:58:02,000 --> 01:58:04,000
这其实都是一些历史遗留的产物

3803
01:58:04,000 --> 01:58:08,000
就是当时因为编码还没有统一到

3804
01:58:08,000 --> 01:58:11,000
没有完全统一到 unicode 的那套编码系统上面

3805
01:58:12,000 --> 01:58:14,000
所以导致了中国以前的

3806
01:58:15,000 --> 01:58:19,000
中国国标以前想编码一些西文字符的时候

3807
01:58:19,000 --> 01:58:21,000
它会搞一套自己的规则在里面

3808
01:58:21,000 --> 01:58:24,000
然后又跟 unicode 那套并不是完全成合

3809
01:58:26,000 --> 01:58:28,000
那问题是现在大家已经是 unicode 的

3810
01:58:28,000 --> 01:58:30,000
但是还要为了保持那个习惯

3811
01:58:33,000 --> 01:58:34,000
然后后来再讲

3812
01:58:34,000 --> 01:58:36,000
而且的确大家能看出来

3813
01:58:36,000 --> 01:58:37,000
这是半角的字

3814
01:58:37,000 --> 01:58:40,000
实际上它里面的码位已经是

3815
01:58:40,000 --> 01:58:43,000
就跟那个刷字节单子已经没有关系了

3816
01:58:43,000 --> 01:58:45,000
就一个 unicode 码位了都已经是

3817
01:58:45,000 --> 01:58:46,000
对

3818
01:58:46,000 --> 01:58:51,000
然后实际上它的宽度是通过字体设计师来去定义的

3819
01:58:51,000 --> 01:58:52,000
它那个 font 里面的定义

3820
01:58:52,000 --> 01:58:52,000
对

3821
01:58:52,000 --> 01:58:55,000
它的宽度是排版引擎来决定

3822
01:58:55,000 --> 01:58:58,000
排版引擎和字体提供的一些信息来决定

3823
01:58:58,000 --> 01:59:00,000
所以我一直在想

3824
01:59:00,000 --> 01:59:03,000
现在我们计算机也好

3825
01:59:03,000 --> 01:59:03,000
手机也好

3826
01:59:03,000 --> 01:59:04,000
系统这么复杂

3827
01:59:04,000 --> 01:59:08,000
也就是我们这些人为弄出来的因素

3828
01:59:08,000 --> 01:59:10,000
你看光打一个字写是到

3829
01:59:10,000 --> 01:59:13,000
这个屏幕上就要经过这么大一堆的问题

3830
01:59:13,000 --> 01:59:16,000
然后中间随时可能出现错误

3831
01:59:16,000 --> 01:59:18,000
bug 或者是什么系统崩溃

3832
01:59:18,000 --> 01:59:20,000
真的也很正常

3833
01:59:20,000 --> 01:59:21,000
动不动就乱嘛

3834
01:59:21,000 --> 01:59:22,000
动不动就崩溃了

3835
01:59:22,000 --> 01:59:23,000
对啊

3836
01:59:23,000 --> 01:59:23,000
真的

3837
01:59:23,000 --> 01:59:26,000
因为 unicode 这个事情

3838
01:59:26,000 --> 01:59:27,000
导致很多安全漏洞嘛

3839
01:59:27,000 --> 01:59:28,000
也不出奇啊

3840
01:59:28,000 --> 01:59:31,000
就之前我记得有一年你们记不记得

3841
01:59:31,000 --> 01:59:32,000
是有一段那种

3842
01:59:32,000 --> 01:59:34,000
文字叠在一起

3843
01:59:34,000 --> 01:59:36,000
然后 iphone 一打开就会自动刺激

3844
01:59:36,000 --> 01:59:40,000
然后那个 safari 转气打开就自动崩溃嘛

3845
01:59:41,000 --> 01:59:44,000
就是因为这个坑爹的事情

3846
01:59:44,000 --> 01:59:48,000
而且因为像尤其是文字编码这个东西的话

3847
01:59:48,000 --> 01:59:49,000
它必须要向后兼容嘛

3848
01:59:49,000 --> 01:59:50,000
就是它后面的编码

3849
01:59:50,000 --> 01:59:53,000
它必须要向后兼容嘛

3850
01:59:53,000 --> 01:59:54,000
要不然特别麻烦吧

3851
01:59:54,000 --> 01:59:55,000
它自会变掉嘛

3852
01:59:55,000 --> 01:59:58,000
所以越是要向后兼容

3853
01:59:58,000 --> 02:00:02,000
它的负面的那些债务就越来越多

3854
02:00:02,000 --> 02:00:04,000
所以它就越容易出 bug

3855
02:00:04,000 --> 02:00:08,000
现在实际上绝大都是人类的负杂系统

3856
02:00:08,000 --> 02:00:09,000
其实负杂性都是历史性

3857
02:00:09,000 --> 02:00:12,000
所有负杂的什么都大部分都是历史原因

3858
02:00:12,000 --> 02:00:15,000
如果你从头开始文明毁灭面了

3859
02:00:15,000 --> 02:00:16,000
PIA 机重新设计这个东西

3860
02:00:16,000 --> 02:00:17,000
肯定不会设定

3861
02:00:17,000 --> 02:00:18,000
所以就这样

3862
02:00:18,000 --> 02:00:20,000
所以就这样

3863
02:00:20,000 --> 02:00:21,000
文明毁灭面了

3864
02:00:21,000 --> 02:00:22,000
PIA 机重新设计这个东西

3865
02:00:22,000 --> 02:00:25,000
肯定不会设计成当初那个样子

3866
02:00:25,000 --> 02:00:27,000
大家都搞一个非常简单的一种

3867
02:00:27,000 --> 02:00:29,000
对

3868
02:00:32,000 --> 02:00:34,000
我们说了两个小时

3869
02:00:34,000 --> 02:00:35,000
终于把一个字

3870
02:00:35,000 --> 02:00:37,000
显示到屏幕上去了

3871
02:00:37,000 --> 02:00:38,000
但是我们如果要把它打印出来

3872
02:00:38,000 --> 02:00:39,000
怎么办

3873
02:00:41,000 --> 02:00:43,000
要再说两个小时吧

3874
02:00:45,000 --> 02:00:48,000
其实也没有这么复杂

3875
02:00:48,000 --> 02:00:49,000
打印出来

3876
02:00:49,000 --> 02:00:52,000
你把你的

3877
02:00:52,000 --> 02:00:54,000
文字的内容发给打印机

3878
02:00:54,000 --> 02:00:56,000
然后打印机内部其实也有一套

3879
02:00:56,000 --> 02:00:58,000
显示系统

3880
02:00:58,000 --> 02:01:00,000
然后这个显示系统只不过它最终

3881
02:01:00,000 --> 02:01:02,000
形成的

3882
02:01:02,000 --> 02:01:06,000
结果是一个实体可见的一张纸

3883
02:01:06,000 --> 02:01:07,000
或者是

3884
02:01:07,000 --> 02:01:08,000
包括三个打印机

3885
02:01:08,000 --> 02:01:13,000
其实大多数都是一个套把这个字体编码

3886
02:01:13,000 --> 02:01:16,000
把一套编码和其

3887
02:01:16,000 --> 02:01:18,000
对应的形状联系起来

3888
02:01:18,000 --> 02:01:20,000
然后控制

3889
02:01:20,000 --> 02:01:22,000
一个

3890
02:01:22,000 --> 02:01:23,000
盆头也好

3891
02:01:23,000 --> 02:01:24,000
或者是锡骨也好

3892
02:01:24,000 --> 02:01:26,000
把最终形状显示出来

3893
02:01:26,000 --> 02:01:30,000
现在打印机应该不需要在内嵌字体了吧

3894
02:01:30,000 --> 02:01:31,000
它都是通过解析

3895
02:01:31,000 --> 02:01:33,000
一个 ps

3896
02:01:33,000 --> 02:01:34,000
或者

3897
02:01:34,000 --> 02:01:35,000
justps

3898
02:01:35,000 --> 02:01:38,000
一个标准来做的吧

3899
02:01:38,000 --> 02:01:39,000
因为以前我记得

3900
02:01:39,000 --> 02:01:40,000
所以那是出现过

3901
02:01:40,000 --> 02:01:41,000
所以

3902
02:01:41,000 --> 02:01:43,000
那个

3903
02:01:43,000 --> 02:01:44,000
真是打印机

3904
02:01:44,000 --> 02:01:45,000
就是打印机内

3905
02:01:45,000 --> 02:01:45,000
对

3906
02:01:45,000 --> 02:01:49,000
它是需要内嵌一个字库才可以打中我最早的时候

3907
02:01:49,000 --> 02:01:50,000
得到后面都也是

3908
02:01:50,000 --> 02:01:50,000
对

3909
02:01:50,000 --> 02:01:53,000
很多 ps 打印机它也要安装的

3910
02:01:53,000 --> 02:01:54,000
所以就是

3911
02:01:54,000 --> 02:01:56,000
我们中脑年程训练

3912
02:01:56,000 --> 02:01:58,000
在继续可以告诫小朋友

3913
02:01:58,000 --> 02:02:01,000
当年打印机是要有打印字体的

3914
02:02:01,000 --> 02:02:02,000
要不然它打不出字

3915
02:02:02,000 --> 02:02:03,000
空白了

3916
02:02:03,000 --> 02:02:03,000
对

3917
02:02:03,000 --> 02:02:04,000
而且

3918
02:02:04,000 --> 02:02:06,000
在现在

3919
02:02:06,000 --> 02:02:09,000
如果你遇到一些比较极端的例子的话

3920
02:02:09,000 --> 02:02:11,000
有些人还是会选择把

3921
02:02:11,000 --> 02:02:12,000
打

3922
02:02:12,000 --> 02:02:15,000
pdf 你们的字体转后来曲线

3923
02:02:15,000 --> 02:02:18,000
然后最终给打印机当过一幅画来打

3924
02:02:18,000 --> 02:02:22,000
不然有些字是是是是飘的

3925
02:02:23,000 --> 02:02:24,000
在日文的话

3926
02:02:24,000 --> 02:02:25,000
经常会出这个问题

3927
02:02:25,000 --> 02:02:26,000
因为就是我

3928
02:02:26,000 --> 02:02:27,000
我在

3929
02:02:27,000 --> 02:02:30,000
比如说我做的这个排版排的这个东西

3930
02:02:30,000 --> 02:02:31,000
然后到输出方那边

3931
02:02:31,000 --> 02:02:34,000
它没有同样的字体文件

3932
02:02:34,000 --> 02:02:35,000
那它可能就会

3933
02:02:35,000 --> 02:02:36,000
就会字会变掉

3934
02:02:36,000 --> 02:02:37,000
没有关系

3935
02:02:37,000 --> 02:02:38,000
它有的时候因为设置的问题

3936
02:02:38,000 --> 02:02:40,000
整个那个排版就会崩掉嘛

3937
02:02:40,000 --> 02:02:41,000
不过就是这个

3938
02:02:41,000 --> 02:02:43,000
还有像那个现在 pdf 有这个问题

3939
02:02:43,000 --> 02:02:44,000
就是很多

3940
02:02:44,000 --> 02:02:47,000
在 Windows 上面自作的 PDF

3941
02:02:47,000 --> 02:02:50,000
它没有选择内切

3942
02:02:50,000 --> 02:02:51,000
自己内切

3943
02:02:51,000 --> 02:02:52,000
或者说把字型轮廓

3944
02:02:52,000 --> 02:02:55,000
作为一个就 subset 的方式放进去的话

3945
02:02:55,000 --> 02:02:57,000
它在非

3946
02:02:57,000 --> 02:02:58,000
就没有那个字体文件线上

3947
02:02:58,000 --> 02:02:59,000
比如说 Mac

3948
02:02:59,000 --> 02:03:00,000
比如说那方面

3949
02:03:00,000 --> 02:03:01,000
它就显示是一个方框

3950
02:03:01,000 --> 02:03:02,000
就没有那个字

3951
02:03:02,000 --> 02:03:03,000
对呀

3952
02:03:04,000 --> 02:03:05,000
所以你看要说的话

3953
02:03:05,000 --> 02:03:06,000
还是有很多要事

3954
02:03:06,000 --> 02:03:07,000
像什么

3955
02:03:08,000 --> 02:03:10,000
自替自及内切这个事情的话

3956
02:03:10,000 --> 02:03:12,000
其实还有很多事情要做

3957
02:03:12,000 --> 02:03:15,000
PDF 在这个技术

3958
02:03:15,000 --> 02:03:18,000
对东亚的这些文本显示的话

3959
02:03:18,000 --> 02:03:20,000
是发挥了很大的作用的

3960
02:03:20,000 --> 02:03:21,000
这个 subsetting

3961
02:03:21,000 --> 02:03:22,000
对吧

3962
02:03:22,000 --> 02:03:23,000
要不然的话

3963
02:03:23,000 --> 02:03:24,000
它没有办法就把

3964
02:03:24,000 --> 02:03:27,000
要不 PDF 它的文件要越来越大

3965
02:03:27,000 --> 02:03:28,000
每个都是几十兆一个

3966
02:03:28,000 --> 02:03:30,000
哪怕只有两页的字

3967
02:03:31,000 --> 02:03:34,000
当年的话就是为什么 TrueType

3968
02:03:34,000 --> 02:03:37,000
微软和苹果联手起来发 TrueType

3969
02:03:37,000 --> 02:03:37,000
就是这一点

3970
02:03:37,000 --> 02:03:40,000
它要打败阿杜比

3971
02:03:40,000 --> 02:03:41,000
阿杜比他那时候

3972
02:03:41,000 --> 02:03:43,000
它就是有一个 ATM

3973
02:03:43,000 --> 02:03:45,000
阿杜比 Type Management

3974
02:03:45,000 --> 02:03:47,000
它就是要来控制

3975
02:03:48,000 --> 02:03:50,000
显示字体和打印机的字体

3976
02:03:50,000 --> 02:03:53,000
给打印机的是很

3977
02:03:53,000 --> 02:03:55,000
高精度的 PS

3978
02:03:55,000 --> 02:03:58,000
PS 曲线的字体

3979
02:03:58,000 --> 02:04:00,000
而给显示的话

3980
02:04:00,000 --> 02:04:02,000
那就是低端的点准字体

3981
02:04:02,000 --> 02:04:03,000
所以它需要一个

3982
02:04:03,000 --> 02:04:06,000
它 ATM 这样一个软件来进行

3983
02:04:06,000 --> 02:04:06,000
来调配

3984
02:04:07,000 --> 02:04:09,000
然后下载以后

3985
02:04:09,000 --> 02:04:10,000
一起下载

3986
02:04:10,000 --> 02:04:12,000
然后交给输出端

3987
02:04:12,000 --> 02:04:14,000
去给打印机才能打印出东西来

3988
02:04:14,000 --> 02:04:17,000
那后来就是微软和 Apple

3989
02:04:17,000 --> 02:04:19,000
它就联合出了 TrueType 以后

3990
02:04:19,000 --> 02:04:21,000
它就可以动态的下载

3991
02:04:23,000 --> 02:04:24,000
字体的曲线信息

3992
02:04:24,000 --> 02:04:26,000
然后直接就传给了打印机

3993
02:04:26,000 --> 02:04:29,000
所以以后就逐渐的

3994
02:04:29,000 --> 02:04:34,000
就不用输出端的打印字体了

3995
02:04:34,000 --> 02:04:36,000
所以当年的这样的一个

3996
02:04:36,000 --> 02:04:37,000
工作流程的话

3997
02:04:37,000 --> 02:04:40,000
对于整个 DTP

3998
02:04:40,000 --> 02:04:41,000
就桌面排版的流程

3999
02:04:41,000 --> 02:04:42,000
是一个非常大的一个影响

4000
02:04:42,000 --> 02:04:44,000
天哪

4001
02:04:44,000 --> 02:04:45,000
这个

4002
02:04:47,000 --> 02:04:48,000
都很难想象

4003
02:04:48,000 --> 02:04:50,000
你现在如果要自己搞一套

4004
02:04:50,000 --> 02:04:51,000
新的超级系统

4005
02:04:51,000 --> 02:04:52,000
你要从头把这些都做一遍的话

4006
02:04:52,000 --> 02:04:54,000
也不要做到红年马月去了

4007
02:04:55,000 --> 02:04:56,000
对呀

4008
02:04:56,000 --> 02:04:58,000
现在我们随便手标点两下

4009
02:04:58,000 --> 02:04:59,000
然后就印出来了

4010
02:05:00,000 --> 02:05:01,000
所以现在终于知道

4011
02:05:01,000 --> 02:05:03,000
那么那么那么多 CPU 的

4012
02:05:03,000 --> 02:05:06,000
那个性能的提升都跑哪里去了

4013
02:05:07,000 --> 02:05:07,000
对呀

4014
02:05:07,000 --> 02:05:08,000
这个计算机

4015
02:05:08,000 --> 02:05:11,000
他的他在辛苦的演算

4016
02:05:11,000 --> 02:05:12,000
他的算什么东西

4017
02:05:12,000 --> 02:05:12,000
对呀

4018
02:05:13,000 --> 02:05:13,000
对

4019
02:05:13,000 --> 02:05:14,000
不停的在

4020
02:05:14,000 --> 02:05:16,000
这跟生物也有多少点

4021
02:05:16,000 --> 02:05:18,000
有点巧合吧

4022
02:05:18,000 --> 02:05:19,000
就是人类为什么

4023
02:05:20,000 --> 02:05:22,000
眼睛要长在脸上

4024
02:05:23,000 --> 02:05:24,000
听起来很奇怪

4025
02:05:24,000 --> 02:05:25,000
就是因为

4026
02:05:25,000 --> 02:05:25,000
哇

4027
02:05:25,000 --> 02:05:28,000
你就是因为眼睛要好强强的

4028
02:05:28,000 --> 02:05:30,000
眼睛要尽量接

4029
02:05:30,000 --> 02:05:31,000
要尽量靠近大脑

4030
02:05:31,000 --> 02:05:32,000
不然你眼睛比如说

4031
02:05:32,000 --> 02:05:34,000
你眼睛长在手指上

4032
02:05:34,000 --> 02:05:35,000
其实更灵魂

4033
02:05:35,000 --> 02:05:36,000
但是

4034
02:05:36,000 --> 02:05:38,000
神经长在脸上

4035
02:05:38,000 --> 02:05:40,000
神经练乳就更长了

4036
02:05:40,000 --> 02:05:41,000
神经练乳短

4037
02:05:41,000 --> 02:05:42,000
然后那个

4038
02:05:43,000 --> 02:05:44,000
带块比较高

4039
02:05:44,000 --> 02:05:45,000
然后大脑里面

4040
02:05:45,000 --> 02:05:47,000
其实和视觉相关的那一块

4041
02:05:47,000 --> 02:05:48,000
也是特别特别发的

4042
02:05:51,000 --> 02:05:53,000
为什么我扯到这

4043
02:05:57,000 --> 02:05:58,000
好吧

4044
02:05:58,000 --> 02:06:00,000
既然我们的字终于从打印出来了

4045
02:06:00,000 --> 02:06:02,000
我们这一期节目先谈到这里

4046
02:06:02,000 --> 02:06:03,000
好

4047
02:06:03,000 --> 02:06:04,000
然后其实还是

4048
02:06:05,000 --> 02:06:06,000
扯开了

4049
02:06:06,000 --> 02:06:06,000
开了

4050
02:06:06,000 --> 02:06:08,000
一路开了多少盒子

4051
02:06:08,000 --> 02:06:09,000
但是都没有

4052
02:06:09,000 --> 02:06:10,000
都没有给盖上

4053
02:06:11,000 --> 02:06:14,000
比如说其实刚才我在想

4054
02:06:14,000 --> 02:06:17,000
我们遗漏的最大的一个点

4055
02:06:17,000 --> 02:06:18,000
其实是

4056
02:06:18,000 --> 02:06:20,000
流感器里面的字

4057
02:06:21,000 --> 02:06:22,000
这字体的选择过程

4058
02:06:22,000 --> 02:06:26,000
就比如说有些人会有疑惑说为什么

4059
02:06:27,000 --> 02:06:28,000
我在 Word 里面

4060
02:06:28,000 --> 02:06:31,000
可以把中文字体设置成那么多种

4061
02:06:31,000 --> 02:06:32,000
什么送体

4062
02:06:32,000 --> 02:06:33,000
开体

4063
02:06:33,000 --> 02:06:33,000
立书

4064
02:06:33,000 --> 02:06:33,000
对吧

4065
02:06:33,000 --> 02:06:35,000
但是流感器里面就不行

4066
02:06:35,000 --> 02:06:38,000
那这我们可以专讲一期

4067
02:06:39,000 --> 02:06:40,000
对啊

4068
02:06:40,000 --> 02:06:41,000
Wave Phone 啊什么的

4069
02:06:41,000 --> 02:06:42,000
包括那个

4070
02:06:42,000 --> 02:06:44,000
卧服格式是什么东西

4071
02:06:44,000 --> 02:06:46,000
包括 Emoji 在网页上的显示

4072
02:06:46,000 --> 02:06:51,000
和他在传统的 C 口数据库里面的一些坑

4073
02:06:53,000 --> 02:06:53,000
你们说的

4074
02:06:53,000 --> 02:06:54,000
你们都得记着

4075
02:06:54,000 --> 02:06:55,000
自己说的坑字

4076
02:06:55,000 --> 02:06:56,000
天啊

4077
02:06:57,000 --> 02:06:57,000
不能只管挖

4078
02:06:57,000 --> 02:06:58,000
不管埋

4079
02:06:59,000 --> 02:07:01,000
自弹自串债务表

4080
02:07:04,000 --> 02:07:06,000
刘克宁表示很高兴

4081
02:07:06,000 --> 02:07:07,000
刘克宁

4082
02:07:11,000 --> 02:07:11,000
好了

4083
02:07:11,000 --> 02:07:13,000
那今天的节目就到这里

4084
02:07:13,000 --> 02:07:16,000
我们还是欢迎大家继续写邮件给文文反馈

4085
02:07:17,000 --> 02:07:22,000
自弹自串的联系邮件地址是 podcastathtype.com

4086
02:07:22,000 --> 02:07:25,000
podcast 平写是 podcast

4087
02:07:25,000 --> 02:07:28,000
the type 的评写是 the te teype

4088
02:07:28,000 --> 02:07:31,000
我们的联系地址是 podcastathtype.com

4089
02:07:32,000 --> 02:07:33,000
ok

4090
02:07:33,000 --> 02:07:33,000
呃

4091
02:07:33,000 --> 02:07:34,000
no

4092
02:07:34,000 --> 02:07:37,000
感谢收听 ipmpodcast 网络旗下的 IT 计数

4093
02:07:37,000 --> 02:07:38,000
娱乐节目内很恐慌

4094
02:07:38,000 --> 02:07:40,000
我们号称哈扣那些没有干货

4095
02:07:40,000 --> 02:07:42,000
想听人听不想听人就别听

4096
02:07:42,000 --> 02:07:43,000
你可以为本节目捐款

4097
02:07:43,000 --> 02:07:46,000
捐款地址是 kernopanic.fm slash donate

4098
02:07:47,000 --> 02:07:48,000
捐款经过随意

4099
02:07:48,000 --> 02:07:49,000
只要是 8 的正确数倍就可以

4100
02:07:49,000 --> 02:07:50,000
捐款不会给你带来什么

4101
02:07:50,000 --> 02:07:52,000
不卷也不会让你失去什么

4102
02:07:52,000 --> 02:07:54,000
我们可好是 no hard feelings

4103
02:07:54,000 --> 02:07:56,000
如果你有任何反馈

4104
02:07:56,000 --> 02:08:00,000
可以发邮件到 kernopanic.ipm.li

4105
02:08:00,000 --> 02:08:02,000
同时也欢迎你收听

4106
02:08:02,000 --> 02:08:02,000
呃

4107
02:08:02,000 --> 02:08:03,000
real

4108
02:08:03,000 --> 02:08:07,000
real 主持的风头圈以及 ipm 旗下的其他节目

4109
02:08:07,000 --> 02:08:08,000
未知到太医来了

4110
02:08:08,000 --> 02:08:09,000
流行通信

4111
02:08:09,000 --> 02:08:10,000
hi story

4112
02:08:10,000 --> 02:08:11,000
印影像吴思源

4113
02:08:11,000 --> 02:08:11,000
博物制

4114
02:08:11,000 --> 02:08:12,000
选美

4115
02:08:12,000 --> 02:08:12,000
必下关

4116
02:08:12,000 --> 02:08:13,000
一天事件

4117
02:08:13,000 --> 02:08:15,000
我们下期节目再会

4118
02:08:15,000 --> 02:08:16,000
白白

4119
02:08:20,000 --> 02:08:21,000
吴涛你就关口

4120
02:08:21,000 --> 02:08:22,000
要来别的顺了

4121
02:08:22,000 --> 02:08:24,000
吴涛念确的时候好像加了一个加速的

4122
02:08:24,000 --> 02:08:25,000
是有这个

4123
02:08:26,000 --> 02:08:27,000
对

4124
02:08:27,000 --> 02:08:28,000
你看那些

4125
02:08:28,000 --> 02:08:29,000
那个什么综艺节目

4126
02:08:29,000 --> 02:08:31,000
最后要念那个赞助商名的时候

4127
02:08:31,000 --> 02:08:32,000
就咬咬咬

4128
02:08:32,000 --> 02:08:32,000
使劲爆

4129
02:08:32,000 --> 02:08:33,000
对对对

4130
02:08:34,000 --> 02:08:35,000
这个这也是一项重要技能

4131
02:08:36,000 --> 02:08:37,000
得过要评广告

4132
02:08:37,000 --> 02:08:38,000
播完之后

4133
02:08:38,000 --> 02:08:41,000
无论那个要评广告多么的轻松温馨

4134
02:08:41,000 --> 02:08:43,000
最后一定要来一个说的特别快的什么

4135
02:08:43,000 --> 02:08:45,000
请自一主之类的

4136
02:08:48,000 --> 02:08:50,000
请自信您的医师或您的药剂师

4137
02:08:50,000 --> 02:08:52,000
因为那个是广告法规定的

4138
02:08:52,000 --> 02:08:52,000
必须要讲

4139
02:08:52,000 --> 02:08:54,000
那还有什么不想讲

4140
02:08:56,000 --> 02:08:56,000
哎

4141
02:08:56,000 --> 02:08:57,000
吴涛你不能偷懒

4142
02:08:57,000 --> 02:08:59,000
就是以后录我们字弹字串

4143
02:08:59,000 --> 02:09:01,000
的话你要每期要有个新口号啊

4144
02:09:02,000 --> 02:09:03,000
哎说也是

4145
02:09:03,000 --> 02:09:06,000
这一期没有新口号

4146
02:09:06,000 --> 02:09:08,000
但是我之前其实是想找一个跟

4147
02:09:08,000 --> 02:09:10,000
字体稍微有点关系的

4148
02:09:10,000 --> 02:09:11,000
好吧

4149
02:09:11,000 --> 02:09:12,000
本期我们的口号是

4150
02:09:13,000 --> 02:09:14,000
没有口号

4151
02:09:14,000 --> 02:09:14,000
不

4152
02:09:14,000 --> 02:09:15,000
本期我们的口号是

4153
02:09:18,000 --> 02:09:19,000
这个点出于

4154
02:09:19,000 --> 02:09:20,000
这是什么鬼

4155
02:09:21,000 --> 02:09:22,000
点出于那个

4156
02:09:22,000 --> 02:09:25,000
Knowt 高德纳在排印他的第一版

4157
02:09:26,000 --> 02:09:27,000
呃

4158
02:09:27,000 --> 02:09:28,000
tocp 就是

4159
02:09:28,000 --> 02:09:29,000
the art and

4160
02:09:29,000 --> 02:09:30,000
the

4161
02:09:31,000 --> 02:09:33,000
the art of computer program

4162
02:09:34,000 --> 02:09:34,000
呃

4163
02:09:34,000 --> 02:09:37,000
就是计算机的编程艺术的这本书的时候

4164
02:09:37,000 --> 02:09:39,000
他看到了自己的出稿的

4165
02:09:40,000 --> 02:09:41,000
一个小样

4166
02:09:41,000 --> 02:09:42,000
然后他当时说

4167
02:09:42,000 --> 02:09:43,000
bless

4168
02:09:43,000 --> 02:09:44,000
所以他喜欢

4169
02:09:44,000 --> 02:09:45,000
太

4170
02:09:45,000 --> 02:09:46,000
这这排的是啥呀

4171
02:09:46,000 --> 02:09:47,000
然后

4172
02:09:49,000 --> 02:09:49,000
然后对

4173
02:09:49,000 --> 02:09:51,000
然后他就他就专门

4174
02:09:51,000 --> 02:09:52,000
他就专门

4175
02:09:52,000 --> 02:09:54,000
搞了一套叫做先是搞了

4176
02:09:54,000 --> 02:09:55,000
metaphones

4177
02:09:55,000 --> 02:09:56,000
然后有 metaphones

4178
02:09:56,000 --> 02:09:58,000
然后再搞一套啦

4179
02:09:58,000 --> 02:09:59,000
tag

4180
02:09:59,000 --> 02:10:01,000
到搞了 tag

4181
02:10:01,000 --> 02:10:03,000
然后用来排自己的版

4182
02:10:03,000 --> 02:10:06,000
这算是一个比较应景的口号

4183
02:10:06,000 --> 02:10:08,000
所以本期我们的口号就是

4184
02:10:08,000 --> 02:10:08,000
blah

4185
02:10:10,000 --> 02:10:11,000
好难念

4186
02:10:11,000 --> 02:10:12,000
好难念

4187
02:10:12,000 --> 02:10:14,000
我不知道他具体识是怎么样

4188
02:10:14,000 --> 02:10:16,000
因为 Knowt 毕竟是个美国人

4189
02:10:16,000 --> 02:10:17,000
他也是认识

4190
02:10:18,000 --> 02:10:19,000
me

4191
02:10:22,000 --> 02:10:22,000
对

4192
02:10:22,000 --> 02:10:23,000
其实我们还可以讲讲

4193
02:10:23,000 --> 02:10:25,000
就找这位缴甲 metaphones

4194
02:10:25,000 --> 02:10:29,000
他的一些设计哲学还是有一点意思

4195
02:10:29,000 --> 02:10:29,000
而且

4196
02:10:31,000 --> 02:10:33,000
有机会我还是想讲那个 Ten

4197
02:10:33,000 --> 02:10:33,000
那个

4198
02:10:33,000 --> 02:10:34,000
好吧

4199
02:10:36,000 --> 02:10:37,000
那个完全不懂

4200
02:10:40,000 --> 02:10:40,000
的确是

4201
02:10:41,000 --> 02:10:42,000
越来越深了

4202
02:10:42,000 --> 02:10:44,000
已经挖到地球那一面去了

