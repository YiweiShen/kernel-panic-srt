1
00:00:00,000 --> 00:00:04,000
感觉今天这个话题有点太大

2
00:00:04,000 --> 00:00:08,000
不知道能不能在一两个小时内讲得清楚

3
00:00:08,000 --> 00:00:13,000
对 而且我觉得有可能我们两个的能力捍动不了

4
00:00:13,000 --> 00:00:16,000
对 我们两个其实也不是在这个话题上面

5
00:00:16,000 --> 00:00:19,000
非常有经验的两个人

6
00:00:19,000 --> 00:00:23,000
关键是我觉得首先我们两个都是一个 Win 的中毒用户

7
00:00:23,000 --> 00:00:27,000
这个在本来就是在什么起点上就是有偏见的

8
00:00:28,000 --> 00:00:30,000
对 所以我们算是一个

9
00:00:32,000 --> 00:00:34,000
别人叫什么 Inform 的 opinion

10
00:00:34,000 --> 00:00:37,000
我们这边是 opinion 的 Information

11
00:00:37,000 --> 00:00:38,000
对 对

12
00:00:38,000 --> 00:00:44,000
所以如果你不是 Win 的用户或者你听到

13
00:00:44,000 --> 00:00:48,000
觉得有些不赞同的观点 请记住这一点

14
00:00:48,000 --> 00:00:54,000
我们这是两个具有偏见的人在聊一件非常个性化的东西

15
00:00:54,000 --> 00:00:56,000
对 我们虚心接受这件就不改

16
00:00:57,000 --> 00:00:59,000
好

17
00:00:59,000 --> 00:01:02,000
其实还是说一下在聊什么

18
00:01:02,000 --> 00:01:07,000
对 其实我们这一期的主题是编辑器或者说 IE

19
00:01:07,000 --> 00:01:10,000
就是写来码的工具

20
00:01:10,000 --> 00:01:14,000
我们可能会有很多期持续讨论

21
00:01:14,000 --> 00:01:20,000
关于开发人间的很多相关的工具流程相关的话题

22
00:01:20,000 --> 00:01:24,000
也大概算是一个系列吧

23
00:01:24,000 --> 00:01:31,000
就尽量会聊一些比较贴近开发过程的东西

24
00:01:31,000 --> 00:01:36,000
北美三地时间 2006 年 1 月 2 日下午 3 点 04 分 05 秒

25
00:01:36,000 --> 00:01:40,000
您近来收听到的是 IPN 旗下的 Podcast 广播内核恐慌

26
00:01:40,000 --> 00:01:42,000
所以你学了够了

27
00:01:42,000 --> 00:01:43,000
没错 对

28
00:01:43,000 --> 00:01:47,000
如果刚才你记住了 Sequence 的话

29
00:01:47,000 --> 00:01:51,000
2006 年 1 月 2 日下午 3 点 04 分 05 秒

30
00:01:52,000 --> 00:01:54,000
你就学会了一点点够了

31
00:01:54,000 --> 00:01:55,000
对

32
00:01:55,000 --> 00:01:59,000
这是我们上一期节目结束的时候 Rail 交给我了一件事情

33
00:01:59,000 --> 00:02:02,000
我觉得这两天仔细想了一下

34
00:02:02,000 --> 00:02:07,000
的确算是一个比较很 pragmatical 的解决方案

35
00:02:07,000 --> 00:02:12,000
但是还是觉得有点奇怪的事了

36
00:02:12,000 --> 00:02:14,000
对 我觉得有一点挺奇怪的点是

37
00:02:14,000 --> 00:02:16,000
比如我问一个问题

38
00:02:16,000 --> 00:02:18,000
你要写中文的 12 月

39
00:02:18,000 --> 00:02:20,000
这三个字你怎么办

40
00:02:20,000 --> 00:02:23,000
对 你要把它 localization 的话

41
00:02:23,000 --> 00:02:26,000
的确可能要考虑 localization 的话

42
00:02:26,000 --> 00:02:29,000
的确可能不是一个非常理想的解决方案

43
00:02:29,000 --> 00:02:34,000
可是反过来你用 percent H 这种方式好像也不行

44
00:02:34,000 --> 00:02:36,000
对 也是要单独做一下处理

45
00:02:36,000 --> 00:02:38,000
也是要考虑到 local

46
00:02:38,000 --> 00:02:39,000
对

47
00:02:39,000 --> 00:02:43,000
但是我觉得反正够的这种时间的表达方式的好处就是

48
00:02:43,000 --> 00:02:44,000
上次我也讲了

49
00:02:44,000 --> 00:02:47,000
就不需要查手册 这点是挺爽的

50
00:02:47,000 --> 00:02:49,000
我不知道您有没有这么觉得

51
00:02:49,000 --> 00:02:50,000
是没错

52
00:02:50,000 --> 00:02:54,000
因为它的安排就可以把它所见机所得了

53
00:02:54,000 --> 00:02:55,000
对

54
00:02:55,000 --> 00:02:56,000
而且它的 sequence 是

55
00:02:56,000 --> 00:02:58,000
就是当然以美国人的逻辑

56
00:02:58,000 --> 00:02:59,000
我觉得不可理喻的

57
00:02:59,000 --> 00:03:01,000
就是 1 月 2 日

58
00:03:01,000 --> 00:03:02,000
就是日在前面

59
00:03:02,000 --> 00:03:05,000
日在后面 月在前面

60
00:03:05,000 --> 00:03:08,000
我在推特上看到我一个漫画

61
00:03:08,000 --> 00:03:11,000
说 logic vs american logic

62
00:03:11,000 --> 00:03:12,000
然后左边是个金字塔

63
00:03:12,000 --> 00:03:13,000
最上面的是日

64
00:03:13,000 --> 00:03:15,000
然后下面是月

65
00:03:15,000 --> 00:03:16,000
最下面是年

66
00:03:16,000 --> 00:03:17,000
就是从小到大的

67
00:03:17,000 --> 00:03:18,000
是个倒三角

68
00:03:18,000 --> 00:03:21,000
然后 American logic 那边写的是月

69
00:03:21,000 --> 00:03:22,000
然后日

70
00:03:22,000 --> 00:03:24,000
然后上面是个倒三角

71
00:03:24,000 --> 00:03:25,000
下面是一个 T 型

72
00:03:25,000 --> 00:03:29,000
就嘲笑美国人的这个逻辑

73
00:03:29,000 --> 00:03:29,000
不够从美

74
00:03:29,000 --> 00:03:31,000
我觉得其实可以加一个

75
00:03:31,000 --> 00:03:33,000
就是如果你把中国人的逻辑考虑进去的话

76
00:03:33,000 --> 00:03:34,000
那中国人其实更合理

77
00:03:34,000 --> 00:03:36,000
中国人是从上到下

78
00:03:36,000 --> 00:03:37,000
从大到小

79
00:03:37,000 --> 00:03:38,000
是一个倒金字塔

80
00:03:38,000 --> 00:03:39,000
年月日

81
00:03:39,000 --> 00:03:42,000
然后小时分秒

82
00:03:42,000 --> 00:03:45,000
但是在就是在这个所谓 normal logic

83
00:03:45,000 --> 00:03:47,000
或者说西方 logic 这边

84
00:03:47,000 --> 00:03:48,000
从小到大吗

85
00:03:48,000 --> 00:03:49,000
先从小到大

86
00:03:49,000 --> 00:03:53,000
然后再从大到小

87
00:03:53,000 --> 00:03:53,000
对

88
00:03:53,000 --> 00:03:54,000
反正我觉得

89
00:03:54,000 --> 00:03:55,000
不管你是从小到大

90
00:03:55,000 --> 00:03:57,000
跟那个 bite order 一样

91
00:03:57,000 --> 00:03:58,000
不管你从小到大

92
00:03:58,000 --> 00:03:58,000
从大到小

93
00:03:58,000 --> 00:04:01,000
你只要遵从一个统一的规则就好了

94
00:04:01,000 --> 00:04:03,000
然后美国人这一套

95
00:04:03,000 --> 00:04:06,000
对

96
00:04:06,000 --> 00:04:07,000
实在是太奇怪了

97
00:04:07,000 --> 00:04:08,000
没错

98
00:04:08,000 --> 00:04:10,000
对

99
00:04:10,000 --> 00:04:12,000
回到我们今天的这个

100
00:04:12,000 --> 00:04:14,000
一个 holy war 的主题上面

101
00:04:14,000 --> 00:04:15,000
就是我们觉得

102
00:04:15,000 --> 00:04:18,000
可能弹编辑器总会

103
00:04:18,000 --> 00:04:21,000
不可避免的谈到这个

104
00:04:21,000 --> 00:04:22,000
程学界的

105
00:04:22,000 --> 00:04:24,000
若干大圣战之一

106
00:04:24,000 --> 00:04:28,000
也就是 vim 和 emax 之争

107
00:04:28,000 --> 00:04:33,000
我们其实也无意调起什么 flame war

108
00:04:33,000 --> 00:04:35,000
但是

109
00:04:35,000 --> 00:04:37,000
但是也有可能这是一个不可避免的事情

110
00:04:37,000 --> 00:04:40,000
对

111
00:04:40,000 --> 00:04:41,000
其实为什么

112
00:04:41,000 --> 00:04:44,000
程学界有这么多的 holy war

113
00:04:44,000 --> 00:04:48,000
就是我刚才前两天也不小心在知会上调起了

114
00:04:48,000 --> 00:04:48,000
半场

115
00:04:48,000 --> 00:04:51,000
就小半场 holy war

116
00:04:51,000 --> 00:04:54,000
我在那边 beaching PHP 是一款多烂的语言

117
00:04:54,000 --> 00:04:56,000
然后在下面说

118
00:04:56,000 --> 00:04:57,000
有人说

119
00:04:57,000 --> 00:04:59,000
那他为什么还这么流行呢

120
00:04:59,000 --> 00:05:00,000
我说

121
00:05:00,000 --> 00:05:01,000
烂的

122
00:05:01,000 --> 00:05:02,000
那就是

123
00:05:02,000 --> 00:05:04,000
一个东西流行并不意味着他不烂

124
00:05:04,000 --> 00:05:07,000
你看那 windows 不也是最流行的操系统

125
00:05:07,000 --> 00:05:09,000
然后这句话就

126
00:05:09,000 --> 00:05:10,000
有没有

127
00:05:10,000 --> 00:05:10,000
对

128
00:05:10,000 --> 00:05:13,000
触到某些

129
00:05:13,000 --> 00:05:15,000
flame war 的

130
00:05:15,000 --> 00:05:16,000
征战之点了

131
00:05:16,000 --> 00:05:20,000
然后有人说

132
00:05:20,000 --> 00:05:22,000
你说什么 windows 不是最好操系统

133
00:05:22,000 --> 00:05:24,000
这句话就暴露你的水平

134
00:05:24,000 --> 00:05:25,000
好吧

135
00:05:25,000 --> 00:05:26,000
yeah

136
00:05:26,000 --> 00:05:28,000
so bad

137
00:05:28,000 --> 00:05:29,000
对

138
00:05:29,000 --> 00:05:31,000
先回答那个问题吧

139
00:05:31,000 --> 00:05:33,000
为什么会有这么多这种

140
00:05:33,000 --> 00:05:34,000
所以慎战

141
00:05:34,000 --> 00:05:37,000
或者说为什么程学界特别喜欢吵架

142
00:05:37,000 --> 00:05:39,000
我觉得可能就是什么

143
00:05:39,000 --> 00:05:41,000
死理性派

144
00:05:41,000 --> 00:05:42,000
就是

145
00:05:42,000 --> 00:05:44,000
一定要分出一个对错

146
00:05:44,000 --> 00:05:47,000
一定要分出一个高下

147
00:05:47,000 --> 00:05:49,000
是不是有这个原因在里面

148
00:05:49,000 --> 00:05:53,000
可是真正死理性派应该会意识到这种

149
00:05:53,000 --> 00:05:55,000
争吵的无意义之处

150
00:05:55,000 --> 00:05:56,000
但我觉得这不是其实

151
00:05:56,000 --> 00:05:58,000
那就不是火力性派

152
00:05:58,000 --> 00:05:59,000
那就是火力性派

153
00:05:59,000 --> 00:06:00,000
你想想

154
00:06:00,000 --> 00:06:02,000
就是 flaming war 这个词

155
00:06:02,000 --> 00:06:04,000
可能不是那么特别的图书这点

156
00:06:04,000 --> 00:06:05,000
但是 holly war

157
00:06:05,000 --> 00:06:06,000
你想想这个词

158
00:06:06,000 --> 00:06:07,000
holly

159
00:06:07,000 --> 00:06:11,000
holly 是一个非常 holly 只有在

160
00:06:11,000 --> 00:06:13,000
对于宗教的

161
00:06:13,000 --> 00:06:14,000
holly 本身是一个宗教的感觉

162
00:06:14,000 --> 00:06:15,000
对吧

163
00:06:15,000 --> 00:06:16,000
你只有

164
00:06:16,000 --> 00:06:19,000
你只有对某种东西产生

165
00:06:19,000 --> 00:06:21,000
除了非理性的崇拜

166
00:06:21,000 --> 00:06:23,000
才有可能认为

167
00:06:23,000 --> 00:06:26,000
这件事情是 holly 的

168
00:06:26,000 --> 00:06:26,000
对吧

169
00:06:26,000 --> 00:06:27,000
有大的

170
00:06:27,000 --> 00:06:31,000
那如果你真正是一个真正的死理性派

171
00:06:31,000 --> 00:06:32,000
那你应该

172
00:06:32,000 --> 00:06:35,000
能够克服情感上的偏见

173
00:06:35,000 --> 00:06:37,000
来救世论士的讨论问题

174
00:06:37,000 --> 00:06:39,000
但实际上我们看到

175
00:06:39,000 --> 00:06:43,000
至少我是不可能做到这一点

176
00:06:43,000 --> 00:06:45,000
就是你不能禀出感情色彩

177
00:06:45,000 --> 00:06:47,000
然后再考虑你的每一个决定的

178
00:06:47,000 --> 00:06:48,000
是吧

179
00:06:48,000 --> 00:06:49,000
对

180
00:06:49,000 --> 00:06:52,000
而且我觉得其实很多程序人

181
00:06:52,000 --> 00:06:55,000
是具有这样的一种感情上的偏执的

182
00:06:55,000 --> 00:07:00,000
因为在标榜或者说追求死理性派

183
00:07:00,000 --> 00:07:05,000
这一个身份认同的同时

184
00:07:05,000 --> 00:07:06,000
人们会试图去

185
00:07:06,000 --> 00:07:09,000
或者说有一无一的忽视了

186
00:07:09,000 --> 00:07:13,000
感情上面的情商建设可以这么理解

187
00:07:13,000 --> 00:07:19,000
就是一旦对方和自己不一样的观点的话

188
00:07:19,000 --> 00:07:22,000
就很容易产生一种情感上的偏执说

189
00:07:22,000 --> 00:07:22,000
你一定是错的

190
00:07:22,000 --> 00:07:23,000
我一定是对的

191
00:07:25,000 --> 00:07:27,000
这个我还没有意识到

192
00:07:27,000 --> 00:07:27,000
对

193
00:07:27,000 --> 00:07:30,000
我觉得其实是一种宗教情节

194
00:07:30,000 --> 00:07:32,000
就是 hollywarr 这个名字

195
00:07:32,000 --> 00:07:33,000
或者说不是宗教情节

196
00:07:33,000 --> 00:07:36,000
而是一种非理性的情节

197
00:07:36,000 --> 00:07:38,000
就恰恰是因为非理性的部分

198
00:07:38,000 --> 00:07:40,000
被人忽视了

199
00:07:40,000 --> 00:07:45,000
才会以这种看似理性的方式去打这样的战争

200
00:07:48,000 --> 00:07:49,000
那你

201
00:07:49,000 --> 00:07:51,000
我又有一个猜想

202
00:07:51,000 --> 00:07:53,000
我不知道是不是正确的

203
00:07:53,000 --> 00:07:57,000
这当然跟他是不是理性的

204
00:07:57,000 --> 00:07:58,000
我们可以再讨论

205
00:07:58,000 --> 00:08:00,000
就是

206
00:08:00,000 --> 00:08:02,000
我觉得变成或者说你做一个思想的工作

207
00:08:02,000 --> 00:08:05,000
或者是你做一种什么生产力的工具也好

208
00:08:05,000 --> 00:08:07,000
还是做一个什么变成语言也好

209
00:08:07,000 --> 00:08:10,000
你都是要找到一个群体的

210
00:08:10,000 --> 00:08:10,000
对吧

211
00:08:10,000 --> 00:08:14,000
然后你是需要所谓扩大你的叫做 mindshare

212
00:08:14,000 --> 00:08:18,000
就是有更多的人和你分享同样的观点

213
00:08:18,000 --> 00:08:22,000
或者是跟你有同样的对某一种事情的认知

214
00:08:22,000 --> 00:08:25,000
这样对你来说整体而言是有好处的

215
00:08:25,000 --> 00:08:27,000
举个最简单的例子

216
00:08:27,000 --> 00:08:29,000
比如说你是一个很小众的语言

217
00:08:29,000 --> 00:08:32,000
那么你是这个很小众语言的铁杆粉丝

218
00:08:32,000 --> 00:08:34,000
你可能很经常会觉得

219
00:08:34,000 --> 00:08:34,000
哎呀

220
00:08:34,000 --> 00:08:37,000
这个问题为什么不用这个语言写

221
00:08:37,000 --> 00:08:38,000
这个写出来发生会很优雅

222
00:08:38,000 --> 00:08:40,000
结果会多好

223
00:08:40,000 --> 00:08:42,000
而且一旦有很多人这么写的话

224
00:08:42,000 --> 00:08:44,000
那我很多 library 就是所谓的 cool

225
00:08:44,000 --> 00:08:45,000
就已经有现成了

226
00:08:45,000 --> 00:08:47,000
我也不用自己再动手写

227
00:08:47,000 --> 00:08:49,000
我就可以直接拿来用就可以了

228
00:08:49,000 --> 00:08:53,000
那么出于这种比较自立的角度去看的话

229
00:08:53,000 --> 00:08:57,000
你的一个默认的倾向就应该是

230
00:08:57,000 --> 00:08:58,000
就如果你真的是很喜欢这个东西的话

231
00:08:58,000 --> 00:09:01,000
你会把他推荐给你认识的

232
00:09:01,000 --> 00:09:02,000
或者不认识的人

233
00:09:02,000 --> 00:09:05,000
然后像他们也能够像你一样

234
00:09:05,000 --> 00:09:07,000
认识到他的好处和优点

235
00:09:07,000 --> 00:09:08,000
从而加入你的行列

236
00:09:08,000 --> 00:09:10,000
从而为这个东西

237
00:09:10,000 --> 00:09:12,000
就所谓扩大这个东西的 myshare

238
00:09:12,000 --> 00:09:15,000
然后这样对于你个体而言

239
00:09:15,000 --> 00:09:17,000
也是非常有力的一个结果

240
00:09:17,000 --> 00:09:19,000
你我不知道这样讲

241
00:09:19,000 --> 00:09:21,000
说清楚刚刚我讲那个意思

242
00:09:21,000 --> 00:09:22,000
是 我可以理解

243
00:09:22,000 --> 00:09:25,000
就是换一种换一个角度说

244
00:09:25,000 --> 00:09:26,000
每一种工具

245
00:09:26,000 --> 00:09:29,000
或者说比如说我们非常推崇的

246
00:09:29,000 --> 00:09:30,000
你和我都是 WIM 党

247
00:09:30,000 --> 00:09:34,000
那我们两个会对于这种工具所推崇

248
00:09:34,000 --> 00:09:38,000
或者说这种这个工具的设计者所使用

249
00:09:38,000 --> 00:09:40,000
在工具之中

250
00:09:40,000 --> 00:09:42,000
注入的这么一种使用哲学

251
00:09:42,000 --> 00:09:44,000
或者说使用模式

252
00:09:44,000 --> 00:09:46,000
产生一定的意见

253
00:09:46,000 --> 00:09:49,000
然后我们会认为

254
00:09:49,000 --> 00:09:53,000
同样持有这样意见的使用者

255
00:09:53,000 --> 00:09:54,000
是我们的同类

256
00:09:54,000 --> 00:09:57,000
但是在一些其他边际器里面

257
00:09:57,000 --> 00:10:00,000
可能没有这样的倾向

258
00:10:00,000 --> 00:10:01,000
或者说这样倾向会比较少

259
00:10:01,000 --> 00:10:04,000
比如说我们很少会

260
00:10:04,000 --> 00:10:05,000
也许这样的倾向真的有

261
00:10:05,000 --> 00:10:07,000
但是我们很少会听说

262
00:10:07,000 --> 00:10:10,000
有什么 notepad 用户

263
00:10:10,000 --> 00:10:12,000
会组成这么一个性小组

264
00:10:12,000 --> 00:10:16,000
或者是更大种 eclipse

265
00:10:16,000 --> 00:10:19,000
我觉得 eclipse 好像也是一个非常非常

266
00:10:19,000 --> 00:10:20,000
路人的这么一个边际器

267
00:10:20,000 --> 00:10:23,000
很少会有人非常以使用 eclipse 为

268
00:10:23,000 --> 00:10:27,000
为一种身份认同的标志

269
00:10:27,000 --> 00:10:28,000
有可能是因为太普遍了

270
00:10:28,000 --> 00:10:31,000
有可能是因为太平庸了

271
00:10:31,000 --> 00:10:35,000
但对于任何一种稍微具有一些

272
00:10:35,000 --> 00:10:37,000
就像我说的这种使用哲学

273
00:10:37,000 --> 00:10:39,000
在里面的工具来说

274
00:10:39,000 --> 00:10:41,000
这种用户情节是很容易产生的

275
00:10:41,000 --> 00:10:42,000
就像你说的

276
00:10:42,000 --> 00:10:43,000
对

277
00:10:43,000 --> 00:10:45,000
所以就是反正就是一个什么

278
00:10:45,000 --> 00:10:46,000
身份认同在里面

279
00:10:46,000 --> 00:10:48,000
我觉得我们会找到自己的同类

280
00:10:48,000 --> 00:10:50,000
然后去交流一些使用体验

281
00:10:50,000 --> 00:10:51,000
心得体会

282
00:10:51,000 --> 00:10:53,000
包括什么各种插件之类的

283
00:10:53,000 --> 00:10:56,000
然后我反正我我个人会有这种

284
00:10:56,000 --> 00:10:57,000
这种倾向吧

285
00:10:57,000 --> 00:10:58,000
反正

286
00:10:59,000 --> 00:11:00,000
对

287
00:11:00,000 --> 00:11:01,000
OK

288
00:11:01,000 --> 00:11:04,000
今天然后我们还是从最

289
00:11:04,000 --> 00:11:05,000
也不叫最古老

290
00:11:05,000 --> 00:11:08,000
就是尊草的最凶的两大编辑

291
00:11:08,000 --> 00:11:09,000
开始入手

292
00:11:09,000 --> 00:11:10,000
对最经典的一场战力的分析

293
00:11:10,000 --> 00:11:11,000
开始

294
00:11:11,000 --> 00:11:11,000
对

295
00:11:13,000 --> 00:11:17,000
先讲的那个是我和吴涛都很喜欢的 VIM

296
00:11:17,000 --> 00:11:21,000
这 VIM 其实它不仅仅是一个编辑器

297
00:11:21,000 --> 00:11:21,000
对吧

298
00:11:21,000 --> 00:11:22,000
对

299
00:11:22,000 --> 00:11:26,000
VIM 其实是一组编辑的最早最早的

300
00:11:26,000 --> 00:11:27,000
就是 VIM 编辑

301
00:11:27,000 --> 00:11:29,000
VIM 这种编辑

302
00:11:29,000 --> 00:11:36,000
可以追溯到一个叫做 X 的 text editor

303
00:11:36,000 --> 00:11:42,000
就是它最早是在 unix 上面的一个行编辑器

304
00:11:42,000 --> 00:11:44,000
就是我们现在的编辑器

305
00:11:44,000 --> 00:11:46,000
四共建共的都是一次可以编辑很多行

306
00:11:46,000 --> 00:11:49,000
然后在当时 X 这个编辑器

307
00:11:49,000 --> 00:11:51,000
它只能编辑一次只能编辑一行

308
00:11:51,000 --> 00:11:52,000
就是你打开文件

309
00:11:52,000 --> 00:11:53,000
打开一个文件

310
00:11:53,000 --> 00:11:55,000
你一次只能看到一行或者几行内容

311
00:11:55,000 --> 00:11:59,000
然后你所有的编辑都针对着几行完成

312
00:11:59,000 --> 00:11:59,000
对

313
00:11:59,000 --> 00:12:02,000
然后这是 1976 年的写成的一个工具

314
00:12:02,000 --> 00:12:03,000
对

315
00:12:03,000 --> 00:12:05,000
它是非常非常古老的一个工具

316
00:12:05,000 --> 00:12:10,000
对 V 就是在 EX 之后出现了一个工具叫 V

317
00:12:10,000 --> 00:12:12,000
也就是 VI

318
00:12:12,000 --> 00:12:21,000
VI 出现的目的是把 X 的行编辑扩展到多行编辑

319
00:12:21,000 --> 00:12:28,000
也就是我们现在能够看到的这种多行编辑器的一个命运行

320
00:12:28,000 --> 00:12:29,000
中端上的版本

321
00:12:29,000 --> 00:12:36,000
然后我们所使用的 Vim 又是一个荷兰程序员

322
00:12:36,000 --> 00:12:39,000
把原始的 VI 程序扩展之后

323
00:12:39,000 --> 00:12:43,000
改名叫做 VI improved

324
00:12:43,000 --> 00:12:46,000
然后一直维护到现在这么一个工具

325
00:12:46,000 --> 00:12:50,000
所以我们其实讨论 Vim 的时候讨论是一组 Vim

326
00:12:50,000 --> 00:12:54,000
包括这个 Vim 还有比如说 MacVim 这样在

327
00:12:54,000 --> 00:12:57,000
专门在 Mac 上面运行的或者是 GVim

328
00:12:57,000 --> 00:13:02,000
专门在 XWindows 或者是 Glom 下面运行的图形界面

329
00:13:02,000 --> 00:13:05,000
这些零零送的都可以送到 Vim 里面

330
00:13:05,000 --> 00:13:05,000
对

331
00:13:05,000 --> 00:13:10,000
而且 Vim 还有一些后来的新的后记者

332
00:13:10,000 --> 00:13:14,000
最近比较火的一个叫做 NEOVIM

333
00:13:14,000 --> 00:13:15,000
对吧

334
00:13:15,000 --> 00:13:15,000
对

335
00:13:15,000 --> 00:13:16,000
NEOVIM

336
00:13:16,000 --> 00:13:18,000
它是在 Vim 的

337
00:13:18,000 --> 00:13:21,000
它等于是重写了一遍了

338
00:13:21,000 --> 00:13:27,000
我理解 Vim 的理念是 Vim 这个编细

339
00:13:27,000 --> 00:13:34,000
作为一个非常注重兼容性的代码库

340
00:13:34,000 --> 00:13:35,000
有太多问题

341
00:13:35,000 --> 00:13:39,000
所以他们把里面比较重要的组件重写了一遍

342
00:13:39,000 --> 00:13:42,000
比如说把单元测试全都重写了一遍

343
00:13:42,000 --> 00:13:50,000
然后应该是把 VimScript 解析器用 LOA 重写了一遍

344
00:13:50,000 --> 00:13:56,000
然后以此带来的改进就是整个代码库变得更易堵了

345
00:13:56,000 --> 00:13:59,000
然后维护起来比较容易

346
00:13:59,000 --> 00:14:05,000
因为我们知道 Vim 这个编译器虽然使用的人非常非常多

347
00:14:05,000 --> 00:14:07,000
Contribute 非常非常多

348
00:14:07,000 --> 00:14:10,000
但是其核心维护者其实只有一个人

349
00:14:10,000 --> 00:14:11,000
这个人就是

350
00:14:11,000 --> 00:14:12,000
原则

351
00:14:12,000 --> 00:14:17,000
对 原则叫 Brand Moulin

352
00:14:17,000 --> 00:14:19,000
不是 这是个荷兰语

353
00:14:19,000 --> 00:14:21,000
荷兰语

354
00:14:21,000 --> 00:14:23,000
他是一个河南人

355
00:14:23,000 --> 00:14:26,000
生于 1961 年现在在苏伊士做 Google 员工

356
00:14:26,000 --> 00:14:29,000
我相信我 somehow 在苏伊士的街头见到过这个人

357
00:14:29,000 --> 00:14:31,000
但是我不敢确定

358
00:14:31,000 --> 00:14:35,000
因为如果你去 Vikipi 内容上看他的词条的话

359
00:14:35,000 --> 00:14:39,000
就是他有一张非常知名的照片

360
00:14:39,000 --> 00:14:43,000
他穿着一件胸前印着 slash code slash

361
00:14:43,000 --> 00:14:46,000
然后下面写个问号的黑 T 恤黑色 T 恤的

362
00:14:46,000 --> 00:14:50,000
所以我对他的相貌还是比较有概念的

363
00:14:50,000 --> 00:14:52,000
所以那天也许我在苏伊士街头看到过他

364
00:14:52,000 --> 00:14:54,000
但是不敢确定

365
00:14:54,000 --> 00:14:56,000
他现在是 Google 员工

366
00:14:56,000 --> 00:15:01,000
就是 Google 是一个聚集了很多神人的地方

367
00:15:01,000 --> 00:15:04,000
之前 Python 的作者好像也在 Google 吧

368
00:15:04,000 --> 00:15:05,000
现在已经去了 Drawbox

369
00:15:05,000 --> 00:15:07,000
对 现在已经在 Drawbox

370
00:15:07,000 --> 00:15:12,000
对 这个人他是 Vim 项目的 Single Ponyl failure

371
00:15:12,000 --> 00:15:14,000
就是一旦这个人挂了

372
00:15:14,000 --> 00:15:17,000
如果 Bram 某一天出去街上

373
00:15:17,000 --> 00:15:21,000
被苏伊士的电车给撞死了

374
00:15:21,000 --> 00:15:23,000
那么 Vim 这个项目也就完蛋了估计

375
00:15:23,000 --> 00:15:24,000
God forbid

376
00:15:24,000 --> 00:15:26,000
对 千万不要发现这事

377
00:15:26,000 --> 00:15:28,000
因为有人 我没有看过

378
00:15:28,000 --> 00:15:30,000
但是我之前有缩耳闻

379
00:15:30,000 --> 00:15:32,000
就是看 NeoVim 那件事的事情

380
00:15:32,000 --> 00:15:37,000
就是 Vim 本身戴马裤的写法是比较古怪的

381
00:15:37,000 --> 00:15:43,000
对 肯定是一个所谓逐渐生长期待的这么一个项目

382
00:15:43,000 --> 00:15:46,000
它不是一开始就有一个比较宏大的规划

383
00:15:46,000 --> 00:15:51,000
或者说在所谓 architecture 这一部分做的不是很好

384
00:15:51,000 --> 00:15:52,000
其实

385
00:15:52,000 --> 00:15:56,000
对 你可以说它甚至是不是一个很优美的戴马裤

386
00:15:56,000 --> 00:15:57,000
对

387
00:15:57,000 --> 00:16:00,000
也是为什么 NeoVim 那帮人想着

388
00:16:00,000 --> 00:16:01,000
哇靠 没法惹吧

389
00:16:01,000 --> 00:16:02,000
我们还是自己从

390
00:16:02,000 --> 00:16:07,000
他们之前也想给 Bram 提一个 patch

391
00:16:07,000 --> 00:16:08,000
因为他好像这个

392
00:16:08,000 --> 00:16:10,000
很没有用那个分布式戴马管理吧

393
00:16:10,000 --> 00:16:11,000
我记得

394
00:16:11,000 --> 00:16:13,000
反正上给他提个 patch

395
00:16:13,000 --> 00:16:15,000
然后就经常被拒掉

396
00:16:15,000 --> 00:16:18,000
然后他就算我们自己搞一个好了

397
00:16:18,000 --> 00:16:18,000
还有一个问题

398
00:16:18,000 --> 00:16:21,000
就是 Vim 这个戴马裤

399
00:16:21,000 --> 00:16:26,000
它兼容非常非常非常多的系统和平台

400
00:16:26,000 --> 00:16:28,000
而且这些所有的兼容戴马

401
00:16:28,000 --> 00:16:30,000
都是它一个人在维护的

402
00:16:30,000 --> 00:16:32,000
就 Bram 一个人在维护的

403
00:16:32,000 --> 00:16:35,000
那么有些那种戏剧古怪的平台

404
00:16:35,000 --> 00:16:37,000
现在我估计很多人从来

405
00:16:37,000 --> 00:16:38,000
不是说没有见过

406
00:16:38,000 --> 00:16:40,000
可能听到没有听过

407
00:16:40,000 --> 00:16:41,000
对 什么 B E O S

408
00:16:41,000 --> 00:16:43,000
或者是什么

409
00:16:43,000 --> 00:16:47,000
Omega 还是 Omega

410
00:16:48,000 --> 00:16:49,000
Omega

411
00:16:49,000 --> 00:16:51,000
反正有很多这种奇奇怪怪的平台

412
00:16:51,000 --> 00:16:55,000
至少我觉得像我们这种新生戴

413
00:16:55,000 --> 00:16:57,000
就是后面的什么

414
00:16:57,000 --> 00:17:00,000
不是六七十年代出生的那帮人

415
00:17:00,000 --> 00:17:01,000
是不知道那些东西的

416
00:17:01,000 --> 00:17:01,000
我是长生的

417
00:17:01,000 --> 00:17:02,000
对

418
00:17:02,000 --> 00:17:05,000
可能就是在西欧某个国家的某个角落里面

419
00:17:05,000 --> 00:17:07,000
有一个从六十年的运行之间的系统上面

420
00:17:07,000 --> 00:17:08,000
必须要跑

421
00:17:08,000 --> 00:17:09,000
Vim

422
00:17:09,000 --> 00:17:11,000
然后他就必须维护这一份戴

423
00:17:11,000 --> 00:17:11,000
对

424
00:17:11,000 --> 00:17:13,000
然后就其实像很多

425
00:17:13,000 --> 00:17:15,000
像比如说你有 Vim 这种新兴的项目

426
00:17:15,000 --> 00:17:15,000
他就说

427
00:17:15,000 --> 00:17:16,000
哇

428
00:17:16,000 --> 00:17:19,000
那我为什么要花时间花精力去支持那么多

429
00:17:19,000 --> 00:17:20,000
可能地球上

430
00:17:20,000 --> 00:17:22,000
就大部分人都可能没有听说过的

431
00:17:22,000 --> 00:17:24,000
那种平台或者系统呢

432
00:17:24,000 --> 00:17:27,000
就这里是一个就是减少戴马量的一个办法

433
00:17:27,000 --> 00:17:28,000
吧

434
00:17:28,000 --> 00:17:29,000
没错

435
00:17:29,000 --> 00:17:29,000
对

436
00:17:29,000 --> 00:17:32,000
这就刚刚也就提到了 Vim 的一个优点

437
00:17:32,000 --> 00:17:33,000
就是所谓的

438
00:17:33,000 --> 00:17:34,000
有 Biquities

439
00:17:34,000 --> 00:17:36,000
无处不在

440
00:17:36,000 --> 00:17:36,000
对

441
00:17:36,000 --> 00:17:37,000
就你很有可能

442
00:17:37,000 --> 00:17:40,000
就我们既然谈到了 Vim 和 Emacs 的圣战

443
00:17:40,000 --> 00:17:42,000
基本上我们可以说

444
00:17:42,000 --> 00:17:44,000
现在就可以说出 Vim 的优点

445
00:17:44,000 --> 00:17:50,000
就是几乎你有机会碰触到任何一台 Unix 电脑

446
00:17:50,000 --> 00:17:51,000
类 Unix 电脑

447
00:17:51,000 --> 00:17:54,000
基本上都会有 Vim 的某种形式存在

448
00:17:54,000 --> 00:17:55,000
但是 Emacs 都不一定

449
00:17:55,000 --> 00:17:56,000
对

450
00:17:56,000 --> 00:17:59,000
而且之前我经常在导致这个

451
00:18:00,000 --> 00:18:01,000
Linux 的路由器

452
00:18:01,000 --> 00:18:03,000
还有很多这种所谓的

453
00:18:04,000 --> 00:18:06,000
经检版或者是嵌入式的系统里面

454
00:18:06,000 --> 00:18:08,000
你能够发现它默认自在一个

455
00:18:08,000 --> 00:18:14,000
就是 Vi 或者是 Vim Tiny 这种超小型的 Vim Bench

456
00:18:14,000 --> 00:18:16,000
不是全部特性都有的

457
00:18:17,000 --> 00:18:19,000
但是 Emacs 这种是肯定找不到的

458
00:18:20,000 --> 00:18:21,000
对

459
00:18:21,000 --> 00:18:23,000
所以无处不在

460
00:18:23,000 --> 00:18:24,000
没有记错

461
00:18:24,000 --> 00:18:28,000
Vi 应该是 Posix 标准的一部分吧

462
00:18:28,000 --> 00:18:29,000
什么

463
00:18:29,000 --> 00:18:30,000
我还好像是

464
00:18:30,000 --> 00:18:36,000
就是如果你要让你的系统符合 Posix 或者是

465
00:18:36,000 --> 00:18:39,000
就是 Max 过的那个叫什么 Single Unix Specification

466
00:18:39,000 --> 00:18:42,000
那你的系统里面必须包含 Vi

467
00:18:42,000 --> 00:18:43,000
天哪

468
00:18:43,000 --> 00:18:46,000
这个 Specification 也管得太多了吧

469
00:18:46,000 --> 00:18:46,000
对

470
00:18:46,000 --> 00:18:50,000
好像这个还包括好像 Polo 也是一部分

471
00:18:50,000 --> 00:18:51,000
天

472
00:18:51,000 --> 00:18:51,000
不要吧

473
00:18:51,000 --> 00:18:52,000
真的

474
00:18:52,000 --> 00:18:52,000
对

475
00:18:52,000 --> 00:18:54,000
Anyway 真的不开玩笑

476
00:18:54,000 --> 00:18:55,000
OK

477
00:18:55,000 --> 00:18:58,000
但 Emacs 是不是我就不知道

478
00:18:58,000 --> 00:19:00,000
感觉三观又被刷新的

479
00:19:00,000 --> 00:19:04,000
所以为什么 Vim 或者说类 Vim 的这种编辑

480
00:19:04,000 --> 00:19:06,000
会这么的普及

481
00:19:06,000 --> 00:19:08,000
而 Emacs 却没有

482
00:19:08,000 --> 00:19:10,000
这里有什么技术的原因

483
00:19:11,000 --> 00:19:14,000
我觉得主要的一个原因还是 Vi 或者说 Vim

484
00:19:14,000 --> 00:19:15,000
其实它不是

485
00:19:15,000 --> 00:19:18,000
它不单单是一种编辑器

486
00:19:18,000 --> 00:19:19,000
它是一个

487
00:19:19,000 --> 00:19:20,000
它是一种语言

488
00:19:20,000 --> 00:19:21,000
就是它是一种

489
00:19:21,000 --> 00:19:22,000
它是一种所谓方式

490
00:19:22,000 --> 00:19:23,000
你可以说

491
00:19:23,000 --> 00:19:27,000
它是一种你告诉编辑器

492
00:19:27,000 --> 00:19:28,000
你想要做的事情

493
00:19:29,000 --> 00:19:31,000
的一套机制

494
00:19:31,000 --> 00:19:33,000
而这套机制本身并不

495
00:19:33,000 --> 00:19:37,000
其实并不依赖于 Vi 或者是 Vim 所存在的

496
00:19:39,000 --> 00:19:42,000
所以它也就被移植到了更多地方

497
00:19:43,000 --> 00:19:44,000
比如说现在基本上

498
00:19:44,000 --> 00:19:47,000
任何稍微主流一点的编辑器里面都会有

499
00:19:47,000 --> 00:19:51,000
Vi 或者是类 Vim 的 Keybinding 可以选

500
00:19:52,000 --> 00:19:54,000
但是这个如果这样说来的话

501
00:19:54,000 --> 00:19:58,000
其实反而是 Emacs 那种 Keybinding 会比较常见一点

502
00:19:58,000 --> 00:20:00,000
就在大部分的编辑器里面

503
00:20:00,000 --> 00:20:01,000
像我们已经聊到了

504
00:20:01,000 --> 00:20:03,000
在 MAC 上面

505
00:20:03,000 --> 00:20:04,000
大部分的文本书

506
00:20:04,000 --> 00:20:09,000
狂是自带一些基本的 Emacs 的 Keybinding 的

507
00:20:09,000 --> 00:20:10,000
不

508
00:20:10,000 --> 00:20:11,000
但问题在于比如说

509
00:20:11,000 --> 00:20:12,000
你说 Eclipse

510
00:20:12,000 --> 00:20:12,000
嗯

511
00:20:12,000 --> 00:20:15,000
Eclipse 或者是

512
00:20:15,000 --> 00:20:20,000
或者是 NetBeans 之类的 IDE 里面

513
00:20:21,000 --> 00:20:23,000
是不会有 EmacsKeybinding

514
00:20:24,000 --> 00:20:27,000
但是 VimKeybinding 肯定会有人实现出来

515
00:20:29,000 --> 00:20:31,000
这个有点意思

516
00:20:31,000 --> 00:20:31,000
对

517
00:20:31,000 --> 00:20:32,000
这其中原因

518
00:20:32,000 --> 00:20:34,000
我觉得就是因为 Vim 本身是一种语言

519
00:20:35,000 --> 00:20:35,000
对

520
00:20:35,000 --> 00:20:38,000
这里要可能不是很多人都用

521
00:20:38,000 --> 00:20:40,000
或者说是学了一下

522
00:20:40,000 --> 00:20:42,000
但是没有坚持到底

523
00:20:42,000 --> 00:20:45,000
就是 Vim 的它的魅力或者优势在哪里

524
00:20:45,000 --> 00:20:46,000
就刚才讲的

525
00:20:46,000 --> 00:20:49,000
它有一个所谓的语言这里

526
00:20:49,000 --> 00:20:52,000
但我们当然会解释这个语言是什么样的

527
00:20:52,000 --> 00:20:55,000
然后另外一个特点就是所谓的模态这一点

528
00:20:55,000 --> 00:20:57,000
所以

529
00:20:57,000 --> 00:20:59,000
这两者其实是相符相承的

530
00:20:59,000 --> 00:20:59,000
可以说

531
00:20:59,000 --> 00:21:00,000
我们先讲每一个

532
00:21:00,000 --> 00:21:03,000
对

533
00:21:03,000 --> 00:21:04,000
其实现在就可以解释一下了

534
00:21:04,000 --> 00:21:05,000
到底为什么

535
00:21:05,000 --> 00:21:06,000
或者说首先解释一下

536
00:21:06,000 --> 00:21:08,000
为什么这么难

537
00:21:08,000 --> 00:21:12,000
或者说怎么样才能让 Vim 变得不那么难

538
00:21:12,000 --> 00:21:14,000
就是你要先理解一个概念

539
00:21:14,000 --> 00:21:14,000
就是

540
00:21:16,000 --> 00:21:19,000
或者说你要从自己的使用习惯之中

541
00:21:19,000 --> 00:21:21,000
观察出一个概念来

542
00:21:21,000 --> 00:21:24,000
也就是你最终写

543
00:21:25,000 --> 00:21:27,000
出来的文本里面

544
00:21:27,000 --> 00:21:30,000
你是看不到任何

545
00:21:31,000 --> 00:21:33,000
移动光标或者修改的痕迹的

546
00:21:33,000 --> 00:21:34,000
对不对

547
00:21:34,000 --> 00:21:34,000
对

548
00:21:34,000 --> 00:21:36,000
因为那个是转写的过程

549
00:21:36,000 --> 00:21:38,000
跟最终产品是没有关系的

550
00:21:38,000 --> 00:21:39,000
也就是说

551
00:21:39,000 --> 00:21:41,000
当我们在写一篇文章的时候

552
00:21:41,000 --> 00:21:43,000
我们按下一些键的时候

553
00:21:43,000 --> 00:21:46,000
所达成的目的是

554
00:21:46,000 --> 00:21:49,000
让这些键所代表的字符

555
00:21:49,000 --> 00:21:51,000
成为最终文章的一部分

556
00:21:51,000 --> 00:21:52,000
这是一种状态

557
00:21:52,000 --> 00:21:53,000
而另一种状态

558
00:21:53,000 --> 00:21:57,000
比如说我们按方向键

559
00:21:57,000 --> 00:21:58,000
或者是按 pageup

560
00:21:58,000 --> 00:21:58,000
pagedown

561
00:21:58,000 --> 00:22:00,000
那就是按 homeman 的时候

562
00:22:00,000 --> 00:22:06,000
意图在于去改变我们刚刚

563
00:22:06,000 --> 00:22:08,000
以第一种状态所写下的文章

564
00:22:08,000 --> 00:22:11,000
这是第二种状态

565
00:22:11,000 --> 00:22:14,000
也就是说我们其实在写文章的时候

566
00:22:14,000 --> 00:22:17,000
已经在两种状态之间切换来切换去的

567
00:22:17,000 --> 00:22:18,000
只不过

568
00:22:18,000 --> 00:22:21,000
如果你没有意识到这一点的话

569
00:22:21,000 --> 00:22:21,000
在你看来

570
00:22:21,000 --> 00:22:23,000
两者其实都是在按键

571
00:22:24,000 --> 00:22:26,000
只不过有些键做这种事情

572
00:22:26,000 --> 00:22:27,000
有些键做那种事情而已

573
00:22:27,000 --> 00:22:29,000
那么 Wim

574
00:22:29,000 --> 00:22:30,000
他的难点

575
00:22:30,000 --> 00:22:34,000
或者说他所抽象出来的一套概念就是

576
00:22:34,000 --> 00:22:37,000
既然你有两种状态

577
00:22:37,000 --> 00:22:39,000
那我就明确定义两种状态好

578
00:22:39,000 --> 00:22:43,000
那么 Wim 就明确的区分出了两种

579
00:22:43,000 --> 00:22:45,000
或者说言格意义上是三种模式

580
00:22:45,000 --> 00:22:47,000
在其中一种模式下

581
00:22:47,000 --> 00:22:50,000
你所写的一切内容

582
00:22:50,000 --> 00:22:52,000
你在键盘上敲入的一些内容

583
00:22:53,000 --> 00:22:54,000
都会成为成层正宫

584
00:22:54,000 --> 00:22:58,000
或者说都会成为最终出现在文档之中的文字

585
00:22:58,000 --> 00:23:00,000
而在另外一种模式之下

586
00:23:00,000 --> 00:23:04,000
你可以告诉编辑器你想要干什么

587
00:23:04,000 --> 00:23:08,000
比如说编辑器我想要删掉我写下来

588
00:23:08,000 --> 00:23:11,000
我处于我光谬右侧的三个单词

589
00:23:11,000 --> 00:23:14,000
或者说编辑器我想要删掉我

590
00:23:14,000 --> 00:23:17,000
现在这一行以及上面那一行

591
00:23:17,000 --> 00:23:20,000
以及再上面那一行的

592
00:23:20,000 --> 00:23:22,000
刚刚敲入输入的代码

593
00:23:22,000 --> 00:23:27,000
或者说编辑我想要让现在的用双引号

594
00:23:27,000 --> 00:23:31,000
引起来的这一句话改变成单引号

595
00:23:31,000 --> 00:23:32,000
诸如此来

596
00:23:32,000 --> 00:23:34,000
那么这种模式叫做普通模式

597
00:23:35,000 --> 00:23:37,000
然后还有第三种模式叫做命令模式

598
00:23:37,000 --> 00:23:39,000
但是它目前来说不是很重要

599
00:23:39,000 --> 00:23:43,000
我们比较重大的难点

600
00:23:43,000 --> 00:23:45,000
对于 Wim 的初学者来说

601
00:23:45,000 --> 00:23:50,000
就是为什么要出现普通模式和编辑模式之间的区别

602
00:23:52,000 --> 00:23:55,000
那么反过来想

603
00:23:57,000 --> 00:23:59,000
如果你能适应这一点的话

604
00:23:59,000 --> 00:24:02,000
那么在普通模式之下

605
00:24:02,000 --> 00:24:05,000
你可以以非常快的速度

606
00:24:05,000 --> 00:24:09,000
以一种非常特别的语言

607
00:24:09,000 --> 00:24:12,000
就是加引号的语言来告诉 Wim 你想要干什么

608
00:24:12,000 --> 00:24:14,000
然后 Wim 可以很快的替你完成这件事情

609
00:24:14,000 --> 00:24:17,000
比如说假如说你换用别的编辑

610
00:24:17,000 --> 00:24:18,000
比如说用 NotePad

611
00:24:18,000 --> 00:24:21,000
然后你要删掉接下来的三个单词

612
00:24:21,000 --> 00:24:24,000
你可能会怎么做呢

613
00:24:24,000 --> 00:24:25,000
按住 Delete 键不放

614
00:24:26,000 --> 00:24:28,000
或者是按住 Shift 选中三个单词

615
00:24:28,000 --> 00:24:30,000
然后按一次 Delete 键

616
00:24:31,000 --> 00:24:34,000
但是在 Wim 的模式之下

617
00:24:34,000 --> 00:24:35,000
你只需要告诉别人说

618
00:24:35,000 --> 00:24:37,000
删除三个单词

619
00:24:37,000 --> 00:24:38,000
对

620
00:24:38,000 --> 00:24:40,000
D 3 W

621
00:24:40,000 --> 00:24:41,000
就是你按 D 键

622
00:24:41,000 --> 00:24:42,000
然后按三键再按 W 键

623
00:24:42,000 --> 00:24:44,000
也就是 Delete 3 W

624
00:24:45,000 --> 00:24:48,000
然后 Wim 就会递你删掉公标诱刺的三个单词

625
00:24:48,000 --> 00:24:50,000
所以这里就是有一个

626
00:24:50,000 --> 00:24:53,000
刚才你讲的 Wim 的操作语言

627
00:24:53,000 --> 00:24:58,000
我们刚才看到它是有一个所谓的动作

628
00:24:58,000 --> 00:25:01,000
然后量词

629
00:25:01,000 --> 00:25:03,000
然后再加这个所谓冰语的结构

630
00:25:04,000 --> 00:25:05,000
就是一个简单的比较简单的

631
00:25:05,000 --> 00:25:07,000
当然主语模式就是你自己

632
00:25:07,000 --> 00:25:08,000
这个就不用讲了

633
00:25:10,000 --> 00:25:13,000
也是就是因为这条语言使得 Wim 在

634
00:25:13,000 --> 00:25:16,000
其实在我们记住铁盖粉丝的角度

635
00:25:16,000 --> 00:25:18,000
看来它的编辑的效率是非常高的

636
00:25:18,000 --> 00:25:19,000
因为刚才你讲

637
00:25:19,000 --> 00:25:21,000
那个问题其实没有回答

638
00:25:21,000 --> 00:25:22,000
就是为什么 Wim 会区分

639
00:25:22,000 --> 00:25:24,000
这个所谓的编辑

640
00:25:24,000 --> 00:25:26,000
或者叫做专业的数据

641
00:25:26,000 --> 00:25:27,000
叫做 Charroom

642
00:25:27,000 --> 00:25:30,000
什么 InsterMode 和命令

643
00:25:30,000 --> 00:25:31,000
就刚才讲的这个

644
00:25:31,000 --> 00:25:33,000
在命令里的专业数据

645
00:25:33,000 --> 00:25:35,000
叫做 NormalMode 的普通模式

646
00:25:36,000 --> 00:25:37,000
其实我觉得这里有一个

647
00:25:38,000 --> 00:25:39,000
上次来跟 Lawrence 讨论这个问题

648
00:25:39,000 --> 00:25:45,000
就是说写程序和写普通的文章

649
00:25:45,000 --> 00:25:46,000
有一个很大的区别

650
00:25:46,000 --> 00:25:47,000
我觉得就是

651
00:25:47,000 --> 00:25:48,000
可能写程序的时候

652
00:25:48,000 --> 00:25:49,000
你更多的时候

653
00:25:49,000 --> 00:25:50,000
我不是真的在写

654
00:25:50,000 --> 00:25:51,000
而是跟他说在读

655
00:25:51,000 --> 00:25:53,000
你之前写过的程序

656
00:25:53,000 --> 00:25:56,000
然后再做一些轻度的修改

657
00:25:56,000 --> 00:26:00,000
对或者说写文程序的 80%的时间是在改

658
00:26:00,000 --> 00:26:01,000
对 是在读

659
00:26:01,000 --> 00:26:02,000
是在不停的调试

660
00:26:02,000 --> 00:26:04,000
是在不停的更正你

661
00:26:04,000 --> 00:26:06,000
脑海之中的运算模型

662
00:26:06,000 --> 00:26:07,000
对

663
00:26:07,000 --> 00:26:08,000
不过这样说其实也不太对

664
00:26:08,000 --> 00:26:10,000
因为我知道很多文章写出来

665
00:26:10,000 --> 00:26:11,000
也是要经常改的

666
00:26:11,000 --> 00:26:11,000
但是

667
00:26:12,000 --> 00:26:13,000
对

668
00:26:13,000 --> 00:26:14,000
我不知道你怎么样

669
00:26:14,000 --> 00:26:15,000
但至少我在写文章的时候

670
00:26:15,000 --> 00:26:16,000
会有那种

671
00:26:16,000 --> 00:26:18,000
就是写到在纵里面的时候

672
00:26:18,000 --> 00:26:20,000
会有那种形容流水的感觉

673
00:26:20,000 --> 00:26:21,000
就是一气呵成

674
00:26:21,000 --> 00:26:22,000
不会要跳来跳去

675
00:26:22,000 --> 00:26:24,000
会自写很多很多字

676
00:26:24,000 --> 00:26:25,000
就很少

677
00:26:25,000 --> 00:26:27,000
一般上基本上的修改

678
00:26:27,000 --> 00:26:29,000
会集中在一个阶段里面改

679
00:26:29,000 --> 00:26:30,000
但是写程序就很少这样

680
00:26:30,000 --> 00:26:31,000
对

681
00:26:31,000 --> 00:26:33,000
而且就是刚才我也讲了

682
00:26:33,000 --> 00:26:34,000
写程序更多

683
00:26:34,000 --> 00:26:35,000
就是我们所谓的写程序

684
00:26:35,000 --> 00:26:35,000
更多的时候

685
00:26:35,000 --> 00:26:38,000
你是在翻出你之前写过的程序

686
00:26:38,000 --> 00:26:40,000
或者是别人之前写过的程序

687
00:26:40,000 --> 00:26:42,000
然后你再去做一些阅读

688
00:26:42,000 --> 00:26:43,000
然后做一些小的调整而已

689
00:26:43,000 --> 00:26:44,000
并不是真的

690
00:26:44,000 --> 00:26:46,000
你每次都在从头到尾去

691
00:26:46,000 --> 00:26:48,000
就是从头到尾

692
00:26:48,000 --> 00:26:51,000
从头到尾完完全全的写一个新的程序出来

693
00:26:51,000 --> 00:26:51,000
这种事情是

694
00:26:51,000 --> 00:26:53,000
这种时候是相当相当少的

695
00:26:54,000 --> 00:26:54,000
对

696
00:26:54,000 --> 00:26:55,000
所以

697
00:26:55,000 --> 00:26:57,000
所以就是为什么在 WIM 里面

698
00:26:57,000 --> 00:26:59,000
你如果不做任何处理

699
00:26:59,000 --> 00:27:00,000
不做任何特别的配置的话

700
00:27:00,000 --> 00:27:01,000
你进到里面去

701
00:27:01,000 --> 00:27:03,000
它默认的那个模式

702
00:27:03,000 --> 00:27:03,000
叫做是

703
00:27:03,000 --> 00:27:06,000
刚才你讲的这个所谓的命令模式

704
00:27:06,000 --> 00:27:06,000
大家就是

705
00:27:06,000 --> 00:27:08,000
Normal 模式

706
00:27:08,000 --> 00:27:08,000
对

707
00:27:08,000 --> 00:27:08,000
不同模式

708
00:27:08,000 --> 00:27:09,000
而且

709
00:27:10,000 --> 00:27:11,000
对于一个

710
00:27:12,000 --> 00:27:14,000
对于一个日常的 WIM 的用户来讲

711
00:27:14,000 --> 00:27:16,000
它也应该把绝大多数的时间

712
00:27:16,000 --> 00:27:18,000
花在普通模式里面

713
00:27:19,000 --> 00:27:20,000
对

714
00:27:20,000 --> 00:27:21,000
那反过来

715
00:27:21,000 --> 00:27:23,000
就是在 emax 下面

716
00:27:23,000 --> 00:27:27,000
其实也可以意识到

717
00:27:27,000 --> 00:27:28,000
当你打开 emax 之后

718
00:27:28,000 --> 00:27:29,000
你基本上

719
00:27:29,000 --> 00:27:30,000
你会下意识的按住 Ctrl

720
00:27:30,000 --> 00:27:31,000
嗯哼

721
00:27:31,000 --> 00:27:32,000
然后去做一些事情

722
00:27:32,000 --> 00:27:32,000
就是

723
00:27:35,000 --> 00:27:38,000
在你不会一上来就写什么东西

724
00:27:38,000 --> 00:27:39,000
在这个

725
00:27:39,000 --> 00:27:40,000
至少你要做的一件事情

726
00:27:40,000 --> 00:27:41,000
是移动光标

727
00:27:41,000 --> 00:27:42,000
把光标插入的

728
00:27:42,000 --> 00:27:46,000
移动到你想要插入文字的部分

729
00:27:46,000 --> 00:27:46,000
对

730
00:27:46,000 --> 00:27:47,000
然后才会开始编辑吧

731
00:27:47,000 --> 00:27:48,000
对

732
00:27:48,000 --> 00:27:48,000
对

733
00:27:48,000 --> 00:27:49,000
对

734
00:27:49,000 --> 00:27:50,000
那么在

735
00:27:50,000 --> 00:27:52,000
在 emax 或者说任何一种其他

736
00:27:53,000 --> 00:27:54,000
不区分

737
00:27:54,000 --> 00:27:55,000
不明确区分

738
00:27:55,000 --> 00:27:57,000
模态的编辑器里面

739
00:27:58,000 --> 00:28:00,000
在你还是会有大量的时间

740
00:28:01,000 --> 00:28:03,000
花在这种移动光标

741
00:28:03,000 --> 00:28:04,000
或者是删除

742
00:28:04,000 --> 00:28:04,000
某个单词

743
00:28:04,000 --> 00:28:06,000
或者删除某一行为

744
00:28:06,000 --> 00:28:07,000
这种需求之下

745
00:28:07,000 --> 00:28:08,000
而 WIM 的

746
00:28:09,000 --> 00:28:10,000
出发点

747
00:28:10,000 --> 00:28:11,000
或者它的设计要素

748
00:28:11,000 --> 00:28:13,000
就是把这样一个抽象的级别

749
00:28:13,000 --> 00:28:15,000
把它实体化了

750
00:28:15,000 --> 00:28:15,000
把它

751
00:28:15,000 --> 00:28:18,000
你可以明确的告诉

752
00:28:19,000 --> 00:28:20,000
呃编辑

753
00:28:20,000 --> 00:28:22,000
我现在要切换到那种模式

754
00:28:22,000 --> 00:28:24,000
然后你可以一直保留在那种模式之下

755
00:28:24,000 --> 00:28:24,000
对

756
00:28:24,000 --> 00:28:26,000
或者说你这么理解

757
00:28:26,000 --> 00:28:27,000
就是在 emax 里面

758
00:28:27,000 --> 00:28:30,000
你你采用快捷键的时候

759
00:28:30,000 --> 00:28:33,000
其实你是已经在短暂的时间内进

760
00:28:33,000 --> 00:28:35,000
就是在快捷键按下这个过程中

761
00:28:35,000 --> 00:28:37,000
你已经在极短的时间内进入了

762
00:28:37,000 --> 00:28:38,000
某一种模式里面

763
00:28:38,000 --> 00:28:40,000
然后再在那个模式去进行一个

764
00:28:40,000 --> 00:28:41,000
制定的操作

765
00:28:41,000 --> 00:28:44,000
而而此时你并没有在

766
00:28:44,000 --> 00:28:46,000
呃真正的插入

767
00:28:46,000 --> 00:28:47,000
或者是转鞋某一个文档

768
00:28:48,000 --> 00:28:48,000
对

769
00:28:48,000 --> 00:28:51,000
而 WIM 的所谓编辑模式和

770
00:28:51,000 --> 00:28:54,000
呃命令模式之间的差别就在于

771
00:28:54,000 --> 00:28:55,000
就好像就相当于

772
00:28:56,000 --> 00:28:56,000
你

773
00:28:57,000 --> 00:28:59,000
呃找到什么东西

774
00:28:59,000 --> 00:28:59,000
找到本书

775
00:28:59,000 --> 00:29:00,000
压住了你的 control 键

776
00:29:00,000 --> 00:29:02,000
这个时候

777
00:29:02,000 --> 00:29:02,000
对

778
00:29:02,000 --> 00:29:04,000
这个时候你按键盘上的任何一个字母

779
00:29:04,000 --> 00:29:05,000
你

780
00:29:05,000 --> 00:29:06,000
你都是在做新快捷键

781
00:29:06,000 --> 00:29:06,000
对

782
00:29:06,000 --> 00:29:08,000
你都是在做一个

783
00:29:08,000 --> 00:29:09,000
做一种

784
00:29:09,000 --> 00:29:09,000
做一种

785
00:29:09,000 --> 00:29:10,000
呃

786
00:29:10,000 --> 00:29:11,000
下给出命令

787
00:29:11,000 --> 00:29:12,000
而不是

788
00:29:12,000 --> 00:29:14,000
书写字母的行为

789
00:29:14,000 --> 00:29:14,000
嗯

790
00:29:14,000 --> 00:29:16,000
也就是比如说

791
00:29:16,000 --> 00:29:16,000
呃

792
00:29:16,000 --> 00:29:17,000
比如说 f

793
00:29:17,000 --> 00:29:18,000
那

794
00:29:18,000 --> 00:29:20,000
假如你的 control 键一直被按住了

795
00:29:20,000 --> 00:29:20,000
那么

796
00:29:20,000 --> 00:29:21,000
那你

797
00:29:21,000 --> 00:29:22,000
敲一下 f

798
00:29:22,000 --> 00:29:23,000
你所要做的事情

799
00:29:23,000 --> 00:29:25,000
是搜寻什么东西

800
00:29:25,000 --> 00:29:25,000
嗯

801
00:29:25,000 --> 00:29:26,000
那么在 WIM 里面

802
00:29:26,000 --> 00:29:27,000
呃

803
00:29:27,000 --> 00:29:28,000
当你切换到普通模式之后

804
00:29:28,000 --> 00:29:30,000
你只要按一下 f 键

805
00:29:30,000 --> 00:29:30,000
你所

806
00:29:31,000 --> 00:29:32,000
你就可以去

807
00:29:32,000 --> 00:29:33,000
找

808
00:29:33,000 --> 00:29:34,000
你要找的某一个字符

809
00:29:35,000 --> 00:29:38,000
不过有一个可能在

810
00:29:38,000 --> 00:29:39,000
就是在数语上

811
00:29:39,000 --> 00:29:40,000
有个可能比较容易混淆的地方

812
00:29:40,000 --> 00:29:41,000
就是其实在 emacs

813
00:29:41,000 --> 00:29:43,000
也有 mode 的这个概念

814
00:29:43,000 --> 00:29:43,000
啊

815
00:29:44,000 --> 00:29:45,000
对

816
00:29:45,000 --> 00:29:46,000
但 emacs mode

817
00:29:46,000 --> 00:29:47,000
只是

818
00:29:47,000 --> 00:29:49,000
完全不一样的什么东西

819
00:29:49,000 --> 00:29:50,000
比如说

820
00:29:50,000 --> 00:29:50,000
呃

821
00:29:52,000 --> 00:29:53,000
呃

822
00:29:53,000 --> 00:29:53,000
WIM

823
00:29:53,000 --> 00:29:53,000
呃

824
00:29:53,000 --> 00:29:54,000
比如说 emacs

825
00:29:54,000 --> 00:29:56,000
它打开一个

826
00:29:56,000 --> 00:29:57,000
LATCH 文件

827
00:29:57,000 --> 00:29:59,000
它会进入所谓 LATCH mode

828
00:29:59,000 --> 00:29:59,000
嗯哼

829
00:29:59,000 --> 00:30:00,000
那这个 mode

830
00:30:00,000 --> 00:30:02,000
其实就相当于

831
00:30:02,000 --> 00:30:02,000
呃

832
00:30:02,000 --> 00:30:03,000
如果你是 WIM

833
00:30:03,000 --> 00:30:04,000
一个 WIM 使用者

834
00:30:04,000 --> 00:30:05,000
你对 emacs 不是很熟

835
00:30:05,000 --> 00:30:06,000
那我们两个对 emacs 都不是很熟

836
00:30:06,000 --> 00:30:07,000
但

837
00:30:07,000 --> 00:30:08,000
呃

838
00:30:08,000 --> 00:30:08,000
呃

839
00:30:08,000 --> 00:30:09,000
而 emacs mode

840
00:30:09,000 --> 00:30:10,000
其实对于 WIM 来说

841
00:30:10,000 --> 00:30:12,000
就相当于 WIM 的

842
00:30:12,000 --> 00:30:13,000
file type

843
00:30:13,000 --> 00:30:14,000
就是

844
00:30:14,000 --> 00:30:15,000
呃

845
00:30:15,000 --> 00:30:18,000
针对某一种特别的文件类型

846
00:30:18,000 --> 00:30:18,000
或者说

847
00:30:18,000 --> 00:30:21,000
针对某一种特别的编辑状态

848
00:30:21,000 --> 00:30:22,000
而激活一种模式

849
00:30:22,000 --> 00:30:24,000
而这个跟呃

850
00:30:24,000 --> 00:30:25,000
WIM 的

851
00:30:25,000 --> 00:30:26,000
所谓 mode

852
00:30:26,000 --> 00:30:28,000
其实是完全不同的两个概念

853
00:30:28,000 --> 00:30:29,000
对

854
00:30:29,000 --> 00:30:30,000
所以就是

855
00:30:30,000 --> 00:30:30,000
就是从

856
00:30:30,000 --> 00:30:32,000
刚才讲的就是 emacs 的 mode

857
00:30:32,000 --> 00:30:33,000
其实

858
00:30:33,000 --> 00:30:35,000
大约略等同于

859
00:30:35,000 --> 00:30:36,000
emacs 的

860
00:30:36,000 --> 00:30:36,000
呃

861
00:30:36,000 --> 00:30:37,000
WIM 的

862
00:30:37,000 --> 00:30:37,000
叫什么

863
00:30:37,000 --> 00:30:39,000
ftplugin 这个东西

864
00:30:39,000 --> 00:30:40,000
对

865
00:30:40,000 --> 00:30:41,000
file type plugin

866
00:30:41,000 --> 00:30:41,000
对

867
00:30:41,000 --> 00:30:42,000
嗯

868
00:30:43,000 --> 00:30:44,000
然后呃

869
00:30:44,000 --> 00:30:45,000
对

870
00:30:45,000 --> 00:30:47,000
我们我们是接着说 WIM 的问题呢

871
00:30:47,000 --> 00:30:48,000
还是

872
00:30:48,000 --> 00:30:50,000
就是每一个

873
00:30:50,000 --> 00:30:53,000
点都尽量对照两种编辑来说

874
00:30:53,000 --> 00:30:54,000
嗯

875
00:30:54,000 --> 00:30:55,000
这还是对照一下吧

876
00:30:55,000 --> 00:30:57,000
因为这个本来就是回顾这个圣证嘛

877
00:30:57,000 --> 00:31:00,000
我们还是要把最基本的那些要点

878
00:31:00,000 --> 00:31:01,000
大概理一下

879
00:31:01,000 --> 00:31:01,000
对

880
00:31:01,000 --> 00:31:03,000
那其实

881
00:31:03,000 --> 00:31:07,000
那这种模态的区分也就导致了 WIM 如此难学

882
00:31:07,000 --> 00:31:08,000
或者说

883
00:31:08,000 --> 00:31:11,000
很多人会觉得 WIM 是一种非常非常奇怪的变形系列

884
00:31:11,000 --> 00:31:12,000
一个原因之一

885
00:31:12,000 --> 00:31:12,000
对

886
00:31:12,000 --> 00:31:13,000
因为他觉得

887
00:31:13,000 --> 00:31:14,000
我觉得他是不够

888
00:31:14,000 --> 00:31:16,000
就是或者很多人觉得他不够直观嘛

889
00:31:16,000 --> 00:31:17,000
就是因为这个模态

890
00:31:17,000 --> 00:31:19,000
我想不出在生活中有什么样的地方

891
00:31:19,000 --> 00:31:21,000
是有模态这个概念的

892
00:31:23,000 --> 00:31:23,000
对

893
00:31:23,000 --> 00:31:26,000
因为键盘其实是一个非常奇怪的

894
00:31:27,000 --> 00:31:28,000
奇怪的输入工具

895
00:31:28,000 --> 00:31:30,000
如果要我说的话

896
00:31:30,000 --> 00:31:30,000
嗯

897
00:31:31,000 --> 00:31:35,000
如果你把键盘上所有的功能键拿掉

898
00:31:35,000 --> 00:31:35,000
呃

899
00:31:35,000 --> 00:31:38,000
control out command escape

900
00:31:38,000 --> 00:31:40,000
乃至所有的 F 键都拿掉的话

901
00:31:40,000 --> 00:31:40,000
嗯哼

902
00:31:40,000 --> 00:31:41,000
嗯

903
00:31:42,000 --> 00:31:44,000
你要怎样才能

904
00:31:45,000 --> 00:31:46,000
改变

905
00:31:46,000 --> 00:31:47,000
公标的位置呢

906
00:31:49,000 --> 00:31:50,000
就方向键要拿掉

907
00:31:50,000 --> 00:31:52,000
或者说你要怎样实现查找这种

908
00:31:52,000 --> 00:31:53,000
没有这种功能键

909
00:31:53,000 --> 00:31:57,000
只有这个字母键或者字符号键的时候怎么操作

910
00:31:57,000 --> 00:31:57,000
对

911
00:31:57,000 --> 00:31:59,000
如果你的键盘只能插入的话

912
00:31:59,000 --> 00:32:01,000
你应该怎样修改

913
00:32:01,000 --> 00:32:03,000
你的那你的你屏幕上的内容呢

914
00:32:04,000 --> 00:32:04,000
哼

915
00:32:05,000 --> 00:32:07,000
就如果就假如说

916
00:32:07,000 --> 00:32:09,000
其中那种解决方式是 touch screen

917
00:32:09,000 --> 00:32:10,000
嗯哼

918
00:32:10,000 --> 00:32:12,000
那么我们是不是可以理解为

919
00:32:12,000 --> 00:32:13,000
在

920
00:32:14,000 --> 00:32:15,000
或者是鼠标满

921
00:32:15,000 --> 00:32:17,000
用鼠标去移动的时候

922
00:32:17,000 --> 00:32:18,000
你是在进入一种

923
00:32:18,000 --> 00:32:20,000
另外一种模态里面

924
00:32:20,000 --> 00:32:21,000
对

925
00:32:21,000 --> 00:32:23,000
或者说你面对的是一台

926
00:32:23,000 --> 00:32:24,000
是一部是一个 touch screen

927
00:32:24,000 --> 00:32:27,000
那么你可以用手指去点你要改的那个文字

928
00:32:27,000 --> 00:32:27,000
嗯哼

929
00:32:27,000 --> 00:32:29,000
然后选中它

930
00:32:29,000 --> 00:32:31,000
然后再在你的键盘上面改

931
00:32:31,000 --> 00:32:31,000
嗯哼

932
00:32:31,000 --> 00:32:33,000
那么这一种情况是不是存在了

933
00:32:33,000 --> 00:32:34,000
其实已经存在了

934
00:32:34,000 --> 00:32:37,000
就是你在你的手机上去修改什么东西的时候

935
00:32:37,000 --> 00:32:38,000
嗯哼

936
00:32:38,000 --> 00:32:39,000
你要

937
00:32:39,000 --> 00:32:41,000
选中一个文字

938
00:32:41,000 --> 00:32:44,000
你所做的事情并不是按住 shift 键

939
00:32:44,000 --> 00:32:44,000
然后选方向键

940
00:32:44,000 --> 00:32:45,000
因为手机键盘上

941
00:32:45,000 --> 00:32:47,000
反正也没有方向键

942
00:32:47,000 --> 00:32:47,000
对吧

943
00:32:47,000 --> 00:32:48,000
哼哼

944
00:32:48,000 --> 00:32:49,000
对

945
00:32:49,000 --> 00:32:51,000
你要用手去点那个字母

946
00:32:51,000 --> 00:32:52,000
按住松开

947
00:32:52,000 --> 00:32:54,000
然后这个字这个单词被选中了

948
00:32:54,000 --> 00:32:58,000
那其实在你移动手指到键盘上

949
00:32:58,000 --> 00:33:00,000
和你移动手指到

950
00:33:00,000 --> 00:33:02,000
你要选的那个单词之间

951
00:33:02,000 --> 00:33:03,000
你已经在做这种切话

952
00:33:03,000 --> 00:33:04,000
只不过你不会

953
00:33:04,000 --> 00:33:07,000
你会觉得这个这种切换非常自然

954
00:33:07,000 --> 00:33:10,000
但是当一个编辑器跳出来告诉你说

955
00:33:10,000 --> 00:33:10,000
哦

956
00:33:10,000 --> 00:33:12,000
你要明确的告诉我

957
00:33:12,000 --> 00:33:14,000
你要处于哪种状态之中的时候

958
00:33:14,000 --> 00:33:16,000
你可能就不习惯了

959
00:33:16,000 --> 00:33:17,000
对

960
00:33:17,000 --> 00:33:20,000
不过就像你说的现实生活中好像是没有一种

961
00:33:20,000 --> 00:33:23,000
没有一种非常

962
00:33:23,000 --> 00:33:27,000
明显的会切换状态的

963
00:33:27,000 --> 00:33:30,000
嗯

964
00:33:30,000 --> 00:33:32,000
我只非能想到例子就是游戏

965
00:33:32,000 --> 00:33:33,000
比如说

966
00:33:33,000 --> 00:33:35,000
比如说有些游戏里面

967
00:33:35,000 --> 00:33:38,000
早期的命令征服

968
00:33:38,000 --> 00:33:41,000
你在战略地图上可以选择

969
00:33:41,000 --> 00:33:44,000
接下来要打北非的什么地方

970
00:33:44,000 --> 00:33:47,000
而你选择之后才开始关卡

971
00:33:47,000 --> 00:33:48,000
在这个关卡里面

972
00:33:48,000 --> 00:33:51,000
你才会去真正的进行这场战争

973
00:33:51,000 --> 00:33:52,000
也许这是一个

974
00:33:52,000 --> 00:33:55,000
可以类比的模式

975
00:33:55,000 --> 00:33:57,000
但其实还是差的庭远

976
00:33:57,000 --> 00:33:58,000
对

977
00:33:58,000 --> 00:34:01,000
我就觉得这个是模特这个概念

978
00:34:01,000 --> 00:34:04,000
始终对于初学者来讲很大的门槛

979
00:34:04,000 --> 00:34:05,000
就是因为他没有在现实生活中

980
00:34:05,000 --> 00:34:07,000
有一个可以

981
00:34:07,000 --> 00:34:09,000
所谓可以隐喻的一个东西

982
00:34:09,000 --> 00:34:10,000
对

983
00:34:10,000 --> 00:34:11,000
但其实这也就是为什么

984
00:34:11,000 --> 00:34:15,000
很多人说 vi 是一种比较

985
00:34:15,000 --> 00:34:18,000
比较社群化的编辑器

986
00:34:18,000 --> 00:34:21,000
就是如果你身边没有人在用 vi

987
00:34:21,000 --> 00:34:22,000
然后你很难入门的

988
00:34:22,000 --> 00:34:24,000
你也很难入门

989
00:34:24,000 --> 00:34:24,000
对

990
00:34:24,000 --> 00:34:28,000
基本上大部分学 vi 的人都是

991
00:34:28,000 --> 00:34:29,000
在某种机缘巧合之下

992
00:34:29,000 --> 00:34:32,000
看到了某一个人在用

993
00:34:32,000 --> 00:34:35,000
发现这个人修改文章的速度

994
00:34:35,000 --> 00:34:36,000
像飞一样

995
00:34:36,000 --> 00:34:38,000
然后会惊讶地说

996
00:34:38,000 --> 00:34:39,000
这是什么编辑器

997
00:34:39,000 --> 00:34:40,000
然后那个人说

998
00:34:40,000 --> 00:34:41,000
用神声的员

999
00:34:41,000 --> 00:34:42,000
用神声的枪来说

1000
00:34:42,000 --> 00:34:44,000
这是 vi

1001
00:34:44,000 --> 00:34:47,000
然后说我要学

1002
00:34:47,000 --> 00:34:47,000
对

1003
00:34:47,000 --> 00:34:49,000
然后才会见见入门

1004
00:34:49,000 --> 00:34:53,000
所以其实你到我们也看到了

1005
00:34:53,000 --> 00:34:55,000
vi 这种方式其实非常

1006
00:34:55,000 --> 00:34:56,000
叫做什么

1007
00:34:56,000 --> 00:34:58,000
不妙的朋友

1008
00:34:58,000 --> 00:34:58,000
对

1009
00:34:58,000 --> 00:35:02,000
也有一些尝试在改变这么一个状况

1010
00:35:02,000 --> 00:35:06,000
就是先把你骗进来再讲

1011
00:35:06,000 --> 00:35:08,000
所以现在有特别是在

1012
00:35:08,000 --> 00:35:11,000
我记得在就现在 Vim 的正式的版本里面

1013
00:35:11,000 --> 00:35:13,000
有一个叫什么

1014
00:35:13,000 --> 00:35:14,000
就是什么初学者模式

1015
00:35:14,000 --> 00:35:18,000
就它默认是禁用掉模特的行为的

1016
00:35:18,000 --> 00:35:20,000
就是你进去始终都是编辑状态

1017
00:35:21,000 --> 00:35:24,000
然后但是我自己是没有

1018
00:35:24,000 --> 00:35:25,000
用过那种方式

1019
00:35:25,000 --> 00:35:26,000
我也不知道

1020
00:35:26,000 --> 00:35:27,000
我也对我们都

1021
00:35:27,000 --> 00:35:28,000
我们都太晚了

1022
00:35:28,000 --> 00:35:30,000
没有赶上这种 user friendly 的实在

1023
00:35:30,000 --> 00:35:31,000
对

1024
00:35:31,000 --> 00:35:33,000
就好像说

1025
00:35:33,000 --> 00:35:36,000
我不知道意义何在

1026
00:35:36,000 --> 00:35:38,000
当你可以把数学者领进来

1027
00:35:38,000 --> 00:35:39,000
但是你并没有让它认识到

1028
00:35:39,000 --> 00:35:42,000
这个模特的本质在哪里

1029
00:35:42,000 --> 00:35:44,000
其实好像也没有什么太大用处

1030
00:35:44,000 --> 00:35:45,000
就是这样变得和另外一个

1031
00:35:45,000 --> 00:35:47,000
普通的编辑器也没有什么区别

1032
00:35:48,000 --> 00:35:50,000
那你说起来

1033
00:35:50,000 --> 00:35:51,000
你是怎么开始用 VM

1034
00:35:52,000 --> 00:35:53,000
这个问题

1035
00:35:54,000 --> 00:35:56,000
我已经不太记得了

1036
00:35:56,000 --> 00:36:00,000
我是在上大学的时候

1037
00:36:00,000 --> 00:36:03,000
在开始学用 VM

1038
00:36:03,000 --> 00:36:05,000
然后那个时候很奇怪

1039
00:36:05,000 --> 00:36:07,000
因为我大学是读上科的

1040
00:36:07,000 --> 00:36:10,000
也没有什么编辑的需求

1041
00:36:10,000 --> 00:36:11,000
但我在想

1042
00:36:11,000 --> 00:36:12,000
为什么我会在学它

1043
00:36:15,000 --> 00:36:15,000
你有看到

1044
00:36:15,000 --> 00:36:17,000
你是像我说的那样

1045
00:36:17,000 --> 00:36:17,000
看到有人在用

1046
00:36:17,000 --> 00:36:20,000
然后被它勾引入门的吗

1047
00:36:20,000 --> 00:36:21,000
应该是我有看到过

1048
00:36:21,000 --> 00:36:22,000
某一个什么书

1049
00:36:22,000 --> 00:36:24,000
或者某一个人怎么样在用

1050
00:36:24,000 --> 00:36:25,000
但是我一下想不起来

1051
00:36:25,000 --> 00:36:27,000
这个过程是怎么一回事

1052
00:36:28,000 --> 00:36:30,000
不过可能跟这个

1053
00:36:30,000 --> 00:36:32,000
什么 personality 的

1054
00:36:32,000 --> 00:36:33,000
有一点关系

1055
00:36:34,000 --> 00:36:35,000
在相当长一段时间内

1056
00:36:35,000 --> 00:36:38,000
我有一个人格上的缺陷

1057
00:36:38,000 --> 00:36:42,000
就是我会去如果有一堆同类

1058
00:36:42,000 --> 00:36:44,000
或者做同样的事情的东西

1059
00:36:44,000 --> 00:36:45,000
我一定要选出一个最好的

1060
00:36:49,000 --> 00:36:50,000
就比如说现在你的隔板

1061
00:36:50,000 --> 00:36:51,000
如果现在我啥不知道

1062
00:36:51,000 --> 00:36:52,000
你现在摆了两个编辑

1063
00:36:52,000 --> 00:36:53,000
怎么变成一样

1064
00:36:53,000 --> 00:36:53,000
我一定要比较

1065
00:36:53,000 --> 00:36:54,000
这两个编辑器

1066
00:36:55,000 --> 00:36:57,000
但这个最好是带引号的

1067
00:36:57,000 --> 00:36:58,000
对于个人来讲

1068
00:36:58,000 --> 00:36:59,000
我觉得是最好的

1069
00:36:59,000 --> 00:37:01,000
你一定要找出一个

1070
00:37:01,000 --> 00:37:03,000
适合你自己的

1071
00:37:03,000 --> 00:37:05,000
对 我一定要分出来一个

1072
00:37:05,000 --> 00:37:08,000
我觉得比那个更加适合我

1073
00:37:08,000 --> 00:37:09,000
或者在我地里面

1074
00:37:09,000 --> 00:37:10,000
这个是更好的

1075
00:37:10,000 --> 00:37:12,000
当时就出现这么一个状态

1076
00:37:12,000 --> 00:37:13,000
其实我是在 Vim 和 Mimic

1077
00:37:13,000 --> 00:37:16,000
那边都还摇摆了一段时间

1078
00:37:16,000 --> 00:37:18,000
后来觉得感觉 Vim 这种方式

1079
00:37:18,000 --> 00:37:19,000
比较好

1080
00:37:19,000 --> 00:37:21,000
然后我觉得后来就选了

1081
00:37:21,000 --> 00:37:22,000
一直在用 Vim

1082
00:37:22,000 --> 00:37:24,000
现在就算是一个

1083
00:37:24,000 --> 00:37:26,000
所谓的终极用户

1084
00:37:26,000 --> 00:37:29,000
所以你是在有对比的前提之下

1085
00:37:29,000 --> 00:37:31,000
习惯了 Vim

1086
00:37:31,000 --> 00:37:32,000
或者说选择了 Vim

1087
00:37:32,000 --> 00:37:33,000
嗯 对

1088
00:37:34,000 --> 00:37:35,000
OK

1089
00:37:35,000 --> 00:37:37,000
这个我经历几乎不一样

1090
00:37:37,000 --> 00:37:42,000
就是我在最开始接触到 Vi 的时候

1091
00:37:42,000 --> 00:37:44,000
完全不知道 1 MX 是什么

1092
00:37:44,000 --> 00:37:45,000
OK

1093
00:37:45,000 --> 00:37:48,000
所以你是在一个无知的情况下选择了

1094
00:37:49,000 --> 00:37:49,000
对

1095
00:37:49,000 --> 00:37:50,000
我记得那是我

1096
00:37:50,000 --> 00:37:55,000
就是可能初中毕业还是什么时候

1097
00:37:55,000 --> 00:37:56,000
就又暴露年龄了

1098
00:37:56,000 --> 00:37:59,000
你又可以说你眼睛嘛

1099
00:37:59,000 --> 00:38:00,000
对

1100
00:38:00,000 --> 00:38:01,000
反正就是在中学

1101
00:38:01,000 --> 00:38:02,000
但我还是一个中学生的时候

1102
00:38:02,000 --> 00:38:09,000
我买了一本 UniX 命令手册之类这么一本书

1103
00:38:09,000 --> 00:38:13,000
因为那个时候装了 Windows 和 Linux 的双系统

1104
00:38:13,000 --> 00:38:14,000
那个时候 Linux 刚刚进入中国

1105
00:38:14,000 --> 00:38:17,000
就我记得装的是什么 Slackware

1106
00:38:17,000 --> 00:38:18,000
还是什么

1107
00:38:18,000 --> 00:38:21,000
就是现在几乎没有再碰的一个发行版

1108
00:38:21,000 --> 00:38:21,000
嗯

1109
00:38:21,000 --> 00:38:22,000
嗯

1110
00:38:22,000 --> 00:38:24,000
然后特别不急但去学命令

1111
00:38:24,000 --> 00:38:25,000
嗯

1112
00:38:25,000 --> 00:38:27,000
嗯

1113
00:38:27,000 --> 00:38:30,000
在这本命令手册里面有那么

1114
00:38:30,000 --> 00:38:33,000
别的命令大概就是那么四五行五六行

1115
00:38:33,000 --> 00:38:35,000
然后讲这个命令能干嘛

1116
00:38:35,000 --> 00:38:36,000
然后给你两个例子

1117
00:38:36,000 --> 00:38:37,000
嗯

1118
00:38:37,000 --> 00:38:40,000
而 Vi 的轮到 Vi 这个命令的时候

1119
00:38:40,000 --> 00:38:43,000
这个命令手册大概写了一本

1120
00:38:43,000 --> 00:38:44,000
四五页

1121
00:38:44,000 --> 00:38:45,000
对

1122
00:38:45,000 --> 00:38:46,000
四五页

1123
00:38:46,000 --> 00:38:48,000
我说我这什么东西

1124
00:38:48,000 --> 00:38:49,000
它只是一个编辑而已

1125
00:38:49,000 --> 00:38:50,000
至于吗

1126
00:38:50,000 --> 00:38:51,000
嗯

1127
00:38:51,000 --> 00:38:53,000
然后用起来用了一段

1128
00:38:53,000 --> 00:38:55,000
就刚开始用的时候也觉得匪夷所思

1129
00:38:55,000 --> 00:38:59,000
但是大概过了两三星期

1130
00:38:59,000 --> 00:39:02,000
有那么一个就是所谓 Unicamoment

1131
00:39:02,000 --> 00:39:06,000
就是啊我明白了这么一个时刻

1132
00:39:06,000 --> 00:39:06,000
对

1133
00:39:06,000 --> 00:39:07,000
顿悟了

1134
00:39:07,000 --> 00:39:10,000
然后也就从此一直用它

1135
00:39:10,000 --> 00:39:16,000
天呐你初中就在看 UniX 的说你当时在哪里

1136
00:39:16,000 --> 00:39:16,000
在天津啊

1137
00:39:16,000 --> 00:39:17,000
OK

1138
00:39:17,000 --> 00:39:18,000
所以大城市还是好

1139
00:39:18,000 --> 00:39:19,000
你看像我们那种

1140
00:39:19,000 --> 00:39:20,000
我加上那种

1141
00:39:20,000 --> 00:39:21,000
不不不

1142
00:39:21,000 --> 00:39:22,000
我是天津城乡集合部的

1143
00:39:22,000 --> 00:39:26,000
那也比我们那种特别的偏远地区要好啊

1144
00:39:26,000 --> 00:39:27,000
好吧

1145
00:39:27,000 --> 00:39:27,000
你太谦虚了

1146
00:39:27,000 --> 00:39:29,000
在那个时候没有互联网

1147
00:39:29,000 --> 00:39:31,000
就基本上所有的发行版

1148
00:39:31,000 --> 00:39:33,000
或者有互联网存在有波号的

1149
00:39:33,000 --> 00:39:34,000
然后有发行版

1150
00:39:34,000 --> 00:39:35,000
另一个是发行版存在

1151
00:39:35,000 --> 00:39:37,000
基本上一定要去

1152
00:39:37,000 --> 00:39:38,000
就类似于五道口

1153
00:39:38,000 --> 00:39:42,000
或者是就天津市类似于五道口的地方去逃才可以找到的

1154
00:39:42,000 --> 00:39:43,000
OK

1155
00:39:43,000 --> 00:39:44,000
对

1156
00:39:44,000 --> 00:39:47,000
那个时候已经是中文版还是英文版

1157
00:39:47,000 --> 00:39:49,000
那个时候没有中文版的零件

1158
00:39:49,000 --> 00:39:50,000
所以那个

1159
00:39:50,000 --> 00:39:54,000
我记得有有一个中文版零件叫什么红旗零的

1160
00:39:56,000 --> 00:39:56,000
对

1161
00:39:56,000 --> 00:39:57,000
有确实有这么一个东西

1162
00:39:57,000 --> 00:39:58,000
其实有这么一个东西

1163
00:39:58,000 --> 00:39:59,000
好像还在

1164
00:39:59,000 --> 00:40:00,000
好像还在

1165
00:40:00,000 --> 00:40:01,000
真的吗

1166
00:40:01,000 --> 00:40:03,000
好像我上次见到

1167
00:40:03,000 --> 00:40:03,000
我忘了

1168
00:40:03,000 --> 00:40:05,000
还是已经转型了

1169
00:40:05,000 --> 00:40:05,000
还是什么

1170
00:40:05,000 --> 00:40:07,000
我就这个我才不太清楚

1171
00:40:07,000 --> 00:40:07,000
我不知道

1172
00:40:07,000 --> 00:40:08,000
对

1173
00:40:08,000 --> 00:40:11,000
但那个时候我也我可能是出于某种

1174
00:40:12,000 --> 00:40:13,000
嗯

1175
00:40:13,000 --> 00:40:15,000
因为你用过 douse 吗

1176
00:40:15,000 --> 00:40:17,000
肯定用过啊

1177
00:40:17,000 --> 00:40:17,000
对呀

1178
00:40:17,000 --> 00:40:19,000
所以你也不是很年轻吗

1179
00:40:19,000 --> 00:40:22,000
你知道真正年轻的人认为

1180
00:40:22,000 --> 00:40:25,000
电脑开机就应该自动显示那个

1181
00:40:25,000 --> 00:40:26,000
温度数的桌面

1182
00:40:26,000 --> 00:40:27,000
然后和一个指针的

1183
00:40:27,000 --> 00:40:28,000
如果

1184
00:40:28,000 --> 00:40:33,000
那个跳出来一个 C 冒陋

1185
00:40:33,000 --> 00:40:34,000
反斜杠大雨号

1186
00:40:34,000 --> 00:40:35,000
然后一闪一闪的光彪

1187
00:40:35,000 --> 00:40:37,000
他会觉得电脑坏

1188
00:40:37,000 --> 00:40:37,000
对

1189
00:40:37,000 --> 00:40:39,000
确实对大多数来说

1190
00:40:39,000 --> 00:40:40,000
那个时候就是

1191
00:40:40,000 --> 00:40:42,000
搞不定了怎么办

1192
00:40:42,000 --> 00:40:42,000
对

1193
00:40:42,000 --> 00:40:43,000
那么以电脑

1194
00:40:43,000 --> 00:40:46,000
以命令行入门的人来

1195
00:40:46,000 --> 00:40:50,000
就是对于命令行时代入门电脑人来说

1196
00:40:50,000 --> 00:40:53,000
好像在学另外一个命令行是很自然的事情

1197
00:40:53,000 --> 00:40:54,000
处理庞童吧

1198
00:40:54,000 --> 00:40:55,000
我觉得这个应该是

1199
00:40:55,000 --> 00:40:55,000
对

1200
00:40:55,000 --> 00:40:59,000
但现在好像已经很难

1201
00:40:59,000 --> 00:41:00,000
你甚至可以找到一种人

1202
00:41:00,000 --> 00:41:03,000
就是他只会用图形化界面来编程

1203
00:41:03,000 --> 00:41:03,000
大多数

1204
00:41:03,000 --> 00:41:07,000
如果切换到用图形化的方式来编程

1205
00:41:07,000 --> 00:41:08,000
就是在图形在一个

1206
00:41:08,000 --> 00:41:09,000
温度数开发讲

1207
00:41:09,000 --> 00:41:10,000
大部分都这样吧

1208
00:41:12,000 --> 00:41:13,000
就出现有个机合

1209
00:41:13,000 --> 00:41:16,000
但我年约温度上并没有一个好用的命令行

1210
00:41:16,000 --> 00:41:18,000
或者是你用的命令行也干不了太多事

1211
00:41:18,000 --> 00:41:19,000
但现在他有那个什么

1212
00:41:19,000 --> 00:41:20,000
power shell

1213
00:41:20,000 --> 00:41:21,000
那个是另外一回事

1214
00:41:21,000 --> 00:41:23,000
就在相当长一段时间内是这样子的

1215
00:41:26,000 --> 00:41:27,000
对

1216
00:41:27,000 --> 00:41:28,000
应该或者说

1217
00:41:29,000 --> 00:41:29,000
你不能说

1218
00:41:29,000 --> 00:41:30,000
我觉得你不能说

1219
00:41:30,000 --> 00:41:32,000
就是我不是为温度数成全证明

1220
00:41:32,000 --> 00:41:35,000
但你这个在这一点上

1221
00:41:35,000 --> 00:41:37,000
也许是因为绝大多数人

1222
00:41:38,000 --> 00:41:40,000
在学习编程的时候

1223
00:41:40,000 --> 00:41:41,000
接触到的

1224
00:41:42,000 --> 00:41:43,000
操作系统是 Windows

1225
00:41:44,000 --> 00:41:45,000
你不能因此说

1226
00:41:45,000 --> 00:41:50,000
大多数 Windows 程序员都只会在图形界面下编程

1227
00:41:50,000 --> 00:41:50,000
不

1228
00:41:50,000 --> 00:41:53,000
我就说他因为 Windows 上没有一个好用的命令行界面

1229
00:41:53,000 --> 00:41:55,000
就是命令行的这么一个接口

1230
00:41:55,000 --> 00:41:57,000
你也不能拿它干嘛

1231
00:41:57,000 --> 00:41:57,000
对吧

1232
00:41:58,000 --> 00:41:58,000
OK

1233
00:41:59,000 --> 00:41:59,000
Yeah

1234
00:41:59,000 --> 00:42:00,000
Whatever

1235
00:42:00,000 --> 00:42:01,000
I want you to take it

1236
00:42:01,000 --> 00:42:01,000
对

1237
00:42:01,000 --> 00:42:05,000
我们这一次的 Flame War 主题还是编辑气之战

1238
00:42:05,000 --> 00:42:06,000
而不是操作系统之战

1239
00:42:07,000 --> 00:42:07,000
下次

1240
00:42:08,000 --> 00:42:08,000
对

1241
00:42:08,000 --> 00:42:09,000
下次

1242
00:42:09,000 --> 00:42:10,000
对

1243
00:42:10,000 --> 00:42:12,000
回到 Wim 的

1244
00:42:13,000 --> 00:42:16,000
我们刚才讲了 Wim 的操作模式

1245
00:42:16,000 --> 00:42:16,000
对吧

1246
00:42:16,000 --> 00:42:16,000
对

1247
00:42:17,000 --> 00:42:21,000
那么除了模态编辑模式是一个巨大的门槛之外

1248
00:42:21,000 --> 00:42:22,000
还有什么门槛

1249
00:42:22,000 --> 00:42:25,000
或者说还有什么点让你觉得

1250
00:42:25,000 --> 00:42:28,000
或者说你会觉得 Wim 是非常不平净人的一个地方

1251
00:42:28,000 --> 00:42:29,000
对

1252
00:42:29,000 --> 00:42:30,000
的一种工具

1253
00:42:30,000 --> 00:42:34,000
就是它的那个配置和就是所谓的扩展

1254
00:42:34,000 --> 00:42:36,000
就它有一个叫做语言

1255
00:42:36,000 --> 00:42:37,000
叫做 WimScript

1256
00:42:38,000 --> 00:42:41,000
我觉得这个语言是相当古怪的

1257
00:42:41,000 --> 00:42:42,000
就哪怕以现在的

1258
00:42:42,000 --> 00:42:42,000
不

1259
00:42:42,000 --> 00:42:43,000
不

1260
00:42:43,000 --> 00:42:45,000
不管以现在还是古代的观点

1261
00:42:45,000 --> 00:42:45,000
我觉得它的语言

1262
00:42:45,000 --> 00:42:47,000
这本语言都是挺奇怪的

1263
00:42:48,000 --> 00:42:48,000
对

1264
00:42:48,000 --> 00:42:51,000
最简单的从审美那种

1265
00:42:51,000 --> 00:42:54,000
我讲 WimScript 的是种非常丑乐的语言

1266
00:42:55,000 --> 00:42:56,000
对

1267
00:42:56,000 --> 00:42:59,000
这一点和 Emacs 有非常大的区别

1268
00:42:59,000 --> 00:43:03,000
Emacs 有一个非常优美的 List 的语言作为它的基础

1269
00:43:04,000 --> 00:43:04,000
对

1270
00:43:04,000 --> 00:43:05,000
甚至 Emacs

1271
00:43:05,000 --> 00:43:08,000
甚至你都可以说 Emacs 它并不是一个编辑器

1272
00:43:08,000 --> 00:43:14,000
它就是用这个叫做 E-List 写的一个

1273
00:43:15,000 --> 00:43:15,000
叫什么

1274
00:43:15,000 --> 00:43:16,000
操作系统

1275
00:43:18,000 --> 00:43:18,000
对

1276
00:43:18,000 --> 00:43:23,000
就有一句很知名的话说 Emacs 是一个操作系统

1277
00:43:23,000 --> 00:43:26,000
它只是偶尔能够用来修改文字

1278
00:43:26,000 --> 00:43:32,000
而 V 则是一个基本上只能修改文字的这么一个小工具而已

1279
00:43:32,000 --> 00:43:33,000
对

1280
00:43:33,000 --> 00:43:34,000
我觉得为什么这么讲

1281
00:43:34,000 --> 00:43:38,000
就是刚才讲的 WimScript 这边语言首先是比较古怪的

1282
00:43:38,000 --> 00:43:39,000
然后它的整个

1283
00:43:40,000 --> 00:43:42,000
就它不光是语法古怪

1284
00:43:42,000 --> 00:43:43,000
它整个这种编程的

1285
00:43:43,000 --> 00:43:45,000
就是整个这个编

1286
00:43:45,000 --> 00:43:48,000
这个这个这个印象环境也是比较受限的

1287
00:43:48,000 --> 00:43:51,000
相对于 Emacs 的 E-List

1288
00:43:51,000 --> 00:43:52,000
List Pro 而言

1289
00:43:53,000 --> 00:43:55,000
因为 E-List 它的自由度和灵活度

1290
00:43:56,000 --> 00:43:58,000
就不管是从语法的角度来讲

1291
00:43:58,000 --> 00:44:00,000
因为如果你知道 List 是什么的话

1292
00:44:00,000 --> 00:44:02,000
那你就知道大概会是什么一个状况

1293
00:44:02,000 --> 00:44:07,000
然后它的这个就是可以供你修改或者是改

1294
00:44:08,000 --> 00:44:11,000
扩展的部分也是非常庞大的

1295
00:44:11,000 --> 00:44:14,000
这样导致一个结果就是 Wim

1296
00:44:14,000 --> 00:44:17,000
很多人就是拿来做一个比较简单的编辑工具

1297
00:44:17,000 --> 00:44:19,000
是有所谓的小儿专嘛

1298
00:44:19,000 --> 00:44:23,000
然后 Emacs 就很多人来扩展来做奇奇怪怪的事情了

1299
00:44:23,000 --> 00:44:27,000
比如说有人来用 Emacs 在写聊天程序

1300
00:44:27,000 --> 00:44:29,000
网页浏览器

1301
00:44:29,000 --> 00:44:30,000
但是文字版面的

1302
00:44:30,000 --> 00:44:30,000
对

1303
00:44:30,000 --> 00:44:31,000
而且可以插图

1304
00:44:31,000 --> 00:44:32,000
其实也可以插图的

1305
00:44:33,000 --> 00:44:33,000
对

1306
00:44:33,000 --> 00:44:34,000
我在做功课的时候

1307
00:44:34,000 --> 00:44:36,000
还在 QR 上看到一个人

1308
00:44:36,000 --> 00:44:39,000
演示如何在半个小时之内

1309
00:44:39,000 --> 00:44:46,000
用 E-List 来写一个那个 Spotify 的 Client

1310
00:44:46,000 --> 00:44:47,000
就是你可以在

1311
00:44:47,000 --> 00:44:48,000
放音乐是吧

1312
00:44:48,000 --> 00:44:48,000
对

1313
00:44:48,000 --> 00:44:51,000
它可以在 Emacs 里面搜索 Spotify 上那首歌

1314
00:44:51,000 --> 00:44:55,000
然后在 Emacs 里面告诉 Spotify 把这首歌放出来

1315
00:44:55,000 --> 00:44:55,000
对

1316
00:44:55,000 --> 00:44:57,000
就是还可以写游戏

1317
00:44:57,000 --> 00:44:59,000
所以所以你知道

1318
00:44:59,000 --> 00:45:04,000
这样它的作用领域就完全不仅仅是一个编辑器

1319
00:45:04,000 --> 00:45:05,000
那么简单了

1320
00:45:05,000 --> 00:45:06,000
对

1321
00:45:06,000 --> 00:45:10,000
Emacs 对于很多 Emacs 用户来说是一个开机之后

1322
00:45:10,000 --> 00:45:11,000
不管有时候没事

1323
00:45:11,000 --> 00:45:12,000
先打开的一个工具

1324
00:45:12,000 --> 00:45:12,000
对

1325
00:45:12,000 --> 00:45:15,000
但是在 VM 用户里面很少会看到这种现象

1326
00:45:15,000 --> 00:45:19,000
所以他们其实并不需要管是什么样的操作系统

1327
00:45:19,000 --> 00:45:21,000
但都是一个虚拟机而已

1328
00:45:21,000 --> 00:45:22,000
对

1329
00:45:22,000 --> 00:45:22,000
不管怎么说

1330
00:45:22,000 --> 00:45:23,000
我先打开就是了

1331
00:45:23,000 --> 00:45:24,000
对

1332
00:45:24,000 --> 00:45:25,000
先打开 Emacs 之后

1333
00:45:25,000 --> 00:45:28,000
其他的底层系统就已经无所谓了

1334
00:45:28,000 --> 00:45:28,000
对

1335
00:45:29,000 --> 00:45:30,000
其实也就导致

1336
00:45:30,000 --> 00:45:33,000
就是说在使用 VI 的时候

1337
00:45:33,000 --> 00:45:38,000
你不得不大量的去利用外部工具来完成

1338
00:45:39,000 --> 00:45:42,000
VI 或者 VIM 本身不支持的一些功能

1339
00:45:42,000 --> 00:45:42,000
对

1340
00:45:42,000 --> 00:45:44,000
而在 Emacs 里面

1341
00:45:44,000 --> 00:45:45,000
你基本上可以永远待在 Emacs 里面

1342
00:45:45,000 --> 00:45:46,000
对

1343
00:45:46,000 --> 00:45:50,000
比如说这里说的我最我个人最常用的一个状况

1344
00:45:50,000 --> 00:45:53,000
就是因为我做的很多都是服务器专的东西

1345
00:45:53,000 --> 00:45:55,000
那么需要去远程调试

1346
00:45:55,000 --> 00:45:55,000
对吧

1347
00:45:55,000 --> 00:45:56,000
然后远程调试的话

1348
00:45:56,000 --> 00:45:57,000
要通过命令行

1349
00:45:57,000 --> 00:45:59,000
比如说 SSH 登录过去

1350
00:46:00,000 --> 00:46:02,000
但是至少到目前为止

1351
00:46:02,000 --> 00:46:03,000
我并没有发现

1352
00:46:03,000 --> 00:46:05,000
我在 VIM 下面有一个可以

1353
00:46:05,000 --> 00:46:09,000
就是签用到 VIM 里面的这么一个中端的一个插件

1354
00:46:09,000 --> 00:46:10,000
对吧

1355
00:46:10,000 --> 00:46:13,000
所以我还是得一边开一个 VIM 编辑的窗口

1356
00:46:13,000 --> 00:46:17,000
然后一边再开一个这个中端的这个窗口

1357
00:46:17,000 --> 00:46:19,000
去去去做这个操作

1358
00:46:19,000 --> 00:46:21,000
但这点我发现在 Emacs 什么就完全不一样

1359
00:46:21,000 --> 00:46:24,000
Emacs 就是直接全屏是一个 Emacs 的窗口

1360
00:46:24,000 --> 00:46:28,000
然后里面再画出一部分来做一个中端的插件

1361
00:46:28,000 --> 00:46:29,000
然后这样登录去操作

1362
00:46:29,000 --> 00:46:31,000
对

1363
00:46:31,000 --> 00:46:32,000
在开 VIM 的时候

1364
00:46:32,000 --> 00:46:34,000
你很少有说

1365
00:46:34,000 --> 00:46:35,000
是开 VIM 的

1366
00:46:35,000 --> 00:46:40,000
都在 VIM 里面完成的这样一种情形存在

1367
00:46:41,000 --> 00:46:43,000
但反过来在 Emacs 里面

1368
00:46:43,000 --> 00:46:44,000
基本上进去就不晓得再出来

1369
00:46:46,000 --> 00:46:46,000
对

1370
00:46:46,000 --> 00:46:53,000
甚至就是甚至我在找例子的时候找到了这么一个

1371
00:46:55,000 --> 00:46:58,000
场景就是有一个有一个应该是在实验室工作的人

1372
00:46:58,000 --> 00:46:59,000
他说

1373
00:47:00,000 --> 00:47:01,000
在 Emacs 上面

1374
00:47:01,000 --> 00:47:06,000
因为 Emacs 支持在支持 X Windows 系统

1375
00:47:06,000 --> 00:47:09,000
然后他可以同时联系到多个 XL

1376
00:47:09,000 --> 00:47:11,000
然后他可以做到这件事情就是

1377
00:47:11,000 --> 00:47:14,000
他在办公室里面开一台电脑

1378
00:47:14,000 --> 00:47:16,000
然后在实验室里面又有几台电脑

1379
00:47:16,000 --> 00:47:19,000
他可以在办公室里面打开一个 Emacs

1380
00:47:19,000 --> 00:47:24,000
然后远程告诉实验室里面某一台电脑上面的

1381
00:47:24,000 --> 00:47:29,000
X Windows Server 请出现一个 Emacs 窗口

1382
00:47:30,000 --> 00:47:32,000
他在办公室做完这件事情之后

1383
00:47:32,000 --> 00:47:34,000
走到实验室

1384
00:47:36,000 --> 00:47:36,000
做实验

1385
00:47:36,000 --> 00:47:39,000
然后就可以转身在实验室的电脑上

1386
00:47:39,000 --> 00:47:43,000
在他刚刚打开的办公室 Emacs 窗口里面输入数据

1387
00:47:44,000 --> 00:47:46,000
这是一个非常

1388
00:47:46,000 --> 00:47:46,000
对

1389
00:47:46,000 --> 00:47:49,000
这是一件非常匪夷所思的功能

1390
00:47:49,000 --> 00:47:52,000
所以你看 Emacs 就是可以做的

1391
00:47:52,000 --> 00:47:53,000
但其实你是看他这样

1392
00:47:53,000 --> 00:47:57,000
或者说 Emacs 用户在很多年以前就已经实现了

1393
00:47:57,000 --> 00:48:01,000
现在苹果所谓的什么 continuity 的功能了

1394
00:48:01,000 --> 00:48:02,000
对

1395
00:48:02,000 --> 00:48:02,000
Handleware

1396
00:48:02,000 --> 00:48:04,000
这不就是对

1397
00:48:04,000 --> 00:48:06,000
虽然还是有一个人工干预的

1398
00:48:06,000 --> 00:48:07,000
对 Handle

1399
00:48:07,000 --> 00:48:09,000
在人工干预的过程

1400
00:48:09,000 --> 00:48:11,000
但他已经在那了

1401
00:48:11,000 --> 00:48:13,000
如果你懂得怎么用的话

1402
00:48:13,000 --> 00:48:13,000
你是可以实现的

1403
00:48:13,000 --> 00:48:14,000
而且很快

1404
00:48:16,000 --> 00:48:16,000
但是反过来

1405
00:48:16,000 --> 00:48:17,000
如果你用 Wheam 的话

1406
00:48:17,000 --> 00:48:18,000
这种功能

1407
00:48:18,000 --> 00:48:20,000
你可能唯一能做的就是你走到实验室

1408
00:48:21,000 --> 00:48:23,000
然后用实验室的 SSH 回来的

1409
00:48:23,000 --> 00:48:26,000
SSH 连接到办公室的电脑上

1410
00:48:26,000 --> 00:48:28,000
然后在那边编辑

1411
00:48:28,000 --> 00:48:29,000
你刚才编辑的文件

1412
00:48:29,000 --> 00:48:32,000
你甚至不能重用一个 Wheam Session

1413
00:48:33,000 --> 00:48:36,000
或者说你必须用比如说 T-Max 这样的东西

1414
00:48:36,000 --> 00:48:37,000
等一下

1415
00:48:37,000 --> 00:48:39,000
Wheam 好像有一个 server mode

1416
00:48:39,000 --> 00:48:40,000
我记得

1417
00:48:40,000 --> 00:48:41,000
但是我从来没有用过

1418
00:48:41,000 --> 00:48:42,000
我也没有用过

1419
00:48:42,000 --> 00:48:42,000
对

1420
00:48:42,000 --> 00:48:43,000
我记得有这么一个东西

1421
00:48:43,000 --> 00:48:44,000
确实是可以这么干

1422
00:48:45,000 --> 00:48:47,000
这里要解释一下什么是 server mode

1423
00:48:47,000 --> 00:48:49,000
就是我们常讲的编辑器

1424
00:48:49,000 --> 00:48:51,000
其实如果你大体来分

1425
00:48:51,000 --> 00:48:52,000
可以分为两部分

1426
00:48:52,000 --> 00:48:54,000
就一个是所谓的前端

1427
00:48:54,000 --> 00:48:55,000
就是它展示给你那些字符

1428
00:48:55,000 --> 00:48:56,000
然后那些

1429
00:48:56,000 --> 00:48:58,000
你现在看到的部分

1430
00:48:58,000 --> 00:48:58,000
对

1431
00:48:58,000 --> 00:48:59,000
那一部分

1432
00:48:59,000 --> 00:49:01,000
然后它其实后面跑的是一个所谓的

1433
00:49:01,000 --> 00:49:03,000
所谓的编辑器的内核

1434
00:49:03,000 --> 00:49:06,000
然后内核其实在操作内存中边间的一块区域

1435
00:49:06,000 --> 00:49:07,000
对吧

1436
00:49:08,000 --> 00:49:08,000
对

1437
00:49:08,000 --> 00:49:08,000
然后同时

1438
00:49:08,000 --> 00:49:09,000
是磁板上的一个文件

1439
00:49:09,000 --> 00:49:09,000
对

1440
00:49:09,000 --> 00:49:10,000
通常的话

1441
00:49:10,000 --> 00:49:12,000
我这两块是在同一个进程

1442
00:49:12,000 --> 00:49:14,000
或者同一台机器上面的

1443
00:49:14,000 --> 00:49:15,000
就至少是在同一台机器上面的

1444
00:49:15,000 --> 00:49:17,000
就是你编辑本地的文件

1445
00:49:17,000 --> 00:49:20,000
然后刚才讲的 server mode

1446
00:49:20,000 --> 00:49:22,000
其实可以让你把这两个分开

1447
00:49:22,000 --> 00:49:26,000
就是你可以在比如本地启动一个 vim 的前端

1448
00:49:26,000 --> 00:49:28,000
然后它连接的不是你本地的

1449
00:49:28,000 --> 00:49:30,000
就它编辑的不是你一个本地的文件

1450
00:49:30,000 --> 00:49:33,000
而是连接到远程的一台 vim 的 server 上面去

1451
00:49:33,000 --> 00:49:37,000
然后通过这种方式去编辑控制远程的

1452
00:49:37,000 --> 00:49:39,000
那台 server 编辑它的内存

1453
00:49:39,000 --> 00:49:41,000
或者是中的一个区块

1454
00:49:41,000 --> 00:49:43,000
去编辑它的那个一个文件

1455
00:49:43,000 --> 00:49:44,000
所以其实也是这样做

1456
00:49:44,000 --> 00:49:46,000
但是在现实中

1457
00:49:46,000 --> 00:49:48,000
我似乎还没有发现

1458
00:49:48,000 --> 00:49:50,000
有什么场合能用到这一点的

1459
00:49:51,000 --> 00:49:52,000
对

1460
00:49:52,000 --> 00:49:55,000
因为 vim 的使用模式和 emax 使用模式

1461
00:49:55,000 --> 00:49:57,000
基本上就是两个极端

1462
00:49:57,000 --> 00:50:00,000
vim 就是 vim 非常小

1463
00:50:00,000 --> 00:50:02,000
启动非常快

1464
00:50:02,000 --> 00:50:03,000
就像一个命令一样

1465
00:50:04,000 --> 00:50:05,000
一打 vim

1466
00:50:05,000 --> 00:50:07,000
它立刻就会弹出来一个窗口

1467
00:50:07,000 --> 00:50:10,000
而 emax 则是一个启动相对来说

1468
00:50:10,000 --> 00:50:11,000
比较慢的这么一个工具

1469
00:50:11,000 --> 00:50:17,000
所以使用 vim 的习惯也就是多次的进入 vim

1470
00:50:17,000 --> 00:50:18,000
多次的切出 vim

1471
00:50:18,000 --> 00:50:24,000
然后配 vim 作为你一系列工具之中的一个组件使用

1472
00:50:24,000 --> 00:50:26,000
而 emax 反过来基本上就是

1473
00:50:26,000 --> 00:50:29,000
你进去之后就想办法不要从里面出

1474
00:50:29,000 --> 00:50:31,000
一切功能或者一切工具

1475
00:50:31,000 --> 00:50:34,000
尽量在 emax 里面内部结局

1476
00:50:34,000 --> 00:50:38,000
所以 vim 应该是一个你的系列里面的常铸进行

1477
00:50:38,000 --> 00:50:40,000
你说 emax 应该是常铸进行吧

1478
00:50:40,000 --> 00:50:44,000
对 emax 应该是你的系列里面的常铸进行

1479
00:50:44,000 --> 00:50:49,000
对你在 emax 里面基本上可以做任何事情

1480
00:50:49,000 --> 00:50:51,000
比如说看当前的日历这种小儿科的事情

1481
00:50:51,000 --> 00:50:53,000
全都可以在 emax 里面完成

1482
00:50:53,000 --> 00:50:55,000
甚至还可以玩俄罗斯风块

1483
00:50:55,000 --> 00:50:57,000
emax 内置了俄罗斯风块功能

1484
00:50:57,000 --> 00:51:03,000
这也是 vim 所缺乏的一个特征

1485
00:51:03,000 --> 00:51:07,000
还有一点我觉得我一直想挺羡慕的

1486
00:51:07,000 --> 00:51:09,000
就是 emax 的这个特性

1487
00:51:09,000 --> 00:51:11,000
就是 emax 的图形这面模式

1488
00:51:11,000 --> 00:51:14,000
它是可以使用多种字

1489
00:51:14,000 --> 00:51:17,000
就是多种字题组合的

1490
00:51:17,000 --> 00:51:19,000
ok 那这个要比 vim 好多了

1491
00:51:19,000 --> 00:51:20,000
对 然后这个有什么用呢

1492
00:51:20,000 --> 00:51:23,000
就是之前这个是我看我

1493
00:51:23,000 --> 00:51:25,000
被一个朋友在大学的时候用过的

1494
00:51:25,000 --> 00:51:27,000
就是他当时他

1495
00:51:27,000 --> 00:51:33,000
我就是他写论文或者看论文写文档的时候

1496
00:51:33,000 --> 00:51:36,000
他会用那个雷太来写嘛

1497
00:51:36,000 --> 00:51:38,000
然后他是一个 emax 用户

1498
00:51:38,000 --> 00:51:40,000
然后我去他那里看的时候

1499
00:51:40,000 --> 00:51:43,000
我就会发现他的界面的

1500
00:51:43,000 --> 00:51:47,000
就是他可以用某一种 emax 的 mode

1501
00:51:47,000 --> 00:51:49,000
直接展示出

1502
00:51:49,000 --> 00:51:51,000
比如说这是一个标题

1503
00:51:51,000 --> 00:51:52,000
它会大一点的字

1504
00:51:52,000 --> 00:51:53,000
然后这个是证文

1505
00:51:53,000 --> 00:51:54,000
它会小

1506
00:51:54,000 --> 00:51:55,000
它会是一个证文的字题

1507
00:51:55,000 --> 00:51:56,000
然后它是一个二级标题

1508
00:51:56,000 --> 00:51:59,000
它又会是介于大标题和证文之间的一个字号

1509
00:51:59,000 --> 00:52:01,000
或者另外一种形态的字

1510
00:52:01,000 --> 00:52:01,000
就是它

1511
00:52:01,000 --> 00:52:03,000
半所见基础的

1512
00:52:03,000 --> 00:52:03,000
对

1513
00:52:04,000 --> 00:52:05,000
而且它可以在

1514
00:52:05,000 --> 00:52:08,000
因为 emax 的图形界面其实非常牛逼

1515
00:52:08,000 --> 00:52:09,000
它可以插入什么

1516
00:52:09,000 --> 00:52:10,000
刚刚讲的因为播音乐这种小儿

1517
00:52:10,000 --> 00:52:11,000
可以做

1518
00:52:11,000 --> 00:52:12,000
还可以插入图形

1519
00:52:12,000 --> 00:52:16,000
它甚至可以通过一个插件

1520
00:52:16,000 --> 00:52:18,000
就是 emax 插件

1521
00:52:18,000 --> 00:52:21,000
及时的渲染你在 emax 的文档里面

1522
00:52:21,000 --> 00:52:24,000
输入着一条 litec 的公式

1523
00:52:24,000 --> 00:52:25,000
然后把那个渲染的结果

1524
00:52:25,000 --> 00:52:27,000
以图片的形式展现在那里

1525
00:52:27,000 --> 00:52:28,000
实现一个

1526
00:52:28,000 --> 00:52:29,000
基本上实现一个所见

1527
00:52:29,000 --> 00:52:31,000
所得的这一面

1528
00:52:31,000 --> 00:52:33,000
一个 litec 的编辑的结果

1529
00:52:33,000 --> 00:52:34,000
这个是

1530
00:52:34,000 --> 00:52:35,000
这个是当时

1531
00:52:35,000 --> 00:52:36,000
vim 永远做不到的

1532
00:52:36,000 --> 00:52:36,000
对

1533
00:52:36,000 --> 00:52:39,000
因为 vim 的它是一个

1534
00:52:39,000 --> 00:52:40,000
就不管你怎么改

1535
00:52:40,000 --> 00:52:43,000
它始终是默认是一个单一自己界面的

1536
00:52:43,000 --> 00:52:44,000
而且它的那个

1537
00:52:44,000 --> 00:52:45,000
都是一个所谓的懂宽字体

1538
00:52:45,000 --> 00:52:46,000
对

1539
00:52:46,000 --> 00:52:49,000
就是你在唯一能做的就是与法高量

1540
00:52:49,000 --> 00:52:50,000
就改变自己的颜色

1541
00:52:50,000 --> 00:52:53,000
或者加什么下滑线之类的东西

1542
00:52:53,000 --> 00:52:54,000
但是你并不能说

1543
00:52:54,000 --> 00:52:57,000
你在同一个文档中的一部分才有一种字体

1544
00:52:57,000 --> 00:52:58,000
然后另外一部分才有另一种字体

1545
00:52:58,000 --> 00:53:01,000
你当然你更加不能插入图片

1546
00:53:01,000 --> 00:53:02,000
因为它根本没有这种接口

1547
00:53:03,000 --> 00:53:03,000
对

1548
00:53:03,000 --> 00:53:05,000
所以这一点上我觉得

1549
00:53:05,000 --> 00:53:06,000
从

1550
00:53:06,000 --> 00:53:08,000
所以其实从这角度来讲

1551
00:53:08,000 --> 00:53:10,000
你并不能把 vim 和 emax

1552
00:53:10,000 --> 00:53:15,000
作为两个同等的产品来对比

1553
00:53:15,000 --> 00:53:16,000
它就是所谓的

1554
00:53:16,000 --> 00:53:18,000
就不算苹果和橘子的区别

1555
00:53:18,000 --> 00:53:19,000
对

1556
00:53:19,000 --> 00:53:20,000
这是好像

1557
00:53:20,000 --> 00:53:23,000
其实

1558
00:53:23,000 --> 00:53:24,000
但是这种比较

1559
00:53:24,000 --> 00:53:26,000
就是有意义的

1560
00:53:26,000 --> 00:53:28,000
或者说就是时常被拿出来说的

1561
00:53:28,000 --> 00:53:33,000
因为就有点像 Android 和 iPhone 之间的差别

1562
00:53:33,000 --> 00:53:34,000
iPhone 同时是硬件

1563
00:53:34,000 --> 00:53:35,000
同时是软件

1564
00:53:35,000 --> 00:53:38,000
同时是一家公司所提供的一切服务

1565
00:53:38,000 --> 00:53:40,000
但 Android 只是一个操作系统而已

1566
00:53:40,000 --> 00:53:42,000
但人们即便如此

1567
00:53:42,000 --> 00:53:44,000
人们还是会把他们拿出来相对的

1568
00:53:45,000 --> 00:53:46,000
对

1569
00:53:46,000 --> 00:53:51,000
但 vim 和 emax 之间的差别大概大致类似

1570
00:53:51,000 --> 00:53:53,000
但我认就认为这样的比较还是有意义的

1571
00:53:53,000 --> 00:53:54,000
对

1572
00:53:54,000 --> 00:53:56,000
就反正就刚才说的那种

1573
00:53:56,000 --> 00:53:58,000
emax 能做的很多事情

1574
00:53:58,000 --> 00:53:59,000
其实 vim 是做不到的

1575
00:53:59,000 --> 00:54:00,000
我还有时候还是挺羡慕的

1576
00:54:00,000 --> 00:54:04,000
然后也尝试过很多次去学 emax

1577
00:54:04,000 --> 00:54:07,000
但是因为模态

1578
00:54:07,000 --> 00:54:08,000
因为没有模态这个东西

1579
00:54:08,000 --> 00:54:11,000
也一直觉得挺沮丧的

1580
00:54:11,000 --> 00:54:12,000
不过后来有

1581
00:54:12,000 --> 00:54:13,000
我向你介绍一个差件

1582
00:54:13,000 --> 00:54:14,000
叫 Evo

1583
00:54:14,000 --> 00:54:15,000
还是 Evo

1584
00:54:15,000 --> 00:54:16,000
还是

1585
00:54:17,000 --> 00:54:18,000
不是 Evo

1586
00:54:18,000 --> 00:54:19,000
叫什么来的

1587
00:54:19,000 --> 00:54:20,000
对

1588
00:54:20,000 --> 00:54:24,000
反正大概意思就是 emax 上有一个差件

1589
00:54:24,000 --> 00:54:25,000
刚才讲的可以插件

1590
00:54:25,000 --> 00:54:30,000
它完全模拟了 vim 的模态系统

1591
00:54:30,000 --> 00:54:33,000
然后在 emax 里面也可以做

1592
00:54:33,000 --> 00:54:35,000
然后后来我据说

1593
00:54:35,000 --> 00:54:38,000
我这个没有亲自求证过

1594
00:54:38,000 --> 00:54:42,000
据说是比 vim 自己的模态做得还好

1595
00:54:42,000 --> 00:54:43,000
对

1596
00:54:43,000 --> 00:54:48,000
这就是 vi 和 emax 的最大的一个区别

1597
00:54:48,000 --> 00:54:50,000
就是 emax 可以成为 vim

1598
00:54:50,000 --> 00:54:52,000
但是 vim 永远不会成为 emax

1599
00:54:52,000 --> 00:54:53,000
对

1600
00:54:53,000 --> 00:54:55,000
这还算好像有点自黑的意思

1601
00:54:56,000 --> 00:54:57,000
也没有

1602
00:54:57,000 --> 00:54:59,000
我觉得还是还蛮值得自豪的

1603
00:54:59,000 --> 00:55:03,000
因为反过来想 emax 的用户可以说

1604
00:55:03,000 --> 00:55:04,000
我们可以做这个

1605
00:55:04,000 --> 00:55:05,000
可以做那个

1606
00:55:05,000 --> 00:55:06,000
可是我们可以说

1607
00:55:08,000 --> 00:55:11,000
我们只需要经集中注意力做一件事就好了

1608
00:55:11,000 --> 00:55:15,000
其他需要其他的功能

1609
00:55:15,000 --> 00:55:18,000
就交给其他的工具学试下就好了

1610
00:55:18,000 --> 00:55:20,000
对回到最开始说的这是一种哲学

1611
00:55:20,000 --> 00:55:22,000
然后使用哲学的拥等

1612
00:55:22,000 --> 00:55:23,000
或者思维状态的一个

1613
00:55:23,000 --> 00:55:23,000
对

1614
00:55:23,000 --> 00:55:24,000
一个差别了

1615
00:55:24,000 --> 00:55:25,000
对

1616
00:55:25,000 --> 00:55:26,000
我觉得我们都是那种人

1617
00:55:26,000 --> 00:55:28,000
就是喜欢一个很小

1618
00:55:28,000 --> 00:55:29,000
所谓的 unique 哲学

1619
00:55:29,000 --> 00:55:32,000
就是 do one thing and do it well

1620
00:55:32,000 --> 00:55:32,000
对

1621
00:55:32,000 --> 00:55:36,000
然后其实我们在本质上都是排斥那种

1622
00:55:36,000 --> 00:55:38,000
所谓大全的方案的

1623
00:55:38,000 --> 00:55:41,000
比如上次你讲 systemd 的那个时候

1624
00:55:41,000 --> 00:55:44,000
我应该我也能够感觉到

1625
00:55:44,000 --> 00:55:47,000
你是不太喜欢那套方案的

1626
00:55:47,000 --> 00:55:47,000
对

1627
00:55:47,000 --> 00:55:52,000
但其实如果去追溯这两个工具的出身的话

1628
00:55:52,000 --> 00:55:57,000
你就会意识到 vi 其实就是从一开始

1629
00:55:57,000 --> 00:56:01,000
从 1976 年他就是 unix 的一部分

1630
00:56:01,000 --> 00:56:04,000
而 emax 是由 gnu 的创始人所写的

1631
00:56:04,000 --> 00:56:05,000
retro stormer

1632
00:56:05,000 --> 00:56:06,000
对

1633
00:56:06,000 --> 00:56:07,000
rms

1634
00:56:07,000 --> 00:56:07,000
rms

1635
00:56:07,000 --> 00:56:10,000
就是 stormer 写这个东西的时候

1636
00:56:10,000 --> 00:56:11,000
他其实

1637
00:56:11,000 --> 00:56:16,000
当然他仍就是在一台 unix 的机器上所写出来的

1638
00:56:16,000 --> 00:56:21,000
可是我觉得 emax 这个东西本质上还是违背 unix 这些

1639
00:56:21,000 --> 00:56:25,000
对 他是一个就是所谓的大叫什么大教堂

1640
00:56:25,000 --> 00:56:25,000
对

1641
00:56:25,000 --> 00:56:26,000
他就是一个 Bazaar

1642
00:56:26,000 --> 00:56:29,000
他就是一个 cassage

1643
00:56:29,000 --> 00:56:30,000
对

1644
00:56:30,000 --> 00:56:32,000
所以

1645
00:56:32,000 --> 00:56:33,000
但是有时候你也不得不承认他

1646
00:56:33,000 --> 00:56:35,000
有时候你有一个

1647
00:56:35,000 --> 00:56:38,000
就是像那种小儿经的时候

1648
00:56:38,000 --> 00:56:40,000
有时候所谓的边界的问题是比较难

1649
00:56:40,000 --> 00:56:42,000
就配合起来会有各种各样的

1650
00:56:42,000 --> 00:56:44,000
不让你不爽的地方

1651
00:56:44,000 --> 00:56:44,000
比如说

1652
00:56:44,000 --> 00:56:45,000
对

1653
00:56:45,000 --> 00:56:47,000
那个 vim 你要去调一些外部的工具

1654
00:56:47,000 --> 00:56:49,000
那么你知道在 unix 里面

1655
00:56:49,000 --> 00:56:51,000
这种工具之间会像调一般的

1656
00:56:51,000 --> 00:56:56,000
只能通过纯文本去做这个输出的这种事情来

1657
00:56:56,000 --> 00:56:57,000
来进行一些交互

1658
00:56:57,000 --> 00:56:59,000
但是

1659
00:56:59,000 --> 00:57:02,000
而且他缺乏一种就是比较

1660
00:57:02,000 --> 00:57:05,000
unified 这样一种调用方式

1661
00:57:05,000 --> 00:57:06,000
比如说

1662
00:57:06,000 --> 00:57:10,000
我刚刚一个小时之前用到的就是

1663
00:57:10,000 --> 00:57:13,000
比如说我要在 vim 里面格式化 json

1664
00:57:13,000 --> 00:57:14,000
对

1665
00:57:14,000 --> 00:57:15,000
对

1666
00:57:15,000 --> 00:57:17,000
我现在比较流行的

1667
00:57:17,000 --> 00:57:20,000
或者比较 defecto 的优雅解决方案

1668
00:57:20,000 --> 00:57:23,000
是调用 pizen 来格式化 json

1669
00:57:23,000 --> 00:57:26,000
那么你就会意识到你要在一个

1670
00:57:26,000 --> 00:57:29,000
你叫在 vi 这样一种工具里面调用一个外部工具

1671
00:57:29,000 --> 00:57:32,000
而这个外部工具的输出

1672
00:57:32,000 --> 00:57:34,000
以及它的输入

1673
00:57:34,000 --> 00:57:41,000
其实都是某种跨进程完成的这样一种

1674
00:57:41,000 --> 00:57:42,000
这样一种结果

1675
00:57:42,000 --> 00:57:46,000
你会觉得非常的有很不爽的感觉

1676
00:57:46,000 --> 00:57:48,000
可能具体描述他们

1677
00:57:48,000 --> 00:57:50,000
但是在 emax 下面

1678
00:57:50,000 --> 00:57:52,000
你可能只需要敲几个组合键就完了

1679
00:57:52,000 --> 00:57:53,000
对

1680
00:57:53,000 --> 00:57:54,000
然后整个过程就好

1681
00:57:54,000 --> 00:57:56,000
你不会觉得自己离开了一次编辑器

1682
00:57:56,000 --> 00:58:00,000
但是在 vim 里面你会很明确的感觉到

1683
00:58:00,000 --> 00:58:03,000
刚才这个东西是由 pizen 来做的

1684
00:58:03,000 --> 00:58:03,000
对

1685
00:58:03,000 --> 00:58:08,000
我觉得这可能跟 emax 的叫什么 Lisp 的根基有一点

1686
00:58:08,000 --> 00:58:09,000
或多或少的关系

1687
00:58:09,000 --> 00:58:13,000
就是你知道在

1688
00:58:13,000 --> 00:58:16,000
曾经有一种操作系统是用 Lisp 写的

1689
00:58:16,000 --> 00:58:20,000
就曾经有一种硬件是专门为了跑 Lisp 操作系统的

1690
00:58:20,000 --> 00:58:21,000
Lisp machine

1691
00:58:21,000 --> 00:58:21,000
对

1692
00:58:21,000 --> 00:58:26,000
然后它里面的所有状态都是可以被修改的

1693
00:58:26,000 --> 00:58:27,000
可以被及时修改的

1694
00:58:27,000 --> 00:58:28,000
就是

1695
00:58:28,000 --> 00:58:30,000
Lisp 这种语言最大的魅力也就在于

1696
00:58:30,000 --> 00:58:32,000
它就像围棋

1697
00:58:32,000 --> 00:58:33,000
然后它的基础非常简单

1698
00:58:33,000 --> 00:58:36,000
但是它可以不停的修改自身

1699
00:58:36,000 --> 00:58:40,000
然后可以不停的在运行时添加语言本身的功能

1700
00:58:40,000 --> 00:58:40,000
对

1701
00:58:40,000 --> 00:58:41,000
就是说明一个什么问题

1702
00:58:41,000 --> 00:58:45,000
就是它的进程之间的边界其实是比较模糊的

1703
00:58:45,000 --> 00:58:46,000
因为整个

1704
00:58:46,000 --> 00:58:48,000
如果整个操作系统的所有的状态

1705
00:58:48,000 --> 00:58:51,000
都是可以随意的访问和修改的话

1706
00:58:51,000 --> 00:58:52,000
那就不存在说

1707
00:58:52,000 --> 00:58:54,000
像比如说 UniX 这种

1708
00:58:54,000 --> 00:58:57,000
就种相对于就是每个进程之间完全割裂

1709
00:58:57,000 --> 00:58:59,000
然后你只能通过简单的输出

1710
00:58:59,000 --> 00:59:01,000
或者其他的 IPC 的方式

1711
00:59:01,000 --> 00:59:03,000
来实现进程之间的通信

1712
00:59:03,000 --> 00:59:06,000
这种肯定是有一定的代价和门槛

1713
00:59:06,000 --> 00:59:06,000
刚才讲的

1714
00:59:06,000 --> 00:59:08,000
你比如说你只能依赖于

1715
00:59:08,000 --> 00:59:09,000
一般情况下

1716
00:59:09,000 --> 00:59:11,000
你是只能依赖于文本的方式来实现

1717
00:59:11,000 --> 00:59:13,000
它就会导致同一个数据

1718
00:59:13,000 --> 00:59:15,000
你要不断的把它序列化

1719
00:59:15,000 --> 00:59:16,000
然后反序列化成

1720
00:59:16,000 --> 00:59:20,000
一个内存中的一个结构

1721
00:59:20,000 --> 00:59:21,000
但是如果你像

1722
00:59:21,000 --> 00:59:22,000
像 List Machine 这种方式

1723
00:59:22,000 --> 00:59:24,000
或者说在 Emax 里面这种方式

1724
00:59:24,000 --> 00:59:26,000
你整个都是在同一个进程里面的

1725
00:59:26,000 --> 00:59:28,000
当然 List Machine 就比较简单

1726
00:59:28,000 --> 00:59:31,000
因为整个系统都是一个进程

1727
00:59:31,000 --> 00:59:32,000
你可以这么理解

1728
00:59:33,000 --> 00:59:34,000
那么这样的话

1729
00:59:34,000 --> 00:59:36,000
就不存在说你每次要去把一个

1730
00:59:36,000 --> 00:59:39,000
内存中的结构序列化成文本

1731
00:59:39,000 --> 00:59:41,000
然后再去到另外一个地方解序

1732
00:59:41,000 --> 00:59:41,000
来化出来

1733
00:59:41,000 --> 00:59:42,000
这个本来也是一个损耗

1734
00:59:42,000 --> 00:59:46,000
而且也就是多余的工作

1735
00:59:47,000 --> 00:59:48,000
我有一个问题

1736
00:59:48,000 --> 00:59:51,000
就是 List Machine 的 CPU

1737
00:59:51,000 --> 00:59:54,000
仍就是传统意义上的 CPU 吧

1738
00:59:54,000 --> 00:59:57,000
它不是在 CPU 级别提供什么

1739
00:59:57,000 --> 01:00:00,000
什么 Cart CDR 这种

1740
01:00:00,000 --> 01:00:02,000
好像是这样的

1741
01:00:02,000 --> 01:00:02,000
真的吗

1742
01:00:02,000 --> 01:00:04,000
这可能吗

1743
01:00:04,000 --> 01:00:04,000
为什么不可能

1744
01:00:04,000 --> 01:00:06,000
那只有几个

1745
01:00:06,000 --> 01:00:07,000
什么 7 个还是 8 个的元

1746
01:00:07,000 --> 01:00:11,000
就是最原式的那几个表达就可以了

1747
01:00:11,000 --> 01:00:11,000
对

1748
01:00:11,000 --> 01:00:13,000
可是这样的芯片真的存在吗

1749
01:00:13,000 --> 01:00:15,000
就是专门直接解释

1750
01:00:15,000 --> 01:00:16,000
执行 List

1751
01:00:16,000 --> 01:00:17,000
语句的芯片

1752
01:00:17,000 --> 01:00:18,000
我没记错

1753
01:00:18,000 --> 01:00:19,000
应该是这样的

1754
01:00:19,000 --> 01:00:21,000
可以再查一下

1755
01:00:21,000 --> 01:00:23,000
你给我问一下

1756
01:00:23,000 --> 01:00:24,000
因为我记得是这样子的

1757
01:00:24,000 --> 01:00:26,000
就如果至少 List Machine 不是的话

1758
01:00:26,000 --> 01:00:27,000
曾经有人做过这样的东西

1759
01:00:27,000 --> 01:00:29,000
但是虽然性能怎么样

1760
01:00:29,000 --> 01:00:29,000
我们再说

1761
01:00:29,000 --> 01:00:32,000
但是起码是存在过这么一种东西的

1762
01:00:32,000 --> 01:00:33,000
对

1763
01:00:33,000 --> 01:00:37,000
我相信如果能在硬件上完成一个 List

1764
01:00:37,000 --> 01:00:39,000
语言的硬件解释器的话

1765
01:00:39,000 --> 01:00:44,000
那的确是非常非常 Alin 这种东西

1766
01:00:44,000 --> 01:00:48,000
它还是通过这个汇联程机语

1767
01:00:48,000 --> 01:00:50,000
但是它应该是在硬件层面

1768
01:00:50,000 --> 01:00:52,000
有对 List 的特性有所支持的

1769
01:00:52,000 --> 01:00:53,000
OK

1770
01:00:53,000 --> 01:00:57,000
也不是完全的通过那种方式

1771
01:00:57,000 --> 01:00:58,000
你讲那个方式来实现

1772
01:00:58,000 --> 01:01:00,000
但是差不太远了

1773
01:01:00,000 --> 01:01:01,000
OK

1774
01:01:01,000 --> 01:01:02,000
对

1775
01:01:02,000 --> 01:01:04,000
回到 EMEX

1776
01:01:04,000 --> 01:01:07,000
对 EMEX 的非常非常诱人的一点

1777
01:01:07,000 --> 01:01:10,000
大概也就在于 elipso

1778
01:01:10,000 --> 01:01:11,000
elipso 这种语言上面了

1779
01:01:13,000 --> 01:01:13,000
对

1780
01:01:13,000 --> 01:01:16,000
我其实有好多次下就先要学学 lisp

1781
01:01:16,000 --> 01:01:19,000
我去学学 emex 也就是因为

1782
01:01:19,000 --> 01:01:22,000
想要找一个真正的能够用到 lisp 的地方

1783
01:01:23,000 --> 01:01:28,000
不过每次都是因为小拇指或者是大拇指

1784
01:01:28,000 --> 01:01:29,000
开始抱怨

1785
01:01:29,000 --> 01:01:31,000
然后我想还是算了吧

1786
01:01:31,000 --> 01:01:31,000
健康要紧

1787
01:01:32,000 --> 01:01:34,000
这个就是我们上

1788
01:01:34,000 --> 01:01:35,000
应该是前一期提到了

1789
01:01:35,000 --> 01:01:37,000
这个键盘的问题

1790
01:01:37,000 --> 01:01:40,000
就是 emex 的过多的使用快捷键

1791
01:01:40,000 --> 01:01:44,000
而且在目前的主流的键盘的布局上面

1792
01:01:44,000 --> 01:01:46,000
这些快捷键对你的手指

1793
01:01:46,000 --> 01:01:48,000
特别是小指

1794
01:01:48,000 --> 01:01:50,000
都是一个极大的考验

1795
01:01:50,000 --> 01:01:50,000
对

1796
01:01:50,000 --> 01:01:53,000
然后如果你不想你在可能四十岁之前

1797
01:01:53,000 --> 01:01:55,000
就是手指或者手掌废掉的话

1798
01:01:55,000 --> 01:01:58,000
可能需要要做一些比较大的调整才可以

1799
01:01:58,000 --> 01:01:58,000
对

1800
01:01:58,000 --> 01:02:00,000
如果你不想在手上也出现什么

1801
01:02:00,000 --> 01:02:01,000
拇指外翻

1802
01:02:02,000 --> 01:02:04,000
小指外翻这种症状的话

1803
01:02:04,000 --> 01:02:05,000
这样还是

1804
01:02:05,000 --> 01:02:05,000
所以应该买

1805
01:02:05,000 --> 01:02:06,000
我们不应该这么

1806
01:02:06,000 --> 01:02:08,000
我们不应该这样

1807
01:02:08,000 --> 01:02:09,000
误导听众

1808
01:02:09,000 --> 01:02:10,000
所以应该买那个 paddle

1809
01:02:11,000 --> 01:02:13,000
买那个踏板是挺有用的

1810
01:02:13,000 --> 01:02:15,000
应该还挺有用

1811
01:02:15,000 --> 01:02:15,000
对

1812
01:02:15,000 --> 01:02:17,000
其实这边也可以解释一下

1813
01:02:17,000 --> 01:02:20,000
就是如果我们拼重没有用过 emex 的话

1814
01:02:20,000 --> 01:02:23,000
那么 emex 的绝大部分操作都有一个对应的快捷键

1815
01:02:23,000 --> 01:02:27,000
比如说退出 emex 是什么

1816
01:02:27,000 --> 01:02:29,000
controlx controlc

1817
01:02:29,000 --> 01:02:30,000
对

1818
01:02:31,000 --> 01:02:31,000
应该是吧

1819
01:02:31,000 --> 01:02:32,000
应该是吧

1820
01:02:32,000 --> 01:02:32,000
6 c

1821
01:02:32,000 --> 01:02:33,000
6 c

1822
01:02:33,000 --> 01:02:34,000
我忘了

1823
01:02:34,000 --> 01:02:35,000
对

1824
01:02:35,000 --> 01:02:39,000
而且大部分 emex 的快捷键都是要按两次

1825
01:02:39,000 --> 01:02:45,000
就是你不仅仅是像比如说 windows 里面 controlx 是剪切

1826
01:02:45,000 --> 01:02:47,000
在 emex 里面

1827
01:02:47,000 --> 01:02:50,000
你为了退出边境系要 encontrolx

1828
01:02:50,000 --> 01:02:50,000
松开

1829
01:02:50,000 --> 01:02:52,000
再按 controlc

1830
01:02:52,000 --> 01:02:52,000
对

1831
01:02:52,000 --> 01:02:56,000
所以绝大部分命令都有两到三个快捷键

1832
01:02:56,000 --> 01:02:57,000
需要一次按下

1833
01:02:57,000 --> 01:02:58,000
对

1834
01:02:58,000 --> 01:03:00,000
所以刚才我们讲你知道为什么你的小模具

1835
01:03:00,000 --> 01:03:01,000
很快要废掉了

1836
01:03:01,000 --> 01:03:02,000
也是这个原因

1837
01:03:02,000 --> 01:03:02,000
对

1838
01:03:02,000 --> 01:03:05,000
你刚刚炸停可能没有什么

1839
01:03:05,000 --> 01:03:06,000
但是想象一下

1840
01:03:06,000 --> 01:03:08,000
你每要改一个单词

1841
01:03:08,000 --> 01:03:09,000
每要改一行字

1842
01:03:09,000 --> 01:03:12,000
你就必须按两三次 control

1843
01:03:12,000 --> 01:03:14,000
那对于时间一长的话

1844
01:03:14,000 --> 01:03:16,000
对于你的小纸其实伤害相当大

1845
01:03:16,000 --> 01:03:18,000
而且我觉得它那些快捷键的

1846
01:03:19,000 --> 01:03:20,000
我觉得很难

1847
01:03:20,000 --> 01:03:22,000
就是我可能也用的不够熟练

1848
01:03:22,000 --> 01:03:24,000
但是我觉得好像很难记住

1849
01:03:26,000 --> 01:03:26,000
对

1850
01:03:26,000 --> 01:03:28,000
就是经常有 emex 用户

1851
01:03:28,000 --> 01:03:32,000
跟我说什么 emex 用个快捷比较符合直觉

1852
01:03:32,000 --> 01:03:36,000
就是 controlx 其实是 extended commands

1853
01:03:36,000 --> 01:03:37,000
然后 controlc

1854
01:03:37,000 --> 01:03:39,000
就是 whatever

1855
01:03:39,000 --> 01:03:40,000
controlccancel

1856
01:03:40,000 --> 01:03:42,000
就是 extended command

1857
01:03:42,000 --> 01:03:42,000
然后 cancel

1858
01:03:42,000 --> 01:03:44,000
其实还是挺好记的

1859
01:03:44,000 --> 01:03:45,000
可是反过来

1860
01:03:45,000 --> 01:03:48,000
你可以说 controln next

1861
01:03:48,000 --> 01:03:50,000
是移动光标向前

1862
01:03:50,000 --> 01:03:51,000
对吧

1863
01:03:51,000 --> 01:03:53,000
还是向下翻

1864
01:03:53,000 --> 01:03:55,000
我们往下

1865
01:03:55,000 --> 01:03:56,000
下一个

1866
01:03:56,000 --> 01:03:57,000
next

1867
01:03:57,000 --> 01:03:57,000
对

1868
01:03:57,000 --> 01:03:58,000
应该是下一个

1869
01:03:58,000 --> 01:03:59,000
controlp 是往回

1870
01:03:59,000 --> 01:04:01,000
然后 controlf 是向前

1871
01:04:01,000 --> 01:04:02,000
公标向右

1872
01:04:02,000 --> 01:04:04,000
或者说 controlb 是公标向左

1873
01:04:04,000 --> 01:04:07,000
就是 next previous forward backward

1874
01:04:07,000 --> 01:04:09,000
这些是符合直觉

1875
01:04:09,000 --> 01:04:09,000
可是

1876
01:04:09,000 --> 01:04:10,000
其实也不一定

1877
01:04:10,000 --> 01:04:12,000
如果你是母语是英文来讲

1878
01:04:12,000 --> 01:04:15,000
你觉得还可以猜想出来一个什么 next previous 那些

1879
01:04:15,000 --> 01:04:17,000
但是如果你母语不是英文

1880
01:04:17,000 --> 01:04:19,000
或者是甚至你比如说你母语是德文

1881
01:04:19,000 --> 01:04:21,000
你想一下这个符合直觉

1882
01:04:21,000 --> 01:04:22,000
我觉得也不一定

1883
01:04:23,000 --> 01:04:28,000
德语可能也还行

1884
01:04:28,000 --> 01:04:29,000
对 anyway

1885
01:04:29,000 --> 01:04:32,000
但这不就回到了美国中心论词

1886
01:04:32,000 --> 01:04:32,000
对

1887
01:04:32,000 --> 01:04:36,000
而且这样其实同样的问题在 vim 上面也有

1888
01:04:36,000 --> 01:04:39,000
对也是

1889
01:04:39,000 --> 01:04:40,000
change

1890
01:04:40,000 --> 01:04:42,000
change 或者是 yank

1891
01:04:42,000 --> 01:04:44,000
为什么 y 代表剪切

1892
01:04:44,000 --> 01:04:46,000
y 为什么代表复制

1893
01:04:46,000 --> 01:04:48,000
因为 y stand for yank

1894
01:04:48,000 --> 01:04:49,000
可是你要不是

1895
01:04:49,000 --> 01:04:51,000
你不是因为母语者的话

1896
01:04:51,000 --> 01:04:52,000
yank 这个词道是什么意思

1897
01:04:52,000 --> 01:04:53,000
其实我很了解

1898
01:04:53,000 --> 01:04:54,000
很满惭明

1899
01:04:54,000 --> 01:04:55,000
其实就是说你是母语

1900
01:04:55,000 --> 01:04:56,000
你看见 yank

1901
01:04:56,000 --> 01:04:58,000
不是你没有理解 vim 的概念

1902
01:04:58,000 --> 01:05:01,000
你知道 yank 也是很费劫的一个概念

1903
01:05:01,000 --> 01:05:02,000
对

1904
01:05:02,000 --> 01:05:03,000
对回到 emise

1905
01:05:03,000 --> 01:05:06,000
就是 emise 里面有些快捷键的确是

1906
01:05:06,000 --> 01:05:07,000
至少你按下去之后

1907
01:05:07,000 --> 01:05:09,000
你就是比较容易记下来的

1908
01:05:09,000 --> 01:05:11,000
但是另外一些字不是

1909
01:05:11,000 --> 01:05:14,000
比如说向下翻译平是 controlv

1910
01:05:14,000 --> 01:05:15,000
那我可以把 v

1911
01:05:15,000 --> 01:05:16,000
我不知道 v 代表什么

1912
01:05:16,000 --> 01:05:18,000
v 代表

1913
01:05:18,000 --> 01:05:21,000
至少我是把它理解为下键头

1914
01:05:21,000 --> 01:05:22,000
就是 v

1915
01:05:22,000 --> 01:05:23,000
v 是向下翻译

1916
01:05:23,000 --> 01:05:25,000
也是因为 v 是一个向下的键头

1917
01:05:25,000 --> 01:05:28,000
这可能是有两号的代表

1918
01:05:28,000 --> 01:05:28,000
所以这里是什么

1919
01:05:28,000 --> 01:05:34,000
图形法加英文混合记忆

1920
01:05:34,000 --> 01:05:35,000
对不然你告诉我它是什么

1921
01:05:35,000 --> 01:05:37,000
v stand for what

1922
01:05:37,000 --> 01:05:38,000
v

1923
01:05:38,000 --> 01:05:39,000
对

1924
01:05:39,000 --> 01:05:41,000
然后 control 加 v 是下翻

1925
01:05:41,000 --> 01:05:43,000
那请你猜一猜

1926
01:05:43,000 --> 01:05:44,000
是不是上翻

1927
01:05:44,000 --> 01:05:45,000
各位听众

1928
01:05:45,000 --> 01:05:45,000
各位请问听众

1929
01:05:45,000 --> 01:05:48,000
请你猜一猜向上翻是什么

1930
01:05:48,000 --> 01:05:49,000
是 b 吗好像是

1931
01:05:50,000 --> 01:05:50,000
是不是

1932
01:05:50,000 --> 01:05:52,000
向上翻译平是 meta

1933
01:05:52,000 --> 01:05:53,000
就是 alt 加 v

1934
01:05:53,000 --> 01:05:54,000
哈哈哈

1935
01:05:54,000 --> 01:05:56,000
what the f***

1936
01:05:56,000 --> 01:05:56,000
所以

1937
01:05:58,000 --> 01:06:00,000
对这里是有一点

1938
01:06:01,000 --> 01:06:02,000
也可以他可以这么理解

1939
01:06:02,000 --> 01:06:04,000
就是 v 是一个翻译的

1940
01:06:04,000 --> 01:06:07,000
但是然后方向是由快捷键来控制的

1941
01:06:10,000 --> 01:06:10,000
好吧

1942
01:06:11,000 --> 01:06:14,000
起地给 emax 起地

1943
01:06:14,000 --> 01:06:15,000
应该 emax 起地有技巧了

1944
01:06:18,000 --> 01:06:18,000
OK

1945
01:06:18,000 --> 01:06:21,000
刚才讲了这么两个这么比较古老的编辑奖

1946
01:06:21,000 --> 01:06:22,000
我们来现在说一下

1947
01:06:22,000 --> 01:06:24,000
现在比较新新的

1948
01:06:24,000 --> 01:06:27,000
特别是在所谓的图形界面下

1949
01:06:27,000 --> 01:06:29,000
比较流行的一些编辑契

1950
01:06:30,000 --> 01:06:33,000
或者说试图弥补这种

1951
01:06:33,000 --> 01:06:35,000
因为 v 不管 vm 还是 emax

1952
01:06:35,000 --> 01:06:38,000
就其实都有点老太龙中的感觉

1953
01:06:38,000 --> 01:06:41,000
那么在他们之下编辑器

1954
01:06:41,000 --> 01:06:44,000
在他们之下编辑文档

1955
01:06:44,000 --> 01:06:46,000
你取决于你的视角

1956
01:06:46,000 --> 01:06:50,000
你可能觉得它非常的老掉牙

1957
01:06:50,000 --> 01:06:52,000
但也有可能会觉得非常的酷

1958
01:06:55,000 --> 01:06:57,000
我相信可能还是觉得

1959
01:06:57,000 --> 01:06:58,000
在命令行之下

1960
01:06:58,000 --> 01:07:01,000
修改文件比较老掉牙的人居多吧

1961
01:07:01,000 --> 01:07:02,000
我觉得

1962
01:07:03,000 --> 01:07:04,000
我觉得首先一点

1963
01:07:04,000 --> 01:07:06,000
就是他们至少从

1964
01:07:06,000 --> 01:07:09,000
观感上就是 vm 和 emax 来讲

1965
01:07:09,000 --> 01:07:11,000
他们在观感上都是一个不美的英雄

1966
01:07:12,000 --> 01:07:14,000
这倒是不足

1967
01:07:14,000 --> 01:07:17,000
这倒的确是个

1968
01:07:17,000 --> 01:07:18,000
对 起码我知道很多

1969
01:07:18,000 --> 01:07:22,000
从 mack 的铁杆用户

1970
01:07:22,000 --> 01:07:24,000
他都不是特别喜欢这两个

1971
01:07:24,000 --> 01:07:26,000
他们会喜欢一些

1972
01:07:26,000 --> 01:07:27,000
mack 原生的

1973
01:07:27,000 --> 01:07:31,000
然后就原生图形界面的这么一个编辑契

1974
01:07:31,000 --> 01:07:33,000
就被最早的什么

1975
01:07:33,000 --> 01:07:35,000
像什么 BBedit 这种东西

1976
01:07:36,000 --> 01:07:38,000
对 因为一方面也是

1977
01:07:38,000 --> 01:07:40,000
他们有图形界面

1978
01:07:40,000 --> 01:07:42,000
另外一方面也是他们没有那么多

1979
01:07:42,000 --> 01:07:44,000
奇奇怪怪的

1980
01:07:44,000 --> 01:07:45,000
比如说

1981
01:07:45,000 --> 01:07:46,000
其实刚才我们说到

1982
01:07:46,000 --> 01:07:48,000
ctrl 加 n 是向下

1983
01:07:48,000 --> 01:07:50,000
ctrl 加 p 是向前

1984
01:07:50,000 --> 01:07:51,000
向上

1985
01:07:51,000 --> 01:07:52,000
ctrl f

1986
01:07:52,000 --> 01:07:56,000
ctrl b 这些也是不那么符合直觉的

1987
01:07:56,000 --> 01:08:00,000
如果你习惯了在 word 里面

1988
01:08:00,000 --> 01:08:01,000
按方向键来改变

1989
01:08:01,000 --> 01:08:05,000
对 因为方向键是很符合直切的

1990
01:08:05,000 --> 01:08:06,000
对 方向键

1991
01:08:06,000 --> 01:08:08,000
画了箭头

1992
01:08:08,000 --> 01:08:08,000
你按下去

1993
01:08:08,000 --> 01:08:09,000
然后光标动了

1994
01:08:09,000 --> 01:08:11,000
这是几乎不言自明的一个

1995
01:08:11,000 --> 01:08:13,000
而且它箭头的

1996
01:08:13,000 --> 01:08:17,000
几个箭的方向和这个摆布都是

1997
01:08:17,000 --> 01:08:20,000
一眼就能看懂的

1998
01:08:20,000 --> 01:08:20,000
对

1999
01:08:20,000 --> 01:08:22,000
虽然在早期键盘上

2000
01:08:22,000 --> 01:08:25,000
四个箭头的排布也是有过一番变革

2001
01:08:25,000 --> 01:08:26,000
就不是

2002
01:08:26,000 --> 01:08:29,000
其实如果要追溯机枪键盘

2003
01:08:29,000 --> 01:08:30,000
没有

2004
01:08:30,000 --> 01:08:32,000
没有这个方向键

2005
01:08:32,000 --> 01:08:33,000
就早期的键盘

2006
01:08:33,000 --> 01:08:34,000
对

2007
01:08:34,000 --> 01:08:37,000
比如说中华学习机的方向键

2008
01:08:37,000 --> 01:08:43,000
中华学习机的方向键是一个巨大的正方形

2009
01:08:43,000 --> 01:08:45,000
然后沿对角线被切成了四块

2010
01:08:45,000 --> 01:08:47,000
What

2011
01:08:47,000 --> 01:08:48,000
Yes

2012
01:08:48,000 --> 01:08:50,000
就是一个巨大的正方形

2013
01:08:50,000 --> 01:08:50,000
所以你看

2014
01:08:50,000 --> 01:08:51,000
你有四个

2015
01:08:51,000 --> 01:08:52,000
对角线被切成了四块

2016
01:08:52,000 --> 01:08:54,000
你有四个三角

2017
01:08:54,000 --> 01:08:54,000
对

2018
01:08:54,000 --> 01:08:57,000
然后朝上的那个三角

2019
01:08:57,000 --> 01:08:58,000
上面画了一个

2020
01:08:58,000 --> 01:09:00,000
朝上的那个道三角

2021
01:09:00,000 --> 01:09:02,000
上面画了一个朝上的正三角

2022
01:09:03,000 --> 01:09:10,000
这个方向键其实就有点像什么 XBOX 的手柄那种感觉

2023
01:09:10,000 --> 01:09:11,000
明白了

2024
01:09:11,000 --> 01:09:12,000
对

2025
01:09:12,000 --> 01:09:14,000
甚至早期也有键盘是比如说

2026
01:09:14,000 --> 01:09:16,000
只有左右方向

2027
01:09:16,000 --> 01:09:17,000
只有左右键头

2028
01:09:17,000 --> 01:09:17,000
没有上下键头

2029
01:09:17,000 --> 01:09:19,000
那怎么上下的

2030
01:09:19,000 --> 01:09:21,000
就没有上下功能

2031
01:09:21,000 --> 01:09:22,000
对

2032
01:09:22,000 --> 01:09:25,000
我们知道 Vim 的就是 Vim 作者

2033
01:09:25,000 --> 01:09:27,000
对 Vi 作者

2034
01:09:27,000 --> 01:09:28,000
对 Vim 作者

2035
01:09:28,000 --> 01:09:29,000
Vi 的作者

2036
01:09:29,000 --> 01:09:34,000
Vi 作者那一台键盘是没有方向键的

2037
01:09:34,000 --> 01:09:38,000
然后他在 HJKL 上面的四个字母上面是有四个方向键

2038
01:09:38,000 --> 01:09:40,000
分别是那四个方向

2039
01:09:40,000 --> 01:09:44,000
对

2040
01:09:44,000 --> 01:09:45,000
Billy Joy 用的电脑

2041
01:09:45,000 --> 01:09:48,000
其实在如果你在网上搜一下 Vi keyboard

2042
01:09:48,000 --> 01:09:50,000
然后搜 Billy Joy

2043
01:09:50,000 --> 01:09:50,000
Billy Joy

2044
01:09:50,000 --> 01:09:51,000
sorry

2045
01:09:51,000 --> 01:09:55,000
Billy Joy 就可以找到他最开始用的那台电脑的键盘

2046
01:09:55,000 --> 01:09:59,000
你会觉得在这个电脑上

2047
01:09:59,000 --> 01:10:00,000
在这个键盘上开发出 Vi

2048
01:10:00,000 --> 01:10:03,000
其实是非常合理的事情

2049
01:10:03,000 --> 01:10:07,000
所以唯一你觉得 Vi 的键就排布不合理

2050
01:10:07,000 --> 01:10:09,000
那是因为你的键盘不对

2051
01:10:09,000 --> 01:10:09,000
对

2052
01:10:09,000 --> 01:10:10,000
没错

2053
01:10:10,000 --> 01:10:13,000
这是为什么要买一台买一只 HipHopGain Keyboard

2054
01:10:13,000 --> 01:10:14,000
可以忘掉键

2055
01:10:14,000 --> 01:10:16,000
那个什么键上的硬的东西

2056
01:10:16,000 --> 01:10:18,000
然后自己改完

2057
01:10:18,000 --> 01:10:18,000
对

2058
01:10:18,000 --> 01:10:22,000
在推特上有一个听众也反馈说

2059
01:10:22,000 --> 01:10:23,000
听了我们的节目之后

2060
01:10:23,000 --> 01:10:27,000
终于买了这个心理长草很久的 HipHopGain Keyboard

2061
01:10:27,000 --> 01:10:29,000
然后用的很爽

2062
01:10:29,000 --> 01:10:31,000
但是被室友投诉说太长了

2063
01:10:31,000 --> 01:10:34,000
是个副作用

2064
01:10:34,000 --> 01:10:37,000
我们一概不承担后果

2065
01:10:37,000 --> 01:10:37,000
没错

2066
01:10:37,000 --> 01:10:38,000
没错

2067
01:10:38,000 --> 01:10:39,000
又车远了

2068
01:10:39,000 --> 01:10:41,000
讲回那个基于图形界面的编辑器

2069
01:10:41,000 --> 01:10:44,000
最近比较火的几个是

2070
01:10:44,000 --> 01:10:45,000
Sublime

2071
01:10:45,000 --> 01:10:46,000
Sublime 是一个比较火的

2072
01:10:46,000 --> 01:10:48,000
然后它是一个

2073
01:10:48,000 --> 01:10:49,000
它其实是一个跨平台的编辑器

2074
01:10:49,000 --> 01:10:53,000
然后我没有用过它在其他系统上的怎么样

2075
01:10:53,000 --> 01:10:54,000
但我在 Mac 上

2076
01:10:54,000 --> 01:10:57,000
我还真没感觉到它是一个跨平台的

2077
01:10:57,000 --> 01:10:59,000
它做的原生还挺好的

2078
01:10:59,000 --> 01:11:00,000
对

2079
01:11:00,000 --> 01:11:06,000
其实它的跨平台是不像 Eclipse 或者是其他什么东西

2080
01:11:06,000 --> 01:11:06,000
它的快捷键

2081
01:11:06,000 --> 01:11:08,000
就是在 Eclipse 里面

2082
01:11:08,000 --> 01:11:10,000
快捷键在各个平台之下基本上是一致的

2083
01:11:10,000 --> 01:11:12,000
在 Sublime 里面

2084
01:11:12,000 --> 01:11:14,000
在 Sublime 里面

2085
01:11:14,000 --> 01:11:17,000
很多快捷键在不同的平台之下是不一样的

2086
01:11:17,000 --> 01:11:18,000
Windows 和 Linux 比较像

2087
01:11:18,000 --> 01:11:20,000
但是 Mac 下面

2088
01:11:20,000 --> 01:11:21,000
有那个 Monday

2089
01:11:21,000 --> 01:11:23,000
对

2090
01:11:23,000 --> 01:11:26,000
就是快捷键其实差满多

2091
01:11:26,000 --> 01:11:28,000
我最开始用 Sublime 是在 Windows 下面

2092
01:11:28,000 --> 01:11:30,000
而且我觉得它的那个

2093
01:11:30,000 --> 01:11:31,000
就是它的那个

2094
01:11:31,000 --> 01:11:33,000
突进界面的表达的元素

2095
01:11:33,000 --> 01:11:35,000
我觉得很就是还挺原生的

2096
01:11:35,000 --> 01:11:36,000
但是虽然说

2097
01:11:36,000 --> 01:11:40,000
它的风格和 Mac 本身是不一样

2098
01:11:40,000 --> 01:11:43,000
但是我觉得就没有太为何感

2099
01:11:43,000 --> 01:11:45,000
这一点跟后面要讲到的

2100
01:11:45,000 --> 01:11:48,000
Eclipse 内置流是差很大的

2101
01:11:48,000 --> 01:11:49,000
对 没错

2102
01:11:49,000 --> 01:11:55,000
而且 Sublime 如果各位还在苦于找不到一款

2103
01:11:55,000 --> 01:11:57,000
或者说各位刚学变成

2104
01:11:57,000 --> 01:12:00,000
现在还正要寻找一款适合

2105
01:12:00,000 --> 01:12:02,000
出学者的编辑器的话

2106
01:12:02,000 --> 01:12:04,000
我觉得 Sublime Text 其实是非常好

2107
01:12:04,000 --> 01:12:05,000
对

2108
01:12:05,000 --> 01:12:06,000
虽然它要钱

2109
01:12:06,000 --> 01:12:07,000
对 它不是一个免费的

2110
01:12:07,000 --> 01:12:08,000
它是

2111
01:12:08,000 --> 01:12:10,000
对 但你不交钱的话

2112
01:12:10,000 --> 01:12:12,000
它也只是时不时的跳出来一个

2113
01:12:12,000 --> 01:12:14,000
对它抗说请你买吧

2114
01:12:14,000 --> 01:12:16,000
然后你看一下 ES 4 就消失了

2115
01:12:16,000 --> 01:12:17,000
对 功能上没有这颗 EM

2116
01:12:17,000 --> 01:12:19,000
歌时间上也没有限制

2117
01:12:19,000 --> 01:12:21,000
唯一就是让你会有点小不爽

2118
01:12:21,000 --> 01:12:24,000
对 是一个非常非常友善的编辑

2119
01:12:24,000 --> 01:12:25,000
它还有什么新版本了

2120
01:12:25,000 --> 01:12:27,000
对吧 现在是有三了

2121
01:12:27,000 --> 01:12:29,000
对 Sublime Text 现在处于二

2122
01:12:29,000 --> 01:12:32,000
就像 Python 一样处于二和三的割裂状态

2123
01:12:32,000 --> 01:12:33,000
它怎么一回事

2124
01:12:33,000 --> 01:12:35,000
就是说新版本还没有就不够好吗

2125
01:12:35,000 --> 01:12:41,000
还是 Sublime Text R 算是第一次发明的轮子

2126
01:12:41,000 --> 01:12:44,000
然后作者觉得还是不够好

2127
01:12:44,000 --> 01:12:46,000
所以要重新出道再写一遍

2128
01:12:46,000 --> 01:12:49,000
那 Sublime E 是长什么样子

2129
01:12:49,000 --> 01:12:50,000
这我还真不知道

2130
01:12:50,000 --> 01:12:51,000
我也是从二开始

2131
01:12:51,000 --> 01:12:52,000
对 我没有见过 E 长什么

2132
01:12:52,000 --> 01:12:54,000
估计不是太好应该

2133
01:12:55,000 --> 01:12:58,000
另外一个比较老牌的编辑器

2134
01:12:58,000 --> 01:12:59,000
可能很多用户

2135
01:12:59,000 --> 01:13:00,000
对 Mac 用户可能都用过

2136
01:13:00,000 --> 01:13:01,000
叫做 Taxmate

2137
01:13:02,000 --> 01:13:03,000
对 我用过

2138
01:13:03,000 --> 01:13:06,000
但时间不是很长

2139
01:13:06,000 --> 01:13:07,000
对 它最早的时候

2140
01:13:07,000 --> 01:13:09,000
就 Taxmate E 的时候

2141
01:13:09,000 --> 01:13:10,000
它也是一个付费软件

2142
01:13:10,000 --> 01:13:11,000
而且价格还不便宜

2143
01:13:11,000 --> 01:13:12,000
我记得

2144
01:13:13,000 --> 01:13:16,000
不是 80 多刀还是多少钱

2145
01:13:16,000 --> 01:13:18,000
就是我这反正至少是多

2146
01:13:18,000 --> 01:13:19,000
好像 60 欧左右吧

2147
01:13:19,000 --> 01:13:20,000
应该是

2148
01:13:20,000 --> 01:13:20,000
嗯哼

2149
01:13:20,000 --> 01:13:21,000
对

2150
01:13:21,000 --> 01:13:21,000
你买了吗

2151
01:13:21,000 --> 01:13:22,000
没有

2152
01:13:22,000 --> 01:13:23,000
我也没有

2153
01:13:23,000 --> 01:13:26,000
然后后来那个作者

2154
01:13:26,000 --> 01:13:27,000
好像也是因为卖这个编辑器转的

2155
01:13:27,000 --> 01:13:29,000
听说是转发了

2156
01:13:29,000 --> 01:13:31,000
然后也就没有什么动力再写 200

2157
01:13:31,000 --> 01:13:32,000
后来他就干脆把 2 版

2158
01:13:32,000 --> 01:13:34,000
做了一半的 2 版的这个弹码

2159
01:13:34,000 --> 01:13:36,000
就是开源了

2160
01:13:36,000 --> 01:13:37,000
然后但现在是一个社区

2161
01:13:37,000 --> 01:13:39,000
维护的一个编辑器

2162
01:13:39,000 --> 01:13:42,000
现在是出了二的 beta

2163
01:13:42,000 --> 01:13:43,000
六还是七了吧

2164
01:13:43,000 --> 01:13:44,000
应该是

2165
01:13:44,000 --> 01:13:45,000
就快要正式发布了

2166
01:13:45,000 --> 01:13:47,000
然后现在是一个变成一个免费

2167
01:13:47,000 --> 01:13:49,000
并且开源的一个编辑器

2168
01:13:49,000 --> 01:13:51,000
所以如果你是 mac 用户

2169
01:13:51,000 --> 01:13:52,000
然后你也想试一下

2170
01:13:52,000 --> 01:13:55,000
这个经典传统的这个编辑器的话

2171
01:13:55,000 --> 01:13:56,000
你可以试试这个

2172
01:13:56,000 --> 01:13:58,000
因为有很多所谓的

2173
01:13:58,000 --> 01:14:00,000
资深 mac 开发者

2174
01:14:00,000 --> 01:14:02,000
也是对这个什么

2175
01:14:02,000 --> 01:14:05,000
txtmade 的就死忠嘛

2176
01:14:05,000 --> 01:14:06,000
对

2177
01:14:06,000 --> 01:14:09,000
甚至你去找一些比较早的

2178
01:14:09,000 --> 01:14:12,000
早期的 rails 的那个 screencast

2179
01:14:12,000 --> 01:14:12,000
哦对对

2180
01:14:12,000 --> 01:14:14,000
里面几乎每一个 rails 的开发者

2181
01:14:14,000 --> 01:14:15,000
都在用 txtmade

2182
01:14:15,000 --> 01:14:17,000
好像 txtmade 活起来

2183
01:14:17,000 --> 01:14:20,000
也就是因为那个 dhh

2184
01:14:20,000 --> 01:14:20,000
对吧

2185
01:14:20,000 --> 01:14:22,000
devi

2186
01:14:22,000 --> 01:14:23,000
hampson

2187
01:14:23,000 --> 01:14:24,000
哎对对对对对

2188
01:14:24,000 --> 01:14:25,000
我只记得在

2189
01:14:25,000 --> 01:14:26,000
我只记得在

2190
01:14:26,000 --> 01:14:27,000
对对对

2191
01:14:27,000 --> 01:14:29,000
rails 的作者

2192
01:14:29,000 --> 01:14:31,000
因为他一直用 txtmade

2193
01:14:31,000 --> 01:14:32,000
然后导致了

2194
01:14:32,000 --> 01:14:33,000
他做了

2195
01:14:33,000 --> 01:14:35,000
他做了很多这个叫什么

2196
01:14:35,000 --> 01:14:36,000
那个

2197
01:14:36,000 --> 01:14:39,000
就是 rails 的 screencast

2198
01:14:39,000 --> 01:14:40,000
就是视频的节目

2199
01:14:40,000 --> 01:14:41,000
然后里面都

2200
01:14:41,000 --> 01:14:43,000
都当时出来的时候大家

2201
01:14:43,000 --> 01:14:44,000
对我其实也是

2202
01:14:44,000 --> 01:14:45,000
因为那个被惊艳到了

2203
01:14:45,000 --> 01:14:46,000
就当时他用了一个

2204
01:14:47,000 --> 01:14:48,000
配色吧

2205
01:14:48,000 --> 01:14:49,000
所以是 txtmade 自带的一个配色

2206
01:14:49,000 --> 01:14:50,000
好像是这样

2207
01:14:50,000 --> 01:14:52,000
然后显示那个 ruby 的代码

2208
01:14:52,000 --> 01:14:54,000
你知道 ruby 的代码

2209
01:14:54,000 --> 01:14:55,000
的本来也比较好看

2210
01:14:55,000 --> 01:14:57,000
然后再加上那个漂亮的

2211
01:14:57,000 --> 01:14:58,000
与法高量

2212
01:14:58,000 --> 01:15:00,000
再加上一个长得很漂亮的编辑器

2213
01:15:00,000 --> 01:15:00,000
大家都觉得

2214
01:15:00,000 --> 01:15:01,000
哇这个好漂亮

2215
01:15:01,000 --> 01:15:03,000
什么赶快去买

2216
01:15:03,000 --> 01:15:04,000
然后也就是 txtmade

2217
01:15:04,000 --> 01:15:05,000
就是好像应该在我印象中

2218
01:15:05,000 --> 01:15:07,000
也是从那里活起来的

2219
01:15:07,000 --> 01:15:08,000
没错

2220
01:15:08,000 --> 01:15:09,000
对 ruby 就是这样吸引

2221
01:15:09,000 --> 01:15:10,000
离大群外面有协会的

2222
01:15:10,000 --> 01:15:13,000
这个成选

2223
01:15:13,000 --> 01:15:14,000
完了完了

2224
01:15:14,000 --> 01:15:15,000
我也是外面协会的

2225
01:15:15,000 --> 01:15:16,000
好惨

2226
01:15:17,000 --> 01:15:18,000
我觉得其实多少

2227
01:15:18,000 --> 01:15:19,000
有点适留一点这样

2228
01:15:19,000 --> 01:15:20,000
对

2229
01:15:20,000 --> 01:15:22,000
所以这个故事说明一个什么道理

2230
01:15:22,000 --> 01:15:24,000
就是哪怕你是做一个

2231
01:15:24,000 --> 01:15:26,000
甚至不是一个科技产品

2232
01:15:26,000 --> 01:15:28,000
你是一个纯粹的工具

2233
01:15:28,000 --> 01:15:32,000
你也是要考虑它的所谓的 design

2234
01:15:32,000 --> 01:15:33,000
这个就外观怎么样

2235
01:15:33,000 --> 01:15:34,000
如果你外观不好看

2236
01:15:34,000 --> 01:15:35,000
你做得再好

2237
01:15:35,000 --> 01:15:36,000
可能在推广

2238
01:15:36,000 --> 01:15:37,000
或者是 marketing 的时候

2239
01:15:37,000 --> 01:15:38,000
都没有

2240
01:15:38,000 --> 01:15:39,000
会不会有很难度主力

2241
01:15:39,000 --> 01:15:40,000
我觉得

2242
01:15:40,000 --> 01:15:41,000
对

2243
01:15:41,000 --> 01:15:42,000
我觉得

2244
01:15:42,000 --> 01:15:43,000
对说到这件事情

2245
01:15:43,000 --> 01:15:44,000
我就想起来之所以

2246
01:15:44,000 --> 01:15:46,000
我很讨厌 C++

2247
01:15:48,000 --> 01:15:51,000
甚至是一种非理性的讨厌 C++

2248
01:15:51,000 --> 01:15:54,000
部分原因也是因为在

2249
01:15:54,000 --> 01:15:56,000
刚刚接触 VisualBasic

2250
01:15:56,000 --> 01:15:59,000
就是微软 VisualBasicC++的时候

2251
01:15:59,000 --> 01:16:01,000
visualBasicC++

2252
01:16:01,000 --> 01:16:03,000
VisualStudioC++

2253
01:16:03,000 --> 01:16:03,000
visual

2254
01:16:03,000 --> 01:16:04,000
就叫 VisualC++吧

2255
01:16:04,000 --> 01:16:05,000
应该那个时候

2256
01:16:05,000 --> 01:16:07,000
VisualC++

2257
01:16:07,000 --> 01:16:07,000
对

2258
01:16:07,000 --> 01:16:09,000
VisualC++ 6.0 的时候

2259
01:16:09,000 --> 01:16:14,000
它的那个用的内置字体是 fixedSYS

2260
01:16:14,000 --> 01:16:15,000
fixedSYS

2261
01:16:15,000 --> 01:16:16,000
我觉得

2262
01:16:16,000 --> 01:16:18,000
我靠怎么一个写成讯的界面

2263
01:16:18,000 --> 01:16:19,000
可以用这么丑字体

2264
01:16:19,000 --> 01:16:22,000
你觉得那个 fixedS 很丑吗

2265
01:16:22,000 --> 01:16:24,000
我当时觉得相当丑

2266
01:16:24,000 --> 01:16:24,000
对

2267
01:16:24,000 --> 01:16:27,000
这里要自爆一下黑历史

2268
01:16:27,000 --> 01:16:28,000
当时我还觉得

2269
01:16:28,000 --> 01:16:30,000
我觉得那个还就是

2270
01:16:30,000 --> 01:16:31,000
因为当时在 Windows 上面

2271
01:16:31,000 --> 01:16:33,000
可选的等宽字体有限

2272
01:16:33,000 --> 01:16:34,000
也不像现在说

2273
01:16:34,000 --> 01:16:35,000
大家都很

2274
01:16:35,000 --> 01:16:36,000
都可以选

2275
01:16:36,000 --> 01:16:38,000
首先 Windows 本来字体渲染就比较糟糕

2276
01:16:38,000 --> 01:16:39,000
而且就是

2277
01:16:39,000 --> 01:16:40,000
那个时候还肯定是

2278
01:16:40,000 --> 01:16:41,000
FadeRigant 的屏幕

2279
01:16:41,000 --> 01:16:43,000
可能 640 x 480 的分辨率

2280
01:16:43,000 --> 01:16:46,000
就基本上都是那种所谓像素字体

2281
01:16:46,000 --> 01:16:48,000
然后在当时问到上面

2282
01:16:48,000 --> 01:16:50,000
仅有的那些字体里面

2283
01:16:50,000 --> 01:16:55,000
我觉得 fixedSYS 算是一个还能看不错的了吧

2284
01:16:55,000 --> 01:16:57,000
不然你还要有什么选 Coreer 吗

2285
01:16:57,000 --> 01:16:57,000
Coreer

2286
01:16:57,000 --> 01:16:59,000
那不就更丑了

2287
01:16:59,000 --> 01:17:00,000
我去 Coreer 很漂亮

2288
01:17:00,000 --> 01:17:01,000
那个时候

2289
01:17:01,000 --> 01:17:05,000
Coreer 的那个 0 和 O 都是分不清楚的

2290
01:17:05,000 --> 01:17:06,000
我是用

2291
01:17:06,000 --> 01:17:10,000
我曾经用过 GeorgeIan 很错别成字体

2292
01:17:10,000 --> 01:17:10,000
What

2293
01:17:10,000 --> 01:17:12,000
为了好看对

2294
01:17:12,000 --> 01:17:15,000
为了好看选择 GeorgeIan 做变成字体

2295
01:17:15,000 --> 01:17:15,000
OK

2296
01:17:15,000 --> 01:17:15,000
哇

2297
01:17:15,000 --> 01:17:17,000
你还是很早以前就见识过

2298
01:17:17,000 --> 01:17:18,000
非懂宽字体了

2299
01:17:18,000 --> 01:17:19,000
这个还是挺线疯的

2300
01:17:22,000 --> 01:17:23,000
您少轻狂了

2301
01:17:23,000 --> 01:17:24,000
求远了

2302
01:17:24,000 --> 01:17:24,000
求远了

2303
01:17:24,000 --> 01:17:25,000
对

2304
01:17:25,000 --> 01:17:26,000
我也年轻过

2305
01:17:26,000 --> 01:17:27,000
对

2306
01:17:27,000 --> 01:17:28,000
对

2307
01:17:28,000 --> 01:17:29,000
所以

2308
01:17:29,000 --> 01:17:30,000
他刚刚讲哪里

2309
01:17:30,000 --> 01:17:31,000
FixedSYS

2310
01:17:31,000 --> 01:17:32,000
继续说吧

2311
01:17:32,000 --> 01:17:32,000
反正

2312
01:17:32,000 --> 01:17:33,000
求远

2313
01:17:33,000 --> 01:17:35,000
FixedSYS 一个优点是

2314
01:17:35,000 --> 01:17:39,000
它和送题一起显示的时候

2315
01:17:39,000 --> 01:17:40,000
有个 2 比 1 的关系

2316
01:17:40,000 --> 01:17:40,000
对

2317
01:17:40,000 --> 01:17:42,000
正好是 2 比 1 的关系

2318
01:17:42,000 --> 01:17:43,000
然后我看这个编辑系列

2319
01:17:43,000 --> 01:17:45,000
我考英文是 FixedSYS

2320
01:17:45,000 --> 01:17:46,000
然后中文动不动出来什么

2321
01:17:46,000 --> 01:17:48,000
烫烫烫烫

2322
01:17:48,000 --> 01:17:49,000
嗯

2323
01:17:49,000 --> 01:17:52,000
我讲起我为什么喜欢 FixedSYS

2324
01:17:52,000 --> 01:17:54,000
这个字体了

2325
01:17:54,000 --> 01:17:57,000
当时因为一些莫名其妙的原因

2326
01:17:57,000 --> 01:18:01,000
我在一个专注于做

2327
01:18:01,000 --> 01:18:02,000
嵌肉式系统的论坛上

2328
01:18:02,000 --> 01:18:03,000
应该叫 C 51 吧

2329
01:18:03,000 --> 01:18:03,000
我记得

2330
01:18:03,000 --> 01:18:04,000
这个 C 51 论坛

2331
01:18:04,000 --> 01:18:05,000
啊

2332
01:18:05,000 --> 01:18:06,000
51 芯片

2333
01:18:06,000 --> 01:18:06,000
对

2334
01:18:06,000 --> 01:18:06,000
对

2335
01:18:06,000 --> 01:18:07,000
51 代片级

2336
01:18:07,000 --> 01:18:08,000
你年轻过

2337
01:18:08,000 --> 01:18:09,000
当时我在那里看

2338
01:18:09,000 --> 01:18:10,000
我没上过这个

2339
01:18:10,000 --> 01:18:13,000
但是你说 51 又是芯片的

2340
01:18:13,000 --> 01:18:14,000
只能是 51 的

2341
01:18:14,000 --> 01:18:14,000
对

2342
01:18:14,000 --> 01:18:15,000
应该是在 9

2343
01:18:15,000 --> 01:18:16,000
我想想

2344
01:18:16,000 --> 01:18:19,000
应该是 98 或是 99 年的时候

2345
01:18:19,000 --> 01:18:21,000
然后当时我去那个 Civics 面上

2346
01:18:21,000 --> 01:18:23,000
看到有一个人贴了一个

2347
01:18:23,000 --> 01:18:25,000
现在我们回过头去看

2348
01:18:25,000 --> 01:18:27,000
应该是叫一个 Screencast 的一个东西

2349
01:18:27,000 --> 01:18:29,000
但现在 Screencast 就是一个录制屏幕

2350
01:18:29,000 --> 01:18:31,000
用一个视频的方式来做

2351
01:18:31,000 --> 01:18:32,000
它也是 Screencast

2352
01:18:32,000 --> 01:18:34,000
不过它那个时间方式非常奇怪

2353
01:18:34,000 --> 01:18:35,000
它也是录制屏幕

2354
01:18:35,000 --> 01:18:37,000
像一个人在讲

2355
01:18:37,000 --> 01:18:37,000
啊

2356
01:18:37,000 --> 01:18:39,000
然后那个

2357
01:18:39,000 --> 01:18:41,000
它那个软件不是我们现在一个视频

2358
01:18:41,000 --> 01:18:42,000
它是一个特殊的

2359
01:18:42,000 --> 01:18:45,000
一个是感觉就是一针一针放屏幕的

2360
01:18:45,000 --> 01:18:46,000
截图这种感觉

2361
01:18:46,000 --> 01:18:48,000
而且压缩的还蛮好的

2362
01:18:49,000 --> 01:18:49,000
啊

2363
01:18:49,000 --> 01:18:49,000
anyway

2364
01:18:49,000 --> 01:18:52,000
然后就是有一个人在展示

2365
01:18:52,000 --> 01:18:54,000
他怎么用一个什么

2366
01:18:54,000 --> 01:18:55,000
我忘了一个是波篮

2367
01:18:55,000 --> 01:18:56,000
还是什么一个开发器

2368
01:18:56,000 --> 01:18:57,000
编写

2369
01:18:57,000 --> 01:18:58,000
开发这个

2370
01:18:58,000 --> 01:19:00,000
用 C 语言写

2371
01:19:00,000 --> 01:19:01,000
这个签论师代码

2372
01:19:01,000 --> 01:19:03,000
然后他当时用的那个字体的

2373
01:19:03,000 --> 01:19:05,000
编写字体就是 FixSystem

2374
01:19:05,000 --> 01:19:06,000
ColdWire

2375
01:19:06,000 --> 01:19:07,000
我会

2376
01:19:07,000 --> 01:19:08,000
应该不是

2377
01:19:08,000 --> 01:19:09,000
应该没有那么

2378
01:19:09,000 --> 01:19:10,000
那个时候后来才有

2379
01:19:10,000 --> 01:19:11,000
应该很老的一个编辑

2380
01:19:11,000 --> 01:19:12,000
我以前一家想过

2381
01:19:12,000 --> 01:19:13,000
就在 anyway

2382
01:19:13,000 --> 01:19:14,000
这个不是重点

2383
01:19:14,000 --> 01:19:16,000
重点是那个人的声音超好听

2384
01:19:17,000 --> 01:19:19,000
然后因为那个时候我完全不懂编程

2385
01:19:19,000 --> 01:19:20,000
我那个时候还在

2386
01:19:20,000 --> 01:19:24,000
就是就就因为还没有上编程课

2387
01:19:24,000 --> 01:19:24,000
也不知道什么

2388
01:19:24,000 --> 01:19:27,000
就是只是看到好奇有这么一个东西

2389
01:19:27,000 --> 01:19:28,000
就觉得挺有意思的

2390
01:19:28,000 --> 01:19:28,000
就是我对

2391
01:19:28,000 --> 01:19:29,000
而且我对签论

2392
01:19:29,000 --> 01:19:29,000
我到现在为止

2393
01:19:29,000 --> 01:19:31,000
对签论师开发多一点

2394
01:19:31,000 --> 01:19:33,000
就门路都没有摸着的

2395
01:19:33,000 --> 01:19:34,000
但是就是因为看个编辑

2396
01:19:34,000 --> 01:19:35,000
那个人的声音好

2397
01:19:35,000 --> 01:19:37,000
我把那个视频反方向看了 50 遍

2398
01:19:38,000 --> 01:19:39,000
Oh my god

2399
01:19:39,000 --> 01:19:40,000
你不解释外面我学会

2400
01:19:40,000 --> 01:19:41,000
你还是声音学会

2401
01:19:41,000 --> 01:19:42,000
声控

2402
01:19:42,000 --> 01:19:43,000
不好意思

2403
01:19:43,000 --> 01:19:45,000
而且而且他那个

2404
01:19:45,000 --> 01:19:47,000
我怀疑那个人用的是一款机械键盘

2405
01:19:48,000 --> 01:19:50,000
就是他他在或者说

2406
01:19:50,000 --> 01:19:51,000
他不是选择用机械盘

2407
01:19:51,000 --> 01:19:53,000
而是那个时代只有机械盘

2408
01:19:53,000 --> 01:19:53,000
有可能

2409
01:19:53,000 --> 01:19:55,000
就是他在解说的过程

2410
01:19:55,000 --> 01:19:57,000
他会边解说边敲那个

2411
01:19:57,000 --> 01:19:58,000
那个在那边写代码

2412
01:19:58,000 --> 01:19:59,000
然后那个声音

2413
01:19:59,000 --> 01:20:00,000
咔咔坐下

2414
01:20:00,000 --> 01:20:01,000
又很清脆

2415
01:20:01,000 --> 01:20:02,000
又超好听

2416
01:20:02,000 --> 01:20:04,000
然后那个人的声线又很好

2417
01:20:04,000 --> 01:20:04,000
就是

2418
01:20:05,000 --> 01:20:06,000
其实后来我想的

2419
01:20:06,000 --> 01:20:07,000
其实也不一定是那个人声音

2420
01:20:07,000 --> 01:20:10,000
就是刚好可能他他那个某一个频段

2421
01:20:10,000 --> 01:20:11,000
刚好对我来说比较有吸引力

2422
01:20:11,000 --> 01:20:13,000
就听着好爽

2423
01:20:13,000 --> 01:20:14,000
声语的吗

2424
01:20:14,000 --> 01:20:17,000
男男的一个一个比较一个

2425
01:20:17,000 --> 01:20:19,000
浑厚的男生的声音

2426
01:20:19,000 --> 01:20:20,000
ok

2427
01:20:20,000 --> 01:20:20,000
我就哇

2428
01:20:20,000 --> 01:20:21,000
这个声音太好听了

2429
01:20:21,000 --> 01:20:24,000
反复听了 50 遍

2430
01:20:24,000 --> 01:20:25,000
我现在找不到那个文件了

2431
01:20:25,000 --> 01:20:26,000
我能找出来

2432
01:20:26,000 --> 01:20:28,000
都可以把它录下来给你们听一下

2433
01:20:28,000 --> 01:20:30,000
但是非常抱歉

2434
01:20:30,000 --> 01:20:31,000
气筒天一过

2435
01:20:31,000 --> 01:20:31,000
很多年了

2436
01:20:31,000 --> 01:20:32,000
已经找不到那个

2437
01:20:32,000 --> 01:20:35,000
不知道不知道有没有是五要电片机的

2438
01:20:35,000 --> 01:20:37,000
自身用后听了

2439
01:20:37,000 --> 01:20:39,000
我们的节目之后可以找到这篇视频

2440
01:20:39,000 --> 01:20:40,000
我你觉得他找到

2441
01:20:40,000 --> 01:20:41,000
我也不一定能放得了

2442
01:20:41,000 --> 01:20:42,000
他那个是一个

2443
01:20:42,000 --> 01:20:45,000
应该是一个可以执行的一个东西

2444
01:20:45,000 --> 01:20:46,000
就是他自己

2445
01:20:46,000 --> 01:20:47,000
what

2446
01:20:47,000 --> 01:20:50,000
你小小年纪对于信息安全

2447
01:20:50,000 --> 01:20:50,000
这么没有

2448
01:20:50,000 --> 01:20:51,000
不是

2449
01:20:51,000 --> 01:20:53,000
这个也就是他

2450
01:20:53,000 --> 01:20:55,000
那个时候问到上很多这种东西

2451
01:20:55,000 --> 01:20:58,000
因为没有通用的播放器

2452
01:20:58,000 --> 01:21:00,000
很多那种特殊的媒体格

2453
01:21:00,000 --> 01:21:03,000
是都是自带一个播放器来了

2454
01:21:03,000 --> 01:21:05,000
打包成一个 exe 文件来的

2455
01:21:05,000 --> 01:21:07,000
但是那个时候也不懂安全是吧

2456
01:21:07,000 --> 01:21:09,000
重病毒是常有的

2457
01:21:09,000 --> 01:21:10,000
现在想要那个时候真的是很傻很天真

2458
01:21:10,000 --> 01:21:12,000
病毒基本上为所欲为

2459
01:21:12,000 --> 01:21:13,000
现在也是

2460
01:21:13,000 --> 01:21:15,000
温哥是上面

2461
01:21:15,000 --> 01:21:16,000
好像还好

2462
01:21:16,000 --> 01:21:17,000
好一些

2463
01:21:17,000 --> 01:21:17,000
安全上来

2464
01:21:17,000 --> 01:21:18,000
大家还是挺注重

2465
01:21:18,000 --> 01:21:20,000
但是相信我那个时候应该是

2466
01:21:20,000 --> 01:21:21,000
温哥是 95

2467
01:21:21,000 --> 01:21:22,000
我们记错的话

2468
01:21:22,000 --> 01:21:24,000
肯定是没有这个概念的

2469
01:21:24,000 --> 01:21:25,000
对

2470
01:21:25,000 --> 01:21:27,000
对

2471
01:21:27,000 --> 01:21:28,000
讲哪里

2472
01:21:28,000 --> 01:21:29,000
讲到

2473
01:21:29,000 --> 01:21:30,000
textmate

2474
01:21:30,000 --> 01:21:31,000
对

2475
01:21:31,000 --> 01:21:31,000
fixed this

2476
01:21:31,000 --> 01:21:32,000
对

2477
01:21:32,000 --> 01:21:34,000
还有一个是

2478
01:21:34,000 --> 01:21:35,000
这是你写的

2479
01:21:35,000 --> 01:21:36,000
chocolate

2480
01:21:36,000 --> 01:21:37,000
这个我其实用的很少

2481
01:21:37,000 --> 01:21:39,000
但我又听说过

2482
01:21:39,000 --> 01:21:39,000
对

2483
01:21:39,000 --> 01:21:40,000
他

2484
01:21:40,000 --> 01:21:41,000
我不知道

2485
01:21:41,000 --> 01:21:43,000
我不确定他应该念什么

2486
01:21:43,000 --> 01:21:44,000
因为他没有那个

2487
01:21:44,000 --> 01:21:45,000
他的拼法是

2488
01:21:45,000 --> 01:21:47,000
CHOCOLAT

2489
01:21:47,000 --> 01:21:48,000
就是法语的拼法

2490
01:21:48,000 --> 01:21:49,000
chocolate

2491
01:21:49,000 --> 01:21:50,000
chocolate

2492
01:21:50,000 --> 01:21:53,000
而不是英语的 chocolate

2493
01:21:53,000 --> 01:21:54,000
我所有怀疑他是不是念

2494
01:21:54,000 --> 01:21:55,000
chocolate

2495
01:21:55,000 --> 01:21:57,000
我们先姑且这样念吧

2496
01:21:57,000 --> 01:21:57,000
对

2497
01:21:57,000 --> 01:21:59,000
就是巧克力边界气的

2498
01:21:59,000 --> 01:22:04,000
巧克力边界气是一个号称要做的

2499
01:22:04,000 --> 01:22:07,000
default native os 10 editor 的一个变化器

2500
01:22:07,000 --> 01:22:07,000
好像没做成

2501
01:22:07,000 --> 01:22:09,000
而且他也是要钱的

2502
01:22:09,000 --> 01:22:11,000
而且他只有 15 天的使用期

2503
01:22:11,000 --> 01:22:12,000
对

2504
01:22:13,000 --> 01:22:17,000
但是基本上很多用户都会觉得

2505
01:22:17,000 --> 01:22:22,000
他是更加像 textmate 的一个变化器

2506
01:22:22,000 --> 01:22:24,000
一个 chrome 对了

2507
01:22:24,000 --> 01:22:24,000
对

2508
01:22:24,000 --> 01:22:27,000
有一点像 textmate 的精神技术

2509
01:22:27,000 --> 01:22:30,000
就是他有一批核心的功能做得非常好

2510
01:22:30,000 --> 01:22:32,000
做得非常的实用

2511
01:22:32,000 --> 01:22:34,000
但是除此之外

2512
01:22:34,000 --> 01:22:36,000
可扩展性并不是很好

2513
01:22:36,000 --> 01:22:40,000
因为 sublime text 的一大优点

2514
01:22:40,000 --> 01:22:43,000
就是 sublime text 有一大批

2515
01:22:43,000 --> 01:22:45,000
非常优良的插件可以用

2516
01:22:45,000 --> 01:22:46,000
而且有内置的

2517
01:22:46,000 --> 01:22:47,000
也不是内置的

2518
01:22:47,000 --> 01:22:50,000
就是有一个插件管理器可安装

2519
01:22:50,000 --> 01:22:52,000
但是 text chocolate

2520
01:22:52,000 --> 01:22:53,000
巧克力边界气

2521
01:22:53,000 --> 01:22:56,000
在至少就我而

2522
01:22:56,000 --> 01:22:57,000
就我所知是没用的

2523
01:22:59,000 --> 01:23:01,000
但他仍就是一个相当趁手的边界气

2524
01:23:01,000 --> 01:23:05,000
我印象中用巧克力边界气的人

2525
01:23:05,000 --> 01:23:08,000
似乎从在 web 开发者比较多

2526
01:23:08,000 --> 01:23:11,000
就是做什么写 CSS

2527
01:23:11,000 --> 01:23:12,000
写 HTML 代码的

2528
01:23:12,000 --> 01:23:13,000
好像用的比较多

2529
01:23:13,000 --> 01:23:14,000
但是用它来编程的

2530
01:23:14,000 --> 01:23:16,000
我还不见的人不是特别多

2531
01:23:16,000 --> 01:23:17,000
反正

2532
01:23:19,000 --> 01:23:20,000
好像的确如此

2533
01:23:20,000 --> 01:23:25,000
因为我自己也只是大概用过那么一两天

2534
01:23:26,000 --> 01:23:28,000
就长先用了两天

2535
01:23:28,000 --> 01:23:30,000
然后下次再想起来的时候

2536
01:23:30,000 --> 01:23:31,000
已经过期了

2537
01:23:31,000 --> 01:23:32,000
然后就删了

2538
01:23:32,000 --> 01:23:34,000
所以它这口号不对

2539
01:23:34,000 --> 01:23:35,000
你要做什么

2540
01:23:35,000 --> 01:23:36,000
你跟默认边界气

2541
01:23:36,000 --> 01:23:37,000
你要收费

2542
01:23:37,000 --> 01:23:38,000
那肯定是做不到的

2543
01:23:39,000 --> 01:23:41,000
刚刚我讲那么多

2544
01:23:41,000 --> 01:23:42,000
都是 max 面的边界气

2545
01:23:42,000 --> 01:23:43,000
现在的比较流行

2546
01:23:43,000 --> 01:23:44,000
温得上没有什么

2547
01:23:44,000 --> 01:23:46,000
其实我现在已经不太清楚了

2548
01:23:48,000 --> 01:23:49,000
我也不是很精弱

2549
01:23:49,000 --> 01:23:51,000
但我记得有一个叫做

2550
01:23:52,000 --> 01:23:52,000
有两个

2551
01:23:53,000 --> 01:23:54,000
一个叫做 ultra edit

2552
01:23:54,000 --> 01:23:56,000
这个以前

2553
01:23:56,000 --> 01:23:57,000
这是一个付费员证

2554
01:23:58,000 --> 01:23:59,000
ultra edit 最早

2555
01:23:59,000 --> 01:24:02,000
我使用来修改二进制文件

2556
01:24:02,000 --> 01:24:03,000
然后改成成本文件之类的

2557
01:24:03,000 --> 01:24:05,000
那个时候一定要用到拆的

2558
01:24:05,000 --> 01:24:05,000
对

2559
01:24:05,000 --> 01:24:07,000
它有一个很方便的 Hacks mode 的编辑模式

2560
01:24:07,000 --> 01:24:08,000
对吧

2561
01:24:09,000 --> 01:24:10,000
如果你不知道的话

2562
01:24:11,000 --> 01:24:11,000
对

2563
01:24:11,000 --> 01:24:11,000
那个时候

2564
01:24:11,000 --> 01:24:13,000
就是我那个时候

2565
01:24:13,000 --> 01:24:15,000
因为不是还并不懂编程

2566
01:24:15,000 --> 01:24:18,000
只是想要改一下算文件

2567
01:24:18,000 --> 01:24:20,000
然后赶紧过这一关的时候

2568
01:24:20,000 --> 01:24:21,000
造弊

2569
01:24:21,000 --> 01:24:23,000
产生这样的迷思

2570
01:24:23,000 --> 01:24:26,000
就是你要改 16 进制代码

2571
01:24:26,000 --> 01:24:27,000
就必须用 Hacks edit

2572
01:24:27,000 --> 01:24:27,000
不对

2573
01:24:27,000 --> 01:24:29,000
但是不是有一个什么

2574
01:24:29,000 --> 01:24:31,000
有各种游戏的辅助工具

2575
01:24:31,000 --> 01:24:32,000
可以帮你改

2576
01:24:32,000 --> 01:24:33,000
就直接可以

2577
01:24:33,000 --> 01:24:34,000
到次下面有 PC tools

2578
01:24:34,000 --> 01:24:35,000
对

2579
01:24:35,000 --> 01:24:36,000
还是还有什么金山游侠

2580
01:24:36,000 --> 01:24:37,000
是不你记不记得

2581
01:24:38,000 --> 01:24:40,000
金山游侠是改变存

2582
01:24:40,000 --> 01:24:40,000
对

2583
01:24:40,000 --> 01:24:40,000
金山游侠

2584
01:24:40,000 --> 01:24:41,000
对

2585
01:24:41,000 --> 01:24:41,000
对

2586
01:24:41,000 --> 01:24:42,000
可是金山游侠出来

2587
01:24:42,000 --> 01:24:43,000
已经比 Hacks edit 玩了很多

2588
01:24:43,000 --> 01:24:44,000
对

2589
01:24:44,000 --> 01:24:45,000
就是最累的

2590
01:24:45,000 --> 01:24:47,000
就是专门改游戏的

2591
01:24:47,000 --> 01:24:48,000
就是在最开始的时候

2592
01:24:48,000 --> 01:24:49,000
我有的我所有的迷思

2593
01:24:49,000 --> 01:24:52,000
就是在 Windows 下面要改 16 进制的东西

2594
01:24:52,000 --> 01:24:53,000
就必须用 Hacks edit

2595
01:24:53,000 --> 01:24:53,000
对

2596
01:24:55,000 --> 01:24:55,000
还有一个

2597
01:24:55,000 --> 01:24:56,000
我不知道

2598
01:24:56,000 --> 01:24:57,000
我不知道

2599
01:24:57,000 --> 01:24:59,000
你用 Hacks edit 写过程序吗

2600
01:24:59,000 --> 01:24:59,000
我没有

2601
01:24:59,000 --> 01:25:00,000
我很少用

2602
01:25:00,000 --> 01:25:01,000
我

2603
01:25:01,000 --> 01:25:02,000
我就是想吐槽

2604
01:25:02,000 --> 01:25:03,000
为什么我不喜欢

2605
01:25:04,000 --> 01:25:05,000
Android

2606
01:25:05,000 --> 01:25:06,000
Outread

2607
01:25:06,000 --> 01:25:08,000
的一个原因就是

2608
01:25:08,000 --> 01:25:08,000
它上面

2609
01:25:08,000 --> 01:25:11,000
你摸打开有一排的那个 Toolbar

2610
01:25:11,000 --> 01:25:11,000
不

2611
01:25:11,000 --> 01:25:12,000
三排的 Toolbar

2612
01:25:13,000 --> 01:25:13,000
对

2613
01:25:13,000 --> 01:25:16,000
Outread 是一个非常像

2614
01:25:16,000 --> 01:25:18,000
把自己伪装成一个 IDE 的编辑器

2615
01:25:19,000 --> 01:25:19,000
对

2616
01:25:19,000 --> 01:25:21,000
就是我当时看我就被震惊了

2617
01:25:21,000 --> 01:25:23,000
我说这什么

2618
01:25:23,000 --> 01:25:23,000
怎么这么多

2619
01:25:23,000 --> 01:25:25,000
然后因为在我印象中

2620
01:25:25,000 --> 01:25:26,000
如果你是一个编辑

2621
01:25:26,000 --> 01:25:27,000
你是一个文本编辑器

2622
01:25:28,000 --> 01:25:30,000
然后你还有三排的 Toolbar

2623
01:25:30,000 --> 01:25:30,000
意思

2624
01:25:30,000 --> 01:25:32,000
你是要鼓励我用鼠标

2625
01:25:33,000 --> 01:25:33,000
没错

2626
01:25:33,000 --> 01:25:34,000
然后那个时候

2627
01:25:34,000 --> 01:25:35,000
我已经是深信说

2628
01:25:35,000 --> 01:25:37,000
鼠标和键盘之间

2629
01:25:37,000 --> 01:25:38,000
相互一直切换起来

2630
01:25:38,000 --> 01:25:41,000
切换去是一个非常低效的一个过程

2631
01:25:41,000 --> 01:25:41,000
吗

2632
01:25:41,000 --> 01:25:42,000
没错

2633
01:25:42,000 --> 01:25:42,000
然后我觉得

2634
01:25:42,000 --> 01:25:43,000
对

2635
01:25:43,000 --> 01:25:43,000
完全不能忍

2636
01:25:43,000 --> 01:25:44,000
对

2637
01:25:44,000 --> 01:25:46,000
说到 Outread 就是

2638
01:25:46,000 --> 01:25:48,000
我之前在想说

2639
01:25:48,000 --> 01:25:51,000
你说编辑器和 IDE 之间的界线

2640
01:25:51,000 --> 01:25:52,000
到底在哪呢

2641
01:25:52,000 --> 01:25:53,000
我曾经一度想说

2642
01:25:53,000 --> 01:25:55,000
一个非常表面的现象

2643
01:25:55,000 --> 01:25:56,000
就是

2644
01:25:56,000 --> 01:25:58,000
IDE 一定是有 SplashScreen

2645
01:25:59,000 --> 01:26:02,000
这一定会依上来给你一个启动图案的

2646
01:26:02,000 --> 01:26:03,000
但是反过来想

2647
01:26:03,000 --> 01:26:05,000
OutreadIt is 明明是一个编辑器

2648
01:26:05,000 --> 01:26:07,000
可是它有一个 SplashScreen

2649
01:26:07,000 --> 01:26:07,000
我觉得是这样

2650
01:26:08,000 --> 01:26:11,000
如果你能在编辑器里面完成

2651
01:26:11,000 --> 01:26:14,000
就是 Code, Compile, Debug,这个流程的

2652
01:26:14,000 --> 01:26:16,000
就算 IDE 了

2653
01:26:16,000 --> 01:26:17,000
那可是

2654
01:26:17,000 --> 01:26:19,000
比如说什么 IDE plus 之类的东西

2655
01:26:19,000 --> 01:26:20,000
也是可以配置成这样

2656
01:26:20,000 --> 01:26:23,000
那你就是把它当成 IDE 再用了

2657
01:26:23,000 --> 01:26:25,000
其实我确定它是不是 IDE

2658
01:26:25,000 --> 01:26:26,000
有一个地方

2659
01:26:26,000 --> 01:26:26,000
我觉得

2660
01:26:26,000 --> 01:26:28,000
我一般用这个标准来判断

2661
01:26:28,000 --> 01:26:31,000
但是这个很土的一个标准

2662
01:26:31,000 --> 01:26:33,000
就是如果编译错了

2663
01:26:33,000 --> 01:26:34,000
它能不能够直接给我

2664
01:26:34,000 --> 01:26:37,000
跳到那个说那个条子行号那里去

2665
01:26:37,000 --> 01:26:38,000
或者给我高量出来

2666
01:26:38,000 --> 01:26:40,000
有没有 DBAR 功能

2667
01:26:40,000 --> 01:26:40,000
对

2668
01:26:40,000 --> 01:26:41,000
有没有动态追踪

2669
01:26:41,000 --> 01:26:42,000
就有没有那个 feedback

2670
01:26:43,000 --> 01:26:44,000
如果有的话

2671
01:26:44,000 --> 01:26:46,000
它就算 IDE 了

2672
01:26:46,000 --> 01:26:46,000
但是这个

2673
01:26:46,000 --> 01:26:47,000
这是一个不错的标准

2674
01:26:47,000 --> 01:26:49,000
但其实这个是有好像有问题的

2675
01:26:49,000 --> 01:26:51,000
因为现在比如说我现在用那个

2676
01:26:51,000 --> 01:26:53,000
在 Vim 里面有一个插件

2677
01:26:53,000 --> 01:26:55,000
叫做

2678
01:26:55,000 --> 01:26:56,000
叫什么来的

2679
01:26:56,000 --> 01:26:57,000
Syntactic

2680
01:26:57,000 --> 01:26:57,000
对

2681
01:26:57,000 --> 01:26:58,000
还是

2682
01:26:58,000 --> 01:27:00,000
叫 Syntactic

2683
01:27:00,000 --> 01:27:01,000
就是那个插件

2684
01:27:01,000 --> 01:27:03,000
它会告诉你出错的地方的很好

2685
01:27:03,000 --> 01:27:04,000
然后我有一个

2686
01:27:04,000 --> 01:27:05,000
就是 Syntactical

2687
01:27:05,000 --> 01:27:05,000
我写

2688
01:27:05,000 --> 01:27:07,000
那是一个静态分析

2689
01:27:07,000 --> 01:27:07,000
对

2690
01:27:07,000 --> 01:27:09,000
它就说它严格来说

2691
01:27:09,000 --> 01:27:11,000
不算是一个

2692
01:27:11,000 --> 01:27:12,000
叫什么

2693
01:27:14,000 --> 01:27:14,000
动态追踪

2694
01:27:14,000 --> 01:27:15,000
对

2695
01:27:15,000 --> 01:27:16,000
就它并没有办法

2696
01:27:16,000 --> 01:27:18,000
很直接的告诉你

2697
01:27:18,000 --> 01:27:19,000
编译器告诉你

2698
01:27:19,000 --> 01:27:21,000
结果它就是通过一个语法分析来做

2699
01:27:21,000 --> 01:27:23,000
但是现在也有一点

2700
01:27:23,000 --> 01:27:24,000
界线很模糊的地方

2701
01:27:24,000 --> 01:27:25,000
就是比如说现在我写

2702
01:27:25,000 --> 01:27:25,000
够

2703
01:27:25,000 --> 01:27:27,000
然后我有一个够语言的插件

2704
01:27:27,000 --> 01:27:28,000
它会直接

2705
01:27:28,000 --> 01:27:28,000
因为够你

2706
01:27:28,000 --> 01:27:29,000
它你保存的时候

2707
01:27:29,000 --> 01:27:31,000
它就会直接用那个

2708
01:27:31,000 --> 01:27:33,000
一个小工具

2709
01:27:33,000 --> 01:27:33,000
对

2710
01:27:33,000 --> 01:27:35,000
它会默认检查

2711
01:27:35,000 --> 01:27:36,000
你那个是可不可以被编译的

2712
01:27:36,000 --> 01:27:37,000
就是有没有什么编译错误

2713
01:27:37,000 --> 01:27:38,000
因为够编译很快

2714
01:27:38,000 --> 01:27:40,000
这个其实也无所谓

2715
01:27:40,000 --> 01:27:41,000
然后就其实

2716
01:27:41,000 --> 01:27:42,000
如果按刚才那个定来说

2717
01:27:42,000 --> 01:27:43,000
这也算是一个 IDE 了

2718
01:27:43,000 --> 01:27:45,000
好像似乎也不太对

2719
01:27:45,000 --> 01:27:46,000
所以

2720
01:27:46,000 --> 01:27:46,000
所以我说刚刚

2721
01:27:46,000 --> 01:27:49,000
那个只是我以前用的一个很土的一个标准

2722
01:27:50,000 --> 01:27:50,000
对

2723
01:27:50,000 --> 01:27:51,000
但起码有点就是

2724
01:27:51,000 --> 01:27:54,000
你不可以在那个编译器里面跑一个

2725
01:27:54,000 --> 01:27:54,000
compiler

2726
01:27:54,000 --> 01:27:55,000
之类的

2727
01:27:55,000 --> 01:27:55,000
所以

2728
01:27:55,000 --> 01:27:57,000
那个编辑器里面跑

2729
01:27:57,000 --> 01:27:57,000
compiler

2730
01:27:57,000 --> 01:27:58,000
所以那个还不算

2731
01:27:58,000 --> 01:27:59,000
不算 IDE

2732
01:28:00,000 --> 01:28:00,000
对

2733
01:28:00,000 --> 01:28:03,000
或者说更更更权威的这种方法

2734
01:28:03,000 --> 01:28:05,000
就是去这个工具的官方网站上看

2735
01:28:05,000 --> 01:28:06,000
自己说什么

2736
01:28:06,000 --> 01:28:08,000
它照告诉他会不会说

2737
01:28:08,000 --> 01:28:09,000
这是一款 IDE

2738
01:28:09,000 --> 01:28:10,000
如果是的话

2739
01:28:10,000 --> 01:28:10,000
那好吧

2740
01:28:10,000 --> 01:28:11,000
那当他 IDE 好

2741
01:28:11,000 --> 01:28:12,000
对

2742
01:28:13,000 --> 01:28:14,000
问到上面还有一个

2743
01:28:14,000 --> 01:28:17,000
我当时用的是一个挺有意思的编辑器

2744
01:28:17,000 --> 01:28:19,000
叫 Find

2745
01:28:19,000 --> 01:28:20,000
你还记得吗

2746
01:28:21,000 --> 01:28:25,000
好像那个东西是和某一个 Python 的发行版

2747
01:28:25,000 --> 01:28:26,000
一起打包发布发布的

2748
01:28:26,000 --> 01:28:29,000
我也不太记得它是和谁一起发布

2749
01:28:29,000 --> 01:28:31,000
但是我想他还在吗

2750
01:28:31,000 --> 01:28:34,000
是叫 SITE

2751
01:28:34,000 --> 01:28:34,000
我记得

2752
01:28:34,000 --> 01:28:35,000
是不是

2753
01:28:35,000 --> 01:28:35,000
对

2754
01:28:35,000 --> 01:28:36,000
对

2755
01:28:36,000 --> 01:28:37,000
我用过它

2756
01:28:37,000 --> 01:28:38,000
我确定我用过它

2757
01:28:38,000 --> 01:28:39,000
它好像是和

2758
01:28:40,000 --> 01:28:44,000
某一个特定的 Python 发行版一起打包发布的

2759
01:28:44,000 --> 01:28:44,000
对

2760
01:28:44,000 --> 01:28:45,000
现在还有这个东西

2761
01:28:45,000 --> 01:28:47,000
就是它叫什么

2762
01:28:47,000 --> 01:28:50,000
它是 Scientist 一个伯梦编辑器

2763
01:28:50,000 --> 01:28:53,000
然后它本来是为了展示一个叫做

2764
01:28:53,000 --> 01:28:54,000
哇

2765
01:28:54,000 --> 01:28:54,000
这怎么念

2766
01:28:54,000 --> 01:28:58,000
Scientilla

2767
01:28:58,000 --> 01:28:59,000
Scientilla

2768
01:28:59,000 --> 01:29:01,000
Scientilla 是一个什么玩意

2769
01:29:01,000 --> 01:29:04,000
就是它是一个编辑器组件

2770
01:29:04,000 --> 01:29:07,000
就是它是一个用来写编辑器的一个 Library

2771
01:29:07,000 --> 01:29:08,000
OK

2772
01:29:08,000 --> 01:29:08,000
对

2773
01:29:08,000 --> 01:29:11,000
然后 Scienti 就是为了展示这个 Library

2774
01:29:11,000 --> 01:29:13,000
然后它本来这个

2775
01:29:13,000 --> 01:29:14,000
我记得

2776
01:29:14,000 --> 01:29:15,000
如果没记错的话

2777
01:29:15,000 --> 01:29:17,000
它本来是要卖这个组件的 License 的

2778
01:29:18,000 --> 01:29:19,000
为了卖这个 License

2779
01:29:19,000 --> 01:29:22,000
它就要先展示一下 Scienti 它能做什么

2780
01:29:22,000 --> 01:29:24,000
然后当时我就被它一些很多

2781
01:29:24,000 --> 01:29:26,000
比较新奇的特性所震惊了

2782
01:29:26,000 --> 01:29:28,000
就当时比如说

2783
01:29:28,000 --> 01:29:30,000
它支持多种字体

2784
01:29:30,000 --> 01:29:32,000
跟 EmmaX 那种是一样的

2785
01:29:32,000 --> 01:29:33,000
它可以支持等宽

2786
01:29:33,000 --> 01:29:34,000
非等宽的

2787
01:29:34,000 --> 01:29:35,000
就是同时使用

2788
01:29:35,000 --> 01:29:37,000
然后语法高量那些

2789
01:29:37,000 --> 01:29:38,000
就当时

2790
01:29:38,000 --> 01:29:39,000
我在

2791
01:29:39,000 --> 01:29:41,000
这个来说就说

2792
01:29:41,000 --> 01:29:41,000
哇

2793
01:29:41,000 --> 01:29:42,000
这个还这么牛逼

2794
01:29:42,000 --> 01:29:44,000
还是挺少见

2795
01:29:44,000 --> 01:29:45,000
因为当时你知道

2796
01:29:45,000 --> 01:29:46,000
那个是从 NoPath

2797
01:29:46,000 --> 01:29:48,000
即使本过度过来

2798
01:29:48,000 --> 01:29:50,000
找的第一款编辑器你知道吗

2799
01:29:52,000 --> 01:29:54,000
原来有这么一段黑逆时

2800
01:29:55,000 --> 01:29:56,000
而且它是一个免费的

2801
01:29:56,000 --> 01:29:59,000
就感觉还是相当不错

2802
01:29:59,000 --> 01:30:00,000
我不知道现在怎么样

2803
01:30:00,000 --> 01:30:00,000
哇

2804
01:30:00,000 --> 01:30:00,000
现在还有

2805
01:30:00,000 --> 01:30:01,000
竟然还有 MacOS 版

2806
01:30:01,000 --> 01:30:03,000
还是 Mac App Store 里面

2807
01:30:03,000 --> 01:30:04,000
我一定要下一个

2808
01:30:04,000 --> 01:30:05,000
下一个来用

2809
01:30:05,000 --> 01:30:06,000
回回旧

2810
01:30:06,000 --> 01:30:07,000
来缅画

2811
01:30:07,000 --> 01:30:07,000
这个编辑

2812
01:30:07,000 --> 01:30:09,000
应该已经有一定年头了吧

2813
01:30:09,000 --> 01:30:10,000
至少也是有个 10 年 8 年的

2814
01:30:10,000 --> 01:30:12,000
你想我用的就是

2815
01:30:12,000 --> 01:30:13,000
在

2816
01:30:13,000 --> 01:30:15,000
我想想应该是在

2817
01:30:15,000 --> 01:30:16,000
2000 年左右吧

2818
01:30:16,000 --> 01:30:17,000
温哥

2819
01:30:17,000 --> 01:30:19,000
温哥 xp 的早期的时候

2820
01:30:19,000 --> 01:30:21,000
所以是有十几年的历史

2821
01:30:21,000 --> 01:30:22,000
对

2822
01:30:22,000 --> 01:30:25,000
我早期用到了温哥 xp 的编辑器

2823
01:30:25,000 --> 01:30:27,000
或者说编辑器

2824
01:30:27,000 --> 01:30:28,000
比较

2825
01:30:28,000 --> 01:30:30,000
印象深刻的一个叫做

2826
01:30:30,000 --> 01:30:31,000
Edit plus

2827
01:30:31,000 --> 01:30:33,000
图标是一个红色的笔记本

2828
01:30:33,000 --> 01:30:34,000
这个没有

2829
01:30:34,000 --> 01:30:35,000
图标是一个红色的

2830
01:30:35,000 --> 01:30:37,000
翻开了半页的笔记本

2831
01:30:37,000 --> 01:30:37,000
ok

2832
01:30:37,000 --> 01:30:38,000
Edit plus

2833
01:30:38,000 --> 01:30:39,000
我来看一看

2834
01:30:39,000 --> 01:30:40,000
是不是还存在

2835
01:30:40,000 --> 01:30:44,000
什么你已经阵亡了

2836
01:30:44,000 --> 01:30:46,000
还存在

2837
01:30:46,000 --> 01:30:50,000
最近更新是 3 月 27 日今年

2838
01:30:50,000 --> 01:30:50,000
天哪

2839
01:30:50,000 --> 01:30:51,000
而且它

2840
01:30:51,000 --> 01:30:52,000
真的假的

2841
01:30:52,000 --> 01:30:54,000
这图标还是没有变成是一个红色的笔记本

2842
01:30:54,000 --> 01:30:55,000
翻开了一半

2843
01:30:55,000 --> 01:30:56,000
好吧

2844
01:30:56,000 --> 01:30:58,000
我讨这个三天我分了

2845
01:30:58,000 --> 01:30:59,000
你知道它卖多少钱吗

2846
01:30:59,000 --> 01:31:00,000
多少

2847
01:31:00,000 --> 01:31:01,000
42 美元

2848
01:31:01,000 --> 01:31:03,000
oh my f***ing god

2849
01:31:03,000 --> 01:31:05,000
它的整个 4.2 兆

2850
01:31:05,000 --> 01:31:09,000
这就在 Mac App Store 里面

2851
01:31:10,000 --> 01:31:11,000
太吊了

2852
01:31:11,000 --> 01:31:12,000
太吊了

2853
01:31:12,000 --> 01:31:12,000
对

2854
01:31:12,000 --> 01:31:14,000
它确实是有一个字带的

2855
01:31:14,000 --> 01:31:16,000
好像它就是用 Python 来 script

2856
01:31:16,000 --> 01:31:16,000
还是怎么样

2857
01:31:16,000 --> 01:31:17,000
我忘了

2858
01:31:17,000 --> 01:31:18,000
虽然它是一个

2859
01:31:18,000 --> 01:31:18,000
很有可能

2860
01:31:18,000 --> 01:31:20,000
因为我在我的印象里面

2861
01:31:20,000 --> 01:31:21,000
我在我的脑海里面

2862
01:31:21,000 --> 01:31:22,000
三号这个

2863
01:31:22,000 --> 01:31:23,000
跟 Python 有点关系

2864
01:31:23,000 --> 01:31:24,000
City

2865
01:31:24,000 --> 01:31:26,000
对和 Python

2866
01:31:26,000 --> 01:31:29,000
有非常农列的关系

2867
01:31:29,000 --> 01:31:29,000
我想起来了

2868
01:31:29,000 --> 01:31:33,000
我曾经用它来使用 Laytag

2869
01:31:33,000 --> 01:31:33,000
好

2870
01:31:33,000 --> 01:31:35,000
就是因为它有多种语法高量

2871
01:31:35,000 --> 01:31:36,000
然后字体不一样

2872
01:31:36,000 --> 01:31:37,000
就刚刚讲

2873
01:31:37,000 --> 01:31:39,000
我是一直很羡慕 eMax 那特性

2874
01:31:41,000 --> 01:31:42,000
ok

2875
01:31:43,000 --> 01:31:47,000
我的 Laytag 的那个

2876
01:31:48,000 --> 01:31:51,000
表面件是在 notepad plus plus 里面写的

2877
01:31:51,000 --> 01:31:53,000
它是一个只能使用等宽字体的吧

2878
01:31:54,000 --> 01:31:54,000
好像是

2879
01:31:54,000 --> 01:31:55,000
对

2880
01:31:55,000 --> 01:31:56,000
我觉得就是有时候

2881
01:31:56,000 --> 01:31:57,000
感觉不是

2882
01:31:57,000 --> 01:31:59,000
就通过语法高量

2883
01:31:59,000 --> 01:32:00,000
有时候很难一言

2884
01:32:00,000 --> 01:32:01,000
你为什么会对锁键机

2885
01:32:01,000 --> 01:32:02,000
就这种半锁锁锁

2886
01:32:02,000 --> 01:32:02,000
不是

2887
01:32:02,000 --> 01:32:03,000
本意锁锁锁机

2888
01:32:03,000 --> 01:32:05,000
有这么强烈的需求

2889
01:32:05,000 --> 01:32:06,000
我是希望能够

2890
01:32:06,000 --> 01:32:07,000
我不看编译结果

2891
01:32:07,000 --> 01:32:09,000
只看比较满能够很扫

2892
01:32:09,000 --> 01:32:10,000
很快的扫清楚

2893
01:32:10,000 --> 01:32:12,000
这个文档的原始结构

2894
01:32:12,000 --> 01:32:12,000
比如说

2895
01:32:12,000 --> 01:32:13,000
这个大标题

2896
01:32:13,000 --> 01:32:14,000
二级标题

2897
01:32:14,000 --> 01:32:15,000
这样那些东西

2898
01:32:15,000 --> 01:32:17,000
然后如果你每个字都是一样大

2899
01:32:17,000 --> 01:32:18,000
只通过颜色来区别的话

2900
01:32:18,000 --> 01:32:20,000
其实有一定的难度的

2901
01:32:20,000 --> 01:32:21,000
特别是文档比较长的时候

2902
01:32:22,000 --> 01:32:23,000
说得没错

2903
01:32:23,000 --> 01:32:24,000
你这么一说

2904
01:32:24,000 --> 01:32:25,000
我忽然想起来

2905
01:32:25,000 --> 01:32:28,000
我在本科作别设计的时候

2906
01:32:28,000 --> 01:32:31,000
要看一个非常庞大的 C 库

2907
01:32:31,000 --> 01:32:32,000
然后当时

2908
01:32:32,000 --> 01:32:38,000
当了一个半编辑器的代码越多工具

2909
01:32:38,000 --> 01:32:42,000
这个代码越多工具的优点之一

2910
01:32:42,000 --> 01:32:43,000
也是它可以把

2911
01:32:43,000 --> 01:32:48,000
比如说韩数的名字用大号字体显示

2912
01:32:48,000 --> 01:32:51,000
然后一些经常出现的变量

2913
01:32:51,000 --> 01:32:54,000
可以用比较深的颜色显示

2914
01:32:54,000 --> 01:32:55,000
可是具体叫什么

2915
01:32:55,000 --> 01:32:55,000
忘记了

2916
01:32:55,000 --> 01:32:57,000
但是当时搜寻它的时候

2917
01:32:57,000 --> 01:32:59,000
就说它是一款非常适合于

2918
01:32:59,000 --> 01:33:00,000
越多代码的编辑器

2919
01:33:01,000 --> 01:33:02,000
其实我觉得

2920
01:33:02,000 --> 01:33:07,000
其实如果你纯粹从字体和排版的角度来讲

2921
01:33:07,000 --> 01:33:09,000
就是这种方式也未尝不可

2922
01:33:09,000 --> 01:33:09,000
对不对

2923
01:33:11,000 --> 01:33:12,000
我现在有这种

2924
01:33:12,000 --> 01:33:13,000
也就是这么一种想法

2925
01:33:13,000 --> 01:33:16,000
因为有时候你真的看了一整瓶的

2926
01:33:16,000 --> 01:33:17,000
大小都一样的代码的时候

2927
01:33:17,000 --> 01:33:19,000
还是挺辛苦的

2928
01:33:19,000 --> 01:33:20,000
对

2929
01:33:22,000 --> 01:33:23,000
接着说文档字上面的编辑器

2930
01:33:23,000 --> 01:33:25,000
另外一个就是我刚刚提到了

2931
01:33:25,000 --> 01:33:27,000
这个 Notepad++

2932
01:33:28,000 --> 01:33:29,000
好像是台湾人开发的

2933
01:33:31,000 --> 01:33:31,000
对

2934
01:33:31,000 --> 01:33:34,000
我记得在我切换到 Linux 之前

2935
01:33:34,000 --> 01:33:35,000
它是我

2936
01:33:36,000 --> 01:33:40,000
几乎是最默认的一款编辑器了吧

2937
01:33:40,000 --> 01:33:41,000
不管是写文章

2938
01:33:41,000 --> 01:33:43,000
还是写代码

2939
01:33:43,000 --> 01:33:44,000
基本上我都用它

2940
01:33:44,000 --> 01:33:45,000
OK

2941
01:33:45,000 --> 01:33:48,000
而且它启动快

2942
01:33:48,000 --> 01:33:49,000
对大文件的处理也很好

2943
01:33:49,000 --> 01:33:51,000
就是比较小巧精致

2944
01:33:52,000 --> 01:33:52,000
对

2945
01:33:52,000 --> 01:33:53,000
而且

2946
01:33:53,000 --> 01:33:54,000
其实现在应该也是完全免费

2947
01:33:54,000 --> 01:33:54,000
对

2948
01:33:54,000 --> 01:33:56,000
你说这个我突然想起来

2949
01:33:56,000 --> 01:33:57,000
其实我也见过很多人在用这个

2950
01:33:57,000 --> 01:33:58,000
就是因为

2951
01:33:58,000 --> 01:34:00,000
首先就是 Windows 摸着那个计时本

2952
01:34:00,000 --> 01:34:01,000
确实太糟糕了

2953
01:34:01,000 --> 01:34:04,000
然后有很多人编辑一些文本文件的时候

2954
01:34:04,000 --> 01:34:06,000
还有苦于找到一个比较好的工具

2955
01:34:06,000 --> 01:34:07,000
然后突然出来这么一个

2956
01:34:07,000 --> 01:34:09,000
长得很像那个计时本的

2957
01:34:09,000 --> 01:34:11,000
但是又比它做的好的

2958
01:34:11,000 --> 01:34:12,000
觉得还是不错的

2959
01:34:12,000 --> 01:34:13,000
对

2960
01:34:13,000 --> 01:34:15,000
Notepad++可能就是这样一种东西

2961
01:34:15,000 --> 01:34:18,000
它甚至连名字都叫 Notepad

2962
01:34:18,000 --> 01:34:19,000
只不过是++

2963
01:34:19,000 --> 01:34:20,000
对

2964
01:34:20,000 --> 01:34:21,000
对

2965
01:34:21,000 --> 01:34:22,000
我相信还要

2966
01:34:22,000 --> 01:34:24,000
而且它经过简单的配置

2967
01:34:24,000 --> 01:34:30,000
也是可以成为一个比较基本的 IDE 来用的

2968
01:34:30,000 --> 01:34:30,000
嗯哼

2969
01:34:30,000 --> 01:34:34,000
就是你可以一键编译 C++

2970
01:34:34,000 --> 01:34:37,000
然后 C++的编译结果

2971
01:34:37,000 --> 01:34:38,000
也可以在它的那个

2972
01:34:38,000 --> 01:34:40,000
它应该也有一个类似 console

2973
01:34:40,000 --> 01:34:43,000
或者说 output 这么一个 Window

2974
01:34:43,000 --> 01:34:45,000
然后编译结果就可以在这个

2975
01:34:46,000 --> 01:34:47,000
窗口里面显示

2976
01:34:47,000 --> 01:34:47,000
也挺好

2977
01:34:47,000 --> 01:34:48,000
它是一个免费的

2978
01:34:48,000 --> 01:34:49,000
还是要付费的

2979
01:34:49,000 --> 01:34:50,000
是全免费

2980
01:34:50,000 --> 01:34:50,000
OK

2981
01:34:50,000 --> 01:34:51,000
然后这个

2982
01:34:51,000 --> 01:34:53,000
这个可以说不定真的可以成为什么

2983
01:34:53,000 --> 01:34:55,000
D 4 Windows Editor

2984
01:34:55,000 --> 01:34:55,000
对

2985
01:34:55,000 --> 01:34:57,000
我相信基本上用上它的人都会

2986
01:34:57,000 --> 01:34:58,000
都挺喜欢的

2987
01:34:58,000 --> 01:35:00,000
就是我在

2988
01:35:00,000 --> 01:35:04,000
我已经至少说动了四五个朋友

2989
01:35:04,000 --> 01:35:05,000
在遥远的 Windows 时代

2990
01:35:05,000 --> 01:35:07,000
只是说动了四五个朋友用它来写程去

2991
01:35:07,000 --> 01:35:09,000
因为那个时候你知道

2992
01:35:09,000 --> 01:35:11,000
嗯

2993
01:35:11,000 --> 01:35:13,000
学校里面教写程去

2994
01:35:13,000 --> 01:35:17,000
甚至是在那个什么 Turbo-C 的环境下

2995
01:35:17,000 --> 01:35:19,000
在不看回首的网室

2996
01:35:19,000 --> 01:35:20,000
但

2997
01:35:20,000 --> 01:35:20,000
OK

2998
01:35:20,000 --> 01:35:21,000
但对

2999
01:35:21,000 --> 01:35:24,000
我就教会了他们可以在这样一种 Windows 下面的

3000
01:35:24,000 --> 01:35:26,000
一个编辑器里面写程序

3001
01:35:26,000 --> 01:35:29,000
然后通过简单的配置

3002
01:35:29,000 --> 01:35:30,000
就可以调用一个编辑器

3003
01:35:30,000 --> 01:35:33,000
编译器来调试程序

3004
01:35:33,000 --> 01:35:35,000
其实还是挺爽的

3005
01:35:35,000 --> 01:35:37,000
然后我自己在偷偷的用 Visual Studio

3006
01:35:37,000 --> 01:35:41,000
哈哈哈哈

3007
01:35:41,000 --> 01:35:41,000
对

3008
01:35:41,000 --> 01:35:42,000
这就好像告诉别人

3009
01:35:42,000 --> 01:35:43,000
菜好吃

3010
01:35:43,000 --> 01:35:43,000
你吃菜

3011
01:35:43,000 --> 01:35:45,000
然后自己吃

3012
01:35:47,000 --> 01:35:48,000
太机智了

3013
01:35:48,000 --> 01:35:49,000
这个

3014
01:35:49,000 --> 01:35:53,000
最近还有一些比较另类的编辑器出现

3015
01:35:53,000 --> 01:35:53,000
哈

3016
01:35:53,000 --> 01:35:55,000
刚刚我们提到的那些编辑器

3017
01:35:55,000 --> 01:35:58,000
它都是基本上是用一个原生的

3018
01:35:58,000 --> 01:35:59,000
一个

3019
01:35:59,000 --> 01:36:00,000
就是

3020
01:36:00,000 --> 01:36:01,000
这怎么这么描述

3021
01:36:01,000 --> 01:36:04,000
它都是一个原生的代码实现的一个编辑器

3022
01:36:04,000 --> 01:36:07,000
然后最近有一些基于

3023
01:36:07,000 --> 01:36:09,000
WAPKit 的编辑器出现了

3024
01:36:09,000 --> 01:36:12,000
比如最比较典型的代表就是这个

3025
01:36:12,000 --> 01:36:14,000
GitHub Atom

3026
01:36:14,000 --> 01:36:14,000
对

3027
01:36:14,000 --> 01:36:15,000
GitHub Atom

3028
01:36:15,000 --> 01:36:16,000
现在这个是一个

3029
01:36:16,000 --> 01:36:17,000
知道的比较多

3030
01:36:17,000 --> 01:36:18,000
它其实是

3031
01:36:18,000 --> 01:36:19,000
你可以理解它是一个浏览器

3032
01:36:19,000 --> 01:36:22,000
伪装成一个编辑器的样子

3033
01:36:22,000 --> 01:36:22,000
对

3034
01:36:22,000 --> 01:36:26,000
就好像有一些基于网页的编辑器

3035
01:36:26,000 --> 01:36:28,000
在下面的器叫什么

3036
01:36:28,000 --> 01:36:30,000
Code Anywhere

3037
01:36:30,000 --> 01:36:32,000
有个比较著名叫 Code Mirror

3038
01:36:33,000 --> 01:36:34,000
OK

3039
01:36:34,000 --> 01:36:37,000
但我记得我用过的那个叫 Code Anywhere

3040
01:36:37,000 --> 01:36:37,000
OK

3041
01:36:37,000 --> 01:36:39,000
然后就是一个

3042
01:36:39,000 --> 01:36:40,000
你打开一个网页

3043
01:36:40,000 --> 01:36:42,000
然后这个网页上面会给你显示一个编辑器

3044
01:36:42,000 --> 01:36:45,000
你可以在这个编辑器里面操作文件呀

3045
01:36:45,000 --> 01:36:47,000
只不过这些文件都是在云端的

3046
01:36:47,000 --> 01:36:48,000
对

3047
01:36:48,000 --> 01:36:49,000
然后也有什么愈法高量

3048
01:36:49,000 --> 01:36:52,000
然后你点一下发布件

3049
01:36:52,000 --> 01:36:55,000
它就可以把它写好的东西发布出来

3050
01:36:55,000 --> 01:36:56,000
对

3051
01:36:56,000 --> 01:36:58,000
然后这个 Atom 这样的编辑器

3052
01:36:58,000 --> 01:37:03,000
就可以视为这样一种离线版本的浏览器里面的编辑器

3053
01:37:03,000 --> 01:37:03,000
但是我有一点

3054
01:37:03,000 --> 01:37:06,000
我就是你如果你真的去看它这种 Git 的实现

3055
01:37:06,000 --> 01:37:09,000
以及它整个的运行的逻辑

3056
01:37:09,000 --> 01:37:13,000
你会觉得这完全就不适合用来做一个编辑器

3057
01:37:13,000 --> 01:37:14,000
因为它毕竟是一个浏览器对不对

3058
01:37:14,000 --> 01:37:16,000
比如你要实现那个比如最简单的一个例子

3059
01:37:16,000 --> 01:37:18,000
你要实现那个光标那一树

3060
01:37:18,000 --> 01:37:19,000
然后再不断的变

3061
01:37:19,000 --> 01:37:22,000
你是要去通过这个 CS 样式表

3062
01:37:22,000 --> 01:37:24,000
样式表去去做一个动画

3063
01:37:24,000 --> 01:37:26,000
然后你要去去衡量

3064
01:37:26,000 --> 01:37:27,000
衡量那个位置

3065
01:37:27,000 --> 01:37:31,000
大概是在这个文档的哪一个相对的这个位移上面去

3066
01:37:31,000 --> 01:37:33,000
反正就整个过程是很有趣的

3067
01:37:33,000 --> 01:37:35,000
所以我到现在为止

3068
01:37:35,000 --> 01:37:36,000
我也没看出来

3069
01:37:36,000 --> 01:37:37,000
就是这样

3070
01:37:37,000 --> 01:37:38,000
你敢如果你是一个网页

3071
01:37:38,000 --> 01:37:39,000
然后你需要

3072
01:37:39,000 --> 01:37:42,000
比如说你是一个什么所谓的云编辑器

3073
01:37:42,000 --> 01:37:43,000
你可我可以理解

3074
01:37:43,000 --> 01:37:45,000
因为你最重要是要在网页里面实现

3075
01:37:45,000 --> 01:37:46,000
你有这个平台的限制

3076
01:37:46,000 --> 01:37:49,000
但你就像那个 github 就 Atom 这种东西

3077
01:37:49,000 --> 01:37:49,000
我到目前为止

3078
01:37:49,000 --> 01:37:52,000
我还是不能理解它的这个意义和在

3079
01:37:52,000 --> 01:37:54,000
或者为什么要做这么一个东西

3080
01:37:54,000 --> 01:37:59,000
它可能就是把 webkit 当做

3081
01:38:00,000 --> 01:38:06,000
就像 gvm 或者是 dotnet 这样一个运行室来使用

3082
01:38:06,000 --> 01:38:08,000
然后用它来写成去的一个常识吧

3083
01:38:08,000 --> 01:38:09,000
我觉得

3084
01:38:09,000 --> 01:38:11,000
就是什么 webkit as a OS

3085
01:38:11,000 --> 01:38:11,000
对

3086
01:38:11,000 --> 01:38:13,000
你把 webkit 当做一个 OS 来使用

3087
01:38:13,000 --> 01:38:15,000
或者当做一个 library 来使用

3088
01:38:15,000 --> 01:38:16,000
当于 freework 来使用

3089
01:38:16,000 --> 01:38:16,000
对

3090
01:38:16,000 --> 01:38:18,000
但是它明也没有

3091
01:38:18,000 --> 01:38:19,000
就是这个编辑做得出来

3092
01:38:19,000 --> 01:38:22,000
它也没有说有什么相对于

3093
01:38:22,000 --> 01:38:22,000
非常了不起的

3094
01:38:22,000 --> 01:38:23,000
对

3095
01:38:23,000 --> 01:38:24,000
因为我没有看出来

3096
01:38:24,000 --> 01:38:25,000
起码我当没有前辈子没有看出来

3097
01:38:25,000 --> 01:38:28,000
它有它有什么不得了的创新

3098
01:38:28,000 --> 01:38:31,000
或者是有什么足够吸引我的特性

3099
01:38:31,000 --> 01:38:32,000
让我去试一下

3100
01:38:32,000 --> 01:38:33,000
而且最关键是

3101
01:38:33,000 --> 01:38:34,000
它现在我当然是

3102
01:38:34,000 --> 01:38:36,000
现在是所谓的 alpha 版本

3103
01:38:36,000 --> 01:38:38,000
就是很容易挂掉的

3104
01:38:38,000 --> 01:38:39,000
现在还是太不完善了

3105
01:38:39,000 --> 01:38:40,000
而且很不稳定

3106
01:38:40,000 --> 01:38:41,000
不完善

3107
01:38:41,000 --> 01:38:44,000
而且对资源的占用也是非常可观的

3108
01:38:44,000 --> 01:38:47,000
因为你想你在滥用一个浏览器

3109
01:38:47,000 --> 01:38:50,000
然后去实现一个编辑器的功能

3110
01:38:50,000 --> 01:38:52,000
对吧

3111
01:38:52,000 --> 01:38:54,000
所以是挺古怪的一件事情

3112
01:38:54,000 --> 01:38:57,000
还有一个编辑器

3113
01:38:57,000 --> 01:38:58,000
这里是

3114
01:38:58,000 --> 01:38:59,000
你也写了

3115
01:38:59,000 --> 01:39:00,000
但我也要大力推荐的

3116
01:39:00,000 --> 01:39:03,000
叫做 acme

3117
01:39:03,000 --> 01:39:04,000
acme 这个编辑器是

3118
01:39:04,000 --> 01:39:06,000
确定你要大力推荐吗

3119
01:39:06,000 --> 01:39:08,000
我的推荐不是说你要去用

3120
01:39:08,000 --> 01:39:11,000
你要去什么去真的去用它作为主力

3121
01:39:11,000 --> 01:39:13,000
但是你应该去了解一下

3122
01:39:13,000 --> 01:39:15,000
那一些很奇怪的一些哲学

3123
01:39:15,000 --> 01:39:15,000
我觉得是

3124
01:39:15,000 --> 01:39:17,000
对 去了解一下

3125
01:39:17,000 --> 01:39:20,000
就是上世纪七八十年代有

3126
01:39:20,000 --> 01:39:21,000
八九十年代应该是

3127
01:39:21,000 --> 01:39:23,000
八九十年代有证明学人

3128
01:39:23,000 --> 01:39:25,000
曾经有过这样的想象

3129
01:39:25,000 --> 01:39:28,000
编辑器有可能是这个样子的

3130
01:39:28,000 --> 01:39:29,000
对

3131
01:39:29,000 --> 01:39:30,000
所以这是其实 acme

3132
01:39:30,000 --> 01:39:33,000
对 说到 acme 就不得不说 planoi

3133
01:39:33,000 --> 01:39:35,000
planoi 其实就是这样一种

3134
01:39:35,000 --> 01:39:37,000
非常了不起的

3135
01:39:37,000 --> 01:39:38,000
先锋性的尝试

3136
01:39:38,000 --> 01:39:40,000
只不过它没有成功吧

3137
01:39:40,000 --> 01:39:40,000
对

3138
01:39:40,000 --> 01:39:43,000
planoi 的目的是做一个什么

3139
01:39:43,000 --> 01:39:44,000
做做

3140
01:39:44,000 --> 01:39:45,000
更好的 unix

3141
01:39:45,000 --> 01:39:45,000
对

3142
01:39:45,000 --> 01:39:48,000
就比 unix 还 unix 的 unix

3143
01:39:48,000 --> 01:39:48,000
对

3144
01:39:48,000 --> 01:39:49,000
next generation unix

3145
01:39:49,000 --> 01:39:50,000
就 planoi

3146
01:39:50,000 --> 01:39:52,000
但是

3147
01:39:52,000 --> 01:39:53,000
但是后来也

3148
01:39:53,000 --> 01:39:54,000
反正现在你可以去下载

3149
01:39:54,000 --> 01:39:55,000
训练机

3150
01:39:55,000 --> 01:39:56,000
比较方便

3151
01:39:56,000 --> 01:39:57,000
可以在训练机前跑来玩

3152
01:39:57,000 --> 01:40:00,000
但是作为生产用肯定不太现实了

3153
01:40:00,000 --> 01:40:01,000
anyway

3154
01:40:01,000 --> 01:40:02,000
acme 这个编辑器

3155
01:40:02,000 --> 01:40:05,000
就是在 planoi 里面

3156
01:40:05,000 --> 01:40:06,000
就是 roll pike

3157
01:40:06,000 --> 01:40:09,000
为了在 planoi 里面写程序

3158
01:40:09,000 --> 01:40:11,000
于是给自己开发了这么一个编辑器

3159
01:40:11,000 --> 01:40:15,000
但后来他用它来写这个构成许了

3160
01:40:15,000 --> 01:40:16,000
然后这边

3161
01:40:16,000 --> 01:40:18,000
有什么特别的地方

3162
01:40:18,000 --> 01:40:21,000
我觉得就说两点比较表面的

3163
01:40:21,000 --> 01:40:24,000
因为我也没有真的实际去

3164
01:40:24,000 --> 01:40:25,000
很长时间用过它

3165
01:40:25,000 --> 01:40:26,000
但是

3166
01:40:26,000 --> 01:40:27,000
首先第一个

3167
01:40:27,000 --> 01:40:30,000
它默认使用是不懂宽字体的

3168
01:40:30,000 --> 01:40:32,000
这个就觉得非常奇怪

3169
01:40:32,000 --> 01:40:34,000
我说为什么会这样

3170
01:40:34,000 --> 01:40:35,000
但是它是

3171
01:40:35,000 --> 01:40:36,000
当我记得他给过一个解释

3172
01:40:36,000 --> 01:40:38,000
就是觉得他说不懂宽

3173
01:40:38,000 --> 01:40:41,000
自己的程序更加易读

3174
01:40:41,000 --> 01:40:41,000
然后

3175
01:40:41,000 --> 01:40:43,000
不懂宽的程序更加美观

3176
01:40:43,000 --> 01:40:45,000
我去就至少看起来更好看

3177
01:40:45,000 --> 01:40:46,000
是我幼小的心灵来看

3178
01:40:46,000 --> 01:40:50,000
在 Geldia 这个字体下面程序看起来

3179
01:40:50,000 --> 01:40:52,000
好像要更优雅一些

3180
01:40:52,000 --> 01:40:54,000
不过其实说代码质量怎么样

3181
01:40:54,000 --> 01:40:55,000
但至少看起来比较优雅

3182
01:40:55,000 --> 01:40:55,000
对

3183
01:40:55,000 --> 01:40:56,000
然后然后就天上

3184
01:40:56,000 --> 01:40:57,000
如果你们不懂宽字体

3185
01:40:57,000 --> 01:40:59,000
怎么去对齐那些东西

3186
01:40:59,000 --> 01:41:00,000
但但发对

3187
01:41:00,000 --> 01:41:00,000
对齐没有这么多

3188
01:41:00,000 --> 01:41:01,000
没有那么重要

3189
01:41:01,000 --> 01:41:02,000
没有想象中说

3190
01:41:02,000 --> 01:41:03,000
对

3191
01:41:03,000 --> 01:41:04,000
而且它就是

3192
01:41:04,000 --> 01:41:05,000
而且它用那个 Tab

3193
01:41:05,000 --> 01:41:07,000
就是我们现在一般的做法

3194
01:41:07,000 --> 01:41:08,000
是把 Tab 转换成

3195
01:41:08,000 --> 01:41:10,000
比如说四个空格来做

3196
01:41:10,000 --> 01:41:11,000
但是在 Acme

3197
01:41:11,000 --> 01:41:12,000
或者包在

3198
01:41:12,000 --> 01:41:14,000
在 Goldian 里面的缩筋

3199
01:41:14,000 --> 01:41:16,000
默认使用 Tab 吗

3200
01:41:16,000 --> 01:41:17,000
真的

3201
01:41:17,000 --> 01:41:18,000
真的

3202
01:41:18,000 --> 01:41:21,000
我以为现在全世界已经完全

3203
01:41:21,000 --> 01:41:22,000
导向空格了

3204
01:41:22,000 --> 01:41:24,000
就那个什么 Goldian 里面的

3205
01:41:24,000 --> 01:41:25,000
就是你用 Gold format

3206
01:41:25,000 --> 01:41:26,000
如果你不改配置

3207
01:41:26,000 --> 01:41:29,000
它默认会帮你重新用 Tab 来做缩筋

3208
01:41:29,000 --> 01:41:30,000
就是在这里面是一样

3209
01:41:30,000 --> 01:41:30,000
因为 Tab 有个好处

3210
01:41:30,000 --> 01:41:31,000
就是它可以

3211
01:41:31,000 --> 01:41:32,000
如果你是不懂宽的话

3212
01:41:32,000 --> 01:41:34,000
它也可以能够帮你对齐

3213
01:41:34,000 --> 01:41:34,000
对

3214
01:41:34,000 --> 01:41:35,000
对

3215
01:41:35,000 --> 01:41:37,000
但也不是所有情况下能

3216
01:41:37,000 --> 01:41:39,000
大部分时候就能用了

3217
01:41:39,000 --> 01:41:40,000
然后另外一点

3218
01:41:40,000 --> 01:41:41,000
就是

3219
01:41:42,000 --> 01:41:43,000
Ropehike 这个人是不用

3220
01:41:43,000 --> 01:41:44,000
语法高量的

3221
01:41:44,000 --> 01:41:45,000
你能想象吗

3222
01:41:46,000 --> 01:41:47,000
这个还好吧

3223
01:41:47,000 --> 01:41:48,000
就是

3224
01:41:49,000 --> 01:41:50,000
我也不知道

3225
01:41:50,000 --> 01:41:51,000
我

3226
01:41:51,000 --> 01:41:53,000
有一点

3227
01:41:53,000 --> 01:41:58,000
感觉就是语法高量和等宽

3228
01:41:58,000 --> 01:42:01,000
和包括小键盘

3229
01:42:02,000 --> 01:42:03,000
这些东西都是

3230
01:42:03,000 --> 01:42:04,000
可有可无的吗

3231
01:42:05,000 --> 01:42:06,000
somehow overrated

3232
01:42:06,000 --> 01:42:07,000
对

3233
01:42:07,000 --> 01:42:09,000
但这一点我一直是很不能理解

3234
01:42:09,000 --> 01:42:11,000
因为虽然说它这个 Achemy

3235
01:42:11,000 --> 01:42:13,000
默认是使用非等宽字体的

3236
01:42:13,000 --> 01:42:15,000
但是它只有一个大小

3237
01:42:15,000 --> 01:42:16,000
而且只能有一种字体

3238
01:42:16,000 --> 01:42:17,000
对吧

3239
01:42:17,000 --> 01:42:18,000
我看到样子是这样子

3240
01:42:18,000 --> 01:42:19,000
对

3241
01:42:19,000 --> 01:42:21,000
至少在目前的版本来说是这样

3242
01:42:21,000 --> 01:42:21,000
对

3243
01:42:21,000 --> 01:42:22,000
这就会有一个问题

3244
01:42:22,000 --> 01:42:28,000
就是你没有办法通过改变字型

3245
01:42:28,000 --> 01:42:29,000
或者是字体的大小

3246
01:42:29,000 --> 01:42:30,000
来区分这个

3247
01:42:30,000 --> 01:42:32,000
这个远代码的结构

3248
01:42:32,000 --> 01:42:34,000
或者是这个文档的结构

3249
01:42:34,000 --> 01:42:35,000
那么刚才我讲了

3250
01:42:35,000 --> 01:42:37,000
如果一般的做法

3251
01:42:37,000 --> 01:42:38,000
就是你用语法高量的方式

3252
01:42:38,000 --> 01:42:40,000
来分清楚这个结构

3253
01:42:40,000 --> 01:42:44,000
但是 Ropehike 这种大神级的人物

3254
01:42:44,000 --> 01:42:46,000
他说我们大神写成绪

3255
01:42:46,000 --> 01:42:48,000
从来不需要语法高量

3256
01:42:48,000 --> 01:42:50,000
那就没有办法了

3257
01:42:50,000 --> 01:42:52,000
但是我一直很难想象

3258
01:42:52,000 --> 01:42:53,000
就是我也尝试过一下

3259
01:42:53,000 --> 01:42:55,000
但是还是很别扭

3260
01:42:55,000 --> 01:42:56,000
我不知道你怎么觉得

3261
01:42:57,000 --> 01:43:00,000
我其实在很长时间

3262
01:43:00,000 --> 01:43:02,000
在我比较小的时候写成绪

3263
01:43:02,000 --> 01:43:03,000
我是不知道怎么看

3264
01:43:03,000 --> 01:43:05,000
我那个时候我是用

3265
01:43:05,000 --> 01:43:11,000
单色的模式来写过很长时间的程序

3266
01:43:11,000 --> 01:43:13,000
甚至我应该跟你说过

3267
01:43:13,000 --> 01:43:17,000
就是我最开始学写程序的时候

3268
01:43:17,000 --> 01:43:19,000
是用笔写在纸上的

3269
01:43:19,000 --> 01:43:22,000
那个时候难道我要用不同的颜色

3270
01:43:22,000 --> 01:43:23,000
去写一段程序吗

3271
01:43:23,000 --> 01:43:24,000
所以也没什么

3272
01:43:24,000 --> 01:43:25,000
OK

3273
01:43:25,000 --> 01:43:26,000
而且你知道

3274
01:43:26,000 --> 01:43:29,000
所以我知道就是大神级程序原的先例

3275
01:43:29,000 --> 01:43:30,000
都是这样的

3276
01:43:30,000 --> 01:43:31,000
不

3277
01:43:31,000 --> 01:43:32,000
这跟大神不神没有关系

3278
01:43:32,000 --> 01:43:34,000
这只是一个有减入生意

3279
01:43:34,000 --> 01:43:35,000
有收入减大的问题

3280
01:43:35,000 --> 01:43:39,000
如果我的地态电脑是一台 Apple 2

3281
01:43:39,000 --> 01:43:42,000
然后 Apple 2 上面的 Basic 是

3282
01:43:42,000 --> 01:43:43,000
只有一种颜色的

3283
01:43:43,000 --> 01:43:45,000
蓝底白字好像还是

3284
01:43:45,000 --> 01:43:49,000
然后你可以在 Logo 和 Basic 模式之间切换

3285
01:43:49,000 --> 01:43:52,000
可是不管 Logo 还是 Basic 都没有一法高量

3286
01:43:52,000 --> 01:43:53,000
甚至在 Logo 这种

3287
01:43:53,000 --> 01:43:55,000
扩号和扩号的语言里面

3288
01:43:55,000 --> 01:43:57,000
扩号是没办法配对的

3289
01:43:57,000 --> 01:44:00,000
就是你必须靠肉眼去配对

3290
01:44:00,000 --> 01:44:03,000
看你的两个扩号是不是配等了

3291
01:44:03,000 --> 01:44:05,000
如果不等的话

3292
01:44:05,000 --> 01:44:06,000
也许你这一个程序

3293
01:44:06,000 --> 01:44:07,000
你就要迪巴一个下午

3294
01:44:07,000 --> 01:44:09,000
你都不知道缺失了

3295
01:44:09,000 --> 01:44:11,000
缺失扩号在哪

3296
01:44:11,000 --> 01:44:13,000
但是我也不知道

3297
01:44:13,000 --> 01:44:14,000
那个时候

3298
01:44:14,000 --> 01:44:16,000
我从来没有想过

3299
01:44:16,000 --> 01:44:20,000
没有的那个东西会让我造成什么障碍

3300
01:44:20,000 --> 01:44:22,000
OK

3301
01:44:22,000 --> 01:44:24,000
那如果你现在

3302
01:44:24,000 --> 01:44:26,000
就是我相信你应该是习惯了

3303
01:44:26,000 --> 01:44:27,000
这个语法高量

3304
01:44:27,000 --> 01:44:35,000
现在有时候可能也会觉得没有语法高量

3305
01:44:35,000 --> 01:44:36,000
是不太好的人生

3306
01:44:36,000 --> 01:44:37,000
就是有时候写

3307
01:44:37,000 --> 01:44:39,000
比如说写一个非常复杂的

3308
01:44:39,000 --> 01:44:41,000
尤其是打开

3309
01:44:41,000 --> 01:44:44,000
刚刚打开一个文件的时候

3310
01:44:44,000 --> 01:44:50,000
比如说某一段没有某一个文件打开的时候

3311
01:44:51,000 --> 01:44:55,000
他没有扩展名

3312
01:44:55,000 --> 01:44:55,000
打开之后

3313
01:44:55,000 --> 01:44:58,000
Vim 默认把它显示为单色的

3314
01:44:58,000 --> 01:45:00,000
我有时候可能要过一段时间

3315
01:45:00,000 --> 01:45:02,000
才会意识到这个东西没有语法高量

3316
01:45:02,000 --> 01:45:04,000
OK

3317
01:45:04,000 --> 01:45:05,000
这还蛮新鲜的

3318
01:45:05,000 --> 01:45:07,000
反正我现在就预计在这个桌上是这样子

3319
01:45:07,000 --> 01:45:09,000
就是我要去登录很多服务器

3320
01:45:09,000 --> 01:45:12,000
然后那时候我也不是说

3321
01:45:12,000 --> 01:45:15,000
在每个服务器上都配置我的 Vim 的那些东西

3322
01:45:15,000 --> 01:45:16,000
那懒嘛

3323
01:45:16,000 --> 01:45:16,000
还是因为

3324
01:45:16,000 --> 01:45:18,000
比如说你编辑一些配置文件

3325
01:45:19,000 --> 01:45:21,000
有时候他就没有这个语法高量

3326
01:45:21,000 --> 01:45:24,000
然后就觉得好不习惯

3327
01:45:24,000 --> 01:45:25,000
觉得他没有安全感

3328
01:45:25,000 --> 01:45:25,000
你知道吗

3329
01:45:25,000 --> 01:45:26,000
因为语法高量

3330
01:45:26,000 --> 01:45:27,000
他可以有时候可以

3331
01:45:27,000 --> 01:45:28,000
如果你看颜色不对

3332
01:45:28,000 --> 01:45:29,000
一般都是你语法错了

3333
01:45:29,000 --> 01:45:31,000
对

3334
01:45:31,000 --> 01:45:35,000
对语法高量毫无一般是有助于你发现

3335
01:45:35,000 --> 01:45:36,000
问题的

3336
01:45:36,000 --> 01:45:37,000
代表之中的问题了

3337
01:45:37,000 --> 01:45:37,000
对

3338
01:45:37,000 --> 01:45:41,000
然后就会有一种叫什么不安全的感觉

3339
01:45:41,000 --> 01:45:42,000
对

3340
01:45:42,000 --> 01:45:42,000
这算

3341
01:45:42,000 --> 01:45:43,000
这算

3342
01:45:43,000 --> 01:45:45,000
我是把语法高量做语法检查了

3343
01:45:45,000 --> 01:45:47,000
我觉得你们都有 paranoid

3344
01:45:48,000 --> 01:45:49,000
anyway

3345
01:45:49,000 --> 01:45:52,000
所以我一直很难想象

3346
01:45:52,000 --> 01:45:54,000
在现在这种情况下

3347
01:45:54,000 --> 01:45:55,000
放弃语法高量会怎么样

3348
01:45:55,000 --> 01:45:56,000
不过后来我想了一下

3349
01:45:56,000 --> 01:46:00,000
其实在购这个

3350
01:46:00,000 --> 01:46:02,000
如果你只写购程序的话

3351
01:46:02,000 --> 01:46:03,000
可能没有这个太大的障碍

3352
01:46:03,000 --> 01:46:06,000
因为你知道如果

3353
01:46:06,000 --> 01:46:08,000
就哪怕你没有语法高量

3354
01:46:08,000 --> 01:46:09,000
然后你

3355
01:46:09,000 --> 01:46:10,000
如果你配置你编辑

3356
01:46:10,000 --> 01:46:11,000
默认保存跑一下

3357
01:46:11,000 --> 01:46:12,000
跟购 format 的话

3358
01:46:12,000 --> 01:46:15,000
他是会提醒你哪里错了的

3359
01:46:15,000 --> 01:46:17,000
这个是编译器级别的检查

3360
01:46:17,000 --> 01:46:19,000
不是说只是从语法前面的检查

3361
01:46:20,000 --> 01:46:23,000
所以从这个角度来说

3362
01:46:23,000 --> 01:46:24,000
你没有语法编辑器

3363
01:46:24,000 --> 01:46:26,000
其实没有语法高量

3364
01:46:26,000 --> 01:46:27,000
其实也是挺安全的

3365
01:46:27,000 --> 01:46:28,000
起码写购

3366
01:46:28,000 --> 01:46:29,000
但是如果你是写拍桑

3367
01:46:29,000 --> 01:46:31,000
或者是想写 ruby 这种动态语言

3368
01:46:31,000 --> 01:46:32,000
就完全不行了

3369
01:46:32,000 --> 01:46:34,000
因为那种东西你不跑起来

3370
01:46:34,000 --> 01:46:35,000
或者说你跑起来

3371
01:46:35,000 --> 01:46:38,000
没有跑到带马那里去

3372
01:46:38,000 --> 01:46:40,000
可能都不会很好的发现问题

3373
01:46:41,000 --> 01:46:42,000
对

3374
01:46:42,000 --> 01:46:43,000
所以

3375
01:46:43,000 --> 01:46:43,000
是这样

3376
01:46:43,000 --> 01:46:45,000
所以我觉得这里还是有一点区别

3377
01:46:45,000 --> 01:46:47,000
也可能是为什么

3378
01:46:47,000 --> 01:46:47,000
像 rope hike

3379
01:46:47,000 --> 01:46:49,000
因为它也是 go 的做教

3380
01:46:51,000 --> 01:46:54,000
它能敢于用那个

3381
01:46:54,000 --> 01:46:57,000
acmi 来写这个程序

3382
01:46:57,000 --> 01:46:59,000
而不用担心写错

3383
01:46:59,000 --> 01:47:00,000
反正大多程序

3384
01:47:00,000 --> 01:47:02,000
应该是不会出错的

3385
01:47:02,000 --> 01:47:03,000
可能是这样

3386
01:47:04,000 --> 01:47:06,000
然后 acmi 在我看来

3387
01:47:06,000 --> 01:47:07,000
它有

3388
01:47:07,000 --> 01:47:08,000
就是它比较

3389
01:47:09,000 --> 01:47:10,000
hard call 的一点

3390
01:47:10,000 --> 01:47:13,000
就是它有点像 lisp

3391
01:47:13,000 --> 01:47:15,000
它的很多东西是可以

3392
01:47:16,000 --> 01:47:17,000
在运行时改变的

3393
01:47:17,000 --> 01:47:18,000
比如说

3394
01:47:18,000 --> 01:47:21,000
我们司空建冠的这样一个 layout

3395
01:47:21,000 --> 01:47:24,000
就是下面是一片可以编辑的区域

3396
01:47:24,000 --> 01:47:26,000
然后上面有对彩蛋栏

3397
01:47:26,000 --> 01:47:27,000
彩蛋栏里面的每个命令

3398
01:47:27,000 --> 01:47:31,000
比如说 edit view 或者 format

3399
01:47:33,000 --> 01:47:36,000
你会觉得点 edit

3400
01:47:36,000 --> 01:47:38,000
然后下面出现一个 drop down list

3401
01:47:38,000 --> 01:47:39,000
然后从里面选一个命令

3402
01:47:39,000 --> 01:47:40,000
是非常自然的事情

3403
01:47:40,000 --> 01:47:41,000
但是你有沒有想过

3404
01:47:41,000 --> 01:47:43,000
假如说

3405
01:47:44,000 --> 01:47:46,000
彩蛋栏这一行里面的每一个字符

3406
01:47:46,000 --> 01:47:47,000
也都是可以更改的

3407
01:47:49,000 --> 01:47:52,000
而 acmi 它就是这样一种编辑

3408
01:47:52,000 --> 01:47:52,000
acmi 的

3409
01:47:53,000 --> 01:47:55,000
你打开一个 buffer

3410
01:47:55,000 --> 01:47:56,000
或者是打开一个

3411
01:47:56,000 --> 01:47:59,000
编辑文件的区域的时候

3412
01:47:59,000 --> 01:48:02,000
它上面会有一排彩蛋栏原来的东西

3413
01:48:02,000 --> 01:48:04,000
而且它的确也是买彩蛋栏

3414
01:48:04,000 --> 01:48:05,000
比如说有 edit

3415
01:48:05,000 --> 01:48:07,000
有 dial 之类的

3416
01:48:07,000 --> 01:48:08,000
然后你比如说你点一下 edit

3417
01:48:08,000 --> 01:48:10,000
而且我记得应该是

3418
01:48:10,000 --> 01:48:11,000
对 acmi 是一个

3419
01:48:11,000 --> 01:48:14,000
一定要用三件鼠标才能操作的

3420
01:48:14,000 --> 01:48:15,000
编辑器

3421
01:48:15,000 --> 01:48:18,000
你用左键点一行文字是选中它

3422
01:48:18,000 --> 01:48:20,000
然后用中键点一行文字是

3423
01:48:20,000 --> 01:48:22,000
我猜应该是执行吧

3424
01:48:22,000 --> 01:48:25,000
然后用右键点又是有其他的功用

3425
01:48:25,000 --> 01:48:28,000
就是如果你用左键点一下

3426
01:48:28,000 --> 01:48:32,000
那个彩蛋栏里面的 edit

3427
01:48:32,000 --> 01:48:33,000
不会有任何方式

3428
01:48:33,000 --> 01:48:35,000
你只会把光标放在 edit 那边

3429
01:48:35,000 --> 01:48:37,000
然后此时你可以改变这个 edit

3430
01:48:37,000 --> 01:48:39,000
比如说你可以把 edit 这个词删掉

3431
01:48:39,000 --> 01:48:40,000
然后把它改成

3432
01:48:40,000 --> 01:48:43,000
比如说 dial

3433
01:48:43,000 --> 01:48:47,000
然后你再用你的中键去点一下这个 dial

3434
01:48:47,000 --> 01:48:48,000
你会发现

3435
01:48:49,000 --> 01:48:52,000
你原来在那个编辑区里面

3436
01:48:52,000 --> 01:48:53,000
被选中了一段文字

3437
01:48:53,000 --> 01:48:54,000
被删掉了

3438
01:48:54,000 --> 01:48:56,000
对

3439
01:48:56,000 --> 01:48:57,000
就是它是一个

3440
01:48:57,000 --> 01:49:02,000
它的所谓可定制的这么一个功能

3441
01:49:02,000 --> 01:49:06,000
被扩展到了用户界面本身

3442
01:49:06,000 --> 01:49:06,000
对

3443
01:49:06,000 --> 01:49:07,000
而且

3444
01:49:07,000 --> 01:49:11,000
所以它是一个可以编辑自己的编辑器

3445
01:49:11,000 --> 01:49:11,000
对

3446
01:49:11,000 --> 01:49:14,000
它不仅能够配置自己

3447
01:49:14,000 --> 01:49:15,000
而且能够编辑自己

3448
01:49:15,000 --> 01:49:19,000
这是非常非常先锋的一种使用方式

3449
01:49:19,000 --> 01:49:20,000
应该说

3450
01:49:20,000 --> 01:49:21,000
就像我说的

3451
01:49:21,000 --> 01:49:22,000
就像 List 一样

3452
01:49:22,000 --> 01:49:25,000
它的使用是如此灵活

3453
01:49:25,000 --> 01:49:28,000
一句人们不知道应该怎么使用它

3454
01:49:31,000 --> 01:49:32,000
对

3455
01:49:33,000 --> 01:49:34,000
所以其实你看

3456
01:49:34,000 --> 01:49:38,000
像他们做之前那个购物语言的那个什么

3457
01:49:38,000 --> 01:49:39,000
这个日期的展示

3458
01:49:39,000 --> 01:49:40,000
就觉得很奇怪

3459
01:49:40,000 --> 01:49:40,000
对吧

3460
01:49:40,000 --> 01:49:42,000
这种方式编辑也是很奇怪的

3461
01:49:43,000 --> 01:49:43,000
对

3462
01:49:43,000 --> 01:49:45,000
有时候我觉得这些比较

3463
01:49:45,000 --> 01:49:46,000
比较比较

3464
01:49:48,000 --> 01:49:50,000
UnalthoDuxo 的

3465
01:49:50,000 --> 01:49:52,000
就是非正统的方式

3466
01:49:52,000 --> 01:49:56,000
或者说非我们五倍平庸之人所能理解

3467
01:49:56,000 --> 01:49:58,000
想象出的特别的方式

3468
01:49:58,000 --> 01:49:59,000
有时候比较

3469
01:50:00,000 --> 01:50:01,000
非常的 pragmatic

3470
01:50:01,000 --> 01:50:03,000
有时候就非常的 alien

3471
01:50:03,000 --> 01:50:04,000
非常的

3472
01:50:05,000 --> 01:50:08,000
就非常奇异

3473
01:50:08,000 --> 01:50:10,000
有时候不知道是件好事还是坏事

3474
01:50:10,000 --> 01:50:12,000
但无论如何对于你的

3475
01:50:13,000 --> 01:50:16,000
跳出你的 comfortable zone 是有帮助的

3476
01:50:16,000 --> 01:50:17,000
对

3477
01:50:17,000 --> 01:50:18,000
就有时候你真的

3478
01:50:19,000 --> 01:50:22,000
如果你听到一个非常激进古怪

3479
01:50:22,000 --> 01:50:23,000
或者奇怪的观点

3480
01:50:23,000 --> 01:50:25,000
而且你有知道一个是一个

3481
01:50:25,000 --> 01:50:27,000
什么很厉害的人在这么做

3482
01:50:27,000 --> 01:50:29,000
你可能要放下所有成见

3483
01:50:29,000 --> 01:50:30,000
然后去看一下

3484
01:50:30,000 --> 01:50:31,000
想一想

3485
01:50:31,000 --> 01:50:33,000
就是所谓的叫什么

3486
01:50:33,000 --> 01:50:34,000
Give it five minutes

3487
01:50:34,000 --> 01:50:37,000
去想一下他为什么会这样

3488
01:50:37,000 --> 01:50:37,000
有什么

3489
01:50:37,000 --> 01:50:38,000
对

3490
01:50:38,000 --> 01:50:39,000
你就像一个风险投资人

3491
01:50:39,000 --> 01:50:42,000
然后进了一个站着精英的创业者

3492
01:50:42,000 --> 01:50:43,000
你要先听听他

3493
01:50:43,000 --> 01:50:44,000
到底要说什么不是

3494
01:50:45,000 --> 01:50:47,000
然后想想这个东西能不能成功

3495
01:50:47,000 --> 01:50:47,000
对

3496
01:50:47,000 --> 01:50:49,000
所以有时候会

3497
01:50:49,000 --> 01:50:51,000
你会学到一些完全不一样的

3498
01:50:51,000 --> 01:50:52,000
新鲜的一些东西

3499
01:50:52,000 --> 01:50:53,000
对

3500
01:50:53,000 --> 01:50:55,000
而且就像风险投资商一样

3501
01:50:55,000 --> 01:50:58,000
如果你接受了这个观点之后

3502
01:50:58,000 --> 01:50:58,000
你觉得

3503
01:50:58,000 --> 01:51:00,000
你愿意把你的时间

3504
01:51:00,000 --> 01:51:03,000
这一个资本投入进去

3505
01:51:03,000 --> 01:51:04,000
学习一下

3506
01:51:04,000 --> 01:51:06,000
投资在这个 idea 上面

3507
01:51:06,000 --> 01:51:09,000
也许将来的回报是非常高的

3508
01:51:09,000 --> 01:51:10,000
就好像

3509
01:51:10,000 --> 01:51:11,000
就比如说

3510
01:51:11,000 --> 01:51:14,000
就是我在 kura 上找到一个对比

3511
01:51:14,000 --> 01:51:17,000
那个 wim 和 emax 的答案里面

3512
01:51:17,000 --> 01:51:18,000
这个作者就说

3513
01:51:18,000 --> 01:51:21,000
你在 wim 里面的投资

3514
01:51:21,000 --> 01:51:24,000
会对你一生来说都是有不注意的

3515
01:51:24,000 --> 01:51:25,000
而且可以在

3516
01:51:25,000 --> 01:51:29,000
林立作中很多其他的那个工具里面

3517
01:51:29,000 --> 01:51:30,000
得到应用

3518
01:51:30,000 --> 01:51:31,000
比如说

3519
01:51:31,000 --> 01:51:32,000
最简单的一个例子

3520
01:51:32,000 --> 01:51:33,000
j 和 k

3521
01:51:34,000 --> 01:51:35,000
这个

3522
01:51:35,000 --> 01:51:36,000
你按下 j 是下一个

3523
01:51:36,000 --> 01:51:37,000
按下 k 是上一个

3524
01:51:37,000 --> 01:51:38,000
在

3525
01:51:38,000 --> 01:51:39,000
下一行上一行

3526
01:51:39,000 --> 01:51:41,000
在 wim 里面是这样

3527
01:51:41,000 --> 01:51:43,000
在 gmail 里面也是这样

3528
01:51:43,000 --> 01:51:43,000
对

3529
01:51:43,000 --> 01:51:46,000
gmail 里面如果你启用了一个叫什么

3530
01:51:46,000 --> 01:51:48,000
快捷键模式的话

3531
01:51:48,000 --> 01:51:50,000
你会发现有很多这种键榜定式

3532
01:51:50,000 --> 01:51:52,000
非常有 wim 风格

3533
01:51:52,000 --> 01:51:53,000
对

3534
01:51:53,000 --> 01:51:55,000
就是如果你学会了 wim 之后

3535
01:51:55,000 --> 01:51:58,000
你的经验是可以应用在很多

3536
01:51:58,000 --> 01:52:00,000
其他的工具上面的

3537
01:52:00,000 --> 01:52:00,000
而反过来

3538
01:52:00,000 --> 01:52:03,000
如果你把你的时间花在 emax 上面的话

3539
01:52:03,000 --> 01:52:06,000
你会发现你就局限在 emax 里面了

3540
01:52:06,000 --> 01:52:08,000
当然 emax 是一个非常庞的

3541
01:52:08,000 --> 01:52:09,000
广大的天地

3542
01:52:09,000 --> 01:52:13,000
但是你所有的知识就仅仅只是在 emax 内部

3543
01:52:13,000 --> 01:52:14,000
而而

3544
01:52:14,000 --> 01:52:16,000
但是部分原因也就是因为

3545
01:52:16,000 --> 01:52:17,000
Lisp 这个东西

3546
01:52:17,000 --> 01:52:19,000
对

3547
01:52:19,000 --> 01:52:19,000
这是一个

3548
01:52:19,000 --> 01:52:20,000
对

3549
01:52:20,000 --> 01:52:20,000
还有一个

3550
01:52:20,000 --> 01:52:21,000
那个

3551
01:52:21,000 --> 01:52:26,000
最早的那个 firefox 有一个插件叫做

3552
01:52:27,000 --> 01:52:28,000
vampirator 吧

3553
01:52:28,000 --> 01:52:29,000
应该是

3554
01:52:29,000 --> 01:52:33,000
就是可以让你的 firefox 的

3555
01:52:33,000 --> 01:52:35,000
你不用鼠标操作这个浏览器了

3556
01:52:35,000 --> 01:52:36,000
你可以用

3557
01:52:36,000 --> 01:52:37,000
秘密行

3558
01:52:37,000 --> 01:52:38,000
不是秘密行

3559
01:52:38,000 --> 01:52:40,000
就是 wim 快捷键的方式去操作它

3560
01:52:40,000 --> 01:52:41,000
来翻一下

3561
01:52:41,000 --> 01:52:42,000
你居然没有

3562
01:52:42,000 --> 01:52:43,000
你居然没有再用这种东西吗

3563
01:52:43,000 --> 01:52:44,000
我有

3564
01:52:44,000 --> 01:52:46,000
我要的 firefox 很早之前就在用这个

3565
01:52:46,000 --> 01:52:47,000
后来也有一个

3566
01:52:47,000 --> 01:52:47,000
不

3567
01:52:47,000 --> 01:52:49,000
在 chrome 下面也有

3568
01:52:49,000 --> 01:52:49,000
对

3569
01:52:49,000 --> 01:52:51,000
就是我一直都在用它

3570
01:52:51,000 --> 01:52:51,000
最开始

3571
01:52:51,000 --> 01:52:52,000
你现在还在用吗

3572
01:52:52,000 --> 01:52:53,000
在用一个叫做

3573
01:52:53,000 --> 01:52:56,000
最开始是用一个叫做 vimnum

3574
01:52:57,000 --> 01:52:59,000
后来现在用东西叫做 cvim

3575
01:52:59,000 --> 01:53:00,000
就是小写的 c

3576
01:53:00,000 --> 01:53:02,000
然后叫做 vim

3577
01:53:02,000 --> 01:53:03,000
就是 chromevim

3578
01:53:03,000 --> 01:53:04,000
可以理解

3579
01:53:04,000 --> 01:53:07,000
而且这个插件已经逆天到什么地步

3580
01:53:07,000 --> 01:53:09,000
就是它可以在里面

3581
01:53:09,000 --> 01:53:12,000
进入这个 visual mode

3582
01:53:12,000 --> 01:53:15,000
就是你用 j 向下移动

3583
01:53:15,000 --> 01:53:16,000
网页

3584
01:53:16,000 --> 01:53:17,000
然后用 f

3585
01:53:17,000 --> 01:53:19,000
然后你按下 f 之后

3586
01:53:19,000 --> 01:53:22,000
屏幕上所有的链接都会被高亮

3587
01:53:22,000 --> 01:53:25,000
然后每一个链接会有一个两个字母

3588
01:53:25,000 --> 01:53:26,000
到三个字母的组合

3589
01:53:26,000 --> 01:53:26,000
你按

3590
01:53:26,000 --> 01:53:27,000
然后你接下来按那两个字母

3591
01:53:27,000 --> 01:53:29,000
链接就会被打开

3592
01:53:29,000 --> 01:53:29,000
这个我叫

3593
01:53:29,000 --> 01:53:31,000
cvim 的 vampart 也有这些功能吗

3594
01:53:31,000 --> 01:53:32,000
对

3595
01:53:32,000 --> 01:53:34,000
然后最腻天的是你按下 v

3596
01:53:34,000 --> 01:53:36,000
就进入了 visual mode

3597
01:53:36,000 --> 01:53:37,000
在 visual mode 之下

3598
01:53:37,000 --> 01:53:40,000
你按 j 和 k 可以移动光标

3599
01:53:40,000 --> 01:53:41,000
对

3600
01:53:41,000 --> 01:53:43,000
然后在你移动光标同时

3601
01:53:43,000 --> 01:53:44,000
可以选中文字

3602
01:53:44,000 --> 01:53:46,000
然后按

3603
01:53:46,000 --> 01:53:49,000
这个时候再回到 normal mode

3604
01:53:49,000 --> 01:53:49,000
按一下 y

3605
01:53:49,000 --> 01:53:52,000
你就可以把刚才选中的文字

3606
01:53:52,000 --> 01:53:54,000
复制到简贴版里面

3607
01:53:54,000 --> 01:53:55,000
完全不像用鼠标

3608
01:53:55,000 --> 01:53:56,000
对

3609
01:53:56,000 --> 01:53:58,000
我之前用过非常长时间

3610
01:53:58,000 --> 01:53:59,000
那个 vibrator

3611
01:53:59,000 --> 01:54:02,000
后来切到那个 chrome

3612
01:54:02,000 --> 01:54:04,000
当时最早的时候 chrome 是没有这种插件的

3613
01:54:04,000 --> 01:54:05,000
也就没有用了

3614
01:54:05,000 --> 01:54:06,000
后来好像也就把这些事情

3615
01:54:06,000 --> 01:54:07,000
对

3616
01:54:07,000 --> 01:54:10,000
我是第一时间出现这样插件的时候就开始用

3617
01:54:10,000 --> 01:54:12,000
所以我一直非常关注

3618
01:54:12,000 --> 01:54:17,000
我可以凭着自己小白鼠的经验来

3619
01:54:17,000 --> 01:54:20,000
向大家拍着胸部推广 cvim 这个插件

3620
01:54:20,000 --> 01:54:23,000
一定绝对是所有的 cvim 对吧

3621
01:54:23,000 --> 01:54:23,000
对

3622
01:54:23,000 --> 01:54:24,000
对

3623
01:54:24,000 --> 01:54:29,000
所有的 vm 化 chrome 的插件里面最好用的一个

3624
01:54:29,000 --> 01:54:32,000
那个什么 safari 有类似这种东西

3625
01:54:34,000 --> 01:54:35,000
safari 有一个

3626
01:54:35,000 --> 01:54:37,000
但是觉得要死

3627
01:54:37,000 --> 01:54:37,000
对

3628
01:54:37,000 --> 01:54:39,000
这就是为什么有一天

3629
01:54:39,000 --> 01:54:43,000
刚生了有 semitage 后

3630
01:54:43,000 --> 01:54:47,000
用了大概四个小时的 safari

3631
01:54:47,000 --> 01:54:48,000
然后屁股尿流了

3632
01:54:48,000 --> 01:54:49,000
逃回了 chrome

3633
01:54:49,000 --> 01:54:51,000
就是因为完全不能用

3634
01:54:52,000 --> 01:54:53,000
我明白你的苦诛

3635
01:54:53,000 --> 01:54:55,000
因为我现在我现在相当长一段

3636
01:54:55,000 --> 01:54:57,000
safari 作为的主力浏览器了

3637
01:54:57,000 --> 01:55:00,000
但所谓主力就 60%左右的时间

3638
01:55:00,000 --> 01:55:04,000
因为很多时候要切到 chrome 连用 flash 插件

3639
01:55:04,000 --> 01:55:05,000
非常不幸

3640
01:55:06,000 --> 01:55:06,000
但是我发现

3641
01:55:06,000 --> 01:55:09,000
自从有多点触控的触控版之后

3642
01:55:10,000 --> 01:55:11,000
我就很少用那种方式

3643
01:55:12,000 --> 01:55:16,000
浏览网页的时候少使用键盘操作

3644
01:55:16,000 --> 01:55:19,000
不可是你觉得你真的觉得多点触控

3645
01:55:19,000 --> 01:55:20,000
要比用键盘方便吗

3646
01:55:22,000 --> 01:55:22,000
不会

3647
01:55:22,000 --> 01:55:23,000
就从销略上讲

3648
01:55:23,000 --> 01:55:25,000
肯定是不过好的

3649
01:55:25,000 --> 01:55:26,000
但是我懒

3650
01:55:26,000 --> 01:55:28,000
我发现我现在越来越懒了

3651
01:55:28,000 --> 01:55:30,000
就是懒得去碰他

3652
01:55:30,000 --> 01:55:32,000
然后去配置那么多东西

3653
01:55:32,000 --> 01:55:36,000
然后你可能是受了什么重的

3654
01:55:36,000 --> 01:55:38,000
如果是即便不用配置的话

3655
01:55:40,000 --> 01:55:42,000
多点触控

3656
01:55:42,000 --> 01:55:44,000
我就是我现在仍旧是

3657
01:55:44,000 --> 01:55:46,000
下意识的会去按空格键

3658
01:55:46,000 --> 01:55:49,000
向下翻页在浏览器里面

3659
01:55:49,000 --> 01:55:50,000
而不是用两指向下卷动

3660
01:55:50,000 --> 01:55:53,000
但是你要上上翻怎么办

3661
01:55:53,000 --> 01:55:54,000
你没办法上上翻

3662
01:55:55,000 --> 01:55:56,000
但是 99%的时间

3663
01:55:56,000 --> 01:55:58,000
你难道不都是在向下翻

3664
01:55:59,000 --> 01:56:00,000
有这么一个问题

3665
01:56:00,000 --> 01:56:01,000
就空格键他翻页

3666
01:56:01,000 --> 01:56:03,000
他那个高度是固定的

3667
01:56:03,000 --> 01:56:05,000
就是一次都是翻一瓶

3668
01:56:05,000 --> 01:56:07,000
可这难道不是一件好事吗

3669
01:56:07,000 --> 01:56:08,000
没有

3670
01:56:08,000 --> 01:56:09,000
所以我想把我

3671
01:56:09,000 --> 01:56:11,000
比如说你这一个网页

3672
01:56:11,000 --> 01:56:13,000
从上到下一个网页

3673
01:56:13,000 --> 01:56:14,000
我想把我

3674
01:56:14,000 --> 01:56:16,000
我先读到可能这个网页的下半部分

3675
01:56:16,000 --> 01:56:17,000
我有一种不好的习惯

3676
01:56:17,000 --> 01:56:19,000
我会想把我正在读的那一部分

3677
01:56:19,000 --> 01:56:22,000
自挪到屏幕的中间

3678
01:56:22,000 --> 01:56:23,000
就高度的中间来读

3679
01:56:23,000 --> 01:56:25,000
所以你是那个

3680
01:56:25,000 --> 01:56:27,000
T control 加 L 的

3681
01:56:27,000 --> 01:56:29,000
就是 emax 里面的 control 加 L

3682
01:56:29,000 --> 01:56:30,000
我怎么会知道

3683
01:56:31,000 --> 01:56:33,000
emax 的快捷键

3684
01:56:33,000 --> 01:56:34,000
而不知道 vim 里面

3685
01:56:34,000 --> 01:56:35,000
没有这个功能

3686
01:56:35,000 --> 01:56:35,000
也可以

3687
01:56:35,000 --> 01:56:37,000
vim 的快捷键是什么

3688
01:56:37,000 --> 01:56:38,000
哈

3689
01:56:38,000 --> 01:56:40,000
vim 里我还这个用的吗

3690
01:56:40,000 --> 01:56:40,000
你也不记得

3691
01:56:40,000 --> 01:56:42,000
哦你也不记得

3692
01:56:42,000 --> 01:56:43,000
但是在 vim

3693
01:56:43,000 --> 01:56:44,000
在 emax 里面

3694
01:56:44,000 --> 01:56:46,000
这个功能是 T control 加 L

3695
01:56:46,000 --> 01:56:47,000
vim 一把我记得可以试一下

3696
01:56:48,000 --> 01:56:49,000
我试一下

3697
01:56:49,000 --> 01:56:52,000
就是把当前好像移动到屏幕的中间

3698
01:56:52,000 --> 01:56:52,000
对

3699
01:56:52,000 --> 01:56:54,000
我知道你说的那个东西

3700
01:56:54,000 --> 01:56:55,000
如果没记错的话

3701
01:56:55,000 --> 01:56:57,000
应该是这个

3702
01:56:57,000 --> 01:56:59,000
不是一直下一行

3703
01:56:59,000 --> 01:57:00,000
还是 J

3704
01:57:00,000 --> 01:57:02,000
问一下这些记不清楚

3705
01:57:02,000 --> 01:57:02,000
middle 吧

3706
01:57:02,000 --> 01:57:03,000
对

3707
01:57:03,000 --> 01:57:04,000
看想不想

3708
01:57:04,000 --> 01:57:05,000
anyway

3709
01:57:05,000 --> 01:57:06,000
就是

3710
01:57:06,000 --> 01:57:07,000
就我照这个习惯

3711
01:57:07,000 --> 01:57:08,000
其实效率挺低的

3712
01:57:08,000 --> 01:57:10,000
但是就是手键

3713
01:57:10,000 --> 01:57:12,000
忍不住要去拨弄一下这个触碰板

3714
01:57:12,000 --> 01:57:13,000
而且

3715
01:57:13,000 --> 01:57:14,000
如果你用触控板的话

3716
01:57:14,000 --> 01:57:16,000
你可以很方便的

3717
01:57:16,000 --> 01:57:17,000
因为这个时候这张网

3718
01:57:17,000 --> 01:57:19,000
就特别是在 Mac 上面下

3719
01:57:19,000 --> 01:57:19,000
哈

3720
01:57:19,000 --> 01:57:21,000
这个网页的这个流畅程度

3721
01:57:21,000 --> 01:57:22,000
就像一张纸一样

3722
01:57:22,000 --> 01:57:23,000
你可以摆到

3723
01:57:23,000 --> 01:57:26,000
你想要的任何一个像素的位置和精度

3724
01:57:26,000 --> 01:57:27,000
吗

3725
01:57:27,000 --> 01:57:29,000
所以我觉得这个时候还蛮好的

3726
01:57:29,000 --> 01:57:32,000
所以现在我就一直在用触摸板

3727
01:57:32,000 --> 01:57:34,000
再去浏览网页去划来划去

3728
01:57:34,000 --> 01:57:35,000
而且又是那个 safari 面

3729
01:57:35,000 --> 01:57:36,000
可以用这个

3730
01:57:36,000 --> 01:57:40,000
叫什么左划右划去回退那些嘛

3731
01:57:40,000 --> 01:57:41,000
chrome 里面可以

3732
01:57:41,000 --> 01:57:43,000
the chrome 里面没有 safari

3733
01:57:43,000 --> 01:57:44,000
只过视觉效果不适合

3734
01:57:44,000 --> 01:57:45,000
不是不是

3735
01:57:45,000 --> 01:57:46,000
我觉得它的那个

3736
01:57:46,000 --> 01:57:48,000
对这个触摸板的反馈

3737
01:57:48,000 --> 01:57:49,000
跟 safari 是不一样的

3738
01:57:49,000 --> 01:57:50,000
对有点 buggy

3739
01:57:50,000 --> 01:57:52,000
对很奇怪我不知道为什么

3740
01:57:52,000 --> 01:57:54,000
但是 safari 的那个感觉要流畅得多

3741
01:57:54,000 --> 01:57:55,000
然后我很喜欢

3742
01:57:55,000 --> 01:57:56,000
我想起来了

3743
01:57:56,000 --> 01:57:58,000
对在 vim 里面这个功能是

3744
01:57:58,000 --> 01:57:59,000
v.

3745
01:57:59,000 --> 01:58:01,000
v.

3746
01:58:01,000 --> 01:58:01,000
对

3747
01:58:01,000 --> 01:58:04,000
v.是把当前行

3748
01:58:04,000 --> 01:58:06,000
就是 cursor 所在当前行

3749
01:58:06,000 --> 01:58:08,000
挪到屏幕的中间

3750
01:58:08,000 --> 01:58:09,000
是这样吗

3751
01:58:09,000 --> 01:58:10,000
对

3752
01:58:10,000 --> 01:58:11,000
哎真的吗

3753
01:58:11,000 --> 01:58:12,000
啊 ok

3754
01:58:12,000 --> 01:58:16,000
可见我这个功能也是不常用的

3755
01:58:16,000 --> 01:58:16,000
ok

3756
01:58:16,000 --> 01:58:18,000
对

3757
01:58:18,000 --> 01:58:20,000
刚才解释那个问题

3758
01:58:20,000 --> 01:58:21,000
就是其实我现在越来越懒

3759
01:58:21,000 --> 01:58:24,000
能系统原生的就用系统原生的

3760
01:58:24,000 --> 01:58:25,000
懒得去配置了

3761
01:58:25,000 --> 01:58:26,000
对

3762
01:58:26,000 --> 01:58:29,000
对

3763
01:58:29,000 --> 01:58:31,000
其实我们说了

3764
01:58:31,000 --> 01:58:32,000
windows

3765
01:58:32,000 --> 01:58:33,000
我们说了

3766
01:58:33,000 --> 01:58:35,000
mac 和 windows 下面的文明

3767
01:58:35,000 --> 01:58:36,000
原型呢

3768
01:58:36,000 --> 01:58:39,000
linux 下面你会用什么来编辑文件呢

3769
01:58:39,000 --> 01:58:42,000
就是假如你用 linux 图形版的话

3770
01:58:42,000 --> 01:58:43,000
还是 vim

3771
01:58:45,000 --> 01:58:48,000
那有没有什么初学者友好的编辑性

3772
01:58:48,000 --> 01:58:49,000
哼

3773
01:58:49,000 --> 01:58:51,000
它有一个 g edit

3774
01:58:51,000 --> 01:58:52,000
我记得

3775
01:58:52,000 --> 01:58:53,000
无帮图是带的

3776
01:58:53,000 --> 01:58:53,000
对

3777
01:58:53,000 --> 01:58:55,000
g edit 是一个非常费的编辑

3778
01:58:55,000 --> 01:58:56,000
要我说的

3779
01:58:56,000 --> 01:58:58,000
你要初学者那么高级强大的编辑器

3780
01:58:58,000 --> 01:59:00,000
它也可以找不着版

3781
01:59:00,000 --> 01:59:01,000
找不着方向吗

3782
01:59:03,000 --> 01:59:03,000
好吧

3783
01:59:03,000 --> 01:59:04,000
对吧

3784
01:59:04,000 --> 01:59:06,000
可是我觉得 g edit 就在你像 note pad

3785
01:59:06,000 --> 01:59:08,000
可能就一开始就不应该是

3786
01:59:08,000 --> 01:59:09,000
我觉得它比 note pad 好多了

3787
01:59:09,000 --> 01:59:09,000
好吧

3788
01:59:09,000 --> 01:59:10,000
你这样

3789
01:59:10,000 --> 01:59:12,000
你这样采它真的好吗

3790
01:59:12,000 --> 01:59:13,000
好吧

3791
01:59:13,000 --> 01:59:17,000
还有一个叫什么 nano

3792
01:59:17,000 --> 01:59:19,000
nano

3793
01:59:19,000 --> 01:59:21,000
nano 可以叫什么

3794
01:59:21,000 --> 01:59:23,000
起概版 emax

3795
01:59:23,000 --> 01:59:25,000
nano pickle

3796
01:59:25,000 --> 01:59:25,000
这些

3797
01:59:25,000 --> 01:59:27,000
就像 microsoft

3798
01:59:27,000 --> 01:59:28,000
noose of

3799
01:59:28,000 --> 01:59:30,000
然后 nano 下面还有个 pico

3800
01:59:30,000 --> 01:59:31,000
对

3801
01:59:31,000 --> 01:59:32,000
这些

3802
01:59:32,000 --> 01:59:33,000
一个一个比小

3803
01:59:33,000 --> 01:59:35,000
那个就纯粹是给

3804
01:59:35,000 --> 01:59:39,000
就是千年等一回配置

3805
01:59:39,000 --> 01:59:40,000
一个配置文件的时候用的

3806
01:59:41,000 --> 01:59:42,000
而且真的很小

3807
01:59:43,000 --> 01:59:44,000
对

3808
01:59:44,000 --> 01:59:45,000
nano 是非常非常小

3809
01:59:45,000 --> 01:59:46,000
但我

3810
01:59:46,000 --> 01:59:48,000
我每次用 nano 都有一种

3811
01:59:48,000 --> 01:59:50,000
我到底在用什么的错觉

3812
01:59:50,000 --> 01:59:51,000
我到底是在干嘛

3813
01:59:51,000 --> 01:59:53,000
起概版 emax 什么都说了吗

3814
01:59:54,000 --> 01:59:54,000
对

3815
01:59:54,000 --> 01:59:55,000
可是

3816
01:59:55,000 --> 01:59:58,000
就它只有最基本的 emax 的键榜地

3817
01:59:58,000 --> 02:00:01,000
没有任何可以刻产的更的

3818
02:00:01,000 --> 02:00:02,000
对

3819
02:00:02,000 --> 02:00:03,000
就我何必如此呢

3820
02:00:03,000 --> 02:00:06,000
我只是要立刻退出这个盖子编辑器

3821
02:00:06,000 --> 02:00:09,000
然后然后设定一下 edits 编辑就可以

3822
02:00:09,000 --> 02:00:10,000
因为它小了

3823
02:00:10,000 --> 02:00:13,000
它可以在很多这种发行版里面

3824
02:00:13,000 --> 02:00:16,000
作为一个最最基础的编辑器在用

3825
02:00:17,000 --> 02:00:18,000
可是 V 也不大

3826
02:00:18,000 --> 02:00:19,000
就像

3827
02:00:19,000 --> 02:00:21,000
就是 mx 上面的默认 Vim

3828
02:00:21,000 --> 02:00:23,000
我刚才查了一下是 1.5 兆

3829
02:00:23,000 --> 02:00:25,000
然后 emax 24 兆

3830
02:00:25,000 --> 02:00:27,000
你这句你用兆来衡量了

3831
02:00:27,000 --> 02:00:27,000
人家就

3832
02:00:27,000 --> 02:00:29,000
然后 pico 是 k 是吧

3833
02:00:29,000 --> 02:00:30,000
要用 kb 来衡量

3834
02:00:31,000 --> 02:00:31,000
OK

3835
02:00:31,000 --> 02:00:34,000
还是有很大的数量级的差异的在里面

3836
02:00:34,000 --> 02:00:35,000
所以我还是能理解

3837
02:00:35,000 --> 02:00:36,000
就是有时候

3838
02:00:36,000 --> 02:00:38,000
比如说它根本就不需要编辑什么

3839
02:00:38,000 --> 02:00:39,000
就是临时可能改

3840
02:00:40,000 --> 02:00:41,000
配置文件某一个字符

3841
02:00:41,000 --> 02:00:42,000
或者某一个

3842
02:00:42,000 --> 02:00:43,000
改移行

3843
02:00:43,000 --> 02:00:43,000
对

3844
02:00:43,000 --> 02:00:47,000
所以它根本也就不需要那么多麻烦的功能

3845
02:00:47,000 --> 02:00:48,000
就其实也还可以理解

3846
02:00:48,000 --> 02:00:50,000
OK

3847
02:00:50,000 --> 02:00:51,000
不需要

3848
02:00:51,000 --> 02:00:52,000
可是不需要麻烦的功能

3849
02:00:52,000 --> 02:00:54,000
你你干嘛要上 lux

3850
02:00:55,000 --> 02:00:57,000
有什么办法

3851
02:00:57,000 --> 02:00:57,000
对

3852
02:00:59,000 --> 02:00:59,000
对

3853
02:00:59,000 --> 02:01:02,000
我们基本上聊完了编辑器

3854
02:01:02,000 --> 02:01:02,000
对

3855
02:01:02,000 --> 02:01:05,000
可以终于终于进入

3856
02:01:05,000 --> 02:01:07,000
这节目已经过去到三分之三的时候

3857
02:01:07,000 --> 02:01:11,000
终于可以进入我们的下一个环节

3858
02:01:11,000 --> 02:01:13,000
就是 IDE 了

3859
02:01:13,000 --> 02:01:15,000
我不知道

3860
02:01:15,000 --> 02:01:16,000
这个怎么同和讲起

3861
02:01:16,000 --> 02:01:19,000
其实首先我自己用的 IDE

3862
02:01:19,000 --> 02:01:21,000
用的非常非常少

3863
02:01:21,000 --> 02:01:22,000
OK

3864
02:01:22,000 --> 02:01:23,000
我是因为工作原因

3865
02:01:23,000 --> 02:01:24,000
不得不用 IDE

3866
02:01:24,000 --> 02:01:27,000
所以你在工作中哪个 eclipse

3867
02:01:27,000 --> 02:01:30,000
我用 eclipse 和 xcode

3868
02:01:30,000 --> 02:01:31,000
OK

3869
02:01:31,000 --> 02:01:33,000
因为我讲一下感受

3870
02:01:34,000 --> 02:01:37,000
用 eclipse 的时候

3871
02:01:37,000 --> 02:01:38,000
感觉在地狱

3872
02:01:38,000 --> 02:01:42,000
用 xcode 的时候好像回到了天

3873
02:01:42,000 --> 02:01:45,000
天大还是太狂热了

3874
02:01:45,000 --> 02:01:47,000
我们可以这样说 xcode 只有两个

3875
02:01:47,000 --> 02:01:52,000
xcode 就先说 vizual studio 好

3876
02:01:52,000 --> 02:01:56,000
vizual studio 作为 windows 上的老牌

3877
02:01:56,000 --> 02:02:00,000
或者说甚至说是龙头老大的 IDE

3878
02:02:00,000 --> 02:02:02,000
它有很多很多版本对吧

3879
02:02:02,000 --> 02:02:02,000
对

3880
02:02:02,000 --> 02:02:04,000
有 ultimate 版本

3881
02:02:04,000 --> 02:02:05,000
有 prinium 版本

3882
02:02:05,000 --> 02:02:06,000
有 testpro 版本

3883
02:02:06,000 --> 02:02:07,000
有 pro 版本

3884
02:02:07,000 --> 02:02:08,000
还有什么 express addition

3885
02:02:08,000 --> 02:02:09,000
whatever

3886
02:02:09,000 --> 02:02:12,000
所以他们有什么区别吗

3887
02:02:12,000 --> 02:02:12,000
对

3888
02:02:12,000 --> 02:02:13,000
其实是有区别的

3889
02:02:13,000 --> 02:02:14,000
它有一个

3890
02:02:14,000 --> 02:02:16,000
它专门有 yea 一个 metrics

3891
02:02:16,000 --> 02:02:20,000
来告诉你每一个版本之间有什么样具体的差别

3892
02:02:20,000 --> 02:02:25,000
比如说 ultimate 有所谓的 record tracing 功能

3893
02:02:25,000 --> 02:02:29,000
就是你可以把用户的交互录下来

3894
02:02:29,000 --> 02:02:32,000
然后重新播放用户的交互

3895
02:02:32,000 --> 02:02:35,000
然后在播放的共生中去 deba

3896
02:02:35,000 --> 02:02:35,000
什么

3897
02:02:35,000 --> 02:02:36,000
之类

3898
02:02:36,000 --> 02:02:37,000
匪夷所思

3899
02:02:37,000 --> 02:02:40,000
放放的角用的都在 ultimate 里面有所体现

3900
02:02:40,000 --> 02:02:43,000
然后 pro 版本基本上是最亲民的一个版本

3901
02:02:43,000 --> 02:02:46,000
但仍就是要的钱的

3902
02:02:46,000 --> 02:02:46,000
一个

3903
02:02:46,000 --> 02:02:48,000
我记得它有一个免费的针对学生的版本

3904
02:02:48,000 --> 02:02:49,000
对

3905
02:02:49,000 --> 02:02:50,000
什么

3906
02:02:50,000 --> 02:02:51,000
针对学生

3907
02:02:51,000 --> 02:02:53,000
你是说 express addition 吗

3908
02:02:53,000 --> 02:02:53,000
还是

3909
02:02:53,000 --> 02:02:54,000
就叫 express

3910
02:02:54,000 --> 02:02:56,000
express 免费的吗

3911
02:02:56,000 --> 02:02:57,000
express addition

3912
02:02:57,000 --> 02:02:58,000
可是并不是针对学生

3913
02:02:58,000 --> 02:03:01,000
它只是针对那些

3914
02:03:01,000 --> 02:03:02,000
我不知道怎么形容

3915
02:03:02,000 --> 02:03:04,000
因为其实微软给

3916
02:03:04,000 --> 02:03:06,000
对

3917
02:03:06,000 --> 02:03:07,000
微软给边机器

3918
02:03:07,000 --> 02:03:10,000
微软给 IDE 定一个价格

3919
02:03:10,000 --> 02:03:11,000
或者说微软 IDE 是要钱的

3920
02:03:11,000 --> 02:03:13,000
在我们小时候

3921
02:03:13,000 --> 02:03:14,000
在我小时候

3922
02:03:14,000 --> 02:03:15,000
看起来好像是天津第一的事情

3923
02:03:15,000 --> 02:03:17,000
因为 microsoft 不就是这样

3924
02:03:17,000 --> 02:03:18,000
什么东西要钱

3925
02:03:18,000 --> 02:03:21,000
可是不就是因为这个

3926
02:03:21,000 --> 02:03:22,000
大家才去选择利用宿

3927
02:03:22,000 --> 02:03:25,000
可是现在已经 2014 年了

3928
02:03:25,000 --> 02:03:28,000
microsoft 扔进我靠卖 IDE 来赚钱

3929
02:03:28,000 --> 02:03:30,000
我觉得这个是比较廉仰费解的一件事情

3930
02:03:30,000 --> 02:03:34,000
它这些的购买者大部分是企业

3931
02:03:34,000 --> 02:03:36,000
所以反正起有钱

3932
02:03:36,000 --> 02:03:37,000
该宰就宰了

3933
02:03:39,000 --> 02:03:41,000
但可是早期

3934
02:03:41,000 --> 02:03:42,000
好吧

3935
02:03:42,000 --> 02:03:42,000
对吧

3936
02:03:42,000 --> 02:03:44,000
我也不知道该怎么

3937
02:03:44,000 --> 02:03:45,000
问题在于

3938
02:03:47,000 --> 02:03:48,000
对你觉得它应该免费吗

3939
02:03:48,000 --> 02:03:49,000
还是怎么样

3940
02:03:49,000 --> 02:03:53,000
我是觉得作为一个开发工具来说

3941
02:03:53,000 --> 02:03:55,000
难道更多的开发者

3942
02:03:55,000 --> 02:03:57,000
为你开发出更多的 app 来说

3943
02:03:57,000 --> 02:04:00,000
难道不应该是对你这个平台的注意吗

3944
02:04:00,000 --> 02:04:03,000
为什么要为开发工具收费呢

3945
02:04:03,000 --> 02:04:04,000
这是一个好问题

3946
02:04:04,000 --> 02:04:07,000
怎么你还记得 Steve Barmore

3947
02:04:07,000 --> 02:04:09,000
那个 developer developer developer

3948
02:04:09,000 --> 02:04:10,000
developer developer

3949
02:04:10,000 --> 02:04:13,000
然后一窝下面还有汉

3950
02:04:13,000 --> 02:04:14,000
但是我们要

3951
02:04:14,000 --> 02:04:15,000
但是你买个编辑

3952
02:04:15,000 --> 02:04:17,000
我们说你 300 刀

3953
02:04:17,000 --> 02:04:17,000
对

3954
02:04:17,000 --> 02:04:18,000
没错

3955
02:04:18,000 --> 02:04:18,000
what the fuck

3956
02:04:18,000 --> 02:04:20,000
应该 express 版本

3957
02:04:20,000 --> 02:04:21,000
应该是免费的

3958
02:04:21,000 --> 02:04:22,000
就是可以

3959
02:04:22,000 --> 02:04:23,000
对 express 版本是免费的

3960
02:04:23,000 --> 02:04:25,000
但是 express 不能装插件吗

3961
02:04:25,000 --> 02:04:26,000
这就是这个意思

3962
02:04:26,000 --> 02:04:27,000
就是

3963
02:04:28,000 --> 02:04:28,000
对

3964
02:04:28,000 --> 02:04:30,000
我的毕业设计是用

3965
02:04:30,000 --> 02:04:32,000
那个 syshop 写的

3966
02:04:32,000 --> 02:04:33,000
然后我当时用的应该就是

3967
02:04:33,000 --> 02:04:35,000
syshop 的 express edition

3968
02:04:35,000 --> 02:04:36,000
OK

3969
02:04:36,000 --> 02:04:37,000
因为我也不知道

3970
02:04:37,000 --> 02:04:38,000
我们学校可能是有

3971
02:04:38,000 --> 02:04:39,000
对对对

3972
02:04:39,000 --> 02:04:41,000
但只不过可能晚了 10 年

3973
02:04:41,000 --> 02:04:44,000
就是是 10 年前的版本之类的

3974
02:04:44,000 --> 02:04:45,000
然后 downets 那套东西

3975
02:04:45,000 --> 02:04:47,000
刚刚流行起来

3976
02:04:47,000 --> 02:04:48,000
根本还没有

3977
02:04:48,000 --> 02:04:50,000
因为我是从

3978
02:04:50,000 --> 02:04:52,000
visual basic

3979
02:04:52,000 --> 02:04:53,000
vizual basic

3980
02:04:53,000 --> 02:04:55,000
每次都要说 visual basic 是什么

3981
02:04:55,000 --> 02:04:57,000
就每次都是

3982
02:04:58,000 --> 02:05:00,000
暴露了

3983
02:05:00,000 --> 02:05:01,000
被压抑的这个

3984
02:05:01,000 --> 02:05:03,000
这个欲望就是 vizual basic

3985
02:05:03,000 --> 02:05:04,000
对

3986
02:05:04,000 --> 02:05:07,000
我最开始是用 vizualc++ 6.0 吗

3987
02:05:07,000 --> 02:05:08,000
应该是

3988
02:05:08,000 --> 02:05:10,000
后来用 7.0

3989
02:05:10,000 --> 02:05:12,000
然后当 downets 出来之后立刻抛弃了

3990
02:05:12,000 --> 02:05:13,000
现在大家去用 downets

3991
02:05:13,000 --> 02:05:15,000
因为觉得 syshop 当时

3992
02:05:15,000 --> 02:05:17,000
真觉得 syshop 是逆天级别的

3993
02:05:17,000 --> 02:05:19,000
那个好用的

3994
02:05:20,000 --> 02:05:20,000
对

3995
02:05:20,000 --> 02:05:21,000
因为那个时候

3996
02:05:21,000 --> 02:05:22,000
现在也是

3997
02:05:22,000 --> 02:05:25,000
现在它还是一个设计的非常好

3998
02:05:25,000 --> 02:05:26,000
就

3999
02:05:26,000 --> 02:05:28,000
起码有 85 分吧

4000
02:05:28,000 --> 02:05:28,000
对

4001
02:05:28,000 --> 02:05:29,000
对

4002
02:05:29,000 --> 02:05:31,000
是一个非常谨慎于

4003
02:05:33,000 --> 02:05:34,000
此处

4004
02:05:34,000 --> 02:05:36,000
填入你最喜欢的一个

4005
02:05:36,000 --> 02:05:36,000
对

4006
02:05:36,000 --> 02:05:37,000
是

4007
02:05:37,000 --> 02:05:39,000
谨慎于 Dollar Language 的一年

4008
02:05:41,000 --> 02:05:42,000
对

4009
02:05:42,000 --> 02:05:44,000
因为那个时候我还挺喜欢 Pascal

4010
02:05:44,000 --> 02:05:45,000
就是 Delphi 的

4011
02:05:45,000 --> 02:05:48,000
然后 Delphi 的那个作者跑去

4012
02:05:48,000 --> 02:05:49,000
做了 syshop

4013
02:05:49,000 --> 02:05:52,000
我就觉得 syshop 应该是 next generation

4014
02:05:53,000 --> 02:05:56,000
黑 day language

4015
02:05:56,000 --> 02:05:57,000
但是

4016
02:05:57,000 --> 02:05:57,000
对

4017
02:05:57,000 --> 02:06:00,000
那个时候谁能想到自己有一天会

4018
02:06:00,000 --> 02:06:01,000
彻底转向

4019
02:06:01,000 --> 02:06:02,000
彻底转向 mac

4020
02:06:02,000 --> 02:06:04,000
OK

4021
02:06:04,000 --> 02:06:05,000
那一会这都是后话

4022
02:06:05,000 --> 02:06:07,000
就那个时候觉得

4023
02:06:08,000 --> 02:06:12,000
为什么我用 v 軟的东西

4024
02:06:12,000 --> 02:06:14,000
开发软件

4025
02:06:14,000 --> 02:06:15,000
v 軟还要向我收钱

4026
02:06:15,000 --> 02:06:17,000
其实现在我觉得它政策就这样子

4027
02:06:17,000 --> 02:06:21,000
比如说现在很多它对这种大学有这种

4028
02:06:21,000 --> 02:06:23,000
就是它现在叫什么 Dream Spark

4029
02:06:23,000 --> 02:06:24,000
这个项目以前叫做

4030
02:06:24,000 --> 02:06:24,000
对 Dream Spark

4031
02:06:24,000 --> 02:06:27,000
以前叫做 academy alliance

4032
02:06:27,000 --> 02:06:29,000
就是你如果你是大学的学生

4033
02:06:29,000 --> 02:06:31,000
然后至少你是懂这个软工或者是 CS 的

4034
02:06:31,000 --> 02:06:34,000
它可以去系里面申请一个账号

4035
02:06:34,000 --> 02:06:37,000
可以免费下载 v 软的大部分产品

4036
02:06:37,000 --> 02:06:38,000
比如像什么 office

4037
02:06:38,000 --> 02:06:38,000
操作系统

4038
02:06:38,000 --> 02:06:42,000
还有这种开发工具一套都是可以免费拿的

4039
02:06:42,000 --> 02:06:44,000
然后我记得 dream spark 曾几何时

4040
02:06:44,000 --> 02:06:48,000
是各个高校基本上是趋势弱务的一个东西

4041
02:06:48,000 --> 02:06:51,000
但是现在据说是 v 软的销售代表

4042
02:06:51,000 --> 02:06:53,000
要去高校里面求说

4043
02:06:53,000 --> 02:06:54,000
哎呀跟我们签一个吧

4044
02:06:54,000 --> 02:06:56,000
我们也费给你们

4045
02:06:56,000 --> 02:06:58,000
你们只需要搭设一下

4046
02:06:58,000 --> 02:06:59,000
就什么可以了

4047
02:06:59,000 --> 02:07:03,000
甚至是你们所有的 access 都可以在我们这边拖管

4048
02:07:03,000 --> 02:07:04,000
什么的

4049
02:07:04,000 --> 02:07:07,000
现在 dream spark 好像真的已经不那么

4050
02:07:07,000 --> 02:07:10,000
v 软现在非常适合

4051
02:07:10,000 --> 02:07:13,000
一样真的渐渐淡出

4052
02:07:13,000 --> 02:07:16,000
现在的显学是学什么 objc

4053
02:07:16,000 --> 02:07:17,000
然后开发 app

4054
02:07:17,000 --> 02:07:17,000
所以

4055
02:07:17,000 --> 02:07:19,000
不我觉得这跟显学没有关系

4056
02:07:19,000 --> 02:07:25,000
比如说我们平时谈论的什么 linel 的

4057
02:07:25,000 --> 02:07:29,000
或者是 digital ocean 这些 vps 提供商们

4058
02:07:29,000 --> 02:07:33,000
有哪家是提供 dotnet 环境的吗

4059
02:07:33,000 --> 02:07:33,000
没有啊

4060
02:07:33,000 --> 02:07:37,000
你说服务器吗

4061
02:07:37,000 --> 02:07:37,000
对

4062
02:07:37,000 --> 02:07:42,000
vps 提供商有谁家是在提供服务端的 vrm 环境的

4063
02:07:42,000 --> 02:07:45,000
他是有 windows server 可以用的

4064
02:07:45,000 --> 02:07:46,000
不过要贵一些

4065
02:07:46,000 --> 02:07:47,000
有多少呢

4066
02:07:47,000 --> 02:07:48,000
1%

4067
02:07:49,000 --> 02:07:49,000
对

4068
02:07:49,000 --> 02:07:51,000
我们接触的应该不是很多

4069
02:07:51,000 --> 02:07:52,000
我觉得感觉这一步

4070
02:07:52,000 --> 02:07:55,000
就是用因为要跑那些大部分还是企业的场合

4071
02:07:55,000 --> 02:07:56,000
感觉比较多一点

4072
02:07:56,000 --> 02:07:58,000
但有一个例外就是那个 start over flow

4073
02:07:58,000 --> 02:07:59,000
对

4074
02:07:59,000 --> 02:08:01,000
对

4075
02:08:01,000 --> 02:08:02,000
你这样确实这是一个问题

4076
02:08:02,000 --> 02:08:06,000
就在我们所谓的 web app 星期的这个时间

4077
02:08:06,000 --> 02:08:10,000
vrm 是输掉了这个市场的吗

4078
02:08:10,000 --> 02:08:11,000
对

4079
02:08:11,000 --> 02:08:16,000
他已经 3 号变得非常的无关紧要了

4080
02:08:16,000 --> 02:08:17,000
对

4081
02:08:17,000 --> 02:08:19,000
你要我现在去回忆自己

4082
02:08:19,000 --> 02:08:21,000
就是有一天

4083
02:08:21,000 --> 02:08:22,000
这几天我在反思

4084
02:08:22,000 --> 02:08:24,000
就是我在上次节目里面说到

4085
02:08:24,000 --> 02:08:28,000
自己花在 vrm 上面的时间都操作掉了

4086
02:08:28,000 --> 02:08:30,000
真的是这样吗

4087
02:08:30,000 --> 02:08:37,000
就是我真的后悔自己曾经努力学过

4088
02:08:37,000 --> 02:08:40,000
windows 的这一套相关技术吗

4089
02:08:40,000 --> 02:08:40,000
什么

4090
02:08:40,000 --> 02:08:42,000
我也啃过厚厚的那本

4091
02:08:42,000 --> 02:08:46,000
那个侯杰翻的什么深入显著 mfc

4092
02:08:46,000 --> 02:08:48,000
这些精力真的都废掉了吗

4093
02:08:48,000 --> 02:08:49,000
可能也没有

4094
02:08:49,000 --> 02:08:50,000
可能有一部分是内化掉了

4095
02:08:50,000 --> 02:08:55,000
变成了可以处理旁通的内力的一部分

4096
02:08:55,000 --> 02:08:59,000
但是我觉得大部分时间可能的确是做得了

4097
02:08:59,000 --> 02:09:04,000
因为就回想起来没有任何值得留恋的部分

4098
02:09:04,000 --> 02:09:04,000
对

4099
02:09:04,000 --> 02:09:05,000
我觉得这个就是一个很重要的原因

4100
02:09:05,000 --> 02:09:08,000
就是刚刚之前我们最开始的

4101
02:09:08,000 --> 02:09:10,000
天灯最开始讲了这个 mind share 的问题

4102
02:09:10,000 --> 02:09:12,000
就是我觉得其实你从现在来看

4103
02:09:12,000 --> 02:09:14,000
vrm 他真的是已经输掉了

4104
02:09:14,000 --> 02:09:16,000
就起码如果你是一个开发者

4105
02:09:16,000 --> 02:09:18,000
你能够自由选择的情况下

4106
02:09:18,000 --> 02:09:21,000
他已经输掉了这一部分人的所谓的 mind share

4107
02:09:21,000 --> 02:09:22,000
这点你可以刚刚我们讲了

4108
02:09:22,000 --> 02:09:26,000
比如说他可能很多人会选择去做 web app

4109
02:09:26,000 --> 02:09:28,000
去学什么动态语言去做

4110
02:09:28,000 --> 02:09:29,000
然后也不需要温度这些东西

4111
02:09:29,000 --> 02:09:31,000
那也不需要在温度上面跑

4112
02:09:31,000 --> 02:09:34,000
然后有很多人学这个开发

4113
02:09:34,000 --> 02:09:35,000
就哪怕是企业应用

4114
02:09:35,000 --> 02:09:37,000
现在大部分人还是加瓦程序比较多

4115
02:09:39,000 --> 02:09:41,000
这个我还真不敢说

4116
02:09:41,000 --> 02:09:44,000
就是起码服务端的我感觉是加瓦或者多的

4117
02:09:44,000 --> 02:09:44,000
但是如果你是

4118
02:09:44,000 --> 02:09:46,000
对前程的找工作的时候

4119
02:09:46,000 --> 02:09:48,000
我出于好奇也输入了什么 downtimes

4120
02:09:48,000 --> 02:09:50,000
或者 cshop 或者之类的

4121
02:09:50,000 --> 02:09:51,000
前面是有的

4122
02:09:51,000 --> 02:09:52,000
搜一下

4123
02:09:52,000 --> 02:09:53,000
而且还不少

4124
02:09:53,000 --> 02:09:54,000
至少在

4125
02:09:54,000 --> 02:09:56,000
就是他直接他就用分两部分

4126
02:09:56,000 --> 02:09:59,000
一个就是他跑在服务器端的一些东西

4127
02:09:59,000 --> 02:10:00,000
然后是跑在就是客户端那东西

4128
02:10:00,000 --> 02:10:02,000
客户端这边应该还是 windows 的

4129
02:10:02,000 --> 02:10:03,000
就是 vc

4130
02:10:03,000 --> 02:10:05,000
vcio studio 这些的天下

4131
02:10:05,000 --> 02:10:06,000
这没有问题

4132
02:10:06,000 --> 02:10:07,000
然后但是在移动上面

4133
02:10:07,000 --> 02:10:09,000
现在大部分人要么就是开发安卓

4134
02:10:09,000 --> 02:10:11,000
要么好像是开发这个 iOS

4135
02:10:11,000 --> 02:10:13,000
肯定是没什么 windows

4136
02:10:13,000 --> 02:10:15,000
风的用户是非常少的

4137
02:10:15,000 --> 02:10:18,000
对而开发网页程序的话

4138
02:10:18,000 --> 02:10:19,000
外败 playcation 的话

4139
02:10:19,000 --> 02:10:20,000
根本用不着

4140
02:10:20,000 --> 02:10:22,000
用 cshop 的也是凤毛零焦

4141
02:10:22,000 --> 02:10:23,000
对非常非常

4142
02:10:23,000 --> 02:10:24,000
至少在欧洲是这样

4143
02:10:24,000 --> 02:10:24,000
对

4144
02:10:24,000 --> 02:10:26,000
不管是全球发源都是这样

4145
02:10:26,000 --> 02:10:27,000
不

4146
02:10:27,000 --> 02:10:29,000
但我觉得中国这个市场好生

4147
02:10:29,000 --> 02:10:31,000
还是 cshop 份额还是挺高的

4148
02:10:31,000 --> 02:10:33,000
因为倒板嘛

4149
02:10:33,000 --> 02:10:34,000
给他助长了

4150
02:10:34,000 --> 02:10:34,000
对

4151
02:10:34,000 --> 02:10:35,000
因为在中国

4152
02:10:35,000 --> 02:10:37,000
是

4153
02:10:37,000 --> 02:10:39,000
中国在

4154
02:10:39,000 --> 02:10:41,000
为什么明天

4155
02:10:41,000 --> 02:10:42,000
为什么希望就在中国

4156
02:10:42,000 --> 02:10:43,000
但是在中国又被搞了

4157
02:10:43,000 --> 02:10:46,000
反冷炭也是很惨的

4158
02:10:46,000 --> 02:10:46,000
真的吗

4159
02:10:46,000 --> 02:10:47,000
你不知道吗

4160
02:10:47,000 --> 02:10:47,000
最近

4161
02:10:47,000 --> 02:10:48,000
什么时候是

4162
02:10:48,000 --> 02:10:49,000
就是最近这一年

4163
02:10:49,000 --> 02:10:51,000
一遍就被搞得很惨

4164
02:10:51,000 --> 02:10:52,000
OK

4165
02:10:52,000 --> 02:10:53,000
所以他的日子

4166
02:10:53,000 --> 02:10:54,000
可能是不好过的

4167
02:10:54,000 --> 02:10:57,000
所以他现在也是要急着求变

4168
02:10:57,000 --> 02:10:58,000
因为再过可能

4169
02:10:58,000 --> 02:11:00,000
这种趋势在十几年

4170
02:11:00,000 --> 02:11:01,000
未来就是一个不知名的小公司

4171
02:11:03,000 --> 02:11:05,000
刚才你说的那个什么未来变的

4172
02:11:05,000 --> 02:11:05,000
无关紧要了

4173
02:11:05,000 --> 02:11:06,000
这个还蛮巧的

4174
02:11:06,000 --> 02:11:09,000
我在直播上有一篇回答

4175
02:11:09,000 --> 02:11:11,000
当时问说 windows 8 的一些事情

4176
02:11:11,000 --> 02:11:12,000
但是我讲了一个回答

4177
02:11:12,000 --> 02:11:15,000
也就提到了这么一个概念

4178
02:11:16,000 --> 02:11:19,000
晚点我把连接放到 note

4179
02:11:19,000 --> 02:11:20,000
大家有请就可以去看一下

4180
02:11:20,000 --> 02:11:23,000
这个扯的又比较远了

4181
02:11:23,000 --> 02:11:24,000
然后说回来

4182
02:11:24,000 --> 02:11:25,000
然后 equal

4183
02:11:25,000 --> 02:11:26,000
说回 vishaw studio

4184
02:11:26,000 --> 02:11:26,000
对

4185
02:11:26,000 --> 02:11:26,000
vishaw studio

4186
02:11:26,000 --> 02:11:27,000
对

4187
02:11:27,000 --> 02:11:28,000
对

4188
02:11:28,000 --> 02:11:30,000
刚才原起是说 vishaw studio

4189
02:11:30,000 --> 02:11:32,000
非常多的版本

4190
02:11:32,000 --> 02:11:34,000
而 xcode

4191
02:11:34,000 --> 02:11:35,000
只有一个

4192
02:11:35,000 --> 02:11:36,000
或者说他有两个版本

4193
02:11:36,000 --> 02:11:38,000
一个不稳定的版本

4194
02:11:38,000 --> 02:11:39,000
和一个更不稳定的版本

4195
02:11:40,000 --> 02:11:41,000
这个黑的

4196
02:11:41,000 --> 02:11:45,000
而为了更不稳定的版本

4197
02:11:45,000 --> 02:11:48,000
你需要交一笔钱成为

4198
02:11:49,000 --> 02:11:51,000
iOS 开发商

4199
02:11:51,000 --> 02:11:53,000
iOS 开发者或者是 mine 开发者

4200
02:11:53,000 --> 02:11:55,000
才可以下载到

4201
02:11:56,000 --> 02:11:58,000
更不稳定的版本

4202
02:11:58,000 --> 02:11:59,000
但默认的稳定的版本

4203
02:11:59,000 --> 02:12:01,000
就是比较稳定的版本

4204
02:12:01,000 --> 02:12:02,000
是免费

4205
02:12:02,000 --> 02:12:02,000
不要钱

4206
02:12:02,000 --> 02:12:04,000
他是从 4 把开始

4207
02:12:04,000 --> 02:12:07,000
在 app store 里面可以免费下载了

4208
02:12:07,000 --> 02:12:07,000
对

4209
02:12:07,000 --> 02:12:09,000
然后我记得我还付钱买过

4210
02:12:09,000 --> 02:12:10,000
他免费之前的 5 块钱

4211
02:12:10,000 --> 02:12:11,000
我记得

4212
02:12:11,000 --> 02:12:12,000
5 美元

4213
02:12:12,000 --> 02:12:13,000
对

4214
02:12:13,000 --> 02:12:14,000
xcode 一层起

4215
02:12:14,000 --> 02:12:15,000
合适以上收费的

4216
02:12:15,000 --> 02:12:16,000
对

4217
02:12:16,000 --> 02:12:18,000
三之前要收费了

4218
02:12:18,000 --> 02:12:18,000
对

4219
02:12:18,000 --> 02:12:20,000
就是飞摩泰窗口的版本

4220
02:12:20,000 --> 02:12:22,000
对

4221
02:12:22,000 --> 02:12:25,000
然后我当时是因为要写一个

4222
02:12:25,000 --> 02:12:26,000
open GL 的程序

4223
02:12:26,000 --> 02:12:28,000
因为上一个图形的课

4224
02:12:28,000 --> 02:12:29,000
然后要写一些

4225
02:12:29,000 --> 02:12:30,000
open GL 的东西

4226
02:12:30,000 --> 02:12:33,000
然后当时觉得有两个做法

4227
02:12:33,000 --> 02:12:34,000
我在 mine 上面开发

4228
02:12:34,000 --> 02:12:35,000
不对

4229
02:12:35,000 --> 02:12:36,000
今天去有三个

4230
02:12:36,000 --> 02:12:37,000
要不我用 eclipse 写

4231
02:12:38,000 --> 02:12:40,000
就直接被我否定掉了

4232
02:12:40,000 --> 02:12:41,000
那我会解释为什么

4233
02:12:41,000 --> 02:12:42,000
然后另外一个

4234
02:12:42,000 --> 02:12:42,000
不是

4235
02:12:42,000 --> 02:12:43,000
我用 mine 行

4236
02:12:43,000 --> 02:12:43,000
我用 wim 写

4237
02:12:43,000 --> 02:12:44,000
然后 mine 行写

4238
02:12:44,000 --> 02:12:46,000
但是你知道用那种方式写

4239
02:12:46,000 --> 02:12:48,000
c 或者是一般要写

4240
02:12:48,000 --> 02:12:49,000
open GL 的代码

4241
02:12:49,000 --> 02:12:50,000
其实非常痛苦的

4242
02:12:50,000 --> 02:12:52,000
因为没有做动补期

4243
02:12:53,000 --> 02:12:54,000
OK

4244
02:12:54,000 --> 02:12:54,000
好了

4245
02:12:54,000 --> 02:12:54,000
另外一方面

4246
02:12:54,000 --> 02:12:56,000
你去发行就是用 xcode

4247
02:12:56,000 --> 02:12:57,000
然后当时想了想

4248
02:12:57,000 --> 02:12:58,000
买吧

4249
02:12:58,000 --> 02:13:00,000
就为了写这个作业

4250
02:13:00,000 --> 02:13:01,000
就买了

4251
02:13:01,000 --> 02:13:04,000
然后后来我买了过了差不多

4252
02:13:04,000 --> 02:13:05,000
不到一个月吧

4253
02:13:05,000 --> 02:13:05,000
他就说

4254
02:13:05,000 --> 02:13:07,000
他全部免费了

4255
02:13:08,000 --> 02:13:10,000
就很很沮丧

4256
02:13:13,000 --> 02:13:14,000
好吧

4257
02:13:14,000 --> 02:13:14,000
OK

4258
02:13:14,000 --> 02:13:14,000
对

4259
02:13:14,000 --> 02:13:16,000
现在讲到那个

4260
02:13:16,000 --> 02:13:17,000
你 Visual Studio

4261
02:13:17,000 --> 02:13:17,000
你还要要吗

4262
02:13:17,000 --> 02:13:18,000
补充的吗

4263
02:13:20,000 --> 02:13:22,000
Visual Studio 有什么要补充的

4264
02:13:22,000 --> 02:13:22,000
我也不知道

4265
02:13:22,000 --> 02:13:25,000
其实有很多年没有用 Visual Studio

4266
02:13:25,000 --> 02:13:27,000
但是我在前两天看到

4267
02:13:27,000 --> 02:13:28,000
有一句话说

4268
02:13:28,000 --> 02:13:30,000
Visual Studio 比 xcode 好了

4269
02:13:30,000 --> 02:13:33,000
一万个 eclipse 之前

4270
02:13:33,000 --> 02:13:35,000
好了一万个 eclipse 这么多

4271
02:13:36,000 --> 02:13:38,000
我怎么感觉有五十步

4272
02:13:38,000 --> 02:13:39,000
一百步的感觉

4273
02:13:41,000 --> 02:13:44,000
也许 Visual Studio 是很调

4274
02:13:44,000 --> 02:13:47,000
就 intelizance 可能是所有的

4275
02:13:47,000 --> 02:13:49,000
自动补权里面最聪明的一个

4276
02:13:50,000 --> 02:13:53,000
也是最看起来最舒服

4277
02:13:53,000 --> 02:13:55,000
或者说细节最多的一个

4278
02:13:55,000 --> 02:13:56,000
因为 Windows

4279
02:13:56,000 --> 02:13:58,000
我觉得微软东西就是有这样一种特征

4280
02:13:58,000 --> 02:14:00,000
就是事无具细

4281
02:14:00,000 --> 02:14:00,000
都要告诉你

4282
02:14:00,000 --> 02:14:03,000
都要来问你

4283
02:14:03,000 --> 02:14:06,000
或者说都要给提供你一个可能

4284
02:14:06,000 --> 02:14:07,000
就是我刚才

4285
02:14:07,000 --> 02:14:10,000
就我为了玩文明超越地球

4286
02:14:10,000 --> 02:14:12,000
装了一个 Windows 8

4287
02:14:12,000 --> 02:14:14,000
然后我发现 Windows 8 的考文件的时候

4288
02:14:14,000 --> 02:14:15,000
如果你愿意的话

4289
02:14:15,000 --> 02:14:17,000
你给点一个更多详情

4290
02:14:17,000 --> 02:14:20,000
然后更多详情里面会跳出来一个

4291
02:14:22,000 --> 02:14:26,000
实时考备速度的一个线图

4292
02:14:26,000 --> 02:14:27,000
对

4293
02:14:27,000 --> 02:14:28,000
你很帅吗

4294
02:14:28,000 --> 02:14:30,000
就是我觉得

4295
02:14:30,000 --> 02:14:31,000
哇靠

4296
02:14:31,000 --> 02:14:32,000
这样无关的信息

4297
02:14:32,000 --> 02:14:33,000
你告诉我真的有意义吗

4298
02:14:33,000 --> 02:14:35,000
很多人会看这个

4299
02:14:35,000 --> 02:14:36,000
我不知道为什么

4300
02:14:37,000 --> 02:14:38,000
好

4301
02:14:38,000 --> 02:14:40,000
时间太多了

4302
02:14:40,000 --> 02:14:41,000
Maybe

4303
02:14:43,000 --> 02:14:44,000
Eclipse

4304
02:14:44,000 --> 02:14:45,000
对

4305
02:14:45,000 --> 02:14:46,000
Visual Studio 就是这样的东西

4306
02:14:46,000 --> 02:14:48,000
就会告诉你非常非常多的

4307
02:14:48,000 --> 02:14:50,000
其实你也不知道是有用还是没用的

4308
02:14:50,000 --> 02:14:52,000
信息在那边

4309
02:14:52,000 --> 02:14:53,000
摆在那边

4310
02:14:55,000 --> 02:14:56,000
但我认为就是承认

4311
02:14:56,000 --> 02:14:58,000
它是一个非常好的变形

4312
02:14:58,000 --> 02:14:59,000
就是一个非常好的利益

4313
02:15:00,000 --> 02:15:03,000
至少我的印象里面在我还在用它的时候

4314
02:15:04,000 --> 02:15:05,000
它好用

4315
02:15:05,000 --> 02:15:06,000
而且它从来不 Crash

4316
02:15:06,000 --> 02:15:09,000
而且它的文档非常非常全面

4317
02:15:09,000 --> 02:15:09,000
对

4318
02:15:09,000 --> 02:15:10,000
这个是什么

4319
02:15:12,000 --> 02:15:13,000
Xcode 不能抵达

4320
02:15:14,000 --> 02:15:14,000
对

4321
02:15:14,000 --> 02:15:16,000
Xcode 就有 Xcode

4322
02:15:16,000 --> 02:15:17,000
非常

4323
02:15:17,000 --> 02:15:19,000
Xcode 给我感觉有点像

4324
02:15:19,000 --> 02:15:22,000
刚刚接触那个 Macro Media 的那一套

4325
02:15:22,000 --> 02:15:25,000
那就是 Macro Media 还是 Macro Media 的时代

4326
02:15:26,000 --> 02:15:27,000
Flash

4327
02:15:28,000 --> 02:15:30,000
Fireworks 之类的这些东西

4328
02:15:30,000 --> 02:15:34,000
就是有很多细小的功能隐藏在某一处

4329
02:15:34,000 --> 02:15:36,000
如果你不知道怎么用的话

4330
02:15:36,000 --> 02:15:36,000
那你就不知道

4331
02:15:36,000 --> 02:15:37,000
弄死也找不到

4332
02:15:37,000 --> 02:15:38,000
对

4333
02:15:38,000 --> 02:15:38,000
没错

4334
02:15:38,000 --> 02:15:38,000
对

4335
02:15:38,000 --> 02:15:40,000
这个导引是一个问题

4336
02:15:40,000 --> 02:15:41,000
但是就是说

4337
02:15:41,000 --> 02:15:44,000
因为你也做 Object C 的开发

4338
02:15:44,000 --> 02:15:46,000
从实际使用的角度来讲

4339
02:15:46,000 --> 02:15:48,000
你觉得这两个有什么可比的地方吗

4340
02:15:51,000 --> 02:15:53,000
Xcode 缺少一些

4341
02:15:54,000 --> 02:15:56,000
有时候我觉得非常简单

4342
02:15:56,000 --> 02:15:58,000
但是它就是没有的功能

4343
02:15:58,000 --> 02:16:00,000
就是非常必要的就是没有

4344
02:16:00,000 --> 02:16:00,000
比如说

4345
02:16:02,000 --> 02:16:03,000
比如说

4346
02:16:04,000 --> 02:16:06,000
就有没有什么一个具体的例子

4347
02:16:06,000 --> 02:16:07,000
你觉得是

4348
02:16:07,000 --> 02:16:11,000
我现在意识还真的想不出来

4349
02:16:11,000 --> 02:16:12,000
但是

4350
02:16:12,000 --> 02:16:14,000
那或者这么问

4351
02:16:14,000 --> 02:16:16,000
就是你在它日常使用的过程中

4352
02:16:16,000 --> 02:16:17,000
你有觉得它有哪点地方

4353
02:16:17,000 --> 02:16:19,000
让你非常不爽的地方

4354
02:16:19,000 --> 02:16:20,000
或者让你非常爽

4355
02:16:20,000 --> 02:16:22,000
或者让你非常不爽的地方

4356
02:16:22,000 --> 02:16:22,000
都可以

4357
02:16:24,000 --> 02:16:26,000
让我比较不爽的地方

4358
02:16:26,000 --> 02:16:29,000
可能是有时候它的窗口

4359
02:16:29,000 --> 02:16:33,000
就是它的某些布局是非常

4360
02:16:33,000 --> 02:16:35,000
让人难受的

4361
02:16:35,000 --> 02:16:37,000
比如说你要去点一个什么东西

4362
02:16:37,000 --> 02:16:41,000
你会发现这个东西的空间做得非常很小

4363
02:16:44,000 --> 02:16:46,000
然后你要去改变它的大小

4364
02:16:46,000 --> 02:16:49,000
你会觉得自己已经有的编辑区域

4365
02:16:49,000 --> 02:16:50,000
被压缩了

4366
02:16:50,000 --> 02:16:52,000
布局不是很合理

4367
02:16:52,000 --> 02:16:53,000
对

4368
02:16:53,000 --> 02:16:55,000
我觉得布局并不是很合理

4369
02:16:55,000 --> 02:16:56,000
另外就是它的自动补权

4370
02:16:56,000 --> 02:16:58,000
有时候就是

4371
02:16:58,000 --> 02:17:00,000
很长一段时间里面都非常蠢

4372
02:17:00,000 --> 02:17:01,000
比如说

4373
02:17:01,000 --> 02:17:03,000
它有时候会

4374
02:17:04,000 --> 02:17:06,000
不能理解为什么你要

4375
02:17:06,000 --> 02:17:07,000
就是有两个

4376
02:17:07,000 --> 02:17:09,000
有时候它是

4377
02:17:09,000 --> 02:17:11,000
你有时候你会觉得它们是非常笨的

4378
02:17:11,000 --> 02:17:14,000
比如说有两个一模一样的

4379
02:17:14,000 --> 02:17:18,000
有两个前十个字母一模一样的

4380
02:17:19,000 --> 02:17:20,000
函数

4381
02:17:21,000 --> 02:17:23,000
然后你敲了前几个字母

4382
02:17:23,000 --> 02:17:24,000
你敲了几个字母

4383
02:17:24,000 --> 02:17:27,000
它非要把不常用的摆在上面

4384
02:17:27,000 --> 02:17:29,000
你要么要按 Tab 键

4385
02:17:29,000 --> 02:17:32,000
然后补权到那个

4386
02:17:32,000 --> 02:17:35,000
不一样开始的地方

4387
02:17:35,000 --> 02:17:39,000
才可以输出下一个字母

4388
02:17:39,000 --> 02:17:41,000
要么你就要按下下或者是什么键

4389
02:17:41,000 --> 02:17:44,000
去手用选中

4390
02:17:44,000 --> 02:17:47,000
你真正想要打的那个东西

4391
02:17:48,000 --> 02:17:50,000
这个时候你会觉得 Intelligence 真的是非常聪明

4392
02:17:50,000 --> 02:17:53,000
就是它会去猜你最想要的是哪一个

4393
02:17:53,000 --> 02:17:56,000
但是现在 Xcode 可能是要比以前好很多

4394
02:17:56,000 --> 02:17:58,000
至少这两天

4395
02:17:58,000 --> 02:18:00,000
最近我在写 swift 的时候

4396
02:18:00,000 --> 02:18:03,000
感觉好像是没有以前那么不爽

4397
02:18:03,000 --> 02:18:05,000
就稳定性那些有提高吗

4398
02:18:05,000 --> 02:18:08,000
就至少我经常看有人说要 crash 掉

4399
02:18:08,000 --> 02:18:09,000
或者是失去响应

4400
02:18:09,000 --> 02:18:13,000
我记得曾经在 4.2 G 的时候

4401
02:18:13,000 --> 02:18:18,000
有一个版本在 App Store 里面

4402
02:18:18,000 --> 02:18:20,000
得到了一星半还是什么

4403
02:18:20,000 --> 02:18:22,000
就是因为那一版非常非常

4404
02:18:22,000 --> 02:18:24,000
就是大概平均半个小时 crashes

4405
02:18:24,000 --> 02:18:27,000
我现在经常遇到一个问题是什么

4406
02:18:27,000 --> 02:18:30,000
它会跳出来一个半透明的提示框说什么

4407
02:18:31,000 --> 02:18:34,000
Internal Module for Syntax

4408
02:18:34,000 --> 02:18:36,000
Highlighting has crashed

4409
02:18:37,000 --> 02:18:41,000
Please restart Xcode 之类的这么一个提示框

4410
02:18:41,000 --> 02:18:44,000
就是他告诉你我内部有个组件 crash

4411
02:18:44,000 --> 02:18:48,000
你有可能的话请你重新启动一下 Xcode

4412
02:18:48,000 --> 02:18:49,000
我就 What the f**k

4413
02:18:49,000 --> 02:18:50,000
对

4414
02:18:50,000 --> 02:18:52,000
另外还有一个就是

4415
02:18:52,000 --> 02:18:56,000
我买我专门为了 Xcode 买了一个小程序

4416
02:18:56,000 --> 02:18:58,000
叫做 Watchdog

4417
02:18:58,000 --> 02:18:59,000
是干嘛的

4418
02:18:59,000 --> 02:19:02,000
Watchdog 应该是卖大概 10 欧还是几欧

4419
02:19:02,000 --> 02:19:04,000
反正很便宜的工具

4420
02:19:04,000 --> 02:19:07,000
它唯一的功能就是在你退出 Xcode 的时候

4421
02:19:07,000 --> 02:19:09,000
自动帮你把 Xcode 所有的中间文件删掉

4422
02:19:09,000 --> 02:19:11,000
有什么问题吗

4423
02:19:11,000 --> 02:19:11,000
为什么要这样

4424
02:19:11,000 --> 02:19:19,000
就是据很多 Xcode 用户的经验来看

4425
02:19:19,000 --> 02:19:21,000
大部分时候如果 Xcode 的行为怪异

4426
02:19:21,000 --> 02:19:25,000
你只需要把所有的零件删掉

4427
02:19:25,000 --> 02:19:26,000
然后重新启动里面就可以了

4428
02:19:26,000 --> 02:19:28,000
所以这个插件的意图就在于

4429
02:19:28,000 --> 02:19:30,000
干脆你每次一关 Xcode 了

4430
02:19:30,000 --> 02:19:33,000
我立刻就把所有的文件全都清除了

4431
02:19:33,000 --> 02:19:35,000
代价无非就是下次启动的时候

4432
02:19:35,000 --> 02:19:36,000
慢一点

4433
02:19:36,000 --> 02:19:37,000
可能稍微慢一点吧

4434
02:19:37,000 --> 02:19:39,000
但却以此换来了更多的稳定性

4435
02:19:41,000 --> 02:19:42,000
天呐

4436
02:19:42,000 --> 02:19:43,000
这个

4437
02:19:46,000 --> 02:19:49,000
而且我必须要保讲 Xcode 的一点

4438
02:19:49,000 --> 02:19:51,000
就是现在的 Playground 非常爽

4439
02:19:51,000 --> 02:19:53,000
就是 Playground 就是 Xcode 里面的功能

4440
02:19:53,000 --> 02:19:56,000
你可以在左边输入代码

4441
02:19:56,000 --> 02:19:58,000
然后右边这里有一个很简单的窗口

4442
02:19:58,000 --> 02:19:59,000
左边可以输入代码

4443
02:19:59,000 --> 02:20:04,000
窗口右半可以输出左边输入的代码

4444
02:20:04,000 --> 02:20:07,000
所会展现出来的东西

4445
02:20:07,000 --> 02:20:09,000
比如说你写个 Fall 循环

4446
02:20:09,000 --> 02:20:12,000
然后右边就会出现 Fall 循环

4447
02:20:12,000 --> 02:20:13,000
被执行了多少次

4448
02:20:13,000 --> 02:20:15,000
以及中间如果有输出结果的话

4449
02:20:15,000 --> 02:20:17,000
它会把中间的输出结果也显示在右边

4450
02:20:17,000 --> 02:20:18,000
就不需要你做什么

4451
02:20:18,000 --> 02:20:20,000
就是要把语句写出来 然后按回车

4452
02:20:20,000 --> 02:20:24,000
然后它就会自动实时的去演算左边的语言

4453
02:20:24,000 --> 02:20:27,000
然后在右边显示出左边演算的结果

4454
02:20:27,000 --> 02:20:29,000
就是如果你看过 Keynote 的话

4455
02:20:29,000 --> 02:20:32,000
W-W-W-C-Keynote 的话

4456
02:20:32,000 --> 02:20:35,000
当时演示的就是这个功能

4457
02:20:35,000 --> 02:20:37,000
我必须说 Playground 是非常爽的

4458
02:20:37,000 --> 02:20:39,000
但是 Playground 经常 Crash 在我手里

4459
02:20:40,000 --> 02:20:45,000
就是 Swift 它是一种伪装成动态源的静态源

4460
02:20:45,000 --> 02:20:47,000
它每一次都要通编译一下

4461
02:20:47,000 --> 02:20:51,000
但是它经常编译到一半就挂了

4462
02:20:51,000 --> 02:20:53,000
然后导致整个 Playground 的挂了

4463
02:20:53,000 --> 02:21:00,000
所以什么苹果的软弓的质量是真的这么糟糕吗

4464
02:21:00,000 --> 02:21:01,000
还是

4465
02:21:01,000 --> 02:21:04,000
我觉得是想就是你必须要正视这一点

4466
02:21:04,000 --> 02:21:07,000
就是苹果它毕竟是个硬件公司

4467
02:21:07,000 --> 02:21:09,000
或者说它是一个一体化集成公司

4468
02:21:09,000 --> 02:21:11,000
而 Virgin 是专门做软件的

4469
02:21:11,000 --> 02:21:13,000
对这里面还是有 Virgin 也有 Xbox

4470
02:21:13,000 --> 02:21:15,000
我承认 Virgin 也有 Xbox

4471
02:21:15,000 --> 02:21:18,000
但是从基因上来看

4472
02:21:18,000 --> 02:21:21,000
苹果做的软件的确是不如 Macs 上讨论的

4473
02:21:21,000 --> 02:21:24,000
就从稳定性的角度来看吗

4474
02:21:24,000 --> 02:21:25,000
对

4475
02:21:25,000 --> 02:21:26,000
或者是从乃至从异用性

4476
02:21:26,000 --> 02:21:29,000
或者是从 Use Friendly 的角度来看

4477
02:21:29,000 --> 02:21:33,000
Xcode 都远远输于 Virgin Studio

4478
02:21:33,000 --> 02:21:34,000
这个我必须承认

4479
02:21:34,000 --> 02:21:36,000
所以它的好处

4480
02:21:36,000 --> 02:21:37,000
就它比 Virgin Studio 好的

4481
02:21:37,000 --> 02:21:39,000
好的在哪里

4482
02:21:40,000 --> 02:21:41,000
有选择吗

4483
02:21:41,000 --> 02:21:41,000
它有好处吗

4484
02:21:41,000 --> 02:21:42,000
不

4485
02:21:42,000 --> 02:21:43,000
如果你可以选择

4486
02:21:43,000 --> 02:21:43,000
请问一下

4487
02:21:46,000 --> 02:21:48,000
比如说你们都写 C 程序

4488
02:21:48,000 --> 02:21:49,000
因为 Virgin Studio Studio 也可以写 C 程序

4489
02:21:49,000 --> 02:21:50,000
然后 Xcode 也可以写

4490
02:21:50,000 --> 02:21:54,000
就不是写跟某一个平台直接相关的那种东西的话

4491
02:21:57,000 --> 02:21:58,000
说实话

4492
02:21:58,000 --> 02:22:01,000
我想不出来什么非常好的

4493
02:22:01,000 --> 02:22:03,000
就是比如说我刚才第一反应是自己渲染

4494
02:22:04,000 --> 02:22:06,000
对

4495
02:22:06,000 --> 02:22:08,000
因为 Virgin Studio 下面的

4496
02:22:08,000 --> 02:22:09,000
或者是 Windows 下面的自己渲染

4497
02:22:09,000 --> 02:22:12,000
是我现在已经不太能容忍的了

4498
02:22:12,000 --> 02:22:15,000
但是如果你真要说我要写一个

4499
02:22:15,000 --> 02:22:16,000
不去考虑跨平台

4500
02:22:18,000 --> 02:22:20,000
当然 Xcode 下面也写不了什么跨平台的东西

4501
02:22:20,000 --> 02:22:22,000
不是可以写

4502
02:22:22,000 --> 02:22:24,000
它有什么拍法模式

4503
02:22:26,000 --> 02:22:27,000
所以 Xcode 有拍法模式

4504
02:22:27,000 --> 02:22:29,000
就可以这么干

4505
02:22:29,000 --> 02:22:31,000
但是因为它毕竟可以当成一个编辑来用

4506
02:22:31,000 --> 02:22:32,000
对

4507
02:22:32,000 --> 02:22:34,000
当成一个编辑器来用

4508
02:22:34,000 --> 02:22:35,000
OK

4509
02:22:35,000 --> 02:22:36,000
那我又不知道这个 point 和再多

4510
02:22:36,000 --> 02:22:37,000
就是这样说而已

4511
02:22:37,000 --> 02:22:39,000
对

4512
02:22:39,000 --> 02:22:41,000
我觉得这一点

4513
02:22:41,000 --> 02:22:43,000
Virgin Studio Studio 也许是完上 Xcode 的

4514
02:22:43,000 --> 02:22:45,000
但我还是不会用

4515
02:22:45,000 --> 02:22:46,000
但是我还是不会用 Virgin Studio Studio

4516
02:22:46,000 --> 02:22:47,000
就是因为太丑了

4517
02:22:49,000 --> 02:22:52,000
就是因为它已经不是我的平台了

4518
02:22:52,000 --> 02:22:53,000
已经不是我的世界里一部分了

4519
02:22:53,000 --> 02:22:54,000
就是它对我来说

4520
02:22:54,000 --> 02:22:56,000
已经是一共比较陌生的东西

4521
02:22:56,000 --> 02:23:01,000
说你把自己变得再好有什么用

4522
02:23:01,000 --> 02:23:03,000
它已经往前走了

4523
02:23:03,000 --> 02:23:03,000
对

4524
02:23:03,000 --> 02:23:05,000
I have no no

4525
02:23:05,000 --> 02:23:07,000
宝贝伤的一个故事

4526
02:23:07,000 --> 02:23:09,000
对

4527
02:23:09,000 --> 02:23:11,000
Eclipse

4528
02:23:11,000 --> 02:23:11,000
对

4529
02:23:11,000 --> 02:23:18,000
Eclipse 可能是比较非常平庸的一个 IDE 吧

4530
02:23:18,000 --> 02:23:18,000
应该说

4531
02:23:18,000 --> 02:23:19,000
对

4532
02:23:19,000 --> 02:23:20,000
这你要平庸来形成

4533
02:23:20,000 --> 02:23:22,000
我觉得这大而全的用种的一个东西

4534
02:23:23,000 --> 02:23:23,000
不

4535
02:23:23,000 --> 02:23:24,000
它所谓平庸

4536
02:23:24,000 --> 02:23:26,000
就是应该 Eclipse 可以在所有平台上使用

4537
02:23:26,000 --> 02:23:28,000
对

4538
02:23:28,000 --> 02:23:30,000
然后用 Eclipse 最常

4539
02:23:30,000 --> 02:23:34,000
最多使用 Eclipse 的一帮人是没有什么

4540
02:23:34,000 --> 02:23:35,000
制想的

4541
02:23:35,000 --> 02:23:36,000
或者说没有什么

4542
02:23:40,000 --> 02:23:48,000
此处插入一个带有其事性意味的形容词的品位

4543
02:23:48,000 --> 02:23:50,000
或者是 Whatever 的程序员所用的

4544
02:23:50,000 --> 02:23:55,000
就是你能想象到的最平庸的工作

4545
02:23:56,000 --> 02:23:59,000
我觉得就是用 Eclipse 在一个公司里面写 Java

4546
02:23:59,000 --> 02:24:00,000
我发现有个问题

4547
02:24:00,000 --> 02:24:02,000
或者说就是我现在所做的事情

4548
02:24:02,000 --> 02:24:03,000
因为我发现有个问题

4549
02:24:03,000 --> 02:24:07,000
就是学校里面教员写

4550
02:24:07,000 --> 02:24:12,000
因为现在学校里面大部分教师用 Java 写入门

4551
02:24:12,000 --> 02:24:14,000
学 CS 入门的东西

4552
02:24:14,000 --> 02:24:16,000
然后我发现他们都在用 Eclipse

4553
02:24:16,000 --> 02:24:16,000
对

4554
02:24:16,000 --> 02:24:17,000
然后就

4555
02:24:17,000 --> 02:24:17,000
Java

4556
02:24:17,000 --> 02:24:17,000
对

4557
02:24:17,000 --> 02:24:18,000
Eclipse

4558
02:24:18,000 --> 02:24:18,000
对

4559
02:24:18,000 --> 02:24:20,000
这也是平庸的一个点

4560
02:24:20,000 --> 02:24:23,000
就是如果一个人在学校里面学过 Java

4561
02:24:23,000 --> 02:24:26,000
那他基本上就很有可能用过 Eclipse

4562
02:24:26,000 --> 02:24:27,000
惯性的

4563
02:24:28,000 --> 02:24:28,000
对

4564
02:24:28,000 --> 02:24:31,000
就是教材就会说你去下载一个工质

4565
02:24:31,000 --> 02:24:32,000
他会一步一步告诉你

4566
02:24:32,000 --> 02:24:33,000
怎么去完成配置的

4567
02:24:33,000 --> 02:24:34,000
在你没有一个偏好的情况之下

4568
02:24:34,000 --> 02:24:37,000
你当然要按照教材上告诉你的事情来做

4569
02:24:38,000 --> 02:24:39,000
对吧

4570
02:24:39,000 --> 02:24:40,000
对

4571
02:24:40,000 --> 02:24:44,000
然后这就导致了 Eclipse 是一个非常没有

4572
02:24:44,000 --> 02:24:45,000
你谈到他的时候

4573
02:24:45,000 --> 02:24:47,000
你就让他谈到空隙或者水

4574
02:24:47,000 --> 02:24:49,000
你对他没有什么偏好

4575
02:24:49,000 --> 02:24:49,000
对

4576
02:24:49,000 --> 02:24:51,000
没有性格的东西

4577
02:24:51,000 --> 02:24:52,000
对

4578
02:24:52,000 --> 02:24:54,000
而人们只能吐槽说

4579
02:24:54,000 --> 02:24:57,000
比如说 Eclipse 在 Max 非常慢

4580
02:24:57,000 --> 02:24:58,000
不光是 Mac

4581
02:24:58,000 --> 02:25:00,000
所有系统上都很慢

4582
02:25:00,000 --> 02:25:02,000
我觉得在 Linux 上还可以

4583
02:25:02,000 --> 02:25:02,000
还可以

4584
02:25:02,000 --> 02:25:03,000
OK

4585
02:25:03,000 --> 02:25:05,000
但是在 Max 上就是经常会卡到

4586
02:25:05,000 --> 02:25:05,000
我也不知道

4587
02:25:05,000 --> 02:25:06,000
应该跟项目有关

4588
02:25:06,000 --> 02:25:08,000
就是我现在做的项目是一个

4589
02:25:12,000 --> 02:25:13,000
我来说一个词你不要被吓到

4590
02:25:13,000 --> 02:25:14,000
Mayven

4591
02:25:16,000 --> 02:25:16,000
对

4592
02:25:16,000 --> 02:25:20,000
是是用 Mayven 来管理这个软件包的

4593
02:25:20,000 --> 02:25:26,000
然后我们这个项目大概有 70 到 80 个

4594
02:25:27,000 --> 02:25:29,000
Mayven module

4595
02:25:29,000 --> 02:25:30,000
OK

4596
02:25:30,000 --> 02:25:31,000
Mayven project

4597
02:25:31,000 --> 02:25:34,000
然后每次去刷新的时候

4598
02:25:34,000 --> 02:25:37,000
就是 Eclipse 要在后台去更新整个

4599
02:25:38,000 --> 02:25:41,000
整个项目的 dependency 的时候

4600
02:25:41,000 --> 02:25:45,000
可能整个程序可以长达 20 分钟

4601
02:25:45,000 --> 02:25:46,000
失去相应

4602
02:25:46,000 --> 02:25:48,000
这在 Linux 上是完全不会出现的

4603
02:25:48,000 --> 02:25:50,000
OK

4604
02:25:50,000 --> 02:25:50,000
对

4605
02:25:50,000 --> 02:25:51,000
就是实现的问题

4606
02:25:53,000 --> 02:25:55,000
它应该是加碼写的

4607
02:25:55,000 --> 02:25:56,000
如果虚拟机没有

4608
02:25:56,000 --> 02:25:57,000
它是加碼写的

4609
02:25:57,000 --> 02:25:58,000
就是 JBL 没有问题的话

4610
02:25:58,000 --> 02:26:01,000
不能兵该出现这种这么大的差异

4611
02:26:01,000 --> 02:26:03,000
我觉得肯定是实现的问题

4612
02:26:03,000 --> 02:26:06,000
就是它的可能三炮线程模型不是很

4613
02:26:06,000 --> 02:26:07,000
不是很科学

4614
02:26:07,000 --> 02:26:12,000
当时 UI 的线程会长时间的失去相应

4615
02:26:12,000 --> 02:26:13,000
好吧

4616
02:26:13,000 --> 02:26:16,000
有可能是在 Mac 面的那个故意那套

4617
02:26:16,000 --> 02:26:18,000
是不是没有弄好

4618
02:26:18,000 --> 02:26:19,000
很有可能

4619
02:26:19,000 --> 02:26:19,000
对

4620
02:26:19,000 --> 02:26:21,000
对我其实

4621
02:26:21,000 --> 02:26:23,000
我有用过一段时间的 Eclipse

4622
02:26:23,000 --> 02:26:24,000
因为要给

4623
02:26:24,000 --> 02:26:25,000
要去乐券

4624
02:26:25,000 --> 02:26:27,000
就是做诸教的话

4625
02:26:27,000 --> 02:26:28,000
要写好作业

4626
02:26:28,000 --> 02:26:29,000
然后就会

4627
02:26:29,000 --> 02:26:31,000
因为你今天刚才也讲的问题

4628
02:26:31,000 --> 02:26:33,000
他是有一个这个惯性的

4629
02:26:33,000 --> 02:26:35,000
就是学校里面老师教用这个

4630
02:26:35,000 --> 02:26:36,000
然后学生也要用这个

4631
02:26:36,000 --> 02:26:38,000
那我打开它的工程文件

4632
02:26:38,000 --> 02:26:39,000
因为只能用这个

4633
02:26:39,000 --> 02:26:39,000
不然的话

4634
02:26:39,000 --> 02:26:41,000
我还得再去折腾一下

4635
02:26:41,000 --> 02:26:43,000
它怎么去配置它每一个工程是怎么样的

4636
02:26:43,000 --> 02:26:44,000
对吧

4637
02:26:44,000 --> 02:26:44,000
对吧

4638
02:26:44,000 --> 02:26:46,000
还是挺坑爹的

4639
02:26:46,000 --> 02:26:48,000
那我对它的最恶劣的印象

4640
02:26:48,000 --> 02:26:49,000
就是它实在是太丑了

4641
02:26:52,000 --> 02:26:53,000
这个我已经

4642
02:26:53,000 --> 02:26:54,000
好吧

4643
02:26:54,000 --> 02:26:58,000
它比我见过的任何一款编辑都要丑

4644
02:27:01,000 --> 02:27:01,000
因为它

4645
02:27:01,000 --> 02:27:02,000
对

4646
02:27:02,000 --> 02:27:03,000
没有一个就是

4647
02:27:03,000 --> 02:27:04,000
怎么说呢

4648
02:27:04,000 --> 02:27:08,000
就是 Eclipse 它的组织模式

4649
02:27:08,000 --> 02:27:10,000
导致了它必然是这样一个宿命

4650
02:27:10,000 --> 02:27:11,000
对

4651
02:27:11,000 --> 02:27:12,000
它是用的一个

4652
02:27:12,000 --> 02:27:13,000
它其实你也

4653
02:27:13,000 --> 02:27:15,000
它也不算是用的是一个跨平台的

4654
02:27:15,000 --> 02:27:16,000
故意套件

4655
02:27:16,000 --> 02:27:18,000
因为有看它的元素

4656
02:27:18,000 --> 02:27:21,000
有些还是在 Mac 上是原生的 Mac 元素

4657
02:27:21,000 --> 02:27:22,000
但是一到它编辑

4658
02:27:22,000 --> 02:27:24,000
就是 IDE 里面的那些东西

4659
02:27:24,000 --> 02:27:25,000
一些部件的时候

4660
02:27:25,000 --> 02:27:26,000
你就会明显的发现

4661
02:27:26,000 --> 02:27:28,000
这和其他这种完全不一样

4662
02:27:30,000 --> 02:27:30,000
对

4663
02:27:30,000 --> 02:27:31,000
没错

4664
02:27:31,000 --> 02:27:32,000
而且在我不知道

4665
02:27:32,000 --> 02:27:34,000
Windows 上面是有没有这个问题

4666
02:27:34,000 --> 02:27:37,000
但它在 Linux 上面好像它还装的挺好的

4667
02:27:37,000 --> 02:27:38,000
就模拟的挺好

4668
02:27:38,000 --> 02:27:41,000
也可能是选择 GTK 的情况下

4669
02:27:41,000 --> 02:27:43,000
它还凑合

4670
02:27:43,000 --> 02:27:47,000
但是在 Mac 上或者在 Windows 上

4671
02:27:47,000 --> 02:27:49,000
它就是长得很奇怪

4672
02:27:50,000 --> 02:27:51,000
其实可能也是因为

4673
02:27:51,000 --> 02:27:53,000
就是它用的那一套叫什么

4674
02:27:53,000 --> 02:27:55,000
Standard widget SWT

4675
02:27:55,000 --> 02:27:57,000
Standard widget toolkit

4676
02:27:57,000 --> 02:27:59,000
SWT

4677
02:27:59,000 --> 02:27:59,000
对

4678
02:27:59,000 --> 02:28:01,000
是一套

4679
02:28:01,000 --> 02:28:02,000
的确也是一套

4680
02:28:02,000 --> 02:28:03,000
可能只有 Eclipse 在用的东西

4681
02:28:03,000 --> 02:28:08,000
还是 SWT 好像就是专门的 Glip Slot

4682
02:28:08,000 --> 02:28:09,000
而开发出来的东西

4683
02:28:09,000 --> 02:28:09,000
应该是这样

4684
02:28:09,000 --> 02:28:11,000
我记得我们记错的话

4685
02:28:11,000 --> 02:28:13,000
就是它会用这么一套跨平台东西

4686
02:28:13,000 --> 02:28:14,000
做然后搞的

4687
02:28:14,000 --> 02:28:14,000
对

4688
02:28:14,000 --> 02:28:15,000
虽然在每个平台上

4689
02:28:15,000 --> 02:28:17,000
你说就长得一样了

4690
02:28:17,000 --> 02:28:18,000
没有问题

4691
02:28:18,000 --> 02:28:19,000
可是这实在是太丑了

4692
02:28:19,000 --> 02:28:21,000
怎么能够

4693
02:28:22,000 --> 02:28:24,000
而且它那些窗口

4694
02:28:24,000 --> 02:28:26,000
你刚才说什么 Xcode 的窗口的布局

4695
02:28:26,000 --> 02:28:28,000
可能不是很合理

4696
02:28:28,000 --> 02:28:28,000
对吧

4697
02:28:28,000 --> 02:28:32,000
它起码它好歹长得还可以

4698
02:28:32,000 --> 02:28:33,000
长得还能看

4699
02:28:33,000 --> 02:28:34,000
就至少是漂亮

4700
02:28:34,000 --> 02:28:35,000
对

4701
02:28:35,000 --> 02:28:35,000
这个没错

4702
02:28:35,000 --> 02:28:36,000
一颗又是这种布局

4703
02:28:36,000 --> 02:28:37,000
哇

4704
02:28:37,000 --> 02:28:42,000
这已经不能用丑来形容了

4705
02:28:42,000 --> 02:28:42,000
简直

4706
02:28:42,000 --> 02:28:43,000
对于外面我写回来说

4707
02:28:43,000 --> 02:28:45,000
这是非常不能忍受的

4708
02:28:45,000 --> 02:28:45,000
对

4709
02:28:45,000 --> 02:28:47,000
而且你说这都是什么乱七八糟的玩意

4710
02:28:47,000 --> 02:28:50,000
而且它那些各种图标也非常诡异

4711
02:28:52,000 --> 02:28:54,000
你会想这是一个什么样的设计

4712
02:28:54,000 --> 02:28:55,000
是设计出来的图标

4713
02:28:57,000 --> 02:28:59,000
好像的确有

4714
02:28:59,000 --> 02:29:00,000
你这么一说

4715
02:29:00,000 --> 02:29:02,000
我也觉得好像是挺奇怪

4716
02:29:02,000 --> 02:29:02,000
对

4717
02:29:02,000 --> 02:29:03,000
就完全不能反应

4718
02:29:03,000 --> 02:29:05,000
它要代表的意思

4719
02:29:05,000 --> 02:29:06,000
我觉得就是

4720
02:29:07,000 --> 02:29:08,000
好吧

4721
02:29:08,000 --> 02:29:09,000
也可能是它那套语会

4722
02:29:09,000 --> 02:29:11,000
我没有我至今为止

4723
02:29:11,000 --> 02:29:12,000
没有理解到的一个结果

4724
02:29:12,000 --> 02:29:13,000
反正

4725
02:29:13,000 --> 02:29:14,000
对

4726
02:29:14,000 --> 02:29:18,000
这如果我想到的一件完全无关的事情

4727
02:29:18,000 --> 02:29:19,000
就是图标

4728
02:29:19,000 --> 02:29:21,000
其实图标设计的一个问题

4729
02:29:21,000 --> 02:29:24,000
就是我在大学的时候

4730
02:29:24,000 --> 02:29:27,000
有一天去参加一个

4731
02:29:28,000 --> 02:29:31,000
web 设计的一个展会之类

4732
02:29:31,000 --> 02:29:32,000
不展会

4733
02:29:32,000 --> 02:29:35,000
就是一个颁奖会之类的

4734
02:29:35,000 --> 02:29:36,000
这么一个活动

4735
02:29:36,000 --> 02:29:38,000
然后就做的时候

4736
02:29:38,000 --> 02:29:39,000
有一个交美术

4737
02:29:39,000 --> 02:29:40,000
还是交什么

4738
02:29:40,000 --> 02:29:42,000
视觉传达的那个老师

4739
02:29:42,000 --> 02:29:46,000
在那边指导台上的人用 powerpoint

4740
02:29:46,000 --> 02:29:49,000
然后他一直说点那个酒杯

4741
02:29:49,000 --> 02:29:50,000
点那个酒杯

4742
02:29:50,000 --> 02:29:52,000
点那个酒杯的图标

4743
02:29:52,000 --> 02:29:53,000
然后想

4744
02:29:53,000 --> 02:29:57,000
powerpoint 上面为什么会有一个酒杯的图标呢

4745
02:29:57,000 --> 02:29:58,000
结果是哪个图标

4746
02:30:00,000 --> 02:30:03,000
结果是当时的 powerpoint

4747
02:30:03,000 --> 02:30:05,000
2002 还是

4748
02:30:05,000 --> 02:30:07,000
反正是某一个特定版的 powerpoint

4749
02:30:07,000 --> 02:30:08,000
可能现在还是这样的

4750
02:30:08,000 --> 02:30:13,000
就是有一个快捷的图标是进入展示模式

4751
02:30:13,000 --> 02:30:16,000
就是把你平时不是打开 powerpoint

4752
02:30:16,000 --> 02:30:17,000
不是处于编辑模式吗

4753
02:30:17,000 --> 02:30:19,000
就是左边是 slides

4754
02:30:19,000 --> 02:30:22,000
然后右边是那个正要被编辑的 slides

4755
02:30:22,000 --> 02:30:24,000
然后你点下那个图标

4756
02:30:24,000 --> 02:30:25,000
就可以立即进入放映模式

4757
02:30:25,000 --> 02:30:26,000
对

4758
02:30:26,000 --> 02:30:28,000
怎么是酒杯的图标

4759
02:30:28,000 --> 02:30:31,000
那个图标其实是一个

4760
02:30:31,000 --> 02:30:35,000
就是下面是一个支架

4761
02:30:35,000 --> 02:30:37,000
支架上的白纸

4762
02:30:37,000 --> 02:30:39,000
不是放映机

4763
02:30:39,000 --> 02:30:39,000
就是那种

4764
02:30:39,000 --> 02:30:42,000
早期的 whiteboard 是一张纸

4765
02:30:42,000 --> 02:30:44,000
就是是一个 board

4766
02:30:44,000 --> 02:30:45,000
然后上面挂了很多纸

4767
02:30:45,000 --> 02:30:47,000
物理的 slides

4768
02:30:47,000 --> 02:30:49,000
对物理的 slides

4769
02:30:49,000 --> 02:30:50,000
然后这个 slides

4770
02:30:50,000 --> 02:30:51,000
这个下面是一个支架

4771
02:30:51,000 --> 02:30:54,000
上面是一张纸的这么一个图标

4772
02:30:54,000 --> 02:30:56,000
被那个老师认成了酒杯

4773
02:30:56,000 --> 02:30:58,000
这件事情一直

4774
02:30:58,000 --> 02:30:59,000
一直深深的印在我的脑海里

4775
02:30:59,000 --> 02:31:00,000
我就觉得

4776
02:31:00,000 --> 02:31:01,000
对

4777
02:31:01,000 --> 02:31:03,000
交互设计有时候你不会理解

4778
02:31:03,000 --> 02:31:05,000
你不会明白你的用户

4779
02:31:05,000 --> 02:31:06,000
把它理解为什么

4780
02:31:06,000 --> 02:31:07,000
就比如说

4781
02:31:07,000 --> 02:31:09,000
还有一例就是

4782
02:31:09,000 --> 02:31:13,000
common conquer 里面那个

4783
02:31:13,000 --> 02:31:14,000
有三个工具

4784
02:31:14,000 --> 02:31:16,000
最左边是修理

4785
02:31:16,000 --> 02:31:18,000
中间是贩卖

4786
02:31:18,000 --> 02:31:19,000
一个钱

4787
02:31:19,000 --> 02:31:21,000
就是你可以把自己的建筑卖掉

4788
02:31:21,000 --> 02:31:22,000
左边是个班手

4789
02:31:22,000 --> 02:31:25,000
然后右边是个刀来了标志

4790
02:31:25,000 --> 02:31:29,000
然后那我想说

4791
02:31:29,000 --> 02:31:32,000
用班手可以修理

4792
02:31:32,000 --> 02:31:36,000
用刀刀不就是买建筑吗

4793
02:31:36,000 --> 02:31:37,000
不对

4794
02:31:37,000 --> 02:31:37,000
反过来

4795
02:31:37,000 --> 02:31:39,000
用刀刀可以把建筑卖掉

4796
02:31:39,000 --> 02:31:40,000
那用班手

4797
02:31:40,000 --> 02:31:44,000
难道不就是造一个建筑出外吗

4798
02:31:44,000 --> 02:31:45,000
然后

4799
02:31:45,000 --> 02:31:45,000
对

4800
02:31:45,000 --> 02:31:48,000
我把自己所有建筑卖掉了

4801
02:31:48,000 --> 02:31:51,000
然后试图重新把基地再搭一遍

4802
02:31:51,000 --> 02:31:52,000
用班手

4803
02:31:55,000 --> 02:31:55,000
对

4804
02:31:55,000 --> 02:31:56,000
一上来把自己的大没意外

4805
02:31:56,000 --> 02:31:57,000
所以什么

4806
02:31:57,000 --> 02:31:59,000
图标设计还是有一个很重要的

4807
02:31:59,000 --> 02:31:59,000
对

4808
02:31:59,000 --> 02:32:00,000
交互设计还是很重要的

4809
02:32:00,000 --> 02:32:01,000
就像你说的

4810
02:32:01,000 --> 02:32:02,000
就是有时候

4811
02:32:02,000 --> 02:32:04,000
如果你不太明白

4812
02:32:04,000 --> 02:32:07,000
詐儿这个单词在英语里面

4813
02:32:07,000 --> 02:32:09,000
可以指代贯字的话

4814
02:32:09,000 --> 02:32:10,000
你是不太明白

4815
02:32:10,000 --> 02:32:13,000
为什么 Eclipse 要把那个詐儿文件

4816
02:32:13,000 --> 02:32:14,000
画成一个贯字

4817
02:32:14,000 --> 02:32:16,000
然后里面装着零和一

4818
02:32:17,000 --> 02:32:18,000
的确是挺二文字

4819
02:32:18,000 --> 02:32:19,000
对

4820
02:32:20,000 --> 02:32:21,000
关于 Eclipse 的吐槽

4821
02:32:21,000 --> 02:32:23,000
还有一个就是他

4822
02:32:23,000 --> 02:32:24,000
你们觉得他非常慢

4823
02:32:26,000 --> 02:32:26,000
对

4824
02:32:26,000 --> 02:32:27,000
我刚才已经说了

4825
02:32:27,000 --> 02:32:28,000
就是他怎么办

4826
02:32:28,000 --> 02:32:29,000
不是那种

4827
02:32:31,000 --> 02:32:32,000
可以接受的吗

4828
02:32:32,000 --> 02:32:33,000
不是那种可以忍受

4829
02:32:33,000 --> 02:32:34,000
你说这个点一下

4830
02:32:34,000 --> 02:32:35,000
可能卡一下

4831
02:32:35,000 --> 02:32:35,000
这样子

4832
02:32:35,000 --> 02:32:36,000
他是一种

4833
02:32:36,000 --> 02:32:38,000
整个流程的会觉得

4834
02:32:38,000 --> 02:32:39,000
连输入一个字

4835
02:32:39,000 --> 02:32:41,000
你会觉得他有点慢的那种慢

4836
02:32:41,000 --> 02:32:41,000
但可能这就是

4837
02:32:41,000 --> 02:32:41,000
对

4838
02:32:41,000 --> 02:32:42,000
就好像三号

4839
02:32:42,000 --> 02:32:43,000
你输入一个字符

4840
02:32:43,000 --> 02:32:44,000
他要更新整个 UI 的感觉

4841
02:32:44,000 --> 02:32:45,000
对

4842
02:32:45,000 --> 02:32:45,000
就是有一种

4843
02:32:46,000 --> 02:32:47,000
年质的感觉

4844
02:32:47,000 --> 02:32:49,000
我不知道怎么描述准不准去

4845
02:32:49,000 --> 02:32:50,000
就是你会觉得

4846
02:32:50,000 --> 02:32:53,000
你跟 UI 交互的时候

4847
02:32:53,000 --> 02:32:54,000
你在写代码的时候

4848
02:32:54,000 --> 02:32:56,000
你永远不可能找到

4849
02:32:56,000 --> 02:32:57,000
那种比如唱的感觉

4850
02:32:59,000 --> 02:32:59,000
没错

4851
02:32:59,000 --> 02:33:00,000
是这样

4852
02:33:00,000 --> 02:33:01,000
我一直不明白

4853
02:33:01,000 --> 02:33:01,000
为什么

4854
02:33:01,000 --> 02:33:02,000
当然你可以说

4855
02:33:02,000 --> 02:33:05,000
这个可能是用 JVM 训练机

4856
02:33:05,000 --> 02:33:06,000
它可能 Latency

4857
02:33:06,000 --> 02:33:07,000
不如用原声的

4858
02:33:07,000 --> 02:33:09,000
像 C 或者 C 加压这种

4859
02:33:09,000 --> 02:33:11,000
不需要 GC 的语言

4860
02:33:11,000 --> 02:33:12,000
或者来的要直接

4861
02:33:12,000 --> 02:33:13,000
但是

4862
02:33:13,000 --> 02:33:14,000
这个原因我们不管了

4863
02:33:14,000 --> 02:33:15,000
但是就说

4864
02:33:15,000 --> 02:33:17,000
这个注重的给我的体验就是

4865
02:33:17,000 --> 02:33:19,000
我如果可能

4866
02:33:19,000 --> 02:33:19,000
我肯定不会在里面

4867
02:33:19,000 --> 02:33:21,000
想在这里面写东西了

4868
02:33:22,000 --> 02:33:23,000
没错

4869
02:33:23,000 --> 02:33:23,000
对

4870
02:33:23,000 --> 02:33:24,000
对

4871
02:33:24,000 --> 02:33:26,000
就是基本上我也曾经掙扎过

4872
02:33:26,000 --> 02:33:30,000
就是我想要切换到 InteliJ 下面

4873
02:33:30,000 --> 02:33:32,000
但是 B 公司的项目

4874
02:33:32,000 --> 02:33:34,000
其实是非常 Eclipse 依赖的

4875
02:33:35,000 --> 02:33:37,000
因为是 Legacy Code

4876
02:33:37,000 --> 02:33:38,000
所以里面有很多

4877
02:33:38,000 --> 02:33:39,000
比如说启动项目

4878
02:33:39,000 --> 02:33:41,000
或者是启动项目

4879
02:33:41,000 --> 02:33:43,000
肯定有十几个

4880
02:33:43,000 --> 02:33:48,000
每一个分别启动整个组件里面的

4881
02:33:48,000 --> 02:33:49,000
某一个特定的组件

4882
02:33:49,000 --> 02:33:52,000
然后打开一个窗口

4883
02:33:52,000 --> 02:33:53,000
Windows 之类的

4884
02:33:53,000 --> 02:33:54,000
这些东西我基本上

4885
02:33:54,000 --> 02:33:56,000
直到现在快要离职了

4886
02:33:56,000 --> 02:33:58,000
我都没有时间去弄明白

4887
02:33:58,000 --> 02:33:59,000
它到底是启动了哪一个组件

4888
02:34:00,000 --> 02:34:03,000
但整个程序基本上

4889
02:34:03,000 --> 02:34:06,000
脱离 Eclipse 是非常非常难以使用的

4890
02:34:06,000 --> 02:34:08,000
然后或者说难以维护的

4891
02:34:08,000 --> 02:34:10,000
但是我还是成功的做到了

4892
02:34:10,000 --> 02:34:14,000
在 80%的时间里面能用 Wim 改的部分

4893
02:34:14,000 --> 02:34:16,000
就是 Wim

4894
02:34:16,000 --> 02:34:18,000
我宁可用 Wim 改完 Java

4895
02:34:18,000 --> 02:34:21,000
然后用 Synthetic 去看一下

4896
02:34:21,000 --> 02:34:22,000
有没有语法错误

4897
02:34:22,000 --> 02:34:23,000
然后编译

4898
02:34:23,000 --> 02:34:24,000
如果编译不过了

4899
02:34:24,000 --> 02:34:25,000
我再回去改

4900
02:34:25,000 --> 02:34:28,000
我宁可这样也不愿意去启动 Eclipse

4901
02:34:28,000 --> 02:34:30,000
就把人逼成什么样子

4902
02:34:30,000 --> 02:34:31,000
对

4903
02:34:31,000 --> 02:34:33,000
就可以想象它是配音 S 的指数有多高

4904
02:34:34,000 --> 02:34:35,000
对

4905
02:34:35,000 --> 02:34:36,000
反正就是刚才讲了

4906
02:34:36,000 --> 02:34:39,000
它没有那种让你很畅快的感觉

4907
02:34:39,000 --> 02:34:41,000
所以我很难想象有人会在里面

4908
02:34:41,000 --> 02:34:43,000
做到出一个好的产品

4909
02:34:43,000 --> 02:34:44,000
我问你这件事情

4910
02:34:45,000 --> 02:34:47,000
你觉得地球上存在一种人

4911
02:34:47,000 --> 02:34:49,000
能够理解 LiqSIP 所有功能组

4912
02:34:49,000 --> 02:34:51,000
那些按钮的组合是在干嘛

4913
02:34:53,000 --> 02:34:55,000
我觉得 Eclipse 就像 CLSR 一样

4914
02:34:55,000 --> 02:34:57,000
任何一个说我精通 Eclipse 的人都在扯蛋

4915
02:34:59,000 --> 02:35:01,000
所以没有一个人是理解

4916
02:35:01,000 --> 02:35:04,000
所有的按钮或者功能是干嘛的

4917
02:35:06,000 --> 02:35:07,000
可以这样说

4918
02:35:07,000 --> 02:35:12,000
我相信如果你愿意穷进你两三年的时间

4919
02:35:12,000 --> 02:35:13,000
去研究一个版本的话

4920
02:35:13,000 --> 02:35:14,000
应该是可以研究透

4921
02:35:14,000 --> 02:35:15,000
它才会更新

4922
02:35:15,000 --> 02:35:16,000
两三年之间又更新了一个版本

4923
02:35:16,000 --> 02:35:17,000
你又不知道

4924
02:35:17,000 --> 02:35:18,000
现在版本叫什么

4925
02:35:18,000 --> 02:35:19,000
Luna 还是叫什么

4926
02:35:20,000 --> 02:35:22,000
现在应该已经出了 Luna 版本

4927
02:35:22,000 --> 02:35:25,000
我还在用之前的那个版本

4928
02:35:25,000 --> 02:35:27,000
反正木星我们卫星的名字

4929
02:35:27,000 --> 02:35:27,000
我的

4930
02:35:29,000 --> 02:35:30,000
对

4931
02:35:30,000 --> 02:35:31,000
还有一个事情

4932
02:35:31,000 --> 02:35:31,000
就是

4933
02:35:31,000 --> 02:35:34,000
据我所知好像 Android 开发

4934
02:35:34,000 --> 02:35:35,000
你说那个什么

4935
02:35:35,000 --> 02:35:38,000
Android Studio 好像也是基于 Eclipse Guide

4936
02:35:38,000 --> 02:35:39,000
是吧

4937
02:35:39,000 --> 02:35:39,000
对

4938
02:35:39,000 --> 02:35:42,000
Android 的开发最开始是一定要装一个

4939
02:35:42,000 --> 02:35:43,000
Eclipse 的插件

4940
02:35:43,000 --> 02:35:44,000
我觉得当时就已经 term off 了

4941
02:35:44,000 --> 02:35:48,000
我这辈子都不要为 Android 的开发程序了

4942
02:35:48,000 --> 02:35:49,000
虽然要用 Eclipse

4943
02:35:49,000 --> 02:35:49,000
对

4944
02:35:49,000 --> 02:35:50,000
然后

4945
02:35:50,000 --> 02:35:52,000
对

4946
02:35:52,000 --> 02:35:55,000
而且 Google App Engine 其实早期也是

4947
02:35:55,000 --> 02:35:58,000
支持你用一个 Eclipse 的插件的开发

4948
02:35:58,000 --> 02:36:00,000
因为它支持 Java 的

4949
02:36:00,000 --> 02:36:01,000
Java 的

4950
02:36:01,000 --> 02:36:02,000
对

4951
02:36:02,000 --> 02:36:03,000
对

4952
02:36:03,000 --> 02:36:04,000
然后

4953
02:36:04,000 --> 02:36:05,000
我就 Android

4954
02:36:05,000 --> 02:36:07,000
我一直有一个假说

4955
02:36:07,000 --> 02:36:09,000
那也肯定是不对的

4956
02:36:09,000 --> 02:36:11,000
但是我倾向于这么想

4957
02:36:11,000 --> 02:36:13,000
就是你等我们老是说

4958
02:36:13,000 --> 02:36:15,000
这个什么 Android 上面的应用

4959
02:36:15,000 --> 02:36:16,000
整体来说

4960
02:36:16,000 --> 02:36:18,000
不如 iOS 上面的好看

4961
02:36:19,000 --> 02:36:20,000
我在想是不是

4962
02:36:20,000 --> 02:36:21,000
和开发工具有关吗

4963
02:36:21,000 --> 02:36:22,000
你想象一下

4964
02:36:22,000 --> 02:36:24,000
如果你一个作为一个

4965
02:36:24,000 --> 02:36:24,000
比如说你是一个

4966
02:36:24,000 --> 02:36:26,000
这是什么所有的独立开发者

4967
02:36:26,000 --> 02:36:27,000
那种大公司

4968
02:36:27,000 --> 02:36:28,000
你说有单独的美工

4969
02:36:28,000 --> 02:36:29,000
那种东西再说

4970
02:36:29,000 --> 02:36:30,000
就是你作为一个

4971
02:36:30,000 --> 02:36:32,000
这种小的两三个人

4972
02:36:32,000 --> 02:36:33,000
或者一个人的团队

4973
02:36:33,000 --> 02:36:34,000
不是

4974
02:36:34,000 --> 02:36:34,000
这个团队

4975
02:36:34,000 --> 02:36:35,000
就是两三个团队和一个人

4976
02:36:35,000 --> 02:36:36,000
你自己一个独立的

4977
02:36:36,000 --> 02:36:38,000
就单单人开发者

4978
02:36:38,000 --> 02:36:41,000
你面对着这么一个丑陋的一个

4979
02:36:41,000 --> 02:36:42,000
一个界面

4980
02:36:42,000 --> 02:36:44,000
你有心情做出一个很好

4981
02:36:44,000 --> 02:36:44,000
很漂亮的产品

4982
02:36:44,000 --> 02:36:46,000
我一直很怀疑这件事情

4983
02:36:46,000 --> 02:36:48,000
起码我每次看到 Eclipse 的时候

4984
02:36:48,000 --> 02:36:51,000
我的那个心态就觉得很骄傲

4985
02:36:51,000 --> 02:36:52,000
很焦虑

4986
02:36:52,000 --> 02:36:53,000
没错

4987
02:36:53,000 --> 02:36:56,000
所以这里可能会影响很多心情

4988
02:36:56,000 --> 02:36:56,000
我觉得

4989
02:36:56,000 --> 02:36:58,000
对

4990
02:36:58,000 --> 02:37:01,000
就好像 XCode 再怎么炒

4991
02:37:01,000 --> 02:37:02,000
再怎么保用

4992
02:37:02,000 --> 02:37:03,000
好像还长得可以的

4993
02:37:03,000 --> 02:37:05,000
画窗体的部分

4994
02:37:05,000 --> 02:37:07,000
还是比较漂亮

4995
02:37:07,000 --> 02:37:08,000
对

4996
02:37:08,000 --> 02:37:10,000
但是反过来在 VlogsDino 下面

4997
02:37:10,000 --> 02:37:14,000
那个一显是一个 Windows Form 1

4998
02:37:14,000 --> 02:37:16,000
然后里面一堆小点

4999
02:37:16,000 --> 02:37:18,000
我立刻就觉得我靠这什么

5000
02:37:19,000 --> 02:37:20,000
它那个小点

5001
02:37:20,000 --> 02:37:21,000
作用是为了能定位对吧

5002
02:37:21,000 --> 02:37:22,000
是定位用的

5003
02:37:22,000 --> 02:37:23,000
就是 Great

5004
02:37:23,000 --> 02:37:25,000
但是明显不如 XCode 的

5005
02:37:25,000 --> 02:37:26,000
叫什么

5006
02:37:26,000 --> 02:37:28,000
那个线条该来嘛好用

5007
02:37:28,000 --> 02:37:28,000
漂亮的

5008
02:37:28,000 --> 02:37:30,000
而且长得丑

5009
02:37:30,000 --> 02:37:31,000
但其实也不能一样了

5010
02:37:31,000 --> 02:37:31,000
对吧

5011
02:37:31,000 --> 02:37:34,000
比如说 App Store 里面

5012
02:37:34,000 --> 02:37:35,000
同样有非常多丑的

5013
02:37:35,000 --> 02:37:37,000
令人发指的 App

5014
02:37:37,000 --> 02:37:41,000
而安兆的下面也的确有比较精美的

5015
02:37:41,000 --> 02:37:43,000
肯定是有什么另外的

5016
02:37:43,000 --> 02:37:44,000
反正永远是存在的

5017
02:37:44,000 --> 02:37:45,000
但我觉得

5018
02:37:45,000 --> 02:37:47,000
我承认你说的有道理

5019
02:37:47,000 --> 02:37:48,000
就是开发者的

5020
02:37:48,000 --> 02:37:50,000
如果面对一个丑陋的工具

5021
02:37:50,000 --> 02:37:51,000
做出来的东西

5022
02:37:51,000 --> 02:37:52,000
很有可能也是丑

5023
02:37:52,000 --> 02:37:54,000
什么进竹角翅

5024
02:37:54,000 --> 02:37:55,000
进墨杂黑

5025
02:37:55,000 --> 02:37:56,000
对

5026
02:37:56,000 --> 02:37:58,000
远离 X 对真爱生命

5027
02:38:00,000 --> 02:38:00,000
别这样

5028
02:38:00,000 --> 02:38:01,000
别这样

5029
02:38:01,000 --> 02:38:02,000
不过

5030
02:38:02,000 --> 02:38:04,000
如果说你是一个拽卖开发者

5031
02:38:04,000 --> 02:38:10,000
然后你想要尝试一款 IDE 的话

5032
02:38:10,000 --> 02:38:12,000
如果没有现有

5033
02:38:12,000 --> 02:38:15,000
那个如果没有现有项目的限制

5034
02:38:15,000 --> 02:38:17,000
那真的 Intellige

5035
02:38:17,000 --> 02:38:20,000
基本上是非常适合这个选择

5036
02:38:20,000 --> 02:38:21,000
我觉得

5037
02:38:22,000 --> 02:38:22,000
因为

5038
02:38:22,000 --> 02:38:24,000
或者说在拽卖开发

5039
02:38:24,000 --> 02:38:25,000
就以我有限的

5040
02:38:25,000 --> 02:38:27,000
粗浅的拽卖开发经验来看

5041
02:38:27,000 --> 02:38:30,000
Intellige, NetBeans, Eclipse

5042
02:38:30,000 --> 02:38:31,000
基本上是三大

5043
02:38:31,000 --> 02:38:33,000
最常被用到的拽卖第一

5044
02:38:33,000 --> 02:38:34,000
而在这里面

5045
02:38:34,000 --> 02:38:37,000
Intellige 算是一个非常用心做的产品

5046
02:38:37,000 --> 02:38:41,000
而且 Intellige 背后的这个公司

5047
02:38:41,000 --> 02:38:42,000
叫什么 JetBrains

5048
02:38:42,000 --> 02:38:44,000
他们还做了很多其他的

5049
02:38:44,000 --> 02:38:45,000
很精样的产品

5050
02:38:45,000 --> 02:38:46,000
比如说

5051
02:38:46,000 --> 02:38:48,000
PHP 的 PHPStorm

5052
02:38:48,000 --> 02:38:54,000
还有 C++的叫做 Cline

5053
02:38:54,000 --> 02:38:57,000
就是不是海诗的 Cline

5054
02:38:57,000 --> 02:38:58,000
而是 C

5055
02:38:58,000 --> 02:39:01,000
然后 Line 就是 C 诗子

5056
02:39:01,000 --> 02:39:02,000
然后还有

5057
02:39:02,000 --> 02:39:04,000
包括 JetBrains 还做了一款

5058
02:39:04,000 --> 02:39:06,000
ObjectC 的 IDE

5059
02:39:06,000 --> 02:39:09,000
我觉得这个也很让人震惊

5060
02:39:09,000 --> 02:39:10,000
就是

5061
02:39:10,000 --> 02:39:12,000
OBGC 开发者

5062
02:39:12,000 --> 02:39:12,000
对

5063
02:39:12,000 --> 02:39:15,000
MAC 开发者本身就已经是一个小群体了

5064
02:39:15,000 --> 02:39:17,000
而这个小群体里面

5065
02:39:17,000 --> 02:39:18,000
分一倍

5066
02:39:18,000 --> 02:39:20,000
用 Xcode 的这种

5067
02:39:20,000 --> 02:39:22,000
蛇我骑谁的工具的人

5068
02:39:22,000 --> 02:39:25,000
其实也习惯了

5069
02:39:25,000 --> 02:39:26,000
没有选择

5070
02:39:26,000 --> 02:39:28,000
而你居然为这么样的群人

5071
02:39:28,000 --> 02:39:30,000
开发出了这么一款 IDE 来

5072
02:39:30,000 --> 02:39:31,000
而且我用了用

5073
02:39:31,000 --> 02:39:32,000
感觉还不错

5074
02:39:32,000 --> 02:39:34,000
也挺难得的

5075
02:39:34,000 --> 02:39:35,000
刚才你也说

5076
02:39:35,000 --> 02:39:36,000
Xcode 有那么多问题

5077
02:39:36,000 --> 02:39:38,000
所以它能做一个

5078
02:39:38,000 --> 02:39:40,000
Achartable 应该是挺好的

5079
02:39:40,000 --> 02:39:41,000
没错

5080
02:39:41,000 --> 02:39:43,000
然后 JetBrains 还有 Python 的 IDE

5081
02:39:43,000 --> 02:39:45,000
就是 Python 如果我一定要用 IDE 的话

5082
02:39:45,000 --> 02:39:49,000
应该会首先想到

5083
02:39:49,000 --> 02:39:53,000
JetBrains 出的这个叫做 Pytharm 的 ID

5084
02:39:53,000 --> 02:39:55,000
也是蛮好的

5085
02:39:55,000 --> 02:39:56,000
对

5086
02:39:56,000 --> 02:39:58,000
Pytharm 也是他们出的

5087
02:39:58,000 --> 02:39:58,000
原来

5088
02:39:58,000 --> 02:39:59,000
Pytharm 是他们出的

5089
02:39:59,000 --> 02:40:00,000
我知道

5090
02:40:00,000 --> 02:40:00,000
这个好忘了

5091
02:40:00,000 --> 02:40:01,000
知道

5092
02:40:01,000 --> 02:40:03,000
还有不少那个 Python 的用户

5093
02:40:03,000 --> 02:40:03,000
在一起

5094
02:40:03,000 --> 02:40:04,000
对

5095
02:40:04,000 --> 02:40:05,000
相当好用

5096
02:40:05,000 --> 02:40:05,000
其实

5097
02:40:05,000 --> 02:40:05,000
对

5098
02:40:05,000 --> 02:40:06,000
对

5099
02:40:06,000 --> 02:40:08,000
就 Intel.j 支持多种配色

5100
02:40:08,000 --> 02:40:10,000
然后要比 Eclipse 快很多

5101
02:40:10,000 --> 02:40:11,000
这是很关键的

5102
02:40:11,000 --> 02:40:13,000
也就比 Eclipse 快很多

5103
02:40:13,000 --> 02:40:16,000
然后它的智能补权

5104
02:40:16,000 --> 02:40:18,000
也是相当的聪明

5105
02:40:18,000 --> 02:40:19,000
最大的问题可能就是

5106
02:40:19,000 --> 02:40:21,000
Intel.j 本身有两个外面

5107
02:40:21,000 --> 02:40:22,000
一个是社区版

5108
02:40:22,000 --> 02:40:23,000
免费的

5109
02:40:23,000 --> 02:40:25,000
但是缺乏很多功能

5110
02:40:25,000 --> 02:40:26,000
比如说

5111
02:40:26,000 --> 02:40:27,000
尤其是你要做

5112
02:40:27,000 --> 02:40:28,000
Jie 一开发的话

5113
02:40:28,000 --> 02:40:31,000
你要用到很多

5114
02:40:31,000 --> 02:40:33,000
就 WattEv 7.1 的功能

5115
02:40:33,000 --> 02:40:36,000
那个 SE 版本是没有

5116
02:40:36,000 --> 02:40:37,000
Community Edition 是没有的

5117
02:40:37,000 --> 02:40:41,000
你必须花钱去买 Intel.j 的

5118
02:40:41,000 --> 02:40:42,000
它就多了一次

5119
02:40:42,000 --> 02:40:43,000
是吧

5120
02:40:43,000 --> 02:40:44,000
对多了一次

5121
02:40:44,000 --> 02:40:46,000
但是你可以以学生身份去买

5122
02:40:46,000 --> 02:40:47,000
应该

5123
02:40:47,000 --> 02:40:48,000
可以

5124
02:40:48,000 --> 02:40:49,000
你不要不你帮我买一个

5125
02:40:49,000 --> 02:40:50,000
可以

5126
02:40:50,000 --> 02:40:50,000
回头我给你钱

5127
02:40:50,000 --> 02:40:52,000
你帮我买一个

5128
02:40:52,000 --> 02:40:53,000
我还挺想弄一个

5129
02:40:53,000 --> 02:40:54,000
但是我将来做 Jie 的可能性

5130
02:40:54,000 --> 02:40:57,000
也为后期为不过

5131
02:40:57,000 --> 02:41:00,000
对 JieBris 曾经在 2014 年

5132
02:41:00,000 --> 02:41:02,000
2012 年的时候搞过一个大促销

5133
02:41:02,000 --> 02:41:06,000
就是世界毁灭的那一天

5134
02:41:06,000 --> 02:41:06,000
就是传言

5135
02:41:06,000 --> 02:41:08,000
马眼人说世界要毁灭的一天

5136
02:41:08,000 --> 02:41:09,000
他们搞了一个大促销

5137
02:41:09,000 --> 02:41:11,000
所有的

5138
02:41:12,000 --> 02:41:14,000
IDE 的 license

5139
02:41:14,000 --> 02:41:15,000
好像统一价 5 收还是多少

5140
02:41:15,000 --> 02:41:16,000
我就可以买下来

5141
02:41:16,000 --> 02:41:18,000
我非常后悔错过那次大促销

5142
02:41:18,000 --> 02:41:19,000
如果世界都毁灭了

5143
02:41:19,000 --> 02:41:21,000
你买个 license 干什么

5144
02:41:23,000 --> 02:41:24,000
说的是

5145
02:41:24,000 --> 02:41:25,000
当时就赌利吧

5146
02:41:25,000 --> 02:41:26,000
赌输

5147
02:41:26,000 --> 02:41:27,000
世界没有毁灭

5148
02:41:27,000 --> 02:41:28,000
我很生气

5149
02:41:28,000 --> 02:41:29,000
别别

5150
02:41:31,000 --> 02:41:32,000
别了

5151
02:41:32,000 --> 02:41:33,000
OK

5152
02:41:33,000 --> 02:41:33,000
对

5153
02:41:33,000 --> 02:41:34,000
还有吗

5154
02:41:34,000 --> 02:41:34,000
差不多

5155
02:41:34,000 --> 02:41:35,000
对气

5156
02:41:35,000 --> 02:41:35,000
没有了

5157
02:41:35,000 --> 02:41:36,000
对

5158
02:41:36,000 --> 02:41:37,000
我们本来还想说一下

5159
02:41:37,000 --> 02:41:39,000
就是简单的说一下

5160
02:41:39,000 --> 02:41:40,000
应该选择编辑器

5161
02:41:40,000 --> 02:41:41,000
还是选择 IDE

5162
02:41:41,000 --> 02:41:43,000
如果你是一个编程出卸者的话

5163
02:41:43,000 --> 02:41:44,000
这个

5164
02:41:44,000 --> 02:41:46,000
其实也不方便展开了

5165
02:41:46,000 --> 02:41:46,000
我觉得

5166
02:41:46,000 --> 02:41:48,000
简单一句话就是

5167
02:41:48,000 --> 02:41:49,000
选你觉得舒服一点

5168
02:41:49,000 --> 02:41:51,000
一个方式吧

5169
02:41:51,000 --> 02:41:53,000
因为有时候我觉得

5170
02:41:53,000 --> 02:41:56,000
有些人喜欢 IDE 的原因

5171
02:41:56,000 --> 02:41:58,000
其实就是 IDE 有一种仪式感

5172
02:41:58,000 --> 02:41:59,000
就是你打开 IDE

5173
02:41:59,000 --> 02:42:00,000
你会觉得自己切换到

5174
02:42:00,000 --> 02:42:02,000
那种工作的状态

5175
02:42:02,000 --> 02:42:04,000
而你仅仅使用一个单独的编辑器的话

5176
02:42:04,000 --> 02:42:05,000
你好像

5177
02:42:05,000 --> 02:42:06,000
我都在干嘛

5178
02:42:06,000 --> 02:42:06,000
玩漂

5179
02:42:06,000 --> 02:42:07,000
写这么一个

5180
02:42:07,000 --> 02:42:08,000
对

5181
02:42:08,000 --> 02:42:11,000
好像一个文件在编辑器里面出现

5182
02:42:11,000 --> 02:42:13,000
和在 IDE 里面出现

5183
02:42:13,000 --> 02:42:14,000
或者是你说

5184
02:42:14,000 --> 02:42:16,000
在一个编辑器的编辑窗口里面出现

5185
02:42:16,000 --> 02:42:18,000
和在一个 IDE 的所谓

5186
02:42:18,000 --> 02:42:20,000
什么工程管理器里面

5187
02:42:20,000 --> 02:42:21,000
装装感不一样的

5188
02:42:21,000 --> 02:42:21,000
对

5189
02:42:21,000 --> 02:42:23,000
装装感是不一样的

5190
02:42:23,000 --> 02:42:24,000
这个对

5191
02:42:24,000 --> 02:42:26,000
这个细小的心理上的差别

5192
02:42:26,000 --> 02:42:27,000
其实还是挺重要的

5193
02:42:27,000 --> 02:42:29,000
对

5194
02:42:29,000 --> 02:42:30,000
是

5195
02:42:30,000 --> 02:42:32,000
我觉得你应该是会选择编辑器吧

5196
02:42:32,000 --> 02:42:34,000
我没有需要用到 IDE 的场合

5197
02:42:34,000 --> 02:42:35,000
起码

5198
02:42:35,000 --> 02:42:35,000
对

5199
02:42:35,000 --> 02:42:36,000
这也是

5200
02:42:36,000 --> 02:42:36,000
对

5201
02:42:36,000 --> 02:42:37,000
所以没有需求

5202
02:42:37,000 --> 02:42:40,000
今天你终于走入这工业界

5203
02:42:40,000 --> 02:42:43,000
你会觉得 IDE 是一个

5204
02:42:45,000 --> 02:42:47,000
你爱它

5205
02:42:47,000 --> 02:42:48,000
对

5206
02:42:48,000 --> 02:42:50,000
就是又爱又恨的这种感觉

5207
02:42:50,000 --> 02:42:51,000
好吧

5208
02:42:51,000 --> 02:42:53,000
我在想像

5209
02:42:53,000 --> 02:42:54,000
会有什么想法

5210
02:42:54,000 --> 02:42:55,000
我可能最

5211
02:42:55,000 --> 02:42:57,000
可能目前最靠谱的场合是

5212
02:42:57,000 --> 02:42:58,000
因为我只想学那个

5213
02:42:58,000 --> 02:43:00,000
就是 LS 开发嘛

5214
02:43:00,000 --> 02:43:02,000
然后可能会接触 X

5215
02:43:02,000 --> 02:43:03,000
其实 Xcode 之前也已经用过了

5216
02:43:03,000 --> 02:43:04,000
就是写作业的时候

5217
02:43:04,000 --> 02:43:06,000
还有 Xlips 也用

5218
02:43:07,000 --> 02:43:08,000
给别人改

5219
02:43:08,000 --> 02:43:09,000
耗别人作业的时候用

5220
02:43:09,000 --> 02:43:11,000
Visual Studio 好像还没有碰过

5221
02:43:11,000 --> 02:43:12,000
不你不打算碰了

5222
02:43:12,000 --> 02:43:13,000
但是就

5223
02:43:13,000 --> 02:43:14,000
这两个来讲

5224
02:43:14,000 --> 02:43:15,000
可能 Xcode 的会是

5225
02:43:15,000 --> 02:43:16,000
如果要用 IDE 的话

5226
02:43:16,000 --> 02:43:17,000
可能会是 Xcode 吧

5227
02:43:19,000 --> 02:43:21,000
可以去试一下

5228
02:43:21,000 --> 02:43:23,000
我希望等我用

5229
02:43:23,000 --> 02:43:24,000
等我用到的时候

5230
02:43:24,000 --> 02:43:26,000
它就不要再那么不稳定了

5231
02:43:26,000 --> 02:43:28,000
hopefully

5232
02:43:28,000 --> 02:43:28,000
对

5233
02:43:28,000 --> 02:43:30,000
你就最好坚持用那个

5234
02:43:30,000 --> 02:43:32,000
比较不稳定的版本

5235
02:43:32,000 --> 02:43:33,000
而不要用那个更不稳定的版本

5236
02:43:33,000 --> 02:43:35,000
我这个我一般还是

5237
02:43:35,000 --> 02:43:36,000
选择不折腾的

5238
02:43:36,000 --> 02:43:39,000
就是一定用官方发布的稳定版

5239
02:43:39,000 --> 02:43:40,000
什么

5240
02:43:40,000 --> 02:43:42,000
Developer Preview 什么离我远一点

5241
02:43:42,000 --> 02:43:45,000
对 Xcode 用户最悲惨的时刻

5242
02:43:45,000 --> 02:43:47,000
不过于苹果说 Xcode 新版出了

5243
02:43:47,000 --> 02:43:48,000
请你升级

5244
02:43:48,000 --> 02:43:50,000
升级时候发现它一直快

5245
02:43:52,000 --> 02:43:53,000
对

5246
02:43:53,000 --> 02:43:56,000
这是一个非常令人讨厌的事情

5247
02:43:57,000 --> 02:43:57,000
好吧

5248
02:43:57,000 --> 02:43:58,000
那今天现在

5249
02:43:58,000 --> 02:44:01,000
这一次时间也蛮长的

5250
02:44:01,000 --> 02:44:02,000
不知道最后会剪出来多久

5251
02:44:03,000 --> 02:44:08,000
非常凑巧的是本期节目录制完成之后的

5252
02:44:08,000 --> 02:44:09,000
周三

5253
02:44:09,000 --> 02:44:11,000
也就是 10 月 12 日

5254
02:44:11,000 --> 02:44:16,000
微软将其.NET 平台的服务器端开源

5255
02:44:16,000 --> 02:44:18,000
并且宣传会扩展

5256
02:44:18,000 --> 02:44:23,000
支持 Linux 和 MacOS 平台

5257
02:44:23,000 --> 02:44:24,000
与此同时

5258
02:44:24,000 --> 02:44:28,000
我们提到的 Visual Studio 也推出了一个叫做

5259
02:44:28,000 --> 02:44:30,000
Community Edition

5260
02:44:30,000 --> 02:44:31,000
对 Community Edition

5261
02:44:31,000 --> 02:44:34,000
iM 2013 的版本

5262
02:44:35,000 --> 02:44:36,000
它是免费的

5263
02:44:36,000 --> 02:44:37,000
对

5264
02:44:37,000 --> 02:44:41,000
所以我跟 Rail 大概也都会去下载

5265
02:44:41,000 --> 02:44:43,000
然后试着用一下

5266
02:44:43,000 --> 02:44:44,000
看看观感如何

