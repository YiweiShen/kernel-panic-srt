1
00:00:00,000 --> 00:00:02,000
我现在感觉耳机很有问题

2
00:00:02,000 --> 00:00:05,000
因为我现在是用的是 AirPods

3
00:00:05,000 --> 00:00:06,000
等一下我换一下

4
00:00:06,000 --> 00:00:09,000
不要用无线的 找个有线的耳机

5
00:00:09,000 --> 00:00:10,000
不然会很不稳定的

6
00:00:10,000 --> 00:00:13,000
主要是我手机没什么电

7
00:00:13,000 --> 00:00:14,000
行 我换好了

8
00:00:14,000 --> 00:00:15,000
好 不好意思

9
00:00:15,000 --> 00:00:20,000
所以这回苹果 12 的背上贴的充电就有用了

10
00:00:20,000 --> 00:00:21,000
就是那可以去边充电

11
00:00:21,000 --> 00:00:23,000
然后下面插上无线耳机

12
00:00:23,000 --> 00:00:24,000
没有 因为我买的是 mini

13
00:00:24,000 --> 00:00:26,000
然后这个电量就感觉超小

14
00:00:26,000 --> 00:00:28,000
用到一天晚上差不多就不够了

15
00:00:29,000 --> 00:00:29,000
真的很差的吗

16
00:00:29,000 --> 00:00:32,000
我还想说那天我去店里试了一下

17
00:00:32,000 --> 00:00:34,000
那个 mini 的手感我觉得还挺不错的

18
00:00:34,000 --> 00:00:35,000
mini 是很好

19
00:00:35,000 --> 00:00:36,000
就是很好

20
00:00:36,000 --> 00:00:38,000
那它肯定电池就没有其他那么大

21
00:00:38,000 --> 00:00:41,000
就是很纠结这个事情好烦

22
00:00:41,000 --> 00:00:43,000
它能不能把摄像头剪掉

23
00:00:43,000 --> 00:00:46,000
只剩一个 然后腾点空间给电池

24
00:00:48,000 --> 00:00:50,000
你去跟苹果说吧

25
00:00:50,000 --> 00:00:51,000
好了 我们开始录吧

26
00:00:58,000 --> 00:01:13,000
大家好 今天是 2021 年的 3 月 16 号

27
00:01:13,000 --> 00:01:16,000
自弹自唱的第 147 期

28
00:01:16,000 --> 00:01:19,000
同学是内核恐慌的第 93 期

29
00:01:19,000 --> 00:01:22,000
这也是自弹自唱与内核恐慌的串台

30
00:01:22,000 --> 00:01:24,000
自弹自串的第 10 期

31
00:01:24,000 --> 00:01:26,000
自弹自唱是德太皮下全球首家

32
00:01:26,000 --> 00:01:30,000
用华语制作的自体排音主题播客节目

33
00:01:30,000 --> 00:01:33,000
我是主播文川西班东英俱 Eric

34
00:01:33,000 --> 00:01:36,000
我是主播黄普 嘉宾 秦真宇 险真宇

35
00:01:36,000 --> 00:01:41,000
那个恐慌是一档大致以计算机科技为主题的娱乐 Podcast

36
00:01:41,000 --> 00:01:43,000
我们号称硬核 但是也没有什么干货

37
00:01:43,000 --> 00:01:45,000
想听人听 不想听人就别听

38
00:01:45,000 --> 00:01:47,000
我们的网址是 pandoticeu

39
00:01:47,000 --> 00:01:50,000
您可以在网站上找到订阅我们的节目

40
00:01:50,000 --> 00:01:53,000
订阅我们节目的方法以及联络我们的方式

41
00:01:53,000 --> 00:01:54,000
我是吴涛

42
00:01:54,000 --> 00:01:55,000
我是 Rail

43
00:01:55,000 --> 00:01:57,000
有台主播 你们好

44
00:01:57,000 --> 00:01:59,000
我们居然已经开始做第 17 的串台了

45
00:01:59,000 --> 00:02:01,000
两位数了

46
00:02:01,000 --> 00:02:02,000
托你们的福啊

47
00:02:02,000 --> 00:02:04,000
我们才能够保持更新的节奏

48
00:02:05,000 --> 00:02:06,000
没关系

49
00:02:06,000 --> 00:02:07,000
反正这期的话

50
00:02:07,000 --> 00:02:08,000
主要是吴涛在说

51
00:02:08,000 --> 00:02:10,000
我只负责听

52
00:02:10,000 --> 00:02:10,000
是这样吗

53
00:02:10,000 --> 00:02:13,000
我怎么为什么我事先没有得到通知

54
00:02:14,000 --> 00:02:15,000
现在你知道了

55
00:02:15,000 --> 00:02:17,000
所以让你写这个提纲

56
00:02:17,000 --> 00:02:20,000
因为这次我们来串台的一个非常重要的主题

57
00:02:20,000 --> 00:02:23,000
宗师级程序员的自体排音几个方案

58
00:02:23,000 --> 00:02:28,000
我们要来终于可以来拜一拜我们的高德纳大先生

59
00:02:28,000 --> 00:02:29,000
是的

60
00:02:29,000 --> 00:02:30,000
其实我不知道你们两个

61
00:02:30,000 --> 00:02:35,000
就是我跟 Rail 都只是用拉太写过那个写过论文而已

62
00:02:35,000 --> 00:02:36,000
你们两个就是

63
00:02:36,000 --> 00:02:37,000
或者说

64
00:02:37,000 --> 00:02:39,000
不如我们四个人轮流来说一说

65
00:02:39,000 --> 00:02:42,000
怎么知道拉太和或者说 Tec 这段事情的吧

66
00:02:44,000 --> 00:02:45,000
我先说吧

67
00:02:45,000 --> 00:02:48,000
我应该是在本科的时候知道了这个这个人

68
00:02:48,000 --> 00:02:49,000
他的事

69
00:02:49,000 --> 00:02:52,000
就是以及他写的这本书

70
00:02:52,000 --> 00:02:55,000
但是那个时候我对 Tec 这个东西还没有什么概念

71
00:02:55,000 --> 00:02:58,000
我在本我大概是在本科的时候接触了外部编程

72
00:02:58,000 --> 00:03:01,000
然后学了什么 HTML

73
00:03:01,000 --> 00:03:02,000
SSS 之类的

74
00:03:02,000 --> 00:03:06,000
然后那个时候正好是赶上了外部前端开发了一次革新吧

75
00:03:06,000 --> 00:03:10,000
就是在在我上大学之前

76
00:03:10,000 --> 00:03:12,000
外部开发基本上就是你在

77
00:03:12,000 --> 00:03:13,000
你在 Fotoshop 或者是 Whatever

78
00:03:13,000 --> 00:03:15,000
什么 Dream River 之类的地方里面

79
00:03:15,000 --> 00:03:16,000
做一个设计

80
00:03:16,000 --> 00:03:19,000
然后把这个设计切成很多小块

81
00:03:19,000 --> 00:03:23,000
然后这个设计工具会帮你转换成一个 table

82
00:03:23,000 --> 00:03:30,000
然后你用编程语言去等于轮流转换这个 table 里面的每一个块

83
00:03:30,000 --> 00:03:31,000
然后在我上大学之后

84
00:03:31,000 --> 00:03:32,000
就我大学毕业之后

85
00:03:32,000 --> 00:03:34,000
外部开发的标准变成了

86
00:03:34,000 --> 00:03:37,000
你要一语一的方式去描述整个文档的结构

87
00:03:37,000 --> 00:03:43,000
然后用 SSS 去改变每个文档的样式

88
00:03:43,000 --> 00:03:44,000
然后大概就是在这个时候我

89
00:03:44,000 --> 00:03:48,000
影约听说了在桌面出版界也有这么一个东西

90
00:03:49,000 --> 00:03:54,000
但是真正用到它还是到了德国之后写说实论文的时候

91
00:03:54,000 --> 00:03:56,000
就大概明白了这个东西

92
00:03:56,000 --> 00:03:58,000
它的来历已经它的用处

93
00:03:58,000 --> 00:04:04,000
然后怎么说用自己对 HML 和 SSS 理解去使用它

94
00:04:04,000 --> 00:04:05,000
然后碰着头破血流

95
00:04:05,000 --> 00:04:09,000
然后在历经了坎坷之后终于把论文搞出来了

96
00:04:09,000 --> 00:04:12,000
但大概就是我跟 Tag LaTag 的全部的远远

97
00:04:12,000 --> 00:04:14,000
然后我在毕业之后

98
00:04:14,000 --> 00:04:17,000
2010 年刚刚加入 TIB 的时候

99
00:04:17,000 --> 00:04:19,000
对 TIB 的贡献之一

100
00:04:19,000 --> 00:04:22,000
就是我在 2011 年写过一篇 Computer Modern 的故事

101
00:04:22,000 --> 00:04:24,000
就是高丹娜发明的

102
00:04:24,000 --> 00:04:27,000
不是她发明她电子数字化了这款字体

103
00:04:27,000 --> 00:04:31,000
然后用来排他的 PLCP 的这本书

104
00:04:31,000 --> 00:04:36,000
这本书基本上简短的解释了 LaTag 的整个的远远

105
00:04:36,000 --> 00:04:37,000
各位如果有兴趣的话

106
00:04:37,000 --> 00:04:42,000
可以去看一下文章在 thetype.com

107
00:04:42,000 --> 00:04:44,000
然后你可以在上面搜 Computer Modern

108
00:04:44,000 --> 00:04:46,000
然后应该能搜到这篇文章

109
00:04:46,000 --> 00:04:49,000
是 2010 年 2 月 05 号写的

110
00:04:49,000 --> 00:04:53,000
当然我们又会把这篇文章的链接放到今天的 Show Notes 里面

111
00:04:53,000 --> 00:04:54,000
大家可以去看

112
00:04:54,000 --> 00:04:56,000
2010 年时候的文章

113
00:04:58,000 --> 00:04:58,000
行 我说完了

114
00:04:58,000 --> 00:05:00,000
那接下来是 Rex

115
00:05:00,000 --> 00:05:03,000
不是 Rex

116
00:05:03,000 --> 00:05:05,000
新戏站长

117
00:05:05,000 --> 00:05:07,000
那个 Rail 你说一下

118
00:05:07,000 --> 00:05:11,000
我第一次接触应该是用 LaTag 写

119
00:05:12,000 --> 00:05:13,000
等一下 这边到底怎么念

120
00:05:13,000 --> 00:05:15,000
我们要不要先科普一下

121
00:05:15,000 --> 00:05:16,000
LaTag 你念的是对的

122
00:05:16,000 --> 00:05:17,000
Tag

123
00:05:17,000 --> 00:05:19,000
是 La 不是 Lay 的吧

124
00:05:19,000 --> 00:05:22,000
反正我一直念 LaTag

125
00:05:22,000 --> 00:05:23,000
其实有人念 Lay 的

126
00:05:23,000 --> 00:05:26,000
但是一般我们都念 La

127
00:05:26,000 --> 00:05:30,000
好的 我当时是在上大学本科的时候

128
00:05:30,000 --> 00:05:32,000
然后写作业

129
00:05:32,000 --> 00:05:33,000
然后我

130
00:05:33,000 --> 00:05:34,000
因为我不是写字

131
00:05:34,000 --> 00:05:36,000
就是手写很丑嘛

132
00:05:36,000 --> 00:05:37,000
然后我就不想手写

133
00:05:37,000 --> 00:05:40,000
我都一直从大概

134
00:05:40,000 --> 00:05:42,000
应该从大学开始基本上教课也都没有手写过

135
00:05:42,000 --> 00:05:43,000
除了考试是必须手写的

136
00:05:43,000 --> 00:05:47,000
那时候都是用电脑排版好

137
00:05:47,000 --> 00:05:48,000
然后就去打印

138
00:05:48,000 --> 00:05:49,000
然后再教嘛

139
00:05:49,000 --> 00:05:51,000
然后后来是因为学科的

140
00:05:51,000 --> 00:05:53,000
就是有几个课程的关系

141
00:05:53,000 --> 00:05:59,000
它会涉及到比较多的公式和数学的一些排版

142
00:05:59,000 --> 00:06:02,000
还有像一些这种图形什么的

143
00:06:02,000 --> 00:06:06,000
然后我就想说找一个特别好用的一个工具

144
00:06:06,000 --> 00:06:07,000
来解决这个问题

145
00:06:07,000 --> 00:06:09,000
当时 Ward 肯定是不行的

146
00:06:09,000 --> 00:06:12,000
当时 Ward 很久已经没有数学排版工具

147
00:06:12,000 --> 00:06:15,000
实在是太垃圾了

148
00:06:15,000 --> 00:06:16,000
所以后来就多多转转

149
00:06:16,000 --> 00:06:20,000
当时也在玩像 Linux 那些系统

150
00:06:20,000 --> 00:06:22,000
然后就在找到了这么一个工具

151
00:06:22,000 --> 00:06:26,000
应该是受了谁的骨祸来的我想想

152
00:06:26,000 --> 00:06:27,000
应该是王瓶

153
00:06:27,000 --> 00:06:28,000
如果没错的话

154
00:06:28,000 --> 00:06:29,000
没记错的话

155
00:06:29,000 --> 00:06:30,000
对

156
00:06:30,000 --> 00:06:33,000
当时他不是写了有几篇还影响挺深的一个文章

157
00:06:33,000 --> 00:06:36,000
其中就是在都受这个拉太和这个东西

158
00:06:36,000 --> 00:06:37,000
然后我就去学了一下

159
00:06:37,000 --> 00:06:39,000
然后飞了牛逼子镜

160
00:06:39,000 --> 00:06:43,000
装上了一个我们叫什么一个 Distribution

161
00:06:43,000 --> 00:06:45,000
然后就开始用那个写作业

162
00:06:45,000 --> 00:06:47,000
然后后来是写毕业论文

163
00:06:47,000 --> 00:06:48,000
然后去国外上学

164
00:06:48,000 --> 00:06:51,000
写作业和毕业论文差不多也就这么感

165
00:06:51,000 --> 00:06:52,000
然后之后就再也没用过

166
00:06:52,000 --> 00:06:55,000
差不多是这么一个过程

167
00:06:55,000 --> 00:06:58,000
所以你的论文也是用拉太和写的

168
00:06:58,000 --> 00:06:59,000
我毕竟读 CS 吗

169
00:06:59,000 --> 00:07:02,000
那肯定还是要对吧

170
00:07:02,000 --> 00:07:04,000
这两者之间有毕业的关联吗

171
00:07:04,000 --> 00:07:07,000
就是我相信大部分

172
00:07:07,000 --> 00:07:10,000
我们听众里面读 CS 的人也未必是用拉太和写的

173
00:07:10,000 --> 00:07:11,000
毕业论文

174
00:07:11,000 --> 00:07:12,000
那或者这么说

175
00:07:12,000 --> 00:07:14,000
如果你又想用拉太和写的写作业

176
00:07:14,000 --> 00:07:16,000
然后你又不是 CS 的

177
00:07:16,000 --> 00:07:17,000
其实不是很尴尬

178
00:07:17,000 --> 00:07:18,000
那可不一定

179
00:07:18,000 --> 00:07:20,000
拉太和其实现在基本上

180
00:07:20,000 --> 00:07:23,000
你觉得现在拉太和最大的用途是在哪

181
00:07:23,000 --> 00:07:25,000
就发络我哪

182
00:07:25,000 --> 00:07:30,000
任何业界需要公式的地方

183
00:07:30,000 --> 00:07:33,000
但实际上 configure science 并不是一个最需要公式的地方

184
00:07:33,000 --> 00:07:34,000
OK

185
00:07:34,000 --> 00:07:35,000
那那个时候我需要

186
00:07:35,000 --> 00:07:36,000
然后

187
00:07:36,000 --> 00:07:38,000
但我当时有一个

188
00:07:38,000 --> 00:07:39,000
我们在学校外面租房子住

189
00:07:39,000 --> 00:07:40,000
有一个室友

190
00:07:40,000 --> 00:07:41,000
他是有工程的

191
00:07:41,000 --> 00:07:43,000
就是那种 engineering

192
00:07:43,000 --> 00:07:46,000
好像也是用拉太和写别论文比较多

193
00:07:46,000 --> 00:07:47,000
因为他们论文也比较长

194
00:07:47,000 --> 00:07:49,000
有比较多复杂的计算的过程

195
00:07:49,000 --> 00:07:51,000
所以他们也是用那个的

196
00:07:51,000 --> 00:07:54,000
所以反正就是都在用

197
00:07:54,000 --> 00:07:57,000
就反而是用 ward 的那些是比较相对来说少一点点

198
00:07:59,000 --> 00:07:59,000
对

199
00:07:59,000 --> 00:08:01,000
郑云你是怎么用上

200
00:08:01,000 --> 00:08:03,000
你是怎么接触到 tech 的吗

201
00:08:03,000 --> 00:08:04,000
你介绍一下好了

202
00:08:05,000 --> 00:08:09,000
其实郑云也是本科用拉太和写的论文

203
00:08:10,000 --> 00:08:11,000
怎么可能

204
00:08:12,000 --> 00:08:13,000
我觉得我应该

205
00:08:13,000 --> 00:08:15,000
我应该引用那个就是

206
00:08:15,000 --> 00:08:17,000
你们先聊我有点事先做

207
00:08:18,000 --> 00:08:19,000
我其实没有

208
00:08:19,000 --> 00:08:22,000
我其实至今没有用过 tech 来做

209
00:08:23,000 --> 00:08:25,000
任何事情

210
00:08:25,000 --> 00:08:26,000
应该说对

211
00:08:26,000 --> 00:08:27,000
我怎么知道 tech 的

212
00:08:27,000 --> 00:08:29,000
我觉得我是因为先知道了你们

213
00:08:29,000 --> 00:08:30,000
所以才知道了

214
00:08:30,000 --> 00:08:30,000
太

215
00:08:32,000 --> 00:08:33,000
这我们受宠若惊啊

216
00:08:33,000 --> 00:08:34,000
我们简直

217
00:08:35,000 --> 00:08:38,000
居然做到了什么心境火船的这样一个

218
00:08:38,000 --> 00:08:38,000
对

219
00:08:38,000 --> 00:08:39,000
我的太和认知

220
00:08:39,000 --> 00:08:40,000
其实是一个就是

221
00:08:40,000 --> 00:08:43,000
就像刚才任何吴涛也说的

222
00:08:43,000 --> 00:08:45,000
就是他是一个在公式领域

223
00:08:45,000 --> 00:08:47,000
非常有用的这样子的一个排版工具

224
00:08:47,000 --> 00:08:50,000
但其实我曾经大概在

225
00:08:50,000 --> 00:08:51,000
可能在五六年前

226
00:08:51,000 --> 00:08:54,000
一度有想过要去用太和

227
00:08:54,000 --> 00:08:56,000
因为我当时有一个非常实际的需求

228
00:08:56,000 --> 00:08:58,000
就是我当时差不多每个季度

229
00:08:58,000 --> 00:09:00,000
都会有一个

230
00:09:00,000 --> 00:09:00,000
呃

231
00:09:00,000 --> 00:09:01,000
类似像

232
00:09:01,000 --> 00:09:02,000
呃

233
00:09:02,000 --> 00:09:03,000
内部刊物排版的这样一个工作

234
00:09:03,000 --> 00:09:05,000
玩那个刊物的业数非常的多

235
00:09:05,000 --> 00:09:09,000
大概是在千业这样子的一个数量级的

236
00:09:09,000 --> 00:09:11,000
所以我当时其实有想过要用 tech 去做一个

237
00:09:11,000 --> 00:09:14,000
比较自动化的排版的流程

238
00:09:14,000 --> 00:09:17,000
但后来一直一直没有动靡去做这个事情

239
00:09:17,000 --> 00:09:17,000
等等

240
00:09:17,000 --> 00:09:20,000
你说你每个月要排 1000 业的内部刊物

241
00:09:20,000 --> 00:09:21,000
每个季度左右

242
00:09:21,000 --> 00:09:23,000
对每个季度三三个月左右

243
00:09:23,000 --> 00:09:24,000
每个季

244
00:09:24,000 --> 00:09:26,000
每三个月要排 1000 业

245
00:09:26,000 --> 00:09:26,000
oh my god

246
00:09:28,000 --> 00:09:30,000
我我不进心里勇气的意思

247
00:09:30,000 --> 00:09:31,000
怎么说同情

248
00:09:31,000 --> 00:09:32,000
什么内容啊

249
00:09:32,000 --> 00:09:34,000
好讨奇的问一下

250
00:09:34,000 --> 00:09:34,000
啊

251
00:09:34,000 --> 00:09:37,000
是是我当时在的一个团队

252
00:09:37,000 --> 00:09:37,000
呃

253
00:09:37,000 --> 00:09:38,000
我们自己做的一些出版

254
00:09:38,000 --> 00:09:40,000
其实这个大家可以找到的

255
00:09:40,000 --> 00:09:41,000
我当时在那个团队叫震荐

256
00:09:41,000 --> 00:09:42,000
然后我们的

257
00:09:42,000 --> 00:09:46,000
当时的出版物是以计刊或者半年刊的方式来发布的

258
00:09:46,000 --> 00:09:48,000
其实是将大家写的一些文章

259
00:09:48,000 --> 00:09:49,000
可想

260
00:09:49,000 --> 00:09:52,000
当然这个 1000 业的开本是一个 A 5 左右的开本

261
00:09:52,000 --> 00:09:54,000
而且字号相对算是比较大的

262
00:09:54,000 --> 00:09:55,000
所以

263
00:09:55,000 --> 00:09:57,000
工作量可能没有那么的多吧

264
00:09:57,000 --> 00:09:59,000
但大概也有这样子的一个量级

265
00:09:59,000 --> 00:10:00,000
A 5 就是 A 4 的一半嘛

266
00:10:00,000 --> 00:10:01,000
1000 业

267
00:10:01,000 --> 00:10:03,000
A 5 那也有 500 业的 A 4

268
00:10:03,000 --> 00:10:04,000
那也是非常厚的一本书

269
00:10:05,000 --> 00:10:06,000
啊对

270
00:10:08,000 --> 00:10:09,000
我知道

271
00:10:09,000 --> 00:10:11,000
真一直都在做阵界

272
00:10:11,000 --> 00:10:12,000
但是我

273
00:10:12,000 --> 00:10:16,000
但是我没有想到就是当时有每个季度 1000 多业的量

274
00:10:16,000 --> 00:10:17,000
就是

275
00:10:17,000 --> 00:10:19,000
因为我也没认真看

276
00:10:19,000 --> 00:10:20,000
有的时候会少一点

277
00:10:20,000 --> 00:10:22,000
可能几百业吧

278
00:10:22,000 --> 00:10:23,000
多的时候会比较多

279
00:10:23,000 --> 00:10:25,000
我给你们济试

280
00:10:25,000 --> 00:10:26,000
艾尔克来说一下吧

281
00:10:26,000 --> 00:10:27,000
好

282
00:10:27,000 --> 00:10:28,000
那你有对

283
00:10:28,000 --> 00:10:30,000
我也是在大学的时候

284
00:10:30,000 --> 00:10:33,000
第一次知道太阔的

285
00:10:33,000 --> 00:10:35,000
每次在串打的时候

286
00:10:35,000 --> 00:10:35,000
都要说到

287
00:10:35,000 --> 00:10:41,000
我的大学的第二学是计算机的这样一个黑历史

288
00:10:41,000 --> 00:10:42,000
但是呢

289
00:10:42,000 --> 00:10:43,000
我那时候

290
00:10:43,000 --> 00:10:48,000
第二学位的论文是并不需要用那么多公式

291
00:10:48,000 --> 00:10:48,000
所以呢

292
00:10:48,000 --> 00:10:54,000
我们当时的第二学位的论文不是用太阔写的

293
00:10:54,000 --> 00:10:57,000
那我第一学位大家也知道我是学日语的嘛

294
00:10:57,000 --> 00:10:59,000
那就更是不用大家多去问问的

295
00:10:59,000 --> 00:11:02,000
那我用太阔的是因为

296
00:11:02,000 --> 00:11:03,000
因为我高中也是学理科的嘛

297
00:11:03,000 --> 00:11:07,000
所以就要做一些什么卷子之类的内心东西

298
00:11:07,000 --> 00:11:09,000
都是用 world 排的这个公式

299
00:11:09,000 --> 00:11:10,000
然后觉得很难用

300
00:11:10,000 --> 00:11:11,000
到了大学本科以后呢

301
00:11:11,000 --> 00:11:13,000
有那个同学介绍说

302
00:11:13,000 --> 00:11:14,000
就咱们理工科的

303
00:11:14,000 --> 00:11:15,000
真的就是理工科的东西

304
00:11:15,000 --> 00:11:17,000
那比如他们都用太阔嘛

305
00:11:17,000 --> 00:11:18,000
所以我就拿来用了

306
00:11:18,000 --> 00:11:19,000
可是这个东西太难用

307
00:11:19,000 --> 00:11:21,000
就是因为要组装嘛

308
00:11:21,000 --> 00:11:22,000
就各种各样的包啊

309
00:11:22,000 --> 00:11:23,000
怎么搞不清楚

310
00:11:23,000 --> 00:11:26,000
所以我当时就是为了解决零食的问题

311
00:11:26,000 --> 00:11:29,000
我干脆就是用一个太阔

312
00:11:29,000 --> 00:11:31,000
先排出需要的公式

313
00:11:31,000 --> 00:11:33,000
然后呢生成 PDF 以后

314
00:11:33,000 --> 00:11:36,000
然后再把这个 PDF 转取以后再嵌到我

315
00:11:36,000 --> 00:11:38,000
平面是比如说我用那个

316
00:11:38,000 --> 00:11:39,000
elastic rate 给它嵌进来

317
00:11:39,000 --> 00:11:41,000
我就是为了排这个公式

318
00:11:41,000 --> 00:11:43,000
临时给它嵌进来而已

319
00:11:43,000 --> 00:11:48,000
我从来没有用太阔就做个完整的一个文档

320
00:11:48,000 --> 00:11:49,000
或者就是中文的文档

321
00:11:49,000 --> 00:11:51,000
从来我从来没有做过

322
00:11:51,000 --> 00:11:54,000
我就是为了导出一个单独的一个公式

323
00:11:54,000 --> 00:11:57,000
然后就生成一个东西就做过而已

324
00:11:57,000 --> 00:11:59,000
其实我要补出一下

325
00:11:59,000 --> 00:12:01,000
刚才其实我们都一直在讲

326
00:12:01,000 --> 00:12:06,000
是因为为了数学公式才用的这个单台

327
00:12:06,000 --> 00:12:07,000
后来我刚翻了一下

328
00:12:07,000 --> 00:12:13,000
我之前写了那些什么作业和论文的那些文档

329
00:12:13,000 --> 00:12:14,000
刚还在电脑里面

330
00:12:14,000 --> 00:12:17,000
其实发现数学公式也不算特别多

331
00:12:17,000 --> 00:12:21,000
但是其实有很多像什么程序代码

332
00:12:21,000 --> 00:12:22,000
你知道那个就是 DoSes

333
00:12:22,000 --> 00:12:24,000
它很多是那种伪代码

334
00:12:24,000 --> 00:12:25,000
并不是真的那种

335
00:12:25,000 --> 00:12:29,000
你要用等宽字体排印的那种真的

336
00:12:29,000 --> 00:12:30,000
我们可以编译的那种代码

337
00:12:30,000 --> 00:12:32,000
它很多是伪代码是不等宽

338
00:12:32,000 --> 00:12:33,000
然后有各种很多稀奇古怪的

339
00:12:33,000 --> 00:12:35,000
剑头符号那种东西的

340
00:12:35,000 --> 00:12:37,000
比如点心的一个

341
00:12:37,000 --> 00:12:40,000
就是 Grammer 的那些 Lexer 那些东西

342
00:12:40,000 --> 00:12:42,000
然后还有一个就是当时我想起来了

343
00:12:42,000 --> 00:12:44,000
当时为了用这个东西是为了画

344
00:12:44,000 --> 00:12:48,000
这个叫做什么叫做 Automata

345
00:12:48,000 --> 00:12:51,000
自动机的那个图形

346
00:12:51,000 --> 00:12:54,000
然后当时用了一个那个就是 Tag

347
00:12:54,000 --> 00:12:56,000
Lattac 有一个 Grammer 这种

348
00:12:56,000 --> 00:12:57,000
因为 Lattac 比较灵活

349
00:12:57,000 --> 00:12:59,000
它可以做很多的插件

350
00:12:59,000 --> 00:13:01,000
当时有一个非常好用的插件

351
00:13:01,000 --> 00:13:03,000
应该叫做 Tikz

352
00:13:03,000 --> 00:13:04,000
如果没句错名字的话

353
00:13:04,000 --> 00:13:05,000
Tigs 对

354
00:13:05,000 --> 00:13:06,000
对

355
00:13:06,000 --> 00:13:06,000
怎么念

356
00:13:06,000 --> 00:13:07,000
我不知道

357
00:13:07,000 --> 00:13:09,000
反正它的就是四个字母 Tikz

358
00:13:09,000 --> 00:13:10,000
应该是 Tigs

359
00:13:10,000 --> 00:13:12,000
我念 Tigs

360
00:13:12,000 --> 00:13:13,000
对 它就非常灵活

361
00:13:13,000 --> 00:13:15,000
等于是一套类似于

362
00:13:15,000 --> 00:13:19,000
您可以认为是一个可编程的会图的一个语言

363
00:13:19,000 --> 00:13:21,000
然后浅在 Lattac 里面

364
00:13:21,000 --> 00:13:24,000
就可以做各种各样的非常精美的图形

365
00:13:24,000 --> 00:13:27,000
比如说你要这个箭头转个 35 度半

366
00:13:27,000 --> 00:13:30,000
然后再和另外一个圆圈连起来

367
00:13:30,000 --> 00:13:32,000
再穿过那个圆心这种之类的事情

368
00:13:32,000 --> 00:13:35,000
就是你用任何其他的现成的工具

369
00:13:35,000 --> 00:13:36,000
都是没法去描述这个东西的

370
00:13:36,000 --> 00:13:38,000
进去描述

371
00:13:38,000 --> 00:13:40,000
所以就是当时有

372
00:13:40,000 --> 00:13:44,000
其实工事倒并不是我用它的最核心的一个事情

373
00:13:44,000 --> 00:13:45,000
我后来发现

374
00:13:45,000 --> 00:13:47,000
然后还有一个事就是刚才

375
00:13:47,000 --> 00:13:48,000
正于也提到这个

376
00:13:48,000 --> 00:13:49,000
让我也想起来

377
00:13:49,000 --> 00:13:50,000
就是如果说你的那个文档

378
00:13:50,000 --> 00:13:52,000
不要说 1000 页了

379
00:13:52,000 --> 00:13:54,000
就超过比如说 100 页

380
00:13:54,000 --> 00:13:56,000
然后你用这种任何

381
00:13:56,000 --> 00:13:57,000
这种所建基所得的编辑工具

382
00:13:57,000 --> 00:13:58,000
莫德也好

383
00:13:58,000 --> 00:14:02,000
当时还试过各种什么 Open Office 这种东西

384
00:14:02,000 --> 00:14:04,000
就是它的那个性能是直线下降的

385
00:14:04,000 --> 00:14:05,000
就是已经超过几十

386
00:14:05,000 --> 00:14:08,000
就三位数的页就基本上没法用

387
00:14:08,000 --> 00:14:10,000
那个时候我记得用的那个

388
00:14:10,000 --> 00:14:12,000
那个电脑的性能也一般

389
00:14:12,000 --> 00:14:14,000
然后如果是特别长的文档

390
00:14:14,000 --> 00:14:15,000
就你一次编因为那个

391
00:14:15,000 --> 00:14:17,000
每次叫编译才能输出

392
00:14:17,000 --> 00:14:18,000
那个 PDF 的结果

393
00:14:18,000 --> 00:14:20,000
那个编译时间也还蛮长的

394
00:14:20,000 --> 00:14:22,000
后来就是分分成那个章节

395
00:14:22,000 --> 00:14:22,000
对吧

396
00:14:22,000 --> 00:14:24,000
我在当时我在写这个章节

397
00:14:24,000 --> 00:14:26,000
我就我就只编译当前那个章节

398
00:14:26,000 --> 00:14:28,000
然后最后再合在一起的时候

399
00:14:28,000 --> 00:14:30,000
我在这个合在一起在编译

400
00:14:30,000 --> 00:14:31,000
这样就可以节省那个时间

401
00:14:31,000 --> 00:14:33,000
虽然也不是所建基所的

402
00:14:33,000 --> 00:14:34,000
但是整个它的那个

403
00:14:34,000 --> 00:14:37,000
Feedback Loop 就是还是比较比较快的

404
00:14:38,000 --> 00:14:38,000
对

405
00:14:38,000 --> 00:14:41,000
这实际上你的输入大到一个规模的时候

406
00:14:41,000 --> 00:14:43,000
你就必须用管理原来版的方式

407
00:14:43,000 --> 00:14:44,000
来管理这个场合

408
00:14:44,000 --> 00:14:47,000
其实作家也同样面临那个类似一个问题

409
00:14:47,000 --> 00:14:49,000
比如说你会遇到什么版本控制

410
00:14:49,000 --> 00:14:51,000
或者是插图方面的问题

411
00:14:51,000 --> 00:14:52,000
这个时候

412
00:14:52,000 --> 00:14:53,000
所建基所得的实际上并不是一个

413
00:14:53,000 --> 00:14:55,000
非常好的绝对方式

414
00:14:57,000 --> 00:14:58,000
就是总结一下

415
00:14:58,000 --> 00:15:00,000
刚才大家的自我描述

416
00:15:00,000 --> 00:15:02,000
我们会发现公式实际上是

417
00:15:02,000 --> 00:15:04,000
Tec 的一个 Killer App

418
00:15:04,000 --> 00:15:06,000
这其实跟我现在观察也相似

419
00:15:06,000 --> 00:15:10,000
就是 Latech 虽然是一个非常

420
00:15:10,000 --> 00:15:11,000
怎么说高大上的系统

421
00:15:11,000 --> 00:15:17,000
但是它目前它的发展的这样一个定位

422
00:15:17,000 --> 00:15:19,000
实际上是在一个非常精细的领域

423
00:15:21,000 --> 00:15:22,000
就是公式编辑

424
00:15:23,000 --> 00:15:25,000
以及部分的插图方面

425
00:15:26,000 --> 00:15:29,000
你说我们现在这么多出版物

426
00:15:29,000 --> 00:15:30,000
有哪个出版物

427
00:15:30,000 --> 00:15:33,000
你听说是用纯粹用 Latech 来编排的吗

428
00:15:33,000 --> 00:15:34,000
好像也没有

429
00:15:34,000 --> 00:15:37,000
Latech 现在可能是一个个人出版的

430
00:15:37,000 --> 00:15:39,000
specialized 的一个巅峰

431
00:15:40,000 --> 00:15:41,000
但是我觉得它在公共领域

432
00:15:41,000 --> 00:15:43,000
好像没有获得那么广泛的应用

433
00:15:43,000 --> 00:15:46,000
至少你跟什么 Page Maker 或者是

434
00:15:47,000 --> 00:15:48,000
这个就是看领域了

435
00:15:48,000 --> 00:15:51,000
反正我觉得理工科类的还有

436
00:15:51,000 --> 00:15:54,000
因为理工科类的所有的论文

437
00:15:54,000 --> 00:15:55,000
还有那些漆刊的话

438
00:15:55,000 --> 00:15:58,000
它既收 Latech 的论文

439
00:15:58,000 --> 00:16:00,000
它自己出的话也是用 Tec 出的

440
00:16:00,000 --> 00:16:01,000
就是漆刊

441
00:16:01,000 --> 00:16:03,000
然后在日本的话

442
00:16:03,000 --> 00:16:05,000
比如说上面理工科类字典

443
00:16:05,000 --> 00:16:07,000
它整本字典都是用 Tec 出的

444
00:16:07,000 --> 00:16:08,000
真的

445
00:16:08,000 --> 00:16:10,000
整本字典是用 Latech 来做的

446
00:16:10,000 --> 00:16:11,000
对 有的

447
00:16:11,000 --> 00:16:12,000
在日本是有的

448
00:16:12,000 --> 00:16:14,000
研播数学词典的第四版

449
00:16:14,000 --> 00:16:17,000
就是全部都用 Latech 写的

450
00:16:17,000 --> 00:16:18,000
如果说确切的话

451
00:16:18,000 --> 00:16:23,000
是 Platech 的 2 e 那个版本做的

452
00:16:23,000 --> 00:16:25,000
首先因为它是字典

453
00:16:25,000 --> 00:16:27,000
然后肯定是有一个 P 处理的东西

454
00:16:27,000 --> 00:16:30,000
因为你知道字典的每个词条

455
00:16:30,000 --> 00:16:32,000
它是非常有规范化的一个

456
00:16:32,000 --> 00:16:33,000
format 的一个东西

457
00:16:33,000 --> 00:16:34,000
然后它又是理工类字的

458
00:16:34,000 --> 00:16:35,000
里面有很多工事

459
00:16:37,000 --> 00:16:39,000
就我也是就是很多人入文 Latech

460
00:16:39,000 --> 00:16:41,000
就是比如说他要写个论文

461
00:16:41,000 --> 00:16:44,000
但是大部分写论文的人

462
00:16:44,000 --> 00:16:46,000
就是我们说 90%的人写论文之后

463
00:16:46,000 --> 00:16:49,000
可能就不会再写第二次论文了

464
00:16:49,000 --> 00:16:51,000
所以他对于很多人来说

465
00:16:51,000 --> 00:16:52,000
Latech 的学习过程

466
00:16:52,000 --> 00:16:54,000
可能是一生一次的事情

467
00:16:54,000 --> 00:16:56,000
就是大概跟追姑娘差不多

468
00:16:56,000 --> 00:16:57,000
你可能追一次

469
00:16:57,000 --> 00:16:59,000
你就不用再追第二次了

470
00:16:59,000 --> 00:17:03,000
但是真正会一直把 Latech 用下去的人

471
00:17:03,000 --> 00:17:05,000
大部分都是会继续学术界的

472
00:17:05,000 --> 00:17:08,000
或者是学术出版界的

473
00:17:08,000 --> 00:17:10,000
你这非学术界基本上

474
00:17:10,000 --> 00:17:12,000
不会有这种工业化

475
00:17:12,000 --> 00:17:14,000
或者是产业化的需求

476
00:17:14,000 --> 00:17:17,000
除非你是在排版行业生活的

477
00:17:17,000 --> 00:17:19,000
基本上不会有这个需求了

478
00:17:20,000 --> 00:17:22,000
就是我觉得你一个人写论文

479
00:17:22,000 --> 00:17:24,000
其实就大概是一个个人出版的

480
00:17:24,000 --> 00:17:25,000
这么一个巅峰了

481
00:17:25,000 --> 00:17:28,000
你写一个了不起三五百页的论文

482
00:17:29,000 --> 00:17:31,000
用 Latech 来改

483
00:17:31,000 --> 00:17:36,000
对 这已经是巅峰级别的一个 Latech 的应用了

484
00:17:36,000 --> 00:17:39,000
然后在个人出版领域

485
00:17:39,000 --> 00:17:41,000
但是在公共出版领域

486
00:17:41,000 --> 00:17:42,000
可能一般数学词典

487
00:17:42,000 --> 00:17:45,000
而且我觉得数学词典用 Latech 的一个

488
00:17:45,000 --> 00:17:46,000
很大原因也是因为公式

489
00:17:46,000 --> 00:17:50,000
就是我们是不是应该还是给这讲稿了

490
00:17:50,000 --> 00:17:52,000
我觉得好像有点待不天了

491
00:17:53,000 --> 00:17:54,000
没关系

492
00:17:54,000 --> 00:17:56,000
因为我们是串台节目

493
00:17:56,000 --> 00:17:57,000
那说实话

494
00:17:57,000 --> 00:17:59,000
从自弹支持汉这边过来的庭中

495
00:17:59,000 --> 00:18:00,000
很多都是设计师

496
00:18:00,000 --> 00:18:02,000
所以他们就从来就没有接触到

497
00:18:02,000 --> 00:18:05,000
也不知道 Teh 和是个什么东西

498
00:18:05,000 --> 00:18:08,000
所以我觉得还是得从头到尾给大家解释一下

499
00:18:08,000 --> 00:18:09,000
然后刚才也说

500
00:18:09,000 --> 00:18:12,000
因为这个东西挺局限于理工科类的

501
00:18:12,000 --> 00:18:15,000
其他领域的人可能也都不知道

502
00:18:15,000 --> 00:18:17,000
即使是理工科类的朋友们

503
00:18:17,000 --> 00:18:20,000
他们可能就一辈子为了写论文用一下而已

504
00:18:20,000 --> 00:18:21,000
然后之后再也没用过

505
00:18:23,000 --> 00:18:25,000
这个前因后果可能也不是很清楚

506
00:18:25,000 --> 00:18:25,000
对

507
00:18:25,000 --> 00:18:30,000
所以还是要从我们的大师高德纳新顺开说起吧

508
00:18:30,000 --> 00:18:31,000
考古开始

509
00:18:33,000 --> 00:18:34,000
行

510
00:18:34,000 --> 00:18:34,000
那我来吧

511
00:18:35,000 --> 00:18:35,000
对

512
00:18:36,000 --> 00:18:38,000
我们今天这个

513
00:18:38,000 --> 00:18:40,000
podcast 标题所谓宗师级程序员

514
00:18:40,000 --> 00:18:41,000
其实指的就是一个人

515
00:18:41,000 --> 00:18:42,000
这个人叫做

516
00:18:42,000 --> 00:18:44,000
Donald E. Knut

517
00:18:44,000 --> 00:18:47,000
他有一个中文名叫做高德纳

518
00:18:47,000 --> 00:18:49,000
他从 1969 年开始写一本书

519
00:18:49,000 --> 00:18:50,000
这本书叫做

520
00:18:50,000 --> 00:18:52,000
The Art of Computer Programming

521
00:18:52,000 --> 00:18:55,000
这本书的简称是 TAOCP

522
00:18:56,000 --> 00:18:58,000
他到现在应该还没写完

523
00:18:58,000 --> 00:18:59,000
据我所知还没写完

524
00:18:59,000 --> 00:19:01,000
这本书是有中益版的

525
00:19:01,000 --> 00:19:02,000
就是各位有兴趣的话

526
00:19:02,000 --> 00:19:04,000
可以可以在网上看一下玉兰的

527
00:19:04,000 --> 00:19:05,000
有吗

528
00:19:05,000 --> 00:19:05,000
哦有中益版

529
00:19:05,000 --> 00:19:06,000
我都不知道

530
00:19:06,000 --> 00:19:07,000
对

531
00:19:07,000 --> 00:19:10,000
我在中国应该是买了中益版的第一卷

532
00:19:10,000 --> 00:19:10,000
这样

533
00:19:10,000 --> 00:19:13,000
然后他在 1969 年的时候

534
00:19:13,000 --> 00:19:14,000
开始写这本书

535
00:19:14,000 --> 00:19:18,000
第一卷的排印用的是 multiple 的排字机

536
00:19:18,000 --> 00:19:20,000
就是那个时候是完全机械的排字机

537
00:19:20,000 --> 00:19:21,000
对吧

538
00:19:21,000 --> 00:19:22,000
自动驻排机

539
00:19:22,000 --> 00:19:22,000
对

540
00:19:22,000 --> 00:19:25,000
一个一个非常硬核的这么一个

541
00:19:25,000 --> 00:19:27,000
就他很喜欢 multiple 排字机

542
00:19:27,000 --> 00:19:30,000
然后他当时在美国的 multiple 的排字机排了

543
00:19:30,000 --> 00:19:32,000
然后他第二卷什么时候写好了

544
00:19:32,000 --> 00:19:33,000
是七年

545
00:19:33,000 --> 00:19:35,000
七年之后才写

546
00:19:35,000 --> 00:19:38,000
七年之后是 1976 年

547
00:19:38,000 --> 00:19:38,000
不对

548
00:19:38,000 --> 00:19:39,000
不对

549
00:19:39,000 --> 00:19:40,000
嗯

550
00:19:40,000 --> 00:19:41,000
不对

551
00:19:41,000 --> 00:19:43,000
1976 年他是第二卷

552
00:19:43,000 --> 00:19:44,000
重排的时候

553
00:19:44,000 --> 00:19:45,000
对

554
00:19:45,000 --> 00:19:45,000
对

555
00:19:45,000 --> 00:19:45,000
好

556
00:19:45,000 --> 00:19:48,000
那就是第二卷的一个 revision 完成的时候

557
00:19:48,000 --> 00:19:51,000
他不得不转向激光照

558
00:19:51,000 --> 00:19:52,000
不是激光照

559
00:19:52,000 --> 00:19:54,000
就是普通的这个照相招牌机

560
00:19:54,000 --> 00:19:56,000
照相排印机来排版

561
00:19:56,000 --> 00:20:00,000
但是他拿到了那个叫所谓 Gallie Proof

562
00:20:00,000 --> 00:20:01,000
就是样板的时候

563
00:20:01,000 --> 00:20:04,000
他大概说了一句话就是

564
00:20:04,000 --> 00:20:06,000
black

565
00:20:06,000 --> 00:20:09,000
就这么一个感叹词吧

566
00:20:09,000 --> 00:20:10,000
就是觉得我靠这是什么

567
00:20:10,000 --> 00:20:11,000
哈哈

568
00:20:11,000 --> 00:20:12,000
嗯

569
00:20:12,000 --> 00:20:14,000
这句话的翻译叫这什么词

570
00:20:14,000 --> 00:20:15,000
哈哈哈

571
00:20:15,000 --> 00:20:18,000
就是这该哎呀我去这种感觉

572
00:20:18,000 --> 00:20:19,000
哈哈哈

573
00:20:19,000 --> 00:20:22,000
然后他非常失望

574
00:20:22,000 --> 00:20:25,000
以至于他做了一件只有宗师级的成选

575
00:20:25,000 --> 00:20:25,000
能做的事情

576
00:20:25,000 --> 00:20:27,000
就是他决定自己开发一条系统

577
00:20:27,000 --> 00:20:29,000
来完成排版这件事情

578
00:20:29,000 --> 00:20:31,000
就是 from scratch

579
00:20:32,000 --> 00:20:35,000
然后他首先他发明一种编程员

580
00:20:35,000 --> 00:20:37,000
呃这种编程员叫 web

581
00:20:37,000 --> 00:20:41,000
就是跟我们那个万维网的 web 没有关联

582
00:20:41,000 --> 00:20:44,000
他就叫 wab 这种编程员

583
00:20:44,000 --> 00:20:46,000
然后他用这种编程员呃

584
00:20:46,000 --> 00:20:48,000
首先开发的一种字体

585
00:20:48,000 --> 00:20:49,000
这种字体叫 metafont

586
00:20:49,000 --> 00:20:53,000
不他开发了一种用于画字体的系统

587
00:20:53,000 --> 00:20:55,000
叫做 metafont

588
00:20:55,000 --> 00:20:59,000
meta 这个前锥就是什么什么的什么什么

589
00:20:59,000 --> 00:21:02,000
比如说我叫 metafox 就是 fox fox

590
00:21:02,000 --> 00:21:04,000
然后他这个 metafont 就是 fontfont

591
00:21:04,000 --> 00:21:06,000
那么 metafont 的用处就是

592
00:21:06,000 --> 00:21:08,000
你用一个数学公式

593
00:21:08,000 --> 00:21:10,000
类似于数学公式方式描述出

594
00:21:10,000 --> 00:21:13,000
比如说一个字母的几个点

595
00:21:13,000 --> 00:21:14,000
他们之间的相对位置

596
00:21:14,000 --> 00:21:18,000
比如说我说 m 这个字母的相对位置是

597
00:21:18,000 --> 00:21:20,000
呃下面的三个点彼此的距离是一样的

598
00:21:20,000 --> 00:21:23,000
然后上面的两个点跟下面的三个点是怎么相连的

599
00:21:23,000 --> 00:21:24,000
ok

600
00:21:24,000 --> 00:21:28,000
然后 metafont 可以帮你生成出这个字体的

601
00:21:29,000 --> 00:21:32,000
怎么说点正化的表示来

602
00:21:32,000 --> 00:21:33,000
这是 metafont

603
00:21:33,000 --> 00:21:36,000
然后他用 web 写的另外一套系统

604
00:21:36,000 --> 00:21:37,000
叫做 tex

605
00:21:37,000 --> 00:21:38,000
tex

606
00:21:38,000 --> 00:21:40,000
然后这个 tex 的功能呢

607
00:21:40,000 --> 00:21:47,000
就是把你的文章排列出一个可以用于打印的格式来

608
00:21:47,000 --> 00:21:49,000
这个格式叫做 dvi

609
00:21:49,000 --> 00:21:53,000
然后他用自己发明的这套工具来排了自己的书

610
00:21:53,000 --> 00:21:57,000
大概就是这么一个听起来好像没有那么怎么样

611
00:21:57,000 --> 00:22:01,000
但是在我们看来就是一个五学中师开创了一个门派

612
00:22:01,000 --> 00:22:04,000
然后专门拿来做一件事情这么一个级别

613
00:22:04,000 --> 00:22:07,000
然后他这套系统呢就从此开源了

614
00:22:07,000 --> 00:22:10,000
然后广为流传一直活跃到今天

615
00:22:10,000 --> 00:22:13,000
并且这中间有一个比较推波助兰的事情

616
00:22:13,000 --> 00:22:16,000
就是美国数学学会 AMS

617
00:22:16,000 --> 00:22:18,000
等于说签订了 tex

618
00:22:18,000 --> 00:22:22,000
就是他们的排数学公式的这么一个工具

619
00:22:22,000 --> 00:22:26,000
所以导致基本上整个数学界就采用了 tex 这套东西

620
00:22:26,000 --> 00:22:30,000
那数学我们知道实际上是条条大陆通向数学

621
00:22:30,000 --> 00:22:38,000
所以反过来导致整个科学界基本上在你在使用这个公式的时候都一定会碰到它

622
00:22:38,000 --> 00:22:41,000
然后大概现在的状况就是这样了

623
00:22:41,000 --> 00:22:44,000
就是太太仍就是一个被维护的这么一个程序

624
00:22:44,000 --> 00:22:46,000
当然他已经有点过时了

625
00:22:46,000 --> 00:22:47,000
这个我们一会会提到

626
00:22:47,000 --> 00:22:53,000
但是直到现在他都是在一个稳定维护并且发行中的这么一个程序

627
00:22:53,000 --> 00:22:57,000
这个程序的历史可以追溯到上个世纪的 70 年代

628
00:22:57,000 --> 00:23:00,000
就是这么一个过程

629
00:23:00,000 --> 00:23:04,000
然后有一个就是我在 tib 上写的一篇文章

630
00:23:04,000 --> 00:23:06,000
computer modern 大家如果去看的话

631
00:23:06,000 --> 00:23:09,000
会发现那个字体可能有点眼熟

632
00:23:09,000 --> 00:23:13,000
因为如果你 ever 看过一篇比较正式的论文的话

633
00:23:13,000 --> 00:23:15,000
那么他有很大的可能性

634
00:23:15,000 --> 00:23:17,000
现在我觉得可能没那么流行

635
00:23:17,000 --> 00:23:19,000
但是至少在比如说 10 年前或者 5 年前

636
00:23:19,000 --> 00:23:21,000
你去看任何一篇论文

637
00:23:21,000 --> 00:23:24,000
还有可能有八成的概率是用 computer modern 排的

638
00:23:24,000 --> 00:23:25,000
所以当你看到一篇文论文

639
00:23:25,000 --> 00:23:28,000
他是用 computer modern 来排的话

640
00:23:28,000 --> 00:23:29,000
那他有很大很大的概率

641
00:23:29,000 --> 00:23:32,000
就是用 Lighthack 来写

642
00:23:32,000 --> 00:23:33,000
大概是这么一个状况

643
00:23:33,000 --> 00:23:36,000
我跟大家补充一下就是这个时间点

644
00:23:36,000 --> 00:23:40,000
首先高德纳先生他现年 83 岁

645
00:23:40,000 --> 00:23:43,000
所以大家首先要想到这是一位老先生

646
00:23:43,000 --> 00:23:44,000
而且还建在

647
00:23:44,000 --> 00:23:45,000
对

648
00:23:45,000 --> 00:23:49,000
他还接着写他那套计算机程序艺术吗

649
00:23:49,000 --> 00:23:53,000
他本以为想说一共出 7 卷是吧

650
00:23:53,000 --> 00:23:55,000
结果后来他现在写第 4 卷

651
00:23:55,000 --> 00:23:56,000
可以开始写分册了

652
00:23:56,000 --> 00:23:58,000
所以不知道他一共要出多少本

653
00:23:58,000 --> 00:24:00,000
然后这个时间点

654
00:24:00,000 --> 00:24:03,000
如果是我们自然自然听众可能知道

655
00:24:03,000 --> 00:24:04,000
我在节目里面讲过很多次

656
00:24:04,000 --> 00:24:06,000
就是我们在做印刷的时候

657
00:24:06,000 --> 00:24:08,000
整个技术有三大技术革新

658
00:24:08,000 --> 00:24:12,000
就是从签字到照牌到现在的桌面出版

659
00:24:12,000 --> 00:24:16,000
那么这个事情发生在美国的 670 年代

660
00:24:16,000 --> 00:24:19,000
其实就是当时从金属活字

661
00:24:19,000 --> 00:24:22,000
到照相牌版转变的这样一个过程

662
00:24:22,000 --> 00:24:26,000
高老先生他当时出卷出到第三版

663
00:24:26,000 --> 00:24:28,000
是 1973 年

664
00:24:28,000 --> 00:24:32,000
那时候出版社就已经把自动驻牌机的

665
00:24:32,000 --> 00:24:34,000
蒙纳机就已经卖掉了

666
00:24:34,000 --> 00:24:37,000
所以出版社他自己已经没有蒙纳

667
00:24:37,000 --> 00:24:39,000
签字做自动驻牌机的东西

668
00:24:39,000 --> 00:24:42,000
所以当时他的 75 年的第一版再版的时候

669
00:24:42,000 --> 00:24:46,000
特地把书版送到欧洲的

670
00:24:46,000 --> 00:24:49,000
因为当时欧洲还以有老的机器可以用

671
00:24:49,000 --> 00:24:53,000
所以特地到欧洲去重新排来给高的纳用

672
00:24:53,000 --> 00:24:55,000
然后等到 76 年

673
00:24:55,000 --> 00:24:56,000
要等第二军再重版的时候

674
00:24:56,000 --> 00:24:59,000
实在是没有花费太大了

675
00:24:59,000 --> 00:25:02,000
从欧洲再倒一次的话成本太高

676
00:25:02,000 --> 00:25:05,000
所以只好用照牌机给他排

677
00:25:05,000 --> 00:25:07,000
然后老先生当时就看

678
00:25:07,000 --> 00:25:08,000
哇 这都什么鬼

679
00:25:08,000 --> 00:25:13,000
所以他就重新自己做了一个 Tec 牌版软件

680
00:25:13,000 --> 00:25:16,000
那么 Tec 最初的发布的时间点

681
00:25:16,000 --> 00:25:18,000
是 1978 年

682
00:25:18,000 --> 00:25:20,000
也就是 43 年前

683
00:25:20,000 --> 00:25:23,000
43 年前高的那老先生还是一个 38 岁的

684
00:25:23,000 --> 00:25:26,000
38 岁的

685
00:25:26,000 --> 00:25:27,000
对啊

686
00:25:27,000 --> 00:25:28,000
壮年啊

687
00:25:28,000 --> 00:25:30,000
就跟你现在差不多嘛

688
00:25:30,000 --> 00:25:30,000
我好老

689
00:25:32,000 --> 00:25:34,000
不太好试试该是写你自己的出版系统了

690
00:25:34,000 --> 00:25:36,000
对 说得对

691
00:25:36,000 --> 00:25:38,000
我要在怎么说

692
00:25:38,000 --> 00:25:43,000
VR 里面弄一个属于未来的这么一个排版系统

693
00:25:43,000 --> 00:25:44,000
我今天把话割帐了

694
00:25:45,000 --> 00:25:46,000
所以等到现在

695
00:25:46,000 --> 00:25:48,000
之后我们也会讨论

696
00:25:48,000 --> 00:25:50,000
可能大家现在站到这个高度

697
00:25:50,000 --> 00:25:50,000
然后就讲

698
00:25:50,000 --> 00:25:53,000
哎呦 为什么连什么 Unicode 都不支持

699
00:25:53,000 --> 00:25:54,000
Unicode 是什么年代的事情

700
00:25:54,000 --> 00:25:56,000
就是他当时写 Tec 是 1978 年

701
00:25:56,000 --> 00:26:00,000
那时候 Unicode 还在娘台里面

702
00:26:00,000 --> 00:26:00,000
还没出来呢

703
00:26:00,000 --> 00:26:01,000
就是那个时候

704
00:26:01,000 --> 00:26:05,000
ASCII 都不是一个比较广为使用的 standard

705
00:26:05,000 --> 00:26:06,000
对

706
00:26:06,000 --> 00:26:07,000
所以呢

707
00:26:07,000 --> 00:26:08,000
78 年 Tec 诞生

708
00:26:08,000 --> 00:26:12,000
然后高德纳在 1990 年的 9 月份

709
00:26:12,000 --> 00:26:14,000
他就宣布说

710
00:26:14,000 --> 00:26:16,000
Tec 发到 3.1 版本以后

711
00:26:16,000 --> 00:26:17,000
就不会有重大更新了

712
00:26:17,000 --> 00:26:19,000
除了修 Bug

713
00:26:19,000 --> 00:26:20,000
他其实就这个项目

714
00:26:20,000 --> 00:26:23,000
其实就已经打句号了

715
00:26:23,000 --> 00:26:25,000
刚好是 3.1 版本

716
00:26:25,000 --> 00:26:25,000
我有一个疑问

717
00:26:25,000 --> 00:26:28,000
就是他 3.1 版之前是 1.0

718
00:26:28,000 --> 00:26:29,000
2.0 这样子吗

719
00:26:29,000 --> 00:26:31,000
还是他一上来就是

720
00:26:31,000 --> 00:26:32,000
应该是的

721
00:26:32,000 --> 00:26:33,000
应该是的

722
00:26:33,000 --> 00:26:35,000
因为这里我耿就是

723
00:26:35,000 --> 00:26:37,000
Tec 以及跟 Tec 相关的很多软件

724
00:26:37,000 --> 00:26:40,000
它的版本号都是一个

725
00:26:40,000 --> 00:26:41,000
这个叫什么

726
00:26:41,000 --> 00:26:41,000
超越数

727
00:26:41,000 --> 00:26:42,000
还是叫什么

728
00:26:42,000 --> 00:26:43,000
无理数

729
00:26:43,000 --> 00:26:44,000
是不一数

730
00:26:44,000 --> 00:26:47,000
比如说 Tec 的版本号是派

731
00:26:47,000 --> 00:26:50,000
然后 Metaphones 的版本号是

732
00:26:50,000 --> 00:26:51,000
自然对数的

733
00:26:51,000 --> 00:26:52,000
12.1 的

734
00:26:52,000 --> 00:26:54,000
自然对数的第一

735
00:26:54,000 --> 00:26:55,000
还有一个什么软件

736
00:26:55,000 --> 00:26:58,000
它的版本号是 0.99999999

737
00:26:58,000 --> 00:27:00,000
就是 1 嘛

738
00:27:00,000 --> 00:27:02,000
它无线接距 1

739
00:27:02,000 --> 00:27:03,000
大概是这样

740
00:27:03,000 --> 00:27:06,000
就高德纳是一个很喜欢这种各种梗的

741
00:27:06,000 --> 00:27:07,000
他是一个很 GIG 的人

742
00:27:07,000 --> 00:27:08,000
我觉得

743
00:27:08,000 --> 00:27:09,000
他是

744
00:27:09,000 --> 00:27:11,000
是那个时代的

745
00:27:11,000 --> 00:27:13,000
那个时代的风格的 GIG

746
00:27:13,000 --> 00:27:14,000
就是他非常

747
00:27:14,000 --> 00:27:15,000
他非常严谨

748
00:27:15,000 --> 00:27:16,000
然后又特别的

749
00:27:16,000 --> 00:27:19,000
还是相对来说比我们这个时代的 GIG 要严肃多了

750
00:27:19,000 --> 00:27:20,000
但是他内心里面

751
00:27:20,000 --> 00:27:21,000
人家是一个 GIG

752
00:27:21,000 --> 00:27:24,000
比如说他

753
00:27:24,000 --> 00:27:25,000
他的 TLCP

754
00:27:25,000 --> 00:27:27,000
如果你在里面找到一个 Bug 的话

755
00:27:27,000 --> 00:27:29,000
他会给你寄一张支票

756
00:27:29,000 --> 00:27:31,000
这个支票的金额是 3.14 美元

757
00:27:31,000 --> 00:27:33,000
好像还是多少钱

758
00:27:33,000 --> 00:27:34,000
不是

759
00:27:34,000 --> 00:27:37,000
那个支票是多少钱来着

760
00:27:37,000 --> 00:27:39,000
反正是 2 的证整数

761
00:27:39,000 --> 00:27:39,000
不是

762
00:27:39,000 --> 00:27:40,000
反正是 2 的倍数

763
00:27:40,000 --> 00:27:41,000
是吗

764
00:27:41,000 --> 00:27:42,000
2 有多少次方

765
00:27:42,000 --> 00:27:44,000
之类的

766
00:27:44,000 --> 00:27:44,000
我记得

767
00:27:44,000 --> 00:27:47,000
跟本台的捐款类型是一样的

768
00:27:48,000 --> 00:27:48,000
对

769
00:27:48,000 --> 00:27:49,000
其实刚刚五套说到

770
00:27:49,000 --> 00:27:50,000
那个 Tax

771
00:27:50,000 --> 00:27:52,000
包含的第一套的这个字体

772
00:27:52,000 --> 00:27:54,000
就是所谓的 computing modern

773
00:27:54,000 --> 00:27:56,000
大家应该是非常眼熟

774
00:27:56,000 --> 00:27:57,000
因为为什么呢

775
00:27:57,000 --> 00:28:00,000
就是我们其实在大概十来期节目前

776
00:28:00,000 --> 00:28:04,000
讲到了另一位自己设计师叫 Morris Fuller Benton

777
00:28:04,000 --> 00:28:05,000
他所设计的

778
00:28:05,000 --> 00:28:08,000
他所指导设计的有一款很著名的字体叫 Sentry

779
00:28:08,000 --> 00:28:09,000
而这 computing modern

780
00:28:09,000 --> 00:28:12,000
其实它的这个字型的设计

781
00:28:12,000 --> 00:28:13,000
是跟 Sentry 非常的接近的

782
00:28:13,000 --> 00:28:16,000
或者说 Sentry 是 computing modern 的一个

783
00:28:16,000 --> 00:28:18,000
直接的复刻的蓝本

784
00:28:19,000 --> 00:28:19,000
所以在这个意义上

785
00:28:19,000 --> 00:28:22,000
Sentry 作为一款非常流行

786
00:28:22,000 --> 00:28:25,000
曾经也是跟 monotype 绑定的这样一套字体

787
00:28:25,000 --> 00:28:27,000
大家也可以在过去

788
00:28:27,000 --> 00:28:30,000
以及在今天甚至在将来的很多出版物上

789
00:28:30,000 --> 00:28:32,000
都会看到它的影子

790
00:28:32,000 --> 00:28:33,000
我打查问一个问题

791
00:28:33,000 --> 00:28:36,000
这个叫 computing modern 的自己

792
00:28:36,000 --> 00:28:38,000
它看起来一点都不 modern

793
00:28:38,000 --> 00:28:40,000
它的 modern 指的是一种风格

794
00:28:40,000 --> 00:28:42,000
这种风格叫 modern 风格

795
00:28:42,000 --> 00:28:44,000
所谓的在字体中的现代体

796
00:28:44,000 --> 00:28:47,000
它 modern 的时候是我们还没有出生的时代

797
00:28:47,000 --> 00:28:47,000
对

798
00:28:47,000 --> 00:28:50,000
它所谓的 modern 是那种时尚杂志的 modern

799
00:28:50,000 --> 00:28:52,000
computing modern 的一个直系情蜀

800
00:28:52,000 --> 00:28:53,000
实际上是 dialed

801
00:28:53,000 --> 00:28:53,000
迪多

802
00:28:53,000 --> 00:28:54,000
对

803
00:28:54,000 --> 00:28:58,000
迪多字体是一个在 18 世纪吧

804
00:28:58,000 --> 00:28:59,000
出现的这么一个字体

805
00:28:59,000 --> 00:29:00,000
然后那个时代

806
00:29:00,000 --> 00:29:03,000
人们会认为说我们现在处于现代

807
00:29:03,000 --> 00:29:05,000
在那之前是古代

808
00:29:05,000 --> 00:29:05,000
实际上也是这样的

809
00:29:05,000 --> 00:29:07,000
就是从大概从 19 世纪初

810
00:29:07,000 --> 00:29:10,000
人类进入了所谓什么大爆发

811
00:29:10,000 --> 00:29:11,000
反正有一个英语

812
00:29:11,000 --> 00:29:15,000
有一个词叫 grade 什么什么的一个时代

813
00:29:15,000 --> 00:29:17,000
然后我们现在还处于一个时代

814
00:29:17,000 --> 00:29:19,000
这个时代可以视为现代的开段

815
00:29:19,000 --> 00:29:22,000
所以你家的 modern 其实也蛮正常的

816
00:29:22,000 --> 00:29:23,000
其实我们自弹自唱

817
00:29:23,000 --> 00:29:27,000
在第 137 期讲过本顿父子的世纪传奇

818
00:29:27,000 --> 00:29:28,000
其实在这里面

819
00:29:28,000 --> 00:29:30,000
我们就讲述了当时的美国的

820
00:29:30,000 --> 00:29:33,000
其实它本顿父子是工程师

821
00:29:33,000 --> 00:29:35,000
他们制作的 Century 字体

822
00:29:35,000 --> 00:29:38,000
也就是现在 computer modern 的

823
00:29:38,000 --> 00:29:42,000
直系的老鼠中模板

824
00:29:42,000 --> 00:29:45,000
那如果上述到我们说是整个对字体来讲

825
00:29:45,000 --> 00:29:47,000
在所谓的现代体

826
00:29:47,000 --> 00:29:51,000
那就要追溯到字体的什么伯多尼

827
00:29:51,000 --> 00:29:53,000
然后要讲到迪多

828
00:29:53,000 --> 00:29:56,000
那么大家也可以翻到我们自弹自唱的

829
00:29:56,000 --> 00:29:59,000
我们在第 125 期讲过迪多

830
00:29:59,000 --> 00:30:01,000
然后在第 131 期讲过伯多尼

831
00:30:01,000 --> 00:30:03,000
大家可以回去听一下

832
00:30:03,000 --> 00:30:05,000
就知道当时的所谓的

833
00:30:05,000 --> 00:30:09,000
它当时的现代体是一个什么样的东西

834
00:30:09,000 --> 00:30:12,000
Ryo 你说为什么他们可以一下子说起来

835
00:30:12,000 --> 00:30:14,000
我们之前哪一期讲了什么

836
00:30:14,000 --> 00:30:15,000
为什么咱们就做不到

837
00:30:15,000 --> 00:30:18,000
好问题

838
00:30:18,000 --> 00:30:21,000
你们需要打印一个列子

839
00:30:21,000 --> 00:30:23,000
你们是怎么做到的

840
00:30:23,000 --> 00:30:25,000
你们身边有一个小秘书吗

841
00:30:25,000 --> 00:30:28,000
还是或者你们把所有的每一期讲了什么

842
00:30:28,000 --> 00:30:31,000
全都随时随地摆在手边

843
00:30:31,000 --> 00:30:33,000
我们只是有个列表而已

844
00:30:33,000 --> 00:30:35,000
我们做了 140 多期

845
00:30:35,000 --> 00:30:37,000
然后我们一期就一个主题

846
00:30:37,000 --> 00:30:39,000
像那一期我们

847
00:30:39,000 --> 00:30:41,000
我们花了一个半小时就讲本敦父子

848
00:30:41,000 --> 00:30:44,000
所以一搜寺还是可以搜到的

849
00:30:44,000 --> 00:30:45,000
吴达我跟你出个主意

850
00:30:45,000 --> 00:30:47,000
你可以把我们的首页打开

851
00:30:47,000 --> 00:30:48,000
我们也有个列表

852
00:30:49,000 --> 00:30:51,000
你用上述字牌了

853
00:30:51,000 --> 00:30:53,000
我看不懂

854
00:30:53,000 --> 00:30:54,000
这太难读了

855
00:30:59,000 --> 00:31:01,000
所以你们找到高德纳老先生

856
00:31:01,000 --> 00:31:03,000
发的那个多少钱了吗

857
00:31:03,000 --> 00:31:05,000
刚才谁在查

858
00:31:05,000 --> 00:31:06,000
我以为前者也去查了

859
00:31:06,000 --> 00:31:07,000
没有

860
00:31:08,000 --> 00:31:09,000
我来查

861
00:31:09,000 --> 00:31:12,000
可能

862
00:31:12,000 --> 00:31:14,000
可能可能

863
00:31:14,000 --> 00:31:19,000
他每个漏洞的奖金是 2 块 5 毛 6

864
00:31:19,000 --> 00:31:23,000
因为这个 2 块 5 毛 6 是 16 进质的 100 美分

865
00:31:23,000 --> 00:31:24,000
就是第一个

866
00:31:24,000 --> 00:31:24,000
对

867
00:31:24,000 --> 00:31:26,000
然后他有些人

868
00:31:26,000 --> 00:31:28,000
打到的支票上面写的是零 X

869
00:31:28,000 --> 00:31:29,000
到了 1.0

870
00:31:30,000 --> 00:31:32,000
然后是每次

871
00:31:32,000 --> 00:31:35,000
就是你下一个人得到这个支票的人

872
00:31:35,000 --> 00:31:36,000
就会在那个数字上乘以 2

873
00:31:36,000 --> 00:31:38,000
直到现在数多少

874
00:31:38,000 --> 00:31:40,000
327.68

875
00:31:40,000 --> 00:31:44,000
但是也才 300 多美金

876
00:31:44,000 --> 00:31:47,000
那高德纳也其实也不算很多钱了

877
00:31:47,000 --> 00:31:47,000
不是

878
00:31:47,000 --> 00:31:49,000
你要知道这个是每次乘以 2

879
00:31:49,000 --> 00:31:50,000
这个是很恐怖的故事

880
00:31:50,000 --> 00:31:51,000
你们还记得那个印度

881
00:31:51,000 --> 00:31:53,000
那个旗盘的故事吗

882
00:31:53,000 --> 00:31:54,000
这个好恐怖

883
00:31:54,000 --> 00:31:57,000
2005 年的时候总金额就已经超过了

884
00:31:57,000 --> 00:31:58,000
两万美元

885
00:31:58,000 --> 00:32:00,000
所以高德纳就疯掉了

886
00:32:00,000 --> 00:32:02,000
他就说我不更新的

887
00:32:02,000 --> 00:32:02,000
对

888
00:32:02,000 --> 00:32:03,000
就是非常恐怖

889
00:32:03,000 --> 00:32:06,000
就是逼迫他自己少写 bug 的一个驱动力

890
00:32:06,000 --> 00:32:06,000
你知道吧

891
00:32:06,000 --> 00:32:09,000
为了防止破产

892
00:32:09,000 --> 00:32:11,000
要尽量少的出现 bug

893
00:32:11,000 --> 00:32:15,000
因为下一个 bug 随时肯定让你轻加荡产

894
00:32:15,000 --> 00:32:16,000
不过刚才也说了

895
00:32:16,000 --> 00:32:17,000
他的版本号接近于 pire

896
00:32:17,000 --> 00:32:21,000
那么其实一个非常新的一个时间点

897
00:32:21,000 --> 00:32:23,000
就是在今年的 2 月份

898
00:32:23,000 --> 00:32:25,000
2021 年的 2 月份

899
00:32:25,000 --> 00:32:26,000
刚更新的一个版本

900
00:32:26,000 --> 00:32:31,000
然后这个版本号是 3.141592653

901
00:32:31,000 --> 00:32:34,000
版就已经到 2653 了

902
00:32:35,000 --> 00:32:36,000
其实也还好

903
00:32:36,000 --> 00:32:37,000
你想一下

904
00:32:37,000 --> 00:32:38,000
其实也很容易背得下来

905
00:32:38,000 --> 00:32:40,000
也没更新几百

906
00:32:40,000 --> 00:32:40,000
对啊

907
00:32:40,000 --> 00:32:41,000
你能背几的

908
00:32:41,000 --> 00:32:42,000
你能背到几位

909
00:32:42,000 --> 00:32:45,000
25926535897988246243

910
00:32:45,000 --> 00:32:46,000
以前是可以的

911
00:32:46,000 --> 00:32:47,000
现在不记得

912
00:32:47,000 --> 00:32:50,000
大概我能背到 50 位还是多少位

913
00:32:50,000 --> 00:32:51,000
Rio 能背不了 100 位吧

914
00:32:54,000 --> 00:32:56,000
所以我想确认一下

915
00:32:56,000 --> 00:32:58,000
到 2653 的版本

916
00:32:58,000 --> 00:33:01,000
实际上就是指的是 3.9 版本

917
00:33:01,000 --> 00:33:01,000
是吧

918
00:33:01,000 --> 00:33:02,000
你数位数对

919
00:33:02,000 --> 00:33:04,000
数他后面有几位的号

920
00:33:04,000 --> 00:33:07,000
但是没有很多大的修改了

921
00:33:07,000 --> 00:33:08,000
主要是那些 bug

922
00:33:08,000 --> 00:33:11,000
修 bug 也没有重大的功能更新了

923
00:33:11,000 --> 00:33:13,000
其实就是

924
00:33:13,000 --> 00:33:13,000
对

925
00:33:13,000 --> 00:33:16,000
Tag 本身的内核实际上已经比较老了

926
00:33:16,000 --> 00:33:20,000
而且它本身并不是一个特别复杂的

927
00:33:20,000 --> 00:33:20,000
对

928
00:33:20,000 --> 00:33:22,000
就是你把它本

929
00:33:22,000 --> 00:33:23,000
它底层的 Tag engine

930
00:33:23,000 --> 00:33:25,000
可以用其他方式来实现

931
00:33:25,000 --> 00:33:26,000
现在实际上比较流行的是

932
00:33:26,000 --> 00:33:27,000
一个叫 PDF Tag

933
00:33:27,000 --> 00:33:29,000
另外一个叫 Z Tag

934
00:33:29,000 --> 00:33:30,000
应该是

935
00:33:30,000 --> 00:33:32,000
这两个引擎现在是用的比较广泛的

936
00:33:32,000 --> 00:33:35,000
PDF Tag 主要是做那个

937
00:33:35,000 --> 00:33:37,000
标点悬挂比较好

938
00:33:37,000 --> 00:33:39,000
然后 PDF Tag 还支持

939
00:33:39,000 --> 00:33:40,000
就是直接生成 PDF

940
00:33:40,000 --> 00:33:43,000
而不是要先经过那个 DII 内部

941
00:33:43,000 --> 00:33:45,000
就是有各种前綴的 Tag

942
00:33:45,000 --> 00:33:47,000
他们之间到底是什么关系

943
00:33:47,000 --> 00:33:49,000
其实还挺复杂的这个事

944
00:33:49,000 --> 00:33:53,000
这个你还是要跟大家讲一讲的到后面

945
00:33:53,000 --> 00:33:54,000
Tag 有点像

946
00:33:54,000 --> 00:33:55,000
有点像 UniX

947
00:33:55,000 --> 00:33:55,000
然后

948
00:33:55,000 --> 00:33:56,000
对

949
00:33:56,000 --> 00:33:57,000
特别像坦克

950
00:33:57,000 --> 00:33:57,000
对

951
00:33:57,000 --> 00:33:59,000
以 Tag 为原流

952
00:33:59,000 --> 00:34:02,000
衍生了很多其他的发行版

953
00:34:02,000 --> 00:34:03,000
其中最为人所知的

954
00:34:03,000 --> 00:34:05,000
或者说我们现在

955
00:34:05,000 --> 00:34:06,000
最一提到 Tag

956
00:34:06,000 --> 00:34:09,000
或者说我们现在一提到这套排版工具

957
00:34:09,000 --> 00:34:12,000
不会是说我用 Tag 写了什么什么

958
00:34:12,000 --> 00:34:14,000
而是会说这个东西是用 Latag 写的

959
00:34:14,000 --> 00:34:17,000
就是因为 Latag 是 Tag 的

960
00:34:17,000 --> 00:34:19,000
最知名也是最早的一个扩展手段

961
00:34:19,000 --> 00:34:21,000
就是 Tag 有点像一个

962
00:34:21,000 --> 00:34:22,000
Tag 有点像 Pyzen

963
00:34:22,000 --> 00:34:23,000
Tag 有点像一种变成语言

964
00:34:23,000 --> 00:34:24,000
然后一个人

965
00:34:25,000 --> 00:34:28,000
他的名字叫做 Lesslie Lamport

966
00:34:28,000 --> 00:34:28,000
应该是

967
00:34:28,000 --> 00:34:30,000
Tag 也是一个老先生

968
00:34:30,000 --> 00:34:31,000
今年 80 岁

969
00:34:31,000 --> 00:34:34,000
然后他给 Tag 做了一套扩展

970
00:34:34,000 --> 00:34:37,000
就是他用 Tag 写了很多很多东西

971
00:34:38,000 --> 00:34:40,000
比如说你 Tag 打个比方

972
00:34:40,000 --> 00:34:43,000
这个 Tag 原来只能设字体和字号

973
00:34:43,000 --> 00:34:45,000
然后他用 Tag 做了扩展

974
00:34:45,000 --> 00:34:48,000
可以让他用旧的命令

975
00:34:48,000 --> 00:34:49,000
生成一个新的命令

976
00:34:49,000 --> 00:34:50,000
然后这个新的命令

977
00:34:50,000 --> 00:34:51,000
你可以说

978
00:34:51,000 --> 00:34:53,000
比如说我现在要开始写一张

979
00:34:53,000 --> 00:34:54,000
然后我要现在要开始写一个新的节

980
00:34:54,000 --> 00:34:57,000
然后这个张和节

981
00:34:57,000 --> 00:35:00,000
应该是怎么样被 decorate 之类的

982
00:35:00,000 --> 00:35:02,000
然后最重要的贡献之一

983
00:35:02,000 --> 00:35:04,000
就是他在这个 Latag 里面

984
00:35:04,000 --> 00:35:06,000
做了一个包管理系统

985
00:35:06,000 --> 00:35:11,000
这个是等于说是一个革命性的这么一个创造

986
00:35:11,000 --> 00:35:14,000
然后有了这道包管理系统之后

987
00:35:14,000 --> 00:35:16,000
就有很多人创造了很多包

988
00:35:16,000 --> 00:35:17,000
然后你用 Latag

989
00:35:17,000 --> 00:35:19,000
你就可以使用别人写的这些包

990
00:35:19,000 --> 00:35:21,000
来扩展你的

991
00:35:21,000 --> 00:35:24,000
来实现你的这个排版的一个目的

992
00:35:25,000 --> 00:35:26,000
这个就是 Latag

993
00:35:26,000 --> 00:35:27,000
对

994
00:35:28,000 --> 00:35:29,000
所以这里本质上

995
00:35:29,000 --> 00:35:32,000
Tag 其实只是一个非常底层的

996
00:35:32,000 --> 00:35:33,000
非常这种就是

997
00:35:33,000 --> 00:35:34,000
它是一个内合的 Latag

998
00:35:34,000 --> 00:35:36,000
它是会编语言的一个东西

999
00:35:36,000 --> 00:35:37,000
但是它并不

1000
00:35:37,000 --> 00:35:38,000
对

1001
00:35:38,000 --> 00:35:39,000
它并不

1002
00:35:39,000 --> 00:35:40,000
就是如果你直接去用它来排版

1003
00:35:40,000 --> 00:35:41,000
其实是非常痛苦的

1004
00:35:41,000 --> 00:35:44,000
因为各种指令都很原始

1005
00:35:44,000 --> 00:35:46,000
所以 Latag 它其实做的是说

1006
00:35:46,000 --> 00:35:48,000
我在上面打包做了一些抽象

1007
00:35:48,000 --> 00:35:48,000
对吧

1008
00:35:48,000 --> 00:35:49,000
你看有结构了

1009
00:35:49,000 --> 00:35:50,000
对吧

1010
00:35:50,000 --> 00:35:54,000
然后就是开始出现所谓的形式和内容

1011
00:35:54,000 --> 00:35:56,000
有一点点的分离的感觉

1012
00:35:56,000 --> 00:35:57,000
然后你可以以这个包管理

1013
00:35:57,000 --> 00:35:58,000
其实是模块化了

1014
00:35:59,000 --> 00:36:02,000
让大家能够更好地在上面去做进一步的扩展

1015
00:36:03,000 --> 00:36:04,000
他们的语义

1016
00:36:04,000 --> 00:36:06,000
就是说其实 Tag 就是基础的排版引擎

1017
00:36:06,000 --> 00:36:08,000
然后他们是叫红包

1018
00:36:08,000 --> 00:36:08,000
是吧

1019
00:36:08,000 --> 00:36:10,000
就那个 Macro package 是吧

1020
00:36:10,000 --> 00:36:11,000
红包吗

1021
00:36:11,000 --> 00:36:12,000
中文叫红包吗

1022
00:36:12,000 --> 00:36:14,000
并且怎么这么喜庆

1023
00:36:14,000 --> 00:36:15,000
肯定是红包

1024
00:36:15,000 --> 00:36:17,000
不然还能叫什么

1025
00:36:17,000 --> 00:36:21,000
红这个词就是随着 Microsoft 的办公软件

1026
00:36:21,000 --> 00:36:23,000
基本上是在 90 年代

1027
00:36:23,000 --> 00:36:24,000
在中文世界就铺开了

1028
00:36:24,000 --> 00:36:25,000
这个玩意就叫红

1029
00:36:26,000 --> 00:36:27,000
台湾叫聚集

1030
00:36:27,000 --> 00:36:28,000
好吧

1031
00:36:28,000 --> 00:36:30,000
聚集可能听起来还比较

1032
00:36:30,000 --> 00:36:31,000
你就好奇怪

1033
00:36:31,000 --> 00:36:32,000
比较好一点

1034
00:36:32,000 --> 00:36:35,000
但是红这个词已经被传开了

1035
00:36:38,000 --> 00:36:41,000
我们是不是重点要跟大家讲一下 Tag 的一些特点

1036
00:36:41,000 --> 00:36:42,000
好

1037
00:36:42,000 --> 00:36:44,000
但是 Tag 有什么特点

1038
00:36:44,000 --> 00:36:45,000
难用

1039
00:36:45,000 --> 00:36:47,000
最大特点就是免费开源

1040
00:36:47,000 --> 00:36:48,000
就最重要的

1041
00:36:48,000 --> 00:36:50,000
说点事

1042
00:36:50,000 --> 00:36:51,000
我前两天在作用课的时候

1043
00:36:51,000 --> 00:36:54,000
搜到了一篇一个齐人写的一篇齐文

1044
00:36:54,000 --> 00:36:57,000
然后我觉得还是可以在这里念一下

1045
00:36:57,000 --> 00:36:59,000
就是他

1046
00:36:59,000 --> 00:37:00,000
那个蛇精病

1047
00:37:00,000 --> 00:37:02,000
隶属了 Tag 的种种弊端

1048
00:37:02,000 --> 00:37:04,000
然后其中有一段是这样的

1049
00:37:04,000 --> 00:37:05,000
我来念一下

1050
00:37:05,000 --> 00:37:06,000
你说中文

1051
00:37:06,000 --> 00:37:06,000
好

1052
00:37:06,000 --> 00:37:07,000
我来翻一下

1053
00:37:07,000 --> 00:37:10,000
他说因为 Tag 是免费的

1054
00:37:10,000 --> 00:37:14,000
所以他限制了与其竞争的系统

1055
00:37:14,000 --> 00:37:16,000
和这个想法发展

1056
00:37:16,000 --> 00:37:18,000
如果 Tag 没有被研究出来

1057
00:37:18,000 --> 00:37:22,000
并且没有被免费的让人使用

1058
00:37:22,000 --> 00:37:26,000
那么能够保持这个数学公式的 structure

1059
00:37:26,000 --> 00:37:28,000
结构的这些替代的方案

1060
00:37:28,000 --> 00:37:30,000
比如说 MassML

1061
00:37:30,000 --> 00:37:33,000
这个我们一会提到叫 Mass Markov Language

1062
00:37:33,000 --> 00:37:35,000
还有 Mathmatic

1063
00:37:35,000 --> 00:37:37,000
就会比较早的被开发出来

1064
00:37:37,000 --> 00:37:40,000
并且也有可能就是会更为广泛的使用

1065
00:37:40,000 --> 00:37:43,000
就是 Tag 一下之一 Tag 是一个

1066
00:37:43,000 --> 00:37:46,000
Tag 是一个比较差的这么一套工具

1067
00:37:46,000 --> 00:37:48,000
但是因为它免费

1068
00:37:48,000 --> 00:37:48,000
大家都用了

1069
00:37:48,000 --> 00:37:50,000
所以大家就不思进去了

1070
00:37:50,000 --> 00:37:50,000
是吗

1071
00:37:50,000 --> 00:37:51,000
他的意思是

1072
00:37:51,000 --> 00:37:53,000
接下来他紧接就说了类似有的话

1073
00:37:53,000 --> 00:37:57,000
他说 free software 就像一种病毒

1074
00:37:57,000 --> 00:38:01,000
然后 free systems 有这个能力

1075
00:38:01,000 --> 00:38:07,000
可以去使得任何其他的 protocol 协议或者是设计

1076
00:38:07,000 --> 00:38:10,000
包括那些比较好的协议和设计

1077
00:38:11,000 --> 00:38:12,000
它有这个

1078
00:38:13,000 --> 00:38:15,000
让他们全军覆没的这样一种潜力

1079
00:38:15,000 --> 00:38:18,000
听起来很像比尔盖茨当年对自由软件的自责

1080
00:38:18,000 --> 00:38:19,000
对

1081
00:38:19,000 --> 00:38:19,000
Wars is better

1082
00:38:19,000 --> 00:38:20,000
然后他说

1083
00:38:20,000 --> 00:38:23,000
其中一个例子就是

1084
00:38:23,000 --> 00:38:25,000
The virus unix systems

1085
00:38:25,000 --> 00:38:27,000
就是各种各样的 unix 系统

1086
00:38:27,000 --> 00:38:30,000
以及他们所对应的协议

1087
00:38:30,000 --> 00:38:32,000
然后他说这些系统和协议

1088
00:38:32,000 --> 00:38:36,000
Has done huge irreversible damage to society

1089
00:38:36,000 --> 00:38:41,000
他说这些东西对整个社会产生了不可逆转的巨大的伤害

1090
00:38:43,000 --> 00:38:44,000
这是 Wars is better

1091
00:38:45,000 --> 00:38:48,000
这可能是我们今天获得我

1092
00:38:48,000 --> 00:38:54,000
我这过去 20 年里面听到了对于自由软件的最大的一次

1093
00:38:54,000 --> 00:38:57,000
最严苛的一次指控

1094
00:38:58,000 --> 00:38:59,000
我以前没有想过这件事情

1095
00:38:59,000 --> 00:39:01,000
但是如果你说他

1096
00:39:01,000 --> 00:39:03,000
我们来想想他说有没有道理

1097
00:39:03,000 --> 00:39:04,000
可能是有道理的

1098
00:39:04,000 --> 00:39:05,000
但是

1099
00:39:06,000 --> 00:39:08,000
看你占的立场是啥了吗

1100
00:39:08,000 --> 00:39:11,000
你如果是那些想做商业软件

1101
00:39:11,000 --> 00:39:12,000
对吧

1102
00:39:12,000 --> 00:39:13,000
想靠这个赚钱

1103
00:39:13,000 --> 00:39:17,000
然后说你要通过 compet on quality

1104
00:39:17,000 --> 00:39:18,000
对吧

1105
00:39:18,000 --> 00:39:20,000
你要通过品质的竞争

1106
00:39:20,000 --> 00:39:21,000
那确实是

1107
00:39:21,000 --> 00:39:22,000
很多你就干

1108
00:39:22,000 --> 00:39:23,000
你这个人就干不下去了

1109
00:39:23,000 --> 00:39:24,000
很多

1110
00:39:24,000 --> 00:39:30,000
比如说你需要聘请专业人员来设计制作

1111
00:39:30,000 --> 00:39:32,000
然后比如说这些系统

1112
00:39:32,000 --> 00:39:34,000
那你肯定就干不过免费的

1113
00:39:34,000 --> 00:39:34,000
你就死掉了

1114
00:39:35,000 --> 00:39:38,000
那我们看到过去自由软件的整个历史

1115
00:39:38,000 --> 00:39:40,000
不就是在不断的去禅实那些商业软件

1116
00:39:40,000 --> 00:39:43,000
本来可以卖钱的那些领域

1117
00:39:43,000 --> 00:39:43,000
对吧

1118
00:39:43,000 --> 00:39:45,000
现在那边超过一些东西也是

1119
00:39:46,000 --> 00:39:47,000
unix 出来之后对吧

1120
00:39:47,000 --> 00:39:48,000
unix 之后

1121
00:39:48,000 --> 00:39:52,000
你还有什么其他就是除了的

1122
00:39:52,000 --> 00:39:54,000
windows

1123
00:39:54,000 --> 00:39:56,000
除了 Mac 他底下的 BSD

1124
00:39:56,000 --> 00:39:59,000
还在有一些这种商业的在用的之外

1125
00:39:59,000 --> 00:40:02,000
其他那些非常小众都已经非常示威了

1126
00:40:02,000 --> 00:40:04,000
就是商业软件都已经消亡了

1127
00:40:04,000 --> 00:40:05,000
对了

1128
00:40:05,000 --> 00:40:07,000
他提到的这些 virus unix systems

1129
00:40:07,000 --> 00:40:10,000
它这里面 unix systems 包含很多东西

1130
00:40:10,000 --> 00:40:15,000
其中 unix 最最最原本的 unix 后来被卖给了

1131
00:40:15,000 --> 00:40:16,000
卖给了谁

1132
00:40:16,000 --> 00:40:18,000
AT&T 还是谁

1133
00:40:18,000 --> 00:40:21,000
他那个真正 unix 的商标实际上是卖钱的

1134
00:40:21,000 --> 00:40:27,000
反倒是后来的什么 BSD 和 Linux 是流吧

1135
00:40:27,000 --> 00:40:29,000
这个卖钱的 unix 给打败了

1136
00:40:29,000 --> 00:40:31,000
比如说当时的

1137
00:40:31,000 --> 00:40:33,000
就是为什么现在会有 AWS

1138
00:40:33,000 --> 00:40:35,000
就是因为当时

1139
00:40:35,000 --> 00:40:37,000
yamashun 觉得

1140
00:40:37,000 --> 00:40:42,000
summicro system 的 solaris 的那些服务器太贵了

1141
00:40:42,000 --> 00:40:44,000
然后转向 Linux

1142
00:40:44,000 --> 00:40:46,000
然后 sum 就倒闭了

1143
00:40:46,000 --> 00:40:48,000
对

1144
00:40:48,000 --> 00:40:49,000
生养也会倒闭

1145
00:40:49,000 --> 00:40:50,000
对

1146
00:40:50,000 --> 00:40:53,000
然后 yamashun 发现自己可以用十分之一的价钱

1147
00:40:53,000 --> 00:40:55,000
达到之前 100 倍的容量

1148
00:40:55,000 --> 00:40:59,000
然后他决定把之前多出来这些容量租给别人用

1149
00:40:59,000 --> 00:41:02,000
于是就有了今天的 ABS

1150
00:41:02,000 --> 00:41:04,000
租此来的事情实际上在一次一次的上演

1151
00:41:04,000 --> 00:41:06,000
但是如果你这样讲的话

1152
00:41:06,000 --> 00:41:08,000
虽然 teh 他本身是免费的

1153
00:41:08,000 --> 00:41:13,000
但 teh 本身这个 teh 是美国数学学会的商标

1154
00:41:13,000 --> 00:41:16,000
然后 metafonce 也是当时出版社

1155
00:41:16,000 --> 00:41:19,000
就是 adison wissley 出版社的商标

1156
00:41:19,000 --> 00:41:21,000
这些商标都是有注册的

1157
00:41:21,000 --> 00:41:23,000
就跟 unix 一样

1158
00:41:23,000 --> 00:41:25,000
但是他本身是免费的

1159
00:41:25,000 --> 00:41:26,000
对

1160
00:41:26,000 --> 00:41:27,000
他们免费事实上不自由

1161
00:41:27,000 --> 00:41:28,000
对

1162
00:41:28,000 --> 00:41:29,000
开源

1163
00:41:29,000 --> 00:41:30,000
他们开源

1164
00:41:30,000 --> 00:41:32,000
所以有人骂 teh

1165
00:41:32,000 --> 00:41:35,000
可是 teh 的支持者就说我们 teh 多好

1166
00:41:35,000 --> 00:41:36,000
我们免费开源

1167
00:41:36,000 --> 00:41:38,000
然后跨平台

1168
00:41:38,000 --> 00:41:39,000
跨设备

1169
00:41:39,000 --> 00:41:39,000
这个是最关键

1170
00:41:39,000 --> 00:41:43,000
就是说同样的输入可以得到同样的效果

1171
00:41:43,000 --> 00:41:44,000
哪怕大家也知道

1172
00:41:44,000 --> 00:41:49,000
这个 teh 原来是 40 多年前开发的这样的引擎

1173
00:41:49,000 --> 00:41:51,000
但是当时高德纳就说

1174
00:41:51,000 --> 00:41:57,000
你无论用任何一台电脑输出的效果都是一样的

1175
00:41:57,000 --> 00:41:58,000
这个特别厉害

1176
00:41:58,000 --> 00:42:00,000
然后跨设备的意思是

1177
00:42:00,000 --> 00:42:02,000
不仅是屏幕显示

1178
00:42:02,000 --> 00:42:05,000
还有无论后来打印机

1179
00:42:05,000 --> 00:42:07,000
哪怕后来有 PostScript 出现

1180
00:42:07,000 --> 00:42:10,000
然后我们比如说有 PDF

1181
00:42:10,000 --> 00:42:15,000
甚至像哪怕是日本特别专用的写研家公司

1182
00:42:15,000 --> 00:42:17,000
他们自己的电商照牌机

1183
00:42:17,000 --> 00:42:20,000
你只要用的是 teh 大厨的文本

1184
00:42:20,000 --> 00:42:22,000
最后输出的效果都是一样的

1185
00:42:22,000 --> 00:42:25,000
这个是特别厉害的例子

1186
00:42:26,000 --> 00:42:29,000
我们要不接下来就讲一讲

1187
00:42:29,000 --> 00:42:31,000
teh 作为一个软件

1188
00:42:31,000 --> 00:42:33,000
它的 User Interface 是怎么样

1189
00:42:33,000 --> 00:42:35,000
也就是它的用户操作界面是怎么样

1190
00:42:35,000 --> 00:42:38,000
这我觉得可能对于很多设计师或者是

1191
00:42:38,000 --> 00:42:39,000
没有接触和 teh

1192
00:42:39,000 --> 00:42:43,000
但有想要试一试的人来说比较重要的一点

1193
00:42:43,000 --> 00:42:45,000
我觉得可能要介绍的是工作流

1194
00:42:45,000 --> 00:42:47,000
因为拉 teh 事实上是没有一个

1195
00:42:47,000 --> 00:42:50,000
于是首先你要学会使用命令哈

1196
00:42:50,000 --> 00:42:50,000
对

1197
00:42:50,000 --> 00:42:53,000
它事实上是没有一个标准的操作界面的

1198
00:42:53,000 --> 00:42:56,000
你可能装了某些特定的 teh 的版本

1199
00:42:56,000 --> 00:42:58,000
这个我们一会会讲

1200
00:42:58,000 --> 00:43:02,000
这就是然后你会有一个编辑 teh 的环境

1201
00:43:02,000 --> 00:43:05,000
但是没有一个东西说你一定要打开这个

1202
00:43:05,000 --> 00:43:07,000
比如说 Fotoshop 或者是 Pacemaker

1203
00:43:07,000 --> 00:43:09,000
你有一个组成需要运行

1204
00:43:09,000 --> 00:43:10,000
在拉 teh 这边是没有的

1205
00:43:10,000 --> 00:43:13,000
你可以按照自己喜欢的方式

1206
00:43:13,000 --> 00:43:17,000
用一个你喜欢的编辑软件去做你想要做的事情

1207
00:43:17,000 --> 00:43:19,000
本质上它是编程

1208
00:43:19,000 --> 00:43:21,000
它没有一个所谓的

1209
00:43:21,000 --> 00:43:24,000
你说有一个什么专用的程序来使用它

1210
00:43:24,000 --> 00:43:24,000
对吧

1211
00:43:24,000 --> 00:43:28,000
你就是其实是任何一个我们编辑系统可以写

1212
00:43:28,000 --> 00:43:29,000
所以我刚才讲

1213
00:43:29,000 --> 00:43:30,000
你说你要开始使用这个

1214
00:43:30,000 --> 00:43:31,000
你要接触的 UI

1215
00:43:31,000 --> 00:43:32,000
U interface

1216
00:43:32,000 --> 00:43:34,000
就首先你得学会使用命令好吗

1217
00:43:34,000 --> 00:43:38,000
怎么开始去完成这个转换的过程

1218
00:43:38,000 --> 00:43:39,000
这也是它的特点之一

1219
00:43:39,000 --> 00:43:41,000
就是我们把整个过程说一下

1220
00:43:41,000 --> 00:43:46,000
就用户是只要有一个文本编辑器就可以了

1221
00:43:46,000 --> 00:43:47,000
它写的是一个文本文件

1222
00:43:47,000 --> 00:43:48,000
即是本也可以

1223
00:43:48,000 --> 00:43:48,000
对

1224
00:43:48,000 --> 00:43:50,000
teh 它是纯文本

1225
00:43:50,000 --> 00:43:53,000
所以它非常便于传输编辑

1226
00:43:53,000 --> 00:43:58,000
你只要你喜欢你个人习惯用的文本编辑器就可以

1227
00:43:58,000 --> 00:43:59,000
你用什么都可以

1228
00:43:59,000 --> 00:44:01,000
然后倒到引擎里面去

1229
00:44:01,000 --> 00:44:03,000
当然传统的拉特克的话

1230
00:44:03,000 --> 00:44:06,000
它要中途要先生成一个 DVI 文件

1231
00:44:06,000 --> 00:44:07,000
这个 DVI

1232
00:44:07,000 --> 00:44:10,000
其实 DVI 是 Device Independent 的

1233
00:44:10,000 --> 00:44:12,000
就是设备独立

1234
00:44:12,000 --> 00:44:14,000
它有一个中途文件

1235
00:44:14,000 --> 00:44:15,000
然后这个 DVI 文件

1236
00:44:15,000 --> 00:44:17,000
然后根据它的驱动

1237
00:44:17,000 --> 00:44:20,000
然后最后再生成什么 PDF 或者是答应

1238
00:44:20,000 --> 00:44:23,000
当然现在的拉特克他们就可以

1239
00:44:23,000 --> 00:44:24,000
现代拉特克

1240
00:44:24,000 --> 00:44:24,000
比如说路线拉特克

1241
00:44:24,000 --> 00:44:29,000
它就可以直接从文本文件直接给导出 PDF 了

1242
00:44:29,000 --> 00:44:32,000
所以这是两个步骤的

1243
00:44:32,000 --> 00:44:34,000
用户直接它要写一个

1244
00:44:34,000 --> 00:44:37,000
像命令行一样的纯文本

1245
00:44:37,000 --> 00:44:42,000
然后再通过这样一个引擎去生成 PDF

1246
00:44:42,000 --> 00:44:44,000
所以它是一个两个步骤的东西

1247
00:44:44,000 --> 00:44:48,000
而不是所谓的可见极所得

1248
00:44:48,000 --> 00:44:49,000
对吧

1249
00:44:49,000 --> 00:44:50,000
我有自己的我有给

1250
00:44:50,000 --> 00:44:51,000
这是它一个最大的不同

1251
00:44:51,000 --> 00:44:53,000
但其实也有人在上面做一些尝试

1252
00:44:53,000 --> 00:44:56,000
就是说有人做了这种专用的编辑器

1253
00:44:56,000 --> 00:44:58,000
然后你这边输入拉特克的指令

1254
00:44:58,000 --> 00:45:02,000
然后是可以就是几乎实现所见极所得

1255
00:45:02,000 --> 00:45:06,000
但是和所有的所见极所得的这种排道人员一样

1256
00:45:06,000 --> 00:45:08,000
它还是面临着非常不好用的问题

1257
00:45:08,000 --> 00:45:11,000
所以也不是非常的广泛

1258
00:45:11,000 --> 00:45:13,000
就是它还是有代码的

1259
00:45:13,000 --> 00:45:15,000
知乎那个公式编辑器

1260
00:45:15,000 --> 00:45:18,000
其实它提供了一个让你点的那么一个界面

1261
00:45:18,000 --> 00:45:20,000
就是你点一个什么

1262
00:45:20,000 --> 00:45:21,000
比如说根号

1263
00:45:21,000 --> 00:45:24,000
然后它下面帮你插入拉特克的那个根号的命令

1264
00:45:24,000 --> 00:45:26,000
类似于这些东西

1265
00:45:26,000 --> 00:45:29,000
其实现在要比直接手写的还是要多一些

1266
00:45:29,000 --> 00:45:30,000
不就这种还算是

1267
00:45:30,000 --> 00:45:32,000
就那种还是就是说

1268
00:45:32,000 --> 00:45:34,000
是一个非常短的那种编写

1269
00:45:34,000 --> 00:45:36,000
然后编译的一个循环

1270
00:45:36,000 --> 00:45:37,000
它还是没有脱离

1271
00:45:37,000 --> 00:45:38,000
刚才我说的命令行的本质

1272
00:45:38,000 --> 00:45:40,000
这里面我说的这种就是可以

1273
00:45:40,000 --> 00:45:40,000
对

1274
00:45:40,000 --> 00:45:41,000
它基本上就只能做公式

1275
00:45:41,000 --> 00:45:44,000
你可以就是相对完整的做出的这种编辑

1276
00:45:44,000 --> 00:45:47,000
最成熟的应该是那个叫做

1277
00:45:47,000 --> 00:45:47,000
这怎么念

1278
00:45:47,000 --> 00:45:48,000
Leaks 吗

1279
00:45:48,000 --> 00:45:49,000
lyx

1280
00:45:49,000 --> 00:45:51,000
它的网站是 lyx.org

1281
00:45:51,000 --> 00:45:51,000
对

1282
00:45:51,000 --> 00:45:52,000
org 的这个

1283
00:45:52,000 --> 00:45:54,000
你可以去看它有截图

1284
00:45:54,000 --> 00:45:56,000
就它相对来说是更加接近于

1285
00:45:56,000 --> 00:45:59,000
就是你编辑 Word 的那种感觉的

1286
00:45:59,000 --> 00:46:00,000
不过话说回来的话

1287
00:46:00,000 --> 00:46:01,000
就是我们现在用配合都是

1288
00:46:01,000 --> 00:46:02,000
大家会想到用公式

1289
00:46:02,000 --> 00:46:04,000
可是当年高德纳先生

1290
00:46:04,000 --> 00:46:07,000
他可是真的是要排输的

1291
00:46:07,000 --> 00:46:08,000
他这个很厉害的

1292
00:46:08,000 --> 00:46:10,000
比如他会算那个缓含位置

1293
00:46:10,000 --> 00:46:11,000
然后两段对齐

1294
00:46:11,000 --> 00:46:14,000
这都是做很专业的

1295
00:46:14,000 --> 00:46:15,000
成文排版的东西

1296
00:46:15,000 --> 00:46:18,000
就是他还特地为此去学排版

1297
00:46:18,000 --> 00:46:20,000
所以高德纳先生很厉害

1298
00:46:20,000 --> 00:46:21,000
可是我们现在主要用的

1299
00:46:21,000 --> 00:46:23,000
男孩用的还是来去排公式

1300
00:46:23,000 --> 00:46:26,000
对

1301
00:46:26,000 --> 00:46:27,000
这里就有一个问题了

1302
00:46:27,000 --> 00:46:29,000
其实就是可以探讨一下

1303
00:46:29,000 --> 00:46:30,000
就是为什么排

1304
00:46:30,000 --> 00:46:33,000
排公式和普通的这个排版

1305
00:46:33,000 --> 00:46:36,000
它有什么样的特殊之处

1306
00:46:36,000 --> 00:46:38,000
对使得它必须要

1307
00:46:38,000 --> 00:46:40,000
就专门做这么一套系统

1308
00:46:40,000 --> 00:46:41,000
公式很复杂

1309
00:46:41,000 --> 00:46:43,000
这个大家也都知道

1310
00:46:43,000 --> 00:46:44,000
尤其在千字时代

1311
00:46:44,000 --> 00:46:47,000
那个公式可就是超级复杂了

1312
00:46:47,000 --> 00:46:50,000
才要在自符的周围塞不同的牵控

1313
00:46:50,000 --> 00:46:51,000
对吧

1314
00:46:51,000 --> 00:46:52,000
哪怕一个更号

1315
00:46:52,000 --> 00:46:54,000
就是一个很复杂的一个东西

1316
00:46:54,000 --> 00:46:56,000
更号上面还那个长度

1317
00:46:56,000 --> 00:46:58,000
什么就乱七八糟的

1318
00:46:58,000 --> 00:47:00,000
都要有复合的

1319
00:47:00,000 --> 00:47:01,000
对

1320
00:47:01,000 --> 00:47:02,000
我觉得就是数学公式

1321
00:47:02,000 --> 00:47:04,000
最麻烦的地方就在于

1322
00:47:04,000 --> 00:47:04,000
他相对

1323
00:47:04,000 --> 00:47:06,000
如果我们只是考虑一个

1324
00:47:06,000 --> 00:47:08,000
最简单的文本的排印

1325
00:47:08,000 --> 00:47:10,000
它其实主要考虑是相对来说

1326
00:47:10,000 --> 00:47:11,000
是一个

1327
00:47:11,000 --> 00:47:12,000
一个维度

1328
00:47:12,000 --> 00:47:13,000
就是你那一行到底要处理怎么样

1329
00:47:13,000 --> 00:47:14,000
因为它行一行之间

1330
00:47:14,000 --> 00:47:17,000
通常来说不会有太大的相互观点

1331
00:47:17,000 --> 00:47:18,000
除非你是断行的影响之外

1332
00:47:18,000 --> 00:47:19,000
对吧

1333
00:47:19,000 --> 00:47:19,000
但是数学公式

1334
00:47:19,000 --> 00:47:23,000
它本质上是一个二维的一个画画

1335
00:47:23,000 --> 00:47:24,000
你可以这么理解

1336
00:47:24,000 --> 00:47:25,000
比如说

1337
00:47:25,000 --> 00:47:27,000
我们常用的这个叫什么来的

1338
00:47:27,000 --> 00:47:27,000
上标下标

1339
00:47:27,000 --> 00:47:29,000
就是指数符号或者是角标符号

1340
00:47:29,000 --> 00:47:30,000
对吧

1341
00:47:30,000 --> 00:47:32,000
它存在说有一个大小的问题

1342
00:47:32,000 --> 00:47:33,000
而且数学公式很多是

1343
00:47:33,000 --> 00:47:34,000
很多是可以所谓的嵌套的

1344
00:47:34,000 --> 00:47:36,000
就你会 A 的平方的

1345
00:47:36,000 --> 00:47:37,000
平方的平方

1346
00:47:37,000 --> 00:47:38,000
你要想的那个结果

1347
00:47:38,000 --> 00:47:41,000
是那个平方的那个角标会逐级变小

1348
00:47:41,000 --> 00:47:42,000
嘛

1349
00:47:42,000 --> 00:47:45,000
这种需求在普通的这个文字排码上面

1350
00:47:45,000 --> 00:47:46,000
它其实不存在的

1351
00:47:46,000 --> 00:47:48,000
就上标它把这个灵活性是要求非常高

1352
00:47:48,000 --> 00:47:51,000
然后要求你控制它的这个相对位置

1353
00:47:51,000 --> 00:47:53,000
它的首先维度上就变得更广泛

1354
00:47:53,000 --> 00:47:56,000
而且它的大小的精度又要求更高了

1355
00:47:56,000 --> 00:47:59,000
排数学公式实际上面临了一个双倍的

1356
00:47:59,000 --> 00:48:00,000
双层的问题

1357
00:48:00,000 --> 00:48:02,000
一个是 unicode 的

1358
00:48:02,000 --> 00:48:05,000
或者说编码需要解决这个问题

1359
00:48:05,000 --> 00:48:06,000
就是那些重音符号啊

1360
00:48:06,000 --> 00:48:08,000
或者是

1361
00:48:08,000 --> 00:48:08,000
一些字

1362
00:48:08,000 --> 00:48:10,000
首先有字的问题

1363
00:48:10,000 --> 00:48:13,000
字符的附加了这些零件的排版

1364
00:48:13,000 --> 00:48:14,000
就是定位的问题

1365
00:48:14,000 --> 00:48:15,000
它还有一个问题

1366
00:48:15,000 --> 00:48:16,000
就是它把所有这些东西

1367
00:48:16,000 --> 00:48:19,000
在一个非线性的方式组合在一起

1368
00:48:19,000 --> 00:48:22,000
它是面临是一个二维的一个空间

1369
00:48:22,000 --> 00:48:24,000
它还不仅仅是一个三维的问题

1370
00:48:24,000 --> 00:48:25,000
所以你要解决这个问题

1371
00:48:25,000 --> 00:48:29,000
实际上是要用比 unicode 更加复杂的一套方法

1372
00:48:29,000 --> 00:48:30,000
来完成它

1373
00:48:30,000 --> 00:48:31,000
你还是提到刚才一点

1374
00:48:31,000 --> 00:48:33,000
Tex 出现的时候还没有 unicode 这件事情

1375
00:48:33,000 --> 00:48:36,000
所以当时它要去在数学公式里面

1376
00:48:36,000 --> 00:48:38,000
大量出现的什么希腊字母

1377
00:48:38,000 --> 00:48:41,000
各种奇奇怪怪的这种数学符号

1378
00:48:41,000 --> 00:48:42,000
你就从来不会想到过的

1379
00:48:42,000 --> 00:48:45,000
就现在连 unicode 里面都不齐全的那些符号

1380
00:48:45,000 --> 00:48:47,000
它都要在这个系统里面实现出来

1381
00:48:47,000 --> 00:48:49,000
然后还要考虑它各种

1382
00:48:49,000 --> 00:48:50,000
这个在二维二维

1383
00:48:50,000 --> 00:48:53,000
就是两个这个维度上电区的

1384
00:48:53,000 --> 00:48:54,000
如何相对排布

1385
00:48:54,000 --> 00:48:55,000
相对大小

1386
00:48:55,000 --> 00:48:58,000
以及每个字型还要处理得好看

1387
00:48:58,000 --> 00:48:58,000
对吧

1388
00:48:58,000 --> 00:48:59,000
这个就太难了

1389
00:48:59,000 --> 00:49:01,000
对

1390
00:49:01,000 --> 00:49:04,000
这的确是一个非常只有中适级成员

1391
00:49:04,000 --> 00:49:06,000
能解决的变成问题

1392
00:49:06,000 --> 00:49:07,000
这个你不排数学公式

1393
00:49:07,000 --> 00:49:08,000
你都不知道吗

1394
00:49:08,000 --> 00:49:09,000
就比如说 sinx

1395
00:49:09,000 --> 00:49:12,000
那个 sin 是必须要用正立的罗马体

1396
00:49:12,000 --> 00:49:15,000
然后变量 x 是要用意大利协体

1397
00:49:15,000 --> 00:49:17,000
就是不做理工科排版

1398
00:49:17,000 --> 00:49:18,000
都不会意识到这个问题吗

1399
00:49:18,000 --> 00:49:19,000
是

1400
00:49:19,000 --> 00:49:19,000
对吧

1401
00:49:19,000 --> 00:49:20,000
单位的话

1402
00:49:20,000 --> 00:49:24,000
物理量的单位是必须要用正立的罗马体

1403
00:49:24,000 --> 00:49:27,000
但是物理的变量都必须要用意大利协体

1404
00:49:27,000 --> 00:49:28,000
像这个东西

1405
00:49:28,000 --> 00:49:29,000
你跟一般人来讲的话

1406
00:49:29,000 --> 00:49:30,000
它都没有注意到

1407
00:49:30,000 --> 00:49:33,000
哪怕虽然你平时从小

1408
00:49:33,000 --> 00:49:36,000
中小学你看数学科本都是那样排出来的

1409
00:49:36,000 --> 00:49:37,000
然后等你自己来排到

1410
00:49:37,000 --> 00:49:39,000
你觉得总是没有那个味道

1411
00:49:39,000 --> 00:49:40,000
就感觉要排出来不像

1412
00:49:40,000 --> 00:49:43,000
这就是因为它其中有很多

1413
00:49:43,000 --> 00:49:46,000
它有各自的这样的一个排版规则在

1414
00:49:46,000 --> 00:49:47,000
对

1415
00:49:47,000 --> 00:49:48,000
写公式跟排公式

1416
00:49:48,000 --> 00:49:51,000
甚至自动生成公式之间的关系

1417
00:49:51,000 --> 00:49:52,000
是难度是天长的厉害

1418
00:49:52,000 --> 00:49:54,000
不过我觉得这里还是我要

1419
00:49:54,000 --> 00:49:58,000
我要夹带丝货涂一下草

1420
00:49:58,000 --> 00:49:59,000
就是我觉得

1421
00:49:59,000 --> 00:50:01,000
虽然说它有各种那样难度

1422
00:50:01,000 --> 00:50:02,000
其实我觉得很多问题

1423
00:50:02,000 --> 00:50:04,000
都是自找的

1424
00:50:04,000 --> 00:50:04,000
对吧

1425
00:50:04,000 --> 00:50:05,000
没有其他哪个行业

1426
00:50:05,000 --> 00:50:07,000
有这么多规模的需求

1427
00:50:07,000 --> 00:50:08,000
比如像刚才你听到

1428
00:50:10,000 --> 00:50:13,000
听到 Erik 讲的对同一个概念里面

1429
00:50:13,000 --> 00:50:17,000
还要用不同的这种自服形态来去描述它

1430
00:50:17,000 --> 00:50:17,000
你想

1431
00:50:17,000 --> 00:50:19,000
手写的数学体不存在这种区别

1432
00:50:19,000 --> 00:50:19,000
对不对

1433
00:50:19,000 --> 00:50:21,000
你可能都是写个赛

1434
00:50:21,000 --> 00:50:21,000
然后都是你的手写的

1435
00:50:21,000 --> 00:50:22,000
等等自己

1436
00:50:22,000 --> 00:50:24,000
然后你就区分一个大小写

1437
00:50:24,000 --> 00:50:27,000
区分一个罗马的字母

1438
00:50:27,000 --> 00:50:27,000
希腊的字母

1439
00:50:27,000 --> 00:50:29,000
当然也可能也是因为字母 26 个

1440
00:50:29,000 --> 00:50:30,000
你不够用了

1441
00:50:30,000 --> 00:50:31,000
你才会讨着这种东西

1442
00:50:31,000 --> 00:50:34,000
但是到了数码排版之后

1443
00:50:34,000 --> 00:50:35,000
你就发现

1444
00:50:35,000 --> 00:50:37,000
我有各种各样的工具

1445
00:50:37,000 --> 00:50:39,000
这种口琴信之后

1446
00:50:39,000 --> 00:50:41,000
你就说我要规定说

1447
00:50:41,000 --> 00:50:43,000
这种赛要用怎么一标识来写

1448
00:50:43,000 --> 00:50:45,000
然后我的罗马字符上面加个尖

1449
00:50:45,000 --> 00:50:46,000
又是什么意思

1450
00:50:46,000 --> 00:50:47,000
就很多问题

1451
00:50:47,000 --> 00:50:51,000
其实是研究数学和做这些照牌系统

1452
00:50:51,000 --> 00:50:53,000
或者说是编辑

1453
00:50:53,000 --> 00:50:54,000
他们自己给自己找的麻烦

1454
00:50:54,000 --> 00:50:56,000
所以就由自取

1455
00:50:56,000 --> 00:50:57,000
自作你不可活

1456
00:50:57,000 --> 00:50:59,000
搞得这么麻烦也活改

1457
00:50:59,000 --> 00:51:00,000
你要这样说话

1458
00:51:01,000 --> 00:51:03,000
这不是代数的

1459
00:51:03,000 --> 00:51:04,000
它的宿命所在

1460
00:51:04,000 --> 00:51:06,000
它用字母代替数

1461
00:51:06,000 --> 00:51:08,000
它肯定是数字母

1462
00:51:08,000 --> 00:51:09,000
肯定是越来越不够的

1463
00:51:09,000 --> 00:51:11,000
一开始我们只用那定字母而已

1464
00:51:11,000 --> 00:51:12,000
然后希腊

1465
00:51:12,000 --> 00:51:13,000
我们的希腊字母

1466
00:51:13,000 --> 00:51:15,000
都是数学老师教的

1467
00:51:15,000 --> 00:51:17,000
我相信希腊字母

1468
00:51:17,000 --> 00:51:18,000
总之也都是数学老师教的

1469
00:51:18,000 --> 00:51:18,000
是啊

1470
00:51:18,000 --> 00:51:20,000
我的意思就是说

1471
00:51:20,000 --> 00:51:22,000
它本来是有一些

1472
00:51:22,000 --> 00:51:24,000
就是说有可能有其他几个方案的

1473
00:51:24,000 --> 00:51:25,000
比如说为什么一定

1474
00:51:25,000 --> 00:51:26,000
比如说那个叫什么

1475
00:51:26,000 --> 00:51:28,000
Sum 的操作符号

1476
00:51:28,000 --> 00:51:29,000
一定要是这么一个规定的一个格式

1477
00:51:29,000 --> 00:51:30,000
去描述的名字

1478
00:51:30,000 --> 00:51:31,000
大四一个码对吧

1479
00:51:31,000 --> 00:51:32,000
对吧

1480
00:51:32,000 --> 00:51:32,000
四个码

1481
00:51:32,000 --> 00:51:33,000
然后下面一个 N 等于

1482
00:51:33,000 --> 00:51:35,000
顶上到多少到无穷

1483
00:51:35,000 --> 00:51:36,000
然后这边是一个什么东西

1484
00:51:36,000 --> 00:51:37,000
为什么一定要这种结构

1485
00:51:37,000 --> 00:51:38,000
它明明有更简单的方式

1486
00:51:38,000 --> 00:51:39,000
可以写

1487
00:51:39,000 --> 00:51:40,000
到可以自己找这种麻烦

1488
00:51:40,000 --> 00:51:40,000
对吧

1489
00:51:40,000 --> 00:51:41,000
就 Rio 说了这些东西

1490
00:51:41,000 --> 00:51:42,000
让我想到的很久以前

1491
00:51:42,000 --> 00:51:43,000
读过这篇文章

1492
00:51:43,000 --> 00:51:47,000
就说数学为什么会有现在的

1493
00:51:47,000 --> 00:51:48,000
这个就是非常难的

1494
00:51:48,000 --> 00:51:50,000
这个 reputation

1495
00:51:51,000 --> 00:51:53,000
原因之一跟它采用的这套

1496
00:51:53,000 --> 00:51:54,000
符号系统是分不开的

1497
00:51:54,000 --> 00:51:57,000
就是数学的这一套符号系统

1498
00:51:57,000 --> 00:51:58,000
就好像

1499
00:51:58,000 --> 00:51:59,000
五线谱或者是

1500
00:52:00,000 --> 00:52:01,000
它是一个入门的门槛

1501
00:52:01,000 --> 00:52:03,000
它是一个历史研尘下来的

1502
00:52:03,000 --> 00:52:03,000
这么一套

1503
00:52:03,000 --> 00:52:06,000
自成系统的一个东西

1504
00:52:06,000 --> 00:52:08,000
就假如说我们有一个数学的

1505
00:52:08,000 --> 00:52:10,000
攻示了理想模型的话

1506
00:52:10,000 --> 00:52:12,000
它并不是适合于

1507
00:52:12,000 --> 00:52:13,000
它不是设计出来的

1508
00:52:13,000 --> 00:52:17,000
描述理想模型的最合适的系统

1509
00:52:17,000 --> 00:52:18,000
但是这个系统存在

1510
00:52:18,000 --> 00:52:19,000
导致于很多人

1511
00:52:19,000 --> 00:52:21,000
它也许有数学天赋

1512
00:52:21,000 --> 00:52:22,000
但是它因为没有办法

1513
00:52:22,000 --> 00:52:24,000
去理解这套符号系统

1514
00:52:24,000 --> 00:52:26,000
而浪费了它的数学天赋

1515
00:52:26,000 --> 00:52:28,000
就好像有些很

1516
00:52:28,000 --> 00:52:29,000
可能音乐上面

1517
00:52:29,000 --> 00:52:30,000
很有造译的人

1518
00:52:30,000 --> 00:52:31,000
它不懂五线谱一样

1519
00:52:31,000 --> 00:52:32,000
有些人是靠着

1520
00:52:32,000 --> 00:52:33,000
自己的数学直觉

1521
00:52:33,000 --> 00:52:34,000
可以克服这个的

1522
00:52:34,000 --> 00:52:35,000
比如说那个什么

1523
00:52:35,000 --> 00:52:37,000
印度曾经有过一个数学天才

1524
00:52:37,000 --> 00:52:39,000
叫什么拉达奴马金之类的一个人

1525
00:52:39,000 --> 00:52:41,000
它就是一个

1526
00:52:41,000 --> 00:52:43,000
靠着自己发明出来的数学符号

1527
00:52:43,000 --> 00:52:44,000
达到了很多

1528
00:52:44,000 --> 00:52:45,000
怎么说

1529
00:52:45,000 --> 00:52:46,000
那些科班出生的人

1530
00:52:46,000 --> 00:52:48,000
没能达到数学高度

1531
00:52:48,000 --> 00:52:49,000
但是

1532
00:52:49,000 --> 00:52:50,000
不是我们每个普通人

1533
00:52:50,000 --> 00:52:52,000
都可以有这样的能力

1534
00:52:52,000 --> 00:52:54,000
但是

1535
00:52:54,000 --> 00:52:55,000
这套数学符号对于我们

1536
00:52:55,000 --> 00:52:57,000
每个普通人造成的障碍

1537
00:52:57,000 --> 00:52:58,000
确实确确实是在那

1538
00:52:58,000 --> 00:52:59,000
就好像你在

1539
00:52:59,000 --> 00:53:00,000
比如说你在知乎

1540
00:53:00,000 --> 00:53:01,000
或者说台湾什么地方

1541
00:53:01,000 --> 00:53:02,000
你想要

1542
00:53:02,000 --> 00:53:04,000
本来用自己的书法

1543
00:53:04,000 --> 00:53:05,000
写字写的开开信息

1544
00:53:05,000 --> 00:53:07,000
忽然你想要插入一个数学公式

1545
00:53:07,000 --> 00:53:08,000
然后你发现

1546
00:53:08,000 --> 00:53:09,000
你自己的书法

1547
00:53:09,000 --> 00:53:10,000
完全没办法

1548
00:53:10,000 --> 00:53:12,000
帮你是插入这个公式

1549
00:53:12,000 --> 00:53:16,000
然后你去找怎么样来画一个公式

1550
00:53:16,000 --> 00:53:16,000
很多人

1551
00:53:16,000 --> 00:53:17,000
end up with

1552
00:53:17,000 --> 00:53:20,000
就是在纸上写一个数学公式

1553
00:53:20,000 --> 00:53:22,000
然后拍一下那个纸的照片

1554
00:53:22,000 --> 00:53:22,000
对吧

1555
00:53:22,000 --> 00:53:23,000
在知乎上

1556
00:53:23,000 --> 00:53:24,000
很多答案都是这样的

1557
00:53:24,000 --> 00:53:25,000
但是也有一些人

1558
00:53:25,000 --> 00:53:26,000
就会去研究说

1559
00:53:26,000 --> 00:53:29,000
我怎么样用一个比较

1560
00:53:29,000 --> 00:53:31,000
怎么说正统的方式

1561
00:53:31,000 --> 00:53:34,000
来生成一个公式的图片

1562
00:53:34,000 --> 00:53:35,000
然后他会发现

1563
00:53:35,000 --> 00:53:37,000
tech 这套东西

1564
00:53:37,000 --> 00:53:38,000
这里面还有一个很核心的问题

1565
00:53:38,000 --> 00:53:39,000
就是说

1566
00:53:39,000 --> 00:53:42,000
它这套符号系统是

1567
00:53:42,000 --> 00:53:43,000
通过各种眼镜过来的

1568
00:53:43,000 --> 00:53:45,000
它并不成体系

1569
00:53:45,000 --> 00:53:47,000
也没有什么规则可言

1570
00:53:47,000 --> 00:53:49,000
然后它其实是各种不同流派

1571
00:53:49,000 --> 00:53:52,000
最终互相妥协融合的一个结果

1572
00:53:52,000 --> 00:53:52,000
对

1573
00:53:52,000 --> 00:53:54,000
就导致一个事实的问题

1574
00:53:54,000 --> 00:53:54,000
就是说

1575
00:53:54,000 --> 00:53:55,000
就不要说你

1576
00:53:55,000 --> 00:53:57,000
我们这种非数学专业人

1577
00:53:57,000 --> 00:53:58,000
你肯定看不懂

1578
00:53:58,000 --> 00:53:59,000
就是哪怕你学术的专业人

1579
00:53:59,000 --> 00:54:00,000
你还是要

1580
00:54:00,000 --> 00:54:01,000
你看到一篇特别

1581
00:54:01,000 --> 00:54:02,000
就是特别前沿的这种数学研究

1582
00:54:02,000 --> 00:54:03,000
你还是得去看

1583
00:54:03,000 --> 00:54:05,000
它在那边论文的引文里面

1584
00:54:05,000 --> 00:54:07,000
会先逐步定义

1585
00:54:07,000 --> 00:54:10,000
它用的这套专门讨论这个话题的

1586
00:54:10,000 --> 00:54:11,000
还得想一想

1587
00:54:11,000 --> 00:54:12,000
不好题怎么样子

1588
00:54:12,000 --> 00:54:14,000
就等于它还在不断的自我研发

1589
00:54:14,000 --> 00:54:15,000
就是就我们叫什么来的

1590
00:54:15,000 --> 00:54:16,000
DSL 对吧

1591
00:54:16,000 --> 00:54:18,000
don't make specific language

1592
00:54:18,000 --> 00:54:19,000
专用理由的语言

1593
00:54:19,000 --> 00:54:21,000
它还在不断的延续

1594
00:54:21,000 --> 00:54:23,000
而所有的这些都是没有一个

1595
00:54:23,000 --> 00:54:26,000
没有一个通用的一个标准的

1596
00:54:26,000 --> 00:54:26,000
对

1597
00:54:26,000 --> 00:54:29,000
而且数学符号内部自己也有流派嘛

1598
00:54:29,000 --> 00:54:30,000
就是什么

1599
00:54:30,000 --> 00:54:32,000
就哪怕我们上学的时候

1600
00:54:32,000 --> 00:54:33,000
也会学到说

1601
00:54:33,000 --> 00:54:35,000
比如说一个一个识量的标法

1602
00:54:35,000 --> 00:54:36,000
可能你

1603
00:54:36,000 --> 00:54:38,000
如果你有粗体的话

1604
00:54:38,000 --> 00:54:39,000
应该用粗体

1605
00:54:39,000 --> 00:54:40,000
然后没有粗体的话

1606
00:54:40,000 --> 00:54:42,000
你要再上来画一个什么箭头之类的

1607
00:54:42,000 --> 00:54:43,000
对

1608
00:54:43,000 --> 00:54:45,000
然后有些流派可能已经消失了

1609
00:54:45,000 --> 00:54:47,000
比如说我们现在使用的积分

1610
00:54:47,000 --> 00:54:49,000
虽然是号称牛顿发明的

1611
00:54:49,000 --> 00:54:50,000
但是我们使用的这个

1612
00:54:50,000 --> 00:54:52,000
大 S 的这样一个

1613
00:54:52,000 --> 00:54:56,000
积分符号实际上是莱布尼茲的标法

1614
00:54:56,000 --> 00:54:57,000
牛顿那个标法是非常复杂的

1615
00:54:57,000 --> 00:54:58,000
但即便如此

1616
00:54:58,000 --> 00:55:01,000
我们的那个微分还是有两种方式对吧

1617
00:55:01,000 --> 00:55:03,000
一个是什么

1618
00:55:03,000 --> 00:55:04,000
用那个字母

1619
00:55:04,000 --> 00:55:05,000
那个字母叫什么来着

1620
00:55:05,000 --> 00:55:07,000
seta

1621
00:55:07,000 --> 00:55:09,000
然后另外一种是用撇对吧

1622
00:55:09,000 --> 00:55:10,000
那个怎么念我不知道

1623
00:55:10,000 --> 00:55:11,000
我也忘了

1624
00:55:11,000 --> 00:55:12,000
我一直念 seta

1625
00:55:12,000 --> 00:55:13,000
好像是念 seta

1626
00:55:13,000 --> 00:55:13,000
我记得

1627
00:55:13,000 --> 00:55:15,000
但肯定不是 seta

1628
00:55:15,000 --> 00:55:16,000
那不是 seta

1629
00:55:16,000 --> 00:55:18,000
就像一个小 D 一样的东西

1630
00:55:18,000 --> 00:55:19,000
是不是

1631
00:55:19,000 --> 00:55:21,000
而且他们当时发明的符号的时候是手写的

1632
00:55:22,000 --> 00:55:23,000
肯定不是排印的吗

1633
00:55:23,000 --> 00:55:24,000
对

1634
00:55:24,000 --> 00:55:26,000
就是刚刚我吐槽的另外一件事情

1635
00:55:26,000 --> 00:55:28,000
就是现在我们排印上规定的

1636
00:55:28,000 --> 00:55:29,000
各种非常细节

1637
00:55:29,000 --> 00:55:32,000
或者说是为了美观也好的这种要求

1638
00:55:32,000 --> 00:55:34,000
其实你在手写上是复刻不出来的

1639
00:55:34,000 --> 00:55:34,000
你手写

1640
00:55:34,000 --> 00:55:35,000
但你可以写的时候

1641
00:55:35,000 --> 00:55:36,000
稍微正开一点

1642
00:55:36,000 --> 00:55:38,000
稍微写得直立一点

1643
00:55:38,000 --> 00:55:39,000
但你有写

1644
00:55:39,000 --> 00:55:40,000
还有各种弯

1645
00:55:40,000 --> 00:55:41,000
还有各种加花对吧

1646
00:55:41,000 --> 00:55:42,000
但其实你在手写里面

1647
00:55:42,000 --> 00:55:44,000
并没有那么多的工具可用

1648
00:55:44,000 --> 00:55:44,000
对吧

1649
00:55:44,000 --> 00:55:47,000
取决于你手写的整齐度

1650
00:55:47,000 --> 00:55:49,000
你就是在版书上面写得很快的话

1651
00:55:49,000 --> 00:55:52,000
其实也就很快的一笔带过去

1652
00:55:52,000 --> 00:55:54,000
它在手写过程中和你真的排印上

1653
00:55:54,000 --> 00:55:57,000
它存在一个跳跃的过程

1654
00:55:57,000 --> 00:55:58,000
我再插播一下

1655
00:55:58,000 --> 00:56:00,000
就是我刚才查到了

1656
00:56:00,000 --> 00:56:00,000
首先

1657
00:56:00,000 --> 00:56:02,000
求导是用 D

1658
00:56:02,000 --> 00:56:03,000
就是字母 D

1659
00:56:03,000 --> 00:56:05,000
DX 比 DY

1660
00:56:05,000 --> 00:56:07,000
然后我刚才说那个符号

1661
00:56:07,000 --> 00:56:08,000
或者说我们刚才手写找到的符号

1662
00:56:08,000 --> 00:56:10,000
不是一个希腊字母

1663
00:56:10,000 --> 00:56:12,000
而是它是偏微分的符号

1664
00:56:12,000 --> 00:56:13,000
它就是 D

1665
00:56:13,000 --> 00:56:15,000
偏微分符号 D

1666
00:56:15,000 --> 00:56:17,000
是全导数符号 D 的辨体

1667
00:56:17,000 --> 00:56:20,000
它是 D 的另外一种写法

1668
00:56:20,000 --> 00:56:20,000
就是对

1669
00:56:20,000 --> 00:56:23,000
一个草书的协体的 D

1670
00:56:23,000 --> 00:56:24,000
D 是什么

1671
00:56:24,000 --> 00:56:26,000
是 Diffrination 吗

1672
00:56:26,000 --> 00:56:28,000
Dirigative 应该是吧

1673
00:56:28,000 --> 00:56:29,000
Dirigative

1674
00:56:29,000 --> 00:56:29,000
对

1675
00:56:29,000 --> 00:56:30,000
导嘛

1676
00:56:30,000 --> 00:56:30,000
对

1677
00:56:30,000 --> 00:56:31,000
就是什么

1678
00:56:31,000 --> 00:56:31,000
忘到

1679
00:56:31,000 --> 00:56:34,000
早就忘光了

1680
00:56:34,000 --> 00:56:35,000
所以这个东西就是

1681
00:56:35,000 --> 00:56:37,000
他们在发明符号的时候

1682
00:56:37,000 --> 00:56:41,000
就是用当时他们觉得最方便的方式发明的

1683
00:56:41,000 --> 00:56:43,000
然后他们就肯定又没有想到

1684
00:56:43,000 --> 00:56:46,000
后面技术发展以后的问题

1685
00:56:46,000 --> 00:56:46,000
对吧

1686
00:56:46,000 --> 00:56:47,000
他们觉得手写

1687
00:56:47,000 --> 00:56:49,000
当时手写也很方便

1688
00:56:49,000 --> 00:56:51,000
它其实也不一定是为了方便

1689
00:56:51,000 --> 00:56:54,000
它是为了记录一个思

1690
00:56:54,000 --> 00:56:55,000
因为数学这东西很抽象

1691
00:56:55,000 --> 00:56:58,000
所以你有时候记不住那么多概念的时候

1692
00:56:58,000 --> 00:57:00,000
你要靠一个 notation

1693
00:57:00,000 --> 00:57:02,000
把它写在纸上

1694
00:57:02,000 --> 00:57:04,000
然后帮助你去做一些抽象的运算

1695
00:57:04,000 --> 00:57:06,000
就是你知道我们学什么求导

1696
00:57:06,000 --> 00:57:08,000
做变形的时候

1697
00:57:08,000 --> 00:57:10,000
都并没有去说考虑它的原理

1698
00:57:10,000 --> 00:57:11,000
对

1699
00:57:11,000 --> 00:57:12,000
它在手写的时候

1700
00:57:12,000 --> 00:57:13,000
它就想说

1701
00:57:13,000 --> 00:57:14,000
用另外一个方式的话

1702
00:57:14,000 --> 00:57:17,000
它就用一个草书的字体来写

1703
00:57:17,000 --> 00:57:19,000
可是后来想要排印的时候

1704
00:57:19,000 --> 00:57:20,000
我就麻烦了

1705
00:57:20,000 --> 00:57:22,000
排印的时候我就得必须要

1706
00:57:22,000 --> 00:57:24,000
用另外一个签字来做

1707
00:57:24,000 --> 00:57:26,000
这个像国际音标的也是一样的

1708
00:57:26,000 --> 00:57:27,000
国际音标大家知道

1709
00:57:27,000 --> 00:57:29,000
有各种各样莫名其妙的符号

1710
00:57:29,000 --> 00:57:31,000
可是当时已经有签印了

1711
00:57:31,000 --> 00:57:33,000
所以作为签印来讲

1712
00:57:33,000 --> 00:57:35,000
他们很方便是把字母倒过来

1713
00:57:35,000 --> 00:57:37,000
这个对于签印来讲是很方便的

1714
00:57:37,000 --> 00:57:38,000
所以比如什么

1715
00:57:38,000 --> 00:57:39,000
噁的发音的话

1716
00:57:39,000 --> 00:57:41,000
就是倒过来的小写字母义

1717
00:57:42,000 --> 00:57:42,000
对

1718
00:57:42,000 --> 00:57:43,000
Flipped 一下就好了

1719
00:57:43,000 --> 00:57:45,000
手写你要倒写也不方便

1720
00:57:45,000 --> 00:57:48,000
这个是在签字的时候是很方便

1721
00:57:48,000 --> 00:57:49,000
可是反过来在电脑里面

1722
00:57:49,000 --> 00:57:51,000
你要输的那个评论就超难的

1723
00:57:51,000 --> 00:57:53,000
直到现在你要输都很难输嘛

1724
00:57:53,000 --> 00:57:53,000
对吧

1725
00:57:53,000 --> 00:57:55,000
国际音标这套东西对吧

1726
00:57:55,000 --> 00:57:56,000
是

1727
00:57:56,000 --> 00:57:59,000
那其实泰和他在解决数学公式的时候

1728
00:57:59,000 --> 00:58:00,000
其实也面临着这个问题

1729
00:58:00,000 --> 00:58:03,000
就是说他要输入那些各种各样的

1730
00:58:03,000 --> 00:58:05,000
这个奇怪的符号的时候

1731
00:58:05,000 --> 00:58:06,000
他都是用一个命令的

1732
00:58:06,000 --> 00:58:09,000
就是他要现行化成一个这个键盘上

1733
00:58:10,000 --> 00:58:11,000
就是 Ask

1734
00:58:11,000 --> 00:58:15,000
就是什么 Corty 键盘上存在的这些按键

1735
00:58:15,000 --> 00:58:17,000
对于那个把它用一串命令

1736
00:58:17,000 --> 00:58:18,000
只带某一个符号嘛

1737
00:58:18,000 --> 00:58:20,000
就跟我们现在转意一样嘛对吧

1738
00:58:20,000 --> 00:58:21,000
是的

1739
00:58:24,000 --> 00:58:27,000
就我觉得泰和面临的问题跟 HML 所解决的问题

1740
00:58:27,000 --> 00:58:28,000
是这样一样的

1741
00:58:28,000 --> 00:58:30,000
当然 HML 出现要比泰和玩很多

1742
00:58:30,000 --> 00:58:33,000
或者是 XML 出现要比泰和玩很多

1743
00:58:33,000 --> 00:58:35,000
但他们面临的问题和解决问题的方式

1744
00:58:35,000 --> 00:58:36,000
实际上是相似的

1745
00:58:36,000 --> 00:58:39,000
如果泰和可能因为他出现的比较早

1746
00:58:39,000 --> 00:58:43,000
所以他没有那么考虑周全

1747
00:58:43,000 --> 00:58:44,000
在这里其实有个很好的问题

1748
00:58:44,000 --> 00:58:47,000
就是说到底形式和内容是不是能够分离的

1749
00:58:47,000 --> 00:58:49,000
我觉得泰和或者是拉泰和也好

1750
00:58:49,000 --> 00:58:52,000
他证明的这件事情是实现不了的

1751
00:58:52,000 --> 00:58:57,000
就是说 HTML 和 CSS 一个写语意

1752
00:58:57,000 --> 00:58:58,000
一个写样式

1753
00:58:58,000 --> 00:59:00,000
这件事情只是一个美好的愿望而已

1754
00:59:00,000 --> 00:59:03,000
因为真正你落实到具体的那些

1755
00:59:03,000 --> 00:59:05,000
非标准化文档的那些细节的时候

1756
00:59:05,000 --> 00:59:07,000
你就发现你没有这种形式上那种分离的细节了

1757
00:59:07,000 --> 00:59:09,000
比如说就刚才这个情况嘛

1758
00:59:09,000 --> 00:59:10,000
这个 SUM 对吧

1759
00:59:10,000 --> 00:59:13,000
然后从 1 到 100 的这个这个这个级分

1760
00:59:13,000 --> 00:59:14,000
级到多少

1761
00:59:14,000 --> 00:59:16,000
然后再去个什么样的技术

1762
00:59:16,000 --> 00:59:19,000
你如果要去用这个完全形式和内容分开的

1763
00:59:19,000 --> 00:59:20,000
东西去描述他的话

1764
00:59:20,000 --> 00:59:21,000
泰和其实是不支持的

1765
00:59:21,000 --> 00:59:22,000
泰和也是不支持的

1766
00:59:22,000 --> 00:59:24,000
他从来没有支持过这件事情

1767
00:59:24,000 --> 00:59:27,000
最终你还是要去描述他的相对位置

1768
00:59:27,000 --> 00:59:29,000
一定要支持语意的话

1769
00:59:29,000 --> 00:59:31,000
可能只能用 MASSML 之类的

1770
00:59:31,000 --> 00:59:35,000
MASSMARCOPLANGUAGE 或者 MASSMATIC

1771
00:59:35,000 --> 00:59:35,000
对呀

1772
00:59:35,000 --> 00:59:38,000
所以就是刚才你念那一段的对这个的一个指责嘛

1773
00:59:38,000 --> 00:59:42,000
就是说你除非有一套完整的这种语言去指

1774
00:59:42,000 --> 00:59:43,000
是描述一个结构

1775
00:59:43,000 --> 00:59:45,000
就本质上泰和也好

1776
00:59:45,000 --> 00:59:45,000
拉泰和也好

1777
00:59:45,000 --> 00:59:47,000
他去描述一个公式的时候

1778
00:59:47,000 --> 00:59:50,000
他并不单纯的是描述那公式的一个结构

1779
00:59:50,000 --> 00:59:53,000
他其实描述那公式长什么样子

1780
00:59:53,000 --> 00:59:54,000
大概长什么样子

1781
00:59:54,000 --> 00:59:56,000
大致结构是如何

1782
00:59:56,000 --> 00:59:58,000
你并不能从就什么意思

1783
00:59:58,000 --> 01:00:01,000
如果说你能够永远一个用这个拉泰去描述一个结构的话

1784
01:00:01,000 --> 01:00:06,000
理论上你是可以去 PARS 去解析

1785
01:00:06,000 --> 01:00:09,000
他的结构得到你想要的那个公式的一些

1786
01:00:09,000 --> 01:00:10,000
比如说变形和运算

1787
01:00:10,000 --> 01:00:11,000
他是可以自动化的对吧

1788
01:00:11,000 --> 01:00:13,000
但在这件事情在泰和里面是无法实现的

1789
01:00:13,000 --> 01:00:17,000
因为他的形式和内容在微观的层面上是融合在一起的

1790
01:00:17,000 --> 01:00:19,000
你不要对泰和要求太高

1791
01:00:19,000 --> 01:00:22,000
泰和他原来一开始他就是一个排版引擎而已

1792
01:00:22,000 --> 01:00:25,000
他跟结构一点关系都没有

1793
01:00:25,000 --> 01:00:26,000
我知道

1794
01:00:26,000 --> 01:00:27,000
刚才不是在讨论

1795
01:00:27,000 --> 01:00:33,000
就是说拉泰在说这个内容和形式的分离是对应于 HTML 和 CSS 这个关系

1796
01:00:33,000 --> 01:00:37,000
但这个其实我觉得在这里面其实并没有很好地体现出这一点

1797
01:00:37,000 --> 01:00:39,000
他只是有这种倾向对吧

1798
01:00:39,000 --> 01:00:44,000
但其实在实现层面上他并没有非常彻底的去观测这件事情

1799
01:00:44,000 --> 01:00:47,000
Eric 说我们不要去指责拉泰和这件事情

1800
01:00:47,000 --> 01:00:49,000
但问题我们现在面临一个问题就是

1801
01:00:49,000 --> 01:00:51,000
泰和是业界标准

1802
01:00:51,000 --> 01:00:53,000
如果我能作为一个魔鬼代言人

1803
01:00:53,000 --> 01:00:58,000
我站到刚才那篇批驳泰和的文章的观点上来说一句话

1804
01:00:58,000 --> 01:01:01,000
泰和他实际上的确就是一个业界独留这么一个状况

1805
01:01:02,000 --> 01:01:04,000
你用泰和写出来的公式

1806
01:01:04,000 --> 01:01:11,000
面临一个问题就是他没有办法被很轻易的被异象 pars 对吧

1807
01:01:11,000 --> 01:01:18,000
而且尤其是现在比如说知乎你在知乎片文章里面生成一个 SVG 格式的公式

1808
01:01:18,000 --> 01:01:21,000
这个 SVG 格式描述的公式

1809
01:01:21,000 --> 01:01:23,000
原原本本的就是一个公式怎么划出来的

1810
01:01:23,000 --> 01:01:26,000
它跟这个公式的语意毫无关联对吧

1811
01:01:26,000 --> 01:01:27,000
毫无关联对

1812
01:01:27,000 --> 01:01:29,000
我们可不可以说泰和的存在

1813
01:01:29,000 --> 01:01:34,000
这也导致了整个数学的语意表示在互联网上的存在

1814
01:01:34,000 --> 01:01:36,000
处于一个知礼破碎的

1815
01:01:36,000 --> 01:01:38,000
我觉得也不能这么指责

1816
01:01:38,000 --> 01:01:40,000
这个是一个结果

1817
01:01:40,000 --> 01:01:41,000
但是它并不是核心原因

1818
01:01:41,000 --> 01:01:42,000
是的

1819
01:01:42,000 --> 01:01:44,000
但是我的意思是说

1820
01:01:44,000 --> 01:01:47,000
你不能说泰和就因此不该被指责了

1821
01:01:47,000 --> 01:01:49,000
因为它作为一个事实标准

1822
01:01:49,000 --> 01:01:52,000
它带来了现在业界的这么一个现况对吧

1823
01:01:52,000 --> 01:01:54,000
我明白你说的意思

1824
01:01:54,000 --> 01:01:55,000
我想表达的点是说

1825
01:01:55,000 --> 01:01:58,000
这件事情你换任何一个软件都是不可能实现的

1826
01:01:59,000 --> 01:02:02,000
就是那个 Mess Macro Language 也没有实现这一点

1827
01:02:02,000 --> 01:02:05,000
就是因为这个问题出在于

1828
01:02:05,000 --> 01:02:07,000
那个底层我们要表示的那套体系

1829
01:02:07,000 --> 01:02:10,000
那套数学符号本身就不支持这一点

1830
01:02:10,000 --> 01:02:12,000
它的结构不是那么的清晰明确的

1831
01:02:12,000 --> 01:02:14,000
这是数学符号本身的问题

1832
01:02:14,000 --> 01:02:17,000
而不是描述它或者去给它排版了

1833
01:02:17,000 --> 01:02:19,000
其他的这些引擎的问题

1834
01:02:20,000 --> 01:02:23,000
然后这个讨论就没有结果了

1835
01:02:24,000 --> 01:02:25,000
那我们再说什么

1836
01:02:26,000 --> 01:02:27,000
这是不肯定有结果的

1837
01:02:27,000 --> 01:02:30,000
因为我们不是可以左右这个历史进程的人

1838
01:02:30,000 --> 01:02:32,000
我们只是作为历史的批判者

1839
01:02:33,000 --> 01:02:35,000
对滚滚长江东势水对吧

1840
01:02:35,000 --> 01:02:38,000
我们只是两个鱼桥在这边喝酒

1841
01:02:38,000 --> 01:02:39,000
然后讨论这些事情

1842
01:02:39,000 --> 01:02:40,000
对

1843
01:02:40,000 --> 01:02:42,000
所以我觉得还是回到之前那个评书里面

1844
01:02:42,000 --> 01:02:45,000
我觉得目前这么去概括它

1845
01:02:45,000 --> 01:02:48,000
这个是比较中肯的一个评价相对来说

1846
01:02:48,000 --> 01:02:52,000
我觉得就是说泰和只是一个底层的

1847
01:02:52,000 --> 01:02:55,000
不涉及说内容还是形式的这么一个排版引擎

1848
01:02:55,000 --> 01:02:57,000
对 排版引擎本质上是展现的是一个形式

1849
01:02:57,000 --> 01:02:58,000
对不对

1850
01:02:58,000 --> 01:02:59,000
它并不是体现的说要内容怎么

1851
01:02:59,000 --> 01:03:03,000
你不可能去通过泰和的圆满去读懂这本书掌

1852
01:03:03,000 --> 01:03:06,000
你还是要看它最终 compiled 出来的那本书掌什么样子

1853
01:03:06,000 --> 01:03:10,000
然后 landport 在上面做的一个重大的一个贡献

1854
01:03:10,000 --> 01:03:15,000
是说在一个无结构的体系上面引入了

1855
01:03:16,000 --> 01:03:18,000
macro 的这么一个宏观的一个结构

1856
01:03:18,000 --> 01:03:20,000
实现了章节对吧

1857
01:03:20,000 --> 01:03:21,000
实现了 section

1858
01:03:21,000 --> 01:03:23,000
然后实现了数学公式的一些

1859
01:03:23,000 --> 01:03:26,000
实现了包管理实现了模换化

1860
01:03:26,000 --> 01:03:26,000
但是呢

1861
01:03:26,000 --> 01:03:28,000
具体在非常微观的层面上

1862
01:03:28,000 --> 01:03:31,000
它肯定还是无法完全的结构化的

1863
01:03:31,000 --> 01:03:33,000
就好像我们现在说

1864
01:03:33,000 --> 01:03:36,000
哪怕是说当年提 HTML 和 CS 的

1865
01:03:36,000 --> 01:03:38,000
这个形式的那种分立提到现在

1866
01:03:38,000 --> 01:03:39,000
我们现在去看 web

1867
01:03:39,000 --> 01:03:43,000
它这两个事情还是互相连结在一起的

1868
01:03:43,000 --> 01:03:45,000
你这到微观层面上还是无法分开

1869
01:03:45,000 --> 01:03:50,000
所以我觉得这里面也就是我们的技术理想和

1870
01:03:50,000 --> 01:03:53,000
客观现实之间的妥协点就是这样子

1871
01:03:54,000 --> 01:04:00,000
我很好奇就是你们对 w 3 c massML

1872
01:04:00,000 --> 01:04:03,000
什么有什么做和评论

1873
01:04:03,000 --> 01:04:04,000
xml 就像暴力一样

1874
01:04:04,000 --> 01:04:05,000
你如果没有解决问题

1875
01:04:05,000 --> 01:04:07,000
你就用更多的暴力

1876
01:04:07,000 --> 01:04:08,000
大概这个感觉

1877
01:04:08,000 --> 01:04:10,000
就是 massML

1878
01:04:10,000 --> 01:04:12,000
本身上就是用 xml 来

1879
01:04:12,000 --> 01:04:13,000
就是叠传家屋嘛

1880
01:04:13,000 --> 01:04:15,000
就不停的加东西嘛

1881
01:04:15,000 --> 01:04:16,000
啰啰嗦嗦的

1882
01:04:16,000 --> 01:04:17,000
xml 就是这样

1883
01:04:17,000 --> 01:04:20,000
xml 作为当时的一个银蛋

1884
01:04:20,000 --> 01:04:25,000
90 年代的人觉得好像你用原数据去描述数据

1885
01:04:25,000 --> 01:04:29,000
就可以得到就可以让数据更好了被处理

1886
01:04:29,000 --> 01:04:31,000
但是人们会发现原数据本身也是数据

1887
01:04:31,000 --> 01:04:34,000
然后你需要给原数据加上更多的原数据

1888
01:04:34,000 --> 01:04:36,000
你自己说说我穷进也

1889
01:04:36,000 --> 01:04:39,000
但我觉得 massML 虽然是一个非常复杂的文档

1890
01:04:39,000 --> 01:04:43,000
它本质上也不是让人来写的和让人来读的

1891
01:04:43,000 --> 01:04:45,000
它的存在意义就像 xml 一样

1892
01:04:45,000 --> 01:04:46,000
它是为了保存信息

1893
01:04:46,000 --> 01:04:48,000
然后给信息加上原信息

1894
01:04:48,000 --> 01:04:50,000
虽然它的手段非常的拙劣

1895
01:04:50,000 --> 01:04:52,000
或者说非常的啰嗦

1896
01:04:52,000 --> 01:04:54,000
但是它还是起到它的应有的目的

1897
01:04:54,000 --> 01:04:56,000
massML 其实你不用多看

1898
01:04:56,000 --> 01:05:00,000
massML 就是 html for 公式

1899
01:05:00,000 --> 01:05:01,000
就大概这种感觉

1900
01:05:01,000 --> 01:05:06,000
就是它你可以把所有的符号用监控号扩起来

1901
01:05:06,000 --> 01:05:11,000
然后这个监控号里面的文本就是告诉你这个符号是干嘛的

1902
01:05:11,000 --> 01:05:16,000
它维系了一套数学的公式的语意

1903
01:05:17,000 --> 01:05:23,000
而且它基本上没有涉及说这个语意应该是怎么用什么样的方法来表示的

1904
01:05:23,000 --> 01:05:29,000
所以理论上你可以用一套类似于 css 的东西来描述一个 massML

1905
01:05:29,000 --> 01:05:34,000
用 massML 来描述的一个数学公式

1906
01:05:34,000 --> 01:05:42,000
而 massML 本身只负责描述这个数学公式里面每一个元件之间的关系

1907
01:05:42,000 --> 01:05:43,000
大概这样

1908
01:05:43,000 --> 01:05:46,000
它的最大问题就是你要编辑它或者是你要生成它

1909
01:05:46,000 --> 01:05:47,000
是非常麻烦的

1910
01:05:47,000 --> 01:05:49,000
但是你读起来其实还是比较简单

1911
01:05:49,000 --> 01:05:52,000
massML 这名字就很难念

1912
01:05:52,000 --> 01:05:54,000
massMatic Markov Language

1913
01:05:54,000 --> 01:06:03,000
这个东西它本质上就是把 Tag 的理想用 XML 这个标记语言重新实现也变了

1914
01:06:03,000 --> 01:06:07,000
但其实它们两个都没有实现刚才我说的那一点了

1915
01:06:07,000 --> 01:06:07,000
不是

1916
01:06:07,000 --> 01:06:09,000
我觉得这个还是差别蛮大的

1917
01:06:09,000 --> 01:06:15,000
因为我们介绍几个 Tag 的最比较基本的命令

1918
01:06:15,000 --> 01:06:20,000
就像 HML 有什么 EM 有什么 strong 一样

1919
01:06:20,000 --> 01:06:27,000
Tag 是有比如说 textBF boldface 或者是 textIT italic 诸如此类的

1920
01:06:27,000 --> 01:06:29,000
就是你说 textBF 描述的是什么

1921
01:06:29,000 --> 01:06:31,000
描述的是它的风格

1922
01:06:31,000 --> 01:06:35,000
就是我说接下来这个部分要用粗体来描述

1923
01:06:35,000 --> 01:06:37,000
可是这个粗体的意义是什么

1924
01:06:38,000 --> 01:06:41,000
Tag 跟这个东西的实际语义是毫无关联的

1925
01:06:41,000 --> 01:06:46,000
但是 massML 这边就它的每个标签都是跟这个语义相关的

1926
01:06:46,000 --> 01:06:49,000
你不能只说这个东西需要用粗体

1927
01:06:49,000 --> 01:06:53,000
你必须在 massML 里面描述这个粗体标出来的东西是什么

1928
01:06:53,000 --> 01:06:56,000
就是粗体这个概念在当里面不存在

1929
01:06:56,000 --> 01:06:58,000
它实际上在理念上是要比它

1930
01:06:58,000 --> 01:07:01,000
它其实要表述的是这个数学结构怎么回事

1931
01:07:01,000 --> 01:07:02,000
就是它表述的是

1932
01:07:02,000 --> 01:07:04,000
这样我开始提出了一个第一个问题

1933
01:07:04,000 --> 01:07:08,000
就是数学公式的那些各种 notation 的结构

1934
01:07:08,000 --> 01:07:10,000
它想用一个通用的方法把它描述出来

1935
01:07:11,000 --> 01:07:14,000
其实这个东西本来就是一个很困难的事情

1936
01:07:14,000 --> 01:07:16,000
就几乎不可能完成的用

1937
01:07:16,000 --> 01:07:19,000
所以它本身的复杂性是来源于数学公式本身的复杂性

1938
01:07:20,000 --> 01:07:23,000
但它还是描述出了数学公式之间的关系的

1939
01:07:23,000 --> 01:07:25,000
就好像 list 比如说 list

1940
01:07:25,000 --> 01:07:28,000
你用 list 可以描述出任何足够复杂的

1941
01:07:28,000 --> 01:07:31,000
就任何复杂的数学公式都可以用 list 描述出来

1942
01:07:31,000 --> 01:07:35,000
只不过 list 的描述你可能是非常反人类的

1943
01:07:35,000 --> 01:07:36,000
对吧

1944
01:07:36,000 --> 01:07:37,000
但它是可以的

1945
01:07:37,000 --> 01:07:39,000
maxml 实际上做到的事情跟 list 差不多

1946
01:07:39,000 --> 01:07:40,000
对

1947
01:07:40,000 --> 01:07:44,000
就是引入一个就是数状结构去描述

1948
01:07:44,000 --> 01:07:46,000
去描述一个数学的 notation 把它拆解出来

1949
01:07:47,000 --> 01:07:47,000
对

1950
01:07:48,000 --> 01:07:49,000
那这么比的话

1951
01:07:49,000 --> 01:07:51,000
它其实应该说是

1952
01:07:51,000 --> 01:07:53,000
应该是它选择的载体不好

1953
01:07:54,000 --> 01:07:57,000
这个 maxml 这个坑实在太深了

1954
01:07:57,000 --> 01:08:01,000
所以我们接下来要往什么地方讲

1955
01:08:01,000 --> 01:08:03,000
给大家说一下各种环境下的 teth

1956
01:08:03,000 --> 01:08:04,000
OK

1957
01:08:04,000 --> 01:08:05,000
对

1958
01:08:05,000 --> 01:08:06,000
到底有多少种叉叉

1959
01:08:06,000 --> 01:08:07,000
teth

1960
01:08:07,000 --> 01:08:09,000
回乡字回字有几种写法

1961
01:08:09,000 --> 01:08:10,000
妈就夺了

1962
01:08:10,000 --> 01:08:10,000
我跟你说

1963
01:08:10,000 --> 01:08:11,000
ok

1964
01:08:11,000 --> 01:08:13,000
假如你听我们的节目

1965
01:08:13,000 --> 01:08:14,000
然后对 teth 产生了兴趣

1966
01:08:14,000 --> 01:08:17,000
那么首先最重要的一件事情

1967
01:08:17,000 --> 01:08:18,000
就是获得 teth

1968
01:08:19,000 --> 01:08:20,000
会有这样的人吗

1969
01:08:21,000 --> 01:08:22,000
为什么每次都要拆穿我

1970
01:08:22,000 --> 01:08:24,000
首先你要获得哪一个 teth

1971
01:08:24,000 --> 01:08:27,000
或者说假如你是一个即将要写论文的人

1972
01:08:27,000 --> 01:08:30,000
然后你想要尝试一下这个传说中

1973
01:08:30,000 --> 01:08:32,000
宗世纪成全使用的解决方案

1974
01:08:32,000 --> 01:08:34,000
那么你需要获得一个

1975
01:08:34,000 --> 01:08:38,000
你所使用的操作讯本上的 teth 环境

1976
01:08:38,000 --> 01:08:41,000
因为在座的四位都是 max 用户

1977
01:08:41,000 --> 01:08:43,000
那我们要先从 max 说起吧

1978
01:08:43,000 --> 01:08:46,000
就我当时用的是就叫 maxteth

1979
01:08:46,000 --> 01:08:47,000
那个很老了

1980
01:08:47,000 --> 01:08:49,000
但是我要是没记错的话

1981
01:08:49,000 --> 01:08:52,000
maxteth 是现在已经停止开发了

1982
01:08:52,000 --> 01:08:52,000
嗯

1983
01:08:52,000 --> 01:08:53,000
没有

1984
01:08:53,000 --> 01:08:54,000
还有更新版的

1985
01:08:54,000 --> 01:08:57,000
你现在去搜 maxteth

1986
01:08:57,000 --> 01:09:00,000
就是 mac.tex 这个东西

1987
01:09:00,000 --> 01:09:03,000
它会让你去到这个

1988
01:09:03,000 --> 01:09:07,000
一个 maxteth 2020 的发行版

1989
01:09:07,000 --> 01:09:07,000
对

1990
01:09:07,000 --> 01:09:08,000
说到这个就要先解释一下

1991
01:09:08,000 --> 01:09:10,000
什么是发行版

1992
01:09:10,000 --> 01:09:12,000
本质上 maxteth 是做了一个事

1993
01:09:12,000 --> 01:09:14,000
就是它把常用的那些工具包

1994
01:09:14,000 --> 01:09:16,000
都给你打包在一起

1995
01:09:16,000 --> 01:09:18,000
然后你可以一次去下载玩安装好

1996
01:09:18,000 --> 01:09:19,000
就可以开始用了

1997
01:09:19,000 --> 01:09:22,000
你不用考虑今天需要到底你哪些组件

1998
01:09:22,000 --> 01:09:24,000
然后组件相互作用是什么样子

1999
01:09:24,000 --> 01:09:26,000
你可以大致略过这个问题

2000
01:09:26,000 --> 01:09:28,000
就有点像 linux 是一样对吧

2001
01:09:28,000 --> 01:09:29,000
我们现在

2002
01:09:29,000 --> 01:09:30,000
我说你要去装一个 linux

2003
01:09:30,000 --> 01:09:30,000
对

2004
01:09:30,000 --> 01:09:31,000
你先选一个发行版

2005
01:09:31,000 --> 01:09:32,000
对吧

2006
01:09:32,000 --> 01:09:33,000
你要选什么

2007
01:09:33,000 --> 01:09:33,000
vintual 啊

2008
01:09:33,000 --> 01:09:35,000
feodor 啊之类的对吧

2009
01:09:35,000 --> 01:09:37,000
你要他们把那些打包的工作给你做好了

2010
01:09:37,000 --> 01:09:39,000
你去用一个现成的版本就可以了

2011
01:09:39,000 --> 01:09:42,000
那 max 上面可能还是用这个比较简单一些

2012
01:09:42,000 --> 01:09:43,000
呃

2013
01:09:43,000 --> 01:09:44,000
然后如果你在温度市场的话

2014
01:09:44,000 --> 01:09:47,000
应该是下载

2015
01:09:47,000 --> 01:09:49,000
就我说的应该是 mctech

2016
01:09:49,000 --> 01:09:52,000
就是 miktex

2017
01:09:52,000 --> 01:09:53,000
这个我没用过

2018
01:09:53,000 --> 01:09:54,000
就这个我不知道现在还是不是

2019
01:09:54,000 --> 01:09:56,000
我上本壳的时候

2020
01:09:56,000 --> 01:09:59,000
当时用过一个 windows 写写那个系统

2021
01:09:59,000 --> 01:10:01,000
然后装的确实是这个系统

2022
01:10:01,000 --> 01:10:03,000
就是 mik mic

2023
01:10:03,000 --> 01:10:04,000
mik

2024
01:10:04,000 --> 01:10:05,000
太好用吗

2025
01:10:05,000 --> 01:10:07,000
你也没有什么其他好选的

2026
01:10:07,000 --> 01:10:10,000
你就你只存在说能用和不能用的区别

2027
01:10:10,000 --> 01:10:12,000
其他就你都你都有一个新手

2028
01:10:12,000 --> 01:10:13,000
你可以本身属于不能用的状态

2029
01:10:13,000 --> 01:10:14,000
就不用考虑这个问题了

2030
01:10:14,000 --> 01:10:15,000
你知道吗

2031
01:10:17,000 --> 01:10:18,000
ok

2032
01:10:18,000 --> 01:10:19,000
那如果你用 linux 的话呢

2033
01:10:19,000 --> 01:10:22,000
你需要自己手写一个太黑的这么一个系统

2034
01:10:22,000 --> 01:10:24,000
linux 市场没有 tech 的包

2035
01:10:24,000 --> 01:10:26,000
所以就是比较尴尬的一件事情

2036
01:10:26,000 --> 01:10:27,000
应该有的吧

2037
01:10:27,000 --> 01:10:29,000
什么 apt 各种各

2038
01:10:29,000 --> 01:10:31,000
我在我在胡说

2039
01:10:33,000 --> 01:10:36,000
就 linux 市场的 tech 实际上是最好的一个

2040
01:10:36,000 --> 01:10:38,000
最好的一个这次标设

2041
01:10:38,000 --> 01:10:39,000
tech live

2042
01:10:39,000 --> 01:10:42,000
这个东西应该是目前最积极维护

2043
01:10:42,000 --> 01:10:44,000
然后也是用户技术最大的一个群体

2044
01:10:44,000 --> 01:10:47,000
也是我印象中的体积最庞大的

2045
01:10:47,000 --> 01:10:48,000
他当时

2046
01:10:48,000 --> 01:10:48,000
我记得是在

2047
01:10:50,000 --> 01:10:51,000
多少十几年前

2048
01:10:51,000 --> 01:10:52,000
那个时候

2049
01:10:52,000 --> 01:10:53,000
互联网状很想象

2050
01:10:53,000 --> 01:10:55,000
他的一个完整的转包都已经小

2051
01:10:55,000 --> 01:10:56,000
要小十个 gb 了

2052
01:10:56,000 --> 01:10:57,000
你想象一下

2053
01:10:57,000 --> 01:10:59,000
但是不管

2054
01:10:59,000 --> 01:11:02,000
不管你在哪个平台上用哪个发行版吧

2055
01:11:02,000 --> 01:11:04,000
你的工作流程基本上是一样的

2056
01:11:04,000 --> 01:11:06,000
就是你要先写一个

2057
01:11:06,000 --> 01:11:08,000
成文本的 tech 文件

2058
01:11:08,000 --> 01:11:09,000
然后用你的

2059
01:11:10,000 --> 01:11:12,000
发行版所提供给你的

2060
01:11:12,000 --> 01:11:14,000
通常是一个叫做

2061
01:11:14,000 --> 01:11:15,000
啦太或者是 pdf

2062
01:11:15,000 --> 01:11:18,000
啦太的程序去处理你写好的这个文件

2063
01:11:18,000 --> 01:11:20,000
然后他会帮你生成出一个 pdf 文件

2064
01:11:20,000 --> 01:11:22,000
但这里面有很多坑

2065
01:11:22,000 --> 01:11:23,000
就是虽然我刚才讲了这个过程

2066
01:11:23,000 --> 01:11:24,000
听起来轻薄淡写

2067
01:11:24,000 --> 01:11:25,000
但实际上这里面有很多很多坑

2068
01:11:25,000 --> 01:11:26,000
比如说

2069
01:11:27,000 --> 01:11:29,000
你写的东西要不要支持中文

2070
01:11:29,000 --> 01:11:31,000
是不是要支持 cjk

2071
01:11:32,000 --> 01:11:34,000
然后你写的东西

2072
01:11:34,000 --> 01:11:36,000
是不是要支持插图

2073
01:11:36,000 --> 01:11:38,000
就是除了刚才

2074
01:11:38,000 --> 01:11:39,000
realtalk 提到的那个 tickz 之外

2075
01:11:40,000 --> 01:11:42,000
你要不要支持其他格式的插图

2076
01:11:42,000 --> 01:11:43,000
如果你要的话

2077
01:11:43,000 --> 01:11:44,000
你必须做出选择

2078
01:11:44,000 --> 01:11:47,000
然后你必须注意你的插图是

2079
01:11:47,000 --> 01:11:48,000
是怎么生成的

2080
01:11:48,000 --> 01:11:50,000
以什么格式来提供给他

2081
01:11:50,000 --> 01:11:52,000
然后你可能会

2082
01:11:52,000 --> 01:11:54,000
就你的领域需要用到一些

2083
01:11:54,000 --> 01:11:56,000
你的领域才会使用的包

2084
01:11:56,000 --> 01:11:58,000
如果你领域比较大众的话

2085
01:11:58,000 --> 01:11:59,000
这个包可能是有很多人维护的

2086
01:11:59,000 --> 01:12:01,000
如果你的领域比较小众的话

2087
01:12:01,000 --> 01:12:01,000
那么很有可能

2088
01:12:01,000 --> 01:12:02,000
你必须自己

2089
01:12:02,000 --> 01:12:04,000
亲自去解决一些问题

2090
01:12:04,000 --> 01:12:06,000
太阳用户群里面有一句话说

2091
01:12:06,000 --> 01:12:09,000
你 you have to know everything to do anything

2092
01:12:10,000 --> 01:12:11,000
这个我深有体会

2093
01:12:11,000 --> 01:12:13,000
你面临着的是一个非常

2094
01:12:13,000 --> 01:12:16,000
陡峭的学习曲线必须说

2095
01:12:16,000 --> 01:12:18,000
然后如果你的论文的时间比较赶的话

2096
01:12:18,000 --> 01:12:19,000
那我劝你还是

2097
01:12:21,000 --> 01:12:22,000
另学一条别的图线

2098
01:12:22,000 --> 01:12:22,000
要模仿啊

2099
01:12:23,000 --> 01:12:24,000
对 我举个例子

2100
01:12:24,000 --> 01:12:25,000
大家可以体会一下

2101
01:12:25,000 --> 01:12:27,000
就说如果说我们

2102
01:12:27,000 --> 01:12:29,000
我们说我们节目也很多是

2103
01:12:29,000 --> 01:12:30,000
程序员听众

2104
01:12:30,000 --> 01:12:30,000
我们当时说

2105
01:12:31,000 --> 01:12:33,000
学习 vim 这个编辑是一个

2106
01:12:33,000 --> 01:12:34,000
非常陡峭的学习曲线

2107
01:12:34,000 --> 01:12:37,000
然后但你取完之后是非常好爽的

2108
01:12:37,000 --> 01:12:39,000
那么学习太狠

2109
01:12:39,000 --> 01:12:40,000
或者任何合版本的上手来讲

2110
01:12:40,000 --> 01:12:42,000
它比那个曲线陡峭多

2111
01:12:43,000 --> 01:12:45,000
你本质上是要学习你们全新的

2112
01:12:45,000 --> 01:12:47,000
你也不知道什么原理

2113
01:12:47,000 --> 01:12:48,000
并且它的整个

2114
01:12:49,000 --> 01:12:52,000
它的整个设计理念和设计思维

2115
01:12:52,000 --> 01:12:53,000
都是来自于 50 年前的

2116
01:12:53,000 --> 01:12:55,000
一套编程环境

2117
01:12:55,000 --> 01:12:56,000
本质上你才做这个事情

2118
01:12:57,000 --> 01:12:58,000
其实最终就说

2119
01:12:58,000 --> 01:13:01,000
自谈自串的听众朋友们

2120
01:13:02,000 --> 01:13:03,000
很有可能是

2121
01:13:03,000 --> 01:13:06,000
太狠的目标用户群

2122
01:13:06,000 --> 01:13:07,000
这完全仇和

2123
01:13:07,000 --> 01:13:10,000
既是程序员又要知道怎么排版

2124
01:13:10,000 --> 01:13:12,000
所以中私的这个封装做的

2125
01:13:12,000 --> 01:13:13,000
不是特别好

2126
01:13:13,000 --> 01:13:14,000
露出的东西太多了

2127
01:13:15,000 --> 01:13:18,000
而且本质上你还得会排版

2128
01:13:18,000 --> 01:13:19,000
而且事实上我也知道

2129
01:13:19,000 --> 01:13:21,000
我们听众里面又

2130
01:13:21,000 --> 01:13:24,000
就是同时加入我们两个群的听众

2131
01:13:24,000 --> 01:13:25,000
有太狠高手

2132
01:13:26,000 --> 01:13:27,000
的确是有的

2133
01:13:27,000 --> 01:13:28,000
我们之前

2134
01:13:28,000 --> 01:13:30,000
我觉得好像是

2135
01:13:30,000 --> 01:13:31,000
我们有一个朋友

2136
01:13:31,000 --> 01:13:33,000
还做过这个太狠相关的开发

2137
01:13:33,000 --> 01:13:35,000
就是之前请过的江江

2138
01:13:35,000 --> 01:13:38,000
所以这些什么太狠高手

2139
01:13:38,000 --> 01:13:40,000
听完这一期节目是会被气得吐起吗

2140
01:13:40,000 --> 01:13:42,000
我觉得他们也能够理解吧

2141
01:13:42,000 --> 01:13:43,000
毕竟这是个

2142
01:13:43,000 --> 01:13:44,000
我们要在短短

2143
01:13:44,000 --> 01:13:47,000
一两个小时里面解释清楚这件事情

2144
01:13:47,000 --> 01:13:48,000
本身就是一个不可能完成的任务

2145
01:13:50,000 --> 01:13:51,000
所以现在太狠

2146
01:13:51,000 --> 01:13:53,000
是不是在 Mac 上也是可以用了

2147
01:13:53,000 --> 01:13:56,000
它好像已经变成一个跨平台的

2148
01:13:56,000 --> 01:13:56,000
应该是可以的

2149
01:13:56,000 --> 01:13:57,000
应该是可以的

2150
01:13:57,000 --> 01:13:57,000
对

2151
01:13:58,000 --> 01:14:01,000
那个 Miktech 也可以在跨平台用了

2152
01:14:01,000 --> 01:14:04,000
大家都在想办法去挤占别人的地盘

2153
01:14:04,000 --> 01:14:04,000
对

2154
01:14:05,000 --> 01:14:08,000
而且这个东西实际上是比较惯性导向的

2155
01:14:08,000 --> 01:14:09,000
就是你之前用什么

2156
01:14:09,000 --> 01:14:10,000
你可能之后就一直用什么

2157
01:14:11,000 --> 01:14:13,000
因为大部分使用了 tech 的人

2158
01:14:13,000 --> 01:14:16,000
实际上是对 tech 本身的发展没有太多兴趣的

2159
01:14:16,000 --> 01:14:17,000
他们有更多

2160
01:14:17,000 --> 01:14:20,000
自己领域的问题需要去解决

2161
01:14:20,000 --> 01:14:20,000
他们可能一开始用什么

2162
01:14:20,000 --> 01:14:22,000
或者他们师兄用什么

2163
01:14:22,000 --> 01:14:23,000
或者他们学校用什么

2164
01:14:23,000 --> 01:14:26,000
就他们学校会给一套那个模板

2165
01:14:26,000 --> 01:14:29,000
然后这个模板在什么环境之下测试的

2166
01:14:29,000 --> 01:14:31,000
他们就会去用那个环境

2167
01:14:31,000 --> 01:14:34,000
大概这样一个模式吧

2168
01:14:34,000 --> 01:14:34,000
对

2169
01:14:34,000 --> 01:14:36,000
因为你要去了解

2170
01:14:36,000 --> 01:14:39,000
从零开始没有任何别人给你的帮助的话

2171
01:14:39,000 --> 01:14:41,000
其实是非常困难的一件事情

2172
01:14:44,000 --> 01:14:45,000
我问你个问题

2173
01:14:45,000 --> 01:14:48,000
因为这里面估计也只有你有可能干这件事情

2174
01:14:49,000 --> 01:14:53,000
你写论文或者写作来的时候自定义过红了

2175
01:14:54,000 --> 01:14:54,000
有啊

2176
01:14:54,000 --> 01:14:57,000
那你自定义的红到哪个程度了

2177
01:14:57,000 --> 01:14:58,000
没有很复杂

2178
01:14:58,000 --> 01:15:00,000
就是大概 45 个命令

2179
01:15:00,000 --> 01:15:01,000
了不起了

2180
01:15:01,000 --> 01:15:03,000
然后定义成一个红了

2181
01:15:03,000 --> 01:15:05,000
我从来没有我自定义的红

2182
01:15:05,000 --> 01:15:08,000
我这种时候我其实从来没有真正意义上写过

2183
01:15:09,000 --> 01:15:11,000
我其实都在写拉太和

2184
01:15:11,000 --> 01:15:14,000
就是太和底层那些命令我从来没有碰过

2185
01:15:14,000 --> 01:15:15,000
那这我倒是可以介绍一下

2186
01:15:15,000 --> 01:15:17,000
就是太和底层大概是一个什么样子

2187
01:15:20,000 --> 01:15:21,000
首先说太和吧

2188
01:15:21,000 --> 01:15:24,000
就是最古早的就是原汁原味的太和

2189
01:15:24,000 --> 01:15:27,000
有时候也为人们称为 play in 太和

2190
01:15:27,000 --> 01:15:33,000
它的底层是用一种我们最后提到的叫 web

2191
01:15:33,000 --> 01:15:34,000
这种编程语言写的

2192
01:15:34,000 --> 01:15:36,000
而 web 看起来是什么样的

2193
01:15:36,000 --> 01:15:41,000
高德纳对另外一个理念叫做 literature programming

2194
01:15:41,000 --> 01:15:42,000
文学编程

2195
01:15:42,000 --> 01:15:46,000
这个文学编程这个东西就是他写 web 的时候

2196
01:15:46,000 --> 01:15:50,000
期间发明出来的一套开发理念

2197
01:15:50,000 --> 01:15:51,000
你可以这么理解

2198
01:15:51,000 --> 01:15:53,000
然后他这套理念大概的意思就是说

2199
01:15:53,000 --> 01:15:55,000
我写程序要像写一篇文章一样

2200
01:15:55,000 --> 01:15:58,000
就是我要有起程转合

2201
01:16:01,000 --> 01:16:02,000
就是他要

2202
01:16:02,000 --> 01:16:04,000
他说我要用人类的语言

2203
01:16:04,000 --> 01:16:06,000
用读者能够理解的语言

2204
01:16:06,000 --> 01:16:08,000
去描述这个程序

2205
01:16:08,000 --> 01:16:12,000
然后我这个程序本身是欠在我的写的文章里面的

2206
01:16:12,000 --> 01:16:13,000
这个说法可能比较抽象

2207
01:16:13,000 --> 01:16:14,000
具体来说就是说

2208
01:16:14,000 --> 01:16:15,000
他一开始会比如说

2209
01:16:15,000 --> 01:16:17,000
他用写注释的方式来写说

2210
01:16:17,000 --> 01:16:18,000
我这个程序是干嘛的

2211
01:16:18,000 --> 01:16:21,000
然后我现在要开始一个 section

2212
01:16:21,000 --> 01:16:23,000
这个 section 里面包含了以下 variable

2213
01:16:23,000 --> 01:16:26,000
然后这些 variable 每个 variable 是拿来干嘛的

2214
01:16:26,000 --> 01:16:27,000
然后用 web

2215
01:16:27,000 --> 01:16:29,000
你可以去分析你刚才写的这篇文章

2216
01:16:29,000 --> 01:16:31,000
把里面你所有提到的

2217
01:16:31,000 --> 01:16:35,000
比如说你刚才说我以下要使用 42 个 variable

2218
01:16:35,000 --> 01:16:38,000
然后每个 variable 他都有一个描述

2219
01:16:38,000 --> 01:16:38,000
然后用 web

2220
01:16:38,000 --> 01:16:42,000
可以把这些 variable 的描述抽离出来

2221
01:16:42,000 --> 01:16:43,000
然后生成一个程序

2222
01:16:43,000 --> 01:16:44,000
这个程序是可以编译的

2223
01:16:44,000 --> 01:16:46,000
那么这个程序是什么

2224
01:16:46,000 --> 01:16:47,000
具体是什么程序呢

2225
01:16:47,000 --> 01:16:50,000
在古早的 plain tag 里面

2226
01:16:50,000 --> 01:16:53,000
这个程序是 Pascal 的一个字节

2227
01:16:53,000 --> 01:16:55,000
不过我们的节目的信中就不用解释

2228
01:16:55,000 --> 01:16:56,000
Pastel 是什么了是吗

2229
01:16:56,000 --> 01:16:57,000
对

2230
01:16:57,000 --> 01:17:01,000
然后他的 web 有另外一个工具吧

2231
01:17:02,000 --> 01:17:04,000
这个工具的用途是

2232
01:17:04,000 --> 01:17:08,000
作用是把你刚才写的这篇文章排印出来

2233
01:17:08,000 --> 01:17:14,000
就是生成 tag 来达到一个更加易于阅读的这么一个状态

2234
01:17:14,000 --> 01:17:19,000
就说他的所谓 literature programming 的理念里面实现了两件事情

2235
01:17:19,000 --> 01:17:25,000
一件事情是让你写出来文章变成一个可以执行的程序

2236
01:17:25,000 --> 01:17:31,000
另外一个功能是让你写的文章有一个适合阅读的 presentation

2237
01:17:31,000 --> 01:17:33,000
这么一个功能

2238
01:17:33,000 --> 01:17:33,000
ok

2239
01:17:33,000 --> 01:17:35,000
这是 plain tag

2240
01:17:35,000 --> 01:17:37,000
然后这个 plain tag 因为他用的是 Pascal

2241
01:17:37,000 --> 01:17:40,000
然后如果你要坚持使用他的话

2242
01:17:40,000 --> 01:17:45,000
等于你每一个环境里面都要有一个 Pascal 编辑器

2243
01:17:45,000 --> 01:17:48,000
而众所说是 Pascal 这个语言现在已经示威了

2244
01:17:48,000 --> 01:17:52,000
所以后来有人写了一个东西叫做 web 2 c

2245
01:17:52,000 --> 01:17:58,000
就是采用 c 语言来描述这个 web 里面的程序

2246
01:17:58,000 --> 01:17:59,000
大概就是这样

2247
01:17:59,000 --> 01:18:00,000
后来有个越南人

2248
01:18:00,000 --> 01:18:04,000
他在捷克的一所大学里面

2249
01:18:04,000 --> 01:18:06,000
念博士的时候

2250
01:18:06,000 --> 01:18:08,000
写了一个程序叫做 PDF tag

2251
01:18:08,000 --> 01:18:11,000
然后这个 PDF tag 他又跳过了

2252
01:18:11,000 --> 01:18:15,000
之前我们一开始介绍了那个 PDF tag 要生成一个 dwi 的这一步

2253
01:18:15,000 --> 01:18:19,000
就是他改为直接生成一个 PDF 文件

2254
01:18:19,000 --> 01:18:22,000
然后这个东西用的是 web 2 c

2255
01:18:22,000 --> 01:18:26,000
就说现在事实上最广为使用的这么一个引擎

2256
01:18:26,000 --> 01:18:28,000
是 PDF tag

2257
01:18:28,000 --> 01:18:29,000
他是基于 web 2 c 的

2258
01:18:29,000 --> 01:18:34,000
然后他最基本的最核心的这样一个东西是 c 原的一个字迹

2259
01:18:35,000 --> 01:18:37,000
大概就这样

2260
01:18:37,000 --> 01:18:39,000
然后现在还有一个引擎叫做 luatag

2261
01:18:39,000 --> 01:18:44,000
然后 luatag 就是试图把 tag 的整个引擎暴露给 luatag

2262
01:18:44,000 --> 01:18:48,000
本质上还是嵌入到 c 里面的这样一个语言

2263
01:18:49,000 --> 01:18:52,000
然后你可以用 luatag 来做一些比较高层的开发

2264
01:18:53,000 --> 01:18:56,000
大概底层是这样一个现状

2265
01:18:56,000 --> 01:18:58,000
没有 如果你要说这个

2266
01:18:58,000 --> 01:19:00,000
太和的发展的话

2267
01:19:00,000 --> 01:19:01,000
刚才那个越南人

2268
01:19:01,000 --> 01:19:05,000
他是不是叫 hante tan 是吧

2269
01:19:05,000 --> 01:19:06,000
我不会念

2270
01:19:06,000 --> 01:19:07,000
我也不会念

2271
01:19:07,000 --> 01:19:08,000
还是不要侮辱越南人

2272
01:19:08,000 --> 01:19:09,000
对不起

2273
01:19:11,000 --> 01:19:13,000
肯定是念错了 我觉得

2274
01:19:13,000 --> 01:19:17,000
但是因为后面就有很多这样的扩展

2275
01:19:17,000 --> 01:19:17,000
对吧

2276
01:19:17,000 --> 01:19:20,000
中国的话不是那个李阿林他们也在做

2277
01:19:20,000 --> 01:19:21,000
他那个是什么

2278
01:19:21,000 --> 01:19:23,000
P 太和 ng 是吧

2279
01:19:23,000 --> 01:19:24,000
这个我还真不知道

2280
01:19:24,000 --> 01:19:28,000
他是用那个 c 原开发的那个

2281
01:19:28,000 --> 01:19:32,000
他那个是 y&y 的太和重新开始写的

2282
01:19:32,000 --> 01:19:34,000
写的一个东西

2283
01:19:34,000 --> 01:19:34,000
然后直接

2284
01:19:34,000 --> 01:19:37,000
然后就可以直接输出 PDF 的

2285
01:19:37,000 --> 01:19:38,000
那是李阿林

2286
01:19:38,000 --> 01:19:39,000
这个东西现在还存在吗

2287
01:19:39,000 --> 01:19:40,000
对李阿林他自己在维护啊

2288
01:19:40,000 --> 01:19:43,000
这个名字有点耳熟啊

2289
01:19:43,000 --> 01:19:43,000
对呀

2290
01:19:43,000 --> 01:19:45,000
他的真名叫马起源

2291
01:19:45,000 --> 01:19:47,000
然后在支付上也是很活跃的

2292
01:19:47,000 --> 01:19:48,000
OK

2293
01:19:48,000 --> 01:19:48,000
太厉害了

2294
01:19:48,000 --> 01:19:50,000
一个人维护这么一整套东西

2295
01:19:51,000 --> 01:19:53,000
那个 luatag 补出一点

2296
01:19:53,000 --> 01:19:58,000
其实就是为了解决原始的那个太和不好变成扩展的问题

2297
01:19:58,000 --> 01:20:01,000
所以他其实把 luat 的那个比较一个

2298
01:20:01,000 --> 01:20:04,000
就是 luat 本来是一个非常简单的语言

2299
01:20:04,000 --> 01:20:07,000
他在很多游戏里面是作为这种控制语言存在的

2300
01:20:07,000 --> 01:20:09,000
因为他很方便的牵入到 c

2301
01:20:09,000 --> 01:20:10,000
C 里面去对吧

2302
01:20:10,000 --> 01:20:16,000
然后 luatag 就是说他整个把 luat 的解释器

2303
01:20:16,000 --> 01:20:17,000
牵到这个太和里面去

2304
01:20:17,000 --> 01:20:20,000
然后你很多事情太和里面不方便做的

2305
01:20:20,000 --> 01:20:22,000
其实对绝大出来讲就是基本上

2306
01:20:22,000 --> 01:20:24,000
但反正任何事情你需要编程控制的

2307
01:20:24,000 --> 01:20:26,000
你都转到 luatag 去会比较

2308
01:20:26,000 --> 01:20:28,000
就是你用前会比较舒服一些

2309
01:20:28,000 --> 01:20:31,000
然后 luatag 做了这么一个事

2310
01:20:31,000 --> 01:20:32,000
但是我记得还有好几个

2311
01:20:32,000 --> 01:20:34,000
就当时还存在就是从

2312
01:20:34,000 --> 01:20:36,000
到 unicode 的过渡的那个阶段嘛

2313
01:20:36,000 --> 01:20:38,000
还有那个叫什么 Xetag

2314
01:20:38,000 --> 01:20:39,000
我不知道这个怎么念

2315
01:20:39,000 --> 01:20:41,000
就是他的 XETX

2316
01:20:41,000 --> 01:20:42,000
Zetag

2317
01:20:42,000 --> 01:20:43,000
Zetag 是吧

2318
01:20:43,000 --> 01:20:43,000
Zetag

2319
01:20:43,000 --> 01:20:44,000
对对

2320
01:20:44,000 --> 01:20:46,000
就是就是然后还有各种各种变走

2321
01:20:46,000 --> 01:20:48,000
什么 PDF Zetag

2322
01:20:48,000 --> 01:20:50,000
那种就实在是太多了

2323
01:20:50,000 --> 01:20:51,000
我当时看到头都大了

2324
01:20:52,000 --> 01:20:56,000
但好像现在反而就是该发展的发展

2325
01:20:56,000 --> 01:20:58,000
然后也就他也经过了现在画的过程

2326
01:20:58,000 --> 01:20:58,000
现在

2327
01:20:59,000 --> 01:21:01,000
留存下来还在活跃开发

2328
01:21:01,000 --> 01:21:02,000
然后功能比较全的

2329
01:21:02,000 --> 01:21:03,000
好像也就那么两三个了

2330
01:21:03,000 --> 01:21:05,000
对 Zetag 应该是

2331
01:21:06,000 --> 01:21:08,000
可能现在最怎么说高级

2332
01:21:08,000 --> 01:21:10,000
或者说最 Feature Completed 的一个发行榜

2333
01:21:11,000 --> 01:21:12,000
一个引擎

2334
01:21:12,000 --> 01:21:14,000
就他首先他一开始出发

2335
01:21:14,000 --> 01:21:15,000
刚出发的时候

2336
01:21:15,000 --> 01:21:17,000
就是以全面的 Unicode 的支持为出发点的

2337
01:21:17,000 --> 01:21:20,000
然后他还支持 OpenTag 之类的

2338
01:21:20,000 --> 01:21:21,000
你就是你用 Zetag 的话

2339
01:21:21,000 --> 01:21:24,000
你就可以使用你机器上装的

2340
01:21:24,000 --> 01:21:24,000
装的自己

2341
01:21:24,000 --> 01:21:26,000
对这是很大的一个坑

2342
01:21:26,000 --> 01:21:26,000
对

2343
01:21:26,000 --> 01:21:27,000
这是很大的一个坑

2344
01:21:27,000 --> 01:21:29,000
就是你可能说

2345
01:21:29,000 --> 01:21:32,000
我想要用 Tag 来排我的东西

2346
01:21:32,000 --> 01:21:34,000
但是如果你使用

2347
01:21:34,000 --> 01:21:35,000
比如说 Tag Live 的话

2348
01:21:35,000 --> 01:21:38,000
你会发现自己没有办法使用系统上有的字体

2349
01:21:38,000 --> 01:21:40,000
这是很淡腾的一件事情

2350
01:21:40,000 --> 01:21:41,000
但是你要是用 Zetag 的话

2351
01:21:41,000 --> 01:21:43,000
就可以绕开这个坑

2352
01:21:43,000 --> 01:21:44,000
Zetag 本最开始的时候

2353
01:21:44,000 --> 01:21:48,000
他就是在那个 Mac OS 上面去开发的嘛

2354
01:21:48,000 --> 01:21:50,000
所以他当时搞了那种

2355
01:21:50,000 --> 01:21:52,000
我所谓的这种先进的字体排音技术

2356
01:21:52,000 --> 01:21:53,000
各种连字

2357
01:21:53,000 --> 01:21:54,000
Leadature

2358
01:21:54,000 --> 01:21:57,000
各种这种就是高级的 OpenType 内特性

2359
01:21:57,000 --> 01:21:58,000
在其他的当时

2360
01:21:58,000 --> 01:21:59,000
在其他的 Type 发现

2361
01:21:59,000 --> 01:22:00,000
把你们都是不能支持的

2362
01:22:00,000 --> 01:22:02,000
因为他完全不是一个

2363
01:22:03,000 --> 01:22:04,000
一个不是一个体系

2364
01:22:04,000 --> 01:22:05,000
也不是一个技术路线

2365
01:22:05,000 --> 01:22:06,000
然后

2366
01:22:06,000 --> 01:22:07,000
是一个年代的东西

2367
01:22:07,000 --> 01:22:07,000
对

2368
01:22:07,000 --> 01:22:08,000
完全不是一个年代的东西

2369
01:22:08,000 --> 01:22:12,000
但是当时 Zetag 他把这个两个结合加在一起

2370
01:22:12,000 --> 01:22:14,000
然后当时给到我们看到的一些

2371
01:22:14,000 --> 01:22:15,000
实现的效果

2372
01:22:15,000 --> 01:22:16,000
那是非常非常惊艳的

2373
01:22:17,000 --> 01:22:18,000
by the way

2374
01:22:18,000 --> 01:22:21,000
那个版本号无限接近于 1

2375
01:22:21,000 --> 01:22:22,000
就是 0.999

2376
01:22:22,000 --> 01:22:24,000
就是这个 Zetag

2377
01:22:24,000 --> 01:22:25,000
就像刚才我们讨论的

2378
01:22:25,000 --> 01:22:27,000
这个 LATag 还有 Zetag

2379
01:22:27,000 --> 01:22:29,000
包括像 PDFTag

2380
01:22:29,000 --> 01:22:31,000
他们跟这个

2381
01:22:31,000 --> 01:22:32,000
我们最开始讲的

2382
01:22:32,000 --> 01:22:34,000
这个 TechLive 这类的发行版

2383
01:22:34,000 --> 01:22:36,000
是什么样的一个关系呢

2384
01:22:36,000 --> 01:22:37,000
还是说

2385
01:22:37,000 --> 01:22:39,000
后面我们说这些像 LATag 这样的东西

2386
01:22:39,000 --> 01:22:41,000
他们只是负责排版的这个功能

2387
01:22:41,000 --> 01:22:43,000
他们只是一个排版引擎

2388
01:22:43,000 --> 01:22:44,000
是这样的

2389
01:22:44,000 --> 01:22:45,000
这个解释现在又复杂

2390
01:22:46,000 --> 01:22:48,000
Zetag 应该是比较像引擎那个东西

2391
01:22:48,000 --> 01:22:50,000
但是 Zetag 面临一个问题

2392
01:22:50,000 --> 01:22:53,000
就是如果你要从头开始支持 Unicode

2393
01:22:53,000 --> 01:22:54,000
和 OpenType 的话

2394
01:22:54,000 --> 01:22:56,000
你会需要更多的工具

2395
01:22:56,000 --> 01:22:59,000
所以 Zetag 除了实现

2396
01:22:59,000 --> 01:23:01,000
Tag 和这个这个程序之外

2397
01:23:01,000 --> 01:23:02,000
它有一些别的什么

2398
01:23:02,000 --> 01:23:04,000
就类似于比如说

2399
01:23:04,000 --> 01:23:07,000
要去处理 Unicode

2400
01:23:07,000 --> 01:23:10,000
或者说处理 OpenType 的那个

2401
01:23:10,000 --> 01:23:11,000
自体格式的一些工具

2402
01:23:12,000 --> 01:23:13,000
就等于它有核心的

2403
01:23:13,000 --> 01:23:15,000
那些程序之外还有一些扩展

2404
01:23:16,000 --> 01:23:18,000
而 PDF Tag 的话

2405
01:23:18,000 --> 01:23:20,000
就是完全只是重新实现了

2406
01:23:20,000 --> 01:23:22,000
Tag 和 LATag 这两个程序

2407
01:23:22,000 --> 01:23:23,000
就他们基本上都是引擎

2408
01:23:23,000 --> 01:23:25,000
但是他们的规模是不

2409
01:23:25,000 --> 01:23:27,000
他们的覆盖范围是不一样的

2410
01:23:27,000 --> 01:23:29,000
比如说有些一个可能只是一个内燃机

2411
01:23:29,000 --> 01:23:30,000
另外一个除了内燃机之外

2412
01:23:30,000 --> 01:23:33,000
还有一个 Power Train 在那边

2413
01:23:33,000 --> 01:23:35,000
那他们跟 Tag Live 这样子的

2414
01:23:35,000 --> 01:23:37,000
然后 Tag Live 就是

2415
01:23:37,000 --> 01:23:39,000
比如说 Tag Live 应该用的是 PDF LATag

2416
01:23:39,000 --> 01:23:40,000
或者是它两个都有

2417
01:23:40,000 --> 01:23:43,000
它既有 Tag 也有 PDF Tag

2418
01:23:43,000 --> 01:23:44,000
然后它把所有这些东西

2419
01:23:44,000 --> 01:23:46,000
外面加上一套编辑器

2420
01:23:46,000 --> 01:23:48,000
加上那个工作榴

2421
01:23:48,000 --> 01:23:50,000
然后加上一些交代工具之类的

2422
01:23:50,000 --> 01:23:51,000
然后打包给你

2423
01:23:54,000 --> 01:23:55,000
说到 Tag Live

2424
01:23:55,000 --> 01:23:57,000
我们是不是要讲一下

2425
01:23:57,000 --> 01:23:59,000
它所谓的官方开发组

2426
01:24:00,000 --> 01:24:03,000
叫做 TOG 的 Tag User Group

2427
01:24:03,000 --> 01:24:04,000
应该怎么翻译

2428
01:24:04,000 --> 01:24:05,000
粉丝群

2429
01:24:05,000 --> 01:24:08,000
Tag 不是 Tag Live 的官方开发组

2430
01:24:08,000 --> 01:24:12,000
Tag 是所有的 Tag

2431
01:24:12,000 --> 01:24:14,000
Tag 的用户的一个群组

2432
01:24:14,000 --> 01:24:17,000
对啊 Tag 而且高德纳一开始

2433
01:24:17,000 --> 01:24:20,000
就经常会在里面发些东西嘛

2434
01:24:20,000 --> 01:24:21,000
在很早以前

2435
01:24:21,000 --> 01:24:24,000
然后会做一些更新啊什么的

2436
01:24:24,000 --> 01:24:24,000
对对对

2437
01:24:24,000 --> 01:24:26,000
一直都在那个 Tag

2438
01:24:26,000 --> 01:24:30,000
Anyway 我们跟大家介绍一下这个社区吧

2439
01:24:31,000 --> 01:24:33,000
我之前看过他们写的一些论文

2440
01:24:33,000 --> 01:24:34,000
跟自己的排音有关的

2441
01:24:34,000 --> 01:24:36,000
我倒是看过一样

2442
01:24:36,000 --> 01:24:37,000
还有一些才华搞

2443
01:24:37,000 --> 01:24:38,000
因为本来 Tag

2444
01:24:38,000 --> 01:24:40,000
它就是一个排版引擎嘛

2445
01:24:40,000 --> 01:24:41,000
虽然他们必须要研究

2446
01:24:42,000 --> 01:24:45,000
所以很多他们研究的排版的论文

2447
01:24:45,000 --> 01:24:47,000
就发在 Tag 上面

2448
01:24:47,000 --> 01:24:50,000
Tag 至于 Tag 的关系

2449
01:24:50,000 --> 01:24:51,000
你可以认为

2450
01:24:51,000 --> 01:24:53,000
有点类似于 Gnu

2451
01:24:53,000 --> 01:24:57,000
至于 Unicus 或者是 Innex 的关系

2452
01:24:57,000 --> 01:24:59,000
这不就是 Pyzen 跟 Tag 之间的关系吗

2453
01:24:59,000 --> 01:25:01,000
Pyzen 跟 PUG 之间

2454
01:25:01,000 --> 01:25:01,000
就是这样的

2455
01:25:01,000 --> 01:25:02,000
对对对

2456
01:25:02,000 --> 01:25:04,000
它有一个这种是一个比较犯的

2457
01:25:04,000 --> 01:25:05,000
那种用户的组织

2458
01:25:05,000 --> 01:25:07,000
然后很多这种项目

2459
01:25:07,000 --> 01:25:09,000
都掛在这个组织的名下

2460
01:25:09,000 --> 01:25:11,000
或者是被这个组织 sponsor 的

2461
01:25:11,000 --> 01:25:12,000
比如说我们看到

2462
01:25:12,000 --> 01:25:14,000
刚才提的那好几个 Tag Live

2463
01:25:14,000 --> 01:25:16,000
MacTag

2464
01:25:16,000 --> 01:25:19,000
它都是在这个组织的旗下

2465
01:25:19,000 --> 01:25:21,000
然后就这个组织的成员

2466
01:25:21,000 --> 01:25:23,000
然后再开发维护

2467
01:25:23,000 --> 01:25:24,000
就大概是这么一些

2468
01:25:24,000 --> 01:25:26,000
然后还有一些是非组织的

2469
01:25:26,000 --> 01:25:27,000
就是说

2470
01:25:27,000 --> 01:25:29,000
就是在 Tag Group 以外的

2471
01:25:29,000 --> 01:25:31,000
有这种专业分支的领域的

2472
01:25:31,000 --> 01:25:32,000
那也有对吧

2473
01:25:32,000 --> 01:25:34,000
它就不严格是大与统的

2474
01:25:34,000 --> 01:25:35,000
这么一个群体

2475
01:25:35,000 --> 01:25:37,000
因为它原来的名字

2476
01:25:37,000 --> 01:25:38,000
就是叫 Tag User Group

2477
01:25:38,000 --> 01:25:39,000
对吧

2478
01:25:39,000 --> 01:25:40,000
Tag 的用户组

2479
01:25:40,000 --> 01:25:42,000
所以就简称 TUG

2480
01:25:42,000 --> 01:25:43,000
对

2481
01:25:43,000 --> 01:25:43,000
你只要用

2482
01:25:43,000 --> 01:25:45,000
都可以在里面去申请加入

2483
01:25:45,000 --> 01:25:49,000
然后他们有一个叫 Tag Boat

2484
01:25:49,000 --> 01:25:49,000
就拖传

2485
01:25:49,000 --> 01:25:51,000
因为 Tag 本身是拖传的意思

2486
01:25:51,000 --> 01:25:52,000
所以

2487
01:25:52,000 --> 01:25:53,000
把那个文字游戏

2488
01:25:53,000 --> 01:25:55,000
他们后来发

2489
01:25:55,000 --> 01:25:56,000
很多那些发的文章

2490
01:25:57,000 --> 01:25:59,000
都发在 Tag Boat 里面

2491
01:26:00,000 --> 01:26:01,000
那里面其实如果

2492
01:26:01,000 --> 01:26:02,000
刚才说的嘛

2493
01:26:02,000 --> 01:26:04,000
很多采访

2494
01:26:04,000 --> 01:26:06,000
去采访高德纳先生

2495
01:26:06,000 --> 01:26:08,000
还有各种自体设计师

2496
01:26:08,000 --> 01:26:11,000
还排印的一些研究的论文

2497
01:26:11,000 --> 01:26:13,000
就都会发在 Tag Boat 里面

2498
01:26:13,000 --> 01:26:14,000
所以说到这里

2499
01:26:14,000 --> 01:26:15,000
我提另外一个东西

2500
01:26:15,000 --> 01:26:17,000
其实非常有意思的

2501
01:26:17,000 --> 01:26:18,000
就是刚才我们讲的

2502
01:26:18,000 --> 01:26:18,000
Tag

2503
01:26:18,000 --> 01:26:20,000
大家也拉 Tag 一行

2504
01:26:20,000 --> 01:26:22,000
它其实还是偏向于这种文档

2505
01:26:22,000 --> 01:26:22,000
文稿

2506
01:26:22,000 --> 01:26:24,000
这种长篇的论文为主

2507
01:26:24,000 --> 01:26:26,000
还有一个大的分支的

2508
01:26:26,000 --> 01:26:28,000
一个流派

2509
01:26:28,000 --> 01:26:30,000
是基于 Tag 来做一些更加 Fancy

2510
01:26:30,000 --> 01:26:31,000
就是你想都不想

2511
01:26:31,000 --> 01:26:33,000
想不到的一些那种图形

2512
01:26:33,000 --> 01:26:36,000
你不会觉得它是用 Tag 编出来的

2513
01:26:36,000 --> 01:26:38,000
排印出来的东西

2514
01:26:38,000 --> 01:26:38,000
但确实是

2515
01:26:38,000 --> 01:26:41,000
然后这套体系叫做 Context

2516
01:26:41,000 --> 01:26:42,000
有个 T 了

2517
01:26:42,000 --> 01:26:42,000
对吧

2518
01:26:42,000 --> 01:26:44,000
被人家叫 Contact

2519
01:26:45,000 --> 01:26:46,000
就是 Context 的那个词

2520
01:26:46,000 --> 01:26:50,000
但是它的中间 Tex 是 Tag 的那个频法

2521
01:26:50,000 --> 01:26:51,000
就是大写的 T 大写的 X

2522
01:26:51,000 --> 01:26:52,000
然后小写的 E

2523
01:26:52,000 --> 01:26:53,000
这个是干嘛呢

2524
01:26:53,000 --> 01:26:54,000
当时我有一段时间

2525
01:26:54,000 --> 01:26:56,000
非常吃迷这个东西

2526
01:26:56,000 --> 01:26:56,000
就是

2527
01:26:57,000 --> 01:26:58,000
就你们写 PPT

2528
01:26:58,000 --> 01:26:59,000
要不就是用 Powerpoint

2529
01:26:59,000 --> 01:27:00,000
要不就是用那个

2530
01:27:01,000 --> 01:27:03,000
对 Powerpoint 就是 PPT 嘛

2531
01:27:05,000 --> 01:27:08,000
你写这个换灯片

2532
01:27:08,000 --> 01:27:09,000
就是数码换灯片的时候

2533
01:27:09,000 --> 01:27:10,000
你要不就用 Powerpoint

2534
01:27:10,000 --> 01:27:11,000
PPT 掉

2535
01:27:11,000 --> 01:27:12,000
要不就用那个 Keynote

2536
01:27:12,000 --> 01:27:14,000
知道这就结尾是那个点 Key 的那个文件

2537
01:27:14,000 --> 01:27:18,000
但是你也可以用 Tag 这套逻辑来写

2538
01:27:18,000 --> 01:27:19,000
这个 slides

2539
01:27:19,000 --> 01:27:21,000
而且当时我记得我有很多

2540
01:27:21,000 --> 01:27:23,000
上课的这种教授

2541
01:27:23,000 --> 01:27:25,000
他们的这个版书

2542
01:27:25,000 --> 01:27:26,000
他们也有版书的嘛

2543
01:27:27,000 --> 01:27:29,000
就是用 Tag 来排版出来

2544
01:27:29,000 --> 01:27:31,000
投设到上面去了

2545
01:27:31,000 --> 01:27:34,000
但是你如果直接用那个原始的 Tag

2546
01:27:34,000 --> 01:27:34,000
或者拉 Tag

2547
01:27:34,000 --> 01:27:36,000
你说你把这个正常的

2548
01:27:36,000 --> 01:27:37,000
它是定义一个比如说 Latter

2549
01:27:37,000 --> 01:27:38,000
或者是 A 4 的这个纸

2550
01:27:38,000 --> 01:27:40,000
是一个长条的一个结构

2551
01:27:40,000 --> 01:27:42,000
你投到那个屏幕上

2552
01:27:42,000 --> 01:27:42,000
4 比 3

2553
01:27:42,000 --> 01:27:43,000
它是一个宽的结构

2554
01:27:43,000 --> 01:27:44,000
不太合适嘛

2555
01:27:44,000 --> 01:27:45,000
然后说你可以说

2556
01:27:45,000 --> 01:27:47,000
那我重新把那个纸横一下

2557
01:27:47,000 --> 01:27:48,000
好像也可以测的就用

2558
01:27:48,000 --> 01:27:50,000
但是还是排出来那个东西是比较无趣

2559
01:27:50,000 --> 01:27:51,000
对吧

2560
01:27:51,000 --> 01:27:52,000
我们知道很多这种版书

2561
01:27:52,000 --> 01:27:53,000
或者是这种 slides

2562
01:27:53,000 --> 01:27:55,000
它需要有一些有趣的东西

2563
01:27:55,000 --> 01:27:56,000
有需要图形啊

2564
01:27:56,000 --> 01:27:58,000
各种箭头去指点啊

2565
01:27:58,000 --> 01:27:59,000
各种甚至是

2566
01:28:00,000 --> 01:28:01,000
渐变过场动画什么的

2567
01:28:01,000 --> 01:28:04,000
这些在传统的那个拉 Tag 里面

2568
01:28:04,000 --> 01:28:05,000
都是非常难以实现的

2569
01:28:06,000 --> 01:28:08,000
然后就有人搞了这个 context

2570
01:28:08,000 --> 01:28:10,000
contact 这套系统

2571
01:28:10,000 --> 01:28:13,000
它可以实际上非常完美的这种

2572
01:28:13,000 --> 01:28:14,000
就是各种图形啊

2573
01:28:14,000 --> 01:28:16,000
均确的这种图案的生成

2574
01:28:16,000 --> 01:28:17,000
然后你可以做一些动画呀

2575
01:28:17,000 --> 01:28:18,000
特效啊

2576
01:28:18,000 --> 01:28:20,000
你看到那个结果

2577
01:28:20,000 --> 01:28:23,000
你不会认为那个东西是用 Tag 做出来

2578
01:28:23,000 --> 01:28:24,000
但它确实是

2579
01:28:24,000 --> 01:28:25,000
这个大家可以去试一下

2580
01:28:25,000 --> 01:28:27,000
然后就有一叫做 context

2581
01:28:27,000 --> 01:28:29,000
garden.net 这个网站上

2582
01:28:29,000 --> 01:28:31,000
是他们的一个相当于是官网的东西

2583
01:28:31,000 --> 01:28:33,000
你可以看一下他的那些视列文件

2584
01:28:33,000 --> 01:28:35,000
那个是非常 fancy 的一个东西

2585
01:28:35,000 --> 01:28:37,000
ok 我明白了

2586
01:28:37,000 --> 01:28:40,000
这个 context 至于你就像 review.js

2587
01:28:40,000 --> 01:28:41,000
至于我

2588
01:28:41,000 --> 01:28:42,000
可以这么理解

2589
01:28:42,000 --> 01:28:44,000
就本质上你是

2590
01:28:44,000 --> 01:28:45,000
你是在编程化的方式

2591
01:28:45,000 --> 01:28:47,000
去生成你的那个换能片

2592
01:28:47,000 --> 01:28:50,000
而不是用这个鼠标在里下点点点的方式

2593
01:28:50,000 --> 01:28:51,000
生成这个换能片

2594
01:28:51,000 --> 01:28:54,000
你可以精确的描述每一个动效的

2595
01:28:54,000 --> 01:28:55,000
每一个这个数学描述

2596
01:28:55,000 --> 01:28:56,000
你都可以实现出来

2597
01:28:56,000 --> 01:28:59,000
这个当时做出来的非常令人惊艳

2598
01:28:59,000 --> 01:29:00,000
如果你不想使用 Tag 的话

2599
01:29:00,000 --> 01:29:03,000
你可以试试我刚才说的这个 review.js

2600
01:29:03,000 --> 01:29:05,000
就是你如果你觉得 PPT tag 不 hardcore

2601
01:29:05,000 --> 01:29:09,000
然后你想要使用编程方式来解决你的换能片的问题

2602
01:29:09,000 --> 01:29:11,000
你可以试试我刚才说的 review.js

2603
01:29:12,000 --> 01:29:14,000
它是基本上就是你写 java script

2604
01:29:14,000 --> 01:29:16,000
然后来生成你的换能片这样

2605
01:29:19,000 --> 01:29:20,000
诶 我想起来了

2606
01:29:20,000 --> 01:29:22,000
刚才我们说到了 mac 上面

2607
01:29:22,000 --> 01:29:24,000
limux 上面和 window 上面

2608
01:29:24,000 --> 01:29:25,000
但实际上还有有现在就是

2609
01:29:25,000 --> 01:29:26,000
我们现在处在这个网络时代

2610
01:29:26,000 --> 01:29:28,000
还有一个更简单的解决方法

2611
01:29:28,000 --> 01:29:30,000
就是如果你想要使用 tag 的话

2612
01:29:30,000 --> 01:29:34,000
现在有很多所谓的在线 tag 编辑器

2613
01:29:34,000 --> 01:29:35,000
sass

2614
01:29:35,000 --> 01:29:36,000
然后有些是

2615
01:29:37,000 --> 01:29:39,000
对 software as a service

2616
01:29:39,000 --> 01:29:40,000
在云上的

2617
01:29:40,000 --> 01:29:40,000
对

2618
01:29:40,000 --> 01:29:42,000
就好像现在我基本上写 pizen 程序

2619
01:29:42,000 --> 01:29:44,000
或者是写什么小程序的时候

2620
01:29:44,000 --> 01:29:45,000
需要写一个脚本的话

2621
01:29:45,000 --> 01:29:46,000
我已经不会在本地去写它了

2622
01:29:46,000 --> 01:29:51,000
我去去比如说 repell.it 或者是什么

2623
01:29:52,000 --> 01:29:53,000
主持类的 online

2624
01:29:53,000 --> 01:29:55,000
直接变成对吧

2625
01:29:55,000 --> 01:29:56,000
对

2626
01:29:56,000 --> 01:29:58,000
Lattag 也有这样的一个面称环境

2627
01:29:58,000 --> 01:30:01,000
其中比较知名的一个叫 overleaf

2628
01:30:02,000 --> 01:30:03,000
对

2629
01:30:03,000 --> 01:30:05,000
它是可能现在用户权业蛮多的一个

2630
01:30:05,000 --> 01:30:06,000
虽然我从来没有用过

2631
01:30:06,000 --> 01:30:07,000
但是有

2632
01:30:07,000 --> 01:30:09,000
我曾经看到人用过

2633
01:30:09,000 --> 01:30:11,000
然后好像反显还蛮好

2634
01:30:11,000 --> 01:30:13,000
网址就是 overleaf.com

2635
01:30:13,000 --> 01:30:14,000
然后你在上面注册一下

2636
01:30:14,000 --> 01:30:17,000
你就会得到一个编辑 tag 的环境

2637
01:30:17,000 --> 01:30:19,000
然后它会给你实时的

2638
01:30:19,000 --> 01:30:20,000
就像 repell 一样

2639
01:30:20,000 --> 01:30:22,000
给你实时的生成 APF

2640
01:30:22,000 --> 01:30:23,000
对

2641
01:30:23,000 --> 01:30:23,000
还蛮好用的

2642
01:30:23,000 --> 01:30:25,000
而且好像价格也不是很贵吧

2643
01:30:25,000 --> 01:30:27,000
尤其是对学生来说

2644
01:30:27,000 --> 01:30:28,000
一个月 9 块钱

2645
01:30:28,000 --> 01:30:30,000
比如说你要写 6 个月的论文的话

2646
01:30:30,000 --> 01:30:31,000
你一个月 9 块钱

2647
01:30:31,000 --> 01:30:34,000
我觉得实在是相当便宜的

2648
01:30:35,000 --> 01:30:36,000
太方便了

2649
01:30:36,000 --> 01:30:36,000
是

2650
01:30:36,000 --> 01:30:38,000
然后你一举忘掉

2651
01:30:38,000 --> 01:30:41,000
如何安装和整这个环境的痛苦的

2652
01:30:41,000 --> 01:30:43,000
而且随随都可以

2653
01:30:43,000 --> 01:30:45,000
你不用担心本地数据丢失之类的问题

2654
01:30:45,000 --> 01:30:46,000
它是保存在云端的

2655
01:30:46,000 --> 01:30:48,000
还是相当推荐的

2656
01:30:48,000 --> 01:30:49,000
对

2657
01:30:49,000 --> 01:30:50,000
就叫什么来的

2658
01:30:50,000 --> 01:30:51,000
Cloud native tag

2659
01:30:52,000 --> 01:30:55,000
1976 与 2021 的完美结合

2660
01:30:57,000 --> 01:30:58,000
这个我印象非常深

2661
01:30:58,000 --> 01:30:59,000
当时我在

2662
01:30:59,000 --> 01:31:02,000
我用的应该是 200 几年的时候

2663
01:31:02,000 --> 01:31:03,000
就是前后晚

2664
01:31:03,000 --> 01:31:05,000
就是 200 几年到 2010 年这段是

2665
01:31:05,000 --> 01:31:06,000
这个 10 年

2666
01:31:06,000 --> 01:31:08,000
这个 decade 之间

2667
01:31:08,000 --> 01:31:09,000
就那个时候还没有

2668
01:31:09,000 --> 01:31:11,000
就是有这种就是云的这种

2669
01:31:11,000 --> 01:31:13,000
这种态度出现

2670
01:31:13,000 --> 01:31:14,000
但是因为那个时候的这个

2671
01:31:14,000 --> 01:31:16,000
这个 Cloud 的这个 info

2672
01:31:16,000 --> 01:31:18,000
就设施还没有非常的完善

2673
01:31:18,000 --> 01:31:19,000
就是其实非常不好用

2674
01:31:19,000 --> 01:31:20,000
但如果说

2675
01:31:20,000 --> 01:31:22,000
假设我现在让我丢到一个学校里面

2676
01:31:22,000 --> 01:31:23,000
让我再写一篇

2677
01:31:23,000 --> 01:31:25,000
我估计我也不会在自己电脑上安装

2678
01:31:25,000 --> 01:31:26,000
这个破玩样

2679
01:31:26,000 --> 01:31:27,000
一次一次性的破玩样的

2680
01:31:27,000 --> 01:31:28,000
还是气这种用这种云环境

2681
01:31:28,000 --> 01:31:30,000
比较简单一些

2682
01:31:31,000 --> 01:31:32,000
对

2683
01:31:32,000 --> 01:31:32,000
是的

2684
01:31:32,000 --> 01:31:34,000
所以一个标准的

2685
01:31:34,000 --> 01:31:36,000
这个太和的编写的这个

2686
01:31:36,000 --> 01:31:38,000
就当那个你编的那个流程是这样

2687
01:31:38,000 --> 01:31:39,000
但是我就说

2688
01:31:39,000 --> 01:31:40,000
可以描述一下

2689
01:31:40,000 --> 01:31:41,000
当时你你看到你电脑屏幕上

2690
01:31:41,000 --> 01:31:42,000
应该是什么

2691
01:31:42,000 --> 01:31:43,000
比如我通常是

2692
01:31:43,000 --> 01:31:44,000
一半屏幕

2693
01:31:44,000 --> 01:31:45,000
就屏幕对开

2694
01:31:45,000 --> 01:31:46,000
左右两边对吧

2695
01:31:46,000 --> 01:31:48,000
然后一边是这个元代码

2696
01:31:48,000 --> 01:31:49,000
就是那个太和

2697
01:31:49,000 --> 01:31:51,000
拉太和的这个原始的那个点

2698
01:31:51,000 --> 01:31:53,000
太和那个 source code

2699
01:31:53,000 --> 01:31:55,000
然后另外一边是生成的

2700
01:31:55,000 --> 01:31:56,000
那个 pdf 的那个窗口对吧

2701
01:31:56,000 --> 01:32:01,000
然后把那个别地器的那个工作流程设为

2702
01:32:01,000 --> 01:32:04,000
你这边只要以保存这个太和的原代码

2703
01:32:04,000 --> 01:32:07,000
那边就自动在后台编译生成

2704
01:32:07,000 --> 01:32:07,000
那个 pdf

2705
01:32:07,000 --> 01:32:09,000
然后在右边及时的展示出来

2706
01:32:09,000 --> 01:32:12,000
这样就可以勉强实现所见

2707
01:32:12,000 --> 01:32:14,000
等大概一秒钟

2708
01:32:14,000 --> 01:32:16,000
你两秒钟三秒钟之后做基所得嘛

2709
01:32:16,000 --> 01:32:18,000
然后当时有一个非常有趣的

2710
01:32:18,000 --> 01:32:21,000
或者很 tricky 的一个实现的难点

2711
01:32:21,000 --> 01:32:21,000
就是说

2712
01:32:21,000 --> 01:32:22,000
如果你这篇文章

2713
01:32:22,000 --> 01:32:24,000
或者你编写的这个文章

2714
01:32:24,000 --> 01:32:25,000
有十几页长对吧

2715
01:32:25,000 --> 01:32:27,000
然后你想要肯定是说

2716
01:32:27,000 --> 01:32:27,000
你当协

2717
01:32:27,000 --> 01:32:29,000
编写的那边保存的时候

2718
01:32:29,000 --> 01:32:31,000
刚好是他刷新出来

2719
01:32:31,000 --> 01:32:33,000
在右边的那个 pdf 的那个

2720
01:32:33,000 --> 01:32:36,000
也是对应到你大致位置的这一行

2721
01:32:36,000 --> 01:32:37,000
但不能严格一对一行

2722
01:32:37,000 --> 01:32:40,000
就这个当时也很多 tricky 的办法

2723
01:32:40,000 --> 01:32:41,000
在做这件事情

2724
01:32:41,000 --> 01:32:43,000
这句话根本没有找到怎么解决

2725
01:32:43,000 --> 01:32:45,000
你刚才说你的典型编辑界面

2726
01:32:45,000 --> 01:32:47,000
但我的点型编辑界面就是

2727
01:32:47,000 --> 01:32:48,000
就只有原代码

2728
01:32:48,000 --> 01:32:50,000
就是我会 concentrate 的

2729
01:32:50,000 --> 01:32:51,000
我先把内容写完

2730
01:32:51,000 --> 01:32:54,000
然后再一个一个去解决

2731
01:32:54,000 --> 01:32:56,000
带给我的中种头上的问题

2732
01:32:57,000 --> 01:32:59,000
等于先写再排版这样

2733
01:32:59,000 --> 01:33:02,000
所以你是在编写原代码的时候

2734
01:33:02,000 --> 01:33:03,000
脑子里面在浮现出

2735
01:33:03,000 --> 01:33:04,000
他应该想要的效果

2736
01:33:04,000 --> 01:33:06,000
然后之后再去 debug

2737
01:33:06,000 --> 01:33:06,000
对

2738
01:33:06,000 --> 01:33:10,000
一个一个人肉 rundle 的这么一个过程

2739
01:33:10,000 --> 01:33:11,000
所以你写 markdown 也是这样子吧

2740
01:33:11,000 --> 01:33:13,000
先一遍 markdown source 写完

2741
01:33:13,000 --> 01:33:15,000
然后再 rundle 去进一段开销

2742
01:33:15,000 --> 01:33:16,000
再 preview 一下

2743
01:33:16,000 --> 01:33:18,000
而不是说这种 side by side 的方式

2744
01:33:18,000 --> 01:33:19,000
对差不多是这样

2745
01:33:19,000 --> 01:33:20,000
OK

2746
01:33:20,000 --> 01:33:22,000
没这看你取决于你写什么东西了

2747
01:33:22,000 --> 01:33:25,000
如果你还是一个常的普通的文档的话

2748
01:33:25,000 --> 01:33:26,000
那可能还好

2749
01:33:26,000 --> 01:33:28,000
我得比例因为比如说写论文的话

2750
01:33:28,000 --> 01:33:28,000
对吧

2751
01:33:28,000 --> 01:33:30,000
你论述的东西如果还是很长的话

2752
01:33:30,000 --> 01:33:34,000
你还是想去集中的先把论述的逻辑先写清楚

2753
01:33:35,000 --> 01:33:38,000
但是如果你要在渲染一个公式的时候

2754
01:33:38,000 --> 01:33:40,000
你得先想象一下

2755
01:33:40,000 --> 01:33:40,000
猜一下

2756
01:33:40,000 --> 01:33:42,000
然后渲染出来看上

2757
01:33:42,000 --> 01:33:44,000
哎这个好像又跑位了不行了

2758
01:33:44,000 --> 01:33:46,000
回来调调就会出现这个事情吧

2759
01:33:46,000 --> 01:33:48,000
不因为我可能用法比较奇怪

2760
01:33:48,000 --> 01:33:50,000
因为我用这个东西最常用的

2761
01:33:50,000 --> 01:33:51,000
倒不是写论文这种常文的

2762
01:33:51,000 --> 01:33:53,000
而是写作业的时候

2763
01:33:53,000 --> 01:33:55,000
因为我当时说我写字不是很丑吗

2764
01:33:55,000 --> 01:33:58,000
就是说丑到以至于我自己都不知道

2765
01:33:58,000 --> 01:34:00,000
我写的草稿真的是什么东西

2766
01:34:00,000 --> 01:34:02,000
所以我写作业的时候

2767
01:34:02,000 --> 01:34:05,000
其实我其实是在电脑上用 tact

2768
01:34:05,000 --> 01:34:08,000
拉 tact 这个方式去一步一步去进行演算的

2769
01:34:08,000 --> 01:34:09,000
所以我一定要看到最终结果

2770
01:34:09,000 --> 01:34:11,000
我在想下一步是什么

2771
01:34:11,000 --> 01:34:13,000
你用那个做双数是吧

2772
01:34:13,000 --> 01:34:14,000
对对对就有点这种感觉

2773
01:34:14,000 --> 01:34:16,000
比如说我要把那个图画的那个下一步怎么来的

2774
01:34:16,000 --> 01:34:18,000
我再用那个来画

2775
01:34:18,000 --> 01:34:19,000
对吧 我不会说

2776
01:34:19,000 --> 01:34:21,000
我在草稿纸上先把这个

2777
01:34:21,000 --> 01:34:22,000
就是作业写得差不多

2778
01:34:22,000 --> 01:34:24,000
然后再腾一遍腾到这个拉 tact 里面

2779
01:34:24,000 --> 01:34:25,000
我不是这么干的

2780
01:34:25,000 --> 01:34:28,000
对 还是看你写的内容怎么样

2781
01:34:28,000 --> 01:34:30,000
每个人写作的那个环境和写的内容不一样

2782
01:34:30,000 --> 01:34:32,000
用法就不一样了

2783
01:34:32,000 --> 01:34:34,000
对 尤其是如果你有很多公式的话

2784
01:34:34,000 --> 01:34:36,000
他要求你在写公式的时候

2785
01:34:36,000 --> 01:34:39,000
你能够确定知道自己的拉 tact 的公式是写的

2786
01:34:39,000 --> 01:34:40,000
写的是对的

2787
01:34:40,000 --> 01:34:42,000
这实际上对很多人来说还是蛮难的

2788
01:34:42,000 --> 01:34:43,000
很难的一件事情

2789
01:34:43,000 --> 01:34:44,000
就是你想象应该是对的

2790
01:34:44,000 --> 01:34:46,000
结果虽然他并不是这个样子

2791
01:34:47,000 --> 01:34:48,000
经常会出现这种情况

2792
01:34:48,000 --> 01:34:49,000
对

2793
01:34:49,000 --> 01:34:51,000
对对 我忘了说

2794
01:34:51,000 --> 01:34:51,000
还有一个

2795
01:34:51,000 --> 01:34:53,000
我其实应该说是一个三屏的

2796
01:34:53,000 --> 01:34:57,000
就是还有一个是那个 tact 的拉 tact 的那个对应的手册

2797
01:34:57,000 --> 01:34:59,000
因为你记不住那些符号啊

2798
01:34:59,000 --> 01:35:01,000
或者是那些公式到底是哪个

2799
01:35:01,000 --> 01:35:02,000
你得不断的去翻

2800
01:35:02,000 --> 01:35:05,000
然后包括那个 tikz 的那个会图的那个工具

2801
01:35:05,000 --> 01:35:06,000
它有一个非常完整的

2802
01:35:06,000 --> 01:35:08,000
就是也是一本书了本质上

2803
01:35:08,000 --> 01:35:10,000
一个 pdf 的册子

2804
01:35:10,000 --> 01:35:12,000
你要去找它里面到底是怎么去画这个箭头

2805
01:35:12,000 --> 01:35:13,000
怎么画到那里去

2806
01:35:13,000 --> 01:35:16,000
就是你事要随时去找 reference 的

2807
01:35:16,000 --> 01:35:18,000
嗯对

2808
01:35:18,000 --> 01:35:19,000
所以就很烦了

2809
01:35:19,000 --> 01:35:20,000
是是

2810
01:35:20,000 --> 01:35:22,000
这其实泰和除了我们讲

2811
01:35:22,000 --> 01:35:24,000
常用于这种数学啊理工这种之类

2812
01:35:24,000 --> 01:35:26,000
它还有一些这种奇奇怪怪的其他的用法

2813
01:35:26,000 --> 01:35:29,000
比如说有人来用这个做音乐啊

2814
01:35:29,000 --> 01:35:30,000
我也有看到

2815
01:35:30,000 --> 01:35:32,000
就是乐譜也可以用这个泰和的方式

2816
01:35:32,000 --> 01:35:35,000
就是写出非常严谨的这个美观的这个乐譜嘛

2817
01:35:35,000 --> 01:35:37,000
还有当时我看到还有很多

2818
01:35:37,000 --> 01:35:38,000
反正就是非常小众的用法

2819
01:35:38,000 --> 01:35:40,000
但因为我不是

2820
01:35:40,000 --> 01:35:42,000
我不是做那个方向的这个人嘛

2821
01:35:42,000 --> 01:35:44,000
我我我太理解他底层原理是什么

2822
01:35:44,000 --> 01:35:46,000
比如说我一直没有理解

2823
01:35:46,000 --> 01:35:48,000
他那个用泰和写武器

2824
01:35:48,000 --> 01:35:49,000
武线不是什么一个原理

2825
01:35:49,000 --> 01:35:51,000
你们知道吗

2826
01:35:51,000 --> 01:35:54,000
或者写那个就是那个就是音乐的那些东西

2827
01:35:54,000 --> 01:35:56,000
就是他应该也是有什么记号啊

2828
01:35:56,000 --> 01:35:58,000
各种专用的这个红啊之类的

2829
01:35:58,000 --> 01:35:58,000
但是我从来没用过

2830
01:35:58,000 --> 01:36:01,000
我我从来不知道怎么实现的

2831
01:36:01,000 --> 01:36:03,000
因为当时我还做过另外一种

2832
01:36:03,000 --> 01:36:04,000
efi 写比较 crazy 的事情

2833
01:36:04,000 --> 01:36:08,000
就是我不是觉得那个泰和的那个红编程

2834
01:36:08,000 --> 01:36:10,000
有一些那个语法什么的

2835
01:36:10,000 --> 01:36:11,000
不是太灵活吗

2836
01:36:11,000 --> 01:36:13,000
我甚至还在就是在

2837
01:36:13,000 --> 01:36:15,000
为了写一个写一个复杂的一个图形

2838
01:36:15,000 --> 01:36:17,000
他可能是要如果要守工去写

2839
01:36:17,000 --> 01:36:18,000
会非常的麻烦

2840
01:36:18,000 --> 01:36:20,000
我甚至是用比如说用 python

2841
01:36:20,000 --> 01:36:22,000
写了一个小程序

2842
01:36:22,000 --> 01:36:25,000
去生成输出的那个结果是拉太和

2843
01:36:25,000 --> 01:36:27,000
然后再 compile 成 ptf

2844
01:36:27,000 --> 01:36:29,000
得到那个我就是想要的那个图形

2845
01:36:29,000 --> 01:36:31,000
非常的 meta 这个过程

2846
01:36:33,000 --> 01:36:35,000
但事实上那个

2847
01:36:35,000 --> 01:36:37,000
web 的一个功能就是这个

2848
01:36:37,000 --> 01:36:40,000
他先去读取那一段程序

2849
01:36:40,000 --> 01:36:42,000
然后生成一段可以被

2850
01:36:42,000 --> 01:36:45,000
以太和来执行的程序

2851
01:36:45,000 --> 01:36:47,000
他基本上也是一个代码生成器

2852
01:36:47,000 --> 01:36:49,000
做乐谱的那个就是叫什么

2853
01:36:49,000 --> 01:36:50,000
music.tech

2854
01:36:50,000 --> 01:36:51,000
是吧

2855
01:36:51,000 --> 01:36:53,000
music.tech

2856
01:36:53,000 --> 01:36:54,000
那是 x 的

2857
01:36:54,000 --> 01:36:55,000
music.tech

2858
01:36:55,000 --> 01:36:57,000
但我这看人

2859
01:36:57,000 --> 01:36:58,000
这结果用过

2860
01:36:58,000 --> 01:37:00,000
但我不知道他到底是个怎么一个用法

2861
01:37:00,000 --> 01:37:01,000
但不过他还就是一个

2862
01:37:01,000 --> 01:37:03,000
还是一个红包嘛

2863
01:37:05,000 --> 01:37:08,000
对 所以我们今天很关键一点

2864
01:37:08,000 --> 01:37:09,000
就是说

2865
01:37:09,000 --> 01:37:11,000
我们所有在谈这个排版的时候

2866
01:37:11,000 --> 01:37:14,000
它是和字体配套的这个事情很关键

2867
01:37:14,000 --> 01:37:16,000
就像高德纳当时他做太和的时候

2868
01:37:16,000 --> 01:37:17,000
他自己做了一套字体

2869
01:37:18,000 --> 01:37:22,000
然后这个字体对应的这个排版

2870
01:37:22,000 --> 01:37:24,000
如何调用之后才能做出精细的排版

2871
01:37:24,000 --> 01:37:25,000
否则的话

2872
01:37:25,000 --> 01:37:28,000
他想实现这个的话没办法调用嘛

2873
01:37:28,000 --> 01:37:28,000
对吧

2874
01:37:28,000 --> 01:37:30,000
我们现在平面设计师经常就是

2875
01:37:30,000 --> 01:37:32,000
比如说我用 indexign

2876
01:37:32,000 --> 01:37:35,000
这个平面设计的这个页面的

2877
01:37:35,000 --> 01:37:36,000
软件所进行所得

2878
01:37:36,000 --> 01:37:36,000
但是呢

2879
01:37:36,000 --> 01:37:38,000
indexign 它需要调用的是

2880
01:37:38,000 --> 01:37:42,000
open type 这个字体里面的高级排版特性

2881
01:37:42,000 --> 01:37:45,000
所以说到底就是这个排版引擎和这个字体

2882
01:37:45,000 --> 01:37:47,000
它是相互相承的

2883
01:37:47,000 --> 01:37:49,000
那两边东西得配套好

2884
01:37:49,000 --> 01:37:50,000
要不然的话就是

2885
01:37:50,000 --> 01:37:52,000
很多事情你是在字体层面做呢

2886
01:37:52,000 --> 01:37:53,000
还是到排版引擎做呢

2887
01:37:53,000 --> 01:37:56,000
有很多事情你想不清楚有的时候会

2888
01:37:57,000 --> 01:37:59,000
然后高德纳就说什么事情都我来

2889
01:37:59,000 --> 01:38:02,000
有了这个 computer mode 的字体

2890
01:38:02,000 --> 01:38:03,000
然后呢有了太后

2891
01:38:03,000 --> 01:38:07,000
他就可以赋予这个作者所有的权利

2892
01:38:07,000 --> 01:38:09,000
full control of your work

2893
01:38:10,000 --> 01:38:12,000
所以高德纳他自己很开心

2894
01:38:13,000 --> 01:38:14,000
如果你知道怎么用的话

2895
01:38:14,000 --> 01:38:15,000
打个非常大的银行

2896
01:38:16,000 --> 01:38:18,000
就是你要学会那套东西才行

2897
01:38:19,000 --> 01:38:21,000
大宗是不是那么好当的

2898
01:38:21,000 --> 01:38:22,000
你要拿着选铁键

2899
01:38:22,000 --> 01:38:24,000
你得先拿得起来会舞才可以

2900
01:38:25,000 --> 01:38:26,000
他是 control frame

2901
01:38:26,000 --> 01:38:27,000
这是毫无疑问的

2902
01:38:28,000 --> 01:38:32,000
对这其实也是我们在排版工作中遇到的一个

2903
01:38:32,000 --> 01:38:33,000
难题吧

2904
01:38:33,000 --> 01:38:35,000
就是我们知道其实

2905
01:38:36,000 --> 01:38:37,000
无论是早前还是现在

2906
01:38:37,000 --> 01:38:38,000
现在当然更是了

2907
01:38:38,000 --> 01:38:42,000
字体其实已经成为了排版城市的一个构成部分

2908
01:38:42,000 --> 01:38:47,000
如果没有一个在功能上符合这个目标排版需求的字体的话

2909
01:38:47,000 --> 01:38:50,000
我们实际上是无法完成整个排版工作的

2910
01:38:50,000 --> 01:38:52,000
那这一点无论是在 tech 里面

2911
01:38:52,000 --> 01:38:54,000
甚至我们在这个 web 上面

2912
01:38:54,000 --> 01:38:56,000
就在网页上面也越来越是这样

2913
01:38:56,000 --> 01:38:58,000
我们需要更多的 open type feature

2914
01:38:58,000 --> 01:39:01,000
来实现一些复杂的排版

2915
01:39:01,000 --> 01:39:04,000
甚至只是为了实现一些复杂文字的排版

2916
01:39:04,000 --> 01:39:07,000
而这些文字的排版都没有什么特殊的需求

2917
01:39:07,000 --> 01:39:08,000
它都不是写公式

2918
01:39:08,000 --> 01:39:09,000
也不是纪月譜

2919
01:39:09,000 --> 01:39:13,000
它只是想把它自己国家那种语言的文字记录下来

2920
01:39:13,000 --> 01:39:15,000
我们就需要用到这样一些复杂的特性

2921
01:39:15,000 --> 01:39:22,000
这也是我们现在越来越难以纯粹的将这个内容和样式分离开来的一个原因

2922
01:39:22,000 --> 01:39:23,000
我比较好奇

2923
01:39:23,000 --> 01:39:25,000
就是因为我之前在用那个拉太克的时候

2924
01:39:25,000 --> 01:39:34,000
有大量的这种情况是没法用通过这种中间插入到 board 或者是这种 office 的方式里面去实现的

2925
01:39:34,000 --> 01:39:36,000
然后就必须要在里面同时解决

2926
01:39:36,000 --> 01:39:38,000
但是有一个非常 tricky 的一个需求是这样

2927
01:39:38,000 --> 01:39:41,000
比如说你要插一个图对吧

2928
01:39:41,000 --> 01:39:45,000
那个图很多不是有那种所谓的 label 文字的那种标签吗

2929
01:39:45,000 --> 01:39:50,000
你想要那个文字标签的字体形态风格和大小

2930
01:39:50,000 --> 01:39:52,000
有可能那个文字标签本来就是有数学公式对吧

2931
01:39:52,000 --> 01:39:59,000
有可能文字标签本来是一个就是一个要跟证文的那个字体和那个排音方式要一致的

2932
01:39:59,000 --> 01:40:03,000
那如果说你用一个第三方的这种图片插进去的话

2933
01:40:03,000 --> 01:40:05,000
就会出现各种各样奇怪的问题

2934
01:40:05,000 --> 01:40:06,000
比如说最简单一个情况

2935
01:40:06,000 --> 01:40:12,000
就是有我看到很多人就是他不用那个拉太和 tikzh 生成图片的这种情况下

2936
01:40:12,000 --> 01:40:16,000
他是说我在外面找一个通用的话图工具把它画了

2937
01:40:16,000 --> 01:40:21,000
做成一个一个 png 或者是这个 svg 或者是那个叫什么 eps 这种

2938
01:40:21,000 --> 01:40:23,000
识量图形或者是位图图形吧

2939
01:40:23,000 --> 01:40:25,000
如果他那个不能用识量来描述的话

2940
01:40:25,000 --> 01:40:27,000
然后他再导入到这个 ward 里面去

2941
01:40:27,000 --> 01:40:28,000
这就导致一个什么问题呢

2942
01:40:29,000 --> 01:40:30,000
因为他本上是两套拖劫东西

2943
01:40:30,000 --> 01:40:34,000
那个图片对周图的文字是没有意识的

2944
01:40:34,000 --> 01:40:38,000
那么你缩放那个图片就会导致图片里面的那些

2945
01:40:38,000 --> 01:40:43,000
那个 text label 那些文字标签的大小和外面的拖劫了就完全不一样

2946
01:40:43,000 --> 01:40:45,000
拖劫了嘛并不联动

2947
01:40:45,000 --> 01:40:49,000
甚至我们看到国内很多的这种就是用 ward 的写论文的人

2948
01:40:49,000 --> 01:40:51,000
那个论文一看就是 ward 写的为什么呢

2949
01:40:51,000 --> 01:40:56,000
因为他里面的那个插入的那个图片是比例是不对的

2950
01:40:56,000 --> 01:41:01,000
然后那个字型和周图的文字是与严重拖劫对吧

2951
01:41:01,000 --> 01:41:02,000
他字号都不一样

2952
01:41:02,000 --> 01:41:05,000
然后这个字体的完全是不是一个东西了

2953
01:41:05,000 --> 01:41:07,000
这些都是在太盒里面解决的比较好

2954
01:41:07,000 --> 01:41:10,000
他是你签入了一个太盒那种 lative 那种图形

2955
01:41:10,000 --> 01:41:13,000
他的那个文字 label 他还是用太盒来排版的

2956
01:41:13,000 --> 01:41:15,000
就他会非常的一致

2957
01:41:15,000 --> 01:41:20,000
不你那个图也必须要用安太盒的方法画嘛

2958
01:41:20,000 --> 01:41:20,000
对啊对啊

2959
01:41:20,000 --> 01:41:23,000
所以我就他必须是在同一个语境里面去嘛

2960
01:41:23,000 --> 01:41:24,000
就他没有这个割裂感

2961
01:41:24,000 --> 01:41:25,000
对

2962
01:41:26,000 --> 01:41:29,000
甚至你还有像那个我刚才讲那个 contact

2963
01:41:29,000 --> 01:41:30,000
非常诡异的需求

2964
01:41:30,000 --> 01:41:32,000
他可以实现什么呢

2965
01:41:32,000 --> 01:41:35,000
就是你的假设你想像一个页面上有一个插图

2966
01:41:35,000 --> 01:41:36,000
插图里面有一个箭头

2967
01:41:36,000 --> 01:41:37,000
箭头里面指导

2968
01:41:37,000 --> 01:41:41,000
你这页上某一段画的某一个字上面有一个符号

2969
01:41:41,000 --> 01:41:42,000
他可以指导那个上面去

2970
01:41:42,000 --> 01:41:46,000
这个在普通的那些里面那个插图的话是无法实现的嘛

2971
01:41:46,000 --> 01:41:46,000
体系里面

2972
01:41:46,000 --> 01:41:51,000
就是他是互相是之间是能够互相理解对方的结构的

2973
01:41:51,000 --> 01:41:52,000
他们说的是同样的语言

2974
01:41:52,000 --> 01:41:55,000
所以他能指的能定位能定的到

2975
01:41:55,000 --> 01:41:56,000
对对对对

2976
01:41:56,000 --> 01:41:57,000
如果你是插图的话

2977
01:41:57,000 --> 01:41:58,000
你就单纯的普通的

2978
01:41:58,000 --> 01:42:00,000
比如说是这个 PNG

2979
01:42:00,000 --> 01:42:05,000
你是无法从 PNG 插图里面去指向你的文档里面的某一个字的

2980
01:42:05,000 --> 01:42:06,000
因为他都不知道你要插向哪一个文档

2981
01:42:06,000 --> 01:42:07,000
对不对

2982
01:42:07,000 --> 01:42:10,000
这个还是有一个非常不一样的体验的

2983
01:42:11,000 --> 01:42:11,000
对

2984
01:42:11,000 --> 01:42:13,000
但其实这样子的这个排版

2985
01:42:13,000 --> 01:42:16,000
他他其实之所以他能排的这么准

2986
01:42:16,000 --> 01:42:18,000
他是因为所有的东西都是在一个

2987
01:42:18,000 --> 01:42:23,000
风类接近封闭的环境中实现出来了

2988
01:42:23,000 --> 01:42:24,000
如果从这一点来说

2989
01:42:24,000 --> 01:42:26,000
如果假如我们很极端

2990
01:42:26,000 --> 01:42:27,000
我们说我们写一篇论文

2991
01:42:27,000 --> 01:42:29,000
我们每个字都用 photoshop 来排

2992
01:42:29,000 --> 01:42:30,000
那他最后就是一张卫图

2993
01:42:30,000 --> 01:42:33,000
他必然每一个细节都可以排得很准

2994
01:42:33,000 --> 01:42:35,000
之所以我们用 word 来排

2995
01:42:35,000 --> 01:42:37,000
有的时候发现有一些图片的

2996
01:42:37,000 --> 01:42:41,000
里面内嵌的那些字体的样式跟整个文档的样式脱离了

2997
01:42:41,000 --> 01:42:43,000
是因为有可能他这个图片

2998
01:42:44,000 --> 01:42:45,000
并不是这个作品自己做

2999
01:42:45,000 --> 01:42:47,000
他可能从这地方拉了一张图片过来

3000
01:42:47,000 --> 01:42:48,000
这图片里面有一些文本

3001
01:42:48,000 --> 01:42:53,000
其实这个图片的生成环境都不是由他自己来控制的

3002
01:42:53,000 --> 01:42:54,000
那自然会产生这种

3003
01:42:54,000 --> 01:42:55,000
但 Tehare 的好处就是说

3004
01:42:55,000 --> 01:42:57,000
他如果说你都用

3005
01:42:57,000 --> 01:42:59,000
比如说你都用 tikz 来做图

3006
01:42:59,000 --> 01:43:02,000
他那个图的那部分代码是可以单独拷备出来的

3007
01:43:02,000 --> 01:43:04,000
所以你只要再做一些小小的修改

3008
01:43:04,000 --> 01:43:06,000
就可以让那张图无缝的

3009
01:43:06,000 --> 01:43:08,000
牵入到你自己那份文档里面去

3010
01:43:09,000 --> 01:43:10,000
就是你是有那个原代码的

3011
01:43:11,000 --> 01:43:13,000
而不是只有一个最终的结果

3012
01:43:14,000 --> 01:43:18,000
所以当年高老师说的

3013
01:43:18,000 --> 01:43:19,000
我用 Tehare 的话

3014
01:43:19,000 --> 01:43:21,000
我是不管你用什么设备

3015
01:43:21,000 --> 01:43:22,000
不过用用什么环境

3016
01:43:22,000 --> 01:43:23,000
最后生成东西都是一样的

3017
01:43:24,000 --> 01:43:24,000
对呀

3018
01:43:24,000 --> 01:43:28,000
这个就是他当初用做 Tehare 最基本的一个目的

3019
01:43:28,000 --> 01:43:29,000
对

3020
01:43:29,000 --> 01:43:30,000
所以我就很好奇

3021
01:43:30,000 --> 01:43:33,000
就是现在我们用的这种商业有用的排版工具

3022
01:43:33,000 --> 01:43:36,000
他是怎么解决这种类似的需求或者是问题

3023
01:43:36,000 --> 01:43:39,000
如果你在他自家的一个封闭的环境里实现

3024
01:43:39,000 --> 01:43:43,000
其实 Adobe 提供的工具也足以实现这样的需求

3025
01:43:43,000 --> 01:43:47,000
比如说你在 indexine 里面排一个很复杂的书籍

3026
01:43:47,000 --> 01:43:49,000
这书籍里面可能有一些图片

3027
01:43:49,000 --> 01:43:52,000
甚至图片上面会有一些小的文字标注

3028
01:43:52,000 --> 01:43:54,000
如果你这个图片是用 follow shop 做的

3029
01:43:54,000 --> 01:43:56,000
或者是用 elocitter 做的

3030
01:43:56,000 --> 01:43:59,000
然后你把 elocitter 做好的图像文件

3031
01:43:59,000 --> 01:44:02,000
以一个外列 link 的方式可以 link 到 indexine 内部

3032
01:44:02,000 --> 01:44:06,000
或者直接插入进去成为 indexine 文档的一部分

3033
01:44:06,000 --> 01:44:09,000
那你也可以几乎保持说

3034
01:44:09,000 --> 01:44:12,000
他不会产生任何意外的情况

3035
01:44:12,000 --> 01:44:13,000
他都是受你控制的

3036
01:44:13,000 --> 01:44:16,000
然后你也可以随时的在编辑那个图像文件里的内容

3037
01:44:16,000 --> 01:44:19,000
保持一个两边实实的同步更新

3038
01:44:19,000 --> 01:44:21,000
而且是 native 的更新

3039
01:44:21,000 --> 01:44:22,000
他可以实现说

3040
01:44:22,000 --> 01:44:23,000
刚才我说那种情况

3041
01:44:23,000 --> 01:44:27,000
就是某一个图片里面的一个元素

3042
01:44:27,000 --> 01:44:30,000
一个箭头指向这一页图像以外

3043
01:44:30,000 --> 01:44:33,000
但是还是这一页上的某一个文字的

3044
01:44:34,000 --> 01:44:35,000
某一个角落随便举个例子

3045
01:44:36,000 --> 01:44:37,000
你的意思是假如说

3046
01:44:37,000 --> 01:44:39,000
我下面这个被指向的文字

3047
01:44:39,000 --> 01:44:42,000
它因为比如说修改文本而被重排了

3048
01:44:42,000 --> 01:44:44,000
所以这个箭头还能不能始终指向它是不是

3049
01:44:45,000 --> 01:44:46,000
对 要跟着它走

3050
01:44:46,000 --> 01:44:47,000
不然没有意义

3051
01:44:48,000 --> 01:44:51,000
对 这部分可能在平面设计软件里还比较受限

3052
01:44:51,000 --> 01:44:53,000
因为这样的需求不强

3053
01:44:53,000 --> 01:44:55,000
或者说对平面设计师来说

3054
01:44:55,000 --> 01:44:57,000
如果产生了这样子的情况

3055
01:44:57,000 --> 01:45:00,000
它有可能需要人工来解决这种情况

3056
01:45:00,000 --> 01:45:06,000
因为它有可能觉得机器自动给它重新安排的这个结果并不满意

3057
01:45:07,000 --> 01:45:08,000
对 所以这个需求不那么的强

3058
01:45:10,000 --> 01:45:15,000
将来 Rail 的要求是他们要有所谓 interoperability

3059
01:45:15,000 --> 01:45:17,000
就是可以互相交互这个

3060
01:45:17,000 --> 01:45:18,000
对对对

3061
01:45:18,000 --> 01:45:22,000
这也是用 TEDE 中间我产生的一个非常奇妙的一个感觉

3062
01:45:22,000 --> 01:45:24,000
就是说你能感觉到它的强大

3063
01:45:24,000 --> 01:45:27,000
但是你也能感觉到它对你的制约

3064
01:45:27,000 --> 01:45:29,000
就是说有些它给你定一好的东西

3065
01:45:29,000 --> 01:45:30,000
你就只能那么去用它

3066
01:45:30,000 --> 01:45:32,000
比如说那条线要怎么走

3067
01:45:32,000 --> 01:45:35,000
当然你完全可以重新把那个红包打散

3068
01:45:35,000 --> 01:45:38,000
自己写一个让你足够满意的红包

3069
01:45:38,000 --> 01:45:38,000
对吧

3070
01:45:38,000 --> 01:45:40,000
但是那个过程是非常痛苦的一句

3071
01:45:40,000 --> 01:45:44,000
我就说将就像这个自己画轮子

3072
01:45:46,000 --> 01:45:47,000
对 自己画轮子很痛苦

3073
01:45:48,000 --> 01:45:52,000
对 其实 Rail 说的这种情况更像是我们现在用这个

3074
01:45:52,000 --> 01:45:54,000
web 排版里面实现的一些特性

3075
01:45:54,000 --> 01:45:57,000
也就是它有我们用一个很俗的词吗

3076
01:45:57,000 --> 01:46:00,000
就是它有一些 responsive 的特性在那里

3077
01:46:00,000 --> 01:46:00,000
是

3078
01:46:00,000 --> 01:46:02,000
它能根据你这个呈现媒介的改变

3079
01:46:02,000 --> 01:46:05,000
甚至包括你能实施的修改一些文本

3080
01:46:05,000 --> 01:46:09,000
但是还是保持着一些关键的排版特性的稳定性

3081
01:46:09,000 --> 01:46:12,000
就是那个 PDF 不是有一些这种可编程的功能吗

3082
01:46:12,000 --> 01:46:15,000
它可以切入 JavaScript 然后做一些交互吗

3083
01:46:15,000 --> 01:46:18,000
当时有一些那种比较疯狂的那个 text 的那种

3084
01:46:18,000 --> 01:46:20,000
这种就是先锋

3085
01:46:20,000 --> 01:46:22,000
它可以直接生成可交互的 PDF

3086
01:46:22,000 --> 01:46:25,000
比如说最简单的是用 contact 做那个换能片对吧

3087
01:46:25,000 --> 01:46:27,000
换能片不是有所谓的这个

3088
01:46:27,000 --> 01:46:29,000
这个这个快进下一页 业手业尾

3089
01:46:29,000 --> 01:46:32,000
或者是到某一下一个章节的标题这种都有的吗

3090
01:46:32,000 --> 01:46:35,000
它可以在 PDF 里面实现一个导航栏

3091
01:46:35,000 --> 01:46:37,000
都可以通过这个来实现 非常的厉害

3092
01:46:38,000 --> 01:46:39,000
对 PDF 实验表单也是可以的

3093
01:46:39,000 --> 01:46:40,000
你可以填表

3094
01:46:40,000 --> 01:46:41,000
对对

3095
01:46:41,000 --> 01:46:44,000
而且它会去自动数据收集嘛

3096
01:46:44,000 --> 01:46:47,000
但这个我觉得现在就是反倒是有一点示威了

3097
01:46:47,000 --> 01:46:48,000
就是我发现越到后来

3098
01:46:48,000 --> 01:46:52,000
就是说因为太狠说本说白了

3099
01:46:52,000 --> 01:46:57,000
它最终还是 99%是为了打印的那个场景设计的

3100
01:46:57,000 --> 01:46:59,000
排版它核心是一个排版

3101
01:46:59,000 --> 01:47:02,000
你们所有对它的过度使用其实都是雾用

3102
01:47:02,000 --> 01:47:04,000
对对对

3103
01:47:04,000 --> 01:47:07,000
就它还是为了这个打印出来再使用的嘛

3104
01:47:07,000 --> 01:47:09,000
但其实现在我们看很多

3105
01:47:09,000 --> 01:47:13,000
我其实已经很少把一篇论文打印出来再看

3106
01:47:13,000 --> 01:47:15,000
都是在电脑屏幕上看

3107
01:47:15,000 --> 01:47:19,000
就说那是否还有必要拘泥于这个 page

3108
01:47:19,000 --> 01:47:21,000
这个页面这个概念对吧

3109
01:47:21,000 --> 01:47:24,000
对其实这个概念已经开始在逐步淡化了

3110
01:47:24,000 --> 01:47:27,000
那像泰尔他花了很多时间去研究说

3111
01:47:27,000 --> 01:47:32,000
我要为了把这一篇这个文字和这个公式

3112
01:47:32,000 --> 01:47:35,000
完美的塞进一个固定的尺寸里面空间

3113
01:47:35,000 --> 01:47:36,000
我要做什么标点挤压

3114
01:47:36,000 --> 01:47:38,000
我要做各种什么这种

3115
01:47:38,000 --> 01:47:39,000
就什么分词

3116
01:47:40,000 --> 01:47:44,000
各种 have a nation 各种这种变种

3117
01:47:44,000 --> 01:47:47,000
这种操作的这个公式这么一行写不下

3118
01:47:47,000 --> 01:47:50,000
到底应该在 X 还是 Y 哪里哪个地方断开

3119
01:47:50,000 --> 01:47:52,000
这种非常细致的规则

3120
01:47:52,000 --> 01:47:56,000
但随着这种无限就是相对来说灵活的这种展示

3121
01:47:58,000 --> 01:47:59,000
界面的存在

3122
01:47:59,000 --> 01:48:01,000
它好像这个需求已经不那么强烈了

3123
01:48:01,000 --> 01:48:02,000
那无非看不下我就把那个

3124
01:48:03,000 --> 01:48:04,000
另外就算过拉宽一点嘛

3125
01:48:06,000 --> 01:48:08,000
在节目里最开始实际上我就提到了这一点

3126
01:48:08,000 --> 01:48:13,000
我觉得现在拉太可或者太可本身的定位

3127
01:48:13,000 --> 01:48:21,000
是一个比较精准的小众的局限在插入公式这一部分

3128
01:48:21,000 --> 01:48:24,000
就你拿真正能来拿太可来排版的人

3129
01:48:24,000 --> 01:48:27,000
实际上是就是你越来越少了

3130
01:48:27,000 --> 01:48:33,000
在整个的个人出版领域里面实际上是已经很小的一部分

3131
01:48:33,000 --> 01:48:37,000
反过来说宗师级的解决方案实际上是不适合普通人的

3132
01:48:38,000 --> 01:48:44,000
对他像排版这样一件其实高度依赖于视觉结果的这样一件工作

3133
01:48:45,000 --> 01:48:49,000
给你添加了一个比较抽象的中间的这样一个过程

3134
01:48:49,000 --> 01:48:52,000
他需要你用一些相对抽象的方式去描述你的排版

3135
01:48:52,000 --> 01:48:56,000
而不是像早期的平面设计师一样

3136
01:48:56,000 --> 01:49:00,000
他们甚至将一个简贴画剪下来直接粘到纸上的某一个位置

3137
01:49:00,000 --> 01:49:02,000
这样子的一个直观的过程

3138
01:49:03,000 --> 01:49:05,000
我觉得这是他比较难上手的一个原因

3139
01:49:06,000 --> 01:49:06,000
对

3140
01:49:07,000 --> 01:49:13,000
你使用这个东西是需要经过一套你并不就或说违反直觉的训练的

3141
01:49:14,000 --> 01:49:18,000
这个我觉得在很多设计师这边实际上是一个很大的阻力

3142
01:49:18,000 --> 01:49:22,000
就违反直觉这件事情在设计师这里是行不通的

3143
01:49:22,000 --> 01:49:25,000
也不叫违反直觉就是不直接

3144
01:49:25,000 --> 01:49:27,000
就是就是 not intuitive

3145
01:49:27,000 --> 01:49:31,000
就是就是他没有那么直观的意思

3146
01:49:31,000 --> 01:49:32,000
他不是 not intuitive

3147
01:49:32,000 --> 01:49:34,000
他是 counterintuitive

3148
01:49:34,000 --> 01:49:35,000
他是反直觉得

3149
01:49:36,000 --> 01:49:36,000
对对对

3150
01:49:36,000 --> 01:49:37,000
coupling

3151
01:49:37,000 --> 01:49:38,000
counterintuitive

3152
01:49:38,000 --> 01:49:41,000
就是他说的是反人性的你知道吗

3153
01:49:41,000 --> 01:49:45,000
他本质上让你变成一个叫做什么来的 interpreted

3154
01:49:45,000 --> 01:49:45,000
对吧

3155
01:49:45,000 --> 01:49:48,000
脚本解释器你要去运行这段结果

3156
01:49:48,000 --> 01:49:54,000
大概在您的脑子里面肉就是人脑去演算这个太和排版算法的结果

3157
01:49:54,000 --> 01:49:56,000
得到说他大概会长什么样子

3158
01:49:56,000 --> 01:49:58,000
然后你得得到那个 pdf

3159
01:49:58,000 --> 01:50:00,000
再看到底是不是你想的那个样子会不会什么

3160
01:50:00,000 --> 01:50:03,000
bounding box overflow 这种东西就出来了

3161
01:50:04,000 --> 01:50:06,000
这实际上就是编程对于人的异化过程

3162
01:50:07,000 --> 01:50:08,000
他是宗师的工具

3163
01:50:08,000 --> 01:50:10,000
他不是普通人的工具

3164
01:50:11,000 --> 01:50:11,000
对呀对呀

3165
01:50:14,000 --> 01:50:17,000
但是一开始刚才说到那个联字段词

3166
01:50:17,000 --> 01:50:19,000
have a nation 的那个算法

3167
01:50:19,000 --> 01:50:21,000
其实他做得挺好的

3168
01:50:21,000 --> 01:50:25,000
而且呢就是因为你人工排版的时候

3169
01:50:25,000 --> 01:50:27,000
你可能只能顾着这一行来排

3170
01:50:27,000 --> 01:50:31,000
但是他现在就是所就是所谓我们现在阿杜比的算法是

3171
01:50:31,000 --> 01:50:35,000
在当航排版器和段落排版器

3172
01:50:35,000 --> 01:50:38,000
他可以在根据这一整个段落的数航

3173
01:50:38,000 --> 01:50:42,000
那他能根据他的工事计算出一个最小的调整值

3174
01:50:42,000 --> 01:50:45,000
然后得出最佳的最下方案嘛

3175
01:50:45,000 --> 01:50:47,000
这个东西呢就是电脑上场做的东西

3176
01:50:47,000 --> 01:50:49,000
这还不是最狠的

3177
01:50:49,000 --> 01:50:51,000
太和做的更狠在上面

3178
01:50:51,000 --> 01:50:52,000
他可以做全局的优化

3179
01:50:52,000 --> 01:50:54,000
就是说这一整页里面

3180
01:50:54,000 --> 01:50:56,000
我觉得是不是要在这里断

3181
01:50:56,000 --> 01:51:00,000
会导致后面三个五个字安断之后的那个排版的

3182
01:51:00,000 --> 01:51:02,000
所以违反了一个更大的一个代价

3183
01:51:02,000 --> 01:51:04,000
他有一个整篇的全局优化的这个过程

3184
01:51:04,000 --> 01:51:05,000
他有好多个参数嘛

3185
01:51:05,000 --> 01:51:08,000
对而且而且我印象最深的就是说他

3186
01:51:08,000 --> 01:51:10,000
在相当长的一段时期内

3187
01:51:10,000 --> 01:51:13,000
他的那个就是编译啊编译那个太和文本

3188
01:51:13,000 --> 01:51:15,000
到最终这个 DVA 好 PDF 的结果

3189
01:51:15,000 --> 01:51:17,000
他不是这个 one pass 的

3190
01:51:17,000 --> 01:51:18,000
他不是一遍就完了

3191
01:51:18,000 --> 01:51:19,000
他可以 multipass

3192
01:51:19,000 --> 01:51:22,000
就是他去不断的去进行这个全局优化

3193
01:51:22,000 --> 01:51:26,000
然后使得说你你他你得到一个整充篇文稿里面

3194
01:51:26,000 --> 01:51:30,000
最小代价去违反那些排版规则的这个

3195
01:51:30,000 --> 01:51:32,000
这个总和的一个总成本吧

3196
01:51:32,000 --> 01:51:34,000
对像这个这类事情的话

3197
01:51:34,000 --> 01:51:37,000
就是计算机所上长的部分

3198
01:51:37,000 --> 01:51:39,000
就哪怕你是一个很训练

3199
01:51:39,000 --> 01:51:42,000
很几十年的一个高级的一个排版师

3200
01:51:42,000 --> 01:51:44,000
也也不会比这个计算机他做的

3201
01:51:44,000 --> 01:51:46,000
就经过计算以后

3202
01:51:46,000 --> 01:51:47,000
根据这个算法计算出来

3203
01:51:47,000 --> 01:51:50,000
那个演化采取的一个最优质会好嘛

3204
01:51:50,000 --> 01:51:51,000
对吧

3205
01:51:51,000 --> 01:51:53,000
所以这部分太和是很厉害的

3206
01:51:53,000 --> 01:51:54,000
但是反过来讲

3207
01:51:54,000 --> 01:51:58,000
如果就对于那个公式排版里面

3208
01:51:58,000 --> 01:52:01,000
比如说你要等号对其家动手宽啊

3209
01:52:01,000 --> 01:52:03,000
是不是这个这个控制多少

3210
01:52:03,000 --> 01:52:07,000
这个东西的话需要人再再重新去反渲染的话

3211
01:52:07,000 --> 01:52:10,000
这个的确就是不是机器所上长的东西

3212
01:52:10,000 --> 01:52:13,000
然后需要人进行非常多的干预嘛

3213
01:52:13,000 --> 01:52:16,000
但是我印象非常深的一个一个点

3214
01:52:16,000 --> 01:52:17,000
就是说当时我自己写诺文嘛

3215
01:52:17,000 --> 01:52:19,000
这里面跟普通的排版有点不太一样

3216
01:52:19,000 --> 01:52:22,000
就在于比如说比如说我我问一个

3217
01:52:22,000 --> 01:52:23,000
我理解应该是这样子

3218
01:52:23,000 --> 01:52:25,000
比如说你拿到一个别人的书

3219
01:52:25,000 --> 01:52:27,000
你要排你是不能改书的内容的嘛对不对

3220
01:52:27,000 --> 01:52:28,000
对对

3221
01:52:28,000 --> 01:52:30,000
但是因为我是自己写诺文

3222
01:52:30,000 --> 01:52:32,000
我知道写到那最后最后那一句话的时候

3223
01:52:32,000 --> 01:52:33,000
刚好就多了那么一行

3224
01:52:33,000 --> 01:52:36,000
然后你无论如何都调不回去

3225
01:52:36,000 --> 01:52:38,000
然后就不多一夜空空白夜的时候

3226
01:52:38,000 --> 01:52:40,000
你说你干脆把最后那段话改一下

3227
01:52:40,000 --> 01:52:41,000
说短一点点好不好

3228
01:52:41,000 --> 01:52:41,000
对吧

3229
01:52:41,000 --> 01:52:43,000
编辑其实是有这个权限的

3230
01:52:43,000 --> 01:52:47,000
编辑在排版之中起到的作用有时候就是这样

3231
01:52:47,000 --> 01:52:51,000
他觉得这篇文章可能排了一整页加一句话

3232
01:52:51,000 --> 01:52:53,000
那我把那句话改一改

3233
01:52:53,000 --> 01:52:54,000
或者把这个篇幅说一下

3234
01:52:54,000 --> 01:52:55,000
然后跟过来坐着沟通一下

3235
01:52:55,000 --> 01:52:56,000
就好对

3236
01:52:56,000 --> 01:52:58,000
所以编辑有这个权限

3237
01:52:58,000 --> 01:52:59,000
但是排版师没有这个权限

3238
01:52:59,000 --> 01:53:00,000
对对

3239
01:53:00,000 --> 01:53:03,000
比如你想这是一个非常有名的作家

3240
01:53:03,000 --> 01:53:04,000
一字千斤的

3241
01:53:04,000 --> 01:53:05,000
你敢改字吗不敢的

3242
01:53:05,000 --> 01:53:06,000
对呀

3243
01:53:06,000 --> 01:53:07,000
有违约了

3244
01:53:07,000 --> 01:53:08,000
会出事故的

3245
01:53:08,000 --> 01:53:11,000
这个所以呢编辑如果觉得有必要

3246
01:53:11,000 --> 01:53:14,000
他可能倒回去和作者去联系这个事情

3247
01:53:14,000 --> 01:53:17,000
再难的东西你对排版都能排得好

3248
01:53:17,000 --> 01:53:19,000
这才是你排版师的厉害之处嘛

3249
01:53:19,000 --> 01:53:21,000
你拿去改字这个算什么嘛

3250
01:53:22,000 --> 01:53:24,000
那所以本质上你看排版师

3251
01:53:24,000 --> 01:53:26,000
本质上也是一个人肉的那个对吧

3252
01:53:26,000 --> 01:53:28,000
那个就是 Layout

3253
01:53:28,000 --> 01:53:29,000
AutoLayout 的计算器

3254
01:53:29,000 --> 01:53:32,000
你要知道怎么排才能变得好看

3255
01:53:32,000 --> 01:53:36,000
你脑子中有各种各样的规则

3256
01:53:36,000 --> 01:53:36,000
对对

3257
01:53:36,000 --> 01:53:38,000
一个人肉的 Page Maker 对

3258
01:53:38,000 --> 01:53:40,000
我刚才查了一下

3259
01:53:40,000 --> 01:53:42,000
我才发现 Page Maker 这个东西已经在 2004 年

3260
01:53:42,000 --> 01:53:44,000
早就没有了

3261
01:53:44,000 --> 01:53:45,000
我的天哪

3262
01:53:45,000 --> 01:53:48,000
我一直想着找个机会去指证你

3263
01:53:48,000 --> 01:53:49,000
但是呢就没有机会

3264
01:53:49,000 --> 01:53:52,000
这十年来我都活在一个好人的感觉

3265
01:53:52,000 --> 01:53:55,000
对我们现在都用 indexign

3266
01:53:55,000 --> 01:53:57,000
而且你想 indexign 到 20 多年了

3267
01:53:57,000 --> 01:53:58,000
对我知道

3268
01:53:58,000 --> 01:53:59,000
其实我天天

3269
01:53:59,000 --> 01:54:02,000
就是我刚才所有提到 Page Maker 的地方

3270
01:54:02,000 --> 01:54:03,000
我想说的其实都是 indexign

3271
01:54:03,000 --> 01:54:04,000
就是那个

3272
01:54:04,000 --> 01:54:07,000
我甚至我能想起来那个 logo 是写的

3273
01:54:07,000 --> 01:54:10,000
id 但是我就 somehow 把他叫成了 page maker

3274
01:54:10,000 --> 01:54:12,000
上上个世纪的记忆实在是

3275
01:54:12,000 --> 01:54:14,000
用 indexign 的话

3276
01:54:14,000 --> 01:54:15,000
先不考虑钱

3277
01:54:15,000 --> 01:54:17,000
钱的问题它比较贵嘛

3278
01:54:17,000 --> 01:54:19,000
我有可能拿它来写别论吗

3279
01:54:19,000 --> 01:54:21,000
取决于你写什么级别的别论

3280
01:54:21,000 --> 01:54:23,000
就是刚才我想说了一个事情就是

3281
01:54:23,000 --> 01:54:25,000
不管是太和还是 indexign

3282
01:54:25,000 --> 01:54:26,000
实际上都有一个问题

3283
01:54:26,000 --> 01:54:31,000
就是他如果你要使用比较专业的 plot 工具的话

3284
01:54:31,000 --> 01:54:34,000
他们还是必须使用第三方的东西

3285
01:54:34,000 --> 01:54:35,000
比如说 matplotlib

3286
01:54:35,000 --> 01:54:37,000
公式很多会比较麻烦

3287
01:54:38,000 --> 01:54:38,000
对

3288
01:54:38,000 --> 01:54:41,000
它就是没有很好的公式处理工具

3289
01:54:41,000 --> 01:54:43,000
就是会那种

3290
01:54:43,000 --> 01:54:44,000
根据数据会出来的图对吧

3291
01:54:44,000 --> 01:54:46,000
它是没法支持这一点的

3292
01:54:46,000 --> 01:54:48,000
对或者是你画一什么

3293
01:54:48,000 --> 01:54:51,000
三位界面的三位里面的流行之类的东西

3294
01:54:51,000 --> 01:54:55,000
你要怎么用 tik z 来画

3295
01:54:55,000 --> 01:54:56,000
不可能的

3296
01:54:56,000 --> 01:54:57,000
所以这些东西其实还是有出现的

3297
01:54:57,000 --> 01:54:58,000
可以的

3298
01:54:59,000 --> 01:55:00,000
tik z 可以画

3299
01:55:00,000 --> 01:55:00,000
可以的

3300
01:55:00,000 --> 01:55:01,000
ok

3301
01:55:02,000 --> 01:55:03,000
可以画一些简单的

3302
01:55:03,000 --> 01:55:05,000
然后刚才我不是说我用 python

3303
01:55:05,000 --> 01:55:07,000
写了一个代码输出这个

3304
01:55:07,000 --> 01:55:12,000
然后 tik z 的那个代码

3305
01:55:12,000 --> 01:55:14,000
然后它实现了一个我想要的那个图形

3306
01:55:14,000 --> 01:55:17,000
为的就是解决刚才我说的那个问题

3307
01:55:17,000 --> 01:55:19,000
它画出那个图形

3308
01:55:19,000 --> 01:55:21,000
中间是有一些 text label

3309
01:55:21,000 --> 01:55:24,000
是需要跟周围的那个长相一致的

3310
01:55:24,000 --> 01:55:26,000
那你用任何其他的工具是没有办法实现这一点的

3311
01:55:26,000 --> 01:55:28,000
然后这又退回来

3312
01:55:28,000 --> 01:55:30,000
这个软件的本质

3313
01:55:30,000 --> 01:55:32,000
就是因为 teh 它是开放的开源的

3314
01:55:32,000 --> 01:55:33,000
如果你有这个需求

3315
01:55:33,000 --> 01:55:35,000
你自己去写个红写个包

3316
01:55:35,000 --> 01:55:36,000
你自己你自己造个轮子

3317
01:55:36,000 --> 01:55:38,000
然后你就可以添加功能

3318
01:55:38,000 --> 01:55:39,000
你就可以添加功能了

3319
01:55:39,000 --> 01:55:39,000
对吧

3320
01:55:39,000 --> 01:55:41,000
那你自己拿去用去

3321
01:55:41,000 --> 01:55:42,000
但是对于阿杜比公司来讲

3322
01:55:42,000 --> 01:55:44,000
index 再是他们装储的

3323
01:55:44,000 --> 01:55:46,000
然后你这个需求太小了

3324
01:55:46,000 --> 01:55:47,000
我干嘛要给你做呀对吧

3325
01:55:47,000 --> 01:55:50,000
然后这个东西

3326
01:55:50,000 --> 01:55:52,000
那你看就回到了那个开始

3327
01:55:52,000 --> 01:55:55,000
吴涛念的引用那段对自由软件的指责嘛

3328
01:55:55,000 --> 01:55:55,000
对吧

3329
01:55:55,000 --> 01:55:58,000
确实 index 是一个设计的非常好的工具

3330
01:55:58,000 --> 01:55:59,000
它具备非常

3331
01:55:59,000 --> 01:56:01,000
它凝聚了非常多工程师

3332
01:56:01,000 --> 01:56:04,000
多少多少的这个辛苦劳动的这个结果

3333
01:56:04,000 --> 01:56:06,000
但是它得到的结果也是非常的

3334
01:56:06,000 --> 01:56:08,000
这种 professional 专业的这种结果

3335
01:56:08,000 --> 01:56:10,000
但是它不能解决过这么一个

3336
01:56:10,000 --> 01:56:12,000
特别定制化小众的需求呀

3337
01:56:12,000 --> 01:56:15,000
所以你看在这个研究里

3338
01:56:15,000 --> 01:56:18,000
在这种特别是那种探索边界的那些人

3339
01:56:18,000 --> 01:56:21,000
他总是要遇到这种 adkiss

3340
01:56:21,000 --> 01:56:23,000
所以还是要用这种开放的

3341
01:56:23,000 --> 01:56:27,000
这种开源的自由的软件才能够实现它的那种

3342
01:56:27,000 --> 01:56:29,000
可能全世界就只有他

3343
01:56:29,000 --> 01:56:31,000
这么一个人在 20 年时间内用了这么一次

3344
01:56:31,000 --> 01:56:33,000
之后再也没有人想过这种需求了

3345
01:56:33,000 --> 01:56:35,000
index 肯定是不会做的

3346
01:56:36,000 --> 01:56:36,000
对

3347
01:56:36,000 --> 01:56:39,000
其实还是看你怎样衡量这个排版的工作量

3348
01:56:39,000 --> 01:56:41,000
比如说我们用 index 在理论上

3349
01:56:41,000 --> 01:56:44,000
你完全可以人肉的实现

3350
01:56:44,000 --> 01:56:46,000
所有工事编辑器可以实现的这个事情

3351
01:56:46,000 --> 01:56:49,000
排一个工事它结构很复杂

3352
01:56:49,000 --> 01:56:49,000
但它再复杂

3353
01:56:49,000 --> 01:56:52,000
它无非就是在一个二维的平面上

3354
01:56:52,000 --> 01:56:53,000
或者人工排它也可以

3355
01:56:53,000 --> 01:56:56,000
文字放到固定的位置

3356
01:56:56,000 --> 01:56:56,000
对

3357
01:56:56,000 --> 01:56:58,000
就 index 在完全有这个能力

3358
01:56:58,000 --> 01:57:01,000
而且做这件事情未必很复杂

3359
01:57:01,000 --> 01:57:04,000
就是它的学习成本首先非常的低

3360
01:57:04,000 --> 01:57:06,000
其二就是它未必很复杂

3361
01:57:06,000 --> 01:57:08,000
如果你的工事量不是非常的多

3362
01:57:08,000 --> 01:57:10,000
那就你这个如果就不成立了

3363
01:57:10,000 --> 01:57:12,000
这个如果不成立

3364
01:57:14,000 --> 01:57:16,000
说到 index 在做这个技术的书籍

3365
01:57:16,000 --> 01:57:18,000
如果我没记错的话

3366
01:57:18,000 --> 01:57:19,000
小林健的 cjkv

3367
01:57:19,000 --> 01:57:21,000
information processing 应该

3368
01:57:21,000 --> 01:57:22,000
第二版就是用 index 在

3369
01:57:22,000 --> 01:57:24,000
一般好像是 page maker 拍的

3370
01:57:24,000 --> 01:57:26,000
小林健随便写一个技术文档

3371
01:57:26,000 --> 01:57:27,000
都是用 index 在写的

3372
01:57:28,000 --> 01:57:30,000
这么硬核的吗

3373
01:57:30,000 --> 01:57:31,000
他自己一页一页就排吧

3374
01:57:31,000 --> 01:57:31,000
对

3375
01:57:31,000 --> 01:57:32,000
他自己做的

3376
01:57:32,000 --> 01:57:33,000
对

3377
01:57:33,000 --> 01:57:35,000
他是自点击的高德纳

3378
01:57:36,000 --> 01:57:37,000
所以说到底的话

3379
01:57:37,000 --> 01:57:38,000
对于他来讲的话

3380
01:57:38,000 --> 01:57:41,000
因为写文章是关键用的工具是什么

3381
01:57:41,000 --> 01:57:43,000
就是这次要吗

3382
01:57:43,000 --> 01:57:43,000
对于他来讲

3383
01:57:43,000 --> 01:57:45,000
他用 index 在上手

3384
01:57:45,000 --> 01:57:46,000
他就用 index 在嘛

3385
01:57:46,000 --> 01:57:46,000
对吧

3386
01:57:47,000 --> 01:57:50,000
这是好像中国有好多企业内部交换

3387
01:57:50,000 --> 01:57:51,000
文档全都是 ppt

3388
01:57:51,000 --> 01:57:54,000
就不管干嘛都是一个 ppt 发过来

3389
01:57:54,000 --> 01:57:56,000
所以我们本质上是需要一张数码白纸

3390
01:57:56,000 --> 01:57:57,000
对吧

3391
01:57:57,000 --> 01:57:58,000
不要给我加那么条条框框

3392
01:57:58,000 --> 01:58:00,000
我自己把它摆到那里就是那里

3393
01:58:00,000 --> 01:58:01,000
你所需要的就是说

3394
01:58:01,000 --> 01:58:03,000
怎么让我能够自由的

3395
01:58:03,000 --> 01:58:05,000
通过一个规则能够摆在那里

3396
01:58:05,000 --> 01:58:08,000
数码纸张其实就是 pdf 嘛

3397
01:58:08,000 --> 01:58:09,000
就是它是一个容器嘛

3398
01:58:09,000 --> 01:58:10,000
那你怎么再怎么打印

3399
01:58:10,000 --> 01:58:12,000
怎么划这个是另外的事情嘛

3400
01:58:12,000 --> 01:58:15,000
不但是就是 pdf 没法直接生成嘛

3401
01:58:15,000 --> 01:58:16,000
你得有一个工具才能生成它嘛

3402
01:58:16,000 --> 01:58:19,000
所以 keynote ppt 反而是比较

3403
01:58:19,000 --> 01:58:21,000
就是相对来说简洁直观的嘛

3404
01:58:21,000 --> 01:58:22,000
但确实也是啊

3405
01:58:22,000 --> 01:58:24,000
我看到很多人最终

3406
01:58:24,000 --> 01:58:25,000
他搞不定了

3407
01:58:25,000 --> 01:58:28,000
他就直接开一个这个这个这个这个 ppt

3408
01:58:29,000 --> 01:58:29,000
弄成白板

3409
01:58:29,000 --> 01:58:30,000
删掉所有分子

3410
01:58:30,000 --> 01:58:31,000
然后一个一个摆下

3411
01:58:31,000 --> 01:58:32,000
他需要的那个相对位置

3412
01:58:32,000 --> 01:58:33,000
也可以吧

3413
01:58:33,000 --> 01:58:35,000
本质上是你在白纸上用手写

3414
01:58:35,000 --> 01:58:37,000
然后再把它排成照是一样的嘛

3415
01:58:37,000 --> 01:58:41,000
呃 ppt 是我在我在研究生的时候

3416
01:58:41,000 --> 01:58:44,000
教的那个提教的论文的那个学术会议

3417
01:58:44,000 --> 01:58:45,000
他应该是他应该也是

3418
01:58:45,000 --> 01:58:47,000
iTrabo 一下属的一个学术会议

3419
01:58:47,000 --> 01:58:49,000
官方推荐的海报排版关系

3420
01:58:50,000 --> 01:58:52,000
海报甚至他给的官方

3421
01:58:52,000 --> 01:58:54,000
对就是你的你的论文有可能

3422
01:58:54,000 --> 01:58:56,000
就是你的 paper 有可能有两种发表型

3423
01:58:56,000 --> 01:58:58,000
是吗一种是呃 presentation

3424
01:58:58,000 --> 01:58:59,000
就是你去那边做一个演讲

3425
01:58:59,000 --> 01:59:03,000
另一种就是 post 就是你在会场贴一个海报

3426
01:59:03,000 --> 01:59:04,000
然后你站在海报旁边

3427
01:59:04,000 --> 01:59:06,000
等别人来跟你交流这样子

3428
01:59:06,000 --> 01:59:08,000
然后他的官方给你的这个

3429
01:59:08,000 --> 01:59:09,000
海报的排版模板

3430
01:59:09,000 --> 01:59:11,000
就是一个 pullpoint 的一个文件

3431
01:59:11,000 --> 01:59:14,000
就里面有各种什么会议的 logo 啊

3432
01:59:14,000 --> 01:59:16,000
元素啊这个

3433
01:59:17,000 --> 01:59:18,000
指定的字体样式都给你订好了

3434
01:59:18,000 --> 01:59:19,000
对吧

3435
01:59:19,000 --> 01:59:20,000
啊没有很简单

3436
01:59:20,000 --> 01:59:23,000
就是他会给你一个比较简单的框架吧

3437
01:59:23,000 --> 01:59:25,000
因为那些会议一般他没有什么 logo

3438
01:59:25,000 --> 01:59:26,000
他可能他可能主要还是

3439
01:59:26,000 --> 01:59:28,000
测重展示你自己的

3440
01:59:28,000 --> 01:59:29,000
他有一个格式嘛

3441
01:59:29,000 --> 01:59:30,000
对有一个大致的格式

3442
01:59:30,000 --> 01:59:31,000
通样的通用的格式

3443
01:59:32,000 --> 01:59:33,000
标题是什么

3444
01:59:33,000 --> 01:59:37,000
他作者是谁会名称某某地级界什么什么

3445
01:59:37,000 --> 01:59:38,000
conference 之类的这种

3446
01:59:38,000 --> 01:59:40,000
会给你订好了那个模板

3447
01:59:40,000 --> 01:59:42,000
这就在中间是一个大白板

3448
01:59:42,000 --> 01:59:43,000
你自己写吧

3449
01:59:43,000 --> 01:59:45,000
但其实你最后交的这个海报

3450
01:59:45,000 --> 01:59:47,000
如果跟他这个格式有很大差异

3451
01:59:47,000 --> 01:59:50,000
但是基本的文本信息是对上的话

3452
01:59:50,000 --> 01:59:52,000
他其实不会干涉你对这个设置的改变

3453
01:59:52,000 --> 01:59:54,000
你达到目的就可以了嘛

3454
01:59:54,000 --> 01:59:56,000
毕竟不是一个商业发行

3455
01:59:59,000 --> 02:00:00,000
说到底的话

3456
02:00:00,000 --> 02:00:02,000
对你现在再来讲

3457
02:00:02,000 --> 02:00:03,000
我认识了

3458
02:00:03,000 --> 02:00:04,000
有各种各样的不好的地方

3459
02:00:04,000 --> 02:00:06,000
当时无非就是高登了

3460
02:00:06,000 --> 02:00:08,000
他自己想把自己输印好了

3461
02:00:08,000 --> 02:00:10,000
然后人家很牛

3462
02:00:10,000 --> 02:00:12,000
他自己为了自己排书

3463
02:00:12,000 --> 02:00:14,000
他自己写了一个拍板引擎

3464
02:00:14,000 --> 02:00:16,000
自己做了一套自己

3465
02:00:16,000 --> 02:00:17,000
然后他写出来

3466
02:00:17,000 --> 02:00:19,000
但是他觉得挺好的

3467
02:00:19,000 --> 02:00:20,000
于是他就开源出来了

3468
02:00:20,000 --> 02:00:22,000
大家也可以用

3469
02:00:22,000 --> 02:00:23,000
就仅此而已嘛

3470
02:00:23,000 --> 02:00:25,000
事情就结束了嘛

3471
02:00:25,000 --> 02:00:26,000
你们爱怎么用

3472
02:00:26,000 --> 02:00:28,000
你们在爱怎么倒

3473
02:00:28,000 --> 02:00:30,000
这都是大家后来的事情了

3474
02:00:31,000 --> 02:00:32,000
他原来的目的

3475
02:00:32,000 --> 02:00:36,000
他觉得原来照牌排出来

3476
02:00:36,000 --> 02:00:38,000
把他自己的书太难看了

3477
02:00:38,000 --> 02:00:42,000
然后他希望他想对他的作品有 full control

3478
02:00:42,000 --> 02:00:44,000
完全的控制

3479
02:00:44,000 --> 02:00:46,000
所以他写出来这样一个东西

3480
02:00:46,000 --> 02:00:48,000
而且也只有像他这样的大事

3481
02:00:48,000 --> 02:00:53,000
才能把自己的字体和渲染引擎写出来嘛

3482
02:00:55,000 --> 02:00:56,000
而且好像自从那之后

3483
02:00:56,000 --> 02:00:59,000
从来没有人想过这件事情

3484
02:00:59,000 --> 02:01:00,000
我感觉

3485
02:01:00,000 --> 02:01:02,000
就是对吧

3486
02:01:02,000 --> 02:01:06,000
已经没有人有这种大量去尝试这件事情

3487
02:01:06,000 --> 02:01:07,000
对

3488
02:01:07,000 --> 02:01:09,000
对这件事情太跨学科了吧

3489
02:01:09,000 --> 02:01:12,000
他对自己排印的知识要求也非常高

3490
02:01:12,000 --> 02:01:13,000
我记得高德纳好像还跟

3491
02:01:13,000 --> 02:01:15,000
Cyphe 服有过很深度的合作

3492
02:01:15,000 --> 02:01:16,000
对没错

3493
02:01:16,000 --> 02:01:17,000
这我们也可以讲一讲

3494
02:01:17,000 --> 02:01:17,000
对

3495
02:01:17,000 --> 02:01:18,000
没有

3496
02:01:18,000 --> 02:01:20,000
他当时其实没想那么多

3497
02:01:20,000 --> 02:01:22,000
他就觉得这个太难看

3498
02:01:22,000 --> 02:01:23,000
然后自己写个

3499
02:01:23,000 --> 02:01:24,000
然后他当时一开始觉得说

3500
02:01:24,000 --> 02:01:27,000
这事情花几个月就能搞定的事情

3501
02:01:27,000 --> 02:01:30,000
然后他才发现他太乐观了

3502
02:01:30,000 --> 02:01:31,000
是个大坑

3503
02:01:31,000 --> 02:01:31,000
对

3504
02:01:33,000 --> 02:01:34,000
而且他一开始

3505
02:01:35,000 --> 02:01:37,000
他决定要做这个字体的时候

3506
02:01:37,000 --> 02:01:38,000
他其实也想了

3507
02:01:38,000 --> 02:01:40,000
他还想用别人的东西

3508
02:01:40,000 --> 02:01:41,000
而且他那时候失乐

3509
02:01:41,000 --> 02:01:43,000
不是那时候已经有那个实验室

3510
02:01:43,000 --> 02:01:44,000
有一些东西嘛

3511
02:01:44,000 --> 02:01:45,000
在打印机啊什么

3512
02:01:45,000 --> 02:01:46,000
他去问嘛

3513
02:01:46,000 --> 02:01:47,000
就说我能不能用

3514
02:01:47,000 --> 02:01:49,000
然后失乐跟他谈判的基础

3515
02:01:49,000 --> 02:01:50,000
就是说

3516
02:01:50,000 --> 02:01:52,000
你可以用我的设备

3517
02:01:52,000 --> 02:01:53,000
但是最后做出来的东西呢

3518
02:01:53,000 --> 02:01:54,000
又归于我失乐

3519
02:01:54,000 --> 02:01:56,000
然后他就不愿意了嘛

3520
02:01:56,000 --> 02:01:58,000
这东西最后做出来

3521
02:01:58,000 --> 02:02:00,000
应该开源啊给大家用嘛

3522
02:02:00,000 --> 02:02:01,000
所以他的话来就想不行

3523
02:02:01,000 --> 02:02:02,000
那想来想去

3524
02:02:02,000 --> 02:02:04,000
我还是得自己重新做

3525
02:02:04,000 --> 02:02:05,000
然后他发现

3526
02:02:05,000 --> 02:02:07,000
既然目前所有东西

3527
02:02:07,000 --> 02:02:10,000
他不能去改动现有的字体嘛

3528
02:02:10,000 --> 02:02:12,000
那他只好就重新再做一个字体

3529
02:02:12,000 --> 02:02:14,000
他要是学习的时候

3530
02:02:14,000 --> 02:02:16,000
发现你现在

3531
02:02:16,000 --> 02:02:19,000
无论是那些试量和那些点证的字体

3532
02:02:19,000 --> 02:02:20,000
都不能满足他要求

3533
02:02:20,000 --> 02:02:23,000
那我就干脆直接向

3534
02:02:23,000 --> 02:02:25,000
现成的字体设计师

3535
02:02:25,000 --> 02:02:27,000
去学如何画字

3536
02:02:27,000 --> 02:02:30,000
然后再用他的这个程序呢

3537
02:02:30,000 --> 02:02:32,000
教电脑如何画字

3538
02:02:32,000 --> 02:02:33,000
其实他做的那个

3539
02:02:33,000 --> 02:02:35,000
metaphone 的话是真正的

3540
02:02:35,000 --> 02:02:36,000
在画这个字嘛

3541
02:02:36,000 --> 02:02:38,000
因为我们现在用的这个试量

3542
02:02:38,000 --> 02:02:39,000
试量字体

3543
02:02:39,000 --> 02:02:40,000
它只是轮廓嘛

3544
02:02:40,000 --> 02:02:43,000
就把那个字体的勾边勾出来

3545
02:02:43,000 --> 02:02:45,000
但是 metaphone 的它是真正

3546
02:02:45,000 --> 02:02:47,000
他教他的那个

3547
02:02:47,000 --> 02:02:49,000
代码是在写这个字

3548
02:02:49,000 --> 02:02:51,000
应该怎么写一笔一画怎么写

3549
02:02:51,000 --> 02:02:52,000
对

3550
02:02:52,000 --> 02:02:54,000
就最终他是宣演出一个

3551
02:02:54,000 --> 02:02:55,000
未图的格式了

3552
02:02:55,000 --> 02:02:56,000
他的那个是试量的

3553
02:02:56,000 --> 02:02:57,000
但最后他

3554
02:02:57,000 --> 02:02:58,000
他最后必须得

3555
02:02:58,000 --> 02:03:00,000
选染成未图

3556
02:03:00,000 --> 02:03:02,000
最后呈现出来嘛

3557
02:03:02,000 --> 02:03:02,000
对吧

3558
02:03:02,000 --> 02:03:04,000
因为这个选染就是最后的事情

3559
02:03:04,000 --> 02:03:05,000
但是他的那个代码

3560
02:03:05,000 --> 02:03:06,000
最后是

3561
02:03:06,000 --> 02:03:07,000
他的确是教这个点

3562
02:03:07,000 --> 02:03:08,000
位移多少

3563
02:03:08,000 --> 02:03:10,000
这个笔画是怎么样的

3564
02:03:10,000 --> 02:03:12,000
然后再后再上面长肉是什么样的

3565
02:03:12,000 --> 02:03:13,000
三个 metaphone 的

3566
02:03:13,000 --> 02:03:15,000
其实是在画一个字嘛

3567
02:03:15,000 --> 02:03:16,000
他之所以有这样的

3568
02:03:16,000 --> 02:03:18,000
这样一个思路就是因为

3569
02:03:18,000 --> 02:03:18,000
他在做字体

3570
02:03:18,000 --> 02:03:22,000
他他是直接找这个字体设计师

3571
02:03:22,000 --> 02:03:24,000
他就当时就找 XPF

3572
02:03:24,000 --> 02:03:26,000
他们像比如我画个字母 A

3573
02:03:26,000 --> 02:03:28,000
先画右边一笔

3574
02:03:28,000 --> 02:03:29,000
左边一笔

3575
02:03:29,000 --> 02:03:30,000
然后那个呈现怎么加

3576
02:03:30,000 --> 02:03:32,000
然后再削掉一点

3577
02:03:32,000 --> 02:03:33,000
就是就一步一步

3578
02:03:33,000 --> 02:03:34,000
真的就是按那个写字的

3579
02:03:34,000 --> 02:03:36,000
这个步骤写出来的

3580
02:03:36,000 --> 02:03:38,000
一笔一笔写出来的就是

3581
02:03:38,000 --> 02:03:39,000
metaphone 是这样的

3582
02:03:39,000 --> 02:03:41,000
就是 metaphone 的机制

3583
02:03:41,000 --> 02:03:42,000
它是识量的

3584
02:03:42,000 --> 02:03:45,000
但是 metaphone 就会计的结果

3585
02:03:45,000 --> 02:03:46,000
好像是未图

3586
02:03:46,000 --> 02:03:47,000
它是个它是个 rathrizer

3587
02:03:47,000 --> 02:03:49,000
就是你要指定一个

3588
02:03:49,000 --> 02:03:52,000
他你在调用 metaphone 的时候

3589
02:03:52,000 --> 02:03:53,000
你要是你是要指定单位的

3590
02:03:53,000 --> 02:03:55,000
那这个单位是拿来干什么的

3591
02:03:55,000 --> 02:03:56,000
可能是拿来画

3592
02:03:56,000 --> 02:03:57,000
就是拿来定位的嘛

3593
02:03:58,000 --> 02:03:59,000
对 因为要 metaphone

3594
02:03:59,000 --> 02:04:01,000
你还得有字体知识

3595
02:04:01,000 --> 02:04:04,000
而做 metaphone 的厂商非常少

3596
02:04:04,000 --> 02:04:06,000
现在应该已经决计了吧

3597
02:04:06,000 --> 02:04:06,000
对

3598
02:04:08,000 --> 02:04:09,000
因为特别难写啊

3599
02:04:09,000 --> 02:04:11,000
因为他要就是等于交电脑

3600
02:04:11,000 --> 02:04:13,000
怎么写这个字

3601
02:04:13,000 --> 02:04:16,000
因此就是要 60 多个参数吧

3602
02:04:16,000 --> 02:04:18,000
就是老多参数了

3603
02:04:18,000 --> 02:04:20,000
这个对于一个设计师

3604
02:04:21,000 --> 02:04:23,000
而且他是非常不直观的

3605
02:04:23,000 --> 02:04:23,000
对吧

3606
02:04:23,000 --> 02:04:24,000
你是其实是书

3607
02:04:24,000 --> 02:04:25,000
你是在写代码

3608
02:04:25,000 --> 02:04:26,000
对啊

3609
02:04:26,000 --> 02:04:26,000
对啊

3610
02:04:26,000 --> 02:04:27,000
设了好多遍

3611
02:04:27,000 --> 02:04:28,000
你首先

3612
02:04:28,000 --> 02:04:31,000
我一个新的字体要设多少个变量

3613
02:04:31,000 --> 02:04:32,000
你得想嘛

3614
02:04:32,000 --> 02:04:33,000
对吧

3615
02:04:33,000 --> 02:04:34,000
然后这个参数

3616
02:04:34,000 --> 02:04:35,000
然后都要复制

3617
02:04:35,000 --> 02:04:37,000
然后怎么动起来

3618
02:04:37,000 --> 02:04:38,000
怎么加成一些

3619
02:04:38,000 --> 02:04:40,000
这个对于一个普通的设计师来讲

3620
02:04:40,000 --> 02:04:41,000
太不直观了

3621
02:04:41,000 --> 02:04:42,000
对

3622
02:04:42,000 --> 02:04:43,000
原来是这样

3623
02:04:44,000 --> 02:04:44,000
所以

3624
02:04:44,000 --> 02:04:46,000
所以其实现在也没有人

3625
02:04:46,000 --> 02:04:49,000
在用 metaphone 做字

3626
02:04:49,000 --> 02:04:51,000
然后当时我记得我用的时候

3627
02:04:51,000 --> 02:04:54,000
其实已经是过了那个时间段

3628
02:04:54,000 --> 02:04:55,000
就我用的那个时候

3629
02:04:55,000 --> 02:04:56,000
还有两个并行的系统

3630
02:04:56,000 --> 02:04:58,000
就是太和系统

3631
02:04:58,000 --> 02:05:00,000
要去引用一个系统字体啊

3632
02:05:00,000 --> 02:05:02,000
是非常困难的

3633
02:05:02,000 --> 02:05:04,000
但是还要转换格式

3634
02:05:04,000 --> 02:05:05,000
要转换成一个太和能够认

3635
02:05:05,000 --> 02:05:07,000
不是说你丢一个 tdf

3636
02:05:07,000 --> 02:05:08,000
或者是 open time 给他

3637
02:05:08,000 --> 02:05:10,000
他就能能能用了

3638
02:05:10,000 --> 02:05:10,000
但是后来

3639
02:05:10,000 --> 02:05:12,000
阅弹后来像什么

3640
02:05:12,000 --> 02:05:14,000
Z 太和

3641
02:05:14,000 --> 02:05:15,000
特别是 Z 太和出来之后

3642
02:05:15,000 --> 02:05:16,000
他是可以直接调用系统字体

3643
02:05:16,000 --> 02:05:17,000
因为他是 max 上面的

3644
02:05:17,000 --> 02:05:18,000
max 上面

3645
02:05:18,000 --> 02:05:20,000
他本来就是把这个 opentime 那套

3646
02:05:20,000 --> 02:05:22,000
做成一个系统级别的这个 API

3647
02:05:22,000 --> 02:05:25,000
可以暴露给上面的这个运用程序

3648
02:05:25,000 --> 02:05:28,000
所以他并没有像最原始的那个太和那种

3649
02:05:28,000 --> 02:05:28,000
你还得自己

3650
02:05:28,000 --> 02:05:30,000
用自己的什么 metaphone 那种

3651
02:05:30,000 --> 02:05:32,000
格式去描述一个字体

3652
02:05:32,000 --> 02:05:33,000
当时还有好多种

3653
02:05:33,000 --> 02:05:34,000
就是所谓的中间格式

3654
02:05:34,000 --> 02:05:35,000
什么 fone 1 啊

3655
02:05:35,000 --> 02:05:36,000
那些还中间还要转

3656
02:05:36,000 --> 02:05:37,000
转很多遍

3657
02:05:37,000 --> 02:05:39,000
后来都是可以直接

3658
02:05:39,000 --> 02:05:40,000
就调用系统里面存在的

3659
02:05:40,000 --> 02:05:42,000
opentime 或者是出 type 字体就可以了

3660
02:05:42,000 --> 02:05:45,000
也就不用再考虑什么 metaphone

3661
02:05:45,000 --> 02:05:47,000
包括这个甚至这个 computer model

3662
02:05:47,000 --> 02:05:49,000
后来也有人转成那个出 type

3663
02:05:49,000 --> 02:05:50,000
还是 opentime 的格式

3664
02:05:50,000 --> 02:05:53,000
放在那个 cool 里面就共直接使用嘛

3665
02:05:54,000 --> 02:05:55,000
而且就很重要一点

3666
02:05:55,000 --> 02:05:56,000
就是说大家感觉

3667
02:05:56,000 --> 02:05:57,000
字体就是他的一个造型

3668
02:05:57,000 --> 02:05:58,000
这个造型轮廓而已

3669
02:05:58,000 --> 02:06:00,000
其实更重要的对于排版的来讲

3670
02:06:00,000 --> 02:06:03,000
是很多里面的 metrics

3671
02:06:03,000 --> 02:06:05,000
就是他的那个度量信息

3672
02:06:05,000 --> 02:06:06,000
里面记录了

3673
02:06:06,000 --> 02:06:08,000
比如说这个极限是在什么位置

3674
02:06:08,000 --> 02:06:11,000
然后这个字的降步是有多高

3675
02:06:11,000 --> 02:06:12,000
声部有多高

3676
02:06:12,000 --> 02:06:15,000
这些东西都必须要让排版引擎

3677
02:06:15,000 --> 02:06:16,000
进行读取

3678
02:06:16,000 --> 02:06:17,000
他才能调啊

3679
02:06:17,000 --> 02:06:18,000
要不然他找

3680
02:06:18,000 --> 02:06:19,000
他不认得这个字的话

3681
02:06:19,000 --> 02:06:20,000
他没办法调

3682
02:06:20,000 --> 02:06:21,000
你上下标

3683
02:06:21,000 --> 02:06:23,000
你要给他挪多少位置之类的

3684
02:06:23,000 --> 02:06:24,000
极限要提高多少

3685
02:06:24,000 --> 02:06:26,000
这些东西都必须要

3686
02:06:26,000 --> 02:06:28,000
字体里面先要有这个信息

3687
02:06:28,000 --> 02:06:30,000
然后要让排版引擎知道

3688
02:06:30,000 --> 02:06:31,000
那大家知道

3689
02:06:31,000 --> 02:06:33,000
teh 和原来和 opentime

3690
02:06:33,000 --> 02:06:35,000
它原来根本就不是一个体系的

3691
02:06:35,000 --> 02:06:36,000
这个东西

3692
02:06:36,000 --> 02:06:37,000
所以他们两个人

3693
02:06:37,000 --> 02:06:38,000
即同压架

3694
02:06:38,000 --> 02:06:39,000
这两个东西之间

3695
02:06:39,000 --> 02:06:43,000
对要让他们互相交流到这个信息

3696
02:06:43,000 --> 02:06:45,000
然后让他们互相知道这个事情

3697
02:06:45,000 --> 02:06:46,000
本身就是一个很难的

3698
02:06:46,000 --> 02:06:48,000
对原来的话

3699
02:06:48,000 --> 02:06:51,000
高德纳他因为 metaphone

3700
02:06:51,000 --> 02:06:52,000
是他自己做的

3701
02:06:52,000 --> 02:06:54,000
他所有他自己新定义了一套 metrics

3702
02:06:56,000 --> 02:06:58,000
然后让 teh 和能调用

3703
02:06:58,000 --> 02:06:59,000
他自己做的东西就会

3704
02:06:59,000 --> 02:07:00,000
他自己好调用嘛

3705
02:07:00,000 --> 02:07:01,000
这个就正如

3706
02:07:02,000 --> 02:07:04,000
阿杜比他自己 open type

3707
02:07:04,000 --> 02:07:05,000
他这个 spec 就是

3708
02:07:05,000 --> 02:07:06,000
阿杜比他自己开发的

3709
02:07:06,000 --> 02:07:08,000
他然后

3710
02:07:08,000 --> 02:07:10,000
indexine 又是他自己的软件

3711
02:07:10,000 --> 02:07:11,000
所以他自己的软件

3712
02:07:11,000 --> 02:07:13,000
调 open type 特性就调得特别好嘛

3713
02:07:13,000 --> 02:07:15,000
所以你在方正的软件里面

3714
02:07:15,000 --> 02:07:16,000
排版软引擎里面

3715
02:07:16,000 --> 02:07:19,000
你要用阿杜比的 open type 特性

3716
02:07:19,000 --> 02:07:20,000
就特别难受

3717
02:07:20,000 --> 02:07:21,000
就调不出来嘛

3718
02:07:21,000 --> 02:07:24,000
因为他们不是一个系统的东西

3719
02:07:24,000 --> 02:07:26,000
那这些国产的这些系统软件

3720
02:07:26,000 --> 02:07:28,000
他难道还要说要求

3721
02:07:28,000 --> 02:07:30,000
用国产的自体格式才行吗

3722
02:07:30,000 --> 02:07:31,000
就他这个怎么解决这个问题呢

3723
02:07:32,000 --> 02:07:33,000
在很久以前

3724
02:07:34,000 --> 02:07:36,000
在方正软件外必须要用方正的自体

3725
02:07:37,000 --> 02:07:37,000
以前是不认的

3726
02:07:37,000 --> 02:07:40,000
方正自己有一个自体格式的

3727
02:07:40,000 --> 02:07:41,000
对 没错

3728
02:07:41,000 --> 02:07:42,000
是的

3729
02:07:42,000 --> 02:07:45,000
后来也是终于可以用 tdf 了

3730
02:07:45,000 --> 02:07:47,000
也能用 open type

3731
02:07:47,000 --> 02:07:48,000
这也是很后面的事情了

3732
02:07:48,000 --> 02:07:51,000
那现在这个业界不都统一到

3733
02:07:51,000 --> 02:07:54,000
这个出 type open type 这两个格式了

3734
02:07:54,000 --> 02:07:56,000
那现在所有的现代

3735
02:07:56,000 --> 02:07:58,000
排版软件都得支持吧

3736
02:07:58,000 --> 02:07:59,000
对呀

3737
02:08:00,000 --> 02:08:01,000
但是你也知道吧

3738
02:08:01,000 --> 02:08:03,000
open type 有一些微软

3739
02:08:03,000 --> 02:08:05,000
微软和阿杜比做的嘛

3740
02:08:06,000 --> 02:08:07,000
OK

3741
02:08:07,000 --> 02:08:09,000
这跟 WPS 之类的差不多嘛

3742
02:08:09,000 --> 02:08:09,000
其实

3743
02:08:10,000 --> 02:08:12,000
对 支持程度也可以不一样

3744
02:08:12,000 --> 02:08:14,000
因为你想一个自体里面

3745
02:08:14,000 --> 02:08:15,000
现在的 open type 自体

3746
02:08:15,000 --> 02:08:16,000
它的特性非常复杂

3747
02:08:16,000 --> 02:08:19,000
它有很多直到你怎样去排版的特性

3748
02:08:19,000 --> 02:08:21,000
而最早的一个出 type 的自体

3749
02:08:21,000 --> 02:08:23,000
它其实指核心的功能

3750
02:08:23,000 --> 02:08:24,000
就是描述一个

3751
02:08:24,000 --> 02:08:27,000
具体的 glyph 它的轮廓是什么样的

3752
02:08:27,000 --> 02:08:28,000
比较简单吧

3753
02:08:28,000 --> 02:08:30,000
方正其实它以前就是通过排版引擎

3754
02:08:30,000 --> 02:08:32,000
来实现很多排版的特性

3755
02:08:32,000 --> 02:08:34,000
但是现在可能业界更希望

3756
02:08:34,000 --> 02:08:38,000
大家能够遵循 open type 这个自体里面

3757
02:08:38,000 --> 02:08:39,000
已经写入的一些排版特性

3758
02:08:39,000 --> 02:08:41,000
来实现一些排版

3759
02:08:42,000 --> 02:08:44,000
就是这个权力到底是在排版

3760
02:08:44,000 --> 02:08:45,000
是那里还是在自体设计

3761
02:08:45,000 --> 02:08:46,000
是那里的问题吗

3762
02:08:46,000 --> 02:08:48,000
在哪个层级你要说好

3763
02:08:48,000 --> 02:08:50,000
然后你用互相调用就可以嘛

3764
02:08:51,000 --> 02:08:54,000
像 Tehre 和 Metaphones 都是同一个人做了

3765
02:08:54,000 --> 02:08:55,000
所以他自己想清楚

3766
02:08:55,000 --> 02:08:57,000
他自己做互相调用就很顺嘛

3767
02:08:57,000 --> 02:09:00,000
那你到另外一个系统去集同压斩

3768
02:09:00,000 --> 02:09:01,000
这个搞不清楚啊

3769
02:09:02,000 --> 02:09:02,000
是

3770
02:09:02,000 --> 02:09:05,000
因为毕竟互相都不能直接干预

3771
02:09:05,000 --> 02:09:07,000
对方的成果嘛

3772
02:09:07,000 --> 02:09:08,000
自己设计师也不能说

3773
02:09:08,000 --> 02:09:10,000
我这个自己只能用在哪些里

3774
02:09:10,000 --> 02:09:11,000
他也不知道你用场景是什么

3775
02:09:11,000 --> 02:09:14,000
只能给到你一些通用的建议对吧

3776
02:09:14,000 --> 02:09:15,000
然后排版室那边

3777
02:09:15,000 --> 02:09:17,000
这就是 hint

3778
02:09:17,000 --> 02:09:19,000
然后排版室那边也只能说

3779
02:09:19,000 --> 02:09:21,000
我根据我现在手上这个

3780
02:09:22,000 --> 02:09:24,000
作品的特殊的这个情况

3781
02:09:24,000 --> 02:09:26,000
选择要不要启用你的 hint

3782
02:09:26,000 --> 02:09:29,000
还是说我自己定一个规则

3783
02:09:29,000 --> 02:09:30,000
算了算了

3784
02:09:30,000 --> 02:09:30,000
对吧

3785
02:09:30,000 --> 02:09:31,000
因为有些特殊情况

3786
02:09:31,000 --> 02:09:32,000
只要特殊处理的嘛

3787
02:09:33,000 --> 02:09:33,000
搞个很简单的

3788
02:09:33,000 --> 02:09:34,000
就是网页排版

3789
02:09:34,000 --> 02:09:36,000
连一个横高都算不清楚嘛

3790
02:09:36,000 --> 02:09:37,000
就是这一点嘛

3791
02:09:37,000 --> 02:09:40,000
不同系统的

3792
02:09:40,000 --> 02:09:42,000
它读取的 OpenType 特性里面的字段

3793
02:09:42,000 --> 02:09:45,000
横高的数据字段是不一样的

3794
02:09:45,000 --> 02:09:48,000
那每个榴达器读出来的数值都不一样

3795
02:09:48,000 --> 02:09:50,000
它算出来的位置就不都不一样

3796
02:09:50,000 --> 02:09:52,000
它渲染出来的东西都不一样嘛

3797
02:09:53,000 --> 02:09:55,000
所以这一套有什么国标之类的吗

3798
02:09:55,000 --> 02:09:57,000
还是只有行业标准

3799
02:09:57,000 --> 02:09:59,000
就大家各自去想办法解决

3800
02:09:59,000 --> 02:10:01,000
这典型的 OpenType 就是一个商业标准

3801
02:10:01,000 --> 02:10:03,000
这行业巨头首先提出来的

3802
02:10:03,000 --> 02:10:05,000
因为是大厂商做的嘛

3803
02:10:05,000 --> 02:10:06,000
所以大家自然而然的

3804
02:10:06,000 --> 02:10:08,000
也就都跟进嘛

3805
02:10:08,000 --> 02:10:10,000
从这个侧面来讲的话

3806
02:10:10,000 --> 02:10:11,000
高德纳是一个人挑

3807
02:10:11,000 --> 02:10:14,000
就是单枪匹马做一套系统

3808
02:10:14,000 --> 02:10:16,000
然后我们在这边拿来和整个业界

3809
02:10:16,000 --> 02:10:18,000
做出来的一套系统相比

3810
02:10:18,000 --> 02:10:20,000
这是大宗师的风范对

3811
02:10:20,000 --> 02:10:21,000
不是错了

3812
02:10:21,000 --> 02:10:23,000
是大宗师做的时候

3813
02:10:23,000 --> 02:10:24,000
业界这个事情还不存在

3814
02:10:24,000 --> 02:10:25,000
没有这个业好吗

3815
02:10:25,000 --> 02:10:26,000
业界还不存在

3816
02:10:27,000 --> 02:10:28,000
没有这个行业

3817
02:10:29,000 --> 02:10:31,000
40 多年级 70 年代的事情嘛

3818
02:10:31,000 --> 02:10:32,000
对啊

3819
02:10:32,000 --> 02:10:34,000
所以那时候桌面排版是什么

3820
02:10:34,000 --> 02:10:35,000
那时候还没有 Mac

3821
02:10:35,000 --> 02:10:36,000
那个时候 PC 都没有

3822
02:10:36,000 --> 02:10:37,000
还桌面排版

3823
02:10:37,000 --> 02:10:40,000
对

3824
02:10:40,000 --> 02:10:41,000
所以从这个意义上讲

3825
02:10:41,000 --> 02:10:42,000
它真的是一个传奇

3826
02:10:42,000 --> 02:10:44,000
就是一个人开创了一个领域

3827
02:10:44,000 --> 02:10:47,000
但是而且这个领域的这个成果

3828
02:10:47,000 --> 02:10:51,000
到现在还是被被一些比较像他一样

3829
02:10:51,000 --> 02:10:54,000
比较喜欢走极端的人所使用着

3830
02:10:54,000 --> 02:10:57,000
而其他的熟民或者说没有那么

3831
02:10:58,000 --> 02:11:00,000
GEEK 的人们就在使用着另一套

3832
02:11:00,000 --> 02:11:03,000
可能更 User Friend 的一个系统

3833
02:11:03,000 --> 02:11:04,000
而他们最终的结果几乎是

3834
02:11:05,000 --> 02:11:06,000
不分博种

3835
02:11:06,000 --> 02:11:07,000
我不知道你们

3836
02:11:07,000 --> 02:11:08,000
但是有时候我会觉得

3837
02:11:08,000 --> 02:11:11,000
拍出来的东西太有风格性了

3838
02:11:11,000 --> 02:11:14,000
就是你一看就知道这是太和谐的

3839
02:11:14,000 --> 02:11:17,000
但是反过来一个用 word 或者是

3840
02:11:17,000 --> 02:11:18,000
word 也很有风格

3841
02:11:18,000 --> 02:11:20,000
你看着我

3842
02:11:20,000 --> 02:11:21,000
用艺术字

3843
02:11:21,000 --> 02:11:22,000
用 indexign

3844
02:11:22,000 --> 02:11:23,000
拍出来的东西

3845
02:11:23,000 --> 02:11:24,000
你就会不太知道

3846
02:11:24,000 --> 02:11:26,000
说这个东西到底是怎么来的

3847
02:11:26,000 --> 02:11:28,000
有时候太风格的话

3848
02:11:28,000 --> 02:11:30,000
可能也不是一件特别好的事情

3849
02:11:30,000 --> 02:11:31,000
这也是程度的问题嘛

3850
02:11:31,000 --> 02:11:33,000
它有点前天一律啊

3851
02:11:33,000 --> 02:11:35,000
很多人他不会配置那些太和

3852
02:11:35,000 --> 02:11:37,000
很多个性化的参数

3853
02:11:37,000 --> 02:11:39,000
因为调个性化要牵涉的很多

3854
02:11:39,000 --> 02:11:40,000
这种参数的变动

3855
02:11:40,000 --> 02:11:42,000
其实有时候不一定能得到好的结果

3856
02:11:42,000 --> 02:11:42,000
对还是那句话

3857
02:11:42,000 --> 02:11:44,000
You have to know everything to do anything

3858
02:11:44,000 --> 02:11:45,000
还是蛮难的

3859
02:11:45,000 --> 02:11:46,000
对啊

3860
02:11:46,000 --> 02:11:47,000
就哪怕是最简单的

3861
02:11:47,000 --> 02:11:49,000
你就换一个字体

3862
02:11:49,000 --> 02:11:51,000
比如说你就看不惯

3863
02:11:51,000 --> 02:11:52,000
computing modern

3864
02:11:52,000 --> 02:11:54,000
这种圆滚滚的这种长相的字体

3865
02:11:54,000 --> 02:11:55,000
当时我就有这个问题

3866
02:11:55,000 --> 02:11:57,000
我说我换成那个 paratino 对吧

3867
02:11:57,000 --> 02:11:59,000
我用的是 paratino 对

3868
02:11:59,000 --> 02:12:01,000
但是你一旦你用 paratino

3869
02:12:01,000 --> 02:12:03,000
你就要考虑你的那个公式的问题了

3870
02:12:03,000 --> 02:12:04,000
因为公式的

3871
02:12:04,000 --> 02:12:06,000
它当时很多那个 paratino 的那个

3872
02:12:06,000 --> 02:12:09,000
这个就是希腊字母

3873
02:12:09,000 --> 02:12:10,000
希腊字母罗马字母

3874
02:12:10,000 --> 02:12:11,000
它是不齐全的

3875
02:12:11,000 --> 02:12:12,000
或者你必须要用那个代理字体

3876
02:12:12,000 --> 02:12:14,000
你就会发现公式的特别难看

3877
02:12:14,000 --> 02:12:14,000
就是奇迹

3878
02:12:14,000 --> 02:12:16,000
第二个就是说数学排版

3879
02:12:16,000 --> 02:12:17,000
特别是公式排版的

3880
02:12:17,000 --> 02:12:18,000
但那个建具啊那些

3881
02:12:18,000 --> 02:12:20,000
那些就是那些 metrics

3882
02:12:20,000 --> 02:12:22,000
这些那些数值标注

3883
02:12:22,000 --> 02:12:24,000
它是根据那个字体来定制的

3884
02:12:24,000 --> 02:12:25,000
然后你换一套字体

3885
02:12:25,000 --> 02:12:27,000
它写在字体里头了

3886
02:12:27,000 --> 02:12:27,000
对

3887
02:12:27,000 --> 02:12:28,000
你就换到字体

3888
02:12:28,000 --> 02:12:30,000
你就发现那个就是更难看

3889
02:12:30,000 --> 02:12:30,000
就是更难看

3890
02:12:30,000 --> 02:12:31,000
就没有了

3891
02:12:31,000 --> 02:12:32,000
就很麻烦

3892
02:12:32,000 --> 02:12:34,000
所以到时候大家就最偷懒的方法

3893
02:12:34,000 --> 02:12:34,000
就是直接用

3894
02:12:34,000 --> 02:12:35,000
啥也不敢

3895
02:12:35,000 --> 02:12:36,000
直接写

3896
02:12:36,000 --> 02:12:36,000
对吧

3897
02:12:36,000 --> 02:12:37,000
写那种就好了

3898
02:12:37,000 --> 02:12:38,000
不要管它长的问题

3899
02:12:38,000 --> 02:12:40,000
而且不要去定制它的长相

3900
02:12:40,000 --> 02:12:42,000
所以用太和做出来的东西

3901
02:12:42,000 --> 02:12:43,000
都是一样的了

3902
02:12:43,000 --> 02:12:43,000
大家都知道

3903
02:12:43,000 --> 02:12:44,000
哦

3904
02:12:44,000 --> 02:12:45,000
这一看就知道这是太和写的嘛

3905
02:12:49,000 --> 02:12:50,000
也是一个传奇啊

3906
02:12:50,000 --> 02:12:52,000
机身单个单身机

3907
02:12:52,000 --> 02:12:52,000
但我不知道啊

3908
02:12:52,000 --> 02:12:55,000
就如果说以后的那种论文

3909
02:12:55,000 --> 02:12:58,000
如果不需要考虑是一个页的形式存在

3910
02:12:58,000 --> 02:12:59,000
它可以是一个 scroll 的吧

3911
02:12:59,000 --> 02:13:02,000
一个长卷轴的形式出现

3912
02:13:02,000 --> 02:13:03,000
那其实很多排版的难题

3913
02:13:03,000 --> 02:13:05,000
可以降很多维度

3914
02:13:05,000 --> 02:13:05,000
对

3915
02:13:05,000 --> 02:13:08,000
你第一次是把排版的难题转嫁到

3916
02:13:08,000 --> 02:13:08,000
牛载器上了

3917
02:13:10,000 --> 02:13:12,000
牛载器的引擎实际上就是一个排版引擎吧

3918
02:13:12,000 --> 02:13:14,000
就你不需要静态排版的

3919
02:13:14,000 --> 02:13:14,000
然后

3920
02:13:15,000 --> 02:13:16,000
不是啊

3921
02:13:16,000 --> 02:13:17,000
动态排版就一坨屎啊

3922
02:13:17,000 --> 02:13:19,000
现在就是你看 css 排版

3923
02:13:19,000 --> 02:13:20,000
现在能力那么差

3924
02:13:20,000 --> 02:13:21,000
觉得这一点

3925
02:13:21,000 --> 02:13:22,000
太难了

3926
02:13:22,000 --> 02:13:22,000
这真的太难了

3927
02:13:23,000 --> 02:13:24,000
没有需求嘛

3928
02:13:24,000 --> 02:13:25,000
就是这个问题

3929
02:13:25,000 --> 02:13:26,000
牛载机上上

3930
02:13:26,000 --> 02:13:28,000
天天要考虑各种安全问题

3931
02:13:29,000 --> 02:13:31,000
还要给你搞这种非常坑爹的排版

3932
02:13:31,000 --> 02:13:32,000
那怎么去死吧

3933
02:13:32,000 --> 02:13:33,000
你

3934
02:13:33,000 --> 02:13:34,000
你在 web 排版

3935
02:13:34,000 --> 02:13:36,000
你连对方用什么字体都不知道了

3936
02:13:36,000 --> 02:13:37,000
你得猜

3937
02:13:37,000 --> 02:13:38,000
现在不用了嘛

3938
02:13:38,000 --> 02:13:39,000
现在有要放的嘛

3939
02:13:39,000 --> 02:13:40,000
可以指定了吧

3940
02:13:40,000 --> 02:13:41,000
那只是说

3941
02:13:41,000 --> 02:13:42,000
那个最终体积的问题

3942
02:13:42,000 --> 02:13:43,000
还是不太好说

3943
02:13:44,000 --> 02:13:45,000
对呀

3944
02:13:47,000 --> 02:13:47,000
不过我们

3945
02:13:47,000 --> 02:13:49,000
自弹机上也花了两七时间

3946
02:13:49,000 --> 02:13:51,000
就讲 web 排版的事情

3947
02:13:51,000 --> 02:13:52,000
大家可以回去听

3948
02:13:53,000 --> 02:13:54,000
这次他没有说是哪一期

3949
02:13:54,000 --> 02:13:56,000
我已经很心愿了

3950
02:13:57,000 --> 02:13:58,000
你一定要逼我说吗

3951
02:13:59,000 --> 02:14:00,000
偶尔我也能一息想起来

3952
02:14:00,000 --> 02:14:02,000
那和恐慌聊过什么

3953
02:14:02,000 --> 02:14:04,000
因为刚好就是前两期

3954
02:14:04,000 --> 02:14:04,000
不圆了

3955
02:14:06,000 --> 02:14:06,000
OK

3956
02:14:06,000 --> 02:14:08,000
那今天也聊了好久

3957
02:14:08,000 --> 02:14:09,000
就好了

3958
02:14:09,000 --> 02:14:09,000
差不多了吧

3959
02:14:09,000 --> 02:14:11,000
我们说了这么多话好难解呢

3960
02:14:12,000 --> 02:14:13,000
是不是要收尾了

3961
02:14:13,000 --> 02:14:14,000
同学们

3962
02:14:14,000 --> 02:14:14,000
好吧

3963
02:14:14,000 --> 02:14:14,000
来

3964
02:14:14,000 --> 02:14:15,000
凹凸

3965
02:14:16,000 --> 02:14:18,000
好那我们今天的节目呢

3966
02:14:18,000 --> 02:14:20,000
就暂时告一段落

3967
02:14:21,000 --> 02:14:22,000
我们今天也是

3968
02:14:22,000 --> 02:14:24,000
我们现在就也提一下这事情

3969
02:14:24,000 --> 02:14:26,000
我们今天也是首次尝试

3970
02:14:26,000 --> 02:14:27,000
在 Clubhouse 上面

3971
02:14:27,000 --> 02:14:30,000
我们同步我们直播的

3972
02:14:30,000 --> 02:14:32,000
同步我们录播的这个内容

3973
02:14:32,000 --> 02:14:33,000
然后一个直播的形式

3974
02:14:33,000 --> 02:14:33,000
我们的

3975
02:14:34,000 --> 02:14:36,000
我们这房间还是哪多少人进来

3976
02:14:36,000 --> 02:14:38,000
还是要三十多个人

3977
02:14:39,000 --> 02:14:40,000
我们死忠粉丝

3978
02:14:40,000 --> 02:14:43,000
也非常感谢大家一起跟我们

3979
02:14:43,000 --> 02:14:44,000
完成了这期节目的录制

3980
02:14:45,000 --> 02:14:46,000
那自弹自唱

3981
02:14:47,000 --> 02:14:47,000
听众呢

3982
02:14:47,000 --> 02:14:49,000
如果想跟我们交流或者反馈

3983
02:14:49,000 --> 02:14:49,000
都可以写

3984
02:14:49,000 --> 02:14:50,000
有件告诉我们

3985
02:14:50,000 --> 02:14:54,000
我们的邮箱地址是 podcastatthedrive.com

3986
02:14:54,000 --> 02:14:55,000
podcastat

3987
02:14:55,000 --> 02:14:57,000
thtype.com

3988
02:14:57,000 --> 02:14:59,000
同时呢大家也可以在

3989
02:14:59,000 --> 02:15:00,000
新浪微博在推特

3990
02:15:00,000 --> 02:15:01,000
以及在微信上面

3991
02:15:01,000 --> 02:15:02,000
通过搜索

3992
02:15:02,000 --> 02:15:05,000
thetype.thtype 这个账号

3993
02:15:05,000 --> 02:15:06,000
关注到我们

3994
02:15:06,000 --> 02:15:08,000
在 Facebook 上搜索

3995
02:15:08,000 --> 02:15:09,000
the type 或者搜索

3996
02:15:09,000 --> 02:15:10,000
type is beautiful

3997
02:15:10,000 --> 02:15:11,000
也都可以找到我们

3998
02:15:12,000 --> 02:15:14,000
您刚刚收听到的节目是内核恐慌

3999
02:15:14,000 --> 02:15:17,000
一党尽量贴近计算机主题的

4000
02:15:17,000 --> 02:15:17,000
娱乐 podcast

4001
02:15:18,000 --> 02:15:19,000
我们号称硬活

4002
02:15:19,000 --> 02:15:20,000
但是也没有什么干货

4003
02:15:20,000 --> 02:15:21,000
想听人听不想听人听也听

4004
02:15:22,000 --> 02:15:24,000
我们的网址是 pam.icu

4005
02:15:24,000 --> 02:15:25,000
您可以在网上找到

4006
02:15:25,000 --> 02:15:26,000
订阅我们节目的方法

4007
02:15:26,000 --> 02:15:27,000
以及联络我们的方式

4008
02:15:27,000 --> 02:15:30,000
如果您期待我们更频繁的更新节目

4009
02:15:30,000 --> 02:15:31,000
欢迎您到爱发店我们捐款

4010
02:15:31,000 --> 02:15:33,000
相信可以在我们的网站上找到

4011
02:15:33,000 --> 02:15:35,000
先发店后推荐文明推荐

4012
02:15:35,000 --> 02:15:36,000
从你做起

4013
02:15:36,000 --> 02:15:37,000
如果您觉得意欧为尽

4014
02:15:37,000 --> 02:15:39,000
也欢迎您去收听

4015
02:15:39,000 --> 02:15:40,000
Rail 和黄海主持的节目

4016
02:15:40,000 --> 02:15:41,000
奉托圈

4017
02:15:41,000 --> 02:15:43,000
Rail 和人听主持的节目

4018
02:15:43,000 --> 02:15:43,000
提前怀旧

4019
02:15:43,000 --> 02:15:45,000
以及基本不有无套主持的

4020
02:15:45,000 --> 02:15:46,000
自坦自川

4021
02:15:47,000 --> 02:15:47,000
好

4022
02:15:48,000 --> 02:15:49,000
感谢大家收听

4023
02:15:49,000 --> 02:15:50,000
本期节目是由 Eric

4024
02:15:50,000 --> 02:15:52,000
在 BigSour 上剪辑制作完成的

4025
02:15:52,000 --> 02:15:53,000
我们下期节目再见

4026
02:15:53,000 --> 02:15:54,000
拜拜

4027
02:15:54,000 --> 02:15:55,000
拜拜

4028
02:15:55,000 --> 02:15:56,000
哇 你还会说这个

4029
02:15:57,000 --> 02:15:58,000
这是 meta 信息

4030
02:15:58,000 --> 02:15:59,000
就是我很注重 meta 的

4031
02:15:59,000 --> 02:16:00,000
知道吗

4032
02:16:01,000 --> 02:16:03,000
就像我们会看不是有封面吗

4033
02:16:03,000 --> 02:16:04,000
那照片是谁

4034
02:16:04,000 --> 02:16:05,000
在是几月几号

4035
02:16:05,000 --> 02:16:06,000
在什么地方拍的吗

4036
02:16:06,000 --> 02:16:08,000
有时候我把那个拍照设备

4037
02:16:08,000 --> 02:16:08,000
也写进去

4038
02:16:08,000 --> 02:16:10,000
然后我们的编辑就说

4039
02:16:10,000 --> 02:16:11,000
有必要写吗

4040
02:16:12,000 --> 02:16:12,000
对

