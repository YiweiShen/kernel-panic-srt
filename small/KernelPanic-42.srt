1
00:00:00,000 --> 00:00:02,000
321 开始

2
00:00:22,000 --> 00:00:27,000
大家好 今天是 7 月 26 号 自弹制唱的第 26 期

3
00:00:28,000 --> 00:00:31,000
同时也是内核恐慌应该是第 42 期

4
00:00:31,000 --> 00:00:33,000
我希望是第 42 期

5
00:00:33,000 --> 00:00:35,000
或者是 41 期

6
00:00:35,000 --> 00:00:37,000
为什么不可能吧

7
00:00:37,000 --> 00:00:39,000
不一定嘛

8
00:00:39,000 --> 00:00:45,000
我这个同时也是内核恐慌第 41 和 42 的纠缠态那一期

9
00:00:45,000 --> 00:00:50,000
大家听到的时候才可以 review 这道的是那一期

10
00:00:51,000 --> 00:00:56,000
自弹制唱是全球首家 用华语制作的自底白音主题播客节目

11
00:00:56,000 --> 00:00:59,000
我是主播文传西班牙动音剧 Eric

12
00:00:59,000 --> 00:01:02,000
我是主播黄浦江边青真语 潜真语

13
00:01:02,000 --> 00:01:07,000
您正在收听 ipin focus 的旅游主题主题的节目内容

14
00:01:07,000 --> 00:01:10,000
我们号称 Hotcore 但是没有干货 想听听听 不想听听就别听

15
00:01:10,000 --> 00:01:13,000
我是 Wu Tao 我是 Rail 我就不报画面

16
00:01:13,000 --> 00:01:16,000
对 我们还没想起那个画面 还是对吧 气势上

17
00:01:16,000 --> 00:01:18,000
算了吧 何必呢

18
00:01:19,000 --> 00:01:22,000
但是 Wu Tao 上次来 我来我们自弹制作家庭的时候

19
00:01:22,000 --> 00:01:24,000
已经有花名了 我帮他起的

20
00:01:24,000 --> 00:01:27,000
我觉得那个还是对 称之有愧

21
00:01:27,000 --> 00:01:29,000
因为我现在已经不再来一个合法了

22
00:01:29,000 --> 00:01:32,000
离多那好有可能还近一点的

23
00:01:32,000 --> 00:01:34,000
所以还是算了吧

24
00:01:34,000 --> 00:01:37,000
扭轮保内 卖塔胡啊

25
00:01:37,000 --> 00:01:39,000
啊 痛啊

26
00:01:40,000 --> 00:01:45,000
好 我们承轩 to the bone 不要这一套

27
00:01:46,000 --> 00:01:48,000
今天有没有口号吗

28
00:01:48,000 --> 00:01:51,000
今天好像也没有口号

29
00:01:51,000 --> 00:01:53,000
heroes never die

30
00:01:53,000 --> 00:01:55,000
太扯了

31
00:01:55,000 --> 00:01:57,000
好了 自弹自串

32
00:01:57,000 --> 00:01:59,000
我们这是第二期节目

33
00:01:59,000 --> 00:02:01,000
在第二期节目这是进入主题之前

34
00:02:01,000 --> 00:02:04,000
我们先来看一下第 1 期自弹自串

35
00:02:04,000 --> 00:02:06,000
有一些听众反馈对吧 正宇

36
00:02:06,000 --> 00:02:08,000
是

37
00:02:08,000 --> 00:02:10,000
那我来说一下

38
00:02:10,000 --> 00:02:13,000
首先我们收到了一封邮件

39
00:02:13,000 --> 00:02:16,000
一位属名叫胡萨 是吧

40
00:02:16,000 --> 00:02:19,000
胡萨的一位听众哥们的反馈

41
00:02:19,000 --> 00:02:22,000
是纠正独音的老传统

42
00:02:22,000 --> 00:02:25,000
他说四位主播好 再次小小纠正一下

43
00:02:25,000 --> 00:02:28,000
吃线的吃念吃 歌曲的齿念齿

44
00:02:28,000 --> 00:02:30,000
好吧 为什么

45
00:02:30,000 --> 00:02:32,000
好吧

46
00:02:32,000 --> 00:02:35,000
别问为什么 就是这样 多音字就是这样

47
00:02:35,000 --> 00:02:36,000
ok

48
00:02:36,000 --> 00:02:39,000
我们 now the 曲是 curve

49
00:02:39,000 --> 00:02:41,000
然后曲是 melody

50
00:02:41,000 --> 00:02:43,000
送

51
00:02:43,000 --> 00:02:45,000
好吧

52
00:02:45,000 --> 00:02:47,000
这可能跟以前什么一个是动词

53
00:02:47,000 --> 00:02:49,000
一个是形容词有关系

54
00:02:49,000 --> 00:02:51,000
一个是名词

55
00:02:51,000 --> 00:02:53,000
一个是名词 一个是形容词

56
00:02:53,000 --> 00:02:54,000
好像不行

57
00:02:54,000 --> 00:02:57,000
曲线是从 9 曲 18 弯的曲来的对吧

58
00:02:57,000 --> 00:02:59,000
就是拐弯的意思对吧

59
00:02:59,000 --> 00:03:01,000
对

60
00:03:01,000 --> 00:03:03,000
曲是

61
00:03:03,000 --> 00:03:05,000
是歌曲的曲

62
00:03:05,000 --> 00:03:08,000
对啊 所以你刚才你有念错了是曲线吗

63
00:03:08,000 --> 00:03:10,000
9 曲 18 弯

64
00:03:10,000 --> 00:03:12,000
对对对

65
00:03:12,000 --> 00:03:14,000
我念的是 9 曲 18 弯

66
00:03:14,000 --> 00:03:16,000
你变成那个曲吗 勾曲那个曲了

67
00:03:16,000 --> 00:03:20,000
这个字 这个字本意是指什么

68
00:03:20,000 --> 00:03:24,000
这个字本来指的是弯曲还是歌曲呢

69
00:03:24,000 --> 00:03:27,000
本意应该是弯曲

70
00:03:27,000 --> 00:03:29,000
然后歌曲是引声异

71
00:03:29,000 --> 00:03:32,000
指是字 一开始是指一个弯

72
00:03:32,000 --> 00:03:37,000
一开始指一个弯折乐的事物

73
00:03:37,000 --> 00:03:40,000
对啊 所以还是弯曲是它的本

74
00:03:40,000 --> 00:03:42,000
这个词源本意

75
00:03:42,000 --> 00:03:45,000
OK 所以音乐是引声异

76
00:03:45,000 --> 00:03:47,000
所以它还有一个意思

77
00:03:47,000 --> 00:03:49,000
就是我们都有用过的嘛

78
00:03:49,000 --> 00:03:51,000
就是你们再你们猜一下

79
00:03:51,000 --> 00:03:52,000
用这个用途的时候念哪个音

80
00:03:52,000 --> 00:03:55,000
就是用那个发教做久的那个东西

81
00:03:55,000 --> 00:03:57,000
曲吧 那是另一个字

82
00:03:57,000 --> 00:04:00,000
那是另外一个词讲话来的吧

83
00:04:00,000 --> 00:04:02,000
对 但那是另一个字

84
00:04:02,000 --> 00:04:04,000
就繁体它是有个麦字的旁的嘛

85
00:04:04,000 --> 00:04:06,000
对对对 那其实是另一个字

86
00:04:06,000 --> 00:04:09,000
就是用点曲 医生

87
00:04:09,000 --> 00:04:10,000
医生

88
00:04:10,000 --> 00:04:12,000
第一声 对 第一声 曲

89
00:04:12,000 --> 00:04:15,000
对 九曲啊 什么杨河大曲

90
00:04:15,000 --> 00:04:17,000
诶 广告

91
00:04:17,000 --> 00:04:20,000
没说前面 避掉

92
00:04:20,000 --> 00:04:24,000
然后还有一个曲

93
00:04:24,000 --> 00:04:25,000
是另外一个字

94
00:04:25,000 --> 00:04:27,000
是麦字旁一个菊花的菊

95
00:04:27,000 --> 00:04:30,000
不要那个草字头

96
00:04:30,000 --> 00:04:34,000
啊 那也是 那也是那个就是叫母嘛

97
00:04:34,000 --> 00:04:37,000
对对对 这个是这个是这个曲

98
00:04:37,000 --> 00:04:39,000
就九曲这个曲的异体字吧

99
00:04:39,000 --> 00:04:41,000
好像是

100
00:04:41,000 --> 00:04:42,000
没有 所以你现在说的就是说

101
00:04:42,000 --> 00:04:44,000
其实原来繁体字是三个字

102
00:04:44,000 --> 00:04:46,000
然后简化就变成一个字而已

103
00:04:46,000 --> 00:04:47,000
呃

104
00:04:47,000 --> 00:04:50,000
不 那个是用九曲的那个曲

105
00:04:50,000 --> 00:04:51,000
是简化成了这个东西

106
00:04:51,000 --> 00:04:55,000
但是前面那个弯曲和这个小拳

107
00:04:55,000 --> 00:04:58,000
它们好像原始就这样吧

108
00:04:58,000 --> 00:05:00,000
对对对 它们原来是两个字嘛

109
00:05:00,000 --> 00:05:01,000
没错没错

110
00:05:01,000 --> 00:05:03,000
现在被那个简并成了一个字

111
00:05:03,000 --> 00:05:05,000
啊 这个还可以是一个信

112
00:05:05,000 --> 00:05:07,000
好 再考你们了

113
00:05:07,000 --> 00:05:09,000
用作信的时候那念几声

114
00:05:09,000 --> 00:05:12,000
吃 对吃 应该是念医生嘛

115
00:05:12,000 --> 00:05:14,000
吃羊嘛 就是

116
00:05:14,000 --> 00:05:16,000
我记得那个下午江湖里面

117
00:05:16,000 --> 00:05:18,000
某派掌门人是不是就信吃的

118
00:05:18,000 --> 00:05:20,000
对对对 用作信是念医生的

119
00:05:20,000 --> 00:05:21,000
对

120
00:05:21,000 --> 00:05:23,000
好吧 这个中文就是坑爹啊

121
00:05:23,000 --> 00:05:25,000
诶 我问你们一个事

122
00:05:25,000 --> 00:05:27,000
那天那天那天我问到 那天我想到的

123
00:05:27,000 --> 00:05:31,000
你说手机和掌机有什么区别

124
00:05:32,000 --> 00:05:35,000
掌机是 Handel 的游戏机

125
00:05:35,000 --> 00:05:36,000
掌上游戏机的

126
00:05:36,000 --> 00:05:38,000
对 这是手机呢

127
00:05:39,000 --> 00:05:41,000
手机是这

128
00:05:41,000 --> 00:05:44,000
手上电话机 手持电话机

129
00:05:44,000 --> 00:05:46,000
然后我问你这是一个

130
00:05:46,000 --> 00:05:48,000
没有这个这个

131
00:05:48,000 --> 00:05:50,000
context 基础的外国人来学中文

132
00:05:50,000 --> 00:05:52,000
你说他怎么区分这两个东西呢

133
00:05:53,000 --> 00:05:56,000
诶 但是英文里面有 Hand set 这个词吧

134
00:05:56,000 --> 00:05:59,000
德语里面手机是 handi 嘛对吧

135
00:05:59,000 --> 00:06:00,000
对

136
00:06:00,000 --> 00:06:04,000
然后那个最早的那个 pda 是 pump 对吧

137
00:06:04,000 --> 00:06:05,000
对

138
00:06:05,000 --> 00:06:06,000
pump 就是掌

139
00:06:07,000 --> 00:06:10,000
掌机 怎么说什么时候变成游戏机了

140
00:06:10,000 --> 00:06:11,000
掌上游戏机啊

141
00:06:11,000 --> 00:06:12,000
对吧对吧对吧

142
00:06:12,000 --> 00:06:13,000
不是变来 这是个缩写吗

143
00:06:13,000 --> 00:06:15,000
这是个简称吗

144
00:06:15,000 --> 00:06:16,000
那手机呢

145
00:06:16,000 --> 00:06:18,000
手持电话机

146
00:06:18,000 --> 00:06:19,000
我刚才不是说

147
00:06:19,000 --> 00:06:20,000
原来是这么来的

148
00:06:20,000 --> 00:06:22,000
那手持和掌持有什么区别

149
00:06:22,000 --> 00:06:24,000
掌上和手持

150
00:06:24,000 --> 00:06:27,000
我就说 没有 就是手持和掌上有什么区别

151
00:06:27,000 --> 00:06:29,000
其实没有太大的区别

152
00:06:29,000 --> 00:06:32,000
因为这只是一个与用的习惯吧

153
00:06:32,000 --> 00:06:33,000
至少在我看完

154
00:06:33,000 --> 00:06:35,000
就是嘛 所以说我说很坑嘛

155
00:06:35,000 --> 00:06:37,000
就是没有任何理由

156
00:06:37,000 --> 00:06:40,000
因为他 你说手上拿个电话和手上拿个游戏机

157
00:06:40,000 --> 00:06:41,000
有本支区别吗

158
00:06:41,000 --> 00:06:43,000
掌上电话 这个说法好说

159
00:06:43,000 --> 00:06:45,000
对对对 但其实这个问题在

160
00:06:45,000 --> 00:06:46,000
在英文里也会出现

161
00:06:46,000 --> 00:06:48,000
比如给你一个手字母缩写的词

162
00:06:48,000 --> 00:06:50,000
他有可能代表了多个词

163
00:06:50,000 --> 00:06:52,000
必须有一个语境才可以去解读他

164
00:06:52,000 --> 00:06:54,000
对对对 我就是说这个

165
00:06:54,000 --> 00:06:57,000
就是中文有时候就是得靠这种 context 去积累

166
00:06:57,000 --> 00:06:58,000
没有

167
00:06:58,000 --> 00:06:59,000
没有这么过分

168
00:06:59,000 --> 00:07:01,000
这和语言 任何语言都一样

169
00:07:01,000 --> 00:07:03,000
你给你一个 sell

170
00:07:03,000 --> 00:07:06,000
没有上下来 你怎么知道他指的是求是还是

171
00:07:06,000 --> 00:07:08,000
细胞

172
00:07:08,000 --> 00:07:09,000
还是那个

173
00:07:09,000 --> 00:07:12,000
不是 通讯的那个 通讯

174
00:07:12,000 --> 00:07:14,000
对吧

175
00:07:14,000 --> 00:07:15,000
但这两个是同理的呀

176
00:07:15,000 --> 00:07:18,000
而且在我们今天的这个话题下

177
00:07:18,000 --> 00:07:21,000
sell 好像在中文里还被翻译成 wish 吧

178
00:07:21,000 --> 00:07:23,000
比如那个吃味马的 wish

179
00:07:23,000 --> 00:07:25,000
其实指的就是 sell

180
00:07:25,000 --> 00:07:26,000
是这样的吗

181
00:07:26,000 --> 00:07:28,000
对 吃味马就是 roll sell 的意思

182
00:07:28,000 --> 00:07:29,000
好

183
00:07:29,000 --> 00:07:30,000
OK

184
00:07:30,000 --> 00:07:31,000
好

185
00:07:31,000 --> 00:07:32,000
好

186
00:07:36,000 --> 00:07:39,000
第二个是在 tib 的这个帖子下面

187
00:07:39,000 --> 00:07:40,000
给我们留言

188
00:07:40,000 --> 00:07:41,000
其实有两位给我们留言

189
00:07:41,000 --> 00:07:43,000
一位说有关

190
00:07:43,000 --> 00:07:46,000
这位的署名叫 Johnny Jung

191
00:07:46,000 --> 00:07:49,000
他应该是一位韩国人

192
00:07:49,000 --> 00:07:51,000
这也是我们听众吧

193
00:07:51,000 --> 00:07:53,000
对 但看他这个信的邪法

194
00:07:53,000 --> 00:07:54,000
有点像韩国的

195
00:07:54,000 --> 00:07:55,000
是吧

196
00:07:55,000 --> 00:07:56,000
你们这么国际话

197
00:07:56,000 --> 00:07:57,000
信

198
00:07:57,000 --> 00:07:58,000
信影

199
00:07:58,000 --> 00:08:03,000
他说有关键盘键位和键位的印射的

200
00:08:03,000 --> 00:08:06,000
移动设备 mouse 又是一般风景了吧

201
00:08:06,000 --> 00:08:09,000
各国的九键布局之类的

202
00:08:09,000 --> 00:08:10,000
他的意思就是说

203
00:08:10,000 --> 00:08:13,000
我们那期说到键盘和键位印射的时候

204
00:08:13,000 --> 00:08:15,000
没有提到这个

205
00:08:15,000 --> 00:08:17,000
九键布局的键盘

206
00:08:17,000 --> 00:08:19,000
九键是那个九棍格那种吗

207
00:08:19,000 --> 00:08:20,000
应该是吧

208
00:08:20,000 --> 00:08:22,000
就 tanky 吗是那个字吗

209
00:08:22,000 --> 00:08:24,000
在英文里面叫 tanky 吧

210
00:08:24,000 --> 00:08:25,000
是叫 tanky 吗

211
00:08:25,000 --> 00:08:26,000
对 十键

212
00:08:26,000 --> 00:08:28,000
日语叫 tanky

213
00:08:28,000 --> 00:08:30,000
为什么是 tanky 呢

214
00:08:30,000 --> 00:08:31,000
因为 12345678990

215
00:08:31,000 --> 00:08:32,000
10 个键吧

216
00:08:32,000 --> 00:08:34,000
里面有零 为什么叫九棍格

217
00:08:36,000 --> 00:08:38,000
他是一个一般来说

218
00:08:38,000 --> 00:08:40,000
是一个 3×4 的矩阵

219
00:08:40,000 --> 00:08:41,000
但是

220
00:08:41,000 --> 00:08:43,000
对啊 一个 12 个键

221
00:08:43,000 --> 00:08:47,000
在英文版的 iOS 里面

222
00:08:47,000 --> 00:08:48,000
你加九棍格键盘

223
00:08:48,000 --> 00:08:49,000
他英文也是叫拼音

224
00:08:49,000 --> 00:08:50,000
然后 10

225
00:08:50,000 --> 00:08:51,000
就是 tanky

226
00:08:51,000 --> 00:08:52,000
10 个键

227
00:08:54,000 --> 00:08:55,000
没什么意思

228
00:08:55,000 --> 00:08:57,000
所以其实这里有一个问题

229
00:08:57,000 --> 00:08:58,000
是这样的

230
00:08:58,000 --> 00:08:59,000
我一直很不确定

231
00:08:59,000 --> 00:09:02,000
这种触屏的这种屏幕上的输入法

232
00:09:02,000 --> 00:09:04,000
他有那个就是

233
00:09:04,000 --> 00:09:05,000
叫什么

234
00:09:05,000 --> 00:09:06,000
那个 keycode 的概念吗

235
00:09:06,000 --> 00:09:07,000
应该没有了吧

236
00:09:07,000 --> 00:09:08,000
触屏上面应该没有吧

237
00:09:08,000 --> 00:09:09,000
但是以前

238
00:09:09,000 --> 00:09:11,000
就是电话机上是怎么实现的

239
00:09:11,000 --> 00:09:13,000
电话机是模拟信号

240
00:09:14,000 --> 00:09:16,000
电话机以前是靠声音的长短

241
00:09:16,000 --> 00:09:17,000
是对

242
00:09:17,000 --> 00:09:19,000
对 做了个 mode 等那种方式

243
00:09:20,000 --> 00:09:22,000
对 所以其实我们可以认为

244
00:09:22,000 --> 00:09:25,000
这个九键布置的键盘

245
00:09:25,000 --> 00:09:28,000
他相当于是含了一层输入法

246
00:09:28,000 --> 00:09:30,000
如果他不只是输入数字的话

247
00:09:30,000 --> 00:09:32,000
可以这么理解

248
00:09:32,000 --> 00:09:33,000
而且那个还挺复杂的

249
00:09:33,000 --> 00:09:35,000
他比如说那个 tanky 上面

250
00:09:35,000 --> 00:09:37,000
不是每个键他有三个字母吗

251
00:09:37,000 --> 00:09:39,000
abc 1 def

252
00:09:39,000 --> 00:09:41,000
然后就是在欧美生活的人

253
00:09:41,000 --> 00:09:42,000
很多都知道

254
00:09:42,000 --> 00:09:44,000
就是他们会电话号码

255
00:09:44,000 --> 00:09:45,000
他不会写

256
00:09:45,000 --> 00:09:46,000
比如中国 dose house

257
00:09:46,000 --> 00:09:47,000
888

258
00:09:47,000 --> 00:09:48,000
666 这种什么

259
00:09:48,000 --> 00:09:49,000
比较好记的数字

260
00:09:49,000 --> 00:09:50,000
但是他们会很取巧的

261
00:09:50,000 --> 00:09:51,000
直接把那个转写成

262
00:09:51,000 --> 00:09:53,000
他需要的那个字母的组合

263
00:09:54,000 --> 00:09:56,000
比如说那个苹果的那个

264
00:09:56,000 --> 00:09:57,000
那个 800 电话

265
00:09:57,000 --> 00:09:58,000
他写的是 800

266
00:09:58,000 --> 00:10:00,000
然后 Apple 对吧

267
00:10:01,000 --> 00:10:02,000
对

268
00:10:02,000 --> 00:10:03,000
然后你就照着那个 tanky 上面

269
00:10:03,000 --> 00:10:05,000
比如你拿出你的那个

270
00:10:05,000 --> 00:10:06,000
那个手机吗

271
00:10:06,000 --> 00:10:07,000
然后你找那个

272
00:10:07,000 --> 00:10:08,000
不耗那个键盘

273
00:10:08,000 --> 00:10:09,000
你看他每个键

274
00:10:09,000 --> 00:10:10,000
就是上面是

275
00:10:10,000 --> 00:10:11,000
A 是 2 吗

276
00:10:11,000 --> 00:10:12,000
对 你就按 A 嘛

277
00:10:12,000 --> 00:10:13,000
然后就是 2 对吧

278
00:10:13,000 --> 00:10:14,000
17 是 7 吗

279
00:10:14,000 --> 00:10:15,000
按两下就 277

280
00:10:15,000 --> 00:10:18,000
27753

281
00:10:18,000 --> 00:10:19,000
对对对

282
00:10:19,000 --> 00:10:20,000
就是打到是

283
00:10:20,000 --> 00:10:21,000
比如说就是苹果的

284
00:10:21,000 --> 00:10:22,000
一个客服电话

285
00:10:22,000 --> 00:10:23,000
就很多厂商

286
00:10:23,000 --> 00:10:25,000
就会去做这么一种转化

287
00:10:25,000 --> 00:10:26,000
但是好像

288
00:10:26,000 --> 00:10:27,000
我中国从来没有见过

289
00:10:27,000 --> 00:10:28,000
这么用过

290
00:10:29,000 --> 00:10:31,000
毕竟不是一个拉钉字母

291
00:10:31,000 --> 00:10:32,000
为基础的过程

292
00:10:32,000 --> 00:10:34,000
但这个其实我觉得

293
00:10:34,000 --> 00:10:35,000
这个还挺有用的

294
00:10:35,000 --> 00:10:36,000
就比较好记

295
00:10:36,000 --> 00:10:37,000
就是

296
00:10:37,000 --> 00:10:38,000
你看如果像中国记的

297
00:10:38,000 --> 00:10:39,000
这样号码

298
00:10:39,000 --> 00:10:40,000
就只能死记

299
00:10:40,000 --> 00:10:42,000
被号码或者是用这个

300
00:10:42,000 --> 00:10:43,000
协议嘛

301
00:10:43,000 --> 00:10:45,000
所以各种联号啊

302
00:10:45,000 --> 00:10:46,000
86 啊

303
00:10:46,000 --> 00:10:47,000
零啊什么的

304
00:10:47,000 --> 00:10:48,000
就大家特别喜欢

305
00:10:48,000 --> 00:10:49,000
我觉得一个问题

306
00:10:49,000 --> 00:10:50,000
一个很大问题

307
00:10:50,000 --> 00:10:51,000
就是中文的那个

308
00:10:51,000 --> 00:10:52,000
中文

309
00:10:52,000 --> 00:10:53,000
中文汉语技术

310
00:10:53,000 --> 00:10:54,000
字太方便了

311
00:10:54,000 --> 00:10:55,000
技术字太方便

312
00:10:55,000 --> 00:10:56,000
对

313
00:10:56,000 --> 00:10:58,000
就全部都是单英节字的

314
00:10:58,000 --> 00:10:59,000
对 而且就是我在

315
00:10:59,000 --> 00:11:00,000
因为你猜

316
00:11:00,000 --> 00:11:02,000
欧洲一般都会隔写嘛

317
00:11:02,000 --> 00:11:03,000
法国会两位两位隔写

318
00:11:03,000 --> 00:11:04,000
我又想到

319
00:11:04,000 --> 00:11:05,000
法国会两位两位隔写

320
00:11:05,000 --> 00:11:06,000
法国会两位两位隔写

321
00:11:06,000 --> 00:11:07,000
又要跟法国

322
00:11:09,000 --> 00:11:10,000
但是德语里面

323
00:11:10,000 --> 00:11:11,000
也是各位数先念的是吧

324
00:11:11,000 --> 00:11:12,000
如果是

325
00:11:12,000 --> 00:11:13,000
几十几个方便

326
00:11:13,000 --> 00:11:14,000
我一定念

327
00:11:14,000 --> 00:11:15,000
电话一般

328
00:11:15,000 --> 00:11:16,000
不会那么复杂

329
00:11:16,000 --> 00:11:18,000
就电话看情况嘛

330
00:11:18,000 --> 00:11:19,000
但是

331
00:11:19,000 --> 00:11:20,000
当然有些人也是

332
00:11:20,000 --> 00:11:21,000
两位两位的

333
00:11:21,000 --> 00:11:22,000
技术的话

334
00:11:22,000 --> 00:11:25,000
就德语跟英文是比较相近的嘛

335
00:11:25,000 --> 00:11:26,000
就除了最末

336
00:11:26,000 --> 00:11:27,000
两位比较坑爹之外

337
00:11:27,000 --> 00:11:28,000
其他还好

338
00:11:28,000 --> 00:11:30,000
德文里面那就是

339
00:11:30,000 --> 00:11:31,000
最末两位就是

340
00:11:31,000 --> 00:11:32,000
他是要先念各位数

341
00:11:32,000 --> 00:11:33,000
再练十位数是吧

342
00:11:33,000 --> 00:11:35,000
英文也是一样的吧

343
00:11:35,000 --> 00:11:37,000
那英文是六十四

344
00:11:37,000 --> 00:11:38,000
比如说六十四嘛

345
00:11:38,000 --> 00:11:39,000
六十四嘛

346
00:11:39,000 --> 00:11:40,000
但是德文

347
00:11:40,000 --> 00:11:42,000
德文是倒过来的吧

348
00:11:42,000 --> 00:11:44,000
德文是四和六十

349
00:11:44,000 --> 00:11:45,000
对啊

350
00:11:45,000 --> 00:11:46,000
德文是倒过来的

351
00:11:46,000 --> 00:11:47,000
四六十

352
00:11:47,000 --> 00:11:48,000
你说这个意思

353
00:11:48,000 --> 00:11:49,000
嗯

354
00:11:49,000 --> 00:11:50,000
德文是倒过来的

355
00:11:50,000 --> 00:11:51,000
就只有最后两位不一样

356
00:11:51,000 --> 00:11:52,000
但

357
00:11:52,000 --> 00:11:53,000
但其实就是

358
00:11:53,000 --> 00:11:54,000
有个念法的问题嘛

359
00:11:54,000 --> 00:11:55,000
比如说中文里面

360
00:11:55,000 --> 00:11:57,000
会说三个五

361
00:11:57,000 --> 00:11:58,000
然后英文里面

362
00:11:58,000 --> 00:11:59,000
会说五五五五

363
00:11:59,000 --> 00:12:00,000
对吧

364
00:12:00,000 --> 00:12:01,000
然后说两个八

365
00:12:01,000 --> 00:12:02,000
你会说八八

366
00:12:02,000 --> 00:12:03,000
然后

367
00:12:03,000 --> 00:12:04,000
如果比较长的数字的话

368
00:12:04,000 --> 00:12:05,000
其实一般都是

369
00:12:05,000 --> 00:12:06,000
一组一组念的

370
00:12:06,000 --> 00:12:07,000
就是两位数

371
00:12:07,000 --> 00:12:08,000
两位数的念嘛

372
00:12:08,000 --> 00:12:09,000
英文里面

373
00:12:09,000 --> 00:12:10,000
法国人也要说

374
00:12:10,000 --> 00:12:12,000
四个二十加八

375
00:12:12,000 --> 00:12:13,000
然后脑子里面

376
00:12:13,000 --> 00:12:14,000
一团酱菇

377
00:12:14,000 --> 00:12:16,000
还得先把那个电话号码

378
00:12:16,000 --> 00:12:17,000
拆成一个数

379
00:12:17,000 --> 00:12:18,000
然后

380
00:12:18,000 --> 00:12:19,000
这个叫什么来的

381
00:12:19,000 --> 00:12:20,000
那个数论叫什么来的

382
00:12:20,000 --> 00:12:22,000
就是每一个

383
00:12:22,000 --> 00:12:23,000
每一个自然数

384
00:12:23,000 --> 00:12:24,000
可以拆成那么几个数

385
00:12:24,000 --> 00:12:25,000
就是那个

386
00:12:25,000 --> 00:12:26,000
致数的那种

387
00:12:26,000 --> 00:12:27,000
什么叫 power 的组合嘛

388
00:12:27,000 --> 00:12:29,000
啊啊啊

389
00:12:29,000 --> 00:12:33,000
叫 Foundamental Theorem of Arithmetic

390
00:12:33,000 --> 00:12:35,000
中文叫

391
00:12:35,000 --> 00:12:37,000
算数基本定理

392
00:12:37,000 --> 00:12:39,000
算数基本定理

393
00:12:39,000 --> 00:12:40,000
算数基本定理

394
00:12:40,000 --> 00:12:41,000
它就是说

395
00:12:41,000 --> 00:12:42,000
每个大英国医的

396
00:12:42,000 --> 00:12:43,000
自然数

397
00:12:43,000 --> 00:12:45,000
均可以写为致数的 G

398
00:12:45,000 --> 00:12:46,000
而且那些 ince

399
00:12:46,000 --> 00:12:48,000
就它有一个唯一的表述

400
00:12:48,000 --> 00:12:49,000
大小排列之后

401
00:12:49,000 --> 00:12:50,000
只有一种表示

402
00:12:50,000 --> 00:12:51,000
这跟后面那个

403
00:12:51,000 --> 00:12:52,000
我们要讲的那个 unicode

404
00:12:52,000 --> 00:12:54,000
这不就是致音数分解吗

405
00:12:54,000 --> 00:12:55,000
还不一样

406
00:12:55,000 --> 00:12:56,000
还不一样

407
00:12:56,000 --> 00:12:57,000
不一样

408
00:12:57,000 --> 00:12:58,000
它讲的是另外一个

409
00:12:58,000 --> 00:12:59,000
就是说

410
00:12:59,000 --> 00:13:00,000
其实这个跟我们后面要讲的

411
00:13:00,000 --> 00:13:01,000
unicode

412
00:13:01,000 --> 00:13:02,000
那个 normalization

413
00:13:02,000 --> 00:13:04,000
有点意去同工的意思

414
00:13:04,000 --> 00:13:05,000
ok

415
00:13:05,000 --> 00:13:06,000
对

416
00:13:06,000 --> 00:13:07,000
所以你要先

417
00:13:07,000 --> 00:13:09,000
首先是这是正准数嘛

418
00:13:09,000 --> 00:13:10,000
而且你要先

419
00:13:10,000 --> 00:13:12,000
断地说是什么是致数嘛

420
00:13:12,000 --> 00:13:13,000
对对对

421
00:13:13,000 --> 00:13:15,000
然后它有一种唯一的分解法

422
00:13:15,000 --> 00:13:16,000
嗯嗯对

423
00:13:16,000 --> 00:13:19,000
然后这个就是算数基本定理

424
00:13:19,000 --> 00:13:20,000
哎呦

425
00:13:20,000 --> 00:13:21,000
我们为什么从键盘扯到这边

426
00:13:21,000 --> 00:13:22,000
对为什么扯到这边

427
00:13:22,000 --> 00:13:25,000
说法国人拆那个数

428
00:13:25,000 --> 00:13:26,000
哈哈哈哈

429
00:13:26,000 --> 00:13:27,000
好

430
00:13:27,000 --> 00:13:29,000
各国念这个

431
00:13:29,000 --> 00:13:30,000
电话号码的习惯

432
00:13:30,000 --> 00:13:33,000
应该是有一定的规律的

433
00:13:33,000 --> 00:13:34,000
我记得 Wikipedia

434
00:13:34,000 --> 00:13:35,000
还有一个页面是

435
00:13:35,000 --> 00:13:38,000
专门汇总各国的这个习惯

436
00:13:38,000 --> 00:13:39,000
所以是

437
00:13:39,000 --> 00:13:41,000
你们念中国的手机号是先念

438
00:13:41,000 --> 00:13:42,000
就是比如说

439
00:13:42,000 --> 00:13:43,000
三四四

440
00:13:43,000 --> 00:13:45,000
颁示了三四四这样的规则

441
00:13:45,000 --> 00:13:46,000
ok

442
00:13:46,000 --> 00:13:47,000
不不看那个吧

443
00:13:47,000 --> 00:13:48,000
有很多人是三三五是吧

444
00:13:48,000 --> 00:13:49,000
看那个看那个

445
00:13:49,000 --> 00:13:50,000
就是叫什么

446
00:13:50,000 --> 00:13:52,000
就区号的区区分嘛

447
00:13:52,000 --> 00:13:53,000
比如说中国的手机号码

448
00:13:53,000 --> 00:13:54,000
都是同一都是十一位嘛

449
00:13:54,000 --> 00:13:56,000
都是三四四嘛

450
00:13:56,000 --> 00:13:57,000
嗯

451
00:13:57,000 --> 00:13:58,000
然后那个做机号码就不一定了

452
00:13:58,000 --> 00:13:59,000
因为有些地区是

453
00:13:59,000 --> 00:14:00,000
最开始是

454
00:14:00,000 --> 00:14:02,000
这还有历史有五位六位

455
00:14:02,000 --> 00:14:03,000
七位八位的嘛

456
00:14:03,000 --> 00:14:04,000
对

457
00:14:04,000 --> 00:14:05,000
现在基本都是八位的

458
00:14:05,000 --> 00:14:06,000
八位就是四四

459
00:14:06,000 --> 00:14:07,000
大城市一般都是八位

460
00:14:07,000 --> 00:14:08,000
四四嘛

461
00:14:08,000 --> 00:14:09,000
叫小城市

462
00:14:09,000 --> 00:14:10,000
而且主要是

463
00:14:10,000 --> 00:14:11,000
还有他有那个就是

464
00:14:11,000 --> 00:14:13,000
长途电话的区号嘛

465
00:14:13,000 --> 00:14:14,000
区号理论上讲

466
00:14:14,000 --> 00:14:15,000
就是三位或者四位吗

467
00:14:15,000 --> 00:14:17,000
中国是三位或者四位的

468
00:14:17,000 --> 00:14:18,000
对

469
00:14:18,000 --> 00:14:20,000
日本是有两位的

470
00:14:20,000 --> 00:14:21,000
因为是小的

471
00:14:21,000 --> 00:14:22,000
区号其实是那个

472
00:14:22,000 --> 00:14:23,000
两位或三位

473
00:14:23,000 --> 00:14:25,000
然后补一个零的

474
00:14:25,000 --> 00:14:27,000
就国内拨是补零嘛

475
00:14:27,000 --> 00:14:28,000
要跟那个

476
00:14:28,000 --> 00:14:29,000
在前面拨

477
00:14:29,000 --> 00:14:30,000
国际长途分开嘛

478
00:14:30,000 --> 00:14:31,000
对

479
00:14:31,000 --> 00:14:32,000
这个很多人不知道这个事情

480
00:14:32,000 --> 00:14:34,000
就是怎么拨那个国际长途

481
00:14:34,000 --> 00:14:36,000
就为什么是区号都是零

482
00:14:36,000 --> 00:14:37,000
然后一个是吗

483
00:14:37,000 --> 00:14:38,000
要要要

484
00:14:38,000 --> 00:14:39,000
对要省掉那个零对吧

485
00:14:39,000 --> 00:14:41,000
不是是有些国家是不省的

486
00:14:41,000 --> 00:14:42,000
不是不是中国

487
00:14:42,000 --> 00:14:43,000
对省不省是看那个

488
00:14:43,000 --> 00:14:44,000
电话规则

489
00:14:44,000 --> 00:14:45,000
不是是这样的

490
00:14:45,000 --> 00:14:46,000
中国是这样的

491
00:14:46,000 --> 00:14:48,000
就说如果中国你拨零

492
00:14:48,000 --> 00:14:50,000
然后你再加一个数字的话

493
00:14:50,000 --> 00:14:51,000
就就不不

494
00:14:51,000 --> 00:14:53,000
首先如果你拨本你 local number

495
00:14:53,000 --> 00:14:54,000
就不需要拨区号的话

496
00:14:54,000 --> 00:14:56,000
肯定不会不会是零开头的

497
00:14:56,000 --> 00:14:57,000
对不对

498
00:14:57,000 --> 00:14:58,000
然后如果你要拨

499
00:14:58,000 --> 00:14:59,000
另外一个区的话

500
00:14:59,000 --> 00:15:00,000
你可以是零加一个

501
00:15:00,000 --> 00:15:01,000
非零数字开头的

502
00:15:01,000 --> 00:15:03,000
他就知道你再拨区号了

503
00:15:03,000 --> 00:15:04,000
对不对

504
00:15:04,000 --> 00:15:05,000
但是你拨零零的话

505
00:15:05,000 --> 00:15:06,000
其实就是你变成那个

506
00:15:06,000 --> 00:15:08,000
所谓的那个加号吗

507
00:15:08,000 --> 00:15:09,000
对

508
00:15:09,000 --> 00:15:11,000
这个就是国际的那个 prefix

509
00:15:11,000 --> 00:15:12,000
就他是这么来区分的

510
00:15:12,000 --> 00:15:13,000
对

511
00:15:13,000 --> 00:15:14,000
OK

512
00:15:14,000 --> 00:15:15,000
然后这个时候就牵涉了一个

513
00:15:15,000 --> 00:15:16,000
表表达的问题了

514
00:15:16,000 --> 00:15:17,000
比如说我们中国

515
00:15:17,000 --> 00:15:18,000
中国会写假设

516
00:15:18,000 --> 00:15:19,000
比如说深圳是

517
00:15:19,000 --> 00:15:21,000
零七五五

518
00:15:21,000 --> 00:15:22,000
对对对

519
00:15:22,000 --> 00:15:23,000
深圳是零七五五对吧

520
00:15:23,000 --> 00:15:24,000
但是如果说

521
00:15:24,000 --> 00:15:25,000
你从外国打到深圳的话

522
00:15:25,000 --> 00:15:26,000
你是拨零零

523
00:15:26,000 --> 00:15:27,000
八六

524
00:15:27,000 --> 00:15:29,000
八六是中国的那个国际区号代码

525
00:15:29,000 --> 00:15:30,000
然后这个时候你就不会

526
00:15:30,000 --> 00:15:31,000
不会拨零七五

527
00:15:31,000 --> 00:15:33,000
你只会拨七五五

528
00:15:33,000 --> 00:15:34,000
因为前面八六已经确定了

529
00:15:34,000 --> 00:15:36,000
你是这个中国

530
00:15:36,000 --> 00:15:37,000
然后你要在下面

531
00:15:37,000 --> 00:15:38,000
就跟着要拨区了

532
00:15:38,000 --> 00:15:39,000
对吧

533
00:15:39,000 --> 00:15:40,000
所以你看很多人写的

534
00:15:40,000 --> 00:15:41,000
明片上的表达

535
00:15:41,000 --> 00:15:43,000
他会写加号

536
00:15:43,000 --> 00:15:44,000
八六

537
00:15:44,000 --> 00:15:45,000
然后零扩号

538
00:15:45,000 --> 00:15:47,000
扩号表示 opitional 是可选的

539
00:15:47,000 --> 00:15:48,000
然后是七五五

540
00:15:48,000 --> 00:15:49,000
后面再跟一个

541
00:15:49,000 --> 00:15:50,000
wait a second

542
00:15:50,000 --> 00:15:52,000
你确定这个零是可选的吗

543
00:15:52,000 --> 00:15:53,000
就是我的理解是

544
00:15:53,000 --> 00:15:54,000
不是每个国家打

545
00:15:54,000 --> 00:15:56,000
这个就是不是从美国家

546
00:15:56,000 --> 00:15:57,000
打外国的电话的时候

547
00:15:57,000 --> 00:15:58,000
这个零都是可以省略的

548
00:15:58,000 --> 00:15:59,000
中国是

549
00:15:59,000 --> 00:16:00,000
中国是可选的方式

550
00:16:00,000 --> 00:16:01,000
没有

551
00:16:01,000 --> 00:16:02,000
绝大都是都是的

552
00:16:02,000 --> 00:16:03,000
就我的经验来讲的话

553
00:16:03,000 --> 00:16:04,000
只有意大利不行

554
00:16:04,000 --> 00:16:06,000
因为意大利他们本身那个号

555
00:16:06,000 --> 00:16:07,000
就是有一个零

556
00:16:07,000 --> 00:16:09,000
所以那个零就不用省

557
00:16:09,000 --> 00:16:10,000
就是他的开头是零

558
00:16:10,000 --> 00:16:11,000
有零开头的

559
00:16:11,000 --> 00:16:12,000
对

560
00:16:12,000 --> 00:16:13,000
对

561
00:16:13,000 --> 00:16:14,000
就是意大利

562
00:16:14,000 --> 00:16:16,000
这其实是有一份国际标准的

563
00:16:16,000 --> 00:16:19,000
就是国际有个叫 ITO 的

564
00:16:19,000 --> 00:16:20,000
跟通信有关的组织

565
00:16:20,000 --> 00:16:21,000
国际联盟吗

566
00:16:21,000 --> 00:16:22,000
他对这个电话号码的

567
00:16:22,000 --> 00:16:23,000
注冀格式

568
00:16:23,000 --> 00:16:24,000
对

569
00:16:24,000 --> 00:16:25,000
他对这个电话号码的

570
00:16:25,000 --> 00:16:26,000
注冀格式

571
00:16:26,000 --> 00:16:27,000
包括有些零是不是可以放在

572
00:16:27,000 --> 00:16:28,000
扩号里就是可选的

573
00:16:28,000 --> 00:16:29,000
这个格式

574
00:16:29,000 --> 00:16:30,000
对

575
00:16:30,000 --> 00:16:31,000
首先他的书写是有一个规范的

576
00:16:31,000 --> 00:16:32,000
其次

577
00:16:32,000 --> 00:16:33,000
就这个书写对你的规范

578
00:16:33,000 --> 00:16:35,000
其实是跟各国的这个

579
00:16:35,000 --> 00:16:38,000
电话制式的有关的

580
00:16:38,000 --> 00:16:39,000
对对

581
00:16:39,000 --> 00:16:40,000
其实这个电话号码

582
00:16:40,000 --> 00:16:41,000
要不要加零

583
00:16:41,000 --> 00:16:42,000
这个零可不可以省略

584
00:16:42,000 --> 00:16:44,000
以及他是不是可选的

585
00:16:44,000 --> 00:16:45,000
其实是跟那个

586
00:16:45,000 --> 00:16:47,000
模拟时代的这个通信的原理

587
00:16:47,000 --> 00:16:48,000
这个叫什么

588
00:16:48,000 --> 00:16:50,000
全控机的那个东西是吧

589
00:16:50,000 --> 00:16:51,000
这应该是可以查证的

590
00:16:51,000 --> 00:16:52,000
只是

591
00:16:52,000 --> 00:16:54,000
我以前学的一些东西

592
00:16:54,000 --> 00:16:56,000
有点记得不太清楚

593
00:16:56,000 --> 00:16:57,000
对对对

594
00:16:57,000 --> 00:16:58,000
这个时候要透露那个

595
00:16:58,000 --> 00:16:59,000
你的底牌了吗

596
00:16:59,000 --> 00:17:00,000
没有没有

597
00:17:00,000 --> 00:17:02,000
我们真语的专业

598
00:17:02,000 --> 00:17:04,000
其实是

599
00:17:04,000 --> 00:17:05,000
好吧

600
00:17:05,000 --> 00:17:06,000
其实那个

601
00:17:06,000 --> 00:17:07,000
这跟通信比较相关

602
00:17:07,000 --> 00:17:08,000
但我的专业

603
00:17:08,000 --> 00:17:10,000
虽然有一些跟通信相关的东西

604
00:17:10,000 --> 00:17:11,000
但

605
00:17:11,000 --> 00:17:13,000
还离得有一点远

606
00:17:13,000 --> 00:17:15,000
只是会顺带的学到

607
00:17:15,000 --> 00:17:16,000
听众朋友吗

608
00:17:16,000 --> 00:17:17,000
我尊重的告诉你们一个

609
00:17:17,000 --> 00:17:18,000
技能的事实

610
00:17:18,000 --> 00:17:19,000
在做的四位主持里面

611
00:17:19,000 --> 00:17:20,000
竟然

612
00:17:20,000 --> 00:17:22,000
全部都是具有理工

613
00:17:22,000 --> 00:17:23,000
不可背景的

614
00:17:23,000 --> 00:17:24,000
这很惊人吗

615
00:17:24,000 --> 00:17:26,000
这是很正常吗

616
00:17:26,000 --> 00:17:28,000
我一直以为你们两个是文科生

617
00:17:28,000 --> 00:17:30,000
我说你太看不起他们了

618
00:17:30,000 --> 00:17:31,000
你不懂

619
00:17:31,000 --> 00:17:32,000
因为他们两个是

620
00:17:32,000 --> 00:17:33,000
自己男子唱的

621
00:17:33,000 --> 00:17:34,000
就看不起他们吧

622
00:17:36,000 --> 00:17:38,000
不要看不起文科生

623
00:17:38,000 --> 00:17:39,000
不是

624
00:17:39,000 --> 00:17:40,000
这个是一个

625
00:17:40,000 --> 00:17:41,000
这个是一个什么来着

626
00:17:41,000 --> 00:17:42,000
所谓这个什么

627
00:17:42,000 --> 00:17:44,000
物以类俱人以群分

628
00:17:44,000 --> 00:17:45,000
所以我们要搞这个什么

629
00:17:45,000 --> 00:17:46,000
大串联嘛

630
00:17:46,000 --> 00:17:47,000
结果发现串来串去

631
00:17:47,000 --> 00:17:48,000
还是一伙人

632
00:17:48,000 --> 00:17:51,000
你对文科生有什么

633
00:17:51,000 --> 00:17:52,000
换相关

634
00:17:52,000 --> 00:17:53,000
因为觉得特别文艺嘛

635
00:17:53,000 --> 00:17:54,000
就这个

636
00:17:54,000 --> 00:17:55,000
挺好的

637
00:17:55,000 --> 00:17:56,000
就缺这个东西

638
00:17:56,000 --> 00:17:57,000
自男自唱不文艺

639
00:17:57,000 --> 00:17:58,000
Rex 是学什么呢

640
00:17:58,000 --> 00:17:59,000
Rex 以前

641
00:17:59,000 --> 00:18:01,000
Rex 之前念了一个博士

642
00:18:01,000 --> 00:18:03,000
那个哲学的博士

643
00:18:03,000 --> 00:18:05,000
Rex 应该是我们这里

644
00:18:05,000 --> 00:18:09,000
比较偏社科类的吧

645
00:18:09,000 --> 00:18:10,000
我再干对

646
00:18:10,000 --> 00:18:13,000
Rex 是念哲学硕士

647
00:18:13,000 --> 00:18:14,000
应该是

648
00:18:14,000 --> 00:18:15,000
之前他是本科学生

649
00:18:15,000 --> 00:18:16,000
学经济的好像

650
00:18:16,000 --> 00:18:17,000
还好还好还好

651
00:18:17,000 --> 00:18:18,000
终于有一个

652
00:18:18,000 --> 00:18:20,000
非理工背景的人

653
00:18:22,000 --> 00:18:25,000
Rex 不愿意上我们的节目

654
00:18:26,000 --> 00:18:28,000
对 Rex 好像都没有出现过

655
00:18:28,000 --> 00:18:29,000
怎么一回事

656
00:18:29,000 --> 00:18:30,000
对

657
00:18:30,000 --> 00:18:31,000
他连自弹自唱都没有上

658
00:18:31,000 --> 00:18:32,000
没错

659
00:18:32,000 --> 00:18:34,000
太不给面子了

660
00:18:34,000 --> 00:18:35,000
没关系

661
00:18:35,000 --> 00:18:36,000
主编大人出场的话

662
00:18:36,000 --> 00:18:37,000
要一个隆重的仪式

663
00:18:37,000 --> 00:18:39,000
我已经给他安排好话题了

664
00:18:39,000 --> 00:18:41,000
请大家期待

665
00:18:41,000 --> 00:18:42,000
OK

666
00:18:42,000 --> 00:18:43,000
非常好

667
00:18:45,000 --> 00:18:46,000
好我们推进到

668
00:18:46,000 --> 00:18:47,000
最后一个停用反馈

669
00:18:47,000 --> 00:18:49,000
最后一个

670
00:18:49,000 --> 00:18:50,000
最后一个也是在

671
00:18:50,000 --> 00:18:52,000
TIB 上跟我们的留言

672
00:18:52,000 --> 00:18:54,000
他的 ID 是 link 0

673
00:18:54,000 --> 00:18:55,000
然后他说

674
00:18:55,000 --> 00:18:56,000
收到反鞋杠

675
00:18:56,000 --> 00:18:57,000
我首先想到的是

676
00:18:57,000 --> 00:18:59,000
Tag

677
00:18:59,000 --> 00:19:00,000
我们上期其实提了一下

678
00:19:00,000 --> 00:19:02,000
Tag 但没有细讲

679
00:19:02,000 --> 00:19:03,000
Tag 在反鞋杠里

680
00:19:03,000 --> 00:19:04,000
就是作为转衣服吗

681
00:19:04,000 --> 00:19:06,000
还是什么

682
00:19:06,000 --> 00:19:08,000
反鞋杠在 Tag 里作为转衣服

683
00:19:08,000 --> 00:19:09,000
对没错

684
00:19:09,000 --> 00:19:11,000
就是以反鞋杠开头的一个

685
00:19:11,000 --> 00:19:12,000
一个标志服

686
00:19:12,000 --> 00:19:13,000
然后后面可以

687
00:19:13,000 --> 00:19:14,000
可以选用花棍号

688
00:19:14,000 --> 00:19:16,000
风棍号的一个

689
00:19:16,000 --> 00:19:18,000
parameter

690
00:19:18,000 --> 00:19:20,000
在 Tag 里面还一些什么

691
00:19:20,000 --> 00:19:21,000
希拉文这么

692
00:19:21,000 --> 00:19:22,000
也都是用

693
00:19:22,000 --> 00:19:24,000
都是像转衣服一样

694
00:19:24,000 --> 00:19:25,000
都用反鞋杠开始用

695
00:19:25,000 --> 00:19:26,000
对

696
00:19:26,000 --> 00:19:27,000
说到这个反鞋杠

697
00:19:27,000 --> 00:19:28,000
我上次终于见到有人

698
00:19:28,000 --> 00:19:30,000
真人在我现实生活中的

699
00:19:30,000 --> 00:19:32,000
一个朋友他用反鞋杠表示

700
00:19:32,000 --> 00:19:34,000
或者就是 A 或者 B 那个

701
00:19:34,000 --> 00:19:35,000
上海很多

702
00:19:35,000 --> 00:19:37,000
不是

703
00:19:37,000 --> 00:19:39,000
在现实生活中

704
00:19:39,000 --> 00:19:40,000
就是不是在

705
00:19:40,000 --> 00:19:42,000
魔幻都市里

706
00:19:42,000 --> 00:19:43,000
是不是

707
00:19:43,000 --> 00:19:44,000
对

708
00:19:44,000 --> 00:19:46,000
上海人就这样被你

709
00:19:46,000 --> 00:19:49,000
被你抛离的现实生活

710
00:19:49,000 --> 00:19:52,000
哈哈哈哈哈哈

711
00:19:52,000 --> 00:19:53,000
对

712
00:19:53,000 --> 00:19:54,000
反正我还当时看来还是蛮

713
00:19:54,000 --> 00:19:55,000
蛮吃鸡的

714
00:19:55,000 --> 00:19:57,000
我都很想问说

715
00:19:57,000 --> 00:19:58,000
为什么要用这个

716
00:19:58,000 --> 00:19:59,000
不是

717
00:19:59,000 --> 00:20:00,000
你还没有说清楚他

718
00:20:00,000 --> 00:20:01,000
在什么情况下用的

719
00:20:01,000 --> 00:20:03,000
就是他写两个选项

720
00:20:03,000 --> 00:20:05,000
我们说比如说

721
00:20:05,000 --> 00:20:06,000
就中文里面你会写

722
00:20:06,000 --> 00:20:08,000
A 或者 B 的时候

723
00:20:08,000 --> 00:20:09,000
你会把他那个写杠

724
00:20:09,000 --> 00:20:10,000
把它表示选项

725
00:20:10,000 --> 00:20:11,000
他是在手写

726
00:20:11,000 --> 00:20:12,000
还是在

727
00:20:12,000 --> 00:20:14,000
打字的时候

728
00:20:14,000 --> 00:20:16,000
是那个

729
00:20:16,000 --> 00:20:17,000
打字对打字的时候

730
00:20:17,000 --> 00:20:19,000
而且他两种混用关键是

731
00:20:19,000 --> 00:20:20,000
你懂吗

732
00:20:20,000 --> 00:20:21,000
所以他在他看来

733
00:20:21,000 --> 00:20:22,000
这个左滑右滑其实是一样

734
00:20:22,000 --> 00:20:23,000
B 是处女

735
00:20:23,000 --> 00:20:24,000
处女作吗

736
00:20:24,000 --> 00:20:26,000
但其实想象好像也没什么区别

737
00:20:26,000 --> 00:20:28,000
就是左滑和右滑有什么区别

738
00:20:28,000 --> 00:20:29,000
确实没什么区别

739
00:20:29,000 --> 00:20:30,000
在作有处女作吗

740
00:20:30,000 --> 00:20:31,000
没有

741
00:20:31,000 --> 00:20:33,000
但是我不能农人之家

742
00:20:33,000 --> 00:20:35,000
尤其是在一篇文章里面

743
00:20:35,000 --> 00:20:37,000
就混用这个东西

744
00:20:37,000 --> 00:20:39,000
对他其实是个约定了

745
00:20:39,000 --> 00:20:41,000
就是你单纯从这个作用上来说

746
00:20:41,000 --> 00:20:43,000
你用左左鞋和右鞋

747
00:20:43,000 --> 00:20:45,000
都是能起到同样的作用

748
00:20:45,000 --> 00:20:46,000
那我问一个问题

749
00:20:46,000 --> 00:20:48,000
你说在那种

750
00:20:48,000 --> 00:20:49,000
阿拉伯文这种

751
00:20:49,000 --> 00:20:51,000
从右向左鞋文字里面

752
00:20:51,000 --> 00:20:52,000
他用什么

753
00:20:52,000 --> 00:20:54,000
阿拉伯文的豆号都是

754
00:20:54,000 --> 00:20:56,000
碗右豆肉的你知道吗

755
00:20:56,000 --> 00:20:57,000
刚好做了个静面对称

756
00:20:57,000 --> 00:20:58,000
对

757
00:20:58,000 --> 00:21:00,000
还有阿拉伯文的问号也是

758
00:21:00,000 --> 00:21:01,000
静面对称的

759
00:21:01,000 --> 00:21:02,000
就是那样

760
00:21:02,000 --> 00:21:03,000
不讨计解释一下你们德国

761
00:21:03,000 --> 00:21:04,000
为什么前面那个引号

762
00:21:04,000 --> 00:21:05,000
要放在下面

763
00:21:05,000 --> 00:21:07,000
这就是德意志的传统

764
00:21:08,000 --> 00:21:10,000
就是从那个歌特

765
00:21:10,000 --> 00:21:11,000
从那个歌特体的时代

766
00:21:11,000 --> 00:21:13,000
Black Letter 的时代的那个引号

767
00:21:13,000 --> 00:21:14,000
就一直是在那

768
00:21:15,000 --> 00:21:16,000
左下右上对吧

769
00:21:16,000 --> 00:21:17,000
对吧

770
00:21:17,000 --> 00:21:19,000
对一开始是在左下

771
00:21:19,000 --> 00:21:21,000
而且那个引号引的方向

772
00:21:21,000 --> 00:21:22,000
也是反的

773
00:21:22,000 --> 00:21:23,000
然后中文的那个方

774
00:21:23,000 --> 00:21:25,000
扩号是左上右下对吧

775
00:21:25,000 --> 00:21:26,000
这也不当 make sense

776
00:21:26,000 --> 00:21:28,000
怎么说中文竖牌的时候

777
00:21:28,000 --> 00:21:30,000
那个就是一个符号

778
00:21:30,000 --> 00:21:32,000
也是应该从左上角开始写的

779
00:21:32,000 --> 00:21:33,000
所以写不好玩

780
00:21:33,000 --> 00:21:34,000
也应该在左上

781
00:21:34,000 --> 00:21:36,000
竖牌是右上左下

782
00:21:36,000 --> 00:21:38,000
对竖牌是右上左下

783
00:21:38,000 --> 00:21:39,000
对

784
00:21:40,000 --> 00:21:41,000
为什么呢

785
00:21:41,000 --> 00:21:42,000
竖牌右上左下的话

786
00:21:42,000 --> 00:21:43,000
符合就是比顺

787
00:21:44,000 --> 00:21:45,000
如果你是左上的话

788
00:21:45,000 --> 00:21:47,000
就变成要运笔的话

789
00:21:47,000 --> 00:21:48,000
要写左上比顺

790
00:21:48,000 --> 00:21:49,000
对对对

791
00:21:50,000 --> 00:21:51,000
你右上左下的话

792
00:21:51,000 --> 00:21:52,000
就符合书写的比顺

793
00:21:52,000 --> 00:21:53,000
就是横折嘛

794
00:21:54,000 --> 00:21:55,000
就是横折和竖折

795
00:21:56,000 --> 00:21:57,000
make sense

796
00:21:57,000 --> 00:21:58,000
这也是假设是

797
00:21:58,000 --> 00:21:59,000
又立手的情况

798
00:21:59,000 --> 00:22:00,000
但是中文默认都是这样的

799
00:22:00,000 --> 00:22:01,000
左一手你也不可能

800
00:22:01,000 --> 00:22:03,000
从左下开始写一个

801
00:22:05,000 --> 00:22:06,000
条

802
00:22:06,000 --> 00:22:07,000
然后右折嘛

803
00:22:08,000 --> 00:22:09,000
这很怪嘛就是

804
00:22:09,000 --> 00:22:10,000
中文的基本比划顺

805
00:22:10,000 --> 00:22:11,000
就要从左往右

806
00:22:11,000 --> 00:22:12,000
从上到下嘛

807
00:22:13,000 --> 00:22:14,000
那比如说阿拉伯人

808
00:22:14,000 --> 00:22:15,000
那些是默认是左立手

809
00:22:15,000 --> 00:22:16,000
也不是

810
00:22:16,000 --> 00:22:17,000
因为他们的运笔的话

811
00:22:17,000 --> 00:22:18,000
要从右往左画嘛

812
00:22:18,000 --> 00:22:20,000
就是横要往右往左画横

813
00:22:20,000 --> 00:22:22,000
但阿拉伯人大部分

814
00:22:22,000 --> 00:22:23,000
也是用立手

815
00:22:24,000 --> 00:22:25,000
但我只是说文

816
00:22:25,000 --> 00:22:26,000
就是文字

817
00:22:26,000 --> 00:22:27,000
从文字上想

818
00:22:28,000 --> 00:22:30,000
所以还是一个习惯问题

819
00:22:30,000 --> 00:22:31,000
还是一个习惯问题

820
00:22:33,000 --> 00:22:34,000
没有什么不能改的

821
00:22:34,000 --> 00:22:36,000
这可能有一定的偶然因素

822
00:22:37,000 --> 00:22:38,000
所以汉字的运笔的话

823
00:22:38,000 --> 00:22:40,000
默认是从左往右

824
00:22:40,000 --> 00:22:41,000
比如说你写一个口

825
00:22:41,000 --> 00:22:42,000
口的最后一笔的话

826
00:22:42,000 --> 00:22:43,000
你不可能

827
00:22:43,000 --> 00:22:45,000
我自顺便

828
00:22:45,000 --> 00:22:47,000
第二笔画画画画画

829
00:22:47,000 --> 00:22:49,000
从右往左连成了一笔

830
00:22:49,000 --> 00:22:50,000
不能这样的

831
00:22:50,000 --> 00:22:51,000
你要另外起第三笔

832
00:22:51,000 --> 00:22:52,000
从左往右写

833
00:22:53,000 --> 00:22:54,000
要是在画圈

834
00:22:54,000 --> 00:22:55,000
就是中文末论

835
00:22:55,000 --> 00:22:56,000
只能从左往右

836
00:22:56,000 --> 00:22:58,000
他们没有从右往左的笔画中文

837
00:23:00,000 --> 00:23:01,000
OK 明白

838
00:23:02,000 --> 00:23:03,000
好吧 这样我们终于

839
00:23:03,000 --> 00:23:05,000
花了半个小时了

840
00:23:05,000 --> 00:23:06,000
把反馈说完了

841
00:23:06,000 --> 00:23:07,000
那我们现在

842
00:23:07,000 --> 00:23:08,000
终于可以进入正题了

843
00:23:08,000 --> 00:23:09,000
OK

844
00:23:12,000 --> 00:23:13,000
我们上次第一期节目

845
00:23:13,000 --> 00:23:16,000
把从头到尾大概过了一遍

846
00:23:16,000 --> 00:23:18,000
我们敲接下一个键盘

847
00:23:18,000 --> 00:23:19,000
然后让一个字

848
00:23:19,000 --> 00:23:20,000
显示在屏幕

849
00:23:20,000 --> 00:23:21,000
最后打印出来

850
00:23:21,000 --> 00:23:22,000
终于发生了什么

851
00:23:22,000 --> 00:23:23,000
那我们现在

852
00:23:23,000 --> 00:23:25,000
终于可以开始拆开来

853
00:23:25,000 --> 00:23:26,000
一步一步讲了

854
00:23:29,000 --> 00:23:30,000
但今天讲的

855
00:23:30,000 --> 00:23:31,000
好像也不是键盘

856
00:23:32,000 --> 00:23:33,000
今天我们讲什么

857
00:23:33,000 --> 00:23:34,000
讲乱码是吗

858
00:23:34,000 --> 00:23:35,000
对

859
00:23:36,000 --> 00:23:39,000
这个有点像从显示开始了

860
00:23:39,000 --> 00:23:42,000
从显示的这一层面来讲

861
00:23:42,000 --> 00:23:43,000
为什么有时候会看到

862
00:23:43,000 --> 00:23:44,000
我们不想看的东西

863
00:23:44,000 --> 00:23:45,000
或者我们想看的东西

864
00:23:45,000 --> 00:23:47,000
显示出来是错误的

865
00:23:49,000 --> 00:23:50,000
其实首先这个概念

866
00:23:52,000 --> 00:23:53,000
从用户来讲

867
00:23:53,000 --> 00:23:54,000
它显示不正常

868
00:23:54,000 --> 00:23:55,000
它就觉得是乱码

869
00:23:55,000 --> 00:23:56,000
其实这个乱码

870
00:23:56,000 --> 00:23:59,000
背后有很多不一样的道理

871
00:23:59,000 --> 00:24:00,000
对吧 就是

872
00:24:00,000 --> 00:24:03,000
因为如果你一直从字面上来讲

873
00:24:03,000 --> 00:24:04,000
乱码

874
00:24:04,000 --> 00:24:05,000
首先你有个码

875
00:24:05,000 --> 00:24:06,000
然后那个码不对了

876
00:24:06,000 --> 00:24:07,000
就变成乱码

877
00:24:07,000 --> 00:24:08,000
可是实际上

878
00:24:08,000 --> 00:24:10,000
并不一定完全就是

879
00:24:10,000 --> 00:24:11,000
码的问题

880
00:24:11,000 --> 00:24:13,000
有时候还有自酷显示的问题

881
00:24:13,000 --> 00:24:14,000
或者其他问题

882
00:24:15,000 --> 00:24:17,000
英语里面过的乱码叫什么

883
00:24:18,000 --> 00:24:19,000
不知道

884
00:24:19,000 --> 00:24:20,000
英语里面会有乱码吗

885
00:24:20,000 --> 00:24:22,000
对 因为英语里面觉得

886
00:24:22,000 --> 00:24:24,000
所以他们不存在乱码

887
00:24:24,000 --> 00:24:26,000
而且乱码也就是

888
00:24:26,000 --> 00:24:27,000
我们双字节开始的

889
00:24:27,000 --> 00:24:29,000
所以在日本来讲

890
00:24:29,000 --> 00:24:30,000
在英文世界里

891
00:24:30,000 --> 00:24:31,000
他们都把乱码叫成

892
00:24:31,000 --> 00:24:32,000
某级 8 K

893
00:24:32,000 --> 00:24:33,000
是我们日语传过去的

894
00:24:34,000 --> 00:24:35,000
叫什么

895
00:24:37,000 --> 00:24:39,000
因为日语叫某级 8 K

896
00:24:39,000 --> 00:24:41,000
就是文字

897
00:24:41,000 --> 00:24:42,000
某级是文字

898
00:24:42,000 --> 00:24:44,000
然后 8 K 就是变化

899
00:24:44,000 --> 00:24:46,000
就是文字变掉了

900
00:24:46,000 --> 00:24:47,000
OK

901
00:24:47,000 --> 00:24:49,000
德语里面叫

902
00:24:49,000 --> 00:24:52,000
猜识就是符号沙拉

903
00:24:52,000 --> 00:24:53,000
哈

904
00:24:53,000 --> 00:24:54,000
对

905
00:24:54,000 --> 00:24:56,000
就好像沙拉一样

906
00:24:56,000 --> 00:24:58,000
被拌在一起了

907
00:24:59,000 --> 00:25:00,000
那英文叫什么呀

908
00:25:00,000 --> 00:25:02,000
Including error

909
00:25:02,000 --> 00:25:05,000
变码错误吧 应该就讲

910
00:25:06,000 --> 00:25:08,000
不 就是因为

911
00:25:08,000 --> 00:25:10,000
就感觉这个事情在英文里面

912
00:25:10,000 --> 00:25:11,000
挺难出现的

913
00:25:11,000 --> 00:25:12,000
你想想一下

914
00:25:12,000 --> 00:25:13,000
他们都是那个 Askit 的吧

915
00:25:13,000 --> 00:25:14,000
大部分都

916
00:25:14,000 --> 00:25:15,000
基本上所有的这个

917
00:25:15,000 --> 00:25:17,000
这个编码方式都兼容他们

918
00:25:17,000 --> 00:25:18,000
那即便如此

919
00:25:18,000 --> 00:25:20,000
比如说他们看到一个

920
00:25:20,000 --> 00:25:22,000
比如说俄语的那个编码

921
00:25:22,000 --> 00:25:24,000
然后用什么

922
00:25:25,000 --> 00:25:27,000
用 E-SOUL 8859 来

923
00:25:27,000 --> 00:25:28,000
显示的时候

924
00:25:28,000 --> 00:25:30,000
那同样是没有任何意义的文字

925
00:25:30,000 --> 00:25:32,000
那他们对这个东西

926
00:25:32,000 --> 00:25:33,000
总有一个

927
00:25:33,000 --> 00:25:35,000
总得有个称呼

928
00:25:36,000 --> 00:25:38,000
反正在围机上面有一个

929
00:25:38,000 --> 00:25:40,000
这样相关的一个页面

930
00:25:40,000 --> 00:25:41,000
叫模组 Bake

931
00:25:41,000 --> 00:25:44,000
就是日文的那个英

932
00:25:44,000 --> 00:25:45,000
OK

933
00:25:45,000 --> 00:25:47,000
就英语的日语是

934
00:25:47,000 --> 00:25:49,000
Garbled text

935
00:25:49,000 --> 00:25:50,000
OK 好吧

936
00:25:50,000 --> 00:25:52,000
德语就是猜识沙拉

937
00:25:52,000 --> 00:25:53,000
对英语

938
00:25:53,000 --> 00:25:54,000
对

939
00:25:54,000 --> 00:25:55,000
对呀

940
00:25:55,000 --> 00:25:57,000
德文的猜识沙拉这个 page

941
00:25:57,000 --> 00:25:59,000
这个就翻译成乱码

942
00:25:59,000 --> 00:26:01,000
然后英文界面就是模组 Bake

943
00:26:03,000 --> 00:26:05,000
所以英文其实它是那个直译了

944
00:26:05,000 --> 00:26:06,000
对 它直译了

945
00:26:06,000 --> 00:26:07,000
OK

946
00:26:07,000 --> 00:26:09,000
所以英语没有一个原声的

947
00:26:09,000 --> 00:26:11,000
这个就像是 Emoji

948
00:26:11,000 --> 00:26:13,000
就是日文对这现代

949
00:26:14,000 --> 00:26:16,000
这个字符编码的一些贡献

950
00:26:18,000 --> 00:26:21,000
对 这其实是一个比较本地化的一个说法

951
00:26:21,000 --> 00:26:22,000
就是

952
00:26:22,000 --> 00:26:25,000
这种事情可能只是在东亚地区最先出现

953
00:26:25,000 --> 00:26:28,000
然后日本又是一个最早在这个

954
00:26:28,000 --> 00:26:30,000
CJK 领域确定了字符

955
00:26:30,000 --> 00:26:32,000
比较标准字符级的这样一个国家

956
00:26:32,000 --> 00:26:34,000
所以他们可能最早遇到这个问题

957
00:26:34,000 --> 00:26:36,000
他们就创了一个书语这样

958
00:26:36,000 --> 00:26:39,000
所以我们要从字符级和编码开始说

959
00:26:40,000 --> 00:26:41,000
Clear

960
00:26:42,000 --> 00:26:43,000
那先讲中文吧

961
00:26:43,000 --> 00:26:46,000
中文的 Gb 编码是不能不说的

962
00:26:46,000 --> 00:26:47,000
好吧

963
00:26:47,000 --> 00:26:48,000
是不是应该先讲

964
00:26:48,000 --> 00:26:50,000
先讲汉字整个的这个

965
00:26:51,000 --> 00:26:53,000
因为实际上那个

966
00:26:53,000 --> 00:26:56,000
东亚地区以 CJK 为核心的

967
00:26:56,000 --> 00:26:58,000
这个字符级的标准

968
00:26:58,000 --> 00:27:00,000
最早是日本人做的吗

969
00:27:00,000 --> 00:27:01,000
就是 Giz

970
00:27:02,000 --> 00:27:06,000
对 日本在那个时代有比较强烈的

971
00:27:06,000 --> 00:27:08,000
支持日本的需求

972
00:27:08,000 --> 00:27:11,000
因为日本是东亚第一个开始

973
00:27:13,000 --> 00:27:15,000
电子化的国家一个人说

974
00:27:15,000 --> 00:27:17,000
对 或者我觉得

975
00:27:17,000 --> 00:27:21,000
一部分原因也是因为他们最早能够在计算机上

976
00:27:21,000 --> 00:27:23,000
勉强的使用一些本地的文字

977
00:27:23,000 --> 00:27:27,000
比如他们将那个片假名用 ASCII 的扩展实现了

978
00:27:28,000 --> 00:27:31,000
日本最早的一个这个文字编码

979
00:27:31,000 --> 00:27:34,000
应该是 Giz 的 0201

980
00:27:34,000 --> 00:27:35,000
它是个单字节的

981
00:27:35,000 --> 00:27:39,000
很关键它把这个 7 位的 ASCII

982
00:27:39,000 --> 00:27:43,000
给它扩展上面放入他们的半角的片假名

983
00:27:43,000 --> 00:27:45,000
而且他们在这里面

984
00:27:45,000 --> 00:27:47,000
还有 ASCII 下笔

985
00:27:47,000 --> 00:27:48,000
还有两个字不都一样

986
00:27:49,000 --> 00:27:51,000
他们在 92 那一号

987
00:27:51,000 --> 00:27:52,000
原来是反斜杠

988
00:27:52,000 --> 00:27:54,000
然后在 Giz 里面

989
00:27:54,000 --> 00:27:56,000
它给它换成了日元符号

990
00:27:56,000 --> 00:27:58,000
然后在 126 号里面

991
00:27:58,000 --> 00:28:00,000
原来是一个波浪

992
00:28:00,000 --> 00:28:03,000
但是在 Giz 里面给它换成了

993
00:28:03,000 --> 00:28:04,000
这个叫什么

994
00:28:04,000 --> 00:28:05,000
上画线

995
00:28:05,000 --> 00:28:06,000
也不是下画线

996
00:28:06,000 --> 00:28:08,000
也不是中画线的联子符

997
00:28:08,000 --> 00:28:09,000
而是一个上画线

998
00:28:10,000 --> 00:28:12,000
所以这个比较古老了

999
00:28:12,000 --> 00:28:16,000
因为已经是 1969 年 6 月 1 号之定的

1000
00:28:16,000 --> 00:28:20,000
这个可是日本最老最旧的一个文字系统

1001
00:28:20,000 --> 00:28:22,000
那就是文字编码

1002
00:28:23,000 --> 00:28:24,000
所以这是第一次他们

1003
00:28:24,000 --> 00:28:28,000
在计算机上面的实现的日文

1004
00:28:29,000 --> 00:28:31,000
为什么那个时候要选片假名

1005
00:28:31,000 --> 00:28:32,000
不选片假名

1006
00:28:33,000 --> 00:28:34,000
就是传音

1007
00:28:34,000 --> 00:28:36,000
就是打电报

1008
00:28:36,000 --> 00:28:38,000
因为这主要是为了通信的方便

1009
00:28:41,000 --> 00:28:42,000
对 其实那个

1010
00:28:42,000 --> 00:28:44,000
通常来说在技术领域

1011
00:28:44,000 --> 00:28:46,000
是将日本的书写系统

1012
00:28:46,000 --> 00:28:49,000
对应到四种字符上的

1013
00:28:49,000 --> 00:28:51,000
就是四种文字上

1014
00:28:51,000 --> 00:28:53,000
也就是在 writing system 下面

1015
00:28:53,000 --> 00:28:55,000
它用了四种的 script

1016
00:28:55,000 --> 00:28:58,000
一种是所谓的罗马字

1017
00:28:58,000 --> 00:29:00,000
也就是拉丁文

1018
00:29:00,000 --> 00:29:01,000
另一种就是片假名

1019
00:29:01,000 --> 00:29:02,000
还有一种评价名

1020
00:29:02,000 --> 00:29:03,000
最后才是汉字

1021
00:29:06,000 --> 00:29:07,000
是打个差问题

1022
00:29:07,000 --> 00:29:08,000
日本有没有想过

1023
00:29:08,000 --> 00:29:11,000
有没有过要把汉字整个废到死潮

1024
00:29:11,000 --> 00:29:12,000
就是只用假名

1025
00:29:13,000 --> 00:29:14,000
有

1026
00:29:14,000 --> 00:29:15,000
应该有吧

1027
00:29:15,000 --> 00:29:16,000
对 应该有

1028
00:29:17,000 --> 00:29:20,000
然后因为朝鲜就是有这样的字

1029
00:29:20,000 --> 00:29:21,000
而且朝鲜的确是

1030
00:29:21,000 --> 00:29:22,000
就是朝鲜半岛

1031
00:29:22,000 --> 00:29:24,000
朝鲜已经成功了吧

1032
00:29:24,000 --> 00:29:25,000
就朝鲜的话

1033
00:29:25,000 --> 00:29:26,000
它已经几乎就都不用了

1034
00:29:26,000 --> 00:29:28,000
韩国的话就是偶尔还用

1035
00:29:28,000 --> 00:29:31,000
但是现在也就尽量都是用那个

1036
00:29:31,000 --> 00:29:32,000
艳文

1037
00:29:32,000 --> 00:29:35,000
对 中文习惯叫艳文

1038
00:29:35,000 --> 00:29:38,000
但是他们不喜欢艳文这个词

1039
00:29:38,000 --> 00:29:41,000
他们觉得艳文这个词是有歧视

1040
00:29:41,000 --> 00:29:44,000
所以他们更喜欢用 Hanguru 这个词

1041
00:29:44,000 --> 00:29:48,000
所以 Hanguru 和艳文其实还有两个词

1042
00:29:48,000 --> 00:29:49,000
对

1043
00:29:49,000 --> 00:29:52,000
因为艳文所谓的艳是艳语的艳

1044
00:29:52,000 --> 00:29:54,000
就是俗字的

1045
00:29:55,000 --> 00:29:56,000
俗字的意思

1046
00:29:56,000 --> 00:29:59,000
但是日本人倒是很乖的用假名

1047
00:29:59,000 --> 00:30:01,000
因为假名的对应的是真名

1048
00:30:01,000 --> 00:30:03,000
所谓的真名就是汉字

1049
00:30:03,000 --> 00:30:04,000
对

1050
00:30:04,000 --> 00:30:05,000
日本人还乖乖的

1051
00:30:05,000 --> 00:30:06,000
假不就是借的意思吗

1052
00:30:06,000 --> 00:30:07,000
就是假借

1053
00:30:07,000 --> 00:30:08,000
对

1054
00:30:08,000 --> 00:30:11,000
所以假名的还有它的反译是真名

1055
00:30:11,000 --> 00:30:12,000
所谓的真名就是汉字

1056
00:30:12,000 --> 00:30:17,000
所以后来祭祀后面就是在用骗子

1057
00:30:17,000 --> 00:30:22,000
骗假名语之后进行了

1058
00:30:22,000 --> 00:30:24,000
从七八年开始

1059
00:30:24,000 --> 00:30:27,000
他们后来 83 年 90 年 97 年改了好多次

1060
00:30:27,000 --> 00:30:29,000
然后后面就逐渐的就是

1061
00:30:29,000 --> 00:30:32,000
相当于就是在区位码里面

1062
00:30:32,000 --> 00:30:33,000
把所有的字都加进去了

1063
00:30:33,000 --> 00:30:34,000
够用吗

1064
00:30:34,000 --> 00:30:36,000
就是那个码数够用

1065
00:30:36,000 --> 00:30:37,000
也是不停不停的加

1066
00:30:37,000 --> 00:30:39,000
所以没改一次的话

1067
00:30:39,000 --> 00:30:40,000
就是字数越来越多

1068
00:30:40,000 --> 00:30:42,000
因为你用那个

1069
00:30:42,000 --> 00:30:44,000
Escai 你把高位字上做

1070
00:30:44,000 --> 00:30:45,000
也就是 128 个码点

1071
00:30:45,000 --> 00:30:46,000
Escai 只用来实现

1072
00:30:46,000 --> 00:30:48,000
那个半角假名

1073
00:30:48,000 --> 00:30:49,000
对

1074
00:30:49,000 --> 00:30:52,000
Escai 的扩展就是 Escai 扩展

1075
00:30:52,000 --> 00:30:54,000
它当然有一个 Jace 的 Roman 的

1076
00:30:54,000 --> 00:30:56,000
就是一个对 Escai 的一个

1077
00:30:56,000 --> 00:30:59,000
可以说是一个 Escai 的一个 Verion

1078
00:30:59,000 --> 00:31:02,000
你说半角假名还有全角假名

1079
00:31:02,000 --> 00:31:03,000
对

1080
00:31:03,000 --> 00:31:04,000
一开始只有半角假名吗

1081
00:31:04,000 --> 00:31:06,000
这干净其实有点乱了

1082
00:31:06,000 --> 00:31:08,000
我们是不是可以趁机来整理一下

1083
00:31:08,000 --> 00:31:10,000
就是所谓的这个半角假名

1084
00:31:10,000 --> 00:31:12,000
它一方面指的是这个假名的宽度

1085
00:31:12,000 --> 00:31:15,000
是那个全宽汉字的一半

1086
00:31:15,000 --> 00:31:17,000
然后同时另一方面

1087
00:31:17,000 --> 00:31:19,000
它也同意的指向了说

1088
00:31:19,000 --> 00:31:21,000
这个字符只使用了一个字节

1089
00:31:21,000 --> 00:31:23,000
这样子的一个意思

1090
00:31:23,000 --> 00:31:25,000
所以在上次节目我也说过

1091
00:31:25,000 --> 00:31:27,000
就是所谓的单字节

1092
00:31:27,000 --> 00:31:30,000
双字节和半角全角

1093
00:31:30,000 --> 00:31:32,000
原来是两个概念嘛

1094
00:31:32,000 --> 00:31:34,000
但是呢就是在字体排名里面

1095
00:31:34,000 --> 00:31:36,000
是所谓的半角全角

1096
00:31:36,000 --> 00:31:38,000
它只是一个宽度的概念而已

1097
00:31:38,000 --> 00:31:39,000
对

1098
00:31:39,000 --> 00:31:41,000
半角全角其实应该局限于

1099
00:31:41,000 --> 00:31:42,000
描述视觉上的一个效果

1100
00:31:42,000 --> 00:31:43,000
对

1101
00:31:43,000 --> 00:31:45,000
它是实际物理上面的一个宽度问题

1102
00:31:45,000 --> 00:31:47,000
然后呢单字节双字节

1103
00:31:47,000 --> 00:31:50,000
这就是编码的问题嘛

1104
00:31:50,000 --> 00:31:53,000
而在很久以前的确

1105
00:31:53,000 --> 00:31:56,000
半角的就是单字节

1106
00:31:56,000 --> 00:31:58,000
然后全角的就是双字节

1107
00:31:58,000 --> 00:32:01,000
所以呢就有人开始混用了

1108
00:32:01,000 --> 00:32:02,000
对

1109
00:32:02,000 --> 00:32:04,000
而且这个混用其实是

1110
00:32:04,000 --> 00:32:06,000
带有一定的主动性的

1111
00:32:06,000 --> 00:32:08,000
就是说他们并不是错误的用了

1112
00:32:08,000 --> 00:32:11,000
他还是希望以这种方式

1113
00:32:11,000 --> 00:32:13,000
帮助别人理解和记忆

1114
00:32:13,000 --> 00:32:14,000
记两个嘛

1115
00:32:14,000 --> 00:32:16,000
到了现在混在一起了呀

1116
00:32:16,000 --> 00:32:19,000
所以那个假名到底是

1117
00:32:19,000 --> 00:32:21,000
就是说各数一共

1118
00:32:21,000 --> 00:32:24,000
能不能装到 128 个码电里面去

1119
00:32:24,000 --> 00:32:26,000
实际上呢就是在最早的时候呢

1120
00:32:26,000 --> 00:32:30,000
它就是 GCX 的 0208 的话

1121
00:32:30,000 --> 00:32:31,000
它只装了 94 个字嘛

1122
00:32:31,000 --> 00:32:33,000
就是就只装了一个半角片假名

1123
00:32:33,000 --> 00:32:35,000
就就就就差不多用完了嘛

1124
00:32:35,000 --> 00:32:38,000
128 个点你用了 94 个

1125
00:32:38,000 --> 00:32:40,000
那全角的跟这个半角有什么

1126
00:32:40,000 --> 00:32:42,000
全角就都用两个字符了嘛

1127
00:32:42,000 --> 00:32:44,000
就用两个字节来表示了

1128
00:32:44,000 --> 00:32:45,000
但是它表达的

1129
00:32:45,000 --> 00:32:46,000
它就是说一个半角的假名

1130
00:32:46,000 --> 00:32:47,000
一个全角的假名

1131
00:32:47,000 --> 00:32:48,000
它表示的是同一个东西吗

1132
00:32:48,000 --> 00:32:49,000
是同一个东西

1133
00:32:49,000 --> 00:32:51,000
所以现在就变成做两套了

1134
00:32:53,000 --> 00:32:54,000
为什么要做两套

1135
00:32:54,000 --> 00:32:56,000
因为因为那个半角假名

1136
00:32:56,000 --> 00:32:58,000
显示的时候有一个

1137
00:32:58,000 --> 00:33:01,000
就是一开始的那个 GIS 的假名

1138
00:33:01,000 --> 00:33:03,000
呃呃片假名在显示的时候

1139
00:33:03,000 --> 00:33:06,000
它的宽度和英文字幕是一样的

1140
00:33:06,000 --> 00:33:07,000
对

1141
00:33:07,000 --> 00:33:08,000
然后为了

1142
00:33:08,000 --> 00:33:10,000
就是所以后来有的那个

1143
00:33:10,000 --> 00:33:12,000
全宽度的汉字的时候

1144
00:33:12,000 --> 00:33:14,000
那个你在全宽度的汉字里面

1145
00:33:14,000 --> 00:33:18,000
夹杂着显示半宽度的片假名就很丑

1146
00:33:18,000 --> 00:33:20,000
所以就做一套全宽度的

1147
00:33:20,000 --> 00:33:22,000
全角假名

1148
00:33:22,000 --> 00:33:23,000
就是这么来的

1149
00:33:23,000 --> 00:33:24,000
所以我理解一下

1150
00:33:24,000 --> 00:33:26,000
就是说呃

1151
00:33:26,000 --> 00:33:27,000
因为是为了对齐的需求

1152
00:33:27,000 --> 00:33:29,000
因为那个时候是那种

1153
00:33:29,000 --> 00:33:31,000
就是就是 column display 嘛

1154
00:33:31,000 --> 00:33:33,000
就是正列的显示器嘛

1155
00:33:33,000 --> 00:33:35,000
就为了满足那个跟英文对齐的需求

1156
00:33:35,000 --> 00:33:37,000
所以我们强制

1157
00:33:37,000 --> 00:33:39,000
就是牺牲了这个美观程度

1158
00:33:39,000 --> 00:33:41,000
把那个假名压缩成半宽的

1159
00:33:41,000 --> 00:33:42,000
对

1160
00:33:42,000 --> 00:33:44,000
然后后来因为有

1161
00:33:44,000 --> 00:33:46,000
因为就变成那个图形 graphic

1162
00:33:46,000 --> 00:33:47,000
就介面的时候

1163
00:33:47,000 --> 00:33:48,000
就是为了好看

1164
00:33:48,000 --> 00:33:49,000
其实它应该是

1165
00:33:49,000 --> 00:33:51,000
假名是应该和汉字等宽的嘛

1166
00:33:51,000 --> 00:33:52,000
没有到 graphic 时代

1167
00:33:52,000 --> 00:33:54,000
就是在那个显示器

1168
00:33:54,000 --> 00:33:56,000
可以设置为双字节宽的时代

1169
00:33:56,000 --> 00:33:57,000
就开始了

1170
00:33:57,000 --> 00:33:58,000
对

1171
00:33:58,000 --> 00:33:59,000
就跟汉字一样嘛

1172
00:33:59,000 --> 00:34:01,000
这个需求就是因为是为了好看

1173
00:34:01,000 --> 00:34:02,000
就是为了好看

1174
00:34:02,000 --> 00:34:04,000
如果你两个汉字中间

1175
00:34:04,000 --> 00:34:06,000
夹着一个半宽度的假名

1176
00:34:06,000 --> 00:34:07,000
就很丑了

1177
00:34:07,000 --> 00:34:08,000
而且

1178
00:34:08,000 --> 00:34:09,000
制表啊什么的

1179
00:34:09,000 --> 00:34:11,000
全都非常难

1180
00:34:11,000 --> 00:34:12,000
就还是为了对齐

1181
00:34:12,000 --> 00:34:14,000
只是说以前是因为了半宽

1182
00:34:14,000 --> 00:34:16,000
是为了和英文字母对齐

1183
00:34:16,000 --> 00:34:19,000
是为了和汉字对齐

1184
00:34:19,000 --> 00:34:20,000
但是呢

1185
00:34:20,000 --> 00:34:22,000
就是比如说在日本的

1186
00:34:22,000 --> 00:34:23,000
比如说当年

1187
00:34:23,000 --> 00:34:25,000
就是 iMode 的手机时代

1188
00:34:25,000 --> 00:34:26,000
日本的手机时代

1189
00:34:26,000 --> 00:34:27,000
因为片假名

1190
00:34:27,000 --> 00:34:28,000
它是表英文字嘛

1191
00:34:28,000 --> 00:34:29,000
所以片假名的

1192
00:34:29,000 --> 00:34:32,000
外来与往往都写得很长

1193
00:34:32,000 --> 00:34:35,000
所以它故意用半角片假名

1194
00:34:35,000 --> 00:34:36,000
省空间

1195
00:34:36,000 --> 00:34:37,000
节约

1196
00:34:37,000 --> 00:34:38,000
OK

1197
00:34:38,000 --> 00:34:39,000
就免得出现节约屏幕空间

1198
00:34:39,000 --> 00:34:40,000
有这么做的

1199
00:34:40,000 --> 00:34:42,000
为什么要为德语

1200
00:34:42,000 --> 00:34:43,000
对

1201
00:34:43,000 --> 00:34:44,000
德文的单词那么长

1202
00:34:44,000 --> 00:34:45,000
因为德语

1203
00:34:45,000 --> 00:34:46,000
你那个每个词都不写

1204
00:34:46,000 --> 00:34:47,000
都那么长

1205
00:34:47,000 --> 00:34:48,000
又没有空格

1206
00:34:48,000 --> 00:34:49,000
德语说需要大量使用

1207
00:34:49,000 --> 00:34:51,000
简写和缩写

1208
00:34:51,000 --> 00:34:52,000
所以在

1209
00:34:52,000 --> 00:34:54,000
在从字体排印的传统上来讲

1210
00:34:54,000 --> 00:34:56,000
德文是大量使用了

1211
00:34:56,000 --> 00:34:57,000
和字

1212
00:34:57,000 --> 00:34:58,000
Ligritz

1213
00:34:58,000 --> 00:35:00,000
和宅体字 Condensed

1214
00:35:00,000 --> 00:35:01,000
对 是这样

1215
00:35:01,000 --> 00:35:03,000
尤其在高速公路排上

1216
00:35:03,000 --> 00:35:04,000
半宽的假名

1217
00:35:04,000 --> 00:35:05,000
看起来会不会很别扭

1218
00:35:05,000 --> 00:35:06,000
因为那么窄

1219
00:35:06,000 --> 00:35:07,000
会有一点

1220
00:35:07,000 --> 00:35:09,000
确实会有一点

1221
00:35:09,000 --> 00:35:11,000
反正我觉得很丑

1222
00:35:11,000 --> 00:35:13,000
对 它是一种妥协

1223
00:35:15,000 --> 00:35:16,000
OK

1224
00:35:16,000 --> 00:35:17,000
所以于是下一个问题就来了

1225
00:35:17,000 --> 00:35:18,000
就是说

1226
00:35:18,000 --> 00:35:20,000
半宽的假名对应的那个

1227
00:35:20,000 --> 00:35:21,000
那个马点和全宽

1228
00:35:21,000 --> 00:35:23,000
就是双字节的对应的马点

1229
00:35:23,000 --> 00:35:25,000
它有这个

1230
00:35:25,000 --> 00:35:27,000
是一样的吗

1231
00:35:28,000 --> 00:35:29,000
或者这么问

1232
00:35:29,000 --> 00:35:30,000
就是说

1233
00:35:30,000 --> 00:35:31,000
如果在现代的这个

1234
00:35:31,000 --> 00:35:32,000
来处理的话

1235
00:35:32,000 --> 00:35:33,000
是两个字符

1236
00:35:33,000 --> 00:35:35,000
是 全是不一样的

1237
00:35:37,000 --> 00:35:38,000
OK 那在 unicode 里面

1238
00:35:38,000 --> 00:35:40,000
做那个 code point

1239
00:35:40,000 --> 00:35:41,000
它是一样的吗

1240
00:35:41,000 --> 00:35:42,000
好像也不一样

1241
00:35:42,000 --> 00:35:43,000
不一样

1242
00:35:43,000 --> 00:35:45,000
unicode 它为了上后金融

1243
00:35:45,000 --> 00:35:47,000
所以它也不一样

1244
00:35:47,000 --> 00:35:48,000
对

1245
00:35:48,000 --> 00:35:49,000
那如果说

1246
00:35:49,000 --> 00:35:50,000
我们现在重新来

1247
00:35:50,000 --> 00:35:51,000
设计这么一件事

1248
00:35:51,000 --> 00:35:52,000
其实它应该是用

1249
00:35:52,000 --> 00:35:53,000
同一个 code point

1250
00:35:53,000 --> 00:35:55,000
但是在那个

1251
00:35:55,000 --> 00:35:56,000
Render 渲染的时候

1252
00:35:56,000 --> 00:35:57,000
应该选择不同的宽度

1253
00:35:57,000 --> 00:35:59,000
以适应对齐就可以了

1254
00:35:59,000 --> 00:36:00,000
对 从理想角度的话

1255
00:36:00,000 --> 00:36:01,000
确实是可以这样做的

1256
00:36:01,000 --> 00:36:02,000
是 没错

1257
00:36:02,000 --> 00:36:04,000
但对

1258
00:36:04,000 --> 00:36:05,000
那这是一个

1259
00:36:05,000 --> 00:36:06,000
向后兼容的宽度

1260
00:36:06,000 --> 00:36:07,000
人类是要重写的

1261
00:36:07,000 --> 00:36:08,000
对吧

1262
00:36:10,000 --> 00:36:11,000
对

1263
00:36:11,000 --> 00:36:12,000
这其实是一个

1264
00:36:12,000 --> 00:36:13,000
无法避免的问题

1265
00:36:13,000 --> 00:36:14,000
因为就是这个

1266
00:36:14,000 --> 00:36:15,000
编码的发展

1267
00:36:15,000 --> 00:36:16,000
就是向后兼容

1268
00:36:16,000 --> 00:36:17,000
有这个需求

1269
00:36:17,000 --> 00:36:18,000
所以它一定会保留两套

1270
00:36:20,000 --> 00:36:21,000
对 以前是做了

1271
00:36:21,000 --> 00:36:22,000
很多莫名其妙的事情

1272
00:36:22,000 --> 00:36:24,000
然后后面来的新方案

1273
00:36:24,000 --> 00:36:25,000
就不停不停地

1274
00:36:25,000 --> 00:36:27,000
要为前面的擦屁股

1275
00:36:27,000 --> 00:36:28,000
擦屁股

1276
00:36:29,000 --> 00:36:30,000
好烦

1277
00:36:30,000 --> 00:36:31,000
然后后面我们就

1278
00:36:31,000 --> 00:36:33,000
终于有了双字节了 对吧

1279
00:36:33,000 --> 00:36:35,000
有了双字节

1280
00:36:35,000 --> 00:36:36,000
就有了区位

1281
00:36:36,000 --> 00:36:37,000
就所谓的

1282
00:36:37,000 --> 00:36:38,000
以前的区位码

1283
00:36:38,000 --> 00:36:40,000
日本好像叫区点 是吧

1284
00:36:40,000 --> 00:36:42,000
对 日本叫区点

1285
00:36:42,000 --> 00:36:43,000
英文区

1286
00:36:43,000 --> 00:36:44,000
区是 row 嘛

1287
00:36:44,000 --> 00:36:45,000
就第几排

1288
00:36:45,000 --> 00:36:46,000
row

1289
00:36:46,000 --> 00:36:47,000
然后那个点

1290
00:36:47,000 --> 00:36:48,000
就是感受的 sale

1291
00:36:51,000 --> 00:36:52,000
就是

1292
00:36:52,000 --> 00:36:53,000
举着行和列

1293
00:36:54,000 --> 00:36:55,000
所以它是

1294
00:36:55,000 --> 00:36:56,000
真的是有一个表

1295
00:36:56,000 --> 00:36:57,000
然后以行

1296
00:36:57,000 --> 00:36:59,000
几行几列

1297
00:36:59,000 --> 00:37:00,000
是什么字

1298
00:37:00,000 --> 00:37:01,000
会有这么一个表出来 对吧

1299
00:37:01,000 --> 00:37:02,000
对的

1300
00:37:03,000 --> 00:37:05,000
然后后来咱们中国的

1301
00:37:05,000 --> 00:37:06,000
Gb 的设计

1302
00:37:06,000 --> 00:37:08,000
就是完全延期了

1303
00:37:08,000 --> 00:37:10,000
GIS 的整个设计系统

1304
00:37:10,000 --> 00:37:11,000
而且

1305
00:37:11,000 --> 00:37:13,000
所以双字节和区位码

1306
00:37:13,000 --> 00:37:14,000
都是日本人吗

1307
00:37:14,000 --> 00:37:15,000
最早是日本的

1308
00:37:15,000 --> 00:37:16,000
是 GIS

1309
00:37:16,000 --> 00:37:17,000
对

1310
00:37:17,000 --> 00:37:18,000
而且咱们就和

1311
00:37:18,000 --> 00:37:19,000
也是学习日本的

1312
00:37:19,000 --> 00:37:20,000
就是把汉字

1313
00:37:20,000 --> 00:37:21,000
根据使用频率

1314
00:37:21,000 --> 00:37:23,000
分成了两个等级

1315
00:37:23,000 --> 00:37:25,000
常用字和自常用字

1316
00:37:27,000 --> 00:37:28,000
然后日本他们叫

1317
00:37:28,000 --> 00:37:29,000
第一水准汉字

1318
00:37:29,000 --> 00:37:30,000
和第二水准汉字

1319
00:37:31,000 --> 00:37:33,000
怎么有种一流和二流的感觉

1320
00:37:33,000 --> 00:37:36,000
就是根据使用的频率

1321
00:37:37,000 --> 00:37:39,000
那咱们到 Gb 的 2 3 122 也是吗

1322
00:37:40,000 --> 00:37:42,000
而且咱们常用字的话

1323
00:37:42,000 --> 00:37:44,000
是按照音序排列的

1324
00:37:44,000 --> 00:37:46,000
次常用字就是按照

1325
00:37:46,000 --> 00:37:47,000
笔划

1326
00:37:47,000 --> 00:37:48,000
不守

1327
00:37:48,000 --> 00:37:49,000
不守

1328
00:37:49,000 --> 00:37:50,000
按不守

1329
00:37:50,000 --> 00:37:51,000
不守

1330
00:37:51,000 --> 00:37:52,000
按不守排列的 对

1331
00:37:52,000 --> 00:37:54,000
就这个表

1332
00:37:54,000 --> 00:37:56,000
就是有按两个音序

1333
00:37:56,000 --> 00:37:58,000
和不守排列的表

1334
00:37:58,000 --> 00:38:00,000
是后来所有做

1335
00:38:00,000 --> 00:38:02,000
就是的书法

1336
00:38:02,000 --> 00:38:04,000
然后转换到汉字的基础吗

1337
00:38:04,000 --> 00:38:05,000
对呀 那一核恐慌

1338
00:38:05,000 --> 00:38:06,000
就是无讨单独做了

1339
00:38:06,000 --> 00:38:08,000
一期就是做了编码那一期吗

1340
00:38:08,000 --> 00:38:09,000
一开始就说了一个问题

1341
00:38:09,000 --> 00:38:11,000
首先是一个 encombing

1342
00:38:11,000 --> 00:38:13,000
就是编码和解码的过程对吧

1343
00:38:13,000 --> 00:38:15,000
所以 Gb 比如说 Gb 2 3 122

1344
00:38:15,000 --> 00:38:17,000
它到底规定了什么东西

1345
00:38:17,000 --> 00:38:19,000
它不仅是规定了那个字汇

1346
00:38:19,000 --> 00:38:21,000
就是我要收这么多汉字

1347
00:38:21,000 --> 00:38:23,000
而且它还规定了就是

1348
00:38:23,000 --> 00:38:25,000
要怎么来编这个码

1349
00:38:25,000 --> 00:38:27,000
就说那个

1350
00:38:27,000 --> 00:38:29,000
就是 Gb 2 3 12 那个书里面

1351
00:38:29,000 --> 00:38:31,000
应该是有一个很长的列表

1352
00:38:31,000 --> 00:38:32,000
把那个

1353
00:38:32,000 --> 00:38:35,000
每个区位的汉字都写那

1354
00:38:35,000 --> 00:38:37,000
然后再规定一个方法去怎么去

1355
00:38:37,000 --> 00:38:39,000
锁印到那个汉字

1356
00:38:39,000 --> 00:38:41,000
因为 Gb 2 3 122 它的正式名字叫

1357
00:38:41,000 --> 00:38:43,000
信息交换用

1358
00:38:43,000 --> 00:38:45,000
汉字编码自符集

1359
00:38:45,000 --> 00:38:47,000
首先它是要信息交换的

1360
00:38:47,000 --> 00:38:48,000
然后呢

1361
00:38:48,000 --> 00:38:50,000
它是给汉字进行编码的

1362
00:38:50,000 --> 00:38:52,000
然后是一个自符

1363
00:38:52,000 --> 00:38:54,000
然后有个自符集

1364
00:38:54,000 --> 00:38:56,000
Character Set 这样一个东西

1365
00:38:56,000 --> 00:38:58,000
嗯

1366
00:38:58,000 --> 00:39:00,000
它是 94 个区

1367
00:39:00,000 --> 00:39:01,000
94 个区

1368
00:39:01,000 --> 00:39:02,000
94 个位

1369
00:39:02,000 --> 00:39:04,000
然后就有这么多

1370
00:39:04,000 --> 00:39:05,000
这个码位

1371
00:39:05,000 --> 00:39:06,000
然后把

1372
00:39:06,000 --> 00:39:09,000
6763 个汉字

1373
00:39:09,000 --> 00:39:10,000
给放进去

1374
00:39:10,000 --> 00:39:11,000
当然了除了汉字以外

1375
00:39:11,000 --> 00:39:13,000
还有那些什么图形符号

1376
00:39:13,000 --> 00:39:14,000
什么的

1377
00:39:15,000 --> 00:39:16,000
等一下你说 94 个区

1378
00:39:16,000 --> 00:39:17,000
94 个码是说有这个

1379
00:39:17,000 --> 00:39:18,000
这个举程

1380
00:39:18,000 --> 00:39:19,000
94 乘 94

1381
00:39:19,000 --> 00:39:20,000
94 乘 94

1382
00:39:20,000 --> 00:39:21,000
对吧

1383
00:39:21,000 --> 00:39:22,000
一个格子对吧

1384
00:39:22,000 --> 00:39:24,000
这个跟 GIS 是一样的

1385
00:39:24,000 --> 00:39:25,000
嗯

1386
00:39:25,000 --> 00:39:26,000
那你那个刚才说

1387
00:39:26,000 --> 00:39:27,000
常用和不常用

1388
00:39:27,000 --> 00:39:29,000
从哪里体现出来呢

1389
00:39:29,000 --> 00:39:31,000
常用和不常用是两个集合嘛

1390
00:39:31,000 --> 00:39:32,000
就是就是就是

1391
00:39:32,000 --> 00:39:35,000
常用不常用是人为规定的两个集合

1392
00:39:35,000 --> 00:39:37,000
然后他们以先后次序排

1393
00:39:37,000 --> 00:39:38,000
就是如果在那个表格里面

1394
00:39:38,000 --> 00:39:40,000
它它你比你刚才讲有两种方式

1395
00:39:40,000 --> 00:39:41,000
来排序吗

1396
00:39:41,000 --> 00:39:43,000
一种是按这个独音排

1397
00:39:43,000 --> 00:39:44,000
一个是按手排

1398
00:39:44,000 --> 00:39:45,000
其实不是这样

1399
00:39:45,000 --> 00:39:46,000
是有点混

1400
00:39:46,000 --> 00:39:47,000
就是说

1401
00:39:47,000 --> 00:39:48,000
首先将他们分成了

1402
00:39:48,000 --> 00:39:49,000
常用和不常用

1403
00:39:49,000 --> 00:39:50,000
两个区块吧

1404
00:39:50,000 --> 00:39:51,000
你可以理解成

1405
00:39:51,000 --> 00:39:52,000
然后有对

1406
00:39:52,000 --> 00:39:54,000
两个两类字

1407
00:39:54,000 --> 00:39:55,000
你先给

1408
00:39:55,000 --> 00:39:56,000
先把那个字

1409
00:39:56,000 --> 00:39:57,000
对

1410
00:39:57,000 --> 00:39:58,000
然后把这个

1411
00:39:58,000 --> 00:39:59,000
我们一般叫 class

1412
00:39:59,000 --> 00:40:01,000
就一个 class 叫常用

1413
00:40:01,000 --> 00:40:03,000
或者说叫一级汉字

1414
00:40:03,000 --> 00:40:04,000
另一个 class 是不常用

1415
00:40:04,000 --> 00:40:05,000
叫二级汉字

1416
00:40:05,000 --> 00:40:06,000
那么在一级汉字

1417
00:40:06,000 --> 00:40:07,000
这个 class 内部

1418
00:40:07,000 --> 00:40:09,000
它的排序是按音式的

1419
00:40:09,000 --> 00:40:10,000
而在二级汉字内部

1420
00:40:10,000 --> 00:40:12,000
它的排序是按部手的

1421
00:40:13,000 --> 00:40:15,000
那跟这个 94 乘 94

1422
00:40:15,000 --> 00:40:16,000
这个格子有什么关系

1423
00:40:16,000 --> 00:40:18,000
94 乘 94 只是它

1424
00:40:18,000 --> 00:40:21,000
排部这个区位表的一种方式

1425
00:40:21,000 --> 00:40:22,000
对号入做

1426
00:40:22,000 --> 00:40:25,000
就是 94 乘 94 是座位

1427
00:40:25,000 --> 00:40:27,000
而那些字呢

1428
00:40:27,000 --> 00:40:29,000
就是把它按到这个座位上去

1429
00:40:31,000 --> 00:40:32,000
那所以我可以这么理解吗

1430
00:40:32,000 --> 00:40:34,000
就是在这个 94 乘 94

1431
00:40:34,000 --> 00:40:35,000
一个方格子里面

1432
00:40:35,000 --> 00:40:37,000
前半部分是常用的汉字

1433
00:40:37,000 --> 00:40:39,000
然后是按音讯排的

1434
00:40:39,000 --> 00:40:40,000
后半部分是不常用的汉字

1435
00:40:40,000 --> 00:40:41,000
对

1436
00:40:41,000 --> 00:40:42,000
就是什么

1437
00:40:42,000 --> 00:40:45,000
第 16 到 55 区是一级汉字

1438
00:40:46,000 --> 00:40:48,000
然后所有一级汉字放在这里面

1439
00:40:48,000 --> 00:40:50,000
就是从第 16 区到第 55 区

1440
00:40:50,000 --> 00:40:52,000
就是相当于

1441
00:40:52,000 --> 00:40:54,000
一级汉字按拼音次序排列

1442
00:40:54,000 --> 00:40:56,000
一共 3755

1443
00:40:56,000 --> 00:40:57,000
3755 个

1444
00:40:57,000 --> 00:40:59,000
然后从第 56 区开始

1445
00:40:59,000 --> 00:41:01,000
一直到第 87 区是二级汉字

1446
00:41:01,000 --> 00:41:04,000
然后排了 3008 个

1447
00:41:04,000 --> 00:41:06,000
然后前面还有什么特殊符号之类的

1448
00:41:08,000 --> 00:41:09,000
对

1449
00:41:09,000 --> 00:41:10,000
那个 R 字嘛

1450
00:41:10,000 --> 00:41:12,000
就是音讯里面的第一个字

1451
00:41:12,000 --> 00:41:14,000
区位嘛是 1601

1452
00:41:14,000 --> 00:41:16,000
就是它 16 区的第一个

1453
00:41:16,000 --> 00:41:18,000
所以大家如果去翻这个 Gb 的话

1454
00:41:18,000 --> 00:41:20,000
它就每个汉字

1455
00:41:20,000 --> 00:41:23,000
它只是给每个汉字安排一个座位

1456
00:41:23,000 --> 00:41:24,000
嗯

1457
00:41:24,000 --> 00:41:25,000
嗯

1458
00:41:25,000 --> 00:41:28,000
所以比如说 R 字是 1601 嘛

1459
00:41:28,000 --> 00:41:29,000
嗯

1460
00:41:29,000 --> 00:41:30,000
嗯

1461
00:41:30,000 --> 00:41:31,000
但问题是

1462
00:41:31,000 --> 00:41:32,000
后面我们就

1463
00:41:32,000 --> 00:41:33,000
好

1464
00:41:33,000 --> 00:41:35,000
我们这个 1601 就怎么编成码

1465
00:41:35,000 --> 00:41:36,000
这是编

1466
00:41:36,000 --> 00:41:38,000
这是另外一个编码的事情

1467
00:41:38,000 --> 00:41:39,000
对

1468
00:41:39,000 --> 00:41:41,000
我们刚讲的都是一些自符集的事情

1469
00:41:41,000 --> 00:41:42,000
对

1470
00:41:42,000 --> 00:41:43,000
所以不仅是有字

1471
00:41:43,000 --> 00:41:45,000
然后还要有个编码的过程

1472
00:41:45,000 --> 00:41:47,000
我们先找到那么多字

1473
00:41:47,000 --> 00:41:49,000
然后再给它安排这么多码位

1474
00:41:49,000 --> 00:41:51,000
然后给它放上去以后了

1475
00:41:51,000 --> 00:41:52,000
还要进行编码

1476
00:41:52,000 --> 00:41:53,000
嗯

1477
00:41:54,000 --> 00:41:56,000
等等我打个岔问一个

1478
00:41:56,000 --> 00:41:59,000
所以区位码和 unicode 的 corp point

1479
00:41:59,000 --> 00:42:00,000
是可以对应起来的对吧

1480
00:42:00,000 --> 00:42:01,000
可以对应

1481
00:42:01,000 --> 00:42:02,000
但是呢

1482
00:42:03,000 --> 00:42:04,000
就是

1483
00:42:04,000 --> 00:42:06,000
排列方式是完全不一样的

1484
00:42:06,000 --> 00:42:09,000
就是说应该说 Gb 2312

1485
00:42:09,000 --> 00:42:11,000
它这份国家标准

1486
00:42:11,000 --> 00:42:13,000
是设置两部分

1487
00:42:13,000 --> 00:42:15,000
一部分它设置的是一个

1488
00:42:15,000 --> 00:42:17,000
我们常称叫做

1489
00:42:17,000 --> 00:42:20,000
编码自符集的这样一个自符集标准

1490
00:42:20,000 --> 00:42:23,000
而另一部分它也同时包含了一套

1491
00:42:23,000 --> 00:42:26,000
编码的 incoding 的一套规则

1492
00:42:26,000 --> 00:42:27,000
对

1493
00:42:27,000 --> 00:42:28,000
那我重新描述一下

1494
00:42:28,000 --> 00:42:29,000
应该是这么说

1495
00:42:29,000 --> 00:42:30,000
就是说

1496
00:42:30,000 --> 00:42:31,000
Gb 2312

1497
00:42:31,000 --> 00:42:33,000
这个我们作为编码方式来讲的时候

1498
00:42:33,000 --> 00:42:35,000
它是对应的是 UTF 8

1499
00:42:35,000 --> 00:42:36,000
UTF 16

1500
00:42:36,000 --> 00:42:37,000
TF 32 这种东西

1501
00:42:37,000 --> 00:42:38,000
然后

1502
00:42:38,000 --> 00:42:40,000
Gb 2312 这个标

1503
00:42:40,000 --> 00:42:42,000
这个规范里面

1504
00:42:42,000 --> 00:42:43,000
区位

1505
00:42:43,000 --> 00:42:44,000
和区位码

1506
00:42:44,000 --> 00:42:46,000
就是对应 UniCode 的 codeport

1507
00:42:46,000 --> 00:42:47,000
Gb 2312 就相当于一个

1508
00:42:47,000 --> 00:42:48,000
只有一个编码方

1509
00:42:48,000 --> 00:42:51,000
只有 UTF 16 编码方的 UniCode

1510
00:42:52,000 --> 00:42:53,000
对

1511
00:42:53,000 --> 00:42:54,000
没错

1512
00:42:54,000 --> 00:42:55,000
对

1513
00:42:55,000 --> 00:42:56,000
OK

1514
00:42:56,000 --> 00:42:58,000
20 亿

1515
00:42:59,000 --> 00:43:00,000
那现在来讲

1516
00:43:00,000 --> 00:43:02,000
Gb 2312 作为编码方式的时候

1517
00:43:02,000 --> 00:43:04,000
它怎么玩的吗

1518
00:43:04,000 --> 00:43:06,000
作为编码方式来怎么玩

1519
00:43:06,000 --> 00:43:07,000
就其实

1520
00:43:07,000 --> 00:43:08,000
就是每个

1521
00:43:08,000 --> 00:43:10,000
其实跟 Gb 2316 一样

1522
00:43:10,000 --> 00:43:12,000
就是每个汉字和符号

1523
00:43:12,000 --> 00:43:13,000
都需要两个字

1524
00:43:13,000 --> 00:43:14,000
因为一个字也放不下

1525
00:43:14,000 --> 00:43:15,000
然后

1526
00:43:16,000 --> 00:43:17,000
第一个字叫高位

1527
00:43:17,000 --> 00:43:18,000
第二个字叫低位

1528
00:43:19,000 --> 00:43:20,000
然后

1529
00:43:20,000 --> 00:43:21,000
高位

1530
00:43:21,000 --> 00:43:22,000
高位有一个

1531
00:43:22,000 --> 00:43:24,000
高位有一个对应的方法

1532
00:43:24,000 --> 00:43:25,000
就是把

1533
00:43:27,000 --> 00:43:28,000
一共用了 87 个区

1534
00:43:28,000 --> 00:43:30,000
就是 96 区没有用完

1535
00:43:30,000 --> 00:43:31,000
然后

1536
00:43:31,000 --> 00:43:33,000
从 1 区到 87 区

1537
00:43:33,000 --> 00:43:34,000
那个 2 G 汉字

1538
00:43:34,000 --> 00:43:35,000
加上特殊符号

1539
00:43:35,000 --> 00:43:37,000
就已经排完了

1540
00:43:37,000 --> 00:43:39,000
所以它就把

1541
00:43:40,000 --> 00:43:42,000
字节 0 XA 0

1542
00:43:42,000 --> 00:43:43,000
就是

1543
00:43:45,000 --> 00:43:46,000
16 进制的 A 0

1544
00:43:46,000 --> 00:43:48,000
加上 1 到 87

1545
00:43:49,000 --> 00:43:50,000
然后低位字节

1546
00:43:50,000 --> 00:43:51,000
是 1 到 94

1547
00:43:51,000 --> 00:43:53,000
加上 0 XA 0

1548
00:43:53,000 --> 00:43:55,000
所以如果你有一个

1549
00:43:56,000 --> 00:43:57,000
所以 0 XA 0

1550
00:43:58,000 --> 00:43:59,000
0 XA 1

1551
00:43:59,000 --> 00:44:00,000
0 XA 1 就是相当于

1552
00:44:00,000 --> 00:44:01,000
第一区的第一位

1553
00:44:01,000 --> 00:44:02,000
就这么来的

1554
00:44:03,000 --> 00:44:05,000
然后高位字节

1555
00:44:05,000 --> 00:44:06,000
就是相当于

1556
00:44:06,000 --> 00:44:09,000
0 XB 0 到 0 XF 7

1557
00:44:09,000 --> 00:44:12,000
第二次节是 0 XA 1 到 0 XFE

1558
00:44:12,000 --> 00:44:16,000
然后一共有 6768 个

1559
00:44:16,000 --> 00:44:17,000
马位

1560
00:44:17,000 --> 00:44:19,000
然后有一些是空的

1561
00:44:19,000 --> 00:44:20,000
对

1562
00:44:22,000 --> 00:44:23,000
所以它这个

1563
00:44:23,000 --> 00:44:24,000
高位字节和低位字节

1564
00:44:24,000 --> 00:44:26,000
其实并没有和那个区

1565
00:44:26,000 --> 00:44:27,000
没关系

1566
00:44:27,000 --> 00:44:28,000
没有什么关系

1567
00:44:28,000 --> 00:44:29,000
对高位字的低位字节

1568
00:44:29,000 --> 00:44:31,000
完全对应于

1569
00:44:32,000 --> 00:44:34,000
区号加上

1570
00:44:36,000 --> 00:44:38,000
相当于 XOY

1571
00:44:38,000 --> 00:44:39,000
对

1572
00:44:40,000 --> 00:44:41,000
相当于 XOY

1573
00:44:41,000 --> 00:44:42,000
就说这两个

1574
00:44:42,000 --> 00:44:43,000
因为那个表

1575
00:44:43,000 --> 00:44:45,000
那个我们刚才讲的那个 TRI

1576
00:44:45,000 --> 00:44:46,000
它是一个方格

1577
00:44:46,000 --> 00:44:47,000
就是 94×94

1578
00:44:47,000 --> 00:44:48,000
所以关我如果

1579
00:44:48,000 --> 00:44:49,000
用两个字节来表示

1580
00:44:49,000 --> 00:44:51,000
就高位字节对应的是

1581
00:44:51,000 --> 00:44:52,000
航

1582
00:44:52,000 --> 00:44:53,000
然后低位字节对应的是

1583
00:44:53,000 --> 00:44:54,000
列

1584
00:44:54,000 --> 00:44:55,000
是谁

1585
00:44:55,000 --> 00:44:56,000
是这个意思

1586
00:44:56,000 --> 00:44:57,000
对吧

1587
00:44:57,000 --> 00:44:58,000
实际上是一个

1588
00:44:58,000 --> 00:45:00,000
87 到 94 的长方形去

1589
00:45:00,000 --> 00:45:02,000
有几个区是没有用的

1590
00:45:02,000 --> 00:45:03,000
对吧

1591
00:45:03,000 --> 00:45:04,000
对

1592
00:45:04,000 --> 00:45:06,000
87 以后到 94 区就没有用了

1593
00:45:06,000 --> 00:45:07,000
所以其实并不是一个方

1594
00:45:07,000 --> 00:45:09,000
90×94 方的格子而是

1595
00:45:09,000 --> 00:45:10,000
它没有前板

1596
00:45:10,000 --> 00:45:11,000
有空

1597
00:45:11,000 --> 00:45:12,000
对

1598
00:45:12,000 --> 00:45:13,000
就有座位控制

1599
00:45:13,000 --> 00:45:14,000
但大致上可以认为

1600
00:45:14,000 --> 00:45:15,000
高位字节表示航

1601
00:45:15,000 --> 00:45:16,000
然后低位字节

1602
00:45:16,000 --> 00:45:17,000
对

1603
00:45:17,000 --> 00:45:18,000
然后中间有些特殊的那个

1604
00:45:18,000 --> 00:45:19,000
空格的地方

1605
00:45:19,000 --> 00:45:20,000
对

1606
00:45:20,000 --> 00:45:21,000
然后这个

1607
00:45:21,000 --> 00:45:22,000
每个都要加上

1608
00:45:22,000 --> 00:45:24,000
这个 16 进制的 A 0

1609
00:45:24,000 --> 00:45:25,000
就是可以转换为

1610
00:45:25,000 --> 00:45:26,000
ASCII 的那个

1611
00:45:26,000 --> 00:45:28,000
就是第一位至唯一的时候

1612
00:45:28,000 --> 00:45:29,000
就 128 的区

1613
00:45:30,000 --> 00:45:31,000
OK

1614
00:45:31,000 --> 00:45:32,000
make sense

1615
00:45:32,000 --> 00:45:33,000
刚才说了

1616
00:45:33,000 --> 00:45:34,000
2312

1617
00:45:34,000 --> 00:45:35,000
它

1618
00:45:35,000 --> 00:45:36,000
只有 6000 多个汉字

1619
00:45:36,000 --> 00:45:37,000
不够用

1620
00:45:37,000 --> 00:45:38,000
所以后来就又进行的

1621
00:45:38,000 --> 00:45:39,000
扩展

1622
00:45:39,000 --> 00:45:40,000
后面就有什么

1623
00:45:40,000 --> 00:45:41,000
GBK

1624
00:45:41,000 --> 00:45:43,000
然后后面还有 GB 18030

1625
00:45:44,000 --> 00:45:45,000
对

1626
00:45:45,000 --> 00:45:46,000
我们小时候有很多同学的

1627
00:45:46,000 --> 00:45:47,000
那个名字

1628
00:45:47,000 --> 00:45:48,000
就是起一个冷屁的名字

1629
00:45:48,000 --> 00:45:49,000
然后到时候去录什么

1630
00:45:49,000 --> 00:45:50,000
准考证

1631
00:45:50,000 --> 00:45:52,000
Lance 8 就录不出来

1632
00:45:52,000 --> 00:45:53,000
就是因为这个

1633
00:45:53,000 --> 00:45:54,000
又嗨

1634
00:45:54,000 --> 00:45:55,000
比如说

1635
00:45:55,000 --> 00:45:57,000
两个吉祥的吉念折

1636
00:45:58,000 --> 00:45:59,000
嗯

1637
00:45:59,000 --> 00:46:00,000
逃折

1638
00:46:00,000 --> 00:46:01,000
对

1639
00:46:01,000 --> 00:46:02,000
这个字

1640
00:46:02,000 --> 00:46:04,000
原来是作为折穴的折的

1641
00:46:04,000 --> 00:46:05,000
一体字

1642
00:46:05,000 --> 00:46:06,000
废弃不用的

1643
00:46:06,000 --> 00:46:07,000
所以在当时的

1644
00:46:07,000 --> 00:46:08,000
那个 GB 2312 里面

1645
00:46:08,000 --> 00:46:10,000
是没有这个字的

1646
00:46:11,000 --> 00:46:12,000
OK

1647
00:46:12,000 --> 00:46:13,000
我当时有同学叫什么

1648
00:46:13,000 --> 00:46:14,000
叫

1649
00:46:15,000 --> 00:46:16,000
对

1650
00:46:16,000 --> 00:46:17,000
它

1651
00:46:17,000 --> 00:46:18,000
什么力 V

1652
00:46:18,000 --> 00:46:19,000
对

1653
00:46:19,000 --> 00:46:20,000
它中间有一个

1654
00:46:20,000 --> 00:46:21,000
那个力字

1655
00:46:21,000 --> 00:46:22,000
好像是

1656
00:46:22,000 --> 00:46:23,000
木字旁

1657
00:46:23,000 --> 00:46:24,000
右边有一个

1658
00:46:25,000 --> 00:46:27,000
看起来像 V 海的 V

1659
00:46:27,000 --> 00:46:28,000
但是下来是个 L

1660
00:46:28,000 --> 00:46:30,000
就很冷屁的一个字

1661
00:46:30,000 --> 00:46:31,000
每次录真考证

1662
00:46:31,000 --> 00:46:32,000
它就叫

1663
00:46:32,000 --> 00:46:34,000
断空格而飞

1664
00:46:35,000 --> 00:46:36,000
好可怜

1665
00:46:36,000 --> 00:46:37,000
当时我记得

1666
00:46:37,000 --> 00:46:38,000
就是为了解决

1667
00:46:38,000 --> 00:46:40,000
这个用 GB 2312 这个字符

1668
00:46:40,000 --> 00:46:42,000
几不够用那种生辟字

1669
00:46:42,000 --> 00:46:43,000
很多人

1670
00:46:43,000 --> 00:46:44,000
试用那个

1671
00:46:44,000 --> 00:46:45,000
为图的方式

1672
00:46:45,000 --> 00:46:47,000
是表示那些生辟字的

1673
00:46:47,000 --> 00:46:48,000
就直接画个图写

1674
00:46:48,000 --> 00:46:49,000
还有人手写吧

1675
00:46:49,000 --> 00:46:50,000
不是

1676
00:46:50,000 --> 00:46:51,000
就是机器打不出来吗

1677
00:46:51,000 --> 00:46:52,000
就随后面手写

1678
00:46:52,000 --> 00:46:53,000
再补一个是吧

1679
00:46:53,000 --> 00:46:54,000
嗯

1680
00:46:54,000 --> 00:46:55,000
对

1681
00:46:55,000 --> 00:46:56,000
这也是个解放

1682
00:46:56,000 --> 00:46:58,000
和那个用为图的方式差不多

1683
00:46:58,000 --> 00:47:00,000
就那有一个问题

1684
00:47:00,000 --> 00:47:02,000
就 GBK 和 GB 18030

1685
00:47:02,000 --> 00:47:04,000
也是用两个位的吗

1686
00:47:04,000 --> 00:47:06,000
就是双字节

1687
00:47:06,000 --> 00:47:08,000
GB 18030 本身

1688
00:47:08,000 --> 00:47:09,000
两个字节够吗

1689
00:47:09,000 --> 00:47:11,000
应该要用四字节

1690
00:47:11,000 --> 00:47:12,000
还是变成

1691
00:47:12,000 --> 00:47:13,000
对

1692
00:47:13,000 --> 00:47:14,000
GB 130 它是四字节的

1693
00:47:14,000 --> 00:47:15,000
那 GBK 呢

1694
00:47:15,000 --> 00:47:16,000
如果按照刚才那个

1695
00:47:16,000 --> 00:47:18,000
GB 2312 的编码方式

1696
00:47:18,000 --> 00:47:19,000
那我们高位

1697
00:47:19,000 --> 00:47:20,000
都不用都留出来

1698
00:47:20,000 --> 00:47:22,000
就是就你两个字节

1699
00:47:22,000 --> 00:47:23,000
其实只有一共 14 个位

1700
00:47:23,000 --> 00:47:24,000
可以用吗

1701
00:47:24,000 --> 00:47:26,000
14 的 2 的 14 次方

1702
00:47:26,000 --> 00:47:29,000
应该是 16384 个字嘛

1703
00:47:29,000 --> 00:47:31,000
然后 GBK 其实收入了

1704
00:47:31,000 --> 00:47:33,000
21886 个

1705
00:47:33,000 --> 00:47:35,000
其实肯定是不够用的呀

1706
00:47:35,000 --> 00:47:36,000
嗯

1707
00:47:36,000 --> 00:47:37,000
所以怎么解决这个问题的

1708
00:47:37,000 --> 00:47:38,000
嗯

1709
00:47:38,000 --> 00:47:39,000
所以刚才我那个算法

1710
00:47:39,000 --> 00:47:40,000
不对

1711
00:47:40,000 --> 00:47:41,000
它那个双字节

1712
00:47:41,000 --> 00:47:43,000
它只算第 1 个字节的那个

1713
00:47:43,000 --> 00:47:44,000
那个第 1 位是不能用的

1714
00:47:44,000 --> 00:47:45,000
其实是

1715
00:47:45,000 --> 00:47:46,000
应该有

1716
00:47:46,000 --> 00:47:48,000
15 个位可以用

1717
00:47:48,000 --> 00:47:49,000
15 个位的话

1718
00:47:49,000 --> 00:47:50,000
其实可以用到

1719
00:47:50,000 --> 00:47:52,000
32000 多个那个

1720
00:47:52,000 --> 00:47:54,000
那个那个叫什么

1721
00:47:54,000 --> 00:47:56,000
所以 GBK 是双字节的

1722
00:47:56,000 --> 00:47:58,000
然后 GB 18030 的话

1723
00:47:58,000 --> 00:48:00,000
是双字节四字节混用的

1724
00:48:00,000 --> 00:48:01,000
对

1725
00:48:01,000 --> 00:48:02,000
GBK 本身

1726
00:48:02,000 --> 00:48:04,000
它不是一个正式的 GB

1727
00:48:04,000 --> 00:48:06,000
GBK 是微软搞的是不是

1728
00:48:06,000 --> 00:48:07,000
对

1729
00:48:07,000 --> 00:48:08,000
嗯

1730
00:48:08,000 --> 00:48:09,000
它就是内码是

1731
00:48:09,000 --> 00:48:11,000
K 是扩展的扩嘛

1732
00:48:11,000 --> 00:48:12,000
但是它本身

1733
00:48:12,000 --> 00:48:13,000
扩展的扩

1734
00:48:13,000 --> 00:48:14,000
但是就是

1735
00:48:14,000 --> 00:48:15,000
汉字内码扩展规范嘛

1736
00:48:15,000 --> 00:48:16,000
但是它本身

1737
00:48:16,000 --> 00:48:17,000
它没有号

1738
00:48:17,000 --> 00:48:18,000
其实因为它不是一个

1739
00:48:18,000 --> 00:48:20,000
正式的 GB

1740
00:48:20,000 --> 00:48:22,000
对 GB 是国标的意思吗

1741
00:48:22,000 --> 00:48:23,000
它不是一个正式的

1742
00:48:23,000 --> 00:48:24,000
国标文件

1743
00:48:24,000 --> 00:48:25,000
对

1744
00:48:25,000 --> 00:48:26,000
其实我们说 GBK 的时候

1745
00:48:26,000 --> 00:48:28,000
大多数指的是它的那个

1746
00:48:28,000 --> 00:48:29,000
字符级标准

1747
00:48:29,000 --> 00:48:31,000
而不是指它的编码方式

1748
00:48:31,000 --> 00:48:33,000
那么 GBK 这个字符级

1749
00:48:33,000 --> 00:48:34,000
你完全可以用 UNIQLO 的

1750
00:48:34,000 --> 00:48:35,000
来给它编码

1751
00:48:35,000 --> 00:48:39,000
那 GBK 和 GB 2 312 是什么关系

1752
00:48:39,000 --> 00:48:41,000
GB 2 312 呢

1753
00:48:41,000 --> 00:48:43,000
它首先定义了一个字符级

1754
00:48:43,000 --> 00:48:44,000
就定义了一个

1755
00:48:44,000 --> 00:48:45,000
字符级的标准

1756
00:48:45,000 --> 00:48:46,000
同时呢

1757
00:48:46,000 --> 00:48:48,000
它还给了一套编码方啊

1758
00:48:48,000 --> 00:48:51,000
但是同时 GB 2 312 的那个字符级

1759
00:48:51,000 --> 00:48:52,000
我们也可以用 UNIQLO 的

1760
00:48:52,000 --> 00:48:53,000
来给它编码

1761
00:48:53,000 --> 00:48:54,000
也就是说

1762
00:48:54,000 --> 00:48:55,000
一个字符级

1763
00:48:55,000 --> 00:48:57,000
它可是可以用很多种编码方式

1764
00:48:57,000 --> 00:48:58,000
来实现它的

1765
00:48:58,000 --> 00:49:00,000
同时一种编码方式

1766
00:49:00,000 --> 00:49:02,000
它也是可以去编很多个

1767
00:49:02,000 --> 00:49:03,000
不同的字符级的

1768
00:49:03,000 --> 00:49:04,000
就他们并不是一个

1769
00:49:04,000 --> 00:49:06,000
完全一一对应的关系

1770
00:49:06,000 --> 00:49:07,000
对

1771
00:49:07,000 --> 00:49:08,000
所以其实

1772
00:49:08,000 --> 00:49:09,000
我们在讨论这些的时候

1773
00:49:09,000 --> 00:49:11,000
只要时刻的区分清楚

1774
00:49:11,000 --> 00:49:13,000
我们是在说一个字符级

1775
00:49:13,000 --> 00:49:15,000
还是在说一个编码方式的话

1776
00:49:15,000 --> 00:49:17,000
就不太会混淆

1777
00:49:17,000 --> 00:49:18,000
好

1778
00:49:18,000 --> 00:49:20,000
当从字符级的来讲的话

1779
00:49:20,000 --> 00:49:21,000
所以现在就是

1780
00:49:21,000 --> 00:49:23,000
大家在买字体的时候

1781
00:49:23,000 --> 00:49:24,000
就经常会说

1782
00:49:24,000 --> 00:49:26,000
这个字体显示不出来嘛

1783
00:49:26,000 --> 00:49:29,000
在中国的字体场上的话

1784
00:49:29,000 --> 00:49:32,000
肯定它首先是要做

1785
00:49:32,000 --> 00:49:34,000
GB 2 312 里面的

1786
00:49:34,000 --> 00:49:36,000
它那个字一共是六千多个字码

1787
00:49:36,000 --> 00:49:37,000
它是先做这个

1788
00:49:37,000 --> 00:49:38,000
然后

1789
00:49:38,000 --> 00:49:39,000
就那些是必须的

1790
00:49:39,000 --> 00:49:40,000
对一般来讲

1791
00:49:40,000 --> 00:49:42,000
就是这是最低的门槛

1792
00:49:42,000 --> 00:49:46,000
然后有支持 GBK 的

1793
00:49:46,000 --> 00:49:47,000
的字库

1794
00:49:47,000 --> 00:49:50,000
然后有支持 GB 1803 的字库

1795
00:49:50,000 --> 00:49:53,000
说实话 GB 1803 的字库

1796
00:49:53,000 --> 00:49:54,000
还非常少

1797
00:49:54,000 --> 00:49:55,000
现在

1798
00:49:55,000 --> 00:49:56,000
字实太多了

1799
00:49:56,000 --> 00:49:58,000
对 完整支持的非常少

1800
00:49:58,000 --> 00:50:00,000
对 反正是六万多

1801
00:50:00,000 --> 00:50:01,000
因为那时候在做的时候

1802
00:50:01,000 --> 00:50:03,000
把那个什么少数民族

1803
00:50:03,000 --> 00:50:05,000
兄弟民族的一些文字

1804
00:50:05,000 --> 00:50:07,000
也一起做进去了嘛

1805
00:50:07,000 --> 00:50:08,000
对

1806
00:50:08,000 --> 00:50:10,000
一个不小心可能就超过了

1807
00:50:10,000 --> 00:50:12,000
OpenType 单个文件的

1808
00:50:12,000 --> 00:50:14,000
Gliff 的限制

1809
00:50:14,000 --> 00:50:16,000
对 因为一个 OpenType

1810
00:50:16,000 --> 00:50:18,000
用一个 OnSign 的 Short

1811
00:50:18,000 --> 00:50:20,000
所以只有六万

1812
00:50:20,000 --> 00:50:21,000
也只有六万多个吧

1813
00:50:21,000 --> 00:50:23,000
就应该是六五

1814
00:50:23,000 --> 00:50:25,000
六五三五

1815
00:50:25,000 --> 00:50:26,000
对

1816
00:50:26,000 --> 00:50:27,000
六五三六

1817
00:50:27,000 --> 00:50:28,000
很有可能就放不下

1818
00:50:28,000 --> 00:50:30,000
然后在从编码方式的说

1819
00:50:30,000 --> 00:50:31,000
刚才我们也讨论了

1820
00:50:31,000 --> 00:50:33,000
那 GB 2 312 和 GBK

1821
00:50:33,000 --> 00:50:34,000
都是双字

1822
00:50:34,000 --> 00:50:36,000
都是双字节的字幅级的

1823
00:50:36,000 --> 00:50:38,000
那 GB 1803 里是

1824
00:50:38,000 --> 00:50:41,000
单字节 双字节 四字节

1825
00:50:41,000 --> 00:50:43,000
它是变长的

1826
00:50:43,000 --> 00:50:44,000
这个思想的话

1827
00:50:44,000 --> 00:50:46,000
跟 Unicode 就是一样的嘛

1828
00:50:47,000 --> 00:50:48,000
我问一个问题

1829
00:50:48,000 --> 00:50:50,000
就是 GB 18030 那个码点

1830
00:50:50,000 --> 00:50:52,000
和 Unicode 的码点是重合的吗

1831
00:50:52,000 --> 00:50:53,000
不一样

1832
00:50:53,000 --> 00:50:54,000
也不一样

1833
00:50:54,000 --> 00:50:55,000
后来就是那个

1834
00:50:55,000 --> 00:50:58,000
后面要讲 CJK Unification 的关系

1835
00:50:58,000 --> 00:51:00,000
所以就是同样一个字的话

1836
00:51:00,000 --> 00:51:02,000
在 GB 里面它是这个座位

1837
00:51:02,000 --> 00:51:03,000
要用这个编码

1838
00:51:03,000 --> 00:51:05,000
但是在 Unicode 的话

1839
00:51:05,000 --> 00:51:06,000
它是另外一个座位

1840
00:51:06,000 --> 00:51:07,000
要另外一个编码

1841
00:51:07,000 --> 00:51:10,000
那 GB 2 312 GBK 和 GB 18030

1842
00:51:10,000 --> 00:51:12,000
他们是一个超级的关系吗

1843
00:51:12,000 --> 00:51:13,000
还是也不一样

1844
00:51:13,000 --> 00:51:15,000
基本上是互相兼容的

1845
00:51:15,000 --> 00:51:17,000
就是向后兼容的

1846
00:51:17,000 --> 00:51:21,000
就是 GBK 里面包含 GB 2 312

1847
00:51:21,000 --> 00:51:22,000
2312 那些字

1848
00:51:22,000 --> 00:51:23,000
全部的字

1849
00:51:23,000 --> 00:51:25,000
在那个对应的位置上

1850
00:51:25,000 --> 00:51:28,000
然后 GB 18030 是包含 GBK

1851
00:51:28,000 --> 00:51:30,000
全部的字并且也是在那个位置上

1852
00:51:30,000 --> 00:51:31,000
对

1853
00:51:31,000 --> 00:51:32,000
对

1854
00:51:32,000 --> 00:51:34,000
就是一个超级一个

1855
00:51:34,000 --> 00:51:35,000
比一个大的概念

1856
00:51:35,000 --> 00:51:36,000
对

1857
00:51:37,000 --> 00:51:40,000
在这个 GB 的这一系列字幅级里面

1858
00:51:40,000 --> 00:51:43,000
最坑的只有 GB 2 345 这个标准

1859
00:51:43,000 --> 00:51:45,000
那么其他的都是一个

1860
00:51:45,000 --> 00:51:48,000
就是越向后越往前兼容

1861
00:51:48,000 --> 00:51:50,000
就是说后来的肯定是兼容前来的

1862
00:51:50,000 --> 00:51:51,000
这样的

1863
00:51:51,000 --> 00:51:52,000
所以我们在这里有机会

1864
00:51:52,000 --> 00:51:54,000
一定要说一下 GB 12345

1865
00:51:55,000 --> 00:51:56,000
这是什么

1866
00:51:57,000 --> 00:51:58,000
一个特别坑

1867
00:51:58,000 --> 00:51:59,000
GB 12345

1868
00:51:59,000 --> 00:52:00,000
我从来没有听过这个东西

1869
00:52:00,000 --> 00:52:01,000
对

1870
00:52:02,000 --> 00:52:04,000
GB 12345 是那个

1871
00:52:04,000 --> 00:52:06,000
字体圈的一个噩梦

1872
00:52:07,000 --> 00:52:09,000
都受不到这个东西

1873
00:52:09,000 --> 00:52:11,000
就经常说的就是那个什么

1874
00:52:11,000 --> 00:52:12,000
反体字字幅级

1875
00:52:12,000 --> 00:52:14,000
它其实那编码就是跟那个

1876
00:52:14,000 --> 00:52:16,000
2312 是一样的

1877
00:52:18,000 --> 00:52:21,000
可以看成 GB 2312 的反体版本

1878
00:52:21,000 --> 00:52:23,000
共收入有 6866 个汉字

1879
00:52:23,000 --> 00:52:25,000
对 但多了几个

1880
00:52:25,000 --> 00:52:27,000
因为大家知道就是

1881
00:52:27,000 --> 00:52:29,000
反减不是 1 1 对应的

1882
00:52:29,000 --> 00:52:30,000
没错

1883
00:52:30,000 --> 00:52:31,000
在汉字在减话的时候

1884
00:52:31,000 --> 00:52:34,000
一般是多反对

1885
00:52:34,000 --> 00:52:35,000
把好多个反体字

1886
00:52:35,000 --> 00:52:38,000
同时减化成一个减几字

1887
00:52:38,000 --> 00:52:40,000
所以原来它就是在

1888
00:52:40,000 --> 00:52:43,000
GB 2312 是定的是减体字

1889
00:52:43,000 --> 00:52:45,000
那它改成 12345 的时候

1890
00:52:45,000 --> 00:52:47,000
它要写反体字

1891
00:52:47,000 --> 00:52:48,000
它就要变多嘛

1892
00:52:48,000 --> 00:52:49,000
对

1893
00:52:49,000 --> 00:52:52,000
但是多反对一减的时候

1894
00:52:52,000 --> 00:52:53,000
怎么办呢

1895
00:52:53,000 --> 00:52:55,000
它就会挑选一个

1896
00:52:55,000 --> 00:52:57,000
就是对应的反体字

1897
00:52:57,000 --> 00:52:58,000
先按上去

1898
00:52:58,000 --> 00:52:59,000
然后剩下的那些

1899
00:52:59,000 --> 00:53:01,000
剩下来的反体字

1900
00:53:01,000 --> 00:53:02,000
它统一放到最后

1901
00:53:02,000 --> 00:53:04,000
马位上的统一放到最后

1902
00:53:04,000 --> 00:53:07,000
就是之前说的那些空位的那些地方

1903
00:53:07,000 --> 00:53:08,000
对

1904
00:53:08,000 --> 00:53:09,000
减反转话这里

1905
00:53:09,000 --> 00:53:10,000
可能要提一下

1906
00:53:10,000 --> 00:53:11,000
刚刚说多反对一减

1907
00:53:11,000 --> 00:53:13,000
其实也有一减对多反

1908
00:53:13,000 --> 00:53:14,000
就是多

1909
00:53:14,000 --> 00:53:15,000
错错

1910
00:53:15,000 --> 00:53:17,000
一减对多减

1911
00:53:17,000 --> 00:53:20,000
一减对多反是非常常见的

1912
00:53:20,000 --> 00:53:24,000
但是一减对多减的话

1913
00:53:24,000 --> 00:53:25,000
它其实往往是一个

1914
00:53:25,000 --> 00:53:26,000
一体字之间的

1915
00:53:26,000 --> 00:53:27,000
对 但是的确也有

1916
00:53:27,000 --> 00:53:28,000
相互的关系

1917
00:53:28,000 --> 00:53:30,000
对 它不是一个

1918
00:53:30,000 --> 00:53:32,000
数学上怎么描述

1919
00:53:32,000 --> 00:53:33,000
这种函数的概念来的

1920
00:53:33,000 --> 00:53:34,000
我一下忘了

1921
00:53:34,000 --> 00:53:35,000
这不是函数

1922
00:53:35,000 --> 00:53:36,000
单日

1923
00:53:36,000 --> 00:53:39,000
对 不是单设的一个概念

1924
00:53:39,000 --> 00:53:41,000
一凡对多减

1925
00:53:41,000 --> 00:53:43,000
比如说乾坤的钱

1926
00:53:43,000 --> 00:53:44,000
对 幽

1927
00:53:44,000 --> 00:53:46,000
对 在反体字里的话

1928
00:53:46,000 --> 00:53:47,000
它可能是干

1929
00:53:47,000 --> 00:53:48,000
也可能是钱

1930
00:53:48,000 --> 00:53:49,000
它是一个多英字

1931
00:53:49,000 --> 00:53:51,000
但是对到简体的

1932
00:53:51,000 --> 00:53:52,000
因为它用途不同

1933
00:53:52,000 --> 00:53:53,000
就把它分化成

1934
00:53:53,000 --> 00:53:55,000
它这种不同的写法了

1935
00:53:55,000 --> 00:53:57,000
对 它把干的时候

1936
00:53:57,000 --> 00:53:58,000
对应到另外一个字上去

1937
00:53:58,000 --> 00:54:00,000
所以多英字就变成了

1938
00:54:00,000 --> 00:54:02,000
一个单英字专止

1939
00:54:02,000 --> 00:54:03,000
乾坤的钱

1940
00:54:03,000 --> 00:54:05,000
所以其实很多

1941
00:54:05,000 --> 00:54:06,000
朋友写的那种

1942
00:54:06,000 --> 00:54:08,000
网页在线的什么

1943
00:54:08,000 --> 00:54:09,000
减繁转化工具

1944
00:54:09,000 --> 00:54:10,000
都是不合格的

1945
00:54:10,000 --> 00:54:12,000
对 如果你的算法很简单的话

1946
00:54:12,000 --> 00:54:14,000
确实会输策

1947
00:54:14,000 --> 00:54:16,000
很多人都是直接拿一个

1948
00:54:16,000 --> 00:54:18,000
Map Dictionary 的表

1949
00:54:18,000 --> 00:54:20,000
换成那个就完了

1950
00:54:20,000 --> 00:54:22,000
但其实是要根据语境

1951
00:54:22,000 --> 00:54:25,000
和钱和文来决定的

1952
00:54:25,000 --> 00:54:27,000
对吧 钱坤换成干坤

1953
00:54:27,000 --> 00:54:29,000
还蛮多的

1954
00:54:29,000 --> 00:54:31,000
然后说到 GB 1235 的

1955
00:54:31,000 --> 00:54:33,000
字体产品的话

1956
00:54:33,000 --> 00:54:34,000
我们也必须要说一下

1957
00:54:34,000 --> 00:54:36,000
对吧 因为内码是一样的

1958
00:54:36,000 --> 00:54:38,000
所以在国内的一些

1959
00:54:38,000 --> 00:54:39,000
大的字体厂商

1960
00:54:39,000 --> 00:54:41,000
他们曾经就是有

1961
00:54:41,000 --> 00:54:43,000
到现在也有他们所谓的

1962
00:54:43,000 --> 00:54:45,000
反铁和字的自酷

1963
00:54:45,000 --> 00:54:48,000
就以换自酷的形式

1964
00:54:48,000 --> 00:54:49,000
来实现反铁

1965
00:54:49,000 --> 00:54:50,000
而不是没有换内码

1966
00:54:50,000 --> 00:54:53,000
就是因为那个 GB 1235 的问题吗

1967
00:54:53,000 --> 00:54:54,000
对 所以就是因为他们用

1968
00:54:54,000 --> 00:54:57,000
1235 来做编码

1969
00:54:57,000 --> 00:54:58,000
对

1970
00:54:58,000 --> 00:55:00,000
它只是在表面

1971
00:55:00,000 --> 00:55:02,000
因为到了用自酷显示

1972
00:55:02,000 --> 00:55:05,000
它其实是最后显示的层级了

1973
00:55:05,000 --> 00:55:06,000
它码其实没变

1974
00:55:06,000 --> 00:55:07,000
对

1975
00:55:07,000 --> 00:55:08,000
这样的话

1976
00:55:08,000 --> 00:55:10,000
这样做出来的 GB 1235 的

1977
00:55:10,000 --> 00:55:13,000
反铁自酷就不能解决

1978
00:55:13,000 --> 00:55:15,000
一减对多反的问题

1979
00:55:15,000 --> 00:55:17,000
然后就经常出错字

1980
00:55:17,000 --> 00:55:19,000
比如说用

1981
00:55:19,000 --> 00:55:20,000
什么

1982
00:55:20,000 --> 00:55:22,000
永和九年岁在魁仇

1983
00:55:22,000 --> 00:55:24,000
那个仇字就变成了

1984
00:55:24,000 --> 00:55:25,000
没仇的仇了

1985
00:55:25,000 --> 00:55:28,000
所以我曾经在我的微博上讲说

1986
00:55:28,000 --> 00:55:31,000
如果一个产品

1987
00:55:31,000 --> 00:55:33,000
一个自顾产品

1988
00:55:33,000 --> 00:55:35,000
如果会导致错字的话

1989
00:55:35,000 --> 00:55:36,000
我觉得这应该讲是一个

1990
00:55:36,000 --> 00:55:38,000
不及格的产品

1991
00:55:38,000 --> 00:55:39,000
但是它在自我设计方式下

1992
00:55:39,000 --> 00:55:41,000
它没有别的解决方案了

1993
00:55:41,000 --> 00:55:42,000
对

1994
00:55:42,000 --> 00:55:43,000
所以就是说

1995
00:55:43,000 --> 00:55:47,000
应该废除用 GB 1235 来缝装

1996
00:55:47,000 --> 00:55:50,000
就是那个本来就是一个 Hack

1997
00:55:50,000 --> 00:55:52,000
对 那是一个固定 17 的产物

1998
00:55:52,000 --> 00:55:55,000
而且是一个不成熟的产物

1999
00:55:55,000 --> 00:55:56,000
过度发案

2000
00:55:56,000 --> 00:55:57,000
现在其实都

2001
00:55:57,000 --> 00:55:58,000
就刚刚我们说

2002
00:55:58,000 --> 00:56:00,000
我们都没有听过 GB 1235 这个规范

2003
00:56:00,000 --> 00:56:02,000
其实应该用的也不多了吧

2004
00:56:02,000 --> 00:56:03,000
对

2005
00:56:03,000 --> 00:56:05,000
就因为国内有几个大厂

2006
00:56:05,000 --> 00:56:08,000
就是大家现在去买繁体自库的话

2007
00:56:08,000 --> 00:56:10,000
有很多就这样的

2008
00:56:10,000 --> 00:56:12,000
所以另外一个问题

2009
00:56:12,000 --> 00:56:13,000
就是说繁简转换

2010
00:56:13,000 --> 00:56:14,000
应该怎么转换

2011
00:56:14,000 --> 00:56:16,000
就不能单纯的就是

2012
00:56:16,000 --> 00:56:18,000
像用 GB 1235 的自库

2013
00:56:18,000 --> 00:56:20,000
到最后只转自库

2014
00:56:20,000 --> 00:56:22,000
而没有转马

2015
00:56:22,000 --> 00:56:25,000
我们应该彻头彻尾的把马换掉

2016
00:56:25,000 --> 00:56:28,000
就不能用那种 dirty 的 Hack

2017
00:56:29,000 --> 00:56:31,000
就是因为有大厂

2018
00:56:31,000 --> 00:56:33,000
中国的很多大厂的话都做了

2019
00:56:33,000 --> 00:56:35,000
GB 1235 的自库

2020
00:56:35,000 --> 00:56:36,000
所以导致现在街头下午

2021
00:56:36,000 --> 00:56:38,000
很多挫字都是这样

2022
00:56:38,000 --> 00:56:39,000
我就去砍了

2023
00:56:41,000 --> 00:56:43,000
这是名副习视的文字语

2024
00:56:47,000 --> 00:56:49,000
好吧 那我们终于可以说

2025
00:56:49,000 --> 00:56:51,000
UniCode 的问题了

2026
00:56:51,000 --> 00:56:54,000
Windows 的那个要不要先讲一下

2027
00:56:54,000 --> 00:56:57,000
就为什么世界上会先有 GBK

2028
00:56:58,000 --> 00:56:59,000
操作系统的发展

2029
00:56:59,000 --> 00:57:00,000
已经远远超过了

2030
00:57:00,000 --> 00:57:02,000
国家制定标准的发展

2031
00:57:02,000 --> 00:57:03,000
然后操作系统

2032
00:57:03,000 --> 00:57:04,000
厂商微软

2033
00:57:04,000 --> 00:57:06,000
不得不先解决了一个

2034
00:57:06,000 --> 00:57:08,000
人们必须要解决的痛点

2035
00:57:08,000 --> 00:57:11,000
然后国家才跟上的推出了 GBK

2036
00:57:11,000 --> 00:57:13,000
GBR

2037
00:57:13,000 --> 00:57:14,000
那个什么

2038
00:57:14,000 --> 00:57:15,000
要把 030

2039
00:57:15,000 --> 00:57:17,000
来取代 GBK

2040
00:57:17,000 --> 00:57:18,000
我觉得从这个策判

2041
00:57:18,000 --> 00:57:19,000
其实反映出了

2042
00:57:19,000 --> 00:57:22,000
现在我们已经处在一个

2043
00:57:22,000 --> 00:57:24,000
接近于那种

2044
00:57:24,000 --> 00:57:26,000
就是跨国的

2045
00:57:27,000 --> 00:57:28,000
或者怎么说

2046
00:57:28,000 --> 00:57:29,000
从这件事情开始

2047
00:57:29,000 --> 00:57:32,000
是跨国的公司取代政府

2048
00:57:32,000 --> 00:57:34,000
来解决你的一些名声问题的

2049
00:57:34,000 --> 00:57:36,000
一个时代

2050
00:57:36,000 --> 00:57:39,000
其实就是从这种事情开始

2051
00:57:39,000 --> 00:57:40,000
如果你要说的话

2052
00:57:40,000 --> 00:57:41,000
一切肯定就是

2053
00:57:41,000 --> 00:57:43,000
政治肯定是落后的

2054
00:57:43,000 --> 00:57:45,000
永远都是经济先行的

2055
00:57:45,000 --> 00:57:46,000
所以我们现在

2056
00:57:46,000 --> 00:57:51,000
我意思是在信息时代之前

2057
00:57:51,000 --> 00:57:53,000
很少会有一个公司

2058
00:57:53,000 --> 00:57:58,000
会在这种跨国的

2059
00:57:58,000 --> 00:58:02,000
超越政府界限的程度上

2060
00:58:02,000 --> 00:58:03,000
来改变我们的生活

2061
00:58:03,000 --> 00:58:04,000
大国吧

2062
00:58:04,000 --> 00:58:05,000
小国其实这种事情

2063
00:58:05,000 --> 00:58:06,000
经常发生

2064
00:58:06,000 --> 00:58:07,000
以前可能是有的

2065
00:58:07,000 --> 00:58:09,000
以前 IBM 之类的

2066
00:58:09,000 --> 00:58:10,000
他们做的事情

2067
00:58:10,000 --> 00:58:11,000
可能更多的

2068
00:58:11,000 --> 00:58:12,000
也就是做制定一个

2069
00:58:12,000 --> 00:58:13,000
国内标准

2070
00:58:13,000 --> 00:58:15,000
在国内工业界的标准

2071
00:58:15,000 --> 00:58:17,000
但是在微软这件事情上

2072
00:58:17,000 --> 00:58:20,000
你由一个外国厂商来搞一个

2073
00:58:20,000 --> 00:58:21,000
你国文字

2074
00:58:21,000 --> 00:58:23,000
这好像还是

2075
00:58:23,000 --> 00:58:25,000
前所未有的事情

2076
00:58:25,000 --> 00:58:26,000
对于小国来说

2077
00:58:26,000 --> 00:58:27,000
这种事情

2078
00:58:27,000 --> 00:58:28,000
应该经常发生

2079
00:58:28,000 --> 00:58:30,000
比如说周边那些

2080
00:58:30,000 --> 00:58:32,000
可能人口也很少

2081
00:58:32,000 --> 00:58:33,000
占地面积很小的国家

2082
00:58:33,000 --> 00:58:34,000
它真的什么技术

2083
00:58:34,000 --> 00:58:35,000
都是要由别人提供给它的

2084
00:58:35,000 --> 00:58:36,000
别人先用了

2085
00:58:36,000 --> 00:58:37,000
它才说

2086
00:58:37,000 --> 00:58:39,000
我们来可以

2087
00:58:39,000 --> 00:58:41,000
就这样支持它了

2088
00:58:41,000 --> 00:58:42,000
继承标准

2089
00:58:42,000 --> 00:58:44,000
对 其实类似的例子

2090
00:58:44,000 --> 00:58:47,000
在 CJK 领域并不罕见

2091
00:58:47,000 --> 00:58:49,000
比如说自负基标准

2092
00:58:49,000 --> 00:58:52,000
像香港的自负基标准

2093
00:58:52,000 --> 00:58:53,000
其实主要就是由

2094
00:58:53,000 --> 00:58:55,000
华康和蒙纳两家

2095
00:58:55,000 --> 00:58:57,000
自体公司来推动的

2096
00:58:57,000 --> 00:58:59,000
香港显然就是属于一个

2097
00:58:59,000 --> 00:59:02,000
政府在这方面管制力不强的

2098
00:59:02,000 --> 00:59:03,000
这样一个地区

2099
00:59:03,000 --> 00:59:04,000
就曾经了

2100
00:59:04,000 --> 00:59:06,000
对 包括像新加坡

2101
00:59:06,000 --> 00:59:08,000
也是新加坡早期是直接

2102
00:59:08,000 --> 00:59:10,000
照办了 GB-2312

2103
00:59:10,000 --> 00:59:12,000
来作为他们文字标准

2104
00:59:12,000 --> 00:59:15,000
后期 Unicode 出来之后

2105
00:59:15,000 --> 00:59:17,000
他们又收录了一部分

2106
00:59:17,000 --> 00:59:19,000
号称来源是新加坡的

2107
00:59:19,000 --> 00:59:20,000
一部分汉字

2108
00:59:20,000 --> 00:59:21,000
但是实际上

2109
00:59:21,000 --> 00:59:22,000
这就是为什么

2110
00:59:22,000 --> 00:59:23,000
危机百科里面

2111
00:59:23,000 --> 00:59:24,000
有马兴简历

2112
00:59:24,000 --> 00:59:25,000
对 但实际上了

2113
00:59:25,000 --> 00:59:28,000
至今好像没有明确的来源说

2114
00:59:28,000 --> 00:59:30,000
新加坡来源的汉字

2115
00:59:30,000 --> 00:59:32,000
是他们政府官方给的

2116
00:59:32,000 --> 00:59:34,000
对 的确是有的

2117
00:59:34,000 --> 00:59:36,000
在新加坡当时

2118
00:59:36,000 --> 00:59:38,000
它有新加坡的一些简化字

2119
00:59:38,000 --> 00:59:40,000
就和大陆简体不一样的

2120
00:59:40,000 --> 00:59:43,000
有几十个字 数量不多

2121
00:59:43,000 --> 00:59:45,000
这得肯定要插一下历史

2122
00:59:45,000 --> 00:59:47,000
中国大陆搞简化字

2123
00:59:47,000 --> 00:59:49,000
说新加坡也跟着搞了 是吧

2124
00:59:49,000 --> 00:59:51,000
当时他们做简化的背景

2125
00:59:51,000 --> 00:59:53,000
和目的是什么

2126
00:59:53,000 --> 00:59:55,000
应该还是为了提高使致率的

2127
00:59:55,000 --> 00:59:58,000
出发点都是类似的

2128
00:59:58,000 --> 01:00:00,000
都是要的

2129
01:00:00,000 --> 01:00:02,000
我都觉得是为了贴合当时

2130
01:00:02,000 --> 01:00:04,000
华人中有一个

2131
01:00:04,000 --> 01:00:05,000
怎么说呢

2132
01:00:05,000 --> 01:00:08,000
就站起来的国家

2133
01:00:08,000 --> 01:00:09,000
不是吗

2134
01:00:09,000 --> 01:00:12,000
新加坡不是也搞了一个

2135
01:00:12,000 --> 01:00:14,000
不是民族认同感

2136
01:00:14,000 --> 01:00:16,000
而是因为新加坡本来就是一个

2137
01:00:16,000 --> 01:00:17,000
华人建立的国家

2138
01:00:17,000 --> 01:00:19,000
然后他们看到

2139
01:00:19,000 --> 01:00:21,000
牧国非常强盛

2140
01:00:21,000 --> 01:00:22,000
就新向往之吧

2141
01:00:22,000 --> 01:00:24,000
或者说是出一种

2142
01:00:24,000 --> 01:00:26,000
现在也有这种强势文化出现了

2143
01:00:26,000 --> 01:00:28,000
然后不是强势文化

2144
01:00:28,000 --> 01:00:31,000
而是有一个独立自主的国家出现了

2145
01:00:31,000 --> 01:00:34,000
就采用了这样一种

2146
01:00:34,000 --> 01:00:36,000
我觉得是出一种民族认同感

2147
01:00:36,000 --> 01:00:38,000
来做的

2148
01:00:38,000 --> 01:00:39,000
不像那个

2149
01:00:39,000 --> 01:00:41,000
因为现在大家都很讨厌中国

2150
01:00:41,000 --> 01:00:42,000
在那个时候

2151
01:00:42,000 --> 01:00:43,000
中国刚出现的时候

2152
01:00:43,000 --> 01:00:44,000
还是比较让全球

2153
01:00:44,000 --> 01:00:46,000
华人维持一阵的

2154
01:00:46,000 --> 01:00:47,000
对 有可能有一部分这个因素

2155
01:00:47,000 --> 01:00:50,000
但是我的观点是认为

2156
01:00:50,000 --> 01:00:52,000
还是因为新加坡其实在那个时期

2157
01:00:52,000 --> 01:00:54,000
并没有这方面的专家来

2158
01:00:54,000 --> 01:00:57,000
制体的制定一个新的标志的能力

2159
01:00:57,000 --> 01:01:00,000
所以他们寝愿是搬一个

2160
01:01:00,000 --> 01:01:01,000
在文化上面和在

2161
01:01:01,000 --> 01:01:03,000
这个身份人龙上

2162
01:01:03,000 --> 01:01:05,000
都跟他们接近的国家的一个承受标志

2163
01:01:05,000 --> 01:01:08,000
不 问题是你这个回避的一点

2164
01:01:08,000 --> 01:01:09,000
就是他们还有一个选择

2165
01:01:09,000 --> 01:01:10,000
就是什么也不做

2166
01:01:10,000 --> 01:01:11,000
继续用繁体

2167
01:01:11,000 --> 01:01:12,000
为什么一定要用

2168
01:01:12,000 --> 01:01:14,000
你是说为什么要做简化是吗

2169
01:01:14,000 --> 01:01:15,000
对啊

2170
01:01:15,000 --> 01:01:16,000
OK

2171
01:01:16,000 --> 01:01:17,000
是这样子

2172
01:01:17,000 --> 01:01:19,000
新加坡使用的汉字

2173
01:01:19,000 --> 01:01:21,000
他们在 1969 年

2174
01:01:21,000 --> 01:01:24,000
他们颁布了新加坡的简体字标

2175
01:01:24,000 --> 01:01:26,000
然后这个简体字标有 502 个字

2176
01:01:26,000 --> 01:01:27,000
所以他们一般把这个

2177
01:01:27,000 --> 01:01:29,000
称为 502 简体字标

2178
01:01:29,000 --> 01:01:31,000
然后这个简体字标

2179
01:01:31,000 --> 01:01:32,000
和中华人民共和国的

2180
01:01:32,000 --> 01:01:35,000
汉字简化方案是不一样的

2181
01:01:35,000 --> 01:01:40,000
然后里面有 67 个字是不一样的

2182
01:01:41,000 --> 01:01:42,000
OK

2183
01:01:42,000 --> 01:01:43,000
那怎么处理

2184
01:01:43,000 --> 01:01:46,000
然后 1976 年的时候

2185
01:01:46,000 --> 01:01:48,000
新加坡又说他们倒过来

2186
01:01:48,000 --> 01:01:51,000
完全采用中华人民共和国的简体字

2187
01:01:51,000 --> 01:01:53,000
就把那 67 个也干掉了

2188
01:01:53,000 --> 01:01:54,000
对

2189
01:01:54,000 --> 01:01:57,000
所以这 67 个字就是曾经出现过

2190
01:01:57,000 --> 01:02:00,000
但是现在已经不用的字

2191
01:02:01,000 --> 01:02:03,000
但是 UnicotinLagid

2192
01:02:03,000 --> 01:02:04,000
应该也装进去了

2193
01:02:04,000 --> 01:02:05,000
对

2194
01:02:05,000 --> 01:02:06,000
所以要装进去

2195
01:02:06,000 --> 01:02:07,000
有一些是装进去了

2196
01:02:07,000 --> 01:02:09,000
全部装进去了

2197
01:02:09,000 --> 01:02:11,000
我觉得你刚才 Rio 问说

2198
01:02:11,000 --> 01:02:12,000
那个时候怎么处理

2199
01:02:12,000 --> 01:02:13,000
因为 1969 年时候

2200
01:02:13,000 --> 01:02:16,000
那个时候你处理一些不一样的签字

2201
01:02:16,000 --> 01:02:17,000
就可以了

2202
01:02:17,000 --> 01:02:18,000
那个时候没有电子化的问题

2203
01:02:18,000 --> 01:02:19,000
对

2204
01:02:19,000 --> 01:02:20,000
这个意思

2205
01:02:20,000 --> 01:02:21,000
对

2206
01:02:21,000 --> 01:02:23,000
就不存在马点这个问题吗

2207
01:02:23,000 --> 01:02:24,000
对

2208
01:02:24,000 --> 01:02:26,000
所以我觉得他们用回 GBR 312

2209
01:02:26,000 --> 01:02:28,000
也是因为他们处理不了新的问题

2210
01:02:28,000 --> 01:02:30,000
就是他们没这个能力来做

2211
01:02:30,000 --> 01:02:32,000
这方面新的技术规格

2212
01:02:32,000 --> 01:02:33,000
这不划算吗

2213
01:02:33,000 --> 01:02:35,000
你本来人口少的国家

2214
01:02:35,000 --> 01:02:37,000
你要做这种吃力不堂好的事情

2215
01:02:37,000 --> 01:02:38,000
何必呢

2216
01:02:39,000 --> 01:02:40,000
就像直接那个小什么

2217
01:02:40,000 --> 01:02:41,000
我们现在的话

2218
01:02:41,000 --> 01:02:43,000
好话说叫直接来 4 K reuse

2219
01:02:46,000 --> 01:02:49,000
对 这个历史包括在这个 Big 5

2220
01:02:49,000 --> 01:02:52,000
Big 5 也是开始照办了 Jace 的鬼反

2221
01:02:52,000 --> 01:02:54,000
然后自己做了一些扩展

2222
01:02:55,000 --> 01:02:56,000
OK

2223
01:02:57,000 --> 01:02:59,000
所以现在有个历史 16 问题

2224
01:02:59,000 --> 01:03:01,000
比如说当时说

2225
01:03:01,000 --> 01:03:02,000
乌兰搞了那个 GBK

2226
01:03:02,000 --> 01:03:04,000
然后后来国家补了一个

2227
01:03:04,000 --> 01:03:06,000
GBI 18030

2228
01:03:06,000 --> 01:03:08,000
那么实际上在这个

2229
01:03:08,000 --> 01:03:10,000
微软的操系统里面

2230
01:03:10,000 --> 01:03:12,000
到底是用编码的时候

2231
01:03:12,000 --> 01:03:14,000
是用 GBK 还是 GB 18030

2232
01:03:16,000 --> 01:03:17,000
Windows 的内核

2233
01:03:17,000 --> 01:03:18,000
应该是用 UniCode 对吧

2234
01:03:18,000 --> 01:03:19,000
对

2235
01:03:19,000 --> 01:03:20,000
那个都一样

2236
01:03:20,000 --> 01:03:21,000
就是他们内核表示

2237
01:03:21,000 --> 01:03:22,000
他就是多国语言

2238
01:03:22,000 --> 01:03:23,000
肯定是要用统一的标准

2239
01:03:23,000 --> 01:03:24,000
但是在默认

2240
01:03:24,000 --> 01:03:26,000
比如说你中文版的 Windows

2241
01:03:26,000 --> 01:03:27,000
你用这个技式

2242
01:03:27,000 --> 01:03:29,000
默认保存的时候

2243
01:03:29,000 --> 01:03:30,000
他选择的编码方式是

2244
01:03:30,000 --> 01:03:31,000
我是这么理解的

2245
01:03:31,000 --> 01:03:33,000
Windows 里面有一个默认的那个

2246
01:03:33,000 --> 01:03:34,000
马本

2247
01:03:35,000 --> 01:03:36,000
就是有个 Code page

2248
01:03:36,000 --> 01:03:37,000
你得去选

2249
01:03:37,000 --> 01:03:38,000
然后你选什么

2250
01:03:38,000 --> 01:03:40,000
他默认的储存就是什么

2251
01:03:40,000 --> 01:03:41,000
对对对

2252
01:03:41,000 --> 01:03:42,000
如果你是中文版的 Windows 的话

2253
01:03:42,000 --> 01:03:44,000
那默认就是 GB

2254
01:03:45,000 --> 01:03:47,000
18030 应该是

2255
01:03:47,000 --> 01:03:48,000
对对对

2256
01:03:48,000 --> 01:03:49,000
我就这个意思就是

2257
01:03:49,000 --> 01:03:51,000
他等于是给某一个区域版本的

2258
01:03:51,000 --> 01:03:52,000
问的是

2259
01:03:52,000 --> 01:03:54,000
选择了一个默认的保存的

2260
01:03:54,000 --> 01:03:55,000
这个编码方式吗

2261
01:03:55,000 --> 01:03:56,000
和打开

2262
01:03:56,000 --> 01:03:57,000
对

2263
01:03:57,000 --> 01:03:58,000
对他打开和那个 D-Code

2264
01:03:58,000 --> 01:04:00,000
就好像有些人玩日本游戏

2265
01:04:00,000 --> 01:04:01,000
一定要先把那个 Code page

2266
01:04:01,000 --> 01:04:02,000
改成日文的

2267
01:04:02,000 --> 01:04:03,000
那时候玩的时候

2268
01:04:03,000 --> 01:04:04,000
日文的游戏才不会显示落马

2269
01:04:04,000 --> 01:04:05,000
但是其他系统

2270
01:04:05,000 --> 01:04:06,000
所有部分都是落马

2271
01:04:06,000 --> 01:04:07,000
没错

2272
01:04:07,000 --> 01:04:09,000
所以那个现在就 Windows 用的那个 Code page

2273
01:04:09,000 --> 01:04:10,000
到底默认是 GBK

2274
01:04:10,000 --> 01:04:12,000
还是 GB 18030 的

2275
01:04:12,000 --> 01:04:13,000
我记得是 18030

2276
01:04:13,000 --> 01:04:14,000
我上一次改的时候

2277
01:04:14,000 --> 01:04:15,000
应该还是 18030

2278
01:04:15,000 --> 01:04:17,000
现在已经变成 18030 了

2279
01:04:17,000 --> 01:04:18,000
现在已经

2280
01:04:18,000 --> 01:04:20,000
因为那个时候没有 GBK 的时候

2281
01:04:20,000 --> 01:04:21,000
你自然就是

2282
01:04:21,000 --> 01:04:24,000
没有 18030 的时候自然就是 GBK

2283
01:04:24,000 --> 01:04:25,000
但是现在有条纹

2284
01:04:25,000 --> 01:04:27,000
可以牵涉的 Windows 不同版本

2285
01:04:27,000 --> 01:04:29,000
它有不同行为的结果了吧

2286
01:04:29,000 --> 01:04:30,000
是没错

2287
01:04:31,000 --> 01:04:34,000
那然后因为刚才我们讲的那个

2288
01:04:34,000 --> 01:04:37,000
GB 2312 GBK 和 GB 18030

2289
01:04:37,000 --> 01:04:39,000
它是一个逐渐

2290
01:04:39,000 --> 01:04:40,000
超级的一个关系

2291
01:04:40,000 --> 01:04:42,000
所以新版本的 Windows

2292
01:04:42,000 --> 01:04:44,000
它总是能兼容

2293
01:04:44,000 --> 01:04:46,000
就版本的那个文件的吧

2294
01:04:47,000 --> 01:04:48,000
理论上是这样

2295
01:04:48,000 --> 01:04:50,000
这个其实是要找一个 Windows

2296
01:04:50,000 --> 01:04:51,000
对 Windows 的

2297
01:04:51,000 --> 01:04:52,000
变成比较熟悉的人来讲

2298
01:04:52,000 --> 01:04:53,000
对

2299
01:04:53,000 --> 01:04:55,000
他们的编码方式是向后兼容的

2300
01:04:56,000 --> 01:04:57,000
对

2301
01:04:57,000 --> 01:04:59,000
所以就不存在说

2302
01:04:59,000 --> 01:05:01,000
Windows 比如说 Windows 10

2303
01:05:01,000 --> 01:05:03,000
默认是 GB 18030 中文版

2304
01:05:03,000 --> 01:05:04,000
不对

2305
01:05:04,000 --> 01:05:05,000
它应该用 Unicode 吧

2306
01:05:05,000 --> 01:05:06,000
anyway

2307
01:05:06,000 --> 01:05:07,000
假设它是用 GGB 180

2308
01:05:07,000 --> 01:05:08,000
它存回去

2309
01:05:08,000 --> 01:05:09,000
就还可以

2310
01:05:09,000 --> 01:05:10,000
也可以打开之前 Windows

2311
01:05:10,000 --> 01:05:12,000
比如说 XP 用 GBK

2312
01:05:12,000 --> 01:05:13,000
变码的时候存的东西

2313
01:05:13,000 --> 01:05:14,000
对

2314
01:05:14,000 --> 01:05:15,000
这是肯定可以的

2315
01:05:17,000 --> 01:05:19,000
所以就说那个代码页

2316
01:05:19,000 --> 01:05:21,000
这个 CodePage 这个事情的话

2317
01:05:21,000 --> 01:05:22,000
只有 Windows 在用

2318
01:05:22,000 --> 01:05:24,000
IBM 的那套架构

2319
01:05:26,000 --> 01:05:27,000
对

2320
01:05:27,000 --> 01:05:28,000
所以在其他的

2321
01:05:28,000 --> 01:05:30,000
像比如说 Mac 和 Linux 上面

2322
01:05:30,000 --> 01:05:31,000
它是你让你直接在

2323
01:05:31,000 --> 01:05:32,000
就是叫什么

2324
01:05:32,000 --> 01:05:33,000
就是保存的时候

2325
01:05:33,000 --> 01:05:34,000
文件编辑器

2326
01:05:34,000 --> 01:05:37,000
它是用那个 Chassette 的一个标志吧

2327
01:05:37,000 --> 01:05:38,000
应该

2328
01:05:38,000 --> 01:05:39,000
对没错

2329
01:05:39,000 --> 01:05:40,000
这是两种

2330
01:05:40,000 --> 01:05:42,000
编码的标记的哲学

2331
01:05:42,000 --> 01:05:43,000
可以说是

2332
01:05:44,000 --> 01:05:46,000
一个是 transiton 的

2333
01:05:46,000 --> 01:05:48,000
一个是那个 perfile 的

2334
01:05:49,000 --> 01:05:51,000
终于讲清楚这个

2335
01:05:51,000 --> 01:05:53,000
Windows 和 GB 的那些东西了

2336
01:05:53,000 --> 01:05:54,000
现在开始

2337
01:05:54,000 --> 01:05:56,000
我不知道我们听众有没有被我们绕运

2338
01:05:57,000 --> 01:05:59,000
我觉得其实对于很多听众来说

2339
01:05:59,000 --> 01:06:00,000
可能并没有

2340
01:06:00,000 --> 01:06:02,000
可能已经被我们绕运了

2341
01:06:03,000 --> 01:06:04,000
有一种

2342
01:06:04,000 --> 01:06:07,000
诶 无讨那个什么沙拉怎么说来的

2343
01:06:07,000 --> 01:06:08,000
猜神沙拉

2344
01:06:08,000 --> 01:06:09,000
对对

2345
01:06:09,000 --> 01:06:10,000
脑子里面还有那个

2346
01:06:11,000 --> 01:06:13,000
听了一脑的沙拉

2347
01:06:13,000 --> 01:06:14,000
以后

2348
01:06:14,000 --> 01:06:16,000
对 以后说你一脑降弧

2349
01:06:16,000 --> 01:06:18,000
说你一脑猜神沙拉

2350
01:06:19,000 --> 01:06:20,000
这个比较好

2351
01:06:20,000 --> 01:06:21,000
听起来很高级

2352
01:06:21,000 --> 01:06:22,000
猜狠沙拉

2353
01:06:27,000 --> 01:06:30,000
OK 现在终于进入到 Unicode 的时代

2354
01:06:30,000 --> 01:06:32,000
就这样是并存的吧

2355
01:06:32,000 --> 01:06:34,000
在时间观念上是有重叠了

2356
01:06:35,000 --> 01:06:37,000
应该说 Unicode

2357
01:06:37,000 --> 01:06:39,000
它作为一个独立的这样一个机构

2358
01:06:39,000 --> 01:06:42,000
它希望能推动全球文字编码

2359
01:06:42,000 --> 01:06:45,000
和字符集的这两套标准

2360
01:06:45,000 --> 01:06:46,000
都统一的这样一个

2361
01:06:46,000 --> 01:06:48,000
一个目标吧 应该说

2362
01:06:48,000 --> 01:06:51,000
但是同时它又不能是废除那些

2363
01:06:51,000 --> 01:06:53,000
地方性的编码方案

2364
01:06:54,000 --> 01:06:56,000
对 就只能想办法去

2365
01:06:56,000 --> 01:06:57,000
都兼容

2366
01:06:57,000 --> 01:06:59,000
所以这样造成一个结果的话

2367
01:06:59,000 --> 01:07:01,000
它就是不可能向后兼容了

2368
01:07:01,000 --> 01:07:03,000
就必须要改 Mapping 了

2369
01:07:03,000 --> 01:07:07,000
对 除了最新的 ASCII 的马位

2370
01:07:07,000 --> 01:07:10,000
必须是美国人发明的

2371
01:07:10,000 --> 01:07:11,000
美国重心主义

2372
01:07:11,000 --> 01:07:13,000
应该说 Unicode

2373
01:07:13,000 --> 01:07:15,000
它定义字符集的时候

2374
01:07:15,000 --> 01:07:17,000
它创造了一个

2375
01:07:17,000 --> 01:07:21,000
它称为 Unicode 的 Scalar

2376
01:07:21,000 --> 01:07:22,000
那个叫什么

2377
01:07:22,000 --> 01:07:23,000
Scalar Value 是吧

2378
01:07:24,000 --> 01:07:26,000
就是它所谓的 Unicode 的标准值

2379
01:07:26,000 --> 01:07:29,000
这样一个非常规范的标记方式

2380
01:07:29,000 --> 01:07:31,000
那么这个值的

2381
01:07:31,000 --> 01:07:33,000
这个数值显然跟 ASCII 和

2382
01:07:33,000 --> 01:07:35,000
我们传统建造的一些编码的数值

2383
01:07:35,000 --> 01:07:37,000
就我们所谓的内码数值

2384
01:07:37,000 --> 01:07:38,000
都是不一样的

2385
01:07:38,000 --> 01:07:40,000
它是一套完全独立的方案

2386
01:07:40,000 --> 01:07:42,000
但同时 Unicode

2387
01:07:42,000 --> 01:07:45,000
创造了三个主流的编码方案

2388
01:07:45,000 --> 01:07:46,000
Unicode 的 UTF 8

2389
01:07:46,000 --> 01:07:48,000
16 和 32 里面

2390
01:07:48,000 --> 01:07:51,000
16 应该是兼容 ASCII 的

2391
01:07:51,000 --> 01:07:52,000
但是

2392
01:07:52,000 --> 01:07:53,000
不对吧

2393
01:07:53,000 --> 01:07:54,000
80 兼容 ASCII 的

2394
01:07:54,000 --> 01:07:57,000
但是 16 和 32 就是完全独立的

2395
01:07:57,000 --> 01:07:59,000
因为字节宽度不一样了吗

2396
01:07:59,000 --> 01:08:00,000
对

2397
01:08:00,000 --> 01:08:04,000
就是 32 是一个固定宽度的一个编码方案

2398
01:08:04,000 --> 01:08:07,000
那么它是一个比较漂亮的编码方案

2399
01:08:07,000 --> 01:08:09,000
它的编码的数值

2400
01:08:09,000 --> 01:08:12,000
跟 Unicode 的 Scalar Value

2401
01:08:12,000 --> 01:08:14,000
是一对应的

2402
01:08:14,000 --> 01:08:16,000
因为它最宽有四个字节了

2403
01:08:16,000 --> 01:08:17,000
对

2404
01:08:17,000 --> 01:08:18,000
它是可以完全写出来的

2405
01:08:18,000 --> 01:08:20,000
那么 16 的话

2406
01:08:20,000 --> 01:08:24,000
就是由双字节和四字节切换了这样一个模式

2407
01:08:24,000 --> 01:08:28,000
8 的话就是一个在单字节模式下是兼容 ASCII 的

2408
01:08:28,000 --> 01:08:31,000
你虽然那个 4 个是很漂亮的

2409
01:08:31,000 --> 01:08:33,000
但是固定 4 个的话就很浪费

2410
01:08:33,000 --> 01:08:37,000
如果你存储比如说西文的话

2411
01:08:37,000 --> 01:08:38,000
就非常浪费

2412
01:08:38,000 --> 01:08:40,000
所以后来大家就觉得

2413
01:08:40,000 --> 01:08:41,000
比较经济的方式

2414
01:08:41,000 --> 01:08:44,000
还是用变长的方式比较好

2415
01:08:44,000 --> 01:08:45,000
对

2416
01:08:45,000 --> 01:08:46,000
这样的就

2417
01:08:47,000 --> 01:08:49,000
而且还有一个问题是

2418
01:08:49,000 --> 01:08:52,000
就是那个定长的有解决不了的

2419
01:08:52,000 --> 01:08:53,000
大家会提到

2420
01:08:53,000 --> 01:08:56,000
所以刚才说的趋位嘛

2421
01:08:56,000 --> 01:08:57,000
趋有 Row

2422
01:08:57,000 --> 01:08:59,000
然后位是 Sell

2423
01:08:59,000 --> 01:09:01,000
然后后面就开始有个平面了

2424
01:09:01,000 --> 01:09:03,000
就叫 Plying

2425
01:09:03,000 --> 01:09:04,000
然后好几个平面呢

2426
01:09:04,000 --> 01:09:06,000
又变成一个 Group

2427
01:09:06,000 --> 01:09:08,000
变成一个组

2428
01:09:08,000 --> 01:09:09,000
这是整

2429
01:09:09,000 --> 01:09:11,000
这个是 Unicode 的

2430
01:09:11,000 --> 01:09:14,000
这是整个 Unicode 它的一个

2431
01:09:15,000 --> 01:09:17,000
它必须要有这么多个座位

2432
01:09:17,000 --> 01:09:20,000
才能把所有全世界这些字给安排下去

2433
01:09:23,000 --> 01:09:25,000
然后就会有我们弹长说的一个词

2434
01:09:25,000 --> 01:09:28,000
就是什么基本多语言平面吧

2435
01:09:28,000 --> 01:09:29,000
就是 BMP

2436
01:09:29,000 --> 01:09:32,000
Basic Multilingual Plane

2437
01:09:32,000 --> 01:09:34,000
就是所谓的地灵面吧

2438
01:09:34,000 --> 01:09:37,000
这个地灵面应该说就是一个

2439
01:09:37,000 --> 01:09:38,000
双字节的

2440
01:09:38,000 --> 01:09:41,000
就是 16 个 Bit 的这样子

2441
01:09:41,000 --> 01:09:43,000
一个自符集的组合

2442
01:09:43,000 --> 01:09:45,000
这是因为早期 Unicode

2443
01:09:45,000 --> 01:09:47,000
它没有想到会进来那么多的自符

2444
01:09:47,000 --> 01:09:48,000
越加越多

2445
01:09:48,000 --> 01:09:50,000
它就只定了这样一个平面

2446
01:09:50,000 --> 01:09:52,000
对这个平面就是成为了一个

2447
01:09:52,000 --> 01:09:54,000
最基本的叫地灵平面

2448
01:09:54,000 --> 01:09:56,000
或者叫 BMP 这样子

2449
01:09:56,000 --> 01:09:57,000
这说什么

2450
01:09:57,000 --> 01:10:01,000
65536 个马位已经够用了

2451
01:10:01,000 --> 01:10:03,000
对

2452
01:10:03,000 --> 01:10:05,000
实实证明是不够的

2453
01:10:05,000 --> 01:10:09,000
所以这里其实我们还是要把那个

2454
01:10:09,000 --> 01:10:12,000
刚才那个东西再稍微形象解释一下

2455
01:10:12,000 --> 01:10:14,000
我们刚才讲

2456
01:10:14,000 --> 01:10:16,000
Gb 232 它规定了一个方格

2457
01:10:16,000 --> 01:10:18,000
94×94 这么一个区间

2458
01:10:18,000 --> 01:10:19,000
有些空还没用

2459
01:10:19,000 --> 01:10:21,000
但是它也是一个矩阵

2460
01:10:21,000 --> 01:10:23,000
然后 Unicode 其实

2461
01:10:23,000 --> 01:10:25,000
我们讲的 BMP 基本面

2462
01:10:25,000 --> 01:10:27,000
其实大致上可以对应为那个

2463
01:10:27,000 --> 01:10:31,000
不过它是一个 256×256 的一个平面

2464
01:10:31,000 --> 01:10:33,000
那就是呈出来就是 65536

2465
01:10:33,000 --> 01:10:36,000
65536 个座位

2466
01:10:36,000 --> 01:10:38,000
就是这个马位

2467
01:10:38,000 --> 01:10:39,000
对

2468
01:10:39,000 --> 01:10:41,000
但其实这只是为了好看

2469
01:10:41,000 --> 01:10:43,000
它本质上还是一长串

2470
01:10:43,000 --> 01:10:44,000
就是它如果

2471
01:10:44,000 --> 01:10:45,000
我应该想像它一个竖肘上

2472
01:10:45,000 --> 01:10:47,000
它应该是一个 E 位的一个东西

2473
01:10:47,000 --> 01:10:48,000
对

2474
01:10:48,000 --> 01:10:51,000
然后在碗里面天上

2475
01:10:51,000 --> 01:10:52,000
各国的文字对吧

2476
01:10:52,000 --> 01:10:54,000
这是刚才我们说的

2477
01:10:54,000 --> 01:10:56,000
这个马位的事情

2478
01:10:56,000 --> 01:10:58,000
嗯

2479
01:10:58,000 --> 01:11:00,000
然后这个基本平面里面

2480
01:11:00,000 --> 01:11:02,000
有些什么字是什么规定的

2481
01:11:02,000 --> 01:11:04,000
就有什么讲究吗

2482
01:11:04,000 --> 01:11:06,000
就是二顺序碗里天呗

2483
01:11:06,000 --> 01:11:08,000
这个区位就非常多了

2484
01:11:08,000 --> 01:11:10,000
OK 那比如说我问一个问题

2485
01:11:10,000 --> 01:11:14,000
就是说中文字是放

2486
01:11:14,000 --> 01:11:17,000
就大部分中文字是放在基本平面里面的吧

2487
01:11:17,000 --> 01:11:18,000
对

2488
01:11:18,000 --> 01:11:19,000
场用的

2489
01:11:19,000 --> 01:11:20,000
OK

2490
01:11:20,000 --> 01:11:22,000
一几汉词基本都在里面

2491
01:11:22,000 --> 01:11:24,000
那比如说对面刚才我们说的那些东西

2492
01:11:24,000 --> 01:11:26,000
就是说不是 GBR 32 里面

2493
01:11:26,000 --> 01:11:29,000
所有的字符都在基本平面里面吧

2494
01:11:29,000 --> 01:11:30,000
嗯

2495
01:11:30,000 --> 01:11:33,000
它有在扩展面

2496
01:11:33,000 --> 01:11:35,000
就是在后面的其他的面上的

2497
01:11:35,000 --> 01:11:36,000
的确是有的

2498
01:11:36,000 --> 01:11:37,000
OK

2499
01:11:37,000 --> 01:11:38,000
明白

2500
01:11:38,000 --> 01:11:40,000
那再问一个问题

2501
01:11:40,000 --> 01:11:44,000
就是说在 Unicode 的基本面里面的那个马位的中文

2502
01:11:44,000 --> 01:11:46,000
就是基本汉字

2503
01:11:46,000 --> 01:11:48,000
Unicode 里面已经有一个新的称呼

2504
01:11:48,000 --> 01:11:51,000
就是 CJK 统一表义文字

2505
01:11:51,000 --> 01:11:52,000
这不仅是中文了

2506
01:11:52,000 --> 01:11:54,000
就是中日汉

2507
01:11:54,000 --> 01:11:57,000
就大家全球大一通

2508
01:11:57,000 --> 01:11:59,000
所有字型一样的文字全都会塞在里面

2509
01:11:59,000 --> 01:12:00,000
OK 这里

2510
01:12:00,000 --> 01:12:02,000
这里就说要解释一下

2511
01:12:02,000 --> 01:12:04,000
为什么会有这么一个事

2512
01:12:04,000 --> 01:12:06,000
就是它的逻辑是什么

2513
01:12:06,000 --> 01:12:10,000
它的逻辑就是 Unicode 是针对这个 script 这种东西

2514
01:12:10,000 --> 01:12:12,000
来划分它的 block

2515
01:12:12,000 --> 01:12:15,000
我们刚刚说了就是说这个日语

2516
01:12:15,000 --> 01:12:16,000
日语或者说日文

2517
01:12:16,000 --> 01:12:17,000
它作为一个书写系统

2518
01:12:17,000 --> 01:12:19,000
其实它用到了四种文字

2519
01:12:19,000 --> 01:12:20,000
就是包括拉丁

2520
01:12:20,000 --> 01:12:23,000
评假名 骗假名和汉字

2521
01:12:23,000 --> 01:12:25,000
那么 Unicode 认为你日本用的汉字

2522
01:12:25,000 --> 01:12:26,000
韩国用的汉字

2523
01:12:26,000 --> 01:12:27,000
中国用的汉字

2524
01:12:27,000 --> 01:12:28,000
以及越南用的汉字

2525
01:12:28,000 --> 01:12:29,000
他们都是汉字

2526
01:12:29,000 --> 01:12:31,000
这一种 script

2527
01:12:31,000 --> 01:12:33,000
你们都应该统一起来

2528
01:12:33,000 --> 01:12:34,000
既然明明是一个字

2529
01:12:34,000 --> 01:12:36,000
而且写法基本上也一样

2530
01:12:36,000 --> 01:12:37,000
那为什么不能就用一个马位

2531
01:12:37,000 --> 01:12:39,000
比如说汉字 1 2 3

2532
01:12:39,000 --> 01:12:41,000
各个地区大家都长得都一样

2533
01:12:41,000 --> 01:12:42,000
就没有必要用三个马位

2534
01:12:42,000 --> 01:12:44,000
分别的马位嘛

2535
01:12:44,000 --> 01:12:46,000
所以大家比如说汉字的 1

2536
01:12:46,000 --> 01:12:48,000
那大家就统一起来吧

2537
01:12:48,000 --> 01:12:50,000
所以这里就签字了一个

2538
01:12:50,000 --> 01:12:53,000
所谓的汉字的追根溯源的问题了

2539
01:12:53,000 --> 01:12:56,000
因为日文和韩文里面的汉字

2540
01:12:56,000 --> 01:13:00,000
它的来源是来自于中文的那个字

2541
01:13:00,000 --> 01:13:01,000
那就是说

2542
01:13:01,000 --> 01:13:03,000
就要问日本人民说

2543
01:13:03,000 --> 01:13:05,000
你们觉得你们这个汉字

2544
01:13:05,000 --> 01:13:06,000
是对应到中国的哪一个

2545
01:13:06,000 --> 01:13:08,000
还有韩国人民说

2546
01:13:08,000 --> 01:13:09,000
你们认为你们这个汉字

2547
01:13:09,000 --> 01:13:10,000
对应到中国的哪一个

2548
01:13:10,000 --> 01:13:11,000
他们说

2549
01:13:11,000 --> 01:13:13,000
我们就说对应到中文

2550
01:13:13,000 --> 01:13:14,000
对对对

2551
01:13:14,000 --> 01:13:16,000
那肯定会出现一种情况

2552
01:13:16,000 --> 01:13:18,000
他们觉得

2553
01:13:18,000 --> 01:13:19,000
韩国人觉得我这个字

2554
01:13:19,000 --> 01:13:21,000
应该对应到中国的那个字

2555
01:13:21,000 --> 01:13:22,000
然后日本人觉得

2556
01:13:22,000 --> 01:13:23,000
这个字我应该对应到中国的

2557
01:13:23,000 --> 01:13:24,000
另外一个字

2558
01:13:24,000 --> 01:13:25,000
对对对吧

2559
01:13:25,000 --> 01:13:27,000
非常混乱

2560
01:13:27,000 --> 01:13:28,000
对

2561
01:13:28,000 --> 01:13:29,000
这个怎么解决了

2562
01:13:29,000 --> 01:13:31,000
首先一个原则就是

2563
01:13:31,000 --> 01:13:32,000
在做 UniCle 的时候

2564
01:13:32,000 --> 01:13:33,000
大家各个国家

2565
01:13:33,000 --> 01:13:35,000
先把各国的那个标准拿出来

2566
01:13:35,000 --> 01:13:37,000
日本又能拿出它的技术

2567
01:13:37,000 --> 01:13:39,000
韩国拿出它的 KAS

2568
01:13:39,000 --> 01:13:41,000
咱们中国拿出的是 Gb

2569
01:13:41,000 --> 01:13:43,000
还有台湾地区

2570
01:13:43,000 --> 01:13:45,000
还有他们拿出它的大物

2571
01:13:45,000 --> 01:13:46,000
然后呢

2572
01:13:46,000 --> 01:13:48,000
中国拿的是 Gb 哪一个

2573
01:13:48,000 --> 01:13:49,000
要不 030 还是 GbK

2574
01:13:49,000 --> 01:13:50,000
还是 Gb 212

2575
01:13:50,000 --> 01:13:51,000
不同的历史阶段

2576
01:13:51,000 --> 01:13:53,000
应该拿出的是不同的文件

2577
01:13:53,000 --> 01:13:54,000
对

2578
01:13:54,000 --> 01:13:55,000
好吧

2579
01:13:55,000 --> 01:13:56,000
但中国的情况比较简单

2580
01:13:56,000 --> 01:13:57,000
因为至少它是

2581
01:13:57,000 --> 01:13:58,000
我们是相互兼容的

2582
01:13:58,000 --> 01:13:59,000
对

2583
01:13:59,000 --> 01:14:01,000
就还不至于说

2584
01:14:01,000 --> 01:14:02,000
乱掉的情况

2585
01:14:02,000 --> 01:14:03,000
对

2586
01:14:03,000 --> 01:14:05,000
然后先拿出来的时候

2587
01:14:05,000 --> 01:14:06,000
就是各个国家拿出来

2588
01:14:06,000 --> 01:14:07,000
它的一个

2589
01:14:07,000 --> 01:14:08,000
首先一个原则就是说

2590
01:14:08,000 --> 01:14:10,000
如果你在这些字

2591
01:14:10,000 --> 01:14:12,000
原来你在这个

2592
01:14:12,000 --> 01:14:13,000
比如说在 Gb 里面

2593
01:14:13,000 --> 01:14:15,000
它本来就是两个字的话

2594
01:14:15,000 --> 01:14:18,000
那我放到 UniCle 里面

2595
01:14:18,000 --> 01:14:19,000
也是两个字

2596
01:14:19,000 --> 01:14:21,000
就是原规则分开的话

2597
01:14:21,000 --> 01:14:22,000
我现在也分开

2598
01:14:22,000 --> 01:14:23,000
我不会给它合在一起

2599
01:14:23,000 --> 01:14:25,000
就因为它要保证

2600
01:14:25,000 --> 01:14:27,000
就是所谓的相互兼容

2601
01:14:27,000 --> 01:14:28,000
但这里有个问题

2602
01:14:28,000 --> 01:14:29,000
就是说

2603
01:14:29,000 --> 01:14:30,000
因为我理解

2604
01:14:30,000 --> 01:14:32,000
日文的汉字

2605
01:14:32,000 --> 01:14:34,000
和韩文的汉字

2606
01:14:34,000 --> 01:14:36,000
里面应该都是对应的反体字吧

2607
01:14:36,000 --> 01:14:37,000
不一定

2608
01:14:37,000 --> 01:14:38,000
不一定

2609
01:14:38,000 --> 01:14:39,000
非常复杂

2610
01:14:39,000 --> 01:14:42,000
因为日文有日文汉字

2611
01:14:42,000 --> 01:14:43,000
然后刚才说

2612
01:14:43,000 --> 01:14:45,000
各个国家的简化都不一样

2613
01:14:45,000 --> 01:14:46,000
比如说新加坡

2614
01:14:46,000 --> 01:14:47,000
它有新加坡的简化汉字

2615
01:14:47,000 --> 01:14:49,000
然后日文有日文的简化汉字

2616
01:14:49,000 --> 01:14:51,000
日文还有简化

2617
01:14:51,000 --> 01:14:52,000
对

2618
01:14:52,000 --> 01:14:53,000
对

2619
01:14:53,000 --> 01:14:54,000
对

2620
01:14:54,000 --> 01:14:56,000
而且还有经常会简化以后

2621
01:14:56,000 --> 01:14:57,000
张观理代的字

2622
01:14:57,000 --> 01:15:00,000
比如说文艺的意

2623
01:15:00,000 --> 01:15:01,000
在日文的

2624
01:15:01,000 --> 01:15:02,000
这个文艺的意的简化

2625
01:15:02,000 --> 01:15:03,000
就是草字头

2626
01:15:03,000 --> 01:15:05,000
底下个白云的云

2627
01:15:05,000 --> 01:15:07,000
然后这个字在中文里面是有的

2628
01:15:07,000 --> 01:15:09,000
中文里面是另外一个字

2629
01:15:09,000 --> 01:15:10,000
为什么追这种情况呢

2630
01:15:10,000 --> 01:15:13,000
就因为你国没有权利去管理我

2631
01:15:13,000 --> 01:15:16,000
去约束我国怎么简化字的

2632
01:15:16,000 --> 01:15:17,000
不不不

2633
01:15:17,000 --> 01:15:18,000
我持这个意思就是说

2634
01:15:18,000 --> 01:15:19,000
就是日文简化这个

2635
01:15:19,000 --> 01:15:22,000
意字简化成云的时候

2636
01:15:22,000 --> 01:15:23,000
它没有去看一下

2637
01:15:23,000 --> 01:15:24,000
别人怎么做

2638
01:15:24,000 --> 01:15:25,000
是平行发展

2639
01:15:25,000 --> 01:15:27,000
它为什么要去看别人怎么做

2640
01:15:27,000 --> 01:15:28,000
我国

2641
01:15:28,000 --> 01:15:29,000
在日本里面

2642
01:15:29,000 --> 01:15:31,000
在日本的汉字里面没有云这个字

2643
01:15:31,000 --> 01:15:33,000
就没有上草下云这个字

2644
01:15:33,000 --> 01:15:35,000
它为什么不能用呢

2645
01:15:35,000 --> 01:15:36,000
所以说吧

2646
01:15:36,000 --> 01:15:38,000
如果人的历史可以改写的话

2647
01:15:38,000 --> 01:15:39,000
当年如果大家简化汉字

2648
01:15:39,000 --> 01:15:41,000
都商量一下就好了

2649
01:15:41,000 --> 01:15:42,000
不是

2650
01:15:42,000 --> 01:15:44,000
如果我们黄汉早一点

2651
01:15:44,000 --> 01:15:46,000
统一世界的话就没有指读了

2652
01:15:48,000 --> 01:15:49,000
或者对

2653
01:15:49,000 --> 01:15:51,000
从这个今日的角度讲

2654
01:15:51,000 --> 01:15:53,000
如果当年大日本建立了什么

2655
01:15:53,000 --> 01:15:55,000
东亚共产权的野狡

2656
01:15:55,000 --> 01:15:57,000
就解决

2657
01:15:57,000 --> 01:15:59,000
一切问题都不成问题了

2658
01:15:59,000 --> 01:16:01,000
对一切技术问题

2659
01:16:01,000 --> 01:16:03,000
其实规根界里都是政治问题

2660
01:16:03,000 --> 01:16:06,000
所以最初期

2661
01:16:06,000 --> 01:16:07,000
比如说那出现这种情况

2662
01:16:07,000 --> 01:16:08,000
怎么解决的

2663
01:16:08,000 --> 01:16:10,000
比如说刚才说文艺的意字的时候

2664
01:16:10,000 --> 01:16:12,000
到 unicode 里面怎么办

2665
01:16:12,000 --> 01:16:13,000
就只能各给一个马点

2666
01:16:13,000 --> 01:16:15,000
但现在事实上是

2667
01:16:15,000 --> 01:16:17,000
只有一个马点

2668
01:16:17,000 --> 01:16:18,000
然后马点是

2669
01:16:18,000 --> 01:16:20,000
草头头的云

2670
01:16:20,000 --> 01:16:22,000
然后日本人用这个字

2671
01:16:22,000 --> 01:16:24,000
把它当成艺术的意字

2672
01:16:24,000 --> 01:16:25,000
在用

2673
01:16:25,000 --> 01:16:26,000
中国人用这个字

2674
01:16:26,000 --> 01:16:28,000
拿出当云

2675
01:16:28,000 --> 01:16:29,000
云就是在云

2676
01:16:29,000 --> 01:16:32,000
因为只是编马来用来显示

2677
01:16:32,000 --> 01:16:34,000
至于它是什么予意

2678
01:16:34,000 --> 01:16:36,000
这个是没关系的

2679
01:16:38,000 --> 01:16:40,000
这相当于意中各个

2680
01:16:41,000 --> 01:16:43,000
只规定形状

2681
01:16:43,000 --> 01:16:44,000
不规定意

2682
01:16:44,000 --> 01:16:46,000
因为本来你收的

2683
01:16:46,000 --> 01:16:48,000
字符集的话只是

2684
01:16:48,000 --> 01:16:51,000
给每个字编一个座位而已

2685
01:16:52,000 --> 01:16:53,000
对

2686
01:16:53,000 --> 01:16:54,000
它并不需要赋予亥意

2687
01:16:54,000 --> 01:16:55,000
对

2688
01:16:55,000 --> 01:16:56,000
现在首先他们在

2689
01:16:56,000 --> 01:16:57,000
CJK 统一汉字

2690
01:16:57,000 --> 01:16:58,000
只是大家各自

2691
01:16:58,000 --> 01:17:00,000
把各国选手拉出来

2692
01:17:00,000 --> 01:17:01,000
对吧

2693
01:17:01,000 --> 01:17:02,000
OK

2694
01:17:02,000 --> 01:17:03,000
所以最初的统一汉字

2695
01:17:03,000 --> 01:17:05,000
有 2909

2696
01:17:05,000 --> 01:17:06,000
941 个字

2697
01:17:06,000 --> 01:17:08,000
然后中国国标

2698
01:17:08,000 --> 01:17:10,000
当时就是拉出了

2699
01:17:10,000 --> 01:17:13,000
2312 和 1123 岁 5

2700
01:17:13,000 --> 01:17:17,000
然后台湾有他们的 CNS

2701
01:17:18,000 --> 01:17:19,000
然后日本

2702
01:17:19,000 --> 01:17:22,000
日本就是 GIS 的 0208

2703
01:17:22,000 --> 01:17:23,000
大概也是有

2704
01:17:23,000 --> 01:17:26,000
11000 多个字

2705
01:17:26,000 --> 01:17:28,000
韩国的话

2706
01:17:28,000 --> 01:17:29,000
韩国特别坑

2707
01:17:29,000 --> 01:17:31,000
汉字不是有多音字吗

2708
01:17:31,000 --> 01:17:33,000
韩国的他们的 Case 的

2709
01:17:33,000 --> 01:17:35,000
编马里面

2710
01:17:35,000 --> 01:17:36,000
它只是

2711
01:17:36,000 --> 01:17:37,000
因为大家知道

2712
01:17:37,000 --> 01:17:39,000
韩文它是发音

2713
01:17:39,000 --> 01:17:41,000
发音会对一个字

2714
01:17:41,000 --> 01:17:43,000
那导致于

2715
01:17:43,000 --> 01:17:45,000
多个发音都对同一个汉字

2716
01:17:46,000 --> 01:17:47,000
那他们怎么解决这个问题

2717
01:17:47,000 --> 01:17:48,000
他们没有解决这个问题

2718
01:17:48,000 --> 01:17:50,000
在韩文的他们 Case 的

2719
01:17:50,000 --> 01:17:51,000
编马里面

2720
01:17:51,000 --> 01:17:53,000
汉字有重复

2721
01:17:53,000 --> 01:17:54,000
就是

2722
01:17:54,000 --> 01:17:56,000
它是取音的

2723
01:17:56,000 --> 01:17:58,000
它是取型和音

2724
01:17:58,000 --> 01:17:59,000
就是同一个型

2725
01:17:59,000 --> 01:18:00,000
但不同读音的时候

2726
01:18:00,000 --> 01:18:01,000
比如刚才我们的曲

2727
01:18:01,000 --> 01:18:04,000
歌曲和曲线

2728
01:18:04,000 --> 01:18:06,000
它会把它有两个发点

2729
01:18:06,000 --> 01:18:07,000
对

2730
01:18:07,000 --> 01:18:08,000
所以在韩国的

2731
01:18:08,000 --> 01:18:10,000
比如说 Case 的 5601 里面

2732
01:18:10,000 --> 01:18:12,000
它有 4888 个字

2733
01:18:12,000 --> 01:18:14,000
但是其中有 268 个字

2734
01:18:14,000 --> 01:18:15,000
是重复的

2735
01:18:15,000 --> 01:18:17,000
然后转到 Uni

2736
01:18:17,000 --> 01:18:19,000
Uni 口 CJK

2737
01:18:19,000 --> 01:18:20,000
我们都给它合议了吗

2738
01:18:20,000 --> 01:18:21,000
没有合议

2739
01:18:21,000 --> 01:18:22,000
因为要保留

2740
01:18:22,000 --> 01:18:23,000
还有下后建议

2741
01:18:23,000 --> 01:18:25,000
自原分离原则

2742
01:18:25,000 --> 01:18:26,000
刚才说了

2743
01:18:26,000 --> 01:18:27,000
我们说的第一个原则就是

2744
01:18:27,000 --> 01:18:29,000
自离分离

2745
01:18:29,000 --> 01:18:31,000
原来是分的话

2746
01:18:31,000 --> 01:18:32,000
我必须要分

2747
01:18:32,000 --> 01:18:33,000
要不然的话

2748
01:18:33,000 --> 01:18:35,000
你就没办法下后建议了

2749
01:18:35,000 --> 01:18:36,000
就所谓的下后建议

2750
01:18:36,000 --> 01:18:37,000
OK

2751
01:18:39,000 --> 01:18:40,000
所以就说

2752
01:18:40,000 --> 01:18:42,000
CJK 这个 Uniification

2753
01:18:42,000 --> 01:18:43,000
其实是说

2754
01:18:43,000 --> 01:18:45,000
中国的汉字和日本的汉字

2755
01:18:45,000 --> 01:18:46,000
和韩国的汉字

2756
01:18:46,000 --> 01:18:48,000
如果有长得差不多的

2757
01:18:48,000 --> 01:18:49,000
就混成一个

2758
01:18:49,000 --> 01:18:50,000
但是如果他们本身

2759
01:18:50,000 --> 01:18:51,000
里面是有两个的

2760
01:18:51,000 --> 01:18:52,000
我们就不过合了

2761
01:18:53,000 --> 01:18:55,000
所以导致于

2762
01:18:55,000 --> 01:18:57,000
合和分的规则特别的混乱

2763
01:18:57,000 --> 01:18:59,000
有的该合的不合

2764
01:18:59,000 --> 01:19:00,000
该分的不分之类的

2765
01:19:02,000 --> 01:19:03,000
所以其实为了

2766
01:19:03,000 --> 01:19:05,000
省那么小几个马点

2767
01:19:05,000 --> 01:19:07,000
不如说直接复制过来

2768
01:19:07,000 --> 01:19:08,000
就是化区

2769
01:19:08,000 --> 01:19:09,000
跟 IP 地址一样

2770
01:19:09,000 --> 01:19:10,000
说这一块

2771
01:19:10,000 --> 01:19:11,000
你们中国人拿去

2772
01:19:11,000 --> 01:19:12,000
够用了吧

2773
01:19:12,000 --> 01:19:13,000
不够再生职原稿

2774
01:19:13,000 --> 01:19:14,000
随便你怎么样

2775
01:19:14,000 --> 01:19:15,000
然后这一块

2776
01:19:15,000 --> 01:19:16,000
日本人拿去

2777
01:19:16,000 --> 01:19:17,000
你们随便你们怎么弄

2778
01:19:17,000 --> 01:19:18,000
这块日本人拿去

2779
01:19:18,000 --> 01:19:19,000
你们随便怎么用

2780
01:19:19,000 --> 01:19:20,000
这不会更简单一点

2781
01:19:20,000 --> 01:19:22,000
但是这样就被离了 UniCode

2782
01:19:22,000 --> 01:19:24,000
想要 unify 出中了

2783
01:19:24,000 --> 01:19:26,000
UniCode 一开始的一个

2784
01:19:26,000 --> 01:19:28,000
目的不就是让

2785
01:19:28,000 --> 01:19:29,000
所有的字型

2786
01:19:29,000 --> 01:19:30,000
如果相似的话

2787
01:19:31,000 --> 01:19:32,000
他们的意思就是

2788
01:19:32,000 --> 01:19:33,000
如果这个世界上

2789
01:19:33,000 --> 01:19:34,000
有这样一个符号

2790
01:19:34,000 --> 01:19:36,000
它在哪里的写法

2791
01:19:36,000 --> 01:19:38,000
基本上是同一个事物

2792
01:19:38,000 --> 01:19:40,000
比如说白云

2793
01:19:40,000 --> 01:19:42,000
那个可以用 Normalization

2794
01:19:42,000 --> 01:19:43,000
来解决

2795
01:19:46,000 --> 01:19:47,000
比较复杂

2796
01:19:47,000 --> 01:19:48,000
然后因为

2797
01:19:50,000 --> 01:19:51,000
可是 Normalization 最终的结果

2798
01:19:51,000 --> 01:19:53,000
不就还是会像现在一样

2799
01:19:53,000 --> 01:19:54,000
不 就是但是一个是

2800
01:19:54,000 --> 01:19:55,000
可选

2801
01:19:55,000 --> 01:19:57,000
一个是强加的问题

2802
01:19:57,000 --> 01:19:58,000
对吧 因为 UniFecation

2803
01:19:58,000 --> 01:19:59,000
是你在制定规范的时候

2804
01:19:59,000 --> 01:20:00,000
要选

2805
01:20:00,000 --> 01:20:01,000
就给

2806
01:20:01,000 --> 01:20:02,000
就申请 IP 地址的时候

2807
01:20:02,000 --> 01:20:03,000
申请这个马位的时候

2808
01:20:03,000 --> 01:20:04,000
就要先选好说

2809
01:20:04,000 --> 01:20:06,000
我们这个购用一个马位

2810
01:20:06,000 --> 01:20:07,000
但是就说

2811
01:20:07,000 --> 01:20:08,000
你又要保持上后建容的话

2812
01:20:08,000 --> 01:20:09,000
其实做这个事情

2813
01:20:09,000 --> 01:20:11,000
是平白无辜增加的复杂度

2814
01:20:11,000 --> 01:20:12,000
那如果你说 Normalization

2815
01:20:12,000 --> 01:20:14,000
作为一个事后的一个东西

2816
01:20:14,000 --> 01:20:15,000
就虽然我可以向后建容

2817
01:20:15,000 --> 01:20:16,000
但是为了说

2818
01:20:16,000 --> 01:20:17,000
得出来大家都还能够

2819
01:20:17,000 --> 01:20:18,000
一个可比的话

2820
01:20:18,000 --> 01:20:20,000
我们再用一个 Normalization 的规则

2821
01:20:20,000 --> 01:20:21,000
把它换成一个

2822
01:20:21,000 --> 01:20:23,000
同一的表达不就好了吗

2823
01:20:25,000 --> 01:20:26,000
make sense

2824
01:20:27,000 --> 01:20:28,000
好玩 你可以这么说

2825
01:20:28,000 --> 01:20:30,000
但我觉得 UniCode 的初中

2826
01:20:30,000 --> 01:20:31,000
可能是

2827
01:20:33,000 --> 01:20:34,000
UniCode 在 UniCode 的

2828
01:20:34,000 --> 01:20:36,000
制定的理念里面

2829
01:20:36,000 --> 01:20:37,000
兼容技有编码

2830
01:20:37,000 --> 01:20:38,000
并不是占第一位

2831
01:20:38,000 --> 01:20:39,000
对

2832
01:20:40,000 --> 01:20:42,000
UniCode 的理想是

2833
01:20:42,000 --> 01:20:43,000
从 UniCode 之后

2834
01:20:43,000 --> 01:20:45,000
再无别的编码

2835
01:20:46,000 --> 01:20:48,000
如果你说

2836
01:20:48,000 --> 01:20:49,000
你一定要保留

2837
01:20:49,000 --> 01:20:50,000
原有的那个东西

2838
01:20:50,000 --> 01:20:52,000
那相当于 UniCode 的初中

2839
01:20:53,000 --> 01:20:54,000
他的主要诉求

2840
01:20:54,000 --> 01:20:56,000
其实一开始的确就是

2841
01:20:56,000 --> 01:20:57,000
为了大幅度减少

2842
01:20:57,000 --> 01:20:59,000
收入的汉字的字数

2843
01:20:59,000 --> 01:21:01,000
然后就尽量去尊重

2844
01:21:01,000 --> 01:21:03,000
各地的习惯字型

2845
01:21:03,000 --> 01:21:04,000
那就是

2846
01:21:04,000 --> 01:21:05,000
你原来是分离的

2847
01:21:05,000 --> 01:21:06,000
你就分离

2848
01:21:06,000 --> 01:21:07,000
然后能合的就合在一起

2849
01:21:08,000 --> 01:21:10,000
对 还是统一为主

2850
01:21:10,000 --> 01:21:11,000
兼容

2851
01:21:11,000 --> 01:21:12,000
对

2852
01:21:12,000 --> 01:21:13,000
是比较灵活

2853
01:21:13,000 --> 01:21:15,000
但是就因为这个灵活的话

2854
01:21:15,000 --> 01:21:17,000
灵活就是复杂度

2855
01:21:17,000 --> 01:21:19,000
所以他说他的编码是

2856
01:21:19,000 --> 01:21:20,000
针对字

2857
01:21:20,000 --> 01:21:21,000
而不是对字型

2858
01:21:21,000 --> 01:21:24,000
就是对 character 进行编码

2859
01:21:24,000 --> 01:21:25,000
而不是对 griff

2860
01:21:25,000 --> 01:21:27,000
明白

2861
01:21:27,000 --> 01:21:28,000
那其实也不太对

2862
01:21:28,000 --> 01:21:29,000
刚才也说

2863
01:21:29,000 --> 01:21:30,000
文艺的意志

2864
01:21:30,000 --> 01:21:32,000
就不符合这个逻辑了

2865
01:21:33,000 --> 01:21:35,000
但是他们就是对字

2866
01:21:35,000 --> 01:21:37,000
所以就很复杂

2867
01:21:37,000 --> 01:21:38,000
像合起来

2868
01:21:38,000 --> 01:21:39,000
比如说

2869
01:21:39,000 --> 01:21:41,000
那个户口的户

2870
01:21:41,000 --> 01:21:42,000
中国大陆的话

2871
01:21:42,000 --> 01:21:44,000
户的第一笔是底儿吧

2872
01:21:44,000 --> 01:21:47,000
在台 日本是一号

2873
01:21:47,000 --> 01:21:48,000
然后呢

2874
01:21:48,000 --> 01:21:50,000
台湾是一匹

2875
01:21:50,000 --> 01:21:51,000
是方向不一样吗

2876
01:21:51,000 --> 01:21:52,000
但是

2877
01:21:52,000 --> 01:21:53,000
明白

2878
01:21:53,000 --> 01:21:54,000
这个字在 unicode 的话

2879
01:21:54,000 --> 01:21:56,000
我们被当时就是

2880
01:21:56,000 --> 01:21:57,000
认为是一个字嘛

2881
01:21:57,000 --> 01:21:59,000
所以就只给他一个作为

2882
01:21:59,000 --> 01:22:01,000
这导致于就是

2883
01:22:01,000 --> 01:22:02,000
各个地区

2884
01:22:02,000 --> 01:22:03,000
如果想要他们各自的字型的话

2885
01:22:03,000 --> 01:22:05,000
就显示不出来

2886
01:22:05,000 --> 01:22:07,000
就不能通过这个

2887
01:22:07,000 --> 01:22:10,000
就马位来展现了嘛

2888
01:22:11,000 --> 01:22:12,000
就只能通过字体

2889
01:22:12,000 --> 01:22:13,000
个位来实现了嘛

2890
01:22:14,000 --> 01:22:15,000
所以就说

2891
01:22:15,000 --> 01:22:17,000
这不是字的区别

2892
01:22:17,000 --> 01:22:18,000
而是字型的区别

2893
01:22:18,000 --> 01:22:19,000
那等一下

2894
01:22:19,000 --> 01:22:20,000
我有一个问题

2895
01:22:20,000 --> 01:22:21,000
如果说这样的话

2896
01:22:21,000 --> 01:22:22,000
我们做那种

2897
01:22:22,000 --> 01:22:25,000
就是多语言文本的时候怎么办

2898
01:22:25,000 --> 01:22:26,000
所以非常

2899
01:22:26,000 --> 01:22:30,000
依靠你所用的那个自库文件

2900
01:22:30,000 --> 01:22:32,000
但自库文件不可能

2901
01:22:32,000 --> 01:22:34,000
就他会有这种

2902
01:22:34,000 --> 01:22:35,000
就是

2903
01:22:35,000 --> 01:22:36,000
对于一个马位

2904
01:22:36,000 --> 01:22:38,000
他有多个字型的

2905
01:22:38,000 --> 01:22:40,000
比如说

2906
01:22:40,000 --> 01:22:41,000
Source Hansens

2907
01:22:42,000 --> 01:22:43,000
资源黑体

2908
01:22:43,000 --> 01:22:45,000
应该说他是唯一的一个

2909
01:22:46,000 --> 01:22:48,000
他是现存世上唯一一个

2910
01:22:48,000 --> 01:22:49,000
能找到试图去解决

2911
01:22:49,000 --> 01:22:51,000
刚才 Ryo 提出这个问题的

2912
01:22:51,000 --> 01:22:53,000
这样一个字体工程项目

2913
01:22:54,000 --> 01:22:55,000
对

2914
01:22:55,000 --> 01:22:56,000
如果说

2915
01:22:56,000 --> 01:22:57,000
举个很简单的例子

2916
01:22:57,000 --> 01:22:58,000
假设我要做这个 CCK

2917
01:22:58,000 --> 01:22:59,000
不

2918
01:22:59,000 --> 01:23:00,000
就是你们我们假设自弹

2919
01:23:01,000 --> 01:23:02,000
自唱

2920
01:23:02,000 --> 01:23:03,000
要出一个节目

2921
01:23:03,000 --> 01:23:04,000
然后出一个这种印刷品来说

2922
01:23:04,000 --> 01:23:05,000
这几个字的区别

2923
01:23:05,000 --> 01:23:07,000
然后你们用 Unicore 编码的时候

2924
01:23:07,000 --> 01:23:08,000
要写出这几个字

2925
01:23:08,000 --> 01:23:10,000
你能采取的方法就只有两个

2926
01:23:10,000 --> 01:23:11,000
要么找这种

2927
01:23:12,000 --> 01:23:14,000
带有这个 CCK 不同自行

2928
01:23:14,000 --> 01:23:15,000
Virations 的这种自体文件

2929
01:23:15,000 --> 01:23:16,000
一个可以搞定

2930
01:23:16,000 --> 01:23:17,000
然后你在那个

2931
01:23:17,000 --> 01:23:19,000
那个就是编辑器里面去选择他

2932
01:23:19,000 --> 01:23:21,000
另外一个就是说

2933
01:23:21,000 --> 01:23:22,000
选三个不同的自体

2934
01:23:22,000 --> 01:23:24,000
然后手工的去调那个自体

2935
01:23:24,000 --> 01:23:26,000
那个字应该用那个自体

2936
01:23:26,000 --> 01:23:27,000
对的

2937
01:23:27,000 --> 01:23:28,000
是的

2938
01:23:28,000 --> 01:23:29,000
这种时候

2939
01:23:29,000 --> 01:23:31,000
可能直接写 Markdown 会比较简单

2940
01:23:31,000 --> 01:23:35,000
你要么在 Unicore 的层面去保

2941
01:23:35,000 --> 01:23:36,000
你写的每一个字是正确的

2942
01:23:36,000 --> 01:23:39,000
否则就只能用 Markdown 来

2943
01:23:39,000 --> 01:23:40,000
来复助

2944
01:23:40,000 --> 01:23:41,000
怎么弄

2945
01:23:41,000 --> 01:23:42,000
什么 Markdown

2946
01:23:42,000 --> 01:23:43,000
Sorry

2947
01:23:43,000 --> 01:23:44,000
Markup

2948
01:23:44,000 --> 01:23:45,000
其实就是 HTML

2949
01:23:45,000 --> 01:23:46,000
就是你在那个时候

2950
01:23:46,000 --> 01:23:48,000
标出说这一段文字是日文

2951
01:23:48,000 --> 01:23:49,000
对

2952
01:23:49,000 --> 01:23:50,000
对

2953
01:23:50,000 --> 01:23:51,000
然后到时候再在 Sex 里面

2954
01:23:51,000 --> 01:23:53,000
指令说这一段用日文的自体

2955
01:23:53,000 --> 01:23:54,000
是的

2956
01:23:54,000 --> 01:23:55,000
就不能直接用一个很简单的那种

2957
01:23:55,000 --> 01:23:56,000
就你得加

2958
01:23:56,000 --> 01:23:58,000
人为的加入一些 Metadata 才行

2959
01:23:58,000 --> 01:23:59,000
对

2960
01:23:59,000 --> 01:24:00,000
所以其实还是刚才那个问题

2961
01:24:00,000 --> 01:24:00,000
那个问题吗

2962
01:24:00,000 --> 01:24:02,000
就是刚才 unicode 这个 unification

2963
01:24:02,000 --> 01:24:03,000
它是带来的后果

2964
01:24:03,000 --> 01:24:06,000
就是在混排文字的时候出现那种不可指

2965
01:24:06,000 --> 01:24:08,000
就是不能很方便的指定的情况下

2966
01:24:08,000 --> 01:24:09,000
因为理想情况下

2967
01:24:09,000 --> 01:24:12,000
如果这三个在那个互字的那个三个国家的不同写法

2968
01:24:12,000 --> 01:24:14,000
是没有统一的话

2969
01:24:14,000 --> 01:24:17,000
其实你是很可以很方便的让系统自动去 forback

2970
01:24:17,000 --> 01:24:19,000
到对应国家的那个那个字上面去

2971
01:24:19,000 --> 01:24:20,000
但是话说回来

2972
01:24:20,000 --> 01:24:22,000
如果真是混排系统的话

2973
01:24:22,000 --> 01:24:23,000
你别说是机器的

2974
01:24:23,000 --> 01:24:24,000
连人都看不出来

2975
01:24:24,000 --> 01:24:25,000
比如说中国两个字

2976
01:24:26,000 --> 01:24:29,000
中国大陆的写法和日本的些话是完全一模一样的

2977
01:24:30,000 --> 01:24:30,000
所以呢

2978
01:24:30,000 --> 01:24:31,000
如果你单写中国两个字

2979
01:24:31,000 --> 01:24:33,000
你不知道这是日本还是中文

2980
01:24:33,000 --> 01:24:35,000
而是你不知道它指的是中国

2981
01:24:35,000 --> 01:24:35,000
对

2982
01:24:35,000 --> 01:24:36,000
是日本的意思也不一样

2983
01:24:36,000 --> 01:24:37,000
对

2984
01:24:37,000 --> 01:24:39,000
因为日本也有中国地区

2985
01:24:39,000 --> 01:24:40,000
什么意思

2986
01:24:40,000 --> 01:24:41,000
日本有一个地区

2987
01:24:41,000 --> 01:24:42,000
就叫中国

2988
01:24:44,000 --> 01:24:46,000
所以这就是为什么在在历史上

2989
01:24:46,000 --> 01:24:47,000
日本管中国

2990
01:24:47,000 --> 01:24:49,000
他们喜欢叫之那

2991
01:24:49,000 --> 01:24:51,000
就是因为如果说中国的话

2992
01:24:51,000 --> 01:24:52,000
对

2993
01:24:52,000 --> 01:24:54,000
他们就指的是日本的中国地区

2994
01:24:54,000 --> 01:24:55,000
就是管岛的附近

2995
01:24:55,000 --> 01:24:56,000
那叫日本

2996
01:24:56,000 --> 01:24:58,000
那是日本的中国地区

2997
01:24:58,000 --> 01:24:58,000
对

2998
01:24:58,000 --> 01:25:01,000
所以他们选择了这个法语词的法语

2999
01:25:01,000 --> 01:25:01,000
是吧

3000
01:25:01,000 --> 01:25:02,000
看起来比较洋气

3001
01:25:04,000 --> 01:25:05,000
之那不是法语词

3002
01:25:06,000 --> 01:25:07,000
应该是吧

3003
01:25:07,000 --> 01:25:09,000
它应该是那个 China 的那个

3004
01:25:09,000 --> 01:25:09,000
是

3005
01:25:09,000 --> 01:25:09,000
是

3006
01:25:09,000 --> 01:25:09,000
是

3007
01:25:09,000 --> 01:25:10,000
是

3008
01:25:10,000 --> 01:25:10,000
是

3009
01:25:10,000 --> 01:25:11,000
是

3010
01:25:11,000 --> 01:25:12,000
印度

3011
01:25:12,000 --> 01:25:12,000
就是

3012
01:25:13,000 --> 01:25:15,000
是印度那边过来的

3013
01:25:15,000 --> 01:25:15,000
是吧

3014
01:25:15,000 --> 01:25:16,000
印度

3015
01:25:16,000 --> 01:25:17,000
就是那个什么 Cino

3016
01:25:17,000 --> 01:25:18,000
Cino

3017
01:25:18,000 --> 01:25:18,000
对

3018
01:25:18,000 --> 01:25:20,000
现在英文也是我们

3019
01:25:20,000 --> 01:25:21,000
Cino 派

3020
01:25:21,000 --> 01:25:21,000
就是同源嘛

3021
01:25:21,000 --> 01:25:22,000
对

3022
01:25:22,000 --> 01:25:23,000
就像什么 Sino

3023
01:25:23,000 --> 01:25:25,000
Sino American relationship

3024
01:25:25,000 --> 01:25:26,000
对吧

3025
01:25:26,000 --> 01:25:27,000
你就是这个词源

3026
01:25:27,000 --> 01:25:28,000
有时候就挺

3027
01:25:29,000 --> 01:25:30,000
就有时候看那个说

3028
01:25:30,000 --> 01:25:31,000
说之那是一个什么

3029
01:25:31,000 --> 01:25:32,000
歧视性的称呼

3030
01:25:32,000 --> 01:25:33,000
我就觉得挺扯的

3031
01:25:33,000 --> 01:25:34,000
你自己发音用的时候

3032
01:25:34,000 --> 01:25:36,000
你不写了什么 Sino 什么什么

3033
01:25:36,000 --> 01:25:37,000
所以其实之那这是

3034
01:25:37,000 --> 01:25:40,000
这是一个历史上就很常用的一个词

3035
01:25:40,000 --> 01:25:41,000
对

3036
01:25:41,000 --> 01:25:44,000
就是到因为到后面打仗了以后才变成有歧视

3037
01:25:44,000 --> 01:25:46,000
这原来它完全没有这个意思的

3038
01:25:46,000 --> 01:25:47,000
就没有歧视的

3039
01:25:47,000 --> 01:25:48,000
明白

3040
01:25:48,000 --> 01:25:49,000
明白

3041
01:25:49,000 --> 01:25:50,000
OK

3042
01:25:50,000 --> 01:25:51,000
所以的话就这个退回来讲

3043
01:25:51,000 --> 01:25:54,000
就是你如果单纯写这中国这两个字的话

3044
01:25:54,000 --> 01:25:56,000
你更别说是机器了

3045
01:25:56,000 --> 01:25:57,000
连人也看不出来

3046
01:25:57,000 --> 01:25:59,000
就到底是中文还是日本

3047
01:25:59,000 --> 01:26:00,000
所以你还是要

3048
01:26:01,000 --> 01:26:04,000
非常仔仔细细的去 Mark

3049
01:26:04,000 --> 01:26:04,000
对

3050
01:26:04,000 --> 01:26:05,000
你是要给他一个

3051
01:26:05,000 --> 01:26:08,000
local 的这样一个信息

3052
01:26:08,000 --> 01:26:12,000
他才能更加正确和精确的显示这个

3053
01:26:12,000 --> 01:26:13,000
你所想要的结果

3054
01:26:13,000 --> 01:26:15,000
就是其实是一个

3055
01:26:15,000 --> 01:26:18,000
信息处理的一种架构或者哲学吧

3056
01:26:18,000 --> 01:26:20,000
这个其实大家可以去看那个

3057
01:26:20,000 --> 01:26:22,000
小林健写的那本

3058
01:26:22,000 --> 01:26:25,000
CJKV 的这个信息处理的那本书了

3059
01:26:25,000 --> 01:26:27,000
他应该算是一个这方面的专家

3060
01:26:27,000 --> 01:26:31,000
然后他应该方方面面都会照顾到这些问题

3061
01:26:31,000 --> 01:26:32,000
然后告诉你

3062
01:26:32,000 --> 01:26:33,000
在不同的层面

3063
01:26:33,000 --> 01:26:35,000
他们分别是用什么样的技术去解决

3064
01:26:35,000 --> 01:26:37,000
我们不可能依赖 Unicode 这样

3065
01:26:37,000 --> 01:26:40,000
一种技术方案来解决所有的问题

3066
01:26:41,000 --> 01:26:45,000
所以刚刚你们说那个中文的中国和日文的中国

3067
01:26:45,000 --> 01:26:47,000
在 Unicode 里面是不同的点位

3068
01:26:47,000 --> 01:26:47,000
一样的

3069
01:26:47,000 --> 01:26:48,000
是一样的

3070
01:26:48,000 --> 01:26:50,000
完全一样的

3071
01:26:50,000 --> 01:26:52,000
但是写出来是一样的

3072
01:26:52,000 --> 01:26:53,000
就不涉及这个问题

3073
01:26:53,000 --> 01:26:54,000
写出来完全没有

3074
01:26:54,000 --> 01:26:54,000
对

3075
01:26:54,000 --> 01:26:54,000
对

3076
01:26:54,000 --> 01:26:54,000
没错

3077
01:26:54,000 --> 01:26:55,000
对

3078
01:26:55,000 --> 01:26:55,000
那就靠于

3079
01:26:56,000 --> 01:26:59,000
写出来完全一样取决于你从谁的角度来看

3080
01:26:59,000 --> 01:27:01,000
就是假如你是一个

3081
01:27:01,000 --> 01:27:02,000
日本人写了中国两个字

3082
01:27:02,000 --> 01:27:04,000
然后你让中国来看

3083
01:27:04,000 --> 01:27:04,000
可能看不出来

3084
01:27:04,000 --> 01:27:06,000
但如果你用一个日文字体的话

3085
01:27:06,000 --> 01:27:08,000
你会看到中国这两个字

3086
01:27:08,000 --> 01:27:11,000
在日本和中文字体里面有不一样的风格

3087
01:27:11,000 --> 01:27:12,000
所以多少还是能判得出来

3088
01:27:12,000 --> 01:27:13,000
这是一个

3089
01:27:14,000 --> 01:27:16,000
就是有可能你可以判断出来

3090
01:27:16,000 --> 01:27:17,000
这是日本的中国

3091
01:27:17,000 --> 01:27:18,000
就是看语义了

3092
01:27:18,000 --> 01:27:20,000
就是看那个上下文在讲什么

3093
01:27:20,000 --> 01:27:21,000
不是看语义

3094
01:27:21,000 --> 01:27:21,000
是看字形

3095
01:27:21,000 --> 01:27:23,000
他的意思是那个看 design

3096
01:27:23,000 --> 01:27:25,000
因为看那个形状

3097
01:27:26,000 --> 01:27:31,000
每个国家的字形的标准都有多少区别

3098
01:27:31,000 --> 01:27:32,000
那是 design 风格的问题

3099
01:27:32,000 --> 01:27:33,000
设计风格的问题

3100
01:27:34,000 --> 01:27:38,000
所以 CJK 统一汉字

3101
01:27:38,000 --> 01:27:40,000
就它叫统一表义文字

3102
01:27:44,000 --> 01:27:47,000
所以后来就一直

3103
01:27:47,000 --> 01:27:48,000
当然字是不够用

3104
01:27:48,000 --> 01:27:49,000
所以就一直扩展

3105
01:27:49,000 --> 01:27:51,000
然后后面就扩展 A 区

3106
01:27:51,000 --> 01:27:51,000
扩展 B 区

3107
01:27:51,000 --> 01:27:53,000
我们大陆说

3108
01:27:53,000 --> 01:27:55,000
扩展 A,B,C,D,E

3109
01:27:55,000 --> 01:27:56,000
现在已经有 E 区了

3110
01:27:57,000 --> 01:27:58,000
台湾他们那边说

3111
01:27:58,000 --> 01:27:59,000
扩展加以禀禀物

3112
01:27:59,000 --> 01:28:00,000
这个说法不一样而已

3113
01:28:00,000 --> 01:28:02,000
其实这些东西是一样的

3114
01:28:02,000 --> 01:28:03,000
现在有 F 区了

3115
01:28:03,000 --> 01:28:03,000
是吗

3116
01:28:03,000 --> 01:28:04,000
都已经到

3117
01:28:04,000 --> 01:28:05,000
所以字是越来越多

3118
01:28:05,000 --> 01:28:06,000
越来越多

3119
01:28:06,000 --> 01:28:08,000
好像是有的

3120
01:28:08,000 --> 01:28:11,000
各种考古挖出来一些新字

3121
01:28:11,000 --> 01:28:11,000
又得加进去

3122
01:28:11,000 --> 01:28:12,000
对

3123
01:28:12,000 --> 01:28:13,000
什么

3124
01:28:13,000 --> 01:28:14,000
而且什么

3125
01:28:14,000 --> 01:28:16,000
转小转大转之类的

3126
01:28:16,000 --> 01:28:17,000
都可以讲

3127
01:28:17,000 --> 01:28:17,000
对

3128
01:28:17,000 --> 01:28:18,000
就是

3129
01:28:19,000 --> 01:28:20,000
所以呢

3130
01:28:20,000 --> 01:28:21,000
因为本身 Ulicode

3131
01:28:21,000 --> 01:28:22,000
它本身也一直都在更新

3132
01:28:23,000 --> 01:28:24,000
对

3133
01:28:26,000 --> 01:28:27,000
至少

3134
01:28:28,000 --> 01:28:29,000
Ulicode 8.0 的话

3135
01:28:29,000 --> 01:28:32,000
已经到扩展 E 区了

3136
01:28:32,000 --> 01:28:33,000
这是已经有了

3137
01:28:33,000 --> 01:28:35,000
这是已经收进去了

3138
01:28:35,000 --> 01:28:35,000
对

3139
01:28:36,000 --> 01:28:37,000
所以以后我们不能说

3140
01:28:37,000 --> 01:28:39,000
把那个什么扫进固纸堆里面

3141
01:28:39,000 --> 01:28:41,000
我们得扫进 Ulicode 这个垃圾坑里面

3142
01:28:46,000 --> 01:28:46,000
好

3143
01:28:46,000 --> 01:28:48,000
这是说到 Ulicode 这个字的问题

3144
01:28:48,000 --> 01:28:48,000
对吧

3145
01:28:48,000 --> 01:28:50,000
然后 Ulicode 编码问题呢

3146
01:28:51,000 --> 01:28:52,000
这个坑就大了

3147
01:28:52,000 --> 01:28:54,000
之前吴涛在那个

3148
01:28:54,000 --> 01:28:54,000
那个单

3149
01:28:54,000 --> 01:28:56,000
那期单口节目里面已经

3150
01:28:56,000 --> 01:28:57,000
大概讲过了

3151
01:28:57,000 --> 01:28:58,000
这里要不要再重申一遍

3152
01:29:00,000 --> 01:29:01,000
为什么你们都记得那期我讲了什么

3153
01:29:01,000 --> 01:29:03,000
我现在完全不记得自己那一期讲

3154
01:29:04,000 --> 01:29:05,000
未录这节目

3155
01:29:05,000 --> 01:29:06,000
我还特地翻出来听了一遍

3156
01:29:08,000 --> 01:29:09,000
结果听到后面

3157
01:29:09,000 --> 01:29:10,000
居然是情绪员

3158
01:29:10,000 --> 01:29:10,000
咱们找女朋友

3159
01:29:10,000 --> 01:29:11,000
这是什么鬼

3160
01:29:12,000 --> 01:29:15,000
其实我也写了一篇很简单的一个

3161
01:29:15,000 --> 01:29:16,000
一个博客吧

3162
01:29:16,000 --> 01:29:18,000
去说这个大概记录了一下

3163
01:29:18,000 --> 01:29:21,000
我当时学习这个坑的一个结果

3164
01:29:21,000 --> 01:29:25,000
这个编码方式的 UTF 8

3165
01:29:25,000 --> 01:29:26,000
UTF 16 什么什么

3166
01:29:26,000 --> 01:29:29,000
但是你们详细的说一下

3167
01:29:29,000 --> 01:29:30,000
其实这个坑还蛮多的

3168
01:29:30,000 --> 01:29:31,000
这个我可以讲一下

3169
01:29:32,000 --> 01:29:33,000
对

3170
01:29:33,000 --> 01:29:33,000
就最开始的时候

3171
01:29:33,000 --> 01:29:36,000
其实没有 UTF 16 的

3172
01:29:36,000 --> 01:29:38,000
最开始的时候叫 UCS 2

3173
01:29:38,000 --> 01:29:39,000
对

3174
01:29:39,000 --> 01:29:40,000
没错

3175
01:29:40,000 --> 01:29:43,000
这个坑也是一个历史一流问题

3176
01:29:43,000 --> 01:29:43,000
对

3177
01:29:43,000 --> 01:29:47,000
然后 UCS 2 其实它只是编码

3178
01:29:47,000 --> 01:29:49,000
刚才讲的那个叫做 BMP

3179
01:29:49,000 --> 01:29:50,000
就是基本平面

3180
01:29:50,000 --> 01:29:53,000
就是一共有 6 万 5 千 5 百 36 个点

3181
01:29:53,000 --> 01:29:54,000
对吧

3182
01:29:54,000 --> 01:29:56,000
然后就很简单

3183
01:29:56,000 --> 01:29:59,000
就是没有任何额外的东西

3184
01:29:59,000 --> 01:30:03,000
然后 UCS 2 和 UTF 16 的区别是什么呢

3185
01:30:03,000 --> 01:30:07,000
就是 UTF 16 里面其实是等于 UCS 2

3186
01:30:07,000 --> 01:30:11,000
然后加了那个叫做 ServerGatePair

3187
01:30:11,000 --> 01:30:11,000
ServerGatePair

3188
01:30:11,000 --> 01:30:12,000
你中文叫什么

3189
01:30:12,000 --> 01:30:13,000
有

3190
01:30:13,000 --> 01:30:14,000
代理对

3191
01:30:16,000 --> 01:30:16,000
对

3192
01:30:16,000 --> 01:30:18,000
我不是一直都不知道中文叫什么

3193
01:30:19,000 --> 01:30:19,000
对

3194
01:30:19,000 --> 01:30:20,000
或者这么厉害

3195
01:30:20,000 --> 01:30:23,000
UCS 2 可以大致等同于

3196
01:30:23,000 --> 01:30:26,000
这个 Gb 2 312 对于中文的概念

3197
01:30:26,000 --> 01:30:28,000
因为它就是一个定长的

3198
01:30:28,000 --> 01:30:29,000
没有任何特殊东西的

3199
01:30:29,000 --> 01:30:31,000
就只是那么多个点位而已

3200
01:30:31,000 --> 01:30:32,000
然后

3201
01:30:32,000 --> 01:30:34,000
但是因为当时已经突破了

3202
01:30:34,000 --> 01:30:35,000
那个基本平面了

3203
01:30:35,000 --> 01:30:36,000
对吧

3204
01:30:36,000 --> 01:30:41,000
就是要想要想要想办法表达 6 万 5 千 5 百 36 个

3205
01:30:41,000 --> 01:30:43,000
这个点之外的东西怎么办

3206
01:30:43,000 --> 01:30:44,000
想出这么一个 Hack

3207
01:30:44,000 --> 01:30:46,000
就是说在那个基本平面里面

3208
01:30:46,000 --> 01:30:47,000
扣出了一小段

3209
01:30:47,000 --> 01:30:48,000
大概是

3210
01:30:48,000 --> 01:30:49,000
我看看

3211
01:30:50,000 --> 01:30:55,000
是这个 16 进制编码是第 800 到 DFF

3212
01:30:55,000 --> 01:30:58,000
这几个字符

3213
01:30:58,000 --> 01:31:00,000
是用做 ServerGatePair

3214
01:31:00,000 --> 01:31:02,000
ServerGatePair 是什么意思

3215
01:31:02,000 --> 01:31:06,000
等于是从两个字节的一个定长编码里面

3216
01:31:06,000 --> 01:31:09,000
Markup 就是刚才讲无套说的办法

3217
01:31:09,000 --> 01:31:09,000
用一个

3218
01:31:10,000 --> 01:31:10,000
对

3219
01:31:10,000 --> 01:31:12,000
做了一个特殊标记说

3220
01:31:12,000 --> 01:31:13,000
从这些字符之间的东西

3221
01:31:13,000 --> 01:31:15,000
你要进行一个特殊处理

3222
01:31:15,000 --> 01:31:17,000
使得我们可以超出基本平面

3223
01:31:17,000 --> 01:31:20,000
6 万 5 千 5 百 36 个字符的限制

3224
01:31:20,000 --> 01:31:22,000
然后这个是 UTF 16

3225
01:31:22,000 --> 01:31:25,000
它当时做出编码方案

3226
01:31:25,000 --> 01:31:27,000
其实还是为了省资源

3227
01:31:27,000 --> 01:31:27,000
对吧

3228
01:31:27,000 --> 01:31:29,000
就是节省编码

3229
01:31:29,000 --> 01:31:30,000
对

3230
01:31:30,000 --> 01:31:31,000
是因为这样

3231
01:31:31,000 --> 01:31:32,000
就是说

3232
01:31:32,000 --> 01:31:33,000
如果当时有个刚讲

3233
01:31:33,000 --> 01:31:36,000
UCR 是一个非常简单的编码方式

3234
01:31:36,000 --> 01:31:37,000
其实对应的还有一点

3235
01:31:37,000 --> 01:31:38,000
UCR 是四

3236
01:31:38,000 --> 01:31:39,000
就是

3237
01:31:39,000 --> 01:31:39,000
对

3238
01:31:39,000 --> 01:31:40,000
就是四个字节

3239
01:31:40,000 --> 01:31:41,000
32 位的东西

3240
01:31:41,000 --> 01:31:43,000
然后 UCR 是四

3241
01:31:43,000 --> 01:31:45,000
本质上就是 UTF 32

3242
01:31:45,000 --> 01:31:46,000
它是一个

3243
01:31:46,000 --> 01:31:49,000
它是一个固定的

3244
01:31:49,000 --> 01:31:50,000
算是

3245
01:31:50,000 --> 01:31:50,000
对

3246
01:31:50,000 --> 01:31:51,000
都是定长编码

3247
01:31:51,000 --> 01:31:52,000
就很浪费

3248
01:31:52,000 --> 01:31:54,000
就是你一个字母 A 的话

3249
01:31:54,000 --> 01:31:54,000
也要用那个

3250
01:31:54,000 --> 01:31:56,000
特别浪费

3251
01:31:56,000 --> 01:31:57,000
对

3252
01:31:57,000 --> 01:31:58,000
所以后来全衡一下

3253
01:31:58,000 --> 01:32:00,000
就说我们还是用内部

3254
01:32:00,000 --> 01:32:02,000
还是 UTF 16

3255
01:32:02,000 --> 01:32:05,000
用 UCR 定长的比较好

3256
01:32:05,000 --> 01:32:07,000
但是要为了解决

3257
01:32:07,000 --> 01:32:09,000
超出基本平面的问题

3258
01:32:09,000 --> 01:32:11,000
所以加了 SerigatePair 这种

3259
01:32:11,000 --> 01:32:12,000
这种 Hack

3260
01:32:12,000 --> 01:32:15,000
使得 UCR 变成了 UTF 16

3261
01:32:15,000 --> 01:32:16,000
这么一个博程

3262
01:32:16,000 --> 01:32:17,000
要看那个标记

3263
01:32:17,000 --> 01:32:18,000
有了这个标记以后

3264
01:32:18,000 --> 01:32:20,000
我就要用另外一个了

3265
01:32:20,000 --> 01:32:22,000
对吧

3266
01:32:22,000 --> 01:32:23,000
就是你搜

3267
01:32:23,000 --> 01:32:25,000
搜 UCR 里面的 SerigatePair

3268
01:32:25,000 --> 01:32:27,000
那段是没有定义意义的

3269
01:32:27,000 --> 01:32:28,000
然后用上

3270
01:32:28,000 --> 01:32:29,000
人为规定说

3271
01:32:29,000 --> 01:32:32,000
如果你看到有这种 SerigatePair 的字符

3272
01:32:32,000 --> 01:32:35,000
就知道你这个是 UTF 16

3273
01:32:35,000 --> 01:32:36,000
所以这些 SerigatePair 里面的东西

3274
01:32:36,000 --> 01:32:37,000
你要特殊处理

3275
01:32:39,000 --> 01:32:41,000
反正也是一个很大的

3276
01:32:41,000 --> 01:32:42,000
很

3277
01:32:42,000 --> 01:32:44,000
然后说到定长编码

3278
01:32:44,000 --> 01:32:45,000
就因为定长编码

3279
01:32:45,000 --> 01:32:47,000
就会牵涉到一个

3280
01:32:47,000 --> 01:32:49,000
这个所谓的顺序的问题

3281
01:32:49,000 --> 01:32:51,000
这又是一个更大的坑

3282
01:32:51,000 --> 01:32:53,000
对 深坑

3283
01:32:53,000 --> 01:32:56,000
这其实是非单字节编码

3284
01:32:56,000 --> 01:32:57,000
都要牵涉

3285
01:32:57,000 --> 01:32:58,000
对 非单字节编码

3286
01:32:58,000 --> 01:32:59,000
都有很明显的问题

3287
01:32:59,000 --> 01:33:01,000
这个不光是在字符编码上

3288
01:33:01,000 --> 01:33:03,000
其实在计算机的数字的表达上

3289
01:33:03,000 --> 01:33:05,000
也会有这个问题

3290
01:33:05,000 --> 01:33:07,000
比如我们常说计算机一个字节

3291
01:33:07,000 --> 01:33:11,000
最小单位是 8 个位

3292
01:33:11,000 --> 01:33:11,000
但是两个字节

3293
01:33:11,000 --> 01:33:13,000
就是你表示 16 位整数的时候

3294
01:33:13,000 --> 01:33:14,000
也会牵涉到哪个是高位

3295
01:33:14,000 --> 01:33:15,000
哪个是低位

3296
01:33:15,000 --> 01:33:16,000
就哪边是高位

3297
01:33:16,000 --> 01:33:17,000
哪边是低位的问题

3298
01:33:17,000 --> 01:33:19,000
对

3299
01:33:19,000 --> 01:33:21,000
然后就会所谓的

3300
01:33:21,000 --> 01:33:22,000
我们就会牵上那个

3301
01:33:22,000 --> 01:33:23,000
叫做 Indium

3302
01:33:23,000 --> 01:33:24,000
Indium 中文翻成什么

3303
01:33:26,000 --> 01:33:27,000
端

3304
01:33:27,000 --> 01:33:29,000
就翻成端

3305
01:33:29,000 --> 01:33:31,000
一般那个就是端系

3306
01:33:31,000 --> 01:33:31,000
对

3307
01:33:31,000 --> 01:33:32,000
我们一般管那个叫端式

3308
01:33:33,000 --> 01:33:35,000
就大端和大尾和小尾

3309
01:33:35,000 --> 01:33:36,000
这个是个端名字

3310
01:33:36,000 --> 01:33:38,000
我今天说大头小头

3311
01:33:38,000 --> 01:33:39,000
对 端式

3312
01:33:39,000 --> 01:33:41,000
对 它其实表示的就是

3313
01:33:41,000 --> 01:33:42,000
大头派小头派

3314
01:33:42,000 --> 01:33:43,000
没错

3315
01:33:43,000 --> 01:33:45,000
就原作是指这个

3316
01:33:45,000 --> 01:33:48,000
就在格列弗尤基的原作里面是指

3317
01:33:48,000 --> 01:33:50,000
小人国在打内战的时候

3318
01:33:50,000 --> 01:33:51,000
是指什么那个意思

3319
01:33:51,000 --> 01:33:53,000
说吃鸡蛋要从大头开始敲

3320
01:33:53,000 --> 01:33:55,000
还是从小头开始敲

3321
01:33:55,000 --> 01:33:57,000
然后因此还发过六次叛乱

3322
01:33:58,000 --> 01:34:00,000
对 Ending 就是从那个鸡蛋的那个

3323
01:34:00,000 --> 01:34:00,000
对

3324
01:34:00,000 --> 01:34:01,000
那个地方来的吧

3325
01:34:01,000 --> 01:34:02,000
对

3326
01:34:02,000 --> 01:34:04,000
它用了那个点兔

3327
01:34:04,000 --> 01:34:05,000
对

3328
01:34:05,000 --> 01:34:08,000
然后这个坑就比较深了

3329
01:34:08,000 --> 01:34:09,000
就说简单来讲就是哪头

3330
01:34:09,000 --> 01:34:11,000
就是对于一个数字来讲

3331
01:34:11,000 --> 01:34:13,000
比如说是对于一个十六位的整数来讲

3332
01:34:13,000 --> 01:34:15,000
你觉得第一就是从左到右数

3333
01:34:15,000 --> 01:34:16,000
左边是高位

3334
01:34:16,000 --> 01:34:17,000
还是右边是高位

3335
01:34:17,000 --> 01:34:18,000
对吧

3336
01:34:20,000 --> 01:34:20,000
没错吧

3337
01:34:20,000 --> 01:34:21,000
我想想

3338
01:34:21,000 --> 01:34:22,000
对

3339
01:34:22,000 --> 01:34:22,000
对

3340
01:34:23,000 --> 01:34:25,000
就是大端式的话

3341
01:34:25,000 --> 01:34:26,000
就是左边是高位

3342
01:34:26,000 --> 01:34:28,000
小端式就是右边是高位

3343
01:34:28,000 --> 01:34:28,000
对

3344
01:34:28,000 --> 01:34:30,000
但是在字符集的时候

3345
01:34:30,000 --> 01:34:31,000
这个坑就又多了

3346
01:34:31,000 --> 01:34:32,000
就会牵涉到

3347
01:34:32,000 --> 01:34:36,000
因为我想想怎么表述这个东西

3348
01:34:36,000 --> 01:34:38,000
就是首先你要看它的这个

3349
01:34:38,000 --> 01:34:41,000
字节的组合是怎样分成一个一个单元的

3350
01:34:41,000 --> 01:34:43,000
然后它在每个单元的内部

3351
01:34:43,000 --> 01:34:46,000
会有一个端式的这个

3352
01:34:46,000 --> 01:34:46,000
不

3353
01:34:46,000 --> 01:34:47,000
因为有这么一个问题

3354
01:34:47,000 --> 01:34:48,000
可能要解释一下

3355
01:34:48,000 --> 01:34:50,000
就是说在数字上面

3356
01:34:50,000 --> 01:34:53,000
我们写一般是说是从左往右写

3357
01:34:53,000 --> 01:34:54,000
对吧

3358
01:34:54,000 --> 01:34:56,000
我们正常的是个书解顺序

3359
01:34:56,000 --> 01:34:57,000
但是在表达那个

3360
01:34:57,000 --> 01:34:59,000
如果是位的话

3361
01:34:59,000 --> 01:35:00,000
如果你是小端

3362
01:35:00,000 --> 01:35:01,000
大端小端

3363
01:35:01,000 --> 01:35:01,000
就某一端的时候

3364
01:35:01,000 --> 01:35:04,000
它是最右边那个位开始起的

3365
01:35:04,000 --> 01:35:06,000
因为你想就是低位高位的话

3366
01:35:06,000 --> 01:35:08,000
各位是不是在右边

3367
01:35:08,000 --> 01:35:10,000
然后越高位的话是越往左写

3368
01:35:10,000 --> 01:35:12,000
越往左边的是越高位

3369
01:35:12,000 --> 01:35:14,000
对

3370
01:35:14,000 --> 01:35:15,000
对

3371
01:35:15,000 --> 01:35:16,000
这个也是一个很深的一个

3372
01:35:16,000 --> 01:35:22,000
经常我搞不清楚这里面到底是哪个原理

3373
01:35:22,000 --> 01:35:25,000
就是你想如果我们把那个位

3374
01:35:25,000 --> 01:35:27,000
作为一个图形化的方式表达的眼前的话

3375
01:35:27,000 --> 01:35:31,000
你会发现它其实是从右边开始增加的

3376
01:35:32,000 --> 01:35:34,000
你懂我的意思吗

3377
01:35:34,000 --> 01:35:36,000
就是比如说 01

3378
01:35:36,000 --> 01:35:37,000
然后 10

3379
01:35:37,000 --> 01:35:39,000
然后 11

3380
01:35:39,000 --> 01:35:40,000
100

3381
01:35:40,000 --> 01:35:41,000
100 这样的方式对吧

3382
01:35:41,000 --> 01:35:42,000
哎呀

3383
01:35:42,000 --> 01:35:44,000
我就这样说出来

3384
01:35:44,000 --> 01:35:45,000
好

3385
01:35:45,000 --> 01:35:47,000
大家肯定晕了

3386
01:35:47,000 --> 01:35:48,000
anyway

3387
01:35:48,000 --> 01:35:48,000
没错

3388
01:35:48,000 --> 01:35:50,000
别再脑中画一下

3389
01:35:50,000 --> 01:35:50,000
对

3390
01:35:50,000 --> 01:35:51,000
对

3391
01:35:51,000 --> 01:35:54,000
其实我们主要认可这个世界上

3392
01:35:54,000 --> 01:35:56,000
事实上存在了这样两种顺势

3393
01:35:56,000 --> 01:35:59,000
那么这两种顺势实际上是由计算机

3394
01:35:59,000 --> 01:36:02,000
这个体系的硬件架构所决定的

3395
01:36:02,000 --> 01:36:06,000
一派架构它就是以这个小端式来保存它的数据

3396
01:36:06,000 --> 01:36:09,000
而另一端另一种架构就是以大端式来保存它的数据

3397
01:36:09,000 --> 01:36:10,000
对

3398
01:36:10,000 --> 01:36:12,000
然后这个在我们常用的计算机里面

3399
01:36:12,000 --> 01:36:15,000
intel 架构就是我们现在用的 x 86

3400
01:36:15,000 --> 01:36:17,000
它是一个小端设计的

3401
01:36:17,000 --> 01:36:18,000
嗯对

3402
01:36:18,000 --> 01:36:22,000
但是在互联网上我们基本上所有的这个通讯协议

3403
01:36:22,000 --> 01:36:26,000
以及这个网络标准全部都是以大端来设计的

3404
01:36:26,000 --> 01:36:28,000
所以坑就从这里开始了

3405
01:36:29,000 --> 01:36:30,000
没错

3406
01:36:30,000 --> 01:36:33,000
这是不是跟早期的服务器用的架构有关

3407
01:36:33,000 --> 01:36:37,000
因为早期的做互联网的那些服务器都不是 intel 的处理器

3408
01:36:37,000 --> 01:36:41,000
都是一些其他现在已经消失力气的处理器

3409
01:36:41,000 --> 01:36:44,000
都是 unix 的

3410
01:36:44,000 --> 01:36:44,000
是吧

3411
01:36:44,000 --> 01:36:45,000
不那个是操作系统的

3412
01:36:45,000 --> 01:36:47,000
那个还没有跟那个

3413
01:36:47,000 --> 01:36:48,000
这个是一个硬件

3414
01:36:48,000 --> 01:36:49,000
这很低层的

3415
01:36:49,000 --> 01:36:53,000
然后就对对早期很多做互联网的服务器

3416
01:36:53,000 --> 01:36:54,000
还有包括那些开发

3417
01:36:54,000 --> 01:36:57,000
就是最开始做什么 arparment 的那些用的机器

3418
01:36:57,000 --> 01:36:58,000
他们其实很多都是大端的

3419
01:36:58,000 --> 01:37:00,000
就是 big ending 的

3420
01:37:00,000 --> 01:37:01,000
所以就他们的用的那些机器

3421
01:37:01,000 --> 01:37:03,000
变成了一个正统

3422
01:37:03,000 --> 01:37:06,000
然后反而现在我们做小端的 intel 的处理器

3423
01:37:06,000 --> 01:37:08,000
到时候就为什么你写 c 程序的时候

3424
01:37:08,000 --> 01:37:13,000
还要有一个什么 host h 2 n

3425
01:37:13,000 --> 01:37:15,000
h 2 l

3426
01:37:15,000 --> 01:37:22,000
和 l 2 h 就是转换网络的端和本地的这个 host to local 是吧

3427
01:37:22,000 --> 01:37:23,000
对对对

3428
01:37:23,000 --> 01:37:27,000
对那个小端式是 wax 和 intel 的架构

3429
01:37:27,000 --> 01:37:29,000
大端式是 moto lark 上的那个价格

3430
01:37:29,000 --> 01:37:30,000
没错没错

3431
01:37:30,000 --> 01:37:33,000
就什么 spark 啊那些东西

3432
01:37:33,000 --> 01:37:34,000
anyway

3433
01:37:34,000 --> 01:37:36,000
说回这个就在这个字体

3434
01:37:36,000 --> 01:37:37,000
这个 utf 8 编码

3435
01:37:37,000 --> 01:37:40,000
utf 16 和 utf 32 编码也有这个同样的问题

3436
01:37:40,000 --> 01:37:45,000
就是说第一个字节到底代表是小头还是大头

3437
01:37:46,000 --> 01:37:47,000
所以他要做标注

3438
01:37:47,000 --> 01:37:48,000
然后对吧

3439
01:37:48,000 --> 01:37:48,000
对

3440
01:37:48,000 --> 01:37:51,000
所以为了就是他说他们就没有说

3441
01:37:51,000 --> 01:37:53,000
我们大家都规定一律系统

3442
01:37:53,000 --> 01:37:54,000
用像比如像网络上

3443
01:37:54,000 --> 01:37:55,000
大家都规定说

3444
01:37:55,000 --> 01:37:57,000
因为在所有的这个 fc 的规范里面

3445
01:37:57,000 --> 01:38:01,000
只要设计网络的都是用的那个大端设计嘛

3446
01:38:01,000 --> 01:38:03,000
但是在文本上面其实并没有这么一个统一

3447
01:38:03,000 --> 01:38:06,000
就是约定俗成的一个规定

3448
01:38:06,000 --> 01:38:07,000
所以就两种都存在

3449
01:38:07,000 --> 01:38:09,000
所以说存在说叫做 utf 16

3450
01:38:09,000 --> 01:38:12,000
就是 le 和 utf 16

3451
01:38:12,000 --> 01:38:13,000
b 1

3452
01:38:13,000 --> 01:38:18,000
b 1 对就两种不同的表达方这个存储方式

3453
01:38:18,000 --> 01:38:20,000
所以你们看到很多这个

3454
01:38:20,000 --> 01:38:22,000
windows 上面的那个

3455
01:38:24,000 --> 01:38:26,000
文本编辑期

3456
01:38:26,000 --> 01:38:26,000
text edit

3457
01:38:26,000 --> 01:38:27,000
计时版

3458
01:38:27,000 --> 01:38:28,000
计时版

3459
01:38:29,000 --> 01:38:31,000
对对对计时版

3460
01:38:31,000 --> 01:38:32,000
对他会给你这个选项

3461
01:38:32,000 --> 01:38:36,000
然后因为存在这个 b 1 和 le 的这个问题

3462
01:38:36,000 --> 01:38:38,000
就是很多人

3463
01:38:39,000 --> 01:38:42,000
就为了解决为了标志说这个文本到底是大端是小端的

3464
01:38:42,000 --> 01:38:46,000
我们有一个规定就是说用 utf 16 编码的文本

3465
01:38:46,000 --> 01:38:48,000
会在他的第一个字符

3466
01:38:49,000 --> 01:38:50,000
应该是

3467
01:38:50,000 --> 01:38:54,000
不填两个字符会放放放一个特殊的标志

3468
01:38:54,000 --> 01:38:55,000
叫做 bomb

3469
01:38:55,000 --> 01:38:56,000
byte order mark

3470
01:38:56,000 --> 01:38:58,000
对叫什么字序

3471
01:38:59,000 --> 01:39:01,000
字节序列标志

3472
01:39:01,000 --> 01:39:05,000
标志我这个序列是大是大头还是小头

3473
01:39:06,000 --> 01:39:06,000
对对对

3474
01:39:06,000 --> 01:39:10,000
然后这个 bomb 其实是一个两个字节的特殊

3475
01:39:10,000 --> 01:39:11,000
特殊

3476
01:39:11,000 --> 01:39:13,000
它是很取巧了

3477
01:39:13,000 --> 01:39:18,000
因为它其实是 unicode 的 fef 这个字

3478
01:39:18,000 --> 01:39:23,000
但是这个字叫 zero width no break space

3479
01:39:23,000 --> 01:39:28,000
就是零宽的一个不间断的不可分割的空白

3480
01:39:28,000 --> 01:39:30,000
所以它对

3481
01:39:30,000 --> 01:39:32,000
表面你看不出来有这个字

3482
01:39:33,000 --> 01:39:34,000
这是一个非常

3483
01:39:34,000 --> 01:39:36,000
这是一个很为把人空死来空

3484
01:39:36,000 --> 01:39:38,000
就是因为你看不了这个字

3485
01:39:38,000 --> 01:39:42,000
你必须用一个能够看见看不到的东西的编辑来看

3486
01:39:42,000 --> 01:39:44,000
你曾经看到的东西

3487
01:39:44,000 --> 01:39:46,000
当时想出这个招的也应该拖出这个啥了

3488
01:39:47,000 --> 01:39:48,000
对对

3489
01:39:48,000 --> 01:39:51,000
但是它当时就是因为这个字看不见

3490
01:39:51,000 --> 01:39:53,000
所以才能用来做这个 hack 嘛

3491
01:39:53,000 --> 01:39:53,000
对

3492
01:39:53,000 --> 01:39:56,000
它当时觉得自己这个 hack 还挺挺技巧的

3493
01:39:56,000 --> 01:39:56,000
对

3494
01:39:58,000 --> 01:39:58,000
对

3495
01:39:58,000 --> 01:40:00,000
但是现在的这个 unicode 的规范

3496
01:40:00,000 --> 01:40:06,000
它已经不推荐你再把这个 bomb 当成这个零宽的空格来用了

3497
01:40:06,000 --> 01:40:09,000
它只推荐你用来标记这个字节式

3498
01:40:10,000 --> 01:40:10,000
不

3499
01:40:10,000 --> 01:40:12,000
现在不是应该用 utf 吧

3500
01:40:12,000 --> 01:40:14,000
为什么还有人推荐用 utf

3501
01:40:14,000 --> 01:40:18,000
对于 unicode 的它这个规范书来说

3502
01:40:18,000 --> 01:40:20,000
它认为这个字节式的标记

3503
01:40:20,000 --> 01:40:23,000
即使是对于 utf 8 的编码也有一定的作用

3504
01:40:23,000 --> 01:40:27,000
因为它能明确的告诉你这个文本处理的软件

3505
01:40:27,000 --> 01:40:28,000
你这个就是用 unicode 的编码

3506
01:40:29,000 --> 01:40:29,000
好吧

3507
01:40:30,000 --> 01:40:32,000
我们不需要 utf 8 不需要这个东西啊

3508
01:40:34,000 --> 01:40:34,000
怎么说呢

3509
01:40:34,000 --> 01:40:38,000
就是 unicode 它是这样号称的了

3510
01:40:38,000 --> 01:40:43,000
就说即使你这个用 utf 8 这样没有端式的编码方式来编码

3511
01:40:43,000 --> 01:40:47,000
那么我如果看到了这个 bom 的这个标记位的话

3512
01:40:47,000 --> 01:40:53,000
那么我可以提前就知道这些文本一定是用 unicode 的某一种编码方案来编码

3513
01:40:54,000 --> 01:40:56,000
你就不用去考虑别的编码方案

3514
01:40:56,000 --> 01:40:56,000
对

3515
01:40:56,000 --> 01:40:59,000
就说那这里就会会设计一个问题

3516
01:40:59,000 --> 01:41:04,000
就是说在其他所有编码方案里面都没有出现过 bomb 这个东西是吧

3517
01:41:04,000 --> 01:41:05,000
就不会再开头

3518
01:41:06,000 --> 01:41:07,000
就如果或者说它做了一个约定

3519
01:41:07,000 --> 01:41:10,000
一旦再开头出现这个标记位的时候

3520
01:41:10,000 --> 01:41:12,000
我就认为它是那个 unicode 的编码

3521
01:41:12,000 --> 01:41:14,000
它能做出这个约定

3522
01:41:14,000 --> 01:41:18,000
它肯定是说统计过市面上所有线存用过的这个编码方案

3523
01:41:18,000 --> 01:41:21,000
不管是日本的韩国的还是达沃州的也好

3524
01:41:21,000 --> 01:41:24,000
它的都不会出现这么一个组合

3525
01:41:24,000 --> 01:41:27,000
不是的跟 fe ff 示威

3526
01:41:28,000 --> 01:41:29,000
对那应该是

3527
01:41:29,000 --> 01:41:34,000
因为这个字符本身作为一个非标记字符来用

3528
01:41:34,000 --> 01:41:35,000
它就是一个很罕见的

3529
01:41:35,000 --> 01:41:37,000
它是一个零宽的这样一个空格

3530
01:41:37,000 --> 01:41:40,000
如果你正确的使用这个空格的话

3531
01:41:40,000 --> 01:41:43,000
它是不会出现在这个一个字符串的开头的

3532
01:41:43,000 --> 01:41:45,000
因为它的语异决定了

3533
01:41:45,000 --> 01:41:48,000
它一定是出现在一些字符串的中间的

3534
01:41:48,000 --> 01:41:49,000
OK make sense

3535
01:41:50,000 --> 01:41:50,000
anyway

3536
01:41:50,000 --> 01:41:52,000
无论如何怎么说

3537
01:41:52,000 --> 01:41:53,000
这还是一个 bad idea

3538
01:41:55,000 --> 01:41:57,000
它的存在就是一个 bad idea

3539
01:41:57,000 --> 01:41:59,000
所以那个 windows 即是本的

3540
01:42:00,000 --> 01:42:02,000
你在保存这个文件的时候

3541
01:42:02,000 --> 01:42:04,000
它有个选项叫 unicode

3542
01:42:04,000 --> 01:42:07,000
然后又有一个选项叫 unicode big end

3543
01:42:07,000 --> 01:42:09,000
然后如果大家会想什么鬼

3544
01:42:09,000 --> 01:42:11,000
因为它是第一个选项

3545
01:42:11,000 --> 01:42:13,000
unicode 它就是默认的说

3546
01:42:13,000 --> 01:42:15,000
这个就是 utf 的 16

3547
01:42:15,000 --> 01:42:17,000
而且是默认是小头了

3548
01:42:17,000 --> 01:42:19,000
所以它还会有另外一个选项

3549
01:42:19,000 --> 01:42:20,000
是 unicode big end

3550
01:42:20,000 --> 01:42:22,000
这个用大头来保存

3551
01:42:23,000 --> 01:42:25,000
所以这也是一个坑对不对

3552
01:42:25,000 --> 01:42:26,000
因为你选 unicode

3553
01:42:26,000 --> 01:42:27,000
unicode 并不是一个编码

3554
01:42:27,000 --> 01:42:27,000
对

3555
01:42:27,000 --> 01:42:30,000
而且它有第三个选项是 utf 8

3556
01:42:30,000 --> 01:42:31,000
这其实也是

3557
01:42:31,000 --> 01:42:32,000
如果你要这样讲

3558
01:42:32,000 --> 01:42:34,000
这是 unicode 的一种编码方式而已

3559
01:42:35,000 --> 01:42:38,000
它把两个完全不在一个逻辑层面的概念

3560
01:42:38,000 --> 01:42:39,000
全部放在一堆

3561
01:42:39,000 --> 01:42:40,000
然后揉成了一堆

3562
01:42:41,000 --> 01:42:41,000
对

3563
01:42:41,000 --> 01:42:44,000
它这个菜单显示的很奇怪

3564
01:42:44,000 --> 01:42:45,000
就是它不应该这样表述

3565
01:42:45,000 --> 01:42:45,000
对

3566
01:42:45,000 --> 01:42:47,000
它的这个数以比较乱了

3567
01:42:47,000 --> 01:42:49,000
所以把那个什么做计事本的

3568
01:42:49,000 --> 01:42:51,000
那个产品经理托出去砍了

3569
01:42:51,000 --> 01:42:52,000
你今天要砍多少人呢

3570
01:42:56,000 --> 01:42:57,000
不合逻辑的通通砍死了

3571
01:42:59,000 --> 01:43:02,000
所以 Windows 计事本它保存了以后了

3572
01:43:02,000 --> 01:43:03,000
它这个 bomb

3573
01:43:03,000 --> 01:43:05,000
大家都会有是吧

3574
01:43:05,000 --> 01:43:06,000
写标记了以后

3575
01:43:07,000 --> 01:43:07,000
不会

3576
01:43:08,000 --> 01:43:09,000
只会用

3577
01:43:09,000 --> 01:43:12,000
就在一个正常符合逻辑的编辑机里面

3578
01:43:12,000 --> 01:43:15,000
它应该只会用 utf 16 或者 utf 32

3579
01:43:15,000 --> 01:43:17,000
等于 utf 32 好像是规定的

3580
01:43:17,000 --> 01:43:18,000
end 顺序

3581
01:43:19,000 --> 01:43:21,000
它也有两种顺序可以用的

3582
01:43:21,000 --> 01:43:22,000
就是说 16 和 32 的时候

3583
01:43:22,000 --> 01:43:28,000
所以这就是为什么 Windows 它会在那个 unicode 上面加一个

3584
01:43:28,000 --> 01:43:31,000
带不带 b 1 这个标记的区分了

3585
01:43:32,000 --> 01:43:32,000
不

3586
01:43:32,000 --> 01:43:35,000
但是它里面不能选 utf 32

3587
01:43:35,000 --> 01:43:36,000
对

3588
01:43:36,000 --> 01:43:37,000
它的产品逻辑是说

3589
01:43:37,000 --> 01:43:40,000
就是当我标明了这个 bomb 的时候

3590
01:43:40,000 --> 01:43:42,000
它有可能是用 utf 16 编码

3591
01:43:42,000 --> 01:43:43,000
有可能是用 32 编码的

3592
01:43:43,000 --> 01:43:46,000
所以它就用 unicode 来指代这两种

3593
01:43:48,000 --> 01:43:51,000
然后同时它认为 utf 80 不需要这个的

3594
01:43:51,000 --> 01:43:53,000
所以它说 utf 8 的时候

3595
01:43:53,000 --> 01:43:56,000
只用一个标准的编码方案来指代

3596
01:43:56,000 --> 01:43:58,000
它现在的这个文件状态

3597
01:43:59,000 --> 01:44:00,000
Jesus

3598
01:44:00,000 --> 01:44:03,000
Anyway 就是我们最终得出结论就是

3599
01:44:03,000 --> 01:44:04,000
千万不要用 Windows 计事本

3600
01:44:04,000 --> 01:44:07,000
如果你也要用轻以务必记的用 utf 8 编码

3601
01:44:07,000 --> 01:44:10,000
或者说从今天开始

3602
01:44:10,000 --> 01:44:13,000
所有的设计跟文字相关的跟编程相关的

3603
01:44:13,000 --> 01:44:15,000
任何是有文本的东西

3604
01:44:15,000 --> 01:44:17,000
一定要用 utf 8 来编

3605
01:44:17,000 --> 01:44:19,000
就来存就可以了

3606
01:44:19,000 --> 01:44:21,000
其他的都是都是邪教

3607
01:44:23,000 --> 01:44:27,000
WINDOWS 计事本会在 utf 8 的编码文件里面

3608
01:44:27,000 --> 01:44:28,000
还会加一串字

3609
01:44:28,000 --> 01:44:28,000
是

3610
01:44:28,000 --> 01:44:29,000
加一个字节串

3611
01:44:29,000 --> 01:44:30,000
没错

3612
01:44:30,000 --> 01:44:31,000
所以这是要

3613
01:44:31,000 --> 01:44:33,000
它为什么还要化蛇天族呢

3614
01:44:33,000 --> 01:44:34,000
就刚才你说那个问题

3615
01:44:34,000 --> 01:44:36,000
虽然是 utf 8

3616
01:44:36,000 --> 01:44:38,000
但是它没加了一个东西

3617
01:44:38,000 --> 01:44:39,000
它还是想加一些东西

3618
01:44:39,000 --> 01:44:40,000
它觉得保险

3619
01:44:42,000 --> 01:44:43,000
让人家知道

3620
01:44:43,000 --> 01:44:45,000
我这肯定是 UniCore

3621
01:44:45,000 --> 01:44:45,000
对吧

3622
01:44:45,000 --> 01:44:48,000
拖出去看了是很正常的处理方式

3623
01:44:48,000 --> 01:44:48,000
好吧

3624
01:44:53,000 --> 01:44:54,000
好

3625
01:44:54,000 --> 01:44:55,000
WINDOWS 的坑终于踩过了

3626
01:44:55,000 --> 01:44:57,000
现在我们来讲这个

3627
01:44:57,000 --> 01:44:58,000
utf 8 还没讲

3628
01:44:58,000 --> 01:45:00,000
utf 8 需要讲吗

3629
01:45:00,000 --> 01:45:02,000
UniCore 其实挺好解释的

3630
01:45:02,000 --> 01:45:02,000
可以讲

3631
01:45:03,000 --> 01:45:04,000
那个什么时候来吧

3632
01:45:04,000 --> 01:45:04,000
我好累

3633
01:45:05,000 --> 01:45:06,000
我说

3634
01:45:08,000 --> 01:45:11,000
为什么在这个时候叫老郭舍给我

3635
01:45:11,000 --> 01:45:13,000
因为我把该砍的人都砍掉了

3636
01:45:13,000 --> 01:45:16,000
剩下都是赶紧讲这个很完美的世界了

3637
01:45:19,000 --> 01:45:23,000
有些 utf 8 是一个目前看来比较完美的编码方案

3638
01:45:23,000 --> 01:45:25,000
The Holy Grail of encoding

3639
01:45:26,000 --> 01:45:28,000
可以说是可以说说

3640
01:45:28,000 --> 01:45:32,000
就是虽然它还是带有一些美国中心主义的色彩

3641
01:45:32,000 --> 01:45:32,000
但是

3642
01:45:33,000 --> 01:45:39,000
基本上已经在占地和效率方面达到那个均衡

3643
01:45:40,000 --> 01:45:42,000
utf 8 虽然叫 utf 8

3644
01:45:42,000 --> 01:45:47,000
但是它是一种所谓的 viral lens

3645
01:45:47,000 --> 01:45:49,000
就是可变长度的自负研码

3646
01:45:50,000 --> 01:45:52,000
就是说一个字或者说一个符号

3647
01:45:52,000 --> 01:45:55,000
比如说我们常见的这些 emoji 之类的

3648
01:45:56,000 --> 01:45:58,000
有可能用一个字

3649
01:45:58,000 --> 01:45:59,000
一个 byte

3650
01:45:59,000 --> 01:46:01,000
就是 8 个 bit

3651
01:46:01,000 --> 01:46:03,000
或者最多可以用到 6 个

3652
01:46:03,000 --> 01:46:04,000
目前是 6 个吧

3653
01:46:04,000 --> 01:46:06,000
6 个 byte

3654
01:46:06,000 --> 01:46:07,000
以前是 4 个

3655
01:46:09,000 --> 01:46:10,000
现在是 6 个

3656
01:46:10,000 --> 01:46:11,000
最多可以用到 6 个字

3657
01:46:11,000 --> 01:46:14,000
就是 6,8,48 个 bit

3658
01:46:14,000 --> 01:46:16,000
来代表一个符号

3659
01:46:17,000 --> 01:46:19,000
然后其中最原始的那 128 个

3660
01:46:19,000 --> 01:46:21,000
askit 的字符

3661
01:46:22,000 --> 01:46:24,000
这些就和 askit 一模一样

3662
01:46:24,000 --> 01:46:26,000
就是只需要一个字节

3663
01:46:26,000 --> 01:46:29,000
也就是说一个 utf 8 的文件

3664
01:46:29,000 --> 01:46:32,000
如果它只用 askit 字符来写的话

3665
01:46:32,000 --> 01:46:37,000
它和 askit 编码的文件是一模一样

3666
01:46:38,000 --> 01:46:41,000
然后带有附加符号的什么

3667
01:46:42,000 --> 01:46:43,000
比如说德语的语

3668
01:46:43,000 --> 01:46:45,000
然后什么阿拉伯语

3669
01:46:48,000 --> 01:46:50,000
俄罗斯用的那个叫做系列尔字母之类的

3670
01:46:50,000 --> 01:46:52,000
就从这些字母开始

3671
01:46:52,000 --> 01:46:54,000
就全都需要两个字变码

3672
01:46:55,000 --> 01:46:59,000
然后中文则需要 3 到 4 个字节

3673
01:46:59,000 --> 01:47:02,000
基本上大部分中文都是需要 3 到 4 个字节

3674
01:47:03,000 --> 01:47:04,000
然后

3675
01:47:06,000 --> 01:47:09,000
尤其是那个在 unicode 里面所谓

3676
01:47:09,000 --> 01:47:11,000
叫什么 BMP

3677
01:47:11,000 --> 01:47:12,000
BMP 的全程是什么

3678
01:47:12,000 --> 01:47:15,000
basic multilingual plain

3679
01:47:16,000 --> 01:47:18,000
基本多语原平面的那个 play

3680
01:47:18,000 --> 01:47:23,000
这个位面里面基本上全都在 3 个字节里面

3681
01:47:23,000 --> 01:47:27,000
所以汉字用它来编的话

3682
01:47:27,000 --> 01:47:29,000
基本上全都是 3 个字节

3683
01:47:31,000 --> 01:47:34,000
也就是说如果你用 unicode 8 来编一个之前的适用级别

3684
01:47:34,000 --> 01:47:38,000
二三一二编的文件的话

3685
01:47:38,000 --> 01:47:42,000
它的尺寸可能会扩大 50%

3686
01:47:45,000 --> 01:47:46,000
这可能是它的唯一一个

3687
01:47:46,000 --> 01:47:47,000
对中文使用者来说

3688
01:47:47,000 --> 01:47:50,000
但是它唯一一个比较不好的地方

3689
01:47:50,000 --> 01:47:54,000
但其实这个问题在现代都是用压缩技术的情况下

3690
01:47:54,000 --> 01:47:56,000
完全没有任何区别

3691
01:47:57,000 --> 01:48:01,000
对就是耗费的这些多余的空间期

3692
01:48:01,000 --> 01:48:06,000
基本上只在网络传输和词盘比较昂贵的时代

3693
01:48:06,000 --> 01:48:09,000
又是一个比较大的招待

3694
01:48:09,000 --> 01:48:11,000
但是在目前带宽这样的话

3695
01:48:11,000 --> 01:48:14,000
就大部分时候即便不压缩都还好

3696
01:48:14,000 --> 01:48:15,000
都还 OK 了

3697
01:48:15,000 --> 01:48:17,000
对你看一天我们本能指多少个

3698
01:48:17,000 --> 01:48:19,000
你随便下个图不就没了

3699
01:48:21,000 --> 01:48:22,000
对

3700
01:48:22,000 --> 01:48:27,000
然后 UTF 8 最开始好像是在 2000 年左右

3701
01:48:27,000 --> 01:48:29,000
开始定义了

3702
01:48:29,000 --> 01:48:32,000
所以其应用也基本上就是 2000 年之后出的

3703
01:48:32,000 --> 01:48:34,000
超过四个小菜

3704
01:48:34,000 --> 01:48:36,000
开始比较大规模使用了

3705
01:48:36,000 --> 01:48:38,000
应该不是 UTF 8 很早就用了

3706
01:48:40,000 --> 01:48:42,000
UTF 8 在

3707
01:48:43,000 --> 01:48:47,000
怎么说有一个官方的定义文件应该是在 2000 年

3708
01:48:47,000 --> 01:48:48,000
就是他第一版的那个

3709
01:48:48,000 --> 01:48:52,000
第一版的那个或说最新修订版本应该是 2000 年

3710
01:48:52,000 --> 01:48:55,000
然后他最开始的起源可能是在 96 年

3711
01:48:55,000 --> 01:48:56,000
反正早的 95 年

3712
01:48:56,000 --> 01:48:57,000
卖走

3713
01:48:58,000 --> 01:48:59,000
好吧

3714
01:48:59,000 --> 01:48:59,000
93 年

3715
01:48:59,000 --> 01:49:01,000
他不是他其实不是一个特别老

3716
01:49:01,000 --> 01:49:05,000
就特别古老的那个辩马

3717
01:49:05,000 --> 01:49:07,000
或说他是一个相对来说比较新的辩马

3718
01:49:07,000 --> 01:49:08,000
用方式

3719
01:49:08,000 --> 01:49:13,000
然后目前来讲应用还不是特别的广泛

3720
01:49:13,000 --> 01:49:17,000
但是我们所希望达到理想国的状态

3721
01:49:17,000 --> 01:49:20,000
就是全世界就只用 UTF 8 这样一种辩

3722
01:49:21,000 --> 01:49:23,000
刚才说了文字文字

3723
01:49:23,000 --> 01:49:24,000
内部是不是用 UTF 8 的

3724
01:49:24,000 --> 01:49:26,000
是用那个没有系统

3725
01:49:26,000 --> 01:49:27,000
内部会用 UTF 8

3726
01:49:27,000 --> 01:49:28,000
因为它是变长的

3727
01:49:28,000 --> 01:49:30,000
变长是很不利于处理的

3728
01:49:30,000 --> 01:49:31,000
啊

3729
01:49:31,000 --> 01:49:32,000
对

3730
01:49:32,000 --> 01:49:36,000
所以其实 UTF 8 他的最大优势是在于这个不同的

3731
01:49:36,000 --> 01:49:38,000
就是什么跨平台的

3732
01:49:38,000 --> 01:49:40,000
或者说可交换的这样一个场景

3733
01:49:40,000 --> 01:49:43,000
就我们说的 UTF 8 或者 UTF 16 的时候

3734
01:49:43,000 --> 01:49:45,000
其实在现实中

3735
01:49:46,000 --> 01:49:47,000
强调都是兼容性

3736
01:49:47,000 --> 01:49:49,000
都是在他存到磁盘上

3737
01:49:49,000 --> 01:49:51,000
就就蓄力化之后的一个结果了

3738
01:49:51,000 --> 01:49:52,000
嗯

3739
01:49:54,000 --> 01:49:55,000
互联网工程工作小组要求

3740
01:49:55,000 --> 01:49:59,000
所有的互联网协议都必须支持 UTF 8

3741
01:49:59,000 --> 01:50:02,000
就唯一的这个全球认可的一个标准

3742
01:50:04,000 --> 01:50:06,000
然后互联网邮件联盟是建议

3743
01:50:06,000 --> 01:50:09,000
所有的电子邮件的软件都支撑 UTF 8

3744
01:50:10,000 --> 01:50:11,000
是

3745
01:50:11,000 --> 01:50:11,000
对

3746
01:50:12,000 --> 01:50:14,000
邮件的话还很复杂

3747
01:50:15,000 --> 01:50:15,000
对

3748
01:50:15,000 --> 01:50:16,000
哎

3749
01:50:16,000 --> 01:50:17,000
呃

3750
01:50:17,000 --> 01:50:20,000
然后 UTF 8 的编码方式其实也比较好理解

3751
01:50:20,000 --> 01:50:22,000
因为 8 比特那个

3752
01:50:22,000 --> 01:50:23,000
第一个位如果是 0 的话

3753
01:50:23,000 --> 01:50:26,000
那他就是肯定是阿斯奇的那个编码

3754
01:50:26,000 --> 01:50:29,000
然后如果你怎么辨认说接下来两个比特是一个

3755
01:50:29,000 --> 01:50:30,000
双比特的

3756
01:50:31,000 --> 01:50:32,000
UTF 8 的字符呢

3757
01:50:32,000 --> 01:50:34,000
就是看第一个比第一个 byte 的

3758
01:50:34,000 --> 01:50:35,000
sorry

3759
01:50:35,000 --> 01:50:37,000
我刚才应该说字节

3760
01:50:37,000 --> 01:50:38,000
就如果你怎么你怎样才能认识

3761
01:50:38,000 --> 01:50:44,000
辨认出接下来两个字节是一个双字节的 UTF 8 的编码呢

3762
01:50:44,000 --> 01:50:46,000
就是要看第一个字节的前两位

3763
01:50:46,000 --> 01:50:47,000
如果是 1

3764
01:50:47,000 --> 01:50:48,000
然后第三位是 0 的话

3765
01:50:48,000 --> 01:50:50,000
那就意味着这是一个啊

3766
01:50:50,000 --> 01:50:53,000
双字节的 UTF

3767
01:50:54,000 --> 01:50:55,000
码

3768
01:50:55,000 --> 01:50:56,000
如果有三个 1

3769
01:50:56,000 --> 01:50:57,000
然后一 0 的话

3770
01:50:57,000 --> 01:51:00,000
那就也就意味着他是一个三字节的 UTF 码

3771
01:51:00,000 --> 01:51:02,000
然后除了第一位之外

3772
01:51:02,000 --> 01:51:04,000
其他后面的几个字节

3773
01:51:04,000 --> 01:51:06,000
每个字节的前两位都是一 0

3774
01:51:06,000 --> 01:51:07,000
呃

3775
01:51:07,000 --> 01:51:08,000
对

3776
01:51:08,000 --> 01:51:09,000
然后这样

3777
01:51:09,000 --> 01:51:14,000
到如果你有六个字节来表示一个

3778
01:51:14,000 --> 01:51:15,000
码位的话呢

3779
01:51:15,000 --> 01:51:18,000
他就是一一一一六一

3780
01:51:18,000 --> 01:51:19,000
然后接个 0

3781
01:51:19,000 --> 01:51:19,000
对

3782
01:51:19,000 --> 01:51:21,000
然后啊

3783
01:51:21,000 --> 01:51:25,000
就可以把接下来的剩下的五个 byte 也都一 0

3784
01:51:25,000 --> 01:51:26,000
开拓跟在他后面

3785
01:51:26,000 --> 01:51:27,000
然后来代表一个字

3786
01:51:30,000 --> 01:51:31,000
差不多就这样了

3787
01:51:31,000 --> 01:51:32,000
还有什么要介绍

3788
01:51:32,000 --> 01:51:37,000
所以就是称死 UTF 816 个字节为一个东西

3789
01:51:37,000 --> 01:51:39,000
为一个 code

3790
01:51:40,000 --> 01:51:40,000
对

3791
01:51:40,000 --> 01:51:41,000
OK

3792
01:51:43,000 --> 01:51:44,000
这个倒不一定

3793
01:51:44,000 --> 01:51:45,000
他这个倒不一定

3794
01:51:45,000 --> 01:51:46,000
不能再扩了吗

3795
01:51:46,000 --> 01:51:47,000
呃

3796
01:51:47,000 --> 01:51:49,000
就说你可能不能用这一套

3797
01:51:49,000 --> 01:51:51,000
第一位完全是 7 个 1 一个 0

3798
01:51:51,000 --> 01:51:52,000
是吧

3799
01:51:52,000 --> 01:51:53,000
就说你不

3800
01:51:53,000 --> 01:51:58,000
你可能不能在这种方式上继续扩展他的这个字符的

3801
01:51:58,000 --> 01:51:59,000
这个量了吧

3802
01:51:59,000 --> 01:52:02,000
但是你还可以用一些别的方式

3803
01:52:02,000 --> 01:52:07,000
比如你可以通过中间串一个什么特殊的字符来告诉他

3804
01:52:07,000 --> 01:52:09,000
他他这样设计是有有目的的

3805
01:52:09,000 --> 01:52:09,000
就是说这么设计

3806
01:52:09,000 --> 01:52:11,000
他最后有一个有一个很重要的特性

3807
01:52:11,000 --> 01:52:12,000
要要要解释一下

3808
01:52:12,000 --> 01:52:14,000
不然的话就很容易乱掉

3809
01:52:16,000 --> 01:52:16,000
嗯哼

3810
01:52:16,000 --> 01:52:21,000
就说因为便便长和就是为什么刚才讲那个超系统内部执行的时候

3811
01:52:21,000 --> 01:52:22,000
都一定是用定长的

3812
01:52:22,000 --> 01:52:25,000
定长他都如果做那个叫什么跳转啊

3813
01:52:25,000 --> 01:52:27,000
计算 offset 就是那个位移的话

3814
01:52:27,000 --> 01:52:28,000
他是很简单的

3815
01:52:28,000 --> 01:52:29,000
他可以乘数的

3816
01:52:29,000 --> 01:52:30,000
对

3817
01:52:30,000 --> 01:52:30,000
没错

3818
01:52:30,000 --> 01:52:32,000
但是变长的话就不具备这个问题了

3819
01:52:32,000 --> 01:52:34,000
变长的话要要避免的一个很大的问题

3820
01:52:34,000 --> 01:52:37,000
就是说在一个相当长的文本里面

3821
01:52:37,000 --> 01:52:40,000
假设部分字符出现问题

3822
01:52:40,000 --> 01:52:43,000
可能是因为磁盘存储的戒指的损坏

3823
01:52:43,000 --> 01:52:45,000
或者是网络传输的问题

3824
01:52:45,000 --> 01:52:47,000
导致中间部分那个字节发生变化的时候

3825
01:52:47,000 --> 01:52:49,000
我们能够很快的变人出来那部分

3826
01:52:49,000 --> 01:52:51,000
哪部分是坏的

3827
01:52:51,000 --> 01:52:58,000
并且在那个坏的那个字节或者那几个字节之后立即重新的找回你的那个起点

3828
01:52:58,000 --> 01:52:59,000
就是你怎么因为是变强

3829
01:52:59,000 --> 01:53:03,000
你不知道接下来的那个那个那个字符的起点在哪里吗

3830
01:53:04,000 --> 01:53:07,000
就中间几个码坏掉后面的人

3831
01:53:07,000 --> 01:53:07,000
对

3832
01:53:07,000 --> 01:53:08,000
这个是一种很危险的

3833
01:53:08,000 --> 01:53:11,000
就是很很不健壮的一种一种设计

3834
01:53:11,000 --> 01:53:15,000
所以但是 utf 8 这种设计它可以导致说

3835
01:53:15,000 --> 01:53:18,000
它就你能够很快的叫做 self synchronizing

3836
01:53:18,000 --> 01:53:20,000
就是可以自己同步

3837
01:53:20,000 --> 01:53:22,000
因为你只要看每一个字节

3838
01:53:22,000 --> 01:53:25,000
因为你自身之手就是每个字节每个字节的这样去跳

3839
01:53:25,000 --> 01:53:27,000
你知道看每个字节的前两位

3840
01:53:27,000 --> 01:53:29,000
你就能够知道他这个是不是某一个

3841
01:53:29,000 --> 01:53:34,000
诶这个一个这个字字就 character 的起点

3842
01:53:34,000 --> 01:53:36,000
因为如果他是一零开头的话

3843
01:53:36,000 --> 01:53:37,000
或者是零几开头的话

3844
01:53:37,000 --> 01:53:38,000
他肯定不是

3845
01:53:38,000 --> 01:53:39,000
他肯定肯定

3846
01:53:39,000 --> 01:53:40,000
比如他是第一位是零的话

3847
01:53:40,000 --> 01:53:41,000
他肯定是一个单一字节

3848
01:53:41,000 --> 01:53:43,000
他就是一个字符的起点

3849
01:53:43,000 --> 01:53:43,000
对吧

3850
01:53:43,000 --> 01:53:45,000
然后如果他是一零开头的话

3851
01:53:45,000 --> 01:53:45,000
他肯定不是

3852
01:53:45,000 --> 01:53:47,000
他是前面一个字符的一部分

3853
01:53:48,000 --> 01:53:48,000
对

3854
01:53:48,000 --> 01:53:50,000
所以他就可以跳舞曲

3855
01:53:50,000 --> 01:53:51,000
就可以直接 skip

3856
01:53:51,000 --> 01:53:55,000
直到你又发现一个第一位是零

3857
01:53:55,000 --> 01:53:58,000
或者或者是一一这种开头的

3858
01:53:58,000 --> 01:54:00,000
就根据那个前追那个表嘛

3859
01:54:00,000 --> 01:54:02,000
所以这个是一个很重要的特性

3860
01:54:02,000 --> 01:54:04,000
如果说一旦这个结构被破坏的话

3861
01:54:04,000 --> 01:54:06,000
这个 UTF 8 的见状性就不复存在

3862
01:54:07,000 --> 01:54:07,000
对

3863
01:54:07,000 --> 01:54:10,000
在编码方案的这个层面确实是这样的

3864
01:54:10,000 --> 01:54:11,000
我刚想说的意思就是说

3865
01:54:11,000 --> 01:54:14,000
其实我们可能不必担心

3866
01:54:14,000 --> 01:54:18,000
呃用 UTF 8 这种编码方案会导致有一天说

3867
01:54:18,000 --> 01:54:20,000
我们想用的字符数不够用

3868
01:54:20,000 --> 01:54:21,000
对

3869
01:54:21,000 --> 01:54:21,000
对

3870
01:54:21,000 --> 01:54:23,000
他其实可以可以添加别的方案进行

3871
01:54:23,000 --> 01:54:25,000
将这个范围扩了更多

3872
01:54:26,000 --> 01:54:27,000
就反正起码到目前为止

3873
01:54:27,000 --> 01:54:31,000
六个字节的这个非标的也已经就足够用了

3874
01:54:32,000 --> 01:54:32,000
对的

3875
01:54:33,000 --> 01:54:35,000
希望我们不要再往这个 UniCode 垃圾堆里面再飞

3876
01:54:35,000 --> 01:54:36,000
东西

3877
01:54:38,000 --> 01:54:41,000
可是 UniCode 这个垃圾堆还一直都在

3878
01:54:41,000 --> 01:54:43,000
而且他现在有一个非常重大的缺口

3879
01:54:43,000 --> 01:54:47,000
理论上可以无限 C 就是那个 M 1 字的这个缺口

3880
01:54:49,000 --> 01:54:50,000
要紧文字

3881
01:54:50,000 --> 01:54:53,000
那个那个坑我们是这次讲还是下次讲

3882
01:54:53,000 --> 01:54:56,000
我们可以专门找一次专门来讲

3883
01:54:56,000 --> 01:54:58,000
因为只可以专门找一些他讲各种各样有趣的英文

3884
01:54:58,000 --> 01:54:59,000
OK 就说

3885
01:54:59,000 --> 01:55:03,000
以及有一些根本就不知道为什么要放在那里面

3886
01:55:03,000 --> 01:55:08,000
这个是因为这里面有一个一个悬浮在半空中的男人

3887
01:55:08,000 --> 01:55:08,000
对吧

3888
01:55:08,000 --> 01:55:10,000
这个 M 1 字到底有什么意义

3889
01:55:13,000 --> 01:55:16,000
但就是说这个是一个就是象形文字始终是要解决的问题

3890
01:55:16,000 --> 01:55:17,000
就是就是

3891
01:55:20,000 --> 01:55:22,000
它是不是一个封闭的集合

3892
01:55:22,000 --> 01:55:23,000
对对对

3893
01:55:23,000 --> 01:55:24,000
你们就很麻烦

3894
01:55:24,000 --> 01:55:25,000
你说不清楚

3895
01:55:25,000 --> 01:55:25,000
比如说

3896
01:55:25,000 --> 01:55:27,000
你刚才吴涛问的问题

3897
01:55:27,000 --> 01:55:28,000
一个漂浮在半空中的男人

3898
01:55:28,000 --> 01:55:30,000
表达了这么一个象形文字的萤帽转

3899
01:55:30,000 --> 01:55:34,000
他和我们考古挖出一个固址

3900
01:55:34,000 --> 01:55:35,000
这里面写了一个通假字有什么区别

3901
01:55:35,000 --> 01:55:37,000
通假字至少有意义

3902
01:55:37,000 --> 01:55:38,000
这个他写错了

3903
01:55:38,000 --> 01:55:40,000
为什么他写错就有意义

3904
01:55:40,000 --> 01:55:41,000
我们要表达

3905
01:55:41,000 --> 01:55:44,000
现代人要表达一个东西就没有意义呢

3906
01:55:44,000 --> 01:55:47,000
就我觉得这种这种就是你是一个政治人士

3907
01:55:47,000 --> 01:55:49,000
对你去考他的这个 scientific

3908
01:55:49,000 --> 01:55:51,000
通假字你至少知道他有意义

3909
01:55:51,000 --> 01:55:54,000
但是这个至少你可以推测出来

3910
01:55:54,000 --> 01:55:55,000
他代表意义是什么

3911
01:55:55,000 --> 01:55:58,000
可是这个悬浮在空中的男人这个意义是什么

3912
01:55:58,000 --> 01:55:59,000
都很多人不知道的

3913
01:56:01,000 --> 01:56:02,000
就我也不知道

3914
01:56:02,000 --> 01:56:03,000
你再解释一下

3915
01:56:03,000 --> 01:56:03,000
不是

3916
01:56:03,000 --> 01:56:08,000
这个意义这个符号最开始是出现在

3917
01:56:09,000 --> 01:56:10,000
微软的 vaptings 里面

3918
01:56:12,000 --> 01:56:16,000
然后是一个马位多少啊

3919
01:56:16,000 --> 01:56:18,000
我稍等我找找

3920
01:56:20,000 --> 01:56:21,000
你怎么搜

3921
01:56:21,000 --> 01:56:22,000
谁在半个小时的男人

3922
01:56:23,000 --> 01:56:25,000
Leviating man emoji

3923
01:56:26,000 --> 01:56:28,000
man in business suite leviating

3924
01:56:29,000 --> 01:56:31,000
就搜这个

3925
01:56:31,000 --> 01:56:35,000
U 1 加 5 U 加 1 F 574

3926
01:56:36,000 --> 01:56:38,000
浮在地面上的四庄男

3927
01:56:40,000 --> 01:56:41,000
对

3928
01:56:41,000 --> 01:56:42,000
这是什么鬼

3929
01:56:42,000 --> 01:56:46,000
这个这个 eboard 最开始出现在 webding 里面

3930
01:56:46,000 --> 01:56:49,000
然后他的意义是一个感叹号

3931
01:56:50,000 --> 01:56:54,000
然后这个感叹号的风格就像一个 rudeboy logo

3932
01:56:54,000 --> 01:56:55,000
然后是在

3933
01:56:58,000 --> 01:57:00,000
是一个叫做 the specials 的乐队

3934
01:57:00,000 --> 01:57:02,000
所出出的一张照片里面

3935
01:57:03,000 --> 01:57:05,000
是念 emojia 还是 emojie

3936
01:57:05,000 --> 01:57:06,000
emojie

3937
01:57:07,000 --> 01:57:10,000
你要是按日本念读音的话就是 emojie

3938
01:57:10,000 --> 01:57:11,000
emojie

3939
01:57:11,000 --> 01:57:12,000
对 emojie

3940
01:57:12,000 --> 01:57:13,000
OK

3941
01:57:13,000 --> 01:57:15,000
这么说他确实有点像一个感叹号

3942
01:57:15,000 --> 01:57:19,000
因为就是他的那个悬浮在空中地下有个投影

3943
01:57:19,000 --> 01:57:20,000
正好是感叹号的那一点

3944
01:57:25,000 --> 01:57:26,000
嗯

3945
01:57:26,000 --> 01:57:27,000
好吧

3946
01:57:27,000 --> 01:57:27,000
什么鬼

3947
01:57:27,000 --> 01:57:28,000
对

3948
01:57:28,000 --> 01:57:32,000
这个玩意在 unicode 7.0 的时候进入了 unicode

3949
01:57:33,000 --> 01:57:36,000
所以我们在 emojie 这个

3950
01:57:36,000 --> 01:57:39,000
这个争论里面是持这个保守派的

3951
01:57:39,000 --> 01:57:40,000
什么叫保守派

3952
01:57:40,000 --> 01:57:42,000
左派和右派的区别是什么

3953
01:57:42,000 --> 01:57:43,000
右派是应该

3954
01:57:43,000 --> 01:57:45,000
就是 unicode 那个工作组里面

3955
01:57:45,000 --> 01:57:48,000
就是说我们不要加这么多半期八糟的东西进来

3956
01:57:48,000 --> 01:57:48,000
对

3957
01:57:48,000 --> 01:57:51,000
这个是我觉得界线是很难界定的

3958
01:57:51,000 --> 01:57:53,000
你怎么区分什么叫乱七八糟的

3959
01:57:53,000 --> 01:57:54,000
不就是

3960
01:57:54,000 --> 01:57:58,000
我就觉得这个就是像型文字不封闭的导致的一个必然结果

3961
01:57:58,000 --> 01:57:58,000
对

3962
01:57:58,000 --> 01:58:00,000
但主要就是他不是一个封闭的集合

3963
01:58:00,000 --> 01:58:02,000
退于万物

3964
01:58:02,000 --> 01:58:02,000
对啊

3965
01:58:02,000 --> 01:58:05,000
这个边界随时都在扩的就很麻烦

3966
01:58:05,000 --> 01:58:05,000
对

3967
01:58:05,000 --> 01:58:08,000
所以这个东西是一个深坑没有没有办法

3968
01:58:08,000 --> 01:58:13,000
就是如果说这个 unicode 里面那帮人觉得不应该加 emojie 进来的话

3969
01:58:13,000 --> 01:58:16,000
那也不要从固执着里面找的那个生皮字进来了

3970
01:58:16,000 --> 01:58:16,000
是一个原理

3971
01:58:16,000 --> 01:58:18,000
嗯

3972
01:58:18,000 --> 01:58:18,000
对

3973
01:58:18,000 --> 01:58:22,000
事实上将这个 emojie 当成一种自符

3974
01:58:22,000 --> 01:58:26,000
这个观念本身就是一个比较激进的观念

3975
01:58:26,000 --> 01:58:28,000
它本身不是一种文字

3976
01:58:28,000 --> 01:58:32,000
但是从技术上的实现来讲的话倒是 ok 的

3977
01:58:32,000 --> 01:58:34,000
因为你从 fault 的技术上实现来讲

3978
01:58:34,000 --> 01:58:35,000
我就是一个码

3979
01:58:35,000 --> 01:58:38,000
然后显示一个 grif 嘛

3980
01:58:38,000 --> 01:58:40,000
grif 其实就是一个图案嘛

3981
01:58:40,000 --> 01:58:41,000
对吧

3982
01:58:41,000 --> 01:58:42,000
从技术显示来讲

3983
01:58:42,000 --> 01:58:43,000
这很正常的

3984
01:58:43,000 --> 01:58:46,000
它是一个典型由技术来推动标准

3985
01:58:46,000 --> 01:58:49,000
就由技术实作来推动这个标准

3986
01:58:49,000 --> 01:58:51,000
改变了这样一个问题

3987
01:58:51,000 --> 01:58:52,000
好吧

3988
01:58:52,000 --> 01:58:53,000
emojie 咱们还是下次来说

3989
01:58:53,000 --> 01:58:54,000
对对对

3990
01:58:54,000 --> 01:58:54,000
对

3991
01:58:54,000 --> 01:58:58,000
而且我觉得就是它还推出来一个扩展

3992
01:58:58,000 --> 01:59:02,000
就是一个三维的符号应不应该算作一个 emojie

3993
01:59:06,000 --> 01:59:09,000
一个三维的符号是什么意思

3994
01:59:09,000 --> 01:59:13,000
就是同样一个有一个平面的脸和一个立体的脸

3995
01:59:13,000 --> 01:59:14,000
算一个符号吗

3996
01:59:14,000 --> 01:59:16,000
啊啊啊

3997
01:59:16,000 --> 01:59:18,000
这就刚才我们说的那个互的三种写法

3998
01:59:18,000 --> 01:59:20,000
它算一个还是算三个呢

3999
01:59:21,000 --> 01:59:21,000
对

4000
01:59:21,000 --> 01:59:22,000
没错

4001
01:59:22,000 --> 01:59:23,000
对

4002
01:59:23,000 --> 01:59:24,000
就很难去划分这种东西

4003
01:59:24,000 --> 01:59:29,000
所以我觉得不把那个到底是表音表意还是表型

4004
01:59:29,000 --> 01:59:29,000
这个东西定下来

4005
01:59:29,000 --> 01:59:31,000
这个东西永远都是有争议的

4006
01:59:31,000 --> 01:59:32,000
嗯

4007
01:59:34,000 --> 01:59:34,000
好吧

4008
01:59:34,000 --> 01:59:35,000
那那要不刷个车

4009
01:59:35,000 --> 01:59:37,000
然后我们下次接着讲

4010
01:59:37,000 --> 01:59:37,000
ok

4011
01:59:37,000 --> 01:59:41,000
所以我们今天究竟有没有讲到乱码这些事情

4012
01:59:41,000 --> 01:59:43,000
我大概还是讲了

4013
01:59:43,000 --> 01:59:44,000
大概还是讲到了

4014
01:59:44,000 --> 01:59:44,000
对

4015
01:59:45,000 --> 01:59:45,000
嗯

4016
01:59:46,000 --> 01:59:48,000
就说我们讲到了

4017
01:59:48,000 --> 01:59:51,000
这个一些编码的基本的原理

4018
01:59:51,000 --> 01:59:52,000
然后梳理了一下

4019
01:59:52,000 --> 01:59:55,000
这个自负及规范的这个发展的历史

4020
01:59:55,000 --> 01:59:56,000
那么在这两个环节中

4021
01:59:56,000 --> 01:59:58,000
如果有一个环节出错了

4022
01:59:58,000 --> 02:00:00,000
其实首先就会导致乱码

4023
02:00:00,000 --> 02:00:03,000
然后最后我们还讲了这个字节端式的问题

4024
02:00:03,000 --> 02:00:09,000
它也是导致乱码的一个实践中经常遇到了因素的

4025
02:00:09,000 --> 02:00:10,000
嗯

4026
02:00:12,000 --> 02:00:13,000
其实大家要珍惜

4027
02:00:13,000 --> 02:00:16,000
每天你在网页上看出来的这些字符

4028
02:00:16,000 --> 02:00:21,000
因为它突破千千万件被正确的编译出来

4029
02:00:21,000 --> 02:00:22,000
编码编出来

4030
02:00:22,000 --> 02:00:23,000
然后传说过来

4031
02:00:23,000 --> 02:00:25,000
然后显示在你的浏览器里面

4032
02:00:25,000 --> 02:00:26,000
对

4033
02:00:26,000 --> 02:00:29,000
它已经经过了各层的处理

4034
02:00:29,000 --> 02:00:30,000
不过实际上

4035
02:00:30,000 --> 02:00:31,000
那个我们应该知道

4036
02:00:31,000 --> 02:00:35,000
就是说像 html 的它的这个解释规则里

4037
02:00:35,000 --> 02:00:37,000
它的这个建装性还是比较强的

4038
02:00:37,000 --> 02:00:39,000
它应该能容易定的编码错误

4039
02:00:39,000 --> 02:00:40,000
对了

4040
02:00:41,000 --> 02:00:42,000
嗯

4041
02:00:42,000 --> 02:00:42,000
是的

4042
02:00:43,000 --> 02:00:44,000
那当然了

4043
02:00:44,000 --> 02:00:44,000
要不然的话

4044
02:00:44,000 --> 02:00:47,000
你想在这传说过程中又是吊包

4045
02:00:47,000 --> 02:00:48,000
又是乱

4046
02:00:48,000 --> 02:00:49,000
又顺序又会乱的

4047
02:00:49,000 --> 02:00:50,000
对吧

4048
02:00:50,000 --> 02:00:51,000
各种各样的事情

4049
02:00:51,000 --> 02:00:51,000
我指的是

4050
02:00:51,000 --> 02:00:53,000
比如说那个我这个浏览器

4051
02:00:53,000 --> 02:00:56,000
把它误认成另一种与它不符合的编码

4052
02:00:56,000 --> 02:00:58,000
其实在不少情况下

4053
02:00:58,000 --> 02:01:01,000
就因为大家都对 ASCII 的兼容比较好

4054
02:01:01,000 --> 02:01:07,000
那么 html 用到一些关键的这个标记符号都是 ASCII 里面

4055
02:01:07,000 --> 02:01:10,000
所以它其实还是可以正确的渲染一部分

4056
02:01:10,000 --> 02:01:12,000
嗯

4057
02:01:12,000 --> 02:01:14,000
就至少它的那个 mark 是对的

4058
02:01:17,000 --> 02:01:17,000
好吧

4059
02:01:17,000 --> 02:01:19,000
那今天时间有限

4060
02:01:19,000 --> 02:01:21,000
那就暂时先杀到这边

4061
02:01:21,000 --> 02:01:23,000
我们下次再接着讲

4062
02:01:26,000 --> 02:01:27,000
感谢大家的收听

4063
02:01:27,000 --> 02:01:31,000
那大家可以从各种社交网络上关注我们

4064
02:01:31,000 --> 02:01:32,000
那自产自畅呢

4065
02:01:32,000 --> 02:01:37,000
在新浪微博微信公众号以及推特的账号的名字都是 the type

4066
02:01:37,000 --> 02:01:39,000
那 thetype

4067
02:01:39,000 --> 02:01:43,000
在 facebook 上面的可以通过 type is beautiful 找到我们

4068
02:01:43,000 --> 02:01:46,000
那也欢迎大家用邮件的方式来给我们写反馈

4069
02:01:46,000 --> 02:01:49,000
我们的邮箱是 podcstattype.com

4070
02:01:49,000 --> 02:01:52,000
podcst

4071
02:01:52,000 --> 02:01:57,000
the type 的评写是 the type.com

4072
02:01:57,000 --> 02:01:58,000
欢迎大家给我们签款

4073
02:01:58,000 --> 02:02:02,000
让我们努力把节目做成最好的全球最好的字体播客

4074
02:02:04,000 --> 02:02:09,000
感谢收听 ipnpodcast 我们之下的 it 技术主题娱乐节目内吼恐慌

4075
02:02:09,000 --> 02:02:11,000
我们号称 hardcore 但是也没有关货

4076
02:02:11,000 --> 02:02:13,000
想听人听不想听人就别听了

4077
02:02:13,000 --> 02:02:17,000
你可以为本节目捐款地址是 kernopanic.fm.slaj.donate

4078
02:02:17,000 --> 02:02:19,000
捐款机跟随意只要是 8 的正中数倍就可以

4079
02:02:19,000 --> 02:02:20,000
捐款不会给你带什么

4080
02:02:20,000 --> 02:02:22,000
不捐也不会让你失去什么

4081
02:02:22,000 --> 02:02:24,000
我们的口号是 no hard feelings

4082
02:02:24,000 --> 02:02:29,000
如果你有任何反馈可以发邮件到 kernopanic.ipn.li

4083
02:02:29,000 --> 02:02:30,000
同时也欢迎你收听

4084
02:02:30,000 --> 02:02:34,000
riot 主持的风头圈以及 ipn 其下的其他几档节目

4085
02:02:34,000 --> 02:02:36,000
未知到太医来的流行通信

4086
02:02:36,000 --> 02:02:40,000
hi story 印象无私缘博物制悬美必下关

4087
02:02:40,000 --> 02:02:41,000
一天世界持上怪物

4088
02:02:43,000 --> 02:02:44,000
我们下期节目再会

4089
02:02:45,000 --> 02:02:45,000
拜拜

