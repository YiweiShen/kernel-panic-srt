1
00:00:00,000 --> 00:00:02,000
321 开始

2
00:00:02,000 --> 00:00:06,000
我们去说要做一下开场还是要怎么先介绍一下

3
00:00:06,000 --> 00:00:07,000
我有一个梗

4
00:00:07,000 --> 00:00:14,000
我想想 北京时间百分之 1.0 百分之 1.0 M 分

5
00:00:14,000 --> 00:00:16,000
您现在收听到的是内核控光

6
00:00:16,000 --> 00:00:18,000
对 梗是什么

7
00:00:18,000 --> 00:00:23,000
就因为你看一般做广播的时候

8
00:00:23,000 --> 00:00:27,000
人们会说北京时间 15 点 46 分

9
00:00:27,000 --> 00:00:30,000
然后我说北京时间

10
00:00:30,000 --> 00:00:32,000
但是你会意识到这是一款 podcast

11
00:00:32,000 --> 00:00:36,000
你根本不知道我听中是在什么时候听这个 podcast

12
00:00:36,000 --> 00:00:37,000
所以我说北京时间

13
00:00:37,000 --> 00:00:41,000
然后愣一下说百分之 1.0 百分之 1.0 M 分

14
00:00:41,000 --> 00:00:43,000
所以这是一个 placeholder 对吧

15
00:00:43,000 --> 00:00:46,000
对 就是那个 date format

16
00:00:46,000 --> 00:00:48,000
百分之 1.0 H 百分之 1.0

17
00:00:48,000 --> 00:00:50,000
百分之 1.0 M

18
00:00:50,000 --> 00:00:51,000
这是什么

19
00:00:51,000 --> 00:00:55,000
Strain time format

20
00:00:56,000 --> 00:01:00,000
大家好 这里是我们新开的一档播客节目

21
00:01:00,000 --> 00:01:02,000
叫做内核控光

22
00:01:02,000 --> 00:01:05,000
Colonal panic

23
00:01:05,000 --> 00:01:11,000
然后这里的嘉宾就是我 Rail 和以及 Wutow

24
00:01:11,000 --> 00:01:12,000
大家可能听之前听 RT 功能的时候

25
00:01:12,000 --> 00:01:15,000
他已经来过几次了

26
00:01:15,000 --> 00:01:17,000
对 其实咱们两个不能算嘉宾吗

27
00:01:17,000 --> 00:01:18,000
咱们两个人算主播对吧

28
00:01:18,000 --> 00:01:20,000
理论上

29
00:01:20,000 --> 00:01:25,000
我们假如 podcast 可以积累到足够多的听众的话

30
00:01:25,000 --> 00:01:26,000
我们应该一直做下去

31
00:01:26,000 --> 00:01:27,000
所以我们都是 host

32
00:01:27,000 --> 00:01:28,000
对

33
00:01:28,000 --> 00:01:31,000
先我们先解释一下

34
00:01:31,000 --> 00:01:34,000
为什么要做这么一档节目

35
00:01:34,000 --> 00:01:35,000
对 我听说

36
00:01:35,000 --> 00:01:39,000
就是我听 Lowns 说是有部分听众认为

37
00:01:39,000 --> 00:01:40,000
ID 功能不够 Hotcore

38
00:01:40,000 --> 00:01:43,000
对 因为失货

39
00:01:43,000 --> 00:01:44,000
不 水货

40
00:01:44,000 --> 00:01:46,000
失货太多

41
00:01:46,000 --> 00:01:48,000
干货比较少

42
00:01:48,000 --> 00:01:50,000
然后大家可能会比较抱怨

43
00:01:50,000 --> 00:01:52,000
但是其实我想了一下

44
00:01:52,000 --> 00:01:54,000
你说就我们两个聊

45
00:01:54,000 --> 00:01:56,000
就纯聊干货估计也不现实

46
00:01:56,000 --> 00:01:58,000
也会夹杂很多失货

47
00:01:58,000 --> 00:02:01,000
丝货以及水货在里面我觉得

48
00:02:01,000 --> 00:02:03,000
而且我觉得就是

49
00:02:03,000 --> 00:02:08,000
三号在中文 IT 圈里面干货实在是太多了

50
00:02:08,000 --> 00:02:10,000
你有这感觉吗

51
00:02:10,000 --> 00:02:11,000
有 挺有这样的感觉

52
00:02:11,000 --> 00:02:18,000
就是我总觉得缺一些比较清谈的部分

53
00:02:18,000 --> 00:02:21,000
当然有可能是跟我们读的

54
00:02:21,000 --> 00:02:24,000
我们是跟我跟每个人日常剧读有关

55
00:02:24,000 --> 00:02:26,000
也许我总是读那些比较干的部分

56
00:02:26,000 --> 00:02:28,000
我觉得听听你们的失货挺好的

57
00:02:28,000 --> 00:02:31,000
虽然只是我对比如说通勤的路上听

58
00:02:31,000 --> 00:02:34,000
但听听失货挺好的

59
00:02:34,000 --> 00:02:35,000
OK 所以有一个问题就是

60
00:02:35,000 --> 00:02:38,000
我们这个节目和 IT 功能有什么区别

61
00:02:38,000 --> 00:02:41,000
刚才讲了都是很多水分在里面

62
00:02:41,000 --> 00:02:44,000
可能我们这个节目的定位和选题上

63
00:02:44,000 --> 00:02:47,000
会更加偏向于

64
00:02:47,000 --> 00:02:50,000
比如说像城市园 开发酒 这类的东西

65
00:02:50,000 --> 00:02:55,000
因为我和 Wu Tao 都是做相关的行业的

66
00:02:56,000 --> 00:02:58,000
对 我觉得可能比较重要的区别

67
00:02:58,000 --> 00:03:00,000
就是在 IT 功能里面

68
00:03:00,000 --> 00:03:03,000
你们会假设听众听不懂一些东西

69
00:03:03,000 --> 00:03:07,000
而我们则假设听众是能听懂大部分内容的

70
00:03:07,000 --> 00:03:09,000
我们不会去解释一些名词

71
00:03:09,000 --> 00:03:12,000
或者是解释一些术语

72
00:03:12,000 --> 00:03:13,000
或者是做背景介绍之类的

73
00:03:13,000 --> 00:03:14,000
我们就直接开始讲

74
00:03:14,000 --> 00:03:19,000
而且会比较不太顾及听众感受

75
00:03:20,000 --> 00:03:22,000
对 所以你看我们这个播客的名字叫做

76
00:03:22,000 --> 00:03:23,000
Colonel Panic

77
00:03:23,000 --> 00:03:25,000
如果你问什么是 Colonel Panic

78
00:03:25,000 --> 00:03:27,000
那你就输了

79
00:03:27,000 --> 00:03:29,000
那你就不适合听众听

80
00:03:30,000 --> 00:03:33,000
不过其实你在提纲里面也解了

81
00:03:33,000 --> 00:03:34,000
为什么要解释一下的

82
00:03:34,000 --> 00:03:35,000
对 毕竟还是要解释

83
00:03:35,000 --> 00:03:38,000
内核恐慌来自于 Colonel Panic

84
00:03:38,000 --> 00:03:40,000
Colonel Panic 我相信

85
00:03:40,000 --> 00:03:43,000
如果你不是一个初出茅围的

86
00:03:43,000 --> 00:03:46,000
计算机专业的本科生

87
00:03:46,000 --> 00:03:48,000
应该是知道什么是 Colonel Panic

88
00:03:49,000 --> 00:03:55,000
如果你 Ever 用过 Linux 或者是 MacOS 的话

89
00:03:55,000 --> 00:03:59,000
而且你有足够的不幸运

90
00:03:59,000 --> 00:04:03,000
曾经看到过 MacOS 出现过一个俗称五国

91
00:04:03,000 --> 00:04:04,000
现在已经是六国

92
00:04:04,000 --> 00:04:05,000
还是七国的画面

93
00:04:05,000 --> 00:04:09,000
就是背景是一个大大的关机的符号

94
00:04:09,000 --> 00:04:13,000
然后用五种国家的语言写着

95
00:04:14,000 --> 00:04:17,000
MacOS X 遭遇到了一个不可预知

96
00:04:17,000 --> 00:04:20,000
或者是国台本来很难搞定的问题

97
00:04:20,000 --> 00:04:21,000
我不得不关机了

98
00:04:21,000 --> 00:04:21,000
对

99
00:04:21,000 --> 00:04:22,000
那么在这种情况下

100
00:04:22,000 --> 00:04:27,000
其实我们说 MacOS 操作系统的 Colonel

101
00:04:27,000 --> 00:04:29,000
有什么内核出现了 Panic

102
00:04:29,000 --> 00:04:32,000
可能如果听众朋友没有用过 Mac 的话

103
00:04:32,000 --> 00:04:35,000
用 Windows 时代就是蓝屏

104
00:04:35,000 --> 00:04:40,000
Windows 那个叫做专业数据叫做 Stop Error

105
00:04:40,000 --> 00:04:42,000
就是停止错误

106
00:04:42,000 --> 00:04:44,000
这个错误如此严重一致

107
00:04:44,000 --> 00:04:47,000
因为它必须停下来了

108
00:04:47,000 --> 00:04:49,000
对俗称叫什么

109
00:04:49,000 --> 00:04:50,000
中文叫蓝屏

110
00:04:50,000 --> 00:04:54,000
英文叫做 The Blue Screen of Death

111
00:04:54,000 --> 00:04:57,000
蓝色死亡屏幕

112
00:04:59,000 --> 00:05:02,000
那个 MacOS 还有一个说法叫做

113
00:05:02,000 --> 00:05:05,000
Speaking Beach Bowl of Death

114
00:05:05,000 --> 00:05:07,000
Speaking Beach Bowl of Death

115
00:05:07,000 --> 00:05:10,000
但是这个其实并不对等

116
00:05:10,000 --> 00:05:11,000
我觉得因为 Speaking Beach Bowl of Death

117
00:05:11,000 --> 00:05:14,000
不一定会导致 Colonel Panic

118
00:05:14,000 --> 00:05:14,000
对

119
00:05:14,000 --> 00:05:15,000
那个只是系统停止响应

120
00:05:16,000 --> 00:05:17,000
对

121
00:05:17,000 --> 00:05:23,000
它通常只是在用户层的一个进程

122
00:05:23,000 --> 00:05:26,000
导致 UI 不能更新才会出现

123
00:05:26,000 --> 00:05:28,000
Beach Bowl of Death

124
00:05:28,000 --> 00:05:28,000
对

125
00:05:28,000 --> 00:05:31,000
所以其实我最近还遇到这么几个事情

126
00:05:31,000 --> 00:05:35,000
我发现现在 Mac 上最容易出现这个问题

127
00:05:35,000 --> 00:05:36,000
就是 Safari

128
00:05:36,000 --> 00:05:38,000
不是 Fender

129
00:05:39,000 --> 00:05:40,000
真的吗

130
00:05:41,000 --> 00:05:42,000
我用 Fender 从来没有出现过

131
00:05:42,000 --> 00:05:45,000
你难道经常遭遇 Colonel Panic

132
00:05:45,000 --> 00:05:46,000
那个不可能

133
00:05:46,000 --> 00:05:48,000
还是 Speaking Beach Bowl

134
00:05:48,000 --> 00:05:52,000
主要的问题是我家里有一个 NAS

135
00:05:52,000 --> 00:05:55,000
NAS 就是网络硬盘

136
00:05:55,000 --> 00:06:00,000
然后它是通过 Fender 的 Share 的 Tab 去访问的

137
00:06:00,000 --> 00:06:03,000
所以是在等待网络 IO 的时候导致的

138
00:06:03,000 --> 00:06:03,000
对

139
00:06:03,000 --> 00:06:04,000
会很慢

140
00:06:04,000 --> 00:06:06,000
然后我觉得是 Fender 写的不好的地方

141
00:06:06,000 --> 00:06:08,000
它这里是一个阻塞的一个过程

142
00:06:08,000 --> 00:06:12,000
就是你看 NAS 它是一个机械式硬盘

143
00:06:12,000 --> 00:06:14,000
然后你如果你一段时间不用的话

144
00:06:14,000 --> 00:06:18,000
它设置的默认是会停转的

145
00:06:18,000 --> 00:06:18,000
就省电

146
00:06:18,000 --> 00:06:19,000
然后

147
00:06:19,000 --> 00:06:22,000
我也遇到过类似的问题

148
00:06:22,000 --> 00:06:24,000
而且这不甚至不是通过 NAS

149
00:06:24,000 --> 00:06:27,000
我在接一个外接硬盘的时候会导致

150
00:06:27,000 --> 00:06:29,000
U 盘也会这样对吧

151
00:06:29,000 --> 00:06:29,000
对

152
00:06:29,000 --> 00:06:34,000
然后我的解决方式是做一个 ColonTab

153
00:06:34,000 --> 00:06:37,000
然后每隔 5 分钟去 LS 一下这个硬盘

154
00:06:37,000 --> 00:06:39,000
就保持它一直运转

155
00:06:39,000 --> 00:06:40,000
对

156
00:06:40,000 --> 00:06:41,000
它这样会很吵

157
00:06:43,000 --> 00:06:43,000
还好吧

158
00:06:43,000 --> 00:06:46,000
你的 NAS 难道不是放在一个不会吵到的地方

159
00:06:46,000 --> 00:06:47,000
我很远

160
00:06:47,000 --> 00:06:48,000
另外一个房间

161
00:06:48,000 --> 00:06:48,000
对

162
00:06:48,000 --> 00:06:49,000
所以无所谓

163
00:06:49,000 --> 00:06:51,000
但是你的 U 盘就不行了

164
00:06:51,000 --> 00:06:53,000
U 盘肯定跟电脑连在一起的

165
00:06:55,000 --> 00:06:57,000
我倒是没有遇到过这个

166
00:06:57,000 --> 00:07:01,000
就是我是把移动硬盘塞在抽屉的最里面

167
00:07:01,000 --> 00:07:03,000
然后它只要转起来我也听不到

168
00:07:03,000 --> 00:07:04,000
其实

169
00:07:04,000 --> 00:07:05,000
你这样设置了应该

170
00:07:05,000 --> 00:07:07,000
因为我都是摆在外面的

171
00:07:07,000 --> 00:07:08,000
我这个桌子是没有抽屉的

172
00:07:08,000 --> 00:07:09,000
所以

173
00:07:09,000 --> 00:07:09,000
对

174
00:07:09,000 --> 00:07:12,000
就是我没有找到怎么样才可以设定说

175
00:07:13,000 --> 00:07:14,000
移动硬盘

176
00:07:14,000 --> 00:07:16,000
或者它根本就是一个内置的功能

177
00:07:16,000 --> 00:07:18,000
就是它会自动停下来省电

178
00:07:18,000 --> 00:07:20,000
然后导致第一次房间的时候

179
00:07:20,000 --> 00:07:23,000
会有一个非常慢的过程

180
00:07:23,000 --> 00:07:26,000
那我就干脆用这种暴力的方法

181
00:07:26,000 --> 00:07:27,000
它根本不要停下来

182
00:07:27,000 --> 00:07:30,000
我记得在 Linux 上是可以设置

183
00:07:30,000 --> 00:07:32,000
用那个什么 PMZ 的工具

184
00:07:32,000 --> 00:07:33,000
好像是一个什么玩意儿

185
00:07:33,000 --> 00:07:35,000
有个命令行的工具在里面上

186
00:07:35,000 --> 00:07:39,000
可以设定不让这些硬盘就停下来

187
00:07:40,000 --> 00:07:43,000
我好像是省电功能

188
00:07:43,000 --> 00:07:44,000
对

189
00:07:44,000 --> 00:07:46,000
应该是可以设定的

190
00:07:46,000 --> 00:07:47,000
但是我当时没有找到

191
00:07:47,000 --> 00:07:48,000
对

192
00:07:48,000 --> 00:07:50,000
所以你还有很多是用外接硬盘吗

193
00:07:50,000 --> 00:07:51,000
现在

194
00:07:51,000 --> 00:07:52,000
现在没有了

195
00:07:52,000 --> 00:07:58,000
现在我可能会买一个时间交能

196
00:07:58,000 --> 00:07:58,000
哇

197
00:07:58,000 --> 00:08:00,000
你真的要买那个吗

198
00:08:00,000 --> 00:08:00,000
对

199
00:08:00,000 --> 00:08:02,000
挺二的

200
00:08:02,000 --> 00:08:05,000
不过我觉得人变得越累懒了

201
00:08:05,000 --> 00:08:07,000
如果能花钱解决的问题

202
00:08:07,000 --> 00:08:12,000
可能就不愿意再去自己动手了

203
00:08:12,000 --> 00:08:14,000
或者说我希望能够把动手的经历

204
00:08:14,000 --> 00:08:15,000
留在其他部分

205
00:08:15,000 --> 00:08:17,000
这个不错

206
00:08:17,000 --> 00:08:18,000
时间

207
00:08:18,000 --> 00:08:18,000
对

208
00:08:18,000 --> 00:08:21,000
我前两天其实在网上看到了一个

209
00:08:21,000 --> 00:08:25,000
在 Hacker News 上面的评论区看到了一条新闻

210
00:08:25,000 --> 00:08:30,000
就是有一个人在 Gatehub 上公布了一个脚本

211
00:08:30,000 --> 00:08:34,000
自动的把 Mac 的很多设置设定为

212
00:08:34,000 --> 00:08:36,000
就是加引号的更易用

213
00:08:37,000 --> 00:08:39,000
然后有一个人评论说

214
00:08:39,000 --> 00:08:42,000
这些整天导通电脑的人就好像

215
00:08:42,000 --> 00:08:43,000
像 Card Guy

216
00:08:43,000 --> 00:08:46,000
就是摆弄汽车的人一样

217
00:08:46,000 --> 00:08:48,000
改装的

218
00:08:48,000 --> 00:08:50,000
把汽车的很多部分改装掉

219
00:08:50,000 --> 00:08:54,000
来获得一点点微不足道的性能提升

220
00:08:54,000 --> 00:08:56,000
然后他说我就很恨这种人

221
00:08:56,000 --> 00:08:57,000
然后

222
00:08:57,000 --> 00:08:58,000
但是我就想说

223
00:08:58,000 --> 00:09:02,000
其实我们每个人在某一个阶段

224
00:09:02,000 --> 00:09:03,000
可能都是这样的人

225
00:09:03,000 --> 00:09:07,000
就是会拼命的去摆弄折腾电脑

226
00:09:07,000 --> 00:09:09,000
但是可能现在是折腾不动

227
00:09:09,000 --> 00:09:11,000
或者是希望能够去折腾其他的东西

228
00:09:11,000 --> 00:09:13,000
所以就觉得

229
00:09:13,000 --> 00:09:15,000
如果能够有一个现成的

230
00:09:15,000 --> 00:09:17,000
而且比较好的解决方案的话

231
00:09:17,000 --> 00:09:18,000
不妨就用它

232
00:09:18,000 --> 00:09:19,000
对

233
00:09:19,000 --> 00:09:23,000
就是我也是我当初为什么换用 Mac 的一个主要原因

234
00:09:23,000 --> 00:09:26,000
因为在换 Mac 之前

235
00:09:26,000 --> 00:09:29,000
我大概就用了可能几年的时间的 Linux 桌面

236
00:09:29,000 --> 00:09:31,000
就是 Ubuntu 的桌面系统

237
00:09:31,000 --> 00:09:33,000
确实太折腾了

238
00:09:33,000 --> 00:09:34,000
对

239
00:09:34,000 --> 00:09:38,000
我觉得可能就是因为我不停的折腾它

240
00:09:38,000 --> 00:09:42,000
后来我是在 Windows 里面装了一个虚拟机

241
00:09:42,000 --> 00:09:45,000
然后在虚拟机里面装了可能四五个 Linux

242
00:09:45,000 --> 00:09:46,000
然后

243
00:09:47,000 --> 00:09:49,000
一开始是觉得

244
00:09:49,000 --> 00:09:55,000
怎么都不能找到一个可新的桌面环境

245
00:09:55,000 --> 00:09:56,000
到后来就变成了

246
00:09:56,000 --> 00:10:00,000
觉得怎么都不能找到一个可新的 Window Manager

247
00:10:00,000 --> 00:10:05,000
我记得那个时候用 i 3 还是用一个叫做

248
00:10:06,000 --> 00:10:07,000
E 吧

249
00:10:07,000 --> 00:10:09,000
Enlightment 是不是

250
00:10:10,000 --> 00:10:11,000
不是 Enlightment

251
00:10:13,000 --> 00:10:14,000
意思想不出来叫什么

252
00:10:15,000 --> 00:10:15,000
Awesome

253
00:10:15,000 --> 00:10:16,000
好像叫 Awesome

254
00:10:16,000 --> 00:10:17,000
OK

255
00:10:17,000 --> 00:10:18,000
Awesomeness

256
00:10:18,000 --> 00:10:19,000
对

257
00:10:19,000 --> 00:10:19,000
是一个 Window Manager

258
00:10:19,000 --> 00:10:21,000
就是纯

259
00:10:21,000 --> 00:10:22,000
它支持纯键盘操作

260
00:10:22,000 --> 00:10:23,000
因为那个时候我

261
00:10:24,000 --> 00:10:25,000
对

262
00:10:25,000 --> 00:10:28,000
就试图找到一个纯键盘的桌面环境

263
00:10:28,000 --> 00:10:30,000
Linux 的桌面环境

264
00:10:30,000 --> 00:10:33,000
但后来就还是觉得还买它

265
00:10:35,000 --> 00:10:37,000
我的问题倒不是那么

266
00:10:37,000 --> 00:10:38,000
就不是因为软件的原因

267
00:10:38,000 --> 00:10:41,000
我的因为是硬件的事情

268
00:10:41,000 --> 00:10:42,000
但是我用的

269
00:10:42,000 --> 00:10:43,000
就在跑

270
00:10:43,000 --> 00:10:45,000
Ubuntu 的时候用的是一个 ThinkPad

271
00:10:46,000 --> 00:10:47,000
然后经常

272
00:10:47,000 --> 00:10:48,000
那个时候是大学上

273
00:10:48,000 --> 00:10:53,000
要用什么一种特殊的无线认证的一种方式

274
00:10:53,000 --> 00:10:53,000
对吧

275
00:10:53,000 --> 00:10:55,000
现在叫 Ridgid 了是不是

276
00:10:55,000 --> 00:10:55,000
对

277
00:10:55,000 --> 00:10:56,000
很多大学的人都有这个

278
00:10:56,000 --> 00:10:56,000
对

279
00:10:56,000 --> 00:10:58,000
你是在国内的时候

280
00:10:58,000 --> 00:10:58,000
对

281
00:10:58,000 --> 00:10:58,000
国内的时候

282
00:10:58,000 --> 00:11:01,000
但是之前我们学校用的还

283
00:11:01,000 --> 00:11:02,000
不叫 Ridgid

284
00:11:02,000 --> 00:11:03,000
是一个什么其他的一个厂商

285
00:11:03,000 --> 00:11:04,000
我忘了

286
00:11:04,000 --> 00:11:05,000
但是意思是差不多的

287
00:11:05,000 --> 00:11:07,000
就不是说像现在

288
00:11:07,000 --> 00:11:08,000
一样

289
00:11:08,000 --> 00:11:08,000
你可以连上

290
00:11:08,000 --> 00:11:09,000
它还是要认证一下

291
00:11:09,000 --> 00:11:11,000
但是好像不需要装一个特殊的刻骨端

292
00:11:11,000 --> 00:11:13,000
你只用那个

293
00:11:13,000 --> 00:11:15,000
当时是它是针对 Windows 开发的

294
00:11:15,000 --> 00:11:17,000
然后你就用 Windows 的那个自带的那个验证一下

295
00:11:17,000 --> 00:11:18,000
就可以了

296
00:11:18,000 --> 00:11:19,000
但是问题是

297
00:11:19,000 --> 00:11:23,000
我在 Ubuntu 上用自带的 WiFi Stack

298
00:11:23,000 --> 00:11:25,000
是打死也验证不过的

299
00:11:25,000 --> 00:11:26,000
就非常非常折腾

300
00:11:26,000 --> 00:11:28,000
而且它好像每隔一段时间会升级一次

301
00:11:28,000 --> 00:11:29,000
就是我可能配好

302
00:11:29,000 --> 00:11:31,000
可能能用一次去图书馆

303
00:11:31,000 --> 00:11:31,000
比如说

304
00:11:31,000 --> 00:11:34,000
然后过个 10 天半个月

305
00:11:34,000 --> 00:11:36,000
然后发现又连不上了

306
00:11:36,000 --> 00:11:37,000
我想想啊

307
00:11:37,000 --> 00:11:38,000
fuck this

308
00:11:38,000 --> 00:11:40,000
然后就买了一个 Mac

309
00:11:40,000 --> 00:11:42,000
然后就后来就

310
00:11:42,000 --> 00:11:43,000
后来出国才能买 Mac

311
00:11:43,000 --> 00:11:45,000
就是也是因为类似的问题

312
00:11:46,000 --> 00:11:47,000
OK

313
00:11:47,000 --> 00:11:48,000
我记得那个时候

314
00:11:48,000 --> 00:11:49,000
我刚到德国

315
00:11:49,000 --> 00:11:51,000
印象比较深的一件事情就是

316
00:11:53,000 --> 00:11:55,000
那个学校的

317
00:11:55,000 --> 00:11:57,000
就算你实验室的门上贴了一个纸条

318
00:11:57,000 --> 00:11:59,000
写着我们不提供任何微软产品

319
00:12:01,000 --> 00:12:04,000
然后旁边一张纸条上面写着

320
00:12:04,000 --> 00:12:09,000
如果要下载那个 WiFi 的认证客户端

321
00:12:09,000 --> 00:12:11,000
Windows 请去这里

322
00:12:11,000 --> 00:12:12,000
Linux 请去那里

323
00:12:12,000 --> 00:12:13,000
然后我就觉得

324
00:12:14,000 --> 00:12:17,000
Linux 用户真是畅通无阻

325
00:12:17,000 --> 00:12:19,000
这点跟我在德国的另外一个学校

326
00:12:19,000 --> 00:12:20,000
用戴的以前也差不多

327
00:12:20,000 --> 00:12:21,000
当时

328
00:12:21,000 --> 00:12:22,000
就不是德国大历年嘛

329
00:12:22,000 --> 00:12:24,000
你是在另外一个学校交换

330
00:12:24,000 --> 00:12:26,000
是在他们的那个 informatic

331
00:12:26,000 --> 00:12:29,000
对 informatic

332
00:12:29,000 --> 00:12:30,000
OK

333
00:12:30,000 --> 00:12:32,000
就是德语的 computer science

334
00:12:34,000 --> 00:12:35,000
信息科学

335
00:12:35,000 --> 00:12:36,000
对

336
00:12:36,000 --> 00:12:36,000
然后

337
00:12:36,000 --> 00:12:40,000
对就是你爱丁堡的计算机学院

338
00:12:40,000 --> 00:12:42,000
也叫做 informatic

339
00:12:42,000 --> 00:12:44,000
是 C

340
00:12:44,000 --> 00:12:45,000
就是 C 吧

341
00:12:45,000 --> 00:12:45,000
就是那个字母

342
00:12:45,000 --> 00:12:47,000
是 informatics

343
00:12:47,000 --> 00:12:48,000
对

344
00:12:48,000 --> 00:12:48,000
是 C

345
00:12:48,000 --> 00:12:49,000
Cs 不是 K

346
00:12:49,000 --> 00:12:50,000
对

347
00:12:50,000 --> 00:12:51,000
Cs 不是 K

348
00:12:51,000 --> 00:12:51,000
OK

349
00:12:51,000 --> 00:12:53,000
我觉得还挺神奇的

350
00:12:53,000 --> 00:12:55,000
其实我觉得这更合理

351
00:12:55,000 --> 00:12:58,000
computer science sounds weird

352
00:12:58,000 --> 00:12:59,000
informatic

353
00:12:59,000 --> 00:13:00,000
听起来比较屌

354
00:13:00,000 --> 00:13:02,000
信息学是吧

355
00:13:02,000 --> 00:13:03,000
对

356
00:13:03,000 --> 00:13:03,000
信息学

357
00:13:03,000 --> 00:13:04,000
信息学

358
00:13:04,000 --> 00:13:06,000
其实信息学在国内

359
00:13:06,000 --> 00:13:08,000
是不是跟其他科目有点关系

360
00:13:08,000 --> 00:13:10,000
跟 computer science 不是严格一样

361
00:13:10,000 --> 00:13:11,000
信息学好像是什么

362
00:13:11,000 --> 00:13:14,000
情报信息专业

363
00:13:14,000 --> 00:13:14,000
就是什么

364
00:13:14,000 --> 00:13:15,000
键碟

365
00:13:15,000 --> 00:13:16,000
他们做的事情是

366
00:13:16,000 --> 00:13:18,000
键碟那一类的

367
00:13:18,000 --> 00:13:18,000
对

368
00:13:18,000 --> 00:13:20,000
他们比较偏向于

369
00:13:21,000 --> 00:13:24,000
不那么计算机科学的部分

370
00:13:24,000 --> 00:13:26,000
就是信息传输

371
00:13:26,000 --> 00:13:27,000
还有什么

372
00:13:27,000 --> 00:13:30,000
乃至雷达之类的好像多少

373
00:13:30,000 --> 00:13:34,000
所以是一个更 hardcore 的一个科目

374
00:13:34,000 --> 00:13:36,000
一个偏向于通讯的专业应该说

375
00:13:36,000 --> 00:13:37,000
OK

376
00:13:37,000 --> 00:13:38,000
刚说哪里了

377
00:13:38,000 --> 00:13:39,000
对

378
00:13:39,000 --> 00:13:41,000
我在德国的时候发现

379
00:13:41,000 --> 00:13:43,000
德国的 LUG

380
00:13:43,000 --> 00:13:44,000
Linux Unit Group

381
00:13:44,000 --> 00:13:45,000
好像特别

382
00:13:45,000 --> 00:13:48,000
特别 hardcore

383
00:13:48,000 --> 00:13:49,000
就比较多

384
00:13:49,000 --> 00:13:51,000
而且他们会很坚持

385
00:13:51,000 --> 00:13:52,000
就很多事情

386
00:13:52,000 --> 00:13:55,000
他不想用这个付费

387
00:13:55,000 --> 00:13:57,000
或者是特别是微软的产品

388
00:13:57,000 --> 00:13:58,000
但是我在那个系的时候

389
00:13:58,000 --> 00:14:00,000
也是有一个有一个用门上面

390
00:14:00,000 --> 00:14:02,000
举师他们也是叫什么

391
00:14:02,000 --> 00:14:04,000
technical support

392
00:14:04,000 --> 00:14:05,000
然后他们也是说

393
00:14:05,000 --> 00:14:07,000
windows 去另外那个玩

394
00:14:07,000 --> 00:14:10,000
然后这边只管那个 unix 类系统

395
00:14:10,000 --> 00:14:11,000
对

396
00:14:11,000 --> 00:14:14,000
所以这挺不错的

397
00:14:14,000 --> 00:14:15,000
德国实际上就是

398
00:14:15,000 --> 00:14:18,000
如果你的政府门开发什么软件

399
00:14:18,000 --> 00:14:20,000
这个东西只支持 windows

400
00:14:20,000 --> 00:14:22,000
立刻会有人去报约

401
00:14:22,000 --> 00:14:23,000
就是德国有一个

402
00:14:23,000 --> 00:14:25,000
德国报税可以在网上报税

403
00:14:25,000 --> 00:14:27,000
然后报税部门

404
00:14:27,000 --> 00:14:29,000
一开始只有一个 windows 的软件

405
00:14:29,000 --> 00:14:30,000
后来被人报约

406
00:14:30,000 --> 00:14:32,000
他们不得不开发了一个 Linux 软件

407
00:14:32,000 --> 00:14:35,000
现在你在 Linux 下面也可以报税

408
00:14:35,000 --> 00:14:39,000
但是 Mac Home 机器还是没有受到重视

409
00:14:39,000 --> 00:14:41,000
就是可能德国政府也觉得

410
00:14:41,000 --> 00:14:42,000
你既然有钱买得起 Mac

411
00:14:42,000 --> 00:14:46,000
那就请你去花钱买那个 Mac 下面的报税软件

412
00:14:46,000 --> 00:14:47,000
它是一个专用的客户端

413
00:14:47,000 --> 00:14:49,000
不是一个网页版吗

414
00:14:49,000 --> 00:14:50,000
是一个专用客户端

415
00:14:50,000 --> 00:14:51,000
报税必须用一个专用客户端

416
00:14:51,000 --> 00:14:53,000
这个客户端会做

417
00:14:53,000 --> 00:14:55,000
会由数字证书给你签名

418
00:14:55,000 --> 00:14:57,000
然后通过加密信道

419
00:14:57,000 --> 00:15:01,000
把报税表单发给政府部门

420
00:15:01,000 --> 00:15:02,000
搞这么复杂

421
00:15:02,000 --> 00:15:02,000
OK

422
00:15:02,000 --> 00:15:03,000
加大报税比较简单

423
00:15:03,000 --> 00:15:06,000
就是它是

424
00:15:06,000 --> 00:15:08,000
政府不提供任何这种官方的界面给你

425
00:15:08,000 --> 00:15:10,000
你可以用纸张的方式填表去报

426
00:15:10,000 --> 00:15:13,000
然后但是其实大多数人还是找一个

427
00:15:13,000 --> 00:15:14,000
这种你看讲的软件

428
00:15:14,000 --> 00:15:17,000
但是那种软件也就是做那个软件的公司

429
00:15:17,000 --> 00:15:19,000
它同时有这种客户端版本

430
00:15:19,000 --> 00:15:22,000
比如说你可抓到你的 Mac 上

431
00:15:22,000 --> 00:15:23,000
可以抓到你的 Windows 上

432
00:15:23,000 --> 00:15:24,000
甚至还有 iPhone

433
00:15:24,000 --> 00:15:26,000
就是 iOS 的版本

434
00:15:26,000 --> 00:15:29,000
但是我一直用的都是他们的一个网页版

435
00:15:29,000 --> 00:15:30,000
但是虽然很丑

436
00:15:30,000 --> 00:15:30,000
但是好歹能用

437
00:15:30,000 --> 00:15:32,000
而且我试了一下

438
00:15:32,000 --> 00:15:34,000
就是跨浏览器的这个

439
00:15:34,000 --> 00:15:36,000
这种性还不错

440
00:15:36,000 --> 00:15:37,000
对

441
00:15:37,000 --> 00:15:38,000
也许这是更好的一种选择

442
00:15:38,000 --> 00:15:40,000
我不知道为什么德国人一定要

443
00:15:40,000 --> 00:15:43,000
就是税务局一定要自己开发一个客户端

444
00:15:43,000 --> 00:15:45,000
我刚才都说他要加密那些很麻烦

445
00:15:45,000 --> 00:15:46,000
你知道加上大厕

446
00:15:46,000 --> 00:15:46,000
对

447
00:15:46,000 --> 00:15:49,000
但我觉得有点欧尔人尔人尔人

448
00:15:49,000 --> 00:15:52,000
就是德国很多东西都是欧尔人尔人

449
00:15:52,000 --> 00:15:52,000
哦

450
00:15:52,000 --> 00:15:53,000
是 German

451
00:15:53,000 --> 00:15:56,000
当然可能是比较可能是

452
00:15:56,000 --> 00:15:56,000
make sense

453
00:15:56,000 --> 00:15:58,000
但不像法国的很多东西

454
00:15:58,000 --> 00:15:59,000
它欧尔人尔人尔人

455
00:15:59,000 --> 00:16:01,000
而且非常奇观

456
00:16:01,000 --> 00:16:03,000
我有一个词

457
00:16:03,000 --> 00:16:06,000
对我希望听众里面没有法国粉

458
00:16:06,000 --> 00:16:08,000
因为我是一个非常喜欢黑法国

459
00:16:08,000 --> 00:16:11,000
可能会经常听见我吐槽法国的

460
00:16:11,000 --> 00:16:14,000
德国人都黑法国人吧

461
00:16:14,000 --> 00:16:14,000
也不是

462
00:16:14,000 --> 00:16:17,000
我觉得德国应该也有喜欢法国

463
00:16:17,000 --> 00:16:19,000
但我觉得主流是黑的吧

464
00:16:19,000 --> 00:16:21,000
黑法国是欧洲的

465
00:16:21,000 --> 00:16:21,000
对

466
00:16:23,000 --> 00:16:26,000
你想就是我这是谁说的

467
00:16:26,000 --> 00:16:27,000
这好像是 CC 程说的

468
00:16:27,000 --> 00:16:31,000
说你想跟欧洲的任何一个国家建立起的

469
00:16:31,000 --> 00:16:33,000
陌生人迅速建立起有意义最好

470
00:16:33,000 --> 00:16:35,000
黑法国人就可以了

471
00:16:35,000 --> 00:16:35,000
对

472
00:16:35,000 --> 00:16:36,000
先黑一下法国人

473
00:16:36,000 --> 00:16:37,000
看看对方没有反应

474
00:16:37,000 --> 00:16:38,000
没有反应的话

475
00:16:38,000 --> 00:16:39,000
还有可能就可以

476
00:16:39,000 --> 00:16:41,000
一起黑了

477
00:16:42,000 --> 00:16:43,000
但是我觉得

478
00:16:43,000 --> 00:16:44,000
就是刚才你讲那种方式

479
00:16:44,000 --> 00:16:46,000
用那种什么就是证书签名

480
00:16:46,000 --> 00:16:47,000
然后加密的方式

481
00:16:47,000 --> 00:16:48,000
确实是更安全的

482
00:16:48,000 --> 00:16:51,000
因为加拿大这种地方对安全

483
00:16:51,000 --> 00:16:52,000
意思我觉得他们是很水的

484
00:16:52,000 --> 00:16:56,000
很多事情都是可以很容易的

485
00:16:56,000 --> 00:16:58,000
不需要遵过任何麻烦的

486
00:16:58,000 --> 00:17:01,000
就可以说说已经扭引到别人

487
00:17:01,000 --> 00:17:02,000
比如说那天我去

488
00:17:02,000 --> 00:17:05,000
我们不是就这次回来

489
00:17:05,000 --> 00:17:07,000
搬了一个地方的新的地址吗

490
00:17:07,000 --> 00:17:09,000
然后就要去改

491
00:17:09,000 --> 00:17:12,000
比如说我改那个驾驶商的那个

492
00:17:12,000 --> 00:17:13,000
注册的地址

493
00:17:13,000 --> 00:17:14,000
我改了我自己的

494
00:17:14,000 --> 00:17:15,000
然后就给我老婆的

495
00:17:15,000 --> 00:17:17,000
然后他有个网页

496
00:17:17,000 --> 00:17:19,000
可以输入你的驾驶者号

497
00:17:19,000 --> 00:17:22,000
然后一个六位数的密码

498
00:17:22,000 --> 00:17:23,000
就可以去登录进去

499
00:17:23,000 --> 00:17:25,000
但是我老婆从来没有用过

500
00:17:25,000 --> 00:17:27,000
所以我也不知道六位数密码多少

501
00:17:27,000 --> 00:17:30,000
然后我就打电话去我们这里管

502
00:17:30,000 --> 00:17:33,000
那个发驾驶的机构去问密码

503
00:17:33,000 --> 00:17:35,000
他就问了我一下驾驶的号码

504
00:17:35,000 --> 00:17:38,000
然后名字就把密码告诉我

505
00:17:39,000 --> 00:17:41,000
我觉得这可能

506
00:17:41,000 --> 00:17:43,000
这跟加拿大地网人心有关吧

507
00:17:43,000 --> 00:17:44,000
对

508
00:17:44,000 --> 00:17:47,000
联合人之间有比较更多的信任

509
00:17:47,000 --> 00:17:48,000
对 特别是在我这个地方

510
00:17:48,000 --> 00:17:50,000
我觉得可能是属于这种

511
00:17:50,000 --> 00:17:52,000
非常高信任度的地区

512
00:17:52,000 --> 00:17:55,000
我知道有很多人

513
00:17:55,000 --> 00:17:57,000
他们住那种两层楼的那种

514
00:17:57,000 --> 00:17:59,000
House 就是小别墅

515
00:17:59,000 --> 00:18:01,000
然后他们出门是从来不锁门的

516
00:18:01,000 --> 00:18:02,000
就是你随便

517
00:18:02,000 --> 00:18:04,000
对 或者把钥匙藏在地毯下面

518
00:18:04,000 --> 00:18:06,000
我觉得有时候我小时候看美術

519
00:18:06,000 --> 00:18:08,000
他们把钥匙藏在地毯下面

520
00:18:08,000 --> 00:18:09,000
我都惊呆了

521
00:18:10,000 --> 00:18:12,000
对上次我也是

522
00:18:12,000 --> 00:18:13,000
我要去租一个房子

523
00:18:13,000 --> 00:18:14,000
他那个风景非常好

524
00:18:14,000 --> 00:18:17,000
在一个海边的一个小 House

525
00:18:17,000 --> 00:18:19,000
那那个房主是不在本地的

526
00:18:19,000 --> 00:18:22,000
他是远程电话给你说

527
00:18:22,000 --> 00:18:22,000
你去那个地方

528
00:18:22,000 --> 00:18:27,000
然后门可有一个什么花的花箔

529
00:18:27,000 --> 00:18:28,000
对吧

530
00:18:28,000 --> 00:18:29,000
花箔上面有一把钥匙

531
00:18:29,000 --> 00:18:30,000
一把钥匙打开就可以进去了

532
00:18:30,000 --> 00:18:31,000
我说哈

533
00:18:31,000 --> 00:18:34,000
然后他说你这样真的放心吗

534
00:18:34,000 --> 00:18:35,000
没事 你看

535
00:18:35,000 --> 00:18:37,000
然后我就给他看

536
00:18:37,000 --> 00:18:38,000
就是看一个房子

537
00:18:38,000 --> 00:18:38,000
后来没租

538
00:18:38,000 --> 00:18:42,000
但是觉得在这个地方还是信任都是蛮高的

539
00:18:42,000 --> 00:18:44,000
那你也可能是因为这样

540
00:18:44,000 --> 00:18:45,000
他导致你说那些问题

541
00:18:45,000 --> 00:18:47,000
就很多这种所谓的

542
00:18:47,000 --> 00:18:50,000
我们在一个 GEEK 看来

543
00:18:50,000 --> 00:18:52,000
这怕他太不安全了

544
00:18:52,000 --> 00:18:53,000
但是他们觉得无所谓

545
00:18:53,000 --> 00:18:56,000
反正也不会发生什么 对吧

546
00:18:56,000 --> 00:18:57,000
对

547
00:18:57,000 --> 00:19:01,000
是可能在某些社会主义

548
00:19:01,000 --> 00:19:02,000
比老子看来

549
00:19:02,000 --> 00:19:04,000
这种小国管民可能是非常理想的

550
00:19:04,000 --> 00:19:06,000
一种状态

551
00:19:06,000 --> 00:19:10,000
但是很遗憾我们在发达国家

552
00:19:10,000 --> 00:19:11,000
或者说某些发生中国家

553
00:19:11,000 --> 00:19:14,000
比如某边具有 10 多亿人口的犯人国家

554
00:19:14,000 --> 00:19:16,000
这是非常不现实的一件事情

555
00:19:16,000 --> 00:19:18,000
人们还是尽量注意安全的比较好

556
00:19:18,000 --> 00:19:20,000
我觉得在德国的时候

557
00:19:20,000 --> 00:19:21,000
我觉得它还是蛮注意安全的

558
00:19:21,000 --> 00:19:22,000
很多地方都是

559
00:19:22,000 --> 00:19:26,000
因为德国其实德国是欧洲的人口第一大国

560
00:19:26,000 --> 00:19:27,000
德国 8000 多万

561
00:19:27,000 --> 00:19:28,000
9000 万

562
00:19:28,000 --> 00:19:30,000
法国是第一大国

563
00:19:30,000 --> 00:19:32,000
但是德国是人口最多的国家

564
00:19:32,000 --> 00:19:34,000
所以德国之间可能

565
00:19:34,000 --> 00:19:38,000
是这种信任的状况稍微少一点

566
00:19:38,000 --> 00:19:38,000
对

567
00:19:38,000 --> 00:19:38,000
而且

568
00:19:38,000 --> 00:19:40,000
但我相信还是有很多的国人

569
00:19:40,000 --> 00:19:42,000
会把钥匙藏在地上

570
00:19:42,000 --> 00:19:43,000
对

571
00:19:43,000 --> 00:19:46,000
而且还有一件事情我觉得很有意思

572
00:19:46,000 --> 00:19:48,000
就是你有开车

573
00:19:48,000 --> 00:19:49,000
对

574
00:19:49,000 --> 00:19:49,000
对

575
00:19:49,000 --> 00:19:49,000
对

576
00:19:49,000 --> 00:19:51,000
都开汽车对吧

577
00:19:51,000 --> 00:19:52,000
对

578
00:19:52,000 --> 00:19:55,000
然后你那个邮箱是可以随便打开的吗

579
00:19:55,000 --> 00:19:56,000
可以

580
00:19:56,000 --> 00:19:57,000
我的不行

581
00:19:57,000 --> 00:19:59,000
但是大部分人的车的邮箱都可以

582
00:19:59,000 --> 00:20:02,000
我邮箱需要在驾驶舱里面按一个键才可以打

583
00:20:02,000 --> 00:20:04,000
所以德国的车也有这样的

584
00:20:04,000 --> 00:20:05,000
不

585
00:20:05,000 --> 00:20:07,000
德国大分车里有像是按一下

586
00:20:07,000 --> 00:20:08,000
邮箱盖又会弹起来

587
00:20:08,000 --> 00:20:08,000
不

588
00:20:08,000 --> 00:20:11,000
但是需要一个锁的机制吗

589
00:20:11,000 --> 00:20:12,000
不需要

590
00:20:12,000 --> 00:20:13,000
就是任何人都可以打开

591
00:20:13,000 --> 00:20:13,000
对不对

592
00:20:13,000 --> 00:20:15,000
就这个事情很傻逼吗

593
00:20:17,000 --> 00:20:19,000
中国难道不是吗

594
00:20:19,000 --> 00:20:23,000
中国我开过的所有的车都是好的坏的

595
00:20:23,000 --> 00:20:25,000
都是有一个锁的机制的

596
00:20:25,000 --> 00:20:27,000
要不你是从外面钥匙打开

597
00:20:27,000 --> 00:20:28,000
要不是从驾驶舱按一个钮

598
00:20:28,000 --> 00:20:29,000
然后它才能够打开

599
00:20:29,000 --> 00:20:31,000
就是会有人偷游是吧

600
00:20:31,000 --> 00:20:32,000
这个是一个问题

601
00:20:32,000 --> 00:20:35,000
可能在中国就是最主要的问题

602
00:20:35,000 --> 00:20:36,000
但我觉得另外一个就是

603
00:20:36,000 --> 00:20:38,000
你不觉得这样很不安全吗

604
00:20:38,000 --> 00:20:39,000
就是有

605
00:20:39,000 --> 00:20:40,000
如果不喜欢

606
00:20:40,000 --> 00:20:41,000
就是对看你的话

607
00:20:41,000 --> 00:20:43,000
往你的邮箱里面倒一点什么东西

608
00:20:43,000 --> 00:20:43,000
你车就毁了

609
00:20:43,000 --> 00:20:46,000
因为我知道上次有一个发生一件事情

610
00:20:46,000 --> 00:20:47,000
就是有一个

611
00:20:47,000 --> 00:20:49,000
我不知道他得罪了谁还是怎么样

612
00:20:49,000 --> 00:20:53,000
有人好像在他那个邮箱里面尿了一泡

613
00:20:53,000 --> 00:20:55,000
然后发动机就爆下了

614
00:20:55,000 --> 00:20:57,000
这是挺惨的

615
00:20:57,000 --> 00:20:59,000
我从来没有想过这个问题

616
00:20:59,000 --> 00:21:03,000
因为我女朋友的车就是按一下就会弹开的

617
00:21:03,000 --> 00:21:04,000
这都说觉得为什么会这样呢

618
00:21:04,000 --> 00:21:06,000
这不很奇怪吗

619
00:21:06,000 --> 00:21:09,000
但这也是可能从一个低薪认识会

620
00:21:09,000 --> 00:21:11,000
签一刀高薪认识会

621
00:21:11,000 --> 00:21:14,000
这一个 shock 之一

622
00:21:14,000 --> 00:21:14,000
对

623
00:21:14,000 --> 00:21:18,000
就好像比如说 dash camera

624
00:21:18,000 --> 00:21:19,000
就是我们在 YouTube 上

625
00:21:19,000 --> 00:21:23,000
可以看到很多很多俄国或者是

626
00:21:23,000 --> 00:21:25,000
就是对对对

627
00:21:25,000 --> 00:21:27,000
看完也超多的

628
00:21:27,000 --> 00:21:31,000
大量的车祸的镜头是由 dash camera 录下来了

629
00:21:31,000 --> 00:21:33,000
我相信中国好像现在也是非常有趣

630
00:21:33,000 --> 00:21:34,000
碰瓷档太多了

631
00:21:34,000 --> 00:21:37,000
车上装一个叫什么行车记录仪

632
00:21:37,000 --> 00:21:39,000
但是你会觉得在

633
00:21:39,000 --> 00:21:42,000
就是高薪认识会的国家这种东西是很少见的

634
00:21:42,000 --> 00:21:44,000
就为什么要把行车的东西录下来呢

635
00:21:44,000 --> 00:21:48,000
是你怕别人撞了你不承认还是

636
00:21:48,000 --> 00:21:50,000
对怕就是就是什么

637
00:21:50,000 --> 00:21:51,000
额价嘛

638
00:21:51,000 --> 00:21:51,000
额价嘛

639
00:21:51,000 --> 00:21:52,000
对对

640
00:21:52,000 --> 00:21:55,000
因为国内特别是现在痛死党有比较多

641
00:21:55,000 --> 00:21:57,000
你或者说你装了行车记录仪

642
00:21:57,000 --> 00:21:59,000
能拍到非常多搞笑

643
00:21:59,000 --> 00:22:01,000
而且恶心的事情

644
00:22:01,000 --> 00:22:02,000
对对对

645
00:22:02,000 --> 00:22:04,000
有时候我看行车记录仪录上的东西

646
00:22:04,000 --> 00:22:05,000
我都会觉得非常

647
00:22:05,000 --> 00:22:07,000
disturbing

648
00:22:07,000 --> 00:22:08,000
上次我就是我老婆她说

649
00:22:08,000 --> 00:22:10,000
就是在我们上次不是回国

650
00:22:10,000 --> 00:22:10,000
带了一段小片

651
00:22:10,000 --> 00:22:11,000
她说也买一个

652
00:22:11,000 --> 00:22:12,000
要不带回加拿去

653
00:22:12,000 --> 00:22:14,000
我说有必要吗

654
00:22:14,000 --> 00:22:15,000
加拿去谁管你

655
00:22:15,000 --> 00:22:16,000
到时候出了事情

656
00:22:16,000 --> 00:22:20,000
这次保险公司就按那个什么规则弄就好了

657
00:22:20,000 --> 00:22:21,000
根本没有这种虚情

658
00:22:21,000 --> 00:22:22,000
而且从一个比较悲观

659
00:22:22,000 --> 00:22:25,000
但是从一个比较悲观的角度来看

660
00:22:25,000 --> 00:22:26,000
我觉得可能

661
00:22:26,000 --> 00:22:28,000
行车记录仪会渐渐普及开来的

662
00:22:28,000 --> 00:22:30,000
因为整个世界的趋势

663
00:22:30,000 --> 00:22:33,000
是在渐渐走向不信任

664
00:22:33,000 --> 00:22:34,000
你觉得呢

665
00:22:34,000 --> 00:22:35,000
嗯

666
00:22:36,000 --> 00:22:38,000
不 我的想法倒是更简单

667
00:22:38,000 --> 00:22:41,000
我觉得有行车记录仪还要包括

668
00:22:41,000 --> 00:22:41,000
就是行车记录仪

669
00:22:41,000 --> 00:22:44,000
只有你在驾驶的时候才会开启

670
00:22:44,000 --> 00:22:45,000
对吧

671
00:22:45,000 --> 00:22:47,000
然后它有些这些技术可以做到

672
00:22:47,000 --> 00:22:49,000
你是 24 小时全听监控

673
00:22:50,000 --> 00:22:52,000
我是觉得有的这个东西的话

674
00:22:52,000 --> 00:22:56,000
可以在某种程度上降低保险的费用

675
00:22:57,000 --> 00:23:00,000
就是如果保险公司强制要求你抓上这个的话

676
00:23:00,000 --> 00:23:01,000
他可以说

677
00:23:01,000 --> 00:23:03,000
你装保险解办

678
00:23:03,000 --> 00:23:05,000
你不装保险加倍这样

679
00:23:05,000 --> 00:23:06,000
你们有意思吗

680
00:23:06,000 --> 00:23:07,000
就是有更多的

681
00:23:07,000 --> 00:23:08,000
就虽然说

682
00:23:09,000 --> 00:23:10,000
呃

683
00:23:10,000 --> 00:23:11,000
比如说我现在带的地方

684
00:23:11,000 --> 00:23:13,000
就属于这种整体社会成性度比较高的

685
00:23:13,000 --> 00:23:17,000
但是我觉得这只是通过传统来的一个事情

686
00:23:17,000 --> 00:23:17,000
来保证

687
00:23:17,000 --> 00:23:18,000
但好像你刚才讲

688
00:23:18,000 --> 00:23:21,000
这个这个社会状况是在变化的

689
00:23:21,000 --> 00:23:22,000
所以如果有一些

690
00:23:22,000 --> 00:23:23,000
呃

691
00:23:23,000 --> 00:23:23,000
叫做什么

692
00:23:23,000 --> 00:23:24,000
呃

693
00:23:24,000 --> 00:23:25,000
机制的

694
00:23:25,000 --> 00:23:26,000
有什么这种

695
00:23:26,000 --> 00:23:28,000
比较可靠的机制来确保这一点

696
00:23:28,000 --> 00:23:30,000
我觉得是更好的一个方案

697
00:23:30,000 --> 00:23:33,000
就是我更相信机器而不是人

698
00:23:34,000 --> 00:23:34,000
嗯

699
00:23:34,000 --> 00:23:37,000
我相信罗尔恩斯如果在场的话

700
00:23:37,000 --> 00:23:38,000
也会跳出来说

701
00:23:38,000 --> 00:23:39,000
哈哈哈

702
00:23:39,000 --> 00:23:41,000
他是更希望能够

703
00:23:41,000 --> 00:23:43,000
社会能够朝着更相信人的方向发展

704
00:23:43,000 --> 00:23:45,000
因为人才是最重要的

705
00:23:45,000 --> 00:23:47,000
但是人是不 predictable

706
00:23:48,000 --> 00:23:49,000
对人是

707
00:23:49,000 --> 00:23:50,000
对人是

708
00:23:50,000 --> 00:23:50,000
哎

709
00:23:50,000 --> 00:23:53,000
有我记得前两天看了

710
00:23:53,000 --> 00:23:55,000
看一个笑话说

711
00:23:55,000 --> 00:23:55,000
呃

712
00:23:55,000 --> 00:23:56,000
什么是程序员

713
00:23:56,000 --> 00:23:58,000
程序员是这样一种职业

714
00:23:58,000 --> 00:24:00,000
就是你坐在桌子前面

715
00:24:00,000 --> 00:24:01,000
面对着一个盒子

716
00:24:01,000 --> 00:24:02,000
然后非常痛恨自己

717
00:24:02,000 --> 00:24:04,000
不能像一台机器那样思考吗

718
00:24:04,000 --> 00:24:05,000
哈哈哈

719
00:24:05,000 --> 00:24:06,000
对

720
00:24:06,000 --> 00:24:08,000
程序员实际上是一个非常非人的职业

721
00:24:08,000 --> 00:24:08,000
嗯

722
00:24:08,000 --> 00:24:11,000
然后这一点可能有时候会引起我

723
00:24:11,000 --> 00:24:12,000
等

724
00:24:12,000 --> 00:24:13,000
这个肉

725
00:24:13,000 --> 00:24:14,000
呃

726
00:24:14,000 --> 00:24:15,000
叫什么

727
00:24:15,000 --> 00:24:17,000
肉体的内核

728
00:24:17,000 --> 00:24:18,000
就是血肉的内核

729
00:24:18,000 --> 00:24:20,000
有时候也有点恐慌

730
00:24:20,000 --> 00:24:22,000
我觉得自己越来越不像一个人

731
00:24:22,000 --> 00:24:24,000
所以其实大部分时间

732
00:24:24,000 --> 00:24:25,000
所谓 debug

733
00:24:25,000 --> 00:24:26,000
debug

734
00:24:26,000 --> 00:24:27,000
其实 debug 不是程序里的 bug

735
00:24:27,000 --> 00:24:30,000
debug 是你脑子里面的 bug 的

736
00:24:30,000 --> 00:24:31,000
对

737
00:24:31,000 --> 00:24:33,000
就是找出自己到底又哪一步

738
00:24:33,000 --> 00:24:35,000
他妈的不像一个机器那样

739
00:24:35,000 --> 00:24:36,000
所以导致了这个

740
00:24:37,000 --> 00:24:38,000
呃

741
00:24:38,000 --> 00:24:39,000
让你感到愤怒的 bug

742
00:24:39,000 --> 00:24:42,000
所以写程序一直就是一个异化的过程

743
00:24:42,000 --> 00:24:43,000
对

744
00:24:43,000 --> 00:24:44,000
你异化你自己

745
00:24:44,000 --> 00:24:44,000
对

746
00:24:44,000 --> 00:24:49,000
你让自己并出感情和情绪的影响

747
00:24:49,000 --> 00:24:49,000
好像

748
00:24:49,000 --> 00:24:51,000
变成一个

749
00:24:51,000 --> 00:24:52,000
对

750
00:24:52,000 --> 00:24:53,000
好像扯的有点像

751
00:24:53,000 --> 00:24:54,000
那行

752
00:24:54,000 --> 00:24:55,000
刚刚讲到这里

753
00:24:55,000 --> 00:24:58,000
那今天那个一个主题是想什么

754
00:24:58,000 --> 00:24:59,000
错误处理对吧

755
00:24:59,000 --> 00:25:00,000
对

756
00:25:00,000 --> 00:25:00,000
其实对

757
00:25:00,000 --> 00:25:02,000
其实刚才我们说到 bug

758
00:25:02,000 --> 00:25:06,000
那 bug 会导致程序不能正常的运行

759
00:25:06,000 --> 00:25:09,000
或者导致台机器不能正常的运行

760
00:25:09,000 --> 00:25:12,000
然后此时就涉及到一个

761
00:25:12,000 --> 00:25:14,000
呃

762
00:25:14,000 --> 00:25:17,000
就是 exception handling 的机制

763
00:25:17,000 --> 00:25:20,000
那其实这是我们这一期节目

764
00:25:20,000 --> 00:25:22,000
想要讨论的一个主题

765
00:25:22,000 --> 00:25:23,000
就是

766
00:25:23,000 --> 00:25:25,000
呃

767
00:25:25,000 --> 00:25:27,000
exception 应该怎样没 handle

768
00:25:27,000 --> 00:25:28,000
先说

769
00:25:28,000 --> 00:25:29,000
先说这个之前

770
00:25:29,000 --> 00:25:31,000
我们要先可能先解释一下

771
00:25:31,000 --> 00:25:31,000
就是

772
00:25:31,000 --> 00:25:32,000
如果这个开始

773
00:25:32,000 --> 00:25:34,000
大家是学这种更加低级的

774
00:25:34,000 --> 00:25:35,000
比如说 C 啊

775
00:25:35,000 --> 00:25:36,000
这种源出来的时候

776
00:25:36,000 --> 00:25:38,000
是没有 exception 这个机制的

777
00:25:38,000 --> 00:25:39,000
哈

778
00:25:39,000 --> 00:25:40,000
嗯

779
00:25:40,000 --> 00:25:41,000
呃

780
00:25:41,000 --> 00:25:42,000
C 其实是

781
00:25:42,000 --> 00:25:43,000
你可以通过 set jump

782
00:25:43,000 --> 00:25:44,000
long jump 来

783
00:25:44,000 --> 00:25:45,000
但你可以

784
00:25:45,000 --> 00:25:46,000
说它没有原声的

785
00:25:46,000 --> 00:25:48,000
它没有在语言的层面上

786
00:25:48,000 --> 00:25:50,000
支持 exception 这个概念

787
00:25:50,000 --> 00:25:50,000
对

788
00:25:50,000 --> 00:25:52,000
然后就一般的错误处理

789
00:25:52,000 --> 00:25:56,000
是通过这个返回错误代码的方式来实现的

790
00:25:56,000 --> 00:25:57,000
对

791
00:25:57,000 --> 00:25:59,000
呃

792
00:25:59,000 --> 00:26:01,000
然后最近有些新新的语言

793
00:26:01,000 --> 00:26:02,000
反而是就

794
00:26:02,000 --> 00:26:03,000
就抛弃了 exception

795
00:26:03,000 --> 00:26:05,000
然后回归了 C 的这一点

796
00:26:05,000 --> 00:26:07,000
比如说我现在最近一直在用的这个

797
00:26:07,000 --> 00:26:10,000
go 就是那个 google 那个语言

798
00:26:10,000 --> 00:26:11,000
就它是没有 exception 的

799
00:26:11,000 --> 00:26:12,000
就所有的都是

800
00:26:12,000 --> 00:26:13,000
其实它有一种

801
00:26:13,000 --> 00:26:16,000
但是用的非常少吧

802
00:26:16,000 --> 00:26:18,000
对大部分时间是用那个

803
00:26:18,000 --> 00:26:22,000
就是 return error 这种方式来实现

804
00:26:22,000 --> 00:26:22,000
对

805
00:26:22,000 --> 00:26:26,000
我记得我在知乎上也回答过一个类似的问题

806
00:26:26,000 --> 00:26:29,000
就是有人问 swift 为什么要 exception

807
00:26:29,000 --> 00:26:31,000
然后我就

808
00:26:31,000 --> 00:26:35,000
我其实我也是一个觉得 exception 是一个比较

809
00:26:35,000 --> 00:26:36,000
不那么

810
00:26:36,000 --> 00:26:39,000
有点 overrated 这样一个功能

811
00:26:39,000 --> 00:26:39,000
呃

812
00:26:39,000 --> 00:26:42,000
所以你觉得这个 exception 的主要问题在哪里

813
00:26:42,000 --> 00:26:44,000
呃

814
00:26:44,000 --> 00:26:46,000
exception 有点像 go to 要我说的话

815
00:26:46,000 --> 00:26:47,000
对

816
00:26:47,000 --> 00:26:50,000
就是很多人把 exception 当 go to 用

817
00:26:50,000 --> 00:26:52,000
就如果发生 exception

818
00:26:52,000 --> 00:26:54,000
那你就有

819
00:26:54,000 --> 00:26:58,000
你此时你的程序会有时候会产生一种

820
00:26:58,000 --> 00:27:01,000
不可预知的走向

821
00:27:01,000 --> 00:27:01,000
对

822
00:27:01,000 --> 00:27:02,000
我觉得这是最主要的问题

823
00:27:02,000 --> 00:27:07,000
就是为什么就为什么我觉得 exception 不是特别好

824
00:27:07,000 --> 00:27:09,000
对原因也是因为就是

825
00:27:09,000 --> 00:27:12,000
就跟那个叫什么 go to is considered harmful 一样嘛

826
00:27:12,000 --> 00:27:15,000
就是 exception 它会导致你之前预设的

827
00:27:15,000 --> 00:27:16,000
那个

828
00:27:16,000 --> 00:27:17,000
呃

829
00:27:17,000 --> 00:27:18,000
叫什么 control floor 控制流

830
00:27:18,000 --> 00:27:19,000
会变得很乱

831
00:27:19,000 --> 00:27:20,000
对

832
00:27:20,000 --> 00:27:22,000
就是因为它一旦跑出 exception

833
00:27:22,000 --> 00:27:25,000
它整个的那个程序律性的逻辑

834
00:27:25,000 --> 00:27:27,000
就不再是按照那个线性的往下走

835
00:27:27,000 --> 00:27:29,000
而是跳到另外一个地方

836
00:27:29,000 --> 00:27:31,000
或者跳到调用层或者是更高层去了

837
00:27:31,000 --> 00:27:34,000
这样的话就会导致很多

838
00:27:34,000 --> 00:27:38,000
非常难以预料的那种场景的组合嘛

839
00:27:38,000 --> 00:27:38,000
对

840
00:27:38,000 --> 00:27:41,000
所以这样会导致很多问题

841
00:27:41,000 --> 00:27:42,000
对

842
00:27:42,000 --> 00:27:46,000
但是反过来 exception 的支持者

843
00:27:46,000 --> 00:27:50,000
也会说这是一种 necessary evil

844
00:27:50,000 --> 00:27:51,000
或者它甚至就不是 eval

845
00:27:51,000 --> 00:27:55,000
就是这是一种呃非常必要的功能

846
00:27:55,000 --> 00:28:00,000
就是它并不是呃

847
00:28:00,000 --> 00:28:03,000
它并不是一种错误

848
00:28:03,000 --> 00:28:06,000
它只是一种对于一种呃

849
00:28:06,000 --> 00:28:09,000
就是现实生活里面

850
00:28:09,000 --> 00:28:12,000
毕竟会出现的错误的

851
00:28:12,000 --> 00:28:15,000
不得不有了这么一种处理方式

852
00:28:15,000 --> 00:28:19,000
而且他们会说用返回值或者是

853
00:28:19,000 --> 00:28:21,000
像 objective c 这样的

854
00:28:21,000 --> 00:28:25,000
airpoint 的方式非常的原始古老

855
00:28:25,000 --> 00:28:27,000
而且会导致在嘛

856
00:28:27,000 --> 00:28:28,000
非常的永长

857
00:28:28,000 --> 00:28:28,000
对

858
00:28:28,000 --> 00:28:31,000
这也是确实是有我有写

859
00:28:31,000 --> 00:28:33,000
最近写的 go 也比较多遇到的一个问题

860
00:28:33,000 --> 00:28:35,000
就是之前

861
00:28:35,000 --> 00:28:38,000
因为 pyson 是支持 exception 机制的

862
00:28:38,000 --> 00:28:40,000
很多错误都通过那种那个流走

863
00:28:40,000 --> 00:28:42,000
就是正常的逻辑流就正常走

864
00:28:42,000 --> 00:28:46,000
然后 exception 就错处理是单独的一个方式走

865
00:28:46,000 --> 00:28:47,000
而且在 pyson 里面

866
00:28:47,000 --> 00:28:48,000
这甚至是一种 pattern

867
00:28:48,000 --> 00:28:50,000
就是 pyson 推荐你一种

868
00:28:50,000 --> 00:28:52,000
异常处理方式来

869
00:28:52,000 --> 00:28:52,000
处理出来

870
00:28:52,000 --> 00:28:54,000
当作 logic flow control

871
00:28:54,000 --> 00:28:55,000
对对

872
00:28:55,000 --> 00:28:56,000
就是它吧

873
00:28:56,000 --> 00:28:59,000
它是把这个就是正常情况下的一个流

874
00:28:59,000 --> 00:29:01,000
是说的比较简单

875
00:29:01,000 --> 00:29:03,000
因为你不需要做很多这种错误处理

876
00:29:03,000 --> 00:29:04,000
就一旦出错

877
00:29:04,000 --> 00:29:05,000
你就直接抛出一场

878
00:29:05,000 --> 00:29:06,000
就跳到另外一层就处理

879
00:29:06,000 --> 00:29:07,000
但是这会倒

880
00:29:07,000 --> 00:29:08,000
就会你会看起来

881
00:29:08,000 --> 00:29:10,000
那个代码很简单漂亮

882
00:29:10,000 --> 00:29:13,000
那样同样的要完成同样的事情

883
00:29:13,000 --> 00:29:14,000
然后在锅里面写就发现

884
00:29:14,000 --> 00:29:16,000
你每次调用一个函数

885
00:29:16,000 --> 00:29:19,000
都要都要检查一个 if arrow

886
00:29:19,000 --> 00:29:21,000
不等于这个 nil 怎么样

887
00:29:21,000 --> 00:29:21,000
对吧

888
00:29:21,000 --> 00:29:24,000
对就就其实会是叫做

889
00:29:24,000 --> 00:29:26,000
长话叫什么 boiler boilerplate

890
00:29:26,000 --> 00:29:27,000
对对对

891
00:29:27,000 --> 00:29:28,000
出现大量的这种

892
00:29:28,000 --> 00:29:29,000
其实没什么用

893
00:29:29,000 --> 00:29:31,000
但是又明明有意义的

894
00:29:31,000 --> 00:29:33,000
有意义的预计在里面

895
00:29:33,000 --> 00:29:34,000
对

896
00:29:34,000 --> 00:29:35,000
所以这牵涉的是一个

897
00:29:35,000 --> 00:29:37,000
还是刚才讲的是一个

898
00:29:37,000 --> 00:29:38,000
怎么认知的问题

899
00:29:38,000 --> 00:29:39,000
就说

900
00:29:39,000 --> 00:29:40,000
比如像刚刚我们讲

901
00:29:40,000 --> 00:29:42,000
拍照那种类型

902
00:29:42,000 --> 00:29:43,000
就为代表的

903
00:29:43,000 --> 00:29:44,000
也不只是拍照一种

904
00:29:44,000 --> 00:29:46,000
其实大多数支持 exception 的源

905
00:29:46,000 --> 00:29:47,000
都是推荐你这种方式

906
00:29:47,000 --> 00:29:49,000
就是正常的

907
00:29:49,000 --> 00:29:50,000
就是 control flow

908
00:29:50,000 --> 00:29:52,000
你用正常的 logic 4 j 下

909
00:29:52,000 --> 00:29:52,000
然后异常的

910
00:29:52,000 --> 00:29:55,000
你就走 exception handling 就好了

911
00:29:55,000 --> 00:29:57,000
然后这个像 go 和 c 这一派

912
00:29:57,000 --> 00:29:58,000
也说那你肯定是

913
00:29:58,000 --> 00:30:00,000
那你没有

914
00:30:00,000 --> 00:30:04,000
就是错误应该是你的逻辑的一部分

915
00:30:04,000 --> 00:30:04,000
就错误处理

916
00:30:04,000 --> 00:30:05,000
应该是你逻辑的一部分

917
00:30:05,000 --> 00:30:06,000
因为这次有这样

918
00:30:06,000 --> 00:30:08,000
才可能保证你的

919
00:30:08,000 --> 00:30:09,000
就出现任何情况

920
00:30:09,000 --> 00:30:12,000
你都是在可控的一个范围内对吧

921
00:30:12,000 --> 00:30:13,000
所以我觉得他们就是代表

922
00:30:13,000 --> 00:30:15,000
两种完全不一样的思维

923
00:30:15,000 --> 00:30:18,000
他看单就是说你喜欢用哪个

924
00:30:18,000 --> 00:30:20,000
就看你自己觉得了

925
00:30:20,000 --> 00:30:21,000
但是我觉得吧

926
00:30:21,000 --> 00:30:22,000
现在一般是

927
00:30:22,000 --> 00:30:23,000
我现在看法一般是这样子

928
00:30:23,000 --> 00:30:25,000
就是如果你写了这个程序

929
00:30:25,000 --> 00:30:29,000
就是需要非常 robust

930
00:30:29,000 --> 00:30:31,000
非常就是要长时间不间断

931
00:30:31,000 --> 00:30:32,000
然后不出错

932
00:30:32,000 --> 00:30:34,000
不 crush 的工作的话

933
00:30:34,000 --> 00:30:34,000
就不出现

934
00:30:34,000 --> 00:30:36,000
那个 blue screw of death

935
00:30:36,000 --> 00:30:37,000
然后 spinning beach ball of death

936
00:30:37,000 --> 00:30:39,000
这类的东西

937
00:30:39,000 --> 00:30:41,000
你还是可能要采用

938
00:30:41,000 --> 00:30:42,000
刚才像 c 啊

939
00:30:42,000 --> 00:30:43,000
go 为代表这种类型

940
00:30:43,000 --> 00:30:45,000
就是把错误处理

941
00:30:45,000 --> 00:30:46,000
作为你的程序

942
00:30:46,000 --> 00:30:47,000
要考虑的每一步

943
00:30:47,000 --> 00:30:48,000
这样会导致这个代码

944
00:30:48,000 --> 00:30:50,000
很庸长很麻烦

945
00:30:50,000 --> 00:30:51,000
但是他确实会保

946
00:30:51,000 --> 00:30:54,000
会保着你的每一种情况

947
00:30:54,000 --> 00:30:57,000
你的程序都是在一个可以预测的

948
00:30:57,000 --> 00:30:58,000
所以叫什么

949
00:30:58,000 --> 00:30:59,000
可控的那个状态内的

950
00:30:59,000 --> 00:31:00,000
我觉得

951
00:31:01,000 --> 00:31:01,000
对

952
00:31:01,000 --> 00:31:04,000
但其实你说的就是

953
00:31:04,000 --> 00:31:06,000
但其实这是一种不可能的状态

954
00:31:06,000 --> 00:31:11,000
就是在几乎在所有的编程语里面

955
00:31:11,000 --> 00:31:13,000
你都会遇到

956
00:31:13,000 --> 00:31:15,000
就在几乎在所有比较现代的

957
00:31:15,000 --> 00:31:16,000
编程语里面

958
00:31:16,000 --> 00:31:18,000
你都会遇到一种区分

959
00:31:18,000 --> 00:31:21,000
就是错误和异常的区分

960
00:31:21,000 --> 00:31:23,000
就是有一种异常是

961
00:31:23,000 --> 00:31:24,000
你可以控制的

962
00:31:24,000 --> 00:31:24,000
你可以预料到的

963
00:31:24,000 --> 00:31:27,000
比如说你要打开一个文件

964
00:31:27,000 --> 00:31:28,000
然后你发现这个文件不存在

965
00:31:28,000 --> 00:31:30,000
这是你可以预料到的异常

966
00:31:30,000 --> 00:31:32,000
可是有些异常是你预料不到的

967
00:31:32,000 --> 00:31:35,000
比如说像在 Java 里面

968
00:31:35,000 --> 00:31:37,000
有所谓

969
00:31:37,000 --> 00:31:38,000
就是我觉得

970
00:31:38,000 --> 00:31:40,000
这一直是我觉得 Java 非常二的一个特性

971
00:31:40,000 --> 00:31:43,000
就是有一个所谓 check 的 exception

972
00:31:43,000 --> 00:31:44,000
你在写一个方法的时候

973
00:31:44,000 --> 00:31:46,000
你要告诉方法的调用者

974
00:31:46,000 --> 00:31:49,000
这个方法可能抛出什么样的 exception

975
00:31:49,000 --> 00:31:51,000
这其实是一个看起来很美

976
00:31:51,000 --> 00:31:54,000
但是用起来非常不实际的这么一个功能

977
00:31:54,000 --> 00:31:56,000
就是在许多时候

978
00:31:56,000 --> 00:31:58,000
你是预料不到

979
00:31:58,000 --> 00:32:01,000
或者是作为一个会出错误的人

980
00:32:01,000 --> 00:32:04,000
你是没有办法完全的便利

981
00:32:04,000 --> 00:32:07,000
这一个方法可能出现的 exception 的情况

982
00:32:07,000 --> 00:32:08,000
对

983
00:32:08,000 --> 00:32:10,000
其实也是导致了非常多的 antiparton

984
00:32:10,000 --> 00:32:12,000
这个我觉得是

985
00:32:12,000 --> 00:32:14,000
就为什么会是一个问题

986
00:32:14,000 --> 00:32:17,000
如果你用这种就是返回错误的方法

987
00:32:17,000 --> 00:32:17,000
来处理

988
00:32:17,000 --> 00:32:19,000
为什么不能解决这个问题

989
00:32:19,000 --> 00:32:20,000
对

990
00:32:20,000 --> 00:32:21,000
你用返回错误的

991
00:32:21,000 --> 00:32:25,000
就是我觉得用错误返回值的语言

992
00:32:25,000 --> 00:32:29,000
其实是采用那种更为 pragmatical 的理念

993
00:32:29,000 --> 00:32:32,000
就是我处理所有我能遇见到的错误

994
00:32:32,000 --> 00:32:34,000
如果这个错误没有遇见到

995
00:32:34,000 --> 00:32:36,000
那我就让它 crash 好了

996
00:32:36,000 --> 00:32:37,000
对

997
00:32:37,000 --> 00:32:39,000
但是在很多

998
00:32:39,000 --> 00:32:40,000
或者也不是很多

999
00:32:40,000 --> 00:32:42,000
就是在部分编程语言里面

1000
00:32:42,000 --> 00:32:45,000
人们会觉得我有 exception control

1001
00:32:45,000 --> 00:32:46,000
我有这种机制在

1002
00:32:46,000 --> 00:32:50,000
那我就会尽可能的让我的程序不要 crash

1003
00:32:52,000 --> 00:32:54,000
我觉得很多扎的程序都是这样

1004
00:32:56,000 --> 00:32:56,000
我想想

1005
00:32:56,000 --> 00:32:58,000
就起码我最近在写购的时候

1006
00:32:58,000 --> 00:33:00,000
我没有遇到说

1007
00:33:00,000 --> 00:33:03,000
会有某一个错误

1008
00:33:03,000 --> 00:33:04,000
没有处理到

1009
00:33:04,000 --> 00:33:07,000
就 crash 的这种状况发生

1010
00:33:07,000 --> 00:33:08,000
对

1011
00:33:08,000 --> 00:33:09,000
因为这种错误

1012
00:33:09,000 --> 00:33:10,000
如一旦出现的话

1013
00:33:10,000 --> 00:33:13,000
基本上我觉得购程序是处理不了

1014
00:33:13,000 --> 00:33:13,000
还都不了的

1015
00:33:13,000 --> 00:33:15,000
比如说你运行时把你一块内存

1016
00:33:15,000 --> 00:33:20,000
把你的程序本身要怎么捍动

1017
00:33:20,000 --> 00:33:21,000
但如果遇到这种情况下

1018
00:33:21,000 --> 00:33:24,000
你用 exception control 也是没有办法的

1019
00:33:24,000 --> 00:33:27,000
就比如说你加了虚拟机内层出了问题

1020
00:33:27,000 --> 00:33:28,000
你上面能怎么办

1021
00:33:28,000 --> 00:33:29,000
也是没有任何办法

1022
00:33:29,000 --> 00:33:30,000
但是 sump out

1023
00:33:30,000 --> 00:33:32,000
我有时候我会有一种感觉

1024
00:33:32,000 --> 00:33:34,000
就是我用黑炸号程序

1025
00:33:34,000 --> 00:33:36,000
这个就不太好

1026
00:33:36,000 --> 00:33:38,000
在第一期里面就会树立这么多敌人的

1027
00:33:38,000 --> 00:33:38,000
算了

1028
00:33:38,000 --> 00:33:42,000
就是在某些比较广为人知的程序里面

1029
00:33:42,000 --> 00:33:44,000
程序会产生这样的错觉

1030
00:33:44,000 --> 00:33:45,000
就是我有异常处理机制

1031
00:33:45,000 --> 00:33:47,000
我几乎是可以处理一切一场的

1032
00:33:47,000 --> 00:33:49,000
但其实并不是这样

1033
00:33:49,000 --> 00:33:52,000
所以其实我觉得

1034
00:33:52,000 --> 00:33:56,000
如果要实现那种所有的错误都被预测到

1035
00:33:56,000 --> 00:33:59,000
所有的错误都被处理过

1036
00:33:59,000 --> 00:34:03,000
你可能是需要一些更加 formal 的一些机制

1037
00:34:03,000 --> 00:34:07,000
比如说你要去证明这个程序是不错

1038
00:34:07,000 --> 00:34:09,000
但是这种情况在现实中

1039
00:34:09,000 --> 00:34:11,000
基本上是不可能实现的

1040
00:34:11,000 --> 00:34:14,000
只有在一些非常受限的学术性的环境里面才可以

1041
00:34:15,000 --> 00:34:19,000
或者说你可以说

1042
00:34:19,000 --> 00:34:22,000
我程序本身并不提供这样的机制

1043
00:34:22,000 --> 00:34:25,000
但是我依赖于系统所提供的机制

1044
00:34:25,000 --> 00:34:26,000
就像你说的

1045
00:34:26,000 --> 00:34:29,000
你希望一个程序它稳定的运行

1046
00:34:29,000 --> 00:34:32,000
那么尽量可能都不出错不 crash

1047
00:34:32,000 --> 00:34:33,000
可是它一旦 crash 了怎么办呢

1048
00:34:33,000 --> 00:34:37,000
你可以说我把它做成一个 service

1049
00:34:37,000 --> 00:34:42,000
然后我们都知道 Linux 或者是 Windows 下面

1050
00:34:42,000 --> 00:34:46,000
对于一个 service 的控制里面

1051
00:34:46,000 --> 00:34:50,000
会有这样一项就是如果这个 servicecrash 了怎么办

1052
00:34:50,000 --> 00:34:53,000
那 Windows 下面比如说可以选说

1053
00:34:53,000 --> 00:34:54,000
尝试重新启动它

1054
00:34:54,000 --> 00:34:58,000
并且如果尝试重新启动三次它仍旧 crash 的话

1055
00:34:58,000 --> 00:34:59,000
那我就不再启动它了

1056
00:34:59,000 --> 00:35:02,000
那其实这些就是异常处理机制

1057
00:35:02,000 --> 00:35:08,000
那 Linux 其实也是类似的这样一个机制在里面

1058
00:35:08,000 --> 00:35:12,000
这里就牵涉到 Linux 上面也常见的那个叫做

1059
00:35:12,000 --> 00:35:13,000
你说 service 吗

1060
00:35:13,000 --> 00:35:16,000
他们就可能 Demon 的概念

1061
00:35:16,000 --> 00:35:18,000
然后 Demon 的话就会有相关的

1062
00:35:18,000 --> 00:35:23,000
像 Supervising 的一个机制在里面

1063
00:35:23,000 --> 00:35:23,000
对

1064
00:35:23,000 --> 00:35:27,000
你有没有最近关注 SystemD 这个话题

1065
00:35:27,000 --> 00:35:29,000
看了好久

1066
00:35:29,000 --> 00:35:32,000
对 我觉得挺扯的

1067
00:35:32,000 --> 00:35:35,000
你这些事情是态度是怎么样子

1068
00:35:35,000 --> 00:35:36,000
我觉得 SystemD

1069
00:35:36,000 --> 00:35:38,000
我也是觉得 SystemD 有一点激进了

1070
00:35:38,000 --> 00:35:42,000
但是怎么说呢

1071
00:35:42,000 --> 00:35:45,000
我觉得这一天迟早回来

1072
00:35:45,000 --> 00:35:48,000
就你觉得它激进的地方在哪里呢

1073
00:35:48,000 --> 00:35:54,000
就是它试图把一些它试图把所有的 Demon 的启动机制

1074
00:35:54,000 --> 00:35:57,000
乃至于系统的启动机制

1075
00:35:57,000 --> 00:35:59,000
军衣化模块化

1076
00:35:59,000 --> 00:36:03,000
然后就摒弃了很多传统

1077
00:36:04,000 --> 00:36:06,000
我不知道你没有读那篇文章

1078
00:36:06,000 --> 00:36:08,000
就是 SystemD 的主要维护者之一

1079
00:36:08,000 --> 00:36:09,000
他叫什么

1080
00:36:09,000 --> 00:36:11,000
他好像是个德国人

1081
00:36:11,000 --> 00:36:13,000
他在 blog 上发了一篇文章说

1082
00:36:13,000 --> 00:36:17,000
因为他开发 SystemD 已经受到了很多死亡威胁

1083
00:36:17,000 --> 00:36:20,000
甚至是有些人在写很酸的文章

1084
00:36:20,000 --> 00:36:23,000
在暗示要对它产生人身攻击

1085
00:36:23,000 --> 00:36:26,000
或者是有人写了歌来嘲讽他

1086
00:36:26,000 --> 00:36:28,000
恨不得他去死之类的

1087
00:36:28,000 --> 00:36:31,000
就是你会发现这种问题居然可以导致

1088
00:36:32,000 --> 00:36:34,000
非常 personal 的这么一个层面

1089
00:36:34,000 --> 00:36:37,000
对这就扯远了

1090
00:36:37,000 --> 00:36:38,000
但回到 SystemD

1091
00:36:38,000 --> 00:36:39,000
这个故事的教训是什么

1092
00:36:39,000 --> 00:36:40,000
不要激动一个程序员

1093
00:36:40,000 --> 00:36:41,000
对吧

1094
00:36:41,000 --> 00:36:42,000
不要激动一群程序员

1095
00:36:42,000 --> 00:36:45,000
不要像唐基克德一样去

1096
00:36:45,000 --> 00:36:46,000
对

1097
00:36:46,000 --> 00:36:48,000
但反过来

1098
00:36:48,000 --> 00:36:51,000
你可以说

1099
00:36:51,000 --> 00:36:54,000
就是因为会有这样的反应

1100
00:36:54,000 --> 00:36:58,000
体现出了 SystemD 到底

1101
00:36:58,000 --> 00:37:00,000
到底是一个多么激进的项目

1102
00:37:00,000 --> 00:37:03,000
对 我觉得可能我对它的一个

1103
00:37:03,000 --> 00:37:07,000
就是现在我其实是没有太明确的

1104
00:37:07,000 --> 00:37:09,000
反对或者是支持它的一个观点

1105
00:37:09,000 --> 00:37:12,000
但是我觉得有一些是值得商确的

1106
00:37:12,000 --> 00:37:17,000
比如说他把 PID 1 的那块做的那么重

1107
00:37:17,000 --> 00:37:19,000
真的好吗

1108
00:37:19,000 --> 00:37:19,000
对

1109
00:37:19,000 --> 00:37:21,000
就是此时你会有一个想法

1110
00:37:21,000 --> 00:37:24,000
就是 Linux 并不只是跑在你的笔记本

1111
00:37:24,000 --> 00:37:26,000
或者是跑在大型机上的

1112
00:37:26,000 --> 00:37:27,000
Linux 很多 Linux 是跑在

1113
00:37:27,000 --> 00:37:29,000
比如说像 Bitlone

1114
00:37:29,000 --> 00:37:32,000
或者像路由器上面的

1115
00:37:32,000 --> 00:37:33,000
Respire it

1116
00:37:33,000 --> 00:37:33,000
对

1117
00:37:33,000 --> 00:37:35,000
或者路由器上面的

1118
00:37:35,000 --> 00:37:35,000
对

1119
00:37:35,000 --> 00:37:38,000
那个地方的 Linux 真的要曠用 SystemD

1120
00:37:38,000 --> 00:37:39,000
有意义吗

1121
00:37:39,000 --> 00:37:40,000
好像也没有

1122
00:37:40,000 --> 00:37:41,000
对

1123
00:37:41,000 --> 00:37:42,000
现在我就觉得它

1124
00:37:42,000 --> 00:37:44,000
但它自己的说法是说

1125
00:37:44,000 --> 00:37:47,000
说我 SystemD 是一大块东西

1126
00:37:47,000 --> 00:37:50,000
你可以挑其中的一小部分来用

1127
00:37:50,000 --> 00:37:52,000
你不是要全部都用上

1128
00:37:52,000 --> 00:37:53,000
这显得很用种吗

1129
00:37:53,000 --> 00:37:55,000
你可以只用一小坨

1130
00:37:55,000 --> 00:37:56,000
但是我不知道

1131
00:37:56,000 --> 00:37:58,000
它那种组织的机制

1132
00:37:58,000 --> 00:37:59,000
还有那种思考的方式

1133
00:37:59,000 --> 00:38:02,000
我觉得很容易会导致一种

1134
00:38:02,000 --> 00:38:06,000
就是 unnecessary complexity 在里面

1135
00:38:06,000 --> 00:38:06,000
对

1136
00:38:06,000 --> 00:38:11,000
它会为了有这么一种比较均衣的模式

1137
00:38:11,000 --> 00:38:15,000
或者说为了设计而去牺牲功能

1138
00:38:15,000 --> 00:38:16,000
对

1139
00:38:16,000 --> 00:38:20,000
然后我也有看其他的一些

1140
00:38:20,000 --> 00:38:24,000
就是替代的那种 PID 1 的程序

1141
00:38:24,000 --> 00:38:26,000
比如说像 DGB

1142
00:38:26,000 --> 00:38:28,000
它们那些比较轻量级减化的

1143
00:38:28,000 --> 00:38:32,000
甚至就总共就只有可能不到 100 行 C 代码的

1144
00:38:32,000 --> 00:38:34,000
一些这种 unit 程序

1145
00:38:34,000 --> 00:38:35,000
我觉得是更好的

1146
00:38:35,000 --> 00:38:37,000
因为如果代码够少的话

1147
00:38:37,000 --> 00:38:39,000
你可以就是穷举掉

1148
00:38:39,000 --> 00:38:41,000
它所有可能出错的地方

1149
00:38:41,000 --> 00:38:44,000
因为这个 PID 1 是一个非常重要的程序

1150
00:38:44,000 --> 00:38:44,000
如果它 crash

1151
00:38:44,000 --> 00:38:46,000
你真的就只能 carnal panic

1152
00:38:46,000 --> 00:38:46,000
对

1153
00:38:46,000 --> 00:38:51,000
但是如果你这个东西就代码量复杂了

1154
00:38:51,000 --> 00:38:53,000
然后就刚才讲

1155
00:38:53,000 --> 00:38:55,000
你如果能出错的地方多了

1156
00:38:55,000 --> 00:38:56,000
那肯定是不可避免的

1157
00:38:56,000 --> 00:38:57,000
有些出错的地方

1158
00:38:57,000 --> 00:38:58,000
然后这个出错

1159
00:38:58,000 --> 00:39:00,000
会到这整个系统崩掉

1160
00:39:00,000 --> 00:39:03,000
所以如果有一个更加简洁的

1161
00:39:03,000 --> 00:39:05,000
或者甚至几十行

1162
00:39:05,000 --> 00:39:07,000
不到 100 行代码的能够实现

1163
00:39:07,000 --> 00:39:09,000
那你真的是可以用

1164
00:39:09,000 --> 00:39:10,000
甚至你可以用这种机器

1165
00:39:10,000 --> 00:39:13,000
就是证明的方法

1166
00:39:13,000 --> 00:39:14,000
就证明这个程序

1167
00:39:14,000 --> 00:39:15,000
可能会在哪些地方出错

1168
00:39:15,000 --> 00:39:17,000
然后那些可能出错的地方

1169
00:39:17,000 --> 00:39:18,000
你都已经顾及到了

1170
00:39:18,000 --> 00:39:19,000
对吧

1171
00:39:19,000 --> 00:39:22,000
你可以实现一个 100% reliable

1172
00:39:22,000 --> 00:39:23,000
就只要你的硬件是不出错的

1173
00:39:23,000 --> 00:39:28,000
软件可以保证 100%正常运行的

1174
00:39:28,000 --> 00:39:29,000
但是如果你是太复杂的话

1175
00:39:29,000 --> 00:39:30,000
你就做不到这一点

1176
00:39:30,000 --> 00:39:33,000
这点我是觉得是有一点点问题的

1177
00:39:34,000 --> 00:39:34,000
对

1178
00:39:34,000 --> 00:39:37,000
而且就是 systemd 的设计

1179
00:39:37,000 --> 00:39:39,000
与 unix 的哲学

1180
00:39:39,000 --> 00:39:42,000
就是 do one thing and do it well

1181
00:39:42,000 --> 00:39:44,000
有点相背倒而持

1182
00:39:44,000 --> 00:39:45,000
对

1183
00:39:45,000 --> 00:39:47,000
就是它释出实现很多事情

1184
00:39:47,000 --> 00:39:50,000
然后把很多功能集中在一个

1185
00:39:50,000 --> 00:39:52,000
单一的程序里面

1186
00:39:52,000 --> 00:39:54,000
当然 systemd 也不是一个单一的程序

1187
00:39:54,000 --> 00:39:56,000
但是它试图以这样一种

1188
00:39:56,000 --> 00:40:00,000
大一统的架构去解决一些

1189
00:40:01,000 --> 00:40:04,000
源头和本质都非常易购的问题

1190
00:40:04,000 --> 00:40:05,000
对

1191
00:40:05,000 --> 00:40:08,000
可能我觉得很多人对 systemd 的反感

1192
00:40:08,000 --> 00:40:09,000
倒不是说

1193
00:40:09,000 --> 00:40:12,000
但可能它不喜欢这种设计哲学

1194
00:40:12,000 --> 00:40:14,000
是一个最主要的因素

1195
00:40:14,000 --> 00:40:16,000
但是可能更多的一个是因为

1196
00:40:16,000 --> 00:40:20,000
它用某种政治的方法

1197
00:40:21,000 --> 00:40:22,000
在主流的发行版中

1198
00:40:22,000 --> 00:40:25,000
得到了一个正统的地位

1199
00:40:25,000 --> 00:40:26,000
对

1200
00:40:26,000 --> 00:40:29,000
代变也好像也是即将支持

1201
00:40:29,000 --> 00:40:33,000
就代变 8 里面它就会换成 systemd

1202
00:40:33,000 --> 00:40:34,000
之前是在浪费

1203
00:40:34,000 --> 00:40:37,000
做一个代变用户

1204
00:40:37,000 --> 00:40:41,000
我觉得还是有点不爽的

1205
00:40:42,000 --> 00:40:46,000
当然其实我觉得以我的水平来说

1206
00:40:46,000 --> 00:40:49,000
这种改变可能对于我的影响是被护其位的

1207
00:40:49,000 --> 00:40:52,000
那个其实也比较简单

1208
00:40:52,000 --> 00:40:54,000
让我用的长河也比较简单

1209
00:40:54,000 --> 00:40:55,000
但主要的问题就是

1210
00:40:55,000 --> 00:40:58,000
它的 upstart 的配置

1211
00:40:58,000 --> 00:41:00,000
不是一个完全的数据化的东西

1212
00:41:00,000 --> 00:41:03,000
它明天有包含可以调用销脚本

1213
00:41:03,000 --> 00:41:05,000
然后你一旦

1214
00:41:05,000 --> 00:41:07,000
其实也是一个安全隐患

1215
00:41:07,000 --> 00:41:07,000
对

1216
00:41:07,000 --> 00:41:08,000
不光是这个问题

1217
00:41:08,000 --> 00:41:09,000
就一旦你调销脚本之后

1218
00:41:09,000 --> 00:41:13,000
你整个东西就没有办法自动化来去分析

1219
00:41:13,000 --> 00:41:14,000
或者是处理了

1220
00:41:14,000 --> 00:41:15,000
对

1221
00:41:15,000 --> 00:41:17,000
这就打开林山

1222
00:41:17,000 --> 00:41:19,000
打开了一个 Panela 盒子

1223
00:41:19,000 --> 00:41:20,000
然后它就不再可控

1224
00:41:20,000 --> 00:41:21,000
对

1225
00:41:21,000 --> 00:41:24,000
就变成一个纯粹的叫做 descriptive

1226
00:41:24,000 --> 00:41:25,000
描述性的配置文件

1227
00:41:25,000 --> 00:41:27,000
变成一个 imparative

1228
00:41:27,000 --> 00:41:29,000
叫什么

1229
00:41:29,000 --> 00:41:31,000
叫可执行的配置文件

1230
00:41:31,000 --> 00:41:33,000
就变成就比较奇怪了

1231
00:41:33,000 --> 00:41:35,000
而且你想最近又出了那个 shout

1232
00:41:35,000 --> 00:41:36,000
等等

1233
00:41:36,000 --> 00:41:38,000
反过来了吧

1234
00:41:38,000 --> 00:41:43,000
为什么我记得 SystemD 里面的 demon 的描述文件是 descriptive

1235
00:41:43,000 --> 00:41:45,000
SystemD 是 descriptive

1236
00:41:45,000 --> 00:41:46,000
upstart 不是

1237
00:41:46,000 --> 00:41:48,000
upstart 是面子

1238
00:41:48,000 --> 00:41:51,000
或者是你可以嵌入这个比如说你的 pre-start

1239
00:41:51,000 --> 00:41:52,000
然后那么 post-start 之类的

1240
00:41:52,000 --> 00:41:54,000
你可以加入一些钩子

1241
00:41:54,000 --> 00:41:56,000
然后那钩子可以直接调用

1242
00:41:56,000 --> 00:41:58,000
你可以直接在那个配置文本里面

1243
00:41:58,000 --> 00:41:59,000
嵌入这个脚本的

1244
00:41:59,000 --> 00:42:01,000
执行的执行脚本的

1245
00:42:01,000 --> 00:42:04,000
那就会导致各种各样的麻烦

1246
00:42:04,000 --> 00:42:06,000
就没有完全解决

1247
00:42:06,000 --> 00:42:08,000
那个 sysv 的那些问题

1248
00:42:08,000 --> 00:42:12,000
然后刚好最近不是出了那个 shout shock 嘛

1249
00:42:12,000 --> 00:42:13,000
那很没

1250
00:42:13,000 --> 00:42:16,000
现在是 bash 这种老东西

1251
00:42:16,000 --> 00:42:18,000
也是可能会有很多坑的

1252
00:42:18,000 --> 00:42:19,000
所以 bash

1253
00:42:19,000 --> 00:42:20,000
对 bash

1254
00:42:20,000 --> 00:42:22,000
bashing bash

1255
00:42:22,000 --> 00:42:23,000
对

1256
00:42:23,000 --> 00:42:24,000
又扯远了

1257
00:42:24,000 --> 00:42:26,000
对

1258
00:42:26,000 --> 00:42:31,000
不过这可能就是 policast 的本来要做一件事吧

1259
00:42:31,000 --> 00:42:32,000
不听得扯远

1260
00:42:32,000 --> 00:42:33,000
OK

1261
00:42:33,000 --> 00:42:35,000
所以你觉得那个该讲

1262
00:42:35,000 --> 00:42:36,000
我们再讲 exception handling

1263
00:42:36,000 --> 00:42:39,000
你说 exception 应该在哪一层处理

1264
00:42:39,000 --> 00:42:41,000
这是一个很好的问题

1265
00:42:41,000 --> 00:42:45,000
就是 exception 其实是有不同层级的

1266
00:42:46,000 --> 00:42:50,000
我觉得我可能在小时候用 windows 的时候

1267
00:42:50,000 --> 00:42:52,000
这话说的

1268
00:42:52,000 --> 00:42:52,000
对

1269
00:42:52,000 --> 00:42:55,000
在以前用 windows 的时候

1270
00:42:55,000 --> 00:43:00,000
非常恼着内容错误提示就是一个红插了

1271
00:43:00,000 --> 00:43:01,000
popup

1272
00:43:01,000 --> 00:43:03,000
然后说严重错误

1273
00:43:03,000 --> 00:43:05,000
冒号

1274
00:43:05,000 --> 00:43:09,000
零 lx 某某某地址的内容

1275
00:43:09,000 --> 00:43:11,000
不应被访问之类的

1276
00:43:11,000 --> 00:43:13,000
然后程序终止

1277
00:43:13,000 --> 00:43:16,000
我觉得其实是非常愚蠢的一个错误提示

1278
00:43:16,000 --> 00:43:21,000
就是我当时做一个普通的用户

1279
00:43:21,000 --> 00:43:26,000
我凭什么要去读这个 16 进射的例子

1280
00:43:26,000 --> 00:43:29,000
就是你这个 popup 到底给我带来的什么呢

1281
00:43:29,000 --> 00:43:30,000
什么也没有

1282
00:43:30,000 --> 00:43:33,000
你只是告诉我我的游戏不能玩了

1283
00:43:33,000 --> 00:43:34,000
所以

1284
00:43:34,000 --> 00:43:35,000
那你不如直接告诉我

1285
00:43:35,000 --> 00:43:36,000
我游戏不能玩了就好

1286
00:43:36,000 --> 00:43:38,000
产品经理偷懒嘛

1287
00:43:38,000 --> 00:43:40,000
没有去做这个事情

1288
00:43:40,000 --> 00:43:42,000
这个不应该暴露给用户吗

1289
00:43:42,000 --> 00:43:44,000
我相信这是 windows 的问题

1290
00:43:44,000 --> 00:43:46,000
就是这种严重的错误级别

1291
00:43:46,000 --> 00:43:47,000
这种级别

1292
00:43:47,000 --> 00:43:48,000
就是现在我知道的

1293
00:43:48,000 --> 00:43:50,000
这样的错误提示显然是 windows 拋出来的

1294
00:43:50,000 --> 00:43:53,000
就是 windows 作为一个抢战士多任务的系统

1295
00:43:53,000 --> 00:43:56,000
它可以探测到程序访问的

1296
00:43:56,000 --> 00:43:57,000
不该访问的那一村

1297
00:43:57,000 --> 00:44:00,000
所以它会拋出这样的错误提示来

1298
00:44:00,000 --> 00:44:02,000
OK

1299
00:44:02,000 --> 00:44:03,000
对 我相信这种情况

1300
00:44:03,000 --> 00:44:07,000
我相信这种情况我在 macOS 10 上发生的话

1301
00:44:07,000 --> 00:44:09,000
macOS 10 会很简单的让它 crush

1302
00:44:09,000 --> 00:44:11,000
然后跳起来又对话框说

1303
00:44:11,000 --> 00:44:13,000
你刚才的程序 crush

1304
00:44:13,000 --> 00:44:15,000
你要发送一个错误报告给 Apple 吗

1305
00:44:15,000 --> 00:44:16,000
对啊

1306
00:44:16,000 --> 00:44:18,000
现在 windows 不是这样的吗

1307
00:44:18,000 --> 00:44:19,000
我运好多年没有

1308
00:44:19,000 --> 00:44:20,000
我不知道

1309
00:44:20,000 --> 00:44:21,000
就咱们两个都不是 windows

1310
00:44:21,000 --> 00:44:24,000
所以我觉得这期可能有点偏偏

1311
00:44:24,000 --> 00:44:27,000
不过其实我起码到 windows 7 的时候

1312
00:44:27,000 --> 00:44:28,000
还是有这个印象

1313
00:44:28,000 --> 00:44:33,000
就是 windows 上面就一旦出了任何预料之外的事情

1314
00:44:33,000 --> 00:44:37,000
它的那个错误提示都是非常的用户不友好

1315
00:44:37,000 --> 00:44:39,000
highly user friendly

1316
00:44:39,000 --> 00:44:41,000
对 而且它一定要你点一下

1317
00:44:41,000 --> 00:44:43,000
就是一定要跳出来告诉你

1318
00:44:43,000 --> 00:44:43,000
然后这个玩意挂了

1319
00:44:43,000 --> 00:44:44,000
对

1320
00:44:44,000 --> 00:44:45,000
而且你确认吧

1321
00:44:45,000 --> 00:44:46,000
而且你点 OK 了

1322
00:44:46,000 --> 00:44:49,000
是 windows 7 还是 vista 里面这个问题超严重

1323
00:44:49,000 --> 00:44:53,000
就是它每次就出现任何系统级别让你提示的东西

1324
00:44:53,000 --> 00:44:56,000
它会把所有的都挥掉

1325
00:44:56,000 --> 00:44:58,000
只出现那个框

1326
00:44:58,000 --> 00:44:58,000
对

1327
00:44:58,000 --> 00:45:01,000
就你没有办法去忽略它

1328
00:45:01,000 --> 00:45:03,000
然后就会导致一个问题就是

1329
00:45:03,000 --> 00:45:06,000
那普通用户他反正他也看不懂那个在说什么

1330
00:45:06,000 --> 00:45:06,000
对吧

1331
00:45:06,000 --> 00:45:07,000
然后那就点了

1332
00:45:07,000 --> 00:45:08,000
你在多出几次之后

1333
00:45:08,000 --> 00:45:10,000
他就见到这框就点

1334
00:45:10,000 --> 00:45:10,000
也不管他们说什么

1335
00:45:10,000 --> 00:45:13,000
就会导致他有一个叫什么

1336
00:45:13,000 --> 00:45:15,000
防止恶意程序的一种机制

1337
00:45:15,000 --> 00:45:16,000
对吧

1338
00:45:16,000 --> 00:45:18,000
我记得是 vista 里面开始有的吧

1339
00:45:18,000 --> 00:45:21,000
但是因为它把用户训练的

1340
00:45:21,000 --> 00:45:23,000
只要用到那框就点 OK

1341
00:45:23,000 --> 00:45:25,000
所以其实那个机制有了等于没有

1342
00:45:25,000 --> 00:45:28,000
你不断去反用户说

1343
00:45:28,000 --> 00:45:30,000
这个程序会怎么样

1344
00:45:30,000 --> 00:45:31,000
那个程序会怎么样

1345
00:45:31,000 --> 00:45:33,000
这就是所有人都去死

1346
00:45:33,000 --> 00:45:33,000
不管

1347
00:45:33,000 --> 00:45:36,000
就好像不停的弹窗

1348
00:45:36,000 --> 00:45:39,000
那么用户养成的习惯就是一键弹窗

1349
00:45:39,000 --> 00:45:39,000
立刻点关密

1350
00:45:39,000 --> 00:45:40,000
对

1351
00:45:40,000 --> 00:45:41,000
如果你不停挑对话框

1352
00:45:41,000 --> 00:45:42,000
用户的习惯就是

1353
00:45:42,000 --> 00:45:44,000
对话框出来不去读立刻点

1354
00:45:44,000 --> 00:45:47,000
一个可以让它最快消失的键

1355
00:45:47,000 --> 00:45:50,000
但其实现在我觉得就不管是在什么情况

1356
00:45:50,000 --> 00:45:54,000
就已经是绝大多数用户的第一发音了吧

1357
00:45:54,000 --> 00:45:54,000
对

1358
00:45:54,000 --> 00:45:55,000
就我们黑问都是

1359
00:45:55,000 --> 00:45:58,000
他其实很多麦坤户也是这样的

1360
00:45:58,000 --> 00:45:59,000
不过这些麦坤

1361
00:45:59,000 --> 00:46:01,000
这个情况小一些

1362
00:46:01,000 --> 00:46:05,000
比如说他是从 10 点几开始搭那个

1363
00:46:05,000 --> 00:46:06,000
叫什么玩意

1364
00:46:06,000 --> 00:46:08,000
就你点一下

1365
00:46:08,000 --> 00:46:12,000
他要经过他签名过的程序

1366
00:46:12,000 --> 00:46:13,000
才可以正常使用

1367
00:46:13,000 --> 00:46:17,000
在 security settings 里面叫认真

1368
00:46:17,000 --> 00:46:20,000
authorize developer 之类的功能

1369
00:46:20,000 --> 00:46:22,000
我看一下这个东西叫什么来着

1370
00:46:25,000 --> 00:46:26,000
对

1371
00:46:26,000 --> 00:46:28,000
就是 low apps downloaded from 什么

1372
00:46:28,000 --> 00:46:29,000
他有三个选项

1373
00:46:29,000 --> 00:46:31,000
就是他默认

1374
00:46:31,000 --> 00:46:34,000
就是默认是允许

1375
00:46:34,000 --> 00:46:35,000
app store 和

1376
00:46:35,000 --> 00:46:37,000
identify the developers

1377
00:46:37,000 --> 00:46:38,000
anywhere

1378
00:46:38,000 --> 00:46:38,000
对

1379
00:46:38,000 --> 00:46:38,000
对

1380
00:46:38,000 --> 00:46:40,000
基本上是我

1381
00:46:41,000 --> 00:46:42,000
好奇怪

1382
00:46:42,000 --> 00:46:43,000
我居然没有改过这一项

1383
00:46:43,000 --> 00:46:45,000
你的是默认是哪一个

1384
00:46:45,000 --> 00:46:46,000
第二个

1385
00:46:46,000 --> 00:46:46,000
就是

1386
00:46:46,000 --> 00:46:49,000
mac app store and identify the developers

1387
00:46:49,000 --> 00:46:49,000
对

1388
00:46:49,000 --> 00:46:52,000
你觉得你应该改哪一项

1389
00:46:53,000 --> 00:46:55,000
我竟然没有把它改成 anywhere

1390
00:46:55,000 --> 00:46:56,000
这是非常奇怪的一项

1391
00:46:56,000 --> 00:46:57,000
你为什么把它改成 anywhere

1392
00:46:58,000 --> 00:47:00,000
因为我觉得

1393
00:47:00,000 --> 00:47:02,000
这不是我不是在用 iOS

1394
00:47:02,000 --> 00:47:04,000
我知道我要干什么

1395
00:47:04,000 --> 00:47:05,000
我作为一个程序

1396
00:47:05,000 --> 00:47:08,000
我知道我下载的程序是什么

1397
00:47:08,000 --> 00:47:10,000
但至少是我认得我知道

1398
00:47:10,000 --> 00:47:13,000
所以你不要 stand in my way

1399
00:47:13,000 --> 00:47:15,000
然后告诉我我不应该做什么

1400
00:47:15,000 --> 00:47:19,000
我觉得我就是我知道有这三个选项

1401
00:47:19,000 --> 00:47:20,000
然后我是故意留的

1402
00:47:20,000 --> 00:47:22,000
就现在这个就是允许 app store

1403
00:47:22,000 --> 00:47:24,000
和受信任的开发者

1404
00:47:24,000 --> 00:47:25,000
然后这样一个好

1405
00:47:25,000 --> 00:47:27,000
这就是我从网上下载了一个程序之后

1406
00:47:27,000 --> 00:47:28,000
我可以很清楚的知道

1407
00:47:28,000 --> 00:47:30,000
这个程序是被开发者

1408
00:47:30,000 --> 00:47:32,000
自己签过名的名

1409
00:47:33,000 --> 00:47:35,000
如果他是没有被签过名的

1410
00:47:36,000 --> 00:47:38,000
然后我觉得他应该是有签名的的话

1411
00:47:38,000 --> 00:47:40,000
他可能我下的那个版本

1412
00:47:40,000 --> 00:47:42,000
可能会是一个叫做什么

1413
00:47:43,000 --> 00:47:44,000
contaminated 版本

1414
00:47:45,000 --> 00:47:45,000
对

1415
00:47:45,000 --> 00:47:47,000
但可是你不觉得这一点

1416
00:47:47,000 --> 00:47:50,000
其实对于你这个层级的程序上来说

1417
00:47:50,000 --> 00:47:51,000
很无击

1418
00:47:53,000 --> 00:47:55,000
你明明也会去用 bro

1419
00:47:55,000 --> 00:47:58,000
homebrew 或者是其他的脚本程序

1420
00:47:58,000 --> 00:48:00,000
有时候这些脚本程序有时候

1421
00:48:00,000 --> 00:48:01,000
有些人装包

1422
00:48:01,000 --> 00:48:02,000
他同样是需要你速度的

1423
00:48:02,000 --> 00:48:03,000
那这种情况下

1424
00:48:03,000 --> 00:48:06,000
你其实是这种程序是不会经过

1425
00:48:06,000 --> 00:48:08,000
vr

1426
00:48:08,000 --> 00:48:10,000
apple 的这一套认证机制

1427
00:48:10,000 --> 00:48:10,000
我用

1428
00:48:10,000 --> 00:48:11,000
可是你照样回去运行

1429
00:48:11,000 --> 00:48:13,000
我 homebrew 我不用速度

1430
00:48:13,000 --> 00:48:15,000
我把它那个就是 user local

1431
00:48:15,000 --> 00:48:17,000
改成了我自己属于我自己的

1432
00:48:17,000 --> 00:48:18,000
是 homebrew

1433
00:48:18,000 --> 00:48:19,000
对 homebrew 是一个不好的

1434
00:48:19,000 --> 00:48:22,000
但是我意思是你可以去运行一些脚本

1435
00:48:23,000 --> 00:48:24,000
脚本程序

1436
00:48:24,000 --> 00:48:26,000
而不仅仅是这种

1437
00:48:26,000 --> 00:48:29,000
经过 iPhone 大包的 bundle 程序

1438
00:48:29,000 --> 00:48:29,000
对

1439
00:48:29,000 --> 00:48:31,000
但那种程序的安全性是

1440
00:48:31,000 --> 00:48:34,000
不受这里的控制所保护的

1441
00:48:34,000 --> 00:48:35,000
对

1442
00:48:35,000 --> 00:48:37,000
我想想

1443
00:48:37,000 --> 00:48:37,000
我觉得是这样子

1444
00:48:37,000 --> 00:48:41,000
就是我知道我大部分时候在做什么

1445
00:48:41,000 --> 00:48:42,000
但是我不保证

1446
00:48:42,000 --> 00:48:44,000
有时候没睡醒的时候

1447
00:48:44,000 --> 00:48:46,000
或者是快睡着的时候

1448
00:48:46,000 --> 00:48:48,000
做的事情都是一定是合乎逻辑的

1449
00:48:48,000 --> 00:48:50,000
所以有这么一个安全机制

1450
00:48:50,000 --> 00:48:51,000
保护一下还是挺好的

1451
00:48:52,000 --> 00:48:53,000
然后要跳出这个机制

1452
00:48:53,000 --> 00:48:54,000
其实也很简单

1453
00:48:54,000 --> 00:48:56,000
就是你双机执行的 app 不行的话

1454
00:48:56,000 --> 00:48:59,000
你就右键调出那个

1455
00:48:59,000 --> 00:49:00,000
context menu

1456
00:49:00,000 --> 00:49:01,000
然后点 open 的话

1457
00:49:01,000 --> 00:49:02,000
它就可以绕过那个线子

1458
00:49:02,000 --> 00:49:04,000
它会问你确认一下

1459
00:49:04,000 --> 00:49:06,000
然后你再二次确认一下

1460
00:49:06,000 --> 00:49:06,000
就可以直接就行了

1461
00:49:06,000 --> 00:49:09,000
你也不需要把这个选项调成

1462
00:49:09,000 --> 00:49:10,000
low from anywhere

1463
00:49:10,000 --> 00:49:12,000
这样也就刹上面比较大了

1464
00:49:13,000 --> 00:49:13,000
对

1465
00:49:13,000 --> 00:49:17,000
所以就哪怕是你知道你在干什么

1466
00:49:17,000 --> 00:49:20,000
就好像就好像很多车

1467
00:49:20,000 --> 00:49:21,000
就你开车一样

1468
00:49:21,000 --> 00:49:21,000
对吧

1469
00:49:21,000 --> 00:49:22,000
你虽然就认识了怎么开

1470
00:49:22,000 --> 00:49:24,000
但是我觉得有这么一种安全机制

1471
00:49:24,000 --> 00:49:25,000
还是不错的

1472
00:49:26,000 --> 00:49:27,000
对

1473
00:49:27,000 --> 00:49:29,000
我其实刚才惊讶的是

1474
00:49:29,000 --> 00:49:31,000
我这台电脑买了也有

1475
00:49:31,000 --> 00:49:33,000
两个月了

1476
00:49:33,000 --> 00:49:37,000
就是买了台新的 MVP

1477
00:49:37,000 --> 00:49:38,000
然后这两个月里面

1478
00:49:38,000 --> 00:49:40,000
我居然从来没有改过

1479
00:49:40,000 --> 00:49:43,000
它也没有查学到任何不正常

1480
00:49:43,000 --> 00:49:45,000
或者说没查学到任何不便

1481
00:49:45,000 --> 00:49:47,000
所以说明两个问题对吧

1482
00:49:47,000 --> 00:49:50,000
要不你就是用的第三方软件比较少

1483
00:49:51,000 --> 00:49:52,000
要么就是

1484
00:49:53,000 --> 00:49:55,000
就是你遇到的都是那种

1485
00:49:55,000 --> 00:49:57,000
就是千年过的至少是

1486
00:49:58,000 --> 00:49:58,000
对

1487
00:49:58,000 --> 00:49:58,000
对

1488
00:49:58,000 --> 00:49:59,000
下来就

1489
00:49:59,000 --> 00:50:00,000
还证明了第三个问题

1490
00:50:00,000 --> 00:50:02,000
就是还证明了第三点

1491
00:50:02,000 --> 00:50:04,000
就是其实你的选择是比较理智

1492
00:50:04,000 --> 00:50:07,000
我有点太 over opening

1493
00:50:07,000 --> 00:50:08,000
对

1494
00:50:08,000 --> 00:50:09,000
对

1495
00:50:09,000 --> 00:50:11,000
我是就刚才讲了

1496
00:50:11,000 --> 00:50:13,000
我们刚才也在讲不想折腾

1497
00:50:13,000 --> 00:50:14,000
这也是其中一个

1498
00:50:14,000 --> 00:50:16,000
就是我最近还说了这么一个事情

1499
00:50:17,000 --> 00:50:18,000
就之前我打那个

1500
00:50:18,000 --> 00:50:20,000
在麦克像打中文输入法

1501
00:50:20,000 --> 00:50:22,000
对我一个叫做属许管的

1502
00:50:22,000 --> 00:50:23,000
一个一个

1503
00:50:23,000 --> 00:50:23,000
对

1504
00:50:23,000 --> 00:50:25,000
我用它对吧

1505
00:50:25,000 --> 00:50:25,000
对

1506
00:50:25,000 --> 00:50:27,000
如果有听众不知道的话

1507
00:50:27,000 --> 00:50:29,000
属许管是中文界最好的输入法

1508
00:50:29,000 --> 00:50:30,000
没有执意

1509
00:50:31,000 --> 00:50:34,000
然后免费为这个佛镇做出广告

1510
00:50:34,000 --> 00:50:34,000
对

1511
00:50:34,000 --> 00:50:35,000
对

1512
00:50:35,000 --> 00:50:37,000
连接用可以放到机盖里面

1513
00:50:37,000 --> 00:50:38,000
不过那个东西

1514
00:50:38,000 --> 00:50:40,000
其实还不算用户特别友好

1515
00:50:40,000 --> 00:50:41,000
它的那个

1516
00:50:41,000 --> 00:50:43,000
要改设置是要改配置文件的

1517
00:50:44,000 --> 00:50:47,000
但在麦克上面有一个 GUI 可以用的

1518
00:50:47,000 --> 00:50:48,000
对

1519
00:50:48,000 --> 00:50:48,000
对

1520
00:50:48,000 --> 00:50:49,000
把那个给大手连进去吧

1521
00:50:49,000 --> 00:50:50,000
但 anyway

1522
00:50:50,000 --> 00:50:51,000
我想说的是

1523
00:50:51,000 --> 00:50:53,000
我最近把属许管关掉

1524
00:50:53,000 --> 00:50:56,000
然后开始用系统默认的拼音输入法

1525
00:50:56,000 --> 00:50:57,000
就自带的那个

1526
00:50:57,000 --> 00:50:58,000
感觉怎么样

1527
00:50:58,000 --> 00:50:59,000
进展还不错

1528
00:51:00,000 --> 00:51:04,000
就是我没有觉得效率有特别大的影响

1529
00:51:04,000 --> 00:51:07,000
但一方面是因为我最近打中文也打的不多好

1530
00:51:07,000 --> 00:51:08,000
其实也无所谓

1531
00:51:08,000 --> 00:51:11,000
因为日常都是英文的比较多

1532
00:51:11,000 --> 00:51:15,000
然后中文的话也就进行给你们发发邮件

1533
00:51:15,000 --> 00:51:16,000
聊聊天之类的

1534
00:51:16,000 --> 00:51:17,000
是这样的

1535
00:51:17,000 --> 00:51:20,000
而且我觉得属许管让我觉得很不爽利的

1536
00:51:20,000 --> 00:51:22,000
就是我在输入

1537
00:51:22,000 --> 00:51:25,000
我不知道自带的中文输入法有没有这个问题

1538
00:51:25,000 --> 00:51:28,000
就是你在输入这个德语的叫 warm out 的时候

1539
00:51:28,000 --> 00:51:30,000
就是有些字母上面要加两点

1540
00:51:30,000 --> 00:51:32,000
在这种情况下

1541
00:51:32,000 --> 00:51:35,000
如果是麦克的英文状态

1542
00:51:35,000 --> 00:51:39,000
可以通过 alt 加上 u 来输入两点

1543
00:51:39,000 --> 00:51:41,000
然后再按一个字母

1544
00:51:41,000 --> 00:51:45,000
这样就可以形成这个字母上面加两点的组合

1545
00:51:45,000 --> 00:51:46,000
但是在属许管里面是没有的

1546
00:51:46,000 --> 00:51:51,000
其实我一直想要给佛正提一个 bug request

1547
00:51:51,000 --> 00:51:56,000
因为有些组合件在属许管下面是可以认出来的

1548
00:51:56,000 --> 00:51:57,000
但是这个没有

1549
00:51:57,000 --> 00:52:00,000
所以他是因为有他被诈用了吗

1550
00:52:00,000 --> 00:52:01,000
还是怎么样

1551
00:52:01,000 --> 00:52:02,000
应该不是吧

1552
00:52:02,000 --> 00:52:06,000
比如说在属许管下面你按 lt 加 a

1553
00:52:06,000 --> 00:52:08,000
你可以打出 A 一片

1554
00:52:09,000 --> 00:52:10,000
是吧

1555
00:52:10,000 --> 00:52:10,000
不是一片

1556
00:52:10,000 --> 00:52:13,000
应该是挪威语的 O

1557
00:52:13,000 --> 00:52:15,000
就是 A 上面加一个圈

1558
00:52:15,000 --> 00:52:16,000
OK

1559
00:52:16,000 --> 00:52:16,000
我不确定

1560
00:52:16,000 --> 00:52:18,000
但应该是可以的

1561
00:52:18,000 --> 00:52:24,000
但是你要想打 warm out 的时候都不可以

1562
00:52:24,000 --> 00:52:27,000
我觉得他可能 warm out 是不是也是类似一种

1563
00:52:27,000 --> 00:52:28,000
IME 的方式来实现

1564
00:52:28,000 --> 00:52:29,000
你看

1565
00:52:29,000 --> 00:52:33,000
warm out 就是你先按一个键

1566
00:52:33,000 --> 00:52:34,000
再按其他键

1567
00:52:34,000 --> 00:52:37,000
然后这两个键组合成一个字母的方式

1568
00:52:37,000 --> 00:52:38,000
是走到 deadkey

1569
00:52:38,000 --> 00:52:44,000
deadkey 应该是可以通过被 IME 改变的

1570
00:52:44,000 --> 00:52:51,000
但是我相信它是可以不去改系统既有的这种 deadkey 设置的

1571
00:52:51,000 --> 00:52:52,000
OK

1572
00:52:52,000 --> 00:52:52,000
所以

1573
00:52:52,000 --> 00:52:52,000
对

1574
00:52:52,000 --> 00:52:54,000
我也没有做过这些东西

1575
00:52:54,000 --> 00:52:55,000
我只是我的猜想

1576
00:52:55,000 --> 00:52:58,000
那你可以给他提个 bug request

1577
00:52:58,000 --> 00:52:58,000
对

1578
00:52:58,000 --> 00:52:59,000
poor request

1579
00:52:59,000 --> 00:53:00,000
你自己改了好了

1580
00:53:00,000 --> 00:53:01,000
bug request

1581
00:53:01,000 --> 00:53:03,000
我不知道怎么改

1582
00:53:03,000 --> 00:53:05,000
我太弱了

1583
00:53:05,000 --> 00:53:06,000
不

1584
00:53:06,000 --> 00:53:07,000
我相信

1585
00:53:07,000 --> 00:53:08,000
这等等

1586
00:53:08,000 --> 00:53:09,000
储蓄碗是用什么写的

1587
00:53:09,000 --> 00:53:10,000
C

1588
00:53:10,000 --> 00:53:11,000
C 加加

1589
00:53:11,000 --> 00:53:12,000
好问题

1590
00:53:12,000 --> 00:53:13,000
我不知道

1591
00:53:13,000 --> 00:53:15,000
没有关注过

1592
00:53:15,000 --> 00:53:18,000
我昨天去面试的时候

1593
00:53:18,000 --> 00:53:20,000
对

1594
00:53:20,000 --> 00:53:21,000
听众朋友

1595
00:53:21,000 --> 00:53:25,000
我作为一个目前你们还不太了解的主持人

1596
00:53:25,000 --> 00:53:27,000
昨天我去面试新工作

1597
00:53:27,000 --> 00:53:28,000
就是在面试的时候

1598
00:53:28,000 --> 00:53:32,000
他们给了我一个一道面试题

1599
00:53:32,000 --> 00:53:34,000
面试题里面写说

1600
00:53:35,000 --> 00:53:37,000
最好能用 C 加加解决

1601
00:53:37,000 --> 00:53:39,000
然后我心里就流汗

1602
00:53:39,000 --> 00:53:41,000
我说

1603
00:53:41,000 --> 00:53:43,000
照片简历上跟没写

1604
00:53:43,000 --> 00:53:44,000
说一定要回 C 加加

1605
00:53:44,000 --> 00:53:45,000
而且我真的是不会 C 加加

1606
00:53:45,000 --> 00:53:46,000
然后我就说

1607
00:53:46,000 --> 00:53:47,000
我切成他们

1608
00:53:47,000 --> 00:53:49,000
我能用 paradise 写吗

1609
00:53:49,000 --> 00:53:50,000
让他们说可以

1610
00:53:50,000 --> 00:53:53,000
然后用一秒钟写出来了

1611
00:53:53,000 --> 00:53:54,000
效率

1612
00:53:54,000 --> 00:53:55,000
效率顿时就不一样了

1613
00:53:55,000 --> 00:53:56,000
对

1614
00:53:56,000 --> 00:53:57,000
我觉得

1615
00:53:57,000 --> 00:53:58,000
对

1616
00:53:58,000 --> 00:53:59,000
但是我也不是很骄傲

1617
00:53:59,000 --> 00:54:01,000
因为我觉得如果能用

1618
00:54:01,000 --> 00:54:03,000
能在 10 秒钟之内用 C 加加写出来

1619
00:54:03,000 --> 00:54:04,000
可能更快

1620
00:54:04,000 --> 00:54:06,000
可能更会受到机赏

1621
00:54:06,000 --> 00:54:08,000
你这样用一秒写出来更爽

1622
00:54:10,000 --> 00:54:10,000
对呀

1623
00:54:10,000 --> 00:54:11,000
一秒可能夸张了

1624
00:54:11,000 --> 00:54:12,000
可能三秒

1625
00:54:12,000 --> 00:54:14,000
就是毕竟要写一个

1626
00:54:14,000 --> 00:54:16,000
打几个字是吧

1627
00:54:16,000 --> 00:54:17,000
嗯

1628
00:54:17,000 --> 00:54:17,000
对

1629
00:54:17,000 --> 00:54:17,000
这是一个

1630
00:54:17,000 --> 00:54:18,000
你

1631
00:54:18,000 --> 00:54:19,000
你有在找工作吗

1632
00:54:19,000 --> 00:54:20,000
我没有叉开了

1633
00:54:20,000 --> 00:54:21,000
不关 LV

1634
00:54:21,000 --> 00:54:21,000
叉开

1635
00:54:21,000 --> 00:54:23,000
目前还没有

1636
00:54:23,000 --> 00:54:24,000
你想

1637
00:54:24,000 --> 00:54:26,000
你是什么时候毕业

1638
00:54:26,000 --> 00:54:27,000
理论上是明年吧

1639
00:54:29,000 --> 00:54:29,000
对

1640
00:54:29,000 --> 00:54:31,000
我们的嘉宾主持 Rail

1641
00:54:31,000 --> 00:54:32,000
现在还在读博士

1642
00:54:32,000 --> 00:54:33,000
Rail 博士你好

1643
00:54:34,000 --> 00:54:34,000
但是

1644
00:54:34,000 --> 00:54:36,000
还没排不算

1645
00:54:37,000 --> 00:54:37,000
对

1646
00:54:37,000 --> 00:54:38,000
就是 Dr.Rail

1647
00:54:38,000 --> 00:54:39,000
不是生

1648
00:54:39,000 --> 00:54:39,000
对

1649
00:54:39,000 --> 00:54:39,000
不是生

1650
00:54:39,000 --> 00:54:40,000
不是生

1651
00:54:41,000 --> 00:54:42,000
Dr.RailGonnaV

1652
00:54:43,000 --> 00:54:44,000
对

1653
00:54:44,000 --> 00:54:45,000
北京时间

1654
00:54:46,000 --> 00:54:47,000
百分号 H

1655
00:54:47,000 --> 00:54:49,000
百分号 M 分

1656
00:54:49,000 --> 00:54:51,000
您现在是收听到的是内核恐慌

1657
00:54:51,000 --> 00:54:53,000
有 Dr.RailGonnaV

1658
00:54:54,000 --> 00:54:56,000
吴陶文你主持的一款

1659
00:54:57,000 --> 00:54:58,000
普通人也能听懂

1660
00:54:58,000 --> 00:55:00,000
但是普通人一般不会来听的

1661
00:55:00,000 --> 00:55:01,000
IT 不可解论

1662
00:55:01,000 --> 00:55:03,000
你确定普通人能听懂吗

1663
00:55:04,000 --> 00:55:05,000
呈学员能够听懂

1664
00:55:05,000 --> 00:55:08,000
但是呈学员一般不听的不可解论

1665
00:55:08,000 --> 00:55:09,000
我们这样不好

1666
00:55:09,000 --> 00:55:11,000
我觉得应该要做成

1667
00:55:11,000 --> 00:55:12,000
诚实人能听懂

1668
00:55:12,000 --> 00:55:13,000
但是诚实人来听

1669
00:55:13,000 --> 00:55:15,000
然后普通人不会听的不可就好了

1670
00:55:16,000 --> 00:55:18,000
或者说

1671
00:55:18,000 --> 00:55:18,000
诚实人都喜欢听

1672
00:55:18,000 --> 00:55:21,000
但是诚实人甚至不一定能听懂的不可解论

1673
00:55:21,000 --> 00:55:23,000
那好失败感觉

1674
00:55:23,000 --> 00:55:24,000
No no no

1675
00:55:24,000 --> 00:55:26,000
这样会让诚实人产生一种挫折感

1676
00:55:26,000 --> 00:55:29,000
然后会奋发 突强

1677
00:55:29,000 --> 00:55:34,000
去学到能够来 beaching 我们的节目

1678
00:55:34,000 --> 00:55:36,000
种种微小的错误的水平

1679
00:55:36,000 --> 00:55:38,000
这就是达到我们节目的目的了

1680
00:55:38,000 --> 00:55:38,000
OK

1681
00:55:40,000 --> 00:55:41,000
所以怎么样

1682
00:55:41,000 --> 00:55:42,000
今天到此为止

1683
00:55:44,000 --> 00:55:45,000
我们录了多久

1684
00:55:45,000 --> 00:55:47,000
差不多一小时了

1685
00:55:47,000 --> 00:55:48,000
对

1686
00:55:48,000 --> 00:55:49,000
OK

1687
00:55:49,000 --> 00:55:49,000
对

1688
00:55:49,000 --> 00:55:50,000
那我们

1689
00:55:50,000 --> 00:55:51,000
那就控制在一小时内吧

1690
00:55:51,000 --> 00:55:52,000
OK

1691
00:55:52,000 --> 00:55:53,000
就这样夹着而止

1692
00:55:53,000 --> 00:55:56,000
那么不知道各位听懂听懂

1693
00:55:56,000 --> 00:55:57,000
那个字念夹啊

1694
00:55:59,000 --> 00:56:00,000
读念夹吗

1695
00:56:00,000 --> 00:56:01,000
我不知道

1696
00:56:01,000 --> 00:56:03,000
我经常会念错字

1697
00:56:03,000 --> 00:56:05,000
然后被听众那个指出

1698
00:56:05,000 --> 00:56:05,000
然后说啊

1699
00:56:05,000 --> 00:56:06,000
我一下子这么念

1700
00:56:08,000 --> 00:56:10,000
我希望是夹而止

1701
00:56:10,000 --> 00:56:10,000
对

1702
00:56:10,000 --> 00:56:13,000
假如你认为这个字有其他的念法

1703
00:56:13,000 --> 00:56:17,000
也请你也欢迎你联同其他反馈告诉我们

1704
00:56:17,000 --> 00:56:17,000
哎我们

1705
00:56:17,000 --> 00:56:18,000
我们的

1706
00:56:18,000 --> 00:56:19,000
对

1707
00:56:19,000 --> 00:56:20,000
要有个反馈的意思

1708
00:56:20,000 --> 00:56:21,000
我们的 producer 是 Laurence Lee

1709
00:56:21,000 --> 00:56:23,000
他会为我们剪辑

1710
00:56:23,000 --> 00:56:24,000
今天的这款剪

1711
00:56:25,000 --> 00:56:27,000
我们有我们还没有说教媒体啊

1712
00:56:28,000 --> 00:56:29,000
我觉得对

1713
00:56:29,000 --> 00:56:30,000
暂时如果有反馈的话

1714
00:56:30,000 --> 00:56:31,000
可以直接反馈

1715
00:56:31,000 --> 00:56:32,000
IT 公论

1716
00:56:32,000 --> 00:56:36,000
IT 公论的推特账号是 IT 公论的全篇

1717
00:56:36,000 --> 00:56:37,000
推特

1718
00:56:37,000 --> 00:56:39,000
我在模仿 Laurence

1719
00:56:39,000 --> 00:56:39,000
不不

1720
00:56:39,000 --> 00:56:40,000
这个算

1721
00:56:40,000 --> 00:56:40,000
这个我们发

1722
00:56:40,000 --> 00:56:42,000
我做有一个邮箱地址吧

1723
00:56:42,000 --> 00:56:43,000
到时候会有一个

1724
00:56:43,000 --> 00:56:46,000
就每个播客在 IPM 都会有一个邮箱的吗

1725
00:56:46,000 --> 00:56:47,000
对

1726
00:56:47,000 --> 00:56:50,000
但是每一个播客会在推特或者是微博上面

1727
00:56:50,000 --> 00:56:51,000
有细节账号

1728
00:56:51,000 --> 00:56:52,000
下次吧

1729
00:56:52,000 --> 00:56:53,000
叮咚

1730
00:56:53,000 --> 00:56:54,000
等等等等等等

1731
00:56:54,000 --> 00:56:55,000
不要下次了

1732
00:56:55,000 --> 00:56:57,000
事实上在我剪辑播客的时候

1733
00:56:57,000 --> 00:56:58,000
Rail 已经效率非常高的

1734
00:56:58,000 --> 00:57:02,000
把内核恐慌的社交网络账号注册好了

1735
00:57:02,000 --> 00:57:06,000
我们在新浪微博和推特都是叫

1736
00:57:06,000 --> 00:57:07,000
Colonal Panic FM

1737
00:57:07,000 --> 00:57:09,000
Colonal Panic FM

1738
00:57:09,000 --> 00:57:13,000
K-E-R-N-E-L-P-A-N-I-C-F-N

1739
00:57:15,000 --> 00:57:17,000
所以这样关注没有人和反馈

1740
00:57:17,000 --> 00:57:18,000
可以给我们写

1741
00:57:18,000 --> 00:57:19,000
我介绍有些有件地就是

1742
00:57:19,000 --> 00:57:21,000
Colonal Panic

1743
00:57:21,000 --> 00:57:26,000
K-E-R-N-E-L-P-A-N-I-C-F-N

1744
00:57:26,000 --> 00:57:28,000
IPN.li

1745
00:57:28,000 --> 00:57:29,000
写在一起中间没有到头

1746
00:57:29,000 --> 00:57:30,000
Dash

1747
00:57:30,000 --> 00:57:31,000
然后部分打

1748
00:57:31,000 --> 00:57:31,000
也没有下滑线

1749
00:57:33,000 --> 00:57:33,000
有点长

1750
00:57:36,000 --> 00:57:37,000
那今天节目先到这里

1751
00:57:37,000 --> 00:57:40,000
然后我们下期再见

1752
00:57:40,000 --> 00:57:41,000
OK

1753
00:57:41,000 --> 00:57:42,000
拜拜

1754
00:57:42,000 --> 00:57:42,000
拜拜

