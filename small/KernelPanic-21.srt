1
00:00:00,000 --> 00:00:04,000
欢迎收听 ipinpodcast 的网络旗下的 ID 技术主题节目

2
00:00:04,000 --> 00:00:06,000
技术主题娱乐节目

3
00:00:06,000 --> 00:00:07,000
内核恐慌

4
00:00:07,000 --> 00:00:09,000
我们号称 Hakko 但是没有干货

5
00:00:09,000 --> 00:00:11,000
想听人听不想听人就别听

6
00:00:11,000 --> 00:00:15,000
内核恐慌的网址是 ipin.li.curtopanic

7
00:00:15,000 --> 00:00:18,000
我们推荐大家使用 podcast 客户端订阅我们的节目

8
00:00:18,000 --> 00:00:21,000
如果您不知道该用的一个客户端

9
00:00:21,000 --> 00:00:24,000
欢迎访问 ipin.li.faq

10
00:00:24,000 --> 00:00:26,000
同样欢迎你为我们的节目捐款

11
00:00:26,000 --> 00:00:30,000
捐款地址是 ipin.li.curtopanic.donate

12
00:00:30,000 --> 00:00:34,000
捐款机会随意只要是能够被 8 整处的正流数的课

13
00:00:34,000 --> 00:00:35,000
捐款不会为你带来什么

14
00:00:35,000 --> 00:00:37,000
不决定不会让你失去什么

15
00:00:37,000 --> 00:00:41,000
我们口号是 nohuff feelings

16
00:00:41,000 --> 00:00:44,000
好了

17
00:00:44,000 --> 00:00:47,000
今天是第 21 期节目

18
00:00:47,000 --> 00:00:49,000
您的嗓子怎么样

19
00:00:49,000 --> 00:00:51,000
还凑合现在

20
00:00:51,000 --> 00:00:53,000
你怎么样

21
00:00:56,000 --> 00:00:58,000
这倒不是故意加的吧

22
00:00:58,000 --> 00:00:59,000
这段千万要磨掉

23
00:00:59,000 --> 00:01:04,000
我在女朋友的细心照料之下现在已经好了九成

24
00:01:04,000 --> 00:01:06,000
但是剩下的异程总是在

25
00:01:06,000 --> 00:01:07,000
总是一直困扰着我

26
00:01:07,000 --> 00:01:09,000
说的句话还是会咳嗽一下

27
00:01:09,000 --> 00:01:12,000
然后就会产生那种

28
00:01:12,000 --> 00:01:15,000
第一句话前面说的比较平缓

29
00:01:15,000 --> 00:01:16,000
后面越说越急

30
00:01:16,000 --> 00:01:17,000
说之后一开始咳了

31
00:01:17,000 --> 00:01:18,000
没气儿是吧

32
00:01:18,000 --> 00:01:20,000
对我发现有这个状况

33
00:01:20,000 --> 00:01:23,000
这上次感冒的好像是有这叫什么来的

34
00:01:23,000 --> 00:01:24,000
就是一管言对吧

35
00:01:24,000 --> 00:01:28,000
对其实就是咽言转化转化成知识玩言

36
00:01:28,000 --> 00:01:29,000
这怎么算

37
00:01:29,000 --> 00:01:31,000
同病相连

38
00:01:31,000 --> 00:01:36,000
还是说什么歌空传言

39
00:01:36,000 --> 00:01:38,000
对这病毒现在已经可以电子化了

40
00:01:38,000 --> 00:01:40,000
然后数据 digitalized

41
00:01:40,000 --> 00:01:42,000
然后传到这边

42
00:01:42,000 --> 00:01:46,000
真实的 virus spread across the cybernet

43
00:01:46,000 --> 00:01:49,000
对

44
00:01:49,000 --> 00:01:52,000
要生物能不能真的有一天

45
00:01:52,000 --> 00:01:54,000
以数的话的形式存在

46
00:01:54,000 --> 00:01:55,000
理论上可以吧

47
00:01:55,000 --> 00:01:57,000
就是那边探测一下 DNA

48
00:01:57,000 --> 00:01:59,000
然后这边合成一下

49
00:01:59,000 --> 00:02:00,000
就出来了吗

50
00:02:00,000 --> 00:02:01,000
make a movement

51
00:02:01,000 --> 00:02:01,000
对吧

52
00:02:01,000 --> 00:02:03,000
搞个 3 D 打印机

53
00:02:03,000 --> 00:02:04,000
直接打印病毒出来

54
00:02:04,000 --> 00:02:06,000
你说的是传输生命

55
00:02:06,000 --> 00:02:09,000
我想的是能不能就让生命

56
00:02:09,000 --> 00:02:11,000
就这么生存在网络上

57
00:02:11,000 --> 00:02:14,000
就不用再转化为一个实体

58
00:02:14,000 --> 00:02:15,000
有什么

59
00:02:15,000 --> 00:02:17,000
这个就那天我们还在那个

60
00:02:17,000 --> 00:02:19,000
id 功能里面聊这个事情

61
00:02:19,000 --> 00:02:21,000
要实现这一点

62
00:02:21,000 --> 00:02:22,000
我们现在要解决一些

63
00:02:22,000 --> 00:02:23,000
哲学上的问题

64
00:02:23,000 --> 00:02:26,000
什么叫生存是不是

65
00:02:26,000 --> 00:02:27,000
对吧

66
00:02:27,000 --> 00:02:28,000
什么叫意识

67
00:02:28,000 --> 00:02:29,000
对不对

68
00:02:29,000 --> 00:02:31,000
现在其实这个问题有答案了吗

69
00:02:31,000 --> 00:02:32,000
我现在还没有看到

70
00:02:32,000 --> 00:02:35,000
有一个什么确切的靠谱的解吧

71
00:02:35,000 --> 00:02:35,000
不知道

72
00:02:35,000 --> 00:02:36,000
我觉得下次你们可以请

73
00:02:36,000 --> 00:02:39,000
那个脑科学博士赵辰

74
00:02:39,000 --> 00:02:41,000
上一次你们的节目

75
00:02:41,000 --> 00:02:41,000
然后

76
00:02:43,000 --> 00:02:43,000
OK

77
00:02:43,000 --> 00:02:44,000
对啊

78
00:02:44,000 --> 00:02:45,000
好吧

79
00:02:45,000 --> 00:02:47,000
那我们先

80
00:02:49,000 --> 00:02:51,000
加上一些反馈

81
00:02:51,000 --> 00:02:52,000
嗯

82
00:02:52,000 --> 00:02:52,000
好

83
00:02:52,000 --> 00:02:54,000
我有一个反馈

84
00:02:54,000 --> 00:02:56,000
有一位叫做

85
00:02:56,000 --> 00:02:57,000
daymark 的朋友

86
00:02:57,000 --> 00:03:00,000
在微博上给我们留了个言

87
00:03:00,000 --> 00:03:01,000
他这个消息这么说的

88
00:03:01,000 --> 00:03:02,000
有个问题想问 Ryo

89
00:03:02,000 --> 00:03:04,000
在看不到语言码的情况下

90
00:03:04,000 --> 00:03:06,000
如何知道 one password

91
00:03:06,000 --> 00:03:10,000
不是一个密码专业盗窃器呢

92
00:03:10,000 --> 00:03:12,000
以上期测试的语言来说

93
00:03:12,000 --> 00:03:14,000
我们只能把成语当作一个黑箱

94
00:03:14,000 --> 00:03:16,000
给一些输入来观察输出

95
00:03:16,000 --> 00:03:19,000
但是我们并不能证明答应号

96
00:03:19,000 --> 00:03:21,000
它是可信的

97
00:03:21,000 --> 00:03:23,000
也就是说实质上是我们选择

98
00:03:23,000 --> 00:03:25,000
相信 one password

99
00:03:25,000 --> 00:03:28,000
想请问 Ryo 是一句哪些因素认为

100
00:03:28,000 --> 00:03:31,000
one password 可信的呢

101
00:03:31,000 --> 00:03:33,000
然后他的第二个问题是说

102
00:03:33,000 --> 00:03:37,000
是否 Ryo 只在 one password 存储安全等级

103
00:03:37,000 --> 00:03:38,000
较低的密码

104
00:03:38,000 --> 00:03:41,000
那我能能能能能问一下

105
00:03:41,000 --> 00:03:43,000
安全等级较高的信息

106
00:03:43,000 --> 00:03:46,000
比如财务相关的 Ryo 会数字化吗

107
00:03:46,000 --> 00:03:47,000
如果会的话

108
00:03:47,000 --> 00:03:49,000
Ryo 的方案是什么

109
00:03:49,000 --> 00:03:50,000
这里集中解答一下

110
00:03:50,000 --> 00:03:55,000
首先我已经不用 one password 的

111
00:03:55,000 --> 00:03:57,000
其实我也没怎么用过

112
00:03:57,000 --> 00:03:59,000
他就是当时就有买

113
00:03:59,000 --> 00:04:01,000
还是很久以前了吧

114
00:04:01,000 --> 00:04:04,000
对还是他的 2.0 还是 2.0 几的版本

115
00:04:04,000 --> 00:04:05,000
我买过

116
00:04:05,000 --> 00:04:06,000
然后用了一下

117
00:04:06,000 --> 00:04:09,000
我觉得还凑合了

118
00:04:09,000 --> 00:04:12,000
然后后来那个苹果的 K-train

119
00:04:12,000 --> 00:04:14,000
不是出了 iCloud K-train 吗

120
00:04:14,000 --> 00:04:16,000
就是可以跟 iCloud 通过

121
00:04:16,000 --> 00:04:19,000
同步到你的其他的 iOS

122
00:04:19,000 --> 00:04:21,000
iOS survey 或者是 max 上面吧

123
00:04:21,000 --> 00:04:24,000
然后选择全部都存在 K-train 里面

124
00:04:24,000 --> 00:04:25,000
然后呢

125
00:04:25,000 --> 00:04:27,000
或者绝大部分信息都是数字化的

126
00:04:27,000 --> 00:04:30,000
然后比较一些比较机密的什么银行卡

127
00:04:30,000 --> 00:04:31,000
帐号密码之类的

128
00:04:31,000 --> 00:04:33,000
也是存在 K-train 里面的

129
00:04:33,000 --> 00:04:35,000
所以刚才那个问题是说

130
00:04:35,000 --> 00:04:36,000
如果没有原码的话

131
00:04:36,000 --> 00:04:39,000
你怎么去选择相信 one password

132
00:04:39,000 --> 00:04:41,000
或者是 K-train 的安全性呢

133
00:04:42,000 --> 00:04:44,000
正确答案是你没法缺席

134
00:04:44,000 --> 00:04:45,000
因为你没有原码

135
00:04:45,000 --> 00:04:46,000
对吧

136
00:04:46,000 --> 00:04:48,000
也不不戒染吧

137
00:04:48,000 --> 00:04:49,000
你可以

138
00:04:49,000 --> 00:04:51,000
你可以自己弄一个中间人攻击

139
00:04:51,000 --> 00:04:53,000
你可以把自己的路由器

140
00:04:53,000 --> 00:04:55,000
你可以秀探自己的路由器

141
00:04:55,000 --> 00:04:58,000
然后看他到底在和哪些网站联络

142
00:04:58,000 --> 00:04:59,000
通信对吧

143
00:04:59,000 --> 00:04:59,000
对

144
00:04:59,000 --> 00:05:01,000
对还是当着黑盒来处理

145
00:05:01,000 --> 00:05:02,000
去观察他的输出

146
00:05:02,000 --> 00:05:04,000
或者说你做到再彻底一点

147
00:05:04,000 --> 00:05:08,000
你去反变于他的那个可知新文件

148
00:05:08,000 --> 00:05:11,000
看他有在哪些地方调用网络

149
00:05:11,000 --> 00:05:12,000
然后你足够牛逼的话

150
00:05:12,000 --> 00:05:13,000
应该能反解出来说

151
00:05:13,000 --> 00:05:14,000
他在哪些地方

152
00:05:14,000 --> 00:05:16,000
哪些时候传输了

153
00:05:16,000 --> 00:05:18,000
这个传输之前做了些什么东西

154
00:05:18,000 --> 00:05:19,000
但是我相信

155
00:05:19,000 --> 00:05:21,000
绝大部分理智的正常人士

156
00:05:21,000 --> 00:05:23,000
不会去做这些事情

157
00:05:23,000 --> 00:05:24,000
如果你足够多疑的话

158
00:05:24,000 --> 00:05:27,000
那如果你 paranoid 的话

159
00:05:27,000 --> 00:05:27,000
这个丑多的话

160
00:05:27,000 --> 00:05:29,000
那基本上你肯定不会使用

161
00:05:29,000 --> 00:05:31,000
任何密码管理软件的

162
00:05:31,000 --> 00:05:31,000
比如我

163
00:05:31,000 --> 00:05:33,000
不是

164
00:05:33,000 --> 00:05:37,000
应该是说如果你需要这个层级的确信的话

165
00:05:37,000 --> 00:05:38,000
要么你就学得了

166
00:05:38,000 --> 00:05:39,000
Richard Storman

167
00:05:39,000 --> 00:05:42,000
就是你用的所有软件

168
00:05:42,000 --> 00:05:44,000
我做的就是所有软件

169
00:05:44,000 --> 00:05:46,000
包括像那个硬件的 BIOS

170
00:05:46,000 --> 00:05:48,000
那个就是那个什么

171
00:05:48,000 --> 00:05:50,000
其他都中间都不说了

172
00:05:50,000 --> 00:05:51,000
什么操作系统

173
00:05:51,000 --> 00:05:52,000
应用程序

174
00:05:52,000 --> 00:05:54,000
都必须要是开源的

175
00:05:54,000 --> 00:05:56,000
你才能够去确保每个东西

176
00:05:56,000 --> 00:05:58,000
然后你对硬件的要求也是有高优全

177
00:05:58,000 --> 00:05:59,000
你必须用那种所谓的

178
00:05:59,000 --> 00:06:01,000
就是 open hardware

179
00:06:01,000 --> 00:06:02,000
就是不要有那种

180
00:06:02,000 --> 00:06:04,000
常有私有代码的那种硬件

181
00:06:04,000 --> 00:06:06,000
就包括某一个

182
00:06:06,000 --> 00:06:07,000
别说现在很多这个

183
00:06:07,000 --> 00:06:09,000
用硬盘或者 SSD

184
00:06:09,000 --> 00:06:10,000
上面不会有很多芯片

185
00:06:10,000 --> 00:06:11,000
对吧

186
00:06:11,000 --> 00:06:12,000
嗯

187
00:06:12,000 --> 00:06:13,000
你的那些芯片的要求

188
00:06:13,000 --> 00:06:15,000
也是要求他们能开源的

189
00:06:15,000 --> 00:06:17,000
能知道你它在里面在做什么

190
00:06:17,000 --> 00:06:18,000
你这个时候你才可以

191
00:06:18,000 --> 00:06:21,000
就是你在有所有的原码的基础下

192
00:06:21,000 --> 00:06:23,000
你才可以确信的说这个

193
00:06:23,000 --> 00:06:24,000
这个机器没有做你

194
00:06:24,000 --> 00:06:26,000
你不想要它做的事情

195
00:06:26,000 --> 00:06:26,000
但是我就

196
00:06:26,000 --> 00:06:29,000
Richard Storman 是用 Happy Hacking Keyboard 了

197
00:06:31,000 --> 00:06:31,000
对

198
00:06:31,000 --> 00:06:32,000
他接一个

199
00:06:32,000 --> 00:06:32,000
对

200
00:06:32,000 --> 00:06:33,000
如果是的话

201
00:06:33,000 --> 00:06:37,000
Happy Hacking Keyboard 的 Ctrl 是必原的

202
00:06:37,000 --> 00:06:38,000
是吗

203
00:06:38,000 --> 00:06:38,000
是

204
00:06:38,000 --> 00:06:39,000
ok

205
00:06:39,000 --> 00:06:40,000
所以就又存在一个漏洞了

206
00:06:40,000 --> 00:06:41,000
对吧

207
00:06:41,000 --> 00:06:42,000
你不确定他那个

208
00:06:42,000 --> 00:06:44,000
那个键盘里面有没有那个 keylog

209
00:06:44,000 --> 00:06:47,000
就是键盘记录器对吧

210
00:06:47,000 --> 00:06:47,000
对

211
00:06:47,000 --> 00:06:47,000
啊

212
00:06:47,000 --> 00:06:48,000
这又是一个不确定的意思

213
00:06:48,000 --> 00:06:50,000
所以其实你看

214
00:06:50,000 --> 00:06:51,000
在现代这种情况下

215
00:06:51,000 --> 00:06:52,000
你要求说每个

216
00:06:52,000 --> 00:06:54,000
不准都是可以被 audited

217
00:06:54,000 --> 00:06:56,000
就是可审计的

218
00:06:56,000 --> 00:06:57,000
基本是不现实的

219
00:06:57,000 --> 00:06:57,000
对

220
00:06:57,000 --> 00:06:59,000
是非常非常难的一件事情

221
00:06:59,000 --> 00:06:59,000
对

222
00:06:59,000 --> 00:07:01,000
所以这个时候怎么办呢

223
00:07:01,000 --> 00:07:03,000
你总选择相信一些人

224
00:07:03,000 --> 00:07:05,000
或者是一个人

225
00:07:05,000 --> 00:07:06,000
这个时候就可以

226
00:07:06,000 --> 00:07:07,000
你可以选择说说

227
00:07:07,000 --> 00:07:08,000
你相信苹果

228
00:07:08,000 --> 00:07:10,000
还是相信 One Password

229
00:07:10,000 --> 00:07:12,000
当然你选择相信 One Password

230
00:07:12,000 --> 00:07:14,000
你刚刚跑的就是 Mac 系统的话

231
00:07:14,000 --> 00:07:15,000
你总算还是得选择相信苹果

232
00:07:15,000 --> 00:07:16,000
对吧

233
00:07:16,000 --> 00:07:17,000
所以我的策略就比较简单了

234
00:07:17,000 --> 00:07:18,000
那我就相信苹果好了

235
00:07:18,000 --> 00:07:19,000
哈哈哈

236
00:07:19,000 --> 00:07:21,000
Lit or Face

237
00:07:21,000 --> 00:07:22,000
对

238
00:07:22,000 --> 00:07:23,000
像现上利一样的

239
00:07:23,000 --> 00:07:24,000
没错

240
00:07:24,000 --> 00:07:25,000
苹果叫嘛

241
00:07:25,000 --> 00:07:26,000
那个拜一拜

242
00:07:26,000 --> 00:07:26,000
对

243
00:07:26,000 --> 00:07:27,000
好

244
00:07:27,000 --> 00:07:29,000
就是这个时候你就只能选择相信

245
00:07:29,000 --> 00:07:32,000
然后为什么我选择相信苹果呢

246
00:07:32,000 --> 00:07:33,000
这个留言很简单

247
00:07:33,000 --> 00:07:34,000
因为这个什么

248
00:07:34,000 --> 00:07:35,000
他已经把这个牛逼吹出去了

249
00:07:35,000 --> 00:07:36,000
对吧

250
00:07:36,000 --> 00:07:38,000
就是我们不不不销售这个用户

251
00:07:38,000 --> 00:07:40,000
以及一个隐私信息

252
00:07:40,000 --> 00:07:41,000
我也不植入后门

253
00:07:41,000 --> 00:07:44,000
我们也不做一些什么对用户有害的事情

254
00:07:44,000 --> 00:07:46,000
因为我比较缺陷的点是

255
00:07:46,000 --> 00:07:48,000
如果被人爆出来说

256
00:07:48,000 --> 00:07:50,000
苹果有意在那个 K-Chain 里面

257
00:07:50,000 --> 00:07:52,000
或者其他 Mac 里面做了什么手脚

258
00:07:52,000 --> 00:07:55,000
最后被人发现的话

259
00:07:55,000 --> 00:07:57,000
他对他的这个叫做商与

260
00:07:57,000 --> 00:08:00,000
就讲说我们这个在这个在

261
00:08:00,000 --> 00:08:02,000
会计上是有这么一个概念

262
00:08:02,000 --> 00:08:04,000
叫做商与就 Good Well

263
00:08:04,000 --> 00:08:05,000
就是公司的品牌

264
00:08:05,000 --> 00:08:07,000
这个东西的自己东西的价值

265
00:08:07,000 --> 00:08:09,000
如果苹果被发现

266
00:08:09,000 --> 00:08:10,000
他故意比如说因为

267
00:08:10,000 --> 00:08:14,000
NSE 给他下了给他们给了什么秘密法令

268
00:08:14,000 --> 00:08:16,000
他就在电脑里面做什么手脚

269
00:08:16,000 --> 00:08:18,000
如果他真的这么做了

270
00:08:18,000 --> 00:08:19,000
我相信对他商与是非常损

271
00:08:19,000 --> 00:08:20,000
非常大的损失

272
00:08:20,000 --> 00:08:22,000
那这个损失通常是有多少

273
00:08:22,000 --> 00:08:23,000
billion dollars

274
00:08:23,000 --> 00:08:26,000
就是十亿美元为单位的自家贷

275
00:08:26,000 --> 00:08:26,000
对

276
00:08:26,000 --> 00:08:28,000
所以这个时候我相信

277
00:08:28,000 --> 00:08:32,000
在如此大的这个压力下

278
00:08:32,000 --> 00:08:35,000
以及从他们这么多年坚持在

279
00:08:35,000 --> 00:08:37,000
道德观念来看

280
00:08:37,000 --> 00:08:40,000
我觉得我相信他们是可以的

281
00:08:40,000 --> 00:08:42,000
但至于说你信不信

282
00:08:42,000 --> 00:08:45,000
请你自己做自己的选择和判断

283
00:08:45,000 --> 00:08:45,000
对

284
00:08:45,000 --> 00:08:47,000
比如说我就选择不信

285
00:08:47,000 --> 00:08:50,000
因为这世界上没有什么东西是可信

286
00:08:50,000 --> 00:08:51,000
对

287
00:08:51,000 --> 00:08:54,000
我不是故意跟你探完掉的

288
00:08:54,000 --> 00:08:56,000
Richard Fortstormen

289
00:08:56,000 --> 00:08:57,000
你好

290
00:08:57,000 --> 00:08:58,000
你们俩我也是

291
00:09:00,000 --> 00:09:01,000
对

292
00:09:01,000 --> 00:09:03,000
我反正我也顺便说说自己的选择

293
00:09:03,000 --> 00:09:07,000
我是不用任何密码关注人家

294
00:09:07,000 --> 00:09:10,000
所以你的密码是套一套机制来实现的

295
00:09:10,000 --> 00:09:11,000
对

296
00:09:11,000 --> 00:09:15,000
我有一套比较详尽的密码存储和管理机制

297
00:09:15,000 --> 00:09:16,000
然后我存在

298
00:09:16,000 --> 00:09:18,000
大脑自带密码生成器

299
00:09:18,000 --> 00:09:19,000
对

300
00:09:19,000 --> 00:09:20,000
我曾经在支付商写了一条答案

301
00:09:20,000 --> 00:09:24,000
反正简单的来说就是密码要分三层

302
00:09:24,000 --> 00:09:29,000
最基本的密码是一个大概一两年换一次密码

303
00:09:29,000 --> 00:09:31,000
嗯哼

304
00:09:31,000 --> 00:09:34,000
然后这个密码可以是在所有这些网站上都一样的

305
00:09:34,000 --> 00:09:35,000
比如说什么

306
00:09:38,000 --> 00:09:41,000
你想要下载一个 Cycle Developer

307
00:09:41,000 --> 00:09:43,000
从 Oracle 网站上下一个 Cycle Developer

308
00:09:43,000 --> 00:09:44,000
你可以

309
00:09:44,000 --> 00:09:46,000
它强迫你注册

310
00:09:46,000 --> 00:09:51,000
然后你此时你可以选择去下一个什么 Bug Me Not 之类的

311
00:09:51,000 --> 00:09:52,000
浏览器插件

312
00:09:52,000 --> 00:09:54,000
自动帮你填一个已经有人注册过的

313
00:09:56,000 --> 00:09:57,000
弱密码

314
00:09:57,000 --> 00:09:57,000
嗯哼

315
00:09:57,000 --> 00:10:00,000
另外一个选择就是你自己维护一个非常弱的密码

316
00:10:00,000 --> 00:10:04,000
然后基本上最低的这一层密码

317
00:10:04,000 --> 00:10:07,000
我就是用一个一直用一个最一样的

318
00:10:07,000 --> 00:10:07,000
嗯哼

319
00:10:07,000 --> 00:10:09,000
嗯哼

320
00:10:09,000 --> 00:10:11,000
第二层密码是每个网站不一样

321
00:10:12,000 --> 00:10:16,000
而且但是有一部分是一样的

322
00:10:16,000 --> 00:10:20,000
那这个是比如一些比较重要的网站

323
00:10:20,000 --> 00:10:21,000
比如像什么知乎呀

324
00:10:21,000 --> 00:10:24,000
或者是微博之类的这种

325
00:10:24,000 --> 00:10:27,000
跟你的 Identity 相关的东西

326
00:10:27,000 --> 00:10:27,000
嗯哼

327
00:10:27,000 --> 00:10:30,000
然后这些密码有一套生成机制

328
00:10:30,000 --> 00:10:32,000
就是我看到它的网址或者是

329
00:10:33,000 --> 00:10:34,000
一般是看到网址的时候

330
00:10:34,000 --> 00:10:36,000
会想到这个密码应该是怎么构建的

331
00:10:37,000 --> 00:10:37,000
嗯哼

332
00:10:37,000 --> 00:10:38,000
然后第三层密码就是什么

333
00:10:38,000 --> 00:10:40,000
帮银的密码呀

334
00:10:40,000 --> 00:10:41,000
信用卡密码呀

335
00:10:41,000 --> 00:10:42,000
或者是

336
00:10:42,000 --> 00:10:43,000
嗯

337
00:10:44,000 --> 00:10:46,000
什么报税的税务局密码之类的

338
00:10:46,000 --> 00:10:48,000
这个密码是每一个网站都不一样

339
00:10:48,000 --> 00:10:49,000
而且

340
00:10:49,000 --> 00:10:51,000
跟网站本身没有关系

341
00:10:51,000 --> 00:10:54,000
而且我自己有时候必须去看一个

342
00:10:54,000 --> 00:10:55,000
Reminder 才能看出来

343
00:10:55,000 --> 00:10:56,000
才能想起来

344
00:10:57,000 --> 00:11:00,000
所以你还是记录了密码在某一个地方对吧

345
00:11:00,000 --> 00:11:03,000
但我只记录了这个密码的 salt

346
00:11:03,000 --> 00:11:04,000
你可以理解没

347
00:11:05,000 --> 00:11:06,000
呃 hint 吧应该是

348
00:11:06,000 --> 00:11:08,000
呃 salt 就是那个

349
00:11:09,000 --> 00:11:09,000
就是

350
00:11:10,000 --> 00:11:11,000
看到这个

351
00:11:11,000 --> 00:11:12,000
看到这一串东西

352
00:11:12,000 --> 00:11:15,000
我才能够重新构建出那个密码这么一个

353
00:11:15,000 --> 00:11:16,000
对

354
00:11:16,000 --> 00:11:17,000
对对对

355
00:11:17,000 --> 00:11:19,000
salt 是

356
00:11:19,000 --> 00:11:20,000
你已经有一个密码

357
00:11:20,000 --> 00:11:21,000
然后

358
00:11:21,000 --> 00:11:23,000
你通过加这个 salt 这个研

359
00:11:23,000 --> 00:11:24,000
变成一个新密码去输入的

360
00:11:25,000 --> 00:11:25,000
是吧

361
00:11:25,000 --> 00:11:26,000
你是这么一个过程

362
00:11:27,000 --> 00:11:28,000
ok 你说对

363
00:11:28,000 --> 00:11:29,000
好

364
00:11:29,000 --> 00:11:31,000
因为我在那个

365
00:11:31,000 --> 00:11:33,000
纸上写了 salt 这个词

366
00:11:33,000 --> 00:11:34,000
所以我一直叫 salt

367
00:11:34,000 --> 00:11:35,000
但你说的没错

368
00:11:35,000 --> 00:11:36,000
只能说是一种

369
00:11:36,000 --> 00:11:37,000
hint

370
00:11:37,000 --> 00:11:38,000
对是一个提示

371
00:11:38,000 --> 00:11:40,000
让你想想这个密码是什么

372
00:11:40,000 --> 00:11:40,000
对

373
00:11:40,000 --> 00:11:41,000
然后最重要的是

374
00:11:41,000 --> 00:11:42,000
呃

375
00:11:42,000 --> 00:11:44,000
比如说什么飞溜之下 3000 尺是不是

376
00:11:44,000 --> 00:11:45,000
哈哈哈

377
00:11:45,000 --> 00:11:46,000
没有那么弱

378
00:11:46,000 --> 00:11:49,000
我或者说我文学素也没有那么差

379
00:11:49,000 --> 00:11:50,000
哈哈哈

380
00:11:50,000 --> 00:11:51,000
呃

381
00:11:51,000 --> 00:11:53,000
但最重要的是就是第二层和第三层密码要

382
00:11:53,000 --> 00:11:56,000
比第一层密码换得更勤快一些

383
00:11:56,000 --> 00:11:56,000
就是

384
00:11:56,000 --> 00:11:59,000
ok 可能两个月就要换一次

385
00:11:59,000 --> 00:11:59,000
ok

386
00:11:59,000 --> 00:12:00,000
这是比较重要

387
00:12:01,000 --> 00:12:02,000
但是这是一个 paranoid

388
00:12:02,000 --> 00:12:04,000
人才会需要做的事情

389
00:12:05,000 --> 00:12:05,000
嗯哼

390
00:12:06,000 --> 00:12:06,000
呃

391
00:12:06,000 --> 00:12:08,000
另外就是所有能够采用两

392
00:12:08,000 --> 00:12:09,000
呃二部

393
00:12:09,000 --> 00:12:10,000
嗯

394
00:12:10,000 --> 00:12:10,000
叫什么

395
00:12:10,000 --> 00:12:11,000
嗯

396
00:12:11,000 --> 00:12:12,000
两部验证

397
00:12:12,000 --> 00:12:14,000
对两部验证的网站一定要使用两部

398
00:12:14,000 --> 00:12:15,000
哈哈哈

399
00:12:15,000 --> 00:12:17,000
两边是手机上做的

400
00:12:17,000 --> 00:12:17,000
是吧

401
00:12:17,000 --> 00:12:18,000
用那个什么

402
00:12:18,000 --> 00:12:20,000
google sonicator 还是用什么

403
00:12:20,000 --> 00:12:21,000
呃对

404
00:12:21,000 --> 00:12:22,000
我是用 google sonicator

405
00:12:22,000 --> 00:12:24,000
然后 battle net 有一个

406
00:12:24,000 --> 00:12:25,000
然后

407
00:12:25,000 --> 00:12:25,000
嗯

408
00:12:26,000 --> 00:12:26,000
对

409
00:12:26,000 --> 00:12:28,000
然后部分德国银行会给你一个卡

410
00:12:28,000 --> 00:12:29,000
这卡上可以按那个

411
00:12:30,000 --> 00:12:30,000
啊

412
00:12:30,000 --> 00:12:31,000
那个是

413
00:12:31,000 --> 00:12:32,000
很爽

414
00:12:32,000 --> 00:12:33,000
就是要密码器嘛

415
00:12:33,000 --> 00:12:34,000
对

416
00:12:34,000 --> 00:12:34,000
对对对

417
00:12:34,000 --> 00:12:36,000
中国很多现在银行也有了

418
00:12:36,000 --> 00:12:36,000
嗯

419
00:12:36,000 --> 00:12:38,000
我觉得那个其实是比较安全的一个

420
00:12:39,000 --> 00:12:39,000
一个选择

421
00:12:40,000 --> 00:12:40,000
对对对

422
00:12:40,000 --> 00:12:41,000
呃

423
00:12:41,000 --> 00:12:42,000
我的那个密码管理方法上

424
00:12:42,000 --> 00:12:44,000
我再同一个支付问题下

425
00:12:44,000 --> 00:12:45,000
我也有答好

426
00:12:45,000 --> 00:12:46,000
我们都有在那里回答

427
00:12:46,000 --> 00:12:48,000
到时候把那个连接贴出来吧

428
00:12:48,000 --> 00:12:49,000
我的就是

429
00:12:49,000 --> 00:12:50,000
我的比你更机器化

430
00:12:50,000 --> 00:12:52,000
然后更做得更绝

431
00:12:52,000 --> 00:12:53,000
就是所有的测的都是一样的

432
00:12:54,000 --> 00:12:55,000
每个晚上都是随机生成的密码

433
00:12:55,000 --> 00:12:56,000
我自己都不知道

434
00:12:56,000 --> 00:12:57,000
必须用密码管理器看

435
00:12:58,000 --> 00:12:59,000
哈哈哈

436
00:12:59,000 --> 00:13:03,000
但此时就是你可能会选择在省

437
00:13:03,000 --> 00:13:05,000
你必须在省心和

438
00:13:06,000 --> 00:13:06,000
呃

439
00:13:08,000 --> 00:13:11,000
有安全感之间找到一个找的一个 balance

440
00:13:11,000 --> 00:13:14,000
就是我的方法肯定不适合任何人的

441
00:13:14,000 --> 00:13:14,000
对

442
00:13:15,000 --> 00:13:16,000
我我的也肯定不适合任何人

443
00:13:16,000 --> 00:13:19,000
因为太麻烦了

444
00:13:20,000 --> 00:13:21,000
但是我是不介意麻烦的

445
00:13:21,000 --> 00:13:23,000
然后呃

446
00:13:24,000 --> 00:13:25,000
然后你刚才说是

447
00:13:25,000 --> 00:13:28,000
你是有些网站是共享一个密码的吗

448
00:13:28,000 --> 00:13:28,000
对

449
00:13:29,000 --> 00:13:30,000
我都是每个都是不同的密码的

450
00:13:31,000 --> 00:13:32,000
嗯对从这个角度讲

451
00:13:32,000 --> 00:13:34,000
你标你要不要完全写单

452
00:13:34,000 --> 00:13:35,000
没错

453
00:13:35,000 --> 00:13:37,000
而且我连每个每个的邮箱账号都是不一样的

454
00:13:37,000 --> 00:13:39,000
就每个注册账号的邮箱都是不一样

455
00:13:39,000 --> 00:13:40,000
对

456
00:13:40,000 --> 00:13:42,000
我觉得这个时候有最变态一点

457
00:13:42,000 --> 00:13:44,000
他他有一个自己的

458
00:13:44,000 --> 00:13:46,000
呃呃就是 goo apps

459
00:13:46,000 --> 00:13:46,000
是吧

460
00:13:46,000 --> 00:13:47,000
对对对

461
00:13:47,000 --> 00:13:51,000
然后他给每一个网站都有一个自己不同的用户名

462
00:13:51,000 --> 00:13:55,000
然后导致有时候我会想要在这网站上给他分享一个什么东西

463
00:13:55,000 --> 00:13:57,000
然后他就先问我是哪个账号

464
00:13:57,000 --> 00:13:59,000
那个网站你问我另外一个

465
00:13:59,000 --> 00:14:01,000
然后我就分对对对

466
00:14:01,000 --> 00:14:02,000
因为为什么要这么做

467
00:14:02,000 --> 00:14:06,000
其实除了在一个安全上还有一个就是那个有一个匿名性的问题吗

468
00:14:07,000 --> 00:14:08,000
就是很多现在很多那个网站

469
00:14:08,000 --> 00:14:12,000
他是可以通过你使用同一个账号判断出

470
00:14:12,000 --> 00:14:15,000
哎你在那个网站用了另外一个什么服务对吧

471
00:14:15,000 --> 00:14:19,000
就不希望这样被他们这个通过这个交叉笔对账号的同样 tracking 到

472
00:14:20,000 --> 00:14:24,000
因为有很多这个就其实我们可以讲一下那个之前很多人

473
00:14:24,000 --> 00:14:27,000
账号被泄露出的原因也比较简单

474
00:14:27,000 --> 00:14:29,000
就是很多人都是用同样一个账号

475
00:14:29,000 --> 00:14:33,000
比如说你就有某一个固定的邮箱地址或者是你的手机号码

476
00:14:33,000 --> 00:14:35,000
或者是某个人固定一个 id 对吧

477
00:14:35,000 --> 00:14:37,000
然后一套固定的密码注册多个账号

478
00:14:38,000 --> 00:14:41,000
就像你说那个第一层那种不怎么安全的东西

479
00:14:41,000 --> 00:14:45,000
然后其中某一个服务被人脱裤了

480
00:14:45,000 --> 00:14:47,000
就是所谓他的那个密码用户

481
00:14:48,000 --> 00:14:51,000
账号的那个那个数据库那张表被人爆出来

482
00:14:52,000 --> 00:14:54,000
这样的话别人拿到这个信息之后

483
00:14:54,000 --> 00:14:55,000
他可以挨个去试嘛

484
00:14:55,000 --> 00:14:57,000
常见的网站上你最有同一个账号同一生密码

485
00:14:58,000 --> 00:15:00,000
有没有注册其他同类的服务对吧

486
00:15:00,000 --> 00:15:03,000
就可以一次连带攻陷你的好多这种东西

487
00:15:03,000 --> 00:15:06,000
所以我这个就可以从根源上阻断这一点

488
00:15:06,000 --> 00:15:11,000
第一个你没办法把我的那个不同的网站的账号能够串起来

489
00:15:11,000 --> 00:15:16,000
第二个就算你就就算你发现我的这个账号是这个人用的这个账号

490
00:15:16,000 --> 00:15:18,000
是等于那个人在那个账号上面去

491
00:15:18,000 --> 00:15:20,000
你从用同一个密码去试也是不行的

492
00:15:20,000 --> 00:15:21,000
因为跟密码都是不一样的

493
00:15:23,000 --> 00:15:26,000
然后我跟你有点不一样

494
00:15:26,000 --> 00:15:27,000
就是我不怎么去更换密码

495
00:15:29,000 --> 00:15:32,000
就是我不会说隔三差我就换他一轮

496
00:15:32,000 --> 00:15:33,000
就是比较不平凡吧

497
00:15:33,000 --> 00:15:35,000
也换但是不是非常平凡

498
00:15:36,000 --> 00:15:37,000
因为我的理念是这样子的

499
00:15:38,000 --> 00:15:41,000
就按照我这种用法和注意事实上的结果

500
00:15:41,000 --> 00:15:43,000
如果账密码被卸入

501
00:15:43,000 --> 00:15:45,000
一般是因为对方网站被脱裤了

502
00:15:45,000 --> 00:15:47,000
这个时候你换不换密码是没有任何区别的

503
00:15:52,000 --> 00:15:54,000
因为我的确是有道理

504
00:15:54,000 --> 00:15:55,000
对

505
00:15:55,000 --> 00:15:57,000
然后就我已经很麻烦了

506
00:15:57,000 --> 00:15:59,000
我就不想再给自己添更多的麻烦

507
00:16:00,000 --> 00:16:02,000
然后关于两不验证

508
00:16:02,000 --> 00:16:04,000
我也是就说基本上就是重要的服务

509
00:16:04,000 --> 00:16:07,000
就其实提供两不验证的基本上是重要的服务

510
00:16:07,000 --> 00:16:08,000
对

511
00:16:08,000 --> 00:16:11,000
然后就基本上有两不验证的我都开了

512
00:16:11,000 --> 00:16:16,000
然后我在 iOS 上装的那个叫做 OSSI 的一个应用

513
00:16:17,000 --> 00:16:19,000
之前也用那个 Google Authenticator

514
00:16:19,000 --> 00:16:20,000
不过发现它不太好使

515
00:16:20,000 --> 00:16:22,000
就是那个界面也比较糟糕

516
00:16:23,000 --> 00:16:26,000
然后 OSSI 会稍微好一点点

517
00:16:26,000 --> 00:16:30,000
其实当年最主要的原因是 OSSI 有一个 Mac

518
00:16:30,000 --> 00:16:32,000
就是 OS 10 的一个应用

519
00:16:32,000 --> 00:16:37,000
它理论上是可以通过蓝牙和你手上的 OSSI 连接

520
00:16:37,000 --> 00:16:39,000
这样的话你就不用打开手机

521
00:16:40,000 --> 00:16:43,000
就能通过电脑上那个 OSSI 的插件

522
00:16:43,000 --> 00:16:47,000
直接把那个那个一般是一个六位数的数字嘛

523
00:16:47,000 --> 00:16:48,000
读出来

524
00:16:49,000 --> 00:16:51,000
后来我发现其实不行的

525
00:16:51,000 --> 00:16:55,000
就是那个是要求手机的那个 OSSI 是在工作状态才可以的

526
00:16:55,000 --> 00:16:57,000
所以最终你还是得开一个那个

527
00:16:59,000 --> 00:17:00,000
手机上的 OSSI

528
00:17:00,000 --> 00:17:03,000
然后再开电脑上那个 OSSI 去跟它蓝牙共享

529
00:17:03,000 --> 00:17:04,000
这样比较麻烦吧

530
00:17:04,000 --> 00:17:05,000
最后这样还是就直接在手机上

531
00:17:06,000 --> 00:17:07,000
六位数也不是特别

532
00:17:07,000 --> 00:17:08,000
不是特别麻烦对吧

533
00:17:08,000 --> 00:17:10,000
就是可以数一下还可以

534
00:17:10,000 --> 00:17:14,000
然后后来那个 iOS 8 还是 7

535
00:17:14,000 --> 00:17:17,000
不是有了那个叫做 notification center 吗

536
00:17:17,000 --> 00:17:19,000
不有的那个 today

537
00:17:20,000 --> 00:17:22,000
today 什么 today extension 还是叫什么呢

538
00:17:23,000 --> 00:17:25,000
就是从顶上对 today view 对

539
00:17:25,000 --> 00:17:26,000
从顶上拉下来

540
00:17:26,000 --> 00:17:28,000
然后 OSSI 它加了这种功能

541
00:17:28,000 --> 00:17:31,000
就是它可以直接在里面加个快捷快捷反问嘛

542
00:17:31,000 --> 00:17:33,000
就可以直接拉下来翻到 OSSI 的内栏

543
00:17:33,000 --> 00:17:35,000
然后点击某一个账号进去

544
00:17:35,000 --> 00:17:37,000
再数一下密码或者验一下纸

545
00:17:37,000 --> 00:17:41,000
就可以直接取到六位数的验证码了

546
00:17:41,000 --> 00:17:44,000
对所以这样的话就是还是比较方便

547
00:17:46,000 --> 00:17:48,000
然后还有一种方式

548
00:17:49,000 --> 00:17:51,000
就是用一个硬件的 USB 设备

549
00:17:52,000 --> 00:17:55,000
一个这个国内国内大家都很熟

550
00:17:55,000 --> 00:17:58,000
叫做 Udum 对 Udum

551
00:17:58,000 --> 00:18:00,000
银行的弄它其实还有好几种形式

552
00:18:00,000 --> 00:18:02,000
不光是有 USB 的

553
00:18:02,000 --> 00:18:04,000
就 USB 的都有好几种

554
00:18:04,000 --> 00:18:05,000
第一种是最传统的那个

555
00:18:05,000 --> 00:18:08,000
我觉得当年是工行吧

556
00:18:08,000 --> 00:18:09,000
我可以办了第一个 Udum

557
00:18:09,000 --> 00:18:14,000
就插上去它里面是其实就是内置一个私药了

558
00:18:14,000 --> 00:18:16,000
所以对不是它是一个私药

559
00:18:16,000 --> 00:18:18,000
它是一个内置的私药

560
00:18:19,000 --> 00:18:20,000
没有密码生产器

561
00:18:20,000 --> 00:18:21,000
没有密码生产器

562
00:18:21,000 --> 00:18:23,000
它是验证那个系统

563
00:18:23,000 --> 00:18:24,000
我如果我理解没错

564
00:18:24,000 --> 00:18:24,000
应该是这样

565
00:18:24,000 --> 00:18:25,000
它就是给签名用的

566
00:18:26,000 --> 00:18:27,000
然后那个私药

567
00:18:27,000 --> 00:18:29,000
它是一个叫做 HSM

568
00:18:29,000 --> 00:18:33,000
Hardware Security Module

569
00:18:33,000 --> 00:18:34,000
应该是叫做 MDM

570
00:18:34,000 --> 00:18:36,000
OK

571
00:18:36,000 --> 00:18:39,000
因为我们当时有一个同学的研究

572
00:18:39,000 --> 00:18:40,000
他说里面是一个

573
00:18:41,000 --> 00:18:43,000
或者他的意思是每次给出它的私药

574
00:18:43,000 --> 00:18:47,000
只是所有可能私药之中一种

575
00:18:47,000 --> 00:18:48,000
就是这么高级

576
00:18:48,000 --> 00:18:49,000
对

577
00:18:49,000 --> 00:18:49,000
OK

578
00:18:50,000 --> 00:18:51,000
反正 anyway

579
00:18:51,000 --> 00:18:52,000
就是逻辑上应该这样

580
00:18:52,000 --> 00:18:55,000
就是它里面是一个只有那个硬件

581
00:18:55,000 --> 00:18:57,000
本身才知道的一个秘密

582
00:18:57,000 --> 00:18:58,000
好像秘密是不能通过

583
00:18:58,000 --> 00:18:59,000
USB 这口读取的

584
00:18:59,000 --> 00:19:01,000
它只能说你提供一个东西

585
00:19:01,000 --> 00:19:02,000
它帮你验证

586
00:19:02,000 --> 00:19:03,000
帮你做一个签名

587
00:19:03,000 --> 00:19:05,000
然后这个签名就在反核到你电脑里面

588
00:19:05,000 --> 00:19:07,000
再传输给对方网站

589
00:19:07,000 --> 00:19:08,000
然后那个

590
00:19:09,000 --> 00:19:10,000
应该是对

591
00:19:10,000 --> 00:19:12,000
然后那边可以通过这个签名验证

592
00:19:12,000 --> 00:19:16,000
确实是经过私药签名过的东西

593
00:19:16,000 --> 00:19:17,000
上版大概是没有过程

594
00:19:17,000 --> 00:19:18,000
对

595
00:19:18,000 --> 00:19:22,000
然后还有一种是 USB 的

596
00:19:22,000 --> 00:19:23,000
不是 USB

597
00:19:23,000 --> 00:19:25,000
就是刚刚你说的那种密码器

598
00:19:25,000 --> 00:19:26,000
就是一个它不需要通

599
00:19:26,000 --> 00:19:28,000
USB 接口来插的

600
00:19:29,000 --> 00:19:31,000
它就是一个那个叫 RCA

601
00:19:31,000 --> 00:19:33,000
那个美国那间公司

602
00:19:33,000 --> 00:19:34,000
它有一个小的小的

603
00:19:34,000 --> 00:19:35,000
一个挂钥匙

604
00:19:35,000 --> 00:19:36,000
创造一个小东西

605
00:19:36,000 --> 00:19:37,000
有个小屏幕

606
00:19:37,000 --> 00:19:41,000
它就是就是那个 RCA 的硬件版本

607
00:19:41,000 --> 00:19:42,000
它每隔可能 15 秒 30 秒

608
00:19:42,000 --> 00:19:44,000
它会换一个数字

609
00:19:44,000 --> 00:19:45,000
然后这个数字

610
00:19:45,000 --> 00:19:46,000
它那个顺序

611
00:19:46,000 --> 00:19:47,000
这个 sinquence

612
00:19:47,000 --> 00:19:50,000
就是你内创数字的顺序是既定的

613
00:19:50,000 --> 00:19:51,000
然后这边可以通过

614
00:19:51,000 --> 00:19:53,000
那个当前的时间来来判定

615
00:19:53,000 --> 00:19:56,000
就可以对方服务器上也知道说

616
00:19:56,000 --> 00:19:57,000
这个时候是不是这个数字

617
00:19:57,000 --> 00:19:59,000
就这个 sinquence 就可以通过这个

618
00:19:59,000 --> 00:20:00,000
就是一个数据数列

619
00:20:01,000 --> 00:20:01,000
对

620
00:20:01,000 --> 00:20:02,000
其实我刚才想说

621
00:20:02,000 --> 00:20:04,000
就是另外一种形式

622
00:20:04,000 --> 00:20:06,000
就是要求你一定要插入电脑里面

623
00:20:06,000 --> 00:20:07,000
而不是一个

624
00:20:07,000 --> 00:20:08,000
就 USB 的那个就是

625
00:20:08,000 --> 00:20:08,000
对

626
00:20:08,000 --> 00:20:09,000
就是可以

627
00:20:09,000 --> 00:20:11,000
就是要求你一定要插入电脑

628
00:20:11,000 --> 00:20:11,000
对

629
00:20:11,000 --> 00:20:12,000
但这有一个问题

630
00:20:12,000 --> 00:20:15,000
就是现在不是很多这个手机了嘛

631
00:20:15,000 --> 00:20:17,000
没有 USB 接口怎么办

632
00:20:17,000 --> 00:20:18,000
后来当次我看他们有一种

633
00:20:18,000 --> 00:20:20,000
另外的一些方案就是

634
00:20:20,000 --> 00:20:22,000
那个是可以插 USB 口

635
00:20:22,000 --> 00:20:25,000
也可以通过一个那个音频的接口

636
00:20:25,000 --> 00:20:26,000
就是那个耳机线

637
00:20:26,000 --> 00:20:27,000
耳机插

638
00:20:27,000 --> 00:20:27,000
耳机插线

639
00:20:27,000 --> 00:20:28,000
然后插到手机上

640
00:20:28,000 --> 00:20:30,000
然后他那个银行软件

641
00:20:30,000 --> 00:20:31,000
做了个什么特殊的协议

642
00:20:31,000 --> 00:20:34,000
通过这个播放一个声音

643
00:20:34,000 --> 00:20:35,000
就是猫

644
00:20:35,000 --> 00:20:35,000
猫嘛

645
00:20:35,000 --> 00:20:36,000
那个知道他记得那个

646
00:20:36,000 --> 00:20:37,000
以前那个播放上的猫

647
00:20:37,000 --> 00:20:39,000
嗖嗖嗖嗖嗖嗖那个声音吗

648
00:20:39,000 --> 00:20:40,000
对

649
00:20:40,000 --> 00:20:41,000
他就是通过那个推理来

650
00:20:41,000 --> 00:20:44,000
就通过那个语音来编码一串

651
00:20:44,000 --> 00:20:46,000
那个数字信息嘛

652
00:20:46,000 --> 00:20:48,000
他这个就是用了一样的原理

653
00:20:48,000 --> 00:20:51,000
就通过那个手机的耳机那个接口

654
00:20:51,000 --> 00:20:53,000
去输出一段声音

655
00:20:53,000 --> 00:20:54,000
然后那个声音是包含一些

656
00:20:54,000 --> 00:20:55,000
特殊的编码过的

657
00:20:56,000 --> 00:20:58,000
这个思要的你认证的信息的

658
00:20:58,000 --> 00:20:59,000
嗯

659
00:20:59,000 --> 00:21:00,000
然后对我还有种方法

660
00:21:00,000 --> 00:21:01,000
就是他会在屏幕上

661
00:21:01,000 --> 00:21:03,000
不停的闪烁一组

662
00:21:04,000 --> 00:21:05,000
二进这个文样

663
00:21:06,000 --> 00:21:09,000
然后你用他的那个密码声声器

664
00:21:09,000 --> 00:21:11,000
背后有一个类似摄像头或者说

665
00:21:11,000 --> 00:21:11,000
应该不是

666
00:21:11,000 --> 00:21:13,000
就是一个感光元件

667
00:21:13,000 --> 00:21:13,000
OK

668
00:21:13,000 --> 00:21:16,000
然后你把那个感光元件

669
00:21:16,000 --> 00:21:17,000
掌在屏幕的上方

670
00:21:18,000 --> 00:21:19,000
然后等一会之后这个

671
00:21:19,000 --> 00:21:20,000
这个

672
00:21:20,000 --> 00:21:21,000
这个

673
00:21:21,000 --> 00:21:22,000
这个识别出来的吗

674
00:21:22,000 --> 00:21:22,000
识别出来

675
00:21:22,000 --> 00:21:23,000
然后生成一个密码链

676
00:21:24,000 --> 00:21:25,000
哇

677
00:21:25,000 --> 00:21:26,000
这个好可惜

678
00:21:26,000 --> 00:21:27,000
好吧

679
00:21:27,000 --> 00:21:28,000
但这样不很费电吗

680
00:21:28,000 --> 00:21:29,000
那个密码器

681
00:21:29,000 --> 00:21:30,000
密码器就像我说的

682
00:21:30,000 --> 00:21:33,000
它只是一个感光元件而已

683
00:21:33,000 --> 00:21:34,000
就是密码器需要

684
00:21:34,000 --> 00:21:36,000
需要有供电才可以识别

685
00:21:36,000 --> 00:21:38,000
对密码器装电池的

686
00:21:38,000 --> 00:21:38,000
对啊

687
00:21:38,000 --> 00:21:39,000
这样电池不就费得很快

688
00:21:39,000 --> 00:21:40,000
还好吧

689
00:21:40,000 --> 00:21:44,000
我前四年前申请的一个

690
00:21:45,000 --> 00:21:46,000
Scan 现在还能过

691
00:21:46,000 --> 00:21:49,000
而且 Scan 要求你当时要把银行卡插进去

692
00:21:50,000 --> 00:21:51,000
对吧

693
00:21:51,000 --> 00:21:52,000
好吧

694
00:21:52,000 --> 00:21:54,000
那个 RSA 那个密码器

695
00:21:54,000 --> 00:21:55,000
也是一个小电池

696
00:21:55,000 --> 00:21:57,000
可以用好几年的这样

697
00:21:57,000 --> 00:21:58,000
但是过了几年

698
00:21:58,000 --> 00:21:58,000
它就会

699
00:21:58,000 --> 00:21:59,000
它有一个有效期

700
00:21:59,000 --> 00:22:01,000
Xperia 就是过了

701
00:22:01,000 --> 00:22:02,000
就跟那个什么

702
00:22:02,000 --> 00:22:03,000
SSL 证书一样

703
00:22:03,000 --> 00:22:05,000
有个有效期过了就作废了

704
00:22:06,000 --> 00:22:08,000
瑞士银行发的密码生存器

705
00:22:08,000 --> 00:22:09,000
也是就是一张新卡

706
00:22:09,000 --> 00:22:11,000
然后新用卡里面肯定有一块电池

707
00:22:11,000 --> 00:22:13,000
然后因为它上面可以显示一个数

708
00:22:13,000 --> 00:22:15,000
然后我不过就那个电池

709
00:22:15,000 --> 00:22:17,000
可以一直用到这个卡作废而已

710
00:22:17,000 --> 00:22:18,000
对啊

711
00:22:18,000 --> 00:22:19,000
一般就是三五年这样子

712
00:22:21,000 --> 00:22:24,000
好像是那个 RSA 这件工资不是被黑了吗

713
00:22:24,000 --> 00:22:27,000
就是好多那个国内的企业

714
00:22:27,000 --> 00:22:28,000
也就因为那个要全部换一轮

715
00:22:28,000 --> 00:22:31,000
那个发出去的生存器

716
00:22:31,000 --> 00:22:32,000
我觉得好像就这么一个事

717
00:22:33,000 --> 00:22:37,000
所以安全还是挺难的一些事情

718
00:22:37,000 --> 00:22:38,000
对一会新闻环节里面

719
00:22:38,000 --> 00:22:41,000
我们也要聊聊最近的这个 Hikings

720
00:22:41,000 --> 00:22:42,000
被被被抓

721
00:22:42,000 --> 00:22:43,000
对

722
00:22:43,000 --> 00:22:45,000
其实那个说到这给顺便聊一下

723
00:22:45,000 --> 00:22:48,000
就是你用那个登陆服务器

724
00:22:48,000 --> 00:22:49,000
SSH 登陆服务器

725
00:22:49,000 --> 00:22:51,000
你是用密码还是用那个证书

726
00:22:51,000 --> 00:22:52,000
用证书

727
00:22:52,000 --> 00:22:54,000
不是证书

728
00:22:54,000 --> 00:22:54,000
Key

729
00:22:54,000 --> 00:22:55,000
你就是用 Private Key

730
00:22:55,000 --> 00:22:56,000
对对对

731
00:22:56,000 --> 00:22:58,000
然后我基本上我的内 F 服务器的话

732
00:22:58,000 --> 00:23:00,000
都是进掉密码登陆

733
00:23:00,000 --> 00:23:01,000
然后用 Key 的

734
00:23:01,000 --> 00:23:03,000
我只有入退是这样的

735
00:23:03,000 --> 00:23:04,000
其实我觉得只有入退是这样

736
00:23:04,000 --> 00:23:05,000
好吧

737
00:23:05,000 --> 00:23:06,000
你还有其他账户吗

738
00:23:06,000 --> 00:23:06,000
有

739
00:23:06,000 --> 00:23:09,000
你难道平时要入退账户登陆吗

740
00:23:09,000 --> 00:23:09,000
不是

741
00:23:09,000 --> 00:23:11,000
就是你其他账户只可以用密码登陆吗

742
00:23:11,000 --> 00:23:13,000
我其他账户可以用密码的

743
00:23:13,000 --> 00:23:14,000
因为有时候比如说

744
00:23:14,000 --> 00:23:17,000
临时抓了一个 iPad 必须 SSH

745
00:23:17,000 --> 00:23:19,000
SSH 连上去怎么办

746
00:23:20,000 --> 00:23:21,000
那你其他账户可以速度吗

747
00:23:23,000 --> 00:23:24,000
可以

748
00:23:24,000 --> 00:23:26,000
那你跟入退没有没有

749
00:23:26,000 --> 00:23:27,000
有什么区别呢

750
00:23:27,000 --> 00:23:28,000
说也是

751
00:23:28,000 --> 00:23:29,000
对吧

752
00:23:29,000 --> 00:23:31,000
你说 iPad 方案可以在

753
00:23:32,000 --> 00:23:33,000
其实正确的用 Key 的

754
00:23:33,000 --> 00:23:35,000
就是密码的认证的方法

755
00:23:35,000 --> 00:23:37,000
是每一个设备有自己的一个

756
00:23:38,000 --> 00:23:39,000
私购公要

757
00:23:39,000 --> 00:23:39,000
一套

758
00:23:39,000 --> 00:23:39,000
对

759
00:23:39,000 --> 00:23:41,000
但有时候是拿不到这样一个设备

760
00:23:41,000 --> 00:23:42,000
怎么办

761
00:23:43,000 --> 00:23:45,000
也是还是给现实给贵了

762
00:23:45,000 --> 00:23:46,000
是吧

763
00:23:46,000 --> 00:23:46,000
对

764
00:23:47,000 --> 00:23:49,000
其实我觉得

765
00:23:49,000 --> 00:23:52,000
私购公要对它方法是挺方便的

766
00:23:52,000 --> 00:23:52,000
因为

767
00:23:53,000 --> 00:23:56,000
用私要解决了密码和认证两个问题

768
00:23:56,000 --> 00:23:59,000
就是身份认证和密码登陆两个问题

769
00:23:59,000 --> 00:24:00,000
就是你现在

770
00:24:00,000 --> 00:24:03,000
你去一个开一个

771
00:24:04,000 --> 00:24:05,000
一个普通的网络服

772
00:24:05,000 --> 00:24:06,000
注册一个账号

773
00:24:06,000 --> 00:24:07,000
他还跟你说账号

774
00:24:07,000 --> 00:24:08,000
还得输密码对吧

775
00:24:08,000 --> 00:24:09,000
多麻烦

776
00:24:09,000 --> 00:24:11,000
你用私要解决给他公要就好了

777
00:24:11,000 --> 00:24:13,000
而且他永远不知道你的私要是什么

778
00:24:13,000 --> 00:24:14,000
没错

779
00:24:14,000 --> 00:24:14,000
所以

780
00:24:15,000 --> 00:24:17,000
其实之前有很多尝试

781
00:24:17,000 --> 00:24:17,000
像那个什么

782
00:24:17,000 --> 00:24:20,000
最近一次应该是 Mozilla 搞那个叫什么

783
00:24:21,000 --> 00:24:23,000
secure ID

784
00:24:23,000 --> 00:24:24,000
还有什么之类的东西

785
00:24:24,000 --> 00:24:25,000
还是 persona

786
00:24:26,000 --> 00:24:26,000
我忘了

787
00:24:27,000 --> 00:24:28,000
忘了名字了

788
00:24:28,000 --> 00:24:28,000
反正就是

789
00:24:29,000 --> 00:24:30,000
想把这个

790
00:24:30,000 --> 00:24:31,000
这一类的

791
00:24:31,000 --> 00:24:32,000
比较方便

792
00:24:33,000 --> 00:24:34,000
和安全的系统

793
00:24:34,000 --> 00:24:35,000
去替换掉这个密码

794
00:24:35,000 --> 00:24:36,000
但是这个

795
00:24:36,000 --> 00:24:38,000
我觉得可能对大家都说了来

796
00:24:38,000 --> 00:24:38,000
讲

797
00:24:38,000 --> 00:24:41,000
理解起这个私购公要加密这么一个过程

798
00:24:41,000 --> 00:24:42,000
或者说任何一套

799
00:24:42,000 --> 00:24:43,000
其他非密码的这么一个

800
00:24:44,000 --> 00:24:44,000
替代方案

801
00:24:44,000 --> 00:24:46,000
可能还是有点成本的

802
00:24:46,000 --> 00:24:48,000
所以并没有大规模推动起来

803
00:24:49,000 --> 00:24:50,000
不过倒是在一些

804
00:24:50,000 --> 00:24:53,000
什么程序员的一些社区里面

805
00:24:54,000 --> 00:24:55,000
其中也不多

806
00:24:55,000 --> 00:24:56,000
很少用

807
00:24:56,000 --> 00:24:57,000
我觉得最显著的是那个

808
00:24:58,000 --> 00:24:59,000
你知道有一家那个专门生成

809
00:24:59,000 --> 00:25:00,000
给人生成免费

810
00:25:00,000 --> 00:25:02,000
那个 SSL 证书的网站

811
00:25:02,000 --> 00:25:04,000
叫那个 start SSL 吗

812
00:25:05,000 --> 00:25:06,000
好像听过吧

813
00:25:06,000 --> 00:25:07,000
他的那个

814
00:25:07,000 --> 00:25:08,000
就是他是要登录

815
00:25:08,000 --> 00:25:09,000
三号才能有一个

816
00:25:09,000 --> 00:25:10,000
有一个账号系统的

817
00:25:10,000 --> 00:25:12,000
不他那个就是通过那个

818
00:25:12,000 --> 00:25:15,000
客户端的那个证书来实现

819
00:25:15,000 --> 00:25:17,000
他没有一个账号密码的

820
00:25:17,000 --> 00:25:17,000
都没有概念

821
00:25:19,000 --> 00:25:19,000
好

822
00:25:19,000 --> 00:25:20,000
这是我用的唯一一家

823
00:25:21,000 --> 00:25:22,000
通过这种客户

824
00:25:22,000 --> 00:25:24,000
那个刘养奇证书的方式来实现登录

825
00:25:25,000 --> 00:25:27,000
这个其实我只能说

826
00:25:27,000 --> 00:25:30,000
我觉得要一个人接受抢口令和

827
00:25:32,000 --> 00:25:33,000
验证码这件事情

828
00:25:33,000 --> 00:25:34,000
有时候已经很难了

829
00:25:34,000 --> 00:25:35,000
我不知道

830
00:25:35,000 --> 00:25:36,000
因为咱们接受的人

831
00:25:36,000 --> 00:25:37,000
可能平时都比较

832
00:25:37,000 --> 00:25:38,000
Type Sally

833
00:25:38,000 --> 00:25:39,000
但有

834
00:25:39,000 --> 00:25:41,000
就是其实很多很多用户

835
00:25:41,000 --> 00:25:43,000
都不知道验证码到底是

836
00:25:43,000 --> 00:25:43,000
Sally 干什么用的

837
00:25:44,000 --> 00:25:45,000
你说哪个验证

838
00:25:47,000 --> 00:25:48,000
就是那个防止

839
00:25:48,000 --> 00:25:49,000
就是图定测试验证

840
00:25:49,000 --> 00:25:50,000
那个人机测试

841
00:25:50,000 --> 00:25:51,000
对

842
00:25:51,000 --> 00:25:52,000
在这种情况下

843
00:25:52,000 --> 00:25:54,000
你要向他解释什么是公要私要

844
00:25:54,000 --> 00:25:55,000
以及他为什么更安全

845
00:25:55,000 --> 00:25:56,000
其实是

846
00:25:56,000 --> 00:25:56,000
对了

847
00:25:56,000 --> 00:25:58,000
所以还是一个那个教育的问题

848
00:25:59,000 --> 00:25:59,000
对

849
00:25:59,000 --> 00:26:01,000
也许我觉得可能过两三代人

850
00:26:01,000 --> 00:26:02,000
会觉得公要私要

851
00:26:02,000 --> 00:26:04,000
是一个非常天经意义的概念

852
00:26:04,000 --> 00:26:05,000
就好像要什么所样

853
00:26:05,000 --> 00:26:07,000
那就非常容易理解

854
00:26:07,000 --> 00:26:08,000
你竟然这么乐观

855
00:26:08,000 --> 00:26:10,000
过两三代人就可以了

856
00:26:10,000 --> 00:26:11,000
两三代还不够

857
00:26:11,000 --> 00:26:12,000
我问一下

858
00:26:13,000 --> 00:26:14,000
不要高估群众的智商

859
00:26:16,000 --> 00:26:16,000
这个

860
00:26:16,000 --> 00:26:18,000
这句话太精英主要了

861
00:26:18,000 --> 00:26:19,000
要不要抹掉

862
00:26:21,000 --> 00:26:21,000
不要

863
00:26:21,000 --> 00:26:22,000
让他们来批我吧

864
00:26:23,000 --> 00:26:23,000
好吧

865
00:26:24,000 --> 00:26:24,000
好

866
00:26:24,000 --> 00:26:27,000
那么接下来就进入新闻环节吧

867
00:26:29,000 --> 00:26:31,000
不如就接着刚才的话头说

868
00:26:31,000 --> 00:26:34,000
最近这一次比较严重的一个

869
00:26:35,000 --> 00:26:36,000
一个安全事件

870
00:26:36,000 --> 00:26:37,000
应该说

871
00:26:37,000 --> 00:26:38,000
这个事件严重到

872
00:26:38,000 --> 00:26:40,000
严重的程度就是

873
00:26:41,000 --> 00:26:42,000
他关乎你我

874
00:26:45,000 --> 00:26:45,000
怎么说呢

875
00:26:45,000 --> 00:26:47,000
先介绍一下怎么回事吧

876
00:26:47,000 --> 00:26:48,000
对

877
00:26:48,000 --> 00:26:48,000
好

878
00:26:48,000 --> 00:26:49,000
有一个安全公司

879
00:26:49,000 --> 00:26:51,000
他这个公司的名字叫做

880
00:26:51,000 --> 00:26:51,000
Hacking Team

881
00:26:52,000 --> 00:26:53,000
就好像

882
00:26:53,000 --> 00:26:55,000
什么黑客小分队

883
00:26:55,000 --> 00:26:55,000
对

884
00:26:55,000 --> 00:26:56,000
要有家客栈

885
00:26:56,000 --> 00:26:57,000
他的名字叫做

886
00:26:57,000 --> 00:26:58,000
有家有间客栈一样

887
00:27:00,000 --> 00:27:01,000
然后这个安全公司

888
00:27:01,000 --> 00:27:03,000
这个 Hacking Team 就叫做 Hacking Team

889
00:27:04,000 --> 00:27:06,000
然后 Hacking Team 这家公司呢被黑了

890
00:27:06,000 --> 00:27:07,000
多福

891
00:27:09,000 --> 00:27:09,000
他不叫 Hacking Team

892
00:27:09,000 --> 00:27:10,000
叫 Hacking Team

893
00:27:11,000 --> 00:27:12,000
对

894
00:27:12,000 --> 00:27:13,000
然后 Hacking Team is Hacked

895
00:27:14,000 --> 00:27:15,000
然后这首先

896
00:27:15,000 --> 00:27:17,000
这家公司是以什么为生呢

897
00:27:17,000 --> 00:27:18,000
他们其实就是

898
00:27:19,000 --> 00:27:20,000
专门搞破解

899
00:27:21,000 --> 00:27:22,000
但是

900
00:27:23,000 --> 00:27:24,000
他搞破解之后

901
00:27:24,000 --> 00:27:25,000
不会

902
00:27:25,000 --> 00:27:26,000
不会告诉那些被破解的

903
00:27:27,000 --> 00:27:28,000
或是被黑了的

904
00:27:28,000 --> 00:27:29,000
网站或者公司

905
00:27:29,000 --> 00:27:31,000
说你们的产品有问题

906
00:27:31,000 --> 00:27:33,000
而是把这些漏洞藏起来

907
00:27:34,000 --> 00:27:35,000
捆起来卖一下

908
00:27:35,000 --> 00:27:35,000
对

909
00:27:35,000 --> 00:27:37,000
放在货架上

910
00:27:37,000 --> 00:27:39,000
然后包起来卖给这些

911
00:27:39,000 --> 00:27:40,000
比如说 NSA

912
00:27:40,000 --> 00:27:41,000
或者是

913
00:27:42,000 --> 00:27:44,000
也是中国人也有他们的客户

914
00:27:44,000 --> 00:27:46,000
或者是一些商业间谍

915
00:27:46,000 --> 00:27:46,000
会说

916
00:27:48,000 --> 00:27:51,000
世界各国政府和这种大机构

917
00:27:51,000 --> 00:27:52,000
对

918
00:27:52,000 --> 00:27:52,000
就说

919
00:27:52,000 --> 00:27:55,000
他们不是直接卖这些破解吧

920
00:27:55,000 --> 00:27:57,000
他是卖打包的服务好像是

921
00:27:57,000 --> 00:27:58,000
对

922
00:27:58,000 --> 00:27:58,000
它

923
00:27:59,000 --> 00:28:01,000
部分漏洞是会卖出去

924
00:28:01,000 --> 00:28:03,000
如果你只买服务的话

925
00:28:03,000 --> 00:28:04,000
你会需要

926
00:28:04,000 --> 00:28:05,000
你付的钱少一点

927
00:28:05,000 --> 00:28:06,000
但是如果你要把整个

928
00:28:06,000 --> 00:28:08,000
这个总说知识产权加以后

929
00:28:08,000 --> 00:28:09,000
买药方

930
00:28:09,000 --> 00:28:09,000
对

931
00:28:09,000 --> 00:28:11,000
那是要花很大很大以前

932
00:28:12,000 --> 00:28:13,000
然后他们

933
00:28:14,000 --> 00:28:15,000
靠这个赚钱

934
00:28:15,000 --> 00:28:18,000
攒了 400 Gb 的数据

935
00:28:18,000 --> 00:28:20,000
当然后来有消息说

936
00:28:20,000 --> 00:28:21,000
这个 400 Gb 里面

937
00:28:21,000 --> 00:28:22,000
很多很多都是 email

938
00:28:22,000 --> 00:28:23,000
就没什么用

939
00:28:24,000 --> 00:28:24,000
没有啊

940
00:28:24,000 --> 00:28:25,000
email 很有用的

941
00:28:26,000 --> 00:28:27,000
好吧

942
00:28:27,000 --> 00:28:29,000
就是各种机密都在 email 里面暴露

943
00:28:29,000 --> 00:28:31,000
在数据方面

944
00:28:32,000 --> 00:28:33,000
在 400 G 里面

945
00:28:33,000 --> 00:28:34,000
有很多只是数据

946
00:28:34,000 --> 00:28:36,000
而真正和方法相关的部分

947
00:28:36,000 --> 00:28:38,000
可能只有只有几百兆

948
00:28:38,000 --> 00:28:38,000
但无论如何

949
00:28:38,000 --> 00:28:41,000
这里面全都是非常非常机密的信息

950
00:28:42,000 --> 00:28:45,000
然后这一些数据全都被黑了

951
00:28:45,000 --> 00:28:46,000
然后被放在了网上

952
00:28:46,000 --> 00:28:49,000
现在你我它都可以去搞下来

953
00:28:51,000 --> 00:28:52,000
所以你下载了吗

954
00:28:53,000 --> 00:28:54,000
没有

955
00:28:55,000 --> 00:28:56,000
何必呢

956
00:28:56,000 --> 00:28:58,000
400 Gb 我硬盘都抓不下来

957
00:28:58,000 --> 00:29:00,000
400 Gb 现在随便一个小硬盘都能可以啊

958
00:29:01,000 --> 00:29:01,000
我

959
00:29:01,000 --> 00:29:03,000
只问题全不是 SSD

960
00:29:03,000 --> 00:29:05,000
我的 SSD 是装不下

961
00:29:05,000 --> 00:29:06,000
我的 SSD 就是 512

962
00:29:06,000 --> 00:29:08,000
然后还装了一堆有信息

963
00:29:08,000 --> 00:29:08,000
所以

964
00:29:08,000 --> 00:29:09,000
买个那个什么吧

965
00:29:09,000 --> 00:29:11,000
那个外置

966
00:29:11,000 --> 00:29:11,000
外置有装有啊

967
00:29:11,000 --> 00:29:12,000
但

968
00:29:12,000 --> 00:29:14,000
何必装装能用的东西是不是

969
00:29:15,000 --> 00:29:16,000
这装了很多

970
00:29:16,000 --> 00:29:17,000
觉得自己会看

971
00:29:17,000 --> 00:29:18,000
但其实根本不会看的

972
00:29:20,000 --> 00:29:20,000
不要想歪了

973
00:29:20,000 --> 00:29:21,000
我是说电子树

974
00:29:24,000 --> 00:29:24,000
好吧

975
00:29:25,000 --> 00:29:25,000
对啊

976
00:29:27,000 --> 00:29:29,000
然后在所有这些已经被下载

977
00:29:29,000 --> 00:29:30,000
已经被迫解

978
00:29:30,000 --> 00:29:32,000
被爆传的工具里面

979
00:29:32,000 --> 00:29:34,000
有一个比较严重的漏洞

980
00:29:34,000 --> 00:29:35,000
是在 flash 上面

981
00:29:35,000 --> 00:29:38,000
就是臭名昭著的 flash

982
00:29:38,000 --> 00:29:39,000
竟然只有一个

983
00:29:39,000 --> 00:29:40,000
我也很吃惊

984
00:29:40,000 --> 00:29:42,000
或是目前被发现的只有一个

985
00:29:42,000 --> 00:29:45,000
是一个非常严重 flash zero day

986
00:29:45,000 --> 00:29:47,000
然后它最大问题是

987
00:29:47,000 --> 00:29:48,000
它可以让任何网站

988
00:29:48,000 --> 00:29:49,000
这网站上没有 flash

989
00:29:51,000 --> 00:29:51,000
的话

990
00:29:51,000 --> 00:29:54,000
可以让你在访问这个网站

991
00:29:54,000 --> 00:29:55,000
并且运行这个 flash 的时候

992
00:29:56,000 --> 00:29:58,000
在你的机器上

993
00:29:58,000 --> 00:29:59,000
以关于原权线

994
00:29:59,000 --> 00:30:00,000
执行任何大象

995
00:30:00,000 --> 00:30:01,000
执行的代码

996
00:30:02,000 --> 00:30:03,000
是一件

997
00:30:03,000 --> 00:30:05,000
就你可能听起来没有什么

998
00:30:05,000 --> 00:30:07,000
但你硬换上所有的

999
00:30:09,000 --> 00:30:09,000
短信

1000
00:30:10,000 --> 00:30:10,000
邮件

1001
00:30:11,000 --> 00:30:12,000
燕罩

1002
00:30:13,000 --> 00:30:13,000
总之你就裸奔了

1003
00:30:14,000 --> 00:30:15,000
对

1004
00:30:15,000 --> 00:30:16,000
全都跟把

1005
00:30:17,000 --> 00:30:17,000
全都跟那个

1006
00:30:19,000 --> 00:30:19,000
就像陈坤熙

1007
00:30:21,000 --> 00:30:23,000
无辜的把他的电脑交给

1008
00:30:23,000 --> 00:30:23,000
修理电脑的人一样

1009
00:30:24,000 --> 00:30:26,000
暴露在这个网站下面

1010
00:30:28,000 --> 00:30:29,000
然后当然紧急的

1011
00:30:29,000 --> 00:30:30,000
紧急的

1012
00:30:30,000 --> 00:30:31,000
派出人就出来了

1013
00:30:31,000 --> 00:30:31,000
但是

1014
00:30:32,000 --> 00:30:34,000
我相信很多人还是没有撞

1015
00:30:34,000 --> 00:30:35,000
所以如果你听这个

1016
00:30:35,000 --> 00:30:36,000
听到这里的话

1017
00:30:36,000 --> 00:30:37,000
最好赶紧去撞一下

1018
00:30:38,000 --> 00:30:39,000
真的是为了自己好

1019
00:30:43,000 --> 00:30:46,000
所以这件事情怎么说呢

1020
00:30:46,000 --> 00:30:46,000
就是说

1021
00:30:47,000 --> 00:30:48,000
就之前大家都知道

1022
00:30:48,000 --> 00:30:49,000
说这些

1023
00:30:49,000 --> 00:30:50,000
安全漏洞是可以私下

1024
00:30:50,000 --> 00:30:51,000
买卖交易

1025
00:30:51,000 --> 00:30:53,000
然后可以用来去

1026
00:30:53,000 --> 00:30:54,000
去黑进别人电脑

1027
00:30:54,000 --> 00:30:55,000
当然

1028
00:30:55,000 --> 00:30:56,000
很大的抱着一个什么

1029
00:30:56,000 --> 00:30:58,000
一个侥幸性的觉得没事

1030
00:30:58,000 --> 00:30:59,000
谁来搞我

1031
00:30:59,000 --> 00:31:00,000
谁来搞我

1032
00:31:00,000 --> 00:31:01,000
我又不是什么重要人物

1033
00:31:01,000 --> 00:31:02,000
是吧

1034
00:31:02,000 --> 00:31:02,000
对

1035
00:31:02,000 --> 00:31:04,000
但我觉得这次暴露

1036
00:31:04,000 --> 00:31:04,000
就是

1037
00:31:05,000 --> 00:31:06,000
将我吃惊的是

1038
00:31:06,000 --> 00:31:08,000
原来可以有这么

1039
00:31:09,000 --> 00:31:11,000
这么多这么惊人的

1040
00:31:13,000 --> 00:31:15,000
海量的数据

1041
00:31:15,000 --> 00:31:16,000
可以跟我人购买

1042
00:31:16,000 --> 00:31:17,000
我以前总觉得

1043
00:31:18,000 --> 00:31:18,000
对吧

1044
00:31:18,000 --> 00:31:18,000
可以

1045
00:31:19,000 --> 00:31:20,000
大家都以前觉得

1046
00:31:20,000 --> 00:31:21,000
只看了个 B 3 一角是吧

1047
00:31:21,000 --> 00:31:22,000
现在看到

1048
00:31:22,000 --> 00:31:22,000
哎

1049
00:31:22,000 --> 00:31:23,000
看到 B 3 的半截

1050
00:31:24,000 --> 00:31:24,000
对

1051
00:31:24,000 --> 00:31:25,000
其实上面还有

1052
00:31:25,000 --> 00:31:26,000
还有更庞大的生态链

1053
00:31:26,000 --> 00:31:27,000
我们是看不到的

1054
00:31:27,000 --> 00:31:29,000
不巧先生的生水加带

1055
00:31:29,000 --> 00:31:30,000
然后好好服上

1056
00:31:30,000 --> 00:31:32,000
居然服上了这么多特色的冰

1057
00:31:32,000 --> 00:31:33,000
对

1058
00:31:35,000 --> 00:31:36,000
但是呢

1059
00:31:36,000 --> 00:31:37,000
就有什么问题呢

1060
00:31:37,000 --> 00:31:37,000
就是

1061
00:31:39,000 --> 00:31:41,000
这些还是我公开就用的

1062
00:31:41,000 --> 00:31:43,000
就在他做成这个商业化的产品

1063
00:31:44,000 --> 00:31:46,000
这之前已经有很多人受害了

1064
00:31:46,000 --> 00:31:47,000
其实你不知道而已

1065
00:31:47,000 --> 00:31:48,000
对

1066
00:31:48,000 --> 00:31:48,000
我们也有

1067
00:31:48,000 --> 00:31:50,000
就是我可能这个时候

1068
00:31:50,000 --> 00:31:51,000
我们在录音对吧

1069
00:31:51,000 --> 00:31:52,000
说出是一个人谁在监控

1070
00:31:52,000 --> 00:31:53,000
我们也很难讲

1071
00:31:54,000 --> 00:31:54,000
对

1072
00:31:54,000 --> 00:31:56,000
在报出来的数据里面

1073
00:31:56,000 --> 00:31:57,000
报出来的资料里面

1074
00:31:57,000 --> 00:32:00,000
有据称 Hacking Team

1075
00:32:00,000 --> 00:32:01,000
有在所有的

1076
00:32:01,000 --> 00:32:03,000
几乎所有的 Windows 客户端上

1077
00:32:03,000 --> 00:32:04,000
安装远程周面的方法

1078
00:32:05,000 --> 00:32:06,000
包括 Windows Phone

1079
00:32:07,000 --> 00:32:08,000
就是你在用手机

1080
00:32:08,000 --> 00:32:10,000
你手机上显示什么

1081
00:32:10,000 --> 00:32:12,000
可能已经有人可以去看了

1082
00:32:12,000 --> 00:32:13,000
只不过他才从来没有看过而已

1083
00:32:15,000 --> 00:32:16,000
还没来得及看一次

1084
00:32:16,000 --> 00:32:16,000
对

1085
00:32:17,000 --> 00:32:18,000
前一阵子那个

1086
00:32:19,000 --> 00:32:20,000
Vikitix 报出来

1087
00:32:20,000 --> 00:32:22,000
从失落得到 Makerl

1088
00:32:22,000 --> 00:32:25,000
每一任德国总理全都被 NSA 切定了

1089
00:32:25,000 --> 00:32:27,000
就政府要人肯定是吵不掉的

1090
00:32:27,000 --> 00:32:28,000
这点什么不用想

1091
00:32:29,000 --> 00:32:31,000
只是说我们现在关注我们这种

1092
00:32:31,000 --> 00:32:33,000
什么小老百姓对吧

1093
00:32:33,000 --> 00:32:33,000
对

1094
00:32:33,000 --> 00:32:37,000
然后里面可能有一部分的手段

1095
00:32:37,000 --> 00:32:38,000
就来自于这一次被报出来的

1096
00:32:38,000 --> 00:32:41,000
Hacking Team 所开发的技术

1097
00:32:41,000 --> 00:32:41,000
对

1098
00:32:41,000 --> 00:32:43,000
这都是综合性的工程

1099
00:32:43,000 --> 00:32:44,000
就是他

1100
00:32:44,000 --> 00:32:45,000
可能 Hacking Team

1101
00:32:45,000 --> 00:32:47,000
他掌握了一部分的这么一些漏洞

1102
00:32:47,000 --> 00:32:47,000
对吧

1103
00:32:47,000 --> 00:32:48,000
还有一些其他的

1104
00:32:49,000 --> 00:32:51,000
更自身或藏得更好的

1105
00:32:52,000 --> 00:32:54,000
这种组织或者个人

1106
00:32:55,000 --> 00:32:56,000
比如说 NSA 对吧

1107
00:32:56,000 --> 00:32:58,000
他们自己有一套手上的

1108
00:32:58,000 --> 00:32:59,000
所谓的什么核武器

1109
00:32:59,000 --> 00:33:00,000
对

1110
00:33:00,000 --> 00:33:01,000
这种东西

1111
00:33:01,000 --> 00:33:04,000
然后这些东西报出来的危害在哪里呢

1112
00:33:04,000 --> 00:33:05,000
就好像怎么说呢

1113
00:33:06,000 --> 00:33:08,000
穿有一个人告诉你说

1114
00:33:08,000 --> 00:33:11,000
大家过去都不知道这个原子弹怎么造对吧

1115
00:33:11,000 --> 00:33:12,000
然后现在他

1116
00:33:12,000 --> 00:33:14,000
哎我告诉你原子弹是这么这么这么早

1117
00:33:15,000 --> 00:33:17,000
而且造这个原子弹不怎么麻烦

1118
00:33:17,000 --> 00:33:18,000
不怎么费钱

1119
00:33:18,000 --> 00:33:19,000
行吗

1120
00:33:19,000 --> 00:33:21,000
你只有有了图纸就可以上了

1121
00:33:21,000 --> 00:33:23,000
不像说你真的造一个原子弹

1122
00:33:23,000 --> 00:33:23,000
你有了图纸

1123
00:33:23,000 --> 00:33:25,000
你可能不一定有那个什么离心机

1124
00:33:25,000 --> 00:33:29,000
你可能还体验不出来那么高纯度的什么放置性物质对吧

1125
00:33:30,000 --> 00:33:31,000
像这种软件的原子弹

1126
00:33:31,000 --> 00:33:34,000
那个核武器拿了就可以用了

1127
00:33:34,000 --> 00:33:35,000
对

1128
00:33:35,000 --> 00:33:36,000
所以

1129
00:33:37,000 --> 00:33:41,000
反正就是大家就最近后这段时间就知道自求多福了

1130
00:33:41,000 --> 00:33:44,000
因为报出来之后公开了这些东西之后

1131
00:33:46,000 --> 00:33:47,000
好用坏人都会用他的

1132
00:33:47,000 --> 00:33:49,000
然后你也不知道谁会对你有利

1133
00:33:49,000 --> 00:33:51,000
谁会对你不利对不对

1134
00:33:51,000 --> 00:33:51,000
对

1135
00:33:51,000 --> 00:33:53,000
所以我觉得这次出来的最

1136
00:33:54,000 --> 00:33:56,000
我最关心的严问题就是

1137
00:33:56,000 --> 00:33:58,000
比如说我用苹果这个系统对吧

1138
00:33:58,000 --> 00:34:03,000
我就关心 Apple 他会不会专门派一个什么专门搞一个小组的人

1139
00:34:03,000 --> 00:34:06,000
去研究在那边报出来这些公开的漏洞

1140
00:34:06,000 --> 00:34:08,000
马上把它跟他相关的现在修好啊

1141
00:34:09,000 --> 00:34:11,000
这也是个 little face

1142
00:34:11,000 --> 00:34:11,000
你永远不知道吧

1143
00:34:11,000 --> 00:34:12,000
不不

1144
00:34:12,000 --> 00:34:14,000
就是我觉得作为一家

1145
00:34:14,000 --> 00:34:16,000
你只能选择相作吗

1146
00:34:16,000 --> 00:34:16,000
不是

1147
00:34:16,000 --> 00:34:19,000
他应该做的就是把这个事情

1148
00:34:19,000 --> 00:34:21,000
作为他的一个一个叫什么

1149
00:34:21,000 --> 00:34:23,000
那个核心药物吧

1150
00:34:23,000 --> 00:34:24,000
提上意思是马上去做

1151
00:34:24,000 --> 00:34:25,000
意思是他们会重视

1152
00:34:25,000 --> 00:34:26,000
那肯定会

1153
00:34:26,000 --> 00:34:27,000
对对

1154
00:34:27,000 --> 00:34:28,000
但不确定啊

1155
00:34:28,000 --> 00:34:29,000
你现在他不知道他没有

1156
00:34:29,000 --> 00:34:29,000
他没有支撒嘛

1157
00:34:29,000 --> 00:34:30,000
对吧

1158
00:34:30,000 --> 00:34:31,000
这是我的 little face

1159
00:34:31,000 --> 00:34:33,000
对我是 i hope

1160
00:34:33,000 --> 00:34:34,000
能够做到

1161
00:34:34,000 --> 00:34:37,000
但是不一定嘛

1162
00:34:37,000 --> 00:34:40,000
所以就看最近你而且他们修那个

1163
00:34:40,000 --> 00:34:42,000
就他们去分析一个漏洞

1164
00:34:42,000 --> 00:34:44,000
然后去修达布丁

1165
00:34:44,000 --> 00:34:46,000
还要测试再放给大众

1166
00:34:46,000 --> 00:34:47,000
东西还要这么一场

1167
00:34:47,000 --> 00:34:50,000
至少可能有这么一两周或者一两个月的没有过程

1168
00:34:50,000 --> 00:34:51,000
对吧

1169
00:34:51,000 --> 00:34:51,000
所以在这段时间

1170
00:34:51,000 --> 00:34:55,000
大家还是都处于在裸奔的状态

1171
00:34:55,000 --> 00:34:56,000
对对对

1172
00:34:56,000 --> 00:35:00,000
所以真的是安全是很难很难的

1173
00:35:00,000 --> 00:35:02,000
就从从某种意义上来说

1174
00:35:03,000 --> 00:35:05,000
以后的这个所谓的真正意义上的安全

1175
00:35:05,000 --> 00:35:08,000
就只能是少部分什么特权阶级

1176
00:35:08,000 --> 00:35:10,000
或者特别有钱的人能够享受的服务了

1177
00:35:11,000 --> 00:35:13,000
因为你看有这么多人花钱来搞你

1178
00:35:13,000 --> 00:35:13,000
对吧

1179
00:35:13,000 --> 00:35:14,000
但怎么办

1180
00:35:14,000 --> 00:35:15,000
你怎么花钱放着

1181
00:35:15,000 --> 00:35:16,000
你得有钱

1182
00:35:16,000 --> 00:35:17,000
你付得起四人兵才

1183
00:35:17,000 --> 00:35:19,000
四人雇佣军才可以

1184
00:35:19,000 --> 00:35:20,000
对对对不上次那个谁

1185
00:35:21,000 --> 00:35:22,000
是希拉里克伦顿

1186
00:35:22,000 --> 00:35:24,000
他不是在击险美国总统吗

1187
00:35:24,000 --> 00:35:27,000
然后他后来就有很多报道去去去

1188
00:35:27,000 --> 00:35:28,000
扒他的那过去

1189
00:35:28,000 --> 00:35:30,000
说他在当那个

1190
00:35:30,000 --> 00:35:32,000
他当国务卿还是什么来的

1191
00:35:33,000 --> 00:35:35,000
反正是 secretary state

1192
00:35:35,000 --> 00:35:35,000
应该是国务卿嘛

1193
00:35:35,000 --> 00:35:37,000
公务卿对对

1194
00:35:37,000 --> 00:35:38,000
然后期间

1195
00:35:39,000 --> 00:35:41,000
他竟然在自己家里

1196
00:35:41,000 --> 00:35:44,000
地下室搞了一个 mail server

1197
00:35:44,000 --> 00:35:46,000
有件服务器去跑他自己的私人邮件

1198
00:35:47,000 --> 00:35:49,000
然后他的目的也比较简单

1199
00:35:49,000 --> 00:35:49,000
就是避开

1200
00:35:49,000 --> 00:35:51,000
因为如果他用工那个政府

1201
00:35:51,000 --> 00:35:53,000
就是白宫的邮件服务器

1202
00:35:53,000 --> 00:35:56,000
他不是那个被审查是肯定的

1203
00:35:56,000 --> 00:35:58,000
像会被 archi 会被存档

1204
00:35:58,000 --> 00:35:59,000
然后以后可能会被翻出来

1205
00:35:59,000 --> 00:36:00,000
做出一些对他不利的东西

1206
00:36:01,000 --> 00:36:04,000
所以他就搞了一个自己的私服

1207
00:36:04,000 --> 00:36:05,000
然后自己的一些

1208
00:36:05,000 --> 00:36:06,000
在上面套穿器

1209
00:36:07,000 --> 00:36:09,000
自己在邮件上面玩

1210
00:36:09,000 --> 00:36:10,000
然后一些东西

1211
00:36:10,000 --> 00:36:11,000
然后后来就说

1212
00:36:11,000 --> 00:36:12,000
我操那还得了

1213
00:36:12,000 --> 00:36:14,000
就想白宫的那些邮件服务器

1214
00:36:14,000 --> 00:36:15,000
给他们 ASA

1215
00:36:15,000 --> 00:36:17,000
得专门派一小队人在那里

1216
00:36:17,000 --> 00:36:18,000
帮他盯着嘛

1217
00:36:18,000 --> 00:36:19,000
好歹还好一点

1218
00:36:20,000 --> 00:36:21,000
他放自己家里谁给他盯着

1219
00:36:24,000 --> 00:36:25,000
所以我还是蛮震惊的

1220
00:36:25,000 --> 00:36:26,000
然后竟然还有这种玩法

1221
00:36:28,000 --> 00:36:29,000
不过还很圈圈

1222
00:36:29,000 --> 00:36:31,000
一般通过邮件交流的

1223
00:36:31,000 --> 00:36:32,000
也不是什么

1224
00:36:32,000 --> 00:36:34,000
特别要紧的国家机密

1225
00:36:34,000 --> 00:36:35,000
那种合用专门专线

1226
00:36:35,000 --> 00:36:36,000
所有的

1227
00:36:36,000 --> 00:36:37,000
还还凑合

1228
00:36:37,000 --> 00:36:41,000
但是这种这种消息还是挺不容易的

1229
00:36:41,000 --> 00:36:42,000
这回到了那个什么

1230
00:36:43,000 --> 00:36:44,000
刚刚我们开场

1231
00:36:44,000 --> 00:36:45,000
提到那个你到底相信谁是吧

1232
00:36:46,000 --> 00:36:47,000
其实正确答案是

1233
00:36:47,000 --> 00:36:48,000
Trust no one

1234
00:36:50,000 --> 00:36:51,000
但是做不到嘛

1235
00:36:51,000 --> 00:36:56,000
这是 X star 里面那个主角点吗

1236
00:36:56,000 --> 00:36:56,000
Ted Fox

1237
00:36:56,000 --> 00:36:57,000
Fox Ted

1238
00:36:59,000 --> 00:37:00,000
他叫什么

1239
00:37:00,000 --> 00:37:01,000
Murder

1240
00:37:02,000 --> 00:37:04,000
Murder 他的开机密码就是 Trust no one

1241
00:37:06,000 --> 00:37:07,000
你现在也知道了

1242
00:37:08,000 --> 00:37:11,000
就是你正确的方法是 Trust no one

1243
00:37:11,000 --> 00:37:12,000
但是其实做不到

1244
00:37:12,000 --> 00:37:13,000
我相信这个幸运上

1245
00:37:13,000 --> 00:37:16,000
99%的人都做不到

1246
00:37:17,000 --> 00:37:19,000
因为你要 Trust no one 的话

1247
00:37:19,000 --> 00:37:20,000
就像刚才我说的

1248
00:37:20,000 --> 00:37:22,000
从硬件底层开始

1249
00:37:22,000 --> 00:37:24,000
每一个步骤都要经过

1250
00:37:24,000 --> 00:37:25,000
你自己的验证对吧

1251
00:37:26,000 --> 00:37:27,000
对

1252
00:37:27,000 --> 00:37:28,000
其实不现实了

1253
00:37:28,000 --> 00:37:30,000
所以只能选择

1254
00:37:30,000 --> 00:37:31,000
相信一帮人了

1255
00:37:31,000 --> 00:37:33,000
然后至于说

1256
00:37:33,000 --> 00:37:36,000
你选择相信他之后会发生什么

1257
00:37:37,000 --> 00:37:37,000
那就只能

1258
00:37:38,000 --> 00:37:39,000
天知道了

1259
00:37:40,000 --> 00:37:40,000
对

1260
00:37:40,000 --> 00:37:41,000
当然我觉得也不用

1261
00:37:41,000 --> 00:37:44,000
特别过分的去怀疑

1262
00:37:45,000 --> 00:37:46,000
怀疑

1263
00:37:47,000 --> 00:37:47,000
怀疑这些人吧

1264
00:37:47,000 --> 00:37:49,000
或者说怀疑屏公司

1265
00:37:49,000 --> 00:37:50,000
或者说怀疑我太后人那个人

1266
00:37:50,000 --> 00:37:53,000
因为你获得现在社会里面

1267
00:37:53,000 --> 00:37:54,000
完全不相信任何人

1268
00:37:54,000 --> 00:37:55,000
其实只是一个

1269
00:37:56,000 --> 00:37:57,000
美好的愿景和假象

1270
00:37:57,000 --> 00:37:58,000
你是做不到的

1271
00:37:58,000 --> 00:37:59,000
我觉得

1272
00:38:00,000 --> 00:38:01,000
我觉得这是这样子的

1273
00:38:01,000 --> 00:38:01,000
就是

1274
00:38:03,000 --> 00:38:06,000
这个现在这些系统已经太复杂了

1275
00:38:07,000 --> 00:38:08,000
你没有可能

1276
00:38:08,000 --> 00:38:12,000
从一个比较高的可行度的情况下

1277
00:38:12,000 --> 00:38:13,000
确保这个体系不出任何问题

1278
00:38:14,000 --> 00:38:15,000
这就是不现实的

1279
00:38:15,000 --> 00:38:16,000
就好像你说指望

1280
00:38:16,000 --> 00:38:17,000
我要这个软件没有 bug

1281
00:38:19,000 --> 00:38:20,000
不太现实

1282
00:38:22,000 --> 00:38:23,000
这个时候怎么办呢

1283
00:38:23,000 --> 00:38:25,000
你只能说就选择相信

1284
00:38:26,000 --> 00:38:26,000
对

1285
00:38:26,000 --> 00:38:27,000
我觉得复杂度

1286
00:38:27,000 --> 00:38:28,000
固然是一方面

1287
00:38:28,000 --> 00:38:30,000
另一方面是你在社会中已经

1288
00:38:30,000 --> 00:38:32,000
你在现在社会里面已经选择

1289
00:38:32,000 --> 00:38:34,000
相信很多人了对吧

1290
00:38:34,000 --> 00:38:35,000
或者说无条件的去信

1291
00:38:35,000 --> 00:38:36,000
很多人甚至是很多人

1292
00:38:36,000 --> 00:38:37,000
你根本就不认识

1293
00:38:37,000 --> 00:38:38,000
根本就不知道他叫什么

1294
00:38:38,000 --> 00:38:40,000
比如说你上公车

1295
00:38:40,000 --> 00:38:41,000
你搭成飞机的时候

1296
00:38:41,000 --> 00:38:44,000
你就把生命交给了机长的手里

1297
00:38:44,000 --> 00:38:44,000
不是吗

1298
00:38:44,000 --> 00:38:46,000
然后你在银行存钱的时候

1299
00:38:46,000 --> 00:38:47,000
不过是机长啊

1300
00:38:47,000 --> 00:38:49,000
还有什么各种航空公司

1301
00:38:49,000 --> 00:38:50,000
对地前人员对吧

1302
00:38:50,000 --> 00:38:51,000
对吧

1303
00:38:51,000 --> 00:38:53,000
然后雷达 天气

1304
00:38:53,000 --> 00:38:54,000
还有什么上帝

1305
00:38:54,000 --> 00:38:57,000
不会砸个鸟过来撞死你

1306
00:38:57,000 --> 00:38:57,000
是不是

1307
00:38:57,000 --> 00:38:58,000
对

1308
00:38:58,000 --> 00:38:59,000
这类的

1309
00:38:59,000 --> 00:38:59,000
对

1310
00:38:59,000 --> 00:39:00,000
所以活着就要

1311
00:39:00,000 --> 00:39:03,000
有时候就是被迫要盲目相信一些人

1312
00:39:03,000 --> 00:39:05,000
life is risky

1313
00:39:05,000 --> 00:39:05,000
yeah

1314
00:39:09,000 --> 00:39:11,000
为什么忽然觉得好沉重

1315
00:39:11,000 --> 00:39:11,000
没有啊

1316
00:39:11,000 --> 00:39:12,000
就是大家都知道嘛

1317
00:39:12,000 --> 00:39:14,000
就是这个人生就是有风险

1318
00:39:14,000 --> 00:39:15,000
你坐家里还指不定

1319
00:39:15,000 --> 00:39:16,000
天下掉个东西什么

1320
00:39:16,000 --> 00:39:17,000
把你房子砸垮了

1321
00:39:17,000 --> 00:39:18,000
我吃面把你砸死了对吧

1322
00:39:19,000 --> 00:39:20,000
就好像今天

1323
00:39:20,000 --> 00:39:20,000
哎

1324
00:39:20,000 --> 00:39:22,000
刚刚我今天中午吃饭的时候

1325
00:39:23,000 --> 00:39:24,000
Apple 卧车人证了一下

1326
00:39:24,000 --> 00:39:26,000
然后他就手挖了一看说

1327
00:39:27,000 --> 00:39:28,000
呃

1328
00:39:28,000 --> 00:39:30,000
我住在这个地方叫 Francone

1329
00:39:30,000 --> 00:39:31,000
说 Francone 地区有一个

1330
00:39:31,000 --> 00:39:33,000
有一个枪发生的枪击案

1331
00:39:34,000 --> 00:39:34,000
然后

1332
00:39:35,000 --> 00:39:36,000
我说 what

1333
00:39:36,000 --> 00:39:38,000
然后赶紧进去看

1334
00:39:38,000 --> 00:39:39,000
看戏子

1335
00:39:39,000 --> 00:39:40,000
就在离我 50 公里的地方

1336
00:39:41,000 --> 00:39:41,000
有一个

1337
00:39:42,000 --> 00:39:42,000
有一个人

1338
00:39:43,000 --> 00:39:45,000
他开着一辆银色的

1339
00:39:46,000 --> 00:39:46,000
Methilis 的

1340
00:39:48,000 --> 00:39:48,000
Cabrio

1341
00:39:49,000 --> 00:39:50,000
场棚跑车

1342
00:39:51,000 --> 00:39:52,000
在路边停下

1343
00:39:52,000 --> 00:39:53,000
问路边一个老太太

1344
00:39:54,000 --> 00:39:56,000
82 岁老太太一些事

1345
00:39:56,000 --> 00:39:57,000
问完之后

1346
00:39:57,000 --> 00:39:58,000
老太太往回走的过程中

1347
00:39:58,000 --> 00:40:00,000
他掏出枪来把老太太打死了

1348
00:40:00,000 --> 00:40:01,000
what

1349
00:40:01,000 --> 00:40:02,000
死你命啊这是

1350
00:40:02,000 --> 00:40:03,000
我不知道啊

1351
00:40:03,000 --> 00:40:06,000
然后他开了大概 10 公里左右

1352
00:40:07,000 --> 00:40:10,000
又杀死了一个在路边骑自行车的人

1353
00:40:10,000 --> 00:40:12,000
所以还是把反射和人格是吧

1354
00:40:12,000 --> 00:40:13,000
我不知道这是今天才发生的事情

1355
00:40:13,000 --> 00:40:15,000
所以我可能一会儿看下新闻

1356
00:40:15,000 --> 00:40:16,000
才知道具体发生了什么

1357
00:40:16,000 --> 00:40:17,000
但这么说呢

1358
00:40:17,000 --> 00:40:18,000
就是非来横祸不是吗

1359
00:40:18,000 --> 00:40:20,000
而且离你这么近

1360
00:40:20,000 --> 00:40:22,000
就离我这么近 50 公里之外

1361
00:40:22,000 --> 00:40:22,000
我对呀

1362
00:40:22,000 --> 00:40:23,000
是有我每天

1363
00:40:23,000 --> 00:40:24,000
是不是每天

1364
00:40:24,000 --> 00:40:25,000
但以前

1365
00:40:25,000 --> 00:40:26,000
往返于

1366
00:40:27,000 --> 00:40:28,000
某地和某地之间每天会

1367
00:40:28,000 --> 00:40:29,000
好

1368
00:40:29,000 --> 00:40:30,000
为什么总要说每天

1369
00:40:31,000 --> 00:40:32,000
经常会经过这种

1370
00:40:32,000 --> 00:40:35,000
就是你看着高速公路上的牌子

1371
00:40:35,000 --> 00:40:35,000
记着这个名字

1372
00:40:35,000 --> 00:40:36,000
然后忽然今天

1373
00:40:37,000 --> 00:40:38,000
那儿发生了一次强奸

1374
00:40:38,000 --> 00:40:40,000
就是这种感觉

1375
00:40:40,000 --> 00:40:40,000
所以就是嘛

1376
00:40:40,000 --> 00:40:41,000
就是你可能什么

1377
00:40:41,000 --> 00:40:43,000
出门被车撞死

1378
00:40:43,000 --> 00:40:43,000
然后遇到个疯子

1379
00:40:43,000 --> 00:40:44,000
把你可以崩了

1380
00:40:44,000 --> 00:40:45,000
然后怎么喝水

1381
00:40:45,000 --> 00:40:47,000
也可能被淹死

1382
00:40:47,000 --> 00:40:48,000
就是呛死之类的

1383
00:40:49,000 --> 00:40:51,000
就是反正你这样做任何事情

1384
00:40:51,000 --> 00:40:52,000
就不管你做

1385
00:40:52,000 --> 00:40:53,000
还是不做任何事情

1386
00:40:53,000 --> 00:40:54,000
你总是会有机会

1387
00:40:54,000 --> 00:40:56,000
遇到这种小概率事件的

1388
00:40:56,000 --> 00:40:57,000
对

1389
00:40:57,000 --> 00:40:58,000
所以其实信息方面的

1390
00:40:58,000 --> 00:40:59,000
信息安全方面的风险

1391
00:40:59,000 --> 00:41:01,000
还是必须要承担一点

1392
00:41:01,000 --> 00:41:02,000
对

1393
00:41:02,000 --> 00:41:03,000
没有

1394
00:41:03,000 --> 00:41:03,000
你想

1395
00:41:03,000 --> 00:41:04,000
你这么想一下

1396
00:41:04,000 --> 00:41:05,000
你觉得你就安心了

1397
00:41:05,000 --> 00:41:06,000
事然一点

1398
00:41:06,000 --> 00:41:06,000
对

1399
00:41:08,000 --> 00:41:08,000
没错

1400
00:41:09,000 --> 00:41:09,000
OK

1401
00:41:09,000 --> 00:41:11,000
那么过渡到下一条新闻

1402
00:41:12,000 --> 00:41:13,000
这条新闻比较震热

1403
00:41:13,000 --> 00:41:14,000
就是

1404
00:41:14,000 --> 00:41:15,000
就是老文了吧

1405
00:41:15,000 --> 00:41:18,000
就已经上两周前的了

1406
00:41:18,000 --> 00:41:19,000
对

1407
00:41:19,000 --> 00:41:19,000
对

1408
00:41:19,000 --> 00:41:20,000
开发了

1409
00:41:22,000 --> 00:41:23,000
《蛮大马虽》

1410
00:41:23,000 --> 00:41:24,000
其实有七年

1411
00:41:24,000 --> 00:41:27,000
但是去年 2 月 26 日才

1412
00:41:27,000 --> 00:41:28,000
Public Beta 的这个

1413
00:41:29,000 --> 00:41:31,000
来自于 GitHub 的 Aetom

1414
00:41:32,000 --> 00:41:32,000
编辑器

1415
00:41:32,000 --> 00:41:33,000
金

1416
00:41:33,000 --> 00:41:34,000
什么金点

1417
00:41:35,000 --> 00:41:37,000
6 月 25 日终于发布了 1.0 版

1418
00:41:38,000 --> 00:41:39,000
这也是个什么

1419
00:41:39,000 --> 00:41:41,000
1.0 就是一个里程碑了

1420
00:41:41,000 --> 00:41:41,000
对

1421
00:41:42,000 --> 00:41:44,000
当然这是 GitHub 这种

1422
00:41:44,000 --> 00:41:45,000
比较负责的公司

1423
00:41:46,000 --> 00:41:47,000
会把 1.0 版这么

1424
00:41:47,000 --> 00:41:49,000
这么及时的试出来

1425
00:41:49,000 --> 00:41:50,000
你想当初

1426
00:41:50,000 --> 00:41:52,000
Google 没有 Beta 的多久

1427
00:41:54,000 --> 00:41:55,000
好多好多好多年

1428
00:41:56,000 --> 00:41:56,000
对

1429
00:41:56,000 --> 00:41:57,000
10 年又没有了

1430
00:41:58,000 --> 00:41:59,000
差不多吧

1431
00:42:00,000 --> 00:42:01,000
难以相信

1432
00:42:01,000 --> 00:42:01,000
对

1433
00:42:01,000 --> 00:42:03,000
所以 1.0 版有什么特别的

1434
00:42:05,000 --> 00:42:06,000
其实也没有什么特别

1435
00:42:06,000 --> 00:42:06,000
我自己看了一下

1436
00:42:06,000 --> 00:42:07,000
就是

1437
00:42:08,000 --> 00:42:08,000
他们

1438
00:42:10,000 --> 00:42:12,000
从 Public Release

1439
00:42:12,000 --> 00:42:13,000
一直到现在

1440
00:42:13,000 --> 00:42:15,000
已经 155 次 Release

1441
00:42:15,000 --> 00:42:17,000
就是过去了这一年多一点里面

1442
00:42:17,000 --> 00:42:18,000
155 次 Release

1443
00:42:18,000 --> 00:42:19,000
每次都有 Change List

1444
00:42:20,000 --> 00:42:22,000
然后现在就是他们

1445
00:42:22,000 --> 00:42:24,000
整个的编辑的

1446
00:42:25,000 --> 00:42:27,000
核心那个可以扩展的那一部分

1447
00:42:27,000 --> 00:42:28,000
就是 API 那一部分

1448
00:42:28,000 --> 00:42:30,000
已经被正式 Check 下来

1449
00:42:30,000 --> 00:42:31,000
这也是

1450
00:42:31,000 --> 00:42:33,000
发布 1.0 版的专业

1451
00:42:33,000 --> 00:42:34,000
然后

1452
00:42:34,000 --> 00:42:35,000
其实我想说的是

1453
00:42:35,000 --> 00:42:36,000
就是他有一个视频很有意思

1454
00:42:36,000 --> 00:42:38,000
他用一台

1455
00:42:38,000 --> 00:42:40,000
用那种 60 年的手法

1456
00:42:40,000 --> 00:42:41,000
就是如果你看过一个视频

1457
00:42:41,000 --> 00:42:42,000
叫做

1458
00:42:44,000 --> 00:42:47,000
Prediction of Home Computers

1459
00:42:47,000 --> 00:42:48,000
之类的这么一个

1460
00:42:48,000 --> 00:42:49,000
60 年代做的

1461
00:42:51,000 --> 00:42:52,000
未来

1462
00:42:52,000 --> 00:42:53,000
关于未来家用电脑上

1463
00:42:53,000 --> 00:42:54,000
展望视频的话

1464
00:42:54,000 --> 00:42:55,000
这个视频跟那个视频

1465
00:42:55,000 --> 00:42:57,000
是相呼应的那种感觉

1466
00:42:57,000 --> 00:42:59,000
对

1467
00:42:59,000 --> 00:43:00,000
那个 60 年的视频里面

1468
00:43:00,000 --> 00:43:02,000
说已经假想了

1469
00:43:02,000 --> 00:43:03,000
将来的人们回家

1470
00:43:03,000 --> 00:43:04,000
一回家就会开载脑

1471
00:43:04,000 --> 00:43:07,000
然后可以在多个显示器上

1472
00:43:07,000 --> 00:43:08,000
处理表格

1473
00:43:08,000 --> 00:43:10,000
然后可以通过一个巨大的

1474
00:43:10,000 --> 00:43:12,000
电视屏幕一样的东西

1475
00:43:12,000 --> 00:43:13,000
和一个滚轮

1476
00:43:15,000 --> 00:43:16,000
滚球应该说

1477
00:43:16,000 --> 00:43:17,000
之类的

1478
00:43:17,000 --> 00:43:19,000
会以玄扭之类的东西来

1479
00:43:19,000 --> 00:43:20,000
在线购物

1480
00:43:20,000 --> 00:43:21,000
那个时候

1481
00:43:21,000 --> 00:43:23,000
已经全都想到了这些

1482
00:43:23,000 --> 00:43:25,000
然后这个 Atoom 1.0 的

1483
00:43:25,000 --> 00:43:26,000
确实视频就是

1484
00:43:27,000 --> 00:43:28,000
拍摄的也不算

1485
00:43:28,000 --> 00:43:29,000
就是

1486
00:43:29,000 --> 00:43:30,000
用那种风格拍了一个

1487
00:43:32,000 --> 00:43:33,000
一家人围绕着这么一个

1488
00:43:33,000 --> 00:43:35,000
专用的 Atoom 控制台上面

1489
00:43:35,000 --> 00:43:37,000
写来的过程

1490
00:43:37,000 --> 00:43:38,000
还蛮值得一看的

1491
00:43:39,000 --> 00:43:40,000
这个什么

1492
00:43:40,000 --> 00:43:41,000
程序源的二区位

1493
00:43:41,000 --> 00:43:41,000
就是

1494
00:43:41,000 --> 00:43:42,000
没错

1495
00:43:43,000 --> 00:43:44,000
然后可以顺便提一下

1496
00:43:44,000 --> 00:43:47,000
就是 Virtual Studio Code

1497
00:43:47,000 --> 00:43:48,000
也发布了 0.500

1498
00:43:49,000 --> 00:43:50,000
其实这几个

1499
00:43:50,000 --> 00:43:51,000
我一直搞不清楚

1500
00:43:51,000 --> 00:43:52,000
就是 Facebook 最近

1501
00:43:52,000 --> 00:43:53,000
之前不是也搞了一个叫

1502
00:43:55,000 --> 00:43:56,000
Nuclos 对吧

1503
00:43:57,000 --> 00:44:01,000
Nuclos 也是基于 Electro 了吗

1504
00:44:01,000 --> 00:44:02,000
不是吗

1505
00:44:03,000 --> 00:44:04,000
对对对

1506
00:44:04,000 --> 00:44:05,000
就是基于那个

1507
00:44:05,000 --> 00:44:06,000
那个什么电子

1508
00:44:06,000 --> 00:44:08,000
对对对

1509
00:44:08,000 --> 00:44:08,000
就是对

1510
00:44:08,000 --> 00:44:10,000
一套东西

1511
00:44:10,000 --> 00:44:11,000
反正就是基于 Web 技术

1512
00:44:11,000 --> 00:44:13,000
做了三款浏览器了

1513
00:44:13,000 --> 00:44:14,000
Atoom 是一个什么

1514
00:44:14,000 --> 00:44:16,000
算是第一个正统吧

1515
00:44:16,000 --> 00:44:16,000
对

1516
00:44:16,000 --> 00:44:18,000
有 Nuclos

1517
00:44:18,000 --> 00:44:20,000
然后有 Virtual Studio Code

1518
00:44:20,000 --> 00:44:21,000
对

1519
00:44:21,000 --> 00:44:22,000
还有什么

1520
00:44:22,000 --> 00:44:23,000
最新也是今年出的

1521
00:44:23,000 --> 00:44:24,000
还有什么 Slack

1522
00:44:24,000 --> 00:44:25,000
Slack

1523
00:44:25,000 --> 00:44:27,000
Slack

1524
00:44:27,000 --> 00:44:29,000
Slack 那个什么

1525
00:44:29,000 --> 00:44:30,000
协同软件吧

1526
00:44:30,000 --> 00:44:31,000
啊

1527
00:44:31,000 --> 00:44:32,000
哦

1528
00:44:32,000 --> 00:44:33,000
它也是那个

1529
00:44:33,000 --> 00:44:35,000
基于那个和谐的吗

1530
00:44:35,000 --> 00:44:35,000
对

1531
00:44:35,000 --> 00:44:37,000
也是整个时候

1532
00:44:37,000 --> 00:44:37,000
它自己好

1533
00:44:37,000 --> 00:44:40,000
叫自己 Messaging App

1534
00:44:40,000 --> 00:44:42,000
就是一个团队协同软件

1535
00:44:42,000 --> 00:44:43,000
但实际上它也是

1536
00:44:43,000 --> 00:44:45,000
从 Electro 改的

1537
00:44:45,000 --> 00:44:47,000
我记得 Laurance 还给咱俩发过

1538
00:44:47,000 --> 00:44:48,000
Invitation 箱子

1539
00:44:48,000 --> 00:44:49,000
我不能提

1540
00:44:49,000 --> 00:44:50,000
我有装

1541
00:44:50,000 --> 00:44:51,000
OK

1542
00:44:51,000 --> 00:44:51,000
我没装

1543
00:44:51,000 --> 00:44:52,000
用了一下

1544
00:44:52,000 --> 00:44:53,000
就其实你一看就知道

1545
00:44:53,000 --> 00:44:55,000
这其实是一个

1546
00:44:55,000 --> 00:44:57,000
WebView 风装起来的

1547
00:44:57,000 --> 00:44:58,000
壳子

1548
00:44:58,000 --> 00:45:00,000
比那个过去 WebView

1549
00:45:00,000 --> 00:45:01,000
可能做的要稍微原深一点

1550
00:45:01,000 --> 00:45:02,000
但是

1551
00:45:02,000 --> 00:45:05,000
毕竟还是不改它那个本质吧

1552
00:45:05,000 --> 00:45:05,000
对

1553
00:45:05,000 --> 00:45:07,000
因为当然这些本质是什么呢

1554
00:45:07,000 --> 00:45:08,000
比如说

1555
00:45:08,000 --> 00:45:09,000
我先问一下

1556
00:45:09,000 --> 00:45:10,000
Atoom 一点点能打开

1557
00:45:10,000 --> 00:45:13,000
一个 20 兆的文件吗

1558
00:45:13,000 --> 00:45:13,000
不知道

1559
00:45:13,000 --> 00:45:15,000
我还没装了

1560
00:45:15,000 --> 00:45:17,000
那似乎还是不行是吧

1561
00:45:17,000 --> 00:45:17,000
OK

1562
00:45:17,000 --> 00:45:18,000
虽然也不太肯定

1563
00:45:18,000 --> 00:45:21,000
有 20 兆的一个程序的代码

1564
00:45:21,000 --> 00:45:22,000
但是

1565
00:45:22,000 --> 00:45:23,000
嗯

1566
00:45:23,000 --> 00:45:25,000
毕竟还是有这么一个限制的

1567
00:45:25,000 --> 00:45:26,000
嗯

1568
00:45:27,000 --> 00:45:28,000
然后

1569
00:45:28,000 --> 00:45:30,000
这些东西都有一个

1570
00:45:30,000 --> 00:45:32,000
问题就是比较优种

1571
00:45:32,000 --> 00:45:33,000
对

1572
00:45:33,000 --> 00:45:34,000
起众比较

1573
00:45:34,000 --> 00:45:35,000
就叫占资源吧应该说

1574
00:45:35,000 --> 00:45:35,000
对

1575
00:45:35,000 --> 00:45:37,000
虽然说现在怎么

1576
00:45:37,000 --> 00:45:39,000
硬件资源比较丰富

1577
00:45:39,000 --> 00:45:39,000
但是

1578
00:45:39,000 --> 00:45:40,000
我总觉得哈

1579
00:45:40,000 --> 00:45:42,000
就这么浪费好像也不是一个

1580
00:45:42,000 --> 00:45:44,000
特别好的事

1581
00:45:44,000 --> 00:45:45,000
嗯

1582
00:45:45,000 --> 00:45:46,000
嗯

1583
00:45:46,000 --> 00:45:47,000
做一个编辑器

1584
00:45:47,000 --> 00:45:47,000
竟然要

1585
00:45:48,000 --> 00:45:49,000
无外照

1586
00:45:50,000 --> 00:45:50,000
就那层

1587
00:45:50,000 --> 00:45:51,000
才能跑起来

1588
00:45:52,000 --> 00:45:53,000
就就有点过了

1589
00:45:54,000 --> 00:45:54,000
是

1590
00:45:54,000 --> 00:45:55,000
对

1591
00:45:55,000 --> 00:45:57,000
这是为什么一些古老的

1592
00:45:59,000 --> 00:46:00,000
用 C 写的编辑

1593
00:46:00,000 --> 00:46:02,000
可以一直获到今天

1594
00:46:02,000 --> 00:46:02,000
然后

1595
00:46:02,000 --> 00:46:03,000
什么 vi 呀

1596
00:46:03,000 --> 00:46:04,000
e max

1597
00:46:04,000 --> 00:46:05,000
e max

1598
00:46:05,000 --> 00:46:06,000
还挺好的

1599
00:46:07,000 --> 00:46:07,000
哎

1600
00:46:07,000 --> 00:46:08,000
所以那个

1601
00:46:08,000 --> 00:46:10,000
其实你看好这一类的东西吗

1602
00:46:10,000 --> 00:46:11,000
就是把那种

1603
00:46:11,000 --> 00:46:12,000
web 的技术跑在客户端

1604
00:46:12,000 --> 00:46:15,000
跑在那个原生的皮里面

1605
00:46:15,000 --> 00:46:17,000
然后假装自己是原生一样

1606
00:46:18,000 --> 00:46:19,000
嗯

1607
00:46:19,000 --> 00:46:20,000
其实 Lauren 是前

1608
00:46:20,000 --> 00:46:22,000
上一期节目里面说什么

1609
00:46:22,000 --> 00:46:24,000
web app is for animals 的时候

1610
00:46:24,000 --> 00:46:24,000
我就想

1611
00:46:26,000 --> 00:46:27,000
把这个 web app

1612
00:46:27,000 --> 00:46:28,000
封装成一个

1613
00:46:28,000 --> 00:46:30,000
原生 F 的这种东西

1614
00:46:30,000 --> 00:46:30,000
有

1615
00:46:30,000 --> 00:46:31,000
应该怎么讲

1616
00:46:31,000 --> 00:46:32,000
不

1617
00:46:32,000 --> 00:46:32,000
这

1618
00:46:32,000 --> 00:46:33,000
这个我觉得跟 web app

1619
00:46:33,000 --> 00:46:34,000
可能还

1620
00:46:34,000 --> 00:46:35,000
就我们传统一认为的 web app

1621
00:46:35,000 --> 00:46:37,000
可能还不太一样

1622
00:46:37,000 --> 00:46:38,000
就是

1623
00:46:38,000 --> 00:46:38,000
传统一样 web app

1624
00:46:38,000 --> 00:46:40,000
可能还是在浏览器里面

1625
00:46:40,000 --> 00:46:40,000
然后

1626
00:46:41,000 --> 00:46:41,000
啊

1627
00:46:41,000 --> 00:46:42,000
他的

1628
00:46:42,000 --> 00:46:43,000
其实我觉得这个界线

1629
00:46:43,000 --> 00:46:44,000
主要在哪里

1630
00:46:44,000 --> 00:46:45,000
就是加他的这个

1631
00:46:45,000 --> 00:46:46,000
在离线状态下的行为

1632
00:46:47,000 --> 00:46:49,000
就起码这些几个应用都是说

1633
00:46:49,000 --> 00:46:50,000
他的本

1634
00:46:50,000 --> 00:46:52,000
本处是为

1635
00:46:52,000 --> 00:46:52,000
单击

1636
00:46:52,000 --> 00:46:54,000
或者离线状态自己运行的

1637
00:46:54,000 --> 00:46:56,000
呃呃

1638
00:46:56,000 --> 00:46:56,000
这种情况涉及的

1639
00:46:56,000 --> 00:46:58,000
他不牵涉到说

1640
00:46:58,000 --> 00:46:59,000
很多 web app

1641
00:46:59,000 --> 00:47:00,000
他没有做这个

1642
00:47:00,000 --> 00:47:02,000
叫做 app cache

1643
00:47:02,000 --> 00:47:04,000
和这个 offline mode 的情况下

1644
00:47:04,000 --> 00:47:05,000
那我没完全没法用的情况嘛

1645
00:47:05,000 --> 00:47:07,000
就这个我觉得还是有很大区别

1646
00:47:08,000 --> 00:47:09,000
好吧

1647
00:47:09,000 --> 00:47:11,000
我觉得最大区别还是在于那个

1648
00:47:11,000 --> 00:47:12,000
crow

1649
00:47:12,000 --> 00:47:13,000
就是在于那个

1650
00:47:13,000 --> 00:47:15,000
外面那个框架什么

1651
00:47:15,000 --> 00:47:16,000
你在用 web app 的时候

1652
00:47:16,000 --> 00:47:16,000
你会

1653
00:47:16,000 --> 00:47:17,000
有一个明确的

1654
00:47:18,000 --> 00:47:20,000
心理预期说我

1655
00:47:20,000 --> 00:47:22,000
正在榴载器里面使用一个东西

1656
00:47:22,000 --> 00:47:23,000
这个东西不是那题

1657
00:47:23,000 --> 00:47:23,000
不是那题

1658
00:47:23,000 --> 00:47:24,000
不是那题

1659
00:47:24,000 --> 00:47:25,000
不是那题

1660
00:47:25,000 --> 00:47:26,000
我觉得

1661
00:47:26,000 --> 00:47:28,000
至少我会有这样一种

1662
00:47:28,000 --> 00:47:29,000
默默的心理暗示

1663
00:47:29,000 --> 00:47:29,000
但是

1664
00:47:29,000 --> 00:47:30,000
我觉得这也就是为什么

1665
00:47:30,000 --> 00:47:31,000
google

1666
00:47:31,000 --> 00:47:32,000
google 要把那个

1667
00:47:33,000 --> 00:47:34,000
呃

1668
00:47:34,000 --> 00:47:35,000
crow maps

1669
00:47:35,000 --> 00:47:36,000
单独拎出来

1670
00:47:36,000 --> 00:47:37,000
放成一个

1671
00:47:37,000 --> 00:47:38,000
呃

1672
00:47:38,000 --> 00:47:40,000
独立于榴载器之外的

1673
00:47:40,000 --> 00:47:41,000
呃

1674
00:47:41,000 --> 00:47:41,000
窗口

1675
00:47:41,000 --> 00:47:43,000
放在一个独立于榴载器之外的窗口里面

1676
00:47:43,000 --> 00:47:44,000
嗯

1677
00:47:44,000 --> 00:47:45,000
让用后来用

1678
00:47:45,000 --> 00:47:46,000
呃

1679
00:47:46,000 --> 00:47:46,000
我觉得

1680
00:47:46,000 --> 00:47:48,000
它就是试图打破这种 crow

1681
00:47:48,000 --> 00:47:49,000
但是

1682
00:47:50,000 --> 00:47:50,000
像我眼睛

1683
00:47:50,000 --> 00:47:51,000
拖加锁嘛

1684
00:47:51,000 --> 00:47:52,000
对

1685
00:47:52,000 --> 00:47:53,000
效果还是不适合它

1686
00:47:53,000 --> 00:47:55,000
所以你看得像那个 atom

1687
00:47:55,000 --> 00:47:56,000
这种

1688
00:47:56,000 --> 00:47:57,000
编辑器的时候

1689
00:47:57,000 --> 00:47:57,000
你用的时候

1690
00:47:57,000 --> 00:47:58,000
你会觉得它是一个

1691
00:47:58,000 --> 00:48:00,000
非原生的东西吗

1692
00:48:00,000 --> 00:48:00,000
我觉得

1693
00:48:00,000 --> 00:48:02,000
这种感觉已经非常淡化

1694
00:48:02,000 --> 00:48:03,000
就

1695
00:48:03,000 --> 00:48:03,000
对

1696
00:48:03,000 --> 00:48:04,000
因为我为了

1697
00:48:04,000 --> 00:48:06,000
准备这一期的节目

1698
00:48:06,000 --> 00:48:07,000
又打开那个

1699
00:48:07,000 --> 00:48:09,000
装了最新版的 virtual studio code

1700
00:48:09,000 --> 00:48:10,000
然后用一下

1701
00:48:10,000 --> 00:48:11,000
所以感觉还是

1702
00:48:11,000 --> 00:48:12,000
对你感觉不到

1703
00:48:12,000 --> 00:48:14,000
它除了在那个

1704
00:48:14,000 --> 00:48:14,000
uifone 格上

1705
00:48:15,000 --> 00:48:17,000
跟你的系统格格不入之外

1706
00:48:17,000 --> 00:48:18,000
啊

1707
00:48:18,000 --> 00:48:19,000
啊

1708
00:48:19,000 --> 00:48:20,000
你感觉不到

1709
00:48:20,000 --> 00:48:21,000
它是一个

1710
00:48:21,000 --> 00:48:22,000
网页应用对不对

1711
00:48:23,000 --> 00:48:23,000
也

1712
00:48:23,000 --> 00:48:26,000
格格不入也没有吧

1713
00:48:26,000 --> 00:48:26,000
我必须说

1714
00:48:26,000 --> 00:48:27,000
但

1715
00:48:27,000 --> 00:48:28,000
它风格很不一样

1716
00:48:28,000 --> 00:48:28,000
哦

1717
00:48:30,000 --> 00:48:30,000
唉

1718
00:48:31,000 --> 00:48:32,000
或者说

1719
00:48:32,000 --> 00:48:33,000
我在用 virtual studio 的时候

1720
00:48:33,000 --> 00:48:35,000
心里面就带了这个

1721
00:48:35,000 --> 00:48:36,000
这样一个预期

1722
00:48:36,000 --> 00:48:36,000
我就说

1723
00:48:36,000 --> 00:48:37,000
这是 virtual 做的东西

1724
00:48:37,000 --> 00:48:38,000
它

1725
00:48:38,000 --> 00:48:38,000
它

1726
00:48:38,000 --> 00:48:38,000
风格

1727
00:48:38,000 --> 00:48:39,000
本来就不一样了

1728
00:48:39,000 --> 00:48:40,000
对

1729
00:48:40,000 --> 00:48:40,000
它不可能一样

1730
00:48:40,000 --> 00:48:41,000
OK

1731
00:48:41,000 --> 00:48:42,000
但

1732
00:48:42,000 --> 00:48:43,000
当然你说的又道

1733
00:48:43,000 --> 00:48:43,000
但

1734
00:48:43,000 --> 00:48:44,000
话说后来

1735
00:48:44,000 --> 00:48:47,000
风格跟原生的 app

1736
00:48:47,000 --> 00:48:48,000
不一样的

1737
00:48:48,000 --> 00:48:48,000
原生 app

1738
00:48:49,000 --> 00:48:50,000
风格跟

1739
00:48:51,000 --> 00:48:52,000
默认的

1740
00:48:52,000 --> 00:48:53,000
苹果风格不一样的原生 app

1741
00:48:53,000 --> 00:48:54,000
其实也很多

1742
00:48:54,000 --> 00:48:54,000
对嘛

1743
00:48:54,000 --> 00:48:55,000
所以其实

1744
00:48:55,000 --> 00:48:56,000
说到底就是说

1745
00:48:57,000 --> 00:48:57,000
web

1746
00:48:58,000 --> 00:48:58,000
叫什么来的

1747
00:48:59,000 --> 00:49:01,000
web app

1748
00:49:01,000 --> 00:49:02,000
本身

1749
00:49:02,000 --> 00:49:03,000
并不代表

1750
00:49:03,000 --> 00:49:06,000
一个比较糟糕的体验

1751
00:49:06,000 --> 00:49:07,000
是这个意思嘛

1752
00:49:07,000 --> 00:49:07,000
就是它有

1753
00:49:07,000 --> 00:49:08,000
那些技术

1754
00:49:08,000 --> 00:49:09,000
我是这么觉得

1755
00:49:09,000 --> 00:49:10,000
是可以实现

1756
00:49:10,000 --> 00:49:10,000
说一个比较

1757
00:49:10,000 --> 00:49:11,000
原生的体验的

1758
00:49:11,000 --> 00:49:12,000
当然说

1759
00:49:12,000 --> 00:49:13,000
我们资源站过上

1760
00:49:13,000 --> 00:49:14,000
这个事情先不讲

1761
00:49:14,000 --> 00:49:16,000
就是说在交互上

1762
00:49:16,000 --> 00:49:17,000
还有包括给人的感觉上

1763
00:49:17,000 --> 00:49:18,000
是可以做到比较好的

1764
00:49:18,000 --> 00:49:19,000
就之前

1765
00:49:20,000 --> 00:49:21,000
说这个 web app 不好用

1766
00:49:22,000 --> 00:49:23,000
程式性能做的不够好嘛

1767
00:49:24,000 --> 00:49:25,000
OK

1768
00:49:25,000 --> 00:49:25,000
那我们可以

1769
00:49:26,000 --> 00:49:28,000
暂时把这个

1770
00:49:28,000 --> 00:49:30,000
浏览器的新闻放在一边

1771
00:49:30,000 --> 00:49:31,000
将来如果

1772
00:49:31,000 --> 00:49:32,000
virtual studio code

1773
00:49:32,000 --> 00:49:33,000
也出了一点点号

1774
00:49:33,000 --> 00:49:33,000
我们再来

1775
00:49:34,000 --> 00:49:35,000
后续爆

1776
00:49:36,000 --> 00:49:37,000
OK

1777
00:49:39,000 --> 00:49:39,000
好啊

1778
00:49:39,000 --> 00:49:40,000
那

1779
00:49:40,000 --> 00:49:40,000
下一个新闻

1780
00:49:40,000 --> 00:49:42,000
这是你寄的吧

1781
00:49:43,000 --> 00:49:43,000
对

1782
00:49:43,000 --> 00:49:44,000
这个

1783
00:49:44,000 --> 00:49:45,000
这个事情

1784
00:49:45,000 --> 00:49:46,000
还挺有意思

1785
00:49:46,000 --> 00:49:47,000
就是之前我们讲那个

1786
00:49:48,000 --> 00:49:49,000
那个

1787
00:49:49,000 --> 00:49:50,000
在阿里公伦里面

1788
00:49:50,000 --> 00:49:50,000
竟然讲的那个

1789
00:49:50,000 --> 00:49:51,000
叫

1790
00:49:51,000 --> 00:49:52,000
Oculus Rift

1791
00:49:52,000 --> 00:49:53,000
那个 3 D 的

1792
00:49:54,000 --> 00:49:55,000
虚拟现实眼镜嘛

1793
00:49:56,000 --> 00:49:57,000
然后它那个

1794
00:49:57,000 --> 00:49:58,000
它那个开发者

1795
00:49:58,000 --> 00:49:59,000
叫做 John Carmich

1796
00:49:59,000 --> 00:50:01,000
这个大家都应该比较熟悉了

1797
00:50:01,000 --> 00:50:03,000
他在

1798
00:50:03,000 --> 00:50:04,000
应该是上周啊

1799
00:50:04,000 --> 00:50:05,000
以前周吧

1800
00:50:05,000 --> 00:50:06,000
也也是差不多

1801
00:50:06,000 --> 00:50:07,000
也是上个月二十几号的时候

1802
00:50:08,000 --> 00:50:09,000
在 Google

1803
00:50:09,000 --> 00:50:11,000
那么讨论组里面

1804
00:50:11,000 --> 00:50:12,000
发了这么一条信息

1805
00:50:12,000 --> 00:50:13,000
就是他在

1806
00:50:13,000 --> 00:50:15,000
琢磨着用 Racket

1807
00:50:15,000 --> 00:50:17,000
Racket 是一个

1808
00:50:17,000 --> 00:50:18,000
Skim 语言的一个

1809
00:50:19,000 --> 00:50:20,000
实现吧

1810
00:50:20,000 --> 00:50:21,000
然后 Skim 是一种

1811
00:50:21,000 --> 00:50:22,000
Lisp

1812
00:50:22,000 --> 00:50:24,000
它是 Lisp 1

1813
00:50:24,000 --> 00:50:24,000
对

1814
00:50:25,000 --> 00:50:27,000
然后他绝对用这个 Racket

1815
00:50:27,000 --> 00:50:28,000
或者是 Skim 这个语言

1816
00:50:28,000 --> 00:50:30,000
给这个 VR 环境

1817
00:50:30,000 --> 00:50:31,000
你能做一个

1818
00:50:31,000 --> 00:50:32,000
怎么说呢

1819
00:50:32,000 --> 00:50:34,000
就叫做教学语言吧

1820
00:50:34,000 --> 00:50:35,000
可以这么讲

1821
00:50:35,000 --> 00:50:36,000
教学环境

1822
00:50:36,000 --> 00:50:36,000
也是

1823
00:50:37,000 --> 00:50:38,000
就是他叫做

1824
00:50:38,000 --> 00:50:39,000
Scripting Environment

1825
00:50:39,000 --> 00:50:39,000
就是

1826
00:50:39,000 --> 00:50:40,000
脚本环境

1827
00:50:40,000 --> 00:50:41,000
什么意思呢

1828
00:50:41,000 --> 00:50:42,000
就是你可以在

1829
00:50:43,000 --> 00:50:45,000
通过写 Skim 代码

1830
00:50:45,000 --> 00:50:46,000
在虚拟事件里面

1831
00:50:46,000 --> 00:50:47,000
构建出一些

1832
00:50:47,000 --> 00:50:48,000
组建出来

1833
00:50:48,000 --> 00:50:49,000
比如说可以看到

1834
00:50:49,000 --> 00:50:51,000
就像大金木一样

1835
00:50:51,000 --> 00:50:51,000
我做一些事情

1836
00:50:52,000 --> 00:50:53,000
然后他发了一篇

1837
00:50:53,000 --> 00:50:54,000
非常长的

1838
00:50:55,000 --> 00:50:56,000
文章去讲

1839
00:50:56,000 --> 00:50:57,000
他就想

1840
00:50:57,000 --> 00:50:59,000
就为什么我会选择 Skim

1841
00:50:59,000 --> 00:51:00,000
还有一些什么其他

1842
00:51:00,000 --> 00:51:01,000
关于搭建

1843
00:51:02,000 --> 00:51:03,000
环境的一些事情

1844
00:51:03,000 --> 00:51:05,000
我把连接放到

1845
00:51:05,000 --> 00:51:06,000
这个 shownotes 里面吧

1846
00:51:06,000 --> 00:51:06,000
但我觉得这个事情

1847
00:51:06,000 --> 00:51:07,000
大家还挺好

1848
00:51:08,000 --> 00:51:08,000
挺有意思的

1849
00:51:08,000 --> 00:51:09,000
大家可以去看一下

1850
00:51:09,000 --> 00:51:11,000
具体内容就先不剧透了

1851
00:51:11,000 --> 00:51:11,000
对

1852
00:51:12,000 --> 00:51:14,000
对 我不知道你

1853
00:51:14,000 --> 00:51:15,000
你怎么想这件事

1854
00:51:16,000 --> 00:51:16,000
我

1855
00:51:16,000 --> 00:51:17,000
其实我闹作员

1856
00:51:17,000 --> 00:51:18,000
第一想到的是

1857
00:51:18,000 --> 00:51:22,000
当初我在电视上面

1858
00:51:22,000 --> 00:51:25,000
用 Apple 2 和 logo 研

1859
00:51:26,000 --> 00:51:28,000
操纵海归的时候

1860
00:51:28,000 --> 00:51:29,000
那个场景

1861
00:51:29,000 --> 00:51:30,000
就是

1862
00:51:30,000 --> 00:51:30,000
对

1863
00:51:30,000 --> 00:51:31,000
差不多

1864
00:51:31,000 --> 00:51:32,000
他想的应该是类似的

1865
00:51:32,000 --> 00:51:32,000
应用

1866
00:51:32,000 --> 00:51:33,000
只不过是做到

1867
00:51:33,000 --> 00:51:33,000
VR

1868
00:51:33,000 --> 00:51:35,000
就是虚拟现实的

1869
00:51:35,000 --> 00:51:35,000
环境里面去

1870
00:51:36,000 --> 00:51:36,000
对

1871
00:51:36,000 --> 00:51:37,000
然后我想就是

1872
00:51:37,000 --> 00:51:39,000
因为 logo 本身也是一个

1873
00:51:39,000 --> 00:51:40,000
比较有意思的

1874
00:51:40,000 --> 00:51:41,000
functional program language

1875
00:51:41,000 --> 00:51:42,000
然后

1876
00:51:43,000 --> 00:51:44,000
也许将来的孩子们

1877
00:51:44,000 --> 00:51:47,000
可以带着 VR 眼镜

1878
00:51:47,000 --> 00:51:49,000
然后用一种这样

1879
00:51:49,000 --> 00:51:50,000
类似于 logo 的

1880
00:51:50,000 --> 00:51:51,000
教学式的

1881
00:51:52,000 --> 00:51:53,000
scribbling language

1882
00:51:53,000 --> 00:51:54,000
在一个 3 D 的世界里面

1883
00:51:54,000 --> 00:51:56,000
操纵 3 D 的海归

1884
00:51:56,000 --> 00:51:57,000
或者说

1885
00:51:57,000 --> 00:51:59,000
一个海归这个 metaphor

1886
00:51:59,000 --> 00:52:00,000
这每个东西

1887
00:52:00,000 --> 00:52:01,000
然后去画一些

1888
00:52:01,000 --> 00:52:02,000
比如说 3 D 的分形图形

1889
00:52:03,000 --> 00:52:04,000
或者是

1890
00:52:04,000 --> 00:52:05,000
对 画

1891
00:52:05,000 --> 00:52:06,000
whatever 是什么

1892
00:52:06,000 --> 00:52:07,000
感觉很

1893
00:52:08,000 --> 00:52:08,000
exciting

1894
00:52:11,000 --> 00:52:12,000
所以

1895
00:52:12,000 --> 00:52:13,000
所以

1896
00:52:13,000 --> 00:52:15,000
你在 skim

1897
00:52:15,000 --> 00:52:17,000
用 skim 在虚拟环境里面

1898
00:52:17,000 --> 00:52:18,000
画这种物件

1899
00:52:18,000 --> 00:52:19,000
你觉得会怎么样

1900
00:52:21,000 --> 00:52:22,000
应该蛮酸爽的吧

1901
00:52:24,000 --> 00:52:26,000
你比起上次我给你发过一个

1902
00:52:26,000 --> 00:52:27,000
应该有两个连接

1903
00:52:27,000 --> 00:52:28,000
是 youtube 的视频

1904
00:52:28,000 --> 00:52:29,000
就是有人在

1905
00:52:30,000 --> 00:52:31,000
VR 眼镜里面

1906
00:52:31,000 --> 00:52:33,000
就 VR 虚拟世界里面

1907
00:52:33,000 --> 00:52:35,000
实时的通过边境

1908
00:52:35,000 --> 00:52:36,000
应该是 java script

1909
00:52:37,000 --> 00:52:38,000
来代码

1910
00:52:38,000 --> 00:52:40,000
来去操纵里面的物件的

1911
00:52:40,000 --> 00:52:42,000
那些虚拟的物件的变化

1912
00:52:42,000 --> 00:52:43,000
改变周刀环动

1913
00:52:44,000 --> 00:52:45,000
对

1914
00:52:45,000 --> 00:52:46,000
你还记得那个视频吗

1915
00:52:46,000 --> 00:52:47,000
记得

1916
00:52:47,000 --> 00:52:49,000
应该这个过程还是蛮有意思的

1917
00:52:49,000 --> 00:52:50,000
它那个不太好的

1918
00:52:50,000 --> 00:52:50,000
一方一点

1919
00:52:50,000 --> 00:52:51,000
就是它要

1920
00:52:52,000 --> 00:52:52,000
它要

1921
00:52:52,000 --> 00:52:53,000
就如果它要改变这块

1922
00:52:53,000 --> 00:52:54,000
它的 reload

1923
00:52:54,000 --> 00:52:56,000
它就得刷新那个脚本

1924
00:52:56,000 --> 00:52:58,000
然后整个重绘一遍

1925
00:52:58,000 --> 00:52:58,000
整个环境

1926
00:53:00,000 --> 00:53:01,000
然后我知道用 skim 的话

1927
00:53:01,000 --> 00:53:02,000
它可不就做到一个

1928
00:53:02,000 --> 00:53:03,000
增量的一个修改

1929
00:53:03,000 --> 00:53:04,000
因为大家之前

1930
00:53:04,000 --> 00:53:05,000
你知道

1931
00:53:05,000 --> 00:53:06,000
list 它刚才说的

1932
00:53:06,000 --> 00:53:07,000
最牛逼的功能

1933
00:53:07,000 --> 00:53:09,000
就是可以在它运行中

1934
00:53:09,000 --> 00:53:10,000
动产修改代码

1935
00:53:10,000 --> 00:53:12,000
然后在部分的执行

1936
00:53:12,000 --> 00:53:13,000
对吧

1937
00:53:13,000 --> 00:53:14,000
对

1938
00:53:14,000 --> 00:53:15,000
数据和代码部分

1939
00:53:16,000 --> 00:53:16,000
没错

1940
00:53:16,000 --> 00:53:19,000
所以这个还是蛮值得期待的

1941
00:53:24,000 --> 00:53:24,000
对

1942
00:53:24,000 --> 00:53:26,000
其实这里可以顺便说一下

1943
00:53:26,000 --> 00:53:27,000
就是我今天在

1944
00:53:29,000 --> 00:53:30,000
the word 还是什么上面

1945
00:53:31,000 --> 00:53:31,000
不对

1946
00:53:31,000 --> 00:53:32,000
assessin

1947
00:53:32,000 --> 00:53:33,000
上面看到了一个

1948
00:53:34,000 --> 00:53:35,000
微软最新的

1949
00:53:35,000 --> 00:53:37,000
关于 hollow dance 的视频

1950
00:53:37,000 --> 00:53:39,000
然后里面就有那个

1951
00:53:40,000 --> 00:53:41,000
一个怎么说

1952
00:53:41,000 --> 00:53:42,000
类似于 D 任生视角的

1953
00:53:43,000 --> 00:53:44,000
告诉你说

1954
00:53:44,000 --> 00:53:46,000
你戴上 hollow dance 之后

1955
00:53:46,000 --> 00:53:47,000
能看到的这么一个区域

1956
00:53:48,000 --> 00:53:50,000
然后对

1957
00:53:50,000 --> 00:53:52,000
然后我就感受到了

1958
00:53:52,000 --> 00:53:54,000
laurence 的戴了 hollow dance 之后

1959
00:53:54,000 --> 00:53:55,000
那种失落感

1960
00:53:57,000 --> 00:53:58,000
真的差挺多的

1961
00:53:58,000 --> 00:54:00,000
就是之前我不知道你

1962
00:54:00,000 --> 00:54:01,000
可是要戴的吗

1963
00:54:01,000 --> 00:54:02,000
对

1964
00:54:02,000 --> 00:54:04,000
我脑补的 hollow dance 是

1965
00:54:04,000 --> 00:54:04,000
戴上之后

1966
00:54:04,000 --> 00:54:06,000
你可以全市场看到的

1967
00:54:06,000 --> 00:54:07,000
然后

1968
00:54:07,000 --> 00:54:08,000
当人们

1969
00:54:08,000 --> 00:54:08,000
对

1970
00:54:08,000 --> 00:54:09,000
当人们告诉我说

1971
00:54:09,000 --> 00:54:10,000
这个市场其实很窄的时候

1972
00:54:10,000 --> 00:54:11,000
我没有一个主播那项

1973
00:54:11,000 --> 00:54:13,000
他到底有多窄

1974
00:54:13,000 --> 00:54:14,000
但只有知道

1975
00:54:14,000 --> 00:54:15,000
看了那个视频之后

1976
00:54:15,000 --> 00:54:16,000
我才意识到

1977
00:54:16,000 --> 00:54:17,000
我靠原来这么窄

1978
00:54:18,000 --> 00:54:19,000
这个差别就是

1979
00:54:20,000 --> 00:54:21,000
我之前想象的是一个

1980
00:54:23,000 --> 00:54:25,000
显示器大到把你包起来

1981
00:54:25,000 --> 00:54:26,000
你坐在一个

1982
00:54:26,000 --> 00:54:28,000
属于你自己的微型

1983
00:54:28,000 --> 00:54:29,000
天文球里面这种感觉

1984
00:54:29,000 --> 00:54:30,000
但实际上

1985
00:54:30,000 --> 00:54:32,000
他只过是把一台显示器

1986
00:54:32,000 --> 00:54:33,000
摆到你面前

1987
00:54:33,000 --> 00:54:34,000
就是在你眼镜前面

1988
00:54:35,000 --> 00:54:36,000
就大概那么大的地方

1989
00:54:36,000 --> 00:54:38,000
这实在是差别太大

1990
00:54:39,000 --> 00:54:41,000
视频上再也不能说

1991
00:54:41,000 --> 00:54:43,000
什么取消显示器

1992
00:54:43,000 --> 00:54:44,000
然后整瓶都是

1993
00:54:45,000 --> 00:54:46,000
边境区窗口的

1994
00:54:46,000 --> 00:54:47,000
这么一个愉快的想法了

1995
00:54:48,000 --> 00:54:49,000
对

1996
00:54:49,000 --> 00:54:51,000
所以我必须收回自己说

1997
00:54:51,000 --> 00:54:53,000
Laurence 的什么期待太高了

1998
00:54:53,000 --> 00:54:56,000
这实际的实验效果

1999
00:54:56,000 --> 00:54:57,000
连我都受不了

2000
00:55:00,000 --> 00:55:01,000
所以他有说是

2001
00:55:01,000 --> 00:55:03,000
因为什么原因实现不了

2002
00:55:03,000 --> 00:55:04,000
是因为光学原理

2003
00:55:04,000 --> 00:55:05,000
物理限制

2004
00:55:06,000 --> 00:55:08,000
还是说只是因为为了降低

2005
00:55:08,000 --> 00:55:11,000
因为他带在头上是整一体机

2006
00:55:11,000 --> 00:55:13,000
没有一个单独插线的外接的设备

2007
00:55:13,000 --> 00:55:16,000
所以他要考虑供电

2008
00:55:16,000 --> 00:55:17,000
续航的问题

2009
00:55:18,000 --> 00:55:18,000
对

2010
00:55:18,000 --> 00:55:20,000
我觉得其实就是技术还不成熟

2011
00:55:20,000 --> 00:55:21,000
但是视频主要是宣传

2012
00:55:21,000 --> 00:55:25,000
Laurence 在一个医院里面的一些用力

2013
00:55:25,000 --> 00:55:28,000
比如说医生可以拿 Laurence 直接看

2014
00:55:28,000 --> 00:55:29,000
骨头断裂的情况

2015
00:55:29,000 --> 00:55:34,000
就可以你看到那个屋子中间有一个心脏

2016
00:55:34,000 --> 00:55:35,000
然后你现在来跳

2017
00:55:35,000 --> 00:55:36,000
然后你可以转着

2018
00:55:36,000 --> 00:55:38,000
看这个心脏跳动的状况之类的

2019
00:55:38,000 --> 00:55:39,000
所以他没有解释说

2020
00:55:39,000 --> 00:55:40,000
市场为什么这么窄

2021
00:55:40,000 --> 00:55:42,000
他只是怎么说呢

2022
00:55:42,000 --> 00:55:44,000
可能觉得自己之前吹哩有点猛

2023
00:55:44,000 --> 00:55:46,000
所以用这个视频的

2024
00:55:46,000 --> 00:55:48,000
让大家明白一下

2025
00:55:48,000 --> 00:55:50,000
其实看到的效果只不过是这样

2026
00:55:50,000 --> 00:55:51,000
你们不要那个

2027
00:55:52,000 --> 00:55:54,000
就是期待太高的感觉

2028
00:55:54,000 --> 00:55:54,000
有点点

2029
00:55:55,000 --> 00:55:57,000
期待控制

2030
00:55:57,000 --> 00:55:58,000
对对对

2031
00:55:58,000 --> 00:56:00,000
一个感觉

2032
00:56:02,000 --> 00:56:03,000
不过有点现在来做这个

2033
00:56:03,000 --> 00:56:04,000
又有什么用呢

2034
00:56:05,000 --> 00:56:08,000
他之前自己把那个东西吹得那么好

2035
00:56:08,000 --> 00:56:11,000
当时那个第一次出那个视频的时候

2036
00:56:11,000 --> 00:56:12,000
就是他发布了两次嘛

2037
00:56:12,000 --> 00:56:16,000
其实就说感觉这个比率要吹破了

2038
00:56:17,000 --> 00:56:19,000
这个比率画太大对吧

2039
00:56:19,000 --> 00:56:21,000
现在看果然画太大了

2040
00:56:21,000 --> 00:56:22,000
不过还是好总比没有强

2041
00:56:22,000 --> 00:56:24,000
这个毕竟是第一代产品

2042
00:56:24,000 --> 00:56:26,000
所以让他们迭代两年再说吧

2043
00:56:28,000 --> 00:56:30,000
黑微软的话

2044
00:56:30,000 --> 00:56:31,000
你们留到 IT 公众里面说

2045
00:56:31,000 --> 00:56:32,000
没有没有

2046
00:56:32,000 --> 00:56:32,000
我没黑

2047
00:56:32,000 --> 00:56:35,000
经常有人说我黑

2048
00:56:35,000 --> 00:56:37,000
其实我给他们还是蛮高兴的

2049
00:56:37,000 --> 00:56:38,000
我觉得你刚才的话

2050
00:56:38,000 --> 00:56:41,000
你刚才的话在软狗耳朵听出来

2051
00:56:41,000 --> 00:56:42,000
就已经是非常不知

2052
00:56:42,000 --> 00:56:43,000
就是黑他们是吧

2053
00:56:43,000 --> 00:56:44,000
对对对

2054
00:56:44,000 --> 00:56:46,000
好了那你倒是拿出一个

2055
00:56:46,000 --> 00:56:47,000
让我们经验的东西来看

2056
00:56:48,000 --> 00:56:49,000
他们会说

2057
00:56:50,000 --> 00:56:52,000
blah blah 黑科技

2058
00:56:52,000 --> 00:56:54,000
blah blah 微软做的是

2059
00:56:54,000 --> 00:56:55,000
怎能叫 blah blah

2060
00:56:55,000 --> 00:56:57,000
从你有没有体谅在什么

2061
00:56:57,000 --> 00:56:58,000
microsoft research 里面

2062
00:56:58,000 --> 00:56:59,000
不会拿出来的

2063
00:56:59,000 --> 00:57:00,000
那有什么用呢

2064
00:57:02,000 --> 00:57:04,000
不过其实从那个完全

2065
00:57:04,000 --> 00:57:05,000
从那个完成度来讲

2066
00:57:05,000 --> 00:57:07,000
我觉得其实

2067
00:57:07,000 --> 00:57:08,000
这个已经蛮高的了

2068
00:57:08,000 --> 00:57:09,000
就是 Holo lens 一代嘛

2069
00:57:11,000 --> 00:57:11,000
对吧

2070
00:57:11,000 --> 00:57:14,000
所以其实我还是挺乐观的

2071
00:57:14,000 --> 00:57:16,000
就是照他们在

2072
00:57:16,000 --> 00:57:17,000
就希望他们能够保持

2073
00:57:18,000 --> 00:57:20,000
这个速度往前去迭代好

2074
00:57:20,000 --> 00:57:23,000
OK 那我们之下可以进入正题了

2075
00:57:23,000 --> 00:57:25,000
今天的话题是 D-Bug

2076
00:57:26,000 --> 00:57:27,000
用中文说就是

2077
00:57:27,000 --> 00:57:28,000
除错于调试

2078
00:57:31,000 --> 00:57:32,000
我不知道 Rail 你

2079
00:57:32,000 --> 00:57:34,000
你经常 D-Bug 吗

2080
00:57:34,000 --> 00:57:35,000
或者说你觉得 D-Bug

2081
00:57:36,000 --> 00:57:38,000
你觉得你写 MAS 之后里面

2082
00:57:38,000 --> 00:57:39,000
是 D-Bug 时间多

2083
00:57:39,000 --> 00:57:41,000
还是真正写 MAS 的时间多

2084
00:57:46,000 --> 00:57:46,000
还好吧

2085
00:57:46,000 --> 00:57:48,000
我 D-Bug 时间不算多

2086
00:57:48,000 --> 00:57:51,000
对可能是两三成的样子

2087
00:57:53,000 --> 00:57:55,000
但是主要是因为我写的东西

2088
00:57:55,000 --> 00:57:57,000
也不是特别复杂

2089
00:57:57,000 --> 00:57:58,000
还凑合

2090
00:57:59,000 --> 00:57:59,000
你太谦虚了

2091
00:57:59,000 --> 00:58:00,000
你可以直接说

2092
00:58:00,000 --> 00:58:01,000
你写的东西是 Bug Freight

2093
00:58:03,000 --> 00:58:04,000
对不对

2094
00:58:06,000 --> 00:58:06,000
就

2095
00:58:06,000 --> 00:58:10,000
前两天我在一个网站

2096
00:58:11,000 --> 00:58:11,000
讲什么

2097
00:58:13,000 --> 00:58:13,000
讲什么的

2098
00:58:13,000 --> 00:58:15,000
就讲白板编程

2099
00:58:15,000 --> 00:58:16,000
讲面试里面

2100
00:58:16,000 --> 00:58:17,000
他讲说

2101
00:58:17,000 --> 00:58:19,000
应该怎样去做白板面试

2102
00:58:19,000 --> 00:58:21,000
我们回头会把这个链接放在

2103
00:58:21,000 --> 00:58:22,000
shownotes 里面

2104
00:58:22,000 --> 00:58:23,000
但是

2105
00:58:23,000 --> 00:58:24,000
我印象里面比较

2106
00:58:24,000 --> 00:58:25,000
我印象比较深的一句话

2107
00:58:25,000 --> 00:58:26,000
就是他里面说

2108
00:58:26,000 --> 00:58:27,000
程序员可以分为两种

2109
00:58:28,000 --> 00:58:31,000
一种是会先确认前条件

2110
00:58:32,000 --> 00:58:33,000
中置条件

2111
00:58:33,000 --> 00:58:33,000
边界条件

2112
00:58:35,000 --> 00:58:36,000
以及不变的那一部分

2113
00:58:36,000 --> 00:58:37,000
然后写入正确代码

2114
00:58:39,000 --> 00:58:41,000
另外一种是先编写代码

2115
00:58:41,000 --> 00:58:44,000
然后通过各种用力调试

2116
00:58:44,000 --> 00:58:46,000
测试对程序进行调整

2117
00:58:46,000 --> 00:58:48,000
最后得到似乎正确的代码

2118
00:58:49,000 --> 00:58:49,000
就是可以分开

2119
00:58:49,000 --> 00:58:50,000
不是 TDD 吗

2120
00:58:53,000 --> 00:58:54,000
TDD 是哪一种

2121
00:58:54,000 --> 00:58:55,000
第一种还是第二种

2122
00:58:55,000 --> 00:58:56,000
就是后者

2123
00:58:57,000 --> 00:58:58,000
第二种

2124
00:58:58,000 --> 00:58:59,000
他说先编写代码

2125
00:58:59,000 --> 00:59:01,000
然后通过用力

2126
00:59:02,000 --> 00:59:03,000
TDD 应该是第一种

2127
00:59:04,000 --> 00:59:08,000
TDD 应该是一个一个的确立编写代码

2128
00:59:09,000 --> 00:59:10,000
然后他里面说

2129
00:59:10,000 --> 00:59:11,000
他个人估计

2130
00:59:13,000 --> 00:59:15,000
保守估计前者的开发效率

2131
00:59:15,000 --> 00:59:16,000
至少是后者的十倍

2132
00:59:16,000 --> 00:59:18,000
因为前者不需要浪费大量时间

2133
00:59:18,000 --> 00:59:19,000
在编码调试编码

2134
00:59:20,000 --> 00:59:22,000
这个极其好时的续皇上

2135
00:59:22,000 --> 00:59:24,000
我觉得说有用到

2136
00:59:24,000 --> 00:59:24,000
我说有用到

2137
00:59:24,000 --> 00:59:25,000
编代码之前

2138
00:59:25,000 --> 00:59:27,000
挑剑盘之前先动脑子想

2139
00:59:27,000 --> 00:59:28,000
是不是

2140
00:59:30,000 --> 00:59:34,000
包括在一些刚学变成的人身上

2141
00:59:34,000 --> 00:59:35,000
也会发现一个问题

2142
00:59:35,000 --> 00:59:36,000
就是发现一种现象

2143
00:59:36,000 --> 00:59:37,000
就是他认为

2144
00:59:38,000 --> 00:59:40,000
编代码的速度跟挑剑盘的速度相关

2145
00:59:41,000 --> 00:59:42,000
其实并不是这样

2146
00:59:44,000 --> 00:59:45,000
我可以指两个意思

2147
00:59:45,000 --> 00:59:46,000
一个是我

2148
00:59:49,000 --> 00:59:50,000
上上加工四里面

2149
00:59:50,000 --> 00:59:51,000
一个

2150
00:59:52,000 --> 00:59:53,000
60 多岁的程序

2151
00:59:54,000 --> 00:59:56,000
他可能是从 COPPO 时代就

2152
00:59:57,000 --> 00:59:58,000
写程序

2153
00:59:58,000 --> 00:59:59,000
然后到 60 多岁

2154
00:59:59,000 --> 01:00:00,000
还在做那个

2155
01:00:01,000 --> 01:00:02,000
高级顾问

2156
01:00:02,000 --> 01:00:03,000
众所周知

2157
01:00:03,000 --> 01:00:05,000
德国的退休年龄是 67 岁

2158
01:00:05,000 --> 01:00:05,000
所以

2159
01:00:05,000 --> 01:00:06,000
以 60 岁的高龄还在

2160
01:00:07,000 --> 01:00:08,000
写程序

2161
01:00:08,000 --> 01:00:08,000
然后他

2162
01:00:09,000 --> 01:00:11,000
和很多德国人一样

2163
01:00:11,000 --> 01:00:12,000
只会有两个指程序

2164
01:00:12,000 --> 01:00:12,000
就算完了

2165
01:00:13,000 --> 01:00:13,000
你

2166
01:00:13,000 --> 01:00:14,000
你很难想象吧

2167
01:00:14,000 --> 01:00:16,000
因为写了 30 年程序的人

2168
01:00:16,000 --> 01:00:17,000
只会用两个指头想象吧

2169
01:00:18,000 --> 01:00:20,000
但他的效率不比任何人慢

2170
01:00:20,000 --> 01:00:23,000
或者说他写出来的编码的

2171
01:00:23,000 --> 01:00:24,000
他写出来的程序的

2172
01:00:25,000 --> 01:00:27,000
可靠性和效率并不比任何人差

2173
01:00:28,000 --> 01:00:29,000
然后反过来

2174
01:00:29,000 --> 01:00:30,000
另外一个意思就是

2175
01:00:30,000 --> 01:00:31,000
我上了加工四里面有一个

2176
01:00:35,000 --> 01:00:37,000
就不透露他的肤色了吧

2177
01:00:37,000 --> 01:00:37,000
他

2178
01:00:37,000 --> 01:00:39,000
就有这么一个朋友

2179
01:00:39,000 --> 01:00:41,000
他经常会说

2180
01:00:41,000 --> 01:00:42,000
每天开会的时候

2181
01:00:42,000 --> 01:00:43,000
他会说

2182
01:00:43,000 --> 01:00:44,000
我还有一点就完了

2183
01:00:44,000 --> 01:00:46,000
我 80%已经写完了

2184
01:00:46,000 --> 01:00:47,000
只剩下 20%

2185
01:00:47,000 --> 01:00:51,000
只是一些细节需要调整一下

2186
01:00:51,000 --> 01:00:52,000
但是如果你仔续看他这个

2187
01:00:53,000 --> 01:00:54,000
细节的调整

2188
01:00:54,000 --> 01:00:55,000
到底是在干嘛的时候

2189
01:00:55,000 --> 01:00:57,000
他其实在大量的改变自己的代码

2190
01:00:57,000 --> 01:00:59,000
因为他里面很多东西

2191
01:00:59,000 --> 01:01:00,000
虽然写得很快

2192
01:01:00,000 --> 01:01:00,000
但

2193
01:01:00,000 --> 01:01:01,000
根本就是写错了

2194
01:01:01,000 --> 01:01:02,000
好吗

2195
01:01:02,000 --> 01:01:04,000
所以这所谓的 20%

2196
01:01:04,000 --> 01:01:05,000
20%其实占有了他

2197
01:01:06,000 --> 01:01:07,000
整个开发的 80%时间

2198
01:01:07,000 --> 01:01:09,000
他总觉得自己可能明天就会写完的

2199
01:01:09,000 --> 01:01:10,000
其实明天会发现

2200
01:01:10,000 --> 01:01:12,000
我还是要后天和大陆点

2201
01:01:15,000 --> 01:01:15,000
对

2202
01:01:15,000 --> 01:01:16,000
所以我觉得 Rio

2203
01:01:16,000 --> 01:01:18,000
其实你刚才暗示了你是第一种

2204
01:01:21,000 --> 01:01:21,000
好吧

2205
01:01:21,000 --> 01:01:23,000
我觉得我是

2206
01:01:24,000 --> 01:01:25,000
就希望我希望是第一种

2207
01:01:25,000 --> 01:01:27,000
不知道是不是真是劲量

2208
01:01:27,000 --> 01:01:29,000
就是有这么一个

2209
01:01:30,000 --> 01:01:31,000
就刚刚我说那个写代码

2210
01:01:31,000 --> 01:01:32,000
这些先动脑子

2211
01:01:32,000 --> 01:01:34,000
但这个不是说来玩玩

2212
01:01:34,000 --> 01:01:34,000
就是

2213
01:01:35,000 --> 01:01:38,000
就我看到有很多人写代码的时候

2214
01:01:38,000 --> 01:01:40,000
先反正先敲几行再说

2215
01:01:40,000 --> 01:01:41,000
再来想怎么弄着

2216
01:01:41,000 --> 01:01:42,000
怎么改

2217
01:01:42,000 --> 01:01:43,000
其实

2218
01:01:43,000 --> 01:01:45,000
我看到很多这种所谓

2219
01:01:45,000 --> 01:01:46,000
大神级程序员

2220
01:01:46,000 --> 01:01:47,000
其实他是要先

2221
01:01:48,000 --> 01:01:48,000
先写代码

2222
01:01:48,000 --> 01:01:49,000
他是要像好久好久

2223
01:01:49,000 --> 01:01:52,000
在脑子里面构建一个大框架

2224
01:01:52,000 --> 01:01:53,000
然后步骤怎么样

2225
01:01:53,000 --> 01:01:53,000
有些什么样

2226
01:01:53,000 --> 01:01:55,000
至少要注意一点点

2227
01:01:55,000 --> 01:01:56,000
他会想要比较清楚

2228
01:01:56,000 --> 01:01:57,000
然后才会动柄

2229
01:01:57,000 --> 01:01:58,000
再动

2230
01:01:58,000 --> 01:01:59,000
动柄动

2231
01:01:59,000 --> 01:02:01,000
动键盘慢慢慢慢的去敲

2232
01:02:01,000 --> 01:02:02,000
对

2233
01:02:02,000 --> 01:02:02,000
对

2234
01:02:02,000 --> 01:02:04,000
其实这跟写作

2235
01:02:04,000 --> 01:02:05,000
我说写文章差不多

2236
01:02:05,000 --> 01:02:06,000
就是

2237
01:02:06,000 --> 01:02:08,000
并不是说你要写东西

2238
01:02:08,000 --> 01:02:10,000
就是你要一定要坐在书桌前面

2239
01:02:10,000 --> 01:02:10,000
然后打开稿子

2240
01:02:11,000 --> 01:02:13,000
就像你要写程序

2241
01:02:13,000 --> 01:02:16,000
并不是一定要先赶紧打开你的 ID

2242
01:02:16,000 --> 01:02:17,000
然后新建一个项目

2243
01:02:17,000 --> 01:02:20,000
然后写个妹还说出来

2244
01:02:20,000 --> 01:02:21,000
然后盯着她发呆

2245
01:02:21,000 --> 01:02:23,000
你要想写什么东西

2246
01:02:23,000 --> 01:02:25,000
先在各种各样的时候

2247
01:02:25,000 --> 01:02:26,000
去想你要写什么东西

2248
01:02:26,000 --> 01:02:27,000
在洗澡的时候

2249
01:02:27,000 --> 01:02:28,000
刷牙的时候

2250
01:02:28,000 --> 01:02:28,000
走路的时候

2251
01:02:28,000 --> 01:02:30,000
跟女朋友聊天的时候

2252
01:02:30,000 --> 01:02:32,000
当然这个最后这种

2253
01:02:32,000 --> 01:02:33,000
是非常不推荐的

2254
01:02:33,000 --> 01:02:35,000
我吃过苦好了

2255
01:02:36,000 --> 01:02:37,000
在这个时候

2256
01:02:37,000 --> 01:02:39,000
你都已经可以再构想你要写什么

2257
01:02:39,000 --> 01:02:40,000
你要写什么了

2258
01:02:40,000 --> 01:02:43,000
然后等到你真正有一定把握的时候再出来写

2259
01:02:43,000 --> 01:02:45,000
这样要比你直接上来的 PPA 的敲键盘

2260
01:02:45,000 --> 01:02:46,000
其实效率要高

2261
01:02:46,000 --> 01:02:47,000
我觉得

2262
01:02:47,000 --> 01:02:48,000
没错

2263
01:02:48,000 --> 01:02:49,000
所以以后

2264
01:02:49,000 --> 01:02:51,000
就是如果比如说咱

2265
01:02:51,000 --> 01:02:53,000
我就开建这个软件公司

2266
01:02:53,000 --> 01:02:53,000
是吧

2267
01:02:53,000 --> 01:02:55,000
要在那个什么

2268
01:02:55,000 --> 01:02:57,000
除了标配那些什么办公桌啊

2269
01:02:57,000 --> 01:02:58,000
什么椅子之外

2270
01:02:58,000 --> 01:03:01,000
还得做一个冥想室

2271
01:03:03,000 --> 01:03:05,000
就像那个 4 C 成曾经帅过他们公司

2272
01:03:05,000 --> 01:03:07,000
用那个 Powernav 椅子

2273
01:03:07,000 --> 01:03:08,000
你可以躺在这边

2274
01:03:08,000 --> 01:03:10,000
你叫他

2275
01:03:10,000 --> 01:03:13,000
睡觉时候你可以想程序吧

2276
01:03:13,000 --> 01:03:13,000
不能啊

2277
01:03:13,000 --> 01:03:14,000
睡着睡着了

2278
01:03:14,000 --> 01:03:16,000
得冥想在那打坐

2279
01:03:16,000 --> 01:03:17,000
那个餐厅

2280
01:03:17,000 --> 01:03:18,000
太好了

2281
01:03:18,000 --> 01:03:19,000
OK

2282
01:03:19,000 --> 01:03:21,000
我相信

2283
01:03:21,000 --> 01:03:22,000
但我是觉得

2284
01:03:22,000 --> 01:03:23,000
至少我写成

2285
01:03:23,000 --> 01:03:25,000
我写购司程序的时候

2286
01:03:25,000 --> 01:03:26,000
基本上都是在动的时候

2287
01:03:26,000 --> 01:03:28,000
就是身体一定要在做什么事情

2288
01:03:28,000 --> 01:03:30,000
比如说开车或者是骑自行车或者是

2289
01:03:32,000 --> 01:03:33,000
走路之类的

2290
01:03:33,000 --> 01:03:35,000
就躺在一地方静静地待着

2291
01:03:35,000 --> 01:03:36,000
我是

2292
01:03:37,000 --> 01:03:38,000
讲不好事情

2293
01:03:39,000 --> 01:03:40,000
所以其实

2294
01:03:40,000 --> 01:03:41,000
从这个角度来讲

2295
01:03:41,000 --> 01:03:43,000
我觉得那个叫什么

2296
01:03:43,000 --> 01:03:44,000
literate programming

2297
01:03:44,000 --> 01:03:45,000
这怎么讲呢

2298
01:03:45,000 --> 01:03:46,000
文化变成又来了

2299
01:03:48,000 --> 01:03:48,000
挺好的

2300
01:03:48,000 --> 01:03:50,000
就是他可以强迫你

2301
01:03:50,000 --> 01:03:52,000
在写第一行代码之前

2302
01:03:52,000 --> 01:03:54,000
先把这个什么前一后果

2303
01:03:54,000 --> 01:03:55,000
背景

2304
01:03:55,000 --> 01:03:55,000
对对对

2305
01:03:55,000 --> 01:03:57,000
先把这个整体思路讲写出来

2306
01:03:57,000 --> 01:04:00,000
然后你再顺着一个思路写行代码

2307
01:04:00,000 --> 01:04:01,000
顺着一个思路写行代码这样

2308
01:04:02,000 --> 01:04:02,000
对

2309
01:04:04,000 --> 01:04:05,000
但是呢

2310
01:04:05,000 --> 01:04:06,000
不管怎么说

2311
01:04:06,000 --> 01:04:09,000
或者说不管多强悍的程序员

2312
01:04:09,000 --> 01:04:11,000
他写出来的程序

2313
01:04:11,000 --> 01:04:14,000
终究是没有办法避免会有 bug

2314
01:04:14,000 --> 01:04:16,000
所以这时候就需要 debug

2315
01:04:16,000 --> 01:04:17,000
我们不妨先来解释一下

2316
01:04:17,000 --> 01:04:19,000
这个 debug 这个词是怎么来的

2317
01:04:19,000 --> 01:04:21,000
就其实有一个

2318
01:04:22,000 --> 01:04:23,000
美丽的都市传说

2319
01:04:23,000 --> 01:04:25,000
相信可能大分听众

2320
01:04:25,000 --> 01:04:28,000
此事都会说出来说

2321
01:04:28,000 --> 01:04:32,000
debug 是曾经有这么一位女程序员

2322
01:04:32,000 --> 01:04:35,000
他的名字叫做 grace hopper

2323
01:04:35,000 --> 01:04:36,000
grace hopper

2324
01:04:36,000 --> 01:04:39,000
这么一位美国海军准将

2325
01:04:41,000 --> 01:04:43,000
准将程序员

2326
01:04:43,000 --> 01:04:48,000
他曾经在 1950 年代的时候开发

2327
01:04:50,000 --> 01:04:55,000
应该是哈佛的一个大型机枪机项目的时候

2328
01:04:55,000 --> 01:04:57,000
去检测一个机枪机的故障

2329
01:04:57,000 --> 01:05:02,000
然后他发现故障的原因是一个额子

2330
01:05:02,000 --> 01:05:05,000
一只额子卡在一个机电器上

2331
01:05:06,000 --> 01:05:09,000
然后这个机电器没办法正确的被放下来

2332
01:05:09,000 --> 01:05:11,000
就是接受不良了

2333
01:05:11,000 --> 01:05:15,000
因此导致了整个机枪机不工作

2334
01:05:15,000 --> 01:05:16,000
然后他把这个额子取出来

2335
01:05:16,000 --> 01:05:20,000
然后把这个额子粘在了那天的故障记录上

2336
01:05:20,000 --> 01:05:24,000
然后写说这只 moss 导致了整个机器故障

2337
01:05:24,000 --> 01:05:26,000
然后我 little 里把它 debug

2338
01:05:26,000 --> 01:05:27,000
对

2339
01:05:27,000 --> 01:05:29,000
这是 debug 这个词的诱来

2340
01:05:29,000 --> 01:05:31,000
但真的出虫

2341
01:05:31,000 --> 01:05:33,000
对

2342
01:05:33,000 --> 01:05:38,000
但实际上虽然 grace hopper 使用了 debug 这个词

2343
01:05:38,000 --> 01:05:45,000
debug 这个词作为排除故障的指代早在 1940 年代左右

2344
01:05:45,000 --> 01:05:47,000
就已经在其他领域

2345
01:05:47,000 --> 01:05:51,000
尤其是电子的机械领域就已经其实已经被人使用了

2346
01:05:51,000 --> 01:05:57,000
所以 debug 这个词其实并不是 grace hopper 的发明

2347
01:05:57,000 --> 01:06:04,000
然后 debug 这个词真正成为一个排除错误的一个同一词

2348
01:06:04,000 --> 01:06:09,000
也是一直要到 1960 年代左右才真正的在机械推广开来

2349
01:06:09,000 --> 01:06:13,000
就是我记得好像是 vikipi 那样是文章说

2350
01:06:13,000 --> 01:06:20,000
直到 65 年还是哪年才有一篇论文的第一页直接使用了 debug 这个词

2351
01:06:20,000 --> 01:06:25,000
而且没有注视说这个没有家引号也没有注视这个词道是什么意思

2352
01:06:25,000 --> 01:06:28,000
所以直到这个时候 debug 才真正的进入个机械机械的主要

2353
01:06:31,000 --> 01:06:32,000
OK 我们又考了一下鼓

2354
01:06:34,000 --> 01:06:34,000
对

2355
01:06:36,000 --> 01:06:39,000
都是说一说你遇到过了比较有意思的吧

2356
01:06:39,000 --> 01:06:45,000
或者说你遇到过什么比较困扰你或者是比较有意思的吧

2357
01:06:47,000 --> 01:06:48,000
这上次我们那个串台啊

2358
01:06:50,000 --> 01:06:54,000
对对对 itn 串台吧也是一个比较有意思的吧

2359
01:06:54,000 --> 01:07:03,000
我记得很多人猜测过为什么我们要换很多换了很多次 podcast 的 solar

2360
01:07:03,000 --> 01:07:06,000
然后为什么要折腾来折腾去有时候支持 podcast 勾充

2361
01:07:06,000 --> 01:07:08,000
有时候不支持 podcast 勾充

2362
01:07:08,000 --> 01:07:11,000
其实都是我们在这时候解决这个 bug

2363
01:07:12,000 --> 01:07:13,000
不明白为什么会串台

2364
01:07:15,000 --> 01:07:19,000
对然后为什么不能解这个 bug 主要是因为我们没有办法重现它

2365
01:07:20,000 --> 01:07:21,000
这个是一个很很很重要的事情啊

2366
01:07:21,000 --> 01:07:26,000
就是说你要去除一只虫首先你得看到这只虫对吧

2367
01:07:26,000 --> 01:07:29,000
你得找到这个虫在哪是怎么发生的

2368
01:07:29,000 --> 01:07:33,000
一个生存的机制是怎么样子什么条件才会触发它对吧

2369
01:07:34,000 --> 01:07:39,000
然后反而是那些你想找找不找不知道怎么触发

2370
01:07:39,000 --> 01:07:40,000
不知道什么时候出现

2371
01:07:40,000 --> 01:07:43,000
你没办法重现那样的东西我们基本上叫做 fantan bug 对吧

2372
01:07:43,000 --> 01:07:45,000
就是隐虫隐虫

2373
01:07:46,000 --> 01:07:51,000
上次那个那个串台的 bug 之所以那么久都没有找到原因

2374
01:07:51,000 --> 01:07:55,000
一个最主要的问题就是我们两个都没有办法重

2375
01:07:55,000 --> 01:07:57,000
应该是我们三都没办法重现它

2376
01:07:59,000 --> 01:08:03,000
因为这个东西是要在特定的运营商的网络里面

2377
01:08:04,000 --> 01:08:07,000
就是长城宽带才会出现

2378
01:08:07,000 --> 01:08:14,000
然后然后偶尔在某些这个这个什么移动啊电信的运营商里面

2379
01:08:14,000 --> 01:08:15,000
偶尔也会出现

2380
01:08:15,000 --> 01:08:21,000
但是好像这就是跟那个电信或者这个他们的网络的结构有点关系的

2381
01:08:21,000 --> 01:08:25,000
因为它不似乎不是一个全国统一的一个结构

2382
01:08:25,000 --> 01:08:27,000
所以就比较麻烦了

2383
01:08:27,000 --> 01:08:28,000
没错

2384
01:08:29,000 --> 01:08:32,000
就有人定义过说 debite 的过程其实就是

2385
01:08:34,000 --> 01:08:41,000
it's a process of confirming the many things that you believe are true until you find one which is not true

2386
01:08:41,000 --> 01:08:43,000
就我们首先两个障碍第一个是

2387
01:08:43,000 --> 01:08:49,000
我们 believe true 的实在是太多了

2388
01:08:50,000 --> 01:08:59,000
另外第二个就是我们没有办法通过一次势力就就决定说这个东西肯定是 true 的

2389
01:08:59,000 --> 01:09:02,000
就我们自己都下载过了无数次 podcast

2390
01:09:02,000 --> 01:09:06,000
但是没有一次是可以重现这个网络

2391
01:09:06,000 --> 01:09:09,000
因为对而且对而且

2392
01:09:09,000 --> 01:09:12,000
即便你是用常伸观战你也不是每次都会遇到这个网络

2393
01:09:12,000 --> 01:09:13,000
这也是最让人头疼的一个问题

2394
01:09:15,000 --> 01:09:15,000
没错

2395
01:09:18,000 --> 01:09:19,000
我来说

2396
01:09:19,000 --> 01:09:22,000
因为我遇到过一个比较痛苦的网络

2397
01:09:22,000 --> 01:09:28,000
而且很遗憾的是这个网络直到今天我都没有解决它

2398
01:09:28,000 --> 01:09:29,000
我就离职了

2399
01:09:31,000 --> 01:09:32,000
来说一下

2400
01:09:32,000 --> 01:09:35,000
这种心里的一个痛

2401
01:09:36,000 --> 01:09:39,000
我的上一家公司是做博彩的

2402
01:09:43,000 --> 01:09:45,000
不用说这么高雅就是赌球

2403
01:09:45,000 --> 01:09:47,000
对是赌球的

2404
01:09:47,000 --> 01:09:48,000
然后赌球的公司比较重视

2405
01:09:49,000 --> 01:09:51,000
你的一件事情就是客户的

2406
01:09:53,000 --> 01:09:54,000
就怎么说呢

2407
01:09:54,000 --> 01:09:56,000
就是客户会把钱存在我们公司的网站上

2408
01:09:56,000 --> 01:09:57,000
跟什么一样

2409
01:09:59,000 --> 01:10:04,000
但是有时候有一些使用 iOS 设备的

2410
01:10:05,000 --> 01:10:07,000
Chrome 用户

2411
01:10:07,000 --> 01:10:10,000
就是如果一个用户使用 iOS 上面的 Chrome 访问我们公司

2412
01:10:10,000 --> 01:10:13,000
然后登录我们公司的服务器

2413
01:10:14,000 --> 01:10:14,000
大概有

2414
01:10:17,000 --> 01:10:20,000
万分之一到十万分之一的概率

2415
01:10:20,000 --> 01:10:22,000
它会看到另外一个人的账户

2416
01:10:24,000 --> 01:10:27,000
这是非常非常非常非常恐怖的一件事情

2417
01:10:27,000 --> 01:10:28,000
不是吧

2418
01:10:28,000 --> 01:10:30,000
就你登录了你自己的账号

2419
01:10:30,000 --> 01:10:32,000
结果看到另外一个人的账号

2420
01:10:32,000 --> 01:10:35,000
此时你难道你心里不会产生一丝口慌

2421
01:10:35,000 --> 01:10:38,000
就是我抗的我的账户不是也被别人用了吗

2422
01:10:39,000 --> 01:10:40,000
对啊

2423
01:10:40,000 --> 01:10:40,000
对啊

2424
01:10:40,000 --> 01:10:41,000
还没有钱

2425
01:10:42,000 --> 01:10:42,000
对

2426
01:10:42,000 --> 01:10:43,000
而且没有钱

2427
01:10:43,000 --> 01:10:45,000
而且感觉除了你登录

2428
01:10:45,000 --> 01:10:47,000
哪天都换了人家的银行

2429
01:10:47,000 --> 01:10:49,000
这个银行也经常出现

2430
01:10:49,000 --> 01:10:51,000
说什么去 ATM 机区钱

2431
01:10:51,000 --> 01:10:54,000
一看差就去看存款后面有 8 个零

2432
01:10:55,000 --> 01:10:55,000
对

2433
01:10:55,000 --> 01:10:56,000
赶紧全都存出来对吧

2434
01:10:56,000 --> 01:10:57,000
赶紧全都存出来

2435
01:10:58,000 --> 01:11:00,000
但这是非常恐怖的一个罢

2436
01:11:00,000 --> 01:11:01,000
然后

2437
01:11:02,000 --> 01:11:02,000
但是

2438
01:11:03,000 --> 01:11:06,000
我其实遇到了跟 IPN 创产问题一样的

2439
01:11:06,000 --> 01:11:07,000
一样的困境

2440
01:11:07,000 --> 01:11:09,000
就是我自己没有办法重来这个玩意

2441
01:11:09,000 --> 01:11:10,000
只是有大概

2442
01:11:11,000 --> 01:11:14,000
4 到 5 个比较有良知的用户

2443
01:11:16,000 --> 01:11:17,000
遇到这种情况立刻截了图

2444
01:11:17,000 --> 01:11:19,000
然后退出那个账户

2445
01:11:19,000 --> 01:11:20,000
然后把截图发给我们

2446
01:11:20,000 --> 01:11:23,000
说有这么一个 X 的在

2447
01:11:23,000 --> 01:11:25,000
然后第一件事情出现的时候

2448
01:11:26,000 --> 01:11:28,000
基本上就已经击飞狗跳了

2449
01:11:28,000 --> 01:11:29,000
然后后面又出现了三次

2450
01:11:30,000 --> 01:11:31,000
然后

2451
01:11:31,000 --> 01:11:33,000
大概有那么 4 5 个人

2452
01:11:33,000 --> 01:11:35,000
连续不断的去尝试

2453
01:11:35,000 --> 01:11:36,000
重现这个 Bug 没有做到

2454
01:11:37,000 --> 01:11:41,000
然后又开始尝试着分析这些人的账户

2455
01:11:42,000 --> 01:11:44,000
他们的登入过程有什么异常之处

2456
01:11:44,000 --> 01:11:45,000
也找不到

2457
01:11:45,000 --> 01:11:46,000
而且

2458
01:11:47,000 --> 01:11:48,000
而且比较悲惨的是

2459
01:11:48,000 --> 01:11:51,000
这些人一旦把这个 Bug 抱进来

2460
01:11:51,000 --> 01:11:55,000
我们就必须立刻先把他的账户给封了

2461
01:11:55,000 --> 01:11:55,000
因为

2462
01:11:56,000 --> 01:11:57,000
说话他又

2463
01:11:57,000 --> 01:11:58,000
对

2464
01:11:58,000 --> 01:12:00,000
生活他又再一次登入了同一张货

2465
01:12:01,000 --> 01:12:01,000
然后

2466
01:12:02,000 --> 01:12:04,000
一个可能的猜测是

2467
01:12:04,000 --> 01:12:08,000
这个 Bug 是由我们的 Session Replication Service 引起的

2468
01:12:08,000 --> 01:12:09,000
因为服务器是个集权

2469
01:12:11,000 --> 01:12:13,000
你要在这个服务器上登入

2470
01:12:13,000 --> 01:12:16,000
然后你的 Session 信息需要被

2471
01:12:16,000 --> 01:12:17,000
复制到另外一个服务器上的话

2472
01:12:18,000 --> 01:12:22,000
需要一个专门的 Dedicated Session Replication Service

2473
01:12:22,000 --> 01:12:25,000
然后这个 Service 使用了一个比较老旧的

2474
01:12:26,000 --> 01:12:27,000
那个库点什么

2475
01:12:29,000 --> 01:12:30,000
一直想不出来的

2476
01:12:30,000 --> 01:12:31,000
是一个 Java 的 Session Replication

2477
01:12:31,000 --> 01:12:33,000
一个 Java 的 In memory database 的库

2478
01:12:34,000 --> 01:12:36,000
然后我们怀疑是这个库有问题

2479
01:12:36,000 --> 01:12:38,000
然后专门请了这个库的

2480
01:12:38,000 --> 01:12:42,000
德国公司德国分布的人来排查

2481
01:12:42,000 --> 01:12:43,000
也没弄出来

2482
01:12:44,000 --> 01:12:44,000
然后又把

2483
01:12:45,000 --> 01:12:46,000
然后又在一个

2484
01:12:47,000 --> 01:12:49,000
用户抱这个 Bug 的时候

2485
01:12:49,000 --> 01:12:52,000
把整个 Server 的那个 HipDump 弄出来

2486
01:12:52,000 --> 01:12:53,000
然后开始分析

2487
01:12:54,000 --> 01:12:54,000
也没分析出来

2488
01:12:55,000 --> 01:12:57,000
最后实在实在实在没有办法

2489
01:12:57,000 --> 01:12:58,000
我出了一个搜主意

2490
01:12:58,000 --> 01:13:03,000
就是秀泰那个用户的榴弹器 Agent

2491
01:13:04,000 --> 01:13:06,000
如果发现他是在 IOS 上使用 Chrome

2492
01:13:07,000 --> 01:13:08,000
就不让他用到我们网站

2493
01:13:08,000 --> 01:13:10,000
你说请你使用 Safari

2494
01:13:10,000 --> 01:13:11,000
因为 Safari 没有这个问题

2495
01:13:13,000 --> 01:13:15,000
所以 Safari 用户没有出现过这个问题

2496
01:13:15,000 --> 01:13:19,000
就 IOS 有这么一个问题

2497
01:13:20,000 --> 01:13:21,000
对 Chrome 上的

2498
01:13:21,000 --> 01:13:23,000
IOS 上的 Chrome 有这么一个问题

2499
01:13:23,000 --> 01:13:26,000
所以问题也有可能出现在 Chrome 上面对吧

2500
01:13:26,000 --> 01:13:26,000
但

2501
01:13:28,000 --> 01:13:29,000
对你不知道

2502
01:13:29,000 --> 01:13:29,000
你没法

2503
01:13:29,000 --> 01:13:31,000
我没法解释

2504
01:13:31,000 --> 01:13:31,000
对

2505
01:13:32,000 --> 01:13:35,000
就是一直困扰到我今天的一个 Bug

2506
01:13:35,000 --> 01:13:37,000
这不是连接层的问题吗

2507
01:13:38,000 --> 01:13:39,000
我不知道啊

2508
01:13:41,000 --> 01:13:44,000
对这个是没有办法去确切回答的问题

2509
01:13:44,000 --> 01:13:44,000
我不知道啊

2510
01:13:44,000 --> 01:13:45,000
对

2511
01:13:45,000 --> 01:13:46,000
而且怎么说呢

2512
01:13:46,000 --> 01:13:49,000
就是其实大部分 Bug 都是你搜一搜

2513
01:13:49,000 --> 01:13:50,000
就可以搜到了对吧

2514
01:13:50,000 --> 01:13:51,000
就是再怎么隐秘的 Bug

2515
01:13:51,000 --> 01:13:54,000
你很少有可能

2516
01:13:54,000 --> 01:13:55,000
你是第一个碰到的

2517
01:13:56,000 --> 01:13:58,000
但是我搜一下

2518
01:13:58,000 --> 01:14:01,000
从没有看到过任何一个人有类似的这么一个问题

2519
01:14:02,000 --> 01:14:04,000
就这实在是太

2520
01:14:04,000 --> 01:14:06,000
非常非常伤感的人感觉

2521
01:14:07,000 --> 01:14:08,000
所以到现在为止

2522
01:14:08,000 --> 01:14:10,000
你也没有解决他也不知道为什么

2523
01:14:10,000 --> 01:14:11,000
没有解决

2524
01:14:11,000 --> 01:14:12,000
没有不知道为什么

2525
01:14:12,000 --> 01:14:13,000
然后到现在为止这个网站

2526
01:14:13,000 --> 01:14:16,000
这公司的网站还是不允许使用 Chrome

2527
01:14:18,000 --> 01:14:19,000
IOS 的 Chrome 登陆

2528
01:14:20,000 --> 01:14:21,000
我觉得时间一久

2529
01:14:21,000 --> 01:14:22,000
可能过上三五年

2530
01:14:23,000 --> 01:14:24,000
如果没有人去看文档的话

2531
01:14:24,000 --> 01:14:27,000
没有人会知道为什么要这样做

2532
01:14:28,000 --> 01:14:30,000
为什么要单单要吧

2533
01:14:30,000 --> 01:14:32,000
IOS 和 Chrome 的关系

2534
01:14:35,000 --> 01:14:35,000
好吧

2535
01:14:36,000 --> 01:14:38,000
哇 最棒的怪物

2536
01:14:39,000 --> 01:14:41,000
这是这是我人生最悲伤的一个吧

2537
01:14:44,000 --> 01:14:44,000
然后

2538
01:14:44,000 --> 01:14:46,000
这个人们链条太长了

2539
01:14:46,000 --> 01:14:48,000
你确实很难去

2540
01:14:48,000 --> 01:14:49,000
而且这个样本又不多了吧

2541
01:14:49,000 --> 01:14:50,000
只有三粒是吧

2542
01:14:51,000 --> 01:14:51,000
对

2543
01:14:51,000 --> 01:14:53,000
这三到四个用户受了

2544
01:14:53,000 --> 01:14:54,000
有没有想法

2545
01:14:55,000 --> 01:14:55,000
对啊

2546
01:14:55,000 --> 01:14:56,000
你这个说

2547
01:14:56,000 --> 01:14:57,000
或说我们知道的只有四个

2548
01:14:58,000 --> 01:15:00,000
也很有可能什么一个宇宙事先

2549
01:15:00,000 --> 01:15:02,000
打到你们那个服务器上

2550
01:15:02,000 --> 01:15:04,000
翻转了一个内存里面的一个比特位

2551
01:15:04,000 --> 01:15:06,000
然后导致这个 session

2552
01:15:06,000 --> 01:15:08,000
复制的扩展中出现了错误

2553
01:15:08,000 --> 01:15:09,000
你也很难说啊对啊

2554
01:15:10,000 --> 01:15:11,000
是

2555
01:15:11,000 --> 01:15:12,000
也许对最后发现

2556
01:15:12,000 --> 01:15:14,000
Bug 出在太阳黑子上面

2557
01:15:14,000 --> 01:15:16,000
我能把他怎么样

2558
01:15:18,000 --> 01:15:19,000
好吧

2559
01:15:19,000 --> 01:15:21,000
然后我在准备这一期节目的时候

2560
01:15:21,000 --> 01:15:22,000
专门去搜一下

2561
01:15:23,000 --> 01:15:25,000
有哪些最奇怪

2562
01:15:25,000 --> 01:15:27,000
或是最有趣的 bug

2563
01:15:27,000 --> 01:15:28,000
Qura 上面有这样一个问题

2564
01:15:28,000 --> 01:15:31,000
就是 what's the hardest bug you have ever debugged

2565
01:15:32,000 --> 01:15:33,000
然后排名第一的答案是

2566
01:15:34,000 --> 01:15:35,000
一个在

2567
01:15:35,000 --> 01:15:38,000
一个给索尼第一代索尼开发游戏的一个人

2568
01:15:38,000 --> 01:15:40,000
他遇到了这么一个 bug

2569
01:15:40,000 --> 01:15:40,000
就是

2570
01:15:42,000 --> 01:15:45,000
这个游戏在你储存的时候

2571
01:15:47,000 --> 01:15:49,000
有非常小的机率

2572
01:15:49,000 --> 01:15:58,000
会让你那个 ps 的存储卡上面的数据被被损坏

2573
01:15:58,000 --> 01:16:00,000
就是你存这个游戏的盘的时候

2574
01:16:00,000 --> 01:16:03,000
有非常小的概率会导致你那个 merricon

2575
01:16:03,000 --> 01:16:04,000
mericon stick

2576
01:16:04,000 --> 01:16:07,000
上面所有的存档资料都消失了

2577
01:16:07,000 --> 01:16:08,000
对对对

2578
01:16:08,000 --> 01:16:09,000
怎么行

2579
01:16:09,000 --> 01:16:09,000
对

2580
01:16:09,000 --> 01:16:12,000
那个年纪比较小的听众们

2581
01:16:12,000 --> 01:16:13,000
可能不知道我在说什么

2582
01:16:13,000 --> 01:16:16,000
就是早期的 playstation 上面

2583
01:16:16,000 --> 01:16:17,000
是有这么一个小小的

2584
01:16:18,000 --> 01:16:18,000
小 UBSB 插盘

2585
01:16:19,000 --> 01:16:21,000
UBSB 盘的这么一个东西

2586
01:16:22,000 --> 01:16:24,000
叫做 merricon stick

2587
01:16:24,000 --> 01:16:26,000
你把它插进 kss

2588
01:16:26,000 --> 01:16:28,000
索尼自家的 U 盘接口

2589
01:16:28,000 --> 01:16:31,000
不是 U 盘是那个 sd 卡的型号的接口

2590
01:16:31,000 --> 01:16:32,000
对对

2591
01:16:32,000 --> 01:16:32,000
对

2592
01:16:32,000 --> 01:16:35,000
然后你把它插到你的 playstation 上面

2593
01:16:35,000 --> 01:16:37,000
才可以把你的游戏存盘

2594
01:16:37,000 --> 01:16:41,000
然后这个存盘文件是你可以自己带在身上

2595
01:16:41,000 --> 01:16:43,000
然后这个游戏有可能把这个存盘

2596
01:16:43,000 --> 01:16:44,000
整个盘给毁掉

2597
01:16:44,000 --> 01:16:46,000
也就意味着你不管玩什么游戏

2598
01:16:46,000 --> 01:16:48,000
你所有存盘文件都不见

2599
01:16:48,000 --> 01:16:49,000
这是很恐怖的一件事

2600
01:16:49,000 --> 01:16:50,000
然后他们的

2601
01:16:53,000 --> 01:16:56,000
随着这个 deadline 逐步逼近

2602
01:16:56,000 --> 01:16:58,000
他们的程序非常恐慌

2603
01:16:58,000 --> 01:17:01,000
因为那个时候的 playstation 是没有 playstation network

2604
01:17:01,000 --> 01:17:01,000
是什么东西的

2605
01:17:01,000 --> 01:17:03,000
就是你最终压了盘

2606
01:17:03,000 --> 01:17:04,000
然后这个盘出去

2607
01:17:04,000 --> 01:17:05,000
所有人玩如果有 bug

2608
01:17:05,000 --> 01:17:10,000
那是没有办法通过在线升级来来解决这个 bug

2609
01:17:10,000 --> 01:17:11,000
然后他们恐慌

2610
01:17:11,000 --> 01:17:12,000
非常恐慌

2611
01:17:12,000 --> 01:17:14,000
然后就开始一点点排排出错误

2612
01:17:14,000 --> 01:17:16,000
最后他们把游戏精简到了

2613
01:17:17,000 --> 01:17:18,000
几乎什么都不敢

2614
01:17:18,000 --> 01:17:22,000
就是唯一的功能就是登陆游戏

2615
01:17:23,000 --> 01:17:24,000
然后存盘

2616
01:17:25,000 --> 01:17:26,000
即便在这种情况下

2617
01:17:26,000 --> 01:17:28,000
还是有一定的几率会有

2618
01:17:28,000 --> 01:17:31,000
会可能损坏掉这个机卡

2619
01:17:31,000 --> 01:17:32,000
然后他们就疯了

2620
01:17:35,000 --> 01:17:37,000
直到有一天

2621
01:17:38,000 --> 01:17:39,000
他发现一个人

2622
01:17:40,000 --> 01:17:41,000
就是他们的一个美工

2623
01:17:42,000 --> 01:17:42,000
在

2624
01:17:45,000 --> 01:17:46,000
他当时比较生气

2625
01:17:46,000 --> 01:17:48,000
然后他可能讯实了那个美工

2626
01:17:48,000 --> 01:17:52,000
然后那个美工比较 nervous 的去摆弄手柄的时候

2627
01:17:53,000 --> 01:17:54,000
游戏正在存盘

2628
01:17:54,000 --> 01:17:57,000
然后此时机卡被 crop 掉了

2629
01:17:57,000 --> 01:17:58,000
然后说什么

2630
01:17:58,000 --> 01:18:00,000
你 do it again

2631
01:18:00,000 --> 01:18:02,000
然后就是他们发现

2632
01:18:02,000 --> 01:18:03,000
如果你在存盘的时候

2633
01:18:04,000 --> 01:18:06,000
下意识的或者说无意识的摆弄了那个手柄

2634
01:18:07,000 --> 01:18:10,000
你的机卡就会被抹除掉

2635
01:18:11,000 --> 01:18:14,000
最后他们发现这个故障是来自于

2636
01:18:17,000 --> 01:18:17,000
怎么说呢

2637
01:18:17,000 --> 01:18:19,000
就是他们的

2638
01:18:20,000 --> 01:18:21,000
他们的游戏在

2639
01:18:22,000 --> 01:18:24,000
他们的游戏在运行的时候会把

2640
01:18:26,000 --> 01:18:28,000
ps 主机上面的一个精震

2641
01:18:28,000 --> 01:18:30,000
就是一个硬件的精震

2642
01:18:31,000 --> 01:18:33,000
设成比较高的一个频率

2643
01:18:33,000 --> 01:18:35,000
然后在这个特定频率之下

2644
01:18:35,000 --> 01:18:36,000
有可能那个精震会

2645
01:18:38,000 --> 01:18:40,000
干扰到主机上面的另外一个

2646
01:18:42,000 --> 01:18:46,000
和手柄传输波导率相关的一个

2647
01:18:46,000 --> 01:18:49,000
然后使得这个芯片产生了一个特定的 bug

2648
01:18:49,000 --> 01:18:51,000
然后这个 bug 会导致机卡损毁

2649
01:18:53,000 --> 01:18:56,000
对这是看起来非常取决

2650
01:18:56,000 --> 01:18:58,000
然后让人家捏了一把汉的一个故事

2651
01:18:58,000 --> 01:18:59,000
所以就来来去读一遍

2652
01:19:00,000 --> 01:19:01,000
你要遇到

2653
01:19:01,000 --> 01:19:05,000
你说我们现代程序要遇到这种级别的 bug 怎么办

2654
01:19:06,000 --> 01:19:07,000
我觉得真的就

2655
01:19:08,000 --> 01:19:09,000
一头撞死酸了

2656
01:19:11,000 --> 01:19:11,000
就好像

2657
01:19:11,000 --> 01:19:15,000
类似的 bug 其实在游戏论坛里面

2658
01:19:15,000 --> 01:19:16,000
游戏开发者论坛那边

2659
01:19:16,000 --> 01:19:18,000
也经常可以看到

2660
01:19:18,000 --> 01:19:18,000
比如说

2661
01:19:18,000 --> 01:19:20,000
曾经有过一个 bug 是

2662
01:19:24,000 --> 01:19:25,000
在第一个场景里面

2663
01:19:27,000 --> 01:19:27,000
如果你把

2664
01:19:27,000 --> 01:19:28,000
如果你用手柄

2665
01:19:29,000 --> 01:19:34,000
把相机视角转到角色的身后

2666
01:19:34,000 --> 01:19:36,000
整个游戏就会 crush

2667
01:19:36,000 --> 01:19:40,000
然后他们顶着这个 deadline 压力

2668
01:19:40,000 --> 01:19:42,000
测试了一个月都没有测出来

2669
01:19:42,000 --> 01:19:43,000
到底是为什么

2670
01:19:43,000 --> 01:19:44,000
最后他们的解决方法就是

2671
01:19:45,000 --> 01:19:46,000
在第一个场景里面

2672
01:19:46,000 --> 01:19:48,000
编程强制说

2673
01:19:49,000 --> 01:19:51,000
相机只能保持在侧面的角度

2674
01:19:51,000 --> 01:19:53,000
然后一直到跑到安全的地方

2675
01:19:53,000 --> 01:19:56,000
才让用户可以把视角转到背后

2676
01:19:57,000 --> 01:19:57,000
对

2677
01:19:57,000 --> 01:19:59,000
像这种 bug 你没有办法解决的时候

2678
01:19:59,000 --> 01:20:01,000
你都真的只能绕开它

2679
01:20:01,000 --> 01:20:02,000
如果你有压力的话

2680
01:20:03,000 --> 01:20:04,000
你之前也不该干了吗

2681
01:20:04,000 --> 01:20:07,000
你直接进了 crumpful LS 一样的

2682
01:20:09,000 --> 01:20:11,000
这是一些比较专门吧

2683
01:20:11,000 --> 01:20:13,000
但大部分时候

2684
01:20:13,000 --> 01:20:15,000
我们遇到的 bug 其实没有那么复杂

2685
01:20:16,000 --> 01:20:17,000
我真的是因为自己蠢了

2686
01:20:17,000 --> 01:20:18,000
不能怪别人

2687
01:20:19,000 --> 01:20:20,000
不能怪社会

2688
01:20:21,000 --> 01:20:21,000
没错

2689
01:20:23,000 --> 01:20:23,000
对

2690
01:20:23,000 --> 01:20:26,000
其实大部分 bug 都可以通过一些

2691
01:20:26,000 --> 01:20:29,000
比较基本的手段被发现了

2692
01:20:29,000 --> 01:20:31,000
其实最基本的一个就是 read the code

2693
01:20:31,000 --> 01:20:34,000
就是把你刚刚写的东西仔细读一遍

2694
01:20:35,000 --> 01:20:36,000
很多时候就已经可以发现

2695
01:20:36,000 --> 01:20:38,000
bug 到底何在

2696
01:20:39,000 --> 01:20:39,000
其实不一定

2697
01:20:39,000 --> 01:20:42,000
因为像会形成那个思维定式

2698
01:20:42,000 --> 01:20:44,000
让你反而一直反复读

2699
01:20:44,000 --> 01:20:45,000
也看不出问题在哪里

2700
01:20:45,000 --> 01:20:47,000
比较经典就是那个

2701
01:20:47,000 --> 01:20:48,000
就是那个叫什么来的

2702
01:20:48,000 --> 01:20:51,000
因为这像 ccga 这种

2703
01:20:51,000 --> 01:20:54,000
它不是那个叫做梭镜是无影响的

2704
01:20:55,000 --> 01:20:56,000
对

2705
01:20:56,000 --> 01:20:57,000
然后你写了一个 ef

2706
01:20:57,000 --> 01:20:58,000
忘了打划合号

2707
01:20:58,000 --> 01:21:00,000
然后你觉得你梭镜的后面一排

2708
01:21:01,000 --> 01:21:02,000
一个 block 代吧

2709
01:21:02,000 --> 01:21:03,000
就应该说这个应该是这个

2710
01:21:03,000 --> 01:21:04,000
ef 在里面

2711
01:21:04,000 --> 01:21:05,000
结果一看没划合号

2712
01:21:05,000 --> 01:21:06,000
只有地上被执行

2713
01:21:07,000 --> 01:21:08,000
没错

2714
01:21:08,000 --> 01:21:12,000
我其实在研究生当助教的时候

2715
01:21:13,000 --> 01:21:15,000
遇到过这样一个案例

2716
01:21:15,000 --> 01:21:18,000
就是我当时在写那个

2717
01:21:19,000 --> 01:21:20,000
反而写我的项目

2718
01:21:20,000 --> 01:21:23,000
然后我写过写的项目的地方是

2719
01:21:23,000 --> 01:21:25,000
学校的一个计算计实验室

2720
01:21:25,000 --> 01:21:27,000
然后有两个德国小孩在那

2721
01:21:27,000 --> 01:21:28,000
不是小孩

2722
01:21:28,000 --> 01:21:30,000
就是反正两个德国本科生在那边写成绪

2723
01:21:31,000 --> 01:21:32,000
别人都走了

2724
01:21:32,000 --> 01:21:33,000
他们两个还坐在那搞

2725
01:21:34,000 --> 01:21:36,000
然后就他们终于忍不住了

2726
01:21:36,000 --> 01:21:37,000
问我说

2727
01:21:37,000 --> 01:21:38,000
你能过来看一看

2728
01:21:38,000 --> 01:21:40,000
我们的程序到底有什么问题吗

2729
01:21:40,000 --> 01:21:41,000
然后我看了一下

2730
01:21:41,000 --> 01:21:41,000
看了大概

2731
01:21:43,000 --> 01:21:45,000
三分钟就说这里缺一个合合号

2732
01:21:45,000 --> 01:21:47,000
然后他们两个疯子来说

2733
01:21:48,000 --> 01:21:50,000
我们在这坐了四个小时

2734
01:21:50,000 --> 01:21:51,000
就是因为这个合合号

2735
01:21:55,000 --> 01:21:57,000
所以遇到这种情况

2736
01:21:57,000 --> 01:21:57,000
就是说

2737
01:21:58,000 --> 01:22:00,000
有先不说缩击敏感

2738
01:22:00,000 --> 01:22:01,000
是不是一件好事吧

2739
01:22:01,000 --> 01:22:03,000
至少像那个沟语员

2740
01:22:03,000 --> 01:22:04,000
他不是有跟那个自带

2741
01:22:04,000 --> 01:22:06,000
叫个 go format 那样工具吗

2742
01:22:06,000 --> 01:22:06,000
可以帮你说

2743
01:22:06,000 --> 01:22:10,000
就是把带马重排成一个标准样式

2744
01:22:10,000 --> 01:22:11,000
这样可以一眼看出这种

2745
01:22:11,000 --> 01:22:13,000
比较愚蠢低级的错误

2746
01:22:13,000 --> 01:22:14,000
就上次那个

2747
01:22:15,000 --> 01:22:17,000
你知道那个 heart bleed

2748
01:22:17,000 --> 01:22:20,000
就是那个 OpenSSL 那个大 bug 出现吗

2749
01:22:20,000 --> 01:22:21,000
其实也是因为类似的原因

2750
01:22:21,000 --> 01:22:22,000
还有一个什么

2751
01:22:22,000 --> 01:22:24,000
好像是一个 double return 吧好像是

2752
01:22:25,000 --> 01:22:27,000
然后没有看到

2753
01:22:27,000 --> 01:22:29,000
就发现那个检查都根本就没有

2754
01:22:29,000 --> 01:22:30,000
从来

2755
01:22:30,000 --> 01:22:31,000
这么多年过去

2756
01:22:31,000 --> 01:22:33,000
从来没有执行过那个安全性的检查

2757
01:22:33,000 --> 01:22:33,000
白搞

2758
01:22:34,000 --> 01:22:36,000
就是其实也是可以

2759
01:22:36,000 --> 01:22:37,000
就是如果你自己

2760
01:22:37,000 --> 01:22:41,000
自己看那个带马的原始的形状

2761
01:22:41,000 --> 01:22:43,000
你不仔细去想

2762
01:22:43,000 --> 01:22:44,000
就我不告诉你

2763
01:22:44,000 --> 01:22:45,000
这里有个明显的问题的话

2764
01:22:45,000 --> 01:22:46,000
你怎么又想不到

2765
01:22:46,000 --> 01:22:48,000
哪里会有这么一个状况对不对

2766
01:22:48,000 --> 01:22:48,000
对不对

2767
01:22:48,000 --> 01:22:50,000
带马在公开

2768
01:22:51,000 --> 01:22:52,000
还是开源的嘛

2769
01:22:52,000 --> 01:22:53,000
光电话是要存在了那么多年

2770
01:22:53,000 --> 01:22:54,000
都没有人发现

2771
01:22:54,000 --> 01:22:55,000
所以我觉得

2772
01:22:55,000 --> 01:22:58,000
recode 是最低效率的出重的手段

2773
01:22:59,000 --> 01:23:01,000
但是我觉得这个点可能是说

2774
01:23:02,000 --> 01:23:07,000
如果你有一个比较好的写一小段

2775
01:23:07,000 --> 01:23:09,000
就回去 review 一下的习惯的话

2776
01:23:09,000 --> 01:23:13,000
其实是对于杜绝这样的 8 个出现

2777
01:23:13,000 --> 01:23:15,000
是比较有意义的

2778
01:23:15,000 --> 01:23:16,000
但是不是每个人都有这个习惯

2779
01:23:17,000 --> 01:23:21,000
可能这就是为什么一些比较好的 ID

2780
01:23:21,000 --> 01:23:25,000
会动用静态分析器或者 Static Analyzer

2781
01:23:25,000 --> 01:23:26,000
这种东西来

2782
01:23:26,000 --> 01:23:28,000
对于说在某种意义上是

2783
01:23:28,000 --> 01:23:30,000
它帮你读你刚刚写下的带马

2784
01:23:31,000 --> 01:23:34,000
就判断一些模式

2785
01:23:34,000 --> 01:23:35,000
或者行为之类的

2786
01:23:35,000 --> 01:23:36,000
没错

2787
01:23:37,000 --> 01:23:39,000
反正基本的问题解决了

2788
01:23:39,000 --> 01:23:41,000
对大家喜欢 ID 的原因之一

2789
01:23:41,000 --> 01:23:45,000
就是它会除以语法高量之外

2790
01:23:45,000 --> 01:23:46,000
会告诉你说这个地方

2791
01:23:46,000 --> 01:23:47,000
看起来好像是不对的

2792
01:23:51,000 --> 01:23:54,000
比如说 xcode 的 playground

2793
01:23:54,000 --> 01:23:57,000
其实就是在不同的静态分析你的带马

2794
01:23:57,000 --> 01:23:58,000
然后甚至动态的运行它

2795
01:23:58,000 --> 01:24:03,000
然后可以帮你其实发现自己写的在马上

2796
01:24:03,000 --> 01:24:03,000
对

2797
01:24:03,000 --> 01:24:05,000
然后我们说这个人最

2798
01:24:05,000 --> 01:24:09,000
其实蛮常用的一个除虫的手段

2799
01:24:09,000 --> 01:24:11,000
就是打印除虫法

2800
01:24:13,000 --> 01:24:13,000
对

2801
01:24:13,000 --> 01:24:15,000
The good old printf

2802
01:24:17,000 --> 01:24:21,000
printf 是一个系统标准函数

2803
01:24:21,000 --> 01:24:22,000
C 名标准函数

2804
01:24:22,000 --> 01:24:24,000
打一个自动刷的吧

2805
01:24:24,000 --> 01:24:25,000
然后一般做法怎么样子

2806
01:24:25,000 --> 01:24:27,000
这就是你在

2807
01:24:27,000 --> 01:24:29,000
你觉得可能会出问题的那个

2808
01:24:30,000 --> 01:24:33,000
那个区间打印一个

2809
01:24:33,000 --> 01:24:38,000
你认为它应该是某一个数值或者是一个变量

2810
01:24:38,000 --> 01:24:39,000
然后看它是不是

2811
01:24:40,000 --> 01:24:42,000
在那个时候确实是足迹所到的那个数字

2812
01:24:43,000 --> 01:24:45,000
然后你可以当一次插多个打印点

2813
01:24:45,000 --> 01:24:50,000
或者是打印多个变量或者是一个什么结构体之类的

2814
01:24:50,000 --> 01:24:52,000
然后看是否如你预期

2815
01:24:52,000 --> 01:24:54,000
就是其实刚刚忘了说了

2816
01:24:54,000 --> 01:24:56,000
就整个过程就是说

2817
01:24:56,000 --> 01:24:57,000
你形成一个假设

2818
01:24:57,000 --> 01:24:59,000
假设代码在这里出了问题

2819
01:24:59,000 --> 01:25:00,000
然后你去验证那个假设是否整理

2820
01:25:00,000 --> 01:25:01,000
然后逐一排查的过程

2821
01:25:02,000 --> 01:25:04,000
然后打印除虫法

2822
01:25:04,000 --> 01:25:07,000
就是做了一个最原始的方法

2823
01:25:07,000 --> 01:25:08,000
就是这么一个过程

2824
01:25:09,000 --> 01:25:10,000
对

2825
01:25:10,000 --> 01:25:13,000
打印除虫法第一步是测试这个打印除虫法的

2826
01:25:13,000 --> 01:25:15,000
我是一个打印除虫的大师

2827
01:25:17,000 --> 01:25:19,000
打印除虫法的第一层境界是

2828
01:25:19,000 --> 01:25:23,000
检测这个代码分支会不会会被运行到

2829
01:25:24,000 --> 01:25:28,000
比如说我刚才会在 JavaScript 里面写 console log 1

2830
01:25:28,000 --> 01:25:30,000
然后下面一个分支写 console log 2

2831
01:25:30,000 --> 01:25:32,000
然后再下面一个 console log 3

2832
01:25:32,000 --> 01:25:33,000
然后运行

2833
01:25:33,000 --> 01:25:36,000
然后去 console 里面看说 123 是不是都打出来了

2834
01:25:36,000 --> 01:25:37,000
如果没打出来的话

2835
01:25:37,000 --> 01:25:39,000
哦这段代码根本就没被运行

2836
01:25:39,000 --> 01:25:41,000
就是最基本的叫做什么 control flow 嘛

2837
01:25:41,000 --> 01:25:43,000
控制流的检验对吧

2838
01:25:43,000 --> 01:25:44,000
retroability

2839
01:25:45,000 --> 01:25:48,000
然后第二层境界才是打印一个代码的纸

2840
01:25:49,000 --> 01:25:50,000
打印一个变量的纸

2841
01:25:51,000 --> 01:25:52,000
写 psp 的或者什么

2842
01:25:52,000 --> 01:25:53,000
var dump

2843
01:25:53,000 --> 01:25:56,000
数值除虫法的人

2844
01:25:56,000 --> 01:25:57,000
打印数值除虫法

2845
01:25:58,000 --> 01:25:59,000
对没错

2846
01:25:59,000 --> 01:26:03,000
然后第三层境界可能就是在 printf 的时候

2847
01:26:03,000 --> 01:26:06,000
第三境界就是代 dbug 的 printf

2848
01:26:06,000 --> 01:26:11,000
就是在代码里面定一个红 dbug

2849
01:26:11,000 --> 01:26:12,000
ifdbug

2850
01:26:12,000 --> 01:26:18,000
然后 printf 就此生成为了最终代码的一部分

2851
01:26:19,000 --> 01:26:24,000
你说你这样打印除虫法的抓狂状态是怎么样了吗

2852
01:26:24,000 --> 01:26:25,000
就是 printf 扩号开

2853
01:26:26,000 --> 01:26:27,000
那个引号开

2854
01:26:27,000 --> 01:26:29,000
what the f*** why didn't this run here

2855
01:26:32,000 --> 01:26:32,000
然后问号

2856
01:26:32,000 --> 01:26:34,000
5 个感能

2857
01:26:35,000 --> 01:26:36,000
关引号关扩号

2858
01:26:37,000 --> 01:26:39,000
还忘了个分号打上去

2859
01:26:39,000 --> 01:26:40,000
对

2860
01:26:40,000 --> 01:26:43,000
比如说早期 windows 的 windows nt

2861
01:26:43,000 --> 01:26:44,000
还是 95 的原代码报出来之后

2862
01:26:44,000 --> 01:26:47,000
我发现里面有很多的 printf 的段落

2863
01:26:47,000 --> 01:26:49,000
都是在祖兆编译器

2864
01:26:49,000 --> 01:26:50,000
你说傻逼编译器

2865
01:26:50,000 --> 01:26:51,000
这又弄错了

2866
01:26:51,000 --> 01:26:53,000
希望我手空玩做什么

2867
01:26:54,000 --> 01:26:57,000
但其实打印除虫法的最麻烦的一点

2868
01:26:57,000 --> 01:26:59,000
就是它需要你中心

2869
01:27:00,000 --> 01:27:01,000
就如果是静态语言

2870
01:27:01,000 --> 01:27:03,000
它需要你重新编译一遍

2871
01:27:03,000 --> 01:27:05,000
编译重新重新就是

2872
01:27:05,000 --> 01:27:08,000
就是什么你插入一个打印语句之后

2873
01:27:08,000 --> 01:27:09,000
你得保存

2874
01:27:10,000 --> 01:27:10,000
然后编译

2875
01:27:11,000 --> 01:27:12,000
然后再执行

2876
01:27:12,000 --> 01:27:13,000
就每次都重新跑一遍

2877
01:27:13,000 --> 01:27:15,000
就比较过

2878
01:27:15,000 --> 01:27:15,000
如果你那个

2879
01:27:16,000 --> 01:27:17,000
那你干什么

2880
01:27:17,000 --> 01:27:18,000
工程是相比较大

2881
01:27:18,000 --> 01:27:20,000
然后编译时间比较长的话

2882
01:27:20,000 --> 01:27:21,000
你就哭死吧

2883
01:27:22,000 --> 01:27:22,000
没错

2884
01:27:23,000 --> 01:27:25,000
其实刚才说的三层境界

2885
01:27:25,000 --> 01:27:26,000
都是非常不

2886
01:27:26,000 --> 01:27:27,000
非常不推荐的

2887
01:27:27,000 --> 01:27:28,000
尤其是第三层境界的就是

2888
01:27:29,000 --> 01:27:33,000
你如果你真的需要检测 printf

2889
01:27:33,000 --> 01:27:34,000
或者是检测一个程序的输出

2890
01:27:34,000 --> 01:27:36,000
来验证它是否正确的话

2891
01:27:36,000 --> 01:27:38,000
比较

2892
01:27:40,000 --> 01:27:41,000
methodology 的方法是

2893
01:27:42,000 --> 01:27:45,000
用一个比如说 log 4 j 这样的

2894
01:27:45,000 --> 01:27:47,000
酷来输出比较

2895
01:27:48,000 --> 01:27:49,000
正统的

2896
01:27:51,000 --> 01:27:52,000
记录资料

2897
01:27:52,000 --> 01:27:52,000
然后你可以

2898
01:27:53,000 --> 01:27:55,000
使用一些比较相对来说

2899
01:27:55,000 --> 01:27:56,000
比较高端的功能

2900
01:27:56,000 --> 01:27:58,000
比如说区分这个

2901
01:27:58,000 --> 01:27:59,000
log 的等级

2902
01:27:59,000 --> 01:28:01,000
是 warning 是 info 还是 debug 还是

2903
01:28:03,000 --> 01:28:03,000
arrow

2904
01:28:04,000 --> 01:28:06,000
然后可以记录下时间

2905
01:28:06,000 --> 01:28:08,000
然后可以有选择性的记录

2906
01:28:08,000 --> 01:28:09,000
比如说

2907
01:28:11,000 --> 01:28:13,000
当时的这个站的情况

2908
01:28:13,000 --> 01:28:15,000
或者是堆的情况

2909
01:28:15,000 --> 01:28:17,000
或者是乃至于一个变量的值

2910
01:28:17,000 --> 01:28:21,000
千万不要简单的用 if debug

2911
01:28:21,000 --> 01:28:22,000
然后 printf 这种

2912
01:28:22,000 --> 01:28:23,000
这种比较愚蠢的方式

2913
01:28:29,000 --> 01:28:31,000
所以比较高级的方式是什么

2914
01:28:34,000 --> 01:28:38,000
我们可以一项一项来总结

2915
01:28:38,000 --> 01:28:39,000
最简单的就是

2916
01:28:40,000 --> 01:28:45,000
最具有早期黑客精神的

2917
01:28:45,000 --> 01:28:47,000
除错工具就是

2918
01:28:48,000 --> 01:28:50,000
其实叫 DB

2919
01:28:51,000 --> 01:28:51,000
debugger

2920
01:28:52,000 --> 01:28:53,000
DB 这么一个小工具

2921
01:28:55,000 --> 01:28:57,000
有点类似于 DOT 时代的

2922
01:28:57,000 --> 01:29:00,000
那个 debug.com

2923
01:29:01,000 --> 01:29:03,000
还是 debug.com

2924
01:29:04,000 --> 01:29:05,000
debug.exe

2925
01:29:05,000 --> 01:29:06,000
程序

2926
01:29:07,000 --> 01:29:09,000
早期 DOT 下面有一个

2927
01:29:09,000 --> 01:29:11,000
可以让你直接输入会边来写程序

2928
01:29:11,000 --> 01:29:12,000
乃至于调试其他程序的

2929
01:29:12,000 --> 01:29:14,000
小程序的 debug.com

2930
01:29:15,000 --> 01:29:16,000
我不知道你有没有

2931
01:29:16,000 --> 01:29:17,000
你有没有印象

2932
01:29:17,000 --> 01:29:18,000
有没有用过

2933
01:29:19,000 --> 01:29:20,000
为什么

2934
01:29:20,000 --> 01:29:23,000
DOT 上面真的没有什么变成的精力

2935
01:29:23,000 --> 01:29:24,000
OK

2936
01:29:24,000 --> 01:29:28,000
就比这个 debug.com 的比组

2937
01:29:28,000 --> 01:29:31,000
其实就是早期 unit 上面的一个工具

2938
01:29:31,000 --> 01:29:32,000
工具叫做 DB

2939
01:29:32,000 --> 01:29:34,000
也就是 debugger 的缩息

2940
01:29:34,000 --> 01:29:37,000
后来 GNU 出了一个 GNU DB

2941
01:29:37,000 --> 01:29:40,000
现在最广为使用的 GDB

2942
01:29:41,000 --> 01:29:44,000
GDB 简单来说就是这么一个程序

2943
01:29:44,000 --> 01:29:47,000
你可以让这个程序替你运行你的程序

2944
01:29:47,000 --> 01:29:47,000
然后

2945
01:29:49,000 --> 01:29:50,000
这个程序在运行的时候

2946
01:29:50,000 --> 01:29:52,000
一上来会暂停

2947
01:29:52,000 --> 01:29:55,000
或者说根据你调用它的方式不同

2948
01:29:55,000 --> 01:29:58,000
你可以让它一上来就暂停

2949
01:29:58,000 --> 01:29:59,000
然后告诉它说

2950
01:29:59,000 --> 01:30:01,000
这个程序运行到某一个特定行的时候

2951
01:30:02,000 --> 01:30:03,000
请你停下来

2952
01:30:03,000 --> 01:30:05,000
然后我要看一看这个程序现在的状况是什么

2953
01:30:07,000 --> 01:30:10,000
然后 GDB 也是在运行行下运行

2954
01:30:10,000 --> 01:30:11,000
运行的方法就是

2955
01:30:12,000 --> 01:30:14,000
你用你先写 GDB

2956
01:30:14,000 --> 01:30:15,000
然后后面跟你

2957
01:30:15,000 --> 01:30:17,000
比如说你刚刚编一好的一个 C 程序

2958
01:30:17,000 --> 01:30:19,000
然后 C 程序的圆满和 C 程序的那个

2959
01:30:20,000 --> 01:30:22,000
中间的调试信息也全都在

2960
01:30:22,000 --> 01:30:23,000
存在当前目录之下

2961
01:30:23,000 --> 01:30:25,000
然后你用 GDB 调用你

2962
01:30:27,000 --> 01:30:27,000
写好的程序

2963
01:30:27,000 --> 01:30:29,000
然后告诉 GDB 你要在哪儿断点

2964
01:30:29,000 --> 01:30:31,000
然后在哪儿调试

2965
01:30:31,000 --> 01:30:32,000
所有的指令都是通过键盘输入的

2966
01:30:32,000 --> 01:30:34,000
然后你比如说你停

2967
01:30:34,000 --> 01:30:36,000
你要设定的点

2968
01:30:36,000 --> 01:30:39,000
你要说 Break at Line 31

2969
01:30:39,000 --> 01:30:40,000
比如说

2970
01:30:40,000 --> 01:30:41,000
然后为了减化

2971
01:30:41,000 --> 01:30:43,000
你可以把整个没有意义的

2972
01:30:45,000 --> 01:30:48,000
没有奇异的指令减化为一个字母

2973
01:30:48,000 --> 01:30:49,000
比如说 B 31

2974
01:30:49,000 --> 01:30:51,000
就是说在 31 这地方放一段点

2975
01:30:51,000 --> 01:30:53,000
然后它运行到 31 的时候

2976
01:30:53,000 --> 01:30:55,000
会告诉你说 31 有了什么

2977
01:30:55,000 --> 01:30:56,000
我已经运行到 31 了

2978
01:30:56,000 --> 01:30:57,000
接下来要干什么

2979
01:30:57,000 --> 01:30:58,000
比如说你可以说

2980
01:31:01,000 --> 01:31:03,000
打印出某一个计算器的纸

2981
01:31:04,000 --> 01:31:04,000
纸来

2982
01:31:04,000 --> 01:31:06,000
整个过程有点像玩 mart

2983
01:31:08,000 --> 01:31:09,000
或者应该反过来说

2984
01:31:09,000 --> 01:31:11,000
玩 mart 的过程就有点像

2985
01:31:12,000 --> 01:31:15,000
使用一个命行的这种编辑

2986
01:31:15,000 --> 01:31:18,000
你输一个指令可以看到你周围有什么

2987
01:31:18,000 --> 01:31:19,000
然后你再输一个指令

2988
01:31:19,000 --> 01:31:20,000
可以决定说你要做什么

2989
01:31:22,000 --> 01:31:23,000
所以我觉得用这个方法

2990
01:31:23,000 --> 01:31:26,000
比打印出宗法最大的

2991
01:31:26,000 --> 01:31:27,000
最大的优点就在于

2992
01:31:27,000 --> 01:31:29,000
它不用每次去重新编译

2993
01:31:29,000 --> 01:31:31,000
对于你的程序

2994
01:31:31,000 --> 01:31:32,000
去加一个打印语句

2995
01:31:33,000 --> 01:31:34,000
然后又重新编译跑一段

2996
01:31:34,000 --> 01:31:37,000
进一段出错的环节 section

2997
01:31:37,000 --> 01:31:39,000
然后再来判断

2998
01:31:39,000 --> 01:31:40,000
它这个是可以在

2999
01:31:41,000 --> 01:31:43,000
等于是在程序运行过程中动态的去查看

3000
01:31:43,000 --> 01:31:44,000
它运行的环境

3001
01:31:44,000 --> 01:31:46,000
然后是否符合你的假设

3002
01:31:46,000 --> 01:31:46,000
对吧

3003
01:31:47,000 --> 01:31:48,000
没错

3004
01:31:48,000 --> 01:31:50,000
所以有了这样的工具

3005
01:31:50,000 --> 01:31:51,000
我们就实现了一个

3006
01:31:51,000 --> 01:31:54,000
非常重要的软件开发的原则

3007
01:31:54,000 --> 01:31:55,000
Separation of Consent

3008
01:31:56,000 --> 01:31:57,000
你写下来的代码

3009
01:31:57,000 --> 01:31:59,000
应该只是用于实现

3010
01:31:59,000 --> 01:32:01,000
你真正想要实现的那些东西

3011
01:32:01,000 --> 01:32:04,000
而不是其中有一份的功能

3012
01:32:04,000 --> 01:32:07,000
是用来让你检测这个程序

3013
01:32:07,000 --> 01:32:08,000
是不是在正确运行

3014
01:32:10,000 --> 01:32:13,000
这就是一个调试工具的意义

3015
01:32:13,000 --> 01:32:16,000
然后 GDP 其实直到今天都还有人用

3016
01:32:16,000 --> 01:32:19,000
而且在其他所有的语言里面

3017
01:32:19,000 --> 01:32:21,000
几乎所有的语言

3018
01:32:21,000 --> 01:32:21,000
这样有没有

3019
01:32:22,000 --> 01:32:24,000
在语言里面都有这么一个

3020
01:32:24,000 --> 01:32:26,000
命令行下面调试的东西

3021
01:32:26,000 --> 01:32:28,000
比如说 Python DB

3022
01:32:28,000 --> 01:32:29,000
叫做 PDB

3023
01:32:30,000 --> 01:32:34,000
然后还有 iPython 也有这么一个

3024
01:32:34,000 --> 01:32:37,000
专门运账的人用来做交互式的命令行下的

3025
01:32:38,000 --> 01:32:42,000
DBug 工作的一个库叫做 IPDB

3026
01:32:42,000 --> 01:32:43,000
这些都是相当好的工具

3027
01:32:45,000 --> 01:32:45,000
Rio 你用我吧

3028
01:32:46,000 --> 01:32:49,000
你写 Python 会用 Dbug

3029
01:32:50,000 --> 01:32:51,000
O 2 用那个

3030
01:32:51,000 --> 01:32:52,000
只有 20%的时间里面

3031
01:32:54,000 --> 01:32:55,000
对 O 2 会用 PDB

3032
01:32:56,000 --> 01:32:57,000
你觉得它好用吗

3033
01:32:59,000 --> 01:33:00,000
看情况吧

3034
01:33:00,000 --> 01:33:01,000
它有些情况是用不了的

3035
01:33:01,000 --> 01:33:02,000
我印象中

3036
01:33:03,000 --> 01:33:05,000
它得插入一个

3037
01:33:06,000 --> 01:33:07,000
PDB 它在启动的时候

3038
01:33:07,000 --> 01:33:09,000
它在某一个地方插入一个断点

3039
01:33:09,000 --> 01:33:10,000
引入 PDB

3040
01:33:10,000 --> 01:33:14,000
然后进入 PDB 那个环境的点

3041
01:33:15,000 --> 01:33:17,000
完了之后你就回到正常运行了

3042
01:33:18,000 --> 01:33:20,000
你要如何就不能比较灵活的换到

3043
01:33:20,000 --> 01:33:23,000
其他的断点里面去检测另外一堆的状态

3044
01:33:26,000 --> 01:33:28,000
我觉得其实对我来说

3045
01:33:29,000 --> 01:33:30,000
命令行调试工具

3046
01:33:30,000 --> 01:33:32,000
包括不管是 PDB 也好 GDP 也好

3047
01:33:34,000 --> 01:33:37,000
最大的问题是都太难记了

3048
01:33:37,000 --> 01:33:41,000
因为太难记

3049
01:33:41,000 --> 01:33:43,000
就是所有的指令都太难记住了

3050
01:33:43,000 --> 01:33:46,000
而且每次用的时候都要打开一个

3051
01:33:46,000 --> 01:33:47,000
男女儿在那边插

3052
01:33:47,000 --> 01:33:48,000
说接下来我要干嘛

3053
01:33:48,000 --> 01:33:49,000
显

3054
01:33:49,000 --> 01:33:50,000
那显是因为你用的还不够多

3055
01:33:51,000 --> 01:33:52,000
对 我可能跟你差不多

3056
01:33:52,000 --> 01:33:55,000
就是最多有 20%的时间

3057
01:33:55,000 --> 01:33:56,000
然后在 DB 的时候

3058
01:33:58,000 --> 01:34:00,000
可能大学的时候收得好一点

3059
01:34:00,000 --> 01:34:02,000
大学的时候还能记住一个分指令

3060
01:34:02,000 --> 01:34:03,000
但是到现在真是

3061
01:34:05,000 --> 01:34:07,000
尤其是在用一门

3062
01:34:07,000 --> 01:34:09,000
已经很长时间没有用过女人的时候

3063
01:34:09,000 --> 01:34:12,000
然后要去用一个命令行向的 DB

3064
01:34:12,000 --> 01:34:14,000
真的是要亲命了

3065
01:34:15,000 --> 01:34:17,000
所以这个时候你知道你需要什么吗

3066
01:34:19,000 --> 01:34:20,000
这个时候你需要 cheat sheet

3067
01:34:23,000 --> 01:34:24,000
作弊纸

3068
01:34:25,000 --> 01:34:27,000
你再打一张常用快捷键

3069
01:34:27,000 --> 01:34:28,000
能够贴墙上

3070
01:34:28,000 --> 01:34:30,000
贴那个屏幕周围

3071
01:34:31,000 --> 01:34:32,000
能够一眼看得见

3072
01:34:32,000 --> 01:34:34,000
怎么说该按那个指令了

3073
01:34:35,000 --> 01:34:36,000
我现在其实桌上

3074
01:34:36,000 --> 01:34:37,000
专门有一个文件盒

3075
01:34:37,000 --> 01:34:39,000
是专门拿来放各种 cheat sheet

3076
01:34:40,000 --> 01:34:41,000
对呀

3077
01:34:41,000 --> 01:34:42,000
什么 sql 的 cheat sheet

3078
01:34:43,000 --> 01:34:45,000
regal expression 的 cheat sheet

3079
01:34:45,000 --> 01:34:46,000
vim cheat sheet

3080
01:34:47,000 --> 01:34:48,000
然后还有对

3081
01:34:48,000 --> 01:34:50,000
各种各样 ID 的 cheat sheet

3082
01:34:51,000 --> 01:34:53,000
现在所有这些纸应该已经发黄了吧

3083
01:34:54,000 --> 01:34:56,000
效果又不是非常低级了

3084
01:34:56,000 --> 01:34:57,000
对

3085
01:34:58,000 --> 01:34:59,000
我是有一个

3086
01:35:00,000 --> 01:35:01,000
在桌面的一个快捷方式

3087
01:35:01,000 --> 01:35:03,000
一个文件家叫 cheat sheet

3088
01:35:03,000 --> 01:35:04,000
让一面各种各样的

3089
01:35:04,000 --> 01:35:08,000
常用的一些工具的一些 cheat sheet

3090
01:35:08,000 --> 01:35:09,000
包括什么编辑器的快捷键

3091
01:35:10,000 --> 01:35:12,000
GPA 这个什么 status code

3092
01:35:14,000 --> 01:35:15,000
这个文件家我一直都有

3093
01:35:17,000 --> 01:35:18,000
而且这个文件家被我

3094
01:35:18,000 --> 01:35:18,000
看了

3095
01:35:18,000 --> 01:35:22,000
这个文件家被我命名为 Flight Manual

3096
01:35:24,000 --> 01:35:25,000
飞行手册

3097
01:35:25,000 --> 01:35:25,000
对

3098
01:35:28,000 --> 01:35:29,000
这个不错

3099
01:35:29,000 --> 01:35:29,000
这个不错

3100
01:35:31,000 --> 01:35:31,000
对

3101
01:35:31,000 --> 01:35:33,000
但是怎么说呢

3102
01:35:34,000 --> 01:35:35,000
并没有什么乱

3103
01:35:38,000 --> 01:35:39,000
最终我还是转向了

3104
01:35:39,000 --> 01:35:41,000
至少在 dbug 这件事情上

3105
01:35:41,000 --> 01:35:42,000
我还是转向了

3106
01:35:42,000 --> 01:35:44,000
图形界面的 dbug

3107
01:35:45,000 --> 01:35:46,000
ok

3108
01:35:46,000 --> 01:35:48,000
然后有些什么高级的

3109
01:35:48,000 --> 01:35:48,000
介绍一下

3110
01:35:49,000 --> 01:35:50,000
也不算高级吧

3111
01:35:50,000 --> 01:35:51,000
就是至少

3112
01:35:51,000 --> 01:35:52,000
比如说我们刚才介绍了

3113
01:35:52,000 --> 01:35:53,000
这个 B 组级的 GDP

3114
01:35:53,000 --> 01:35:57,000
其实它有一个图形化界面

3115
01:35:57,000 --> 01:35:58,000
叫做 DDD

3116
01:36:00,000 --> 01:36:00,000
DDD

3117
01:36:00,000 --> 01:36:01,000
对

3118
01:36:01,000 --> 01:36:06,000
是一个 Excelenos 的 GDP 的前端

3119
01:36:07,000 --> 01:36:07,000
然后

3120
01:36:10,000 --> 01:36:11,000
我上次用 DDD

3121
01:36:11,000 --> 01:36:13,000
可能也是在上一读研究生的手

3122
01:36:13,000 --> 01:36:15,000
因为研究生毕业就再也没有写过

3123
01:36:15,000 --> 01:36:16,000
随上去了

3124
01:36:18,000 --> 01:36:19,000
当时觉得 DDD 最大的一个卖点

3125
01:36:19,000 --> 01:36:21,000
就是它可以把一些

3126
01:36:21,000 --> 01:36:22,000
比较常用的数据结构

3127
01:36:23,000 --> 01:36:25,000
用图形化的方式表现出来

3128
01:36:25,000 --> 01:36:27,000
比如说你写了一个单向链表

3129
01:36:28,000 --> 01:36:29,000
它分析了之后

3130
01:36:29,000 --> 01:36:31,000
可以把你的链表

3131
01:36:31,000 --> 01:36:33,000
用一个一个的方框画出来

3132
01:36:34,000 --> 01:36:35,000
然后告诉你说

3133
01:36:35,000 --> 01:36:35,000
哦

3134
01:36:35,000 --> 01:36:36,000
这个链表的指针

3135
01:36:36,000 --> 01:36:37,000
指向那个

3136
01:36:39,000 --> 01:36:40,000
这个链表上的节点的指针

3137
01:36:40,000 --> 01:36:42,000
指向另外一个节点

3138
01:36:42,000 --> 01:36:43,000
然后读了四类

3139
01:36:44,000 --> 01:36:44,000
大人大夫时候

3140
01:36:44,000 --> 01:36:46,000
他还是被拿来用

3141
01:36:48,000 --> 01:36:50,000
做那个 dbug

3142
01:36:51,000 --> 01:36:52,000
至少在 DD 上面

3143
01:36:52,000 --> 01:36:53,000
你可以用数标点

3144
01:36:53,000 --> 01:36:54,000
你说我想在这一行

3145
01:36:54,000 --> 01:36:56,000
设一个锻炼

3146
01:36:56,000 --> 01:36:56,000
点那一行

3147
01:36:56,000 --> 01:36:59,000
然后点下设的设的那就可以了

3148
01:36:59,000 --> 01:37:00,000
终于可以不认去

3149
01:37:00,000 --> 01:37:02,000
计那些单个指令的

3150
01:37:02,000 --> 01:37:04,000
这些 Dbug 的命令

3151
01:37:05,000 --> 01:37:07,000
这是 DDD 最大的一个卖点

3152
01:37:07,000 --> 01:37:07,000
所以其实你看到

3153
01:37:07,000 --> 01:37:09,000
这些情况下就

3154
01:37:10,000 --> 01:37:13,000
用的没有像编辑期那么勤快的功能

3155
01:37:14,000 --> 01:37:16,000
有一个图形的方式去

3156
01:37:16,000 --> 01:37:18,000
让你不用记住快切键还是挺好的

3157
01:37:19,000 --> 01:37:20,000
对

3158
01:37:20,000 --> 01:37:22,000
我觉得其实一个独立的

3159
01:37:22,000 --> 01:37:24,000
有图形技能的 Dbug

3160
01:37:24,000 --> 01:37:26,000
配合一个专一的

3161
01:37:27,000 --> 01:37:29,000
用来写程序的编辑器

3162
01:37:29,000 --> 01:37:31,000
是一个挺好的组合

3163
01:37:32,000 --> 01:37:35,000
就 Unix 的

3164
01:37:35,000 --> 01:37:37,000
Unix 的哲学之一不都是

3165
01:37:38,000 --> 01:37:39,000
做一件事情

3166
01:37:39,000 --> 01:37:41,000
对把这件事情做好了

3167
01:37:41,000 --> 01:37:43,000
那我用一个编辑器

3168
01:37:43,000 --> 01:37:44,000
专门来写程序

3169
01:37:44,000 --> 01:37:45,000
然后用另外一个 Dbug

3170
01:37:45,000 --> 01:37:46,000
专门来 Dbug

3171
01:37:46,000 --> 01:37:47,000
其实也挺好的

3172
01:37:48,000 --> 01:37:51,000
包括很多人会说

3173
01:37:52,000 --> 01:37:54,000
我想要把我的 WIM 打造成一个 ID

3174
01:37:55,000 --> 01:37:57,000
但这其实在

3175
01:37:57,000 --> 01:37:59,000
某种程度上就背离了

3176
01:37:59,000 --> 01:38:00,000
WIM 当初被开发出来的

3177
01:38:00,000 --> 01:38:01,000
一个应应的场景

3178
01:38:02,000 --> 01:38:04,000
你不如就好好地把它当做

3179
01:38:06,000 --> 01:38:07,000
编辑器来用

3180
01:38:07,000 --> 01:38:08,000
然后等你真正需要去调试的时候

3181
01:38:08,000 --> 01:38:10,000
你跳到另外一个程序里面

3182
01:38:10,000 --> 01:38:10,000
你去调试就好了

3183
01:38:11,000 --> 01:38:13,000
因为在 WIM 里面

3184
01:38:13,000 --> 01:38:15,000
你跟命令行的距离

3185
01:38:15,000 --> 01:38:16,000
其实就只有一个 Ctrl 加 Z

3186
01:38:16,000 --> 01:38:17,000
而不是

3187
01:38:19,000 --> 01:38:19,000
对

3188
01:38:21,000 --> 01:38:22,000
说到 WIM

3189
01:38:22,000 --> 01:38:24,000
我最近做了一个比较疯狂的事情

3190
01:38:25,000 --> 01:38:26,000
说来听听

3191
01:38:26,000 --> 01:38:27,000
我已经记好全代了

3192
01:38:27,000 --> 01:38:27,000
说来听听

3193
01:38:29,000 --> 01:38:30,000
我把那个

3194
01:38:30,000 --> 01:38:31,000
就之前不是很多

3195
01:38:31,000 --> 01:38:31,000
就是那个

3196
01:38:33,000 --> 01:38:34,000
代码颜色高亮嘛

3197
01:38:36,000 --> 01:38:38,000
我把它调到最基本的模式了

3198
01:38:38,000 --> 01:38:39,000
就只会标出

3199
01:38:41,000 --> 01:38:42,000
注释

3200
01:38:43,000 --> 01:38:43,000
用了鞋体

3201
01:38:44,000 --> 01:38:45,000
然后那个叫

3202
01:38:46,000 --> 01:38:47,000
自主创

3203
01:38:47,000 --> 01:38:49,000
用的是一个

3204
01:38:50,000 --> 01:38:51,000
另外的颜色

3205
01:38:51,000 --> 01:38:51,000
对

3206
01:38:52,000 --> 01:38:53,000
然后其他的那些

3207
01:38:53,000 --> 01:38:54,000
高亮的颜色都关掉了

3208
01:38:55,000 --> 01:38:56,000
Hotcore

3209
01:38:58,000 --> 01:39:00,000
WIM 里面是不是有一个默认的

3210
01:39:00,000 --> 01:39:01,000
SIM 叫做

3211
01:39:03,000 --> 01:39:03,000
Green

3212
01:39:04,000 --> 01:39:05,000
还是叫什么

3213
01:39:05,000 --> 01:39:06,000
就是它

3214
01:39:06,000 --> 01:39:06,000
对

3215
01:39:06,000 --> 01:39:07,000
它用不同灰度的

3216
01:39:08,000 --> 01:39:09,000
绿色来显示关键字

3217
01:39:11,000 --> 01:39:11,000
对

3218
01:39:11,000 --> 01:39:14,000
我想问一个 WIM 默认的

3219
01:39:14,000 --> 01:39:14,000
主题叫什么

3220
01:39:14,000 --> 01:39:15,000
就叫 Default 吗

3221
01:39:16,000 --> 01:39:16,000
对

3222
01:39:16,000 --> 01:39:17,000
就叫 Default

3223
01:39:18,000 --> 01:39:18,000
啊

3224
01:39:18,000 --> 01:39:18,000
OK

3225
01:39:20,000 --> 01:39:20,000
我记得

3226
01:39:21,000 --> 01:39:22,000
早期学到了

3227
01:39:22,000 --> 01:39:23,000
比较重要的一个

3228
01:39:23,000 --> 01:39:24,000
一个 trick

3229
01:39:24,000 --> 01:39:25,000
就是在

3230
01:39:27,000 --> 01:39:28,000
某些情况下

3231
01:39:28,000 --> 01:39:28,000
你可能

3232
01:39:30,000 --> 01:39:32,000
SSH 到另外一台主机上面的时候

3233
01:39:32,000 --> 01:39:33,000
发现那台主机

3234
01:39:33,000 --> 01:39:34,000
和你的

3235
01:39:34,000 --> 01:39:36,000
中段模型器的配色

3236
01:39:36,000 --> 01:39:37,000
不匹配

3237
01:39:37,000 --> 01:39:38,000
然后你中段模型器里面

3238
01:39:38,000 --> 01:39:40,000
可能紫色特别特别的暗

3239
01:39:40,000 --> 01:39:42,000
或者是蓝色特别特别的暗

3240
01:39:42,000 --> 01:39:43,000
根本看不清楚

3241
01:39:44,000 --> 01:39:44,000
那个

3242
01:39:45,000 --> 01:39:46,000
远端服务器上

3243
01:39:46,000 --> 01:39:47,000
这个代码到底是什么的时候

3244
01:39:49,000 --> 01:39:49,000
就

3245
01:39:50,000 --> 01:39:51,000
在 WIM 里面打

3246
01:39:51,000 --> 01:39:51,000
Set

3247
01:39:52,000 --> 01:39:53,000
Color SIM

3248
01:39:53,000 --> 01:39:54,000
Airflord

3249
01:39:55,000 --> 01:39:55,000
就是

3250
01:39:55,000 --> 01:39:56,000
精灵

3251
01:39:57,000 --> 01:39:57,000
精灵灵主

3252
01:39:58,000 --> 01:39:58,000
这个

3253
01:39:58,000 --> 01:39:59,000
这个词

3254
01:40:00,000 --> 01:40:02,000
然后在 99%的情况下

3255
01:40:02,000 --> 01:40:04,000
开会使得你能够看清楚

3256
01:40:06,000 --> 01:40:08,000
在 Default 的 SIM 之下

3257
01:40:08,000 --> 01:40:09,000
看不清楚的代码

3258
01:40:09,000 --> 01:40:09,000
这是一个 trick

3259
01:40:09,000 --> 01:40:10,000
这是什么原理

3260
01:40:11,000 --> 01:40:12,000
没有什么原理

3261
01:40:12,000 --> 01:40:12,000
就是

3262
01:40:13,000 --> 01:40:13,000
黑色的问题

3263
01:40:14,000 --> 01:40:15,000
Airflord

3264
01:40:15,000 --> 01:40:18,000
这个 SIM 的所有的颜色都比较鲜艳

3265
01:40:19,000 --> 01:40:20,000
可能是有的

3266
01:40:20,000 --> 01:40:20,000
啊

3267
01:40:20,000 --> 01:40:21,000
对

3268
01:40:22,000 --> 01:40:23,000
然后没有那些

3269
01:40:23,000 --> 01:40:25,000
就是 Dark Blue 之类的一种颜色

3270
01:40:25,000 --> 01:40:27,000
会使得你的中段模型器

3271
01:40:27,000 --> 01:40:30,000
如果那个色彩模式没有调对的话

3272
01:40:30,000 --> 01:40:31,000
会

3273
01:40:31,000 --> 01:40:34,000
会把那个远程服务器上的蓝色

3274
01:40:34,000 --> 01:40:35,000
显示得特别暗

3275
01:40:37,000 --> 01:40:39,000
我到现在为止还没找到那个单色的

3276
01:40:39,000 --> 01:40:41,000
不过反正我现在就是

3277
01:40:41,000 --> 01:40:43,000
继续一个叫做 Eink 的

3278
01:40:43,000 --> 01:40:44,000
这个色

3279
01:40:44,000 --> 01:40:45,000
这个 ColorSkim 改的

3280
01:40:45,000 --> 01:40:46,000
就是

3281
01:40:46,000 --> 01:40:46,000
OK

3282
01:40:48,000 --> 01:40:50,000
这个代码注释会是一个灰色的

3283
01:40:50,000 --> 01:40:51,000
就是浅一点的颜色

3284
01:40:51,000 --> 01:40:52,000
浅灰色

3285
01:40:52,000 --> 01:40:54,000
然后是显示鞋体的

3286
01:40:54,000 --> 01:40:57,000
然后那个自不创会是显示鞋体的

3287
01:40:57,000 --> 01:40:57,000
然后其他都是

3288
01:40:57,000 --> 01:40:59,000
都是一个默认的黑色的字

3289
01:40:59,000 --> 01:41:00,000
没有其他颜色

3290
01:41:02,000 --> 01:41:02,000
Hackle

3291
01:41:05,000 --> 01:41:06,000
那它叫 Eink 嘛

3292
01:41:06,000 --> 01:41:07,000
你还是有原因呢

3293
01:41:08,000 --> 01:41:10,000
就有电子模式的效果

3294
01:41:11,000 --> 01:41:13,000
说到这里你用到什么配色

3295
01:41:15,000 --> 01:41:20,000
我配色是一个经过改动的 MonoCy

3296
01:41:22,000 --> 01:41:24,000
MonoCy 是不是很鲜艳那个版的

3297
01:41:26,000 --> 01:41:27,000
还好吧

3298
01:41:27,000 --> 01:41:29,000
我其实不是很清楚

3299
01:41:30,000 --> 01:41:32,000
这个编辑配色的鲜艳的标准是什么的

3300
01:41:32,000 --> 01:41:35,000
我反正现在用的是一个自己改过的 MonoCy

3301
01:41:36,000 --> 01:41:37,000
OK

3302
01:41:37,000 --> 01:41:39,000
然后 MonoCy 是一个暗的

3303
01:41:40,000 --> 01:41:41,000
暗色背景的是吧

3304
01:41:41,000 --> 01:41:42,000
是暗色背景

3305
01:41:42,000 --> 01:41:44,000
我以前一直在用 Solarize

3306
01:41:44,000 --> 01:41:48,000
就是那个号称配上牛的

3307
01:41:48,000 --> 01:41:49,000
科学配色的 Solarize

3308
01:41:49,000 --> 01:41:52,000
但是怎么说呢

3309
01:41:52,000 --> 01:41:53,000
就用过一段时间之后

3310
01:41:53,000 --> 01:41:58,000
我发现在强在那个侧面

3311
01:41:58,000 --> 01:42:00,000
是我来光线比较强的情况下

3312
01:42:00,000 --> 01:42:01,000
会很容易看不清楚

3313
01:42:03,000 --> 01:42:06,000
对 它的那个 contrast 就是对比度是不高的

3314
01:42:06,000 --> 01:42:08,000
对比度比较低的

3315
01:42:08,000 --> 01:42:10,000
我觉得太注重美感了

3316
01:42:10,000 --> 01:42:12,000
有点漂亮是漂亮

3317
01:42:12,000 --> 01:42:16,000
但是用多的是感觉不是很好

3318
01:42:16,000 --> 01:42:17,000
然后 Solarize 还有一个问题

3319
01:42:17,000 --> 01:42:20,000
就是它在 256 色的情况下

3320
01:42:22,000 --> 01:42:23,000
表现不是非常好

3321
01:42:24,000 --> 01:42:25,000
我试过很多很多方法

3322
01:42:25,000 --> 01:42:32,000
试出让 Wim 在 terminal 模式之下使用比较正确的

3323
01:42:32,000 --> 01:42:35,000
或者比较扬眼的 Solarize 的配色

3324
01:42:35,000 --> 01:42:38,000
然后我发现要改很多很多东西

3325
01:42:38,000 --> 01:42:44,000
首先你的 terminal 的那个 term 这个字符要改

3326
01:42:44,000 --> 01:42:45,000
这个长

3327
01:42:45,000 --> 01:42:46,000
黄金面镭要改

3328
01:42:46,000 --> 01:42:52,000
然后 Wim 里面的 Color Sim 要改

3329
01:42:52,000 --> 01:42:54,000
然后有可能你还要在 bass 一上来的时候

3330
01:42:54,000 --> 01:42:57,000
运行一个脚本来设定某些

3331
01:42:57,000 --> 01:43:01,000
我不是非常清楚它到底干了什么那些

3332
01:43:01,000 --> 01:43:05,000
一些 tricks 才可以把颜色设定得比较正确

3333
01:43:05,000 --> 01:43:06,000
这已经痛苦了

3334
01:43:06,000 --> 01:43:08,000
Montonka 有没有这个问题

3335
01:43:10,000 --> 01:43:12,000
Solarize 它主要问题是

3336
01:43:12,000 --> 01:43:16,000
它默认的 terminalConsol 的色谈

3337
01:43:16,000 --> 01:43:18,000
会跟其他的非常不一样

3338
01:43:18,000 --> 01:43:20,000
对 它会逼着你去改那个色谈

3339
01:43:20,000 --> 01:43:25,000
你会把前 16 色改成完全另外一种场景

3340
01:43:25,000 --> 01:43:26,000
然后改了之后会有问题

3341
01:43:26,000 --> 01:43:30,000
就是兼容别的那种非 Solarize 的色谈的话

3342
01:43:30,000 --> 01:43:31,000
就会有点问题

3343
01:43:31,000 --> 01:43:34,000
经常我们那个字就看不见

3344
01:43:35,000 --> 01:43:35,000
没错

3345
01:43:35,000 --> 01:43:36,000
就比如说你装

3346
01:43:36,000 --> 01:43:39,000
如果你用 Solarize 的官方解决方案

3347
01:43:39,000 --> 01:43:44,000
把你的 item 2 的调色盘改了

3348
01:43:44,000 --> 01:43:47,000
此时你在用比如说 brew

3349
01:43:47,000 --> 01:43:49,000
brew 有时候会用不同颜色来告诉你说

3350
01:43:49,000 --> 01:43:53,000
这个 package 下来完了还是出错了之类的

3351
01:43:53,000 --> 01:43:55,000
此时你会发现所有这些颜色都变了

3352
01:43:55,000 --> 01:43:57,000
就可能本来是一个绿色的对比

3353
01:43:57,000 --> 01:43:58,000
现在变成了白色的

3354
01:43:59,000 --> 01:44:01,000
对 非常不舒服

3355
01:44:01,000 --> 01:44:05,000
所以其实说到这里

3356
01:44:05,000 --> 01:44:07,000
刚才刚才问那个

3357
01:44:07,000 --> 01:44:08,000
你用暗色背景的话

3358
01:44:08,000 --> 01:44:11,000
你在那个文档和这边之间切换的时候

3359
01:44:11,000 --> 01:44:14,000
眼睛不会觉得突然一明一暗吗

3360
01:44:14,000 --> 01:44:16,000
之后在夜里会有这个问题

3361
01:44:16,000 --> 01:44:19,000
就是在深夜里面写在马上会有这个问题

3362
01:44:19,000 --> 01:44:20,000
不对啊

3363
01:44:20,000 --> 01:44:22,000
白天其实这个问题更严重

3364
01:44:22,000 --> 01:44:26,000
因为就是你看白天做的环境都是亮的嘛

3365
01:44:27,000 --> 01:44:28,000
我觉得夜里比较

3366
01:44:29,000 --> 01:44:32,000
夜里这种切换的场景的时候

3367
01:44:32,000 --> 01:44:33,000
你眼睛会疼

3368
01:44:33,000 --> 01:44:34,000
但是白天就还好

3369
01:44:34,000 --> 01:44:35,000
如果你的背景足够亮的话

3370
01:44:35,000 --> 01:44:38,000
白天这个问题就没有那么突出吧

3371
01:44:38,000 --> 01:44:39,000
我觉得

3372
01:44:39,000 --> 01:44:41,000
对 但是你如果背景比较亮的话

3373
01:44:41,000 --> 01:44:42,000
你那个叫什么

3374
01:44:43,000 --> 01:44:46,000
你看那个黑色代码区就很成问题了

3375
01:44:46,000 --> 01:44:48,000
因为你这个时候是要放大你的瞳孔

3376
01:44:48,000 --> 01:44:51,000
去 focus 到那个

3377
01:44:51,000 --> 01:44:53,000
因为暗色底的话

3378
01:44:53,000 --> 01:44:55,000
它字是白的嘛

3379
01:44:55,000 --> 01:44:56,000
这是亮色的

3380
01:44:57,000 --> 01:44:59,000
它的光线是比较少的

3381
01:44:59,000 --> 01:45:00,000
这个时候你要放大瞳孔

3382
01:45:00,000 --> 01:45:03,000
才能够接受到足够的光去辨识它

3383
01:45:03,000 --> 01:45:04,000
但与此同时

3384
01:45:04,000 --> 01:45:07,000
你的这个环境的光照是很高的

3385
01:45:07,000 --> 01:45:09,000
这个是有很多这种周围的环境

3386
01:45:09,000 --> 01:45:11,000
与你受到你的瞳孔里面去

3387
01:45:11,000 --> 01:45:12,000
其实对这个是挺

3388
01:45:12,000 --> 01:45:14,000
眼睛是挺伤的

3389
01:45:14,000 --> 01:45:16,000
对会隐发眼部疲劳

3390
01:45:16,000 --> 01:45:17,000
我同意你的观点

3391
01:45:17,000 --> 01:45:18,000
不过

3392
01:45:18,000 --> 01:45:20,000
我可能另外一个原因就是

3393
01:45:20,000 --> 01:45:22,000
我对这个事情不是特别敏感的

3394
01:45:22,000 --> 01:45:24,000
就是我有两个小时期

3395
01:45:24,000 --> 01:45:27,000
然后那个文档放在一层线上

3396
01:45:27,000 --> 01:45:28,000
编细在另外一层线上

3397
01:45:28,000 --> 01:45:29,000
编细永远黑的

3398
01:45:31,000 --> 01:45:33,000
OK 就还好嘛

3399
01:45:35,000 --> 01:45:37,000
所以其实这点 Solarize 是一个好处

3400
01:45:37,000 --> 01:45:40,000
就是它是有暗色和亮色两个版本的

3401
01:45:40,000 --> 01:45:42,000
对 我说我会切换

3402
01:45:43,000 --> 01:45:44,000
你会切换就知道

3403
01:45:44,000 --> 01:45:45,000
我的方言点就是

3404
01:45:45,000 --> 01:45:47,000
我当时想到就是说

3405
01:45:47,000 --> 01:45:48,000
如果环境很暗

3406
01:45:48,000 --> 01:45:49,000
我就用那个暗色版本的

3407
01:45:49,000 --> 01:45:50,000
环境很亮

3408
01:45:50,000 --> 01:45:51,000
我就用亮色版本

3409
01:45:51,000 --> 01:45:53,000
后来发现基本上都是很亮的环境

3410
01:45:53,000 --> 01:45:55,000
所以就一直是用亮色版

3411
01:45:55,000 --> 01:45:56,000
就 light 那个版本

3412
01:45:57,000 --> 01:46:00,000
我也在 Vim 里面绑另外一个快捷键

3413
01:46:00,000 --> 01:46:01,000
就是按一下

3414
01:46:01,000 --> 01:46:03,000
按个 F 9 吧我其他人是

3415
01:46:03,000 --> 01:46:07,000
对可以在亮色模式和暗色模式之间切换

3416
01:46:08,000 --> 01:46:11,000
但后来还是觉得淡档就算了

3417
01:46:13,000 --> 01:46:14,000
OK

3418
01:46:15,000 --> 01:46:17,000
所以刚才就是那个吐槽

3419
01:46:17,000 --> 01:46:18,000
那个颜色的问题

3420
01:46:20,000 --> 01:46:22,000
你不觉得现在那种 terminal

3421
01:46:22,000 --> 01:46:24,000
或者像看火这种东西

3422
01:46:24,000 --> 01:46:27,000
它处理这个色彩那些

3423
01:46:27,000 --> 01:46:30,000
这种方式都非常 ancient

3424
01:46:30,000 --> 01:46:31,000
非常原始

3425
01:46:31,000 --> 01:46:33,000
都是历史一头问题吧

3426
01:46:33,000 --> 01:46:37,000
我觉得就我们今天还在使用 terminal simulation

3427
01:46:37,000 --> 01:46:40,000
这件事情其实仔细想想就很不可思议了

3428
01:46:42,000 --> 01:46:45,000
每个人都对每个人都知道

3429
01:46:45,000 --> 01:46:46,000
common line 非常非常重要

3430
01:46:46,000 --> 01:46:49,000
或是至少在目前 common line 的

3431
01:46:50,000 --> 01:46:51,000
还是没有被人扔到历史的

3432
01:46:52,000 --> 01:46:56,000
但从来没有一个人能够成功的重新发明一面轮子

3433
01:46:56,000 --> 01:46:58,000
然后把 CLI 做的好一点

3434
01:47:00,000 --> 01:47:03,000
对那个命令行本身我觉得是问题不大

3435
01:47:03,000 --> 01:47:06,000
但是就是我们现在那个实现方式真是太古老了

3436
01:47:06,000 --> 01:47:08,000
比如说刚才你说要实现那个文字

3437
01:47:08,000 --> 01:47:11,000
要通过那个输出制服来各种转移

3438
01:47:11,000 --> 01:47:13,000
然后甚至连最底层的你在那个

3439
01:47:15,000 --> 01:47:18,000
在 link 上面去做一个 console 接口

3440
01:47:18,000 --> 01:47:20,000
叫什么虚拟的 TTY 设备

3441
01:47:20,000 --> 01:47:23,000
哇这是对我其实我指的就是这件事情

3442
01:47:23,000 --> 01:47:26,000
就是我们居然还在使用这么古老的

3443
01:47:26,000 --> 01:47:30,000
可以追溯到 1970 年代的 terminal simulation

3444
01:47:33,000 --> 01:47:37,000
可能这个地方还是可以给对历史不是特别

3445
01:47:37,000 --> 01:47:39,000
但我也不是不属于的

3446
01:47:39,000 --> 01:47:40,000
听我们介绍的

3447
01:47:40,000 --> 01:47:44,000
就是我们现在使用的那个黑黑的

3448
01:47:44,000 --> 01:47:46,000
我可以教文字进去的

3449
01:47:47,000 --> 01:47:50,000
学编程莫名其妙一定都要用到 terminal

3450
01:47:51,000 --> 01:47:55,000
其实是在模拟 70 年代的电传打字机

3451
01:47:55,000 --> 01:47:57,000
如果你一定要追溯到就是源头

3452
01:47:58,000 --> 01:48:01,000
就是说在显示器这个东西出现之前

3453
01:48:02,000 --> 01:48:05,000
计算机是通过打印机

3454
01:48:05,000 --> 01:48:07,000
就直接连在一个打印机上往纸上输出东西

3455
01:48:08,000 --> 01:48:13,000
然后这个东西对这个东西的最基本的运作机里

3456
01:48:13,000 --> 01:48:16,000
比如说 asky 碼之类的这种东西

3457
01:48:16,000 --> 01:48:19,000
一直都原封不动被继承到了今天

3458
01:48:20,000 --> 01:48:22,000
然后我们当显示器出现了之后

3459
01:48:22,000 --> 01:48:24,000
一开始也是只能像电传打字机一样

3460
01:48:24,000 --> 01:48:27,000
一次编辑一行的内容

3461
01:48:27,000 --> 01:48:29,000
然后这一行的内容编辑完了

3462
01:48:29,000 --> 01:48:29,000
你按一下回车

3463
01:48:31,000 --> 01:48:35,000
才会把这一行的内容输出在显示器上

3464
01:48:35,000 --> 01:48:38,000
直到就是我们现在习惯的那种 wim

3465
01:48:38,000 --> 01:48:39,000
你打开 wim 之后

3466
01:48:39,000 --> 01:48:40,000
光标从

3467
01:48:42,000 --> 01:48:42,000
v 2

3468
01:48:42,000 --> 01:48:43,000
光标还是在左上

3469
01:48:43,000 --> 01:48:44,000
对

3470
01:48:45,000 --> 01:48:47,000
光标从你当前好像跳到左上

3471
01:48:47,000 --> 01:48:49,000
并且你可以跳到任意行

3472
01:48:49,000 --> 01:48:50,000
这样你多按几次回车

3473
01:48:50,000 --> 01:48:51,000
你就可以跳到任意行

3474
01:48:51,000 --> 01:48:53,000
然后再跳回来这种特性

3475
01:48:53,000 --> 01:48:55,000
都已经是非常高端的特性了

3476
01:48:55,000 --> 01:48:59,000
在单色显示器的时代

3477
01:48:59,000 --> 01:49:02,000
你可以想象说早期单色显示器的时代

3478
01:49:03,000 --> 01:49:05,000
那些电脑键盘上是没有方向键的

3479
01:49:06,000 --> 01:49:07,000
为什么呢

3480
01:49:07,000 --> 01:49:09,000
因为你按下方向键没有什么软流

3481
01:49:09,000 --> 01:49:12,000
你根本不可能把光标跳到上面也好

3482
01:49:12,000 --> 01:49:13,000
或者下面也好

3483
01:49:13,000 --> 01:49:16,000
因为你的电脑就只理解当前行的内容

3484
01:49:17,000 --> 01:49:21,000
而我们现在使用了这样一个小的 terminal

3485
01:49:21,000 --> 01:49:22,000
simulator

3486
01:49:22,000 --> 01:49:22,000
这么一个 f

3487
01:49:22,000 --> 01:49:25,000
其实是在原分不动的模拟这些 70 年的技术

3488
01:49:26,000 --> 01:49:29,000
而我们对此也都是司空见惯的

3489
01:49:29,000 --> 01:49:31,000
从来没有人想过要把它当好

3490
01:49:32,000 --> 01:49:37,000
我必须承认说 plan 9 其实是已经解决了这个问题的

3491
01:49:37,000 --> 01:49:39,000
但是就像我们知道的 plan 9

3492
01:49:39,000 --> 01:49:40,000
因为它太好了

3493
01:49:40,000 --> 01:49:41,000
所以它不可能流行出来

3494
01:49:42,000 --> 01:49:43,000
我们就

3495
01:49:43,000 --> 01:49:45,000
这是一个悲伤的更新

3496
01:49:45,000 --> 01:49:45,000
对

3497
01:49:45,000 --> 01:49:48,000
dome to live in this ancient world

3498
01:49:48,000 --> 01:49:48,000
对

3499
01:49:52,000 --> 01:49:53,000
涂了好多草

3500
01:49:53,000 --> 01:49:55,000
这个让你要一样

3501
01:49:55,000 --> 01:49:55,000
对

3502
01:49:55,000 --> 01:49:57,000
还是得把圈子都回来

3503
01:49:57,000 --> 01:50:00,000
我们接着讲那个第八个月的事情

3504
01:50:00,000 --> 01:50:03,000
这个我们之后有时间再来探讨这个问题

3505
01:50:03,000 --> 01:50:06,000
其实还有挺有意思的事情可以去讨论

3506
01:50:07,000 --> 01:50:10,000
可能从那一方侧面讲说

3507
01:50:10,000 --> 01:50:14,000
为什么 terminal simulator 这么多年以来一直没有进展

3508
01:50:14,000 --> 01:50:19,000
一个原因也就是 windows 或者说图形化界面实在是

3509
01:50:19,000 --> 01:50:21,000
发展得太快了

3510
01:50:21,000 --> 01:50:23,000
人们没有时间的会停下来

3511
01:50:23,000 --> 01:50:28,000
回过头去好好地把这个 Millin 行界面的

3512
01:50:28,000 --> 01:50:31,000
承载的容器改变一下

3513
01:50:31,000 --> 01:50:35,000
因为如果你要去问这个世界上到底是使用 IDE 的

3514
01:50:35,000 --> 01:50:37,000
写成许多人多

3515
01:50:37,000 --> 01:50:38,000
还是使用 Millin 行写成许多人多

3516
01:50:38,000 --> 01:50:45,000
我觉得一个比较合理的推断是肯定是用 IDE 的

3517
01:50:45,000 --> 01:50:45,000
写成许多人多

3518
01:50:45,000 --> 01:50:47,000
就是使用

3519
01:50:47,000 --> 01:50:48,000
也是压倒性多数

3520
01:50:48,000 --> 01:50:49,000
对

3521
01:50:49,000 --> 01:50:53,000
压倒性 99%以上的人是在用 IDE 写上去的

3522
01:50:53,000 --> 01:50:54,000
想反驳这件事情的人

3523
01:50:54,000 --> 01:50:58,000
首先要想到有很多人他不是专业的成学

3524
01:50:58,000 --> 01:51:02,000
但他仍旧必须通过某种工具来编程去

3525
01:51:02,000 --> 01:51:04,000
你让他们去使用 Millin 行是非常不忍道的

3526
01:51:04,000 --> 01:51:07,000
比如说刚才节目一开始提到

3527
01:51:07,000 --> 01:51:11,000
研究脑科学的赵辰博士

3528
01:51:11,000 --> 01:51:15,000
你为什么要逼他去用 Millin 行写成许多

3529
01:51:15,000 --> 01:51:20,000
或者是一些乃至广义上的写

3530
01:51:20,000 --> 01:51:24,000
这个 office 里面的 vibescript 的人

3531
01:51:24,000 --> 01:51:27,000
都可以在一种使用比较

3532
01:51:27,000 --> 01:51:33,000
他所使用的工具都可以当作一种广义上的 IDE 来看待

3533
01:51:33,000 --> 01:51:33,000
对

3534
01:51:34,000 --> 01:51:34,000
对

3535
01:51:36,000 --> 01:51:38,000
那什么是 IDE 呢

3536
01:51:38,000 --> 01:51:39,000
有一个解法就是

3537
01:51:39,000 --> 01:51:41,000
integrated debugging environment

3538
01:51:41,000 --> 01:51:43,000
也就是 IDE 这个工具

3539
01:51:44,000 --> 01:51:47,000
最重要的功能之一就是帮助你 debug

3540
01:51:48,000 --> 01:51:49,000
才能出货环境

3541
01:51:50,000 --> 01:51:51,000
对

3542
01:51:51,000 --> 01:51:57,000
他把你的 editor 和项目管理工具和版本控制工具

3543
01:51:57,000 --> 01:52:00,000
以及最重要的 debugger

3544
01:52:00,000 --> 01:52:02,000
以及 debugger 的工具集成在一起

3545
01:52:03,000 --> 01:52:07,000
才预狱出了这么一个非常好用的 IDE 环境

3546
01:52:10,000 --> 01:52:11,000
所以 real 你是

3547
01:52:12,000 --> 01:52:17,000
即便现在也是会在公司里面不用 IDE 的吗

3548
01:52:19,000 --> 01:52:19,000
有问题有点绕

3549
01:52:19,000 --> 01:52:21,000
就是你现在就

3550
01:52:21,000 --> 01:52:23,000
哪怕是在工作的时候也不用 IDE 吗

3551
01:52:24,000 --> 01:52:26,000
我自己是不用 IDE 的

3552
01:52:26,000 --> 01:52:29,000
但我看有些其他的人他们会用一些东西

3553
01:52:30,000 --> 01:52:31,000
去写

3554
01:52:31,000 --> 01:52:34,000
当然你知道现在因为现在没有写 app 是显学

3555
01:52:34,000 --> 01:52:35,000
对吧

3556
01:52:35,000 --> 01:52:37,000
就是各种应用显学

3557
01:52:37,000 --> 01:52:39,000
这个时候你就不得不用这个什么比如说 xcode

3558
01:52:39,000 --> 01:52:40,000
对吧

3559
01:52:40,000 --> 01:52:41,000
你逃不掉的

3560
01:52:41,000 --> 01:52:41,000
对

3561
01:52:41,000 --> 01:52:45,000
然后 scode 当然是一个比较极端的例子

3562
01:52:46,000 --> 01:52:47,000
他逼迫你用这个

3563
01:52:48,000 --> 01:52:48,000
对

3564
01:52:48,000 --> 01:52:50,000
那其他你也没得太多选

3565
01:52:50,000 --> 01:52:52,000
比如说你写架把的应用

3566
01:52:53,000 --> 01:52:55,000
你跑不掉 eclipse 或者 jetbrain 之类的对吧

3567
01:52:56,000 --> 01:52:56,000
不

3568
01:52:56,000 --> 01:52:58,000
我觉得加拿大的可选的 ID 还是蛮多的

3569
01:52:59,000 --> 01:53:01,000
但是可选的 ID 是很多

3570
01:53:01,000 --> 01:53:03,000
但是他们都是用 IDE 写的

3571
01:53:03,000 --> 01:53:07,000
很少见用 vim 写加把的人

3572
01:53:07,000 --> 01:53:08,000
啊

3573
01:53:08,000 --> 01:53:08,000
ok

3574
01:53:08,000 --> 01:53:10,000
用 vim 写 scode 的人

3575
01:53:10,000 --> 01:53:10,000
加碼

3576
01:53:10,000 --> 01:53:12,000
因为是是比较

3577
01:53:13,000 --> 01:53:13,000
对

3578
01:53:14,000 --> 01:53:17,000
然后还有就是 vissure studio 这个系列的

3579
01:53:17,000 --> 01:53:21,000
基本上也是比较少用纯编辑器写的

3580
01:53:23,000 --> 01:53:23,000
对

3581
01:53:23,000 --> 01:53:25,000
我在职工上看到过一个说法

3582
01:53:25,000 --> 01:53:26,000
就是说

3583
01:53:27,000 --> 01:53:30,000
csharp 和 jr 之类都是叫什么

3584
01:53:31,000 --> 01:53:33,000
面向 IDE 的变成语言

3585
01:53:33,000 --> 01:53:37,000
就是他们从设计之初就是考虑到这个语言

3586
01:53:37,000 --> 01:53:38,000
一定要在 IDE 里面被写

3587
01:53:39,000 --> 01:53:40,000
才比较

3588
01:53:40,000 --> 01:53:40,000
没错

3589
01:53:40,000 --> 01:53:41,000
才比较正常

3590
01:53:41,000 --> 01:53:43,000
所以他们才不会去考虑什么

3591
01:53:46,000 --> 01:53:48,000
那个方法名称太长啊

3592
01:53:48,000 --> 01:53:49,000
或者是关键字太长啊之类的问题

3593
01:53:50,000 --> 01:53:51,000
对反正有自动不齐吗

3594
01:53:52,000 --> 01:53:53,000
没错

3595
01:53:53,000 --> 01:53:55,000
比如说 integer 一定要写 integer

3596
01:53:55,000 --> 01:53:55,000
不像

3597
01:53:56,000 --> 01:53:58,000
不像 C 里面写 int

3598
01:53:58,000 --> 01:53:59,000
或者是

3599
01:54:00,000 --> 01:54:03,000
比如说一开始说到 printf

3600
01:54:03,000 --> 01:54:05,000
刚学变成的时候

3601
01:54:05,000 --> 01:54:06,000
你想过 f 代表什么

3602
01:54:09,000 --> 01:54:11,000
就是你刚才说的时候

3603
01:54:11,000 --> 01:54:14,000
你说这个函数是系统的一个函数

3604
01:54:14,000 --> 01:54:16,000
它可以输出一个字幕创

3605
01:54:16,000 --> 01:54:18,000
当时其实我想就让你说不对

3606
01:54:18,000 --> 01:54:19,000
输出字幕创是 puts

3607
01:54:20,000 --> 01:54:21,000
那个 s 才代表 stream

3608
01:54:22,000 --> 01:54:26,000
而 printf 代表的其实是 format

3609
01:54:26,000 --> 01:54:31,000
就是 printf 函数最大的功能是让你输出一些内容

3610
01:54:31,000 --> 01:54:32,000
然后这个内容是

3611
01:54:33,000 --> 01:54:35,000
有一个特定的 format

3612
01:54:35,000 --> 01:54:37,000
所以它叫 printf

3613
01:54:37,000 --> 01:54:42,000
但是如果是一个面向 IDE 的变畅点的话

3614
01:54:42,000 --> 01:54:44,000
它此处一定会不吝

3615
01:54:45,000 --> 01:54:45,000
嗯

3616
01:54:46,000 --> 01:54:54,000
似乎数的把这个方法命名为 output string with format

3617
01:54:54,000 --> 01:54:55,000
对

3618
01:54:55,000 --> 01:54:55,000
对

3619
01:54:55,000 --> 01:54:56,000
哈哈哈

3620
01:54:58,000 --> 01:55:01,000
与此类似的比如说还有什么 sprintf

3621
01:55:01,000 --> 01:55:03,000
第一个 s 代表是代表 stream

3622
01:55:03,000 --> 01:55:08,000
就是把 format 的内容输出到另外一个字幕创

3623
01:55:08,000 --> 01:55:09,000
其实

3624
01:55:09,000 --> 01:55:13,000
这些早期的黑客们为了节省时间

3625
01:55:13,000 --> 01:55:18,000
以及没有 IDE 的状况

3626
01:55:18,000 --> 01:55:23,000
导致他们开发了这么一套非常简略的原因

3627
01:55:23,000 --> 01:55:27,000
也对早期学编程的人造成了一定的障碍

3628
01:55:27,000 --> 01:55:33,000
就是有些人可能不是不习惯那种

3629
01:55:33,000 --> 01:55:34,000
一上来说我给你个例子

3630
01:55:34,000 --> 01:55:36,000
你先别管 321

3631
01:55:36,000 --> 01:55:37,000
你把它敲出来

3632
01:55:37,000 --> 01:55:41,000
然后做别的一步一步学下去再说

3633
01:55:41,000 --> 01:55:42,000
但可能一上来就会说

3634
01:55:42,000 --> 01:55:44,000
就会想要明白说这个 main 到底是干什么

3635
01:55:44,000 --> 01:55:46,000
这个 int 到底是干什么

3636
01:55:46,000 --> 01:55:49,000
然后 printf 到底代表什么

3637
01:55:49,000 --> 01:55:52,000
然后如果它在一上来学的时候

3638
01:55:52,000 --> 01:55:56,000
这些在它看来非常基本的细节都找不到答案的话

3639
01:55:56,000 --> 01:55:58,000
它很快就没有兴趣了

3640
01:55:58,000 --> 01:55:59,000
我觉得我早期就是这样

3641
01:56:01,000 --> 01:56:04,000
有点看起来有点 cryptic 那个代码

3642
01:56:04,000 --> 01:56:05,000
对

3643
01:56:06,000 --> 01:56:07,000
密密文

3644
01:56:07,000 --> 01:56:08,000
刚刚有点漏书了

3645
01:56:08,000 --> 01:56:10,000
就是那些命名这么短除了

3646
01:56:10,000 --> 01:56:13,000
也没有 IDE 的自动补习的功能以外

3647
01:56:13,000 --> 01:56:14,000
还有一个更重要的点

3648
01:56:14,000 --> 01:56:17,000
刚刚我们讲的扯了那堆人的 terminal 有关系

3649
01:56:17,000 --> 01:56:19,000
就是早期的 console 宽度比较有限

3650
01:56:20,000 --> 01:56:22,000
只有我们 80 字

3651
01:56:22,000 --> 01:56:24,000
是 60 个字符这样

3652
01:56:24,000 --> 01:56:27,000
它如果那个方法名特别长的话

3653
01:56:27,000 --> 01:56:29,000
它那一行就悲剧了

3654
01:56:29,000 --> 01:56:31,000
继续好像可能就写一个函数还写不完

3655
01:56:31,000 --> 01:56:32,000
对

3656
01:56:32,000 --> 01:56:34,000
所以有这么一个考虑在里面

3657
01:56:34,000 --> 01:56:38,000
后来有的 IDE 都是在固意的团就是图形界面情况下

3658
01:56:38,000 --> 01:56:40,000
那个宽度就可以比较有限

3659
01:56:40,000 --> 01:56:42,000
就有负余了

3660
01:56:42,000 --> 01:56:46,000
而且像现在那个什么用的开发用的屏幕

3661
01:56:46,000 --> 01:56:49,000
动辄什么 1920 款甚至更多的吧

3662
01:56:49,000 --> 01:56:50,000
所以这个完全不是问题

3663
01:56:51,000 --> 01:56:52,000
没错

3664
01:56:53,000 --> 01:56:55,000
另外一个原因就是早期的电传

3665
01:56:55,000 --> 01:56:57,000
那个不是电传的

3666
01:56:57,000 --> 01:56:59,000
早期的中端是一个

3667
01:57:00,000 --> 01:57:03,000
等于是只有一个键盘和一个显示器

3668
01:57:03,000 --> 01:57:04,000
然后你按一个键

3669
01:57:05,000 --> 01:57:07,000
这个键要这个键按下去的电讯号

3670
01:57:07,000 --> 01:57:09,000
先传到服务器上

3671
01:57:09,000 --> 01:57:10,000
然后再传回来

3672
01:57:10,000 --> 01:57:11,000
才会在你的中端显示器上

3673
01:57:12,000 --> 01:57:14,000
显示一个字符出来

3674
01:57:14,000 --> 01:57:15,000
这个过程是比较慢的

3675
01:57:15,000 --> 01:57:19,000
如果你把一个函数设计得太长的话

3676
01:57:19,000 --> 01:57:22,000
你可能敲了一半发现自己敲错了一个字符

3677
01:57:22,000 --> 01:57:23,000
然后要按

3678
01:57:23,000 --> 01:57:26,000
数着自己按回车的那个次数

3679
01:57:26,000 --> 01:57:28,000
然后算自己按到那个

3680
01:57:29,000 --> 01:57:31,000
自己应该删到的一个字符停下来

3681
01:57:31,000 --> 01:57:32,000
这个过程是非常缓慢

3682
01:57:33,000 --> 01:57:35,000
所以其实在现代

3683
01:57:35,000 --> 01:57:36,000
我也能也能体会到

3684
01:57:36,000 --> 01:57:37,000
就这个过程

3685
01:57:37,000 --> 01:57:39,000
哦对有时候你在使用中端显

3686
01:57:41,000 --> 01:57:42,000
你就那个 ssh 的时候

3687
01:57:43,000 --> 01:57:45,000
你就连一个比如说你现在在德国

3688
01:57:45,000 --> 01:57:47,000
你连一个假设

3689
01:57:48,000 --> 01:57:49,000
新西兰的服务器

3690
01:57:49,000 --> 01:57:52,000
我有一段时间服务器在日本

3691
01:57:52,000 --> 01:57:54,000
就这个状况非常

3692
01:57:56,000 --> 01:57:59,000
就你会发现打一个字等一秒才出现

3693
01:57:59,000 --> 01:58:01,000
对再打一个字又等一秒才出现

3694
01:58:01,000 --> 01:58:04,000
也是因为这个 ssh 这种工具

3695
01:58:05,000 --> 01:58:09,000
还是就刚讲是来自历史这种这种交后方式

3696
01:58:09,000 --> 01:58:11,000
就是你想就按我们正常一个想法

3697
01:58:11,000 --> 01:58:13,000
你在本地打个字

3698
01:58:13,000 --> 01:58:14,000
为什么会要等到服务器传过来

3699
01:58:14,000 --> 01:58:16,000
确定才会把它显示出来呢

3700
01:58:16,000 --> 01:58:16,000
对不对

3701
01:58:17,000 --> 01:58:18,000
就是很奇怪

3702
01:58:18,000 --> 01:58:21,000
这就是来自那些 legacy 的东西

3703
01:58:21,000 --> 01:58:25,000
对早期的一些智能中端也就有了这么一个

3704
01:58:26,000 --> 01:58:29,000
所谓的 local echo 的这么一个功能

3705
01:58:29,000 --> 01:58:30,000
就是你按了一个键

3706
01:58:30,000 --> 01:58:33,000
它现在本地帮你把它显示在显示器上

3707
01:58:34,000 --> 01:58:38,000
然后等到服务端传回来确认了字符的时候

3708
01:58:38,000 --> 01:58:40,000
你这边已经看到了结果了

3709
01:58:41,000 --> 01:58:43,000
就这已经是早期的一个中端模型的卖点

3710
01:58:45,000 --> 01:58:47,000
对对说到这里就这里安利一个挺好用的工具

3711
01:58:47,000 --> 01:58:48,000
这就是 mosh

3712
01:58:49,000 --> 01:58:50,000
mopossh

3713
01:58:51,000 --> 01:58:52,000
mopossh

3714
01:58:52,000 --> 01:58:54,000
就是它能够解译刚才说的一些问题

3715
01:58:55,000 --> 01:58:57,000
对是它是通过一个叫什么来的

3716
01:58:57,000 --> 01:58:58,000
mit 做的吧

3717
01:58:58,000 --> 01:59:00,000
对 mit 的一个学生做的

3718
01:59:01,000 --> 01:59:03,000
然后它这个工具就比较好

3719
01:59:03,000 --> 01:59:06,000
就解决那种在高延迟连接情况下

3720
01:59:06,000 --> 01:59:10,000
你用 ss 去那个刚才那个打一个字等半天才会出现的那个问题

3721
01:59:10,000 --> 01:59:12,000
它通过一些叫做本地的

3722
01:59:13,000 --> 01:59:14,000
the predictive 的算法

3723
01:59:14,000 --> 01:59:15,000
就是预测性的算法

3724
01:59:15,000 --> 01:59:17,000
先把那些字给你打出来

3725
01:59:17,000 --> 01:59:18,000
然后等服务器在响应

3726
01:59:18,000 --> 01:59:20,000
然后服务器如果想说没错

3727
01:59:20,000 --> 01:59:21,000
它就按那个就不用改

3728
01:59:21,000 --> 01:59:22,000
对吧

3729
01:59:22,000 --> 01:59:23,000
然后如果我们想说有问题

3730
01:59:23,000 --> 01:59:26,000
它可能在更新成服务器那个东西

3731
01:59:26,000 --> 01:59:27,000
所以有时候你会遇到会跳

3732
01:59:27,000 --> 01:59:31,000
但是说你至少能够保证你在输入这个命令的过程中

3733
01:59:31,000 --> 01:59:33,000
是比较流畅的一个体验吧

3734
01:59:34,000 --> 01:59:34,000
对

3735
01:59:34,000 --> 01:59:36,000
而且还很吊的一点

3736
01:59:36,000 --> 01:59:38,000
就是你用 laptop 办公

3737
01:59:38,000 --> 01:59:40,000
然后你打到一半

3738
01:59:40,000 --> 01:59:42,000
把 laptop 盖子合上了

3739
01:59:42,000 --> 01:59:43,000
然后再打开

3740
01:59:44,000 --> 01:59:45,000
比如说你在卡组馆你要弄个座位

3741
01:59:45,000 --> 01:59:48,000
然后如果你用普通的 ssh 的话

3742
01:59:48,000 --> 01:59:49,000
此时你就已经断掉了

3743
01:59:49,000 --> 01:59:50,000
对吧

3744
01:59:50,000 --> 01:59:51,000
但如果你用 mopossh 的话

3745
01:59:51,000 --> 01:59:52,000
对那 pjp 连接已经没有了嘛

3746
01:59:53,000 --> 01:59:54,000
对如果你用 mopossh 的话

3747
01:59:54,000 --> 01:59:56,000
特别自动帮你重新连接下来

3748
01:59:56,000 --> 01:59:58,000
是非常非常爽的一点

3749
01:59:59,000 --> 02:00:01,000
对因为它底层是用那个 udp 来实现

3750
02:00:01,000 --> 02:00:04,000
它是一个无连接的同性协议嘛

3751
02:00:04,000 --> 02:00:06,000
这样就可以让你就 roaming 嘛

3752
02:00:06,000 --> 02:00:07,000
就所有的卖油

3753
02:00:07,000 --> 02:00:09,000
可以换 ip 啊换的都可以实现的

3754
02:00:09,000 --> 02:00:13,000
然后就整个特别是在现在这个什么

3755
02:00:13,000 --> 02:00:15,000
有些人在外面用 4 G 办公

3756
02:00:15,000 --> 02:00:16,000
就可能会遇到这种状况

3757
02:00:16,000 --> 02:00:19,000
就在 4 G 和 wifi 之间切换的时候

3758
02:00:19,000 --> 02:00:21,000
会遇到这种情况比较久

3759
02:00:22,000 --> 02:00:22,000
对

3760
02:00:23,000 --> 02:00:25,000
所以 in case of havent

3761
02:00:25,000 --> 02:00:26,000
一定要用它

3762
02:00:27,000 --> 02:00:28,000
一定要去

3763
02:00:28,000 --> 02:00:29,000
就跟大家强烈

3764
02:00:29,000 --> 02:00:30,000
强烈安利

3765
02:00:33,000 --> 02:00:34,000
呃

3766
02:00:34,000 --> 02:00:37,000
所以你的同事们有在用 id 的吗

3767
02:00:38,000 --> 02:00:39,000
除了 sgo 出来

3768
02:00:41,000 --> 02:00:42,000
那等等你现在写什么

3769
02:00:42,000 --> 02:00:43,000
python 吗

3770
02:00:44,000 --> 02:00:46,000
我现在写 go 啊

3771
02:00:46,000 --> 02:00:47,000
写 go 的话

3772
02:00:47,000 --> 02:00:48,000
一般还是用编辑记得多少头

3773
02:00:48,000 --> 02:00:51,000
用那个 id 的还是比较少

3774
02:00:52,000 --> 02:00:54,000
所以 go 语言现在是没有一个

3775
02:00:54,000 --> 02:00:58,000
亲定的官方亲定的

3776
02:00:58,000 --> 02:00:59,000
没有没有没有

3777
02:00:59,000 --> 02:01:01,000
有那个那个叫

3778
02:01:01,000 --> 02:01:02,000
那个 roll pike

3779
02:01:02,000 --> 02:01:04,000
自己那个编辑是叫 acme

3780
02:01:04,000 --> 02:01:05,000
啊 acme

3781
02:01:05,000 --> 02:01:07,000
就我们介绍的也是 plan 9 的一部分

3782
02:01:07,000 --> 02:01:09,000
对对对

3783
02:01:09,000 --> 02:01:10,000
然后这个算是

3784
02:01:10,000 --> 02:01:11,000
就算买来

3785
02:01:11,000 --> 02:01:12,000
这是算亲儿子了

3786
02:01:12,000 --> 02:01:13,000
但是其实

3787
02:01:13,000 --> 02:01:16,000
除了他和那个以前 plan 9

3788
02:01:16,000 --> 02:01:17,000
那个就 bass ns 那几个人

3789
02:01:17,000 --> 02:01:19,000
在用这个之外

3790
02:01:19,000 --> 02:01:21,000
好像外面的人用的比较少吧

3791
02:01:21,000 --> 02:01:22,000
因为他那个确实比较贵意

3792
02:01:23,000 --> 02:01:24,000
比较 hunker

3793
02:01:24,000 --> 02:01:25,000
对对对

3794
02:01:25,000 --> 02:01:27,000
刚刚我讲他是首先没有那个语法高量

3795
02:01:28,000 --> 02:01:30,000
然后他是一个 proportional

3796
02:01:30,000 --> 02:01:31,000
就是等

3797
02:01:31,000 --> 02:01:32,000
就非等宽自己的

3798
02:01:33,000 --> 02:01:33,000
一个环境

3799
02:01:34,000 --> 02:01:35,000
就是上次没讨论过这个问题

3800
02:01:35,000 --> 02:01:37,000
是比较奇怪的

3801
02:01:37,000 --> 02:01:39,000
然后还要记住左键右键中键

3802
02:01:39,000 --> 02:01:40,000
点起来是什么感觉

3803
02:01:42,000 --> 02:01:42,000
对对对

3804
02:01:42,000 --> 02:01:43,000
没错

3805
02:01:43,000 --> 02:01:45,000
啊之前我在知乎的时候

3806
02:01:45,000 --> 02:01:46,000
因为知乎之前很多是用那个

3807
02:01:47,000 --> 02:01:47,000
python 写的嘛

3808
02:01:48,000 --> 02:01:50,000
你现在我发现有有几个同事

3809
02:01:50,000 --> 02:01:51,000
是用那个叫做 pychar

3810
02:01:53,000 --> 02:01:53,000
对

3811
02:01:54,000 --> 02:01:57,000
这算是一个 python 的

3812
02:01:57,000 --> 02:01:58,000
机身开发环境吧

3813
02:01:58,000 --> 02:01:59,000
就是 idea

3814
02:01:59,000 --> 02:02:00,000
他是 jetbrain

3815
02:02:00,000 --> 02:02:00,000
算是吧

3816
02:02:01,000 --> 02:02:01,000
对

3817
02:02:01,000 --> 02:02:02,000
他对那些什么

3818
02:02:03,000 --> 02:02:05,000
debugging 的时候好像做的还可以

3819
02:02:06,000 --> 02:02:06,000
没错

3820
02:02:06,000 --> 02:02:09,000
pycharm 最好用的地方就是 debugging

3821
02:02:09,000 --> 02:02:10,000
应该说

3822
02:02:10,000 --> 02:02:11,000
在 pycharm 出现之前

3823
02:02:12,000 --> 02:02:14,000
呃 python 的官方

3824
02:02:15,000 --> 02:02:18,000
和 python 的 de facto 的

3825
02:02:19,000 --> 02:02:20,000
最好 idea 是什么的

3826
02:02:21,000 --> 02:02:21,000
有吗

3827
02:02:23,000 --> 02:02:25,000
有吗

3828
02:02:25,000 --> 02:02:25,000
没有吧

3829
02:02:26,000 --> 02:02:27,000
sypy

3830
02:02:28,000 --> 02:02:30,000
sypy 也只是一个编辑而已

3831
02:02:31,000 --> 02:02:32,000
对啊

3832
02:02:32,000 --> 02:02:33,000
他们不算不算 idea

3833
02:02:33,000 --> 02:02:34,000
没有

3834
02:02:34,000 --> 02:02:34,000
没有

3835
02:02:34,000 --> 02:02:37,000
这动态语言基本上用 id 的会比较少

3836
02:02:38,000 --> 02:02:39,000
对

3837
02:02:39,000 --> 02:02:40,000
感觉那个时候

3838
02:02:40,000 --> 02:02:40,000
没动态语言

3839
02:02:40,000 --> 02:02:42,000
大家都只是在用某种

3840
02:02:43,000 --> 02:02:47,000
某种能够组织一系列文件的

3841
02:02:47,000 --> 02:02:48,000
比如说像那个

3842
02:02:50,000 --> 02:02:51,000
一时想不起来的名字

3843
02:02:51,000 --> 02:02:53,000
就在那个 sublime 出现之前

3844
02:02:53,000 --> 02:02:54,000
大家都喜欢

3845
02:02:54,000 --> 02:02:55,000
textmate

3846
02:02:55,000 --> 02:02:56,000
textmate

3847
02:02:56,000 --> 02:02:56,000
对

3848
02:02:56,000 --> 02:02:56,000
对

3849
02:02:57,000 --> 02:03:00,000
还有那个 max 很老的那个 bb edit

3850
02:03:01,000 --> 02:03:01,000
啊

3851
02:03:01,000 --> 02:03:02,000
ok

3852
02:03:02,000 --> 02:03:03,000
你说那个

3853
02:03:03,000 --> 02:03:04,000
那个我从来没有用过

3854
02:03:05,000 --> 02:03:05,000
ok

3855
02:03:06,000 --> 02:03:07,000
我其实刚学

3856
02:03:08,000 --> 02:03:11,000
我刚学 python 的时候用的是 edit plus

3857
02:03:11,000 --> 02:03:12,000
就是说曾经给你说过的

3858
02:03:13,000 --> 02:03:15,000
一个小红计时版的一个

3859
02:03:16,000 --> 02:03:18,000
icon 的 windows 上的编辑

3860
02:03:18,000 --> 02:03:19,000
不知道现在还在不在

3861
02:03:20,000 --> 02:03:20,000
ok

3862
02:03:21,000 --> 02:03:21,000
对啊

3863
02:03:22,000 --> 02:03:23,000
嗯

3864
02:03:24,000 --> 02:03:24,000
然后

3865
02:03:24,000 --> 02:03:25,000
嗯

3866
02:03:25,000 --> 02:03:26,000
就其实你看吧

3867
02:03:26,000 --> 02:03:28,000
像比如说现在你用起 java script 的话

3868
02:03:28,000 --> 02:03:29,000
好像没什么 idea 可以用

3869
02:03:31,000 --> 02:03:32,000
java script

3870
02:03:32,000 --> 02:03:32,000
嗯

3871
02:03:33,000 --> 02:03:34,000
vlogs little code

3872
02:03:34,000 --> 02:03:36,000
其实就是一个很少的

3873
02:03:36,000 --> 02:03:37,000
很好的 java script id

3874
02:03:38,000 --> 02:03:40,000
不他他那个算 idea 吗

3875
02:03:40,000 --> 02:03:42,000
还是就是算一个编辑系列

3876
02:03:42,000 --> 02:03:42,000
啊好吧

3877
02:03:42,000 --> 02:03:43,000
嗯

3878
02:03:44,000 --> 02:03:45,000
xcode

3879
02:03:45,000 --> 02:03:48,000
我觉得其实 vlogs little code 是一个

3880
02:03:48,000 --> 02:03:48,000
介于

3881
02:03:50,000 --> 02:03:52,000
idea 和编辑系之间的东西

3882
02:03:52,000 --> 02:03:54,000
因为 idea 能做的事情

3883
02:03:54,000 --> 02:03:55,000
他基本上都能做

3884
02:03:55,000 --> 02:03:56,000
比如组织一堆文件

3885
02:03:57,000 --> 02:03:58,000
然后设定一个

3886
02:04:00,000 --> 02:04:03,000
项目被执行时候的各种参数

3887
02:04:04,000 --> 02:04:05,000
以及 d 吧

3888
02:04:06,000 --> 02:04:07,000
啊对

3889
02:04:07,000 --> 02:04:08,000
其实现在我你现在

3890
02:04:08,000 --> 02:04:11,000
他出了一些很多比较新型的编辑器

3891
02:04:11,000 --> 02:04:12,000
其实都有或多或少

3892
02:04:12,000 --> 02:04:14,000
带有一定的这个 id 的属性了嘛

3893
02:04:15,000 --> 02:04:16,000
没错

3894
02:04:16,000 --> 02:04:18,000
就是这种强化的编辑器

3895
02:04:18,000 --> 02:04:20,000
就它是某种介于

3896
02:04:20,000 --> 02:04:22,000
纯粹的文文文件系和 id 之间的状态

3897
02:04:22,000 --> 02:04:23,000
我觉得这挺好

3898
02:04:23,000 --> 02:04:25,000
就轻量级的工具挺好

3899
02:04:26,000 --> 02:04:27,000
嗯哼

3900
02:04:27,000 --> 02:04:27,000
没错

3901
02:04:28,000 --> 02:04:29,000
对啊不是

3902
02:04:29,000 --> 02:04:30,000
怎么

3903
02:04:30,000 --> 02:04:32,000
怎么我们有传到 id 下去了

3904
02:04:33,000 --> 02:04:35,000
因为 id 是一个很重要的 dbug 的工具

3905
02:04:36,000 --> 02:04:37,000
啊给

3906
02:04:38,000 --> 02:04:38,000
对

3907
02:04:38,000 --> 02:04:39,000
然后呃

3908
02:04:40,000 --> 02:04:41,000
刚才说 java script

3909
02:04:41,000 --> 02:04:43,000
其实大部分时候呃给

3910
02:04:43,000 --> 02:04:45,000
java script dbug 的

3911
02:04:45,000 --> 02:04:47,000
最好的工具就是浏览器本身

3912
02:04:48,000 --> 02:04:49,000
那个

3913
02:04:50,000 --> 02:04:51,000
开发者工具栏

3914
02:04:52,000 --> 02:04:52,000
没错

3915
02:04:52,000 --> 02:04:53,000
就在

3916
02:04:53,000 --> 02:04:55,000
我在 ie 里面 f 12 吧

3917
02:04:56,000 --> 02:04:57,000
没错

3918
02:04:57,000 --> 02:04:57,000
在 ie

3919
02:04:58,000 --> 02:05:01,000
ie 是从 9 代才有 f 12 了

3920
02:05:01,000 --> 02:05:02,000
在

3921
02:05:02,000 --> 02:05:02,000
嗯哼

3922
02:05:03,000 --> 02:05:05,000
在 9 代出现之前

3923
02:05:05,000 --> 02:05:06,000
我们都只能 f 5

3924
02:05:06,000 --> 02:05:06,000
就是

3925
02:05:09,000 --> 02:05:11,000
哎算等一下

3926
02:05:11,000 --> 02:05:12,000
那个 f 5 算是

3927
02:05:12,000 --> 02:05:15,000
网页版的打印出从方法吧

3928
02:05:16,000 --> 02:05:17,000
没错

3929
02:05:17,000 --> 02:05:18,000
f 5 其实就是一个

3930
02:05:18,000 --> 02:05:19,000
叫什么

3931
02:05:19,000 --> 02:05:20,000
耍新鲜

3932
02:05:20,000 --> 02:05:20,000
对

3933
02:05:22,000 --> 02:05:23,000
reload

3934
02:05:24,000 --> 02:05:24,000
对

3935
02:05:25,000 --> 02:05:26,000
就跟那个什么

3936
02:05:26,000 --> 02:05:27,000
加入打印语剧之后

3937
02:05:27,000 --> 02:05:28,000
重新 reload 一下

3938
02:05:28,000 --> 02:05:30,000
看那个地方到底会不会出现那个东西吗

3939
02:05:31,000 --> 02:05:31,000
没错

3940
02:05:32,000 --> 02:05:34,000
然后这个网页里面就是

3941
02:05:35,000 --> 02:05:37,000
把那个 java script 或者是 css

3942
02:05:37,000 --> 02:05:38,000
请你们改一下看一下

3943
02:05:38,000 --> 02:05:39,000
哎是不是在那个掌

3944
02:05:40,000 --> 02:05:42,000
如意料之内掌出现的一个那个位置

3945
02:05:42,000 --> 02:05:44,000
然后打了那个东西出来

3946
02:05:44,000 --> 02:05:45,000
对

3947
02:05:45,000 --> 02:05:47,000
那至于像什么 liveguard 的这种

3948
02:05:48,000 --> 02:05:49,000
帮你按 f 5 的工具

3949
02:05:49,000 --> 02:05:50,000
就是你只要存在盘

3950
02:05:50,000 --> 02:05:52,000
它就帮你按下 f 5

3951
02:05:53,000 --> 02:05:53,000
这

3952
02:05:53,000 --> 02:05:54,000
这个还叫什么

3953
02:05:54,000 --> 02:05:55,000
这个还挺高级的一个工具

3954
02:05:55,000 --> 02:05:57,000
叫什么 autorefresh 是吧

3955
02:05:58,000 --> 02:05:58,000
对

3956
02:05:58,000 --> 02:06:00,000
其实这个就是 live programming 的一种

3957
02:06:00,000 --> 02:06:01,000
一种形式嘛

3958
02:06:02,000 --> 02:06:03,000
对

3959
02:06:03,000 --> 02:06:05,000
我上次忘了说那个什么是 angular

3960
02:06:05,000 --> 02:06:07,000
还是 react

3961
02:06:07,000 --> 02:06:08,000
还是什么一个

3962
02:06:09,000 --> 02:06:11,000
反正那个前端工具的框架

3963
02:06:11,000 --> 02:06:12,000
它既然还

3964
02:06:12,000 --> 02:06:14,000
就是现在就流行说自带一个叫做

3965
02:06:15,000 --> 02:06:17,000
autoreloader 的 server

3966
02:06:17,000 --> 02:06:18,000
就是一个 no java

3967
02:06:18,000 --> 02:06:18,000
写的一个

3968
02:06:19,000 --> 02:06:21,000
一个一个一个 server

3969
02:06:21,000 --> 02:06:21,000
然后它会插

3970
02:06:22,000 --> 02:06:23,000
往你那个网页里面带码

3971
02:06:23,000 --> 02:06:26,000
插有一段特别的 java script 带码

3972
02:06:26,000 --> 02:06:27,000
然后它会维持一个

3973
02:06:28,000 --> 02:06:29,000
叫什么来的

3974
02:06:30,000 --> 02:06:32,000
websocket 或者是 hgp 的

3975
02:06:32,000 --> 02:06:33,000
浪传连接

3976
02:06:33,000 --> 02:06:35,000
然后探测到你那边

3977
02:06:35,000 --> 02:06:36,000
保存了那个东西之后

3978
02:06:36,000 --> 02:06:37,000
它会通过那个传连接

3979
02:06:37,000 --> 02:06:39,000
通知服务器手动

3980
02:06:39,000 --> 02:06:40,000
通知你的浏览器

3981
02:06:40,000 --> 02:06:42,000
自动刷新那个带码

3982
02:06:42,000 --> 02:06:43,000
我这个方法

3983
02:06:43,000 --> 02:06:43,000
我看了一下

3984
02:06:43,000 --> 02:06:44,000
我也是罪了

3985
02:06:45,000 --> 02:06:45,000
bracket 吧

3986
02:06:45,000 --> 02:06:47,000
就是你说的是 bracket 吗

3987
02:06:47,000 --> 02:06:48,000
就是那个写前端的

3988
02:06:48,000 --> 02:06:49,000
就很多

3989
02:06:49,000 --> 02:06:50,000
有好几个都是这种

3990
02:06:50,000 --> 02:06:52,000
都是这个这个

3991
02:06:52,000 --> 02:06:53,000
这个框架的

3992
02:06:53,000 --> 02:06:55,000
一些帮助的工具

3993
02:06:55,000 --> 02:06:56,000
都是从我这方式来实现的

3994
02:06:57,000 --> 02:06:58,000
spresso 也是这样的

3995
02:06:58,000 --> 02:06:58,000
我记得

3996
02:07:01,000 --> 02:07:02,000
对 没错

3997
02:07:03,000 --> 02:07:04,000
我想还装了一个

3998
02:07:04,000 --> 02:07:05,000
叫什么 cold kit

3999
02:07:05,000 --> 02:07:06,000
我已经好久没有打开过了

4000
02:07:07,000 --> 02:07:08,000
然后后来是什么

4001
02:07:08,000 --> 02:07:11,000
那个 crumb 还是那个

4002
02:07:12,000 --> 02:07:12,000
横空出示

4003
02:07:12,000 --> 02:07:14,000
带了一个叫做 console

4004
02:07:14,000 --> 02:07:15,000
对这个工具

4005
02:07:15,000 --> 02:07:17,000
对 其实是 bypec 的一个工具

4006
02:07:18,000 --> 02:07:19,000
对 叫做 inspector

4007
02:07:19,000 --> 02:07:20,000
最早的那个东西

4008
02:07:21,000 --> 02:07:22,000
反正可以什么

4009
02:07:22,000 --> 02:07:25,000
就像那个 debugger 那样

4010
02:07:25,000 --> 02:07:26,000
可以动态修改

4011
02:07:26,000 --> 02:07:28,000
网页中的某个结构

4012
02:07:28,000 --> 02:07:29,000
对 而且可以让你停在

4013
02:07:29,000 --> 02:07:30,000
某一行代码上

4014
02:07:31,000 --> 02:07:32,000
没错

4015
02:07:32,000 --> 02:07:33,000
而且不用理由

4016
02:07:33,000 --> 02:07:35,000
下段点实在是太人气了

4017
02:07:38,000 --> 02:07:39,000
没错

4018
02:07:39,000 --> 02:07:42,000
对 我记得当初切换到 crumb

4019
02:07:42,000 --> 02:07:43,000
可能也就是因为

4020
02:07:43,000 --> 02:07:45,000
这个 inspector 的功能

4021
02:07:45,000 --> 02:07:48,000
实在是要比 firebug 强太多

4022
02:07:49,000 --> 02:07:49,000
然后就

4023
02:07:49,000 --> 02:07:51,000
现在也是吧

4024
02:07:51,000 --> 02:07:53,000
现在 crumb 的开发者工具

4025
02:07:53,000 --> 02:07:54,000
就是 inspector

4026
02:07:54,000 --> 02:07:56,000
应该是在目前为止

4027
02:07:56,000 --> 02:07:58,000
是在 safari 啊

4028
02:07:58,000 --> 02:07:58,000
还有 firefox

4029
02:07:59,000 --> 02:08:01,000
这个你之间最强大的一个吧

4030
02:08:02,000 --> 02:08:03,000
嗯 我觉得是这样

4031
02:08:03,000 --> 02:08:05,000
当然肯定有听众觉得不是这样的

4032
02:08:05,000 --> 02:08:08,000
但我反正最近也没有这么用

4033
02:08:08,000 --> 02:08:12,000
肯定是 firefox firebug 的死忠

4034
02:08:14,000 --> 02:08:18,000
不 现在 firefox 其实那次带一个 d 8 的工具

4035
02:08:18,000 --> 02:08:20,000
就不再

4036
02:08:20,000 --> 02:08:22,000
就是他就是把 firebug 整合进去了

4037
02:08:23,000 --> 02:08:23,000
OK

4038
02:08:24,000 --> 02:08:25,000
哦 是这么来的

4039
02:08:25,000 --> 02:08:27,000
我记得对 是这样的

4040
02:08:27,000 --> 02:08:27,000
我没记错

4041
02:08:27,000 --> 02:08:29,000
因为当时就是说

4042
02:08:29,000 --> 02:08:33,000
开发者都不愿意用 firefox

4043
02:08:33,000 --> 02:08:35,000
就是因为 crumb 的开发者

4044
02:08:35,000 --> 02:08:37,000
inspector 的工具实在太好用了

4045
02:08:37,000 --> 02:08:38,000
然后他说什么

4046
02:08:38,000 --> 02:08:39,000
我这就感觉到危机了

4047
02:08:39,000 --> 02:08:41,000
赶快把那个

4048
02:08:41,000 --> 02:08:42,000
因为之前 firebug 以前

4049
02:08:42,000 --> 02:08:43,000
以前都是一个非官方

4050
02:08:43,000 --> 02:08:44,000
第三方的插件

4051
02:08:44,000 --> 02:08:45,000
对吧

4052
02:08:45,000 --> 02:08:46,000
对

4053
02:08:46,000 --> 02:08:47,000
对

4054
02:08:47,000 --> 02:08:48,000
这毕竟不是亲儿子嘛

4055
02:08:48,000 --> 02:08:49,000
做起来还是没有那么顺手

4056
02:08:49,000 --> 02:08:51,000
然后来不行

4057
02:08:51,000 --> 02:08:51,000
看不下去了

4058
02:08:51,000 --> 02:08:52,000
还是整合进来吧

4059
02:08:53,000 --> 02:08:53,000
然后

4060
02:08:54,000 --> 02:08:55,000
然并软

4061
02:08:56,000 --> 02:08:57,000
对 为时遗忘

4062
02:08:57,000 --> 02:08:58,000
现在应该是

4063
02:08:58,000 --> 02:08:58,000
并没有

4064
02:08:58,000 --> 02:08:59,000
vibkit

4065
02:08:59,000 --> 02:09:00,000
vibkit

4066
02:09:02,000 --> 02:09:05,000
以 vibkit 为基础的 browser

4067
02:09:05,000 --> 02:09:07,000
市长就强过改口吧

4068
02:09:08,000 --> 02:09:08,000
对

4069
02:09:10,000 --> 02:09:11,000
现在不是还有

4070
02:09:11,000 --> 02:09:11,000
你看那个叫做

4071
02:09:11,000 --> 02:09:14,000
上次我们前级谈的 react native

4072
02:09:14,000 --> 02:09:16,000
这种逆天的玩意儿

4073
02:09:16,000 --> 02:09:20,000
它竟然能够在 crumb 的 inspector 里面

4074
02:09:20,000 --> 02:09:22,000
去实时修改

4075
02:09:22,000 --> 02:09:24,000
跑在 ls 上面的那个英雄

4076
02:09:24,000 --> 02:09:25,000
你感兴吗

4077
02:09:25,000 --> 02:09:29,000
对实在是太 awesomeness

4078
02:09:29,000 --> 02:09:29,000
full of awesomeness

4079
02:09:29,000 --> 02:09:30,000
对

4080
02:09:30,000 --> 02:09:33,000
因为以前 ls 还要重新 reload

4081
02:09:33,000 --> 02:09:34,000
还要再传一下

4082
02:09:34,000 --> 02:09:36,000
尝到那个争计里面

4083
02:09:36,000 --> 02:09:37,000
才可以重视嘛

4084
02:09:37,000 --> 02:09:38,000
对吧

4085
02:09:38,000 --> 02:09:40,000
它这个可以通过远程的方法

4086
02:09:40,000 --> 02:09:41,000
直接修改 crumb 的

4087
02:09:41,000 --> 02:09:42,000
原来有一个状态

4088
02:09:42,000 --> 02:09:44,000
然后能够瞬间

4089
02:09:44,000 --> 02:09:46,000
同步到

4090
02:09:46,000 --> 02:09:46,000
不叫瞬间同步

4091
02:09:46,000 --> 02:09:48,000
它就是直接是那个

4092
02:09:49,000 --> 02:09:50,000
什么理解呢

4093
02:09:50,000 --> 02:09:51,000
就是 ls 上面那个

4094
02:09:51,000 --> 02:09:53,000
应用渲染的结构

4095
02:09:53,000 --> 02:09:54,000
是来自于 crumb 里面

4096
02:09:54,000 --> 02:09:55,000
这个 inspector 的结构

4097
02:09:56,000 --> 02:09:56,000
对

4098
02:09:57,000 --> 02:09:58,000
反正挺黑科技的

4099
02:09:59,000 --> 02:09:59,000
没错

4100
02:10:00,000 --> 02:10:02,000
总之前端开发者实在是太幸福了

4101
02:10:02,000 --> 02:10:03,000
想问一下

4102
02:10:03,000 --> 02:10:06,000
你看这些做服务端的人

4103
02:10:06,000 --> 02:10:07,000
就 dbug 的

4104
02:10:07,000 --> 02:10:11,000
是实在是没有这么趁手的 dbug 的工具

4105
02:10:13,000 --> 02:10:15,000
当然也跟问题的领域有关

4106
02:10:15,000 --> 02:10:18,000
因为前端的东西是比较容易锁定的

4107
02:10:18,000 --> 02:10:20,000
而后端的东西很多时候是

4108
02:10:21,000 --> 02:10:23,000
没有什么东西是可以直观可见的

4109
02:10:23,000 --> 02:10:23,000
不是吧

4110
02:10:23,000 --> 02:10:24,000
所以

4111
02:10:24,000 --> 02:10:25,000
你做了一个

4112
02:10:26,000 --> 02:10:26,000
对

4113
02:10:26,000 --> 02:10:27,000
你做了一个

4114
02:10:27,000 --> 02:10:30,000
高并发

4115
02:10:30,000 --> 02:10:36,000
可以及时适应用户暴涨这么一个服务

4116
02:10:37,000 --> 02:10:39,000
你怎么把它锁定去做

4117
02:10:39,000 --> 02:10:42,000
就是整个测试过程是没有办法

4118
02:10:42,000 --> 02:10:44,000
整个排查的过程是没有办法用一个

4119
02:10:45,000 --> 02:10:46,000
只需要按一个键

4120
02:10:46,000 --> 02:10:49,000
就可以完成的工具来实现

4121
02:10:50,000 --> 02:10:50,000
对

4122
02:10:50,000 --> 02:10:51,000
而且现在很多这种

4123
02:10:51,000 --> 02:10:53,000
大的那种应用

4124
02:10:53,000 --> 02:10:54,000
它都是跨系统的

4125
02:10:54,000 --> 02:10:56,000
这不是一个单一进程的东西

4126
02:10:56,000 --> 02:10:56,000
就是它什么

4127
02:10:57,000 --> 02:11:00,000
来着 Google App Engine

4128
02:11:00,000 --> 02:11:01,000
你知道吗

4129
02:11:01,000 --> 02:11:02,000
那个跑到余福那个平台

4130
02:11:02,000 --> 02:11:02,000
对

4131
02:11:03,000 --> 02:11:04,000
但是不是最

4132
02:11:04,000 --> 02:11:05,000
它是今年出了一个什么

4133
02:11:06,000 --> 02:11:09,000
叫做好像是叫做 Cloud debugging

4134
02:11:09,000 --> 02:11:10,000
叫做云除虫

4135
02:11:11,000 --> 02:11:12,000
所以就是说

4136
02:11:12,000 --> 02:11:15,000
当你的应用传续跑在不止一台机器

4137
02:11:15,000 --> 02:11:17,000
甚至不止一个数据中信念情况下

4138
02:11:17,000 --> 02:11:19,000
你怎么去统筹多个进程

4139
02:11:19,000 --> 02:11:20,000
多台机器

4140
02:11:22,000 --> 02:11:23,000
协作产生

4141
02:11:23,000 --> 02:11:24,000
产生了一个 Bud

4142
02:11:24,000 --> 02:11:25,000
其实相信还是挺淡腾的

4143
02:11:26,000 --> 02:11:27,000
嗯

4144
02:11:27,000 --> 02:11:28,000
非常真的

4145
02:11:28,000 --> 02:11:28,000
而且

4146
02:11:31,000 --> 02:11:32,000
有时候

4147
02:11:32,000 --> 02:11:33,000
一个程序崩溃了

4148
02:11:34,000 --> 02:11:36,000
前端只需要简单的

4149
02:11:36,000 --> 02:11:38,000
把程序再跑一遍的

4150
02:11:38,000 --> 02:11:39,000
可是后端

4151
02:11:39,000 --> 02:11:40,000
你可能唯一能拿到的东西

4152
02:11:40,000 --> 02:11:41,000
就是一个

4153
02:11:41,000 --> 02:11:43,000
就是一个 dump

4154
02:11:43,000 --> 02:11:44,000
也就是这个程序

4155
02:11:44,000 --> 02:11:46,000
它挂掉的时候的车祸现场

4156
02:11:46,000 --> 02:11:47,000
然后你要像一个

4157
02:11:48,000 --> 02:11:49,000
像一个法警

4158
02:11:49,000 --> 02:11:49,000
一样

4159
02:11:51,000 --> 02:11:53,000
法医员真相

4160
02:11:54,000 --> 02:11:57,000
就试图通过现场的一点点猪死马迹

4161
02:11:57,000 --> 02:11:58,000
还原出这个

4162
02:11:59,000 --> 02:12:00,000
案情是怎么发生的

4163
02:12:00,000 --> 02:12:01,000
然后

4164
02:12:02,000 --> 02:12:03,000
只能做一个数据

4165
02:12:03,000 --> 02:12:04,000
叫什么 post mode

4166
02:12:05,000 --> 02:12:07,000
死后的这个一个识节

4167
02:12:07,000 --> 02:12:09,000
你没有办法让整个车祸再发生一点

4168
02:12:09,000 --> 02:12:10,000
这是一

4169
02:12:10,000 --> 02:12:11,000
这也是非常痛苦的

4170
02:12:11,000 --> 02:12:12,000
而且耗时的一件事

4171
02:12:13,000 --> 02:12:14,000
因为 call dump

4172
02:12:15,000 --> 02:12:16,000
不管是 call dump 还是 heap dump

4173
02:12:16,000 --> 02:12:16,000
还是

4174
02:12:16,000 --> 02:12:18,000
对我们说整个环境的 memory dump

4175
02:12:18,000 --> 02:12:20,000
都是非常巨大

4176
02:12:20,000 --> 02:12:20,000
而且

4177
02:12:21,000 --> 02:12:22,000
需要

4178
02:12:22,000 --> 02:12:22,000
非常

4179
02:12:23,000 --> 02:12:27,000
敏锐的观察力和精力才能搞定这些事

4180
02:12:28,000 --> 02:12:28,000
没错

4181
02:12:28,000 --> 02:12:29,000
没错

4182
02:12:29,000 --> 02:12:30,000
而且你遇到那种

4183
02:12:30,000 --> 02:12:32,000
就是你还不能用那什么打印

4184
02:12:32,000 --> 02:12:33,000
出重法

4185
02:12:33,000 --> 02:12:33,000
因为

4186
02:12:33,000 --> 02:12:35,000
第一个你没法打印到

4187
02:12:35,000 --> 02:12:36,000
某一个具体的地方去

4188
02:12:36,000 --> 02:12:38,000
你可能就这么 syslog 要会走

4189
02:12:38,000 --> 02:12:38,000
对

4190
02:12:38,000 --> 02:12:39,000
你的顺序都是错的

4191
02:12:40,000 --> 02:12:40,000
然后

4192
02:12:41,000 --> 02:12:42,000
那各个机器上面时间

4193
02:12:42,000 --> 02:12:44,000
它也不一定是完全同步的

4194
02:12:44,000 --> 02:12:44,000
对吧

4195
02:12:44,000 --> 02:12:45,000
对

4196
02:12:45,000 --> 02:12:47,000
根本就没有什么卵可以打

4197
02:12:49,000 --> 02:12:50,000
再然后就是

4198
02:12:50,000 --> 02:12:52,000
如果你重启一个服务

4199
02:12:52,000 --> 02:12:53,000
可能它

4200
02:12:54,000 --> 02:12:55,000
如果你是一个小

4201
02:12:55,000 --> 02:12:56,000
就是 microsoft service

4202
02:12:56,000 --> 02:12:57,000
有位服务的价格可能还行

4203
02:12:57,000 --> 02:12:58,000
重启一个服务

4204
02:12:58,000 --> 02:12:59,000
问题不是很大

4205
02:12:59,000 --> 02:13:01,000
你要上现在很多什么写

4206
02:13:02,000 --> 02:13:04,000
游戏的那种 server

4207
02:13:04,000 --> 02:13:05,000
就是游戏的服务器

4208
02:13:05,000 --> 02:13:07,000
它可能光预热

4209
02:13:07,000 --> 02:13:07,000
这个数字级

4210
02:13:07,000 --> 02:13:09,000
可能就要好几分钟重启一次

4211
02:13:10,000 --> 02:13:10,000
对

4212
02:13:12,000 --> 02:13:13,000
那就哭吧

4213
02:13:13,000 --> 02:13:14,000
没错

4214
02:13:15,000 --> 02:13:16,000
或者那些搞大数据分析的人

4215
02:13:16,000 --> 02:13:19,000
你说他们怎么才能测试自己

4216
02:13:19,000 --> 02:13:20,000
写这个东西

4217
02:13:20,000 --> 02:13:20,000
都有对

4218
02:13:20,000 --> 02:13:21,000
这个算法

4219
02:13:21,000 --> 02:13:25,000
可能有一些非常容易解决的问题

4220
02:13:25,000 --> 02:13:27,000
他们可能要等上几个小时

4221
02:13:27,000 --> 02:13:28,000
这几天的时间

4222
02:13:28,000 --> 02:13:29,000
把整个数据再跑一遍

4223
02:13:29,000 --> 02:13:30,000
这是唯一的方法

4224
02:13:30,000 --> 02:13:34,000
就没有别的可以动态去调试的方法

4225
02:13:36,000 --> 02:13:38,000
所以其实最理想的那个状态

4226
02:13:38,000 --> 02:13:39,000
是那个什么

4227
02:13:39,000 --> 02:13:40,000
Orlan 的那一套东西

4228
02:13:41,000 --> 02:13:42,000
就 Orlan 里面

4229
02:13:42,000 --> 02:13:42,000
它那些每个

4230
02:13:43,000 --> 02:13:45,000
它的小的紫进城是可以

4231
02:13:46,000 --> 02:13:47,000
独立重启的

4232
02:13:47,000 --> 02:13:47,000
然后

4233
02:13:48,000 --> 02:13:49,000
它可以动态登录到

4234
02:13:49,000 --> 02:13:51,000
那个程序运行态里面去

4235
02:13:52,000 --> 02:13:53,000
动态修改局部代码

4236
02:13:53,000 --> 02:13:55,000
然后局部重启

4237
02:13:55,000 --> 02:13:55,000
就是不用

4238
02:13:56,000 --> 02:13:58,000
不用重启整个那个程序

4239
02:13:58,000 --> 02:14:00,000
你局部可能更新一个函数

4240
02:14:00,000 --> 02:14:02,000
更新一个紫进城

4241
02:14:02,000 --> 02:14:02,000
紫进城

4242
02:14:03,000 --> 02:14:04,000
然后再跑起来

4243
02:14:04,000 --> 02:14:05,000
非常非常方便

4244
02:14:05,000 --> 02:14:06,000
非常牛逼的

4245
02:14:07,000 --> 02:14:07,000
OK

4246
02:14:08,000 --> 02:14:09,000
挺反不错

4247
02:14:10,000 --> 02:14:11,000
所以你呢

4248
02:14:11,000 --> 02:14:12,000
我是对 Orlan 没有任何了解

4249
02:14:12,000 --> 02:14:14,000
而且不知道为什么

4250
02:14:14,000 --> 02:14:15,000
没有任何兴趣

4251
02:14:17,000 --> 02:14:18,000
因为它那个

4252
02:14:18,000 --> 02:14:19,000
其实那个是

4253
02:14:19,000 --> 02:14:22,000
这时候的运营商级别的

4254
02:14:22,000 --> 02:14:22,000
一个环境

4255
02:14:23,000 --> 02:14:24,000
就是它运营商

4256
02:14:24,000 --> 02:14:25,000
可是你不可能说

4257
02:14:25,000 --> 02:14:27,000
我这个电话交换系统坏了

4258
02:14:28,000 --> 02:14:29,000
我会把整个停机

4259
02:14:29,000 --> 02:14:31,000
然后来检修

4260
02:14:31,000 --> 02:14:31,000
然后重启

4261
02:14:32,000 --> 02:14:33,000
尝试看有没有出错错

4262
02:14:33,000 --> 02:14:34,000
不可能

4263
02:14:34,000 --> 02:14:36,000
因为你电话停机了

4264
02:14:36,000 --> 02:14:37,000
那就是什么

4265
02:14:37,000 --> 02:14:40,000
会造成重大社会危机的

4266
02:14:40,000 --> 02:14:41,000
没错

4267
02:14:41,000 --> 02:14:41,000
对吧

4268
02:14:42,000 --> 02:14:43,000
Orlan 是谁造出来的

4269
02:14:43,000 --> 02:14:44,000
Alice

4270
02:14:44,000 --> 02:14:45,000
Alice 啊对啊

4271
02:14:45,000 --> 02:14:46,000
OrxLanguage

4272
02:14:49,000 --> 02:14:53,000
这个也是应该是最好的一个

4273
02:14:54,000 --> 02:14:55,000
可以出重的环境吧

4274
02:14:56,000 --> 02:14:57,000
这其实上

4275
02:14:57,000 --> 02:14:58,000
大部分的其他的

4276
02:14:59,000 --> 02:15:01,000
这个语言写的代码

4277
02:15:01,000 --> 02:15:02,000
都是不可以

4278
02:15:02,000 --> 02:15:04,000
那种局部出重的嘛

4279
02:15:04,000 --> 02:15:04,000
就是

4280
02:15:04,000 --> 02:15:06,000
所以在同一进城里面

4281
02:15:06,000 --> 02:15:07,000
我也都不可以的

4282
02:15:08,000 --> 02:15:10,000
List 好像有部分是可以

4283
02:15:12,000 --> 02:15:13,000
至少最早的那个 List

4284
02:15:13,000 --> 02:15:14,000
不是可以登综进去

4285
02:15:14,000 --> 02:15:15,000
可以改动态修改

4286
02:15:15,000 --> 02:15:17,000
就这个时候要求它是一个动态语言

4287
02:15:17,000 --> 02:15:18,000
对就是必须

4288
02:15:18,000 --> 02:15:20,000
进态就编译型语言就基本没戏了

4289
02:15:20,000 --> 02:15:21,000
就已经被派出在门看之外了

4290
02:15:21,000 --> 02:15:22,000
就不用再下了

4291
02:15:22,000 --> 02:15:25,000
我们原理上就不支持这一点

4292
02:15:25,000 --> 02:15:26,000
对吧

4293
02:15:26,000 --> 02:15:28,000
动态语言其实也就比较少

4294
02:15:28,000 --> 02:15:29,000
主要是一些寒舒适的语言

4295
02:15:29,000 --> 02:15:31,000
有望支持这一点

4296
02:15:32,000 --> 02:15:33,000
对

4297
02:15:36,000 --> 02:15:37,000
然后后端的

4298
02:15:37,000 --> 02:15:40,000
做后端的人或者是做独立 app 的人

4299
02:15:40,000 --> 02:15:42,000
或者是做一个比较需要

4300
02:15:43,000 --> 02:15:46,000
在一段时间里面查看这个程序

4301
02:15:46,000 --> 02:15:47,000
跑出来没有问题的人

4302
02:15:47,000 --> 02:15:51,000
可能还会用到一个 dblogger 的一个变种

4303
02:15:51,000 --> 02:15:53,000
就叫做 profiler

4304
02:15:53,000 --> 02:15:55,000
或者 profiler tool

4305
02:15:55,000 --> 02:15:56,000
就这个东西可以

4306
02:15:57,000 --> 02:16:00,000
把一个程序包落在一个

4307
02:16:01,000 --> 02:16:03,000
受到监控的运行环境里面

4308
02:16:03,000 --> 02:16:06,000
然后看这个程序的运行的过程中

4309
02:16:06,000 --> 02:16:07,000
会不会有一些比如说

4310
02:16:09,000 --> 02:16:10,000
小灵胎脉或者是

4311
02:16:11,000 --> 02:16:12,000
内存泄露之类的问题

4312
02:16:13,000 --> 02:16:15,000
这些东西也可以是一个广义上的

4313
02:16:16,000 --> 02:16:18,000
dblogger 的

4314
02:16:18,000 --> 02:16:21,000
比如说命令行下面有叫 vagrant

4315
02:16:23,000 --> 02:16:23,000
是一个

4316
02:16:24,000 --> 02:16:25,000
其实是训练机

4317
02:16:25,000 --> 02:16:27,000
就是它会把一个 C 程序

4318
02:16:27,000 --> 02:16:28,000
在这个训练机里面运行

4319
02:16:28,000 --> 02:16:31,000
然后每运行一步就告诉说

4320
02:16:31,000 --> 02:16:34,000
这个程序运行的运行到这儿

4321
02:16:34,000 --> 02:16:36,000
有没有是不是已经扔出了一个

4322
02:16:37,000 --> 02:16:43,000
比如说已经没有办法被找到的一个内存区域

4323
02:16:44,000 --> 02:16:47,000
又比如说 scode 里面也有专门的 profiler tool

4324
02:16:47,000 --> 02:16:49,000
然后你可以让你一个 app

4325
02:16:49,000 --> 02:16:50,000
在一段时间里面运行

4326
02:16:50,000 --> 02:16:51,000
然后它会

4327
02:16:52,000 --> 02:16:54,000
甚至是用图形化的方式

4328
02:16:54,000 --> 02:16:56,000
会告诉你说这儿这流漏了一季 kb 数据

4329
02:16:56,000 --> 02:16:58,000
这流漏了几 kb 数据

4330
02:16:58,000 --> 02:17:01,000
然后一些可能你跑上

4331
02:17:02,000 --> 02:17:04,000
一两分钟没问题的 app 跑上一个小时之后

4332
02:17:04,000 --> 02:17:05,000
就会 crash

4333
02:17:05,000 --> 02:17:06,000
你不知道为什么

4334
02:17:06,000 --> 02:17:07,000
然后你用 profiler 一看

4335
02:17:07,000 --> 02:17:09,000
哦它原来一直在泄露程序

4336
02:17:09,000 --> 02:17:10,000
然后泄露内存

4337
02:17:10,000 --> 02:17:11,000
然后泄露了一个小时之后

4338
02:17:12,000 --> 02:17:14,000
你的 app 终于没有内存了

4339
02:17:14,000 --> 02:17:16,000
所以它就发生

4340
02:17:16,000 --> 02:17:17,000
嗯对

4341
02:17:17,000 --> 02:17:18,000
没错

4342
02:17:19,000 --> 02:17:20,000
然后有时候就是

4343
02:17:21,000 --> 02:17:23,000
如果你写 sapp 的时候

4344
02:17:23,000 --> 02:17:25,000
有时候你在调试过程中

4345
02:17:25,000 --> 02:17:28,000
它又荒唐给你跳了一大堆会变带吗

4346
02:17:28,000 --> 02:17:30,000
你说你这个时候应该怎么办

4347
02:17:31,000 --> 02:17:31,000
啊是吗

4348
02:17:31,000 --> 02:17:32,000
是吗

4349
02:17:32,000 --> 02:17:33,000
对啊

4350
02:17:33,000 --> 02:17:34,000
太惨了

4351
02:17:34,000 --> 02:17:35,000
死了

4352
02:17:36,000 --> 02:17:39,000
所以我是不会变的

4353
02:17:40,000 --> 02:17:42,000
我也不能说会会变吧

4354
02:17:42,000 --> 02:17:45,000
但是在这种情况下

4355
02:17:45,000 --> 02:17:46,000
基本上你都知道

4356
02:17:46,000 --> 02:17:48,000
你其实只要一步一步跳下去

4357
02:17:48,000 --> 02:17:49,000
或者说你只要

4358
02:17:50,000 --> 02:17:52,000
把断点设在一个比较

4359
02:17:54,000 --> 02:17:55,000
比较正常的地方

4360
02:17:55,000 --> 02:17:56,000
然后一步一步跳

4361
02:17:56,000 --> 02:17:59,000
你找到自己要跳进会变之前的那一步

4362
02:17:59,000 --> 02:18:00,000
就知道问题出在哪

4363
02:18:00,000 --> 02:18:02,000
倒不是特别的严重

4364
02:18:02,000 --> 02:18:03,000
其实我只是想说

4365
02:18:04,000 --> 02:18:07,000
有些 lebuggers 会把你引领到这个地方

4366
02:18:07,000 --> 02:18:09,000
就是刚才还是

4367
02:18:09,000 --> 02:18:13,000
高等语言突然一下子跳到了会变语言

4368
02:18:13,000 --> 02:18:14,000
你应该怎么办

4369
02:18:15,000 --> 02:18:16,000
对

4370
02:18:16,000 --> 02:18:17,000
这个情况下其实

4371
02:18:18,000 --> 02:18:21,000
我觉得还是有必要稍微学一点会变的

4372
02:18:21,000 --> 02:18:23,000
至少你不用知道

4373
02:18:23,000 --> 02:18:24,000
你不用把所有的指令变起来

4374
02:18:24,000 --> 02:18:31,000
你也不用有能力去逆向工程

4375
02:18:31,000 --> 02:18:34,000
或者是纯用会变来写一个

4376
02:18:34,000 --> 02:18:37,000
3 D 加速程序之类的这些技巧

4377
02:18:38,000 --> 02:18:40,000
你至少要了解一些比如说

4378
02:18:40,000 --> 02:18:42,000
calling convention 是什么

4379
02:18:44,000 --> 02:18:45,000
cost deck 是什么

4380
02:18:45,000 --> 02:18:46,000
然后这些东西你可以

4381
02:18:47,000 --> 02:18:49,000
了解一些最基本的会变的概念

4382
02:18:50,000 --> 02:18:52,000
对于 lebuggers 其实有帮助

4383
02:18:53,000 --> 02:18:56,000
所以今天大概把调试这一块

4384
02:18:57,000 --> 02:18:58,000
纵结一下

4385
02:18:58,000 --> 02:18:59,000
纵满了一下

4386
02:18:59,000 --> 02:19:03,000
那我觉得调试技术不管在哪

4387
02:19:04,000 --> 02:19:05,000
重要

4388
02:19:05,000 --> 02:19:07,000
还是没有办法抵过

4389
02:19:07,000 --> 02:19:09,000
养成一个良好的变成习惯

4390
02:19:10,000 --> 02:19:11,000
来的更重要点

4391
02:19:12,000 --> 02:19:13,000
就比如说我们前面提到

4392
02:19:13,000 --> 02:19:16,000
就可以成全可以成为两种

4393
02:19:16,000 --> 02:19:18,000
一种是先确定编辑条件

4394
02:19:18,000 --> 02:19:19,000
然后写代码

4395
02:19:19,000 --> 02:19:20,000
另外一种是先写代码

4396
02:19:20,000 --> 02:19:21,000
然后去找这个

4397
02:19:21,000 --> 02:19:24,000
让这个代码还能够正确工作的

4398
02:19:24,000 --> 02:19:25,000
编辑条件是什么

4399
02:19:26,000 --> 02:19:27,000
是两种既然不同态度

4400
02:19:27,000 --> 02:19:29,000
那也许后一种态度会让你

4401
02:19:29,000 --> 02:19:31,000
对于所有的

4402
02:19:31,000 --> 02:19:33,000
debug 工具都辽入指掌

4403
02:19:34,000 --> 02:19:35,000
从严格意义上来说

4404
02:19:35,000 --> 02:19:39,000
还是有前一种习惯对你的帮助更大

4405
02:19:40,000 --> 02:19:41,000
行吧

4406
02:19:41,000 --> 02:19:46,000
那这一期录了也有两个多小时

4407
02:19:46,000 --> 02:19:48,000
可能最终检查来没有这么多

4408
02:19:48,000 --> 02:19:50,000
因为我们中途也遇到了

4409
02:19:50,000 --> 02:19:53,000
若干技术故障跟这一期总算也是

4410
02:19:53,000 --> 02:19:55,000
达到的长度

4411
02:19:55,000 --> 02:19:57,000
我上一期发现你们的 IT 公论

4412
02:19:57,000 --> 02:19:59,000
也在也在也在拼长度啊

4413
02:19:59,000 --> 02:19:59,000
这样对吗

4414
02:20:01,000 --> 02:20:02,000
根本停不下来

4415
02:20:03,000 --> 02:20:05,000
到底发生了什么

4416
02:20:05,000 --> 02:20:06,000
我在听了

4417
02:20:06,000 --> 02:20:07,000
我其实一开始的时候我就说

4418
02:20:07,000 --> 02:20:09,000
我搞这一期怎么看起来这么长

4419
02:20:09,000 --> 02:20:11,000
结果听了之后发现真的这么长

4420
02:20:11,000 --> 02:20:12,000
说谢谢你们

4421
02:20:14,000 --> 02:20:14,000
好吧

4422
02:20:14,000 --> 02:20:15,000
很不习惯

4423
02:20:15,000 --> 02:20:15,000
是不是

4424
02:20:16,000 --> 02:20:16,000
对

4425
02:20:18,000 --> 02:20:18,000
好了

4426
02:20:18,000 --> 02:20:21,000
那您刚刚收听到的是

4427
02:20:21,000 --> 02:20:24,000
IPN podcast 的网络旗下的 IT 技术节目

4428
02:20:24,000 --> 02:20:25,000
那个活广告

4429
02:20:26,000 --> 02:20:29,000
IPN 旗下的其他六档的 podcast

4430
02:20:29,000 --> 02:20:31,000
包括 softcore 技术的节目

4431
02:20:31,000 --> 02:20:31,000
IT 公论

4432
02:20:32,000 --> 02:20:33,000
医疗主题节目太一来了

4433
02:20:33,000 --> 02:20:35,000
美食主题节目为之道

4434
02:20:35,000 --> 02:20:36,000
艺术主题节目流行通信

4435
02:20:36,000 --> 02:20:38,000
无主题节目无资源

4436
02:20:38,000 --> 02:20:40,000
故事主题节目 Highstory

4437
02:20:40,000 --> 02:20:43,000
以及影像主题节目

4438
02:20:43,000 --> 02:20:45,000
影像同样欢迎收听

4439
02:20:47,000 --> 02:20:48,000
欢迎你为我们的节目捐款

4440
02:20:48,000 --> 02:20:50,000
捐款的确是 ipn.li.cl

4441
02:20:50,000 --> 02:20:52,000
cernopanic.cl.donate

4442
02:20:52,000 --> 02:20:53,000
捐款进口所欲

4443
02:20:53,000 --> 02:20:56,000
只要是能够被八整除了证损数就可以

4444
02:20:57,000 --> 02:20:58,000
上一次我们的

4445
02:20:58,000 --> 02:20:59,000
上一次我

4446
02:21:00,000 --> 02:21:01,000
撒字毁了之后

4447
02:21:02,000 --> 02:21:03,000
恳求各位捐款

4448
02:21:03,000 --> 02:21:06,000
然后好像的确有几笔捐起来

4449
02:21:06,000 --> 02:21:07,000
但没比又是八美元

4450
02:21:09,000 --> 02:21:10,000
非常感谢各位

4451
02:21:11,000 --> 02:21:13,000
虽然捐款不会

4452
02:21:13,000 --> 02:21:13,000
不会为你搭载什么

4453
02:21:13,000 --> 02:21:15,000
不觉得也不会让你试试

4454
02:21:15,000 --> 02:21:16,000
我们的口号是

4455
02:21:16,000 --> 02:21:17,000
no.fillingth

4456
02:21:17,000 --> 02:21:19,000
感谢你收听本期节目

4457
02:21:19,000 --> 02:21:20,000
下期再见

4458
02:21:20,000 --> 02:21:20,000
拜拜

