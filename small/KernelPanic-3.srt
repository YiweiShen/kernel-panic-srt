1
00:00:00,000 --> 00:00:06,000
321 开始

2
00:00:06,000 --> 00:00:11,000
你来开场啊

3
00:00:11,000 --> 00:00:14,000
OK

4
00:00:14,000 --> 00:00:18,000
这回该说我可能失去了

5
00:00:24,000 --> 00:00:28,000
全球协调时

6
00:00:29,000 --> 00:00:31,000
不对不对 UTC 是什么来着 协调世界是

7
00:00:31,000 --> 00:00:33,000
我不知道它中文名字叫什么

8
00:00:33,000 --> 00:00:36,000
Universal Coordinated Time

9
00:00:39,000 --> 00:00:42,000
这是法语 这是法语的

10
00:00:46,000 --> 00:00:50,000
现在是协调世界是 UTC H.M.F.N.

11
00:00:50,000 --> 00:00:57,000
您正在收听的 或者正在反复一听再听的是内核狗狂一档 IT 的 Podcast 节目

12
00:00:58,000 --> 00:01:01,000
这是我的书程是我武汤还有 Rail

13
00:01:01,000 --> 00:01:04,000
OK 在今天的节目正式开始之前

14
00:01:04,000 --> 00:01:09,000
我们做一个什么 Follow-up 点称 FU

15
00:01:09,000 --> 00:01:12,000
对 在扩别的两周之后

16
00:01:12,000 --> 00:01:16,000
大家有听到我们声音的这两周之间也有一些反馈

17
00:01:16,000 --> 00:01:23,000
但实际上我们这期节目不是在真正的您听到这期节目的前一天或者前两天的录的

18
00:01:23,000 --> 00:01:25,000
具体什么时候我们的保密

19
00:01:25,000 --> 00:01:29,000
但目前我们所得到的一些反馈是

20
00:01:29,000 --> 00:01:34,000
一位也是姓吴的推友在推特上告诉我说

21
00:01:34,000 --> 00:01:42,000
如果想要在 HipHackin Keyboard 上面使用 HJKL 做方向键的话

22
00:01:42,000 --> 00:01:47,000
可以去加装一个叫做 TMK Analyne Keyboard Mod

23
00:01:47,000 --> 00:01:51,000
然后这个 mod 的 我记得我以前应该看到过这个东西

24
00:01:51,000 --> 00:01:57,000
它的根本的理念就是在这个 HKB 上面加装一块

25
00:01:57,000 --> 00:02:01,000
使用 ARM 处理器的开发板

26
00:02:01,000 --> 00:02:07,000
然后在这个开发板上烧录一个控制器

27
00:02:07,000 --> 00:02:15,000
然后通过这个控制器做键盘和主机之间的传输 convert

28
00:02:15,000 --> 00:02:16,000
可以这么说

29
00:02:16,000 --> 00:02:18,000
然后就可以让你翻译了一下 对吧

30
00:02:19,000 --> 00:02:25,000
对 然后这样就可以自定力 HipHackin Keyboard 上面的一些键有些功能

31
00:02:25,000 --> 00:02:30,000
比如说它有一个比较经典的 mod 是用空格键做的当做 fn

32
00:02:30,000 --> 00:02:32,000
也就是说在你按下空格键的时候

33
00:02:32,000 --> 00:02:33,000
你就可以去按 123

34
00:02:33,000 --> 00:02:35,000
然后这个时候 123 就是 fvfrf 3

35
00:02:35,000 --> 00:02:43,000
但是我是觉得要在上面加一个 TZ 开发板

36
00:02:43,000 --> 00:02:46,000
推荐了一个开发板 然后 TZ 开发板 这个开发板足够小

37
00:02:46,000 --> 00:02:49,000
并且可以塞进这个键盘的内部

38
00:02:49,000 --> 00:02:53,000
可我觉得拆开键盘塞一个开发板进去

39
00:02:53,000 --> 00:02:56,000
然后焊什么的 还是太麻烦了

40
00:02:56,000 --> 00:02:57,000
这你就不够硬核了

41
00:02:57,000 --> 00:03:00,000
人家都自己组装从那个什么

42
00:03:00,000 --> 00:03:03,000
从零部件开始组装键盘了

43
00:03:03,000 --> 00:03:04,000
对 没错

44
00:03:04,000 --> 00:03:07,000
就是说明我还是硬核精神不够

45
00:03:07,000 --> 00:03:11,000
需要还是需要来试一试这件事情

46
00:03:11,000 --> 00:03:15,000
而且你就守着离那个 cherry 场那么近对吧

47
00:03:15,000 --> 00:03:17,000
这个跟他们没关系

48
00:03:17,000 --> 00:03:19,000
我总不能去他们要几个

49
00:03:19,000 --> 00:03:20,000
我总不能去跟他们要几个招

50
00:03:20,000 --> 00:03:22,000
你意思是我买一堆招来

51
00:03:22,000 --> 00:03:23,000
然后自己做一个键盘

52
00:03:23,000 --> 00:03:24,000
对 这两天全天来

53
00:03:24,000 --> 00:03:29,000
什么还肯就上不是有个人就这么干了吗

54
00:03:29,000 --> 00:03:30,000
你送一个 3 D 打印机

55
00:03:30,000 --> 00:03:33,000
这才是真正的硬核

56
00:03:33,000 --> 00:03:36,000
对 其实开源的键盘键盘

57
00:03:36,000 --> 00:03:37,000
我以前也见过一个

58
00:03:37,000 --> 00:03:40,000
就是完全 DIY 来制作

59
00:03:40,000 --> 00:03:42,000
而且网上可以买到它的图纸

60
00:03:42,000 --> 00:03:46,000
而且我相信那个键盘的壳子就上 3 D 打印机了

61
00:03:46,000 --> 00:03:50,000
对这样出来的那个就是手感和这个材料

62
00:03:50,000 --> 00:03:53,000
就做工会存疑吧

63
00:03:53,000 --> 00:03:55,000
很难说

64
00:03:55,000 --> 00:03:58,000
我是比较相信现在的 3 D 打印机

65
00:03:58,000 --> 00:04:02,000
还没能达到我们一个键盘需要的模具的精度

66
00:04:02,000 --> 00:04:05,000
对 这个是一个挺麻烦的事情

67
00:04:05,000 --> 00:04:08,000
而且就如果 3 D 打印真的能做到那个精度

68
00:04:08,000 --> 00:04:09,000
我就想打了

69
00:04:09,000 --> 00:04:12,000
还是上次我们说那个 keycap

70
00:04:12,000 --> 00:04:14,000
就 keyboard 应该

71
00:04:14,000 --> 00:04:15,000
对 红红红的

72
00:04:15,000 --> 00:04:16,000
我现在想想看

73
00:04:16,000 --> 00:04:18,000
红红红的是那个

74
00:04:18,000 --> 00:04:19,000
厨房板吗

75
00:04:19,000 --> 00:04:20,000
对 不是

76
00:04:20,000 --> 00:04:21,000
是叫什么

77
00:04:21,000 --> 00:04:22,000
哥板

78
00:04:22,000 --> 00:04:23,000
不是 厨柜的意思

79
00:04:23,000 --> 00:04:24,000
红红红的

80
00:04:24,000 --> 00:04:26,000
放红红红的

81
00:04:27,000 --> 00:04:28,000
OK

82
00:04:28,000 --> 00:04:32,000
另外一个 follow up 是有人说

83
00:04:32,000 --> 00:04:35,000
我们第一期的时候讲到

84
00:04:35,000 --> 00:04:37,000
说德国的很多车

85
00:04:37,000 --> 00:04:40,000
还有加拿大的很多车的油箱盖是没法锁的

86
00:04:40,000 --> 00:04:44,000
然后他说是油箱盖的锁是由中控锁控制的

87
00:04:44,000 --> 00:04:46,000
锁车后应该就打不开了

88
00:04:46,000 --> 00:04:47,000
对 这个就是

89
00:04:47,000 --> 00:04:48,000
这个它应该是这样的

90
00:04:48,000 --> 00:04:50,000
可是它就不是这样的

91
00:04:50,000 --> 00:04:51,000
你确定吗

92
00:04:51,000 --> 00:04:52,000
对 我确定

93
00:04:52,000 --> 00:04:54,000
就是当你又遥控

94
00:04:54,000 --> 00:04:56,000
就是你下车然后遥控钥匙吧

95
00:04:56,000 --> 00:04:58,000
车锁了之后你终究可以打开油箱盖

96
00:04:58,000 --> 00:04:59,000
对的

97
00:04:59,000 --> 00:05:00,000
Holy shit

98
00:05:00,000 --> 00:05:01,000
不难的话

99
00:05:01,000 --> 00:05:04,000
中共所说之后这个事情就不存在这个问题了

100
00:05:04,000 --> 00:05:05,000
对吧

101
00:05:05,000 --> 00:05:06,000
这个就是 secure design

102
00:05:06,000 --> 00:05:08,000
但是为什么要吐槽它

103
00:05:08,000 --> 00:05:10,000
就是因为它不是这样的

104
00:05:10,000 --> 00:05:11,000
OK

105
00:05:11,000 --> 00:05:14,000
所以这个真的是一个挺严重的问题

106
00:05:14,000 --> 00:05:15,000
而且我觉得

107
00:05:15,000 --> 00:05:17,000
好像日系车都没什么这个问题

108
00:05:17,000 --> 00:05:20,000
就是 Geep 这个系列发现全部都是这样

109
00:05:20,000 --> 00:05:21,000
不知道为什么

110
00:05:21,000 --> 00:05:22,000
美国人比较信任别人

111
00:05:22,000 --> 00:05:24,000
可能是当初美国人

112
00:05:24,000 --> 00:05:27,000
即便现在美国油价也是非常非常便宜的

113
00:05:27,000 --> 00:05:29,000
这个拖油都算了

114
00:05:29,000 --> 00:05:31,000
万一有什么三长两的

115
00:05:31,000 --> 00:05:33,000
你看那个什么电影里面

116
00:05:33,000 --> 00:05:35,000
最常见的一个什么镜头

117
00:05:35,000 --> 00:05:37,000
什么男主角或者是一个坏

118
00:05:37,000 --> 00:05:40,000
就是坏什么坏一号

119
00:05:40,000 --> 00:05:42,000
跑到路接着去要制造一起什么

120
00:05:42,000 --> 00:05:44,000
destruction 的时候

121
00:05:44,000 --> 00:05:45,000
就把油箱盖拧开

122
00:05:45,000 --> 00:05:46,000
然后丢个什么烟头进去

123
00:05:46,000 --> 00:05:48,000
然后自己很消砸的走

124
00:05:48,000 --> 00:05:49,000
然后过了十几秒

125
00:05:49,000 --> 00:05:50,000
就爆炸了

126
00:05:50,000 --> 00:05:55,000
Breaking Bad 里面的那个老白就把他的车这样烧了

127
00:05:55,000 --> 00:05:56,000
对呀

128
00:05:56,000 --> 00:05:57,000
你就觉得这个事情

129
00:05:57,000 --> 00:06:01,000
这是多么一个多明显的一个 security fault

130
00:06:01,000 --> 00:06:02,000
是

131
00:06:02,000 --> 00:06:03,000
的确

132
00:06:03,000 --> 00:06:05,000
应该去酷儿之类的地方问一问

133
00:06:05,000 --> 00:06:06,000
到底说为什么

134
00:06:06,000 --> 00:06:07,000
对 它怎么想

135
00:06:07,000 --> 00:06:09,000
就好像其实还有一个问题

136
00:06:09,000 --> 00:06:13,000
就是包括很多非常现代的车

137
00:06:13,000 --> 00:06:15,000
就是大众的车

138
00:06:15,000 --> 00:06:18,000
它的车灯在你离开驾驶舱

139
00:06:18,000 --> 00:06:19,000
拔了钥匙之后

140
00:06:19,000 --> 00:06:20,000
如果你不把

141
00:06:20,000 --> 00:06:23,000
如果你不在驾驶舱里面把车灯关掉

142
00:06:23,000 --> 00:06:24,000
车灯会一直亮着

143
00:06:24,000 --> 00:06:25,000
直到电池耗尽为止

144
00:06:25,000 --> 00:06:26,000
不会是吧

145
00:06:26,000 --> 00:06:27,000
这个我先

146
00:06:27,000 --> 00:06:28,000
现在车还这样吗

147
00:06:28,000 --> 00:06:30,000
有些很有很多车都是这样的

148
00:06:30,000 --> 00:06:32,000
我们在冰岛就看到这样的车

149
00:06:32,000 --> 00:06:33,000
直到它电池

150
00:06:33,000 --> 00:06:35,000
就是看到那个灯一点点熄灭

151
00:06:35,000 --> 00:06:37,000
都没有人知道那样的车是谁的

152
00:06:37,000 --> 00:06:40,000
我还以为至少是可能最近几年

153
00:06:40,000 --> 00:06:42,000
就是坐的车

154
00:06:42,000 --> 00:06:43,000
它有那个功能

155
00:06:43,000 --> 00:06:45,000
就是延时关灯

156
00:06:45,000 --> 00:06:49,000
对 有些车在你下车之后拔钥匙的时候

157
00:06:49,000 --> 00:06:50,000
如果你忘了关车灯

158
00:06:50,000 --> 00:06:52,000
它会滴滴滴报警

159
00:06:52,000 --> 00:06:55,000
但是如果你不理它的话

160
00:06:55,000 --> 00:06:57,000
它就会让灯一直开着

161
00:06:57,000 --> 00:06:59,000
防疫这是有什么用意的

162
00:06:59,000 --> 00:07:00,000
对 这个我知道

163
00:07:00,000 --> 00:07:03,000
我自己现在的那个车就是它会

164
00:07:03,000 --> 00:07:04,000
就你拔的钥匙

165
00:07:04,000 --> 00:07:05,000
你能下车锁上车

166
00:07:05,000 --> 00:07:06,000
能灯会亮一会

167
00:07:06,000 --> 00:07:08,000
然后它的那个用意是说

168
00:07:08,000 --> 00:07:10,000
很多的这个

169
00:07:10,000 --> 00:07:12,000
就是车是停车库里面

170
00:07:12,000 --> 00:07:13,000
对吧

171
00:07:13,000 --> 00:07:14,000
然后如果晚上的话

172
00:07:14,000 --> 00:07:15,000
比较黑的情况下

173
00:07:15,000 --> 00:07:17,000
它可以就照着你回去

174
00:07:17,000 --> 00:07:18,000
离开那个地方

175
00:07:18,000 --> 00:07:21,000
然后它再把那个灯洗掉

176
00:07:21,000 --> 00:07:22,000
对 我的车有这个功能

177
00:07:22,000 --> 00:07:25,000
但是只需要在钥匙上按一个键

178
00:07:25,000 --> 00:07:26,000
这个灯就会亮

179
00:07:26,000 --> 00:07:28,000
然后亮大概 40 秒 50 秒

180
00:07:28,000 --> 00:07:29,000
它就会自动熄灭

181
00:07:29,000 --> 00:07:30,000
对对对 不到

182
00:07:30,000 --> 00:07:32,000
它不会一直亮着

183
00:07:32,000 --> 00:07:34,000
还是有个选项可以把这个东西关掉

184
00:07:34,000 --> 00:07:35,000
还是你要忘

185
00:07:35,000 --> 00:07:36,000
我可能

186
00:07:36,000 --> 00:07:37,000
就是 3 号

187
00:07:37,000 --> 00:07:39,000
这绝对是一个很傻逼的设计之一

188
00:07:39,000 --> 00:07:41,000
而且后来这么讲

189
00:07:41,000 --> 00:07:43,000
就算是你又这个需要把那个车灯

190
00:07:43,000 --> 00:07:44,000
一直亮着

191
00:07:44,000 --> 00:07:45,000
比如说你在这个野外

192
00:07:45,000 --> 00:07:47,000
你要做什么事情对吧

193
00:07:47,000 --> 00:07:49,000
当把那个车灯当做一个照明的用意

194
00:07:49,000 --> 00:07:50,000
也可以

195
00:07:50,000 --> 00:07:52,000
那你这个车要做一个什么

196
00:07:52,000 --> 00:07:55,000
被用电源保证能够

197
00:07:55,000 --> 00:07:56,000
下次能点着对吧

198
00:07:56,000 --> 00:07:58,000
对 你至少应该在电量

199
00:07:58,000 --> 00:08:01,000
即将消耗到只够一次

200
00:08:01,000 --> 00:08:03,000
或者两次打火的时候

201
00:08:03,000 --> 00:08:04,000
把这个车灯切断吧

202
00:08:04,000 --> 00:08:06,000
对啊 结果 3 号它就

203
00:08:06,000 --> 00:08:08,000
还不管 接着用

204
00:08:08,000 --> 00:08:09,000
就烧光为止

205
00:08:09,000 --> 00:08:10,000
我觉得

206
00:08:10,000 --> 00:08:12,000
甚至有可能这个自动关灯的

207
00:08:12,000 --> 00:08:14,000
选功能是一个选项

208
00:08:14,000 --> 00:08:16,000
去加钱 没有钱就没有

209
00:08:16,000 --> 00:08:17,000
也不是没有可能

210
00:08:17,000 --> 00:08:18,000
因为很多德国厂

211
00:08:18,000 --> 00:08:20,000
非常黑心就一定要这样

212
00:08:20,000 --> 00:08:21,000
对我讲一个笑话好了

213
00:08:21,000 --> 00:08:23,000
反正已经说到这远了

214
00:08:23,000 --> 00:08:25,000
我之前工作的公司

215
00:08:25,000 --> 00:08:27,000
有一个德国人

216
00:08:27,000 --> 00:08:28,000
是我们的门房大爷

217
00:08:28,000 --> 00:08:31,000
就是德国几乎美东建筑

218
00:08:31,000 --> 00:08:32,000
都有一个人

219
00:08:32,000 --> 00:08:34,000
专门负责维护这种建筑的设施

220
00:08:34,000 --> 00:08:36,000
对 詹德

221
00:08:36,000 --> 00:08:38,000
詹德先生有一天跟我说

222
00:08:38,000 --> 00:08:42,000
他觉得德国的汽车厂商都是 uptalk

223
00:08:42,000 --> 00:08:44,000
骗子说要加太高了

224
00:08:44,000 --> 00:08:45,000
然后他说

225
00:08:45,000 --> 00:08:46,000
我觉得日本车挺好

226
00:08:46,000 --> 00:08:48,000
我说您觉得日本

227
00:08:48,000 --> 00:08:50,000
哪个日本车的牌子好呢

228
00:08:50,000 --> 00:08:51,000
他想我想说

229
00:08:51,000 --> 00:08:52,000
嗯 现代

230
00:08:56,000 --> 00:08:57,000
不过差不多

231
00:08:57,000 --> 00:08:59,000
什么 story

232
00:08:59,000 --> 00:09:01,000
日本 韩国 啥啥分不清楚

233
00:09:01,000 --> 00:09:02,000
也还不知道

234
00:09:02,000 --> 00:09:03,000
不过他这个事情

235
00:09:03,000 --> 00:09:04,000
我觉得反映了个现实

236
00:09:04,000 --> 00:09:07,000
就是日系还有特别像在韩系场上

237
00:09:07,000 --> 00:09:10,000
在人性化这方面

238
00:09:10,000 --> 00:09:11,000
当然人性化就体现在

239
00:09:11,000 --> 00:09:13,000
车内的一些电子装备

240
00:09:13,000 --> 00:09:16,000
一些怎么让你省心和舒坦的

241
00:09:16,000 --> 00:09:18,000
这么一些小配件上

242
00:09:18,000 --> 00:09:19,000
还做的挺好的

243
00:09:19,000 --> 00:09:21,000
本来其实这东西也花不了多少钱

244
00:09:21,000 --> 00:09:22,000
对吧

245
00:09:22,000 --> 00:09:23,000
比如说他给你搞个什么

246
00:09:23,000 --> 00:09:27,000
我想是最前几年还比较火的那个蓝牙

247
00:09:27,000 --> 00:09:29,000
你知道很多蓝牙是

248
00:09:29,000 --> 00:09:30,000
就现在的车都可能都没有这个问题

249
00:09:30,000 --> 00:09:31,000
前几年的车

250
00:09:31,000 --> 00:09:32,000
蓝牙它是分两种的

251
00:09:32,000 --> 00:09:35,000
一种是就只能联手即打电话的

252
00:09:35,000 --> 00:09:39,000
然后另外一种是可以联立体生音乐

253
00:09:39,000 --> 00:09:42,000
然后就有很多这种

254
00:09:42,000 --> 00:09:44,000
协议级别

255
00:09:44,000 --> 00:09:45,000
是不同的协议

256
00:09:45,000 --> 00:09:46,000
蓝牙那个叫什么

257
00:09:46,000 --> 00:09:47,000
协议级别

258
00:09:47,000 --> 00:09:49,000
对他会传输掉要求会高一点

259
00:09:49,000 --> 00:09:51,000
但是这个东西成本也就是

260
00:09:51,000 --> 00:09:52,000
几美元的事情对吧

261
00:09:52,000 --> 00:09:53,000
对

262
00:09:53,000 --> 00:09:55,000
然后但是你会发现很多这种

263
00:09:55,000 --> 00:09:56,000
日韩系的场上

264
00:09:56,000 --> 00:09:58,000
他会把这两个功能都给做进去

265
00:09:58,000 --> 00:10:00,000
就是 for free 你就有了

266
00:10:00,000 --> 00:10:02,000
然后你看很多这种

267
00:10:02,000 --> 00:10:03,000
特别是德性

268
00:10:03,000 --> 00:10:04,000
他就会

269
00:10:04,000 --> 00:10:06,000
标配是没有这个蓝牙功能的

270
00:10:06,000 --> 00:10:07,000
对

271
00:10:07,000 --> 00:10:08,000
然后稍微有点什么

272
00:10:08,000 --> 00:10:11,000
你再加一千美元

273
00:10:11,000 --> 00:10:12,000
给你一个通话的功能

274
00:10:12,000 --> 00:10:13,000
再加一千美元

275
00:10:13,000 --> 00:10:15,000
给你一个这个就是播放

276
00:10:15,000 --> 00:10:16,000
多媒体

277
00:10:16,000 --> 00:10:17,000
蓝牙播放多媒体的功能

278
00:10:17,000 --> 00:10:18,000
你会觉得

279
00:10:18,000 --> 00:10:19,000
对

280
00:10:19,000 --> 00:10:20,000
就是什么

281
00:10:20,000 --> 00:10:21,000
就是

282
00:10:21,000 --> 00:10:22,000
你会觉得这个就是完全

283
00:10:22,000 --> 00:10:23,000
你作为一个他的一个用户

284
00:10:23,000 --> 00:10:24,000
好

285
00:10:24,000 --> 00:10:25,000
但是很多人说

286
00:10:25,000 --> 00:10:26,000
买得起那个什么

287
00:10:26,000 --> 00:10:27,000
奔驰房的

288
00:10:27,000 --> 00:10:29,000
根本不 care 这种事情对吧

289
00:10:29,000 --> 00:10:30,000
但是

290
00:10:30,000 --> 00:10:31,000
你能

291
00:10:32,000 --> 00:10:33,000
对

292
00:10:33,000 --> 00:10:35,000
所以所以也无怪乎

293
00:10:35,000 --> 00:10:36,000
像北美你可以一看到

294
00:10:36,000 --> 00:10:37,000
德国的例子就不说

295
00:10:37,000 --> 00:10:39,000
德国是个特殊的国家

296
00:10:39,000 --> 00:10:40,000
但你看北美的话

297
00:10:40,000 --> 00:10:42,000
街上跑的大部分还是日期车

298
00:10:42,000 --> 00:10:44,000
这个还是有一定的道理的

299
00:10:44,000 --> 00:10:45,000
对

300
00:10:46,000 --> 00:10:47,000
德国人

301
00:10:48,000 --> 00:10:49,000
对

302
00:10:49,000 --> 00:10:50,000
太过祸了

303
00:10:50,000 --> 00:10:51,000
只能这么理解

304
00:10:51,000 --> 00:10:52,000
对

305
00:10:52,000 --> 00:10:53,000
对

306
00:10:53,000 --> 00:10:54,000
好

307
00:10:54,000 --> 00:10:55,000
两个 follow up 之后

308
00:10:55,000 --> 00:10:56,000
我们进

309
00:10:56,000 --> 00:10:57,000
转入今天的正题吧

310
00:10:57,000 --> 00:10:59,000
所以今天我们要讲的一个题目

311
00:10:59,000 --> 00:11:00,000
叫做

312
00:11:01,000 --> 00:11:03,000
Static-side generators

313
00:11:04,000 --> 00:11:05,000
对

314
00:11:05,000 --> 00:11:07,000
静态网站生成器

315
00:11:07,000 --> 00:11:09,000
Static-side 就给上次的键盘

316
00:11:09,000 --> 00:11:11,000
要 Hackle 一点

317
00:11:11,000 --> 00:11:13,000
为了拟补我们上次不够 Hackle 的

318
00:11:13,000 --> 00:11:15,000
不过上期节目的反响好像挺好

319
00:11:15,000 --> 00:11:17,000
至少我女朋友听了很开心

320
00:11:17,000 --> 00:11:19,000
她说她要换新键盘

321
00:11:19,000 --> 00:11:20,000
太难了你

322
00:11:23,000 --> 00:11:27,000
所以什么是静态网站生成器

323
00:11:27,000 --> 00:11:29,000
这其实并不是所有人都知道这个概念

324
00:11:30,000 --> 00:11:31,000
对

325
00:11:31,000 --> 00:11:32,000
虽然我有点不住想说

326
00:11:32,000 --> 00:11:34,000
不知道这个概念就不适合定乎

327
00:11:35,000 --> 00:11:36,000
我发现我们每期

328
00:11:36,000 --> 00:11:37,000
都已经通

329
00:11:37,000 --> 00:11:39,000
因为种种原因流失了一部分观众

330
00:11:40,000 --> 00:11:41,000
听众

331
00:11:43,000 --> 00:11:44,000
对还是解释一下吧

332
00:11:44,000 --> 00:11:48,000
其实静态网站生成器的理念非常简单

333
00:11:48,000 --> 00:11:49,000
就是

334
00:11:51,000 --> 00:11:52,000
生成一些

335
00:11:53,000 --> 00:11:54,000
静态的方式

336
00:11:56,000 --> 00:11:57,000
不对

337
00:11:57,000 --> 00:11:58,000
反了

338
00:11:58,000 --> 00:11:59,000
反了

339
00:11:59,000 --> 00:12:00,000
我应该是先过来

340
00:12:00,000 --> 00:12:02,000
自开始我们做个人主页的时候

341
00:12:02,000 --> 00:12:03,000
大家都应该还记得挺清楚

342
00:12:03,000 --> 00:12:04,000
就是用什么

343
00:12:04,000 --> 00:12:05,000
就是用什么

344
00:12:06,000 --> 00:12:07,000
DreamMiver

345
00:12:07,000 --> 00:12:10,000
还是手工写一个 html 的代码

346
00:12:10,000 --> 00:12:13,000
然后秘密成 index.html

347
00:12:13,000 --> 00:12:15,000
或者 index.htm

348
00:12:15,000 --> 00:12:17,000
htm 文件

349
00:12:17,000 --> 00:12:20,000
然后放在网页服务器的某一个

350
00:12:21,000 --> 00:12:23,000
就是你的 user 目录里面

351
00:12:23,000 --> 00:12:24,000
然后那个时候

352
00:12:24,000 --> 00:12:25,000
大家很多人还没有

353
00:12:25,000 --> 00:12:27,000
私有服务器的概念

354
00:12:27,000 --> 00:12:28,000
很多人放到是一个

355
00:12:28,000 --> 00:12:30,000
共享的服务器有一个 tilt

356
00:12:30,000 --> 00:12:32,000
你看你的用户名这么一个目录下面

357
00:12:32,000 --> 00:12:33,000
对吧

358
00:12:33,000 --> 00:12:34,000
对

359
00:12:34,000 --> 00:12:35,000
波浪线

360
00:12:35,000 --> 00:12:36,000
然后用户名

361
00:12:36,000 --> 00:12:37,000
对

362
00:12:37,000 --> 00:12:39,000
然后你去访问这个网者

363
00:12:39,000 --> 00:12:40,000
比如说我记得我大学的时候

364
00:12:40,000 --> 00:12:43,000
比如说这个学校名字是 sysu.edu.sen

365
00:12:43,000 --> 00:12:45,000
然后有个鞋杠 tilt 的

366
00:12:45,000 --> 00:12:47,000
我的这个选择的用户名

367
00:12:47,000 --> 00:12:48,000
就访问那个地址

368
00:12:48,000 --> 00:12:50,000
就可以打开我的这个叫什么

369
00:12:50,000 --> 00:12:51,000
个人主页了

370
00:12:52,000 --> 00:12:53,000
这个

371
00:12:53,000 --> 00:12:54,000
即便现在

372
00:12:54,000 --> 00:12:56,000
即便现在还是有非常非常多的计算机大扭

373
00:12:56,000 --> 00:12:59,000
尤其是那些在教授里面拿

374
00:12:59,000 --> 00:13:01,000
在学校里面拿

375
00:13:01,000 --> 00:13:03,000
教授叫 tenor

376
00:13:03,000 --> 00:13:05,000
中生教授

377
00:13:05,000 --> 00:13:07,000
中生教职奖

378
00:13:07,000 --> 00:13:08,000
对

379
00:13:08,000 --> 00:13:09,000
中生教职奖金

380
00:13:09,000 --> 00:13:10,000
中生教职心

381
00:13:10,000 --> 00:13:11,000
就是中生

382
00:13:11,000 --> 00:13:12,000
这段我去保球

383
00:13:12,000 --> 00:13:14,000
这段我去

384
00:13:14,000 --> 00:13:15,000
tenure position

385
00:13:15,000 --> 00:13:16,000
对

386
00:13:16,000 --> 00:13:17,000
tenure position

387
00:13:17,000 --> 00:13:18,000
对

388
00:13:18,000 --> 00:13:19,000
OK 重组

389
00:13:19,000 --> 00:13:20,000
即便现在

390
00:13:20,000 --> 00:13:22,000
很多大学的教授

391
00:13:22,000 --> 00:13:25,000
也在他们拿到他们的这个

392
00:13:25,000 --> 00:13:28,000
中生薪水的同时

393
00:13:28,000 --> 00:13:30,000
一直使用着

394
00:13:30,000 --> 00:13:32,000
我觉得一个账号

395
00:13:32,000 --> 00:13:34,000
来做他们的个人主义

396
00:13:34,000 --> 00:13:35,000
比如我没记错的话

397
00:13:35,000 --> 00:13:36,000
可能高德纳

398
00:13:36,000 --> 00:13:38,000
应该就是一直是这样的

399
00:13:38,000 --> 00:13:39,000
很多人都是吧

400
00:13:39,000 --> 00:13:41,000
就在学术圈子很少

401
00:13:41,000 --> 00:13:42,000
就他会

402
00:13:42,000 --> 00:13:43,000
这样会显得比较

403
00:13:43,000 --> 00:13:44,000
我不知道

404
00:13:44,000 --> 00:13:46,000
可能成为一种约定俗

405
00:13:46,000 --> 00:13:48,000
比较比较 time on it

406
00:13:48,000 --> 00:13:50,000
你打开别人的那些

407
00:13:50,000 --> 00:13:51,000
新潮

408
00:13:51,000 --> 00:13:53,000
弄潮而来的网页

409
00:13:53,000 --> 00:13:54,000
一个一个美丽的

410
00:13:54,000 --> 00:13:55,000
跟什么一样

411
00:13:55,000 --> 00:13:56,000
然后打开他们的网页

412
00:13:56,000 --> 00:13:58,000
我靠一个必顾七十代的风格

413
00:13:58,000 --> 00:13:59,000
风格风格来

414
00:13:59,000 --> 00:14:00,000
对

415
00:14:00,000 --> 00:14:01,000
对

416
00:14:01,000 --> 00:14:02,000
这是其实这是

417
00:14:02,000 --> 00:14:04,000
正耳巴顶的第一代的 static sight

418
00:14:04,000 --> 00:14:05,000
对

419
00:14:05,000 --> 00:14:06,000
但是他们不一定是用

420
00:14:06,000 --> 00:14:07,000
generator generator

421
00:14:07,000 --> 00:14:08,000
可能是手

422
00:14:08,000 --> 00:14:09,000
他

423
00:14:09,000 --> 00:14:10,000
他

424
00:14:10,000 --> 00:14:11,000
其实也有

425
00:14:11,000 --> 00:14:12,000
其实他是有用那个什么

426
00:14:12,000 --> 00:14:13,000
就是

427
00:14:13,000 --> 00:14:15,000
你说 dreammaver 算不算一个 generator

428
00:14:15,000 --> 00:14:16,000
算其实

429
00:14:16,000 --> 00:14:17,000
我觉得不算

430
00:14:17,000 --> 00:14:18,000
dreammaver 只能算一个

431
00:14:18,000 --> 00:14:19,000
editor

432
00:14:19,000 --> 00:14:21,000
all the software

433
00:14:21,000 --> 00:14:22,000
好吧

434
00:14:22,000 --> 00:14:23,000
然后他会把这个网页

435
00:14:23,000 --> 00:14:24,000
放到那个服务器上

436
00:14:24,000 --> 00:14:25,000
就可以发问了

437
00:14:25,000 --> 00:14:26,000
然后这个

438
00:14:26,000 --> 00:14:27,000
你就发问那个网址

439
00:14:27,000 --> 00:14:28,000
天天不变

440
00:14:28,000 --> 00:14:29,000
都是那个网页长那个样

441
00:14:29,000 --> 00:14:30,000
就叫静态

442
00:14:30,000 --> 00:14:31,000
不会变

443
00:14:31,000 --> 00:14:32,000
然后这个就是一个

444
00:14:32,000 --> 00:14:34,000
所谓的 static sight

445
00:14:34,000 --> 00:14:35,000
然后后来的趋势

446
00:14:35,000 --> 00:14:36,000
变成了那个

447
00:14:36,000 --> 00:14:38,000
叫什么动态网站

448
00:14:38,000 --> 00:14:39,000
这个是大概是在

449
00:14:39,000 --> 00:14:41,000
00 年左右吧

450
00:14:41,000 --> 00:14:43,000
就是 00 年到

451
00:14:43,000 --> 00:14:44,000
100 年这段时间

452
00:14:44,000 --> 00:14:46,000
随时改革开放的

453
00:14:46,000 --> 00:14:47,000
这段神话

454
00:14:47,000 --> 00:14:48,000
以及这个互联网技术

455
00:14:48,000 --> 00:14:49,000
日新月异

456
00:14:49,000 --> 00:14:50,000
人们发现

457
00:14:50,000 --> 00:14:53,000
很多内容其实是可以

458
00:14:53,000 --> 00:14:54,000
当时他问的时候

459
00:14:54,000 --> 00:14:56,000
我才生成出来

460
00:14:56,000 --> 00:14:57,000
送给他看的

461
00:14:57,000 --> 00:14:58,000
对

462
00:14:58,000 --> 00:15:00,000
其实这就是动态网站的

463
00:15:00,000 --> 00:15:01,000
根本意义

464
00:15:01,000 --> 00:15:02,000
就是动态网站上

465
00:15:02,000 --> 00:15:04,000
一般也许会有一个数据库

466
00:15:04,000 --> 00:15:06,000
然后有一堆程序

467
00:15:06,000 --> 00:15:07,000
然后有一堆一些

468
00:15:07,000 --> 00:15:08,000
写好的模板

469
00:15:08,000 --> 00:15:10,000
然后当一个来访

470
00:15:10,000 --> 00:15:12,000
访客来访的你的网站的时候

471
00:15:12,000 --> 00:15:13,000
这些程序

472
00:15:13,000 --> 00:15:15,000
从数据库里面取出数据

473
00:15:15,000 --> 00:15:16,000
然后把这些数据

474
00:15:16,000 --> 00:15:17,000
填进模板里面

475
00:15:17,000 --> 00:15:18,000
然后动态生成一个网页

476
00:15:18,000 --> 00:15:19,000
对

477
00:15:19,000 --> 00:15:20,000
来给访客看

478
00:15:20,000 --> 00:15:21,000
这就是动态网站

479
00:15:21,000 --> 00:15:22,000
对

480
00:15:22,000 --> 00:15:23,000
这有些人就可能解释了

481
00:15:23,000 --> 00:15:25,000
什么是动态的静态

482
00:15:25,000 --> 00:15:28,000
但是最近这两三年

483
00:15:28,000 --> 00:15:31,000
以某什么叫 JECKL

484
00:15:31,000 --> 00:15:33,000
为代表的静态网站生成器

485
00:15:33,000 --> 00:15:34,000
又崛起了

486
00:15:34,000 --> 00:15:35,000
然后这个时候

487
00:15:35,000 --> 00:15:36,000
来 武道姐姐

488
00:15:36,000 --> 00:15:38,000
你觉得什么才叫一个生成器

489
00:15:41,000 --> 00:15:43,000
所谓生成器

490
00:15:43,000 --> 00:15:45,000
其实就是能够按照你

491
00:15:45,000 --> 00:15:47,000
预先定义的一组规则

492
00:15:47,000 --> 00:15:52,000
然后自动为你写好的一些

493
00:15:52,000 --> 00:15:55,000
通常是某种纯纹本格式的内容

494
00:15:55,000 --> 00:15:58,000
生成一大堆静态的网页

495
00:15:58,000 --> 00:16:02,000
然后就像最古老的那种静态网站一样

496
00:16:02,000 --> 00:16:07,000
让你可以不需要任何动态的程序

497
00:16:07,000 --> 00:16:08,000
然后放在网上的某一个地方

498
00:16:08,000 --> 00:16:10,000
供人浏览的工具

499
00:16:10,000 --> 00:16:12,000
就叫做动态网站生成器

500
00:16:12,000 --> 00:16:13,000
OK

501
00:16:13,000 --> 00:16:17,000
所以就从你个人的角度来讲

502
00:16:17,000 --> 00:16:18,000
你觉得

503
00:16:18,000 --> 00:16:21,000
比如你现在博客站点是用什么写的

504
00:16:21,000 --> 00:16:23,000
WarpPress 还是

505
00:16:23,000 --> 00:16:24,000
Jocop

506
00:16:24,000 --> 00:16:25,000
所以

507
00:16:25,000 --> 00:16:28,000
但是我记得你之前是用 WarpPress 写的

508
00:16:28,000 --> 00:16:32,000
我之前是用一个自己写的 CMS

509
00:16:32,000 --> 00:16:36,000
甚至不算 CMS 是一个自己写的 Blog 系统

510
00:16:36,000 --> 00:16:37,000
是用 Lua 写的

511
00:16:37,000 --> 00:16:38,000
是动态的吗 还是静态的

512
00:16:38,000 --> 00:16:39,000
是半动态

513
00:16:39,000 --> 00:16:41,000
因为它没有数据库

514
00:16:41,000 --> 00:16:43,000
就是文件里面拿嘛

515
00:16:43,000 --> 00:16:45,000
就是我有一堆成文文件

516
00:16:45,000 --> 00:16:46,000
然后你访问的时候

517
00:16:46,000 --> 00:16:50,000
它把这边的成文文件和 Template 结合在一起

518
00:16:50,000 --> 00:16:51,000
OK

519
00:16:51,000 --> 00:16:53,000
所以这里有个很关键的问题

520
00:16:53,000 --> 00:16:54,000
我觉得可能一定要解释清楚

521
00:16:54,000 --> 00:16:56,000
也是很多人在纠结

522
00:16:56,000 --> 00:16:57,000
我相信听众里面

523
00:16:57,000 --> 00:16:58,000
如果你程序员的话

524
00:16:58,000 --> 00:17:01,000
或多或少会有这种纠结的事情

525
00:17:01,000 --> 00:17:05,000
当初你是怎么决定要从一个动态

526
00:17:05,000 --> 00:17:07,000
或者是半动态的系统

527
00:17:07,000 --> 00:17:12,000
变成一个完全静态的博客来做呢

528
00:17:12,000 --> 00:17:14,000
其实我觉得在我身上

529
00:17:14,000 --> 00:17:18,000
很简单就是跟风吧

530
00:17:18,000 --> 00:17:20,000
或者是其实有两方面的原因

531
00:17:20,000 --> 00:17:22,000
一方面是跟风

532
00:17:22,000 --> 00:17:26,000
因为这个 Jaco 这个东西是由 Tom Preston-Vaner

533
00:17:26,000 --> 00:17:28,000
写的就是 Github 的

534
00:17:28,000 --> 00:17:29,000
创始人之一

535
00:17:29,000 --> 00:17:32,000
创始人以及前总裁

536
00:17:32,000 --> 00:17:34,000
对

537
00:17:34,000 --> 00:17:35,000
因为他写的

538
00:17:35,000 --> 00:17:37,000
所以就引起了很多人的注意

539
00:17:37,000 --> 00:17:38,000
然后在程序员圈子里面

540
00:17:38,000 --> 00:17:39,000
就间接流畅开来

541
00:17:39,000 --> 00:17:42,000
然后几乎有一段时间是未然成风

542
00:17:42,000 --> 00:17:44,000
就好多好多人都换了

543
00:17:44,000 --> 00:17:46,000
然后一方面是因为这个

544
00:17:46,000 --> 00:17:50,000
另一方面是当时我想要把那个 Lua 的

545
00:17:50,000 --> 00:17:54,000
占点程序捡起来写的时候

546
00:17:54,000 --> 00:17:56,000
我发现 Lua 已经改了

547
00:17:56,000 --> 00:17:58,000
有点落当时我依赖的那个包

548
00:17:58,000 --> 00:18:01,000
因为他 0.2 还是那个版本

549
00:18:01,000 --> 00:18:03,000
然后在我当我捡起来的时候

550
00:18:03,000 --> 00:18:04,000
已经变成 0.8 了

551
00:18:04,000 --> 00:18:08,000
然后就中间已经变得面目全非

552
00:18:08,000 --> 00:18:12,000
我所有几乎用到了韩数全都变了

553
00:18:12,000 --> 00:18:14,000
然后再捡起来写

554
00:18:14,000 --> 00:18:16,000
我觉得有点力不从心

555
00:18:16,000 --> 00:18:18,000
就想说哎呀干脆转吧

556
00:18:18,000 --> 00:18:21,000
反正我的所有文章都已经是春的

557
00:18:21,000 --> 00:18:24,000
就相当于一个半进开的什么一个状态在了

558
00:18:24,000 --> 00:18:27,000
所以所以插一个这里的教训是

559
00:18:27,000 --> 00:18:30,000
一定要做好版本管理对吧

560
00:18:30,000 --> 00:18:32,000
这个版本管理没关系

561
00:18:32,000 --> 00:18:33,000
依赖管理

562
00:18:33,000 --> 00:18:36,000
Declare the management

563
00:18:36,000 --> 00:18:38,000
这个是教训是 Lua 要做好

564
00:18:38,000 --> 00:18:40,000
你自己也没有做好

565
00:18:40,000 --> 00:18:43,000
你做好这个不就没有这事了吗

566
00:18:43,000 --> 00:18:46,000
我最大的失误就在于我没有及时跟进

567
00:18:46,000 --> 00:18:48,000
每个依赖的库的开发进度

568
00:18:48,000 --> 00:18:51,000
因为我并不是什么 Lua 失明者

569
00:18:51,000 --> 00:18:53,000
我是 Polyglot

570
00:18:53,000 --> 00:18:55,000
怎么要保持 Polyglot 的尊严

571
00:18:55,000 --> 00:19:00,000
我不能一直去死追猛乃一个源不放

572
00:19:00,000 --> 00:19:01,000
对吧

573
00:19:01,000 --> 00:19:02,000
OK

574
00:19:02,000 --> 00:19:03,000
怎么说呢

575
00:19:03,000 --> 00:19:05,000
就是如果一定要说有什么教训的话

576
00:19:05,000 --> 00:19:08,000
就是不要用太不成熟的技术

577
00:19:08,000 --> 00:19:11,000
尤其是在你想要做一个比较大的东西的时候

578
00:19:11,000 --> 00:19:13,000
我也不是说我的 Blog 系统有多大

579
00:19:13,000 --> 00:19:15,000
就是你想做一个比较

580
00:19:15,000 --> 00:19:17,000
长时间就一斤一斤的东西

581
00:19:17,000 --> 00:19:18,000
对

582
00:19:18,000 --> 00:19:19,000
所谓 Build to last 的东西的时候

583
00:19:19,000 --> 00:19:21,000
你不要用太新的技术

584
00:19:21,000 --> 00:19:24,000
尤其不要用版本号还是零二几

585
00:19:24,000 --> 00:19:25,000
不然下场

586
00:19:25,000 --> 00:19:26,000
这就是为什么

587
00:19:26,000 --> 00:19:29,000
这就是为什么扎万可以活到现在的原因

588
00:19:29,000 --> 00:19:31,000
就是很多很多很多很多

589
00:19:31,000 --> 00:19:33,000
希望能够长时间运行的

590
00:19:33,000 --> 00:19:34,000
当然会选择扎万

591
00:19:34,000 --> 00:19:36,000
因为扎万他已经死了

592
00:19:36,000 --> 00:19:39,000
死的东西是不会变零的

593
00:19:39,000 --> 00:19:42,000
怎样不是马上就一点七还是一点八了

594
00:19:42,000 --> 00:19:43,000
一点八

595
00:19:43,000 --> 00:19:45,000
不是一点八

596
00:19:45,000 --> 00:19:47,000
就现在从扎万你太过时了

597
00:19:47,000 --> 00:19:49,000
一点五开始就直接叫扎万五

598
00:19:49,000 --> 00:19:51,000
然后六七八现在是八

599
00:19:51,000 --> 00:19:54,000
他不打算开始到二点几了对吧

600
00:19:54,000 --> 00:19:55,000
对

601
00:19:55,000 --> 00:19:57,000
扎万八里面有 Generics

602
00:19:57,000 --> 00:19:58,000
不对不起

603
00:19:58,000 --> 00:20:01,000
扎万八里面有那个匿名好像是 Lambda

604
00:20:01,000 --> 00:20:03,000
too late

605
00:20:03,000 --> 00:20:04,000
对啊

606
00:20:04,000 --> 00:20:05,000
too late

607
00:20:05,000 --> 00:20:06,000
way too late

608
00:20:06,000 --> 00:20:09,000
所以在迁移过程中

609
00:20:09,000 --> 00:20:12,000
你觉得整个体验怎么样

610
00:20:12,000 --> 00:20:14,000
一开始挺好的

611
00:20:14,000 --> 00:20:17,000
就是刚刚转到 Joco 的时候挺好

612
00:20:17,000 --> 00:20:19,000
但是后来 Joco 升了几次级

613
00:20:19,000 --> 00:20:21,000
我记得有一次是

614
00:20:21,000 --> 00:20:24,000
从一点

615
00:20:24,000 --> 00:20:26,000
从一还是从一点七级

616
00:20:26,000 --> 00:20:28,000
依赖从 Ruby 一点七级

617
00:20:28,000 --> 00:20:30,000
升到一点八级的时候

618
00:20:30,000 --> 00:20:33,000
不停的弹出一个 encode 的错误

619
00:20:33,000 --> 00:20:35,000
我记得那个错误好像

620
00:20:35,000 --> 00:20:38,000
不止我一个人很多很多人都受到影响

621
00:20:38,000 --> 00:20:40,000
但是持续的时间很短

622
00:20:40,000 --> 00:20:42,000
但是那是第一次不爽

623
00:20:42,000 --> 00:20:45,000
然后随之之后就很多很多次不爽

624
00:20:45,000 --> 00:20:49,000
那你现在还坚持在用的 Joco 在上面跑吗

625
00:20:49,000 --> 00:20:51,000
我主要是不怎么写了

626
00:20:51,000 --> 00:20:52,000
上一次写

627
00:20:52,000 --> 00:20:55,000
好像 Joco 还给了我一些脸面子

628
00:20:55,000 --> 00:20:56,000
还是跑起来的

629
00:20:56,000 --> 00:20:57,000
所以暂时还没有换

630
00:20:57,000 --> 00:21:00,000
等一下你现在这个 setup 是怎么样子的

631
00:21:00,000 --> 00:21:02,000
是在本机跑同步过去

632
00:21:02,000 --> 00:21:04,000
还是在服务器上架了这个

633
00:21:04,000 --> 00:21:09,000
我是把 repository 共享在 github 上

634
00:21:09,000 --> 00:21:13,000
然后从远程一个 pool

635
00:21:13,000 --> 00:21:15,000
然后在远程 build

636
00:21:15,000 --> 00:21:16,000
应该是

637
00:21:16,000 --> 00:21:18,000
这个 build 是你自己服务器上 build 的

638
00:21:18,000 --> 00:21:19,000
还是 github

639
00:21:19,000 --> 00:21:20,000
应该是在服务器上 build

640
00:21:20,000 --> 00:21:22,000
应该是在服务器上 build 的

641
00:21:22,000 --> 00:21:23,000
什么叫应该

642
00:21:23,000 --> 00:21:24,000
已经不进了

643
00:21:24,000 --> 00:21:27,000
对 我已经很久没有写了

644
00:21:27,000 --> 00:21:29,000
我之前 blog 总觉得

645
00:21:29,000 --> 00:21:31,000
再怎么样一个月一篇

646
00:21:31,000 --> 00:21:33,000
好 上次写了一年以前

647
00:21:33,000 --> 00:21:37,000
上一篇和上上篇的间隔是一年

648
00:21:37,000 --> 00:21:38,000
不过你比我好

649
00:21:38,000 --> 00:21:40,000
我博客就写过几篇

650
00:21:40,000 --> 00:21:42,000
然后再能碰过

651
00:21:44,000 --> 00:21:46,000
对 博客程序

652
00:21:46,000 --> 00:21:50,000
从最开始我是用什么

653
00:21:54,000 --> 00:21:57,000
log.cn

654
00:21:57,000 --> 00:21:59,000
还是 blogger

655
00:21:59,000 --> 00:22:00,000
blogspot 对吧

656
00:22:00,000 --> 00:22:02,000
不是 blogspot

657
00:22:02,000 --> 00:22:03,000
那个时候还没有 blogspot

658
00:22:03,000 --> 00:22:05,000
2003 年的时候

659
00:22:05,000 --> 00:22:06,000
国内的国外

660
00:22:06,000 --> 00:22:07,000
国内

661
00:22:07,000 --> 00:22:09,000
刚开始国外

662
00:22:09,000 --> 00:22:10,000
那个时候

663
00:22:10,000 --> 00:22:11,000
博客大巴

664
00:22:11,000 --> 00:22:12,000
用

665
00:22:12,000 --> 00:22:13,000
不是博客大巴

666
00:22:13,000 --> 00:22:15,000
博客大巴出来要晚多了

667
00:22:15,000 --> 00:22:18,000
我在荣树下写过东西

668
00:22:20,000 --> 00:22:22,000
对 然后

669
00:22:22,000 --> 00:22:23,000
我 17 年

670
00:22:23,000 --> 00:22:25,000
太文艺了那个时候

671
00:22:25,000 --> 00:22:28,000
后来转到一个

672
00:22:29,000 --> 00:22:31,000
后来出国之后

673
00:22:31,000 --> 00:22:33,000
转到一个自己搭建的

674
00:22:36,000 --> 00:22:37,000
不对

675
00:22:37,000 --> 00:22:38,000
出国之前

676
00:22:38,000 --> 00:22:40,000
有一阵子转到的 donews

677
00:22:40,000 --> 00:22:41,000
你知道 donews

678
00:22:41,000 --> 00:22:43,000
对 什么东西

679
00:22:43,000 --> 00:22:45,000
donews doa.ly

680
00:22:45,000 --> 00:22:47,000
对以前 cursor

681
00:22:47,000 --> 00:22:48,000
对

682
00:22:48,000 --> 00:22:49,000
cursor 在上面写的

683
00:22:49,000 --> 00:22:53,000
然后 blog 程序是一个.net 写的

684
00:22:53,000 --> 00:22:56,000
而是当初我很喜欢的

685
00:22:56,000 --> 00:22:58,000
后来从那转到了

686
00:22:58,000 --> 00:22:59,000
一个自己搭建的

687
00:22:59,000 --> 00:23:01,000
然后第一次有了自己的寓命

688
00:23:01,000 --> 00:23:04,000
叫做 biden van fester

689
00:23:04,000 --> 00:23:06,000
就是在窗子旁边

690
00:23:06,000 --> 00:23:07,000
那时候我和一个

691
00:23:07,000 --> 00:23:09,000
曾经很好的访问区

692
00:23:09,000 --> 00:23:10,000
对

693
00:23:10,000 --> 00:23:11,000
然后后来

694
00:23:11,000 --> 00:23:12,000
我们两个分

695
00:23:12,000 --> 00:23:14,000
老宴分别之后

696
00:23:14,000 --> 00:23:15,000
分别单飞之后

697
00:23:15,000 --> 00:23:17,000
我搬到了另外一个

698
00:23:17,000 --> 00:23:19,000
就是现在的寓命

699
00:23:19,000 --> 00:23:21,000
一开始是 manifox.name

700
00:23:21,000 --> 00:23:23,000
因为.name 是

701
00:23:23,000 --> 00:23:25,000
personal

702
00:23:25,000 --> 00:23:26,000
对

703
00:23:26,000 --> 00:23:27,000
personal website

704
00:23:27,000 --> 00:23:29,000
但我发现没有人咬他

705
00:23:29,000 --> 00:23:30,000
基本上

706
00:23:30,000 --> 00:23:31,000
稍微有点

707
00:23:31,000 --> 00:23:33,000
稍微有点钱的人

708
00:23:33,000 --> 00:23:34,000
都会去买.com

709
00:23:34,000 --> 00:23:35,000
到 com 便宜

710
00:23:35,000 --> 00:23:37,000
到 com 十块钱一年

711
00:23:37,000 --> 00:23:38,000
对

712
00:23:38,000 --> 00:23:39,000
我现在就是 manifox.com

713
00:23:39,000 --> 00:23:40,000
你既然注册到了

714
00:23:40,000 --> 00:23:42,000
你当初干嘛去了

715
00:23:42,000 --> 00:23:43,000
不

716
00:23:43,000 --> 00:23:46,000
我在我注册到 manifox.name 的

717
00:23:46,000 --> 00:23:48,000
三五年时间之内

718
00:23:48,000 --> 00:23:50,000
dotcom 其实一直都在

719
00:23:50,000 --> 00:23:52,000
但是我就是没有注册

720
00:23:53,000 --> 00:23:54,000
在背后

721
00:23:54,000 --> 00:23:55,000
对

722
00:23:55,000 --> 00:23:56,000
我只能这么理解

723
00:23:56,000 --> 00:23:57,000
他一直在等我

724
00:23:57,000 --> 00:23:58,000
然后我前两天

725
00:23:58,000 --> 00:24:00,000
上支通发现自己 2001 年的时候

726
00:24:00,000 --> 00:24:02,000
写的答案有当时的网址

727
00:24:02,000 --> 00:24:04,000
manifox.name

728
00:24:04,000 --> 00:24:06,000
还被人翻出来说

729
00:24:06,000 --> 00:24:08,000
连接差评

730
00:24:08,000 --> 00:24:10,000
就断了

731
00:24:10,000 --> 00:24:12,000
你没有序废了吗

732
00:24:12,000 --> 00:24:13,000
name.name

733
00:24:13,000 --> 00:24:14,000
没有再序废了

734
00:24:14,000 --> 00:24:15,000
就没有意义

735
00:24:15,000 --> 00:24:16,000
说实话

736
00:24:16,000 --> 00:24:17,000
没有人会记得

737
00:24:17,000 --> 00:24:18,000
这样不好

738
00:24:18,000 --> 00:24:19,000
不

739
00:24:19,000 --> 00:24:21,000
我觉得有一句言语说什么

740
00:24:21,000 --> 00:24:22,000
他就会永远不会消失

741
00:24:22,000 --> 00:24:23,000
这句话是错的

742
00:24:23,000 --> 00:24:25,000
我觉得太多他都东西

743
00:24:25,000 --> 00:24:26,000
已经永远找到了

744
00:24:26,000 --> 00:24:27,000
对

745
00:24:27,000 --> 00:24:29,000
不还好有个那个什么

746
00:24:29,000 --> 00:24:30,000
the internet

747
00:24:30,000 --> 00:24:31,000
the internet time machine

748
00:24:31,000 --> 00:24:32,000
可以帮你救

749
00:24:32,000 --> 00:24:34,000
the internet time machine

750
00:24:34,000 --> 00:24:35,000
the so-called internet time machine

751
00:24:35,000 --> 00:24:36,000
对

752
00:24:36,000 --> 00:24:37,000
可以帮你救回来

753
00:24:37,000 --> 00:24:38,000
对

754
00:24:38,000 --> 00:24:39,000
等下从哪里去

755
00:24:39,000 --> 00:24:40,000
有点远了

756
00:24:40,000 --> 00:24:41,000
说回到这口

757
00:24:41,000 --> 00:24:42,000
静态

758
00:24:42,000 --> 00:24:43,000
静态

759
00:24:43,000 --> 00:24:44,000
网站生存机

760
00:24:44,000 --> 00:24:45,000
我在推特上

761
00:24:45,000 --> 00:24:46,000
follow 一个人

762
00:24:46,000 --> 00:24:48,000
他的名字叫做 Horse Man

763
00:24:48,000 --> 00:24:50,000
就是 Horse Ma

764
00:24:50,000 --> 00:24:51,000
然后 Mans

765
00:24:51,000 --> 00:24:52,000
不是 Mans

766
00:24:52,000 --> 00:24:53,000
而是 Mans

767
00:24:53,000 --> 00:24:54,000
就是 Mans

768
00:24:54,000 --> 00:24:55,000
我不知道这是复述

769
00:24:55,000 --> 00:24:56,000
还是故意恶搞

770
00:24:56,000 --> 00:24:58,000
总之他是一个非常有趣的人

771
00:24:58,000 --> 00:25:02,000
他的很多推都非常恶搞

772
00:25:02,000 --> 00:25:04,000
看一阵才明白他在讲什么

773
00:25:04,000 --> 00:25:06,000
但是看懂了之后就哈哈大笑

774
00:25:06,000 --> 00:25:08,000
这个 Horse Man

775
00:25:08,000 --> 00:25:10,000
他在大概两周之前

776
00:25:10,000 --> 00:25:12,000
就是你们听到这一期

777
00:25:12,000 --> 00:25:14,000
podcast 的两周之前

778
00:25:14,000 --> 00:25:16,000
他发过这么一条推说

779
00:25:16,000 --> 00:25:19,000
it takes one get repository

780
00:25:19,000 --> 00:25:21,000
two sub modules

781
00:25:21,000 --> 00:25:23,000
one virtual environment

782
00:25:23,000 --> 00:25:25,000
five direct Python dependencies

783
00:25:25,000 --> 00:25:27,000
one node virtual

784
00:25:27,000 --> 00:25:29,000
no this is

785
00:25:29,000 --> 00:25:30,000
NVM 是什么

786
00:25:30,000 --> 00:25:32,000
no the virtual machine

787
00:25:32,000 --> 00:25:33,000
好像就切换

788
00:25:33,000 --> 00:25:34,000
no the 版本的

789
00:25:34,000 --> 00:25:35,000
对 anyway

790
00:25:35,000 --> 00:25:37,000
one nvm environment

791
00:25:37,000 --> 00:25:39,000
and one node package

792
00:25:39,000 --> 00:25:41,000
to build my blog

793
00:25:41,000 --> 00:25:43,000
and oh and five

794
00:25:43,000 --> 00:25:45,000
and four emax packages

795
00:25:45,000 --> 00:25:46,000
被踩了

796
00:25:46,000 --> 00:25:47,000
对

797
00:25:47,000 --> 00:25:49,000
我相信他说的是接口吗

798
00:25:49,000 --> 00:25:51,000
我觉得他应该说的是这一口

799
00:25:51,000 --> 00:25:53,000
就是他他

800
00:25:53,000 --> 00:25:55,000
然后我去看一眼他的 blog

801
00:25:55,000 --> 00:25:57,000
他的 blog 是很短

802
00:25:57,000 --> 00:25:59,000
然后最新一篇贴子好像是在讲

803
00:25:59,000 --> 00:26:03,000
这个 emax 的某个 package

804
00:26:03,000 --> 00:26:06,000
他可以在直接的 emax 里面写 blog

805
00:26:06,000 --> 00:26:08,000
然后一键就会把 blog 部署

806
00:26:08,000 --> 00:26:09,000
完什么的

807
00:26:10,000 --> 00:26:13,000
这似乎是所有程序员的通病

808
00:26:13,000 --> 00:26:16,000
花了 72 个小时

809
00:26:16,000 --> 00:26:20,000
连续不断的去琢磨出了最佳的写博客

810
00:26:20,000 --> 00:26:22,000
然后完成 publish

811
00:26:22,000 --> 00:26:24,000
这整个 work for

812
00:26:24,000 --> 00:26:26,000
然后从此再也不写

813
00:26:26,000 --> 00:26:28,000
对然后写一个 Hello world

814
00:26:28,000 --> 00:26:30,000
I will write my blog

815
00:26:30,000 --> 00:26:32,000
and that's it

816
00:26:32,000 --> 00:26:34,000
and that's it

817
00:26:35,000 --> 00:26:36,000
对

818
00:26:36,000 --> 00:26:37,000
所以你也是这样吗

819
00:26:37,000 --> 00:26:38,000
你转换成接口

820
00:26:38,000 --> 00:26:39,000
我不是这样的

821
00:26:39,000 --> 00:26:40,000
不是这样的

822
00:26:40,000 --> 00:26:41,000
还写了几篇是吧

823
00:26:41,000 --> 00:26:43,000
我总好觉得还是有

824
00:26:43,000 --> 00:26:45,000
从可能最早的一篇是 2005 年

825
00:26:45,000 --> 00:26:46,000
到现在

826
00:26:46,000 --> 00:26:48,000
不过它是积攒了一些

827
00:26:48,000 --> 00:26:51,000
不过他说了也反映了一个问题

828
00:26:51,000 --> 00:26:55,000
就是现在的很多这种非常 Hippie 的

829
00:26:55,000 --> 00:26:59,000
这种软件的依赖就是太多了

830
00:26:59,000 --> 00:27:00,000
让我想起了

831
00:27:00,000 --> 00:27:03,000
曾经的所谓 windows 7 的 dll 地域

832
00:27:03,000 --> 00:27:08,000
就是一个新的软件可能要依赖

833
00:27:08,000 --> 00:27:09,000
其他几个 dll

834
00:27:09,000 --> 00:27:11,000
这些 dll 又要依赖更多的 dll

835
00:27:11,000 --> 00:27:15,000
然后所有 dll 的版本都有区别

836
00:27:15,000 --> 00:27:16,000
对

837
00:27:16,000 --> 00:27:19,000
然后就会有产生类似的状况

838
00:27:19,000 --> 00:27:20,000
对

839
00:27:20,000 --> 00:27:22,000
其实 Ruby 我自己并不会

840
00:27:22,000 --> 00:27:24,000
然后我不知道他的那个

841
00:27:24,000 --> 00:27:25,000
包管的系统怎么样

842
00:27:25,000 --> 00:27:26,000
但是我看听了

843
00:27:26,000 --> 00:27:27,000
太谦虚了

844
00:27:27,000 --> 00:27:28,000
你所谓的不会就是

845
00:27:28,000 --> 00:27:31,000
没有用他写过大型程序的意思吗

846
00:27:31,000 --> 00:27:33,000
我还真没有他用他写过任何东西

847
00:27:33,000 --> 00:27:34,000
对

848
00:27:34,000 --> 00:27:35,000
这就是所谓不会是吧

849
00:27:35,000 --> 00:27:36,000
但是你

850
00:27:37,000 --> 00:27:39,000
读起 Ruby 来感觉比我快

851
00:27:39,000 --> 00:27:40,000
我给你强行

852
00:27:40,000 --> 00:27:42,000
但那个愚发很接近

853
00:27:42,000 --> 00:27:44,000
也没什么特别难懂的地方

854
00:27:44,000 --> 00:27:45,000
不太

855
00:27:45,000 --> 00:27:46,000
所以还是懂的

856
00:27:46,000 --> 00:27:47,000
这个什么

857
00:27:47,000 --> 00:27:48,000
出了一旁通了

858
00:27:48,000 --> 00:27:50,000
我觉得稍微边过一段时间

859
00:27:50,000 --> 00:27:51,000
都能达到这个效果

860
00:27:51,000 --> 00:27:52,000
anyway 车远

861
00:27:52,000 --> 00:27:54,000
我想问的一点

862
00:27:54,000 --> 00:27:56,000
Ruby 的包管的系统

863
00:27:56,000 --> 00:27:57,000
我感觉还可以

864
00:27:57,000 --> 00:27:59,000
但那个 jam 系统

865
00:28:01,000 --> 00:28:04,000
其实算是所有的包管的系统里面

866
00:28:04,000 --> 00:28:08,000
就是最好的几个之一了吧

867
00:28:08,000 --> 00:28:09,000
对

868
00:28:09,000 --> 00:28:11,000
我觉得目前看

869
00:28:11,000 --> 00:28:13,000
在一个 scripting languages 里面

870
00:28:13,000 --> 00:28:15,000
jam 不错

871
00:28:15,000 --> 00:28:16,000
然后 NPM

872
00:28:16,000 --> 00:28:18,000
notenator 我觉得还挺好的

873
00:28:18,000 --> 00:28:19,000
对

874
00:28:19,000 --> 00:28:21,000
然后必然最开始

875
00:28:21,000 --> 00:28:23,000
之前最喜欢的脚本语言

876
00:28:23,000 --> 00:28:25,000
拍摄的包管的系统就是

877
00:28:26,000 --> 00:28:28,000
P.So.F.K

878
00:28:28,000 --> 00:28:29,000
算了

879
00:28:29,000 --> 00:28:30,000
不伤感情

880
00:28:31,000 --> 00:28:32,000
不刺激大家了

881
00:28:32,000 --> 00:28:34,000
这就是说这个事情

882
00:28:34,000 --> 00:28:38,000
就为什么会需要这么多东西

883
00:28:39,000 --> 00:28:41,000
我觉得它的设计哲学就是

884
00:28:42,000 --> 00:28:44,000
battery not included

885
00:28:44,000 --> 00:28:47,000
自备电池

886
00:28:47,000 --> 00:28:48,000
对

887
00:28:48,000 --> 00:28:49,000
你得自备电池

888
00:28:49,000 --> 00:28:52,000
或者说它试图把中心的

889
00:28:52,000 --> 00:28:54,000
核心的功能做的尽量的

890
00:28:56,000 --> 00:28:57,000
简短

891
00:28:57,000 --> 00:29:00,000
导致它有非常多的外部依赖

892
00:29:01,000 --> 00:29:05,000
但是这样对使用和配置的话

893
00:29:05,000 --> 00:29:07,000
其实还是蛮大影响的

894
00:29:07,000 --> 00:29:08,000
我觉得

895
00:29:08,000 --> 00:29:09,000
对

896
00:29:09,000 --> 00:29:10,000
就是

897
00:29:10,000 --> 00:29:12,000
我觉得现在的 divops

898
00:29:12,000 --> 00:29:14,000
越来越流行

899
00:29:14,000 --> 00:29:16,000
当然 divops 我们可能也会

900
00:29:16,000 --> 00:29:18,000
专门找起来讲

901
00:29:18,000 --> 00:29:19,000
就是

902
00:29:19,000 --> 00:29:20,000
就一方面的原因也是

903
00:29:20,000 --> 00:29:22,000
现在的软件部署

904
00:29:22,000 --> 00:29:25,000
的确是越来越多的

905
00:29:25,000 --> 00:29:28,000
牵扯到了开发人员的

906
00:29:28,000 --> 00:29:29,000
no 好

907
00:29:29,000 --> 00:29:31,000
或者说你要想要开发一个东西

908
00:29:31,000 --> 00:29:32,000
你必须先要弄明白

909
00:29:32,000 --> 00:29:34,000
这个东西会怎样部署

910
00:29:34,000 --> 00:29:37,000
所以就从一个策略推进来

911
00:29:37,000 --> 00:29:41,000
divops 交叉行业的

912
00:29:41,000 --> 00:29:42,000
涌现

913
00:29:42,000 --> 00:29:44,000
我觉得本来就是应该是地体的

914
00:29:44,000 --> 00:29:45,000
为什么要很

915
00:29:45,000 --> 00:29:46,000
以前很残忍的

916
00:29:46,000 --> 00:29:48,000
要分成 divop

917
00:29:48,000 --> 00:29:49,000
就两个公众的

918
00:29:49,000 --> 00:29:51,000
就是很奇怪的一件事情

919
00:29:51,000 --> 00:29:53,000
我觉得是出于正交

920
00:29:53,000 --> 00:29:54,000
就是职能正交的考量

921
00:29:54,000 --> 00:29:56,000
因为你不能期待一个程序

922
00:29:56,000 --> 00:29:59,000
每天写完程序还要去

923
00:29:59,000 --> 00:30:02,000
业里面 on call 随便随时

924
00:30:02,000 --> 00:30:04,000
静待着服务器要出问题

925
00:30:04,000 --> 00:30:07,000
还有 pass 代去解服务器的问题

926
00:30:07,000 --> 00:30:09,000
而且人的经历毕竟是有限的

927
00:30:09,000 --> 00:30:13,000
我觉得就是 divops 在乎的工作

928
00:30:13,000 --> 00:30:16,000
在你我看来好像没有那么复杂

929
00:30:16,000 --> 00:30:20,000
但其实很多人对于开发

930
00:30:20,000 --> 00:30:21,000
没有什么经验

931
00:30:21,000 --> 00:30:23,000
但是对于配置服务器的很在好

932
00:30:23,000 --> 00:30:24,000
而反过来也有

933
00:30:24,000 --> 00:30:26,000
也一样有很多很多人

934
00:30:26,000 --> 00:30:27,000
就我

935
00:30:27,000 --> 00:30:28,000
好吧

936
00:30:28,000 --> 00:30:29,000
这个事情留到下次

937
00:30:29,000 --> 00:30:31,000
专门讲这个事情再吐槽了

938
00:30:31,000 --> 00:30:36,000
但是这么多包的话

939
00:30:36,000 --> 00:30:38,000
你如果装在服务器上

940
00:30:38,000 --> 00:30:40,000
要遇到升级的话你怎么办

941
00:30:40,000 --> 00:30:42,000
比如上次你自己就遇到这个问题

942
00:30:42,000 --> 00:30:45,000
自己写的都会有这个问题

943
00:30:45,000 --> 00:30:47,000
然后你如果依赖别人的

944
00:30:47,000 --> 00:30:49,000
我觉得如果一个比较大的

945
00:30:49,000 --> 00:30:52,000
如果有这样真的要面临

946
00:30:52,000 --> 00:30:54,000
依赖包升级的话

947
00:30:54,000 --> 00:30:56,000
可能是一个比较浩大的工程

948
00:30:56,000 --> 00:30:57,000
我倒无所谓

949
00:30:57,000 --> 00:30:58,000
反正没有什么人看

950
00:30:58,000 --> 00:31:01,000
就直接把 NJX 停了就好了

951
00:31:01,000 --> 00:31:02,000
甚至 NJX 不用停

952
00:31:02,000 --> 00:31:04,000
看见使就看见失

953
00:31:04,000 --> 00:31:08,000
但是对于一个相对大的工程来说

954
00:31:08,000 --> 00:31:09,000
这可能是个比较大的问题

955
00:31:09,000 --> 00:31:10,000
好

956
00:31:12,000 --> 00:31:15,000
说到静态网站升级

957
00:31:15,000 --> 00:31:18,000
其实我之前也在尝试

958
00:31:18,000 --> 00:31:20,000
然后试了这个接口

959
00:31:20,000 --> 00:31:21,000
大家可能不知道

960
00:31:21,000 --> 00:31:24,000
我还在维护 AppleForwards.com

961
00:31:24,000 --> 00:31:25,000
那个网站

962
00:31:26,000 --> 00:31:27,000
有人不知道吗

963
00:31:27,000 --> 00:31:28,000
我不确定

964
00:31:28,000 --> 00:31:30,000
所以先声明一下

965
00:31:30,000 --> 00:31:35,000
OK 我们 real 同学是 appleforwards.com 的

966
00:31:35,000 --> 00:31:37,000
首席技术官

967
00:31:37,000 --> 00:31:40,000
然后我觉得上次 Laurence 说什么

968
00:31:40,000 --> 00:31:43,000
Laurence 在 IP 地工里面说我是

969
00:31:43,000 --> 00:31:46,000
Type is beautiful 的 CTO

970
00:31:46,000 --> 00:31:49,000
我听了差点把水泼出来

971
00:31:49,000 --> 00:31:51,000
不算

972
00:31:51,000 --> 00:31:53,000
算吧

973
00:31:53,000 --> 00:31:54,000
不算

974
00:31:54,000 --> 00:31:56,000
因为即便算也不能算

975
00:31:56,000 --> 00:31:58,000
什么叫即便算也不能算

976
00:31:58,000 --> 00:32:00,000
到底算还是不算

977
00:32:00,000 --> 00:32:01,000
即便算 即便真的是 CTO

978
00:32:01,000 --> 00:32:03,000
也不能拿 CTO 的头衔

979
00:32:03,000 --> 00:32:06,000
因为 Type is beautiful 更像一个

980
00:32:06,000 --> 00:32:07,000
协作社群

981
00:32:07,000 --> 00:32:09,000
AppleForwards.com 是非常

982
00:32:09,000 --> 00:32:13,000
对 但社群的存在其实是非常

983
00:32:13,000 --> 00:32:14,000
不是说非常

984
00:32:14,000 --> 00:32:16,000
但是在形式上是要排斥

985
00:32:16,000 --> 00:32:20,000
这种公司式的职务分配和管理的

986
00:32:20,000 --> 00:32:21,000
对

987
00:32:21,000 --> 00:32:22,000
那只是开玩笑

988
00:32:22,000 --> 00:32:23,000
不用太当心

989
00:32:23,000 --> 00:32:24,000
对 我知道

990
00:32:24,000 --> 00:32:27,000
但对 我这次来回赠一款帽子

991
00:32:29,000 --> 00:32:31,000
对 然后那个站点

992
00:32:31,000 --> 00:32:34,000
其实最开始的时候是跑在一个叫做

993
00:32:34,000 --> 00:32:36,000
我不知道你还记不记得

994
00:32:36,000 --> 00:32:37,000
movable type

995
00:32:37,000 --> 00:32:38,000
我当然记得

996
00:32:38,000 --> 00:32:39,000
我还记得

997
00:32:39,000 --> 00:32:42,000
是一个 parl 写的近海网站生存器

998
00:32:42,000 --> 00:32:46,000
对 我还记得张亮还是谁

999
00:32:46,000 --> 00:32:47,000
曾经说过

1000
00:32:47,000 --> 00:32:50,000
你们的贵网站的 same 创作是

1001
00:32:50,000 --> 00:32:52,000
东东的复杂

1002
00:32:52,000 --> 00:32:54,000
或者我这样反正这么一段描述

1003
00:32:54,000 --> 00:32:56,000
你们一苦思甜的这么一段文字

1004
00:32:56,000 --> 00:32:57,000
我还记得

1005
00:32:57,000 --> 00:32:58,000
对 然后

1006
00:32:58,000 --> 00:32:59,000
读到那个文字

1007
00:32:59,000 --> 00:33:01,000
那当然是 10 年还是 11 年的时候

1008
00:33:01,000 --> 00:33:02,000
然后当时

1009
00:33:02,000 --> 00:33:07,000
那时候我刚刚就加入这个地下组织

1010
00:33:07,000 --> 00:33:09,000
然后他们就说

1011
00:33:09,000 --> 00:33:11,000
要不我们想想 movable type

1012
00:33:11,000 --> 00:33:12,000
实在是救不活了

1013
00:33:12,000 --> 00:33:15,000
然后 parl 又是一个没人爱的孩子

1014
00:33:15,000 --> 00:33:16,000
对吧

1015
00:33:16,000 --> 00:33:19,000
对 parl 的销唇其实也可以

1016
00:33:19,000 --> 00:33:21,000
专门找着一些节目来做

1017
00:33:21,000 --> 00:33:22,000
说实话

1018
00:33:22,000 --> 00:33:24,000
我觉得 parl 这个缘还挺有感情的

1019
00:33:24,000 --> 00:33:25,000
天啊

1020
00:33:25,000 --> 00:33:26,000
好吧

1021
00:33:26,000 --> 00:33:28,000
留待下次

1022
00:33:28,000 --> 00:33:29,000
这次我们专讲

1023
00:33:29,000 --> 00:33:31,000
是不是随时逐渐做节目

1024
00:33:31,000 --> 00:33:33,000
你发现我是一个有点变态的家伙

1025
00:33:33,000 --> 00:33:34,000
没有 这个什么

1026
00:33:34,000 --> 00:33:35,000
萝卜青菜各有所爱

1027
00:33:35,000 --> 00:33:36,000
这个没什么

1028
00:33:36,000 --> 00:33:37,000
OK

1029
00:33:37,000 --> 00:33:39,000
然后就把他

1030
00:33:39,000 --> 00:33:41,000
这当时也是个随大流

1031
00:33:41,000 --> 00:33:42,000
跟你现在的转接口

1032
00:33:42,000 --> 00:33:43,000
情况实际上是一样

1033
00:33:43,000 --> 00:33:44,000
当时就是

1034
00:33:44,000 --> 00:33:46,000
我们要做一个动态称序

1035
00:33:46,000 --> 00:33:48,000
然后就改成了那个 warpress

1036
00:33:48,000 --> 00:33:50,000
然后改成 2.0 级吧

1037
00:33:50,000 --> 00:33:51,000
好像还是

1038
00:33:51,000 --> 00:33:52,000
我还记得

1039
00:33:52,000 --> 00:33:54,000
爬上你们的站点去写一个

1040
00:33:54,000 --> 00:33:58,000
把所有的帖子导出来的工具

1041
00:33:58,000 --> 00:34:00,000
都是什么时候的事

1042
00:34:00,000 --> 00:34:01,000
对

1043
00:34:01,000 --> 00:34:02,000
很多年前

1044
00:34:02,000 --> 00:34:03,000
考古这件事在

1045
00:34:03,000 --> 00:34:06,000
然后就是很多年以后发现

1046
00:34:06,000 --> 00:34:08,000
这个 warpress

1047
00:34:08,000 --> 00:34:09,000
他 warpress 很多插件的

1048
00:34:09,000 --> 00:34:10,000
经常升级的时候

1049
00:34:10,000 --> 00:34:11,000
这样说不能用

1050
00:34:11,000 --> 00:34:12,000
然后就导致

1051
00:34:12,000 --> 00:34:14,000
根本就不敢点那个升级

1052
00:34:14,000 --> 00:34:16,000
然后也其实说我去在那里维护

1053
00:34:16,000 --> 00:34:17,000
其实也就是

1054
00:34:17,000 --> 00:34:19,000
搬掉让那个网站来能用

1055
00:34:19,000 --> 00:34:20,000
不要挂掉就好了

1056
00:34:20,000 --> 00:34:21,000
其实也没怎么挂掉

1057
00:34:21,000 --> 00:34:22,000
不要被注入

1058
00:34:22,000 --> 00:34:23,000
对

1059
00:34:23,000 --> 00:34:24,000
其实也没怎么注入

1060
00:34:24,000 --> 00:34:26,000
你们有被注入我都不知道

1061
00:34:26,000 --> 00:34:27,000
太 Pisperous 了

1062
00:34:27,000 --> 00:34:28,000
否则就被注入了

1063
00:34:28,000 --> 00:34:29,000
挺惨的

1064
00:34:29,000 --> 00:34:32,000
几乎每一个 PHP 人家都遭到了

1065
00:34:32,000 --> 00:34:34,000
异端病毒的战人

1066
00:34:34,000 --> 00:34:35,000
看

1067
00:34:35,000 --> 00:34:38,000
然后不得过让 raxx 上 ssh

1068
00:34:38,000 --> 00:34:39,000
去一点点删掉

1069
00:34:39,000 --> 00:34:40,000
天哪

1070
00:34:40,000 --> 00:34:42,000
你这样维拿 raxx 能好吗

1071
00:34:42,000 --> 00:34:44,000
我不在电脑签了

1072
00:34:44,000 --> 00:34:45,000
好吧

1073
00:34:46,000 --> 00:34:48,000
然后就变成一个

1074
00:34:48,000 --> 00:34:50,000
所谓年久失修的一个网站

1075
00:34:50,000 --> 00:34:52,000
然后就也没有办法去改

1076
00:34:52,000 --> 00:34:54,000
然后 PHP 也不想去碰了

1077
00:34:54,000 --> 00:34:55,000
PHP 是一个

1078
00:34:55,000 --> 00:34:56,000
超丑的东西

1079
00:34:56,000 --> 00:34:58,000
要专门吐槽一期

1080
00:34:58,000 --> 00:34:59,000
对

1081
00:34:59,000 --> 00:35:00,000
Painness

1082
00:35:00,000 --> 00:35:01,000
对

1083
00:35:01,000 --> 00:35:03,000
然后我原有 Painness 指数的话

1084
00:35:03,000 --> 00:35:04,000
PHP 绝对是

1085
00:35:04,000 --> 00:35:05,000
报表

1086
00:35:05,000 --> 00:35:06,000
超过 10

1087
00:35:08,000 --> 00:35:09,000
好

1088
00:35:09,000 --> 00:35:11,000
然后终于在上个月吧

1089
00:35:11,000 --> 00:35:12,000
也不对

1090
00:35:12,000 --> 00:35:15,000
应该是前周还是上周

1091
00:35:15,000 --> 00:35:16,000
我忘了

1092
00:35:16,000 --> 00:35:17,000
我终于下定决心

1093
00:35:17,000 --> 00:35:19,000
把他整个倒出来

1094
00:35:19,000 --> 00:35:20,000
做成一个静态博客

1095
00:35:20,000 --> 00:35:21,000
静态站点

1096
00:35:21,000 --> 00:35:22,000
这样个好处就是

1097
00:35:22,000 --> 00:35:24,000
我再也不用为富他了

1098
00:35:24,000 --> 00:35:25,000
你看

1099
00:35:25,000 --> 00:35:27,000
所以其实出发点也蛮奇怪的

1100
00:35:27,000 --> 00:35:28,000
就是为了不为户

1101
00:35:28,000 --> 00:35:29,000
然后现在在公众

1102
00:35:29,000 --> 00:35:30,000
出发点其实很正常

1103
00:35:30,000 --> 00:35:31,000
这不就是懒多推进

1104
00:35:31,000 --> 00:35:32,000
人类文明的节目吗

1105
00:35:32,000 --> 00:35:33,000
对

1106
00:35:33,000 --> 00:35:34,000
这个有道理

1107
00:35:34,000 --> 00:35:35,000
然后现在

1108
00:35:35,000 --> 00:35:37,000
如果你现在去访问

1109
00:35:37,000 --> 00:35:38,000
AppleForrest.com

1110
00:35:38,000 --> 00:35:39,000
他现在是已经

1111
00:35:39,000 --> 00:35:41,000
是有一个静态

1112
00:35:41,000 --> 00:35:43,000
Static Site Generator 生成的网站

1113
00:35:43,000 --> 00:35:45,000
他再也不是跑在 WordPress

1114
00:35:45,000 --> 00:35:47,000
从个 PHP 跑的东西了

1115
00:35:47,000 --> 00:35:48,000
然后随之而好

1116
00:35:48,000 --> 00:35:50,000
这就是我可以把

1117
00:35:50,000 --> 00:35:52,000
MySQL 也干掉了

1118
00:35:52,000 --> 00:35:53,000
不如我用 MySQL 了

1119
00:35:53,000 --> 00:35:54,000
又少了一个东西

1120
00:35:54,000 --> 00:35:55,000
可以管他

1121
00:35:55,000 --> 00:35:56,000
你看

1122
00:35:56,000 --> 00:35:57,000
而且没有安全隐患

1123
00:35:57,000 --> 00:35:58,000
希望

1124
00:35:58,000 --> 00:35:59,000
就在有什么安全隐患

1125
00:35:59,000 --> 00:36:00,000
只要 NGX 不出问题

1126
00:36:00,000 --> 00:36:01,000
SSH 不出问题

1127
00:36:01,000 --> 00:36:02,000
我这个站点

1128
00:36:02,000 --> 00:36:04,000
应该没什么可以出问题的地方

1129
00:36:04,000 --> 00:36:05,000
对

1130
00:36:05,000 --> 00:36:06,000
然后顺便改了一下

1131
00:36:06,000 --> 00:36:07,000
那个模碼样

1132
00:36:07,000 --> 00:36:08,000
然后之前那个也已经

1133
00:36:08,000 --> 00:36:10,000
太有点孤老了

1134
00:36:12,000 --> 00:36:13,000
对

1135
00:36:13,000 --> 00:36:14,000
所以你是曾经用我 Jeckel

1136
00:36:14,000 --> 00:36:15,000
来生成 AppleForrest

1137
00:36:15,000 --> 00:36:16,000
还是说

1138
00:36:16,000 --> 00:36:17,000
对

1139
00:36:17,000 --> 00:36:19,000
我理解为你曾经使用 Jeckel

1140
00:36:19,000 --> 00:36:20,000
这个

1141
00:36:20,000 --> 00:36:21,000
现在 AppleForrest

1142
00:36:21,000 --> 00:36:22,000
不是用 Jeckel 生成的

1143
00:36:22,000 --> 00:36:23,000
待会是用另外一款空气生成

1144
00:36:23,000 --> 00:36:24,000
待会会讲

1145
00:36:24,000 --> 00:36:25,000
但是就最开始的时候

1146
00:36:25,000 --> 00:36:26,000
想做这件事情

1147
00:36:26,000 --> 00:36:28,000
已经想了很久了

1148
00:36:28,000 --> 00:36:29,000
第一次尝试

1149
00:36:29,000 --> 00:36:31,000
把它 WordPress 改成静态的

1150
00:36:31,000 --> 00:36:32,000
就是用 Jeckel

1151
00:36:32,000 --> 00:36:33,000
然后是在

1152
00:36:33,000 --> 00:36:34,000
13 年

1153
00:36:34,000 --> 00:36:36,000
去年的上半年

1154
00:36:36,000 --> 00:36:37,000
应该是

1155
00:36:37,000 --> 00:36:39,000
然后发现更严重的问题

1156
00:36:39,000 --> 00:36:40,000
AppleForrest 那边

1157
00:36:40,000 --> 00:36:42,000
就是一共历史

1158
00:36:42,000 --> 00:36:43,000
有从 07 年开始发的帖吧

1159
00:36:43,000 --> 00:36:44,000
我看了一下

1160
00:36:44,000 --> 00:36:45,000
到现在为止

1161
00:36:45,000 --> 00:36:48,000
有差不多 2500 多片

1162
00:36:48,000 --> 00:36:49,000
这个帖子

1163
00:36:50,000 --> 00:36:52,000
你猜一下用 Jeckel 生成

1164
00:36:52,000 --> 00:36:53,000
就用 Jeckel 的

1165
00:36:53,000 --> 00:36:54,000
就是 plugin free

1166
00:36:54,000 --> 00:36:56,000
就是什么都插件都不装的情况下

1167
00:36:56,000 --> 00:36:57,000
生成一遍这个网站

1168
00:36:57,000 --> 00:36:58,000
要多长时间

1169
00:36:59,000 --> 00:37:01,000
你的生成是指你已经把

1170
00:37:01,000 --> 00:37:03,000
myCoco 里面的资料

1171
00:37:03,000 --> 00:37:04,000
对

1172
00:37:04,000 --> 00:37:05,000
对

1173
00:37:05,000 --> 00:37:08,000
就 build 一遍需要多长时间

1174
00:37:09,000 --> 00:37:10,000
5 分钟

1175
00:37:11,000 --> 00:37:12,000
差不多

1176
00:37:12,000 --> 00:37:16,000
在我的 2.6 GHz

1177
00:37:16,000 --> 00:37:18,000
core i 7 上

1178
00:37:18,000 --> 00:37:20,000
就是它可以

1179
00:37:20,000 --> 00:37:21,000
就是如果是单红

1180
00:37:21,000 --> 00:37:22,000
你是在本地 build 的

1181
00:37:22,000 --> 00:37:23,000
对

1182
00:37:23,000 --> 00:37:24,000
就在本地测试

1183
00:37:24,000 --> 00:37:25,000
本地 build 的

1184
00:37:25,000 --> 00:37:26,000
就是它可以

1185
00:37:26,000 --> 00:37:28,000
好像 3.2 G 把这个 Hz 的 i 7 上

1186
00:37:28,000 --> 00:37:29,000
我 build 的一遍这个帖子

1187
00:37:29,000 --> 00:37:31,000
需要 3 分钟

1188
00:37:31,000 --> 00:37:32,000
1 分钟还是 3 分钟

1189
00:37:32,000 --> 00:37:33,000
3 分钟好像是

1190
00:37:34,000 --> 00:37:35,000
嗯

1191
00:37:35,000 --> 00:37:36,000
真的相当长的

1192
00:37:36,000 --> 00:37:37,000
我想想

1193
00:37:37,000 --> 00:37:39,000
这完全不能够忍啊

1194
00:37:39,000 --> 00:37:41,000
这个就好像 xcd 漫画一样

1195
00:37:41,000 --> 00:37:42,000
两个人在

1196
00:37:42,000 --> 00:37:44,000
踩在椅子上拼件

1197
00:37:44,000 --> 00:37:46,000
然后有人说 go back to work

1198
00:37:46,000 --> 00:37:48,000
然后其中一个人说 compiling

1199
00:37:48,000 --> 00:37:49,000
对

1200
00:37:49,000 --> 00:37:50,000
你去

1201
00:37:50,000 --> 00:37:51,000
go on

1202
00:37:51,000 --> 00:37:53,000
这你完全不能够

1203
00:37:53,000 --> 00:37:55,000
完全不能够想象在

1204
00:37:55,000 --> 00:37:57,000
你生成一个静态站点

1205
00:37:57,000 --> 00:37:58,000
需要这么久吗

1206
00:37:58,000 --> 00:38:00,000
然后觉得这个事情完全不能忍

1207
00:38:00,000 --> 00:38:01,000
后来

1208
00:38:01,000 --> 00:38:02,000
就去看了一下

1209
00:38:02,000 --> 00:38:03,000
一搜

1210
00:38:03,000 --> 00:38:04,000
不然就不是我一个人的问题

1211
00:38:04,000 --> 00:38:06,000
就很多人都有这个抱怨

1212
00:38:06,000 --> 00:38:08,000
然后追根速源

1213
00:38:08,000 --> 00:38:09,000
无非就是两点吧

1214
00:38:09,000 --> 00:38:11,000
一个是 ruby 这个语言

1215
00:38:11,000 --> 00:38:13,000
应该是本身太慢了

1216
00:38:13,000 --> 00:38:14,000
不

1217
00:38:14,000 --> 00:38:16,000
就这个他的这个官方实现太慢了

1218
00:38:16,000 --> 00:38:17,000
当然肯定有快的

1219
00:38:17,000 --> 00:38:18,000
jruby

1220
00:38:18,000 --> 00:38:19,000
但没试过这么奇迹的作用

1221
00:38:19,000 --> 00:38:20,000
jruby 比 cruby 快吗

1222
00:38:20,000 --> 00:38:21,000
不可能吧

1223
00:38:21,000 --> 00:38:23,000
我猜应该是吧

1224
00:38:23,000 --> 00:38:24,000
后来我不知道

1225
00:38:24,000 --> 00:38:25,000
我没试过

1226
00:38:25,000 --> 00:38:27,000
jruby 比 cruby 快

1227
00:38:27,000 --> 00:38:28,000
我不相信

1228
00:38:28,000 --> 00:38:29,000
好吧我没试过

1229
00:38:29,000 --> 00:38:30,000
我只是在想啊

1230
00:38:30,000 --> 00:38:31,000
对不对

1231
00:38:31,000 --> 00:38:32,000
那个官方的 ruby

1232
00:38:32,000 --> 00:38:33,000
应该怎么 m

1233
00:38:33,000 --> 00:38:34,000
m

1234
00:38:34,000 --> 00:38:35,000
对

1235
00:38:35,000 --> 00:38:37,000
然后

1236
00:38:37,000 --> 00:38:39,000
我也没试过各种奇迹

1237
00:38:39,000 --> 00:38:41,000
我就用那个 mcwestern 自带那个 ruby

1238
00:38:41,000 --> 00:38:42,000
然后去跑一下

1239
00:38:42,000 --> 00:38:43,000
然后我往上搜一下

1240
00:38:43,000 --> 00:38:44,000
发现这个是通病

1241
00:38:44,000 --> 00:38:45,000
我相信这个是肯定

1242
00:38:45,000 --> 00:38:47,000
我自己是一几支

1243
00:38:47,000 --> 00:38:48,000
没得救了

1244
00:38:48,000 --> 00:38:49,000
就想想算了

1245
00:38:49,000 --> 00:38:51,000
然后后来我就想

1246
00:38:51,000 --> 00:38:52,000
那要不

1247
00:38:52,000 --> 00:38:53,000
自己写一个吧

1248
00:38:53,000 --> 00:38:54,000
就没有这么麻烦

1249
00:38:54,000 --> 00:38:56,000
然后当时就用拍照

1250
00:38:56,000 --> 00:38:58,000
写了一个

1251
00:38:58,000 --> 00:38:59,000
我觉得这个应该是所有程序员

1252
00:38:59,000 --> 00:39:00,000
应该的必经之路吧

1253
00:39:00,000 --> 00:39:02,000
就至少要写一到两个

1254
00:39:02,000 --> 00:39:04,000
这个 static site generator

1255
00:39:04,000 --> 00:39:05,000
才干心的

1256
00:39:05,000 --> 00:39:08,000
对其实我应该是写过这么一个玩意

1257
00:39:08,000 --> 00:39:11,000
就是在大学做网站的时候

1258
00:39:11,000 --> 00:39:12,000
但是当时那个时候

1259
00:39:12,000 --> 00:39:13,000
没有意识到

1260
00:39:13,000 --> 00:39:15,000
这是一个 static site generator

1261
00:39:15,000 --> 00:39:17,000
但它实际上就是一个 static site generator

1262
00:39:17,000 --> 00:39:19,000
就是我们

1263
00:39:19,000 --> 00:39:22,000
对我在销网站打工的时候

1264
00:39:22,000 --> 00:39:26,000
要给当时的美工

1265
00:39:26,000 --> 00:39:28,000
当时美工还不是一个代表点

1266
00:39:28,000 --> 00:39:30,000
我不知道为什么现在好像说

1267
00:39:30,000 --> 00:39:32,000
设计师是美工

1268
00:39:32,000 --> 00:39:34,000
他们会感到被侮辱

1269
00:39:34,000 --> 00:39:36,000
但那个时候说美工

1270
00:39:36,000 --> 00:39:37,000
就是我们学校

1271
00:39:37,000 --> 00:39:39,000
但是真的招美工

1272
00:39:39,000 --> 00:39:41,000
他们的职位就写美工

1273
00:39:41,000 --> 00:39:42,000
然后他们美工

1274
00:39:42,000 --> 00:39:44,000
那个时候的流行切图

1275
00:39:44,000 --> 00:39:45,000
对切图是什么概念

1276
00:39:45,000 --> 00:39:47,000
对切图这个东西有概念

1277
00:39:47,000 --> 00:39:49,000
就是给一个 photoshop 的

1278
00:39:49,000 --> 00:39:50,000
对吧

1279
00:39:50,000 --> 00:39:53,000
psd 切成 table 布局的

1280
00:39:53,000 --> 00:39:54,000
静态 html

1281
00:39:54,000 --> 00:39:57,000
然后当时他们想

1282
00:39:57,000 --> 00:40:00,000
要在没有后端

1283
00:40:00,000 --> 00:40:03,000
工程师的协作的情况之下

1284
00:40:03,000 --> 00:40:04,000
自己测试一下

1285
00:40:04,000 --> 00:40:06,000
整个站点跑起来

1286
00:40:06,000 --> 00:40:07,000
大概是什么样子

1287
00:40:07,000 --> 00:40:10,000
然后我就写了这么一个工具

1288
00:40:10,000 --> 00:40:12,000
把他们切好的静态图

1289
00:40:12,000 --> 00:40:14,000
利用某种

1290
00:40:14,000 --> 00:40:15,000
现在已经记不起来的

1291
00:40:15,000 --> 00:40:16,000
当时自己发明的

1292
00:40:16,000 --> 00:40:18,000
相当于 template engine

1293
00:40:18,000 --> 00:40:19,000
这么一个东西

1294
00:40:19,000 --> 00:40:21,000
把一些之前定好的

1295
00:40:21,000 --> 00:40:22,000
什么网站介绍

1296
00:40:22,000 --> 00:40:25,000
学工部介绍之类的冠进去

1297
00:40:25,000 --> 00:40:28,000
然后生成这么一个静态的网站的写法

1298
00:40:28,000 --> 00:40:30,000
所以你其实已经写过了

1299
00:40:30,000 --> 00:40:31,000
很多年以前

1300
00:40:31,000 --> 00:40:33,000
对只不过

1301
00:40:33,000 --> 00:40:36,000
在不知不觉的情歌下已经写了

1302
00:40:36,000 --> 00:40:38,000
而且是用 photoshop 写的

1303
00:40:38,000 --> 00:40:39,000
天哪

1304
00:40:40,000 --> 00:40:42,000
人生的心情解

1305
00:40:42,000 --> 00:40:44,000
曾经我也是软犯

1306
00:40:44,000 --> 00:40:45,000
所以这是你写的

1307
00:40:45,000 --> 00:40:48,000
难道你之后没有再写过另外一段吗

1308
00:40:48,000 --> 00:40:50,000
我之后没有

1309
00:40:50,000 --> 00:40:51,000
因为那个时候

1310
00:40:51,000 --> 00:40:53,000
我觉得这完之没有什么经常

1311
00:40:53,000 --> 00:40:54,000
确实是

1312
00:40:54,000 --> 00:40:55,000
然后

1313
00:40:55,000 --> 00:40:56,000
然后后来

1314
00:40:56,000 --> 00:40:58,000
唯一一个写过类似的东西

1315
00:40:58,000 --> 00:41:00,000
就是我说过的那个 lua

1316
00:41:00,000 --> 00:41:02,000
半自动化

1317
00:41:02,000 --> 00:41:03,000
半动态的

1318
00:41:03,000 --> 00:41:05,000
这么一个 symmas

1319
00:41:05,000 --> 00:41:07,000
blogsystem 对

1320
00:41:07,000 --> 00:41:11,000
然后 blogsystem 会把所有的那个

1321
00:41:12,000 --> 00:41:14,000
评论之类的

1322
00:41:14,000 --> 00:41:16,000
也都生成静态的

1323
00:41:17,000 --> 00:41:18,000
静态的

1324
00:41:18,000 --> 00:41:19,000
搞不好还是 txt 可是

1325
00:41:19,000 --> 00:41:21,000
因为 lua 的那个

1326
00:41:21,000 --> 00:41:22,000
lua 的一个好处

1327
00:41:22,000 --> 00:41:23,000
之一就是

1328
00:41:23,000 --> 00:41:25,000
你可以他的那个数组

1329
00:41:25,000 --> 00:41:26,000
就是他不数

1330
00:41:26,000 --> 00:41:27,000
就是 lua 里面

1331
00:41:27,000 --> 00:41:28,000
只有一种数字

1332
00:41:28,000 --> 00:41:29,000
table

1333
00:41:29,000 --> 00:41:31,000
然后这个 table 的语法

1334
00:41:31,000 --> 00:41:33,000
其实几乎是和 jason 非常像

1335
00:41:33,000 --> 00:41:36,000
是几乎是半 humorable

1336
00:41:36,000 --> 00:41:40,000
所以我就把那个评论直接存成

1337
00:41:40,000 --> 00:41:42,000
他的原生数据过程

1338
00:41:42,000 --> 00:41:44,000
然后就每个评论就是一个 lua 文件

1339
00:41:44,000 --> 00:41:46,000
然后人可以读机器

1340
00:41:46,000 --> 00:41:47,000
也可以读

1341
00:41:47,000 --> 00:41:48,000
挺好

1342
00:41:48,000 --> 00:41:49,000
OK

1343
00:41:49,000 --> 00:41:50,000
对

1344
00:41:50,000 --> 00:41:53,000
我觉得你说的这个其实是正确的

1345
00:41:53,000 --> 00:41:54,000
就是也许

1346
00:41:54,000 --> 00:41:55,000
如果你在学本城

1347
00:41:55,000 --> 00:41:57,000
然后你有点不知道要干嘛

1348
00:41:57,000 --> 00:41:58,000
那你可以写一个

1349
00:41:58,000 --> 00:41:59,000
静态网站诗生器出来

1350
00:41:59,000 --> 00:42:01,000
这个其实就有点

1351
00:42:01,000 --> 00:42:04,000
像一个所谓的 kata

1352
00:42:04,000 --> 00:42:07,000
就是就有本书叫做

1353
00:42:08,000 --> 00:42:10,000
progmatic program

1354
00:42:10,000 --> 00:42:11,000
应该是这本书

1355
00:42:11,000 --> 00:42:13,000
一本提出的这么一个概念就是

1356
00:42:13,000 --> 00:42:16,000
程序员应该准备几个

1357
00:42:17,000 --> 00:42:18,000
几个任务

1358
00:42:18,000 --> 00:42:19,000
然后这些任务

1359
00:42:20,000 --> 00:42:23,000
可以供他不停的锻炼自己的编程技巧

1360
00:42:23,000 --> 00:42:24,000
然后这种任务

1361
00:42:24,000 --> 00:42:26,000
就叫做 kata

1362
00:42:26,000 --> 00:42:27,000
或者叫 choran

1363
00:42:27,000 --> 00:42:28,000
然后有很多不同名字

1364
00:42:28,000 --> 00:42:30,000
但大意就是

1365
00:42:31,000 --> 00:42:32,000
kata 这个

1366
00:42:32,000 --> 00:42:34,000
kata 原来是日语

1367
00:42:34,000 --> 00:42:37,000
就是日文的汉字行

1368
00:42:37,000 --> 00:42:38,000
就是形状的行

1369
00:42:38,000 --> 00:42:40,000
这个字叫做 kata

1370
00:42:40,000 --> 00:42:42,000
然后他

1371
00:42:43,000 --> 00:42:46,000
这个词一般用来描述空手道

1372
00:42:46,000 --> 00:42:49,000
或者是书法之中的套路

1373
00:42:49,000 --> 00:42:50,000
或者招数

1374
00:42:50,000 --> 00:42:51,000
或者定式

1375
00:42:51,000 --> 00:42:52,000
为期的定式

1376
00:42:52,000 --> 00:42:54,000
就可以叫做 kata

1377
00:42:54,000 --> 00:42:56,000
但是 programming kata

1378
00:42:56,000 --> 00:42:59,000
又和这些招式的 kata 不一样

1379
00:42:59,000 --> 00:43:01,000
就是 programming kata 要

1380
00:43:01,000 --> 00:43:03,000
比如说我自己比较喜欢的

1381
00:43:03,000 --> 00:43:05,000
kata 就是把

1382
00:43:05,000 --> 00:43:07,000
实境制的

1383
00:43:09,000 --> 00:43:11,000
阿拉伯数字转成罗马数字

1384
00:43:11,000 --> 00:43:14,000
就是如果我遇到一枚新的语言

1385
00:43:14,000 --> 00:43:17,000
我就想先试试用这个语言做这件事

1386
00:43:17,000 --> 00:43:19,000
其实这就是 kata

1387
00:43:19,000 --> 00:43:21,000
那我觉得写一个动态网

1388
00:43:21,000 --> 00:43:22,000
写一个静态网的声音

1389
00:43:22,000 --> 00:43:24,000
其实也可以抽一张 kata

1390
00:43:24,000 --> 00:43:25,000
就是你可以

1391
00:43:25,000 --> 00:43:27,000
用你刚刚学到语言去写

1392
00:43:27,000 --> 00:43:28,000
这么一个东西

1393
00:43:28,000 --> 00:43:29,000
然后试着去解决你的问题

1394
00:43:29,000 --> 00:43:31,000
而且你可以写一个

1395
00:43:31,000 --> 00:43:33,000
然后扔了再写一个

1396
00:43:33,000 --> 00:43:35,000
如果你有兴趣的话

1397
00:43:35,000 --> 00:43:38,000
然后每次尝试不同的解决方案

1398
00:43:38,000 --> 00:43:39,000
然后对

1399
00:43:39,000 --> 00:43:42,000
其实对于编程也是一个很大的助理

1400
00:43:42,000 --> 00:43:43,000
对

1401
00:43:43,000 --> 00:43:46,000
就类似这种编程任务

1402
00:43:46,000 --> 00:43:47,000
还有很多

1403
00:43:47,000 --> 00:43:49,000
比如说你刚刚想要解决

1404
00:43:49,000 --> 00:43:50,000
写一个静态网的声音

1405
00:43:50,000 --> 00:43:51,000
其实是一种

1406
00:43:51,000 --> 00:43:53,000
你可以尝试写一个动态的

1407
00:43:53,000 --> 00:43:54,000
对吧

1408
00:43:54,000 --> 00:43:56,000
还可以做一些积极八八的事情

1409
00:43:56,000 --> 00:43:57,000
写一个动态的就更

1410
00:43:57,000 --> 00:43:59,000
有时候可能会觉得更复难

1411
00:43:59,000 --> 00:44:01,000
就是我当时觉得

1412
00:44:01,000 --> 00:44:02,000
应该更复难

1413
00:44:02,000 --> 00:44:03,000
现在还有两个复杂录

1414
00:44:03,000 --> 00:44:04,000
其实差不多

1415
00:44:04,000 --> 00:44:06,000
只不过可能动态的需要你

1416
00:44:06,000 --> 00:44:08,000
去掌握一些

1417
00:44:08,000 --> 00:44:10,000
比如说怎么样设立一个数理库

1418
00:44:10,000 --> 00:44:12,000
怎么样

1419
00:44:12,000 --> 00:44:14,000
把所有的该装的东西

1420
00:44:14,000 --> 00:44:15,000
装起来之类的

1421
00:44:15,000 --> 00:44:18,000
而静态网站声声器的任务

1422
00:44:18,000 --> 00:44:20,000
相对来说就更纯粹一点

1423
00:44:20,000 --> 00:44:21,000
对

1424
00:44:21,000 --> 00:44:23,000
刚刚讲哪里了

1425
00:44:23,000 --> 00:44:24,000
对

1426
00:44:24,000 --> 00:44:25,000
说到

1427
00:44:25,000 --> 00:44:26,000
后来我写了

1428
00:44:26,000 --> 00:44:27,000
对你写了一个

1429
00:44:27,000 --> 00:44:28,000
你用什么写的

1430
00:44:28,000 --> 00:44:29,000
用 Python 写的

1431
00:44:29,000 --> 00:44:30,000
对

1432
00:44:30,000 --> 00:44:31,000
用 Python 写的

1433
00:44:31,000 --> 00:44:32,000
对

1434
00:44:32,000 --> 00:44:33,000
然后用 Python 写了一个

1435
00:44:33,000 --> 00:44:34,000
然后

1436
00:44:34,000 --> 00:44:35,000
因为当时我看

1437
00:44:35,000 --> 00:44:36,000
Jaco 生成 Apple 4 Way

1438
00:44:36,000 --> 00:44:37,000
现在网站慢的

1439
00:44:37,000 --> 00:44:38,000
一个最主要原因

1440
00:44:38,000 --> 00:44:39,000
它是单合的

1441
00:44:39,000 --> 00:44:41,000
就它只有一个进程在跑

1442
00:44:41,000 --> 00:44:43,000
然后我看 CPU 占用的时候

1443
00:44:43,000 --> 00:44:44,000
就在它 Build 的过程中

1444
00:44:44,000 --> 00:44:46,000
100%意志在那里卡住

1445
00:44:46,000 --> 00:44:47,000
然后

1446
00:44:48,000 --> 00:44:50,000
我就想那能不能够多合

1447
00:44:50,000 --> 00:44:52,000
然后我在 Python 写的时候

1448
00:44:52,000 --> 00:44:53,000
我就把

1449
00:44:53,000 --> 00:44:55,000
就那个 Multi-Processing 那个

1450
00:44:55,000 --> 00:44:56,000
那个模块

1451
00:44:56,000 --> 00:44:58,000
就用多合合来处理

1452
00:44:58,000 --> 00:45:00,000
然后后来做到是

1453
00:45:00,000 --> 00:45:03,000
Build 的一个 Apple 4 Way

1454
00:45:03,000 --> 00:45:05,000
同样效果的占

1455
00:45:05,000 --> 00:45:07,000
大概是需要 10 秒左右吧

1456
00:45:07,000 --> 00:45:08,000
就在用

1457
00:45:08,000 --> 00:45:10,000
通通是开 4 个盒的情况下

1458
00:45:10,000 --> 00:45:11,000
12 秒

1459
00:45:11,000 --> 00:45:12,000
多少篇文章在这儿

1460
00:45:12,000 --> 00:45:13,000
2500 多

1461
00:45:13,000 --> 00:45:15,000
2500 多和 12 秒

1462
00:45:15,000 --> 00:45:16,000
对

1463
00:45:16,000 --> 00:45:18,000
就是但我也没有做到特别的优化

1464
00:45:18,000 --> 00:45:20,000
就只是简单的开了一下这个多合而已

1465
00:45:20,000 --> 00:45:22,000
Multi-Processing

1466
00:45:22,000 --> 00:45:23,000
对对

1467
00:45:23,000 --> 00:45:25,000
因为这个可能要扯到另外那个

1468
00:45:25,000 --> 00:45:26,000
Global Interpretor Lock 那件事情

1469
00:45:26,000 --> 00:45:27,000
但是

1470
00:45:27,000 --> 00:45:29,000
像留待下次吧

1471
00:45:29,000 --> 00:45:30,000
但是就要

1472
00:45:30,000 --> 00:45:31,000
Time Stop

1473
00:45:31,000 --> 00:45:33,000
对有一个这么技巧可以去做

1474
00:45:33,000 --> 00:45:35,000
做到它可以 12 个

1475
00:45:35,000 --> 00:45:38,000
但是觉得还是不够快

1476
00:45:38,000 --> 00:45:42,000
就又放了那么小半年吧

1477
00:45:42,000 --> 00:45:43,000
然后直到

1478
00:45:43,000 --> 00:45:45,000
就前一段时间

1479
00:45:45,000 --> 00:45:48,000
是今年开始我迷上写那个 Go

1480
00:45:48,000 --> 00:45:49,000
那个语言

1481
00:45:49,000 --> 00:45:50,000
然后前段时间发现有人用

1482
00:45:50,000 --> 00:45:51,000
Go 写了一个

1483
00:45:51,000 --> 00:45:53,000
静态生成器叫做

1484
00:45:53,000 --> 00:45:54,000
Ugo

1485
00:45:54,000 --> 00:45:56,000
对 HUGO

1486
00:45:56,000 --> 00:45:57,000
HN 是不发音的吧对吧

1487
00:45:57,000 --> 00:45:58,000
Ugo

1488
00:45:58,000 --> 00:46:00,000
如果您按法语念法呢

1489
00:46:00,000 --> 00:46:01,000
Ugo

1490
00:46:01,000 --> 00:46:02,000
就是鱼果

1491
00:46:02,000 --> 00:46:03,000
大作家鱼果的名字

1492
00:46:03,000 --> 00:46:04,000
对

1493
00:46:04,000 --> 00:46:05,000
然后

1494
00:46:05,000 --> 00:46:07,000
我就试了一下

1495
00:46:07,000 --> 00:46:09,000
然后发现它

1496
00:46:09,000 --> 00:46:11,000
Build 的整个两千五篇文章

1497
00:46:11,000 --> 00:46:13,000
只需要不到一秒钟在我电脑上

1498
00:46:13,000 --> 00:46:15,000
而且只用一个盒

1499
00:46:15,000 --> 00:46:16,000
顿时就败

1500
00:46:16,000 --> 00:46:19,000
顿时就给它跪了

1501
00:46:19,000 --> 00:46:20,000
是啊

1502
00:46:20,000 --> 00:46:21,000
我发现你现在已经是

1503
00:46:21,000 --> 00:46:23,000
成了半个 Go 的

1504
00:46:23,000 --> 00:46:25,000
叫什么传福音者

1505
00:46:25,000 --> 00:46:26,000
Eventalist

1506
00:46:26,000 --> 00:46:27,000
对

1507
00:46:27,000 --> 00:46:29,000
传教室

1508
00:46:29,000 --> 00:46:30,000
对传教室

1509
00:46:30,000 --> 00:46:32,000
这确实性能

1510
00:46:32,000 --> 00:46:33,000
性能不得了

1511
00:46:33,000 --> 00:46:35,000
就其他的那些

1512
00:46:35,000 --> 00:46:36,000
不管

1513
00:46:36,000 --> 00:46:37,000
它用脚本原写的

1514
00:46:37,000 --> 00:46:39,000
肯定跟这个效能是没有办法比的

1515
00:46:39,000 --> 00:46:41,000
而且

1516
00:46:41,000 --> 00:46:42,000
Ugo

1517
00:46:42,000 --> 00:46:44,000
任何用 Go 写的程序都有这个好处

1518
00:46:44,000 --> 00:46:46,000
它的部署相当容易

1519
00:46:46,000 --> 00:46:47,000
这个它的那个

1520
00:46:47,000 --> 00:46:50,000
就是它最终生成的那个程序

1521
00:46:50,000 --> 00:46:52,000
是一个 Baner

1522
00:46:52,000 --> 00:46:55,000
一单一一个不需要外部依赖

1523
00:46:55,000 --> 00:46:57,000
除了 G-Lib C

1524
00:46:57,000 --> 00:46:59,000
这个肯定每个系统都有的嘛

1525
00:46:59,000 --> 00:47:01,000
它不需要任何外部依赖

1526
00:47:01,000 --> 00:47:02,000
不需要装依赖

1527
00:47:02,000 --> 00:47:03,000
然后你所要做的事情

1528
00:47:03,000 --> 00:47:05,000
就是如果你要在服务器上部署

1529
00:47:05,000 --> 00:47:07,000
你就把那个 Baner

1530
00:47:07,000 --> 00:47:08,000
复制到服务器上

1531
00:47:08,000 --> 00:47:10,000
就搞定了

1532
00:47:10,000 --> 00:47:11,000
所以就不会出现

1533
00:47:11,000 --> 00:47:13,000
刚才你说那个人讲的什么

1534
00:47:13,000 --> 00:47:15,000
一个 Git Ripple

1535
00:47:15,000 --> 00:47:16,000
然后 Tusa Modules

1536
00:47:16,000 --> 00:47:17,000
那一堆乱七八糟的事情

1537
00:47:17,000 --> 00:47:19,000
就是相当简单容易

1538
00:47:19,000 --> 00:47:21,000
然后性能好

1539
00:47:21,000 --> 00:47:22,000
对

1540
00:47:22,000 --> 00:47:25,000
它从一个看起来似模似样的这么一个

1541
00:47:25,000 --> 00:47:27,000
大工具

1542
00:47:27,000 --> 00:47:29,000
进演化到了有点像一个

1543
00:47:29,000 --> 00:47:31,000
Stand Along 这么一个

1544
00:47:31,000 --> 00:47:33,000
就是待在这个 Local Bin

1545
00:47:33,000 --> 00:47:35,000
下面一个单一工具

1546
00:47:35,000 --> 00:47:37,000
然后忽然之间

1547
00:47:37,000 --> 00:47:38,000
这么复杂的任务

1548
00:47:38,000 --> 00:47:40,000
变得这么简单

1549
00:47:40,000 --> 00:47:42,000
而且这么 Battery Included

1550
00:47:42,000 --> 00:47:43,000
对

1551
00:47:43,000 --> 00:47:45,000
就感觉是蛮爽

1552
00:47:45,000 --> 00:47:46,000
对

1553
00:47:46,000 --> 00:47:48,000
但是这个也有代价的

1554
00:47:48,000 --> 00:47:51,000
代价就是你丧失了灵活性

1555
00:47:51,000 --> 00:47:52,000
因为起码按目前

1556
00:47:52,000 --> 00:47:53,000
够的这种方法

1557
00:47:53,000 --> 00:47:55,000
它是没有办法动态加载

1558
00:47:55,000 --> 00:47:56,000
其他代码进去执行的

1559
00:47:56,000 --> 00:47:58,000
当然你要非要说

1560
00:47:58,000 --> 00:48:00,000
你要自己用够实现一个

1561
00:48:00,000 --> 00:48:02,000
JS 的什么 Interpreter

1562
00:48:02,000 --> 00:48:04,000
然后你在 Load 的

1563
00:48:04,000 --> 00:48:05,000
JS 文件

1564
00:48:05,000 --> 00:48:06,000
其他脚步文件进去

1565
00:48:06,000 --> 00:48:07,000
那是另外一说

1566
00:48:07,000 --> 00:48:09,000
但是就是标准的情况下

1567
00:48:09,000 --> 00:48:12,000
你是没办法再去扩展这个程序本身

1568
00:48:12,000 --> 00:48:14,000
所以这和刚才那些

1569
00:48:14,000 --> 00:48:15,000
像 Jackle

1570
00:48:15,000 --> 00:48:16,000
还有包括

1571
00:48:16,000 --> 00:48:17,000
现在也可能有

1572
00:48:17,000 --> 00:48:20,000
市面上常见的主流的

1573
00:48:20,000 --> 00:48:21,000
都有可能 10 几 20 个

1574
00:48:21,000 --> 00:48:24,000
这种精彩战略生存器了吧

1575
00:48:24,000 --> 00:48:25,000
对

1576
00:48:25,000 --> 00:48:26,000
我做功课的时候

1577
00:48:26,000 --> 00:48:28,000
找到一个网站 GitHub

1578
00:48:28,000 --> 00:48:29,000
上面的一个列表

1579
00:48:29,000 --> 00:48:31,000
叫做 Static Side Generators

1580
00:48:31,000 --> 00:48:32,000
Generators 的列表

1581
00:48:32,000 --> 00:48:33,000
上面

1582
00:48:33,000 --> 00:48:37,000
我数了一下有 278 个

1583
00:48:37,000 --> 00:48:40,000
包括 Ugo 在内的 Static Side Generators

1584
00:48:40,000 --> 00:48:42,000
各种各样的语言写出来的

1585
00:48:42,000 --> 00:48:43,000
什么

1586
00:48:43,000 --> 00:48:45,000
连什么 bash 都有

1587
00:48:45,000 --> 00:48:47,000
然后还有一些

1588
00:48:47,000 --> 00:48:48,000
可能言语意义上

1589
00:48:48,000 --> 00:48:50,000
不算是精彩保证生存器的东西

1590
00:48:50,000 --> 00:48:52,000
比如说 Library Load

1591
00:48:52,000 --> 00:48:54,000
它也算在里面了

1592
00:48:54,000 --> 00:48:56,000
你这个列表不好

1593
00:48:56,000 --> 00:48:58,000
对你没有可比性不强

1594
00:48:58,000 --> 00:48:59,000
我待会儿

1595
00:48:59,000 --> 00:49:01,000
有人专门做了一个

1596
00:49:01,000 --> 00:49:03,000
因为市面上有太多

1597
00:49:03,000 --> 00:49:05,000
精彩战略生存器

1598
00:49:05,000 --> 00:49:06,000
然后你知道

1599
00:49:06,000 --> 00:49:07,000
你说的这个是带投票的

1600
00:49:07,000 --> 00:49:08,000
是吧

1601
00:49:08,000 --> 00:49:09,000
我好像也看到

1602
00:49:09,000 --> 00:49:10,000
它有一个很漂亮的功能的

1603
00:49:10,000 --> 00:49:11,000
还有一个简单的一个

1604
00:49:11,000 --> 00:49:12,000
就是论述判断

1605
00:49:12,000 --> 00:49:14,000
比如它用的什么磨板语言

1606
00:49:14,000 --> 00:49:15,000
它是什么样的方式

1607
00:49:15,000 --> 00:49:16,000
协议怎么样的

1608
00:49:16,000 --> 00:49:18,000
就是有人做了一个很漂亮的网站

1609
00:49:18,000 --> 00:49:20,000
去比较市面上

1610
00:49:20,000 --> 00:49:21,000
就是已有的

1611
00:49:21,000 --> 00:49:23,000
这些精彩战略生存器

1612
00:49:23,000 --> 00:49:24,000
由此可见

1613
00:49:24,000 --> 00:49:26,000
什么选择困难

1614
00:49:26,000 --> 00:49:28,000
专门严重到了什么样的程度

1615
00:49:28,000 --> 00:49:29,000
对

1616
00:49:29,000 --> 00:49:31,000
但是我说的

1617
00:49:31,000 --> 00:49:33,000
刚刚另外一个站点上面

1618
00:49:33,000 --> 00:49:35,000
有一个投票功能

1619
00:49:35,000 --> 00:49:37,000
就是选你最喜欢的

1620
00:49:37,000 --> 00:49:39,000
或者说选你最熟悉的

1621
00:49:39,000 --> 00:49:41,000
精彩网站生存器

1622
00:49:41,000 --> 00:49:44,000
Jayco 远远领先于所有其他的生存器

1623
00:49:44,000 --> 00:49:46,000
它是鼻子吗

1624
00:49:46,000 --> 00:49:47,000
对

1625
00:49:47,000 --> 00:49:49,000
我们不翻来简单说一下

1626
00:49:49,000 --> 00:49:50,000
Tom Patterson

1627
00:49:50,000 --> 00:49:51,000
Preston

1628
00:49:51,000 --> 00:49:52,000
Wayne

1629
00:49:52,000 --> 00:49:53,000
这些八卦

1630
00:49:53,000 --> 00:49:54,000
你说

1631
00:49:54,000 --> 00:49:56,000
它是一个很知名的

1632
00:49:56,000 --> 00:49:59,000
或者说很强大的 Ruby 成绩

1633
00:49:59,000 --> 00:50:02,000
它创立了 Guitar

1634
00:50:02,000 --> 00:50:04,000
然后后来做了很长时间的 Present

1635
00:50:04,000 --> 00:50:06,000
然后后来前两天吧

1636
00:50:06,000 --> 00:50:09,000
它发了一条推还是什么

1637
00:50:09,000 --> 00:50:12,000
说 Goodbye Guitar

1638
00:50:12,000 --> 00:50:14,000
Hello Oxalus Rift

1639
00:50:14,000 --> 00:50:18,000
就是它去做 VR 眼镜的

1640
00:50:18,000 --> 00:50:20,000
它去做 VR 眼镜的公司

1641
00:50:20,000 --> 00:50:22,000
Facebook 买下来了吗

1642
00:50:22,000 --> 00:50:23,000
那一家

1643
00:50:23,000 --> 00:50:24,000
对

1644
00:50:24,000 --> 00:50:27,000
但是风传说八卦说

1645
00:50:27,000 --> 00:50:30,000
它离职并不是因为它想离职

1646
00:50:30,000 --> 00:50:33,000
而是因为它有一个女下属

1647
00:50:33,000 --> 00:50:35,000
壮高它 Harrisment

1648
00:50:35,000 --> 00:50:36,000
你不知道吗

1649
00:50:36,000 --> 00:50:38,000
这个声音自然到的很大的

1650
00:50:38,000 --> 00:50:41,000
这不过我知道

1651
00:50:41,000 --> 00:50:42,000
不然我干嘛要说呢

1652
00:50:42,000 --> 00:50:44,000
不过我只是来八卦一下

1653
00:50:44,000 --> 00:50:47,000
然后这故事其实还蛮那个的

1654
00:50:47,000 --> 00:50:49,000
而且说它和它这妻子

1655
00:50:49,000 --> 00:50:50,000
对

1656
00:50:50,000 --> 00:50:52,000
同时一起 Harris 这个人

1657
00:50:52,000 --> 00:50:55,000
我觉得还挺夸张的

1658
00:50:55,000 --> 00:50:56,000
对

1659
00:50:56,000 --> 00:50:58,000
之前有一个 Guitar 的女员工

1660
00:50:58,000 --> 00:51:00,000
去网上发了说

1661
00:51:00,000 --> 00:51:03,000
就是说 Tom Prestor Wainer 和他老婆

1662
00:51:03,000 --> 00:51:05,000
一个是他性别歧视吧

1663
00:51:05,000 --> 00:51:07,000
一个是 Harrisment

1664
00:51:07,000 --> 00:51:11,000
一个是基于性别歧视 Harrisment

1665
00:51:11,000 --> 00:51:14,000
然后另外一个是在办公室里边

1666
00:51:14,000 --> 00:51:15,000
Stocked

1667
00:51:15,000 --> 00:51:17,000
就是跟踪他什么的

1668
00:51:17,000 --> 00:51:21,000
反正挺不可思议的

1669
00:51:21,000 --> 00:51:24,000
后来 Tom Prestor Wainer 就走路了

1670
00:51:24,000 --> 00:51:25,000
对

1671
00:51:25,000 --> 00:51:29,000
我不知道他去了 Klaustrophed

1672
00:51:29,000 --> 00:51:33,000
他名义上说有一个调查组

1673
00:51:33,000 --> 00:51:35,000
调查团来查这件事情

1674
00:51:35,000 --> 00:51:40,000
但是被欺负的女员工

1675
00:51:40,000 --> 00:51:42,000
说其实根本就没有什么调查团

1676
00:51:42,000 --> 00:51:45,000
他们只是关起门来谈了谈

1677
00:51:45,000 --> 00:51:48,000
觉得这件事情对公司影响太坏

1678
00:51:48,000 --> 00:51:51,000
然后说 Tom 你还是走吧

1679
00:51:51,000 --> 00:51:52,000
然后他们就走

1680
00:51:52,000 --> 00:51:54,000
对

1681
00:51:54,000 --> 00:51:55,000
对

1682
00:51:55,000 --> 00:51:56,000
对

1683
00:51:56,000 --> 00:51:58,000
这个 Jaco 其实他

1684
00:51:58,000 --> 00:52:00,000
因为他吃个鼻祖

1685
00:52:00,000 --> 00:52:01,000
然后他发展的比较早

1686
00:52:01,000 --> 00:52:05,000
由此就生成了很多周边产品

1687
00:52:05,000 --> 00:52:07,000
或者说衍生产品

1688
00:52:07,000 --> 00:52:09,000
也是很多人用

1689
00:52:09,000 --> 00:52:11,000
比如说 Jaco Bootstrap

1690
00:52:11,000 --> 00:52:14,000
最开始是用推特 Bootstrap 的主题

1691
00:52:14,000 --> 00:52:16,000
去包装一个 Jaco

1692
00:52:16,000 --> 00:52:19,000
然后让你直接可以替换主题

1693
00:52:19,000 --> 00:52:21,000
不用自己去定制模板了

1694
00:52:21,000 --> 00:52:24,000
后来又出了一个产品叫做 Octopress

1695
00:52:24,000 --> 00:52:27,000
Octopress 出来的一段时间之内

1696
00:52:27,000 --> 00:52:32,000
好像我认识的所有稍微有点名气

1697
00:52:32,000 --> 00:52:35,000
稍微能够坚持那么写两天 Blog

1698
00:52:35,000 --> 00:52:39,000
全都把他们 Worldpress 换成了 Octopress

1699
00:52:39,000 --> 00:52:40,000
对

1700
00:52:40,000 --> 00:52:42,000
那个时候就好像你不用 Octopress

1701
00:52:42,000 --> 00:52:45,000
你就不是一个程序员那种样去

1702
00:52:46,000 --> 00:52:50,000
所以 Octopress 就是 Jaco 的一个

1703
00:52:50,000 --> 00:52:52,000
叫什么一个皮

1704
00:52:53,000 --> 00:52:55,000
一个叫什么

1705
00:52:55,000 --> 00:52:58,000
加了插件的爱好者

1706
00:52:58,000 --> 00:53:00,000
定制 Deluxe 白金版

1707
00:53:00,000 --> 00:53:02,000
我想起来了

1708
00:53:02,000 --> 00:53:05,000
对我是用原生的 Jaco 裸奔

1709
00:53:05,000 --> 00:53:06,000
就是爱不装

1710
00:53:06,000 --> 00:53:08,000
能跑 Build Apple Force

1711
00:53:08,000 --> 00:53:10,000
那个站是一分钟

1712
00:53:10,000 --> 00:53:13,000
然后装了 OctopressBuild 出来是五分钟

1713
00:53:13,000 --> 00:53:15,000
然后我就果断的放弃

1714
00:53:16,000 --> 00:53:19,000
对 而且 Octopress 我觉得最大问题是很多

1715
00:53:22,000 --> 00:53:24,000
我相信江江也说过这问题

1716
00:53:24,000 --> 00:53:26,000
就是他的默认主题其实非常难看

1717
00:53:26,000 --> 00:53:31,000
就比那个和 Worldpress 的默认主题有过之无不及

1718
00:53:31,000 --> 00:53:32,000
但是非常多的人在用

1719
00:53:32,000 --> 00:53:36,000
所以就让人觉得很很汉眼

1720
00:53:36,000 --> 00:53:39,000
默认主题没有哪个好看的吧

1721
00:53:39,000 --> 00:53:40,000
我觉得

1722
00:53:40,000 --> 00:53:42,000
design by programmer

1723
00:53:42,000 --> 00:53:44,000
默认主题有好看的

1724
00:53:44,000 --> 00:53:48,000
哪个什么 sms 软件你跟默认主题好看的

1725
00:53:50,000 --> 00:53:52,000
哎呀我回去做两天功课

1726
00:53:52,000 --> 00:53:53,000
回来再给你答案吧

1727
00:53:53,000 --> 00:53:55,000
你肯定想不出了

1728
00:53:55,000 --> 00:53:56,000
anyway

1729
00:53:56,000 --> 00:53:57,000
反正

1730
00:53:57,000 --> 00:54:00,000
我知道那个苹果的那个

1731
00:54:00,000 --> 00:54:02,000
网站生生器叫什么

1732
00:54:02,000 --> 00:54:04,000
iWeb

1733
00:54:04,000 --> 00:54:06,000
对 iWeb 不错

1734
00:54:06,000 --> 00:54:07,000
天哪

1735
00:54:07,000 --> 00:54:10,000
你做一个果粉不敢反驳吗

1736
00:54:10,000 --> 00:54:11,000
好吧

1737
00:54:11,000 --> 00:54:12,000
无力

1738
00:54:14,000 --> 00:54:16,000
哎不过你还别说真有用那个

1739
00:54:16,000 --> 00:54:20,000
我之前就刚刚讲了我的那个导师

1740
00:54:20,000 --> 00:54:22,000
他自己有一个

1741
00:54:22,000 --> 00:54:24,000
在学校挂了个人网站

1742
00:54:24,000 --> 00:54:25,000
要是给学生

1743
00:54:25,000 --> 00:54:26,000
比如他要教那门课

1744
00:54:26,000 --> 00:54:28,000
他要布置一些作业

1745
00:54:28,000 --> 00:54:29,000
或者一些什么相关的资料

1746
00:54:29,000 --> 00:54:30,000
他会放上去吗

1747
00:54:30,000 --> 00:54:32,000
他自己还真的是用那个 iWeb 写的

1748
00:54:33,000 --> 00:54:36,000
我相信其实个人主页生成器

1749
00:54:36,000 --> 00:54:39,000
这个人主页创作软件这种东西

1750
00:54:39,000 --> 00:54:40,000
一直都有市场

1751
00:54:40,000 --> 00:54:43,000
就像早期的微软的那个 frampage

1752
00:54:43,000 --> 00:54:45,000
也是想要抓到这一块

1753
00:54:45,000 --> 00:54:49,000
但是没有一个能做的真正让不懂电脑的人

1754
00:54:49,000 --> 00:54:50,000
可以做出一个漂亮的网页来

1755
00:54:50,000 --> 00:54:52,000
即便 iWeb 也是有这个问题

1756
00:54:52,000 --> 00:54:53,000
对

1757
00:54:53,000 --> 00:54:55,000
可能最接近的应该是连个什么

1758
00:54:55,000 --> 00:54:57,000
就叫 frampage 吧

1759
00:54:59,000 --> 00:55:00,000
你说微软的 frampage

1760
00:55:00,000 --> 00:55:01,000
对

1761
00:55:01,000 --> 00:55:02,000
就从异用性的角度来讲

1762
00:55:02,000 --> 00:55:03,000
因为据说

1763
00:55:03,000 --> 00:55:04,000
我不觉得

1764
00:55:04,000 --> 00:55:06,000
肯定但是不好用

1765
00:55:06,000 --> 00:55:07,000
但是就是在所有不好用的里面

1766
00:55:07,000 --> 00:55:09,000
它是还算还可以的那种

1767
00:55:09,000 --> 00:55:10,000
最后一个说

1768
00:55:10,000 --> 00:55:13,000
就是 the least worse

1769
00:55:14,000 --> 00:55:15,000
对

1770
00:55:15,000 --> 00:55:16,000
鸡蛋里面

1771
00:55:16,000 --> 00:55:17,000
脱子里面拔将军的话

1772
00:55:17,000 --> 00:55:18,000
只能选择

1773
00:55:18,000 --> 00:55:19,000
对

1774
00:55:20,000 --> 00:55:22,000
然后因为就很多那个什么

1775
00:55:22,000 --> 00:55:25,000
办公室的那种小秘书

1776
00:55:25,000 --> 00:55:26,000
本来老秘书

1777
00:55:26,000 --> 00:55:27,000
就是大妈

1778
00:55:27,000 --> 00:55:30,000
他可能学学业绩也能搞懂

1779
00:55:30,000 --> 00:55:32,000
然后能做出一个页面来

1780
00:55:32,000 --> 00:55:33,000
虽然不好看

1781
00:55:33,000 --> 00:55:35,000
但起码该有的信息都有了

1782
00:55:35,000 --> 00:55:36,000
你就测合对用吧

1783
00:55:37,000 --> 00:55:38,000
对

1784
00:55:38,000 --> 00:55:39,000
大妈有色归类体

1785
00:55:39,000 --> 00:55:40,000
这是常量一个软件

1786
00:55:40,000 --> 00:55:42,000
应用性的非常重要标准

1787
00:55:42,000 --> 00:55:43,000
对

1788
00:55:43,000 --> 00:55:44,000
我记得早期

1789
00:55:44,000 --> 00:55:46,000
苹果还在那边吹嘘

1790
00:55:46,000 --> 00:55:47,000
也不是吹嘘

1791
00:55:47,000 --> 00:55:48,000
就是那个时候点的确是实情

1792
00:55:48,000 --> 00:55:51,000
就是七老八十的大妈也可以

1793
00:55:51,000 --> 00:55:53,000
不经直引就使用 iPad

1794
00:55:53,000 --> 00:55:54,000
可是现在

1795
00:55:54,000 --> 00:55:56,000
苹果已经在 iPad 里面内置什么

1796
00:55:56,000 --> 00:55:57,000
lstips

1797
00:55:57,000 --> 00:55:59,000
这种 2 B 程序的

1798
00:55:59,000 --> 00:56:00,000
他已经那个什么

1799
00:56:00,000 --> 00:56:02,000
他已经那个投降了吗

1800
00:56:02,000 --> 00:56:03,000
他已经不再简单了

1801
00:56:03,000 --> 00:56:04,000
对

1802
00:56:04,000 --> 00:56:06,000
这个任何系统复杂的程度

1803
00:56:06,000 --> 00:56:09,000
都不可能在老太婆又是不

1804
00:56:09,000 --> 00:56:10,000
对

1805
00:56:10,000 --> 00:56:11,000
不过 frampage 它好用

1806
00:56:11,000 --> 00:56:13,000
其实有一个最核心的点

1807
00:56:13,000 --> 00:56:15,000
就是太婆叫好用

1808
00:56:15,000 --> 00:56:17,000
它应该是就是 pgback

1809
00:56:17,000 --> 00:56:18,000
到另外一个东西上

1810
00:56:18,000 --> 00:56:19,000
就是那个 word

1811
00:56:19,000 --> 00:56:20,000
因为很多人都学

1812
00:56:20,000 --> 00:56:22,000
就如果你是在办公室工作的

1813
00:56:22,000 --> 00:56:23,000
word 就是你跑不掉

1814
00:56:23,000 --> 00:56:24,000
一定要用到一个东西

1815
00:56:24,000 --> 00:56:26,000
然后那个 frampage

1816
00:56:26,000 --> 00:56:27,000
他做的很像那个 word

1817
00:56:27,000 --> 00:56:28,000
所以其实

1818
00:56:28,000 --> 00:56:30,000
就学习门槛肯定还是有的

1819
00:56:30,000 --> 00:56:32,000
但是因为你学过 word 之后

1820
00:56:32,000 --> 00:56:34,000
再转过来就没有那么斗了

1821
00:56:34,000 --> 00:56:35,000
对

1822
00:56:35,000 --> 00:56:37,000
当时让我非常感动

1823
00:56:37,000 --> 00:56:40,000
现在想起来非常汉言的一件事情

1824
00:56:40,000 --> 00:56:41,000
是我发现

1825
00:56:41,000 --> 00:56:43,000
当时我装了 dreamware

1826
00:56:43,000 --> 00:56:45,000
装了 frampage

1827
00:56:45,000 --> 00:56:47,000
还装了有另外一个什么东西

1828
00:56:49,000 --> 00:56:51,000
应该是 Adobe 的 go live

1829
00:56:51,000 --> 00:56:53,000
就是 go live

1830
00:56:53,000 --> 00:56:54,000
什么东西

1831
00:56:56,000 --> 00:56:57,000
不行

1832
00:56:57,000 --> 00:56:58,000
这个东西我一样搜一下

1833
00:56:58,000 --> 00:56:59,000
就是 Adobe

1834
00:56:59,000 --> 00:57:01,000
我曾经在收购这个

1835
00:57:01,000 --> 00:57:02,000
macromedia

1836
00:57:02,000 --> 00:57:03,000
呃

1837
00:57:03,000 --> 00:57:05,000
macromedia 之前有一款自己的

1838
00:57:05,000 --> 00:57:07,000
那个

1839
00:57:07,000 --> 00:57:09,000
呃叫什么

1840
00:57:09,000 --> 00:57:11,000
主页创作软件

1841
00:57:11,000 --> 00:57:13,000
对 Adobe go live

1842
00:57:13,000 --> 00:57:14,000
这个东西实际上

1843
00:57:14,000 --> 00:57:16,000
我在很长一段时间里面

1844
00:57:16,000 --> 00:57:18,000
都认为它比 dreamware 好用太多了

1845
00:57:18,000 --> 00:57:20,000
但是在那时候

1846
00:57:20,000 --> 00:57:24,000
我在 frampage go live

1847
00:57:24,000 --> 00:57:25,000
还有 dreamware 里面

1848
00:57:25,000 --> 00:57:26,000
同时做了一件事

1849
00:57:26,000 --> 00:57:28,000
就是我想把一行字

1850
00:57:29,000 --> 00:57:31,000
缩进一段距离

1851
00:57:31,000 --> 00:57:33,000
还是做某一

1852
00:57:33,000 --> 00:57:35,000
想要达成某一个目的的时候

1853
00:57:35,000 --> 00:57:36,000
我发现

1854
00:57:36,000 --> 00:57:39,000
长按着空格键并不能让字

1855
00:57:39,000 --> 00:57:40,000
在所有边界器面

1856
00:57:40,000 --> 00:57:42,000
长按空格键并不能让字

1857
00:57:42,000 --> 00:57:44,000
移动到我想要的地方

1858
00:57:44,000 --> 00:57:45,000
frampage 可以

1859
00:57:45,000 --> 00:57:47,000
只有 frampage 可以

1860
00:57:47,000 --> 00:57:48,000
因为 frampage 在里面

1861
00:57:48,000 --> 00:57:49,000
差了一大堆

1862
00:57:49,000 --> 00:57:50,000
那个 nbsp

1863
00:57:50,000 --> 00:57:52,000
运动中间的空格

1864
00:57:53,000 --> 00:57:55,000
所以看意用性还是很不一样吗

1865
00:57:55,000 --> 00:57:56,000
intuitive

1866
00:57:56,000 --> 00:57:57,000
对

1867
00:57:57,000 --> 00:57:58,000
very intuitive

1868
00:57:58,000 --> 00:57:59,000
对 我要说

1869
00:57:59,000 --> 00:58:01,000
还是要夸他一下

1870
00:58:02,000 --> 00:58:05,000
在那些久远的想要砸电脑的年代

1871
00:58:05,000 --> 00:58:08,000
有这样让人耳目一新的软件出现

1872
00:58:08,000 --> 00:58:10,000
真的挺感动

1873
00:58:10,000 --> 00:58:12,000
微小而确定的幸福

1874
00:58:15,000 --> 00:58:16,000
把药撤远了

1875
00:58:17,000 --> 00:58:19,000
刚才撤了那几个

1876
00:58:19,000 --> 00:58:20,000
pathong 其实还有一个

1877
00:58:20,000 --> 00:58:22,000
比较知名的生成机

1878
00:58:22,000 --> 00:58:24,000
叫做 pallican

1879
00:58:24,000 --> 00:58:25,000
这应该是在

1880
00:58:25,000 --> 00:58:26,000
对

1881
00:58:26,000 --> 00:58:27,000
应该有个叫 high 的

1882
00:58:27,000 --> 00:58:28,000
对不对

1883
00:58:30,000 --> 00:58:31,000
对

1884
00:58:31,000 --> 00:58:32,000
对

1885
00:58:32,000 --> 00:58:33,000
对

1886
00:58:33,000 --> 00:58:34,000
对

1887
00:58:34,000 --> 00:58:36,000
几乎是仿 Jaco 做的

1888
00:58:36,000 --> 00:58:37,000
对

1889
00:58:37,000 --> 00:58:38,000
是一个印度人做的

1890
00:58:38,000 --> 00:58:39,000
我记得

1891
00:58:39,000 --> 00:58:40,000
是吗

1892
00:58:40,000 --> 00:58:41,000
然后还有

1893
00:58:41,000 --> 00:58:42,000
对

1894
00:58:42,000 --> 00:58:44,000
pallican 是一个法国人

1895
00:58:44,000 --> 00:58:48,000
叫做 Alexi Maitai

1896
00:58:49,000 --> 00:58:51,000
Mosimaitai

1897
00:58:51,000 --> 00:58:52,000
对

1898
00:58:52,000 --> 00:58:53,000
是一个法国人

1899
00:58:53,000 --> 00:58:54,000
然后

1900
00:58:54,000 --> 00:58:56,000
他应该是给毛泽大工作的

1901
00:58:56,000 --> 00:58:57,000
我觉得

1902
00:58:57,000 --> 00:58:58,000
我记得

1903
00:58:58,000 --> 00:59:00,000
然后他的之所以叫 pallican

1904
00:59:00,000 --> 00:59:01,000
并不是因为叫

1905
00:59:01,000 --> 00:59:03,000
pallican 是孔雀的意思

1906
00:59:03,000 --> 00:59:06,000
反正 pallican 他说是一个

1907
00:59:06,000 --> 00:59:08,000
calapine

1908
00:59:08,000 --> 00:59:10,000
anagram

1909
00:59:10,000 --> 00:59:11,000
不懂

1910
00:59:11,000 --> 00:59:12,000
这法语不知道怎么就

1911
00:59:12,000 --> 00:59:13,000
法语的笔记本的意思

1912
00:59:13,000 --> 00:59:15,000
我相信应该是 calapone

1913
00:59:15,000 --> 00:59:16,000
对

1914
00:59:16,000 --> 00:59:18,000
然后法语里面是笔记本的意思

1915
00:59:18,000 --> 00:59:20,000
然后取名叫 pallican

1916
00:59:20,000 --> 00:59:21,000
当然就是

1917
00:59:21,000 --> 00:59:23,000
当然还有一个

1918
00:59:23,000 --> 00:59:25,000
在 Jaco 之后开发的也是

1919
00:59:25,000 --> 00:59:28,000
G.Ruby 的生成器

1920
00:59:28,000 --> 00:59:30,000
叫做 middleman

1921
00:59:30,000 --> 00:59:32,000
middleman 最大的卖点是

1922
00:59:32,000 --> 00:59:35,000
他支持的插件比 Jaco 还要多

1923
00:59:35,000 --> 00:59:36,000
对

1924
00:59:36,000 --> 00:59:39,000
可扩展性比 Jaco 还要强

1925
00:59:39,000 --> 00:59:41,000
但很有可能也比 Jaco 还要慢

1926
00:59:42,000 --> 00:59:43,000
对

1927
00:59:43,000 --> 00:59:44,000
我觉得我们不能挨个介绍

1928
00:59:44,000 --> 00:59:46,000
我觉得要介绍那个 300 多项

1929
00:59:46,000 --> 00:59:48,000
说到明年的讲不完

1930
00:59:48,000 --> 00:59:49,000
278

1931
00:59:49,000 --> 00:59:50,000
对

1932
00:59:50,000 --> 00:59:52,000
这个类似乎已经有 342 个了

1933
00:59:53,000 --> 00:59:54,000
好厉害

1934
00:59:54,000 --> 00:59:55,000
对你不觉得

1935
00:59:55,000 --> 00:59:56,000
所以你也可以写个

1936
00:59:56,000 --> 00:59:58,000
一帮不怎么写字的程式员

1937
00:59:58,000 --> 01:00:01,000
天天飞啦啦进写这么多东西

1938
01:00:01,000 --> 01:00:02,000
就像我说的

1939
01:00:02,000 --> 01:00:03,000
它是一个 cata

1940
01:00:03,000 --> 01:00:04,000
而且它是一个很好的 cata

1941
01:00:04,000 --> 01:00:05,000
所以你用的是

1942
01:00:05,000 --> 01:00:06,000
如果你要用别人的

1943
01:00:06,000 --> 01:00:07,000
你一定要小心

1944
01:00:07,000 --> 01:00:09,000
你要很容易被看

1945
01:00:09,000 --> 01:00:10,000
对

1946
01:00:10,000 --> 01:00:12,000
所谓 nih 情节

1947
01:00:12,000 --> 01:00:14,000
not invented here

1948
01:00:14,000 --> 01:00:15,000
不是我写的

1949
01:00:15,000 --> 01:00:16,000
所以我一定要自己写一个

1950
01:00:16,000 --> 01:00:17,000
他为什么不好

1951
01:00:17,000 --> 01:00:18,000
因为他不是我写的

1952
01:00:18,000 --> 01:00:20,000
不过我现在的心太变了

1953
01:00:21,000 --> 01:00:22,000
你看我为什么

1954
01:00:22,000 --> 01:00:23,000
对什么样的

1955
01:00:23,000 --> 01:00:24,000
我自己已经写了一个了

1956
01:00:24,000 --> 01:00:25,000
就性能应该还

1957
01:00:25,000 --> 01:00:26,000
还凑合了吧

1958
01:00:26,000 --> 01:00:27,000
但是

1959
01:00:27,000 --> 01:00:29,000
还是用别人写的比较简单

1960
01:00:29,000 --> 01:00:31,000
懒得去麻烦

1961
01:00:31,000 --> 01:00:33,000
这个叫过来人心态

1962
01:00:33,000 --> 01:00:34,000
就是大爷已经写过一个了

1963
01:00:34,000 --> 01:00:35,000
我现在有资格乍致

1964
01:00:35,000 --> 01:00:37,000
你们这帮人写的东西

1965
01:00:37,000 --> 01:00:38,000
我可以车一个顺手

1966
01:00:38,000 --> 01:00:39,000
我现在的厨师贼

1967
01:00:39,000 --> 01:00:41,000
就是什么 less code is good code

1968
01:00:43,000 --> 01:00:45,000
no code is best code

1969
01:00:46,000 --> 01:00:47,000
对就这样

1970
01:00:47,000 --> 01:00:50,000
所以能不写自己在吗

1971
01:00:50,000 --> 01:00:51,000
就不写自己在吗

1972
01:00:51,000 --> 01:00:52,000
然后刚才扯了

1973
01:00:52,000 --> 01:00:53,000
那七七八八的生存基本身

1974
01:00:53,000 --> 01:00:55,000
其实那个东西

1975
01:00:55,000 --> 01:00:56,000
大家有兴趣

1976
01:00:56,000 --> 01:00:58,000
我们会把列表贴在那里

1977
01:00:58,000 --> 01:00:59,000
大家自己去看

1978
01:00:59,000 --> 01:01:00,000
我现在我们在讲另外一件事情

1979
01:01:00,000 --> 01:01:02,000
就是部署

1980
01:01:02,000 --> 01:01:03,000
刚才讲了一半天

1981
01:01:03,000 --> 01:01:04,000
dev 了

1982
01:01:04,000 --> 01:01:05,000
现在讲 op 这一块了

1983
01:01:05,000 --> 01:01:06,000
对

1984
01:01:06,000 --> 01:01:08,000
刚才我在问你

1985
01:01:08,000 --> 01:01:10,000
你也说你在福西上部署了

1986
01:01:10,000 --> 01:01:11,000
然后

1987
01:01:11,000 --> 01:01:12,000
其实最开始的时候

1988
01:01:12,000 --> 01:01:13,000
大家还不是这么玩的

1989
01:01:13,000 --> 01:01:16,000
这开始是在自己的本地

1990
01:01:16,000 --> 01:01:19,000
生成一个 public 目录

1991
01:01:19,000 --> 01:01:21,000
然后直接通过

1992
01:01:21,000 --> 01:01:22,000
比如说 r sync

1993
01:01:22,000 --> 01:01:23,000
或者 sap 的方式

1994
01:01:23,000 --> 01:01:25,000
复制到远程复制上去

1995
01:01:25,000 --> 01:01:27,000
然后搞定对吧

1996
01:01:28,000 --> 01:01:29,000
然后后来

1997
01:01:29,000 --> 01:01:30,000
或者直接像我这样

1998
01:01:30,000 --> 01:01:31,000
git share

1999
01:01:31,000 --> 01:01:32,000
然后 git pool

2000
01:01:32,000 --> 01:01:33,000
对

2001
01:01:33,000 --> 01:01:34,000
其实这个已经是

2002
01:01:34,000 --> 01:01:36,000
比较高端的一个方法

2003
01:01:36,000 --> 01:01:38,000
或者说比较麻烦的一个方法

2004
01:01:38,000 --> 01:01:40,000
你得铺来铺去

2005
01:01:40,000 --> 01:01:42,000
搞了搞去还是挺头痛的对吧

2006
01:01:42,000 --> 01:01:43,000
对就愿意的话

2007
01:01:43,000 --> 01:01:45,000
其实 git 可以完全拿来

2008
01:01:45,000 --> 01:01:46,000
当 sap 用

2009
01:01:46,000 --> 01:01:47,000
就直接 git pool

2010
01:01:47,000 --> 01:01:48,000
是到远端的

2011
01:01:48,000 --> 01:01:49,000
对

2012
01:01:49,000 --> 01:01:51,000
但是你还得去用命令好

2013
01:01:51,000 --> 01:01:52,000
还是得去麻烦一下

2014
01:01:52,000 --> 01:01:53,000
刚才我讲我现在已经

2015
01:01:53,000 --> 01:01:55,000
变得很懒的一个人

2016
01:01:55,000 --> 01:01:56,000
可是你生成

2017
01:01:56,000 --> 01:01:57,000
难道不需要

2018
01:01:57,000 --> 01:01:58,000
对

2019
01:01:58,000 --> 01:02:00,000
这就是要讲的事情了

2020
01:02:00,000 --> 01:02:02,000
其实你也不用了

2021
01:02:02,000 --> 01:02:03,000
你生成的时候

2022
01:02:03,000 --> 01:02:05,000
你是 push 到上面去

2023
01:02:05,000 --> 01:02:08,000
然后就服务器这边自动完成了

2024
01:02:10,000 --> 01:02:11,000
不是吗

2025
01:02:12,000 --> 01:02:13,000
不

2026
01:02:13,000 --> 01:02:14,000
我的意思是

2027
01:02:14,000 --> 01:02:16,000
你在生成这个站点的时候

2028
01:02:16,000 --> 01:02:17,000
会使用命令好

2029
01:02:17,000 --> 01:02:19,000
那你为什么会害怕

2030
01:02:19,000 --> 01:02:20,000
或者说为什么会觉得

2031
01:02:20,000 --> 01:02:22,000
用命令好发布

2032
01:02:22,000 --> 01:02:23,000
显得多余呢

2033
01:02:23,000 --> 01:02:24,000
就因为我不想

2034
01:02:24,000 --> 01:02:25,000
因为你知道写作的时候

2035
01:02:25,000 --> 01:02:27,000
和在挑命令操作的时候

2036
01:02:27,000 --> 01:02:28,000
我觉得是两种

2037
01:02:28,000 --> 01:02:29,000
完全不同的心态

2038
01:02:29,000 --> 01:02:32,000
所以我不想在写作的时候

2039
01:02:32,000 --> 01:02:33,000
还要去想

2040
01:02:33,000 --> 01:02:34,000
还要再执行一个命令

2041
01:02:34,000 --> 01:02:35,000
才能够发布

2042
01:02:35,000 --> 01:02:36,000
为什么不能写

2043
01:02:36,000 --> 01:02:37,000
存在那个地方

2044
01:02:37,000 --> 01:02:39,000
它就自动给我发布了呢

2045
01:02:40,000 --> 01:02:42,000
因为你不知道自己有没有写好

2046
01:02:42,000 --> 01:02:44,000
它不是有 draft 的目录吗

2047
01:02:44,000 --> 01:02:46,000
就草稿的目录吗

2048
01:02:46,000 --> 01:02:47,000
什么有 draft 的目录

2049
01:02:47,000 --> 01:02:49,000
jaco 有 draft 的目录

2050
01:02:49,000 --> 01:02:50,000
jaco 有 draft 的目录

2051
01:02:50,000 --> 01:02:52,000
你又落后了

2052
01:02:52,000 --> 01:02:53,000
有啊

2053
01:02:53,000 --> 01:02:55,000
我用完完还没有呢

2054
01:02:55,000 --> 01:02:56,000
我对电话

2055
01:02:56,000 --> 01:02:57,000
可能是后来加的吧

2056
01:02:57,000 --> 01:02:58,000
anyway

2057
01:02:58,000 --> 01:02:59,000
应该是个后来加的

2058
01:02:59,000 --> 01:03:02,000
对 后来就出现过这么一群

2059
01:03:02,000 --> 01:03:04,000
因为 dropbox

2060
01:03:04,000 --> 01:03:06,000
后来不是出了 API 吗

2061
01:03:06,000 --> 01:03:07,000
不对

2062
01:03:07,000 --> 01:03:08,000
dropbox 没出 API 之前

2063
01:03:08,000 --> 01:03:12,000
就是他单独注册了一个 dropbox 账号

2064
01:03:12,000 --> 01:03:14,000
那个账号在服务器上跑

2065
01:03:14,000 --> 01:03:15,000
然后他把

2066
01:03:15,000 --> 01:03:17,000
他的那个静态目录的

2067
01:03:17,000 --> 01:03:19,000
source 那个 directory

2068
01:03:19,000 --> 01:03:20,000
source 那个目录

2069
01:03:20,000 --> 01:03:23,000
跟服务器上的 dropbox 账号共享

2070
01:03:23,000 --> 01:03:25,000
然后这样服务器那边就会同步

2071
01:03:25,000 --> 01:03:26,000
然后用一种

2072
01:03:26,000 --> 01:03:28,000
在 nitlx 上你可以

2073
01:03:28,000 --> 01:03:29,000
要么你就 pull

2074
01:03:29,000 --> 01:03:30,000
你就去论询

2075
01:03:30,000 --> 01:03:32,000
那个目录看有没有文件更改

2076
01:03:32,000 --> 01:03:34,000
要么用那个叫什么

2077
01:03:34,000 --> 01:03:37,000
notification 来的

2078
01:03:37,000 --> 01:03:39,000
f notify 还是什么

2079
01:03:39,000 --> 01:03:40,000
fs notify

2080
01:03:40,000 --> 01:03:41,000
i notification

2081
01:03:41,000 --> 01:03:43,000
i know the notification

2082
01:03:43,000 --> 01:03:44,000
对 i notify

2083
01:03:44,000 --> 01:03:45,000
对对对

2084
01:03:45,000 --> 01:03:46,000
那个系统

2085
01:03:46,000 --> 01:03:47,000
linux 有这么一个系统

2086
01:03:47,000 --> 01:03:48,000
6 还是 2 点几里面

2087
01:03:48,000 --> 01:03:49,000
开始搭载的

2088
01:03:49,000 --> 01:03:51,000
就是他可以通知你说

2089
01:03:51,000 --> 01:03:53,000
你可以 watch

2090
01:03:53,000 --> 01:03:56,000
你可以观察某一个目录

2091
01:03:56,000 --> 01:03:58,000
然后有变动时间

2092
01:03:58,000 --> 01:03:59,000
那个系统内核会提醒你

2093
01:03:59,000 --> 01:04:00,000
然后你可以再跑一遍

2094
01:04:00,000 --> 01:04:02,000
然后就有人这么干过

2095
01:04:02,000 --> 01:04:03,000
我也这么干过

2096
01:04:03,000 --> 01:04:04,000
我觉得在

2097
01:04:04,000 --> 01:04:05,000
监控

2098
01:04:05,000 --> 01:04:06,000
对 watch

2099
01:04:06,000 --> 01:04:08,000
监控

2100
01:04:08,000 --> 01:04:10,000
文件目录的更改

2101
01:04:10,000 --> 01:04:11,000
对文件系统的更改

2102
01:04:11,000 --> 01:04:12,000
就是发挥

2103
01:04:12,000 --> 01:04:13,000
实际上是一个非常

2104
01:04:13,000 --> 01:04:14,000
发挥文

2105
01:04:14,000 --> 01:04:15,000
对是一个非常真正的需求

2106
01:04:15,000 --> 01:04:16,000
对

2107
01:04:16,000 --> 01:04:17,000
我有时候好奇

2108
01:04:17,000 --> 01:04:19,000
为什么这么晚才出现这种

2109
01:04:19,000 --> 01:04:22,000
其实在

2110
01:04:22,000 --> 01:04:24,000
好像是 windows 能献有这个

2111
01:04:24,000 --> 01:04:25,000
我觉得还是

2112
01:04:26,000 --> 01:04:27,000
还是 BSD 上面

2113
01:04:27,000 --> 01:04:28,000
献有这个东西

2114
01:04:28,000 --> 01:04:29,000
我忘了

2115
01:04:29,000 --> 01:04:31,000
你说监视一个

2116
01:04:31,000 --> 01:04:32,000
文件系统的改变

2117
01:04:32,000 --> 01:04:33,000
对

2118
01:04:33,000 --> 01:04:34,000
windows 我印象里面没有

2119
01:04:34,000 --> 01:04:35,000
有有有

2120
01:04:35,000 --> 01:04:37,000
Mac 即时是一直有的

2121
01:04:37,000 --> 01:04:38,000
MacBSD

2122
01:04:38,000 --> 01:04:39,000
那个好像一直都有

2123
01:04:39,000 --> 01:04:40,000
那个 KQ

2124
01:04:40,000 --> 01:04:41,000
好像一直都有这个东西

2125
01:04:43,000 --> 01:04:44,000
Anyway 说远

2126
01:04:44,000 --> 01:04:45,000
就有人这么干

2127
01:04:45,000 --> 01:04:46,000
然后但是那个东西

2128
01:04:46,000 --> 01:04:48,000
有一个比较麻烦就是

2129
01:04:48,000 --> 01:04:50,000
是 Dropbox 在 Linux 上面的

2130
01:04:50,000 --> 01:04:52,000
客户端比较

2131
01:04:52,000 --> 01:04:54,000
有很多 bug

2132
01:04:54,000 --> 01:04:56,000
真的会死掉

2133
01:04:56,000 --> 01:04:58,000
然后也不知道为什么

2134
01:04:58,000 --> 01:04:59,000
我从来没用过

2135
01:04:59,000 --> 01:05:01,000
我从来没有用过 Dropbox 的 Linux

2136
01:05:01,000 --> 01:05:02,000
是迷你行的

2137
01:05:02,000 --> 01:05:04,000
还是 Service

2138
01:05:04,000 --> 01:05:05,000
它有两个

2139
01:05:05,000 --> 01:05:06,000
如果你是 Linux

2140
01:05:06,000 --> 01:05:08,000
你是有客户端

2141
01:05:08,000 --> 01:05:09,000
它是有那个故意的

2142
01:05:09,000 --> 01:05:10,000
如果你没有的话

2143
01:05:10,000 --> 01:05:11,000
它有一个迷你行的工具

2144
01:05:11,000 --> 01:05:12,000
你还得再设置一遍

2145
01:05:12,000 --> 01:05:14,000
它怎么去

2146
01:05:14,000 --> 01:05:15,000
那个叫什么

2147
01:05:17,000 --> 01:05:18,000
后台运行

2148
01:05:18,000 --> 01:05:20,000
后台运行都很

2149
01:05:20,000 --> 01:05:21,000
那个都可以惹然

2150
01:05:21,000 --> 01:05:22,000
一次性的嘛

2151
01:05:22,000 --> 01:05:23,000
就是你要先运行它

2152
01:05:23,000 --> 01:05:24,000
启动它

2153
01:05:24,000 --> 01:05:25,000
它会生成一个连接

2154
01:05:25,000 --> 01:05:26,000
然后你再把连接

2155
01:05:26,000 --> 01:05:27,000
复制到你的浏览器里面

2156
01:05:27,000 --> 01:05:28,000
你要授权

2157
01:05:28,000 --> 01:05:30,000
然后有一堆事情挺麻烦的

2158
01:05:30,000 --> 01:05:32,000
但是就那个都一次性的都还好

2159
01:05:32,000 --> 01:05:33,000
但是主要是

2160
01:05:33,000 --> 01:05:35,000
DropboxLinux 的客户端

2161
01:05:35,000 --> 01:05:36,000
就是 Cabonline 的版本

2162
01:05:36,000 --> 01:05:37,000
就比较不稳定嘛

2163
01:05:37,000 --> 01:05:38,000
经常会各当差

2164
01:05:38,000 --> 01:05:39,000
我出问题

2165
01:05:39,000 --> 01:05:42,000
然后同步也不是很及时吧

2166
01:05:42,000 --> 01:05:44,000
因为之前我记得那个 Marco Armand

2167
01:05:44,000 --> 01:05:46,000
他也是这么干的

2168
01:05:46,000 --> 01:05:47,000
然后经常会出现

2169
01:05:49,000 --> 01:05:50,000
就你在本地

2170
01:05:50,000 --> 01:05:51,000
已经把那个文章放上去

2171
01:05:51,000 --> 01:05:52,000
然后本地的 Dropbox

2172
01:05:52,000 --> 01:05:53,000
已经写在同步了

2173
01:05:53,000 --> 01:05:55,000
但是其他那可能要等五分钟

2174
01:05:55,000 --> 01:05:56,000
才会同步

2175
01:05:58,000 --> 01:05:59,000
就体验

2176
01:05:59,000 --> 01:06:00,000
现在还是这样吗

2177
01:06:00,000 --> 01:06:01,000
现在我不太清楚

2178
01:06:01,000 --> 01:06:02,000
就是有一段时间

2179
01:06:02,000 --> 01:06:03,000
很多人抱怨你这个问题

2180
01:06:03,000 --> 01:06:04,000
因为我也遇到过

2181
01:06:04,000 --> 01:06:05,000
所以就不是很稳定

2182
01:06:05,000 --> 01:06:07,000
后来大家都不是很爽

2183
01:06:07,000 --> 01:06:10,000
但是后来 Dropbox 开放的 API

2184
01:06:10,000 --> 01:06:11,000
可以直接

2185
01:06:11,000 --> 01:06:13,000
他给你一个 callback

2186
01:06:13,000 --> 01:06:15,000
就是你不用再在浮器端

2187
01:06:15,000 --> 01:06:17,000
装 Dropbox 客户端

2188
01:06:17,000 --> 01:06:18,000
你只能开一个

2189
01:06:18,000 --> 01:06:20,000
那个 Web 的端

2190
01:06:20,000 --> 01:06:22,000
然后他那边同步了

2191
01:06:22,000 --> 01:06:23,000
Dropbox 浮器会自动给你

2192
01:06:23,000 --> 01:06:25,000
发一条 HTB 请求

2193
01:06:25,000 --> 01:06:28,000
然后你再去 Dropbox 那个 API 去请求

2194
01:06:28,000 --> 01:06:29,000
更新的数据就好

2195
01:06:29,000 --> 01:06:31,000
这样的话就可以绕过

2196
01:06:31,000 --> 01:06:33,000
你不用使用 Dropbox 客户端了

2197
01:06:33,000 --> 01:06:34,000
就还好一点

2198
01:06:34,000 --> 01:06:35,000
对

2199
01:06:35,000 --> 01:06:38,000
变成模型变成一份追问

2200
01:06:38,000 --> 01:06:39,000
对

2201
01:06:39,000 --> 01:06:40,000
其实之前也是一份追问

2202
01:06:40,000 --> 01:06:41,000
但是有一个是

2203
01:06:41,000 --> 01:06:42,000
你要再运行一个 Dropbox

2204
01:06:42,000 --> 01:06:44,000
那个必原的私有的客户端

2205
01:06:44,000 --> 01:06:45,000
然后又写的不好

2206
01:06:45,000 --> 01:06:46,000
对

2207
01:06:46,000 --> 01:06:47,000
所以现在其实更加的好的发

2208
01:06:47,000 --> 01:06:49,000
然后后来大家觉得

2209
01:06:49,000 --> 01:06:52,000
Dropbox 不是那年出过那个事吗

2210
01:06:52,000 --> 01:06:53,000
出过一个事就是

2211
01:06:53,000 --> 01:06:55,000
有一段时间大的所有账号

2212
01:06:55,000 --> 01:06:56,000
可以随便都可以访问

2213
01:06:56,000 --> 01:06:58,000
那个系统的漏洞

2214
01:06:59,000 --> 01:07:00,000
对

2215
01:07:00,000 --> 01:07:01,000
然后后来就觉得

2216
01:07:01,000 --> 01:07:02,000
我操这个不靠谱

2217
01:07:02,000 --> 01:07:03,000
这个信不过怎么办

2218
01:07:03,000 --> 01:07:05,000
后来那个 Bitornt

2219
01:07:05,000 --> 01:07:06,000
就做 BT 那间公司

2220
01:07:06,000 --> 01:07:09,000
出了一个叫 Bitornt Sink 这么一个发言

2221
01:07:09,000 --> 01:07:10,000
怎么理解呢

2222
01:07:10,000 --> 01:07:12,000
它就是一个 Dropbox

2223
01:07:12,000 --> 01:07:13,000
但是没有中央服务器的

2224
01:07:13,000 --> 01:07:15,000
就它是一个完全分布式的一个系统

2225
01:07:15,000 --> 01:07:17,000
去中心化了

2226
01:07:17,000 --> 01:07:18,000
对

2227
01:07:18,000 --> 01:07:20,000
Desentralized Dropbox

2228
01:07:20,000 --> 01:07:22,000
就可以在你的服务器上

2229
01:07:22,000 --> 01:07:24,000
装一个它的客户端

2230
01:07:24,000 --> 01:07:25,000
然后你本集装客户端

2231
01:07:25,000 --> 01:07:27,000
本就跟 Dropbox 上长的一样

2232
01:07:27,000 --> 01:07:28,000
一个目录它会同步

2233
01:07:28,000 --> 01:07:31,000
然后你把这个目录的选择

2234
01:07:31,000 --> 01:07:32,000
同步到你服务器上去

2235
01:07:32,000 --> 01:07:33,000
然后就可以运行

2236
01:07:33,000 --> 01:07:35,000
然后这个就还不

2237
01:07:35,000 --> 01:07:38,000
就我觉得我试了过相当长一段时间吧

2238
01:07:38,000 --> 01:07:39,000
性能还可以

2239
01:07:39,000 --> 01:07:41,000
就是我的个人网站之前

2240
01:07:41,000 --> 01:07:43,000
就用这种方式来实现的

2241
01:07:43,000 --> 01:07:44,000
性能还就是速度还行

2242
01:07:44,000 --> 01:07:45,000
然后同步速度也可以

2243
01:07:45,000 --> 01:07:47,000
然后也没有像 Dropbox 客户端那种

2244
01:07:47,000 --> 01:07:49,000
就隔三岔我不能同步的情况

2245
01:07:49,000 --> 01:07:51,000
不过它那个因为是去中心化的

2246
01:07:51,000 --> 01:07:53,000
就是我必须得保证

2247
01:07:53,000 --> 01:07:56,000
我的服务器是在线

2248
01:07:56,000 --> 01:07:58,000
但是我的本机一定要

2249
01:07:58,000 --> 01:07:59,000
完成同步之后

2250
01:07:59,000 --> 01:08:00,000
我才能够下线

2251
01:08:00,000 --> 01:08:02,000
不然的话你可能同步到半截

2252
01:08:02,000 --> 01:08:04,000
然后那边还是就服务器端

2253
01:08:04,000 --> 01:08:06,000
还是用 I Notify 那个接口

2254
01:08:06,000 --> 01:08:08,000
去侦测有文件的更新

2255
01:08:08,000 --> 01:08:10,000
然后再去重新重新 Rebuild

2256
01:08:10,000 --> 01:08:12,000
这个整个整个 Site 嘛

2257
01:08:12,000 --> 01:08:14,000
这些都是一个技术层面的问题

2258
01:08:14,000 --> 01:08:17,000
但是这里有一个贡献

2259
01:08:17,000 --> 01:08:19,000
就是它的是等文件系统

2260
01:08:19,000 --> 01:08:23,000
或者是某种方式来来更新东西的

2261
01:08:23,000 --> 01:08:24,000
这里有个问题就是

2262
01:08:24,000 --> 01:08:26,000
你可能它会更新到一半

2263
01:08:26,000 --> 01:08:28,000
比如你同时改了五个文件

2264
01:08:28,000 --> 01:08:32,000
但是你那个文件是每次都要出发一个事件的

2265
01:08:32,000 --> 01:08:35,000
就可能你在

2266
01:08:35,000 --> 01:08:37,000
所以会导致多次 build 的

2267
01:08:37,000 --> 01:08:39,000
多次 build 的本身倒是没有什么问题

2268
01:08:39,000 --> 01:08:40,000
如果速度快的话

2269
01:08:40,000 --> 01:08:42,000
但是首先速度不快

2270
01:08:42,000 --> 01:08:43,000
特别是大战点

2271
01:08:43,000 --> 01:08:44,000
多次 build 就很慢

2272
01:08:44,000 --> 01:08:45,000
很费服务器的资源

2273
01:08:45,000 --> 01:08:47,000
如果你是单核的一个 VPS

2274
01:08:47,000 --> 01:08:48,000
可能会直接卡死

2275
01:08:48,000 --> 01:08:50,000
但这个都不是最核心的问题

2276
01:08:50,000 --> 01:08:51,000
最核心的问题是

2277
01:08:51,000 --> 01:08:52,000
如果你是改了一半

2278
01:08:52,000 --> 01:08:54,000
可能中间状态是不稳定的

2279
01:08:54,000 --> 01:08:55,000
对吧

2280
01:08:55,000 --> 01:08:56,000
就是它不是一个

2281
01:08:56,000 --> 01:08:58,000
比如你改了模板就给例子

2282
01:08:58,000 --> 01:09:00,000
你可能你改了三个模板文件

2283
01:09:00,000 --> 01:09:01,000
它只从不到一个模板文件

2284
01:09:01,000 --> 01:09:02,000
然后你会可能中间

2285
01:09:02,000 --> 01:09:04,000
这些引用就会是错的

2286
01:09:04,000 --> 01:09:06,000
build 的失败

2287
01:09:06,000 --> 01:09:07,000
就会 build 的失败

2288
01:09:07,000 --> 01:09:08,000
这不是什么大问题

2289
01:09:08,000 --> 01:09:10,000
depends

2290
01:09:10,000 --> 01:09:11,000
如果 build 的失败

2291
01:09:11,000 --> 01:09:14,000
就有可能会看到中间的一个中间状态

2292
01:09:14,000 --> 01:09:17,000
然后如果它又刚好被缓存下的话

2293
01:09:17,000 --> 01:09:18,000
就会很 argo

2294
01:09:18,000 --> 01:09:20,000
就不是一个很优雅的方案其实

2295
01:09:20,000 --> 01:09:21,000
对

2296
01:09:21,000 --> 01:09:24,000
不小心把密码或者轻书写上去的

2297
01:09:24,000 --> 01:09:25,000
不会这么惨

2298
01:09:25,000 --> 01:09:26,000
不会这么惨吧

2299
01:09:26,000 --> 01:09:27,000
不许是中止

2300
01:09:27,000 --> 01:09:28,000
不会这么惨吧

2301
01:09:28,000 --> 01:09:31,000
但是我觉得这不是一个优雅的方案

2302
01:09:31,000 --> 01:09:33,000
然后还有一个问题就是

2303
01:09:33,000 --> 01:09:34,000
刚才讲的要密宁行去同步

2304
01:09:34,000 --> 01:09:36,000
它其中始终是一个

2305
01:09:36,000 --> 01:09:39,000
我觉得不够用户有好的方案

2306
01:09:39,000 --> 01:09:42,000
所以在 Apple 4

2307
01:09:42,000 --> 01:09:44,000
现在的版本我是用了另外一种方法

2308
01:09:44,000 --> 01:09:46,000
就是用 git 来同步

2309
01:09:46,000 --> 01:09:48,000
然后我是在 git hub 上面

2310
01:09:48,000 --> 01:09:50,000
建了一个 repository

2311
01:09:50,000 --> 01:09:53,000
然后用 git hub 有一个 web hook

2312
01:09:53,000 --> 01:09:55,000
这个接口

2313
01:09:55,000 --> 01:09:58,000
就是它可以等你每次 commit

2314
01:09:58,000 --> 01:10:00,000
它会给

2315
01:10:00,000 --> 01:10:02,000
其实就是 git 自己的 hook

2316
01:10:02,000 --> 01:10:05,000
在 git hub 上面的延伸

2317
01:10:05,000 --> 01:10:06,000
对

2318
01:10:06,000 --> 01:10:07,000
对

2319
01:10:07,000 --> 01:10:10,000
就是大概就是你可以自己建一个

2320
01:10:10,000 --> 01:10:13,000
你在伺机上建一个 webserver

2321
01:10:13,000 --> 01:10:15,000
然后真听 git hub

2322
01:10:15,000 --> 01:10:18,000
发过来的这个世界

2323
01:10:18,000 --> 01:10:20,000
然后你就会知道有一个完完整整的

2324
01:10:20,000 --> 01:10:21,000
commit 已经过了

2325
01:10:21,000 --> 01:10:23,000
比如说你不会出现

2326
01:10:23,000 --> 01:10:25,000
你一个航面就改了五个文件

2327
01:10:25,000 --> 01:10:27,000
你不会说只修改到三个文件

2328
01:10:27,000 --> 01:10:28,000
因为你整个 commit 铺下来

2329
01:10:28,000 --> 01:10:29,000
肯定是就三

2330
01:10:29,000 --> 01:10:31,000
五个文件全部都改过了对吧

2331
01:10:31,000 --> 01:10:32,000
对

2332
01:10:32,000 --> 01:10:33,000
就解决了第一个问题

2333
01:10:33,000 --> 01:10:36,000
然后 git 你铺回来之后

2334
01:10:36,000 --> 01:10:38,000
它不是有一个 posed merge

2335
01:10:38,000 --> 01:10:40,000
这个 hook 本地的

2336
01:10:40,000 --> 01:10:42,000
而且在那里写个脚本

2337
01:10:42,000 --> 01:10:43,000
然后在那里运行一下生成就好

2338
01:10:43,000 --> 01:10:45,000
这个整个过程还是蛮优雅的

2339
01:10:45,000 --> 01:10:47,000
然后 posed merge 还是 posed commit

2340
01:10:47,000 --> 01:10:49,000
posed merge 有 posed merge 这个东西吗

2341
01:10:49,000 --> 01:10:51,000
posed merge 是在 posed commit

2342
01:10:51,000 --> 01:10:52,000
应该是 posed commit

2343
01:10:52,000 --> 01:10:54,000
posed receive

2344
01:10:54,000 --> 01:10:55,000
posed

2345
01:10:55,000 --> 01:10:56,000
有 posed merge

2346
01:10:56,000 --> 01:10:57,000
posed merge 是发生在

2347
01:10:57,000 --> 01:10:59,000
比如说你在伺机上

2348
01:10:59,000 --> 01:11:01,000
你肯定要把整个 posed

2349
01:11:01,000 --> 01:11:02,000
所谓抓下来

2350
01:11:02,000 --> 01:11:03,000
那个源对吧

2351
01:11:03,000 --> 01:11:04,000
然后它

2352
01:11:04,000 --> 01:11:06,000
不是每一次都会发生 merge

2353
01:11:06,000 --> 01:11:07,000
你 git 破的话

2354
01:11:07,000 --> 01:11:08,000
这有可能就是 for

2355
01:11:08,000 --> 01:11:10,000
你是 git forward

2356
01:11:10,000 --> 01:11:12,000
不你是 git 破吗

2357
01:11:12,000 --> 01:11:14,000
git 破的话有可能是 for

2358
01:11:14,000 --> 01:11:15,000
for forward

2359
01:11:15,000 --> 01:11:17,000
for forward 不会产生 merge

2360
01:11:17,000 --> 01:11:18,000
你确定吗

2361
01:11:18,000 --> 01:11:20,000
我记得 git 破好像没人是 git

2362
01:11:20,000 --> 01:11:24,000
for 是等于 git fetch 加 git merge

2363
01:11:24,000 --> 01:11:26,000
然后 for forward 是在

2364
01:11:26,000 --> 01:11:28,000
merge 过程中实现的

2365
01:11:28,000 --> 01:11:29,000
不

2366
01:11:29,000 --> 01:11:30,000
但是这个 merge

2367
01:11:30,000 --> 01:11:32,000
你的 merge 是只会产生 merge commit merge

2368
01:11:32,000 --> 01:11:33,000
不

2369
01:11:33,000 --> 01:11:34,000
不

2370
01:11:34,000 --> 01:11:35,000
不

2371
01:11:35,000 --> 01:11:36,000
不

2372
01:11:36,000 --> 01:11:37,000
不

2373
01:11:37,000 --> 01:11:38,000
不

2374
01:11:38,000 --> 01:11:39,000
不

2375
01:11:39,000 --> 01:11:40,000
那

2376
01:11:40,000 --> 01:11:42,000
同步到 remote branch

2377
01:11:42,000 --> 01:11:43,000
这叫 merge

2378
01:11:43,000 --> 01:11:44,000
对

2379
01:11:44,000 --> 01:11:45,000
对

2380
01:11:45,000 --> 01:11:46,000
应该是这样子

2381
01:11:46,000 --> 01:11:48,000
如果我读那个文档

2382
01:11:48,000 --> 01:11:49,000
没理解错的话

2383
01:11:49,000 --> 01:11:50,000
但可能我理解错的话

2384
01:11:50,000 --> 01:11:52,000
你去看一遍

2385
01:11:52,000 --> 01:11:54,000
整个过程就是说

2386
01:11:54,000 --> 01:11:57,000
在 git post merge

2387
01:11:57,000 --> 01:11:59,000
那个钩子里面

2388
01:11:59,000 --> 01:12:00,000
调用这个进程单身

2389
01:12:00,000 --> 01:12:01,000
自己跑一遍

2390
01:12:01,000 --> 01:12:02,000
就完成了

2391
01:12:02,000 --> 01:12:03,000
然后也不会出现那种

2392
01:12:03,000 --> 01:12:05,000
很诡异的状况

2393
01:12:05,000 --> 01:12:06,000
然后

2394
01:12:06,000 --> 01:12:07,000
还有一个比较越来越的地方

2395
01:12:07,000 --> 01:12:08,000
就是我可以

2396
01:12:08,000 --> 01:12:09,000
那个 web 界面

2397
01:12:09,000 --> 01:12:10,000
其实做的还不错

2398
01:12:10,000 --> 01:12:11,000
然后你可以直接在上面

2399
01:12:11,000 --> 01:12:12,000
添加文件

2400
01:12:12,000 --> 01:12:13,000
或者编辑文件

2401
01:12:13,000 --> 01:12:14,000
所以

2402
01:12:14,000 --> 01:12:16,000
其实我是把 git hub 的

2403
01:12:16,000 --> 01:12:18,000
这个就是 web interface

2404
01:12:18,000 --> 01:12:20,000
当成了一个 CMS 来用

2405
01:12:20,000 --> 01:12:21,000
然后

2406
01:12:21,000 --> 01:12:23,000
现在 git hub 上面

2407
01:12:23,000 --> 01:12:24,000
可以创建新文件了吗

2408
01:12:24,000 --> 01:12:25,000
可以

2409
01:12:25,000 --> 01:12:26,000
你是那个在

2410
01:12:26,000 --> 01:12:27,000
有个上面一个

2411
01:12:27,000 --> 01:12:28,000
这个路径内

2412
01:12:28,000 --> 01:12:29,000
那个拦有一个加号

2413
01:12:29,000 --> 01:12:30,000
就是创建文件

2414
01:12:30,000 --> 01:12:31,000
或者 remote

2415
01:12:31,000 --> 01:12:32,000
因为我记得以前

2416
01:12:32,000 --> 01:12:34,000
我好像想要做同样的事情的时候

2417
01:12:34,000 --> 01:12:35,000
我傲能的发现

2418
01:12:35,000 --> 01:12:36,000
git hub

2419
01:12:36,000 --> 01:12:37,000
虽然可以改文件

2420
01:12:37,000 --> 01:12:38,000
但是不能产生新文件

2421
01:12:38,000 --> 01:12:40,000
那它那个不是太

2422
01:12:40,000 --> 01:12:41,000
显眼

2423
01:12:41,000 --> 01:12:42,000
你要去在那个

2424
01:12:42,000 --> 01:12:43,000
就你开一个

2425
01:12:43,000 --> 01:12:45,000
任意开一个 git repository 的话

2426
01:12:45,000 --> 01:12:46,000
它会在

2427
01:12:46,000 --> 01:12:47,000
那叫什么位置

2428
01:12:47,000 --> 01:12:48,000
就顶

2429
01:12:48,000 --> 01:12:50,000
它会显示一堆文件列表的顶上

2430
01:12:50,000 --> 01:12:52,000
不是有一个当前那个路径吗

2431
01:12:52,000 --> 01:12:53,000
嗯哼

2432
01:12:53,000 --> 01:12:55,000
那那个墨有一个加号

2433
01:12:55,000 --> 01:12:56,000
你点那个加号

2434
01:12:56,000 --> 01:12:57,000
就是可以添加新文件

2435
01:12:58,000 --> 01:12:59,000
然后

2436
01:12:59,000 --> 01:13:00,000
如果你要在

2437
01:13:00,000 --> 01:13:01,000
添个目录的话

2438
01:13:01,000 --> 01:13:03,000
你就加个斜杠就好了

2439
01:13:04,000 --> 01:13:05,000
哦

2440
01:13:05,000 --> 01:13:06,000
对

2441
01:13:06,000 --> 01:13:07,000
行

2442
01:13:07,000 --> 01:13:08,000
下次可以试一试

2443
01:13:08,000 --> 01:13:10,000
我是很久没有在 git hub 上

2444
01:13:10,000 --> 01:13:11,000
只修改文件

2445
01:13:11,000 --> 01:13:13,000
好像只有一两次

2446
01:13:13,000 --> 01:13:15,000
要去改一个比物的时候用过

2447
01:13:15,000 --> 01:13:16,000
对对对

2448
01:13:16,000 --> 01:13:18,000
我觉得这个用力就特别好

2449
01:13:18,000 --> 01:13:19,000
就刚才我讲了嘛

2450
01:13:19,000 --> 01:13:21,000
我不喜欢去碰

2451
01:13:21,000 --> 01:13:22,000
哎这样不对

2452
01:13:22,000 --> 01:13:24,000
其实我还是蛮喜欢碰迷你行

2453
01:13:24,000 --> 01:13:26,000
就是在写作东西的时候

2454
01:13:26,000 --> 01:13:27,000
我不想去碰迷你行

2455
01:13:27,000 --> 01:13:28,000
现在就到这个整个

2456
01:13:28,000 --> 01:13:30,000
对在写作的时候

2457
01:13:30,000 --> 01:13:31,000
写不到个本身的时候

2458
01:13:31,000 --> 01:13:33,000
我觉得可能最大的

2459
01:13:33,000 --> 01:13:35,000
痛苦就在用 wim 的时候

2460
01:13:35,000 --> 01:13:37,000
输入法实在太骚扰了

2461
01:13:38,000 --> 01:13:39,000
wim 不适合写文章

2462
01:13:39,000 --> 01:13:41,000
只适合写程序

2463
01:13:41,000 --> 01:13:42,000
对其实

2464
01:13:43,000 --> 01:13:45,000
对其实 wim 和输入法

2465
01:13:46,000 --> 01:13:47,000
也不是一举同工

2466
01:13:47,000 --> 01:13:49,000
就是他们的运作机率其实一样

2467
01:13:49,000 --> 01:13:51,000
输入法在中文是一种 mode

2468
01:13:51,000 --> 01:13:52,000
对

2469
01:13:52,000 --> 01:13:53,000
英文是一种 mode

2470
01:13:53,000 --> 01:13:54,000
对

2471
01:13:54,000 --> 01:13:55,000
然后 wim 要在你英文的 mode 上

2472
01:13:55,000 --> 01:13:57,000
加入 comment mode

2473
01:13:57,000 --> 01:13:58,000
credit mode

2474
01:13:58,000 --> 01:13:59,000
所以你大脑要维护

2475
01:13:59,000 --> 01:14:01,000
这三个 mode 之间的

2476
01:14:01,000 --> 01:14:02,000
状态机切换

2477
01:14:02,000 --> 01:14:03,000
其实还是挺累的

2478
01:14:03,000 --> 01:14:04,000
对对对

2479
01:14:04,000 --> 01:14:07,000
所以唯一一个在写 blower 的时候

2480
01:14:07,000 --> 01:14:08,000
我们要把 wim 用为 wim

2481
01:14:08,000 --> 01:14:09,000
对

2482
01:14:10,000 --> 01:14:12,000
现在 AppleFoos 这个状态

2483
01:14:12,000 --> 01:14:14,000
比如说我跟

2484
01:14:14,000 --> 01:14:17,000
直接把 gitrepository

2485
01:14:17,000 --> 01:14:19,000
跟别人共享

2486
01:14:19,000 --> 01:14:21,000
把它加入进一个 collaborator

2487
01:14:21,000 --> 01:14:23,000
它可以直接在那边写东西

2488
01:14:23,000 --> 01:14:24,000
然后就可以发布

2489
01:14:24,000 --> 01:14:26,000
整个过程就很简单

2490
01:14:26,000 --> 01:14:28,000
git 上面添加一个新文件

2491
01:14:28,000 --> 01:14:29,000
或修改一个文件

2492
01:14:29,000 --> 01:14:30,000
然后那边产生一个

2493
01:14:31,000 --> 01:14:33,000
康迷的事件

2494
01:14:33,000 --> 01:14:35,000
然后 git hub 发一个

2495
01:14:36,000 --> 01:14:37,000
webhook 的请求

2496
01:14:37,000 --> 01:14:38,000
到我的服务器

2497
01:14:38,000 --> 01:14:40,000
我的服务器把改动铺回来

2498
01:14:41,000 --> 01:14:43,000
跑一遍 post merge 的钩子

2499
01:14:43,000 --> 01:14:44,000
然后在那边钩子里面

2500
01:14:44,000 --> 01:14:46,000
再跑一遍生成

2501
01:14:46,000 --> 01:14:47,000
进一站点的程序

2502
01:14:48,000 --> 01:14:50,000
这个过程就完成了

2503
01:14:50,000 --> 01:14:51,000
整个过程

2504
01:14:51,000 --> 01:14:52,000
我不需要去接触命令行

2505
01:14:52,000 --> 01:14:53,000
我也不需要维护

2506
01:14:53,000 --> 01:14:54,000
我不需要维护

2507
01:14:54,000 --> 01:14:55,000
end automation

2508
01:14:55,000 --> 01:14:56,000
对

2509
01:14:56,000 --> 01:14:58,000
就感觉超爽现在

2510
01:15:00,000 --> 01:15:02,000
你知道有网站叫 davops reactions

2511
01:15:03,000 --> 01:15:06,000
davopsreactions.tumblr.com

2512
01:15:06,000 --> 01:15:07,000
不知道

2513
01:15:07,000 --> 01:15:08,000
你可以去看一下

2514
01:15:08,000 --> 01:15:10,000
这上面有非常非常搞笑的 gif

2515
01:15:11,000 --> 01:15:12,000
gif 动画

2516
01:15:12,000 --> 01:15:13,000
然后有一个就是

2517
01:15:16,000 --> 01:15:19,000
demonstrating end to end automation

2518
01:15:19,000 --> 01:15:20,000
to new employees

2519
01:15:20,000 --> 01:15:22,000
然后对

2520
01:15:22,000 --> 01:15:24,000
我现在把这个链接发给你

2521
01:15:24,000 --> 01:15:25,000
然后你到时候

2522
01:15:25,000 --> 01:15:29,000
我们一定要把这个贴在节目的链接里面

2523
01:15:29,000 --> 01:15:31,000
是这个非常精确的描述了

2524
01:15:31,000 --> 01:15:32,000
一个

2525
01:15:32,000 --> 01:15:34,000
不知道你的整个工作流程人

2526
01:15:34,000 --> 01:15:36,000
第一次听到你那整个工作流程之后的感受

2527
01:15:38,000 --> 01:15:40,000
但是你有一点我觉得不得不成

2528
01:15:40,000 --> 01:15:44,000
就是我把整个 workflow 设置好之后

2529
01:15:46,000 --> 01:15:47,000
你会

2530
01:15:47,000 --> 01:15:48,000
就怎么讲

2531
01:15:48,000 --> 01:15:50,000
刚刚为什么讲

2532
01:15:50,000 --> 01:15:51,000
我不喜欢去跑命令行

2533
01:15:51,000 --> 01:15:54,000
就生成一遍东西的一个最主要的原因

2534
01:15:54,000 --> 01:15:55,000
就是因为

2535
01:15:56,000 --> 01:15:59,000
它会添加一个叫做 multi-lite friction 在里面

2536
01:15:59,000 --> 01:16:00,000
这会让我觉得

2537
01:16:00,000 --> 01:16:01,000
还有一个步骤没跑完好吗

2538
01:16:01,000 --> 01:16:04,000
如果我要反复去做这个事情就很麻烦

2539
01:16:04,000 --> 01:16:07,000
但是一旦把这个东西整个流程自动化以后

2540
01:16:07,000 --> 01:16:08,000
你不需要操心这种事情

2541
01:16:08,000 --> 01:16:09,000
你就只需要去写

2542
01:16:09,000 --> 01:16:10,000
或者去改

2543
01:16:10,000 --> 01:16:14,000
你会很愿意去改它的这个比如改错别字

2544
01:16:14,000 --> 01:16:15,000
改标点符号

2545
01:16:15,000 --> 01:16:17,000
或者改一些模板上的小调整

2546
01:16:17,000 --> 01:16:18,000
你会很愿意去做

2547
01:16:18,000 --> 01:16:19,000
因为整个事情就很简单

2548
01:16:19,000 --> 01:16:21,000
你就在 gif top 上编辑一个

2549
01:16:21,000 --> 01:16:24,000
编辑一个页面保存就可以了

2550
01:16:25,000 --> 01:16:28,000
现在就是非常 frictionless

2551
01:16:28,000 --> 01:16:30,000
非常 smooth 的一个过程

2552
01:16:32,000 --> 01:16:34,000
这个词也经常被用于形容

2553
01:16:34,000 --> 01:16:39,000
一个理想的软件发布流程的这么一个状态

2554
01:16:39,000 --> 01:16:42,000
就是程序员只需要写好

2555
01:16:43,000 --> 01:16:44,000
git push 就可以了

2556
01:16:44,000 --> 01:16:46,000
写好的测试写好一个功能

2557
01:16:46,000 --> 01:16:49,000
然后只需要 commit push

2558
01:16:49,000 --> 01:16:52,000
然后所有这一切都会自动的被部署

2559
01:16:52,000 --> 01:16:53,000
自动的被测试

2560
01:16:53,000 --> 01:16:55,000
自动的执行回归测试

2561
01:16:55,000 --> 01:16:57,000
自动生成一个 nightly build

2562
01:16:57,000 --> 01:16:59,000
然后告诉你软件是不是正常运进

2563
01:16:59,000 --> 01:17:00,000
还能自动上线

2564
01:17:00,000 --> 01:17:01,000
这个是最好

2565
01:17:02,000 --> 01:17:06,000
其实你写的过程非常像

2566
01:17:06,000 --> 01:17:08,000
某种软件的发布流程

2567
01:17:08,000 --> 01:17:09,000
对

2568
01:17:09,000 --> 01:17:12,000
发布一个静态站点

2569
01:17:13,000 --> 01:17:17,000
对 但我觉得其实这也恰恰是一个门槛

2570
01:17:17,000 --> 01:17:23,000
就是为什么换用 statistic side-genre 的人

2571
01:17:23,000 --> 01:17:24,000
都是程序员

2572
01:17:24,000 --> 01:17:25,000
因为太麻烦了

2573
01:17:26,000 --> 01:17:28,000
因为程序员只有不怕麻烦的人

2574
01:17:28,000 --> 01:17:30,000
才会搞什么麻烦的事情

2575
01:17:30,000 --> 01:17:32,000
或者反过来说

2576
01:17:32,000 --> 01:17:34,000
我觉得普通人

2577
01:17:34,000 --> 01:17:37,000
且不论普通人有没有这个动机

2578
01:17:37,000 --> 01:17:42,000
普通人之所以不会去用这种 statistic side-genre 的原因之一

2579
01:17:42,000 --> 01:17:45,000
就是因为迄今为止

2580
01:17:45,000 --> 01:17:48,000
没有一个 statistic side-genre 的事

2581
01:17:48,000 --> 01:17:51,000
支持所谓的所见机做得编辑吧

2582
01:17:51,000 --> 01:17:54,000
还是咬我只不过咕咯

2583
01:17:54,000 --> 01:17:56,000
Generator 肯定是不可以

2584
01:17:56,000 --> 01:17:57,000
如果你说 Elliter 肯定是有的

2585
01:17:57,000 --> 01:17:59,000
之前那些什么 front page

2586
01:17:59,000 --> 01:18:00,000
或者说

2587
01:18:00,000 --> 01:18:01,000
因为绝大多数

2588
01:18:01,000 --> 01:18:03,000
比如说我们刚才讨论的是几个

2589
01:18:03,000 --> 01:18:04,000
Jaco 也好

2590
01:18:04,000 --> 01:18:05,000
Middleman 也好

2591
01:18:05,000 --> 01:18:06,000
Pelican 也好

2592
01:18:06,000 --> 01:18:07,000
Hide 也好

2593
01:18:07,000 --> 01:18:11,000
还是包括没有提到什么 Clay

2594
01:18:11,000 --> 01:18:12,000
Hexo

2595
01:18:12,000 --> 01:18:14,000
其实每一个

2596
01:18:14,000 --> 01:18:16,000
包括鱼狗在那都只支持 Markdown

2597
01:18:16,000 --> 01:18:19,000
或者是另外一种什么样的

2598
01:18:19,000 --> 01:18:22,000
就是制标员写成的

2599
01:18:22,000 --> 01:18:27,000
半元代马式的文档

2600
01:18:27,000 --> 01:18:30,000
然后把它转换成静态页面

2601
01:18:30,000 --> 01:18:34,000
有没有一种生成器支持

2602
01:18:34,000 --> 01:18:35,000
或者是更小白有好的

2603
01:18:35,000 --> 01:18:38,000
可以让用户通过某种方式

2604
01:18:38,000 --> 01:18:42,000
三毫三位来写出这种所见机做得的东西呢

2605
01:18:42,000 --> 01:18:43,000
有啊

2606
01:18:43,000 --> 01:18:44,000
Tumbler

2607
01:18:44,000 --> 01:18:48,000
Tumbler 不是一个静态生成器

2608
01:18:48,000 --> 01:18:49,000
这就是问题所在

2609
01:18:49,000 --> 01:18:51,000
为什么小白用户他不懂这一台

2610
01:18:51,000 --> 01:18:53,000
他为什么需要去区分什么是静态

2611
01:18:53,000 --> 01:18:54,000
什么是动态

2612
01:18:54,000 --> 01:18:56,000
他根本没有关系

2613
01:18:56,000 --> 01:18:57,000
对吧

2614
01:18:57,000 --> 01:18:58,000
好吧

2615
01:18:58,000 --> 01:18:59,000
我刚才想的是

2616
01:18:59,000 --> 01:19:03,000
如果一定有一位某位小白用户

2617
01:19:03,000 --> 01:19:04,000
勇敢的听我们的节目

2618
01:19:04,000 --> 01:19:07,000
然后想要去试试静态生成器

2619
01:19:07,000 --> 01:19:09,000
去苦于没有办法

2620
01:19:09,000 --> 01:19:11,000
大概知道自己的网站跑起来

2621
01:19:11,000 --> 01:19:12,000
什么样子的话

2622
01:19:12,000 --> 01:19:14,000
我觉得其实有一个比较好的方案

2623
01:19:14,000 --> 01:19:19,000
就是用 Mode 之类的 Markdown 编辑器来写

2624
01:19:19,000 --> 01:19:20,000
Markdown

2625
01:19:20,000 --> 01:19:22,000
然后在 Mode 里面看到这个

2626
01:19:22,000 --> 01:19:28,000
及时生成出来的基本上带了格式这么一个预览

2627
01:19:28,000 --> 01:19:31,000
然后在保存之后

2628
01:19:31,000 --> 01:19:35,000
很多静态网站生成器都非常贴心提供的及时预览功能

2629
01:19:35,000 --> 01:19:37,000
如果有什么原代码

2630
01:19:37,000 --> 01:19:41,000
比如说你某一个原文件有修改

2631
01:19:41,000 --> 01:19:43,000
它会自动把整个网站生成一遍

2632
01:19:43,000 --> 01:19:45,000
然后在你的本地跑约浏览器

2633
01:19:45,000 --> 01:19:48,000
来把生成好的网站展现给你看

2634
01:19:48,000 --> 01:19:49,000
感觉有点

2635
01:19:49,000 --> 01:19:51,000
其实这也算是某种意义上

2636
01:19:51,000 --> 01:19:52,000
我锁建计做的

2637
01:19:52,000 --> 01:19:53,000
感觉好绕

2638
01:19:53,000 --> 01:19:55,000
不过刚才你起来有点我觉得很好

2639
01:19:55,000 --> 01:19:58,000
就是普通用户用的话

2640
01:19:58,000 --> 01:19:59,000
你刚才讲

2641
01:19:59,000 --> 01:20:02,000
显然能去用 GitHub 做编辑器的人

2642
01:20:02,000 --> 01:20:05,000
还是多少有点 GitGFire 的

2643
01:20:05,000 --> 01:20:08,000
对你不能指望一个

2644
01:20:08,000 --> 01:20:09,000
普通的

2645
01:20:09,000 --> 01:20:10,000
刚刚

2646
01:20:10,000 --> 01:20:11,000
什么是 Git

2647
01:20:11,000 --> 01:20:14,000
不能指望某些人去用

2648
01:20:14,000 --> 01:20:15,000
只会用这个

2649
01:20:15,000 --> 01:20:17,000
它能登入 Worldpress 就不错了

2650
01:20:17,000 --> 01:20:19,000
能在 Worldpress 后台里面

2651
01:20:19,000 --> 01:20:23,000
利用那个所谓基础的编辑器

2652
01:20:23,000 --> 01:20:25,000
把自己的文章大概隔世一下

2653
01:20:25,000 --> 01:20:26,000
这些非常不错

2654
01:20:26,000 --> 01:20:28,000
你要强迫它去用 GitHub 这种东西

2655
01:20:28,000 --> 01:20:31,000
让它理解什么叫 Merge Commit

2656
01:20:31,000 --> 01:20:35,000
就还是太强烈所拿

2657
01:20:35,000 --> 01:20:36,000
对

2658
01:20:36,000 --> 01:20:37,000
不过

2659
01:20:37,000 --> 01:20:41,000
这其实又反而变成了动态占点的一个强项

2660
01:20:41,000 --> 01:20:42,000
就是你知道

2661
01:20:42,000 --> 01:20:45,000
Worldpress 是有一个叫

2662
01:20:45,000 --> 01:20:46,000
叫什么

2663
01:20:46,000 --> 01:20:48,000
Publish 接口的

2664
01:20:48,000 --> 01:20:51,000
它有一个接口可以让第三方程序

2665
01:20:51,000 --> 01:20:52,000
通过那个接口

2666
01:20:52,000 --> 01:20:54,000
可以它发布网站

2667
01:20:54,000 --> 01:20:57,000
然后有个叫什么

2668
01:20:57,000 --> 01:20:58,000
什么

2669
01:20:58,000 --> 01:20:59,000
通过第三方接口

2670
01:20:59,000 --> 01:21:00,000
SML RPC 吗

2671
01:21:00,000 --> 01:21:01,000
对

2672
01:21:01,000 --> 01:21:02,000
对

2673
01:21:02,000 --> 01:21:04,000
SML RPC 到 KH

2674
01:21:04,000 --> 01:21:06,000
好多漏洞都从那儿来的

2675
01:21:06,000 --> 01:21:07,000
不管

2676
01:21:07,000 --> 01:21:09,000
但是就是从我们先不讲它的底层实现

2677
01:21:09,000 --> 01:21:10,000
漂漂亮

2678
01:21:10,000 --> 01:21:11,000
对它有这么一个功能

2679
01:21:11,000 --> 01:21:12,000
很多人会

2680
01:21:12,000 --> 01:21:13,000
比如说

2681
01:21:13,000 --> 01:21:15,000
刚刚我们讲你如果金台网站生产的话

2682
01:21:15,000 --> 01:21:17,000
你还是在本地编辑一个 markdown 文件

2683
01:21:17,000 --> 01:21:19,000
放进对应的目录

2684
01:21:19,000 --> 01:21:21,000
或者是你要在 GitHub 上编辑一个东西

2685
01:21:21,000 --> 01:21:23,000
这种事情在

2686
01:21:23,000 --> 01:21:27,000
非 PC 或者麦克恩是做不到的

2687
01:21:27,000 --> 01:21:29,000
手机上就很麻烦

2688
01:21:29,000 --> 01:21:31,000
你在 iPad 上也做不到这件事情

2689
01:21:31,000 --> 01:21:32,000
但是

2690
01:21:32,000 --> 01:21:34,000
如果你有那种像 Worldpress 接口的话

2691
01:21:34,000 --> 01:21:37,000
反而是可以做到这件事情的

2692
01:21:37,000 --> 01:21:39,000
你可以再用一个 App

2693
01:21:39,000 --> 01:21:41,000
编辑文章然后点 Publish

2694
01:21:41,000 --> 01:21:43,000
这才是对普通用户有好

2695
01:21:43,000 --> 01:21:44,000
有好的一个方式

2696
01:21:44,000 --> 01:21:45,000
我相信很多

2697
01:21:45,000 --> 01:21:48,000
曾经的所谓

2698
01:21:48,000 --> 01:21:50,000
Blog

2699
01:21:50,000 --> 01:21:51,000
Publish

2700
01:21:51,000 --> 01:21:52,000
Software

2701
01:21:52,000 --> 01:21:56,000
也支持一键保存之后

2702
01:21:56,000 --> 01:21:58,000
同时发布到多个 Blog 平台

2703
01:21:58,000 --> 01:21:59,000
还有这种

2704
01:21:59,000 --> 01:22:00,000
其中就包括 Worldpress

2705
01:22:00,000 --> 01:22:01,000
还有这种神器

2706
01:22:01,000 --> 01:22:02,000
有这样的东西

2707
01:22:02,000 --> 01:22:03,000
对 Blog

2708
01:22:03,000 --> 01:22:05,000
就是协 Blog 用的本机软件

2709
01:22:05,000 --> 01:22:07,000
可是这样意义何在呢

2710
01:22:07,000 --> 01:22:10,000
这些人会和系统使用很多个 Blog

2711
01:22:10,000 --> 01:22:13,000
这种手机存在

2712
01:22:13,000 --> 01:22:14,000
就像美艺一所

2713
01:22:14,000 --> 01:22:15,000
现在没有人用的

2714
01:22:15,000 --> 01:22:16,000
没有在提起这种东西

2715
01:22:16,000 --> 01:22:17,000
但是我是

2716
01:22:17,000 --> 01:22:19,000
或者价实的用我这种东西

2717
01:22:19,000 --> 01:22:20,000
好吧

2718
01:22:20,000 --> 01:22:22,000
而且当时非常

2719
01:22:22,000 --> 01:22:23,000
判人神伤的觉得

2720
01:22:23,000 --> 01:22:24,000
我自己写的 Blog 系统

2721
01:22:24,000 --> 01:22:25,000
不能支持这种

2722
01:22:25,000 --> 01:22:29,000
远程的片还是太费了

2723
01:22:29,000 --> 01:22:30,000
其实只如果你

2724
01:22:30,000 --> 01:22:31,000
现在做一个这种接口

2725
01:22:31,000 --> 01:22:32,000
也不是很复杂

2726
01:22:32,000 --> 01:22:33,000
你把接口鞋弄一下

2727
01:22:33,000 --> 01:22:35,000
然后这边写一个

2728
01:22:35,000 --> 01:22:37,000
那个什么 webserver

2729
01:22:37,000 --> 01:22:38,000
然后接收那个请求

2730
01:22:38,000 --> 01:22:39,000
然后把那个请求

2731
01:22:39,000 --> 01:22:40,000
做成一个文件

2732
01:22:40,000 --> 01:22:41,000
放到本地目录

2733
01:22:41,000 --> 01:22:42,000
然后再跑一遍

2734
01:22:42,000 --> 01:22:43,000
你想的应该不是

2735
01:22:43,000 --> 01:22:45,000
特别难的一件事情

2736
01:22:45,000 --> 01:22:46,000
对

2737
01:22:46,000 --> 01:22:47,000
也可以做一个卡榻说

2738
01:22:47,000 --> 01:22:48,000
对

2739
01:22:48,000 --> 01:22:49,000
又是一个卡榻可以用

2740
01:22:49,000 --> 01:22:51,000
只有问题是 XML

2741
01:22:51,000 --> 01:22:54,000
你可以用 JSON 吗

2742
01:22:54,000 --> 01:22:55,000
还不错

2743
01:22:55,000 --> 01:22:56,000
但是你还得

2744
01:22:56,000 --> 01:22:57,000
不错

2745
01:22:57,000 --> 01:22:59,000
你得去说服那些

2746
01:22:59,000 --> 01:23:02,000
第三方的 App

2747
01:23:02,000 --> 01:23:05,000
就是什么博客软件的

2748
01:23:05,000 --> 01:23:07,000
作者支持你这个协议

2749
01:23:07,000 --> 01:23:08,000
那是另外一回事件

2750
01:23:08,000 --> 01:23:09,000
所以最好还是

2751
01:23:09,000 --> 01:23:10,000
实现一个既有的协议

2752
01:23:10,000 --> 01:23:13,000
会比较兼容性好一点

2753
01:23:13,000 --> 01:23:14,000
对

2754
01:23:14,000 --> 01:23:16,000
但是就是从医用性来讲

2755
01:23:16,000 --> 01:23:17,000
肯定那种是对

2756
01:23:17,000 --> 01:23:19,000
普通用户更有好的

2757
01:23:19,000 --> 01:23:20,000
但是这种事情

2758
01:23:20,000 --> 01:23:21,000
我们肯定是不 care 了

2759
01:23:21,000 --> 01:23:22,000
我们谁

2760
01:23:22,000 --> 01:23:24,000
我们不是普通用户

2761
01:23:29,000 --> 01:23:31,000
所以我们现在是要推荐一下

2762
01:23:31,000 --> 01:23:33,000
所有对静态

2763
01:23:33,000 --> 01:23:35,000
往家生存器的人

2764
01:23:35,000 --> 01:23:37,000
所有对静态往家生存器

2765
01:23:37,000 --> 01:23:40,000
感兴趣的人用一下预购

2766
01:23:42,000 --> 01:23:43,000
其实我还不确定

2767
01:23:43,000 --> 01:23:45,000
那个真的是适合所有人

2768
01:23:45,000 --> 01:23:47,000
因为他没有插件这一点

2769
01:23:47,000 --> 01:23:49,000
真的是挺大的一个局限

2770
01:23:49,000 --> 01:23:50,000
但是他的模板

2771
01:23:50,000 --> 01:23:52,000
我觉得对于喜欢折腾的人来说

2772
01:23:52,000 --> 01:23:54,000
或者说对于有

2773
01:23:54,000 --> 01:23:56,000
对于不管这个功能有没有用

2774
01:23:56,000 --> 01:23:58,000
现在要问这有没有功能的人来说

2775
01:23:58,000 --> 01:24:00,000
预购可能并不是非常适合

2776
01:24:00,000 --> 01:24:01,000
对

2777
01:24:01,000 --> 01:24:03,000
而且他上手也不太容易

2778
01:24:03,000 --> 01:24:04,000
他的那个模板语言

2779
01:24:04,000 --> 01:24:05,000
因为是用了

2780
01:24:05,000 --> 01:24:07,000
go 的自带那个

2781
01:24:07,000 --> 01:24:10,000
go 的标准库自带的那个模板语言

2782
01:24:10,000 --> 01:24:12,000
也不是特别的

2783
01:24:12,000 --> 01:24:14,000
没有名字就叫

2784
01:24:14,000 --> 01:24:17,000
html slash template

2785
01:24:17,000 --> 01:24:20,000
但是他的语法

2786
01:24:20,000 --> 01:24:23,000
就不是非常 intuitive

2787
01:24:23,000 --> 01:24:24,000
语法比较简单

2788
01:24:24,000 --> 01:24:26,000
他的那个数据

2789
01:24:26,000 --> 01:24:28,000
data model 比较奇怪

2790
01:24:28,000 --> 01:24:30,000
可能不是那么直观

2791
01:24:30,000 --> 01:24:31,000
我觉得

2792
01:24:32,000 --> 01:24:33,000
就特别是如果你习惯了

2793
01:24:33,000 --> 01:24:34,000
像什么 Ginger

2794
01:24:34,000 --> 01:24:37,000
还有 Ruby 那些什么 Liqo 那些 template 的时候

2795
01:24:37,000 --> 01:24:38,000
你再用这个

2796
01:24:38,000 --> 01:24:39,000
可能会觉得有点奇怪

2797
01:24:39,000 --> 01:24:40,000
而且

2798
01:24:40,000 --> 01:24:42,000
预购的 document 是

2799
01:24:42,000 --> 01:24:44,000
稍微有点差的

2800
01:24:45,000 --> 01:24:46,000
OK

2801
01:24:46,000 --> 01:24:47,000
我用一下

2802
01:24:47,000 --> 01:24:48,000
如果你只会

2803
01:24:48,000 --> 01:24:50,000
这个 php 就不要来碰一会

2804
01:24:50,000 --> 01:24:52,000
我用那个纯粹

2805
01:24:52,000 --> 01:24:55,000
就只是因为 Appleforce 的

2806
01:24:55,000 --> 01:24:56,000
这个

2807
01:24:56,000 --> 01:24:58,000
就是你到这个量

2808
01:24:58,000 --> 01:24:59,000
对你到这个量级

2809
01:24:59,000 --> 01:25:00,000
其他的那些机遇

2810
01:25:00,000 --> 01:25:02,000
解释脚本的

2811
01:25:02,000 --> 01:25:04,000
生成期都是没有办法

2812
01:25:04,000 --> 01:25:06,000
在几秒之内搞定的嘛

2813
01:25:06,000 --> 01:25:07,000
所以

2814
01:25:07,000 --> 01:25:08,000
就这一招了

2815
01:25:08,000 --> 01:25:09,000
然后就是

2816
01:25:09,000 --> 01:25:12,000
我自从对爱上 goline

2817
01:25:12,000 --> 01:25:14,000
go 这个语言之后

2818
01:25:14,000 --> 01:25:16,000
对这个单个文件

2819
01:25:16,000 --> 01:25:17,000
单个可直的文件

2820
01:25:17,000 --> 01:25:19,000
即可部署这解释

2821
01:25:19,000 --> 01:25:20,000
非常的赞

2822
01:25:20,000 --> 01:25:21,000
因为我是一个很懒的人

2823
01:25:21,000 --> 01:25:23,000
我不想去操作服务器

2824
01:25:24,000 --> 01:25:25,000
虽然我

2825
01:25:25,000 --> 01:25:26,000
爱上了原子话

2826
01:25:26,000 --> 01:25:29,000
虽然我一直在操作各种服务器

2827
01:25:29,000 --> 01:25:31,000
但是我非常讨厌这一点

2828
01:25:31,000 --> 01:25:33,000
干一行恨一行

2829
01:25:33,000 --> 01:25:34,000
确实是正常

2830
01:25:34,000 --> 01:25:36,000
什么依赖管理

2831
01:25:36,000 --> 01:25:38,000
什么部署的

2832
01:25:38,000 --> 01:25:39,000
版本管理

2833
01:25:39,000 --> 01:25:41,000
not my style

2834
01:25:41,000 --> 01:25:42,000
对

2835
01:25:42,000 --> 01:25:44,000
知道的越多就越痛恨他

2836
01:25:44,000 --> 01:25:45,000
但是

2837
01:25:45,000 --> 01:25:47,000
我觉得 goline 这个特性

2838
01:25:47,000 --> 01:25:48,000
可能也跟那个作者有关

2839
01:25:48,000 --> 01:25:50,000
作者叫 Steve Francia

2840
01:25:51,000 --> 01:25:53,000
就是我去搜这个

2841
01:25:53,000 --> 01:25:54,000
uGo 这个工具的时候

2842
01:25:54,000 --> 01:25:56,000
才知道作者原来就是

2843
01:25:56,000 --> 01:25:58,000
大名鼎鼎的 spf 13

2844
01:25:58,000 --> 01:26:00,000
我知道这个名字最早是

2845
01:26:00,000 --> 01:26:01,000
因为他的那个

2846
01:26:01,000 --> 01:26:03,000
the ultimate Vim 的指标是

2847
01:26:03,000 --> 01:26:07,000
就是他在比较早的时候推出了一个

2848
01:26:07,000 --> 01:26:11,000
就算是 Vim 的爱好者

2849
01:26:11,000 --> 01:26:14,000
爱好者所做的这么一个

2850
01:26:14,000 --> 01:26:16,000
多插件

2851
01:26:16,000 --> 01:26:18,000
白金 platin 点仓版

2852
01:26:18,000 --> 01:26:19,000
这种感觉

2853
01:26:19,000 --> 01:26:21,000
但是我一直不明白这个的 point

2854
01:26:21,000 --> 01:26:22,000
和在

2855
01:26:22,000 --> 01:26:24,000
这种东西的意义在哪

2856
01:26:24,000 --> 01:26:26,000
他像你展示了一个大牛

2857
01:26:26,000 --> 01:26:29,000
所定制出来的 Vim

2858
01:26:29,000 --> 01:26:30,000
能有多定期

2859
01:26:30,000 --> 01:26:31,000
好吧

2860
01:26:31,000 --> 01:26:33,000
但是这样学习成本好高

2861
01:26:33,000 --> 01:26:35,000
对我曾经用过一段

2862
01:26:35,000 --> 01:26:36,000
我曾经用过很多时间

2863
01:26:36,000 --> 01:26:37,000
但是毕竟 Vim 这种

2864
01:26:37,000 --> 01:26:39,000
如果你既然你是一个

2865
01:26:39,000 --> 01:26:40,000
敢于

2866
01:26:40,000 --> 01:26:41,000
或者说

2867
01:26:41,000 --> 01:26:43,000
已经沦落到用 Vim 的人

2868
01:26:43,000 --> 01:26:45,000
你肯定是一个需求非常特别

2869
01:26:45,000 --> 01:26:46,000
非常

2870
01:26:46,000 --> 01:26:48,000
没有一种

2871
01:26:48,000 --> 01:26:50,000
所谓

2872
01:26:50,000 --> 01:26:51,000
叫什么 stop version

2873
01:26:51,000 --> 01:26:53,000
就是没有一个

2874
01:26:53,000 --> 01:26:55,000
从货架上直接拿下来的产品

2875
01:26:55,000 --> 01:26:57,000
能够完全满足你需求的人

2876
01:26:57,000 --> 01:26:59,000
所以你肯定要把这个东西

2877
01:26:59,000 --> 01:27:00,000
各种 byno

2878
01:27:00,000 --> 01:27:02,000
而 spf 13 byno

2879
01:27:02,000 --> 01:27:05,000
出来的这么一个 ultimate Vim

2880
01:27:05,000 --> 01:27:08,000
最多起到的作用是

2881
01:27:08,000 --> 01:27:11,000
不是让小白金 platin 更快的上手 Vim

2882
01:27:11,000 --> 01:27:12,000
而是让

2883
01:27:12,000 --> 01:27:14,000
喜欢折腾的人可以看到这个东西

2884
01:27:14,000 --> 01:27:16,000
怎么可以被折腾

2885
01:27:16,000 --> 01:27:20,000
包括他组织 Vim 配置文件的方式

2886
01:27:20,000 --> 01:27:22,000
包括管理插件的方式

2887
01:27:22,000 --> 01:27:24,000
包括他配置插件的方式

2888
01:27:24,000 --> 01:27:26,000
包括他写了一些非常实用的小程序

2889
01:27:26,000 --> 01:27:28,000
所以它是一个标杆的作用

2890
01:27:28,000 --> 01:27:30,000
并不是让你直接

2891
01:27:30,000 --> 01:27:33,000
真的去用这个东西本身

2892
01:27:33,000 --> 01:27:36,000
我相信他还是希望有人能用的

2893
01:27:36,000 --> 01:27:38,000
但我也觉得

2894
01:27:38,000 --> 01:27:40,000
如果真的有人会

2895
01:27:40,000 --> 01:27:43,000
需要用到他所提供的那些所有功能

2896
01:27:43,000 --> 01:27:47,000
这些人绝对不会满足于就这么用这些功能

2897
01:27:47,000 --> 01:27:48,000
对 一定会去定制

2898
01:27:48,000 --> 01:27:49,000
有些奥口啊

2899
01:27:49,000 --> 01:27:51,000
一定会手仰

2900
01:27:51,000 --> 01:27:53,000
我也会去折腾他

2901
01:27:53,000 --> 01:27:56,000
对 这个人毕竟他也是个很牛的人

2902
01:27:56,000 --> 01:28:00,000
他是 mongodb 的所谓 developer advocate

2903
01:28:00,000 --> 01:28:01,000
就是我

2904
01:28:01,000 --> 01:28:03,000
怎么说

2905
01:28:03,000 --> 01:28:07,000
死者代言人是一部有些科学小说的

2906
01:28:07,000 --> 01:28:09,000
developer advocate

2907
01:28:09,000 --> 01:28:11,000
开发者代言人

2908
01:28:11,000 --> 01:28:13,000
然后搜一下这个职位

2909
01:28:13,000 --> 01:28:15,000
evangelist 的意思吗

2910
01:28:15,000 --> 01:28:17,000
对 这个职位到底是什么意思

2911
01:28:17,000 --> 01:28:22,000
就是他是为本公司的开发者说话的这么一个人

2912
01:28:22,000 --> 01:28:25,000
就是他会向外面的人宣传

2913
01:28:25,000 --> 01:28:27,000
本公司的产品都那么好

2914
01:28:27,000 --> 01:28:29,000
就忽悠开发者的

2915
01:28:29,000 --> 01:28:31,000
对 开发者大忽悠

2916
01:28:31,000 --> 01:28:32,000
可以这么理解

2917
01:28:32,000 --> 01:28:35,000
但是能够做到这种位置的人

2918
01:28:35,000 --> 01:28:37,000
基本上都非常牛

2919
01:28:37,000 --> 01:28:39,000
对

2920
01:28:39,000 --> 01:28:41,000
大家可以去尝试一下

2921
01:28:41,000 --> 01:28:43,000
但是痛苦程度

2922
01:28:43,000 --> 01:28:45,000
你们我已经给你们打过预防针了

2923
01:28:45,000 --> 01:28:47,000
你们自己想清楚

2924
01:28:47,000 --> 01:28:48,000
如果 pita

2925
01:28:48,000 --> 01:28:50,000
如果 pita 指数

2926
01:28:50,000 --> 01:28:52,000
pain-s 指数太高的话

2927
01:28:52,000 --> 01:28:53,000
本账该不复杂

2928
01:28:56,000 --> 01:28:59,000
所以你有兴趣把你的那个什么

2929
01:28:59,000 --> 01:29:01,000
那个 boketag.com 切过来吗

2930
01:29:01,000 --> 01:29:04,000
不 其实我一直在想

2931
01:29:04,000 --> 01:29:08,000
我要不要把 tipus biffle 切到静态生成

2932
01:29:08,000 --> 01:29:10,000
还是在 workpress 上面跑的

2933
01:29:10,000 --> 01:29:12,000
对 现在还跑到 workpress

2934
01:29:12,000 --> 01:29:14,000
而且比较

2935
01:29:14,000 --> 01:29:17,000
我这安全的问题我都不会的

2936
01:29:17,000 --> 01:29:19,000
有可能造成安全的一块

2937
01:29:19,000 --> 01:29:21,000
真正的答案是我不知道

2938
01:29:21,000 --> 01:29:23,000
肯定不是死

2939
01:29:23,000 --> 01:29:24,000
我觉得

2940
01:29:24,000 --> 01:29:26,000
不 你就这个把某点没有任何区别

2941
01:29:26,000 --> 01:29:28,000
你就 workpress 234 都是有安全的东西

2942
01:29:28,000 --> 01:29:30,000
你说出来有什么关系

2943
01:29:30,000 --> 01:29:33,000
不 我觉得最大问题可能是

2944
01:29:33,000 --> 01:29:36,000
在签议过程中会有很多什么图片

2945
01:29:36,000 --> 01:29:38,000
骗下烂七八糟的需要

2946
01:29:38,000 --> 01:29:40,000
对 这是一个最特性的

2947
01:29:40,000 --> 01:29:41,000
绝对即是改成相对

2948
01:29:41,000 --> 01:29:44,000
因为

2949
01:29:44,000 --> 01:29:46,000
我不知道你是怎么在你的 blog

2950
01:29:46,000 --> 01:29:50,000
或者是 apple file 4 是怎么在 blog 上插入图片的

2951
01:29:50,000 --> 01:29:52,000
至少我是所有的图片都放在 flicker 上

2952
01:29:52,000 --> 01:29:54,000
但是 flicker 被国内封了

2953
01:29:54,000 --> 01:29:55,000
但我也无所谓

2954
01:29:55,000 --> 01:29:57,000
所以对于我来说不是什么大的问题

2955
01:29:57,000 --> 01:29:59,000
我就把所有图片传到 flicker 上

2956
01:29:59,000 --> 01:30:02,000
然后 flicker 的共享功能得到那个

2957
01:30:02,000 --> 01:30:04,000
把这个图片嵌入网址

2958
01:30:04,000 --> 01:30:05,000
一出来 html

2959
01:30:05,000 --> 01:30:07,000
然后把这些 html 嵌入到我的文章

2960
01:30:07,000 --> 01:30:08,000
所有的文章

2961
01:30:08,000 --> 01:30:11,000
所以我文章基本上全都是天生可一致

2962
01:30:11,000 --> 01:30:15,000
但是如果你要把 workpress 里面的文章导出来

2963
01:30:15,000 --> 01:30:18,000
那就必然设计到一个 asset management 的问题

2964
01:30:18,000 --> 01:30:20,000
就是你要把这些

2965
01:30:20,000 --> 01:30:21,000
不需要那个

2966
01:30:21,000 --> 01:30:22,000
你传到

2967
01:30:22,000 --> 01:30:23,000
对 等一下

2968
01:30:23,000 --> 01:30:26,000
f 4 之前在 workpress 的时候那些文章就是上传到

2969
01:30:26,000 --> 01:30:29,000
workpress 有个什么 wp-content

2970
01:30:29,000 --> 01:30:31,000
然后有一个

2971
01:30:31,000 --> 01:30:32,000
upload 还是什么

2972
01:30:32,000 --> 01:30:33,000
upload 还是什么

2973
01:30:33,000 --> 01:30:35,000
upload images

2974
01:30:35,000 --> 01:30:36,000
然后其实很简单

2975
01:30:36,000 --> 01:30:38,000
你就保留那个路径

2976
01:30:38,000 --> 01:30:40,000
你在那个静态正点生成器

2977
01:30:40,000 --> 01:30:41,000
它不是大部分都会有一个

2978
01:30:41,000 --> 01:30:42,000
这个 static

2979
01:30:42,000 --> 01:30:43,000
或者是类似的这种

2980
01:30:43,000 --> 01:30:45,000
或者是 publate 这种目录

2981
01:30:45,000 --> 01:30:47,000
让你放那种不需要经过它处理

2982
01:30:47,000 --> 01:30:49,000
你直接复制过去那对文件

2983
01:30:49,000 --> 01:30:51,000
你就把整个 wp-content

2984
01:30:51,000 --> 01:30:53,000
workpress-wp-content

2985
01:30:53,000 --> 01:30:55,000
然后写上 upload

2986
01:30:55,000 --> 01:30:56,000
这个目录复制过去就好了

2987
01:30:56,000 --> 01:30:57,000
搞定

2988
01:30:57,000 --> 01:30:59,000
不需要做任何修改

2989
01:31:00,000 --> 01:31:01,000
好吧

2990
01:31:01,000 --> 01:31:03,000
我和 rex 商量一下

2991
01:31:03,000 --> 01:31:05,000
因为我相信现在的

2992
01:31:05,000 --> 01:31:08,000
评论也已经被转到了 discourse

2993
01:31:08,000 --> 01:31:09,000
所以评论

2994
01:31:09,000 --> 01:31:10,000
对 我没有讲评论

2995
01:31:10,000 --> 01:31:12,000
这个要补充一下

2996
01:31:12,000 --> 01:31:14,000
对 其实从动态网站

2997
01:31:14,000 --> 01:31:16,000
你签一道静态网站生成器

2998
01:31:16,000 --> 01:31:17,000
最大的两个问题

2999
01:31:17,000 --> 01:31:19,000
我们刚才就已经都说到了

3000
01:31:19,000 --> 01:31:21,000
一个是 set management

3001
01:31:21,000 --> 01:31:23,000
就是你之前上传的那些图片

3002
01:31:23,000 --> 01:31:24,000
怎么办

3003
01:31:24,000 --> 01:31:26,000
另外一个就是你之前的一些评论怎么办

3004
01:31:26,000 --> 01:31:28,000
对

3005
01:31:28,000 --> 01:31:29,000
你知道我怎么处理吗

3006
01:31:29,000 --> 01:31:31,000
基本上已经都有

3007
01:31:31,000 --> 01:31:32,000
你怎么处理

3008
01:31:32,000 --> 01:31:33,000
不要评论

3009
01:31:35,000 --> 01:31:37,000
这个我说说这句话

3010
01:31:37,000 --> 01:31:38,000
loures 一定很高兴

3011
01:31:40,000 --> 01:31:42,000
我可以理解 loures 是这样的人

3012
01:31:42,000 --> 01:31:44,000
这是他的神媒曲像

3013
01:31:44,000 --> 01:31:46,000
而且有发言人这么一个问题

3014
01:31:46,000 --> 01:31:47,000
就是之前 workpress 评论

3015
01:31:47,000 --> 01:31:49,000
是可以发到我们自己站点上面

3016
01:31:49,000 --> 01:31:54,000
后来已经被什么 spanbox 自动化了

3017
01:31:54,000 --> 01:31:56,000
所有的最近

3018
01:31:56,000 --> 01:31:58,000
amphibio 也有好长一段时间没有更新

3019
01:31:58,000 --> 01:32:01,000
那么就最近一两年的新增评论

3020
01:32:01,000 --> 01:32:03,000
就基本上全是 spanbox

3021
01:32:03,000 --> 01:32:05,000
所以关掉就关掉

3022
01:32:05,000 --> 01:32:06,000
我也已经无所谓

3023
01:32:06,000 --> 01:32:10,000
对 这种态度也是可以理解的

3024
01:32:10,000 --> 01:32:12,000
就你作为一个内容的产出者

3025
01:32:12,000 --> 01:32:14,000
如果你知道自己的内容足够

3026
01:32:14,000 --> 01:32:17,000
你如果你对自己的内容足够有信心

3027
01:32:17,000 --> 01:32:20,000
那么其实是不需要一天到晚开始评论

3028
01:32:20,000 --> 01:32:24,000
让一个莫名其妙的人可以

3029
01:32:24,000 --> 01:32:28,000
通过非常极低的成本抢到沙发那趟

3030
01:32:28,000 --> 01:32:30,000
真正想要跟你打交道的人

3031
01:32:30,000 --> 01:32:33,000
会想方设法的把习近平传辑给你

3032
01:32:33,000 --> 01:32:34,000
对 我觉得

3033
01:32:34,000 --> 01:32:35,000
不怎么想要告诉你的人

3034
01:32:35,000 --> 01:32:37,000
就不让他们评论好

3035
01:32:37,000 --> 01:32:39,000
对 我觉得这个是很重要的一点

3036
01:32:39,000 --> 01:32:43,000
就是要通过某种方法提高评论的成本

3037
01:32:43,000 --> 01:32:45,000
这样才可以有效的降低那种

3038
01:32:45,000 --> 01:32:48,000
什么沙发 板凳

3039
01:32:48,000 --> 01:32:50,000
spam 都不说 spam

3040
01:32:50,000 --> 01:32:51,000
那个是一个技术问题

3041
01:32:52,000 --> 01:32:55,000
就现在其实有很多渠道

3042
01:32:55,000 --> 01:32:57,000
可以给作者提出反馈了

3043
01:32:57,000 --> 01:32:59,000
比如说推特是一个渠道

3044
01:32:59,000 --> 01:33:00,000
微博是个渠道

3045
01:33:00,000 --> 01:33:02,000
再远古一点没有这些东西的时候

3046
01:33:02,000 --> 01:33:04,000
你还可以写邮件 对吧

3047
01:33:04,000 --> 01:33:07,000
所以就是真正想要给你反馈

3048
01:33:07,000 --> 01:33:09,000
想要你讨论是一个

3049
01:33:09,000 --> 01:33:11,000
有这种正确滋害的人

3050
01:33:11,000 --> 01:33:14,000
他肯定会用各种方法找到你

3051
01:33:14,000 --> 01:33:17,000
但是你没有必要把这个评论

3052
01:33:17,000 --> 01:33:19,000
做得那么易用或者易读

3053
01:33:19,000 --> 01:33:21,000
而且反过来从用户的角度来讲

3054
01:33:21,000 --> 01:33:24,000
其实很多年以前那种各种

3055
01:33:24,000 --> 01:33:25,000
什么网站也好

3056
01:33:25,000 --> 01:33:28,000
还有什么个人博费

3057
01:33:28,000 --> 01:33:29,000
下面对我一个评论

3058
01:33:29,000 --> 01:33:30,000
你就贴了个评论

3059
01:33:30,000 --> 01:33:32,000
你也不大可能会记得回去看

3060
01:33:32,000 --> 01:33:34,000
那个博主给你回复了什么 对吧

3061
01:33:37,000 --> 01:33:38,000
是吧

3062
01:33:38,000 --> 01:33:41,000
我觉得还是跟目前沟通的渠道多起来

3063
01:33:41,000 --> 01:33:43,000
有所关系

3064
01:33:43,000 --> 01:33:46,000
因为比如说我在德国

3065
01:33:46,000 --> 01:33:48,000
有一位挺好的朋友叫做

3066
01:33:48,000 --> 01:33:50,000
他的网名叫做点问号语

3067
01:33:50,000 --> 01:33:52,000
一定要讲一个点问号语

3068
01:33:52,000 --> 01:33:54,000
他就是在我

3069
01:33:54,000 --> 01:33:56,000
在读我的 blog

3070
01:33:56,000 --> 01:33:58,000
从当时我在德国

3071
01:33:58,000 --> 01:33:59,000
他在中国

3072
01:33:59,000 --> 01:34:02,000
一直读到他也来德国念书

3073
01:34:02,000 --> 01:34:06,000
然后后来我们两个在德国见面

3074
01:34:06,000 --> 01:34:09,000
这一系列都是通过他在我的 blog 上留言开始

3075
01:34:09,000 --> 01:34:11,000
所以

3076
01:34:11,000 --> 01:34:12,000
当然这也只是个例吧

3077
01:34:12,000 --> 01:34:14,000
因为我可能通过这种方式

3078
01:34:14,000 --> 01:34:17,000
以这种方式认识的朋友只有他一个人

3079
01:34:17,000 --> 01:34:19,000
这肯定是一种方式

3080
01:34:19,000 --> 01:34:21,000
不管怎么说

3081
01:34:21,000 --> 01:34:24,000
这种形式已经变得有不重要

3082
01:34:24,000 --> 01:34:25,000
对

3083
01:34:25,000 --> 01:34:27,000
而且现在基本上

3084
01:34:27,000 --> 01:34:31,000
那种每个赛的自己的那种评论功

3085
01:34:31,000 --> 01:34:33,000
都沦为了 spam 的战场

3086
01:34:33,000 --> 01:34:35,000
所以很多人去把它彻底关掉

3087
01:34:35,000 --> 01:34:37,000
然后就像我刚刚讲的

3088
01:34:37,000 --> 01:34:40,000
你要找到我很简单的去社交媒体上

3089
01:34:40,000 --> 01:34:41,000
然后找我

3090
01:34:41,000 --> 01:34:42,000
或者给我发邮件

3091
01:34:42,000 --> 01:34:43,000
然后邮件的话

3092
01:34:43,000 --> 01:34:44,000
对

3093
01:34:44,000 --> 01:34:45,000
只要你愿意找到我

3094
01:34:45,000 --> 01:34:46,000
你总是可以找到我

3095
01:34:46,000 --> 01:34:47,000
对

3096
01:34:47,000 --> 01:34:49,000
邮件地址就在最顶上

3097
01:34:49,000 --> 01:34:51,000
也很简单的一件事

3098
01:34:51,000 --> 01:34:52,000
还有一个

3099
01:34:52,000 --> 01:34:54,000
如果你确实想要评论的话

3100
01:34:54,000 --> 01:34:55,000
也有一些方法

3101
01:34:55,000 --> 01:34:58,000
国外的话有那个叫

3102
01:34:58,000 --> 01:34:59,000
你叫什么来的

3103
01:34:59,000 --> 01:35:01,000
discuss

3104
01:35:01,000 --> 01:35:03,000
就是有个第三方的评论的

3105
01:35:03,000 --> 01:35:06,000
支持的一个平台叫什么

3106
01:35:06,000 --> 01:35:08,000
对 就是 discuss

3107
01:35:08,000 --> 01:35:09,000
discuss 对吧

3108
01:35:09,000 --> 01:35:10,000
这是一个

3109
01:35:10,000 --> 01:35:11,000
上次我们讲键盘

3110
01:35:11,000 --> 01:35:12,000
那时候也提到了

3111
01:35:12,000 --> 01:35:15,000
那个 stack overflow 的创始人

3112
01:35:15,000 --> 01:35:18,000
去后来做了一个叫 discuss 的

3113
01:35:18,000 --> 01:35:19,000
这么一个平台

3114
01:35:19,000 --> 01:35:22,000
然后它可以说是一个增强版的 discuss

3115
01:35:22,000 --> 01:35:24,000
就是增强版的 discuss 吧

3116
01:35:24,000 --> 01:35:27,000
就当你可以集中的去

3117
01:35:27,000 --> 01:35:28,000
就作为

3118
01:35:28,000 --> 01:35:29,000
你说作为这个内容的

3119
01:35:29,000 --> 01:35:30,000
这个提供方也好

3120
01:35:30,000 --> 01:35:31,000
还是内容的消费方也好

3121
01:35:31,000 --> 01:35:33,000
你们都可以在一个统一的地方

3122
01:35:33,000 --> 01:35:36,000
去完成这个评论和回复的功能

3123
01:35:36,000 --> 01:35:38,000
就不是像之前那种

3124
01:35:38,000 --> 01:35:40,000
你可能上了五个博客站点

3125
01:35:40,000 --> 01:35:41,000
你都留了评论

3126
01:35:41,000 --> 01:35:42,000
你还得挨个去看

3127
01:35:42,000 --> 01:35:44,000
这就显然太不用户有好了

3128
01:35:44,000 --> 01:35:47,000
对于真正想要跟你交流的人来讲

3129
01:35:47,000 --> 01:35:48,000
所以这也是一个

3130
01:35:48,000 --> 01:35:49,000
可以考虑的方法

3131
01:35:49,000 --> 01:35:51,000
然后他们的那个就很简单了

3132
01:35:51,000 --> 01:35:52,000
就是你在你的这个

3133
01:35:52,000 --> 01:35:54,000
静态博客的页面上

3134
01:35:54,000 --> 01:35:59,000
嵌入一个 java script 的脚本

3135
01:35:59,000 --> 01:36:00,000
然后这 java script

3136
01:36:00,000 --> 01:36:02,000
脚会动态的生成

3137
01:36:02,000 --> 01:36:04,000
一个评论的界面

3138
01:36:04,000 --> 01:36:05,000
然后它可以写

3139
01:36:05,000 --> 01:36:06,000
写评论之后

3140
01:36:06,000 --> 01:36:09,000
就会直接发到那个像 discourse

3141
01:36:09,000 --> 01:36:10,000
或者 discuss 这种

3142
01:36:10,000 --> 01:36:12,000
第三方的评论平台上去

3143
01:36:12,000 --> 01:36:13,000
这也是一种玩法

3144
01:36:13,000 --> 01:36:14,000
不过我不知道国内

3145
01:36:14,000 --> 01:36:15,000
有没有这种类似的东西

3146
01:36:15,000 --> 01:36:17,000
好像你国内这个

3147
01:36:17,000 --> 01:36:20,000
环境不太好

3148
01:36:20,000 --> 01:36:23,000
在网页上内欠微博

3149
01:36:23,000 --> 01:36:24,000
环境不太好

3150
01:36:24,000 --> 01:36:25,000
现在反过来

3151
01:36:25,000 --> 01:36:26,000
反过来

3152
01:36:26,000 --> 01:36:28,000
现在还基本上都是一个

3153
01:36:28,000 --> 01:36:30,000
都是说你要在微博上给我留言

3154
01:36:30,000 --> 01:36:32,000
然后你得先粉我对吧

3155
01:36:32,000 --> 01:36:34,000
这种这种方式来做的

3156
01:36:34,000 --> 01:36:35,000
其实也蛮好的

3157
01:36:35,000 --> 01:36:36,000
粉丝说也上去了

3158
01:36:36,000 --> 01:36:38,000
什么 spam 也控制住

3159
01:36:38,000 --> 01:36:39,000
大家都蛮开心的

3160
01:36:39,000 --> 01:36:40,000
我觉得也是好事

3161
01:36:40,000 --> 01:36:42,000
对

3162
01:36:42,000 --> 01:36:44,000
而且国内也是很多

3163
01:36:44,000 --> 01:36:46,000
还是有很多人在用什么

3164
01:36:46,000 --> 01:36:47,000
新浪博客

3165
01:36:47,000 --> 01:36:49,000
或者是天哪

3166
01:36:49,000 --> 01:36:50,000
真的吗

3167
01:36:50,000 --> 01:36:51,000
还有人在用

3168
01:36:51,000 --> 01:36:52,000
真的

3169
01:36:52,000 --> 01:36:54,000
还有 QQ 空间

3170
01:36:54,000 --> 01:36:55,000
博客大巴还在

3171
01:36:55,000 --> 01:36:56,000
QQ 空间

3172
01:36:56,000 --> 01:36:57,000
QQ 空间

3173
01:36:57,000 --> 01:36:58,000
更是一战式体验

3174
01:36:58,000 --> 01:36:59,000
只要 QQ 登陆了

3175
01:36:59,000 --> 01:37:00,000
你在上面干什么

3176
01:37:00,000 --> 01:37:01,000
都是互动

3177
01:37:01,000 --> 01:37:03,000
那个都不叫博客平台

3178
01:37:03,000 --> 01:37:04,000
对

3179
01:37:04,000 --> 01:37:05,000
身体好近

3180
01:37:05,000 --> 01:37:07,000
对身体好近还是差太多

3181
01:37:07,000 --> 01:37:08,000
对

3182
01:37:08,000 --> 01:37:09,000
所以你说小白写

3183
01:37:09,000 --> 01:37:11,000
博客那肯定上什么

3184
01:37:11,000 --> 01:37:12,000
facebook 之类的写的

3185
01:37:12,000 --> 01:37:14,000
QQ 空间里面写的

3186
01:37:16,000 --> 01:37:17,000
这才是正途

3187
01:37:17,000 --> 01:37:18,000
我们谈的东西

3188
01:37:18,000 --> 01:37:19,000
有点

3189
01:37:19,000 --> 01:37:21,000
还是有点太拓力现实

3190
01:37:21,000 --> 01:37:22,000
不拓力现实

3191
01:37:22,000 --> 01:37:23,000
这个什么

3192
01:37:23,000 --> 01:37:24,000
our world

3193
01:37:24,000 --> 01:37:25,000
reality

3194
01:37:27,000 --> 01:37:29,000
别人的世界都不是现实

3195
01:37:33,000 --> 01:37:35,000
就这科药

3196
01:37:38,000 --> 01:37:40,000
行天就这样

3197
01:37:40,000 --> 01:37:41,000
行

3198
01:37:41,000 --> 01:37:42,000
差不多就这样

3199
01:37:42,000 --> 01:37:43,000
感觉好乱

3200
01:37:43,000 --> 01:37:45,000
对

3201
01:37:45,000 --> 01:37:48,000
我上一期录的时候是深夜

3202
01:37:48,000 --> 01:37:49,000
我觉得

3203
01:37:49,000 --> 01:37:50,000
好像头脑都看清楚

3204
01:37:50,000 --> 01:37:51,000
这一次又是深夜录的

3205
01:37:51,000 --> 01:37:52,000
所以

3206
01:37:52,000 --> 01:37:53,000
下次我们改白天

3207
01:37:53,000 --> 01:37:54,000
对

3208
01:37:54,000 --> 01:37:56,000
下次尽量改个白天

3209
01:37:56,000 --> 01:37:57,000
但不跟怎么说

3210
01:37:57,000 --> 01:37:58,000
这一期完成了

3211
01:37:58,000 --> 01:38:01,000
那希望大家能够喜欢

3212
01:38:02,000 --> 01:38:04,000
现在是

3213
01:38:04,000 --> 01:38:06,000
zulu time

3214
01:38:06,000 --> 01:38:07,000
百分之

3215
01:38:07,000 --> 01:38:09,000
百分好 H 点的

3216
01:38:09,000 --> 01:38:10,000
您正在收听

3217
01:38:10,000 --> 01:38:11,000
或者正在反复

3218
01:38:11,000 --> 01:38:12,000
一听再听的是

3219
01:38:12,000 --> 01:38:13,000
内核狗狂一抗

3220
01:38:13,000 --> 01:38:14,000
一当

3221
01:38:14,000 --> 01:38:16,000
由我和 Rail 主持的 PoteCast

3222
01:38:16,000 --> 01:38:17,000
节目

3223
01:38:17,000 --> 01:38:19,000
今天您听到了是第 3 期

3224
01:38:19,000 --> 01:38:22,000
我们讲的主题是

3225
01:38:22,000 --> 01:38:25,000
静态网站生成戏

3226
01:38:25,000 --> 01:38:27,000
我们目前已经改成了

3227
01:38:27,000 --> 01:38:28,000
两周一期

3228
01:38:28,000 --> 01:38:29,000
所以

3229
01:38:29,000 --> 01:38:30,000
下一期的话

3230
01:38:30,000 --> 01:38:31,000
将是两周日后

3231
01:38:31,000 --> 01:38:33,000
还是星期天播出

3232
01:38:33,000 --> 01:38:35,000
感谢您的收听

3233
01:38:35,000 --> 01:38:37,000
就这样吧

3234
01:38:37,000 --> 01:38:38,000
拜拜

3235
01:38:40,000 --> 01:38:42,000
你知道在狗里面

3236
01:38:42,000 --> 01:38:43,000
就是

3237
01:38:43,000 --> 01:38:45,000
就是格式化时间

3238
01:38:45,000 --> 01:38:47,000
不是通过这种方式来实现的吗

3239
01:38:48,000 --> 01:38:50,000
那是怎么实现的

3240
01:38:50,000 --> 01:38:52,000
它那个方法很机智的

3241
01:38:52,000 --> 01:38:54,000
它规定了一个

3242
01:38:54,000 --> 01:38:55,000
时间点

3243
01:38:55,000 --> 01:38:57,000
就是一个特别的时间点

3244
01:38:57,000 --> 01:38:58,000
然后

3245
01:38:58,000 --> 01:38:59,000
你直接照着

3246
01:38:59,000 --> 01:39:01,000
你想要的格式

3247
01:39:01,000 --> 01:39:03,000
书写那个时间点就好

3248
01:39:03,000 --> 01:39:04,000
没有我意思吗

3249
01:39:04,000 --> 01:39:05,000
就是比如说

3250
01:39:05,000 --> 01:39:06,000
你想要格式化是

3251
01:39:06,000 --> 01:39:08,000
比较近的 2014

3252
01:39:08,000 --> 01:39:09,000
橫杠

3253
01:39:09,000 --> 01:39:10,000
10 月

3254
01:39:10,000 --> 01:39:11,000
就是 10 杠

3255
01:39:11,000 --> 01:39:12,000
然后 20

3256
01:39:12,000 --> 01:39:14,000
然后杠极点几分对吧

3257
01:39:14,000 --> 01:39:15,000
然后你就按

3258
01:39:15,000 --> 01:39:16,000
你想

3259
01:39:16,000 --> 01:39:19,000
你脑海中想象的这个格式

3260
01:39:19,000 --> 01:39:20,000
把它给定的那个时间点

3261
01:39:20,000 --> 01:39:21,000
给你写出来

3262
01:39:21,000 --> 01:39:22,000
然后你用那个作为一个格式

3263
01:39:22,000 --> 01:39:24,000
trap 去 format 的那个制服

3264
01:39:24,000 --> 01:39:25,000
那个时间

3265
01:39:25,000 --> 01:39:27,000
就可以变成你想要的格式

3266
01:39:27,000 --> 01:39:29,000
问题在于那个 format 的制服

3267
01:39:29,000 --> 01:39:30,000
trap 怎么写

3268
01:39:30,000 --> 01:39:31,000
你刚才说的是

3269
01:39:31,000 --> 01:39:33,000
你有一个知道的时间点

3270
01:39:33,000 --> 01:39:35,000
然后你要把这个知道的时间点

3271
01:39:35,000 --> 01:39:38,000
格式化成某一个特定的时间

3272
01:39:38,000 --> 01:39:40,000
不对就是某一个特定的格式

3273
01:39:40,000 --> 01:39:41,000
你现在的问题就是

3274
01:39:41,000 --> 01:39:43,000
你有一个任意时间的一个

3275
01:39:43,000 --> 01:39:45,000
一个 day time 的一个一个

3276
01:39:45,000 --> 01:39:46,000
一个变量

3277
01:39:46,000 --> 01:39:48,000
你要把它变成一个

3278
01:39:48,000 --> 01:39:49,000
叫什么

3279
01:39:49,000 --> 01:39:51,000
一个制服 trap 对吧

3280
01:39:51,000 --> 01:39:52,000
然后这个制服 trap

3281
01:39:52,000 --> 01:39:54,000
你心目中是有一个指定的

3282
01:39:54,000 --> 01:39:55,000
格式长的样子的

3283
01:39:55,000 --> 01:39:57,000
然后它在我们比如说 C 系的

3284
01:39:57,000 --> 01:39:58,000
也或者像

3285
01:39:58,000 --> 01:39:59,000
pixel ruby 这些语言

3286
01:39:59,000 --> 01:40:00,000
就是有一种那种

3287
01:40:00,000 --> 01:40:01,000
就是 placeholder

3288
01:40:01,000 --> 01:40:02,000
刚才我们讲的

3289
01:40:02,000 --> 01:40:03,000
hp 分号 m 这种方式

3290
01:40:03,000 --> 01:40:07,000
来指代某一种类型的时间的

3291
01:40:07,000 --> 01:40:09,000
制服串的形式对吧

3292
01:40:10,000 --> 01:40:11,000
对

3293
01:40:11,000 --> 01:40:12,000
然后但是

3294
01:40:12,000 --> 01:40:13,000
它就说

3295
01:40:13,000 --> 01:40:14,000
那个太麻烦

3296
01:40:14,000 --> 01:40:15,000
太不直观了

3297
01:40:15,000 --> 01:40:16,000
比较难

3298
01:40:16,000 --> 01:40:18,000
你还去查手册怎么看

3299
01:40:18,000 --> 01:40:20,000
这个你只要记住一件事情

3300
01:40:20,000 --> 01:40:21,000
就是你记住一个时间点

3301
01:40:21,000 --> 01:40:24,000
就是 2006 年 1 月 2 号

3302
01:40:25,000 --> 01:40:27,000
的 3.4 分 5 秒

3303
01:40:28,000 --> 01:40:29,000
这个时间点

3304
01:40:30,000 --> 01:40:31,000
然后你用

3305
01:40:31,000 --> 01:40:33,000
你希望的那个格式

3306
01:40:33,000 --> 01:40:35,000
把这个时间写出来

3307
01:40:35,000 --> 01:40:37,000
就成一个制服串对吧

3308
01:40:38,000 --> 01:40:39,000
然后你把这个制服串

3309
01:40:39,000 --> 01:40:41,000
作为这个格式的话

3310
01:40:41,000 --> 01:40:43,000
你任意时间的制服串

3311
01:40:43,000 --> 01:40:45,000
它就得到你需要的那个格式了

3312
01:40:48,000 --> 01:40:49,000
可是他怎么知道

3313
01:40:49,000 --> 01:40:50,000
这个没有解释进入

3314
01:40:50,000 --> 01:40:51,000
就是他怎么知道

3315
01:40:51,000 --> 01:40:53,000
这个制服串里面的哪一部分

3316
01:40:53,000 --> 01:40:56,000
你需要被用目标时间替换掉了

3317
01:40:56,000 --> 01:40:57,000
所以你听刚才我讲的那张

3318
01:40:57,000 --> 01:41:02,000
是 2006 年 1 月 2 日 34 分 5 秒

3319
01:41:05,000 --> 01:41:06,000
你看就是

3320
01:41:07,000 --> 01:41:08,000
每一个都是独特的

3321
01:41:08,000 --> 01:41:09,000
每一个都

3322
01:41:09,000 --> 01:41:10,000
我大概理解了

3323
01:41:10,000 --> 01:41:12,000
就是你在这里面

3324
01:41:12,000 --> 01:41:14,000
你给了一个样粒自服串

3325
01:41:14,000 --> 01:41:15,000
然后他可以自动的

3326
01:41:15,000 --> 01:41:17,000
三炮智能推倒出

3327
01:41:17,000 --> 01:41:19,000
这里面哪一部分是哪一个时间

3328
01:41:19,000 --> 01:41:21,000
是哪一个时间

3329
01:41:21,000 --> 01:41:22,000
可是现在的问题是

3330
01:41:22,000 --> 01:41:24,000
比如说我要实现这名功能

3331
01:41:24,000 --> 01:41:29,000
每当你执行到这一个语句的时候

3332
01:41:29,000 --> 01:41:33,000
他就会打印出当前时间

3333
01:41:33,000 --> 01:41:36,000
然后当前时间必须是

3334
01:41:36,000 --> 01:41:38,000
现在是极级点 极级分

3335
01:41:38,000 --> 01:41:40,000
应该怎么实现呢

3336
01:41:40,000 --> 01:41:41,000
你当前时间

3337
01:41:41,000 --> 01:41:44,000
你是只是取 NOW 那个函数

3338
01:41:44,000 --> 01:41:45,000
对了

3339
01:41:45,000 --> 01:41:47,000
NOW 那个函数得到当前时间的一个变量

3340
01:41:47,000 --> 01:41:48,000
但是这个变量

3341
01:41:48,000 --> 01:41:51,000
它的内部是一个整数来表示

3342
01:41:51,000 --> 01:41:53,000
从 Unix Time 的方式来表示

3343
01:41:53,000 --> 01:41:54,000
举个例子

3344
01:41:54,000 --> 01:41:55,000
但是它跟它怎么格式化

3345
01:41:55,000 --> 01:41:57,000
这个过程并没有关系

3346
01:41:57,000 --> 01:41:59,000
你还是用这个方式来格式化

3347
01:41:59,000 --> 01:42:00,000
比如说你当前是

3348
01:42:00,000 --> 01:42:03,000
比如说你要 10 点 10 分的话

3349
01:42:03,000 --> 01:42:05,000
你就写个

3350
01:42:06,000 --> 01:42:08,000
我看 3 分 4 秒

3351
01:42:08,000 --> 01:42:10,000
03 冒号 04 就可以了

3352
01:42:10,000 --> 01:42:11,000
你可以看一下

3353
01:42:11,000 --> 01:42:15,000
它那个实现方式非常神奇

3354
01:42:15,000 --> 01:42:16,000
很不一样

3355
01:42:16,000 --> 01:42:17,000
就这个好像是

3356
01:42:17,000 --> 01:42:18,000
我只有在这里面

3357
01:42:18,000 --> 01:42:19,000
见过这种实现方式

3358
01:42:19,000 --> 01:42:21,000
就够里面这种方式来实现

3359
01:42:21,000 --> 01:42:22,000
其他的都是用那种

3360
01:42:22,000 --> 01:42:24,000
placeholder 的方式来实现

3361
01:42:25,000 --> 01:42:26,000
这么说

3362
01:42:26,000 --> 01:42:27,000
我在那个

3363
01:42:28,000 --> 01:42:29,000
咱们已经

3364
01:42:29,000 --> 01:42:30,000
我现在挺路

3365
01:42:30,000 --> 01:42:32,000
这一段应该没办法录进去

3366
01:42:32,000 --> 01:42:33,000
录进去没关系

3367
01:42:33,000 --> 01:42:34,000
等 Lors 去捡就好

3368
01:42:35,000 --> 01:42:36,000
OK

3369
01:42:36,000 --> 01:42:38,000
好 我给你发一段那个

3370
01:42:38,000 --> 01:42:39,000
format 足处

3371
01:42:39,000 --> 01:42:41,000
你最简单的方法就是

3372
01:42:41,000 --> 01:42:43,000
你把这一段 Python 代码

3373
01:42:43,000 --> 01:42:45,000
转换成 Go 的方式告诉我

3374
01:42:45,000 --> 01:42:46,000
叫 Go 怎么写出来

3375
01:42:46,000 --> 01:42:48,000
好 你们把它打给我

3376
01:43:02,000 --> 01:43:03,000
Sky

3377
01:43:10,000 --> 01:43:11,000
Python 代码

3378
01:43:11,000 --> 01:43:13,000
就是这样

3379
01:43:15,000 --> 01:43:17,000
我这些影破了

3380
01:43:17,000 --> 01:43:18,000
我就不写了

3381
01:43:18,000 --> 01:43:19,000
就是我就直接写了

3382
01:43:20,000 --> 01:43:22,000
谈点到点

3383
01:43:22,000 --> 01:43:24,000
format

3384
01:43:38,000 --> 01:43:39,000
你把我意思弄完

3385
01:43:40,000 --> 01:43:41,000
可是他怎么知道

3386
01:43:41,000 --> 01:43:42,000
这不是 0304 分

3387
01:43:42,000 --> 01:43:43,000
而不是 0304 秒

3388
01:43:43,000 --> 01:43:44,000
0304 秒

3389
01:43:44,000 --> 01:43:46,000
因为他的那个指定时间是这个

3390
01:43:52,000 --> 01:43:54,000
就是这里面的 3 和 4

3391
01:43:54,000 --> 01:43:56,000
就是对应的是 3 分钟

3392
01:43:56,000 --> 01:43:58,000
34 分

3393
01:43:59,000 --> 01:44:01,000
所以这里面每一部分都必须是独特

3394
01:44:01,000 --> 01:44:02,000
独特

3395
01:44:02,000 --> 01:44:04,000
就这个他的那个指定的那个时间

3396
01:44:04,000 --> 01:44:05,000
是一圈

3397
01:44:05,000 --> 01:44:06,000
选特别巧

3398
01:44:06,000 --> 01:44:07,000
我现在明白了

3399
01:44:07,000 --> 01:44:08,000
就非常巧嘛

3400
01:44:08,000 --> 01:44:09,000
就等于选一个

3401
01:44:09,000 --> 01:44:10,000
选一个 standard format

3402
01:44:10,000 --> 01:44:12,000
然后让这个

3403
01:44:12,000 --> 01:44:14,000
每一个 standard format 都具有独一无二性

3404
01:44:14,000 --> 01:44:16,000
然后你总能找

3405
01:44:16,000 --> 01:44:17,000
然后他可以自动通过

3406
01:44:17,000 --> 01:44:19,000
通过这个 format 来推导出

3407
01:44:20,000 --> 01:44:21,000
我靠 这是

3408
01:44:21,000 --> 01:44:23,000
这算 over engineer 的吧

3409
01:44:23,000 --> 01:44:25,000
不但是你不觉得这个很直观吗

3410
01:44:25,000 --> 01:44:26,000
不需要看

3411
01:44:26,000 --> 01:44:27,000
就是你只需要寄这个

3412
01:44:27,000 --> 01:44:28,000
这个好

3413
01:44:28,000 --> 01:44:29,000
这个很好寄

3414
01:44:29,000 --> 01:44:30,000
我觉得这个很好寄

3415
01:44:30,000 --> 01:44:31,000
我觉得第一次看到这个

3416
01:44:31,000 --> 01:44:32,000
肯定会非常运的

3417
01:44:32,000 --> 01:44:34,000
对 我第一次看的时候

3418
01:44:34,000 --> 01:44:35,000
我也觉得 哇 这什么

3419
01:44:35,000 --> 01:44:36,000
好奇怪呀

3420
01:44:36,000 --> 01:44:37,000
但是用过几次

3421
01:44:37,000 --> 01:44:38,000
我发现 哇

3422
01:44:38,000 --> 01:44:40,000
每次都不需要去查手册 超好

3423
01:44:42,000 --> 01:44:43,000
好吧

3424
01:44:43,000 --> 01:44:45,000
也许真的是如同所有

3425
01:44:45,000 --> 01:44:47,000
所有像我这个传

3426
01:44:48,000 --> 01:44:50,000
go lang 福音的人说的一样

3427
01:44:50,000 --> 01:44:51,000
go lang 真的是一个

3428
01:44:51,000 --> 01:44:52,000
经过深思熟绿的

3429
01:44:52,000 --> 01:44:53,000
需要解决切实问题

3430
01:44:53,000 --> 01:44:55,000
才发明出来

3431
01:44:55,000 --> 01:44:56,000
这也是一样

3432
01:44:56,000 --> 01:44:57,000
也许这种方式

3433
01:44:57,000 --> 01:44:58,000
解决切实问题

3434
01:44:58,000 --> 01:45:00,000
切实的问题的确比较好

3435
01:45:01,000 --> 01:45:03,000
对 我觉得这个

3436
01:45:03,000 --> 01:45:04,000
好 下次我可以说

3437
01:45:04,000 --> 01:45:06,000
你可以 下次我就可以随便说了

3438
01:45:06,000 --> 01:45:07,000
现在是

3439
01:45:08,000 --> 01:45:11,000
GMT 隔离位置标准时

3440
01:45:11,000 --> 01:45:14,000
1.54 分 48 秒

3441
01:45:17,000 --> 01:45:18,000
您现在收听到的是

3442
01:45:18,000 --> 01:45:19,000
我太本

3443
01:45:19,000 --> 01:45:21,000
好了 这期节目就这样了

3444
01:45:21,000 --> 01:45:22,000
拜拜

3445
01:45:24,000 --> 01:45:25,000
拜拜

